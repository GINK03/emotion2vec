{"tags": ["PHP", "zend-expressive", "ZendFramework"], "context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f\u682a\u5f0f\u4f1a\u793e\u30a2\u30a4\u30b9\u30bf\u30a4\u30eb\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e10\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\nPSR-7\u5bfe\u5fdc\u306ezend-expressive\u3001\u6ce8\u76ee\u3057\u3066\u3044\u308b\u65b9\u3084\u3059\u3067\u306b\u5229\u7528\u3057\u3066\u3044\u308b\u65b9\u3082\u591a\u3044\u3068\u304a\u3082\u3044\u307e\u3059\u3002\nPSR-7\u5bfe\u5fdc\u306e\u30de\u30a4\u30af\u30ed\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\u306f\u3001\u672c\u30a8\u30f3\u30c8\u30ea\u3067\u6271\u3046zend-expressive\u3092\u9664\u3044\u3066\u3001\n\u73fe\u5728\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\nslim3\nradarphp/Radar.Project\nsparkphp/project\nzend-expressive\u306f\u30eb\u30fc\u30bf\u3084DI\u30b3\u30f3\u30c6\u30ca\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\n\u958b\u767a\u8005\u306e\u958b\u767a\u30b9\u30bf\u30a4\u30eb\u3084\u8981\u4ef6\u306b\u5408\u308f\u305b\u3066\u81ea\u7531\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7d44\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u30de\u30a4\u30af\u30ed\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3001\n\u4e3b\u306bHTTP\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u4e3b\u8ef8\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nzend-expressive\u306e\u30b9\u30b1\u30eb\u30c8\u30f3\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\ncomposer\u306ecreate-project\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\n\u3044\u308d\u3093\u306a\u65b9\u304c\u30d6\u30ed\u30b0\u306a\u3069\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\n$ composer create-project -s rc zendframework/zend-expressive-skeleton expressive\n\n\u30b9\u30b1\u30eb\u30c8\u30f3\u3092\u4f7f\u308f\u305a\u306b\u3001expressive\u3092\u5229\u7528\u3057\u3066\u72ec\u81ea\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u69cb\u7bc9\u3059\u308b\u5834\u5408\u306f\u3001\nzendframework/zend-expressive\u5358\u4f53\u3067\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u30b9\u30b1\u30eb\u30c8\u30f3\u3092\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u51e6\u7406\u306e\u6d41\u308c\u3092\u8ffd\u3044\u306a\u304c\u3089\u3001\n\u5c11\u3057\u3060\u3051\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5165\u308c\u66ff\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u3053\u3067\u306ffastRoute, serviceManager\u3092\u9078\u629e\u3057\u3066\u3044\u307e\u3059\n\n\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8 public/index.php\npublic/index.php\u3067HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u69cb\u7bc9\u3055\u308c\u307e\u3059\u3002\n/** @var \\Interop\\Container\\ContainerInterface $container */\n$container = require 'config/container.php';\n\n/** @var \\Zend\\Expressive\\Application $app */\n$app = $container->get('Zend\\Expressive\\Application');\n$app->run();\n\n\u6700\u521d\u306b\u30b3\u30f3\u30c6\u30ca\u306e\u8a2d\u5b9a\u304c\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\nconfig/container.php\nuse Zend\\ServiceManager\\Config;\nuse Zend\\ServiceManager\\ServiceManager;\n\n// Load configuration\n$config = require __DIR__ . '/config.php';\n\n// Build container\n$container = new ServiceManager(new Config($config['dependencies']));\n\n// Inject config\n$container->setService('config', $config);\n\nreturn $container;\n\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u8a2d\u5b9a\u60c5\u5831\u3084\u30af\u30e9\u30b9\u306e\u4f9d\u5b58\u95a2\u4fc2\u306a\u3069\u304c\u3053\u3053\u3067\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002\nconfig.php\u3067\u306fconfig/autoload\u914d\u4e0b\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u5bfe\u8c61\u306b\u8a2d\u5b9a\u5024\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\nforeach (Glob::glob('config/autoload/{{,*.}global,{,*.}local}.php', Glob::GLOB_BRACE) as $file) {\n    $config = ArrayUtils::merge($config, include $file);\n}\n\nZend\\ServiceManager\\ServiceManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3001\n\u8aad\u307f\u8fbc\u3093\u3060\u8a2d\u5b9a\u3092config\u3068\u3044\u3046\u30b5\u30fc\u30d3\u30b9\u540d\u3067ServiceManager\u306b\u767b\u9332\u3057\u307e\u3059\u3002\nServiceManager\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u6642\u306bZend\\ServiceManager\\Config\u30af\u30e9\u30b9\u306e\nconfigureServiceManager\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u305d\u308c\u305e\u308c\u306e\u5024\u3092\u30b3\u30f3\u30c6\u30ca\u304c\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u51e6\u7406\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\nZend\\ServiceManager\\Config\n\u4f8b\u3048\u3070\u8a2d\u5b9a\u5024\u306e\u914d\u5217\u306b'factories'\u30ad\u30fc\u304c\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\nforeach ($this->getFactories() as $name => $factory) {\n    $serviceManager->setFactory($name, $factory);\n}\n\nconfig/autoload/dependencies.global.php\u3092\u4f8b\u3068\u3059\u308b\u3068\u3001\n'factories' => [\n    Application::class => ApplicationFactory::class,\n    // \u7701\u7565\n],\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u767b\u9332\u3055\u308c\u307e\u3059\u3002\n  #canonicalNames: array:1 [\u25bc\n    \"Zend\\Expressive\\Application\" => \"zendexpressiveapplication\"\n  ]\n  #allowOverride: false\n  #invokableClasses: []\n  #factories: array:1 [\u25bc\n    \"zendexpressiveapplication\" => \"Zend\\Expressive\\Container\\ApplicationFactory\"\n  ]\n\n\u6700\u5f8c\u306b\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3067ServiceManager\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\n\u3053\u306eZend\\ServiceManager\\ServiceManager\u30af\u30e9\u30b9\u306fInterop\\Container\\ContainerInterface\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3067\u3001\nexpressive\u3067\u5229\u7528\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u306f\u3001\n\u3053\u306eInterop\\Container\\ContainerInterface\u3092\u5b9f\u88c5\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308c\u3070\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001phpdoc\u306b\u306fServiceManager\u3067\u306f\u306a\u304f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n/** @var \\Interop\\Container\\ContainerInterface $container */\n$container = require 'config/container.php';\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u53d6\u5f97\nindex.php\u306b\u3042\u308b\u4e0b\u8a18\u306e\u884c\u3067zend-expressive\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n$app = $container->get('Zend\\Expressive\\Application');\n\n\u3053\u3053\u3067\u306fInterop\\Container\\ContainerInterface\u3092\u5b9f\u88c5\u3057\u305f\nZend\\ServiceManager\\ServiceManager\u30af\u30e9\u30b9\u306eget\u30e1\u30bd\u30c3\u30c9\u304c\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nget\u30e1\u30bd\u30c3\u30c9\u306f\u30b3\u30f3\u30c6\u30ca\u3078\u306e\u767b\u9332\u65b9\u6cd5\u306b\u3088\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u306e\u51e6\u7406\u304c\u7570\u306a\u308a\u307e\u3059\u304c\u3001\n\u30d5\u30a1\u30af\u30c8\u30ea\u306eZend\\Expressive\\Container\\ApplicationFactory\u30af\u30e9\u30b9\u304c\nZend\\Expressive\\Application\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u8fd4\u5374\u3057\u307e\u3059\u3002\n    public function __invoke(ContainerInterface $container)\n    {\n        $router = $container->has(RouterInterface::class)\n            ? $container->get(RouterInterface::class)\n            : new FastRouteRouter();\n\n        $finalHandler = $container->has('Zend\\Expressive\\FinalHandler')\n            ? $container->get('Zend\\Expressive\\FinalHandler')\n            : null;\n\n        $emitter = $container->has(EmitterInterface::class)\n            ? $container->get(EmitterInterface::class)\n            : null;\n\n        $app = new Application($router, $container, $finalHandler, $emitter);\n\n        $this->injectPreMiddleware($app, $container);\n        $this->injectRoutes($app, $container);\n        $this->injectPostMiddleware($app, $container);\n\n        return $app;\n    }\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\n\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306erun\u30e1\u30bd\u30c3\u30c9\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n    public function run(ServerRequestInterface $request = null, ResponseInterface $response = null)\n    {\n        $request  = $request ?: ServerRequestFactory::fromGlobals();\n        $response = $response ?: new Response();\n\n        $response = $this($request, $response);\n\n        $emitter = $this->getEmitter();\n        $emitter->emit($response);\n    }\n\n\n\u3053\u306eZend\\Expressive\\Application\u30af\u30e9\u30b9\u306fZend\\Stratigility\\MiddlewarePipe\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3057\u305f\u3082\u306e\u3067\u3001\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5168\u4f53\u304c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306b\u3088\u3063\u3066\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30b3\u30f3\u30c6\u30ca\u3092\u5909\u66f4\n\u51e6\u7406\u306e\u6d41\u308c\u3092\u307f\u308b\u3068\nInterop\\Container\\ContainerInterface\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308c\u3070\u3001\n\u5909\u66f4\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u65e9\u901f league/container \u306b\u5dee\u3057\u66ff\u3048\u3066\u307f\u307e\u3059\u3002\nconfig/container.php\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\u30d5\u30a1\u30af\u30c8\u30ea\u30af\u30e9\u30b9\u3067\u306f __invoke()\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\n\u3053\u3053\u3067\u306f__invoke\u3092\u5b9f\u884c\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u308c\u4ee5\u5916\u306f\u5358\u7d14\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u5177\u8c61\u30af\u30e9\u30b9\u306e\u30d0\u30a4\u30f3\u30c9\u3067\u3059\u3002\n$config = require __DIR__ . '/config.php';\n\n$container = new League\\Container\\Container;\n\n$container->delegate(\n    new League\\Container\\ReflectionContainer\n);\n\n$dependencies = $config['dependencies'];\nforeach($dependencies['invokables'] as $abstract => $invoke) {\n    $container->add($abstract, $invoke);\n}\n\nforeach($dependencies['factories'] as $class => $factory) {\n    $container->add($class, function () use ($factory, $container) {\n        $factory = (new $factory);\n        return $factory($container);\n    });\n}\n\n$container->add('config', $config);\n\nreturn $container;\n\n\n\u3053\u308c\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\u306e\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\u5b9f\u969b\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u5165\u308c\u66ff\u3048\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nconfig/autoload/routes.global.php\u306b\u4e0b\u8a18\u306e\u30eb\u30fc\u30c8\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n    'routes' => [\n        [\n             'name' => 'home',\n             'path' => '/',\n             'middleware' => App\\Action\\SimpleAction::class,\n             'allowed_methods' => ['GET'],\n        ],\n    ],\n\n\u3064\u304e\u306bapp\\Action\\SimpleAction\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n<?php\ndeclare(strict_types = 1);\n\nnamespace App\\Action;\n\nuse App\\Domain\\MessageService;\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Zend\\Diactoros\\Response\\JsonResponse;\nuse Psr\\Http\\Message\\ServerRequestInterface;\n\n/**\n * Class SimpleAction\n */\nclass SimpleAction\n{\n    /**\n     * @param ServerRequestInterface $request\n     * @param ResponseInterface      $response\n     * @param callable|null          $next\n     * @return ResponseInterface\n     */\n    public function __invoke(\n        ServerRequestInterface $request,\n        ResponseInterface $response,\n        callable $next = null\n    ) : ResponseInterface\n    {\n        return new JsonResponse(['message' => 'zend-expressive']);\n    }\n}\n\n\n\n\u30d6\u30e9\u30a6\u30b6\u306a\u3069\u304b\u3089\u3053\u306e\u30eb\u30fc\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\njson\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001\u3053\u306e\u30af\u30e9\u30b9\u3067\u7c21\u5358\u306a\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u307f\u307e\u3059\u3002\n<?php\ndeclare(strict_types = 1);\n\nnamespace App\\Service;\n\n/**\n * Class MessageService\n */\nclass MessageService\n{\n    /**\n     * @return string\n     */\n    public function get() : string\n    {\n        return 'zend-expressive';\n    }\n}\n\n\nSimpleAction\u30af\u30e9\u30b9\u3092\u5c11\u3057\u3060\u3051\u5909\u66f4\u3057\u307e\u3059\u3002\nclass SimpleAction\n{\n    /** @var MessageService */\n    protected $service;\n\n    /**\n     * SimpleAction constructor.\n     *\n     * @param MessageService $service\n     */\n    public function __construct(MessageService $service)\n    {\n        $this->service = $service;\n    }\n\n    /**\n     * @param ServerRequestInterface $request\n     * @param ResponseInterface      $response\n     * @param callable|null          $next\n     * @return ResponseInterface\n     */\n    public function __invoke(\n        ServerRequestInterface $request,\n        ResponseInterface $response,\n        callable $next = null\n    ) : ResponseInterface\n    {\n        return new JsonResponse(['message' => $this->service->get()]);\n    }\n}\n\n\n\u7c21\u5358\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u5229\u7528\u3067\u304d\u307e\u3057\u305f\u3002\nPHP\u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5316\u304c\u9032\u307f\u3001\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u9ad8\u54c1\u8cea\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u304c\u884c\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u6700\u521d\u306b\u3042\u3052\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3084\u3053\u306ezend-expressive\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3001\n\u6b21\u4e16\u4ee3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5b66\u3076\u306e\u3082\u975e\u5e38\u306b\u6709\u76ca\u306a\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306f[\u682a\u5f0f\u4f1a\u793e\u30a2\u30a4\u30b9\u30bf\u30a4\u30eb\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc](http://qiita.com/advent-calendar/2015/istyle)\u306e10\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\nPSR-7\u5bfe\u5fdc\u306e[zend-expressive](https://github.com/zendframework/zend-expressive)\u3001\u6ce8\u76ee\u3057\u3066\u3044\u308b\u65b9\u3084\u3059\u3067\u306b\u5229\u7528\u3057\u3066\u3044\u308b\u65b9\u3082\u591a\u3044\u3068\u304a\u3082\u3044\u307e\u3059\u3002\n\nPSR-7\u5bfe\u5fdc\u306e\u30de\u30a4\u30af\u30ed\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\u306f\u3001\u672c\u30a8\u30f3\u30c8\u30ea\u3067\u6271\u3046zend-expressive\u3092\u9664\u3044\u3066\u3001\n\u73fe\u5728\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n[slim3](https://github.com/slimphp/Slim)\n[radarphp/Radar.Project](https://github.com/radarphp/Radar.Project)\n[sparkphp/project](https://github.com/sparkphp/project)\n\nzend-expressive\u306f\u30eb\u30fc\u30bf\u3084DI\u30b3\u30f3\u30c6\u30ca\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\n\u958b\u767a\u8005\u306e\u958b\u767a\u30b9\u30bf\u30a4\u30eb\u3084\u8981\u4ef6\u306b\u5408\u308f\u305b\u3066\u81ea\u7531\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7d44\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u30de\u30a4\u30af\u30ed\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3001\n\u4e3b\u306bHTTP\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u4e3b\u8ef8\u306b\u8a2d\u8a08\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nzend-expressive\u306e\u30b9\u30b1\u30eb\u30c8\u30f3\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\ncomposer\u306ecreate-project\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\n\u3044\u308d\u3093\u306a\u65b9\u304c\u30d6\u30ed\u30b0\u306a\u3069\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\n\n```bash\n$ composer create-project -s rc zendframework/zend-expressive-skeleton expressive\n```\n\n\u30b9\u30b1\u30eb\u30c8\u30f3\u3092\u4f7f\u308f\u305a\u306b\u3001expressive\u3092\u5229\u7528\u3057\u3066\u72ec\u81ea\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u69cb\u7bc9\u3059\u308b\u5834\u5408\u306f\u3001\nzendframework/zend-expressive\u5358\u4f53\u3067\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u30b9\u30b1\u30eb\u30c8\u30f3\u3092\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u51e6\u7406\u306e\u6d41\u308c\u3092\u8ffd\u3044\u306a\u304c\u3089\u3001\n\u5c11\u3057\u3060\u3051\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5165\u308c\u66ff\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u3053\u3067\u306ffastRoute, serviceManager\u3092\u9078\u629e\u3057\u3066\u3044\u307e\u3059\n\n# \u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8 public/index.php\npublic/index.php\u3067HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u69cb\u7bc9\u3055\u308c\u307e\u3059\u3002\n\n```php\n/** @var \\Interop\\Container\\ContainerInterface $container */\n$container = require 'config/container.php';\n\n/** @var \\Zend\\Expressive\\Application $app */\n$app = $container->get('Zend\\Expressive\\Application');\n$app->run();\n```\n\n\u6700\u521d\u306b\u30b3\u30f3\u30c6\u30ca\u306e\u8a2d\u5b9a\u304c\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\n# config/container.php\n\n```php\nuse Zend\\ServiceManager\\Config;\nuse Zend\\ServiceManager\\ServiceManager;\n\n// Load configuration\n$config = require __DIR__ . '/config.php';\n\n// Build container\n$container = new ServiceManager(new Config($config['dependencies']));\n\n// Inject config\n$container->setService('config', $config);\n\nreturn $container;\n\n```\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u8a2d\u5b9a\u60c5\u5831\u3084\u30af\u30e9\u30b9\u306e\u4f9d\u5b58\u95a2\u4fc2\u306a\u3069\u304c\u3053\u3053\u3067\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002\n\nconfig.php\u3067\u306fconfig/autoload\u914d\u4e0b\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u5bfe\u8c61\u306b\u8a2d\u5b9a\u5024\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\n\n```php\nforeach (Glob::glob('config/autoload/{{,*.}global,{,*.}local}.php', Glob::GLOB_BRACE) as $file) {\n    $config = ArrayUtils::merge($config, include $file);\n}\n```\n\nZend\\ServiceManager\\ServiceManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3001\n\u8aad\u307f\u8fbc\u3093\u3060\u8a2d\u5b9a\u3092**config**\u3068\u3044\u3046\u30b5\u30fc\u30d3\u30b9\u540d\u3067ServiceManager\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n\nServiceManager\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u6642\u306bZend\\ServiceManager\\Config\u30af\u30e9\u30b9\u306e\nconfigureServiceManager\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u305d\u308c\u305e\u308c\u306e\u5024\u3092\u30b3\u30f3\u30c6\u30ca\u304c\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u51e6\u7406\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\n## Zend\\ServiceManager\\Config\n\u4f8b\u3048\u3070\u8a2d\u5b9a\u5024\u306e\u914d\u5217\u306b'factories'\u30ad\u30fc\u304c\u3042\u308c\u3070\u4ee5\u4e0b\u306e\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n```php\nforeach ($this->getFactories() as $name => $factory) {\n    $serviceManager->setFactory($name, $factory);\n}\n```\n\nconfig/autoload/dependencies.global.php\u3092\u4f8b\u3068\u3059\u308b\u3068\u3001\n\n```php\n'factories' => [\n    Application::class => ApplicationFactory::class,\n    // \u7701\u7565\n],\n```\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u767b\u9332\u3055\u308c\u307e\u3059\u3002\n\n```\n  #canonicalNames: array:1 [\u25bc\n    \"Zend\\Expressive\\Application\" => \"zendexpressiveapplication\"\n  ]\n  #allowOverride: false\n  #invokableClasses: []\n  #factories: array:1 [\u25bc\n    \"zendexpressiveapplication\" => \"Zend\\Expressive\\Container\\ApplicationFactory\"\n  ]\n```\n\n\u6700\u5f8c\u306b\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3067ServiceManager\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002\n\u3053\u306eZend\\ServiceManager\\ServiceManager\u30af\u30e9\u30b9\u306f**Interop\\Container\\ContainerInterface**\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3067\u3001\nexpressive\u3067\u5229\u7528\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u306f\u3001\n\u3053\u306e**Interop\\Container\\ContainerInterface**\u3092\u5b9f\u88c5\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308c\u3070\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u305d\u306e\u305f\u3081\u3001phpdoc\u306b\u306fServiceManager\u3067\u306f\u306a\u304f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```php\n/** @var \\Interop\\Container\\ContainerInterface $container */\n$container = require 'config/container.php';\n```\n\n# \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u53d6\u5f97\nindex.php\u306b\u3042\u308b\u4e0b\u8a18\u306e\u884c\u3067zend-expressive\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```php\n$app = $container->get('Zend\\Expressive\\Application');\n```\n\n\u3053\u3053\u3067\u306f**Interop\\Container\\ContainerInterface**\u3092\u5b9f\u88c5\u3057\u305f\nZend\\ServiceManager\\ServiceManager\u30af\u30e9\u30b9\u306eget\u30e1\u30bd\u30c3\u30c9\u304c\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nget\u30e1\u30bd\u30c3\u30c9\u306f\u30b3\u30f3\u30c6\u30ca\u3078\u306e\u767b\u9332\u65b9\u6cd5\u306b\u3088\u3063\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u306e\u51e6\u7406\u304c\u7570\u306a\u308a\u307e\u3059\u304c\u3001\n\u30d5\u30a1\u30af\u30c8\u30ea\u306e`Zend\\Expressive\\Container\\ApplicationFactory`\u30af\u30e9\u30b9\u304c\nZend\\Expressive\\Application\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u8fd4\u5374\u3057\u307e\u3059\u3002\n\n```php\n    public function __invoke(ContainerInterface $container)\n    {\n        $router = $container->has(RouterInterface::class)\n            ? $container->get(RouterInterface::class)\n            : new FastRouteRouter();\n\n        $finalHandler = $container->has('Zend\\Expressive\\FinalHandler')\n            ? $container->get('Zend\\Expressive\\FinalHandler')\n            : null;\n\n        $emitter = $container->has(EmitterInterface::class)\n            ? $container->get(EmitterInterface::class)\n            : null;\n\n        $app = new Application($router, $container, $finalHandler, $emitter);\n\n        $this->injectPreMiddleware($app, $container);\n        $this->injectRoutes($app, $container);\n        $this->injectPostMiddleware($app, $container);\n\n        return $app;\n    }\n```\n\n# \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\n\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u306erun\u30e1\u30bd\u30c3\u30c9\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```php\n    public function run(ServerRequestInterface $request = null, ResponseInterface $response = null)\n    {\n        $request  = $request ?: ServerRequestFactory::fromGlobals();\n        $response = $response ?: new Response();\n\n        $response = $this($request, $response);\n\n        $emitter = $this->getEmitter();\n        $emitter->emit($response);\n    }\n\n```\n\n\u3053\u306eZend\\Expressive\\Application\u30af\u30e9\u30b9\u306fZend\\Stratigility\\MiddlewarePipe\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3057\u305f\u3082\u306e\u3067\u3001\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5168\u4f53\u304c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306b\u3088\u3063\u3066\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n# \u30b3\u30f3\u30c6\u30ca\u3092\u5909\u66f4\n\u51e6\u7406\u306e\u6d41\u308c\u3092\u307f\u308b\u3068\n**Interop\\Container\\ContainerInterface**\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308c\u3070\u3001\n\u5909\u66f4\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u65e9\u901f [league/container](http://container.thephpleague.com/) \u306b\u5dee\u3057\u66ff\u3048\u3066\u307f\u307e\u3059\u3002\n\nconfig/container.php\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\u30d5\u30a1\u30af\u30c8\u30ea\u30af\u30e9\u30b9\u3067\u306f `__invoke()`\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\n\u3053\u3053\u3067\u306f__invoke\u3092\u5b9f\u884c\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u308c\u4ee5\u5916\u306f\u5358\u7d14\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u5177\u8c61\u30af\u30e9\u30b9\u306e\u30d0\u30a4\u30f3\u30c9\u3067\u3059\u3002\n\n```php\n$config = require __DIR__ . '/config.php';\n\n$container = new League\\Container\\Container;\n\n$container->delegate(\n    new League\\Container\\ReflectionContainer\n);\n\n$dependencies = $config['dependencies'];\nforeach($dependencies['invokables'] as $abstract => $invoke) {\n    $container->add($abstract, $invoke);\n}\n\nforeach($dependencies['factories'] as $class => $factory) {\n    $container->add($class, function () use ($factory, $container) {\n        $factory = (new $factory);\n        return $factory($container);\n    });\n}\n\n$container->add('config', $config);\n\nreturn $container;\n\n```\n\n\u3053\u308c\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\u306e\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\u5b9f\u969b\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u5165\u308c\u66ff\u3048\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nconfig/autoload/routes.global.php\u306b\u4e0b\u8a18\u306e\u30eb\u30fc\u30c8\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```php\n\n    'routes' => [\n        [\n             'name' => 'home',\n             'path' => '/',\n             'middleware' => App\\Action\\SimpleAction::class,\n             'allowed_methods' => ['GET'],\n        ],\n    ],\n```\n\n\u3064\u304e\u306bapp\\Action\\SimpleAction\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```php\n<?php\ndeclare(strict_types = 1);\n\nnamespace App\\Action;\n\nuse App\\Domain\\MessageService;\nuse Psr\\Http\\Message\\ResponseInterface;\nuse Zend\\Diactoros\\Response\\JsonResponse;\nuse Psr\\Http\\Message\\ServerRequestInterface;\n\n/**\n * Class SimpleAction\n */\nclass SimpleAction\n{\n    /**\n     * @param ServerRequestInterface $request\n     * @param ResponseInterface      $response\n     * @param callable|null          $next\n     * @return ResponseInterface\n     */\n    public function __invoke(\n        ServerRequestInterface $request,\n        ResponseInterface $response,\n        callable $next = null\n    ) : ResponseInterface\n    {\n        return new JsonResponse(['message' => 'zend-expressive']);\n    }\n}\n\n\n```\n\n\u30d6\u30e9\u30a6\u30b6\u306a\u3069\u304b\u3089\u3053\u306e\u30eb\u30fc\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\njson\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\u3001\u3053\u306e\u30af\u30e9\u30b9\u3067\u7c21\u5358\u306a\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n```php\n<?php\ndeclare(strict_types = 1);\n\nnamespace App\\Service;\n\n/**\n * Class MessageService\n */\nclass MessageService\n{\n    /**\n     * @return string\n     */\n    public function get() : string\n    {\n        return 'zend-expressive';\n    }\n}\n\n```\n\nSimpleAction\u30af\u30e9\u30b9\u3092\u5c11\u3057\u3060\u3051\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```php\nclass SimpleAction\n{\n    /** @var MessageService */\n    protected $service;\n\n    /**\n     * SimpleAction constructor.\n     *\n     * @param MessageService $service\n     */\n    public function __construct(MessageService $service)\n    {\n        $this->service = $service;\n    }\n\n    /**\n     * @param ServerRequestInterface $request\n     * @param ResponseInterface      $response\n     * @param callable|null          $next\n     * @return ResponseInterface\n     */\n    public function __invoke(\n        ServerRequestInterface $request,\n        ResponseInterface $response,\n        callable $next = null\n    ) : ResponseInterface\n    {\n        return new JsonResponse(['message' => $this->service->get()]);\n    }\n}\n\n```\n\n\u7c21\u5358\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u304c\u5229\u7528\u3067\u304d\u307e\u3057\u305f\u3002\n\nPHP\u306f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5316\u304c\u9032\u307f\u3001\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u9ad8\u54c1\u8cea\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u304c\u884c\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u6700\u521d\u306b\u3042\u3052\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3084\u3053\u306ezend-expressive\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3001\n\u6b21\u4e16\u4ee3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5b66\u3076\u306e\u3082\u975e\u5e38\u306b\u6709\u76ca\u306a\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n"}