{"context": " More than 1 year has passed since last update.parse\u306ecloud code\u3067\u5927\u91cf\u306equery\u3092\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u3092\u8abf\u3079\u305f\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u307e\u305a\u5927\u524d\u63d0\u3068\u3057\u3066Parse\u306e\u4ed5\u69d8\u7684\u306a\u5236\u9650\u3092\u3075\u307e\u3048\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4e00\u5ea6\u306equery\u30671000 Object\u307e\u3067\u3057\u304b\u6271\u3048\u306a\u3044\nCloud Function\u306f15\u79d2\u3067time out(beforeSave/afterSave\u306f3\u79d2)\n\n\u53c2\u8003 : Cloud Code: limitation and API calls count\n\u53c2\u8003\u306b\u3057\u305f\u60c5\u5831\u304c\u53e4\u3044\u3082\u306e\u306a\u306e\u3067\u4eca\u306f\u4ed5\u69d8\u5909\u308f\u3063\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u611f\u899a\u7684\u306b\u306f5\u79d2\u304f\u3089\u3044\u3067time out\u306b\u306a\u3063\u3066\u3044\u308b\u6c17\u3082\u3057\u306a\u304f\u306f\u306a\u3044\u3067\u3059\u3002\u3002\n\u3053\u3053\u3067\u306f\u3001\u3042\u308b\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3057\u3066\u5225\u306e\u30c6\u30fc\u30d6\u30eb\u3078save\u3059\u308b\u3068\u3044\u3046\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\nParse.Promise.when\u3092\u4f7f\u3046\u65b9\u6cd5\npromise\u3092array\u306b\u5165\u308c\u3066Parse.Promise.when\u306b\u6e21\u3059\u65b9\u6cd5\u3067\u3059\u3002\nParse.Promise.when\u306fPromise.all\u306e\u3088\u3046\u306b\u914d\u5217\u3067\u6e21\u3055\u308c\u305fpromise\u306e\u51e6\u7406\u304c\u5168\u3066\u7d42\u4e86\u3059\u308b\u307e\u3067\u305d\u3053\u3067\u6b62\u307e\u308a\u307e\u3059\u3002\n[\u8ffd\u8a18]\n\u305d\u3082\u305d\u3082\u7121\u6599\u30d7\u30e9\u30f3\u3060\u3068\u79d2\u959330\u30ea\u30af\u30a8\u30b9\u30c8\u307e\u3067\u3068\u3044\u3046\u5236\u9650\u304c\u3042\u308a\u307e\u3057\u305f\u3002\nParse.Promise.when(queries)\u3060\u3068\u7c21\u5358\u306b\u8d85\u3048\u3066\u3057\u307e\u3044\u307e\u3059\u306d\u3002\nlimit over\u3057\u3066\u308b\u3088\u3068\u3044\u3046\u901a\u77e5\u30e1\u30fc\u30eb\u304c\u6765\u307e\u3057\u305f\u304c\u300130\u30ea\u30af\u30a8\u30b9\u30c8\u4ee5\u4e0a\u3067\u3082\u4f55\u56de\u304b\u5b9f\u884c\u306f\u3067\u304d\u3066\u3044\u307e\u3057\u305f\u3002\n\u4e00\u77acover\u3057\u305f\u304f\u3089\u3044\u306f\u5927\u76ee\u306b\u898b\u3066\u304f\u308c\u308b\u3093\u3067\u3059\u304b\u306d\u3002\n\nParse.Cloud.define(\"ParseQuerySaveTest2\", function(request, response) {\n  var query = new Parse.Query('MuchDataInTable');\n  query.limit(1000);\n  //query.skip();\n  query.find()\n  .then(function(results) {\n    var queries = [];\n\n    results.forEach(function(result){\n      queries.push(createObject2(result));\n    });\n\n    return return Parse.Promise.when(queries);\n  })\n  .then(function(result) {\n    response.success(\"ok!\");\n  })\n  .fail(function(error) {\n    response.error(error);\n  });\n\n});\n\nfunction createObject2(result) {\n  var content = result.get(\"content\");\n\n  var strage = new (Parse.Object.extend(\"Strage\"));\n  strage.set('content', content);\n\n  return strage.save();\n}\n\n\nParse.Object.saveAll\u3092\u4f7f\u3046\u65b9\u6cd5\n\u5909\u66f4\u6e08\u307fParse object\u306e\u914d\u5217\u3092Parse.Object.saveAll\u306b\u6e21\u3059\u65b9\u6cd5\u3067\u3059\u3002\nParse.Object.saveAll\u306fParse object\u306e\u914d\u5217\u3092\u6e21\u3059\u3068\u307e\u3068\u3081\u3066save\u3092\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\nParse.Cloud.define(\"ParseQuerySaveTest1\", function(request, response) {\n  var query = new Parse.Query('MuchDataInTable');\n  query.limit(1000);\n  //query.skip();\n  query.find()\n  .then(function(results) {\n    var queries = [];\n\n    results.forEach(function(result){\n      queries.push(createObject1(result));\n    });\n\n    return Parse.Object.saveAll(queries);\n  })\n  .then(function(result) {\n    response.success(\"ok!\");\n  })\n  .fail(function(error) {\n    response.error(error);\n  });\n\n});\n\nfunction createObject1(result) {\n  var content = result.get(\"content\");\n\n  var strage = new (Parse.Object.extend(\"Strage\"));\n  strage.set('content', content);\n\n  return strage;\n}\n\n\n\u3069\u3061\u3089\u3092\u4f7f\u3046\u3079\u304d\uff1f\n\u3069\u3061\u3089\u3082\u540c\u3058\u3088\u3046\u306b\u6a5f\u80fd\u3059\u308b\u306e\u3067\u4e21\u65b9\u3068\u3082\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nParse.Promise.when\u3092\u4f7f\u3063\u305f\u5834\u5408\u3060\u3068500\u4ef6\u304f\u3089\u3044\u3067timed out\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u591a\u304b\u3063\u305f\u3067\u3059\u3002\nParse.Object.saveAll\u306f1000\u4ef6\u3067\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067Parse.Object.saveAll\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u306a\u304b\u306e\u4eba\u3082saveAll\u3092\u63a8\u5968\n\u4ed6\u306b\u3082\u3069\u3061\u3089\u3092\u4f7f\u3046\u3079\u304d\u304b\u60a9\u3093\u3067\u3044\u308b\u4eba\u304c\u3044\u306a\u3044\u304b\u8abf\u3079\u3066\u307f\u305f\u3089\u3042\u308a\u307e\u3057\u305f\u3002\n\u305d\u306eQ&A\u3067\u306a\u304b\u306e\u4eba\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8fd4\u7b54\u3057\u3066\u3044\u307e\u3059\u3002\nsaveAll\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\nYou should use saveAll. If you use Promises in the way shown, you will be creating a large number of network connections all at once, which can consume too many resources at one time. This would be especially problematic in Cloud Code. In the near future, we hope to update saveAll to use batches, so that it will send many objects in each network request, which will make it faster than separate requests in many situations.\n\nParse.Object.saveAll vs Parse.Promise.when\n\n1000\u4ef6\u4ee5\u4e0a\u306eobject\u3092\u4e00\u5ea6\u306b\u6271\u3044\u305f\u3044\u5834\u5408\u306f\uff1f\nquery.limit\u3068query.skip\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u9811\u5f35\u308c\u3070\u53ef\u80fd\u3067\u3059\u3002\n\u8a73\u3057\u304f\u306f\u30b0\u30b0\u308b\u3068\u8272\u3005\u51fa\u3066\u304f\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3002\n\nparse\u306ecloud code\u3067\u5927\u91cf\u306equery\u3092\u5b9f\u884c\u3059\u308b\u65b9\u6cd5\u3092\u8abf\u3079\u305f\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u307e\u305a\u5927\u524d\u63d0\u3068\u3057\u3066Parse\u306e\u4ed5\u69d8\u7684\u306a\u5236\u9650\u3092\u3075\u307e\u3048\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n- \u4e00\u5ea6\u306equery\u30671000 Object\u307e\u3067\u3057\u304b\u6271\u3048\u306a\u3044\n\n- Cloud Function\u306f15\u79d2\u3067time out(beforeSave/afterSave\u306f3\u79d2)\n\n\u53c2\u8003 : [Cloud Code: limitation and API calls count](https://www.parse.com/questions/cloud-code-limitation-and-api-calls-count)\n\n\u53c2\u8003\u306b\u3057\u305f\u60c5\u5831\u304c\u53e4\u3044\u3082\u306e\u306a\u306e\u3067\u4eca\u306f\u4ed5\u69d8\u5909\u308f\u3063\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u611f\u899a\u7684\u306b\u306f5\u79d2\u304f\u3089\u3044\u3067time out\u306b\u306a\u3063\u3066\u3044\u308b\u6c17\u3082\u3057\u306a\u304f\u306f\u306a\u3044\u3067\u3059\u3002\u3002\n\n\n\n\u3053\u3053\u3067\u306f\u3001\u3042\u308b\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3057\u3066\u5225\u306e\u30c6\u30fc\u30d6\u30eb\u3078save\u3059\u308b\u3068\u3044\u3046\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n##Parse.Promise.when\u3092\u4f7f\u3046\u65b9\u6cd5\npromise\u3092array\u306b\u5165\u308c\u3066Parse.Promise.when\u306b\u6e21\u3059\u65b9\u6cd5\u3067\u3059\u3002\nParse.Promise.when\u306fPromise.all\u306e\u3088\u3046\u306b\u914d\u5217\u3067\u6e21\u3055\u308c\u305fpromise\u306e\u51e6\u7406\u304c\u5168\u3066\u7d42\u4e86\u3059\u308b\u307e\u3067\u305d\u3053\u3067\u6b62\u307e\u308a\u307e\u3059\u3002\n\n[\u8ffd\u8a18]\n\u305d\u3082\u305d\u3082\u7121\u6599\u30d7\u30e9\u30f3\u3060\u3068\u79d2\u959330\u30ea\u30af\u30a8\u30b9\u30c8\u307e\u3067\u3068\u3044\u3046\u5236\u9650\u304c\u3042\u308a\u307e\u3057\u305f\u3002\nParse.Promise.when(queries)\u3060\u3068\u7c21\u5358\u306b\u8d85\u3048\u3066\u3057\u307e\u3044\u307e\u3059\u306d\u3002\nlimit over\u3057\u3066\u308b\u3088\u3068\u3044\u3046\u901a\u77e5\u30e1\u30fc\u30eb\u304c\u6765\u307e\u3057\u305f\u304c\u300130\u30ea\u30af\u30a8\u30b9\u30c8\u4ee5\u4e0a\u3067\u3082\u4f55\u56de\u304b\u5b9f\u884c\u306f\u3067\u304d\u3066\u3044\u307e\u3057\u305f\u3002\n\u4e00\u77acover\u3057\u305f\u304f\u3089\u3044\u306f\u5927\u76ee\u306b\u898b\u3066\u304f\u308c\u308b\u3093\u3067\u3059\u304b\u306d\u3002\n\n```js:\n\nParse.Cloud.define(\"ParseQuerySaveTest2\", function(request, response) {\n  var query = new Parse.Query('MuchDataInTable');\n  query.limit(1000);\n  //query.skip();\n  query.find()\n  .then(function(results) {\n    var queries = [];\n\n    results.forEach(function(result){\n      queries.push(createObject2(result));\n    });\n  \n    return return Parse.Promise.when(queries);\n  })\n  .then(function(result) {\n    response.success(\"ok!\");\n  })\n  .fail(function(error) {\n    response.error(error);\n  });\n\n});\n\nfunction createObject2(result) {\n  var content = result.get(\"content\");\n  \n  var strage = new (Parse.Object.extend(\"Strage\"));\n  strage.set('content', content);\n    \n  return strage.save();\n}\n```\n\n##Parse.Object.saveAll\u3092\u4f7f\u3046\u65b9\u6cd5\n\u5909\u66f4\u6e08\u307fParse object\u306e\u914d\u5217\u3092Parse.Object.saveAll\u306b\u6e21\u3059\u65b9\u6cd5\u3067\u3059\u3002\nParse.Object.saveAll\u306fParse object\u306e\u914d\u5217\u3092\u6e21\u3059\u3068\u307e\u3068\u3081\u3066save\u3092\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```js:\n\nParse.Cloud.define(\"ParseQuerySaveTest1\", function(request, response) {\n  var query = new Parse.Query('MuchDataInTable');\n  query.limit(1000);\n  //query.skip();\n  query.find()\n  .then(function(results) {\n    var queries = [];\n\n    results.forEach(function(result){\n      queries.push(createObject1(result));\n    });\n  \n    return Parse.Object.saveAll(queries);\n  })\n  .then(function(result) {\n    response.success(\"ok!\");\n  })\n  .fail(function(error) {\n    response.error(error);\n  });\n\n});\n\nfunction createObject1(result) {\n  var content = result.get(\"content\");\n  \n  var strage = new (Parse.Object.extend(\"Strage\"));\n  strage.set('content', content);\n    \n  return strage;\n}\n```\n\n##\u3069\u3061\u3089\u3092\u4f7f\u3046\u3079\u304d\uff1f\n\n\u3069\u3061\u3089\u3082\u540c\u3058\u3088\u3046\u306b\u6a5f\u80fd\u3059\u308b\u306e\u3067\u4e21\u65b9\u3068\u3082\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nParse.Promise.when\u3092\u4f7f\u3063\u305f\u5834\u5408\u3060\u3068500\u4ef6\u304f\u3089\u3044\u3067timed out\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u591a\u304b\u3063\u305f\u3067\u3059\u3002\n\nParse.Object.saveAll\u306f1000\u4ef6\u3067\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067Parse.Object.saveAll\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n##\u306a\u304b\u306e\u4eba\u3082saveAll\u3092\u63a8\u5968\n\n\u4ed6\u306b\u3082\u3069\u3061\u3089\u3092\u4f7f\u3046\u3079\u304d\u304b\u60a9\u3093\u3067\u3044\u308b\u4eba\u304c\u3044\u306a\u3044\u304b\u8abf\u3079\u3066\u307f\u305f\u3089\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u305d\u306eQ&A\u3067\u306a\u304b\u306e\u4eba\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8fd4\u7b54\u3057\u3066\u3044\u307e\u3059\u3002\n\nsaveAll\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\n> You should use saveAll. If you use Promises in the way shown, you will be creating a large number of network connections all at once, which can consume too many resources at one time. This would be especially problematic in Cloud Code. In the near future, we hope to update saveAll to use batches, so that it will send many objects in each network request, which will make it faster than separate requests in many situations.\n\n[Parse.Object.saveAll vs Parse.Promise.when](https://www.parse.com/questions/parseobjectsaveall-vs-parsepromisewhen)\n\n\n##1000\u4ef6\u4ee5\u4e0a\u306eobject\u3092\u4e00\u5ea6\u306b\u6271\u3044\u305f\u3044\u5834\u5408\u306f\uff1f\n\nquery.limit\u3068query.skip\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u9811\u5f35\u308c\u3070\u53ef\u80fd\u3067\u3059\u3002\n\n\u8a73\u3057\u304f\u306f\u30b0\u30b0\u308b\u3068\u8272\u3005\u51fa\u3066\u304f\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3002\n\n\n\n\n", "tags": ["Parse"]}