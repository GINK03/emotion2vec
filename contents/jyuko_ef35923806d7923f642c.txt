{"context": "\u524d\u306e\u8a18\u4e8b\u306e\u7d9a\u304d\u3067\u3059\u3002\nMeshBuilder\u306e\u30b3\u30a2\u90e8\u5206\u306b\u3042\u305f\u308bTango3DR\u306e\u5f8c\u7de8\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n3D Reconstruction server\u306e\u4f5c\u6210\n\u30ab\u30e1\u30e9\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a\nGridIndexArray\u306e\u66f4\u65b0\n\u30e1\u30c3\u30b7\u30e5\u306e\u4f5c\u6210\n\n\u306e3\u30014\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u307e\u3059\u3002\n\nGridIndexArray\nGridIndexArray\u306b\u3064\u3044\u3066\u306f\u3001MeshBuilder\u3067\u4f5c\u6210\u3055\u308c\u305f\u30e1\u30c3\u30b7\u30e5\u3092\u898b\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\nExport\u3055\u308c\u305f\u30e1\u30c3\u30b7\u30e5\u306f\u3001\u5c0f\u3055\u306a\u30e1\u30c3\u30b7\u30e5\u306e\u96c6\u5408\u4f53\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u5404\u30e1\u30c3\u30b7\u30e5\u30fb\u30bb\u30b0\u30e1\u30f3\u30c8\u306f\"-1,1,2\"\u3068\u3044\u3063\u305f3\u3064\u306e\u6574\u6570\u304c\u540d\u79f0\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u5206\u5272\u5358\u4f4d\u304cGrid Cell\u3067\u3001\u5272\u308a\u632f\u3089\u308c\u305f3\u3064\u306e\u6574\u6570\u304cGridIndex\u3001GridIndex\u3092\u914d\u5217\u306b\u3057\u305f\u306e\u304cGridIndexArray\u3067\u3059\u3002\nGridIndexArray\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u306f\u3001Grid Cell\u306f16\u00d716\u00d716\u306evoxel\u3068\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u3001\u5e73\u9762\uff08\u5e8a\uff09\u306b\u76f8\u5f53\u3059\u308bGrid Cell\u306e\u30e1\u30c3\u30b7\u30e5\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u78ba\u304b\u306b16\u5206\u5272\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u89e3\u6790\n\u524d\u7de8\u3068\u540c\u3058\u304f\u3001\u5bfe\u8c61\u306f\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u3067\u3059\u3002\n\nTangoSDK/Core/Scripts/TangoWrappers/Tango3DReconstruction.cs\n\n\nGridIndexArray\u306e\u66f4\u65b0\npointCloud\u66f4\u65b0\u6642\u306b\u5b9f\u884c\u3055\u308c\u308bOnTangoPointCloudMultithreadedAvailable()\u3067_UpdateDepth()\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\nTango3DReconstruction.cs\nprivate void _UpdateDepth(TangoPointCloudIntPtr pointCloud, Matrix4x4 depthPose)\n{\n    ...\n\n    APIPointCloud apiCloud;\n    apiCloud.numPoints = pointCloud.m_numPoints;\n    apiCloud.points = pointCloud.m_points;\n    apiCloud.timestamp = pointCloud.m_timestamp;\n\n    APIPose apiDepthPose = APIPose.FromMatrix4x4(ref depthPose);\n\n    if (!m_sendColorToUpdate)\n    {\n         // No need to wait for a color image, update reconstruction immediately.\n         IntPtr rawUpdatedIndices;\n         Status result = (Status)API.Tango3DR_update(\n             m_context, ref apiCloud, ref apiDepthPose, IntPtr.Zero, IntPtr.Zero, out rawUpdatedIndices);\n\n        ...\n\n        _AddUpdatedIndices(rawUpdatedIndices);\n        API.Tango3DR_GridIndexArray_destroy(rawUpdatedIndices);\n    }\n    else\n    {\n        lock (m_lockObject)\n        {\n            // We need both a color image and a depth cloud to update reconstruction.  Cache the depth cloud\n            // because there are much less depth points than pixels.\n            m_mostRecentDepth = apiCloud;\n            m_mostRecentDepth.points = IntPtr.Zero;\n            Marshal.Copy(pointCloud.m_points, m_mostRecentDepthPoints, 0, pointCloud.m_numPoints * 4);\n\n            m_mostRecentDepthPose = apiDepthPose;\n            m_mostRecentDepthIsValid = true;\n        }\n    }\n}\n\n\ncolorCamera\u306e\u8272\u60c5\u5831\u3092\u4f7f\u3046\u304b\u5426\u304b\u3067\u51e6\u7406\u304c\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\u5229\u7528\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u3053\u3053\u3067Tango3DR_update()\u3092\u884c\u3044\u307e\u3059\u3002\n3D Reconstruction server\u306e\u60c5\u5831\u304c\u66f4\u65b0\u3055\u308c\u3001rawUpdatedIndices\u306b\u66f4\u65b0\u3055\u308c\u305fGrid Cell\u306eGridIndexArray\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3001_AddUpdatedIndices()\u306b\u6e21\u3057\u307e\u3059\u3002\n\u8272\u60c5\u5831\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001m_mostRecentDepth\u3001m_mostRecentDepthPose\u3092\u30bb\u30c3\u30c8\u3057\u305f\u4e0a\u3067\u3001colorCamera\u306e\u60c5\u5831\u3092\u5f85\u3061\u307e\u3059\u3002\n\u66f4\u65b0\u3055\u308c\u308b\u3068\u3001OnTangoImageMultithreadedAvailable()\u2192_UpdateColor()\u2192Tango3DR_update()\u2192_AddUpdatedIndices()\u3068\u3044\u3046\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\nTango3DReconstruction.cs\nprivate void _AddUpdatedIndices(IntPtr rawUpdatedIndices)\n{\n    int numUpdatedIndices = Marshal.ReadInt32(rawUpdatedIndices, 0);\n    IntPtr rawIndices = Marshal.ReadIntPtr(rawUpdatedIndices, 4);\n    lock (m_lockObject)\n    {\n        if (m_updatedIndices.Count == 0)\n        {\n            // Update in fast mode, no duplicates are possible.\n            for (int it = 0; it < numUpdatedIndices; ++it)\n            {\n                GridIndex index;\n                index.x = Marshal.ReadInt32(rawIndices, (0 + (it * 3)) * 4);\n                index.y = Marshal.ReadInt32(rawIndices, (1 + (it * 3)) * 4);\n                index.z = Marshal.ReadInt32(rawIndices, (2 + (it * 3)) * 4);\n                m_updatedIndices.Add(index);\n            }\n        }\n        else\n        {\n            // Duplicates are possible, need to check while adding.\n            for (int it = 0; it < numUpdatedIndices; ++it)\n            {\n                GridIndex index;\n                index.x = Marshal.ReadInt32(rawIndices, (0 + (it * 3)) * 4);\n                index.y = Marshal.ReadInt32(rawIndices, (1 + (it * 3)) * 4);\n                index.z = Marshal.ReadInt32(rawIndices, (2 + (it * 3)) * 4);\n                if (!m_updatedIndices.Contains(index))\n                {\n                    m_updatedIndices.Add(index);\n                }\n            }\n        }\n    }\n}\n\n\n\u66f4\u65b0\u3055\u308c\u305fGrid Cell\u306eGridInex\u3092m_updatedIndices\u306b\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\nm_updatedIndices\u304c\u7a7a\u3067\u3042\u308c\u3070\u5b58\u5728\u30c1\u30a7\u30c3\u30af\u3092\u305b\u305a\u306b\u8ffd\u52a0\u3057\u3001\u30c7\u30fc\u30bf\u304c\u3042\u308c\u3070\u91cd\u8907\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u5b58\u5728\u30c1\u30a7\u30c3\u30af\u304c\u5165\u3063\u3066\u307e\u3059\u3002\n\n\u30e1\u30c3\u30b7\u30e5\u306e\u4f5c\u6210\nUI\u5074\u306e\u51e6\u7406\u3092\u8ffd\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u5c11\u3057\u98db\u3093\u3067\u3057\u307e\u3044\u307e\u3059\u304c\u3001GridIndex\u3092\u6307\u5b9a\u3057\u3066ExtractMeshSegment()\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u306eGrid Cell\u306e\u30e1\u30c3\u30b7\u30e5\u3092\u66f8\u304d\u51fa\u3057\u307e\u3059\u3002\n\nTango3DReconstruction.cs\ninternal Status ExtractMeshSegment(\n    GridIndex gridIndex, Vector3[] vertices, Vector3[] normals, Color32[] colors, int[] triangles,\n    out int numVertices, out int numTriangles)\n{\n    APIMeshGCHandles pinnedHandles = APIMeshGCHandles.Alloc(vertices, normals, colors, triangles);\n    APIMesh mesh = APIMesh.FromArrays(vertices, normals, colors, triangles);\n\n    int result = API.Tango3DR_extractPreallocatedMeshSegment(m_context, ref gridIndex, ref mesh);\n    numVertices = (int)mesh.numVertices;\n    numTriangles = (int)mesh.numFaces;\n    pinnedHandles.Free();\n\n    return (Status)result;\n}\n\n\n\u3053\u3053\u3067\u306f\u3001Tango3DR_extractPreallocatedMeshSegment()\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001GridIndexArray\u3092\u6e21\u3057\u3066\u8907\u6570\u306eGrid Cell\u30921\u3064\u306e\u30e1\u30c3\u30b7\u30e5\u3068\u3057\u3066\u8fd4\u3059\u95a2\u6570\u3001\u3059\u3079\u3066\u306eGrid Cell\u306e\u30e1\u30c3\u30b7\u30e5\u3092\u8fd4\u3059\u95a2\u6570\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\u5f8c\u7de8\u3067\u306f\u3001Tango3DR\u304cGridIndexArray\u3092\u7528\u3044\u3066\u3001\u30e1\u30c3\u30b7\u30e5\u3092\u4f5c\u6210\u3059\u308b\u6d41\u308c\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\u5143\u3005\u3001\u5c4b\u5185\u5411\u3051\u306e\u30de\u30c3\u30d7\u69cb\u7bc9\u3084\u5c4b\u5185\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u3078\u306e\u6d3b\u7528\u306b\u8208\u5473\u304c\u3042\u3063\u3066Tango\u306e\u5b66\u7fd2\u3092\u59cb\u3081\u305f\u306e\u3067\u3001\u4ed5\u7d44\u307f\u306e\u7406\u89e3\u3068\u3044\u3046\u70b9\u3067\u306f\u3001\u304b\u306a\u308a\u8996\u754c\u304c\u30af\u30ea\u30a2\u306b\u306a\u3063\u305f\u6c17\u304c\u3057\u307e\u3059\u3002\n[\u524d\u306e\u8a18\u4e8b](http://qiita.com/jyuko/items/1ca4ddff0accd6b483f6)\u306e\u7d9a\u304d\u3067\u3059\u3002\n\nMeshBuilder\u306e\u30b3\u30a2\u90e8\u5206\u306b\u3042\u305f\u308bTango3DR\u306e\u5f8c\u7de8\u306b\u306a\u308a\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-06 20.42.10.png](https://qiita-image-store.s3.amazonaws.com/0/153460/68d065d0-092a-2179-7e09-733ee37c5c22.png)\n\n\n1. 3D Reconstruction server\u306e\u4f5c\u6210\n2. \u30ab\u30e1\u30e9\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a\n3. GridIndexArray\u306e\u66f4\u65b0\n4. \u30e1\u30c3\u30b7\u30e5\u306e\u4f5c\u6210\n\n\u306e3\u30014\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u307e\u3059\u3002\n\n\n## GridIndexArray\nGridIndexArray\u306b\u3064\u3044\u3066\u306f\u3001MeshBuilder\u3067\u4f5c\u6210\u3055\u308c\u305f\u30e1\u30c3\u30b7\u30e5\u3092\u898b\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-06 23.03.54.png](https://qiita-image-store.s3.amazonaws.com/0/153460/e264b606-123a-6933-d7eb-ec59a807b431.png)\n\nExport\u3055\u308c\u305f\u30e1\u30c3\u30b7\u30e5\u306f\u3001\u5c0f\u3055\u306a\u30e1\u30c3\u30b7\u30e5\u306e\u96c6\u5408\u4f53\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u5404\u30e1\u30c3\u30b7\u30e5\u30fb\u30bb\u30b0\u30e1\u30f3\u30c8\u306f\"-1,1,2\"\u3068\u3044\u3063\u305f3\u3064\u306e\u6574\u6570\u304c\u540d\u79f0\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u5206\u5272\u5358\u4f4d\u304cGrid Cell\u3067\u3001\u5272\u308a\u632f\u3089\u308c\u305f3\u3064\u306e\u6574\u6570\u304c[GridIndex](https://developers.google.com/tango/apis/c/reconstruction/reference/group/mesh-building-types#group___mesh_building_types_1ga824e52561f9bddd39622abad95a5c183)\u3001GridIndex\u3092\u914d\u5217\u306b\u3057\u305f\u306e\u304c[GridIndexArray](https://developers.google.com/tango/apis/c/reconstruction/reference/group/mesh-building-types#group___mesh_building_types_1gabeef224040421aee20cf0d6d9d50dfea)\u3067\u3059\u3002\n\nGridIndexArray\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306b\u306f\u3001Grid Cell\u306f16\u00d716\u00d716\u306e[voxel](https://ja.wikipedia.org/wiki/%E3%83%9C%E3%82%AF%E3%82%BB%E3%83%AB)\u3068\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u3001\u5e73\u9762\uff08\u5e8a\uff09\u306b\u76f8\u5f53\u3059\u308bGrid Cell\u306e\u30e1\u30c3\u30b7\u30e5\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u78ba\u304b\u306b16\u5206\u5272\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-06 23.02.38.png](https://qiita-image-store.s3.amazonaws.com/0/153460/e604fb7e-f41b-df8f-afd6-f2d771a13265.png)\n\n\n## \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u89e3\u6790\n\u524d\u7de8\u3068\u540c\u3058\u304f\u3001\u5bfe\u8c61\u306f\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u3067\u3059\u3002\n\n- TangoSDK/Core/Scripts/TangoWrappers/Tango3DReconstruction.cs\n\n### GridIndexArray\u306e\u66f4\u65b0\n\n\npointCloud\u66f4\u65b0\u6642\u306b\u5b9f\u884c\u3055\u308c\u308b`OnTangoPointCloudMultithreadedAvailable()`\u3067`_UpdateDepth()`\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n```Tango3DReconstruction.cs\nprivate void _UpdateDepth(TangoPointCloudIntPtr pointCloud, Matrix4x4 depthPose)\n{\n    ...\n\n    APIPointCloud apiCloud;\n    apiCloud.numPoints = pointCloud.m_numPoints;\n    apiCloud.points = pointCloud.m_points;\n    apiCloud.timestamp = pointCloud.m_timestamp;\n\n    APIPose apiDepthPose = APIPose.FromMatrix4x4(ref depthPose);\n\n    if (!m_sendColorToUpdate)\n    {\n         // No need to wait for a color image, update reconstruction immediately.\n         IntPtr rawUpdatedIndices;\n         Status result = (Status)API.Tango3DR_update(\n             m_context, ref apiCloud, ref apiDepthPose, IntPtr.Zero, IntPtr.Zero, out rawUpdatedIndices);\n\n        ...\n\n        _AddUpdatedIndices(rawUpdatedIndices);\n        API.Tango3DR_GridIndexArray_destroy(rawUpdatedIndices);\n    }\n    else\n    {\n        lock (m_lockObject)\n        {\n            // We need both a color image and a depth cloud to update reconstruction.  Cache the depth cloud\n            // because there are much less depth points than pixels.\n            m_mostRecentDepth = apiCloud;\n            m_mostRecentDepth.points = IntPtr.Zero;\n            Marshal.Copy(pointCloud.m_points, m_mostRecentDepthPoints, 0, pointCloud.m_numPoints * 4);\n\n            m_mostRecentDepthPose = apiDepthPose;\n            m_mostRecentDepthIsValid = true;\n        }\n    }\n}\n```\n\ncolorCamera\u306e\u8272\u60c5\u5831\u3092\u4f7f\u3046\u304b\u5426\u304b\u3067\u51e6\u7406\u304c\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u5229\u7528\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u3053\u3053\u3067[Tango3DR_update()](https://developers.google.com/tango/apis/c/reconstruction/reference/group/mesh-building-functions.html#group___mesh_building_functions_1ga87077592f1cf7688fedac88186149b96)\u3092\u884c\u3044\u307e\u3059\u3002\n3D Reconstruction server\u306e\u60c5\u5831\u304c\u66f4\u65b0\u3055\u308c\u3001`rawUpdatedIndices`\u306b\u66f4\u65b0\u3055\u308c\u305fGrid Cell\u306eGridIndexArray\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3001`_AddUpdatedIndices()`\u306b\u6e21\u3057\u307e\u3059\u3002\n\n\u8272\u60c5\u5831\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001`m_mostRecentDepth`\u3001`m_mostRecentDepthPose`\u3092\u30bb\u30c3\u30c8\u3057\u305f\u4e0a\u3067\u3001colorCamera\u306e\u60c5\u5831\u3092\u5f85\u3061\u307e\u3059\u3002\n\u66f4\u65b0\u3055\u308c\u308b\u3068\u3001`OnTangoImageMultithreadedAvailable()`\u2192`_UpdateColor()`\u2192`Tango3DR_update()`\u2192`_AddUpdatedIndices()`\u3068\u3044\u3046\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n```Tango3DReconstruction.cs\nprivate void _AddUpdatedIndices(IntPtr rawUpdatedIndices)\n{\n    int numUpdatedIndices = Marshal.ReadInt32(rawUpdatedIndices, 0);\n    IntPtr rawIndices = Marshal.ReadIntPtr(rawUpdatedIndices, 4);\n    lock (m_lockObject)\n    {\n        if (m_updatedIndices.Count == 0)\n        {\n            // Update in fast mode, no duplicates are possible.\n            for (int it = 0; it < numUpdatedIndices; ++it)\n            {\n                GridIndex index;\n                index.x = Marshal.ReadInt32(rawIndices, (0 + (it * 3)) * 4);\n                index.y = Marshal.ReadInt32(rawIndices, (1 + (it * 3)) * 4);\n                index.z = Marshal.ReadInt32(rawIndices, (2 + (it * 3)) * 4);\n                m_updatedIndices.Add(index);\n            }\n        }\n        else\n        {\n            // Duplicates are possible, need to check while adding.\n            for (int it = 0; it < numUpdatedIndices; ++it)\n            {\n                GridIndex index;\n                index.x = Marshal.ReadInt32(rawIndices, (0 + (it * 3)) * 4);\n                index.y = Marshal.ReadInt32(rawIndices, (1 + (it * 3)) * 4);\n                index.z = Marshal.ReadInt32(rawIndices, (2 + (it * 3)) * 4);\n                if (!m_updatedIndices.Contains(index))\n                {\n                    m_updatedIndices.Add(index);\n                }\n            }\n        }\n    }\n}\n```\n\n\u66f4\u65b0\u3055\u308c\u305fGrid Cell\u306eGridInex\u3092`m_updatedIndices`\u306b\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n`m_updatedIndices`\u304c\u7a7a\u3067\u3042\u308c\u3070\u5b58\u5728\u30c1\u30a7\u30c3\u30af\u3092\u305b\u305a\u306b\u8ffd\u52a0\u3057\u3001\u30c7\u30fc\u30bf\u304c\u3042\u308c\u3070\u91cd\u8907\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u5b58\u5728\u30c1\u30a7\u30c3\u30af\u304c\u5165\u3063\u3066\u307e\u3059\u3002\n\n\n### \u30e1\u30c3\u30b7\u30e5\u306e\u4f5c\u6210\nUI\u5074\u306e\u51e6\u7406\u3092\u8ffd\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u5c11\u3057\u98db\u3093\u3067\u3057\u307e\u3044\u307e\u3059\u304c\u3001GridIndex\u3092\u6307\u5b9a\u3057\u3066`ExtractMeshSegment()`\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u306eGrid Cell\u306e\u30e1\u30c3\u30b7\u30e5\u3092\u66f8\u304d\u51fa\u3057\u307e\u3059\u3002\n\n```Tango3DReconstruction.cs\ninternal Status ExtractMeshSegment(\n    GridIndex gridIndex, Vector3[] vertices, Vector3[] normals, Color32[] colors, int[] triangles,\n    out int numVertices, out int numTriangles)\n{\n    APIMeshGCHandles pinnedHandles = APIMeshGCHandles.Alloc(vertices, normals, colors, triangles);\n    APIMesh mesh = APIMesh.FromArrays(vertices, normals, colors, triangles);\n\n    int result = API.Tango3DR_extractPreallocatedMeshSegment(m_context, ref gridIndex, ref mesh);\n    numVertices = (int)mesh.numVertices;\n    numTriangles = (int)mesh.numFaces;\n    pinnedHandles.Free();\n\n    return (Status)result;\n}\n```\n\n\u3053\u3053\u3067\u306f\u3001[Tango3DR_extractPreallocatedMeshSegment()](https://developers.google.com/tango/apis/c/reconstruction/reference/group/mesh-building-functions#group___mesh_building_functions_1ga028b53a9dc743482a95a5b9a594bb902)\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001[GridIndexArray\u3092\u6e21\u3057\u3066\u8907\u6570\u306eGrid Cell\u30921\u3064\u306e\u30e1\u30c3\u30b7\u30e5\u3068\u3057\u3066\u8fd4\u3059\u95a2\u6570](https://developers.google.com/tango/apis/c/reconstruction/reference/group/mesh-building-functions#group___mesh_building_functions_1ga3f72eb9057d213e1fa91539f2a82c4f1)\u3001[\u3059\u3079\u3066\u306eGrid Cell\u306e\u30e1\u30c3\u30b7\u30e5\u3092\u8fd4\u3059\u95a2\u6570](https://developers.google.com/tango/apis/c/reconstruction/reference/group/mesh-building-functions#group___mesh_building_functions_1ga8853b816ad5e94b8aba0ae5c779c199e)\u3082\u3042\u308a\u307e\u3059\u3002\n\n\n## \u307e\u3068\u3081\n\u5f8c\u7de8\u3067\u306f\u3001Tango3DR\u304cGridIndexArray\u3092\u7528\u3044\u3066\u3001\u30e1\u30c3\u30b7\u30e5\u3092\u4f5c\u6210\u3059\u308b\u6d41\u308c\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\u5143\u3005\u3001\u5c4b\u5185\u5411\u3051\u306e\u30de\u30c3\u30d7\u69cb\u7bc9\u3084\u5c4b\u5185\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u3078\u306e\u6d3b\u7528\u306b\u8208\u5473\u304c\u3042\u3063\u3066Tango\u306e\u5b66\u7fd2\u3092\u59cb\u3081\u305f\u306e\u3067\u3001\u4ed5\u7d44\u307f\u306e\u7406\u89e3\u3068\u3044\u3046\u70b9\u3067\u306f\u3001\u304b\u306a\u308a\u8996\u754c\u304c\u30af\u30ea\u30a2\u306b\u306a\u3063\u305f\u6c17\u304c\u3057\u307e\u3059\u3002\n", "tags": ["Tango", "AR", "\u62e1\u5f35\u73fe\u5b9f", "Unity"]}