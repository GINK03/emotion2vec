{"tags": ["Ruby", "\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3", "Linux"], "context": " More than 1 year has passed since last update.ANSI\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u3068 cowthink \u306e\u30e1\u30e2\u3067\u3059\u3002(\u304a\u904a\u3073\u30e1\u30e2\u3067\u3059)\n\nANSI\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nANSI\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u306f\u3001\u6587\u5b57\u8272\u3092\u5909\u3048\u305f\u308a\u3067\u304d\u308b\u753b\u9762\u5236\u5fa1\u7528\u30b7\u30fc\u30b1\u30f3\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u89e3\u8aac\u306f\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\u3002(\u30cd\u30c3\u30c8\u306b\u306f\u305f\u304f\u3055\u3093\u89e3\u8aac\u304c\u3042\u308a\u307e\u3059\u306e\u3067)\n\ncowthink\ncowthink \u306f \u30a2\u30b9\u30ad\u30fc\u30a2\u30fc\u30c8\u3092\u51fa\u529b\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3002cowsay \u306b\u542b\u307e\u308c\u307e\u3059\u3002\n\u50d5\u306f\u3001\u4ee5\u4e0b\u306e\u6295\u7a3f\u3067\u77e5\u308a\u307e\u3057\u305f\u3002\n- \u30b3\u30f3\u30bd\u30fc\u30eb\u3067AA\u6587\u5b57\n(Ubuntu Linux \u306e\u5834\u5408\u306e) \u4e0a\u306e\u6295\u7a3f\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u30b3\u30de\u30f3\u30c9\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u3067\u3059\u3002\n$ sudo apt-get install cowsay      # cowsay (cowthink \u304c\u542b\u307e\u308c\u308b\u30d1\u30c3\u30b1\u30fc\u30b8)\n$ sudo apt-get install sysvbanner  # banner\n$ sudo apt-get install figlet      # figlet\n$ sudo apt-get install toilet      # toilet\n\n\u3067\u3001\u3053\u306e cowthink \u3092\u52d5\u304b\u3057\u3066\u307f\u305f\u3044\u306a\u3041\u3001\u3068\u524d\u304b\u3089\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\nyoko-scroll.rb\ncowthink \u3092\u52d5\u304b\u3057\u3066\u3044\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n# \u4f7f\u3044\u65b9\u306e\u4f8b\n\n$ cowthing Hello | ruby ./yoko-scroll.rb\n\n\nyoko-scroll.rb\ntrap(:INT) { exit 0 }\n\nCOLS, RAWS = 80, 24\nTOP = 1 + 1\n\nlines  = $<.readlines.first(RAWS).map(&:chomp) + ['']\nmaxlen = lines.map(&:size).max\nlines  = lines.map{|s| (' ' * COLS) + s.ljust(maxlen + 1) }\n\ncls  = ->   { \"\\e[2J\" }\nmove = -> y { \"\\e[#{y}H\" }\n\ninterval = -> { sleep 0.1 }\n\nlines.first.size.times do |i|\n  print cls.() + move.(TOP)\n\n  puts lines.map {|s| s[i, COLS]} * $/\n\n  interval.()\nend\n\n\n(\u3082\u3061\u308d\u3093 cowthink \u4ee5\u5916\u3067\u3082)\u6a19\u6e96\u5165\u529b\u3001\u3042\u308b\u3044\u306f\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u6a2a\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u306a\u304c\u3089\u8868\u793a\u3057\u307e\u3059\u3002\n\u9069\u5f53\u306a\u4f5c\u308a\u3067\u4e0d\u8db3\u3057\u305f\u3068\u3053\u308d\u3082\u591a\u3005\u3042\u308a\u307e\u3059\u304c\u3001\u304a\u904a\u3073\u306e\u3082\u306e\u306a\u306e\u3067\u3001\u3053\u308c\u4ee5\u4e0a\u306f\u30e1\u30f3\u30c6\u3057\u307e\u305b\u3093\u3002\n\u60aa\u3057\u304b\u3089\u305a\u3002\n\ncowthink \u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u8272\u3092\u3064\u3051\u308b\n\u4e0a\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3068\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u304c\u3001cowthink \u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u7dd1\u8272\u3092\u3064\u3051\u3088\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u3002\necho \u306b\u89e3\u91c8\u3055\u305b\u308b\u306e\u3068\u540c\u3058\u3088\u3046\u306b\u300c\\e[32m...\\e[m\u300d\u3067\u304f\u308b\u3093\u3067\u307f\u307e\u3057\u305f\u304c\u3002\u3002\u3002\n$ cowthink \"\\e[32mHello\\e[m\"       # \u3053\u308c\u3067\u306f\u3001\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3002\u3002\u3002\u3002\n\n\u3046\u30fc\u3093\u3001\u6b8b\u5ff5\u30c0\u30e1\u3067\u3057\u305f\u3002\n\u3002\u3002\u3002\u3068\u8ae6\u3081\u3066\u3057\u307e\u3063\u3066\u306f\u3001\u305d\u3053\u3067\u8a66\u5408\u7d42\u4e86\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3001\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\u3002\u300c\\e\u300d\u306e\u90e8\u5206\uff12\u7b87\u6240\u3092\u5909\u3048\u3066\u3044\u307e\u3059\u3002\n\n\u8868\u793a\u4e0a\u306f\u300c^[\u300d\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u5b9f\u969b\u306f\u3053\u306e\u90e8\u5206\u306f\u751f\u306e\u300cESC\u300d\u3092\u5165\u529b\u3057\u3066\u3044\u307e\u3059\u3002\n\u5927\u62b5\u306e Unix \u7cfb\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u306f\u3001\u751f\u30b3\u30fc\u30c9\u306e\u5165\u529b\u306f\u300cCtrl-V\u300d\u306b\u7d9a\u3051\u3066\u305d\u306e\u30b3\u30fc\u30c9\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n(Ctrl-V \u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u306e\u3001\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u5185\u3067\u6b21\u306b\u7d9a\u304f\u7279\u6b8a\u306a\u6587\u5b57\u306e\u610f\u5473\u3092\u6253\u3061\u6d88\u3059\u300c\\\u300d\u306e\u3088\u3046\u306a\u3082\u306e\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044)\n[Ctrl] + 'V', [ESC]    # [Ctrl]\u30ad\u30fc\u3068\u300cV\u300d\u30ad\u30fc\u3092\u540c\u6642\u306b\u62bc\u3057\u3066\u3001\u7d9a\u3051\u3066\u300cESC\u300d\u30ad\u30fc\u3092\u62bc\u3059\n\n\u300c^[\u300d \u3068\u3044\u3046\u8868\u793a\u306f\u3001\u300cCtrl + '['\u300d\u3092\u3042\u3089\u308f\u3057\u3066\u3044\u307e\u3059\u3002\nCtrl \u306f\u4e0a\u4f4d3\u30d3\u30c3\u30c8\u3092\u30de\u30b9\u30af\u3059\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n0x5b (ASCII '[')    0101 1011\nCtrl \u4fee\u98fe          & 0001 1111     # Ctrl \u306f\u4e0a\u4f4d3\u30d3\u30c3\u30c8\u3092\u30de\u30b9\u30af\u3059\u308b\n------------------------------\n0x1b (ASCII ESC)    0001 1011\n\n\u306a\u306e\u3067\u3001\u300cCtrl-V, [ESC]\u300d\u306f\u300cCtrl-V, Ctrl-[\u300d\u3068\u5165\u529b\u3057\u3066\u3082\u540c\u3058\u3067\u3059\u3002\nCtrl-[ : 0x5b (ASCII '[') & 0x1f (Ctrl) => 0x1b (ASCII ESC)\nCtrl-H : 0x48 (ASCII 'H') & 0x1f (Ctrl) => 0x08 (ASCII BS \u5f8c\u9000(\u30d0\u30c3\u30af\u30b9\u30da\u30fc\u30b9))\nCtrl-I : 0x49 (ASCII 'I') & 0x1f (Ctrl) => 0x09 (ASCII HT \u6c34\u5e73\u30bf\u30d6)\nCtrl-M : 0x4d (ASCII 'M') & 0x1f (Ctrl) => 0x0d (ASCII CR \u5fa9\u5e30(\u30ea\u30bf\u30fc\u30f3))\n\n\u5236\u5fa1\u30b3\u30fc\u30c9\u304c\u9001\u3089\u308c\u3066\u5b9f\u969b\u306b\u3069\u3046\u51e6\u7406\u3059\u308b\u304b\u306f\u3001\u30c9\u30e9\u30a4\u30d0\u3084\u30a2\u30d7\u30ea\u6b21\u7b2c\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u4e0a\u306e yoko-scroll.rb \u3067\u306f\u3001\u5165\u529b\u306b\u5236\u5fa1\u30b3\u30fc\u30c9\u304c\u542b\u307e\u308c\u308b\u304b\u3069\u3046\u304b\u306a\u3069\u306f\u5168\u7136\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u60aa\u3057\u304b\u3089\u305a\u3002\n\nansi_escape_sequence.rb\n\u4f59\u8ac7\u3002\n\u95a2\u9023\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u63b2\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3068\u3044\u3046\u304b\u3001\u30c7\u30a3\u30b9\u30af\u306e\u9685\u306b\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u898b\u3064\u3051\u305f\u306e\u304c\u3053\u306e\u30e1\u30e2\u306e\u767a\u7aef\u3067\u3059\u3002\n\u591a\u5206\u3001\u3053\u308c\u3092\u4f5c\u308b\u3068\u304d\u306e\u5b9f\u9a13\u30b3\u30fc\u30c9\u3060\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\nansi_escape_sequence.rb\n#!/usr/bin/env ruby\n# -*- coding: UTF-8 -*-\n$KCODE = 'UTF-8' if RUBY_VERSION < '1.9'\n\nmodule ANSI\n  module EscapeSequence\n    extend self\n\n    def esc(ctl, *ss)\n      \"\\e[#{ss.join ';'}#{ctl}\"\n    end\n\n    def move(y, x=1)  ; esc:H, y, x ; end\n    def home          ; esc:H       ; end\n\n    def up(y=1)       ; esc:A, y    ; end\n    def down(y=1)     ; esc:B, y    ; end\n    def right(x=1)    ; esc:C, x    ; end\n    def left(x=1)     ; esc:D, x    ; end\n\n    def cls(mode=2)   ; esc:J, mode ; end\n    def insert(n=1)   ; esc:L, n    ; end\n    def delete(n=1)   ; esc:M, n    ; end\n    def del(mode=2)   ; esc:K, mode ; end\n\n    def save          ; esc:s       ; end\n    def undo          ; esc:u       ; end\n\n    def cursor_on     ; esc:l, '5>' ; end\n    def cursor_off    ; esc:h, '5>' ; end\n\n    def color(s0, *ss)\n      seq = ([s0] + ss).map do |s|\n        { Reset:      '',\n          Bold:       1,\n          Underline:  4,\n          Reverse:    7,\n\n          Black:      30,\n          Red:        31,\n          Green:      32,\n          Yellow:     33,\n          Blue:       34,\n          Magenta:    35,\n          Cyan:       36,\n          White:      37,\n\n          BBlack:     40,\n          BRed:       41,\n          BGreen:     42,\n          BYellow:    43,\n          BBlue:      44,\n          BMagenta:   45,\n          BCyan:      46,\n          BWhite:     47,\n        }[s] || s\n      end\n\n      esc:m, *seq\n    end\n\n    def wrap(s, *ss)\n      color(*ss) + s + reset\n    end\n\n    alias :seq :wrap\n\n    def reset     ; color:Reset     ; end\n    def bold      ; color:Bold      ; end\n    def underline ; color:Underline ; end\n    def reverse   ; color:Reverse   ; end\n\n    def black     ; color:Black     ; end\n    def red       ; color:Red       ; end\n    def green     ; color:Green     ; end\n    def yellow    ; color:Yellow    ; end\n    def blue      ; color:Blue      ; end\n    def magenta   ; color:Magenta   ; end\n    def cyan      ; color:Cyan      ; end\n    def while     ; color:White     ; end\n\n    def bblack    ; color:BBlack    ; end\n    def bred      ; color:BRed      ; end\n    def bgreen    ; color:BGreen    ; end\n    def byellow   ; color:BYellow   ; end\n    def bblue     ; color:BBlue     ; end\n    def bmagenta  ; color:BMagenta  ; end\n    def bcyan     ; color:BCyan     ; end\n    def bwhile    ; color:BWhite    ; end\n\n  end\nend\n\nif __FILE__ == $0\n  ESC = ANSI::EscapeSequence\n\n  p ESC.move 1, 3                           #=> \"\\e[1;3H\"\n  p ESC.home                                #=> \"\\e[H\"\n  p ESC.cls 1                               #=> \"\\e[1J\"\n  p ESC.cls                                 #=> \"\\e[2J\"\n  p ESC.underline                           #=> \"\\e[4m\"\n  p ESC.red                                 #=> \"\\e[31m\"\n  p ESC.bcyan                               #=> \"\\e[46m\"\n  p ESC.color :Bold, :Green                 #=> \"\\e[1;32m\"\n  p ESC.seq \"hello\", :Underline, :BBlue     #=> \"\\e[4;44mhello\\e[m\"\nend\n\n# vi:set ts=2 sw=2 et:\n\n\n\n\u304a\u308f\u308a\u306b\n\u3053\u306e\u30e1\u30e2\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306a\u3069\u306e\u52d5\u4f5c\u306f\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u884c\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\nUbuntu Linux 14.04\nRuby 2.1.5\n\n\n\u30a8\u30d3\u30c7\u30f3\u30b9\u53d6\u308b\u306e\u306b\u306f\u3044\u3064\u3082\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3gif\u4f5c\u308b\u306e\u306b\u306f\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u6570\u500d\u306e\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3057\u305f\u3002\u3002\u3002\nANSI\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u3068 cowthink \u306e\u30e1\u30e2\u3067\u3059\u3002(\u304a\u904a\u3073\u30e1\u30e2\u3067\u3059)\n\n# ANSI\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\nANSI\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u306f\u3001\u6587\u5b57\u8272\u3092\u5909\u3048\u305f\u308a\u3067\u304d\u308b\u753b\u9762\u5236\u5fa1\u7528\u30b7\u30fc\u30b1\u30f3\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u89e3\u8aac\u306f\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\u3002(\u30cd\u30c3\u30c8\u306b\u306f\u305f\u304f\u3055\u3093\u89e3\u8aac\u304c\u3042\u308a\u307e\u3059\u306e\u3067)\n\n#cowthink\ncowthink \u306f \u30a2\u30b9\u30ad\u30fc\u30a2\u30fc\u30c8\u3092\u51fa\u529b\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3002cowsay \u306b\u542b\u307e\u308c\u307e\u3059\u3002\n\u50d5\u306f\u3001\u4ee5\u4e0b\u306e\u6295\u7a3f\u3067\u77e5\u308a\u307e\u3057\u305f\u3002\n- [\u30b3\u30f3\u30bd\u30fc\u30eb\u3067AA\u6587\u5b57](http://qiita.com/yohhoy/items/c7d457479062f5bd3834 \"\u30b3\u30f3\u30bd\u30fc\u30eb\u3067AA\u6587\u5b57\")\n\n(Ubuntu Linux \u306e\u5834\u5408\u306e) \u4e0a\u306e\u6295\u7a3f\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u30b3\u30de\u30f3\u30c9\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u3067\u3059\u3002\n\n```shell-session\n$ sudo apt-get install cowsay      # cowsay (cowthink \u304c\u542b\u307e\u308c\u308b\u30d1\u30c3\u30b1\u30fc\u30b8)\n$ sudo apt-get install sysvbanner  # banner\n$ sudo apt-get install figlet      # figlet\n$ sudo apt-get install toilet      # toilet\n```\n\n\u3067\u3001\u3053\u306e cowthink \u3092\u52d5\u304b\u3057\u3066\u307f\u305f\u3044\u306a\u3041\u3001\u3068\u524d\u304b\u3089\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n![cowthink-yoko.gif](https://qiita-image-store.s3.amazonaws.com/0/60624/14be16bf-931a-3132-58e2-a94dbfdea03d.gif)\n\n# yoko-scroll.rb\ncowthink \u3092\u52d5\u304b\u3057\u3066\u3044\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\n```shell-session\n# \u4f7f\u3044\u65b9\u306e\u4f8b\n\n$ cowthing Hello | ruby ./yoko-scroll.rb\n```\n\n```rb:yoko-scroll.rb\ntrap(:INT) { exit 0 }\n\nCOLS, RAWS = 80, 24\nTOP = 1 + 1\n\nlines  = $<.readlines.first(RAWS).map(&:chomp) + ['']\nmaxlen = lines.map(&:size).max\nlines  = lines.map{|s| (' ' * COLS) + s.ljust(maxlen + 1) }\n\ncls  = ->   { \"\\e[2J\" }\nmove = -> y { \"\\e[#{y}H\" }\n\ninterval = -> { sleep 0.1 }\n\nlines.first.size.times do |i|\n  print cls.() + move.(TOP)\n\n  puts lines.map {|s| s[i, COLS]} * $/\n\n  interval.()\nend\n```\n(\u3082\u3061\u308d\u3093 cowthink \u4ee5\u5916\u3067\u3082)\u6a19\u6e96\u5165\u529b\u3001\u3042\u308b\u3044\u306f\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u6a2a\u306b\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u306a\u304c\u3089\u8868\u793a\u3057\u307e\u3059\u3002\n\u9069\u5f53\u306a\u4f5c\u308a\u3067\u4e0d\u8db3\u3057\u305f\u3068\u3053\u308d\u3082\u591a\u3005\u3042\u308a\u307e\u3059\u304c\u3001\u304a\u904a\u3073\u306e\u3082\u306e\u306a\u306e\u3067\u3001\u3053\u308c\u4ee5\u4e0a\u306f\u30e1\u30f3\u30c6\u3057\u307e\u305b\u3093\u3002\n\u60aa\u3057\u304b\u3089\u305a\u3002\n\n\n#cowthink \u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u8272\u3092\u3064\u3051\u308b\n\u4e0a\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3068\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u304c\u3001cowthink \u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u7dd1\u8272\u3092\u3064\u3051\u3088\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u3002\necho \u306b\u89e3\u91c8\u3055\u305b\u308b\u306e\u3068\u540c\u3058\u3088\u3046\u306b\u300c\\e[32m...\\e[m\u300d\u3067\u304f\u308b\u3093\u3067\u307f\u307e\u3057\u305f\u304c\u3002\u3002\u3002\n\n```\n$ cowthink \"\\e[32mHello\\e[m\"       # \u3053\u308c\u3067\u306f\u3001\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3002\u3002\u3002\u3002\n``` \n\n\u3046\u30fc\u3093\u3001\u6b8b\u5ff5\u30c0\u30e1\u3067\u3057\u305f\u3002\n\u3002\u3002\u3002\u3068\u8ae6\u3081\u3066\u3057\u307e\u3063\u3066\u306f\u3001\u305d\u3053\u3067\u8a66\u5408\u7d42\u4e86\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3001\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\u3002\u300c\\e\u300d\u306e\u90e8\u5206\uff12\u7b87\u6240\u3092\u5909\u3048\u3066\u3044\u307e\u3059\u3002\n\n![cowthink.png](https://qiita-image-store.s3.amazonaws.com/0/60624/24887ee4-0a48-5a6b-d304-f1bb4a1cb0b7.png)\n\n\u8868\u793a\u4e0a\u306f\u300c^[\u300d\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u5b9f\u969b\u306f\u3053\u306e\u90e8\u5206\u306f\u751f\u306e\u300cESC\u300d\u3092\u5165\u529b\u3057\u3066\u3044\u307e\u3059\u3002\n\u5927\u62b5\u306e Unix \u7cfb\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u306f\u3001\u751f\u30b3\u30fc\u30c9\u306e\u5165\u529b\u306f\u300cCtrl-V\u300d\u306b\u7d9a\u3051\u3066\u305d\u306e\u30b3\u30fc\u30c9\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n(Ctrl-V \u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u306e\u3001\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u5185\u3067\u6b21\u306b\u7d9a\u304f\u7279\u6b8a\u306a\u6587\u5b57\u306e\u610f\u5473\u3092\u6253\u3061\u6d88\u3059\u300c\\\u300d\u306e\u3088\u3046\u306a\u3082\u306e\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044)\n\n    [Ctrl] + 'V', [ESC]    # [Ctrl]\u30ad\u30fc\u3068\u300cV\u300d\u30ad\u30fc\u3092\u540c\u6642\u306b\u62bc\u3057\u3066\u3001\u7d9a\u3051\u3066\u300cESC\u300d\u30ad\u30fc\u3092\u62bc\u3059\n\n\u300c^[\u300d \u3068\u3044\u3046\u8868\u793a\u306f\u3001\u300cCtrl + '['\u300d\u3092\u3042\u3089\u308f\u3057\u3066\u3044\u307e\u3059\u3002\nCtrl \u306f\u4e0a\u4f4d3\u30d3\u30c3\u30c8\u3092\u30de\u30b9\u30af\u3059\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n    0x5b (ASCII '[')    0101 1011\n    Ctrl \u4fee\u98fe          & 0001 1111     # Ctrl \u306f\u4e0a\u4f4d3\u30d3\u30c3\u30c8\u3092\u30de\u30b9\u30af\u3059\u308b\n    ------------------------------\n    0x1b (ASCII ESC)    0001 1011\n\n\u306a\u306e\u3067\u3001\u300cCtrl-V, [ESC]\u300d\u306f\u300cCtrl-V, Ctrl-[\u300d\u3068\u5165\u529b\u3057\u3066\u3082\u540c\u3058\u3067\u3059\u3002\n\n```\nCtrl-[ : 0x5b (ASCII '[') & 0x1f (Ctrl) => 0x1b (ASCII ESC)\nCtrl-H : 0x48 (ASCII 'H') & 0x1f (Ctrl) => 0x08 (ASCII BS \u5f8c\u9000(\u30d0\u30c3\u30af\u30b9\u30da\u30fc\u30b9))\nCtrl-I : 0x49 (ASCII 'I') & 0x1f (Ctrl) => 0x09 (ASCII HT \u6c34\u5e73\u30bf\u30d6)\nCtrl-M : 0x4d (ASCII 'M') & 0x1f (Ctrl) => 0x0d (ASCII CR \u5fa9\u5e30(\u30ea\u30bf\u30fc\u30f3))\n```\n\n\u5236\u5fa1\u30b3\u30fc\u30c9\u304c\u9001\u3089\u308c\u3066\u5b9f\u969b\u306b\u3069\u3046\u51e6\u7406\u3059\u308b\u304b\u306f\u3001\u30c9\u30e9\u30a4\u30d0\u3084\u30a2\u30d7\u30ea\u6b21\u7b2c\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u4e0a\u306e yoko-scroll.rb \u3067\u306f\u3001\u5165\u529b\u306b\u5236\u5fa1\u30b3\u30fc\u30c9\u304c\u542b\u307e\u308c\u308b\u304b\u3069\u3046\u304b\u306a\u3069\u306f\u5168\u7136\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u60aa\u3057\u304b\u3089\u305a\u3002\n\n# ansi_escape_sequence.rb\n\u4f59\u8ac7\u3002\n\u95a2\u9023\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u63b2\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3068\u3044\u3046\u304b\u3001\u30c7\u30a3\u30b9\u30af\u306e\u9685\u306b\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u898b\u3064\u3051\u305f\u306e\u304c\u3053\u306e\u30e1\u30e2\u306e\u767a\u7aef\u3067\u3059\u3002\n\u591a\u5206\u3001[\u3053\u308c](http://qiita.com/lnznt/items/0e582a867e34436ce126 \"Ruby: pry \u306e\u8d77\u52d5\u6642\u306b\u8272\u4ed8\u304d\u30d0\u30ca\u30fc\u3092\u51fa\u3059\u30b9\u30af\u30ea\u30d7\u30c8\")\u3092\u4f5c\u308b\u3068\u304d\u306e\u5b9f\u9a13\u30b3\u30fc\u30c9\u3060\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\n```rb:ansi_escape_sequence.rb\n#!/usr/bin/env ruby\n# -*- coding: UTF-8 -*-\n$KCODE = 'UTF-8' if RUBY_VERSION < '1.9'\n\nmodule ANSI\n  module EscapeSequence\n    extend self\n\n    def esc(ctl, *ss)\n      \"\\e[#{ss.join ';'}#{ctl}\"\n    end\n\n    def move(y, x=1)  ; esc:H, y, x ; end\n    def home          ; esc:H       ; end\n\n    def up(y=1)       ; esc:A, y    ; end\n    def down(y=1)     ; esc:B, y    ; end\n    def right(x=1)    ; esc:C, x    ; end\n    def left(x=1)     ; esc:D, x    ; end\n\n    def cls(mode=2)   ; esc:J, mode ; end\n    def insert(n=1)   ; esc:L, n    ; end\n    def delete(n=1)   ; esc:M, n    ; end\n    def del(mode=2)   ; esc:K, mode ; end\n\n    def save          ; esc:s       ; end\n    def undo          ; esc:u       ; end\n\n    def cursor_on     ; esc:l, '5>' ; end\n    def cursor_off    ; esc:h, '5>' ; end\n\n    def color(s0, *ss)\n      seq = ([s0] + ss).map do |s|\n        { Reset:      '',\n          Bold:       1,\n          Underline:  4,\n          Reverse:    7,\n\n          Black:      30,\n          Red:        31,\n          Green:      32,\n          Yellow:     33,\n          Blue:       34,\n          Magenta:    35,\n          Cyan:       36,\n          White:      37,\n\n          BBlack:     40,\n          BRed:       41,\n          BGreen:     42,\n          BYellow:    43,\n          BBlue:      44,\n          BMagenta:   45,\n          BCyan:      46,\n          BWhite:     47,\n        }[s] || s\n      end\n\n      esc:m, *seq\n    end\n\n    def wrap(s, *ss)\n      color(*ss) + s + reset\n    end\n\n    alias :seq :wrap\n\n    def reset     ; color:Reset     ; end\n    def bold      ; color:Bold      ; end\n    def underline ; color:Underline ; end\n    def reverse   ; color:Reverse   ; end\n\n    def black     ; color:Black     ; end\n    def red       ; color:Red       ; end\n    def green     ; color:Green     ; end\n    def yellow    ; color:Yellow    ; end\n    def blue      ; color:Blue      ; end\n    def magenta   ; color:Magenta   ; end\n    def cyan      ; color:Cyan      ; end\n    def while     ; color:White     ; end\n\n    def bblack    ; color:BBlack    ; end\n    def bred      ; color:BRed      ; end\n    def bgreen    ; color:BGreen    ; end\n    def byellow   ; color:BYellow   ; end\n    def bblue     ; color:BBlue     ; end\n    def bmagenta  ; color:BMagenta  ; end\n    def bcyan     ; color:BCyan     ; end\n    def bwhile    ; color:BWhite    ; end\n\n  end\nend\n\nif __FILE__ == $0\n  ESC = ANSI::EscapeSequence\n\n  p ESC.move 1, 3                           #=> \"\\e[1;3H\"\n  p ESC.home                                #=> \"\\e[H\"\n  p ESC.cls 1                               #=> \"\\e[1J\"\n  p ESC.cls                                 #=> \"\\e[2J\"\n  p ESC.underline                           #=> \"\\e[4m\"\n  p ESC.red                                 #=> \"\\e[31m\"\n  p ESC.bcyan                               #=> \"\\e[46m\"\n  p ESC.color :Bold, :Green                 #=> \"\\e[1;32m\"\n  p ESC.seq \"hello\", :Underline, :BBlue     #=> \"\\e[4;44mhello\\e[m\"\nend\n\n# vi:set ts=2 sw=2 et:\n```\n\n# \u304a\u308f\u308a\u306b\n\u3053\u306e\u30e1\u30e2\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306a\u3069\u306e\u52d5\u4f5c\u306f\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u884c\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\n- Ubuntu Linux 14.04\n- Ruby 2.1.5\n\n---\n\u30a8\u30d3\u30c7\u30f3\u30b9\u53d6\u308b\u306e\u306b\u306f\u3044\u3064\u3082\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3gif\u4f5c\u308b\u306e\u306b\u306f\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u6570\u500d\u306e\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3057\u305f\u3002\u3002\u3002\n\n"}