{"context": " More than 1 year has passed since last update.\u5099\u5fd8\u9332\u3002\nDjango\u306e\u30ed\u30b0\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5207\u308a\u66ff\u3048\u308b\u306b\u306flogging.Formatter\u3092\u7d99\u627f\u3057\u305f\u30ab\u30b9\u30bf\u30e0\u30af\u30e9\u30b9\u3092\u4f5c\u308c\u3070\u826f\u3044\u3002format()\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066str\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3002\n\nlog_formatter.py\nimport logging\nimport socket\nfrom django.utils.datastructures import SortedDict\n\nfrom ltsv import ltsv\n\n\nclass LTSVFormatter(logging.Formatter):\n    def format(self, record):\n        # dict\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4e26\u3073\u9806\u304c\u4fdd\u8a3c\u3055\u308c\u306a\u3044\uff1f\u306e\u3067Django SortedDict\u3092\u4f7f\u3063\u3066\u3044\u308b\n        data = SortedDict()\n        data['host'] = socket.gethostname()\n        data['time'] = record.created\n        data['pid'] = record.process\n        data['level'] = record.levelname\n\n        # \u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8f9e\u66f8\u306e\u5834\u5408\u306b\u306f\u51fa\u529b\u30c7\u30fc\u30bf\u306b\u305d\u306e\u307e\u307e\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\n        if isinstance(record.msg, str):\n            data['msg'] = record.msg\n        elif isinstance(record.msg, dict):\n            data.update(record.msg)\n\n        return ltsv.writer(data).decode('utf-8')\n\n\nsettings.LOGGING\u306eformatters\u306b\u6b21\u306e\u3088\u3046\u306b\u8ffd\u52a0\u3059\u308b\u3002\u30ab\u30b9\u30bf\u30e0\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u3092\u4f7f\u3046\u306b\u306f()\u3068\u3044\u3046\u30ad\u30fc\u306b\u30b3\u30fc\u30e9\u30d6\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3002\u516c\u5f0f\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u306a\u304f\u3066\u3001\u30b3\u30fc\u30c9\u8aad\u3093\u3067\u521d\u3081\u3066\u77e5\u3063\u305f\u2026\u3002\n\nsettings.py\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'ltsv': {\n            '()': 'apps.base.logging.LTSVFormatter',\n        },\n    }\n}\n\n\n\u51fa\u529b\u7d50\u679c\u3002\nhost:mbp15-retina.local time:1422418685.587985  pid:58432   level:INFO  msg:Hello world!\n\n\u4f59\u8ac7\u3002\npypi\u306b\u3042\u308bltsv\u30e2\u30b8\u30e5\u30fc\u30eb\u306fwriter()\u304c\u4e0a\u624b\u304f\u52d5\u304b\u306a\u304b\u3063\u305f\u3002\u30d5\u30a9\u30fc\u30af\u3055\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306f\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u305f\u3002\u30d7\u30eb\u30ea\u30af\u6295\u3052\u3089\u308c\u3066\u308b\u306e\u3067\u30de\u30fc\u30b8\u3057\u3066\u307b\u3057\u3044\u306a\u3042\u2026\u3002\n\n\n\u53c2\u8003\n\n16.6. logging \u2014 Logging facility for Python\n\n\n\u5099\u5fd8\u9332\u3002\n\nDjango\u306e\u30ed\u30b0\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5207\u308a\u66ff\u3048\u308b\u306b\u306f`logging.Formatter`\u3092\u7d99\u627f\u3057\u305f\u30ab\u30b9\u30bf\u30e0\u30af\u30e9\u30b9\u3092\u4f5c\u308c\u3070\u826f\u3044\u3002`format()`\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066`str`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3002\n\n```python:log_formatter.py\nimport logging\nimport socket\nfrom django.utils.datastructures import SortedDict\n\nfrom ltsv import ltsv\n\n\nclass LTSVFormatter(logging.Formatter):\n    def format(self, record):\n        # dict\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4e26\u3073\u9806\u304c\u4fdd\u8a3c\u3055\u308c\u306a\u3044\uff1f\u306e\u3067Django SortedDict\u3092\u4f7f\u3063\u3066\u3044\u308b\n        data = SortedDict()\n        data['host'] = socket.gethostname()\n        data['time'] = record.created\n        data['pid'] = record.process\n        data['level'] = record.levelname\n\n        # \u30ed\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8f9e\u66f8\u306e\u5834\u5408\u306b\u306f\u51fa\u529b\u30c7\u30fc\u30bf\u306b\u305d\u306e\u307e\u307e\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\n        if isinstance(record.msg, str):\n            data['msg'] = record.msg\n        elif isinstance(record.msg, dict):\n            data.update(record.msg)\n\n        return ltsv.writer(data).decode('utf-8')\n```\n\n`settings.LOGGING`\u306eformatters\u306b\u6b21\u306e\u3088\u3046\u306b\u8ffd\u52a0\u3059\u308b\u3002\u30ab\u30b9\u30bf\u30e0\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u3092\u4f7f\u3046\u306b\u306f`()`\u3068\u3044\u3046\u30ad\u30fc\u306b\u30b3\u30fc\u30e9\u30d6\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3002[\u516c\u5f0f\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://docs.djangoproject.com/en/1.7/topics/logging/)\u306b\u66f8\u3044\u3066\u306a\u304f\u3066\u3001\u30b3\u30fc\u30c9\u8aad\u3093\u3067\u521d\u3081\u3066\u77e5\u3063\u305f\u2026\u3002\n\n\n```python:settings.py\nLOGGING = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'ltsv': {\n            '()': 'apps.base.logging.LTSVFormatter',\n        },\n    }\n}\n```\n\n\u51fa\u529b\u7d50\u679c\u3002\n\n```text\nhost:mbp15-retina.local\ttime:1422418685.587985\tpid:58432\tlevel:INFO\tmsg:Hello world!\n```\n\n\u4f59\u8ac7\u3002\n\npypi\u306b\u3042\u308bltsv\u30e2\u30b8\u30e5\u30fc\u30eb\u306f`writer()`\u304c\u4e0a\u624b\u304f\u52d5\u304b\u306a\u304b\u3063\u305f\u3002[\u30d5\u30a9\u30fc\u30af\u3055\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9](https://github.com/koseki/python-ltsv/tree/improve-writer)\u306f\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u305f\u3002[\u30d7\u30eb\u30ea\u30af\u6295\u3052\u3089\u308c\u3066\u308b](https://github.com/hekyou/python-ltsv/pull/10/commits)\u306e\u3067\u30de\u30fc\u30b8\u3057\u3066\u307b\u3057\u3044\u306a\u3042\u2026\u3002\n\n----\n\n# \u53c2\u8003\n\n* [16.6. logging \u2014 Logging facility for Python](https://docs.python.org/3/library/logging.html)\n", "tags": ["log", "LTSV", "Django"]}