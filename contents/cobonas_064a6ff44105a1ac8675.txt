{"context": " More than 1 year has passed since last update.\u3053\u3093\u306a\u306e\u304c\u3042\u3063\u305f\u5834\u5408\u3001\n\nModel.scala\nimport play.api.db.DB\nimport play.api.Play.current\nimport scala.slick.driver.MySQLDriver.simple._\nimport scala.slick.jdbc._\nimport scala.language.postfixOps\n\ncase class Model(id:Int, name:String)\n\nobject Models extends Table[Model](\"models\") {\n\n  def id      = column[Int](\"id\", O.PrimaryKey, O.AutoInc)\n  def name = column[String](\"name\", O.NotNull, O DBType \"varchar(100)\")\n  def * = id ~ name <> (Model.apply _, Model.unapply _)\n\n  /** DB\u30b3\u30cd\u30af\u30b7\u30e7\u30f3 */\n  val database = Database.forDataSource(DB.getDataSource())\n\n  /** \u767b\u9332 */\n  def create(e: Model) = database.withTransaction { implicit session: Session =>\n    Models.insert(e)\n  }\n}\n\n\nDatabase.threadLocalSession\u3092import\u3059\u308b\u3068implicit ....\u304c\u3044\u3089\u306a\u3044\u3089\u3057\u3044\n\nModel.scala\nimport play.api.db.DB\nimport play.api.Play.current\nimport scala.slick.driver.MySQLDriver.simple._\nimport scala.slick.jdbc._\nimport Database.threadLocalSession\nimport scala.language.postfixOps\n\ncase class Model(id:Int, name:String)\n\nobject Models extends Table[Model](\"models\") {\n\n  def id      = column[Int](\"id\", O.PrimaryKey, O.AutoInc)\n  def name = column[String](\"name\", O.NotNull, O DBType \"varchar(100)\")\n  def * = id ~ name <> (Model.apply _, Model.unapply _)\n\n  /** DB\u30b3\u30cd\u30af\u30b7\u30e7\u30f3 */\n  val database = Database.forDataSource(DB.getDataSource())\n\n  /** \u767b\u9332 */\n  def create(e: Model) = database.withTransaction {\n    Models.insert(e)\n  }\n}\n\n\n\u3053\u3093\u306a\u306e\u304c\u3042\u3063\u305f\u5834\u5408\u3001\n\n```scala:Model.scala\nimport play.api.db.DB\nimport play.api.Play.current\nimport scala.slick.driver.MySQLDriver.simple._\nimport scala.slick.jdbc._\nimport scala.language.postfixOps\n\ncase class Model(id:Int, name:String)\n\nobject Models extends Table[Model](\"models\") {\n\n  def id      = column[Int](\"id\", O.PrimaryKey, O.AutoInc)\n  def name = column[String](\"name\", O.NotNull, O DBType \"varchar(100)\")\n  def * = id ~ name <> (Model.apply _, Model.unapply _)\n  \n  /** DB\u30b3\u30cd\u30af\u30b7\u30e7\u30f3 */\n  val database = Database.forDataSource(DB.getDataSource())\n \n  /** \u767b\u9332 */\n  def create(e: Model) = database.withTransaction { implicit session: Session =>\n    Models.insert(e)\n  }\n}\n```\n\nDatabase.threadLocalSession\u3092import\u3059\u308b\u3068implicit ....\u304c\u3044\u3089\u306a\u3044\u3089\u3057\u3044\n\n```scala:Model.scala\nimport play.api.db.DB\nimport play.api.Play.current\nimport scala.slick.driver.MySQLDriver.simple._\nimport scala.slick.jdbc._\nimport Database.threadLocalSession\nimport scala.language.postfixOps\n\ncase class Model(id:Int, name:String)\n\nobject Models extends Table[Model](\"models\") {\n\n  def id      = column[Int](\"id\", O.PrimaryKey, O.AutoInc)\n  def name = column[String](\"name\", O.NotNull, O DBType \"varchar(100)\")\n  def * = id ~ name <> (Model.apply _, Model.unapply _)\n  \n  /** DB\u30b3\u30cd\u30af\u30b7\u30e7\u30f3 */\n  val database = Database.forDataSource(DB.getDataSource())\n \n  /** \u767b\u9332 */\n  def create(e: Model) = database.withTransaction {\n    Models.insert(e)\n  }\n}\n```", "tags": ["Scala", "Play2", "PlayFramework"]}