{"context": " More than 1 year has passed since last update.http://qiita.com/Nabetani/items/34bf2a05099a47e193b6\nhttp://nabetani.sakura.ne.jp/hena/ord22irrpas/\n50\u5206\u307b\u3069\u3002\u304b\u306a\u308a\u5927\u5909\u3067\u3057\u305f\u3002\n\u4e00\u5fdcRuby 1.8/2.0\u3067\u52d5\u4f5c\u3002\nnil\u3092\u6d3b\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u540c\u7b49\u306e\u3082\u306e\u304c\u306a\u3044\u8a00\u8a9e\u3078\u306e\u79fb\u690d\u306f\u56f0\u96e3\u3002\n\nhena22.rb\n#!/usr/bin/env ruby\n#http://qiita.com/Nabetani/items/34bf2a05099a47e193b6\n#http://nabetani.sakura.ne.jp/hena/ord22irrpas/\nSTDOUT.sync=true\nwhile gets\n    a,b=$_.chomp.split(':')\n    column,row=a.split('x').map(&:to_i)\n    cells=!b ? [] : b.split(',').map{|e|\n        l,t,w,h=e.split('').map(&:to_i)\n        #\u756a\u5175\u3092\u8a2d\u3051\u308b\u305f\u30811\u3092\u8db3\u3059\u3002\u9ad8\u3055/\u5e45\u304b\u3089\u7aef\u70b9\u306e\u5ea7\u6a19\u306b\u5909\u66f4\u3002\n        {:x1=>l.to_i+1,:x2=>l.to_i+1+w.to_i,:y1=>t.to_i+1,:y2=>t.to_i+1+h.to_i}\n    }\n\n    m=(row+1).times.map{[nil]*(column+1)}\n    (row+1).times{|y|m[y][0]=0}\n    (column+1).times{|x|m[0][x]=0}\n    m[0][1]=1 #m[1][0]=1\u3067\u3082\u53ef\u3002\u9069\u5f53\u3002\n\n    while !m[row][column] # \u53f3\u4e0b\u304c\u57cb\u307e\u308b\u307e\u3067\n        1.step(row){|y|\n            1.step(column){|x|\n                next if m[y][x] # \u65e2\u306b\u57cb\u307e\u3063\u3066\u3044\u305f\u3089\u30b9\u30ad\u30c3\u30d7\n                #1x1\u306e\u30bb\u30eb\u3067\u306a\u3051\u308c\u3070\n                if cell=cells.find{|e|e[:x1]<=x&&x<e[:x2] && e[:y1]<=y&&y<e[:y2]}\n                    #\u30bb\u30eb\u306e\u53f3\u4e0a\u3092\u898b\u3066\u3044\u308b\u6642\u306b\u9650\u308a\u5de6\u30fb\u4e0a\u96a3\u3092\u898b\u308b\n                    if cell[:x1]==x && cell[:y1]==y\n                        cells_for_val={}\n                        val=0\n                        #\u5de6\u96a3\n                        unless (cell[:y1]...cell[:y2]).each{|_y|\n                            adjacent_cell=cells.find{|e|e[:x1]<=x-1&&x-1<e[:x2] && e[:y1]<=_y&&_y<e[:y2]}\n                            if !adjacent_cell||!cells_for_val.include?(adjacent_cell)\n                                cells_for_val[adjacent_cell]=1 if adjacent_cell\n                                break if !m[_y][x-1] # \u307e\u3060\u30bb\u30eb\u304c\u57cb\u307e\u3063\u3066\u3044\u306a\u3051\u308c\u3070\u30b9\u30ad\u30c3\u30d7\u3002break\u3059\u308b\u3068each\u306fnil\u3092\u8fd4\u3059\u3002unless\u301cnext\u3002\n                                val+=m[_y][x-1]\n                            end\n                        }\n                            next\n                        end\n                        #\u4e0a\u96a3\n                        unless (cell[:x1]...cell[:x2]).each{|_x|\n                            adjacent_cell=cells.find{|e|e[:x1]<=_x&&_x<e[:x2] && e[:y1]<=y-1&&y-1<e[:y2]}\n                            if !adjacent_cell||!cells_for_val.include?(adjacent_cell)\n                                cells_for_val[adjacent_cell]=1 if adjacent_cell\n                                break if !m[y-1][_x]\n                                val+=m[y-1][_x]\n                            end\n                        }\n                            next\n                        end\n                        #\u30bb\u30eb\u3092\u57cb\u3081\u308b\n                        (cell[:y1]...cell[:y2]).each{|_y|\n                            (cell[:x1]...cell[:x2]).each{|_x|\n                                m[_y][_x]=val%100\n                            }\n                        }\n                    end\n                else\n                    next if !m[y-1][x] || !m[y][x-1]\n                    val=m[y-1][x]+m[y][x-1]\n                    m[y][x]=val%100\n                end\n            }\n        }\n    end\n    puts \"%02d\"%m[row][column]\nend\n\n\nhttp://qiita.com/Nabetani/items/34bf2a05099a47e193b6\nhttp://nabetani.sakura.ne.jp/hena/ord22irrpas/\n\n50\u5206\u307b\u3069\u3002\u304b\u306a\u308a\u5927\u5909\u3067\u3057\u305f\u3002\n\u4e00\u5fdcRuby 1.8/2.0\u3067\u52d5\u4f5c\u3002\nnil\u3092\u6d3b\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u540c\u7b49\u306e\u3082\u306e\u304c\u306a\u3044\u8a00\u8a9e\u3078\u306e\u79fb\u690d\u306f\u56f0\u96e3\u3002\n\n```rb:hena22.rb\n#!/usr/bin/env ruby\n#http://qiita.com/Nabetani/items/34bf2a05099a47e193b6\n#http://nabetani.sakura.ne.jp/hena/ord22irrpas/\nSTDOUT.sync=true\nwhile gets\n\ta,b=$_.chomp.split(':')\n\tcolumn,row=a.split('x').map(&:to_i)\n\tcells=!b ? [] : b.split(',').map{|e|\n\t\tl,t,w,h=e.split('').map(&:to_i)\n\t\t#\u756a\u5175\u3092\u8a2d\u3051\u308b\u305f\u30811\u3092\u8db3\u3059\u3002\u9ad8\u3055/\u5e45\u304b\u3089\u7aef\u70b9\u306e\u5ea7\u6a19\u306b\u5909\u66f4\u3002\n\t\t{:x1=>l.to_i+1,:x2=>l.to_i+1+w.to_i,:y1=>t.to_i+1,:y2=>t.to_i+1+h.to_i}\n\t}\n\n\tm=(row+1).times.map{[nil]*(column+1)}\n\t(row+1).times{|y|m[y][0]=0}\n\t(column+1).times{|x|m[0][x]=0}\n\tm[0][1]=1 #m[1][0]=1\u3067\u3082\u53ef\u3002\u9069\u5f53\u3002\n\n\twhile !m[row][column] # \u53f3\u4e0b\u304c\u57cb\u307e\u308b\u307e\u3067\n\t\t1.step(row){|y|\n\t\t\t1.step(column){|x|\n\t\t\t\tnext if m[y][x] # \u65e2\u306b\u57cb\u307e\u3063\u3066\u3044\u305f\u3089\u30b9\u30ad\u30c3\u30d7\n\t\t\t\t#1x1\u306e\u30bb\u30eb\u3067\u306a\u3051\u308c\u3070\n\t\t\t\tif cell=cells.find{|e|e[:x1]<=x&&x<e[:x2] && e[:y1]<=y&&y<e[:y2]}\n\t\t\t\t\t#\u30bb\u30eb\u306e\u53f3\u4e0a\u3092\u898b\u3066\u3044\u308b\u6642\u306b\u9650\u308a\u5de6\u30fb\u4e0a\u96a3\u3092\u898b\u308b\n\t\t\t\t\tif cell[:x1]==x && cell[:y1]==y\n\t\t\t\t\t\tcells_for_val={}\n\t\t\t\t\t\tval=0\n\t\t\t\t\t\t#\u5de6\u96a3\n\t\t\t\t\t\tunless (cell[:y1]...cell[:y2]).each{|_y|\n\t\t\t\t\t\t\tadjacent_cell=cells.find{|e|e[:x1]<=x-1&&x-1<e[:x2] && e[:y1]<=_y&&_y<e[:y2]}\n\t\t\t\t\t\t\tif !adjacent_cell||!cells_for_val.include?(adjacent_cell)\n\t\t\t\t\t\t\t\tcells_for_val[adjacent_cell]=1 if adjacent_cell\n\t\t\t\t\t\t\t\tbreak if !m[_y][x-1] # \u307e\u3060\u30bb\u30eb\u304c\u57cb\u307e\u3063\u3066\u3044\u306a\u3051\u308c\u3070\u30b9\u30ad\u30c3\u30d7\u3002break\u3059\u308b\u3068each\u306fnil\u3092\u8fd4\u3059\u3002unless\u301cnext\u3002\n\t\t\t\t\t\t\t\tval+=m[_y][x-1]\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnext\n\t\t\t\t\t\tend\n\t\t\t\t\t\t#\u4e0a\u96a3\n\t\t\t\t\t\tunless (cell[:x1]...cell[:x2]).each{|_x|\n\t\t\t\t\t\t\tadjacent_cell=cells.find{|e|e[:x1]<=_x&&_x<e[:x2] && e[:y1]<=y-1&&y-1<e[:y2]}\n\t\t\t\t\t\t\tif !adjacent_cell||!cells_for_val.include?(adjacent_cell)\n\t\t\t\t\t\t\t\tcells_for_val[adjacent_cell]=1 if adjacent_cell\n\t\t\t\t\t\t\t\tbreak if !m[y-1][_x]\n\t\t\t\t\t\t\t\tval+=m[y-1][_x]\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\tnext\n\t\t\t\t\t\tend\n\t\t\t\t\t\t#\u30bb\u30eb\u3092\u57cb\u3081\u308b\n\t\t\t\t\t\t(cell[:y1]...cell[:y2]).each{|_y|\n\t\t\t\t\t\t\t(cell[:x1]...cell[:x2]).each{|_x|\n\t\t\t\t\t\t\t\tm[_y][_x]=val%100\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tnext if !m[y-1][x] || !m[y][x-1]\n\t\t\t\t\tval=m[y-1][x]+m[y][x-1]\n\t\t\t\t\tm[y][x]=val%100\n\t\t\t\tend\n\t\t\t}\n\t\t}\n\tend\n\tputs \"%02d\"%m[row][column]\nend\n```\n", "tags": ["Ruby", "\u3069\u3046\u66f8\u304f", "yhpg"]}