{"tags": ["Groovy", "JodaTime", "Jackson", "Java"], "context": "// Groovy Version: 2.4.5 JVM: 1.8.0_77 Vendor: Oracle Corporation OS: Mac OS X\n@Grab('com.fasterxml.jackson.core:jackson-core:2.8.5')\n@Grab('com.fasterxml.jackson.datatype:jackson-datatype-joda:2.8.5')\n\n@Grab('joda-time:joda-time:2.9.6')\n\nimport com.fasterxml.jackson.databind.ObjectMapper\nimport com.fasterxml.jackson.databind.util.ISO8601DateFormat\nimport com.fasterxml.jackson.datatype.joda.JodaModule\nimport org.joda.time.DateTime\n\ndef now = new DateTime()\ndef bean = new Bean(date1: now.toDate(), date2: now)\n\ndef objectMapper = new ObjectMapper()\n        .registerModule(new JodaModule())\n        .setDateFormat(new ISO8601DateFormat())\n\ndef json = objectMapper.writeValueAsString(bean)\nprintln json\n\n\n\nclass Bean {\n    Date date1\n    DateTime date2\n}\n\n\u7d50\u679c\n{\n  \"date1\": \"2016-12-23T06:33:01Z\",\n  \"date2\": \"2016-12-23T06:33:01.045Z\"\n}\n\njava.util.Date \u3067\u3042\u308bdate1\u306e\u65b9\u306f\u30df\u30ea\u79d2\u306f\u4ed8\u3044\u3066\u3044\u306a\u3044\u3002\n\u3061\u3083\u3093\u3068 @com.fasterxml.jackson.annotation.JsonFormat \u3067\u6574\u5f62\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3002\n\n\u304a\u307e\u3051\ndef objectMapper = new ObjectMapper()\n        .registerModule(new JodaModule())\n//        .setDateFormat(new ISO8601DateFormat())\n        .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)\n\n\u4e0a\u306e\u3088\u3046\u306a\u72b6\u614b\u3067\u8a66\u3059\u3068date1\u306b\u3082\u30df\u30ea\u79d2\u304c\u4ed8\u304f\u3002\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u6307\u5b9a\u5b50\u3082Z\u3058\u3083\u306a\u304f\u3066+0000\u306b\u5909\u308f\u3063\u3061\u3083\u3063\u3066\u308b\u3051\u3069\u3002\u3002\n{\n  \"date1\": \"2016-12-23T06:38:26.270+0000\",\n  \"date2\": \"2016-12-23T06:38:26.270Z\"\n}\n\n```groovy\n// Groovy Version: 2.4.5 JVM: 1.8.0_77 Vendor: Oracle Corporation OS: Mac OS X\n@Grab('com.fasterxml.jackson.core:jackson-core:2.8.5')\n@Grab('com.fasterxml.jackson.datatype:jackson-datatype-joda:2.8.5')\n\n@Grab('joda-time:joda-time:2.9.6')\n\nimport com.fasterxml.jackson.databind.ObjectMapper\nimport com.fasterxml.jackson.databind.util.ISO8601DateFormat\nimport com.fasterxml.jackson.datatype.joda.JodaModule\nimport org.joda.time.DateTime\n\ndef now = new DateTime()\ndef bean = new Bean(date1: now.toDate(), date2: now)\n\ndef objectMapper = new ObjectMapper()\n        .registerModule(new JodaModule())\n        .setDateFormat(new ISO8601DateFormat())\n\ndef json = objectMapper.writeValueAsString(bean)\nprintln json\n\n\n\nclass Bean {\n    Date date1\n    DateTime date2\n}\n```\n\n\u7d50\u679c\n\n```json\n{\n  \"date1\": \"2016-12-23T06:33:01Z\",\n  \"date2\": \"2016-12-23T06:33:01.045Z\"\n}\n```\n\n`java.util.Date` \u3067\u3042\u308b`date1`\u306e\u65b9\u306f\u30df\u30ea\u79d2\u306f\u4ed8\u3044\u3066\u3044\u306a\u3044\u3002\n\u3061\u3083\u3093\u3068 `@com.fasterxml.jackson.annotation.JsonFormat` \u3067\u6574\u5f62\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3002\n\n### \u304a\u307e\u3051\n\n```groovy \ndef objectMapper = new ObjectMapper()\n        .registerModule(new JodaModule())\n//        .setDateFormat(new ISO8601DateFormat())\n        .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)\n```\n\n\u4e0a\u306e\u3088\u3046\u306a\u72b6\u614b\u3067\u8a66\u3059\u3068`date1`\u306b\u3082\u30df\u30ea\u79d2\u304c\u4ed8\u304f\u3002\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u6307\u5b9a\u5b50\u3082`Z`\u3058\u3083\u306a\u304f\u3066`+0000`\u306b\u5909\u308f\u3063\u3061\u3083\u3063\u3066\u308b\u3051\u3069\u3002\u3002\n\n```json\n{\n  \"date1\": \"2016-12-23T06:38:26.270+0000\",\n  \"date2\": \"2016-12-23T06:38:26.270Z\"\n}\n```\n"}