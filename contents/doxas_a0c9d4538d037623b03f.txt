{"tags": ["WebGL", "GLSL"], "context": "\n\n\u8972\u6765\n\u3042\u308b\u65e5\u306e\u663c\u4e0b\u304c\u308a\u2026\u2026\n\u304d\u306e\u3053\u305f\u3061\u306f\u3001\u4eca\u65e5\u3082\u8868\u5411\u304d\u306f\u5e73\u548c\u306b\u66ae\u3089\u3057\u3066\u3044\u305f\u3002\n\u3042\u306e\u5de6\u5229\u304d\u306e\u5f7c\u306f\u3068\u8a00\u3048\u3070\u3001\u5de6\u5229\u304d\u3067\u3042\u308b\u304c\u3086\u3048\u306b\u540c\u3058\u304d\u306e\u3053\u305f\u3061\u3068\u99b4\u67d3\u3080\u3053\u3068\u304c\u3067\u304d\u305a\u3001\u3053\u306e\u65e5\u3082\u3044\u3064\u3082\u306e\u3088\u3046\u306b\u8349\u539f\u3092\u4e00\u4eba\u3076\u3089\u3076\u3089\u3068\u6b69\u3044\u3066\u3044\u305f\u3002\n\u5de6\u300c\u3042\u3042\u2026\u2026\u3069\u3046\u3057\u3066\u307f\u3093\u306a\u3001\u307c\u304f\u306e\u3053\u3068\u3092\u6bdb\u5acc\u3044\u3059\u308b\u3093\u3060\u308d\u3046\u3002\u304a\u306a\u3058\u304d\u306e\u3053\u306a\u306e\u306b\u2026\u2026\u300d\n\u5f7c\u306e\u5fc3\u306f\u6c88\u3093\u3067\u3044\u305f\u3002\n\u898b\u4e0a\u3052\u308b\u3068\u3001\u305d\u3089\u306e\u4e0a\u306b\u306f\u71e6\u3005\u3068\u8f1d\u304f\u592a\u967d\u304c\u3042\u308a\u3001\u4eca\u65e5\u3082\u60a0\u7136\u3068\u4e16\u754c\u3092\u7167\u3089\u3057\u51fa\u3057\u3066\u3044\u308b\u3002\u30c1\u30e7\u30b3\u30ec\u30fc\u30c8\u3067\u3067\u304d\u3066\u3044\u308b\u5f7c\u3089\u304d\u306e\u3053\u306b\u3068\u3063\u3066\u3001\u592a\u967d\u306e\u4e0b\u306b\u9577\u6642\u9593\u3044\u308b\u306e\u306f\u5371\u967a\u3060\u3002\u3057\u304b\u3057\u5de6\u5229\u304d\u306e\u5f7c\u306b\u306f\u3001\u305d\u3093\u306a\u3053\u3068\u306f\u3082\u306f\u3084\u3069\u3046\u3067\u3082\u3088\u304b\u3063\u305f\u3002\n\u3057\u304b\u3057\u305d\u3093\u306a\u81ea\u66b4\u81ea\u68c4\u306b\u306a\u3063\u3066\u3044\u308b\u5f7c\u306e\u8033\u306b\u3001\u3069\u3053\u304b\u3089\u3068\u3082\u306a\u304f\u5730\u9cf4\u308a\u306e\u3088\u3046\u306a\u97f3\u304c\u805e\u3053\u3048\u3066\u304d\u305f\u3002\n\u307e\u308b\u3067\u3001\u305f\u304f\u3055\u3093\u306e\u305f\u3051\u306e\u3053\u304c\u884c\u9032\u3057\u3066\u3044\u308b\u304b\u306e\u3088\u3046\u306a\u3001\u4e0d\u6c17\u5473\u306a\u5730\u9cf4\u308a\u304c\uff01\nprecision mediump float;\nuniform vec2  resolution;\nuniform vec2  mouse;\nuniform float time;\nuniform sampler2D backbuffer;\n\nstruct Intersect{\n    float dist;\n    vec3  color;\n};\nconst float PI = 3.1415926;\nconst float PI2 = PI * 2.0;\nconst vec3 cColor = vec3(0.25, 0.1, 0.0);\nconst vec3 fColor = vec3(0.2, 0.7, 0.1);\nconst vec3 kColor = vec3(0.9, 0.8, 0.4);\n\nfloat waveline(vec2 p){\n    float f = smoothstep(0.975, 1.0, cos(p.x * 2.5) - (p.y * 2.5) - 0.75);\n    float g = smoothstep(0.975, 1.0, cos(p.x * PI + PI) - (p.y * 4.0) - 0.5);\n    float h = smoothstep(0.975, 1.0, cos(p.x * 2.5) - (p.y * 2.5) + 0.5);\n    return mix(mix(mix(0.0, 0.3, h), 0.4, g), 0.6, f);\n}\nfloat dChoco(vec3 p){\n    float e = 1.0 - p.y * 0.7;\n    float w = waveline(vec2(atan(p.z, p.x) / PI, p.y + 0.25)) * 0.15;\n    return length((p + vec3(0.0, -0.5, 0.0)) * vec3(e, 0.5, e)) + p.y - 0.5 + step(p.y, -1.2) - w;\n}\nfloat dFloor(vec3 p){\n    return dot(p, vec3(0.0, 1.0, 0.0)) + 1.5;\n}\nfloat dCylinder(vec3 p, vec2 r){\n    vec2 d = abs(vec2(length(p.xz), p.y)) - r;\n    return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - 0.25 + step(-1.0, p.y);\n}\nIntersect distanceHub(vec3 p){\n    vec3 q = vec3(mod(p, 3.0) - 1.5);\n    q = vec3(q.x, p.y, q.z);\n    float choco = dChoco(q);\n    float flor = dFloor(q);\n    float cylin = dCylinder(q, vec2(0.5, 2.0));\n    Intersect i;\n    i.dist = min(cylin, min(choco, flor));\n    i.color = cylin < min(choco, flor) ? kColor : choco < flor ? cColor : fColor;\n    return i;\n}\nvec3 genNormal(vec3 p){\n    float d = 0.001;\n    return normalize(vec3(\n        distanceHub(p + vec3(  d, 0.0, 0.0)).dist - distanceHub(p + vec3( -d, 0.0, 0.0)).dist,\n        distanceHub(p + vec3(0.0,   d, 0.0)).dist - distanceHub(p + vec3(0.0,  -d, 0.0)).dist,\n        distanceHub(p + vec3(0.0, 0.0,   d)).dist - distanceHub(p + vec3(0.0, 0.0,  -d)).dist\n    ));\n}\n\nvoid main(){\n    vec2 p = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\n    float t = mod(time, 3.0);\n    vec3 cPos = vec3(0.0,  3.0,  3.0 - t - abs(sin(time * PI)));\n    vec3 cDir = vec3(0.0,  0.0, -1.0);\n    vec3 cUp  = vec3(0.0,  1.0,  0.0);\n    vec3 cSide = cross(cDir, cUp);\n    float targetDepth = 2.0;\n    vec3 ray = normalize(cSide * p.x + cUp * p.y + cDir * targetDepth);\n\n    float dist = 0.0;\n    float rLen = 0.0;\n    vec3  rPos = cPos;\n    Intersect intersect;\n    for(int i = 0; i < 512; ++i){\n        intersect = distanceHub(rPos);\n        rLen += intersect.dist * 0.3;\n        rPos = cPos + ray * rLen;\n    }\n\n    if(abs(intersect.dist) < 0.001){\n        float fog = smoothstep(0.0, 100.0, length(rPos - cPos));\n        vec3  normal = genNormal(rPos);\n        vec3  light = normalize(vec3(mouse + 2.0, 3.0));\n        float diff = max(dot(normal, light), 0.1);\n        vec3  eye = reflect(normalize(rPos - cPos), normal);\n        float speculer = clamp(dot(eye, light), 0.0, 1.0);\n        vec3 specColor = pow(speculer, 20.0) + cColor;\n        gl_FragColor = vec4(vec3(diff) * intersect.color + fog * vec3(3.0, 1.0, 0.8) + specColor, 1.0);\n    }else{\n        float s = 0.1 / length(p - vec2(0.0, 0.75));\n        gl_FragColor = vec4(vec3(1.0) - pow(min(s, 1.0), 2.0) * vec3(0.0, 0.65, 0.85), 1.0);\n    }\n}\n\n\uff08GLSL Editor \u306b\u8cbc\u308a\u4ed8\u3051\u3066\u5b9f\u884c\u3057\u3066\u306d\uff01\uff09\n\n\u5de6\u300c\u306a\u2026\u2026\u3093\u2026\u2026\u3060\u3068\uff01\uff1f\u300d\n\u5de6\u5229\u304d\u306e\u3088\u3046\u306a\u306f\u3050\u308c\u3082\u306e\u3067\u3082\u3001\u3055\u3059\u304c\u306b\u77e5\u3063\u3066\u3044\u305f\u3002\n\u304d\u306e\u3053\u56fd\u3068\u305f\u3051\u306e\u3053\u56fd\u306f\u3001\u30c1\u30e7\u30b3\u5e1d\u56fd\u306e\u5e1d\u738b\u306e\u5ea7\u3092\u4e89\u3044\u9577\u304d\u306b\u6e21\u308a\u6226\u3044\u7d9a\u3051\u3066\u304d\u305f\u306e\u3060\u3002\n\u3057\u304b\u3057\u3001\u3053\u308c\u307b\u3069\u306e\u8ecd\u52e2\u304c\u4e00\u5ea6\u306b\u304d\u306e\u3053\u306e\u56fd\u306b\u62bc\u3057\u5bc4\u305b\u305f\u3053\u3068\u306a\u3069\u3001\u304b\u3064\u3066\u4e00\u5ea6\u3082\u7121\u304b\u3063\u305f\u306f\u305a\u2026\u2026\n\u5de6\u5229\u304d\u306f\u601d\u308f\u305a\u3054\u304f\u308a\u3068\u751f\u553e\u3092\u98f2\u307f\u8fbc\u3093\u3060\u306e\u3060\u3063\u305f\u3002\n\u203b\u6ce8\uff1a\u304d\u306e\u3053\u304c\u751f\u553e\u3092\u98f2\u307f\u8fbc\u3081\u308b\u306e\u304b\u3069\u3046\u304b\u306f\u4eba\u9593\u3067\u3042\u308b\u3042\u306a\u305f\u306b\u306f\u308f\u304b\u3089\u306a\u3044\u3060\u308d\u3046\u304c\u304d\u306e\u3053\u306b\u3068\u3063\u3066\u306f\u5f53\u305f\u308a\u524d\u306e\u3053\u3068\u306a\u306e\u3060\nto be continued!\n\u203b\u3053\u306e\u7269\u8a9e\u306f\u30d5\u30a3\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\u5b9f\u5728\u306e\u4eba\u7269\u3084\u56e3\u4f53\u306a\u3069\u3068\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u3002\n## \u8972\u6765\n\n\u3042\u308b\u65e5\u306e\u663c\u4e0b\u304c\u308a\u2026\u2026\n\n\u304d\u306e\u3053\u305f\u3061\u306f\u3001\u4eca\u65e5\u3082\u8868\u5411\u304d\u306f\u5e73\u548c\u306b\u66ae\u3089\u3057\u3066\u3044\u305f\u3002\n\n\u3042\u306e\u5de6\u5229\u304d\u306e\u5f7c\u306f\u3068\u8a00\u3048\u3070\u3001\u5de6\u5229\u304d\u3067\u3042\u308b\u304c\u3086\u3048\u306b\u540c\u3058\u304d\u306e\u3053\u305f\u3061\u3068\u99b4\u67d3\u3080\u3053\u3068\u304c\u3067\u304d\u305a\u3001\u3053\u306e\u65e5\u3082\u3044\u3064\u3082\u306e\u3088\u3046\u306b\u8349\u539f\u3092\u4e00\u4eba\u3076\u3089\u3076\u3089\u3068\u6b69\u3044\u3066\u3044\u305f\u3002\n\n\u5de6\u300c\u3042\u3042\u2026\u2026\u3069\u3046\u3057\u3066\u307f\u3093\u306a\u3001\u307c\u304f\u306e\u3053\u3068\u3092\u6bdb\u5acc\u3044\u3059\u308b\u3093\u3060\u308d\u3046\u3002\u304a\u306a\u3058\u304d\u306e\u3053\u306a\u306e\u306b\u2026\u2026\u300d\n\n\u5f7c\u306e\u5fc3\u306f\u6c88\u3093\u3067\u3044\u305f\u3002\n\n\u898b\u4e0a\u3052\u308b\u3068\u3001\u305d\u3089\u306e\u4e0a\u306b\u306f\u71e6\u3005\u3068\u8f1d\u304f\u592a\u967d\u304c\u3042\u308a\u3001\u4eca\u65e5\u3082\u60a0\u7136\u3068\u4e16\u754c\u3092\u7167\u3089\u3057\u51fa\u3057\u3066\u3044\u308b\u3002\u30c1\u30e7\u30b3\u30ec\u30fc\u30c8\u3067\u3067\u304d\u3066\u3044\u308b\u5f7c\u3089\u304d\u306e\u3053\u306b\u3068\u3063\u3066\u3001\u592a\u967d\u306e\u4e0b\u306b\u9577\u6642\u9593\u3044\u308b\u306e\u306f\u5371\u967a\u3060\u3002\u3057\u304b\u3057\u5de6\u5229\u304d\u306e\u5f7c\u306b\u306f\u3001\u305d\u3093\u306a\u3053\u3068\u306f\u3082\u306f\u3084\u3069\u3046\u3067\u3082\u3088\u304b\u3063\u305f\u3002\n\n\u3057\u304b\u3057\u305d\u3093\u306a\u81ea\u66b4\u81ea\u68c4\u306b\u306a\u3063\u3066\u3044\u308b\u5f7c\u306e\u8033\u306b\u3001\u3069\u3053\u304b\u3089\u3068\u3082\u306a\u304f\u5730\u9cf4\u308a\u306e\u3088\u3046\u306a\u97f3\u304c\u805e\u3053\u3048\u3066\u304d\u305f\u3002\n\n\u307e\u308b\u3067\u3001\u305f\u304f\u3055\u3093\u306e\u305f\u3051\u306e\u3053\u304c\u884c\u9032\u3057\u3066\u3044\u308b\u304b\u306e\u3088\u3046\u306a\u3001\u4e0d\u6c17\u5473\u306a\u5730\u9cf4\u308a\u304c\uff01\n\n```glsl\nprecision mediump float;\nuniform vec2  resolution;\nuniform vec2  mouse;\nuniform float time;\nuniform sampler2D backbuffer;\n\nstruct Intersect{\n\tfloat dist;\n\tvec3  color;\n};\nconst float PI = 3.1415926;\nconst float PI2 = PI * 2.0;\nconst vec3 cColor = vec3(0.25, 0.1, 0.0);\nconst vec3 fColor = vec3(0.2, 0.7, 0.1);\nconst vec3 kColor = vec3(0.9, 0.8, 0.4);\n\nfloat waveline(vec2 p){\n    float f = smoothstep(0.975, 1.0, cos(p.x * 2.5) - (p.y * 2.5) - 0.75);\n    float g = smoothstep(0.975, 1.0, cos(p.x * PI + PI) - (p.y * 4.0) - 0.5);\n    float h = smoothstep(0.975, 1.0, cos(p.x * 2.5) - (p.y * 2.5) + 0.5);\n    return mix(mix(mix(0.0, 0.3, h), 0.4, g), 0.6, f);\n}\nfloat dChoco(vec3 p){\n\tfloat e = 1.0 - p.y * 0.7;\n\tfloat w = waveline(vec2(atan(p.z, p.x) / PI, p.y + 0.25)) * 0.15;\n\treturn length((p + vec3(0.0, -0.5, 0.0)) * vec3(e, 0.5, e)) + p.y - 0.5 + step(p.y, -1.2) - w;\n}\nfloat dFloor(vec3 p){\n\treturn dot(p, vec3(0.0, 1.0, 0.0)) + 1.5;\n}\nfloat dCylinder(vec3 p, vec2 r){\n\tvec2 d = abs(vec2(length(p.xz), p.y)) - r;\n\treturn min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - 0.25 + step(-1.0, p.y);\n}\nIntersect distanceHub(vec3 p){\n\tvec3 q = vec3(mod(p, 3.0) - 1.5);\n\tq = vec3(q.x, p.y, q.z);\n\tfloat choco = dChoco(q);\n\tfloat flor = dFloor(q);\n\tfloat cylin = dCylinder(q, vec2(0.5, 2.0));\n\tIntersect i;\n\ti.dist = min(cylin, min(choco, flor));\n\ti.color = cylin < min(choco, flor) ? kColor : choco < flor ? cColor : fColor;\n\treturn i;\n}\nvec3 genNormal(vec3 p){\n\tfloat d = 0.001;\n\treturn normalize(vec3(\n\t\tdistanceHub(p + vec3(  d, 0.0, 0.0)).dist - distanceHub(p + vec3( -d, 0.0, 0.0)).dist,\n\t\tdistanceHub(p + vec3(0.0,   d, 0.0)).dist - distanceHub(p + vec3(0.0,  -d, 0.0)).dist,\n\t\tdistanceHub(p + vec3(0.0, 0.0,   d)).dist - distanceHub(p + vec3(0.0, 0.0,  -d)).dist\n\t));\n}\n\nvoid main(){\n\tvec2 p = (gl_FragCoord.xy * 2.0 - resolution) / min(resolution.x, resolution.y);\n\tfloat t = mod(time, 3.0);\n\tvec3 cPos = vec3(0.0,  3.0,  3.0 - t - abs(sin(time * PI)));\n\tvec3 cDir = vec3(0.0,  0.0, -1.0);\n\tvec3 cUp  = vec3(0.0,  1.0,  0.0);\n\tvec3 cSide = cross(cDir, cUp);\n\tfloat targetDepth = 2.0;\n\tvec3 ray = normalize(cSide * p.x + cUp * p.y + cDir * targetDepth);\n\n\tfloat dist = 0.0;\n\tfloat rLen = 0.0;\n\tvec3  rPos = cPos;\n\tIntersect intersect;\n\tfor(int i = 0; i < 512; ++i){\n\t\tintersect = distanceHub(rPos);\n\t\trLen += intersect.dist * 0.3;\n\t\trPos = cPos + ray * rLen;\n\t}\n\n\tif(abs(intersect.dist) < 0.001){\n\t\tfloat fog = smoothstep(0.0, 100.0, length(rPos - cPos));\n\t\tvec3  normal = genNormal(rPos);\n\t\tvec3  light = normalize(vec3(mouse + 2.0, 3.0));\n\t\tfloat diff = max(dot(normal, light), 0.1);\n\t\tvec3  eye = reflect(normalize(rPos - cPos), normal);\n\t\tfloat speculer = clamp(dot(eye, light), 0.0, 1.0);\n\t\tvec3 specColor = pow(speculer, 20.0) + cColor;\n\t\tgl_FragColor = vec4(vec3(diff) * intersect.color + fog * vec3(3.0, 1.0, 0.8) + specColor, 1.0);\n\t}else{\n\t\tfloat s = 0.1 / length(p - vec2(0.0, 0.75));\n\t\tgl_FragColor = vec4(vec3(1.0) - pow(min(s, 1.0), 2.0) * vec3(0.0, 0.65, 0.85), 1.0);\n\t}\n}\n```\n\n\uff08[GLSL Editor](https://doxas.org/work/glsl_editor/) \u306b\u8cbc\u308a\u4ed8\u3051\u3066\u5b9f\u884c\u3057\u3066\u306d\uff01\uff09\n\n![takenoco_01.jpg](https://qiita-image-store.s3.amazonaws.com/0/39638/187724c9-13a1-5c4a-1790-570354f5f0e0.jpeg)\n\n\u5de6\u300c\u306a\u2026\u2026\u3093\u2026\u2026\u3060\u3068\uff01\uff1f\u300d\n\n\u5de6\u5229\u304d\u306e\u3088\u3046\u306a\u306f\u3050\u308c\u3082\u306e\u3067\u3082\u3001\u3055\u3059\u304c\u306b\u77e5\u3063\u3066\u3044\u305f\u3002\n\n\u304d\u306e\u3053\u56fd\u3068\u305f\u3051\u306e\u3053\u56fd\u306f\u3001\u30c1\u30e7\u30b3\u5e1d\u56fd\u306e\u5e1d\u738b\u306e\u5ea7\u3092\u4e89\u3044\u9577\u304d\u306b\u6e21\u308a\u6226\u3044\u7d9a\u3051\u3066\u304d\u305f\u306e\u3060\u3002\n\n\u3057\u304b\u3057\u3001\u3053\u308c\u307b\u3069\u306e\u8ecd\u52e2\u304c\u4e00\u5ea6\u306b\u304d\u306e\u3053\u306e\u56fd\u306b\u62bc\u3057\u5bc4\u305b\u305f\u3053\u3068\u306a\u3069\u3001\u304b\u3064\u3066\u4e00\u5ea6\u3082\u7121\u304b\u3063\u305f\u306f\u305a\u2026\u2026\n\n\u5de6\u5229\u304d\u306f\u601d\u308f\u305a\u3054\u304f\u308a\u3068\u751f\u553e\u3092\u98f2\u307f\u8fbc\u3093\u3060\u306e\u3060\u3063\u305f\u3002\n\n\u203b\u6ce8\uff1a\u304d\u306e\u3053\u304c\u751f\u553e\u3092\u98f2\u307f\u8fbc\u3081\u308b\u306e\u304b\u3069\u3046\u304b\u306f\u4eba\u9593\u3067\u3042\u308b\u3042\u306a\u305f\u306b\u306f\u308f\u304b\u3089\u306a\u3044\u3060\u308d\u3046\u304c\u304d\u306e\u3053\u306b\u3068\u3063\u3066\u306f\u5f53\u305f\u308a\u524d\u306e\u3053\u3068\u306a\u306e\u3060\n\nto be continued!\n\n\u203b\u3053\u306e\u7269\u8a9e\u306f\u30d5\u30a3\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\u5b9f\u5728\u306e\u4eba\u7269\u3084\u56e3\u4f53\u306a\u3069\u3068\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u3002\n"}