{"context": " More than 1 year has passed since last update.\n\n\u7d4c\u7def\nDocker \u4e0a\u306e\u30b3\u30f3\u30c6\u30ca\u306bSamba4 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001samba-tool \u3092\u5b9f\u884c\u3057\u305f\u6642\u306b\u4e0b\u8a18\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u5931\u6557\u3057\u3066\u3057\u307e\u3044\u3001\u5148\u306b\u9032\u3081\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u7d4c\u9a13\u304c\u3042\u308a\u307e\u3059\u3002\n\nSamba4\u306esamba-tool\u3092\u5b9f\u884c\u3057\u305f\u6642\u306b\u51fa\u305f\u30a8\u30e9\u30fc\n......\nERROR(<class 'samba.provision.ProvisioningError'>): Provision failed - ProvisioningError: Your filesystem or build does not support posix ACLs, which s3fs requires.  Try the mounting the filesystem with the 'acl' option.\n  File \"/usr/lib/python2.7/dist-packages/samba/netcmd/domain.py\", line 401, in run\n    use_rfc2307#use_rfc2307, skip_sysvolaclFalse)\n  File \"/usr/lib/python2.7/dist-packages/samba/provision/__init__.py\", line 2160, in provision\n    skip_sysvolacl=skip_sysvolacl)\n  File \"/usr/lib/python2.7/dist-packages/samba/provision/__init__.py\", line 1799, in provision_fill\n    names.domaindn, lp, use_ntvfs)\n  File \"/usr/lib/python2.7/dist-packages/samba/provision/__init__.py\", line 1551, in setsysvolacl\n    raise ProvisioningError(\"Your filesystem or build does not support posix ACLs, which s3fs requires.  \"\n\n\n\u3053\u306e\u30a8\u30e9\u30fc\u306e\u539f\u56e0\u3092\u8abf\u3079\u3066\u3044\u304f\u3068\u3001Docker \u30c7\u30fc\u30e2\u30f3\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0aufs \u304cacl \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u51fa\u308b\u3082\u306e\u3067\u3057\u305f\u3002\n\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0\u306fDocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b\u3068\u304d\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u4eca\u4f7f\u3063\u3066\u3044\u308bDocker \u30c7\u30fc\u30e2\u30f3\u306e\u8a2d\u5b9a\u3092acl \u5bfe\u5fdc\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0(\u4f8b:devicemapper) \u306b\u5909\u66f4\u3059\u308b\u306e\u304c\u624b\u3063\u53d6\u308a\u65e9\u3044\u3067\u3059\u304c\u3001\u65e2\u306b\u4f5c\u6210\u3055\u308c\u3066\u3044\u308bDocker \u30b3\u30f3\u30c6\u30ca\u304caufs \u306e\u65e8\u307f\u3092\u624b\u653e\u3059\u306e\u306f\u5acc\u3060\u2026\u3002\n\u3046\u30fc\u3093\u3069\u3046\u3057\u305f\u3082\u306e\u304b\u2026f(\u00b4\uff0d\uff40\uff1b) \u3068\u8003\u3048\u3001\u8abf\u3079\u308b\u3053\u3068\u6570\u6642\u9593\u3001\u4ee5\u4e0b\u306e2 \u901a\u308a\u306e\u65b9\u6cd5\u3067\u89e3\u6c7a\u306b\u6311\u6226\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\nDocker in Docker \u3067\u3001\u5b50\u30b3\u30f3\u30c6\u30ca\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0\u3092devicemapper \u306b\u3059\u308b\n\u73fe\u5728\u8d77\u52d5\u3057\u3066\u3044\u308bDocker \u30c7\u30fc\u30e2\u30f3\u3068\u306f\u5225\u306eDocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3057\u3066\u3001\u305d\u3061\u3089\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0\u3092devicemapper \u306b\u3059\u308b\n\n\n\u7d50\u8ad6\u304b\u3089\u5148\u306b...\n\u500b\u4eba\u7684\u306b\u306fDocker in Docker \u3067\u89e3\u6c7a\u3059\u308b\u65b9\u6cd5\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\n\u5225\u306eDocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b\u65b9\u6cd5\u3067\u306f\u4ed6\u306e\u4eba\u306e\u74b0\u5883\u3078\u30b3\u30f3\u30c6\u30ca\u3092\u914d\u5e03\u3059\u308b\u3068\u304d\u306b\u3001\u3082\u3057\u305d\u306e\u4eba\u304c\u81ea\u5206\u3068\u540c\u69d8\u306baufs \u306a\u74b0\u5883\u3067Docker \u30c7\u30fc\u30e2\u30f3\u304c\u8d77\u52d5\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u305d\u306e\u4eba\u3078\u591a\u304f\u306e\u69cb\u7bc9\u624b\u9806\u3092\u5b9f\u65bd\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308b\u305f\u3081\u3067\u3059\u3002\nDocker in Docker \u3067\u89e3\u6c7a\u3059\u308b\u65b9\u6cd5\u3067\u306f\u3001Dockerfile \u3092\u914d\u5e03\u3057\u3066\u5b9f\u884c\u3057\u3066\u3082\u3089\u3046\u3053\u3068\u3067\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002\n\n\u69cb\u6210\n\u4eca\u56de\u672c\u624b\u9806\u3092\u5b9f\u65bd\u3057\u305f\u74b0\u5883\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n\u69cb\u6210\n\n\n Host OS\n Ubuntu 15.10\n\n\n Docker version\n 1.9.1\n\n\n\n\n\nDocker-in-Docker \u3067\u89e3\u6c7a\u3059\u308b\n\n\u6982\u8981\n\nDocker in Docker \u3092\u4f7f\u7528\u3057\u3066\u5b50Docker \u30c7\u30fc\u30e2\u30f3\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0\u3092devicemapper \u306b\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nDocker \u306ebacking filesystem \u306e\u8981\u4ef6\u3068\u3057\u3066\u3001devicemapper \u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001Docker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3057\u3066\u3044\u308bHost \u30de\u30b7\u30f3\u4e0a\u306ebacking filesystem \u306f\u4e00\u81f4\u3057\u3066\u3044\u308b\u5fc5\u8981\u6027\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\nBackingfilesystem\u306eHost\u30b7\u30b9\u30c6\u30e0\u3068\u306e\u30de\u30c3\u30c1\u6761\u4ef6\n|Storage driver |Must match backing filesystem |\n|---------------|------------------------------|\n|overlay        |No                            |\n|aufs           |No                            |\n|btrfs          |Yes                           |\n|devicemapper   |No                            |\n|vfs*           |No                            |\n|zfs            |Yes                           |\n\n\u629c\u7c8b:\nhttps://docs.docker.com/engine/userguide/storagedriver/selectadriver/\n\n\n\u3059\u306a\u308f\u3061\u3001devicemapper \u306abacking filesystem \u306aDocker \u30b3\u30f3\u30c6\u30ca\u74b0\u5883\u304c\u307b\u3057\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u4f8b\u3048\u3070aufs \u306aDocker \u30c7\u30fc\u30e2\u30f3\u306e\u30b3\u30f3\u30c6\u30ca\u4e0a\u306bdevicemapper \u306aDocker \u30c7\u30fc\u30e2\u30f3\u3092\u3092\u8d77\u52d5\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u306a\u304a\u3001\u3053\u306e\u8aac\u660e\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u6700\u65b0\u306e\u8cc7\u6750\u306f\u4ee5\u4e0b\u306eGitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u306bpush \u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\n\n https://github.com/TsutomuNakamura/DockerDock/tree/master/docker-in-docker-simple\n\n\n\n\n\u89aa\u30b3\u30f3\u30c6\u30ca\u306e\u6e96\u5099\nDocker-in-Docker \u306e\u89aa\u3068\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3057\u3066\u8d77\u52d5\u3057\u307e\u3059\u3002\n\nDockerfile(\u89aa\u30b3\u30f3\u30c6\u30ca)\nFROM debian:jessie\n\nRUN apt-get update\nRUN apt-get install -y apt-transport-https\nRUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\nRUN echo \"deb https://apt.dockerproject.org/repo debian-jessie main\" > /etc/apt/sources.list.d/docker.list\nRUN apt-get update\nRUN apt-get install -y docker-engine\nRUN docker daemon &\n\nCOPY child /root/child\n\nRUN cd /root/child && chmod u+x BuildChild.sh\nEXPOSE 80\n\nENTRYPOINT [\"/root/child/BuildChild.sh\"]\n\n\n\n\u5b50\u30b3\u30f3\u30c6\u30ca\u306e\u6e96\u5099\n\u5b50\u30b3\u30f3\u30c6\u30ca\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4eca\u56de\u3001\u5b50\u30b3\u30f3\u30c6\u30ca\u306b\u95a2\u3059\u308b\u8cc7\u6750\u306f\u89aa\u30b3\u30f3\u30c6\u30ca\u306eDockerfile \u306e\u5834\u6240\u304b\u3089child \u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u305d\u306e\u4e2d\u306b\u4f5c\u6210\u3057\u3066\u3044\u304f\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\nchild/BuildChild.sh\n#!/bin/bash\n\nSCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\ncd ${SCRIPT_DIR}\n\nCGROUP_DIR=/sys/fs/cgroup\n\n[ -d ${CGROUP_DIR} ] || mkdir ${CGROUP_DIR}\n\nmountpoint -q ${CGROUP_DIR} || {\n    mount -n -t tmpfs -o uid#0,gid=0,mode0755 cgroup ${CGROUP_DIR} || {\n        echo \"Could not mount tmpsfs. Did you use --privileged?\" >&2\n        exit 1\n    }\n}\n\nfor SUBSYS in $(cut -d: -f2 /proc/1/cgroup); do\n    [ -d ${CGROUP}/${SUBSYS} ] || mkdir ${CGROUP}/${SUBSYS}\n    mountpoint -q ${CGROUP}/${SUBSYS} || {\n        mount -n -t cgroup -o ${SUBSYS} cgroup ${CGROUP}/${SUBSYS}\n    }\ndone\n\npushd /proc/self/fd\nfor FD in *; do\n    case \"${FD}\" in\n    [012])\n        ;;\n    *)\n        eval exec \"$FD>&-\"\n        ;;\n    esac\ndone\n\npopd\n\nensure_loop(){\n    num=\"$1\"\n    dev=\"/dev/loop$num\"\n    if test -b \"$dev\"; then\n        echo \"$dev is a usable loop device.\"\n        return 0\n    fi\n\n    echo \"Attempting to create $dev for docker ...\"\n    if ! mknod -m660 $dev b 7 $num; then\n        echo \"Failed to create $dev!\" 1>&2\n        return 3\n    fi\n\n    return 0\n}\n\nLOOP_A=$(losetup -f)\nLOOP_A=${LOOP_A#/dev/loop}\nLOOP_B=$(expr $LOOP_A + 1)\n\nensure_loop $LOOP_A || exit 1\nensure_loop $LOOP_B || exit 1\n\n[ -f /var/run/docker.pid ] && {\n    pgrep docker > /dev/null && {\n        echo \"Some docker daemons are already running.\" >&2\n        exit 1\n    } || {\n        rm -f /var/run/docker.pid\n    }\n}\n\ndocker daemon --storage-driver=\"devicemapper\" &\nsleep 1\n\ndocker build -t=\"taro/docker-in-docker-child:latest\" .\ndocker run --rm -p 0.0.0.0:80:80 --name docker-child -h docker-child -ti \"taro/docker-in-docker-child\" /bin/bash\n\n\n\u5b50\u30b3\u30f3\u30c6\u30ca\u306eDockerfile \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nchild/Dockerfile\nFROM debian:jessie\n\nRUN apt-get update\nRUN apt-get -y install nodejs\nRUN ln -s /usr/bin/nodejs /usr/bin/node\n\nCOPY nodeprog /opt/nodeprog\nEXPOSE 80\n\nENTRYPOINT [\"node\", \"/opt/nodeprog/test.js\"]\n\n\n\u5f8c\u307b\u3069\u5b50\u30b3\u30f3\u30c6\u30ca\u3068\u306e\u758e\u901a\u78ba\u8a8d\u3092\u884c\u3046\u3068\u304d\u306b\u4f7f\u308f\u308c\u308bNodeJs \u30c6\u30b9\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4e0b\u8a18\u306e\u7528\u306b\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nchild/nodeprog/test.js\nvar http = require(\"http\");\n\nconsole.log(\"#######################################################\");\nconsole.log(\"# Starting http server ...                            #\");\nconsole.log(\"#######################################################\");\n\nhttp.createServer(function (request, response) {\n    var ip = request.headers['x-forwarded-for'] || request.connection.remoteAddress;\n    console.log(\"Received a request from \" + ip);\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.end(\"This is a test response.\\n\");\n}).listen(80, \"0.0.0.0\");\n\n\n\n\u30b3\u30f3\u30c6\u30ca\u306ebuild\n\u5b50\u30b3\u30f3\u30c6\u30ca\u306e\u6e96\u5099\u3082\u3067\u304d\u305f\u3089\u3001\u89aa\u30b3\u30f3\u30c6\u30ca\u306ebuild \u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u89aa\u30b3\u30f3\u30c6\u30ca\u306ebuild\n$ sudo docker build -t=\"taro/docker-in-docker-parent\" .\n\n\n\u89aa\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\u89aa\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u5b50\u30b3\u30f3\u30c6\u30ca\u306e\u69cb\u7bc9\u304c\u958b\u59cb\u3055\u308c\u307e\u3059\u3002\n\u89aa\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u3068\u304d\u306bHost OS \u306e\u30c7\u30d0\u30a4\u30b9\u3092\u7279\u6a29\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b--privilege \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u8d77\u52d5\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u306a\u3044\u3068\u3001Docker \u5185\u306bDocker \u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u89aa\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5(--privilege\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u8d77\u52d5\u3059\u308b)\n$ sudo docker run -p 127.0.0.1:80:80 --name docker-parent -h docker-parent --privileged -ti taro/docker-in-docker-parent:latest\n# \u521d\u56de\u306f\u7d50\u69cb\u6642\u9593\u3092\u8981\u3057\u307e\u3059...\n...\n\n#######################################################\n# Starting http server ...                            #\n#######################################################\n\n\ndocker \u304c\u8d77\u52d5\u3057\u305f\u3089\u3001curl \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001\u5b50\u30b3\u30f3\u30c6\u30ca\u4e0a\u306ehttp \u30b5\u30fc\u30d0\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u53d6\u5f97\u3067\u304d\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\u5b50\u30b3\u30f3\u30c6\u30ca\u306ehttp\u30b5\u30fc\u30d0\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\n$ curl http://localhost/\nThis is a test response.\n\n\n\n\u73fe\u5728\u8d77\u52d5\u3057\u3066\u3044\u308bDocker \u30c7\u30fc\u30e2\u30f3\u3068\u306f\u5225\u306eDocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3057\u3066\u89e3\u6c7a\u3059\u308b\n\n\u6982\u8981\n\n\u73fe\u5728\u8d77\u52d5\u3057\u3066\u3044\u308bDocker \u30c7\u30fc\u30e2\u30f3\u3068\u306f\u5225\u306eDocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3057\u3001\u305d\u306e\u5225\u306e\u30c7\u30fc\u30e2\u30f3\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0\u3092devicemapper \u306a\u3082\u306e\u306b\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\n\u306a\u304a\u3001\u3053\u306e\u8aac\u660e\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u6700\u65b0\u306e\u8cc7\u6750\u306f\u4ee5\u4e0b\u306eGitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u306bpush \u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\n\n https://github.com/TsutomuNakamura/DockerDock/tree/master/altdocker\n\n\n\n\n\u65b0\u3057\u3044Docker \u30c7\u30fc\u30e2\u30f3\u8d77\u52d5\u306b\u3064\u3044\u3066\nDocker \u30c7\u30fc\u30e2\u30f3\u3092\u4f55\u3082\u8003\u3048\u305a\u306b\u3082\u3046\u3072\u3068\u3064\u8d77\u52d5\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u30b3\u30de\u30f3\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4ee5\u4e0b\u306e\u7269\u3089\u304c\u7af6\u5408\u72b6\u614b\u3092\u8d77\u3053\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u7af6\u5408\u3092\u8d77\u3053\u3059Docker \u30c7\u30fc\u30e2\u30f3\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\n\n\n\n\n -b, --bridge=\n Docker \u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30afbridge\n\n\n --exec-root=\n Docker \u30c7\u30fc\u30e2\u30f3\u306e\u72b6\u614b\u60c5\u5831\u3092\u683c\u7d0d\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\"/var/run/docker\"\n\n\n -g, --graph=\n Docker \u306e\u30a4\u30e1\u30fc\u30b8\u60c5\u5831\u304c\u683c\u7d0d\u3055\u308c\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\"/var/lib/docker\"\n\n\n -H, --host=[]\n Docker \u30c7\u30fc\u30e2\u30f3\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306esocket\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f/var/run/docker.sock\n\n\n -p, --pidfile=\n Docker \u30c7\u30fc\u30e2\u30f3\u306e\u30d7\u30ed\u30bb\u30b9ID \u304c\u683c\u7d0d\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\n\n\n\n\nDocker \u30c7\u30fc\u30e2\u30f3\u3092\u3082\u3046\u3072\u3068\u3064\u8d77\u52d5\u3059\u308b\u5834\u5408\u306f\u3001\u4e0a\u8a18\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u3092\u73fe\u5728\u8d77\u52d5\u3057\u3066\u3044\u308bDocker \u30c7\u30fc\u30e2\u30f3\u3068\u91cd\u8907\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u307e\u305f\u3053\u308c\u3089\u306b\u52a0\u3048\u3066\u3001\u4eca\u56de\u306f\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0\u3092devicemapper \u306b\u3059\u308b\u305f\u3081\u3001-s, --storage-driver= \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066devicemapper \u3092\u4f7f\u3046\u3088\u3046\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u3082\u3046\u3072\u3068\u3064Docker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b\n\u4eca\u56de\u8d77\u52d5\u3059\u308b\u3082\u3046\u3072\u3068\u3064\u306eDocker \u30c7\u30fc\u30e2\u30f3\u306e\u540d\u524d\u3092altdocker \u3068\u3057\u307e\u3059\u3002\naltdocker \u3092\u8d77\u52d5\u3059\u308b\u6642\u306baltdocker \u7528\u306ebridge \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306bbridge-utils \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\ninstallbridge-utils\n$ sudo apt-get install bridge-utils\n\n\n\naltdocker \u30b5\u30fc\u30d3\u30b9\u3092\u767b\u9332\u3059\u308b\n/lib/systemd/system \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4e0b\u8a182 \u3064\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n/lib/systemd/system/altdocker.service\n[Unit]\nDescription=Alt Docker Application Container Engine\nDocumentation=https://docs.docker.com\nAfter=network.target altdocker.socket\nRequires=altdocker.socket\n\n[Service]\nType=simple\nEnvironmentFile=-/etc/default/altdocker\nExecStart=/usr/local/bin/altdocker/altdocker-daemon\nMountFlags=slave\nLimitNOFILE=1048576\nLimitNPROC=1048576\nLimitCORE=infinity\n\n[Install]\nWantedBy=multi-user.target\n\n\n\n/lib/systemd/system/altdocker.socket\n[Unit]\nDescription=Alt Docker Socket for the API\nPartOf=altdocker.service\n\n[Socket]\nListenStream=/var/run/altdocker.sock\nSocketMode=0660\nSocketUser=root\nSocketGroup=docker\n\n[Install]\nWantedBy=sockets.target\n\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001systemctl daemon-reload \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\naltdocker\u30b5\u30fc\u30d3\u30b9\u3092\u767b\u9332\u3059\u308b\n$ sudo systemctl daemon-reload\n\n\n\naltdocker-daemon \u30b3\u30de\u30f3\u30c9\u3092\u4f5c\u6210\u3059\u308b\n\u8d77\u52d5\u6642\u306baltdocker \u306ebridge \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30d5\u30a1\u30a4\u30eb\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n/usr/local/bin/altdocker/altdocker-daemon\n#!/bin/bash\n\nif [ \"$(id -u)\" != \"0\" ]\nthen\n    echo \"$0 must be run as root.\" >&2\n    exit 1\nfi\n\nif [ ! -r /etc/default/altdocker ]\nthen\n    echo \"Failed to read file /etc/default/altdocker\" >&2\n    exit 1\nfi\n. /etc/default/altdocker\n\nfunction create_docker_bridge() {\n    if ! ip link show $DOCKER_BRIDGE > /dev/null 2>&1\n    then\n        brctl addbr $DOCKER_BRIDGE\n        ip addr add $DOCKER_BRIDGE_IP\n    fi\n    sleep 0.5\n}\n\nfunction inactivate_docker_bridge() {\n    if ip link show $DOCKER_BRIDGE > /dev/null 2>&1\n    then\n        ip link set dev $DOCKER_BRIDGE down\n    fi\n}\n\ntrap inactivate_docker_bridge EXIT\n\ncreate_docker_bridge\n/usr/bin/docker daemon -H $DOCKER_SOCKET -b $DOCKER_BRIDGE -p $DOCKER_PID_FILE --exec-root $DOCKER_EXEC_ROOT --graph $DOCKER_GRAPH --storage-driver $DOCKER_STORAGE_DRIVER\nEXIT_STATUS=$?\n\nif [ $EXIT_STATUS -ne 0 ]\nthen\n    echo \"Some error occured when running altdocker daemon\" >&2\nfi\n\nexit $EXIT_STATUS\n\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u6a29\u9650\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\naltdocker-daemon\u306e\u6a29\u9650\u8ffd\u52a0\n$ sudo chown root:root /usr/share/bin/altdocker/altdocker-daemon\n$ sudo chmod u+x /usr/share/bin/altdocker/altdocker-daemon\n\n\n\naltdocker \u7ba1\u7406\u30b3\u30de\u30f3\u30c9\u3092\u4f5c\u6210\u3059\u308b\naltdocker \u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b/usr/local/bin/altdocker/altdocker \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\naltdocker\u7ba1\u7406\u30b3\u30de\u30f3\u30c9\u306e\u4f5c\u6210\n$ sudo mkdir /usr/share/bin/altdocker/\n$ sudo vim /usr/share/bin/altdocker/altdocker\n\n\n\u4eca\u56de\u306f\u7ba1\u7406\u30b3\u30de\u30f3\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n/usr/local/bin/altdocker/altdocker\n#!/bin/bash\n[ -r /etc/default/altdocker ] && . /etc/default/altdocker\ndocker -H ${DOCKER_SOCKET:-unix:///var/run/altdocker.sock} $@\n\n\n\u6a29\u9650\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u6a29\u9650\u306e\u8ffd\u52a0\n$ sudo chown root:root /usr/share/bin/altdocker/altdocker\n$ sudo chmod u+x /usr/share/bin/altdocker/altdocker\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u6a29\u9650\u3092\u8ffd\u52a0\u3057\u305f\u3089\u3001update-alternatives \u3067altdocker \u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nupdate-alternatives\n$ sudo update-alternatives --install /usr/bin/altdocker altdocker /usr/local/bin/altdocker/altdocker 10\n\n\n\n\u30b5\u30fc\u30d3\u30b9\u3092\u8d77\u52d5\u3059\u308b\nsystemctl \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066altdocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\naltdocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b\u306b\u306f\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\naltdocker\u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b\n$ sudo systemctl start altdocker\n\n\naltdocker \u30c7\u30fc\u30e2\u30f3\u304c\u8d77\u52d5\u3057\u305f\u3089\u3001\u30b3\u30de\u30f3\u30c9\u3067\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nStorage Driver \u304cdevicemapper \u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\naltdocker\u306e\u52d5\u4f5c\u78ba\u8a8d\n$ sudo altdocker info\nContainers: 0\nImages: 2\nServer Version: 1.9.1\nStorage Driver: devicemapper\n Pool Name: docker-8:1-3804427-pool\n......\n\n\naltdocker \u306b\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\n\naltdocker\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3057\u3066\u307f\u308b\n$ sudo altdocker run -ti debian /bin/bash\n......\nroot@c6ed40e4c1c9:/#\n\n\n\u554f\u984c\u306a\u304f\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3067\u304d\u308c\u3070\u3001\u6210\u529f\u3067\u3059\u3002\n\n\u53c2\u8003\n\n Run docker inside a docker container?\n http://stackoverflow.com/questions/26239116/run-docker-inside-a-docker-container\n\n\n Running out of loopback devices\n https://github.com/jpetazzo/dind/issues/19\n\n\n Modprobe error while installing Docker on Ubuntu 14.04\n http://stackoverflow.com/questions/31904201/modprobe-error-while-installing-docker-on-ubuntu-14-04\n\n\n Select a storage driver\n https://docs.docker.com/engine/userguide/storagedriver/selectadriver/\n\n\n Is it possible to start multiple docker daemons on the same machine\n http://stackoverflow.com/questions/32334167/is-it-possible-to-start-multiple-docker-daemons-on-the-same-machine\n\n\n brctl \u3067Linux\u30de\u30b7\u30f3\u3092HUB\u306b\u3059\u308b\n http://www.usupi.org/sysad/162.html\n\n# \u7d4c\u7def \nDocker \u4e0a\u306e\u30b3\u30f3\u30c6\u30ca\u306bSamba4 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001samba-tool \u3092\u5b9f\u884c\u3057\u305f\u6642\u306b\u4e0b\u8a18\u30a8\u30e9\u30fc\u304c\u51fa\u529b\u3055\u308c\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u5931\u6557\u3057\u3066\u3057\u307e\u3044\u3001\u5148\u306b\u9032\u3081\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u7d4c\u9a13\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n```text:Samba4\u306esamba-tool\u3092\u5b9f\u884c\u3057\u305f\u6642\u306b\u51fa\u305f\u30a8\u30e9\u30fc\n......\nERROR(<class 'samba.provision.ProvisioningError'>): Provision failed - ProvisioningError: Your filesystem or build does not support posix ACLs, which s3fs requires.  Try the mounting the filesystem with the 'acl' option.\n  File \"/usr/lib/python2.7/dist-packages/samba/netcmd/domain.py\", line 401, in run\n    use_rfc2307#use_rfc2307, skip_sysvolaclFalse)\n  File \"/usr/lib/python2.7/dist-packages/samba/provision/__init__.py\", line 2160, in provision\n    skip_sysvolacl=skip_sysvolacl)\n  File \"/usr/lib/python2.7/dist-packages/samba/provision/__init__.py\", line 1799, in provision_fill\n    names.domaindn, lp, use_ntvfs)\n  File \"/usr/lib/python2.7/dist-packages/samba/provision/__init__.py\", line 1551, in setsysvolacl\n    raise ProvisioningError(\"Your filesystem or build does not support posix ACLs, which s3fs requires.  \"\n```\n\n\u3053\u306e\u30a8\u30e9\u30fc\u306e\u539f\u56e0\u3092\u8abf\u3079\u3066\u3044\u304f\u3068\u3001Docker \u30c7\u30fc\u30e2\u30f3\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0aufs \u304cacl \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u51fa\u308b\u3082\u306e\u3067\u3057\u305f\u3002\n\n\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0\u306fDocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b\u3068\u304d\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u4eca\u4f7f\u3063\u3066\u3044\u308bDocker \u30c7\u30fc\u30e2\u30f3\u306e\u8a2d\u5b9a\u3092acl \u5bfe\u5fdc\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0(\u4f8b:devicemapper) \u306b\u5909\u66f4\u3059\u308b\u306e\u304c\u624b\u3063\u53d6\u308a\u65e9\u3044\u3067\u3059\u304c\u3001\u65e2\u306b\u4f5c\u6210\u3055\u308c\u3066\u3044\u308bDocker \u30b3\u30f3\u30c6\u30ca\u304caufs \u306e\u65e8\u307f\u3092\u624b\u653e\u3059\u306e\u306f\u5acc\u3060\u2026\u3002\n\u3046\u30fc\u3093\u3069\u3046\u3057\u305f\u3082\u306e\u304b\u2026f(\u00b4\uff0d\uff40\uff1b) \u3068\u8003\u3048\u3001\u8abf\u3079\u308b\u3053\u3068\u6570\u6642\u9593\u3001\u4ee5\u4e0b\u306e2 \u901a\u308a\u306e\u65b9\u6cd5\u3067\u89e3\u6c7a\u306b\u6311\u6226\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n* Docker in Docker \u3067\u3001\u5b50\u30b3\u30f3\u30c6\u30ca\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0\u3092devicemapper \u306b\u3059\u308b\n* \u73fe\u5728\u8d77\u52d5\u3057\u3066\u3044\u308bDocker \u30c7\u30fc\u30e2\u30f3\u3068\u306f\u5225\u306eDocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3057\u3066\u3001\u305d\u3061\u3089\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0\u3092devicemapper \u306b\u3059\u308b\n\n## \u7d50\u8ad6\u304b\u3089\u5148\u306b... \n\u500b\u4eba\u7684\u306b\u306fDocker in Docker \u3067\u89e3\u6c7a\u3059\u308b\u65b9\u6cd5\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\n\u5225\u306eDocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b\u65b9\u6cd5\u3067\u306f\u4ed6\u306e\u4eba\u306e\u74b0\u5883\u3078\u30b3\u30f3\u30c6\u30ca\u3092\u914d\u5e03\u3059\u308b\u3068\u304d\u306b\u3001\u3082\u3057\u305d\u306e\u4eba\u304c\u81ea\u5206\u3068\u540c\u69d8\u306baufs \u306a\u74b0\u5883\u3067Docker \u30c7\u30fc\u30e2\u30f3\u304c\u8d77\u52d5\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u305d\u306e\u4eba\u3078\u591a\u304f\u306e\u69cb\u7bc9\u624b\u9806\u3092\u5b9f\u65bd\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308b\u305f\u3081\u3067\u3059\u3002\nDocker in Docker \u3067\u89e3\u6c7a\u3059\u308b\u65b9\u6cd5\u3067\u306f\u3001Dockerfile \u3092\u914d\u5e03\u3057\u3066\u5b9f\u884c\u3057\u3066\u3082\u3089\u3046\u3053\u3068\u3067\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002\n\n\n# \u69cb\u6210 \n\u4eca\u56de\u672c\u624b\u9806\u3092\u5b9f\u65bd\u3057\u305f\u74b0\u5883\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n* \u69cb\u6210\n<table><tbody>\n  <tr>\n    <th> Host OS</th>\n    <td> Ubuntu 15.10</td>\n  </tr>\n  <tr>\n    <th> Docker version</th>\n    <td> 1.9.1</td>\n  </tr>\n</tbody></table>\n\n# Docker-in-Docker \u3067\u89e3\u6c7a\u3059\u308b \n\n## \u6982\u8981 \n![Docker_DifferentStorageDriver0000.png](https://qiita-image-store.s3.amazonaws.com/0/70152/c6b325c4-9f9c-1165-eeee-89034f3bb94e.png)\n\nDocker in Docker \u3092\u4f7f\u7528\u3057\u3066\u5b50Docker \u30c7\u30fc\u30e2\u30f3\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0\u3092devicemapper \u306b\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nDocker \u306ebacking filesystem \u306e\u8981\u4ef6\u3068\u3057\u3066\u3001devicemapper \u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001Docker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3057\u3066\u3044\u308bHost \u30de\u30b7\u30f3\u4e0a\u306ebacking filesystem \u306f\u4e00\u81f4\u3057\u3066\u3044\u308b\u5fc5\u8981\u6027\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\n\n```text:Backingfilesystem\u306eHost\u30b7\u30b9\u30c6\u30e0\u3068\u306e\u30de\u30c3\u30c1\u6761\u4ef6\n|Storage driver |Must match backing filesystem |\n|---------------|------------------------------|\n|overlay        |No                            |\n|aufs           |No                            |\n|btrfs          |Yes                           |\n|devicemapper   |No                            |\n|vfs*           |No                            |\n|zfs            |Yes                           |\n\n\u629c\u7c8b:\nhttps://docs.docker.com/engine/userguide/storagedriver/selectadriver/\n```\n\n\n\u3059\u306a\u308f\u3061\u3001devicemapper \u306abacking filesystem \u306aDocker \u30b3\u30f3\u30c6\u30ca\u74b0\u5883\u304c\u307b\u3057\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u4f8b\u3048\u3070aufs \u306aDocker \u30c7\u30fc\u30e2\u30f3\u306e\u30b3\u30f3\u30c6\u30ca\u4e0a\u306bdevicemapper \u306aDocker \u30c7\u30fc\u30e2\u30f3\u3092\u3092\u8d77\u52d5\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u306a\u304a\u3001\u3053\u306e\u8aac\u660e\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u6700\u65b0\u306e\u8cc7\u6750\u306f\u4ee5\u4e0b\u306eGitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u306bpush \u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n<dl>\n  <dd> https://github.com/TsutomuNakamura/DockerDock/tree/master/docker-in-docker-simple</dd>\n</dl>\n\n## \u89aa\u30b3\u30f3\u30c6\u30ca\u306e\u6e96\u5099 \nDocker-in-Docker \u306e\u89aa\u3068\u306a\u308b\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3057\u3066\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n\n```text:Dockerfile(\u89aa\u30b3\u30f3\u30c6\u30ca)\nFROM debian:jessie\n\nRUN apt-get update\nRUN apt-get install -y apt-transport-https\nRUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\nRUN echo \"deb https://apt.dockerproject.org/repo debian-jessie main\" > /etc/apt/sources.list.d/docker.list\nRUN apt-get update\nRUN apt-get install -y docker-engine\nRUN docker daemon &\n\nCOPY child /root/child\n\nRUN cd /root/child && chmod u+x BuildChild.sh\nEXPOSE 80\n\nENTRYPOINT [\"/root/child/BuildChild.sh\"]\n```\n\n\n## \u5b50\u30b3\u30f3\u30c6\u30ca\u306e\u6e96\u5099 \n\u5b50\u30b3\u30f3\u30c6\u30ca\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4eca\u56de\u3001\u5b50\u30b3\u30f3\u30c6\u30ca\u306b\u95a2\u3059\u308b\u8cc7\u6750\u306f\u89aa\u30b3\u30f3\u30c6\u30ca\u306eDockerfile \u306e\u5834\u6240\u304b\u3089`child` \u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u305d\u306e\u4e2d\u306b\u4f5c\u6210\u3057\u3066\u3044\u304f\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\n```bash:child/BuildChild.sh\n#!/bin/bash\n\nSCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\ncd ${SCRIPT_DIR}\n\nCGROUP_DIR=/sys/fs/cgroup\n\n[ -d ${CGROUP_DIR} ] || mkdir ${CGROUP_DIR}\n\nmountpoint -q ${CGROUP_DIR} || {\n    mount -n -t tmpfs -o uid#0,gid=0,mode0755 cgroup ${CGROUP_DIR} || {\n        echo \"Could not mount tmpsfs. Did you use --privileged?\" >&2\n        exit 1\n    }\n}\n\nfor SUBSYS in $(cut -d: -f2 /proc/1/cgroup); do\n    [ -d ${CGROUP}/${SUBSYS} ] || mkdir ${CGROUP}/${SUBSYS}\n    mountpoint -q ${CGROUP}/${SUBSYS} || {\n        mount -n -t cgroup -o ${SUBSYS} cgroup ${CGROUP}/${SUBSYS}\n    }\ndone\n\npushd /proc/self/fd\nfor FD in *; do\n    case \"${FD}\" in\n    [012])\n        ;;\n    *)\n        eval exec \"$FD>&-\"\n        ;;\n    esac\ndone\n\npopd\n\nensure_loop(){\n    num=\"$1\"\n    dev=\"/dev/loop$num\"\n    if test -b \"$dev\"; then\n        echo \"$dev is a usable loop device.\"\n        return 0\n    fi\n\n    echo \"Attempting to create $dev for docker ...\"\n    if ! mknod -m660 $dev b 7 $num; then\n        echo \"Failed to create $dev!\" 1>&2\n        return 3\n    fi\n\n    return 0\n}\n\nLOOP_A=$(losetup -f)\nLOOP_A=${LOOP_A#/dev/loop}\nLOOP_B=$(expr $LOOP_A + 1)\n\nensure_loop $LOOP_A || exit 1\nensure_loop $LOOP_B || exit 1\n\n[ -f /var/run/docker.pid ] && {\n    pgrep docker > /dev/null && {\n        echo \"Some docker daemons are already running.\" >&2\n        exit 1\n    } || {\n        rm -f /var/run/docker.pid\n    }\n}\n\ndocker daemon --storage-driver=\"devicemapper\" &\nsleep 1\n\ndocker build -t=\"taro/docker-in-docker-child:latest\" .\ndocker run --rm -p 0.0.0.0:80:80 --name docker-child -h docker-child -ti \"taro/docker-in-docker-child\" /bin/bash\n```\n\n\n\u5b50\u30b3\u30f3\u30c6\u30ca\u306eDockerfile \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\n```text:child/Dockerfile\nFROM debian:jessie\n\nRUN apt-get update\nRUN apt-get -y install nodejs\nRUN ln -s /usr/bin/nodejs /usr/bin/node\n\nCOPY nodeprog /opt/nodeprog\nEXPOSE 80\n\nENTRYPOINT [\"node\", \"/opt/nodeprog/test.js\"]\n```\n\n\n\u5f8c\u307b\u3069\u5b50\u30b3\u30f3\u30c6\u30ca\u3068\u306e\u758e\u901a\u78ba\u8a8d\u3092\u884c\u3046\u3068\u304d\u306b\u4f7f\u308f\u308c\u308bNodeJs \u30c6\u30b9\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4e0b\u8a18\u306e\u7528\u306b\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n```javascript:child/nodeprog/test.js\nvar http = require(\"http\");\n\nconsole.log(\"#######################################################\");\nconsole.log(\"# Starting http server ...                            #\");\nconsole.log(\"#######################################################\");\n\nhttp.createServer(function (request, response) {\n    var ip = request.headers['x-forwarded-for'] || request.connection.remoteAddress;\n    console.log(\"Received a request from \" + ip);\n    response.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    response.end(\"This is a test response.\\n\");\n}).listen(80, \"0.0.0.0\");\n```\n\n\n## \u30b3\u30f3\u30c6\u30ca\u306ebuild \n\u5b50\u30b3\u30f3\u30c6\u30ca\u306e\u6e96\u5099\u3082\u3067\u304d\u305f\u3089\u3001\u89aa\u30b3\u30f3\u30c6\u30ca\u306ebuild \u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\n```text:\u89aa\u30b3\u30f3\u30c6\u30ca\u306ebuild\n$ sudo docker build -t=\"taro/docker-in-docker-parent\" .\n```\n\n\n\u89aa\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\u89aa\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u5b50\u30b3\u30f3\u30c6\u30ca\u306e\u69cb\u7bc9\u304c\u958b\u59cb\u3055\u308c\u307e\u3059\u3002\n\u89aa\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u3068\u304d\u306bHost OS \u306e\u30c7\u30d0\u30a4\u30b9\u3092\u7279\u6a29\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b`--privilege` \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u8d77\u52d5\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u306a\u3044\u3068\u3001Docker \u5185\u306bDocker \u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\n\n```text:\u89aa\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5(--privilege\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u8d77\u52d5\u3059\u308b)\n$ sudo docker run -p 127.0.0.1:80:80 --name docker-parent -h docker-parent --privileged -ti taro/docker-in-docker-parent:latest\n# \u521d\u56de\u306f\u7d50\u69cb\u6642\u9593\u3092\u8981\u3057\u307e\u3059...\n...\n\n#######################################################\n# Starting http server ...                            #\n#######################################################\n```\n\n\ndocker \u304c\u8d77\u52d5\u3057\u305f\u3089\u3001curl \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001\u5b50\u30b3\u30f3\u30c6\u30ca\u4e0a\u306ehttp \u30b5\u30fc\u30d0\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u53d6\u5f97\u3067\u304d\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\n```text:\u5b50\u30b3\u30f3\u30c6\u30ca\u306ehttp\u30b5\u30fc\u30d0\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\n$ curl http://localhost/\nThis is a test response.\n```\n\n\n# \u73fe\u5728\u8d77\u52d5\u3057\u3066\u3044\u308bDocker \u30c7\u30fc\u30e2\u30f3\u3068\u306f\u5225\u306eDocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3057\u3066\u89e3\u6c7a\u3059\u308b \n\n## \u6982\u8981 \n![Docker_DifferentStorageDriver0001.png](https://qiita-image-store.s3.amazonaws.com/0/70152/4839f764-af72-11c5-4187-0a4e90dd7d3c.png)\n\n\u73fe\u5728\u8d77\u52d5\u3057\u3066\u3044\u308bDocker \u30c7\u30fc\u30e2\u30f3\u3068\u306f\u5225\u306eDocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3057\u3001\u305d\u306e\u5225\u306e\u30c7\u30fc\u30e2\u30f3\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0\u3092devicemapper \u306a\u3082\u306e\u306b\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\n\n\u306a\u304a\u3001\u3053\u306e\u8aac\u660e\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u6700\u65b0\u306e\u8cc7\u6750\u306f\u4ee5\u4e0b\u306eGitHub \u30ea\u30dd\u30b8\u30c8\u30ea\u306bpush \u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n<dl>\n  <dd> https://github.com/TsutomuNakamura/DockerDock/tree/master/altdocker</dd>\n</dl>\n\n## \u65b0\u3057\u3044Docker \u30c7\u30fc\u30e2\u30f3\u8d77\u52d5\u306b\u3064\u3044\u3066 \nDocker \u30c7\u30fc\u30e2\u30f3\u3092\u4f55\u3082\u8003\u3048\u305a\u306b\u3082\u3046\u3072\u3068\u3064\u8d77\u52d5\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u30b3\u30de\u30f3\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4ee5\u4e0b\u306e\u7269\u3089\u304c\u7af6\u5408\u72b6\u614b\u3092\u8d77\u3053\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n* \u7af6\u5408\u3092\u8d77\u3053\u3059Docker \u30c7\u30fc\u30e2\u30f3\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\n<table><tbody>\n  </tr>\n  <tr>\n  </tr>\n  <tr>\n    <th> -b, --bridge=</th>\n    <td> Docker \u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30afbridge</td>\n  </tr>\n  <tr>\n    <th> --exec-root=</th>\n    <td> Docker \u30c7\u30fc\u30e2\u30f3\u306e\u72b6\u614b\u60c5\u5831\u3092\u683c\u7d0d\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\"/var/run/docker\"</td>\n  </tr>\n  <tr>\n    <th> -g, --graph=</th>\n    <td> Docker \u306e\u30a4\u30e1\u30fc\u30b8\u60c5\u5831\u304c\u683c\u7d0d\u3055\u308c\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\"/var/lib/docker\"</td>\n  </tr>\n  <tr>\n    <th> -H, --host=[]</th>\n    <td> Docker \u30c7\u30fc\u30e2\u30f3\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306esocket\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f/var/run/docker.sock</td>\n  </tr>\n  <tr>\n    <th> -p, --pidfile=</th>\n    <td> Docker \u30c7\u30fc\u30e2\u30f3\u306e\u30d7\u30ed\u30bb\u30b9ID \u304c\u683c\u7d0d\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb</td>\n  </tr>\n</tbody></table>\n\nDocker \u30c7\u30fc\u30e2\u30f3\u3092\u3082\u3046\u3072\u3068\u3064\u8d77\u52d5\u3059\u308b\u5834\u5408\u306f\u3001\u4e0a\u8a18\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u3092\u73fe\u5728\u8d77\u52d5\u3057\u3066\u3044\u308bDocker \u30c7\u30fc\u30e2\u30f3\u3068\u91cd\u8907\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u307e\u305f\u3053\u308c\u3089\u306b\u52a0\u3048\u3066\u3001\u4eca\u56de\u306f\u30b9\u30c8\u30ec\u30fc\u30b8\u30c9\u30e9\u30a4\u30d0\u3092devicemapper \u306b\u3059\u308b\u305f\u3081\u3001`-s, --storage-driver=` \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066devicemapper \u3092\u4f7f\u3046\u3088\u3046\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n## \u3082\u3046\u3072\u3068\u3064Docker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b \n\u4eca\u56de\u8d77\u52d5\u3059\u308b\u3082\u3046\u3072\u3068\u3064\u306eDocker \u30c7\u30fc\u30e2\u30f3\u306e\u540d\u524d\u3092altdocker \u3068\u3057\u307e\u3059\u3002\naltdocker \u3092\u8d77\u52d5\u3059\u308b\u6642\u306baltdocker \u7528\u306ebridge \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b`bridge-utils` \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n```text:installbridge-utils\n$ sudo apt-get install bridge-utils\n```\n\n\n## altdocker \u30b5\u30fc\u30d3\u30b9\u3092\u767b\u9332\u3059\u308b \n`/lib/systemd/system` \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4e0b\u8a182 \u3064\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\n```bash:/lib/systemd/system/altdocker.service\n[Unit]\nDescription=Alt Docker Application Container Engine\nDocumentation=https://docs.docker.com\nAfter=network.target altdocker.socket\nRequires=altdocker.socket\n\n[Service]\nType=simple\nEnvironmentFile=-/etc/default/altdocker\nExecStart=/usr/local/bin/altdocker/altdocker-daemon\nMountFlags=slave\nLimitNOFILE=1048576\nLimitNPROC=1048576\nLimitCORE=infinity\n\n[Install]\nWantedBy=multi-user.target\n```\n\n\n\n```bash:/lib/systemd/system/altdocker.socket\n[Unit]\nDescription=Alt Docker Socket for the API\nPartOf=altdocker.service\n\n[Socket]\nListenStream=/var/run/altdocker.sock\nSocketMode=0660\nSocketUser=root\nSocketGroup=docker\n\n[Install]\nWantedBy=sockets.target\n```\n\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001`systemctl daemon-reload` \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n\n```text:altdocker\u30b5\u30fc\u30d3\u30b9\u3092\u767b\u9332\u3059\u308b\n$ sudo systemctl daemon-reload\n```\n\n\n## altdocker-daemon \u30b3\u30de\u30f3\u30c9\u3092\u4f5c\u6210\u3059\u308b \n\u8d77\u52d5\u6642\u306baltdocker \u306ebridge \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30d5\u30a1\u30a4\u30eb\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n\n```bash:/usr/local/bin/altdocker/altdocker-daemon\n#!/bin/bash\n\nif [ \"$(id -u)\" != \"0\" ]\nthen\n    echo \"$0 must be run as root.\" >&2\n    exit 1\nfi\n\nif [ ! -r /etc/default/altdocker ]\nthen\n    echo \"Failed to read file /etc/default/altdocker\" >&2\n    exit 1\nfi\n. /etc/default/altdocker\n\nfunction create_docker_bridge() {\n    if ! ip link show $DOCKER_BRIDGE > /dev/null 2>&1\n    then\n        brctl addbr $DOCKER_BRIDGE\n        ip addr add $DOCKER_BRIDGE_IP\n    fi\n    sleep 0.5\n}\n\nfunction inactivate_docker_bridge() {\n    if ip link show $DOCKER_BRIDGE > /dev/null 2>&1\n    then\n        ip link set dev $DOCKER_BRIDGE down\n    fi\n}\n\ntrap inactivate_docker_bridge EXIT\n\ncreate_docker_bridge\n/usr/bin/docker daemon -H $DOCKER_SOCKET -b $DOCKER_BRIDGE -p $DOCKER_PID_FILE --exec-root $DOCKER_EXEC_ROOT --graph $DOCKER_GRAPH --storage-driver $DOCKER_STORAGE_DRIVER\nEXIT_STATUS=$?\n\nif [ $EXIT_STATUS -ne 0 ]\nthen\n    echo \"Some error occured when running altdocker daemon\" >&2\nfi\n\nexit $EXIT_STATUS\n```\n\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u305f\u3089\u6a29\u9650\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```text:altdocker-daemon\u306e\u6a29\u9650\u8ffd\u52a0\n$ sudo chown root:root /usr/share/bin/altdocker/altdocker-daemon\n$ sudo chmod u+x /usr/share/bin/altdocker/altdocker-daemon\n```\n\n\n## altdocker \u7ba1\u7406\u30b3\u30de\u30f3\u30c9\u3092\u4f5c\u6210\u3059\u308b \naltdocker \u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b`/usr/local/bin/altdocker/altdocker` \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\n```text:altdocker\u7ba1\u7406\u30b3\u30de\u30f3\u30c9\u306e\u4f5c\u6210\n$ sudo mkdir /usr/share/bin/altdocker/\n$ sudo vim /usr/share/bin/altdocker/altdocker\n```\n\n\n\u4eca\u56de\u306f\u7ba1\u7406\u30b3\u30de\u30f3\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n```bash:/usr/local/bin/altdocker/altdocker\n#!/bin/bash\n[ -r /etc/default/altdocker ] && . /etc/default/altdocker\ndocker -H ${DOCKER_SOCKET:-unix:///var/run/altdocker.sock} $@\n```\n\n\n\u6a29\u9650\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```text:\u6a29\u9650\u306e\u8ffd\u52a0\n$ sudo chown root:root /usr/share/bin/altdocker/altdocker\n$ sudo chmod u+x /usr/share/bin/altdocker/altdocker\n```\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u6a29\u9650\u3092\u8ffd\u52a0\u3057\u305f\u3089\u3001`update-alternatives` \u3067`altdocker` \u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```text:update-alternatives\n$ sudo update-alternatives --install /usr/bin/altdocker altdocker /usr/local/bin/altdocker/altdocker 10\n```\n\n\n## \u30b5\u30fc\u30d3\u30b9\u3092\u8d77\u52d5\u3059\u308b \n`systemctl` \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u7528\u3057\u3066altdocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\naltdocker \u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b\u306b\u306f\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\n```text:altdocker\u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b\n$ sudo systemctl start altdocker\n```\n\n\naltdocker \u30c7\u30fc\u30e2\u30f3\u304c\u8d77\u52d5\u3057\u305f\u3089\u3001\u30b3\u30de\u30f3\u30c9\u3067\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nStorage Driver \u304c`devicemapper` \u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\n\n```text:altdocker\u306e\u52d5\u4f5c\u78ba\u8a8d\n$ sudo altdocker info\nContainers: 0\nImages: 2\nServer Version: 1.9.1\nStorage Driver: devicemapper\n Pool Name: docker-8:1-3804427-pool\n......\n```\n\n\naltdocker \u306b\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n```text:altdocker\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u4f5c\u6210\u3057\u3066\u307f\u308b\n$ sudo altdocker run -ti debian /bin/bash\n......\nroot@c6ed40e4c1c9:/#\n```\n\n\n\u554f\u984c\u306a\u304f\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3067\u304d\u308c\u3070\u3001\u6210\u529f\u3067\u3059\u3002\n\n# \u53c2\u8003 \n<dl>\n  <dt> Run docker inside a docker container?</dt>\n  <dd> http://stackoverflow.com/questions/26239116/run-docker-inside-a-docker-container</dd>\n</dl>\n\n<dl>\n  <dt> Running out of loopback devices</dt>\n  <dd> https://github.com/jpetazzo/dind/issues/19</dd>\n</dl>\n\n<dl>\n  <dt> Modprobe error while installing Docker on Ubuntu 14.04</dt>\n  <dd> http://stackoverflow.com/questions/31904201/modprobe-error-while-installing-docker-on-ubuntu-14-04</dd>\n</dl>\n\n<dl>\n  <dt> Select a storage driver</dt>\n  <dd> https://docs.docker.com/engine/userguide/storagedriver/selectadriver/</dd>\n</dl>\n\n<dl>\n  <dt> Is it possible to start multiple docker daemons on the same machine</dt>\n  <dd> http://stackoverflow.com/questions/32334167/is-it-possible-to-start-multiple-docker-daemons-on-the-same-machine</dd>\n</dl>\n\n<dl>\n  <dt> brctl \u3067Linux\u30de\u30b7\u30f3\u3092HUB\u306b\u3059\u308b</dt>\n  <dd> http://www.usupi.org/sysad/162.html</dd>\n</dl>\n", "tags": ["docker", "Linux", "Ubuntu", "samba"]}