{"tags": ["ADDA"], "context": "\nMy_Environment\nUbuntu 14.04 LTS Japanese Remix\non VMWare Fusion v8.5.2 (4635224)\non OS X El Captian v10.11.4\n\nGNU bash, version 4.3.11(1)-release\n\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4 \n(also for g++)\nADDA v.1.3b6\n\n\nThis article is related to ADDA (light scattering simulator based on the discrete dipole approximation).\nIn CalcInitField(), variable InitField is used.\nstatic const char *CalcInitField(double zero_resid,const enum incpol which)\n{\n...\n    switch (InitField) {\n        case IF_AUTO:\n        ...\n        case IF_ZERO:\n        ...\n        case IF_INC:\n        ...\n        case IF_WKB:\n        ...\n        case IF_READ:\n        ...\n\nThe InitField is defined with extern in iterative.c as follows:\nextern const enum init_field InitField;\n\nThe InitField is define in param.c.\n\nparam.c\nenum init_field InitField; // how to calculate initial field for the iterative solver\n\n\n, which is set in \n\nparam.c\nPARSE_FUNC(init_field)\n{\n    bool noExtraArgs=true;\n\n    if (Narg<1 || Narg>3) NargError(Narg,\"from 1 to 3\");\n    if (strcmp(argv[1],\"auto\")==0) InitField=IF_AUTO;\n    else if (strcmp(argv[1],\"inc\")==0) InitField=IF_INC;\n    else if (strcmp(argv[1],\"read\")==0) {\n        if (Narg!=2 && Narg!=3) NargErrorSub(Narg,\"init_field read\",\"1 or 2\");\n        ScanFnamesError(Narg-1,FNAME_ARG_1_2,argv+2,&infi_fnameY,&infi_fnameX);\n        InitField=IF_READ;\n        noExtraArgs=false;\n    }\n    else if (strcmp(argv[1],\"wkb\")==0) {\n#ifdef SPARSE\n        PrintErrorHelp(\"Initial field 'wkb' is not supported in sparse mode\");\n#else\n        InitField=IF_WKB;\n#endif\n    }\n    else if (strcmp(argv[1],\"zero\")==0) InitField=IF_ZERO;\n    else NotSupported(\"Initial field prescription\",argv[1]);\n    TestExtraNarg(Narg,noExtraArgs,argv[1]);\n}\n\n\n```txt:My_Environment\nUbuntu 14.04 LTS Japanese Remix\non VMWare Fusion v8.5.2 (4635224)\non OS X El Captian v10.11.4\n\nGNU bash, version 4.3.11(1)-release\n\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4 \n(also for g++)\nADDA v.1.3b6\n```\n\nThis article is related to [ADDA (light scattering simulator based on the discrete dipole approximation)](https://github.com/adda-team/adda/).\n\n\nIn `CalcInitField()`, variable `InitField` is used.\n\n```\nstatic const char *CalcInitField(double zero_resid,const enum incpol which)\n{\n...\n    switch (InitField) {\n        case IF_AUTO:\n        ...\n        case IF_ZERO:\n        ...\n        case IF_INC:\n        ...\n        case IF_WKB:\n        ...\n        case IF_READ:\n        ...\n```\n\nThe `InitField` is defined with `extern` in `iterative.c` as follows:\n\n```\nextern const enum init_field InitField;\n```\n\nThe `InitField` is define in `param.c`.\n\n```param.c\nenum init_field InitField; // how to calculate initial field for the iterative solver\n```\n\n, which is set in \n\n```param.c\nPARSE_FUNC(init_field)\n{\n\tbool noExtraArgs=true;\n\n\tif (Narg<1 || Narg>3) NargError(Narg,\"from 1 to 3\");\n\tif (strcmp(argv[1],\"auto\")==0) InitField=IF_AUTO;\n\telse if (strcmp(argv[1],\"inc\")==0) InitField=IF_INC;\n\telse if (strcmp(argv[1],\"read\")==0) {\n\t\tif (Narg!=2 && Narg!=3) NargErrorSub(Narg,\"init_field read\",\"1 or 2\");\n\t\tScanFnamesError(Narg-1,FNAME_ARG_1_2,argv+2,&infi_fnameY,&infi_fnameX);\n\t\tInitField=IF_READ;\n\t\tnoExtraArgs=false;\n\t}\n\telse if (strcmp(argv[1],\"wkb\")==0) {\n#ifdef SPARSE\n\t\tPrintErrorHelp(\"Initial field 'wkb' is not supported in sparse mode\");\n#else\n\t\tInitField=IF_WKB;\n#endif\n\t}\n\telse if (strcmp(argv[1],\"zero\")==0) InitField=IF_ZERO;\n\telse NotSupported(\"Initial field prescription\",argv[1]);\n\tTestExtraNarg(Narg,noExtraArgs,argv[1]);\n}\n```\n"}