{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nWindows\u3067Serverspec\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\u8a18\u4e8b\u4f5c\u6210\u3067\u7528\u3044\u305fOS\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\nWindows 7 Pro SP1 32bit \u65e5\u672c\u8a9e\u7248\nruby 2.2.3p173 (2015-08-18 revision 51636) [i386-mingw32]\nrspec (3.4.0)\nrspec-core (3.4.1)\nrspec-its (1.2.0)\nserverspec (2.26.0)\nspecinfra (2.47.0)\n\n\u203bruby\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u5168\u3066\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u300cUTF-8\u300d\u3067\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\u203b\u30d0\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u306f\u300cShift-JIS\u300d\u3067\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305a\u306firb\u304b\u3089WinRM\u3092\u4f7f\u3063\u3066\u307f\u308b\n\u30c9\u30e1\u30a4\u30f3\u30a2\u30ab\u30a6\u30f3\u30c8\u306f\u63a5\u7d9a\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u3001\u30ed\u30fc\u30ab\u30eb\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3059\u3002\nPS C:\\serverspec\\sample> irb\nirb(main):001:0> require 'winrm'\n=> true\nirb(main):002:0> require \"kconv\"\n=> true\nirb(main):003:0> endpoint = \"http://remotehost:5985/wsman\"\n=> \"http://remotehost:5985/wsman\"\nirb(main):004:0> objWinRm = WinRM::WinRMWebService.new(endpoint, :plaintext, :user=>\"localuser1\", :pass=>\"password\", :basic_auth_only=>true, :disable_sspi=>true)\n=> #<WinRM::WinRMWebService:0x233d780 \uff08\u7701\u7565\uff09>\nirb(main):005:0> objWinRm.locale(\"ja-JP\")\n=> \"ja-JP\"\nirb(main):006:0>\n\n\u65e5\u672c\u8a9e\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\nirb(main):007:0* status   = objWinRm.powershell(\"type C:\\\\serverspec\\\\test.cmd\") do |stdout, stderr|\nirb(main):008:1*   print Kconv.tosjis( stdout )     if stdout\nirb(main):009:1>   print Kconv.tosjis( stderr )     if stderr\nirb(main):010:1> end\necho \u3042\u3044\u3046\u3048\u304a\nexit 0\n=> {:data=>[{:stdout=>\"echo \\u3042\\u3044\\u3046\\u3048\\u304A\"}, {:stdout=>\"\\r\\n\"}, {:stdout=>\"exit 0\\r\\n\"}], :exitcode=>0}\n\n\n\u554f\u984c\u306a\u304f\u65e5\u672c\u8a9e\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\u6b21\u306b\u30d0\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\nirb(main):011:0> status   = objWinRm.powershell(\"C:\\\\serverspec\\\\test.cmd\") do |stdout, stderr|\nirb(main):012:1*   print Kconv.tosjis( stdout )     if stdout\nirb(main):013:1>   print Kconv.tosjis( stderr )     if stderr\nirb(main):014:1> end\nC:\\Users\\localuser1>echo \u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\nC:\\Users\\localuser1>exit 0\n=> {:data=>[{:stdout=>\"\\r\\n\"}, {:stdout=>\"C:\\\\Users\\\\localuser1>echo \\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\r\\n\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\r\\n\"}, {:stdout=>\"\\r\\nC:\\\\Users\\\\localuser1>exit 0 \\r\\n\"}], :exitcode=>0}\nirb(main):015:0>\n\n\u82f1\u8a9e\u30ed\u30b1\u30fc\u30eb\u3067\u5b9f\u884c\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u304b\u56fd\u969b\u5316\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u6587\u5b57\u5316\u3051\u304c\u8d77\u3053\u308b\u3088\u3046\u3067\u3059\u3002\n\nInvoke-Command\u3067WinRM\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u308b\nwinrm\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304b\u3089Powershell\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nC\uff1a\\serverspec\\sample\\lib\\CustomWinRM.rb\nrequire 'rubygems'\nrequire 'open3'\nrequire 'kconv'\nclass CustomWinRm\n  @my_name = 'CustomWinRm'\n\n  def initialize(args = {})\n    @user_name = args['user']      if args.key?('user')\n    @user_pass = args['pass']      if args.key?('pass')\n    @host_name = args['host']      if args.key?('host')\n    @winrm_client = args['winrm']  if args.key?('winrm')\n    @run_mode = args['mode']       if args.key?('mode')\n  end\n\n  def run_command(command)\n    retcode = -1\n    exec_cmd =  \"#{@winrm_client} -h #{@host_name} -u #{@user_name} -p #{@user_pass}\"\n    if @run_mode == \"ps1\"\n      exec_cmd << \" -es \\\"#{command}\\\"\"\n    else\n      command = \"#{command}\".gsub(\"\\\\\\\"\",\"\\\"\").gsub(\"\\\"\",\"\\\\\\\"\")\n      exec_cmd << \" -cmd \\\"#{command}\\\"\"\n    end\n    exec_cmd = \"powershell -NoProfile -command \\\"#{exec_cmd}\\\"; exit $LASTEXITCODE\"  if \".ps1\" == File.extname(\"#{@winrm_client}\")\n    begin\n      stdout, stderr, status  = Open3.capture3(exec_cmd)\n      retcode = status.exitstatus  if ! status.nil?\n      retcode = -1                 if retcode.nil? || \"#{retcode}\" == ''\n    rescue Exception => excptn\n      puts Kconv.tosjis( \"EXCEPTION : #{excptn.message}\" )\n      retcode = -1\n      stdout = \"\"\n      stderr = excptn.message\n    end\n    return {:exitcode => retcode, :stdout => stdout, :stderr => stderr}\n  end\n\n  def run_cmd(command)\n    @run_mode = \"cmd\"\n    return run_command(command)\n  end\n  alias :cmd :run_cmd\n\n  def run_powershell_script(command)\n    @run_mode = \"ps1\"\n    return run_command(Base64.strict_encode64(\"#{command}\".encode('UTF-16LE')))\n  end\n  alias :powershell :run_powershell_script\n\nend\n\n\nWinRM\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u672c\u4f53\u3068\u306a\u308bPowershell\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nC\uff1a\\serverspec\\sample\\lib\\WinRm.ps1\nparam (\n  [string]$h = \"${ENV:COMPUTERNAME}\",\n  [string]$u = \"${ENV:COMPUTERNAME}\\Administrator\",\n  [string]$p = \"\u3053\u3053\u306b\u30d1\u30b9\u30ef\u30fc\u30c9\",\n  [string]$c = \"hostname\",\n  [string]$cmd,\n  [string]$es\n)\nset-variable -name RET_SUCCESS -value  0 -option constant\nset-variable -name RET_EXCPTN  -value -1 -option constant\n$ErrorActionPreference = \"stop\"\n$Error.Clear()\n$retcd = $RET_SUCCESS\n$cmdstatus = \"\"\nif (![String]::IsNullOrEmpty($cmd)) {$c = \"powershell -NoProfile -command `\"${cmd}; exit $LASTEXITCODE`\"\"}\nif (![String]::IsNullOrEmpty($es))  {$c = \"powershell -NoProfile -encodedCommand ${es}\"}\ntry {\n  $password = ConvertTo-SecureString $p -asplaintext -force\n  $cred = New-Object System.Management.Automation.PsCredential $u, $password\n  $session = New-PSSession -ComputerName $h -credential $cred\n  Invoke-Command -Session $session -ScriptBlock {cmd /c $args[0]} -args $c\n  $cmdstatus = Invoke-Command -Session $session -ScriptBlock {$LASTEXITCODE}\n  $retcd = [int]$cmdstatus\n} catch [Exception] {\n  $retcd = $RET_EXCPTN\n  Write-Output $_.Exception.Message\n} finally {\n  if ( $NULL -ne $session ) {Remove-PSSession -Session $session}\n}\nWrite-Output \"\"\nexit $retcd\n\n\nirb\u304b\u3089\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\nPS C:\\serverspec\\sample> irb\nirb(main):001:0> $LOAD_PATH << \"C:\\\\serverspec\\\\sample\\\\lib\"\n=> [\uff08\u7701\u7565\uff09, \"C:\\\\serverspec\\\\sample\\\\lib\"]\nirb(main):002:0> require 'CustomWinRm'\n=> true\nirb(main):003:0> winrm = CustomWinRm.new({\"user\" => \"mydomain\\\\domainuser1\", \"pass\" => \"password\", \"host\" => \"remotehost\", \"winrm\" => \".\\\\lib\\\\WinRm.ps1\"})\n=> #<CustomWinRm:0x25b5a30 @user_name=\"mydomain\\\\domainuser1\", @user_pass=\"\u30d1\u30b9\u30ef\u30fc\u30c9\", @host_name=\"remotehost\", @winrm_client=\".\\\\lib\\\\WinRm.ps1\">\nirb(main):004:0> winrm.run_command(\"C:\\\\serverspec\\\\test.cmd\")\n=> {:exitcode=>0, :stdout=>\"\\nC:\\\\Users\\\\domainuser1\\\\Documents>echo \u3042\u3044\u3046\u3048\u304a \\n\u3042\u3044\u3046\u3048\u304a\\n\\nC:\\\\Users\\\\domainuser1\\\\Documents>exit 0 \\n\\n\", :stderr=>\"\"}\nirb(main):005:0>\n\n\u4eca\u5ea6\u306f\u6587\u5b57\u5316\u3051\u305b\u305a\u306b\u3059\u307f\u307e\u3057\u305f\u3002\u307e\u305f\u30c9\u30e1\u30a4\u30f3\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u63a5\u7d9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\nServerspec\u3067\u5b9f\u884c\u3057\u3066\u307f\u308b\nSpecInfra\u3092\u3061\u3087\u3063\u3068\u3060\u3051\u4fee\u6b63\u3057\u307e\u3059\u3002\n\nlib\\specinfra\\backend\\winrm.rb\n15,16c15,21\n<         stdout, stderr = [:stdout, :stderr].map do |s|\n<           result[:data].select {|item| item.key? s}.map {|item| item[s]}.join\n---\n>         if Specinfra.configuration.customwinrm.nil? || ! Specinfra.configuration.customwinrm\n>           stdout, stderr = [:stdout, :stderr].map do |s|\n>             result[:data].select {|item| item.key? s}.map {|item| item[s]}.join\n>           end\n>         else\n>           stdout = result[:stdout]\n>           stderr = result[:stderr]\n\n\nspec_helper.rb\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306eWinRM\u3092\u4eca\u56de\u4f5c\u6210\u3057\u305f\u3082\u306e\u3078\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\nC\uff1a\\serverspec\\sample\\spec\\spec_helper.rb\nrequire 'serverspec'\nrequire 'yaml'\nrequire 'CustomWinRm'\nparams = {}\nparams['hostname'] = ENV['TARGET_HOST']\nparams['run_env'] = \"development\"\nputs \"\"\nputs \"##################################################\"\nputs \"HOST: #{params['hostname']} : #{params['run_env']}\"\nputs \"##################################################\"\nproperties = YAML.load_file(\"env/properties.#{params['run_env']}.yml\")\nset_property = properties\nset :backend, :winrm\nset :os, :family => 'windows'\nSpecinfra.configuration.customwinrm = true\nwinrm = CustomWinRm.new({\"user\" => \"#{properties[:winrm_user]}\", \"pass\" => \"#{properties[:winrm_pass]}\", \"host\" => \"#{ENV['TARGET_HOST']}\", \"winrm\" => \".\\\\lib\\\\WinRm.ps1\"})\nSpecinfra.configuration.winrm = winrm\n\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u306f\u300c\u6a19\u6e96\u51fa\u529b\u5185\u5bb9\u306e\u78ba\u8a8d\u300d\u3068\u300c\u30d5\u30a1\u30a4\u30eb\u5185\u5bb9\u306e\u78ba\u8a8d\u300d\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\nC\uff1a\\serverspec\\sample\\spec\\sample\\sample_spec.rb\nrequire 'spec_helper'\nrequire 'CustomHelper'\n\ndescribe command (\"ipconfig /all | Select-String #{'\u30ce\u30fc\u30c9'.encode('Windows-31J')}\") do\n  its(:stdout) { should match /#{\"\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\".encode(\"Windows-31J\")}/}\nend\n\ndescribe file(\"C:\\\\serverspec\\\\test.cmd\") do\n  it { should be_file }\n  it { should contain \"#{'\u3042\u3044\u3046\u3048\u304a'.encode('Windows-31J')}\" }\n  it { should_not contain \"#{'\u304b\u304d\u304f\u3051\u3053'.encode('Windows-31J')}\" }\n  its(:content) { should match /#{\"\u3042\u3044\u3046\u3048\u304a\".encode(\"Windows-31J\")}/ }\n  its(:content) { should_not match /#{\"\u304b\u304d\u304f\u3051\u3053\".encode(\"Windows-31J\")}/ }\nend\n\n\n\u305d\u306e\u4ed6\u3001serverspec\u306e\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\nC\uff1a\\serverspec\\sample\\Rakefile\nrequire 'rake'\nrequire 'rspec/core/rake_task'\nrequire 'yaml'\nservers     = YAML.load_file(\"env/servers.yml\")\ntask :spec    => 'spec:all'\ntask :default => :spec\nnamespace :spec do\n  task :all => servers.keys.map {|key| 'spec:' + key }\n  servers.keys.each do |key|\n    desc \"Run serverspec to #{key}\"\n    RSpec::Core::RakeTask.new(key.to_sym) do |t|\n      ENV['TARGET_HOST']    = key\n      role_pattern      = servers[key][:roles].join(',')\n      t.pattern = \"spec/{\" + role_pattern + \"}/*_spec.rb\"\n      t.fail_on_error = false\n    end\n  end\nend\n\n\n\nC\uff1a\\serverspec\\sample\\env\\servers.yml\nREMOTEHOST:\n :roles:\n  - sample\n\n\n\nC\uff1a\\serverspec\\sample\\env\\properties.development.yml\n:winrm_user: localuser1\n:winrm_pass: password\n\n\n\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\nPS C:\\serverspec\\sample> rake\n\n##################################################\nHOST: REMOTEHOST : development\n##################################################\n\nCommand \"ipconfig /all | Select-String \u30ce\u30fc\u30c9\"\n  stdout\n    should match /\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9/\n\nFile \"C:\\serverspec\\test.cmd\"\n  should be file\n  should contain \"\u3042\u3044\u3046\u3048\u304a\"\n  should not contain \"\u304b\u304d\u304f\u3051\u3053\"\n  content\n    should match /\u3042\u3044\u3046\u3048\u304a/\n  content\n    should not match /\u304b\u304d\u304f\u3051\u3053/\n\nFinished in 16.65 seconds (files took 1.3 seconds to load)\n6 examples, 0 failures\n\nPS C:\\serverspec\\sample>\n\n\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\u3002\n\u4f46\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306eWinRM\u3092\u4f7f\u3046\u3088\u308a\u3082\u304b\u306a\u308a\u9045\u3044\u3067\u3059\u3002\n672\u30b1\u30fc\u30b9\uff08168\u30b1\u30fc\u30b9x4\u30b5\u30fc\u30d0\u30fc\uff09\u306e\u30c6\u30b9\u30c8\u6240\u8981\u6642\u9593\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n- \u30c7\u30d5\u30a9\u30eb\u30c8\u306eWinRM\uff1a427\u79d2\n- Invoke-Command\uff1a541\u79d2\n\n\u3055\u3089\u306b\u4fbf\u5229\u306b\u4f7f\u3046\u305f\u3081\u306b\u306f\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u51e6\u7406\u901f\u5ea6\u5411\u4e0a\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u307e\u3057\u305f\u306e\u3067\u3001\u305c\u3072\u53c2\u7167\u4e0b\u3055\u3044\u3002\n\nServerspec\u3067WinRM\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092C#\u3067\u4f5c\u6210\u3057\u305f\u30b3\u30de\u30f3\u30c9\u306b\u7f6e\u304d\u63db\u3048\u3066\u307f\u305f\n\n# \u306f\u3058\u3081\u306b\n\nWindows\u3067Serverspec\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n# \u30d0\u30fc\u30b8\u30e7\u30f3\n\n\u8a18\u4e8b\u4f5c\u6210\u3067\u7528\u3044\u305fOS\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n- Windows 7 Pro SP1 32bit \u65e5\u672c\u8a9e\u7248\n- ruby 2.2.3p173 (2015-08-18 revision 51636) [i386-mingw32]\n- rspec (3.4.0)\n- rspec-core (3.4.1)\n- rspec-its (1.2.0)\n- serverspec (2.26.0)\n- specinfra (2.47.0)\n\n\u203bruby\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u5168\u3066\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u300cUTF-8\u300d\u3067\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\u203b\u30d0\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u306f\u300cShift-JIS\u300d\u3067\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u307e\u305a\u306firb\u304b\u3089WinRM\u3092\u4f7f\u3063\u3066\u307f\u308b\n\n\u30c9\u30e1\u30a4\u30f3\u30a2\u30ab\u30a6\u30f3\u30c8\u306f\u63a5\u7d9a\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u3001\u30ed\u30fc\u30ab\u30eb\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n```irb\nPS C:\\serverspec\\sample> irb\nirb(main):001:0> require 'winrm'\n=> true\nirb(main):002:0> require \"kconv\"\n=> true\nirb(main):003:0> endpoint = \"http://remotehost:5985/wsman\"\n=> \"http://remotehost:5985/wsman\"\nirb(main):004:0> objWinRm = WinRM::WinRMWebService.new(endpoint, :plaintext, :user=>\"localuser1\", :pass=>\"password\", :basic_auth_only=>true, :disable_sspi=>true)\n=> #<WinRM::WinRMWebService:0x233d780 \uff08\u7701\u7565\uff09>\nirb(main):005:0> objWinRm.locale(\"ja-JP\")\n=> \"ja-JP\"\nirb(main):006:0>\n```\n\n\u65e5\u672c\u8a9e\u3092\u542b\u3080\u30d5\u30a1\u30a4\u30eb\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3059\u3002\n\n```irb\nirb(main):007:0* status   = objWinRm.powershell(\"type C:\\\\serverspec\\\\test.cmd\") do |stdout, stderr|\nirb(main):008:1*   print Kconv.tosjis( stdout )     if stdout\nirb(main):009:1>   print Kconv.tosjis( stderr )     if stderr\nirb(main):010:1> end\necho \u3042\u3044\u3046\u3048\u304a\nexit 0\n=> {:data=>[{:stdout=>\"echo \\u3042\\u3044\\u3046\\u3048\\u304A\"}, {:stdout=>\"\\r\\n\"}, {:stdout=>\"exit 0\\r\\n\"}], :exitcode=>0}\n\n```\n\n\u554f\u984c\u306a\u304f\u65e5\u672c\u8a9e\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\u6b21\u306b\u30d0\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```irb\nirb(main):011:0> status   = objWinRm.powershell(\"C:\\\\serverspec\\\\test.cmd\") do |stdout, stderr|\nirb(main):012:1*   print Kconv.tosjis( stdout )     if stdout\nirb(main):013:1>   print Kconv.tosjis( stderr )     if stderr\nirb(main):014:1> end\nC:\\Users\\localuser1>echo \u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\u9403\u7dd2\u7533\nC:\\Users\\localuser1>exit 0\n=> {:data=>[{:stdout=>\"\\r\\n\"}, {:stdout=>\"C:\\\\Users\\\\localuser1>echo \\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\r\\n\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\uFFFD\\r\\n\"}, {:stdout=>\"\\r\\nC:\\\\Users\\\\localuser1>exit 0 \\r\\n\"}], :exitcode=>0}\nirb(main):015:0>\n```\n\n\u82f1\u8a9e\u30ed\u30b1\u30fc\u30eb\u3067\u5b9f\u884c\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u304b\u56fd\u969b\u5316\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u6587\u5b57\u5316\u3051\u304c\u8d77\u3053\u308b\u3088\u3046\u3067\u3059\u3002\n\n# Invoke-Command\u3067WinRM\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u308b\n\nwinrm\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304b\u3089Powershell\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```ruby:C\uff1a\\serverspec\\sample\\lib\\CustomWinRM.rb\nrequire 'rubygems'\nrequire 'open3'\nrequire 'kconv'\nclass CustomWinRm\n  @my_name = 'CustomWinRm'\n\n  def initialize(args = {})\n    @user_name = args['user']      if args.key?('user')\n    @user_pass = args['pass']      if args.key?('pass')\n    @host_name = args['host']      if args.key?('host')\n    @winrm_client = args['winrm']  if args.key?('winrm')\n    @run_mode = args['mode']       if args.key?('mode')\n  end\n\n  def run_command(command)\n    retcode = -1\n    exec_cmd =  \"#{@winrm_client} -h #{@host_name} -u #{@user_name} -p #{@user_pass}\"\n    if @run_mode == \"ps1\"\n      exec_cmd << \" -es \\\"#{command}\\\"\"\n    else\n      command = \"#{command}\".gsub(\"\\\\\\\"\",\"\\\"\").gsub(\"\\\"\",\"\\\\\\\"\")\n      exec_cmd << \" -cmd \\\"#{command}\\\"\"\n    end\n    exec_cmd = \"powershell -NoProfile -command \\\"#{exec_cmd}\\\"; exit $LASTEXITCODE\"  if \".ps1\" == File.extname(\"#{@winrm_client}\")\n    begin\n      stdout, stderr, status  = Open3.capture3(exec_cmd)\n      retcode = status.exitstatus  if ! status.nil?\n      retcode = -1                 if retcode.nil? || \"#{retcode}\" == ''\n    rescue Exception => excptn\n      puts Kconv.tosjis( \"EXCEPTION : #{excptn.message}\" )\n      retcode = -1\n      stdout = \"\"\n      stderr = excptn.message\n    end\n    return {:exitcode => retcode, :stdout => stdout, :stderr => stderr}\n  end\n\n  def run_cmd(command)\n    @run_mode = \"cmd\"\n    return run_command(command)\n  end\n  alias :cmd :run_cmd\n\n  def run_powershell_script(command)\n    @run_mode = \"ps1\"\n    return run_command(Base64.strict_encode64(\"#{command}\".encode('UTF-16LE')))\n  end\n  alias :powershell :run_powershell_script\n\nend\n```\n\nWinRM\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u672c\u4f53\u3068\u306a\u308bPowershell\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```powershell:C\uff1a\\serverspec\\sample\\lib\\WinRm.ps1\nparam (\n  [string]$h = \"${ENV:COMPUTERNAME}\",\n  [string]$u = \"${ENV:COMPUTERNAME}\\Administrator\",\n  [string]$p = \"\u3053\u3053\u306b\u30d1\u30b9\u30ef\u30fc\u30c9\",\n  [string]$c = \"hostname\",\n  [string]$cmd,\n  [string]$es\n)\nset-variable -name RET_SUCCESS -value  0 -option constant\nset-variable -name RET_EXCPTN  -value -1 -option constant\n$ErrorActionPreference = \"stop\"\n$Error.Clear()\n$retcd = $RET_SUCCESS\n$cmdstatus = \"\"\nif (![String]::IsNullOrEmpty($cmd)) {$c = \"powershell -NoProfile -command `\"${cmd}; exit $LASTEXITCODE`\"\"}\nif (![String]::IsNullOrEmpty($es))  {$c = \"powershell -NoProfile -encodedCommand ${es}\"}\ntry {\n  $password = ConvertTo-SecureString $p -asplaintext -force\n  $cred = New-Object System.Management.Automation.PsCredential $u, $password\n  $session = New-PSSession -ComputerName $h -credential $cred\n  Invoke-Command -Session $session -ScriptBlock {cmd /c $args[0]} -args $c\n  $cmdstatus = Invoke-Command -Session $session -ScriptBlock {$LASTEXITCODE}\n  $retcd = [int]$cmdstatus\n} catch [Exception] {\n  $retcd = $RET_EXCPTN\n  Write-Output $_.Exception.Message\n} finally {\n  if ( $NULL -ne $session ) {Remove-PSSession -Session $session}\n}\nWrite-Output \"\"\nexit $retcd\n```\n\nirb\u304b\u3089\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```irb\nPS C:\\serverspec\\sample> irb\nirb(main):001:0> $LOAD_PATH << \"C:\\\\serverspec\\\\sample\\\\lib\"\n=> [\uff08\u7701\u7565\uff09, \"C:\\\\serverspec\\\\sample\\\\lib\"]\nirb(main):002:0> require 'CustomWinRm'\n=> true\nirb(main):003:0> winrm = CustomWinRm.new({\"user\" => \"mydomain\\\\domainuser1\", \"pass\" => \"password\", \"host\" => \"remotehost\", \"winrm\" => \".\\\\lib\\\\WinRm.ps1\"})\n=> #<CustomWinRm:0x25b5a30 @user_name=\"mydomain\\\\domainuser1\", @user_pass=\"\u30d1\u30b9\u30ef\u30fc\u30c9\", @host_name=\"remotehost\", @winrm_client=\".\\\\lib\\\\WinRm.ps1\">\nirb(main):004:0> winrm.run_command(\"C:\\\\serverspec\\\\test.cmd\")\n=> {:exitcode=>0, :stdout=>\"\\nC:\\\\Users\\\\domainuser1\\\\Documents>echo \u3042\u3044\u3046\u3048\u304a \\n\u3042\u3044\u3046\u3048\u304a\\n\\nC:\\\\Users\\\\domainuser1\\\\Documents>exit 0 \\n\\n\", :stderr=>\"\"}\nirb(main):005:0>\n```\n\n\u4eca\u5ea6\u306f\u6587\u5b57\u5316\u3051\u305b\u305a\u306b\u3059\u307f\u307e\u3057\u305f\u3002\u307e\u305f\u30c9\u30e1\u30a4\u30f3\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u63a5\u7d9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n# Serverspec\u3067\u5b9f\u884c\u3057\u3066\u307f\u308b\n\nSpecInfra\u3092\u3061\u3087\u3063\u3068\u3060\u3051\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```ruby:lib\\specinfra\\backend\\winrm.rb\n15,16c15,21\n<         stdout, stderr = [:stdout, :stderr].map do |s|\n<           result[:data].select {|item| item.key? s}.map {|item| item[s]}.join\n---\n>         if Specinfra.configuration.customwinrm.nil? || ! Specinfra.configuration.customwinrm\n>           stdout, stderr = [:stdout, :stderr].map do |s|\n>             result[:data].select {|item| item.key? s}.map {|item| item[s]}.join\n>           end\n>         else\n>           stdout = result[:stdout]\n>           stderr = result[:stderr]\n```\n\nspec_helper.rb\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306eWinRM\u3092\u4eca\u56de\u4f5c\u6210\u3057\u305f\u3082\u306e\u3078\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n```ruby:C\uff1a\\serverspec\\sample\\spec\\spec_helper.rb\nrequire 'serverspec'\nrequire 'yaml'\nrequire 'CustomWinRm'\nparams = {}\nparams['hostname'] = ENV['TARGET_HOST']\nparams['run_env'] = \"development\"\nputs \"\"\nputs \"##################################################\"\nputs \"HOST: #{params['hostname']} : #{params['run_env']}\"\nputs \"##################################################\"\nproperties = YAML.load_file(\"env/properties.#{params['run_env']}.yml\")\nset_property = properties\nset :backend, :winrm\nset :os, :family => 'windows'\nSpecinfra.configuration.customwinrm = true\nwinrm = CustomWinRm.new({\"user\" => \"#{properties[:winrm_user]}\", \"pass\" => \"#{properties[:winrm_pass]}\", \"host\" => \"#{ENV['TARGET_HOST']}\", \"winrm\" => \".\\\\lib\\\\WinRm.ps1\"})\nSpecinfra.configuration.winrm = winrm\n```\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3067\u306f\u300c\u6a19\u6e96\u51fa\u529b\u5185\u5bb9\u306e\u78ba\u8a8d\u300d\u3068\u300c\u30d5\u30a1\u30a4\u30eb\u5185\u5bb9\u306e\u78ba\u8a8d\u300d\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n```ruby:C\uff1a\\serverspec\\sample\\spec\\sample\\sample_spec.rb\nrequire 'spec_helper'\nrequire 'CustomHelper'\n\ndescribe command (\"ipconfig /all | Select-String #{'\u30ce\u30fc\u30c9'.encode('Windows-31J')}\") do\n  its(:stdout) { should match /#{\"\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9\".encode(\"Windows-31J\")}/}\nend\n\ndescribe file(\"C:\\\\serverspec\\\\test.cmd\") do\n  it { should be_file }\n  it { should contain \"#{'\u3042\u3044\u3046\u3048\u304a'.encode('Windows-31J')}\" }\n  it { should_not contain \"#{'\u304b\u304d\u304f\u3051\u3053'.encode('Windows-31J')}\" }\n  its(:content) { should match /#{\"\u3042\u3044\u3046\u3048\u304a\".encode(\"Windows-31J\")}/ }\n  its(:content) { should_not match /#{\"\u304b\u304d\u304f\u3051\u3053\".encode(\"Windows-31J\")}/ }\nend\n```\n\n\u305d\u306e\u4ed6\u3001serverspec\u306e\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```ruby:C\uff1a\\serverspec\\sample\\Rakefile\nrequire 'rake'\nrequire 'rspec/core/rake_task'\nrequire 'yaml'\nservers\t\t= YAML.load_file(\"env/servers.yml\")\ntask :spec    => 'spec:all'\ntask :default => :spec\nnamespace :spec do\n  task :all => servers.keys.map {|key| 'spec:' + key }\n  servers.keys.each do |key|\n    desc \"Run serverspec to #{key}\"\n    RSpec::Core::RakeTask.new(key.to_sym) do |t|\n      ENV['TARGET_HOST']\t= key\n      role_pattern\t\t= servers[key][:roles].join(',')\n      t.pattern = \"spec/{\" + role_pattern + \"}/*_spec.rb\"\n      t.fail_on_error = false\n    end\n  end\nend\n```\n\n```yaml:C\uff1a\\serverspec\\sample\\env\\servers.yml\nREMOTEHOST:\n :roles:\n  - sample\n```\n\n```yaml:C\uff1a\\serverspec\\sample\\env\\properties.development.yml\n:winrm_user: localuser1\n:winrm_pass: password\n```\n\n\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```ruby\nPS C:\\serverspec\\sample> rake\n\n##################################################\nHOST: REMOTEHOST : development\n##################################################\n\nCommand \"ipconfig /all | Select-String \u30ce\u30fc\u30c9\"\n  stdout\n    should match /\u30cf\u30a4\u30d6\u30ea\u30c3\u30c9/\n\nFile \"C:\\serverspec\\test.cmd\"\n  should be file\n  should contain \"\u3042\u3044\u3046\u3048\u304a\"\n  should not contain \"\u304b\u304d\u304f\u3051\u3053\"\n  content\n    should match /\u3042\u3044\u3046\u3048\u304a/\n  content\n    should not match /\u304b\u304d\u304f\u3051\u3053/\n\nFinished in 16.65 seconds (files took 1.3 seconds to load)\n6 examples, 0 failures\n\nPS C:\\serverspec\\sample>\n```\n\n\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\u3002\n\n\u4f46\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306eWinRM\u3092\u4f7f\u3046\u3088\u308a\u3082\u304b\u306a\u308a\u9045\u3044\u3067\u3059\u3002\n672\u30b1\u30fc\u30b9\uff08168\u30b1\u30fc\u30b9x4\u30b5\u30fc\u30d0\u30fc\uff09\u306e\u30c6\u30b9\u30c8\u6240\u8981\u6642\u9593\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n- \u30c7\u30d5\u30a9\u30eb\u30c8\u306eWinRM\uff1a427\u79d2\n- Invoke-Command\uff1a541\u79d2\n\n# \u3055\u3089\u306b\u4fbf\u5229\u306b\u4f7f\u3046\u305f\u3081\u306b\u306f\n\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u51e6\u7406\u901f\u5ea6\u5411\u4e0a\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u307e\u3057\u305f\u306e\u3067\u3001\u305c\u3072\u53c2\u7167\u4e0b\u3055\u3044\u3002\n\n* [Serverspec\u3067WinRM\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092C#\u3067\u4f5c\u6210\u3057\u305f\u30b3\u30de\u30f3\u30c9\u306b\u7f6e\u304d\u63db\u3048\u3066\u307f\u305f](http://qiita.com/drafts/627aa60b57171f67d295/edit)\n", "tags": ["serverspec", "Windows", "Ruby", "PowerShell"]}