{"context": " More than 1 year has passed since last update.\u77e2\u5370\u753b\u50cf\u3092\u56de\u8ee2\u3055\u305b\u3066\u3001\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u307b\u3046\u3092\u5411\u304f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306b\u5bfe\u3059\u308b\u77e2\u5370\u753b\u50cf\u306e\u56de\u8ee2\u89d2\u5ea6\u306e\u8a08\u7b97\u306f\u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3067\u6c42\u3081\u3066\u3044\u307e\u3059\u3002\n\nvector-dot.rb\nload_library :vecmath\n\n# X, Y \u306f\u6570\u5b66\u5ea7\u6a19\u7cfb(Y \u8ef8\u3001\u4e0a\u65b9\u5411\u3092\u6b63)\n\n# \u30d9\u30af\u30c8\u30eb a \u3068\u30d9\u30af\u30c8\u30eb b \u306e\u306a\u3059\u89d2\u5ea6(\u30e9\u30b8\u30a2\u30f3)\u3092\u6c42\u3081\u308b\ndef calc_angle(a, b)\n  cos_theta = a.dot(b) / (a.mag * b.mag)\n  theta = Math::acos(cos_theta)\n  theta\nend\n\ndef with_matrix\n  if block_given?\n    push_matrix\n    yield\n    pop_matrix\n  end\nend\n\ndef setup\n  size 400, 400\n\n  @vecs = [] # \u77e2\u5370\u753b\u50cf\u306e\u5ea7\u6a19\n  [\n    [40, 40],\n    [0, 80],\n    [60, -50],\n    [-90, 10],\n    [-50, -90],\n  ].each {|x, y|\n    @vecs << Vec2D.new(x, y)\n  }\n\n  @image = load_image('./arrow.png')\n  image_mode(CENTER)\nend\ndef draw\n  background 255\n\n  rect_mode(CENTER)\n\n  # \u30de\u30a6\u30b9\u4f4d\u7f6e\u306b\u5186\u3092\u63cf\u753b\n  ellipse(mouse_x, mouse_y, 10, 10)\n\n  translate(width/2, height/2) # \u539f\u70b9\u3092\u753b\u9762\u4e2d\u592e\u306b\u3059\u308b\n  line(-width, 0, width, 0)\n  line(0, -height, 0, height)\n\n  # \u30d9\u30af\u30c8\u30eb a (\u30de\u30a6\u30b9\u4f4d\u7f6e)\n  a = Vec2D.new(mouse_x - width/2, -(mouse_y - height/2))\n  @vecs.each {|b|\n    # \u30d9\u30af\u30c8\u30eb c \u3092\u6c42\u3081\u308b\n    c = a - b\n\n    rad = calc_angle(Vec2D.new(1, 0), c)\n    with_matrix do\n      translate(b.x, -b.y)\n      rotate(a.y >= b.y ? -(rad-90.radians) : (rad+90.radians))\n      image(@image, 0, 0)\n    end\n  }\nend\n\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002\n$ rp5 --nojruby run vector-dot.rb\n\n\u88dc\u8db3: --nojruby \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u306a\u3044\u5834\u5408\u306f\u3001load_image() \u306b\u306f\u7d76\u5bfe\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u53c2\u8003: https://github.com/jashkenas/ruby-processing/issues/83\n\n\u77e2\u5370\u753b\u50cf\u3092\u56de\u8ee2\u3055\u305b\u3066\u3001\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306e\u307b\u3046\u3092\u5411\u304f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n![rp5-arrow.gif](https://qiita-image-store.s3.amazonaws.com/0/1900/5faccadc-b58a-536e-5ff4-d1d7463cd525.gif \"rp5-arrow.gif\")\n\n\u30de\u30a6\u30b9\u30ab\u30fc\u30bd\u30eb\u306b\u5bfe\u3059\u308b\u77e2\u5370\u753b\u50cf\u306e\u56de\u8ee2\u89d2\u5ea6\u306e\u8a08\u7b97\u306f\u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3067\u6c42\u3081\u3066\u3044\u307e\u3059\u3002\n\n```ruby:vector-dot.rb\nload_library :vecmath\n\n# X, Y \u306f\u6570\u5b66\u5ea7\u6a19\u7cfb(Y \u8ef8\u3001\u4e0a\u65b9\u5411\u3092\u6b63)\n\n# \u30d9\u30af\u30c8\u30eb a \u3068\u30d9\u30af\u30c8\u30eb b \u306e\u306a\u3059\u89d2\u5ea6(\u30e9\u30b8\u30a2\u30f3)\u3092\u6c42\u3081\u308b\ndef calc_angle(a, b)\n  cos_theta = a.dot(b) / (a.mag * b.mag)\n  theta = Math::acos(cos_theta)\n  theta\nend\n\ndef with_matrix\n  if block_given?\n    push_matrix\n    yield\n    pop_matrix\n  end\nend\n\ndef setup\n  size 400, 400\n\n  @vecs = [] # \u77e2\u5370\u753b\u50cf\u306e\u5ea7\u6a19\n  [\n    [40, 40],\n    [0, 80],\n    [60, -50],\n    [-90, 10],\n    [-50, -90],\n  ].each {|x, y|\n    @vecs << Vec2D.new(x, y)\n  }\n\n  @image = load_image('./arrow.png')\n  image_mode(CENTER)\nend\ndef draw\n  background 255\n\n  rect_mode(CENTER)\n\n  # \u30de\u30a6\u30b9\u4f4d\u7f6e\u306b\u5186\u3092\u63cf\u753b\n  ellipse(mouse_x, mouse_y, 10, 10)\n\n  translate(width/2, height/2) # \u539f\u70b9\u3092\u753b\u9762\u4e2d\u592e\u306b\u3059\u308b\n  line(-width, 0, width, 0)\n  line(0, -height, 0, height)\n\n  # \u30d9\u30af\u30c8\u30eb a (\u30de\u30a6\u30b9\u4f4d\u7f6e)\n  a = Vec2D.new(mouse_x - width/2, -(mouse_y - height/2))\n  @vecs.each {|b|\n    # \u30d9\u30af\u30c8\u30eb c \u3092\u6c42\u3081\u308b\n    c = a - b\n\n    rad = calc_angle(Vec2D.new(1, 0), c)\n    with_matrix do\n      translate(b.x, -b.y)\n      rotate(a.y >= b.y ? -(rad-90.radians) : (rad+90.radians))\n      image(@image, 0, 0)\n    end\n  }\nend\n```\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u6b21\u306e\u3088\u3046\u306b\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\n$ rp5 --nojruby run vector-dot.rb\n```\n\n\u88dc\u8db3: `--nojruby` \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u306a\u3044\u5834\u5408\u306f\u3001`load_image()` \u306b\u306f\u7d76\u5bfe\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u53c2\u8003: https://github.com/jashkenas/ruby-processing/issues/83\n\n\n\n\n", "tags": ["processing", "Ruby-Processing"]}