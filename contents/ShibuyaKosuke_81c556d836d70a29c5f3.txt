{"tags": ["\u30ed\u30b0\u30a4\u30f3", "PHP"], "context": "\n\u57fa\u672c\u8a2d\u8a08\u3001\u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb\n\u30aa\u30fc\u30c8\u30ed\u30fc\u30c0\u30fc\n\u4f8b\u5916\u30fb\u30ed\u30b0\n\nPDO \u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3000SQL\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\n\n\u6c4e\u7528\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30fb\u30af\u30e9\u30b9\u4f5c\u6210\n\n\n\u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb\u306e\u4f5c\u6210\n\u30af\u30e9\u30b9\u306e\u7d99\u627f\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30fb\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\n\u30a2\u30ab\u30a6\u30f3\u30c8\u30ed\u30c3\u30af\u6a5f\u80fd\u306e\u5b9f\u88c5\n\u30e1\u30fc\u30eb\u9001\u4fe1\u6a5f\u80fd\u306e\u5b9f\u88c5\n\u30a2\u30ab\u30a6\u30f3\u30c8\u30ed\u30c3\u30af\u89e3\u9664\u6a5f\u80fd\u306e\u5b9f\u88c5\nCSRF\u5bfe\u7b56\n\nPDO \u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3000SQL\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306e\u3068\u304d\u306b\u5b9f\u88c5\u3057\u3066\u3044\u306a\u304b\u3063\u305f UserModel\u3000\u53ca\u3073 LoginController \u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3066\u3086\u304d\u307e\u3059\u3002\n\u524d\u56de\u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30fb\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5fc5\u8981\u306a\u5834\u6240\u306b\u3001\u8ffd\u8a18\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\nLoginController\n<?php\n\nnamespace MyApp\\controller;\n\nuse \\MyApp\\model\\UserModel;\nuse \\MyApp\\common\\Db;\nuse \\MyApp\\common\\InvalidErrorException;\nuse \\MyApp\\common\\ExceptionCode;\n\n/**\n * UserController\n */\nclass LoginController\n{\n\n    /**\n     * \u30ed\u30b0\u30a4\u30f3\u6210\u529f\u6642\u306e\u9077\u79fb\u5148\n     */\n    const TARGET_PAGE = '/dashboard.php';\n\n    /**\n     * \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u4fdd\u5b58\u3059\u308b\u540d\u524d\n     */\n    const LOGINUSER = 'loginUserModel';\n\n    /**\n     * \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\n     * @return void\n     */\n    static public function login()\n    {\n        // POST\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u304d\u306f\u3001\u51e6\u7406\u3092\u4e2d\u65ad\u3059\u308b\n        if (!filter_input_array(INPUT_POST)) {\n            return;\n        }\n\n        //\u30d5\u30a9\u30fc\u30e0\u304b\u3089\u306e\u5024\u3092\u53d7\u3051\u53d6\u308b\n        $email = filter_input(INPUT_POST, 'email');\n        $password = filter_input(INPUT_POST, 'password');\n\n        // \u3044\u305a\u308c\u304b\u304c\u7a7a\u6587\u5b57\u306e\u5834\u5408\u4f55\u3082\u3057\u306a\u3044\n        if ('' == $email || '' == $password) {\n            return;\n        }\n\n        //\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\n        Db::transaction();\n\n        //  email \u304b\u3089 \u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb \u3092\u53d6\u5f97\u3059\u308b\n        $objUserModel = new UserModel();\n        $objUserModel->getModelByEmail($email);\n\n        //  \u30ed\u30c3\u30af\u3055\u308c\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n        if ($objUserModel->isAccountLock()) {\n            Db::commit();\n            //  \u30ed\u30c3\u30af\u3055\u308c\u3066\u3044\u308b\n            throw new InvalidErrorException(ExceptionCode::INVALID_LOCK);\n        }\n\n        //\u30d1\u30b9\u30ef\u30fc\u30c9\u30c1\u30a7\u30c3\u30af\n        if (!$objUserModel->checkPassword($password)) {\n            //\u30ed\u30b0\u30a4\u30f3\u5931\u6557\n            $objUserModel->loginFailureIncrement();\n            Db::commit();\n            throw new InvalidErrorException(ExceptionCode::INVALID_LOGIN_FAIL);\n        }\n\n        //  \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u3092\u30ea\u30bb\u30c3\u30c8\n        $objUserModel->loginFailureReset();\n\n        //\u30b3\u30df\u30c3\u30c8\n        Db::commit();\n\n        //\u30bb\u30c3\u30b7\u30e7\u30f3\u56fa\u5b9a\u653b\u6483\u5bfe\u7b56\n        session_regenerate_id(true);\n\n        //\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u4fdd\u5b58\n        $_SESSION[self::LOGINUSER] = $objUserModel;\n\n        //\u30da\u30fc\u30b8\u9077\u79fb\n        header(sprintf(\"location: %s\", self::TARGET_PAGE));\n    }\n\n    /**\n     * \u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\n     * @return bool\n     */\n    static public function checkLogin()\n    {\n        $objUserModel = (isset($_SESSION[self::LOGINUSER])) ?\n            $_SESSION[self::LOGINUSER] :\n            null;\n\n        if (is_object($objUserModel) && 0 < $objUserModel->getUserId()) {\n            return;\n        }\n        header('Location: /');\n    }\n\n    /**\n     * \u30ed\u30b0\u30a4\u30f3\u4e2d\u306e\u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb\u3092\u53d6\u5f97\u3059\u308b\n     * @return UserModel\n     */\n    static public function getLoginUser()\n    {\n        return $_SESSION[self::LOGINUSER];\n    }\n\n    /**\n     * \u30ed\u30b0\u30a2\u30a6\u30c8\u3059\u308b\n     * @return void\n     */\n    static public function logout()\n    {\n        $_SESSION = [];\n        session_destroy();\n        header('Location: /');\n    }\n\n}\n\n\n\n\nExceptionCode.class.php\n<?php\n\nnamespace MyApp\\common;\n\n/**\n * ExceptionCode.class.php\n * @since 2015/07/25\n */\nclass ExceptionCode\n{\n\n    const INVALID_ERR = 1000;\n    const INVALID_LOCK = 1001;\n    const INVALID_LOGIN_FAIL = 1002;\n    const APPLICATION_ERR = 2000;\n    const SYSTEM_ERR = 3000;\n    const TEMPLATE_ERR = 3001;\n\n    private static $_arrMessage = array(\n        self::INVALID_ERR => '\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002'\n        , self::INVALID_LOCK => '\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u30ed\u30c3\u30af\u3055\u308c\u3066\u3044\u307e\u3059\u3002'\n        , self::INVALID_LOGIN_FAIL => '\u30ed\u30b0\u30a4\u30f3\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002'\n        , self::APPLICATION_ERR => '\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002'\n        , self::SYSTEM_ERR => '\u30b7\u30b9\u30c6\u30e0\u30fb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002'\n        , self::TEMPLATE_ERR => '\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8[%s]\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002'\n    );\n\n    static public function getMessage($intCode)\n    {\n        if (array_key_exists($intCode, self::$_arrMessage)) {\n            return self::$_arrMessage[$intCode];\n        }\n    }\n\n}\n\n\n\u57fa\u672c\u8a2d\u8a08\u3001\u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb \u3067\u4f5c\u6210\u3057\u305f\u3001UserModel.class.php \u306b\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002SQL\u304c\u66f8\u304b\u308c\u308b UserDao.class.php \u3082\u5408\u308f\u305b\u3066\u3001\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n\ngetModelByEmail($email) \nisAccountLock()\ncheckPassword($password)\nloginFailureIncrement()\nloginFailureReset()\nsave()\nsetPropaties()\n\n\nUserModel.class.php\n<?php\n\nnamespace MyApp\\model;\n\nuse MyApp\\dao\\UserDao;\n\n/**\n * UserModel\n */\nfinal class UserModel\n{\n\n    /**\n     * \u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u30ed\u30c3\u30af\u3059\u308b\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u56de\u6570\n     */\n    const LOCK_COUNT = 3;\n\n    /**\n     * \u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u30ed\u30c3\u30af\u3059\u308b\u6642\u9593\uff08\u5206\uff09\n     */\n    const LOCK_MINUTE = 15;\n\n    /**\n     * \u30e6\u30fc\u30b6\u30fcID\n     */\n    private $_userId = null;\n\n    /**\n     * \u30d1\u30b9\u30ef\u30fc\u30c9\uff08\u30cf\u30c3\u30b7\u30e5\uff09\n     */\n    private $_password = null;\n\n    /**\n     * \u8868\u793a\u540d\n     */\n    private $_displayName = null;\n\n    /**\n     * \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\n     */\n    private $_email = null;\n\n    /**\n     * \u30c8\u30fc\u30af\u30f3\n     */\n    private $_token = null;\n\n    /**\n     * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u56de\u6570\n     */\n    private $_loginFailureCount = null;\n\n    /**\n     * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u65e5\u6642\n     */\n    private $_loginFailureDatetime = null;\n\n    /**\n     * \u524a\u9664\u30d5\u30e9\u30b0\n     */\n    private $_deleteFlag = null;\n\n    /**\n     * \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u304b\u3089\u30e6\u30fc\u30b6\u30fc\u3092\u691c\u7d22\u3059\u308b\n     * @param string $strEmail\n     * @return \\MyApp\\model\\UserModel\n     */\n    public function getModelByEmail($strEmail)\n    {\n        $dao = UserDao::getDaoFromEmail($strEmail);\n        return (isset($dao[0])) ? $this->setProperty(reset($dao)) : null;\n    }\n\n    /**\n     * \u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e00\u81f4\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n     * @param type $password\n     * @return bool\n     */\n    public function checkPassword($password)\n    {\n        $hash = $this->getPassword();\n        return password_verify($password, $hash);\n    }\n\n    /**\n     * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\n     * \uff11\u4ee5\u4e0a\u306e\u3068\u304d\u306b\uff10\u306b\u3059\u308b\n     * @return bool\n     */\n    public function loginFailureReset()\n    {\n        $count = $this->getLoginFailureCount();\n        if (0 < $count) {\n            $this->setLoginFailureCount(0)\n                ->setLoginFailureDatetime(null);\n            return $this->save();\n        }\n        //\u5909\u66f4\u306e\u5fc5\u8981\u304c\u306a\u3044\n        return true;\n    }\n\n    /**\n     * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\n     * \u6307\u5b9a\u56de\u6570\uff08self::LOCK_COUNT\uff09\u306b\u6e80\u305f\u306a\u3044\u3068\u304d\u306e\u307f\uff0b\uff11\n     * @return bool\n     */\n    public function loginFailureIncrement()\n    {\n        $count = $this->getLoginFailureCount();\n        if (self::LOCK_COUNT > $count) {\n            $now = (new \\DateTime())->format('Y-m-d H:i:s');\n            $this->setLoginFailureCount(1 + $count)\n                ->setLoginFailureDatetime($now);\n            return $this->save();\n        }\n\n        //\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u304c\u8a2d\u5b9a\u4ee5\u4e0a\u306e\u3068\u304d\n        return true;\n    }\n\n    /**\n     * \u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u30ed\u30c3\u30af\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n     * @return bool \u30ed\u30c3\u30af\u3055\u308c\u3066\u3044\u305f\u3089 true\n     */\n    public function isAccountLock()\n    {\n        $count = $this->getLoginFailureCount();\n        $datetime = $this->getLoginFailureDatetime();\n\n        $lastFailureDatetime = new \\DateTime($datetime);\n        $interval = new \\DateInterval(\n            sprintf('PT%dM', self::LOCK_MINUTE)\n        );\n        $lastFailureDatetime->add($interval);\n\n        //\u8a2d\u5b9a\u6642\u9593\u4ee5\u5185\u3067\u3001\u304b\u3064\u8a2d\u5b9a\u56de\u6570\u4ee5\u4e0a\u306e\u5931\u6557\u3092\u8a18\u9332\u3057\u3066\u3044\u308b\u3068\u304d\n        if ($lastFailureDatetime > new \\DateTime() && self::LOCK_COUNT <= $count) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30bb\u30c3\u30c8\u3059\u308b\n     * @param array $arrDao\n     * @return \\MyApp\\model\\UserModel\n     */\n    private function setProperty(array $arrDao)\n    {\n        $this->setUserId($arrDao['userId'])\n            ->setDisplayName($arrDao['displayName'])\n            ->setEmail($arrDao['email'])\n            ->setPassword($arrDao['password'])\n            ->setToken($arrDao['token'])\n            ->setLoginFailureCount($arrDao['loginFailureCount'])\n            ->setLoginFailureDatetime($arrDao['loginFailureDatetime'])\n            ->setDeleteFlag($arrDao['deleteFlag']);\n        return $this;\n    }\n\n    /**\n     * \u66f4\u65b0\u3059\u308b\n     * @return bool\n     */\n    public function save()\n    {\n        return UserDao::save($this);\n    }\n\n    /**\n     * \u65b0\u898f\u4f5c\u6210\u3059\u308b\n     * @return bool\n     */\n    public function create()\n    {\n        return UserDao::insert($this);\n    }\n\n    /**\n     * \u30e6\u30fc\u30b6\u30fcID\u3092\u8a2d\u5b9a\u3059\u308b\n     * @param int $userId\n     * @return \\MyApp\\model\\UserModel\n     */\n    public function setUserId($userId)\n    {\n        $this->_userId = $userId;\n        return $this;\n    }\n\n    /**\n     * \u30d1\u30b9\u30ef\u30fc\u30c9\uff08\u30cf\u30c3\u30b7\u30e5\uff09\u3092\u8a2d\u5b9a\u3059\u308b\n     * @param string $password\n     * @return \\MyApp\\model\\UserModel\n     */\n    public function setPassword($password)\n    {\n        $this->_password = $password;\n        return $this;\n    }\n\n    /**\n     * \u8868\u793a\u540d\u3092\u8a2d\u5b9a\u3059\u308b\n     * @param string $displayName\n     * @return \\MyApp\\model\\UserModel\n     */\n    public function setDisplayName($displayName)\n    {\n        $this->_displayName = $displayName;\n        return $this;\n    }\n\n    /**\n     * \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\n     * @param string $email\n     * @return \\MyApp\\model\\UserModel\n     */\n    public function setEmail($email)\n    {\n        $this->_email = $email;\n        return $this;\n    }\n\n    /**\n     * \u30c8\u30fc\u30af\u30f3\u3092\u8a2d\u5b9a\u3059\u308b\n     * @param string $token\n     * @return \\MyApp\\model\\UserModel\n     */\n    public function setToken($token)\n    {\n        $this->_token = $token;\n        return $this;\n    }\n\n    /**\n     * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u56de\u6570\u3092\u8a2d\u5b9a\u3059\u308b\n     * @param int $loginFailureCount\n     * @return \\MyApp\\model\\UserModel\n     */\n    public function setLoginFailureCount($loginFailureCount)\n    {\n        $this->_loginFailureCount = $loginFailureCount;\n        return $this;\n    }\n\n    /**\n     * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u65e5\u6642\u3092\u8a2d\u5b9a\u3059\u308b\n     * @param string $loginFailureDatetime\n     * @return \\MyApp\\model\\UserModel\n     */\n    public function setLoginFailureDatetime($loginFailureDatetime)\n    {\n        $this->_loginFailureDatetime = $loginFailureDatetime;\n        return $this;\n    }\n\n    /**\n     * \u524a\u9664\u30d5\u30e9\u30b0\u3092\u8a2d\u5b9a\u3059\u308b\n     * @param bool $deleteFlag\n     * @return \\MyApp\\model\\UserModel\n     */\n    public function setDeleteFlag($deleteFlag)\n    {\n        $this->_deleteFlag = $deleteFlag;\n        return $this;\n    }\n\n    /**\n     * \u30e6\u30fc\u30b6\u30fcID\u3092\u53d6\u5f97\u3059\u308b\n     * @return int\n     */\n    public function getUserId()\n    {\n        return $this->_userId;\n    }\n\n    /**\n     * \u30d1\u30b9\u30ef\u30fc\u30c9\uff08\u30cf\u30c3\u30b7\u30e5\uff09\u3092\u53d6\u5f97\u3059\u308b\n     * @return string\n     */\n    public function getPassword()\n    {\n        return $this->_password;\n    }\n\n    /**\n     * \u8868\u793a\u540d\u3092\u53d6\u5f97\u3059\u308b\n     * @return string\n     */\n    public function getDisplayName()\n    {\n        return $this->_displayName;\n    }\n\n    /**\n     * \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b\n     * @return string\n     */\n    public function getEmail()\n    {\n        return $this->_email;\n    }\n\n    /**\n     * \u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\n     * @return string\n     */\n    public function getToken()\n    {\n        return $this->_token;\n    }\n\n    /**\n     * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u56de\u6570\u3092\u53d6\u5f97\u3059\u308b\n     * @return int\n     */\n    public function getLoginFailureCount()\n    {\n        return $this->_loginFailureCount;\n    }\n\n    /**\n     * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u65e5\u6642\u3092\u53d6\u5f97\u3059\u308b\n     * @return string\n     */\n    public function getLoginFailureDatetime()\n    {\n        return $this->_loginFailureDatetime;\n    }\n\n    /**\n     * \u524a\u9664\u30d5\u30e9\u30b0\u3092\u53d6\u5f97\u3059\u308b\n     * @return bool\n     */\n    public function getDeleteFlag()\n    {\n        return $this->_deleteFlag;\n    }\n\n}\n\n\n\n\nUserDao.class.php\n<?php\n\nnamespace MyApp\\dao;\n\nuse MyApp\\common\\Db;\nuse MyApp\\model\\UserModel;\n\n/**\n * UserDao.class.php\n */\nclass UserDao\n{\n\n    /**\n     * \u30e6\u30fc\u30b6\u30fcID\u304b\u3089\u914d\u5217\u3092\u53d6\u5f97\u3059\u308b\n     * @param type $intUserId\n     * @return array\n     */\n    public static function getDaoFromUserId($intUserId, $intDeleteFlag = null)\n    {\n        $sql = \"SELECT \";\n        $sql .= \"`userId`\";\n        $sql .= \", `password`\";\n        $sql .= \", `displayName`\";\n        $sql .= \", `email`\";\n        $sql .= \", `token`\";\n        $sql .= \", `loginFailureCount`\";\n        $sql .= \", `loginFailureDatetime`\";\n        $sql .= \", `deleteFlag` \";\n        $sql .= \"FROM `tbl_user` \";\n        $sql .= \"WHERE `userId` = :userId \";\n\n        $arr = array();\n        $arr[':userId'] = $intUserId;\n        if (!is_null($intDeleteFlag) && in_array($intDeleteFlag, array(0, 1))) {\n            $sql .= \"AND `deleteFlag` = :deleteFlag \";\n            $arr[':deleteFlag'] = $intDeleteFlag;\n        }\n\n        return Db::select($sql, $arr);\n    }\n\n    /**\n     * \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u304b\u3089\u914d\u5217\u3092\u53d6\u5f97\u3059\u308b\n     * @param type $strEmail\n     * @return array\n     */\n    public static function getDaoFromEmail($strEmail, $intDeleteFlag = null)\n    {\n        $sql = \"SELECT \";\n        $sql .= \"`userId`\";\n        $sql .= \", `password`\";\n        $sql .= \", `displayName`\";\n        $sql .= \", `email`\";\n        $sql .= \", `token`\";\n        $sql .= \", `loginFailureCount`\";\n        $sql .= \", `loginFailureDatetime`\";\n        $sql .= \", `deleteFlag` \";\n        $sql .= \"FROM `tbl_user` \";\n        $sql .= \"WHERE `email` = :email \";\n\n        $arr = array();\n        $arr[':email'] = $strEmail;\n        if (!is_null($intDeleteFlag) && in_array($intDeleteFlag, array(0, 1))) {\n            $sql .= \"AND `deleteFlag` = :deleteFlag \";\n            $arr[':deleteFlag'] = $intDeleteFlag;\n        }\n\n        return Db::select($sql, $arr);\n    }\n\n    /**\n     * \u66f4\u65b0\u3059\u308b\n     * @param UserModel $objUserModel\n     * @return bool\n     */\n    public static function save(UserModel $objUserModel)\n    {\n        $sql = \"UPDATE \";\n        $sql .= \"`tbl_user` \";\n        $sql .= \"SET \";\n        $sql .= \"`password` = :password \";\n        $sql .= \", `displayName` = :displayName \";\n        $sql .= \", `email` = :email \";\n        $sql .= \", `token` = :token \";\n        $sql .= \", `loginFailureCount` = :loginFailureCount \";\n        $sql .= \", `loginFailureDatetime` = :loginFailureDatetime \";\n        $sql .= \", `deleteFlag` = :deleteFlag \";\n        $sql .= \"WHERE `userId` = :userId \";\n\n        $arr = array();\n        $arr[':userId'] = $objUserModel->getUserId();\n        $arr[':password'] = $objUserModel->getPassword();\n        $arr[':displayName'] = $objUserModel->getDisplayName();\n        $arr[':email'] = $objUserModel->getEmail();\n        $arr[':token'] = $objUserModel->getToken();\n        $arr[':loginFailureCount'] = $objUserModel->getLoginFailureCount();\n        $arr[':loginFailureDatetime'] = $objUserModel->getLoginFailureDatetime();\n        $arr[':deleteFlag'] = $objUserModel->getDeleteFlag();\n\n        return Db::update($sql, $arr);\n    }\n\n    /**\n     * \u65b0\u898f\u4f5c\u6210\u3059\u308b\n     * @return int\n     */\n    public static function insert(UserModel $objUserModel)\n    {\n        $sql = \"INSERT INTO \";\n        $sql .= \"`tbl_user` \";\n        $sql .= \"(\";\n        $sql .= \"`userId`\";\n        $sql .= \", `password`\";\n        $sql .= \", `displayName`\";\n        $sql .= \", `email`\";\n        $sql .= \", `token`\";\n        $sql .= \", `loginFailureCount`\";\n        $sql .= \", `loginFailureDatetime`\";\n        $sql .= \", `deleteFlag`\";\n        $sql .= \") VALUES (\";\n        $sql .= \"NULL \";\n        $sql .= \", :password \";\n        $sql .= \", :displayName \";\n        $sql .= \", :email \";\n        $sql .= \", :token \";\n        $sql .= \", :loginFailureCount \";\n        $sql .= \", :loginFailureDatetime \";\n        $sql .= \", :deleteFlag \";\n        $sql .= \")\";\n\n        $arr = array();\n        $arr[':password'] = $objUserModel->getPassword();\n        $arr[':displayName'] = $objUserModel->getDisplayName();\n        $arr[':email'] = $objUserModel->getEmail();\n        $arr[':token'] = $objUserModel->getToken();\n        $arr[':loginFailureCount'] = $objUserModel->getLoginFailureCount();\n        $arr[':loginFailureDatetime'] = $objUserModel->getLoginFailureDatetime();\n        $arr[':deleteFlag'] = $objUserModel->getDeleteFlag();\n\n        return Db::insert($sql, $arr);\n    }\n\n}\n\n\n\n1. [\u57fa\u672c\u8a2d\u8a08\u3001\u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb](http://qiita.com/ShibuyaKosuke/items/f114ffccf441edb2b745)\n2. [\u30aa\u30fc\u30c8\u30ed\u30fc\u30c0\u30fc](http://qiita.com/ShibuyaKosuke/items/6109810464a7293293bd)\n3. [\u4f8b\u5916\u30fb\u30ed\u30b0](http://qiita.com/ShibuyaKosuke/items/88b1305a4ff0c5f3e728)\n4. [PDO \u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3000SQL\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3](http://qiita.com/ShibuyaKosuke/items/094df7f399912ae7df56)\n\t* [\u6c4e\u7528\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30fb\u30af\u30e9\u30b9\u4f5c\u6210](http://qiita.com/ShibuyaKosuke/items/8502492ac024362b528d)\n\n5. [\u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb\u306e\u4f5c\u6210](http://qiita.com/ShibuyaKosuke/items/81c556d836d70a29c5f3)\n6. [\u30af\u30e9\u30b9\u306e\u7d99\u627f](http://qiita.com/ShibuyaKosuke/items/490ffa6a92670cf6c644)\n7. [\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30fb\u30af\u30e9\u30b9\u306e\u5b9f\u88c5](http://qiita.com/ShibuyaKosuke/items/803dc58a23601118942e)\n8. [\u30a2\u30ab\u30a6\u30f3\u30c8\u30ed\u30c3\u30af\u6a5f\u80fd\u306e\u5b9f\u88c5](http://qiita.com/ShibuyaKosuke/items/e890becdb8193d3def05)\n9. [\u30e1\u30fc\u30eb\u9001\u4fe1\u6a5f\u80fd\u306e\u5b9f\u88c5](http://qiita.com/ShibuyaKosuke/items/78c8673782ebbf51584b)\n10. [\u30a2\u30ab\u30a6\u30f3\u30c8\u30ed\u30c3\u30af\u89e3\u9664\u6a5f\u80fd\u306e\u5b9f\u88c5](http://qiita.com/ShibuyaKosuke/items/ee4b1896071eeca37628)\n11. [CSRF\u5bfe\u7b56](http://qiita.com/ShibuyaKosuke/items/8100e304e4447e44e98c)\n\n[PDO \u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3000SQL\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3](http://qiita.com/ShibuyaKosuke/items/094df7f399912ae7df56)\u306e\u3068\u304d\u306b\u5b9f\u88c5\u3057\u3066\u3044\u306a\u304b\u3063\u305f `UserModel`\u3000\u53ca\u3073 `LoginController` \u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3066\u3086\u304d\u307e\u3059\u3002\n\n\u524d\u56de\u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30fb\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5fc5\u8981\u306a\u5834\u6240\u306b\u3001\u8ffd\u8a18\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n```php:LoginController\n<?php\n\nnamespace MyApp\\controller;\n\nuse \\MyApp\\model\\UserModel;\nuse \\MyApp\\common\\Db;\nuse \\MyApp\\common\\InvalidErrorException;\nuse \\MyApp\\common\\ExceptionCode;\n\n/**\n * UserController\n */\nclass LoginController\n{\n\n\t/**\n\t * \u30ed\u30b0\u30a4\u30f3\u6210\u529f\u6642\u306e\u9077\u79fb\u5148\n\t */\n\tconst TARGET_PAGE = '/dashboard.php';\n\n\t/**\n\t * \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u4fdd\u5b58\u3059\u308b\u540d\u524d\n\t */\n\tconst LOGINUSER = 'loginUserModel';\n\n\t/**\n\t * \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\n\t * @return void\n\t */\n\tstatic public function login()\n\t{\n\t\t// POST\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u304d\u306f\u3001\u51e6\u7406\u3092\u4e2d\u65ad\u3059\u308b\n\t\tif (!filter_input_array(INPUT_POST)) {\n\t\t\treturn;\n\t\t}\n\n\t\t//\u30d5\u30a9\u30fc\u30e0\u304b\u3089\u306e\u5024\u3092\u53d7\u3051\u53d6\u308b\n\t\t$email = filter_input(INPUT_POST, 'email');\n\t\t$password = filter_input(INPUT_POST, 'password');\n\n\t\t// \u3044\u305a\u308c\u304b\u304c\u7a7a\u6587\u5b57\u306e\u5834\u5408\u4f55\u3082\u3057\u306a\u3044\n\t\tif ('' == $email || '' == $password) {\n\t\t\treturn;\n\t\t}\n\n\t\t//\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\n\t\tDb::transaction();\n\n\t\t//\temail \u304b\u3089 \u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb \u3092\u53d6\u5f97\u3059\u308b\n\t\t$objUserModel = new UserModel();\n\t\t$objUserModel->getModelByEmail($email);\n\n\t\t//\t\u30ed\u30c3\u30af\u3055\u308c\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n\t\tif ($objUserModel->isAccountLock()) {\n\t\t\tDb::commit();\n\t\t\t//\t\u30ed\u30c3\u30af\u3055\u308c\u3066\u3044\u308b\n\t\t\tthrow new InvalidErrorException(ExceptionCode::INVALID_LOCK);\n\t\t}\n\n\t\t//\u30d1\u30b9\u30ef\u30fc\u30c9\u30c1\u30a7\u30c3\u30af\n\t\tif (!$objUserModel->checkPassword($password)) {\n\t\t\t//\u30ed\u30b0\u30a4\u30f3\u5931\u6557\n\t\t\t$objUserModel->loginFailureIncrement();\n\t\t\tDb::commit();\n\t\t\tthrow new InvalidErrorException(ExceptionCode::INVALID_LOGIN_FAIL);\n\t\t}\n\n\t\t//\t\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u3092\u30ea\u30bb\u30c3\u30c8\n\t\t$objUserModel->loginFailureReset();\n\n\t\t//\u30b3\u30df\u30c3\u30c8\n\t\tDb::commit();\n\n\t\t//\u30bb\u30c3\u30b7\u30e7\u30f3\u56fa\u5b9a\u653b\u6483\u5bfe\u7b56\n\t\tsession_regenerate_id(true);\n\n\t\t//\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u4fdd\u5b58\n\t\t$_SESSION[self::LOGINUSER] = $objUserModel;\n\n\t\t//\u30da\u30fc\u30b8\u9077\u79fb\n\t\theader(sprintf(\"location: %s\", self::TARGET_PAGE));\n\t}\n\n\t/**\n\t * \u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\n\t * @return bool\n\t */\n\tstatic public function checkLogin()\n\t{\n\t\t$objUserModel = (isset($_SESSION[self::LOGINUSER])) ?\n\t\t\t$_SESSION[self::LOGINUSER] :\n\t\t\tnull;\n\n\t\tif (is_object($objUserModel) && 0 < $objUserModel->getUserId()) {\n\t\t\treturn;\n\t\t}\n\t\theader('Location: /');\n\t}\n\n\t/**\n\t * \u30ed\u30b0\u30a4\u30f3\u4e2d\u306e\u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb\u3092\u53d6\u5f97\u3059\u308b\n\t * @return UserModel\n\t */\n\tstatic public function getLoginUser()\n\t{\n\t\treturn $_SESSION[self::LOGINUSER];\n\t}\n\n\t/**\n\t * \u30ed\u30b0\u30a2\u30a6\u30c8\u3059\u308b\n\t * @return void\n\t */\n\tstatic public function logout()\n\t{\n\t\t$_SESSION = [];\n\t\tsession_destroy();\n\t\theader('Location: /');\n\t}\n\n}\n\n```\n\n```php:ExceptionCode.class.php\n<?php\n\nnamespace MyApp\\common;\n\n/**\n * ExceptionCode.class.php\n * @since 2015/07/25\n */\nclass ExceptionCode\n{\n\n\tconst INVALID_ERR = 1000;\n\tconst INVALID_LOCK = 1001;\n\tconst INVALID_LOGIN_FAIL = 1002;\n\tconst APPLICATION_ERR = 2000;\n\tconst SYSTEM_ERR = 3000;\n\tconst TEMPLATE_ERR = 3001;\n\n\tprivate static $_arrMessage = array(\n\t\tself::INVALID_ERR => '\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002'\n\t\t, self::INVALID_LOCK => '\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u30ed\u30c3\u30af\u3055\u308c\u3066\u3044\u307e\u3059\u3002'\n\t\t, self::INVALID_LOGIN_FAIL => '\u30ed\u30b0\u30a4\u30f3\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002'\n\t\t, self::APPLICATION_ERR => '\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002'\n\t\t, self::SYSTEM_ERR => '\u30b7\u30b9\u30c6\u30e0\u30fb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002'\n\t\t, self::TEMPLATE_ERR => '\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8[%s]\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3002'\n\t);\n\n\tstatic public function getMessage($intCode)\n\t{\n\t\tif (array_key_exists($intCode, self::$_arrMessage)) {\n\t\t\treturn self::$_arrMessage[$intCode];\n\t\t}\n\t}\n\n}\n```\n\n\n[\u57fa\u672c\u8a2d\u8a08\u3001\u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb](http://qiita.com/ShibuyaKosuke/items/f114ffccf441edb2b745) \u3067\u4f5c\u6210\u3057\u305f\u3001`UserModel.class.php` \u306b\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002SQL\u304c\u66f8\u304b\u308c\u308b `UserDao.class.php` \u3082\u5408\u308f\u305b\u3066\u3001\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n* `getModelByEmail($email)` \n* `isAccountLock()`\n* `checkPassword($password)`\n* `loginFailureIncrement()`\n* `loginFailureReset()`\n* `save()`\n* `setPropaties()`\n\n```php:UserModel.class.php\n<?php\n\nnamespace MyApp\\model;\n\nuse MyApp\\dao\\UserDao;\n\n/**\n * UserModel\n */\nfinal class UserModel\n{\n\n\t/**\n\t * \u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u30ed\u30c3\u30af\u3059\u308b\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u56de\u6570\n\t */\n\tconst LOCK_COUNT = 3;\n\n\t/**\n\t * \u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u30ed\u30c3\u30af\u3059\u308b\u6642\u9593\uff08\u5206\uff09\n\t */\n\tconst LOCK_MINUTE = 15;\n\n\t/**\n\t * \u30e6\u30fc\u30b6\u30fcID\n\t */\n\tprivate $_userId = null;\n\n\t/**\n\t * \u30d1\u30b9\u30ef\u30fc\u30c9\uff08\u30cf\u30c3\u30b7\u30e5\uff09\n\t */\n\tprivate $_password = null;\n\n\t/**\n\t * \u8868\u793a\u540d\n\t */\n\tprivate $_displayName = null;\n\n\t/**\n\t * \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\n\t */\n\tprivate $_email = null;\n\n\t/**\n\t * \u30c8\u30fc\u30af\u30f3\n\t */\n\tprivate $_token = null;\n\n\t/**\n\t * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u56de\u6570\n\t */\n\tprivate $_loginFailureCount = null;\n\n\t/**\n\t * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u65e5\u6642\n\t */\n\tprivate $_loginFailureDatetime = null;\n\n\t/**\n\t * \u524a\u9664\u30d5\u30e9\u30b0\n\t */\n\tprivate $_deleteFlag = null;\n\n\t/**\n\t * \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u304b\u3089\u30e6\u30fc\u30b6\u30fc\u3092\u691c\u7d22\u3059\u308b\n\t * @param string $strEmail\n\t * @return \\MyApp\\model\\UserModel\n\t */\n\tpublic function getModelByEmail($strEmail)\n\t{\n\t\t$dao = UserDao::getDaoFromEmail($strEmail);\n\t\treturn (isset($dao[0])) ? $this->setProperty(reset($dao)) : null;\n\t}\n\n\t/**\n\t * \u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u4e00\u81f4\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n\t * @param type $password\n\t * @return bool\n\t */\n\tpublic function checkPassword($password)\n\t{\n\t\t$hash = $this->getPassword();\n\t\treturn password_verify($password, $hash);\n\t}\n\n\t/**\n\t * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\n\t * \uff11\u4ee5\u4e0a\u306e\u3068\u304d\u306b\uff10\u306b\u3059\u308b\n\t * @return bool\n\t */\n\tpublic function loginFailureReset()\n\t{\n\t\t$count = $this->getLoginFailureCount();\n\t\tif (0 < $count) {\n\t\t\t$this->setLoginFailureCount(0)\n\t\t\t\t->setLoginFailureDatetime(null);\n\t\t\treturn $this->save();\n\t\t}\n\t\t//\u5909\u66f4\u306e\u5fc5\u8981\u304c\u306a\u3044\n\t\treturn true;\n\t}\n\n\t/**\n\t * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\n\t * \u6307\u5b9a\u56de\u6570\uff08self::LOCK_COUNT\uff09\u306b\u6e80\u305f\u306a\u3044\u3068\u304d\u306e\u307f\uff0b\uff11\n\t * @return bool\n\t */\n\tpublic function loginFailureIncrement()\n\t{\n\t\t$count = $this->getLoginFailureCount();\n\t\tif (self::LOCK_COUNT > $count) {\n\t\t\t$now = (new \\DateTime())->format('Y-m-d H:i:s');\n\t\t\t$this->setLoginFailureCount(1 + $count)\n\t\t\t\t->setLoginFailureDatetime($now);\n\t\t\treturn $this->save();\n\t\t}\n\n\t\t//\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u304c\u8a2d\u5b9a\u4ee5\u4e0a\u306e\u3068\u304d\n\t\treturn true;\n\t}\n\n\t/**\n\t * \u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u30ed\u30c3\u30af\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n\t * @return bool \u30ed\u30c3\u30af\u3055\u308c\u3066\u3044\u305f\u3089 true\n\t */\n\tpublic function isAccountLock()\n\t{\n\t\t$count = $this->getLoginFailureCount();\n\t\t$datetime = $this->getLoginFailureDatetime();\n\n\t\t$lastFailureDatetime = new \\DateTime($datetime);\n\t\t$interval = new \\DateInterval(\n\t\t\tsprintf('PT%dM', self::LOCK_MINUTE)\n\t\t);\n\t\t$lastFailureDatetime->add($interval);\n\n\t\t//\u8a2d\u5b9a\u6642\u9593\u4ee5\u5185\u3067\u3001\u304b\u3064\u8a2d\u5b9a\u56de\u6570\u4ee5\u4e0a\u306e\u5931\u6557\u3092\u8a18\u9332\u3057\u3066\u3044\u308b\u3068\u304d\n\t\tif ($lastFailureDatetime > new \\DateTime() && self::LOCK_COUNT <= $count) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30bb\u30c3\u30c8\u3059\u308b\n\t * @param array $arrDao\n\t * @return \\MyApp\\model\\UserModel\n\t */\n\tprivate function setProperty(array $arrDao)\n\t{\n\t\t$this->setUserId($arrDao['userId'])\n\t\t\t->setDisplayName($arrDao['displayName'])\n\t\t\t->setEmail($arrDao['email'])\n\t\t\t->setPassword($arrDao['password'])\n\t\t\t->setToken($arrDao['token'])\n\t\t\t->setLoginFailureCount($arrDao['loginFailureCount'])\n\t\t\t->setLoginFailureDatetime($arrDao['loginFailureDatetime'])\n\t\t\t->setDeleteFlag($arrDao['deleteFlag']);\n\t\treturn $this;\n\t}\n\n\t/**\n\t * \u66f4\u65b0\u3059\u308b\n\t * @return bool\n\t */\n\tpublic function save()\n\t{\n\t\treturn UserDao::save($this);\n\t}\n\n\t/**\n\t * \u65b0\u898f\u4f5c\u6210\u3059\u308b\n\t * @return bool\n\t */\n\tpublic function create()\n\t{\n\t\treturn UserDao::insert($this);\n\t}\n\n\t/**\n\t * \u30e6\u30fc\u30b6\u30fcID\u3092\u8a2d\u5b9a\u3059\u308b\n\t * @param int $userId\n\t * @return \\MyApp\\model\\UserModel\n\t */\n\tpublic function setUserId($userId)\n\t{\n\t\t$this->_userId = $userId;\n\t\treturn $this;\n\t}\n\n\t/**\n\t * \u30d1\u30b9\u30ef\u30fc\u30c9\uff08\u30cf\u30c3\u30b7\u30e5\uff09\u3092\u8a2d\u5b9a\u3059\u308b\n\t * @param string $password\n\t * @return \\MyApp\\model\\UserModel\n\t */\n\tpublic function setPassword($password)\n\t{\n\t\t$this->_password = $password;\n\t\treturn $this;\n\t}\n\n\t/**\n\t * \u8868\u793a\u540d\u3092\u8a2d\u5b9a\u3059\u308b\n\t * @param string $displayName\n\t * @return \\MyApp\\model\\UserModel\n\t */\n\tpublic function setDisplayName($displayName)\n\t{\n\t\t$this->_displayName = $displayName;\n\t\treturn $this;\n\t}\n\n\t/**\n\t * \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u8a2d\u5b9a\u3059\u308b\n\t * @param string $email\n\t * @return \\MyApp\\model\\UserModel\n\t */\n\tpublic function setEmail($email)\n\t{\n\t\t$this->_email = $email;\n\t\treturn $this;\n\t}\n\n\t/**\n\t * \u30c8\u30fc\u30af\u30f3\u3092\u8a2d\u5b9a\u3059\u308b\n\t * @param string $token\n\t * @return \\MyApp\\model\\UserModel\n\t */\n\tpublic function setToken($token)\n\t{\n\t\t$this->_token = $token;\n\t\treturn $this;\n\t}\n\n\t/**\n\t * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u56de\u6570\u3092\u8a2d\u5b9a\u3059\u308b\n\t * @param int $loginFailureCount\n\t * @return \\MyApp\\model\\UserModel\n\t */\n\tpublic function setLoginFailureCount($loginFailureCount)\n\t{\n\t\t$this->_loginFailureCount = $loginFailureCount;\n\t\treturn $this;\n\t}\n\n\t/**\n\t * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u65e5\u6642\u3092\u8a2d\u5b9a\u3059\u308b\n\t * @param string $loginFailureDatetime\n\t * @return \\MyApp\\model\\UserModel\n\t */\n\tpublic function setLoginFailureDatetime($loginFailureDatetime)\n\t{\n\t\t$this->_loginFailureDatetime = $loginFailureDatetime;\n\t\treturn $this;\n\t}\n\n\t/**\n\t * \u524a\u9664\u30d5\u30e9\u30b0\u3092\u8a2d\u5b9a\u3059\u308b\n\t * @param bool $deleteFlag\n\t * @return \\MyApp\\model\\UserModel\n\t */\n\tpublic function setDeleteFlag($deleteFlag)\n\t{\n\t\t$this->_deleteFlag = $deleteFlag;\n\t\treturn $this;\n\t}\n\n\t/**\n\t * \u30e6\u30fc\u30b6\u30fcID\u3092\u53d6\u5f97\u3059\u308b\n\t * @return int\n\t */\n\tpublic function getUserId()\n\t{\n\t\treturn $this->_userId;\n\t}\n\n\t/**\n\t * \u30d1\u30b9\u30ef\u30fc\u30c9\uff08\u30cf\u30c3\u30b7\u30e5\uff09\u3092\u53d6\u5f97\u3059\u308b\n\t * @return string\n\t */\n\tpublic function getPassword()\n\t{\n\t\treturn $this->_password;\n\t}\n\n\t/**\n\t * \u8868\u793a\u540d\u3092\u53d6\u5f97\u3059\u308b\n\t * @return string\n\t */\n\tpublic function getDisplayName()\n\t{\n\t\treturn $this->_displayName;\n\t}\n\n\t/**\n\t * \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b\n\t * @return string\n\t */\n\tpublic function getEmail()\n\t{\n\t\treturn $this->_email;\n\t}\n\n\t/**\n\t * \u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\n\t * @return string\n\t */\n\tpublic function getToken()\n\t{\n\t\treturn $this->_token;\n\t}\n\n\t/**\n\t * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u56de\u6570\u3092\u53d6\u5f97\u3059\u308b\n\t * @return int\n\t */\n\tpublic function getLoginFailureCount()\n\t{\n\t\treturn $this->_loginFailureCount;\n\t}\n\n\t/**\n\t * \u30ed\u30b0\u30a4\u30f3\u5931\u6557\u65e5\u6642\u3092\u53d6\u5f97\u3059\u308b\n\t * @return string\n\t */\n\tpublic function getLoginFailureDatetime()\n\t{\n\t\treturn $this->_loginFailureDatetime;\n\t}\n\n\t/**\n\t * \u524a\u9664\u30d5\u30e9\u30b0\u3092\u53d6\u5f97\u3059\u308b\n\t * @return bool\n\t */\n\tpublic function getDeleteFlag()\n\t{\n\t\treturn $this->_deleteFlag;\n\t}\n\n}\n\n```\n\n```php:UserDao.class.php\n<?php\n\nnamespace MyApp\\dao;\n\nuse MyApp\\common\\Db;\nuse MyApp\\model\\UserModel;\n\n/**\n * UserDao.class.php\n */\nclass UserDao\n{\n\n\t/**\n\t * \u30e6\u30fc\u30b6\u30fcID\u304b\u3089\u914d\u5217\u3092\u53d6\u5f97\u3059\u308b\n\t * @param type $intUserId\n\t * @return array\n\t */\n\tpublic static function getDaoFromUserId($intUserId, $intDeleteFlag = null)\n\t{\n\t\t$sql = \"SELECT \";\n\t\t$sql .= \"`userId`\";\n\t\t$sql .= \", `password`\";\n\t\t$sql .= \", `displayName`\";\n\t\t$sql .= \", `email`\";\n\t\t$sql .= \", `token`\";\n\t\t$sql .= \", `loginFailureCount`\";\n\t\t$sql .= \", `loginFailureDatetime`\";\n\t\t$sql .= \", `deleteFlag` \";\n\t\t$sql .= \"FROM `tbl_user` \";\n\t\t$sql .= \"WHERE `userId` = :userId \";\n\n\t\t$arr = array();\n\t\t$arr[':userId'] = $intUserId;\n\t\tif (!is_null($intDeleteFlag) && in_array($intDeleteFlag, array(0, 1))) {\n\t\t\t$sql .= \"AND `deleteFlag` = :deleteFlag \";\n\t\t\t$arr[':deleteFlag'] = $intDeleteFlag;\n\t\t}\n\n\t\treturn Db::select($sql, $arr);\n\t}\n\n\t/**\n\t * \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u304b\u3089\u914d\u5217\u3092\u53d6\u5f97\u3059\u308b\n\t * @param type $strEmail\n\t * @return array\n\t */\n\tpublic static function getDaoFromEmail($strEmail, $intDeleteFlag = null)\n\t{\n\t\t$sql = \"SELECT \";\n\t\t$sql .= \"`userId`\";\n\t\t$sql .= \", `password`\";\n\t\t$sql .= \", `displayName`\";\n\t\t$sql .= \", `email`\";\n\t\t$sql .= \", `token`\";\n\t\t$sql .= \", `loginFailureCount`\";\n\t\t$sql .= \", `loginFailureDatetime`\";\n\t\t$sql .= \", `deleteFlag` \";\n\t\t$sql .= \"FROM `tbl_user` \";\n\t\t$sql .= \"WHERE `email` = :email \";\n\n\t\t$arr = array();\n\t\t$arr[':email'] = $strEmail;\n\t\tif (!is_null($intDeleteFlag) && in_array($intDeleteFlag, array(0, 1))) {\n\t\t\t$sql .= \"AND `deleteFlag` = :deleteFlag \";\n\t\t\t$arr[':deleteFlag'] = $intDeleteFlag;\n\t\t}\n\n\t\treturn Db::select($sql, $arr);\n\t}\n\n\t/**\n\t * \u66f4\u65b0\u3059\u308b\n\t * @param UserModel $objUserModel\n\t * @return bool\n\t */\n\tpublic static function save(UserModel $objUserModel)\n\t{\n\t\t$sql = \"UPDATE \";\n\t\t$sql .= \"`tbl_user` \";\n\t\t$sql .= \"SET \";\n\t\t$sql .= \"`password` = :password \";\n\t\t$sql .= \", `displayName` = :displayName \";\n\t\t$sql .= \", `email` = :email \";\n\t\t$sql .= \", `token` = :token \";\n\t\t$sql .= \", `loginFailureCount` = :loginFailureCount \";\n\t\t$sql .= \", `loginFailureDatetime` = :loginFailureDatetime \";\n\t\t$sql .= \", `deleteFlag` = :deleteFlag \";\n\t\t$sql .= \"WHERE `userId` = :userId \";\n\n\t\t$arr = array();\n\t\t$arr[':userId'] = $objUserModel->getUserId();\n\t\t$arr[':password'] = $objUserModel->getPassword();\n\t\t$arr[':displayName'] = $objUserModel->getDisplayName();\n\t\t$arr[':email'] = $objUserModel->getEmail();\n\t\t$arr[':token'] = $objUserModel->getToken();\n\t\t$arr[':loginFailureCount'] = $objUserModel->getLoginFailureCount();\n\t\t$arr[':loginFailureDatetime'] = $objUserModel->getLoginFailureDatetime();\n\t\t$arr[':deleteFlag'] = $objUserModel->getDeleteFlag();\n\n\t\treturn Db::update($sql, $arr);\n\t}\n\n\t/**\n\t * \u65b0\u898f\u4f5c\u6210\u3059\u308b\n\t * @return int\n\t */\n\tpublic static function insert(UserModel $objUserModel)\n\t{\n\t\t$sql = \"INSERT INTO \";\n\t\t$sql .= \"`tbl_user` \";\n\t\t$sql .= \"(\";\n\t\t$sql .= \"`userId`\";\n\t\t$sql .= \", `password`\";\n\t\t$sql .= \", `displayName`\";\n\t\t$sql .= \", `email`\";\n\t\t$sql .= \", `token`\";\n\t\t$sql .= \", `loginFailureCount`\";\n\t\t$sql .= \", `loginFailureDatetime`\";\n\t\t$sql .= \", `deleteFlag`\";\n\t\t$sql .= \") VALUES (\";\n\t\t$sql .= \"NULL \";\n\t\t$sql .= \", :password \";\n\t\t$sql .= \", :displayName \";\n\t\t$sql .= \", :email \";\n\t\t$sql .= \", :token \";\n\t\t$sql .= \", :loginFailureCount \";\n\t\t$sql .= \", :loginFailureDatetime \";\n\t\t$sql .= \", :deleteFlag \";\n\t\t$sql .= \")\";\n\n\t\t$arr = array();\n\t\t$arr[':password'] = $objUserModel->getPassword();\n\t\t$arr[':displayName'] = $objUserModel->getDisplayName();\n\t\t$arr[':email'] = $objUserModel->getEmail();\n\t\t$arr[':token'] = $objUserModel->getToken();\n\t\t$arr[':loginFailureCount'] = $objUserModel->getLoginFailureCount();\n\t\t$arr[':loginFailureDatetime'] = $objUserModel->getLoginFailureDatetime();\n\t\t$arr[':deleteFlag'] = $objUserModel->getDeleteFlag();\n\n\t\treturn Db::insert($sql, $arr);\n\t}\n\n}\n```\n   \n"}