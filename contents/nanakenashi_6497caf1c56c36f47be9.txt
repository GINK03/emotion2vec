{"context": "\n\n\u306f\u3058\u3081\u306b\n\u3075\u3068\u3057\u305f\u304d\u3063\u304b\u3051\u3067\u30c1\u30e3\u30c3\u30c8\u30a2\u30d7\u30ea\u306e\u5b9f\u88c5\u304c\u5fc5\u8981\u306b\u306a\u3063\u305f\u305f\u3081\nFlask\u3092\u4f7f\u3063\u3066WebSocket\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3069\u3046\u3084\u3063\u3066\u5b9f\u88c5\u3067\u304d\u308b\u304b\u8abf\u3079\u307e\u3057\u305f\u3002\n\u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\u3068\u3053\u308d\u307e\u3067\u66f8\u304d\u307e\u3059\u304c\n\u3053\u308c\u3060\u3051\u3067\u3001\u30c1\u30e3\u30c3\u30c8\u306e\u4e3b\u306a\u6a5f\u80fd\u306f\u5341\u5206\u4f7f\u3048\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u306e\u9078\u5b9a\nFlask\u306e\u80a9\u306b\u4e57\u3063\u304b\u3063\u3066\u5b9f\u88c5\u3059\u308b\u3064\u3082\u308a\u3067\n\u9078\u629e\u80a2\u306b\u6319\u304c\u3063\u305f\u306e\u304c\u4ee5\u4e0b\u306e2\u3064\u306e\u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\n\nFlask-SocketIO: miguelgrinberg\u6c0f\u4f5c\n\nFlask-Sockets: kennethreitz\u6c0f\u4f5c\n\n2014\u5e742\u6708\u3068\u5c11\u3057\u53e4\u3044\u306e\u3067\u3059\u304c\u3001miguelgrinberg\u6c0f\u306b\u3088\u308b\u89e3\u8aac\u8a18\u4e8b\u306b\n\u4e21\u8005\u306e\u6bd4\u8f03\u3092\u8aac\u660e\u3057\u3066\u3044\u308b\u7b87\u6240\u304c\u3042\u308a\u307e\u3059\u3002\n++++++++++++++++++++++++++++++++++++++++++++++++++\n\nThe main difference between Flask-Sockets and Flask-SocketIO is that the former wraps the native WebSocket protocol (through the use of the gevent-websocket project), so it can only be used by the most modern browsers that have native support. Flask-SocketIO transparently downgrades itself for older browsers.\n\nFlask-Sockets\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u306eWebSocket\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\ngevent-websocket\u3092\u901a\u3057\u3066\u30e9\u30c3\u30d7\u3057\u3066\u3044\u308b\u3002\n\u30cd\u30a4\u30c6\u30a3\u30d6\u3067WebSocket\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u30e2\u30c0\u30f3\u30d6\u30e9\u30a6\u30b6\u306e\u307f\u3067\u4f7f\u7528\u3055\u308c\u308b\u3002\n\u4e00\u65b9\u3067\u3001Flask-SocketIO\u306a\u3089\u3082\u3046\u5c11\u3057\u53e4\u3044\u30d6\u30e9\u30a6\u30b6\u3067\u3082\u4f7f\u7528\u53ef\u80fd\u3002\n\nAnother difference is that Flask-SocketIO implements the message passing protocol exposed by the SocketIO Javascript library. Flask-Sockets just implements the communication channel, what is sent on it is entirely up to the application.\n\nFlask-SocketIO\u306fJavaScript\u306eSocketIO\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u305f\u3081\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3002\nFlask-Sockets\u306f\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c1\u30e3\u30cd\u30eb\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u306e\u307f\u3067\u3042\u308a\n\u4f55\u3092\u9001\u308b\u304b\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u59d4\u306d\u3089\u308c\u3066\u3044\u308b\u3002\n\nFlask-SocketIO also creates an environment for event handlers that is close to that of regular view functions, including the creation of application and request contexts. There are some important exceptions to this explained in the documentation, however.\n\nFlask-SocketIO\u306f\u30d3\u30e5\u30fc\u95a2\u6570\u306b\u8fd1\u63a5\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u306e\u305f\u3081\u306e\u74b0\u5883\u3092\u751f\u6210\u3059\u308b\u3002\n\u3053\u308c\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3084\u30ea\u30af\u30a8\u30b9\u30c8\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u751f\u6210\u3092\u542b\u3080\u3002\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e2d\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001\u4f8b\u5916\u306f\u3042\u308b\u304c\u3002\n++++++++++++++++++++++++++++++++++++++++++++++++++\n3\u70b9\u76ee\u306e\u7ffb\u8a33\u304c\u3046\u307e\u304f\u3067\u304d\u3066\u306a\u3044\u3082\u306e\u306e\n\u8981\u306f\u65e2\u5b58\u306eFlask\u30a2\u30d7\u30ea\u306b\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u4f5c\u8005\u306e\u4fe1\u983c\u5ea6\u3082GitHub\u306e\u30b9\u30bf\u30fc\u3082\u540c\u7a0b\u5ea6\u3067\u60a9\u307f\u307e\u3057\u305f\u304c\n\n\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u983b\u5ea6\u304c\u9ad8\u3044\n\u3059\u3050\u306b\u52d5\u304f\u30b5\u30f3\u30d7\u30eb\u304c\u4ed8\u5c5e\u3057\u3066\u3044\u308b\n\n\u3068\u3044\u3046\u70b9\u304b\u3089\u3001Flask-SocketIO\u3092\u9078\u629e\u3057\u307e\u3057\u305f\u3002\nWebSocket\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u304c\u3063\u3064\u308a\u89e6\u308c\u305f\u3044\u5834\u5408\u3084\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff08JavaScript\uff09\u5074\u306b\n\u81ea\u7531\u5ea6\u3092\u6c42\u3081\u308b\u5834\u5408\u306fFlask-Sockets\u3092\u4f7f\u3046\u3079\u304d\u3067\u3057\u3087\u3046\u304b\u3002\n\u3068\u306f\u3044\u3048\u3001\u3069\u3061\u3089\u3067\u3082\u3084\u308a\u305f\u3044\u3053\u3068\u306f\u5b9f\u73fe\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n\u6e96\u5099\n\u524d\u56de\u306e\u8a18\u4e8b\u3068\u540c\u69d8\u306b\u30ed\u30fc\u30ab\u30eb\u306eDocker\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u79c1\u306e\u5b9f\u884c\u74b0\u5883\u306fDocker for Mac\u306ePublic Beta\u3067\u3059\u3002\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n$ docker --version\nDocker version 1.12.0, build 8eab29e, experimental\n\n\n\u624b\u65e9\u304f\u74b0\u5883\u3092\u4f5c\u308b\u3059\u308b\u305f\u3081\u306bDocker\u3092\u4f7f\u3063\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\n\u3042\u308b\u7a0b\u5ea6\u65b0\u3057\u3044Python\u304c\u52d5\u304f\u74b0\u5883\u304c\u3042\u308c\u3070\u3001\u74b0\u5883\u69cb\u7bc9\u90e8\u5206\u306f\u8aad\u307f\u98db\u3070\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30bd\u30fc\u30b9\nflask_socket/\n    \u251c Dockerfile\n    \u2514 requirements.txt\n\n\nDockerfile\n# \u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u306e\u6307\u5b9a\nFROM python:3.5.2-alpine\n\n# \u30bd\u30fc\u30b9\u3092\u7f6e\u304f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5909\u6570\u3068\u3057\u3066\u683c\u7d0d                                                                                                                  \nARG project_dir=/web/socket/\n\n# apk\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u66f4\u65b0\u5f8c\u306bgit\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN apk update\nRUN apk add git\n\n# requirements.txt\u306b\u8a18\u8f09\u3055\u308c\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nWORKDIR $project_dir\nADD requirements.txt .\nRUN pip install -r requirements.txt\n\n# GitHub\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089Flask-SocketIO\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\nRUN git clone https://github.com/miguelgrinberg/Flask-SocketIO.git Flask-SocketIO\nWORKDIR $project_dir/Flask-SocketIO/example\n\n\nrequirements.txt\nFlask\u3068Flask-SocketIO\u3092pip\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3042\u3068\u306b\n$ pip freeze > requirements.txt\u3057\u305f\u3082\u306e\u3002\n\nrequirements.txt\nclick==6.6\nFlask==0.11.1\nFlask-SocketIO==2.6.2\nitsdangerous==0.24\nJinja2==2.8\nMarkupSafe==0.23\npython-engineio==0.9.2\npython-socketio==1.4.4\nsix==1.10.0\nWerkzeug==0.11.10\n\n\nFlask\u306e\u672c\u4f53\u304c\u4f9d\u5b58\u3057\u3066\u3044\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u4ee5\u5916\u3067\u306f\nFlask-SocketIO\u3001python-engineio\u3001python-socketio\u3001six\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u624b\u9806\n\n\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n\n\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n$ cd /path/to/flask_socket/\n$ docker build -t flask_socket . \n\n\n\n\n-t flask_socket: \u4f5c\u6210\u3059\u308b\u30a4\u30e1\u30fc\u30b8\u306e\u540d\u524d\u3092'flask_socket'\u306b\u3059\u308b\n\n.: \u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308bDockerfile\u3092\u4f7f\u7528\n\n\n\u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n\n\u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n$ docker run -p 5000:5000 -it flask_socket /bin/sh\n\n\n\n\n-p 5000:5000: host\u306e5000\u756a\u30dd\u30fc\u30c8\u3092\u30b3\u30f3\u30c6\u30ca\u306e5000\u756a\u30dd\u30fc\u30c8\u306b\u5411\u3051\u308b\n\n-it: \u73fe\u5728\u306e\u5165\u529b\u30c7\u30d0\u30a4\u30b9\u3067\u30b3\u30f3\u30c6\u30ca\u3092\u64cd\u4f5c\n\nflask_socket: \u30a4\u30e1\u30fc\u30b8\u540d\u306e\u6307\u5b9a\n\n/bin/sh: \u8d77\u52d5\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u3067sh\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\n\n\n\u30b3\u30fc\u30c9\u306e\u8ffd\u52a0\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\u306e\u30b3\u30fc\u30c9\u306bhost\u306e\u8a2d\u5b9a\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\napp.py\n# socketio.run(app, debug=True)\nsocketio.run(app, host='0.0.0.0', debug=True)\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\n\nFlask\u5b9f\u884c\n$ python app.py\n\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089localhost:5000\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n'Send:'\u30d5\u30a9\u30fc\u30e0\u306e\u4e00\u90e8\u3092\u89e3\u8aac\n\n\nEcho: \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5165\u529b\u3057\u305f\u30e6\u30fc\u30b6\u306b\u30aa\u30a6\u30e0\u8fd4\u3057\n\nBroadcast: \u3059\u3079\u3066\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff08\u540c\u3058\u30da\u30fc\u30b8\u3092\u958b\u3044\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30e6\u30fc\u30b6\uff09\u306b\u9001\u4fe1\n\nDisconnect: \u30b5\u30fc\u30d0\u3068\u306e\u63a5\u7d9a\u3092\u5207\u65ad\n\nEcho\u3068Broadcast\u306e\u9055\u3044\u306f\u30bf\u30d6\u3092\u4e26\u3079\u3066\u307f\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4ed6\u306e\u9805\u76ee\u306f\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u95a2\u9023\u306e\u64cd\u4f5c\u3068\u89e3\u91c8\u3057\u3066\u5272\u611b\u3002\n\u3061\u306a\u307f\u306b\u90e8\u5c4b\u306e\u540d\u524d\u306f\u6307\u5b9a\u3067\u304d\u308b\u3082\u306e\u306e\u3001\u81ea\u5206\u306e\u540d\u524d\u306f\u5165\u529b\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u30b3\u30fc\u30c9\u306e\u89e3\u91c8\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\u6642\u306e\u51e6\u7406\n\napp.py\n# \u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8aad\u307f\u8fbc\u307f\nfrom flask import Flask, render_template, session, request         \nfrom flask_socketio import SocketIO, emit, join_room, leave_room, \\\n      close_room, rooms, disconnect                                  \n\n# \u975e\u540c\u671f\u51e6\u7406\u306b\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6307\u5b9a\n# `threading`, `eventlet`, `gevent`\u304b\u3089\u9078\u629e\u53ef\u80fd\nasync_mode = None\n\n# Flask\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u6697\u53f7\u5316\u306e\u30ad\u30fc\u3092\u6307\u5b9a\napp = Flask(__name__)\napp.config['SECRET_KEY'] = 'secret!'\n\n# Flask\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001async_mode\u3092\u6307\u5b9a\u3057\u3066\u3001SocketIO\u30b5\u30fc\u30d0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\nsocketio = SocketIO(app, async_mode=async_mode)\n\n# \u30b9\u30ec\u30c3\u30c9\u3092\u683c\u7d0d\u3059\u308b\u305f\u3081\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\nthread = None\n\n\n\napp.py\n# SocketIO\u30b5\u30fc\u30d0\u3092\u30c7\u30d0\u30c3\u30b0\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\nsocketio.run(app, debug=True)\n\n\n\n\u30da\u30fc\u30b8\u3092\u958b\u3044\u305f\u969b\u306e\u51e6\u7406\nhtml\u5185\u306escript\u5185\u3067\u3001SocketIO\u30e9\u30a4\u30d6\u30e9\u30ea\uff08JavaScript\uff09\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002\n\nindex.html\n<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/socket.io/1.3.5/socket.io.min.js\"></script>\n\n\n\u305d\u306e\u5f8c\u3001\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\uff08WebSocket\u901a\u4fe1\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\uff09\u306e\u6307\u5b9a\u3068\nSocketIO\u30b5\u30fc\u30d0\u3068\u306e\u63a5\u7d9a\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\u30b5\u30fc\u30d0\u63a5\u7d9a\u6642\u306b\u767a\u884c\u3055\u308c\u308b\u30a4\u30d9\u30f3\u30c8\u306e\u30cf\u30f3\u30c9\u30e9\u6307\u5b9a\u3084\nmy response\u30a4\u30d9\u30f3\u30c8\u306e\u30cf\u30f3\u30c9\u30e9\u6307\u5b9a\u3082\u3053\u3053\u3067\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306f#log\u30bb\u30ec\u30af\u30bf\u3067\u6307\u5b9a\u3055\u308c\u305f\u30bf\u30b0\u306b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u304f\u3088\u3046\u3067\u3059\u3002\n\nindex.html\nnamespace = '/test'; \n\nvar socket = io.connect('http://' + document.domain + ':' + location.port + namespace);\n\nsocket.on('connect', function() {\n    socket.emit('my event', {data: 'I\\'m connected!'});\n});\n\nsocket.on('my response', function(msg) {\n    $('#log').append('<br>' + $('<div/>').text('Received #' + msg.count + ': ' + msg.data).html());\n});                                                                                                                                                   \n\n\n\u30b5\u30fc\u30d0\u5074\u3067\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u63a5\u7d9a\u8981\u6c42\u3092\u53d7\u3051\nmy response\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u706b\u3055\u305b\u308b\u3053\u3068\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\nsocketio.start_background_task(target=background_thread)\u306e\u90e8\u5206\u306f\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\napp.py\n@socketio.on('connect', namespace='/test')\ndef test_connect():\n    global thread\n    if thread is None:\n        thread = socketio.start_background_task(target=background_thread)\n    emit('my response', {'data': 'Connected', 'count': 0})\n\n\n\u4ee5\u4e0a\u306e\u30b3\u30fc\u30c9\u306b\u3088\u308a\u3001Response\u30ed\u30b0\u306e\u521d\u671f\u52d5\u4f5c\u90e8\u5206\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\nReceived #0: Connected\nReceived #1: I'm connected!\n\nPython\u3068JavaScript\u306e\u4e21\u65b9\u3067\u3001\u30a4\u30d9\u30f3\u30c8\u306b\u5bfe\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u3092\u8a18\u8f09\u3059\u308b\u3053\u3068\u306b\u3088\u308a\n\u53cc\u65b9\u5411\u306e\u3084\u308a\u3068\u308a\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\nEcho/Broadcast\u306e\u969b\u306e\u51e6\u7406\nEcho/Broadcast\u306fForm\u30bf\u30b0\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8f09\u3055\u308c\u3066\u304a\u308a\n\nindex.html\n<form id=\"emit\" method=\"POST\" action='#'>\n    <input type=\"text\" name=\"emit_data\" id=\"emit_data\" placeholder=\"Message\">\n    <input type=\"submit\" value=\"Echo\">\n</form>\n<form id=\"broadcast\" method=\"POST\" action='#'>\n    <input type=\"text\" name=\"broadcast_data\" id=\"broadcast_data\" placeholder=\"Message\">\n    <input type=\"submit\" value=\"Broadcast\">\n</form>\n\n\n\u30d5\u30a9\u30fc\u30e0\u306esubmit\u306b\u3088\u308a\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30cf\u30f3\u30c9\u30e9\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u305d\u308c\u305e\u308cmy event\u30a4\u30d9\u30f3\u30c8\u3068my broadcast event\u3092\n\u30d5\u30a9\u30fc\u30e0\u306b\u5165\u529b\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u6301\u305f\u305b\u3066\u767a\u706b\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n\nindex.html\n$('form#emit').submit(function(event) {\n    socket.emit('my event', {data: $('#emit_data').val()});\n    return false;\n});\n$('form#broadcast').submit(function(event) {\n    socket.emit('my broadcast event', {data: $('#broadcast_data').val()});\n    return false;\n});\n\n\n\u7d50\u679c\u3068\u3057\u3066Python\u5074\u306e\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\nmy response\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u706b\u3055\u305b\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u7d50\u679c\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\u307b\u3068\u3093\u3069\u540c\u3058\u30b3\u30fc\u30c9\u304c\u4e26\u3093\u3067\u3044\u307e\u3059\u304c\u3001my broadcast event\u306e\u5834\u5408\u306f\nbroadcast=True\u3092emit\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3068\u3057\u3066\u7f6e\u304f\u3053\u3068\u3067\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3059\u3079\u3066\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u9001\u308b\u3088\u3046\u306b\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\napp.py\n@socketio.on('my event', namespace='/test')\ndef test_message(message):\n    session['receive_count'] = session.get('receive_count', 0) + 1\n    emit('my response',                                               \n         {'data': message['data'], 'count': session['receive_count']})\n\n@socketio.on('my broadcast event', namespace='/test')\ndef test_broadcast_message(message):\n    session['receive_count'] = session.get('receive_count', 0) + 1\n    emit('my response',\n         {'data': message['data'], 'count': session['receive_count']},\n         broadcast=True)\n\n\n\nping/pong\u306e\u51e6\u7406\n'Average ping/pong latency'\u306e\u90e8\u5206\u306b\u306f\n\u30b5\u30fc\u30d0\u3068\u306e\u901a\u4fe1\u306e\u3084\u308a\u3068\u308a\u306b\u3069\u308c\u3060\u3051\u30ec\u30a4\u30c6\u30f3\u30b7\u304c\u3042\u308b\u304b\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u306f1\u79d2\u3054\u3068\u306b\u901a\u4fe1\u306e\u958b\u59cb\u6642\u9593\u3092\u8a18\u9332\u3057\nmy ping\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u706b\u3055\u305b\u3066\u3044\u307e\u3059\u3002\nping_pong_times\u5909\u6570\u306f\u904e\u53bb\u306e\u901a\u4fe1\u3092\u683c\u7d0d\u3059\u308b\u305f\u3081\u306e\u914d\u5217\u3067\u3059\u3002\n\nindex.html\nvar ping_pong_times = [];\nvar start_time;\nwindow.setInterval(function() {\n    start_time = (new Date).getTime();\n    socket.emit('my ping');\n}, 1000);\n\n\nPython\u5074\u306fmy ping\u30a4\u30d9\u30f3\u30c8\u306e\u767a\u706b\u3092\u53d7\u3051\u3066\u3001my pong\u3092\u767a\u706b\u3055\u305b\u308b\u306e\u307f\u3067\u3059\u3002\n\napp.py\n@socketio.on('my ping', namespace='/test')\ndef ping_pong():\n    emit('my pong')\n\n\nJavaScript\u5074\u3067\u306fmy pong\u304c\u767a\u706b\u3057\u305f\u6642\u9593\u3068\u958b\u59cb\u6642\u9593\u306e\u5dee\u3092\u53d6\u308a\n\u904e\u53bb\u306e\u901a\u4fe1\u8a18\u9332\u3092\u5e73\u5747\u3057\u305f\u3082\u306e\u3092'Average ping/pong latency'\u306b\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\napp.py\nsocket.on('my pong', function() {\n    var latency = (new Date).getTime() - start_time;\n    ping_pong_times.push(latency);\n    ping_pong_times = ping_pong_times.slice(-30); // keep last 30 samples\n    var sum = 0;\n    for (var i = 0; i < ping_pong_times.length; i++)\n        sum += ping_pong_times[i];\n    $('#ping-pong').text(Math.round(10 * sum / ping_pong_times.length) / 10);\n});\n\n\n\n\u30b5\u30fc\u30d0\u5074\u3067\u306e\u30a4\u30d9\u30f3\u30c8\u751f\u6210\u51e6\u7406\n\u3053\u3053\u307e\u3067\u306e\u51e6\u7406\u306f\u3059\u3079\u3066\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\uff08JavaScript\uff09\u304c\u8d77\u70b9\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u304c\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\u3001\u30b5\u30fc\u30d0\u5074\u304b\u3089\u60c5\u5831\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u305f\u3044\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001connect\u30a4\u30d9\u30f3\u30c8\u306e\u30cf\u30f3\u30c9\u30e9\u306b\u4ee5\u4e0b\u306e\u8a18\u8ff0\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\napp.py\nthread = socketio.start_background_task(target=background_thread)\n\n\ntarget\u3068\u306a\u3063\u3066\u3044\u308bbackground_thread\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\napp.py\ndef background_thread():\n    \"\"\"Example of how to send server generated events to clients.\"\"\"     \n    count = 0\n    while True:\n        socketio.sleep(10)\n        count += 1\n        socketio.emit('my response',\n                      {'data': 'Server generated event', 'count': count},\n                      namespace='/test')\n\n\n10\u79d2\u3054\u3068\u306bmy response\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u706b\u3055\u305b\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306e\u81ea\u52d5\u66f4\u65b0\u3084\u3001\u7f8e\u4eba\u6642\u8a08\u306e\u3088\u3046\u306a\u30a2\u30d7\u30ea\u3092\u5b9f\u88c5\u3059\u308b\u969b\u306b\u6709\u7528\u305d\u3046\u3067\u3059\u3002\n\n\u3080\u3059\u3073\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u843d\u3068\u3057\u3066\u8aad\u3093\u3060\u3060\u3051\u3067\u3059\u304c\u3001\u305f\u3081\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3053\u308c\u3092\u5c11\u3057\u6539\u5909\u3059\u308b\u3060\u3051\u3067\u3082\u8272\u3005\u4f5c\u308c\u305d\u3046\u3067\u3059\u306d\u3002\n\u3053\u308c\u304b\u3089\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5168\u4f53\u306e\u8aad\u307f\u8fbc\u307f\u306f\u5fc5\u8981\u306b\u306a\u308b\u3082\u306e\u306e\n\u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u3092\u542b\u3081\u3066\u3082\u5c0f\u3055\u3081\u3067\u3001\u3068\u3063\u3064\u304d\u3084\u3059\u3044\u306e\u306fFlask\u306e\u9b45\u529b\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u306f\u3058\u3081\u306b\n\u3075\u3068\u3057\u305f\u304d\u3063\u304b\u3051\u3067\u30c1\u30e3\u30c3\u30c8\u30a2\u30d7\u30ea\u306e\u5b9f\u88c5\u304c\u5fc5\u8981\u306b\u306a\u3063\u305f\u305f\u3081\nFlask\u3092\u4f7f\u3063\u3066WebSocket\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3069\u3046\u3084\u3063\u3066\u5b9f\u88c5\u3067\u304d\u308b\u304b\u8abf\u3079\u307e\u3057\u305f\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\u3068\u3053\u308d\u307e\u3067\u66f8\u304d\u307e\u3059\u304c\n\u3053\u308c\u3060\u3051\u3067\u3001\u30c1\u30e3\u30c3\u30c8\u306e\u4e3b\u306a\u6a5f\u80fd\u306f\u5341\u5206\u4f7f\u3048\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n## \u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u306e\u9078\u5b9a\nFlask\u306e\u80a9\u306b\u4e57\u3063\u304b\u3063\u3066\u5b9f\u88c5\u3059\u308b\u3064\u3082\u308a\u3067\n\u9078\u629e\u80a2\u306b\u6319\u304c\u3063\u305f\u306e\u304c\u4ee5\u4e0b\u306e2\u3064\u306e\u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\n* [Flask-SocketIO](https://github.com/miguelgrinberg/Flask-SocketIO): miguelgrinberg\u6c0f\u4f5c\n* [Flask-Sockets](https://github.com/kennethreitz/flask-sockets): kennethreitz\u6c0f\u4f5c\n\n2014\u5e742\u6708\u3068\u5c11\u3057\u53e4\u3044\u306e\u3067\u3059\u304c\u3001miguelgrinberg\u6c0f\u306b\u3088\u308b[\u89e3\u8aac\u8a18\u4e8b](http://blog.miguelgrinberg.com/post/easy-websockets-with-flask-and-gevent)\u306b\n\u4e21\u8005\u306e\u6bd4\u8f03\u3092\u8aac\u660e\u3057\u3066\u3044\u308b\u7b87\u6240\u304c\u3042\u308a\u307e\u3059\u3002\n\n++++++++++++++++++++++++++++++++++++++++++++++++++\n\n>The main difference between Flask-Sockets and Flask-SocketIO is that the former wraps the native WebSocket protocol (through the use of the gevent-websocket project), so it can only be used by the most modern browsers that have native support. Flask-SocketIO transparently downgrades itself for older browsers.\n\nFlask-Sockets\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u306eWebSocket\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\ngevent-websocket\u3092\u901a\u3057\u3066\u30e9\u30c3\u30d7\u3057\u3066\u3044\u308b\u3002\n\u30cd\u30a4\u30c6\u30a3\u30d6\u3067WebSocket\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u30e2\u30c0\u30f3\u30d6\u30e9\u30a6\u30b6\u306e\u307f\u3067\u4f7f\u7528\u3055\u308c\u308b\u3002\n\u4e00\u65b9\u3067\u3001Flask-SocketIO\u306a\u3089\u3082\u3046\u5c11\u3057\u53e4\u3044\u30d6\u30e9\u30a6\u30b6\u3067\u3082\u4f7f\u7528\u53ef\u80fd\u3002\n\n>Another difference is that Flask-SocketIO implements the message passing protocol exposed by the SocketIO Javascript library. Flask-Sockets just implements the communication channel, what is sent on it is entirely up to the application.\n\nFlask-SocketIO\u306fJavaScript\u306eSocketIO\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u305f\u3081\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3002\nFlask-Sockets\u306f\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c1\u30e3\u30cd\u30eb\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u306e\u307f\u3067\u3042\u308a\n\u4f55\u3092\u9001\u308b\u304b\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u59d4\u306d\u3089\u308c\u3066\u3044\u308b\u3002\n\n>Flask-SocketIO also creates an environment for event handlers that is close to that of regular view functions, including the creation of application and request contexts. There are some important exceptions to this explained in the documentation, however.\n\nFlask-SocketIO\u306f\u30d3\u30e5\u30fc\u95a2\u6570\u306b\u8fd1\u63a5\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u306e\u305f\u3081\u306e\u74b0\u5883\u3092\u751f\u6210\u3059\u308b\u3002\n\u3053\u308c\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3084\u30ea\u30af\u30a8\u30b9\u30c8\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u751f\u6210\u3092\u542b\u3080\u3002\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e2d\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001\u4f8b\u5916\u306f\u3042\u308b\u304c\u3002\n\n++++++++++++++++++++++++++++++++++++++++++++++++++\n\n\n3\u70b9\u76ee\u306e\u7ffb\u8a33\u304c\u3046\u307e\u304f\u3067\u304d\u3066\u306a\u3044\u3082\u306e\u306e\n\u8981\u306f\u65e2\u5b58\u306eFlask\u30a2\u30d7\u30ea\u306b\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4f5c\u8005\u306e\u4fe1\u983c\u5ea6\u3082GitHub\u306e\u30b9\u30bf\u30fc\u3082\u540c\u7a0b\u5ea6\u3067\u60a9\u307f\u307e\u3057\u305f\u304c\n\n* \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306e\u983b\u5ea6\u304c\u9ad8\u3044\n* \u3059\u3050\u306b\u52d5\u304f\u30b5\u30f3\u30d7\u30eb\u304c\u4ed8\u5c5e\u3057\u3066\u3044\u308b\n\n\u3068\u3044\u3046\u70b9\u304b\u3089\u3001[Flask-SocketIO](https://github.com/miguelgrinberg/Flask-SocketIO)\u3092\u9078\u629e\u3057\u307e\u3057\u305f\u3002\nWebSocket\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u304c\u3063\u3064\u308a\u89e6\u308c\u305f\u3044\u5834\u5408\u3084\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff08JavaScript\uff09\u5074\u306b\n\u81ea\u7531\u5ea6\u3092\u6c42\u3081\u308b\u5834\u5408\u306fFlask-Sockets\u3092\u4f7f\u3046\u3079\u304d\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u3068\u306f\u3044\u3048\u3001\u3069\u3061\u3089\u3067\u3082\u3084\u308a\u305f\u3044\u3053\u3068\u306f\u5b9f\u73fe\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n## \u6e96\u5099\n\n[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/nanakenashi/items/cbe8e8ef878121638514)\u3068\u540c\u69d8\u306b\u30ed\u30fc\u30ab\u30eb\u306eDocker\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u79c1\u306e\u5b9f\u884c\u74b0\u5883\u306fDocker for Mac\u306ePublic Beta\u3067\u3059\u3002\n\n```bash:\u30d0\u30fc\u30b8\u30e7\u30f3\n$ docker --version\nDocker version 1.12.0, build 8eab29e, experimental\n```\n\n\u624b\u65e9\u304f\u74b0\u5883\u3092\u4f5c\u308b\u3059\u308b\u305f\u3081\u306bDocker\u3092\u4f7f\u3063\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\n\u3042\u308b\u7a0b\u5ea6\u65b0\u3057\u3044Python\u304c\u52d5\u304f\u74b0\u5883\u304c\u3042\u308c\u3070\u3001\u74b0\u5883\u69cb\u7bc9\u90e8\u5206\u306f\u8aad\u307f\u98db\u3070\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u30bd\u30fc\u30b9\n\n```\u30ed\u30fc\u30ab\u30eb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\nflask_socket/\n    \u251c Dockerfile\n    \u2514 requirements.txt\n```\n\n### Dockerfile\n\n```Dockerfile\n# \u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u306e\u6307\u5b9a\nFROM python:3.5.2-alpine\n\n# \u30bd\u30fc\u30b9\u3092\u7f6e\u304f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5909\u6570\u3068\u3057\u3066\u683c\u7d0d                                                                                                                  \nARG project_dir=/web/socket/\n\n# apk\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u66f4\u65b0\u5f8c\u306bgit\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nRUN apk update\nRUN apk add git\n\n# requirements.txt\u306b\u8a18\u8f09\u3055\u308c\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nWORKDIR $project_dir\nADD requirements.txt .\nRUN pip install -r requirements.txt\n\n# GitHub\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089Flask-SocketIO\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\nRUN git clone https://github.com/miguelgrinberg/Flask-SocketIO.git Flask-SocketIO\nWORKDIR $project_dir/Flask-SocketIO/example\n```\n\n### requirements.txt\n\n`Flask`\u3068`Flask-SocketIO`\u3092pip\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3042\u3068\u306b\n`$ pip freeze > requirements.txt`\u3057\u305f\u3082\u306e\u3002\n\n```requirements.txt\nclick==6.6\nFlask==0.11.1\nFlask-SocketIO==2.6.2\nitsdangerous==0.24\nJinja2==2.8\nMarkupSafe==0.23\npython-engineio==0.9.2\npython-socketio==1.4.4\nsix==1.10.0\nWerkzeug==0.11.10\n```\n\n`Flask`\u306e\u672c\u4f53\u304c\u4f9d\u5b58\u3057\u3066\u3044\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u4ee5\u5916\u3067\u306f\n`Flask-SocketIO`\u3001`python-engineio`\u3001`python-socketio`\u3001`six`\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n## \u624b\u9806\n\n### \u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n\n```bash:\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n$ cd /path/to/flask_socket/\n$ docker build -t flask_socket . \n```\n\n* `-t flask_socket`: \u4f5c\u6210\u3059\u308b\u30a4\u30e1\u30fc\u30b8\u306e\u540d\u524d\u3092'flask_socket'\u306b\u3059\u308b\n* `.`: \u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308bDockerfile\u3092\u4f7f\u7528\n\n### \u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n\n```bash:\u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n$ docker run -p 5000:5000 -it flask_socket /bin/sh\n```\n\n* `-p 5000:5000`: host\u306e5000\u756a\u30dd\u30fc\u30c8\u3092\u30b3\u30f3\u30c6\u30ca\u306e5000\u756a\u30dd\u30fc\u30c8\u306b\u5411\u3051\u308b\n* `-it`: \u73fe\u5728\u306e\u5165\u529b\u30c7\u30d0\u30a4\u30b9\u3067\u30b3\u30f3\u30c6\u30ca\u3092\u64cd\u4f5c\n* `flask_socket`: \u30a4\u30e1\u30fc\u30b8\u540d\u306e\u6307\u5b9a\n* `/bin/sh`: \u8d77\u52d5\u3057\u305f\u30b3\u30f3\u30c6\u30ca\u3067sh\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\n\n### \u30b3\u30fc\u30c9\u306e\u8ffd\u52a0\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\u306e\u30b3\u30fc\u30c9\u306b`host`\u306e\u8a2d\u5b9a\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```python:app.py\n# socketio.run(app, debug=True)\nsocketio.run(app, host='0.0.0.0', debug=True)\n```\n\n### \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\n\n```bash:Flask\u5b9f\u884c\n$ python app.py\n```\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089`localhost:5000`\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n![Flask-SocketIO.png](https://qiita-image-store.s3.amazonaws.com/0/43116/b5f6c5e2-c9b0-6aa5-856a-a1072cfbf72c.png \"Flask-SocketIO.png\")\n\n'Send:'\u30d5\u30a9\u30fc\u30e0\u306e\u4e00\u90e8\u3092\u89e3\u8aac\n\n* `Echo`: \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5165\u529b\u3057\u305f\u30e6\u30fc\u30b6\u306b\u30aa\u30a6\u30e0\u8fd4\u3057\n* `Broadcast`: \u3059\u3079\u3066\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff08\u540c\u3058\u30da\u30fc\u30b8\u3092\u958b\u3044\u3066\u3044\u308b\u3059\u3079\u3066\u306e\u30e6\u30fc\u30b6\uff09\u306b\u9001\u4fe1\n* `Disconnect`: \u30b5\u30fc\u30d0\u3068\u306e\u63a5\u7d9a\u3092\u5207\u65ad\n\n`Echo`\u3068`Broadcast`\u306e\u9055\u3044\u306f\u30bf\u30d6\u3092\u4e26\u3079\u3066\u307f\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4ed6\u306e\u9805\u76ee\u306f\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u95a2\u9023\u306e\u64cd\u4f5c\u3068\u89e3\u91c8\u3057\u3066\u5272\u611b\u3002\n\u3061\u306a\u307f\u306b\u90e8\u5c4b\u306e\u540d\u524d\u306f\u6307\u5b9a\u3067\u304d\u308b\u3082\u306e\u306e\u3001\u81ea\u5206\u306e\u540d\u524d\u306f\u5165\u529b\u3067\u304d\u307e\u305b\u3093\u3002\n\n## \u30b3\u30fc\u30c9\u306e\u89e3\u91c8\n\n### \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\u6642\u306e\u51e6\u7406\n\n```python:app.py\n# \u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8aad\u307f\u8fbc\u307f\nfrom flask import Flask, render_template, session, request         \nfrom flask_socketio import SocketIO, emit, join_room, leave_room, \\\n      close_room, rooms, disconnect                                  \n\n# \u975e\u540c\u671f\u51e6\u7406\u306b\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6307\u5b9a\n# `threading`, `eventlet`, `gevent`\u304b\u3089\u9078\u629e\u53ef\u80fd\nasync_mode = None\n\n# Flask\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u6697\u53f7\u5316\u306e\u30ad\u30fc\u3092\u6307\u5b9a\napp = Flask(__name__)\napp.config['SECRET_KEY'] = 'secret!'\n\n# Flask\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001async_mode\u3092\u6307\u5b9a\u3057\u3066\u3001SocketIO\u30b5\u30fc\u30d0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\nsocketio = SocketIO(app, async_mode=async_mode)\n\n# \u30b9\u30ec\u30c3\u30c9\u3092\u683c\u7d0d\u3059\u308b\u305f\u3081\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\nthread = None\n```\n\n```python:app.py\n# SocketIO\u30b5\u30fc\u30d0\u3092\u30c7\u30d0\u30c3\u30b0\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\nsocketio.run(app, debug=True)\n```\n\n### \u30da\u30fc\u30b8\u3092\u958b\u3044\u305f\u969b\u306e\u51e6\u7406\n\nhtml\u5185\u306escript\u5185\u3067\u3001SocketIO\u30e9\u30a4\u30d6\u30e9\u30ea\uff08JavaScript\uff09\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u3002\n\n```html:index.html\n<script type=\"text/javascript\" src=\"//cdnjs.cloudflare.com/ajax/libs/socket.io/1.3.5/socket.io.min.js\"></script>\n```\n\n\u305d\u306e\u5f8c\u3001\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\uff08WebSocket\u901a\u4fe1\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\uff09\u306e\u6307\u5b9a\u3068\nSocketIO\u30b5\u30fc\u30d0\u3068\u306e\u63a5\u7d9a\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\n\u30b5\u30fc\u30d0\u63a5\u7d9a\u6642\u306b\u767a\u884c\u3055\u308c\u308b\u30a4\u30d9\u30f3\u30c8\u306e\u30cf\u30f3\u30c9\u30e9\u6307\u5b9a\u3084\n`my response`\u30a4\u30d9\u30f3\u30c8\u306e\u30cf\u30f3\u30c9\u30e9\u6307\u5b9a\u3082\u3053\u3053\u3067\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306f`#log`\u30bb\u30ec\u30af\u30bf\u3067\u6307\u5b9a\u3055\u308c\u305f\u30bf\u30b0\u306b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u304f\u3088\u3046\u3067\u3059\u3002\n\n```javascript:index.html\nnamespace = '/test'; \n\nvar socket = io.connect('http://' + document.domain + ':' + location.port + namespace);\n\nsocket.on('connect', function() {\n    socket.emit('my event', {data: 'I\\'m connected!'});\n});\n\nsocket.on('my response', function(msg) {\n    $('#log').append('<br>' + $('<div/>').text('Received #' + msg.count + ': ' + msg.data).html());\n});                                                                                                                                                   \n```\n\n\u30b5\u30fc\u30d0\u5074\u3067\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u63a5\u7d9a\u8981\u6c42\u3092\u53d7\u3051\n`my response`\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u706b\u3055\u305b\u308b\u3053\u3068\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n`socketio.start_background_task(target=background_thread)`\u306e\u90e8\u5206\u306f\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\n```python:app.py\n@socketio.on('connect', namespace='/test')\ndef test_connect():\n    global thread\n    if thread is None:\n        thread = socketio.start_background_task(target=background_thread)\n    emit('my response', {'data': 'Connected', 'count': 0})\n```\n\n\u4ee5\u4e0a\u306e\u30b3\u30fc\u30c9\u306b\u3088\u308a\u3001Response\u30ed\u30b0\u306e\u521d\u671f\u52d5\u4f5c\u90e8\u5206\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n> Received #0: Connected\n> Received #1: I'm connected!\n\nPython\u3068JavaScript\u306e\u4e21\u65b9\u3067\u3001\u30a4\u30d9\u30f3\u30c8\u306b\u5bfe\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u3092\u8a18\u8f09\u3059\u308b\u3053\u3068\u306b\u3088\u308a\n\u53cc\u65b9\u5411\u306e\u3084\u308a\u3068\u308a\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n### Echo/Broadcast\u306e\u969b\u306e\u51e6\u7406\n\nEcho/Broadcast\u306fForm\u30bf\u30b0\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8f09\u3055\u308c\u3066\u304a\u308a\n\n```html:index.html\n<form id=\"emit\" method=\"POST\" action='#'>\n    <input type=\"text\" name=\"emit_data\" id=\"emit_data\" placeholder=\"Message\">\n    <input type=\"submit\" value=\"Echo\">\n</form>\n<form id=\"broadcast\" method=\"POST\" action='#'>\n    <input type=\"text\" name=\"broadcast_data\" id=\"broadcast_data\" placeholder=\"Message\">\n    <input type=\"submit\" value=\"Broadcast\">\n</form>\n```\n\n\u30d5\u30a9\u30fc\u30e0\u306esubmit\u306b\u3088\u308a\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u30cf\u30f3\u30c9\u30e9\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u305d\u308c\u305e\u308c`my event`\u30a4\u30d9\u30f3\u30c8\u3068`my broadcast event`\u3092\n\u30d5\u30a9\u30fc\u30e0\u306b\u5165\u529b\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u6301\u305f\u305b\u3066\u767a\u706b\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n\n```javascript:index.html\n$('form#emit').submit(function(event) {\n    socket.emit('my event', {data: $('#emit_data').val()});\n    return false;\n});\n$('form#broadcast').submit(function(event) {\n    socket.emit('my broadcast event', {data: $('#broadcast_data').val()});\n    return false;\n});\n```\n\n\u7d50\u679c\u3068\u3057\u3066Python\u5074\u306e\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3066\n`my response`\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u706b\u3055\u305b\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u7d50\u679c\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\u307b\u3068\u3093\u3069\u540c\u3058\u30b3\u30fc\u30c9\u304c\u4e26\u3093\u3067\u3044\u307e\u3059\u304c\u3001`my broadcast event`\u306e\u5834\u5408\u306f\n`broadcast=True`\u3092`emit`\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3068\u3057\u3066\u7f6e\u304f\u3053\u3068\u3067\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3059\u3079\u3066\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u9001\u308b\u3088\u3046\u306b\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```python:app.py\n@socketio.on('my event', namespace='/test')\ndef test_message(message):\n    session['receive_count'] = session.get('receive_count', 0) + 1\n    emit('my response',                                               \n         {'data': message['data'], 'count': session['receive_count']})\n                                                                      \n@socketio.on('my broadcast event', namespace='/test')\ndef test_broadcast_message(message):\n    session['receive_count'] = session.get('receive_count', 0) + 1\n    emit('my response',\n         {'data': message['data'], 'count': session['receive_count']},\n         broadcast=True)\n```\n\n### ping/pong\u306e\u51e6\u7406\n\n'Average ping/pong latency'\u306e\u90e8\u5206\u306b\u306f\n\u30b5\u30fc\u30d0\u3068\u306e\u901a\u4fe1\u306e\u3084\u308a\u3068\u308a\u306b\u3069\u308c\u3060\u3051\u30ec\u30a4\u30c6\u30f3\u30b7\u304c\u3042\u308b\u304b\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u306f1\u79d2\u3054\u3068\u306b\u901a\u4fe1\u306e\u958b\u59cb\u6642\u9593\u3092\u8a18\u9332\u3057\n`my ping`\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u706b\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n`ping_pong_times`\u5909\u6570\u306f\u904e\u53bb\u306e\u901a\u4fe1\u3092\u683c\u7d0d\u3059\u308b\u305f\u3081\u306e\u914d\u5217\u3067\u3059\u3002\n\n```javascript:index.html\nvar ping_pong_times = [];\nvar start_time;\nwindow.setInterval(function() {\n    start_time = (new Date).getTime();\n    socket.emit('my ping');\n}, 1000);\n```\n\nPython\u5074\u306f`my ping`\u30a4\u30d9\u30f3\u30c8\u306e\u767a\u706b\u3092\u53d7\u3051\u3066\u3001`my pong`\u3092\u767a\u706b\u3055\u305b\u308b\u306e\u307f\u3067\u3059\u3002\n\n```python:app.py\n@socketio.on('my ping', namespace='/test')\ndef ping_pong():\n    emit('my pong')\n```\n\nJavaScript\u5074\u3067\u306f`my pong`\u304c\u767a\u706b\u3057\u305f\u6642\u9593\u3068\u958b\u59cb\u6642\u9593\u306e\u5dee\u3092\u53d6\u308a\n\u904e\u53bb\u306e\u901a\u4fe1\u8a18\u9332\u3092\u5e73\u5747\u3057\u305f\u3082\u306e\u3092'Average ping/pong latency'\u306b\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```javascript:app.py\nsocket.on('my pong', function() {\n    var latency = (new Date).getTime() - start_time;\n    ping_pong_times.push(latency);\n    ping_pong_times = ping_pong_times.slice(-30); // keep last 30 samples\n    var sum = 0;\n    for (var i = 0; i < ping_pong_times.length; i++)\n        sum += ping_pong_times[i];\n    $('#ping-pong').text(Math.round(10 * sum / ping_pong_times.length) / 10);\n});\n```\n\n### \u30b5\u30fc\u30d0\u5074\u3067\u306e\u30a4\u30d9\u30f3\u30c8\u751f\u6210\u51e6\u7406\n\n\u3053\u3053\u307e\u3067\u306e\u51e6\u7406\u306f\u3059\u3079\u3066\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\uff08JavaScript\uff09\u304c\u8d77\u70b9\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u304c\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u304a\u3044\u3066\u3001\u30b5\u30fc\u30d0\u5074\u304b\u3089\u60c5\u5831\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u305f\u3044\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u3001`connect`\u30a4\u30d9\u30f3\u30c8\u306e\u30cf\u30f3\u30c9\u30e9\u306b\u4ee5\u4e0b\u306e\u8a18\u8ff0\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n```python:app.py\nthread = socketio.start_background_task(target=background_thread)\n```\n\n`target`\u3068\u306a\u3063\u3066\u3044\u308b`background_thread`\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```python:app.py\ndef background_thread():\n    \"\"\"Example of how to send server generated events to clients.\"\"\"     \n    count = 0\n    while True:\n        socketio.sleep(10)\n        count += 1\n        socketio.emit('my response',\n                      {'data': 'Server generated event', 'count': count},\n                      namespace='/test')\n```\n\n10\u79d2\u3054\u3068\u306b`my response`\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u706b\u3055\u305b\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306e\u81ea\u52d5\u66f4\u65b0\u3084\u3001\u7f8e\u4eba\u6642\u8a08\u306e\u3088\u3046\u306a\u30a2\u30d7\u30ea\u3092\u5b9f\u88c5\u3059\u308b\u969b\u306b\u6709\u7528\u305d\u3046\u3067\u3059\u3002\n\n## \u3080\u3059\u3073\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u843d\u3068\u3057\u3066\u8aad\u3093\u3060\u3060\u3051\u3067\u3059\u304c\u3001\u305f\u3081\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3053\u308c\u3092\u5c11\u3057\u6539\u5909\u3059\u308b\u3060\u3051\u3067\u3082\u8272\u3005\u4f5c\u308c\u305d\u3046\u3067\u3059\u306d\u3002\n\n\u3053\u308c\u304b\u3089\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5168\u4f53\u306e\u8aad\u307f\u8fbc\u307f\u306f\u5fc5\u8981\u306b\u306a\u308b\u3082\u306e\u306e\n\u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u3092\u542b\u3081\u3066\u3082\u5c0f\u3055\u3081\u3067\u3001\u3068\u3063\u3064\u304d\u3084\u3059\u3044\u306e\u306fFlask\u306e\u9b45\u529b\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["Python", "websocket", "Flask"]}