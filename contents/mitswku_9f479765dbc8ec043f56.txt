{"context": "\u672c\u65e5\u7d39\u4ecb\u3059\u308b\u306e\u306f\u4ee5\u4e0b5\u9805\u76ee\n\n\u5bfe\u79f0\u6697\u53f7\uff08\u5171\u901a\u9375\u6697\u53f7\uff09\n\u516c\u958b\u9375\u6697\u53f7\n\u4e00\u65b9\u5411\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\n\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\n\u8a3c\u660e\u66f8\n\n\n\u5bfe\u79f0\u6697\u53f7\uff08\u5171\u901a\u9375\u6697\u53f7\uff09\n\u4e00\u3064\u306e\u9375\u3067\u6697\u53f7\u5316\u3057\u3001\u540c\u3058\u9375\u3067\u5fa9\u53f7\u5316\u3059\u308b\nrequire 'openssl'\n\n# \u6697\u53f7\u5316\u3057\u305f\u3044\u30c7\u30fc\u30bf\u3092\u7528\u610f\ndata = '*secret data*'\n\n# 32byte\u5171\u6709\u9375\u300116byte\u521d\u671f\u5316\u30d9\u30af\u30c8\u30eb\u3092\u6697\u53f7\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u6c42\u3081\u308b\u9577\u3055\u3067\u9069\u5f53\u306b\u7528\u610f\u3059\u308b\nkey = 'a' * 32\niv = 'i' * 16\n\n# \u6697\u53f7\u5316\nenc = OpenSSL::Cipher.new('AES-256-CBC')\nenc.encrypt\nenc.key = key\nenc.iv = iv\nencrypted_data = enc.update(data) + enc.final\n\n# \u5fa9\u53f7\u5316\ndec = OpenSSL::Cipher.new('AES-256-CBC')\ndec.decrypt\ndec.key = key\ndec.iv = iv\ndecrypted_data = dec.update(encrypted_data) + dec.final\n\n\u307e\u3042\u3001\u305d\u3046\u3060\u3088\u306d\u3002\n\n\u516c\u958b\u9375\u6697\u53f7\n\n\u9375\u914d\u9001\u554f\u984c\u3068\u306f\n\u5b89\u5168\u306a\u5171\u6709\u9375\u6697\u53f7\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u3063\u3066\u3044\u308b\u3002\n\u3057\u304b\u3057\u3001\u9375\u3092\u9001\u3089\u306a\u3051\u308c\u3070\u3001\u53d7\u4fe1\u8005\u306f\u5fa9\u53f7\u5316\u3067\u304d\u306a\u3044\u3002\u9375\u3092\u9001\u308c\u3070\u3001\u76d7\u8074\u8005\u3082\u5fa9\u53f7\u5316\u3067\u304d\u308b\u3002\n\u9375\u3092\u9001\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u306b\u3001\u9375\u3092\u9001\u3063\u3066\u3044\u306f\u3044\u3051\u306a\u3044\u3002\u3053\u308c\u304c\u3001\u5bfe\u79f0\u6697\u53f7\u306e\u9375\u914d\u9001\u554f\u984c\u3002\n\n\u516c\u958b\u9375\u6697\u53f7\n\u516c\u958b\u9375\u3067\u6697\u53f7\u5316\u3057\u3001\u79d8\u5bc6\u9375\u3067\u5fa9\u53f7\u5316\u3059\u308b\u3002\u6697\u53f7\u5316\u3059\u308b\u9375\u3068\u5fa9\u53f7\u5316\u3059\u308b\u9375\u304c\u7570\u306a\u308b\u3002\n# \u9375\u5bfe\u3092\u751f\u6210\nrsa = OpenSSL::PKey::RSA.generate(2048)\n\n# \u6697\u53f7\u5316\u3059\u308b\u30c7\u30fc\u30bf\ndata = '*secret data*'\n\n# \u79d8\u5bc6\u9375\u3067\u6697\u53f7\u5316\nencrypt_data = rsa.public_encrypt(data)\n# \u516c\u958b\u9375\u3067\u5fa9\u53f7\u5316\ndecrypted_data = rsa.private_decrypt(encrypt_data)\n\n# \u516c\u958b\u9375\u3092pem\u5f62\u5f0f\u3067\u8868\u793a\nputs rsa.public_key.export\n\n\u3088\u304f\u898b\u308b\u3084\u3064\u3002\u3082\u3061\u308d\u3093\u79d8\u5bc6\u9375\u3082export\u3067\u304d\u308b\u3002\n-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw5MjWr3cTLnLN2rZ5gM3\nIniiY2IpE/qZXDvcojRqEoTZ6seZnCNG8oJD9d8L0G1WxJAh73GyStJrheiDnADf\nWkJR+354kDx4vyQhKzfisMEgecWG/Yu4G4Y29SSkPYlNd4myZ8et0xV1f1dShMeZ\nqaZsgRofuEAvtavGus5LMgLTqaoCcSvnGtDtjWDgueoXr+MfRch+Lb1OoSAcmWHe\nZGIS/ZkI6nuf/omPH3687agti7NH2XM3t4EDMMCXgeBfB1aXUUV8WPAkGCTXYvjN\nBWKQgJbQ493Vris2wNjSZq7WPtwyI/7K0cqp+Y6f9bm55s8rvaHHsPDUu1vNfi9N\nTwIDAQAB\n-----END PUBLIC KEY-----\n\n\n\u4e00\u65b9\u5411\u30cf\u30c3\u30b7\u30e5\n\u4efb\u610f\u9577\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u56fa\u5b9a\u9577\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u8a08\u7b97\u3059\u308b\n\nMD4, MD5\nSHA-1\nSHA-2 (SHA-256, SHA-384, SHA-512)\n\nMD4, MD5, SHA-1 \u306e\u5f37\u885d\u7a81\u8010\u6027\u306f\u3059\u3067\u306b\u7834\u3089\u308c\u3066\u3044\u308b\u3002\nrequire 'openssl'\n\ndata = 'hello'\ndigest = OpenSSL::Digest.new('sha256')\ndigest.update(data)\nputs digest.hexdigest()\n\n8byte\u306e\u5165\u529b\u3067\u308280Gbyte\u306e\u5165\u529b\u3067\u3082\u540c\u3058\u9577\u3055\u306e\u30d0\u30a4\u30ca\u30ea\u304c\u751f\u6210\u3067\u304d\u308b\n2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824\n\n\u9375\u3042\u308a\nkey = 'password'\ndigest = OpenSSL::HMAC.new(key, 'sha256')\ndigest.update(data)\nputs digest.hexdigest()\n\n7ae615e698567e5e1512dd8140e740bd4d65dfa4db195d80ca327de6302b4a63\n\n\n\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\n\u3053\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u66f8\u3044\u305f\u306e\u306f\u8ab0\u304b\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u79d8\u5bc6\u9375\u3067\u6697\u53f7\u5316\u3059\u308b\u3002\u305d\u308c\u304c\u7f72\u540d\u3002\n\u7f72\u540d\u3092\u516c\u958b\u9375\u3067\u5fa9\u53f7\u5316\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5f97\u308b\n\uff12\u3064\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6bd4\u8f03\u3059\u308b\u3053\u3068\u3067\u6539\u7ac4\u3092\u691c\u77e5\u3067\u304d\u308b\n\n# \u9375\u5bfe\u3092\u751f\u6210\nrsa = OpenSSL::PKey::RSA.generate(2048)\n\n# \u30e1\u30c3\u30bb\u30fc\u30b8\ndata = 'foobar'\n\n# \u79d8\u5bc6\u9375\u3067\u7f72\u540d\nsign = rsa.sign('sha256', data)\n\n# \u516c\u958b\u9375\u3067\u691c\u8a3c\npp rsa.public_key.verify('sha256', sign, data)\n\n# \u4e0d\u6b63\u306a\u30c7\u30fc\u30bf\u3092\u691c\u8a3c\npp rsa.public_key.verify('sha256', sign, 'foobarbaz')\n\ntrue\nfalse\n\n\n\u8a3c\u660e\u66f8\n\u516c\u958b\u9375\u3078\u306e\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\n\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\u306e\u524d\u63d0\u306f\u3001\u300c\u7f72\u540d\u306e\u691c\u8a3c\u3092\u884c\u3046\u3068\u304d\u306b\u7528\u3044\u308b\u516c\u958b\u9375\u304c\u3001\u672c\u7269\u306e\u9001\u4fe1\u8005\u306e\u516c\u958b\u9375\u3067\u3042\u308b\u3053\u3068\u300d\u3002\n\u81ea\u5206\u306e\u8a3c\u660e\u66f8\u3092\u4ed6\u306e\u8a3c\u660e\u66f8\u306b\u8a3c\u660e\u3057\u3066\u3082\u3089\u3046\u3002\n\u6700\u7d42\u7684\u306b\u306f\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u8a3c\u660e\u66f8\u306b\u8a3c\u660e\u3057\u3066\u3082\u3089\u3046\u3002\nhttps\u306e\u4f8b\u3092\u898b\u3066\u307f\u308b\u3002\nipa\u306e\u30b5\u30fc\u30d0\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3002\u4eca\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d0\u30fc\u304c\u672c\u5f53\u306bipa\u306e\u30b5\u30fc\u30d0\u30fc\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\n\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u3092\u4f7f\u3046\u3002\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u306b\u306f\u3001www.ipa.go.jp\u306e\u8a18\u8f09\u304c\u3042\u308b\u3002\u3053\u306e\u8a3c\u660e\u66f8\u306f\u672c\u7269\u304b\uff1f\n# ipa\u306e\u30b5\u30a4\u30c8\u306bssl\u3067\u63a5\u7d9a\nsoc = TCPSocket.new('www.ipa.go.jp', 443)\nssl = OpenSSL::SSL::SSLSocket.new(soc)\nssl.connect\n\n# \u63a5\u7d9a\u76f8\u624b\u306e\u8a3c\u660e\u66f8\u304b\u3089\u30eb\u30fc\u30c8 CA \u306e\u8a3c\u660e\u66f8\u307e\u3067\u306e\u30ea\u30b9\u30c8\n# [\u63a5\u7d9a\u76f8\u624b\u306e\u8a3c\u660e\u66f8, \u4e0b\u4f4dCA\u306e\u8a3c\u660e\u66f8,... \u4e2d\u9593CA\u306e\u8a3c\u660e\u66f8]\nssl.peer_cert_chain.each do |cert|\n  # \u767a\u884c\u8005\u3092\u51fa\u529b\n  pp cert.issuer\nend\n\nipa\u306e\u8a3c\u660e\u66f8\u306fSECOM\u767a\u884c\u306eEV\u8a3c\u660e\u66f8\u30682\u3064\u306e\u4e2d\u9593CA\u306e\u8a3c\u660e\u66f8\u3002\n#<OpenSSL::X509::Name CN=SECOM Passport for Web EV 2.0 CA,O=SECOM Trust Systems CO.\\,LTD.,C=JP>\n#<OpenSSL::X509::Name OU=Security Communication RootCA2,O=SECOM Trust Systems CO.\\,LTD.,C=JP>\n#<OpenSSL::X509::Name OU=Security Communication RootCA1,O=SECOM Trust.net,C=JP>\n\nipa\u306e\u8a3c\u660e\u66f8\u3092\u9806\u306b\u691c\u8a3c\u3057\u3066\u307f\u308b\ncert1 = nil\nssl.peer_cert_chain.each do |cert2|\n  unless cert1.nil?\n    pp cert1.verify(cert2.public_key)\n  end\n\n  cert1 = cert2\nend\n\n\u691c\u8a3c\u6210\u529f\u3002\ntrue\ntrue\n\n\u6700\u5f8c\u306e\u4e2d\u9593CA\u306e\u8a3c\u660e\u66f8\u3060\u3051\u691c\u8a3c\u3055\u308c\u3066\u3044\u306a\u3044\u3002\n# \u4e2d\u9593CA\u306e\u8a3c\u660e\u66f8\nmid_cert = ssl.peer_cert_chain.last\n\nOpenSSL\u4ed8\u5c5e\u306eroot\u8a3c\u660e\u66f8\u3092\u8aad\u307f\u8fbc\u3093\u3067\u307f\u308b\n\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u8907\u6570\u306eroot\u8a3c\u660e\u66f8\u304c\u9023\u7d50\u3057\u3066\u3044\u308b\u306e\u3067\u5206\u5272\u3002\ncert_file  = OpenSSL::X509::DEFAULT_CERT_FILE\n\ns = '-----END CERTIFICATE-----'\nroot_certs = File.read(cert_file).split(s).map {|p| p + s}.map do |pem|\n  OpenSSL::X509::Certificate.new(pem)\nend\n\n\u78ba\u8a8d\u3057\u305f\u74b0\u5883\u3067\u306f\u3001164\u500b\u306eroot\u8a3c\u660e\u66f8\u304c\u5165\u3063\u3066\u3044\u305f\u3002\n\u305d\u306e\u4e2d\u306b\u6700\u5f8c\u306e\u4e2d\u9593CA\u306e\u8a3c\u660e\u66f8\u3092\u691c\u8a3c\u3067\u304d\u308broot\u8a3c\u660e\u66f8\u304c\u5b58\u5728\u3059\u308b\u304b\u78ba\u8a8d\u3059\u308b\nroot_certs.each do |root_cert|\n  begin\n    if mid_cert.verify(root_cert.public_key)\n       # \u691c\u8a3c\u304c\u6210\u529f\u3057\u305f\u767a\u884c\u8005\u306e\u60c5\u5831\u3092\u8868\u793a\n       pp root_cert.issuer\n    end\n  rescue OpenSSL::X509::CertificateError\n  end\nend\n\n\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\n#<OpenSSL::X509::Name OU=Security Communication RootCA1,O=SECOM Trust.net,C=JP>\n\n\u3053\u3093\u306a\u611f\u3058\u3002\n\n\u307e\u3068\u3081\n\n\u5bfe\u79f0\u6697\u53f7\uff08\u5171\u901a\u9375\u6697\u53f7\uff09\n\u516c\u958b\u9375\u6697\u53f7\n\u4e00\u65b9\u5411\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\n\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\n\u8a3c\u660e\u66f8\n\n\u672c\u65e5\u7d39\u4ecb\u3059\u308b\u306e\u306f\u4ee5\u4e0b5\u9805\u76ee\n\n* \u5bfe\u79f0\u6697\u53f7\uff08\u5171\u901a\u9375\u6697\u53f7\uff09\n* \u516c\u958b\u9375\u6697\u53f7\n* \u4e00\u65b9\u5411\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\n* \u30c7\u30b8\u30bf\u30eb\u7f72\u540d\n* \u8a3c\u660e\u66f8\n\n## \u5bfe\u79f0\u6697\u53f7\uff08\u5171\u901a\u9375\u6697\u53f7\uff09\n\u4e00\u3064\u306e\u9375\u3067\u6697\u53f7\u5316\u3057\u3001\u540c\u3058\u9375\u3067\u5fa9\u53f7\u5316\u3059\u308b\n\n```\nrequire 'openssl'\n\n# \u6697\u53f7\u5316\u3057\u305f\u3044\u30c7\u30fc\u30bf\u3092\u7528\u610f\ndata = '*secret data*'\n\n# 32byte\u5171\u6709\u9375\u300116byte\u521d\u671f\u5316\u30d9\u30af\u30c8\u30eb\u3092\u6697\u53f7\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u6c42\u3081\u308b\u9577\u3055\u3067\u9069\u5f53\u306b\u7528\u610f\u3059\u308b\nkey = 'a' * 32\niv = 'i' * 16\n\n# \u6697\u53f7\u5316\nenc = OpenSSL::Cipher.new('AES-256-CBC')\nenc.encrypt\nenc.key = key\nenc.iv = iv\nencrypted_data = enc.update(data) + enc.final\n\n# \u5fa9\u53f7\u5316\ndec = OpenSSL::Cipher.new('AES-256-CBC')\ndec.decrypt\ndec.key = key\ndec.iv = iv\ndecrypted_data = dec.update(encrypted_data) + dec.final\n```\n\n\u307e\u3042\u3001\u305d\u3046\u3060\u3088\u306d\u3002\n\n## \u516c\u958b\u9375\u6697\u53f7\n\n### \u9375\u914d\u9001\u554f\u984c\u3068\u306f\n\u5b89\u5168\u306a\u5171\u6709\u9375\u6697\u53f7\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u3063\u3066\u3044\u308b\u3002\n\u3057\u304b\u3057\u3001\u9375\u3092\u9001\u3089\u306a\u3051\u308c\u3070\u3001\u53d7\u4fe1\u8005\u306f\u5fa9\u53f7\u5316\u3067\u304d\u306a\u3044\u3002\u9375\u3092\u9001\u308c\u3070\u3001\u76d7\u8074\u8005\u3082\u5fa9\u53f7\u5316\u3067\u304d\u308b\u3002\n\u9375\u3092\u9001\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u306b\u3001\u9375\u3092\u9001\u3063\u3066\u3044\u306f\u3044\u3051\u306a\u3044\u3002\u3053\u308c\u304c\u3001\u5bfe\u79f0\u6697\u53f7\u306e\u9375\u914d\u9001\u554f\u984c\u3002\n\n### \u516c\u958b\u9375\u6697\u53f7\n\u516c\u958b\u9375\u3067\u6697\u53f7\u5316\u3057\u3001\u79d8\u5bc6\u9375\u3067\u5fa9\u53f7\u5316\u3059\u308b\u3002\u6697\u53f7\u5316\u3059\u308b\u9375\u3068\u5fa9\u53f7\u5316\u3059\u308b\u9375\u304c\u7570\u306a\u308b\u3002\n\n```\n# \u9375\u5bfe\u3092\u751f\u6210\nrsa = OpenSSL::PKey::RSA.generate(2048)\n\n# \u6697\u53f7\u5316\u3059\u308b\u30c7\u30fc\u30bf\ndata = '*secret data*'\n\n# \u79d8\u5bc6\u9375\u3067\u6697\u53f7\u5316\nencrypt_data = rsa.public_encrypt(data)\n# \u516c\u958b\u9375\u3067\u5fa9\u53f7\u5316\ndecrypted_data = rsa.private_decrypt(encrypt_data)\n```\n\n```\n# \u516c\u958b\u9375\u3092pem\u5f62\u5f0f\u3067\u8868\u793a\nputs rsa.public_key.export\n```\n\n\u3088\u304f\u898b\u308b\u3084\u3064\u3002\u3082\u3061\u308d\u3093\u79d8\u5bc6\u9375\u3082export\u3067\u304d\u308b\u3002\n\n```\n-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw5MjWr3cTLnLN2rZ5gM3\nIniiY2IpE/qZXDvcojRqEoTZ6seZnCNG8oJD9d8L0G1WxJAh73GyStJrheiDnADf\nWkJR+354kDx4vyQhKzfisMEgecWG/Yu4G4Y29SSkPYlNd4myZ8et0xV1f1dShMeZ\nqaZsgRofuEAvtavGus5LMgLTqaoCcSvnGtDtjWDgueoXr+MfRch+Lb1OoSAcmWHe\nZGIS/ZkI6nuf/omPH3687agti7NH2XM3t4EDMMCXgeBfB1aXUUV8WPAkGCTXYvjN\nBWKQgJbQ493Vris2wNjSZq7WPtwyI/7K0cqp+Y6f9bm55s8rvaHHsPDUu1vNfi9N\nTwIDAQAB\n-----END PUBLIC KEY-----\n```\n\n## \u4e00\u65b9\u5411\u30cf\u30c3\u30b7\u30e5\n\u4efb\u610f\u9577\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u56fa\u5b9a\u9577\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u8a08\u7b97\u3059\u308b\n\n* MD4, MD5\n* SHA-1\n* SHA-2 (SHA-256, SHA-384, SHA-512)\n\nMD4, MD5, SHA-1 \u306e\u5f37\u885d\u7a81\u8010\u6027\u306f\u3059\u3067\u306b\u7834\u3089\u308c\u3066\u3044\u308b\u3002\n\n```\nrequire 'openssl'\n\ndata = 'hello'\ndigest = OpenSSL::Digest.new('sha256')\ndigest.update(data)\nputs digest.hexdigest()\n```\n\n8byte\u306e\u5165\u529b\u3067\u308280Gbyte\u306e\u5165\u529b\u3067\u3082\u540c\u3058\u9577\u3055\u306e\u30d0\u30a4\u30ca\u30ea\u304c\u751f\u6210\u3067\u304d\u308b\n\n```\n2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73043362938b9824\n```\n\n\u9375\u3042\u308a\n\n```\nkey = 'password'\ndigest = OpenSSL::HMAC.new(key, 'sha256')\ndigest.update(data)\nputs digest.hexdigest()\n```\n\n```\n7ae615e698567e5e1512dd8140e740bd4d65dfa4db195d80ca327de6302b4a63\n```\n\n## \u30c7\u30b8\u30bf\u30eb\u7f72\u540d\n\u3053\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u66f8\u3044\u305f\u306e\u306f\u8ab0\u304b\n\n* \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u79d8\u5bc6\u9375\u3067\u6697\u53f7\u5316\u3059\u308b\u3002\u305d\u308c\u304c\u7f72\u540d\u3002\n* \u7f72\u540d\u3092\u516c\u958b\u9375\u3067\u5fa9\u53f7\u5316\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5f97\u308b\n* \uff12\u3064\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6bd4\u8f03\u3059\u308b\u3053\u3068\u3067\u6539\u7ac4\u3092\u691c\u77e5\u3067\u304d\u308b\n\n```\n# \u9375\u5bfe\u3092\u751f\u6210\nrsa = OpenSSL::PKey::RSA.generate(2048)\n\n# \u30e1\u30c3\u30bb\u30fc\u30b8\ndata = 'foobar'\n\n# \u79d8\u5bc6\u9375\u3067\u7f72\u540d\nsign = rsa.sign('sha256', data)\n\n# \u516c\u958b\u9375\u3067\u691c\u8a3c\npp rsa.public_key.verify('sha256', sign, data)\n\n# \u4e0d\u6b63\u306a\u30c7\u30fc\u30bf\u3092\u691c\u8a3c\npp rsa.public_key.verify('sha256', sign, 'foobarbaz')\n```\n\n```\ntrue\nfalse\n```\n\n## \u8a3c\u660e\u66f8\n\u516c\u958b\u9375\u3078\u306e\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\n\n\u30c7\u30b8\u30bf\u30eb\u7f72\u540d\u306e\u524d\u63d0\u306f\u3001\u300c\u7f72\u540d\u306e\u691c\u8a3c\u3092\u884c\u3046\u3068\u304d\u306b\u7528\u3044\u308b\u516c\u958b\u9375\u304c\u3001\u672c\u7269\u306e\u9001\u4fe1\u8005\u306e\u516c\u958b\u9375\u3067\u3042\u308b\u3053\u3068\u300d\u3002\n\n\u81ea\u5206\u306e\u8a3c\u660e\u66f8\u3092\u4ed6\u306e\u8a3c\u660e\u66f8\u306b\u8a3c\u660e\u3057\u3066\u3082\u3089\u3046\u3002\n\u6700\u7d42\u7684\u306b\u306f\u3001\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u8a3c\u660e\u66f8\u306b\u8a3c\u660e\u3057\u3066\u3082\u3089\u3046\u3002\n\nhttps\u306e\u4f8b\u3092\u898b\u3066\u307f\u308b\u3002\nipa\u306e\u30b5\u30fc\u30d0\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3002\u4eca\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d0\u30fc\u304c\u672c\u5f53\u306bipa\u306e\u30b5\u30fc\u30d0\u30fc\u304b\u3069\u3046\u304b\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\n\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u3092\u4f7f\u3046\u3002\u30b5\u30fc\u30d0\u30fc\u8a3c\u660e\u66f8\u306b\u306f\u3001www.ipa.go.jp\u306e\u8a18\u8f09\u304c\u3042\u308b\u3002\u3053\u306e\u8a3c\u660e\u66f8\u306f\u672c\u7269\u304b\uff1f\n\n```\n# ipa\u306e\u30b5\u30a4\u30c8\u306bssl\u3067\u63a5\u7d9a\nsoc = TCPSocket.new('www.ipa.go.jp', 443)\nssl = OpenSSL::SSL::SSLSocket.new(soc)\nssl.connect\n\n# \u63a5\u7d9a\u76f8\u624b\u306e\u8a3c\u660e\u66f8\u304b\u3089\u30eb\u30fc\u30c8 CA \u306e\u8a3c\u660e\u66f8\u307e\u3067\u306e\u30ea\u30b9\u30c8\n# [\u63a5\u7d9a\u76f8\u624b\u306e\u8a3c\u660e\u66f8, \u4e0b\u4f4dCA\u306e\u8a3c\u660e\u66f8,... \u4e2d\u9593CA\u306e\u8a3c\u660e\u66f8]\nssl.peer_cert_chain.each do |cert|\n  # \u767a\u884c\u8005\u3092\u51fa\u529b\n  pp cert.issuer\nend\n```\n\nipa\u306e\u8a3c\u660e\u66f8\u306fSECOM\u767a\u884c\u306eEV\u8a3c\u660e\u66f8\u30682\u3064\u306e\u4e2d\u9593CA\u306e\u8a3c\u660e\u66f8\u3002\n\n```\n#<OpenSSL::X509::Name CN=SECOM Passport for Web EV 2.0 CA,O=SECOM Trust Systems CO.\\,LTD.,C=JP>\n#<OpenSSL::X509::Name OU=Security Communication RootCA2,O=SECOM Trust Systems CO.\\,LTD.,C=JP>\n#<OpenSSL::X509::Name OU=Security Communication RootCA1,O=SECOM Trust.net,C=JP>\n```\n\nipa\u306e\u8a3c\u660e\u66f8\u3092\u9806\u306b\u691c\u8a3c\u3057\u3066\u307f\u308b\n\n```\ncert1 = nil\nssl.peer_cert_chain.each do |cert2|\n  unless cert1.nil?\n    pp cert1.verify(cert2.public_key)\n  end\n\n  cert1 = cert2\nend\n```\n\n\u691c\u8a3c\u6210\u529f\u3002\n\n```\ntrue\ntrue\n```\n\n\u6700\u5f8c\u306e\u4e2d\u9593CA\u306e\u8a3c\u660e\u66f8\u3060\u3051\u691c\u8a3c\u3055\u308c\u3066\u3044\u306a\u3044\u3002\n\n```\n# \u4e2d\u9593CA\u306e\u8a3c\u660e\u66f8\nmid_cert = ssl.peer_cert_chain.last\n```\n\nOpenSSL\u4ed8\u5c5e\u306eroot\u8a3c\u660e\u66f8\u3092\u8aad\u307f\u8fbc\u3093\u3067\u307f\u308b\n\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u8907\u6570\u306eroot\u8a3c\u660e\u66f8\u304c\u9023\u7d50\u3057\u3066\u3044\u308b\u306e\u3067\u5206\u5272\u3002\n\n```\ncert_file  = OpenSSL::X509::DEFAULT_CERT_FILE\n\ns = '-----END CERTIFICATE-----'\nroot_certs = File.read(cert_file).split(s).map {|p| p + s}.map do |pem|\n  OpenSSL::X509::Certificate.new(pem)\nend\n```\n\n\u78ba\u8a8d\u3057\u305f\u74b0\u5883\u3067\u306f\u3001164\u500b\u306eroot\u8a3c\u660e\u66f8\u304c\u5165\u3063\u3066\u3044\u305f\u3002\n\u305d\u306e\u4e2d\u306b\u6700\u5f8c\u306e\u4e2d\u9593CA\u306e\u8a3c\u660e\u66f8\u3092\u691c\u8a3c\u3067\u304d\u308broot\u8a3c\u660e\u66f8\u304c\u5b58\u5728\u3059\u308b\u304b\u78ba\u8a8d\u3059\u308b\n\n```\nroot_certs.each do |root_cert|\n  begin\n    if mid_cert.verify(root_cert.public_key)\n       # \u691c\u8a3c\u304c\u6210\u529f\u3057\u305f\u767a\u884c\u8005\u306e\u60c5\u5831\u3092\u8868\u793a\n       pp root_cert.issuer\n    end\n  rescue OpenSSL::X509::CertificateError\n  end\nend\n```\n\n\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\n\n```\n#<OpenSSL::X509::Name OU=Security Communication RootCA1,O=SECOM Trust.net,C=JP>\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3002\n\n## \u307e\u3068\u3081\n\n* \u5bfe\u79f0\u6697\u53f7\uff08\u5171\u901a\u9375\u6697\u53f7\uff09\n* \u516c\u958b\u9375\u6697\u53f7\n* \u4e00\u65b9\u5411\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\n* \u30c7\u30b8\u30bf\u30eb\u7f72\u540d\n* \u8a3c\u660e\u66f8\n\n\n", "tags": ["\u6697\u53f7", "openssl"]}