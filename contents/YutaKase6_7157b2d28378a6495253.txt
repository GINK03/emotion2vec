{"context": "\n\n\u6982\u8981\nJava\u3067\"Prototype\u30d1\u30bf\u30fc\u30f3\"\n\"\u30af\u30e9\u30b9\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\"\n\u3059\u308b\u306e\u3067\u306f\u306a\u304f\n\"\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\"\n\u3059\u308b\u3002\n\n\u305d\u3082\u305d\u3082\n\u4f55\u306e\u30e1\u30ea\u30c3\u30c8\u304c\uff1f\n\u666e\u901a\u306b\u30af\u30e9\u30b9\u304b\u3089new\u3059\u308c\u3070\u3044\u3044\u3058\u3083\u3093\u3002\n\n\u4f7f\u7528\u5834\u9762\n\n\u985e\u4f3c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5fc5\u8981\n\n\n\u30af\u30e9\u30b9\u304b\u3089\u751f\u6210\u3059\u308b\u624b\u9806\u3092\u7c21\u7565\u5316\n\n\n\u7a2e\u985e\u304c\u591a\u3059\u304e\u3066\u30af\u30e9\u30b9\u306b\u307e\u3068\u3081\u3089\u308c\u306a\u3044\u5834\u5408\n\n\n\u5c11\u3057\u3060\u3051\u9055\u3046\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u305f\u3081\u306b\u30af\u30e9\u30b9\u3092\u5206\u5272\u3057\u306a\u304f\u3066\u6e08\u3080\n\u8a73\u3057\u304f\u306f\u5b9f\u88c5\u4f8b\u3067\n\n\n\u30af\u30e9\u30b9\u304b\u3089\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u304c\u96e3\u3057\u3044\u5834\u5408\n\n\n\u72b6\u614b\u304c\u8907\u96d1\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u591a\u3044\n\u30af\u30e9\u30b9\u304b\u3089\u751f\u6210\u3059\u308b\u306e\u304c\u3081\u3093\u3069\u304f\u3055\u3044\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u304c\u3059\u3054\u3044\u3053\u3068\u306b\u306a\u3063\u3061\u3083\u3046\n\n\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u751f\u6210\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5206\u3051\u305f\u3044\u5834\u5408\n\n\n\u5b9f\u88c5\u6982\u8981\n\n\nPrototype : \u62bd\u8c61\u30af\u30e9\u30b9\u3002\u30af\u30ed\u30fc\u30f3(\u81ea\u5206\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u8907\u88fd\u3092\u751f\u6210)\u3067\u304d\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\nConcretePrototype : \u5177\u8c61\u30af\u30e9\u30b9\u3002\u5b9f\u969b\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30b3\u30d4\u30fc\u7b49\u3001\u30af\u30ed\u30fc\u30f3\u3092\u5b9f\u88c5\u3059\u308b\n\n\n\u5b9f\u88c5\u4f8b\n\u69d8\u3005\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3002\n\u3057\u304b\u3057\u3001\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u306e\u306f\u5927\u5909\u3002\u5b9f\u969b\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540c\u58eb\u306e\u5dee\u5206\u306f\u5c11\u306a\u3044\u3002\nPrototype\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u3002\n\u30af\u30e9\u30b9\u306f\u7d71\u4e00\u3057\u3001\u5dee\u5206\u3092\u72b6\u614b\u3067\u8868\u73fe\u3002\n\u305d\u308c\u3089\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30921\u3064\u305a\u3064\u751f\u6210\u3057\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3002\n\u4ee5\u964d\u306f\u3053\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u304b\u3089\u30af\u30ed\u30fc\u30f3\u3059\u308b\u3053\u3068\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u3002\n\u3053\u308c\u306b\u3088\u308a\u30af\u30e9\u30b9\u6570\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u4eca\u56de\u306e\u4f8b\u3067\u306f3\u7a2e\u985e\u306e\u30e2\u30c7\u30eb\u30922\u7a2e\u985e\u306e\u30af\u30e9\u30b9\u3067\u8868\u73fe\u3002\n\n\nProduct\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\n\u30af\u30ed\u30fc\u30f3\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092\u7ba1\u7406\u3059\u308b\u969b\u306f\u3001\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7528\u3044\u3066\u7ba1\u7406\u3059\u308b\u3002\n\u30b9\u30fc\u30d1\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u3057\u3066Cloneable\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6307\u5b9a\u3002\nCloneable\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u3064\u3044\u3066\u306f\u304a\u307e\u3051\u306b\u3066\u3002\n\nProduct.java\npackage framework;\n\npublic interface Product extends Cloneable{\n    public abstract void use(String s);\n    public abstract Product createClone();\n}\n\n\n\nManager\u30af\u30e9\u30b9\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7ba1\u7406\u3001\u8907\u88fd\u3092\u884c\u3046\u30af\u30e9\u30b9\u3002\n\u4eca\u56de\u306f\u3053\u306e\u30af\u30e9\u30b9\u3092\u901a\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30af\u30ed\u30fc\u30f3\u3092\u884c\u3046\u3002\n\u751f\u6210\u3057\u305f\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092HashMap\u306b\u767b\u9332\u3059\u308b\u3002\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u767b\u9332\u6642\u306e\u30ad\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30af\u30ed\u30fc\u30f3\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u5148\u307b\u3069\u5b9a\u7fa9\u3057\u305fProduct\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3068HashMap\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u4ee5\u5f8c\u306e\u5177\u8c61\u30af\u30e9\u30b9\u3068\u5b8c\u5168\u306b\u5207\u308a\u96e2\u3059\u3053\u3068\u304c\u3067\u304d\u3066\u3044\u308b\u3002\n\nManager.java\npackage framework;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Manager {\n    private Map<String, Product> showcase = new HashMap<>();\n\n    public void register(String name, Product proto) {\n        this.showcase.put(name, proto);\n    }\n\n    public Product create(String protoName) {\n        Product p = this.showcase.get(protoName);\n        return p.createClone();\n    }\n}\n\n\n\nMessageBox\u30af\u30e9\u30b9\u3001UnderlinePen\u30af\u30e9\u30b9\nProduct\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u5177\u8c61\u30af\u30e9\u30b9\u3002\n\u5171\u306b1\u3064\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u305d\u308c\u305e\u308c\u6301\u3061\u3001\u305d\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u4ee3\u5165\u3055\u308c\u305f\u6587\u5b57\u3092\u5229\u7528\u3057\u3066\u8868\u793a\u3092\u4fee\u98fe\u3059\u308b\u3002\nex.MessageBox\u30af\u30e9\u30b9\n*****************\n* Hello, world. *\n*****************\n\nex.UnderlinePen\u30af\u30e9\u30b9\n\"Hello, world.\"\n -------------\n\n\u4fee\u98fe\u3057\u305f\u3044\u6587\u5b57\u3054\u3068\u306b\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u518d\u5229\u7528\u304c\u53ef\u80fd\u3060\u304c\u3001\u30af\u30e9\u30b9\u6570\u304c\u81a8\u5927\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\n\u5dee\u5206\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u72b6\u614b\u3068\u3057\u3066\u8868\u73fe\u3001\u5229\u7528\u3057\u305f\u3044\u30d1\u30bf\u30fc\u30f3\u3092\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3068\u3057\u3066\u4fdd\u5b58\u3001\u8907\u88fd\u53ef\u80fd\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u540c\u69d8\u306e\u6319\u52d5\u3092\u30af\u30e9\u30b9\u6570\u3092\u5897\u3084\u3059\u3053\u3068\u306a\u304f\u5b9f\u88c5\u53ef\u80fd\u3002\n\u8907\u88fd\u306b\u306fJava\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308bclone\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3002\u8a73\u3057\u304f\u306f\u304a\u307e\u3051\u3067\u3002\n\nMessageBox.java\nimport framework.Product;\n\npublic class MessageBox implements Product {\n    private char decoChar;\n\n    public MessageBox(char decoChar) {\n        this.decoChar = decoChar;\n    }\n\n    @Override\n    public void use(String s) {\n        int length = s.getBytes().length;\n        this.printCharLine(length);\n        System.out.println(\"\");\n        System.out.println(this.decoChar + \" \" + s + \" \" + this.decoChar);\n        this.printCharLine(length);\n        System.out.println(\"\");\n    }\n\n    @Override\n    public Product createClone() {\n        Product p = null;\n        try {\n            p = (Product) this.clone();\n        } catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        return p;\n    }\n\n    private void printCharLine(int length) {\n        for (int i = 0; i < length + 4; i++) {\n            System.out.print(this.decoChar);\n        }\n    }\n}\n\n\n\nUnderlinePen.java\nimport framework.Product;\n\npublic class UnderlinePen implements Product {\n    private char ulChar;\n\n    public UnderlinePen(char ulChar) {\n        this.ulChar = ulChar;\n    }\n\n    @Override\n    public void use(String s) {\n        int length = s.getBytes().length;\n        System.out.println(\"\\\"\" + s + \"\\\"\");\n        System.out.print(\" \");\n        for (int i = 0; i < length; i++) {\n            System.out.print(ulChar);\n        }\n        System.out.println();\n    }\n\n    @Override\n    public Product createClone() {\n        Product p = null;\n        try {\n            p = (Product) this.clone();\n        } catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        return p;\n    }\n}\n\n\n\nMain\u30af\u30e9\u30b9\nManager\u30af\u30e9\u30b9\u3092\u7528\u3044\u3066\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092\u7ba1\u7406\u3002\n\u4ee5\u5f8c\u306fManager\u30af\u30e9\u30b9\u3092\u901a\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u3002\n\nMain.java\nimport framework.Manager;\nimport\u3000framework.Product;\n\npublic class Main {\n    public static void main(String[] args) {\n\n        // \u7ba1\u7406\u30af\u30e9\u30b9\n        Manager manager = new Manager();\n\n        // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u751f\u6210\n        UnderlinePen upen = new UnderlinePen('-');\n        MessageBox wbox = new MessageBox('*');\n        MessageBox sbox = new MessageBox('/');\n\n        // \u30ad\u30fc\u3068\u306a\u308b\u6587\u5b57\u5217\u3068\u5171\u306b\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092\u767b\u9332\n        manager.register(\"strong message\", upen);\n        manager.register(\"warning box\", wbox);\n        manager.register(\"slash box\", sbox);\n\n        // \u751f\u6210\n        // \u5b9f\u969b\u306b\u306f\u30ad\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u5bfe\u5fdc\u3059\u308b\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u304b\u3089\u8907\u88fd\n        Product p1 = manager.create(\"strong message\");\n        Product p2 = manager.create(\"warning box\");\n        Product p3 = manager.create(\"slash box\");\n\n        // \u5229\u7528\n        p1.use(\"Hello, world.\");\n        p2.use(\"Hello, world.\");\n        p3.use(\"Hello, world.\");\n    }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\"Hello, world.\"\n -------------\n*****************\n* Hello, world. *\n*****************\n/////////////////\n/ Hello, world. /\n/////////////////\n\n\n\n\u304a\u307e\u3051\n\nclone\u30e1\u30bd\u30c3\u30c9\nJava\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\u3002\n\u6b63\u78ba\u306b\u306fObject\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3002\u7d50\u679c\u3068\u3057\u3066\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u3067\u5229\u7528\u53ef\u80fd\u3002\n\nObject.java\n/**\n     * Creates and returns a copy of this object.  The precise meaning\n     * of \"copy\" may depend on the class of the object. The general\n     * intent is that, for any object {@code x}, the expression:\n     * <blockquote>\n     * <pre>\n     * x.clone() != x</pre></blockquote>\n     * will be true, and that the expression:\n     * <blockquote>\n     * <pre>\n     * x.clone().getClass() == x.getClass()</pre></blockquote>\n     * will be {@code true}, but these are not absolute requirements.\n     * While it is typically the case that:\n     * <blockquote>\n     * <pre>\n     * x.clone().equals(x)</pre></blockquote>\n     * will be {@code true}, this is not an absolute requirement.\n     * <p>\n     * By convention, the returned object should be obtained by calling\n     * {@code super.clone}.  If a class and all of its superclasses (except\n     * {@code Object}) obey this convention, it will be the case that\n     * {@code x.clone().getClass() == x.getClass()}.\n     * <p>\n     * By convention, the object returned by this method should be independent\n     * of this object (which is being cloned).  To achieve this independence,\n     * it may be necessary to modify one or more fields of the object returned\n     * by {@code super.clone} before returning it.  Typically, this means\n     * copying any mutable objects that comprise the internal \"deep structure\"\n     * of the object being cloned and replacing the references to these\n     * objects with references to the copies.  If a class contains only\n     * primitive fields or references to immutable objects, then it is usually\n     * the case that no fields in the object returned by {@code super.clone}\n     * need to be modified.\n     * <p>\n     * The method {@code clone} for class {@code Object} performs a\n     * specific cloning operation. First, if the class of this object does\n     * not implement the interface {@code Cloneable}, then a\n     * {@code CloneNotSupportedException} is thrown. Note that all arrays\n     * are considered to implement the interface {@code Cloneable} and that\n     * the return type of the {@code clone} method of an array type {@code T[]}\n     * is {@code T[]} where T is any reference or primitive type.\n     * Otherwise, this method creates a new instance of the class of this\n     * object and initializes all its fields with exactly the contents of\n     * the corresponding fields of this object, as if by assignment; the\n     * contents of the fields are not themselves cloned. Thus, this method\n     * performs a \"shallow copy\" of this object, not a \"deep copy\" operation.\n     * <p>\n     * The class {@code Object} does not itself implement the interface\n     * {@code Cloneable}, so calling the {@code clone} method on an object\n     * whose class is {@code Object} will result in throwing an\n     * exception at run time.\n     *\n     * @return     a clone of this instance.\n     * @throws  CloneNotSupportedException  if the object's class does not\n     *               support the {@code Cloneable} interface. Subclasses\n     *               that override the {@code clone} method can also\n     *               throw this exception to indicate that an instance cannot\n     *               be cloned.\n     * @see java.lang.Cloneable\n     */\n    protected native Object clone() throws CloneNotSupportedException;\n\n\nnative\u3063\u3066\u66f8\u3044\u3066\u3042\u308b\u3002JNI(Java Native Interface)\u3063\u3066\u3084\u3064\u3089\u3057\u3044\u3002\u4e2d\u8eab\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u30b3\u30fc\u30c9\u3067\u5b9f\u88c5\u3055\u308c\u3066\u308b\u3063\u307d\u3044\u3002\n\u3059\u3052\u30fc\u30b3\u30e1\u30f3\u30c8\u66f8\u3044\u3066\u3042\u308b\u3002\n x.clone() != x\n x.clone().getClass() == x.getClass()\n x.clone().equals(x)\nOverride\u3059\u308b\u306a\u3089\u30b3\u30b3\u3089\u3078\u3093\u3092\u6210\u308a\u7acb\u305f\u305b\u3066\u306d\u3063\u3066\u611f\u3058\u304b\u3002\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u4e0a\u3067\u91cd\u8981\u306a\u306e\u306f\n\nCloneable\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\u30b3\u30d4\u30fc\u306fshallow copy\n\n\u3063\u3066\u3068\u3053\u3002\n\nCloneable\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\n\u4e2d\u8eab\u7a7a\u3063\u307d\u3002\n\nCloneable.java\n/*\n * Copyright (c) 1995, 2004, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\n/**\n * A class implements the <code>Cloneable</code> interface to\n * indicate to the {@link java.lang.Object#clone()} method that it\n * is legal for that method to make a\n * field-for-field copy of instances of that class.\n * <p>\n * Invoking Object's clone method on an instance that does not implement the\n * <code>Cloneable</code> interface results in the exception\n * <code>CloneNotSupportedException</code> being thrown.\n * <p>\n * By convention, classes that implement this interface should override\n * <tt>Object.clone</tt> (which is protected) with a public method.\n * See {@link java.lang.Object#clone()} for details on overriding this\n * method.\n * <p>\n * Note that this interface does <i>not</i> contain the <tt>clone</tt> method.\n * Therefore, it is not possible to clone an object merely by virtue of the\n * fact that it implements this interface.  Even if the clone method is invoked\n * reflectively, there is no guarantee that it will succeed.\n *\n * @author  unascribed\n * @see     java.lang.CloneNotSupportedException\n * @see     java.lang.Object#clone()\n * @since   JDK1.0\n */\npublic interface Cloneable {\n}\n\n\n\u5358\u306b\u201dclone\u3057\u3066\u3044\u3044\u3088\uff01\"\u3063\u3066\u3044\u3046\u5370\u3002\nclone\u3057\u305f\u3044\u30af\u30e9\u30b9\u306b\u306f\u4ed8\u3051\u3066\u306d\u3063\u3066\u3044\u3046\u3002\n\u3053\u308c\u4ed8\u3051\u306a\u3044\u3067clone()\u547c\u3076\u3068clone()\u304cException\u3092\u5410\u304f\u3002\n\u5358\u7d14\u306b\u306a\u3093\u3067\u3082clone\u3067\u304d\u3061\u3083\u3046\u3068shallow copy\u7b49\u3067\u30d0\u30b0\u306e\u5143\u306b\u306a\u308b\u304b\u3089\u5358\u7d14\u306b\u306f\u51fa\u6765\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u308b\u306e\u304b\u306a\u3002\n\u3053\u3046\u3044\u3046\u4e2d\u8eab\u7a7a\u3063\u307d\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u3053\u3068\u3092marker interface \u3063\u3066\u8a00\u3046\u3089\u3057\u3044\u3002\nSerializable\u306a\u3093\u304b\u3082\u305d\u3046\u3089\u3057\u3044\u3002\u3078\u30fc\u3002\n\nshallow copy\nclone()\u3067\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3060\u3051\u306a\u3093\u3067\u3001\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u578b\u4ee5\u5916\u306f\u53c2\u7167\u304c\u30b3\u30d4\u30fc\u3055\u308c\u3061\u3083\u3046\u3088\u3002\n\u305d\u3046\u3044\u3046\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u3042\u308b\u306a\u3089\u3061\u3083\u3093\u3068Override\u3057\u3066\u306d\u3063\u3066\u3002\n\n\u307e\u3068\u3081\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3002\n\u601d\u3063\u305f\u3088\u308a\u5fdc\u7528\u304c\u52b9\u304d\u305d\u3046\u3002\n\u3053\u308c\u304b\u3089\u52c9\u5f37\u3059\u308b\u3044\u304f\u3064\u304b\u306e\u751f\u6210\u306b\u95a2\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3068\u306e\u4f4f\u307f\u5206\u3051\u304c\u96e3\u3057\u305d\u3046\u3002\n\nReference\nJava\u8a00\u8a9e\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u5165\u9580\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306b\u304a\u3051\u308b\u518d\u5229\u7528\u306e\u305f\u3081\u306e\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\n#\u6982\u8981\nJava\u3067\"Prototype\u30d1\u30bf\u30fc\u30f3\"\n\n\"\u30af\u30e9\u30b9\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\"\n\u3059\u308b\u306e\u3067\u306f\u306a\u304f\n\"\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\"\n\u3059\u308b\u3002\n\n#\u305d\u3082\u305d\u3082\n\u4f55\u306e\u30e1\u30ea\u30c3\u30c8\u304c\uff1f\n\u666e\u901a\u306b\u30af\u30e9\u30b9\u304b\u3089new\u3059\u308c\u3070\u3044\u3044\u3058\u3083\u3093\u3002\n\n\n#\u4f7f\u7528\u5834\u9762\n- \u985e\u4f3c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5fc5\u8981\n    - \u30af\u30e9\u30b9\u304b\u3089\u751f\u6210\u3059\u308b\u624b\u9806\u3092\u7c21\u7565\u5316\n- \u7a2e\u985e\u304c\u591a\u3059\u304e\u3066\u30af\u30e9\u30b9\u306b\u307e\u3068\u3081\u3089\u308c\u306a\u3044\u5834\u5408\n    - \u5c11\u3057\u3060\u3051\u9055\u3046\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u305f\u3081\u306b\u30af\u30e9\u30b9\u3092\u5206\u5272\u3057\u306a\u304f\u3066\u6e08\u3080\n    - \u8a73\u3057\u304f\u306f\u5b9f\u88c5\u4f8b\u3067\n- \u30af\u30e9\u30b9\u304b\u3089\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u304c\u96e3\u3057\u3044\u5834\u5408\n    - \u72b6\u614b\u304c\u8907\u96d1\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u591a\u3044\n    - \u30af\u30e9\u30b9\u304b\u3089\u751f\u6210\u3059\u308b\u306e\u304c\u3081\u3093\u3069\u304f\u3055\u3044\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u304c\u3059\u3054\u3044\u3053\u3068\u306b\u306a\u3063\u3061\u3083\u3046\n- \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u751f\u6210\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5206\u3051\u305f\u3044\u5834\u5408\n\n\n# \u5b9f\u88c5\u6982\u8981\n![Prototype.png](https://qiita-image-store.s3.amazonaws.com/0/90526/d21450f9-1194-650e-2659-c0159f5553a7.png)\n\n- Prototype : \u62bd\u8c61\u30af\u30e9\u30b9\u3002\u30af\u30ed\u30fc\u30f3(\u81ea\u5206\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u8907\u88fd\u3092\u751f\u6210)\u3067\u304d\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\n- ConcretePrototype : \u5177\u8c61\u30af\u30e9\u30b9\u3002\u5b9f\u969b\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30b3\u30d4\u30fc\u7b49\u3001\u30af\u30ed\u30fc\u30f3\u3092\u5b9f\u88c5\u3059\u308b\n\n# \u5b9f\u88c5\u4f8b\n\u69d8\u3005\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3002\n\u3057\u304b\u3057\u3001\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u306e\u306f\u5927\u5909\u3002\u5b9f\u969b\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540c\u58eb\u306e\u5dee\u5206\u306f\u5c11\u306a\u3044\u3002\nPrototype\u30d1\u30bf\u30fc\u30f3\u3092\u9069\u7528\u3002\n\u30af\u30e9\u30b9\u306f\u7d71\u4e00\u3057\u3001\u5dee\u5206\u3092\u72b6\u614b\u3067\u8868\u73fe\u3002\n\u305d\u308c\u3089\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30921\u3064\u305a\u3064\u751f\u6210\u3057\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304f\u3002\n\u4ee5\u964d\u306f\u3053\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u304b\u3089\u30af\u30ed\u30fc\u30f3\u3059\u308b\u3053\u3068\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u3002\n\u3053\u308c\u306b\u3088\u308a\u30af\u30e9\u30b9\u6570\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u4eca\u56de\u306e\u4f8b\u3067\u306f3\u7a2e\u985e\u306e\u30e2\u30c7\u30eb\u30922\u7a2e\u985e\u306e\u30af\u30e9\u30b9\u3067\u8868\u73fe\u3002\n\n![Prototype_Product.png](https://qiita-image-store.s3.amazonaws.com/0/90526/3437e701-1827-a352-5cf0-b08ea87e4827.png)\n\n## Product\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\n\u30af\u30ed\u30fc\u30f3\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092\u7ba1\u7406\u3059\u308b\u969b\u306f\u3001\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7528\u3044\u3066\u7ba1\u7406\u3059\u308b\u3002\n\u30b9\u30fc\u30d1\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u3057\u3066Cloneable\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6307\u5b9a\u3002\nCloneable\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u3064\u3044\u3066\u306f\u304a\u307e\u3051\u306b\u3066\u3002\n\n```Product.java\npackage framework;\n\npublic interface Product extends Cloneable{\n    public abstract void use(String s);\n    public abstract Product createClone();\n}\n```\n\n##Manager\u30af\u30e9\u30b9\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7ba1\u7406\u3001\u8907\u88fd\u3092\u884c\u3046\u30af\u30e9\u30b9\u3002\n\u4eca\u56de\u306f\u3053\u306e\u30af\u30e9\u30b9\u3092\u901a\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30af\u30ed\u30fc\u30f3\u3092\u884c\u3046\u3002\n\u751f\u6210\u3057\u305f\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092HashMap\u306b\u767b\u9332\u3059\u308b\u3002\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u767b\u9332\u6642\u306e\u30ad\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30af\u30ed\u30fc\u30f3\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u5148\u307b\u3069\u5b9a\u7fa9\u3057\u305fProduct\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3068HashMap\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u4ee5\u5f8c\u306e\u5177\u8c61\u30af\u30e9\u30b9\u3068\u5b8c\u5168\u306b\u5207\u308a\u96e2\u3059\u3053\u3068\u304c\u3067\u304d\u3066\u3044\u308b\u3002\n\n``` Manager.java\npackage framework;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Manager {\n    private Map<String, Product> showcase = new HashMap<>();\n\n    public void register(String name, Product proto) {\n        this.showcase.put(name, proto);\n    }\n\n    public Product create(String protoName) {\n        Product p = this.showcase.get(protoName);\n        return p.createClone();\n    }\n}\n```\n\n##MessageBox\u30af\u30e9\u30b9\u3001UnderlinePen\u30af\u30e9\u30b9\nProduct\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u5177\u8c61\u30af\u30e9\u30b9\u3002\n\u5171\u306b1\u3064\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u305d\u308c\u305e\u308c\u6301\u3061\u3001\u305d\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u4ee3\u5165\u3055\u308c\u305f\u6587\u5b57\u3092\u5229\u7528\u3057\u3066\u8868\u793a\u3092\u4fee\u98fe\u3059\u308b\u3002\nex.MessageBox\u30af\u30e9\u30b9\n\n```text\n*****************\n* Hello, world. *\n*****************\n```\n\nex.UnderlinePen\u30af\u30e9\u30b9\n\n```text\n\"Hello, world.\"\n -------------\n```\n\n\u4fee\u98fe\u3057\u305f\u3044\u6587\u5b57\u3054\u3068\u306b\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u518d\u5229\u7528\u304c\u53ef\u80fd\u3060\u304c\u3001\u30af\u30e9\u30b9\u6570\u304c\u81a8\u5927\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\n\u5dee\u5206\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u72b6\u614b\u3068\u3057\u3066\u8868\u73fe\u3001\u5229\u7528\u3057\u305f\u3044\u30d1\u30bf\u30fc\u30f3\u3092\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3068\u3057\u3066\u4fdd\u5b58\u3001\u8907\u88fd\u53ef\u80fd\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u540c\u69d8\u306e\u6319\u52d5\u3092\u30af\u30e9\u30b9\u6570\u3092\u5897\u3084\u3059\u3053\u3068\u306a\u304f\u5b9f\u88c5\u53ef\u80fd\u3002\n\u8907\u88fd\u306b\u306fJava\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308bclone\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3002\u8a73\u3057\u304f\u306f\u304a\u307e\u3051\u3067\u3002\n\n```MessageBox.java\nimport framework.Product;\n\npublic class MessageBox implements Product {\n    private char decoChar;\n\n    public MessageBox(char decoChar) {\n        this.decoChar = decoChar;\n    }\n\n    @Override\n    public void use(String s) {\n        int length = s.getBytes().length;\n        this.printCharLine(length);\n        System.out.println(\"\");\n        System.out.println(this.decoChar + \" \" + s + \" \" + this.decoChar);\n        this.printCharLine(length);\n        System.out.println(\"\");\n    }\n\n    @Override\n    public Product createClone() {\n        Product p = null;\n        try {\n            p = (Product) this.clone();\n        } catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        return p;\n    }\n\n    private void printCharLine(int length) {\n        for (int i = 0; i < length + 4; i++) {\n            System.out.print(this.decoChar);\n        }\n    }\n}\n```\n\n```UnderlinePen.java\nimport framework.Product;\n\npublic class UnderlinePen implements Product {\n    private char ulChar;\n\n    public UnderlinePen(char ulChar) {\n        this.ulChar = ulChar;\n    }\n\n    @Override\n    public void use(String s) {\n        int length = s.getBytes().length;\n        System.out.println(\"\\\"\" + s + \"\\\"\");\n        System.out.print(\" \");\n        for (int i = 0; i < length; i++) {\n            System.out.print(ulChar);\n        }\n        System.out.println();\n    }\n\n    @Override\n    public Product createClone() {\n        Product p = null;\n        try {\n            p = (Product) this.clone();\n        } catch (CloneNotSupportedException e) {\n            e.printStackTrace();\n        }\n        return p;\n    }\n}\n```\n\n##Main\u30af\u30e9\u30b9\nManager\u30af\u30e9\u30b9\u3092\u7528\u3044\u3066\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092\u7ba1\u7406\u3002\n\u4ee5\u5f8c\u306fManager\u30af\u30e9\u30b9\u3092\u901a\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u3002\n\n```Main.java\nimport framework.Manager;\nimport\u3000framework.Product;\n\npublic class Main {\n    public static void main(String[] args) {\n        \n        // \u7ba1\u7406\u30af\u30e9\u30b9\n        Manager manager = new Manager();\n        \n        // \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u751f\u6210\n        UnderlinePen upen = new UnderlinePen('-');\n        MessageBox wbox = new MessageBox('*');\n        MessageBox sbox = new MessageBox('/');\n\n        // \u30ad\u30fc\u3068\u306a\u308b\u6587\u5b57\u5217\u3068\u5171\u306b\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092\u767b\u9332\n        manager.register(\"strong message\", upen);\n        manager.register(\"warning box\", wbox);\n        manager.register(\"slash box\", sbox);\n\n        // \u751f\u6210\n        // \u5b9f\u969b\u306b\u306f\u30ad\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u5bfe\u5fdc\u3059\u308b\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u304b\u3089\u8907\u88fd\n        Product p1 = manager.create(\"strong message\");\n        Product p2 = manager.create(\"warning box\");\n        Product p3 = manager.create(\"slash box\");\n\n        // \u5229\u7528\n        p1.use(\"Hello, world.\");\n        p2.use(\"Hello, world.\");\n        p3.use(\"Hello, world.\");\n    }\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\n\"Hello, world.\"\n -------------\n*****************\n* Hello, world. *\n*****************\n/////////////////\n/ Hello, world. /\n/////////////////\n```\n\n#\u304a\u307e\u3051\n## clone\u30e1\u30bd\u30c3\u30c9\nJava\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\u3002\n\u6b63\u78ba\u306b\u306fObject\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3002\u7d50\u679c\u3068\u3057\u3066\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u3067\u5229\u7528\u53ef\u80fd\u3002\n\n```Object.java\n/**\n     * Creates and returns a copy of this object.  The precise meaning\n     * of \"copy\" may depend on the class of the object. The general\n     * intent is that, for any object {@code x}, the expression:\n     * <blockquote>\n     * <pre>\n     * x.clone() != x</pre></blockquote>\n     * will be true, and that the expression:\n     * <blockquote>\n     * <pre>\n     * x.clone().getClass() == x.getClass()</pre></blockquote>\n     * will be {@code true}, but these are not absolute requirements.\n     * While it is typically the case that:\n     * <blockquote>\n     * <pre>\n     * x.clone().equals(x)</pre></blockquote>\n     * will be {@code true}, this is not an absolute requirement.\n     * <p>\n     * By convention, the returned object should be obtained by calling\n     * {@code super.clone}.  If a class and all of its superclasses (except\n     * {@code Object}) obey this convention, it will be the case that\n     * {@code x.clone().getClass() == x.getClass()}.\n     * <p>\n     * By convention, the object returned by this method should be independent\n     * of this object (which is being cloned).  To achieve this independence,\n     * it may be necessary to modify one or more fields of the object returned\n     * by {@code super.clone} before returning it.  Typically, this means\n     * copying any mutable objects that comprise the internal \"deep structure\"\n     * of the object being cloned and replacing the references to these\n     * objects with references to the copies.  If a class contains only\n     * primitive fields or references to immutable objects, then it is usually\n     * the case that no fields in the object returned by {@code super.clone}\n     * need to be modified.\n     * <p>\n     * The method {@code clone} for class {@code Object} performs a\n     * specific cloning operation. First, if the class of this object does\n     * not implement the interface {@code Cloneable}, then a\n     * {@code CloneNotSupportedException} is thrown. Note that all arrays\n     * are considered to implement the interface {@code Cloneable} and that\n     * the return type of the {@code clone} method of an array type {@code T[]}\n     * is {@code T[]} where T is any reference or primitive type.\n     * Otherwise, this method creates a new instance of the class of this\n     * object and initializes all its fields with exactly the contents of\n     * the corresponding fields of this object, as if by assignment; the\n     * contents of the fields are not themselves cloned. Thus, this method\n     * performs a \"shallow copy\" of this object, not a \"deep copy\" operation.\n     * <p>\n     * The class {@code Object} does not itself implement the interface\n     * {@code Cloneable}, so calling the {@code clone} method on an object\n     * whose class is {@code Object} will result in throwing an\n     * exception at run time.\n     *\n     * @return     a clone of this instance.\n     * @throws  CloneNotSupportedException  if the object's class does not\n     *               support the {@code Cloneable} interface. Subclasses\n     *               that override the {@code clone} method can also\n     *               throw this exception to indicate that an instance cannot\n     *               be cloned.\n     * @see java.lang.Cloneable\n     */\n    protected native Object clone() throws CloneNotSupportedException;\n```\n\nnative\u3063\u3066\u66f8\u3044\u3066\u3042\u308b\u3002JNI(Java Native Interface)\u3063\u3066\u3084\u3064\u3089\u3057\u3044\u3002\u4e2d\u8eab\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u30b3\u30fc\u30c9\u3067\u5b9f\u88c5\u3055\u308c\u3066\u308b\u3063\u307d\u3044\u3002\n\n\u3059\u3052\u30fc\u30b3\u30e1\u30f3\u30c8\u66f8\u3044\u3066\u3042\u308b\u3002\n x.clone() != x\n x.clone().getClass() == x.getClass()\n x.clone().equals(x)\nOverride\u3059\u308b\u306a\u3089\u30b3\u30b3\u3089\u3078\u3093\u3092\u6210\u308a\u7acb\u305f\u305b\u3066\u306d\u3063\u3066\u611f\u3058\u304b\u3002\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u4e0a\u3067\u91cd\u8981\u306a\u306e\u306f\n\n- Cloneable\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n- \u30b3\u30d4\u30fc\u306fshallow copy\n\n\u3063\u3066\u3068\u3053\u3002\n\n## Cloneable\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\n\u4e2d\u8eab\u7a7a\u3063\u307d\u3002\n\n```Cloneable.java\n/*\n * Copyright (c) 1995, 2004, Oracle and/or its affiliates. All rights reserved.\n * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n */\n\npackage java.lang;\n\n/**\n * A class implements the <code>Cloneable</code> interface to\n * indicate to the {@link java.lang.Object#clone()} method that it\n * is legal for that method to make a\n * field-for-field copy of instances of that class.\n * <p>\n * Invoking Object's clone method on an instance that does not implement the\n * <code>Cloneable</code> interface results in the exception\n * <code>CloneNotSupportedException</code> being thrown.\n * <p>\n * By convention, classes that implement this interface should override\n * <tt>Object.clone</tt> (which is protected) with a public method.\n * See {@link java.lang.Object#clone()} for details on overriding this\n * method.\n * <p>\n * Note that this interface does <i>not</i> contain the <tt>clone</tt> method.\n * Therefore, it is not possible to clone an object merely by virtue of the\n * fact that it implements this interface.  Even if the clone method is invoked\n * reflectively, there is no guarantee that it will succeed.\n *\n * @author  unascribed\n * @see     java.lang.CloneNotSupportedException\n * @see     java.lang.Object#clone()\n * @since   JDK1.0\n */\npublic interface Cloneable {\n}\n```\n\n\u5358\u306b\u201dclone\u3057\u3066\u3044\u3044\u3088\uff01\"\u3063\u3066\u3044\u3046\u5370\u3002\nclone\u3057\u305f\u3044\u30af\u30e9\u30b9\u306b\u306f\u4ed8\u3051\u3066\u306d\u3063\u3066\u3044\u3046\u3002\n\u3053\u308c\u4ed8\u3051\u306a\u3044\u3067clone()\u547c\u3076\u3068clone()\u304cException\u3092\u5410\u304f\u3002\n\u5358\u7d14\u306b\u306a\u3093\u3067\u3082clone\u3067\u304d\u3061\u3083\u3046\u3068shallow copy\u7b49\u3067\u30d0\u30b0\u306e\u5143\u306b\u306a\u308b\u304b\u3089\u5358\u7d14\u306b\u306f\u51fa\u6765\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u308b\u306e\u304b\u306a\u3002\n\u3053\u3046\u3044\u3046\u4e2d\u8eab\u7a7a\u3063\u307d\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u3053\u3068\u3092marker interface \u3063\u3066\u8a00\u3046\u3089\u3057\u3044\u3002\nSerializable\u306a\u3093\u304b\u3082\u305d\u3046\u3089\u3057\u3044\u3002\u3078\u30fc\u3002\n\n##shallow copy\nclone()\u3067\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3060\u3051\u306a\u3093\u3067\u3001\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u306a\u578b\u4ee5\u5916\u306f\u53c2\u7167\u304c\u30b3\u30d4\u30fc\u3055\u308c\u3061\u3083\u3046\u3088\u3002\n\u305d\u3046\u3044\u3046\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u3042\u308b\u306a\u3089\u3061\u3083\u3093\u3068Override\u3057\u3066\u306d\u3063\u3066\u3002\n\n# \u307e\u3068\u3081\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3002\n\u601d\u3063\u305f\u3088\u308a\u5fdc\u7528\u304c\u52b9\u304d\u305d\u3046\u3002\n\n\n\u3053\u308c\u304b\u3089\u52c9\u5f37\u3059\u308b\u3044\u304f\u3064\u304b\u306e\u751f\u6210\u306b\u95a2\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3068\u306e\u4f4f\u307f\u5206\u3051\u304c\u96e3\u3057\u305d\u3046\u3002\n\n#Reference\n[Java\u8a00\u8a9e\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u5165\u9580](https://www.amazon.co.jp/%E5%A2%97%E8%A3%9C%E6%94%B9%E8%A8%82%E7%89%88Java%E8%A8%80%E8%AA%9E%E3%81%A7%E5%AD%A6%E3%81%B6%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E5%85%A5%E9%96%80-%E7%B5%90%E5%9F%8E-%E6%B5%A9/dp/4797327030?ie=UTF8&keywords=java%E8%A8%80%E8%AA%9E%E3%81%A7%E5%AD%A6%E3%81%B6%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3%E5%85%A5%E9%96%80&qid=1454743284&ref_=sr_1_1&sr=8-1)\n[\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306b\u304a\u3051\u308b\u518d\u5229\u7528\u306e\u305f\u3081\u306e\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3]\n(https://www.amazon.co.jp/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E3%81%AB%E3%81%8A%E3%81%91%E3%82%8B%E5%86%8D%E5%88%A9%E7%94%A8%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3-%E3%82%A8%E3%83%AA%E3%83%83%E3%82%AF-%E3%82%AC%E3%83%B3%E3%83%9E/dp/4797311126/ref=pd_sim_14_4?ie=UTF8&dpID=51DuWqWrujL&dpSrc=sims&preST=_AC_UL160_SR115%2C160_&psc=1&refRID=BH9NE3T843KMTD0ZV214)\n\n", "tags": ["Java", "\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3"]}