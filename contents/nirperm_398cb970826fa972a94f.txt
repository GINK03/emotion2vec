{"context": " More than 1 year has passed since last update.\u8a2d\u8a08\u3092\u610f\u8b58\u3057\u305f\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308b\u70ba\u306b\u3001\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u4fee\u884c\u3057\u307e\u3057\u305f\u3002\n\u4ed6\u306eDesign Pattern\u3082\u3061\u3087\u304f\u3061\u3087\u304f\u51fa\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u524d\u7f6e\u304d\n\n\n\u5897\u88dc\u6539\u8a02\u7248Java\u8a00\u8a9e\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u5165\u9580\u3092Java\u304b\u3089Python\u306b\u3057\u3066\u307e\u3059\u3002\uff08Python\u306f3.4.2\uff09\ngithub\u306b\u30b3\u30fc\u30c9\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\uff08\u307e\u3060\u52d5\u304b\u306a\u3044\u3082\u306e\u3082\u3042\u308b\uff09\n\n\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u3069\u3046\u3044\u3046\u6642\u306b\u3001\u4f55\u3092\u3001\u3069\u3046\u4f7f\u3046\u306e\u304b\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u4e00\u5148\u305a\u306e\u76ee\u6a19\u3002\n\uff08Java\u3068\u3044\u3046\u304b\u9759\u7684\u578b\u4ed8\u8a00\u8a9e\u306f\u521d\u3081\u3066\u3067\u3001\u4e14\u3064python\u6b74\u3082\u305d\u3093\u306a\u306b\u9577\u304f\u306a\u3044\u306e\u3067\u3001Pythonista\u307d\u3063\u304f\u306a\u3044\u3068\u3053\u308d\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3054\u6307\u6458\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u3054\u6559\u6388\u304f\u3060\u3055\u3044\u3002\uff09\n\u4eca\u56de\u306f\u3001\u69cb\u9020\u306b\u95a2\u3059\u308b\u30d1\u30bf\u30fc\u30f3Decorator\u3002\n\nDecorator\u3068\u306f\n\u900f\u904e\u7684\u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9(API)\u3092\u4fdd\u3063\u305f\u307e\u307e\u3001\u65e2\u5b58\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u65b0\u3057\u3044Decorator\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u304b\u3076\u305b\u308b\u3059\u308b\u3053\u3068\u3067\u65e2\u5b58\u306e\u95a2\u6570\u3084\u30af\u30e9\u30b9\u306e\u4e2d\u8eab\u3092\u76f4\u63a5\u89e6\u308b\u3053\u3068\u306a\u304f\u3001\u305d\u306e\u5916\u5074\u304b\u3089\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u305f\u308a\u66f8\u304d\u63db\u3048\u305f\u308a\u3059\u308b\u3002\u307e\u305f\u3001\u65e2\u5b58\u306e\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3059\u308b\u969b\u306b\u30af\u30e9\u30b9\u306e\u7d99\u627f\u306e\u4ee3\u66ff\u624b\u6bb5\u3068\u3057\u3066\u7528\u3044\u3089\u308c\u308b\u3002\n\u3053\u3053\u3067\u4f5c\u308b\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u6587\u5b57\u5217\u306e\u5468\u308a\u306b\u98fe\u308a\u67a0\u3092\u3064\u3051\u3066\u8868\u793a\u3059\u308b\u3082\u306e\u3067\u3059\u3002\u3053\u3053\u3067\u3044\u3046\u98fe\u308a\u67a0\u3068\u306f\u3001-, +, |\u3068\u3044\u3046\u6587\u5b57\u3067\u66f8\u3044\u305f\u3082\u306e\u3067\u3059\u3002\n\n\u5168\u4f53\u306e\u30af\u30e9\u30b9\u56f3\n\n\ndisplay.py\nfrom abc import ABCMeta, abstractmethod\n\n\nclass Display(metaclass=ABCMeta):\n\n    @abstractmethod\n    def get_columns(self):\n        pass\n\n    @abstractmethod\n    def get_rows(self):\n        pass\n\n    @abstractmethod\n    def get_row_text(self):\n        pass\n\n    def show(self):\n        for i in range(self.get_rows()):\n            print(self.get_row_text(i))\n\n\nDisplay\u30af\u30e9\u30b9\u306f\u8907\u6570\u884c\u304b\u3089\u306a\u308b\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\u62bd\u8c61\u30af\u30e9\u30b9\u3067\u3059\u3002\nget_columns, get_rows, get_row_text\u306f\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u306a\u306e\u3067\u5ba3\u8a00\u306e\u307f\u3001\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u5b9f\u88c5\u3092\u4efb\u305b\u3066\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u5f79\u5272\u306fget_columns\u306f\u6a2a\u306e\u6587\u5b57\u6570\u3001get_rows\u306f\u7e26\u306e\u884c\u6570\u3001get_row_text\u306f\u6307\u5b9a\u3057\u305f\u884c\u306e\u6587\u5b57\u5217\u3092\u5f97\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\nshow\u306fget_rows\u3068get_row_text\u3068\u3044\u3046\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u305fTemplateMethod\u30d1\u30bf\u30fc\u30f3\u306b\u306a\u3063\u3066\u307e\u3059\u3002get_rows\u3068get_row_text\u3067\u8868\u793a\u3059\u308b\u6587\u5b57\u5217\u3092\u53d6\u5f97\u3057\u3001for\u30eb\u30fc\u30d7\u3067\u5168\u3066\u306e\u884c\u3092\u8868\u793a\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\n\nstring_display.py\n\nfrom display import Display\n\n\nclass StringDisplay(Display):\n\n    def __init__(self, string):\n        self.__string = string\n\n    def get_columns(self):\n        return len(self.__string)\n\n    def get_rows(self):\n        return 1\n\n    def get_row_text(self, row):\n        if row == 0:\n            return self.__string\n        else:\n            return None\n\n\nStringDisplay\u30af\u30e9\u30b9\u306f1\u884c\u306e\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\u30af\u30e9\u30b9\u3067\u3001Display\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u3059\u3002Display\u30af\u30e9\u30b9\u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\nstring\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u8868\u793a\u3059\u308b\u6587\u5b57\u5217\u3092\u4fdd\u6301\u3002StringDisplay\u30af\u30e9\u30b9\u3067\u8868\u793a\u3059\u308b\u306e\u306fstring\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5185\u5bb91\u884c\u3060\u3051\u306a\u306e\u3067\u3001get_columns\u306f\u6587\u5b57\u5217\u306e\u9577\u3055\u3092\u8fd4\u3057\u3001get_rows\u306f1\u3092\u8fd4\u3057\u307e\u3059\u3002get_row_text\u306f0\u884c\u76ee\u306e\u5024\u3092\u3068\u308b\u3068\u304d\u306e\u307fstring\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\nborder.py\nfrom abc import ABCMeta\nfrom display import Display\n\n\nclass Border(Display):\n\n    __metaclass__ = ABCMeta\n\n    def _border(self, display):\n        self._display = display\n\n\nBorder\u30af\u30e9\u30b9\u306f\u300c\u98fe\u308a\u67a0\u300d\u3092\u8868\u3059\u62bd\u8c61\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3067\u3059\u304c\u3001\u6587\u5b57\u5217\u8868\u793a\u3092\u884c\u3046Display\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u7d99\u627f\u306b\u3088\u3063\u3066\u98fe\u308a\u67a0\u306f\u4e2d\u8eab\u3068\u540c\u3058\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002Border\u30af\u30e9\u30b9\u306fget_columns, get_rows, get_row_text, show\u306e\u5404\u30e1\u30bd\u30c3\u30c9\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\nside_border.py\nfrom border import Border\n\n\nclass SideBorder(Border):\n\n    def __init__(self, display, ch):\n        self.display = display\n        self.__border_char = ch\n\n    def get_columns(self):\n        return 1 + self.display.get_columns() + 1\n\n    def get_rows(self):\n        return self.display.get_rows()\n\n    def get_row_text(self, row):\n        return self.__border_char + \\\n            self.display.get_row_text(row) + \\\n            self.__border_char\n\n\nSideBorder\u30af\u30e9\u30b9\u306f\u5177\u4f53\u7684\u306a\u98fe\u308a\u67a0\u306e\u4e00\u7a2e\u3067\u3001Border\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u3059\u3002SideBorder\u30af\u30e9\u30b9\u306f\u3001\u6587\u5b57\u5217\u306e\u5de6\u53f3\u306b\u6c7a\u307e\u3063\u305f\u6587\u5b57\uff08borderChar\uff09\u3067\u98fe\u308a\u3092\u3064\u3051\u308b\u3082\u306e\u3067\u3059\u3002\u305d\u3057\u3066\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u305f\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u304c\u3059\u3079\u3066\u3053\u3053\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nget_columns\u306f\u8868\u793a\u6587\u5b57\u306e\u6a2a\u306e\u6587\u5b57\u6570\u3092\u5f97\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u3053\u306e\u98fe\u308a\u67a0\u304c\u304f\u308b\u3093\u3067\u3044\u308b\u300c\u4e2d\u8eab\u300d\u306e\u6587\u5b57\u6570\u306b\u3001\u5de6\u53f3\u306e\u98fe\u308a\u6587\u5b57\u5206\u3092\u52a0\u3048\u3066\u305f\u3082\u306e\u304c\u6587\u5b57\u6570\u306b\u306a\u308a\u307e\u3059\u3002\nSideBorder\u30af\u30e9\u30b9\u306f\u4e0a\u4e0b\u65b9\u5411\u306b\u306f\u624b\u3092\u52a0\u3048\u306a\u3044\u306e\u3067\u3001get_rows\u30e1\u30bd\u30c3\u30c9\u306fdisplay.get_rows\u304c\u305d\u306e\u307e\u307e\u623b\u308a\u5024\u306b\u306a\u308a\u307e\u3059\u3002\nget_row_text\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u884c\u306e\u6587\u5b57\u5217\u3092\u5f97\u308b\u3082\u306e\u3067\u3059\u3002display.get_row_text(row)\u3068\u3044\u3046\u4e2d\u8eab\u306e\u6587\u5b57\u5217\u306e\u4e21\u5074\u306b\u3001bodrder_char\u3068\u3044\u98fe\u308a\u6587\u5b57\u3092\u4ed8\u3051\u52a0\u3048\u305f\u3082\u306e\u304c\u623b\u308a\u5024\u306b\u306a\u308a\u307e\u3059\u3002\n\n\nfull_border.py\nfrom border import Border\n\n\nclass FullBorder(Border):\n\n    def __init__(self, display):\n        self.display = display\n\n    def get_columns(self):\n        return 1 + self.display.get_columns() + 1\n\n    def get_rows(self):\n        return 1 + self.display.get_rows() + 1\n\n    def get_row_text(self, row):\n        if row == 0:\n            return '+' + self._make_line('-', self.display.get_columns()) + '+'\n        elif row == self.display.get_rows() + 1:\n            return '+' + self._make_line('-', self.display.get_columns()) + '+'\n        else:\n            return '|' + self.display.get_row_text(row - 1) + '|'\n\n    def _make_line(self, ch, count):\n        buf = []\n        for i in range(0, count):\n            buf.append(ch)\n        return ' '.join(buf)\n\n\nFullBorder\u30af\u30e9\u30b9\u3082\u3001SideBorder\u30af\u30e9\u30b9\u3069\u540c\u69d8\u3001Border\u30b5\u30d6\u30af\u30e9\u30b9\u306e1\u3064\u3067\u3059\u3002FullBorder\u30af\u30e9\u30b9\u306f\u4e0a\u4e0b\u5de6\u53f3\u306b\u98fe\u308a\u3092\u3064\u3051\u3066\u3044\u307e\u3059\u3002\nmake_line\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u6307\u5b9a\u3057\u305f\u6587\u5b57\u3092\u9023\u7d9a\u3055\u305b\u305f\u6587\u5b57\u5217\u3092\u4f5c\u308b\u3001\u88dc\u52a9\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\n\nmain.py\nfrom string_display import StringDisplay\nfrom side_border import SideBorder\nfrom full_border import FullBorder\n\n\ndef main():\n    b1 = StringDisplay('Hello, world')\n    b2 = SideBorder(b1, '#')\n    b3 = FullBorder(b2)\n    b4 = SideBorder(\n        FullBorder(\n            FullBorder(\n                SideBorder(\n                    FullBorder(\n                        StringDisplay('\u3053\u3093\u306b\u3061\u306f\u3002')\n                    ), '*'\n                )\n            )\n        ), '/'\n    )\n\n    b1.show()\n    b2.show()\n    b3.show()\n    b4.show()\n\nif __name__ == \"__main__\":\n    main()\n\n\n\u5b9f\u884c\u7d50\u679c\uff08\u5f62\u304c\u6b6a\u3060\u3051\u3069\u30fb\u30fb\u30fb\uff09\nHello, world\n#Hello, world#\n+- - - - - - - - - - - - - -+\n|#Hello, world#|\n+- - - - - - - - - - - - - -+\n/+- - - - - - - - - - - -+/\n/|+- - - - - - - - - -+|/\n/||*+- - - - - -+*||/\n/||*|\u3053\u3093\u306b\u3061\u306f\u3002|*||/\n/||*+- - - - - -+*||/\n/|+- - - - - - - - - -+|/\n/+- - - - - - - - - - - -+/\n\n\n\n\u307e\u3068\u3081\nDecorator\u30d1\u30bf\u30fc\u30f3\u3067\u306f\u3001\u98fe\u308a\u67a0\u3068\u4e2d\u8eab\u3092\u540c\u4e00\u8996\u3057\u3066\u3044\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3001\u98fe\u308a\u67a0\u3092\u8868\u3059Border\u30af\u30e9\u30b9\u304c\u3001\u4e2d\u8eab\u3092\u8868\u3059Display\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3001\u305d\u306e\u540c\u4e00\u8996\u304c\u8868\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001Border\u30af\u30e9\u30b9\uff08Border\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u9054\uff09\u306f\u3001\u4e2d\u8eab\u3092\u8868\u3059Display\u30af\u30e9\u30b9\u3068\u540c\u3058\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u6301\u3063\u3066\u307e\u3059\u3002\n\u98fe\u308a\u67a0\u3092\u4f7f\u3063\u3066\u4e2d\u8eab\u3092\u5305\u3093\u3067\u3082\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306f\u96a0\u853d\u3055\u308c\u306a\u3044\u306e\u3067\u3001get_columns, get_rows, get_row_text, show\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u306f\u4ed6\u306e\u30af\u30e9\u30b9\u304b\u3089\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u300c\u900f\u904e\u7684\u300d\u3068\u3044\u3063\u3066\u3044\u307e\u3059\u3002\nDecorator\u30d1\u30bf\u30fc\u30f3\u306f\u5305\u3081\u3070\u5305\u3080\u307b\u3069\u3001\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\u5305\u307e\u308c\u308b\u3082\u306e\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u6a5f\u80fd\u306e\u8ffd\u52a0\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\npython\u306b\u306f\u305d\u3082\u305d\u3082\u3001\u30c7\u30b3\u30ec\u30fc\u30bf\u304c\u3042\u308a\u307e\u3059\u306d\n\n\u53c2\u8003\n\nPython\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u306b\u3064\u3044\u3066\nPython\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306e12Step\n\u30b5\u30eb\u3067\u3082\u308f\u304b\u308b \u9006\u5f15\u304d\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\nTECHSCORE\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\nWikipedia Software design pattern\nWikipedia \u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\nRuby 2.0.0\u3067\u5b66\u3076\u300114\u500b\u306e\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u4f5c\u308a\u307e\u3057\u305f[GoF][Design Pattern]\nRuby\u306b\u3088\u308b\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f35\u539f\u5247\n\n\u8a2d\u8a08\u3092\u610f\u8b58\u3057\u305f\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308b\u70ba\u306b\u3001\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u4fee\u884c\u3057\u307e\u3057\u305f\u3002\n\u4ed6\u306eDesign Pattern\u3082\u3061\u3087\u304f\u3061\u3087\u304f\u51fa\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u524d\u7f6e\u304d\n* [\u5897\u88dc\u6539\u8a02\u7248Java\u8a00\u8a9e\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u5165\u9580](http://www.hyuki.com/dp/)\u3092Java\u304b\u3089Python\u306b\u3057\u3066\u307e\u3059\u3002\uff08Python\u306f3.4.2\uff09\n* [github\u306b\u30b3\u30fc\u30c9\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\uff08\u307e\u3060\u52d5\u304b\u306a\u3044\u3082\u306e\u3082\u3042\u308b\uff09](https://github.com/Nirperm/Design-Pattern)\n\n\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u3069\u3046\u3044\u3046\u6642\u306b\u3001\u4f55\u3092\u3001\u3069\u3046\u4f7f\u3046\u306e\u304b\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u4e00\u5148\u305a\u306e\u76ee\u6a19\u3002\n\uff08Java\u3068\u3044\u3046\u304b\u9759\u7684\u578b\u4ed8\u8a00\u8a9e\u306f\u521d\u3081\u3066\u3067\u3001\u4e14\u3064python\u6b74\u3082\u305d\u3093\u306a\u306b\u9577\u304f\u306a\u3044\u306e\u3067\u3001Pythonista\u307d\u3063\u304f\u306a\u3044\u3068\u3053\u308d\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3054\u6307\u6458\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u3054\u6559\u6388\u304f\u3060\u3055\u3044\u3002\uff09\n\n\u4eca\u56de\u306f\u3001\u69cb\u9020\u306b\u95a2\u3059\u308b\u30d1\u30bf\u30fc\u30f3Decorator\u3002\n\n## Decorator\u3068\u306f\n\u900f\u904e\u7684\u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9(API)\u3092\u4fdd\u3063\u305f\u307e\u307e\u3001\u65e2\u5b58\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u65b0\u3057\u3044Decorator\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u304b\u3076\u305b\u308b\u3059\u308b\u3053\u3068\u3067\u65e2\u5b58\u306e\u95a2\u6570\u3084\u30af\u30e9\u30b9\u306e\u4e2d\u8eab\u3092\u76f4\u63a5\u89e6\u308b\u3053\u3068\u306a\u304f\u3001\u305d\u306e\u5916\u5074\u304b\u3089\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u305f\u308a\u66f8\u304d\u63db\u3048\u305f\u308a\u3059\u308b\u3002\u307e\u305f\u3001\u65e2\u5b58\u306e\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3059\u308b\u969b\u306b\u30af\u30e9\u30b9\u306e\u7d99\u627f\u306e\u4ee3\u66ff\u624b\u6bb5\u3068\u3057\u3066\u7528\u3044\u3089\u308c\u308b\u3002\n\n\u3053\u3053\u3067\u4f5c\u308b\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u6587\u5b57\u5217\u306e\u5468\u308a\u306b\u98fe\u308a\u67a0\u3092\u3064\u3051\u3066\u8868\u793a\u3059\u308b\u3082\u306e\u3067\u3059\u3002\u3053\u3053\u3067\u3044\u3046\u98fe\u308a\u67a0\u3068\u306f\u3001-, +, |\u3068\u3044\u3046\u6587\u5b57\u3067\u66f8\u3044\u305f\u3082\u306e\u3067\u3059\u3002\n\n## \u5168\u4f53\u306e\u30af\u30e9\u30b9\u56f3\n![Decorator](https://cacoo.com/diagrams/DHDB01qlp9lSObz9-40255.png?t=1432684722353)\n\n```display.py\nfrom abc import ABCMeta, abstractmethod\n\n\nclass Display(metaclass=ABCMeta):\n\n    @abstractmethod\n    def get_columns(self):\n        pass\n\n    @abstractmethod\n    def get_rows(self):\n        pass\n\n    @abstractmethod\n    def get_row_text(self):\n        pass\n\n    def show(self):\n        for i in range(self.get_rows()):\n            print(self.get_row_text(i))\n```\nDisplay\u30af\u30e9\u30b9\u306f\u8907\u6570\u884c\u304b\u3089\u306a\u308b\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\u62bd\u8c61\u30af\u30e9\u30b9\u3067\u3059\u3002\n\nget_columns, get_rows, get_row_text\u306f\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u306a\u306e\u3067\u5ba3\u8a00\u306e\u307f\u3001\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u5b9f\u88c5\u3092\u4efb\u305b\u3066\u307e\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u5f79\u5272\u306fget_columns\u306f\u6a2a\u306e\u6587\u5b57\u6570\u3001get_rows\u306f\u7e26\u306e\u884c\u6570\u3001get_row_text\u306f\u6307\u5b9a\u3057\u305f\u884c\u306e\u6587\u5b57\u5217\u3092\u5f97\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\nshow\u306fget_rows\u3068get_row_text\u3068\u3044\u3046\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u305f[TemplateMethod\u30d1\u30bf\u30fc\u30f3](http://qiita.com/nirperm/items/9651c1e0b29cdc31f064)\u306b\u306a\u3063\u3066\u307e\u3059\u3002get_rows\u3068get_row_text\u3067\u8868\u793a\u3059\u308b\u6587\u5b57\u5217\u3092\u53d6\u5f97\u3057\u3001for\u30eb\u30fc\u30d7\u3067\u5168\u3066\u306e\u884c\u3092\u8868\u793a\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n<br>\n\n```string_display.py\n\nfrom display import Display\n\n\nclass StringDisplay(Display):\n\n    def __init__(self, string):\n        self.__string = string\n\n    def get_columns(self):\n        return len(self.__string)\n\n    def get_rows(self):\n        return 1\n\n    def get_row_text(self, row):\n        if row == 0:\n            return self.__string\n        else:\n            return None\n```\nStringDisplay\u30af\u30e9\u30b9\u306f1\u884c\u306e\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\u30af\u30e9\u30b9\u3067\u3001Display\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u3059\u3002Display\u30af\u30e9\u30b9\u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\nstring\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u8868\u793a\u3059\u308b\u6587\u5b57\u5217\u3092\u4fdd\u6301\u3002StringDisplay\u30af\u30e9\u30b9\u3067\u8868\u793a\u3059\u308b\u306e\u306fstring\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5185\u5bb91\u884c\u3060\u3051\u306a\u306e\u3067\u3001get_columns\u306f\u6587\u5b57\u5217\u306e\u9577\u3055\u3092\u8fd4\u3057\u3001get_rows\u306f1\u3092\u8fd4\u3057\u307e\u3059\u3002get_row_text\u306f0\u884c\u76ee\u306e\u5024\u3092\u3068\u308b\u3068\u304d\u306e\u307fstring\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8fd4\u3057\u307e\u3059\u3002\n<br>\n\n\n```border.py\nfrom abc import ABCMeta\nfrom display import Display\n\n\nclass Border(Display):\n\n    __metaclass__ = ABCMeta\n\n    def _border(self, display):\n        self._display = display\n```\nBorder\u30af\u30e9\u30b9\u306f\u300c\u98fe\u308a\u67a0\u300d\u3092\u8868\u3059\u62bd\u8c61\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3067\u3059\u304c\u3001\u6587\u5b57\u5217\u8868\u793a\u3092\u884c\u3046Display\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u7d99\u627f\u306b\u3088\u3063\u3066**\u98fe\u308a\u67a0\u306f\u4e2d\u8eab\u3068\u540c\u3058\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064**\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002Border\u30af\u30e9\u30b9\u306fget_columns, get_rows, get_row_text, show\u306e\u5404\u30e1\u30bd\u30c3\u30c9\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n<br>\n\n```side_border.py\nfrom border import Border\n\n\nclass SideBorder(Border):\n\n    def __init__(self, display, ch):\n        self.display = display\n        self.__border_char = ch\n\n    def get_columns(self):\n        return 1 + self.display.get_columns() + 1\n\n    def get_rows(self):\n        return self.display.get_rows()\n\n    def get_row_text(self, row):\n        return self.__border_char + \\\n            self.display.get_row_text(row) + \\\n            self.__border_char\n```\nSideBorder\u30af\u30e9\u30b9\u306f\u5177\u4f53\u7684\u306a\u98fe\u308a\u67a0\u306e\u4e00\u7a2e\u3067\u3001Border\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u3059\u3002SideBorder\u30af\u30e9\u30b9\u306f\u3001\u6587\u5b57\u5217\u306e\u5de6\u53f3\u306b\u6c7a\u307e\u3063\u305f\u6587\u5b57\uff08borderChar\uff09\u3067\u98fe\u308a\u3092\u3064\u3051\u308b\u3082\u306e\u3067\u3059\u3002\u305d\u3057\u3066\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u305f\u62bd\u8c61\u30e1\u30bd\u30c3\u30c9\u304c\u3059\u3079\u3066\u3053\u3053\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nget_columns\u306f\u8868\u793a\u6587\u5b57\u306e\u6a2a\u306e\u6587\u5b57\u6570\u3092\u5f97\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u3053\u306e\u98fe\u308a\u67a0\u304c\u304f\u308b\u3093\u3067\u3044\u308b\u300c\u4e2d\u8eab\u300d\u306e\u6587\u5b57\u6570\u306b\u3001\u5de6\u53f3\u306e\u98fe\u308a\u6587\u5b57\u5206\u3092\u52a0\u3048\u3066\u305f\u3082\u306e\u304c\u6587\u5b57\u6570\u306b\u306a\u308a\u307e\u3059\u3002\n\nSideBorder\u30af\u30e9\u30b9\u306f\u4e0a\u4e0b\u65b9\u5411\u306b\u306f\u624b\u3092\u52a0\u3048\u306a\u3044\u306e\u3067\u3001get_rows\u30e1\u30bd\u30c3\u30c9\u306fdisplay.get_rows\u304c\u305d\u306e\u307e\u307e\u623b\u308a\u5024\u306b\u306a\u308a\u307e\u3059\u3002\n\nget_row_text\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u884c\u306e\u6587\u5b57\u5217\u3092\u5f97\u308b\u3082\u306e\u3067\u3059\u3002display.get_row_text(row)\u3068\u3044\u3046\u4e2d\u8eab\u306e\u6587\u5b57\u5217\u306e\u4e21\u5074\u306b\u3001bodrder_char\u3068\u3044\u98fe\u308a\u6587\u5b57\u3092\u4ed8\u3051\u52a0\u3048\u305f\u3082\u306e\u304c\u623b\u308a\u5024\u306b\u306a\u308a\u307e\u3059\u3002\n<br>\n\n```full_border.py\nfrom border import Border\n\n\nclass FullBorder(Border):\n\n    def __init__(self, display):\n        self.display = display\n\n    def get_columns(self):\n        return 1 + self.display.get_columns() + 1\n\n    def get_rows(self):\n        return 1 + self.display.get_rows() + 1\n\n    def get_row_text(self, row):\n        if row == 0:\n            return '+' + self._make_line('-', self.display.get_columns()) + '+'\n        elif row == self.display.get_rows() + 1:\n            return '+' + self._make_line('-', self.display.get_columns()) + '+'\n        else:\n            return '|' + self.display.get_row_text(row - 1) + '|'\n\n    def _make_line(self, ch, count):\n        buf = []\n        for i in range(0, count):\n            buf.append(ch)\n        return ' '.join(buf)\n```\nFullBorder\u30af\u30e9\u30b9\u3082\u3001SideBorder\u30af\u30e9\u30b9\u3069\u540c\u69d8\u3001Border\u30b5\u30d6\u30af\u30e9\u30b9\u306e1\u3064\u3067\u3059\u3002FullBorder\u30af\u30e9\u30b9\u306f\u4e0a\u4e0b\u5de6\u53f3\u306b\u98fe\u308a\u3092\u3064\u3051\u3066\u3044\u307e\u3059\u3002\n\nmake_line\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u6307\u5b9a\u3057\u305f\u6587\u5b57\u3092\u9023\u7d9a\u3055\u305b\u305f\u6587\u5b57\u5217\u3092\u4f5c\u308b\u3001\u88dc\u52a9\u7528\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n<br>\n\n```main.py\nfrom string_display import StringDisplay\nfrom side_border import SideBorder\nfrom full_border import FullBorder\n\n\ndef main():\n    b1 = StringDisplay('Hello, world')\n    b2 = SideBorder(b1, '#')\n    b3 = FullBorder(b2)\n    b4 = SideBorder(\n        FullBorder(\n            FullBorder(\n                SideBorder(\n                    FullBorder(\n                        StringDisplay('\u3053\u3093\u306b\u3061\u306f\u3002')\n                    ), '*'\n                )\n            )\n        ), '/'\n    )\n\n    b1.show()\n    b2.show()\n    b3.show()\n    b4.show()\n\nif __name__ == \"__main__\":\n    main()\n```\n\n\u5b9f\u884c\u7d50\u679c\uff08\u5f62\u304c\u6b6a\u3060\u3051\u3069\u30fb\u30fb\u30fb\uff09\n\n```\nHello, world\n#Hello, world#\n+- - - - - - - - - - - - - -+\n|#Hello, world#|\n+- - - - - - - - - - - - - -+\n/+- - - - - - - - - - - -+/\n/|+- - - - - - - - - -+|/\n/||*+- - - - - -+*||/\n/||*|\u3053\u3093\u306b\u3061\u306f\u3002|*||/\n/||*+- - - - - -+*||/\n/|+- - - - - - - - - -+|/\n/+- - - - - - - - - - - -+/\n\n```\n\n## \u307e\u3068\u3081\nDecorator\u30d1\u30bf\u30fc\u30f3\u3067\u306f\u3001\u98fe\u308a\u67a0\u3068\u4e2d\u8eab\u3092\u540c\u4e00\u8996\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3001\u98fe\u308a\u67a0\u3092\u8868\u3059Border\u30af\u30e9\u30b9\u304c\u3001\u4e2d\u8eab\u3092\u8868\u3059Display\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3001\u305d\u306e\u540c\u4e00\u8996\u304c\u8868\u73fe\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001Border\u30af\u30e9\u30b9\uff08Border\u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u9054\uff09\u306f\u3001\u4e2d\u8eab\u3092\u8868\u3059Display\u30af\u30e9\u30b9\u3068\u540c\u3058\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u6301\u3063\u3066\u307e\u3059\u3002\n\n\u98fe\u308a\u67a0\u3092\u4f7f\u3063\u3066\u4e2d\u8eab\u3092\u5305\u3093\u3067\u3082\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306f\u96a0\u853d\u3055\u308c\u306a\u3044\u306e\u3067\u3001get_columns, get_rows, get_row_text, show\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u306f\u4ed6\u306e\u30af\u30e9\u30b9\u304b\u3089\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u300c\u900f\u904e\u7684\u300d\u3068\u3044\u3063\u3066\u3044\u307e\u3059\u3002\n\nDecorator\u30d1\u30bf\u30fc\u30f3\u306f\u5305\u3081\u3070\u5305\u3080\u307b\u3069\u3001\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002**\u5305\u307e\u308c\u308b\u3082\u306e\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306a\u304f\u3001\u6a5f\u80fd\u306e\u8ffd\u52a0\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002**\n\n[python\u306b\u306f\u305d\u3082\u305d\u3082\u3001\u30c7\u30b3\u30ec\u30fc\u30bf\u304c\u3042\u308a\u307e\u3059\u306d](http://python-3-patterns-idioms-test.readthedocs.org/en/latest/PythonDecorators.html)\n\n## \u53c2\u8003\n* [Python\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u306b\u3064\u3044\u3066](http://qiita.com/mtb_beta/items/d257519b018b8cd0cc2e)\n* [Python\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306e12Step](http://qiita.com/_rdtr/items/d3bc1a8d4b7eb375c368)\n* [\u30b5\u30eb\u3067\u3082\u308f\u304b\u308b \u9006\u5f15\u304d\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3](http://www.nulab.co.jp/designPatterns/designPatterns1/designPatterns1-2.html)\n* [TECHSCORE\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3](http://www.techscore.com/tech/DesignPattern/foundation/foundation1.html/)\n* [Wikipedia Software design pattern]([http://en.wikipedia.org/wiki/Software_design_pattern)\n* [Wikipedia \u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3](http://goo.gl/lRi5)\n* [Ruby 2.0.0\u3067\u5b66\u3076\u300114\u500b\u306e\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u4f5c\u308a\u307e\u3057\u305f[GoF][Design Pattern]](http://morizyun.github.io/blog/ruby-design-pattern-matome-mokuzi/)\n* [Ruby\u306b\u3088\u308b\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f35\u539f\u5247](http://qiita.com/kidach1/items/4b63de9ad5a97726c50c)\n", "tags": ["Python", "DesignPatterns", "\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3"]}