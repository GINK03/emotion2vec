{"tags": ["Keras", "CNN", "\u9752\u7a7a\u6587\u5eab", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406", "scraping"], "context": "\n\n\u9752\u7a7a\u6587\u5eab\u3067\u4f5c\u8005\u3063\u307d\u3055\u5224\u5b9a\n\u9752\u7a7a\u6587\u5eab\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u5229\u7528\u3057\u3066\u3001\u4efb\u610f\u306e\u65e5\u672c\u8a9e\u6587\u306e\u4f5c\u8005\u3063\u307d\u3055\u3092\u5224\u5b9a\u3059\u308b\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://github.com/shibuiwilliam/aozora_classification\n\n\u52d5\u6a5f\n2017/02\u306eTFUG #3\u306b\u53c2\u52a0\u3057\u305f\u306e\u3067\u3059\u304c\u3001Retty\u306e\u4e2d\u306e\u65b9\u304ccharacter-level convolutional neural network\u3092\u3057\u3066\u3044\u3066\u3001\u3053\u308c\u3067\u706b\u304c\u3064\u304d\u307e\u3057\u305f\u3002\nhttps://tfug-tokyo.connpass.com/event/49849/\n\u5143\u30cd\u30bf\u3068\u306a\u3063\u305fQiita\u306e\u8a18\u4e8b\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u3068\u3066\u3082\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\nhttp://qiita.com/bokeneko/items/c0f0ce60a998304400c8\n\u306a\u304acharacter-level cnn\u306e\u8ad6\u6587\u306f\u3053\u3061\u3089\u3067\u3059\u3002\nhttps://papers.nips.cc/paper/5782-character-level-convolutional-networks-for-text-classification.pdf\n\u3055\u3066\u3001\u5f93\u6765\u306e\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3067\u306f\u5358\u8a9e\u306e\u95a2\u4fc2\u6027\u3092\u30d9\u30af\u30c8\u30eb\u5316\uff08\u4f8b\uff1aword2vec\uff09\u3057\u307e\u3059\u3002\u305d\u306e\u524d\u6bb5\u3067\u3001\u65e5\u672c\u8a9e\u6587\u306e\u5834\u5408\u3060\u3068\u5358\u8a9e\u9593\u306b\u30b9\u30da\u30fc\u30b9\u304c\u306a\u3044\u305f\u3081\u3001\u5358\u8a9e\u9593\u306e\u5206\u5272\u304c\u96e3\u3057\u304f\u3001\u5206\u304b\u3061\u66f8\u304d\u304c\u30cf\u30fc\u30c9\u30eb\u306b\u306a\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u3002\n\u79c1\u3082MeCab\u3067\u9811\u5f35\u3063\u305f\u308a\u3057\u3066\u305f\u306e\u3067\u3059\u304c\u3001\u5206\u304b\u3061\u66f8\u304d\u51e6\u7406\u306b\u6642\u9593\u304c\u53d6\u3089\u308c\u3066\u9762\u5012\u3067\u3059\u3002\n\u4eca\u56de\u4f7f\u3046character-level cnn\u3060\u3068\u3001\uff11\u6587\u5b57\uff11\u6587\u5b57\uff08\u5358\u8a9e\u3067\u306f\u306a\u3044\uff09\u3092\u91cf\u5b50\u5316\uff08quantization\uff09\u3059\u308b\u3053\u3068\u3067\u5206\u304b\u3061\u66f8\u304d\u3092\u56de\u907f\u3057\u3066\u3044\u307e\u3059\u3002\n\u3010\u5f93\u6765\u306e\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u6a5f\u68b0\u5b66\u7fd2\u30d5\u30ed\u30fc\u3011\n\u6587\u7ae0\u3000\u2192\u3000\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3000\u2192\u3000\u5206\u304b\u3061\u66f8\u304d\u3000\u2192\u3000\u5358\u8a9e\u30ec\u30d9\u30eb\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3000\u2192\u3000\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u3000\u2192\u3000\u30e2\u30c7\u30eb\u5229\u7528\n\u3010character-level cnn\u3067\u306e\u30d5\u30ed\u30fc\u3011\n\u6587\u7ae0\u3000\u2192\u3000\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3000\u2192\u3000\u6587\u5b57\u30ec\u30d9\u30eb\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3000\u2192\u3000\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u3000\u2192\u3000\u30e2\u30c7\u30eb\u5229\u7528\n\u6587\u7cfb \u517c \u30ca\u30de\u30b1\u30e2\u30ce\u4eba\u9593\u3068\u3057\u3066\u306f\u3001\u624b\u9806\u304c\u6e1b\u3063\u3066\u4e14\u3064\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u304c\u3067\u304d\u308b\u306e\u304c\u8208\u5473\u3092\u305d\u305d\u3063\u305f\u308f\u3051\u3067\u3059\u3002\n\n\u4f5c\u3063\u305f\u3082\u306e\n\u4eca\u56de\u4f5c\u3063\u305f\u306e\u306f\u3001\u9752\u7a7a\u6587\u5eab\u306e\u30c7\u30fc\u30bf\u3092\u5143\u306b\u3001\u4efb\u610f\u306e\u65e5\u672c\u8a9e\u6587\u304c\u590f\u76ee\u6f31\u77f3\u3001\u82a5\u5ddd\u9f8d\u4e4b\u4ecb\u3001\u68ee\u9d0e\u5916\u3001\u5742\u53e3\u5b89\u543e\u306e\u3046\u3061\u3001\u3069\u306e\u6587\u4f53\u306b\u4f3c\u3066\u3044\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u3067\u3059\u3002\nhttp://www.aozora.gr.jp/\n\u9752\u7a7a\u6587\u5eab\u3092\u30cd\u30bf\u306b\u3057\u305f\u7406\u7531\u306f\u5358\u7d14\u3067\u3001\u4e00\u822c\u4eba\u304c\u7c21\u5358\u306b\u5927\u91cf\u306e\u65e5\u672c\u8a9e\u6587\u7ae0\u3092\u5f97\u3089\u308c\u308b\u304b\u3089\u3067\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0b\u306e\uff13\u3064\u3067\u3059\u3002\n1. aozora_scrape.py\u3000\uff1a\u3000\u9752\u7a7a\u6587\u5eab\u304b\u3089\u7279\u5b9a\u306e\u4f5c\u5bb6\u306ezip\u30d5\u30a1\u30a4\u30eb\u4e00\u5f0f\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3057\u3066csv\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n2. aozora_cnn.py\u3000\uff1a\u3000\u9752\u7a7a\u6587\u5eab\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u5143\u306b\u3001character-level cnn\u3067\u6587\u7ae0\u5224\u5b9a\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n3. aozora_classification\u3000\uff1a\u3000\u5224\u5b9a\u5bfe\u8c61\u306e\u6587\u304c\u590f\u76ee\u6f31\u77f3\u3001\u82a5\u5ddd\u9f8d\u4e4b\u4ecb\u3001\u68ee\u9d0e\u5916\u3001\u5742\u53e3\u5b89\u543e\u306e\u3044\u305a\u308c\u306b\u3069\u308c\u3060\u3051\u4f3c\u3066\u3044\u308b\u306e\u304b\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5168\u6587\u306f\u3053\u3061\u3089\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/shibuiwilliam/aozora_classification\n\n\u307e\u305a\u306f\u30c7\u30fc\u30bf\u3092\u96c6\u3081\u3088\u3046\naozora_scrate.py\u306e\u8aac\u660e\u3067\u3059\u3002\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u9752\u7a7a\u6587\u5eab\u306b\u3042\u308b\u7279\u5b9a\u306e\u4f5c\u5bb6\u304b\u3089zip\u30d5\u30a1\u30a4\u30eb\u4e00\u5f0f\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u89e3\u51cd\u3001SHIFT-JIS\u2192UTF-8\u5909\u63db\u3092\u304b\u3051\u3066\u3001\u6700\u7d42\u7684\u306bCSV\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5bfe\u8c61\u306e\u4f5c\u5bb6\u306ftarget_author.csv\u30d5\u30a1\u30a4\u30eb\u5185\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\"author\", \"url\"\nnatsume, http://www.aozora.gr.jp/index_pages/person148.html#sakuhin_list_1\nakutagawa, http://www.aozora.gr.jp/index_pages/person879.html#sakuhin_list_1\nmori, http://www.aozora.gr.jp/index_pages/person129.html#sakuhin_list_1\nsakaguchi, http://www.aozora.gr.jp/index_pages/person1095.html#sakuhin_list_1\nyoshikawa, http://www.aozora.gr.jp/index_pages/person1562.html#sakuhin_list_1\n\n\nauthor\u306f\u4efb\u610f\u306e\u4f5c\u5bb6\u540d\u3067\u3001\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3084\u30bf\u30fc\u30b2\u30c3\u30c8\u5909\u6570\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\nurl\u306f\u9752\u7a7a\u6587\u5eab\u306e\u4f5c\u5bb6\u30da\u30fc\u30b8\u3067\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3053\u306eURL\u3067\u3059\u3002\n\n\u672c\u5f53\u306f\u4f5c\u5bb6\u540d\u3060\u3051\u3067URL\u3082\u5f15\u3063\u5f35\u3063\u3066\u304f\u308b\u3088\u3046\u306b\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u5f8c\u56de\u3057\u306b\u3057\u3066\u305f\u3089\u305d\u306e\u307e\u307e\u653e\u7f6e\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://github.com/shibuiwilliam/aozora_classification/blob/master/aozora_scrape.ipynb\n\u9577\u3044\u3067\u3059\u304c\u3001\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u7c21\u5358\u3067\u3059\u3002\n1. \u4f5c\u696d\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066target_author.csv\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u4f5c\u5bb6\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u308b\u3002\n2. \u5404\u4f5c\u5bb6\u306e\u5168zip\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002\n3. zip\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\u3057\u3066txt\u30d5\u30a1\u30a4\u30eb\u306b\u3059\u308b\u3002\n4. txt\u30d5\u30a1\u30a4\u30eb\u306f\u6587\u5b57\u30b3\u30fc\u30c9\u304cSHIFT-JIS\u306a\u306e\u3067\u3001\u5168\u3066UTF-8\u306b\u5909\u63db\u3057\u305ftxt\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\u3002\n5. UTF-8\u306b\u3057\u305ftxt\u30d5\u30a1\u30a4\u30eb\u3092\u5404\u884c\u3001\u53e5\u70b9\uff08\u3002\uff09\u3067\u5206\u5272\u3057\u3001\u30eb\u30d3\u300a\u300b\u3084\u7de8\u8005\u6ce8\uff3b\uff3d\u3001\u6bb5\u843d\u524d\u30b9\u30da\u30fc\u30b9\u3092\u524a\u9664\u3057\u3066CSV\u30d5\u30a1\u30a4\u30eb\u306b\u3059\u308b\u3002\n\u3053\u308c\u3067\u4f5c\u54c1\u3054\u3068\u306eCSV\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u3042\u304c\u308a\u307e\u3059\u3002\n\u5143\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304c\u3053\u308c\u3067\u3059\u3002\n\nCSV\u5909\u63db\u5f8c\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3053\u3061\u3089\u3067\u3059\u3002\n\n\u6700\u5f8c\u306b\u3067\u304d\u305fCSV\u30d5\u30a1\u30a4\u30eb\u3068\u4f5c\u5bb6\u540d\u304c\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306b\u306a\u308a\u307e\u3059\u3002\n\ncharacter-level cnn\nCSV\u30d5\u30a1\u30a4\u30eb\u3092\u5143\u306bcharacter-level cnn\u3067\u5224\u5b9a\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://github.com/shibuiwilliam/aozora_classification/blob/master/aozora_cnn.ipynb\n\u30e2\u30c7\u30eb\u4f5c\u6210\u90e8\u5206\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://qiita.com/bokeneko/items/c0f0ce60a998304400c8\n\u30b3\u30fc\u30c9\u3092\u63bb\u3044\u6458\u3093\u3067\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305a\u306f\u4f5c\u54c1\u3054\u3068\u306eCSV\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u5bb6\u3054\u3068\u306b\uff11\u30d5\u30a1\u30a4\u30eb\u306b\u7d50\u5408\u3057\u307e\u3059\u3002\n\u306a\u304a\u3001\u9752\u7a7a\u6587\u5eab\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u6700\u521d\u3068\u6700\u5f8c\u306b\u7de8\u8005\u306e\u524d\u66f8\u304d\u30fb\u5f8c\u66f8\u304d\u304c\u3042\u308a\u307e\u3059\u3002\n\u524d\u66f8\u304d\u3001\u5f8c\u66f8\u304d\u306e\u884c\u6570\u306f\u4e0d\u5b9a\u3067\u5224\u5b9a\u304c\u96e3\u3057\u3044\u305f\u3081\u3001\u524d\u66f8\u304d\u306f\u300c--------------\u300d\u307e\u3067\u3001\u5f8c\u66f8\u306f\u4e00\u62ec\u3057\u3066\u6700\u5f8c\u306e\uff12\uff10\u884c\u307e\u3067\u3092\u524a\u3063\u3066\u3044\u307e\u3059\u3002\n\n# Generating integrated file of csv's of all the pieces for each author.\n# One csv file is generated and saved for each author.\n\ndef author_data_integ(auth_target=auth_target):\n    for w in auth_target[1:]:\n        print (\"starting: \" + w[0])\n        auth_dir = '{}{}/'.format(aozora_dir, w[0])\n        csv_dir = '{}{}'.format(auth_dir, \"csv/\")\n        files = os.listdir(csv_dir)\n        integ_np = np.array([[\"author\", \"line\"]])\n        for file in files:\n            if \"csv\" in file:\n                print (\"   now at: \" + file)\n                file_name = csv_dir + file\n                pds_data = pds.read_csv(file_name, index_col=0)\n                pds_data = pds_data.dropna()\n                np_data = np.array(pds_data.ix[:,[0,2]])\n\n                out = [j for j in range(len(np_data)) if '-----------' in str(np_data[j,1])]\n                if not out: out = [1]\n                hyphen_pos = int(out[len(out) - 1])\n\n                last_20 = len(np_data) - 20\n\n                np_data = np_data[hyphen_pos+1:last_20,:]\n                integ_np = np.vstack((integ_np, np_data))\n\n        integ_pds = pds.DataFrame(integ_np[1:,:], columns=integ_np[0,:])\n        integ_pds.to_csv(auth_dir + w[0] + '_integ.csv', quoting=csv.QUOTE_ALL)\n        print (\"finished: \" + w[0])\n\n\n\n\u6b21\u306b\u5404\u4f5c\u5bb6\u306ecsv\u3092\uff11numpy array\u306b\u7d50\u5408\u3057\u307e\u3059\u3002\ndata_integ = np.vstack((np.vstack((np.vstack((natsume, akutagawa)),mori)),sakaguchi))\n\n\n\u7d9a\u3044\u3066\u3001\u30c6\u30ad\u30b9\u30c8\u3092ord()\u95a2\u6570\u3067\u30e6\u30cb\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8868\u3059\u6574\u6570\u306b\u5909\u63db\u3057\u307e\u3059\u3002\nhttps://docs.python.org/3.6/library/functions.html#ord\n\u307e\u305f\u3001\uff11\u6587\u306e\u9577\u3055\u3092\u6700\u9577\uff12\uff10\uff10\u6587\u5b57\u3068\u3057\u3001\uff12\uff10\uff10\u6587\u5b57\u4ee5\u4e0a\u306f\u524a\u9664\u3001\uff12\uff10\uff10\u6587\u5b57\u672a\u6e80\uff10\u57cb\u3081\u3057\u307e\u3059\u3002\n# Converting each line of texts to encoded array.\n\ndef load_data(txt, max_length=200):\n    txt_list = []\n    for l in txt:\n        txt_line = [ord(x) for x in str(l).strip()]\n        # You will get encoded text in array, just like this\n        # [25991, 31456, 12391, 12399, 12394, 12367, 12387, 12390, 23383, 24341, 12391, 12354, 12427, 12290]\n        txt_line = txt_line[:max_length]\n        txt_len = len(txt_line)\n        if txt_len < max_length:\n            txt_line += ([0] * (max_length - txt_len))\n        txt_list.append((txt_line))\n    return txt_list\n\n\n\ncharacter-level cnn\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n# Creating character-level convolutional neural network model.\n\ndef create_model(embed_size=128, max_length=200, filter_sizes=(2, 3, 4, 5), filter_num=64):\n    inp = Input(shape=(max_length,))\n    emb = Embedding(0xffff, embed_size)(inp)\n    emb_ex = Reshape((max_length, embed_size, 1))(emb)\n    convs = []\n    for filter_size in filter_sizes:\n        conv = Convolution2D(filter_num, filter_size, embed_size, activation=\"relu\")(emb_ex)\n        pool = MaxPooling2D(pool_size=(max_length - filter_size + 1, 1))(conv)\n        convs.append(pool)\n    convs_merged = merge(convs, mode='concat')\n    reshape = Reshape((filter_num * len(filter_sizes),))(convs_merged)\n    fc1 = Dense(64, activation=\"relu\")(reshape)\n    bn1 = BatchNormalization()(fc1)\n    do1 = Dropout(0.5)(bn1)\n    fc2 = Dense(3, activation='sigmoid')(do1)\n    model = Model(input=inp, output=fc2)\n    return model\n\n\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3044\u307e\u3059\u3002\n\u30a8\u30dd\u30c3\u30af\u6bce\u306e\u30ed\u30b0\u306f/tmp/\u914d\u4e0b\u306bcsv\u3067\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306b\u3088\u308a\u3001\u691c\u8a3c\u6642\u306eaccuracy\u304c\u6700\u9ad8\u5024\u306e\u5834\u5408\u306f\u3001/tmp/\u914d\u4e0b\u306b\u305d\u306e\u6642\u70b9\u306e\u30e2\u30c7\u30eb\u3092weight*.h5df\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306b\u3088\u3063\u3066\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u9014\u4e2d\u3067\u505c\u6b62\u3059\u308b\u5834\u5408\uff08EC2\u306e\u30b3\u30b9\u30c8\u524a\u6e1b\u3068\u304b\uff09\u3082\u3001\u305d\u306e\u6bb5\u968e\u307e\u3067\u4fdd\u6301\u3067\u304d\u307e\u3059\u3002\nLoad previous weight if exists\u3000\u3068\u30b3\u30e1\u30f3\u30c8\u3057\u3066\u3044\u308b\u90e8\u5206\u3067\u3001\u9014\u4e2d\u505c\u6b62\u3057\u305f\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u305d\u308c\u3092\u30ed\u30fc\u30c9\u3057\u3066\u518d\u958b\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\uff082017/03/06\u66f4\u65b0\uff09\u3002\n# Training the model.\n\ndef train(inputs, targets, batch_size=100, epoch_count=100, max_length=200, model_filepath=aozora_dir + \"model.h5\", learning_rate=0.001):\n    start = learning_rate\n    stop = learning_rate * 0.01\n    learning_rates = np.linspace(start, stop, epoch_count)\n\n    model = create_model(max_length=max_length)\n    optimizer = Adam(lr=learning_rate)\n    model.compile(loss='categorical_crossentropy',\n                  optimizer='adam',\n                  metrics=['accuracy'])\n    model.summary()\n\n    # Load previous weight if exists\n    target = os.path.join('/tmp', 'weights.*.hdf5')\n    files = [(f, os.path.getmtime(f)) for f in glob.glob(target)]\n    if len(files) != 0:\n        latest_saved_model = sorted(files, key=lambda files: files[1])[-1]\n        model.load_weights(latest_saved_model[0])\n\n    # Logging file for each epoch\n    csv_logger_file = '/tmp/clcnn_training.log'\n\n    # Checkpoint model for each epoch\n    checkpoint_filepath = \"/tmp/weights.{epoch:02d}-{loss:.2f}-{acc:.2f}-{val_loss:.2f}-{val_acc:.2f}.hdf5\"\n\n    model.fit(inputs, targets,\n              nb_epoch=epoch_count,\n              batch_size=batch_size,\n              verbose=1,\n              validation_split=0.1,\n              shuffle=True,\n              callbacks=[\n                  LearningRateScheduler(lambda epoch: learning_rates[epoch]),\n                  CSVLogger(csv_logger_file),\n                  ModelCheckpoint(filepath=checkpoint_filepath, verbose=1, save_best_only=True, save_weights_only=False, monitor='val_acc')\n              ])\n\n    model.save(model_filepath)\n\n\n\n\u6700\u5f8c\u306b\u30e2\u30c7\u30eb\u304c\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3055\u308c\u307e\u3059\u304c\u3001\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3067\u4f5c\u6210\u3057\u305f/tmp/weight-*.h5df\u30d5\u30a1\u30a4\u30eb\u3067\u3082\u5224\u5b9a\u306f\u53ef\u80fd\u3067\u3059\u3002\n\u79c1\u306e\u3088\u3046\u306b\u9045\u3044\u30b5\u30fc\u30d0\uff08AWS EC2\u3001GPU\u306a\u3057\uff09\u3067\u3084\u3063\u3066\u3044\u308b\u5834\u5408\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u5b8c\u4e86\u3092\u5f85\u305f\u306a\u304f\u3066\u3082\u5224\u5b9a\u3057\u3066\u904a\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3061\u306a\u307f\u306bEC2 M2.xlarge\uff11\u53f0\u3067\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u3066\u3001\uff12\uff14\u6642\u9593\u7d4c\u3063\u3066\u3082\u7d42\u308f\u308a\u307e\u305b\u3093(T_T)\n\nTips\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092Linux\u4e0a\u3067\u884c\u3046\u3068\u304d\u306f\u3001\u30b3\u30de\u30f3\u30c9\u3092\u5fc5\u305anohup \uff3bcommand\uff3d &\u3067\u631f\u307f\u307e\u3057\u3087\u3046\u3002\n\u4f8b\uff1anohup python aozora_cnn.py &\n\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001Linux\u304b\u3089\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u3082\u51e6\u7406\u306f\u7d9a\u304d\u307e\u3059\u3002\n\u307e\u305f\u5b9f\u884c\u72b6\u6cc1\u3092\u8a18\u9332\u3059\u308bnohup.out\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u3066\u3001\u305d\u306e\u4e2d\u306b\u9032\u884c\u72b6\u6cc1\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\n\u9032\u884c\u72b6\u6cc1\u3092\u898b\u305f\u3044\u5834\u5408\u306fnohup.out\u3092cat\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\ncat nohup.out\n\n\n\u3044\u307e\u306f\uff11\uff13\u30a8\u30dd\u30c3\u30af\u76ee\u306e\u3088\u3046\u3067\u3059\u3002\n\uff11\uff10\uff10\u30a8\u30dd\u30c3\u30af\u306b\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5148\u306f\u307e\u3060\u307e\u3060\u9577\u3044\u3067\u3059\u3002\n\n\u306a\u304a\u3001Keras\u306fEarlyStopping\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u6b63\u7b54\u7387\u3084\u640d\u5931\u95a2\u6570\u304c\u6539\u5584\u3057\u306a\u304f\u306a\u3063\u305f\u3089\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u505c\u6b62\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u30a8\u30dd\u30c3\u30af\u3092\u91cd\u306d\u308b\u3053\u3068\u304c\u5fc5\u305a\u3057\u3082\u6b63\u7b54\u7387\u30fb\u640d\u5931\u95a2\u6570\u306e\u6539\u5584\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u7d44\u307f\u8fbc\u3093\u3067\u307e\u305b\u3093\u304c\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u6642\u9593\u77ed\u7e2e\u306b\u3082\u306a\u308b\u3057\u3001\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\u3002\nhttps://keras.io/ja/callbacks/\n\n\u5224\u5b9a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\u305d\u308c\u3067\u306f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u5224\u5b9a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u5224\u5b9a\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\nhttps://github.com/shibuiwilliam/aozora_classification/blob/master/aozora_classification.ipynb\n\u4eca\u56de\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u9014\u4e2d\u306e\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u5f85\u3061\u304d\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3053\u306e\u5224\u5b9a\u30b3\u30fc\u30c9\u3092\u4f7f\u3046\u3068\u304d\u306f\u4ee5\u4e0b\u306e\u5024\u3092\u7de8\u96c6\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n- model_file\u3000\uff1a\u3000\u30e2\u30c7\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\n- raw_txt\u3000\uff1a\u3000\u5224\u5b9a\u3057\u305f\u3044\u65e5\u672c\u8a9e\u6587\n- target_author\u3000\uff1a\u3000\u5224\u5b9a\u5bfe\u8c61\u306e\u4f5c\u5bb6\u540d\n# coding: utf-8\n\n\"\"\"\nThis predict how much a sentence is similar to one of the Japanese classical author.\nBefore using this, be sure to generate a model using aozora_cnn.py.\nChange the values for model_file to your model hdf5 file path, raw_txt to your favorite sentence in Japanese\nand target_author to the author you trained the model.\n\"\"\"\n\nimport numpy as np\nimport pandas as pds\nfrom keras.models import load_model\n\nmodel_file = \"/tmp/weights.07-0.22-0.92-0.35-0.88.hdf5\"\nraw_txt = \"\u96b4\u897f\u306e\u674e\u5fb4\u306f\u535a\u5b78\u624d\u7a4e\u3001\u5929\u5bf6\u306e\u672b\u5e74\u3001\u82e5\u304f\u3057\u3066\u540d\u3092\u864e\u699c\u306b\u9023\u306d\u3001\u3064\u3044\u3067\u6c5f\u5357\u5c09\u306b\u88dc\u305b\u3089\u308c\u305f\u304c\u3001\u6027\u3001\u72f7\u4ecb\u3001\u81ea\u3089\u6043\u3080\u6240\u9817\u308b\u539a\u304f\u3001\u8ce4\u540f\u306b\u7518\u3093\u305a\u308b\u3092\u6f54\u3057\u3068\u3057\u306a\u304b\u3064\u305f\u3002\"\ntarget_author = [\"\u590f\u76ee\u6f31\u77f3\",\"\u82a5\u5ddd\u9f8d\u4e4b\u4ecb\",\"\u68ee\u9d0e\u5916\",\"\u5742\u53e3\u5b89\u543e\"]\n\n\n\n# Encodes the raw_txt\ndef text_encoding(raw_txt):\n    txt = [ord(x) for x in str(raw_txt).strip()]\n    txt = txt[:200]\n    if len(txt) < 200:\n        txt += ([0] * (200 - len(txt)))\n    return txt\n\n\n\n# Predict\ndef predict(comments, model_filepath=\"model.h5\"):\n    model = load_model(model_filepath)\n    ret = model.predict(comments)\n    return ret\n\n\n\n\nif __name__ == \"__main__\":\n    txt = text_encoding(raw_txt)\n    predict_result = predict(np.array([txt]), model_filepath=model_file)\n\n    pds_predict_result = pds.DataFrame(predict_result, columns=target_author)\n\n\n\n\npds_predict_result\n\n\n\n\n\u4e2d\u5cf6\u6566\u300e\u5c71\u6708\u8a18\u300f\u306e\u5192\u982d\u3092\u5224\u5b9a\u3057\u3066\u307f\u307e\u3059\u3002\n~\u96b4\u897f\u306e\u674e\u5fb4\u306f\u535a\u5b78\u624d\u7a4e\u3001\u5929\u5bf6\u306e\u672b\u5e74\u3001\u82e5\u304f\u3057\u3066\u540d\u3092\u864e\u699c\u306b\u9023\u306d\u3001\u3064\u3044\u3067\u6c5f\u5357\u5c09\u306b\u88dc\u305b\u3089\u308c\u305f\u304c\u3001\u6027\u3001\u72f7\u4ecb\u3001\u81ea\u3089\u6043\u3080\u6240\u9817\u308b\u539a\u304f\u3001\u8ce4\u540f\u306b\u7518\u3093\u305a\u308b\u3092\u6f54\u3057\u3068\u3057\u306a\u304b\u3064\u305f\u3002~\n\n\uff14\u4eba\u306e\u3046\u3061\u3067\u306f\u68ee\u9d0e\u5916\u306b\u8fd1\u3044\u3088\u3046\u3067\u3059\u306d\u3002\n\n\u3064\u304e\u306f\u5ddd\u7aef\u5eb7\u6210\u306e\u300e\u96ea\u56fd\u300f\u304b\u3089\u5192\u982d\u6587\u3067\u3059\u3002\n~\u56fd\u5883\u306e\u9577\u3044\u30c8\u30f3\u30cd\u30eb\u3092\u629c\u3051\u308b\u3068\u96ea\u56fd\u3067\u3042\u3063\u305f\u3002~\n\n\n\u82a5\u5ddd\u9f8d\u4e4b\u4ecb\u306e\u300e\u7f85\u751f\u9580\u300f\u3067\u3001\u6587\u3092\u8aa4\u5b57\u8131\u5b57\u3060\u3089\u3051\u306b\u3057\u3066\u307f\u305f\u3089\u3069\u3046\u3067\u3057\u3087\u3046\u3002\n\u3010\u539f\u6587\u3011\n~\u7f85\u751f\u9580\u304c\u3001\u6731\u96c0\u5927\u8def\u306b\u3042\u308b\u4ee5\u4e0a\u306f\u3001\u3053\u306e\u7537\u306e\u307b\u304b\u306b\u3082\u3001\u96e8\u3084\u307f\u3092\u3059\u308b\u5e02\u5973\u7b20\u3084\u63c9\u70cf\u5e3d\u5b50\u304c\u3001\u3082\u3046\u4e8c\u4e09\u4eba\u306f\u3042\u308a\u305d\u3046\u306a\u3082\u306e\u3067\u3042\u308b\u3002~\n\u3010\u8aa4\u5b57\u8131\u5b57\u3011\n~\u3089\u3057\u3087\u3046\u3082\u3093\u304c\u3001\u6731\u96c0\u5927\u8def\u306b\u3042\u308b\u3044\u3058\u3087\u3046\u306f\u3001\u3053\u306e\u7537\u306e\u307b\u304b\u306b\u3082\u3001\u96e8\u3092\u3059\u308b\u5e02\u5973\u7b20\u3084\u63c9\u70cf\u5e3d\u5b50\u304c\u3001\u3082\u3046\u4e94\u516d\u4eba\u306f\u3042\u308a\u305d\u3046\u306a\u3082\u306e\u3067\u306f\u306a\u3044\u3002~\n\n\u304a\u304a\u3001\u610f\u5916\u3068\u82a5\u5ddd\u9f8d\u4e4b\u4ecb\u3063\u3066\u5224\u5b9a\u3067\u304d\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u6700\u5f8c\u306b\u300e\u3051\u3082\u306e\u30d5\u30ec\u30f3\u30ba\u300f\u307d\u3044\u6587\u3092\u5224\u5b9a\u3057\u3066\u307f\u307e\u3059\u3002\n~\u3059\u3054\u30fc\u3044\u3001\u9752\u7a7a\u6587\u5eab\u306f\u6614\u306e\u65e5\u672c\u6587\u5b66\u4f5c\u54c1\u3092\u63d0\u4f9b\u3059\u308b\u306e\u304c\u5f97\u610f\u306a\u30d5\u30ec\u30f3\u30ba\u306a\u3093\u3060\u306d\uff01~\n\n\u5742\u53e3\u5b89\u543e\uff01\uff1f\n\n\u3055\u3044\u3054\u306b\n\u3068\u3044\u3046\u308f\u3051\u3067\u8272\u3005\u904a\u3093\u3067\u307f\u307e\u3057\u305f\u304c\u3001\u6b21\u306f\u3053\u308c\u3092\u5143\u306bDCGAN\u3067\u30c6\u30ad\u30b9\u30c8\u751f\u6210\u3067\u3082\u3067\u304d\u306a\u3044\u304b\u306a\u3041\u3068\u9069\u5f53\u306a\u3053\u3068\u8003\u3048\u3066\u3044\u305f\u308a\u3057\u307e\u3059\u3002\n# \u9752\u7a7a\u6587\u5eab\u3067\u4f5c\u8005\u3063\u307d\u3055\u5224\u5b9a\n\u9752\u7a7a\u6587\u5eab\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u5229\u7528\u3057\u3066\u3001\u4efb\u610f\u306e\u65e5\u672c\u8a9e\u6587\u306e\u4f5c\u8005\u3063\u307d\u3055\u3092\u5224\u5b9a\u3059\u308b\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://github.com/shibuiwilliam/aozora_classification\n\n\n## \u52d5\u6a5f\n2017/02\u306eTFUG #3\u306b\u53c2\u52a0\u3057\u305f\u306e\u3067\u3059\u304c\u3001Retty\u306e\u4e2d\u306e\u65b9\u304ccharacter-level convolutional neural network\u3092\u3057\u3066\u3044\u3066\u3001\u3053\u308c\u3067\u706b\u304c\u3064\u304d\u307e\u3057\u305f\u3002\nhttps://tfug-tokyo.connpass.com/event/49849/\n\n\u5143\u30cd\u30bf\u3068\u306a\u3063\u305fQiita\u306e\u8a18\u4e8b\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u3068\u3066\u3082\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\nhttp://qiita.com/bokeneko/items/c0f0ce60a998304400c8\n\n\u306a\u304acharacter-level cnn\u306e\u8ad6\u6587\u306f\u3053\u3061\u3089\u3067\u3059\u3002\nhttps://papers.nips.cc/paper/5782-character-level-convolutional-networks-for-text-classification.pdf\n\n\n\u3055\u3066\u3001\u5f93\u6765\u306e\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3067\u306f\u5358\u8a9e\u306e\u95a2\u4fc2\u6027\u3092\u30d9\u30af\u30c8\u30eb\u5316\uff08\u4f8b\uff1aword2vec\uff09\u3057\u307e\u3059\u3002\u305d\u306e\u524d\u6bb5\u3067\u3001\u65e5\u672c\u8a9e\u6587\u306e\u5834\u5408\u3060\u3068\u5358\u8a9e\u9593\u306b\u30b9\u30da\u30fc\u30b9\u304c\u306a\u3044\u305f\u3081\u3001\u5358\u8a9e\u9593\u306e\u5206\u5272\u304c\u96e3\u3057\u304f\u3001\u5206\u304b\u3061\u66f8\u304d\u304c\u30cf\u30fc\u30c9\u30eb\u306b\u306a\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u3002\n\u79c1\u3082MeCab\u3067\u9811\u5f35\u3063\u305f\u308a\u3057\u3066\u305f\u306e\u3067\u3059\u304c\u3001\u5206\u304b\u3061\u66f8\u304d\u51e6\u7406\u306b\u6642\u9593\u304c\u53d6\u3089\u308c\u3066\u9762\u5012\u3067\u3059\u3002\n\u4eca\u56de\u4f7f\u3046character-level cnn\u3060\u3068\u3001\uff11\u6587\u5b57\uff11\u6587\u5b57\uff08\u5358\u8a9e\u3067\u306f\u306a\u3044\uff09\u3092\u91cf\u5b50\u5316\uff08quantization\uff09\u3059\u308b\u3053\u3068\u3067\u5206\u304b\u3061\u66f8\u304d\u3092\u56de\u907f\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3010\u5f93\u6765\u306e\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u6a5f\u68b0\u5b66\u7fd2\u30d5\u30ed\u30fc\u3011\n\u6587\u7ae0\u3000\u2192\u3000\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3000\u2192\u3000\u5206\u304b\u3061\u66f8\u304d\u3000\u2192\u3000\u5358\u8a9e\u30ec\u30d9\u30eb\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3000\u2192\u3000\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u3000\u2192\u3000\u30e2\u30c7\u30eb\u5229\u7528\n\n\u3010character-level cnn\u3067\u306e\u30d5\u30ed\u30fc\u3011\n\u6587\u7ae0\u3000\u2192\u3000\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3000\u2192\u3000\u6587\u5b57\u30ec\u30d9\u30eb\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3000\u2192\u3000\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u3000\u2192\u3000\u30e2\u30c7\u30eb\u5229\u7528\n\n\u6587\u7cfb \u517c \u30ca\u30de\u30b1\u30e2\u30ce\u4eba\u9593\u3068\u3057\u3066\u306f\u3001\u624b\u9806\u304c\u6e1b\u3063\u3066\u4e14\u3064\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u304c\u3067\u304d\u308b\u306e\u304c\u8208\u5473\u3092\u305d\u305d\u3063\u305f\u308f\u3051\u3067\u3059\u3002\n\n\n## \u4f5c\u3063\u305f\u3082\u306e\n\u4eca\u56de\u4f5c\u3063\u305f\u306e\u306f\u3001\u9752\u7a7a\u6587\u5eab\u306e\u30c7\u30fc\u30bf\u3092\u5143\u306b\u3001\u4efb\u610f\u306e\u65e5\u672c\u8a9e\u6587\u304c\u590f\u76ee\u6f31\u77f3\u3001\u82a5\u5ddd\u9f8d\u4e4b\u4ecb\u3001\u68ee\u9d0e\u5916\u3001\u5742\u53e3\u5b89\u543e\u306e\u3046\u3061\u3001\u3069\u306e\u6587\u4f53\u306b\u4f3c\u3066\u3044\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u3067\u3059\u3002\n\nhttp://www.aozora.gr.jp/\n\n\u9752\u7a7a\u6587\u5eab\u3092\u30cd\u30bf\u306b\u3057\u305f\u7406\u7531\u306f\u5358\u7d14\u3067\u3001\u4e00\u822c\u4eba\u304c\u7c21\u5358\u306b\u5927\u91cf\u306e\u65e5\u672c\u8a9e\u6587\u7ae0\u3092\u5f97\u3089\u308c\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u305d\u306e\u305f\u3081\u306b\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0b\u306e\uff13\u3064\u3067\u3059\u3002\n1. aozora_scrape.py\u3000\uff1a\u3000\u9752\u7a7a\u6587\u5eab\u304b\u3089\u7279\u5b9a\u306e\u4f5c\u5bb6\u306ezip\u30d5\u30a1\u30a4\u30eb\u4e00\u5f0f\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3057\u3066csv\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n2. aozora_cnn.py\u3000\uff1a\u3000\u9752\u7a7a\u6587\u5eab\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u5143\u306b\u3001character-level cnn\u3067\u6587\u7ae0\u5224\u5b9a\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n3. aozora_classification\u3000\uff1a\u3000\u5224\u5b9a\u5bfe\u8c61\u306e\u6587\u304c\u590f\u76ee\u6f31\u77f3\u3001\u82a5\u5ddd\u9f8d\u4e4b\u4ecb\u3001\u68ee\u9d0e\u5916\u3001\u5742\u53e3\u5b89\u543e\u306e\u3044\u305a\u308c\u306b\u3069\u308c\u3060\u3051\u4f3c\u3066\u3044\u308b\u306e\u304b\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5168\u6587\u306f\u3053\u3061\u3089\u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/shibuiwilliam/aozora_classification\n\n\n## \u307e\u305a\u306f\u30c7\u30fc\u30bf\u3092\u96c6\u3081\u3088\u3046\naozora_scrate.py\u306e\u8aac\u660e\u3067\u3059\u3002\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u9752\u7a7a\u6587\u5eab\u306b\u3042\u308b\u7279\u5b9a\u306e\u4f5c\u5bb6\u304b\u3089zip\u30d5\u30a1\u30a4\u30eb\u4e00\u5f0f\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u89e3\u51cd\u3001SHIFT-JIS\u2192UTF-8\u5909\u63db\u3092\u304b\u3051\u3066\u3001\u6700\u7d42\u7684\u306bCSV\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5bfe\u8c61\u306e\u4f5c\u5bb6\u306ftarget_author.csv\u30d5\u30a1\u30a4\u30eb\u5185\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```\n\"author\", \"url\"\nnatsume, http://www.aozora.gr.jp/index_pages/person148.html#sakuhin_list_1\nakutagawa, http://www.aozora.gr.jp/index_pages/person879.html#sakuhin_list_1\nmori, http://www.aozora.gr.jp/index_pages/person129.html#sakuhin_list_1\nsakaguchi, http://www.aozora.gr.jp/index_pages/person1095.html#sakuhin_list_1\nyoshikawa, http://www.aozora.gr.jp/index_pages/person1562.html#sakuhin_list_1\n\n```\n\n\nauthor\u306f\u4efb\u610f\u306e\u4f5c\u5bb6\u540d\u3067\u3001\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3084\u30bf\u30fc\u30b2\u30c3\u30c8\u5909\u6570\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\nurl\u306f\u9752\u7a7a\u6587\u5eab\u306e\u4f5c\u5bb6\u30da\u30fc\u30b8\u3067\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3053\u306eURL\u3067\u3059\u3002\n\n![2017-03-05.PNG](https://qiita-image-store.s3.amazonaws.com/0/55384/830539ba-5e3b-7694-2e6e-00222a5db143.png)\n\n\u672c\u5f53\u306f\u4f5c\u5bb6\u540d\u3060\u3051\u3067URL\u3082\u5f15\u3063\u5f35\u3063\u3066\u304f\u308b\u3088\u3046\u306b\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u5f8c\u56de\u3057\u306b\u3057\u3066\u305f\u3089\u305d\u306e\u307e\u307e\u653e\u7f6e\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://github.com/shibuiwilliam/aozora_classification/blob/master/aozora_scrape.ipynb\n\n\u9577\u3044\u3067\u3059\u304c\u3001\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u7c21\u5358\u3067\u3059\u3002\n1. \u4f5c\u696d\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066target_author.csv\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u4f5c\u5bb6\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u308b\u3002\n2. \u5404\u4f5c\u5bb6\u306e\u5168zip\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002\n3. zip\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\u3057\u3066txt\u30d5\u30a1\u30a4\u30eb\u306b\u3059\u308b\u3002\n4. txt\u30d5\u30a1\u30a4\u30eb\u306f\u6587\u5b57\u30b3\u30fc\u30c9\u304cSHIFT-JIS\u306a\u306e\u3067\u3001\u5168\u3066UTF-8\u306b\u5909\u63db\u3057\u305ftxt\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\u3002\n5. UTF-8\u306b\u3057\u305ftxt\u30d5\u30a1\u30a4\u30eb\u3092\u5404\u884c\u3001\u53e5\u70b9\uff08\u3002\uff09\u3067\u5206\u5272\u3057\u3001\u30eb\u30d3\u300a\u300b\u3084\u7de8\u8005\u6ce8\uff3b\uff3d\u3001\u6bb5\u843d\u524d\u30b9\u30da\u30fc\u30b9\u3092\u524a\u9664\u3057\u3066CSV\u30d5\u30a1\u30a4\u30eb\u306b\u3059\u308b\u3002\n\n\u3053\u308c\u3067\u4f5c\u54c1\u3054\u3068\u306eCSV\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u3042\u304c\u308a\u307e\u3059\u3002\n\u5143\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304c\u3053\u308c\u3067\u3059\u3002\n\n![2017-03-05_2.PNG](https://qiita-image-store.s3.amazonaws.com/0/55384/858a6641-897c-5ade-8acd-2b4a907fdbc1.png)\n\n\n\nCSV\u5909\u63db\u5f8c\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3053\u3061\u3089\u3067\u3059\u3002\n\n![2017-03-05_3.PNG](https://qiita-image-store.s3.amazonaws.com/0/55384/897c9bd0-1669-839e-a209-500e1a458127.png)\n\n\n\n\u6700\u5f8c\u306b\u3067\u304d\u305fCSV\u30d5\u30a1\u30a4\u30eb\u3068\u4f5c\u5bb6\u540d\u304c\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n## character-level cnn\nCSV\u30d5\u30a1\u30a4\u30eb\u3092\u5143\u306bcharacter-level cnn\u3067\u5224\u5b9a\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://github.com/shibuiwilliam/aozora_classification/blob/master/aozora_cnn.ipynb\n\n\n\u30e2\u30c7\u30eb\u4f5c\u6210\u90e8\u5206\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://qiita.com/bokeneko/items/c0f0ce60a998304400c8\n\n\n\u30b3\u30fc\u30c9\u3092\u63bb\u3044\u6458\u3093\u3067\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u4f5c\u54c1\u3054\u3068\u306eCSV\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u5bb6\u3054\u3068\u306b\uff11\u30d5\u30a1\u30a4\u30eb\u306b\u7d50\u5408\u3057\u307e\u3059\u3002\n\u306a\u304a\u3001\u9752\u7a7a\u6587\u5eab\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u6700\u521d\u3068\u6700\u5f8c\u306b\u7de8\u8005\u306e\u524d\u66f8\u304d\u30fb\u5f8c\u66f8\u304d\u304c\u3042\u308a\u307e\u3059\u3002\n\u524d\u66f8\u304d\u3001\u5f8c\u66f8\u304d\u306e\u884c\u6570\u306f\u4e0d\u5b9a\u3067\u5224\u5b9a\u304c\u96e3\u3057\u3044\u305f\u3081\u3001\u524d\u66f8\u304d\u306f\u300c--------------\u300d\u307e\u3067\u3001\u5f8c\u66f8\u306f\u4e00\u62ec\u3057\u3066\u6700\u5f8c\u306e\uff12\uff10\u884c\u307e\u3067\u3092\u524a\u3063\u3066\u3044\u307e\u3059\u3002\n\n![2017-03-05_5.png](https://qiita-image-store.s3.amazonaws.com/0/55384/6bb30c28-d66e-4e9e-db64-f8454d857a3a.png)\n\n\n\n```\n# Generating integrated file of csv's of all the pieces for each author.\n# One csv file is generated and saved for each author.\n\ndef author_data_integ(auth_target=auth_target):\n    for w in auth_target[1:]:\n        print (\"starting: \" + w[0])\n        auth_dir = '{}{}/'.format(aozora_dir, w[0])\n        csv_dir = '{}{}'.format(auth_dir, \"csv/\")\n        files = os.listdir(csv_dir)\n        integ_np = np.array([[\"author\", \"line\"]])\n        for file in files:\n            if \"csv\" in file:\n                print (\"   now at: \" + file)\n                file_name = csv_dir + file\n                pds_data = pds.read_csv(file_name, index_col=0)\n                pds_data = pds_data.dropna()\n                np_data = np.array(pds_data.ix[:,[0,2]])\n\n                out = [j for j in range(len(np_data)) if '-----------' in str(np_data[j,1])]\n                if not out: out = [1]\n                hyphen_pos = int(out[len(out) - 1])\n\n                last_20 = len(np_data) - 20\n\n                np_data = np_data[hyphen_pos+1:last_20,:]\n                integ_np = np.vstack((integ_np, np_data))\n\n        integ_pds = pds.DataFrame(integ_np[1:,:], columns=integ_np[0,:])\n        integ_pds.to_csv(auth_dir + w[0] + '_integ.csv', quoting=csv.QUOTE_ALL)\n        print (\"finished: \" + w[0])\n\n\n```\n\n\n\u6b21\u306b\u5404\u4f5c\u5bb6\u306ecsv\u3092\uff11numpy array\u306b\u7d50\u5408\u3057\u307e\u3059\u3002\n\n\n```\ndata_integ = np.vstack((np.vstack((np.vstack((natsume, akutagawa)),mori)),sakaguchi))\n\n```\n\n\n\u7d9a\u3044\u3066\u3001\u30c6\u30ad\u30b9\u30c8\u3092ord()\u95a2\u6570\u3067\u30e6\u30cb\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8868\u3059\u6574\u6570\u306b\u5909\u63db\u3057\u307e\u3059\u3002\nhttps://docs.python.org/3.6/library/functions.html#ord\n\u307e\u305f\u3001\uff11\u6587\u306e\u9577\u3055\u3092\u6700\u9577\uff12\uff10\uff10\u6587\u5b57\u3068\u3057\u3001\uff12\uff10\uff10\u6587\u5b57\u4ee5\u4e0a\u306f\u524a\u9664\u3001\uff12\uff10\uff10\u6587\u5b57\u672a\u6e80\uff10\u57cb\u3081\u3057\u307e\u3059\u3002\n\n\n```\n# Converting each line of texts to encoded array.\n\ndef load_data(txt, max_length=200):\n    txt_list = []\n    for l in txt:\n        txt_line = [ord(x) for x in str(l).strip()]\n        # You will get encoded text in array, just like this\n        # [25991, 31456, 12391, 12399, 12394, 12367, 12387, 12390, 23383, 24341, 12391, 12354, 12427, 12290]\n        txt_line = txt_line[:max_length]\n        txt_len = len(txt_line)\n        if txt_len < max_length:\n            txt_line += ([0] * (max_length - txt_len))\n        txt_list.append((txt_line))\n    return txt_list\n\n\n```\n\n\ncharacter-level cnn\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\n```\n# Creating character-level convolutional neural network model.\n\ndef create_model(embed_size=128, max_length=200, filter_sizes=(2, 3, 4, 5), filter_num=64):\n    inp = Input(shape=(max_length,))\n    emb = Embedding(0xffff, embed_size)(inp)\n    emb_ex = Reshape((max_length, embed_size, 1))(emb)\n    convs = []\n    for filter_size in filter_sizes:\n        conv = Convolution2D(filter_num, filter_size, embed_size, activation=\"relu\")(emb_ex)\n        pool = MaxPooling2D(pool_size=(max_length - filter_size + 1, 1))(conv)\n        convs.append(pool)\n    convs_merged = merge(convs, mode='concat')\n    reshape = Reshape((filter_num * len(filter_sizes),))(convs_merged)\n    fc1 = Dense(64, activation=\"relu\")(reshape)\n    bn1 = BatchNormalization()(fc1)\n    do1 = Dropout(0.5)(bn1)\n    fc2 = Dense(3, activation='sigmoid')(do1)\n    model = Model(input=inp, output=fc2)\n    return model\n\n\n```\n\n\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3044\u307e\u3059\u3002\n\u30a8\u30dd\u30c3\u30af\u6bce\u306e\u30ed\u30b0\u306f/tmp/\u914d\u4e0b\u306bcsv\u3067\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306b\u3088\u308a\u3001\u691c\u8a3c\u6642\u306eaccuracy\u304c\u6700\u9ad8\u5024\u306e\u5834\u5408\u306f\u3001/tmp/\u914d\u4e0b\u306b\u305d\u306e\u6642\u70b9\u306e\u30e2\u30c7\u30eb\u3092weight*.h5df\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306b\u3088\u3063\u3066\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u9014\u4e2d\u3067\u505c\u6b62\u3059\u308b\u5834\u5408\uff08EC2\u306e\u30b3\u30b9\u30c8\u524a\u6e1b\u3068\u304b\uff09\u3082\u3001\u305d\u306e\u6bb5\u968e\u307e\u3067\u4fdd\u6301\u3067\u304d\u307e\u3059\u3002\nLoad previous weight if exists\u3000\u3068\u30b3\u30e1\u30f3\u30c8\u3057\u3066\u3044\u308b\u90e8\u5206\u3067\u3001\u9014\u4e2d\u505c\u6b62\u3057\u305f\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u305d\u308c\u3092\u30ed\u30fc\u30c9\u3057\u3066\u518d\u958b\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\uff082017/03/06\u66f4\u65b0\uff09\u3002\n\n```\n# Training the model.\n\ndef train(inputs, targets, batch_size=100, epoch_count=100, max_length=200, model_filepath=aozora_dir + \"model.h5\", learning_rate=0.001):\n    start = learning_rate\n    stop = learning_rate * 0.01\n    learning_rates = np.linspace(start, stop, epoch_count)\n\n    model = create_model(max_length=max_length)\n    optimizer = Adam(lr=learning_rate)\n    model.compile(loss='categorical_crossentropy',\n                  optimizer='adam',\n                  metrics=['accuracy'])\n    model.summary()\n   \n    # Load previous weight if exists\n    target = os.path.join('/tmp', 'weights.*.hdf5')\n    files = [(f, os.path.getmtime(f)) for f in glob.glob(target)]\n    if len(files) != 0:\n        latest_saved_model = sorted(files, key=lambda files: files[1])[-1]\n        model.load_weights(latest_saved_model[0])\n\n    # Logging file for each epoch\n    csv_logger_file = '/tmp/clcnn_training.log'\n    \n    # Checkpoint model for each epoch\n    checkpoint_filepath = \"/tmp/weights.{epoch:02d}-{loss:.2f}-{acc:.2f}-{val_loss:.2f}-{val_acc:.2f}.hdf5\"\n\n    model.fit(inputs, targets,\n              nb_epoch=epoch_count,\n              batch_size=batch_size,\n              verbose=1,\n              validation_split=0.1,\n              shuffle=True,\n              callbacks=[\n                  LearningRateScheduler(lambda epoch: learning_rates[epoch]),\n                  CSVLogger(csv_logger_file),\n                  ModelCheckpoint(filepath=checkpoint_filepath, verbose=1, save_best_only=True, save_weights_only=False, monitor='val_acc')\n              ])\n\n    model.save(model_filepath)\n\n\n```\n\n\u6700\u5f8c\u306b\u30e2\u30c7\u30eb\u304c\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3055\u308c\u307e\u3059\u304c\u3001\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3067\u4f5c\u6210\u3057\u305f/tmp/weight-*.h5df\u30d5\u30a1\u30a4\u30eb\u3067\u3082\u5224\u5b9a\u306f\u53ef\u80fd\u3067\u3059\u3002\n\u79c1\u306e\u3088\u3046\u306b\u9045\u3044\u30b5\u30fc\u30d0\uff08AWS EC2\u3001GPU\u306a\u3057\uff09\u3067\u3084\u3063\u3066\u3044\u308b\u5834\u5408\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u5b8c\u4e86\u3092\u5f85\u305f\u306a\u304f\u3066\u3082\u5224\u5b9a\u3057\u3066\u904a\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\u3061\u306a\u307f\u306bEC2 M2.xlarge\uff11\u53f0\u3067\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3057\u3066\u3001\uff12\uff14\u6642\u9593\u7d4c\u3063\u3066\u3082\u7d42\u308f\u308a\u307e\u305b\u3093(T_T)\n\n\n### Tips\n\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092Linux\u4e0a\u3067\u884c\u3046\u3068\u304d\u306f\u3001\u30b3\u30de\u30f3\u30c9\u3092\u5fc5\u305anohup \uff3bcommand\uff3d &\u3067\u631f\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\n\u4f8b\uff1anohup python aozora_cnn.py &\n\n```\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001Linux\u304b\u3089\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u3066\u3082\u51e6\u7406\u306f\u7d9a\u304d\u307e\u3059\u3002\n\u307e\u305f\u5b9f\u884c\u72b6\u6cc1\u3092\u8a18\u9332\u3059\u308bnohup.out\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u3066\u3001\u305d\u306e\u4e2d\u306b\u9032\u884c\u72b6\u6cc1\u304c\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\n\u9032\u884c\u72b6\u6cc1\u3092\u898b\u305f\u3044\u5834\u5408\u306fnohup.out\u3092cat\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\ncat nohup.out\n\n```\n\n\u3044\u307e\u306f\uff11\uff13\u30a8\u30dd\u30c3\u30af\u76ee\u306e\u3088\u3046\u3067\u3059\u3002\n\uff11\uff10\uff10\u30a8\u30dd\u30c3\u30af\u306b\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5148\u306f\u307e\u3060\u307e\u3060\u9577\u3044\u3067\u3059\u3002\n\n![2017-03-05_9.PNG](https://qiita-image-store.s3.amazonaws.com/0/55384/07c14168-257c-0bd9-a805-a92ce8511521.png)\n\n\n\u306a\u304a\u3001Keras\u306fEarlyStopping\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u6b63\u7b54\u7387\u3084\u640d\u5931\u95a2\u6570\u304c\u6539\u5584\u3057\u306a\u304f\u306a\u3063\u305f\u3089\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u505c\u6b62\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u30a8\u30dd\u30c3\u30af\u3092\u91cd\u306d\u308b\u3053\u3068\u304c\u5fc5\u305a\u3057\u3082\u6b63\u7b54\u7387\u30fb\u640d\u5931\u95a2\u6570\u306e\u6539\u5584\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u7d44\u307f\u8fbc\u3093\u3067\u307e\u305b\u3093\u304c\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u6642\u9593\u77ed\u7e2e\u306b\u3082\u306a\u308b\u3057\u3001\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\u3002\nhttps://keras.io/ja/callbacks/\n\n\n## \u5224\u5b9a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n\u305d\u308c\u3067\u306f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u5224\u5b9a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u5224\u5b9a\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\nhttps://github.com/shibuiwilliam/aozora_classification/blob/master/aozora_classification.ipynb\n\n\n\u4eca\u56de\u306f\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u9014\u4e2d\u306e\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u5f85\u3061\u304d\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3053\u306e\u5224\u5b9a\u30b3\u30fc\u30c9\u3092\u4f7f\u3046\u3068\u304d\u306f\u4ee5\u4e0b\u306e\u5024\u3092\u7de8\u96c6\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n- model_file\u3000\uff1a\u3000\u30e2\u30c7\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\n- raw_txt\u3000\uff1a\u3000\u5224\u5b9a\u3057\u305f\u3044\u65e5\u672c\u8a9e\u6587\n- target_author\u3000\uff1a\u3000\u5224\u5b9a\u5bfe\u8c61\u306e\u4f5c\u5bb6\u540d\n\n```\n# coding: utf-8\n\n\"\"\"\nThis predict how much a sentence is similar to one of the Japanese classical author.\nBefore using this, be sure to generate a model using aozora_cnn.py.\nChange the values for model_file to your model hdf5 file path, raw_txt to your favorite sentence in Japanese\nand target_author to the author you trained the model.\n\"\"\"\n\nimport numpy as np\nimport pandas as pds\nfrom keras.models import load_model\n\nmodel_file = \"/tmp/weights.07-0.22-0.92-0.35-0.88.hdf5\"\nraw_txt = \"\u96b4\u897f\u306e\u674e\u5fb4\u306f\u535a\u5b78\u624d\u7a4e\u3001\u5929\u5bf6\u306e\u672b\u5e74\u3001\u82e5\u304f\u3057\u3066\u540d\u3092\u864e\u699c\u306b\u9023\u306d\u3001\u3064\u3044\u3067\u6c5f\u5357\u5c09\u306b\u88dc\u305b\u3089\u308c\u305f\u304c\u3001\u6027\u3001\u72f7\u4ecb\u3001\u81ea\u3089\u6043\u3080\u6240\u9817\u308b\u539a\u304f\u3001\u8ce4\u540f\u306b\u7518\u3093\u305a\u308b\u3092\u6f54\u3057\u3068\u3057\u306a\u304b\u3064\u305f\u3002\"\ntarget_author = [\"\u590f\u76ee\u6f31\u77f3\",\"\u82a5\u5ddd\u9f8d\u4e4b\u4ecb\",\"\u68ee\u9d0e\u5916\",\"\u5742\u53e3\u5b89\u543e\"]\n\n\n\n# Encodes the raw_txt\ndef text_encoding(raw_txt):\n    txt = [ord(x) for x in str(raw_txt).strip()]\n    txt = txt[:200]\n    if len(txt) < 200:\n        txt += ([0] * (200 - len(txt)))\n    return txt\n\n\n\n# Predict\ndef predict(comments, model_filepath=\"model.h5\"):\n    model = load_model(model_filepath)\n    ret = model.predict(comments)\n    return ret\n\n\n\n\nif __name__ == \"__main__\":\n    txt = text_encoding(raw_txt)\n    predict_result = predict(np.array([txt]), model_filepath=model_file)\n\n    pds_predict_result = pds.DataFrame(predict_result, columns=target_author)\n\n\n\n\npds_predict_result\n\n\n```\n\n\n### \u4e2d\u5cf6\u6566\u300e\u5c71\u6708\u8a18\u300f\u306e\u5192\u982d\u3092\u5224\u5b9a\u3057\u3066\u307f\u307e\u3059\u3002\n\n~\u96b4\u897f\u306e\u674e\u5fb4\u306f\u535a\u5b78\u624d\u7a4e\u3001\u5929\u5bf6\u306e\u672b\u5e74\u3001\u82e5\u304f\u3057\u3066\u540d\u3092\u864e\u699c\u306b\u9023\u306d\u3001\u3064\u3044\u3067\u6c5f\u5357\u5c09\u306b\u88dc\u305b\u3089\u308c\u305f\u304c\u3001\u6027\u3001\u72f7\u4ecb\u3001\u81ea\u3089\u6043\u3080\u6240\u9817\u308b\u539a\u304f\u3001\u8ce4\u540f\u306b\u7518\u3093\u305a\u308b\u3092\u6f54\u3057\u3068\u3057\u306a\u304b\u3064\u305f\u3002~\n\n\n![2017-03-05_11.PNG](https://qiita-image-store.s3.amazonaws.com/0/55384/3246fe37-3f43-6a38-a2bb-455127255d17.png)\n\n\n\n\uff14\u4eba\u306e\u3046\u3061\u3067\u306f\u68ee\u9d0e\u5916\u306b\u8fd1\u3044\u3088\u3046\u3067\u3059\u306d\u3002\n\n\n\n\n### \u3064\u304e\u306f\u5ddd\u7aef\u5eb7\u6210\u306e\u300e\u96ea\u56fd\u300f\u304b\u3089\u5192\u982d\u6587\u3067\u3059\u3002\n\n~\u56fd\u5883\u306e\u9577\u3044\u30c8\u30f3\u30cd\u30eb\u3092\u629c\u3051\u308b\u3068\u96ea\u56fd\u3067\u3042\u3063\u305f\u3002~\n\n![2017-03-05_7.png](https://qiita-image-store.s3.amazonaws.com/0/55384/c2e008dd-2451-af32-8ab2-1f0e89485787.png)\n\n\n\n\n\n### \u82a5\u5ddd\u9f8d\u4e4b\u4ecb\u306e\u300e\u7f85\u751f\u9580\u300f\u3067\u3001\u6587\u3092\u8aa4\u5b57\u8131\u5b57\u3060\u3089\u3051\u306b\u3057\u3066\u307f\u305f\u3089\u3069\u3046\u3067\u3057\u3087\u3046\u3002\n\n\u3010\u539f\u6587\u3011\n~\u7f85\u751f\u9580\u304c\u3001\u6731\u96c0\u5927\u8def\u306b\u3042\u308b\u4ee5\u4e0a\u306f\u3001\u3053\u306e\u7537\u306e\u307b\u304b\u306b\u3082\u3001\u96e8\u3084\u307f\u3092\u3059\u308b\u5e02\u5973\u7b20\u3084\u63c9\u70cf\u5e3d\u5b50\u304c\u3001\u3082\u3046\u4e8c\u4e09\u4eba\u306f\u3042\u308a\u305d\u3046\u306a\u3082\u306e\u3067\u3042\u308b\u3002~\n\n\u3010\u8aa4\u5b57\u8131\u5b57\u3011\n~\u3089\u3057\u3087\u3046\u3082\u3093\u304c\u3001\u6731\u96c0\u5927\u8def\u306b\u3042\u308b\u3044\u3058\u3087\u3046\u306f\u3001\u3053\u306e\u7537\u306e\u307b\u304b\u306b\u3082\u3001\u96e8\u3092\u3059\u308b\u5e02\u5973\u7b20\u3084\u63c9\u70cf\u5e3d\u5b50\u304c\u3001\u3082\u3046\u4e94\u516d\u4eba\u306f\u3042\u308a\u305d\u3046\u306a\u3082\u306e\u3067\u306f\u306a\u3044\u3002~\n\n\n![2017-03-05_8.PNG](https://qiita-image-store.s3.amazonaws.com/0/55384/84bfcd54-af86-03d3-da86-83200c332510.png)\n\n\n\n\u304a\u304a\u3001\u610f\u5916\u3068\u82a5\u5ddd\u9f8d\u4e4b\u4ecb\u3063\u3066\u5224\u5b9a\u3067\u304d\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\n### \u6700\u5f8c\u306b\u300e\u3051\u3082\u306e\u30d5\u30ec\u30f3\u30ba\u300f\u307d\u3044\u6587\u3092\u5224\u5b9a\u3057\u3066\u307f\u307e\u3059\u3002\n\n~\u3059\u3054\u30fc\u3044\u3001\u9752\u7a7a\u6587\u5eab\u306f\u6614\u306e\u65e5\u672c\u6587\u5b66\u4f5c\u54c1\u3092\u63d0\u4f9b\u3059\u308b\u306e\u304c\u5f97\u610f\u306a\u30d5\u30ec\u30f3\u30ba\u306a\u3093\u3060\u306d\uff01~\n\n![2017-03-05_10.PNG](https://qiita-image-store.s3.amazonaws.com/0/55384/79405f84-5d47-e399-9201-d392c9953a42.png)\n\n\n**\u5742\u53e3\u5b89\u543e\uff01\uff1f**\n\n\n\n## \u3055\u3044\u3054\u306b\n\u3068\u3044\u3046\u308f\u3051\u3067\u8272\u3005\u904a\u3093\u3067\u307f\u307e\u3057\u305f\u304c\u3001\u6b21\u306f\u3053\u308c\u3092\u5143\u306bDCGAN\u3067\u30c6\u30ad\u30b9\u30c8\u751f\u6210\u3067\u3082\u3067\u304d\u306a\u3044\u304b\u306a\u3041\u3068\u9069\u5f53\u306a\u3053\u3068\u8003\u3048\u3066\u3044\u305f\u308a\u3057\u307e\u3059\u3002\n\n"}