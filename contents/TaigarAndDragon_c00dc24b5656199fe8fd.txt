{"context": "\n\nSJIS\u3067\u306e\u30d0\u30a4\u30c8\u6570\u3092\u53d6\u5f97\u3059\u308b\n/*\n * SJIS\u3067\u306e\u30d0\u30a4\u30c8\u6570\uff08\u5168\u89d22\u3001\u534a\u89d21\uff09\u3092\u7b97\u51fa\u3059\u308b\n * (String.length()\u306f\u5168\u89d2 \u534a\u89d2\u3092\u533a\u5225\u3057\u306a\u3044)\n */     \nprivate static Integer getSJISLength(String s) {\n    Integer zenkakuLength = s.replaceAll('[\\\\uFF61-\\\\uFF9F\\\\u0020-\\\\u007E]', '').length();\n    Integer hankakuLength = s.length() - zenkakuLength;\n    return zenkakuLength * 2 + hankakuLength;\n}\n\n\nHTML\u6587\u5b57\u5217\u3092Plain\u30c6\u30ad\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\n/*\n * HTML\u6587\u5b57\u5217\u3092Plain\u30c6\u30ad\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\n *  html HTML \u6587\u5b57\u5217\n *  \u623b\u308a\u5024 Plain\u30c6\u30ad\u30b9\u30c8\n */\npublic static String convertToHtmlToText(String html){\n    String htmlPattern = '<(?i).*?>';\n    String breakPattern = '(?i)<br\\\\s*/?>';  // matches <br>, <BR>, <br/>, <br />, <br   />, etc.\n    String whitespacePattern = '\\\\s+';\n\n    String workingText = html!=null ? html : '';\n\n    // replace all HTML break tags with the newLine character\n    Pattern lineBreaks = Pattern.compile(breakPattern);\n    Matcher matchedLineBreaks = lineBreaks.matcher(workingText);\n    workingText = matchedLineBreaks.replaceAll(CommonUtility.CRLF);\n\n    //plain\u30c6\u30ad\u30b9\u30c8\u306b\u5909\u63db\u3057\u305f\u6642\u306b\u898b\u6804\u3048\u304c\u3088\u304f\u306a\u308b\u3088\u3046\u306b\u3059\u308b\n    workingText = workingText.replaceAll('</li>', CommonUtility.CRLF);\n    workingText = workingText.replaceAll('<li>', '- ');\n\n    // HTML\u30bf\u30b0\u306e\u524a\u9664\n    Pattern htmlTags = Pattern.compile(htmlPattern);\n    Matcher matchedHTML = htmlTags.matcher(workingText);\n    workingText = matchedHTML.replaceAll('');\n\n    //urlEncode\u3057\u3066\u30b9\u30da\u30fc\u30b9\u3068\u6539\u884c\u3092\u88dc\u6b63\u3059\u308b\n    workingText = EncodingUtil.urlEncode(workingText, 'UTF-8');\n    workingText = workingText.replaceAll('%C2%A0', '+'); //space\n    workingText = workingText.replaceAll('%3Cbr%3E', '%0D%0A'); //carriage return\n    workingText = EncodingUtil.urlDecode(workingText, 'UTF-8');   \n\n    return workingText;\n}        \n\n\n\u65e5\u4ed8\u304b\u3089\u65e5\u672c\u8a9e\u306e\u66dc\u65e5\u3092\u8fd4\u3059\nprivate static Map<String, String> JPN_YOUBI = new Map<String, String>{'Monday'=>'\u6708', 'Tuesday'=>'\u706b', 'Wednesday'=>'\u6c34', 'Thursday'=>'\u6728', 'Friday'=>'\u91d1', 'Saturday'=>'\u571f', 'Sunday'=>'\u65e5' };\n\n/*\n * \u65e5\u4ed8\u304b\u3089\u65e5\u672c\u8a9e\u306e\u66dc\u65e5\u3092\u8fd4\u3059\n *  dt \u5bfe\u8c61\u306e\u65e5\u4ed8\u6642\u9593\n */ \npublic static String getJapaneseYoubi(Datetime dt){\n    return JPN_YOUBI.get(dt.format('EEEE'));    \n}\n\n####SJIS\u3067\u306e\u30d0\u30a4\u30c8\u6570\u3092\u53d6\u5f97\u3059\u308b\n```java\n/*\n * SJIS\u3067\u306e\u30d0\u30a4\u30c8\u6570\uff08\u5168\u89d22\u3001\u534a\u89d21\uff09\u3092\u7b97\u51fa\u3059\u308b\n * (String.length()\u306f\u5168\u89d2 \u534a\u89d2\u3092\u533a\u5225\u3057\u306a\u3044)\n */     \nprivate static Integer getSJISLength(String s) {\n    Integer zenkakuLength = s.replaceAll('[\\\\uFF61-\\\\uFF9F\\\\u0020-\\\\u007E]', '').length();\n    Integer hankakuLength = s.length() - zenkakuLength;\n    return zenkakuLength * 2 + hankakuLength;\n}\n```\n\n####HTML\u6587\u5b57\u5217\u3092Plain\u30c6\u30ad\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\n```java\n/*\n * HTML\u6587\u5b57\u5217\u3092Plain\u30c6\u30ad\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\n *  html HTML \u6587\u5b57\u5217\n *  \u623b\u308a\u5024 Plain\u30c6\u30ad\u30b9\u30c8\n */\npublic static String convertToHtmlToText(String html){\n    String htmlPattern = '<(?i).*?>';\n    String breakPattern = '(?i)<br\\\\s*/?>';  // matches <br>, <BR>, <br/>, <br />, <br   />, etc.\n    String whitespacePattern = '\\\\s+';\n\n    String workingText = html!=null ? html : '';\n\n    // replace all HTML break tags with the newLine character\n    Pattern lineBreaks = Pattern.compile(breakPattern);\n    Matcher matchedLineBreaks = lineBreaks.matcher(workingText);\n    workingText = matchedLineBreaks.replaceAll(CommonUtility.CRLF);\n\n    //plain\u30c6\u30ad\u30b9\u30c8\u306b\u5909\u63db\u3057\u305f\u6642\u306b\u898b\u6804\u3048\u304c\u3088\u304f\u306a\u308b\u3088\u3046\u306b\u3059\u308b\n    workingText = workingText.replaceAll('</li>', CommonUtility.CRLF);\n    workingText = workingText.replaceAll('<li>', '- ');\n        \n    // HTML\u30bf\u30b0\u306e\u524a\u9664\n    Pattern htmlTags = Pattern.compile(htmlPattern);\n    Matcher matchedHTML = htmlTags.matcher(workingText);\n    workingText = matchedHTML.replaceAll('');\n\n    //urlEncode\u3057\u3066\u30b9\u30da\u30fc\u30b9\u3068\u6539\u884c\u3092\u88dc\u6b63\u3059\u308b\n    workingText = EncodingUtil.urlEncode(workingText, 'UTF-8');\n    workingText = workingText.replaceAll('%C2%A0', '+'); //space\n    workingText = workingText.replaceAll('%3Cbr%3E', '%0D%0A'); //carriage return\n    workingText = EncodingUtil.urlDecode(workingText, 'UTF-8');   \n            \n    return workingText;\n}        \n```\n\n####\u65e5\u4ed8\u304b\u3089\u65e5\u672c\u8a9e\u306e\u66dc\u65e5\u3092\u8fd4\u3059\n```java\nprivate static Map<String, String> JPN_YOUBI = new Map<String, String>{'Monday'=>'\u6708', 'Tuesday'=>'\u706b', 'Wednesday'=>'\u6c34', 'Thursday'=>'\u6728', 'Friday'=>'\u91d1', 'Saturday'=>'\u571f', 'Sunday'=>'\u65e5' };\n\n/*\n * \u65e5\u4ed8\u304b\u3089\u65e5\u672c\u8a9e\u306e\u66dc\u65e5\u3092\u8fd4\u3059\n *  dt \u5bfe\u8c61\u306e\u65e5\u4ed8\u6642\u9593\n */ \npublic static String getJapaneseYoubi(Datetime dt){\n    return JPN_YOUBI.get(dt.format('EEEE'));    \n}\n```\n", "tags": ["Salesforce"]}