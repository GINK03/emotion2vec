{"tags": ["rust"], "context": "\n\n\u306f\u3058\u3081\u306b\nRust\u306eWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066Rocket\u304c\u4f7f\u3048\u305d\u3046\u3060\u306a\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4eca\u56de\u306f\u99c6\u3051\u8db3\u3067Rocket\u3092\u7d39\u4ecb\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u524d\u63d0\u6761\u4ef6\nrustc 1.16.0-nightly (468227129 2017-01-03)\n\nHello Rocket\n\u307e\u305a\u306fHello, world!\u3092\u8fd4\u3059\u30b7\u30f3\u30d7\u30eb\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002Rocket\u3067\u306f\u5168\u3066nightly\u30d3\u30eb\u30c9\u3092\u4f7f\u3063\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n$ cargo new --bin hello_rocket\n$ cd hello_rocket\n$ rustup override set nightly\n\n\nCargo.toml\n[dependencies]\nrocket = \"0.1.4\"\nrocket_codegen = \"0.1.4\"\n\n\nrocket_codegen\u306fget\u3084route\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30ab\u30b9\u30bf\u30e0derive\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\nsrc/main.rs\n#![feature(plugin)]\n#![plugin(rocket_codegen)]\n\nextern crate rocket;\n\n#[get(\"/\")]\nfn index() -> &'static str {\n    \"Hello, world!\"\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![index]).launch();\n}\n\n\n\u5b9f\u884c\n$ cargo run\n   Compiling hello_rocket v0.1.0 (file:///Users/hoge/hello_rocket)\n    Finished debug [unoptimized + debuginfo] target(s) in 1.16 secs\n     Running `target/debug/hello_rocket`\n\ud83d\udd27  Configured for development.\n    => listening: localhost:8000\n    => logging: Normal\n\ud83d\udef0  Mounting '/':\n    => GET /\n\ud83d\ude80  Rocket has launched from http://localhost:8000...\nGET /:\n    => Matched: GET /\n    => Outcome: Success\n    => Response succeeded.\nGET /favicon.ico:\n    => Error: No matching routes for GET /favicon.ico.\n    => Warning: Responding with 404 Not Found catcher.\n    => Response succeeded.\n\n\u30d6\u30e9\u30a6\u30b6\u3067http://localhost:8000\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068Hello world!\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\nROCKET_ENV\nROCKET_ENV\u74b0\u5883\u5909\u6570\u306b\u5024\u3092\u3057\u3066\u3044\u3059\u308b\u3053\u3068\u3067\u3001\u52d5\u4f5c\u74b0\u5883\u306b\u5fdc\u3058\u305f\u5236\u5fa1\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n$ ROCKET_ENV=stage cargo run\n\ud83d\udd27  Configured for staging.\n    => listening: 0.0.0.0:80\n    => logging: Normal\n\ud83d\udef0  Mounting '/':\n    => GET /\nError: Failed to start server.\nthread 'main' panicked at 'Permission denied (os error 13)', /Users/hoge/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.1.4/src/rocket.rs:474\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n\nROCKET_ENV\u306b\u306fdevelopment, staging, production \u304c\u4f7f\u3048\u307e\u3059\u3002\n\u4e0a\u8a18\u3067\u306fstaging\u74b0\u5883\u3067\u306e\u30c7\u30d5\u30a9\u30eb\u30c8Listen\u30dd\u30fc\u30c8\u304c80\u306e\u305f\u3081\u6a29\u9650\u306a\u3057\u3067\u30a8\u30e9\u30fc\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\nRocket.toml\u3067\u52d5\u4f5c\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nRocket.toml\n[staging]\nport = 8000\n\n[production]\nport = 8000\n\n\n\u8a2d\u5b9a\u9805\u76ee\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306erocket::config\u3042\u305f\u308a\u306b\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\n\nsrc/main.rs\n#[get(\"/hello/<name>\")]\nfn hello(name: &str) -> String {\n    format!(\"Hello, {}\", name)\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![index, hello]).launch();\n}\n\n\nmount()\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306broutes!\u30de\u30af\u30ed\u3067\u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u5f62\u3067\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u4e0a\u8a18\u306e\u5834\u5408/hello/hoge\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u307e\u3059\u304c\u3001mount()\u306e\u7b2c\u4e00\u5f15\u6570\u306b\"/super\"\u3092\u6307\u5b9a\u3059\u308b\u3068 /hello/hoge\u306f404\u3068\u306a\u308a\u3001/super/hello/hoge\u7b49\u3067\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\nJinja2\u304a\u3088\u3073Django\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d9\u30fc\u30b9\u306eTera\u304b\u3001Handlebars\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u79c1\u304c\u6163\u308c\u3066\u3044\u308b\u3053\u3068\u3082\u3042\u308b\u306e\u3067\u3001Tera\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\nCargo.toml\n[dependencies.rocket_contrib]\nversion = \"*\"\ndefault-features = false\nfeatures = [\"tera_templates\"]\n\n\n#![feature(plugin)]\n#![plugin(rocket_codegen)]\n\nextern crate rocket;\nextern crate rocket_contrib;\n\nuse std::collections::HashMap;\nuse rocket_contrib::Template;\n\n#[get(\"/hello/<name>\")]\nfn hello(name: &str) -> Template {\n    let mut context = HashMap::new();\n    context.insert(\"name\", name);\n    Template::render(\"hello\", &context)\n}\n\n#[get(\"/\")]\nfn index() -> &'static str {\n    \"Hello, world!\"\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![index, hello]).launch();\n}\n\n\ntemplates/hello.tera\n<p>Hello {{name}}</p>\n\n\n/hello/<name>\u306e\u969b\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4f7f\u3063\u305f\u7d50\u679c\u3092\u8fd4\u3057\u305f\u3044\u306e\u3067\u3001templates/hello.tera\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u683c\u7d0d\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067templates/\u3067\u3059\u304c\u3001Rocket.toml\u304b\u3089\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3068\u4e00\u81f4\u3055\u305b\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002Tera\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u62e1\u5f35\u5b50\u3092.tera\u306b\u3001Handlebars\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u62e1\u5f35\u5b50\u3092.hbs\u306b\u3057\u307e\u3059\u3002\u8a73\u3057\u3044\u8aac\u660e\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u3002\n\nJSON\u3092\u8fd4\u3059\nserde\u3092\u4f7f\u3063\u3066JSON\u3092\u6271\u3044\u307e\u3059\u3002rocket_contrib::JSON\u3067\u4e00\u6bb5\u968e\u30e9\u30c3\u30d7\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nsrc/main.rs\n#![feature(plugin, proc_macro)]\n#![plugin(rocket_codegen)]\n\nextern crate rocket;\nextern crate rocket_contrib;\nextern crate serde_json;\n#[macro_use]\nextern crate serde_derive;\n\nuse rocket_contrib::JSON;\n\n#[derive(Serialize, Deserialize)]\nstruct Todo {\n    id: i32,\n    title: String,\n    body: String,\n}\n\n#[get(\"/todo/<id>\")]\nfn get_todo(id: i32) -> JSON<Todo> {\n    JSON(Todo {\n        id: id,\n        title: \"todo title 1\".to_string(),\n        body: \"todo body 1\".to_string(),\n    })\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![index, hello, get_todo]).catch(errors![not_found]).launch();\n}\n\n\n/todo/1\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068{\"id\":1,\"title\":\"todo title 1\",\"body\":\"todo body 1\"}\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n\nsrc/main.rs\nuse rocket::Request;\n\n#[error(404)]\nfn not_found(req: &Request) -> String {\n    format!(\"not found {}\", req)\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![index, hello]).catch(errors![not_found]).launch();\n}\n\n\nhttp://localhost:8000/hell\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068not found GET /hell\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\nhttps://github.com/SergioBenitez/Rocket/tree/master/examples/todo\n\u4e0a\u8a18\u306bDiesel SQLite\u3092\u4f7f\u3063\u305f\u4f8b\u304c\u3042\u308a\u307e\u3059\u3002\nDiesel\u306fPostgreSQL\u304a\u3088\u3073SQLite\u3057\u304b\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u4f8b\u3092\u898b\u308b\u9650\u308a\u306frust-mysql-simple\u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u305d\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\nDiesel\u3082\u305d\u308d\u305d\u308dMySQL\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u3088\u3046\u306a\u6c17\u914d\u3082\u3057\u307e\u3059\u3057\u3002\u3002\u3002\n\n\u6700\u5f8c\u306b\n\u99c6\u3051\u8db3\u3067Rocket\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\n\u8c4a\u5bcc\u306a\u30b3\u30fc\u30c9\u4f8b\u3084\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u5145\u5b9f\u5177\u5408\u3001\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u5b8c\u5099\u3001\u5c06\u6765Websocket\u306e\u30b5\u30dd\u30fc\u30c8\u304c\u4e88\u5b9a\u3055\u308c\u3066\u3044\u305f\u308a\u3057\u3066\u3001\u4eca\u5f8cRust\u3067\u4f7f\u308f\u308c\u308b\u4e88\u611f\u304c\u3057\u3066\u3044\u307e\u3059\u3002Rust\u3092\u5b66\u3076\u7b2c\u4e00\u6b69\u3068\u3057\u3066Rocket\u3092\u4f7f\u3063\u3066\u307f\u3066\u306f\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\u3002\n## \u306f\u3058\u3081\u306b\n\nRust\u306eWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066[Rocket](https://rocket.rs/)\u304c\u4f7f\u3048\u305d\u3046\u3060\u306a\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4eca\u56de\u306f\u99c6\u3051\u8db3\u3067Rocket\u3092\u7d39\u4ecb\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n## \u524d\u63d0\u6761\u4ef6\n\nrustc 1.16.0-nightly (468227129 2017-01-03)\n\n\n## Hello Rocket\n\n\u307e\u305a\u306f`Hello, world!`\u3092\u8fd4\u3059\u30b7\u30f3\u30d7\u30eb\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002Rocket\u3067\u306f\u5168\u3066nightly\u30d3\u30eb\u30c9\u3092\u4f7f\u3063\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```shell-session\n$ cargo new --bin hello_rocket\n$ cd hello_rocket\n$ rustup override set nightly\n```\n\n\n```toml:Cargo.toml\n[dependencies]\nrocket = \"0.1.4\"\nrocket_codegen = \"0.1.4\"\n```\n\nrocket_codegen\u306f`get`\u3084`route`\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30ab\u30b9\u30bf\u30e0derive\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n```rust:src/main.rs\n#![feature(plugin)]\n#![plugin(rocket_codegen)]\n\nextern crate rocket;\n\n#[get(\"/\")]\nfn index() -> &'static str {\n    \"Hello, world!\"\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![index]).launch();\n}\n```\n\n\u5b9f\u884c\n\n```shell-session\n$ cargo run\n   Compiling hello_rocket v0.1.0 (file:///Users/hoge/hello_rocket)\n    Finished debug [unoptimized + debuginfo] target(s) in 1.16 secs\n     Running `target/debug/hello_rocket`\n\ud83d\udd27  Configured for development.\n    => listening: localhost:8000\n    => logging: Normal\n\ud83d\udef0  Mounting '/':\n    => GET /\n\ud83d\ude80  Rocket has launched from http://localhost:8000...\nGET /:\n    => Matched: GET /\n    => Outcome: Success\n    => Response succeeded.\nGET /favicon.ico:\n    => Error: No matching routes for GET /favicon.ico.\n    => Warning: Responding with 404 Not Found catcher.\n    => Response succeeded.\n```\n\n\u30d6\u30e9\u30a6\u30b6\u3067`http://localhost:8000`\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068`Hello world!`\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n## ROCKET_ENV\n\n`ROCKET_ENV`\u74b0\u5883\u5909\u6570\u306b\u5024\u3092\u3057\u3066\u3044\u3059\u308b\u3053\u3068\u3067\u3001\u52d5\u4f5c\u74b0\u5883\u306b\u5fdc\u3058\u305f\u5236\u5fa1\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n```shell-session\n$ ROCKET_ENV=stage cargo run\n\ud83d\udd27  Configured for staging.\n    => listening: 0.0.0.0:80\n    => logging: Normal\n\ud83d\udef0  Mounting '/':\n    => GET /\nError: Failed to start server.\nthread 'main' panicked at 'Permission denied (os error 13)', /Users/hoge/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.1.4/src/rocket.rs:474\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\n```\n\nROCKET_ENV\u306b\u306fdevelopment, staging, production \u304c\u4f7f\u3048\u307e\u3059\u3002\n\u4e0a\u8a18\u3067\u306fstaging\u74b0\u5883\u3067\u306e\u30c7\u30d5\u30a9\u30eb\u30c8Listen\u30dd\u30fc\u30c8\u304c80\u306e\u305f\u3081\u6a29\u9650\u306a\u3057\u3067\u30a8\u30e9\u30fc\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n`Rocket.toml`\u3067\u52d5\u4f5c\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```toml:Rocket.toml\n[staging]\nport = 8000\n\n[production]\nport = 8000\n```\n\n\u8a2d\u5b9a\u9805\u76ee\u306f[\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306erocket::config\u3042\u305f\u308a\u306b\u8a18\u8f09](https://api.rocket.rs/rocket/config/)\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n## \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\n\n```rust:src/main.rs\n#[get(\"/hello/<name>\")]\nfn hello(name: &str) -> String {\n    format!(\"Hello, {}\", name)\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![index, hello]).launch();\n}\n```\n\n`mount()`\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306b`routes!`\u30de\u30af\u30ed\u3067\u6307\u5b9a\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u5f62\u3067\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u4e0a\u8a18\u306e\u5834\u5408`/hello/hoge`\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u307e\u3059\u304c\u3001`mount()`\u306e\u7b2c\u4e00\u5f15\u6570\u306b`\"/super\"`\u3092\u6307\u5b9a\u3059\u308b\u3068 `/hello/hoge`\u306f404\u3068\u306a\u308a\u3001`/super/hello/hoge`\u7b49\u3067\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\nJinja2\u304a\u3088\u3073Django\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d9\u30fc\u30b9\u306e[Tera](https://github.com/Keats/tera)\u304b\u3001[Handlebars](https://github.com/sunng87/handlebars-rust)\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u79c1\u304c\u6163\u308c\u3066\u3044\u308b\u3053\u3068\u3082\u3042\u308b\u306e\u3067\u3001Tera\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n\n```toml:Cargo.toml\n[dependencies.rocket_contrib]\nversion = \"*\"\ndefault-features = false\nfeatures = [\"tera_templates\"]\n```\n\n```\n#![feature(plugin)]\n#![plugin(rocket_codegen)]\n\nextern crate rocket;\nextern crate rocket_contrib;\n\nuse std::collections::HashMap;\nuse rocket_contrib::Template;\n\n#[get(\"/hello/<name>\")]\nfn hello(name: &str) -> Template {\n    let mut context = HashMap::new();\n    context.insert(\"name\", name);\n    Template::render(\"hello\", &context)\n}\n\n#[get(\"/\")]\nfn index() -> &'static str {\n    \"Hello, world!\"\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![index, hello]).launch();\n}\n```\n\n\n```jinja:templates/hello.tera\n<p>Hello {{name}}</p>\n```\n\n`/hello/<name>`\u306e\u969b\u306b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4f7f\u3063\u305f\u7d50\u679c\u3092\u8fd4\u3057\u305f\u3044\u306e\u3067\u3001`templates/hello.tera`\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u683c\u7d0d\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067`templates/`\u3067\u3059\u304c\u3001`Rocket.toml`\u304b\u3089\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3068\u4e00\u81f4\u3055\u305b\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002Tera\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u62e1\u5f35\u5b50\u3092`.tera`\u306b\u3001Handlebars\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u62e1\u5f35\u5b50\u3092`.hbs`\u306b\u3057\u307e\u3059\u3002\u8a73\u3057\u3044\u8aac\u660e\u306f[\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8](https://api.rocket.rs/rocket_contrib/struct.Template.html)\u306b\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u3002\n\n## JSON\u3092\u8fd4\u3059\n\nserde\u3092\u4f7f\u3063\u3066JSON\u3092\u6271\u3044\u307e\u3059\u3002`rocket_contrib::JSON`\u3067\u4e00\u6bb5\u968e\u30e9\u30c3\u30d7\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```rust:src/main.rs\n#![feature(plugin, proc_macro)]\n#![plugin(rocket_codegen)]\n\nextern crate rocket;\nextern crate rocket_contrib;\nextern crate serde_json;\n#[macro_use]\nextern crate serde_derive;\n\nuse rocket_contrib::JSON;\n\n#[derive(Serialize, Deserialize)]\nstruct Todo {\n    id: i32,\n    title: String,\n    body: String,\n}\n\n#[get(\"/todo/<id>\")]\nfn get_todo(id: i32) -> JSON<Todo> {\n    JSON(Todo {\n        id: id,\n        title: \"todo title 1\".to_string(),\n        body: \"todo body 1\".to_string(),\n    })\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![index, hello, get_todo]).catch(errors![not_found]).launch();\n}\n```\n\n`/todo/1`\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068`{\"id\":1,\"title\":\"todo title 1\",\"body\":\"todo body 1\"}`\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n\n```rust:src/main.rs\nuse rocket::Request;\n\n#[error(404)]\nfn not_found(req: &Request) -> String {\n    format!(\"not found {}\", req)\n}\n\nfn main() {\n    rocket::ignite().mount(\"/\", routes![index, hello]).catch(errors![not_found]).launch();\n}\n```\n\n`http://localhost:8000/hell`\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068`not found GET /hell`\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n## \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\n\nhttps://github.com/SergioBenitez/Rocket/tree/master/examples/todo\n\n\u4e0a\u8a18\u306b[Diesel](http://diesel.rs/) SQLite\u3092\u4f7f\u3063\u305f\u4f8b\u304c\u3042\u308a\u307e\u3059\u3002\nDiesel\u306fPostgreSQL\u304a\u3088\u3073SQLite\u3057\u304b\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u4f8b\u3092\u898b\u308b\u9650\u308a\u306f[rust-mysql-simple](https://github.com/blackbeam/rust-mysql-simple)\u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u305d\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\n\n[Diesel\u3082\u305d\u308d\u305d\u308dMySQL\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u3088\u3046\u306a\u6c17\u914d\u3082\u3057\u307e\u3059\u3057\u3002\u3002\u3002](https://github.com/diesel-rs/diesel/issues/514)\n\n## \u6700\u5f8c\u306b\n\n\u99c6\u3051\u8db3\u3067Rocket\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\n[\u8c4a\u5bcc\u306a\u30b3\u30fc\u30c9\u4f8b](https://github.com/SergioBenitez/Rocket/tree/master/examples)\u3084[\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u5145\u5b9f\u5177\u5408](https://rocket.rs/guide/)\u3001[\u30c6\u30b9\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u5b8c\u5099](https://rocket.rs/guide/testing/)\u3001[\u5c06\u6765Websocket\u306e\u30b5\u30dd\u30fc\u30c8\u304c\u4e88\u5b9a\u3055\u308c\u3066\u3044\u305f\u308a](https://github.com/SergioBenitez/Rocket/issues/90)\u3057\u3066\u3001\u4eca\u5f8cRust\u3067\u4f7f\u308f\u308c\u308b\u4e88\u611f\u304c\u3057\u3066\u3044\u307e\u3059\u3002Rust\u3092\u5b66\u3076\u7b2c\u4e00\u6b69\u3068\u3057\u3066Rocket\u3092\u4f7f\u3063\u3066\u307f\u3066\u306f\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\u3002\n"}