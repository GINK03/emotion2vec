{"context": "\n\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 1070 (8GB)\nASRock Z170M Pro4S [Intel Z170chipset]\nUbuntu 14.04 LTS desktop amd64\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v8.0\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\n\n\n\n\u3084\u308d\u3046\u3068\u3057\u3066\u3044\u308b\u3053\u3068\ninput node: 167,926\u500b\noutput node: 167,926\u500b\n\u306e\u5b66\u7fd2\u3092\u884c\u3046\u3002\n(\u7121\u7406\u304b\u3082)\n\u305d\u306e\u524d\u6bb5\u968e\u3068\u3057\u3066\ninput node:2\noutput node:2\n\u3092\u8aad\u3093\u3067\u307f\u308b\u3002\n\nPython > \u30c7\u30fc\u30bf\u751f\u6210\n\npre_data_170109.py\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport numpy as np\nimport random\n\n'''\nv0.2 Jan. 09, 2017\n    - output to files\nv0.1 Nov. 12, 2016\n    - print to Standard output\n'''\n\nnumdata = 100\nx_data = np.random.rand(numdata)\ny_data = np.sin(2*np.pi*x_data) + 0.3 * np.random.rand()\n\nfor xs, ys in zip(x_data, y_data):\n    print('%.5f, %.5f, %.5f, %.5f' % (xs, (xs+3), ys, (ys+5)))\n\nwith open(\"input_node.csv\", \"w\") as inpfd:  # inpfd: input layer\n    for xs in x_data:\n        inpfd.write('%.5f, %.5f\\n' % (xs, (xs+3)))\n\nwith open(\"output_node.csv\", \"w\") as outfd:  # outfd: output layer\n    for ys in y_data:\n        outfd.write('%.5f, %.5f\\n' % (ys, (ys+5)))\n\n\n\n\u30d5\u30a1\u30a4\u30eb\u751f\u6210\n\n\u5b9f\u884c\n$ python pre_data_170109.py > res.csv\n\n\n\u4e0a\u8a18\u5b9f\u884c\u5f8c\u3001\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308b\n\nres.csv : \u30c7\u30d0\u30c3\u30b0\u7528\ninput_node.csv\noutput_node.csv\n\n\n\u78ba\u8a8d\n$ head -n 3 res.csv input_node.csv output_node.csv \n==> res.csv <==\n0.11199, 3.11199, 0.71899, 5.71899\n0.89814, 3.89814, -0.52524, 4.47476\n0.63075, 3.63075, -0.66022, 4.33978\n\n==> input_node.csv <==\n0.11199, 3.11199\n0.89814, 3.89814\n0.63075, 3.63075\n\n==> output_node.csv <==\n0.71899, 5.71899\n-0.52524, 4.47476\n-0.66022, 4.33978\n\n\n\nTensorFlow > \u30d5\u30a1\u30a4\u30eb\u8aad\u8fbc\u307f\ninput_node.csv\u3068output_node.csv\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3067\u307f\u308b\u3002\nTensorFlow\u3067\u306e\u300c\u5b66\u7fd2\u300d\u306f\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u3002\n\nread_target.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n'''\nv0.1 Jan. 09, 2017\n    - read (2,2) nodes for (input, output) from [input_node.csv] and [output_node.csv]\n'''\n\nimport sys\nimport tensorflow as tf\nimport tensorflow.contrib.slim as slim\nimport numpy as np\n\n# read input node\nfilename_queue = tf.train.string_input_producer([\"input_node.csv\"])\nreader = tf.TextLineReader()\nkey, value = reader.read(filename_queue)\ninput1 = tf.decode_csv(value, record_defaults=[[0.], [0.]])\n\n# read output node\nfilename_queue = tf.train.string_input_producer([\"output_node.csv\"])\nreader = tf.TextLineReader()\nkey, value = reader.read(filename_queue)\noutput1 = tf.decode_csv(value, record_defaults=[[0.], [0.]])\n\n# initialize\ninit_op = tf.initialize_all_variables()\n\n# session\nwith tf.Session() as sess:\n    coord = tf.train.Coordinator()\n    threads = tf.train.start_queue_runners(sess=sess, coord=coord)\n    try:\n        sess.run(init_op)\n        for loop in range(10):\n            inp1 = sess.run(input1)\n            out1 = sess.run(output1)\n            print(inp1, out1)\n    finally:\n        coord.request_stop()\n    coord.join(threads)\n\n\n\n\u5b9f\u884c$\npython read_target.py \nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties: \nname: GeForce GTX 1070\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7715\npciBusID 0000:01:00.0\nTotal memory: 7.91GiB\nFree memory: 7.41GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\n([0.11199, 3.11199], [0.71899003, 5.7189898])\n([0.89814001, 3.89814], [-0.52524, 4.4747601])\n([0.63075, 3.6307499], [-0.66022003, 4.3397799])\n([0.66579002, 3.6657901], [-0.79128999, 4.2087102])\n([0.52727002, 3.5272701], [-0.098540001, 4.9014602])\n([0.62568998, 3.62569], [-0.63819999, 4.3618002])\n([0.10847, 3.10847], [0.70196003, 5.7019601])\n([0.96858001, 3.96858], [-0.12414, 4.8758602])\n([0.097790003, 3.09779], [0.64844, 5.6484399])\n([0.89565998, 3.8956599], [-0.53763002, 4.4623699])\n\n\n\u8aad\u3081\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n(input:2, output:2)\n\u304b\u3089\n(input:100, output:100)\n\u306a\u3069\u306b\u3059\u308b\u306b\u306f\u6839\u672c\u7684\u306b\u9055\u3046\u65b9\u6cd5\u304c\u5fc5\u8981\u304b\u3082\u3002\nMNIST\u306e\u30b3\u30fc\u30c9\u3092\u5b66\u3076\u65b9\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n```txt:\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 1070 (8GB)\nASRock Z170M Pro4S [Intel Z170chipset]\nUbuntu 14.04 LTS desktop amd64\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v8.0\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\n```\n\n### \u3084\u308d\u3046\u3068\u3057\u3066\u3044\u308b\u3053\u3068\n\ninput node: 167,926\u500b\noutput node: 167,926\u500b\n\n\u306e\u5b66\u7fd2\u3092\u884c\u3046\u3002\n(\u7121\u7406\u304b\u3082)\n\n\u305d\u306e\u524d\u6bb5\u968e\u3068\u3057\u3066\n\ninput node:2\noutput node:2\n\u3092\u8aad\u3093\u3067\u307f\u308b\u3002\n\n### Python > \u30c7\u30fc\u30bf\u751f\u6210\n\n```pre_data_170109.py\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nimport numpy as np\nimport random\n\n'''\nv0.2 Jan. 09, 2017\n    - output to files\nv0.1 Nov. 12, 2016\n    - print to Standard output\n'''\n\nnumdata = 100\nx_data = np.random.rand(numdata)\ny_data = np.sin(2*np.pi*x_data) + 0.3 * np.random.rand()\n\nfor xs, ys in zip(x_data, y_data):\n    print('%.5f, %.5f, %.5f, %.5f' % (xs, (xs+3), ys, (ys+5)))\n\nwith open(\"input_node.csv\", \"w\") as inpfd:  # inpfd: input layer\n    for xs in x_data:\n        inpfd.write('%.5f, %.5f\\n' % (xs, (xs+3)))\n\nwith open(\"output_node.csv\", \"w\") as outfd:  # outfd: output layer\n    for ys in y_data:\n        outfd.write('%.5f, %.5f\\n' % (ys, (ys+5)))\n```\n\n### \u30d5\u30a1\u30a4\u30eb\u751f\u6210\n\n```txt:\u5b9f\u884c\n$ python pre_data_170109.py > res.csv\n```\n\n\u4e0a\u8a18\u5b9f\u884c\u5f8c\u3001\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308b\n\n1. res.csv : \u30c7\u30d0\u30c3\u30b0\u7528\n2. input_node.csv\n3. output_node.csv\n\n\n```txt:\u78ba\u8a8d\n$ head -n 3 res.csv input_node.csv output_node.csv \n==> res.csv <==\n0.11199, 3.11199, 0.71899, 5.71899\n0.89814, 3.89814, -0.52524, 4.47476\n0.63075, 3.63075, -0.66022, 4.33978\n\n==> input_node.csv <==\n0.11199, 3.11199\n0.89814, 3.89814\n0.63075, 3.63075\n\n==> output_node.csv <==\n0.71899, 5.71899\n-0.52524, 4.47476\n-0.66022, 4.33978\n```\n\n\n### TensorFlow > \u30d5\u30a1\u30a4\u30eb\u8aad\u8fbc\u307f\n\ninput_node.csv\u3068output_node.csv\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3067\u307f\u308b\u3002\nTensorFlow\u3067\u306e\u300c\u5b66\u7fd2\u300d\u306f\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u3002\n\n```read_target.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n'''\nv0.1 Jan. 09, 2017\n    - read (2,2) nodes for (input, output) from [input_node.csv] and [output_node.csv]\n'''\n\nimport sys\nimport tensorflow as tf\nimport tensorflow.contrib.slim as slim\nimport numpy as np\n\n# read input node\nfilename_queue = tf.train.string_input_producer([\"input_node.csv\"])\nreader = tf.TextLineReader()\nkey, value = reader.read(filename_queue)\ninput1 = tf.decode_csv(value, record_defaults=[[0.], [0.]])\n\n# read output node\nfilename_queue = tf.train.string_input_producer([\"output_node.csv\"])\nreader = tf.TextLineReader()\nkey, value = reader.read(filename_queue)\noutput1 = tf.decode_csv(value, record_defaults=[[0.], [0.]])\n\n# initialize\ninit_op = tf.initialize_all_variables()\n\n# session\nwith tf.Session() as sess:\n    coord = tf.train.Coordinator()\n    threads = tf.train.start_queue_runners(sess=sess, coord=coord)\n    try:\n        sess.run(init_op)\n        for loop in range(10):\n            inp1 = sess.run(input1)\n            out1 = sess.run(output1)\n            print(inp1, out1)\n    finally:\n        coord.request_stop()\n    coord.join(threads)\n```\n\n```txt:\u5b9f\u884c$ \npython read_target.py \nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:111] successfully opened CUDA library libcurand.so locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:925] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:951] Found device 0 with properties: \nname: GeForce GTX 1070\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.7715\npciBusID 0000:01:00.0\nTotal memory: 7.91GiB\nFree memory: 7.41GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:972] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:982] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:1041] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\n([0.11199, 3.11199], [0.71899003, 5.7189898])\n([0.89814001, 3.89814], [-0.52524, 4.4747601])\n([0.63075, 3.6307499], [-0.66022003, 4.3397799])\n([0.66579002, 3.6657901], [-0.79128999, 4.2087102])\n([0.52727002, 3.5272701], [-0.098540001, 4.9014602])\n([0.62568998, 3.62569], [-0.63819999, 4.3618002])\n([0.10847, 3.10847], [0.70196003, 5.7019601])\n([0.96858001, 3.96858], [-0.12414, 4.8758602])\n([0.097790003, 3.09779], [0.64844, 5.6484399])\n([0.89565998, 3.8956599], [-0.53763002, 4.4623699])\n```\n\n\u8aad\u3081\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\n(input:2, output:2)\n\u304b\u3089\n(input:100, output:100)\n\u306a\u3069\u306b\u3059\u308b\u306b\u306f\u6839\u672c\u7684\u306b\u9055\u3046\u65b9\u6cd5\u304c\u5fc5\u8981\u304b\u3082\u3002\n\nMNIST\u306e\u30b3\u30fc\u30c9\u3092\u5b66\u3076\u65b9\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\n", "tags": ["borgWarp", "TensorFlow", "fileIO"]}