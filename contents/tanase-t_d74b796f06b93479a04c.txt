{"context": "\n\nFalcon\u3068\u306f\nPython\u306eWeb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\nhttps://falconframework.org/\n\u4ed5\u4e8b\u3067\u7c21\u5358\u306aAPI\u30b5\u30fc\u30d0\u3092Python\u3067\u3064\u304f\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u9ad8\u901f\u3067\u4f59\u8a08\u306a\u6a5f\u80fd\u306e\u306a\u3044Falcon\u3092\u9078\u3093\u3067\u307f\u305f\n\nInstall\nPython\u3068PyPy\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u524d\u63d0\npip install falcon\n\n\u7c21\u5358\u3002\u73fe\u5728(2016/12)\u306fv1.1\nMac\u306b\u5165\u308c\u308b\u6642\u306f\u5c11\u3057\u7570\u306a\u308b\uff1f \u8a73\u7d30\u306f\u516c\u5f0f\u3067\u3002\nhttps://falcon.readthedocs.io/en/stable/user/install.html\n\n\u7c21\u5358\u306ajson\u3092\u8fd4\u3059API\u30b5\u30f3\u30d7\u30eb\n\u4ee5\u4e0b\u306f /hoge/{id} \u306bget\u3067\u30a2\u30af\u30bb\u30b9\u3057\u305f\u6642\u306bjson\u3092\u8fd4\u3059API\u306e\u30b5\u30f3\u30d7\u30eb\n\n# api.py\n\nimport falcon\nimport json\n\nclass HogeResource(object):\n    def on_get(self, req, resp, id):\n        \"\"\"Handles GET requests\"\"\"\n        resp.status = falcon.HTTP_200\n        resp.body = json.dumps({ \n                      \"result\": true, \n                      \"message\": \"success!\",\n                    })\n\napi = falcon.API()\nhoge = HogeResource()\n\napi.add_route('/hoge/{id}', hoge)\n\nfalcon.API()\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306badd_route\u3067, url\u3068on_get(\u307e\u305f\u306fon_post,on_put\u7b49)\u3092\u5b9a\u7fa9\u3057\u305f\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3059\u3060\u3051\u3067OK\u3002\u7c21\u5358\uff01\n@falcon.before\u3068\u304b\u4f7f\u3063\u3066\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3082\u884c\u3048\u308b\n\ndef validate(req, resp, resource, params):\n    try:\n        params['id'] = int(params['id'])\n    except ValueError:\n        raise falcon.HTTPBadRequest('Invalid ID',\n                                    'ID was not valid.')\nclass HogeResource(object):\n\n    @falcon.before(validate)\n    def on_get(self, req, resp, id):\n        #..\u7565..\n\n\n\u52d5\u4f5c\u78ba\u8a8d\nWSGI\u30b5\u30fc\u30d0\u3068\u3057\u3066\u4eca\u56de\u306fgunicorn\u3092\u4f7f\u3046\napi.py\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u6642\u306f\npip install gunicorn\ngunicorn api:main\n\ncurl localhost:8000/hoge/12345\n\n\n\u30c6\u30b9\u30c8\n\u30c6\u30b9\u30c8\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u66f8\u3044\u3066\u307f\u305f\nhttp://falcon.readthedocs.io/en/stable/api/testing.html\n\n\n#api_test.py\n\nimport falcon\nimport falcon.testing as testing\n\nfrom api import api\n\nclass TestHogeResource(testing.TestCase):\n\n    def setUp(self):\n        super(testing.TestCase, self).setUp()\n        self.api = api\n\n    def test_hoge(self):\n        result = self.simulate_get(\"/hoge/12345\")\n        self.assertEqual(result.status, falcon.HTTP_200)\n\n    def test_hoge_error(self):\n        result = self.simulate_get(\"/hoge/moge\")\n        self.assertEqual(result.status, falcon.HTTP_400)\n\n\n\n\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\ntesttools\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u4f7f\u3046\npip install testtools\npython -m testtools.run api_test.py\n\n> Ran 2 tests in 0.001s\n> OK\n\n# Falcon\u3068\u306f\n\nPython\u306eWeb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\nhttps://falconframework.org/\n\n\u4ed5\u4e8b\u3067\u7c21\u5358\u306aAPI\u30b5\u30fc\u30d0\u3092Python\u3067\u3064\u304f\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u9ad8\u901f\u3067\u4f59\u8a08\u306a\u6a5f\u80fd\u306e\u306a\u3044Falcon\u3092\u9078\u3093\u3067\u307f\u305f\n\n# Install\n\nPython\u3068PyPy\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u524d\u63d0\n\n```\npip install falcon\n```\n\u7c21\u5358\u3002\u73fe\u5728(2016/12)\u306fv1.1\n\nMac\u306b\u5165\u308c\u308b\u6642\u306f\u5c11\u3057\u7570\u306a\u308b\uff1f \u8a73\u7d30\u306f\u516c\u5f0f\u3067\u3002\nhttps://falcon.readthedocs.io/en/stable/user/install.html\n\n\n# \u7c21\u5358\u306ajson\u3092\u8fd4\u3059API\u30b5\u30f3\u30d7\u30eb\n\n\u4ee5\u4e0b\u306f /hoge/{id} \u306bget\u3067\u30a2\u30af\u30bb\u30b9\u3057\u305f\u6642\u306bjson\u3092\u8fd4\u3059API\u306e\u30b5\u30f3\u30d7\u30eb\n\n```py\n\n# api.py\n\nimport falcon\nimport json\n\nclass HogeResource(object):\n    def on_get(self, req, resp, id):\n        \"\"\"Handles GET requests\"\"\"\n        resp.status = falcon.HTTP_200\n        resp.body = json.dumps({ \n                      \"result\": true, \n                      \"message\": \"success!\",\n                    })\n\napi = falcon.API()\nhoge = HogeResource()\n\napi.add_route('/hoge/{id}', hoge)\n```\n\nfalcon.API()\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306badd_route\u3067, url\u3068on_get(\u307e\u305f\u306fon_post,on_put\u7b49)\u3092\u5b9a\u7fa9\u3057\u305f\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3059\u3060\u3051\u3067OK\u3002\u7c21\u5358\uff01\n\n@falcon.before\u3068\u304b\u4f7f\u3063\u3066\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3082\u884c\u3048\u308b\n\n```py\n\ndef validate(req, resp, resource, params):\n    try:\n        params['id'] = int(params['id'])\n    except ValueError:\n        raise falcon.HTTPBadRequest('Invalid ID',\n                                    'ID was not valid.')\nclass HogeResource(object):\n\n    @falcon.before(validate)\n    def on_get(self, req, resp, id):\n        #..\u7565..\n```\n\n# \u52d5\u4f5c\u78ba\u8a8d\nWSGI\u30b5\u30fc\u30d0\u3068\u3057\u3066\u4eca\u56de\u306fgunicorn\u3092\u4f7f\u3046\n\napi.py\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u6642\u306f\n\n```\npip install gunicorn\ngunicorn api:main\n\ncurl localhost:8000/hoge/12345\n```\n\n## \u30c6\u30b9\u30c8\n\n\u30c6\u30b9\u30c8\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u66f8\u3044\u3066\u307f\u305f\nhttp://falcon.readthedocs.io/en/stable/api/testing.html\n\n```py\n\n\n#api_test.py\n\nimport falcon\nimport falcon.testing as testing\n\nfrom api import api\n\nclass TestHogeResource(testing.TestCase):\n\n    def setUp(self):\n        super(testing.TestCase, self).setUp()\n        self.api = api\n\n    def test_hoge(self):\n        result = self.simulate_get(\"/hoge/12345\")\n        self.assertEqual(result.status, falcon.HTTP_200)\n\n    def test_hoge_error(self):\n        result = self.simulate_get(\"/hoge/moge\")\n        self.assertEqual(result.status, falcon.HTTP_400)\n\n```\n\n## \u30c6\u30b9\u30c8\u306e\u5b9f\u884c\n\ntesttools\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u4f7f\u3046\n\n```\npip install testtools\npython -m testtools.run api_test.py\n\n> Ran 2 tests in 0.001s\n> OK\n```\n\n\n", "tags": ["Python", "Falcon", "testing"]}