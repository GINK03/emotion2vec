{"context": "Jetson TX1\u306eGPU\u3092\u4f7f\u7528\u3057\u305f\u52b9\u80fd\u3092\u8abf\u67fb\u305d\u306e2\u3068\u3057\u3066\u3001\nChainer\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308bMNIST\u306e\u6570\u5b57\u8a8d\u8b58\u3092\u5b9f\u65bd\u3057\u307e\u3057\u305f\u3002\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089(GitHub\u3067\u516c\u958b\u3055\u308c\u3066\u308bChainer\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9)\nhttps://github.com/pfnet/chainer/blob/master/examples/mnist/train_mnist.py\n\n\u8abf\u67fb\u5185\u5bb9\n\u8a08\u7b97\u6642\u9593\u3092\u4e0b\u8a18\u306e\u30c6\u30b9\u30c81\uff5e4\u306b\u5bfe\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u51e6\u7406\u6642\u9593\u3092\u6e2c\u5b9a\u3059\u308b\n\u203bJetson TX1\u306e\u5834\u5408\u306e\u51e6\u7406\u6642\u9593\u3067\u3059\n\n\u30c6\u30b9\u30c81 CPU\u3068GPU\u306e\u6bd4\u8f03\n\nJetson TX1\u306eCPU\u3067MNIST\nJetson TX1\u306eGPU\u3067MNIST\n\n\n\u30c6\u30b9\u30c82 \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba(batchsize)\u3092\u5909\u5316\n\nGPU\u3092\u4f7f\u7528\n\u30c7\u30d5\u30a9\u30eb\u30c8: 100\n\u6761\u4ef6: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000\n\n\n\u30c6\u30b9\u30c83\u3000\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570(units)\u3092\u5909\u5316\n\nGPU\u3092\u4f7f\u7528\n\u30c7\u30d5\u30a9\u30eb\u30c8: 1000\n\u6761\u4ef6: 100, 500, 1000, 1500, 2000\n\n\n\u30c6\u30b9\u30c84 batchsize\u3068units\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u5909\u5316\n\nGPU\u3092\u4f7f\u7528\n\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba: 100, 1000\n\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570: 500, 1000, 2000\n\n\n\u8abf\u67fb\u65b9\u6cd5\n\n\u8a08\u7b97\u6642\u9593\u306e\u6e2c\u5b9a\u65b9\u6cd5\npython\u30b3\u30fc\u30c9\u3092\u547c\u3073\u51fa\u3059\u969b\u3001\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u4ee5\u4e0b\u3092\u5b9f\u884c\u3059\u308b\n$ time python train_mnist.py\n\n\u3059\u308b\u3068\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u308b\n$ time python test.py\n\nreal    1m2.345s\nuser    1m1.111s\nsys     0m0.003s\n\n\u4eca\u56de\u306f\u300c\u30d7\u30ed\u30b0\u30e9\u30e0\u81ea\u4f53\u306e\u51e6\u7406\u6642\u9593\u300d\u306b\u6ce8\u76ee\u3057\u305f\u3044\u306e\u3067user\u3067\u793a\u3055\u308c\u305f\u6642\u9593\u3092\u8a55\u4fa1\u6307\u6a19\u3068\u3057\u307e\u3059\u3002\n(\u53c2\u8003)time\u30b3\u30de\u30f3\u30c9\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u6642\u9593\u3092\u77e5\u308b:http://qiita.com/tossh/items/659e5934e52b38183200\n\n\u6e2c\u5b9a\u6761\u4ef6\u306e\u5909\u66f4\u65b9\u6cd5\n\u300ctrain_mnist.py\u300d\u306e31\uff5e43\u884c\u76ee\u3067\u3001\u672c\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u547c\u3073\u51fa\u3059\u969b\u306e\u30aa\u30d7\u30b7\u30e7\u30f3(\u8ffd\u52a0\u306e\u5f15\u6570)\u306b\u3064\u3044\u3066\u306e\u8aac\u660e\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5024\u3092\u4f7f\u7528\u3059\u308b\u3068\u304d\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u3044\u3044\u3002\n\n(\u4f8b)\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba(batchsize)\u30921000\u3001\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570(units)\u3092200\u3068\u3057\u305f\u3044\u3068\u304d\n\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306b\u3066\u300cpython train_mnist.py -b 1000 -u 200\u300d\u3068\u3057\u3066\u5b9f\u884c\n\n\n\n\ntrain_mnist.py\n    # \u7701\u7565\n    # \u219331\uff5e43\u884c\u76ee\n    parser.add_argument('--batchsize', '-b', type=int, default=100,\n                        help='Number of images in each mini-batch')\n    parser.add_argument('--epoch', '-e', type=int, default=20,\n                        help='Number of sweeps over the dataset to train')\n    parser.add_argument('--gpu', '-g', type=int, default=-1,\n                        help='GPU ID (negative value indicates CPU)')\n    parser.add_argument('--out', '-o', default='result',\n                        help='Directory to output the result')\n    parser.add_argument('--resume', '-r', default='',\n                        help='Resume the training from snapshot')\n    parser.add_argument('--unit', '-u', type=int, default=1000,\n                        help='Number of units')\n    args = parser.parse_args()\n    # \u7701\u7565\n\n\n\nCPU\u3068GPU\u306e\u5207\u308a\u66ff\u3048\n\nCPU\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\n\n\u30b3\u30de\u30f3\u30c9\u300cpython train_mnist.py -g -1\u300d=> \u300cGPU\u4f7f\u3044\u307e\u305b\u3093\u300d\u5ba3\u8a00\n(\u30c7\u30d5\u30a9\u30eb\u30c8\u304cGPU\u3092\u4f7f\u7528\u3057\u306a\u3044\u8a2d\u5b9a\u306a\u306e\u3067\u3001\u300ctime python train_mnist.py\u300d\u3067\u3044\u3044)\n\n\nGPU\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\n\n\u30b3\u30de\u30f3\u30c9\u300cpython train_mnist.py -g 0\u300d=> \u300cGPU\u4f7f\u3044\u307e\u3059\u300d\u5ba3\u8a00\n\n\n\n\n\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u306e\u5909\u66f4\n\n\u30b3\u30de\u30f3\u30c9\u300cpython train_mnist.py -b 1000\u300d\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u306f100\n\n\n\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570\u306e\u5909\u66f4\n\n\u30b3\u30de\u30f3\u30c9\u300cpython train_mnist.py -u 2000\u300d\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570\u306f1000\n\n\n\u8abf\u67fb\u7d50\u679c\nGPU\u3092\u4f7f\u3046\u3068NMINST\u306e\u5b66\u7fd2\u306f\u3059\u3054\u304f\u901f\u304f\u306a\u308b\u3002\n\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3092\u5927\u304d\u304f\u3059\u308b\u3068\u8a08\u7b97\u6642\u9593\u306f\u901f\u304f\u306a\u308a\u307e\u3059\u304c\u3001\u3042\u308b\u7a0b\u5ea6\u5927\u304d\u304f\u3059\u308b\u3068\u305d\u308c\u4ee5\u964d\u306f\u5287\u7684\u306a\u5909\u5316\u306f\u306a\u3044\u3002\n(\u304a\u305d\u3089\u304f\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570\u306b\u8fd1\u3065\u304f\u306b\u9023\u308c\u8efd\u6e1b\u7387\u304c\u5c0f\u3055\u304f\u306a\u3063\u3066\u3044\u308b)\n\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u30922\u500d\u306b\u5897\u3084\u3057\u3066\u3082\u8a08\u7b97\u6642\u9593\u306f10%\u3057\u304b\u5897\u52a0\u3057\u306a\u3044\u3002\n\u203bJetson TX1\u306e\u5834\u5408\u306e\u51e6\u7406\u6642\u9593\u3067\u3059\n\n\u30c6\u30b9\u30c81 CPU\u3068GPU\u306e\u6bd4\u8f03\nCPU\u306b\u5bfe\u3057GPU\u3092\u4f7f\u7528\u3059\u308b\u306874\u500d\u901f\u3044\u3001\u51c4\u3044!!\n(\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6761\u4ef6\u3067\u6e2c\u5b9a)\n\n\n\u30c6\u30b9\u30c82 \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba(batchsize)\u3092\u5909\u5316\n\u3000\n\n\u30c6\u30b9\u30c83\u3000\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570(units)\u3092\u5909\u5316\n\u3000\n\n\u30c6\u30b9\u30c84 batchsize\u3068units\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u5909\u5316\n(\u5168\u3066GPU\u3092\u4f7f\u7528)\n\u3000\n\n(\u304a\u307e\u3051)Windows PC\u3067MNIST\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6761\u4ef6\u3067\u7d0430\u5206\nGPU: \u306a\u3057\u3001CPU\uff1aCore i7 2.4GHz 4\u30b3\u30a2\u3001RAM: 8GB\n\n\n\u304a\u308f\u308a\u306b\n\u306a\u304b\u306a\u304b\u9762\u767d\u3044\u7d50\u679c\u3068\u306a\u3063\u305f\u6c17\u304c\u3057\u307e\u3059\u3002\n\u4e2d\u9593\u5c64\u306e\u6570\u304c20\u500d(units=100\u30682000\u3067\u6bd4\u8f03)\u306e\u5927\u304d\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3082\u8a08\u7b97\u6642\u9593\u306f30%\u7a0b\u5ea6\u3057\u304b\u5909\u308f\u3089\u306a\u3044\u306e\u3082\u885d\u6483\u3067\u3057\u305f\u3002\nJetson TX1\u306eGPU\u3092\u4f7f\u7528\u3057\u305f\u52b9\u80fd\u3092\u8abf\u67fb\u305d\u306e2\u3068\u3057\u3066\u3001\nChainer\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308bMNIST\u306e\u6570\u5b57\u8a8d\u8b58\u3092\u5b9f\u65bd\u3057\u307e\u3057\u305f\u3002\n\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089(GitHub\u3067\u516c\u958b\u3055\u308c\u3066\u308bChainer\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9)\nhttps://github.com/pfnet/chainer/blob/master/examples/mnist/train_mnist.py\n\n#\u8abf\u67fb\u5185\u5bb9\n\u8a08\u7b97\u6642\u9593\u3092\u4e0b\u8a18\u306e\u30c6\u30b9\u30c81\uff5e4\u306b\u5bfe\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u51e6\u7406\u6642\u9593\u3092\u6e2c\u5b9a\u3059\u308b\n**\u203bJetson TX1\u306e\u5834\u5408\u306e\u51e6\u7406\u6642\u9593\u3067\u3059**\n\n##\u30c6\u30b9\u30c81 CPU\u3068GPU\u306e\u6bd4\u8f03\n* Jetson TX1\u306eCPU\u3067MNIST\n* Jetson TX1\u306eGPU\u3067MNIST\n\n##\u30c6\u30b9\u30c82 \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba(batchsize)\u3092\u5909\u5316 \n* GPU\u3092\u4f7f\u7528\n* \u30c7\u30d5\u30a9\u30eb\u30c8: 100\n* \u6761\u4ef6: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000\n\n##\u30c6\u30b9\u30c83\u3000\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570(units)\u3092\u5909\u5316\n* GPU\u3092\u4f7f\u7528\n* \u30c7\u30d5\u30a9\u30eb\u30c8: 1000\n* \u6761\u4ef6: 100, 500, 1000, 1500, 2000\n\n##\u30c6\u30b9\u30c84 batchsize\u3068units\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u5909\u5316\n* GPU\u3092\u4f7f\u7528\n* \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba: 100, 1000\n* \u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570: 500, 1000, 2000\n\n#\u8abf\u67fb\u65b9\u6cd5\n##\u8a08\u7b97\u6642\u9593\u306e\u6e2c\u5b9a\u65b9\u6cd5\npython\u30b3\u30fc\u30c9\u3092\u547c\u3073\u51fa\u3059\u969b\u3001\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u4ee5\u4e0b\u3092\u5b9f\u884c\u3059\u308b\n\n```\n$ time python train_mnist.py\n```\n\n\u3059\u308b\u3068\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u7d50\u679c\u304c\u51fa\u529b\u3055\u308c\u308b\n\n```\n$ time python test.py\n\nreal    1m2.345s\nuser    1m1.111s\nsys     0m0.003s\n```\n\n\u4eca\u56de\u306f\u300c\u30d7\u30ed\u30b0\u30e9\u30e0\u81ea\u4f53\u306e\u51e6\u7406\u6642\u9593\u300d\u306b\u6ce8\u76ee\u3057\u305f\u3044\u306e\u3067user\u3067\u793a\u3055\u308c\u305f\u6642\u9593\u3092\u8a55\u4fa1\u6307\u6a19\u3068\u3057\u307e\u3059\u3002\n(\u53c2\u8003)time\u30b3\u30de\u30f3\u30c9\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u6642\u9593\u3092\u77e5\u308b:http://qiita.com/tossh/items/659e5934e52b38183200\n\n##\u6e2c\u5b9a\u6761\u4ef6\u306e\u5909\u66f4\u65b9\u6cd5\n\u300ctrain_mnist.py\u300d\u306e31\uff5e43\u884c\u76ee\u3067\u3001\u672c\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u547c\u3073\u51fa\u3059\u969b\u306e\u30aa\u30d7\u30b7\u30e7\u30f3(\u8ffd\u52a0\u306e\u5f15\u6570)\u306b\u3064\u3044\u3066\u306e\u8aac\u660e\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5024\u3092\u4f7f\u7528\u3059\u308b\u3068\u304d\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u3044\u3044\u3002\n\n* (\u4f8b)\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba(batchsize)\u30921000\u3001\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570(units)\u3092200\u3068\u3057\u305f\u3044\u3068\u304d\n * \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306b\u3066\u300cpython train_mnist.py -b 1000 -u 200\u300d\u3068\u3057\u3066\u5b9f\u884c\n\n```train_mnist.py\n    # \u7701\u7565\n    # \u219331\uff5e43\u884c\u76ee\n    parser.add_argument('--batchsize', '-b', type=int, default=100,\n                        help='Number of images in each mini-batch')\n    parser.add_argument('--epoch', '-e', type=int, default=20,\n                        help='Number of sweeps over the dataset to train')\n    parser.add_argument('--gpu', '-g', type=int, default=-1,\n                        help='GPU ID (negative value indicates CPU)')\n    parser.add_argument('--out', '-o', default='result',\n                        help='Directory to output the result')\n    parser.add_argument('--resume', '-r', default='',\n                        help='Resume the training from snapshot')\n    parser.add_argument('--unit', '-u', type=int, default=1000,\n                        help='Number of units')\n    args = parser.parse_args()\n    # \u7701\u7565\n```\n\n###CPU\u3068GPU\u306e\u5207\u308a\u66ff\u3048\n* CPU\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n * \u30b3\u30de\u30f3\u30c9\u300cpython train_mnist.py -g -1\u300d=> \u300cGPU\u4f7f\u3044\u307e\u305b\u3093\u300d\u5ba3\u8a00\n * (\u30c7\u30d5\u30a9\u30eb\u30c8\u304cGPU\u3092\u4f7f\u7528\u3057\u306a\u3044\u8a2d\u5b9a\u306a\u306e\u3067\u3001\u300ctime python train_mnist.py\u300d\u3067\u3044\u3044)\n* GPU\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n * \u30b3\u30de\u30f3\u30c9\u300cpython train_mnist.py -g 0\u300d=> \u300cGPU\u4f7f\u3044\u307e\u3059\u300d\u5ba3\u8a00\n\n###\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u306e\u5909\u66f4\n* \u30b3\u30de\u30f3\u30c9\u300cpython train_mnist.py -b 1000\u300d\n* \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u306f100\n\n###\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570\u306e\u5909\u66f4\n* \u30b3\u30de\u30f3\u30c9\u300cpython train_mnist.py -u 2000\u300d\n* \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570\u306f1000\n\n#\u8abf\u67fb\u7d50\u679c\nGPU\u3092\u4f7f\u3046\u3068NMINST\u306e\u5b66\u7fd2\u306f\u3059\u3054\u304f\u901f\u304f\u306a\u308b\u3002\n\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3092\u5927\u304d\u304f\u3059\u308b\u3068\u8a08\u7b97\u6642\u9593\u306f\u901f\u304f\u306a\u308a\u307e\u3059\u304c\u3001\u3042\u308b\u7a0b\u5ea6\u5927\u304d\u304f\u3059\u308b\u3068\u305d\u308c\u4ee5\u964d\u306f\u5287\u7684\u306a\u5909\u5316\u306f\u306a\u3044\u3002\n(\u304a\u305d\u3089\u304f\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570\u306b\u8fd1\u3065\u304f\u306b\u9023\u308c\u8efd\u6e1b\u7387\u304c\u5c0f\u3055\u304f\u306a\u3063\u3066\u3044\u308b)\n\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u30922\u500d\u306b\u5897\u3084\u3057\u3066\u3082\u8a08\u7b97\u6642\u9593\u306f10%\u3057\u304b\u5897\u52a0\u3057\u306a\u3044\u3002\n**\u203bJetson TX1\u306e\u5834\u5408\u306e\u51e6\u7406\u6642\u9593\u3067\u3059**\n\n\n\n##\u30c6\u30b9\u30c81 CPU\u3068GPU\u306e\u6bd4\u8f03\nCPU\u306b\u5bfe\u3057GPU\u3092\u4f7f\u7528\u3059\u308b\u306874\u500d\u901f\u3044\u3001\u51c4\u3044!!\n(\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6761\u4ef6\u3067\u6e2c\u5b9a)\n![test_1.png](https://qiita-image-store.s3.amazonaws.com/0/141396/f91ed11f-4403-fe5d-6e2e-7ce7223324bf.png)\n\n##\u30c6\u30b9\u30c82 \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba(batchsize)\u3092\u5909\u5316 \n![test_2_1.png](https://qiita-image-store.s3.amazonaws.com/0/141396/bd7477e1-c523-2ffd-6431-0b6c9200d70f.png)\u3000![test_2_2.png](https://qiita-image-store.s3.amazonaws.com/0/141396/c22a4981-d711-cff1-20d9-0d1067500a53.png)\n\n\n##\u30c6\u30b9\u30c83\u3000\u4e2d\u9593\u5c64\u306e\u30ce\u30fc\u30c9\u6570(units)\u3092\u5909\u5316\n![test_3_1.png](https://qiita-image-store.s3.amazonaws.com/0/141396/c832545f-4027-f33e-bdf3-4702c4bffda4.png)\u3000![test_3_2.png](https://qiita-image-store.s3.amazonaws.com/0/141396/e926cee0-33dc-ff7e-baa9-6a0045b1494f.png)\n\n##\u30c6\u30b9\u30c84 batchsize\u3068units\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u5909\u5316\n(**\u5168\u3066GPU\u3092\u4f7f\u7528**)\n![test_4_1.png](https://qiita-image-store.s3.amazonaws.com/0/141396/12e486d2-e0f9-b821-3c44-f65329bf9a7f.png)\u3000![test_4_2.png](https://qiita-image-store.s3.amazonaws.com/0/141396/e149bc08-1c79-4dbc-4cfc-d880b71e5d78.png)\n\n##(\u304a\u307e\u3051)Windows PC\u3067MNIST\n * \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6761\u4ef6\u3067\u7d0430\u5206\n * GPU: \u306a\u3057\u3001CPU\uff1aCore i7 2.4GHz 4\u30b3\u30a2\u3001RAM: 8GB\n\n#\u304a\u308f\u308a\u306b\n\u306a\u304b\u306a\u304b\u9762\u767d\u3044\u7d50\u679c\u3068\u306a\u3063\u305f\u6c17\u304c\u3057\u307e\u3059\u3002\n\u4e2d\u9593\u5c64\u306e\u6570\u304c20\u500d(units=100\u30682000\u3067\u6bd4\u8f03)\u306e\u5927\u304d\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3082\u8a08\u7b97\u6642\u9593\u306f30%\u7a0b\u5ea6\u3057\u304b\u5909\u308f\u3089\u306a\u3044\u306e\u3082\u885d\u6483\u3067\u3057\u305f\u3002\n", "tags": ["JetsonTX1", "GPU", "Chainer", "MNIST"]}