{"context": "Phoenix\u3068\u304becto\u3068\u304b\u306e\u5099\u5fd8\u9332\n\ncontroller\u3067optional\u306a\u5f15\u6570\u3092\u53d6\u308b\ndef create(conn, %{\"name\" => name, \"password\" => password} = params) do\n  avatar_image = Map.get(params, \"avatar_image\", \"default_image\")\n\n  # ...\nend\n\n\npreload\u3055\u308c\u3066\u3044\u306a\u3044\u5224\u5b9a\n%Ecto.Association.NotLoaded{} \u3067\u30de\u30c3\u30c1\u3067\u304d\u308b\u3002\ncase Map.get(model, assoc) do\n  %Ecto.Association.NotLoaded{} ->\n    false\n  _ ->\n    true\nend\n\nhttp://stackoverflow.com/questions/38047486/how-to-check-if-a-association-is-not-loaded\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067IEx.pry\n\u4e00\u5b9a\u6642\u9593\u4ee5\u4e0a\u505c\u6b62\u3057\u3066\u308b\u3068DB\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u308b\u306e\u3067\u3001config/test.exs\u306b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\u3002\nconfig :logger, :console, format: \"[$level] $message\\n\", ownership_timeout: :infinity\n\n\u30c6\u30b9\u30c8\u5b9f\u884c\u3059\u308b\u6642\u306b --trace \u3064\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3002\nhttps://github.com/elixir-ecto/ecto/blob/master/lib/ecto/adapters/sql/sandbox.ex#L224\n\nmix task\nconfig\u3092mixtask\u304b\u3089\u3067\u3082\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\nMix.Task.run \"app.start\"\n\nDB\u64cd\u4f5c\u3092\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\nRepo.start_link()\n\n\necto\u3067\u8907\u6570\u306e\u5909\u6570\n\u30af\u30a8\u30ea\u3067\u5b9a\u7fa9(from hoge in query)\u3057\u305f\u5909\u6570\u3092\u8907\u6570\u4f7f\u3044\u305f\u3044\u3053\u3068\u304c\u3042\u308b\u3002\nfrom [t, users_to_teams] in query \u306b\u3088\u3046\u306b\u3059\u308b\u3002\ndefp get_all_for_member_count_order(query) do\n  query = (from t in query,\n    join: users_to_teams in assoc(t, :users_to_teams),\n    group_by: t.id\n  )\nend\n\ndef get_all_by_asc_of_member_count(query) do\n  #    \u2193 \u3053\u3053\u3092list\u3067\u5b9a\u7fa9\u3059\u308b\n  from [t, users_to_teams] in get_all_for_member_count_order(query), [\n    order_by: [asc: count(users_to_teams.team_id)]\nend\n\nfrom\u306e\u5f8c\u306b\u4e8c\u3064\u5909\u6570\u3092\u7528\u610f\u3057\u306a\u3044\u3068\u3001\u610f\u56f3\u3057\u306a\u3044\u30c7\u30fc\u30bf\u304b\u3089\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53c2\u7167\u3057\u3088\u3046\u3068\u3057\u3066\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\ndef get_all_by_asc_of_member_count(query) do\n  #    \u2193 \u5358\u4f53\u3060\u3068\u610f\u56f3\u3057\u306a\u3044\u30c7\u30fc\u30bf\u304c\u5165\u308b\u53ef\u80fd\u6027\n  from users_to_teams in all_for_member_count_order(query), [\n    order_by: [asc: count(users_to_teams.team_id)]\nend \n\n** (Postgrex.Error) ERROR (undefined_column): column t0.team_id does not exist\n\n\n\u3084\u3084\u3053\u3057\u3044\u3084\u3064\n%{k: 1}, {1, 2}, [key: 1], [1, 2]\n\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\nasdf\nhttp://qiita.com/yumatz/items/28cc7a000236510b71c2\nPhoenix\u3068\u304becto\u3068\u304b\u306e\u5099\u5fd8\u9332\n\n## controller\u3067optional\u306a\u5f15\u6570\u3092\u53d6\u308b\n\n```.ex\ndef create(conn, %{\"name\" => name, \"password\" => password} = params) do\n  avatar_image = Map.get(params, \"avatar_image\", \"default_image\")\n\n  # ...\nend\n```\n\n## preload\u3055\u308c\u3066\u3044\u306a\u3044\u5224\u5b9a\n\n`%Ecto.Association.NotLoaded{}` \u3067\u30de\u30c3\u30c1\u3067\u304d\u308b\u3002\n\n```.ex\ncase Map.get(model, assoc) do\n  %Ecto.Association.NotLoaded{} ->\n    false\n  _ ->\n    true\nend\n```\n\nhttp://stackoverflow.com/questions/38047486/how-to-check-if-a-association-is-not-loaded\n\n## \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067IEx.pry\n\n\u4e00\u5b9a\u6642\u9593\u4ee5\u4e0a\u505c\u6b62\u3057\u3066\u308b\u3068DB\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5207\u308c\u308b\u306e\u3067\u3001config/test.exs\u306b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n```.exs\nconfig :logger, :console, format: \"[$level] $message\\n\", ownership_timeout: :infinity\n```\n\n\u30c6\u30b9\u30c8\u5b9f\u884c\u3059\u308b\u6642\u306b `--trace` \u3064\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3002\n\nhttps://github.com/elixir-ecto/ecto/blob/master/lib/ecto/adapters/sql/sandbox.ex#L224\n\n## mix task\n\nconfig\u3092mixtask\u304b\u3089\u3067\u3082\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\n```.ex\nMix.Task.run \"app.start\"\n```\n\nDB\u64cd\u4f5c\u3092\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\n```.ex\nRepo.start_link()\n```\n\n\n## ecto\u3067\u8907\u6570\u306e\u5909\u6570\n\n\u30af\u30a8\u30ea\u3067\u5b9a\u7fa9(`from hoge in query`)\u3057\u305f\u5909\u6570\u3092\u8907\u6570\u4f7f\u3044\u305f\u3044\u3053\u3068\u304c\u3042\u308b\u3002\n`from [t, users_to_teams] in query` \u306b\u3088\u3046\u306b\u3059\u308b\u3002\n\n```.ex\ndefp get_all_for_member_count_order(query) do\n  query = (from t in query,\n    join: users_to_teams in assoc(t, :users_to_teams),\n    group_by: t.id\n  )\nend\n\ndef get_all_by_asc_of_member_count(query) do\n  #    \u2193 \u3053\u3053\u3092list\u3067\u5b9a\u7fa9\u3059\u308b\n  from [t, users_to_teams] in get_all_for_member_count_order(query), [\n    order_by: [asc: count(users_to_teams.team_id)]\nend\n```\n\nfrom\u306e\u5f8c\u306b\u4e8c\u3064\u5909\u6570\u3092\u7528\u610f\u3057\u306a\u3044\u3068\u3001\u610f\u56f3\u3057\u306a\u3044\u30c7\u30fc\u30bf\u304b\u3089\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53c2\u7167\u3057\u3088\u3046\u3068\u3057\u3066\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n\n```.ex\ndef get_all_by_asc_of_member_count(query) do\n  #    \u2193 \u5358\u4f53\u3060\u3068\u610f\u56f3\u3057\u306a\u3044\u30c7\u30fc\u30bf\u304c\u5165\u308b\u53ef\u80fd\u6027\n  from users_to_teams in all_for_member_count_order(query), [\n    order_by: [asc: count(users_to_teams.team_id)]\nend \n```\n\n```\n** (Postgrex.Error) ERROR (undefined_column): column t0.team_id does not exist\n```\n\n## \u3084\u3084\u3053\u3057\u3044\u3084\u3064\n\n```.ex\n%{k: 1}, {1, 2}, [key: 1], [1, 2]\n```\n\n## \u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\n\nasdf\n\nhttp://qiita.com/yumatz/items/28cc7a000236510b71c2\n", "tags": ["Elixir", "Phoenix", "ecto"]}