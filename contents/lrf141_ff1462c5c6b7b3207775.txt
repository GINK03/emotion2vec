{"context": " More than 1 year has passed since last update.\n\n\u9854\u306b\u30e2\u30b6\u30a4\u30af\n\u6700\u8fd1\u306f\u305a\u3063\u3068\u753b\u50cf\u51e6\u7406\u306e\u7406\u8ad6\u7684\u306a\u90e8\u5206\u3070\u304b\u308a\u52c9\u5f37\u3057\u3066\u3044\u3066\u3001\u3053\u308c\u3068\u3044\u3063\u305f\u6210\u679c\u7269\u3092\u51fa\u3057\u3066\u306a\u3044\u304b\u3089\n\u7c21\u5358\u306b\u4f5c\u308c\u308b\u3082\u306e\u3092\u3068\u308a\u3042\u3048\u305a\u4f5c\u3063\u3066\u307f\u3088\u3046\u3063\u3066\u3044\u3046\u3053\u3068\u3067\n\u4eca\u56de\u306f\u3001OpenCV+Python\u3067\u9854\u306b\u30e2\u30b6\u30a4\u30af\u3092\u304b\u3051\u3066\u307f\u305f\n\u9854\u8a8d\u8b58\u3068\u304b\u306f\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3057\u305d\u3046\u3044\u3063\u305f\u3053\u3068\u306f\u307e\u3060\u52c9\u5f37\u3057\u3066\u306a\u3044\u3051\u3069\n\u3068\u308a\u3042\u3048\u305a\u8272\u3005\u8abf\u3079\u306a\u304c\u3089\u4f5c\u3063\u3066\u307f\u305f\u3051\u3069\u3001\u306a\u306b\u305bpython\u306f\u57fa\u790e\u6587\u6cd5\u30ec\u30d9\u30eb\u3067\u3057\u304b\u66f8\u3051\u306a\u3044\u304b\u3089\n\u4eca\u56de\u306f\u3044\u308d\u3044\u308d\u3068\u82e6\u52b4\u3059\u308b\u3068\u3053\u308d\u304c\u3042\u3063\u305f\n\u305f\u3060\u30ea\u30b9\u30c8\u5f62\u5f0f\u3067\u753b\u50cf\u3092\u3042\u308c\u3053\u308c\u3044\u3058\u308c\u305f\u306e\u3067\u306a\u304b\u306a\u304b\u697d\u3057\u304b\u3063\u305f\n\n\u4ed5\u7d44\u307f\n\u307e\u305a\u9854\u8a8d\u8b58\u3092\u3057\u3088\u3046\u3068\u3057\u3066\u3082\u3001\u3069\u3046\u3044\u3046\u4ed5\u7d44\u307f\u304b\u308f\u304b\u3089\u306a\u3044\n\u3068\u3044\u3046\u308f\u3051\u3067\u753b\u50cf\u51e6\u7406\u901f\u5831\u3055\u3093\u3067\u8abf\u3079\u305f\u7d50\u679c\u3001\u3084\u308a\u305f\u3044\u3053\u3068\u306b\u8fd1\u3044\u3082\u306e\u304c\u3042\u308a\n\u305d\u3053\u3067\u4ed5\u7d44\u307f\u3092\u8aac\u660e\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u81ea\u5206\u306a\u308a\u306b\u307e\u3068\u3081\u3066\u307f\u308b\n\u5b9f\u969b\u306b\u3053\u308c\u304b\u3089\u7d39\u4ecb\u3059\u308b\u9806\u756a\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u308b\n\u4eca\u56de\u306f\u30ab\u30b9\u30b1\u30fc\u30c9\u578b\u5206\u985e\u5668\u306a\u308b\u3082\u306e\u3092\u4f7f\u3063\u305f\n1,\u5bfe\u8c61\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080(\u5909\u6570\u306f\uff12\u3064\u7528\u610f\u3057\u305d\u308c\u305e\u308c\u540c\u3058\u753b\u50cf)\n2,\u9854\u8a8d\u8b58\u7528\u306e\u30ab\u30b9\u30b1\u30fc\u30c9\u578b\u5206\u985e\u5668\u3092\u53d6\u5f97\n3,\u30ab\u30b9\u30b1\u30fc\u30c9\u578b\u5206\u985e\u5668\u3067\u9854\u8a8d\u8b58\u3092\u884c\u3046\n4,\u691c\u51fa\u3057\u305f\u60c5\u5831\u306b\u57fa\u3065\u3044\u3066\u9854\u90e8\u5206\u3092\u5207\u308a\u53d6\u308b\n5,\u5207\u308a\u53d6\u3063\u305f\u9854\u306e\u90e8\u5206\u306b\u30e2\u30b6\u30a4\u30af\u51e6\u7406\u3092\u307b\u3069\u3053\u3059\n6,\u30e2\u30b6\u30a4\u30af\u90e8\u5206\u3092\u7d50\u679c\u51fa\u529b\u7528\u753b\u50cf\u306e\u4e00\u90e8\u306b\u8cbc\u308a\u4ed8\u3051\u308b\n7,\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\n\u3068\u3044\u3063\u305f\u5177\u5408\u3067\u9854\u8a8d\u8b58\u4ee5\u5916\u306fOpenCV\u3067\u884c\u3048\u308b\u304b\u306a\u308a\u521d\u6b69\u7684\u306a\u51e6\u7406\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u308b\n(\u305d\u306e\u521d\u6b69\u7684\u306a\u51e6\u7406\u3092\u5b9f\u88c5\u3067\u304d\u306a\u304f\u3066\u82e6\u6226\u3057\u305f)\n\n\u30b3\u30fc\u30c9\n#coding:utf-8\n\nimport numpy as np\nimport cv2\n\n#\u9854\u63a2\u7d22\u7528\u306e\u30ab\u30b9\u30b1\u30fc\u30c9\u578b\u5206\u985e\u5668\u3092\u53d6\u5f97\nface_cascade = cv2.CascadeClassifier(haarcascade_frontalface_default.xml\u306e\u30d1\u30b9\u3092\u6e21\u3059)\n\nimg = cv2.imread(\"Lenna.png\")\nresult = cv2.imread(\"Lenna.png\")\n\n#\u8aad\u307f\u8fbc\u3093\u3060\u753b\u50cf\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\ngray = cv2.cvtColor(img,cv2.COLOR_RGB2GRAY)\n\n#\u5206\u985e\u5668\u3067\u9854\u3092\u8a8d\u8b58\u3059\u308b\nface = face_cascade.detectMultiScale(gray,1.3,5)\n\nif 0 < len(face):\n\n    print \"get face\"\n\n    for (x,y,w,h) in face:\n\n        #\u9854\u306e\u90e8\u5206\u3060\u3051\u5207\u308a\u629c\u3044\u3066\u30e2\u30b6\u30a4\u30af\u51e6\u7406\u3092\u3059\u308b\n        cut_img = img[y:y+h,x:x+w]\n        cut_face = cut_img.shape[:2][::-1]\n        #10\u5206\u306e1\u306b\u3059\u308b\n        cut_img = cv2.resize(cut_img,(cut_face[0]/10, cut_face[0]/10))\n        #\u753b\u50cf\u3092\u5143\u306e\u30b5\u30a4\u30ba\u306b\u62e1\u5927\n        cut_img = cv2.resize(cut_img,cut_face,interpolation = cv2.cv.CV_INTER_NN)\n\n        #\u30e2\u30b6\u30a4\u30af\u51e6\u7406\u3057\u305f\u90e8\u5206\u3092\u91cd\u306d\u308b\n        result[y:y+h,x:x+w] = cut_img\n\nelse:\n\n    print \"no face\"\n\n\ncv2.imshow(\"face mosaic\",result)\n#cv2.imwrite(\"output file name\",result)\ncv2.waitKey(0)\ncv2.destroyAllWindows()\n\n\u3053\u3093\u306a\u5177\u5408\u3067\u5272\u3068\u77ed\u3044\u30b3\u30fc\u30c9\u306b\u306a\u3063\u305f\n\u6ce8\u610f\u3059\u3079\u304d\u306f7\u884c\u76ee\u306e\u30ab\u30b9\u30b1\u30fc\u30c9\u578b\u5206\u985e\u5668\u306e\u53d6\u5f97\u3092\u884c\u3046\u90e8\u5206\u3067\u3001\u3053\u3053\u3067\u6e21\u3059\u306e\u306f\u30ab\u30b9\u30b1\u30fc\u30c9\u5206\u985e\u5668\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u542b\u3081\u305f\u30d1\u30b9\u3067\u3042\u308b\u3053\u3068\n\u4ed6\u306e\u30b5\u30a4\u30c8\u3067\u306f\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u307f\u3092\u6e21\u3057\u3066\u3044\u305f\u308a\u3059\u308b\u304c\u305d\u308c\u3060\u3068\u9854\u8a8d\u8b58\u304c\u6b63\u5e38\u306b\u884c\u308f\u308c\u306a\u3044\u4e0a\u306b\u30a8\u30e9\u30fc\u3068\u3057\u3066\u3082\u3067\u3066\u3053\u306a\u3044\n\u3064\u307e\u308a\u30d0\u30b0\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\n\n\u7d50\u679c\n\u3044\u3064\u3082\u306e\u4f8b\u306b\u306a\u3089\u3063\u3066\u4f7f\u3063\u305f\u753b\u50cf\u306f\u4ee5\u4e0b\u306eLenna.png\n\n\u305d\u3057\u3066\u3053\u308c\u304c\u4e0a\u306e\u30b3\u30fc\u30c9\u3067\u51fa\u529b\u3057\u305fface_mosaic_lenna.png\n\n#\u9854\u306b\u30e2\u30b6\u30a4\u30af\n\n\u6700\u8fd1\u306f\u305a\u3063\u3068\u753b\u50cf\u51e6\u7406\u306e\u7406\u8ad6\u7684\u306a\u90e8\u5206\u3070\u304b\u308a\u52c9\u5f37\u3057\u3066\u3044\u3066\u3001\u3053\u308c\u3068\u3044\u3063\u305f\u6210\u679c\u7269\u3092\u51fa\u3057\u3066\u306a\u3044\u304b\u3089\n\u7c21\u5358\u306b\u4f5c\u308c\u308b\u3082\u306e\u3092\u3068\u308a\u3042\u3048\u305a\u4f5c\u3063\u3066\u307f\u3088\u3046\u3063\u3066\u3044\u3046\u3053\u3068\u3067\n\u4eca\u56de\u306f\u3001OpenCV+Python\u3067\u9854\u306b\u30e2\u30b6\u30a4\u30af\u3092\u304b\u3051\u3066\u307f\u305f\n\n\u9854\u8a8d\u8b58\u3068\u304b\u306f\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3057\u305d\u3046\u3044\u3063\u305f\u3053\u3068\u306f\u307e\u3060\u52c9\u5f37\u3057\u3066\u306a\u3044\u3051\u3069\n\u3068\u308a\u3042\u3048\u305a\u8272\u3005\u8abf\u3079\u306a\u304c\u3089\u4f5c\u3063\u3066\u307f\u305f\u3051\u3069\u3001\u306a\u306b\u305bpython\u306f\u57fa\u790e\u6587\u6cd5\u30ec\u30d9\u30eb\u3067\u3057\u304b\u66f8\u3051\u306a\u3044\u304b\u3089\n\u4eca\u56de\u306f\u3044\u308d\u3044\u308d\u3068\u82e6\u52b4\u3059\u308b\u3068\u3053\u308d\u304c\u3042\u3063\u305f\n\n\u305f\u3060\u30ea\u30b9\u30c8\u5f62\u5f0f\u3067\u753b\u50cf\u3092\u3042\u308c\u3053\u308c\u3044\u3058\u308c\u305f\u306e\u3067\u306a\u304b\u306a\u304b\u697d\u3057\u304b\u3063\u305f\n\n#\u4ed5\u7d44\u307f\n\n\u307e\u305a\u9854\u8a8d\u8b58\u3092\u3057\u3088\u3046\u3068\u3057\u3066\u3082\u3001\u3069\u3046\u3044\u3046\u4ed5\u7d44\u307f\u304b\u308f\u304b\u3089\u306a\u3044\n\u3068\u3044\u3046\u308f\u3051\u3067\u753b\u50cf\u51e6\u7406\u901f\u5831\u3055\u3093\u3067\u8abf\u3079\u305f\u7d50\u679c\u3001\u3084\u308a\u305f\u3044\u3053\u3068\u306b\u8fd1\u3044\u3082\u306e\u304c\u3042\u308a\n\u305d\u3053\u3067\u4ed5\u7d44\u307f\u3092\u8aac\u660e\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u81ea\u5206\u306a\u308a\u306b\u307e\u3068\u3081\u3066\u307f\u308b\n\n\u5b9f\u969b\u306b\u3053\u308c\u304b\u3089\u7d39\u4ecb\u3059\u308b\u9806\u756a\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u308b\n\u4eca\u56de\u306f\u30ab\u30b9\u30b1\u30fc\u30c9\u578b\u5206\u985e\u5668\u306a\u308b\u3082\u306e\u3092\u4f7f\u3063\u305f\n\n1,\u5bfe\u8c61\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080(\u5909\u6570\u306f\uff12\u3064\u7528\u610f\u3057\u305d\u308c\u305e\u308c\u540c\u3058\u753b\u50cf)\n2,\u9854\u8a8d\u8b58\u7528\u306e\u30ab\u30b9\u30b1\u30fc\u30c9\u578b\u5206\u985e\u5668\u3092\u53d6\u5f97\n3,\u30ab\u30b9\u30b1\u30fc\u30c9\u578b\u5206\u985e\u5668\u3067\u9854\u8a8d\u8b58\u3092\u884c\u3046\n4,\u691c\u51fa\u3057\u305f\u60c5\u5831\u306b\u57fa\u3065\u3044\u3066\u9854\u90e8\u5206\u3092\u5207\u308a\u53d6\u308b\n5,\u5207\u308a\u53d6\u3063\u305f\u9854\u306e\u90e8\u5206\u306b\u30e2\u30b6\u30a4\u30af\u51e6\u7406\u3092\u307b\u3069\u3053\u3059\n6,\u30e2\u30b6\u30a4\u30af\u90e8\u5206\u3092\u7d50\u679c\u51fa\u529b\u7528\u753b\u50cf\u306e\u4e00\u90e8\u306b\u8cbc\u308a\u4ed8\u3051\u308b\n7,\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\n\n\u3068\u3044\u3063\u305f\u5177\u5408\u3067\u9854\u8a8d\u8b58\u4ee5\u5916\u306fOpenCV\u3067\u884c\u3048\u308b\u304b\u306a\u308a\u521d\u6b69\u7684\u306a\u51e6\u7406\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u308b\n(\u305d\u306e\u521d\u6b69\u7684\u306a\u51e6\u7406\u3092\u5b9f\u88c5\u3067\u304d\u306a\u304f\u3066\u82e6\u6226\u3057\u305f)\n\n\n#\u30b3\u30fc\u30c9\n\n```py\n#coding:utf-8\n\nimport numpy as np\nimport cv2\n\n#\u9854\u63a2\u7d22\u7528\u306e\u30ab\u30b9\u30b1\u30fc\u30c9\u578b\u5206\u985e\u5668\u3092\u53d6\u5f97\nface_cascade = cv2.CascadeClassifier(haarcascade_frontalface_default.xml\u306e\u30d1\u30b9\u3092\u6e21\u3059)\n\nimg = cv2.imread(\"Lenna.png\")\nresult = cv2.imread(\"Lenna.png\")\n\n#\u8aad\u307f\u8fbc\u3093\u3060\u753b\u50cf\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\ngray = cv2.cvtColor(img,cv2.COLOR_RGB2GRAY)\n\n#\u5206\u985e\u5668\u3067\u9854\u3092\u8a8d\u8b58\u3059\u308b\nface = face_cascade.detectMultiScale(gray,1.3,5)\n\nif 0 < len(face):\n\n\tprint \"get face\"\n\n\tfor (x,y,w,h) in face:\n\t\t\n\t\t#\u9854\u306e\u90e8\u5206\u3060\u3051\u5207\u308a\u629c\u3044\u3066\u30e2\u30b6\u30a4\u30af\u51e6\u7406\u3092\u3059\u308b\n\t\tcut_img = img[y:y+h,x:x+w]\n\t\tcut_face = cut_img.shape[:2][::-1]\n\t\t#10\u5206\u306e1\u306b\u3059\u308b\n\t\tcut_img = cv2.resize(cut_img,(cut_face[0]/10, cut_face[0]/10))\n\t\t#\u753b\u50cf\u3092\u5143\u306e\u30b5\u30a4\u30ba\u306b\u62e1\u5927\n\t\tcut_img = cv2.resize(cut_img,cut_face,interpolation = cv2.cv.CV_INTER_NN)\n\t\t\n\t\t#\u30e2\u30b6\u30a4\u30af\u51e6\u7406\u3057\u305f\u90e8\u5206\u3092\u91cd\u306d\u308b\n\t\tresult[y:y+h,x:x+w] = cut_img\n\nelse:\n\n\tprint \"no face\"\n\n\ncv2.imshow(\"face mosaic\",result)\n#cv2.imwrite(\"output file name\",result)\ncv2.waitKey(0)\ncv2.destroyAllWindows()\n```\n\n\u3053\u3093\u306a\u5177\u5408\u3067\u5272\u3068\u77ed\u3044\u30b3\u30fc\u30c9\u306b\u306a\u3063\u305f\n\u6ce8\u610f\u3059\u3079\u304d\u306f7\u884c\u76ee\u306e\u30ab\u30b9\u30b1\u30fc\u30c9\u578b\u5206\u985e\u5668\u306e\u53d6\u5f97\u3092\u884c\u3046\u90e8\u5206\u3067\u3001\u3053\u3053\u3067\u6e21\u3059\u306e\u306f\u30ab\u30b9\u30b1\u30fc\u30c9\u5206\u985e\u5668\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u542b\u3081\u305f\u30d1\u30b9\u3067\u3042\u308b\u3053\u3068\n\u4ed6\u306e\u30b5\u30a4\u30c8\u3067\u306f\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u307f\u3092\u6e21\u3057\u3066\u3044\u305f\u308a\u3059\u308b\u304c\u305d\u308c\u3060\u3068\u9854\u8a8d\u8b58\u304c\u6b63\u5e38\u306b\u884c\u308f\u308c\u306a\u3044\u4e0a\u306b\u30a8\u30e9\u30fc\u3068\u3057\u3066\u3082\u3067\u3066\u3053\u306a\u3044\n\u3064\u307e\u308a\u30d0\u30b0\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\n\n\n#\u7d50\u679c\n\n\u3044\u3064\u3082\u306e\u4f8b\u306b\u306a\u3089\u3063\u3066\u4f7f\u3063\u305f\u753b\u50cf\u306f\u4ee5\u4e0b\u306eLenna.png\n\n![Lenna.png](https://qiita-image-store.s3.amazonaws.com/0/37645/56014dda-619d-2d76-bb19-269d4cabe20e.png)\n\n\n\u305d\u3057\u3066\u3053\u308c\u304c\u4e0a\u306e\u30b3\u30fc\u30c9\u3067\u51fa\u529b\u3057\u305fface_mosaic_lenna.png\n\n![face_mosaic_lenna.png](https://qiita-image-store.s3.amazonaws.com/0/37645/05280c3d-1633-09b9-0c2c-3b401921d149.png)\n", "tags": ["python2.7", "OpenCV"]}