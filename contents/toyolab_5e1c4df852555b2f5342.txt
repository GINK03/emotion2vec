{"tags": ["Python", "numpy", "Max", "Numba", "performance"], "context": "Python\u3067FX\u30b7\u30b9\u30c8\u30ec\u306e\u30d0\u30c3\u30af\u30c6\u30b9\u30c8\n\u306e\u8a18\u4e8b\u3067\u3061\u3087\u3063\u3068\u89e6\u308c\u3066\u3044\u307e\u3059\u304c\u3001GitHub\u306b\u516c\u958b\u3057\u305f\u30c6\u30af\u30cb\u30ab\u30eb\u6307\u6a19\u306e\u3046\u3061\u3001\u30d1\u30e9\u30dc\u30ea\u30c3\u30afSAR(iSAR)\u306e\u95a2\u6570\u3060\u3051\u304c\u3084\u3051\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u307e\u3057\u305f\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u8907\u96d1\u3060\u304b\u3089\u3057\u3087\u3046\u304c\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u5b9f\u306f\u6700\u5927\u5024\u3001\u6700\u5c0f\u5024\u306e\u6c42\u3081\u65b9\u306b\u554f\u984c\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u5224\u660e\u3057\u307e\u3057\u305f\u3002\n\u672c\u8a18\u4e8b\u3067\u306f\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u554f\u984c\u70b9\u3092\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u4f8b\u984c\n\u9069\u5f53\u306a\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u304b\u3089\uff13\u30b5\u30f3\u30d7\u30eb\u305a\u3064\u53d6\u308a\u51fa\u3057\u3066\u3001\u305d\u306e\u6700\u5927\u5024\u3092\u9806\u6b21\u6c42\u3081\u308b\u554f\u984c\u3092\u8003\u3048\u307e\u3059\u3002\u5f0f\u3067\u66f8\u304f\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\ny(n)=max{x(n),x(n\u22121),x(n\u22122)}y(n)=max{x(n),x(n\u22121),x(n\u22122)}y(n)=\\max\\{x(n), x(n-1), x(n-2)\\}\n\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u4e71\u6570\u5217\u3068\u3057\u3066\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nimport numpy as np\nx = np.random.randint(1000, size=100000)\n\n\n\uff14\u7a2e\u985e\u306e\u30b3\u30fc\u30c9\n\uff13\u30b5\u30f3\u30d7\u30eb\u306e\u6700\u5927\u5024\u3092\u6642\u7cfb\u5217\u3068\u3057\u3066\u6c42\u3081\u308b\u30b3\u30fc\u30c9\u3092\uff14\u7a2e\u985e\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\nfunc1\n\u5f0f\u306e\u307e\u307e\u30b3\u30fc\u30c9\u306b\u3057\u307e\u3059\u3002Python\u306e\u7d44\u307f\u8fbc\u307f\u95a2\u6570max\u306e\u5f15\u6570\u306bx[i],x[i-1],x[i-2]\u3092\u6e21\u3057\u307e\u3059\u3002\ndef func1(x):\n    y = np.empty(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = max(x[i], x[i-1], x[i-2])\n    return y\n\n\nfunc2\n\u3061\u3087\u3063\u3068Python\u3089\u3057\u304f\u3001\u30b9\u30e9\u30a4\u30b9\u3092\u4f7f\u3063\u3066max\u306e\u5f15\u6570\u306b\u6e21\u3057\u307e\u3059\u3002\ndef func2(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = max(x[i-2:i+1])\n    return y\n\n\nfunc3\nnumpy\u306b\u3082max\u95a2\u6570\u304c\u3042\u308b\u304b\u3089\u3001max\u306e\u4ee3\u308f\u308a\u306bnp.max\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\ndef func3(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = np.max(x[i-2:i+1])\n    return y\n\n\nfunc4\nx[i],x[i-1],x[i-2]\u306e\uff13\u3064\u306e\u8981\u7d20\u3092\u30ea\u30b9\u30c8\u306b\u3057\u3066np.max\u306e\u5f15\u6570\u306b\u6e21\u3057\u3066\u307f\u307e\u3059\u3002\ndef func4(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = np.max([x[i], x[i-1], x[i-2]])\n    return y\n\n\n\u5b9f\u884c\u6642\u9593\u306e\u6bd4\u8f03\n\u4e0a\u8a18\u306e\uff14\u3064\u306e\u95a2\u6570\u306e\u5b9f\u884c\u6642\u9593\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3059\u3002\n%timeit y1 = func1(x)\n%timeit y2 = func2(x)\n%timeit y3 = func3(x)\n%timeit y4 = func4(x)\n\n10 loops, best of 3: 91.6 ms per loop\n1 loop, best of 3: 304 ms per loop\n1 loop, best of 3: 581 ms per loop\n1 loop, best of 3: 1.29 s per loop\n\nfunc1\u304c\u6700\u3082\u901f\u304f\u3066\u3001func2, func3, func4\u3068\u9045\u304f\u306a\u308a\u307e\u3059\u3002func4\u306ffunc1\u306e14\u500d\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u3002\n\nnumba\u306b\u3088\u308b\u9ad8\u901f\u5316\n\u540c\u3058\u30b3\u30fc\u30c9\u3067\u3001numba\u306b\u3088\u308b\u9ad8\u901f\u5316\u306e\u6bd4\u8f03\u3092\u884c\u3063\u3066\u307f\u307e\u3059\u3002\nfrom numba import jit\n\n@jit\ndef func1(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = max(x[i], x[i-1], x[i-2])\n    return y\n\n@jit\ndef func2(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = max(x[i-2:i+1])\n    return y\n\n@jit\ndef func3(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = np.max(x[i-2:i+1])\n    return y\n\n@jit\ndef func4(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = np.max([x[i], x[i-1], x[i-2]])\n    return y\n\n%timeit y1 = func1(x)\n%timeit y2 = func2(x)\n%timeit y3 = func3(x)\n%timeit y4 = func4(x)\n\n1000 loops, best of 3: 365 \u00b5s per loop\n1 loop, best of 3: 377 ms per loop\n100 loops, best of 3: 4.33 ms per loop\n1 loop, best of 3: 1.36 s per loop\n\n\u6642\u9593\u306e\u5358\u4f4d\u306b\u6ce8\u610f\u3057\u3066\u6bd4\u3079\u3066\u307f\u308b\u3068\u3001func1\u304c\u00b5s\u306a\u306e\u3067\u3001\u5727\u5012\u7684\u306b\u901f\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u6b21\u306b\u901f\u3044\u306e\u306ffunc3\u3067\u3059\u3002\u3053\u306e\u4e8c\u3064\u306fnumba\u306b\u3088\u308b\u9ad8\u901f\u5316\u306e\u52b9\u679c\u304c\u306f\u3063\u304d\u308a\u3068\u308f\u304b\u308a\u307e\u3059\u3002\u305d\u308c\u306b\u6bd4\u3079\u3066\u3001func2\u3068func4\u306fnumba\u306e\u52b9\u679c\u304c\u306a\u3044\u3069\u3053\u308d\u304b\u3001\u3080\u3057\u308d\u9045\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u7d50\u679c\u3001func4\u3068func1\u3067\u306f\u30013700\u500d\u3068\u5dee\u304c\u5e83\u304c\u3063\u3066\u3044\u307e\u3059\u3002\u7d50\u5c40\u3001\u5c11\u306a\u3044\u8981\u7d20\u6570\u3067\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u5834\u5408\u3001\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u306emax\u306b\u8981\u7d20\u3092\u500b\u5225\u306b\u6e21\u3057\u305f\u65b9\u304c\u6700\u3082\u9ad8\u901f\u306b\u51e6\u7406\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u5b9f\u306f\u3001numpy\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306eamax\u306e\u3068\u3053\u308d\u306b\u306f\u3001\u300cmaximum(a[0], a[1]) is faster than amax(a, axis=0).\u300d\u3068\u3001\u305d\u308c\u3089\u3057\u3044\u30b3\u30e1\u30f3\u30c8\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3057\u305f\u3002\n\niSAR\u304c\u9045\u304b\u3063\u305f\u7406\u7531\n\u8a71\u3092\u623b\u3059\u3068\u3001iSAR\u304c\u9045\u304b\u3063\u305f\u7406\u7531\u306f\u3001func4\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u3092\u3057\u3066\u3044\u305f\u305f\u3081\u3067\u3057\u305f\u3002\u305d\u308c\u3092func1\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u306b\u3057\u305f\u3068\u3053\u308d\u3001\u5287\u7684\u306b\u901f\u304f\u306a\u3063\u305f\u308f\u3051\u3067\u3059\u3002numba\u306e\u52b9\u679c\u3082\u3042\u308a\u3001\u3053\u308c\u307e\u3067\u6700\u3082\u9045\u304b\u3063\u305f\u30c6\u30af\u30cb\u30ab\u30eb\u6307\u6a19\u306f\u3001\u4e00\u8ee2\u3001\u9ad8\u901f\u306a\u30c6\u30af\u30cb\u30ab\u30eb\u6307\u6a19\u306e\u4e00\u3064\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u307b\u3093\u3068Python\u3063\u3066\u3069\u3053\u306b\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u304c\u3042\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u306d\u3002\n[Python\u3067FX\u30b7\u30b9\u30c8\u30ec\u306e\u30d0\u30c3\u30af\u30c6\u30b9\u30c8](http://qiita.com/toyolab/items/e8292d2f051a88517cb2)\n\u306e\u8a18\u4e8b\u3067\u3061\u3087\u3063\u3068\u89e6\u308c\u3066\u3044\u307e\u3059\u304c\u3001[GitHub](https://github.com/toyolab/MT5IndicatorsPy)\u306b\u516c\u958b\u3057\u305f\u30c6\u30af\u30cb\u30ab\u30eb\u6307\u6a19\u306e\u3046\u3061\u3001\u30d1\u30e9\u30dc\u30ea\u30c3\u30afSAR(iSAR)\u306e\u95a2\u6570\u3060\u3051\u304c\u3084\u3051\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u307e\u3057\u305f\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u8907\u96d1\u3060\u304b\u3089\u3057\u3087\u3046\u304c\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u5b9f\u306f\u6700\u5927\u5024\u3001\u6700\u5c0f\u5024\u306e\u6c42\u3081\u65b9\u306b\u554f\u984c\u304c\u3042\u3063\u305f\u3053\u3068\u304c\u5224\u660e\u3057\u307e\u3057\u305f\u3002\n\n\u672c\u8a18\u4e8b\u3067\u306f\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u554f\u984c\u70b9\u3092\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\n# \u4f8b\u984c\n\u9069\u5f53\u306a\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u304b\u3089\uff13\u30b5\u30f3\u30d7\u30eb\u305a\u3064\u53d6\u308a\u51fa\u3057\u3066\u3001\u305d\u306e\u6700\u5927\u5024\u3092\u9806\u6b21\u6c42\u3081\u308b\u554f\u984c\u3092\u8003\u3048\u307e\u3059\u3002\u5f0f\u3067\u66f8\u304f\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n$$y(n)=\\max\\\\{x(n), x(n-1), x(n-2)\\\\}$$\n\n\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u4e71\u6570\u5217\u3068\u3057\u3066\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n````py\nimport numpy as np\nx = np.random.randint(1000, size=100000)\n````\n\n# \uff14\u7a2e\u985e\u306e\u30b3\u30fc\u30c9\n\uff13\u30b5\u30f3\u30d7\u30eb\u306e\u6700\u5927\u5024\u3092\u6642\u7cfb\u5217\u3068\u3057\u3066\u6c42\u3081\u308b\u30b3\u30fc\u30c9\u3092\uff14\u7a2e\u985e\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n## func1\n\u5f0f\u306e\u307e\u307e\u30b3\u30fc\u30c9\u306b\u3057\u307e\u3059\u3002Python\u306e\u7d44\u307f\u8fbc\u307f\u95a2\u6570`max`\u306e\u5f15\u6570\u306b`x[i],x[i-1],x[i-2]`\u3092\u6e21\u3057\u307e\u3059\u3002\n\n````py\ndef func1(x):\n    y = np.empty(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = max(x[i], x[i-1], x[i-2])\n    return y\n````\n\n## func2\n\u3061\u3087\u3063\u3068Python\u3089\u3057\u304f\u3001\u30b9\u30e9\u30a4\u30b9\u3092\u4f7f\u3063\u3066`max`\u306e\u5f15\u6570\u306b\u6e21\u3057\u307e\u3059\u3002\n\n````py\ndef func2(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = max(x[i-2:i+1])\n    return y\n````\n\n## func3\nnumpy\u306b\u3082`max`\u95a2\u6570\u304c\u3042\u308b\u304b\u3089\u3001`max`\u306e\u4ee3\u308f\u308a\u306b`np.max`\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n````py\ndef func3(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = np.max(x[i-2:i+1])\n    return y\n````\n\n## func4\n`x[i],x[i-1],x[i-2]`\u306e\uff13\u3064\u306e\u8981\u7d20\u3092\u30ea\u30b9\u30c8\u306b\u3057\u3066`np.max`\u306e\u5f15\u6570\u306b\u6e21\u3057\u3066\u307f\u307e\u3059\u3002\n\n````py\ndef func4(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = np.max([x[i], x[i-1], x[i-2]])\n    return y\n````\n\n# \u5b9f\u884c\u6642\u9593\u306e\u6bd4\u8f03\n\n\u4e0a\u8a18\u306e\uff14\u3064\u306e\u95a2\u6570\u306e\u5b9f\u884c\u6642\u9593\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3059\u3002\n\n````py\n%timeit y1 = func1(x)\n%timeit y2 = func2(x)\n%timeit y3 = func3(x)\n%timeit y4 = func4(x)\n````\n````\n10 loops, best of 3: 91.6 ms per loop\n1 loop, best of 3: 304 ms per loop\n1 loop, best of 3: 581 ms per loop\n1 loop, best of 3: 1.29 s per loop\n````\n\nfunc1\u304c\u6700\u3082\u901f\u304f\u3066\u3001func2, func3, func4\u3068\u9045\u304f\u306a\u308a\u307e\u3059\u3002func4\u306ffunc1\u306e14\u500d\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u3002\n\n# numba\u306b\u3088\u308b\u9ad8\u901f\u5316\n\u540c\u3058\u30b3\u30fc\u30c9\u3067\u3001numba\u306b\u3088\u308b\u9ad8\u901f\u5316\u306e\u6bd4\u8f03\u3092\u884c\u3063\u3066\u307f\u307e\u3059\u3002\n\n````py\nfrom numba import jit\n\n@jit\ndef func1(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = max(x[i], x[i-1], x[i-2])\n    return y\n\n@jit\ndef func2(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = max(x[i-2:i+1])\n    return y\n\n@jit\ndef func3(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = np.max(x[i-2:i+1])\n    return y\n\n@jit\ndef func4(x):\n    y = np.zeros(len(x), dtype=int)\n    for i in range(2,len(x)):\n        y[i] = np.max([x[i], x[i-1], x[i-2]])\n    return y\n````\n\n````py\n%timeit y1 = func1(x)\n%timeit y2 = func2(x)\n%timeit y3 = func3(x)\n%timeit y4 = func4(x)\n````\n````\n1000 loops, best of 3: 365 \u00b5s per loop\n1 loop, best of 3: 377 ms per loop\n100 loops, best of 3: 4.33 ms per loop\n1 loop, best of 3: 1.36 s per loop\n````\n\n\u6642\u9593\u306e\u5358\u4f4d\u306b\u6ce8\u610f\u3057\u3066\u6bd4\u3079\u3066\u307f\u308b\u3068\u3001func1\u304c\u00b5s\u306a\u306e\u3067\u3001\u5727\u5012\u7684\u306b\u901f\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u6b21\u306b\u901f\u3044\u306e\u306ffunc3\u3067\u3059\u3002\u3053\u306e\u4e8c\u3064\u306fnumba\u306b\u3088\u308b\u9ad8\u901f\u5316\u306e\u52b9\u679c\u304c\u306f\u3063\u304d\u308a\u3068\u308f\u304b\u308a\u307e\u3059\u3002\u305d\u308c\u306b\u6bd4\u3079\u3066\u3001func2\u3068func4\u306fnumba\u306e\u52b9\u679c\u304c\u306a\u3044\u3069\u3053\u308d\u304b\u3001\u3080\u3057\u308d\u9045\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u305d\u306e\u7d50\u679c\u3001func4\u3068func1\u3067\u306f\u30013700\u500d\u3068\u5dee\u304c\u5e83\u304c\u3063\u3066\u3044\u307e\u3059\u3002\u7d50\u5c40\u3001\u5c11\u306a\u3044\u8981\u7d20\u6570\u3067\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u5834\u5408\u3001\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u306e`max`\u306b\u8981\u7d20\u3092\u500b\u5225\u306b\u6e21\u3057\u305f\u65b9\u304c\u6700\u3082\u9ad8\u901f\u306b\u51e6\u7406\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n\u5b9f\u306f\u3001numpy\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e[amax]((http://docs.scipy.org/doc/numpy/reference/generated/numpy.amax.html))\u306e\u3068\u3053\u308d\u306b\u306f\u3001\u300cmaximum(a[0], a[1]) is faster than amax(a, axis=0).\u300d\u3068\u3001\u305d\u308c\u3089\u3057\u3044\u30b3\u30e1\u30f3\u30c8\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3057\u305f\u3002\n\n# iSAR\u304c\u9045\u304b\u3063\u305f\u7406\u7531\n\n\u8a71\u3092\u623b\u3059\u3068\u3001iSAR\u304c\u9045\u304b\u3063\u305f\u7406\u7531\u306f\u3001func4\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u3092\u3057\u3066\u3044\u305f\u305f\u3081\u3067\u3057\u305f\u3002\u305d\u308c\u3092func1\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u306b\u3057\u305f\u3068\u3053\u308d\u3001\u5287\u7684\u306b\u901f\u304f\u306a\u3063\u305f\u308f\u3051\u3067\u3059\u3002numba\u306e\u52b9\u679c\u3082\u3042\u308a\u3001\u3053\u308c\u307e\u3067\u6700\u3082\u9045\u304b\u3063\u305f\u30c6\u30af\u30cb\u30ab\u30eb\u6307\u6a19\u306f\u3001\u4e00\u8ee2\u3001\u9ad8\u901f\u306a\u30c6\u30af\u30cb\u30ab\u30eb\u6307\u6a19\u306e\u4e00\u3064\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u307b\u3093\u3068Python\u3063\u3066\u3069\u3053\u306b\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u304c\u3042\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u306d\u3002\n"}