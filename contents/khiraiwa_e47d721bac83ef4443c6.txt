{"tags": ["docker", "Elasticsearch", "docker-compose", "docker-machine", "DockerSwarm"], "context": " More than 1 year has passed since last update.\u4ee5\u524d\u3001\u4e0b\u8a18\u306ePost\u3092\u3057\u3066\u3044\u3066\u3001\u3053\u306e\u6642\u306f\u4e00\u3064\u306e\u30db\u30b9\u30c8\u306b\u8907\u6570\u306e\u30b3\u30f3\u30c6\u30ca\u3092Docker Compose\u3092\u7528\u3044\u3066\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3057\u305f\u3002\nELK(ElasticSearch, Logstash, Kibana)+fluentd\u306e\u74b0\u5883\u3092Docker Compose\u3067\u69cb\u7bc9\u3057\u3064\u3064\u3001\u8a66\u3057\u306bCloudWatch\u306e\u7d71\u8a08\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3057\u3066\u307f\u305f\n\u3053\u306e\u3068\u304d\u306edocker\u306e--link\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u306f\u3001\u5225\u306e\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u4e0a\u306b\u8d77\u52d5\u3057\u3066\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u306ehosts\u60c5\u5831\u3092\u6e21\u305b\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\nDocker Engine 1.9\u3067\u8ffd\u52a0\u3055\u308c\u305f\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3092\u4f7f\u3048\u3070\u3001\u8907\u6570\u30db\u30b9\u30c8\u9593\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u5171\u6709\u3057\u3001--link\u3067\u6e21\u3057\u305f\u540d\u524d\u3092\u5143\u306b\u3057\u305f\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u2192\u3000--link\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3067\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3000\u3000\u307e\u305f\u3001\u5c06\u6765\u7684\u306bDocker\u304b\u3089\u524a\u9664\u3055\u308c\u308b\u305d\u3046\u3067\u3059\u3002\n\u3000\u3000\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3067\u306f\u30b3\u30f3\u30c6\u30ca\u540d\u3067IP\u304c\u5f15\u3051\u308b\u306e\u3067\u3001\n\u3000\u3000\u4e0b\u3067\u306f\u3053\u308c\u3092\u4f7f\u3046\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u524d\u56de\u3068\u540c\u69d8\u306bDocker Compose\u3092\u7528\u3044\u3066\u8907\u6570\u30db\u30b9\u30c8(\u4e0a\u306e\u56f3\u3067\u3044\u3046node1\u3068node2)\u306b\u307e\u305f\u304c\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u3092\u69cb\u7bc9\u3059\u308b\u306e\u304c\u76ee\u6a19\u306a\u306e\u3067\u3001\u305d\u306e\u305f\u3081\u306b\u4e0b\u3067\u306fDocker Swarm\u3082\u4f7f\u3044\u307e\u3057\u305f\u3002\n(Swarm\u306emaster\u30ce\u30fc\u30c9\u306bCompose\u3092\u5b9f\u884c\u3057\u3066\u3001\u8907\u6570\u306e\u30ce\u30fc\u30c9\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059)\n\n\u74b0\u5883\n\u4eca\u56de\u8a66\u3057\u305f\u74b0\u5883\u3068\u3001\u30c4\u30fc\u30eb\u985e\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n\n\n\u74b0\u5883\n\u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u3069\n\n\n\n\nOS\nEI Capitan(10.11.3)\n\n\nDocker Engine\n1.9.1\n\n\nDocker Machine\n0.5.6\n\n\nDocker Compose\n1.5.2\n\n\n\n\nDocker Toolbox\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3092\u884c\u3046\u306b\u306fDocker Engine, VirtualBox\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u305d\u308c\u3089\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u79c1\u306fDocker Engine, Compose, Swarm, Machine, ViratualBox +\u03b1\u3092\u307e\u3068\u3081\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308bDocker Toolbox\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\nMac\u3067homebrew\u3092\u4f7f\u3063\u3066\u3044\u308b\u306a\u3089\u4e0b\u8a18\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n$ brew cask install dockertoolbox\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\u306f\u3001\u4e0b\u8a18\u304b\u3089\u3002\nhttps://www.docker.com/docker-toolbox\n\nKey-Value\u30b9\u30c8\u30a2(KVS)\u306e\u6e96\u5099\n\u30db\u30b9\u30c8\u30aa\u30f3\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u69cb\u7bc9\u306b\u306f\u30ce\u30fc\u30c9\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3068\u3053\u308d\u306bKVS\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u7acb\u3066\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306eKVS\u306b\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9(discovery, networks, endpoints, IP addresses\u7b49)\u3092\u767b\u9332\u3059\u308b\u3068\u306e\u3053\u3068\u3002\n\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308bKVS\u306fConsul, Etcd, ZooKeeper\u3068\u306e\u3053\u3068\u3002\n\u3053\u3053\u3067\u306f\u30b5\u30f3\u30d7\u30eb\u306b\u7fd2\u3063\u3066Consul\u3092\u7528\u3044\u307e\u3057\u305f\u3002\nDocker Machine\u3092\u4f7f\u3063\u3066\u69cb\u7bc9\u3057\u305fVM\u306b\u3066Consul\u3092\u52d5\u4f5c\u3055\u305b\u307e\u3059\u3002\n\nVM\u306e\u4f5c\u6210\n$ docker-machine create -d virtualbox mh-keystore\n\nRunning pre-create checks...\nCreating machine...\n(mh-keystore) Copying /Users/[user]/.docker/machine/cache/boot2docker.iso to /Users/[user]/.docker/machine/machines/mh-keystore/boot2docker.iso...\n(mh-keystore) Creating VirtualBox VM...\n(mh-keystore) Creating SSH key...\n(mh-keystore) Starting the VM...\n(mh-keystore) Waiting for an IP...\nWaiting for machine to be running, this may take a few minutes...\nMachine is running, waiting for SSH to be available...\nDetecting operating system of created instance...\nDetecting the provisioner...\nProvisioning with boot2docker...\nCopying certs to the local machine directory...\nCopying certs to the remote machine...\nSetting Docker configuration on the remote daemon...\nChecking connection to Docker...\nDocker is up and running!\nTo see how to connect Docker to this machine, run: docker-machine env mh-keystore\n\n\nVM\u4e0a\u3067Consul\u30b5\u30fc\u30d3\u30b9\u3092\u8d77\u52d5\n\u30b3\u30f3\u30c6\u30ca\u3092\u5b9f\u884c\u3057\u3066\u30db\u30b9\u30c8\u30688500/tcp\u30dd\u30fc\u30c8\u3092\u30dd\u30fc\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002\n$ docker $(docker-machine config mh-keystore) run -d \\\n    -p \"8500:8500\" \\\n    -h \"consul\" \\\n    progrium/consul -server -bootstrap\n\nUnable to find image 'progrium/consul:latest' locally\nlatest: Pulling from progrium/consul\n3b4d28ce80e4: Pull complete\ne5ab901dcf2d: Pull complete\n30ad296c0ea0: Pull complete\n3dba40dec256: Pull complete\nf2ef4387b95e: Pull complete\n53bc8dcc4791: Pull complete\n75ed0b50ba1d: Pull complete\n17c3a7ed5521: Pull complete\n8aca9e0ecf68: Pull complete\n4d1828359d36: Pull complete\n46ed7df7f742: Pull complete\nb5e8ce623ef8: Pull complete\n049dca6ef253: Pull complete\nbdb608bc4555: Pull complete\n8b3d489cfb73: Pull complete\nc74500bbce24: Pull complete\n9f3e605442f6: Pull complete\nd9125e9e799b: Pull complete\nDigest: sha256:8cc8023462905929df9a79ff67ee435a36848ce7a10f18d6d0faba9306b97274\nStatus: Downloaded newer image for progrium/consul:latest\n957db0c166612c435d5379da0f1c325ab028d2d02c7fe01d77d503526a5c8755\n\n\ndocker ps\u3067Consul\u304c\u7acb\u3061\u4e0a\u304c\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\nDocker\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u5411\u3051\u5148\u3092\u4f5c\u6210\u3057\u305fVM\u306b\u5411\u3051\u307e\u3059\u3002\n$ eval \"$(docker-machine env mh-keystore)\"\n\n\u4e0b\u8a18\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\u8d77\u52d5\u3057\u3066\u3044\u308c\u3070\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n$ docker ps\n\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                                                            NAMES\n957db0c16661        progrium/consul     \"/bin/start -server -\"   2 minutes ago       Up 2 minutes        53/tcp, 53/udp, 8300-8302/tcp, 0.0.0.0:8500->8500/tcp, 8301-8302/udp, 8400/tcp   big_cray\n\nConsul\u81ea\u4f53\u306f\u4e0b\u8a18\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u306e\u3067\u3001\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u3067\u305d\u308c\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\nhttps://www.consul.io/\n\u3053\u3053\u306f\u30b5\u30f3\u30d7\u30eb\u901a\u308a\u30b3\u30f3\u30c6\u30ca\u3092\u5229\u7528\u3057\u3066\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u30b3\u30f3\u30c6\u30ca\u3067\u5b9f\u884c\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u697d\u3067\u3057\u305f\u3002\n\n\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u8907\u6570\u306e\u30ce\u30fc\u30c9\u3092\u8d77\u52d5\n\u4eca\u56de\u3001Docker Compose\u3067\u8907\u6570\u30ce\u30fc\u30c9\u306b\u307e\u305f\u304c\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u305f\u3044\u306e\u3067\u3001Docker Swarm\u3092\u4f7f\u3063\u3066\u30af\u30e9\u30b9\u30bf\u3092\u69cb\u7bc9\u3057\u307e\u3057\u305f\u3002\n\u30db\u30b9\u30c8\u30aa\u30f3\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3046\u3060\u3051\u306a\u3089Swarm\u306e\u30af\u30e9\u30b9\u30bf\u306f\u5fc5\u9808\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nDocker Machine\u3082\u5fc5\u9808\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\nSwarm master\u306e\u4f5c\u6210\n\u307e\u305a\u30af\u30e9\u30b9\u30bf\u306emaster\u306b\u306a\u308b\u30ce\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ docker-machine create \\\n-d virtualbox \\\n--swarm --swarm-master \\\n--swarm-discovery=\"consul://$(docker-machine ip mh-keystore):8500\" \\\n--engine-opt=\"cluster-store=consul://$(docker-machine ip mh-keystore):8500\" \\\n--engine-opt=\"cluster-advertise=eth1:2376\" \\\nnode1\n\nRunning pre-create checks...\nCreating machine...\n(node1) Copying /Users/[user]/.docker/machine/cache/boot2docker.iso to /Users/[user]/.docker/machine/machines/node1/boot2docker.iso...\n(node1) Creating VirtualBox VM...\n(node1) Creating SSH key...\n(node1) Starting the VM...\n(node1) Waiting for an IP...\nWaiting for machine to be running, this may take a few minutes...\nMachine is running, waiting for SSH to be available...\nDetecting operating system of created instance...\nDetecting the provisioner...\nProvisioning with boot2docker...\nCopying certs to the local machine directory...\nCopying certs to the remote machine...\nSetting Docker configuration on the remote daemon...\nConfiguring swarm...\nChecking connection to Docker...\nDocker is up and running!\nTo see how to connect Docker to this machine, run: docker-machine env node1\n\nDocker Machine\u3092\u4f7f\u308f\u305a\u306b\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001VM\u4e0a\u3067Docker Engine\u306e\u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b\u969b\u306b\u3001\u4e0b\u8a18\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u3088\u3044\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3002\n\n--cluster-store\n--cluster-advertise\n\nDocker Machine\u3067\u8d77\u52d5\u3057\u305fVM\u4e0a\u3067\u306f\u30c7\u30fc\u30e2\u30f3\u8d77\u52d5\u306e\u30b3\u30de\u30f3\u30c9\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n/usr/local/bin/docker daemon -D -g /var/lib/docker \\\n-H unix:// -H tcp://0.0.0.0:2376 --label provider=virtualbox \\\n--cluster-store=consul://192.168.99.100:8500 \\\n--cluster-advertise=eth1:2376 --tlsverify \\\n--tlscacert=/var/lib/boot2docker/ca.pem \\\n--tlscert=/var/lib/boot2docker/server.pem \\\n--tlskey=/var/lib/boot2docker/server-key.pem -s aufs\n\n\nSwarm cluster\u306e\u4f5c\u6210\n\u7d9a\u3044\u3066\u30af\u30e9\u30b9\u30bf\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n$ docker-machine create -d virtualbox \\\n    --swarm \\\n    --swarm-discovery=\"consul://$(docker-machine ip mh-keystore):8500\" \\\n    --engine-opt=\"cluster-store=consul://$(docker-machine ip mh-keystore):8500\" \\\n    --engine-opt=\"cluster-advertise=eth1:2376\" \\\n  node2\n\nRunning pre-create checks...\nCreating machine...\n(node2) Copying /Users/[user]/.docker/machine/cache/boot2docker.iso to /Users/[user]/.docker/machine/machines/node2/boot2docker.iso...\n(node2) Creating VirtualBox VM...\n(node2) Creating SSH key...\n(node2) Starting the VM...\n(node2) Waiting for an IP...\nWaiting for machine to be running, this may take a few minutes...\nMachine is running, waiting for SSH to be available...\nDetecting operating system of created instance...\nDetecting the provisioner...\nProvisioning with boot2docker...\nCopying certs to the local machine directory...\nCopying certs to the remote machine...\nSetting Docker configuration on the remote daemon...\nConfiguring swarm...\nChecking connection to Docker...\nDocker is up and running!\nTo see how to connect Docker to this machine, run: docker-machine env node2\n\n\n\u69cb\u7bc9\u5185\u5bb9\u306e\u78ba\u8a8d\n\u3053\u3053\u307e\u3067\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30013\u3064\u4f5c\u6210\u3055\u308c\u3066\u3044\u308c\u3070OK\u3067\u3059\u3002\n$ docker-machine ls\n\nNAME          ACTIVE   URL          STATE     URL                         SWARM            DOCKER   ERRORS\nmh-keystore   *        virtualbox   Running   tcp://192.168.99.100:2376                    v1.9.1\nnode1         -        virtualbox   Running   tcp://192.168.99.101:2376   node1 (master)   v1.9.1\nnode2         -        virtualbox   Running   tcp://192.168.99.102:2376   node1            v1.9.1\n\n\u6b21\u306b\u3001master\u30ce\u30fc\u30c9\u304b\u3089Swarm\u30af\u30e9\u30b9\u30bf\u306e\u30ce\u30fc\u30c9\u60c5\u5831\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\nDocker\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u5b9f\u884c\u3092master\u30ce\u30fc\u30c9\u306b\u5411\u3051\u307e\u3059\u3002\n$ eval $(docker-machine env --swarm node1)\n\n\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n$ docker info\n\nContainers: 3\nImages: 2\nRole: primary\nStrategy: spread\nFilters: health, port, dependency, affinity, constraint\nNodes: 2\n node1: 192.168.99.101:2376\n  \u2514 Status: Healthy\n  \u2514 Containers: 2\n  \u2514 Reserved CPUs: 0 / 1\n  \u2514 Reserved Memory: 0 B / 1.021 GiB\n  \u2514 Labels: executiondriver=native-0.2, kernelversion=4.1.13-boot2docker, operatingsystem=Boot2Docker 1.9.1 (TCL 6.4.1); master : cef800b - Fri Nov 20 19:33:59 UTC 2015, provider=virtualbox, storagedriver=aufs\n node2: 192.168.99.102:2376\n  \u2514 Status: Healthy\n  \u2514 Containers: 1\n  \u2514 Reserved CPUs: 0 / 1\n  \u2514 Reserved Memory: 0 B / 1.021 GiB\n  \u2514 Labels: executiondriver=native-0.2, kernelversion=4.1.13-boot2docker, operatingsystem=Boot2Docker 1.9.1 (TCL 6.4.1); master : cef800b - Fri Nov 20 19:33:59 UTC 2015, provider=virtualbox, storagedriver=aufs\nCPUs: 2\nTotal Memory: 2.043 GiB\nName: node1\n\n\n\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3092\u69cb\u7bc9\u3057\u307e\u3059\n\u4e0b\u8a18\u3001\u30b3\u30de\u30f3\u30c9\u3067my-net\u3068\u3044\u3046\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ docker network create --driver overlay my-net\n\nca21981bd1e31ec3d7d40336edffdddc49d318492f6248323fb038b6307b3d32\n\n\u4f5c\u6210\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ docker network ls\n\nNETWORK ID          NAME                DRIVER\na6c941a4d77e        node2/bridge        bridge\n722e0e348884        node2/none          null\n3260beae2418        node2/host          host\ne90de0c47ecb        node1/none          null\n4b5140f289f8        node1/host          host\nad297effc7c5        node1/bridge        bridge\nca21981bd1e3        my-net              overlay\n\nmy-net\u3068\u3044\u3046\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304coverlay\u3068\u3044\u3046DRIVER\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\nDocker Compose\u3092\u3082\u3061\u3044\u3066\u69cb\u7bc9\n\u6e96\u5099\u304c\u6574\u3063\u305f\u306e\u3067\u3001Docker Compose\u3067\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3059\u3002\nELK(ElasticSearch, Logstash, Kibana)+fluentd\u306e\u74b0\u5883\u3092Docker Compose\u3067\u69cb\u7bc9\u3057\u3064\u3064\u3001\u8a66\u3057\u306bCloudWatch\u306e\u7d71\u8a08\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3057\u3066\u307f\u305f\u306edocker-compose.yml\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\u74b0\u5883\u5909\u6570\u306econstraint:node\u3067\u30ce\u30fc\u30c9\u540d\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u6307\u5b9a\u3057\u305f\u30ce\u30fc\u30c9\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u304f\u308c\u307e\u3059\u3002(\u3053\u3053\u306fSwarm\u306e\u6a5f\u80fd)\nlinks\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30b3\u30f3\u30c6\u30ca\u540d\u3092\u74b0\u5883\u5909\u6570\u3067\u6e21\u3059\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002(\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u306eIP\u304c\u5f15\u3051\u307e\u3059\u3002)\n\ndocker-compose.yml\n# elasticsearch\nelasticsearch:\n  image: khiraiwa/docker-elasticsearch:1.0.0\n  environment:\n    - \"constraint:node==node1\"\n  volumes:\n    - /data_elasticsearch:/data_elasticsearch\n  ports:\n    - \"9200:9200\"\n    - \"9300:9300\"\n\n# kibana\nkibana:\n  image: khiraiwa/docker-kibana:1.1.0\n  environment:\n    - \"constraint:node==node2\"\n    - \"ELASTICSEARCH_HOST=elk_elasticsearch_1\"\n  volumes:\n    - /data_kibana:/data_kibana\n  ports:\n    - \"5601:5601\"\n\n# logstash\nlogstash:\n  image: khiraiwa/docker-logstash:1.1.0\n  environment:\n    - \"constraint:node==node2\"\n    - \"ELASTICSEARCH_HOST=elk_elasticsearch_1\"\n  volumes:\n    - /data_logstash:/data_logstash\n  environment:\n    - AWS_ACCESS_KEY_ID=dummy\n    - AWS_SECRET_ACCESS_KEY=dummy\n\n# tdagent\ntdagent:\n  image: khiraiwa/docker-tdagent:1.1.0\n  environment:\n    - \"constraint:node==node2\"\n    - \"ELASTICSEARCH_HOST=elk_elasticsearch_1\"\n  volumes:\n    - /data_tdagent:/etc/td-agent\n  environment:\n    - AWS_ACCESS_KEY_ID=dummy\n    - AWS_SECRET_ACCESS_KEY=dummy\n\n\n\u5b9f\u884c\u524d\u306bmaster\u306b\u5411\u3051\u307e\u3059\u3002\n$ eval $(docker-machine env --swarm node1)\n\nmaster\u306b\u5bfe\u3057\u3066docker-compose\u3067\u30b3\u30f3\u30c6\u30ca\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\n\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3092\u4f7f\u7528\u3059\u308b\u3068\u304d\u306f--x-networking\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u5fc5\u8981\u3067\u3059\u3002\n$ docker-compose --x-networking --project-name=elk up -d\n\nCreating elk_tdagent_1\nCreating elk_elasticsearch_1\nPulling logstash (khiraiwa/docker-logstash:1.1.0)...\nnode2: Pulling khiraiwa/docker-logstash:1.1.0... : downloaded\nnode1: Pulling khiraiwa/docker-logstash:1.1.0... : downloaded\nCreating elk_logstash_1\nPulling kibana (khiraiwa/docker-kibana:1.1.0)...\nnode2: Pulling khiraiwa/docker-kibana:1.1.0... : downloaded\nnode1: Pulling khiraiwa/docker-kibana:1.1.0... : downloaded\nCreating elk_kibana_1\n\ndocker ps\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3067\u3059\u3002\n$ docker ps\n\nCONTAINER ID        IMAGE                                 COMMAND                  CREATED             STATUS              PORTS                                                          NAMES\nb08e6bd64157        khiraiwa/docker-kibana:1.1.0          \"/bin/sh -c 'sed -i -\"   15 seconds ago      Up 14 seconds       192.168.99.102:5601->5601/tcp                                  node2/elk_kibana_1\nd679cc7a97d6        khiraiwa/docker-logstash:1.1.0        \"/bin/sh -c 'sudo cho\"   2 minutes ago       Up 2 minutes                                                                       node2/elk_logstash_1\need341792147        khiraiwa/docker-elasticsearch:1.0.0   \"/bin/sh -c 'sudo cho\"   4 minutes ago       Up 4 minutes        192.168.99.101:9200->9200/tcp, 192.168.99.101:9300->9300/tcp   node1/elk_elasticsearch_1\n2288e18e3fef        khiraiwa/docker-tdagent:1.1.0         \"/bin/sh -c 'if [ ! -\"   4 minutes ago       Up 4 minutes        5170/tcp, 9880/tcp, 5160/udp, 24224/udp, 24224/tcp             node2/elk_tdagent_1\n\n\u3053\u308c\u306b\u3066\u3001node1, node2\u306b\u307e\u305f\u304c\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u3066\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3082\u69cb\u7bc9\u3055\u308c\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u4e0b\u8a18\u3001node2\u306eelk_kibana_1\u30b3\u30f3\u30c6\u30ca\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u305f\u3082\u306e\u3067\u3059\u3002\neth0\u304c\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3067\u4f7f\u7528\u3057\u3066\u3044\u308bmy-net\u306b\u5c5e\u3057\u3066\u3044\u307e\u3059\u3002\n$ ip addr\n\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n30: eth0@if31: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue state UP group default\n    link/ether 02:42:0a:00:02:05 brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.5/24 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:aff:fe00:205/64 scope link\n       valid_lft forever preferred_lft forever\n32: eth1@if33: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default\n    link/ether 02:42:ac:12:00:04 brd ff:ff:ff:ff:ff:ff\n    inet 172.18.0.4/16 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe12:4/64 scope link\n       valid_lft forever preferred_lft forever\n\n\u8a66\u3057\u306b\u3001\u5225\u30ce\u30fc\u30c9(node1)\u306eElasticSearch\u306b\u5bfe\u3057\u3066\u3001\u30b3\u30f3\u30c6\u30ca\u540d\u3092\u6307\u5b9a\u3057\u3066ping\u3092\u6253\u3063\u3066\u307f\u308b\u3068\u5fdc\u7b54\u304c\u8fd4\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u540c\u3058\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5c5e\u3057\u3066\u3044\u3066\u3001\u30b3\u30f3\u30c6\u30ca\u540d\u3067IP\u304c\u5f15\u3051\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n$ ping elk_elasticsearch_1\n\nPING elk_elasticsearch_1 (10.0.2.3) 56(84) bytes of data.\n64 bytes from elk_elasticsearch_1 (10.0.2.3): icmp_seq=1 ttl=64 time=0.819 ms\n64 bytes from elk_elasticsearch_1 (10.0.2.3): icmp_seq=2 ttl=64 time=0.742 ms\n64 bytes from elk_elasticsearch_1 (10.0.2.3): icmp_seq=3 ttl=64 time=0.790 ms\n64 bytes from elk_elasticsearch_1 (10.0.2.3): icmp_seq=4 ttl=64 time=0.693 ms\n\n/etc/hosts\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u540d\u524d\u89e3\u6c7a\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n$ cat /etc/hosts\n\n10.0.2.5    b08e6bd64157\n127.0.0.1   localhost\n::1 localhost ip6-localhost ip6-loopback\nfe00::0 ip6-localnet\nff00::0 ip6-mcastprefix\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n10.0.2.4    elk_logstash_1.elk\n10.0.2.2    elk_tdagent_1\n10.0.2.2    elk_tdagent_1.elk\n10.0.2.3    elk_elasticsearch_1\n10.0.2.3    elk_elasticsearch_1.elk\n10.0.2.4    elk_logstash_1\n\n\nKibana\u3092\u8868\u793a\u3059\u308b\n\u4e0b\u8a18\u3067\u3001Kibana\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u30ce\u30fc\u30c9\u306eIP\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n$ docker-machine ip node2\n\n192.168.99.101\n\n\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067Kibana\u306e\u8d77\u52d5\u3057\u3066\u3044\u308b\u30ce\u30fc\u30c9\u306b\u30dd\u30fc\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002\n(ssh\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30b9\u30ef\u30fc\u30c9\u306ftcuser\u306b\u306a\u308a\u307e\u3059\u3002)\n$ ssh docker@$(docker-machine ip node2) -L 5601:localhost:5601\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u3001\nhttp://localhost:5601/\n\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068Kibana\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u4ee5\u524d\u3001\u4e0b\u8a18\u306ePost\u3092\u3057\u3066\u3044\u3066\u3001\u3053\u306e\u6642\u306f\u4e00\u3064\u306e\u30db\u30b9\u30c8\u306b\u8907\u6570\u306e\u30b3\u30f3\u30c6\u30ca\u3092Docker Compose\u3092\u7528\u3044\u3066\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\n[ELK(ElasticSearch, Logstash, Kibana)+fluentd\u306e\u74b0\u5883\u3092Docker Compose\u3067\u69cb\u7bc9\u3057\u3064\u3064\u3001\u8a66\u3057\u306bCloudWatch\u306e\u7d71\u8a08\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3057\u3066\u307f\u305f](http://qiita.com/khiraiwa/items/dc7e1c446d7e0c7d9482)\n\n\u3053\u306e\u3068\u304d\u306edocker\u306e--link\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u306f\u3001\u5225\u306e\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u4e0a\u306b\u8d77\u52d5\u3057\u3066\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u306ehosts\u60c5\u5831\u3092\u6e21\u305b\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\nDocker Engine 1.9\u3067\u8ffd\u52a0\u3055\u308c\u305f**\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0**\u3092\u4f7f\u3048\u3070\u3001\u8907\u6570\u30db\u30b9\u30c8\u9593\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u5171\u6709\u3057\u3001~~--link\u3067\u6e21\u3057\u305f\u540d\u524d\u3092\u5143\u306b\u3057\u305f\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002~~\n\u2192\u3000--link\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3067\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3000\u3000\u307e\u305f\u3001\u5c06\u6765\u7684\u306bDocker\u304b\u3089\u524a\u9664\u3055\u308c\u308b\u305d\u3046\u3067\u3059\u3002\n\u3000\u3000\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3067\u306f\u30b3\u30f3\u30c6\u30ca\u540d\u3067IP\u304c\u5f15\u3051\u308b\u306e\u3067\u3001\n\u3000\u3000\u4e0b\u3067\u306f\u3053\u308c\u3092\u4f7f\u3046\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\n\n![Pasted_Image_1_23_16__10_23_PM.png](https://qiita-image-store.s3.amazonaws.com/0/45959/7fb86b91-8001-dba7-7275-bbf0d60a7c2f.png)\n\n\u524d\u56de\u3068\u540c\u69d8\u306bDocker Compose\u3092\u7528\u3044\u3066\u8907\u6570\u30db\u30b9\u30c8(\u4e0a\u306e\u56f3\u3067\u3044\u3046node1\u3068node2)\u306b\u307e\u305f\u304c\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u3092\u69cb\u7bc9\u3059\u308b\u306e\u304c\u76ee\u6a19\u306a\u306e\u3067\u3001\u305d\u306e\u305f\u3081\u306b\u4e0b\u3067\u306fDocker Swarm\u3082\u4f7f\u3044\u307e\u3057\u305f\u3002\n(Swarm\u306emaster\u30ce\u30fc\u30c9\u306bCompose\u3092\u5b9f\u884c\u3057\u3066\u3001\u8907\u6570\u306e\u30ce\u30fc\u30c9\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059)\n\n# \u74b0\u5883\n\n\u4eca\u56de\u8a66\u3057\u305f\u74b0\u5883\u3068\u3001\u30c4\u30fc\u30eb\u985e\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u4e0b\u8a18\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n| \u74b0\u5883            |         \u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u3069|\n|:---------------|--------------------:|\n| OS             | EI Capitan(10.11.3) | \n| Docker Engine  |               1.9.1 |\n| Docker Machine |               0.5.6 |\n| Docker Compose |               1.5.2 |\n\n# Docker Toolbox\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3092\u884c\u3046\u306b\u306fDocker Engine, VirtualBox\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u305d\u308c\u3089\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u79c1\u306fDocker Engine, Compose, Swarm, Machine, ViratualBox +\u03b1\u3092\u307e\u3068\u3081\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308bDocker Toolbox\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\n\nMac\u3067homebrew\u3092\u4f7f\u3063\u3066\u3044\u308b\u306a\u3089\u4e0b\u8a18\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n```bash\n$ brew cask install dockertoolbox\n```\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\u306f\u3001\u4e0b\u8a18\u304b\u3089\u3002\nhttps://www.docker.com/docker-toolbox\n\n# Key-Value\u30b9\u30c8\u30a2(KVS)\u306e\u6e96\u5099\n\n\u30db\u30b9\u30c8\u30aa\u30f3\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u69cb\u7bc9\u306b\u306f\u30ce\u30fc\u30c9\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3068\u3053\u308d\u306bKVS\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u7acb\u3066\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306eKVS\u306b\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30b9\u30c6\u30fc\u30bf\u30b9(discovery, networks, endpoints, IP addresses\u7b49)\u3092\u767b\u9332\u3059\u308b\u3068\u306e\u3053\u3068\u3002\n\n\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3067\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308bKVS\u306fConsul, Etcd, ZooKeeper\u3068\u306e\u3053\u3068\u3002\n\n\u3053\u3053\u3067\u306f\u30b5\u30f3\u30d7\u30eb\u306b\u7fd2\u3063\u3066Consul\u3092\u7528\u3044\u307e\u3057\u305f\u3002\nDocker Machine\u3092\u4f7f\u3063\u3066\u69cb\u7bc9\u3057\u305fVM\u306b\u3066Consul\u3092\u52d5\u4f5c\u3055\u305b\u307e\u3059\u3002\n\n## VM\u306e\u4f5c\u6210  \n```bash\n$ docker-machine create -d virtualbox mh-keystore\n\nRunning pre-create checks...\nCreating machine...\n(mh-keystore) Copying /Users/[user]/.docker/machine/cache/boot2docker.iso to /Users/[user]/.docker/machine/machines/mh-keystore/boot2docker.iso...\n(mh-keystore) Creating VirtualBox VM...\n(mh-keystore) Creating SSH key...\n(mh-keystore) Starting the VM...\n(mh-keystore) Waiting for an IP...\nWaiting for machine to be running, this may take a few minutes...\nMachine is running, waiting for SSH to be available...\nDetecting operating system of created instance...\nDetecting the provisioner...\nProvisioning with boot2docker...\nCopying certs to the local machine directory...\nCopying certs to the remote machine...\nSetting Docker configuration on the remote daemon...\nChecking connection to Docker...\nDocker is up and running!\nTo see how to connect Docker to this machine, run: docker-machine env mh-keystore\n```\n## VM\u4e0a\u3067Consul\u30b5\u30fc\u30d3\u30b9\u3092\u8d77\u52d5\n\n\u30b3\u30f3\u30c6\u30ca\u3092\u5b9f\u884c\u3057\u3066\u30db\u30b9\u30c8\u30688500/tcp\u30dd\u30fc\u30c8\u3092\u30dd\u30fc\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002\n\n```bash\n$ docker $(docker-machine config mh-keystore) run -d \\\n    -p \"8500:8500\" \\\n    -h \"consul\" \\\n    progrium/consul -server -bootstrap\n\nUnable to find image 'progrium/consul:latest' locally\nlatest: Pulling from progrium/consul\n3b4d28ce80e4: Pull complete\ne5ab901dcf2d: Pull complete\n30ad296c0ea0: Pull complete\n3dba40dec256: Pull complete\nf2ef4387b95e: Pull complete\n53bc8dcc4791: Pull complete\n75ed0b50ba1d: Pull complete\n17c3a7ed5521: Pull complete\n8aca9e0ecf68: Pull complete\n4d1828359d36: Pull complete\n46ed7df7f742: Pull complete\nb5e8ce623ef8: Pull complete\n049dca6ef253: Pull complete\nbdb608bc4555: Pull complete\n8b3d489cfb73: Pull complete\nc74500bbce24: Pull complete\n9f3e605442f6: Pull complete\nd9125e9e799b: Pull complete\nDigest: sha256:8cc8023462905929df9a79ff67ee435a36848ce7a10f18d6d0faba9306b97274\nStatus: Downloaded newer image for progrium/consul:latest\n957db0c166612c435d5379da0f1c325ab028d2d02c7fe01d77d503526a5c8755\n```\n## docker ps\u3067Consul\u304c\u7acb\u3061\u4e0a\u304c\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\nDocker\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u5411\u3051\u5148\u3092\u4f5c\u6210\u3057\u305fVM\u306b\u5411\u3051\u307e\u3059\u3002\n\n```bash\n$ eval \"$(docker-machine env mh-keystore)\"\n```\n\n\u4e0b\u8a18\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\u8d77\u52d5\u3057\u3066\u3044\u308c\u3070\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```bash\n$ docker ps\n\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                                                            NAMES\n957db0c16661        progrium/consul     \"/bin/start -server -\"   2 minutes ago       Up 2 minutes        53/tcp, 53/udp, 8300-8302/tcp, 0.0.0.0:8500->8500/tcp, 8301-8302/udp, 8400/tcp   big_cray\n```\n\nConsul\u81ea\u4f53\u306f\u4e0b\u8a18\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u306e\u3067\u3001\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u3067\u305d\u308c\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\nhttps://www.consul.io/\n\u3053\u3053\u306f\u30b5\u30f3\u30d7\u30eb\u901a\u308a\u30b3\u30f3\u30c6\u30ca\u3092\u5229\u7528\u3057\u3066\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u30b3\u30f3\u30c6\u30ca\u3067\u5b9f\u884c\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u697d\u3067\u3057\u305f\u3002\n\n# \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u8907\u6570\u306e\u30ce\u30fc\u30c9\u3092\u8d77\u52d5\n\n\u4eca\u56de\u3001Docker Compose\u3067\u8907\u6570\u30ce\u30fc\u30c9\u306b\u307e\u305f\u304c\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u305f\u3044\u306e\u3067\u3001Docker Swarm\u3092\u4f7f\u3063\u3066\u30af\u30e9\u30b9\u30bf\u3092\u69cb\u7bc9\u3057\u307e\u3057\u305f\u3002\n\n\u30db\u30b9\u30c8\u30aa\u30f3\u30ea\u30fc\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3046\u3060\u3051\u306a\u3089Swarm\u306e\u30af\u30e9\u30b9\u30bf\u306f\u5fc5\u9808\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nDocker Machine\u3082\u5fc5\u9808\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n## Swarm master\u306e\u4f5c\u6210\n\n\u307e\u305a\u30af\u30e9\u30b9\u30bf\u306emaster\u306b\u306a\u308b\u30ce\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n$ docker-machine create \\\n-d virtualbox \\\n--swarm --swarm-master \\\n--swarm-discovery=\"consul://$(docker-machine ip mh-keystore):8500\" \\\n--engine-opt=\"cluster-store=consul://$(docker-machine ip mh-keystore):8500\" \\\n--engine-opt=\"cluster-advertise=eth1:2376\" \\\nnode1\n\nRunning pre-create checks...\nCreating machine...\n(node1) Copying /Users/[user]/.docker/machine/cache/boot2docker.iso to /Users/[user]/.docker/machine/machines/node1/boot2docker.iso...\n(node1) Creating VirtualBox VM...\n(node1) Creating SSH key...\n(node1) Starting the VM...\n(node1) Waiting for an IP...\nWaiting for machine to be running, this may take a few minutes...\nMachine is running, waiting for SSH to be available...\nDetecting operating system of created instance...\nDetecting the provisioner...\nProvisioning with boot2docker...\nCopying certs to the local machine directory...\nCopying certs to the remote machine...\nSetting Docker configuration on the remote daemon...\nConfiguring swarm...\nChecking connection to Docker...\nDocker is up and running!\nTo see how to connect Docker to this machine, run: docker-machine env node1\n```\n\nDocker Machine\u3092\u4f7f\u308f\u305a\u306b\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001VM\u4e0a\u3067Docker Engine\u306e\u30c7\u30fc\u30e2\u30f3\u3092\u8d77\u52d5\u3059\u308b\u969b\u306b\u3001\u4e0b\u8a18\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u3088\u3044\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3002\n\n* --cluster-store\n* --cluster-advertise\n\nDocker Machine\u3067\u8d77\u52d5\u3057\u305fVM\u4e0a\u3067\u306f\u30c7\u30fc\u30e2\u30f3\u8d77\u52d5\u306e\u30b3\u30de\u30f3\u30c9\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\n```bash:\n/usr/local/bin/docker daemon -D -g /var/lib/docker \\\n-H unix:// -H tcp://0.0.0.0:2376 --label provider=virtualbox \\\n--cluster-store=consul://192.168.99.100:8500 \\\n--cluster-advertise=eth1:2376 --tlsverify \\\n--tlscacert=/var/lib/boot2docker/ca.pem \\\n--tlscert=/var/lib/boot2docker/server.pem \\\n--tlskey=/var/lib/boot2docker/server-key.pem -s aufs\n```\n\n## Swarm cluster\u306e\u4f5c\u6210\n\n\u7d9a\u3044\u3066\u30af\u30e9\u30b9\u30bf\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```bash\n$ docker-machine create -d virtualbox \\\n    --swarm \\\n    --swarm-discovery=\"consul://$(docker-machine ip mh-keystore):8500\" \\\n    --engine-opt=\"cluster-store=consul://$(docker-machine ip mh-keystore):8500\" \\\n    --engine-opt=\"cluster-advertise=eth1:2376\" \\\n  node2\n\nRunning pre-create checks...\nCreating machine...\n(node2) Copying /Users/[user]/.docker/machine/cache/boot2docker.iso to /Users/[user]/.docker/machine/machines/node2/boot2docker.iso...\n(node2) Creating VirtualBox VM...\n(node2) Creating SSH key...\n(node2) Starting the VM...\n(node2) Waiting for an IP...\nWaiting for machine to be running, this may take a few minutes...\nMachine is running, waiting for SSH to be available...\nDetecting operating system of created instance...\nDetecting the provisioner...\nProvisioning with boot2docker...\nCopying certs to the local machine directory...\nCopying certs to the remote machine...\nSetting Docker configuration on the remote daemon...\nConfiguring swarm...\nChecking connection to Docker...\nDocker is up and running!\nTo see how to connect Docker to this machine, run: docker-machine env node2\n```\n\n## \u69cb\u7bc9\u5185\u5bb9\u306e\u78ba\u8a8d\n\n\u3053\u3053\u307e\u3067\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30013\u3064\u4f5c\u6210\u3055\u308c\u3066\u3044\u308c\u3070OK\u3067\u3059\u3002\n\n```bash\n$ docker-machine ls\n\nNAME          ACTIVE   URL          STATE     URL                         SWARM            DOCKER   ERRORS\nmh-keystore   *        virtualbox   Running   tcp://192.168.99.100:2376                    v1.9.1\nnode1         -        virtualbox   Running   tcp://192.168.99.101:2376   node1 (master)   v1.9.1\nnode2         -        virtualbox   Running   tcp://192.168.99.102:2376   node1            v1.9.1\n```\n\n\u6b21\u306b\u3001master\u30ce\u30fc\u30c9\u304b\u3089Swarm\u30af\u30e9\u30b9\u30bf\u306e\u30ce\u30fc\u30c9\u60c5\u5831\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\nDocker\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u5b9f\u884c\u3092master\u30ce\u30fc\u30c9\u306b\u5411\u3051\u307e\u3059\u3002\n\n```bash\n$ eval $(docker-machine env --swarm node1)\n```\n\n\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\n```bash\n$ docker info\n\nContainers: 3\nImages: 2\nRole: primary\nStrategy: spread\nFilters: health, port, dependency, affinity, constraint\nNodes: 2\n node1: 192.168.99.101:2376\n  \u2514 Status: Healthy\n  \u2514 Containers: 2\n  \u2514 Reserved CPUs: 0 / 1\n  \u2514 Reserved Memory: 0 B / 1.021 GiB\n  \u2514 Labels: executiondriver=native-0.2, kernelversion=4.1.13-boot2docker, operatingsystem=Boot2Docker 1.9.1 (TCL 6.4.1); master : cef800b - Fri Nov 20 19:33:59 UTC 2015, provider=virtualbox, storagedriver=aufs\n node2: 192.168.99.102:2376\n  \u2514 Status: Healthy\n  \u2514 Containers: 1\n  \u2514 Reserved CPUs: 0 / 1\n  \u2514 Reserved Memory: 0 B / 1.021 GiB\n  \u2514 Labels: executiondriver=native-0.2, kernelversion=4.1.13-boot2docker, operatingsystem=Boot2Docker 1.9.1 (TCL 6.4.1); master : cef800b - Fri Nov 20 19:33:59 UTC 2015, provider=virtualbox, storagedriver=aufs\nCPUs: 2\nTotal Memory: 2.043 GiB\nName: node1\n```\n\n# \u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3092\u69cb\u7bc9\u3057\u307e\u3059\n\n\u4e0b\u8a18\u3001\u30b3\u30de\u30f3\u30c9\u3067my-net\u3068\u3044\u3046\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n$ docker network create --driver overlay my-net\n\nca21981bd1e31ec3d7d40336edffdddc49d318492f6248323fb038b6307b3d32\n```\n\n\u4f5c\u6210\u3055\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash\n$ docker network ls\n\nNETWORK ID          NAME                DRIVER\na6c941a4d77e        node2/bridge        bridge\n722e0e348884        node2/none          null\n3260beae2418        node2/host          host\ne90de0c47ecb        node1/none          null\n4b5140f289f8        node1/host          host\nad297effc7c5        node1/bridge        bridge\nca21981bd1e3        my-net              overlay\n```\n\nmy-net\u3068\u3044\u3046\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304coverlay\u3068\u3044\u3046DRIVER\u3067\u4f5c\u6210\u3055\u308c\u3066\u3044\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n# Docker Compose\u3092\u3082\u3061\u3044\u3066\u69cb\u7bc9\n\n\u6e96\u5099\u304c\u6574\u3063\u305f\u306e\u3067\u3001Docker Compose\u3067\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3059\u3002\n\n[ELK(ElasticSearch, Logstash, Kibana)+fluentd\u306e\u74b0\u5883\u3092Docker Compose\u3067\u69cb\u7bc9\u3057\u3064\u3064\u3001\u8a66\u3057\u306bCloudWatch\u306e\u7d71\u8a08\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3057\u3066\u307f\u305f](http://qiita.com/khiraiwa/items/dc7e1c446d7e0c7d9482)\u306edocker-compose.yml\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\n\u74b0\u5883\u5909\u6570\u306econstraint:node\u3067\u30ce\u30fc\u30c9\u540d\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u6307\u5b9a\u3057\u305f\u30ce\u30fc\u30c9\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u304f\u308c\u307e\u3059\u3002(\u3053\u3053\u306fSwarm\u306e\u6a5f\u80fd)\n\nlinks\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30b3\u30f3\u30c6\u30ca\u540d\u3092\u74b0\u5883\u5909\u6570\u3067\u6e21\u3059\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002(\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u306eIP\u304c\u5f15\u3051\u307e\u3059\u3002)\n\n```yaml:docker-compose.yml\n# elasticsearch\nelasticsearch:\n  image: khiraiwa/docker-elasticsearch:1.0.0\n  environment:\n    - \"constraint:node==node1\"\n  volumes:\n    - /data_elasticsearch:/data_elasticsearch\n  ports:\n    - \"9200:9200\"\n    - \"9300:9300\"\n\n# kibana\nkibana:\n  image: khiraiwa/docker-kibana:1.1.0\n  environment:\n    - \"constraint:node==node2\"\n    - \"ELASTICSEARCH_HOST=elk_elasticsearch_1\"\n  volumes:\n    - /data_kibana:/data_kibana\n  ports:\n    - \"5601:5601\"\n\n# logstash\nlogstash:\n  image: khiraiwa/docker-logstash:1.1.0\n  environment:\n    - \"constraint:node==node2\"\n    - \"ELASTICSEARCH_HOST=elk_elasticsearch_1\"\n  volumes:\n    - /data_logstash:/data_logstash\n  environment:\n    - AWS_ACCESS_KEY_ID=dummy\n    - AWS_SECRET_ACCESS_KEY=dummy\n\n# tdagent\ntdagent:\n  image: khiraiwa/docker-tdagent:1.1.0\n  environment:\n    - \"constraint:node==node2\"\n    - \"ELASTICSEARCH_HOST=elk_elasticsearch_1\"\n  volumes:\n    - /data_tdagent:/etc/td-agent\n  environment:\n    - AWS_ACCESS_KEY_ID=dummy\n    - AWS_SECRET_ACCESS_KEY=dummy\n```\n\n\u5b9f\u884c\u524d\u306bmaster\u306b\u5411\u3051\u307e\u3059\u3002\n\n```bash\n$ eval $(docker-machine env --swarm node1)\n```\n\nmaster\u306b\u5bfe\u3057\u3066docker-compose\u3067\u30b3\u30f3\u30c6\u30ca\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\n\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3092\u4f7f\u7528\u3059\u308b\u3068\u304d\u306f--x-networking\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n```bash\n$ docker-compose --x-networking --project-name=elk up -d\n\nCreating elk_tdagent_1\nCreating elk_elasticsearch_1\nPulling logstash (khiraiwa/docker-logstash:1.1.0)...\nnode2: Pulling khiraiwa/docker-logstash:1.1.0... : downloaded\nnode1: Pulling khiraiwa/docker-logstash:1.1.0... : downloaded\nCreating elk_logstash_1\nPulling kibana (khiraiwa/docker-kibana:1.1.0)...\nnode2: Pulling khiraiwa/docker-kibana:1.1.0... : downloaded\nnode1: Pulling khiraiwa/docker-kibana:1.1.0... : downloaded\nCreating elk_kibana_1\n```\n\ndocker ps\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3067\u3059\u3002\n\n```bash\n$ docker ps\n\nCONTAINER ID        IMAGE                                 COMMAND                  CREATED             STATUS              PORTS                                                          NAMES\nb08e6bd64157        khiraiwa/docker-kibana:1.1.0          \"/bin/sh -c 'sed -i -\"   15 seconds ago      Up 14 seconds       192.168.99.102:5601->5601/tcp                                  node2/elk_kibana_1\nd679cc7a97d6        khiraiwa/docker-logstash:1.1.0        \"/bin/sh -c 'sudo cho\"   2 minutes ago       Up 2 minutes                                                                       node2/elk_logstash_1\need341792147        khiraiwa/docker-elasticsearch:1.0.0   \"/bin/sh -c 'sudo cho\"   4 minutes ago       Up 4 minutes        192.168.99.101:9200->9200/tcp, 192.168.99.101:9300->9300/tcp   node1/elk_elasticsearch_1\n2288e18e3fef        khiraiwa/docker-tdagent:1.1.0         \"/bin/sh -c 'if [ ! -\"   4 minutes ago       Up 4 minutes        5170/tcp, 9880/tcp, 5160/udp, 24224/udp, 24224/tcp             node2/elk_tdagent_1\n```\n\n\u3053\u308c\u306b\u3066\u3001node1, node2\u306b\u307e\u305f\u304c\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u3066\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3082\u69cb\u7bc9\u3055\u308c\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4e0b\u8a18\u3001node2\u306eelk_kibana_1\u30b3\u30f3\u30c6\u30ca\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u305f\u3082\u306e\u3067\u3059\u3002\neth0\u304c\u30de\u30eb\u30c1\u30db\u30b9\u30c8\u30cd\u30c3\u30c8\u30ef\u30fc\u30ad\u30f3\u30b0\u3067\u4f7f\u7528\u3057\u3066\u3044\u308bmy-net\u306b\u5c5e\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\n$ ip addr\n\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n    inet 127.0.0.1/8 scope host lo\n       valid_lft forever preferred_lft forever\n    inet6 ::1/128 scope host\n       valid_lft forever preferred_lft forever\n30: eth0@if31: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1450 qdisc noqueue state UP group default\n    link/ether 02:42:0a:00:02:05 brd ff:ff:ff:ff:ff:ff\n    inet 10.0.2.5/24 scope global eth0\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:aff:fe00:205/64 scope link\n       valid_lft forever preferred_lft forever\n32: eth1@if33: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP group default\n    link/ether 02:42:ac:12:00:04 brd ff:ff:ff:ff:ff:ff\n    inet 172.18.0.4/16 scope global eth1\n       valid_lft forever preferred_lft forever\n    inet6 fe80::42:acff:fe12:4/64 scope link\n       valid_lft forever preferred_lft forever\n```\n\n\u8a66\u3057\u306b\u3001\u5225\u30ce\u30fc\u30c9(node1)\u306eElasticSearch\u306b\u5bfe\u3057\u3066\u3001\u30b3\u30f3\u30c6\u30ca\u540d\u3092\u6307\u5b9a\u3057\u3066ping\u3092\u6253\u3063\u3066\u307f\u308b\u3068\u5fdc\u7b54\u304c\u8fd4\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u540c\u3058\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5c5e\u3057\u3066\u3044\u3066\u3001\u30b3\u30f3\u30c6\u30ca\u540d\u3067IP\u304c\u5f15\u3051\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n```bash\n$ ping elk_elasticsearch_1\n\nPING elk_elasticsearch_1 (10.0.2.3) 56(84) bytes of data.\n64 bytes from elk_elasticsearch_1 (10.0.2.3): icmp_seq=1 ttl=64 time=0.819 ms\n64 bytes from elk_elasticsearch_1 (10.0.2.3): icmp_seq=2 ttl=64 time=0.742 ms\n64 bytes from elk_elasticsearch_1 (10.0.2.3): icmp_seq=3 ttl=64 time=0.790 ms\n64 bytes from elk_elasticsearch_1 (10.0.2.3): icmp_seq=4 ttl=64 time=0.693 ms\n```\n\n/etc/hosts\u3092\u898b\u3066\u307f\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u540d\u524d\u89e3\u6c7a\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n```bash\n$ cat /etc/hosts\n\n10.0.2.5\tb08e6bd64157\n127.0.0.1\tlocalhost\n::1\tlocalhost ip6-localhost ip6-loopback\nfe00::0\tip6-localnet\nff00::0\tip6-mcastprefix\nff02::1\tip6-allnodes\nff02::2\tip6-allrouters\n10.0.2.4\telk_logstash_1.elk\n10.0.2.2\telk_tdagent_1\n10.0.2.2\telk_tdagent_1.elk\n10.0.2.3\telk_elasticsearch_1\n10.0.2.3\telk_elasticsearch_1.elk\n10.0.2.4\telk_logstash_1\n```\n# Kibana\u3092\u8868\u793a\u3059\u308b\n\u4e0b\u8a18\u3067\u3001Kibana\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\u30ce\u30fc\u30c9\u306eIP\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash\n$ docker-machine ip node2\n\n192.168.99.101\n```\n\n\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067Kibana\u306e\u8d77\u52d5\u3057\u3066\u3044\u308b\u30ce\u30fc\u30c9\u306b\u30dd\u30fc\u30c8\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002\n(ssh\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30b9\u30ef\u30fc\u30c9\u306ftcuser\u306b\u306a\u308a\u307e\u3059\u3002)\n\n```bash\n$ ssh docker@$(docker-machine ip node2) -L 5601:localhost:5601\n```\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u3001\nhttp://localhost:5601/\n\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068Kibana\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n"}