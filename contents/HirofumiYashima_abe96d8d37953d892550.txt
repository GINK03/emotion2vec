{"context": "Stack\u74b0\u5883 \u3067\u3001\u6587\u5b57\u5217 \u306b \u9069\u7528\u3059\u308b \u3068 \u4ee5\u4e0b\u306e\u30eb\u30fc\u30eb\u3067\u3001\u6587\u5b57\u5217 \u3092 \u8fd4\u3059\u95a2\u6570 \u3092 \u5b9a\u7fa9 \u3057\u3066\u3001\u52d5\u304b\u3057\u3066\u307f\u308b\u3002\n\n\u7a7a\u6587\u5b57\u5217 => \"\u7a7a\u6587\u5b57\u304c\u5165\u529b\u3055\u308c\u307e\u3057\u305f\u3002\"\n\uff11\u6587\u5b57\u76ee \u304c a\u301cz (a..z) \u3067 \u958b\u59cb => \uff08\u6587\u5b57\u5217\uff09\"is small alphabet-written line.\"\n\uff11\u6587\u5b57\u76ee \u304c A\u301cZ (A..Z) \u3067 \u958b\u59cb => \uff08\u6587\u5b57\u5217\uff09\"is large alphabet-written line.\"\n\uff11\u6587\u5b57\u76ee \u304c \u3042\u301c\u3093  \u3067 \u958b\u59cb => \uff08\u6587\u5b57\u5217\uff09\"is Japanese-Hirakana-written line.\"\n\uff11\u6587\u5b57\u76ee\u304c\u305d\u308c\u4ee5\u5916 => \"Unknown letter-written line\"\n\n\u3010 \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1 \u3067 \u5224\u5b9a \u3011\n\u7a7a\u6587\u5b57\u5217 \u304b\u3001(x:_)\u306b\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3059\u308b\uff11\u6587\u5b57\u4ee5\u4e0a\u306e\u6587\u5b57\u5217 \u304b \u3069\u3046\u304b\n\u3010 \u30ac\u30fc\u30c9 \u3067 \u5224\u5b9a \u3011\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u7d50\u679c\u3001x \u306b \u675f\u7e1b\u3055\u308c\u305f\u5024\uff08String\u578b\u306e\u8981\u7d20\uff1d\u6587\u5b57\uff09\u306e\u5024\u5224\u5b9a\u304c\u3001(a..z) \u3082\u3057\u304f\u306f (A..Z) \u3082\u3057\u304f\u306f '\u3042..\u3093' \u3042\u308b\u3044\u306f\u3001\u305d\u308c\u4ee5\u5916\uff08Otherwise\uff09\u304b\u3002\n\nchecker\u95a2\u6570\nchecker :: String -> String\nchecker \"\" = \"\u7a7a\u6587\u5b57\u304c\u5165\u529b\u3055\u308c\u307e\u3057\u305f\u3002\"\nchecker s@(x:_)\n    | 'a' <= x && x <= 'z'   = s ++ \"is small alphabet-written line.\"\n    | 'A' <= x && x <= 'Z'   = s ++ \"is large alphabet-written line.\"\n    | '\u3042' <= x && x <= '\u3093'  = s ++ \"is Japanese-Hirakana-written line.\"\n    | otherwise              = \"Unknown letter-written line\"\n\n\n\n\n\u4ee5\u4e0b\u3001\u6d41\u308c\u3067\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n\n\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u306b \u79fb\u52d5\n\n\nTerminal\nhirofumiyashima$ cd ~/Desktop/\nHirofumiYashima-no-MacBook:Desktop hirofumiyashima$ pwd\n/Users/hirofumiyashima/Desktop\nHirofumiYashima-no-MacBook:Desktop hirofumiyashima$ mkdir haskell_matching_guard_lesson\nHirofumiYashima-no-MacBook:Desktop hirofumiyashima$ cd haskell_matching_guard_lesson\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$\n\n\n\nstack : 1.0.4\n\n\nTerminal\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ stack --version\nVersion 1.0.4, Git revision cf18703b1392a96a5a4896a560309e501af63260 (3220 commits) x86_64\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$\n\n\n\nStack\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\n\n\uff08 \u5931\u6557 \uff09\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\uff1astack new pattern_guard_lesson\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff1asimple\n\n\nTerminal\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ stack new pattern_guard_lesson simple\nExpected valid package name, but got: pattern_guard_lesson\n\nUsage: stack new PACKAGE_NAME [--bare] [TEMPLATE_NAME] [-p|--param KEY:VALUE]\n                 [DIRS] [--solver] [--omit-packages] [--force]\n                 [--ignore-subdirs] [--help]\n  Create a new project from a template. Run `stack templates' to see available\n  templates.\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$\n\n\n\n\uff08 \u6210\u529f \uff09\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\uff1astack new pattern_guard_lesson\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff1asimple\n\n\nTerminal\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ stack new pattern-guard-lesson simple\nDownloading template \"simple\" to create project \"pattern-guard-lesson\" in pattern-guard-lesson/ ...\n\nThe following parameters were needed by the template but not provided: author-email, author-name, category, copyright, github-username\nYou can provide them in /Users/hirofumiyashima/.stack/config.yaml, like this:\ntemplates:\n  params:\n    author-email: value\n    author-name: value\n    category: value\n    copyright: value\n    github-username: value\nOr you can pass each one as parameters like this:\nstack new pattern-guard-lesson simple -p \"author-email:value\" -p \"author-name:value\" -p \"category:value\" -p \"copyright:value\" -p \"github-username:value\"\n\nUsing cabal packages:\n- pattern-guard-lesson/pattern-guard-lesson.cabal\n\nSelecting the best among 9 snapshots...\n\n* Matches lts-7.16\n\nSelected resolver: lts-7.16\nInitialising configuration using resolver: lts-7.16\nTotal number of user packages considered: 1\nWriting configuration to file: pattern-guard-lesson/stack.yaml\nAll done.\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$\n\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u69cb\u6210 \u3092 \u78ba\u8a8d\n\n\nTerminal\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ ls\npattern-guard-lesson\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ tree pattern-guard-lesson/\npattern-guard-lesson/\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 Setup.hs\n\u251c\u2500\u2500 pattern-guard-lesson.cabal\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 Main.hs\n\u2514\u2500\u2500 stack.yaml\n\n1 directory, 5 files\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$\n\n\n\nGHCi\u8d77\u52d5\n\n\nTerminal\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ ghci\nGHCi, version 7.10.3: http://www.haskell.org/ghc/  :? for help\nPrelude>:q\n\n\n\nPrelude\u30e2\u30b8\u30e5\u30fc\u30eb\u4ee5\u5916\u3001\u5916\u90e8\u30e2\u30b8\u30e5\u30fc\u30eb \u3092 load\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u306f \"Prelude>\" \u306b \u306a\u308b\u3002\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb \u3092 \u7528\u610f\n\n\nTerminal\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ emacs NameChecker.hs \n\n\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4e2d\u8eab \u3092 \u78ba\u8a8d\n\n\nTerminal\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ cat NameChecker.hs \nchecker :: String -> String\nchecker \"\" = \"\u7a7a\u6587\u5b57\u304c\u5165\u529b\u3055\u308c\u307e\u3057\u305f\u3002\"\nchecker s@(x:xs)\n    | 'a' <= x && x <= 'z'   = s ++ \"is small alphabet-written line.\"\n    | 'A' <= x && x <= 'Z'   = s ++ \"is large alphabet-written line.\"\n    | '\u3042' <= x && x <= '\u3093'  = s ++ \"is Japanese-Hirakana-written line.\"\n    | otherwise              = \"Unknown letter-written line\"\n    HirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ \nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$\n\n\n\n\nGHCi \u3092 W\u30aa\u30d7\u30b7\u30e7\u30f3 \u3067\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb \u3092 \u30ed\u30fc\u30c9\u3057\u3066 \u8d77\u52d5\n\n\nghci -W NameChecker.hs \n\n\nTerminal\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ ghci -W NameChecker.hs \nGHCi, version 7.10.3: http://www.haskell.org/ghc/  :? for help\n[1 of 1] Compiling Main             ( NameChecker.hs, interpreted )\n\nNameChecker.hs:3:14: Warning: Defined but not used: \u2018xs\u2019\nOk, modules loaded: Main.\n*Main>\n\n\n\nNameChecker.hs \u30d5\u30a1\u30a4\u30eb \u3067 \u5b9a\u7fa9\u3057\u305f Main\u30e2\u30b8\u30e5\u30fc\u30eb \u304c \u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u901a\u308a\u3001GHCi\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb \u306b \u8aad\u307f\u8fbc\u307e\u308c\u305f\u3002\nMain\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u306f\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3057\u305f\uff12\u6587\u5b57\u4ee5\u964d\u306e\u6587\u5b57\u5217\u3092\u675f\u7e1b\u3057\u305f xs \u5909\u6570 \u304c \u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u7121\u99c4\u3067\u3042\u308b \u3068 Warning \u304c\u51fa\u3066\u3044\u308b\u3002\n\n\n[1 of 1] Compiling Main             ( NameChecker.hs, interpreted )\nNameChecker.hs:3:14: Warning: Defined but not used: \u2018xs\u2019\nOk, modules loaded: Main.\n\n\n\nchecker\u95a2\u6570 \u3092\u3001String\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b \u9069\u7528\u3057\u3066\u307f\u308b\n\n\uff08\uff11\uff09\uff11\u6587\u5b57\u76ee\u304c\u5c0f\u6587\u5b57\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8 \u3067 \u59cb\u307e\u308b String\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b \u9069\u7528\n\nGHCi\n*Main> checker \"line whose head letter is an alphabet.\"\n\"line whose head letter is an alphabet.is small alphabet-written line.\"\n*Main>\n\n\n\u3010 checker\u95a2\u6570 \u306e \u8a55\u4fa1\u7d50\u679c \u3011\n\n\"line whose head letter is an alphabet.is small alphabet-written line.\"\u3000\n\n\n\u4ed5\u69d8\u901a\u308a\u3001\"\uff08\u6587\u5b57\u5217\uff09is small alphabet-written line.\" \u3068 \u51fa\u529b\u3055\u308c\u305f\u3002\n\n\n\uff08\uff12\uff09\uff11\u6587\u5b57\u76ee\u304c\u5927\u6587\u5b57\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8 \u3067 \u59cb\u307e\u308b String\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b \u9069\u7528\n\nGHCi\n*Main> checker \"LINE whose head letter is an alphabet.\" \n\"LINE whose head letter is an alphabet.is large alphabet-written line.\"\n*Main>\n\n\n\u3010 checker\u95a2\u6570 \u306e \u8a55\u4fa1\u7d50\u679c \u3011\n\n\"LINE whose head letter is an alphabet.is large alphabet-written line.\"\n\n\n\u4ed5\u69d8\u901a\u308a\u3001\"\uff08\u6587\u5b57\u5217\uff09is large alphabet-written line.\" \u3068 \u51fa\u529b\u3055\u308c\u305f\u3002\n\n\n\uff08\uff13\uff09\uff11\u6587\u5b57\u76ee \u304c \u5e73\u4eee\u540d \u3067 \u59cb\u307e\u308bString\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b \u9069\u7528\u3002\n\nGHCi\n*Main> checker \"\u3072\u3089\u304c\u306a\u304b\u3089\u59cb\u307e\u308b\u6587\u5b57\u5217\"\n\"\\12402\\12425\\12364\\12394\\12363\\12425\\22987\\12414\\12427\\25991\\23383\\21015is Japanese-Hirakana-written line.\"\n*Main>\n\n\n\u3010 checker\u95a2\u6570 \u306e \u8a55\u4fa1\u7d50\u679c \u3011\n\n\"\\12402\\12425\\12364\\12394\\12363\\12425\\22987\\12414\\12427\\25991\\23383\\21015is Japanese-Hirakana-written line.\"\n\n\n\u4ed5\u69d8\u901a\u308a\u3001\"\uff08\u6587\u5b57\u5217\uff09is Japanese-Hirakana-written line.\" \u3068 \u51fa\u529b\u3055\u308c\u305f\u3002\n\u65e5\u672c\u8a9e\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u5217\u306f\u3001\u6587\u5b57\u30b3\u30fc\u30c9\u3067\u51fa\u529b\u3055\u308c\u308b\u3002\n\n\n\uff08\uff14\uff09\uff11\u6587\u5b57\u76ee \u304c \u6f22\u5b57 \u3067 \u59cb\u307e\u308b String\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b \u9069\u7528\u3002\n\nGHCi\n*Main> checker \"\u4eca\u65e5\u306f\u5bd2\u3044\u3067\u3059\u3002\"\n\"Unknown letter-written line\"\n*Main>\n\n\n\u3010 checker\u95a2\u6570 \u306e \u8a55\u4fa1\u7d50\u679c \u3011\n\n\"Unknown letter-written line\"\n\n\n\u4ed5\u69d8\u901a\u308a\u3001\"Unknown letter-written line\" \u3068 \u51fa\u529b\u3055\u308c\u305f\u3002\n\n\n\nGHCi \u7d42\u4e86\n\n\nGHCi\n*Main> :q\nLeaving GHCi.\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ \n\n\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb \u3092 \u66f8\u304d\u63db\u3048\u308b\n\n\nNameChecker.hs \u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3001\u4ee5\u4e0b \u306e Warning \u304c \u51fa\u3066\u3044\u305f\u3002\n\n\nMain\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u306f\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3057\u305f\uff12\u6587\u5b57\u4ee5\u964d\u306e\u6587\u5b57\u5217\u3092\u675f\u7e1b\u3057\u305f xs \u5909\u6570 \u304c \u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u7121\u99c4\u3067\u3042\u308b \u3068 Warning \u304c\u51fa\u3066\u3044\u308b\u3002\n\n\n[1 of 1] Compiling Main             ( NameChecker.hs, interpreted )\nNameChecker.hs:3:14: Warning: Defined but not used: \u2018xs\u2019\nOk, modules loaded: Main.\n\n\u4f7f\u308f\u306a\u3044\uff12\u6587\u5b57\u76ee\u4ee5\u964d\u306e\u6587\u5b57\u5217\u8981\u7d20 \u3092\u3001\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\uff08\"_\"\uff09\u306b\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3055\u305b\u308b\u3002\n\nTerminal\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ emacs NameChecker.hs\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ cp NameChecker.hs NameCheckerRev.hs\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ emacs NameCheckerRev.hs \n\n\n\n\nGHCi\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ cat NameCheckerRev.hs\nchecker :: String -> String\nchecker \"\" = \"\u7a7a\u6587\u5b57\u304c\u5165\u529b\u3055\u308c\u307e\u3057\u305f\u3002\"\nchecker s@(x:_)\n    | 'a' <= x && x <= 'z'   = s ++ \"is small alphabet-written line.\"\n    | 'A' <= x && x <= 'Z'   = s ++ \"is large alphabet-written line.\"\n    | '\u3042' <= x && x <= '\u3093'  = s ++ \"is Japanese-Hirakana-written line.\"\n    | otherwise              = \"Unknown letter-written line\"\n    HirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ \n\n\n\nGHCi W\u30aa\u30d7\u30b7\u30e7\u30f3 \u3067 \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3001\u4eca\u5ea6 \u306f Warning \u51fa\u529b\u3055\u308c\u305a\u306a\u304f\u306a\u3063\u305f\u3002\n\n\nTerminal\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ ghci -W NameCheckerRev.hs \nGHCi, version 7.10.3: http://www.haskell.org/ghc/  :? for help\n[1 of 1] Compiling Main             ( NameCheckerRev.hs, interpreted )\nOk, modules loaded: Main.\n*Main> \n\n\n\n\n\u52d5\u4f5c \u306f \u524d\u3068\u5909\u308f\u3089\u305a\n\n\nGHCi\n*Main> checker \"\u4eca\u65e5\u306f\u5bd2\u3044\u3067\u3059\u3002\"\n\"Unknown letter-written line\"\n*Main> \n*Main> checker \"\u3072\u3089\u304c\u306a\u304b\u3089\u59cb\u307e\u308b\u6587\u5b57\u5217\"\n\"\\12402\\12425\\12364\\12394\\12363\\12425\\22987\\12414\\12427\\25991\\23383\\21015is Japanese-Hirakana-written line.\"\n*Main> \n*Main> checker \"line whose head letter is an alphabet.\" \n\"line whose head letter is an alphabet.is small alphabet-written line.\"\n*Main> \n*Main> checker \"LINE whose head letter is an alphabet.\" \n\"LINE whose head letter is an alphabet.is large alphabet-written line.\"\n*Main> \n*Main> :q\nLeaving GHCi.\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ \n\n\n\nStack\u74b0\u5883 \u3067\u3001\u6587\u5b57\u5217 \u306b \u9069\u7528\u3059\u308b \u3068 \u4ee5\u4e0b\u306e\u30eb\u30fc\u30eb\u3067\u3001\u6587\u5b57\u5217 \u3092 \u8fd4\u3059\u95a2\u6570 \u3092 \u5b9a\u7fa9 \u3057\u3066\u3001\u52d5\u304b\u3057\u3066\u307f\u308b\u3002\n\n* \u7a7a\u6587\u5b57\u5217 => \"\u7a7a\u6587\u5b57\u304c\u5165\u529b\u3055\u308c\u307e\u3057\u305f\u3002\"\n* \uff11\u6587\u5b57\u76ee \u304c a\u301cz (a..z) \u3067 \u958b\u59cb => \uff08\u6587\u5b57\u5217\uff09\"is small alphabet-written line.\"\n* \uff11\u6587\u5b57\u76ee \u304c A\u301cZ (A..Z) \u3067 \u958b\u59cb => \uff08\u6587\u5b57\u5217\uff09\"is large alphabet-written line.\"\n* \uff11\u6587\u5b57\u76ee \u304c \u3042\u301c\u3093  \u3067 \u958b\u59cb => \uff08\u6587\u5b57\u5217\uff09\"is Japanese-Hirakana-written line.\"\n* \uff11\u6587\u5b57\u76ee\u304c\u305d\u308c\u4ee5\u5916 => \"Unknown letter-written line\"\n\n__\u3010 \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1 \u3067 \u5224\u5b9a \u3011__\n\n\u7a7a\u6587\u5b57\u5217 \u304b\u3001(x:_)\u306b\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3059\u308b\uff11\u6587\u5b57\u4ee5\u4e0a\u306e\u6587\u5b57\u5217 \u304b \u3069\u3046\u304b\n\n__\u3010 \u30ac\u30fc\u30c9 \u3067 \u5224\u5b9a \u3011__\n\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u7d50\u679c\u3001x \u306b \u675f\u7e1b\u3055\u308c\u305f\u5024\uff08String\u578b\u306e\u8981\u7d20\uff1d\u6587\u5b57\uff09\u306e\u5024\u5224\u5b9a\u304c\u3001(a..z) \u3082\u3057\u304f\u306f (A..Z) \u3082\u3057\u304f\u306f '\u3042..\u3093' \u3042\u308b\u3044\u306f\u3001\u305d\u308c\u4ee5\u5916\uff08_Otherwise_\uff09\u304b\u3002\n\n```{haskell:checker\u95a2\u6570}\nchecker :: String -> String\nchecker \"\" = \"\u7a7a\u6587\u5b57\u304c\u5165\u529b\u3055\u308c\u307e\u3057\u305f\u3002\"\nchecker s@(x:_)\n    | 'a' <= x && x <= 'z'   = s ++ \"is small alphabet-written line.\"\n    | 'A' <= x && x <= 'Z'   = s ++ \"is large alphabet-written line.\"\n    | '\u3042' <= x && x <= '\u3093'  = s ++ \"is Japanese-Hirakana-written line.\"\n    | otherwise              = \"Unknown letter-written line\"\n```\n\n___\n\n##__\u4ee5\u4e0b\u3001\u6d41\u308c\u3067\u898b\u3066\u3044\u304d\u307e\u3059\u3002__\n\n####__\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea \u306b \u79fb\u52d5__\n\n```{bash:Terminal}\nhirofumiyashima$ cd ~/Desktop/\nHirofumiYashima-no-MacBook:Desktop hirofumiyashima$ pwd\n/Users/hirofumiyashima/Desktop\nHirofumiYashima-no-MacBook:Desktop hirofumiyashima$ mkdir haskell_matching_guard_lesson\nHirofumiYashima-no-MacBook:Desktop hirofumiyashima$ cd haskell_matching_guard_lesson\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$\n```\n\n* stack : 1.0.4\n\n```{bash:Terminal}\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ stack --version\nVersion 1.0.4, Git revision cf18703b1392a96a5a4896a560309e501af63260 (3220 commits) x86_64\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$\n```\n\n###__Stack\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210__\n\n####__\uff08 \u5931\u6557 \uff09__\n\n* \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\uff1astack new pattern_guard_lesson\n* \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff1asimple\n\n```{bash:Terminal}\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ stack new pattern_guard_lesson simple\nExpected valid package name, but got: pattern_guard_lesson\n\nUsage: stack new PACKAGE_NAME [--bare] [TEMPLATE_NAME] [-p|--param KEY:VALUE]\n                 [DIRS] [--solver] [--omit-packages] [--force]\n                 [--ignore-subdirs] [--help]\n  Create a new project from a template. Run `stack templates' to see available\n  templates.\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$\n```\n\n####__\uff08 \u6210\u529f \uff09__\n\n* \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\uff1astack new pattern_guard_lesson\n* \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff1asimple\n\n\n```{bash:Terminal}\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ stack new pattern-guard-lesson simple\nDownloading template \"simple\" to create project \"pattern-guard-lesson\" in pattern-guard-lesson/ ...\n\nThe following parameters were needed by the template but not provided: author-email, author-name, category, copyright, github-username\nYou can provide them in /Users/hirofumiyashima/.stack/config.yaml, like this:\ntemplates:\n  params:\n    author-email: value\n    author-name: value\n    category: value\n    copyright: value\n    github-username: value\nOr you can pass each one as parameters like this:\nstack new pattern-guard-lesson simple -p \"author-email:value\" -p \"author-name:value\" -p \"category:value\" -p \"copyright:value\" -p \"github-username:value\"\n\nUsing cabal packages:\n- pattern-guard-lesson/pattern-guard-lesson.cabal\n\nSelecting the best among 9 snapshots...\n\n* Matches lts-7.16\n\nSelected resolver: lts-7.16\nInitialising configuration using resolver: lts-7.16\nTotal number of user packages considered: 1\nWriting configuration to file: pattern-guard-lesson/stack.yaml\nAll done.\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$\n```\n\n####__\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u69cb\u6210 \u3092 \u78ba\u8a8d__\n\n```{bash:Terminal}\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ ls\npattern-guard-lesson\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ tree pattern-guard-lesson/\npattern-guard-lesson/\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 Setup.hs\n\u251c\u2500\u2500 pattern-guard-lesson.cabal\n\u251c\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 Main.hs\n\u2514\u2500\u2500 stack.yaml\n\n1 directory, 5 files\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$\n```\n\n####__GHCi\u8d77\u52d5__\n\n```{bash:Terminal}\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ ghci\nGHCi, version 7.10.3: http://www.haskell.org/ghc/  :? for help\nPrelude>:q\n```\n\n* Prelude\u30e2\u30b8\u30e5\u30fc\u30eb\u4ee5\u5916\u3001\u5916\u90e8\u30e2\u30b8\u30e5\u30fc\u30eb \u3092 load\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30d7\u30ed\u30f3\u30d7\u30c8\u306f \"Prelude>\" \u306b \u306a\u308b\u3002\n\n####__\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb \u3092 \u7528\u610f__\n\n```{bash:Terminal}\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ emacs NameChecker.hs \n```\n\n<img width=\"826\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-22 16.16.58.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/7acb0824-d65b-9d17-5c89-7c79a9950e00.png\">\n\n####__\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4e2d\u8eab \u3092 \u78ba\u8a8d__\n\n```{bash:Terminal}\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ cat NameChecker.hs \nchecker :: String -> String\nchecker \"\" = \"\u7a7a\u6587\u5b57\u304c\u5165\u529b\u3055\u308c\u307e\u3057\u305f\u3002\"\nchecker s@(x:xs)\n    | 'a' <= x && x <= 'z'   = s ++ \"is small alphabet-written line.\"\n    | 'A' <= x && x <= 'Z'   = s ++ \"is large alphabet-written line.\"\n    | '\u3042' <= x && x <= '\u3093'  = s ++ \"is Japanese-Hirakana-written line.\"\n    | otherwise              = \"Unknown letter-written line\"\n    HirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ \nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$\n```\n\n___\n\n####__GHCi \u3092 W\u30aa\u30d7\u30b7\u30e7\u30f3 \u3067\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb \u3092 \u30ed\u30fc\u30c9\u3057\u3066 \u8d77\u52d5__\n\n> ghci -W NameChecker.hs \n\n```{bash:Terminal}\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ ghci -W NameChecker.hs \nGHCi, version 7.10.3: http://www.haskell.org/ghc/  :? for help\n[1 of 1] Compiling Main             ( NameChecker.hs, interpreted )\n\nNameChecker.hs:3:14: Warning: Defined but not used: \u2018xs\u2019\nOk, modules loaded: Main.\n*Main>\n```\n\n* NameChecker.hs \u30d5\u30a1\u30a4\u30eb \u3067 \u5b9a\u7fa9\u3057\u305f Main\u30e2\u30b8\u30e5\u30fc\u30eb \u304c \u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u901a\u308a\u3001GHCi\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb \u306b \u8aad\u307f\u8fbc\u307e\u308c\u305f\u3002\n* Main\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u306f\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3057\u305f\uff12\u6587\u5b57\u4ee5\u964d\u306e\u6587\u5b57\u5217\u3092\u675f\u7e1b\u3057\u305f xs \u5909\u6570 \u304c \u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u7121\u99c4\u3067\u3042\u308b \u3068 Warning \u304c\u51fa\u3066\u3044\u308b\u3002\n\n>[1 of 1] Compiling Main             ( NameChecker.hs, interpreted )\n>\n>NameChecker.hs:3:14: Warning: Defined but not used: \u2018xs\u2019\nOk, modules loaded: Main.\n\n___\n\n###__checker\u95a2\u6570 \u3092\u3001String\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b \u9069\u7528\u3057\u3066\u307f\u308b__\n\n\uff08\uff11\uff09\uff11\u6587\u5b57\u76ee\u304c\u5c0f\u6587\u5b57\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8 \u3067 \u59cb\u307e\u308b String\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b \u9069\u7528\n\n```{haskell:GHCi}\n*Main> checker \"line whose head letter is an alphabet.\"\n\"line whose head letter is an alphabet.is small alphabet-written line.\"\n*Main>\n```\n\n__\u3010 checker\u95a2\u6570 \u306e \u8a55\u4fa1\u7d50\u679c \u3011__\n\n> \"line whose head letter is an alphabet.is small alphabet-written line.\"\u3000\n\n* \u4ed5\u69d8\u901a\u308a\u3001\"\uff08\u6587\u5b57\u5217\uff09is small alphabet-written line.\" \u3068 \u51fa\u529b\u3055\u308c\u305f\u3002\n\n___\n\n\uff08\uff12\uff09\uff11\u6587\u5b57\u76ee\u304c\u5927\u6587\u5b57\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8 \u3067 \u59cb\u307e\u308b String\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b \u9069\u7528\n\n```{haskell:GHCi}\n*Main> checker \"LINE whose head letter is an alphabet.\" \n\"LINE whose head letter is an alphabet.is large alphabet-written line.\"\n*Main>\n```\n\n__\u3010 checker\u95a2\u6570 \u306e \u8a55\u4fa1\u7d50\u679c \u3011__\n\n> \"LINE whose head letter is an alphabet.is large alphabet-written line.\"\n\n* \u4ed5\u69d8\u901a\u308a\u3001\"\uff08\u6587\u5b57\u5217\uff09is large alphabet-written line.\" \u3068 \u51fa\u529b\u3055\u308c\u305f\u3002\n\n___\n\n\uff08\uff13\uff09\uff11\u6587\u5b57\u76ee \u304c \u5e73\u4eee\u540d \u3067 \u59cb\u307e\u308bString\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b \u9069\u7528\u3002\n\n\n```{haskell:GHCi}\n*Main> checker \"\u3072\u3089\u304c\u306a\u304b\u3089\u59cb\u307e\u308b\u6587\u5b57\u5217\"\n\"\\12402\\12425\\12364\\12394\\12363\\12425\\22987\\12414\\12427\\25991\\23383\\21015is Japanese-Hirakana-written line.\"\n*Main>\n```\n\n__\u3010 checker\u95a2\u6570 \u306e \u8a55\u4fa1\u7d50\u679c \u3011__\n\n> \"\\12402\\12425\\12364\\12394\\12363\\12425\\22987\\12414\\12427\\25991\\23383\\21015is Japanese-Hirakana-written line.\"\n\n* \u4ed5\u69d8\u901a\u308a\u3001\"\uff08\u6587\u5b57\u5217\uff09is Japanese-Hirakana-written line.\" \u3068 \u51fa\u529b\u3055\u308c\u305f\u3002\n\n* \u65e5\u672c\u8a9e\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u5217\u306f\u3001\u6587\u5b57\u30b3\u30fc\u30c9\u3067\u51fa\u529b\u3055\u308c\u308b\u3002\n\n___\n\n\n\uff08\uff14\uff09\uff11\u6587\u5b57\u76ee \u304c \u6f22\u5b57 \u3067 \u59cb\u307e\u308b String\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306b \u9069\u7528\u3002\n\n```{haskell:GHCi}\n*Main> checker \"\u4eca\u65e5\u306f\u5bd2\u3044\u3067\u3059\u3002\"\n\"Unknown letter-written line\"\n*Main>\n```\n\n__\u3010 checker\u95a2\u6570 \u306e \u8a55\u4fa1\u7d50\u679c \u3011__\n\n> \"Unknown letter-written line\"\n\n* \u4ed5\u69d8\u901a\u308a\u3001\"Unknown letter-written line\" \u3068 \u51fa\u529b\u3055\u308c\u305f\u3002\n\n___\n\n####__GHCi \u7d42\u4e86__\n\n```{haskell:GHCi}\n*Main> :q\nLeaving GHCi.\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ \n```\n\n___\n\n###__\u30b9\u30af\u30ea\u30d7\u30c8\u30d5\u30a1\u30a4\u30eb \u3092 \u66f8\u304d\u63db\u3048\u308b__\n\n####__NameChecker.hs \u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3001\u4ee5\u4e0b \u306e Warning \u304c \u51fa\u3066\u3044\u305f\u3002__\n\n* Main\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u306f\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3057\u305f\uff12\u6587\u5b57\u4ee5\u964d\u306e\u6587\u5b57\u5217\u3092\u675f\u7e1b\u3057\u305f xs \u5909\u6570 \u304c \u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u7121\u99c4\u3067\u3042\u308b \u3068 Warning \u304c\u51fa\u3066\u3044\u308b\u3002\n\n>[1 of 1] Compiling Main             ( NameChecker.hs, interpreted )\n>\n>NameChecker.hs:3:14: Warning: Defined but not used: \u2018xs\u2019\nOk, modules loaded: Main.\n\n__\u4f7f\u308f\u306a\u3044\uff12\u6587\u5b57\u76ee\u4ee5\u964d\u306e\u6587\u5b57\u5217\u8981\u7d20 \u3092\u3001\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\uff08\"_\"\uff09\u306b\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3055\u305b\u308b\u3002__\n\n```{bash:Terminal}\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ emacs NameChecker.hs\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ cp NameChecker.hs NameCheckerRev.hs\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ emacs NameCheckerRev.hs \n```\n\n<img width=\"829\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-22 16.28.13.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/897cbb9e-1e9d-99f2-c3b7-4eabbd28a086.png\">\n\n```{haskell:GHCi}\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ cat NameCheckerRev.hs\nchecker :: String -> String\nchecker \"\" = \"\u7a7a\u6587\u5b57\u304c\u5165\u529b\u3055\u308c\u307e\u3057\u305f\u3002\"\nchecker s@(x:_)\n    | 'a' <= x && x <= 'z'   = s ++ \"is small alphabet-written line.\"\n    | 'A' <= x && x <= 'Z'   = s ++ \"is large alphabet-written line.\"\n    | '\u3042' <= x && x <= '\u3093'  = s ++ \"is Japanese-Hirakana-written line.\"\n    | otherwise              = \"Unknown letter-written line\"\n    HirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ \n```\n\n####__GHCi W\u30aa\u30d7\u30b7\u30e7\u30f3 \u3067 \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u3001\u4eca\u5ea6 \u306f Warning \u51fa\u529b\u3055\u308c\u305a\u306a\u304f\u306a\u3063\u305f\u3002__\n\n```{bash:Terminal}\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ ghci -W NameCheckerRev.hs \nGHCi, version 7.10.3: http://www.haskell.org/ghc/  :? for help\n[1 of 1] Compiling Main             ( NameCheckerRev.hs, interpreted )\nOk, modules loaded: Main.\n*Main> \n```\n\n<img width=\"938\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-22 16.32.45.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/f5f4f713-7eb9-3330-831a-38006c571c13.png\">\n\n####__\u52d5\u4f5c \u306f \u524d\u3068\u5909\u308f\u3089\u305a__\n\n```{haskell:GHCi}\n*Main> checker \"\u4eca\u65e5\u306f\u5bd2\u3044\u3067\u3059\u3002\"\n\"Unknown letter-written line\"\n*Main> \n*Main> checker \"\u3072\u3089\u304c\u306a\u304b\u3089\u59cb\u307e\u308b\u6587\u5b57\u5217\"\n\"\\12402\\12425\\12364\\12394\\12363\\12425\\22987\\12414\\12427\\25991\\23383\\21015is Japanese-Hirakana-written line.\"\n*Main> \n*Main> checker \"line whose head letter is an alphabet.\" \n\"line whose head letter is an alphabet.is small alphabet-written line.\"\n*Main> \n*Main> checker \"LINE whose head letter is an alphabet.\" \n\"LINE whose head letter is an alphabet.is large alphabet-written line.\"\n*Main> \n*Main> :q\nLeaving GHCi.\nHirofumiYashima-no-MacBook:haskell_matching_guard_lesson hirofumiyashima$ \n```\n\n<img width=\"922\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-22 16.35.21.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/41e81e71-130a-b6f2-8e95-4a1b25b54aa5.png\">\n", "tags": ["Haskell", "\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "FunctionalProgramming", "\u5165\u9580"]}