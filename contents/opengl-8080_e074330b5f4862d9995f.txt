{"context": " More than 1 year has passed since last update.\u74b0\u5883\u69cb\u7bc9\nJPA \u306e\u57fa\u672c\u7684\u306a\u8a71\n\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u8a71\nCriteria API \u306e\u8a71\n\u30b3\u30fc\u30c9\n\nJPQL \u3068\u306f\nJava Persistence Query Language \u306e\u7565\u3002\nJPA \u3067\u4f7f\u7528\u3067\u304d\u308b\u30af\u30a8\u30ea\u8a00\u8a9e\u3002\nSQL \u306b\u4f3c\u3066\u3044\u308b\u3051\u3069\u3001\u30af\u30a8\u30ea\u306e\u5bfe\u8c61\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u306f\u306a\u304f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3002\n\u691c\u7d22\u3067\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u540d\u3067\u306f\u306a\u304f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u540d\u3092\u6307\u5b9a\u3057\u3001\u30ab\u30e9\u30e0\u540d\u3067\u306f\u306a\u304f\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u307e\u305f\u3001\u691c\u7d22\u7d50\u679c\u306f\u30c6\u30fc\u30d6\u30eb\u306e\u30ec\u30b3\u30fc\u30c9\u3067\u306f\u306a\u304f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3084\u305d\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u53d6\u5f97\u3055\u308c\u308b\u3002\n\u6c7a\u3057\u3066\u3001\u300c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u88fd\u54c1\u9593\u306e\u5dee\u7570\u3092\u5438\u53ce\u3057\u305f\u6a19\u6e96\u7684\u306a SQL\u300d\u3067\u306f\u306a\u3044\u3002\n\u300cJava \u3068 JavaScript \u3068\u306f\u4f3c\u3066\u308b\u3088\u3046\u3067\u5168\u7136\u5225\u306e\u8a00\u8a9e\u300d\u307f\u305f\u3044\u306a\u611f\u3058\u3002\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u691c\u7d22\u3084 CRUD \u304c\u884c\u3048\u308b\u3002\n\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u308b\u3054\u3068\u306b\u3001\u3061\u3087\u3063\u3068\u305a\u3064\u3067\u304d\u308b\u3053\u3068\u304c\u5897\u3048\u3066\u3044\u3063\u3066\u3044\u308b\u3002\n\n\u57fa\u672c\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nChen.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.NamedQuery;\n\n@Entity\n@NamedQuery(name = \"Chen.findAll\", query = \"SELECT c FROM Chen c\")\npublic class Chen {\n    @Id\n    private Long id;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"Chen{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport java.util.List;\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport javax.persistence.TypedQuery;\nimport sample.javaee.jpa.entity.jpql.Chen;\n\n@Stateless\npublic class JpqlEjb {\n\n    @PersistenceContext(unitName = \"SampleUnit\")\n    private EntityManager em;\n\n    public void chen() {\n        TypedQuery<Chen> query = this.em.createNamedQuery(\"Chen.findAll\", Chen.class);\n        List<Chen> list = query.getResultList();\n\n        System.out.println(list);\n    }\n}\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [Chen{id=1, value=hoge}, Chen{id=2, value=fuga}, Chen{id=3, value=piyo}]\n\n\n\n\u8aac\u660e\n\n\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3059\u308b\n\nChen.java\n@Entity\n@NamedQuery(name = \"Chen.findAll\", query = \"SELECT c FROM Chen c\")\npublic class Chen {\n\n\n\n\n@NamedQuery \u3067\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3057\u3066\u3001\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n\n\nname \u5c5e\u6027\u3067\u30af\u30a8\u30ea\u306e\u540d\u524d\u3092\u8a2d\u5b9a\u3057\u3001 query \u5c5e\u6027\u306b\u30af\u30a8\u30ea\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\u3053\u308c\u3092 \u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea \u3068\u547c\u3076\u3002\n\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u306f\u9759\u7684\u306a\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3059\u308b\u3002\n\n\n\n\n\u30af\u30a8\u30ea\u306e\u69cb\u6587\n\nChen\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5168\u3066\u53d6\u5f97\u3059\u308b\u30af\u30a8\u30ea\nSELECT c FROM Chen c\n\n\n\n\u69cb\u6587\nSELECT <\u53d6\u5f97\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3084\u30d7\u30ed\u30d1\u30c6\u30a3> FROM <\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u540d> [AS] <\u5225\u540d>\n\n\n\nJPQL \u306e\u69cb\u6587\u306f\u3001\u57fa\u672c\u7684\u306b\u306f SQL \u3068\u540c\u3058\u5f62\u5f0f\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u9055\u3046\u306e\u306f\u3001 Chen \u304c DB \u306e\u30c6\u30fc\u30d6\u30eb\u3067\u306f\u306a\u304f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u6307\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u70b9\u3002\nSQL \u3067\u3044\u3046\u3068\u3053\u308d\u306e * \uff08\u30a2\u30b9\u30bf\u30ea\u30b9\u30af\uff09\u306f\u5b58\u5728\u3057\u306a\u3044\u3002\n\u5fc5\u305a\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u5225\u540d\u3092\u5b9a\u7fa9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n\n\n\u5225\u540d\u3068\u3044\u3046\u3088\u308a\u3001\u901a\u5e38\u306e Java \u306e\u5b9f\u88c5\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3001\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u305f\u307b\u3046\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u3064\u307e\u308a\u3001 Chen c; \u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3001\u578b\u3068\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3066\u3044\u308b\u30a4\u30e1\u30fc\u30b8\u3002\n\n\nJPQL \u3067\u306f\u3001\u90e8\u5206\u3054\u3068\u306b\u5927\u6587\u5b57\u5c0f\u6587\u5b57\u306e\u533a\u5225\u304c\u3055\u308c\u305f\u308a\u3055\u308c\u306a\u304b\u3063\u305f\u308a\u3059\u308b\u3002\n\n\n\u533a\u5225\u3055\u308c\u306a\u3044\u3002\n\n\n\u4e88\u7d04\u8a9e\u3002\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u5225\u540d\u3002\n\n\n\u533a\u5225\u3055\u308c\u308b\u3002\n\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u540d\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3002\n\n\n\n\n\n\n\u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3059\u308b\n\nJpqlEjb.java\n    TypedQuery<Chen> query = this.em.createNamedQuery(\"Chen.findAll\", Chen.class);\n    List<Chen> list = query.getResultList();\n\n\n\n\u30af\u30a8\u30ea\u3092\u4f7f\u7528\u3059\u308b\u304a\u304a\u307e\u304b\u306a\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n\n\nEntityManager \u3092\u4f7f\u3063\u3066 Query \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\u3002\n\nQuery \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3001\u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3057\u3001\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n\n\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001 EntityManager \u306e createNamedQuery() \u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\n\u5f15\u6570\u306b @NamedQuery \u306e name \u3067\u8a2d\u5b9a\u3057\u305f\u30af\u30a8\u30ea\u306e\u540d\u524d\u3092\u6e21\u3059\u3002\n\u623b\u308a\u5024\u306e\u578b\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u5f15\u6570\u306b Class \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3002\u3059\u308b\u3068\u3001 Query \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7d99\u627f\u3057\u305f\u578b\u5b89\u5168\u306a TypedQuery \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n\n\u30af\u30a8\u30ea\u7d50\u679c\u304c\u8907\u6570\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u5834\u5408\u306f\u3001 Query#getResultList() \u3092\u4f7f\u7528\u3057\u3066 List \u3067\u7d50\u679c\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n\n\u30af\u30a8\u30ea\u3092\u5916\u90e8\u30d5\u30a1\u30a4\u30eb\uff08XML\uff09\u3067\u5b9a\u7fa9\u3059\u308b\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nFujiwaranoMokou.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"fujiwarano_mokou\")\npublic class FujiwaranoMokou {\n    @Id\n    private Long id;\n\n    @Override\n    public String toString() {\n        return \"FujiwaranoMokou{\" + \"id=\" + id + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\n\u57fa\u672c\n\norm.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<entity-mappings version=\"2.1\"\n        xmlns=\"http://xmlns.jcp.org/xml/ns/persistence/orm\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence/orm\n                            http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd\">\n  <named-query name=\"FujiwaranoMokou.findAll\">\n    <query><![CDATA[\n     SELECT f\n       FROM FujiwaranoMokou f\n    ]]></query>\n  </named-query>\n</entity-mappings>\n\n\n\norm.xml\u306e\u914d\u7f6e\u5834\u6240\n|-src/\n:  |-conf/\n:  |  |-persistence.xml\n:  |  `-orm.xml\n:  `-java/\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    TypedQuery<FujiwaranoMokou> query = this.em.createNamedQuery(\"FujiwaranoMokou.findAll\", FujiwaranoMokou.class);\n\n    query.getResultList()\n         .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   FujiwaranoMokou{id=1}\n\u60c5\u5831:   FujiwaranoMokou{id=2}\n\u60c5\u5831:   FujiwaranoMokou{id=3}\n\n\n\n\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308c\u3070\u3001\u305d\u3053\u306b\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u30de\u30c3\u30d4\u30f3\u30b0\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u3001 orm.xml \u3068\u3044\u3046\u540d\u524d\u3067\u4f5c\u6210\u3059\u308b\u3002\n\norm.xml \u306f\u3001 WEB-INF/classes/META-INF/ \u306e\u4e0b\u306b\u914d\u5099\u3055\u308c\u308b\u3088\u3046\u306b\u914d\u7f6e\u3059\u308b\u3002\n\nsrc/conf/ \u30d5\u30a9\u30eb\u30c0\u306f\u3001 GlassFish \u306e\u8a2d\u5b9a\u3067 WEB-INF/classes/META-INF/ \u306e\u4e0b\u306b\u914d\u5099\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n\n\n\n\u4efb\u610f\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u5b9a\u7fa9\u3059\u308b\n\nmy_orm.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<entity-mappings version=\"2.1\"\n        xmlns=\"http://xmlns.jcp.org/xml/ns/persistence/orm\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence/orm\n                            http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd\">\n  <named-query name=\"FujiwaranoMokou.findAllOrderByIdDesc\">\n    <query><![CDATA[\n     SELECT f\n       FROM FujiwaranoMokou f\n   ORDER BY f.id DESC\n    ]]></query>\n  </named-query>\n</entity-mappings>\n\n\n\nmy_orm.xml\u306e\u914d\u7f6e\u5834\u6240\n|-src/\n:  |-conf/\n:  |  |-persistence.xml\n:  |  `-orm.xml\n:  `-java/\n:     |-my_orm.xml\n:     :\n\n\n\npersistence.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persistence version=\"2.1\" xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence                                  http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n  <persistence-unit name=\"SampleUnit\">\n    <jta-data-source>jdbc/Local_MySQL_test</jta-data-source>\n+   <mapping-file>my_orm.xml</mapping-file>\n    <properties>\n\n      <property name=\"eclipselink.logging.level\" value=\"FINE\" />\n      <property name=\"eclipselink.logging.parameters\" value=\"true\"/>\n    </properties>\n  </persistence-unit>\n</persistence>\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"FujiwaranoMokou.findAllOrderByIdDesc\", FujiwaranoMokou.class);\n\n    query.getResultList()\n         .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   FujiwaranoMokou{id=3}\n\u60c5\u5831:   FujiwaranoMokou{id=2}\n\u60c5\u5831:   FujiwaranoMokou{id=1}\n\n\n\n\u4efb\u610f\u306e\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3057\u305f\u3044\u5834\u5408\u306f\u3001 persistence.xml \u306b\u30de\u30c3\u30d4\u30f3\u30b0\u30d5\u30a1\u30a4\u30eb\u306e\u60c5\u5831\u3092\u8a18\u8ff0\u3059\u308b\u3002\n\n\n\n<mapping-file> \u30bf\u30b0\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n<mapping-file> \u30bf\u30b0\u306f\u8907\u6570\u8a2d\u5b9a\u53ef\u80fd\u3002\n\n\n\u30de\u30c3\u30d4\u30f3\u30b0\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u30af\u30e9\u30b9\u30d1\u30b9\u304c\u901a\u3063\u305f\u5834\u6240\u306b\u914d\u7f6e\u3059\u308b\u3002\n\n\n\u52d5\u7684\u306b\u30af\u30a8\u30ea\u3092\u751f\u6210\u3059\u308b\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nAkiShizuha.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"aki_shizuha\")\npublic class AkiShizuha {\n    @Id\n    private Long id;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"AkiShizuha{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nJpqlEjb.java\n    TypedQuery<AkiShizuha> query = this.em.createQuery(\"SELECT a FROM AkiShizuha a\", AkiShizuha.class);\n\n    query.getResultList()\n         .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   AkiShizuha{id=1, value=hoge}\n\u60c5\u5831:   AkiShizuha{id=2, value=fuga}\n\u60c5\u5831:   AkiShizuha{id=3, value=piyo}\n\n\n\n\nEntityManager#createQuery(String, Class) \u30e1\u30bd\u30c3\u30c9\u3067\u3001\u30af\u30a8\u30ea\u3092\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u3067\u3082\u3001\u52d5\u7684\u306b\u30af\u30a8\u30ea\u3092\u4f5c\u308a\u305f\u3044\u306a\u3089\u30af\u30e9\u30a4\u30c6\u30ea\u30a2 API \u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\uff08\u6587\u5b57\u5217\u3092\u30b4\u30ea\u30b4\u30ea\u9023\u7d50\u3055\u305b\u308b\u306e\u3067\u3001\u8aad\u307f\u306b\u304f\u304f\u306a\u308a\u30df\u30b9\u3082\u3057\u3084\u3059\u304f\u306a\u308b\u306e\u3067\uff09\u3002\n\n\n\u691c\u7d22\u7d50\u679c\u3092\uff11\u4ef6\u3060\u3051\u53d6\u5f97\u3059\u308b\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nLilyWhite.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"lily_white\")\npublic class LilyWhite {\n    @Id\n    private Long id;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"LilyWhite{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nLilyWhite.findSingle\nSELECT l\n  FROM LilyWhite l\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    TypedQuery<LilyWhite> query = this.em.createNamedQuery(\"LilyWhite.findSingle\", LilyWhite.class);\n    LilyWhite lilyWhite = query.getSingleResult();\n\n    System.out.println(lilyWhite);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   LilyWhite{id=1, value=hoge}\n\n\n\n\u691c\u7d22\u7d50\u679c\u304c\uff11\u4ef6\u3060\u3051\u306e\u5834\u5408\u306f\u3001 Query#getSingleResult() \u3092\u4f7f\u7528\u3059\u308b\u3002\n\u3082\u3057\u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u8907\u6570\u4ef6\u53d6\u5f97\u3067\u304d\u305f\u5834\u5408\u306f NonUniqueResultException \u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\n\u9006\u306b\uff11\u4ef6\u3082\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001 NoResultException \u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\n\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3060\u3051\u3092\u53d6\u5f97\u3059\u308b\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\uff08\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\uff09\n\nAliceMargatroid.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"alice_margatroid\")\npublic class AliceMargatroid {\n    @Id\n    private Long id;\n    private String name;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"AliceMargatroid{\" + \"id=\" + id + \", name=\" + name + \", value=\" + value + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nAliceMargatroid.getName\nSELECT a.name\n  FROM AliceMargatroid a\n\n\n\nAliceMargatroid.getNameAndValue\nSELECT a.name\n      ,a.value\n  FROM AliceMargatroid a\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    TypedQuery<String> getNameQuery = this.em.createNamedQuery(\"AliceMargatroid.getName\", String.class);\n    List<String> names = getNameQuery.getResultList();\n\n    System.out.println(names);\n\n\n    Query getNameAndValueQuery = this.em.createNamedQuery(\"AliceMargatroid.getNameAndValue\");\n    List<Object[]> list = getNameAndValueQuery.getResultList();\n\n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [hoge, fuga, piyo]\n\u60c5\u5831:   [hoge, HOGE]\n\u60c5\u5831:   [fuga, FUGA]\n\u60c5\u5831:   [piyo, PIYO]\n\n\n\nJPQL \u4e0a\u3067\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u62bd\u51fa\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30c9\u30c3\u30c8\u533a\u5207\u308a\uff08.\uff09\u3067\u8a18\u8ff0\u3059\u308b\uff08c.name, c.value\uff09\u3002\n\u8907\u6570\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u9078\u629e\u3057\u305f\u5834\u5408\u3001 Query \u304c\u8fd4\u3059\u7d50\u679c\u306f Object \u306e\u914d\u5217\u306b\u306a\u308b\u3002\n\u8907\u6570\u306e\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001 @NamedQueries \u3092\u4f7f\u3046\u3002\n\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u95a2\u9023\u3092\u305f\u3069\u308b\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nLunasaPrismriver.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport java.util.List;\nimport javax.persistence.Entity;\nimport javax.persistence.FetchType;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.OneToMany;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"lunasa_prismriver\")\npublic class LunasaPrismriver {\n    @Id\n    private Long id;\n\n    @JoinColumn(name = \"merlin_prismriver_id\")\n    private MerlinPrismriver merlinPrismriver;\n\n    @OneToMany(fetch = FetchType.EAGER)\n    @JoinColumn(name = \"lunasa_prismriver_id\")\n    private List<LyricaPrismriver> lyricaPrismriverList;\n}\n\n\n\nMerlinPrismriver.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"merlin_prismriver\")\npublic class MerlinPrismriver {\n    @Id\n    private Long id;\n\n    @Override\n    public String toString() {\n        return \"MerlinPrismriver{\" + \"id=\" + id + '}';\n    }\n}\n\n\n\nLyricaPrismriver.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"lyrica_prismriver\")\npublic class LyricaPrismriver {\n    @Id\n    private Long id;\n\n    @Override\n    public String toString() {\n        return \"LyricaPrismriver{\" + \"id=\" + id + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\n\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nLunasaPrismriver.getMerlin\nSELECT l.merlinPrismriver\n  FROM LunasaPrismriver l\n\n\n\nLunasaPrismriver.getLyrica\nSELECT l.lyricaPrismriverList\n  FROM LunasaPrismriver l\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    TypedQuery<MerlinPrismriver> q1 = this.em.createNamedQuery(\"LunasaPrismriver.getMerlin\", MerlinPrismriver.class);\n    List<MerlinPrismriver> l1 = q1.getResultList();\n    System.out.println(l1);\n\n    TypedQuery<LyricaPrismriver> q2 = this.em.createNamedQuery(\"LunasaPrismriver.getLyrica\", LyricaPrismriver.class);\n    List<LyricaPrismriver> l2 = q2.getResultList();\n    System.out.println(l2);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [MerlinPrismriver{id=1}, MerlinPrismriver{id=2}, MerlinPrismriver{id=3}]\n\u60c5\u5831:   [LyricaPrismriver{id=1}, LyricaPrismriver{id=2}, LyricaPrismriver{id=3}, LyricaPrismriver{id=4}, LyricaPrismriver{id=5}, LyricaPrismriver{id=6}]\n\n\n\n\nl.merlinPrismriver \u306e\u3088\u3046\u306b\u3001\u30c9\u30c3\u30c8\u533a\u5207\u308a\u3067\u95a2\u9023\u3059\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u95a2\u9023\u3092\u8fbf\u308c\u308b\u306e\u306f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u307e\u305f\u306f\u7d44\u307f\u8fbc\u307f\u53ef\u80fd\u30af\u30e9\u30b9\u306b\u9650\u3089\u308c\u308b\u3002\n\u7d50\u679c\u304c\u8907\u6570\u4ef6\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u5358\u4e00\u306e List \u306b\u307e\u3068\u3081\u3089\u308c\u3066\u7d50\u679c\u304c\u8fd4\u3055\u308c\u308b\uff08\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u5358\u4f4d\u306b\u307e\u3068\u3081\u3089\u308c\u305f\u308a\u306f\u3057\u306a\u3044\uff09\u3002\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30d0\u30a4\u30f3\u30c9\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nYakumoRan.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport java.util.Date;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\nimport javax.persistence.Temporal;\nimport javax.persistence.TemporalType;\n\n@Entity\n@Table(name = \"yakumo_ran\")\npublic class YakumoRan {\n    @Id\n    private Long id;\n    @Temporal(TemporalType.DATE)\n    private Date date;\n\n    @Override\n    public String toString() {\n        return \"YakumoRan{\" + \"id=\" + id + \", date=\" + date + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nYakumoRan.findById\nSELECT y\n  FROM YakumoRan y\n WHERE y.id=:id\n\n\n\nYakumoRan.findByDate\nSELECT y\n  FROM YakumoRan y\n WHERE y.date=:date\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    public void yakumoRan() {\n        TypedQuery<YakumoRan> query;\n\n        query = this.em.createNamedQuery(\"YakumoRan.findById\", YakumoRan.class);\n        query.setParameter(\"id\", 2L);\n        System.out.println(query.getSingleResult());\n\n        query = this.em.createNamedQuery(\"YakumoRan.findByDate\", YakumoRan.class);\n        query.setParameter(\"date\", this.createDate(\"2014-01-01\"), TemporalType.DATE);\n        System.out.println(query.getSingleResult());\n    }\n\n    private Date createDate(String date) {\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n        try {\n            return format.parse(date);\n        } catch (ParseException ex) {\n            throw new RuntimeException(ex);\n        }\n    }\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   YakumoRan{id=2, date=Thu Jan 01 00:00:00 JST 2015}\n\u60c5\u5831:   YakumoRan{id=1, date=Wed Jan 01 00:00:00 JST 2014}\n\n\n\n\n:<\u540d\u524d> \u3068\u3044\u3046\u5f62\u5f0f\u3067\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u306b\u306f\u3001 Query \u306e setParameter() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3002\n\u65e5\u4ed8\u578b\u306e\u5834\u5408\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306b TemporalType \u3092\u6e21\u3059\u3002\n\n\nWHERE \u53e5\u3067\u6761\u4ef6\u3092\u7d5e\u308b\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nKonpakuYoumu.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport java.util.List;\nimport javax.persistence.CollectionTable;\nimport javax.persistence.Column;\nimport javax.persistence.ElementCollection;\nimport javax.persistence.Entity;\nimport javax.persistence.FetchType;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"konpaku_youmu\")\npublic class KonpakuYoumu {\n    @Id\n    private Long id;\n    private int amount;\n    private String value;\n    @ElementCollection(fetch = FetchType.EAGER)\n    @CollectionTable(name = \"konpaku_youmu_list\", joinColumns = @JoinColumn(name = \"konpaku_youmu_id\"))\n    @Column(name = \"value\")\n    private List<String> list;\n\n    @Override\n    public String toString() {\n        return \"KonpakuYoumu{\" + \"id=\" + id + \", amount=\" + amount + \", value=\" + value + \", list=\" + list + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n\n\n\n\u6bd4\u8f03\u6f14\u7b97\u5b50\n\nKonpakuYoumu.equal\nSELECT k\n  FROM KonpakuYoumu k\n WHERE k.amount = 10\n\n\n\nJpqlEjb.java\n    TypedQuery<KonpakuYoumu> query;\n\n    query = this.em.createNamedQuery(\"KonpakuYoumu.equal\", KonpakuYoumu.class);\n    System.out.println(\"Equal (=) : \" + query.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   Equal (=) : KonpakuYoumu{id=1, amount=10, value=tokyo, list=[hoge, fuga, piyo]}\n\n\n\nSQL \u3068\u540c\u3058\u8981\u9818\u3067\u6bd4\u8f03\u6f14\u7b97\u5b50\uff08=, <>, <, <=, >, >=\uff09\u304c\u4f7f\u7528\u3067\u304d\u308b\u3002\n\n\n\u8ad6\u7406\u6f14\u7b97\u5b50\n\nKonpakuYoumu.or\nSELECT k\n  FROM KonpakuYoumu k\n WHERE k.amount = 10\n    OR k.value = 'nagoya'\n\n\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"KonpakuYoumu.or\", KonpakuYoumu.class);\n    System.out.println(\"OR : \" + query.getResultList());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   OR : [KonpakuYoumu{id=1, amount=10, value=tokyo, list=[hoge, fuga, piyo]}, KonpakuYoumu{id=3, amount=30, value=nagoya, list=[]}]\n\n\n\nSQL \u3068\u540c\u3058\u8981\u9818\u3067\u8ad6\u7406\u6f14\u7b97\u5b50\uff08OR, AND\uff09\u304c\u4f7f\u7528\u3067\u304d\u308b\u3002\n\n\nBETWEEN\n\nKonpakuYoumu.between\nSELECT k\n  FROM KonpakuYoumu k\n WHERE k.amount BETWEEN 20 AND 30\n\n\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"KonpakuYoumu.between\", KonpakuYoumu.class);\n    System.out.println(\"BETWEEN : \" + query.getResultList());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   BETWEEN : [KonpakuYoumu{id=2, amount=20, value=osaka, list=[fizz, buzz]}, KonpakuYoumu{id=3, amount=30, value=nagoya, list=[]}]\n\n\n\nSQL \u3068\u540c\u3058\u8981\u9818\u3067(ry \u3002\n\u5426\u5b9a\u306f NOT BETWEEN\u3002\n\n\nLIKE\n\nKonpakuYoumu.like\nSELECT k\n  FROM KonpakuYoumu k\n WHERE k.value LIKE '%a'\n\n\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"KonpakuYoumu.like\", KonpakuYoumu.class);\n    System.out.println(\"LIKE : \" + query.getResultList());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   LIKE : [KonpakuYoumu{id=2, amount=20, value=osaka, list=[fizz, buzz]}, KonpakuYoumu{id=3, amount=30, value=nagoya, list=[]}]\n\n\n\nSQL \u3068(ry \u3002\n\u4efb\u610f\u306e\u6587\u5b57\u5217\u306f %\u3002\u4efb\u610f\u306e\u6587\u5b57\u306f _\u3002\n\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u5834\u5408\u306f\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3092\u4f7f\u3046 \\_, \\%\u3002\n\u5426\u5b9a\u306f NOT LIKE \u3002\n\n\nIS NULL\n\nKonpakuYoumu.isNull\nSELECT k\n  FROM KonpakuYoumu k\n WHERE k.value IS NULL\n\n\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"KonpakuYoumu.isNull\", KonpakuYoumu.class);\n    System.out.println(\"IS NULL : \" + query.getResultList());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   IS NULL : [KonpakuYoumu{id=4, amount=40, value=null, list=[]}]\n\n\n\n(ry \u3002\n\u5426\u5b9a\u306f IS NOT NULL \u3002\n\n\nIS EMPTY\n\nKonpakuYoumu.isEmpty\nSELECT k\n  FROM KonpakuYoumu k\n WHERE k.list IS EMPTY\n\n\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"KonpakuYoumu.isEmpty\", KonpakuYoumu.class);\n    System.out.println(\"IS EMPTY : \" + query.getResultList());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   IS EMPTY : [KonpakuYoumu{id=3, amount=30, value=nagoya, list=[]}, KonpakuYoumu{id=4, amount=40, value=null, list=[]}]\n\n\n\n\nIS EMPTY \u306f\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5bfe\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u6f14\u7b97\u5b50\u3067\u3001\u305d\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u7a7a\u3067\u3042\u308b\u3053\u3068\u3092\u6761\u4ef6\u306b\u3067\u304d\u308b\u3002\n\u5426\u5b9a\u306f IS NOT EMPTY \u3002\n\n\nMEMBER OF\n\nKonpakuYoumu.memberOf\nSELECT k\n  FROM KonpakuYoumu k\n WHERE 'fizz' MEMBER OF k.list\n\n\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"KonpakuYoumu.memberOf\", KonpakuYoumu.class);\n    System.out.println(\"MEMBER OF : \" + query.getResultList());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   MEMBER OF : [KonpakuYoumu{id=2, amount=20, value=osaka, list=[fizz, buzz]}]\n\n\n\n\nMEMBER OF \u306f\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u6307\u5b9a\u3057\u305f\u8981\u7d20\u3092\u6301\u3064\u304b\u3069\u3046\u304b\u3092\u6761\u4ef6\u306b\u3067\u304d\u308b\u3002\n\u5de6\u8fba\u306b\u6761\u4ef6\u3068\u306a\u308b\u5024\u3092\u3001\u53f3\u8fba\u306b\u5bfe\u8c61\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u5426\u5b9a\u306f NOT MEMBER OF \u3002\n\n\nEXISTS\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nKawashiroNitori.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"kawashiro_nitori\")\npublic class KawashiroNitori {\n    @Id\n    private Long id;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"KawashiroNitori{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nKawashiroNitori.exists\nSELECT k1\n  FROM KawashiroNitori k1\n WHERE EXISTS (\n       SELECT 1\n         FROM KawashiroNitori k2\n        WHERE k2.value = k1.value\n          AND k2.id <> k1.id\n  )\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    TypedQuery<KawashiroNitori> query = this.em.createNamedQuery(\"KawashiroNitori.exists\", KawashiroNitori.class);\n\n    query.getResultList()\n         .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   KawashiroNitori{id=1, value=hoge}\n\u60c5\u5831:   KawashiroNitori{id=3, value=hoge}\n\u60c5\u5831:   KawashiroNitori{id=4, value=piyo}\n\u60c5\u5831:   KawashiroNitori{id=5, value=piyo}\n\n\n\nSQL \u3068\u540c\u3058\u611f\u3058\u3067 EXISTS \u304c\u4f7f\u3048\u308b\u3002\n\u5426\u5b9a\u306f NOT EXISTS \u3002\n\n\nIN, ANY(SOME), ALL\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nInubashiriMomiji.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"inubashiri_momiji\")\npublic class InubashiriMomiji {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"InubashiriMomiji{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n\n\n\nKochiyaSanae.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"kochiya_sanae\")\npublic class KochiyaSanae {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"KochiyaSanae{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\n\nIN\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nInubashiriMomiji.in\nSELECT i\n  FROM InubashiriMomiji i\n WHERE i.number IN (111, 333)\n\n\n\nInubashiriMomiji.inSubquery\nSELECT i\n  FROM InubashiriMomiji i\n WHERE i.number IN (\n       SELECT k.number\n         FROM KochiyaSanae k\n )\n\n\n\nInubashiriMomiji.inParameter\nSELECT i\n  FROM InubashiriMomiji i\n WHERE i.number IN :inParam\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    TypedQuery<InubashiriMomiji> query;\n\n    query = this.em.createNamedQuery(\"InubashiriMomiji.in\", InubashiriMomiji.class);\n    System.out.println(\"<<InubashiriMomiji.in>>\");\n    query.getResultList()\n         .forEach(System.out::println);\n\n    query = this.em.createNamedQuery(\"InubashiriMomiji.inSubquery\", InubashiriMomiji.class);\n    System.out.println(\"<<InubashiriMomiji.inSubquery>>\");\n    query.getResultList()\n         .forEach(System.out::println);\n\n    query = this.em.createNamedQuery(\"InubashiriMomiji.inParameter\", InubashiriMomiji.class);\n    System.out.println(\"<<InubashiriMomiji.inParameter>>\");\n    query.setParameter(\"inParam\", Arrays.asList(222, 333));\n    query.getResultList()\n         .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   <<InubashiriMomiji.in>>\n\u60c5\u5831:   InubashiriMomiji{id=1, number=111}\n\u60c5\u5831:   InubashiriMomiji{id=3, number=333}\n\n\u60c5\u5831:   <<InubashiriMomiji.inSubquery>>\n\u60c5\u5831:   InubashiriMomiji{id=1, number=111}\n\u60c5\u5831:   InubashiriMomiji{id=2, number=222}\n\n\u60c5\u5831:   <<InubashiriMomiji.inParameter>>\n\u60c5\u5831:   InubashiriMomiji{id=2, number=222}\n\u60c5\u5831:   InubashiriMomiji{id=3, number=333}\n\n\n\n\n\nSQL \u3068\u540c\u3058\u3088\u3046\u306b IN \u53e5\u304c\u4f7f\u3048\u308b\u3002\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066 List \u3092\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n\nANY\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nInubashiriMomiji.any\nSELECT i\n  FROM InubashiriMomiji i\n WHERE i.number < ANY (\n       SELECT k.number\n         FROM KochiyaSanae k\n )\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"InubashiriMomiji.any\", InubashiriMomiji.class);\n    query.getResultList()\n         .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   InubashiriMomiji{id=1, number=111}\n\u60c5\u5831:   InubashiriMomiji{id=2, number=222}\n\n\n\n\n\nSQL \u3068\u540c\u3058\u611f\u3058\u3067 ANY \u304c\u4f7f\u3048\u308b\u3002\n\u305f\u3060\u3057\u3001\u6761\u4ef6\u306b\u6307\u5b9a\u3067\u304d\u308b\u306e\u306f\u30b5\u30d6\u30af\u30a8\u30ea\u306e\u307f\u3002\nANY \u306e\u5909\u308f\u308a\u306b SOME \u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u308b\uff08\u52d5\u304d\u306f\u540c\u3058\uff09\u3002\n\n\nALL\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nInubashiriMomiji.all\nSELECT i\n  FROM InubashiriMomiji i\n WHERE i.number > ALL (\n       SELECT k.number\n         FROM KochiyaSanae k\n )\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"InubashiriMomiji.all\", InubashiriMomiji.class);\n    query.getResultList()\n         .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   InubashiriMomiji{id=3, number=333}\n\u60c5\u5831:   InubashiriMomiji{id=4, number=444}\n\n\n\n\n\nANY \u540c\u69d8\u306b ALL \u3082\u4f7f\u3048\u308b\u3002\n\u3053\u3061\u3089\u3082\u3001\u6761\u4ef6\u306b\u6307\u5b9a\u3067\u304d\u308b\u306e\u306f\u30b5\u30d6\u30af\u30a8\u30ea\u306e\u307f\u3002\n\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u500b\u3005\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53c2\u7167\u3059\u308b\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u30c6\u30fc\u30d6\u30eb\u304c\u5b58\u5728\u3057\u305f\u3068\u3059\u308b\u3002\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nWriggleNightbug.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport java.util.List;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"wriggle_nightbug\")\npublic class WriggleNightbug {\n    @Id\n    private Long id;\n    @JoinColumn(name = \"wriggle_nightbug_id\")\n    private List<MystiaLorelei> mystiaLoreleiList;\n\n    @Override\n    public String toString() {\n        return \"WriggleNightbug{\" + \"id=\" + id + \", mystiaLoreleiList=\" + mystiaLoreleiList + '}';\n    }\n}\n\n\n\nMystiaLorelei.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"mystia_lorelei\")\npublic class MystiaLorelei {\n    @Id\n    private Long id;\n\n    @Override\n    public String toString() {\n        return \"MystiaLorelei{\" + \"id=\" + id + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\nMystiaLorelei \u306f\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066 WriggleNightbug \u304b\u3089\u53c2\u7167\u3055\u308c\u3066\u3044\u308b\uff08mystiaLoreleiList\uff09\u3002\n\u3053\u3053\u3067\u3001 WriggleNightbug \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u6301\u3064 mystiaLoreleiList \u306e\u5404 ID \u3060\u3051\u3092\u62bd\u51fa\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a JPQL \u3092\u66f8\u3044\u305f\u3068\u3059\u308b\u3002\nSELECT w.mystiaLoreleiList.id\n  FROM WriggleNightbug w\n\n\u3053\u306e JPQL \u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u3001\u30b5\u30fc\u30d0\u30fc\u8d77\u52d5\u6642\u306b\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\n\n\u4f8b\u5916\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\nInternal Exception: Exception [EclipseLink-0] (Eclipse Persistence Services - 2.5.2.v20140319-9ad6abd): org.eclipse.persistence.exceptions.JPQLException\nException Description: Problem compiling [SELECT w.mystiaLoreleiList.id FROM WriggleNightbug w]. \n[7, 29] The state field path 'w.mystiaLoreleiList.id' cannot be resolved to a valid type.\n\n\n\u554f\u984c\u304c\u3042\u308b\u306e\u306f w.mystiaLoreleiList.id \u306e\u90e8\u5206\u3002\n\u4e00\u898b\u3046\u307e\u304f\u3044\u304d\u305d\u3046\u306b\u898b\u3048\u308b\u304c\u3001\u3088\u304f\u8003\u3048\u308b\u3068 w.mystiaLoreleiList \u306e\u578b\u306f List \u306a\u306e\u3067\u3001 id \u306a\u3093\u3066\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u53c2\u7167\u3067\u304d\u306a\u3044\u3002\n\u3053\u306e\u305f\u3081\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u3002\n\u6b63\u3057\u304f\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b JPQL \u3092\u8a18\u8ff0\u3059\u308b\u3002\nSELECT mystiaLorelei.id\n  FROM WriggleNightbug w\n      ,IN(w.mystiaLoreleiList) mystiaLorelei\n\nIN(<\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3>) <\u5225\u540d> \u3068\u3044\u3046\u5f62\u3067\u3001 FROM \u53e5\u306e\u4e2d\u306b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u500b\u3005\u306e\u8981\u7d20\u3092\u53c2\u7167\u3059\u308b\u305f\u3081\u306e\u5225\u540d\u3092\u5ba3\u8a00\u3059\u308b\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u5ba3\u8a00\u3057\u305f\u5225\u540d\u3067\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5404\u8981\u7d20\u306b\u5bfe\u3057\u3066\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u53c2\u7167\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nWriggleNightbug.inQuery\nSELECT mystiaLorelei.id\n  FROM WriggleNightbug w\n      ,IN(w.mystiaLoreleiList) mystiaLorelei\n WHERE w.id = 1\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    Query query = this.em.createNamedQuery(\"WriggleNightbug.inQuery\");\n    System.out.println(query.getResultList());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [1, 2, 3]\n\n\n\nINNER JOIN \u3067\u7f6e\u304d\u63db\u3048\u308b\nIN \u3092\u4f7f\u3063\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u8981\u7d20\u306e\u53c2\u7167\u306f\u3001 INNER JOIN \u3092\u4f7f\u3063\u305f\u8a18\u8ff0\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nWriggleNightbug.innerJoin\n    SELECT mystiaLorelei.id\n      FROM WriggleNightbug w\nINNER JOIN w.mystiaLoreleiList mystiaLorelei\n     WHERE w.id = 1\n\n\n\n\u7d44\u307f\u8fbc\u307f\u306e\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\n\n\u6587\u5b57\u5217\u64cd\u4f5c\u7528\u306e\u95a2\u6570\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nYakumoYukari.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"yakumo_yukari\")\npublic class YakumoYukari {\n    @Id\n    private Long id;\n\n    private String string;\n\n    @Override\n    public String toString() {\n        return \"YakumoYukari{\" + \"id=\" + id + \", string=\" + string + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n\n\u9023\u7d50\u3059\u308b\uff08CONCAT\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nYakumoYukari.concat\nSELECT CONCAT('<<', y.string, '>>')\n  FROM YakumoYukari y\n WHERE y.id=1\n\n\n\u30c7\u30fc\u30bf\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    TypedQuery<String> queryStr;\n\n    queryStr = this.em.createNamedQuery(\"YakumoYukari.concat\", String.class);\n    System.out.println(queryStr.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   <<hoge>>\n\n\n\n\nCONCAT \u95a2\u6570\u3067\u3001\u6587\u5b57\u5217\u3092\u9023\u7d50\u3067\u304d\u308b\u3002\n\n\n\u62bd\u51fa\u3059\u308b\uff08SUBSTRING\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nYakumoYukari.substringStart\nSELECT SUBSTRING(y.string, 3)\n  FROM YakumoYukari y\n WHERE y.id=4\n\n\n\nYakumoYukari.substringStartLength\nSELECT SUBSTRING(y.string, 3, 2)\n  FROM YakumoYukari y\n WHERE y.id=4\n\n\n\u30c7\u30fc\u30bf\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    queryStr = this.em.createNamedQuery(\"YakumoYukari.substringStart\", String.class);\n    System.out.println(queryStr.getSingleResult());\n\n    queryStr = this.em.createNamedQuery(\"YakumoYukari.substringStartLength\", String.class);\n    System.out.println(queryStr.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   3456\n\u60c5\u5831:   34\n\n\n\n\nSUBSTRING(<\u5bfe\u8c61\u6587\u5b57\u5217>, <\u958b\u59cb\u30a4\u30f3\u30c7\u30c3\u30af\u30b9>[, <\u62bd\u51fa\u6587\u5b57\u6570>]) \u3067\u6587\u5b57\u5217\u306e\u4e00\u90e8\u3092\u62bd\u51fa\u3067\u304d\u308b\u3002\n\n\n\u30c8\u30ea\u30e0\u3059\u308b\uff08TRIM\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nYakumoYukari.trimDefault\nSELECT TRIM(y.string)\n  FROM YakumoYukari y\n WHERE y.id=2\n\n\n\nYakumoYukari.trimLeading\nSELECT TRIM(LEADING FROM y.string)\n  FROM YakumoYukari y\n WHERE y.id=2\n\n\n\nYakumoYukari.trimAsterisk\nSELECT TRIM(TRAILING '*' FROM y.string)\n  FROM YakumoYukari y\n WHERE y.id=3\n\n\n\u30c7\u30fc\u30bf\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    queryStr = this.em.createNamedQuery(\"YakumoYukari.trimDefault\", String.class);\n    System.out.println(\"[\" + queryStr.getSingleResult() + \"]\");\n\n    queryStr = this.em.createNamedQuery(\"YakumoYukari.trimLeading\", String.class);\n    System.out.println(\"[\" + queryStr.getSingleResult() + \"]\");\n\n    queryStr = this.em.createNamedQuery(\"YakumoYukari.trimAsterisk\", String.class);\n    System.out.println(\"[\" + queryStr.getSingleResult() + \"]\");\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [fuga]\n\u60c5\u5831:   [fuga  ]\n\u60c5\u5831:   [**piyo]\n\n\n\n\nTRIM() \u95a2\u6570\u3067\u3001\u6587\u5b57\u306e\u30c8\u30ea\u30e0\u304c\u3067\u304d\u308b\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u3001\u5de6\u53f3\u306e\u30b9\u30da\u30fc\u30b9\u304c\u30c8\u30ea\u30e0\u3055\u308c\u308b\u3002\n\u524d\u65b9\u3060\u3051\u3092\u30c8\u30ea\u30e0\u3059\u308b\u5834\u5408\u306f\u3001 LEADING FROM \u3092\u4ed8\u3051\u308b\u3002\n\n\n\u5f8c\u65b9\u3060\u3051\u3092\u30c8\u30ea\u30e0\u3059\u308b\u5834\u5408\u306f\u3001 TRAILING FROM \u3092\u4ed8\u3051\u308b\u3002\n\u524d\u3068\u5f8c\u308d\u4e21\u65b9\u3092\u30c8\u30ea\u30e0\u3059\u308b\u5834\u5408\u306f\u3001 BOTH FROM \u3092\u4ed8\u3051\u308b\u3002\n\n\n\u30c8\u30ea\u30e0\u3059\u308b\u6587\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001 '<\u30c8\u30ea\u30e0\u3059\u308b\u6587\u5b57>' FROM \u3092\u4ed8\u3051\u308b\u3002\n\u4e21\u65b9\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001 TRAILING '*' FROM \u306e\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3002\n\n\n\u5927\u6587\u5b57\u30fb\u5c0f\u6587\u5b57\u306b\u3059\u308b\uff08UPPER, LOWER\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nYakumoYukari.lower\nSELECT LOWER(y.string)\n  FROM YakumoYukari y\n WHERE y.id=5\n\n\n\nYakumoYukari.upper\nSELECT UPPER(y.string)\n  FROM YakumoYukari y\n WHERE y.id=5\n\n\n\u30c7\u30fc\u30bf\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    queryStr = this.em.createNamedQuery(\"YakumoYukari.lower\", String.class);\n    System.out.println(queryStr.getSingleResult());\n\n    queryStr = this.em.createNamedQuery(\"YakumoYukari.upper\", String.class);\n    System.out.println(queryStr.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   fizzbuzz\n\u60c5\u5831:   FIZZBUZZ\n\n\n\n\nLOWER() \u3067\u5c0f\u6587\u5b57\u306b\u3001 UPPER() \u3067\u5927\u6587\u5b57\u306b\u5909\u63db\u3067\u304d\u308b\u3002\n\n\n\u6587\u5b57\u6570\u3092\u53d6\u5f97\u3059\u308b\uff08LENGTH\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nYakumoYukari.length\nSELECT LENGTH(y.string)\n  FROM YakumoYukari y\n WHERE y.id=1\n\n\n\u30c7\u30fc\u30bf\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    queryInt = this.em.createNamedQuery(\"YakumoYukari.length\", Integer.class);\n    System.out.println(queryInt.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   4\n\n\n\n\nLENGTH() \u3067\u6587\u5b57\u5217\u306e\u6587\u5b57\u6570\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n\n\u6307\u5b9a\u3057\u305f\u6587\u5b57\u304c\u4f4d\u7f6e\u3059\u308b\u5834\u6240\u3092\u53d6\u5f97\u3059\u308b\uff08LOCATE\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nYakumoYukari.locate\nSELECT LOCATE('cd', y.string)\n  FROM YakumoYukari y\n WHERE y.id=6\n\n\n\u30c7\u30fc\u30bf\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    queryInt = this.em.createNamedQuery(\"YakumoYukari.locate\", Integer.class);\n    System.out.println(queryInt.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   3\n\n\n\n\nLOCATE(<\u691c\u7d22\u3059\u308b\u6587\u5b57\u5217>, <\u691c\u7d22\u5bfe\u8c61\u306e\u6587\u5b57\u5217>) \u3067\u3001\u305d\u306e\u6587\u5b57\u306e\u958b\u59cb\u4f4d\u7f6e\uff08\uff11\u59cb\u307e\u308a\uff09\u3092\u53d6\u5f97\u3067\u304d\u308b\uff08indexOf() \u7684\u306a\uff09\u3002\n\u7b2c\u4e09\u5f15\u6570\u306b\u691c\u7d22\u5bfe\u8c61\u306e\u958b\u59cb\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n\n\u7b97\u8853\u95a2\u6570\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nIbukiSuika.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport java.util.List;\nimport javax.persistence.CollectionTable;\nimport javax.persistence.Column;\nimport javax.persistence.ElementCollection;\nimport javax.persistence.Entity;\nimport javax.persistence.FetchType;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.OrderColumn;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"ibuki_suika\")\npublic class IbukiSuika {\n    @Id\n    private Long id;\n    private double number;\n    @ElementCollection(fetch = FetchType.EAGER)\n    @CollectionTable(name = \"ibuki_suika_list\", joinColumns = @JoinColumn(name = \"ibuki_suika_id\"))\n    @Column(name = \"value\")\n    @OrderColumn(name = \"order\")\n    private List<String> list;\n\n    @Override\n    public String toString() {\n        return \"IbukiSuika{\" + \"id=\" + id + \", number=\" + number + \", list=\" + list + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\n\n\n\u7d76\u5bfe\u5024\u3092\u53d6\u5f97\u3059\u308b\uff08ABS\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nIbukiSuika.abs\nSELECT ABS(i.number)\n  FROM IbukiSuika i\n WHERE i.id=1\n\n\n\u30c7\u30fc\u30bf\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    Query query = this.em.createNamedQuery(\"IbukiSuika.abs\");\n    System.out.println(query.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   10.2\n\n\n\n\nABS() \u95a2\u6570\u3092\u4f7f\u3046\u3068\u3001\u7d76\u5bfe\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n\n\u5e73\u65b9\u6839\u3092\u53d6\u5f97\u3059\u308b\uff08SQRT\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nIbukiSuika.sqrt\nSELECT SQRT(i.number)\n  FROM IbukiSuika i\n WHERE i.id=2\n\n\n\u30c7\u30fc\u30bf\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"IbukiSuika.sqrt\");\n    System.out.println(query.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   5.0\n\n\n\n\nSQRT() \u95a2\u6570\u3092\u4f7f\u3046\u3068\u3001\u5e73\u65b9\u6839\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n\n\u5546\u306e\u4f59\u308a\u3092\u53d6\u5f97\u3059\u308b\uff08MOD\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nIbukiSuika.mod\nSELECT MOD(i.number, 5)\n  FROM IbukiSuika i\n WHERE i.id=3\n\n\n\u30c7\u30fc\u30bf\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"IbukiSuika.mod\");\n    System.out.println(query.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   2\n\n\n\n\nMOD() \u95a2\u6570\u3067\u3001\u5546\u306e\u4f59\u308a\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\uff08SIZE\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nIbukiSuika.size\nSELECT SIZE(i.list)\n  FROM IbukiSuika i\n WHERE i.id=4\n\n\n\u30c7\u30fc\u30bf\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"IbukiSuika.size\");\n    System.out.println(query.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   3\n\n\n\n\nSIZE() \u95a2\u6570\u3092\u4f7f\u3046\u3068\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n\n\u30ea\u30b9\u30c8\u306e\u30bd\u30fc\u30c8\u9806\u5e8f\u3092\u6761\u4ef6\u306b\u4f7f\u7528\u3059\u308b\uff08INDEX\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nIbukiSuika.index\nSELECT l\n  FROM IbukiSuika i\n      ,IN(i.list) l\n WHERE i.id=4\n   AND INDEX(l) = 1\n\n\n\u30c7\u30fc\u30bf\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"IbukiSuika.index\");\n    System.out.println(query.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   fuga\n\n\n\n\nINDEX() \u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30ea\u30b9\u30c8\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff08@OrderColumn \u3067\u6307\u5b9a\u3057\u305f\u30ab\u30e9\u30e0\u306e\u5024\uff09\u3092\u691c\u7d22\u6761\u4ef6\u306b\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\n\u65e5\u4ed8\u95a2\u6570\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nKamishirasawaKeine.currentDate\nSELECT CURRENT_DATE\n  FROM KamishirasawaKeine k\n WHERE k.id=1\n\n\n\nKamishirasawaKeine.currentTime\nSELECT CURRENT_TIME\n  FROM KamishirasawaKeine k\n WHERE k.id=1\n\n\n\nKamishirasawaKeine.currentTimestamp\nSELECT CURRENT_TIMESTAMP\n  FROM KamishirasawaKeine k\n WHERE k.id=1\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    Query query = this.em.createNamedQuery(\"KamishirasawaKeine.currentDate\");\n    Object result = query.getSingleResult();\n    System.out.println(\"class = \" + result.getClass() + \", value = \" + result);\n\n    query = this.em.createNamedQuery(\"KamishirasawaKeine.currentTime\");\n    result = query.getSingleResult();\n    System.out.println(\"class = \" + result.getClass() + \", value = \" + result);\n\n    query = this.em.createNamedQuery(\"KamishirasawaKeine.currentTimestamp\");\n    result = query.getSingleResult();\n    System.out.println(\"class = \" + result.getClass() + \", value = \" + result);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   class = class java.sql.Date, value = 2015-03-09\n\u60c5\u5831:   class = class java.sql.Time, value = 23:24:27\n\u60c5\u5831:   class = class java.sql.Timestamp, value = 2015-03-09 23:24:27.0\n\n\n\n\nCURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP \u3067\u3001\u305d\u308c\u305e\u308c\u5b9f\u884c\u6642\u306e\u65e5\u4ed8\u30fb\u6642\u523b\u30fb\u65e5\u6642\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u578b\u3092\u691c\u7d22\u306e\u6761\u4ef6\u3067\u4f7f\u7528\u3059\u308b\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nReisenUdongeinInaba.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"reisen_udongein_inaba\")\npublic class ReisenUdongeinInaba {\n    @Id\n    private Long id;\n    @JoinColumn(name = \"inaba_tewi_id\")\n    private ParentInabaTewi inabaTewi;\n\n    @Override\n    public String toString() {\n        return \"ReisenUdongeinInaba{\" + \"id=\" + id + \", inabaTewi=\" + inabaTewi + '}';\n    }\n}\n\n\n\nParentInabaTewi.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"inaba_tewi\")\npublic class ParentInabaTewi {\n    @Id\n    protected Long id;\n\n    @Override\n    public String toString() {\n        return \"ParentInabaTewi{\" + \"id=\" + id + '}';\n    }\n}\n\n\n\nChildInabaTewi.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\n\n@Entity\npublic class ChildInabaTewi extends ParentInabaTewi {\n\n    @Override\n    public String toString() {\n        return \"ChildInabaTewi{\" + \"id=\" + id + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nReisenUdongeinInaba.parent\nSELECT r\n  FROM ReisenUdongeinInaba r\n WHERE TYPE(r.inabaTewi) = ParentInabaTewi\n\n\n\nReisenUdongeinInaba.child\nSELECT r\n  FROM ReisenUdongeinInaba r\n WHERE TYPE(r.inabaTewi) = ChildInabaTewi\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    Query query = this.em.createNamedQuery(\"ReisenUdongeinInaba.parent\");\n    System.out.println(query.getSingleResult());\n\n    query = this.em.createNamedQuery(\"ReisenUdongeinInaba.child\");\n    System.out.println(query.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   ReisenUdongeinInaba{id=1, inabaTewi=ParentInabaTewi{id=1}}\n\u60c5\u5831:   ReisenUdongeinInaba{id=2, inabaTewi=ChildInabaTewi{id=2}}\n\n\n\n\nTYPE() \u95a2\u6570\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u578b\u3092\u53d6\u5f97\u3057\u3001\u691c\u7d22\u6761\u4ef6\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3002\n\n\n\u96c6\u7d04\u95a2\u6570\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nHouraisanKaguya.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"houraisan_kaguya\")\npublic class HouraisanKaguya {\n    @Id\n    private Long id;\n    private String string;\n    private short number;\n}\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\n\u30ec\u30b3\u30fc\u30c9\u6570\u3092\u53d6\u5f97\u3059\u308b\uff08COUNT\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nHouraisanKaguya.count\nSELECT COUNT(h)\n  FROM HouraisanKaguya h\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    public void houraisanKaguya() {\n        Query query = this.em.createNamedQuery(\"HouraisanKaguya.count\");\n        this.print(\"count\", query);\n    }\n\n    private void print(String tag, Query query) {\n        Object result = query.getSingleResult();\n        System.out.println(tag + \" : \" + result + \", class : \" + result.getClass());\n    }\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   count : 4, class : class java.lang.Long\n\n\n\n\nCOUNT() \u95a2\u6570\u3067\u3001\u30ec\u30b3\u30fc\u30c9\u306e\u4ef6\u6570\u3092\u53d6\u5f97\u3059\u308b\u3002\n\u30ec\u30b3\u30fc\u30c9\u3092\uff11\u4ef6\u3082\u53d6\u5f97\u3067\u304d\u306a\u3044\u5834\u5408\u306f 0 \u304c\u8fd4\u3055\u308c\u308b\u3002\n\u578b\u306f Long\u3002\n\n\n\u6700\u5927\u30fb\u6700\u5c0f\u3092\u53d6\u5f97\u3059\u308b\uff08MAX, MIN\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nHouraisanKaguya.stringMax\nSELECT MAX(h.string)\n  FROM HouraisanKaguya h\n\n\n\nHouraisanKaguya.numberMax\nSELECT MAX(h.number)\n  FROM HouraisanKaguya h\n\n\n\nHouraisanKaguya.min\nSELECT MIN(h.number)\n  FROM HouraisanKaguya h\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"HouraisanKaguya.stringMax\");\n    this.print(\"stringMax\", query);\n\n    query = this.em.createNamedQuery(\"HouraisanKaguya.numberMax\");\n    this.print(\"numberMax\", query);\n\n    query = this.em.createNamedQuery(\"HouraisanKaguya.min\");\n    this.print(\"min\", query);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   stringMax : ddd, class : class java.lang.String\n\u60c5\u5831:   numberMax : 40, class : class java.lang.Short\n\u60c5\u5831:   min : 10, class : class java.lang.Short\n\n\n\n\nMAX(), MIN() \u95a2\u6570\u3067\u3001\u6700\u5927\u5024\u3068\u6700\u5c0f\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\u578b\u306f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u8a72\u5f53\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5bfe\u5fdc\u3059\u308b\u578b\u306b\u5909\u63db\u3055\u308c\u308b\uff08\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u4e38\u3081\u3089\u308c\u308b\uff09\u3002\n\n\n\nHouraisanKaguya#number \u306f short \u578b\u3067\u5ba3\u8a00\u3057\u3066\u3044\u308b\u306e\u3067\u3001 DB \u306e\u5024\u304c\u5b9f\u6570\u5024\u3067\u3042\u3063\u3066\u3082 java.lang.Short \u306b\u5909\u63db\u3055\u308c\u3066\u3044\u308b\u3002\n\n\n\n\n\u5e73\u5747\u5024\u3092\u53d6\u5f97\u3059\u308b\uff08AVG\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nHouraisanKaguya.avg\nSELECT AVG(h.number)\n  FROM HouraisanKaguya h\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"HouraisanKaguya.avg\");\n    this.print(\"avg\", query);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   avg : 26.0, class : class java.lang.Double\n\n\n\n\nAVG() \u95a2\u6570\u3067\u3001\u5e73\u5747\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\u578b\u306f Double\u3002\n\n\n\u5408\u8a08\u5024\u3092\u53d6\u5f97\u3059\u308b\uff08SUM\uff09\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nHouraisanKaguya.sum\nSELECT SUM(h.number)\n  FROM HouraisanKaguya h\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"HouraisanKaguya.sum\");\n    this.print(\"sum\", query);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   sum : 104, class : class java.lang.Long\n\n\n\n\nSUM() \u95a2\u6570\u3067\u3001\u5408\u8a08\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\u53d6\u5f97\u3055\u308c\u308b\u5024\u306f\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u578b\u304c\u3001\n\n\n\u6574\u6570\u5024\u306e\u5834\u5408\u306f Long \u578b\u306b\u3001\n\u5b9f\u6570\u5024\u306e\u5834\u5408\u306f Double \u578b\u306b\u3001\n\nBigInteger \u578b\u306e\u5834\u5408\u306f BigInteger \u306b\u3001\n\nBigDecimal \u578b\u306e\u5834\u5408\u306f BigDecimal \u306b\u5909\u63db\u3055\u308c\u308b\u3002\n\n\n\n\nRDB \u304c\u63d0\u4f9b\u3059\u308b\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nHinanaiTenshi.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"hinanai_tenshi\")\npublic class HinanaiTenshi {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"HinanaiTenshi{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nHinanaiTenshi.functions\nSELECT FUNCTION('FORMAT', h.number, 3)\n  FROM HinanaiTenshi h\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    TypedQuery<String> query = this.em.createNamedQuery(\"HinanaiTenshi.functions\", String.class);\n\n    query.getResultList()\n         .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   123,456.000\n\u60c5\u5831:   345.123\n\u60c5\u5831:   56,789.123\n\n\n\n\nFUNCTION(<\u95a2\u6570\u540d> [, <\u5f15\u6570>...]) \u3068\u3044\u3046\u5f62\u5f0f\u3067\u3001\u4f7f\u7528\u3057\u3066\u3044\u308b RDB \u304c\u63d0\u4f9b\u3059\u308b\u95a2\u6570\u3092\u4f7f\u7528\u3067\u304d\u308b\u3002\n\u30d3\u30eb\u30c9\u30a4\u30f3\u306e\u95a2\u6570\u306f\u3082\u3061\u308d\u3093\u3001\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u95a2\u6570\u3082\u5229\u7528\u3067\u304d\u308b\u3002\n\n\nORDER BY \u3067\u30bd\u30fc\u30c8\u3059\u308b\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nSaigyojiYuyuko.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Embedded;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"saigyoji_yuyuko\")\npublic class SaigyojiYuyuko {\n    @Id\n    private Long id;\n    @Embedded\n    private EmbeddedSaigyojiYuyuko embeddedSaigyojiYuyuko;\n\n    @Override\n    public String toString() {\n        return \"SaigyojiYuyuko{\" + \"id=\" + id + \", embeddedSaigyojiYuyuko=\" + embeddedSaigyojiYuyuko + '}';\n    }\n}\n\n\n\nEmbeddedSaigyojiYuyuko.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Embeddable;\n\n@Embeddable\npublic class EmbeddedSaigyojiYuyuko {\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"{ \" + this.number + \" }\";\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nSaigyojiYuyuko.orderByIdDesc\n  SELECT s\n    FROM SaigyojiYuyuko s\nORDER BY s.id DESC\n\n\n\nSaigyojiYuyuko.orderByNumberDesc\n  SELECT s\n    FROM SaigyojiYuyuko s\nORDER BY s.embeddedSaigyojiYuyuko.number DESC\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    TypedQuery<SaigyojiYuyuko> query;\n    List<SaigyojiYuyuko> list;\n\n    System.out.println(\"[SaigyojiYuyuko.orderByIdDesc]\");\n    query = this.em.createNamedQuery(\"SaigyojiYuyuko.orderByIdDesc\", SaigyojiYuyuko.class);\n    list = query.getResultList();\n    list.forEach(System.out::println);\n\n    System.out.println(\"[SaigyojiYuyuko.orderByNumberDesc]\");\n    query = this.em.createNamedQuery(\"SaigyojiYuyuko.orderByNumberDesc\", SaigyojiYuyuko.class);\n    list = query.getResultList();\n    list.forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [SaigyojiYuyuko.orderByIdDesc]\n\u60c5\u5831:   SaigyojiYuyuko{id=5, embeddedSaigyojiYuyuko={ 6 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=4, embeddedSaigyojiYuyuko={ 7 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=3, embeddedSaigyojiYuyuko={ 8 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=2, embeddedSaigyojiYuyuko={ 9 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=1, embeddedSaigyojiYuyuko={ 10 }}\n\u60c5\u5831:   [SaigyojiYuyuko.orderByNumberDesc]\n\u60c5\u5831:   SaigyojiYuyuko{id=1, embeddedSaigyojiYuyuko={ 10 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=2, embeddedSaigyojiYuyuko={ 9 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=3, embeddedSaigyojiYuyuko={ 8 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=4, embeddedSaigyojiYuyuko={ 7 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=5, embeddedSaigyojiYuyuko={ 6 }}\n\n\n\nSQL \u3068\u540c\u3058\u8981\u9818\u3067 ORDER BY \u304c\u4f7f\u3048\u308b\u3002\n\nASC \u3067\u6607\u9806\u3001 DESC \u3067\u964d\u9806\u306b\u4e26\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u7701\u7565\u6642\u306f\u3001 ASC \u304c\u9069\u7528\u3055\u308c\u308b\u3002\n\n\n\n\nGROUP BY \u3067\u96c6\u7d04\u3059\u308b\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nYagokoroEirin.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Embedded;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"yagokoro_eirin\")\npublic class YagokoroEirin {\n    @Id\n    private Long id;\n    private String value;\n    @Embedded\n    private EmbeddedValue embeddedValue;\n\n    @Override\n    public String toString() {\n        return \"YagokoroEirin{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n\n\n\nEmbeddedValue.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Embeddable;\n\n@Embeddable\npublic class EmbeddedValue {\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"EmbeddedValue{\" + \"number=\" + number + '}';\n    }\n\n    @Override\n    public int hashCode() {\n        // \u7701\u7565\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        // \u7701\u7565\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nYagokoroEirin.groupBy\n  SELECT y.value\n        ,COUNT(y)\n    FROM YagokoroEirin y\nGROUP BY y.value\n\n\n\nYagokoroEirin.groupByObject\n  SELECT y.embeddedValue\n        ,COUNT(y)\n    FROM YagokoroEirin y\nGROUP BY y.embeddedValue\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    Query query = this.em.createNamedQuery(\"YagokoroEirin.groupBy\");\n\n    List<Object[]> list = query.getResultList();\n\n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n\n    query = this.em.createNamedQuery(\"YagokoroEirin.groupByObject\");\n\n    list = query.getResultList();\n\n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [fuga, 2]\n\u60c5\u5831:   [hoge, 3]\n\u60c5\u5831:   [piyo, 1]\n\u60c5\u5831:   [EmbeddedValue{number=100}, 1]\n\u60c5\u5831:   [EmbeddedValue{number=200}, 2]\n\u60c5\u5831:   [EmbeddedValue{number=300}, 3]\n\n\n\n\nGROUP BY \u3067\u3001\u9805\u76ee\u3092\u96c6\u7d04\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\nHAVING \u53e5\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nAkiMinoriko.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"aki_minoriko\")\npublic class AkiMinoriko {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"AkiMinoriko{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nAkiMinoriko.having\n  SELECT a.number\n        ,COUNT(a.number)\n    FROM AkiMinoriko a\nGROUP BY a.number\n  HAVING 2 < COUNT(a.number)\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    Query query = this.em.createNamedQuery(\"AkiMinoriko.having\");\n\n    List<Object[]> list = query.getResultList();\n\n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [100, 4]\n\u60c5\u5831:   [200, 3]\n\n\n\nSQL \u3068\u540c\u3058\u30ce\u30ea\u3067 HAVING \u53e5\u304c\u5229\u7528\u3067\u304d\u308b\u3002\n\n\nDISTINCT\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nKagiyamaHina.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"kagiyama_hina\")\npublic class KagiyamaHina {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"KagiyamaHina{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nKagiyamaHina.distinct\n  SELECT \nDISTINCT k.number\n    FROM KagiyamaHina k\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    TypedQuery<Integer> query = this.em.createNamedQuery(\"KagiyamaHina.distinct\", Integer.class);\n\n    query.getResultList()\n         .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   111\n\u60c5\u5831:   222\n\u60c5\u5831:   333\n\n\n\nSQL \u3068\u540c\u3058\u3088\u3046\u306b DISTINCT \u304c\u4f7f\u3048\u308b\u3002\nDISTINCT \u306e\u5bfe\u8c61\u306b\u7d44\u307f\u8fbc\u307f\u53ef\u80fd\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3063\u307d\u3044\uff1f\n\n\nThe result of DISTINCT over embeddable objects or map entry results is undefined.\n\nJPA 2.1 \u306e\u4ed5\u69d8\u66f8\u306e 4.8\n\n\u30b5\u30d6\u30af\u30a8\u30ea\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nShameimaruAya.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"shameimaru_aya\")\npublic class ShameimaruAya {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"ShameimaruAya{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nShameimaruAya.findMax\nSELECT s1\n  FROM ShameimaruAya s1\n WHERE s1.number = (\n         SELECT MAX(s2.number)\n           FROM ShameimaruAya s2\n       )\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    TypedQuery<ShameimaruAya> query = this.em.createNamedQuery(\"ShameimaruAya.findMax\", ShameimaruAya.class);\n    System.out.println(query.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   ShameimaruAya{id=2, number=30}\n\n\n\nSQL \u3068\u540c\u3058\u8981\u9818\u3067\u3001\u4e38\u62ec\u5f27 ( ) \u3067\u30b5\u30d6\u30af\u30a8\u30ea\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\nLEFT JOIN\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nMedicineMelancholy.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"medicine_melancholy\")\npublic class MedicineMelancholy {\n    @Id\n    private Long id;\n    private String code;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"MedicineMelancholy{\" + \"id=\" + id + \", code=\" + code + \", value=\" + value + '}';\n    }\n}\n\n\n\nKazamiYuka.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"kazami_yuka\")\npublic class KazamiYuka {\n    @Id\n    private Long id;\n    private String code;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"KazamiYuka{\" + \"id=\" + id + \", code=\" + code + \", value=\" + value + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nMedicineMelancholy.leftJoinOnCode\n   SELECT m\n         ,k\n     FROM MedicineMelancholy m\nLEFT JOIN KazamiYuka k\n       ON k.code = m.code\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    Query query = this.em.createNamedQuery(\"MedicineMelancholy.leftJoinOnCode\");\n    System.out.println(\"leftJoinOnCode\");\n\n    List<Object[]> list = query.getResultList();\n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [MedicineMelancholy{id=1, code=AAA, value=hoge}, KazamiYuka{id=1, code=AAA, value=fizz}]\n\u60c5\u5831:   [MedicineMelancholy{id=2, code=BBB, value=fuga}, null]\n\u60c5\u5831:   [MedicineMelancholy{id=3, code=CCC, value=piyo}, KazamiYuka{id=2, code=CCC, value=buzz}]\n\u60c5\u5831:   [MedicineMelancholy{id=3, code=CCC, value=piyo}, KazamiYuka{id=3, code=CCC, value=gamma}]\n\n\n\n\nLEFT JOIN \u3067\u3001\u7570\u306a\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u7d50\u5408\u3057\u3066\u691c\u7d22\u3067\u304d\u308b\u3002\n\nON \u53e5\u3067\u7d50\u5408\u306e\u6761\u4ef6\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n\n\nFETCH JOIN \u3067 SQL \u306e\u767a\u884c\u56de\u6570\u3092\u6e1b\u3089\u3059\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nOnodukaKomachi.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"onoduka_komachi\")\npublic class OnodukaKomachi {\n    @Id\n    private Long id;\n    @JoinColumn(name=\"shiki_eiki_id\")\n    private ShikiEiki shikiEiki;\n\n    public ShikiEiki getShikiEiki() {\n        return shikiEiki;\n    }\n\n    @Override\n    public String toString() {\n        return \"OnodukaKomachi{\" + \"id=\" + id + \", shikiEiki=\" + shikiEiki + '}';\n    }\n}\n\n\n\nShikiEiki.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"shiki_eiki\")\npublic class ShikiEiki {\n    @Id\n    private Long id;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"ShikiEiki{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nOnodukaKomachi.notFetchJoin\nSELECT o\n  FROM OnodukaKomachi o\n\n\n\nOnodukaKomachi.fetchJoin\n    SELECT o\n      FROM OnodukaKomachi o\nJOIN FETCH o.shikiEiki\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    TypedQuery<OnodukaKomachi> query;\n\n    System.out.println(\"<<notFetchJoin>>\");\n    query = this.em.createNamedQuery(\"OnodukaKomachi.notFetchJoin\", OnodukaKomachi.class);\n    query.getResultList()\n         .forEach(o -> System.out.println(o.getShikiEiki()));\n\n    System.out.println(\"<<fetchJoin>>\");\n    query = this.em.createNamedQuery(\"OnodukaKomachi.fetchJoin\", OnodukaKomachi.class);\n    query.getResultList()\n         .forEach(o -> System.out.println(o.getShikiEiki()));\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   <<notFetchJoin>>\n\u666e\u901a:   SELECT ID, shiki_eiki_id FROM onoduka_komachi\n\u666e\u901a:   SELECT ID, VALUE FROM shiki_eiki WHERE (ID = ?)\n    bind => [1]\n\u666e\u901a:   SELECT ID, VALUE FROM shiki_eiki WHERE (ID = ?)\n    bind => [2]\n\u666e\u901a:   SELECT ID, VALUE FROM shiki_eiki WHERE (ID = ?)\n    bind => [3]\n\u60c5\u5831:   ShikiEiki{id=1, value=hoge}\n\u60c5\u5831:   ShikiEiki{id=2, value=fuga}\n\u60c5\u5831:   ShikiEiki{id=3, value=piyo}\n\n\u60c5\u5831:   <<fetchJoin>>\n\u666e\u901a:   SELECT t1.ID, t1.shiki_eiki_id, t0.ID, t0.VALUE FROM shiki_eiki t0, onoduka_komachi t1 WHERE (t0.ID = t1.shiki_eiki_id)\n\u60c5\u5831:   ShikiEiki{id=1, value=hoge}\n\u60c5\u5831:   ShikiEiki{id=2, value=fuga}\n\u60c5\u5831:   ShikiEiki{id=3, value=piyo}\n\n\n\n\nFETCH JOIN \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u95a2\u9023\u3059\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\uff08or \u7d44\u307f\u8fbc\u307f\u53ef\u80fd\u30af\u30e9\u30b9\uff09\u306e\u60c5\u5831\u3092\uff11\u56de\u306e SQL \u3067\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\u3044\u308f\u3086\u308b\u3001 N+1 \u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u306b\u306a\u308b\u3002\n\u305f\u3060\u3057\u8aad\u307f\u8fbc\u3080\u30c7\u30fc\u30bf\u306e\u6570\u304c\u591a\u304f\u306a\u308b\u3068\u3001\u4eca\u5ea6\u306f\u30e1\u30e2\u30ea\u3092\u5927\u91cf\u306b\u6d88\u8cbb\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u3001\u305d\u306e\u8fba\u3082\u8003\u616e\u3057\u3066\u4f7f\u3046\u3088\u3046\u306b\u3059\u308b\u3002\n\n\nUPDATE, DELETE\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nYasakaKanako.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"yasaka_kanako\")\npublic class YasakaKanako {\n    @Id\n    private Long id;\n    private String value;\n\n    public void setValue(String value) {\n        this.value = value;\n    }\n\n    @Override\n    public String toString() {\n        return \"YasakaKanako{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\nUPDATE\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nYasakaKanako.update\nUPDATE YasakaKanako y\n   SET y.value = 'update'\n WHERE y.id = 2\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    Query query = this.em.createNamedQuery(\"YasakaKanako.update\");\n    query.executeUpdate();\n\n\n\u5b9f\u884c\u5f8c\u306e\u30c7\u30fc\u30bf\n\n\nSQL \u3068\u540c\u3058\u3088\u3046\u306a\u611f\u3058\u3067 UPDATE \u6587\u3092\u4f7f\u3048\u308b\u3002\nUPDATE \u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306f\u3001 Query#executeUpdate() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\nDELETE\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nYasakaKanako.delete\nDELETE\n  FROM YasakaKanako y\n WHERE y.id IN (1, 2)\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    query = this.em.createNamedQuery(\"YasakaKanako.delete\");\n    query.executeUpdate();\n\n\n\u5b9f\u884c\u5f8c\u306e\u30c7\u30fc\u30bf\n\n\nSQL \u3068\u540c\u3058\u3088\u3046\u306a\u611f\u3058\u3067 DELETE \u6587\u3092\u5b9f\u884c\u3067\u304d\u308b\u3002\n\n\nUPDATE, DELETE \u3092\u4f7f\u3046\u6642\u306e\u6ce8\u610f\u70b9\nUPDATE \u3068 DELETE \u3092 JPQL \u3067\u5b9f\u884c\u3057\u305f\u5834\u5408\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3068\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u7ba1\u7406\u3057\u3066\u3044\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u72b6\u614b\u304c\u4e56\u96e2\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u3002\n\u30c7\u30fc\u30bf\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n+   YasakaKanako yasakaKanako = this.em.find(YasakaKanako.class, 2L);\n\n    Query query = this.em.createNamedQuery(\"YasakaKanako.update\");\n    query.executeUpdate();\n\n+   System.out.println(yasakaKanako);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   YasakaKanako{id=2, value=fuga}\n\n\n\u5b9f\u884c\u5f8c\u306e\u30c7\u30fc\u30bf\n\n\nUPDATE \u306e\u5b9f\u884c\u5f8c\u3082\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u5024\u306f\u66f4\u65b0\u524d\u306e \"fuga\" \u306e\u307e\u307e\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u3053\u306e\u3088\u3046\u306b\u3001 UPDATE, DELETE \u306e\u5b9f\u884c\u306f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u7ba1\u7406\u3059\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u72b6\u614b\u3068\u306f\u540c\u671f\u3055\u308c\u306a\u3044\uff08\u540c\u671f\u3059\u308b\u8cac\u52d9\u304c\u4ed5\u69d8\u4e0a\u5b58\u5728\u3057\u306a\u3044\uff09\u3002\n\u306a\u306e\u3067\u3001 UPDATE, DELETE \u3092\u4f7f\u3046\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u5bfe\u7b56\u3092\u3068\u3063\u3066\u304a\u304f\u307b\u3046\u304c\u3044\u3044\u3002\n\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u64cd\u4f5c\u3059\u308b\u3068\u304d\u3068\u306f\u7570\u306a\u308b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067 UPDATE, DELETE \u3092\u5b9f\u884c\u3059\u308b\u3002\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092 DB \u304b\u3089\u53d6\u5f97\u3059\u308b\u524d\u306b UPDATE, DELETE \u3092\u5b9f\u884c\u3057\u3066\u304a\u304f\u3002\nUPDATE, DELETE \u3092\u5b9f\u884c\u3059\u308b\u524d\u306b EntityManager#flush() \u3068 EntityManager#clear() \u3092\u5b9f\u884c\u3059\u308b\u3002\n\n\n\nflush() \u3067\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u7ba1\u7406\u3057\u3066\u3044\u308b\u72b6\u614b\u3092 DB \u306b\u53cd\u6620\u3055\u305b\u3001\n\nclear() \u3067\u7ba1\u7406\u5bfe\u8c61\u3092\u30af\u30ea\u30a2\u3059\u308b\u3053\u3068\u3067\u3001 DB \u3068\u306e\u4e56\u96e2\u3092\u767a\u751f\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n\n\n\n\n\nCASE \u6587\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nMoriyaSuwako.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"moriya_suwako\")\npublic class MoriyaSuwako {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"MoriyaSuwako{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nMoriyaSuwako.case\nSELECT m.number\n      ,CASE MOD(m.number, 2)\n           WHEN 0 THEN 'even'\n           ELSE 'odd'\n       END\n  FROM MoriyaSuwako m\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    Query query = this.em.createNamedQuery(\"MoriyaSuwako.case\");\n\n    List<Object[]> list = query.getResultList();\n\n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [111, odd]\n\u60c5\u5831:   [222, even]\n\u60c5\u5831:   [333, odd]\n\n\n\nSQL \u3068\u540c\u3058\u8981\u9818\u3067 CASE \u6587\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u30cd\u30a4\u30c6\u30a3\u30d6\u306e SQL \u3092\u5b9f\u884c\u3059\u308b\n\n\u57fa\u672c\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u30af\u30a8\u30ea\u5b9a\u7fa9\n\nnative-query-simple\nSELECT *\n  FROM NATIVE_QUERY_TEST\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    Query query = this.em.createNamedQuery(\"native-query-simple\");\n\n    List<Object[]> list = query.getResultList();\n\n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n\n\n\n\u4f7f\u7528\u3057\u3066\u3044\u308b RDB \u30cd\u30a4\u30c6\u30a3\u30d6 SQL \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u30cd\u30a4\u30c6\u30a3\u30d6\u30af\u30a8\u30ea\u306e\u5b9a\u7fa9\u306f\u3001 JPQL \u3068\u540c\u3058\u3088\u3046\u306a\u8981\u9818\u3067\u5b9a\u7fa9\u3067\u304d\u308b\u3002\n\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001 @NamedNativeQuery \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3002\nxml \u3067\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001 <named-native-query> \u30bf\u30b0\u3092\u4f7f\u7528\u3059\u308b\u3002\n\nEntityManager#createNativeQuery(String) \u3067\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n\n\n\n\u30af\u30a8\u30ea\u7d50\u679c\u3092\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb\n\n\u5b9f\u88c5\n\nNagaeIku.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\n\n@Entity\npublic class NagaeIku {\n    @Id\n    private Long id;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"NagaeIku{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n\n\n\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb\n\n\u30c7\u30fc\u30bf\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    String sql = \"SELECT ID, VALUE FROM NAGAE_IKU WHERE ID=1\";\n    query = this.em.createNativeQuery(sql, NagaeIku.class);\n    System.out.println(query.getSingleResult());\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   NagaeIku{id=1, value=hoge}\n\n\n\n\nEntityManager#createNativeQuery(String, Class) \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30cd\u30a4\u30c6\u30a3\u30d6\u30af\u30a8\u30ea\u306e\u7d50\u679c\u3092\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\nEntityManager#createNamedQuery(String, Class) \u3060\u3068\u3001\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305f\u3002\n\n\n\u30cd\u30a4\u30c6\u30a3\u30d6\u30af\u30a8\u30ea\u306e\u7d50\u679c\u306f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u62bd\u51fa\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff08\u30ab\u30e9\u30e0\u540d\u3068\u304b\uff09\u3002\n\n\n\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u3092\u4f7f\u7528\u3059\u308b\n\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\nCREATE PROCEDURE `sample_stored_procedure` (IN intParam INTEGER, IN stringParam VARCHAR(64), OUT outParam VARCHAR(64))\nBEGIN\n  SET outParam = CONCAT(intParam, ' : ', stringParam);\nEND\n\n\u540d\u524d\u4ed8\u304d\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u5b9a\u7fa9\n\norm.xml\n  <named-stored-procedure-query name=\"sample-stored-procedure\" procedure-name=\"sample_stored_procedure\">\n    <parameter name=\"intParam\" mode=\"IN\" />\n    <parameter name=\"stringParam\" mode=\"IN\" />\n    <parameter name=\"outParam\" mode=\"OUT\" />\n  </named-stored-procedure-query>\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nJpqlEjb.java\n    StoredProcedureQuery procedure = this.em.createNamedStoredProcedureQuery(\"sample-stored-procedure\");\n\n    procedure.setParameter(\"intParam\", 100)\n             .setParameter(\"stringParam\", \"Hello Stored Procedure!!\")\n             .execute();\n\n    String outParam = (String)procedure.getOutputParameterValue(\"outParam\");\n    System.out.println(\"outParam = \" + outParam);\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   outParam = 100 : Hello Stored Procedure!!\n\n\n\n\u4f7f\u7528\u3057\u3066\u3044\u308b RDB \u306e\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nxml \u3067\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001 <named-stored-procedure-query> \u30bf\u30b0\u3067\u5b9a\u7fa9\u3059\u308b\u3002\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001 @NamedStoredProcedureQuery \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\n\u53c2\u8003\n\nJPA (Java Persistence API) - JPQL\u3092orm.xml\u306b\u66f8\u3044\u3066\u307f\u308b - @lbtc_xxx lab\nJSR-000338 Java Persistence 2.1 Final Release for Evaluation\nGlassFish\u52c9\u5f37\u4f1a\u3067\u91d1\u9b5a\u672c\u306b\u8f09\u3063\u3066\u306a\u3044JPQL\u306e\u8a71\u3092\u3057\u3066\u304d\u305f #GlassFishJP - \u6c34\u307e\u3093\u3058\u3085\u3046\n\u306f\u307e\u308b\uff01JPA\uff08\u521d\u5b66\u8005\u5411\u3051\u30e9\u30a4\u30c8\u7248\uff09\nFROM clause and JOIN in JPA 2 queries (JPQL / Criteria API)\nJava Persistence/Relationships - Wikibooks, open books for an open world\nMySQL - \u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u57fa\u672c\u7684\u306a\u306a\u306b\u304b - Qiita\n\n[\u74b0\u5883\u69cb\u7bc9](http://qiita.com/opengl-8080/items/aeda0d8bad42af3113bd)\n[JPA \u306e\u57fa\u672c\u7684\u306a\u8a71](http://qiita.com/opengl-8080/items/e4840aa3e33b42ae0d6b)\n[\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u8a71](http://qiita.com/opengl-8080/items/265f9f66a65e966678cb)\n[Criteria API \u306e\u8a71](http://qiita.com/opengl-8080/items/6e3e03e4c90cd3d5e211)\n\n[\u30b3\u30fc\u30c9](https://github.com/opengl8080-javaee-samples/jpa)\n\n\n#JPQL \u3068\u306f\nJava Persistence Query Language \u306e\u7565\u3002\nJPA \u3067\u4f7f\u7528\u3067\u304d\u308b\u30af\u30a8\u30ea\u8a00\u8a9e\u3002\n\nSQL \u306b\u4f3c\u3066\u3044\u308b\u3051\u3069\u3001\u30af\u30a8\u30ea\u306e\u5bfe\u8c61\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u306f\u306a\u304f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3002\n\u691c\u7d22\u3067\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u540d\u3067\u306f\u306a\u304f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u540d\u3092\u6307\u5b9a\u3057\u3001\u30ab\u30e9\u30e0\u540d\u3067\u306f\u306a\u304f\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u307e\u305f\u3001\u691c\u7d22\u7d50\u679c\u306f\u30c6\u30fc\u30d6\u30eb\u306e\u30ec\u30b3\u30fc\u30c9\u3067\u306f\u306a\u304f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3084\u305d\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u53d6\u5f97\u3055\u308c\u308b\u3002\n\n\u6c7a\u3057\u3066\u3001\u300c\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u88fd\u54c1\u9593\u306e\u5dee\u7570\u3092\u5438\u53ce\u3057\u305f\u6a19\u6e96\u7684\u306a SQL\u300d<ins>\u3067\u306f\u306a\u3044</ins>\u3002\n\n\u300cJava \u3068 JavaScript \u3068\u306f\u4f3c\u3066\u308b\u3088\u3046\u3067\u5168\u7136\u5225\u306e\u8a00\u8a9e\u300d\u307f\u305f\u3044\u306a\u611f\u3058\u3002\n\n\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u691c\u7d22\u3084 CRUD \u304c\u884c\u3048\u308b\u3002\n\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u308b\u3054\u3068\u306b\u3001\u3061\u3087\u3063\u3068\u305a\u3064\u3067\u304d\u308b\u3053\u3068\u304c\u5897\u3048\u3066\u3044\u3063\u3066\u3044\u308b\u3002\n\n#\u57fa\u672c\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![javaee-jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/4e39e961-cd53-b736-79cb-e4dce97b31ea.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:Chen.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.NamedQuery;\n\n@Entity\n@NamedQuery(name = \"Chen.findAll\", query = \"SELECT c FROM Chen c\")\npublic class Chen {\n    @Id\n    private Long id;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"Chen{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/65aac82f-eaf2-6290-70ee-3f60ec85c23f.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/33d48345-b014-8391-f127-20ccaea9b43e.jpeg)\n\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\npackage sample.javaee.jpa.ejb;\n\nimport java.util.List;\nimport javax.ejb.Stateless;\nimport javax.persistence.EntityManager;\nimport javax.persistence.PersistenceContext;\nimport javax.persistence.TypedQuery;\nimport sample.javaee.jpa.entity.jpql.Chen;\n\n@Stateless\npublic class JpqlEjb {\n    \n    @PersistenceContext(unitName = \"SampleUnit\")\n    private EntityManager em;\n    \n    public void chen() {\n        TypedQuery<Chen> query = this.em.createNamedQuery(\"Chen.findAll\", Chen.class);\n        List<Chen> list = query.getResultList();\n        \n        System.out.println(list);\n    }\n}\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [Chen{id=1, value=hoge}, Chen{id=2, value=fuga}, Chen{id=3, value=piyo}]\n```\n\n##\u8aac\u660e\n###\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3059\u308b\n```java:Chen.java\n@Entity\n@NamedQuery(name = \"Chen.findAll\", query = \"SELECT c FROM Chen c\")\npublic class Chen {\n```\n\n- `@NamedQuery` \u3067\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3057\u3066\u3001\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n    - `name` \u5c5e\u6027\u3067\u30af\u30a8\u30ea\u306e\u540d\u524d\u3092\u8a2d\u5b9a\u3057\u3001 `query` \u5c5e\u6027\u306b\u30af\u30a8\u30ea\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n    - \u3053\u308c\u3092 **\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea** \u3068\u547c\u3076\u3002\n    - \u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u306f\u9759\u7684\u306a\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3059\u308b\u3002\n\n###\u30af\u30a8\u30ea\u306e\u69cb\u6587\n```sql:Chen\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5168\u3066\u53d6\u5f97\u3059\u308b\u30af\u30a8\u30ea\nSELECT c FROM Chen c\n```\n\n```sql:\u69cb\u6587\nSELECT <\u53d6\u5f97\u3059\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3084\u30d7\u30ed\u30d1\u30c6\u30a3> FROM <\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u540d> [AS] <\u5225\u540d>\n```\n\n- JPQL \u306e\u69cb\u6587\u306f\u3001\u57fa\u672c\u7684\u306b\u306f SQL \u3068\u540c\u3058\u5f62\u5f0f\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n- \u9055\u3046\u306e\u306f\u3001 `Chen` \u304c DB \u306e\u30c6\u30fc\u30d6\u30eb\u3067\u306f\u306a\u304f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u6307\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u70b9\u3002\n- SQL \u3067\u3044\u3046\u3068\u3053\u308d\u306e `*` \uff08\u30a2\u30b9\u30bf\u30ea\u30b9\u30af\uff09\u306f\u5b58\u5728\u3057\u306a\u3044\u3002\n- \u5fc5\u305a\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u5225\u540d\u3092\u5b9a\u7fa9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n    - \u5225\u540d\u3068\u3044\u3046\u3088\u308a\u3001\u901a\u5e38\u306e Java \u306e\u5b9f\u88c5\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3001\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u305f\u307b\u3046\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n    - \u3064\u307e\u308a\u3001 `Chen c;` \u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3001\u578b\u3068\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3066\u3044\u308b\u30a4\u30e1\u30fc\u30b8\u3002\n- JPQL \u3067\u306f\u3001\u90e8\u5206\u3054\u3068\u306b\u5927\u6587\u5b57\u5c0f\u6587\u5b57\u306e\u533a\u5225\u304c\u3055\u308c\u305f\u308a\u3055\u308c\u306a\u304b\u3063\u305f\u308a\u3059\u308b\u3002\n    - \u533a\u5225\u3055\u308c\u306a\u3044\u3002\n        - \u4e88\u7d04\u8a9e\u3002\n        - \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u5225\u540d\u3002\n    - \u533a\u5225\u3055\u308c\u308b\u3002\n        - \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u540d\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3002\n\n###\u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3059\u308b\n```java:JpqlEjb.java\n    TypedQuery<Chen> query = this.em.createNamedQuery(\"Chen.findAll\", Chen.class);\n    List<Chen> list = query.getResultList();\n```\n\n- \u30af\u30a8\u30ea\u3092\u4f7f\u7528\u3059\u308b\u304a\u304a\u307e\u304b\u306a\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n    - `EntityManager` \u3092\u4f7f\u3063\u3066 `Query` \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\u3002\n    - `Query` \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3001\u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3057\u3001\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3002\n- \u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001 `EntityManager` \u306e `createNamedQuery()` \u3092\u4f7f\u7528\u3059\u308b\u3002\n    - \u5f15\u6570\u306b `@NamedQuery` \u306e `name` \u3067\u8a2d\u5b9a\u3057\u305f\u30af\u30a8\u30ea\u306e\u540d\u524d\u3092\u6e21\u3059\u3002\n    - \u623b\u308a\u5024\u306e\u578b\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u5f15\u6570\u306b `Class` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3059\u3002\u3059\u308b\u3068\u3001 `Query` \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u7d99\u627f\u3057\u305f\u578b\u5b89\u5168\u306a `TypedQuery` \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n- \u30af\u30a8\u30ea\u7d50\u679c\u304c\u8907\u6570\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\u5834\u5408\u306f\u3001 `Query#getResultList()` \u3092\u4f7f\u7528\u3057\u3066 `List` \u3067\u7d50\u679c\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n#\u30af\u30a8\u30ea\u3092\u5916\u90e8\u30d5\u30a1\u30a4\u30eb\uff08XML\uff09\u3067\u5b9a\u7fa9\u3059\u308b\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/303f1f73-267c-e12c-ed6b-c12094f7e4c7.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:FujiwaranoMokou.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"fujiwarano_mokou\")\npublic class FujiwaranoMokou {\n    @Id\n    private Long id;\n\n    @Override\n    public String toString() {\n        return \"FujiwaranoMokou{\" + \"id=\" + id + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/db0ec9dc-8593-78fb-ee00-bdaf18215321.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/b83c1294-6292-9b3d-70af-a5cbc8e79852.jpeg)\n\n\n##\u57fa\u672c\n```xml:orm.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<entity-mappings version=\"2.1\"\n        xmlns=\"http://xmlns.jcp.org/xml/ns/persistence/orm\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence/orm\n                            http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd\">\n  <named-query name=\"FujiwaranoMokou.findAll\">\n    <query><![CDATA[\n     SELECT f\n       FROM FujiwaranoMokou f\n    ]]></query>\n  </named-query>\n</entity-mappings>\n```\n\n```text:orm.xml\u306e\u914d\u7f6e\u5834\u6240\n|-src/\n:  |-conf/\n:  |  |-persistence.xml\n:  |  `-orm.xml\n:  `-java/\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    TypedQuery<FujiwaranoMokou> query = this.em.createNamedQuery(\"FujiwaranoMokou.findAll\", FujiwaranoMokou.class);\n    \n    query.getResultList()\n         .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   FujiwaranoMokou{id=1}\n\u60c5\u5831:   FujiwaranoMokou{id=2}\n\u60c5\u5831:   FujiwaranoMokou{id=3}\n```\n\n- \u30de\u30c3\u30d4\u30f3\u30b0\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308c\u3070\u3001\u305d\u3053\u306b\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n    - \u30de\u30c3\u30d4\u30f3\u30b0\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u3001 `orm.xml` \u3068\u3044\u3046\u540d\u524d\u3067\u4f5c\u6210\u3059\u308b\u3002\n    - `orm.xml` \u306f\u3001 `WEB-INF/classes/META-INF/` \u306e\u4e0b\u306b\u914d\u5099\u3055\u308c\u308b\u3088\u3046\u306b\u914d\u7f6e\u3059\u308b\u3002\n    - `src/conf/` \u30d5\u30a9\u30eb\u30c0\u306f\u3001 GlassFish \u306e\u8a2d\u5b9a\u3067 `WEB-INF/classes/META-INF/` \u306e\u4e0b\u306b\u914d\u5099\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n##\u4efb\u610f\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u5b9a\u7fa9\u3059\u308b\n```xml:my_orm.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<entity-mappings version=\"2.1\"\n        xmlns=\"http://xmlns.jcp.org/xml/ns/persistence/orm\"\n        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n        xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence/orm\n                            http://xmlns.jcp.org/xml/ns/persistence/orm_2_1.xsd\">\n  <named-query name=\"FujiwaranoMokou.findAllOrderByIdDesc\">\n    <query><![CDATA[\n     SELECT f\n       FROM FujiwaranoMokou f\n   ORDER BY f.id DESC\n    ]]></query>\n  </named-query>\n</entity-mappings>\n```\n\n```text:my_orm.xml\u306e\u914d\u7f6e\u5834\u6240\n|-src/\n:  |-conf/\n:  |  |-persistence.xml\n:  |  `-orm.xml\n:  `-java/\n:     |-my_orm.xml\n:     :\n```\n\n```diff:persistence.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persistence version=\"2.1\" xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence                                  http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n  <persistence-unit name=\"SampleUnit\">\n    <jta-data-source>jdbc/Local_MySQL_test</jta-data-source>\n+   <mapping-file>my_orm.xml</mapping-file>\n    <properties>\n      \n      <property name=\"eclipselink.logging.level\" value=\"FINE\" />\n      <property name=\"eclipselink.logging.parameters\" value=\"true\"/>\n    </properties>\n  </persistence-unit>\n</persistence>\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"FujiwaranoMokou.findAllOrderByIdDesc\", FujiwaranoMokou.class);\n    \n    query.getResultList()\n         .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   FujiwaranoMokou{id=3}\n\u60c5\u5831:   FujiwaranoMokou{id=2}\n\u60c5\u5831:   FujiwaranoMokou{id=1}\n```\n\n- \u4efb\u610f\u306e\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3057\u305f\u3044\u5834\u5408\u306f\u3001 `persistence.xml` \u306b\u30de\u30c3\u30d4\u30f3\u30b0\u30d5\u30a1\u30a4\u30eb\u306e\u60c5\u5831\u3092\u8a18\u8ff0\u3059\u308b\u3002\n    - `<mapping-file>` \u30bf\u30b0\u3092\u4f7f\u7528\u3059\u308b\u3002\n    - `<mapping-file>` \u30bf\u30b0\u306f\u8907\u6570\u8a2d\u5b9a\u53ef\u80fd\u3002\n- \u30de\u30c3\u30d4\u30f3\u30b0\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u30af\u30e9\u30b9\u30d1\u30b9\u304c\u901a\u3063\u305f\u5834\u6240\u306b\u914d\u7f6e\u3059\u308b\u3002\n\n#\u52d5\u7684\u306b\u30af\u30a8\u30ea\u3092\u751f\u6210\u3059\u308b\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/180e61be-e32d-d0ff-c994-68db0cbe8b4c.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:AkiShizuha.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"aki_shizuha\")\npublic class AkiShizuha {\n    @Id\n    private Long id;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"AkiShizuha{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/cf7a0e6f-5c35-f63e-582e-172a21681195.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/df340547-808d-cdd7-cc65-09b8e870122d.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```java:JpqlEjb.java\n    TypedQuery<AkiShizuha> query = this.em.createQuery(\"SELECT a FROM AkiShizuha a\", AkiShizuha.class);\n    \n    query.getResultList()\n         .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   AkiShizuha{id=1, value=hoge}\n\u60c5\u5831:   AkiShizuha{id=2, value=fuga}\n\u60c5\u5831:   AkiShizuha{id=3, value=piyo}\n```\n\n- `EntityManager#createQuery(String, Class)` \u30e1\u30bd\u30c3\u30c9\u3067\u3001\u30af\u30a8\u30ea\u3092\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- \u3067\u3082\u3001\u52d5\u7684\u306b\u30af\u30a8\u30ea\u3092\u4f5c\u308a\u305f\u3044\u306a\u3089\u30af\u30e9\u30a4\u30c6\u30ea\u30a2 API \u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\uff08\u6587\u5b57\u5217\u3092\u30b4\u30ea\u30b4\u30ea\u9023\u7d50\u3055\u305b\u308b\u306e\u3067\u3001\u8aad\u307f\u306b\u304f\u304f\u306a\u308a\u30df\u30b9\u3082\u3057\u3084\u3059\u304f\u306a\u308b\u306e\u3067\uff09\u3002\n\n#\u691c\u7d22\u7d50\u679c\u3092\uff11\u4ef6\u3060\u3051\u53d6\u5f97\u3059\u308b\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/73872dbd-56ce-1199-7f5f-b8278bd29069.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:LilyWhite.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"lily_white\")\npublic class LilyWhite {\n    @Id\n    private Long id;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"LilyWhite{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/44e20393-5324-d4fa-93e6-c6ddd03b5e8b.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/0b5ee08d-cc7e-0645-c7e9-41459ee4e541.jpeg)\n\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:LilyWhite.findSingle\nSELECT l\n  FROM LilyWhite l\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    TypedQuery<LilyWhite> query = this.em.createNamedQuery(\"LilyWhite.findSingle\", LilyWhite.class);\n    LilyWhite lilyWhite = query.getSingleResult();\n    \n    System.out.println(lilyWhite);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   LilyWhite{id=1, value=hoge}\n```\n\n- \u691c\u7d22\u7d50\u679c\u304c\uff11\u4ef6\u3060\u3051\u306e\u5834\u5408\u306f\u3001 `Query#getSingleResult()` \u3092\u4f7f\u7528\u3059\u308b\u3002\n- \u3082\u3057\u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u8907\u6570\u4ef6\u53d6\u5f97\u3067\u304d\u305f\u5834\u5408\u306f `NonUniqueResultException` \u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\n- \u9006\u306b\uff11\u4ef6\u3082\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001 `NoResultException` \u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\n\n#\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3060\u3051\u3092\u53d6\u5f97\u3059\u308b\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/b30df199-1f07-da68-259e-b457f8406f7a.jpeg)\n\n**\u5b9f\u88c5\uff08\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\uff09**\n\n```java:AliceMargatroid.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"alice_margatroid\")\npublic class AliceMargatroid {\n    @Id\n    private Long id;\n    private String name;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"AliceMargatroid{\" + \"id=\" + id + \", name=\" + name + \", value=\" + value + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/a69ca2f6-d237-07f6-d74e-5976033d4b65.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/5ec34459-1d71-84e4-c26e-05a71c19ecc0.jpeg)\n\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:AliceMargatroid.getName\nSELECT a.name\n  FROM AliceMargatroid a\n```\n\n```sql:AliceMargatroid.getNameAndValue\nSELECT a.name\n      ,a.value\n  FROM AliceMargatroid a\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    TypedQuery<String> getNameQuery = this.em.createNamedQuery(\"AliceMargatroid.getName\", String.class);\n    List<String> names = getNameQuery.getResultList();\n    \n    System.out.println(names);\n    \n    \n    Query getNameAndValueQuery = this.em.createNamedQuery(\"AliceMargatroid.getNameAndValue\");\n    List<Object[]> list = getNameAndValueQuery.getResultList();\n    \n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [hoge, fuga, piyo]\n\u60c5\u5831:   [hoge, HOGE]\n\u60c5\u5831:   [fuga, FUGA]\n\u60c5\u5831:   [piyo, PIYO]\n```\n\n- JPQL \u4e0a\u3067\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u62bd\u51fa\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u30c9\u30c3\u30c8\u533a\u5207\u308a\uff08`.`\uff09\u3067\u8a18\u8ff0\u3059\u308b\uff08`c.name, c.value`\uff09\u3002\n- \u8907\u6570\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u9078\u629e\u3057\u305f\u5834\u5408\u3001 `Query` \u304c\u8fd4\u3059\u7d50\u679c\u306f `Object` \u306e\u914d\u5217\u306b\u306a\u308b\u3002\n- \u8907\u6570\u306e\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001 `@NamedQueries` \u3092\u4f7f\u3046\u3002\n\n#\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u95a2\u9023\u3092\u305f\u3069\u308b\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/cfeb4313-fdac-8dc0-d5b1-3ce58b6bdaba.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:LunasaPrismriver.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport java.util.List;\nimport javax.persistence.Entity;\nimport javax.persistence.FetchType;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.OneToMany;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"lunasa_prismriver\")\npublic class LunasaPrismriver {\n    @Id\n    private Long id;\n    \n    @JoinColumn(name = \"merlin_prismriver_id\")\n    private MerlinPrismriver merlinPrismriver;\n    \n    @OneToMany(fetch = FetchType.EAGER)\n    @JoinColumn(name = \"lunasa_prismriver_id\")\n    private List<LyricaPrismriver> lyricaPrismriverList;\n}\n```\n\n```java:MerlinPrismriver.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"merlin_prismriver\")\npublic class MerlinPrismriver {\n    @Id\n    private Long id;\n\n    @Override\n    public String toString() {\n        return \"MerlinPrismriver{\" + \"id=\" + id + '}';\n    }\n}\n```\n\n```java:LyricaPrismriver.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"lyrica_prismriver\")\npublic class LyricaPrismriver {\n    @Id\n    private Long id;\n\n    @Override\n    public String toString() {\n        return \"LyricaPrismriver{\" + \"id=\" + id + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/d9c16152-030e-e333-3e66-0c7a5a2b1de3.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/2d6e5a19-84cb-ee23-b5ec-cd210d4a8f87.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/a0c7832d-bef5-017f-06cf-5c8d7f22985d.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/418b3d3a-c843-e5cb-e66f-c618b80e2416.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/94095aab-72f3-1607-f2ef-c1ebe39e9da4.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:LunasaPrismriver.getMerlin\nSELECT l.merlinPrismriver\n  FROM LunasaPrismriver l\n```\n\n```sql:LunasaPrismriver.getLyrica\nSELECT l.lyricaPrismriverList\n  FROM LunasaPrismriver l\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    TypedQuery<MerlinPrismriver> q1 = this.em.createNamedQuery(\"LunasaPrismriver.getMerlin\", MerlinPrismriver.class);\n    List<MerlinPrismriver> l1 = q1.getResultList();\n    System.out.println(l1);\n    \n    TypedQuery<LyricaPrismriver> q2 = this.em.createNamedQuery(\"LunasaPrismriver.getLyrica\", LyricaPrismriver.class);\n    List<LyricaPrismriver> l2 = q2.getResultList();\n    System.out.println(l2);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [MerlinPrismriver{id=1}, MerlinPrismriver{id=2}, MerlinPrismriver{id=3}]\n\u60c5\u5831:   [LyricaPrismriver{id=1}, LyricaPrismriver{id=2}, LyricaPrismriver{id=3}, LyricaPrismriver{id=4}, LyricaPrismriver{id=5}, LyricaPrismriver{id=6}]\n```\n\n- `l.merlinPrismriver` \u306e\u3088\u3046\u306b\u3001\u30c9\u30c3\u30c8\u533a\u5207\u308a\u3067\u95a2\u9023\u3059\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- \u95a2\u9023\u3092\u8fbf\u308c\u308b\u306e\u306f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u307e\u305f\u306f\u7d44\u307f\u8fbc\u307f\u53ef\u80fd\u30af\u30e9\u30b9\u306b\u9650\u3089\u308c\u308b\u3002\n- \u7d50\u679c\u304c\u8907\u6570\u4ef6\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u5358\u4e00\u306e `List` \u306b\u307e\u3068\u3081\u3089\u308c\u3066\u7d50\u679c\u304c\u8fd4\u3055\u308c\u308b\uff08\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u5358\u4f4d\u306b\u307e\u3068\u3081\u3089\u308c\u305f\u308a\u306f\u3057\u306a\u3044\uff09\u3002\n\n#\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30d0\u30a4\u30f3\u30c9\n\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/8b9fdeda-c095-d700-4a00-4f7e63646396.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:YakumoRan.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport java.util.Date;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\nimport javax.persistence.Temporal;\nimport javax.persistence.TemporalType;\n\n@Entity\n@Table(name = \"yakumo_ran\")\npublic class YakumoRan {\n    @Id\n    private Long id;\n    @Temporal(TemporalType.DATE)\n    private Date date;\n\n    @Override\n    public String toString() {\n        return \"YakumoRan{\" + \"id=\" + id + \", date=\" + date + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/a131712a-8339-ba52-3fa2-b53a610b34b6.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/8077cb76-e430-be04-f145-ee2f3fc934f6.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:YakumoRan.findById\nSELECT y\n  FROM YakumoRan y\n WHERE y.id=:id\n```\n\n```sql:YakumoRan.findByDate\nSELECT y\n  FROM YakumoRan y\n WHERE y.date=:date\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    public void yakumoRan() {\n        TypedQuery<YakumoRan> query;\n        \n        query = this.em.createNamedQuery(\"YakumoRan.findById\", YakumoRan.class);\n        query.setParameter(\"id\", 2L);\n        System.out.println(query.getSingleResult());\n        \n        query = this.em.createNamedQuery(\"YakumoRan.findByDate\", YakumoRan.class);\n        query.setParameter(\"date\", this.createDate(\"2014-01-01\"), TemporalType.DATE);\n        System.out.println(query.getSingleResult());\n    }\n    \n    private Date createDate(String date) {\n        SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd\");\n        try {\n            return format.parse(date);\n        } catch (ParseException ex) {\n            throw new RuntimeException(ex);\n        }\n    }\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   YakumoRan{id=2, date=Thu Jan 01 00:00:00 JST 2015}\n\u60c5\u5831:   YakumoRan{id=1, date=Wed Jan 01 00:00:00 JST 2014}\n```\n\n- `:<\u540d\u524d>` \u3068\u3044\u3046\u5f62\u5f0f\u3067\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- \u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u306b\u306f\u3001 `Query` \u306e `setParameter()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3002\n- \u65e5\u4ed8\u578b\u306e\u5834\u5408\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306b `TemporalType` \u3092\u6e21\u3059\u3002\n\n\n#WHERE \u53e5\u3067\u6761\u4ef6\u3092\u7d5e\u308b\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/03ec6c11-f225-371f-0149-bcc7b401e1b8.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:KonpakuYoumu.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport java.util.List;\nimport javax.persistence.CollectionTable;\nimport javax.persistence.Column;\nimport javax.persistence.ElementCollection;\nimport javax.persistence.Entity;\nimport javax.persistence.FetchType;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"konpaku_youmu\")\npublic class KonpakuYoumu {\n    @Id\n    private Long id;\n    private int amount;\n    private String value;\n    @ElementCollection(fetch = FetchType.EAGER)\n    @CollectionTable(name = \"konpaku_youmu_list\", joinColumns = @JoinColumn(name = \"konpaku_youmu_id\"))\n    @Column(name = \"value\")\n    private List<String> list;\n\n    @Override\n    public String toString() {\n        return \"KonpakuYoumu{\" + \"id=\" + id + \", amount=\" + amount + \", value=\" + value + \", list=\" + list + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/004ae3c6-d0ba-9ab2-02ae-8bc01099b02b.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/887cd0ed-95c4-e5dd-6bf5-e0b52bd0dc55.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/434e6ed6-aad1-324a-577a-c51ffee17780.jpeg)\n\n##\u6bd4\u8f03\u6f14\u7b97\u5b50\n```sql:KonpakuYoumu.equal\nSELECT k\n  FROM KonpakuYoumu k\n WHERE k.amount = 10\n```\n\n```java:JpqlEjb.java\n    TypedQuery<KonpakuYoumu> query;\n    \n    query = this.em.createNamedQuery(\"KonpakuYoumu.equal\", KonpakuYoumu.class);\n    System.out.println(\"Equal (=) : \" + query.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   Equal (=) : KonpakuYoumu{id=1, amount=10, value=tokyo, list=[hoge, fuga, piyo]}\n```\n\n- SQL \u3068\u540c\u3058\u8981\u9818\u3067\u6bd4\u8f03\u6f14\u7b97\u5b50\uff08`=`, `<>`, `<`, `<=`, `>`, `>=`\uff09\u304c\u4f7f\u7528\u3067\u304d\u308b\u3002\n\n##\u8ad6\u7406\u6f14\u7b97\u5b50\n```sql:KonpakuYoumu.or\nSELECT k\n  FROM KonpakuYoumu k\n WHERE k.amount = 10\n    OR k.value = 'nagoya'\n```\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"KonpakuYoumu.or\", KonpakuYoumu.class);\n    System.out.println(\"OR : \" + query.getResultList());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   OR : [KonpakuYoumu{id=1, amount=10, value=tokyo, list=[hoge, fuga, piyo]}, KonpakuYoumu{id=3, amount=30, value=nagoya, list=[]}]\n```\n\n- SQL \u3068\u540c\u3058\u8981\u9818\u3067\u8ad6\u7406\u6f14\u7b97\u5b50\uff08`OR`, `AND`\uff09\u304c\u4f7f\u7528\u3067\u304d\u308b\u3002\n\n##BETWEEN\n```sql:KonpakuYoumu.between\nSELECT k\n  FROM KonpakuYoumu k\n WHERE k.amount BETWEEN 20 AND 30\n```\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"KonpakuYoumu.between\", KonpakuYoumu.class);\n    System.out.println(\"BETWEEN : \" + query.getResultList());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   BETWEEN : [KonpakuYoumu{id=2, amount=20, value=osaka, list=[fizz, buzz]}, KonpakuYoumu{id=3, amount=30, value=nagoya, list=[]}]\n```\n\n- SQL \u3068\u540c\u3058\u8981\u9818\u3067(ry \u3002\n- \u5426\u5b9a\u306f `NOT BETWEEN`\u3002\n\n##LIKE\n```sql:KonpakuYoumu.like\nSELECT k\n  FROM KonpakuYoumu k\n WHERE k.value LIKE '%a'\n```\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"KonpakuYoumu.like\", KonpakuYoumu.class);\n    System.out.println(\"LIKE : \" + query.getResultList());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   LIKE : [KonpakuYoumu{id=2, amount=20, value=osaka, list=[fizz, buzz]}, KonpakuYoumu{id=3, amount=30, value=nagoya, list=[]}]\n```\n\n- SQL \u3068(ry \u3002\n- \u4efb\u610f\u306e\u6587\u5b57\u5217\u306f `%`\u3002\u4efb\u610f\u306e\u6587\u5b57\u306f `_`\u3002\n- \u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u5834\u5408\u306f\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3092\u4f7f\u3046 `\\_`, `\\%`\u3002\n- \u5426\u5b9a\u306f `NOT LIKE` \u3002\n\n##IS NULL\n```sql:KonpakuYoumu.isNull\nSELECT k\n  FROM KonpakuYoumu k\n WHERE k.value IS NULL\n```\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"KonpakuYoumu.isNull\", KonpakuYoumu.class);\n    System.out.println(\"IS NULL : \" + query.getResultList());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   IS NULL : [KonpakuYoumu{id=4, amount=40, value=null, list=[]}]\n```\n\n- (ry \u3002\n- \u5426\u5b9a\u306f `IS NOT NULL` \u3002\n\n##IS EMPTY\n```sql:KonpakuYoumu.isEmpty\nSELECT k\n  FROM KonpakuYoumu k\n WHERE k.list IS EMPTY\n```\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"KonpakuYoumu.isEmpty\", KonpakuYoumu.class);\n    System.out.println(\"IS EMPTY : \" + query.getResultList());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   IS EMPTY : [KonpakuYoumu{id=3, amount=30, value=nagoya, list=[]}, KonpakuYoumu{id=4, amount=40, value=null, list=[]}]\n```\n\n- `IS EMPTY` \u306f\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5bfe\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u6f14\u7b97\u5b50\u3067\u3001\u305d\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u7a7a\u3067\u3042\u308b\u3053\u3068\u3092\u6761\u4ef6\u306b\u3067\u304d\u308b\u3002\n- \u5426\u5b9a\u306f `IS NOT EMPTY` \u3002\n\n##MEMBER OF\n```sql:KonpakuYoumu.memberOf\nSELECT k\n  FROM KonpakuYoumu k\n WHERE 'fizz' MEMBER OF k.list\n```\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"KonpakuYoumu.memberOf\", KonpakuYoumu.class);\n    System.out.println(\"MEMBER OF : \" + query.getResultList());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   MEMBER OF : [KonpakuYoumu{id=2, amount=20, value=osaka, list=[fizz, buzz]}]\n```\n\n- `MEMBER OF` \u306f\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u6307\u5b9a\u3057\u305f\u8981\u7d20\u3092\u6301\u3064\u304b\u3069\u3046\u304b\u3092\u6761\u4ef6\u306b\u3067\u304d\u308b\u3002\n- \u5de6\u8fba\u306b\u6761\u4ef6\u3068\u306a\u308b\u5024\u3092\u3001\u53f3\u8fba\u306b\u5bfe\u8c61\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6307\u5b9a\u3059\u308b\u3002\n- \u5426\u5b9a\u306f `NOT MEMBER OF` \u3002\n\n##EXISTS\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/f704470a-46e6-ed73-096e-566139858fcf.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:KawashiroNitori.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"kawashiro_nitori\")\npublic class KawashiroNitori {\n    @Id\n    private Long id;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"KawashiroNitori{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/a0b33a46-ecb1-4562-a161-d25a2e7ea5da.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/ab27e760-c036-462c-c1d6-0c269725232e.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:KawashiroNitori.exists\nSELECT k1\n  FROM KawashiroNitori k1\n WHERE EXISTS (\n       SELECT 1\n         FROM KawashiroNitori k2\n        WHERE k2.value = k1.value\n          AND k2.id <> k1.id\n  )\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    TypedQuery<KawashiroNitori> query = this.em.createNamedQuery(\"KawashiroNitori.exists\", KawashiroNitori.class);\n    \n    query.getResultList()\n         .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   KawashiroNitori{id=1, value=hoge}\n\u60c5\u5831:   KawashiroNitori{id=3, value=hoge}\n\u60c5\u5831:   KawashiroNitori{id=4, value=piyo}\n\u60c5\u5831:   KawashiroNitori{id=5, value=piyo}\n```\n\n- SQL \u3068\u540c\u3058\u611f\u3058\u3067 `EXISTS` \u304c\u4f7f\u3048\u308b\u3002\n- \u5426\u5b9a\u306f `NOT EXISTS` \u3002\n\n##IN, ANY(SOME), ALL\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/84f5580b-8101-dd2b-a15f-a330bef0c1db.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:InubashiriMomiji.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"inubashiri_momiji\")\npublic class InubashiriMomiji {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"InubashiriMomiji{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n```\n\n```java:KochiyaSanae.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"kochiya_sanae\")\npublic class KochiyaSanae {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"KochiyaSanae{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/6ecd047d-1980-3bd1-e271-04eee31c269c.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/f486ad7c-dfe5-56b1-4885-55d82b6df960.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/a2723bb1-de8e-4e57-f393-c210121f183f.jpeg)\n\n###IN\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:InubashiriMomiji.in\nSELECT i\n  FROM InubashiriMomiji i\n WHERE i.number IN (111, 333)\n```\n\n```sql:InubashiriMomiji.inSubquery\nSELECT i\n  FROM InubashiriMomiji i\n WHERE i.number IN (\n       SELECT k.number\n         FROM KochiyaSanae k\n )\n```\n\n```sql:InubashiriMomiji.inParameter\nSELECT i\n  FROM InubashiriMomiji i\n WHERE i.number IN :inParam\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    TypedQuery<InubashiriMomiji> query;\n    \n    query = this.em.createNamedQuery(\"InubashiriMomiji.in\", InubashiriMomiji.class);\n    System.out.println(\"<<InubashiriMomiji.in>>\");\n    query.getResultList()\n         .forEach(System.out::println);\n    \n    query = this.em.createNamedQuery(\"InubashiriMomiji.inSubquery\", InubashiriMomiji.class);\n    System.out.println(\"<<InubashiriMomiji.inSubquery>>\");\n    query.getResultList()\n         .forEach(System.out::println);\n    \n    query = this.em.createNamedQuery(\"InubashiriMomiji.inParameter\", InubashiriMomiji.class);\n    System.out.println(\"<<InubashiriMomiji.inParameter>>\");\n    query.setParameter(\"inParam\", Arrays.asList(222, 333));\n    query.getResultList()\n         .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   <<InubashiriMomiji.in>>\n\u60c5\u5831:   InubashiriMomiji{id=1, number=111}\n\u60c5\u5831:   InubashiriMomiji{id=3, number=333}\n\n\u60c5\u5831:   <<InubashiriMomiji.inSubquery>>\n\u60c5\u5831:   InubashiriMomiji{id=1, number=111}\n\u60c5\u5831:   InubashiriMomiji{id=2, number=222}\n\n\u60c5\u5831:   <<InubashiriMomiji.inParameter>>\n\u60c5\u5831:   InubashiriMomiji{id=2, number=222}\n\u60c5\u5831:   InubashiriMomiji{id=3, number=333}\n```\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/f486ad7c-dfe5-56b1-4885-55d82b6df960.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/a2723bb1-de8e-4e57-f393-c210121f183f.jpeg)\n\n- SQL \u3068\u540c\u3058\u3088\u3046\u306b IN \u53e5\u304c\u4f7f\u3048\u308b\u3002\n- \u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066 `List` \u3092\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n###ANY\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:InubashiriMomiji.any\nSELECT i\n  FROM InubashiriMomiji i\n WHERE i.number < ANY (\n       SELECT k.number\n         FROM KochiyaSanae k\n )\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"InubashiriMomiji.any\", InubashiriMomiji.class);\n    query.getResultList()\n         .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   InubashiriMomiji{id=1, number=111}\n\u60c5\u5831:   InubashiriMomiji{id=2, number=222}\n```\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/f486ad7c-dfe5-56b1-4885-55d82b6df960.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/a2723bb1-de8e-4e57-f393-c210121f183f.jpeg)\n\n- SQL \u3068\u540c\u3058\u611f\u3058\u3067 ANY \u304c\u4f7f\u3048\u308b\u3002\n- \u305f\u3060\u3057\u3001\u6761\u4ef6\u306b\u6307\u5b9a\u3067\u304d\u308b\u306e\u306f\u30b5\u30d6\u30af\u30a8\u30ea\u306e\u307f\u3002\n- ANY \u306e\u5909\u308f\u308a\u306b SOME \u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u308b\uff08\u52d5\u304d\u306f\u540c\u3058\uff09\u3002\n\n###ALL\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:InubashiriMomiji.all\nSELECT i\n  FROM InubashiriMomiji i\n WHERE i.number > ALL (\n       SELECT k.number\n         FROM KochiyaSanae k\n )\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"InubashiriMomiji.all\", InubashiriMomiji.class);\n    query.getResultList()\n         .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   InubashiriMomiji{id=3, number=333}\n\u60c5\u5831:   InubashiriMomiji{id=4, number=444}\n```\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/f486ad7c-dfe5-56b1-4885-55d82b6df960.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/a2723bb1-de8e-4e57-f393-c210121f183f.jpeg)\n\n- ANY \u540c\u69d8\u306b ALL \u3082\u4f7f\u3048\u308b\u3002\n- \u3053\u3061\u3089\u3082\u3001\u6761\u4ef6\u306b\u6307\u5b9a\u3067\u304d\u308b\u306e\u306f\u30b5\u30d6\u30af\u30a8\u30ea\u306e\u307f\u3002\n\n#\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u500b\u3005\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53c2\u7167\u3059\u308b\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3068\u30c6\u30fc\u30d6\u30eb\u304c\u5b58\u5728\u3057\u305f\u3068\u3059\u308b\u3002\n\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/da4b8455-0924-8bef-a024-01d4ae993c8c.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:WriggleNightbug.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport java.util.List;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"wriggle_nightbug\")\npublic class WriggleNightbug {\n    @Id\n    private Long id;\n    @JoinColumn(name = \"wriggle_nightbug_id\")\n    private List<MystiaLorelei> mystiaLoreleiList;\n\n    @Override\n    public String toString() {\n        return \"WriggleNightbug{\" + \"id=\" + id + \", mystiaLoreleiList=\" + mystiaLoreleiList + '}';\n    }\n}\n```\n\n```java:MystiaLorelei.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"mystia_lorelei\")\npublic class MystiaLorelei {\n    @Id\n    private Long id;\n\n    @Override\n    public String toString() {\n        return \"MystiaLorelei{\" + \"id=\" + id + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/c7d08b37-f25a-fb82-cfc1-89addb9616a4.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/108d96b3-7ae9-900d-1602-9bafb5279887.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/560b754a-7a47-1c47-79ae-bd3c5bc26fec.jpeg)\n\n`MystiaLorelei` \u306f\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066 `WriggleNightbug` \u304b\u3089\u53c2\u7167\u3055\u308c\u3066\u3044\u308b\uff08`mystiaLoreleiList`\uff09\u3002\n\u3053\u3053\u3067\u3001 `WriggleNightbug` \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u6301\u3064 `mystiaLoreleiList` \u306e\u5404 `ID` \u3060\u3051\u3092\u62bd\u51fa\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a JPQL \u3092\u66f8\u3044\u305f\u3068\u3059\u308b\u3002\n\n```sql:\nSELECT w.mystiaLoreleiList.id\n  FROM WriggleNightbug w\n```\n\n\u3053\u306e JPQL \u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u3001\u30b5\u30fc\u30d0\u30fc\u8d77\u52d5\u6642\u306b\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3002\n\n```text:\u4f8b\u5916\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\nInternal Exception: Exception [EclipseLink-0] (Eclipse Persistence Services - 2.5.2.v20140319-9ad6abd): org.eclipse.persistence.exceptions.JPQLException\nException Description: Problem compiling [SELECT w.mystiaLoreleiList.id FROM WriggleNightbug w]. \n[7, 29] The state field path 'w.mystiaLoreleiList.id' cannot be resolved to a valid type.\n```\n\n\u554f\u984c\u304c\u3042\u308b\u306e\u306f `w.mystiaLoreleiList.id` \u306e\u90e8\u5206\u3002\n\n\u4e00\u898b\u3046\u307e\u304f\u3044\u304d\u305d\u3046\u306b\u898b\u3048\u308b\u304c\u3001\u3088\u304f\u8003\u3048\u308b\u3068 `w.mystiaLoreleiList` \u306e\u578b\u306f `List` \u306a\u306e\u3067\u3001 `id` \u306a\u3093\u3066\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u53c2\u7167\u3067\u304d\u306a\u3044\u3002\n\u3053\u306e\u305f\u3081\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u3002\n\n\u6b63\u3057\u304f\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b JPQL \u3092\u8a18\u8ff0\u3059\u308b\u3002\n\n```sql:\nSELECT mystiaLorelei.id\n  FROM WriggleNightbug w\n      ,IN(w.mystiaLoreleiList) mystiaLorelei\n```\n\n`IN(<\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30d7\u30ed\u30d1\u30c6\u30a3>) <\u5225\u540d>` \u3068\u3044\u3046\u5f62\u3067\u3001 `FROM` \u53e5\u306e\u4e2d\u306b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u500b\u3005\u306e\u8981\u7d20\u3092\u53c2\u7167\u3059\u308b\u305f\u3081\u306e\u5225\u540d\u3092\u5ba3\u8a00\u3059\u308b\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u5ba3\u8a00\u3057\u305f\u5225\u540d\u3067\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5404\u8981\u7d20\u306b\u5bfe\u3057\u3066\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u53c2\u7167\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:WriggleNightbug.inQuery\nSELECT mystiaLorelei.id\n  FROM WriggleNightbug w\n      ,IN(w.mystiaLoreleiList) mystiaLorelei\n WHERE w.id = 1\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    Query query = this.em.createNamedQuery(\"WriggleNightbug.inQuery\");\n    System.out.println(query.getResultList());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [1, 2, 3]\n```\n\n##INNER JOIN \u3067\u7f6e\u304d\u63db\u3048\u308b\n`IN` \u3092\u4f7f\u3063\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u8981\u7d20\u306e\u53c2\u7167\u306f\u3001 `INNER JOIN` \u3092\u4f7f\u3063\u305f\u8a18\u8ff0\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:WriggleNightbug.innerJoin\n    SELECT mystiaLorelei.id\n      FROM WriggleNightbug w\nINNER JOIN w.mystiaLoreleiList mystiaLorelei\n     WHERE w.id = 1\n```\n\n\n#\u7d44\u307f\u8fbc\u307f\u306e\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\n##\u6587\u5b57\u5217\u64cd\u4f5c\u7528\u306e\u95a2\u6570\n\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/eb023b54-d1dc-d24d-08b7-26a494ad5b29.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:YakumoYukari.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"yakumo_yukari\")\npublic class YakumoYukari {\n    @Id\n    private Long id;\n    \n    private String string;\n\n    @Override\n    public String toString() {\n        return \"YakumoYukari{\" + \"id=\" + id + \", string=\" + string + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/664b9c6a-34a6-58ed-2b77-a243316a7a23.jpeg)\n\n###\u9023\u7d50\u3059\u308b\uff08CONCAT\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:YakumoYukari.concat\nSELECT CONCAT('<<', y.string, '>>')\n  FROM YakumoYukari y\n WHERE y.id=1\n```\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/65a51079-3e58-8657-455e-1972d2aa13c2.jpeg)\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    TypedQuery<String> queryStr;\n    \n    queryStr = this.em.createNamedQuery(\"YakumoYukari.concat\", String.class);\n    System.out.println(queryStr.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   <<hoge>>\n```\n\n- `CONCAT` \u95a2\u6570\u3067\u3001\u6587\u5b57\u5217\u3092\u9023\u7d50\u3067\u304d\u308b\u3002\n\n###\u62bd\u51fa\u3059\u308b\uff08SUBSTRING\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:YakumoYukari.substringStart\nSELECT SUBSTRING(y.string, 3)\n  FROM YakumoYukari y\n WHERE y.id=4\n```\n\n```sql:YakumoYukari.substringStartLength\nSELECT SUBSTRING(y.string, 3, 2)\n  FROM YakumoYukari y\n WHERE y.id=4\n```\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/d9df5db9-1f9a-c34c-abd1-be551ed5d9cb.jpeg)\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    queryStr = this.em.createNamedQuery(\"YakumoYukari.substringStart\", String.class);\n    System.out.println(queryStr.getSingleResult());\n    \n    queryStr = this.em.createNamedQuery(\"YakumoYukari.substringStartLength\", String.class);\n    System.out.println(queryStr.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   3456\n\u60c5\u5831:   34\n```\n\n- `SUBSTRING(<\u5bfe\u8c61\u6587\u5b57\u5217>, <\u958b\u59cb\u30a4\u30f3\u30c7\u30c3\u30af\u30b9>[, <\u62bd\u51fa\u6587\u5b57\u6570>])` \u3067\u6587\u5b57\u5217\u306e\u4e00\u90e8\u3092\u62bd\u51fa\u3067\u304d\u308b\u3002\n\n###\u30c8\u30ea\u30e0\u3059\u308b\uff08TRIM\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:YakumoYukari.trimDefault\nSELECT TRIM(y.string)\n  FROM YakumoYukari y\n WHERE y.id=2\n```\n\n```sql:YakumoYukari.trimLeading\nSELECT TRIM(LEADING FROM y.string)\n  FROM YakumoYukari y\n WHERE y.id=2\n```\n\n```sql:YakumoYukari.trimAsterisk\nSELECT TRIM(TRAILING '*' FROM y.string)\n  FROM YakumoYukari y\n WHERE y.id=3\n```\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/c8e522d6-2b7d-1ab6-3a1b-dda576a64296.jpeg)\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    queryStr = this.em.createNamedQuery(\"YakumoYukari.trimDefault\", String.class);\n    System.out.println(\"[\" + queryStr.getSingleResult() + \"]\");\n    \n    queryStr = this.em.createNamedQuery(\"YakumoYukari.trimLeading\", String.class);\n    System.out.println(\"[\" + queryStr.getSingleResult() + \"]\");\n    \n    queryStr = this.em.createNamedQuery(\"YakumoYukari.trimAsterisk\", String.class);\n    System.out.println(\"[\" + queryStr.getSingleResult() + \"]\");\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [fuga]\n\u60c5\u5831:   [fuga  ]\n\u60c5\u5831:   [**piyo]\n```\n\n- `TRIM()` \u95a2\u6570\u3067\u3001\u6587\u5b57\u306e\u30c8\u30ea\u30e0\u304c\u3067\u304d\u308b\u3002\n- \u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u3001\u5de6\u53f3\u306e\u30b9\u30da\u30fc\u30b9\u304c\u30c8\u30ea\u30e0\u3055\u308c\u308b\u3002\n- \u524d\u65b9\u3060\u3051\u3092\u30c8\u30ea\u30e0\u3059\u308b\u5834\u5408\u306f\u3001 `LEADING FROM` \u3092\u4ed8\u3051\u308b\u3002\n    - \u5f8c\u65b9\u3060\u3051\u3092\u30c8\u30ea\u30e0\u3059\u308b\u5834\u5408\u306f\u3001 `TRAILING FROM` \u3092\u4ed8\u3051\u308b\u3002\n    - \u524d\u3068\u5f8c\u308d\u4e21\u65b9\u3092\u30c8\u30ea\u30e0\u3059\u308b\u5834\u5408\u306f\u3001 `BOTH FROM` \u3092\u4ed8\u3051\u308b\u3002\n- \u30c8\u30ea\u30e0\u3059\u308b\u6587\u5b57\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001 `'<\u30c8\u30ea\u30e0\u3059\u308b\u6587\u5b57>' FROM` \u3092\u4ed8\u3051\u308b\u3002\n- \u4e21\u65b9\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u3001 `TRAILING '*' FROM` \u306e\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3002\n\n###\u5927\u6587\u5b57\u30fb\u5c0f\u6587\u5b57\u306b\u3059\u308b\uff08UPPER, LOWER\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:YakumoYukari.lower\nSELECT LOWER(y.string)\n  FROM YakumoYukari y\n WHERE y.id=5\n```\n\n```sql:YakumoYukari.upper\nSELECT UPPER(y.string)\n  FROM YakumoYukari y\n WHERE y.id=5\n```\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/7839d48c-88a6-aa93-8984-786a33ea1899.jpeg)\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    queryStr = this.em.createNamedQuery(\"YakumoYukari.lower\", String.class);\n    System.out.println(queryStr.getSingleResult());\n    \n    queryStr = this.em.createNamedQuery(\"YakumoYukari.upper\", String.class);\n    System.out.println(queryStr.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   fizzbuzz\n\u60c5\u5831:   FIZZBUZZ\n```\n\n- `LOWER()` \u3067\u5c0f\u6587\u5b57\u306b\u3001 `UPPER()` \u3067\u5927\u6587\u5b57\u306b\u5909\u63db\u3067\u304d\u308b\u3002\n\n###\u6587\u5b57\u6570\u3092\u53d6\u5f97\u3059\u308b\uff08LENGTH\uff09\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:YakumoYukari.length\nSELECT LENGTH(y.string)\n  FROM YakumoYukari y\n WHERE y.id=1\n```\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/2bdde9d6-2362-dc68-c279-266eff6e0d7e.jpeg)\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    queryInt = this.em.createNamedQuery(\"YakumoYukari.length\", Integer.class);\n    System.out.println(queryInt.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   4\n```\n\n- `LENGTH()` \u3067\u6587\u5b57\u5217\u306e\u6587\u5b57\u6570\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n###\u6307\u5b9a\u3057\u305f\u6587\u5b57\u304c\u4f4d\u7f6e\u3059\u308b\u5834\u6240\u3092\u53d6\u5f97\u3059\u308b\uff08LOCATE\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:YakumoYukari.locate\nSELECT LOCATE('cd', y.string)\n  FROM YakumoYukari y\n WHERE y.id=6\n```\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/b7ab6945-4b6e-37ee-ebe4-830f6cb7d6a3.jpeg)\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    queryInt = this.em.createNamedQuery(\"YakumoYukari.locate\", Integer.class);\n    System.out.println(queryInt.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   3\n```\n\n- `LOCATE(<\u691c\u7d22\u3059\u308b\u6587\u5b57\u5217>, <\u691c\u7d22\u5bfe\u8c61\u306e\u6587\u5b57\u5217>)` \u3067\u3001\u305d\u306e\u6587\u5b57\u306e\u958b\u59cb\u4f4d\u7f6e\uff08\uff11\u59cb\u307e\u308a\uff09\u3092\u53d6\u5f97\u3067\u304d\u308b\uff08`indexOf()` \u7684\u306a\uff09\u3002\n- \u7b2c\u4e09\u5f15\u6570\u306b\u691c\u7d22\u5bfe\u8c61\u306e\u958b\u59cb\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n##\u7b97\u8853\u95a2\u6570\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/ac37a17e-2902-7b8d-a89f-9b663c9f9b46.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:IbukiSuika.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport java.util.List;\nimport javax.persistence.CollectionTable;\nimport javax.persistence.Column;\nimport javax.persistence.ElementCollection;\nimport javax.persistence.Entity;\nimport javax.persistence.FetchType;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.OrderColumn;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"ibuki_suika\")\npublic class IbukiSuika {\n    @Id\n    private Long id;\n    private double number;\n    @ElementCollection(fetch = FetchType.EAGER)\n    @CollectionTable(name = \"ibuki_suika_list\", joinColumns = @JoinColumn(name = \"ibuki_suika_id\"))\n    @Column(name = \"value\")\n    @OrderColumn(name = \"order\")\n    private List<String> list;\n\n    @Override\n    public String toString() {\n        return \"IbukiSuika{\" + \"id=\" + id + \", number=\" + number + \", list=\" + list + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/73ceb4f8-b630-1b8f-f0c7-040319229cb5.jpeg)\n\n###\u7d76\u5bfe\u5024\u3092\u53d6\u5f97\u3059\u308b\uff08ABS\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:IbukiSuika.abs\nSELECT ABS(i.number)\n  FROM IbukiSuika i\n WHERE i.id=1\n```\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/09df2d39-b1f0-e08e-4d52-171659c956ac.jpeg)\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    Query query = this.em.createNamedQuery(\"IbukiSuika.abs\");\n    System.out.println(query.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   10.2\n```\n\n- `ABS()` \u95a2\u6570\u3092\u4f7f\u3046\u3068\u3001\u7d76\u5bfe\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n###\u5e73\u65b9\u6839\u3092\u53d6\u5f97\u3059\u308b\uff08SQRT\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:IbukiSuika.sqrt\nSELECT SQRT(i.number)\n  FROM IbukiSuika i\n WHERE i.id=2\n```\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/0e63638c-e8f6-8300-cc14-14fc8b794855.jpeg)\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"IbukiSuika.sqrt\");\n    System.out.println(query.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   5.0\n```\n\n- `SQRT()` \u95a2\u6570\u3092\u4f7f\u3046\u3068\u3001\u5e73\u65b9\u6839\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n###\u5546\u306e\u4f59\u308a\u3092\u53d6\u5f97\u3059\u308b\uff08MOD\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:IbukiSuika.mod\nSELECT MOD(i.number, 5)\n  FROM IbukiSuika i\n WHERE i.id=3\n```\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/6beeb851-50de-83ec-ec15-8f79854e66a3.jpeg)\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"IbukiSuika.mod\");\n    System.out.println(query.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   2\n```\n\n- `MOD()` \u95a2\u6570\u3067\u3001\u5546\u306e\u4f59\u308a\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n###\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\uff08SIZE\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:IbukiSuika.size\nSELECT SIZE(i.list)\n  FROM IbukiSuika i\n WHERE i.id=4\n```\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/61783262-ca9e-e073-2cf7-d7abab10e2d5.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/04cf20c2-2e98-7576-1968-4c8c4a9d9d92.jpeg)\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"IbukiSuika.size\");\n    System.out.println(query.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   3\n```\n\n- `SIZE()` \u95a2\u6570\u3092\u4f7f\u3046\u3068\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n###\u30ea\u30b9\u30c8\u306e\u30bd\u30fc\u30c8\u9806\u5e8f\u3092\u6761\u4ef6\u306b\u4f7f\u7528\u3059\u308b\uff08INDEX\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:IbukiSuika.index\nSELECT l\n  FROM IbukiSuika i\n      ,IN(i.list) l\n WHERE i.id=4\n   AND INDEX(l) = 1\n```\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/04cf20c2-2e98-7576-1968-4c8c4a9d9d92.jpeg)\n\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"IbukiSuika.index\");\n    System.out.println(query.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   fuga\n```\n\n- `INDEX()` \u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u30ea\u30b9\u30c8\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff08`@OrderColumn` \u3067\u6307\u5b9a\u3057\u305f\u30ab\u30e9\u30e0\u306e\u5024\uff09\u3092\u691c\u7d22\u6761\u4ef6\u306b\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n##\u65e5\u4ed8\u95a2\u6570\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:KamishirasawaKeine.currentDate\nSELECT CURRENT_DATE\n  FROM KamishirasawaKeine k\n WHERE k.id=1\n```\n\n```sql:KamishirasawaKeine.currentTime\nSELECT CURRENT_TIME\n  FROM KamishirasawaKeine k\n WHERE k.id=1\n```\n\n```sql:KamishirasawaKeine.currentTimestamp\nSELECT CURRENT_TIMESTAMP\n  FROM KamishirasawaKeine k\n WHERE k.id=1\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    Query query = this.em.createNamedQuery(\"KamishirasawaKeine.currentDate\");\n    Object result = query.getSingleResult();\n    System.out.println(\"class = \" + result.getClass() + \", value = \" + result);\n    \n    query = this.em.createNamedQuery(\"KamishirasawaKeine.currentTime\");\n    result = query.getSingleResult();\n    System.out.println(\"class = \" + result.getClass() + \", value = \" + result);\n    \n    query = this.em.createNamedQuery(\"KamishirasawaKeine.currentTimestamp\");\n    result = query.getSingleResult();\n    System.out.println(\"class = \" + result.getClass() + \", value = \" + result);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   class = class java.sql.Date, value = 2015-03-09\n\u60c5\u5831:   class = class java.sql.Time, value = 23:24:27\n\u60c5\u5831:   class = class java.sql.Timestamp, value = 2015-03-09 23:24:27.0\n```\n\n- `CURRENT_DATE`, `CURRENT_TIME`, `CURRENT_TIMESTAMP` \u3067\u3001\u305d\u308c\u305e\u308c\u5b9f\u884c\u6642\u306e\u65e5\u4ed8\u30fb\u6642\u523b\u30fb\u65e5\u6642\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n##\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u578b\u3092\u691c\u7d22\u306e\u6761\u4ef6\u3067\u4f7f\u7528\u3059\u308b\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/114349be-6ee6-dba5-5fa8-a72198382cea.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:ReisenUdongeinInaba.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"reisen_udongein_inaba\")\npublic class ReisenUdongeinInaba {\n    @Id\n    private Long id;\n    @JoinColumn(name = \"inaba_tewi_id\")\n    private ParentInabaTewi inabaTewi;\n\n    @Override\n    public String toString() {\n        return \"ReisenUdongeinInaba{\" + \"id=\" + id + \", inabaTewi=\" + inabaTewi + '}';\n    }\n}\n```\n\n```java:ParentInabaTewi.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"inaba_tewi\")\npublic class ParentInabaTewi {\n    @Id\n    protected Long id;\n\n    @Override\n    public String toString() {\n        return \"ParentInabaTewi{\" + \"id=\" + id + '}';\n    }\n}\n```\n\n```java:ChildInabaTewi.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\n\n@Entity\npublic class ChildInabaTewi extends ParentInabaTewi {\n\n    @Override\n    public String toString() {\n        return \"ChildInabaTewi{\" + \"id=\" + id + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/1c08a7ad-c574-7fd5-63f2-ecaaab676de7.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/fd392adc-fe48-53bb-167c-d9d36697e974.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/2dbe6705-8b28-8cfa-be24-8c7284140fe1.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:ReisenUdongeinInaba.parent\nSELECT r\n  FROM ReisenUdongeinInaba r\n WHERE TYPE(r.inabaTewi) = ParentInabaTewi\n```\n\n```sql:ReisenUdongeinInaba.child\nSELECT r\n  FROM ReisenUdongeinInaba r\n WHERE TYPE(r.inabaTewi) = ChildInabaTewi\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    Query query = this.em.createNamedQuery(\"ReisenUdongeinInaba.parent\");\n    System.out.println(query.getSingleResult());\n    \n    query = this.em.createNamedQuery(\"ReisenUdongeinInaba.child\");\n    System.out.println(query.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   ReisenUdongeinInaba{id=1, inabaTewi=ParentInabaTewi{id=1}}\n\u60c5\u5831:   ReisenUdongeinInaba{id=2, inabaTewi=ChildInabaTewi{id=2}}\n```\n\n- `TYPE()` \u95a2\u6570\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u578b\u3092\u53d6\u5f97\u3057\u3001\u691c\u7d22\u6761\u4ef6\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3002\n\n##\u96c6\u7d04\u95a2\u6570\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/41f580c9-bda5-cfb6-bd2a-942d5e0e722b.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:HouraisanKaguya.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"houraisan_kaguya\")\npublic class HouraisanKaguya {\n    @Id\n    private Long id;\n    private String string;\n    private short number;\n}\n```\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/761b47c6-805d-dff5-8df4-228656769e21.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/3a3294c6-f925-f9de-b33b-b99f14474d36.jpeg)\n\n###\u30ec\u30b3\u30fc\u30c9\u6570\u3092\u53d6\u5f97\u3059\u308b\uff08COUNT\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:HouraisanKaguya.count\nSELECT COUNT(h)\n  FROM HouraisanKaguya h\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    public void houraisanKaguya() {\n        Query query = this.em.createNamedQuery(\"HouraisanKaguya.count\");\n        this.print(\"count\", query);\n    }\n\n    private void print(String tag, Query query) {\n        Object result = query.getSingleResult();\n        System.out.println(tag + \" : \" + result + \", class : \" + result.getClass());\n    }\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   count : 4, class : class java.lang.Long\n```\n\n- `COUNT()` \u95a2\u6570\u3067\u3001\u30ec\u30b3\u30fc\u30c9\u306e\u4ef6\u6570\u3092\u53d6\u5f97\u3059\u308b\u3002\n- \u30ec\u30b3\u30fc\u30c9\u3092\uff11\u4ef6\u3082\u53d6\u5f97\u3067\u304d\u306a\u3044\u5834\u5408\u306f `0` \u304c\u8fd4\u3055\u308c\u308b\u3002\n- \u578b\u306f `Long`\u3002\n\n###\u6700\u5927\u30fb\u6700\u5c0f\u3092\u53d6\u5f97\u3059\u308b\uff08MAX, MIN\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:HouraisanKaguya.stringMax\nSELECT MAX(h.string)\n  FROM HouraisanKaguya h\n```\n\n```sql:HouraisanKaguya.numberMax\nSELECT MAX(h.number)\n  FROM HouraisanKaguya h\n```\n\n```sql:HouraisanKaguya.min\nSELECT MIN(h.number)\n  FROM HouraisanKaguya h\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"HouraisanKaguya.stringMax\");\n    this.print(\"stringMax\", query);\n    \n    query = this.em.createNamedQuery(\"HouraisanKaguya.numberMax\");\n    this.print(\"numberMax\", query);\n    \n    query = this.em.createNamedQuery(\"HouraisanKaguya.min\");\n    this.print(\"min\", query);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   stringMax : ddd, class : class java.lang.String\n\u60c5\u5831:   numberMax : 40, class : class java.lang.Short\n\u60c5\u5831:   min : 10, class : class java.lang.Short\n```\n\n- `MAX()`, `MIN()` \u95a2\u6570\u3067\u3001\u6700\u5927\u5024\u3068\u6700\u5c0f\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n- \u578b\u306f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u8a72\u5f53\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5bfe\u5fdc\u3059\u308b\u578b\u306b\u5909\u63db\u3055\u308c\u308b\uff08\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u4e38\u3081\u3089\u308c\u308b\uff09\u3002\n    - `HouraisanKaguya#number` \u306f `short` \u578b\u3067\u5ba3\u8a00\u3057\u3066\u3044\u308b\u306e\u3067\u3001 DB \u306e\u5024\u304c\u5b9f\u6570\u5024\u3067\u3042\u3063\u3066\u3082 `java.lang.Short` \u306b\u5909\u63db\u3055\u308c\u3066\u3044\u308b\u3002\n\n###\u5e73\u5747\u5024\u3092\u53d6\u5f97\u3059\u308b\uff08AVG\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:HouraisanKaguya.avg\nSELECT AVG(h.number)\n  FROM HouraisanKaguya h\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"HouraisanKaguya.avg\");\n    this.print(\"avg\", query);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   avg : 26.0, class : class java.lang.Double\n```\n\n- `AVG()` \u95a2\u6570\u3067\u3001\u5e73\u5747\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n- \u578b\u306f `Double`\u3002\n\n###\u5408\u8a08\u5024\u3092\u53d6\u5f97\u3059\u308b\uff08SUM\uff09\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:HouraisanKaguya.sum\nSELECT SUM(h.number)\n  FROM HouraisanKaguya h\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"HouraisanKaguya.sum\");\n    this.print(\"sum\", query);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   sum : 104, class : class java.lang.Long\n```\n\n- `SUM()` \u95a2\u6570\u3067\u3001\u5408\u8a08\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n- \u53d6\u5f97\u3055\u308c\u308b\u5024\u306f\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u578b\u304c\u3001\n    - \u6574\u6570\u5024\u306e\u5834\u5408\u306f `Long` \u578b\u306b\u3001\n    - \u5b9f\u6570\u5024\u306e\u5834\u5408\u306f `Double` \u578b\u306b\u3001\n    - `BigInteger` \u578b\u306e\u5834\u5408\u306f `BigInteger` \u306b\u3001\n    - `BigDecimal` \u578b\u306e\u5834\u5408\u306f `BigDecimal` \u306b\u5909\u63db\u3055\u308c\u308b\u3002\n\n#RDB \u304c\u63d0\u4f9b\u3059\u308b\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/72a57779-e7ea-26b3-4c47-a859e21420cf.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:HinanaiTenshi.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"hinanai_tenshi\")\npublic class HinanaiTenshi {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"HinanaiTenshi{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/8799938b-ca78-a28b-deac-3bb1c526cd30.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/b39e20f1-e491-93b9-8c4c-2d40ad155ab2.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:HinanaiTenshi.functions\nSELECT FUNCTION('FORMAT', h.number, 3)\n  FROM HinanaiTenshi h\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    TypedQuery<String> query = this.em.createNamedQuery(\"HinanaiTenshi.functions\", String.class);\n    \n    query.getResultList()\n         .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   123,456.000\n\u60c5\u5831:   345.123\n\u60c5\u5831:   56,789.123\n```\n\n- `FUNCTION(<\u95a2\u6570\u540d> [, <\u5f15\u6570>...])` \u3068\u3044\u3046\u5f62\u5f0f\u3067\u3001\u4f7f\u7528\u3057\u3066\u3044\u308b RDB \u304c\u63d0\u4f9b\u3059\u308b\u95a2\u6570\u3092\u4f7f\u7528\u3067\u304d\u308b\u3002\n- \u30d3\u30eb\u30c9\u30a4\u30f3\u306e\u95a2\u6570\u306f\u3082\u3061\u308d\u3093\u3001\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u306e\u95a2\u6570\u3082\u5229\u7528\u3067\u304d\u308b\u3002\n\n#ORDER BY \u3067\u30bd\u30fc\u30c8\u3059\u308b\n\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/b9034989-1005-a379-f3a8-db3478d89f54.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:SaigyojiYuyuko.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Embedded;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"saigyoji_yuyuko\")\npublic class SaigyojiYuyuko {\n    @Id\n    private Long id;\n    @Embedded\n    private EmbeddedSaigyojiYuyuko embeddedSaigyojiYuyuko;\n\n    @Override\n    public String toString() {\n        return \"SaigyojiYuyuko{\" + \"id=\" + id + \", embeddedSaigyojiYuyuko=\" + embeddedSaigyojiYuyuko + '}';\n    }\n}\n```\n\n```java:EmbeddedSaigyojiYuyuko.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Embeddable;\n\n@Embeddable\npublic class EmbeddedSaigyojiYuyuko {\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"{ \" + this.number + \" }\";\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/fbd16c35-df14-4bf3-db87-d31606038731.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/e114075e-3f33-6775-3307-e970b05e343b.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:SaigyojiYuyuko.orderByIdDesc\n  SELECT s\n    FROM SaigyojiYuyuko s\nORDER BY s.id DESC\n```\n\n```sql:SaigyojiYuyuko.orderByNumberDesc\n  SELECT s\n    FROM SaigyojiYuyuko s\nORDER BY s.embeddedSaigyojiYuyuko.number DESC\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    TypedQuery<SaigyojiYuyuko> query;\n    List<SaigyojiYuyuko> list;\n    \n    System.out.println(\"[SaigyojiYuyuko.orderByIdDesc]\");\n    query = this.em.createNamedQuery(\"SaigyojiYuyuko.orderByIdDesc\", SaigyojiYuyuko.class);\n    list = query.getResultList();\n    list.forEach(System.out::println);\n    \n    System.out.println(\"[SaigyojiYuyuko.orderByNumberDesc]\");\n    query = this.em.createNamedQuery(\"SaigyojiYuyuko.orderByNumberDesc\", SaigyojiYuyuko.class);\n    list = query.getResultList();\n    list.forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [SaigyojiYuyuko.orderByIdDesc]\n\u60c5\u5831:   SaigyojiYuyuko{id=5, embeddedSaigyojiYuyuko={ 6 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=4, embeddedSaigyojiYuyuko={ 7 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=3, embeddedSaigyojiYuyuko={ 8 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=2, embeddedSaigyojiYuyuko={ 9 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=1, embeddedSaigyojiYuyuko={ 10 }}\n\u60c5\u5831:   [SaigyojiYuyuko.orderByNumberDesc]\n\u60c5\u5831:   SaigyojiYuyuko{id=1, embeddedSaigyojiYuyuko={ 10 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=2, embeddedSaigyojiYuyuko={ 9 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=3, embeddedSaigyojiYuyuko={ 8 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=4, embeddedSaigyojiYuyuko={ 7 }}\n\u60c5\u5831:   SaigyojiYuyuko{id=5, embeddedSaigyojiYuyuko={ 6 }}\n```\n\n- SQL \u3068\u540c\u3058\u8981\u9818\u3067 `ORDER BY` \u304c\u4f7f\u3048\u308b\u3002\n- `ASC` \u3067\u6607\u9806\u3001 `DESC` \u3067\u964d\u9806\u306b\u4e26\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n    - \u7701\u7565\u6642\u306f\u3001 `ASC` \u304c\u9069\u7528\u3055\u308c\u308b\u3002\n\n#GROUP BY \u3067\u96c6\u7d04\u3059\u308b\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/105afee5-3aed-9133-692a-eff2af5802d1.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:YagokoroEirin.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Embedded;\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"yagokoro_eirin\")\npublic class YagokoroEirin {\n    @Id\n    private Long id;\n    private String value;\n    @Embedded\n    private EmbeddedValue embeddedValue;\n\n    @Override\n    public String toString() {\n        return \"YagokoroEirin{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n```\n\n```java:EmbeddedValue.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Embeddable;\n\n@Embeddable\npublic class EmbeddedValue {\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"EmbeddedValue{\" + \"number=\" + number + '}';\n    }\n    \n    @Override\n    public int hashCode() {\n        // \u7701\u7565\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        // \u7701\u7565\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/5dd11f53-94bc-ff08-f8b5-a76457c596e3.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/98f9cdb4-661e-1a89-3f42-f5c57599e084.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:YagokoroEirin.groupBy\n  SELECT y.value\n        ,COUNT(y)\n    FROM YagokoroEirin y\nGROUP BY y.value\n```\n\n```sql:YagokoroEirin.groupByObject\n  SELECT y.embeddedValue\n        ,COUNT(y)\n    FROM YagokoroEirin y\nGROUP BY y.embeddedValue\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    Query query = this.em.createNamedQuery(\"YagokoroEirin.groupBy\");\n    \n    List<Object[]> list = query.getResultList();\n    \n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n    \n    query = this.em.createNamedQuery(\"YagokoroEirin.groupByObject\");\n    \n    list = query.getResultList();\n    \n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [fuga, 2]\n\u60c5\u5831:   [hoge, 3]\n\u60c5\u5831:   [piyo, 1]\n\u60c5\u5831:   [EmbeddedValue{number=100}, 1]\n\u60c5\u5831:   [EmbeddedValue{number=200}, 2]\n\u60c5\u5831:   [EmbeddedValue{number=300}, 3]\n```\n\n- `GROUP BY` \u3067\u3001\u9805\u76ee\u3092\u96c6\u7d04\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n##HAVING \u53e5\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/1424f998-d2ea-b169-6e06-7aca031e6af9.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:AkiMinoriko.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"aki_minoriko\")\npublic class AkiMinoriko {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"AkiMinoriko{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/cd455e97-9da7-7524-64f4-12decbe022fe.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/61de478b-9213-5f10-8b62-638679d9cbc0.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:AkiMinoriko.having\n  SELECT a.number\n        ,COUNT(a.number)\n    FROM AkiMinoriko a\nGROUP BY a.number\n  HAVING 2 < COUNT(a.number)\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    Query query = this.em.createNamedQuery(\"AkiMinoriko.having\");\n    \n    List<Object[]> list = query.getResultList();\n    \n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [100, 4]\n\u60c5\u5831:   [200, 3]\n```\n\n- SQL \u3068\u540c\u3058\u30ce\u30ea\u3067 `HAVING` \u53e5\u304c\u5229\u7528\u3067\u304d\u308b\u3002\n\n#DISTINCT\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/847e39c7-9f17-ba61-68df-ce802d47706d.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:KagiyamaHina.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"kagiyama_hina\")\npublic class KagiyamaHina {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"KagiyamaHina{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/e36ac45c-1f15-d259-7c55-f5f6c1a2b38d.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/e31db2eb-ff42-76b3-8afa-89036a25fbfe.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:KagiyamaHina.distinct\n  SELECT \nDISTINCT k.number\n    FROM KagiyamaHina k\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    TypedQuery<Integer> query = this.em.createNamedQuery(\"KagiyamaHina.distinct\", Integer.class);\n    \n    query.getResultList()\n         .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   111\n\u60c5\u5831:   222\n\u60c5\u5831:   333\n```\n\n- SQL \u3068\u540c\u3058\u3088\u3046\u306b DISTINCT \u304c\u4f7f\u3048\u308b\u3002\n- DISTINCT \u306e\u5bfe\u8c61\u306b\u7d44\u307f\u8fbc\u307f\u53ef\u80fd\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3063\u307d\u3044\uff1f\n\n> The result of DISTINCT over embeddable objects or map entry results is **undefined**.\n\nJPA 2.1 \u306e\u4ed5\u69d8\u66f8\u306e 4.8\n\n#\u30b5\u30d6\u30af\u30a8\u30ea\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/bd78432f-8260-794a-6f02-7fa5ca6b2392.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:ShameimaruAya.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"shameimaru_aya\")\npublic class ShameimaruAya {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"ShameimaruAya{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/9ba07a44-016a-a6a3-e27a-ab12c391557f.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/521dff90-8a68-bd8d-0f64-08ec4815101d.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:ShameimaruAya.findMax\nSELECT s1\n  FROM ShameimaruAya s1\n WHERE s1.number = (\n         SELECT MAX(s2.number)\n           FROM ShameimaruAya s2\n       )\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    TypedQuery<ShameimaruAya> query = this.em.createNamedQuery(\"ShameimaruAya.findMax\", ShameimaruAya.class);\n    System.out.println(query.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   ShameimaruAya{id=2, number=30}\n```\n\n- SQL \u3068\u540c\u3058\u8981\u9818\u3067\u3001\u4e38\u62ec\u5f27 `( )` \u3067\u30b5\u30d6\u30af\u30a8\u30ea\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n#LEFT JOIN\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/4457c623-6266-f6a8-5e11-f520f655aa55.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:MedicineMelancholy.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"medicine_melancholy\")\npublic class MedicineMelancholy {\n    @Id\n    private Long id;\n    private String code;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"MedicineMelancholy{\" + \"id=\" + id + \", code=\" + code + \", value=\" + value + '}';\n    }\n}\n```\n\n```java:KazamiYuka.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"kazami_yuka\")\npublic class KazamiYuka {\n    @Id\n    private Long id;\n    private String code;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"KazamiYuka{\" + \"id=\" + id + \", code=\" + code + \", value=\" + value + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/d128a23a-90ed-35b2-2c18-3f9b049717da.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/fa8817ce-ece3-4929-9754-a0cac492f885.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/4a2719a4-93f6-df4c-bad2-53815651235c.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:MedicineMelancholy.leftJoinOnCode\n   SELECT m\n         ,k\n     FROM MedicineMelancholy m\nLEFT JOIN KazamiYuka k\n       ON k.code = m.code\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    Query query = this.em.createNamedQuery(\"MedicineMelancholy.leftJoinOnCode\");\n    System.out.println(\"leftJoinOnCode\");\n    \n    List<Object[]> list = query.getResultList();\n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [MedicineMelancholy{id=1, code=AAA, value=hoge}, KazamiYuka{id=1, code=AAA, value=fizz}]\n\u60c5\u5831:   [MedicineMelancholy{id=2, code=BBB, value=fuga}, null]\n\u60c5\u5831:   [MedicineMelancholy{id=3, code=CCC, value=piyo}, KazamiYuka{id=2, code=CCC, value=buzz}]\n\u60c5\u5831:   [MedicineMelancholy{id=3, code=CCC, value=piyo}, KazamiYuka{id=3, code=CCC, value=gamma}]\n```\n\n- `LEFT JOIN` \u3067\u3001\u7570\u306a\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u7d50\u5408\u3057\u3066\u691c\u7d22\u3067\u304d\u308b\u3002\n- `ON` \u53e5\u3067\u7d50\u5408\u306e\u6761\u4ef6\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n\n#FETCH JOIN \u3067 SQL \u306e\u767a\u884c\u56de\u6570\u3092\u6e1b\u3089\u3059\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/8cb029b2-b0a4-d9fc-1486-9cca7812572f.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:OnodukaKomachi.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"onoduka_komachi\")\npublic class OnodukaKomachi {\n    @Id\n    private Long id;\n    @JoinColumn(name=\"shiki_eiki_id\")\n    private ShikiEiki shikiEiki;\n\n    public ShikiEiki getShikiEiki() {\n        return shikiEiki;\n    }\n    \n    @Override\n    public String toString() {\n        return \"OnodukaKomachi{\" + \"id=\" + id + \", shikiEiki=\" + shikiEiki + '}';\n    }\n}\n```\n\n```java:ShikiEiki.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"shiki_eiki\")\npublic class ShikiEiki {\n    @Id\n    private Long id;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"ShikiEiki{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/94f754f7-07e9-46f1-d5f7-6437a36059a8.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/b5430452-3170-6cbc-92da-9b58749640c0.jpeg)\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/c843251b-b5ea-bad0-26f3-ee9b9b302cf5.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:OnodukaKomachi.notFetchJoin\nSELECT o\n  FROM OnodukaKomachi o\n```\n  \n```sql:OnodukaKomachi.fetchJoin\n    SELECT o\n      FROM OnodukaKomachi o\nJOIN FETCH o.shikiEiki\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    TypedQuery<OnodukaKomachi> query;\n    \n    System.out.println(\"<<notFetchJoin>>\");\n    query = this.em.createNamedQuery(\"OnodukaKomachi.notFetchJoin\", OnodukaKomachi.class);\n    query.getResultList()\n         .forEach(o -> System.out.println(o.getShikiEiki()));\n    \n    System.out.println(\"<<fetchJoin>>\");\n    query = this.em.createNamedQuery(\"OnodukaKomachi.fetchJoin\", OnodukaKomachi.class);\n    query.getResultList()\n         .forEach(o -> System.out.println(o.getShikiEiki()));\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   <<notFetchJoin>>\n\u666e\u901a:   SELECT ID, shiki_eiki_id FROM onoduka_komachi\n\u666e\u901a:   SELECT ID, VALUE FROM shiki_eiki WHERE (ID = ?)\n\tbind => [1]\n\u666e\u901a:   SELECT ID, VALUE FROM shiki_eiki WHERE (ID = ?)\n\tbind => [2]\n\u666e\u901a:   SELECT ID, VALUE FROM shiki_eiki WHERE (ID = ?)\n\tbind => [3]\n\u60c5\u5831:   ShikiEiki{id=1, value=hoge}\n\u60c5\u5831:   ShikiEiki{id=2, value=fuga}\n\u60c5\u5831:   ShikiEiki{id=3, value=piyo}\n\n\u60c5\u5831:   <<fetchJoin>>\n\u666e\u901a:   SELECT t1.ID, t1.shiki_eiki_id, t0.ID, t0.VALUE FROM shiki_eiki t0, onoduka_komachi t1 WHERE (t0.ID = t1.shiki_eiki_id)\n\u60c5\u5831:   ShikiEiki{id=1, value=hoge}\n\u60c5\u5831:   ShikiEiki{id=2, value=fuga}\n\u60c5\u5831:   ShikiEiki{id=3, value=piyo}\n```\n\n- `FETCH JOIN` \u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u95a2\u9023\u3059\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\uff08or \u7d44\u307f\u8fbc\u307f\u53ef\u80fd\u30af\u30e9\u30b9\uff09\u306e\u60c5\u5831\u3092\uff11\u56de\u306e SQL \u3067\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n- \u3044\u308f\u3086\u308b\u3001 N+1 \u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u306b\u306a\u308b\u3002\n- \u305f\u3060\u3057\u8aad\u307f\u8fbc\u3080\u30c7\u30fc\u30bf\u306e\u6570\u304c\u591a\u304f\u306a\u308b\u3068\u3001\u4eca\u5ea6\u306f\u30e1\u30e2\u30ea\u3092\u5927\u91cf\u306b\u6d88\u8cbb\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u3001\u305d\u306e\u8fba\u3082\u8003\u616e\u3057\u3066\u4f7f\u3046\u3088\u3046\u306b\u3059\u308b\u3002\n\n#UPDATE, DELETE\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/e55ee233-37b0-8e7b-209f-83134200c82a.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:YasakaKanako.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"yasaka_kanako\")\npublic class YasakaKanako {\n    @Id\n    private Long id;\n    private String value;\n\n    public void setValue(String value) {\n        this.value = value;\n    }\n\n    @Override\n    public String toString() {\n        return \"YasakaKanako{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/ee166467-3c65-8fdf-dc94-b76ad435103f.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/4a025aeb-17f2-2354-4d1d-555b01f46810.jpeg)\n\n##UPDATE\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:YasakaKanako.update\nUPDATE YasakaKanako y\n   SET y.value = 'update'\n WHERE y.id = 2\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    Query query = this.em.createNamedQuery(\"YasakaKanako.update\");\n    query.executeUpdate();\n```\n\n**\u5b9f\u884c\u5f8c\u306e\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/e2b536c9-c19c-9a3c-dc70-5ff11e47ee53.jpeg)\n\n- SQL \u3068\u540c\u3058\u3088\u3046\u306a\u611f\u3058\u3067 UPDATE \u6587\u3092\u4f7f\u3048\u308b\u3002\n- UPDATE \u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306f\u3001 `Query#executeUpdate()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n##DELETE\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:YasakaKanako.delete\nDELETE\n  FROM YasakaKanako y\n WHERE y.id IN (1, 2)\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    query = this.em.createNamedQuery(\"YasakaKanako.delete\");\n    query.executeUpdate();\n```\n\n**\u5b9f\u884c\u5f8c\u306e\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/14546464-4fc9-8304-82d4-44074eb83817.jpeg)\n\n- SQL \u3068\u540c\u3058\u3088\u3046\u306a\u611f\u3058\u3067 DELETE \u6587\u3092\u5b9f\u884c\u3067\u304d\u308b\u3002\n\n##UPDATE, DELETE \u3092\u4f7f\u3046\u6642\u306e\u6ce8\u610f\u70b9\nUPDATE \u3068 DELETE \u3092 JPQL \u3067\u5b9f\u884c\u3057\u305f\u5834\u5408\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3068\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u7ba1\u7406\u3057\u3066\u3044\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u72b6\u614b\u304c\u4e56\u96e2\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u3002\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/7e9e17ea-1200-518c-ed47-a6b0067a98ad.jpeg)\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```diff:JpqlEjb.java\n+   YasakaKanako yasakaKanako = this.em.find(YasakaKanako.class, 2L);\n    \n    Query query = this.em.createNamedQuery(\"YasakaKanako.update\");\n    query.executeUpdate();\n    \n+   System.out.println(yasakaKanako);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   YasakaKanako{id=2, value=fuga}\n```\n\n**\u5b9f\u884c\u5f8c\u306e\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/c9f321e3-3d30-9403-bf62-576275dceb65.jpeg)\n\n- UPDATE \u306e\u5b9f\u884c\u5f8c\u3082\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u5024\u306f\u66f4\u65b0\u524d\u306e `\"fuga\"` \u306e\u307e\u307e\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n- \u3053\u306e\u3088\u3046\u306b\u3001 UPDATE, DELETE \u306e\u5b9f\u884c\u306f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u7ba1\u7406\u3059\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u72b6\u614b\u3068\u306f\u540c\u671f\u3055\u308c\u306a\u3044\uff08\u540c\u671f\u3059\u308b\u8cac\u52d9\u304c\u4ed5\u69d8\u4e0a\u5b58\u5728\u3057\u306a\u3044\uff09\u3002\n- \u306a\u306e\u3067\u3001 UPDATE, DELETE \u3092\u4f7f\u3046\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u5bfe\u7b56\u3092\u3068\u3063\u3066\u304a\u304f\u307b\u3046\u304c\u3044\u3044\u3002\n    - \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u64cd\u4f5c\u3059\u308b\u3068\u304d\u3068\u306f\u7570\u306a\u308b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067 UPDATE, DELETE \u3092\u5b9f\u884c\u3059\u308b\u3002\n    - \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092 DB \u304b\u3089\u53d6\u5f97\u3059\u308b\u524d\u306b UPDATE, DELETE \u3092\u5b9f\u884c\u3057\u3066\u304a\u304f\u3002\n    - UPDATE, DELETE \u3092\u5b9f\u884c\u3059\u308b\u524d\u306b `EntityManager#flush()` \u3068 `EntityManager#clear()` \u3092\u5b9f\u884c\u3059\u308b\u3002\n        - `flush()` \u3067\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u7ba1\u7406\u3057\u3066\u3044\u308b\u72b6\u614b\u3092 DB \u306b\u53cd\u6620\u3055\u305b\u3001\n        - `clear()` \u3067\u7ba1\u7406\u5bfe\u8c61\u3092\u30af\u30ea\u30a2\u3059\u308b\u3053\u3068\u3067\u3001 DB \u3068\u306e\u4e56\u96e2\u3092\u767a\u751f\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n#CASE \u6587\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/47503302-8e3c-f4e1-988b-13ec7846bfef.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:MoriyaSuwako.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name=\"moriya_suwako\")\npublic class MoriyaSuwako {\n    @Id\n    private Long id;\n    private int number;\n\n    @Override\n    public String toString() {\n        return \"MoriyaSuwako{\" + \"id=\" + id + \", number=\" + number + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/d8d2b05d-5dd5-37e9-3473-3d5a463fe176.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/6d371fc4-a37d-3f35-4733-903b1a2283f5.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:MoriyaSuwako.case\nSELECT m.number\n      ,CASE MOD(m.number, 2)\n           WHEN 0 THEN 'even'\n           ELSE 'odd'\n       END\n  FROM MoriyaSuwako m\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    Query query = this.em.createNamedQuery(\"MoriyaSuwako.case\");\n    \n    List<Object[]> list = query.getResultList();\n    \n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [111, odd]\n\u60c5\u5831:   [222, even]\n\u60c5\u5831:   [333, odd]\n```\n\n- SQL \u3068\u540c\u3058\u8981\u9818\u3067 CASE \u6587\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n#\u30cd\u30a4\u30c6\u30a3\u30d6\u306e SQL \u3092\u5b9f\u884c\u3059\u308b\n##\u57fa\u672c\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/b3f95106-11cd-49be-21cd-7c7218ccc15b.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/84959850-43cf-cb36-0a38-9b9e474624d8.jpeg)\n\n**\u30af\u30a8\u30ea\u5b9a\u7fa9**\n\n```sql:native-query-simple\nSELECT *\n  FROM NATIVE_QUERY_TEST\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    Query query = this.em.createNamedQuery(\"native-query-simple\");\n    \n    List<Object[]> list = query.getResultList();\n    \n    list.stream()\n        .map(Arrays::toString)\n        .forEach(System.out::println);\n```\n\n- \u4f7f\u7528\u3057\u3066\u3044\u308b RDB \u30cd\u30a4\u30c6\u30a3\u30d6 SQL \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- \u30cd\u30a4\u30c6\u30a3\u30d6\u30af\u30a8\u30ea\u306e\u5b9a\u7fa9\u306f\u3001 JPQL \u3068\u540c\u3058\u3088\u3046\u306a\u8981\u9818\u3067\u5b9a\u7fa9\u3067\u304d\u308b\u3002\n    - \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u3092\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001 `@NamedNativeQuery` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3002\n    - xml \u3067\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001 `<named-native-query>` \u30bf\u30b0\u3092\u4f7f\u7528\u3059\u308b\u3002\n    - `EntityManager#createNativeQuery(String)` \u3067\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n##\u30af\u30a8\u30ea\u7d50\u679c\u3092\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\n**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/1de18c8e-b97a-413f-04e4-f167284e24a7.jpeg)\n\n**\u5b9f\u88c5**\n\n```java:NagaeIku.java\npackage sample.javaee.jpa.entity.jpql;\n\nimport javax.persistence.Entity;\nimport javax.persistence.Id;\n\n@Entity\npublic class NagaeIku {\n    @Id\n    private Long id;\n    private String value;\n\n    @Override\n    public String toString() {\n        return \"NagaeIku{\" + \"id=\" + id + \", value=\" + value + '}';\n    }\n}\n```\n\n**\u30c7\u30fc\u30bf\u30e2\u30c7\u30eb**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/c1bfa925-9ffa-a6ea-1aaf-afa020d40813.jpeg)\n\n**\u30c7\u30fc\u30bf**\n\n![jpa.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/e48b53cc-66d5-887f-32a9-1ec4e7b773b9.jpeg)\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    String sql = \"SELECT ID, VALUE FROM NAGAE_IKU WHERE ID=1\";\n    query = this.em.createNativeQuery(sql, NagaeIku.class);\n    System.out.println(query.getSingleResult());\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   NagaeIku{id=1, value=hoge}\n```\n\n- `EntityManager#createNativeQuery(String, Class)` \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30cd\u30a4\u30c6\u30a3\u30d6\u30af\u30a8\u30ea\u306e\u7d50\u679c\u3092\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n    - `EntityManager#createNamedQuery(String, Class)` \u3060\u3068\u3001\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305f\u3002\n- \u30cd\u30a4\u30c6\u30a3\u30d6\u30af\u30a8\u30ea\u306e\u7d50\u679c\u306f\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u62bd\u51fa\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff08\u30ab\u30e9\u30e0\u540d\u3068\u304b\uff09\u3002\n\n#\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u3092\u4f7f\u7528\u3059\u308b\n**\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3**\n\n```sql:\nCREATE PROCEDURE `sample_stored_procedure` (IN intParam INTEGER, IN stringParam VARCHAR(64), OUT outParam VARCHAR(64))\nBEGIN\n  SET outParam = CONCAT(intParam, ' : ', stringParam);\nEND\n```\n\n**\u540d\u524d\u4ed8\u304d\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u5b9a\u7fa9**\n\n```xml:orm.xml\n  <named-stored-procedure-query name=\"sample-stored-procedure\" procedure-name=\"sample_stored_procedure\">\n    <parameter name=\"intParam\" mode=\"IN\" />\n    <parameter name=\"stringParam\" mode=\"IN\" />\n    <parameter name=\"outParam\" mode=\"OUT\" />\n  </named-stored-procedure-query>\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d**\n\n```java:JpqlEjb.java\n    StoredProcedureQuery procedure = this.em.createNamedStoredProcedureQuery(\"sample-stored-procedure\");\n    \n    procedure.setParameter(\"intParam\", 100)\n             .setParameter(\"stringParam\", \"Hello Stored Procedure!!\")\n             .execute();\n    \n    String outParam = (String)procedure.getOutputParameterValue(\"outParam\");\n    System.out.println(\"outParam = \" + outParam);\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   outParam = 100 : Hello Stored Procedure!!\n```\n\n- \u4f7f\u7528\u3057\u3066\u3044\u308b RDB \u306e\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- xml \u3067\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001 `<named-stored-procedure-query>` \u30bf\u30b0\u3067\u5b9a\u7fa9\u3059\u308b\u3002\n- \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u5b9a\u7fa9\u3059\u308b\u5834\u5408\u306f\u3001 `@NamedStoredProcedureQuery` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n#\u53c2\u8003\n- [JPA (Java Persistence API) - JPQL\u3092orm.xml\u306b\u66f8\u3044\u3066\u307f\u308b - @lbtc_xxx lab](http://www.nailedtothex.org/articles/jpa/jpqlonorm/)\n- [JSR-000338 Java Persistence 2.1 Final Release for Evaluation](http://download.oracle.com/otndocs/jcp/persistence-2_1-fr-eval-spec/index.html)\n- [GlassFish\u52c9\u5f37\u4f1a\u3067\u91d1\u9b5a\u672c\u306b\u8f09\u3063\u3066\u306a\u3044JPQL\u306e\u8a71\u3092\u3057\u3066\u304d\u305f #GlassFishJP - \u6c34\u307e\u3093\u3058\u3085\u3046](http://d.hatena.ne.jp/megascus/20120925/1348575449)\n- [\u306f\u307e\u308b\uff01JPA\uff08\u521d\u5b66\u8005\u5411\u3051\u30e9\u30a4\u30c8\u7248\uff09](http://www.slideshare.net/masatoshitada7/jpa-46874399)\n- [FROM clause and JOIN in JPA 2 queries (JPQL / Criteria API)](http://www.objectdb.com/java/jpa/query/jpql/from#LEFT_OUTER_INNER_JOIN_FETCH_)\n- [Java Persistence/Relationships - Wikibooks, open books for an open world](http://en.wikibooks.org/wiki/Java_Persistence/Relationships#Join_Fetching)\n- [MySQL - \u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u57fa\u672c\u7684\u306a\u306a\u306b\u304b - Qiita](http://qiita.com/setsuna82001/items/e742338eb93e3a48ba46)\n\n\n", "tags": ["jpa", "Java", "glassfish", "JavaEE"]}