{"tags": ["OpenFlow", "Mininet", "OpenVSwitch"], "context": " More than 1 year has passed since last update.OpenFlow\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3082OpenFlow1.3\u3092\u610f\u8b58\u3057\u305f\u3082\u306e\u304c\u591a\u304f\u3001\u307e\u305f\u3001Mininet\u5074\u304b\u3089\u3082OpenFlow\u306eversion\u3092\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u307e\u3059\u3002\n(\u4eca\u307e\u3067\u306fOpenVSwitch\u306e\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304f\u5fc5\u8981\u304c\u3042\u3063\u305f\u3088\u3046\u3067\u2026\u3002)\n\n\u81ea\u5206\u3067\u4f5c\u3063\u305f\u30c8\u30dd\u30ed\u30b8\u306b\u7d44\u307f\u8fbc\u3080\u5834\u5408\nswitch=partial(OVSSwitch,protocols='OpenFlow13')\u3067\u30b9\u30a4\u30c3\u30c1\u3068\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u6307\u5b9a\u3002(partial\u3058\u3083\u306a\u3044\u66f8\u304d\u65b9\u3082\u3042\u308a\u307e\u3059)\nnet = Mininet(switch=switch)\u3067Mininet\u306b\u6e21\u3057\u3066\u3042\u3052\u308c\u3070\u3042\u3068\u306f\u666e\u901a\u306b\u8a18\u8ff0\u3057\u3066\u554f\u984c\u306a\u3044\u3067\u3059\u3002\n\u4e00\u5fdc\u4ee5\u4e0b\u306b\u7c21\u5358\u306a\u30b5\u30f3\u30d7\u30eb\u3092\u3002\u5b9f\u884c\u306f\u3082\u3061\u308d\u3093$ sudo python sample.py\u3060\u3051\u3067\u3002\n\nsample.py\n#!/usr/bin/python\n\nfrom mininet.net import Mininet\nfrom mininet.cli import CLI\nfrom mininet.node import RemoteController,OVSSwitch\nfrom functools import partial\n\nif __name__ == '__main__':\n\n    switch=partial(OVSSwitch,protocols='OpenFlow13')\n    net = Mininet(switch=switch)\n\n    net.addController('c0',controller=RemoteController)\n    s1 = net.addSwitch('s1')\n    h1 = net.addHost('h1')\n    h2 = net.addHost('h2')\n\n    net.addLink(h1,s1)\n    net.addLink(h2,s1)\n\n    net.start()\n    CLI(net)\n    net.stop()\n\n\n\nMininet\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c8\u30dd\u30ed\u30b8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\n$ sudo mn --controller remote --switch=ovs,protocols=OpenFlow13\n\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u5225\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3068\u9023\u643a\u3055\u305b\u3064\u3064OpenFlow1.3\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u81ea\u5206\u3067\u4f5c\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u30c8\u30dd\u30ed\u30b8\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\u304c\u975e\u5e38\u306b\u9577\u304f\u306a\u308b\u306e\u3067\u4f7f\u3044\u3069\u3053\u308d\u306f\u3042\u307e\u308a\u306a\u3044\u304b\u3068\u3002\n\ntest.py\nfrom mininet.topo import Topo\n\nclass MyTopo( Topo ):\n\n    def __init__( self ):\n        Topo.__init__( self )\n\n        h0 = self.addHost( 'h0' )\n        h1 = self.addHost( 'h1' )\n        s1 = self.addSwitch( 's1' )\n\n        self.addLink(h0,s1)\n        self.addLink(h1,s1)\n\ntopos = { 'mytopo': ( lambda: MyTopo() ) }\n\n\n\u3053\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u3084\u308a\u3001\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\u3002\n$ sudo mn --controller remote --switch=ovs,protocols=OpenFlow13 --custom test.py --topo mytopo\n\u3053\u3093\u306a\u9577\u3044\u306e\u3044\u3061\u3044\u3061\u5b9f\u884c\u3067\u304d\u306a\u3044\u3088\u3001\u3063\u3066\u3053\u3068\u3067\u6700\u521d\u306e\u4f8b\u307f\u305f\u3044\u306a\u66f8\u304d\u65b9\u304c\u57fa\u672c\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u306d\u3002\n\n\u53c2\u8003\n\nWhich versions of OpenFlow does Mininet support?\nRyu\u3068Mininet\u3067\u4eee\u60f3\u5316L2\u30cd\u30c3\u30c8\u30ef\u30fc\u30af1\n\nOpenFlow\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3082OpenFlow1.3\u3092\u610f\u8b58\u3057\u305f\u3082\u306e\u304c\u591a\u304f\u3001\u307e\u305f\u3001Mininet\u5074\u304b\u3089\u3082OpenFlow\u306eversion\u3092\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u307e\u3059\u3002\n(\u4eca\u307e\u3067\u306fOpenVSwitch\u306e\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304f\u5fc5\u8981\u304c\u3042\u3063\u305f\u3088\u3046\u3067\u2026\u3002)\n\n# \u81ea\u5206\u3067\u4f5c\u3063\u305f\u30c8\u30dd\u30ed\u30b8\u306b\u7d44\u307f\u8fbc\u3080\u5834\u5408\n\n`switch=partial(OVSSwitch,protocols='OpenFlow13')`\u3067\u30b9\u30a4\u30c3\u30c1\u3068\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u6307\u5b9a\u3002(partial\u3058\u3083\u306a\u3044\u66f8\u304d\u65b9\u3082\u3042\u308a\u307e\u3059)\n`net = Mininet(switch=switch)`\u3067Mininet\u306b\u6e21\u3057\u3066\u3042\u3052\u308c\u3070\u3042\u3068\u306f\u666e\u901a\u306b\u8a18\u8ff0\u3057\u3066\u554f\u984c\u306a\u3044\u3067\u3059\u3002\n\u4e00\u5fdc\u4ee5\u4e0b\u306b\u7c21\u5358\u306a\u30b5\u30f3\u30d7\u30eb\u3092\u3002\u5b9f\u884c\u306f\u3082\u3061\u308d\u3093`$ sudo python sample.py`\u3060\u3051\u3067\u3002\n\n```py:sample.py\n#!/usr/bin/python\n\nfrom mininet.net import Mininet\nfrom mininet.cli import CLI\nfrom mininet.node import RemoteController,OVSSwitch\nfrom functools import partial\n\nif __name__ == '__main__':\n\n    switch=partial(OVSSwitch,protocols='OpenFlow13')\n    net = Mininet(switch=switch)\n\n    net.addController('c0',controller=RemoteController)\n    s1 = net.addSwitch('s1')\n    h1 = net.addHost('h1')\n    h2 = net.addHost('h2')\n\n    net.addLink(h1,s1)\n    net.addLink(h2,s1)\n\n    net.start()\n    CLI(net)\n    net.stop()\n```\n\n\n# Mininet\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c8\u30dd\u30ed\u30b8\u3092\u5229\u7528\u3059\u308b\u5834\u5408\n`$ sudo mn --controller remote --switch=ovs,protocols=OpenFlow13`\n\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u5225\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3068\u9023\u643a\u3055\u305b\u3064\u3064OpenFlow1.3\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u81ea\u5206\u3067\u4f5c\u3063\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u30c8\u30dd\u30ed\u30b8\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\u304c\u975e\u5e38\u306b\u9577\u304f\u306a\u308b\u306e\u3067\u4f7f\u3044\u3069\u3053\u308d\u306f\u3042\u307e\u308a\u306a\u3044\u304b\u3068\u3002\n\n```py:test.py\nfrom mininet.topo import Topo\n\nclass MyTopo( Topo ):\n\n    def __init__( self ):\n        Topo.__init__( self )\n\n        h0 = self.addHost( 'h0' )\n        h1 = self.addHost( 'h1' )\n        s1 = self.addSwitch( 's1' )\n\n        self.addLink(h0,s1)\n        self.addLink(h1,s1)\n\ntopos = { 'mytopo': ( lambda: MyTopo() ) }\n```\n\u3053\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u3084\u308a\u3001\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u4ee5\u4e0b\u3092\u5b9f\u884c\u3002\n`$ sudo mn --controller remote --switch=ovs,protocols=OpenFlow13 --custom test.py --topo mytopo`\n\u3053\u3093\u306a\u9577\u3044\u306e\u3044\u3061\u3044\u3061\u5b9f\u884c\u3067\u304d\u306a\u3044\u3088\u3001\u3063\u3066\u3053\u3068\u3067\u6700\u521d\u306e\u4f8b\u307f\u305f\u3044\u306a\u66f8\u304d\u65b9\u304c\u57fa\u672c\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u306d\u3002\n\n# \u53c2\u8003\n* [Which versions of OpenFlow does Mininet support?](https://github.com/mininet/mininet/wiki/FAQ#which-versions-of-openflow-does-mininet-support)\n* [Ryu\u3068Mininet\u3067\u4eee\u60f3\u5316L2\u30cd\u30c3\u30c8\u30ef\u30fc\u30af1](http://tech000.blog.fc2.com/blog-entry-15.html)\n"}