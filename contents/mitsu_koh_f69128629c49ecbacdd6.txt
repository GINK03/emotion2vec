{"context": " More than 1 year has passed since last update.QTextEdit\u306b\u306fcursorRect()\u304c\u3042\u308b\u305f\u3081\uff0cQTextCursor\u3092\u4f7f\u3046\u3053\u3068\u3067\u7c21\u5358\u306b\u6587\u5b57\u306e\u5ea7\u6a19\u3092\u53d6\u5f97\u3067\u304d\u308b\u304c\uff0cQGraphicsTextItem\u306b\u306fcursorRect()\u304c\u306a\u304f\uff0c\u81ea\u5206\u3067\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\n\u65b9\u6cd5\u3068\u3057\u3066\u306f\uff0c\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u6587\u5b57\u3092\u542b\u3080QTextLine\u3092\u53d6\u5f97\u3057\u3066\uff0ccursorToX()\u3067\u6587\u5b57\u306e\u4f4d\u7f6e\u3092\u5ea7\u6a19\u3078\u3068\u5909\u63db\u3059\u308c\u3070\u3088\u3044\uff0e\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\uff0cDocumentItem\u4e0a\u3067start\u304b\u3089end\u307e\u3067\u306e\u6587\u5b57\u5217\u3092\u9078\u629e\u3057\u305f\u3068\u304d\u306b\u30cf\u30a4\u30e9\u30a4\u30c8\u3055\u308c\u308b1\u3064\u3082\u3057\u304f\u306f\u8907\u6570\u306e\u9577\u65b9\u5f62\u306e\u9818\u57df\u3092QGraphicsScene\u4e0a\u306b\u8ffd\u52a0\u3059\u308baddFragmentRects()\u3068\u3044\u3046\u95a2\u6570\u3092\u5ba3\u8a00\u3057\u3066\u3044\u308b\uff0e\nclass DocumentItem(QtGui.QGraphicsTextItem):\n    def addFragmentRects(self, start, end):\n        while start < end:\n            block = self.document().findBlock(start)\n            localStart = start - block.position()\n            line = block.layout().lineForTextPosition(localStart)\n            localEnd = min(line.textStart() + line.textLength(), end - block.position())\n            isWrapped = (localEnd == block.length() - 1 and localEnd != end - block.position())\n            p = block.layout().position()\n\n            x = p.x() + line.cursorToX(localStart)[0]\n            y = p.y() + line.y()\n            if isWrapped:\n                w = line.width() - line.cursorToX(localStart)[0]\n            else:\n                w = line.cursorToX(localEnd)[0] - line.cursorToX(localStart)[0]\n            h = line.height()\n\n            p = self.mapToScene(x, y)\n            x, y = p.x(), p.y()\n\n            self.scene().addRect(x, y, w, h)\n\n            if isWrapped:\n                start = block.next().position()\n            else:\n                start += localEnd - localStart\n\n\n\nQTextEdit\u306b\u306fcursorRect()\u304c\u3042\u308b\u305f\u3081\uff0cQTextCursor\u3092\u4f7f\u3046\u3053\u3068\u3067\u7c21\u5358\u306b\u6587\u5b57\u306e\u5ea7\u6a19\u3092\u53d6\u5f97\u3067\u304d\u308b\u304c\uff0cQGraphicsTextItem\u306b\u306fcursorRect()\u304c\u306a\u304f\uff0c\u81ea\u5206\u3067\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\n\n\u65b9\u6cd5\u3068\u3057\u3066\u306f\uff0c\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u6587\u5b57\u3092\u542b\u3080QTextLine\u3092\u53d6\u5f97\u3057\u3066\uff0ccursorToX()\u3067\u6587\u5b57\u306e\u4f4d\u7f6e\u3092\u5ea7\u6a19\u3078\u3068\u5909\u63db\u3059\u308c\u3070\u3088\u3044\uff0e\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\uff0cDocumentItem\u4e0a\u3067start\u304b\u3089end\u307e\u3067\u306e\u6587\u5b57\u5217\u3092\u9078\u629e\u3057\u305f\u3068\u304d\u306b\u30cf\u30a4\u30e9\u30a4\u30c8\u3055\u308c\u308b1\u3064\u3082\u3057\u304f\u306f\u8907\u6570\u306e\u9577\u65b9\u5f62\u306e\u9818\u57df\u3092QGraphicsScene\u4e0a\u306b\u8ffd\u52a0\u3059\u308baddFragmentRects()\u3068\u3044\u3046\u95a2\u6570\u3092\u5ba3\u8a00\u3057\u3066\u3044\u308b\uff0e\n\n```python\nclass DocumentItem(QtGui.QGraphicsTextItem):\n    def addFragmentRects(self, start, end):\n        while start < end:\n            block = self.document().findBlock(start)\n            localStart = start - block.position()\n            line = block.layout().lineForTextPosition(localStart)\n            localEnd = min(line.textStart() + line.textLength(), end - block.position())\n            isWrapped = (localEnd == block.length() - 1 and localEnd != end - block.position())\n            p = block.layout().position()\n\n            x = p.x() + line.cursorToX(localStart)[0]\n            y = p.y() + line.y()\n            if isWrapped:\n                w = line.width() - line.cursorToX(localStart)[0]\n            else:\n                w = line.cursorToX(localEnd)[0] - line.cursorToX(localStart)[0]\n            h = line.height()\n\n            p = self.mapToScene(x, y)\n            x, y = p.x(), p.y()\n\n            self.scene().addRect(x, y, w, h)\n\n            if isWrapped:\n                start = block.next().position()\n            else:\n                start += localEnd - localStart\n\n```\n", "tags": ["Qt"]}