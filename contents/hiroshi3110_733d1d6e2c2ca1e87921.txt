{"context": " More than 1 year has passed since last update.EDIT: 2012-12-15: page.driver.header() \u3059\u308b\u3068\u4ed6\u306e cookie \u304c\u8a2d\u5b9a\u3055\u308c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067 page.driver.browser.set_cookie() \u3092\u5229\u7528\u3059\u308b\u30b3\u30fc\u30c9\u306b\u5909\u66f4\u3002\u307e\u305f Capybara 2.0.1 \u3060\u3068 \u30d0\u30b0 \u304c\u3042\u3063\u3066 set_cookie() \u3067\u4f8b\u5916\u767a\u751f\u3059\u308b\u306e\u3067\u6ce8\u610f\n\nspec/support/cookie_helpers.rb\nmodule CookieHelpers\n  def set_cookies(cookies)\n    cookie_jar = ActionDispatch::Cookies::CookieJar.new(Rails.application.config.secret_token)\n    if signed = cookies.delete(:signed)\n      #cookie_jar.signed.update(signed)\n      signed.each do |key, val|\n        cookie_jar.signed[key] = val\n      end\n    end\n    cookie_jar.update(cookies)\n    headers = {}\n    # cookie_jar.write(headers)\n    # page.driver.header(\"Cookie\", headers[\"Set-Cookie\"])\n    cookie_jar.each do |k, v|                                                                                 \n      page.driver.browser.set_cookie(k + \"=\" + v)                                                             \n    end\n  end\nend\n\n\n\nspec/features/admin_spec.rb\nfeature \"admin console\" do\n  include CookieHelpers\n  senario \"enter as admin\" do\n    set_cookies(:signed => {:role => :admin})\n    vist admin_console_path\n    status_code.should == 200\n  end\nend\n\n\nEDIT: 2012-12-15: page.driver.header() \u3059\u308b\u3068\u4ed6\u306e cookie \u304c\u8a2d\u5b9a\u3055\u308c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067 page.driver.browser.set_cookie() \u3092\u5229\u7528\u3059\u308b\u30b3\u30fc\u30c9\u306b\u5909\u66f4\u3002\u307e\u305f Capybara 2.0.1 \u3060\u3068 [\u30d0\u30b0]( https://github.com/jnicklas/capybara/pull/899) \u304c\u3042\u3063\u3066 set_cookie() \u3067\u4f8b\u5916\u767a\u751f\u3059\u308b\u306e\u3067\u6ce8\u610f\n\n~~~ruby:spec/support/cookie_helpers.rb\nmodule CookieHelpers\n  def set_cookies(cookies)\n    cookie_jar = ActionDispatch::Cookies::CookieJar.new(Rails.application.config.secret_token)\n    if signed = cookies.delete(:signed)\n      #cookie_jar.signed.update(signed)\n      signed.each do |key, val|\n        cookie_jar.signed[key] = val\n      end\n    end\n    cookie_jar.update(cookies)\n    headers = {}\n    # cookie_jar.write(headers)\n    # page.driver.header(\"Cookie\", headers[\"Set-Cookie\"])\n    cookie_jar.each do |k, v|                                                                                 \n      page.driver.browser.set_cookie(k + \"=\" + v)                                                             \n    end\n  end\nend\n~~~\n\n~~~ruby:spec/features/admin_spec.rb\nfeature \"admin console\" do\n  include CookieHelpers\n  senario \"enter as admin\" do\n    set_cookies(:signed => {:role => :admin})\n    vist admin_console_path\n    status_code.should == 200\n  end\nend\n~~~", "tags": ["\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6", "Ruby", "Capybara"]}