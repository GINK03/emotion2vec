{"context": " More than 1 year has passed since last update.\n\n\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\n\u8a73\u3057\u304f\u306f MassiveUnit/Assert.hx at master \u00b7 massiveinteractive/MassiveUnit\n\u305d\u308c\u305e\u308c\u6700\u7d42\u5f15\u6570\u306bhaxe.PosInfos\u3092\u3068\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304c\u7701\u7565\u3002\n\nis, isNot\nAssert.isTrue(value);\nAssert.isFalse(value);\n\nAssert.isNull(value);\nAssert.isNotNull(value);\n\nAssert.isNaN(value);\nAssert.isNotNaN(value);\n\nAssert.isType(value, type);\nAssert.isNotType(value, type);\n\n\nare, areNot\n// If the expected value is an Enum then Type.enumEq will be used to compare the two values.\nAssert.areEqual(expected, actual);\nAssert.areNotEqual(expected, actual);\n\n// expected == actual\nAssert.areSame(expected, actual);\nAssert.areNotSame(expected, actual);\n\n\n\u81ea\u5206\u3067\u843d\u3068\u3059\n// throw new AssertionException(msg, info);\nAssert.fail(msg);\n\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\u8a73\u3057\u304f\u306f Working with test classes \u00b7 massiveinteractive/MassiveUnit Wiki\n\nTest\n@Test\npublic function testExample():Void {}\n\n\nAsync\nimport massive.munit.util.Timer;\n\n@AsyncTest\npublic function testAsyncExample(asyncFactory:AsyncFactory):Void {\n  var handler:Dynamic = asyncFactory.createHandler(this, function(){\n    Assert.isFalse(false);\n  }, 300);\n\n  Timer.delay(handler, 200);\n}\n\n\nSkip\n@Ignore(\"reason\") @Test\npublic function testExample():Void {}\n\n\nSetup\n\nOnce per test class\n@BeforeClass\npublic function beforeClass():Void {}\n\n@AfterClass\npublic function afterClass():Void {}\n\n\nBefore/After every test\n@Before\npublic function setup():Void {}\n\n@After\npublic function tearDown():Void {}\n\n\n# \u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\n\n\u8a73\u3057\u304f\u306f [MassiveUnit/Assert.hx at master \u00b7 massiveinteractive/MassiveUnit](https://github.com/massiveinteractive/MassiveUnit/blob/master/src/massive/munit/Assert.hx)\n\n\u305d\u308c\u305e\u308c\u6700\u7d42\u5f15\u6570\u306b`haxe.PosInfos`\u3092\u3068\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304c\u7701\u7565\u3002\n\n## is, isNot\n```hx\nAssert.isTrue(value);\nAssert.isFalse(value);\n\nAssert.isNull(value);\nAssert.isNotNull(value);\n\nAssert.isNaN(value);\nAssert.isNotNaN(value);\n```\n\n```hx\nAssert.isType(value, type);\nAssert.isNotType(value, type);\n```\n\n## are, areNot\n\n```hx\n// If the expected value is an Enum then Type.enumEq will be used to compare the two values.\nAssert.areEqual(expected, actual);\nAssert.areNotEqual(expected, actual);\n\n// expected == actual\nAssert.areSame(expected, actual);\nAssert.areNotSame(expected, actual);\n```\n\n## \u81ea\u5206\u3067\u843d\u3068\u3059\n\n```hx\n// throw new AssertionException(msg, info);\nAssert.fail(msg);\n```\n\n# \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\n\u8a73\u3057\u304f\u306f [Working with test classes \u00b7 massiveinteractive/MassiveUnit Wiki](https://github.com/massiveinteractive/MassiveUnit/wiki/Working-with-test-classes)\n\n## Test\n\n```hx\n@Test\npublic function testExample():Void {}\n```\n\n### Async\n\n```hx\nimport massive.munit.util.Timer;\n```\n```hx\n@AsyncTest\npublic function testAsyncExample(asyncFactory:AsyncFactory):Void {\n  var handler:Dynamic = asyncFactory.createHandler(this, function(){\n    Assert.isFalse(false);\n  }, 300);\n\n  Timer.delay(handler, 200);\n}\n```\n\n### Skip\n\n```hx\n@Ignore(\"reason\") @Test\npublic function testExample():Void {}\n```\n\n## Setup\n\n### Once per test class\n```hx\n@BeforeClass\npublic function beforeClass():Void {}\n\n@AfterClass\npublic function afterClass():Void {}\n```\n\n### Before/After every test\n\n```hx\n@Before\npublic function setup():Void {}\n\n@After\npublic function tearDown():Void {}\n```\n", "tags": ["Haxe", "munit"]}