{"context": " More than 1 year has passed since last update.char *str_func2(char *buf, char *str, int len)\n        {\n            int s_len;\n            int chk_len;\n            char *bufp;\n        bufp = buf;\n        chk_len = 1;\n\n        buf[len] = '\\0';\n\n        if ((s_len = strlen(str)) == len)\n        {\n            strncpy(bufp, str, len);\n            return(buf);\n        }\n\n        memset(bufp, '0', len);\n\n        if (*str == '-'){\n            *(bufp++) = '-';\n            ++str;\n        }\n\n        if (s_len < len){\n            strcpy(bufp+(len - s_len), str);\n            return (buf);\n        }\n\n        while (*str != '\\0'){\n            if (*str != '0'){\n                break;\n            }\n            ++str;\n            --s_len;\n        }\n\n        if (s_len <= len){\n            strcpy(bufp + (len - s_len), str);\n            return (buf);\n        }\n\n        while (s_len > len)\n        {\n\n            if (*str == '.')\n            {\n                buf[0] = '\\0';\n                return(NULL);\n            }\n\n\n            ++str;\n            --s_len;\n        }\n\n        while (*str != '\\0')\n        {\n\n            if (*str == '.')\n            {\n                *(bufp++) = '.';\n                ++str;\n                chk_len = 2;\n            }\n            else\n            {\n                *(bufp++) = '9';\n                ++str;\n                chk_len += ((chk_len >= 2) ? 1 : 0);\n            }\n        }\n\n        chk_len += ((buf[0] == '-') ? 1 : 0);\n\n        if (len < chk_len)\n        {\n            return(NULL);\n        }\n        return (buf);\n\n}\n char *str_func2(char *buf, char *str, int len)\n        {\n            int s_len;\n            int chk_len;\n            char *bufp;\n\n            bufp = buf;\n            chk_len = 1;\n\n            buf[len] = '\\0';\n\n            if ((s_len = strlen(str)) == len)\n            {\n                strncpy(bufp, str, len);\n                return(buf);\n            }\n\n            memset(bufp, '0', len);\n            \n            if (*str == '-'){\n                *(bufp++) = '-';\n                ++str;\n            }\n\n            if (s_len < len){\n                strcpy(bufp+(len - s_len), str);\n                return (buf);\n            }\n\n            while (*str != '\\0'){\n                if (*str != '0'){\n                    break;\n                }\n                ++str;\n                --s_len;\n            }\n\n            if (s_len <= len){\n                strcpy(bufp + (len - s_len), str);\n                return (buf);\n            }\n\n            while (s_len > len)\n            {\n\n                if (*str == '.')\n                {\n                    buf[0] = '\\0';\n                    return(NULL);\n                }\n\n\n                ++str;\n                --s_len;\n            }\n\n            while (*str != '\\0')\n            {\n               \n                if (*str == '.')\n                {\n                    *(bufp++) = '.';\n                    ++str;\n                    chk_len = 2;\n                }\n                else\n                {\n                    *(bufp++) = '9';\n                    ++str;\n                    chk_len += ((chk_len >= 2) ? 1 : 0);\n                }\n            }\n\n            chk_len += ((buf[0] == '-') ? 1 : 0);\n\n            if (len < chk_len)\n            {\n                return(NULL);\n            }\n            return (buf);\n }\n", "tags": ["C\u8a00\u8a9e", "C\u8a00\u8a9e\u5165\u9580", "\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9"]}