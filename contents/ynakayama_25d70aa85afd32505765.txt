{"context": " More than 1 year has passed since last update.\u6628\u65e5\u306f\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\u306e\u5206\u985e\u5883\u754c\u306b\u304a\u3044\u3066\u6700\u5927\u306e\u30de\u30fc\u30b8\u30f3\u3092\u6c42\u3081\u308b\u5f0f\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\nscikit-learn \u306b\u306f\u6a5f\u68b0\u5b66\u7fd2\u306e\u305f\u3081\u306e\u3055\u307e\u3056\u307e\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4e00\u89a7\u3092\u898b\u308b\u3060\u3051\u3067\u3082\u591a\u7a2e\u591a\u69d8\u306a\u3082\u306e\u304c\u3042\u308a\u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\u306e\u5b9f\u88c5\u3060\u3051\u3067\u3082\u5206\u985e\u3001\u56de\u5e30\u3001\u5bc6\u5ea6\u63a8\u5b9a\u306a\u3069\u3068\u8c4a\u5bcc\u3067\u3059\u3002\nSupport Vector Machines\nhttp://scikit-learn.org/stable/modules/svm.html\n\u7dda\u5f62\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\u306f\u7279\u5fb4\u7a7a\u9593 \u03a6(x) \u306b\u304a\u3044\u3066\u7dda\u5f62\u5206\u96e2\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u4eee\u5b9a\u3057\u3001\u5f97\u3089\u308c\u308b SVM \u306f\u5165\u529b\u7a7a\u9593 x \u306b\u304a\u3044\u3066\u8a13\u7df4\u30c7\u30fc\u30bf\u3092\u5b8c\u5168\u306b\u5206\u96e2\u3057\u3001\u8ca0\u4f8b\u3092 0 \u3001\u6b63\u4f8b\u3092 1 \u3068\u3057\u305f\u4e8c\u5024\u306e\u30af\u30e9\u30b9 (scikit-learn \u306b\u304a\u3044\u3066\u306f\u30e9\u30d9\u30eb) \u306b\u3057\u307e\u3059\u3002\nSVM \u306b\u4ee3\u8868\u3055\u308c\u308b\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u3067\u306f\u3001\u6559\u5e2b\u30c7\u30fc\u30bf\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u60c5\u5831\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3001\u5b9f\u969b\u306b\u5206\u985e\u3055\u308c\u308b\u60c5\u5831\u3092\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3068\u547c\u3073\u307e\u3059\u3002\n\u5b9f\u969b\u306b SVM \u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u5206\u985e\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nfrom sklearn import svm\nX = [[0, 0], [1, 1]]\ny = [0, 1]\nclf = svm.SVC()\nclf.fit(X, y) # \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\n\n# \u30c6\u30b9\u30c8\nclf.predict([[0., 2.]])\n# => array([1])\nclf.predict([[0., 0.]])\n# => array([0])\nclf.predict([[1., 0.]])\n# => array([1])\nclf.predict([[0., 1.]])\n# => array([1])\n\n\n\u591a\u30af\u30e9\u30b9\u5206\u985e\n\u7dda\u5f62\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\u306f\u591a\u30af\u30e9\u30b9\u5206\u985e\u306b\u304a\u3044\u3066 1 \u5bfe\u4ed6\u65b9\u5f0f\u3092\u63a1\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u591a\u30af\u30e9\u30b9 SVM \u306b\u304a\u3044\u3066\u6700\u3082\u3088\u304f\u7528\u3044\u3089\u308c\u308b\u65b9\u6cd5\u3067 K \u500b\u306e\u30af\u30e9\u30b9\u304c\u3042\u308b\u3068\u304d\u306b\u3042\u308b\u30af\u30e9\u30b9 Ck \u306b\u5c5e\u3059\u308b\u30c7\u30fc\u30bf\u3092\u6b63\u4f8b\u3001\u305d\u308c\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u3092\u8ca0\u4f8b\u3068\u3057\u3066 K \u500b\u306e\u5225\u3005\u306e SVM yk(x) \u3092\u5b66\u7fd2\u3057\u307e\u3059\u3002\nX = [[0], [1], [2], [3]]\nY = [0, 1, 2, 3]\nlin_clf.fit(X, Y)\ndec = lin_clf.decision_function([[1]])\ndec.shape\n# => (1, 4)\n\n\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u3088\u308b\u5206\u985e\nload_digits \u30e1\u30bd\u30c3\u30c9\u3067\u8aad\u3093\u3060\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092 train_test_split \u30e1\u30bd\u30c3\u30c9\u3067\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5206\u5272\u3057\u307e\u3059\u3002\u5206\u5272\u6bd4\u7387\u306f 3:1 \u3067\u3059\u3002\nfrom sklearn.datasets import load_digits\nfrom sklearn.cross_validation import train_test_split\nfrom sklearn.svm import LinearSVC\ndigits = load_digits(2)\ndata_train, data_test, label_train, label_test = train_test_split(digits.data, digits.target)\n\nprint (data_train)\n# \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u306e\u30c7\u30fc\u30bf\n#[[  0.   0.   0. ...,  16.   7.   0.]\n# [  0.   0.   2. ...,   1.   0.   0.]\n# [  0.   0.   0. ...,  16.   0.   0.]\n# ..., \n# [  0.   0.   0. ...,  16.   1.   0.]\n# [  0.   0.   2. ...,  16.  10.   3.]\n# [  0.   0.   5. ...,   8.   0.   0.]]\n\nprint (label_train)\n# \u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u30e9\u30d9\u30eb\u3001\u6b63\u4f8b\u304c 1 \u3067\u8ca0\u4f8b\u304c 0 \u3068\u306a\u308b\n#[1 0 1 1 1 1 1 0 1 1 0 0 0 0 0 0 1 0 0 0 1 1 1 0 0 1 0 1 1 0 1 0 1 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 1 1 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 0 1 1 1 1 0 0 1 1 0 1 1 0 0 1 0 1 1 1 0 1 0 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 1 1 1 1 0 1 0 1 0 0 0 1 1 0 0 1 1 1 1 1 1 0 0 1 1 0 1 0 1 1 0 0 0 1 1 1 1 0]\n\nestimator = LinearSVC(C=1.0)\n# \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3067\u7dda\u5f62\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\u3092\u8a13\u7df4\u3059\u308b\nestimator.fit(data_train, label_train)\n\n# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5206\u985e\u3059\u308b\nestimator.predict(data_test)\n# => [0 0 0 1 0 0 0 1 0 0 1 1 0 1 1 0 1 1 1 1 0 0 0 1 0 0 1 0 1 1 0 1 1 0 1 0 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 0 1 0 0 0 0 1 1 1 1 0 0 1 1 1 1 0 0 0 1 0 0 1 1 0 0 1 0 0 0 1 1 0 0 1 1 0 0]\n# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u300c\u4e88\u6e2c\u3055\u308c\u305f\u30e9\u30d9\u30eb (= \u30af\u30e9\u30b9)\u300d\u304c\u8fd4\u308b\n\n\u5206\u985e\u30c7\u30fc\u30bf\u306e\u8a55\u4fa1\u30e1\u30c8\u30ea\u30af\u30b9\u3001\u6b63\u89e3\u7387\u3092\u7b97\u51fa\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u30d3\u30eb\u30c9\u30a4\u30f3\u3055\u308c\u305f\u3044\u304f\u3064\u304b\u306e\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u3068\u3001\u305d\u308c\u4ee5\u5916\u306b\u72ec\u81ea\u306e\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u8a73\u3057\u304f\u306f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u53c2\u7167\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u8003\u5bdf\n\u99c6\u3051\u8db3\u3067\u8aac\u660e\u3057\u307e\u3057\u305f\u304c\u3001\u8907\u96d1\u306a\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\u306e\u8af8\u5b9f\u88c5\u3092 scikit-learn \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u8907\u96d1\u306a\u8a08\u7b97\u7406\u8ad6\u306b\u3064\u3044\u3066\u306f\u3067\u304d\u308b\u3060\u3051\u3088\u304f\u30c6\u30b9\u30c8\u3055\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7528\u3044\u3066\u8aa4\u8a08\u7b97\u3092\u9632\u3050\u3053\u3068\u304c\u5927\u5207\u3067\u3059\u3002\u307e\u305f\u80cc\u666f\u306b\u3042\u308b\u7406\u8ad6\u3078\u306e\u7406\u89e3\u3082\u540c\u6642\u306b\u5fc5\u8981\u3067\u3059\u3002\n[\u6628\u65e5](http://qiita.com/ynakayama/items/d204e9d9d4a18ab13a39)\u306f[\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3](http://ja.wikipedia.org/wiki/%E3%82%B5%E3%83%9D%E3%83%BC%E3%83%88%E3%83%99%E3%82%AF%E3%82%BF%E3%83%BC%E3%83%9E%E3%82%B7%E3%83%B3)\u306e\u5206\u985e\u5883\u754c\u306b\u304a\u3044\u3066\u6700\u5927\u306e\u30de\u30fc\u30b8\u30f3\u3092\u6c42\u3081\u308b\u5f0f\u3092\u8aac\u660e\u3057\u307e\u3057\u305f\u3002\n\nscikit-learn \u306b\u306f\u6a5f\u68b0\u5b66\u7fd2\u306e\u305f\u3081\u306e\u3055\u307e\u3056\u307e\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305f\u3068\u3048\u3070[\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4e00\u89a7](http://scikit-learn.org/stable/supervised_learning.html)\u3092\u898b\u308b\u3060\u3051\u3067\u3082\u591a\u7a2e\u591a\u69d8\u306a\u3082\u306e\u304c\u3042\u308a\u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\u306e\u5b9f\u88c5\u3060\u3051\u3067\u3082\u5206\u985e\u3001\u56de\u5e30\u3001\u5bc6\u5ea6\u63a8\u5b9a\u306a\u3069\u3068\u8c4a\u5bcc\u3067\u3059\u3002\n\nSupport Vector Machines\nhttp://scikit-learn.org/stable/modules/svm.html\n\n\u7dda\u5f62\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\u306f\u7279\u5fb4\u7a7a\u9593 \u03a6(x) \u306b\u304a\u3044\u3066\u7dda\u5f62\u5206\u96e2\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u4eee\u5b9a\u3057\u3001\u5f97\u3089\u308c\u308b SVM \u306f\u5165\u529b\u7a7a\u9593 x \u306b\u304a\u3044\u3066\u8a13\u7df4\u30c7\u30fc\u30bf\u3092\u5b8c\u5168\u306b\u5206\u96e2\u3057\u3001\u8ca0\u4f8b\u3092 0 \u3001\u6b63\u4f8b\u3092 1 \u3068\u3057\u305f\u4e8c\u5024\u306e\u30af\u30e9\u30b9 (scikit-learn \u306b\u304a\u3044\u3066\u306f\u30e9\u30d9\u30eb) \u306b\u3057\u307e\u3059\u3002\n\nSVM \u306b\u4ee3\u8868\u3055\u308c\u308b\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u3067\u306f\u3001\u6559\u5e2b\u30c7\u30fc\u30bf\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u60c5\u5831\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3001\u5b9f\u969b\u306b\u5206\u985e\u3055\u308c\u308b\u60c5\u5831\u3092\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3068\u547c\u3073\u307e\u3059\u3002\n\n\u5b9f\u969b\u306b SVM \u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u5206\u985e\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```py3\nfrom sklearn import svm\nX = [[0, 0], [1, 1]]\ny = [0, 1]\nclf = svm.SVC()\nclf.fit(X, y) # \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\n\n# \u30c6\u30b9\u30c8\nclf.predict([[0., 2.]])\n# => array([1])\nclf.predict([[0., 0.]])\n# => array([0])\nclf.predict([[1., 0.]])\n# => array([1])\nclf.predict([[0., 1.]])\n# => array([1])\n```\n\n### \u591a\u30af\u30e9\u30b9\u5206\u985e\n\n\u7dda\u5f62\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\u306f\u591a\u30af\u30e9\u30b9\u5206\u985e\u306b\u304a\u3044\u3066 1 \u5bfe\u4ed6\u65b9\u5f0f\u3092\u63a1\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u591a\u30af\u30e9\u30b9 SVM \u306b\u304a\u3044\u3066\u6700\u3082\u3088\u304f\u7528\u3044\u3089\u308c\u308b\u65b9\u6cd5\u3067 K \u500b\u306e\u30af\u30e9\u30b9\u304c\u3042\u308b\u3068\u304d\u306b\u3042\u308b\u30af\u30e9\u30b9 Ck \u306b\u5c5e\u3059\u308b\u30c7\u30fc\u30bf\u3092\u6b63\u4f8b\u3001\u305d\u308c\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u3092\u8ca0\u4f8b\u3068\u3057\u3066 K \u500b\u306e\u5225\u3005\u306e SVM yk(x) \u3092\u5b66\u7fd2\u3057\u307e\u3059\u3002\n\n```py3\nX = [[0], [1], [2], [3]]\nY = [0, 1, 2, 3]\nlin_clf.fit(X, Y)\ndec = lin_clf.decision_function([[1]])\ndec.shape\n# => (1, 4)\n```\n\n### \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u3088\u308b\u5206\u985e\n\nload_digits \u30e1\u30bd\u30c3\u30c9\u3067\u8aad\u3093\u3060\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092 train_test_split \u30e1\u30bd\u30c3\u30c9\u3067\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5206\u5272\u3057\u307e\u3059\u3002\u5206\u5272\u6bd4\u7387\u306f 3:1 \u3067\u3059\u3002\n\n```py3\nfrom sklearn.datasets import load_digits\nfrom sklearn.cross_validation import train_test_split\nfrom sklearn.svm import LinearSVC\ndigits = load_digits(2)\ndata_train, data_test, label_train, label_test = train_test_split(digits.data, digits.target)\n\nprint (data_train)\n# \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u7528\u306e\u30c7\u30fc\u30bf\n#[[  0.   0.   0. ...,  16.   7.   0.]\n# [  0.   0.   2. ...,   1.   0.   0.]\n# [  0.   0.   0. ...,  16.   0.   0.]\n# ..., \n# [  0.   0.   0. ...,  16.   1.   0.]\n# [  0.   0.   2. ...,  16.  10.   3.]\n# [  0.   0.   5. ...,   8.   0.   0.]]\n\nprint (label_train)\n# \u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u30e9\u30d9\u30eb\u3001\u6b63\u4f8b\u304c 1 \u3067\u8ca0\u4f8b\u304c 0 \u3068\u306a\u308b\n#[1 0 1 1 1 1 1 0 1 1 0 0 0 0 0 0 1 0 0 0 1 1 1 0 0 1 0 1 1 0 1 0 1 0 1 1 0 0 1 1 0 0 1 0 0 0 0 1 1 1 1 0 1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 1 1 0 0 0 0 0 1 1 1 1 1 0 1 0 1 1 1 1 1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 0 1 0 0 0 1 0 0 1 1 1 0 0 0 0 0 0 1 1 0 1 0 1 1 0 1 0 0 0 0 0 1 0 1 0 0 1 0 0 0 1 1 0 0 0 0 1 1 1 1 0 0 1 1 0 1 1 0 0 1 0 1 1 1 0 1 0 1 1 0 1 1 0 0 1 0 1 1 0 0 1 1 0 1 1 1 1 1 1 1 1 0 1 1 0 0 1 0 0 0 0 1 0 0 1 1 1 1 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 1 1 1 1 0 1 0 1 0 0 0 1 1 0 0 1 1 1 1 1 1 0 0 1 1 0 1 0 1 1 0 0 0 1 1 1 1 0]\n\nestimator = LinearSVC(C=1.0)\n# \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3067\u7dda\u5f62\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\u3092\u8a13\u7df4\u3059\u308b\nestimator.fit(data_train, label_train)\n\n# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5206\u985e\u3059\u308b\nestimator.predict(data_test)\n# => [0 0 0 1 0 0 0 1 0 0 1 1 0 1 1 0 1 1 1 1 0 0 0 1 0 0 1 0 1 1 0 1 1 0 1 0 1 0 0 0 1 1 1 0 1 1 1 0 0 1 0 1 0 1 0 0 0 0 1 1 1 1 0 0 1 1 1 1 0 0 0 1 0 0 1 1 0 0 1 0 0 0 1 1 0 0 1 1 0 0]\n# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u300c\u4e88\u6e2c\u3055\u308c\u305f\u30e9\u30d9\u30eb (= \u30af\u30e9\u30b9)\u300d\u304c\u8fd4\u308b\n```\n\n\u5206\u985e\u30c7\u30fc\u30bf\u306e\u8a55\u4fa1\u30e1\u30c8\u30ea\u30af\u30b9\u3001\u6b63\u89e3\u7387\u3092\u7b97\u51fa\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u30d3\u30eb\u30c9\u30a4\u30f3\u3055\u308c\u305f\u3044\u304f\u3064\u304b\u306e\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u3068\u3001\u305d\u308c\u4ee5\u5916\u306b\u72ec\u81ea\u306e\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u8a73\u3057\u304f\u306f[\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](http://scikit-learn.org/stable/model_selection.html)\u3092\u53c2\u7167\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n## \u8003\u5bdf\n\n\u99c6\u3051\u8db3\u3067\u8aac\u660e\u3057\u307e\u3057\u305f\u304c\u3001\u8907\u96d1\u306a\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\u306e\u8af8\u5b9f\u88c5\u3092 scikit-learn \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u8907\u96d1\u306a\u8a08\u7b97\u7406\u8ad6\u306b\u3064\u3044\u3066\u306f\u3067\u304d\u308b\u3060\u3051\u3088\u304f\u30c6\u30b9\u30c8\u3055\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7528\u3044\u3066\u8aa4\u8a08\u7b97\u3092\u9632\u3050\u3053\u3068\u304c\u5927\u5207\u3067\u3059\u3002\u307e\u305f\u80cc\u666f\u306b\u3042\u308b\u7406\u8ad6\u3078\u306e\u7406\u89e3\u3082\u540c\u6642\u306b\u5fc5\u8981\u3067\u3059\u3002\n\n", "tags": ["scikit-learn", "MachineLearning", "svm"]}