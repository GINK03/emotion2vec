{"context": " More than 1 year has passed since last update.\n\n\u30b9\u30c8\u30c3\u30af\u6570\u30fb\u30b3\u30e1\u30f3\u30c8\u6570\u30fb\u30c4\u30a4\u30fc\u30c8\u6570\u30fb\u306f\u3066\u3076\u6570\u30fb\u3044\u3044\u306d\u6570\u3092\u53d6\u5f97\u3059\u308b\n\nphp\n<?php\n\nconst USERNAME = \"suin\";\nconst COUNT = 100;\n\nerror_reporting(-1);\nini_set('display_errors', 1);\n\n$filename = 'https://qiita.com/api/v1/users/'.USERNAME.'/items?per_page='.COUNT;\n\n$contents = file_get_contents($filename);\n\n$items = json_decode($contents, 1);\n\n$items = array_map(function (array $item) {\n    return [\n        'url' => $item['url'],\n        'title' => $item['title'],\n        'created_at' => (new DateTime($item['created_at']))->format('Y-m-d'),\n            'stock_count' => $item['stock_count'],\n            'comment_count' => $item['comment_count'],\n            'content_length' => mb_strlen($item['raw_body'], 'UTF-8'),\n    ];\n}, $items);\n\nusort($items, function ($item1, $item2) {\n    $created1 = new DateTime($item1['created_at']);\n    $created2 = new DateTime($item2['created_at']);\n\n    return ($created1 >= $created2) ? 1 : 0;\n});\n\necho \"created: \", date('Y-m-d H:i:s'), PHP_EOL;\n\necho implode(\"\\t\", [\n    \"date\",\n    \"stocks\",\n    \"comments\",\n    \"hatena\",\n    \"tweets\",\n    \"likes\",\n    \"chars\",\n    \"url\",\n    \"title\",\n]), PHP_EOL;\n\nforeach ($items as $item) {\n    $fb = 0;\n    $hateb = 0;\n    $tweets = 0;\n    $fb = get_fb($item['url']);\n    $hateb = get_hatena_count($item['url']);\n    $tweets = get_tweets($item['url']);\n\n    echo implode(\"\\t\", [\n        $item['created_at'],\n        $item['stock_count'],\n        $item['comment_count'],\n        $hateb,\n        $tweets,\n        $fb,\n        $item['content_length'],\n        $item['url'],\n        $item['title'],\n    ]), PHP_EOL;\n}\n\nfunction get_hatena_count($url)\n{\n    $url = 'http://api.b.st-hatena.com/entry.count?url='.urlencode($url);\n    return file_get_contents($url);\n}\n\nfunction get_tweets($url)\n{\n    $url = 'http://urls.api.twitter.com/1/urls/count.json?url='.urlencode($url);\n    $json = file_get_contents($url);\n    return json_decode($json)->count;\n}\n\nfunction get_fb($url)\n{\n    $url = 'http://graph.facebook.com/?id='.($url);\n    $json = file_get_contents($url);\n    $data = array_merge(['shares' => 0], json_decode($json, true));\n    return $data['shares'];\n}\n\n\n\n\n\u30da\u30fc\u30b8\u30d3\u30e5\u30fc\u3092\u53d6\u5f97\u3059\u308b\nPV\u306fAPI\u3067\u53d6\u308c\u306a\u3044\u306e\u3067\u3001Qiita\u306b\u30ed\u30b0\u30a4\u30f3\u3057Chrome\u306e\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u4e0a\u3067\u5b9f\u884c\u3059\u308b\n\ncoffeescript\nusername = \"suin\"\ncount = 100\n\ngetQiitaItems = (username) ->\n    console.log(1)\n    $.ajax\n        url: \"https://qiita.com/api/v1/users/#{username}/items?per_page=#{count}\"\n        success: (items)->\n            getPV(items)\n        dataType: \"json\"\n\ngetPV = (items, result = \"\") ->\n    if items.length is 0\n        console.log(\"Result:\" + result)\n        return\n\n    item = items.shift()\n\n    console.log(\"fetch(#{items.length}): #{item.url}...\")\n    $.get item.url, (data)->\n        pv = $(data).find('li.view-count').text().trim().split(/\\s/)[0]\n        result = result + \"\\n\" + item.url + \"\\t\" + pv\n        getPV(items, result) \n\ngetQiitaItems(username)\n\n\n\u2193 \u30b3\u30f3\u30d1\u30a4\u30eb\u5f8cJS\n\njs\n// Generated by CoffeeScript 1.6.3\n(function() {\n  var count, getPV, getQiitaItems, username;\n\n  username = \"suin\";\n\n  count = 100;\n\n  getQiitaItems = function(username) {\n    console.log(1);\n    return $.ajax({\n      url: \"https://qiita.com/api/v1/users/\" + username + \"/items?per_page=\" + count,\n      success: function(items) {\n        return getPV(items);\n      },\n      dataType: \"json\"\n    });\n  };\n\n  getPV = function(items, result) {\n    var item;\n    if (result == null) {\n      result = \"\";\n    }\n    if (items.length === 0) {\n      console.log(\"Result:\" + result);\n      return;\n    }\n    item = items.shift();\n    console.log(\"fetch(\" + items.length + \"): \" + item.url + \"...\");\n    return $.get(item.url, function(data) {\n      var pv;\n      pv = $(data).find('li.view-count').text().trim().split(/\\s/)[0];\n      result = result + \"\\n\" + item.url + \"\\t\" + pv;\n      return getPV(items, result);\n    });\n  };\n\n  getQiitaItems(username);\n\n}).call(this);\n\n\n\n\n## \u30b9\u30c8\u30c3\u30af\u6570\u30fb\u30b3\u30e1\u30f3\u30c8\u6570\u30fb\u30c4\u30a4\u30fc\u30c8\u6570\u30fb\u306f\u3066\u3076\u6570\u30fb\u3044\u3044\u306d\u6570\u3092\u53d6\u5f97\u3059\u308b\n\n```php:php\n<?php\n\nconst USERNAME = \"suin\";\nconst COUNT = 100;\n\nerror_reporting(-1);\nini_set('display_errors', 1);\n\n$filename = 'https://qiita.com/api/v1/users/'.USERNAME.'/items?per_page='.COUNT;\n\n$contents = file_get_contents($filename);\n\n$items = json_decode($contents, 1);\n\n$items = array_map(function (array $item) {\n    return [\n        'url' => $item['url'],\n        'title' => $item['title'],\n        'created_at' => (new DateTime($item['created_at']))->format('Y-m-d'),\n\t\t\t'stock_count' => $item['stock_count'],\n\t\t\t'comment_count' => $item['comment_count'],\n\t\t\t'content_length' => mb_strlen($item['raw_body'], 'UTF-8'),\n    ];\n}, $items);\n\nusort($items, function ($item1, $item2) {\n    $created1 = new DateTime($item1['created_at']);\n    $created2 = new DateTime($item2['created_at']);\n\n    return ($created1 >= $created2) ? 1 : 0;\n});\n\necho \"created: \", date('Y-m-d H:i:s'), PHP_EOL;\n\necho implode(\"\\t\", [\n\t\"date\",\n\t\"stocks\",\n\t\"comments\",\n\t\"hatena\",\n\t\"tweets\",\n\t\"likes\",\n\t\"chars\",\n\t\"url\",\n\t\"title\",\n]), PHP_EOL;\n\nforeach ($items as $item) {\n\t$fb = 0;\n\t$hateb = 0;\n\t$tweets = 0;\n\t$fb = get_fb($item['url']);\n\t$hateb = get_hatena_count($item['url']);\n\t$tweets = get_tweets($item['url']);\n\t\n\techo implode(\"\\t\", [\n\t\t$item['created_at'],\n\t\t$item['stock_count'],\n\t\t$item['comment_count'],\n\t\t$hateb,\n\t\t$tweets,\n\t\t$fb,\n\t\t$item['content_length'],\n\t\t$item['url'],\n\t\t$item['title'],\n\t]), PHP_EOL;\n}\n\nfunction get_hatena_count($url)\n{\n\t$url = 'http://api.b.st-hatena.com/entry.count?url='.urlencode($url);\n\treturn file_get_contents($url);\n}\n\nfunction get_tweets($url)\n{\n\t$url = 'http://urls.api.twitter.com/1/urls/count.json?url='.urlencode($url);\n\t$json = file_get_contents($url);\n\treturn json_decode($json)->count;\n}\n\nfunction get_fb($url)\n{\n\t$url = 'http://graph.facebook.com/?id='.($url);\n\t$json = file_get_contents($url);\n\t$data = array_merge(['shares' => 0], json_decode($json, true));\n\treturn $data['shares'];\n}\n\n```\n\n# \u30da\u30fc\u30b8\u30d3\u30e5\u30fc\u3092\u53d6\u5f97\u3059\u308b\n\nPV\u306fAPI\u3067\u53d6\u308c\u306a\u3044\u306e\u3067\u3001Qiita\u306b\u30ed\u30b0\u30a4\u30f3\u3057Chrome\u306e\u30a4\u30f3\u30b9\u30da\u30af\u30bf\u4e0a\u3067\u5b9f\u884c\u3059\u308b\n\n```coffeescript:coffeescript\nusername = \"suin\"\ncount = 100\n\ngetQiitaItems = (username) ->\n\tconsole.log(1)\n\t$.ajax\n\t\turl: \"https://qiita.com/api/v1/users/#{username}/items?per_page=#{count}\"\n\t\tsuccess: (items)->\n\t\t\tgetPV(items)\n\t\tdataType: \"json\"\n\ngetPV = (items, result = \"\") ->\n\tif items.length is 0\n\t\tconsole.log(\"Result:\" + result)\n\t\treturn\n\n\titem = items.shift()\n\n\tconsole.log(\"fetch(#{items.length}): #{item.url}...\")\n\t$.get item.url, (data)->\n\t\tpv = $(data).find('li.view-count').text().trim().split(/\\s/)[0]\n\t\tresult = result + \"\\n\" + item.url + \"\\t\" + pv\n\t\tgetPV(items, result) \n\ngetQiitaItems(username)\n```\n\n\u2193 \u30b3\u30f3\u30d1\u30a4\u30eb\u5f8cJS\n\n```js:js\n// Generated by CoffeeScript 1.6.3\n(function() {\n  var count, getPV, getQiitaItems, username;\n\n  username = \"suin\";\n\n  count = 100;\n\n  getQiitaItems = function(username) {\n    console.log(1);\n    return $.ajax({\n      url: \"https://qiita.com/api/v1/users/\" + username + \"/items?per_page=\" + count,\n      success: function(items) {\n        return getPV(items);\n      },\n      dataType: \"json\"\n    });\n  };\n\n  getPV = function(items, result) {\n    var item;\n    if (result == null) {\n      result = \"\";\n    }\n    if (items.length === 0) {\n      console.log(\"Result:\" + result);\n      return;\n    }\n    item = items.shift();\n    console.log(\"fetch(\" + items.length + \"): \" + item.url + \"...\");\n    return $.get(item.url, function(data) {\n      var pv;\n      pv = $(data).find('li.view-count').text().trim().split(/\\s/)[0];\n      result = result + \"\\n\" + item.url + \"\\t\" + pv;\n      return getPV(items, result);\n    });\n  };\n\n  getQiitaItems(username);\n\n}).call(this);\n```\n", "tags": ["Qiita", "QiitaAPI"]}