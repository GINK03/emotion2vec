{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\n\u300cList \u3084\u914d\u5217\u306a\u3069\u306b\u5bfe\u3059\u308b\u3001\u3044\u308f\u3086\u308b top-k selection \u3092 Java \u3067\u52b9\u7387\u7684\u306b\u5b9f\u73fe\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3001\u554f\u984c\u306b\u5e74\u306b 2\u301c3 \u56de\u3050\u3089\u3044\u306e\u983b\u5ea6\u3067\u60a9\u307e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u306a\u306b\u304b\u3044\u3044 top-k selection \u306e\u5b9f\u88c5\u306f\u3042\u308a\u307e\u305b\u3093\u304b\uff1f\u300d\n(\u6771\u4eac\u90fd / 34\u6b73 / \u7537\u6027)\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u304a\u4ed5\u4e8b\u3092\u3057\u3066\u3044\u308b\u3068\u3001\u3044\u308d\u3093\u306a\u5834\u9762\u3067 top-k selection \u3092\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u72b6\u6cc1\u306b\u3061\u3087\u304f\u3061\u3087\u304f\u51fa\u304f\u308f\u3059\u3053\u3068\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u3082\u3061\u308d\u3093 RDBMS \u3092\u4f7f\u3063\u3066\u3044\u308c\u3070\u3001ORDER BY sort_column LIMIT k \u3068\u3059\u308b\u3053\u3068\u3067\u3055\u304f\u3063\u3068 top-k selection \u304c\u5b9f\u73fe\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u304c\u3001RDBMS \u306e\u5916\u3067 top-k selection \u3092\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u72b6\u6cc1\u3060\u3063\u3066 (\u5e74\u306b 2\u301c3 \u56de\u3082\u3042\u308b\u304b\u306f\u500b\u4eba\u5dee\u304c\u3042\u308a\u307e\u3059\u304c)\u3001\u4eba\u751f\u306e\u4e2d\u3067 1\u301c2 \u56de\u306f\u906d\u9047\u3059\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3068\u3053\u308d\u3067\u6700\u8fd1\u3001Guava: Google Core Libraries for Java \u306b\u3053\u306e top-k selection \u306e\u5b9f\u88c5 \u304c\u3042\u308b\u3053\u3068\u3092\u77e5\u3063\u305f\u306e\u3067\u3001\u3053\u306e\u5b9f\u88c5\u304c\u679c\u305f\u3057\u3066\u4f7f\u3048\u308b\u3082\u306e\u306a\u306e\u304b\u3001\u305d\u3057\u3066\u305d\u306e\u6027\u80fd\u304c\u3069\u308c\u304f\u3089\u3044\u306e\u3082\u306e\u306a\u306e\u304b\u304c\u6c17\u306b\u306a\u3063\u3066\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u3068\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u3055\u3066\u3001\u305d\u306e\u6027\u80fd\u306f\u3044\u304b\u306b\u3002\n\nGuava \u306e top-k selection \u5b9f\u88c5\n\u4eca\u56de\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u5bfe\u8c61\u3068\u3059\u308b Guava \u306e top-k selection \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nList \u306e\u5927\u304d\u3055\u3068 top-k \u306e k \u3092\u6bd4\u8f03\u3057\u3001k \u304c List \u306e\u534a\u5206\u306e\u5927\u304d\u3055\u4ee5\u4e0a\u306e\u5834\u5408\u306b\u306f Arrays.sort() (\u3064\u307e\u308a\u306f TimSort) \u3057\u3066 top-k \u3092\u6c42\u3081\u308b\n\nk \u304c Integer.MAX_VALUE / 2 \u4ee5\u4e0a\u3067\u3042\u308c\u3070\u3001Collections.sort() (\u3053\u3061\u3089\u3082 TimSort) \u3057\u3066 top-k \u3092\u6c42\u3081\u308b\n\u4e0a\u8a18\u306e\u3069\u3061\u3089\u306b\u3082\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u5834\u5408\u306f\u3001List \u304b\u3089\u5f97\u3089\u308c\u308b Iterator \u306b\u5bfe\u3057\u3066\u6b21\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067 top-k \u3092\u6c42\u3081\u308b\n\n\n\nk * 2 \u306e\u30b5\u30a4\u30ba\u3067\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3057\u306a\u304c\u3089\u3001\n\u30d0\u30c3\u30d5\u30a1\u304c\u6e80\u676f\u306b\u306a\u3063\u305f\u3089 quickselect \u3057\u3066\u30d0\u30c3\u30d5\u30a1\u3092\u6e1b\u3089\u3057\u3001\n\u6700\u5f8c\u306b Arrays.sort() \u3059\u308b\n\n\n\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u6761\u4ef6\n\njmh \u3067\u6e2c\u5b9a\u3057\u307e\u3059\n\nCollections.sort() \u3068 Ordering#leastOf() \u306e\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u6bd4\u8f03\u3057\u307e\u3059\n\n\n\nCollections.sort() \u306e\u5b9f\u88c5\u306f TimSort \u3067\u3059\n\u6bd4\u8f03\u6761\u4ef6\u304c\u305d\u3053\u305d\u3053\u7b49\u3057\u304f\u306a\u308b\u3088\u3046\u306b\u3001Collections.sort() \u306b\u3088\u308b top-k selection \u306e\u5b9f\u88c5\u3067\u306f\u3001\u30bd\u30fc\u30c8\u5f8c\u306b top-k \u4ef6\u3060\u3051\u3092\u62bd\u51fa\u3057\u3066\u65b0\u305f\u306a ArrayList \u3092\u751f\u6210\u3059\u308b\u307e\u3067\u306e\u51e6\u7406\u3092\u6e2c\u5b9a\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\n\n\nList \u306e\u30b5\u30a4\u30ba\u306f 20, 320, 5120 \u306e 3 \u30d1\u30bf\u30fc\u30f3\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\nTop-k \u306e k (\u9078\u51fa\u3059\u308b\u500b\u6570) \u306f\u3001List \u30b5\u30a4\u30ba\u306b\u5bfe\u3059\u308b\u5272\u5408\u304b\u3089\u7b97\u51fa\u3057\u307e\u3059\n\n\n\u5272\u5408\u306f 0.05, 0.1, 0.2, 0.4, 0.8 \u306e 5 \u30d1\u30bf\u30fc\u30f3\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\n\n\n\n\u4ee5\u4e0b\u304c\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306b\u4f7f\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\nimport com.google.common.collect.Ordering;\nimport org.openjdk.jmh.annotations.Benchmark;\nimport org.openjdk.jmh.annotations.Param;\nimport org.openjdk.jmh.annotations.Scope;\nimport org.openjdk.jmh.annotations.Setup;\nimport org.openjdk.jmh.annotations.State;\nimport org.openjdk.jmh.infra.Blackhole;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Random;\n\n@State(Scope.Benchmark)\npublic class GuavaOrderingBenchmark {\n    @Param({\"0.05\", \"0.1\", \"0.2\", \"0.4\", \"0.8\"})\n    public double sortingRatio;\n\n    @Param({\"20\", \"320\", \"5120\"})\n    public int size;\n\n    private int k;\n    private List<Double> data;\n\n    @Setup\n    public void prepare() {\n        k = (int) (size * sortingRatio);\n\n        Random r = new Random(12345L);\n        data = new ArrayList<>(size);\n        for (int i = 0; i < size; i++) {\n            data.add(r.nextDouble());\n        }\n    }\n\n    @Benchmark\n    public void collectionsSort(Blackhole bh) {\n        bh.consume(leastK(data, k));\n    }\n\n    @Benchmark\n    public void guavaOrdering(Blackhole bh) {\n        bh.consume(Ordering.natural().leastOf(data, k));\n    }\n\n    private List<Double> leastK(List<Double> data, int k) {\n        Collections.sort(data);\n        return new ArrayList<>(data.subList(0, k));\n    }\n}\n\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7d50\u679c\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7d50\u679c\u3092\u30b0\u30e9\u30d5\u3067\u898b\u307f\u307e\u3057\u3087\u3046\u3002\u3044\u305a\u308c\u3082\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u8868\u3059\u306e\u3067\u3001\u30d0\u30fc\u304c\u9577\u3051\u308c\u3070\u9577\u3044\u307b\u3069\u3088\u3044\u6027\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002\n\n\n\n\u3044\u305a\u308c\u306e\u7d50\u679c\u3092\u898b\u3066\u3082\u3001\u5358\u7d14\u306b Collections.sort() \u3067\u30bd\u30fc\u30c8\u3057\u3066\u304b\u3089 top-k selection \u3057\u305f\u65b9\u304c\u826f\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\u3042\u307e\u308a\u306b\u3082\u60f3\u5b9a\u3057\u3066\u3044\u306a\u3044\u7d50\u679c\u904e\u304e\u3066\u30b7\u30e7\u30c3\u30af\u3067\u3057\u305f\u3002Guava \u3068\u306f\u306a\u3093\u3060\u3063\u305f\u306e\u304b\u3002\n\n\u307e\u3068\u3081\n\u60f3\u5b9a\u3057\u3066\u3044\u305f\u3088\u3046\u306a\u7d50\u679c (Guava \u306e\u65b9\u304c\u3088\u3044) \u304c\u5f97\u3089\u308c\u305a\u3001\u3042\u307e\u308a\u306e Guava \u306e\u60e8\u6557\u3063\u3077\u308a\u306b\u8ffd\u52a0\u3067\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u3068\u308b\u6c17\u529b\u3092\u5931\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u591a\u5206\u3001\u8d85\u5de8\u5927\u306a List \u306b\u5bfe\u3057\u3066\u3054\u304f\u3054\u304f\u5c0f\u3055\u3044 k \u306e\u3082\u3068\u3067 Guava \u306e\u5b9f\u88c5\u3092\u4f7f\u3046\u5206\u306b\u306f\u6027\u80fd\u304c\u3067\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u591a\u5206\u3002\n# \u306f\u3058\u3081\u306b\n\n> \u300cList \u3084\u914d\u5217\u306a\u3069\u306b\u5bfe\u3059\u308b\u3001\u3044\u308f\u3086\u308b top-k selection \u3092 Java \u3067\u52b9\u7387\u7684\u306b\u5b9f\u73fe\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3001\u554f\u984c\u306b\u5e74\u306b 2\u301c3 \u56de\u3050\u3089\u3044\u306e\u983b\u5ea6\u3067\u60a9\u307e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u306a\u306b\u304b\u3044\u3044 top-k selection \u306e\u5b9f\u88c5\u306f\u3042\u308a\u307e\u305b\u3093\u304b\uff1f\u300d\n(\u6771\u4eac\u90fd / 34\u6b73 / \u7537\u6027)\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u304a\u4ed5\u4e8b\u3092\u3057\u3066\u3044\u308b\u3068\u3001\u3044\u308d\u3093\u306a\u5834\u9762\u3067 top-k selection \u3092\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u72b6\u6cc1\u306b\u3061\u3087\u304f\u3061\u3087\u304f\u51fa\u304f\u308f\u3059\u3053\u3068\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u3082\u3061\u308d\u3093 RDBMS \u3092\u4f7f\u3063\u3066\u3044\u308c\u3070\u3001`ORDER BY sort_column LIMIT k` \u3068\u3059\u308b\u3053\u3068\u3067\u3055\u304f\u3063\u3068 top-k selection \u304c\u5b9f\u73fe\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u304c\u3001RDBMS \u306e\u5916\u3067 top-k selection \u3092\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u72b6\u6cc1\u3060\u3063\u3066 (\u5e74\u306b 2\u301c3 \u56de\u3082\u3042\u308b\u304b\u306f\u500b\u4eba\u5dee\u304c\u3042\u308a\u307e\u3059\u304c)\u3001\u4eba\u751f\u306e\u4e2d\u3067 1\u301c2 \u56de\u306f\u906d\u9047\u3059\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3068\u3053\u308d\u3067\u6700\u8fd1\u3001[Guava: Google Core Libraries for Java](https://github.com/google/guava) \u306b\u3053\u306e [top-k selection \u306e\u5b9f\u88c5](http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/collect/Ordering.html#greatestOf(java.lang.Iterable,%20int)) \u304c\u3042\u308b\u3053\u3068\u3092\u77e5\u3063\u305f\u306e\u3067\u3001\u3053\u306e\u5b9f\u88c5\u304c\u679c\u305f\u3057\u3066\u4f7f\u3048\u308b\u3082\u306e\u306a\u306e\u304b\u3001\u305d\u3057\u3066\u305d\u306e\u6027\u80fd\u304c\u3069\u308c\u304f\u3089\u3044\u306e\u3082\u306e\u306a\u306e\u304b\u304c\u6c17\u306b\u306a\u3063\u3066\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u3068\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u3055\u3066\u3001\u305d\u306e\u6027\u80fd\u306f\u3044\u304b\u306b\u3002\n\n# Guava \u306e top-k selection \u5b9f\u88c5\n\n\u4eca\u56de\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u5bfe\u8c61\u3068\u3059\u308b Guava \u306e top-k selection \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n- List \u306e\u5927\u304d\u3055\u3068 top-k \u306e `k` \u3092\u6bd4\u8f03\u3057\u3001`k` \u304c List \u306e\u534a\u5206\u306e\u5927\u304d\u3055\u4ee5\u4e0a\u306e\u5834\u5408\u306b\u306f `Arrays.sort()` (\u3064\u307e\u308a\u306f [TimSort](https://en.wikipedia.org/wiki/Timsort)) \u3057\u3066 top-k \u3092\u6c42\u3081\u308b\n- `k` \u304c `Integer.MAX_VALUE / 2` \u4ee5\u4e0a\u3067\u3042\u308c\u3070\u3001`Collections.sort()` (\u3053\u3061\u3089\u3082 TimSort) \u3057\u3066 top-k \u3092\u6c42\u3081\u308b\n- \u4e0a\u8a18\u306e\u3069\u3061\u3089\u306b\u3082\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u5834\u5408\u306f\u3001List \u304b\u3089\u5f97\u3089\u308c\u308b `Iterator` \u306b\u5bfe\u3057\u3066\u6b21\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067 top-k \u3092\u6c42\u3081\u308b\n    - `k * 2` \u306e\u30b5\u30a4\u30ba\u3067\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u3057\u306a\u304c\u3089\u3001\n    - \u30d0\u30c3\u30d5\u30a1\u304c\u6e80\u676f\u306b\u306a\u3063\u305f\u3089 quickselect \u3057\u3066\u30d0\u30c3\u30d5\u30a1\u3092\u6e1b\u3089\u3057\u3001\n    - \u6700\u5f8c\u306b `Arrays.sort()` \u3059\u308b\n\n\n# \u30d9\u30f3\u30c1\u30de\u30fc\u30af\u6761\u4ef6\n\n- jmh \u3067\u6e2c\u5b9a\u3057\u307e\u3059\n- `Collections.sort()` \u3068 `Ordering#leastOf()` \u306e\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u6bd4\u8f03\u3057\u307e\u3059\n    - `Collections.sort()` \u306e\u5b9f\u88c5\u306f TimSort \u3067\u3059\n    - \u6bd4\u8f03\u6761\u4ef6\u304c\u305d\u3053\u305d\u3053\u7b49\u3057\u304f\u306a\u308b\u3088\u3046\u306b\u3001`Collections.sort()` \u306b\u3088\u308b top-k selection \u306e\u5b9f\u88c5\u3067\u306f\u3001\u30bd\u30fc\u30c8\u5f8c\u306b top-k \u4ef6\u3060\u3051\u3092\u62bd\u51fa\u3057\u3066\u65b0\u305f\u306a ArrayList \u3092\u751f\u6210\u3059\u308b\u307e\u3067\u306e\u51e6\u7406\u3092\u6e2c\u5b9a\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\n- List \u306e\u30b5\u30a4\u30ba\u306f 20, 320, 5120 \u306e 3 \u30d1\u30bf\u30fc\u30f3\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\n- Top-k \u306e `k` (\u9078\u51fa\u3059\u308b\u500b\u6570) \u306f\u3001List \u30b5\u30a4\u30ba\u306b\u5bfe\u3059\u308b\u5272\u5408\u304b\u3089\u7b97\u51fa\u3057\u307e\u3059\n    - \u5272\u5408\u306f 0.05, 0.1, 0.2, 0.4, 0.8 \u306e 5 \u30d1\u30bf\u30fc\u30f3\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\n\n\u4ee5\u4e0b\u304c\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306b\u4f7f\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\n\n```java\nimport com.google.common.collect.Ordering;\nimport org.openjdk.jmh.annotations.Benchmark;\nimport org.openjdk.jmh.annotations.Param;\nimport org.openjdk.jmh.annotations.Scope;\nimport org.openjdk.jmh.annotations.Setup;\nimport org.openjdk.jmh.annotations.State;\nimport org.openjdk.jmh.infra.Blackhole;\n\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Random;\n\n@State(Scope.Benchmark)\npublic class GuavaOrderingBenchmark {\n\t@Param({\"0.05\", \"0.1\", \"0.2\", \"0.4\", \"0.8\"})\n\tpublic double sortingRatio;\n\n\t@Param({\"20\", \"320\", \"5120\"})\n\tpublic int size;\n\n\tprivate int k;\n\tprivate List<Double> data;\n\n\t@Setup\n\tpublic void prepare() {\n\t\tk = (int) (size * sortingRatio);\n\n\t\tRandom r = new Random(12345L);\n\t\tdata = new ArrayList<>(size);\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tdata.add(r.nextDouble());\n\t\t}\n\t}\n\n\t@Benchmark\n\tpublic void collectionsSort(Blackhole bh) {\n\t\tbh.consume(leastK(data, k));\n\t}\n\n\t@Benchmark\n\tpublic void guavaOrdering(Blackhole bh) {\n\t\tbh.consume(Ordering.natural().leastOf(data, k));\n\t}\n\n\tprivate List<Double> leastK(List<Double> data, int k) {\n\t\tCollections.sort(data);\n\t\treturn new ArrayList<>(data.subList(0, k));\n\t}\n}\n```\n\n# \u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7d50\u679c\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7d50\u679c\u3092\u30b0\u30e9\u30d5\u3067\u898b\u307f\u307e\u3057\u3087\u3046\u3002\u3044\u305a\u308c\u3082\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u3092\u8868\u3059\u306e\u3067\u3001\u30d0\u30fc\u304c\u9577\u3051\u308c\u3070\u9577\u3044\u307b\u3069\u3088\u3044\u6027\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3057\u307e\u3059\u3002\n\n![size20.png](https://qiita-image-store.s3.amazonaws.com/0/11734/805edbb4-b9c2-a7f3-9320-897dd85dbdcf.png)\n\n![size320.png](https://qiita-image-store.s3.amazonaws.com/0/11734/96d4122f-01d4-a9f0-810a-8ff0349441f9.png)\n\n![size5120.png](https://qiita-image-store.s3.amazonaws.com/0/11734/b065a155-bfe4-005a-b66d-ea086ef3796e.png)\n\n\u3044\u305a\u308c\u306e\u7d50\u679c\u3092\u898b\u3066\u3082\u3001\u5358\u7d14\u306b `Collections.sort()` \u3067\u30bd\u30fc\u30c8\u3057\u3066\u304b\u3089 top-k selection \u3057\u305f\u65b9\u304c\u826f\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\u3042\u307e\u308a\u306b\u3082\u60f3\u5b9a\u3057\u3066\u3044\u306a\u3044\u7d50\u679c\u904e\u304e\u3066\u30b7\u30e7\u30c3\u30af\u3067\u3057\u305f\u3002Guava \u3068\u306f\u306a\u3093\u3060\u3063\u305f\u306e\u304b\u3002\n\n\n# \u307e\u3068\u3081\n\n\u60f3\u5b9a\u3057\u3066\u3044\u305f\u3088\u3046\u306a\u7d50\u679c (Guava \u306e\u65b9\u304c\u3088\u3044) \u304c\u5f97\u3089\u308c\u305a\u3001\u3042\u307e\u308a\u306e Guava \u306e\u60e8\u6557\u3063\u3077\u308a\u306b\u8ffd\u52a0\u3067\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u3068\u308b\u6c17\u529b\u3092\u5931\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u591a\u5206\u3001\u8d85\u5de8\u5927\u306a List \u306b\u5bfe\u3057\u3066\u3054\u304f\u3054\u304f\u5c0f\u3055\u3044 `k` \u306e\u3082\u3068\u3067 Guava \u306e\u5b9f\u88c5\u3092\u4f7f\u3046\u5206\u306b\u306f\u6027\u80fd\u304c\u3067\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u591a\u5206\u3002\n", "tags": ["Java", "guava"]}