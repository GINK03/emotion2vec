{"context": " More than 1 year has passed since last update.quicklisp.lisp\u306fProxy Authentication(Basic\u8a8d\u8a3c)\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3057\u305f\u3002\n\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\nhttps://github.com/tamurashingo/quicklisp-bootstrap/blob/ProxyAuth/quicklisp.lisp\n\u7d50\u8ad6\u304b\u3089\u8a00\u3044\u307e\u3059\u3068\u3001(quicklisp-quickstar:install)\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u3082\u4fee\u6b63\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001\u307e\u3060\u5b8c\u5168\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u3093\u306a\u611f\u3058\u3067\u3001quicklisp.lisp\u304c\u884c\u3046\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u7d42\u308f\u308b\u3068\u6b62\u307e\u308a\u307e\u3059\u3002\nCL-USER> (quicklisp-quickstart:install :proxy \"http://proxyserver/\" :user \"admin\" :pass \"password\")\n; Fetching #<URL \"http://beta.quicklisp.org/quickstart/asdf.lisp\">\n; 194.07KB\n==================================================\n198,729 bytes in 1.32 seconds (146.58KB/sec)\n; Fetching #<URL \"http://beta.quicklisp.org/quickstart/quicklisp.tar\">\n; 210.00KB\n==================================================\n215,040 bytes in 1.49 seconds (141.13KB/sec)\n; Fetching #<URL \"http://beta.quicklisp.org/quickstart/setup.lisp\">\n; 4.96KB\n==================================================\n5,078 bytes in 0.00 seconds (4958.98KB/sec); Evaluation aborted on #<QL-HTTP:UNEXPECTED-HTTP-STATUS #x21015886BD>.\nCL-USER> \n\n\n\u65b9\u91dd\n\nProxy\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u3044\u308b\u3093\u3067\u3042\u308c\u3070\u3001\u6700\u521d\u304b\u3089Proxy-Authorization\u30d8\u30c3\u30c0\u3092\u9001\u3063\u3066\u3057\u307e\u3046\u3002\n\n\u5f53\u521d\u306f401\u3084407\u304c\u8fd4\u3063\u3066\u304d\u305f\u3089Proxy-Authorization\u3092\u4ed8\u4e0e\u3057\u3088\u3046\u3068\u8003\u3048\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u672c\u5f53\u306b\u52d5\u304f\u304b\u3069\u3046\u304b\u3092\u65e9\u304f\u78ba\u304b\u3081\u305f\u304b\u3063\u305f\u306e\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u3092\u751f\u6210\u3059\u308b\u3068\u3053\u308d\u306b\u5b9f\u88c5\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n\u30d7\u30ed\u30ad\u30b7\u63a5\u7d9a\u306b\u5fc5\u8981\u306a\u60c5\u5831\u306e\u5b9a\u7fa9\n\u307e\u305a\u3001*proxy-url*\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u540c\u3058\u5834\u6240\u306b*proxy-user*\u304a\u3088\u3073*proxy-pass*\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n(defvar *proxy-url* nil)\n(defvar *proxy-user* nil)  ; \u8ffd\u52a0\n(defvar *proxy-pass* nil)  ; \u8ffd\u52a0\n\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u306e\u7de8\u96c6\n\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u306b\u3001Proxy-Authorization\u3092\u4ed8\u4e0e\u3057\u307e\u3059\u3002*proxy-url*\u3001*proxy-user*\u3001*proxy-pass*\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306e\u307f\u4ed8\u4e0e\u3059\u308b\u3088\u3046\u306b\u5236\u5fa1\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n(defun make-request-buffer (host port path &key (method \"GET\"))\n  (setf method (string method))\n  (when *proxy-url*\n    (setf path (full-proxy-path host port path)))\n  (let ((sink (make-instance 'octet-sink)))\n    (flet ((add-line (&rest strings)\n             (apply #'add-strings sink strings)\n             (add-newline sink)))\n      (add-line method \" \" path \" HTTP/1.1\")\n      (add-line \"Host: \" host (if (= port 80) \"\"\n                                  (format nil \":~D\" port)))\n\n      ;; \u4eca\u56de\u306e\u8ffd\u52a0\u90e8\u5206\n      (when (and *proxy-url* *proxy-user* *proxy-pass*)\n        (add-line \"Proxy-Authorization: Basic \" (make-basic-authentication *proxy-user* *proxy-pass*)))\n\n      (add-line \"Connection: close\")\n      ;; FIXME: get this version string from somewhere else.\n      (add-line \"User-Agent: quicklisp-bootstrap/2012112500\")\n      (add-newline sink)\n      (sink-buffer sink))))\n\nproxy\u30b5\u30fc\u30d0\u3078\u306e\u63a5\u7d9a\u306f\u65e2\u5b58\u306e\u307e\u307e\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u8d77\u52d5\u30d1\u30e9\u30e1\u30fc\u30bf\u3078\u306e\u8ffd\u52a0\n\u6b21\u306b\u3001install\u306ekey\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002key\u306e\u8ffd\u52a0\u306e\u307f\u3067\u3059\u3002\n(defun install (&key ((:path *home*) *home*)\n                     ((:proxy *proxy-url*) *proxy-url*)\n                     ((:user *proxy-user*) *proxy-user*)  ; \u8ffd\u52a0\n                     ((:pass *proxy-pass*) *proxy-pass*)) ; \u8ffd\u52a0\n  (setf *home* (merge-pathnames *home*))\n  (let ((setup-file (qmerge \"setup.lisp\")))\n    (when (probe-file setup-file)\n      (multiple-value-bind (result proceed)\n          (with-simple-restart (load-setup \"Load ~S\" setup-file)\n            (error \"Quicklisp has already been installed. Load ~S instead.\"\n                   setup-file))\n        (declare (ignore result))\n        (when proceed\n          (return-from install (load setup-file))))))\n  (if (find-package '#:ql)\n      (progn\n        (write-line \"!!! Quicklisp has already been set up. !!!\")\n        (write-string *after-initial-setup-message*)\n        t)\n      (call-with-quiet-compilation #'initial-install)))\n\n\n\u6574\u5408\u6027\u3092\u3068\u308b\n\u6700\u5f8c\u306b\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5b9a\u7fa9\u3092\u4fee\u6b63\u3057\u3066\u5b8c\u4e86\u3067\u3059\u3002\n(defpackage #:qlqs-http\n  (:use #:cl #:qlqs-network #:qlqs-progress)\n  (:export #:fetch\n           #:*proxy-url*\n           #:*proxy-user*  ; \u8ffd\u52a0\n           #:*proxy-pass*  ; \u8ffd\u52a0\n           #:*maximum-redirects*\n           #:*default-url-defaults*))\n\n(defpackage #:quicklisp-quickstart\n  (:use #:cl #:qlqs-impl #:qlqs-impl-util #:qlqs-http #:qlqs-minitar)\n  (:export #:install\n           #:help\n           #:*proxy-url*\n           #:*proxy-user*  ; \u8ffd\u52a0\n           #:*proxy-pass*  ; \u8ffd\u52a0\n           #:*asdf-url*\n           #:*quicklisp-tar-url*\n           #:*setup-url*\n           #:*help-message*\n           #:*after-load-message*\n           #:*after-initial-setup-message*))\n\n\n\u4f7f\u3044\u65b9\n(quicklisp-quickstart:install :proxy \"http://proxyserver/\" :user \"admin\" :pass \"password\")\n\n\u3053\u306e\u30bd\u30fc\u30b9\u306fquicklisp-bootstrap\u3068\u3057\u3066github\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u6b21\u306fquicklisp-client\u306e\u4fee\u6b63\u3067\u3059\u304c\u3001\u4f3c\u305f\u3088\u3046\u306a\u4fee\u6b63\u3067\u3044\u3051\u308b\u306f\u305a\u3067\u3059\u3002\nquicklisp.lisp\u306fProxy Authentication(Basic\u8a8d\u8a3c)\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3057\u305f\u3002\n\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\nhttps://github.com/tamurashingo/quicklisp-bootstrap/blob/ProxyAuth/quicklisp.lisp\n\n\n\u7d50\u8ad6\u304b\u3089\u8a00\u3044\u307e\u3059\u3068\u3001```(quicklisp-quickstar:install)```\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\u3082\u4fee\u6b63\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001\u307e\u3060\u5b8c\u5168\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u3093\u306a\u611f\u3058\u3067\u3001quicklisp.lisp\u304c\u884c\u3046\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u7d42\u308f\u308b\u3068\u6b62\u307e\u308a\u307e\u3059\u3002\n\n```cl:\nCL-USER> (quicklisp-quickstart:install :proxy \"http://proxyserver/\" :user \"admin\" :pass \"password\")\n; Fetching #<URL \"http://beta.quicklisp.org/quickstart/asdf.lisp\">\n; 194.07KB\n==================================================\n198,729 bytes in 1.32 seconds (146.58KB/sec)\n; Fetching #<URL \"http://beta.quicklisp.org/quickstart/quicklisp.tar\">\n; 210.00KB\n==================================================\n215,040 bytes in 1.49 seconds (141.13KB/sec)\n; Fetching #<URL \"http://beta.quicklisp.org/quickstart/setup.lisp\">\n; 4.96KB\n==================================================\n5,078 bytes in 0.00 seconds (4958.98KB/sec); Evaluation aborted on #<QL-HTTP:UNEXPECTED-HTTP-STATUS #x21015886BD>.\nCL-USER> \n```\n\n## \u65b9\u91dd\n\n - Proxy\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u3044\u308b\u3093\u3067\u3042\u308c\u3070\u3001\u6700\u521d\u304b\u3089Proxy-Authorization\u30d8\u30c3\u30c0\u3092\u9001\u3063\u3066\u3057\u307e\u3046\u3002\n\n\u5f53\u521d\u306f401\u3084407\u304c\u8fd4\u3063\u3066\u304d\u305f\u3089Proxy-Authorization\u3092\u4ed8\u4e0e\u3057\u3088\u3046\u3068\u8003\u3048\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u672c\u5f53\u306b\u52d5\u304f\u304b\u3069\u3046\u304b\u3092\u65e9\u304f\u78ba\u304b\u3081\u305f\u304b\u3063\u305f\u306e\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u3092\u751f\u6210\u3059\u308b\u3068\u3053\u308d\u306b\u5b9f\u88c5\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n\n## \u30d7\u30ed\u30ad\u30b7\u63a5\u7d9a\u306b\u5fc5\u8981\u306a\u60c5\u5831\u306e\u5b9a\u7fa9\n\n\u307e\u305a\u3001```*proxy-url*```\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u540c\u3058\u5834\u6240\u306b```*proxy-user*```\u304a\u3088\u3073```*proxy-pass*```\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```cl:\n(defvar *proxy-url* nil)\n(defvar *proxy-user* nil)  ; \u8ffd\u52a0\n(defvar *proxy-pass* nil)  ; \u8ffd\u52a0\n```\n\n\n## \u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u306e\u7de8\u96c6\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u306b\u3001```Proxy-Authorization```\u3092\u4ed8\u4e0e\u3057\u307e\u3059\u3002```*proxy-url*```\u3001```*proxy-user*```\u3001```*proxy-pass*```\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306e\u307f\u4ed8\u4e0e\u3059\u308b\u3088\u3046\u306b\u5236\u5fa1\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n```cl:\n(defun make-request-buffer (host port path &key (method \"GET\"))\n  (setf method (string method))\n  (when *proxy-url*\n    (setf path (full-proxy-path host port path)))\n  (let ((sink (make-instance 'octet-sink)))\n    (flet ((add-line (&rest strings)\n             (apply #'add-strings sink strings)\n             (add-newline sink)))\n      (add-line method \" \" path \" HTTP/1.1\")\n      (add-line \"Host: \" host (if (= port 80) \"\"\n                                  (format nil \":~D\" port)))\n\n      ;; \u4eca\u56de\u306e\u8ffd\u52a0\u90e8\u5206\n      (when (and *proxy-url* *proxy-user* *proxy-pass*)\n        (add-line \"Proxy-Authorization: Basic \" (make-basic-authentication *proxy-user* *proxy-pass*)))\n\n      (add-line \"Connection: close\")\n      ;; FIXME: get this version string from somewhere else.\n      (add-line \"User-Agent: quicklisp-bootstrap/2012112500\")\n      (add-newline sink)\n      (sink-buffer sink))))\n```\n\nproxy\u30b5\u30fc\u30d0\u3078\u306e\u63a5\u7d9a\u306f\u65e2\u5b58\u306e\u307e\u307e\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\n\n## \u8d77\u52d5\u30d1\u30e9\u30e1\u30fc\u30bf\u3078\u306e\u8ffd\u52a0\n\n\u6b21\u306b\u3001install\u306ekey\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002key\u306e\u8ffd\u52a0\u306e\u307f\u3067\u3059\u3002\n\n```cl:\n(defun install (&key ((:path *home*) *home*)\n                     ((:proxy *proxy-url*) *proxy-url*)\n                     ((:user *proxy-user*) *proxy-user*)  ; \u8ffd\u52a0\n                     ((:pass *proxy-pass*) *proxy-pass*)) ; \u8ffd\u52a0\n  (setf *home* (merge-pathnames *home*))\n  (let ((setup-file (qmerge \"setup.lisp\")))\n    (when (probe-file setup-file)\n      (multiple-value-bind (result proceed)\n          (with-simple-restart (load-setup \"Load ~S\" setup-file)\n            (error \"Quicklisp has already been installed. Load ~S instead.\"\n                   setup-file))\n        (declare (ignore result))\n        (when proceed\n          (return-from install (load setup-file))))))\n  (if (find-package '#:ql)\n      (progn\n        (write-line \"!!! Quicklisp has already been set up. !!!\")\n        (write-string *after-initial-setup-message*)\n        t)\n      (call-with-quiet-compilation #'initial-install)))\n```\n\n\n## \u6574\u5408\u6027\u3092\u3068\u308b\n\n\u6700\u5f8c\u306b\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5b9a\u7fa9\u3092\u4fee\u6b63\u3057\u3066\u5b8c\u4e86\u3067\u3059\u3002\n\n```cl:\n(defpackage #:qlqs-http\n  (:use #:cl #:qlqs-network #:qlqs-progress)\n  (:export #:fetch\n           #:*proxy-url*\n           #:*proxy-user*  ; \u8ffd\u52a0\n           #:*proxy-pass*  ; \u8ffd\u52a0\n           #:*maximum-redirects*\n           #:*default-url-defaults*))\n\n(defpackage #:quicklisp-quickstart\n  (:use #:cl #:qlqs-impl #:qlqs-impl-util #:qlqs-http #:qlqs-minitar)\n  (:export #:install\n           #:help\n           #:*proxy-url*\n           #:*proxy-user*  ; \u8ffd\u52a0\n           #:*proxy-pass*  ; \u8ffd\u52a0\n           #:*asdf-url*\n           #:*quicklisp-tar-url*\n           #:*setup-url*\n           #:*help-message*\n           #:*after-load-message*\n           #:*after-initial-setup-message*))\n```\n\n\n# \u4f7f\u3044\u65b9\n\n```cl:\n(quicklisp-quickstart:install :proxy \"http://proxyserver/\" :user \"admin\" :pass \"password\")\n```\n\n\u3053\u306e\u30bd\u30fc\u30b9\u306fquicklisp-bootstrap\u3068\u3057\u3066github\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u6b21\u306fquicklisp-client\u306e\u4fee\u6b63\u3067\u3059\u304c\u3001\u4f3c\u305f\u3088\u3046\u306a\u4fee\u6b63\u3067\u3044\u3051\u308b\u306f\u305a\u3067\u3059\u3002\n", "tags": ["CommonLisp", "common-lisp"]}