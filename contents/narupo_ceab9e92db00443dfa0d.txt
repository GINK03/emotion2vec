{"context": " More than 1 year has passed since last update.\n\nQt Creator\u3067\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\n\u30b3\u30de\u30f3\u30c9\u306e\u51fa\u529b\u3092GUI\u3067\u5229\u7528\u3057\u305f\u3044\u3002QProcess\u3092\u4f7f\u3046\u3002\n\u30e9\u30a4\u30f3\u30a8\u30c7\u30a3\u30bf\u304b\u3089\u30d5\u30a9\u30fc\u30ab\u30b9\u304c\u5916\u308c\u308b\u3068\u30b7\u30b0\u30ca\u30eb\u304c\u9001\u4fe1\u3055\u308c\u308b\u306e\u304b\u52dd\u624b\u306b\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n\ncommandline.h\n#ifndef COMMANDLINE_H\n#define COMMANDLINE_H\n\n#include <QDialog>\n#include <QDebug>\n#include <QString>\n#include <QProcess>\n\n/* For Japanese */\n#define TR(s) (QString::fromLocal8Bit(s))\n\nnamespace Ui {\nclass CommandLine;\n}\n\nclass CommandLine : public QDialog\n{\n    Q_OBJECT\n\npublic:\n    explicit CommandLine(QWidget *parent = 0);\n    ~CommandLine();\n\nprivate:\n    void killProcess();\n\nprivate:\n    Ui::CommandLine *ui;\n    QProcess *process;\n\nprivate slots:\n    // Command line editor\n    void onEndInputCommand();\n\n    // Process\n    void onEndProcess();\n    void onProcessStdout();\n    void onProcessStderr();\n};\n#endif // COMMANDLINE_H\n\n\n\n\ncommandline.cpp\n#include \"commandline.h\"\n#include \"ui_commandline.h\"\n\nCommandLine::CommandLine(QWidget *parent) :\n    QDialog(parent),\n    ui(new Ui::CommandLine),\n    process(new QProcess(this))\n{\n    // UI\n    ui->setupUi(this);\n\n    // Command line editor\n    connect(ui->commandEdit, SIGNAL(editingFinished()), this, SLOT(onEndInputCommand()));\n\n    // Process event\n    connect(process, SIGNAL(finished(int)), this, SLOT(onEndProcess()));\n    connect(process, SIGNAL(readyReadStandardOutput()), this, SLOT(onProcessStdout()));\n    connect(process, SIGNAL(readyReadStandardError()), this, SLOT(onProcessStderr()));\n}\n\nCommandLine::~CommandLine()\n{\n    delete ui;\n    delete process;\n}\n\n/* Command line editor */\n\nvoid\nCommandLine::onEndInputCommand() {\n    QString cmdline = ui->commandEdit->text();\n\n    qDebug() << \"command:\" << cmdline;\n\n    killProcess();\n    process->start(cmdline);\n    if (!process->waitForStarted()) {\n        qWarning() << process->errorString();\n        return;\n    }\n\n    ui->commandEdit->setFocus(Qt::OtherFocusReason);\n}\n\n/* Process */\n\nvoid\nCommandLine::killProcess()\n{\n    if (process->state() == QProcess::Running) {\n        process->kill();\n        if (!process->waitForFinished()) {\n            qWarning() << process->errorString();\n        }\n    }\n}\n\nvoid\nCommandLine::onEndProcess() {\n    qDebug() << \"end process\";\n}\n\n/**\n * \u51fa\u529b\u304c\u591a\u3044\u3068\u305f\u307e\u306b\u8aad\u307f\u3053\u307c\u3059\u3053\u3068\u304c\u3042\u308b\u3002\u9045\u5ef6\u51e6\u7406\u5165\u308c\u308b\u306e\u3082\u306a\u3041\u3002\n */\nvoid\nCommandLine::onProcessStdout() {\n    qDebug() << \"process stdout\";\n\n    QByteArray arr = process->readAllStandardOutput();\n    qDebug() << TR(arr);\n}\n\nvoid\nCommandLine::onProcessStderr() {\n    qDebug() << \"process stderr\";\n\n    QByteArray arr = process->readAllStandardError();\n    qDebug() << TR(arr);\n}\n\n\n\n\n\u53c2\u7167\nhttp://mf-atelier.sakura.ne.jp/mf-atelier/modules/tips/program/Qt/qt_tips.html\n# Qt Creator\u3067\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\n\n\u30b3\u30de\u30f3\u30c9\u306e\u51fa\u529b\u3092GUI\u3067\u5229\u7528\u3057\u305f\u3044\u3002QProcess\u3092\u4f7f\u3046\u3002\n\u30e9\u30a4\u30f3\u30a8\u30c7\u30a3\u30bf\u304b\u3089\u30d5\u30a9\u30fc\u30ab\u30b9\u304c\u5916\u308c\u308b\u3068\u30b7\u30b0\u30ca\u30eb\u304c\u9001\u4fe1\u3055\u308c\u308b\u306e\u304b\u52dd\u624b\u306b\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n![sample.gif](https://qiita-image-store.s3.amazonaws.com/0/41479/9f4d0cdf-14cd-1d53-25f0-59db62d200ac.gif)\n\n\n```c++:commandline.h\n#ifndef COMMANDLINE_H\n#define COMMANDLINE_H\n\n#include <QDialog>\n#include <QDebug>\n#include <QString>\n#include <QProcess>\n\n/* For Japanese */\n#define TR(s) (QString::fromLocal8Bit(s))\n\nnamespace Ui {\nclass CommandLine;\n}\n\nclass CommandLine : public QDialog\n{\n    Q_OBJECT\n\npublic:\n    explicit CommandLine(QWidget *parent = 0);\n    ~CommandLine();\n\nprivate:\n    void killProcess();\n\nprivate:\n    Ui::CommandLine *ui;\n    QProcess *process;\n\nprivate slots:\n    // Command line editor\n    void onEndInputCommand();\n\n    // Process\n    void onEndProcess();\n    void onProcessStdout();\n    void onProcessStderr();\n};\n#endif // COMMANDLINE_H\n\n```\n\n```c++:commandline.cpp\n#include \"commandline.h\"\n#include \"ui_commandline.h\"\n\nCommandLine::CommandLine(QWidget *parent) :\n    QDialog(parent),\n    ui(new Ui::CommandLine),\n    process(new QProcess(this))\n{\n    // UI\n    ui->setupUi(this);\n\n    // Command line editor\n    connect(ui->commandEdit, SIGNAL(editingFinished()), this, SLOT(onEndInputCommand()));\n\n    // Process event\n    connect(process, SIGNAL(finished(int)), this, SLOT(onEndProcess()));\n    connect(process, SIGNAL(readyReadStandardOutput()), this, SLOT(onProcessStdout()));\n    connect(process, SIGNAL(readyReadStandardError()), this, SLOT(onProcessStderr()));\n}\n\nCommandLine::~CommandLine()\n{\n    delete ui;\n    delete process;\n}\n\n/* Command line editor */\n\nvoid\nCommandLine::onEndInputCommand() {\n    QString cmdline = ui->commandEdit->text();\n\n    qDebug() << \"command:\" << cmdline;\n\n    killProcess();\n    process->start(cmdline);\n    if (!process->waitForStarted()) {\n        qWarning() << process->errorString();\n        return;\n    }\n\n    ui->commandEdit->setFocus(Qt::OtherFocusReason);\n}\n\n/* Process */\n\nvoid\nCommandLine::killProcess()\n{\n    if (process->state() == QProcess::Running) {\n        process->kill();\n        if (!process->waitForFinished()) {\n            qWarning() << process->errorString();\n        }\n    }\n}\n\nvoid\nCommandLine::onEndProcess() {\n    qDebug() << \"end process\";\n}\n\n/**\n * \u51fa\u529b\u304c\u591a\u3044\u3068\u305f\u307e\u306b\u8aad\u307f\u3053\u307c\u3059\u3053\u3068\u304c\u3042\u308b\u3002\u9045\u5ef6\u51e6\u7406\u5165\u308c\u308b\u306e\u3082\u306a\u3041\u3002\n */\nvoid\nCommandLine::onProcessStdout() {\n    qDebug() << \"process stdout\";\n\n    QByteArray arr = process->readAllStandardOutput();\n    qDebug() << TR(arr);\n}\n\nvoid\nCommandLine::onProcessStderr() {\n    qDebug() << \"process stderr\";\n\n    QByteArray arr = process->readAllStandardError();\n    qDebug() << TR(arr);\n}\n\n```\n\n## \u53c2\u7167\n\nhttp://mf-atelier.sakura.ne.jp/mf-atelier/modules/tips/program/Qt/qt_tips.html\n", "tags": ["Qt", "QtCreator", "C++", "\u30d7\u30ed\u30bb\u30b9"]}