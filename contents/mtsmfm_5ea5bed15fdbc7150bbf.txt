{"context": "\u554f\u984c\u306f\u3053\u3061\u3089\nhttp://qiita.com/mtsmfm/items/6d9112fcc568908caaba\nrequire 'bundler/inline'\n\ngemfile do\n  source 'https://rubygems.org'\n\n  gem 'activesupport', require: 'active_support/all'\n\n  gem 'minitest', require: 'minitest/autorun'\n  gem 'minitest-reporters'\n\n  gem 'awesome_print'\n  gem 'tapp'\n\n  gem 'pry'\n  gem 'pry-rescue', require: 'pry-rescue/minitest'\n  gem 'pry-stack_explorer'\nend\n\nMAP = {\n  1 => %w(A B),\n  2 => %w(B C),\n  3 => %w(C D),\n  4 => %w(D E),\n  5 => %w(E F),\n  6 => %w(F G),\n  7 => %w(G H),\n  8 => %w(H A)\n}\n\ndef solve(input)\n  lines, start_rock = input.split(?:)\n  lines = lines.chars.map(&:to_i)\n\n  ng_indexes = []\n\n  rock = start_rock\n  lines.each.with_index do |l, i|\n    if MAP[l].include?(rock)\n      rock = (MAP[l] - [rock]).first\n      ng_indexes << i\n    end\n  end\n\n  dead = []\n\n  puts \"start_rock: %s, rock: %s\" % [start_rock, rock]\n\n  (?A..?H).each do |man|\n    puts man\n\n    pos = man\n\n    lines.each.with_index.to_a.reverse.each do |l, i|\n      print pos\n\n      if MAP[l].include?(pos)\n        if i.in?(ng_indexes)\n          dead << man\n          break\n        else\n          pos = (MAP[l] - [pos]).first\n        end\n      end\n    end\n\n    dead << man if dead.exclude?(man) && (man == rock || pos == start_rock)\n\n    p dead\n  end\n\n  ((?A..?H).to_a - dead).join\nend\n\nTEST_DATA = <<~EOS\n  test(\"1228:A\", \"ADEFG\")\nEOS\n\nMinitest::Reporters.use!(Minitest::Reporters::ProgressReporter.new)\n\ndescribe 'Doukaku' do\n  TEST_DATA.each_line do |test|\n    input, expected = test.scan(/\"(.*)\", \"(.*)\"/)[0]\n\n    it input do\n      assert_equal expected, solve(input)\n    end\n  end\nend\n\n\u554f\u984c\u306f\u3053\u3061\u3089\n\nhttp://qiita.com/mtsmfm/items/6d9112fcc568908caaba\n\n```rb\nrequire 'bundler/inline'\n\ngemfile do\n  source 'https://rubygems.org'\n\n  gem 'activesupport', require: 'active_support/all'\n\n  gem 'minitest', require: 'minitest/autorun'\n  gem 'minitest-reporters'\n\n  gem 'awesome_print'\n  gem 'tapp'\n\n  gem 'pry'\n  gem 'pry-rescue', require: 'pry-rescue/minitest'\n  gem 'pry-stack_explorer'\nend\n\nMAP = {\n  1 => %w(A B),\n  2 => %w(B C),\n  3 => %w(C D),\n  4 => %w(D E),\n  5 => %w(E F),\n  6 => %w(F G),\n  7 => %w(G H),\n  8 => %w(H A)\n}\n\ndef solve(input)\n  lines, start_rock = input.split(?:)\n  lines = lines.chars.map(&:to_i)\n\n  ng_indexes = []\n\n  rock = start_rock\n  lines.each.with_index do |l, i|\n    if MAP[l].include?(rock)\n      rock = (MAP[l] - [rock]).first\n      ng_indexes << i\n    end\n  end\n\n  dead = []\n\n  puts \"start_rock: %s, rock: %s\" % [start_rock, rock]\n\n  (?A..?H).each do |man|\n    puts man\n\n    pos = man\n\n    lines.each.with_index.to_a.reverse.each do |l, i|\n      print pos\n\n      if MAP[l].include?(pos)\n        if i.in?(ng_indexes)\n          dead << man\n          break\n        else\n          pos = (MAP[l] - [pos]).first\n        end\n      end\n    end\n\n    dead << man if dead.exclude?(man) && (man == rock || pos == start_rock)\n\n    p dead\n  end\n\n  ((?A..?H).to_a - dead).join\nend\n\nTEST_DATA = <<~EOS\n  test(\"1228:A\", \"ADEFG\")\nEOS\n\nMinitest::Reporters.use!(Minitest::Reporters::ProgressReporter.new)\n\ndescribe 'Doukaku' do\n  TEST_DATA.each_line do |test|\n    input, expected = test.scan(/\"(.*)\", \"(.*)\"/)[0]\n\n    it input do\n      assert_equal expected, solve(input)\n    end\n  end\nend\n```\n", "tags": ["\u3069\u3046\u66f8\u304f", "yhpg", "Ruby"]}