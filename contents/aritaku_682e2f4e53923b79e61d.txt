{"tags": ["Swift", "Protocol", "DesignPattern"], "context": "2016 Swift Advent Calender\u306e21\u65e5\u76ee\u3067\u3059\u3002\n\u4eca\u56de\u306f\u30a2\u30d7\u30ea\u958b\u767a\u3092\u3059\u308b\u6642\u306b\u306f\u307b\u3068\u3093\u3069\u306e\u5834\u9762\u3067\u4f5c\u308b\u3067\u3042\u308d\u3046\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u6a5f\u80fd\u3092\u3069\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u3044\u304f\u306e\u304b\u3068\u3044\u3046\u89b3\u70b9\u304b\u3089\u5f79\u306b\u7acb\u3061\u305d\u3046\u306aProtocol\u3092\u6d3b\u7528\u3057\u305fDesign Pattern\u3092\u307e\u3068\u3081\u3066\u3044\u304d\u307e\u3059\u3002(\u57fa\u790e\u7684\u306a\u5185\u5bb9\u3067\u3042\u308d\u3046\u4e8b\u9805\u3092\u307e\u3068\u3081\u308b\u306e\u3067\u5fdc\u7528\u7684\u30fb\u5b9f\u8df5\u7684\u306aPattern\u7b49\u306f\u30b3\u30e1\u30f3\u30c8\u306b\u3066\u6559\u3048\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002)\n\u4eca\u56de\u8003\u3048\u308b\u306e\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306aUI\u9054\u3067\u3059\u3002\n\n\u30a2\u30d7\u30ea\u306e\u521d\u56de\u7acb\u3061\u4e0a\u3052\u6642\u306b\u65b0\u898f\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u3092\u884c\u3046\u969b\u306fUser\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u3001\u305d\u3053\u306b\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u30a2\u30d7\u30ea\u5185\u3067\u4e00\u3064\u3057\u304b\u5b58\u5728\u3057\u3048\u306a\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u30c7\u30fc\u30bf\u7ba1\u7406\u3092\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\u305d\u306e\u969b\u306b\u306f\u8a00\u308f\u305a\u3082\u304c\u306aSingleton Pattern\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n1. Singleton Pattern\n\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3092\u4f5c\u308b\u969b\u306b\u306fSwift\u3067\u306fstatic\u3092\u6d3b\u7528\u3059\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u3002\nstruct UserSettingClass {\n\n    static var sharedInstance = UserSettingClass()\n\n    static var email: String = \"\"\n    static var password: String = \"\"\n    static var userName: String = \"\"\n    static var gender: Gender = .unknown\n    static var birthday: Date? = nil\n    static var profileImage: Data? = nil\n\n    enum Gender {\n        case unknown\n        case man\n        case woman\n    }\n\n    static func saveData(){\n        //\u51e6\u7406\n    }\n}\n\n\n\u305d\u3046\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u69d8\u306b\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3092\u751f\u6210\u3067\u304d\u307e\u3059\u3002\nvar userSetting = UserSettingClass.sharedInstance\n\n\u3057\u304b\u3057\u3001class\u3068struct\u306f\u7a7a\u306e\u72b6\u614b\u3067\u3082\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u521d\u671f\u5316\u304c\u51fa\u6765\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001\u7a7a\u306eenum\u3067\u306f\u51fa\u6765\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081\u306benum\u3092\u6d3b\u7528\u3059\u308b\u3068\u3044\u3046\u624b\u3082\u3042\u308a\u305d\u3046\u3067\u3059\u3002\nenum UserSettingEnum {\n\n    static var email: String = \"\"\n    static var password: String = \"\"\n    static var userName: String = \"\"\n    static var gender: Gender = .unknown\n    static var birthday: Date? = nil\n    static var profileImage: Data? = nil\n\n    enum Gender {\n        case unknown\n        case man\n        case woman\n    }\n\n    static func saveData(){\n        //\u51e6\u7406\n    }\n}\n\n\n\u3053\u308c\u3067\u4ee5\u4e0b\u306e\u69d8\u306b\u547c\u3073\u51fa\u3057\u304c\u51fa\u6765\u307e\u3059\u3002\nvar textField: UITextField!\nUserSettingEnum.email = textField.text!\n\n\n\n2. Builder Pattern\n\u4eca\u56de\u306eUserSetting\u306e\u30e2\u30c7\u30eb\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u6570\u304c\u5c11\u306a\u304f\u521d\u671f\u5316\u7279\u306b\u82e6\u52b4\u306f\u3057\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306fUser\u30e2\u30c7\u30eb\u304c\u5927\u304d\u304f\u306a\u308a\u30d7\u30ed\u30d1\u30c6\u30a3\u6570\u304c\u591a\u304f\u306a\u308a\u3059\u304e\u308b\u3053\u3068\u304c\u3042\u308a\u3048\u307e\u3059\u3002\nclass ComplexityUser {\n\n    var name: String?\n    var age: Int?\n    var email: String?\n    var password: String?\n    var prefecture: String?\n    var job: String?\n    var weight: Double?\n    var height: Double?\n    var message: String?\n\n    init(name: String, age: Int, email: String, password: String, prefecture: String, weight: Double, height: Double, message: String) {\n        self.name = name\n        self.age = age\n        self.email = email\n        self.password = password\n        self.prefecture = prefecture\n        self.weight = weight\n        self.height = height\n        self.message = message\n    }\n}\n\n\n\u3053\u306e\u5834\u5408\u3001\u521d\u671f\u5316\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\nlet complexityUser = ComplexityUser(name: \"aritaku\", age: 25, email: \"hoge@hoge\", password: \"password\", prefecture: \"shiga\", weight: 62.0, height: 180.0, message: \"hello\")\n\n\n\u8f9b\u3044\u3067\u3059\u306d\u3002\u305d\u3046\u3044\u3063\u305f\u5834\u5408\u3067\u306fBuilder Pattern\u304c\u4f7f\u3048\u305d\u3046\u3067\u3059\u3002\nprotocol UserBuilder {\n    var name: String { get }\n    var age: Int { get }\n    var email: String { get }\n    var password: String { get }\n    var prefecture: String { get }\n    var job: String { get }\n    var weight: Double { get }\n    var height: Double { get }\n    var message: String { get }\n}\n\nstruct AppUserBuilder: UserBuilder {\n\n    var name = \"Burger\"\n    var age = 25\n    var email = \"hoge@hoge\"\n    var password = \"hogehogehoge\"\n    var prefecture = \"Kagoshima\"\n    var job = \"Swift Programmer\"\n    var weight = 62.2\n    var height = 180.0\n    var message = \"\u306f\u3058\u3081\u307e\u3057\u3066\u3002\"\n\n}\n\nstruct User {\n\n    var name: String\n    var age: Int\n    var email: String\n    var password: String\n    var prefecture: String\n    var job: String\n    var weight: Double\n    var height: Double\n    var message: String\n\n    init(builder: UserBuilder) {\n        self.name = builder.name\n        self.age = builder.age\n        self.email = builder.email\n        self.password = builder.password\n        self.prefecture = builder.prefecture\n        self.job = builder.job\n        self.weight = builder.weight\n        self.height = builder.height\n        self.message = builder.message\n    }\n}\n\n\n\u6700\u521d\u306bUserBuilder\u3068\u3044\u3046protocol\u3092\u5ba3\u8a00\u3057\u3066\u3042\u308a\u307e\u3059\u3002 \n\u3053\u306eUserBuilder Protocol\u3092\u6d3b\u7528\u3057\u3066User\u30e2\u30c7\u30eb\u306e\u521d\u671f\u5316\u3092\u3057\u3066\u3042\u3052\u308b\u3068\u3044\u3046\u30a2\u30a4\u30c7\u30a2\u3067\u3059\u3002\n\u3059\u308b\u3068\u521d\u671f\u5316\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u697d\u306b\u6e08\u307e\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nvar newUser = User(builder: AppUserBuilder())\n\n\n\n3. Factory Pattern\n\u6b21\u306b\u4ee5\u4e0b\u306e\u753b\u9762\u306e\u3088\u3046\u306b\u30d1\u30b9\u30ef\u30fc\u30c9\u3084Email\u306a\u3069\u304c\u5165\u529b\u3055\u308c\u305f\u3068\u304d\u306b\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u304b\u3051\u308b\u5834\u5408\u3092\u8003\u3048\u307e\u3059\u3002\n\n\u3081\u3093\u3069\u304f\u3055\u3044\u306e\u306f\u3001\u5165\u529b\u3055\u308c\u305f\u5024\u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u3069\u306e\u3088\u3046\u306a\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u304b\u3051\u308b\u306e\u304b\u304c\u5909\u308f\u3063\u3066\u304f\u308b\u6642\u3067\u3059\u3002\n\u305d\u306e\u5834\u5408\u306b\u306fFactory Pattern\u304c\u6709\u52b9\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u69d8\u306bValidation\u306b\u95a2\u3059\u308bProtocol\u3092\u5ba3\u8a00\u3057\u307e\u3059\u3002\nprotocol TextValidationProtocol {\n    var regExFindMatchString: String { get }\n    var validationMessage: String { get }\n}\n\nextension TextValidationProtocol {\n\n    var regExMatchingString: String {\n        get {\n            return regExFindMatchString + \"$\"\n        }\n    }\n\n    func validationString(str: String) -> Bool {\n        if let _ = str.range(of: regExMatchingString, options: .regularExpression) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    func getMatchingString(str: String) -> String? {\n        if let newMatch = str.range(of: regExFindMatchString, options: .regularExpression) {\n            return str.substring(with: newMatch)\n        } else {\n            return nil\n        }\n    }\n\n}\n\n\n\u6b21\u306b\u60f3\u5b9a\u3055\u308c\u308b\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u7a2e\u985e\u3092TextValidationProtocol\u306b\u3082\u3068\u3065\u3044\u3066\u5ba3\u8a00\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306fenum\u3067\u306fstored property\u304c\u6301\u3066\u306a\u3044\u305f\u3081\u306bclass\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\nclass AlphaValidation: TextValidationProtocol {\n\n    static let sharedInstance = AlphaValidation()\n    private init(){}\n    let regExFindMatchString = \"^[a-zA-Z]{0,10}\"\n    let validationMessage = \"Can only contain Alpha characters\"\n}\n\nclass AlphaNumericValidation: TextValidationProtocol {\n\n    static let sharedInstance = AlphaNumericValidation()\n    private init(){}\n    let regExFindMatchString = \"^[a-zA-Z0-9]{0,10}\"\n    let validationMessage = \"Can only contain Alpha Numeric characters\"\n}\n\nclass NumericValidation: TextValidationProtocol {\n\n    static let sharedInstance = NumericValidation()\n    private init(){}\n    let regExFindMatchString = \"^[0-9]{0,10}\"\n    let validationMessage = \"Can only contain only Alpha and Numeric characters.\"\n}\n\n\n\u307e\u305f\u4ee5\u4e0a\u306e\u7a2e\u985e\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u64cd\u4f5c\u3092\u307e\u3068\u3081\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u5f15\u6570\u306balphaCharacters\u3068numericCharacters\u306eBool\u5024\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u304b\u3051\u308b\u3079\u304d\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u7a2e\u985e\u3092\u6c7a\u3081\u307e\u3059\u3002\nfunc getValidator(alphaCharacters: Bool, numericCharacters: Bool) -> TextValidationProtocol? {\n\n    if alphaCharacters && numericCharacters {\n        return AlphaNumericValidation.sharedInstance\n    } else if alphaCharacters && !numericCharacters {\n        return AlphaValidation.sharedInstance\n    } else if !alphaCharacters && numericCharacters {\n        return NumericValidation.sharedInstance\n    } else {\n        return nil\n    }\n}\n\n\u305d\u3046\u3059\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u69d8\u306b\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u304b\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nvar str = \"abc123\"\nvar validator1 = getValidator(alphaCharacters: true, numericCharacters: true)\nprint(\"String Validated: \\(validator1?.validationString(str: str))\") //true\n\nvar validator2 = getValidator(alphaCharacters: true, numericCharacters: false)\nprint(\"String Validated: \\(validator2?.validationString(str: str))\") //false\n\n\n\u7c21\u5358\u3067\u306f\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u4ee5\u4e0a\u3067\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u6a5f\u80fd\u306e\u5b9f\u88c5\u306e\u969b\u306b\u5f79\u306b\u7acb\u3061\u305d\u3046\u306aProtocol\u3092\u6d3b\u7528\u3057\u305fDesign Pattern3\u9078\u306e\u7d39\u4ecb\u3092\u7d42\u308f\u308a\u307e\u3059\u3002\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306e\u3068\u3053\u308d\u306fProtocol\u4f7f\u3063\u3066\u306a\u3044\u3058\u3083\u3093\u3063\u3066\u3044\u3046\u30c4\u30c3\u30b3\u30df\u306f\u5fc3\u306e\u4e2d\u306b\u3068\u3069\u3081\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\u7b11\n\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u304c\u8272\u3005\u3068\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u308c\u3070\u5b09\u3057\u3044\u3067\u3059\u3002\n\n\u53c2\u8003\n\u300cProtocol Oriented Programming\u300d\n\n2016 Swift Advent Calender\u306e21\u65e5\u76ee\u3067\u3059\u3002\n\u4eca\u56de\u306f\u30a2\u30d7\u30ea\u958b\u767a\u3092\u3059\u308b\u6642\u306b\u306f\u307b\u3068\u3093\u3069\u306e\u5834\u9762\u3067\u4f5c\u308b\u3067\u3042\u308d\u3046\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u6a5f\u80fd\u3092\u3069\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u3044\u304f\u306e\u304b\u3068\u3044\u3046\u89b3\u70b9\u304b\u3089\u5f79\u306b\u7acb\u3061\u305d\u3046\u306aProtocol\u3092\u6d3b\u7528\u3057\u305fDesign Pattern\u3092\u307e\u3068\u3081\u3066\u3044\u304d\u307e\u3059\u3002(\u57fa\u790e\u7684\u306a\u5185\u5bb9\u3067\u3042\u308d\u3046\u4e8b\u9805\u3092\u307e\u3068\u3081\u308b\u306e\u3067\u5fdc\u7528\u7684\u30fb\u5b9f\u8df5\u7684\u306aPattern\u7b49\u306f\u30b3\u30e1\u30f3\u30c8\u306b\u3066\u6559\u3048\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002)\n\n\u4eca\u56de\u8003\u3048\u308b\u306e\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306aUI\u9054\u3067\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-21 22.41.46.png](https://qiita-image-store.s3.amazonaws.com/0/36527/694b5db0-51ab-7daf-0b87-1fadadd8d847.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-21 22.41.46.png\")\n\n\u30a2\u30d7\u30ea\u306e\u521d\u56de\u7acb\u3061\u4e0a\u3052\u6642\u306b\u65b0\u898f\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u3092\u884c\u3046\u969b\u306fUser\u306e\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u3001\u305d\u3053\u306b\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u305d\u306e\u305f\u3081\u306b\u30a2\u30d7\u30ea\u5185\u3067\u4e00\u3064\u3057\u304b\u5b58\u5728\u3057\u3048\u306a\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3066\u30c7\u30fc\u30bf\u7ba1\u7406\u3092\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\u305d\u306e\u969b\u306b\u306f\u8a00\u308f\u305a\u3082\u304c\u306aSingleton Pattern\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n# 1. Singleton Pattern\n\n\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3092\u4f5c\u308b\u969b\u306b\u306fSwift\u3067\u306fstatic\u3092\u6d3b\u7528\u3059\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n```struct\u306b\u3066\nstruct UserSettingClass {\n    \n    static var sharedInstance = UserSettingClass()\n    \n    static var email: String = \"\"\n    static var password: String = \"\"\n    static var userName: String = \"\"\n    static var gender: Gender = .unknown\n    static var birthday: Date? = nil\n    static var profileImage: Data? = nil\n    \n    enum Gender {\n        case unknown\n        case man\n        case woman\n    }\n    \n    static func saveData(){\n        //\u51e6\u7406\n    }\n}\n\n```\n\n\u305d\u3046\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u69d8\u306b\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u3092\u751f\u6210\u3067\u304d\u307e\u3059\u3002\n\n```\nvar userSetting = UserSettingClass.sharedInstance\n```\n\n\u3057\u304b\u3057\u3001```class```\u3068```struct```\u306f\u7a7a\u306e\u72b6\u614b\u3067\u3082\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u521d\u671f\u5316\u304c\u51fa\u6765\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001\u7a7a\u306e```enum```\u3067\u306f\u51fa\u6765\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081\u306b```enum```\u3092\u6d3b\u7528\u3059\u308b\u3068\u3044\u3046\u624b\u3082\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\n```enum\u3092\u6d3b\u7528\nenum UserSettingEnum {\n    \n    static var email: String = \"\"\n    static var password: String = \"\"\n    static var userName: String = \"\"\n    static var gender: Gender = .unknown\n    static var birthday: Date? = nil\n    static var profileImage: Data? = nil\n    \n    enum Gender {\n        case unknown\n        case man\n        case woman\n    }\n    \n    static func saveData(){\n        //\u51e6\u7406\n    }\n}\n\n```\n\n\u3053\u308c\u3067\u4ee5\u4e0b\u306e\u69d8\u306b\u547c\u3073\u51fa\u3057\u304c\u51fa\u6765\u307e\u3059\u3002\n\n```\nvar textField: UITextField!\nUserSettingEnum.email = textField.text!\n\n```\n\n# 2. Builder Pattern\n\n\u4eca\u56de\u306eUserSetting\u306e\u30e2\u30c7\u30eb\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u6570\u304c\u5c11\u306a\u304f\u521d\u671f\u5316\u7279\u306b\u82e6\u52b4\u306f\u3057\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\n\u3057\u304b\u3057\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306fUser\u30e2\u30c7\u30eb\u304c\u5927\u304d\u304f\u306a\u308a\u30d7\u30ed\u30d1\u30c6\u30a3\u6570\u304c\u591a\u304f\u306a\u308a\u3059\u304e\u308b\u3053\u3068\u304c\u3042\u308a\u3048\u307e\u3059\u3002\n\n```User\u30e2\u30c7\u30eb\u304c\u5927\u304d\u304f\u3066\u521d\u671f\u5316\u304c\u5927\u5909\nclass ComplexityUser {\n    \n    var name: String?\n    var age: Int?\n    var email: String?\n    var password: String?\n    var prefecture: String?\n    var job: String?\n    var weight: Double?\n    var height: Double?\n    var message: String?\n    \n    init(name: String, age: Int, email: String, password: String, prefecture: String, weight: Double, height: Double, message: String) {\n        self.name = name\n        self.age = age\n        self.email = email\n        self.password = password\n        self.prefecture = prefecture\n        self.weight = weight\n        self.height = height\n        self.message = message\n    }\n}\n\n```\n\n\u3053\u306e\u5834\u5408\u3001\u521d\u671f\u5316\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\nlet complexityUser = ComplexityUser(name: \"aritaku\", age: 25, email: \"hoge@hoge\", password: \"password\", prefecture: \"shiga\", weight: 62.0, height: 180.0, message: \"hello\")\n\n```\n\n\u8f9b\u3044\u3067\u3059\u306d\u3002\u305d\u3046\u3044\u3063\u305f\u5834\u5408\u3067\u306fBuilder Pattern\u304c\u4f7f\u3048\u305d\u3046\u3067\u3059\u3002\n\n```\nprotocol UserBuilder {\n    var name: String { get }\n    var age: Int { get }\n    var email: String { get }\n    var password: String { get }\n    var prefecture: String { get }\n    var job: String { get }\n    var weight: Double { get }\n    var height: Double { get }\n    var message: String { get }\n}\n\nstruct AppUserBuilder: UserBuilder {\n    \n    var name = \"Burger\"\n    var age = 25\n    var email = \"hoge@hoge\"\n    var password = \"hogehogehoge\"\n    var prefecture = \"Kagoshima\"\n    var job = \"Swift Programmer\"\n    var weight = 62.2\n    var height = 180.0\n    var message = \"\u306f\u3058\u3081\u307e\u3057\u3066\u3002\"\n    \n}\n\nstruct User {\n    \n    var name: String\n    var age: Int\n    var email: String\n    var password: String\n    var prefecture: String\n    var job: String\n    var weight: Double\n    var height: Double\n    var message: String\n    \n    init(builder: UserBuilder) {\n        self.name = builder.name\n        self.age = builder.age\n        self.email = builder.email\n        self.password = builder.password\n        self.prefecture = builder.prefecture\n        self.job = builder.job\n        self.weight = builder.weight\n        self.height = builder.height\n        self.message = builder.message\n    }\n}\n\n```\n\n\u6700\u521d\u306b```UserBuilder```\u3068\u3044\u3046```protocol```\u3092\u5ba3\u8a00\u3057\u3066\u3042\u308a\u307e\u3059\u3002 \n\u3053\u306e```UserBuilder Protocol```\u3092\u6d3b\u7528\u3057\u3066User\u30e2\u30c7\u30eb\u306e\u521d\u671f\u5316\u3092\u3057\u3066\u3042\u3052\u308b\u3068\u3044\u3046\u30a2\u30a4\u30c7\u30a2\u3067\u3059\u3002\n\n\u3059\u308b\u3068\u521d\u671f\u5316\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u697d\u306b\u6e08\u307e\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\nvar newUser = User(builder: AppUserBuilder())\n\n```\n\n# 3. Factory Pattern\n\n\u6b21\u306b\u4ee5\u4e0b\u306e\u753b\u9762\u306e\u3088\u3046\u306b\u30d1\u30b9\u30ef\u30fc\u30c9\u3084Email\u306a\u3069\u304c\u5165\u529b\u3055\u308c\u305f\u3068\u304d\u306b\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u304b\u3051\u308b\u5834\u5408\u3092\u8003\u3048\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-21 23.13.08.png](https://qiita-image-store.s3.amazonaws.com/0/36527/379a8488-cb86-f020-73b1-44d8696cd456.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-21 23.13.08.png\")\n\n\n\u3081\u3093\u3069\u304f\u3055\u3044\u306e\u306f\u3001\u5165\u529b\u3055\u308c\u305f\u5024\u306e\u7a2e\u985e\u306b\u3088\u3063\u3066\u3069\u306e\u3088\u3046\u306a\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u304b\u3051\u308b\u306e\u304b\u304c\u5909\u308f\u3063\u3066\u304f\u308b\u6642\u3067\u3059\u3002\n\n\u305d\u306e\u5834\u5408\u306b\u306fFactory Pattern\u304c\u6709\u52b9\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u69d8\u306bValidation\u306b\u95a2\u3059\u308bProtocol\u3092\u5ba3\u8a00\u3057\u307e\u3059\u3002\n\n```\nprotocol TextValidationProtocol {\n    var regExFindMatchString: String { get }\n    var validationMessage: String { get }\n}\n\nextension TextValidationProtocol {\n    \n    var regExMatchingString: String {\n        get {\n            return regExFindMatchString + \"$\"\n        }\n    }\n    \n    func validationString(str: String) -> Bool {\n        if let _ = str.range(of: regExMatchingString, options: .regularExpression) {\n            return true\n        } else {\n            return false\n        }\n    }\n    \n    func getMatchingString(str: String) -> String? {\n        if let newMatch = str.range(of: regExFindMatchString, options: .regularExpression) {\n            return str.substring(with: newMatch)\n        } else {\n            return nil\n        }\n    }\n    \n}\n\n```\n\n\u6b21\u306b\u60f3\u5b9a\u3055\u308c\u308b\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u7a2e\u985e\u3092```TextValidationProtocol```\u306b\u3082\u3068\u3065\u3044\u3066\u5ba3\u8a00\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306fenum\u3067\u306fstored property\u304c\u6301\u3066\u306a\u3044\u305f\u3081\u306bclass\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n\n\n```\nclass AlphaValidation: TextValidationProtocol {\n    \n    static let sharedInstance = AlphaValidation()\n    private init(){}\n    let regExFindMatchString = \"^[a-zA-Z]{0,10}\"\n    let validationMessage = \"Can only contain Alpha characters\"\n}\n\nclass AlphaNumericValidation: TextValidationProtocol {\n    \n    static let sharedInstance = AlphaNumericValidation()\n    private init(){}\n    let regExFindMatchString = \"^[a-zA-Z0-9]{0,10}\"\n    let validationMessage = \"Can only contain Alpha Numeric characters\"\n}\n\nclass NumericValidation: TextValidationProtocol {\n    \n    static let sharedInstance = NumericValidation()\n    private init(){}\n    let regExFindMatchString = \"^[0-9]{0,10}\"\n    let validationMessage = \"Can only contain only Alpha and Numeric characters.\"\n}\n\n```\n\n\u307e\u305f\u4ee5\u4e0a\u306e\u7a2e\u985e\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u64cd\u4f5c\u3092\u307e\u3068\u3081\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u5f15\u6570\u306b```alphaCharacters```\u3068```numericCharacters```\u306eBool\u5024\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u304b\u3051\u308b\u3079\u304d\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u7a2e\u985e\u3092\u6c7a\u3081\u307e\u3059\u3002\n\n```\nfunc getValidator(alphaCharacters: Bool, numericCharacters: Bool) -> TextValidationProtocol? {\n    \n    if alphaCharacters && numericCharacters {\n        return AlphaNumericValidation.sharedInstance\n    } else if alphaCharacters && !numericCharacters {\n        return AlphaValidation.sharedInstance\n    } else if !alphaCharacters && numericCharacters {\n        return NumericValidation.sharedInstance\n    } else {\n        return nil\n    }\n}\n```\n\n\u305d\u3046\u3059\u308b\u3053\u3068\u3067\u4ee5\u4e0b\u306e\u69d8\u306b\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u304b\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n```\nvar str = \"abc123\"\nvar validator1 = getValidator(alphaCharacters: true, numericCharacters: true)\nprint(\"String Validated: \\(validator1?.validationString(str: str))\") //true\n\nvar validator2 = getValidator(alphaCharacters: true, numericCharacters: false)\nprint(\"String Validated: \\(validator2?.validationString(str: str))\") //false\n\n```\n\n\u7c21\u5358\u3067\u306f\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u4ee5\u4e0a\u3067\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u6a5f\u80fd\u306e\u5b9f\u88c5\u306e\u969b\u306b\u5f79\u306b\u7acb\u3061\u305d\u3046\u306aProtocol\u3092\u6d3b\u7528\u3057\u305fDesign Pattern3\u9078\u306e\u7d39\u4ecb\u3092\u7d42\u308f\u308a\u307e\u3059\u3002\u30b7\u30f3\u30b0\u30eb\u30c8\u30f3\u306e\u3068\u3053\u308d\u306fProtocol\u4f7f\u3063\u3066\u306a\u3044\u3058\u3083\u3093\u3063\u3066\u3044\u3046\u30c4\u30c3\u30b3\u30df\u306f\u5fc3\u306e\u4e2d\u306b\u3068\u3069\u3081\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\u7b11\n\n\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u304c\u8272\u3005\u3068\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u308c\u3070\u5b09\u3057\u3044\u3067\u3059\u3002\n\n# \u53c2\u8003\n\n[\u300cProtocol Oriented Programming\u300d](https://www.amazon.co.jp/Protocol-Oriented-Programming-Swift-Jon-Hoffman-ebook/dp/B01BDQK5GS/ref=as_li_ss_il?ie=UTF8&qid=1482330268&sr=8-1&keywords=protocol+oriented+programming&linkCode=li2&tag=ph0031es-22&linkId=ba0723af204aa88ba010268b1036b1d0)\n"}