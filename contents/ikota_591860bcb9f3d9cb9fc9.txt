{"context": " More than 1 year has passed since last update.\n\nAndroid\u30a2\u30d7\u30ea\u306e\u6539\u5584\n\u63a5\u7d9a\u4e2d\u306e\u901a\u4fe1\u56de\u7dda\u3092\u898b\u3066\uff0c\n\u30b5\u30fc\u30d0\u304b\u3089\u53d6\u3063\u3066\u304f\u308b\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3092\u5909\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\uff0e\n\u4eca\u56de\u306f\uff0c\u305d\u306e\u305f\u3081\u306b\u5b66\u3093\u3060\n\n\u30aa\u30f3\u30e9\u30a4\u30f3\uff0c\u30aa\u30d5\u30e9\u30a4\u30f3\u5224\u5b9a\nWi-Fi, Mobile\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5224\u5b9a\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u72b6\u6cc1\u306e\u5909\u5316\u3092\u52d5\u7684\u306b\u53d7\u3051\u53d6\u308bReceiver\n\n\u306b\u3064\u3044\u3066\u306e\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u307e\u3059\uff0e\n\n\u30aa\u30f3\u30e9\u30a4\u30f3\uff0c\u30aa\u30d5\u30e9\u30a4\u30f3\u5224\u5b9a\n\u7c21\u5358\u306b\u5224\u5b9a\u3067\u304d\u307e\u3059\uff0e\n\nNetUtils.java\n    public static boolean isOnline(Context context) {\n        ConnectivityManager connMgr = (ConnectivityManager)\n                context.getSystemService(Context.CONNECTIVITY_SERVICE);\n        NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();\n        // You should always check isConnected(), since isConnected()\n        // handles cases like unstable network state.\n        return (networkInfo != null && networkInfo.isConnected());\n    }\n\n\n\u305f\u3060\uff0cWifi, Mobile\u3044\u305a\u308c\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3082\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408 (\u6a5f\u5185\u30e2\u30fc\u30c9\u306a\u3069) \uff0c\nconnMgr.getActiveNetworkInfo()\u304cNull\u3092\u8fd4\u3059\u306e\u3067\u6c17\u3092\u3064\u3051\u3066\u304f\u3060\u3055\u3044\uff0e\n\nWi-Fi, Moblie\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5224\u5b9a\n\u3053\u3061\u3089\u3082\u7c21\u5358\u3067\u3059\uff0e\n\nNetUtils.java\n    public static boolean isWifiConnected(Context context) {\n        ConnectivityManager connMgr = (ConnectivityManager)\n                context.getSystemService(Context.CONNECTIVITY_SERVICE);\n        NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();\n        return networkInfo != null && networkInfo.isConnected()\n                && networkInfo.getType() == ConnectivityManager.TYPE_WIFI;\n    }\n\n\n\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u72b6\u6cc1\u306e\u5909\u5316\u3092\u52d5\u7684\u306b\u53d7\u3051\u53d6\u308bReceiver\n\u3053\u3061\u3089\u306f\u307e\u305a\uff0cBroadcastReceiver\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u308a\uff0c\nonReceive(context, intent)\u30e1\u30bd\u30c3\u30c9\u3092\u6b21\u306e\u3088\u3046\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\uff0e\n\nNetworkReceiver.java\n    public interface OnNetworkStateChangedListener {\n        void changedToWifi();\n        void changedToMobile();\n        void changedToOffline();\n    }\n\n\u3000\u3000@Override\n    public void onReceive(Context context, Intent intent) {\n        ConnectivityManager conn = (ConnectivityManager)\n                context.getSystemService(Context.CONNECTIVITY_SERVICE);\n        NetworkInfo networkInfo = conn.getActiveNetworkInfo();\n\n        if (networkInfo != null && networkInfo.getType() == ConnectivityManager.TYPE_WIFI) {\n            if(mCallback!=null) mCallback.changedToWifi();\n            Log.i(TAG, \"Network state has changed to WIFI\");\n        } else if (networkInfo != null) {\n            if(mCallback!=null) mCallback.changedToMobile();\n            Log.i(TAG, \"Network state has changed to MOBILE\");\n        } else {\n            if(mCallback!=null) mCallback.changedToOffline();\n            Log.i(TAG, \"I have no idea...\");\n        }\n    }\n\n\n\u3042\u3068\u306f\uff0c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u72b6\u6cc1\u306e\u5909\u5316\u3092\u53d7\u3051\u53d6\u308a\u305f\u3044Activity\u306a\u3069\u3067\uff0c\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u5b8c\u6210\u3067\u3059\uff0e\n\u4eca\u56de\u306f\uff0cCallback \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4ecb\u3057\u3066\uff0cevent\u306e\u53d7\u3051\u6e21\u3057\u3092\u3057\u307e\u3059\uff0e\n\u4e0b\u306e\u3088\u3046\u306bReceiver\u3092\u767b\u9332\u3059\u308b\u3053\u3068\u3067\uff0cWi-Fi -> Mobile\u56de\u7dda\u306e\u3088\u3046\u306a\u5909\u5316\u3092\nReceiver\u304c\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\nMainActivity.java\n\u3000\u3000@Override\n    public void onResume() {\n        super.onResume();\n        // Registers BroadcastReceiver to track network connection changes.\n        IntentFilter filter = new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION);\n        mReceiver = new NetworkReceiver(mListener);\n        registerReceiver(mReceiver, filter);\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        if(mReceiver != null) {\n            unregisterReceiver(mReceiver);\n        }\n    }\n\n\n\n\u304a\u307e\u3051\n\u4eca\u56de\uff0c\u884c\u3063\u305f\u5909\u66f4\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\uff0e\nBefore\n\u30ea\u30b9\u30c8\u8868\u793a\u306b\u4f7f\u3046\u753b\u50cf\u306f\uff0cWi-Fi\u304c\u4f7f\u3048\u306a\u3044\u6642\u3092\u610f\u8b58\u3057\u3066\uff0c\u5c0f\u3055\u3081\u306e\u753b\u50cf\u306b\u3057\u3066\u307e\u3057\u305f\uff0e\nListView\u306b\u6e21\u3059Adapter\u306e\u4e2d\u306f\u3053\u3093\u306a\u611f\u3058\u3067\uff0c\u5e38\u306b150x150\u306e\u753b\u50cf\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u307e\u3057\u305f\uff0e\n\nImageAdapter.java\n// always requests 150x150 image\nListItem item = getItem(position);\nString url = item.generatePhotoURL(\"q\");    // q : 150x150 image\n\nImageLoader.ImageListener listener =\n        ImageLoader.getImageListener(holder.imageView,\n                R.drawable.loading_default, R.drawable.ic_image_broken);\nholder.imageView.setTag(mImageLoader.get(url, listener));\n\n\nAfter\nWi-Fi\u306b\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u306f\uff0c\u5927\u304d\u3081\u306e\u753b\u50cf\u3092\u53d6\u3063\u3066\u304f\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\uff0e\n\nImageAdapter.java\n// change image quality by checking network state\nListItem item = getItem(position);\nString quality_flg = is_wifi_connected ? \"z\": \"q\";  // z : 640x640, q : 150x150\nString url = item.generatePhotoURL(quality_flg);\n\nImageLoader.ImageListener listener =\n        ImageLoader.getImageListener(holder.imageView,\n                R.drawable.loading_default, R.drawable.ic_image_broken);\nholder.imageView.setTag(mImageLoader.get(url, listener));\n\n\n\u7d50\u679c\uff0cWi-Fi\u6642\u306e\u30ea\u30b9\u30c8\u304c\u304d\u308c\u3044\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\n\u53c2\u8003\u6587\u732e\nPerformingNetworkOperations | Android Developers\n## Android\u30a2\u30d7\u30ea\u306e\u6539\u5584\n\u63a5\u7d9a\u4e2d\u306e\u901a\u4fe1\u56de\u7dda\u3092\u898b\u3066\uff0c\n\u30b5\u30fc\u30d0\u304b\u3089\u53d6\u3063\u3066\u304f\u308b\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3092\u5909\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\uff0e\n\n\u4eca\u56de\u306f\uff0c\u305d\u306e\u305f\u3081\u306b\u5b66\u3093\u3060\n\n- \u30aa\u30f3\u30e9\u30a4\u30f3\uff0c\u30aa\u30d5\u30e9\u30a4\u30f3\u5224\u5b9a\n- Wi-Fi, Mobile\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5224\u5b9a\n- \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u72b6\u6cc1\u306e\u5909\u5316\u3092\u52d5\u7684\u306b\u53d7\u3051\u53d6\u308bReceiver\n\n\u306b\u3064\u3044\u3066\u306e\u30b3\u30fc\u30c9\u3092\u8f09\u305b\u307e\u3059\uff0e\n\n## \u30aa\u30f3\u30e9\u30a4\u30f3\uff0c\u30aa\u30d5\u30e9\u30a4\u30f3\u5224\u5b9a\n\u7c21\u5358\u306b\u5224\u5b9a\u3067\u304d\u307e\u3059\uff0e\n\n```java:NetUtils.java\n    public static boolean isOnline(Context context) {\n        ConnectivityManager connMgr = (ConnectivityManager)\n                context.getSystemService(Context.CONNECTIVITY_SERVICE);\n        NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();\n        // You should always check isConnected(), since isConnected()\n        // handles cases like unstable network state.\n        return (networkInfo != null && networkInfo.isConnected());\n    }\n```\n\u305f\u3060\uff0cWifi, Mobile\u3044\u305a\u308c\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3082\u898b\u3064\u304b\u3089\u306a\u3044\u5834\u5408 (\u6a5f\u5185\u30e2\u30fc\u30c9\u306a\u3069) \uff0c\n`connMgr.getActiveNetworkInfo()`\u304c`Null`\u3092\u8fd4\u3059\u306e\u3067\u6c17\u3092\u3064\u3051\u3066\u304f\u3060\u3055\u3044\uff0e\n\n## Wi-Fi, Moblie\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5224\u5b9a\n\u3053\u3061\u3089\u3082\u7c21\u5358\u3067\u3059\uff0e\n\n```java:NetUtils.java\n    public static boolean isWifiConnected(Context context) {\n        ConnectivityManager connMgr = (ConnectivityManager)\n                context.getSystemService(Context.CONNECTIVITY_SERVICE);\n        NetworkInfo networkInfo = connMgr.getActiveNetworkInfo();\n        return networkInfo != null && networkInfo.isConnected()\n                && networkInfo.getType() == ConnectivityManager.TYPE_WIFI;\n    }\n```\n\n## \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u72b6\u6cc1\u306e\u5909\u5316\u3092\u52d5\u7684\u306b\u53d7\u3051\u53d6\u308bReceiver\n\u3053\u3061\u3089\u306f\u307e\u305a\uff0cBroadcastReceiver\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u4f5c\u308a\uff0c\n`onReceive(context, intent)`\u30e1\u30bd\u30c3\u30c9\u3092\u6b21\u306e\u3088\u3046\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\uff0e\n\n```java:NetworkReceiver.java\n    public interface OnNetworkStateChangedListener {\n        void changedToWifi();\n        void changedToMobile();\n        void changedToOffline();\n    }\n\n\u3000\u3000@Override\n    public void onReceive(Context context, Intent intent) {\n        ConnectivityManager conn = (ConnectivityManager)\n                context.getSystemService(Context.CONNECTIVITY_SERVICE);\n        NetworkInfo networkInfo = conn.getActiveNetworkInfo();\n\n        if (networkInfo != null && networkInfo.getType() == ConnectivityManager.TYPE_WIFI) {\n            if(mCallback!=null) mCallback.changedToWifi();\n            Log.i(TAG, \"Network state has changed to WIFI\");\n        } else if (networkInfo != null) {\n            if(mCallback!=null) mCallback.changedToMobile();\n            Log.i(TAG, \"Network state has changed to MOBILE\");\n        } else {\n            if(mCallback!=null) mCallback.changedToOffline();\n            Log.i(TAG, \"I have no idea...\");\n        }\n    }\n```\n\u3042\u3068\u306f\uff0c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u72b6\u6cc1\u306e\u5909\u5316\u3092\u53d7\u3051\u53d6\u308a\u305f\u3044Activity\u306a\u3069\u3067\uff0c\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u5b8c\u6210\u3067\u3059\uff0e\n\n\u4eca\u56de\u306f\uff0cCallback \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4ecb\u3057\u3066\uff0cevent\u306e\u53d7\u3051\u6e21\u3057\u3092\u3057\u307e\u3059\uff0e\n\u4e0b\u306e\u3088\u3046\u306bReceiver\u3092\u767b\u9332\u3059\u308b\u3053\u3068\u3067\uff0cWi-Fi -> Mobile\u56de\u7dda\u306e\u3088\u3046\u306a\u5909\u5316\u3092\nReceiver\u304c\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\n```java:MainActivity.java\n\u3000\u3000@Override\n    public void onResume() {\n        super.onResume();\n        // Registers BroadcastReceiver to track network connection changes.\n        IntentFilter filter = new IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION);\n        mReceiver = new NetworkReceiver(mListener);\n        registerReceiver(mReceiver, filter);\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        if(mReceiver != null) {\n            unregisterReceiver(mReceiver);\n        }\n    }\n```\n\n## \u304a\u307e\u3051\n\u4eca\u56de\uff0c\u884c\u3063\u305f\u5909\u66f4\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\uff0e\n\n**Before**\n\u30ea\u30b9\u30c8\u8868\u793a\u306b\u4f7f\u3046\u753b\u50cf\u306f\uff0cWi-Fi\u304c\u4f7f\u3048\u306a\u3044\u6642\u3092\u610f\u8b58\u3057\u3066\uff0c\u5c0f\u3055\u3081\u306e\u753b\u50cf\u306b\u3057\u3066\u307e\u3057\u305f\uff0e\nListView\u306b\u6e21\u3059Adapter\u306e\u4e2d\u306f\u3053\u3093\u306a\u611f\u3058\u3067\uff0c\u5e38\u306b150x150\u306e\u753b\u50cf\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u307e\u3057\u305f\uff0e\n\n```java:ImageAdapter.java\n// always requests 150x150 image\nListItem item = getItem(position);\nString url = item.generatePhotoURL(\"q\");    // q : 150x150 image\n\nImageLoader.ImageListener listener =\n        ImageLoader.getImageListener(holder.imageView,\n                R.drawable.loading_default, R.drawable.ic_image_broken);\nholder.imageView.setTag(mImageLoader.get(url, listener));\n```\n\n**After**\nWi-Fi\u306b\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u3068\u304d\u306f\uff0c\u5927\u304d\u3081\u306e\u753b\u50cf\u3092\u53d6\u3063\u3066\u304f\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\uff0e\n\n```java:ImageAdapter.java\n// change image quality by checking network state\nListItem item = getItem(position);\nString quality_flg = is_wifi_connected ? \"z\": \"q\";  // z : 640x640, q : 150x150\nString url = item.generatePhotoURL(quality_flg);\n\nImageLoader.ImageListener listener =\n        ImageLoader.getImageListener(holder.imageView,\n                R.drawable.loading_default, R.drawable.ic_image_broken);\nholder.imageView.setTag(mImageLoader.get(url, listener));\n```\n\u7d50\u679c\uff0cWi-Fi\u6642\u306e\u30ea\u30b9\u30c8\u304c\u304d\u308c\u3044\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\n## \u53c2\u8003\u6587\u732e\n[PerformingNetworkOperations | Android Developers](https://developer.android.com/training/basics/network-ops/index.html)\n", "tags": ["Android", "WiFi", "Network"]}