{"context": "\n\nCALayer \u306e anchorPoint \u3092\u5909\u66f4\u3057\u3064\u3064\u8868\u793a\u4f4d\u7f6e\u306f\u7dad\u6301\u3059\u308b\n\u308f\u304b\u308a\u306b\u304f\u3044\u8868\u984c\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u304c\u3001CALayer \u306e\u57fa\u6e96\u70b9\u3067\u3042\u308b anchorPoint \u3092\u305a\u3089\u3059\u3068\u8868\u793a\u4f4d\u7f6e\u3082\u305a\u308c\u3066\u3057\u307e\u3046\u306e\u3092\u306a\u3093\u3068\u304b\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u3067\u3059\u3002\u56de\u8ee2\u8ef8\u3092\u305a\u3089\u3057\u305f\u3044\u3051\u3069\u8868\u793a\u4f4d\u7f6e\u306f\u7dad\u6301\u3057\u305f\u3044\u3001\u3068\u304b\u305d\u3046\u3044\u3063\u305f\u5834\u9762\u306b\u5411\u3044\u3066\u3044\u307e\u3059\u3002anchorPoint \u3042\u308b\u3042\u308b\u306a\u306e\u3067\u308f\u304b\u308b\u65b9\u306b\u306f\u308f\u304b\u308b\u304b\u3068\u3002\nStackoverflow \u5148\u751f\u3067\u4ee5\u4e0b\u306e\u7d20\u6674\u3089\u3057\u3044\u30b3\u30fc\u30c9\u3092\u898b\u3064\u3051\u307e\u3057\u305f\u3002\nfunc setAnchorPoint(anchorPoint: CGPoint, forView view: UIView) {\n    var newPoint = CGPointMake(view.bounds.size.width * anchorPoint.x, view.bounds.size.height * anchorPoint.y)\n    var oldPoint = CGPointMake(view.bounds.size.width * view.layer.anchorPoint.x, view.bounds.size.height * view.layer.anchorPoint.y)\n\n    newPoint = CGPointApplyAffineTransform(newPoint, view.transform)\n    oldPoint = CGPointApplyAffineTransform(oldPoint, view.transform)\n\n    var position = view.layer.position\n    position.x -= oldPoint.x\n    position.x += newPoint.x\n\n    position.y -= oldPoint.y\n    position.y += newPoint.y\n\n    view.layer.position = position\n    view.layer.anchorPoint = anchorPoint\n}\n\nhttp://stackoverflow.com/questions/1968017/changing-my-calayers-anchorpoint-moves-the-view\n\u3053\u306e\u3088\u3046\u306b\u4f7f\u3048\u307e\u3059\u3002\nsetAnchorPoint(CGPointMake(1.0, 1.0), forView: aView)\n\naView \u306e anchorPoint \u3092 (1.0, 1.0) \u306b\u79fb\u52d5\u3055\u305b\u307e\u3059\u304c\u3001\u4f8b\u3048\u3070\u56de\u8ee2\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u9069\u7528\u3059\u308b\u3068\u8868\u793a\u4f4d\u7f6e\u306f\u305d\u306e\u307e\u307e\u3067(\u203b)\u53f3\u4e0b\u3092\u4e2d\u5fc3\u306b\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u6c42\u3081\u3066\u3044\u305f\u306e\u306f\u30b3\u30ec\u3067\u3057\u305f\u3002\n\u203b\u5b9f\u969b\u306b\u306f anchorPoint \u306e\u79fb\u52d5\u306b\u5408\u308f\u305b\u3066\u76f8\u5fdc\u306e\u91cf\u3092 position \u3067\u79fb\u52d5\u3055\u305b\u3066\u76f8\u6bba\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u8ffd\u8a18\uff1aextension \u306b\u3057\u305f\n\nCALayer+AnchorPoint\nextension CALayer {\n    func setAnchorPoint(newAnchorPoint: CGPoint, forView view: UIView) {\n        var newPoint = CGPointMake(self.bounds.size.width * newAnchorPoint.x, self.bounds.size.height * newAnchorPoint.y)\n        var oldPoint = CGPointMake(self.bounds.size.width * self.anchorPoint.x, self.bounds.size.height * self.anchorPoint.y)\n\n        newPoint = CGPointApplyAffineTransform(newPoint, view.transform)\n        oldPoint = CGPointApplyAffineTransform(oldPoint, view.transform)\n\n        var position = self.position\n        position.x -= oldPoint.x\n        position.x += newPoint.x\n\n        position.y -= oldPoint.y\n        position.y += newPoint.y\n\n        position.x = newPoint.x\n        position.y = newPoint.y\n\n        self.anchorPoint = newAnchorPoint\n        self.position = position\n    }\n}\n\n\n\n\u8ffd\u8a18\uff1aposition \u304c\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\u8b0e\u73fe\u8c61\n\u3068\u3042\u308b\u30d3\u30e5\u30fc\u306e\u30b5\u30d6\u30d3\u30e5\u30fc\u306b\u3053\u306e\u30a2\u30f3\u30ab\u30fc\u30dd\u30a4\u30f3\u30c8\u305a\u3089\u3057\u6280\u3092\u9069\u7528\u3057\u305f\u307e\u3067\u306f\u826f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u540c\u4e00\u968e\u5c64\u306e\u5225\u30d3\u30e5\u30fc\u3067\u4f55\u304b Auto Layout \u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3053\u3063\u3061\u306e\u30ec\u30a4\u30e4\u30fc\u306e position \u304c\u306a\u305c\u304b\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\u3068\u3044\u3046\u3001\u8aac\u660e\u3059\u308b\u306e\u3082\u4e00\u82e6\u52b4\u306a\u8b0e\u73fe\u8c61\u306b\u60a9\u307e\u3055\u308c\u307e\u3057\u305f\u3002\n\u7d50\u679c\u7684\u306b\u306f\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6539\u5909\u3057\u3066\u304b\u3089\u3001\u300e\u3068\u3042\u308b\u30d3\u30e5\u30fc\u300f\u3067 layoutSubviews() \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3001\u305d\u3053\u3067\u300e\u30b5\u30d6\u30d3\u30e5\u30fc\u300f\u306b\u5bfe\u3057\u3066\u30a2\u30f3\u30ab\u30fc\u30dd\u30a4\u30f3\u30c8\u3092\u518d\u8a2d\u5b9a\u3059\u308b\u3001\u3068\u3044\u3046\u8352\u6280\u3067\u306a\u3093\u3068\u304b\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\nCALayer+AnchorPoint_2\nextension CALayer {\n    func setAnchorPoint(newAnchorPoint: CGPoint, forView view: UIView) {\n        var newPoint = CGPointMake(self.bounds.size.width * newAnchorPoint.x, self.bounds.size.height * newAnchorPoint.y)\n\n        newPoint = CGPointApplyAffineTransform(newPoint, view.transform)\n\n        var position = self.position\n\n        position.x = newPoint.x\n        position.y = newPoint.y\n\n        self.anchorPoint = newAnchorPoint\n        self.position = position\n    }\n}\n\n\noverride func layoutSubviews() {\n    super.layoutSubviews()\n\n    // \u3053\u3053\u3067\u30a2\u30f3\u30ab\u30fc\u30dd\u30a4\u30f3\u30c8\u3092\u518d\u8a2d\u5b9a\u3057\u306a\u3044\u3068\u305f\u307e\u306b position \u304c\u305a\u308c\u3066\u3057\u307e\u3046\n    subView.layer.setAnchorPoint(anchorPoint, forView: subView)\n}\n\n// \u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u5909\u308f\u308a\u305d\u3046\u306a\u5834\u9762\u3067\u3053\u308c\u3092\u5b9f\u884c\nlayoutIfNeeded()\n\n# CALayer \u306e anchorPoint \u3092\u5909\u66f4\u3057\u3064\u3064\u8868\u793a\u4f4d\u7f6e\u306f\u7dad\u6301\u3059\u308b\n\n\u308f\u304b\u308a\u306b\u304f\u3044\u8868\u984c\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u304c\u3001CALayer \u306e\u57fa\u6e96\u70b9\u3067\u3042\u308b anchorPoint \u3092\u305a\u3089\u3059\u3068\u8868\u793a\u4f4d\u7f6e\u3082\u305a\u308c\u3066\u3057\u307e\u3046\u306e\u3092\u306a\u3093\u3068\u304b\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u3067\u3059\u3002\u56de\u8ee2\u8ef8\u3092\u305a\u3089\u3057\u305f\u3044\u3051\u3069\u8868\u793a\u4f4d\u7f6e\u306f\u7dad\u6301\u3057\u305f\u3044\u3001\u3068\u304b\u305d\u3046\u3044\u3063\u305f\u5834\u9762\u306b\u5411\u3044\u3066\u3044\u307e\u3059\u3002anchorPoint \u3042\u308b\u3042\u308b\u306a\u306e\u3067\u308f\u304b\u308b\u65b9\u306b\u306f\u308f\u304b\u308b\u304b\u3068\u3002\n\nStackoverflow \u5148\u751f\u3067\u4ee5\u4e0b\u306e\u7d20\u6674\u3089\u3057\u3044\u30b3\u30fc\u30c9\u3092\u898b\u3064\u3051\u307e\u3057\u305f\u3002\n\n```swift\nfunc setAnchorPoint(anchorPoint: CGPoint, forView view: UIView) {\n    var newPoint = CGPointMake(view.bounds.size.width * anchorPoint.x, view.bounds.size.height * anchorPoint.y)\n    var oldPoint = CGPointMake(view.bounds.size.width * view.layer.anchorPoint.x, view.bounds.size.height * view.layer.anchorPoint.y)\n\n    newPoint = CGPointApplyAffineTransform(newPoint, view.transform)\n    oldPoint = CGPointApplyAffineTransform(oldPoint, view.transform)\n\n    var position = view.layer.position\n    position.x -= oldPoint.x\n    position.x += newPoint.x\n\n    position.y -= oldPoint.y\n    position.y += newPoint.y\n\n    view.layer.position = position\n    view.layer.anchorPoint = anchorPoint\n}\n```\nhttp://stackoverflow.com/questions/1968017/changing-my-calayers-anchorpoint-moves-the-view\n\n\u3053\u306e\u3088\u3046\u306b\u4f7f\u3048\u307e\u3059\u3002\n\n```swift\nsetAnchorPoint(CGPointMake(1.0, 1.0), forView: aView)\n```\n\n`aView` \u306e anchorPoint \u3092 `(1.0, 1.0)` \u306b\u79fb\u52d5\u3055\u305b\u307e\u3059\u304c\u3001\u4f8b\u3048\u3070\u56de\u8ee2\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u9069\u7528\u3059\u308b\u3068\u8868\u793a\u4f4d\u7f6e\u306f\u305d\u306e\u307e\u307e\u3067(\u203b)\u53f3\u4e0b\u3092\u4e2d\u5fc3\u306b\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u6c42\u3081\u3066\u3044\u305f\u306e\u306f\u30b3\u30ec\u3067\u3057\u305f\u3002\n\n\u203b\u5b9f\u969b\u306b\u306f anchorPoint \u306e\u79fb\u52d5\u306b\u5408\u308f\u305b\u3066\u76f8\u5fdc\u306e\u91cf\u3092 position \u3067\u79fb\u52d5\u3055\u305b\u3066\u76f8\u6bba\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u8ffd\u8a18\uff1aextension \u306b\u3057\u305f\n\n```swift:CALayer+AnchorPoint\nextension CALayer {\n\tfunc setAnchorPoint(newAnchorPoint: CGPoint, forView view: UIView) {\n\t\tvar newPoint = CGPointMake(self.bounds.size.width * newAnchorPoint.x, self.bounds.size.height * newAnchorPoint.y)\n\t\tvar oldPoint = CGPointMake(self.bounds.size.width * self.anchorPoint.x, self.bounds.size.height * self.anchorPoint.y)\n\t\t\n\t\tnewPoint = CGPointApplyAffineTransform(newPoint, view.transform)\n\t\toldPoint = CGPointApplyAffineTransform(oldPoint, view.transform)\n\t\t\n\t\tvar position = self.position\n\t\tposition.x -= oldPoint.x\n\t\tposition.x += newPoint.x\n\t\t\n\t\tposition.y -= oldPoint.y\n\t\tposition.y += newPoint.y\n\t\t\n\t\tposition.x = newPoint.x\n\t\tposition.y = newPoint.y\n\t\t\n\t\tself.anchorPoint = newAnchorPoint\n\t\tself.position = position\n\t}\n}\n```\n\n# \u8ffd\u8a18\uff1aposition \u304c\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\u8b0e\u73fe\u8c61\n\n\u3068\u3042\u308b\u30d3\u30e5\u30fc\u306e\u30b5\u30d6\u30d3\u30e5\u30fc\u306b\u3053\u306e\u30a2\u30f3\u30ab\u30fc\u30dd\u30a4\u30f3\u30c8\u305a\u3089\u3057\u6280\u3092\u9069\u7528\u3057\u305f\u307e\u3067\u306f\u826f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u540c\u4e00\u968e\u5c64\u306e\u5225\u30d3\u30e5\u30fc\u3067\u4f55\u304b Auto Layout \u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3053\u3063\u3061\u306e\u30ec\u30a4\u30e4\u30fc\u306e position \u304c\u306a\u305c\u304b\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\u3068\u3044\u3046\u3001\u8aac\u660e\u3059\u308b\u306e\u3082\u4e00\u82e6\u52b4\u306a\u8b0e\u73fe\u8c61\u306b\u60a9\u307e\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u7d50\u679c\u7684\u306b\u306f\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6539\u5909\u3057\u3066\u304b\u3089\u3001\u300e\u3068\u3042\u308b\u30d3\u30e5\u30fc\u300f\u3067 `layoutSubviews()` \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3001\u305d\u3053\u3067\u300e\u30b5\u30d6\u30d3\u30e5\u30fc\u300f\u306b\u5bfe\u3057\u3066\u30a2\u30f3\u30ab\u30fc\u30dd\u30a4\u30f3\u30c8\u3092\u518d\u8a2d\u5b9a\u3059\u308b\u3001\u3068\u3044\u3046\u8352\u6280\u3067\u306a\u3093\u3068\u304b\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\n```swift:CALayer+AnchorPoint_2\nextension CALayer {\n\tfunc setAnchorPoint(newAnchorPoint: CGPoint, forView view: UIView) {\n\t\tvar newPoint = CGPointMake(self.bounds.size.width * newAnchorPoint.x, self.bounds.size.height * newAnchorPoint.y)\n\t\t\n\t\tnewPoint = CGPointApplyAffineTransform(newPoint, view.transform)\n\t\t\n\t\tvar position = self.position\n\t\t\n\t\tposition.x = newPoint.x\n\t\tposition.y = newPoint.y\n\t\t\n\t\tself.anchorPoint = newAnchorPoint\n\t\tself.position = position\n\t}\n}\n```\n\n```swift\noverride func layoutSubviews() {\n    super.layoutSubviews()\n\t\t\n    // \u3053\u3053\u3067\u30a2\u30f3\u30ab\u30fc\u30dd\u30a4\u30f3\u30c8\u3092\u518d\u8a2d\u5b9a\u3057\u306a\u3044\u3068\u305f\u307e\u306b position \u304c\u305a\u308c\u3066\u3057\u307e\u3046\n    subView.layer.setAnchorPoint(anchorPoint, forView: subView)\n}\n```\n```swift\n// \u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u5909\u308f\u308a\u305d\u3046\u306a\u5834\u9762\u3067\u3053\u308c\u3092\u5b9f\u884c\nlayoutIfNeeded()\n```\n", "tags": ["CoreAnimation", "Swift", "iOS"]}