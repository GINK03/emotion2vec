{"context": "\n\n\u6982\u8981\nSpring Framework (Spring Boot)\u306eTips\u3067\u3059\u3002\u968f\u6642\u66f4\u65b0\u3057\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3059\u3002\n\u52d5\u4f5c\u78ba\u8a8d\u306fSpring Boot 1.3.0.M5\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002\nTips\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u8a2d\u5b9a\u3059\u308b\nConversionService\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\nEventListener\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\nResourceLoader\u3067\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\u3059\u308b\nMessageSource\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3059\u308b (add 2015/10/08)\nSPRING INITIALIZR\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u96db\u5f62\u3092\u751f\u6210\u3059\u308b (add 2015/10/08)\nShutdown Hook (add 2015/10/20)\n\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u306b\u4ed6\u306e\u30ad\u30fc\u306e\u5024\u3092\u8a2d\u5b9a\u3059\u308b (add 2016/02/07)\nSpring Boot\u3067Handler\u30e1\u30bd\u30c3\u30c9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u4efb\u610f\u306e\u30af\u30e9\u30b9\u3092\u66f8\u304d\u3001\u5f15\u6570\u306b\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u308b (add 2016/10/09) \u5225\u8a18\u4e8b\n\nSpring Boot\u3067\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5148\u306eURL\u3092\u7d44\u307f\u7acb\u3066\u308b (add 2016/10/09) \u5225\u8a18\u4e8b\n\nspring boot devtools\u306eAutomatic restart\u306b\u3064\u3044\u3066 (add 2016/10/13) \u5225\u8a18\u4e8b\n\n\n\u74b0\u5883\n\u4e0b\u8a18\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n\nWindows7 (64bit)\nSpring Boot 1.3.0.M5\nJava 1.8.0_60\nSpring Boot 1.3.0 (No.8\u4ee5\u964d)\nJava 1.8.0_65 (No.8\u4ee5\u964d)\n\n\u53c2\u8003\n\nBetter application events in Spring Framework 4.2\nAnnotation-driven event listeners in Spring 4.2\nPlaceholders support in Value annotations in Spring\nJava: Load file from classpath in Spring Boot\n\n\n1. \u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u8a2d\u5b9a\u3059\u308b\n\nValue\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\nValue\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nAnnotation Type Value\n\nmyapp:\n  string:\n    property: Some text\n    propertyDefault:\n#    propertyUnresolvable:\n  int:\n    property: 123\n  boolean:\n    property: true\n\n@Value(\"${myapp.string.property}\")\nprivate String stringProperty;\n@Value(\"${myapp.int.property}\")\nprivate int intProperty;\n@Value(\"${myapp.boolean.property}\")\nprivate boolean boolProperty;\n\nlogger.info(\"String:{} int:{} bool:{}\", stringProperty, intProperty, boolProperty);\n// \u21d2 String:Some text int:123 bool:true\n\n\n\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\n\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u53c2\u7167\u3059\u308b\u3068\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n@Value(\"${myapp.string.propertyUnresolvable}\")\nprivate String stringPropertyUnresolvable;\n\n\nIllegalArgumentException\nCaused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'myapp.string.propertyUnresolvable' in string value \"${myapp.string.propertyUnresolvable}\"\n\n\n\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306bPropertySourcesPlaceholderConfigurer\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u307e\u3059\u3002\nsetIgnoreUnresolvablePlaceholders\u30e1\u30bd\u30c3\u30c9\u3067\u89e3\u6c7a\u3067\u304d\u306a\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u7121\u8996\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nPropertySourcesPlaceholderConfigurer\n@Bean\npublic static PropertySourcesPlaceholderConfigurer placeholderConfigurer() {\n  PropertySourcesPlaceholderConfigurer config = new PropertySourcesPlaceholderConfigurer();\n  config.setIgnoreUnresolvablePlaceholders(true);\n  return config;\n}\n\n\n\u6b21\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f:\u3067\u533a\u5207\u3063\u3066\u6307\u5b9a\u3057\u307e\u3059\u3002\n@Value(\"${myapp.string.propertyUnresolvable:defaultValue}\")\nprivate String stringPropertyUnresolvable;\n\n\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\nlogger.info(\"String Unresolvable:{}\", stringPropertyUnresolvable);\n// \u21d2 String Unresolvable:defaultValue\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001Value\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u53cd\u6620\u3055\u308c\u307e\u305b\u3093\u3002\nmyapp:\n  string:\n    propertyDefault:\n\n@Value(\"${myapp.string.propertyDefault:defaultValue}\")\nprivate String stringPropertyDefault;\n\nValue\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u53cd\u6620\u3055\u308c\u305a\u7a7a\u6587\u5b57\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\nlogger.info(\"String Default:{}\", stringPropertyDefault);\n// \u21d2 String Default:\n\n\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306bPropertySourcesPlaceholderConfigurer\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u307e\u3059\u3002\nsetNullValue\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u7a7a\u6587\u5b57\u3092null\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\nPropertySourcesPlaceholderConfigurer\n@Bean\npublic static PropertySourcesPlaceholderConfigurer placeholderConfigurer() {\n  PropertySourcesPlaceholderConfigurer config = new PropertySourcesPlaceholderConfigurer();\n  config.setIgnoreUnresolvablePlaceholders(true);\n  config.setNullValue(\"\");\n  return config;\n}\n\n\n\u3057\u304b\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u30bb\u30c3\u30c8\u3055\u308c\u305anull\u306b\u306a\u308a\u307e\u3059\u3002\nlogger.info(\"String Default:{}\", stringPropertyDefault);\n// \u21d2 String Default:null\n\n\u305d\u3053\u3067Value\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u6307\u5b9a\u305b\u305a\u3001Optional\u306b\u4ee3\u3048\u307e\u3059\u3002\n@Value(\"${myapp.string.propertyDefault}\")\nprivate Optional<String> stringPropertyDefault;\n\n\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\nlogger.info(\"String Default:{}\", stringPropertyDefault.orElse(\"defaultValue\"));\n// \u21d2 String Default:defaultValue\n\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\n\nClass DefaultFormattingConversionService\n\nyaml\u3067\u914d\u5217\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u304c\u3001spring\u306f\u3053\u306e\u5f62\u5f0f\u306e\u914d\u5217\u5b9a\u7fa9\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n(\u3053\u306e\u4ef6\u306f@Value annotation should be able to inject List from YAML properties\u3068\u3057\u3066\u30c1\u30b1\u30c3\u30c8\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002)\nmyapp:\n  intList:\n    property:\n     - 1\n     - 2\n     - 3\n     - 4\n     - 5\n\n\u73fe\u72b6\u3067\u306f\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u5024\u3092\u5217\u6319\u3057\u3066\u914d\u5217\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\nmyapp:\n  intList:\n    property: 1,2,3,4,5\n  stringArray:\n    property: a,b,c,d,e\n\n@Value(\"${myapp.intList.property}\")\nprivate List<Integer> intList;\n@Value(\"${myapp.stringArray.property}\")\nprivate List<String> stringArray;\n\n\u3057\u304b\u3057\u3001\u3053\u306e\u307e\u307e\u3067\u306f\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\nNumberFormatException\nCaused by: java.lang.NumberFormatException: For input string: \"1,2,3,4,5\"\n\n\n\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306bConversionService\u306bDefaultFormattingConversionService\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nConversionService\n@Bean\npublic static ConversionService conversionService() {\n  ConversionService conversionService = new DefaultFormattingConversionService();\n  return conversionService;\n}\n\n\n\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\nlogger.info(\"intList:{}\", intList.toString());\n// \u21d2 intList:[1, 2, 3, 4, 5]\nlogger.info(\"stringArray:{}\", stringArray.toString());\n// \u21d2 stringArray:[a, b, c, d, e]\n\n\nLocalDate\n\u65e5\u6642\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u3059\u308b\u306b\u306fValue\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u307b\u304b\u306bDateTiemFormat\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\nmyapp:\n  localDate:\n    property: 2015-09-28\n  localDateTime:\n    property: 2015-09-28 10:05:00\n\nDateTimeFormat\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u30d1\u30bf\u30fc\u30f3\u3092\u5ba3\u8a00\u3057\u307e\u3059\u3002\n@Value(\"${myapp.localDate.property}\")\n@DateTimeFormat(pattern = \"yyyy-MM-dd\")\nprivate LocalDate localDate;\n@Value(\"${myapp.localDateTime.property}\")\n@DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\")\nprivate LocalDateTime localDateTime;\n\n\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\nlogger.info(\"localDate:{}\", localDate.toString());\n// \u21d2 localDate:2015-09-28\nlogger.info(\"localDateTime:{}\", localDateTime.toString());\n// \u21d2 localDateTime:2015-09-28T10:05\n\n\nthymeleaf\nthymeleaf\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nmyapp:\n  version: 1.0.1\n\n<p th:text=\"${@environment.getProperty('myapp.version')}\"></p>\n\n\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n<p>1.0.1</p>\n\n\n2. ConversionService\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n\u578b\u5909\u63db\u30b5\u30fc\u30d3\u30b9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u65e5\u4ed8\u6587\u5b57\u5217\u3092Date\u3084LocalDate\u30af\u30e9\u30b9\u3078\u5909\u63db\u3057\u307e\u3059\u3002\n\nInterface ConversionService\nClass FormattingConversionServiceFactoryBean\n\n\nFormattingConversionServiceFactoryBean\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport java.util.Date;\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.convert.ConversionService;\nimport org.springframework.core.convert.converter.Converter;\nimport org.springframework.format.support.FormattingConversionServiceFactoryBean;\n\n@Configuration\npublic class ConversionConfig {\n\n  @Bean\n  public static ConversionService conversionService() {\n\n    FormattingConversionServiceFactoryBean factoryBean = new FormattingConversionServiceFactoryBean();\n    factoryBean.setConverters(getConverters());\n    factoryBean.afterPropertiesSet();\n    ConversionService conversionService = factoryBean.getObject();\n\n    return conversionService;\n  }\n\n  private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");\n  private static final DateTimeFormatter DATETIME_FORMATTER = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");\n\n  private static Set<Converter<String, ?>> getConverters() {\n    Set<Converter<String, ?>> converters = new HashSet<Converter<String, ?>>();\n\n    converters.add(\n      new Converter<String, Date>() {\n        @Override\n        public Date convert(String str) {\n          SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n          try {\n            return sdf.parse(str);\n          } catch (ParseException e) {\n            return null;\n          }\n        }\n    });\n\n    converters.add(\n      new Converter<String, LocalDate>() {\n        @Override\n        public LocalDate convert(String str) {\n          return LocalDate.parse(str, DATE_FORMATTER);\n        }\n    });\n\n    converters.add(\n      new Converter<String, LocalDateTime>() {\n        @Override\n        public LocalDateTime convert(String str) {\n          return LocalDateTime.parse(str, DATETIME_FORMATTER);\n        }\n    });\n\n    return converters;\n  }\n}\n\n\n\u52d5\u4f5c\u78ba\u8a8d\u30b3\u30fc\u30c9\n\n\u78ba\u8a8d\n@Autowired\nConversionService conversionService;\n\npublic void confirm() {\n\n  Integer i = conversionService.convert(\"2015\", Integer.class);\n  Long l = conversionService.convert(\"2015\", Long.class);\n  BigDecimal b = conversionService.convert(\"124.45\", BigDecimal.class);\n\n  logger.info(\"Integer:{} Long:{} BigDecimal:{}\", i, l, b);\n  // \u21d2 Integer:2015 Long:2015 BigDecimal:124.45\n\n  Date d = conversionService.convert(\"2015-10-03\", Date.class);\n  logger.info(\"Date:{}\", d.toString());\n  // \u21d2 Date:Sat Oct 03 00:00:00 JST 2015\n\n  LocalDate ld = conversionService.convert(\"2015-10-03\", LocalDate.class);\n  logger.info(\"localDate:{}\", ld.toString());\n  // \u21d2 localDate:2015-10-03\n\n}\n\n\n\n3. EventListener\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\nSpring 4.2\u3088\u308a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30d9\u30f3\u30c8\u306e\u5b9f\u88c5\u306bEventListener\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\nAnnotation Type EventListener\nClass ApplicationEvent\nInterface ApplicationListener\nInterface ApplicationEventPublisher\n\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u306a\u3044\u5b9f\u88c5\u65b9\u6cd5\n\nBlog\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class Blog implements Serializable {\n\n  private static final long serialVersionUID = -5011335950988850583L;\n\n  private Long id;\n  private String title;\n  private Date published;\n\n  public Blog(Long id, String title) {\n    this.id = id;\n    this.title = title;\n    this.published = null;\n  }\n\n  ... getter/setter\u7701\u7565 ...\n\n  @Override\n  public String toString() {\n    return \"Blog [id=\" + id + \", title=\" + title + \", published=\" + published\n        + \"]\";\n  }\n\n}\n\n\n\u30a4\u30d9\u30f3\u30c8\u30af\u30e9\u30b9\n\nBlogEvent\nimport org.springframework.context.ApplicationEvent;\n\npublic class BlogEvent extends ApplicationEvent {\n\n  private static final long serialVersionUID = 6029200135885343599L;\n\n  private Blog blog;\n\n  public BlogEvent(Object source, Blog blog) {\n    super(source);\n    this.blog = blog;\n  }\n\n  public Blog getBlog() {\n    return blog;\n  }\n\n  public void setBlog(Blog blog) {\n    this.blog = blog;\n  }\n\n}\n\n\n\u30ea\u30b9\u30ca\u30fc\u30af\u30e9\u30b9\n\nBlogListener\nimport java.util.Date;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.context.ApplicationListener;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class BlogListener implements ApplicationListener<BlogEvent> {\n  final static Logger logger = LoggerFactory.getLogger(BlogListener.class);\n\n  @Override\n  public void onApplicationEvent(BlogEvent event) {\n    logger.info(\"Blog Event is occured!!\");\n    logger.info(event.getBlog().toString());\n    event.getBlog().setPublished(new Date());\n  }\n\n}\n\n\nApplicationEventPublisherAware\n\nBlogService\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.context.ApplicationEventPublisher;\nimport org.springframework.context.ApplicationEventPublisherAware;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class BlogService implements ApplicationEventPublisherAware {\n  final static Logger logger = LoggerFactory.getLogger(BlogService.class);\n\n  private ApplicationEventPublisher publisher;\n\n  @Override\n  public void setApplicationEventPublisher(ApplicationEventPublisher publisher) {\n    this.publisher = publisher;\n  }\n\n  public void createBlog(Blog blog) {\n    logger.info(\"Publishing Blog Create Event\");\n    BlogEvent event = new BlogEvent(this, blog);\n    publisher.publishEvent(event);\n  }\n\n}\n\n\n\u52d5\u4f5c\u78ba\u8a8d\u30b3\u30fc\u30c9\n\n\u78ba\u8a8d\n\n@Autowired\nBlogService blogService;\n\npublic void confirm() {\n\n  Blog blog = new Blog(1L, \"\u6d5c\u7701\u3060\u3089\u3051\u306e\u91ce\u7403\u5bfe\u6c7a\u3092\u89b3\u8cde\u3059\u308b\");\n  logger.info(blog.toString());\n  // \u21d2 Blog [id=1, title=\u6d5c\u7701\u3060\u3089\u3051\u306e\u91ce\u7403\u5bfe\u6c7a\u3092\u89b3\u8cde\u3059\u308b, published=null]\n\n  blogService.createBlog(blog);\n  logger.info(blog.toString());\n  // \u21d2 Blog [id=1, title=\u6d5c\u7701\u3060\u3089\u3051\u306e\u91ce\u7403\u5bfe\u6c7a\u3092\u89b3\u8cde\u3059\u308b, published=Sun Oct 04 20:25:33 JST 2015]\n\n}\n\n\n\nEventListener\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u305f\u5b9f\u88c5\n\nProduct\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class Product implements Serializable {\n\n  private static final long serialVersionUID = 886343041195980987L;\n\n  private Long id;\n  private String productName;\n\n  private Date createdAt;\n  private Date completedAt;\n\n  public Product(Long id, String productName) {\n    this.id = id;\n    this.productName = productName;\n    this.createdAt = null;\n    this.completedAt = null;\n  }\n\n  ... getter/setter\u7701\u7565 ...\n\n  @Override\n  public String toString() {\n    return \"Product [id=\" + id + \", productName=\" + productName\n        + \", createdAt=\" + createdAt + \", completedAt=\" + completedAt + \"]\";\n  }\n\n}\n\n\n\u30a4\u30d9\u30f3\u30c8\u30af\u30e9\u30b9\nApplicationEvent\u3092\u7d99\u627f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\nProductEvent\npublic class ProductEvent {\n\n  private Product product;\n  private String status;\n\n  public ProductEvent(Product product) {\n    this.product = product;\n    this.status = \"CREATE\";\n  }\n\n  public Product getProduct() {\n    return product;\n  }\n  public void setProduct(Product product) {\n    this.product = product;\n  }\n  public String getStatus() {\n    return status;\n  }\n  public void setStatus(String status) {\n    this.status = status;\n  }\n\n}\n\n\n\u30ea\u30b9\u30ca\u30fc\u30af\u30e9\u30b9\nApplicationListener\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u4ee3\u308f\u308a\u306b\u30e1\u30bd\u30c3\u30c9\u306bEventListener\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u3066\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\nProductListener\nimport java.util.Date;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.context.event.EventListener;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class ProductListener {\n  final static Logger logger = LoggerFactory.getLogger(ProductListener.class);\n\n  @EventListener(condition = \"#event.status == 'CREATE'\")\n  public void createEvent(ProductEvent event) {\n    logger.info(\"Product Create Event is occured!!\");\n\n    try {\n      TimeUnit.SECONDS.sleep(3L);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n\n    event.getProduct().setCreatedAt(new Date());\n   }\n\n  @EventListener(condition = \"#event.status == 'COMPLETE'\")\n  public void closeEvent(ProductEvent event) {\n    logger.info(\"Product Complete Event is occured!!\");\n\n    try {\n      TimeUnit.SECONDS.sleep(3L);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n\n    event.getProduct().setCompletedAt(new Date());\n  }\n\n}\n\n\n\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3059\u308b\u30af\u30e9\u30b9\nApplicationEventPublisherAware\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\nProductService\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.ApplicationEventPublisher;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ProductService {\n  final static Logger logger = LoggerFactory.getLogger(ProductService.class);\n\n  @Autowired\n  ApplicationEventPublisher publisher;\n\n  public void createProduct(Product product) {\n    logger.info(\"Publishing Product Create Event\");\n    ProductEvent event = new ProductEvent(product);\n    publisher.publishEvent(event);\n  }\n\n  public void completeProduct(Product product) {\n    logger.info(\"Publishing Product Complete Event\");\n    ProductEvent event = new ProductEvent(product);\n    event.setStatus(\"COMPLETE\");\n    publisher.publishEvent(event);\n  }\n\n}\n\n\n\u52d5\u4f5c\u78ba\u8a8d\u30b3\u30fc\u30c9\n\n\u78ba\u8a8d\n\n@Autowired\nProductService productService;\n\npublic void confirm() {\n\n  Product product = new Product(1L, \"Mazda RX-7\");\n  logger.info(product.toString());\n  // \u21d2 Product [id=1, productName=Mazda RX-7, createdAt=null, completedAt=null]\n\n  productService.createProduct(product);\n  logger.info(product.toString());\n  // \u21d2 Product [id=1, productName=Mazda RX-7, createdAt=Sun Oct 04 20:25:36 JST 2015, completedAt=null]\n\n  try {\n    TimeUnit.SECONDS.sleep(3L);\n  } catch (InterruptedException e) {\n    e.printStackTrace();\n  }\n\n  productService.completeProduct(product);\n  logger.info(product.toString());\n  // \u21d2 Product [id=1, productName=Mazda RX-7, createdAt=Sun Oct 04 20:25:36 JST 2015, completedAt=Sun Oct 04 20:25:42\n}\n\n\n\n4. ResourceLoader\u3067\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\u3059\u308b\n\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\u306bApplicationContext\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u4f7f\u7528\u3067\u304d\u306a\u3044\u3088\u3046\u306a\u5834\u5408\u3001\u4ee3\u308f\u308a\u306bResourceLoader\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nInterface ResourceLoader\n\n\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\n\u52d5\u4f5c\u78ba\u8a8d\u3067\u4f7f\u7528\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092/src/main/resources\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002\n/src/main/resources/resource1.txt\n\nresource1.txt\n123\n456\n789\n\n\n/src/main/resources/resource2.txt\n\nresource2.txt\nABC\nDEF\nGHI\n\n\n/src/main/resources/resource3.txt\n\nresource3.txt\n\u3042\u3044\u3046\u3048\u304a\n\u304b\u304d\u304f\u3051\u3053\n\u3055\u3057\u3059\u305b\u305d\n\n\n\u52d5\u4f5c\u78ba\u8a8d\u30b3\u30fc\u30c9\n\nApplicationContext\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\nResourceLoader\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\nDefaultResourceLoader\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\n\n\n\u78ba\u8a8d\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.core.io.DefaultResourceLoader;\nimport org.springframework.core.io.Resource;\nimport org.springframework.core.io.ResourceLoader;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ResourceLoaderService {\n  final static Logger logger = LoggerFactory.getLogger(ResourceLoaderService.class);\n\n  @Autowired\n  ResourceLoader resourceLoader;\n\n  @Autowired\n  ApplicationContext context;\n\n  // (1)\n  public void execute1() {\n    try {\n      Resource resource = context.getResource(\"classpath:resource1.txt\");\n      File file = resource.getFile();\n      try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n        br.lines().forEach(a -> {\n          logger.info(a);\n          // \u21d2 123\n          // \u21d2 456\n          // \u21d2 789\n        });\n      }\n    } catch (IOException | NullPointerException e) {\n      logger.error(e.getMessage());\n    }\n  }\n\n  // (2)\n  public void execute2() {\n    try {\n      Resource resource = resourceLoader.getResource(\"classpath:resource2.txt\");\n      File file = resource.getFile();\n      try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n        br.lines().forEach(a -> {\n          logger.info(a);\n          // \u21d2 ABC\n          // \u21d2 DEF\n          // \u21d2 GHI\n        });\n      }\n    } catch (IOException | NullPointerException e) {\n      logger.error(e.getMessage());\n    }\n  }\n\n  // (3)\n  public void execute3() {\n    try {\n      ResourceLoader loader = new DefaultResourceLoader();\n      Resource resource = loader.getResource(\"classpath:resource3.txt\");\n      File file = resource.getFile();\n      try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n        br.lines().forEach(a -> {\n          logger.info(a);\n          // \u21d2 \u3042\u3044\u3046\u3048\u304a\n          // \u21d2 \u304b\u304d\u304f\u3051\u3053\n          // \u21d2 \u3055\u3057\u3059\u305b\u305d\n        });\n      }\n    } catch (IOException | NullPointerException e) {\n      logger.error(e.getMessage());\n    }\n  }\n\n}\n\n\n\n5. MessageSource\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3059\u308b\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306e\u8a2d\u5b9a\u306fspring.messages.*\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u884c\u3044\u307e\u3059\u3002\n# INTERNATIONALIZATION (MessageSourceAutoConfiguration)\nspring:\n  messages:\n    basename: messages,views\n    cache-seconds: -1\n    encoding: utf-8\n\n\nbasename\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u30d9\u30fc\u30b9\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u8907\u6570\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u30ab\u30f3\u30de\u3067\u533a\u5207\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fmessages\u3067\u3059\u3002\n\n\ncache-seconds\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u79d2\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f-1\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u671f\u9650\u306f\u7121\u671f\u9650\u3067\u3059\u3002 0\u3092\u6307\u5b9a\u3059\u308b\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u307e\u305b\u3093\u3002\n\n\nencoding\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306futf-8\u3067\u3059\u3002\n\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u30d9\u30fc\u30b9\u540d\u306b\u4f8b\u3048\u3070_ja\u3084_en\u306e\u69d8\u306b\u30ed\u30b1\u30fc\u30eb\u3092\u4ed8\u52a0\u3059\u308b\u3053\u3068\u3067\u56fd\u969b\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n1\u3064\u306e\u8a00\u8a9e\u3060\u3051\u5bfe\u5fdc\u3059\u308c\u3070\u3088\u3044\u5834\u5408\u306f\u30ed\u30b1\u30fc\u30eb\u306f\u4e0d\u8981\u3067\u3059\u3002\n\nmessages_ja.properties\nmessage.text1 = abc\nmessage.text2 = 123\nmessage.text3 = hello {0}.\n\n\n\nviews_ja.properties\nlayout.header = \\u30D8\\u30C3\\u30C0\\u30FC\nlayout.footer = Copyright {0} - {1}.\n\n\n\ncontroller\n\u4f8b\u3048\u3070Controler\u30af\u30e9\u30b9\u5185\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u3092\u53c2\u7167\u3057\u305f\u3044\u5834\u5408\u306fMessageSource\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n@Autowired\nMessageSource messageSource;\n\n@RequestMapping(value = \"/\", method = RequestMethod.GET)\npublic String index(Model model, Locale locale) {\n\n  String text1 = messageSource.getMessage(\"message.text1\", null, locale);\n  String text2 = messageSource.getMessage(\"message.text2\", null, locale);\n  String text3 = messageSource.getMessage(\"message.text3\", new Object[]{\"world!\"}, locale);\n  logger.info(\"message: text1:{} text2:{} text3:{}\", text1, text2, text3);\n  // \u21d2 message: text1:abc text2:123 text3:hello world!.\n\n  return \"Index/index\";\n}\n\n\nthymeleaf\nthymeleaf\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u3092\u53c2\u7167\u3059\u308b\u306b\u306f#{\u30ea\u30bd\u30fc\u30b9\u30ad\u30fc}\u3068\u3044\u3046\u8a18\u6cd5\u3092\u4f7f\u3044\u307e\u3059\u3002\n<h1 th:text=\"#{layout.header}\">header</h1>\n<h3 th:text=\"#{layout.footer('2014','2015')}\">footer</h3>\n\n\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n<h1>\u30d8\u30c3\u30c0\u30fc</h1>\n<h3>Copyright 2014 - 2015.</h3>\n\n\n6. SPRING INITIALIZR\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u96db\u5f62\u3092\u751f\u6210\u3059\u308b\nSPRING INITIALIZR\u3067pom.xml\u3084build.gradle\u306e\u96db\u5f62\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30bf\u30a4\u30d7(Maven or Gradle)\u3068Spring-Boot\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3001Project Metadata\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\u6b21\u306b\"Switch to the full version.\"\u3068\u3044\u3046\u30ea\u30f3\u30af\u30c6\u30ad\u30b9\u30c8\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n\u5fc5\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u3066\u3001\u6700\u5f8c\u306b\"Generate Project\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u306ezip\u30d5\u30a1\u30a4\u30eb\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u59cb\u307e\u308a\u307e\u3059\u3002\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9: tips-example.zip\n\nzip\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u69cb\u6210\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\ntree\ntips-example\n  \u251c\u2500.mvn\n  \u2502  \u2514\u2500wrapper\n  \u2514\u2500src\n      \u251c\u2500main\n      \u2502  \u251c\u2500java\n      \u2502  \u2502  \u2514\u2500com\n      \u2502  \u2502      \u2514\u2500example\n      \u2502  \u2502          \u2514\u2500sbtip\n      \u2502  \u2514\u2500resources\n      \u2502      \u251c\u2500static\n      \u2502      \u2514\u2500templates\n      \u2514\u2500test\n          \u2514\u2500java\n              \u2514\u2500com\n                  \u2514\u2500example\n                      \u2514\u2500sbtip\n\n\n\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092eclipse\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u306b\u306f\u5c55\u958b\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u79fb\u52d5\u3057\u3066\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n> mvn eclipse:eclipse\n\n\n7. Shutdown Hook\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7d42\u4e86\u6642\u306b\u4efb\u610f\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u306b\u306fPreDestro\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n@PreDestroy\npublic static void exit() {\n  System.out.println(\"appliation exit\");\n}\n\n\n8. \u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u306b\u4ed6\u306e\u30ad\u30fc\u306e\u5024\u3092\u8a2d\u5b9a\u3059\u308b\n\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u306e\u5b9a\u7fa9\u306bspel\u5f0f\u304c\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\nmyapp:\n  configA:\n    var1: ABC\n    var2: DEF\n  configB:\n    var1: 123\n    var2: ${myapp.configA.var1}\n\nThymeleaf\u3067\u76f4\u63a5\u51fa\u529b\u3057\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\ntemplate\n<div class=\"row\">\n  <p th:text=\"${@environment.getProperty('myapp.configA.var1')}\"></p>\n  <p th:text=\"${@environment.getProperty('myapp.configA.var2')}\"></p>\n  <p th:text=\"${@environment.getProperty('myapp.configB.var1')}\"></p>\n  <p th:text=\"${@environment.getProperty('myapp.configB.var2')}\"></p>\n</div>\n\n\n\nrender\n<div class=\"row\">\n  <p>ABC</p>\n  <p>DEF</p>\n  <p>123</p>\n  <p>ABC</p>\n</div>\n\n\n\n9. Spring Boot\u3067Handler\u30e1\u30bd\u30c3\u30c9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u4efb\u610f\u306e\u30af\u30e9\u30b9\u3092\u66f8\u304d\u3001\u5f15\u6570\u306b\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u308b\n\u5225\u8a18\u4e8b\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://qiita.com/rubytomato@github/items/37d58c2748c9f0a8566a\n\n10. Spring Boot\u3067\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5148\u306eURL\u3092\u7d44\u307f\u7acb\u3066\u308b\n\u5225\u8a18\u4e8b\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://qiita.com/rubytomato@github/items/8d132dec042f695e50f6\n\n11. spring boot devtools\u306eAutomatic restart\u306b\u3064\u3044\u3066\n\u5225\u8a18\u4e8b\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://qiita.com/rubytomato@github/items/6f5dc142f32d9e9c1e2a\n# \u6982\u8981\n\nSpring Framework (Spring Boot)\u306eTips\u3067\u3059\u3002\u968f\u6642\u66f4\u65b0\u3057\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3059\u3002\n\u52d5\u4f5c\u78ba\u8a8d\u306fSpring Boot 1.3.0.M5\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n**Tips**\n\n1. \u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u8a2d\u5b9a\u3059\u308b\n2. ConversionService\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\n3. EventListener\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\n4. ResourceLoader\u3067\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\u3059\u308b\n5. MessageSource\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3059\u308b (add 2015/10/08)\n6. SPRING INITIALIZR\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u96db\u5f62\u3092\u751f\u6210\u3059\u308b (add 2015/10/08)\n7. Shutdown Hook (add 2015/10/20)\n8. \u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u306b\u4ed6\u306e\u30ad\u30fc\u306e\u5024\u3092\u8a2d\u5b9a\u3059\u308b (add 2016/02/07)\n9. Spring Boot\u3067Handler\u30e1\u30bd\u30c3\u30c9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u4efb\u610f\u306e\u30af\u30e9\u30b9\u3092\u66f8\u304d\u3001\u5f15\u6570\u306b\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u308b (add 2016/10/09) *\u5225\u8a18\u4e8b*\n10. Spring Boot\u3067\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5148\u306eURL\u3092\u7d44\u307f\u7acb\u3066\u308b (add 2016/10/09) *\u5225\u8a18\u4e8b*\n11. spring boot devtools\u306eAutomatic restart\u306b\u3064\u3044\u3066 (add 2016/10/13) *\u5225\u8a18\u4e8b*\n\n\n**\u74b0\u5883**\n\n\u4e0b\u8a18\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n\n* Windows7 (64bit)\n* Spring Boot 1.3.0.M5\n* Java 1.8.0_60\n* Spring Boot 1.3.0 (No.8\u4ee5\u964d)\n* Java 1.8.0_65 (No.8\u4ee5\u964d)\n\n\n**\u53c2\u8003**\n\n* [Better application events in Spring Framework 4.2] (https://spring.io/blog/2015/02/11/better-application-events-in-spring-framework-4-2)\n* [Annotation-driven event listeners in Spring 4.2] (http://www.javacodegeeks.com/2015/10/annotation-driven-event-listeners-in-spring-4-2-2.html)\n* [Placeholders support in Value annotations in Spring] (http://www.javacodegeeks.com/2015/09/placeholders-support-in-value-annotations-in-spring.html)\n* [Java: Load file from classpath in Spring Boot] (http://kamwo.me/java-load-file-from-classpath-in-spring-boot/)\n\n\n## 1. \u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u8a2d\u5b9a\u3059\u308b\n\n### Value\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\nValue\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n* [Annotation Type Value] (http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/beans/factory/annotation/Value.html)\n\n```yaml\nmyapp:\n  string:\n    property: Some text\n    propertyDefault:\n#    propertyUnresolvable:\n  int:\n    property: 123\n  boolean:\n    property: true\n```\n\n```java\n@Value(\"${myapp.string.property}\")\nprivate String stringProperty;\n@Value(\"${myapp.int.property}\")\nprivate int intProperty;\n@Value(\"${myapp.boolean.property}\")\nprivate boolean boolProperty;\n```\n\n```java\nlogger.info(\"String:{} int:{} bool:{}\", stringProperty, intProperty, boolProperty);\n// \u21d2 String:Some text int:123 bool:true\n```\n\n\n#### \u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\n\n\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u53c2\u7167\u3059\u308b\u3068\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n```java\n@Value(\"${myapp.string.propertyUnresolvable}\")\nprivate String stringPropertyUnresolvable;\n```\n\n```java:IllegalArgumentException\nCaused by: java.lang.IllegalArgumentException: Could not resolve placeholder 'myapp.string.propertyUnresolvable' in string value \"${myapp.string.propertyUnresolvable}\"\n```\n\n\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306bPropertySourcesPlaceholderConfigurer\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u307e\u3059\u3002\nsetIgnoreUnresolvablePlaceholders\u30e1\u30bd\u30c3\u30c9\u3067\u89e3\u6c7a\u3067\u304d\u306a\u3044\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u7121\u8996\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```java:PropertySourcesPlaceholderConfigurer\n@Bean\npublic static PropertySourcesPlaceholderConfigurer placeholderConfigurer() {\n  PropertySourcesPlaceholderConfigurer config = new PropertySourcesPlaceholderConfigurer();\n  config.setIgnoreUnresolvablePlaceholders(true);\n  return config;\n}\n```\n\n\u6b21\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f`:`\u3067\u533a\u5207\u3063\u3066\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```java\n@Value(\"${myapp.string.propertyUnresolvable:defaultValue}\")\nprivate String stringPropertyUnresolvable;\n```\n\n\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\n```java\nlogger.info(\"String Unresolvable:{}\", stringPropertyUnresolvable);\n// \u21d2 String Unresolvable:defaultValue\n```\n\n\n#### \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5024\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001Value\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u53cd\u6620\u3055\u308c\u307e\u305b\u3093\u3002\n\n```yaml\nmyapp:\n  string:\n    propertyDefault:\n```\n\n```java\n@Value(\"${myapp.string.propertyDefault:defaultValue}\")\nprivate String stringPropertyDefault;\n```\n\nValue\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u53cd\u6620\u3055\u308c\u305a\u7a7a\u6587\u5b57\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```java\nlogger.info(\"String Default:{}\", stringPropertyDefault);\n// \u21d2 String Default:\n```\n\n\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306bPropertySourcesPlaceholderConfigurer\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u307e\u3059\u3002\nsetNullValue\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u7a7a\u6587\u5b57\u3092null\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n```java:PropertySourcesPlaceholderConfigurer\n@Bean\npublic static PropertySourcesPlaceholderConfigurer placeholderConfigurer() {\n  PropertySourcesPlaceholderConfigurer config = new PropertySourcesPlaceholderConfigurer();\n  config.setIgnoreUnresolvablePlaceholders(true);\n  config.setNullValue(\"\");\n  return config;\n}\n```\n\n\u3057\u304b\u3057\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u30bb\u30c3\u30c8\u3055\u308c\u305anull\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\nlogger.info(\"String Default:{}\", stringPropertyDefault);\n// \u21d2 String Default:null\n```\n\n\u305d\u3053\u3067Value\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u6307\u5b9a\u305b\u305a\u3001Optional<String>\u306b\u4ee3\u3048\u307e\u3059\u3002\n\n```java\n@Value(\"${myapp.string.propertyDefault}\")\nprivate Optional<String> stringPropertyDefault;\n```\n\n\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\n```java\nlogger.info(\"String Default:{}\", stringPropertyDefault.orElse(\"defaultValue\"));\n// \u21d2 String Default:defaultValue\n```\n\n\n#### \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\n\n* [Class DefaultFormattingConversionService] (http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/format/support/DefaultFormattingConversionService.html)\n\nyaml\u3067\u914d\u5217\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u304c\u3001spring\u306f\u3053\u306e\u5f62\u5f0f\u306e\u914d\u5217\u5b9a\u7fa9\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n(\u3053\u306e\u4ef6\u306f[@Value annotation should be able to inject List<String> from YAML properties] (https://jira.spring.io/browse/SPR-11759)\u3068\u3057\u3066\u30c1\u30b1\u30c3\u30c8\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u3002)\n\n```yaml\nmyapp:\n  intList:\n    property:\n     - 1\n     - 2\n     - 3\n     - 4\n     - 5\n```\n\n\u73fe\u72b6\u3067\u306f\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u5024\u3092\u5217\u6319\u3057\u3066\u914d\u5217\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\n\n```yaml\nmyapp:\n  intList:\n    property: 1,2,3,4,5\n  stringArray:\n    property: a,b,c,d,e\n```\n\n```java\n@Value(\"${myapp.intList.property}\")\nprivate List<Integer> intList;\n@Value(\"${myapp.stringArray.property}\")\nprivate List<String> stringArray;\n```\n\n\u3057\u304b\u3057\u3001\u3053\u306e\u307e\u307e\u3067\u306f\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n```java:NumberFormatException\nCaused by: java.lang.NumberFormatException: For input string: \"1,2,3,4,5\"\n```\n\n\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306bConversionService\u306bDefaultFormattingConversionService\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```java:ConversionService\n@Bean\npublic static ConversionService conversionService() {\n  ConversionService conversionService = new DefaultFormattingConversionService();\n  return conversionService;\n}\n```\n\n\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\n```java\nlogger.info(\"intList:{}\", intList.toString());\n// \u21d2 intList:[1, 2, 3, 4, 5]\nlogger.info(\"stringArray:{}\", stringArray.toString());\n// \u21d2 stringArray:[a, b, c, d, e]\n```\n\n\n#### LocalDate\n\n\u65e5\u6642\u3092\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u3059\u308b\u306b\u306fValue\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u307b\u304b\u306bDateTiemFormat\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```yaml\nmyapp:\n  localDate:\n    property: 2015-09-28\n  localDateTime:\n    property: 2015-09-28 10:05:00\n```\n\nDateTimeFormat\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u30d1\u30bf\u30fc\u30f3\u3092\u5ba3\u8a00\u3057\u307e\u3059\u3002\n\n```java\n@Value(\"${myapp.localDate.property}\")\n@DateTimeFormat(pattern = \"yyyy-MM-dd\")\nprivate LocalDate localDate;\n@Value(\"${myapp.localDateTime.property}\")\n@DateTimeFormat(pattern = \"yyyy-MM-dd HH:mm:ss\")\nprivate LocalDateTime localDateTime;\n```\n\n\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\n```java\nlogger.info(\"localDate:{}\", localDate.toString());\n// \u21d2 localDate:2015-09-28\nlogger.info(\"localDateTime:{}\", localDateTime.toString());\n// \u21d2 localDateTime:2015-09-28T10:05\n```\n\n\n#### thymeleaf\n\nthymeleaf\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```yaml\nmyapp:\n  version: 1.0.1\n```\n\n```html\n<p th:text=\"${@environment.getProperty('myapp.version')}\"></p>\n```\n\n\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\n```html\n<p>1.0.1</p>\n```\n\n\n## 2. ConversionService\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n\n\u578b\u5909\u63db\u30b5\u30fc\u30d3\u30b9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u65e5\u4ed8\u6587\u5b57\u5217\u3092Date\u3084LocalDate\u30af\u30e9\u30b9\u3078\u5909\u63db\u3057\u307e\u3059\u3002\n\n* [Interface ConversionService] (http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/core/convert/ConversionService.html)\n* [Class FormattingConversionServiceFactoryBean] (http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/format/support/FormattingConversionServiceFactoryBean.html)\n\n```java:FormattingConversionServiceFactoryBean\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.time.LocalDate;\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\nimport java.util.Date;\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.convert.ConversionService;\nimport org.springframework.core.convert.converter.Converter;\nimport org.springframework.format.support.FormattingConversionServiceFactoryBean;\n\n@Configuration\npublic class ConversionConfig {\n\n  @Bean\n  public static ConversionService conversionService() {\n\n    FormattingConversionServiceFactoryBean factoryBean = new FormattingConversionServiceFactoryBean();\n    factoryBean.setConverters(getConverters());\n    factoryBean.afterPropertiesSet();\n    ConversionService conversionService = factoryBean.getObject();\n\n    return conversionService;\n  }\n\n  private static final DateTimeFormatter DATE_FORMATTER = DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");\n  private static final DateTimeFormatter DATETIME_FORMATTER = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");\n\n  private static Set<Converter<String, ?>> getConverters() {\n    Set<Converter<String, ?>> converters = new HashSet<Converter<String, ?>>();\n\n    converters.add(\n      new Converter<String, Date>() {\n        @Override\n        public Date convert(String str) {\n          SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\n          try {\n            return sdf.parse(str);\n          } catch (ParseException e) {\n            return null;\n          }\n        }\n    });\n\n    converters.add(\n      new Converter<String, LocalDate>() {\n        @Override\n        public LocalDate convert(String str) {\n          return LocalDate.parse(str, DATE_FORMATTER);\n        }\n    });\n\n    converters.add(\n      new Converter<String, LocalDateTime>() {\n        @Override\n        public LocalDateTime convert(String str) {\n          return LocalDateTime.parse(str, DATETIME_FORMATTER);\n        }\n    });\n\n    return converters;\n  }\n}\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d\u30b3\u30fc\u30c9**\n\n```java:\u78ba\u8a8d\n@Autowired\nConversionService conversionService;\n\npublic void confirm() {\n\n  Integer i = conversionService.convert(\"2015\", Integer.class);\n  Long l = conversionService.convert(\"2015\", Long.class);\n  BigDecimal b = conversionService.convert(\"124.45\", BigDecimal.class);\n\n  logger.info(\"Integer:{} Long:{} BigDecimal:{}\", i, l, b);\n  // \u21d2 Integer:2015 Long:2015 BigDecimal:124.45\n\n  Date d = conversionService.convert(\"2015-10-03\", Date.class);\n  logger.info(\"Date:{}\", d.toString());\n  // \u21d2 Date:Sat Oct 03 00:00:00 JST 2015\n\n  LocalDate ld = conversionService.convert(\"2015-10-03\", LocalDate.class);\n  logger.info(\"localDate:{}\", ld.toString());\n  // \u21d2 localDate:2015-10-03\n\n}\n```\n\n\n## 3. EventListener\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30d9\u30f3\u30c8\u3092\u5b9f\u88c5\u3059\u308b\n\nSpring 4.2\u3088\u308a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a4\u30d9\u30f3\u30c8\u306e\u5b9f\u88c5\u306bEventListener\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\n* [Annotation Type EventListener] (https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/context/event/EventListener.html)\n* [Class ApplicationEvent] (http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/context/ApplicationEvent.html)\n* [Interface ApplicationListener<E extends ApplicationEvent>] (http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/context/ApplicationListener.html)\n* [Interface ApplicationEventPublisher] (http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/context/ApplicationEventPublisher.html)\n\n### \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u306a\u3044\u5b9f\u88c5\u65b9\u6cd5\n\n```java:Blog\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class Blog implements Serializable {\n\n  private static final long serialVersionUID = -5011335950988850583L;\n\n  private Long id;\n  private String title;\n  private Date published;\n\n  public Blog(Long id, String title) {\n    this.id = id;\n    this.title = title;\n    this.published = null;\n  }\n\n  ... getter/setter\u7701\u7565 ...\n\n  @Override\n  public String toString() {\n    return \"Blog [id=\" + id + \", title=\" + title + \", published=\" + published\n        + \"]\";\n  }\n\n}\n```\n\n**\u30a4\u30d9\u30f3\u30c8\u30af\u30e9\u30b9**\n\n```java:BlogEvent\nimport org.springframework.context.ApplicationEvent;\n\npublic class BlogEvent extends ApplicationEvent {\n\n  private static final long serialVersionUID = 6029200135885343599L;\n\n  private Blog blog;\n\n  public BlogEvent(Object source, Blog blog) {\n    super(source);\n    this.blog = blog;\n  }\n\n  public Blog getBlog() {\n    return blog;\n  }\n\n  public void setBlog(Blog blog) {\n    this.blog = blog;\n  }\n\n}\n```\n\n**\u30ea\u30b9\u30ca\u30fc\u30af\u30e9\u30b9**\n\n```java:BlogListener\nimport java.util.Date;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.context.ApplicationListener;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class BlogListener implements ApplicationListener<BlogEvent> {\n  final static Logger logger = LoggerFactory.getLogger(BlogListener.class);\n\n  @Override\n  public void onApplicationEvent(BlogEvent event) {\n    logger.info(\"Blog Event is occured!!\");\n    logger.info(event.getBlog().toString());\n    event.getBlog().setPublished(new Date());\n  }\n\n}\n```\n\n**ApplicationEventPublisherAware**\n\n```java:BlogService\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.context.ApplicationEventPublisher;\nimport org.springframework.context.ApplicationEventPublisherAware;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class BlogService implements ApplicationEventPublisherAware {\n  final static Logger logger = LoggerFactory.getLogger(BlogService.class);\n\n  private ApplicationEventPublisher publisher;\n\n  @Override\n  public void setApplicationEventPublisher(ApplicationEventPublisher publisher) {\n    this.publisher = publisher;\n  }\n\n  public void createBlog(Blog blog) {\n    logger.info(\"Publishing Blog Create Event\");\n    BlogEvent event = new BlogEvent(this, blog);\n    publisher.publishEvent(event);\n  }\n\n}\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d\u30b3\u30fc\u30c9**\n\n```java:\u78ba\u8a8d\n\n@Autowired\nBlogService blogService;\n\npublic void confirm() {\n\n  Blog blog = new Blog(1L, \"\u6d5c\u7701\u3060\u3089\u3051\u306e\u91ce\u7403\u5bfe\u6c7a\u3092\u89b3\u8cde\u3059\u308b\");\n  logger.info(blog.toString());\n  // \u21d2 Blog [id=1, title=\u6d5c\u7701\u3060\u3089\u3051\u306e\u91ce\u7403\u5bfe\u6c7a\u3092\u89b3\u8cde\u3059\u308b, published=null]\n\n  blogService.createBlog(blog);\n  logger.info(blog.toString());\n  // \u21d2 Blog [id=1, title=\u6d5c\u7701\u3060\u3089\u3051\u306e\u91ce\u7403\u5bfe\u6c7a\u3092\u89b3\u8cde\u3059\u308b, published=Sun Oct 04 20:25:33 JST 2015]\n\n}\n```\n\n\n### EventListener\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u305f\u5b9f\u88c5\n\n```java:Product\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class Product implements Serializable {\n\n  private static final long serialVersionUID = 886343041195980987L;\n\n  private Long id;\n  private String productName;\n\n  private Date createdAt;\n  private Date completedAt;\n\n  public Product(Long id, String productName) {\n    this.id = id;\n    this.productName = productName;\n    this.createdAt = null;\n    this.completedAt = null;\n  }\n\n  ... getter/setter\u7701\u7565 ...\n\n  @Override\n  public String toString() {\n    return \"Product [id=\" + id + \", productName=\" + productName\n        + \", createdAt=\" + createdAt + \", completedAt=\" + completedAt + \"]\";\n  }\n\n}\n```\n\n**\u30a4\u30d9\u30f3\u30c8\u30af\u30e9\u30b9**\n\nApplicationEvent\u3092\u7d99\u627f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\n```java:ProductEvent\npublic class ProductEvent {\n\n  private Product product;\n  private String status;\n\n  public ProductEvent(Product product) {\n    this.product = product;\n    this.status = \"CREATE\";\n  }\n\n  public Product getProduct() {\n    return product;\n  }\n  public void setProduct(Product product) {\n    this.product = product;\n  }\n  public String getStatus() {\n    return status;\n  }\n  public void setStatus(String status) {\n    this.status = status;\n  }\n\n}\n```\n\n**\u30ea\u30b9\u30ca\u30fc\u30af\u30e9\u30b9**\n\nApplicationListener\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u4ee3\u308f\u308a\u306b\u30e1\u30bd\u30c3\u30c9\u306bEventListener\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u3066\u30a4\u30d9\u30f3\u30c8\u30ea\u30b9\u30ca\u30fc\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n```java:ProductListener\nimport java.util.Date;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.context.event.EventListener;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class ProductListener {\n  final static Logger logger = LoggerFactory.getLogger(ProductListener.class);\n\n  @EventListener(condition = \"#event.status == 'CREATE'\")\n  public void createEvent(ProductEvent event) {\n    logger.info(\"Product Create Event is occured!!\");\n\n    try {\n      TimeUnit.SECONDS.sleep(3L);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n\n    event.getProduct().setCreatedAt(new Date());\n   }\n\n  @EventListener(condition = \"#event.status == 'COMPLETE'\")\n  public void closeEvent(ProductEvent event) {\n    logger.info(\"Product Complete Event is occured!!\");\n\n    try {\n      TimeUnit.SECONDS.sleep(3L);\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n\n    event.getProduct().setCompletedAt(new Date());\n  }\n\n}\n```\n\n**\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3059\u308b\u30af\u30e9\u30b9**\n\nApplicationEventPublisherAware\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\n```java:ProductService\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.ApplicationEventPublisher;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ProductService {\n  final static Logger logger = LoggerFactory.getLogger(ProductService.class);\n\n  @Autowired\n  ApplicationEventPublisher publisher;\n\n  public void createProduct(Product product) {\n    logger.info(\"Publishing Product Create Event\");\n    ProductEvent event = new ProductEvent(product);\n    publisher.publishEvent(event);\n  }\n\n  public void completeProduct(Product product) {\n    logger.info(\"Publishing Product Complete Event\");\n    ProductEvent event = new ProductEvent(product);\n    event.setStatus(\"COMPLETE\");\n    publisher.publishEvent(event);\n  }\n\n}\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d\u30b3\u30fc\u30c9**\n\n```java:\u78ba\u8a8d\n\n@Autowired\nProductService productService;\n\npublic void confirm() {\n\n  Product product = new Product(1L, \"Mazda RX-7\");\n  logger.info(product.toString());\n  // \u21d2 Product [id=1, productName=Mazda RX-7, createdAt=null, completedAt=null]\n\n  productService.createProduct(product);\n  logger.info(product.toString());\n  // \u21d2 Product [id=1, productName=Mazda RX-7, createdAt=Sun Oct 04 20:25:36 JST 2015, completedAt=null]\n\n  try {\n    TimeUnit.SECONDS.sleep(3L);\n  } catch (InterruptedException e) {\n    e.printStackTrace();\n  }\n\n  productService.completeProduct(product);\n  logger.info(product.toString());\n  // \u21d2 Product [id=1, productName=Mazda RX-7, createdAt=Sun Oct 04 20:25:36 JST 2015, completedAt=Sun Oct 04 20:25:42\n}\n```\n\n\n## 4. ResourceLoader\u3067\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\u3059\u308b\n\n\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\u306bApplicationContext\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u4f7f\u7528\u3067\u304d\u306a\u3044\u3088\u3046\u306a\u5834\u5408\u3001\u4ee3\u308f\u308a\u306bResourceLoader\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n* [Interface ResourceLoader] (http://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/core/io/ResourceLoader.html)\n\n**\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb**\n\n\u52d5\u4f5c\u78ba\u8a8d\u3067\u4f7f\u7528\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092/src/main/resources\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n`/src/main/resources/resource1.txt`\n\n```text:resource1.txt\n123\n456\n789\n```\n\n`/src/main/resources/resource2.txt`\n\n```text:resource2.txt\nABC\nDEF\nGHI\n```\n\n`/src/main/resources/resource3.txt`\n\n```text:resource3.txt\n\u3042\u3044\u3046\u3048\u304a\n\u304b\u304d\u304f\u3051\u3053\n\u3055\u3057\u3059\u305b\u305d\n```\n\n**\u52d5\u4f5c\u78ba\u8a8d\u30b3\u30fc\u30c9**\n\n1. ApplicationContext\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\n2. ResourceLoader\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\n3. DefaultResourceLoader\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\n\n```java:\u78ba\u8a8d\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport java.io.IOException;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.core.io.DefaultResourceLoader;\nimport org.springframework.core.io.Resource;\nimport org.springframework.core.io.ResourceLoader;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ResourceLoaderService {\n  final static Logger logger = LoggerFactory.getLogger(ResourceLoaderService.class);\n\n  @Autowired\n  ResourceLoader resourceLoader;\n\n  @Autowired\n  ApplicationContext context;\n\n  // (1)\n  public void execute1() {\n    try {\n      Resource resource = context.getResource(\"classpath:resource1.txt\");\n      File file = resource.getFile();\n      try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n        br.lines().forEach(a -> {\n          logger.info(a);\n          // \u21d2 123\n          // \u21d2 456\n          // \u21d2 789\n        });\n      }\n    } catch (IOException | NullPointerException e) {\n      logger.error(e.getMessage());\n    }\n  }\n\n  // (2)\n  public void execute2() {\n    try {\n      Resource resource = resourceLoader.getResource(\"classpath:resource2.txt\");\n      File file = resource.getFile();\n      try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n        br.lines().forEach(a -> {\n          logger.info(a);\n          // \u21d2 ABC\n          // \u21d2 DEF\n          // \u21d2 GHI\n        });\n      }\n    } catch (IOException | NullPointerException e) {\n      logger.error(e.getMessage());\n    }\n  }\n\n  // (3)\n  public void execute3() {\n    try {\n      ResourceLoader loader = new DefaultResourceLoader();\n      Resource resource = loader.getResource(\"classpath:resource3.txt\");\n      File file = resource.getFile();\n      try (BufferedReader br = new BufferedReader(new FileReader(file))) {\n        br.lines().forEach(a -> {\n          logger.info(a);\n          // \u21d2 \u3042\u3044\u3046\u3048\u304a\n          // \u21d2 \u304b\u304d\u304f\u3051\u3053\n          // \u21d2 \u3055\u3057\u3059\u305b\u305d\n        });\n      }\n    } catch (IOException | NullPointerException e) {\n      logger.error(e.getMessage());\n    }\n  }\n\n}\n```\n\n\n## 5. MessageSource\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u3092\u53d6\u5f97\u3059\u308b\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u306e\u8a2d\u5b9a\u306f`spring.messages.*`\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u884c\u3044\u307e\u3059\u3002\n\n```yaml\n# INTERNATIONALIZATION (MessageSourceAutoConfiguration)\nspring:\n  messages:\n    basename: messages,views\n    cache-seconds: -1\n    encoding: utf-8\n```\n\n* basename\n * \u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u30d9\u30fc\u30b9\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u8907\u6570\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f\u30ab\u30f3\u30de\u3067\u533a\u5207\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306fmessages\u3067\u3059\u3002\n* cache-seconds\n * \u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u79d2\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306f-1\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u671f\u9650\u306f\u7121\u671f\u9650\u3067\u3059\u3002 0\u3092\u6307\u5b9a\u3059\u308b\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u307e\u305b\u3093\u3002\n* encoding\n * \u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306futf-8\u3067\u3059\u3002\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u30d9\u30fc\u30b9\u540d\u306b\u4f8b\u3048\u3070`_ja`\u3084`_en`\u306e\u69d8\u306b\u30ed\u30b1\u30fc\u30eb\u3092\u4ed8\u52a0\u3059\u308b\u3053\u3068\u3067\u56fd\u969b\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n1\u3064\u306e\u8a00\u8a9e\u3060\u3051\u5bfe\u5fdc\u3059\u308c\u3070\u3088\u3044\u5834\u5408\u306f\u30ed\u30b1\u30fc\u30eb\u306f\u4e0d\u8981\u3067\u3059\u3002\n\n```text:messages_ja.properties\nmessage.text1 = abc\nmessage.text2 = 123\nmessage.text3 = hello {0}.\n```\n\n```text:views_ja.properties\nlayout.header = \\u30D8\\u30C3\\u30C0\\u30FC\nlayout.footer = Copyright {0} - {1}.\n```\n\n### controller\n\n\u4f8b\u3048\u3070Controler\u30af\u30e9\u30b9\u5185\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30bd\u30fc\u30b9\u3092\u53c2\u7167\u3057\u305f\u3044\u5834\u5408\u306f`MessageSource`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```java\n@Autowired\nMessageSource messageSource;\n```\n\n```java\n@RequestMapping(value = \"/\", method = RequestMethod.GET)\npublic String index(Model model, Locale locale) {\n\n  String text1 = messageSource.getMessage(\"message.text1\", null, locale);\n  String text2 = messageSource.getMessage(\"message.text2\", null, locale);\n  String text3 = messageSource.getMessage(\"message.text3\", new Object[]{\"world!\"}, locale);\n  logger.info(\"message: text1:{} text2:{} text3:{}\", text1, text2, text3);\n  // \u21d2 message: text1:abc text2:123 text3:hello world!.\n\n  return \"Index/index\";\n}\n```\n\n### thymeleaf\n\nthymeleaf\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u30ea\u30bd\u30fc\u30b9\u3092\u53c2\u7167\u3059\u308b\u306b\u306f`#{\u30ea\u30bd\u30fc\u30b9\u30ad\u30fc}`\u3068\u3044\u3046\u8a18\u6cd5\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```html\n<h1 th:text=\"#{layout.header}\">header</h1>\n<h3 th:text=\"#{layout.footer('2014','2015')}\">footer</h3>\n```\n\n\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\n```html\n<h1>\u30d8\u30c3\u30c0\u30fc</h1>\n<h3>Copyright 2014 - 2015.</h3>\n```\n\n\n## 6. SPRING INITIALIZR\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u96db\u5f62\u3092\u751f\u6210\u3059\u308b\n\n[SPRING INITIALIZR] (https://start.spring.io/)\u3067pom.xml\u3084build.gradle\u306e\u96db\u5f62\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30bf\u30a4\u30d7(Maven or Gradle)\u3068Spring-Boot\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3001Project Metadata\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\u6b21\u306b\"Switch to the full version.\"\u3068\u3044\u3046\u30ea\u30f3\u30af\u30c6\u30ad\u30b9\u30c8\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n![i01.png](https://qiita-image-store.s3.amazonaws.com/0/22772/a5b7e194-3d23-6eab-96dd-7d3cfe3788fc.png)\n\n\n\u5fc5\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u3066\u3001\u6700\u5f8c\u306b\"Generate Project\"\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u306ezip\u30d5\u30a1\u30a4\u30eb\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u59cb\u307e\u308a\u307e\u3059\u3002\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9: tips-example.zip\n\n![i02.png](https://qiita-image-store.s3.amazonaws.com/0/22772/8105b756-f8c5-1957-6408-4547d3bc4405.png)\n\n\nzip\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u69cb\u6210\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\n\n```text:tree\ntips-example\n  \u251c\u2500.mvn\n  \u2502  \u2514\u2500wrapper\n  \u2514\u2500src\n      \u251c\u2500main\n      \u2502  \u251c\u2500java\n      \u2502  \u2502  \u2514\u2500com\n      \u2502  \u2502      \u2514\u2500example\n      \u2502  \u2502          \u2514\u2500sbtip\n      \u2502  \u2514\u2500resources\n      \u2502      \u251c\u2500static\n      \u2502      \u2514\u2500templates\n      \u2514\u2500test\n          \u2514\u2500java\n              \u2514\u2500com\n                  \u2514\u2500example\n                      \u2514\u2500sbtip\n```\n\n\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092eclipse\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u306b\u306f\u5c55\u958b\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3078\u79fb\u52d5\u3057\u3066\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```bat\n> mvn eclipse:eclipse\n```\n\n## 7. Shutdown Hook\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7d42\u4e86\u6642\u306b\u4efb\u610f\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f`PreDestro`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```java\n@PreDestroy\npublic static void exit() {\n  System.out.println(\"appliation exit\");\n}\n```\n\n## 8. \u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u306b\u4ed6\u306e\u30ad\u30fc\u306e\u5024\u3092\u8a2d\u5b9a\u3059\u308b\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u306e\u5b9a\u7fa9\u306bspel\u5f0f\u304c\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\n```text\nmyapp:\n  configA:\n    var1: ABC\n    var2: DEF\n  configB:\n    var1: 123\n    var2: ${myapp.configA.var1}\n```\n\nThymeleaf\u3067\u76f4\u63a5\u51fa\u529b\u3057\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```html:template\n<div class=\"row\">\n  <p th:text=\"${@environment.getProperty('myapp.configA.var1')}\"></p>\n  <p th:text=\"${@environment.getProperty('myapp.configA.var2')}\"></p>\n  <p th:text=\"${@environment.getProperty('myapp.configB.var1')}\"></p>\n  <p th:text=\"${@environment.getProperty('myapp.configB.var2')}\"></p>\n</div>\n```\n\n```html:render\n<div class=\"row\">\n  <p>ABC</p>\n  <p>DEF</p>\n  <p>123</p>\n  <p>ABC</p>\n</div>\n```\n\n## 9. Spring Boot\u3067Handler\u30e1\u30bd\u30c3\u30c9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u4efb\u610f\u306e\u30af\u30e9\u30b9\u3092\u66f8\u304d\u3001\u5f15\u6570\u306b\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u308b\n\n\u5225\u8a18\u4e8b\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://qiita.com/rubytomato@github/items/37d58c2748c9f0a8566a\n\n## 10. Spring Boot\u3067\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5148\u306eURL\u3092\u7d44\u307f\u7acb\u3066\u308b\n\n\u5225\u8a18\u4e8b\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://qiita.com/rubytomato@github/items/8d132dec042f695e50f6\n\n## 11. spring boot devtools\u306eAutomatic restart\u306b\u3064\u3044\u3066\n\n\u5225\u8a18\u4e8b\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://qiita.com/rubytomato@github/items/6f5dc142f32d9e9c1e2a\n", "tags": ["spring-boot1.3.0", "spring", "Java1.8"]}