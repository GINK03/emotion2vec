{"tags": ["yhpg", "\u3069\u3046\u66f8\u304f"], "context": " More than 1 year has passed since last update.\u7b2c2\u56de \u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f( http://atnd.org/events/31590 )\n\u53c2\u52a0\u3057\u305f\u969b\u306b\u4f1a\u5834\u3067\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u554f\u984c\u306eURL( http://nabetani.sakura.ne.jp/hena/ord3ynode/ )\n\u518d\u5e30\u306b\u3057\u305f\u307b\u3046\u304c\u826f\u304b\u3063\u305f\u6c17\u304c\u3057\u307e\u3059\u3002\n\nyroad.rb\n#!ruby\n\nMAP =\n{\n  \"A\" => [\"D\", \"C\", \"B\"],\n  \"B\" => [\"A\", \"C\", \"E\"],\n  \"C\" => [\"A\", \"F\", \"B\"],\n  \"D\" => [\"E\", \"F\", \"A\"],\n  \"E\" => [\"D\", \"B\", \"F\"],\n  \"F\" => [\"D\", \"E\", \"C\"],\n}\n\ndef get_position( m, index )\n  if index < 0\n    return m[m.length-1]\n  elsif index < m.length\n    return m[index]\n  else\n    return m[0]\n  end\nend\n\ndef search_index( m, target )\n  m.each_with_index { |pos, i|\n    if pos == target\n      return i\n    end\n  }\nend\n\ndef move_once( p, dir )\n  if dir == \"b\"\n    return [p[1], p[0], p[2]+p[0]]\n  end\n  m = MAP[p[1]]\n  index = search_index(m, p[0])\n  if dir == \"r\"\n    dest = get_position(m, index-1)\n    return [p[1], dest, p[2]+dest]\n  elsif dir == \"l\"\n    dest = get_position(m, index+1)\n    return [p[1], dest, p[2]+dest]\n  end\nend\n\ndef move( input )\n  (input.split(//).inject([\"B\", \"A\", \"A\"]) { |p, dir|\n     move_once( p, dir )\n   })[2]\nend\n\nDATA.each { |input|\n  inarray = input.chomp.split(/,/)\n  ans = move(inarray[0])\n  if ans == inarray[1]\n    puts ans\n  else\n    puts \"*ERROR*\"\n    puts \"*#{ans}\"\n    puts \"*#{inarray[1]}\"\n  end\n}\n\n__END__\nrrrrbllrlrbrbrr,ACBACABCFDEDADFC\n\n\n\u7b2c2\u56de \u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f( http://atnd.org/events/31590 )\n\u53c2\u52a0\u3057\u305f\u969b\u306b\u4f1a\u5834\u3067\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n\u554f\u984c\u306eURL( http://nabetani.sakura.ne.jp/hena/ord3ynode/ )\n\n\u518d\u5e30\u306b\u3057\u305f\u307b\u3046\u304c\u826f\u304b\u3063\u305f\u6c17\u304c\u3057\u307e\u3059\u3002\n\n```yroad.rb\n#!ruby\n\nMAP =\n{\n  \"A\" => [\"D\", \"C\", \"B\"],\n  \"B\" => [\"A\", \"C\", \"E\"],\n  \"C\" => [\"A\", \"F\", \"B\"],\n  \"D\" => [\"E\", \"F\", \"A\"],\n  \"E\" => [\"D\", \"B\", \"F\"],\n  \"F\" => [\"D\", \"E\", \"C\"],\n}\n\ndef get_position( m, index )\n  if index < 0\n    return m[m.length-1]\n  elsif index < m.length\n    return m[index]\n  else\n    return m[0]\n  end\nend\n\ndef search_index( m, target )\n  m.each_with_index { |pos, i|\n    if pos == target\n      return i\n    end\n  }\nend\n\ndef move_once( p, dir )\n  if dir == \"b\"\n    return [p[1], p[0], p[2]+p[0]]\n  end\n  m = MAP[p[1]]\n  index = search_index(m, p[0])\n  if dir == \"r\"\n    dest = get_position(m, index-1)\n    return [p[1], dest, p[2]+dest]\n  elsif dir == \"l\"\n    dest = get_position(m, index+1)\n    return [p[1], dest, p[2]+dest]\n  end\nend\n\ndef move( input )\n  (input.split(//).inject([\"B\", \"A\", \"A\"]) { |p, dir|\n     move_once( p, dir )\n   })[2]\nend\n\nDATA.each { |input|\n  inarray = input.chomp.split(/,/)\n  ans = move(inarray[0])\n  if ans == inarray[1]\n    puts ans\n  else\n    puts \"*ERROR*\"\n    puts \"*#{ans}\"\n    puts \"*#{inarray[1]}\"\n  end\n}\n\n__END__\nrrrrbllrlrbrbrr,ACBACABCFDEDADFC\n"}