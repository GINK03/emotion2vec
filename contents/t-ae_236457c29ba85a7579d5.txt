{"context": "\u6027\u61f2\u308a\u3082\u306a\u304f\u524d\u56de\u306e\u8a18\u4e8b\u306e\u8ffd\u52a0\u5b9f\u9a13\u3092\u7d9a\u3051\u3066\u3044\u307e\u3059\u3002\nDCGAN\u3092\u66f8\u304d\u305f\u304f\u306a\u3063\u305f\u306e\u3067\u66f8\u3044\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u3069\u3046\u3067\u3082\u3044\u3044\u77e5\u8b58\u304c\u6e9c\u307e\u3063\u305f\u306e\u3067\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\u5185\u5bb9\u306f\u4e3b\u306b\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\nKeras\u306eTips\u7684\u306a\u306e\nDCGAN\u3044\u3058\u308b\u904e\u7a0b\n\nDCGAN\u81ea\u4f53\u306e\u8aac\u660e\u306f\u4ed6\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u79c1\u306f\u4e3b\u306b\u3053\u306e\u3042\u305f\u308a\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nChainer\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u30a4\u30e9\u30b9\u30c8\u3092\u63cf\u304b\u305b\u308b\nChainer\u3067\u9854\u30a4\u30e9\u30b9\u30c8\u306e\u81ea\u52d5\u751f\u6210\nkeras-dcgan\n\nKeras\u95a2\u9023\nKeras\u306e\u3053\u3068\u3057\u304b\u66f8\u3044\u3066\u306a\u3044\u306e\u3067\u8208\u5473\u306a\u3044\u65b9\u306f\u8aad\u307f\u98db\u3070\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nKeras\u306etrainable\nKeras DCGAN \u3067\u691c\u7d22\u3059\u308b\u3068\u4e00\u756a\u4e0a\u306bkeras-dcgan\u304c\u3067\u3066\u304d\u307e\u3059\u3002\u53c2\u8003\u306b\u3057\u3088\u3046\u3068\u8997\u3044\u3066\u307f\u308b\u3068\u8a13\u7df4\u4e2d\u306btrainable\u306e\u5024\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u306b\u3088\u3063\u3066Generator\u5b66\u7fd2\u6642\u306bDiscriminator\u306e\u91cd\u307f\u3092\u66f4\u65b0\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\nKeras\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8aad\u3093\u3060\u3053\u3068\u306e\u3042\u308b\u65b9\u306ftrainable=False\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u5c64\u306e\u91cd\u307f\u306e\u66f4\u65b0\u3092\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u3067\u304d\u308b\u3053\u3068\u3092\u3054\u5b58\u77e5\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u4e8c\u3064\u5f15\u3063\u304b\u304b\u308b\u3068\u3053\u308d\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u307e\u305a\u7b2c\u4e00\u306b\u3001Model\u306etrainable\u3092\u8a2d\u5b9a\u3057\u3066\u3082\u305d\u306e\u4e2d\u306e\u5c64\u306ftrainable=True\u306a\u307e\u307e\u3067\u3001\u91cd\u307f\u3092\u66f4\u65b0\u3057\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3053\u308c\u306f\u524d\u56de\u306e\u8a18\u4e8b\u3067\u3082\u8efd\u304f\u89e6\u308c\u307e\u3057\u305f\u3002\n\u7b2c\u4e8c\u306b\u3001Keras Documentation\u306eFAQ\u306b\u91cd\u307f\u66f4\u65b0\u505c\u6b62\u306b\u3064\u3044\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u52a0\u3048\u3066\uff0c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u5f8c\u306b\u5c64\u306etrainableproperty\u306bTrue\u304bFalse \u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u306b\u3088\u308b\u5f71\u97ff\u3068\u3057\u3066\u306f\uff0ctrainableproperty\u306e\u5909\u66f4\u5f8c\u306e\u30e2\u30c7\u30eb\u3067compile()\u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306b\u305d\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059:\n\nkeras-dcgan\u3067\u306ftrainable\u5909\u66f4\u5f8c\u306bcompile\u3092\u884c\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u5b66\u7fd2\u306b\u53cd\u6620\u3055\u308c\u305a\u3001\u9593\u9055\u3063\u305f\u9032\u884c\u306b\u306a\u308b\u6c17\u304c\u3057\u307e\u3059(\u4f8b\u3067\u306f\u3051\u3063\u3053\u3046\u307e\u3068\u3082\u306a\u753b\u50cf\u304c\u51fa\u529b\u3055\u308c\u3066\u308b\u3057\u81ea\u5206\u3067\u306f\u8a66\u3057\u3066\u306a\u3044\u306e\u3067\u3069\u3046\u306a\u3063\u3066\u308b\u306e\u304b\u306f\u8b0e\u3067\u3059)\u3002\n\n\u3069\u3046\u3059\u308b\u304b\n\u3067\u306f\u4ea4\u4e92\u306e\u30b9\u30c6\u30c3\u30d7\u3054\u3068\u306b\u6bce\u56de\u5168\u5c64\u306etrainable\u3092\u8a2d\u5b9a\u3057\u3066compile\u3057\u3066\u301c\u3092\u7e70\u308a\u8fd4\u3059\u306e\u304b\u3001\u3068\u601d\u3046\u3068\u3046\u3093\u3056\u308a\u3059\u308b\u306e\u3067\u3044\u308d\u3044\u308d\u8a66\u3057\u3066\u30d9\u30b9\u30c8\u3063\u307d\u3044\u65b9\u6cd5\u3092\u898b\u3064\u3051\u307e\u3057\u305f\u3002\n\u5148\u8ff0\u306e\u3068\u304a\u308aKeras\u306ftrainable\u66f4\u65b0\u5f8c\u306bcompile\u3057\u306a\u3044\u3068\u53cd\u6620\u3055\u308c\u306a\u3044\u3068\u3044\u3046\u4ed5\u69d8\u306a\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u3092\u3046\u307e\u304f\u4f7f\u3048\u306a\u3044\u304b(\u3068\u3044\u3046\u304b\u3046\u307e\u304f\u8a2d\u8a08\u3055\u308c\u3066\u3044\u306a\u3044\u304b)\u3068\u8003\u3048\u307e\u3057\u305f\u3002\u5b9f\u9a13\u3057\u305f\u30b3\u30fc\u30c9\u3092\u4e00\u90e8\u629c\u7c8b\u3057\u307e\u3059\u3002\u5168\u6587\u306f\u3053\u3061\u3089\nmodelA = Sequential([\n    Dense(10, input_dim=100, activation='sigmoid')\n])\n\nmodelB = Sequential([\n    Dense(100, input_dim=10, activation='sigmoid')\n])\n\nmodelB.compile(optimizer='adam', loss='binary_crossentropy')\n\nset_trainable(modelB, False)\nconnected = Sequential([modelA, modelB])\nconnected.compile(optimizer='adam', loss='binary_crossentropy')\n\nDCGAN\u3092\u6975\u9650\u307e\u3067\u5207\u308a\u8a70\u3081\u305f\u3088\u3046\u306a\u30e2\u30c7\u30eb\u3067\u3059\u3002\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u76f4\u5f8c\u306f\u3059\u3079\u3066trainable\u306a\u72b6\u614b\u3067\u3059\u3002\u3053\u306e\u72b6\u614b\u3067modelB\u3092compile\u3059\u308b\u3053\u3068\u3067modelB.fit\u3067\u91cd\u307f\u66f4\u65b0\u304c\u3067\u304d\u308b\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\n\u6b21\u306bset_trainable\u3067modelB\u306e\u5168\u5c64\u306btrainable=False\u3092\u8a2d\u5b9a\u3057\u3001modelA\u3068modelB\u3092\u9023\u7d50\u3057\u305f\u30e2\u30c7\u30ebconnected\u3092compile\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u72b6\u614b\u3067modelB, connnected\u3092fit\u3057\u305f\u3089modelB\u306e\u91cd\u307f\u306f\u3069\u3046\u306a\u308b\u3067\u3057\u3087\u3046\u304b\u3002\nw0 = np.copy(modelB.layers[0].get_weights()[0])\n\nconnected.fit(X1, X1)\nw1 = np.copy(modelB.layers[0].get_weights()[0])\nprint('Freezed in \"connected\":', np.array_equal(w0, w1))\n# Freezed in \"connected\": True\n\nmodelB.fit(X2, X1)\nw2 = np.copy(modelB.layers[0].get_weights()[0])\nprint('Freezed in \"modelB\":', np.array_equal(w1, w2))\n# Freezed in \"modelB\": False\n\nconnected.fit(X1, X1)\nw3 = np.copy(modelB.layers[0].get_weights()[0])\nprint('Freezed in \"connected\":', np.array_equal(w2, w3))\n# Freezed in \"connected\": True\n\n\u9a5a\u304f\u3079\u304d\u3053\u3068\u306b(?)\u4ee5\u4e0a\u306e\u30b3\u30fc\u30c9\u306e\u51fa\u529b\u306f\u30b3\u30e1\u30f3\u30c8\u306b\u3042\u308b\u3068\u304a\u308a\u306b\u306a\u308a\u3001modelB\u3067\u306f\u5b66\u7fd2\u53ef\u3001connected\u3067\u306f\u5b66\u7fd2\u4e0d\u53ef\u3068\u3001compile\u6642\u306e\u8a2d\u5b9a\u304c\u3061\u3083\u3093\u3068\u751f\u304d\u3066\u3044\u307e\u3059\u3002\n\u3059\u306a\u308f\u3061\u6700\u521d\u306b\u6b63\u3057\u304f\u8a2d\u5b9a\u3059\u308c\u3070\u4ee5\u964d\u5909\u66f4\u3059\u308b\u5fc5\u8981\u306f\u5168\u304f\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u3053\u308c\u306a\u3089\u5b66\u7fd2\u90e8\u5206\u3067\u6bce\u56de\u5207\u308a\u66ff\u3048\u308b\u306a\u3093\u3066\u3053\u3068\u3092\u3057\u306a\u304f\u3066\u6e08\u3093\u3067\u7dba\u9e97\u306b\u3067\u304d\u307e\u3059\u3002\n(\u4f59\u8ac7\u3067\u3059\u304ckeras-dcgan\u306f\u4e0d\u8981\u306acompile\u304c\u591a\u304b\u3063\u305f\u308a\u3057\u3066\u3044\u308d\u3044\u308d\u602a\u3057\u305d\u3046\u3067\u3059\u3002)\n\nKeras\u306eBatchNormalization\n\u524d\u9805\u306e\u554f\u984c\u3092\u3046\u307e\u304f\u89e3\u6c7a\u3067\u304d\u305f\u306e\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u51fa\u3057\u307e\u3057\u305f\u3002\u4f55\u3082\u8003\u3048\u305a\u306b\u66f8\u3044\u305f\u306e\u304c\u3060\u3044\u305f\u3044\u3053\u3093\u306a\u611f\u3058\u306e\u3082\u306e\u3067\u3059\u3002\ndiscriminator = Sequential([\n    Convolution2D(64, 3, 3, border_mode='same', subsample=(2,2), input_shape=[32, 32, 1]),\n    LeakyReLU(),\n    Convolution2D(128, 3, 3, border_mode='same', subsample=(2,2)),\n    BatchNormalization(),\n    LeakyReLU(),\n    Convolution2D(256, 3, 3, border_mode='same', subsample=(2,2)),\n    BatchNormalization(),\n    LeakyReLU(),\n    Flatten(),\n    Dense(2048),\n    BatchNormalization(),\n    LeakyReLU(),\n    Dense(1, activation='sigmoid')\n], name=\"discriminator\")\n\ngenerator = Sequential([\n# \u7701\u7565\n])\n\n# setup models\n\nprint(\"setup discriminator\")\nopt_d = Adam(lr=1e-5, beta_1=0.1)\ndiscriminator.compile(optimizer=opt_d, \n                      loss='binary_crossentropy', \n                      metrics=['accuracy'])\n\nprint(\"setup dcgan\")\nset_trainable(discriminator, False)\ndcgan = Sequential([generator, discriminator])\nopt_g = Adam(lr=2e-4, beta_1=0.5)\ndcgan.compile(optimizer=opt_g, \n              loss='binary_crossentropy', \n              metrics=['accuracy'])\n\n\u3053\u3044\u3064\u3092\u5b66\u7fd2\u3055\u305b\u3088\u3046\u3068\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3057\u305f\u3002\nException: You are attempting to share a same `BatchNormalization` layer across different data flows. This is not possible. You should use `mode=2` in `BatchNormalization`, which has a similar behavior but is shareable (see docs for a description of the behavior).\n\nBatchNormalization\u306bmode=2\u3092\u8a2d\u5b9a\u3057\u308d\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306fShared Layers\u306e\u9805\u306e\u4f8b\u306e\u3088\u3046\u306b\u540c\u3058\u5c64\u3092\u4ed6\u3067\u4f7f\u3044\u56de\u305d\u3046\u3068\u3044\u3046\u6642\u306b\u3001BatchNormalization\u3092\u5171\u6709\u3059\u308b\u3068\u3001\u4f8b\u3048\u3070\u4e8c\u3064\u306e\u5165\u529b\u3067\u5206\u5e03\u304c\u9055\u3046\u6642\u306a\u3069\u306b\u4e0d\u90fd\u5408\u304c\u8d77\u3053\u308b\u304b\u3082\u3088\u3001\u3063\u3066\u3053\u3068\u3092\u8a00\u3063\u3066\u3044\u308b\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u4e0a\u30b3\u30fc\u30c9\u3067\u306fDiscriminator\u5358\u4f53\u3068Generator+Discriminator\u3092compile\u3057\u3066\u304a\u308a\u3001\u5c64\u304c\u5171\u6709\u3055\u308c\u3066\u308b\u3068\u307f\u306a\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002DCGAN\u3067\u306fGenerator+Discriminator\u306e\u65b9\u3067\u306ftrainable=False\u306b\u306a\u3063\u3066\u3044\u3066\u5b66\u7fd2\u306b\u95a2\u4fc2\u306a\u3044\u306e\u3067\u3001mode=2\u3092\u6307\u5b9a\u3057\u3061\u3083\u3063\u3066\u5927\u4e08\u592b\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u8003\u3048\u308c\u3070\u5206\u304b\u308b\u3053\u3068\u3060\u3051\u308c\u3069\u3082BatchNormalization\u306e\u30da\u30fc\u30b8\u3067\u89e6\u308c\u3066\u307b\u3057\u3044\u2026\u2026\u3002\n\nKeras+DCGAN\u3067\u306etrain step\n\u30e2\u30c7\u30eb\u304c\u3067\u304d\u305f\u306e\u3067\u9069\u5f53\u306b\u5b66\u7fd2\u3055\u305b\u59cb\u3081\u307e\u3057\u305f\u3002\nkeras-dcgan\u3092\u53c2\u8003\u306b\u4e71\u6570\u306e\u30d0\u30c3\u30c1\u3067Generator\u3092\u3001\u540c\u3058\u4e71\u6570\u304b\u3089\u751f\u6210\u3057\u305f\u753b\u50cf\u3068\u6b63\u89e3\u753b\u50cf\u3092\u6df7\u305c\u305f\u30d0\u30c3\u30c1\u3067Discriminator\u3092\u4ea4\u4e92\u306b\u5b66\u7fd2\u3055\u305b\u3066\u3044\u304f\u3068\u8b0e\u306e\u73fe\u8c61\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u5177\u4f53\u7684\u306b\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3067\u89e6\u308c\u3089\u308c\u3066\u3044\u308b\u5185\u5bb9\u3068\u540c\u3058\u3067\u3059\u3002\n\nDiscriminator\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u66f4\u65b0\u306b\u306f\uff0c\u5b9f\u753b\u50cf\u306e\u30d0\u30c3\u30c1\u3068\u507d\u753b\u50cf\u306e\u30d0\u30c3\u30c12\u3064\u30921\u3064\u306e\u30d0\u30c3\u30c1\u306b\u307e\u3068\u3081\u3066\u66f4\u65b0\u3059\u308b\u65b9\u6cd5\u3068\uff0c\u660e\u793a\u7684\u306b\u640d\u5931\u95a2\u6570\u30922\u3064\u306b\u5206\u3051\u3066\u66f4\u65b0\u3059\u308b2\u901a\u308a\u306e\u65b9\u6cd5\u304c\u3042\u308b\uff0eBatch Normalization layer\u304c\u7121\u3044\u5834\u5408\u3060\u3068\u6700\u7d42\u7684\u306b\u5f97\u3089\u308c\u308b\u52fe\u914d\u306f\u3069\u3063\u3061\u3082\u5909\u308f\u3089\u306a\u3044\u306e\u3060\u304c\uff0c\u542b\u3081\u305f\u5834\u5408\u306f\u660e\u78ba\u306a\u9055\u3044\u304c\u51fa\u3066\u3057\u307e\u3046\uff08\u8907\u96d1\u3067\u3059\u306d\uff09\uff0e\u6700\u521d\u524d\u8005\u306e\u65b9\u6cd5\u3067\u66f4\u65b0\u3057\u3066\u3044\u305f\u3089G, D\u3069\u3061\u3089\u3082\u52dd\u7387\u304c100%\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u5947\u5999\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u3066\u3057\u307e\u3063\u305f\uff0e\u6700\u521dchainer\u5074\u306e\u30d0\u30b0\u304b\u3068\u7591\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3060\u304c\uff0c\u6700\u7d42\u7684\u306bBN\u306e\u6027\u8cea\u306b\u7740\u76ee\u3057\u5f8c\u8005\u306e\u5b9f\u88c5\u306b\u3057\u305f\u3089\u7dba\u9e97\u306b\u53ce\u675f\u3057\u305f\uff08\u30d0\u30b0\u3067\u306f\u306a\u304b\u3063\u305f\uff09\uff0e\n\n\u6b63\u89e3\u753b\u50cf\u3068\u4e71\u6570\u753b\u50cf\u3092\u540c\u3058\u30d0\u30c3\u30c1\u306b\u5165\u308c\u3066\u30ce\u30fc\u30de\u30e9\u30a4\u30ba\u3059\u308b\u306e\u306f\u3084\u3070\u305d\u3046\u3068\u3044\u3046\u306e\u306f\u5206\u304b\u308b\u306e\u3067\u3059\u304c\u3001\u306a\u305c\u3053\u306e\u3088\u3046\u306a\u73fe\u8c61\u304c\u8d77\u3053\u308b\u306e\u304b\u306f\u5168\u7136\u5206\u304b\u3063\u3066\u306a\u3044\u3067\u3059(\u3061\u306a\u307f\u306bkeras-dcgan\u306eDiscriminator\u306b\u306fBN\u304c\u5165\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3053\u306e\u554f\u984c\u3092\u8e0f\u307e\u306a\u3044\u3088\u3046\u3067\u3059)\u3002\n\u66f8\u3044\u3066\u3042\u308b\u3068\u304a\u308a\u300c\u660e\u793a\u7684\u306b\u640d\u5931\u95a2\u6570\u30922\u3064\u306b\u5206\u3051\u3066\u66f4\u65b0\u300d\u3059\u308c\u3070\u3088\u3055\u305d\u3046\u3067\u3059\u304c\u3001\u660e\u793a\u7684\u306b\u640d\u5931\u95a2\u6570\u30922\u3064\u306b\u5206\u3051\u308b\u304c\u3069\u3046\u3044\u3046\u610f\u5473\u306a\u306e\u304b\u672a\u3060\u306b\u3064\u304b\u3081\u3066\u3044\u307e\u305b\u3093\u3002\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306b\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u3001\u304b\u308f\u308a\u306b\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8997\u3044\u3066\u307f\u307e\u3059\u3002\n\u8a72\u5f53\u90e8\u5206\n\nDCGAN.py\n# train generator\nz = Variable(xp.random.uniform(-1, 1, (batchsize, nz), dtype=np.float32))\nx = gen(z)\nyl = dis(x)\nL_gen = F.softmax_cross_entropy(yl, Variable(xp.zeros(batchsize, dtype=np.int32)))\nL_dis = F.softmax_cross_entropy(yl, Variable(xp.ones(batchsize, dtype=np.int32)))\n\n# train discriminator\n\nx2 = Variable(cuda.to_gpu(x2))\nyl2 = dis(x2)\nL_dis += F.softmax_cross_entropy(yl2, Variable(xp.zeros(batchsize, dtype=np.int32)))\n\n#print \"forward done\"\n\no_gen.zero_grads()\nL_gen.backward()\no_gen.update()\n\no_dis.zero_grads()\nL_dis.backward()\no_dis.update()\n\nsum_l_gen += L_gen.data.get()\nsum_l_dis += L_dis.data.get()\n\n#print \"backward done\"\n\n\nChainer\u306f\u5168\u304f\u77e5\u3089\u306a\u3044\u3067\u3059\u304c\u3001\u898b\u305f\u611f\u3058\u30ed\u30b9\u306e\u8a08\u7b97\u3092\u6b63\u89e3\u753b\u50cf\u3001\u4e71\u6570\u753b\u50cf\u5225\u3005\u306b\u884c\u3044\u3001\u305d\u306e\u5f8c\u5408\u308f\u305b\u3066\u91cd\u307f\u306e\u66f4\u65b0\u3092\u884c\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u3067\u3001\u540c\u3058\u3053\u3068\u3092Keras\u3067\u3082\u3084\u308d\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001Functional API\u306e\u3042\u305f\u308a\u3092\u63a2\u3057\u3066\u3082\u3067\u304d\u305d\u3046\u306a\u306e\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u7d50\u5c40\u59a5\u5354\u7b56\u3068\u3057\u3066\u6b63\u89e3\u753b\u50cf\u3068\u4e71\u6570\u753b\u50cf\u3092\u5206\u3051\u3066\u3001\u5225\u3005\u306btrain_on_batch\u3092\u884c\u3046\u3068\u3044\u3046\u65b9\u6cd5\u3092\u53d6\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f(\u5f8c\u8ff0\u3057\u307e\u3059\u304cDiscriminator\u306bBN\u5165\u308c\u305f\u5834\u5408\u4e00\u56de\u3082\u6210\u529f\u3057\u306a\u304b\u3063\u305f\u306e\u3067\u3053\u308c\u304c\u6b63\u3057\u304f\u306a\u3044\u53ef\u80fd\u6027\u306f\u5927\u3044\u306b\u3042\u308a\u307e\u3059)\u3002\n\nDCGAN\n\n\u8a2d\u5b9a\n\n\u74b0\u5883\nUbuntu16.04\nCore i7 2600k\nGeforce GTX1060 6GB\n\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u524d\u56de\u306e\u8a18\u4e8b\u3067\u3082\u4f7f\u3063\u305f32x32\u306e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5948\u843d\u6587\u5b57\u753b\u50cf54\u679a\u3001\u3092\u30b9\u30b1\u30fc\u30eb\u3057\u3066\u8f1d\u5ea6\u3092\u3044\u3058\u3063\u3066\u4e0a\u4e0b\u5de6\u53f3\u306b\u79fb\u52d5\u3057\u3066\u7121\u7406\u77e2\u7406\u306b\u5897\u3084\u3057\u305f11664\u679a\u306e\u753b\u50cf\u3067\u3059(\u5143\u753b\u50cf\u3060\u3051\u304a\u3044\u3066\u307e\u3059)\u3002\n\u305d\u3046\u3044\u3046\u308f\u3051\u306a\u306e\u3067\u4ee5\u964d\u306e\u5185\u5bb9\u306e\u4e00\u822c\u6027\u306f\u7121\u3044\u3082\u306e\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u5404\u7a2e\u8a08\u6e2c\nDCGAN\u306e\u8a55\u4fa1\u65b9\u6cd5\u306a\u3093\u3066\u77e5\u3089\u306a\u3044\u306e\u3067\u9069\u5f53\u306b\u8003\u3048\u305f\u65b9\u6cd5\u3067\u8a08\u6e2c\u3057\u307e\u3059\u3002\n\n\u30b9\u30c6\u30c3\u30d7\u3054\u3068\u306etrain_loss, train_accuracy\n\u30a8\u30dd\u30c3\u30af\u3054\u3068\u306eval_loss, val_accuracy\n\u4e71\u6570\u30d9\u30af\u30c8\u30eb\u9593\u306e\u88dc\u5b8c\u304c\u3067\u304d\u308b\u304b\n\n\u6700\u5f8c\u306e\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u304c\u8a73\u3057\u3044\u306e\u3067\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nDiscriminator\u306bBatchNormalization\u5165\u308c\u305f\u5834\u5408\n\u307e\u305a\u6700\u521d\u306f\u8ad6\u6587\u306e\u3068\u304a\u308aDiscriminator\u3068Generator\u3069\u3061\u3089\u306b\u3082BatchNormalization\u5165\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\ntrain_loss\u3068train_accuracy\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u306e\u304c\u4ee5\u4e0b\u306e\u753b\u50cf\u3067\u3059\u3002\n\n\nOptimizer\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u306a\u304c\u3089\u3044\u308d\u3044\u308d\u8a66\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u3084\u3063\u3066\u3082loss\u306e\u6700\u5f8c\u306e\u65b9\u306b\u898b\u3048\u308b\u660e\u3089\u304b\u306b\u4e0d\u81ea\u7136\u306a\u72b6\u614b\u306b\u9665\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u72b6\u614b\u3067\u51fa\u529b\u3055\u308c\u308b\u753b\u50cf\u306e\u4f8b\u304c\u4ee5\u4e0b\u3067\u3059\u3002\n\n\u3053\u306e\u4ed6\u5168\u90e8\u771f\u3063\u9ed2\u3060\u3063\u305f\u308a\u3001\u3068\u306b\u304b\u304f\u4e71\u6570\u306e\u5165\u529b\u306b\u305f\u3044\u3057\u3066\u540c\u3058\u3088\u3046\u306a\u753b\u50cf\u3070\u304b\u308a\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u539f\u56e0\u3068\u3057\u3066\u8003\u3048\u3089\u308c\u308b\u306e\u306f\u5148\u8ff0\u306eKeras\u306e\u4ed5\u69d8\u306b\u5408\u308f\u305b\u305ftrain step\u3067\u3059\u304c\u3001\u305d\u308c\u306f\u76f4\u3057\u3088\u3046\u304c\u306a\u3044\u306e\u3067\u3001\u7d50\u5c40keras-dcgan\u306b\u7fd2\u3063\u3066Discriminator\u306b\u306fBN\u3092\u4f7f\u308f\u306a\u3044\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u8ad6\u6587\u901a\u308a\u306b\u3084\u308a\u305f\u3044\u4eba\u3084\u3001\u5148\u4eba\u306e\u5b9f\u88c5\u4f8b\u3092\u4f7f\u3063\u3066\u697d\u3057\u305f\u3044\u4eba\u306b\u306fKeras\u4ee5\u5916\u3067\u3084\u308b\u306e\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nBN\u6392\u9664\u4ee5\u964d\nDiscriminator\u304b\u3089BN\u3092\u6392\u9664\u3057\u305f\u306e\u3067(\u30d1\u30e9\u30e1\u30fc\u30bf\u8abf\u6574\u306f\u4f9d\u7136\u96e3\u3057\u3044\u3082\u306e\u306e)\u307e\u3068\u3082\u306a\u753b\u50cf\u3092\u5410\u304f\u3088\u3046\u306b\u306a\u3063\u3066\u304f\u308c\u307e\u3057\u305f\u3002\n\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u304a\u3044\u3066\u3044\u307e\u3059\u304c\u3044\u308d\u3044\u308d\u3044\u3058\u3063\u3066\u3044\u308b\u9014\u4e2d\u3067\u3082\u3042\u308b\u306e\u3067\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u5909\u308f\u3063\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u30e2\u30c7\u30eb\n\ntrain_dcgan.py\n# define models\ndiscriminator = Sequential([\n    Convolution2D(64, 3, 3, border_mode='same', subsample=(2,2), input_shape=[32, 32, 1]),\n    LeakyReLU(),\n    Convolution2D(128, 3, 3, border_mode='same', subsample=(2,2)),\n    LeakyReLU(),\n    Convolution2D(256, 3, 3, border_mode='same', subsample=(2,2)),\n    LeakyReLU(),\n    Flatten(),\n    Dense(2048),\n    LeakyReLU(),\n    Dense(1, activation='sigmoid')\n], name=\"discriminator\")\n\ngenerator = Sequential([\n    Convolution2D(64, 3, 3, border_mode='same', input_shape=[4, 4, 4]),\n    UpSampling2D(), # 8x8\n    Convolution2D(128, 3, 3, border_mode='same'),\n    BatchNormalization(),\n    ELU(),\n    UpSampling2D(), #16x16\n    Convolution2D(128, 3, 3, border_mode='same'),\n    BatchNormalization(),\n    ELU(),\n    UpSampling2D(), # 32x32\n    Convolution2D(1, 5, 5, border_mode='same', activation='tanh')\n], name=\"generator\")\n\n# setup models\nprint(\"setup discriminator\")\nopt_d = Adam(lr=1e-5, beta_1=0.1)\ndiscriminator.compile(optimizer=opt_d, \n                      loss='binary_crossentropy', \n                      metrics=['accuracy'])\n\nprint(\"setup dcgan\")\nset_trainable(discriminator, False)\ndcgan = Sequential([generator, discriminator])\nopt_g = Adam(lr=2e-4, beta_1=0.5)\ndcgan.compile(optimizer=opt_g, \n              loss='binary_crossentropy', \n              metrics=['accuracy'])\n\n\n\u30e2\u30c7\u30eb\u306f\u8ad6\u6587\u30d9\u30fc\u30b9\u306b\u9069\u5f53\u306b\u5909\u66f4\u3092\u52a0\u3048\u3066\u3044\u307e\u3059\u3002\nDiscriminator\u306f\u3042\u307e\u308a\u306b\u3082\u5b66\u7fd2\u304c\u65e9\u304f\u3001Generator\u304c\u5168\u7136\u8ffd\u3044\u3064\u3051\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u96a0\u308c\u5c64\u306e\u30e6\u30cb\u30c3\u30c8\u6570\u3092\u5fc5\u8981\u4ee5\u4e0a\u306b\u5927\u304d\u304f\u3057\u3001\u5b66\u7fd2\u7387\u3092\u843d\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5b66\u7fd2\n\ntrain_dcgan.py\ndef create_random_features(num):\n    return np.random.uniform(low=-1, high=1, \n                            size=[num, 4, 4, 4])\nfor epoch in range(1, sys.maxsize):\n\n    print(\"epoch: {0}\".format(epoch))\n\n    np.random.shuffle(X_train)\n    rnd = create_random_features(len(X_train))\n\n    # train on batch\n    for i in range(math.ceil(len(X_train)/batch_size)):\n        print(\"batch:\", i, end='\\r')\n        X_batch = X_train[i*batch_size:(i+1)*batch_size]\n        rnd_batch = rnd[i*batch_size:(i+1)*batch_size]\n\n        loss_g, acc_g = dcgan.train_on_batch(rnd_batch, [0]*len(rnd_batch))\n        generated = generator.predict(rnd_batch)\n        X = np.append(X_batch, generated, axis=0)\n        y = [0]*len(X_batch) + [1]*len(generated)\n        loss_d, acc_d = discriminator.train_on_batch(X,y)\n\n        met_curve = np.append(met_curve, [[loss_d, acc_d, loss_g, acc_g]], axis=0)\n\n    # val_loss\u7b49\u8a08\u7b97\u3001\u51fa\u529b\u3084\u30e2\u30c7\u30eb\u4fdd\u5b58\u304c\u7d9a\u304f\n\n\nkeras-dcgan\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u304c\u3001\u5148\u306bGenerator\u3092\u5b66\u7fd2\u3057\u3001\u305d\u306e\u3042\u3068\u3067Discriminator\u3092\u5b66\u7fd2\u3059\u308b\u3088\u3046\u306b\u9806\u756a\u3092\u5165\u308c\u66ff\u3048\u307e\u3057\u305f\u3002G\u3092\u5148\u306b\u3059\u308b\u307b\u3046\u304c\u3001\u305d\u306e\u4e71\u6570\u304cD\u3092\u9a19\u305b\u3066\u3044\u308b\u78ba\u7387\u304c\u9ad8\u304f\u306a\u308a\u3001\u7279\u306b\u6700\u5e8f\u76e4\u3067\u306e\u5b66\u7fd2\u304c\u52b9\u7387\u7684\u306b\u306a\u308b\u3068\u8003\u3048\u305f\u305f\u3081\u3067\u3059\u3002\u52b9\u679c\u306f\u3088\u304f\u5206\u304b\u3063\u3066\u306a\u3044\u3067\u3059\u3002\n\n\u51fa\u529b\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u6574\u3057\u3066\u3046\u307e\u304f\u884c\u3063\u305f\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n3000\u30a8\u30dd\u30c3\u30af\u30678\u6642\u9593\u307b\u3069\u304b\u304b\u308a\u307e\u3057\u305f\u3002val_acc\u304c\u9023\u7d9a\u4f55\u56de0\u3060\u3063\u305f\u3089\u7d42\u4e86\u3001\u307f\u305f\u3044\u306a\u6761\u4ef6\u3092\u5165\u308c\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n100\u30a8\u30dd\u30c3\u30af\u6642\u70b9\n\n300\u30a8\u30dd\u30c3\u30af\u6642\u70b9\n\n1000\u30a8\u30dd\u30c3\u30af\u6642\u70b9\n\n2000\u30a8\u30dd\u30c3\u30af\u6642\u70b9\n\n3000\u30a8\u30dd\u30c3\u30af\u6642\u70b9\n\n1000\u301c2000\u30a8\u30dd\u30c3\u30af\u304f\u3089\u3044\u304c\u4e00\u756a\u826f\u304f\u898b\u3048\u307e\u3059\u306d\u3002\u7d42\u308f\u308a\u969b\u306e3000\u307e\u3067\u884c\u304f\u3068\u58ca\u308c\u3066\u307e\u3059\u3002\ntrain_loss/acuracy\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\nG\u306eloss\u304c\u632f\u52d5\u3057\u3064\u3064\u53f3\u80a9\u4e0a\u304c\u308a\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3044\u308d\u3044\u308d\u8a66\u3057\u305f\u306e\u3067\u3059\u304cD\u306e\u5b66\u7fd2\u7387\u3092\u304b\u306a\u308a\u5c0f\u3055\u304f\u3057\u3066\u3082G\u306eloss\u306e\u4e0a\u6607\u306f\u6291\u3048\u3089\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u4e2d\u9593\u306e\u3042\u305f\u308a\u3092\u53d6\u308a\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\n\ntrain_loss\u304c\u3057\u3087\u3063\u3061\u3085\u3046\u98db\u3073\u306a\u304c\u3089\u3082\u5168\u4f53\u3068\u3057\u3066\u306f\u305d\u3053\u305d\u3053\u5b89\u5b9a\u3057\u3066\u3044\u305f\u3088\u3046\u3067\u3059\u3002\ntrain_acc\u304c\u4f4e\u7a7a\u98db\u884c\u3067\u3059\u304c\u3001\u3053\u308c\u304c\u3082\u3063\u3068\u5927\u304d\u3044\u3068\u3053\u308d\u3067\u5b89\u5b9a\u3059\u308b\u3068\u5b66\u7fd2\u304c\u3088\u308a\u52b9\u7387\u7684\u306b\u9032\u3080\u306f\u305a\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u7279\u306b\u4e0a\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306bG->D\u306e\u9806\u306b\u5b66\u7fd2\u3059\u308b\u5834\u5408\u3001G\u306etrain_acc\u304cD\u306b\u5165\u529b\u3055\u308c\u308b\u9a19\u305b\u3066\u3044\u308b\u753b\u50cf\u6570\u306b\u76f4\u7d50\u3059\u308b\u306e\u3067\u3002\n\u6700\u5f8c\u306f\u4e8c\u8005\u9593\u306e\u88dc\u5b8c\u304c\u3067\u304d\u308b\u3053\u3068\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n\u6700\u5de6\u5217\u3068\u6700\u53f3\u5217\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u30d9\u30af\u30c8\u30eb\u304b\u3089\u751f\u6210\u3055\u308c\u305f\u753b\u50cf\u3067\u3001\u9593\u304c\u305d\u308c\u3089\u3092\u88dc\u5b8c\u3057\u305f\u753b\u50cf\u3067\u3059\u3002\u6587\u5b57\u3063\u307d\u3044\u304b\u306f\u3068\u3082\u304b\u304f\u305d\u3053\u305d\u3053\u30b9\u30e0\u30fc\u30ba\u306b\u5909\u5f62\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3046\u307e\u304f\u7a7a\u9593\u304c\u5f62\u6210\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u307e\u3068\u3081\n\u3044\u308d\u3044\u308d\u554f\u984c\u3092\u8e0f\u307f\u3064\u3064\u3082\u3001DCGAN\u81ea\u4f53\u306f\u529b\u6280(\u305d\u308c\u306a\u308a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u6642\u9593)\u3067\u306a\u3093\u3068\u304b\u306a\u308b\u3088\u3046\u306b\u601d\u3044\u307e\u3057\u305f\u3002\u5e8f\u76e4\u306eloss/acc\u3092\u898b\u3066\u7121\u7406\u305d\u3046\u3060\u3063\u305f\u3089\u65e9\u3081\u306b\u8ae6\u3081\u305f\u308a\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u3089\u3067\u3082\u6642\u9593\u3092\u304b\u3051\u308c\u3070\u306a\u3093\u3068\u304b\u306a\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u5b66\u7fd2\u304c\u3046\u307e\u304f\u3067\u304d\u3066\u3044\u308b\u304b\u306e\u8a55\u4fa1\u3068\u3057\u3066train_loss/acc\u3092\u898b\u307e\u3057\u305f\u304c\u3001\u6700\u5e8f\u76e4\u3092\u4e57\u308a\u8d8a\u3048\u305f\u3042\u305f\u308a\u3067Generator\u306eloss\u304c\u4e0a\u304c\u308a\u59cb\u3081\u308b\u306e\u3067\u3001\u305d\u308c\u304c\u969b\u9650\u306a\u304f\u4e0a\u304c\u3063\u3066\u3044\u304d\u305d\u3046\u3060\u3063\u305f\u3089\u8ae6\u3081\u308b\u57fa\u6e96\u3068\u3057\u3066\u5f79\u7acb\u3061\u307e\u3057\u305f\u3002\u9006\u306b\u5024\u304c\u5b89\u5b9a\u3057\u3066\u3044\u3066\u3082\u306a\u304b\u306a\u304b\u826f\u3044\u753b\u50cf\u304c\u5f97\u3089\u308c\u306a\u304b\u3063\u305f\u308a\u3082\u3057\u305f\u306e\u3067\u3001\u4e2d\u76e4\u4ee5\u964d\u306e\u8a55\u4fa1\u306b\u306f\u3042\u307e\u308a\u5f79\u306b\u7acb\u305f\u306a\u305d\u3046\u3067\u3057\u305f\u3002\nval_loss/acc\u306f\u7b87\u6761\u66f8\u304d\u306b\u6319\u3052\u3066\u304a\u3044\u3066\u5168\u304f\u51fa\u3066\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u30b9\u30c6\u30c3\u30d7\u3054\u3068\u306e\u5909\u52d5\u304c\u3042\u307e\u308a\u306b\u3082\u5927\u304d\u304f\u3001\u307e\u305f\u9032\u884c\u65b9\u5411\u3082\u30d0\u30e9\u30d0\u30e9\u306a\u305f\u3081\u3001\u30a8\u30dd\u30c3\u30af\u306b\u4e00\u56de\u8a55\u4fa1\u3059\u308b\u3060\u3051\u306e\u5024\u306f\u5927\u3057\u3066\u610f\u5473\u304c\u306a\u304b\u3063\u305f\u3067\u3059\u3002\u505c\u6b62\u5224\u5b9a\u3068\u3057\u3066\u306f\u5f79\u306b\u306f\u305f\u3061\u307e\u3057\u305f\u3002\n\u4e8c\u8005\u9593\u306e\u88dc\u5b8c\u306b\u3088\u308b\u8a55\u4fa1\u306fDCGAN\u304c\u3046\u307e\u304f\u3067\u304d\u3066\u3044\u308b\u304b\u306e\u5ba2\u89b3\u7684\u57fa\u6e96\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\u305f\u3060\u305d\u3053\u304c\u30af\u30ea\u30a2\u3067\u304d\u3066\u3044\u3066\u3082\u3001\u30a8\u30dd\u30c3\u30af\u6570\u306e\u9032\u884c\u3068\u51fa\u529b\u306e\u305d\u308c\u3089\u3057\u3055\u306f\u5fc5\u305a\u3057\u3082\u4e00\u81f4\u3057\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u3069\u306e\u6bb5\u968e\u306e\u30e2\u30c7\u30eb\u304c\u4e00\u756a\u305d\u308c\u3063\u307d\u3044\u304b\u306f\u4e3b\u89b3\u7684\u306a\u5224\u65ad\u3092\u305b\u3056\u308b\u3092\u5f97\u306a\u3044\u3088\u3046\u3067\u3059(\u7279\u5fb4\u7a7a\u9593\u3092\u8d70\u67fb\u3057\u3066\u5143\u753b\u50cf\u306e\u4f55\u5272\u306b\u5bfe\u5fdc\u3059\u308b\u7279\u5fb4\u304c\u3067\u304d\u3066\u3044\u308b\u3068\u304b\u78ba\u8a8d\u3059\u308c\u3070\u826f\u3044\u304b\u3082\u3067\u3059\u304c\u3081\u3061\u3083\u304f\u3061\u3083\u5927\u5909\u305d\u3046)\u3002\nChainer\u306fforward\u3068backward\u304c\u5206\u304b\u308c\u3066\u3066\u306a\u3093\u3067\u3053\u3046\u306a\u3063\u3066\u308b\u3093\u3060\u308d\u3046\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306etrain step\u304c\u307e\u3055\u306b\u52b9\u679c\u7684\u306a\u72b6\u6cc1\u3060\u3063\u305f\u3088\u3046\u3067\u3059\u3002TensorFlow\u306e\u5b9f\u88c5\u3082\u3044\u304f\u3064\u304b\u898b\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u30b5\u30f3\u30d7\u30eb\u6b62\u307e\u308a\u306e\u79c1\u306b\u306f\u3088\u304f\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u3067\u3059\u2026\u2026\u3002\nKeras\u3067\u66f8\u304f\u3068\u305d\u308c\u3089\u3088\u308a\u308f\u304b\u308a\u3084\u3059\u304f\u306f\u306a\u308a\u307e\u3059\u304c\u3001train step\u3067\u306e\u5236\u9650\u304c\u3084\u306f\u308a\u6c17\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f\u81ea\u7531\u5ea6\u304c\u4f4e\u3044\u3068\u3053\u308d\u304c\u76ee\u7acb\u3061\u307e\u3057\u305f\u304c\u3001\u753b\u50cf\u5206\u985e\u306a\u3069\u4e00\u822c\u7684\u306a\u554f\u984c\u3092\u3055\u304f\u3063\u3068\u66f8\u304f\u306e\u306b\u306f\u4e00\u756a\u5411\u3044\u3066\u3044\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u79c1\u3068\u540c\u3058\u304fTF\u52c9\u5f37\u3057\u305f\u304f\u306a\u3044\u4eba\u306f\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u3068\u308a\u3042\u3048\u305a\u305d\u308c\u3063\u307d\u3044\u5948\u843d\u6587\u5b57\u751f\u6210\u30e2\u30c7\u30eb\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u30e1\u30a4\u30c9\u30a4\u30f3\u30a2\u30d3\u30b95\u5dfb\u767a\u58f2\u306e\u3053\u308d\u306b\u306f\u524d\u56de\u306e\u8a18\u4e8b\u3092\u30d6\u30e9\u30c3\u30b7\u30e5\u30a2\u30c3\u30d7\u3057\u305f\u306e\u3092\u6295\u7a3f\u3067\u304d\u305f\u3089\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n11/20:\u8ffd\u8a18\n\u4e71\u6570\u306e\u6b21\u5143\u6570\u309230\u307e\u3067\u843d\u3068\u3057\u305f\u3068\u3053\u308d200\u30a8\u30dd\u30c3\u30af\u304f\u3089\u3044\u3067\u3082\u826f\u3044\u51fa\u529b\u304c\u5f97\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u8868\u73fe\u529b\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u306a\u308b\u304c\u3001\u5143\u753b\u50cf\u306e\u591a\u69d8\u6027\u306b\u5fdc\u3058\u3066\u6b21\u5143\u6570\u3092\u8abf\u6574\u3059\u308b\u3068\u5b66\u7fd2\u901f\u5ea6\u3092\u5411\u4e0a\u3067\u304d\u305d\u3046\u3002\n\u51fa\u529b\u306e\u591a\u69d8\u6027\u306b\u3064\u3044\u3066\u306e\u5c3a\u5ea6\u304c\u3042\u308c\u3070\u3055\u3089\u306b\u3044\u308d\u3044\u308d\u63a2\u308c\u305d\u3046\u3060\u304c\u2026\u2026\u3002\n\u6027\u61f2\u308a\u3082\u306a\u304f\u524d\u56de\u306e\u8a18\u4e8b\u306e\u8ffd\u52a0\u5b9f\u9a13\u3092\u7d9a\u3051\u3066\u3044\u307e\u3059\u3002\nDCGAN\u3092\u66f8\u304d\u305f\u304f\u306a\u3063\u305f\u306e\u3067\u66f8\u3044\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u3069\u3046\u3067\u3082\u3044\u3044\u77e5\u8b58\u304c\u6e9c\u307e\u3063\u305f\u306e\u3067\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\u5185\u5bb9\u306f\u4e3b\u306b\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n- Keras\u306eTips\u7684\u306a\u306e\n- DCGAN\u3044\u3058\u308b\u904e\u7a0b\n\nDCGAN\u81ea\u4f53\u306e\u8aac\u660e\u306f\u4ed6\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u79c1\u306f\u4e3b\u306b\u3053\u306e\u3042\u305f\u308a\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n[Chainer\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u30a4\u30e9\u30b9\u30c8\u3092\u63cf\u304b\u305b\u308b](http://qiita.com/rezoolab/items/5cc96b6d31153e0c86bc)\n[Chainer\u3067\u9854\u30a4\u30e9\u30b9\u30c8\u306e\u81ea\u52d5\u751f\u6210](http://qiita.com/mattya/items/e5bfe5e04b9d2f0bbd47)\n[keras-dcgan](https://github.com/jacobgil/keras-dcgan)\n\n# Keras\u95a2\u9023\nKeras\u306e\u3053\u3068\u3057\u304b\u66f8\u3044\u3066\u306a\u3044\u306e\u3067\u8208\u5473\u306a\u3044\u65b9\u306f\u8aad\u307f\u98db\u3070\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## Keras\u306etrainable\n`Keras DCGAN` \u3067\u691c\u7d22\u3059\u308b\u3068\u4e00\u756a\u4e0a\u306b[keras-dcgan](https://github.com/jacobgil/keras-dcgan)\u304c\u3067\u3066\u304d\u307e\u3059\u3002\u53c2\u8003\u306b\u3057\u3088\u3046\u3068\u8997\u3044\u3066\u307f\u308b\u3068[\u8a13\u7df4\u4e2d\u306btrainable\u306e\u5024\u3092\u5207\u308a\u66ff\u3048\u308b](https://github.com/jacobgil/keras-dcgan/blob/master/dcgan.py#L111-L114)\u3053\u3068\u306b\u3088\u3063\u3066Generator\u5b66\u7fd2\u6642\u306bDiscriminator\u306e\u91cd\u307f\u3092\u66f4\u65b0\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\nKeras\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8aad\u3093\u3060\u3053\u3068\u306e\u3042\u308b\u65b9\u306f`trainable=False`\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u5c64\u306e\u91cd\u307f\u306e\u66f4\u65b0\u3092\u3055\u305b\u306a\u3044\u3088\u3046\u306b\u3067\u304d\u308b\u3053\u3068\u3092\u3054\u5b58\u77e5\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u4e8c\u3064\u5f15\u3063\u304b\u304b\u308b\u3068\u3053\u308d\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u307e\u305a\u7b2c\u4e00\u306b\u3001Model\u306e`trainable`\u3092\u8a2d\u5b9a\u3057\u3066\u3082\u305d\u306e\u4e2d\u306e\u5c64\u306f`trainable=True`\u306a\u307e\u307e\u3067\u3001\u91cd\u307f\u3092\u66f4\u65b0\u3057\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3053\u308c\u306f\u524d\u56de\u306e\u8a18\u4e8b\u3067\u3082\u8efd\u304f\u89e6\u308c\u307e\u3057\u305f\u3002\n\u7b2c\u4e8c\u306b\u3001[Keras Documentation\u306eFAQ](https://keras.io/ja/getting-started/faq/#freeze)\u306b\u91cd\u307f\u66f4\u65b0\u505c\u6b62\u306b\u3064\u3044\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n> \u52a0\u3048\u3066\uff0c\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u5f8c\u306b\u5c64\u306etrainableproperty\u306bTrue\u304bFalse \u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u3053\u3068\u306b\u3088\u308b\u5f71\u97ff\u3068\u3057\u3066\u306f\uff0ctrainableproperty\u306e\u5909\u66f4\u5f8c\u306e\u30e2\u30c7\u30eb\u3067compile()\u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4ee5\u4e0b\u306b\u305d\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059:\n\nkeras-dcgan\u3067\u306f`trainable`\u5909\u66f4\u5f8c\u306bcompile\u3092\u884c\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u5b66\u7fd2\u306b\u53cd\u6620\u3055\u308c\u305a\u3001\u9593\u9055\u3063\u305f\u9032\u884c\u306b\u306a\u308b\u6c17\u304c\u3057\u307e\u3059(\u4f8b\u3067\u306f\u3051\u3063\u3053\u3046\u307e\u3068\u3082\u306a\u753b\u50cf\u304c\u51fa\u529b\u3055\u308c\u3066\u308b\u3057\u81ea\u5206\u3067\u306f\u8a66\u3057\u3066\u306a\u3044\u306e\u3067\u3069\u3046\u306a\u3063\u3066\u308b\u306e\u304b\u306f\u8b0e\u3067\u3059)\u3002\n\n### \u3069\u3046\u3059\u308b\u304b\n\u3067\u306f\u4ea4\u4e92\u306e\u30b9\u30c6\u30c3\u30d7\u3054\u3068\u306b\u6bce\u56de\u5168\u5c64\u306e`trainable`\u3092\u8a2d\u5b9a\u3057\u3066`compile`\u3057\u3066\u301c\u3092\u7e70\u308a\u8fd4\u3059\u306e\u304b\u3001\u3068\u601d\u3046\u3068\u3046\u3093\u3056\u308a\u3059\u308b\u306e\u3067\u3044\u308d\u3044\u308d\u8a66\u3057\u3066\u30d9\u30b9\u30c8\u3063\u307d\u3044\u65b9\u6cd5\u3092\u898b\u3064\u3051\u307e\u3057\u305f\u3002\n\u5148\u8ff0\u306e\u3068\u304a\u308aKeras\u306f**`trainable`\u66f4\u65b0\u5f8c\u306b`compile`\u3057\u306a\u3044\u3068\u53cd\u6620\u3055\u308c\u306a\u3044**\u3068\u3044\u3046\u4ed5\u69d8\u306a\u306e\u3067\u3059\u304c\u3001\u305d\u308c\u3092\u3046\u307e\u304f\u4f7f\u3048\u306a\u3044\u304b(\u3068\u3044\u3046\u304b\u3046\u307e\u304f\u8a2d\u8a08\u3055\u308c\u3066\u3044\u306a\u3044\u304b)\u3068\u8003\u3048\u307e\u3057\u305f\u3002\u5b9f\u9a13\u3057\u305f\u30b3\u30fc\u30c9\u3092\u4e00\u90e8\u629c\u7c8b\u3057\u307e\u3059\u3002[\u5168\u6587\u306f\u3053\u3061\u3089](https://gist.github.com/t-ae/754925ea21168f0ef08251be4625138f)\n\n```python\nmodelA = Sequential([\n    Dense(10, input_dim=100, activation='sigmoid')\n])\n\nmodelB = Sequential([\n    Dense(100, input_dim=10, activation='sigmoid')\n])\n\nmodelB.compile(optimizer='adam', loss='binary_crossentropy')\n\nset_trainable(modelB, False)\nconnected = Sequential([modelA, modelB])\nconnected.compile(optimizer='adam', loss='binary_crossentropy')\n```\n\nDCGAN\u3092\u6975\u9650\u307e\u3067\u5207\u308a\u8a70\u3081\u305f\u3088\u3046\u306a\u30e2\u30c7\u30eb\u3067\u3059\u3002\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u76f4\u5f8c\u306f\u3059\u3079\u3066`trainable`\u306a\u72b6\u614b\u3067\u3059\u3002\u3053\u306e\u72b6\u614b\u3067`modelB`\u3092`compile`\u3059\u308b\u3053\u3068\u3067`modelB.fit`\u3067\u91cd\u307f\u66f4\u65b0\u304c\u3067\u304d\u308b\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\n\u6b21\u306b`set_trainable`\u3067`modelB`\u306e\u5168\u5c64\u306b`trainable=False`\u3092\u8a2d\u5b9a\u3057\u3001`modelA`\u3068`modelB`\u3092\u9023\u7d50\u3057\u305f\u30e2\u30c7\u30eb`connected`\u3092`compile`\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u72b6\u614b\u3067`modelB, connnected`\u3092`fit`\u3057\u305f\u3089`modelB`\u306e\u91cd\u307f\u306f\u3069\u3046\u306a\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\n```python\nw0 = np.copy(modelB.layers[0].get_weights()[0])\n\nconnected.fit(X1, X1)\nw1 = np.copy(modelB.layers[0].get_weights()[0])\nprint('Freezed in \"connected\":', np.array_equal(w0, w1))\n# Freezed in \"connected\": True\n\nmodelB.fit(X2, X1)\nw2 = np.copy(modelB.layers[0].get_weights()[0])\nprint('Freezed in \"modelB\":', np.array_equal(w1, w2))\n# Freezed in \"modelB\": False\n\nconnected.fit(X1, X1)\nw3 = np.copy(modelB.layers[0].get_weights()[0])\nprint('Freezed in \"connected\":', np.array_equal(w2, w3))\n# Freezed in \"connected\": True\n```\n\n\u9a5a\u304f\u3079\u304d\u3053\u3068\u306b(?)\u4ee5\u4e0a\u306e\u30b3\u30fc\u30c9\u306e\u51fa\u529b\u306f\u30b3\u30e1\u30f3\u30c8\u306b\u3042\u308b\u3068\u304a\u308a\u306b\u306a\u308a\u3001`modelB`\u3067\u306f\u5b66\u7fd2\u53ef\u3001`connected`\u3067\u306f\u5b66\u7fd2\u4e0d\u53ef\u3068\u3001`compile`\u6642\u306e\u8a2d\u5b9a\u304c\u3061\u3083\u3093\u3068\u751f\u304d\u3066\u3044\u307e\u3059\u3002\n\u3059\u306a\u308f\u3061\u6700\u521d\u306b\u6b63\u3057\u304f\u8a2d\u5b9a\u3059\u308c\u3070\u4ee5\u964d\u5909\u66f4\u3059\u308b\u5fc5\u8981\u306f\u5168\u304f\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u3053\u308c\u306a\u3089\u5b66\u7fd2\u90e8\u5206\u3067\u6bce\u56de\u5207\u308a\u66ff\u3048\u308b\u306a\u3093\u3066\u3053\u3068\u3092\u3057\u306a\u304f\u3066\u6e08\u3093\u3067\u7dba\u9e97\u306b\u3067\u304d\u307e\u3059\u3002\n(\u4f59\u8ac7\u3067\u3059\u304ckeras-dcgan\u306f\u4e0d\u8981\u306a`compile`\u304c\u591a\u304b\u3063\u305f\u308a\u3057\u3066\u3044\u308d\u3044\u308d\u602a\u3057\u305d\u3046\u3067\u3059\u3002)\n\n## Keras\u306eBatchNormalization\n\n\u524d\u9805\u306e\u554f\u984c\u3092\u3046\u307e\u304f\u89e3\u6c7a\u3067\u304d\u305f\u306e\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u51fa\u3057\u307e\u3057\u305f\u3002\u4f55\u3082\u8003\u3048\u305a\u306b\u66f8\u3044\u305f\u306e\u304c\u3060\u3044\u305f\u3044\u3053\u3093\u306a\u611f\u3058\u306e\u3082\u306e\u3067\u3059\u3002\n\n```python\ndiscriminator = Sequential([\n    Convolution2D(64, 3, 3, border_mode='same', subsample=(2,2), input_shape=[32, 32, 1]),\n    LeakyReLU(),\n    Convolution2D(128, 3, 3, border_mode='same', subsample=(2,2)),\n    BatchNormalization(),\n    LeakyReLU(),\n    Convolution2D(256, 3, 3, border_mode='same', subsample=(2,2)),\n    BatchNormalization(),\n    LeakyReLU(),\n    Flatten(),\n    Dense(2048),\n    BatchNormalization(),\n    LeakyReLU(),\n    Dense(1, activation='sigmoid')\n], name=\"discriminator\")\n\ngenerator = Sequential([\n# \u7701\u7565\n])\n\n# setup models\n\nprint(\"setup discriminator\")\nopt_d = Adam(lr=1e-5, beta_1=0.1)\ndiscriminator.compile(optimizer=opt_d, \n                      loss='binary_crossentropy', \n                      metrics=['accuracy'])\n\nprint(\"setup dcgan\")\nset_trainable(discriminator, False)\ndcgan = Sequential([generator, discriminator])\nopt_g = Adam(lr=2e-4, beta_1=0.5)\ndcgan.compile(optimizer=opt_g, \n              loss='binary_crossentropy', \n              metrics=['accuracy'])\n```\n\n\u3053\u3044\u3064\u3092\u5b66\u7fd2\u3055\u305b\u3088\u3046\u3068\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\n```\nException: You are attempting to share a same `BatchNormalization` layer across different data flows. This is not possible. You should use `mode=2` in `BatchNormalization`, which has a similar behavior but is shareable (see docs for a description of the behavior).\n```\n\n`BatchNormalization`\u306b`mode=2`\u3092\u8a2d\u5b9a\u3057\u308d\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f[Shared Layers](https://keras.io/ja/getting-started/functional-api-guide/#shared-layers)\u306e\u9805\u306e\u4f8b\u306e\u3088\u3046\u306b\u540c\u3058\u5c64\u3092\u4ed6\u3067\u4f7f\u3044\u56de\u305d\u3046\u3068\u3044\u3046\u6642\u306b\u3001`BatchNormalization`\u3092\u5171\u6709\u3059\u308b\u3068\u3001\u4f8b\u3048\u3070\u4e8c\u3064\u306e\u5165\u529b\u3067\u5206\u5e03\u304c\u9055\u3046\u6642\u306a\u3069\u306b\u4e0d\u90fd\u5408\u304c\u8d77\u3053\u308b\u304b\u3082\u3088\u3001\u3063\u3066\u3053\u3068\u3092\u8a00\u3063\u3066\u3044\u308b\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u4e0a\u30b3\u30fc\u30c9\u3067\u306fDiscriminator\u5358\u4f53\u3068Generator+Discriminator\u3092`compile`\u3057\u3066\u304a\u308a\u3001\u5c64\u304c\u5171\u6709\u3055\u308c\u3066\u308b\u3068\u307f\u306a\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002DCGAN\u3067\u306fGenerator+Discriminator\u306e\u65b9\u3067\u306f`trainable=False`\u306b\u306a\u3063\u3066\u3044\u3066\u5b66\u7fd2\u306b\u95a2\u4fc2\u306a\u3044\u306e\u3067\u3001`mode=2`\u3092\u6307\u5b9a\u3057\u3061\u3083\u3063\u3066\u5927\u4e08\u592b\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u8003\u3048\u308c\u3070\u5206\u304b\u308b\u3053\u3068\u3060\u3051\u308c\u3069\u3082[BatchNormalization\u306e\u30da\u30fc\u30b8](https://keras.io/ja/layers/normalization/)\u3067\u89e6\u308c\u3066\u307b\u3057\u3044\u2026\u2026\u3002\n\n## Keras+DCGAN\u3067\u306etrain step\n\u30e2\u30c7\u30eb\u304c\u3067\u304d\u305f\u306e\u3067\u9069\u5f53\u306b\u5b66\u7fd2\u3055\u305b\u59cb\u3081\u307e\u3057\u305f\u3002\nkeras-dcgan\u3092\u53c2\u8003\u306b\u4e71\u6570\u306e\u30d0\u30c3\u30c1\u3067Generator\u3092\u3001\u540c\u3058\u4e71\u6570\u304b\u3089\u751f\u6210\u3057\u305f\u753b\u50cf\u3068\u6b63\u89e3\u753b\u50cf\u3092\u6df7\u305c\u305f\u30d0\u30c3\u30c1\u3067Discriminator\u3092\u4ea4\u4e92\u306b\u5b66\u7fd2\u3055\u305b\u3066\u3044\u304f\u3068\u8b0e\u306e\u73fe\u8c61\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u5177\u4f53\u7684\u306b\u306f[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://qiita.com/rezoolab/items/5cc96b6d31153e0c86bc#%E3%83%91%E3%83%A9%E3%83%A1%E3%83%BC%E3%82%BF%E8%AA%BF%E6%95%B4%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E3%81%AE%E6%84%9F%E6%83%B3)\u3067\u89e6\u308c\u3089\u308c\u3066\u3044\u308b\u5185\u5bb9\u3068\u540c\u3058\u3067\u3059\u3002\n\n> Discriminator\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u66f4\u65b0\u306b\u306f\uff0c\u5b9f\u753b\u50cf\u306e\u30d0\u30c3\u30c1\u3068\u507d\u753b\u50cf\u306e\u30d0\u30c3\u30c12\u3064\u30921\u3064\u306e\u30d0\u30c3\u30c1\u306b\u307e\u3068\u3081\u3066\u66f4\u65b0\u3059\u308b\u65b9\u6cd5\u3068\uff0c\u660e\u793a\u7684\u306b\u640d\u5931\u95a2\u6570\u30922\u3064\u306b\u5206\u3051\u3066\u66f4\u65b0\u3059\u308b2\u901a\u308a\u306e\u65b9\u6cd5\u304c\u3042\u308b\uff0eBatch Normalization layer\u304c\u7121\u3044\u5834\u5408\u3060\u3068\u6700\u7d42\u7684\u306b\u5f97\u3089\u308c\u308b\u52fe\u914d\u306f\u3069\u3063\u3061\u3082\u5909\u308f\u3089\u306a\u3044\u306e\u3060\u304c\uff0c\u542b\u3081\u305f\u5834\u5408\u306f\u660e\u78ba\u306a\u9055\u3044\u304c\u51fa\u3066\u3057\u307e\u3046\uff08\u8907\u96d1\u3067\u3059\u306d\uff09\uff0e\u6700\u521d\u524d\u8005\u306e\u65b9\u6cd5\u3067\u66f4\u65b0\u3057\u3066\u3044\u305f\u3089G, D\u3069\u3061\u3089\u3082\u52dd\u7387\u304c100%\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u5947\u5999\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u3066\u3057\u307e\u3063\u305f\uff0e\u6700\u521dchainer\u5074\u306e\u30d0\u30b0\u304b\u3068\u7591\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3060\u304c\uff0c\u6700\u7d42\u7684\u306bBN\u306e\u6027\u8cea\u306b\u7740\u76ee\u3057\u5f8c\u8005\u306e\u5b9f\u88c5\u306b\u3057\u305f\u3089\u7dba\u9e97\u306b\u53ce\u675f\u3057\u305f\uff08\u30d0\u30b0\u3067\u306f\u306a\u304b\u3063\u305f\uff09\uff0e\n\n\u6b63\u89e3\u753b\u50cf\u3068\u4e71\u6570\u753b\u50cf\u3092\u540c\u3058\u30d0\u30c3\u30c1\u306b\u5165\u308c\u3066\u30ce\u30fc\u30de\u30e9\u30a4\u30ba\u3059\u308b\u306e\u306f\u3084\u3070\u305d\u3046\u3068\u3044\u3046\u306e\u306f\u5206\u304b\u308b\u306e\u3067\u3059\u304c\u3001\u306a\u305c\u3053\u306e\u3088\u3046\u306a\u73fe\u8c61\u304c\u8d77\u3053\u308b\u306e\u304b\u306f\u5168\u7136\u5206\u304b\u3063\u3066\u306a\u3044\u3067\u3059(\u3061\u306a\u307f\u306bkeras-dcgan\u306eDiscriminator\u306b\u306fBN\u304c\u5165\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3053\u306e\u554f\u984c\u3092\u8e0f\u307e\u306a\u3044\u3088\u3046\u3067\u3059)\u3002\n\u66f8\u3044\u3066\u3042\u308b\u3068\u304a\u308a\u300c\u660e\u793a\u7684\u306b\u640d\u5931\u95a2\u6570\u30922\u3064\u306b\u5206\u3051\u3066\u66f4\u65b0\u300d\u3059\u308c\u3070\u3088\u3055\u305d\u3046\u3067\u3059\u304c\u3001\u660e\u793a\u7684\u306b\u640d\u5931\u95a2\u6570\u30922\u3064\u306b\u5206\u3051\u308b\u304c\u3069\u3046\u3044\u3046\u610f\u5473\u306a\u306e\u304b\u672a\u3060\u306b\u3064\u304b\u3081\u3066\u3044\u307e\u305b\u3093\u3002\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306b\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u3001\u304b\u308f\u308a\u306b[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://qiita.com/mattya/items/e5bfe5e04b9d2f0bbd47)\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8997\u3044\u3066\u307f\u307e\u3059\u3002\n[\u8a72\u5f53\u90e8\u5206](https://github.com/mattya/chainer-DCGAN/blob/master/DCGAN.py#L190-L201)\n\n```python:DCGAN.py\n# train generator\nz = Variable(xp.random.uniform(-1, 1, (batchsize, nz), dtype=np.float32))\nx = gen(z)\nyl = dis(x)\nL_gen = F.softmax_cross_entropy(yl, Variable(xp.zeros(batchsize, dtype=np.int32)))\nL_dis = F.softmax_cross_entropy(yl, Variable(xp.ones(batchsize, dtype=np.int32)))\n\n# train discriminator\n\nx2 = Variable(cuda.to_gpu(x2))\nyl2 = dis(x2)\nL_dis += F.softmax_cross_entropy(yl2, Variable(xp.zeros(batchsize, dtype=np.int32)))\n\n#print \"forward done\"\n\no_gen.zero_grads()\nL_gen.backward()\no_gen.update()\n            \no_dis.zero_grads()\nL_dis.backward()\no_dis.update()\n            \nsum_l_gen += L_gen.data.get()\nsum_l_dis += L_dis.data.get()\n            \n#print \"backward done\"\n```\nChainer\u306f\u5168\u304f\u77e5\u3089\u306a\u3044\u3067\u3059\u304c\u3001\u898b\u305f\u611f\u3058\u30ed\u30b9\u306e\u8a08\u7b97\u3092\u6b63\u89e3\u753b\u50cf\u3001\u4e71\u6570\u753b\u50cf\u5225\u3005\u306b\u884c\u3044\u3001\u305d\u306e\u5f8c\u5408\u308f\u305b\u3066\u91cd\u307f\u306e\u66f4\u65b0\u3092\u884c\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u3067\u3001\u540c\u3058\u3053\u3068\u3092Keras\u3067\u3082\u3084\u308d\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001[Functional API](https://keras.io/ja/models/model/)\u306e\u3042\u305f\u308a\u3092\u63a2\u3057\u3066\u3082\u3067\u304d\u305d\u3046\u306a\u306e\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u7d50\u5c40\u59a5\u5354\u7b56\u3068\u3057\u3066\u6b63\u89e3\u753b\u50cf\u3068\u4e71\u6570\u753b\u50cf\u3092\u5206\u3051\u3066\u3001\u5225\u3005\u306b`train_on_batch`\u3092\u884c\u3046\u3068\u3044\u3046\u65b9\u6cd5\u3092\u53d6\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f(\u5f8c\u8ff0\u3057\u307e\u3059\u304cDiscriminator\u306bBN\u5165\u308c\u305f\u5834\u5408\u4e00\u56de\u3082\u6210\u529f\u3057\u306a\u304b\u3063\u305f\u306e\u3067\u3053\u308c\u304c\u6b63\u3057\u304f\u306a\u3044\u53ef\u80fd\u6027\u306f\u5927\u3044\u306b\u3042\u308a\u307e\u3059)\u3002\n\n# DCGAN\n## \u8a2d\u5b9a\n### \u74b0\u5883\nUbuntu16.04\nCore i7 2600k\nGeforce GTX1060 6GB\n\n\n### \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u524d\u56de\u306e\u8a18\u4e8b\u3067\u3082\u4f7f\u3063\u305f32x32\u306e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5948\u843d\u6587\u5b57\u753b\u50cf54\u679a\u3001\u3092\u30b9\u30b1\u30fc\u30eb\u3057\u3066\u8f1d\u5ea6\u3092\u3044\u3058\u3063\u3066\u4e0a\u4e0b\u5de6\u53f3\u306b\u79fb\u52d5\u3057\u3066\u7121\u7406\u77e2\u7406\u306b\u5897\u3084\u3057\u305f11664\u679a\u306e\u753b\u50cf\u3067\u3059([\u5143\u753b\u50cf\u3060\u3051\u304a\u3044\u3066\u307e\u3059](https://github.com/t-ae/abyss-letter2/tree/master/abyss_letters))\u3002\n\u305d\u3046\u3044\u3046\u308f\u3051\u306a\u306e\u3067\u4ee5\u964d\u306e\u5185\u5bb9\u306e\u4e00\u822c\u6027\u306f\u7121\u3044\u3082\u306e\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u5404\u7a2e\u8a08\u6e2c\nDCGAN\u306e\u8a55\u4fa1\u65b9\u6cd5\u306a\u3093\u3066\u77e5\u3089\u306a\u3044\u306e\u3067\u9069\u5f53\u306b\u8003\u3048\u305f\u65b9\u6cd5\u3067\u8a08\u6e2c\u3057\u307e\u3059\u3002\n\n- \u30b9\u30c6\u30c3\u30d7\u3054\u3068\u306etrain_loss, train_accuracy\n- \u30a8\u30dd\u30c3\u30af\u3054\u3068\u306eval_loss, val_accuracy\n- \u4e71\u6570\u30d9\u30af\u30c8\u30eb\u9593\u306e\u88dc\u5b8c\u304c\u3067\u304d\u308b\u304b\n\n\u6700\u5f8c\u306e\u306f[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://qiita.com/mattya/items/e5bfe5e04b9d2f0bbd47#z%E3%81%AE%E7%A9%BA%E9%96%93%E3%82%92%E8%AA%BF%E3%81%B9%E3%82%8B)\u304c\u8a73\u3057\u3044\u306e\u3067\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n## Discriminator\u306bBatchNormalization\u5165\u308c\u305f\u5834\u5408\n\u307e\u305a\u6700\u521d\u306f\u8ad6\u6587\u306e\u3068\u304a\u308aDiscriminator\u3068Generator\u3069\u3061\u3089\u306b\u3082BatchNormalization\u5165\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\ntrain_loss\u3068train_accuracy\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u306e\u304c\u4ee5\u4e0b\u306e\u753b\u50cf\u3067\u3059\u3002\n![norm_high_d.png](https://qiita-image-store.s3.amazonaws.com/0/121603/89fff56d-951a-80a3-21c1-0eb14d123d93.png)\n![norm_low_d.png](https://qiita-image-store.s3.amazonaws.com/0/121603/7462e899-8166-589e-80aa-4d2931b7ed2d.png)\nOptimizer\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u306a\u304c\u3089\u3044\u308d\u3044\u308d\u8a66\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u3084\u3063\u3066\u3082loss\u306e\u6700\u5f8c\u306e\u65b9\u306b\u898b\u3048\u308b\u660e\u3089\u304b\u306b\u4e0d\u81ea\u7136\u306a\u72b6\u614b\u306b\u9665\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u72b6\u614b\u3067\u51fa\u529b\u3055\u308c\u308b\u753b\u50cf\u306e\u4f8b\u304c\u4ee5\u4e0b\u3067\u3059\u3002\n![norm_low_d_out.png](https://qiita-image-store.s3.amazonaws.com/0/121603/78386aa8-742f-39f3-1044-f80218274022.png)\n\u3053\u306e\u4ed6\u5168\u90e8\u771f\u3063\u9ed2\u3060\u3063\u305f\u308a\u3001\u3068\u306b\u304b\u304f\u4e71\u6570\u306e\u5165\u529b\u306b\u305f\u3044\u3057\u3066\u540c\u3058\u3088\u3046\u306a\u753b\u50cf\u3070\u304b\u308a\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u539f\u56e0\u3068\u3057\u3066\u8003\u3048\u3089\u308c\u308b\u306e\u306f\u5148\u8ff0\u306eKeras\u306e\u4ed5\u69d8\u306b\u5408\u308f\u305b\u305ftrain step\u3067\u3059\u304c\u3001\u305d\u308c\u306f\u76f4\u3057\u3088\u3046\u304c\u306a\u3044\u306e\u3067\u3001\u7d50\u5c40keras-dcgan\u306b\u7fd2\u3063\u3066Discriminator\u306b\u306fBN\u3092\u4f7f\u308f\u306a\u3044\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u8ad6\u6587\u901a\u308a\u306b\u3084\u308a\u305f\u3044\u4eba\u3084\u3001\u5148\u4eba\u306e\u5b9f\u88c5\u4f8b\u3092\u4f7f\u3063\u3066\u697d\u3057\u305f\u3044\u4eba\u306b\u306fKeras\u4ee5\u5916\u3067\u3084\u308b\u306e\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## BN\u6392\u9664\u4ee5\u964d\nDiscriminator\u304b\u3089BN\u3092\u6392\u9664\u3057\u305f\u306e\u3067(\u30d1\u30e9\u30e1\u30fc\u30bf\u8abf\u6574\u306f\u4f9d\u7136\u96e3\u3057\u3044\u3082\u306e\u306e)\u307e\u3068\u3082\u306a\u753b\u50cf\u3092\u5410\u304f\u3088\u3046\u306b\u306a\u3063\u3066\u304f\u308c\u307e\u3057\u305f\u3002\n[\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/t-ae/abyss-letter2/tree/master/dcgan)\u306b\u304a\u3044\u3066\u3044\u307e\u3059\u304c\u3044\u308d\u3044\u308d\u3044\u3058\u3063\u3066\u3044\u308b\u9014\u4e2d\u3067\u3082\u3042\u308b\u306e\u3067\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u5909\u308f\u3063\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n### \u30e2\u30c7\u30eb\n```python:train_dcgan.py\n# define models\ndiscriminator = Sequential([\n    Convolution2D(64, 3, 3, border_mode='same', subsample=(2,2), input_shape=[32, 32, 1]),\n    LeakyReLU(),\n    Convolution2D(128, 3, 3, border_mode='same', subsample=(2,2)),\n    LeakyReLU(),\n    Convolution2D(256, 3, 3, border_mode='same', subsample=(2,2)),\n    LeakyReLU(),\n    Flatten(),\n    Dense(2048),\n    LeakyReLU(),\n    Dense(1, activation='sigmoid')\n], name=\"discriminator\")\n\ngenerator = Sequential([\n    Convolution2D(64, 3, 3, border_mode='same', input_shape=[4, 4, 4]),\n    UpSampling2D(), # 8x8\n    Convolution2D(128, 3, 3, border_mode='same'),\n    BatchNormalization(),\n    ELU(),\n    UpSampling2D(), #16x16\n    Convolution2D(128, 3, 3, border_mode='same'),\n    BatchNormalization(),\n    ELU(),\n    UpSampling2D(), # 32x32\n    Convolution2D(1, 5, 5, border_mode='same', activation='tanh')\n], name=\"generator\")\n\n# setup models\nprint(\"setup discriminator\")\nopt_d = Adam(lr=1e-5, beta_1=0.1)\ndiscriminator.compile(optimizer=opt_d, \n                      loss='binary_crossentropy', \n                      metrics=['accuracy'])\n\nprint(\"setup dcgan\")\nset_trainable(discriminator, False)\ndcgan = Sequential([generator, discriminator])\nopt_g = Adam(lr=2e-4, beta_1=0.5)\ndcgan.compile(optimizer=opt_g, \n              loss='binary_crossentropy', \n              metrics=['accuracy'])\n```\n\n\u30e2\u30c7\u30eb\u306f\u8ad6\u6587\u30d9\u30fc\u30b9\u306b\u9069\u5f53\u306b\u5909\u66f4\u3092\u52a0\u3048\u3066\u3044\u307e\u3059\u3002\nDiscriminator\u306f\u3042\u307e\u308a\u306b\u3082\u5b66\u7fd2\u304c\u65e9\u304f\u3001Generator\u304c\u5168\u7136\u8ffd\u3044\u3064\u3051\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u96a0\u308c\u5c64\u306e\u30e6\u30cb\u30c3\u30c8\u6570\u3092\u5fc5\u8981\u4ee5\u4e0a\u306b\u5927\u304d\u304f\u3057\u3001\u5b66\u7fd2\u7387\u3092\u843d\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n### \u5b66\u7fd2\n\n```python:train_dcgan.py\ndef create_random_features(num):\n    return np.random.uniform(low=-1, high=1, \n                            size=[num, 4, 4, 4])\nfor epoch in range(1, sys.maxsize):\n\n    print(\"epoch: {0}\".format(epoch))\n    \n    np.random.shuffle(X_train)\n    rnd = create_random_features(len(X_train))\n\n    # train on batch\n    for i in range(math.ceil(len(X_train)/batch_size)):\n        print(\"batch:\", i, end='\\r')\n        X_batch = X_train[i*batch_size:(i+1)*batch_size]\n        rnd_batch = rnd[i*batch_size:(i+1)*batch_size]\n\n        loss_g, acc_g = dcgan.train_on_batch(rnd_batch, [0]*len(rnd_batch))\n        generated = generator.predict(rnd_batch)\n        X = np.append(X_batch, generated, axis=0)\n        y = [0]*len(X_batch) + [1]*len(generated)\n        loss_d, acc_d = discriminator.train_on_batch(X,y)\n        \n        met_curve = np.append(met_curve, [[loss_d, acc_d, loss_g, acc_g]], axis=0)\n\n    # val_loss\u7b49\u8a08\u7b97\u3001\u51fa\u529b\u3084\u30e2\u30c7\u30eb\u4fdd\u5b58\u304c\u7d9a\u304f\n```\n\n\nkeras-dcgan\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u304c\u3001\u5148\u306bGenerator\u3092\u5b66\u7fd2\u3057\u3001\u305d\u306e\u3042\u3068\u3067Discriminator\u3092\u5b66\u7fd2\u3059\u308b\u3088\u3046\u306b\u9806\u756a\u3092\u5165\u308c\u66ff\u3048\u307e\u3057\u305f\u3002G\u3092\u5148\u306b\u3059\u308b\u307b\u3046\u304c\u3001\u305d\u306e\u4e71\u6570\u304cD\u3092\u9a19\u305b\u3066\u3044\u308b\u78ba\u7387\u304c\u9ad8\u304f\u306a\u308a\u3001\u7279\u306b\u6700\u5e8f\u76e4\u3067\u306e\u5b66\u7fd2\u304c\u52b9\u7387\u7684\u306b\u306a\u308b\u3068\u8003\u3048\u305f\u305f\u3081\u3067\u3059\u3002\u52b9\u679c\u306f\u3088\u304f\u5206\u304b\u3063\u3066\u306a\u3044\u3067\u3059\u3002\n\n### \u51fa\u529b\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u6574\u3057\u3066\u3046\u307e\u304f\u884c\u3063\u305f\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n3000\u30a8\u30dd\u30c3\u30af\u30678\u6642\u9593\u307b\u3069\u304b\u304b\u308a\u307e\u3057\u305f\u3002val_acc\u304c\u9023\u7d9a\u4f55\u56de0\u3060\u3063\u305f\u3089\u7d42\u4e86\u3001\u307f\u305f\u3044\u306a\u6761\u4ef6\u3092\u5165\u308c\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n100\u30a8\u30dd\u30c3\u30af\u6642\u70b9\n![100epoch.png](https://qiita-image-store.s3.amazonaws.com/0/121603/4a8d8b8f-5022-dc98-73e9-4f7e65c7b687.png)\n300\u30a8\u30dd\u30c3\u30af\u6642\u70b9\n![300epoch.png](https://qiita-image-store.s3.amazonaws.com/0/121603/db44648b-8101-2fc1-162e-5bc446570fbb.png)\n1000\u30a8\u30dd\u30c3\u30af\u6642\u70b9\n![1000epoch.png](https://qiita-image-store.s3.amazonaws.com/0/121603/7e191a6d-bc26-aa59-2349-e685771ca08d.png)\n2000\u30a8\u30dd\u30c3\u30af\u6642\u70b9\n![2000epoch.png](https://qiita-image-store.s3.amazonaws.com/0/121603/4bd998ad-8620-ad02-397e-e61813e49ebf.png)\n3000\u30a8\u30dd\u30c3\u30af\u6642\u70b9\n![3000epoch.png](https://qiita-image-store.s3.amazonaws.com/0/121603/b1c44f59-51a2-e338-2265-88cf0c5d09ed.png)\n\n1000\u301c2000\u30a8\u30dd\u30c3\u30af\u304f\u3089\u3044\u304c\u4e00\u756a\u826f\u304f\u898b\u3048\u307e\u3059\u306d\u3002\u7d42\u308f\u308a\u969b\u306e3000\u307e\u3067\u884c\u304f\u3068\u58ca\u308c\u3066\u307e\u3059\u3002\n\ntrain_loss/acuracy\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n![a.png](https://qiita-image-store.s3.amazonaws.com/0/121603/ea43d02d-292f-bf42-eedd-72efab54cf56.png)\n\nG\u306eloss\u304c\u632f\u52d5\u3057\u3064\u3064\u53f3\u80a9\u4e0a\u304c\u308a\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3044\u308d\u3044\u308d\u8a66\u3057\u305f\u306e\u3067\u3059\u304cD\u306e\u5b66\u7fd2\u7387\u3092\u304b\u306a\u308a\u5c0f\u3055\u304f\u3057\u3066\u3082G\u306eloss\u306e\u4e0a\u6607\u306f\u6291\u3048\u3089\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u4e2d\u9593\u306e\u3042\u305f\u308a\u3092\u53d6\u308a\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\n![met.png](https://qiita-image-store.s3.amazonaws.com/0/121603/e089d061-e6e3-9ac3-da84-4d4f7c144cc7.png)\ntrain_loss\u304c\u3057\u3087\u3063\u3061\u3085\u3046\u98db\u3073\u306a\u304c\u3089\u3082\u5168\u4f53\u3068\u3057\u3066\u306f\u305d\u3053\u305d\u3053\u5b89\u5b9a\u3057\u3066\u3044\u305f\u3088\u3046\u3067\u3059\u3002\ntrain_acc\u304c\u4f4e\u7a7a\u98db\u884c\u3067\u3059\u304c\u3001\u3053\u308c\u304c\u3082\u3063\u3068\u5927\u304d\u3044\u3068\u3053\u308d\u3067\u5b89\u5b9a\u3059\u308b\u3068\u5b66\u7fd2\u304c\u3088\u308a\u52b9\u7387\u7684\u306b\u9032\u3080\u306f\u305a\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u7279\u306b\u4e0a\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306bG->D\u306e\u9806\u306b\u5b66\u7fd2\u3059\u308b\u5834\u5408\u3001G\u306etrain_acc\u304cD\u306b\u5165\u529b\u3055\u308c\u308b\u9a19\u305b\u3066\u3044\u308b\u753b\u50cf\u6570\u306b\u76f4\u7d50\u3059\u308b\u306e\u3067\u3002\n\n\u6700\u5f8c\u306f\u4e8c\u8005\u9593\u306e\u88dc\u5b8c\u304c\u3067\u304d\u308b\u3053\u3068\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n![middle.png](https://qiita-image-store.s3.amazonaws.com/0/121603/4c20109e-5484-3b6e-1f9c-f95a2bd3336c.png)\n\u6700\u5de6\u5217\u3068\u6700\u53f3\u5217\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u30d9\u30af\u30c8\u30eb\u304b\u3089\u751f\u6210\u3055\u308c\u305f\u753b\u50cf\u3067\u3001\u9593\u304c\u305d\u308c\u3089\u3092\u88dc\u5b8c\u3057\u305f\u753b\u50cf\u3067\u3059\u3002\u6587\u5b57\u3063\u307d\u3044\u304b\u306f\u3068\u3082\u304b\u304f\u305d\u3053\u305d\u3053\u30b9\u30e0\u30fc\u30ba\u306b\u5909\u5f62\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3046\u307e\u304f\u7a7a\u9593\u304c\u5f62\u6210\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n# \u307e\u3068\u3081\n\n\u3044\u308d\u3044\u308d\u554f\u984c\u3092\u8e0f\u307f\u3064\u3064\u3082\u3001DCGAN\u81ea\u4f53\u306f\u529b\u6280(\u305d\u308c\u306a\u308a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u6642\u9593)\u3067\u306a\u3093\u3068\u304b\u306a\u308b\u3088\u3046\u306b\u601d\u3044\u307e\u3057\u305f\u3002\u5e8f\u76e4\u306eloss/acc\u3092\u898b\u3066\u7121\u7406\u305d\u3046\u3060\u3063\u305f\u3089\u65e9\u3081\u306b\u8ae6\u3081\u305f\u308a\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u3089\u3067\u3082\u6642\u9593\u3092\u304b\u3051\u308c\u3070\u306a\u3093\u3068\u304b\u306a\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u5b66\u7fd2\u304c\u3046\u307e\u304f\u3067\u304d\u3066\u3044\u308b\u304b\u306e\u8a55\u4fa1\u3068\u3057\u3066train_loss/acc\u3092\u898b\u307e\u3057\u305f\u304c\u3001\u6700\u5e8f\u76e4\u3092\u4e57\u308a\u8d8a\u3048\u305f\u3042\u305f\u308a\u3067Generator\u306eloss\u304c\u4e0a\u304c\u308a\u59cb\u3081\u308b\u306e\u3067\u3001\u305d\u308c\u304c\u969b\u9650\u306a\u304f\u4e0a\u304c\u3063\u3066\u3044\u304d\u305d\u3046\u3060\u3063\u305f\u3089\u8ae6\u3081\u308b\u57fa\u6e96\u3068\u3057\u3066\u5f79\u7acb\u3061\u307e\u3057\u305f\u3002\u9006\u306b\u5024\u304c\u5b89\u5b9a\u3057\u3066\u3044\u3066\u3082\u306a\u304b\u306a\u304b\u826f\u3044\u753b\u50cf\u304c\u5f97\u3089\u308c\u306a\u304b\u3063\u305f\u308a\u3082\u3057\u305f\u306e\u3067\u3001\u4e2d\u76e4\u4ee5\u964d\u306e\u8a55\u4fa1\u306b\u306f\u3042\u307e\u308a\u5f79\u306b\u7acb\u305f\u306a\u305d\u3046\u3067\u3057\u305f\u3002\nval_loss/acc\u306f\u7b87\u6761\u66f8\u304d\u306b\u6319\u3052\u3066\u304a\u3044\u3066\u5168\u304f\u51fa\u3066\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u30b9\u30c6\u30c3\u30d7\u3054\u3068\u306e\u5909\u52d5\u304c\u3042\u307e\u308a\u306b\u3082\u5927\u304d\u304f\u3001\u307e\u305f\u9032\u884c\u65b9\u5411\u3082\u30d0\u30e9\u30d0\u30e9\u306a\u305f\u3081\u3001\u30a8\u30dd\u30c3\u30af\u306b\u4e00\u56de\u8a55\u4fa1\u3059\u308b\u3060\u3051\u306e\u5024\u306f\u5927\u3057\u3066\u610f\u5473\u304c\u306a\u304b\u3063\u305f\u3067\u3059\u3002\u505c\u6b62\u5224\u5b9a\u3068\u3057\u3066\u306f\u5f79\u306b\u306f\u305f\u3061\u307e\u3057\u305f\u3002\n\u4e8c\u8005\u9593\u306e\u88dc\u5b8c\u306b\u3088\u308b\u8a55\u4fa1\u306fDCGAN\u304c\u3046\u307e\u304f\u3067\u304d\u3066\u3044\u308b\u304b\u306e\u5ba2\u89b3\u7684\u57fa\u6e96\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\u305f\u3060\u305d\u3053\u304c\u30af\u30ea\u30a2\u3067\u304d\u3066\u3044\u3066\u3082\u3001\u30a8\u30dd\u30c3\u30af\u6570\u306e\u9032\u884c\u3068\u51fa\u529b\u306e\u305d\u308c\u3089\u3057\u3055\u306f\u5fc5\u305a\u3057\u3082\u4e00\u81f4\u3057\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u3069\u306e\u6bb5\u968e\u306e\u30e2\u30c7\u30eb\u304c\u4e00\u756a\u305d\u308c\u3063\u307d\u3044\u304b\u306f\u4e3b\u89b3\u7684\u306a\u5224\u65ad\u3092\u305b\u3056\u308b\u3092\u5f97\u306a\u3044\u3088\u3046\u3067\u3059(\u7279\u5fb4\u7a7a\u9593\u3092\u8d70\u67fb\u3057\u3066\u5143\u753b\u50cf\u306e\u4f55\u5272\u306b\u5bfe\u5fdc\u3059\u308b\u7279\u5fb4\u304c\u3067\u304d\u3066\u3044\u308b\u3068\u304b\u78ba\u8a8d\u3059\u308c\u3070\u826f\u3044\u304b\u3082\u3067\u3059\u304c\u3081\u3061\u3083\u304f\u3061\u3083\u5927\u5909\u305d\u3046)\u3002\n\nChainer\u306fforward\u3068backward\u304c\u5206\u304b\u308c\u3066\u3066\u306a\u3093\u3067\u3053\u3046\u306a\u3063\u3066\u308b\u3093\u3060\u308d\u3046\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306etrain step\u304c\u307e\u3055\u306b\u52b9\u679c\u7684\u306a\u72b6\u6cc1\u3060\u3063\u305f\u3088\u3046\u3067\u3059\u3002TensorFlow\u306e\u5b9f\u88c5\u3082\u3044\u304f\u3064\u304b\u898b\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u30b5\u30f3\u30d7\u30eb\u6b62\u307e\u308a\u306e\u79c1\u306b\u306f\u3088\u304f\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u3067\u3059\u2026\u2026\u3002\nKeras\u3067\u66f8\u304f\u3068\u305d\u308c\u3089\u3088\u308a\u308f\u304b\u308a\u3084\u3059\u304f\u306f\u306a\u308a\u307e\u3059\u304c\u3001train step\u3067\u306e\u5236\u9650\u304c\u3084\u306f\u308a\u6c17\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u8a18\u4e8b\u3067\u306f\u81ea\u7531\u5ea6\u304c\u4f4e\u3044\u3068\u3053\u308d\u304c\u76ee\u7acb\u3061\u307e\u3057\u305f\u304c\u3001\u753b\u50cf\u5206\u985e\u306a\u3069\u4e00\u822c\u7684\u306a\u554f\u984c\u3092\u3055\u304f\u3063\u3068\u66f8\u304f\u306e\u306b\u306f\u4e00\u756a\u5411\u3044\u3066\u3044\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u79c1\u3068\u540c\u3058\u304fTF\u52c9\u5f37\u3057\u305f\u304f\u306a\u3044\u4eba\u306f\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u305d\u308c\u3063\u307d\u3044\u5948\u843d\u6587\u5b57\u751f\u6210\u30e2\u30c7\u30eb\u304c\u3067\u304d\u305f\u306e\u3067\u3001\u30e1\u30a4\u30c9\u30a4\u30f3\u30a2\u30d3\u30b95\u5dfb\u767a\u58f2\u306e\u3053\u308d\u306b\u306f\u524d\u56de\u306e\u8a18\u4e8b\u3092\u30d6\u30e9\u30c3\u30b7\u30e5\u30a2\u30c3\u30d7\u3057\u305f\u306e\u3092\u6295\u7a3f\u3067\u304d\u305f\u3089\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n***\n11/20:\u8ffd\u8a18\n\u4e71\u6570\u306e\u6b21\u5143\u6570\u309230\u307e\u3067\u843d\u3068\u3057\u305f\u3068\u3053\u308d200\u30a8\u30dd\u30c3\u30af\u304f\u3089\u3044\u3067\u3082\u826f\u3044\u51fa\u529b\u304c\u5f97\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u8868\u73fe\u529b\u3068\u306e\u30c8\u30ec\u30fc\u30c9\u30aa\u30d5\u306b\u306a\u308b\u304c\u3001\u5143\u753b\u50cf\u306e\u591a\u69d8\u6027\u306b\u5fdc\u3058\u3066\u6b21\u5143\u6570\u3092\u8abf\u6574\u3059\u308b\u3068\u5b66\u7fd2\u901f\u5ea6\u3092\u5411\u4e0a\u3067\u304d\u305d\u3046\u3002\n\u51fa\u529b\u306e\u591a\u69d8\u6027\u306b\u3064\u3044\u3066\u306e\u5c3a\u5ea6\u304c\u3042\u308c\u3070\u3055\u3089\u306b\u3044\u308d\u3044\u308d\u63a2\u308c\u305d\u3046\u3060\u304c\u2026\u2026\u3002\n", "tags": ["Keras", "DeepLearning", "\u6a5f\u68b0\u5b66\u7fd2", "Python"]}