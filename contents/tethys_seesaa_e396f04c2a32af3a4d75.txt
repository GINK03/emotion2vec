{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\u3001\u52d5\u6a5f\nSystemVerilog\u306eUVM\u306f\u3001\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u547c\u3079\u308b\u308f\u3051\u3067\u3001\u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3(CI)\u3092\u4f7f\u7528\u3057\u305f\u30d6\u30ed\u30c3\u30af\u30c6\u30b9\u30c8\u304c\u3067\u304d\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3057\u305f\u3002\nCI\u3068\u3044\u3048\u3070Jenkins\u3067\u3059\u306d\u3002HDL\u3092\u4f7f\u3046\u3068\u306a\u308b\u3068\u3001\u3053\u3093\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306bHDL\u30b3\u30fc\u30c9\u3092Commit\u3057\u3066\u3001\u305d\u308c\u3092\u30c8\u30ea\u30ac\u3068\u3057\u3066\u30c6\u30b9\u30c8\u5b9f\u65bd\u3057\u3001\u7d50\u679c\u3092\u5f97\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002\nJenkins\u3068UVM\u3092\u4f7f\u3046\u3068\u3001Commit\u5f8c\u30d5\u30ed\u30fc\u306f\u81ea\u52d5\u5316\u3055\u308c\u3001\u304b\u3064\u305f\u304f\u3055\u3093\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u3092\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306b\u6d41\u3057\u8fbc\u3081\u308b\u306a\u3068\u601d\u3044\u3001\u307e\u305a\u306f\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\nOS\u306fCentOS 6.5\u3067\u3059\u3002\n\n\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\n\nHDL\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\nSystemVerilog\u306b\u5bfe\u5fdc\u3057\u305f\u9069\u5f53\u306a\u3084\u3064\u3067\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7ba1\u7406\u30c4\u30fc\u30eb\n\u666e\u901a\u306fGit\u3060\u308d\u3001\u3063\u3066\u611f\u3058\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306fBazaar\u3092\u4f7f\u3044\u307e\u3059\u3002\u81ea\u5206\u304cBazaar\u597d\u304d\u306a\u3093\u3067\u3059\u3088\u306d\u3002\u6b7b\u5146\u661f\u304c\u898b\u3048\u307e\u3059\u304c\u3002\n\nWeb\u30b5\u30fc\u30d0\nApache2\u3067\u3059\u3002\n\nCI\u30c4\u30fc\u30eb\nJenkins\u3067\u3059\u3002\n\n\u69cb\u7bc9\u4f5c\u696d\n\nJenkins\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n/etc/sysconfig/jenkins\u306e\u4e2d\u3092\u898b\u308b\u3068\u3001$JENKINS_HOME\u306f\u3001/var/lib/jenkins\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u8ffd\u52a0\u3057\u305f\u30d7\u30e9\u30b0\u30a4\u30f3\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305fJenkins\u306b\u3001\u4e0b\u8a18\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\nBazaar plugin\nPython Plugin\nSCM API Plugin\nSimple Theme Plugin\nxUnit Plugin\n\n\nBazzar\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nsudo yum install bzr\n\n\nApache+Bazaar\u74b0\u5883\u69cb\u7bc9\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nCentOS\u3060\u3068\u3042\u307e\u308a\u60c5\u5831\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u3001Apache\u3068WSGI\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001Bazaar\u306e\u30b9\u30de\u30fc\u30c8\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u308b\u307e\u3067\u3092\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nApache, WSGI\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nsudo yum install httpd mod_wsgi\n\n\nApache\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\u3053\u3053\u306b\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3042\u308bWSGI(mod_wsgi)\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u81ea\u5206\u306e\u5834\u5408\u3001CentOS\u306eApache\u306ehtml\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u76f4\u4e0b\u306b\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u4fdd\u5b58\u5834\u6240\u3068\u3057\u3066\u300cbzr\u300d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n/etc/httpd/conf/httpd.conf\nWSGIScriptAliasMatch ^/code/.*/\\.bzr/smart$ /var/www/cgi-bin/bzr.wsgi\n\nRewriteEngine On\nRewriteCond %{REQUEST_URI} !^/code/.*/\\.bzr/smart$\nRewriteRule ^/code/(.*/\\.bzr/.*)$ /var/www/html/bzr/$1 [L]\n\n<Directory \"/var/www/html/bzr\">\n    WSGIApplicationGroup %{GLOBAL}\n</Directory>\n\n\n\nWSGI\u306e\u8a2d\u5b9a\n\u3053\u308c\u3082\u516c\u5f0f\u901a\u308a\u3067\u3059\u3002\n\n/var/www/cgi-bin/bzr.wsgi\nfrom bzrlib.transport.http import wsgi\n\ndef application(environ, start_response):\n    app = wsgi.make_app(\n        root=\"/var/www/html/bzr\",\n        prefix=\"/bzr\",\n        readonly=False,\n        load_plugins=True,\n        enable_logging=False)\n    return app(environ, start_response)\n\n\n\nApache\u306e\u6709\u52b9\u5316\nsudo /sbin/chkconfig httpd on\nsudo /etc/init.d/httpd start\n\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u4f5c\u6210\u30fbJenkins\u306b\u3088\u308b\u30c6\u30b9\u30c8\u5b9f\u884c\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u4f5c\u6210\u3001add, commit\n\u5171\u7528\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u300cuvm_example\u300d\u3001\u30d6\u30e9\u30f3\u30c1\u3092\u300ctrunk\u300d\u3068\u3057\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u4f5c\u6210\ncd /var/www/html/bzr\nbzr init-repository uvm_example\ncd uvm_example\nbzr init trunk\n\n\nadd, commit\n\u3068\u308a\u3042\u3048\u305aUVM1.1d\u3092\u5165\u308c\u3066\u307f\u307e\u3059\u3002\ncp -pr $UVM_HOME/.. .\nbzr add uvm-1.1d\nbzr commit -m \"uvm init\" uvm-1.1d\n\n\nJenkins\u306e\u30b8\u30e7\u30d6\u4f5c\u6210\u30fb\u8a2d\u5b9a\nSystemVerilog\u95a2\u9023\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306a\u3069\u3042\u308a\u307e\u305b\u3093\u304b\u3089\u3001\u300c\u30d5\u30ea\u30fc\u30b9\u30bf\u30a4\u30eb\u30fb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u300d\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u4e3b\u306b\u8a2d\u5b9a\u3057\u305f\u7b87\u6240\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059\u3002Web\u753b\u9762\u306f\u4ee5\u4e0b\u306e\u611f\u3058\u3067\u3059\u3002\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7ba1\u7406\nBazaar plugin\u3092\u5165\u308c\u305f\u306e\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7ba1\u7406\u306bBazaar\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\n\u3053\u3053\u306b\u30d6\u30e9\u30f3\u30c1\uff08\u5171\u7528\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u306f\u306a\u3044\uff09URL\u3092\u5165\u308c\u307e\u3059\u3002\n\nSCM\u30dd\u30fc\u30ea\u30f3\u30b0\nBazaar\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3084\u30b9\u30af\u30ea\u30d7\u30c8\u3092commit\u3059\u308b\u3068\u3001\u30d6\u30e9\u30f3\u30c1\u304c\u66f4\u65b0\u3055\u308c\u308b\u306e\u3067\u3001Jenkins\u304c\u3053\u308c\u3092\u691c\u77e5\u3057\u3066\u3001\u81ea\u52d5\u7684\u306b\u30d3\u30eb\u30c9\u3092\u958b\u59cb\u3055\u305b\u307e\u3059\u3002\u3053\u3053\u3067\u306f5\u5206\u9593\u9694\u3067\u30dd\u30fc\u30ea\u30f3\u30b0\u3055\u305b\u307e\u3059\u3002\n\u521d\u3081\u306f\u3001commit\u76f4\u5f8c\u306bJenkins\u306bpush\u3055\u305b\u3066\u30d3\u30eb\u30c9\u3092\u8d70\u3089\u305b\u3088\u3046\u3068\u8003\u3048\u307e\u3057\u305f\u304c\u3001\u3046\u307e\u304f\u3044\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u30d3\u30eb\u30c9\n\u300c\u30b7\u30a7\u30eb\u306e\u5b9f\u884c\u300d\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3069\u3046\u3082Jenkins\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u304cJenkins\u3067\u5b9f\u884c\u3059\u308b\u305f\u3081\u304b\u3001\u30c4\u30fc\u30eb\u3078\u306ePATH\u3068\u304b\u518d\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u305f\u3081\u3001\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\nPATH\u8a2d\u5b9a\u304c\u3001\u300ceda.bashrc\u300d\u306b\u306a\u308a\u307e\u3059\u3002\n\nbuild.bash\nsource  env/eda.bashrc\n\ncd sim\n\nmake -f Makefile.vcs\n\n\n\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u547c\u3073\u51fa\u3059Make\u30d5\u30a1\u30a4\u30eb\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n\u3053\u3053\u3067\u306f\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u3068\u3057\u3066VCS\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u4ed6\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u3092\u4f7f\u3046\u5834\u5408\u306f$UVM_HOME/example\u306b\u3042\u308b\u306eMakefile.ius\u3084Makefile.questa\u3092\u53c2\u8003\u306b\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u3053\u3053\u3067\u306f\u3001$UVM_HOME/examples/integrated/ubus\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002XML\u95a2\u4fc2\u306f\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\nMakefile.vcs\nUVM_HOME=/usr/uvm/uvm-1.1d\nDUT     =/var/www/html/bzr/uvm_sample/trunk/uvm-1.1d\nXML     = /var/www/html/bzr/uvm_sample/trunk/xml\n\ninclude $(UVM_HOME)/examples/Makefile.vcs\n\nall: comp run\n\ncomp:\n        $(VCS) \\\n        -full64 \\\n        +incdir+$(DUT)/examples/integrated/ubus/sv \\\n        +incdir+$(DUT)/examples/integrated/ubus/examples \\\n        +incdir+$(XML) \\\n        $(XML)/xml_pkg.sv \\\n        $(DUT)/examples/integrated/ubus/examples/ubus_tb_top.sv\n\nrun:\n        $(SIMV) +UVM_TESTNAME=test_2m_4s\n        $(CHECK)\n\n\nclean:\n        @rm -fr \\\n          csrc \\\n          simv* \\\n          *.log \\\n          *.key \\\n          vc_hdrs.h \\\n          log.xml\n\n\n\u3053\u306e\u8fba\u3001Scons\u306b\u3057\u305f\u3044\u2026\u3002\n\n\u30d6\u30e9\u30f3\u30c1\u3078\u306eCommit\n\u8a71\u306f\u524d\u5f8c\u3057\u307e\u3059\u304c\u3001\u4e0a\u8a18\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5165\u3063\u305fsim\u3084env\u306a\u3069\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3082\u3042\u3089\u304b\u3058\u3081\u4f5c\u3063\u305f\u5f8c\u306bCommit\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\ncd /var/www/html/bzr/trunk\nbzr add sim env\nbzr commit -m \"test environment\" sim env xml\n\n\nJenkins\u5b9f\u884c\n\u5de6\u306b\u3042\u308b\u300c\u30d3\u30eb\u30c9\u306e\u5b9f\u884c\u300d\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u30d3\u30eb\u30c9\u5c65\u6b74\u304c\u52d5\u304d\u51fa\u3057\u3001\u6700\u7d42\u7684\u306b\u9752\u306b\u306a\u308c\u3070\u30c6\u30b9\u30c8\u306f\u30d1\u30b9\u3057\u307e\u3059\u3002\n\nConsol Output\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u5b9f\u884c\u30ed\u30b0\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\n\nSCM\u30dd\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u308bJenkins\u5b9f\u884c\nSCM\u30675\u5206\u9593\u9694\u3067\u30d6\u30e9\u30f3\u30c1\u3092\u76e3\u8996\u3057\u3066\u3044\u308b\u306e\u3067\u3001Bazaar\u3067\u30d6\u30e9\u30f3\u30c1\u3078commit\u3059\u308b\u3068\u3001Jenkins\u304c\u3053\u308c\u3092\u898b\u3064\u3051\u3066\u81ea\u52d5\u7684\u306b\u30d3\u30eb\u30c9\u3092\u5b9f\u884c\u3055\u305b\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u56f3\u306f\u3001Bazaar\u306e\u30d6\u30e9\u30f3\u30c1\u30925\u5206\u3054\u3068\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3001\u30d6\u30e9\u30f3\u30c1\u306b\u5909\u5316\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u4f55\u3082\u3057\u306a\u304b\u3063\u305f\u4f8b\u3067\u3059\u3002\n\ncommit\u3092\u5b9f\u65bd\u3059\u308b\u3068\u3001\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u304c\u3042\u3063\u305f\u3068\u30ed\u30b0\u306b\u8a18\u3055\u308c\u307e\u3059\u3002\n\n\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3067\u81ea\u52d5\u5b9f\u884c\u3055\u308c\u305f\u30d3\u30eb\u30c9\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u3067SCM\u30dd\u30fc\u30ea\u30f3\u30b0\u3067\u5b9f\u884c\u3057\u305f\u3088\u3068\u77e5\u3089\u305b\u3066\u304f\u308c\u307e\u3059\u3002\n\n\nXML\u5909\u63db\u30fb\u30ec\u30dd\u30fc\u30c8\u53d6\u5f97\n\u3044\u308d\u3044\u308d\u8abf\u3079\u3066\u3044\u305f\u3089\u3001Verilab\u793e\u304cJenkins\u3084XML\u3068\u3001\u30e1\u30bd\u30c9\u30ed\u30b8\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\nVerilab\u793e\u306e\u53d6\u308a\u7d44\u307f\n\nOVM\u74b0\u5883\u3067\u30d3\u30eb\u30c9\u5b9f\u884c\u5f8c\u306bPerl\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3066\u3001JUnit\u5f62\u5f0f\u306eXML\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3057\u305f\u4f8b\u3002(DVCON 2012)\nhttp://www.verilab.com/files/dvcon2012_ci_gray_mcgregor.pdf\nUVM\u74b0\u5883\u306b\u3066uvm_report_server\u3092\u7d99\u627f\u3057\u3001SystemVerilog\u304b\u3089XML\u3092\u51fa\u529b\u3055\u305b\u3001XML\u3092Python\u3067\u30d1\u30fc\u30b9\u3057\u3001\u30c6\u30b9\u30c8\u7d50\u679c\u3092\u898b\u3084\u3059\u304f\u3057\u305f\u4f8b\u3002(SNUG Austin 2013)\nhttp://www.verilab.com/files/SNUG_Applications_of_custom_UVM_report_servers.pdf\nJenkins\u3068Cadence\u306evManager\u3092\u9023\u643a\u3055\u305b\u3001vManager\u306e\u30c6\u30b9\u30c8\u7d50\u679c(CSV)\u3092Python\u3067\u30d1\u30fc\u30b9\u3057\u3001Jenkins\u3067CI\u3092\u5b9f\u65bd\u3057\u305f\u4f8b\u3002(DVCON 2014)\nhttp://www.verilab.com/files/DVCon2014_CI_and_MDV_finalpaper.pdf\nhttp://www.verilab.com/files/DVCon2014_CI_and_MDV_as_presented.pdf\n\n\u4e0a\u8a18\u306e\u3046\u3061\u3001\u4e0b\u306e\u4e8c\u3064\u306fBitbucket\u306b\u3066Apache2.0\u5f62\u5f0f\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nhttps://bitbucket.org/verilab/\n\nXML\u3092\u51fa\u529b\u3055\u305b\u3066\u307f\u308b\u3002\n2\u756a\u76ee\u306b\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308bSystemVerilog\u304b\u3089XML\u3092\u51fa\u529b\u3055\u305b\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3092\u7d44\u307f\u8fbc\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\u5143\u30bd\u30fc\u30b9\u306f\u3053\u308c\u3067\u3059\u3002\n\nxml_report_server.svh\n//----------------------------------------------------------------------\n//   Copyright 2012 Verilab Inc.\n//   Gordon McGregor (gordon.mcgregor@verilab.com)\n//\n//   All Rights Reserved Worldwide\n//\n//   Licensed under the Apache License, Version 2.0 (the\n//   \"License\"); you may not use this file except in\n//   compliance with the License.  You may obtain a copy of\n//   the License at\n//\n//       http://www.apache.org/licenses/LICENSE-2.0\n//\n//   Unless required by applicable law or agreed to in\n//   writing, software distributed under the License is\n//   distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n//   CONDITIONS OF ANY KIND, either express or implied.  See\n//   the License for the specific language governing\n//   permissions and limitations under the License.\n//----------------------------------------------------------------------\n\nimport uvm_pkg::*;\n`include \"uvm_macros.svh\"\n\n// Class: xml_report_server\n//\n// Replacement for uvm_report_server to log messages to an XML format\n// that can be more easily reused and manipulated by external tools/ viewers\n//\n// Basic XML schema\n// <log>\n//   <msg verbosity=\"val\" severity=\"string\" file=\"filename\" line=\"val\" id=\"string\" time=\"val\" context=\"string(optional)\">text</msg>\n//   ...\n//   <msg verbosity=\"val\" severity=\"string\" file=\"filename\" line=\"val\" id=\"string\" time=\"val\" context=\"string(optional)\">text</msg>\n//   <msg verbosity=\"val\" severity=\"string\" file=\"filename\" line=\"val\" id=\"string\" time=\"val\" context=\"string(optional)\">text</msg>\n//   ...\n// </log>\n//\nclass xml_report_server extends uvm_report_server;\n\n  uvm_report_server old_report_server;\n  uvm_report_global_server global_server;\n\n  // characters that are invalid XML that have to be encoded\n  string replacements[string] = '{ \"<\" : \"&lt;\",\n                                   \"&\" : \"&amp;\",\n                                   \">\" : \"&gt;\",\n                                   \"'\" : \"&apos;\",\n                                   \"\\\"\": \"&quot;\"\n                                 };\n  integer logfile_handle;\n\n  //Function: new\n  // constructor\n  function new(string name = \"xml_report_server\", log_filename = \"log.xml\");\n    super.new();\n    set_name(name);\n\n    global_server = new();\n    install_server();\n    logfile_handle = $fopen(log_filename, \"w\");\n    report_header(logfile_handle);\n  endfunction\n\n  // Function: install_server\n  // replace the global server with this server\n  function void install_server;\n    old_report_server = global_server.get_server();\n    global_server.set_server(this);\n  endfunction\n\n  // Function: enable_xml_logging\n  // Configure all components to use UVM_LOG actions to trigger XML capture\n  // has to be called after components have been instantiated (end of elaboration, run etc)\n  function void enable_xml_logging(uvm_component base=null);\n    uvm_root top;\n\n    if (base == null) begin\n      top = uvm_root::get();\n      base = top;\n    end\n\n    base.set_report_default_file_hier(logfile_handle);\n    base.set_report_severity_action_hier(UVM_INFO, UVM_DISPLAY | UVM_LOG);\n    base.set_report_severity_action_hier(UVM_WARNING, UVM_DISPLAY | UVM_LOG);\n    base.set_report_severity_action_hier(UVM_ERROR,   UVM_DISPLAY | UVM_LOG | UVM_COUNT);\n    base.set_report_severity_action_hier(UVM_FATAL,   UVM_DISPLAY | UVM_LOG | UVM_EXIT);\n  //  base.get_report_handler().dump_state();\n  endfunction\n\n  // Function: convert_verbosity_to_string\n  // Helper function to convert verbosity value to appropriate string, based on uvm_verbosity enum if an equivalent level\n  function string convert_verbosity_to_string(int verbosity);\n    uvm_verbosity l_verbosity;\n\n    if ($cast(l_verbosity, verbosity)) begin\n        convert_verbosity_to_string = l_verbosity.name();\n    end else begin\n        string l_str;\n        l_str.itoa(verbosity);\n        convert_verbosity_to_string = l_str;\n    end\n  endfunction\n\n  // Function: report_header\n  // Output standard XML header to log file\n  function void report_header(UVM_FILE file = 0);\n    f_display(file, \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<?xml-stylesheet type=\\\"text/xsl\\\" href=\\\"uvm.xsl\\\"?><log>\\n\");\n  endfunction\n\n  // Function: report_footer\n  // Output XML closing tags to log file\n  function void report_footer(UVM_FILE file = 0);\n    integer result;\n    $fflush(file);\n    result = $fseek(logfile_handle, 0, 2);\n    f_display(logfile_handle, \"</log>\");\n  endfunction\n\n  // Function: summarize\n  // tidy up logging and restore global report server\n  function void summarize(UVM_FILE file = 0);\n    report_footer();\n    global_server.set_server(old_report_server);\n    $fclose(logfile_handle);\n    old_report_server.report_summarize(file);\n    old_report_server.summarize(file);\n  endfunction\n\n  // Function: process_report\n  //\n  // Processes the message's actions.\n  virtual function void process_report(\n    uvm_severity severity,\n    string name,\n    string id,\n    string message,\n    uvm_action action,\n    UVM_FILE file,\n    string filename,\n    int line,\n    string composed_message,\n    int verbosity_level,\n    uvm_report_object client\n    );\n    // update counts\n    incr_severity_count(severity);\n    incr_id_count(id);\n\n    if(action & UVM_DISPLAY)\n      $display(\"%s\",composed_message);\n\n    // if log is set we need to send to the file but not resend to the\n    // display. So, we need to mask off stdout for an mcd or we need\n    // to ignore the stdout file handle for a file handle.\n    if(action & UVM_LOG)\n      if( (file == 0) || (file != 32'h8000_0001) ) //ignore stdout handle\n      begin\n        UVM_FILE tmp_file = file;\n        if( (file&32'h8000_0000) == 0) //is an mcd so mask off stdout\n        begin\n          tmp_file = file & 32'hffff_fffe;\n        end\n        composed_message = compose_xml_message(severity, verbosity_level, name, id, message, filename, line);\n        f_display(tmp_file, composed_message);\n      end\n\n    if(action & UVM_EXIT) client.die();\n\n    if(action & UVM_COUNT) begin\n      if(get_max_quit_count() != 0) begin\n        incr_quit_count();\n        if(is_quit_count_reached()) begin\n          client.die();\n        end\n      end\n    end\n\n    if (action & UVM_STOP) $stop;\n\n  endfunction\n\n  // Function: sanitize\n  //\n  // Given an unencoded input string, replaces illegal characters for XML data format\n  function string sanitize(string data);\n\n    for(int i = data.len()-1; i >= 0; i--) begin\n      if (replacements.exists(data[i])) begin\n          data = {data.substr(0,i-1), replacements[data[i]], data.substr(i+1, data.len()-1)};\n      end\n    end\n    return data;\n  endfunction : sanitize\n\n\n  // Function: xla\n  // XML Attribute\n  // Generate an XML attribute ( tag = \"data\" )\n  function string xla(string tag, string data);\n    xla=\"\";\n    if (data != \"\") begin\n      xla = {\" \", tag, \"=\\\"\", sanitize(data), \"\\\" \"};\n    end\n  endfunction\n\n    // Function: xle\n    // XML Element\n    // Generate an XML element ( <tag attributes>data</tag> )\n  function string xle(string tag, string data, string attributes=\"\");\n    xle = \"\";\n    if (data != \"\") begin\n      xle = {\"<\", tag, attributes, \">\", sanitize(data), \"</\", tag, \">\\n\"};\n    end\n  endfunction\n\n  // Function: compose_log_report_message\n  // Generate the XML encapsulated report message, for logging\n  virtual function string compose_xml_message(\n    uvm_severity severity,\n    int verbosity,\n    string name,\n    string id,\n    string message,\n    string filename,\n    int    line\n    );\n    uvm_severity_type sv;\n    string severity_string;\n    string time_str;\n    string line_str;\n    string verbosity_str;\n    integer result;\n\n    sv = uvm_severity_type'(severity);\n    severity_string = sv.name();\n    $swrite(time_str, \"%0t\", $time);\n    line_str.itoa(line);\n    verbosity_str.itoa(verbosity);\n\n    compose_xml_message = xle(\"msg\", message,\n                             {xla(\"verbosity\", verbosity_str),\n                              xla(\"severity\", severity_string),\n                              xla(\"file\", filename),\n                              xla(\"line\", line_str),\n                              xla(\"id\", id),\n                              xla(\"time\", time_str),\n                              xla(\"context\", name) });\n  endfunction\n\n\nendclass\n\n\n\u3053\u306exml_report_server\u30af\u30e9\u30b9\u3092\u3001uvm_env\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u3044\u308b$UVM_HOME/examples/integrated/ubus/examples/ubus_examples_tb.sv\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3055\u305b\u3001end_of_elaboration_phase\u306b\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\nubus_expamples_tb.sv\n//----------------------------------------------------------------------\n//   Copyright 2007-2010 Mentor Graphics Corporation\n//   Copyright 2007-2011 Cadence Design Systems, Inc.\n//   Copyright 2010 Synopsys, Inc.\n//   All Rights Reserved Worldwide\n//\n//   Licensed under the Apache License, Version 2.0 (the\n//   \"License\"); you may not use this file except in\n//   compliance with the License.  You may obtain a copy of\n//   the License at\n//\n//       http://www.apache.org/licenses/LICENSE-2.0\n//\n//   Unless required by applicable law or agreed to in\n//   writing, software distributed under the License is\n//   distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n//   CONDITIONS OF ANY KIND, either express or implied.  See\n//   the License for the specific language governing\n//   permissions and limitations under the License.\n//----------------------------------------------------------------------\n\n`include \"ubus_example_scoreboard.sv\"\n`include \"ubus_master_seq_lib.sv\"\n`include \"ubus_example_master_seq_lib.sv\"\n`include \"ubus_slave_seq_lib.sv\"\n\n`include \"xml_report_server.svh\"\n\n//------------------------------------------------------------------------------\n//\n// CLASS: ubus_example_tb\n//\n//------------------------------------------------------------------------------\n\nclass ubus_example_tb extends uvm_env;\n\n  // Provide implementations of virtual methods such as get_type_name and create\n  `uvm_component_utils(ubus_example_tb)\n\n  // ubus environment\n  ubus_env ubus0;\n\n  // Scoreboard to check the memory operation of the slave.\n  ubus_example_scoreboard scoreboard0;\n\n  // XML logging server\n  xml_report_server xml_reporter;\n\n\n  // new\n  function new (string name, uvm_component parent=null);\n    super.new(name, parent);\n    xml_reporter = new();\n  endfunction : new\n\n  // build_phase\n  virtual function void build_phase(uvm_phase phase);\n    super.build_phase(phase);\n    uvm_config_db#(int)::set(this,\"ubus0\",\n                   \"num_masters\", 1);\n    uvm_config_db#(int)::set(this,\"ubus0\",\n                   \"num_slaves\", 1);\n\n    ubus0 = ubus_env::type_id::create(\"ubus0\", this);\n    scoreboard0 = ubus_example_scoreboard::type_id::create(\"scoreboard0\", this);\n  endfunction : build_phase\n\n  function void connect_phase(uvm_phase phase);\n    // Connect slave0 monitor to scoreboard\n    ubus0.slaves[0].monitor.item_collected_port.connect(\n      scoreboard0.item_collected_export);\n  endfunction : connect_phase\n\n  function void end_of_elaboration_phase(uvm_phase phase);\n    // Set up slave address map for ubus0 (basic default)\n    ubus0.set_slave_address_map(\"slaves[0]\", 0, 16'hffff);\n\n    // Enable XML logging \n    xml_reporter.enable_xml_logging();\n  endfunction : end_of_elaboration_phase\n\nendclass : ubus_example_tb\n\n\nXML\u51fa\u529b\u95a2\u4fc2\u306f\u3001\u5f8c\u3005\u62e1\u5f35\u306e\u305f\u3081\u306bPackege\u5316\u3055\u305b\u307e\u3059\u3002\n\nxml_pkg.sv\npackage xml_pkg;\n  import uvm_pkg::*;\n\n  `include \"xml_report_server.svh\"\nendpackage\n\n\n\nXML\u51fa\u529b\n\u3053\u3053\u307e\u3067\u306e\u30b3\u30fc\u30c9\u3092Commit\u3055\u305b\u3001Jenkins\u306b\u3066\u5b9f\u884c\u3055\u305b\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u3067XML\u304c\u66f8\u304d\u51fa\u3055\u308c\u307e\u3057\u305f\u3002\n\nlog.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"uvm.xsl\"?><log>\n\n<msg verbosity=\"100\"  severity=\"UVM_INFO\"  file=\"/var/www/html/bzr/uvm_sample/trunk/uvm-1.1d/examples/integrated/ubus/ex\namples/test_lib.sv\"  line=\"55\"  id=\"test_2m_4s\"  time=\"0\"  context=\"uvm_test_top\" >Printing the test topology :\n--------------------------------------------------------------------\nName                         Type                     Size  Value   \n--------------------------------------------------------------------\nuvm_test_top                 test_2m_4s               -     @459    \n  ubus_example_tb0           ubus_example_tb          -     @493    \n    scoreboard0              ubus_example_scoreboard  -     @513    \n      item_collected_export  uvm_analysis_imp         -     @521    \n      disable_scoreboard     integral                 1     &apos;h0     \n      num_writes             integral                 32    &apos;d0     \n      num_init_reads         integral                 32    &apos;d0     \n      num_uninit_reads       integral                 32    &apos;d0     \n      recording_detail       uvm_verbosity            32    UVM_FULL\n    ubus0                    ubus_env                 -     @505    \n      bus_monitor            ubus_bus_monitor         -     @535    \n      masters[0]             ubus_master_agent        -     @567    \n      masters[1]             ubus_master_agent        -     @579    \n      slaves[0]              ubus_slave_agent         -     @590    \n      slaves[1]              ubus_slave_agent         -     @598    \n      slaves[2]              ubus_slave_agent         -     @606    \n      slaves[3]              ubus_slave_agent         -     @614    \n      has_bus_monitor        integral                 1     &apos;h1     \n      num_masters            integral                 32    &apos;h2     \n      num_slaves             integral                 32    &apos;h4     \n      intf_checks_enable     integral                 1     &apos;h1     \n      intf_coverage_enable   integral                 1     &apos;h1     \n      recording_detail       uvm_verbosity            32    UVM_FULL\n    recording_detail         uvm_verbosity            32    UVM_FULL\n--------------------------------------------------------------------\n</msg>\n\n<msg verbosity=\"0\"  severity=\"UVM_INFO\"  file=\"/var/www/html/bzr/uvm_sample/trunk/uvm-1.1d/examples/integrated/ubus/exam\nples/ubus_example_master_seq_lib.sv\"  line=\"236\"  id=\"loop_read_modify_write_seq\"  time=\"0\"  context=\"uvm_test_top.ubus_\nexample_tb0.ubus0.masters[0].sequencer@@loop_read_modify_write_seq\" >loop_read_modify_write_seq starting...itr = 6</msg>\n\n<msg verbosity=\"0\"  severity=\"UVM_INFO\"  file=\"/var/www/html/bzr/uvm_sample/trunk/uvm-1.1d/examples/integrated/ubus/exam\nples/ubus_example_master_seq_lib.sv\"  line=\"236\"  id=\"loop_read_modify_write_seq\"  time=\"0\"  context=\"uvm_test_top.ubus_\nexample_tb0.ubus0.masters[1].sequencer@@loop_read_modify_write_seq\" >loop_read_modify_write_seq starting...itr = 8</msg>\n\n(\u4e2d\u7565)\n\n<msg verbosity=\"100\"  severity=\"UVM_INFO\"  file=\"/var/www/html/bzr/uvm_sample/trunk/uvm-1.1d/examples/integrated/ubus/sv/ubus_slave_monitor.sv\"  line=\"243\"  id=\"uvm_test_top.ubus_example_tb0.ubus0.slaves[3].monitor\"  time=\"3030\"  context=\"uvm_test_top.ubus_example_tb0.ubus0.slaves[3].monitor\" >Covergroup &apos;cov_trans&apos; coverage: 30.000000</msg>\n\n<msg verbosity=\"0\"  severity=\"UVM_INFO\"  file=\"/var/www/html/bzr/uvm_sample/trunk/uvm-1.1d/examples/integrated/ubus/examples/test_lib.sv\"  line=\"70\"  id=\"test_2m_4s\"  time=\"3030\"  context=\"uvm_test_top\" >** UVM TEST PASSED **</msg>\n\n</log>\n\n\n\n\u304a\u308f\u308a\u306b\nJenkins\u306f\u5206\u6563\u30d3\u30eb\u30c9\u30fb\u30c6\u30b9\u30c8\u7b49\u304c\u3042\u308b\u305f\u3081\u3001UVM\u306eUVM_TEST\u3084UVM_SEQUENCE\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u6570\u306b\u4f9d\u308a\u307e\u3059\u304c\u3001\u591a\u6570\u306e\u30c6\u30b9\u30c8\u3092\u540c\u6642\u5b9f\u884c\u3057\u304b\u3064\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u5bcc\u3080\u74b0\u5883\u304c\u69cb\u7bc9\u53ef\u80fd\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u3082\u3063\u3068\u3082\u3001\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u69cb\u7bc9\u306f\u5927\u5909\u306a\u3093\u3067\u3059\u3051\u3069\u306d\u3002\n\u5f8c\u65e5\u3001XML\u306b\u3088\u308b\u30ec\u30dd\u30fc\u30c8\u51fa\u529b\u3092Junit\u3067\u8aad\u3081\u308b\u5f62\u5f0f\u306b\u5408\u308f\u305b\u3001Jenkins\u3067\u7d71\u8a08\u304c\u53d6\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n#\u306f\u3058\u3081\u306b\u3001\u52d5\u6a5f\nSystemVerilog\u306eUVM\u306f\u3001\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u547c\u3079\u308b\u308f\u3051\u3067\u3001\u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3(CI)\u3092\u4f7f\u7528\u3057\u305f\u30d6\u30ed\u30c3\u30af\u30c6\u30b9\u30c8\u304c\u3067\u304d\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3057\u305f\u3002\nCI\u3068\u3044\u3048\u3070Jenkins\u3067\u3059\u306d\u3002HDL\u3092\u4f7f\u3046\u3068\u306a\u308b\u3068\u3001\u3053\u3093\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3057\u3087\u3046\u304b\u3002\n\n![flow.png](https://qiita-image-store.s3.amazonaws.com/0/32925/82e5a6fc-b968-8d2e-4552-88f6c3dcf30b.png)\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306bHDL\u30b3\u30fc\u30c9\u3092Commit\u3057\u3066\u3001\u305d\u308c\u3092\u30c8\u30ea\u30ac\u3068\u3057\u3066\u30c6\u30b9\u30c8\u5b9f\u65bd\u3057\u3001\u7d50\u679c\u3092\u5f97\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002\nJenkins\u3068UVM\u3092\u4f7f\u3046\u3068\u3001Commit\u5f8c\u30d5\u30ed\u30fc\u306f\u81ea\u52d5\u5316\u3055\u308c\u3001\u304b\u3064\u305f\u304f\u3055\u3093\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u3092\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306b\u6d41\u3057\u8fbc\u3081\u308b\u306a\u3068\u601d\u3044\u3001\u307e\u305a\u306f\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\nOS\u306fCentOS 6.5\u3067\u3059\u3002\n\n#\u5fc5\u8981\u306a\u30c4\u30fc\u30eb\n##HDL\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\nSystemVerilog\u306b\u5bfe\u5fdc\u3057\u305f\u9069\u5f53\u306a\u3084\u3064\u3067\u3059\u3002\n##\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7ba1\u7406\u30c4\u30fc\u30eb\n\u666e\u901a\u306fGit\u3060\u308d\u3001\u3063\u3066\u611f\u3058\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306fBazaar\u3092\u4f7f\u3044\u307e\u3059\u3002\u81ea\u5206\u304cBazaar\u597d\u304d\u306a\u3093\u3067\u3059\u3088\u306d\u3002[\u6b7b\u5146\u661f](https://lists.gnu.org/archive/html/emacs-devel/2014-01/msg00005.html)\u304c\u898b\u3048\u307e\u3059\u304c\u3002\n##Web\u30b5\u30fc\u30d0\nApache2\u3067\u3059\u3002\n##CI\u30c4\u30fc\u30eb\nJenkins\u3067\u3059\u3002\n\n#\u69cb\u7bc9\u4f5c\u696d\n##Jenkins\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n[\u3053\u3061\u3089](http://oscasierra.net/2013/05/jenkins-to-redhat/)\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n/etc/sysconfig/jenkins\u306e\u4e2d\u3092\u898b\u308b\u3068\u3001$JENKINS_HOME\u306f\u3001`/var/lib/jenkins`\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n###\u8ffd\u52a0\u3057\u305f\u30d7\u30e9\u30b0\u30a4\u30f3\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305fJenkins\u306b\u3001\u4e0b\u8a18\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n* Bazaar plugin\n* Python Plugin\n* SCM API Plugin\n* Simple Theme Plugin\n* xUnit Plugin\n\n###Bazzar\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```sh\nsudo yum install bzr\n```\n\n##Apache+Bazaar\u74b0\u5883\u69cb\u7bc9\n[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://doc.bazaar.canonical.com/beta/ja/user-guide/http_smart_server.html)\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nCentOS\u3060\u3068\u3042\u307e\u308a\u60c5\u5831\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u3001Apache\u3068WSGI\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001Bazaar\u306e\u30b9\u30de\u30fc\u30c8\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u308b\u307e\u3067\u3092\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n###Apache, WSGI\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n```sh\nsudo yum install httpd mod_wsgi\n```\n\n###Apache\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\u3053\u3053\u306b\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3042\u308bWSGI(mod_wsgi)\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u81ea\u5206\u306e\u5834\u5408\u3001CentOS\u306eApache\u306ehtml\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u76f4\u4e0b\u306b\u3001\u30ea\u30dd\u30b8\u30c8\u30ea\u4fdd\u5b58\u5834\u6240\u3068\u3057\u3066\u300cbzr\u300d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n```sh:/etc/httpd/conf/httpd.conf\nWSGIScriptAliasMatch ^/code/.*/\\.bzr/smart$ /var/www/cgi-bin/bzr.wsgi\n\nRewriteEngine On\nRewriteCond %{REQUEST_URI} !^/code/.*/\\.bzr/smart$\nRewriteRule ^/code/(.*/\\.bzr/.*)$ /var/www/html/bzr/$1 [L]\n\n<Directory \"/var/www/html/bzr\">\n    WSGIApplicationGroup %{GLOBAL}\n</Directory>\n```\n\n###WSGI\u306e\u8a2d\u5b9a\n\u3053\u308c\u3082\u516c\u5f0f\u901a\u308a\u3067\u3059\u3002\n\n```python:/var/www/cgi-bin/bzr.wsgi\nfrom bzrlib.transport.http import wsgi\n\ndef application(environ, start_response):\n    app = wsgi.make_app(\n        root=\"/var/www/html/bzr\",\n        prefix=\"/bzr\",\n        readonly=False,\n        load_plugins=True,\n        enable_logging=False)\n    return app(environ, start_response)\n```\n\n###Apache\u306e\u6709\u52b9\u5316\n\n```sh\nsudo /sbin/chkconfig httpd on\nsudo /etc/init.d/httpd start\n```\n\n#\u30ea\u30dd\u30b8\u30c8\u30ea\u4f5c\u6210\u30fbJenkins\u306b\u3088\u308b\u30c6\u30b9\u30c8\u5b9f\u884c\n\n##\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u4f5c\u6210\u3001add, commit\n\u5171\u7528\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u300cuvm_example\u300d\u3001\u30d6\u30e9\u30f3\u30c1\u3092\u300ctrunk\u300d\u3068\u3057\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n###\u30ea\u30dd\u30b8\u30c8\u30ea\u4f5c\u6210\n\n```sh\ncd /var/www/html/bzr\nbzr init-repository uvm_example\ncd uvm_example\nbzr init trunk\n```\n\n###add, commit\n\u3068\u308a\u3042\u3048\u305aUVM1.1d\u3092\u5165\u308c\u3066\u307f\u307e\u3059\u3002\n\n```sh\ncp -pr $UVM_HOME/.. .\nbzr add uvm-1.1d\nbzr commit -m \"uvm init\" uvm-1.1d\n```\n\n##Jenkins\u306e\u30b8\u30e7\u30d6\u4f5c\u6210\u30fb\u8a2d\u5b9a\nSystemVerilog\u95a2\u9023\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306a\u3069\u3042\u308a\u307e\u305b\u3093\u304b\u3089\u3001\u300c\u30d5\u30ea\u30fc\u30b9\u30bf\u30a4\u30eb\u30fb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u300d\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u4e3b\u306b\u8a2d\u5b9a\u3057\u305f\u7b87\u6240\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059\u3002Web\u753b\u9762\u306f\u4ee5\u4e0b\u306e\u611f\u3058\u3067\u3059\u3002\n\n![jnkns2.png](https://qiita-image-store.s3.amazonaws.com/0/32925/8ada042b-ec92-0be2-24e3-50fad7e3a29a.png)\n\n###\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7ba1\u7406\nBazaar plugin\u3092\u5165\u308c\u305f\u306e\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7ba1\u7406\u306bBazaar\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\n\u3053\u3053\u306b\u30d6\u30e9\u30f3\u30c1\uff08\u5171\u7528\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u306f\u306a\u3044\uff09URL\u3092\u5165\u308c\u307e\u3059\u3002\n\n###SCM\u30dd\u30fc\u30ea\u30f3\u30b0\nBazaar\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3084\u30b9\u30af\u30ea\u30d7\u30c8\u3092commit\u3059\u308b\u3068\u3001\u30d6\u30e9\u30f3\u30c1\u304c\u66f4\u65b0\u3055\u308c\u308b\u306e\u3067\u3001Jenkins\u304c\u3053\u308c\u3092\u691c\u77e5\u3057\u3066\u3001\u81ea\u52d5\u7684\u306b\u30d3\u30eb\u30c9\u3092\u958b\u59cb\u3055\u305b\u307e\u3059\u3002\u3053\u3053\u3067\u306f5\u5206\u9593\u9694\u3067\u30dd\u30fc\u30ea\u30f3\u30b0\u3055\u305b\u307e\u3059\u3002\n\u521d\u3081\u306f\u3001commit\u76f4\u5f8c\u306bJenkins\u306bpush\u3055\u305b\u3066\u30d3\u30eb\u30c9\u3092\u8d70\u3089\u305b\u3088\u3046\u3068\u8003\u3048\u307e\u3057\u305f\u304c\u3001\u3046\u307e\u304f\u3044\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n###\u30d3\u30eb\u30c9\n\u300c\u30b7\u30a7\u30eb\u306e\u5b9f\u884c\u300d\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3069\u3046\u3082Jenkins\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u304cJenkins\u3067\u5b9f\u884c\u3059\u308b\u305f\u3081\u304b\u3001\u30c4\u30fc\u30eb\u3078\u306ePATH\u3068\u304b\u518d\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u305f\u3081\u3001\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\nPATH\u8a2d\u5b9a\u304c\u3001\u300ceda.bashrc\u300d\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n```sh:build.bash\nsource  env/eda.bashrc\n\ncd sim\n\nmake -f Makefile.vcs\n```\n\n\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u547c\u3073\u51fa\u3059Make\u30d5\u30a1\u30a4\u30eb\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n\u3053\u3053\u3067\u306f\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u3068\u3057\u3066VCS\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u4ed6\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u3092\u4f7f\u3046\u5834\u5408\u306f`$UVM_HOME/example`\u306b\u3042\u308b\u306e`Makefile.ius`\u3084`Makefile.questa`\u3092\u53c2\u8003\u306b\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u3053\u3053\u3067\u306f\u3001`$UVM_HOME/examples/integrated/ubus`\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002XML\u95a2\u4fc2\u306f\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\n```mf:Makefile.vcs\nUVM_HOME=/usr/uvm/uvm-1.1d\nDUT     =/var/www/html/bzr/uvm_sample/trunk/uvm-1.1d\nXML     = /var/www/html/bzr/uvm_sample/trunk/xml\n\ninclude $(UVM_HOME)/examples/Makefile.vcs\n\nall: comp run\n\ncomp:\n        $(VCS) \\\n        -full64 \\\n        +incdir+$(DUT)/examples/integrated/ubus/sv \\\n        +incdir+$(DUT)/examples/integrated/ubus/examples \\\n        +incdir+$(XML) \\\n        $(XML)/xml_pkg.sv \\\n        $(DUT)/examples/integrated/ubus/examples/ubus_tb_top.sv\n\nrun:\n        $(SIMV) +UVM_TESTNAME=test_2m_4s\n        $(CHECK)\n\n\nclean:\n        @rm -fr \\\n          csrc \\\n          simv* \\\n          *.log \\\n          *.key \\\n          vc_hdrs.h \\\n          log.xml\n```\n\n\u3053\u306e\u8fba\u3001[Scons](http://www.scons.org/)\u306b\u3057\u305f\u3044\u2026\u3002\n\n###\u30d6\u30e9\u30f3\u30c1\u3078\u306eCommit\n\u8a71\u306f\u524d\u5f8c\u3057\u307e\u3059\u304c\u3001\u4e0a\u8a18\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5165\u3063\u305fsim\u3084env\u306a\u3069\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3082\u3042\u3089\u304b\u3058\u3081\u4f5c\u3063\u305f\u5f8c\u306bCommit\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\n```sh\ncd /var/www/html/bzr/trunk\nbzr add sim env\nbzr commit -m \"test environment\" sim env xml\n```\n\n##Jenkins\u5b9f\u884c\n\u5de6\u306b\u3042\u308b\u300c\u30d3\u30eb\u30c9\u306e\u5b9f\u884c\u300d\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u30d3\u30eb\u30c9\u5c65\u6b74\u304c\u52d5\u304d\u51fa\u3057\u3001\u6700\u7d42\u7684\u306b\u9752\u306b\u306a\u308c\u3070\u30c6\u30b9\u30c8\u306f\u30d1\u30b9\u3057\u307e\u3059\u3002\n\n![jnkns1.png](https://qiita-image-store.s3.amazonaws.com/0/32925/e742138a-e0e4-e714-c9f3-7fb2775ece25.png)\n\nConsol Output\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u5b9f\u884c\u30ed\u30b0\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\n\n##SCM\u30dd\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u308bJenkins\u5b9f\u884c\nSCM\u30675\u5206\u9593\u9694\u3067\u30d6\u30e9\u30f3\u30c1\u3092\u76e3\u8996\u3057\u3066\u3044\u308b\u306e\u3067\u3001Bazaar\u3067\u30d6\u30e9\u30f3\u30c1\u3078commit\u3059\u308b\u3068\u3001Jenkins\u304c\u3053\u308c\u3092\u898b\u3064\u3051\u3066\u81ea\u52d5\u7684\u306b\u30d3\u30eb\u30c9\u3092\u5b9f\u884c\u3055\u305b\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u56f3\u306f\u3001Bazaar\u306e\u30d6\u30e9\u30f3\u30c1\u30925\u5206\u3054\u3068\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3001\u30d6\u30e9\u30f3\u30c1\u306b\u5909\u5316\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u4f55\u3082\u3057\u306a\u304b\u3063\u305f\u4f8b\u3067\u3059\u3002\n\n![jnkns3.png](https://qiita-image-store.s3.amazonaws.com/0/32925/8727d321-ba23-aaf5-eaf1-4d26c5156cf8.png)\n\ncommit\u3092\u5b9f\u65bd\u3059\u308b\u3068\u3001\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u304c\u3042\u3063\u305f\u3068\u30ed\u30b0\u306b\u8a18\u3055\u308c\u307e\u3059\u3002\n\n![jnkns4.png](https://qiita-image-store.s3.amazonaws.com/0/32925/fe6af28b-ac0e-52aa-6f9f-b3d4bf58d588.png)\n\n\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3067\u81ea\u52d5\u5b9f\u884c\u3055\u308c\u305f\u30d3\u30eb\u30c9\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u3067SCM\u30dd\u30fc\u30ea\u30f3\u30b0\u3067\u5b9f\u884c\u3057\u305f\u3088\u3068\u77e5\u3089\u305b\u3066\u304f\u308c\u307e\u3059\u3002\n\n![jnkns5.png](https://qiita-image-store.s3.amazonaws.com/0/32925/023b6cae-0b4b-17d5-df24-9c8924ce3c89.png)\n\n##XML\u5909\u63db\u30fb\u30ec\u30dd\u30fc\u30c8\u53d6\u5f97\n\u3044\u308d\u3044\u308d\u8abf\u3079\u3066\u3044\u305f\u3089\u3001Verilab\u793e\u304cJenkins\u3084XML\u3068\u3001\u30e1\u30bd\u30c9\u30ed\u30b8\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n###Verilab\u793e\u306e\u53d6\u308a\u7d44\u307f\n* OVM\u74b0\u5883\u3067\u30d3\u30eb\u30c9\u5b9f\u884c\u5f8c\u306bPerl\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3066\u3001JUnit\u5f62\u5f0f\u306eXML\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3057\u305f\u4f8b\u3002(DVCON 2012)\nhttp://www.verilab.com/files/dvcon2012_ci_gray_mcgregor.pdf\n\n* UVM\u74b0\u5883\u306b\u3066`uvm_report_server`\u3092\u7d99\u627f\u3057\u3001SystemVerilog\u304b\u3089XML\u3092\u51fa\u529b\u3055\u305b\u3001XML\u3092Python\u3067\u30d1\u30fc\u30b9\u3057\u3001\u30c6\u30b9\u30c8\u7d50\u679c\u3092\u898b\u3084\u3059\u304f\u3057\u305f\u4f8b\u3002(SNUG Austin 2013)\nhttp://www.verilab.com/files/SNUG_Applications_of_custom_UVM_report_servers.pdf\n* Jenkins\u3068Cadence\u306evManager\u3092\u9023\u643a\u3055\u305b\u3001vManager\u306e\u30c6\u30b9\u30c8\u7d50\u679c(CSV)\u3092Python\u3067\u30d1\u30fc\u30b9\u3057\u3001Jenkins\u3067CI\u3092\u5b9f\u65bd\u3057\u305f\u4f8b\u3002(DVCON 2014)\nhttp://www.verilab.com/files/DVCon2014_CI_and_MDV_finalpaper.pdf\nhttp://www.verilab.com/files/DVCon2014_CI_and_MDV_as_presented.pdf\n\n **\u4e0a\u8a18\u306e\u3046\u3061\u3001\u4e0b\u306e\u4e8c\u3064\u306fBitbucket\u306b\u3066Apache2.0\u5f62\u5f0f\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002**\nhttps://bitbucket.org/verilab/\n\n###XML\u3092\u51fa\u529b\u3055\u305b\u3066\u307f\u308b\u3002\n2\u756a\u76ee\u306b\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308bSystemVerilog\u304b\u3089XML\u3092\u51fa\u529b\u3055\u305b\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3092\u7d44\u307f\u8fbc\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\u5143\u30bd\u30fc\u30b9\u306f\u3053\u308c\u3067\u3059\u3002\n\n```sv:xml_report_server.svh\n//----------------------------------------------------------------------\n//   Copyright 2012 Verilab Inc.\n//   Gordon McGregor (gordon.mcgregor@verilab.com)\n//\n//   All Rights Reserved Worldwide\n//\n//   Licensed under the Apache License, Version 2.0 (the\n//   \"License\"); you may not use this file except in\n//   compliance with the License.  You may obtain a copy of\n//   the License at\n//\n//       http://www.apache.org/licenses/LICENSE-2.0\n//\n//   Unless required by applicable law or agreed to in\n//   writing, software distributed under the License is\n//   distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n//   CONDITIONS OF ANY KIND, either express or implied.  See\n//   the License for the specific language governing\n//   permissions and limitations under the License.\n//----------------------------------------------------------------------\n\nimport uvm_pkg::*;\n`include \"uvm_macros.svh\"\n\n// Class: xml_report_server\n//\n// Replacement for uvm_report_server to log messages to an XML format\n// that can be more easily reused and manipulated by external tools/ viewers\n//\n// Basic XML schema\n// <log>\n//   <msg verbosity=\"val\" severity=\"string\" file=\"filename\" line=\"val\" id=\"string\" time=\"val\" context=\"string(optional)\">text</msg>\n//   ...\n//   <msg verbosity=\"val\" severity=\"string\" file=\"filename\" line=\"val\" id=\"string\" time=\"val\" context=\"string(optional)\">text</msg>\n//   <msg verbosity=\"val\" severity=\"string\" file=\"filename\" line=\"val\" id=\"string\" time=\"val\" context=\"string(optional)\">text</msg>\n//   ...\n// </log>\n//\nclass xml_report_server extends uvm_report_server;\n\n  uvm_report_server old_report_server;\n  uvm_report_global_server global_server;\n\n  // characters that are invalid XML that have to be encoded\n  string replacements[string] = '{ \"<\" : \"&lt;\",\n                                   \"&\" : \"&amp;\",\n                                   \">\" : \"&gt;\",\n                                   \"'\" : \"&apos;\",\n                                   \"\\\"\": \"&quot;\"\n                                 };\n  integer logfile_handle;\n\n  //Function: new\n  // constructor\n  function new(string name = \"xml_report_server\", log_filename = \"log.xml\");\n    super.new();\n    set_name(name);\n\n    global_server = new();\n    install_server();\n    logfile_handle = $fopen(log_filename, \"w\");\n    report_header(logfile_handle);\n  endfunction\n\n  // Function: install_server\n  // replace the global server with this server\n  function void install_server;\n    old_report_server = global_server.get_server();\n    global_server.set_server(this);\n  endfunction\n\n  // Function: enable_xml_logging\n  // Configure all components to use UVM_LOG actions to trigger XML capture\n  // has to be called after components have been instantiated (end of elaboration, run etc)\n  function void enable_xml_logging(uvm_component base=null);\n    uvm_root top;\n\n    if (base == null) begin\n      top = uvm_root::get();\n      base = top;\n    end\n\n    base.set_report_default_file_hier(logfile_handle);\n    base.set_report_severity_action_hier(UVM_INFO, UVM_DISPLAY | UVM_LOG);\n    base.set_report_severity_action_hier(UVM_WARNING, UVM_DISPLAY | UVM_LOG);\n    base.set_report_severity_action_hier(UVM_ERROR,   UVM_DISPLAY | UVM_LOG | UVM_COUNT);\n    base.set_report_severity_action_hier(UVM_FATAL,   UVM_DISPLAY | UVM_LOG | UVM_EXIT);\n  //  base.get_report_handler().dump_state();\n  endfunction\n\n  // Function: convert_verbosity_to_string\n  // Helper function to convert verbosity value to appropriate string, based on uvm_verbosity enum if an equivalent level\n  function string convert_verbosity_to_string(int verbosity);\n    uvm_verbosity l_verbosity;\n\n    if ($cast(l_verbosity, verbosity)) begin\n        convert_verbosity_to_string = l_verbosity.name();\n    end else begin\n        string l_str;\n        l_str.itoa(verbosity);\n        convert_verbosity_to_string = l_str;\n    end\n  endfunction\n\n  // Function: report_header\n  // Output standard XML header to log file\n  function void report_header(UVM_FILE file = 0);\n    f_display(file, \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<?xml-stylesheet type=\\\"text/xsl\\\" href=\\\"uvm.xsl\\\"?><log>\\n\");\n  endfunction\n\n  // Function: report_footer\n  // Output XML closing tags to log file\n  function void report_footer(UVM_FILE file = 0);\n    integer result;\n    $fflush(file);\n    result = $fseek(logfile_handle, 0, 2);\n    f_display(logfile_handle, \"</log>\");\n  endfunction\n\n  // Function: summarize\n  // tidy up logging and restore global report server\n  function void summarize(UVM_FILE file = 0);\n    report_footer();\n    global_server.set_server(old_report_server);\n    $fclose(logfile_handle);\n    old_report_server.report_summarize(file);\n    old_report_server.summarize(file);\n  endfunction\n\n  // Function: process_report\n  //\n  // Processes the message's actions.\n  virtual function void process_report(\n    uvm_severity severity,\n    string name,\n    string id,\n    string message,\n    uvm_action action,\n    UVM_FILE file,\n    string filename,\n    int line,\n    string composed_message,\n    int verbosity_level,\n    uvm_report_object client\n    );\n    // update counts\n    incr_severity_count(severity);\n    incr_id_count(id);\n\n    if(action & UVM_DISPLAY)\n      $display(\"%s\",composed_message);\n\n    // if log is set we need to send to the file but not resend to the\n    // display. So, we need to mask off stdout for an mcd or we need\n    // to ignore the stdout file handle for a file handle.\n    if(action & UVM_LOG)\n      if( (file == 0) || (file != 32'h8000_0001) ) //ignore stdout handle\n      begin\n        UVM_FILE tmp_file = file;\n        if( (file&32'h8000_0000) == 0) //is an mcd so mask off stdout\n        begin\n          tmp_file = file & 32'hffff_fffe;\n        end\n        composed_message = compose_xml_message(severity, verbosity_level, name, id, message, filename, line);\n        f_display(tmp_file, composed_message);\n      end\n\n    if(action & UVM_EXIT) client.die();\n\n    if(action & UVM_COUNT) begin\n      if(get_max_quit_count() != 0) begin\n        incr_quit_count();\n        if(is_quit_count_reached()) begin\n          client.die();\n        end\n      end\n    end\n\n    if (action & UVM_STOP) $stop;\n\n  endfunction\n\n  // Function: sanitize\n  //\n  // Given an unencoded input string, replaces illegal characters for XML data format\n  function string sanitize(string data);\n\n    for(int i = data.len()-1; i >= 0; i--) begin\n      if (replacements.exists(data[i])) begin\n          data = {data.substr(0,i-1), replacements[data[i]], data.substr(i+1, data.len()-1)};\n      end\n    end\n    return data;\n  endfunction : sanitize\n\n\n  // Function: xla\n  // XML Attribute\n  // Generate an XML attribute ( tag = \"data\" )\n  function string xla(string tag, string data);\n    xla=\"\";\n    if (data != \"\") begin\n      xla = {\" \", tag, \"=\\\"\", sanitize(data), \"\\\" \"};\n    end\n  endfunction\n\n    // Function: xle\n    // XML Element\n    // Generate an XML element ( <tag attributes>data</tag> )\n  function string xle(string tag, string data, string attributes=\"\");\n    xle = \"\";\n    if (data != \"\") begin\n      xle = {\"<\", tag, attributes, \">\", sanitize(data), \"</\", tag, \">\\n\"};\n    end\n  endfunction\n\n  // Function: compose_log_report_message\n  // Generate the XML encapsulated report message, for logging\n  virtual function string compose_xml_message(\n    uvm_severity severity,\n    int verbosity,\n    string name,\n    string id,\n    string message,\n    string filename,\n    int    line\n    );\n    uvm_severity_type sv;\n    string severity_string;\n    string time_str;\n    string line_str;\n    string verbosity_str;\n    integer result;\n\n    sv = uvm_severity_type'(severity);\n    severity_string = sv.name();\n    $swrite(time_str, \"%0t\", $time);\n    line_str.itoa(line);\n    verbosity_str.itoa(verbosity);\n\n    compose_xml_message = xle(\"msg\", message,\n                             {xla(\"verbosity\", verbosity_str),\n                              xla(\"severity\", severity_string),\n                              xla(\"file\", filename),\n                              xla(\"line\", line_str),\n                              xla(\"id\", id),\n                              xla(\"time\", time_str),\n                              xla(\"context\", name) });\n  endfunction\n\n\nendclass\n```\n\n\u3053\u306exml_report_server\u30af\u30e9\u30b9\u3092\u3001uvm_env\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u3044\u308b`$UVM_HOME/examples/integrated/ubus/examples/ubus_examples_tb.sv`\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3055\u305b\u3001end_of_elaboration_phase\u306b\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```sv:ubus_expamples_tb.sv\n//----------------------------------------------------------------------\n//   Copyright 2007-2010 Mentor Graphics Corporation\n//   Copyright 2007-2011 Cadence Design Systems, Inc.\n//   Copyright 2010 Synopsys, Inc.\n//   All Rights Reserved Worldwide\n//\n//   Licensed under the Apache License, Version 2.0 (the\n//   \"License\"); you may not use this file except in\n//   compliance with the License.  You may obtain a copy of\n//   the License at\n//\n//       http://www.apache.org/licenses/LICENSE-2.0\n//\n//   Unless required by applicable law or agreed to in\n//   writing, software distributed under the License is\n//   distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n//   CONDITIONS OF ANY KIND, either express or implied.  See\n//   the License for the specific language governing\n//   permissions and limitations under the License.\n//----------------------------------------------------------------------\n\n`include \"ubus_example_scoreboard.sv\"\n`include \"ubus_master_seq_lib.sv\"\n`include \"ubus_example_master_seq_lib.sv\"\n`include \"ubus_slave_seq_lib.sv\"\n\n`include \"xml_report_server.svh\"\n\n//------------------------------------------------------------------------------\n//\n// CLASS: ubus_example_tb\n//\n//------------------------------------------------------------------------------\n\nclass ubus_example_tb extends uvm_env;\n\n  // Provide implementations of virtual methods such as get_type_name and create\n  `uvm_component_utils(ubus_example_tb)\n\n  // ubus environment\n  ubus_env ubus0;\n\n  // Scoreboard to check the memory operation of the slave.\n  ubus_example_scoreboard scoreboard0;\n\n  // XML logging server\n  xml_report_server xml_reporter;\n\n\n  // new\n  function new (string name, uvm_component parent=null);\n    super.new(name, parent);\n    xml_reporter = new();\n  endfunction : new\n\n  // build_phase\n  virtual function void build_phase(uvm_phase phase);\n    super.build_phase(phase);\n    uvm_config_db#(int)::set(this,\"ubus0\",\n\t\t\t       \"num_masters\", 1);\n    uvm_config_db#(int)::set(this,\"ubus0\",\n\t\t\t       \"num_slaves\", 1);\n\n    ubus0 = ubus_env::type_id::create(\"ubus0\", this);\n    scoreboard0 = ubus_example_scoreboard::type_id::create(\"scoreboard0\", this);\n  endfunction : build_phase\n\n  function void connect_phase(uvm_phase phase);\n    // Connect slave0 monitor to scoreboard\n    ubus0.slaves[0].monitor.item_collected_port.connect(\n      scoreboard0.item_collected_export);\n  endfunction : connect_phase\n\n  function void end_of_elaboration_phase(uvm_phase phase);\n    // Set up slave address map for ubus0 (basic default)\n    ubus0.set_slave_address_map(\"slaves[0]\", 0, 16'hffff);\n\n    // Enable XML logging \n    xml_reporter.enable_xml_logging();\n  endfunction : end_of_elaboration_phase\n\nendclass : ubus_example_tb\n```\n\nXML\u51fa\u529b\u95a2\u4fc2\u306f\u3001\u5f8c\u3005\u62e1\u5f35\u306e\u305f\u3081\u306bPackege\u5316\u3055\u305b\u307e\u3059\u3002\n\n```sv:xml_pkg.sv\npackage xml_pkg;\n  import uvm_pkg::*;\n\n  `include \"xml_report_server.svh\"\nendpackage\n```\n\n###XML\u51fa\u529b\n\u3053\u3053\u307e\u3067\u306e\u30b3\u30fc\u30c9\u3092Commit\u3055\u305b\u3001Jenkins\u306b\u3066\u5b9f\u884c\u3055\u305b\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u3067XML\u304c\u66f8\u304d\u51fa\u3055\u308c\u307e\u3057\u305f\u3002\n\n```xml:log.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<?xml-stylesheet type=\"text/xsl\" href=\"uvm.xsl\"?><log>\n\n<msg verbosity=\"100\"  severity=\"UVM_INFO\"  file=\"/var/www/html/bzr/uvm_sample/trunk/uvm-1.1d/examples/integrated/ubus/ex\namples/test_lib.sv\"  line=\"55\"  id=\"test_2m_4s\"  time=\"0\"  context=\"uvm_test_top\" >Printing the test topology :\n--------------------------------------------------------------------\nName                         Type                     Size  Value   \n--------------------------------------------------------------------\nuvm_test_top                 test_2m_4s               -     @459    \n  ubus_example_tb0           ubus_example_tb          -     @493    \n    scoreboard0              ubus_example_scoreboard  -     @513    \n      item_collected_export  uvm_analysis_imp         -     @521    \n      disable_scoreboard     integral                 1     &apos;h0     \n      num_writes             integral                 32    &apos;d0     \n      num_init_reads         integral                 32    &apos;d0     \n      num_uninit_reads       integral                 32    &apos;d0     \n      recording_detail       uvm_verbosity            32    UVM_FULL\n    ubus0                    ubus_env                 -     @505    \n      bus_monitor            ubus_bus_monitor         -     @535    \n      masters[0]             ubus_master_agent        -     @567    \n      masters[1]             ubus_master_agent        -     @579    \n      slaves[0]              ubus_slave_agent         -     @590    \n      slaves[1]              ubus_slave_agent         -     @598    \n      slaves[2]              ubus_slave_agent         -     @606    \n      slaves[3]              ubus_slave_agent         -     @614    \n      has_bus_monitor        integral                 1     &apos;h1     \n      num_masters            integral                 32    &apos;h2     \n      num_slaves             integral                 32    &apos;h4     \n      intf_checks_enable     integral                 1     &apos;h1     \n      intf_coverage_enable   integral                 1     &apos;h1     \n      recording_detail       uvm_verbosity            32    UVM_FULL\n    recording_detail         uvm_verbosity            32    UVM_FULL\n--------------------------------------------------------------------\n</msg>\n\n<msg verbosity=\"0\"  severity=\"UVM_INFO\"  file=\"/var/www/html/bzr/uvm_sample/trunk/uvm-1.1d/examples/integrated/ubus/exam\nples/ubus_example_master_seq_lib.sv\"  line=\"236\"  id=\"loop_read_modify_write_seq\"  time=\"0\"  context=\"uvm_test_top.ubus_\nexample_tb0.ubus0.masters[0].sequencer@@loop_read_modify_write_seq\" >loop_read_modify_write_seq starting...itr = 6</msg>\n\n<msg verbosity=\"0\"  severity=\"UVM_INFO\"  file=\"/var/www/html/bzr/uvm_sample/trunk/uvm-1.1d/examples/integrated/ubus/exam\nples/ubus_example_master_seq_lib.sv\"  line=\"236\"  id=\"loop_read_modify_write_seq\"  time=\"0\"  context=\"uvm_test_top.ubus_\nexample_tb0.ubus0.masters[1].sequencer@@loop_read_modify_write_seq\" >loop_read_modify_write_seq starting...itr = 8</msg>\n\n(\u4e2d\u7565)\n\n<msg verbosity=\"100\"  severity=\"UVM_INFO\"  file=\"/var/www/html/bzr/uvm_sample/trunk/uvm-1.1d/examples/integrated/ubus/sv/ubus_slave_monitor.sv\"  line=\"243\"  id=\"uvm_test_top.ubus_example_tb0.ubus0.slaves[3].monitor\"  time=\"3030\"  context=\"uvm_test_top.ubus_example_tb0.ubus0.slaves[3].monitor\" >Covergroup &apos;cov_trans&apos; coverage: 30.000000</msg>\n\n<msg verbosity=\"0\"  severity=\"UVM_INFO\"  file=\"/var/www/html/bzr/uvm_sample/trunk/uvm-1.1d/examples/integrated/ubus/examples/test_lib.sv\"  line=\"70\"  id=\"test_2m_4s\"  time=\"3030\"  context=\"uvm_test_top\" >** UVM TEST PASSED **</msg>\n\n</log>\n```\n\n\n#\u304a\u308f\u308a\u306b\nJenkins\u306f\u5206\u6563\u30d3\u30eb\u30c9\u30fb\u30c6\u30b9\u30c8\u7b49\u304c\u3042\u308b\u305f\u3081\u3001UVM\u306eUVM_TEST\u3084UVM_SEQUENCE\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u6570\u306b\u4f9d\u308a\u307e\u3059\u304c\u3001\u591a\u6570\u306e\u30c6\u30b9\u30c8\u3092\u540c\u6642\u5b9f\u884c\u3057\u304b\u3064\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306b\u5bcc\u3080\u74b0\u5883\u304c\u69cb\u7bc9\u53ef\u80fd\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u3082\u3063\u3068\u3082\u3001\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u69cb\u7bc9\u306f\u5927\u5909\u306a\u3093\u3067\u3059\u3051\u3069\u306d\u3002\n\n\u5f8c\u65e5\u3001XML\u306b\u3088\u308b\u30ec\u30dd\u30fc\u30c8\u51fa\u529b\u3092Junit\u3067\u8aad\u3081\u308b\u5f62\u5f0f\u306b\u5408\u308f\u305b\u3001Jenkins\u3067\u7d71\u8a08\u304c\u53d6\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["Jenkins", "SystemVerilog2012", "HDL", "bazaar2.1.1", "UVM1.1d"]}