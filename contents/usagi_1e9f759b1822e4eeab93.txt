{"context": " More than 1 year has passed since last update.\n\n\u72b6\u6cc1\nC++ \u306b Lua \u3092\u7d44\u307f\u8fbc\u307f\u5b9f\u884c\u6642\u306b Lua \u30b9\u30af\u30ea\u30d7\u30c8\u3092 C++ \u30b3\u30fc\u30c9\u304b\u3089\u547c\u3073\u51fa\u3057\u3066\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u304a\u3044\u3066\u3001 C++ \u306e\u30cd\u30a4\u30c6\u30a3\u30d6\u30c7\u30fc\u30bf\u578b\u3092 Lua \u3078\u63d0\u4f9b\u3057\u3001\u3053\u308c\u3092\u64cd\u4f5c\u3057\u305f\u3044\u3002\n\n\u5177\u4f53\u7684\u306a\u4f8b\n\u4f8b\u3068\u3057\u3066\u6b21\u306b\u6319\u3052\u308b\u3088\u3046\u306a C++ \u306e\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u578b\u3092\u8981\u7d20\u3068\u3059\u308b std::vector \u30b3\u30f3\u30c6\u30ca\u30fc\u578b\u3092 Lua \u3078\u63d0\u4f9b\u3057\u3001\u64cd\u4f5c\u3055\u305b\u305f\u3044\u3068\u3059\u308b\u3002\nstruct f32vec4\n{\n  float x, y, z, w;\n  f32vec4( const float a = 0, const float b = 0, const float c = 0, const float d = 0 )\n    : x( a ), y( b ), z( c ), w( d )\n  { }\n};\nusing native_data_type = std::vector< f32vec4 >;\n\nLua \u30b3\u30fc\u30c9\u304b\u3089\u306f\u6b21\u306e\u3088\u3046\u306b\u5236\u5fa1\u3057\u305f\u3044\u3068\u3059\u308b\nlocal obj = mylib.make_obj()\nlocal nan = 0 / 0\nobj:push( 1.23, 3.45, 6.78, nan  )\nobj:push( 12.3, 34.5, 67.8, 90.1 )\n\n\u5b9f\u969b\u306b\u306fmake_obj\u3067\u5f15\u6570\u3092\u4e0e\u3048\u3066 std::vector \u3092\u4e00\u5b9a\u306e\u8981\u7d20\u6570\u3067\u751f\u6210\u3057\u305f\u308a reserve \u3057\u305f\u308a\u3001\u3042\u308b\u3044\u306f C++ \u30b3\u30fc\u30c9\u5074\u304b\u3089\u547c\u3073\u51fa\u3059 Lua \u30b3\u30fc\u30c9\u306e\u95a2\u6570\u306e return \u3068\u3057\u3066 native_data_type \u3092\u53d7\u3051\u53d6\u308b\u306a\u3069\u69d8\u3005\u306a\u30cb\u30fc\u30ba\u304c\u8003\u3048\u3089\u308c\u308b\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f C++ \u306e\u30cd\u30a4\u30c6\u30a3\u30d6\u30c7\u30fc\u30bf\u578b native_data_type \u3092 Lua \u3078\u63d0\u4f9b\u3057\u3001 Lua \u3067 push \u306b\u3088\u308a emplace_back \u3057\u3001 Lua \u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7834\u68c4\u3059\u308b\u6642\u70b9\u3067 native_data_type \u304c\u683c\u7d0d\u3057\u3066\u3044\u308b\u5024\u3092 C++ \u30b3\u30fc\u30c9\u3067\u51fa\u529b\u3059\u308b\u306b\u7559\u3081\u308b\u3002\n\n\u30b3\u30fc\u30c9\u4f8b\nmain.cxx\n#include <lua.hpp>\n#include <iostream>\n#include <vector>\n#include <new>\n\nstruct f32vec4\n{\n  float x, y, z, w;\n  f32vec4( const float a = 0, const float b = 0, const float c = 0, const float d = 0 )\n    : x( a ), y( b ), z( c ), w( d )\n  { }\n};\nusing native_data_type = std::vector< f32vec4 >;\n\nauto luaopen_mylib( lua_State* L )\n{\n  static const luaL_Reg obj_definitions[] =\n  { { \"method_test\"\n    , []( auto L )\n      {\n        std::cout << \"obj.method_test : \" << luaL_checkudata(L, 1, \"obj_type\") << \"\\n\";\n        return 0;\n      }\n    }\n  , { \"push\"\n    , []( auto L )\n      {\n        reinterpret_cast<native_data_type*>(luaL_checkudata(L, 1, \"obj_type\"))->emplace_back\n        ( luaL_checknumber(L, -4)\n        , luaL_checknumber(L, -3)\n        , luaL_checknumber(L, -2)\n        , luaL_checknumber(L, -1)\n        );\n        std::cout << \"obj.push\" << \"\\n\";\n        return 0;\n      }\n    }\n  , { nullptr, nullptr }\n  };\n\n  static const luaL_Reg mylib_definitions[] =\n  { { \"make_obj\"\n    , []( auto L )\n      {\n        std::cout << \"mylib.make_obj\\n\";\n        auto p = lua_newuserdata( L, sizeof( native_data_type ) );\n        new( p ) native_data_type(); // placement new\n        luaL_setmetatable( L, \"obj_type\" );\n        return 1;\n      }\n    }\n  , { nullptr, nullptr }\n  };\n\n  luaL_newlib( L, mylib_definitions ); // stack: mylib\n\n  luaL_newmetatable(L, \"obj_type\" ); // stack: mylib meta\n  luaL_newlib(L, obj_definitions );\n  lua_setfield(L, -2, \"__index\" ); // stack: mylib meta\n\n  lua_pushstring( L, \"__gc\" );\n  lua_pushcfunction\n  ( L\n  , []( auto L )\n    {\n      const auto p = luaL_checkudata( L, 1, \"obj_type\" );\n      std::cout << \"obj.__gc : \" << p << \"\\n\";\n      std::cout << \"=== print data ===\\n\";\n      for ( const auto& e : *reinterpret_cast< native_data_type* >( p ) )\n        std::cout << \"  \" << e.x << \" \" << e.y << \" \" << e.z << \" \" << e.w << \"\\n\";\n      std::cout << \"=== === === ===\\n\";\n      return 0;\n    }\n  ); // stack: mylib meta \"__gc\" fptr\n  lua_settable(L, -3); // stack: mylib meta\n\n  lua_pop(L, 1); // stack: mylib\n\n  return 1;\n}\n\nauto main() -> int\n{\n  lua_State *L = luaL_newstate();\n  luaL_openlibs(L);\n\n  luaL_requiref( L, \"mylib\", luaopen_mylib, 1 );\n  lua_pop( L, 1 ); // requiref leaves the library table on the stack\n\n  luaL_dofile( L, \"a.lua\" );\n\n  lua_close( L );\n}\n\na.lua\nlocal obj = mylib.make_obj()\n\nobj:method_test()\n\nlocal nan = 0 / 0\n\nobj:push( 1.23, 3.45, 6.78, nan  )\nobj:push( 12.3, 34.5, 67.8, 90.1 )\n\n\n\u5b9f\u884c\u7d50\u679c\nmylib.make_obj\nobj.method_test : 0xbcc358\nobj.push\nobj.push\nobj.__gc : 0xbcc358\n=== print data ===\n  1.23 3.45 6.78 -nan\n  12.3 34.5 67.8 90.1\n=== === === ===\n\n\nWandbox\n\n\nhttp://melpon.org/wandbox/permlink/kZcqoQVDyKAf4k3j\n\n\nlua.hpp \u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3068 liblua.a \u306e\u30ea\u30f3\u30af\u304c\u3084\u3084\u7279\u6b8a\u306b\u306a\u3063\u3066\u3044\u308b\u70b9\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3092\u53c2\u7167 -> https://github.com/melpon/wandbox/issues/173\n\n\n\n\n\n\u8981\u70b9\u306e\u6982\u8aac\n\nC++ \u304b\u3089 Lua \u3078 mylib \u3068 obj_type \u306e2\u3064\u306e\u5b9a\u7fa9\u3092 luaopen_mylib \u3092 luaL_requiref(L, \"mylib\", luaopen_mylib, 1); \u3067\u4e0e\u3048\u3066\u3044\u308b\n\nmylib \u306b\u306f obj_type \u3092\u751f\u6210\u3059\u308b make_obj \u30e1\u30bd\u30c3\u30c9\u3092 mylib_definitions \u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b\n\n\n\nlua_newuserdata \u306f C \u306e malloc \u6319\u52d5\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u30e1\u30e2\u30ea\u30fc\u9818\u57df\u306e\u78ba\u4fdd\u3057\u304b\u884c\u308f\u306a\u3044\u306e\u3067\u3001 new( p ) native_data_type() \u3068\u3057\u3066 placement new \u306b\u3088\u308a\u78ba\u4fdd\u6e08\u307f\u306e\u30e1\u30e2\u30ea\u30fc\u9818\u57df\u306b native_data_type \u3092\u69cb\u7bc9\u3057\u3066\u3044\u308b\n\n\n\nobj_type \u306b\u306f C++ \u30ec\u30d9\u30eb\u3067\u306e emplace_back \u3092\u884c\u3046 push \u30e1\u30bd\u30c3\u30c9\u3068\u3088\u308a\u7c21\u5358\u306a\u30c6\u30b9\u30c8\u7528\u306e\u30e1\u30bd\u30c3\u30c9 method_test \u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\n\nobj_type \u306b\u306f\u8ffd\u52a0\u3067 lua_pushstring lua_pushfunction \u7b49\u3067 __gc \u30e1\u30bd\u30c3\u30c9\u3082\u5b9a\u7fa9\u3057\u3001 Lua \u306e GC \u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7834\u68c4\u3059\u308b\u969b\u306b C++ \u30b3\u30fc\u30c9\u30ec\u30d9\u30eb\u3067 native_data_type \u3068\u3057\u3066\u4fdd\u6301\u3059\u308b\u8981\u7d20\u3092\u51fa\u529b\u3057\u3066\u3044\u308b\n\n\n\u78ba\u4fdd\u3057\u3066\u3042\u308b\u30e1\u30e2\u30ea\u30fc\u9818\u57df\u306e\u958b\u653e\u51e6\u7406\u306f Lua \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u304c\u884c\u3044\u3001\u307e\u305f native_data_type \u306e\u69cb\u7bc9\u3082 placement new \u3067\u884c\u3063\u3066\u3044\u308b\u305f\u3081 delete \u306e\u5fc5\u8981\u306f\u7121\u3044\n\n\n\n\nReferences\n\n\nlua-users - wiki - Library With Userdata Example\n\n\u4eca\u56de\u306e\u8a18\u4e8b\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u6bd4\u8f03\u7684\u30e2\u30c0\u30f3\u306a C++ \u6a5f\u80fd\u3082\u7528\u3044\u3066\u3044\u308b\u304c\u3001\u539f\u5247\u7684\u306b\u306f\u3053\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f8b\u3092\u5143\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n# \u72b6\u6cc1\n\nC++ \u306b Lua \u3092\u7d44\u307f\u8fbc\u307f\u5b9f\u884c\u6642\u306b Lua \u30b9\u30af\u30ea\u30d7\u30c8\u3092 C++ \u30b3\u30fc\u30c9\u304b\u3089\u547c\u3073\u51fa\u3057\u3066\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u304a\u3044\u3066\u3001 C++ \u306e\u30cd\u30a4\u30c6\u30a3\u30d6\u30c7\u30fc\u30bf\u578b\u3092 Lua \u3078\u63d0\u4f9b\u3057\u3001\u3053\u308c\u3092\u64cd\u4f5c\u3057\u305f\u3044\u3002\n\n## \u5177\u4f53\u7684\u306a\u4f8b\n\n\u4f8b\u3068\u3057\u3066\u6b21\u306b\u6319\u3052\u308b\u3088\u3046\u306a C++ \u306e\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u578b\u3092\u8981\u7d20\u3068\u3059\u308b `std::vector` \u30b3\u30f3\u30c6\u30ca\u30fc\u578b\u3092 Lua \u3078\u63d0\u4f9b\u3057\u3001\u64cd\u4f5c\u3055\u305b\u305f\u3044\u3068\u3059\u308b\u3002\n\n```cpp\nstruct f32vec4\n{\n  float x, y, z, w;\n  f32vec4( const float a = 0, const float b = 0, const float c = 0, const float d = 0 )\n    : x( a ), y( b ), z( c ), w( d )\n  { }\n};\nusing native_data_type = std::vector< f32vec4 >;\n```\n\nLua \u30b3\u30fc\u30c9\u304b\u3089\u306f\u6b21\u306e\u3088\u3046\u306b\u5236\u5fa1\u3057\u305f\u3044\u3068\u3059\u308b\n\n```lua\nlocal obj = mylib.make_obj()\nlocal nan = 0 / 0\nobj:push( 1.23, 3.45, 6.78, nan  )\nobj:push( 12.3, 34.5, 67.8, 90.1 )\n```\n\n\u5b9f\u969b\u306b\u306fmake_obj\u3067\u5f15\u6570\u3092\u4e0e\u3048\u3066 `std::vector` \u3092\u4e00\u5b9a\u306e\u8981\u7d20\u6570\u3067\u751f\u6210\u3057\u305f\u308a `reserve` \u3057\u305f\u308a\u3001\u3042\u308b\u3044\u306f C++ \u30b3\u30fc\u30c9\u5074\u304b\u3089\u547c\u3073\u51fa\u3059 Lua \u30b3\u30fc\u30c9\u306e\u95a2\u6570\u306e return \u3068\u3057\u3066 `native_data_type` \u3092\u53d7\u3051\u53d6\u308b\u306a\u3069\u69d8\u3005\u306a\u30cb\u30fc\u30ba\u304c\u8003\u3048\u3089\u308c\u308b\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f C++ \u306e\u30cd\u30a4\u30c6\u30a3\u30d6\u30c7\u30fc\u30bf\u578b `native_data_type` \u3092 Lua \u3078\u63d0\u4f9b\u3057\u3001 Lua \u3067 `push` \u306b\u3088\u308a `emplace_back` \u3057\u3001 Lua \u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7834\u68c4\u3059\u308b\u6642\u70b9\u3067 `native_data_type` \u304c\u683c\u7d0d\u3057\u3066\u3044\u308b\u5024\u3092 C++ \u30b3\u30fc\u30c9\u3067\u51fa\u529b\u3059\u308b\u306b\u7559\u3081\u308b\u3002\n\n# \u30b3\u30fc\u30c9\u4f8b\n\nmain.cxx\n\n```cpp\n#include <lua.hpp>\n#include <iostream>\n#include <vector>\n#include <new>\n\nstruct f32vec4\n{\n  float x, y, z, w;\n  f32vec4( const float a = 0, const float b = 0, const float c = 0, const float d = 0 )\n    : x( a ), y( b ), z( c ), w( d )\n  { }\n};\nusing native_data_type = std::vector< f32vec4 >;\n\nauto luaopen_mylib( lua_State* L )\n{\n  static const luaL_Reg obj_definitions[] =\n  { { \"method_test\"\n    , []( auto L )\n      {\n        std::cout << \"obj.method_test : \" << luaL_checkudata(L, 1, \"obj_type\") << \"\\n\";\n        return 0;\n      }\n    }\n  , { \"push\"\n    , []( auto L )\n      {\n        reinterpret_cast<native_data_type*>(luaL_checkudata(L, 1, \"obj_type\"))->emplace_back\n        ( luaL_checknumber(L, -4)\n        , luaL_checknumber(L, -3)\n        , luaL_checknumber(L, -2)\n        , luaL_checknumber(L, -1)\n        );\n        std::cout << \"obj.push\" << \"\\n\";\n        return 0;\n      }\n    }\n  , { nullptr, nullptr }\n  };\n\t\n  static const luaL_Reg mylib_definitions[] =\n  { { \"make_obj\"\n    , []( auto L )\n      {\n        std::cout << \"mylib.make_obj\\n\";\n        auto p = lua_newuserdata( L, sizeof( native_data_type ) );\n        new( p ) native_data_type(); // placement new\n        luaL_setmetatable( L, \"obj_type\" );\n        return 1;\n      }\n    }\n  ,\t{ nullptr, nullptr }\n  };\n\t\n  luaL_newlib( L, mylib_definitions ); // stack: mylib\n  \n  luaL_newmetatable(L, \"obj_type\" ); // stack: mylib meta\n  luaL_newlib(L, obj_definitions );\n  lua_setfield(L, -2, \"__index\" ); // stack: mylib meta\n  \n  lua_pushstring( L, \"__gc\" );\n  lua_pushcfunction\n  ( L\n  , []( auto L )\n    {\n      const auto p = luaL_checkudata( L, 1, \"obj_type\" );\n      std::cout << \"obj.__gc : \" << p << \"\\n\";\n      std::cout << \"=== print data ===\\n\";\n      for ( const auto& e : *reinterpret_cast< native_data_type* >( p ) )\n        std::cout << \"  \" << e.x << \" \" << e.y << \" \" << e.z << \" \" << e.w << \"\\n\";\n      std::cout << \"=== === === ===\\n\";\n      return 0;\n    }\n  ); // stack: mylib meta \"__gc\" fptr\n  lua_settable(L, -3); // stack: mylib meta\n  \n  lua_pop(L, 1); // stack: mylib\n  \n  return 1;\n}\n\nauto main() -> int\n{\n  lua_State *L = luaL_newstate();\n  luaL_openlibs(L);\n  \n  luaL_requiref( L, \"mylib\", luaopen_mylib, 1 );\n  lua_pop( L, 1 ); // requiref leaves the library table on the stack\n  \n  luaL_dofile( L, \"a.lua\" );\n  \n  lua_close( L );\n}\n```\n\na.lua\n\n```lua\nlocal obj = mylib.make_obj()\n\nobj:method_test()\n\nlocal nan = 0 / 0\n\nobj:push( 1.23, 3.45, 6.78, nan  )\nobj:push( 12.3, 34.5, 67.8, 90.1 )\n```\n\n## \u5b9f\u884c\u7d50\u679c\n\n```\nmylib.make_obj\nobj.method_test : 0xbcc358\nobj.push\nobj.push\nobj.__gc : 0xbcc358\n=== print data ===\n  1.23 3.45 6.78 -nan\n  12.3 34.5 67.8 90.1\n=== === === ===\n```\n\n## Wandbox\n\n- http://melpon.org/wandbox/permlink/kZcqoQVDyKAf4k3j\n    - `lua.hpp` \u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3068 `liblua.a` \u306e\u30ea\u30f3\u30af\u304c\u3084\u3084\u7279\u6b8a\u306b\u306a\u3063\u3066\u3044\u308b\u70b9\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3092\u53c2\u7167 -> https://github.com/melpon/wandbox/issues/173\n\n# \u8981\u70b9\u306e\u6982\u8aac\n\n- C++ \u304b\u3089 Lua \u3078 `mylib` \u3068 `obj_type` \u306e2\u3064\u306e\u5b9a\u7fa9\u3092 `luaopen_mylib` \u3092 `luaL_requiref(L, \"mylib\", luaopen_mylib, 1);` \u3067\u4e0e\u3048\u3066\u3044\u308b\n- `mylib` \u306b\u306f `obj_type` \u3092\u751f\u6210\u3059\u308b `make_obj` \u30e1\u30bd\u30c3\u30c9\u3092 `mylib_definitions` \u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b\n    - `lua_newuserdata` \u306f C \u306e `malloc` \u6319\u52d5\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u30e1\u30e2\u30ea\u30fc\u9818\u57df\u306e\u78ba\u4fdd\u3057\u304b\u884c\u308f\u306a\u3044\u306e\u3067\u3001 `new( p ) native_data_type()` \u3068\u3057\u3066 placement new \u306b\u3088\u308a\u78ba\u4fdd\u6e08\u307f\u306e\u30e1\u30e2\u30ea\u30fc\u9818\u57df\u306b `native_data_type` \u3092\u69cb\u7bc9\u3057\u3066\u3044\u308b\n- `obj_type` \u306b\u306f C++ \u30ec\u30d9\u30eb\u3067\u306e `emplace_back` \u3092\u884c\u3046 `push` \u30e1\u30bd\u30c3\u30c9\u3068\u3088\u308a\u7c21\u5358\u306a\u30c6\u30b9\u30c8\u7528\u306e\u30e1\u30bd\u30c3\u30c9 `method_test` \u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\n- `obj_type` \u306b\u306f\u8ffd\u52a0\u3067 `lua_pushstring` `lua_pushfunction` \u7b49\u3067 `__gc` \u30e1\u30bd\u30c3\u30c9\u3082\u5b9a\u7fa9\u3057\u3001 Lua \u306e GC \u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7834\u68c4\u3059\u308b\u969b\u306b C++ \u30b3\u30fc\u30c9\u30ec\u30d9\u30eb\u3067 `native_data_type` \u3068\u3057\u3066\u4fdd\u6301\u3059\u308b\u8981\u7d20\u3092\u51fa\u529b\u3057\u3066\u3044\u308b\n    - \u78ba\u4fdd\u3057\u3066\u3042\u308b\u30e1\u30e2\u30ea\u30fc\u9818\u57df\u306e\u958b\u653e\u51e6\u7406\u306f Lua \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u304c\u884c\u3044\u3001\u307e\u305f `native_data_type` \u306e\u69cb\u7bc9\u3082 placement new \u3067\u884c\u3063\u3066\u3044\u308b\u305f\u3081 `delete` \u306e\u5fc5\u8981\u306f\u7121\u3044\n\n# References\n\n- [lua-users - wiki - Library With Userdata Example](http://lua-users.org/wiki/LibraryWithUserdataExample)\n    - \u4eca\u56de\u306e\u8a18\u4e8b\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u6bd4\u8f03\u7684\u30e2\u30c0\u30f3\u306a C++ \u6a5f\u80fd\u3082\u7528\u3044\u3066\u3044\u308b\u304c\u3001\u539f\u5247\u7684\u306b\u306f\u3053\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4f8b\u3092\u5143\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n", "tags": ["C++", "Lua", "UserData", "ffi"]}