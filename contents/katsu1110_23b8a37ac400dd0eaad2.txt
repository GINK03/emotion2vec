{"tags": ["Python", "\u7d71\u8a08", "numpy", "matlab", "Octave"], "context": "\u3000\u30c7\u30fc\u30bf\u89e3\u6790\u306f\u307e\u3060\u307e\u3060\u30d6\u30fc\u30e0\u306e\u3088\u3046\u3067\u3059\u3002\u6a5f\u68b0\u5b66\u7fd2\u3067\u3042\u308c\u4f55\u3067\u3042\u308c\u3001\u307e\u305a\u30c7\u30fc\u30bf\u304c\u4e0e\u3048\u3089\u308c\u3066\u3059\u308b\u3053\u3068\u306f\u3001\u30c7\u30fc\u30bf\u3092\u8996\u899a\u5316\u3057\u3066\u3001\u89e3\u6790\u306e\u3068\u3063\u304b\u304b\u308a\u3068\u306a\u308b\u4eee\u8aac\u3092\u3064\u304b\u3080\u3053\u3068\u3067\u3059\u306d\u3002\u4eee\u8aac\u3092\u691c\u8a3c\u3059\u308b\u305f\u3081\u3001\u69d8\u3005\u306a\u89e3\u6790\u3092\u3057\u3066\u69d8\u3005\u306a\u7d71\u8a08\u91cf\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\u3000\n\u3000\u305d\u3093\u306a\u3053\u3068\u3092\u3057\u3066\u3044\u308b\u3068\u3001\u3042\u308b\u7d71\u8a08\u91cf\u306e\u6bcd\u96c6\u56e3\u306b\u304a\u3051\u308b\u30d0\u30e9\u30c4\u30ad\u304c\u77e5\u308a\u305f\u3044\u3001\u3068\u3044\u3046\u4e8b\u614b\u306b\u51fa\u304f\u308f\u3059\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u3000\u305d\u308c\u304c\u30c7\u30fc\u30bf\u306e\u5e73\u5747\u5024\u3067\u3042\u308c\u3070\u3001\u6a19\u6e96\u8aa4\u5dee (standard error of the mean)\u3068\u3044\u3046\u3082\u306e\u3092\u8a08\u7b97\u3059\u308c\u3070OK\u3067\u3059\u3002\u6a19\u6e96\u504f\u5dee\u3092\u3001\u30c7\u30fc\u30bf\u6570\u306e\u5e73\u65b9\u6839\u3067\u5272\u3063\u305f\u3082\u306e\u3067\u3059\u306d\u3002\n\u3000\u3068\u3053\u308d\u304c\u3001\u89e3\u6790\u3067\u306f\u5e73\u5747\u3060\u3051\u3067\u306a\u304f\u3001\u4e2d\u592e\u5024 (median)\u3001\u767e\u5206\u7387 (centile)\u3001\u76f8\u95a2\u4fc2\u6570 (correlation coefficient)\u306a\u3069\u69d8\u3005\u306a\u7d71\u8a08\u91cf\u3092\u898b\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u308c\u3089\u306b\u306f\u6a19\u6e96\u8aa4\u5dee\u3084\u4fe1\u983c\u533a\u9593 (confidence interval)\u3068\u3044\u3063\u305f\u30d0\u30e9\u30c4\u30ad\u3092\u5b9a\u91cf\u5316\u3067\u304d\u308b\u7c21\u5358\u306a\u516c\u5f0f\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\u3000\n\u3000\u305d\u3093\u306a\u3068\u304d\u306b\u5f79\u306b\u7acb\u3064\u306e\u304c\u3001\u518d\u6a19\u672c\u5316 (resampling)\u3001\u7279\u306b\u3001\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7 (Bootstrap) \u3068\u3044\u3046\u624b\u6cd5\u3067\u3059\u3002\n\n\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3068\u306f\u3000\n\u3000\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3067\u306f\u307e\u305a\u3001\u518d\u6a19\u672c\u5316 (resampling)\u306b\u3088\u3063\u3066\u5143\u30c7\u30fc\u30bf\u304b\u3089\u4f55\u5343\u3082\u306e\u4f3c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u308a\u51fa\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3001\u6b32\u3057\u3044\u7d71\u8a08\u91cf\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\u3059\u308b\u3068\u3001\u305d\u306e\u7d71\u8a08\u91cf\u306e\u5206\u5e03\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u306e\u5206\u5e03\u306e\u6a19\u6e96\u504f\u5dee\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u305d\u306e\u7d71\u8a08\u91cf\u306e\u6a19\u6e96\u8aa4\u5dee\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3000\u4f8b\u3068\u3057\u3066\u300120\u4eba\u306eIQ\u306e\u30c7\u30fc\u30bf\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002\u5024\u306f\u305d\u308c\u305e\u308c\u300161, 88, 89, 89, 90, 92, 93, 94, 98, 98, 101, 102, 105, 108, 109, 113, 114, 115, 120, 138\u3060\u3068\u3057\u307e\u3057\u3087\u3046\u3002\u5206\u5e03\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u3000\u3053\u306e\u3068\u304d\u3001\u5e73\u5747\u5024 (mean) \u306f100.85\u3001\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee (standard error of the mean) \u306f3.45\u306b\u306a\u308a\u307e\u3059\u3002\n\u3000\u305f\u3060\u3001\u3053\u3046\u3057\u305f\u5024\u306e\u5206\u5e03\u3063\u3066\u3001\u6240\u5f97\u3068\u304b\u3082\u305d\u3046\u3067\u3059\u3051\u3069\u3001\u5e73\u5747\u5024 (mean) \u3088\u308a\u3082\u4e2d\u592e\u5024 (median) \u306e\u65b9\u304c\u4eba\u306e\u5b9f\u611f\u3092\u53cd\u6620\u3057\u3066\u308b\u3093\u3067\u3059\u3088\u306d\u3002\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3092\u4f7f\u3063\u3066\u3001\u4e2d\u592e\u5024\u306e\u30d0\u30e9\u30c4\u30ad\u3001\u3059\u306a\u308f\u3061\u4e2d\u592e\u5024\u306e\u6a19\u6e96\u8aa4\u5dee (standard error of the median) \u3092\u6c42\u3081\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u306f\u3001\u4ee5\u4e0b\u306e\u6d41\u308c\u3067\u884c\u3044\u307e\u3059\u3002\n1: \u4f55\u56de\u518d\u6a19\u672c\u5316\u3059\u308b\u304b\u6c7a\u3081\u307e\u3059\u3002\n\u3000500, 1000, 10000, 100000\u306a\u3069\u3001\u30ad\u30ea\u304c\u826f\u304f\u3001\u5927\u304d\u3044\u6570\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u4eca\u56de\u306f1000\u3067\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n2: \u518d\u6a19\u672c\u5316\u3057\u3066\u3001\u4eba\u5de5\u7684\u306b\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u91cd\u8907\u3092\u8a31\u3057\u3066\u5143\u30c7\u30fc\u30bf\u306e\u6a19\u672c\u6570\u3060\u3051\u3001\u30c7\u30fc\u30bf\u6a19\u672c\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n\u3000\u4f8b\u3048\u3070\u3001\u5143\u30c7\u30fc\u30bf\u304cX1,X2,...,X5X_1,X_2,...,X_5\u306855\u500b\u3042\u3063\u305f\u3068\u3057\u305f\u3089\u3001\u518d\u6a19\u672c\u5316\u3059\u308b\u305f\u3073\u306b\u751f\u6210\u3055\u308c\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f8b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u518d\u6a19\u672c1 = X1,X2,X3,X3,X4X1,X2,X3,X3,X4\n\u518d\u6a19\u672c2 = X1,X1,X3,X4,X4X1,X1,X3,X4,X4\n\u518d\u6a19\u672c3 = X2,X2,X5,X5,X5X2,X2,X5,X5,X5\n......\n\u518d\u6a19\u672c998 = X1,X2,X3,X4,X5X1,X2,X3,X4,X5\n\u518d\u6a19\u672c999 = X1,X3,X4,X5,X5X1,X3,X4,X5,X5\n\u518d\u6a19\u672c1000 = X3,X3,X3,X3,X4X3,X3,X3,X3,X4\n\u3000\u3053\u3046\u3057\u3066\u3001\u30b9\u30c6\u30c3\u30d7\uff11\u3067\u6c7a\u3081\u305f\u6570\u3060\u3051\u3001\u91cd\u8907\u3092\u8a31\u3057\u30c7\u30fc\u30bf\u6a19\u672c\u3092\u5143\u30c7\u30fc\u30bf\u6570\u3060\u3051\u53d6\u308a\u51fa\u3059\u3053\u3068\u3092\u7e70\u308a\u8fd4\u3057\u3001\u4eba\u5de5\u7684\u306b\u30c7\u30fc\u30bf\u3092\u4f5c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3000\u5404\u518d\u6a19\u672c\u306b\u3069\u306e\u30c7\u30fc\u30bf\u6a19\u672c\u304c\u5165\u308b\u304b\u306f\u30e9\u30f3\u30c0\u30e0\u3067\u3059\u30025\u500b\u3059\u3079\u3066\u540c\u3058\u5024\u304c\u5165\u308b\u3068\u304d\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3057\u30015\u500b\u5168\u3066\u9055\u3046\u5024\u304c\u5165\u308b\u3068\u304d\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002\n3: \u5404\u518d\u6a19\u672c\u3067\u3001\u6c42\u3081\u305f\u3044\u7d71\u8a08\u91cf\u3092\u8a08\u7b97\u3059\u308b\u3002\n\u3000\u4e2d\u592e\u5024\u306a\u308a\u306a\u3093\u306a\u308a\u3001\u305d\u308c\u305e\u308c\u306e\u518d\u6a19\u672c\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u7d71\u8a08\u91cf\u3092\u6c42\u3081\u307e\u3059\u30021000\u56de\u518d\u6a19\u672c\u5316\u3057\u305f\u3089\u3001\u7d71\u8a08\u91cf\u30821000\u500b\u3068\u308c\u307e\u3059\u306d\u3002\n\u518d\u6a19\u672c1 = X1,X2,X3,X3,X4X1,X2,X3,X3,X4\u3000\u2192\\to \u7d71\u8a08\u91cf = S1S1\n\u518d\u6a19\u672c2 = X1,X1,X3,X4,X4X1,X1,X3,X4,X4 \u2192\\to \u7d71\u8a08\u91cf = S2S2\n\u518d\u6a19\u672c3 = X2,X2,X5,X5,X5X2,X2,X5,X5,X5 \u2192\\to \u7d71\u8a08\u91cf = S3S3\n...... \n\u518d\u6a19\u672c998 = X1,X2,X3,X4,X5X1,X2,X3,X4,X5 \u2192\\to \u7d71\u8a08\u91cf = S998S998\n\u518d\u6a19\u672c999 = X1,X3,X4,X5,X5X1,X3,X4,X5,X5 \u2192\\to \u7d71\u8a08\u91cf = S999S999\n\u518d\u6a19\u672c1000 = X3,X3,X3,X3,X4X3,X3,X3,X3,X4 \u2192\\to \u7d71\u8a08\u91cf = S1000S1000\n\u3000\u305f\u304f\u3055\u3093\u7d71\u8a08\u91cf\u304c\u3068\u308c\u307e\u3057\u305f\u306d\u3002\u305d\u3057\u3066\u3001\u3053\u3046\u8003\u3048\u307e\u3059\u3002\n\u300c\u3053\u306e\u305f\u304f\u3055\u3093\u306e\u7d71\u8a08\u91cf\u306e\u5206\u5e03\u3063\u3066\u3001\u305d\u306e\u7d71\u8a08\u91cf\u306e\u6bcd\u96c6\u56e3\u5206\u5e03\u3068\u307b\u307c\u540c\u3058\u3068\u8003\u3048\u3066\u3044\u3044\u3088\u306d\uff01\u3060\u3063\u3066\u3069\u3046\u305b\u3082\u3063\u3068\u5b9f\u9a13\u3057\u3066\u30c7\u30fc\u30bf\u3092\u305f\u304f\u3055\u3093\u53d6\u3063\u305f\u3068\u3053\u308d\u3067\u3001\u4f3c\u305f\u3088\u3046\u306a\u5024\u306e\u30c7\u30fc\u30bf\u304c\u5897\u3048\u308b\u3060\u3051\u3060\u304b\u3089\u306d\uff01\uff01\u300d\n\u3000\u3064\u307e\u308a\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3067\u306f\u3001\u5b9f\u9a13\u7684\u306b\u3067\u306f\u306a\u304f\u3001\u7d71\u8a08\u306e\u30c8\u30ea\u30c3\u30af\u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u6570\u3092\u5897\u3084\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u306d\u3002\u305d\u3057\u3066\u30c7\u30fc\u30bf\u6570\u304c\u3042\u308b\u7a0b\u5ea6\u5927\u304d\u3051\u308c\u3070\u3001\u305d\u306e\u5206\u5e03\u306f\u9650\u308a\u306a\u304f\u6bcd\u96c6\u56e3\u306e\u5206\u5e03\u306b\u8fd1\u3044\u306f\u305a\u3060\u3001\u3068\u3044\u3046\u60f3\u5b9a\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u3000\n4: \u6c42\u3081\u305f\u7d71\u8a08\u91cf\u306e\u5206\u5e03\u3092\u4f7f\u3063\u3066\u3001\u30d0\u30e9\u30c4\u30ad\uff08\u6a19\u6e96\u8aa4\u5dee\u3001\u4fe1\u983c\u533a\u9593\u306a\u3069\uff09\u3092\u8a08\u7b97\u3059\u308b\u3002\n\u3000\u4f8b\u3048\u3070\u6a19\u6e96\u8aa4\u5dee\u306f\u3001\u6bcd\u96c6\u56e3\u5206\u5e03\u306e\u6a19\u6e96\u504f\u5dee\u306e\u3053\u3068\u306a\u306e\u3067\u3001\u5358\u7d14\u306b\u3001\u6c42\u3081\u3089\u308c\u305f\u7d71\u8a08\u91cf\u5206\u5e03\u306e\u6a19\u6e96\u504f\u5dee\u3092\u6c42\u3081\u308c\u3070\u3044\u3044\u3067\u3059\u306d\u3002\n\u3000\u3053\u3046\u3057\u3066\u3001\u3081\u3067\u305f\u304f\u6c17\u306b\u306a\u308b\u7d71\u8a08\u91cf\u306e\u30d0\u30e9\u30c4\u30ad\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u306e\u5b9f\u8df5\n\u3000python\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046 (Matlab/Octave\u3082\u4e0b\u306b\u3042\u308a\u307e\u3059\uff09\u3002\n\u3000\u307e\u305a\u3001\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30b2\u30c3\u30c8\u3057\u307e\u3059\u3002\n\n# import librarys\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n\n\u3000Numpy\u3092\u4f7f\u3063\u3066\u3001\u30c7\u30fc\u30bf\u3092\u30a2\u30ec\u30a4\u306b\u5165\u308c\u307e\u3059\u3002\n\n# get data\niq = np.array([61, 88, 89, 89, 90, 92, 93, \n               94, 98, 98, 101, 102, 105, 108,\n               109, 113, 114, 115, 120, 138])\n\n\n\u3000\u57fa\u672c\u7d71\u8a08\u91cf\u3068\u3057\u3066\u3001\u5e73\u5747\u5024\u3001\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee\u3001\u4e2d\u592e\u5024\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n# compute mean, SEM (standard error of the mean) and median\nmean_iq = np.average(iq)\nsem_iq = np.std(iq)/np.sqrt(len(iq))\nmedian_iq = np.median(iq)\n\n\n\u3000\u305d\u308c\u305e\u308c\u3001\u5e73\u5747\u5024: 100.85\u3001\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee: 3.45\u3001\u4e2d\u592e\u5024: 99.5 \u3068\u8a08\u7b97\u3067\u304d\u307e\u3057\u305f\u3002\n\u3000\u4e2d\u592e\u5024\u306e\u6a19\u6e96\u8aa4\u5dee\u3092\u6c42\u3081\u308b\u305f\u3081\u3001\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u304c\u6b63\u3057\u304f\u3067\u304d\u3066\u308b\u304b\u306e sanity check \u3068\u3057\u3066\u3001\u4e00\u5fdc\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee\u3082\u4e00\u7dd2\u306b\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\u3000python\u3067\u30011~n\u306e\u9023\u7d9a\u3057\u305f\u6574\u6570\u5024\u3092\u91cd\u8907\u3042\u308a\u3067\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nnp.random.choice(n,n,replace=True)\n\n\n\u3000\u3053\u308c\u3092\u4f7f\u3063\u3066\u3001bootstrap\u306e\u518d\u6a19\u672c\u5316\u3092\u884c\u3044\u307e\u3059\u3002\n\n# bootstrap to compute sem of the median\ndef bootstrap(x,repeats):\n    # placeholder (column1: mean, column2: median)\n    vec = np.zeros((2,repeats))\n    for i in np.arange(repeats):\n        # resample data with replacement\n        re = np.random.choice(len(x),len(x),replace=True)\n        re_x = x[re]\n\n        # compute mean and median of the \"new\" dataset\n        vec[0,i] = np.mean(re_x)\n        vec[1,i] = np.median(re_x)\n\n    # histogram of median from resampled datasets\n    sns.distplot(vec[1,:], kde=False)\n\n    # compute bootstrapped standard error of the mean,\n    # and standard error of the median\n    b_mean_sem = np.std(vec[0,:])\n    b_median_sem = np.std(vec[1,:])\n\n    return b_mean_sem, b_median_sem   \n\n\n\u3000\u3053\u306e\u95a2\u6570\u3092 x = iq, repeats = 1000 \u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u3068\u3001\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u306b\u3088\u3063\u3066\u6c42\u3081\u3089\u308c\u305f1000\u500b\u306e\u4e2d\u592e\u5024\u306e\u5206\u5e03\u3092\u307f\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3000\u2026\u2026\u3082\u3063\u3068\u7e70\u308a\u8fd4\u3057\u3092\u5897\u3084\u3057\u305f\u65b9\u304c\u3088\u304b\u3063\u305f\u304b\u3082\u3067\u3059\u306d\u3002\n\u3000\u3068\u308a\u3042\u3048\u305a\u3001\u3053\u306e\u5206\u5e03\u304b\u3089\u4e2d\u592e\u5024\u306e\u6a19\u6e96\u8aa4\u5dee\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5358\u306b1000\u500b\u306e\u4e2d\u592e\u5024\u306e\u6a19\u6e96\u504f\u5dee\u3092\u8a08\u7b97\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3067\u6c42\u3081\u3089\u308c\u305f\u4e2d\u592e\u5024\u306e\u6a19\u6e96\u8aa4\u5dee: 4.22\n\n\u3000\u540c\u3058\u3088\u3046\u306b\u3001\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee\u3082\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3067\u6c42\u3081\u3089\u308c\u305f\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee: 3.42\n\n\u3000\u6700\u521d\u306b\u3001\u5143\u30c7\u30fc\u30bf\u304b\u3089\u6c42\u3081\u305f\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee\u306f3.45\u306a\u306e\u3067\u3001\u7d50\u69cb\u8fd1\u3044\u3067\u3059\u306d\u3002\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u306f\u6b63\u3057\u304f\u7d71\u8a08\u91cf\u306e\u30d0\u30e9\u30c4\u30ad\u3092\u63a8\u5b9a\u3057\u305f\u3088\u3046\u3067\u3059\u3002\n\u6ce8\u610f\u70b9\n\u3000\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3067\u306f\u30e9\u30f3\u30c0\u30e0\u306b\u518d\u6a19\u672c\u5316\u3059\u308b\u305f\u3081\u3001\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u7d50\u679c\u304c\u5c11\u3057\u305a\u3064\u7570\u306a\u308a\u307e\u3059\u3002\u7d50\u679c\u306e\u30d0\u30e9\u30c4\u30ad\u3092\u6e1b\u3089\u3057\u3001\u3088\u308a\u6b63\u78ba\u306a\u63a8\u5b9a\u3092\u3059\u308b\u306b\u306f\u3001\u7e70\u308a\u8fd4\u3057\u6570\u3092\u5897\u3084\u3059 (~10,000) \u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u3068\u3081\u306e\u307e\u3068\u3081\n\u3000\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3067\u306f\u518d\u6a19\u672c\u5316\u306b\u3088\u308a\u3001\u8208\u5473\u306e\u3042\u308b\u7d71\u8a08\u91cf\u306e\u30d0\u30e9\u30c4\u30ad\u3092\u63a8\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u7d42\u308f\u308a\u306b\n\u3000\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3092\u306f\u3058\u3081\u3001\u7d71\u8a08\u5b66\u306e\u4e2d\u3067\u3082\u518d\u6a19\u672c\u5316 (resampling) \u3092\u8003\u3048\u305f\u4eba\u306f\u5929\u624d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u30c7\u30fc\u30bf\u3092\u4eba\u5de5\u7684\u306b\u5897\u3084\u3057\u3066\u6bcd\u96c6\u56e3\u5206\u5e03\u3092\u8fd1\u4f3c\u3057\u3066\u3057\u307e\u3046\u306a\u3093\u3066\u3001\u3068\u308a\u3042\u3048\u305a\u30c7\u30fc\u30bf\u3092\u3072\u305f\u3059\u3089\u96c6\u3081\u7d9a\u3051\u308b\u82e6\u884c\u304b\u3089\u89e3\u653e\u3055\u308c\u308b\u308f\u3051\u3067\u3059\u306d\uff01\u3082\u3061\u308d\u3093\u3001\u3042\u308b\u7a0b\u5ea6\u30c7\u30fc\u30bf\u3092\u5b9f\u969b\u306b\u3068\u3063\u3066\u6bcd\u96c6\u56e3\u306e\u4ee3\u8868\u4f8b\u3092\u96c6\u3081\u306a\u3051\u308c\u3070\u3001\u3044\u304f\u3089\u518d\u6a19\u672c\u5316\u3057\u3066\u3082\u6c38\u9060\u306b\u6bcd\u96c6\u56e3\u306b\u306f\u8fd1\u3065\u3051\u307e\u305b\u3093\u304c\u2026\u2026\u3002\n\u3000\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\n\nbootstrap_demo.py\n\n# import librarys\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# get data\niq = np.array([61, 88, 89, 89, 90, 92, 93, \n               94, 98, 98, 101, 102, 105, 108,\n               109, 113, 114, 115, 120, 138])\n\n# compute mean, SEM (standard error of the mean) and median\nmean_iq = np.average(iq)\nsem_iq = np.std(iq)/np.sqrt(len(iq))\nmedian_iq = np.median(iq)\n\n# bootstrap to compute sem of the median\ndef bootstrap(x,repeats):\n    # placeholder (column1: mean, column2: median)\n    vec = np.zeros((2,repeats))\n    for i in np.arange(repeats):\n        # resample data with replacement\n        re = np.random.choice(len(x),len(x),replace=True)\n        re_x = x[re]\n\n        # compute mean and median of the \"new\" dataset\n        vec[0,i] = np.mean(re_x)\n        vec[1,i] = np.median(re_x)\n\n    # histogram of median from resampled datasets\n    sns.distplot(vec[1,:], kde=False)\n\n    # compute bootstrapped standard error of the mean,\n    # and standard error of the median\n    b_mean_sem = np.std(vec[0,:])\n    b_median_sem = np.std(vec[1,:])\n\n    return b_mean_sem, b_median_sem   \n\n# execute bootstrap\nbootstrapped_sem = bootstrap(iq,1000)    \n\n\n\nMatlab/Ovctave\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\nbootstrap_demo.m\n\nfunction bootstrap_demo\n\n% data\niq = [61, 88, 89, 89, 90, 92, 93,94, 98, 98, 101, 102, 105, 108,109, 113, 114, 115, 120, 138];\n\n% compute mean, SEM (standard error of the mean) and median\nmean_iq = mean(iq);\nsem_iq = std(iq)/sqrt(length(iq));\nmedian_iq = median(iq);\ndisp(['the mean: ' num2str(mean_iq)])\ndisp(['the SE of the mean: ' num2str(sem_iq)])\ndisp(['the median: ' num2str(median_iq)])\ndisp('---------------------------------')\n\n[b_mean_sem, b_median_sem] = bootstrap(iq, 1000);\ndisp(['bootstrapped SE of the mean: ' num2str(b_mean_sem)])\ndisp(['bootstrapped SE of the median: ' num2str(b_median_sem)])\n\n% bootstrap to compute sem of the median\nfunction [b_mean_sem, b_median_sem] = bootstrap(x, repeats)\n\n% placeholder (column1: mean, column2: median)\nvec = zeros(2,repeats);\nfor i = 1:repeats\n    % resample data with replacement\n    re_x = x(datasample(1:length(x),length(x),'Replace',True));\n\n    % compute mean and median of the \"new\" dataset\n    vec(1,i) = mean(re_x);\n    vec(2,i) = median(re_x);\n\nend\n\n% histogram of median from resampled dataset\nhistogram(vec(2,:))\n\n% compute bootstrapped standard error of the mean, and standard error of\n% the median\nb_mean_sem = std(vec(1,:));\nb_median_sem = std(vec(2,:));\n\n\n\n\n\u53c2\u8003\n\nThe bootstrap method for standard errors and confidence intervals\n\n\u3000\u30c7\u30fc\u30bf\u89e3\u6790\u306f\u307e\u3060\u307e\u3060\u30d6\u30fc\u30e0\u306e\u3088\u3046\u3067\u3059\u3002\u6a5f\u68b0\u5b66\u7fd2\u3067\u3042\u308c\u4f55\u3067\u3042\u308c\u3001\u307e\u305a\u30c7\u30fc\u30bf\u304c\u4e0e\u3048\u3089\u308c\u3066\u3059\u308b\u3053\u3068\u306f\u3001\u30c7\u30fc\u30bf\u3092\u8996\u899a\u5316\u3057\u3066\u3001\u89e3\u6790\u306e\u3068\u3063\u304b\u304b\u308a\u3068\u306a\u308b\u4eee\u8aac\u3092\u3064\u304b\u3080\u3053\u3068\u3067\u3059\u306d\u3002\u4eee\u8aac\u3092\u691c\u8a3c\u3059\u308b\u305f\u3081\u3001\u69d8\u3005\u306a\u89e3\u6790\u3092\u3057\u3066\u69d8\u3005\u306a\u7d71\u8a08\u91cf\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\u3000\n\n\u3000\u305d\u3093\u306a\u3053\u3068\u3092\u3057\u3066\u3044\u308b\u3068\u3001**\u3042\u308b\u7d71\u8a08\u91cf\u306e\u6bcd\u96c6\u56e3\u306b\u304a\u3051\u308b\u30d0\u30e9\u30c4\u30ad**\u304c\u77e5\u308a\u305f\u3044\u3001\u3068\u3044\u3046\u4e8b\u614b\u306b\u51fa\u304f\u308f\u3059\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3000\u305d\u308c\u304c\u30c7\u30fc\u30bf\u306e\u5e73\u5747\u5024\u3067\u3042\u308c\u3070\u3001\u6a19\u6e96\u8aa4\u5dee (standard error of the mean)\u3068\u3044\u3046\u3082\u306e\u3092\u8a08\u7b97\u3059\u308c\u3070OK\u3067\u3059\u3002\u6a19\u6e96\u504f\u5dee\u3092\u3001\u30c7\u30fc\u30bf\u6570\u306e\u5e73\u65b9\u6839\u3067\u5272\u3063\u305f\u3082\u306e\u3067\u3059\u306d\u3002\n\n\u3000\u3068\u3053\u308d\u304c\u3001\u89e3\u6790\u3067\u306f\u5e73\u5747\u3060\u3051\u3067\u306a\u304f\u3001\u4e2d\u592e\u5024 (median)\u3001\u767e\u5206\u7387 (centile)\u3001\u76f8\u95a2\u4fc2\u6570 (correlation coefficient)\u306a\u3069\u69d8\u3005\u306a\u7d71\u8a08\u91cf\u3092\u898b\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u308c\u3089\u306b\u306f**\u6a19\u6e96\u8aa4\u5dee\u3084\u4fe1\u983c\u533a\u9593 (confidence interval)\u3068\u3044\u3063\u305f\u30d0\u30e9\u30c4\u30ad\u3092\u5b9a\u91cf\u5316\u3067\u304d\u308b\u7c21\u5358\u306a\u516c\u5f0f\u304c\u5b58\u5728\u3057\u307e\u305b\u3093**\u3002\u3000\n\n\u3000\u305d\u3093\u306a\u3068\u304d\u306b\u5f79\u306b\u7acb\u3064\u306e\u304c\u3001**\u518d\u6a19\u672c\u5316 (resampling)**\u3001\u7279\u306b\u3001**\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7 (Bootstrap)** \u3068\u3044\u3046\u624b\u6cd5\u3067\u3059\u3002\n\n#\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3068\u306f\u3000\n\u3000\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3067\u306f\u307e\u305a\u3001\u518d\u6a19\u672c\u5316 (resampling)\u306b\u3088\u3063\u3066\u5143\u30c7\u30fc\u30bf\u304b\u3089\u4f55\u5343\u3082\u306e\u4f3c\u305f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u308a\u51fa\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3001\u6b32\u3057\u3044\u7d71\u8a08\u91cf\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\u3059\u308b\u3068\u3001\u305d\u306e\u7d71\u8a08\u91cf\u306e\u5206\u5e03\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u306e\u5206\u5e03\u306e\u6a19\u6e96\u504f\u5dee\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u305d\u306e\u7d71\u8a08\u91cf\u306e\u6a19\u6e96\u8aa4\u5dee\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3000\u4f8b\u3068\u3057\u3066\u300120\u4eba\u306eIQ\u306e\u30c7\u30fc\u30bf\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002\u5024\u306f\u305d\u308c\u305e\u308c\u300161, 88, 89, 89, 90, 92, 93, 94, 98, 98, 101, 102, 105, 108, 109, 113, 114, 115, 120, 138\u3060\u3068\u3057\u307e\u3057\u3087\u3046\u3002\u5206\u5e03\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n![figure1.png](https://qiita-image-store.s3.amazonaws.com/0/122354/2a74fd77-b748-55dc-1d42-3ece76e9e0fd.png)\n\n\u3000\u3053\u306e\u3068\u304d\u3001\u5e73\u5747\u5024 (mean) \u306f100.85\u3001\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee (standard error of the mean) \u306f3.45\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3000\u305f\u3060\u3001\u3053\u3046\u3057\u305f\u5024\u306e\u5206\u5e03\u3063\u3066\u3001\u6240\u5f97\u3068\u304b\u3082\u305d\u3046\u3067\u3059\u3051\u3069\u3001\u5e73\u5747\u5024 (mean) \u3088\u308a\u3082\u4e2d\u592e\u5024 (median) \u306e\u65b9\u304c\u4eba\u306e\u5b9f\u611f\u3092\u53cd\u6620\u3057\u3066\u308b\u3093\u3067\u3059\u3088\u306d\u3002\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3092\u4f7f\u3063\u3066\u3001\u4e2d\u592e\u5024\u306e\u30d0\u30e9\u30c4\u30ad\u3001\u3059\u306a\u308f\u3061**\u4e2d\u592e\u5024\u306e\u6a19\u6e96\u8aa4\u5dee (standard error of the median)** \u3092\u6c42\u3081\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 #\n\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u306f\u3001\u4ee5\u4e0b\u306e\u6d41\u308c\u3067\u884c\u3044\u307e\u3059\u3002\n\n1: \u4f55\u56de\u518d\u6a19\u672c\u5316\u3059\u308b\u304b\u6c7a\u3081\u307e\u3059\u3002\n\u3000500, 1000, 10000, 100000\u306a\u3069\u3001\u30ad\u30ea\u304c\u826f\u304f\u3001\u5927\u304d\u3044\u6570\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u4eca\u56de\u306f1000\u3067\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\n2: \u518d\u6a19\u672c\u5316\u3057\u3066\u3001\u4eba\u5de5\u7684\u306b\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001**\u91cd\u8907\u3092\u8a31\u3057\u3066\u5143\u30c7\u30fc\u30bf\u306e\u6a19\u672c\u6570\u3060\u3051**\u3001\u30c7\u30fc\u30bf\u6a19\u672c\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n\n\u3000\u4f8b\u3048\u3070\u3001\u5143\u30c7\u30fc\u30bf\u304c$X_1,X_2,...,X_5$\u3068$5$\u500b\u3042\u3063\u305f\u3068\u3057\u305f\u3089\u3001\u518d\u6a19\u672c\u5316\u3059\u308b\u305f\u3073\u306b\u751f\u6210\u3055\u308c\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f8b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u518d\u6a19\u672c1 = $X1,X2,X3,X3,X4$\n\u518d\u6a19\u672c2 = $X1,X1,X3,X4,X4$\n\u518d\u6a19\u672c3 = $X2,X2,X5,X5,X5$\n......\n\u518d\u6a19\u672c998 = $X1,X2,X3,X4,X5$\n\u518d\u6a19\u672c999 = $X1,X3,X4,X5,X5$\n\u518d\u6a19\u672c1000 = $X3,X3,X3,X3,X4$\n\n\n\u3000\u3053\u3046\u3057\u3066\u3001\u30b9\u30c6\u30c3\u30d7\uff11\u3067\u6c7a\u3081\u305f\u6570\u3060\u3051\u3001\u91cd\u8907\u3092\u8a31\u3057\u30c7\u30fc\u30bf\u6a19\u672c\u3092\u5143\u30c7\u30fc\u30bf\u6570\u3060\u3051\u53d6\u308a\u51fa\u3059\u3053\u3068\u3092\u7e70\u308a\u8fd4\u3057\u3001\u4eba\u5de5\u7684\u306b\u30c7\u30fc\u30bf\u3092\u4f5c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u3000\u5404\u518d\u6a19\u672c\u306b\u3069\u306e\u30c7\u30fc\u30bf\u6a19\u672c\u304c\u5165\u308b\u304b\u306f\u30e9\u30f3\u30c0\u30e0\u3067\u3059\u30025\u500b\u3059\u3079\u3066\u540c\u3058\u5024\u304c\u5165\u308b\u3068\u304d\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3057\u30015\u500b\u5168\u3066\u9055\u3046\u5024\u304c\u5165\u308b\u3068\u304d\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002\n\n3: \u5404\u518d\u6a19\u672c\u3067\u3001\u6c42\u3081\u305f\u3044\u7d71\u8a08\u91cf\u3092\u8a08\u7b97\u3059\u308b\u3002\n\u3000\u4e2d\u592e\u5024\u306a\u308a\u306a\u3093\u306a\u308a\u3001\u305d\u308c\u305e\u308c\u306e\u518d\u6a19\u672c\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u7d71\u8a08\u91cf\u3092\u6c42\u3081\u307e\u3059\u30021000\u56de\u518d\u6a19\u672c\u5316\u3057\u305f\u3089\u3001\u7d71\u8a08\u91cf\u30821000\u500b\u3068\u308c\u307e\u3059\u306d\u3002\n\n\u518d\u6a19\u672c1 = $X1,X2,X3,X3,X4$\u3000$\\to$ \u7d71\u8a08\u91cf = $S1$\n\u518d\u6a19\u672c2 = $X1,X1,X3,X4,X4$  $\\to$ \u7d71\u8a08\u91cf = $S2$\n\u518d\u6a19\u672c3 = $X2,X2,X5,X5,X5$  $\\to$ \u7d71\u8a08\u91cf = $S3$\n...... \n\u518d\u6a19\u672c998 = $X1,X2,X3,X4,X5$  $\\to$ \u7d71\u8a08\u91cf = $S998$\n\u518d\u6a19\u672c999 = $X1,X3,X4,X5,X5$  $\\to$ \u7d71\u8a08\u91cf = $S999$\n\u518d\u6a19\u672c1000 = $X3,X3,X3,X3,X4$  $\\to$ \u7d71\u8a08\u91cf = $S1000$\n\n\n\u3000\u305f\u304f\u3055\u3093\u7d71\u8a08\u91cf\u304c\u3068\u308c\u307e\u3057\u305f\u306d\u3002\u305d\u3057\u3066\u3001\u3053\u3046\u8003\u3048\u307e\u3059\u3002\n\n\u300c\u3053\u306e\u305f\u304f\u3055\u3093\u306e\u7d71\u8a08\u91cf\u306e\u5206\u5e03\u3063\u3066\u3001**\u305d\u306e\u7d71\u8a08\u91cf\u306e\u6bcd\u96c6\u56e3\u5206\u5e03\u3068\u307b\u307c\u540c\u3058**\u3068\u8003\u3048\u3066\u3044\u3044\u3088\u306d\uff01\u3060\u3063\u3066\u3069\u3046\u305b**\u3082\u3063\u3068\u5b9f\u9a13\u3057\u3066\u30c7\u30fc\u30bf\u3092\u305f\u304f\u3055\u3093\u53d6\u3063\u305f\u3068\u3053\u308d\u3067\u3001\u4f3c\u305f\u3088\u3046\u306a\u5024\u306e\u30c7\u30fc\u30bf\u304c\u5897\u3048\u308b\u3060\u3051**\u3060\u304b\u3089\u306d\uff01\uff01\u300d\n\n\u3000\u3064\u307e\u308a\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3067\u306f\u3001\u5b9f\u9a13\u7684\u306b\u3067\u306f\u306a\u304f\u3001\u7d71\u8a08\u306e\u30c8\u30ea\u30c3\u30af\u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u6570\u3092\u5897\u3084\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u306d\u3002\u305d\u3057\u3066\u30c7\u30fc\u30bf\u6570\u304c\u3042\u308b\u7a0b\u5ea6\u5927\u304d\u3051\u308c\u3070\u3001\u305d\u306e\u5206\u5e03\u306f\u9650\u308a\u306a\u304f\u6bcd\u96c6\u56e3\u306e\u5206\u5e03\u306b\u8fd1\u3044\u306f\u305a\u3060\u3001\u3068\u3044\u3046\u60f3\u5b9a\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u3000\n4: \u6c42\u3081\u305f\u7d71\u8a08\u91cf\u306e\u5206\u5e03\u3092\u4f7f\u3063\u3066\u3001\u30d0\u30e9\u30c4\u30ad\uff08\u6a19\u6e96\u8aa4\u5dee\u3001\u4fe1\u983c\u533a\u9593\u306a\u3069\uff09\u3092\u8a08\u7b97\u3059\u308b\u3002\n\u3000\u4f8b\u3048\u3070**\u6a19\u6e96\u8aa4\u5dee\u306f\u3001\u6bcd\u96c6\u56e3\u5206\u5e03\u306e\u6a19\u6e96\u504f\u5dee**\u306e\u3053\u3068\u306a\u306e\u3067\u3001\u5358\u7d14\u306b\u3001\u6c42\u3081\u3089\u308c\u305f\u7d71\u8a08\u91cf\u5206\u5e03\u306e\u6a19\u6e96\u504f\u5dee\u3092\u6c42\u3081\u308c\u3070\u3044\u3044\u3067\u3059\u306d\u3002\n\n\u3000\u3053\u3046\u3057\u3066\u3001\u3081\u3067\u305f\u304f\u6c17\u306b\u306a\u308b\u7d71\u8a08\u91cf\u306e\u30d0\u30e9\u30c4\u30ad\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n# \u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u306e\u5b9f\u8df5 #\n\u3000python\u3067\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046 (Matlab/Octave\u3082\u4e0b\u306b\u3042\u308a\u307e\u3059\uff09\u3002\n\n\u3000\u307e\u305a\u3001\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30b2\u30c3\u30c8\u3057\u307e\u3059\u3002\n\n```python\n\n# import librarys\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n```\n\n\u3000Numpy\u3092\u4f7f\u3063\u3066\u3001\u30c7\u30fc\u30bf\u3092\u30a2\u30ec\u30a4\u306b\u5165\u308c\u307e\u3059\u3002\n\n```python\n\n# get data\niq = np.array([61, 88, 89, 89, 90, 92, 93, \n               94, 98, 98, 101, 102, 105, 108,\n               109, 113, 114, 115, 120, 138])\n\n```\n\n\u3000\u57fa\u672c\u7d71\u8a08\u91cf\u3068\u3057\u3066\u3001\u5e73\u5747\u5024\u3001\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee\u3001\u4e2d\u592e\u5024\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n```python\n\n# compute mean, SEM (standard error of the mean) and median\nmean_iq = np.average(iq)\nsem_iq = np.std(iq)/np.sqrt(len(iq))\nmedian_iq = np.median(iq)\n\n```\n\n\u3000\u305d\u308c\u305e\u308c\u3001\u5e73\u5747\u5024: 100.85\u3001\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee: 3.45\u3001\u4e2d\u592e\u5024: 99.5 \u3068\u8a08\u7b97\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u3000\u4e2d\u592e\u5024\u306e\u6a19\u6e96\u8aa4\u5dee\u3092\u6c42\u3081\u308b\u305f\u3081\u3001\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u304c\u6b63\u3057\u304f\u3067\u304d\u3066\u308b\u304b\u306e sanity check \u3068\u3057\u3066\u3001\u4e00\u5fdc\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee\u3082\u4e00\u7dd2\u306b\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3000python\u3067\u30011~n\u306e\u9023\u7d9a\u3057\u305f\u6574\u6570\u5024\u3092\u91cd\u8907\u3042\u308a\u3067\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```python\n\nnp.random.choice(n,n,replace=True)\n\n```\n\n\u3000\u3053\u308c\u3092\u4f7f\u3063\u3066\u3001bootstrap\u306e\u518d\u6a19\u672c\u5316\u3092\u884c\u3044\u307e\u3059\u3002\n\n```python\n\n# bootstrap to compute sem of the median\ndef bootstrap(x,repeats):\n    # placeholder (column1: mean, column2: median)\n    vec = np.zeros((2,repeats))\n    for i in np.arange(repeats):\n        # resample data with replacement\n        re = np.random.choice(len(x),len(x),replace=True)\n        re_x = x[re]\n            \n        # compute mean and median of the \"new\" dataset\n        vec[0,i] = np.mean(re_x)\n        vec[1,i] = np.median(re_x)\n    \n    # histogram of median from resampled datasets\n    sns.distplot(vec[1,:], kde=False)\n    \n    # compute bootstrapped standard error of the mean,\n    # and standard error of the median\n    b_mean_sem = np.std(vec[0,:])\n    b_median_sem = np.std(vec[1,:])\n    \n    return b_mean_sem, b_median_sem   \n\n```\n\n\u3000\u3053\u306e\u95a2\u6570\u3092 x = iq, repeats = 1000 \u3068\u3057\u3066\u5b9f\u884c\u3059\u308b\u3068\u3001\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u306b\u3088\u3063\u3066\u6c42\u3081\u3089\u308c\u305f1000\u500b\u306e\u4e2d\u592e\u5024\u306e\u5206\u5e03\u3092\u307f\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n![figure2.png](https://qiita-image-store.s3.amazonaws.com/0/122354/493968ab-5e21-6d6b-94d7-94142e5750d7.png)\n\n\n\u3000\u2026\u2026\u3082\u3063\u3068\u7e70\u308a\u8fd4\u3057\u3092\u5897\u3084\u3057\u305f\u65b9\u304c\u3088\u304b\u3063\u305f\u304b\u3082\u3067\u3059\u306d\u3002\n\n\u3000\u3068\u308a\u3042\u3048\u305a\u3001\u3053\u306e\u5206\u5e03\u304b\u3089\u4e2d\u592e\u5024\u306e\u6a19\u6e96\u8aa4\u5dee\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5358\u306b**1000\u500b\u306e\u4e2d\u592e\u5024\u306e\u6a19\u6e96\u504f\u5dee**\u3092\u8a08\u7b97\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n- \u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3067\u6c42\u3081\u3089\u308c\u305f\u4e2d\u592e\u5024\u306e\u6a19\u6e96\u8aa4\u5dee: 4.22\n\n\u3000\u540c\u3058\u3088\u3046\u306b\u3001\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee\u3082\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n- \u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3067\u6c42\u3081\u3089\u308c\u305f\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee: 3.42\n\n\u3000\u6700\u521d\u306b\u3001\u5143\u30c7\u30fc\u30bf\u304b\u3089\u6c42\u3081\u305f\u5e73\u5747\u5024\u306e\u6a19\u6e96\u8aa4\u5dee\u306f3.45\u306a\u306e\u3067\u3001\u7d50\u69cb\u8fd1\u3044\u3067\u3059\u306d\u3002\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u306f\u6b63\u3057\u304f\u7d71\u8a08\u91cf\u306e\u30d0\u30e9\u30c4\u30ad\u3092\u63a8\u5b9a\u3057\u305f\u3088\u3046\u3067\u3059\u3002\n\n*\u6ce8\u610f\u70b9*\n\u3000\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3067\u306f**\u30e9\u30f3\u30c0\u30e0\u306b\u518d\u6a19\u672c\u5316\u3059\u308b\u305f\u3081\u3001\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u7d50\u679c\u304c\u5c11\u3057\u305a\u3064\u7570\u306a\u308a\u307e\u3059**\u3002\u7d50\u679c\u306e\u30d0\u30e9\u30c4\u30ad\u3092\u6e1b\u3089\u3057\u3001\u3088\u308a\u6b63\u78ba\u306a\u63a8\u5b9a\u3092\u3059\u308b\u306b\u306f\u3001\u7e70\u308a\u8fd4\u3057\u6570\u3092\u5897\u3084\u3059 (~10,000) \u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n# \u307e\u3068\u3081\u306e\u307e\u3068\u3081 #\n\u3000\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3067\u306f\u518d\u6a19\u672c\u5316\u306b\u3088\u308a\u3001\u8208\u5473\u306e\u3042\u308b\u7d71\u8a08\u91cf\u306e\u30d0\u30e9\u30c4\u30ad\u3092\u63a8\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n# \u7d42\u308f\u308a\u306b #\n\u3000\u30d6\u30fc\u30c8\u30b9\u30c8\u30e9\u30c3\u30d7\u3092\u306f\u3058\u3081\u3001\u7d71\u8a08\u5b66\u306e\u4e2d\u3067\u3082\u518d\u6a19\u672c\u5316 (resampling) \u3092\u8003\u3048\u305f\u4eba\u306f\u5929\u624d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u30c7\u30fc\u30bf\u3092\u4eba\u5de5\u7684\u306b\u5897\u3084\u3057\u3066\u6bcd\u96c6\u56e3\u5206\u5e03\u3092\u8fd1\u4f3c\u3057\u3066\u3057\u307e\u3046\u306a\u3093\u3066\u3001\u3068\u308a\u3042\u3048\u305a\u30c7\u30fc\u30bf\u3092\u3072\u305f\u3059\u3089\u96c6\u3081\u7d9a\u3051\u308b\u82e6\u884c\u304b\u3089\u89e3\u653e\u3055\u308c\u308b\u308f\u3051\u3067\u3059\u306d\uff01\u3082\u3061\u308d\u3093\u3001\u3042\u308b\u7a0b\u5ea6\u30c7\u30fc\u30bf\u3092\u5b9f\u969b\u306b\u3068\u3063\u3066\u6bcd\u96c6\u56e3\u306e\u4ee3\u8868\u4f8b\u3092\u96c6\u3081\u306a\u3051\u308c\u3070\u3001\u3044\u304f\u3089\u518d\u6a19\u672c\u5316\u3057\u3066\u3082\u6c38\u9060\u306b\u6bcd\u96c6\u56e3\u306b\u306f\u8fd1\u3065\u3051\u307e\u305b\u3093\u304c\u2026\u2026\u3002\n\n\u3000\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\n\n```python:bootstrap_demo.py\n\n# import librarys\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# get data\niq = np.array([61, 88, 89, 89, 90, 92, 93, \n               94, 98, 98, 101, 102, 105, 108,\n               109, 113, 114, 115, 120, 138])\n\n# compute mean, SEM (standard error of the mean) and median\nmean_iq = np.average(iq)\nsem_iq = np.std(iq)/np.sqrt(len(iq))\nmedian_iq = np.median(iq)\n\n# bootstrap to compute sem of the median\ndef bootstrap(x,repeats):\n    # placeholder (column1: mean, column2: median)\n    vec = np.zeros((2,repeats))\n    for i in np.arange(repeats):\n        # resample data with replacement\n        re = np.random.choice(len(x),len(x),replace=True)\n        re_x = x[re]\n            \n        # compute mean and median of the \"new\" dataset\n        vec[0,i] = np.mean(re_x)\n        vec[1,i] = np.median(re_x)\n    \n    # histogram of median from resampled datasets\n    sns.distplot(vec[1,:], kde=False)\n    \n    # compute bootstrapped standard error of the mean,\n    # and standard error of the median\n    b_mean_sem = np.std(vec[0,:])\n    b_median_sem = np.std(vec[1,:])\n    \n    return b_mean_sem, b_median_sem   \n\n# execute bootstrap\nbootstrapped_sem = bootstrap(iq,1000)    \n\n```\n\nMatlab/Ovctave\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n```matlab:bootstrap_demo.m\n\nfunction bootstrap_demo\n\n% data\niq = [61, 88, 89, 89, 90, 92, 93,94, 98, 98, 101, 102, 105, 108,109, 113, 114, 115, 120, 138];\n\n% compute mean, SEM (standard error of the mean) and median\nmean_iq = mean(iq);\nsem_iq = std(iq)/sqrt(length(iq));\nmedian_iq = median(iq);\ndisp(['the mean: ' num2str(mean_iq)])\ndisp(['the SE of the mean: ' num2str(sem_iq)])\ndisp(['the median: ' num2str(median_iq)])\ndisp('---------------------------------')\n\n[b_mean_sem, b_median_sem] = bootstrap(iq, 1000);\ndisp(['bootstrapped SE of the mean: ' num2str(b_mean_sem)])\ndisp(['bootstrapped SE of the median: ' num2str(b_median_sem)])\n\n% bootstrap to compute sem of the median\nfunction [b_mean_sem, b_median_sem] = bootstrap(x, repeats)\n\n% placeholder (column1: mean, column2: median)\nvec = zeros(2,repeats);\nfor i = 1:repeats\n    % resample data with replacement\n    re_x = x(datasample(1:length(x),length(x),'Replace',True));\n    \n    % compute mean and median of the \"new\" dataset\n    vec(1,i) = mean(re_x);\n    vec(2,i) = median(re_x);\n    \nend\n\n% histogram of median from resampled dataset\nhistogram(vec(2,:))\n\n% compute bootstrapped standard error of the mean, and standard error of\n% the median\nb_mean_sem = std(vec(1,:));\nb_median_sem = std(vec(2,:));\n\n```\n\n\n### \u53c2\u8003 ###\n- [The bootstrap method for standard errors and confidence intervals](http://www.dummies.com/education/science/biology/the-bootstrap-method-for-standard-errors-and-confidence-intervals/)\n"}