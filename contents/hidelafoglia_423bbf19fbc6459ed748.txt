{"context": " More than 1 year has passed since last update.\nCore Animation\u306f\u30bf\u30a4\u30de\u30fc\u3067\u79fb\u52d5\u51e6\u7406\u3092\u66f8\u304b\u306a\u304f\u3066\u3044\u3044\u306e\u3067\u3001\u7406\u89e3\u3059\u308c\u3070\u4fbf\u5229\u3067\u306f\u3042\u308b\u304c\u7d50\u69cb\u96e3\u3057\u3044\u3088\u3046\u306a\n\n\niOS\n\nUIView.Animate(UIView.AnimateAsync)\u304c\u3042\u308b\u306e\u3067\u7c21\u5358\n\n\nViewDidLoad\n\n    public partial class Vision_TouchViewController : UIViewController\n    {\n\n        public override void ViewDidLoad ()\n        {\n            base.ViewDidLoad ();\n\n            // Perform any additional setup after loading the view, typically from a nib.\n            Prepare ();\n            RunTicker ();\n        }   \n\n\nPrepare: \u30e9\u30d9\u30eb\u3092\u4f5c\u308b\n\n        UILabel _label = null;\n\n\n        void Prepare()\n        {\n            if (_label == null) {\n\n                _label = new UILabel (\n                    // \u4eee\u30b5\u30a4\u30ba\u3067\u4f5c\u308b\n                    new System.Drawing.RectangleF (0, 200, 2000, 50)\n                );\n\n                // \u8d64\u5730\u306b\u767d\u3044\u6587\u5b57\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u308b\n                _label.BackgroundColor = UIColor.Red;\n                _label.TextColor = UIColor.White;\n\n                // \u6587\u5b57\u306f\u30bb\u30f3\u30bf\u30ea\u30f3\u30b0\n                _label.TextAlignment = UITextAlignment.Center;\n\n                this.View.AddSubview (_label);\n                this.View.LayoutSubviews ();\n\n                MoveTo (true);        // \u30b9\u30bf\u30fc\u30c8\u30dd\u30b8\u30b7\u30e7\u30f3\u306b\u79fb\u52d5\n            }\n        }\n\n\nMoveTo: \u30e9\u30d9\u30eb\u3092\u79fb\u52d5\n\n        void MoveTo(bool origin=false)\n        {\n            // \u73fe\u5728\u6642\u523b\u8a2d\u5b9a\n            _label.Text = \"Now \" + DateTime.Now.ToLongDateString () + \" \"\n                + DateTime.Now.ToLongTimeString ();\n\n            // \u6587\u5b57\u9818\u57df\u53d6\u5f97\n            var size = _label.StringSize (_label.Text, _label.Font);\n\n            // \u30e9\u30d9\u30eb\u30ea\u30b5\u30a4\u30ba & \u79fb\u52d5\n            _label.Frame = new RectangleF (\n                origin ? 0: -1.0f * (size.Width + View.Frame.Width),\n                _label.Frame.Y,\n                size.Width + 2 * View.Frame.Width , \n                size.Height\n            );\n        }\n\n\nRunTicker: Animation\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u308b\n\n        public void RunTicker()\n        {\n            UIView.Animate (10.0,\n                () => {\n                    MoveTo();           // \u884c\u304d\u5148\u3078\u79fb\u52d5(\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3042\u308a)\n                },\n                () => {\n                    MoveTo(true);       // \u958b\u59cb\u5730\u70b9\u306b\u79fb\u52d5(\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u7121\u3057)\n                    RunTicker();        // \u7d42\u308f\u3063\u305f\u3089\u3082\u3046\u4e00\u56de\n                });\n        }\n\n\nMac\n\nWindowDidLoad\n\nXib \u3067 TickerLabel\u3092NSTextField\u3067Outlet\u3055\u305b\u3066\u304a\u3044\u3066\u308b\nWindow\u306e\u30ea\u30b5\u30a4\u30ba\u3078\u306e\u5bfe\u5fdc\u3068\u304b\u3082\u308d\u3082\u308d\u306fTODO\n\n\n    public partial class MainWindowController : MonoMac.AppKit.NSWindowController\n    {\n        //...\n\n        public override void WindowDidLoad ()\n        {\n            base.WindowDidLoad ();\n\n            Prepare ();        // \u6e96\u5099\n            RunTicker ();      // \u30e9\u30d9\u30eb\u3092\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u308b\n\n        }\n\n\n\nPrepare\n        void Prepare()\n        {\n            // \u540c\u3058\u304f\u8d64\u5730\u306b\u767d\u3044\u6587\u5b57\n            TickerLabel.BackgroundColor = NSColor.Red;\n            TickerLabel.TextColor = NSColor.White;\n            TickerLabel.Alignment = NSTextAlignment.Center;\n\n            // \u73fe\u5728\u6642\u523b\n            var now = DateTime.Now;\n            TickerLabel.StringValue = \"Now \" + now.ToLongDateString () + \" \" +\n                now.ToLongTimeString ();\n\n            // \u6587\u5b57\u5217\u5e45\n            var size = TickerLabel.AttributedStringValue.Size;\n\n            // \u521d\u671f\u5024\n            TickerLabel.Frame = \n                new System.Drawing.RectangleF (\n                    0.0f,\n                    TickerLabel.Frame.Y,\n                    size.Width + 2 * Window.Frame.Width, \n                    size.Height * 2);\n        }\n\n\n\u30e9\u30d9\u30eb\u306e\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\n        PointF StartLocation()\n        {\n            return  new PointF (\n                    0, TickerLabel.Frame.Y);\n        }\n\n        PointF StopLocation()\n        {\n            return  new PointF (\n                -1 * (Window.Frame.Width + TickerLabel.AttributedStringValue.Size.Width), \n                TickerLabel.Frame.Y);\n        }\n\n\nTicker\u3092\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u308b\n        void RunTicker()\n        {\n            // \u958b\u59cb\u4f4d\u7f6e\u3078\u79fb\u52d5\n            TickerLabel.SetFrameOrigin (StartLocation ());\n\n            // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n            var animation = CreateTickerAnimation (\n                                 StartLocation (), StopLocation ());\n\n            // \u30e9\u30d9\u30eb\u306b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u8a2d\u5b9a\n            var key = new NSString (@\"frameOrigin\");\n            var animations = NSDictionary.FromObjectAndKey (animation, key);\n            TickerLabel.Animations = animations;\n\n            // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u304c\u7d42\u308f\u3063\u305f\u3089...\n            animation.AnimationStopped += (object sender, CAAnimationStateEventArgs e) => {\n                RunTicker ();        // \u3082\u3046\u4e00\u56de\uff01\n            };\n\n            // \u958b\u59cb\n            ((NSTextField)TickerLabel.Animator).SetFrameOrigin (StopLocation ());\n\n        }\n\n\n\u79fb\u52d5\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n\nCoreAnimation\u306f\u96e3\u3057\u3044\n\n        CAKeyFrameAnimation CreateTickerAnimation(\n            PointF fromp, PointF top, float duration = 6.0f, int rate = 10 )\n        {\n            // \u30d1\u30b9\u4f5c\u6210\n            var path = new CGPath ();\n\n            //\u958b\u59cb\u4f4d\u7f6e\u3078\u79fb\u52d5\n            path.MoveToPoint(fromp);\n\n            // rate\u306e\u6570\u3060\u3051\u79fb\u52d5\n            for (int index = 0; index <= rate; index++)\n            {\n                path.CGPathAddLineToPoint(\n                    fromp.X + (top.X - fromp.X ) / rate * index,\n                    top.Y);\n            }\n            //\u76ee\u7684\u5730\u3078\u79fb\u52d5\n            path.MoveToPoint (top);\n\n            // \u30d1\u30b9\u4fdd\u5b58\n            path.CloseSubpath();\n\n            // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u4f5c\u3063\u3066\u8fd4\u3059\n            return new CAKeyFrameAnimation () {\n                Duration =duration,\n                Path = path,\n                RemovedOnCompletion = true,\n            };\n        }\n\n\n- Core Animation\u306f\u30bf\u30a4\u30de\u30fc\u3067\u79fb\u52d5\u51e6\u7406\u3092\u66f8\u304b\u306a\u304f\u3066\u3044\u3044\u306e\u3067\u3001\u7406\u89e3\u3059\u308c\u3070\u4fbf\u5229\u3067\u306f\u3042\u308b\u304c\u7d50\u69cb\u96e3\u3057\u3044\u3088\u3046\u306a\n\n# iOS\n\n- UIView.Animate(UIView.AnimateAsync)\u304c\u3042\u308b\u306e\u3067\u7c21\u5358\n\n## ViewDidLoad\n\n~~~csharp\n\n\tpublic partial class Vision_TouchViewController : UIViewController\n\t{\n\t\n\t\tpublic override void ViewDidLoad ()\n\t\t{\n\t\t\tbase.ViewDidLoad ();\n\t\t\t\n\t\t\t// Perform any additional setup after loading the view, typically from a nib.\n\t\t\tPrepare ();\n\t\t\tRunTicker ();\n\t\t}\t\n~~~\n\t\n\n## Prepare: \u30e9\u30d9\u30eb\u3092\u4f5c\u308b\n\n~~~csharp\n\n\t\tUILabel _label = null;\n\n\n\t\tvoid Prepare()\n\t\t{\n\t\t\tif (_label == null) {\n\n\t\t\t\t_label = new UILabel (\n\t\t\t\t    // \u4eee\u30b5\u30a4\u30ba\u3067\u4f5c\u308b\n\t\t\t\t\tnew System.Drawing.RectangleF (0, 200, 2000, 50)\n\t\t\t\t);\n\t\t\t\t\n\t\t\t\t// \u8d64\u5730\u306b\u767d\u3044\u6587\u5b57\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u308b\n\t\t\t\t_label.BackgroundColor = UIColor.Red;\n\t\t\t\t_label.TextColor = UIColor.White;\n\t\t\t\t\n\t\t\t\t// \u6587\u5b57\u306f\u30bb\u30f3\u30bf\u30ea\u30f3\u30b0\n\t\t\t\t_label.TextAlignment = UITextAlignment.Center;\n\n\t\t\t\tthis.View.AddSubview (_label);\n\t\t\t\tthis.View.LayoutSubviews ();\n\n\t\t\t\tMoveTo (true);        // \u30b9\u30bf\u30fc\u30c8\u30dd\u30b8\u30b7\u30e7\u30f3\u306b\u79fb\u52d5\n\t\t\t}\n\t\t}\n~~~\t\n\n\n## MoveTo: \u30e9\u30d9\u30eb\u3092\u79fb\u52d5\n\n~~~csharp\n\n\t\tvoid MoveTo(bool origin=false)\n\t\t{\n\t\t    // \u73fe\u5728\u6642\u523b\u8a2d\u5b9a\n\t\t\t_label.Text = \"Now \" + DateTime.Now.ToLongDateString () + \" \"\n\t\t\t\t+ DateTime.Now.ToLongTimeString ();\n\t\t\n\t\t    // \u6587\u5b57\u9818\u57df\u53d6\u5f97\n\t\t\tvar size = _label.StringSize (_label.Text, _label.Font);\n\n            // \u30e9\u30d9\u30eb\u30ea\u30b5\u30a4\u30ba & \u79fb\u52d5\n\t\t\t_label.Frame = new RectangleF (\n\t\t\t\torigin ? 0: -1.0f * (size.Width + View.Frame.Width),\n\t\t\t\t_label.Frame.Y,\n\t\t\t\tsize.Width + 2 * View.Frame.Width , \n\t\t\t\tsize.Height\n\t\t\t);\n\t\t}\n~~~\n\n## RunTicker: Animation\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u308b\n\n~~~csharp\n\n\t\tpublic void RunTicker()\n\t\t{\n\t\t\tUIView.Animate (10.0,\n\t\t\t\t() => {\n\t\t\t\t\tMoveTo();           // \u884c\u304d\u5148\u3078\u79fb\u52d5(\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3042\u308a)\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tMoveTo(true);       // \u958b\u59cb\u5730\u70b9\u306b\u79fb\u52d5(\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u7121\u3057)\n\t\t\t\t\tRunTicker();        // \u7d42\u308f\u3063\u305f\u3089\u3082\u3046\u4e00\u56de\n\t\t\t\t});\n\t\t}\n~~~\t\t\n\n# Mac\n\n## WindowDidLoad\n\n- Xib \u3067 TickerLabel\u3092NSTextField\u3067Outlet\u3055\u305b\u3066\u304a\u3044\u3066\u308b\n- Window\u306e\u30ea\u30b5\u30a4\u30ba\u3078\u306e\u5bfe\u5fdc\u3068\u304b\u3082\u308d\u3082\u308d\u306fTODO\n\n~~~csharp\n\n\tpublic partial class MainWindowController : MonoMac.AppKit.NSWindowController\n\t{\n\t    //...\n\t    \n\t\tpublic override void WindowDidLoad ()\n\t\t{\n\t\t\tbase.WindowDidLoad ();\n\n\t\t\tPrepare ();        // \u6e96\u5099\n\t\t\tRunTicker ();      // \u30e9\u30d9\u30eb\u3092\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u308b\n\n\t\t}\n\n~~~\n\n## Prepare\n\n~~~csharp\n\t\tvoid Prepare()\n\t\t{\n\t\t    // \u540c\u3058\u304f\u8d64\u5730\u306b\u767d\u3044\u6587\u5b57\n\t\t\tTickerLabel.BackgroundColor = NSColor.Red;\n\t\t\tTickerLabel.TextColor = NSColor.White;\n\t\t\tTickerLabel.Alignment = NSTextAlignment.Center;\n\n            // \u73fe\u5728\u6642\u523b\n\t\t\tvar now = DateTime.Now;\n\t\t\tTickerLabel.StringValue = \"Now \" + now.ToLongDateString () + \" \" +\n\t\t\t\tnow.ToLongTimeString ();\n\n            // \u6587\u5b57\u5217\u5e45\n\t\t\tvar size = TickerLabel.AttributedStringValue.Size;\n\n            // \u521d\u671f\u5024\n\t\t\tTickerLabel.Frame = \n\t\t\t\tnew System.Drawing.RectangleF (\n\t\t\t\t\t0.0f,\n\t\t\t\t\tTickerLabel.Frame.Y,\n\t\t\t\t\tsize.Width + 2 * Window.Frame.Width, \n\t\t\t\t\tsize.Height * 2);\n\t\t}\n~~~\n\n## \u30e9\u30d9\u30eb\u306e\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\n\n~~~csharp\n\t\tPointF StartLocation()\n\t\t{\n\t\t\treturn\tnew PointF (\n\t\t\t\t\t0, TickerLabel.Frame.Y);\n\t\t}\n\t\t\t\n\t\tPointF StopLocation()\n\t\t{\n\t\t\treturn\tnew PointF (\n\t\t\t\t-1 * (Window.Frame.Width + TickerLabel.AttributedStringValue.Size.Width), \n\t\t\t\tTickerLabel.Frame.Y);\n\t\t}\n~~~\n\n## Ticker\u3092\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u308b\n\n~~~csharp\n\t\tvoid RunTicker()\n\t\t{\n\t\t    // \u958b\u59cb\u4f4d\u7f6e\u3078\u79fb\u52d5\n\t\t\tTickerLabel.SetFrameOrigin (StartLocation ());\n\t\t\n\t\t    // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\n\t\t\tvar animation = CreateTickerAnimation (\n\t\t\t\t                 StartLocation (), StopLocation ());\n\t\t\t\n\t\t\t// \u30e9\u30d9\u30eb\u306b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u8a2d\u5b9a\n\t\t\tvar key = new NSString (@\"frameOrigin\");\n\t\t\tvar animations = NSDictionary.FromObjectAndKey (animation, key);\n\t\t\tTickerLabel.Animations = animations;\n\n            // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u304c\u7d42\u308f\u3063\u305f\u3089...\n\t\t\tanimation.AnimationStopped += (object sender, CAAnimationStateEventArgs e) => {\n\t\t\t\tRunTicker ();        // \u3082\u3046\u4e00\u56de\uff01\n\t\t\t};\n\t\t\t\n\t\t\t// \u958b\u59cb\n\t\t\t((NSTextField)TickerLabel.Animator).SetFrameOrigin (StopLocation ());\n\n\t\t}\n~~~\t\t\t\t\n\n### \u79fb\u52d5\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n\n- CoreAnimation\u306f\u96e3\u3057\u3044\n\n~~~csharp\n\t\tCAKeyFrameAnimation CreateTickerAnimation(\n\t\t\tPointF fromp, PointF top, float duration = 6.0f, int rate = 10 )\n\t\t{\n\t\t    // \u30d1\u30b9\u4f5c\u6210\n\t\t\tvar path = new CGPath ();\n\n            //\u958b\u59cb\u4f4d\u7f6e\u3078\u79fb\u52d5\n\t\t\tpath.MoveToPoint(fromp);\n\n            // rate\u306e\u6570\u3060\u3051\u79fb\u52d5\n\t\t\tfor (int index = 0; index <= rate; index++)\n\t\t\t{\n\t\t\t\tpath.CGPathAddLineToPoint(\n\t\t\t\t\tfromp.X + (top.X - fromp.X ) / rate * index,\n\t\t\t\t\ttop.Y);\n\t\t\t}\n            //\u76ee\u7684\u5730\u3078\u79fb\u52d5\n\t\t\tpath.MoveToPoint (top);\n\t\t\t\n\t\t\t// \u30d1\u30b9\u4fdd\u5b58\n\t\t\tpath.CloseSubpath();\n\t\t\n\t\t    // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u4f5c\u3063\u3066\u8fd4\u3059\n\t\t\treturn new CAKeyFrameAnimation () {\n\t\t\t\tDuration =duration,\n\t\t\t\tPath = path,\n\t\t\t\tRemovedOnCompletion = true,\n\t\t\t};\n\t\t}\n~~~\n", "tags": ["Mac", "iOS", "CoreAnimation", "Xamarin"]}