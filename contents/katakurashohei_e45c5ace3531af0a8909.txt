{"context": "Intel\u306eEdison\u306f\u3001L\u30c1\u30ab\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u304c\u9577\u304f\u3001\u3082\u3046\u4e00\u5ea6\u3084\u308b\u3068\u304d\u306b\u3044\u3061\u3044\u3061\u8abf\u3079\u308b\u306e\u304c\u9762\u5012\u306a\u306e\u3067\u30e1\u30e2\u3002\n\u4eca\u56de\u306f Arduino\u62e1\u5f35\u30dc\u30fc\u30c9\u3092\u524d\u63d0 \u306b\u3057\u3066\u3044\u308b\u3002\n\n\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3092\u5165\u308c\u308b\n\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3092\u5165\u308c\u308b\u65b9\u6cd5\u3067\u3001Edison\u306eVlolume\u306bOS\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3088\u3046\u306a\u3084\u308a\u65b9\u304c\u3042\u308b\u304c\u3001\u6700\u65b0\u306eYocto OS\u3060\u3068\u5bb9\u91cf\u304c\u8db3\u308a\u306a\u3044\u3068\u8a00\u308f\u308c\u3066\u3057\u307e\u3044\u3067\u304d\u306a\u3044\u3002\n\u305d\u3053\u3067\u30a4\u30e1\u30fc\u30b8\u3092\u76f4\u63a5\u713c\u304d\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b\u3068\u601d\u308f\u308c\u308b\u3002\nhomebrew\u3067\u4e0b\u8a183\u3064\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nbrew install dfu-util coreutils gnu-getopt\n\nYocto\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u3053\u3053\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002\ncd /iot-devkit-prof-dev-image-edison-20160606-patch\n\n\u66f8\u304d\u8fbc\u3080\u30b3\u30de\u30f3\u30c9\n./flashall.sh\n\n\u305d\u3046\u3059\u308b\u3068\nUsing U-Boot target: edison-blankcdc\nNow waiting for dfu device 8087:0a99\nPlease plug and reboot the board\n\n\u3068\u51fa\u3066\u304f\u308b\u306e\u3067\u3001\u30dc\u30fc\u30c9\u306eSW1UI5\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3002\n\uff15\u5206\u5f8c\u304f\u3089\u3044\u306b\u66f8\u304d\u8fbc\u307e\u308c\u308b\u3002\n\u53c2\u8003URL\uff1aFlashing the firmware on a system with Mac* OS X* (manual process)\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3 opkg\nedison\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u3089\u307e\u305a\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u3002\uff08\u30ed\u30b0\u30a4\u30f3\u306b\u3057\u304b\u305f\u306f\u3001\u3053\u3061\u3089\u53c2\u7167\uff09\n\u307e\u305a\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\necho \"src/gz all http://repo.opkg.net/edison/repo/all\nsrc/gz edison http://repo.opkg.net/edison/repo/edison\nsrc/gz core2-32 http://repo.opkg.net/edison/repo/core2-32\" > /etc/opkg/base-feeds.conf\n\n\necho \"src iotkit http://iotdk.intel.com/repos/3.5/intelgalactic/opkg/i586/\n           src iotdk-all http://iotdk.intel.com/repos/3.5/iotdk/edison/all\n           src iotdk-core2-32 http://iotdk.intel.com/repos/3.5/iotdk/edison/core2-32\n           src iotdk-edison http://iotdk.intel.com/repos/3.5/iotdk/edison/edison\" > /etc/opkg/iotkit.conf\n\n\u305d\u3057\u305f\u3089\nopkg update\nopkg upgrade\n\nGPIO\u3092\u3044\u3058\u308b\u305f\u3081\u306bmraa\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\necho \"src mraa-upm http://iotdk.intel.com/repos/3.5/intelgalactic/opkg/i586\" > /etc/opkg/mraa-upm.conf\nopkg update\nopkg install mraa\n\n\u3053\u308c\u3067\u4e00\u5fdcGPIO\u3092\u3044\u3058\u308c\u308b\u3068\u3053\u308d\u307e\u3067\u5b8c\u4e86\u3002\n\nL\u30c1\u30ab\nmraa\u306eGitHub\u3092\u53c2\u8003\n:Blink-IO.js\nvar m = require('mraa'); //require mraa\nconsole.log('MRAA Version: ' + m.getVersion()); //write the mraa version to the console\n\nvar myLed = new m.Gpio(13); //LED hooked up to digital pin 13 (or built in pin on Galileo Gen1 & Gen2)\nmyLed.dir(m.DIR_OUT); //set the gpio direction to output\nvar ledState = true; //Boolean to hold the state of Led\n\nfunction periodicActivity()\n{\n  myLed.write(ledState?1:0); //if ledState is true then write a '1' (high) otherwise write a '0' (low)\n  ledState = !ledState; //invert the ledState\n  setTimeout(periodicActivity,1000); //call the indicated function after 1 second (1000 milliseconds)\n}\n\nperiodicActivity(); //call the periodicActivity function\n\n\u3053\u308c\u3067L\u30c1\u30ab\u307e\u3067ok\u3002\nBreakout board\u3067LED\u3092\u3061\u3083\u3093\u3068\u5149\u3089\u305b\u308b\u306b\u306f\u3061\u3087\u3063\u3068\u96fb\u5b50\u5de5\u4f5c\u304c\u5fc5\u8981\u306a\u306e\u3067\u307e\u305f\u5f8c\u3067\u5225\u306b\u66f8\u3053\u3046\u3068\u601d\u3046\u3002\nIntel\u306eEdison\u306f\u3001L\u30c1\u30ab\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u304c\u9577\u304f\u3001\u3082\u3046\u4e00\u5ea6\u3084\u308b\u3068\u304d\u306b\u3044\u3061\u3044\u3061\u8abf\u3079\u308b\u306e\u304c\u9762\u5012\u306a\u306e\u3067\u30e1\u30e2\u3002\n\u4eca\u56de\u306f **Arduino\u62e1\u5f35\u30dc\u30fc\u30c9\u3092\u524d\u63d0** \u306b\u3057\u3066\u3044\u308b\u3002\n\n# \u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3092\u5165\u308c\u308b\n\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3092\u5165\u308c\u308b\u65b9\u6cd5\u3067\u3001Edison\u306eVlolume\u306bOS\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3088\u3046\u306a\u3084\u308a\u65b9\u304c\u3042\u308b\u304c\u3001\u6700\u65b0\u306eYocto OS\u3060\u3068\u5bb9\u91cf\u304c\u8db3\u308a\u306a\u3044\u3068\u8a00\u308f\u308c\u3066\u3057\u307e\u3044\u3067\u304d\u306a\u3044\u3002\n\n\u305d\u3053\u3067\u30a4\u30e1\u30fc\u30b8\u3092\u76f4\u63a5\u713c\u304d\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b\u3068\u601d\u308f\u308c\u308b\u3002\n\nhomebrew\u3067\u4e0b\u8a183\u3064\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash\nbrew install dfu-util coreutils gnu-getopt\n```\n\nYocto\u306e\u30a4\u30e1\u30fc\u30b8\u3092[\u3053\u3053](https://software.intel.com/iot/hardware/edison/downloads)\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002\n\n```bash\ncd /iot-devkit-prof-dev-image-edison-20160606-patch\n```\n\u66f8\u304d\u8fbc\u3080\u30b3\u30de\u30f3\u30c9\n\n```bash\n./flashall.sh\n```\n\n\u305d\u3046\u3059\u308b\u3068\n\n```bash\nUsing U-Boot target: edison-blankcdc\nNow waiting for dfu device 8087:0a99\nPlease plug and reboot the board\n```\n\n\u3068\u51fa\u3066\u304f\u308b\u306e\u3067\u3001\u30dc\u30fc\u30c9\u306eSW1UI5\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3002\n\uff15\u5206\u5f8c\u304f\u3089\u3044\u306b\u66f8\u304d\u8fbc\u307e\u308c\u308b\u3002\n\u53c2\u8003URL\uff1a[Flashing the firmware on a system with Mac* OS X* (manual process)](https://software.intel.com/en-us/flashing-firmware-on-your-intel-edison-board-mac-os-x)\n\n# \u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3 opkg\nedison\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u3089\u307e\u305a\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u3002\uff08\u30ed\u30b0\u30a4\u30f3\u306b\u3057\u304b\u305f\u306f\u3001[\u3053\u3061\u3089](http://trac.switch-science.com/wiki/IntelEdison)\u53c2\u7167\uff09\n\n\u307e\u305a\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\n\n```bash\necho \"src/gz all http://repo.opkg.net/edison/repo/all\nsrc/gz edison http://repo.opkg.net/edison/repo/edison\nsrc/gz core2-32 http://repo.opkg.net/edison/repo/core2-32\" > /etc/opkg/base-feeds.conf\n\n```\n\n```bash\necho \"src iotkit http://iotdk.intel.com/repos/3.5/intelgalactic/opkg/i586/\n           src iotdk-all http://iotdk.intel.com/repos/3.5/iotdk/edison/all\n           src iotdk-core2-32 http://iotdk.intel.com/repos/3.5/iotdk/edison/core2-32\n           src iotdk-edison http://iotdk.intel.com/repos/3.5/iotdk/edison/edison\" > /etc/opkg/iotkit.conf\n```\n\u305d\u3057\u305f\u3089\n\n```bash\nopkg update\nopkg upgrade\n```\n\nGPIO\u3092\u3044\u3058\u308b\u305f\u3081\u306bmraa\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash\necho \"src mraa-upm http://iotdk.intel.com/repos/3.5/intelgalactic/opkg/i586\" > /etc/opkg/mraa-upm.conf\nopkg update\nopkg install mraa\n```\n\u3053\u308c\u3067\u4e00\u5fdcGPIO\u3092\u3044\u3058\u308c\u308b\u3068\u3053\u308d\u307e\u3067\u5b8c\u4e86\u3002\n\n# L\u30c1\u30ab\n\n[mraa\u306eGitHub](https://github.com/intel-iot-devkit/mraa/blob/master/examples/javascript/Blink-IO.js)\u3092\u53c2\u8003\n\n```js\n:Blink-IO.js\nvar m = require('mraa'); //require mraa\nconsole.log('MRAA Version: ' + m.getVersion()); //write the mraa version to the console\n\nvar myLed = new m.Gpio(13); //LED hooked up to digital pin 13 (or built in pin on Galileo Gen1 & Gen2)\nmyLed.dir(m.DIR_OUT); //set the gpio direction to output\nvar ledState = true; //Boolean to hold the state of Led\n\nfunction periodicActivity()\n{\n  myLed.write(ledState?1:0); //if ledState is true then write a '1' (high) otherwise write a '0' (low)\n  ledState = !ledState; //invert the ledState\n  setTimeout(periodicActivity,1000); //call the indicated function after 1 second (1000 milliseconds)\n}\n\nperiodicActivity(); //call the periodicActivity function\n```\n\u3053\u308c\u3067L\u30c1\u30ab\u307e\u3067ok\u3002\n\nBreakout board\u3067LED\u3092\u3061\u3083\u3093\u3068\u5149\u3089\u305b\u308b\u306b\u306f\u3061\u3087\u3063\u3068\u96fb\u5b50\u5de5\u4f5c\u304c\u5fc5\u8981\u306a\u306e\u3067\u307e\u305f\u5f8c\u3067\u5225\u306b\u66f8\u3053\u3046\u3068\u601d\u3046\u3002\n\n\n\n\n", "tags": ["Edison", "Node.js"]}