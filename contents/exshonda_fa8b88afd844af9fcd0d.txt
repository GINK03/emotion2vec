{"context": "\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0cTOPPERS/R2CA\u306b\u3088\u308a\uff0cNCES IoT Base Shield \u306b\u63a5\u7d9a\u3057\u305f\u30bb\u30f3\u30b5(Ultrasonic Ranger)\u306e\u5024\u3092Milkcocoa\u306bsend\u3057\u305f\u308a\uff0cMilkcocoa\u7d4c\u7531\u3067\u53d7\u3051\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u306b\u3088\u308a\u30b5\u30fc\u30dc\u3092\u99c6\u52d5\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e\nNCES IoT Base Shiled\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\nArduino M0 Pro \u3067\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 : NCES IoT Base Shield : Wifi/SD\u6a5f\u80fd\nArduino M0 Pro \u3067\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 : NCES IoT Base Shield : GROVE\u6a5f\u80fd\n\n\n\u5fc5\u8981\u306a\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\n\n\nArduino M0 Pro \nNCES IoT Base Shield\nGrove Servo\nGrove - Ultrasonic Ranger\nWindows PC\n\n\nWindows7\u3068Windows10\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\nUSB(microB)\u30b1\u30fc\u30d6\u30eb\n\n\n\u30dc\u30fc\u30c9\u306b\u306f\u4ed8\u5c5e\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u7528\u610f\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\n\n\n\n\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u8a2d\u5b9a\nArduino M0 Pro \u3067\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 : Milkcocoa\u3078\u306e\u63a5\u7d9a\u3092\u53c2\u8003\u306b\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\n\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nM0\u306bNCES IoT Base Shield \u3092\u53d6\u308a\u4ed8\u3051\u3066\uff0c\u3055\u3089\u306bGrove Servo\u3092D2\u306b\uff0c\u3068Grove - Ultrasonic Ranger\u3092D3\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff0e\n\n\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\uff0e\n\nexamples\\Milkcocoa_NCESIoT\n\n\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0eSTA_SSID/STA_PASSWORD\u306f\u4f7f\u7528\u3059\u308b\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u5b9a\u7fa9\u3057\u3066\u4e0b\u3055\u3044\uff0eMILKCOCOA_APP_ID/MILKCOCOA_DATASTORE\u3082\u540c\u69d8\u306b\u30b5\u30fc\u30d0\u30fc\u306e\u8a2d\u5b9a\u306b\u5408\u308f\u305b\u3066\u5b9a\u7fa9\u3057\u307e\u3059\uff0e\n\u30bf\u30b9\u30af\u6570\u306f2\u500b\u3067\uff0c\u7247\u65b9\u306e\u30bf\u30b9\u30af(loop()\u3092\u5b9f\u884c\u3059\u308b\u30e1\u30a4\u30f3\u30bf\u30b9\u30af)\u3067\uff0cUltora Sonic\u306e\u5024\u3092\u53d6\u5f97\u3057\u3066RangeInCentimeters\u306e\u30ad\u30fc\u306b\u8a2d\u5b9a\u3057\u3066push()\u3067\u9001\u4fe1\u3057\u307e\u3059\uff0e\n\u3082\u3046\u7247\u65b9\u306e\u30bf\u30b9\u30af(loop1()\u3092\u5b9f\u884c\u3059\u308btask1)\u306f\uff0cmilkcocoa.loop(1)\u3067\u30c7\u30fc\u30bf\u304c\u6765\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\uff0c\u30c7\u30fc\u30bf\u304c\u6765\u3066\u3044\u308c\u3070\uff0conpush()\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0eonpush()\u306f\uff0cSERVO\u306e\u30ad\u30fc\u304c\u9001\u4fe1\u3055\u308c\u305f\u5834\u5408\u306f\u6574\u6570\u5024\u306b\u5909\u63db\u3057\u3066\uff0c0\u304b\u3089180\u306e\u7bc4\u56f2\u306a\u3089\u30b5\u30fc\u30dc\u3092\u6307\u5b9a\u3055\u308c\u305f\u89d2\u5ea6\u3067\u99c6\u52d5\u3057\u307e\u3059\uff0e\n\nexamples\\Milkcocoa_NCESIoT\\r2ca_app.h\n#define R2CA_NUM_TASK 1\n\n\n\n\nexamples\\Milkcocoa_NCESIoT\\r2ca_app.cpp\n#include \"r2ca.h\"\n#include \"ESP8266.h\"\n#include \"Milkcocoa.h\"\n#include \"Client_ESP8266.h\"\n\n#include \"../examples_gdef.h\"\n\n#define MILKCOCOA_SERVERPORT  1883\n\nESP8266Client wifi_client;\n\nconst char MQTT_SERVER[] PROGMEM    = MILKCOCOA_APP_ID \".mlkcca.com\";\nconst char MQTT_CLIENTID[] PROGMEM  = __TIME__ MILKCOCOA_APP_ID;\n\nMilkcocoa milkcocoa = Milkcocoa(&wifi_client, MQTT_SERVER, MILKCOCOA_SERVERPORT, MILKCOCOA_APP_ID, MQTT_CLIENTID);\n\n#include <Servo.h> \nServo myservo; \n\n#include \"Ultrasonic.h\"\nUltrasonic ultrasonic(3);\n\nextern void onpush(DataElement *elem);\n\nbool setup_done = false;\n\nvoid setup()\n{\n    int ret;\n\n    Serial.begin(115200);\n    Serial.print(\"Milkcocoa NCES IoT demo\");\n\n    // Connect to WiFi access point.\n    Serial.println(); Serial.println();\n    Serial.print(\"Connecting to \");\n    Serial.println(STA_SSID);\n\n    ret = WiFi.begin(Serial5, 115200);\n\n    if(ret == 1) {\n        Serial.print(\"Cannot communicate with ESP8266.\");\n        while(1);        \n    } else if(ret == 2) {\n        Serial.println(\"FW Version mismatch.\");\n        Serial.print(\"FW Version:\");\n        Serial.println(WiFi.getVersion().c_str());\n        Serial.print(\"Supported FW Version:\");\n        Serial.println(ESP8266_SUPPORT_VERSION);\n        while(1);\n    } else {\n        Serial.print(\"begin ok\\r\\n\");\n    }\n\n    Serial.print(\"FW Version:\");\n    Serial.println(WiFi.getVersion().c_str());\n\n    if (WiFi.setOprToStation()) {\n        Serial.print(\"to station ok\\r\\n\");\n    } else {\n        Serial.print(\"to station err\\r\\n\");\n    }\n\n    if (WiFi.joinAP(STA_SSID, STA_PASSWORD)) {\n        Serial.print(\"Join AP success\\r\\n\");\n        Serial.print(\"IP: \");\n        Serial.println(WiFi.getLocalIP().c_str());    \n    } else {\n        Serial.print(\"Join AP failure\\r\\n\");\n    }\n\n    if (WiFi.stopServer()) {\n        Serial.print(\"Stop server ok\\r\\n\");\n    } else {\n        Serial.print(\"Stop server err\\r\\n\");\n    }        \n\n    if (WiFi.disableMUX()) {\n        Serial.print(\"single ok\\r\\n\");\n    } else {\n        Serial.print(\"single err\\r\\n\");\n    }\n\n    if (milkcocoa.on(MILKCOCOA_DATASTORE, \"push\", onpush)){\n        Serial.println(\"milkcocoa on sucesss\");   \n    }\n    else {\n        Serial.println(\"milkcocoa on failure\");   \n    }\n\n    myservo.attach(2);\n\n    setup_done = true;\n    Serial.println(\"setup end\\r\\n\");\n}\n\nvoid loop() {\n    int8_t ret;\n    int8_t push_ret;\n\n    long RangeInCentimeters;\n    RangeInCentimeters = ultrasonic.MeasureInCentimeters();\n    Serial.print(RangeInCentimeters);//0~400cm\n    Serial.println(\" cm\");\n\n    DataElement elem = DataElement();\n    elem.setValue(\"RangeInCentimeters\", (int)RangeInCentimeters);\n\n    do {\n        push_ret = milkcocoa.push(MILKCOCOA_DATASTORE, &elem);\n        if (push_ret != 0) {\n            Serial.println(\"Milkcocoa.push() error.\");\n            Serial.println(milkcocoa.pushErrorString(push_ret));\n            Serial.println(push_ret);\n            Serial.println(\"Retrying MQTT push in 5 seconds...\");\n            delay(5000);\n        }        \n    }while(push_ret != 0);\n\n    Serial.println(\"Push success.\");\n    delay(2000);\n\n    if (Serial.available() > 0) {\n        Serial.read();\n        Serial.print(\"Pause  : Input any char to continue.\\n\\r\");\n        while(!(Serial.available() > 0));\n        Serial.print(\"Resume.\\n\\r\");\n        Serial.read();\n    }    \n}\n\nvoid onpush(DataElement *pelem) {\n    char *data;\n    int  pos;\n    if(!pelem->getString(\"SERVO\", &data)) {\n        return;\n    };\n\n    pos = atoi(data);\n\n    if ((pos >=  0) && (pos <= 180))  {\n        myservo.write(pos);\n        Serial.print(\"Ser Servo : \");\n        Serial.println(pos);\n    }\n}\n\nvoid loop1() {\n    int8_t ret;\n    while((ret = milkcocoa.loop(1)) != 0) {\n        Serial.println(\"Milkcocoa.loop() connection error.\");\n        Serial.println(milkcocoa.connectErrorString(ret));\n        Serial.println(ret);\n        Serial.println(\"Retrying MQTT connection in 5 seconds...\");\n        delay(5000);\n    }\n    delay(100);\n}\n\n\n\u5b9f\u884c\u5f8c\uff0c\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306bUltrasonic Ranger\u306e\u5024\u304c\u30b9\u30c8\u30a2\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\u307e\u305f\uff0cMilkcocoa Tester\u306b\u3088\u308a\uff0cSERVO\u306e\u30ad\u30fc\u306b\u5024\u3092\u6307\u5b9a\u3057\u3066\u9001\u4fe1\u3059\u308b\u3053\u3068\u306b\u3088\u308a\uff0c\u30b5\u30fc\u30dc\u304c\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\n\n\u304a\u308f\u308a\u306b\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0cTOPPERS/R2CA\u306b\u3088\u308b NCES IoT Base Shield \u3068Milkcocoa\u306e\u9023\u643a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3057\u305f\uff0e\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u304c\u4f7f\u3048\u308b\u306e\u3067\uff0cMilkcocoa\u3078\u306e\u9001\u4fe1\u3068\u53d7\u4fe1\u3092\u72ec\u7acb\u3057\u3066\u5b9f\u65bd\u3067\u304d\u308b\u306e\u3067\uff0c\u30bf\u30a4\u30df\u30f3\u30b0\u304c\u7570\u306a\u308b\u5834\u5408\u3082\u5bb9\u6613\u306b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u53ef\u80fd\u3067\u3059\uff0e\n#\u306f\u3058\u3081\u306b\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0cTOPPERS/R2CA\u306b\u3088\u308a\uff0cNCES IoT Base Shield \u306b\u63a5\u7d9a\u3057\u305f\u30bb\u30f3\u30b5(Ultrasonic Ranger)\u306e\u5024\u3092Milkcocoa\u306bsend\u3057\u305f\u308a\uff0cMilkcocoa\u7d4c\u7531\u3067\u53d7\u3051\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u306b\u3088\u308a\u30b5\u30fc\u30dc\u3092\u99c6\u52d5\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e\n\nNCES IoT Base Shiled\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\n- [Arduino M0 Pro \u3067\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 : NCES IoT Base Shield : Wifi/SD\u6a5f\u80fd](http://qiita.com/exshonda/items/48b30a165e4c6845e900)\n- [Arduino M0 Pro \u3067\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 : NCES IoT Base Shield : GROVE\u6a5f\u80fd](http://qiita.com/exshonda/items/4b8b9525d7bfaca8a6ad)\n\n\n# \u5fc5\u8981\u306a\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\n\n- [Arduino M0 Pro](http://www.arduino.org/products/boards/4-arduino-boards/arduino-m0-pro) \n- NCES IoT Base Shield\n- [Grove Servo](http://www.seeedstudio.com/wiki/Grove_-_Servo)\n- [Grove - Ultrasonic Ranger](http://www.seeedstudio.com/wiki/Grove_-_Ultrasonic_Ranger)\n- Windows PC\n - Windows7\u3068Windows10\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\uff0e\n- USB(microB)\u30b1\u30fc\u30d6\u30eb\n - \u30dc\u30fc\u30c9\u306b\u306f\u4ed8\u5c5e\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u7528\u610f\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\n#\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u8a2d\u5b9a\n\n[Arduino M0 Pro \u3067\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 : Milkcocoa\u3078\u306e\u63a5\u7d9a](http://qiita.com/exshonda/items/5f84f50c15bcbbb178cd)\u3092\u53c2\u8003\u306b\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\n##\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nM0\u306bNCES IoT Base Shield \u3092\u53d6\u308a\u4ed8\u3051\u3066\uff0c\u3055\u3089\u306bGrove Servo\u3092D2\u306b\uff0c\u3068Grove - Ultrasonic Ranger\u3092D3\u306b\u63a5\u7d9a\u3057\u307e\u3059\uff0e\n\n<img width=\"400\" alt=\"aFullSizeRender.jpg.jpg\" src=https://qiita-image-store.s3.amazonaws.com/0/106870/73e75c70-1c50-712f-1948-eff16c108437.jpeg>\n\n##\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\uff0e\n\n- examples\\Milkcocoa_NCESIoT\n\n\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0eSTA_SSID/STA_PASSWORD\u306f\u4f7f\u7528\u3059\u308b\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u5b9a\u7fa9\u3057\u3066\u4e0b\u3055\u3044\uff0eMILKCOCOA_APP_ID/MILKCOCOA_DATASTORE\u3082\u540c\u69d8\u306b\u30b5\u30fc\u30d0\u30fc\u306e\u8a2d\u5b9a\u306b\u5408\u308f\u305b\u3066\u5b9a\u7fa9\u3057\u307e\u3059\uff0e\n\n\u30bf\u30b9\u30af\u6570\u306f2\u500b\u3067\uff0c\u7247\u65b9\u306e\u30bf\u30b9\u30af(loop()\u3092\u5b9f\u884c\u3059\u308b\u30e1\u30a4\u30f3\u30bf\u30b9\u30af)\u3067\uff0cUltora Sonic\u306e\u5024\u3092\u53d6\u5f97\u3057\u3066RangeInCentimeters\u306e\u30ad\u30fc\u306b\u8a2d\u5b9a\u3057\u3066push()\u3067\u9001\u4fe1\u3057\u307e\u3059\uff0e\n\n\u3082\u3046\u7247\u65b9\u306e\u30bf\u30b9\u30af(loop1()\u3092\u5b9f\u884c\u3059\u308btask1)\u306f\uff0cmilkcocoa.loop(1)\u3067\u30c7\u30fc\u30bf\u304c\u6765\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\uff0c\u30c7\u30fc\u30bf\u304c\u6765\u3066\u3044\u308c\u3070\uff0conpush()\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0eonpush()\u306f\uff0cSERVO\u306e\u30ad\u30fc\u304c\u9001\u4fe1\u3055\u308c\u305f\u5834\u5408\u306f\u6574\u6570\u5024\u306b\u5909\u63db\u3057\u3066\uff0c0\u304b\u3089180\u306e\u7bc4\u56f2\u306a\u3089\u30b5\u30fc\u30dc\u3092\u6307\u5b9a\u3055\u308c\u305f\u89d2\u5ea6\u3067\u99c6\u52d5\u3057\u307e\u3059\uff0e\n\n```examples\\Milkcocoa_NCESIoT\\r2ca_app.h\n#define R2CA_NUM_TASK 1\n\n```\n\n```examples\\Milkcocoa_NCESIoT\\r2ca_app.cpp\n#include \"r2ca.h\"\n#include \"ESP8266.h\"\n#include \"Milkcocoa.h\"\n#include \"Client_ESP8266.h\"\n\n#include \"../examples_gdef.h\"\n\n#define MILKCOCOA_SERVERPORT  1883\n\nESP8266Client wifi_client;\n\nconst char MQTT_SERVER[] PROGMEM    = MILKCOCOA_APP_ID \".mlkcca.com\";\nconst char MQTT_CLIENTID[] PROGMEM  = __TIME__ MILKCOCOA_APP_ID;\n\nMilkcocoa milkcocoa = Milkcocoa(&wifi_client, MQTT_SERVER, MILKCOCOA_SERVERPORT, MILKCOCOA_APP_ID, MQTT_CLIENTID);\n\n#include <Servo.h> \nServo myservo; \n\n#include \"Ultrasonic.h\"\nUltrasonic ultrasonic(3);\n\nextern void onpush(DataElement *elem);\n\nbool setup_done = false;\n\nvoid setup()\n{\n    int ret;\n    \n    Serial.begin(115200);\n    Serial.print(\"Milkcocoa NCES IoT demo\");\n\n    // Connect to WiFi access point.\n    Serial.println(); Serial.println();\n    Serial.print(\"Connecting to \");\n    Serial.println(STA_SSID);\n\n    ret = WiFi.begin(Serial5, 115200);\n\n    if(ret == 1) {\n        Serial.print(\"Cannot communicate with ESP8266.\");\n        while(1);        \n    } else if(ret == 2) {\n        Serial.println(\"FW Version mismatch.\");\n        Serial.print(\"FW Version:\");\n        Serial.println(WiFi.getVersion().c_str());\n        Serial.print(\"Supported FW Version:\");\n        Serial.println(ESP8266_SUPPORT_VERSION);\n        while(1);\n    } else {\n        Serial.print(\"begin ok\\r\\n\");\n    }\n\n    Serial.print(\"FW Version:\");\n    Serial.println(WiFi.getVersion().c_str());\n    \n    if (WiFi.setOprToStation()) {\n        Serial.print(\"to station ok\\r\\n\");\n    } else {\n        Serial.print(\"to station err\\r\\n\");\n    }\n    \n    if (WiFi.joinAP(STA_SSID, STA_PASSWORD)) {\n        Serial.print(\"Join AP success\\r\\n\");\n        Serial.print(\"IP: \");\n        Serial.println(WiFi.getLocalIP().c_str());    \n    } else {\n        Serial.print(\"Join AP failure\\r\\n\");\n    }\n\n    if (WiFi.stopServer()) {\n        Serial.print(\"Stop server ok\\r\\n\");\n    } else {\n        Serial.print(\"Stop server err\\r\\n\");\n    }        \n    \n    if (WiFi.disableMUX()) {\n        Serial.print(\"single ok\\r\\n\");\n    } else {\n        Serial.print(\"single err\\r\\n\");\n    }\n    \n    if (milkcocoa.on(MILKCOCOA_DATASTORE, \"push\", onpush)){\n        Serial.println(\"milkcocoa on sucesss\");   \n    }\n    else {\n        Serial.println(\"milkcocoa on failure\");   \n    }\n\n    myservo.attach(2);\n    \n    setup_done = true;\n    Serial.println(\"setup end\\r\\n\");\n}\n\nvoid loop() {\n    int8_t ret;\n    int8_t push_ret;\n    \n    long RangeInCentimeters;\n    RangeInCentimeters = ultrasonic.MeasureInCentimeters();\n    Serial.print(RangeInCentimeters);//0~400cm\n    Serial.println(\" cm\");\n    \n    DataElement elem = DataElement();\n    elem.setValue(\"RangeInCentimeters\", (int)RangeInCentimeters);\n    \n    do {\n        push_ret = milkcocoa.push(MILKCOCOA_DATASTORE, &elem);\n        if (push_ret != 0) {\n            Serial.println(\"Milkcocoa.push() error.\");\n            Serial.println(milkcocoa.pushErrorString(push_ret));\n            Serial.println(push_ret);\n            Serial.println(\"Retrying MQTT push in 5 seconds...\");\n            delay(5000);\n        }        \n    }while(push_ret != 0);\n    \n    Serial.println(\"Push success.\");\n    delay(2000);\n    \n    if (Serial.available() > 0) {\n        Serial.read();\n        Serial.print(\"Pause  : Input any char to continue.\\n\\r\");\n        while(!(Serial.available() > 0));\n        Serial.print(\"Resume.\\n\\r\");\n        Serial.read();\n    }    \n}\n\nvoid onpush(DataElement *pelem) {\n    char *data;\n    int  pos;\n    if(!pelem->getString(\"SERVO\", &data)) {\n        return;\n    };\n    \n    pos = atoi(data);\n\n    if ((pos >=  0) && (pos <= 180))  {\n        myservo.write(pos);\n        Serial.print(\"Ser Servo : \");\n        Serial.println(pos);\n    }\n}\n\nvoid loop1() {\n    int8_t ret;\n    while((ret = milkcocoa.loop(1)) != 0) {\n        Serial.println(\"Milkcocoa.loop() connection error.\");\n        Serial.println(milkcocoa.connectErrorString(ret));\n        Serial.println(ret);\n        Serial.println(\"Retrying MQTT connection in 5 seconds...\");\n        delay(5000);\n    }\n    delay(100);\n}\n```\n\n\u5b9f\u884c\u5f8c\uff0c\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u306bUltrasonic Ranger\u306e\u5024\u304c\u30b9\u30c8\u30a2\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\u307e\u305f\uff0c[Milkcocoa Tester](http://milkcocoa-tester.netlify.com/)\u306b\u3088\u308a\uff0cSERVO\u306e\u30ad\u30fc\u306b\u5024\u3092\u6307\u5b9a\u3057\u3066\u9001\u4fe1\u3059\u308b\u3053\u3068\u306b\u3088\u308a\uff0c\u30b5\u30fc\u30dc\u304c\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\n\n#\u304a\u308f\u308a\u306b\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0cTOPPERS/R2CA\u306b\u3088\u308b NCES IoT Base Shield \u3068Milkcocoa\u306e\u9023\u643a\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3057\u305f\uff0e\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u304c\u4f7f\u3048\u308b\u306e\u3067\uff0cMilkcocoa\u3078\u306e\u9001\u4fe1\u3068\u53d7\u4fe1\u3092\u72ec\u7acb\u3057\u3066\u5b9f\u65bd\u3067\u304d\u308b\u306e\u3067\uff0c\u30bf\u30a4\u30df\u30f3\u30b0\u304c\u7570\u306a\u308b\u5834\u5408\u3082\u5bb9\u6613\u306b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u53ef\u80fd\u3067\u3059\uff0e\n\n", "tags": ["Arduino", "TOPPERS", "R2CA", "IoT", "milkcocoa"]}