{"context": " More than 1 year has passed since last update.\uff16\u901a\u308a\u306e\u65b9\u6cd5\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u3010 \u2160. \u8aac\u660e\u5909\u6570\u6bce\u306e\u56de\u5e30\u4fc2\u6570 \u306e t\u5024\u30fbp\u5024\u3001\u56de\u5e30\u30e2\u30c7\u30eb\u5168\u4f53\u306e\u6c7a\u5b9a\u4fc2\u6570\u3001p\u5024\u3001D.W.\u5024\u3001Jarque-Bera\u7d71\u8a08\u91cf \u3092\u51fa\u529b\u3067\u304d\u308b\u65b9\u6cd5 \u3011\n\n\n\n(1) statsmodels.formula.api \u306e ols.fit()\u30e1\u30bd\u30c3\u30c9\n\n\n\uff08 \u30b3\u30fc\u30c9\u4e8b\u4f8b \uff09\n\n\nPython For Economist \u300c\u7b2c6\u56de: Statsmodels\u3067\u304b\u3093\u305f\u3093\u56de\u5e30\u5206\u6790\u300d\n\n\nPython 2.7\nimport statsmodels.formula.api as smf\n\nols_result = smf.ols(eq, data=LD).fit()\nprint(ols_result.summary())\n\n\n\u306a\u304a\u3001\u4ee5\u4e0b\u306e\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3067\u306f\u3001import\u6587\u306b formula \u3092\u5272\u611b\u3057\u3066\u3001import statsmodels.api \u3067\u5b9f\u884c\u3067\u304d\u3066\u3044\u308b_\n\n@IT atmarkIT \u300c\u56de\u5e30\u5206\u6790II\uff1a\u91cd\u56de\u5e30\u5206\u6790\u306e\u65b9\u6cd5\u3001\u79d1\u5b66\u7684\u306a\u5c06\u6765\u4e88\u6e2c (1/3)\u300d\n\n\nimport statsmodels.api as sm\n\uff08 x \u3068 y \u306e\u5b9a\u7fa9\u90e8\u5206 \u4e2d\u7565 \uff09\nmodel = sm.OLS(y,X)\nresults = model.fit()\nresults.summary()\n\n\n\uff08 \u53c2\u8003 \uff09 Statsmodels \u30e2\u30b8\u30e5\u30fc\u30eb \u82f1\u6587\u30de\u30cb\u30e5\u30a2\u30eb\u30fb\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\n\n\nStatsmodels\n\n\n\n(2) Pandas \u30e2\u30b8\u30e5\u30fc\u30eb \u306e ols()\u30e1\u30bd\u30c3\u30c9\n\n\n\u56de\u5e30\u4fc2\u6570\u306et\u5024\u3001p\u5024\u3001\u6a19\u6e96\u8aa4\u5dee\u3001\u30e2\u30c7\u30eb\u5f0f\u306e\u6c7a\u5b9a\u4fc2\u6570\u3001F\u5024\u306f\u51fa\u529b\u3055\u308c\u308b\u304c\u3001D.W.\u5024\u3001Jarque-Bera\u7d71\u8a08\u91cf\u307e\u3067\u306f\u51fa\u529b\u3055\u308c\u306a\u3044\n\n\n\uff08 \u30b3\u30fc\u30c9\u4e8b\u4f8b \uff09\n\n\nJBClub \u300cPython\u3067\u56de\u5e30\u5206\u6790\u3000\uff08\u8eab\u9577\u3068\u4f53\u91cd\u306e\u95a2\u4fc2\u3001PV\u3068\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u95a2\u4fc2\uff09\u300d\n\n\nPython 2.7\nimport pandas as pd\n\ndf = pd.read_csv('data.csv')\nx_data = df[0]\ny_data = df[1]\n\nmodel = pd.ols(y=y_data, x=x_data, intercept=True)\nplot(model.x['x'], model.y_fitted, 'g-')\n\nprint(model)\n\n\n\n\n(3) Orange \u30e2\u30b8\u30e5\u30fc\u30eb \u306e regression.linear.LinearRegressionLearner() \u30e1\u30bd\u30c3\u30c9\n\n\n\u56de\u5e30\u4fc2\u6570\u306et\u5024\u3001p\u5024\u3001\u6a19\u6e96\u8aa4\u5dee\u306f\u51fa\u529b\u3055\u308c\u308b\u304c\u3001D.W.\u5024\u3001Jarque-Bera\u7d71\u8a08\u91cf\u307e\u3067\u306f\u51fa\u529b\u3055\u308c\u306a\u3044\n\n\n\uff08 \u30b3\u30fc\u30c9\u4e8b\u4f8b \uff09\n\n\n\u5206\u6790\u6280\u8853\u3068\u30d3\u30b8\u30cd\u30b9\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30b9 \u300cPython\uff1a\u56de\u5e30\u5206\u6790\u300d\n\n\n\u4eca\u56de\u306fPython\u306b\u3088\u308b\u56de\u5e30\u5206\u6790\uff08OLS\uff1aOrdinary Least Squares\uff09\u306e\u5b9f\u65bd\u65b9\u6cd5\u3092\u307e\u3068\u3081\u308b\u3002\n\u307e\u305a\u306f\u6700\u5c0f2\u4e57\u6cd5\u306b\u57fa\u3065\u304f\u91cd\u56de\u5e30\u5f0f\u306e\u4f5c\u6210\u3068\u7d50\u679c\u8868\u793a\u65b9\u6cd5\u3092\u53d6\u308a\u4e0a\u3052\u308b\u3002\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f7f\u3044\u5206\u3051\u306b\u3064\u3044\u3066\u306f\u8abf\u67fb\u306e\u3057\u3084\u3059\u3055\u3092\u512a\u5148\u3057\u3066\u3044\u308b\u304c\u3001\u56de\u5e30\u5206\u6790\u306b\u3064\u3044\u3066\u306f\u7d71\u8a08\u30e2\u30c7\u30eb\u306fOrange\u3001\u4e88\u6e2c\u30e2\u30c7\u30eb\u306fscikit-learn\u3067\u3084\u308d\u3046\u304b\u306a\u3068\u8003\u3048\u3066\u3044\u308b\u3002\n\u672c\u6765\u306f\u3059\u3079\u3066\u3092\u7d71\u4e00\u3057\u305f\u3044\u304c\u3001\u5f8c\u8005\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u56de\u5e30\u5206\u6790\u306e\u7d50\u679c\u8868\u793a\u3067\u3001p\u5024\u3084\u504f\u56de\u5e30\u4fc2\u6570\u306e\u51fa\u529b\u304c\u7121\u3044\u3088\u3046\u3060\u3057\u3001\u30b9\u30c6\u30c3\u30d7\u30ef\u30a4\u30ba\u306e\u5b9f\u65bd\u65b9\u6cd5\u3082\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u3002\n\u3057\u304b\u3057\u3001\u4e88\u6e2c\u30e2\u30c7\u30eb\u3068\u306a\u308c\u3070\u3001\u305d\u306e\u7cbe\u5ea6\u3068\u5805\u7262\u6027\u3092\u9ad8\u3081\u308b\u3053\u3068\u304c\u76ee\u7684\u3068\u306a\u308a\u3001p\u5024\u306a\u3069\u306b\u8a00\u53ca\u3057\u306a\u304f\u3066\u3082\u8aac\u660e\u8cac\u4efb\u306f\u679c\u305f\u305b\u308b\u306e\u3067\u3001\u9006\u306bscikit-learn\u306e\u30b7\u30f3\u30d7\u30eb\u3055\u304c\u751f\u304b\u305b\u308b\u3068\u601d\u3063\u3066\u3044\u308b\u3002\n\n\nPython 2.7\nimport Orange\n\ndata = Orange.data.Table('data.txt')\n\nlearner = Orange.regression.linear.LinearRegressionLearner()\nclassifier = learner(data)\n#\u9023\u7d9a\u5909\u6570\u306e\u57fa\u6e96\u5316\u3001\u8cea\u7684\u5909\u6570\u306e\u30c0\u30df\u30fc\u5909\u6570\u5316\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b9f\u65bd\u3055\u308c\u308b\n#\u6b20\u640d\u5024\u306e\u51e6\u7406\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3084\u308b\u3002\u5e73\u5747\u5024\u88dc\u9593\u3001\u6700\u983b\u5024\u88dc\u9593\u3002\n#\u500b\u4eba\u7684\u306b\u306f\u6b20\u640d\u5024\u51e6\u7406\u306f\u30c7\u30fc\u30bf\u51e6\u7406\u306e\u6bb5\u968e\u3067Pandas\u3067\u3084\u308b\u3064\u3082\u308a\n\nprint(classifier)\n\n\n\nOrange\u3067\u306fdict\u5f62\u5f0f\u3067\u30e2\u30c7\u30eb\u7d50\u679c\u60c5\u5831\u3092\u683c\u7d0d\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u3002\n\n\n\n\n\u3010 \u2161. \u30e2\u30c7\u30eb\u306e\u6c7a\u5b9a\u4fc2\u6570\u306f\u51fa\u308b\u304c\u3001\u8aac\u660e\u5909\u6570\u6bce\u306e\u56de\u5e30\u4fc2\u6570 \u306e t\u5024\u30fbp\u5024\u3001\u30e2\u30c7\u30eb\u306ep\u5024\u3001D.W.\u5024\u3001Jarque-Bera\u7d71\u8a08\u91cf \u306f\u51fa\u529b\u3055\u308c\u306a\u3044\u65b9\u6cd5 \u3011\n\n\n\n(4) scikit-learn \u30e2\u30b8\u30e5\u30fc\u30eb \u306e linear_model.LinearRegression() \u30e1\u30bd\u30c3\u30c9\n\n\n\uff08 \u30b3\u30fc\u30c9\u4e8b\u4f8b \uff09\n\n\n\u5165\u9580\u6a5f\u68b0\u5b66\u7fd2\u306e\u7dda\u5f62\u56de\u5e30\u3092scikit-learn\u3067\u3084\u3063\u3066\u307f\u308b\n\n\u5de5\u4f5c\u3068\u304b\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u304b \u300cPython\u3068scikit-learn\u3067\u5358\u56de\u5e30\u5206\u6790\u300d\n\n\u4e0a\u8a18\u30b5\u30a4\u30c8\u306e\u30b3\u30fc\u30c9\n\n\nGitHub Gist mia-0032 / 03_linear.py\n\n\nPython 2.7\nfrom sklearn import linear_model\nimport pandas as pd\n\ndata = pd.read_csv(\"data.csv\")\n\nlm = linear_model.LinearRegression()\n\nx_data = data[\"x_colname\"]\ny_data = data[\"y_colname\"]\n\nlm.fit(x_data, y_data)\n\nprint(lm.coef_)\nprint(lm.intercept_)\nprint(lm.score(score_X, score_y)\n\n\n\n\n\u6c7a\u5b9a\u4fc2\u6570 \u3084 t\u5024\u3001p\u5024\u306a\u3069\u3001\u691c\u5b9a\u7d71\u8a08\u91cf \u3092\u51fa\u529b\u3057\u306a\u3044\u3067\u3001\u56de\u5e30\u4fc2\u6570\uff08\u3068\u305d\u306e\u30b0\u30e9\u30d5\u63cf\u753b\uff09\u3060\u3051\u3092\u6c42\u3081\u308b\u65b9\u6cd5\n\n(5) Numpy \u30e2\u30b8\u30e5\u30fc\u30eb \u306e polyfit()\u30e1\u30bd\u30c3\u30c9\u3067\u56de\u5e30\u4fc2\u6570\u3092\u6c42\u3081\u305f\u5f8c\u306b\u3001poly1d()\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u6e21\u3057\u3066\u3001\u56de\u5e30\u4fc2\u6570\u3092\u4fc2\u6570\u306b\u3082\u3064\u591a\u9805\u5f0f\u3092\u751f\u6210\u3057\u3066\u30e2\u30c7\u30eb\u5f0f\u3092\u5f97\u308b\u6d41\u308c\n\n\n\uff08 \u30b3\u30fc\u30c9\u4e8b\u4f8b \uff09\n\n\nynakayama\u3055\u3093 Qiita\u6295\u7a3f\u8a18\u4e8b \u300cNumPy \u3067\u56de\u5e30\u5206\u6790\u3092\u3059\u308b\u300d\n\n\u4ee5\u4e0b\u3067\u306f\u3001\u504f\u56de\u5e30\u4fc2\u6570\u3092\u6c42\u3081\u3066\u3044\u308b\n\n\u7d71\u8a08\u5b66\u901f\u5831 \u300c\u3010Python/NumPy\u3011\u91cd\u56de\u5e30\u5206\u6790\u30fb\u591a\u5909\u91cf\u89e3\u6790\u300d\n\n\nPython 2.7\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.array([0.0, 1.0, 2.0, 3.0,  4.0,  5.0])\ny = np.array([0.0, 0.8, 0.9, 0.1, -0.8, -1.0])\n\nz = np.polyfit(x, y, 3) # 3 \u306f\u56de\u5e30\u30e2\u30c7\u30eb\u306e\u591a\u9805\u5f0f\u306e\u6b21\u6570\n                        # z \u306b\u306f\u3001\u30c7\u30fc\u30bf\uff08x, y\uff09\u306b\uff13\u6b21\u66f2\u7dda\u3092\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u3057\u305f\u7d50\u679c\u306e\u56de\u5e30\u4fc2\u6570\u304c\u683c\u7d0d\u3055\u308c\u308b\n\np = np.poly1d(z)        # \u5f15\u6570\u306b\u5165\u308c\u305f\uff08\u8907\u6570\u306e\uff09\u56de\u5e30\u4fc2\u6570\u3092\u3082\u3064\u591a\u9805\u5f0f\u3092\u751f\u6210\uff08\u56de\u5e30\u4fc2\u6570\u304c\uff13\u500b\u306e\u5834\u5408\u3001\u81ea\u52d5\u7684\u306b\uff13\u6b21\u5f0f\u306e\u6570\u5f0f\u3092\u751f\u6210\uff09\n\nxp = np.linspace(-2, 6, 100) # \u30b0\u30e9\u30d5\u63cf\u753b\u306e\u305f\u3081\u3001\u63cf\u753b\u753b\u9762\u306ex\u8ef8\uff08\u6a2a\u8ef8\uff09\u306e\u7bc4\u56f2\u3092\u5b9a\u7fa9\uff08 x\u306e\u7bc4\u56f2\uff1d\u5b9a\u7fa9\u57df -2\u304b\u30896\u307e\u3067\u306e\u533a\u9593\u3092100\u523b\u307f \uff09\n\nplt.plot(x, y, '.', xp, p(xp), '-')\nplt.ylim(-2,2) # \u63cf\u753b\u753b\u9762\u306e\u7e26\u8ef8\uff08y\u8ef8\uff09\u306e\u533a\u9593\uff08\u5024\u57df\uff09\u3092\u6307\u5b9a\nplt.show()\nplt.savefig('image.png')\n\n\n\n\n(6) Scipy \u30e2\u30b8\u30e5\u30fc\u30eb \u306e stats.linregress()\u30e1\u30bd\u30c3\u30c9\n\n\n\uff08 \u30b3\u30fc\u30c9\u4e8b\u4f8b \uff09\n\n\n\u69cb\u9020\u8a08\u753b\u7814\u7a76\u6240 Minitab News Letter 2014/07 \u300c\u7b2c2\u56de:\u56de\u5e30\u5206\u6790\u300d\n\n\nPython 2.7\nfrom matplotlib import lines\nfrom scipy import stats\n\nx_data = [15, 21, 36, 49, 51, 63, 77]\ny_data = [300, 600, 120, 420, 100, 310, 261]\n\nslope, intercept, _, _, _ = stats.linregress(x_data, y_data)\na\nfunc = lambda x: x * slope + intercept\n\nestimated_y = [func(x) for x in x_data]\n\n\n__\uff16\u901a\u308a\u306e\u65b9\u6cd5\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002__\n\n___\n\n\n## __\u3010 \u2160. \u8aac\u660e\u5909\u6570\u6bce\u306e\u56de\u5e30\u4fc2\u6570 \u306e t\u5024\u30fbp\u5024\u3001\u56de\u5e30\u30e2\u30c7\u30eb\u5168\u4f53\u306e\u6c7a\u5b9a\u4fc2\u6570\u3001p\u5024\u3001D.W.\u5024\u3001Jarque-Bera\u7d71\u8a08\u91cf \u3092\u51fa\u529b\u3067\u304d\u308b\u65b9\u6cd5 \u3011__\n___\n\n#### __(1) statsmodels.formula.api \u306e ols.fit()\u30e1\u30bd\u30c3\u30c9__\n\n##### __\uff08 \u30b3\u30fc\u30c9\u4e8b\u4f8b \uff09__\n* __[Python For Economist \u300c\u7b2c6\u56de: Statsmodels\u3067\u304b\u3093\u305f\u3093\u56de\u5e30\u5206\u6790\u300d](http://necochan.com/2014/06/07/python-for-economist-6/)__\n\n```{Python:Python 2.7}\nimport statsmodels.formula.api as smf\n\nols_result = smf.ols(eq, data=LD).fit()\nprint(ols_result.summary())\n```\n\n__\u306a\u304a\u3001\u4ee5\u4e0b\u306e\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3067\u306f\u3001import\u6587\u306b formula \u3092\u5272\u611b\u3057\u3066\u3001import statsmodels.api \u3067\u5b9f\u884c\u3067\u304d\u3066\u3044\u308b___\n\n* __[@IT atmarkIT \u300c\u56de\u5e30\u5206\u6790II\uff1a\u91cd\u56de\u5e30\u5206\u6790\u306e\u65b9\u6cd5\u3001\u79d1\u5b66\u7684\u306a\u5c06\u6765\u4e88\u6e2c (1/3)\u300d](http://www.atmarkit.co.jp/ait/articles/1312/18/news117.html)__\n\n> import statsmodels.api as sm\n>\n__\uff08 x \u3068 y \u306e\u5b9a\u7fa9\u90e8\u5206 \u4e2d\u7565 \uff09__\n\n> model = sm.OLS(y,X)\n> results = model.fit()\n> results.summary()\n\n##### __\uff08 \u53c2\u8003 \uff09 Statsmodels \u30e2\u30b8\u30e5\u30fc\u30eb \u82f1\u6587\u30de\u30cb\u30e5\u30a2\u30eb\u30fb\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8__\n* __[Statsmodels](http://statsmodels.sourceforge.net/)__\n\n\n___\n\n\n#### __(2) Pandas \u30e2\u30b8\u30e5\u30fc\u30eb \u306e ols()\u30e1\u30bd\u30c3\u30c9__\n\n#### __\u56de\u5e30\u4fc2\u6570\u306et\u5024\u3001p\u5024\u3001\u6a19\u6e96\u8aa4\u5dee\u3001\u30e2\u30c7\u30eb\u5f0f\u306e\u6c7a\u5b9a\u4fc2\u6570\u3001F\u5024\u306f\u51fa\u529b\u3055\u308c\u308b\u304c\u3001D.W.\u5024\u3001Jarque-Bera\u7d71\u8a08\u91cf\u307e\u3067\u306f\u51fa\u529b\u3055\u308c\u306a\u3044__\n\n##### __\uff08 \u30b3\u30fc\u30c9\u4e8b\u4f8b \uff09__\n* __[JBClub \u300cPython\u3067\u56de\u5e30\u5206\u6790\u3000\uff08\u8eab\u9577\u3068\u4f53\u91cd\u306e\u95a2\u4fc2\u3001PV\u3068\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u95a2\u4fc2\uff09\u300d](http://jbclub.xii.jp/?p=474)__\n\n```{Python:Python 2.7}\nimport pandas as pd\n\ndf = pd.read_csv('data.csv')\nx_data = df[0]\ny_data = df[1]\n\nmodel = pd.ols(y=y_data, x=x_data, intercept=True)\nplot(model.x['x'], model.y_fitted, 'g-')\n\nprint(model)\n```\n\n___\n\n#### __(3) Orange \u30e2\u30b8\u30e5\u30fc\u30eb \u306e regression.linear.LinearRegressionLearner() \u30e1\u30bd\u30c3\u30c9__\n\n#### __\u56de\u5e30\u4fc2\u6570\u306et\u5024\u3001p\u5024\u3001\u6a19\u6e96\u8aa4\u5dee\u306f\u51fa\u529b\u3055\u308c\u308b\u304c\u3001D.W.\u5024\u3001Jarque-Bera\u7d71\u8a08\u91cf\u307e\u3067\u306f\u51fa\u529b\u3055\u308c\u306a\u3044__\n\n##### __\uff08 \u30b3\u30fc\u30c9\u4e8b\u4f8b \uff09__\n\n* __[\u5206\u6790\u6280\u8853\u3068\u30d3\u30b8\u30cd\u30b9\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30b9 \u300cPython\uff1a\u56de\u5e30\u5206\u6790\u300d](http://blog.livedoor.jp/norikazu197768/archives/14551968.html)__\n\n> \u4eca\u56de\u306fPython\u306b\u3088\u308b\u56de\u5e30\u5206\u6790\uff08OLS\uff1aOrdinary Least Squares\uff09\u306e\u5b9f\u65bd\u65b9\u6cd5\u3092\u307e\u3068\u3081\u308b\u3002\n>\n>\u307e\u305a\u306f\u6700\u5c0f2\u4e57\u6cd5\u306b\u57fa\u3065\u304f\u91cd\u56de\u5e30\u5f0f\u306e\u4f5c\u6210\u3068\u7d50\u679c\u8868\u793a\u65b9\u6cd5\u3092\u53d6\u308a\u4e0a\u3052\u308b\u3002\n>\n>\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f7f\u3044\u5206\u3051\u306b\u3064\u3044\u3066\u306f\u8abf\u67fb\u306e\u3057\u3084\u3059\u3055\u3092\u512a\u5148\u3057\u3066\u3044\u308b\u304c\u3001\u56de\u5e30\u5206\u6790\u306b\u3064\u3044\u3066\u306f\u7d71\u8a08\u30e2\u30c7\u30eb\u306fOrange\u3001\u4e88\u6e2c\u30e2\u30c7\u30eb\u306fscikit-learn\u3067\u3084\u308d\u3046\u304b\u306a\u3068\u8003\u3048\u3066\u3044\u308b\u3002\n>\n>\u672c\u6765\u306f\u3059\u3079\u3066\u3092\u7d71\u4e00\u3057\u305f\u3044\u304c\u3001\u5f8c\u8005\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u56de\u5e30\u5206\u6790\u306e\u7d50\u679c\u8868\u793a\u3067\u3001p\u5024\u3084\u504f\u56de\u5e30\u4fc2\u6570\u306e\u51fa\u529b\u304c\u7121\u3044\u3088\u3046\u3060\u3057\u3001\u30b9\u30c6\u30c3\u30d7\u30ef\u30a4\u30ba\u306e\u5b9f\u65bd\u65b9\u6cd5\u3082\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u3002\n>\u3057\u304b\u3057\u3001\u4e88\u6e2c\u30e2\u30c7\u30eb\u3068\u306a\u308c\u3070\u3001\u305d\u306e\u7cbe\u5ea6\u3068\u5805\u7262\u6027\u3092\u9ad8\u3081\u308b\u3053\u3068\u304c\u76ee\u7684\u3068\u306a\u308a\u3001p\u5024\u306a\u3069\u306b\u8a00\u53ca\u3057\u306a\u304f\u3066\u3082\u8aac\u660e\u8cac\u4efb\u306f\u679c\u305f\u305b\u308b\u306e\u3067\u3001\u9006\u306bscikit-learn\u306e\u30b7\u30f3\u30d7\u30eb\u3055\u304c\u751f\u304b\u305b\u308b\u3068\u601d\u3063\u3066\u3044\u308b\u3002\n\n\n```{Python:Python 2.7}\nimport Orange\n\ndata = Orange.data.Table('data.txt')\n\nlearner = Orange.regression.linear.LinearRegressionLearner()\nclassifier = learner(data)\n#\u9023\u7d9a\u5909\u6570\u306e\u57fa\u6e96\u5316\u3001\u8cea\u7684\u5909\u6570\u306e\u30c0\u30df\u30fc\u5909\u6570\u5316\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b9f\u65bd\u3055\u308c\u308b\n#\u6b20\u640d\u5024\u306e\u51e6\u7406\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3084\u308b\u3002\u5e73\u5747\u5024\u88dc\u9593\u3001\u6700\u983b\u5024\u88dc\u9593\u3002\n#\u500b\u4eba\u7684\u306b\u306f\u6b20\u640d\u5024\u51e6\u7406\u306f\u30c7\u30fc\u30bf\u51e6\u7406\u306e\u6bb5\u968e\u3067Pandas\u3067\u3084\u308b\u3064\u3082\u308a\n\nprint(classifier)\n```\n> Orange\u3067\u306fdict\u5f62\u5f0f\u3067\u30e2\u30c7\u30eb\u7d50\u679c\u60c5\u5831\u3092\u683c\u7d0d\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u3002\n\n___\n___\n\n## __\u3010 \u2161. \u30e2\u30c7\u30eb\u306e\u6c7a\u5b9a\u4fc2\u6570\u306f\u51fa\u308b\u304c\u3001\u8aac\u660e\u5909\u6570\u6bce\u306e\u56de\u5e30\u4fc2\u6570 \u306e t\u5024\u30fbp\u5024\u3001\u30e2\u30c7\u30eb\u306ep\u5024\u3001D.W.\u5024\u3001Jarque-Bera\u7d71\u8a08\u91cf \u306f\u51fa\u529b\u3055\u308c\u306a\u3044\u65b9\u6cd5 \u3011__\n\n___\n\n#### __(4) scikit-learn \u30e2\u30b8\u30e5\u30fc\u30eb \u306e linear_model.LinearRegression() \u30e1\u30bd\u30c3\u30c9__\n\n##### __\uff08 \u30b3\u30fc\u30c9\u4e8b\u4f8b \uff09__\n\n* __[\u5165\u9580\u6a5f\u68b0\u5b66\u7fd2\u306e\u7dda\u5f62\u56de\u5e30\u3092scikit-learn\u3067\u3084\u3063\u3066\u307f\u308b](http://blog.kzfmix.com/entry/1370250876)__\n\n* __[\u5de5\u4f5c\u3068\u304b\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3068\u304b \u300cPython\u3068scikit-learn\u3067\u5358\u56de\u5e30\u5206\u6790\u300d](http://mia-0032.hatenablog.jp/entry/2013/08/24/121800)__\n###### __\u4e0a\u8a18\u30b5\u30a4\u30c8\u306e\u30b3\u30fc\u30c9__\n* __[GitHub Gist mia-0032 / 03_linear.py](https://gist.github.com/mia-0032/6325830)__\n\n```{Python:Python 2.7}\nfrom sklearn import linear_model\nimport pandas as pd\n\ndata = pd.read_csv(\"data.csv\")\n\nlm = linear_model.LinearRegression()\n\nx_data = data[\"x_colname\"]\ny_data = data[\"y_colname\"]\n \nlm.fit(x_data, y_data)\n\nprint(lm.coef_)\nprint(lm.intercept_)\nprint(lm.score(score_X, score_y)\n```\n\n___\n\n## \u6c7a\u5b9a\u4fc2\u6570 \u3084 t\u5024\u3001p\u5024\u306a\u3069\u3001\u691c\u5b9a\u7d71\u8a08\u91cf \u3092\u51fa\u529b\u3057\u306a\u3044\u3067\u3001\u56de\u5e30\u4fc2\u6570\uff08\u3068\u305d\u306e\u30b0\u30e9\u30d5\u63cf\u753b\uff09\u3060\u3051\u3092\u6c42\u3081\u308b\u65b9\u6cd5\n\n#### __(5) Numpy \u30e2\u30b8\u30e5\u30fc\u30eb \u306e polyfit()\u30e1\u30bd\u30c3\u30c9\u3067\u56de\u5e30\u4fc2\u6570\u3092\u6c42\u3081\u305f\u5f8c\u306b\u3001poly1d()\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u6e21\u3057\u3066\u3001\u56de\u5e30\u4fc2\u6570\u3092\u4fc2\u6570\u306b\u3082\u3064\u591a\u9805\u5f0f\u3092\u751f\u6210\u3057\u3066\u30e2\u30c7\u30eb\u5f0f\u3092\u5f97\u308b\u6d41\u308c__\n\n##### __\uff08 \u30b3\u30fc\u30c9\u4e8b\u4f8b \uff09__\n\n* __[_ynakayama\u3055\u3093_ Qiita\u6295\u7a3f\u8a18\u4e8b \u300cNumPy \u3067\u56de\u5e30\u5206\u6790\u3092\u3059\u308b\u300d](http://qiita.com/ynakayama/items/dae1f5bf5688b7ce8e77)__\n\n__\u4ee5\u4e0b\u3067\u306f\u3001\u504f\u56de\u5e30\u4fc2\u6570\u3092\u6c42\u3081\u3066\u3044\u308b__\n\n* __[\u7d71\u8a08\u5b66\u901f\u5831 \u300c\u3010Python/NumPy\u3011\u91cd\u56de\u5e30\u5206\u6790\u30fb\u591a\u5909\u91cf\u89e3\u6790\u300d](http://tokeigaku.blog.jp/python/numpy/%E9%87%8D%E5%9B%9E%E5%B8%B0%E5%88%86%E6%9E%90)__\n\n```{Python:Python 2.7}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.array([0.0, 1.0, 2.0, 3.0,  4.0,  5.0])\ny = np.array([0.0, 0.8, 0.9, 0.1, -0.8, -1.0])\n\nz = np.polyfit(x, y, 3) # 3 \u306f\u56de\u5e30\u30e2\u30c7\u30eb\u306e\u591a\u9805\u5f0f\u306e\u6b21\u6570\n                        # z \u306b\u306f\u3001\u30c7\u30fc\u30bf\uff08x, y\uff09\u306b\uff13\u6b21\u66f2\u7dda\u3092\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u3057\u305f\u7d50\u679c\u306e\u56de\u5e30\u4fc2\u6570\u304c\u683c\u7d0d\u3055\u308c\u308b\n                        \np = np.poly1d(z)        # \u5f15\u6570\u306b\u5165\u308c\u305f\uff08\u8907\u6570\u306e\uff09\u56de\u5e30\u4fc2\u6570\u3092\u3082\u3064\u591a\u9805\u5f0f\u3092\u751f\u6210\uff08\u56de\u5e30\u4fc2\u6570\u304c\uff13\u500b\u306e\u5834\u5408\u3001\u81ea\u52d5\u7684\u306b\uff13\u6b21\u5f0f\u306e\u6570\u5f0f\u3092\u751f\u6210\uff09\n\nxp = np.linspace(-2, 6, 100) # \u30b0\u30e9\u30d5\u63cf\u753b\u306e\u305f\u3081\u3001\u63cf\u753b\u753b\u9762\u306ex\u8ef8\uff08\u6a2a\u8ef8\uff09\u306e\u7bc4\u56f2\u3092\u5b9a\u7fa9\uff08 x\u306e\u7bc4\u56f2\uff1d\u5b9a\u7fa9\u57df -2\u304b\u30896\u307e\u3067\u306e\u533a\u9593\u3092100\u523b\u307f \uff09\n\nplt.plot(x, y, '.', xp, p(xp), '-')\nplt.ylim(-2,2) # \u63cf\u753b\u753b\u9762\u306e\u7e26\u8ef8\uff08y\u8ef8\uff09\u306e\u533a\u9593\uff08\u5024\u57df\uff09\u3092\u6307\u5b9a\nplt.show()\nplt.savefig('image.png')\n```\n\n___\n\n#### __(6) Scipy \u30e2\u30b8\u30e5\u30fc\u30eb \u306e stats.linregress()\u30e1\u30bd\u30c3\u30c9__\n\n##### __\uff08 \u30b3\u30fc\u30c9\u4e8b\u4f8b \uff09__\n\n* __[\u69cb\u9020\u8a08\u753b\u7814\u7a76\u6240 Minitab News Letter 2014/07 \u300c\u7b2c2\u56de:\u56de\u5e30\u5206\u6790\u300d](http://www2.kke.co.jp/minitab/support/newsletter/mt201407.html)__\n\n```{Python:Python 2.7}\nfrom matplotlib import lines\nfrom scipy import stats\n\nx_data = [15, 21, 36, 49, 51, 63, 77]\ny_data = [300, 600, 120, 420, 100, 310, 261]\n\nslope, intercept, _, _, _ = stats.linregress(x_data, y_data)\na\nfunc = lambda x: x * slope + intercept\n\nestimated_y = [func(x) for x in x_data]\n```\n", "tags": ["Python", "\u6642\u7cfb\u5217\u89e3\u6790", "\u7d71\u8a08\u5b66", "statistics", "\u30c7\u30fc\u30bf\u5206\u6790"]}