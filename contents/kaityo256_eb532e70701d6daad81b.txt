{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\ncat/proc/cpuinfo \u3067\u51fa\u529b\u3055\u308c\u308bvendor_id\u3084model name\u3092\u3001\u81ea\u5206\u3067cpuid\u3092\u547c\u3093\u3067\u8abf\u3079\u3066\u307f\u308b\u3002\u62e1\u5f35\u30a4\u30f3\u30e9\u30a4\u30f3\u30a2\u30bb\u30f3\u30d6\u30e9\u69cb\u6587\u306e\u78ba\u8a8d\u3068\u3001C\u8a00\u8a9e\u306e\u53ef\u5909\u9577\u5f15\u6570\u95a2\u6570\u306e\u81ea\u5206\u7528\u899a\u66f8\u3002\n\ncpuid\ncpuid\u547d\u4ee4\u306e\u8a73\u7d30\u306fIntel\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306e\u65e5\u672c\u8a9e\u6280\u8853\u8cc7\u6599\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306b\u3042\u308b\u3001\u300cIA-32 \u30a4\u30f3\u30c6\u30eb\u00ae \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30fc\u30fb\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30fb\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30ba\u30fb\u30de\u30cb\u30e5\u30a2\u30eb\u3001\u4e2d\u5dfb A: \u547d\u4ee4\u30bb\u30c3\u30c8\u30fb\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 A-M \u300d\u306b\u3042\u308b\u3002\n\u4f8b\u3048\u3070eax\u306b0\u3092\u4ee3\u5165\u3057\u305f\u72b6\u614b\u3067cpuid\u547d\u4ee4\u3092\u767a\u884c\u3059\u308b\u3068\u3001ebx, ecx, edx\u306b\u305d\u308c\u305e\u308c\"Genu\"\u3001\"ntel\"\u3001\"ineI\"\u306e\u6587\u5b57\u5217\u304c\u5165\u308b(32bit\u30ec\u30b8\u30b9\u30bf\u306a\u306e\u30674\u3064\u306echar\u304c\u5165\u308b)\u3002\u3053\u308c\u3092ebx\u3001edx\u3001ecx\u306e\u9806\u756a\u306b\u4e26\u3079\u308c\u3070\u300cGenuineIntel\u300d\u3068\u306a\u308b\u3002\nmodel name\u306b\u3064\u3044\u3066\u306f\u3001eax\u306b0x80000002\u30010x80000003\u30010x80000004\u3092\u5165\u308c\u3066cpuid\u3092\u547c\u3076\u3068\u3001eax,ebx,ecx,edx\u306b4\u30d0\u30a4\u30c8\u305a\u3064\u60c5\u5831\u304c\u5165\u3063\u3066\u304f\u308b\u3002\u5f93\u3063\u3066\u3001model name\u3092\u5f97\u308b\u306b\u306f\u3001\u5408\u8a083\u56decpuid\u3092\u547c\u3070\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n\n\u30a4\u30f3\u30e9\u30a4\u30f3\u30a2\u30bb\u30f3\u30d6\u30e9\ncpuid\u3092\u547c\u3093\u3060\u3042\u3068\u306beax,ebx,ecx,edx\u306b\u5165\u3063\u3066\u304f\u308b\u60c5\u5831\u3092\u5909\u6570\u306b\u30b3\u30d4\u30fc\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u3053\u308c\u3092\u62e1\u5f35\u30a4\u30f3\u30e9\u30a4\u30f3\u30a2\u30bb\u30f3\u30d6\u30e9\u69cb\u6587\u3067\u3084\u308b\u3002\u4f8b\u3048\u3070eax\u306b\u5024\u3092\u5165\u308c\u308b\u3068\u3053\u308d\u3092\u3001\nuint32_t v = 0;\nasm(\"nop\" :: \"a\" (v));\n\n\u3068\u3059\u308b\u3002asm\u306e:\u306e\u5f8c\u304c\u62e1\u5f35\u69cb\u6587\u3067\u3001\u3053\u308c\u306feax\u306bv\u306e\u5024\u3092\u4ee3\u5165\u305b\u3088\u3001\u3068\u3044\u3046\u610f\u5473\u3002\n\u307e\u305f\u3001\nuint32_t a;\n  asm(\"movl %%eax, %0\" : \"=r\" (a));\n\n\u3068\u3059\u308c\u3070\u3001eax\u306e\u5185\u5bb9\u3092a\u306b\u4ee3\u5165\u3067\u304d\u308b\u3002\n\u307e\u3068\u3081\u308b\u3068\u3001eax\u306bv\u306e\u5024\u3092\u5165\u308c\u3066cpuid\u3092\u547c\u3093\u3067\u3001eax\u301cedx\u306e\u5024\u3092\u5909\u6570\u306b\u8aad\u307f\u51fa\u3059\u3068\u3053\u308d\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3067\u304d\u308b\u3002\n  uint32_t eax, ebx, ecx, edx;\n  asm(\"nop\" :: \"a\" (v));\n  asm(\"cpuid\");\n  asm(\"movl %%eax, %0\" : \"=r\" (eax));\n  asm(\"movl %%ebx, %0\" : \"=r\" (ebx));\n  asm(\"movl %%ecx, %0\" : \"=r\" (ecx));\n  asm(\"movl %%edx, %0\" : \"=r\" (edx));\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u4f55\u5ea6\u3082cpuid\u3092\u547c\u3093\u3067\u3001eax\u301cedx\u306e\u5024\u3092\u8aad\u307f\u51fa\u3057\u3001\u6587\u5b57\u5217\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u3002\n\nmodelname.cc\n//------------------------------------------------------------------------\n#include <stdio.h>\n#include <stdint.h>\n#include <string.h>\n#include <stdarg.h>\n//------------------------------------------------------------------------\nvoid\ncpuid(uint32_t v, uint32_t &a, uint32_t &b, uint32_t &c, uint32_t &d){\n  uint32_t eax, ebx, ecx, edx;\n  asm(\"nop\" :: \"a\" (v));\n  asm(\"cpuid\");\n  asm(\"movl %%eax, %0\" : \"=r\" (eax));\n  asm(\"movl %%ebx, %0\" : \"=r\" (ebx));\n  asm(\"movl %%ecx, %0\" : \"=r\" (ecx));\n  asm(\"movl %%edx, %0\" : \"=r\" (edx));\n  a = eax;\n  b = ebx;\n  c = ecx;\n  d = edx;\n}\n//------------------------------------------------------------------------\nint\nput(int num, ...){\n  va_list args;\n  va_start(args,num);\n  char buf[256];\n  buf[num*4] = 0;\n  for(int i=0;i<num;i++){\n    uint32_t v = va_arg(args,uint32_t);\n    memcpy(buf+4*i,(char*)(&v),4);\n  }\n  printf(\"%s\",buf);\n  va_end(args);\n}\n//------------------------------------------------------------------------\nint\nmain(void){\n  uint32_t eax, ebx, ecx, edx;\n  cpuid(0,eax,ebx,ecx,edx);\n  put(3,ebx,edx,ecx);\n  printf(\"\\n\");\n  cpuid(0x80000002,eax,ebx,ecx,edx);\n  put(4,eax,ebx,ecx,edx);\n  cpuid(0x80000003,eax,ebx,ecx,edx);\n  put(4,eax,ebx,ecx,edx);\n  cpuid(0x80000004,eax,ebx,ecx,edx);\n  put(4,eax,ebx,ecx,edx);\n  printf(\"\\n\");\n}\n//------------------------------------------------------------------------\n\n\n\u624b\u5143\u306eSandyBridge\u30de\u30b7\u30f3\u3067\u306e\u5b9f\u884c\u4f8b\u3002\n$ g++ modelname.cc\n$ ./a.out\nGenuineIntel\n       Intel(R) Core(TM) i7-2700K CPU @ 3.50GHz\n$ cat /proc/cpuinfo| grep Intel\nvendor_id   : GenuineIntel\nmodel name  : Intel(R) Core(TM) i7-2700K CPU @ 3.50GHz\nvendor_id   : GenuineIntel\nmodel name  : Intel(R) Core(TM) i7-2700K CPU @ 3.50GHz\nvendor_id   : GenuineIntel\nmodel name  : Intel(R) Core(TM) i7-2700K CPU @ 3.50GHz\nvendor_id   : GenuineIntel\nmodel name  : Intel(R) Core(TM) i7-2700K CPU @ 3.50GHz\n\n\u3067\u304d\u3066\u308b\u3063\u307d\u3044\u3002\n# \u306f\u3058\u3081\u306b\n\n` cat/proc/cpuinfo` \u3067\u51fa\u529b\u3055\u308c\u308bvendor_id\u3084model name\u3092\u3001\u81ea\u5206\u3067cpuid\u3092\u547c\u3093\u3067\u8abf\u3079\u3066\u307f\u308b\u3002\u62e1\u5f35\u30a4\u30f3\u30e9\u30a4\u30f3\u30a2\u30bb\u30f3\u30d6\u30e9\u69cb\u6587\u306e\u78ba\u8a8d\u3068\u3001C\u8a00\u8a9e\u306e\u53ef\u5909\u9577\u5f15\u6570\u95a2\u6570\u306e\u81ea\u5206\u7528\u899a\u66f8\u3002\n\n# cpuid\n\ncpuid\u547d\u4ee4\u306e\u8a73\u7d30\u306fIntel\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306e[\u65e5\u672c\u8a9e\u6280\u8853\u8cc7\u6599\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9](http://www.intel.co.jp/content/www/jp/ja/developer/download.html)\u306b\u3042\u308b\u3001\u300cIA-32 \u30a4\u30f3\u30c6\u30eb\u00ae \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30fc\u30fb\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u30fb\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30ba\u30fb\u30de\u30cb\u30e5\u30a2\u30eb\u3001\u4e2d\u5dfb A: \u547d\u4ee4\u30bb\u30c3\u30c8\u30fb\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 A-M \u300d\u306b\u3042\u308b\u3002\n\n\u4f8b\u3048\u3070eax\u306b0\u3092\u4ee3\u5165\u3057\u305f\u72b6\u614b\u3067cpuid\u547d\u4ee4\u3092\u767a\u884c\u3059\u308b\u3068\u3001ebx, ecx, edx\u306b\u305d\u308c\u305e\u308c\"Genu\"\u3001\"ntel\"\u3001\"ineI\"\u306e\u6587\u5b57\u5217\u304c\u5165\u308b(32bit\u30ec\u30b8\u30b9\u30bf\u306a\u306e\u30674\u3064\u306echar\u304c\u5165\u308b)\u3002\u3053\u308c\u3092ebx\u3001edx\u3001ecx\u306e\u9806\u756a\u306b\u4e26\u3079\u308c\u3070\u300cGenuineIntel\u300d\u3068\u306a\u308b\u3002\n\nmodel name\u306b\u3064\u3044\u3066\u306f\u3001eax\u306b0x80000002\u30010x80000003\u30010x80000004\u3092\u5165\u308c\u3066cpuid\u3092\u547c\u3076\u3068\u3001eax,ebx,ecx,edx\u306b4\u30d0\u30a4\u30c8\u305a\u3064\u60c5\u5831\u304c\u5165\u3063\u3066\u304f\u308b\u3002\u5f93\u3063\u3066\u3001model name\u3092\u5f97\u308b\u306b\u306f\u3001\u5408\u8a083\u56decpuid\u3092\u547c\u3070\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n\n# \u30a4\u30f3\u30e9\u30a4\u30f3\u30a2\u30bb\u30f3\u30d6\u30e9\n\ncpuid\u3092\u547c\u3093\u3060\u3042\u3068\u306beax,ebx,ecx,edx\u306b\u5165\u3063\u3066\u304f\u308b\u60c5\u5831\u3092\u5909\u6570\u306b\u30b3\u30d4\u30fc\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u3053\u308c\u3092\u62e1\u5f35\u30a4\u30f3\u30e9\u30a4\u30f3\u30a2\u30bb\u30f3\u30d6\u30e9\u69cb\u6587\u3067\u3084\u308b\u3002\u4f8b\u3048\u3070eax\u306b\u5024\u3092\u5165\u308c\u308b\u3068\u3053\u308d\u3092\u3001\n\n```c++:\nuint32_t v = 0;\nasm(\"nop\" :: \"a\" (v));\n```\n\u3068\u3059\u308b\u3002asm\u306e:\u306e\u5f8c\u304c\u62e1\u5f35\u69cb\u6587\u3067\u3001\u3053\u308c\u306feax\u306bv\u306e\u5024\u3092\u4ee3\u5165\u305b\u3088\u3001\u3068\u3044\u3046\u610f\u5473\u3002\n\u307e\u305f\u3001\n\n```c++:\nuint32_t a;\n  asm(\"movl %%eax, %0\" : \"=r\" (a));\n```\n\u3068\u3059\u308c\u3070\u3001eax\u306e\u5185\u5bb9\u3092a\u306b\u4ee3\u5165\u3067\u304d\u308b\u3002\n\n\u307e\u3068\u3081\u308b\u3068\u3001eax\u306bv\u306e\u5024\u3092\u5165\u308c\u3066cpuid\u3092\u547c\u3093\u3067\u3001eax\u301cedx\u306e\u5024\u3092\u5909\u6570\u306b\u8aad\u307f\u51fa\u3059\u3068\u3053\u308d\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3067\u304d\u308b\u3002\n\n```c++:\n  uint32_t eax, ebx, ecx, edx;\n  asm(\"nop\" :: \"a\" (v));\n  asm(\"cpuid\");\n  asm(\"movl %%eax, %0\" : \"=r\" (eax));\n  asm(\"movl %%ebx, %0\" : \"=r\" (ebx));\n  asm(\"movl %%ecx, %0\" : \"=r\" (ecx));\n  asm(\"movl %%edx, %0\" : \"=r\" (edx));\n```\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\u4f55\u5ea6\u3082cpuid\u3092\u547c\u3093\u3067\u3001eax\u301cedx\u306e\u5024\u3092\u8aad\u307f\u51fa\u3057\u3001\u6587\u5b57\u5217\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u3002\n\n```c++:modelname.cc\n//------------------------------------------------------------------------\n#include <stdio.h>\n#include <stdint.h>\n#include <string.h>\n#include <stdarg.h>\n//------------------------------------------------------------------------\nvoid\ncpuid(uint32_t v, uint32_t &a, uint32_t &b, uint32_t &c, uint32_t &d){\n  uint32_t eax, ebx, ecx, edx;\n  asm(\"nop\" :: \"a\" (v));\n  asm(\"cpuid\");\n  asm(\"movl %%eax, %0\" : \"=r\" (eax));\n  asm(\"movl %%ebx, %0\" : \"=r\" (ebx));\n  asm(\"movl %%ecx, %0\" : \"=r\" (ecx));\n  asm(\"movl %%edx, %0\" : \"=r\" (edx));\n  a = eax;\n  b = ebx;\n  c = ecx;\n  d = edx;\n}\n//------------------------------------------------------------------------\nint\nput(int num, ...){\n  va_list args;\n  va_start(args,num);\n  char buf[256];\n  buf[num*4] = 0;\n  for(int i=0;i<num;i++){\n    uint32_t v = va_arg(args,uint32_t);\n    memcpy(buf+4*i,(char*)(&v),4);\n  }\n  printf(\"%s\",buf);\n  va_end(args);\n}\n//------------------------------------------------------------------------\nint\nmain(void){\n  uint32_t eax, ebx, ecx, edx;\n  cpuid(0,eax,ebx,ecx,edx);\n  put(3,ebx,edx,ecx);\n  printf(\"\\n\");\n  cpuid(0x80000002,eax,ebx,ecx,edx);\n  put(4,eax,ebx,ecx,edx);\n  cpuid(0x80000003,eax,ebx,ecx,edx);\n  put(4,eax,ebx,ecx,edx);\n  cpuid(0x80000004,eax,ebx,ecx,edx);\n  put(4,eax,ebx,ecx,edx);\n  printf(\"\\n\");\n}\n//------------------------------------------------------------------------\n```\n\n\u624b\u5143\u306eSandyBridge\u30de\u30b7\u30f3\u3067\u306e\u5b9f\u884c\u4f8b\u3002\n\n```shell-session:\n$ g++ modelname.cc\n$ ./a.out\nGenuineIntel\n       Intel(R) Core(TM) i7-2700K CPU @ 3.50GHz\n$ cat /proc/cpuinfo| grep Intel\nvendor_id\t: GenuineIntel\nmodel name\t: Intel(R) Core(TM) i7-2700K CPU @ 3.50GHz\nvendor_id\t: GenuineIntel\nmodel name\t: Intel(R) Core(TM) i7-2700K CPU @ 3.50GHz\nvendor_id\t: GenuineIntel\nmodel name\t: Intel(R) Core(TM) i7-2700K CPU @ 3.50GHz\nvendor_id\t: GenuineIntel\nmodel name\t: Intel(R) Core(TM) i7-2700K CPU @ 3.50GHz\n```\n\n\u3067\u304d\u3066\u308b\u3063\u307d\u3044\u3002\n", "tags": ["C++", "assembly"]}