{"context": " More than 1 year has passed since last update.Unity\u306fEditor\u4e0a\u3067StartContinue\u3067\u30b3\u30eb\u30fc\u30c1\u30f3\u304c\u4f7f\u3048\u306a\u3044\u306e\u304c\u7d50\u69cb\u4e0d\u4fbf\u3060\u3063\u305f\u306e\u3067\u3001\u4f5c\u3063\u3066\u307f\u305f\u3002\nyield return 0;\u3000//1\u30d5\u30ec\u30fc\u30e0\u5f85\u3064\n\u3068\u304b\nyield return new EditorCoroutine.WaitForSeconds(1f); //1\u79d2\u5f85\u3064\n\u3068\u304b\n\nWWW www = new WWW (\"http://\u3000\u301c\u301c\u301c\u301c\");\nyield return www     //\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5b8c\u4e86\u307e\u3067\u5f85\u3064;\n\n\u3068\u3044\u3063\u305f\u3001StartContinue\u3067\u3067\u304d\u308b\u3053\u3068\u306f\u3060\u3044\u305f\u3044\u3067\u304d\u308b\u3002\n\u4f7f\u3044\u65b9\u306f\n1, \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305fc#\u30b9\u30af\u30ea\u30d7\u30c8\u3092Editor\u30d5\u30a9\u30eb\u30c0\u306b\u3044\u308c\u308b\n2, StartContinue(hoge());\u306e\u4ee3\u308f\u308a\u306b\u3001EditorCoroutine.Start(hoge());\u3092\u547c\u3076\uff08 hoge()\u306fIEnumrator \uff09\n\u8981\u3059\u308b\u306bStartCorutine\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059\u3002\n\nusing UnityEngine;\nusing UnityEditor;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\n\n/// <summary>\n/// \u30a8\u30c7\u30a3\u30bf\u30fc\u4e0a\u3067StartCorutine\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u4f7f\u7528\u53ef\u80fd\u306b\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059 \n/// </summary>\n[UnityEditor.InitializeOnLoad]\npublic sealed class EditorCoroutine {\n\n    static EditorCoroutine () {\n        EditorApplication.update += Update;\n        Debug.Log(\"EditorCoroutine SetUp\");\n    }\n\n    static Dictionary<IEnumerator, EditorCoroutine.Coroutine> asyncList = new Dictionary<IEnumerator, Coroutine>();\n    static List<EditorCoroutine.WaitForSeconds> waitForSecondsList = new List<EditorCoroutine.WaitForSeconds>();\n\n    static void Update () {\n\n        CheackIEnumerator ();\n        CheackWaitForSeconds();\n    }\n\n    static void CheackIEnumerator () {\n        List<IEnumerator> removeList = new List<IEnumerator>();\n        foreach(KeyValuePair<IEnumerator, EditorCoroutine.Coroutine> pair in asyncList){\n            if(pair.Key != null){\n\n                //IEnumrator\u306eCurrent\u304cCoroutine\u3092\u8fd4\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b \n                EditorCoroutine.Coroutine c = pair.Key.Current as EditorCoroutine.Coroutine;\n                if(c != null){\n                    if(c.isActive) continue;\n                }\n                //www\u30af\u30e9\u30b9\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u7d42\u308f\u3063\u3066\u3044\u306a\u3051\u308c\u3070\u9032\u307e\u306a\u3044 \n                WWW www = pair.Key.Current as WWW;\n                if(www != null){\n                    if(!www.isDone) continue; \n                }\n                //\u3053\u308c\u4ee5\u4e0aMoveNext\u3067\u304d\u306a\u3051\u308c\u3070\u7d42\u4e86 \n                if(!pair.Key.MoveNext()){\n                    if(pair.Value != null){\n                        pair.Value.isActive = false;\n                    }\n                    removeList.Add(pair.Key);\n                }\n            }else {\n                removeList.Add(pair.Key);\n            }\n        }\n\n        foreach(IEnumerator async in removeList) {\n            asyncList.Remove(async);\n        }\n    }\n\n    static void CheackWaitForSeconds () {\n        for(int i=0; i<waitForSecondsList.Count; i++){\n            if(waitForSecondsList[i] != null){\n                if(EditorApplication.timeSinceStartup - waitForSecondsList[i].InitTime > waitForSecondsList[i].Time){\n                    waitForSecondsList[i].isActive = false;\n                    waitForSecondsList.RemoveAt(i);\n                }\n            }else {\n                Debug.LogError(\"rem\");\n                waitForSecondsList.RemoveAt(i);\n            }\n        }\n    }\n\n    //=====================================================================================\n    //\u95a2\u6570 \n\n    /// <summary>\n    /// \u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u8d77\u52d5\u3057\u307e\u3059 \n    /// </summary>\n    static public EditorCoroutine.Coroutine Start (IEnumerator iEnumerator) {\n        if(Application.isEditor && !Application.isPlaying){\n            EditorCoroutine.Coroutine c = new Coroutine();\n            if(!asyncList.Keys.Contains(iEnumerator)) asyncList.Add(iEnumerator, c);\n            iEnumerator.MoveNext();\n            return c;\n        }else {\n            Debug.LogError(\"EditorCoroutine.Start\u306f\u30b2\u30fc\u30e0\u8d77\u52d5\u4e2d\u306b\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\");\n            return null;\n        }\n    }\n\n    /// <summary>\n    /// \u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u505c\u6b62\u3057\u307e\u3059 \n    /// </summary>\n    static public void Stop (IEnumerator iEnumerator) {\n        if(Application.isEditor){\n            if(asyncList.Keys.Contains(iEnumerator)){\n                asyncList.Remove(iEnumerator);\n            }\n        }else {\n            Debug.LogError(\"EditorCoroutine.Start\u306f\u30b2\u30fc\u30e0\u4e2d\u306b\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\");\n        }\n    }\n\n    /// <summary>\n    /// \u4f7f\u7528\u4e0d\u53ef\n    /// WaitForSeconds\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u767b\u9332\u3057\u307e\u3059 \n    /// </summary>\n    static public void AddWaitForSecondsList (EditorCoroutine.WaitForSeconds coroutine){\n        if(waitForSecondsList.Contains(coroutine) == false){\n            waitForSecondsList.Add(coroutine);\n        }\n    }\n\n\n    //=====================================================================================\n    //\u5f85\u6a5f\u51e6\u7406\u7528\u30af\u30e9\u30b9 \n\n    public class Coroutine {\n        //true\u306a\u3089\u5f85\u6a5f\u3055\u305b\u308b \n        public bool isActive;\n\n        public Coroutine() {\n            isActive = true;\n        }\n    }\n\n    public sealed class WaitForSeconds : EditorCoroutine.Coroutine {\n        private float time;\n        private double initTime;\n\n        public float Time {\n            get{return time;}\n        }\n        public double InitTime {\n            get{return initTime;}\n        }\n\n        public WaitForSeconds(float time) : base(){\n            this.time = time;\n            this.initTime = EditorApplication.timeSinceStartup;\n            EditorCoroutine.AddWaitForSecondsList(this);\n        }\n    }\n}\n\n\n\u4ed5\u7d44\u307f\u3068\u3057\u3066\u306f\u3001Start\u95a2\u6570\u3067IEnumrator\u306e\u95a2\u6570\u3092\u767b\u9332\u3057\u3066\u304a\u3044\u3066\u3001EditorApplication.update\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u767b\u9332\u3057\u305fUpdate\u95a2\u6570\u306e\u30eb\u30fc\u30d7\u306e\u306a\u304b\u3067\u3001IEnumrator\u306eMoveNext\u95a2\u6570\u3092\u547c\u3076\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u308b\u611f\u3058\u3067\u3059\u3002\n\u30b3\u30eb\u30fc\u30c1\u30f3\u304c\u52d5\u3044\u3066\u3044\u308b\u6700\u4e2d\u306b\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5165\u3063\u305f\u308a\u3001\u4e88\u671f\u305b\u306c\u5272\u308a\u8fbc\u307f\u304c\u5165\u3063\u3066\u3057\u307e\u3046\u3068\u3088\u304f\u306a\u3044\u304b\u3082\u2026\n\u6ce8) AddWaitForSecondsList\u306f\u4f7f\u308f\u306a\u3044\u3053\u3068 C#\u306b\u306ffriend\u3068\u304b\u306a\u3044\u306e\u3067\u4ed5\u65b9\u306a\u304fpublic\u306b\u306a\u3063\u3066\u307e\u3059\nUnity\u306fEditor\u4e0a\u3067StartContinue\u3067\u30b3\u30eb\u30fc\u30c1\u30f3\u304c\u4f7f\u3048\u306a\u3044\u306e\u304c\u7d50\u69cb\u4e0d\u4fbf\u3060\u3063\u305f\u306e\u3067\u3001\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n``yield return 0;\u3000//1\u30d5\u30ec\u30fc\u30e0\u5f85\u3064``\n\u3068\u304b\n``yield return new EditorCoroutine.WaitForSeconds(1f); //1\u79d2\u5f85\u3064``\n\u3068\u304b\n```\nWWW www = new WWW (\"http://\u3000\u301c\u301c\u301c\u301c\");\nyield return www     //\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5b8c\u4e86\u307e\u3067\u5f85\u3064;\n```\n\u3068\u3044\u3063\u305f\u3001StartContinue\u3067\u3067\u304d\u308b\u3053\u3068\u306f\u3060\u3044\u305f\u3044\u3067\u304d\u308b\u3002\n\n\n\u4f7f\u3044\u65b9\u306f\n1, \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305fc#\u30b9\u30af\u30ea\u30d7\u30c8\u3092Editor\u30d5\u30a9\u30eb\u30c0\u306b\u3044\u308c\u308b\n2, StartContinue(hoge());\u306e\u4ee3\u308f\u308a\u306b\u3001EditorCoroutine.Start(hoge());\u3092\u547c\u3076\uff08 hoge()\u306fIEnumrator \uff09\n\n\u8981\u3059\u308b\u306bStartCorutine\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059\u3002\n\n```\n\nusing UnityEngine;\nusing UnityEditor;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\n\n/// <summary>\n/// \u30a8\u30c7\u30a3\u30bf\u30fc\u4e0a\u3067StartCorutine\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u4f7f\u7528\u53ef\u80fd\u306b\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059 \n/// </summary>\n[UnityEditor.InitializeOnLoad]\npublic sealed class EditorCoroutine {\n\n\tstatic EditorCoroutine () {\n\t\tEditorApplication.update += Update;\n\t\tDebug.Log(\"EditorCoroutine SetUp\");\n\t}\n\n\tstatic Dictionary<IEnumerator, EditorCoroutine.Coroutine> asyncList = new Dictionary<IEnumerator, Coroutine>();\n\tstatic List<EditorCoroutine.WaitForSeconds> waitForSecondsList = new List<EditorCoroutine.WaitForSeconds>();\n\n\tstatic void Update () {\n\n\t\tCheackIEnumerator ();\n\t\tCheackWaitForSeconds();\n\t}\n\n\tstatic void CheackIEnumerator () {\n\t\tList<IEnumerator> removeList = new List<IEnumerator>();\n\t\tforeach(KeyValuePair<IEnumerator, EditorCoroutine.Coroutine> pair in asyncList){\n\t\t\tif(pair.Key != null){\n\n\t\t\t\t//IEnumrator\u306eCurrent\u304cCoroutine\u3092\u8fd4\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b \n\t\t\t\tEditorCoroutine.Coroutine c = pair.Key.Current as EditorCoroutine.Coroutine;\n\t\t\t\tif(c != null){\n\t\t\t\t\tif(c.isActive) continue;\n\t\t\t\t}\n\t\t\t\t//www\u30af\u30e9\u30b9\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u7d42\u308f\u3063\u3066\u3044\u306a\u3051\u308c\u3070\u9032\u307e\u306a\u3044 \n\t\t\t\tWWW www = pair.Key.Current as WWW;\n\t\t\t\tif(www != null){\n\t\t\t\t\tif(!www.isDone) continue; \n\t\t\t\t}\n\t\t\t\t//\u3053\u308c\u4ee5\u4e0aMoveNext\u3067\u304d\u306a\u3051\u308c\u3070\u7d42\u4e86 \n\t\t\t\tif(!pair.Key.MoveNext()){\n\t\t\t\t\tif(pair.Value != null){\n\t\t\t\t\t\tpair.Value.isActive = false;\n\t\t\t\t\t}\n\t\t\t\t\tremoveList.Add(pair.Key);\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tremoveList.Add(pair.Key);\n\t\t\t}\n\t\t}\n\n\t\tforeach(IEnumerator async in removeList) {\n\t\t\tasyncList.Remove(async);\n\t\t}\n\t}\n\n\tstatic void CheackWaitForSeconds () {\n\t\tfor(int i=0; i<waitForSecondsList.Count; i++){\n\t\t\tif(waitForSecondsList[i] != null){\n\t\t\t\tif(EditorApplication.timeSinceStartup - waitForSecondsList[i].InitTime > waitForSecondsList[i].Time){\n\t\t\t\t\twaitForSecondsList[i].isActive = false;\n\t\t\t\t\twaitForSecondsList.RemoveAt(i);\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tDebug.LogError(\"rem\");\n\t\t\t\twaitForSecondsList.RemoveAt(i);\n\t\t\t}\n\t\t}\n\t}\n\n\t//=====================================================================================\n\t//\u95a2\u6570 \n\n\t/// <summary>\n\t/// \u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u8d77\u52d5\u3057\u307e\u3059 \n\t/// </summary>\n\tstatic public EditorCoroutine.Coroutine Start (IEnumerator iEnumerator) {\n\t\tif(Application.isEditor && !Application.isPlaying){\n\t\t\tEditorCoroutine.Coroutine c = new Coroutine();\n\t\t\tif(!asyncList.Keys.Contains(iEnumerator)) asyncList.Add(iEnumerator, c);\n\t\t\tiEnumerator.MoveNext();\n\t\t\treturn c;\n\t\t}else {\n\t\t\tDebug.LogError(\"EditorCoroutine.Start\u306f\u30b2\u30fc\u30e0\u8d77\u52d5\u4e2d\u306b\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\");\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/// <summary>\n\t/// \u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u505c\u6b62\u3057\u307e\u3059 \n\t/// </summary>\n\tstatic public void Stop (IEnumerator iEnumerator) {\n\t\tif(Application.isEditor){\n\t\t\tif(asyncList.Keys.Contains(iEnumerator)){\n\t\t\t\tasyncList.Remove(iEnumerator);\n\t\t\t}\n\t\t}else {\n\t\t\tDebug.LogError(\"EditorCoroutine.Start\u306f\u30b2\u30fc\u30e0\u4e2d\u306b\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\");\n\t\t}\n\t}\n\n\t/// <summary>\n\t/// \u4f7f\u7528\u4e0d\u53ef\n\t/// WaitForSeconds\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u767b\u9332\u3057\u307e\u3059 \n\t/// </summary>\n\tstatic public void AddWaitForSecondsList (EditorCoroutine.WaitForSeconds coroutine){\n\t\tif(waitForSecondsList.Contains(coroutine) == false){\n\t\t\twaitForSecondsList.Add(coroutine);\n\t\t}\n\t}\n\n\n\t//=====================================================================================\n\t//\u5f85\u6a5f\u51e6\u7406\u7528\u30af\u30e9\u30b9 \n\n\tpublic class Coroutine {\n\t\t//true\u306a\u3089\u5f85\u6a5f\u3055\u305b\u308b \n\t\tpublic bool isActive;\n\n\t\tpublic Coroutine() {\n\t\t\tisActive = true;\n\t\t}\n\t}\n\n\tpublic sealed class WaitForSeconds : EditorCoroutine.Coroutine {\n\t\tprivate float time;\n\t\tprivate double initTime;\n\n\t\tpublic float Time {\n\t\t\tget{return time;}\n\t\t}\n\t\tpublic double InitTime {\n\t\t\tget{return initTime;}\n\t\t}\n\n\t\tpublic WaitForSeconds(float time) : base(){\n\t\t\tthis.time = time;\n\t\t\tthis.initTime = EditorApplication.timeSinceStartup;\n\t\t\tEditorCoroutine.AddWaitForSecondsList(this);\n\t\t}\n\t}\n}\n\n```\n\n\u4ed5\u7d44\u307f\u3068\u3057\u3066\u306f\u3001Start\u95a2\u6570\u3067IEnumrator\u306e\u95a2\u6570\u3092\u767b\u9332\u3057\u3066\u304a\u3044\u3066\u3001EditorApplication.update\u306e\u30c7\u30ea\u30b2\u30fc\u30c8\u767b\u9332\u3057\u305fUpdate\u95a2\u6570\u306e\u30eb\u30fc\u30d7\u306e\u306a\u304b\u3067\u3001IEnumrator\u306eMoveNext\u95a2\u6570\u3092\u547c\u3076\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u308b\u611f\u3058\u3067\u3059\u3002\n\n\u30b3\u30eb\u30fc\u30c1\u30f3\u304c\u52d5\u3044\u3066\u3044\u308b\u6700\u4e2d\u306b\u306b\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5165\u3063\u305f\u308a\u3001\u4e88\u671f\u305b\u306c\u5272\u308a\u8fbc\u307f\u304c\u5165\u3063\u3066\u3057\u307e\u3046\u3068\u3088\u304f\u306a\u3044\u304b\u3082\u2026\n\n\u6ce8) AddWaitForSecondsList\u306f\u4f7f\u308f\u306a\u3044\u3053\u3068 C#\u306b\u306ffriend\u3068\u304b\u306a\u3044\u306e\u3067\u4ed5\u65b9\u306a\u304fpublic\u306b\u306a\u3063\u3066\u307e\u3059\n", "tags": ["Unity", "Unity\u62e1\u5f35"]}