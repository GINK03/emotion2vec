{"context": " More than 1 year has passed since last update.\n\n\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306f\u304a\u597d\u307f\u3067\nWebRTC\u306ePeer-to-Peer\u3092\u3064\u306a\u3050\u305f\u3081\u306e\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306f\u3001\u6c7a\u307e\u3063\u305f\u3084\u308a\u65b9\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u624b\u52d5\u306e\u30b3\u30d4\u30fc\uff06\u30da\u30fc\u30b9\u30c8\u3067\u3082\u3001\u30d5\u30a1\u30a4\u30eb\u7d4c\u7531\u3067\u3082\u3001\u3068\u306b\u304b\u304f\u304a\u4e92\u3044\u306e\u60c5\u5831\u3092\u4ea4\u63db\u3067\u304d\u308c\u3070\u826f\u3044\u3067\u3059\u3002\nWebSocket\u3092\u4f7f\u3046\u306e\u304c\u5b9a\u756a\u3060\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306fMQTT\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u5b9f\u969b\u306b\u306fWebSocket\u7d4c\u7531\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001MQTT\u306a\u3089\u3067\u306f\u3068\u3044\u3046\u6d3b\u7528\u306f\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3002\u304c\u3001\u300c\u305d\u3053\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u306e\u4ed5\u7d44\u307f\u304c\u3042\u308b\u300d\u306a\u3089\u3070\u7121\u7406\u3084\u308a\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nMQTT\u3068\u306e\u906d\u9047\nMQTT\u306f\u3001IoT\u3084M2M\u306e\u6d41\u308c\u3067\u518d\u8a55\u4fa1\u3055\u308c\u3066\u3044\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u3053\u3061\u3089\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nMQTT\u306b\u3064\u3044\u3066\u306e\u307e\u3068\u3081 http://tdoc.info/blog/2014/01/27/mqtt.html\n\nMQTT\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u77e5\u308b https://sango.shiguredo.jp/mqtt\n\n\nMQTT\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u30d6\u30ed\u30fc\u30ab\u30fc\uff08\u30b5\u30fc\u30d0\u30fc\uff09\u304c\u5fc5\u8981\u3067\u3059\u3002\u81ea\u5206\u3067\u52d5\u304b\u3059\u306e\u306f\u5927\u5909\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u3053\u3061\u3089\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u308f\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\nSango: MQTT as a Service   https://sango.shiguredo.jp/\n\n\n\u4eca\u56de\u3001JavaScript\u304b\u3089MQTT\u3092\u5229\u7528\u3059\u308b\u306e\u3067\u3001MQTT over WebSocket \u3067\u63a5\u7d9a\u3057\u307e\u3059\u3002\u4f7f\u3044\u65b9\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\nsango\u306e\u4f7f\u3044\u65b9 - JavaScript WebSocket \u7de8  http://tdoc.info/blog/2014/09/25/mqtt_javascript.html\n\n\n\n\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0 over MQTT\n\u4eca\u56de\u306e\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306f\u3001SDP\u3068ICE\u3092\u4e00\u7dd2\u306b\u9001\u308b\u7c21\u6613\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306b\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u8907\u6570\u306e\u4f1a\u8b70\u5ba4\u3084\u8907\u6570\u4eba\u3067\u306e\u901a\u4fe1\u3092\u8003\u616e\u3057\u306a\u3044\u3001\u30b7\u30f3\u30d7\u30eb\u306a1\u5bfe1\u306e\u307f\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u30dd\u30a4\u30f3\u30c8\n\n\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u3067\u306f\u53cc\u65b9\u5411\u306b\u60c5\u5831\u3092\u3084\u308a\u53d6\u308a\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002MQTT\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u767a\u4fe1(Publish)\u3068\u53d7\u4fe1(Subscribe)\u306e\u4e8c\u5f79\u3092\u62c5\u3048\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\n\u30c8\u30d4\u30c3\u30af\u4f7f\u3044\u5206\u3051\u308b\u3053\u3068\u3067\u3001\u60c5\u5831\u306e\u7a2e\u985e(offer / answer)\u3092\u8b58\u5225\u3057\u3066\u3044\u307e\u3059\n\n\nMQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u3078\u306e\u63a5\u7d9a\n  var clientId = \"web_client_01\"; // \u9069\u5f53\u306a\u30af\u30e9\u30a4\u30a2\u30f3\u30c8ID\u3002\u4eca\u56de\u306f\u4e00\u610f\u306b\u3057\u307e\u305b\u3093\n  var user_name = \"you@github\"; // github\u30a2\u30ab\u30a6\u30f3\u30c8\n  var pass = \"yourpassword\"; // sango\u7528\u30d1\u30b9\u30ef\u30fc\u30c9\n  var wsurl = \"ws://lite.mqtt.shiguredo.jp:8080/mqtt\";\n\n  // WebSocketURL\u3068ClientID\u304b\u3089MQTT Client\u3092\u4f5c\u6210\u3057\u307e\u3059\n  var client = new Paho.MQTT.Client(wsurl, clientId);\n\n  // connect\u3057\u307e\u3059\n  client.connect({userName: user_name, password: pass, onSuccess:onConnect, onFailure: failConnect});\n\n  // \u63a5\u7d9a\u306b\u6210\u529f\u3057\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\n  function onConnect() {\n    console.log(\"onConnect\");\n    subscribe(\"offer\");  // offer\u3092\u5f85\u3061\u53d7\u3051\u308b\n  }\n\n\u30d6\u30ed\u30fc\u30ab\u30fc\u306b\u63a5\u7d9a\u3057\u305f\u3089 offer SDP\u3092\u5f85\u3061\u53d7\u3051\u308b\u305f\u3081\u306b\u3001/signaling/offer \u30c8\u30d4\u30c3\u30af\u3092subscribe\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u305d\u306e\u4e2d\u8eab\u306f\u3053\u3061\u3089\u3002\n  function subscribe(waitType) {\n    // \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u767b\u9332\u3057\u307e\u3059\n    client.onMessageArrived = onMessageArrived;\n\n    var topic = buildTopic(waitType);\n    // Subscribe\u3057\u307e\u3059\n    client.subscribe(topic);\n  }\n\n  function buildTopic(signalingType) {\n    var topic = user_name + '/signaling/' + signalingType;\n    return topic;\n  }\n\n\n\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306e\u958b\u59cb\n1\u5bfe1\u306e\u901a\u4fe1\u3067\u3059\u304c\u30012\u4eba\u3068\u3082\u5f85\u3061\u53d7\u3051\u3066\u3044\u308b\u3060\u3051\u3067\u306f\u59cb\u307e\u308a\u307e\u305b\u3093\u3002\u7247\u65b9\u304c\u901a\u4fe1\u3092\u958b\u59cb\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\nOffer SDP \u3092\u4f5c\u3063\u3066\u6e96\u5099\u3092\u3057\u307e\u3059\u3002\n function makeOffer() {\n    unsubscribe(\"offer\");  // offer\u306e\u5f85\u3061\u53d7\u3051\u3092\u89e3\u9664\n    subscribe(\"answer\");  // answer\u3092\u5f85\u3061\u53d7\u3051\u308b\n    peerConnection = prepareNewConnection();\n    peerConnection.createOffer(function (sessionDescription) { // in case of success\n      peerConnection.setLocalDescription(sessionDescription);\n    }, function () { // in case of error\n      console.log(\"Create Offer failed\");\n    }, mediaConstraints);\n  }\n\n/signaling/offer \u306e\u5f85\u3061\u53d7\u3051\u3092\u89e3\u9664\u3057\u3001\u4ee3\u308f\u308a\u306b /signaling/answer \u3092\u5f85\u3061\u53d7\u3051\u307e\u3059\u3002\nSDP\u3092\u751f\u6210\u3059\u308b\u3068\u975e\u540c\u671f\u3067ICE Candidate\u304c\u751f\u6210\u3055\u308c\u3001onicecandidate()\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u306eICE Candidate\u304c\u51fa\u305d\u308d\u3063\u305f\u3089\u3001MQTT\u3067 offer SDP+ICE \u3092 /signaling/offer \u306b\u9001\u308a\u307e\u3059\u3002\n  function prepareNewConnection() {\n    var pc_config = {\"iceServers\":[]};\n    var peer = null;\n    try {\n      peer = new webkitRTCPeerConnection(pc_config);\n    } catch (e) {\n      console.log(\"Failed to create peerConnection, exception: \" + e.message);\n    }\n\n    // send any ice candidates to the other peer\n    peer.onicecandidate = function (evt) {\n      if (evt.candidate) {\n        console.log(evt.candidate);\n      } else {\n         // \u3059\u3079\u3066\u306e candidate \u304c\u51fa\u305d\u308d\u3063\u305f\u306e\u3067\u3001\u76f8\u624b\u306b\u9001\u308b\n        sendSDPTextMQTT(peer.localDescription.type, peer.localDescription.sdp);\n      }\n    };\n\n    peer.addStream(localStream);\n    peer.addEventListener(\"addstream\", onRemoteStreamAdded, false);\n    peer.addEventListener(\"removestream\", onRemoteStreamRemoved, false)\n    function onRemoteStreamAdded(event) {\n      remoteVideo.src = window.webkitURL.createObjectURL(event.stream);\n    }\n    function onRemoteStreamRemoved(event) {\n      remoteVideo.src = \"\";\n    }\n\n    return peer;\n  }\n\n  // MQTT\u3067SDP\u3092\u9001\u308b\n  function sendSDPTextMQTT(type, text){\n    var topic = buildTopic(type);\n    message = new Paho.MQTT.Message(text);\n    message.destinationName = topic;\n    client.send(message);\n  }\n\n\u203bMQTT\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u306f\u3001\u5f85\u3061\u53d7\u3051(subscribe)\u3068\u9001\u4fe1(publish)\u306e\u4e21\u65b9\u3092\u884c\u3048\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u60c5\u5831\u3092\u53d7\u3051\u53d6\u3063\u305f\u3089\nMQTT\u306e\u5f85\u3061\u53d7\u3051\u3067SDP+ICE\u3092\u53d7\u3051\u53d6\u308b\u3068\u3001\u3053\u3061\u3089\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u547c\u3070\u308c\u307e\u3059\u3002destinationName (\u30c8\u30d4\u30c3\u30af)\u3092\u898b\u3066\u3001offer\u304c\u5c4a\u3044\u305f\u306e\u304b\u3001answer\u304c\u5c4a\u3044\u305f\u306e\u304b\u3092\u533a\u5225\u3057\u3066\u3044\u307e\u3059\u3002\n  // \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5230\u7740\u3057\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\n  function onMessageArrived(message) {\n     if (message.destinationName === buildTopic('answer')) {\n       onAnswerText(message.payloadString)\n     }\n     else if (message.destinationName === buildTopic('offer')) {\n       onOfferText(message.payloadString)\n     }\n     else {\n       console.warn('Bad SDP topic');\n     }\n  }\n\nSDP\u306e\u7a2e\u5225\u306b\u5fdc\u3058\u3066\u3001\u51e6\u7406\u3092\u5206\u5c90\u3057\u3066\u3044\u307e\u3059\u3002Offer\u3092\u53d7\u3051\u53d6\u3063\u305f\u5834\u5408\u306fPeerConnection\u3092\u7528\u610f\u3057\u3001Answer SDP\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n  function onOfferText(text) {\n    setOfferText(text);\n    makeAnswer();\n  }\n\n  function setOfferText(text) {\n    peerConnection = prepareNewConnection();\n    var offer = new RTCSessionDescription({\n      type : 'offer',\n      sdp : text,\n    });\n    peerConnection.setRemoteDescription(offer);\n  }\n\n  function makeAnswer(evt) {\n    console.log('sending Answer. Creating remote session description...' );\n    if (! peerConnection) {\n      console.error('peerConnection NOT exist!');\n      return;\n    }\n\n    peerConnection.createAnswer(function (sessionDescription) { // in case of success\n      peerConnection.setLocalDescription(sessionDescription);\n    }, function () { // in case of error\n      console.log(\"Create Answer failed\");\n    }, mediaConstraints);\n  }\n\n\nPeer-to-Peer\u306e\u958b\u59cb\nICE candiate\u304c\u751f\u6210\u3055\u308c\u3001\u51fa\u305d\u308d\u3063\u305f\u3089\u5148\u307b\u3069\u3068\u540c\u3058\u3088\u3046\u306b Answer\u3068\u3057\u3066\u9001\u308a\u8fd4\u3057\u307e\u3059\u3002\n\u547c\u3073\u51fa\u3057\u5074\u304cAnswer\u3092\u53d7\u3051\u53d6\u308c\u3070\u3001Peer-to-Peer\u901a\u4fe1\u304c\u59cb\u307e\u308a\u307e\u3059\u3002\n  function onAnswerText(text) {\n    console.log(\"Received answer text...\")\n    setAnswerText(text);\n  }\n\n  function setAnswerText(text) {\n    if (! peerConnection) {\n      console.error('peerConnection NOT exist!');\n      return;\n    }\n    var answer = new RTCSessionDescription({\n      type : 'answer',\n      sdp : text,\n    });\n    peerConnection.setRemoteDescription(answer);\n  }\n\n\n\u8907\u6570\u4f1a\u8b70\u5ba4\u3001\u8907\u6570\u4eba\u306b\u5bfe\u5fdc\u3059\u308b\u306b\u306f\n\u4eca\u56de\u306f\u5b9f\u73fe\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u8907\u6570\u4f1a\u8b70\u5ba4\u306b\u5bfe\u5fdc\u3059\u308b\u306b\u306f\u4f1a\u8b70\u5ba4\u3054\u3068\u306b\u30c8\u30d4\u30c3\u30af\u3092\u7528\u610f\u3059\u308c\u3070\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n/signaling/room1/offer , /signaling/room1/answer\n/signaling/room2/offer , /signaling/room2/answer\n\n\u540c\u69d8\u306b\u8907\u6570\u4eba\u3067\u306e\u901a\u4fe1\u3092\u78ba\u7acb\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u5404\u30da\u30a2\u3054\u3068\u306bSDP+ICE\u3092\u4ea4\u63db\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002MQTT\u3067\u5b9f\u73fe\u3059\u308b\u306b\u306f\u3001\u76f8\u624b\u3054\u3068\u306b\u30c8\u30d4\u30c3\u30af\u3092\u7d30\u5206\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\n/signaling/room1/offer/toB\n/signaling/room1/offer/fromA/toB\n\n\u306a\u3069\u306a\u3069\u3002\n\n\u307e\u3068\u3081\n\u60c5\u5831\u3092\u53cc\u65b9\u5411\u306b\u4f1d\u3048\u308b\u624b\u6bb5\u304c\u3042\u308c\u3070\u3001WebRTC\u306e\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3059\u3067\u306b\u5229\u7528\u4e2d\u306e\u4ed5\u7d44\u307f\u304c\u3042\u3063\u305f\u3089\u3001\u305c\u3072\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002Peer-to-Peer\u3092\u958b\u59cb\u3059\u308b\u307e\u3067\u306e\u51e6\u7406\u304c\u826f\u304f\u7406\u89e3\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5b8c\u5168\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089: https://gist.github.com/mganeko/160a298bcc9f5c237dd4\n\n\n## \u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306f\u304a\u597d\u307f\u3067\nWebRTC\u306ePeer-to-Peer\u3092\u3064\u306a\u3050\u305f\u3081\u306e\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306f\u3001\u6c7a\u307e\u3063\u305f\u3084\u308a\u65b9\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u624b\u52d5\u306e\u30b3\u30d4\u30fc\uff06\u30da\u30fc\u30b9\u30c8\u3067\u3082\u3001\u30d5\u30a1\u30a4\u30eb\u7d4c\u7531\u3067\u3082\u3001\u3068\u306b\u304b\u304f\u304a\u4e92\u3044\u306e\u60c5\u5831\u3092\u4ea4\u63db\u3067\u304d\u308c\u3070\u826f\u3044\u3067\u3059\u3002\nWebSocket\u3092\u4f7f\u3046\u306e\u304c\u5b9a\u756a\u3060\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306fMQTT\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u5b9f\u969b\u306b\u306fWebSocket\u7d4c\u7531\u3067\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001MQTT\u306a\u3089\u3067\u306f\u3068\u3044\u3046\u6d3b\u7528\u306f\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3002\u304c\u3001\u300c\u305d\u3053\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u306e\u4ed5\u7d44\u307f\u304c\u3042\u308b\u300d\u306a\u3089\u3070\u7121\u7406\u3084\u308a\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## MQTT\u3068\u306e\u906d\u9047\nMQTT\u306f\u3001IoT\u3084M2M\u306e\u6d41\u308c\u3067\u518d\u8a55\u4fa1\u3055\u308c\u3066\u3044\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002\u3053\u3061\u3089\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n* MQTT\u306b\u3064\u3044\u3066\u306e\u307e\u3068\u3081 http://tdoc.info/blog/2014/01/27/mqtt.html\n* MQTT\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u77e5\u308b https://sango.shiguredo.jp/mqtt\n\nMQTT\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u30d6\u30ed\u30fc\u30ab\u30fc\uff08\u30b5\u30fc\u30d0\u30fc\uff09\u304c\u5fc5\u8981\u3067\u3059\u3002\u81ea\u5206\u3067\u52d5\u304b\u3059\u306e\u306f\u5927\u5909\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u3053\u3061\u3089\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u308f\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\n* Sango: MQTT as a Service   https://sango.shiguredo.jp/\n\n\u4eca\u56de\u3001JavaScript\u304b\u3089MQTT\u3092\u5229\u7528\u3059\u308b\u306e\u3067\u3001MQTT over WebSocket \u3067\u63a5\u7d9a\u3057\u307e\u3059\u3002\u4f7f\u3044\u65b9\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n* sango\u306e\u4f7f\u3044\u65b9 - JavaScript WebSocket \u7de8  http://tdoc.info/blog/2014/09/25/mqtt_javascript.html\n\n## \u30b7\u30b0\u30ca\u30ea\u30f3\u30b0 over MQTT\n\u4eca\u56de\u306e\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306f\u3001SDP\u3068ICE\u3092\u4e00\u7dd2\u306b\u9001\u308b[\u7c21\u6613\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0](http://qiita.com/massie_g/items/f5baf316652bbc6fcef1)\u306b\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u8907\u6570\u306e\u4f1a\u8b70\u5ba4\u3084\u8907\u6570\u4eba\u3067\u306e\u901a\u4fe1\u3092\u8003\u616e\u3057\u306a\u3044\u3001\u30b7\u30f3\u30d7\u30eb\u306a1\u5bfe1\u306e\u307f\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n### \u4eca\u56de\u306e\u30dd\u30a4\u30f3\u30c8\n* \u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u3067\u306f\u53cc\u65b9\u5411\u306b\u60c5\u5831\u3092\u3084\u308a\u53d6\u308a\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002MQTT\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u767a\u4fe1(Publish)\u3068\u53d7\u4fe1(Subscribe)\u306e\u4e8c\u5f79\u3092\u62c5\u3048\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\n* \u30c8\u30d4\u30c3\u30af\u4f7f\u3044\u5206\u3051\u308b\u3053\u3068\u3067\u3001\u60c5\u5831\u306e\u7a2e\u985e(offer / answer)\u3092\u8b58\u5225\u3057\u3066\u3044\u307e\u3059\n\n### MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u3078\u306e\u63a5\u7d9a\n```js:\n  var clientId = \"web_client_01\"; // \u9069\u5f53\u306a\u30af\u30e9\u30a4\u30a2\u30f3\u30c8ID\u3002\u4eca\u56de\u306f\u4e00\u610f\u306b\u3057\u307e\u305b\u3093\n  var user_name = \"you@github\"; // github\u30a2\u30ab\u30a6\u30f3\u30c8\n  var pass = \"yourpassword\"; // sango\u7528\u30d1\u30b9\u30ef\u30fc\u30c9\n  var wsurl = \"ws://lite.mqtt.shiguredo.jp:8080/mqtt\";\n\n  // WebSocketURL\u3068ClientID\u304b\u3089MQTT Client\u3092\u4f5c\u6210\u3057\u307e\u3059\n  var client = new Paho.MQTT.Client(wsurl, clientId);\n\n  // connect\u3057\u307e\u3059\n  client.connect({userName: user_name, password: pass, onSuccess:onConnect, onFailure: failConnect});\n\n  // \u63a5\u7d9a\u306b\u6210\u529f\u3057\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\n  function onConnect() {\n    console.log(\"onConnect\");\n    subscribe(\"offer\");  // offer\u3092\u5f85\u3061\u53d7\u3051\u308b\n  }\n```\n\u30d6\u30ed\u30fc\u30ab\u30fc\u306b\u63a5\u7d9a\u3057\u305f\u3089 offer SDP\u3092\u5f85\u3061\u53d7\u3051\u308b\u305f\u3081\u306b\u3001/signaling/offer \u30c8\u30d4\u30c3\u30af\u3092subscribe\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u305d\u306e\u4e2d\u8eab\u306f\u3053\u3061\u3089\u3002\n\n```js:\n  function subscribe(waitType) {\n    // \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u767b\u9332\u3057\u307e\u3059\n    client.onMessageArrived = onMessageArrived;\n\n    var topic = buildTopic(waitType);\n    // Subscribe\u3057\u307e\u3059\n    client.subscribe(topic);\n  }\n\n  function buildTopic(signalingType) {\n    var topic = user_name + '/signaling/' + signalingType;\n    return topic;\n  }\n```\n\n### \u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306e\u958b\u59cb\n1\u5bfe1\u306e\u901a\u4fe1\u3067\u3059\u304c\u30012\u4eba\u3068\u3082\u5f85\u3061\u53d7\u3051\u3066\u3044\u308b\u3060\u3051\u3067\u306f\u59cb\u307e\u308a\u307e\u305b\u3093\u3002\u7247\u65b9\u304c\u901a\u4fe1\u3092\u958b\u59cb\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\nOffer SDP \u3092\u4f5c\u3063\u3066\u6e96\u5099\u3092\u3057\u307e\u3059\u3002\n\n```js:\n function makeOffer() {\n    unsubscribe(\"offer\");  // offer\u306e\u5f85\u3061\u53d7\u3051\u3092\u89e3\u9664\n    subscribe(\"answer\");  // answer\u3092\u5f85\u3061\u53d7\u3051\u308b\n    peerConnection = prepareNewConnection();\n    peerConnection.createOffer(function (sessionDescription) { // in case of success\n      peerConnection.setLocalDescription(sessionDescription);\n    }, function () { // in case of error\n      console.log(\"Create Offer failed\");\n    }, mediaConstraints);\n  }\n```\n\n/signaling/offer \u306e\u5f85\u3061\u53d7\u3051\u3092\u89e3\u9664\u3057\u3001\u4ee3\u308f\u308a\u306b /signaling/answer \u3092\u5f85\u3061\u53d7\u3051\u307e\u3059\u3002\nSDP\u3092\u751f\u6210\u3059\u308b\u3068\u975e\u540c\u671f\u3067ICE Candidate\u304c\u751f\u6210\u3055\u308c\u3001onicecandidate()\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u3059\u3079\u3066\u306eICE Candidate\u304c\u51fa\u305d\u308d\u3063\u305f\u3089\u3001MQTT\u3067 offer SDP+ICE \u3092 /signaling/offer \u306b\u9001\u308a\u307e\u3059\u3002\n\n```js:\n  function prepareNewConnection() {\n    var pc_config = {\"iceServers\":[]};\n    var peer = null;\n    try {\n      peer = new webkitRTCPeerConnection(pc_config);\n    } catch (e) {\n      console.log(\"Failed to create peerConnection, exception: \" + e.message);\n    }\n\n    // send any ice candidates to the other peer\n    peer.onicecandidate = function (evt) {\n      if (evt.candidate) {\n        console.log(evt.candidate);\n      } else {\n         // \u3059\u3079\u3066\u306e candidate \u304c\u51fa\u305d\u308d\u3063\u305f\u306e\u3067\u3001\u76f8\u624b\u306b\u9001\u308b\n        sendSDPTextMQTT(peer.localDescription.type, peer.localDescription.sdp);\n      }\n    };\n\n    peer.addStream(localStream);\n    peer.addEventListener(\"addstream\", onRemoteStreamAdded, false);\n    peer.addEventListener(\"removestream\", onRemoteStreamRemoved, false)\n    function onRemoteStreamAdded(event) {\n      remoteVideo.src = window.webkitURL.createObjectURL(event.stream);\n    }\n    function onRemoteStreamRemoved(event) {\n      remoteVideo.src = \"\";\n    }\n\n    return peer;\n  }\n\n  // MQTT\u3067SDP\u3092\u9001\u308b\n  function sendSDPTextMQTT(type, text){\n    var topic = buildTopic(type);\n    message = new Paho.MQTT.Message(text);\n    message.destinationName = topic;\n    client.send(message);\n  }\n```\n\n\u203bMQTT\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u306f\u3001\u5f85\u3061\u53d7\u3051(subscribe)\u3068\u9001\u4fe1(publish)\u306e\u4e21\u65b9\u3092\u884c\u3048\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n### \u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u60c5\u5831\u3092\u53d7\u3051\u53d6\u3063\u305f\u3089\nMQTT\u306e\u5f85\u3061\u53d7\u3051\u3067SDP+ICE\u3092\u53d7\u3051\u53d6\u308b\u3068\u3001\u3053\u3061\u3089\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u547c\u3070\u308c\u307e\u3059\u3002destinationName (\u30c8\u30d4\u30c3\u30af)\u3092\u898b\u3066\u3001offer\u304c\u5c4a\u3044\u305f\u306e\u304b\u3001answer\u304c\u5c4a\u3044\u305f\u306e\u304b\u3092\u533a\u5225\u3057\u3066\u3044\u307e\u3059\u3002\n\n```js:\n  // \u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5230\u7740\u3057\u305f\u3089\u547c\u3073\u51fa\u3055\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\n  function onMessageArrived(message) {\n     if (message.destinationName === buildTopic('answer')) {\n       onAnswerText(message.payloadString)\n     }\n     else if (message.destinationName === buildTopic('offer')) {\n       onOfferText(message.payloadString)\n     }\n     else {\n       console.warn('Bad SDP topic');\n     }\n  }\n```\n\nSDP\u306e\u7a2e\u5225\u306b\u5fdc\u3058\u3066\u3001\u51e6\u7406\u3092\u5206\u5c90\u3057\u3066\u3044\u307e\u3059\u3002Offer\u3092\u53d7\u3051\u53d6\u3063\u305f\u5834\u5408\u306fPeerConnection\u3092\u7528\u610f\u3057\u3001Answer SDP\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```js:\n  function onOfferText(text) {\n    setOfferText(text);\n    makeAnswer();\n  }\n\n  function setOfferText(text) {\n    peerConnection = prepareNewConnection();\n    var offer = new RTCSessionDescription({\n      type : 'offer',\n      sdp : text,\n    });\n    peerConnection.setRemoteDescription(offer);\n  }\n\n  function makeAnswer(evt) {\n    console.log('sending Answer. Creating remote session description...' );\n    if (! peerConnection) {\n      console.error('peerConnection NOT exist!');\n      return;\n    }\n\n    peerConnection.createAnswer(function (sessionDescription) { // in case of success\n      peerConnection.setLocalDescription(sessionDescription);\n    }, function () { // in case of error\n      console.log(\"Create Answer failed\");\n    }, mediaConstraints);\n  }\n```\n\n### Peer-to-Peer\u306e\u958b\u59cb\nICE candiate\u304c\u751f\u6210\u3055\u308c\u3001\u51fa\u305d\u308d\u3063\u305f\u3089\u5148\u307b\u3069\u3068\u540c\u3058\u3088\u3046\u306b Answer\u3068\u3057\u3066\u9001\u308a\u8fd4\u3057\u307e\u3059\u3002\n\u547c\u3073\u51fa\u3057\u5074\u304cAnswer\u3092\u53d7\u3051\u53d6\u308c\u3070\u3001Peer-to-Peer\u901a\u4fe1\u304c\u59cb\u307e\u308a\u307e\u3059\u3002\n\n```js:\n  function onAnswerText(text) {\n    console.log(\"Received answer text...\")\n    setAnswerText(text);\n  }\n\n  function setAnswerText(text) {\n    if (! peerConnection) {\n      console.error('peerConnection NOT exist!');\n      return;\n    }\n    var answer = new RTCSessionDescription({\n      type : 'answer',\n      sdp : text,\n    });\n    peerConnection.setRemoteDescription(answer);\n  }\n```\n### \u8907\u6570\u4f1a\u8b70\u5ba4\u3001\u8907\u6570\u4eba\u306b\u5bfe\u5fdc\u3059\u308b\u306b\u306f\n\u4eca\u56de\u306f\u5b9f\u73fe\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u8907\u6570\u4f1a\u8b70\u5ba4\u306b\u5bfe\u5fdc\u3059\u308b\u306b\u306f\u4f1a\u8b70\u5ba4\u3054\u3068\u306b\u30c8\u30d4\u30c3\u30af\u3092\u7528\u610f\u3059\u308c\u3070\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n* /signaling/room1/offer , /signaling/room1/answer\n* /signaling/room2/offer , /signaling/room2/answer\n\n\u540c\u69d8\u306b\u8907\u6570\u4eba\u3067\u306e\u901a\u4fe1\u3092\u78ba\u7acb\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u5404\u30da\u30a2\u3054\u3068\u306bSDP+ICE\u3092\u4ea4\u63db\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002MQTT\u3067\u5b9f\u73fe\u3059\u308b\u306b\u306f\u3001\u76f8\u624b\u3054\u3068\u306b\u30c8\u30d4\u30c3\u30af\u3092\u7d30\u5206\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\n* /signaling/room1/offer/toB\n* /signaling/room1/offer/fromA/toB\n\n\u306a\u3069\u306a\u3069\u3002\n\n## \u307e\u3068\u3081\n\u60c5\u5831\u3092\u53cc\u65b9\u5411\u306b\u4f1d\u3048\u308b\u624b\u6bb5\u304c\u3042\u308c\u3070\u3001WebRTC\u306e\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3059\u3067\u306b\u5229\u7528\u4e2d\u306e\u4ed5\u7d44\u307f\u304c\u3042\u3063\u305f\u3089\u3001\u305c\u3072\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002Peer-to-Peer\u3092\u958b\u59cb\u3059\u308b\u307e\u3067\u306e\u51e6\u7406\u304c\u826f\u304f\u7406\u89e3\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n* \u5b8c\u5168\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089: https://gist.github.com/mganeko/160a298bcc9f5c237dd4\n\n\n\n\n\n\n\n\n\n\n\n\n", "tags": ["WebRTC"]}