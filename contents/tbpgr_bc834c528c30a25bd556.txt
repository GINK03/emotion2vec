{"tags": ["EC2", "Ruby", "aws-sdk"], "context": " More than 1 year has passed since last update.\n\naws-sdk ruby \u3067 EC2 instance  snapshot \u306e\u53d6\u5f97\u3092\u81ea\u52d5\u5316\n\n \u6982\u8981\nawd-sdk ruby \u3067 EC2 \u306e Instance \u306e  \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u53d6\u5f97\u3092\u81ea\u52d5\u5316\u3057\u307e\u3059\u3002\n\n \u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3080\u524d\u306b\n\u624b\u52d5\u3067\u884c\u3063\u305f\u5834\u5408\u306e\u8a18\u4e8b\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\uff08\u53c2\u7167\u5148\u306f restore \u8fbc\uff09\n EC2 instance snapshot and restore\n\n \u524d\u63d0\n\n\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u306b\u306f dotenv \u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n\n\n Ruby | dotenv gem \u3067 \u74b0\u5883\u5909\u6570\u3092\u30b9\u30de\u30fc\u30c8\u306b\u7ba1\u7406\n\n\n\nAWS \u306e \u30ad\u30fc\u306e\u53d6\u5f97\u306b\u3064\u3044\u3066\u306f\u4e0b\u8a18\u3092\u53c2\u7167\n\n\n\n AWS-SDK Ruby \u3067 EC2 \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540d\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 id / ip address \u3092\u53d6\u5f97\u3059\u308b\n\n\n\n\n\n \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\n Gemfile \u306e\u8a2d\u5b9a\nsource \"https://rubygems.org\"\n\ngem \"dotenv\"\ngem \"aws-sdk\"\n\n\n .env \u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u5b9a\n\nAWS Management Console \u3067\u5fc5\u8981\u306a\u5024\u3092\u53d6\u5f97\u3057\u3001 .env \u30d5\u30a1\u30a4\u30eb\u306b\u8a2d\u5b9a\u3092\u3059\u308b\n\nACCESS_KEY_ID = \"your access key\"\nSECRET_ACCESS_KEY = \"your secret access key\"\nEC2_ENDPOINT = \"end point\"\n\n\n \u4e3b\u51e6\u7406\nrequire 'aws-sdk'\nrequire 'dotenv'\nrequire 'pry'\n\nclass SnapshotExecutor\n  def initialize(search_word, snapshot_desc)\n    Dotenv.load\n    @ec2 = AWS::EC2.new(\n      access_key_id:     ENV[\"ACCESS_KEY_ID\"],\n      secret_access_key: ENV[\"SECRET_ACCESS_KEY\"],\n      ec2_endpoint:      ENV[\"EC2_ENDPOINT\"]\n    )\n    @search_word = search_word\n    @snapshot_desc = \"#{snapshot_desc} #{Time.now}\"\n  end\n\n  def create_snapshot\n    snapshot = volume(instance_id).create_snapshot(@snapshot_desc)\n    wait_until_snapshot_complete(snapshot)\n    show_complete_message(snapshot)\n  end\n\n  def volume(instance_id)\n    @ec2.volumes.select { |e|e.attachments.to_a.size == 1}\n                 .find { |e|e.attachments.first.instance.id == instance_id }\n  end\n\n  def instance_id\n    instance.id\n  end\n\n  private\n\n  def show_complete_message(snapshot)\n    if snapshot.status == :error\n      raise \"Snapshot can't be created\"\n    else\n      print \"Snapshot was created '#{snapshot.id}'\"\n    end\n  end\n\n  def wait_until_snapshot_complete(snapshot)\n    print 'Waiting snapshot complete'\n    loop {\n      break if [:completed, :error].include?(snapshot.status)\n      sleep 1\n      print \".\"\n    }\n    puts\n  end\n\n  def instance\n    instances = @ec2.instances.select { |e|e.tags['Name'] =~ /#{@search_word}/ }\n    validate_empty_instance(instances)\n    validate_too_many_instance(instances)\n    instances.first\n  end\n\n  def validate_empty_instance(instances)\n    return unless instances.empty?\n    STDERR.puts (\"No instance. Confirm your instance search keyword '#{@search_word}'.\")\n    exit(false)\n  end\n\n  def validate_too_many_instance(instances)\n    return if instances.size < 2\n    STDERR.puts (\"Too many instance. Confirm your instance search keyword '#{@search_word}'.\")\n    exit(false)\n  end\nend\n\n# vagrant \u3068\u3044\u3046\u540d\u524d\u3092\u542b\u3080\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u4e00\u3064\u3060\u3051\u3042\u308b\u524d\u63d0\u3067\u3059\nse = SnapshotExecutor.new('vagrant', 'test_snapshot_vagrant')\nse.create_snapshot\n\n\n \u7d50\u679c\u78ba\u8a8d\n\n\u5b9f\u884c\n\n$ ruby snapshot.rb\nPlease report a bug if this causes problems.\nWaiting snapshot complete.................................................................................................................................................\nSnapshot was created 'snap-91b7fa08'\n\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u78ba\u8a8d\n\n\n\n \u5916\u90e8\u8cc7\u6599\n\n\n AWS SDK for Ruby | API Document\n\n\n# aws-sdk ruby \u3067 EC2 instance :camera: snapshot \u306e\u53d6\u5f97\u3092\u81ea\u52d5\u5316\n## :musical_score: \u6982\u8981\nawd-sdk ruby \u3067 EC2 \u306e Instance \u306e :camera: \u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u53d6\u5f97\u3092\u81ea\u52d5\u5316\u3057\u307e\u3059\u3002\n\n## :hand: \u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3080\u524d\u306b\n\u624b\u52d5\u3067\u884c\u3063\u305f\u5834\u5408\u306e\u8a18\u4e8b\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\uff08\u53c2\u7167\u5148\u306f restore \u8fbc\uff09\n<i class=\"fa fa-external-link\" style=\"font-size:1em;\"></i> [EC2 instance snapshot and restore](http://qiita.com/tbpgr/items/2456a28506ec44d23a0a)\n\n## :musical_note: \u524d\u63d0\n* \u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u306b\u306f dotenv \u3092\u5229\u7528\u3057\u307e\u3059\u3002\n    * <i class=\"fa fa-external-link\" style=\"font-size:1em;\"></i> [Ruby | dotenv gem \u3067 \u74b0\u5883\u5909\u6570\u3092\u30b9\u30de\u30fc\u30c8\u306b\u7ba1\u7406](http://qiita.com/tbpgr/items/b7126c3d2d8f0329b11c)\n* AWS \u306e \u30ad\u30fc\u306e\u53d6\u5f97\u306b\u3064\u3044\u3066\u306f\u4e0b\u8a18\u3092\u53c2\u7167\n    * <i class=\"fa fa-external-link\" style=\"font-size:1em;\"></i> [AWS-SDK Ruby \u3067 EC2 \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u540d\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 id / ip address \u3092\u53d6\u5f97\u3059\u308b](http://qiita.com/tbpgr/items/580651b875ecdfdf0551)\n\n## <i class=\"fa fa-gears\" style=\"font-size:1em;\"></i> \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n### <i class=\"fa fa-gear\" style=\"font-size:1em;\"></i> Gemfile \u306e\u8a2d\u5b9a\n~~~\nsource \"https://rubygems.org\"\n\ngem \"dotenv\"\ngem \"aws-sdk\"\n~~~\n\n### <i class=\"fa fa-gear\" style=\"font-size:1em;\"></i> .env \u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u5b9a\n* AWS Management Console \u3067\u5fc5\u8981\u306a\u5024\u3092\u53d6\u5f97\u3057\u3001 .env \u30d5\u30a1\u30a4\u30eb\u306b\u8a2d\u5b9a\u3092\u3059\u308b\n\n~~~\nACCESS_KEY_ID = \"your access key\"\nSECRET_ACCESS_KEY = \"your secret access key\"\nEC2_ENDPOINT = \"end point\"\n~~~\n\n## <i class=\"fa fa-code\" style=\"font-size:1em;\"></i> \u4e3b\u51e6\u7406\n\n~~~ruby\nrequire 'aws-sdk'\nrequire 'dotenv'\nrequire 'pry'\n\nclass SnapshotExecutor\n  def initialize(search_word, snapshot_desc)\n    Dotenv.load\n    @ec2 = AWS::EC2.new(\n      access_key_id:     ENV[\"ACCESS_KEY_ID\"],\n      secret_access_key: ENV[\"SECRET_ACCESS_KEY\"],\n      ec2_endpoint:      ENV[\"EC2_ENDPOINT\"]\n    )\n    @search_word = search_word\n    @snapshot_desc = \"#{snapshot_desc} #{Time.now}\"\n  end\n\n  def create_snapshot\n    snapshot = volume(instance_id).create_snapshot(@snapshot_desc)\n    wait_until_snapshot_complete(snapshot)\n    show_complete_message(snapshot)\n  end\n\n  def volume(instance_id)\n    @ec2.volumes.select { |e|e.attachments.to_a.size == 1}\n                 .find { |e|e.attachments.first.instance.id == instance_id }\n  end\n\n  def instance_id\n    instance.id\n  end\n\n  private\n\n  def show_complete_message(snapshot)\n    if snapshot.status == :error\n      raise \"Snapshot can't be created\"\n    else\n      print \"Snapshot was created '#{snapshot.id}'\"\n    end\n  end\n\n  def wait_until_snapshot_complete(snapshot)\n    print 'Waiting snapshot complete'\n    loop {\n      break if [:completed, :error].include?(snapshot.status)\n      sleep 1\n      print \".\"\n    }\n    puts\n  end\n\n  def instance\n    instances = @ec2.instances.select { |e|e.tags['Name'] =~ /#{@search_word}/ }\n    validate_empty_instance(instances)\n    validate_too_many_instance(instances)\n    instances.first\n  end\n\n  def validate_empty_instance(instances)\n    return unless instances.empty?\n    STDERR.puts (\"No instance. Confirm your instance search keyword '#{@search_word}'.\")\n    exit(false)\n  end\n\n  def validate_too_many_instance(instances)\n    return if instances.size < 2\n    STDERR.puts (\"Too many instance. Confirm your instance search keyword '#{@search_word}'.\")\n    exit(false)\n  end\nend\n\n# vagrant \u3068\u3044\u3046\u540d\u524d\u3092\u542b\u3080\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u4e00\u3064\u3060\u3051\u3042\u308b\u524d\u63d0\u3067\u3059\nse = SnapshotExecutor.new('vagrant', 'test_snapshot_vagrant')\nse.create_snapshot\n~~~\n\n## <i class=\"fa fa-check-circle\" style=\"font-size:1em;\"></i> \u7d50\u679c\u78ba\u8a8d\n\n* \u5b9f\u884c\n\n~~~bash\n$ ruby snapshot.rb\nPlease report a bug if this causes problems.\nWaiting snapshot complete.................................................................................................................................................\nSnapshot was created 'snap-91b7fa08'\n~~~\n\n* \u30d6\u30e9\u30a6\u30b6\u3067\u78ba\u8a8d\n\n![snap.png](https://qiita-image-store.s3.amazonaws.com/0/43480/9f21b9d5-9ec2-2473-b06f-3e4148628d95.png)\n\n## :books: \u5916\u90e8\u8cc7\u6599\n* <i class=\"fa fa-external-link\" style=\"font-size:1em;\"></i> [AWS SDK for Ruby | API Document](http://docs.aws.amazon.com/AWSRubySDK/latest/frames.html)\n"}