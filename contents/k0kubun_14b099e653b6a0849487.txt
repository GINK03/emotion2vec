{"context": " More than 1 year has passed since last update.\u307b\u3068\u3093\u3069unicorn + rails \u7528 Capistrano 3 \u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u52d5\u3044\u305f\u3093\u3060\u3051\u3069\u3001\u3082\u3046\u5c11\u3057\u3044\u3058\u3089\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u7528\u30e1\u30e2\u3002\n\nunicorn\u3044\u308c\u308b\n\nGemfile\ngem 'unicorn'\n\ngroup :development, :test do\n  gem 'capistrano', require: false\n  gem 'capistrano-rails', require: false\n  gem 'capistrano-rbenv', require: false\n  gem 'capistrano-bundler', require: false\nend\n\n\n\u5f53\u305f\u308a\u524d\u3060\u3051\u3069unicorn\u3044\u308c\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\n\nunicorn\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\u3053\u308c\u3092\u62dd\u501f\u3057\u3066\u304d\u305f\n\nconfig/unicorn/production.rb\n# paths\napp_path = \"/var/www/app\"\nworking_directory \"#{app_path}/current\"\npid               \"#{app_path}/current/tmp/pids/unicorn.pid\"\n\n# listen\nlisten \"/tmp/unicorn-app.sock\"\n\n# logging\nstderr_path \"log/unicorn.stderr.log\"\nstdout_path \"log/unicorn.stdout.log\"\n\n# workers\nworker_processes 3\n\n# use correct Gemfile on restarts\nbefore_exec do |server|\n  ENV['BUNDLE_GEMFILE'] = \"#{app_path}/current/Gemfile\"\nend\n\n# preload\npreload_app true\n\nbefore_fork do |server, worker|\n  # the following is highly recomended for Rails + \"preload_app true\"\n  # as there's no need for the master process to hold a connection\n  if defined?(ActiveRecord::Base)\n    ActiveRecord::Base.connection.disconnect!\n  end\n\n  # Before forking, kill the master process that belongs to the .oldbin PID.\n  # This enables 0 downtime deploys.\n  old_pid = \"#{server.config[:pid]}.oldbin\"\n  if File.exists?(old_pid) && server.pid != old_pid\n    begin\n      Process.kill(\"QUIT\", File.read(old_pid).to_i)\n    rescue Errno::ENOENT, Errno::ESRCH\n      # someone else did our job for us\n    end\n  end\nend\n\nafter_fork do |server, worker|\n  if defined?(ActiveRecord::Base)\n    ActiveRecord::Base.establish_connection\n  end\nend\n\n\n\nproduction\u7528\u8a2d\u5b9a\n\u5143qiita\u306fstaging\u306b\u306a\u3063\u3066\u3044\u308b\n\nconfig/deploy/production.rb\nset :stage, :production\nset :branch, 'master'\nset :rails_env, 'production'\nset :migration_role, 'db'\n\nserver 'foo', user: 'bar', roles: %w{web app db}\n\n\n\ndatabase.yml\n\u3053\u308c\u3092\u3044\u3058\u3089\u306a\u3044\u3068rake db:migrate\u304c\u843d\u3061\u308b\n\u307b\u3068\u3093\u3069[unicorn + rails \u7528 Capistrano 3 \u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb](http://qiita.com/satococoa/items/9b0cc416ffc042680b9b)\u3067\u52d5\u3044\u305f\u3093\u3060\u3051\u3069\u3001\u3082\u3046\u5c11\u3057\u3044\u3058\u3089\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u7528\u30e1\u30e2\u3002\n\n## unicorn\u3044\u308c\u308b\n\n```rb:Gemfile\ngem 'unicorn'\n\ngroup :development, :test do\n  gem 'capistrano', require: false\n  gem 'capistrano-rails', require: false\n  gem 'capistrano-rbenv', require: false\n  gem 'capistrano-bundler', require: false\nend\n```\n\n\u5f53\u305f\u308a\u524d\u3060\u3051\u3069unicorn\u3044\u308c\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\n\n## unicorn\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n[\u3053\u308c](https://github.com/tablexi/capistrano3-unicorn/blob/master/examples/unicorn.rb)\u3092\u62dd\u501f\u3057\u3066\u304d\u305f\n\n```rb:config/unicorn/production.rb\n# paths\napp_path = \"/var/www/app\"\nworking_directory \"#{app_path}/current\"\npid               \"#{app_path}/current/tmp/pids/unicorn.pid\"\n\n# listen\nlisten \"/tmp/unicorn-app.sock\"\n\n# logging\nstderr_path \"log/unicorn.stderr.log\"\nstdout_path \"log/unicorn.stdout.log\"\n\n# workers\nworker_processes 3\n\n# use correct Gemfile on restarts\nbefore_exec do |server|\n  ENV['BUNDLE_GEMFILE'] = \"#{app_path}/current/Gemfile\"\nend\n\n# preload\npreload_app true\n\nbefore_fork do |server, worker|\n  # the following is highly recomended for Rails + \"preload_app true\"\n  # as there's no need for the master process to hold a connection\n  if defined?(ActiveRecord::Base)\n    ActiveRecord::Base.connection.disconnect!\n  end\n\n  # Before forking, kill the master process that belongs to the .oldbin PID.\n  # This enables 0 downtime deploys.\n  old_pid = \"#{server.config[:pid]}.oldbin\"\n  if File.exists?(old_pid) && server.pid != old_pid\n    begin\n      Process.kill(\"QUIT\", File.read(old_pid).to_i)\n    rescue Errno::ENOENT, Errno::ESRCH\n      # someone else did our job for us\n    end\n  end\nend\n\nafter_fork do |server, worker|\n  if defined?(ActiveRecord::Base)\n    ActiveRecord::Base.establish_connection\n  end\nend\n```\n\n## production\u7528\u8a2d\u5b9a\n\u5143qiita\u306fstaging\u306b\u306a\u3063\u3066\u3044\u308b\n\n```rb:config/deploy/production.rb\nset :stage, :production\nset :branch, 'master'\nset :rails_env, 'production'\nset :migration_role, 'db'\n\nserver 'foo', user: 'bar', roles: %w{web app db}\n```\n\n## database.yml\n\u3053\u308c\u3092\u3044\u3058\u3089\u306a\u3044\u3068rake db:migrate\u304c\u843d\u3061\u308b\n", "tags": ["Rails", "capistrano"]}