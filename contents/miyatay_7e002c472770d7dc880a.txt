{"context": " More than 1 year has passed since last update.Java MongoDB Driver\u3092\u4f7f\u3063\u3066Java\u304b\u3089MongoDB\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3001\u5168\u304f\u306f\u3058\u3081\u3066\u306e\u4eba\u5411\u3051\u30e1\u30e2\u3002\nMongoDB\u306b\u306f\u8272\u3005\u6a5f\u80fd\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u4eca\u56de\u306fJava MongoDB Driver\u3092\u4f7f\u3063\u305f\u7c21\u5358\u306aCRUD\u306e\u8a18\u8ff0\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\nMongoDB\u306e\u3053\u3068\nRDB\u3068\u306f\u7528\u8a9e\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\u4f55\u3082\u77e5\u3089\u305a\u306bJava MongoDB Driver\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u8aad\u3093\u3067\u3082\uff1f\uff1f\uff1f\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u6700\u4f4e\u9650\u3001RDB\u3068\u306e\u7528\u8a9e\u306e\u9055\u3044\u3092\u628a\u63e1\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\nRDB\u3068MongoDB\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u69cb\u9020\u306e\u6bd4\u8f03\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n\n\nRDB\nMongoDB\n\n\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n\n\u30c6\u30fc\u30d6\u30eb\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\n\n\n\u30ec\u30b3\u30fc\u30c9\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\n\n\n\u307e\u305f\u3001MongoDB\u306e\u7279\u5fb4\u306a\u3069\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b5\u30a4\u30c8\u3067\u628a\u63e1\u3057\u307e\u3059\u3002\n\nIntroduction to MongoDB \u2014 MongoDB Manual 2.6.3\n\u89e6\u3063\u3066\u307f\u3088\u3046\uff01\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3092\u652f\u3048\u308b\u30af\u30e9\u30a6\u30c9\u6280\u8853 - MongoDB\u3092\u8a66\u3057\u3066\u307f\u3088\u3046\uff1aITpro\nMongoDB\u3067\u3086\u308b\u3075\u308fDB\u4f53\u9a13\uff1a\u9023\u8f09\uff5cgihyo.jp \u2026 \u6280\u8853\u8a55\u8ad6\u793e\n\n\nbuild.gradle\u306e\u8a2d\u5b9a\nbuild.gradle\u306b\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\ndependencies {\n...\n    compile group: 'org.mongodb', name:'mongo-java-driver', version:'2.12.3'\n...\n}\n\n\u4eca\u56de\u306fGradle\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u304c\u3001\u81ea\u5206\u3067\u4f9d\u5b58\u95a2\u4fc2\u3092\u89e3\u6c7a\u3059\u308b\u5834\u5408\u306fMongoDB Drivers\u304b\u3089\u9069\u5207\u306a\u30c9\u30e9\u30a4\u30d0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30d1\u30b9\u3092\u901a\u3057\u307e\u3059\u3002\n\nJava\u304b\u3089MongoDB\u306b\u30a2\u30af\u30bb\u30b9\n\n\u30b5\u30fc\u30d0\u3068\u306e\u63a5\u7d9a\u30fb\u5207\u65ad\n// MongoDB\u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\nMongoClient client = new MongoClient(\"localhost\", 27017);\n// \u5229\u7528\u3059\u308bDB\u3092\u53d6\u5f97\nDB db = mongoClient.getDB( \"mydb\" );\n\n...\n\n\n// \u30b5\u30fc\u30d0\u304b\u3089\u5207\u65ad\nclient.close();\n\n\nnew MongoClient()\u3067\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30eb\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30921\u3064\u3092\u3068\u3063\u3066\u304f\u308b\uff08\u3089\u3057\u3044\uff09\n\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3067\u3001\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u5171\u6709\u3067\u304d\u308b\u3088\u3046\u8a2d\u8a08\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u30011\u3064\u306e\u30a2\u30d7\u30ea\u30671\u3064\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067OK\uff08\u3089\u3057\u3044\uff09\ngetDB()\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u306a\u3051\u308c\u3070\u52dd\u624b\u306b\u751f\u6210\u3055\u308c\u308b\n\n\u8a73\u3057\u304f\u306fGetting Started with Java Driver\u53c2\u7167\u3002\n\n\u8a8d\u8a3c\n\u30bb\u30ad\u30e5\u30a2\u30e2\u30fc\u30c9\uff08\u6ce8\uff1aSecurity Tutorials \u2014 MongoDB Manual 2.6.3\uff09\u3067\u8d77\u52d5\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u8a8d\u8a3c\u304c\u5fc5\u8981\u3002\nMongoClient mongoClient = new MongoClient();\nDB db = mongoClient.getDB(\"mydb\");\nboolean auth = db.authenticate(myUserName, myPassword);\n\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u4e00\u89a7\u53d6\u5f97\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u4e00\u89a7\u3092\u53d6\u5f97\nSet<String> colls = db.getCollectionNames();\n\nfor (String s : colls) {\n    System.out.println(s);\n}\n\n\n\n\u6307\u5b9a\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u53d6\u5f97\n\u53d6\u5f97\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066CRUD\u7b49\u306e\u64cd\u4f5c\u304c\u3067\u304d\u307e\u3059\u3002\nDBCollection coll = db.getCollection(\"testCollection\");\n\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306eInsert\n\u53d6\u5f97\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30a4\u30f3\u30b5\u30fc\u30c8\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u69cb\u9020\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30a4\u30f3\u30b5\u30fc\u30c8\u3059\u308b\u5834\u5408\u3001\n{\n   \"name\" : \"MongoDB\",\n   \"type\" : \"database\",\n   \"count\" : 1,\n   \"info\" : {\n               \"x\" : 203,\n               \"y\" : 102\n             }\n}\n\nJava\u306e\u30bd\u30fc\u30b9\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\nBasicDBObject doc = new BasicDBObject(\"name\", \"MongoDB\")\n        .append(\"type\", \"database\")\n        .append(\"count\", 1)\n        .append(\"info\", new BasicDBObject(\"x\", 203).append(\"y\", 102));\ncoll.insert(doc);\n\nBasicDBObject \u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u305d\u306e\u5f8c\u3001\u30a4\u30f3\u30b5\u30fc\u30c8\u5bfe\u8c61\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306einsert()\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3059\u3002\n\u304c\u3001\u306f\u3063\u304d\u308a\u3044\u3063\u3066DBObject\u3092\u4f5c\u308b\u306e\u304c\u3068\u3066\u3082\u3081\u3093\u3069\u304f\u3055\u3044\u3002\u3002\nJSON\u6587\u5b57\u5217\u304b\u3089DBObject\u3092\u3064\u304f\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\nDBObject json = (DBObject) JSON.parse(\"{'name':'mkyong', 'age':30}\");\ncoll.insert(json);\n\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u691c\u7d22\n\n1\u4ef6\u76ee\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u691c\u7d22\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304b\u30891\u4ef6\u3060\u3051\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\nDBObject myDoc = coll.findOne();\nSystem.out.println(myDoc);\n\n\n\u30ab\u30fc\u30bd\u30eb\u3092\u4f7f\u3063\u3066\u5168\u3066\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304b\u3089\u5168\u3066\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u306b\u306ffind()\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\nfind()\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001\u30af\u30a8\u30ea\u306b\u4e00\u81f4\u3057\u305f\u5168\u3066\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\nDBCursor cursor = coll.find();\ntry {\n   while(cursor.hasNext()) {\n       System.out.println(cursor.next());\n   }\n} finally {\n   cursor.close();\n}\n\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4ef6\u6570\u3092\u53d6\u5f97\u3059\u308b\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u4f55\u4ef6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u308b\u304b\u8abf\u3079\u308b\u306b\u306fgetCount()\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\nlong count = coll.getCount();\nSystem.out.println(count + \"\u4ef6\");\n\n\n\u30af\u30a8\u30ea\u3092\u4f7f\u3063\u30661\u4ef6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\nBasicDBObject query = new BasicDBObject(\"i\", 71);\n\ncursor = coll.find(query);\n\ntry {\n   while(cursor.hasNext()) {\n       System.out.println(cursor.next());\n   }\n} finally {\n   cursor.close();\n}\n\n\n$\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u4f7f\u3063\u305f\u30af\u30a8\u30ea\u3067\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u691c\u7d22\u3059\u308b\nMongoDB\u3067\u306f\u30af\u30a8\u30ea\u306b$\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u5229\u7528\u3057\u3066\u691c\u7d22\u3084\u96c6\u8a08\u7b49\u304c\u884c\u3048\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\"qty\"\u30d5\u30a3\u30fc\u30eb\u30c9\u304c20\u3067\u306a\u3044\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u691c\u7d22\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\ndb.inventory.find( { qty: { $ne: 20 } } )\n\n\u30aa\u30da\u30ec\u30fc\u30bf\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u306fOperators \u2014 MongoDB Manual 2.6.3 \u53c2\u7167\u3002\n$\u30aa\u30da\u30ec\u30fc\u30bf\u306fDBObject\u306b\u3001\u901a\u5e38\u306eString\u30ad\u30fc\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nquery = new BasicDBObject(\"name\",                                   \n        new BasicDBObject(\"$ne\", \"mkyong\")).append(\"count\",         \n        new BasicDBObject(\"$gt\", 1));                               \ncursor = coll.find(query);                                          \ntry {                                                               \n    while (cursor.hasNext()) {                                      \n        System.out.println(\"use $ operrator -> \" + cursor.next());  \n    }                                                               \n} finally {                                                         \n    cursor.close();                                                 \n}                                                                   \n\n\u3067\u3082\u3001DBObject\u3092\u751f\u6210\u3059\u308b\u306e\u306f\u3084\u3063\u3071\u308a\u9762\u5012\u306a\u306e\u3067\u3001JSON\u304b\u3089\u30af\u30a8\u30ea\u3092\u751f\u6210\u3057\u307e\u3059\u3002\njson = (DBObject) JSON                                              \n        .parse(\"{'name':{$ne:'mkyong'}, 'count':{$gt:1}}\");         \ncursor = coll.find(json);                                           \ntry {                                                               \n    while (cursor.hasNext()) {                                      \n        System.out.println(\"use $ ope(JSON) -> \" + cursor.next());  \n    }                                                               \n} finally {                                                         \n    cursor.close();                                                 \n}                                                                   \n\ncoll.remove(new BasicDBObject());                                   \n\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8Update\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u66f4\u65b0\u3059\u308b\u306b\u306f\u3001\u66f4\u65b0\u5bfe\u8c61\u306eDBObject\u3092\u53d6\u5f97\u3057\u3066\u66f8\u304d\u63db\u3048\u3001save()\u30e1\u30bd\u30c3\u30c9\u3067\u66f4\u65b0\u3057\u307e\u3059\u3002\n\u3053\u306e\u3068\u304d\u3001_id\u306f\u5909\u66f4\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002DBObject\u306e_id\u304c\u4e00\u81f4\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u4e0a\u66f8\u304d\u3055\u308c\u308b\u304b\u3089\u3067\u3059\u3002\ndoc = coll.findOne();                              \ndoc.put(\"name\", \"MongoDB2\"); // name\u5c5e\u6027\u3092\u66f4\u65b0       \ndoc.put(\"age\", \"15\");        // age\u5c5e\u6027\u3092\u8ffd\u52a0        \ncoll.save(doc);                                    \n\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8Delete\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u524a\u9664\u3059\u308b\u306b\u306f\u3001\u524a\u9664\u5bfe\u8c61\u306eDBObject\u3092\u53d6\u5f97\u3057\u3066\u3001remove()\u30e1\u30bd\u30c3\u30c9\u3067\u524a\u9664\u3057\u307e\u3059\u3002\ndoc = coll.findOne();\ncoll.remove(doc);\n\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u524a\u9664\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u524a\u9664\u3059\u308b\u5834\u5408drop()\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\nSystem.out.println(db.getCollectionNames()); \ncoll.drop();                                           \nSystem.out.println(db.getCollectionNames()); \n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u4e0a\u8a18\u306e\u51e6\u7406\u307e\u3068\u3081\u3002\uff08\u8a8d\u8a3c\u7121\u3057\uff09\nMongoClient client = null;                                               \n\ntry {                                                                    \n    // MondoDB\u30b5\u30fc\u30d0\u3078\u306e\u63a5\u7d9a                                                    \n    client = new MongoClient(\"localhost\", 27017);                        \n    // client = new MongoClient();                                       \n    // \u4f7f\u7528\u3059\u308bDB\u306e\u6307\u5b9a                                                         \n    DB db = client.getDB(\"mydb\");                                        \n\n    DBCollection coll = db.getCollection(\"testCollection\");              \n\n    // Insert(append\u7248)                                                   \n    DBObject doc = new BasicDBObject(\"name\", \"MongoDB\")                  \n            .append(\"type\", \"database\")                                  \n            .append(\"count\", 1)                                          \n            .append(\"info\",                                              \n                    new BasicDBObject(\"x\", 203).append(\"y\", 102));       \n    coll.insert(doc);                                                    \n\n    doc = new BasicDBObject(\"name\", \"MongoDB\")                           \n            .append(\"type\", \"database\")                                  \n            .append(\"count\", 2)                                          \n            .append(\"info\",                                              \n                    new BasicDBObject(\"x\", 400).append(\"y\", -10));       \n    coll.insert(doc);                                                    \n\n    // Insert(JSON\u7248)                                                     \n    DBObject json = (DBObject) JSON                                      \n            .parse(\"{'name':'mkyong', 'age':30}\");                       \n    coll.insert(json);                                                   \n\n    // 1\u4ef6\u3060\u3051\u691c\u7d22                                                            \n    DBObject myDoc = coll.findOne();                                     \n    System.out.println(\"findOne() -> \" + myDoc);                         \n\n    // \u30ab\u30fc\u30bd\u30eb\u3092\u4f7f\u3063\u3066\u5168\u4ef6\u53d6\u5f97                                                      \n    DBCursor cursor = coll.find();                                       \n    try {                                                                \n        while (cursor.hasNext()) {                                       \n            System.out.println(\"DBCursor - > \" + cursor.next());         \n        }                                                                \n    } finally {                                                          \n        cursor.close();                                                  \n    }                                                                    \n\n    // \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4ef6\u6570\u53d6\u5f97                                                        \n    long count = coll.getCount();                                        \n    System.out.println(count + \"\u4ef6\");                                     \n\n    // \u30af\u30a8\u30ea\u3092\u4f7f\u3063\u30661\u4ef6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b                                             \n    BasicDBObject query = new BasicDBObject(\"name\", \"MongoDB\");          \n    cursor = coll.find(query);                                           \n    try {                                                                \n        while (cursor.hasNext()) {                                       \n            System.out.println(\"use query -> \" + cursor.next());         \n        }                                                                \n    } finally {                                                          \n        cursor.close();                                                  \n    }                                                                    \n\n    // $\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u4f7f\u3063\u305f\u30af\u30a8\u30ea                                                     \n    query = new BasicDBObject(\"name\",                                    \n            new BasicDBObject(\"$ne\", \"mkyong\")).append(\"count\",          \n            new BasicDBObject(\"$gt\", 1));                                \n    cursor = coll.find(query);                                           \n    try {                                                                \n        while (cursor.hasNext()) {                                       \n            System.out.println(\"use $ operator -> \" + cursor.next());    \n        }                                                                \n    } finally {                                                          \n        cursor.close();                                                  \n    }                                                                    \n\n    // JSON\u304b\u3089\u30af\u30a8\u30ea\u3092\u751f\u6210                                                      \n    json = (DBObject) JSON                                               \n            .parse(\"{'name':{$ne:'mkyong'}, 'count':{$gt:1}}\");          \n    cursor = coll.find(json);                                            \n    try {                                                                \n        while (cursor.hasNext()) {                                       \n            System.out.println(\"use $ ope(JSON) -> \" + cursor.next());   \n        }                                                                \n    } finally {                                                          \n        cursor.close();                                                  \n    }                                                                    \n\n    // \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8                                                     \n    doc = coll.findOne();                                                \n    doc.put(\"name\", \"MongoDB2\");    // name\u5c5e\u6027\u3092\u66f4\u65b0                         \n    doc.put(\"age\", \"15\");           // age\u5c5e\u6027\u3092\u8ffd\u52a0                          \n    coll.save(doc);                                                      \n    cursor = coll.find();                                                \n    try {                                                                \n        while (cursor.hasNext()) {                                       \n            System.out.println(\"updated -> \" + cursor.next());           \n        }                                                                \n    } finally {                                                          \n        cursor.close();                                                  \n    }                                                                    \n\n    // \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u524a\u9664                                                         \n    doc = coll.findOne();                                                \n    coll.remove(doc);                                                    \n    cursor = coll.find();                                                \n    try {                                                                \n        while (cursor.hasNext()) {                                       \n            System.out.println(\"deleted -> \" + cursor.next());           \n        }                                                                \n    } finally {                                                          \n        cursor.close();                                                  \n    }                                                                    \n\n    // \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u524a\u9664                                                          \n    System.out.println(\"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u524a\u9664\u524d: \" + db.getCollectionNames());         \n    coll.drop();                                                         \n    System.out.println(\"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u524a\u9664\u5f8c: \" + db.getCollectionNames());         \n\n    coll.remove(new BasicDBObject());                                    \n\n} catch (UnknownHostException e) {                                       \n    // TODO Auto-generated catch block                                   \n    e.printStackTrace();                                                 \n} finally {                                                              \n    if (client != null) {                                                \n        client.close();                                                  \n    }                                                                    \n}                                                                        \n\n\n\u305d\u306e\u4ed6\u3001\u6c17\u306b\u306a\u3063\u305f\u3053\u3068\n\u4e0a\u8a18\u4ee5\u5916\u306b\u6c17\u306b\u306a\u3063\u3066\u8abf\u3079\u305f\u3053\u3068\u306e\u30e1\u30e2\u3002\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\nMongoDB\u306b\u306f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u306a\u304f\u5f8c\u52dd\u3061\u306a\u306e\u3067\u3001\u697d\u89b3\u30ed\u30c3\u30af\u3067\u6392\u4ed6\u5236\u5fa1\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\uff084/4\uff09\u89e6\u3063\u3066\u307f\u3088\u3046\uff01\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3092\u652f\u3048\u308b\u30af\u30e9\u30a6\u30c9\u6280\u8853 - MongoDB\u3092\u8a66\u3057\u3066\u307f\u3088\u3046\uff1aITpro\u53c2\u7167\n\n\uff081\uff09\u30af\u30a8\u30ea\u30fc\u306b\u3088\u308a\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53d6\u308a\u51fa\u3059\u3002\n\uff082\uff09\u53e4\u3044\u5024\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304f\n\uff083\uff09\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u66f4\u65b0\n\uff084\uff09\u53e4\u3044\u5024\uff08_id\u3092\u542b\u3080\uff09\u3092\u7b2c1\u5f15\u6570\u306b\u3001\u65b0\u3057\u3044\u66f4\u65b0\u3057\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u7b2c2\u5f15\u6570\u306b\u6307\u5b9a\u3057\u3066\u3001update\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u66f8\u304d\u63db\u308f\u3063\u3066\u3044\u305f\u3089update\u304c\u5931\u6557\u3059\u308b\n\uff085\uff09 update\u304c\u5931\u6557\u3057\u305f\u3089\u3001\u307e\u305f\uff081\uff09\u304b\u3089\u3084\u308a\u76f4\u3059\u3002\n\n\u3060\u305d\u3046\u3067\u3059\u3002\n\u307e\u305f\u3001\u4e00\u9023\u306e\u64cd\u4f5c\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u3066\u3082\u305d\u306e\u524d\u306e\u51e6\u7406\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u304d\u307e\u305b\u3093\u3002\ndb.getLastError();\u30e1\u30bd\u30c3\u30c9\u3067\u6700\u5f8c\u306b\u8d77\u3053\u3063\u305f\u30a8\u30e9\u30fc\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\nsave()\u3068insert()\u3001update()\u306e\u9055\u3044\nsave()\u30e1\u30bd\u30c3\u30c9\u3068\u3001insert()\u3001update()\u30e1\u30bd\u30c3\u30c9\u304c\u51fa\u3066\u304d\u3066\u4f7f\u3044\u5206\u3051\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u3002\n\u8a73\u7d30\u306fjavadoc\u53c2\u7167\u3002\uff08DBCollection\uff09\n\n\n\n\nsave()\ninsert()\nupdate()\n\n\n\n\n\u66f4\u65b0\u3067\u304d\u308b\u4ef6\u6570\n1\u4ef6\n1\u4ef6\u4ee5\u4e0a\n1\u4ef6\u4ee5\u4e0a(*1)\n\n\n\u5bfe\u8c61\u306e\u6307\u5b9a\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\u30af\u30a8\u30ea\n\n\n\u5bfe\u8c61\u30ec\u30b3\u30fc\u30c9\u306e\u6709\u7121\u7b49\n_id\u304c\u7121\u3051\u308c\u3070Insert\u3001\u3042\u308c\u3070Upsert\n-\n\u6307\u5b9a\u3057\u305f\u30af\u30a8\u30ea\u3092\u767a\u884c\u3057\u305f\u6642\u70b9\u3067\u53d6\u5f97\u3055\u308c\u308b_id\u306b\u5bfe\u5fdc\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3001Update\u5b9f\u884c\u6642\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u7121\u3044\u5834\u5408\u306f\u66f4\u65b0\u5931\u6557*2\n\n\n\n*1:updateMulti()\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3059\u308b\u304b\u3001update()\u30e1\u30bd\u30c3\u30c9\u306e\u7b2c4\u5f15\u6570\u306btrue\u30bb\u30c3\u30c8\u3067\u8907\u6570\u4ef6\u66f4\u65b0\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u6700\u521d\u306e1\u4ef6\u3060\u3051\u66f4\u65b0\u3002\n*2:update()\u30e1\u30bd\u30c3\u30c9\u306e\u7b2c3\u5f15\u6570\u3092true\u306b\u8a2d\u5b9a\u3059\u308b\u3068Upsert\u3055\u308c\u308b\n\nBulk\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\n\n\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u64cd\u4f5c\u3059\u308b\u5834\u5408\u306fBulk\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u3068\u901f\u3044\u3089\u3057\u3044\ninsert/update/remove\u304c\u4e00\u62ec\u3067\u51e6\u7406\u3067\u304d\u308b\nBukl\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u306f2\u7a2e\u985e\u3042\u308b\n\n\nOrdered bulk operation\uff1a\u9806\u5e8f\u3092\u4fdd\u8a3c\nUnordered bulk operations\uff1a\u9806\u5e8f\u3092\u4fdd\u8a3c\u3057\u306a\u3044\uff08\u4e26\u884c\u51e6\u7406\uff09\n\n\n\nStatement\u306eaddBatch()\u3001executeBatch()\u3063\u307d\u3044\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n// 1. Ordered bulk operation\nBulkWriteOperation builder = coll.initializeOrderedBulkOperation();\nbuilder.insert(new BasicDBObject(\"_id\", 1));\nbuilder.insert(new BasicDBObject(\"_id\", 2));\nbuilder.insert(new BasicDBObject(\"_id\", 3));\n\nbuilder.find(new BasicDBObject(\"_id\", 1)).updateOne(new BasicDBObject(\"$set\", new BasicDBObject(\"x\", 2)));\nbuilder.find(new BasicDBObject(\"_id\", 2)).removeOne();\nbuilder.find(new BasicDBObject(\"_id\", 3)).replaceOne(new BasicDBObject(\"_id\", 3).append(\"x\", 4));\n\nBulkWriteResult result = builder.execute();\n\n// 2. Unordered bulk operation - no guarantee of order of operation\nbuilder = coll.initializeUnorderedBulkOperation();\nbuilder.find(new BasicDBObject(\"_id\", 1)).removeOne();\nbuilder.find(new BasicDBObject(\"_id\", 2)).removeOne();\n\nresult = builder.execute();\n\n\n[Java MongoDB Driver](http://docs.mongodb.org/ecosystem/drivers/java/)\u3092\u4f7f\u3063\u3066Java\u304b\u3089MongoDB\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3001\u5168\u304f\u306f\u3058\u3081\u3066\u306e\u4eba\u5411\u3051\u30e1\u30e2\u3002\nMongoDB\u306b\u306f\u8272\u3005\u6a5f\u80fd\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u4eca\u56de\u306fJava MongoDB Driver\u3092\u4f7f\u3063\u305f\u7c21\u5358\u306aCRUD\u306e\u8a18\u8ff0\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\n#MongoDB\u306e\u3053\u3068\nRDB\u3068\u306f\u7528\u8a9e\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\u4f55\u3082\u77e5\u3089\u305a\u306bJava MongoDB Driver\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u8aad\u3093\u3067\u3082\uff1f\uff1f\uff1f\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u6700\u4f4e\u9650\u3001RDB\u3068\u306e\u7528\u8a9e\u306e\u9055\u3044\u3092\u628a\u63e1\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\nRDB\u3068MongoDB\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u69cb\u9020\u306e\u6bd4\u8f03\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n| RDB | MongoDB |\n|:-----------|:------------|\n| \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 | \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 |\n| \u30c6\u30fc\u30d6\u30eb |\u30b3\u30ec\u30af\u30b7\u30e7\u30f3 |\n| \u30ec\u30b3\u30fc\u30c9 | \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 |\n\n\n\u307e\u305f\u3001MongoDB\u306e\u7279\u5fb4\u306a\u3069\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b5\u30a4\u30c8\u3067\u628a\u63e1\u3057\u307e\u3059\u3002\n\n- [Introduction to MongoDB \u2014 MongoDB Manual 2.6.3](http://docs.mongodb.org/manual/core/introduction/)\n- [\u89e6\u3063\u3066\u307f\u3088\u3046\uff01\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3092\u652f\u3048\u308b\u30af\u30e9\u30a6\u30c9\u6280\u8853 - MongoDB\u3092\u8a66\u3057\u3066\u307f\u3088\u3046\uff1aITpro](http://itpro.nikkeibp.co.jp/article/COLUMN/20120306/384811/)\n- [MongoDB\u3067\u3086\u308b\u3075\u308fDB\u4f53\u9a13\uff1a\u9023\u8f09\uff5cgihyo.jp \u2026 \u6280\u8853\u8a55\u8ad6\u793e](http://gihyo.jp/dev/serial/01/mongodb)\n\n\n\n#build.gradle\u306e\u8a2d\u5b9a\nbuild.gradle\u306b\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\n\n```\ndependencies {\n...\n\tcompile group: 'org.mongodb', name:'mongo-java-driver', version:'2.12.3'\n...\n}\n```\n\n\u4eca\u56de\u306fGradle\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u304c\u3001\u81ea\u5206\u3067\u4f9d\u5b58\u95a2\u4fc2\u3092\u89e3\u6c7a\u3059\u308b\u5834\u5408\u306f[MongoDB Drivers](http://docs.mongodb.org/ecosystem/drivers/)\u304b\u3089\u9069\u5207\u306a\u30c9\u30e9\u30a4\u30d0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30d1\u30b9\u3092\u901a\u3057\u307e\u3059\u3002\n\n#Java\u304b\u3089MongoDB\u306b\u30a2\u30af\u30bb\u30b9\n\n## \u30b5\u30fc\u30d0\u3068\u306e\u63a5\u7d9a\u30fb\u5207\u65ad\n\n```java\n// MongoDB\u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\nMongoClient client = new MongoClient(\"localhost\", 27017);\n// \u5229\u7528\u3059\u308bDB\u3092\u53d6\u5f97\nDB db = mongoClient.getDB( \"mydb\" );\n\n...\n\n\n// \u30b5\u30fc\u30d0\u304b\u3089\u5207\u65ad\nclient.close();\n```\n\n- new MongoClient()\u3067\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30eb\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30921\u3064\u3092\u3068\u3063\u3066\u304f\u308b\uff08\u3089\u3057\u3044\uff09\n- \u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3067\u3001\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u5171\u6709\u3067\u304d\u308b\u3088\u3046\u8a2d\u8a08\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u30011\u3064\u306e\u30a2\u30d7\u30ea\u30671\u3064\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067OK\uff08\u3089\u3057\u3044\uff09\n- getDB()\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u306a\u3051\u308c\u3070\u52dd\u624b\u306b\u751f\u6210\u3055\u308c\u308b\n\n\u8a73\u3057\u304f\u306f[Getting Started with Java Driver](http://docs.mongodb.org/ecosystem/tutorial/getting-started-with-java-driver/#getting-started-with-java-driver)\u53c2\u7167\u3002\n\n##\u8a8d\u8a3c\n\u30bb\u30ad\u30e5\u30a2\u30e2\u30fc\u30c9\uff08\u6ce8\uff1a[Security Tutorials \u2014 MongoDB Manual 2.6.3](http://docs.mongodb.org/manual/administration/security/)\uff09\u3067\u8d77\u52d5\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u8a8d\u8a3c\u304c\u5fc5\u8981\u3002\n\n```java\nMongoClient mongoClient = new MongoClient();\nDB db = mongoClient.getDB(\"mydb\");\nboolean auth = db.authenticate(myUserName, myPassword);\n```\n\n##\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u4e00\u89a7\u53d6\u5f97\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u5185\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u4e00\u89a7\u3092\u53d6\u5f97\n\n```java\nSet<String> colls = db.getCollectionNames();\n\nfor (String s : colls) {\n    System.out.println(s);\n}\n\n```\n\n##\u6307\u5b9a\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u53d6\u5f97\n\u53d6\u5f97\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066CRUD\u7b49\u306e\u64cd\u4f5c\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java\nDBCollection coll = db.getCollection(\"testCollection\");\n```\n\n\n##\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306eInsert\n\u53d6\u5f97\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30a4\u30f3\u30b5\u30fc\u30c8\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u69cb\u9020\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30a4\u30f3\u30b5\u30fc\u30c8\u3059\u308b\u5834\u5408\u3001\n\n```JSON\n{\n   \"name\" : \"MongoDB\",\n   \"type\" : \"database\",\n   \"count\" : 1,\n   \"info\" : {\n               \"x\" : 203,\n               \"y\" : 102\n             }\n}\n```\n\nJava\u306e\u30bd\u30fc\u30b9\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\nBasicDBObject doc = new BasicDBObject(\"name\", \"MongoDB\")\n        .append(\"type\", \"database\")\n        .append(\"count\", 1)\n        .append(\"info\", new BasicDBObject(\"x\", 203).append(\"y\", 102));\ncoll.insert(doc);\n```\n\n[BasicDBObject](http://api.mongodb.org/java/current/com/mongodb/BasicDBObject.html) \u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u305d\u306e\u5f8c\u3001\u30a4\u30f3\u30b5\u30fc\u30c8\u5bfe\u8c61\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e```insert()```\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3059\u3002\n\u304c\u3001\u306f\u3063\u304d\u308a\u3044\u3063\u3066DBObject\u3092\u4f5c\u308b\u306e\u304c\u3068\u3066\u3082\u3081\u3093\u3069\u304f\u3055\u3044\u3002\u3002\n\nJSON\u6587\u5b57\u5217\u304b\u3089DBObject\u3092\u3064\u304f\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```java\nDBObject json = (DBObject) JSON.parse(\"{'name':'mkyong', 'age':30}\");\ncoll.insert(json);\n```\n\n\n##\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u691c\u7d22\n###1\u4ef6\u76ee\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u691c\u7d22\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304b\u30891\u4ef6\u3060\u3051\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```java\nDBObject myDoc = coll.findOne();\nSystem.out.println(myDoc);\n```\n\n###\u30ab\u30fc\u30bd\u30eb\u3092\u4f7f\u3063\u3066\u5168\u3066\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304b\u3089\u5168\u3066\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f```find()```\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n```find()```\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001\u30af\u30a8\u30ea\u306b\u4e00\u81f4\u3057\u305f\u5168\u3066\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n\n```java\nDBCursor cursor = coll.find();\ntry {\n   while(cursor.hasNext()) {\n       System.out.println(cursor.next());\n   }\n} finally {\n   cursor.close();\n}\n```\n\n\n###\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4ef6\u6570\u3092\u53d6\u5f97\u3059\u308b\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u4f55\u4ef6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u308b\u304b\u8abf\u3079\u308b\u306b\u306f```getCount()```\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n```java\nlong count = coll.getCount();\nSystem.out.println(count + \"\u4ef6\");\n```\n\n###\u30af\u30a8\u30ea\u3092\u4f7f\u3063\u30661\u4ef6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\n\n```java\nBasicDBObject query = new BasicDBObject(\"i\", 71);\n\ncursor = coll.find(query);\n\ntry {\n   while(cursor.hasNext()) {\n       System.out.println(cursor.next());\n   }\n} finally {\n   cursor.close();\n}\n```\n\n###$\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u4f7f\u3063\u305f\u30af\u30a8\u30ea\u3067\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u691c\u7d22\u3059\u308b\nMongoDB\u3067\u306f\u30af\u30a8\u30ea\u306b$\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u5229\u7528\u3057\u3066\u691c\u7d22\u3084\u96c6\u8a08\u7b49\u304c\u884c\u3048\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\"qty\"\u30d5\u30a3\u30fc\u30eb\u30c9\u304c20\u3067\u306a\u3044\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u691c\u7d22\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\n\n```\ndb.inventory.find( { qty: { $ne: 20 } } )\n```\n\n\u30aa\u30da\u30ec\u30fc\u30bf\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u306f[Operators \u2014 MongoDB Manual 2.6.3](http://docs.mongodb.org/manual/reference/operator/) \u53c2\u7167\u3002\n\n$\u30aa\u30da\u30ec\u30fc\u30bf\u306fDBObject\u306b\u3001\u901a\u5e38\u306eString\u30ad\u30fc\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```java\nquery = new BasicDBObject(\"name\",                                   \n\t\tnew BasicDBObject(\"$ne\", \"mkyong\")).append(\"count\",         \n\t\tnew BasicDBObject(\"$gt\", 1));                               \ncursor = coll.find(query);                                          \ntry {                                                               \n\twhile (cursor.hasNext()) {                                      \n\t\tSystem.out.println(\"use $ operrator -> \" + cursor.next());  \n\t}                                                               \n} finally {                                                         \n\tcursor.close();                                                 \n}                                                                   \n```\n\n\u3067\u3082\u3001DBObject\u3092\u751f\u6210\u3059\u308b\u306e\u306f\u3084\u3063\u3071\u308a\u9762\u5012\u306a\u306e\u3067\u3001JSON\u304b\u3089\u30af\u30a8\u30ea\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```java\njson = (DBObject) JSON                                              \n\t\t.parse(\"{'name':{$ne:'mkyong'}, 'count':{$gt:1}}\");         \ncursor = coll.find(json);                                           \ntry {                                                               \n\twhile (cursor.hasNext()) {                                      \n\t\tSystem.out.println(\"use $ ope(JSON) -> \" + cursor.next());  \n\t}                                                               \n} finally {                                                         \n\tcursor.close();                                                 \n}                                                                   \n                                                                    \ncoll.remove(new BasicDBObject());                                   \n```\n\n##\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8Update\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u66f4\u65b0\u3059\u308b\u306b\u306f\u3001\u66f4\u65b0\u5bfe\u8c61\u306eDBObject\u3092\u53d6\u5f97\u3057\u3066\u66f8\u304d\u63db\u3048\u3001```save()```\u30e1\u30bd\u30c3\u30c9\u3067\u66f4\u65b0\u3057\u307e\u3059\u3002\n\u3053\u306e\u3068\u304d\u3001_id\u306f\u5909\u66f4\u3057\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002DBObject\u306e_id\u304c\u4e00\u81f4\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u4e0a\u66f8\u304d\u3055\u308c\u308b\u304b\u3089\u3067\u3059\u3002\n\n```java\ndoc = coll.findOne();                              \ndoc.put(\"name\", \"MongoDB2\"); // name\u5c5e\u6027\u3092\u66f4\u65b0       \ndoc.put(\"age\", \"15\");        // age\u5c5e\u6027\u3092\u8ffd\u52a0        \ncoll.save(doc);                                    \n```\n\n##\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8Delete\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u524a\u9664\u3059\u308b\u306b\u306f\u3001\u524a\u9664\u5bfe\u8c61\u306eDBObject\u3092\u53d6\u5f97\u3057\u3066\u3001```remove()```\u30e1\u30bd\u30c3\u30c9\u3067\u524a\u9664\u3057\u307e\u3059\u3002\n\n```java\ndoc = coll.findOne();\ncoll.remove(doc);\n```\n\n##\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u524a\u9664\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u524a\u9664\u3059\u308b\u5834\u5408```drop()```\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n```java\nSystem.out.println(db.getCollectionNames()); \ncoll.drop();                                           \nSystem.out.println(db.getCollectionNames()); \n```\n\n##\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u4e0a\u8a18\u306e\u51e6\u7406\u307e\u3068\u3081\u3002\uff08\u8a8d\u8a3c\u7121\u3057\uff09\n\n```java\nMongoClient client = null;                                               \n                                                                         \ntry {                                                                    \n\t// MondoDB\u30b5\u30fc\u30d0\u3078\u306e\u63a5\u7d9a                                                    \n\tclient = new MongoClient(\"localhost\", 27017);                        \n\t// client = new MongoClient();                                       \n\t// \u4f7f\u7528\u3059\u308bDB\u306e\u6307\u5b9a                                                         \n\tDB db = client.getDB(\"mydb\");                                        \n                                                                         \n\tDBCollection coll = db.getCollection(\"testCollection\");              \n                                                                         \n\t// Insert(append\u7248)                                                   \n\tDBObject doc = new BasicDBObject(\"name\", \"MongoDB\")                  \n\t\t\t.append(\"type\", \"database\")                                  \n\t\t\t.append(\"count\", 1)                                          \n\t\t\t.append(\"info\",                                              \n\t\t\t\t\tnew BasicDBObject(\"x\", 203).append(\"y\", 102));       \n\tcoll.insert(doc);                                                    \n                                                                         \n\tdoc = new BasicDBObject(\"name\", \"MongoDB\")                           \n\t\t\t.append(\"type\", \"database\")                                  \n\t\t\t.append(\"count\", 2)                                          \n\t\t\t.append(\"info\",                                              \n\t\t\t\t\tnew BasicDBObject(\"x\", 400).append(\"y\", -10));       \n\tcoll.insert(doc);                                                    \n                                                                         \n\t// Insert(JSON\u7248)                                                     \n\tDBObject json = (DBObject) JSON                                      \n\t\t\t.parse(\"{'name':'mkyong', 'age':30}\");                       \n\tcoll.insert(json);                                                   \n                                                                         \n\t// 1\u4ef6\u3060\u3051\u691c\u7d22                                                            \n\tDBObject myDoc = coll.findOne();                                     \n\tSystem.out.println(\"findOne() -> \" + myDoc);                         \n                                                                         \n\t// \u30ab\u30fc\u30bd\u30eb\u3092\u4f7f\u3063\u3066\u5168\u4ef6\u53d6\u5f97                                                      \n\tDBCursor cursor = coll.find();                                       \n\ttry {                                                                \n\t\twhile (cursor.hasNext()) {                                       \n\t\t\tSystem.out.println(\"DBCursor - > \" + cursor.next());         \n\t\t}                                                                \n\t} finally {                                                          \n\t\tcursor.close();                                                  \n\t}                                                                    \n                                                                         \n\t// \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4ef6\u6570\u53d6\u5f97                                                        \n\tlong count = coll.getCount();                                        \n\tSystem.out.println(count + \"\u4ef6\");                                     \n                                                                         \n\t// \u30af\u30a8\u30ea\u3092\u4f7f\u3063\u30661\u4ef6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b                                             \n\tBasicDBObject query = new BasicDBObject(\"name\", \"MongoDB\");          \n\tcursor = coll.find(query);                                           \n\ttry {                                                                \n\t\twhile (cursor.hasNext()) {                                       \n\t\t\tSystem.out.println(\"use query -> \" + cursor.next());         \n\t\t}                                                                \n\t} finally {                                                          \n\t\tcursor.close();                                                  \n\t}                                                                    \n                                                                         \n\t// $\u30aa\u30da\u30ec\u30fc\u30bf\u3092\u4f7f\u3063\u305f\u30af\u30a8\u30ea                                                     \n\tquery = new BasicDBObject(\"name\",                                    \n\t\t\tnew BasicDBObject(\"$ne\", \"mkyong\")).append(\"count\",          \n\t\t\tnew BasicDBObject(\"$gt\", 1));                                \n\tcursor = coll.find(query);                                           \n\ttry {                                                                \n\t\twhile (cursor.hasNext()) {                                       \n\t\t\tSystem.out.println(\"use $ operator -> \" + cursor.next());    \n\t\t}                                                                \n\t} finally {                                                          \n\t\tcursor.close();                                                  \n\t}                                                                    \n                                                                         \n\t// JSON\u304b\u3089\u30af\u30a8\u30ea\u3092\u751f\u6210                                                      \n\tjson = (DBObject) JSON                                               \n\t\t\t.parse(\"{'name':{$ne:'mkyong'}, 'count':{$gt:1}}\");          \n\tcursor = coll.find(json);                                            \n\ttry {                                                                \n\t\twhile (cursor.hasNext()) {                                       \n\t\t\tSystem.out.println(\"use $ ope(JSON) -> \" + cursor.next());   \n\t\t}                                                                \n\t} finally {                                                          \n\t\tcursor.close();                                                  \n\t}                                                                    \n\t                                                                     \n\t// \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8                                                     \n\tdoc = coll.findOne();                                                \n\tdoc.put(\"name\", \"MongoDB2\");\t// name\u5c5e\u6027\u3092\u66f4\u65b0                         \n\tdoc.put(\"age\", \"15\"); \t\t\t// age\u5c5e\u6027\u3092\u8ffd\u52a0                          \n\tcoll.save(doc);                                                      \n\tcursor = coll.find();                                                \n\ttry {                                                                \n\t\twhile (cursor.hasNext()) {                                       \n\t\t\tSystem.out.println(\"updated -> \" + cursor.next());           \n\t\t}                                                                \n\t} finally {                                                          \n\t\tcursor.close();                                                  \n\t}                                                                    \n\t                                                                     \n\t// \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u524a\u9664                                                         \n\tdoc = coll.findOne();                                                \n\tcoll.remove(doc);                                                    \n\tcursor = coll.find();                                                \n\ttry {                                                                \n\t\twhile (cursor.hasNext()) {                                       \n\t\t\tSystem.out.println(\"deleted -> \" + cursor.next());           \n\t\t}                                                                \n\t} finally {                                                          \n\t\tcursor.close();                                                  \n\t}                                                                    \n                                                                         \n\t// \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u524a\u9664                                                          \n\tSystem.out.println(\"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u524a\u9664\u524d: \" + db.getCollectionNames());         \n\tcoll.drop();                                                         \n\tSystem.out.println(\"\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u524a\u9664\u5f8c: \" + db.getCollectionNames());         \n                                                                         \n\tcoll.remove(new BasicDBObject());                                    \n                                                                         \n} catch (UnknownHostException e) {                                       \n\t// TODO Auto-generated catch block                                   \n\te.printStackTrace();                                                 \n} finally {                                                              \n\tif (client != null) {                                                \n\t\tclient.close();                                                  \n\t}                                                                    \n}                                                                        \n```\n\n#\u305d\u306e\u4ed6\u3001\u6c17\u306b\u306a\u3063\u305f\u3053\u3068\n\u4e0a\u8a18\u4ee5\u5916\u306b\u6c17\u306b\u306a\u3063\u3066\u8abf\u3079\u305f\u3053\u3068\u306e\u30e1\u30e2\u3002\n##\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\nMongoDB\u306b\u306f\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u306a\u304f\u5f8c\u52dd\u3061\u306a\u306e\u3067\u3001\u697d\u89b3\u30ed\u30c3\u30af\u3067\u6392\u4ed6\u5236\u5fa1\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n[\uff084/4\uff09\u89e6\u3063\u3066\u307f\u3088\u3046\uff01\u30d3\u30c3\u30b0\u30c7\u30fc\u30bf\u3092\u652f\u3048\u308b\u30af\u30e9\u30a6\u30c9\u6280\u8853 - MongoDB\u3092\u8a66\u3057\u3066\u307f\u3088\u3046\uff1aITpro](http://itpro.nikkeibp.co.jp/article/COLUMN/20120306/384811/?ST=bigdata&P=4)\u53c2\u7167\n>\uff081\uff09\u30af\u30a8\u30ea\u30fc\u306b\u3088\u308a\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53d6\u308a\u51fa\u3059\u3002\n\uff082\uff09\u53e4\u3044\u5024\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304f\n\uff083\uff09\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u66f4\u65b0\n\uff084\uff09\u53e4\u3044\u5024\uff08_id\u3092\u542b\u3080\uff09\u3092\u7b2c1\u5f15\u6570\u306b\u3001\u65b0\u3057\u3044\u66f4\u65b0\u3057\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u7b2c2\u5f15\u6570\u306b\u6307\u5b9a\u3057\u3066\u3001update\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u66f8\u304d\u63db\u308f\u3063\u3066\u3044\u305f\u3089update\u304c\u5931\u6557\u3059\u308b\n\uff085\uff09 update\u304c\u5931\u6557\u3057\u305f\u3089\u3001\u307e\u305f\uff081\uff09\u304b\u3089\u3084\u308a\u76f4\u3059\u3002\n\n\u3060\u305d\u3046\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u4e00\u9023\u306e\u64cd\u4f5c\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u3066\u3082\u305d\u306e\u524d\u306e\u51e6\u7406\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u304d\u307e\u305b\u3093\u3002\n```db.getLastError();```\u30e1\u30bd\u30c3\u30c9\u3067\u6700\u5f8c\u306b\u8d77\u3053\u3063\u305f\u30a8\u30e9\u30fc\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n\n##save()\u3068insert()\u3001update()\u306e\u9055\u3044\nsave()\u30e1\u30bd\u30c3\u30c9\u3068\u3001insert()\u3001update()\u30e1\u30bd\u30c3\u30c9\u304c\u51fa\u3066\u304d\u3066\u4f7f\u3044\u5206\u3051\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u3002\n\u8a73\u7d30\u306fjavadoc\u53c2\u7167\u3002\uff08[DBCollection](http://api.mongodb.org/java/current/com/mongodb/DBCollection.html#update(com.mongodb.DBObject, com.mongodb.DBObject, boolean, boolean))\uff09\n\n|  | save() | insert() | update() |\n|:-----------|:-----------|:------------|:------------|\n| \u66f4\u65b0\u3067\u304d\u308b\u4ef6\u6570 | 1\u4ef6 | 1\u4ef6\u4ee5\u4e0a | 1\u4ef6\u4ee5\u4e0a(*1) |\n| \u5bfe\u8c61\u306e\u6307\u5b9a | \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 | \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 | \u30af\u30a8\u30ea |\n| \u5bfe\u8c61\u30ec\u30b3\u30fc\u30c9\u306e\u6709\u7121\u7b49 | _id\u304c\u7121\u3051\u308c\u3070Insert\u3001\u3042\u308c\u3070Upsert | - | \u6307\u5b9a\u3057\u305f\u30af\u30a8\u30ea\u3092\u767a\u884c\u3057\u305f\u6642\u70b9\u3067\u53d6\u5f97\u3055\u308c\u308b_id\u306b\u5bfe\u5fdc\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3001Update\u5b9f\u884c\u6642\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u7121\u3044\u5834\u5408\u306f\u66f4\u65b0\u5931\u6557*2 |\n\n\n*1:updateMulti()\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3059\u308b\u304b\u3001update()\u30e1\u30bd\u30c3\u30c9\u306e\u7b2c4\u5f15\u6570\u306btrue\u30bb\u30c3\u30c8\u3067\u8907\u6570\u4ef6\u66f4\u65b0\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u6700\u521d\u306e1\u4ef6\u3060\u3051\u66f4\u65b0\u3002\n*2:update()\u30e1\u30bd\u30c3\u30c9\u306e\u7b2c3\u5f15\u6570\u3092true\u306b\u8a2d\u5b9a\u3059\u308b\u3068Upsert\u3055\u308c\u308b\n\n##Bulk\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\n- \u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u64cd\u4f5c\u3059\u308b\u5834\u5408\u306fBulk\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u3068\u901f\u3044\u3089\u3057\u3044\n- insert/update/remove\u304c\u4e00\u62ec\u3067\u51e6\u7406\u3067\u304d\u308b\n- Bukl\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u306f2\u7a2e\u985e\u3042\u308b\n - Ordered bulk operation\uff1a\u9806\u5e8f\u3092\u4fdd\u8a3c\n - Unordered bulk operations\uff1a\u9806\u5e8f\u3092\u4fdd\u8a3c\u3057\u306a\u3044\uff08\u4e26\u884c\u51e6\u7406\uff09\n\nStatement\u306eaddBatch()\u3001executeBatch()\u3063\u307d\u3044\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n```java\n// 1. Ordered bulk operation\nBulkWriteOperation builder = coll.initializeOrderedBulkOperation();\nbuilder.insert(new BasicDBObject(\"_id\", 1));\nbuilder.insert(new BasicDBObject(\"_id\", 2));\nbuilder.insert(new BasicDBObject(\"_id\", 3));\n\nbuilder.find(new BasicDBObject(\"_id\", 1)).updateOne(new BasicDBObject(\"$set\", new BasicDBObject(\"x\", 2)));\nbuilder.find(new BasicDBObject(\"_id\", 2)).removeOne();\nbuilder.find(new BasicDBObject(\"_id\", 3)).replaceOne(new BasicDBObject(\"_id\", 3).append(\"x\", 4));\n\nBulkWriteResult result = builder.execute();\n\n// 2. Unordered bulk operation - no guarantee of order of operation\nbuilder = coll.initializeUnorderedBulkOperation();\nbuilder.find(new BasicDBObject(\"_id\", 1)).removeOne();\nbuilder.find(new BasicDBObject(\"_id\", 2)).removeOne();\n\nresult = builder.execute();\n```\n\n", "tags": ["MongoDB", "gradle", "Java"]}