{"context": "% erl\nErlang/OTP 19 [erts-8.1] [source] [64-bit] [smp:4:4] [async-threads:10] [kernel-poll:false]\n\nEshell V8.1  (abort with ^G)\n\n%% 1) \u307e\u305a\u30d7\u30ed\u30bb\u30b9\u6570\u3092\u8abf\u3079\u308b\n1> Before = processes().\n2> length(Before).\n26\n\n%% 2) \u6b21\u306b\u8abf\u3079\u305f\u3044\u51e6\u7406\u3092\u3059\u308b\uff08\u901a\u5e38\u306f\u3082\u3063\u3068\u8907\u96d1\u306a\u51e6\u7406\uff09\n3> Loop = fun(F) -> timer:sleep(100), F(F) end.\n4> LeakPid = spawn(fun() -> Loop(Loop) end).\n<0.62.0>\n\n%% 3) \u3082\u3046\u4e00\u5ea6\u30d7\u30ed\u30bb\u30b9\u6570\u3092\u8abf\u3079\u308b\n5> After = processes().\n6> length(After).\n27\n\n%% 4) 2\u56de\u8abf\u3079\u305f\u30d7\u30ed\u30bb\u30b9\u6570\u306e\u5dee\u5206\u3092\u53d6\u308b\n7> Delta = After -- Before.\n[<0.62.0>]\n\n%% 5) \u8a73\u7d30\u3092\u898b\u308b\n8> [{Pid, erlang:process_info(Pid)} || Pid <- Delta].\n[{<0.62.0>,\n  [{current_function,{timer,sleep,1}},\n   {initial_call,{erlang,apply,2}},\n   {status,waiting},\n   {message_queue_len,0},\n   {messages,[]},\n   {links,[]},\n   {dictionary,[]},\n   {trap_exit,false},\n   {error_handler,error_handler},\n   {priority,normal},\n   {group_leader,<0.50.0>},\n   {total_heap_size,1363},\n   {heap_size,987},\n   {stack_size,10},\n   {reductions,6574},\n   {garbage_collection,[{max_heap_size,#{error_logger => true,\n                                         kill => true,\n                                         size => 0}},\n                        {min_bin_vheap_size,46422},\n                        {min_heap_size,233},\n                        {fullsweep_after,65535},\n                        {minor_gcs,20}]},\n   {suspending,[]}]}]                     \n\n```erlang\n% erl\nErlang/OTP 19 [erts-8.1] [source] [64-bit] [smp:4:4] [async-threads:10] [kernel-poll:false]\n\nEshell V8.1  (abort with ^G)\n\n%% 1) \u307e\u305a\u30d7\u30ed\u30bb\u30b9\u6570\u3092\u8abf\u3079\u308b\n1> Before = processes().\n2> length(Before).\n26\n\n%% 2) \u6b21\u306b\u8abf\u3079\u305f\u3044\u51e6\u7406\u3092\u3059\u308b\uff08\u901a\u5e38\u306f\u3082\u3063\u3068\u8907\u96d1\u306a\u51e6\u7406\uff09\n3> Loop = fun(F) -> timer:sleep(100), F(F) end.\n4> LeakPid = spawn(fun() -> Loop(Loop) end).\n<0.62.0>\n\n%% 3) \u3082\u3046\u4e00\u5ea6\u30d7\u30ed\u30bb\u30b9\u6570\u3092\u8abf\u3079\u308b\n5> After = processes().\n6> length(After).\n27\n\n%% 4) 2\u56de\u8abf\u3079\u305f\u30d7\u30ed\u30bb\u30b9\u6570\u306e\u5dee\u5206\u3092\u53d6\u308b\n7> Delta = After -- Before.\n[<0.62.0>]\n\n%% 5) \u8a73\u7d30\u3092\u898b\u308b\n8> [{Pid, erlang:process_info(Pid)} || Pid <- Delta].\n[{<0.62.0>,\n  [{current_function,{timer,sleep,1}},\n   {initial_call,{erlang,apply,2}},\n   {status,waiting},\n   {message_queue_len,0},\n   {messages,[]},\n   {links,[]},\n   {dictionary,[]},\n   {trap_exit,false},\n   {error_handler,error_handler},\n   {priority,normal},\n   {group_leader,<0.50.0>},\n   {total_heap_size,1363},\n   {heap_size,987},\n   {stack_size,10},\n   {reductions,6574},\n   {garbage_collection,[{max_heap_size,#{error_logger => true,\n                                         kill => true,\n                                         size => 0}},\n                        {min_bin_vheap_size,46422},\n                        {min_heap_size,233},\n                        {fullsweep_after,65535},\n                        {minor_gcs,20}]},\n   {suspending,[]}]}]                     \n```\n", "tags": ["Erlang"]}