{"context": " More than 1 year has passed since last update.\n\n\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30af\u30e9\u30b9\u3092\u9069\u5f53\u306a\u5185\u5bb9\u3067\u5b9a\u7fa9\n\n\nPython3\nclass Person:\n    count = 0\n    alive_person_name_list = []\n\n    def __init__(self, name):\n        from datetime import datetime as dt\n        if str(name) in Person.alive_person_name_list:\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\n\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\n            print(message_string_1)\n            pass\n        else:\n            Person.count += 1\n            Person.alive_person_name_list.append(str(name))\n            self.name=str(name)\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\n            print(message_string_2)\n\n\n    def __str__(self):\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\u3000\uff1a\\n\\\n---\u540d\u524d: {name_property}\\n\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\n        return instance_info_text\n\n    def get_name(self):\n        return self.name\n\n    def get_birthday(self):\n        return self.create_time\n\n    def set_name(self, new_name):\n        self.name=str(new_name)\n\n\n\nPython\u306b\u304a\u3051\u308b\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u306f\u3001object\u30af\u30e9\u30b9 \u3092\u89aa\u30af\u30e9\u30b9\u306b\u3082\u3064\u3053\u3068\u3092\u78ba\u8a8d\n\n\nPython3\nissubclass(Person, object)\n\n\nTrue\n\nobject\u30af\u30e9\u30b9\u306f\u3001Person\u30af\u30e9\u30b9 \u3092\u89aa\u306b\u6301\u305f\u306a\u3044\u306e\u3067\u3001False \u306b\u306a\u308b\n\nPython3\nissubclass(object, Person)\n\n\nFalse\n\n\nPerson\u30af\u30e9\u30b9\u306f\u3001object\u30af\u30e9\u30b9\u4ee5\u5916\u306b\u89aa\u30af\u30e9\u30b9\u3092\u6301\u3064\u306e\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\n\n\nPython3\nPerson.mro()\n\n\nobject \u30af\u30e9\u30b9\u3060\u3051\uff1f\u306e\u3088\u3046\u3067\u3059\u3002\n[__main__.Person, object]\n\n\ndir(\u30af\u30e9\u30b9\u540d)\u3067\u3001\u30af\u30e9\u30b9\u306e\u30b9\u30b3\u30fc\u30d7\u5185\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u5909\u6570\u306e\u4e00\u89a7\u3092\u53d6\u5f97\n\n\nPython3\ndir(Person)\n\n\n['__class__',\n '__delattr__',\n '__dict__',\n '__dir__',\n '__doc__',\n '__eq__',\n '__format__',\n '__ge__',\n '__getattribute__',\n '__gt__',\n '__hash__',\n '__init__',\n '__le__',\n '__lt__',\n '__module__',\n '__ne__',\n '__new__',\n '__reduce__',\n '__reduce_ex__',\n '__repr__',\n '__setattr__',\n '__sizeof__',\n '__str__',\n '__subclasshook__',\n '__weakref__',\n 'alive_person_name_list',\n 'count',\n 'get_birthday',\n 'get_name',\n 'set_name']\n\n\nPython3\ndir(object)\n\n\n['__class__',\n '__delattr__',\n '__dir__',\n '__doc__',\n '__eq__',\n '__format__',\n '__ge__',\n '__getattribute__',\n '__gt__',\n '__hash__',\n '__init__',\n '__le__',\n '__lt__',\n '__ne__',\n '__new__',\n '__reduce__',\n '__reduce_ex__',\n '__repr__',\n '__setattr__',\n '__sizeof__',\n '__str__',\n '__subclasshook__']\n\n\nobject\u30af\u30e9\u30b9\u306b\u52a0\u3048\u3066\u3001Person\u30af\u30e9\u30b9\u3067\u4ed8\u3051\u52a0\u3048\u3089\u308c\u305f\u5909\u6570\u306e\u4e00\u89a7\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\n\n\nPerson\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\u5909\u6570\u30ea\u30b9\u30c8\u3068\u3001object\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\u5909\u6570\u30ea\u30b9\u30c8\u3092\u305d\u308c\u305e\u308c set\u578b\u306b\u578b\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u3001set.difference()\u30e1\u30bd\u30c3\u30c9\u3067\u3001\u5909\u6570\u30ea\u30b9\u30c8\u306e\u5dee\u5206\u3092\u78ba\u8a8d\n\n\nPython3\nobject_class_member_set = set(dir(object))\nperson_class_member_set = set(dir(Person))\nperson_class_member_set.difference(object_class_member_set)\n\n\n\u4ee5\u4e0b\u304c\u3001Person\u30af\u30e9\u30b9 \u304cobject\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u4e0a\u3067\u3001\u8ffd\u52a0\u5b9a\u7fa9\u3057\u305f\u5909\u6570\u306e\u30ea\u30b9\u30c8\n{'__dict__',\n '__module__',\n '__weakref__',\n 'alive_person_name_list',\n 'count',\n 'get_birthday',\n 'get_name',\n 'set_name'}\n\n\n\u3042\u308c\uff1f 'weakref_' \u3063\u3066\u4f55\uff1f_\n\n Python \u00bb   Documentation \u00bb Python \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea \u00bb 8. \u30c7\u30fc\u30bf\u578b \u00bb 8.8. weakref \u2014 \u5f31\u53c2\u7167\n\n\nweakref \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001Python\u30d7\u30ed\u30b0\u30e9\u30de\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u5f31\u53c2\u7167 (weak refarence)\u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u3067\u306f\u3001\u7528\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30c8(referent) \u306f\u5f31\u53c2\u7167\u304c\u53c2\u7167\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u5f31\u53c2\u7167\u306f\u5bfe\u8c61\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u304b\u3057\u3066\u304a\u304f\u306e\u306b\u306f\u4e0d\u5341\u5206\u3067\u3059: \u30ea\u30d5\u30a1\u30ec\u30f3\u30c8\u3078\u306e\u53c2\u7167\u304c\u5f31\u53c2\u7167\u3057\u304b\u6b8b\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u3001 garbage collection \u306f\u30ea\u30d5\u30a1\u30ec\u30f3\u30c8\u3092\u81ea\u7531\u306b\u7834\u68c4\u3057\u3001\u4ed6\u306e\u4f55\u304b\u306b\u30e1\u30e2\u30ea\u3092\u518d\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u305f\u3068\u3048\u5f37\u53c2\u7167\u3067\u53c2\u7167\u3055\u308c\u3066\u3044\u306a\u304f\u3066\u3082\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u5b9f\u969b\u306b\u7834\u68c4\u3055\u308c\u308b\u307e\u3067\u306f\u5f31\u53c2\u7167\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u5f31\u53c2\u7167\u306e\u4e3b\u306a\u4f7f\u7528\u6cd5\u306f\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3084\u5de8\u5927\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u6301\u3059\u308b\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u5b9f\u88c5\u3067\u3059\u3002\u3053\u3053\u3067\u306e\u5de8\u5927\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u3084\u30de\u30c3\u30d4\u30f3\u30b0\u306b\u5b58\u5728\u3059\u308b\u305f\u3081\u3001\u5358\u72ec\u3067\u306f\u751f\u304d\u7d9a\u3051\u306a\u3044\u3053\u3068\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\n\n\n[python]weakref(\u5f31\u53c2\u7167)\u30e2\u30b8\u30e5\u30fc\u30eb\n\n\n\n\u3010 \u53c2\u8003 \u3011\n\n\nLIFE WITH PYTHON \uff082014/08/19\uff09 \u300cPython Tips\uff1a\u30af\u30e9\u30b9\u306e\u7d99\u627f\u95a2\u4fc2\u3092\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3044\u300d\nHatena::Group::Python \u30d0\u30ea\u30b1\u30f3\u306ePython\u65e5\u8a18 \uff082008/08/11\uff09 \u300c[Python] dir()\u95a2\u6570\u300d\nPython Snippets \uff082012/10/02\uff09 \u300c\u91cd\u8907\u306e\u306a\u3044\u96c6\u5408set\u300d\n\n\n####__\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30af\u30e9\u30b9\u3092\u9069\u5f53\u306a\u5185\u5bb9\u3067\u5b9a\u7fa9__\n\n```{Python3:Python3}\nclass Person:\n    count = 0\n    alive_person_name_list = []\n\n    def __init__(self, name):\n        from datetime import datetime as dt\n        if str(name) in Person.alive_person_name_list:\n            message_string_1 = \"\u540c\u3058\u540d\u524d\u306e\u4eba\u304c\u3059\u3067\u306b\u3044\u307e\u3059\u3002\\n\\\u5225\u306e\u540d\u524d\u3092\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"\n            print(message_string_1)\n            pass\n        else:\n            Person.count += 1\n            Person.alive_person_name_list.append(str(name))\n            self.name=str(name)\n            self.create_time=dt.now().strftime(\"%Y/%m/%d %H:%M:%S\")\n            message_string_2 = \"\u65b0\u3057\u3044\u4eba\u7269\u304c\u751f\u307e\u308c\u307e\u3057\u305f\u3002\\n\uff08 \u540d\u524d \uff09{name_property}\".format(name_property=self.name)\n            print(message_string_2)\n\n\n    def __str__(self):\n        instance_info_text = \"\"\"\u3053\u306e\u4eba\u7269\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6982\u8981\u3000\uff1a\\n\\\n---\u540d\u524d: {name_property}\\n\\\n---\u8a95\u751f\u6642\u523b:  + {birth_timestamp_property}\\n\"\"\".format(name_property=self.name, birth_timestamp_property=self.create_time)\n        return instance_info_text\n\n    def get_name(self):\n        return self.name\n\n    def get_birthday(self):\n        return self.create_time\n\n    def set_name(self, new_name):\n        self.name=str(new_name)\n```\n\n\n####__Python\u306b\u304a\u3051\u308b\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u306f\u3001object\u30af\u30e9\u30b9 \u3092\u89aa\u30af\u30e9\u30b9\u306b\u3082\u3064\u3053\u3068\u3092\u78ba\u8a8d__\n\n```{Python3:Python3}\nissubclass(Person, object)\n```\n\n```\nTrue\n```\n\n__object\u30af\u30e9\u30b9\u306f\u3001Person\u30af\u30e9\u30b9 \u3092\u89aa\u306b\u6301\u305f\u306a\u3044\u306e\u3067\u3001False \u306b\u306a\u308b__\n\n```{Python3:Python3}\nissubclass(object, Person)\n```\n\n```\nFalse\n```\n\n####__Person\u30af\u30e9\u30b9\u306f\u3001object\u30af\u30e9\u30b9\u4ee5\u5916\u306b\u89aa\u30af\u30e9\u30b9\u3092\u6301\u3064\u306e\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d__\n\n```{Python3:Python3}\nPerson.mro()\n```\n\n__object \u30af\u30e9\u30b9\u3060\u3051\uff1f\u306e\u3088\u3046\u3067\u3059\u3002__\n\n```\n[__main__.Person, object]\n```\n\n###__dir(\u30af\u30e9\u30b9\u540d)\u3067\u3001\u30af\u30e9\u30b9\u306e\u30b9\u30b3\u30fc\u30d7\u5185\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u5909\u6570\u306e\u4e00\u89a7\u3092\u53d6\u5f97__\n\n```{Python3:Python3}\ndir(Person)\n```\n\n```\n['__class__',\n '__delattr__',\n '__dict__',\n '__dir__',\n '__doc__',\n '__eq__',\n '__format__',\n '__ge__',\n '__getattribute__',\n '__gt__',\n '__hash__',\n '__init__',\n '__le__',\n '__lt__',\n '__module__',\n '__ne__',\n '__new__',\n '__reduce__',\n '__reduce_ex__',\n '__repr__',\n '__setattr__',\n '__sizeof__',\n '__str__',\n '__subclasshook__',\n '__weakref__',\n 'alive_person_name_list',\n 'count',\n 'get_birthday',\n 'get_name',\n 'set_name']\n ```\n\n```{Python3:Python3}\ndir(object)\n```\n\n```\n['__class__',\n '__delattr__',\n '__dir__',\n '__doc__',\n '__eq__',\n '__format__',\n '__ge__',\n '__getattribute__',\n '__gt__',\n '__hash__',\n '__init__',\n '__le__',\n '__lt__',\n '__ne__',\n '__new__',\n '__reduce__',\n '__reduce_ex__',\n '__repr__',\n '__setattr__',\n '__sizeof__',\n '__str__',\n '__subclasshook__']\n```\n\n###__object\u30af\u30e9\u30b9\u306b\u52a0\u3048\u3066\u3001Person\u30af\u30e9\u30b9\u3067\u4ed8\u3051\u52a0\u3048\u3089\u308c\u305f\u5909\u6570\u306e\u4e00\u89a7\u30ea\u30b9\u30c8\u3092\u53d6\u5f97__\n####__Person\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\u5909\u6570\u30ea\u30b9\u30c8\u3068\u3001object\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\u5909\u6570\u30ea\u30b9\u30c8\u3092\u305d\u308c\u305e\u308c set\u578b\u306b\u578b\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u3001set.difference()\u30e1\u30bd\u30c3\u30c9\u3067\u3001\u5909\u6570\u30ea\u30b9\u30c8\u306e\u5dee\u5206\u3092\u78ba\u8a8d__\n\n\n```{Python3:Python3}\nobject_class_member_set = set(dir(object))\nperson_class_member_set = set(dir(Person))\nperson_class_member_set.difference(object_class_member_set)\n```\n\n__\u4ee5\u4e0b\u304c\u3001Person\u30af\u30e9\u30b9 \u304cobject\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u4e0a\u3067\u3001\u8ffd\u52a0\u5b9a\u7fa9\u3057\u305f\u5909\u6570\u306e\u30ea\u30b9\u30c8__\n\n```\n{'__dict__',\n '__module__',\n '__weakref__',\n 'alive_person_name_list',\n 'count',\n 'get_birthday',\n 'get_name',\n 'set_name'}\n```\n\n####__\u3042\u308c\uff1f '__weakref__' \u3063\u3066\u4f55\uff1f__\n\n* [ Python \u00bb   Documentation \u00bb Python \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea \u00bb 8. \u30c7\u30fc\u30bf\u578b \u00bb 8.8. weakref \u2014 \u5f31\u53c2\u7167](http://docs.python.jp/3/library/weakref.html)\n\n> weakref \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001Python\u30d7\u30ed\u30b0\u30e9\u30de\u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u5f31\u53c2\u7167 (weak refarence)\u3092\u4f5c\u6210\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n>\n>\u4ee5\u4e0b\u3067\u306f\u3001\u7528\u8a9e\u30ea\u30d5\u30a1\u30ec\u30f3\u30c8(referent) \u306f\u5f31\u53c2\u7167\u304c\u53c2\u7167\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n>\n>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u5f31\u53c2\u7167\u306f\u5bfe\u8c61\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u304b\u3057\u3066\u304a\u304f\u306e\u306b\u306f\u4e0d\u5341\u5206\u3067\u3059: \u30ea\u30d5\u30a1\u30ec\u30f3\u30c8\u3078\u306e\u53c2\u7167\u304c\u5f31\u53c2\u7167\u3057\u304b\u6b8b\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u3001 garbage collection \u306f\u30ea\u30d5\u30a1\u30ec\u30f3\u30c8\u3092\u81ea\u7531\u306b\u7834\u68c4\u3057\u3001\u4ed6\u306e\u4f55\u304b\u306b\u30e1\u30e2\u30ea\u3092\u518d\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u305f\u3068\u3048\u5f37\u53c2\u7167\u3067\u53c2\u7167\u3055\u308c\u3066\u3044\u306a\u304f\u3066\u3082\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u5b9f\u969b\u306b\u7834\u68c4\u3055\u308c\u308b\u307e\u3067\u306f\u5f31\u53c2\u7167\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\n>\n>\u5f31\u53c2\u7167\u306e\u4e3b\u306a\u4f7f\u7528\u6cd5\u306f\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3084\u5de8\u5927\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u6301\u3059\u308b\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u5b9f\u88c5\u3067\u3059\u3002\u3053\u3053\u3067\u306e\u5de8\u5927\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u3084\u30de\u30c3\u30d4\u30f3\u30b0\u306b\u5b58\u5728\u3059\u308b\u305f\u3081\u3001\u5358\u72ec\u3067\u306f\u751f\u304d\u7d9a\u3051\u306a\u3044\u3053\u3068\u304c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\n\n* [[python]weakref(\u5f31\u53c2\u7167)\u30e2\u30b8\u30e5\u30fc\u30eb](http://w.koshigoe.jp/study/?%5Bpython%5Dweakref(%BC%E5%BB%B2%BE%C8)%A5%E2%A5%B8%A5%E5%A1%BC%A5%EB)\n\n___\n\n##__\u3010 \u53c2\u8003 \u3011__\n\n* [LIFE WITH PYTHON \uff082014/08/19\uff09 \u300cPython Tips\uff1a\u30af\u30e9\u30b9\u306e\u7d99\u627f\u95a2\u4fc2\u3092\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3044\u300d](http://www.lifewithpython.com/2014/08/python-check-class-inheritance-relationship.html)\n* [Hatena::Group::Python \u30d0\u30ea\u30b1\u30f3\u306ePython\u65e5\u8a18 \uff082008/08/11\uff09 \u300c[Python] dir()\u95a2\u6570\u300d](https://python.g.hatena.ne.jp/muscovyduck/20080811/p1)\n* [Python Snippets \uff082012/10/02\uff09 \u300c\u91cd\u8907\u306e\u306a\u3044\u96c6\u5408set\u300d](http://python.civic-apps.com/set/)\n\n\n\n", "tags": ["Python", "python3", "\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411", "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"]}