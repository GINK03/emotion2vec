{"tags": ["Scala", "sbt", "AWS", "ElasticBeanstalk", "PlayFramework"], "context": " More than 1 year has passed since last update.\n\nBuild.scala \u3067 AWS Elastic Beanstalk \u306e Docker \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u308b\n\n\u6982\u8981\nScala + PlayFramework \u3067\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3001Elastic Beanstalk \u306e Docker \u74b0\u5883\u3067\u52d5\u304b\u3059\u305f\u3081\u306b ZIP \u5f62\u5f0f\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u308f\u3051\u3067\u3059\u304c\u3001Dockerfile \u3092\u30ab\u30b9\u30bf\u30e0\u3057\u305f\u3044\u5834\u5408\u3084 .ebextensions \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5185\u5305\u3055\u305b\u305f\u3044\u5834\u5408\u306a\u3069\u306f\u3001\u6a19\u6e96\u306e\u69cb\u6210\u3067\u306f\u624b\u4f5c\u696d\u304c\u751f\u3058\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u3053\u3067\u3001Build.scala \u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u88c5\u3057\u3066\u3001sbt\u30b3\u30de\u30f3\u30c9\u4e00\u767a\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u307e\u3067\u4f5c\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n<Project Root>\n     |\n     +- app/\n     +- conf/\n     +- ebextensions/\n     |     +- *.config\n     +- project/\n     +- public/\n     +- test/\n     +- build.sbt\n     +- Dockerfile\n\n\n\u30bf\u30b9\u30af\u306e\u6574\u7406\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u30d3\u30eb\u30c9\u3057\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u76f4\u524d\u306e\u72b6\u614b\u307e\u3067\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001universal:stage \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f universal:stage \u306e\u5f8c\u306e\u4f5c\u696d\u3092\u8003\u3048\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u4f5c\u696d\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\nopt/docker \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u3068\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5185\u5bb9\u7269\u3092\u30b3\u30d4\u30fc\u3059\u308b\nDockerfile \u3092\u30b3\u30d4\u30fc\u3059\u308b\n.ebextensions \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u3068\u5185\u5bb9\u7269\u3092\u30b3\u30d4\u30fc\u3059\u308b\nZIP \u306b\u3059\u308b\u3002\n\n\u3053\u308c\u3089\u3092\u305d\u308c\u305e\u308c\u3072\u3068\u3064\u306e\u30bf\u30b9\u30af\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u4e0a\u8a18\u3059\u3079\u3066\u3092\u884c\u3046\u30bf\u30b9\u30af\u3092\u4e00\u3064\u3060\u3051\u5b9a\u7fa9\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\nBuild.scala\nBuild.scala \u30d5\u30a1\u30a4\u30eb\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\u3002\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092 project \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002\u4e0a\u8ff0\u306e\u30bf\u30b9\u30af\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u540d\u524d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nopt/docker \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u3068\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5185\u5bb9\u7269\u3092\u30b3\u30d4\u30fc\u3059\u308b\n\n\ncreateStaging\n\n\nDockerfile \u3092\u30b3\u30d4\u30fc\u3059\u308b\n\n\ncopyDockerfile\n\n\n.ebextensions \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u3068\u5185\u5bb9\u7269\u3092\u30b3\u30d4\u30fc\u3059\u308b\n\n\ncopyEbextensions\n\n\nZIP \u306b\u3059\u308b\u3002\n\n\npackageEbDocker\n\n\n\n\nBuild.scala\nimport java.io.File\nimport play.sbt.PlayScala\nimport sbt.Keys._\nimport sbt._\n\nobject Build extends Build {\n\n  // Tasks\n  val createStaging = taskKey[Unit](\"Create a staging directory.\")\n  val copyDockerfile = taskKey[Unit](\"Copy the Dockerfile.\")\n  val copyEbextensions = taskKey[Unit](\"Copy the .ebextensions.\")\n  val packageEbDocker = taskKey[String](\"Make a package for Docker on Elastic Beanstalk.\")\n\n  // Constants\n  val dockerfile = \"Dockerfile\"\n  val stagingDir = new File(\"target/docker\")\n\n  // Project settings\n  lazy val root = (project in file(\".\")).enablePlugins(PlayScala).\n    settings(\n      // Create staging directory.\n      createStaging := {\n        println(\"run createStaging\")\n\n        val src = \"target/universal/stage\"\n        val dst = stagingDir / \"files/opt/docker\"\n        println(s\"Copy directory: $src -> ${dst.getAbsolutePath}\")\n        IO.copyDirectory(new File(src), dst, overwrite = false)\n      },\n\n      // Copy the \"Dockerfile\" for specified language.\n      copyDockerfile := {\n        println(\"run copyDockerfile\")\n        createStaging.value\n\n        val src = dockerfile\n        val dst = stagingDir / dockerfile\n        println(s\"Copy Dockerfile for specified language: $src -> ${dst.getAbsolutePath}\")\n        IO.copyFile(new File(src), dst)\n      },\n\n      copyEbextensions := {\n        println(\"run copyEbextensions\")\n        copyDockerfile.value\n\n        val src = \"ebextensions\"\n        val dst = stagingDir / \".ebextensions\"\n        println(s\"Copy directory: $src -> ${dst.getAbsolutePath}\")\n        IO.copyDirectory(new File(src), dst, overwrite = false)\n      },\n\n      // Make a package\n      packageEbDocker := {\n        println(\"run packageEbDocker\")\n        copyEbextensions.value\n\n        val outFile = s\"${name.value}-${version.value}.zip\"\n        IO.zip(Path.allSubpaths(stagingDir), new File(s\"./$outFile\"))\n        println(s\"Packaging complete !!!!!!!!! -> $outFile.\")\n        outFile\n      }\n    )\n}\n\n\n\u4ee3\u308f\u308a\u306b\u3001build.sbt \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u307e\u3059\u3002\n\nbuild.sbt\n// lazy val root = (project in file(\".\")).enablePlugins(PlayScala)\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u5b9f\u884c\u3059\u308b\u3068\u30d1\u30c3\u30b1\u30fc\u30b8\u306eZIP\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n$ sbt clean universal:stage packageEbDocker\n...\n...\nrun createStaging\nCopy directory: target/universal/stage -> /path/to/project/target/docker/files/opt/docker\nrun copyDockerfile\nCopy Dockerfile for specified language: Dockerfile -> /path/to/project/target/docker/Dockerfile\nrun copyEbextensions\nCopy directory: ebextensions -> /path/to/project/target/docker/.ebextensions\nrun packageEbDocker\nPackaging complete !!!!!!!!! -> project-1.0-SNAPSHOT.zip.\n\n\n\u30bf\u30b9\u30af\u5b9a\u7fa9\n\u30bf\u30b9\u30af\u306e\u5b9a\u7fa9\u306f taskKey \u3067\u884c\u3044\u307e\u3059\u3002\u578b\u5f15\u6570\u306b\u30bf\u30b9\u30af\u306e\u623b\u308a\u5024\u3092\u3001\u5f15\u6570\u306b\u30bf\u30b9\u30af\u306e\u8aac\u660e\u6587\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\nval createStaging = taskKey[Unit](\"Create a staging directory.\")\nval copyDockerfile = taskKey[Unit](\"Copy the Dockerfile.\")\nval copyEbextensions = taskKey[Unit](\"Copy the .ebextensions.\")\nval packageEbDocker = taskKey[String](\"Make a package for Docker on Elastic Beanstalk.\")\n\n\n\u30bf\u30b9\u30af\u306e\u4f9d\u5b58\u95a2\u4fc2\n\u30bf\u30b9\u30af\u306b\u4f9d\u5b58\u95a2\u4fc2\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f copyDockerfile \u306f createStaging \u306b\u4f9d\u5b58\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n// Copy the \"Dockerfile\" for specified language.\ncopyDockerfile := {\n  println(\"run copyDockerfile\")\n  createStaging.value                  // dependent task\n\n  val src = dockerfile\n  val dst = stagingDir / dockerfile\n  println(s\"Copy Dockerfile for specified language: $src -> ${dst.getAbsolutePath}\")\n  IO.copyFile(new File(src), dst)\n},\n\n\n\u30bf\u30b9\u30af\u306e\u623b\u308a\u5024\n\u30bf\u30b9\u30af\u306b\u623b\u308a\u5024\u3092\u6301\u3064\u3088\u3046\u306b\u3059\u308b\u3068\u3001\u4f9d\u5b58\u3055\u308c\u3066\u3044\u308b\u30bf\u30b9\u30af\u306b\u5024\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u6210\u679c\u7269\u3068\u306a\u308b ZIP \u30d5\u30a1\u30a4\u30eb\u306e\u540d\u524d\u3092\u6b21\u306e\u30bf\u30b9\u30af\u306b\u6e21\u305b\u308b\u3088\u3046 packageEbDocker \u304c String \u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u73fe\u72b6\u306f packageEbDocker \u306f\u6700\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u306e\u3067\u6368\u3066\u3089\u308c\u308b\u3060\u3051\u3067\u3059\u304c\u2026\n// Make a package\npackageEbDocker := {\n  println(\"run packageEbDocker\")\n  copyEbextensions.value\n\n  val outFile = s\"${name.value}-${version.value}.zip\"\n  IO.zip(Path.allSubpaths(stagingDir), new File(s\"./$outFile\"))\n  println(s\"Packaging complete !!!!!!!!! -> $outFile.\")\n  outFile\n}\n\nBuild.scala \u3067 AWS Elastic Beanstalk \u306e Docker \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u308b\n===\n\n\u6982\u8981\n---\n\nScala + PlayFramework \u3067\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3001Elastic Beanstalk \u306e Docker \u74b0\u5883\u3067\u52d5\u304b\u3059\u305f\u3081\u306b ZIP \u5f62\u5f0f\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u308f\u3051\u3067\u3059\u304c\u3001`Dockerfile` \u3092\u30ab\u30b9\u30bf\u30e0\u3057\u305f\u3044\u5834\u5408\u3084 .ebextensions \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5185\u5305\u3055\u305b\u305f\u3044\u5834\u5408\u306a\u3069\u306f\u3001\u6a19\u6e96\u306e\u69cb\u6210\u3067\u306f\u624b\u4f5c\u696d\u304c\u751f\u3058\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u3053\u3067\u3001`Build.scala` \u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u88c5\u3057\u3066\u3001`sbt`\u30b3\u30de\u30f3\u30c9\u4e00\u767a\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u307e\u3067\u4f5c\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\n---\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\n<Project Root>\n     |\n     +- app/\n     +- conf/\n     +- ebextensions/\n     |     +- *.config\n     +- project/\n     +- public/\n     +- test/\n     +- build.sbt\n     +- Dockerfile\n```\n\n\n\u30bf\u30b9\u30af\u306e\u6574\u7406\n---\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u30d3\u30eb\u30c9\u3057\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u76f4\u524d\u306e\u72b6\u614b\u307e\u3067\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001`universal:stage` \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f `universal:stage` \u306e\u5f8c\u306e\u4f5c\u696d\u3092\u8003\u3048\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u4f5c\u696d\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n* opt/docker \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u3068\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5185\u5bb9\u7269\u3092\u30b3\u30d4\u30fc\u3059\u308b\n* Dockerfile \u3092\u30b3\u30d4\u30fc\u3059\u308b\n* .ebextensions \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u3068\u5185\u5bb9\u7269\u3092\u30b3\u30d4\u30fc\u3059\u308b\n* ZIP \u306b\u3059\u308b\u3002\n\n\u3053\u308c\u3089\u3092\u305d\u308c\u305e\u308c\u3072\u3068\u3064\u306e\u30bf\u30b9\u30af\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u4e0a\u8a18\u3059\u3079\u3066\u3092\u884c\u3046\u30bf\u30b9\u30af\u3092\u4e00\u3064\u3060\u3051\u5b9a\u7fa9\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\n\nBuild.scala\n---\n\nBuild.scala \u30d5\u30a1\u30a4\u30eb\u3092\u4ee5\u4e0b\u306b\u793a\u3057\u307e\u3059\u3002\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092 project \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002\u4e0a\u8ff0\u306e\u30bf\u30b9\u30af\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u540d\u524d\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n* opt/docker \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u3068\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5185\u5bb9\u7269\u3092\u30b3\u30d4\u30fc\u3059\u308b\n * createStaging\n* Dockerfile \u3092\u30b3\u30d4\u30fc\u3059\u308b\n * copyDockerfile\n* .ebextensions \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u3068\u5185\u5bb9\u7269\u3092\u30b3\u30d4\u30fc\u3059\u308b\n * copyEbextensions\n* ZIP \u306b\u3059\u308b\u3002\n * packageEbDocker\n\n\n```scala:Build.scala\nimport java.io.File\nimport play.sbt.PlayScala\nimport sbt.Keys._\nimport sbt._\n\nobject Build extends Build {\n\n  // Tasks\n  val createStaging = taskKey[Unit](\"Create a staging directory.\")\n  val copyDockerfile = taskKey[Unit](\"Copy the Dockerfile.\")\n  val copyEbextensions = taskKey[Unit](\"Copy the .ebextensions.\")\n  val packageEbDocker = taskKey[String](\"Make a package for Docker on Elastic Beanstalk.\")\n\n  // Constants\n  val dockerfile = \"Dockerfile\"\n  val stagingDir = new File(\"target/docker\")\n\n  // Project settings\n  lazy val root = (project in file(\".\")).enablePlugins(PlayScala).\n    settings(\n      // Create staging directory.\n      createStaging := {\n        println(\"run createStaging\")\n\n        val src = \"target/universal/stage\"\n        val dst = stagingDir / \"files/opt/docker\"\n        println(s\"Copy directory: $src -> ${dst.getAbsolutePath}\")\n        IO.copyDirectory(new File(src), dst, overwrite = false)\n      },\n\n      // Copy the \"Dockerfile\" for specified language.\n      copyDockerfile := {\n        println(\"run copyDockerfile\")\n        createStaging.value\n\n        val src = dockerfile\n        val dst = stagingDir / dockerfile\n        println(s\"Copy Dockerfile for specified language: $src -> ${dst.getAbsolutePath}\")\n        IO.copyFile(new File(src), dst)\n      },\n\n      copyEbextensions := {\n        println(\"run copyEbextensions\")\n        copyDockerfile.value\n\n        val src = \"ebextensions\"\n        val dst = stagingDir / \".ebextensions\"\n        println(s\"Copy directory: $src -> ${dst.getAbsolutePath}\")\n        IO.copyDirectory(new File(src), dst, overwrite = false)\n      },\n\n      // Make a package\n      packageEbDocker := {\n        println(\"run packageEbDocker\")\n        copyEbextensions.value\n\n        val outFile = s\"${name.value}-${version.value}.zip\"\n        IO.zip(Path.allSubpaths(stagingDir), new File(s\"./$outFile\"))\n        println(s\"Packaging complete !!!!!!!!! -> $outFile.\")\n        outFile\n      }\n    )\n}\n```\n\n\n\n\u4ee3\u308f\u308a\u306b\u3001build.sbt \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u307e\u3059\u3002\n\n```scala:build.sbt\n// lazy val root = (project in file(\".\")).enablePlugins(PlayScala)\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u5b9f\u884c\u3059\u308b\u3068\u30d1\u30c3\u30b1\u30fc\u30b8\u306eZIP\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n```sh\n$ sbt clean universal:stage packageEbDocker\n...\n...\nrun createStaging\nCopy directory: target/universal/stage -> /path/to/project/target/docker/files/opt/docker\nrun copyDockerfile\nCopy Dockerfile for specified language: Dockerfile -> /path/to/project/target/docker/Dockerfile\nrun copyEbextensions\nCopy directory: ebextensions -> /path/to/project/target/docker/.ebextensions\nrun packageEbDocker\nPackaging complete !!!!!!!!! -> project-1.0-SNAPSHOT.zip.\n```\n\n\n\u30bf\u30b9\u30af\u5b9a\u7fa9\n---\n\n\u30bf\u30b9\u30af\u306e\u5b9a\u7fa9\u306f `taskKey` \u3067\u884c\u3044\u307e\u3059\u3002\u578b\u5f15\u6570\u306b\u30bf\u30b9\u30af\u306e\u623b\u308a\u5024\u3092\u3001\u5f15\u6570\u306b\u30bf\u30b9\u30af\u306e\u8aac\u660e\u6587\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```scala\nval createStaging = taskKey[Unit](\"Create a staging directory.\")\nval copyDockerfile = taskKey[Unit](\"Copy the Dockerfile.\")\nval copyEbextensions = taskKey[Unit](\"Copy the .ebextensions.\")\nval packageEbDocker = taskKey[String](\"Make a package for Docker on Elastic Beanstalk.\")\n```\n\n\u30bf\u30b9\u30af\u306e\u4f9d\u5b58\u95a2\u4fc2\n---\n\n\u30bf\u30b9\u30af\u306b\u4f9d\u5b58\u95a2\u4fc2\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f `copyDockerfile` \u306f `createStaging` \u306b\u4f9d\u5b58\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```scala\n// Copy the \"Dockerfile\" for specified language.\ncopyDockerfile := {\n  println(\"run copyDockerfile\")\n  createStaging.value                  // dependent task\n\n  val src = dockerfile\n  val dst = stagingDir / dockerfile\n  println(s\"Copy Dockerfile for specified language: $src -> ${dst.getAbsolutePath}\")\n  IO.copyFile(new File(src), dst)\n},\n```\n\n\u30bf\u30b9\u30af\u306e\u623b\u308a\u5024\n---\n\n\u30bf\u30b9\u30af\u306b\u623b\u308a\u5024\u3092\u6301\u3064\u3088\u3046\u306b\u3059\u308b\u3068\u3001\u4f9d\u5b58\u3055\u308c\u3066\u3044\u308b\u30bf\u30b9\u30af\u306b\u5024\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u6210\u679c\u7269\u3068\u306a\u308b ZIP \u30d5\u30a1\u30a4\u30eb\u306e\u540d\u524d\u3092\u6b21\u306e\u30bf\u30b9\u30af\u306b\u6e21\u305b\u308b\u3088\u3046 `packageEbDocker` \u304c `String` \u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u73fe\u72b6\u306f `packageEbDocker` \u306f\u6700\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u306e\u3067\u6368\u3066\u3089\u308c\u308b\u3060\u3051\u3067\u3059\u304c\u2026\n\n```scala\n// Make a package\npackageEbDocker := {\n  println(\"run packageEbDocker\")\n  copyEbextensions.value\n\n  val outFile = s\"${name.value}-${version.value}.zip\"\n  IO.zip(Path.allSubpaths(stagingDir), new File(s\"./$outFile\"))\n  println(s\"Packaging complete !!!!!!!!! -> $outFile.\")\n  outFile\n}\n```\n"}