{"context": "\n\n\u52d5\u6a5f\uff1aipynb\u30d5\u30a1\u30a4\u30eb\u306f\u5dee\u5206\u304c\u7d76\u671b\u7684\u306b\u898b\u306b\u304f\u3044\n\u30b3\u30fc\u30c9\u3060\u3051\u306e\u5dee\u5206\u304c\u898b\u305f\u3044\u306e\u306b\u3001\n\u4ee5\u4e0b\u3067\u7121\u6570\u306b\u5dee\u5206\u304c\u3067\u308b\u306e\u304c\u8f9b\u3044\u3002\u3002\u3002\n\n\u51fa\u529b\u7d50\u679c out[1]: hogehoge\n\u5b9f\u884c\u9806\u756a (In[17]\u306a\u3069\u306e 17\u306e\u90e8\u5206)\n\u30bb\u30eb\u306e\u533a\u5207\u308a\u5177\u5408\n\n\n\u65b9\u6cd51\uff08\u4eba\u529b\uff1a\u975e\u63a8\u5968\uff09: \u6bce\u56de\u51fa\u529b\u7d50\u679c\u3092\u30af\u30ea\u30a2\u3057\u3066\u304b\u3089\u30b3\u30df\u30c3\u30c8\u3059\u308b\n\u3000kernel\u518d\u8d77\u52d5\u306e\u6642\u306bclear output \u3092\u9078\u629e\u3059\u308b\u3002\n\u3000\n\u4f55\u3082\u3057\u306a\u3044\u3088\u308a\u306f\u898b\u3084\u3059\u304f\u306a\u308b\u304c\u4ee5\u4e0b\u306e\u6b20\u70b9\u304c\u308b\u3002\n\n \u4e0a\u8a18\u306e3\u306b\u5bfe\u3057\u3066\u306f\u7121\u610f\u5473\n \u3081\u3093\u3069\u3044\n \u5fd8\u308c\u3066\u305d\u306e\u307e\u307e\u30b3\u30df\u30c3\u30c8\u3057\u305f\u6642\u306b\u6b7b\u306c\n\n\n\u65b9\u6cd52\uff08\u3053\u3063\u3061\u304c\u672c\u984c\uff09: \u81ea\u52d5\u3067py\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3001\u305d\u308c\u3092\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3059\u308b\n\nipynb\u3092\u30bb\u30fc\u30d6\u3057\u305f\u6642\u306b\u81ea\u52d5\u3067py\u30d5\u30a1\u30a4\u30eb\u3082\u66f4\u65b0\u3055\u308c\u308b\uff01\n\u57fa\u672c\u7684\u306b\u4e0d\u8981\u306a\u3001\u51fa\u529b\u7d50\u679c\u3084\u5b9f\u884c\u9806\u756a\u3092\u6d88\u3059\u3053\u3068\u3082\u3067\u304d\u308b\uff01\n\n\u3084\u308a\u65b9\u306f\u3053\u3053\u3092\u53c2\u8003\u306b\u3057\u305f\u3002\n\nhttp://jupyter-notebook.readthedocs.org/en/latest/extending/savehooks.html\n\n\u5404\u81ea\u306e\u74b0\u5883\u306b\u3042\u308b\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u3044\u3058\u308b\u3002\n\n.jupyter\\jupyter_notebook_config.py\n\n\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u306f\u6700\u521d\u306f\u7121\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u305d\u306e\u6642\u306f\u751f\u6210\u3059\u308b\u30b3\u30de\u30f3\u30c9\u304c\u3042\u308b\u306e\u3067\u3001\u30b0\u30b0\u30c3\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u65b9\u6cd52\u306e\u305f\u3081\u306e\u5909\u66f4\u7b87\u62401\uff1a\u4fdd\u5b58\u524d\u306b\u3001\u7121\u99c4\u306a\u51fa\u529b\u306a\u3069\u3092\u524a\u9664\u3059\u308b\n\u3053\u306e\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3055\u308c\u305f\u90e8\u5206\u3092\u3002\u3002\u3002\n\njupyter_notebook_config.py\n#c.FileContentsManager.post_save_hook = None\n\n\n\u2193\u3000\u3053\u3046\u3058\u3083\n\njupyter_notebook_config.py\n\ndef scrub_output_pre_save(model, **kwargs):\n    \"\"\"scrub output before saving notebooks\"\"\"\n    # only run on notebooks\n    if model['type'] != 'notebook':\n        return\n    # only run on nbformat v4\n    if model['content']['nbformat'] != 4:\n        return\n\n    for cell in model['content']['cells']:\n        if cell['cell_type'] != 'code':\n            continue\n        cell['outputs'] = []\n        cell['execution_count'] = None\n\nc.FileContentsManager.pre_save_hook = scrub_output_pre_save\n\n\n\n\n\n\u65b9\u6cd52\u306e\u305f\u3081\u306e\u5909\u66f4\u7b87\u62402\uff1a\u540c\u540d\u306epy\u30d5\u30a1\u30a4\u30eb\u3092ipynb\u3068\u540c\u3058\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u81ea\u52d5\u4fdd\u5b58\u3059\u308b\n\u3053\u3044\u3064\u3092\n\njupyter_notebook_config.py\n#c.FileContentsManager.post_save_hook = None\n\n\n\u2193\u3053\u3046\u3058\u3083\n\njupyter_notebook_config.py\nimport io\nimport os\nfrom notebook.utils import to_api_path\n\n_script_exporter = None\n\ndef script_post_save(model, os_path, contents_manager, **kwargs):\n    \"\"\"convert notebooks to Python script after save with nbconvert\n\n    replaces `ipython notebook --script`\n    \"\"\"\n    from nbconvert.exporters.script import ScriptExporter\n\n    if model['type'] != 'notebook':\n        return\n\n    global _script_exporter\n    if _script_exporter is None:\n        _script_exporter = ScriptExporter(parent=contents_manager)\n    log = contents_manager.log\n\n    base, ext = os.path.splitext(os_path)\n    py_fname = base + '.py'\n    script, resources = _script_exporter.from_filename(os_path)\n    script_fname = base + resources.get('output_extension', '.txt')\n    log.info(\"Saving script /%s\", to_api_path(script_fname, contents_manager.root_dir))\n    with io.open(script_fname, 'w', encoding='utf-8') as f:\n        f.write(script)\nc.FileContentsManager.post_save_hook = script_post_save\n\n\n\n\u3000\n\n\u4ee5\u4e0a\u3067\u307e\u3068\u3082\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u304c\u3067\u304d\u308b\u304b\u3068\u3002\njupyter\u6700\u9ad8\uff01\n# \u52d5\u6a5f\uff1aipynb\u30d5\u30a1\u30a4\u30eb\u306f\u5dee\u5206\u304c\u7d76\u671b\u7684\u306b\u898b\u306b\u304f\u3044\n\u30b3\u30fc\u30c9\u3060\u3051\u306e\u5dee\u5206\u304c\u898b\u305f\u3044\u306e\u306b\u3001\n\u4ee5\u4e0b\u3067\u7121\u6570\u306b\u5dee\u5206\u304c\u3067\u308b\u306e\u304c\u8f9b\u3044\u3002\u3002\u3002\n\n1. \u51fa\u529b\u7d50\u679c out[1]: hogehoge\n2. \u5b9f\u884c\u9806\u756a (In[17]\u306a\u3069\u306e 17\u306e\u90e8\u5206)\n3. \u30bb\u30eb\u306e\u533a\u5207\u308a\u5177\u5408\n\n\n\n\n\n## \u65b9\u6cd51\uff08\u4eba\u529b\uff1a\u975e\u63a8\u5968\uff09: \u6bce\u56de\u51fa\u529b\u7d50\u679c\u3092\u30af\u30ea\u30a2\u3057\u3066\u304b\u3089\u30b3\u30df\u30c3\u30c8\u3059\u308b\n\u3000kernel\u518d\u8d77\u52d5\u306e\u6642\u306bclear output \u3092\u9078\u629e\u3059\u308b\u3002\n\u3000\n\u4f55\u3082\u3057\u306a\u3044\u3088\u308a\u306f\u898b\u3084\u3059\u304f\u306a\u308b\u304c\u4ee5\u4e0b\u306e\u6b20\u70b9\u304c\u308b\u3002\n\n-  \u4e0a\u8a18\u306e3\u306b\u5bfe\u3057\u3066\u306f\u7121\u610f\u5473\n-  \u3081\u3093\u3069\u3044\n-  \u5fd8\u308c\u3066\u305d\u306e\u307e\u307e\u30b3\u30df\u30c3\u30c8\u3057\u305f\u6642\u306b\u6b7b\u306c\n\n\n## \u65b9\u6cd52\uff08\u3053\u3063\u3061\u304c\u672c\u984c\uff09: \u81ea\u52d5\u3067py\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3001\u305d\u308c\u3092\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3059\u308b\n\n+ ipynb\u3092\u30bb\u30fc\u30d6\u3057\u305f\u6642\u306b\u81ea\u52d5\u3067py\u30d5\u30a1\u30a4\u30eb\u3082\u66f4\u65b0\u3055\u308c\u308b\uff01\n+ \u57fa\u672c\u7684\u306b\u4e0d\u8981\u306a\u3001\u51fa\u529b\u7d50\u679c\u3084\u5b9f\u884c\u9806\u756a\u3092\u6d88\u3059\u3053\u3068\u3082\u3067\u304d\u308b\uff01\n\n\u3084\u308a\u65b9\u306f\u3053\u3053\u3092\u53c2\u8003\u306b\u3057\u305f\u3002\n> http://jupyter-notebook.readthedocs.org/en/latest/extending/savehooks.html\n\n\n\n*\u5404\u81ea\u306e\u74b0\u5883\u306b\u3042\u308b\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u3044\u3058\u308b\u3002*\n> .jupyter\\jupyter_notebook_config.py\n\n\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u306f\u6700\u521d\u306f\u7121\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u305d\u306e\u6642\u306f\u751f\u6210\u3059\u308b\u30b3\u30de\u30f3\u30c9\u304c\u3042\u308b\u306e\u3067\u3001\u30b0\u30b0\u30c3\u3066\u304f\u3060\u3055\u3044\u3002\n\n***\n\n### \u65b9\u6cd52\u306e\u305f\u3081\u306e\u5909\u66f4\u7b87\u62401\uff1a\u4fdd\u5b58\u524d\u306b\u3001\u7121\u99c4\u306a\u51fa\u529b\u306a\u3069\u3092\u524a\u9664\u3059\u308b\n\n\u3053\u306e\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3055\u308c\u305f\u90e8\u5206\u3092\u3002\u3002\u3002\n\n``` python:jupyter_notebook_config.py\n#c.FileContentsManager.post_save_hook = None\n```\n\n\u2193\u3000\u3053\u3046\u3058\u3083\n\n``` python:jupyter_notebook_config.py\n\ndef scrub_output_pre_save(model, **kwargs):\n    \"\"\"scrub output before saving notebooks\"\"\"\n    # only run on notebooks\n    if model['type'] != 'notebook':\n        return\n    # only run on nbformat v4\n    if model['content']['nbformat'] != 4:\n        return\n\n    for cell in model['content']['cells']:\n        if cell['cell_type'] != 'code':\n            continue\n        cell['outputs'] = []\n        cell['execution_count'] = None\n\nc.FileContentsManager.pre_save_hook = scrub_output_pre_save\n\n``` \n***\n\n### \u65b9\u6cd52\u306e\u305f\u3081\u306e\u5909\u66f4\u7b87\u62402\uff1a\u540c\u540d\u306epy\u30d5\u30a1\u30a4\u30eb\u3092ipynb\u3068\u540c\u3058\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u81ea\u52d5\u4fdd\u5b58\u3059\u308b\n\n\u3053\u3044\u3064\u3092\n\n``` python:jupyter_notebook_config.py\n#c.FileContentsManager.post_save_hook = None\n``` \n\n\u2193\u3053\u3046\u3058\u3083\n\n``` python:jupyter_notebook_config.py\nimport io\nimport os\nfrom notebook.utils import to_api_path\n\n_script_exporter = None\n\ndef script_post_save(model, os_path, contents_manager, **kwargs):\n    \"\"\"convert notebooks to Python script after save with nbconvert\n\n    replaces `ipython notebook --script`\n    \"\"\"\n    from nbconvert.exporters.script import ScriptExporter\n\n    if model['type'] != 'notebook':\n        return\n\n    global _script_exporter\n    if _script_exporter is None:\n        _script_exporter = ScriptExporter(parent=contents_manager)\n    log = contents_manager.log\n\n    base, ext = os.path.splitext(os_path)\n    py_fname = base + '.py'\n    script, resources = _script_exporter.from_filename(os_path)\n    script_fname = base + resources.get('output_extension', '.txt')\n    log.info(\"Saving script /%s\", to_api_path(script_fname, contents_manager.root_dir))\n    with io.open(script_fname, 'w', encoding='utf-8') as f:\n        f.write(script)\nc.FileContentsManager.post_save_hook = script_post_save\n\n```\n  \u3000\n***\n\n\u4ee5\u4e0a\u3067\u307e\u3068\u3082\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u304c\u3067\u304d\u308b\u304b\u3068\u3002\njupyter\u6700\u9ad8\uff01\n\n\n\n\n\n\n", "tags": ["Jupyter", "ipython_notebook", "\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406", "svn", "Git"]}