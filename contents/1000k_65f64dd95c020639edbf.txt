{"context": " More than 1 year has passed since last update.header() \u95a2\u6570\u306f\u305d\u306e\u5b9f\u884c\u524d\u306b\u4f55\u3089\u304b\u306e\u6a19\u6e96\u51fa\u529b\u304c\u3055\u308c\u3066\u3044\u308b\u3068\u300cCannot modify header information\u300d\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3092\u5410\u3044\u3066\u3057\u307e\u3044\u307e\u3059\u3002\nPHPUnit \u306f\u30c6\u30b9\u30c8\u4e2d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6a19\u6e96\u51fa\u529b\u306b\u9010\u4e00\u5410\u304d\u51fa\u3059\u305f\u3081\u3001\u305d\u306e\u307e\u307e\u3067\u306f header() \u95a2\u6570\u3092\u7528\u3044\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u73fe\u8c61\n\u305f\u3068\u3048\u3070\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306f\u30a8\u30e9\u30fc\u3067\u6b62\u307e\u308a\u307e\u3059\u3002\nclass Api {\n    public function output($data, $response_code = 200) {\n        http_response_code($response_code);\n        header('Content-Type: application/json'); // \u3053\u306e\u884c\u306e\u524d\u306b PHPUnit \u304c\u6a19\u6e96\u51fa\u529b\u306b\u30c6\u30b9\u30c8\u9032\u6357\u3092\u9010\u6b21\u51fa\u529b\u3059\u308b\u305b\u3044\u3067\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308b\n        $output = json_encode($data);\n\n        echo $output;\n        return $output;\n    }\n}\n\nclass ApiTest extends \\PHPUnit_Framework_TestCase {\n    /*\n     * @covers Api::output\n     */\n    public function testOutput() {\n        $data = ['foo' => 'bar'];\n        $response_code = 200;\n\n        ob_start();\n\n        $actual = $this->Api->output($data, $response_code);\n        $output = ob_get_contents();\n        $expected = json_encode($data);\n\n        $this->assertEquals($expected, $actual);\n        $this->assertEquals($output, $actual);\n        $this->assertEquals(http_response_code(), $response_code);\n\n        ob_clean();\n    }\n}\n\n\u4e0a\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u3092\u5410\u304d\u307e\u3059\u3002\nCannot modify header information - headers already sent by (output started at C:\\xampp\\php\\pear\\PHPUnit\\Util\\Printer.php:172)\n\n\n\u5bfe\u7b56\nPHPUnit \u306e @runInSeparateProcess \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3060\u3051\u3092\u5225\u30d7\u30ed\u30bb\u30b9\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001header() \u95a2\u6570\u3092\u4f7f\u3046\u30c6\u30b9\u30c8\u3060\u3051\u306f\u6a19\u6e96\u51fa\u529b\u304c\u771f\u3063\u3055\u3089\u306a\u30d7\u30ed\u30bb\u30b9\u3067\u30c6\u30b9\u30c8\u3067\u304d\u308b\u306e\u3067\u3001\u30a8\u30e9\u30fc\u3092\u5410\u304d\u307e\u305b\u3093\u3002\n    /**\n     * @covers Api::output\n     * @runInSeparateProcess\n     */\n    public function testOutput() {\n        // ...\n    }\n\nPHPUnit 3.7.8 by Sebastian Bergmann.\n\n.\n\nTime: 3 seconds, Memory: 2.75Mb\n\nOK (1 test, 3 assertions)\n\nheader() \u95a2\u6570\u3092\u4f7f\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u3092\u3059\u308b\u969b\u306b\u306f\u899a\u3048\u3066\u304a\u304d\u305f\u3044\u30c6\u30af\u30cb\u30c3\u30af\u3067\u3059\u3002\n\n\u53c2\u8003\n\n\u4ed8\u9332B \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\nPHP: header - Manual\nunit testing - Test PHP headers with PHPunit - Stack Overflow\n\nheader() \u95a2\u6570\u306f\u305d\u306e\u5b9f\u884c\u524d\u306b\u4f55\u3089\u304b\u306e\u6a19\u6e96\u51fa\u529b\u304c\u3055\u308c\u3066\u3044\u308b\u3068\u300c`Cannot modify header information`\u300d\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3092\u5410\u3044\u3066\u3057\u307e\u3044\u307e\u3059\u3002\nPHPUnit \u306f\u30c6\u30b9\u30c8\u4e2d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6a19\u6e96\u51fa\u529b\u306b\u9010\u4e00\u5410\u304d\u51fa\u3059\u305f\u3081\u3001\u305d\u306e\u307e\u307e\u3067\u306f header() \u95a2\u6570\u3092\u7528\u3044\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\n\n\u73fe\u8c61\n----\n\u305f\u3068\u3048\u3070\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306f\u30a8\u30e9\u30fc\u3067\u6b62\u307e\u308a\u307e\u3059\u3002\n\n```php\nclass Api {\n    public function output($data, $response_code = 200) {\n        http_response_code($response_code);\n        header('Content-Type: application/json'); // \u3053\u306e\u884c\u306e\u524d\u306b PHPUnit \u304c\u6a19\u6e96\u51fa\u529b\u306b\u30c6\u30b9\u30c8\u9032\u6357\u3092\u9010\u6b21\u51fa\u529b\u3059\u308b\u305b\u3044\u3067\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308b\n        $output = json_encode($data);\n        \n        echo $output;\n        return $output;\n    }\n}\n\nclass ApiTest extends \\PHPUnit_Framework_TestCase {\n    /*\n     * @covers Api::output\n     */\n    public function testOutput() {\n        $data = ['foo' => 'bar'];\n        $response_code = 200;\n\n        ob_start();\n\n        $actual = $this->Api->output($data, $response_code);\n        $output = ob_get_contents();\n        $expected = json_encode($data);\n\n        $this->assertEquals($expected, $actual);\n        $this->assertEquals($output, $actual);\n        $this->assertEquals(http_response_code(), $response_code);\n\n        ob_clean();\n    }\n}\n```\n\n\u4e0a\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u3092\u5410\u304d\u307e\u3059\u3002\n\n```\nCannot modify header information - headers already sent by (output started at C:\\xampp\\php\\pear\\PHPUnit\\Util\\Printer.php:172)\n```\n\n\n\u5bfe\u7b56\n----\nPHPUnit \u306e `@runInSeparateProcess` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3060\u3051\u3092\u5225\u30d7\u30ed\u30bb\u30b9\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001header() \u95a2\u6570\u3092\u4f7f\u3046\u30c6\u30b9\u30c8\u3060\u3051\u306f\u6a19\u6e96\u51fa\u529b\u304c\u771f\u3063\u3055\u3089\u306a\u30d7\u30ed\u30bb\u30b9\u3067\u30c6\u30b9\u30c8\u3067\u304d\u308b\u306e\u3067\u3001\u30a8\u30e9\u30fc\u3092\u5410\u304d\u307e\u305b\u3093\u3002\n\n```php\n    /**\n     * @covers Api::output\n     * @runInSeparateProcess\n     */\n    public function testOutput() {\n        // ...\n    }\n```\n\n```bash\nPHPUnit 3.7.8 by Sebastian Bergmann.\n\n.\n\nTime: 3 seconds, Memory: 2.75Mb\n\nOK (1 test, 3 assertions)\n```\n\nheader() \u95a2\u6570\u3092\u4f7f\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u3092\u3059\u308b\u969b\u306b\u306f\u899a\u3048\u3066\u304a\u304d\u305f\u3044\u30c6\u30af\u30cb\u30c3\u30af\u3067\u3059\u3002\n\n\n\u53c2\u8003\n----\n* [\u4ed8\u9332B \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3](http://www.phpunit.de/manual/3.7/ja/appendixes.annotations.html#appendixes.annotations.runInSeparateProcess)\n* [PHP: header - Manual](http://www.php.net/manual/ja/function.header.php)\n* [unit testing - Test PHP headers with PHPunit - Stack Overflow](http://stackoverflow.com/questions/9745080/test-php-headers-with-phpunit)\n", "tags": ["PHP5", "PHPUnit3"]}