{"context": "\n\u7aef\u672b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308bversion\u3088\u308a\u65b0\u3057\u3044version\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u4fc3\u3059\u30a2\u30e9\u30fc\u30c8\u3092\u8868\u793a\u3055\u305b\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u4ee5\u524d\u3001Objective-C\u3067\u66f8\u3044\u3066Qiita\u306b\u3042\u3052\u305f\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306fSwift3\u3067\u66f8\u304d\u76f4\u3057\u307e\u3057\u305f\u3002\n\n\u30b3\u30fc\u30c9\nimport UIKit\n\n/************\u5909\u66f4\u7b87\u6240*************/\n\nprivate let appId = \"\"\nprivate let title = \"\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\"\nprivate let message = \"\u65b0\u3057\u3044Version\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e96\u5099\u304c\u3067\u304d\u3066\u3044\u307e\u3059\u3002\"\nprivate let okBtnTitle = \"\u4eca\u3059\u3050\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\"\nprivate let cancelBtnTitle = \"\u5f8c\u3067\"\n\n/*******************************/\n\nprivate var topViewController: UIViewController? {\n    guard var topViewController = UIApplication.shared.keyWindow?.rootViewController else { return nil }\n    while let presentedViewController = topViewController.presentedViewController {\n        topViewController = presentedViewController\n    }\n    return topViewController\n}\n\nenum UpdateType {\n    case normal\n    case force\n}\n\nclass UpdateChecker {\n\n    static func run(updateType: UpdateType) {\n        guard let url = URL(string: \"https://itunes.apple.com/jp/lookup?id=\\(appId)\") else { return }\n        let request = URLRequest(url: url)\n        let session = URLSession(configuration: .default)\n\n        let task = session.dataTask(with: request, completionHandler: {\n            (data, _, _) in\n            guard let d = data else { return }\n            do {\n                guard let results = try JSONSerialization.jsonObject(with: d, options: .allowFragments) as? NSDictionary else { return }\n                guard let resultsArray = results.value(forKey: \"results\") as? NSArray else { return }\n                guard let storeVersion = (resultsArray[0] as? NSDictionary)?.value(forKey: \"version\") as? String else { return }\n                guard let installVersion = Bundle.main.infoDictionary?[\"CFBundleShortVersionString\"] as? String else { return }\n                guard installVersion.compare(storeVersion) == .orderedAscending else { return }\n                showAlert(updateType: updateType)\n            } catch {\n                print(\"Serialization error\")\n            }\n        })\n        task.resume()\n    }\n\n    private static func showAlert(updateType: UpdateType) {\n        let alert = UIAlertController(title: title, message: message, preferredStyle: .alert)\n        let okAction = UIAlertAction(title: okBtnTitle, style: .default, handler: { Void in\n            guard let url = URL(string: \"itms-apps://itunes.apple.com/app/id\\(appId)\") else { return }\n            UIApplication.shared.open(url, options: [:], completionHandler: nil)\n        })\n        alert.addAction(okAction)\n\n        if updateType == .normal {\n            let cancelAction = UIAlertAction(title: cancelBtnTitle, style: .cancel, handler: nil)\n            alert.addAction(cancelAction)\n        }\n\n        topViewController?.present(alert, animated: true, completion: nil)\n    }\n}\n\n\n\u4f7f\u3044\u65b9\n\u30a2\u30e9\u30fc\u30c8\u3092\u8868\u793a\u3055\u305b\u305f\u3044\u30bf\u30a4\u30df\u30f3\u30b0\u3067\nUpdateChecker.run(updateType: .normal)\n\n\u5f37\u5236\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092applicationDidBecomeActive\u306b\u66f8\u304f\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nUpdateChecker.run(updateType: .force)\n\n\u30b3\u30fc\u30c9\u4e0a\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u62ec\u3063\u3066\u3042\u308b\u90e8\u5206\u306f\u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n/************\u5909\u66f4\u7b87\u6240*************/\n/*******************************/\n\n\n\u7c21\u5358\u306b\u8aac\u660e\n\u4e0b\u8a18URL\u3092\u53e9\u304f\u3068\u30a2\u30d7\u30ea\u306e\u60c5\u5831\u3092json\u3067\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067\u3001\n\"https://itunes.apple.com/jp/lookup?id=\\(appId)\"\n\n\u30d1\u30fc\u30b9\u3057\u3066\u3001 \u7aef\u672b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u30a2\u30d7\u30ea\u306eversion\u3068\u6bd4\u8f03\u3057\u3066\u3001\u65b0\u3057\u3051\u308c\u3070showAlert\u30e1\u30bd\u30c3\u30c9\u306b\u98db\u3070\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\ndo {\n    guard let results = try JSONSerialization.jsonObject(with: d, options: .allowFragments) as? NSDictionary else { return }\n    guard let resultsArray = results.value(forKey: \"results\") as? NSArray else { return }\n    guard let storeVersion = (resultsArray[0] as? NSDictionary)?.value(forKey: \"version\") as? String else { return }\n    guard let installVersion = Bundle.main.infoDictionary?[\"CFBundleShortVersionString\"] as? String else { return }\n    guard installVersion.compare(storeVersion) == .orderedAscending else { return }\n    showAlert(updateType: updateType)\n}\n\n\u9077\u79fb\u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\u3057\u305f\u3089\u3001URL\u30b9\u30ad\u30fc\u30e0\u53e9\u3044\u3066AppStore\u306b\u98db\u3070\u3057\u3066\u3044\u307e\u3059\u3002\nguard let url = URL(string: \"itms-apps://itunes.apple.com/app/id\\(appId)\") else { return }\nUIApplication.shared.open(url, options: [:], completionHandler: nil)\n\n\n![IMG_0070.PNG](https://qiita-image-store.s3.amazonaws.com/0/24465/2c803a6c-795a-3975-19d2-54447f42ebc1.png \"IMG_0070.PNG\")\n\n\u7aef\u672b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308bversion\u3088\u308a\u65b0\u3057\u3044version\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u4fc3\u3059\u30a2\u30e9\u30fc\u30c8\u3092\u8868\u793a\u3055\u305b\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u4ee5\u524d\u3001[Objective-C\u3067\u66f8\u3044\u3066](http://qiita.com/s0hno/items/b2596af8ddbf7c528cf9)Qiita\u306b\u3042\u3052\u305f\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306fSwift3\u3067\u66f8\u304d\u76f4\u3057\u307e\u3057\u305f\u3002\n\n##\u30b3\u30fc\u30c9\n\n```\nimport UIKit\n\n/************\u5909\u66f4\u7b87\u6240*************/\n\nprivate let appId = \"\"\nprivate let title = \"\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\"\nprivate let message = \"\u65b0\u3057\u3044Version\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e96\u5099\u304c\u3067\u304d\u3066\u3044\u307e\u3059\u3002\"\nprivate let okBtnTitle = \"\u4eca\u3059\u3050\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\"\nprivate let cancelBtnTitle = \"\u5f8c\u3067\"\n\n/*******************************/\n\nprivate var topViewController: UIViewController? {\n    guard var topViewController = UIApplication.shared.keyWindow?.rootViewController else { return nil }\n    while let presentedViewController = topViewController.presentedViewController {\n        topViewController = presentedViewController\n    }\n    return topViewController\n}\n\nenum UpdateType {\n    case normal\n    case force\n}\n\nclass UpdateChecker {\n\n    static func run(updateType: UpdateType) {\n        guard let url = URL(string: \"https://itunes.apple.com/jp/lookup?id=\\(appId)\") else { return }\n        let request = URLRequest(url: url)\n        let session = URLSession(configuration: .default)\n\n        let task = session.dataTask(with: request, completionHandler: {\n            (data, _, _) in\n            guard let d = data else { return }\n            do {\n                guard let results = try JSONSerialization.jsonObject(with: d, options: .allowFragments) as? NSDictionary else { return }\n                guard let resultsArray = results.value(forKey: \"results\") as? NSArray else { return }\n                guard let storeVersion = (resultsArray[0] as? NSDictionary)?.value(forKey: \"version\") as? String else { return }\n                guard let installVersion = Bundle.main.infoDictionary?[\"CFBundleShortVersionString\"] as? String else { return }\n                guard installVersion.compare(storeVersion) == .orderedAscending else { return }\n                showAlert(updateType: updateType)\n            } catch {\n                print(\"Serialization error\")\n            }\n        })\n        task.resume()\n    }\n\n    private static func showAlert(updateType: UpdateType) {\n        let alert = UIAlertController(title: title, message: message, preferredStyle: .alert)\n        let okAction = UIAlertAction(title: okBtnTitle, style: .default, handler: { Void in\n            guard let url = URL(string: \"itms-apps://itunes.apple.com/app/id\\(appId)\") else { return }\n            UIApplication.shared.open(url, options: [:], completionHandler: nil)\n        })\n        alert.addAction(okAction)\n\n        if updateType == .normal {\n            let cancelAction = UIAlertAction(title: cancelBtnTitle, style: .cancel, handler: nil)\n            alert.addAction(cancelAction)\n        }\n\n        topViewController?.present(alert, animated: true, completion: nil)\n    }\n}\n```\n\n##\u4f7f\u3044\u65b9\n\n\u30a2\u30e9\u30fc\u30c8\u3092\u8868\u793a\u3055\u305b\u305f\u3044\u30bf\u30a4\u30df\u30f3\u30b0\u3067\n\n```\nUpdateChecker.run(updateType: .normal)\n```\n\n\u5f37\u5236\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092applicationDidBecomeActive\u306b\u66f8\u304f\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```\nUpdateChecker.run(updateType: .force)\n```\n\n\u30b3\u30fc\u30c9\u4e0a\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u62ec\u3063\u3066\u3042\u308b\u90e8\u5206\u306f\u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\n/************\u5909\u66f4\u7b87\u6240*************/\n/*******************************/\n```\n\n##\u7c21\u5358\u306b\u8aac\u660e\n\n\u4e0b\u8a18URL\u3092\u53e9\u304f\u3068\u30a2\u30d7\u30ea\u306e\u60c5\u5831\u3092json\u3067\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067\u3001\n\n```\n\"https://itunes.apple.com/jp/lookup?id=\\(appId)\"\n```\n\u30d1\u30fc\u30b9\u3057\u3066\u3001 \u7aef\u672b\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u30a2\u30d7\u30ea\u306eversion\u3068\u6bd4\u8f03\u3057\u3066\u3001\u65b0\u3057\u3051\u308c\u3070showAlert\u30e1\u30bd\u30c3\u30c9\u306b\u98db\u3070\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\ndo {\n    guard let results = try JSONSerialization.jsonObject(with: d, options: .allowFragments) as? NSDictionary else { return }\n    guard let resultsArray = results.value(forKey: \"results\") as? NSArray else { return }\n    guard let storeVersion = (resultsArray[0] as? NSDictionary)?.value(forKey: \"version\") as? String else { return }\n    guard let installVersion = Bundle.main.infoDictionary?[\"CFBundleShortVersionString\"] as? String else { return }\n    guard installVersion.compare(storeVersion) == .orderedAscending else { return }\n    showAlert(updateType: updateType)\n}\n```\n\n\u9077\u79fb\u30dc\u30bf\u30f3\u3092\u30bf\u30c3\u30d7\u3057\u305f\u3089\u3001URL\u30b9\u30ad\u30fc\u30e0\u53e9\u3044\u3066AppStore\u306b\u98db\u3070\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\nguard let url = URL(string: \"itms-apps://itunes.apple.com/app/id\\(appId)\") else { return }\nUIApplication.shared.open(url, options: [:], completionHandler: nil)\n```\n\n", "tags": ["Swift", "swift3", "iOS"]}