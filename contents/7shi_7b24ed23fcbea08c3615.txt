{"context": " More than 1 year has passed since last update.VAX\u306e\u547d\u4ee4\u3092\u8abf\u3079\u308b\u305f\u3081\u7dcf\u5f53\u305f\u308a\u3067\u9006\u30a2\u30bb\u30f3\u30d6\u30eb\u3057\u3066\u307f\u307e\u3057\u305f\u3002VAX\u306e\u6a5f\u68b0\u8a9e\u306f\u30b7\u30f3\u30d7\u30eb\u306a\u306e\u3067\u7dcf\u5f53\u305f\u308a\u8abf\u67fb\u304c\u7c21\u5358\u306b\u3067\u304d\u307e\u3057\u305f\u3002\nVAX\u306e\u30af\u30ed\u30b9\u958b\u767a\u74b0\u5883\u3092\u524d\u63d0\u3068\u3057\u307e\u3059\u3002\u69cb\u7bc9\u65b9\u6cd5\u306f\u6b21\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\nUNIX/32V\u306b\u3088\u308bVAX\u4e8b\u59cb\u3081 2015.9.14\n\n\u3053\u306e\u8a18\u4e8b\u306b\u306f\u59c9\u59b9\u7de8\u304c\u3042\u308a\u307e\u3059\u3002\n\n\nS/390\u306e\u6a5f\u68b0\u8a9e\u3092\u7dcf\u5f53\u305f\u308a\u8abf\u67fb 2015.10.8\n\n\n\u57fa\u672c\u5f62\n\u7c21\u5358\u306a\u6a5f\u68b0\u8a9e\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n$ cat test1.s\nincl %r0\nincl %r1\nmovl %r0,%r1\nmovl %r2,%r3\n$ vax-netbsdelf-as test1.s\n$ vax-netbsdelf-objdump -d a.out\n\uff08\u7565\uff09\n00000000 <.text>:\n   0:   d6 50           incl r0\n   2:   d6 51           incl r1\n   4:   d0 50 51        movl r0,r1\n   7:   d0 52 53        movl r2,r3\n\n\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u3067\u306f\u30ec\u30b8\u30b9\u30bf\u306b%\u3092\u4ed8\u3051\u307e\u3059\u304c\u3001\u9006\u30a2\u30bb\u30f3\u30d6\u30eb\u7d50\u679c\u306b\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u63c3\u3048\u3089\u308c\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u672c\u8cea\u3067\u306f\u306a\u3044\u306e\u3067\u7121\u8996\u3057\u307e\u3059\u3002\n\u6a5f\u68b0\u8a9e\u3092\u898b\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u5bfe\u5fdc\u95a2\u4fc2\u304c\u898b\u3066\u53d6\u308c\u307e\u3059\u3002\nd6 -> incl\nd0 -> movl\n50 -> r0\n51 -> r1\n52 -> r2\n53 -> r3\n\n\u6700\u521d\u306e1\u30d0\u30a4\u30c8\u76ee\u304c\u30aa\u30da\u30b3\u30fc\u30c9\uff08\u547d\u4ee4\u306e\u7a2e\u985e\uff09\u3067\u30012\u30d0\u30a4\u30c8\u76ee\u304b\u3089\u30aa\u30da\u30e9\u30f3\u30c9\u304c\u59cb\u307e\u308a\u307e\u3059\u3002\u30d0\u30a4\u30c8\u5358\u4f4d\u3067\u533a\u5207\u3089\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30aa\u30da\u30b3\u30fc\u30c9\u3068\u30aa\u30da\u30e9\u30f3\u30c9\u3092\u30d3\u30c3\u30c8\u64cd\u4f5c\u3067\u5206\u96e2\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u62e1\u5f35\u30b3\u30fc\u30c9\n1\u30d0\u30a4\u30c8\u76ee\u304c\u30aa\u30da\u30b3\u30fc\u30c9\u304c\u8868\u3059\u3068\u547d\u4ee4\u306f256\u500b\u3057\u304b\u8868\u73fe\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u308c\u3067\u306f\u5c06\u6765\u7684\u306a\u62e1\u5f35\u306e\u4f59\u5730\u304c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u30010xfd-0xff\u306f\u6b21\u306e1\u30d0\u30a4\u30c8\u3082\u542b\u3093\u30602\u30d0\u30a4\u30c8\u304c\u30aa\u30da\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n\n00 - fc\n\n\nfd 00 - fd ff\n\n\nfe 00 - fe ff\n\n\nff 00 - ff ff\n\n\n\u6700\u5927\u30670xfd + 3 * 0x100 = 1021\u500b\u306e\u547d\u4ee4\u304c\u6271\u3048\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u306e\u6271\u3044\u65b9\u306f\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u4f3c\u3066\u3044\u307e\u3059\u3002\n\n\u7dcf\u5f53\u305f\u308a\uff08\u30aa\u30da\u30b3\u30fc\u30c9\uff09\n\u9069\u5f53\u306b\u30aa\u30da\u30e9\u30f3\u30c9\u3092\u4e26\u3079\u3066\u30aa\u30da\u30b3\u30fc\u30c9\u3092\u7dcf\u5f53\u305f\u308a\u3059\u308c\u3070\u3001\u3059\u3079\u3066\u306e\u547d\u4ee4\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u5206\u304b\u308b\u306f\u305a\u3067\u3059\u3002\n0x00\u3067\u8a66\u3057\u307e\u3059\u3002\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u500b\u6570\u304c\u4e0d\u660e\u306a\u306e\u3067\u3001\u9069\u5f53\u306b0x50\u3092\u4e26\u3079\u307e\u3059\u3002\n$ cat 00.s\n.byte 0x00, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50\n$ vax-netbsdelf-as 00.s\n$ vax-netbsdelf-objdump -d a.out\n\uff08\u7565\uff09\n00000000 <.text>:\n   0:   00              halt\n   1:   50 50 50        movf r0,r0\n   4:   50 50 50        movf r0,r0\n\n0x00\u306f\u30aa\u30da\u30e9\u30f3\u30c9\u306a\u3057\u306ehalt\u547d\u4ee4\u3060\u3068\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\u3053\u306e\u8981\u9818\u3067\u3059\u3079\u3066\u3092\u8a66\u3057\u307e\u3059\u30020xfd-0xff\u306e\u6271\u3044\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u500b\u6570\u306b\u3088\u3063\u3066\u547d\u4ee4\u306e\u5207\u308c\u76ee\u304c\u5909\u308f\u308b\u305f\u3081\u30011\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u4e26\u3079\u3066\u66f8\u304f\u3068\u4e0d\u5177\u5408\u304c\u751f\u3058\u307e\u3059\u30021\u3064\u305a\u3064\u5225\u30d5\u30a1\u30a4\u30eb\u3067\u8a66\u3057\u3066\u3001\u6700\u5f8c\u306b\u7d50\u5408\u3057\u307e\u3059\u3002\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u81ea\u52d5\u5316\u3057\u307e\u3059\u304c\u3001\u9023\u756a\u751f\u6210\u3092\u4f7f\u3046\u305f\u3081bash\u4f9d\u5b58\u3067\u3059\u3002\n\nallop.sh\n#!/usr/bin/env bash\n\narch=vax-netbsdelf\nas=$arch-as\ndis=\"$arch-objdump -d\"\n\nrm -f allop.d\nmkdir -p tmp\ncd tmp\n\nfunc() {\n    echo $1\n    echo \".byte $2, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50\" > $1.s\n    $as -o $1.o $1.s\n    $dis $1.o > $1.d\n    head -n8 $1.d | tail -n1 | cut -f2- >> ../allop.d\n}\n\nfor i in {0..252}\ndo\n    hex=`printf \"%02x\" $i`\n    func $hex \"0x$hex\"\ndone\n\nfor i in {253..255}\ndo\n    hex1=`printf \"%02x\" $i`\n    for j in {0..255}\n    do\n        hex2=`printf \"%02x\" $j`\n        func \"$hex1-$hex2\" \"0x$hex1, 0x$hex2\"\n    done\ndone\n\n\n\u5b9f\u884c\u3059\u308b\u3068allop.d\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\nallop.d\n00              halt\n01              nop\n02              rei\n\uff08\u7565\uff09\nff fd 50        bugl r0\nff fe 50        bugw r0\nff ff           .word 0xffff\n\n\n.word\u306f\u672a\u5b9a\u7fa9\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002\n\u547d\u4ee4\u9577\u304c4\u30d0\u30a4\u30c8\u4ee5\u4e0a\u306e\u5834\u5408\u3001\u30c0\u30f3\u30d7\u304c\u9014\u4e2d\u3067\u5207\u308c\u308b\u306e\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002cvtps\u306f\u5b9f\u969b\u306b\u306f5\u30d0\u30a4\u30c8\u547d\u4ee4\u3067\u3059\u3002\n\ntemp/08.d\uff08\u629c\u7c8b\uff09\n   0:   08 50 50 50     cvtps r0,r0,r0,r0\n   4:   50\n\n\n\u62e1\u5f35\u30b3\u30fc\u30c9\u306e\u90e8\u5206\u3092\u898b\u308b\u3068\u3001fd\u306f\u5272\u3068\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u304c\u3001fe\u306f\u672a\u4f7f\u7528\u3001ff\u306f2\u3064\u3057\u304b\u547d\u4ee4\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u547d\u4ee4\u6570\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ grep -v .word allop.d | wc -l\n306\n\n\u4e0a\u9650\u304c1021\u500b\u306a\u306e\u3067\u3001\u307e\u3060\u4f59\u88d5\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u7d44\u307f\u5408\u308f\u305b\n\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u7d44\u307f\u5408\u308f\u305b\u3068\u51fa\u73fe\u6570\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ grep -v .word allop.d | cut -f2 | cut -s -d' ' -f2 | sort | uniq -c\n      2 0x5053\n     14 0x52\n     37 r0\n      4 r0,0x53\n    131 r0,r0\n     10 r0,r0,0x54\n     57 r0,r0,r0\n      5 r0,r0,r0,0x5056\n      2 r0,r0,r0,0x5057\n     19 r0,r0,r0,r0\n      8 r0,r0,r0,r0,r0\n      8 r0,r0,r0,r0,r0,r0\n\n\u3044\u304f\u3064\u304b\u5373\u5024\u304c\u73fe\u308c\u3066\u3044\u307e\u3059\u30020x50\u304b\u3089\u305a\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u76f8\u5bfe\u30a2\u30c9\u30ec\u30b9\u3060\u3068\u63a8\u6e2c\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3068\u3057\u3066bsbb\u3092\u898b\u307e\u3059\u3002\n\ntemp/10.d\uff08\u629c\u7c8b\uff09\n   0:   10 50           bsbb 0x52\n   2:   50 50 50        movf r0,r0\n\n\n\u76f8\u5bfe\u30a2\u30c9\u30ec\u30b9\u306f\u6b21\u306e\u547d\u4ee4\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u57fa\u70b9\u3068\u3057\u307e\u3059\u30022 + 0x50 = 0x52\u3068\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u500b\u6570\nallop.d\u3092\u898b\u308c\u3070\u3001\u547d\u4ee4\u3054\u3068\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u500b\u6570\u304c\u5206\u304b\u308a\u307e\u3059\u3002\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\u30b7\u30a7\u30eb\u82b8\u306b\u306f\u901a\u3058\u3066\u3044\u306a\u3044\u305f\u3081Perl\u306b\u9003\u3052\u307e\u3057\u305f\u3002\n\nallop-c.pl\n#!/usr/bin/env perl\n\nwhile (<>) {\n    chop while substr($_, -1) le \" \";\n    @f = split(/\\t/);\n    @b = split(/ /, $f[0]);\n    if ($f[1] =~ /^(.*?) (.*)/) {\n        $mne = $1;\n        @opr = split(/,/, $2);\n    } else {\n        $mne = $f[1];\n        @opr = ();\n    }\n    if ($mne ne \".word\") {\n        $c = @opr;\n        $r = \"\";\n        if ($c > 0) {\n            $l = length($opr[$c - 1]);\n            if ($l > 2) {\n                --$c;\n                $r = ($l - 2) / 2;\n            }\n        }\n        $op = hex($b[0]) < 0xfd ? $b[0] : \"$b[0]-$b[1]\";\n        print \"$op\\t$c\\t$r\\t$mne\\n\";\n    }\n}\n\n\n\u3010\u6ce8\u3011 hex\u306e\u610f\u5473\u306fPython\u3068\u9006\u3067\u3059\u3002\n\u5b9f\u884c\u7d50\u679c\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ ./allop-c.pl < allop.d > allop-c.txt\n$ cat allop-c.txt\n00  0       halt\n01  0       nop\n\uff08\u7565\uff09\n10  0   1   bsbb\n11  0   1   brb\n\uff08\u7565\uff09\nff-fd   1       bugl\nff-fe   1       bugw\n\n\u76f8\u5bfe\u30a2\u30c9\u30ec\u30b9\u306f\u30ab\u30a6\u30f3\u30c8\u305b\u305a\u306b\u30013\u756a\u76ee\u306e\u30ab\u30e9\u30e0\u306b\u30b5\u30a4\u30ba\uff081\u307e\u305f\u306f2\uff09\u3067\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u30b5\u30a4\u30ba\n\u30aa\u30da\u30e9\u30f3\u30c9\u306f\u305d\u308c\u305e\u308c\u56fa\u6709\u306e\u30b5\u30a4\u30ba\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\u5373\u5024\u3092\u6307\u5b9a\u3057\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002$0x00-$0x3f\u306f\u77ed\u3044\u5f62\u5f0f\u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u308b\u305f\u3081$0x40\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n$ cat test2.s\ntstb $0x40\ntstw $0x40\ntstl $0x40\n$ vax-netbsdelf-as test2.s\n$ vax-netbsdelf-objdump -d a.out\n\uff08\u7565\uff09\n00000000 <.text>:\n   0:   95 8f 40        tstb $0x40\n   3:   b5 8f 40 00     tstw $0x0040\n   7:   d5 8f 40 00     tstl $0x00000040\n   b:   00 00\n\n\u5373\u5024\u306f8f\u3067\u8868\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30b5\u30a4\u30ba\u306f\u547d\u4ee4\u3067\u6c7a\u307e\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\u9006\u306b\u3001\u6a5f\u68b0\u8a9e\u304b\u3089\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u30b5\u30a4\u30ba\u3092\u8abf\u3079\u307e\u3059\u3002\u8abf\u3079\u305f\u3044\u30aa\u30da\u30e9\u30f3\u30c9\u306b8f\u3092\u5165\u308c\u3066\u304a\u3051\u3070\u3001\u51fa\u3066\u6765\u305f\u5373\u5024\u304b\u3089\u30b5\u30a4\u30ba\u304c\u5206\u304b\u308a\u307e\u3059\u3002\ncvtps\u306e\u7b2c2\u30aa\u30da\u30e9\u30f3\u30c9\u3092\u8abf\u3079\u308b\u4f8b\u3067\u3059\u3002\n$ cat test3.s\n.byte 0x08, 0x50, 0x8f, 0x50, 0x50, 0x50, 0x50, 0x50\n$ vax-netbsdelf-as test3.s\n$ vax-netbsdelf-objdump -d a.out\n\uff08\u7565\uff09\n00000000 <.text>:\n   0:   08 50 8f 50     cvtps r0,$0x50,r0,r0\n   4:   50 50\n   6:   movf r0,Address 0x00000008 is out of bounds.\n\n\u7b2c2\u30aa\u30da\u30e9\u30f3\u30c9\u304c$0x50\u3068\u51fa\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u30b5\u30a4\u30ba\u304c1\u30d0\u30a4\u30c8\u3060\u3068\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\u7dcf\u5f53\u305f\u308a\uff08\u30aa\u30da\u30e9\u30f3\u30c9\uff09\n\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u30b5\u30a4\u30ba\u3092\u7dcf\u5f53\u305f\u308a\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\u5148\u307b\u3069\u8abf\u67fb\u3057\u305f\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u500b\u6570\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nallopr.sh\n#!/usr/bin/env bash\n\narch=vax-netbsdelf\nas=$arch-as\ndis=\"$arch-objdump -d\"\n\nrm -f allopr.d\nmkdir -p tmp\ncd tmp\n\nfunc() {\n    $as -o $1.o $1.s\n    $dis $1.o > $1.d\n    head -n8 $1.d | tail -n1 | cut -f2- >> ../allopr.d\n}\n\ndata=`for i in {1..32}; do echo -n \", 0x50\"; done`\n\ncat ../allop-c.txt | while read line\ndo\n    echo $line\n    set -- $line\n    fn=$1\n    c=$2\n    hex=`echo 0x$fn | sed 's/-/, 0x/'`\n    if [ $c -eq 0 ]\n    then\n        echo \".byte $hex$data\" > $fn.s\n        func $fn\n    else\n        i=1\n        while [ $i -le $c ]\n        do\n            echo -n \".byte $hex\" > $fn-$i.s\n            j=1\n            while [ $j -lt $i ]\n            do\n                echo -n \", 0x50\" >> $fn-$i.s\n                j=`expr $j + 1`\n            done\n            echo \", 0x8f$data\" >> $fn-$i.s\n            func $fn-$i\n            i=`expr $i + 1`\n        done\n    fi\ndone\n\n\n\u5b9f\u884c\u3059\u308b\u3068allopr.d\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\nallopr.d\n00              halt\n01              nop\n\uff08\u7565\uff09\n08 8f 50 50     cvtps $0x5050,r0,r0,r0\n08 50 8f 50     cvtps r0,$0x50,r0,r0\n08 50 50 8f     cvtps r0,r0,$0x5050,r0\n08 50 50 50     cvtps r0,r0,r0,$0x50\n\uff08\u7565\uff09\nff fd 8f 50     bugl $0x50505050\nff fe 8f 50     bugw $0x5050\n\n\ncvtps\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u30b5\u30a4\u30ba\u304c 2, 1, 2, 1 \u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u5373\u5024\u306e\u7a2e\u985e\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ cut -f2 allopr.d | cut -s -d' ' -f2- | sed 's/,/\\n/g' | grep '\\$' | sort | uniq\n$0x50\n$0x5050\n$0x50505050\n$0x50505050 [f-float]\n$0x5050505050505050\n$0x5050505050505050 [d-float]\n$0x5050505050505050 [g-float]\n$0x50505050505050505050505050505050\n$0x50505050505050505050505050505050 [h-float]\n\n5\u3064\u306e\u6574\u6570\u578b\uff08b, w, l, q, o\uff09\u30684\u3064\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\uff08f, d, g, h\uff09\u304c\u3042\u308a\u307e\u3059\u3002\u62ec\u5f27\u5185\u306f\u578b\u306e\u7701\u7565\u5f62\u3067\u3059\u3002\n\n\u5206\u6790\n\u7dcf\u5f53\u305f\u308a\u306e\u7d50\u679c\u3092\u5206\u6790\u3057\u3066\u3001\u547d\u4ee4\u3054\u3068\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u578b\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n\nallopr-t.pl\n#!/usr/bin/env perl\n\n%im = (\n    '$0x50'                                         => 'b',\n    '$0x5050'                                       => 'w',\n    '$0x50505050'                                   => 'l',\n    '$0x50505050 [f-float]'                         => 'f',\n    '$0x5050505050505050'                           => 'q',\n    '$0x5050505050505050 [d-float]'                 => 'd',\n    '$0x5050505050505050 [g-float]'                 => 'g',\n    '$0x50505050505050505050505050505050'           => 'o',\n    '$0x50505050505050505050505050505050 [h-float]' => 'h'\n);\n\n$cur = \"\";\n@opt = ();\n\nsub output {\n    if ($cur ne \"\") {\n        print \"$cur\\t$mne\\t\", join(\"\", @opt), \"\\n\";\n        @opt = ();\n    }\n}\n\nwhile (<>) {\n    chop while substr($_, -1) le \" \";\n    @f = split(/\\t/);\n    @b = split(/ /, $f[0]);\n    $op = hex($b[0]) < 0xfd ? $b[0] : \"$b[0]-$b[1]\";\n    if ($cur ne $op) {\n        output();\n        $cur = $op;\n    }\n    if ($f[1] =~ /^(.*?) (.*)/) {\n        $mne = $1;\n        @opr = split(/,/, $2);\n    } else {\n        $mne = $f[1];\n        @opr = ();\n    }\n    $c = @opr;\n    for (my $i = 0; $i < $c; ++$i) {\n        $o = $opr[$i];\n        $t = $im{$o};\n        if ($t ne \"\") {\n            $opt[$i] = $t;\n        } elsif ($o =~ /^0x..$/) {\n            $opt[$i] = \"1\";\n        } elsif ($o =~ /^0x....$/) {\n            $opt[$i] = \"2\";\n        }\n    }\n}\noutput();\n\n\n\u5b9f\u884c\u7d50\u679c\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ ./allopr-t.pl < allopr.d > allopr-t.txt\n$ cat allopr-t.txt\n00  halt    \n01  nop \n\uff08\u7565\uff09\n10  bsbb    1\n11  brb 1\n\uff08\u7565\uff09\n3c  movzwl  wl\n3d  acbw    www2\n\uff08\u7565\uff09\nff-fd   bugl    l\nff-fe   bugw    w\n\n\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u578b\u3092\u7701\u7565\u5f62\u3067\u4e26\u3079\u3066\u3044\u307e\u3059\u304c\u3001\u76f8\u5bfe\u30a2\u30c9\u30ec\u30b9\u306f\u30b5\u30a4\u30ba\uff081\u307e\u305f\u306f2\uff09\u3067\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0a\u3067\u7dcf\u5f53\u305f\u308a\u306b\u3088\u308b\u8abf\u67fb\u306f\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3002\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3084\u51fa\u529b\u7d50\u679c\u306f\u4ee5\u4e0b\u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\nhttps://bitbucket.org/7shi/vax/src/tip/research/\n\n\u8abf\u67fb\u7d50\u679c\u306b\u57fa\u3065\u3044\u3066Java\u3067300\u884c\u7a0b\u5ea6\u306e\u9006\u30a2\u30bb\u30f3\u30d6\u30e9\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\nhttps://bitbucket.org/7shi/vax/src/tip/src/vax/Main.java\n\nVAX\u306e\u547d\u4ee4\u3092\u8abf\u3079\u308b\u305f\u3081\u7dcf\u5f53\u305f\u308a\u3067\u9006\u30a2\u30bb\u30f3\u30d6\u30eb\u3057\u3066\u307f\u307e\u3057\u305f\u3002VAX\u306e\u6a5f\u68b0\u8a9e\u306f\u30b7\u30f3\u30d7\u30eb\u306a\u306e\u3067\u7dcf\u5f53\u305f\u308a\u8abf\u67fb\u304c\u7c21\u5358\u306b\u3067\u304d\u307e\u3057\u305f\u3002\n\nVAX\u306e\u30af\u30ed\u30b9\u958b\u767a\u74b0\u5883\u3092\u524d\u63d0\u3068\u3057\u307e\u3059\u3002\u69cb\u7bc9\u65b9\u6cd5\u306f\u6b21\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n* [UNIX/32V\u306b\u3088\u308bVAX\u4e8b\u59cb\u3081](http://qiita.com/7shi/items/85c4a43a07152c4322d5) 2015.9.14\n\n\u3053\u306e\u8a18\u4e8b\u306b\u306f\u59c9\u59b9\u7de8\u304c\u3042\u308a\u307e\u3059\u3002\n\n* [S/390\u306e\u6a5f\u68b0\u8a9e\u3092\u7dcf\u5f53\u305f\u308a\u8abf\u67fb](http://qiita.com/7shi/items/98c7aa38fe0bd29a7296) 2015.10.8\n\n# \u57fa\u672c\u5f62\n\n\u7c21\u5358\u306a\u6a5f\u68b0\u8a9e\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n```text\n$ cat test1.s\nincl %r0\nincl %r1\nmovl %r0,%r1\nmovl %r2,%r3\n$ vax-netbsdelf-as test1.s\n$ vax-netbsdelf-objdump -d a.out\n\uff08\u7565\uff09\n00000000 <.text>:\n   0:   d6 50           incl r0\n   2:   d6 51           incl r1\n   4:   d0 50 51        movl r0,r1\n   7:   d0 52 53        movl r2,r3\n```\n\n\u30a2\u30bb\u30f3\u30d6\u30ea\u8a00\u8a9e\u3067\u306f\u30ec\u30b8\u30b9\u30bf\u306b`%`\u3092\u4ed8\u3051\u307e\u3059\u304c\u3001\u9006\u30a2\u30bb\u30f3\u30d6\u30eb\u7d50\u679c\u306b\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u63c3\u3048\u3089\u308c\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u672c\u8cea\u3067\u306f\u306a\u3044\u306e\u3067\u7121\u8996\u3057\u307e\u3059\u3002\n\n\u6a5f\u68b0\u8a9e\u3092\u898b\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u5bfe\u5fdc\u95a2\u4fc2\u304c\u898b\u3066\u53d6\u308c\u307e\u3059\u3002\n\n```text\nd6 -> incl\nd0 -> movl\n50 -> r0\n51 -> r1\n52 -> r2\n53 -> r3\n```\n\n\u6700\u521d\u306e1\u30d0\u30a4\u30c8\u76ee\u304c\u30aa\u30da\u30b3\u30fc\u30c9\uff08\u547d\u4ee4\u306e\u7a2e\u985e\uff09\u3067\u30012\u30d0\u30a4\u30c8\u76ee\u304b\u3089\u30aa\u30da\u30e9\u30f3\u30c9\u304c\u59cb\u307e\u308a\u307e\u3059\u3002\u30d0\u30a4\u30c8\u5358\u4f4d\u3067\u533a\u5207\u3089\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30aa\u30da\u30b3\u30fc\u30c9\u3068\u30aa\u30da\u30e9\u30f3\u30c9\u3092\u30d3\u30c3\u30c8\u64cd\u4f5c\u3067\u5206\u96e2\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\n## \u62e1\u5f35\u30b3\u30fc\u30c9\n\n1\u30d0\u30a4\u30c8\u76ee\u304c\u30aa\u30da\u30b3\u30fc\u30c9\u304c\u8868\u3059\u3068\u547d\u4ee4\u306f256\u500b\u3057\u304b\u8868\u73fe\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u308c\u3067\u306f\u5c06\u6765\u7684\u306a\u62e1\u5f35\u306e\u4f59\u5730\u304c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u30010xfd-0xff\u306f\u6b21\u306e1\u30d0\u30a4\u30c8\u3082\u542b\u3093\u30602\u30d0\u30a4\u30c8\u304c\u30aa\u30da\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n* `00` - `fc`\n* `fd 00` - `fd ff`\n* `fe 00` - `fe ff`\n* `ff 00` - `ff ff`\n\n\u6700\u5927\u3067`0xfd + 3 * 0x100 = 1021`\u500b\u306e\u547d\u4ee4\u304c\u6271\u3048\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u306e\u6271\u3044\u65b9\u306f\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u4f3c\u3066\u3044\u307e\u3059\u3002\n\n# \u7dcf\u5f53\u305f\u308a\uff08\u30aa\u30da\u30b3\u30fc\u30c9\uff09\n\n\u9069\u5f53\u306b\u30aa\u30da\u30e9\u30f3\u30c9\u3092\u4e26\u3079\u3066\u30aa\u30da\u30b3\u30fc\u30c9\u3092\u7dcf\u5f53\u305f\u308a\u3059\u308c\u3070\u3001\u3059\u3079\u3066\u306e\u547d\u4ee4\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u5206\u304b\u308b\u306f\u305a\u3067\u3059\u3002\n\n`0x00`\u3067\u8a66\u3057\u307e\u3059\u3002\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u500b\u6570\u304c\u4e0d\u660e\u306a\u306e\u3067\u3001\u9069\u5f53\u306b`0x50`\u3092\u4e26\u3079\u307e\u3059\u3002\n\n```text\n$ cat 00.s\n.byte 0x00, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50\n$ vax-netbsdelf-as 00.s\n$ vax-netbsdelf-objdump -d a.out\n\uff08\u7565\uff09\n00000000 <.text>:\n   0:   00              halt\n   1:   50 50 50        movf r0,r0\n   4:   50 50 50        movf r0,r0\n```\n\n`0x00`\u306f\u30aa\u30da\u30e9\u30f3\u30c9\u306a\u3057\u306e`halt`\u547d\u4ee4\u3060\u3068\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\n\u3053\u306e\u8981\u9818\u3067\u3059\u3079\u3066\u3092\u8a66\u3057\u307e\u3059\u3002`0xfd`-`0xff`\u306e\u6271\u3044\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u500b\u6570\u306b\u3088\u3063\u3066\u547d\u4ee4\u306e\u5207\u308c\u76ee\u304c\u5909\u308f\u308b\u305f\u3081\u30011\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u4e26\u3079\u3066\u66f8\u304f\u3068\u4e0d\u5177\u5408\u304c\u751f\u3058\u307e\u3059\u30021\u3064\u305a\u3064\u5225\u30d5\u30a1\u30a4\u30eb\u3067\u8a66\u3057\u3066\u3001\u6700\u5f8c\u306b\u7d50\u5408\u3057\u307e\u3059\u3002\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u81ea\u52d5\u5316\u3057\u307e\u3059\u304c\u3001\u9023\u756a\u751f\u6210\u3092\u4f7f\u3046\u305f\u3081bash\u4f9d\u5b58\u3067\u3059\u3002\n\n```bash:allop.sh\n#!/usr/bin/env bash\n\narch=vax-netbsdelf\nas=$arch-as\ndis=\"$arch-objdump -d\"\n\nrm -f allop.d\nmkdir -p tmp\ncd tmp\n\nfunc() {\n    echo $1\n    echo \".byte $2, 0x50, 0x50, 0x50, 0x50, 0x50, 0x50\" > $1.s\n    $as -o $1.o $1.s\n    $dis $1.o > $1.d\n    head -n8 $1.d | tail -n1 | cut -f2- >> ../allop.d\n}\n\nfor i in {0..252}\ndo\n    hex=`printf \"%02x\" $i`\n    func $hex \"0x$hex\"\ndone\n\nfor i in {253..255}\ndo\n    hex1=`printf \"%02x\" $i`\n    for j in {0..255}\n    do\n        hex2=`printf \"%02x\" $j`\n        func \"$hex1-$hex2\" \"0x$hex1, 0x$hex2\"\n    done\ndone\n```\n\n\u5b9f\u884c\u3059\u308b\u3068allop.d\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n```text:allop.d\n00          \thalt\n01          \tnop\n02          \trei\n\uff08\u7565\uff09\nff fd 50    \tbugl r0\nff fe 50    \tbugw r0\nff ff       \t.word 0xffff\n```\n\n`.word`\u306f\u672a\u5b9a\u7fa9\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002\n\n\u547d\u4ee4\u9577\u304c4\u30d0\u30a4\u30c8\u4ee5\u4e0a\u306e\u5834\u5408\u3001\u30c0\u30f3\u30d7\u304c\u9014\u4e2d\u3067\u5207\u308c\u308b\u306e\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002`cvtps`\u306f\u5b9f\u969b\u306b\u306f5\u30d0\u30a4\u30c8\u547d\u4ee4\u3067\u3059\u3002\n\n```text:temp/08.d\uff08\u629c\u7c8b\uff09\n   0:   08 50 50 50     cvtps r0,r0,r0,r0\n   4:   50\n```\n\n\u62e1\u5f35\u30b3\u30fc\u30c9\u306e\u90e8\u5206\u3092\u898b\u308b\u3068\u3001`fd`\u306f\u5272\u3068\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u304c\u3001`fe`\u306f\u672a\u4f7f\u7528\u3001`ff`\u306f2\u3064\u3057\u304b\u547d\u4ee4\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u547d\u4ee4\u6570\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```text\n$ grep -v .word allop.d | wc -l\n306\n```\n\n\u4e0a\u9650\u304c1021\u500b\u306a\u306e\u3067\u3001\u307e\u3060\u4f59\u88d5\u304c\u3042\u308a\u307e\u3059\u3002\n\n## \u30aa\u30da\u30e9\u30f3\u30c9\u306e\u7d44\u307f\u5408\u308f\u305b\n\n\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u7d44\u307f\u5408\u308f\u305b\u3068\u51fa\u73fe\u6570\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```text\n$ grep -v .word allop.d | cut -f2 | cut -s -d' ' -f2 | sort | uniq -c\n      2 0x5053\n     14 0x52\n     37 r0\n      4 r0,0x53\n    131 r0,r0\n     10 r0,r0,0x54\n     57 r0,r0,r0\n      5 r0,r0,r0,0x5056\n      2 r0,r0,r0,0x5057\n     19 r0,r0,r0,r0\n      8 r0,r0,r0,r0,r0\n      8 r0,r0,r0,r0,r0,r0\n```\n\n\u3044\u304f\u3064\u304b\u5373\u5024\u304c\u73fe\u308c\u3066\u3044\u307e\u3059\u3002`0x50`\u304b\u3089\u305a\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u76f8\u5bfe\u30a2\u30c9\u30ec\u30b9\u3060\u3068\u63a8\u6e2c\u3067\u304d\u307e\u3059\u3002\n\n\u4f8b\u3068\u3057\u3066`bsbb`\u3092\u898b\u307e\u3059\u3002\n\n```text:temp/10.d\uff08\u629c\u7c8b\uff09\n   0:\t10 50       \tbsbb 0x52\n   2:\t50 50 50    \tmovf r0,r0\n```\n\n\u76f8\u5bfe\u30a2\u30c9\u30ec\u30b9\u306f\u6b21\u306e\u547d\u4ee4\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u57fa\u70b9\u3068\u3057\u307e\u3059\u3002`2 + 0x50 = 0x52`\u3068\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n## \u30aa\u30da\u30e9\u30f3\u30c9\u306e\u500b\u6570\n\nallop.d\u3092\u898b\u308c\u3070\u3001\u547d\u4ee4\u3054\u3068\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u500b\u6570\u304c\u5206\u304b\u308a\u307e\u3059\u3002\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\u30b7\u30a7\u30eb\u82b8\u306b\u306f\u901a\u3058\u3066\u3044\u306a\u3044\u305f\u3081Perl\u306b\u9003\u3052\u307e\u3057\u305f\u3002\n\n```allop-c.pl\n#!/usr/bin/env perl\n\nwhile (<>) {\n    chop while substr($_, -1) le \" \";\n    @f = split(/\\t/);\n    @b = split(/ /, $f[0]);\n    if ($f[1] =~ /^(.*?) (.*)/) {\n        $mne = $1;\n        @opr = split(/,/, $2);\n    } else {\n        $mne = $f[1];\n        @opr = ();\n    }\n    if ($mne ne \".word\") {\n        $c = @opr;\n        $r = \"\";\n        if ($c > 0) {\n            $l = length($opr[$c - 1]);\n            if ($l > 2) {\n                --$c;\n                $r = ($l - 2) / 2;\n            }\n        }\n        $op = hex($b[0]) < 0xfd ? $b[0] : \"$b[0]-$b[1]\";\n        print \"$op\\t$c\\t$r\\t$mne\\n\";\n    }\n}\n```\n\n\u3010\u6ce8\u3011 `hex`\u306e\u610f\u5473\u306fPython\u3068\u9006\u3067\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```text\n$ ./allop-c.pl < allop.d > allop-c.txt\n$ cat allop-c.txt\n00\t0\t\thalt\n01\t0\t\tnop\n\uff08\u7565\uff09\n10\t0\t1\tbsbb\n11\t0\t1\tbrb\n\uff08\u7565\uff09\nff-fd\t1\t\tbugl\nff-fe\t1\t\tbugw\n```\n\n\u76f8\u5bfe\u30a2\u30c9\u30ec\u30b9\u306f\u30ab\u30a6\u30f3\u30c8\u305b\u305a\u306b\u30013\u756a\u76ee\u306e\u30ab\u30e9\u30e0\u306b\u30b5\u30a4\u30ba\uff08`1`\u307e\u305f\u306f`2`\uff09\u3067\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u30aa\u30da\u30e9\u30f3\u30c9\u306e\u30b5\u30a4\u30ba\n\n\u30aa\u30da\u30e9\u30f3\u30c9\u306f\u305d\u308c\u305e\u308c\u56fa\u6709\u306e\u30b5\u30a4\u30ba\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u5373\u5024\u3092\u6307\u5b9a\u3057\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002`$0x00`-`$0x3f`\u306f\u77ed\u3044\u5f62\u5f0f\u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u308b\u305f\u3081`$0x40`\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```text\n$ cat test2.s\ntstb $0x40\ntstw $0x40\ntstl $0x40\n$ vax-netbsdelf-as test2.s\n$ vax-netbsdelf-objdump -d a.out\n\uff08\u7565\uff09\n00000000 <.text>:\n   0:   95 8f 40        tstb $0x40\n   3:   b5 8f 40 00     tstw $0x0040\n   7:   d5 8f 40 00     tstl $0x00000040\n   b:   00 00\n```\n\n\u5373\u5024\u306f`8f`\u3067\u8868\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30b5\u30a4\u30ba\u306f\u547d\u4ee4\u3067\u6c7a\u307e\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\u9006\u306b\u3001\u6a5f\u68b0\u8a9e\u304b\u3089\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u30b5\u30a4\u30ba\u3092\u8abf\u3079\u307e\u3059\u3002\u8abf\u3079\u305f\u3044\u30aa\u30da\u30e9\u30f3\u30c9\u306b`8f`\u3092\u5165\u308c\u3066\u304a\u3051\u3070\u3001\u51fa\u3066\u6765\u305f\u5373\u5024\u304b\u3089\u30b5\u30a4\u30ba\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n`cvtps`\u306e\u7b2c2\u30aa\u30da\u30e9\u30f3\u30c9\u3092\u8abf\u3079\u308b\u4f8b\u3067\u3059\u3002\n\n```text\n$ cat test3.s\n.byte 0x08, 0x50, 0x8f, 0x50, 0x50, 0x50, 0x50, 0x50\n$ vax-netbsdelf-as test3.s\n$ vax-netbsdelf-objdump -d a.out\n\uff08\u7565\uff09\n00000000 <.text>:\n   0:   08 50 8f 50     cvtps r0,$0x50,r0,r0\n   4:   50 50\n   6:   movf r0,Address 0x00000008 is out of bounds.\n```\n\n\u7b2c2\u30aa\u30da\u30e9\u30f3\u30c9\u304c`$0x50`\u3068\u51fa\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u30b5\u30a4\u30ba\u304c1\u30d0\u30a4\u30c8\u3060\u3068\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n# \u7dcf\u5f53\u305f\u308a\uff08\u30aa\u30da\u30e9\u30f3\u30c9\uff09\n\n\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u30b5\u30a4\u30ba\u3092\u7dcf\u5f53\u305f\u308a\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\u5148\u307b\u3069\u8abf\u67fb\u3057\u305f\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u500b\u6570\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```bash:allopr.sh\n#!/usr/bin/env bash\n\narch=vax-netbsdelf\nas=$arch-as\ndis=\"$arch-objdump -d\"\n\nrm -f allopr.d\nmkdir -p tmp\ncd tmp\n\nfunc() {\n    $as -o $1.o $1.s\n    $dis $1.o > $1.d\n    head -n8 $1.d | tail -n1 | cut -f2- >> ../allopr.d\n}\n\ndata=`for i in {1..32}; do echo -n \", 0x50\"; done`\n\ncat ../allop-c.txt | while read line\ndo\n    echo $line\n    set -- $line\n    fn=$1\n    c=$2\n    hex=`echo 0x$fn | sed 's/-/, 0x/'`\n    if [ $c -eq 0 ]\n    then\n        echo \".byte $hex$data\" > $fn.s\n        func $fn\n    else\n        i=1\n        while [ $i -le $c ]\n        do\n            echo -n \".byte $hex\" > $fn-$i.s\n            j=1\n            while [ $j -lt $i ]\n            do\n                echo -n \", 0x50\" >> $fn-$i.s\n                j=`expr $j + 1`\n            done\n            echo \", 0x8f$data\" >> $fn-$i.s\n            func $fn-$i\n            i=`expr $i + 1`\n        done\n    fi\ndone\n```\n\n\u5b9f\u884c\u3059\u308b\u3068allopr.d\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n```text:allopr.d\n00          \thalt\n01          \tnop\n\uff08\u7565\uff09\n08 8f 50 50 \tcvtps $0x5050,r0,r0,r0\n08 50 8f 50 \tcvtps r0,$0x50,r0,r0\n08 50 50 8f \tcvtps r0,r0,$0x5050,r0\n08 50 50 50 \tcvtps r0,r0,r0,$0x50\n\uff08\u7565\uff09\nff fd 8f 50 \tbugl $0x50505050\nff fe 8f 50 \tbugw $0x5050\n```\n\n`cvtps`\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u30b5\u30a4\u30ba\u304c 2, 1, 2, 1 \u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n\u5373\u5024\u306e\u7a2e\u985e\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```text\n$ cut -f2 allopr.d | cut -s -d' ' -f2- | sed 's/,/\\n/g' | grep '\\$' | sort | uniq\n$0x50\n$0x5050\n$0x50505050\n$0x50505050 [f-float]\n$0x5050505050505050\n$0x5050505050505050 [d-float]\n$0x5050505050505050 [g-float]\n$0x50505050505050505050505050505050\n$0x50505050505050505050505050505050 [h-float]\n```\n\n5\u3064\u306e\u6574\u6570\u578b\uff08b, w, l, q, o\uff09\u30684\u3064\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\uff08f, d, g, h\uff09\u304c\u3042\u308a\u307e\u3059\u3002\u62ec\u5f27\u5185\u306f\u578b\u306e\u7701\u7565\u5f62\u3067\u3059\u3002\n\n## \u5206\u6790\n\n\u7dcf\u5f53\u305f\u308a\u306e\u7d50\u679c\u3092\u5206\u6790\u3057\u3066\u3001\u547d\u4ee4\u3054\u3068\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u578b\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n\n```allopr-t.pl\n#!/usr/bin/env perl\n\n%im = (\n    '$0x50'                                         => 'b',\n    '$0x5050'                                       => 'w',\n    '$0x50505050'                                   => 'l',\n    '$0x50505050 [f-float]'                         => 'f',\n    '$0x5050505050505050'                           => 'q',\n    '$0x5050505050505050 [d-float]'                 => 'd',\n    '$0x5050505050505050 [g-float]'                 => 'g',\n    '$0x50505050505050505050505050505050'           => 'o',\n    '$0x50505050505050505050505050505050 [h-float]' => 'h'\n);\n\n$cur = \"\";\n@opt = ();\n\nsub output {\n    if ($cur ne \"\") {\n        print \"$cur\\t$mne\\t\", join(\"\", @opt), \"\\n\";\n        @opt = ();\n    }\n}\n\nwhile (<>) {\n    chop while substr($_, -1) le \" \";\n    @f = split(/\\t/);\n    @b = split(/ /, $f[0]);\n    $op = hex($b[0]) < 0xfd ? $b[0] : \"$b[0]-$b[1]\";\n    if ($cur ne $op) {\n        output();\n        $cur = $op;\n    }\n    if ($f[1] =~ /^(.*?) (.*)/) {\n        $mne = $1;\n        @opr = split(/,/, $2);\n    } else {\n        $mne = $f[1];\n        @opr = ();\n    }\n    $c = @opr;\n    for (my $i = 0; $i < $c; ++$i) {\n        $o = $opr[$i];\n        $t = $im{$o};\n        if ($t ne \"\") {\n            $opt[$i] = $t;\n        } elsif ($o =~ /^0x..$/) {\n            $opt[$i] = \"1\";\n        } elsif ($o =~ /^0x....$/) {\n            $opt[$i] = \"2\";\n        }\n    }\n}\noutput();\n```\n\n\u5b9f\u884c\u7d50\u679c\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```text\n$ ./allopr-t.pl < allopr.d > allopr-t.txt\n$ cat allopr-t.txt\n00\thalt\t\n01\tnop\t\n\uff08\u7565\uff09\n10\tbsbb\t1\n11\tbrb\t1\n\uff08\u7565\uff09\n3c\tmovzwl\twl\n3d\tacbw\twww2\n\uff08\u7565\uff09\nff-fd\tbugl\tl\nff-fe\tbugw\tw\n```\n\n\u30aa\u30da\u30e9\u30f3\u30c9\u306e\u578b\u3092\u7701\u7565\u5f62\u3067\u4e26\u3079\u3066\u3044\u307e\u3059\u304c\u3001\u76f8\u5bfe\u30a2\u30c9\u30ec\u30b9\u306f\u30b5\u30a4\u30ba\uff08`1`\u307e\u305f\u306f`2`\uff09\u3067\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3067\u7dcf\u5f53\u305f\u308a\u306b\u3088\u308b\u8abf\u67fb\u306f\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3002\n\n# \u307e\u3068\u3081\n\n\u4eca\u56de\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3084\u51fa\u529b\u7d50\u679c\u306f\u4ee5\u4e0b\u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\n* https://bitbucket.org/7shi/vax/src/tip/research/\n\n\u8abf\u67fb\u7d50\u679c\u306b\u57fa\u3065\u3044\u3066Java\u3067300\u884c\u7a0b\u5ea6\u306e\u9006\u30a2\u30bb\u30f3\u30d6\u30e9\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n* https://bitbucket.org/7shi/vax/src/tip/src/vax/Main.java\n", "tags": ["VAX", "\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8", "Perl"]}