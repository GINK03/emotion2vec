{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u6700\u8fd1\u975e\u540c\u671f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u89e6\u308c\u308b\u6a5f\u4f1a\u304c\u5897\u3048\u3066\u304d\u3066\u3044\u307e\u3059\u304c\u3001\u8a00\u8a9e\u3054\u3068\u306b\u4f7f\u3044\u65b9\u304c\u5c11\u3057\u305a\u3064\u7570\u306a\u308b\u306e\u3067\u3001\u3088\u304f\u4f7f\u3046Java\u3001JavaScript(ECMAScript6)\u3001Scala \u306b\u3064\u3044\u3066\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u307e\u3068\u3081\u308b\u524d\u306e\u6642\u70b9\u3067\u306f\u3053\u3093\u306a\u7a0b\u5ea6\u306e\u7406\u89e3\u3067\u3057\u305f\u3002\n\nFuture \u306f get \u3059\u308b\u3068\u30d6\u30ed\u30c3\u30af\u3059\u308b\u3084\u3064\u3060\u3088\u306d\uff01\nPromise \u306f \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u767b\u9332\u3059\u308b\u3084\u3064\u3067 Future \u3068\u30bb\u30c3\u30c8\u3067\u4f7f\u3046\u3093\u3060\u3088\u306d\uff01\n\u30b9\u30ec\u30c3\u30c9\u306b\u8cac\u4efb\u6301\u3063\u3066\u3044\u308b\u30af\u30e9\u30b9\u3068\u306e\u9023\u643a\u304c\u5fc5\u8981\u306a\u306f\u305a\u3060\u3051\u3069\u30b0\u30b0\u3089\u306a\u3044\u3068\u308f\u304b\u3089\u306a\u3044\u3084\u2026\u2026\n\u30a8\u30e9\u30fc\u51e6\u7406\u3068\u304b\u3069\u3046\u3059\u308b\u3093\u3060\u308d\u3046\uff1f\n\n\nJava 1.5 \u4ee5\u964d\u306e\u5834\u5408\n1.5 \u4ee5\u964d\u3001java.util.concurrent \u914d\u4e0b\u306b\u3001\u975e\u540c\u671f\u5b9f\u884c\u306b\u95a2\u9023\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nFuture<V>\n\nget \u3067\u7d50\u679cV\u304c\u8fd4\u3063\u3066\u304f\u308b\u307e\u3067\u5f85\u3064\n\ncancel \u3067 \u30ad\u30e3\u30f3\u30bb\u30eb\u3002isCanceled\u3001isDone \u3067\u72b6\u614b\u3092\u8abf\u3079\u3089\u308c\u308b\n\u751f\u6210\u306f Future<T> ExecutorService.submit(Callable<T> myfunc) \u306b\u4f9d\u983c\n\n\n\nCallable<V> \u306f V call() \u3068\u3044\u3046\u91cd\u3044\u51e6\u7406\u3092\u5165\u308c\u308b\u305f\u3081\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u6301\u3064\n\u51e6\u7406\u7d50\u679c\u304c\u3044\u3089\u306a\u3044\u306a\u3089 Future<?> ExecutorService.submit(Runnable myfunc) \u3082\u3042\u308b\n\n\n\n\nFutureTask<V>\n\n\nFuture \u3068 Runnable \u3092\u7d99\u627f\u3057\u3066\u304a\u308a\u3001\u5b8c\u4e86\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af done \u3092\u6301\u3063\u3066\u3044\u308b\n\u751f\u6210\u3059\u308b\u3068\u304d\u306b Callable \u3092\u5f15\u6570\u306b\u3068\u308b\n\nRunnable \u3060\u304b\u3089 ExecuterService \u306b\u6e21\u3059\u3068\u304d\u306f void execute(Runnable job) \u30e1\u30bd\u30c3\u30c9\u3002submit \u3060\u3068\u623b\u308a\u5024\u3067\u5225\u306eFuture\u304c\u8fd4\u3063\u3066\u304d\u3066\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3053\u3068\u306b\n\n\u300cFuture\u304c\u5b8c\u4e86\u3057\u305f\u3089\u4f55\u304b\u3092\u3059\u308b\u300d\u3068\u3044\u3046\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u307e\u308f\u308a\u3092\u3069\u3046\u66f8\u304f\u3079\u304d\u304b\u60a9\u307e\u3057\u3044\u307e\u307e\u30b3\u30fc\u30c9\u4f8b\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u3044\u308c\u3088\u3046\u3068\u3059\u308b\u3068 Future.get(long, TimeUnit) \u3092\u4f7f\u3046\u3057\u304b\u306a\u304f\u3001\u305d\u3046\u3059\u308b\u3068 done \u306f\u4f55\u3092\u3057\u305f\u3089\u3088\u3044\u306e\uff1f\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3084\u308a\u305f\u3044\u3053\u3068\u3068 FutureTask \u304c\u5408\u308f\u306a\u3044\u611f\u3058\u3067\u3059\u3002\n\u30b0\u30b0\u3063\u3066\u307f\u3066\u3082\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u767b\u9332\u3059\u308b\u4f8b\u304c\u3067\u3066\u3053\u306a\u3044\u3057\u3001\u73fe\u5b9f\u7684\u306b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f\u7121\u8996\u3067\u304d\u306a\u3044\u4ee5\u4e0a\u3001FutureTask \u306f\u51e6\u7406\u7d42\u4e86\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3059\u5341\u5206\u306a\u6a5f\u80fd\u3092\u6301\u3063\u3066\u306a\u3044\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\n\nFutureSample.java\n        ExecutorService executor = Executors.newSingleThreadExecutor();\n\n        // \u91cd\u3044\u51e6\u7406\u3092\u767b\u9332\n        Callable<String> heavy = new Callable<String>() {\n            @Override public String call() throws InterruptedException {\n                Thread.sleep(2000);\n                return \"Je suis fatigue!\";\n            }\n        };\n\n        // \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u767b\u9332\n        FutureTask<String> myTask = new FutureTask<String>(heavy) {\n            @Override protected void done() {\n                try {\n                    puts(\"result: \" + get()); // \u3053\u3053\u3067\u306f\u30d6\u30ed\u30c3\u30af\u3057\u306a\u3044\n                } catch {} // \u8a18\u8ff0\u7701\u7565\n            }\n        };\n\n        // \u5b9f\u884c!!\n        executor.execute(myTask);\n\n        // \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u8003\u616e\u3057\u3088\u3046\u3068\u3059\u308b\u3068 get \u306e\u4ed6\u306e\u65b9\u6cd5\u304c\u898b\u3064\u304b\u3089\u305a\u3001get\u3057\u3066\u3057\u307e\u3046\u3068 done \u3092\u5b9a\u7fa9\u3057\u305f\u610f\u5473\u304c\u306a\u304f\u306a\u308b\n        String result = myTask.get(1000, TimeUnit.MILLISECONDS)\n\n        executor.shutdown();\n\n\n\nJava8\u306e\u5834\u5408\n\nCompletableFuture \u3068 CompletionStage\n\u3068\u601d\u3063\u3066\u8abf\u3079\u3066\u3044\u305f\u3089\u3001Java8 \u306b CompletableFuture \u304c\u5c0e\u5165\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n\ncomplete \u3067\u5916\u90e8\u304b\u3089\u306e\u5b8c\u4e86\u901a\u77e5\u3092\u53d7\u3051\u307e\u3059\nCompletableFuture.supplyAsync(Supplier myfunc) \u3067 CompletableFuture \u3092\u751f\u6210\u3059\u308b\u3002executor\u3092\u5f15\u6570\u306b\u3068\u308b\u3053\u3068\u3082\u3067\u304d\u308b\n\n\u7d50\u679c\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u3001\u89aa\u30af\u30e9\u30b9\u306e CompletionStage \u306e\u30e1\u30bd\u30c3\u30c9\u7fa4\u3067\u884c\u3046\n\n\nstage.thenApply(x -> x * 2).thenApply(x -> newStage(x)).thenRun(x -> System.out.println()) \u306e\u3088\u3046\u306b\u66f8\u3051\u308b\u3088\u3046\u3060\n\n\n\u305f\u3060\u3001\u5229\u7528\u65b9\u6cd5\u306e\u7d44\u307f\u5408\u308f\u305b\u6bce\u306b\u81a8\u5927\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u628a\u63e1\u3067\u304d\u305d\u3046\u2026\u2026\u3068\u601d\u3063\u305f\u3051\u3069\u3061\u3087\u3063\u3068\u899a\u3048\u3089\u308c\u308b\u6c17\u304c\u3057\u306a\u3044\n\n\nCompletionStage\u30e1\u30bd\u30c3\u30c9\u63a2\u691c\n\n\u5148\u982d\u306e\u52d5\u8a5e\u90e8\u5206\n\n\nrunAfterXX : \u6b63\u5e38\u7d42\u4e86\u6642\u306b Runnable \u306b\u6e21\u3059\u3002\uff08\u7d50\u679c\u306f\u305d\u3053\u3067\u9014\u5207\u308c\u308b\uff09\n\nacceptXX : \u6b63\u5e38\u7d42\u4e86\u6642\u306b Consumer \u306b\u6e21\u3059\u3002\uff08\u7d50\u679c\u306f\u305d\u3053\u3067\u9014\u5207\u308c\u308b\uff09\n\napplyXX : \u6b63\u5e38\u7d42\u4e86\u6642\u306b Function \u306b\u6e21\u3059\u3002Either \u306e\u524d\u306e\u6642\u306f To \u304c\u4ed8\u3044\u3066 applyToEitherXX \u306b\u306a\u308b\n\nhandleXX : \u6b63\u5e38\u7d42\u4e86\u3068\u7570\u5e38\u7d42\u4e86\u3092\u4e21\u65b9\u6271\u3048\u308b BiConsumer \u306b\u6e21\u3059\u3002\n\nthen... : \u81ea\u5206\u81ea\u8eab\u306e\u7d42\u4e86\u3092\u5f85\u3064\u3068\u304d\u306e\u6795\u8a5e\u3002Either \u306e\u6642\u306f then \u306f\u3064\u304b\u306a\u3044\u3002\u305f\u3060\u3057Both \u306e\u5834\u5408\u3067\u3082 thenRunBoth \u3067\u306f\u306a\u304f\u3066 runAfterBoth \u3060\u3063\u305f\u308a\u3057\u3066\u5c11\u3005\u4e0d\u898f\u5247\u5909\u5316\u3057\u3066\u3044\u308b\n\nwhenComplete : BiConsumer \u3092\u3068\u308a\u3001\u7d42\u4e86\u6642\u306b\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\u304c\u5143\u306e\u7d50\u679c\u3092\u5f15\u304d\u7d99\u3050(tap\u7684\u306a\u3082\u306e)\n\n\n\u540c\u671f\u307e\u305f\u306f\u975e\u540c\u671f\n\n\nXXAsync : \u5f15\u6570\u306e\u6700\u5f8c\u306b Executor \u3092\u3068\u308c\u308b\u3002\u7701\u7565\u3059\u308b\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u306eExecutor\u306b\u306a\u308b\n\n\n\u4ed6\u306e ComplationStage \u3068\u306e\u5f85\u3061\u5408\u308f\u305b\u3084\u5408\u6210\n\n\nEither  : \u5f15\u6570\u306b \u4ed6\u306e CompletionStage \u3092\u3068\u308a\u3001\u305d\u3061\u3089\u306e\u7d42\u4e86\u7d50\u679c\u3092\u5f85\u3061\u5408\u308f\u305b\u308b\u3002\n\nBoth : \u5f15\u6570\u306b\u4ed6\u306e CompletionStage \u3092\u3068\u308a\u3001\u3053\u308c\u3068\u81ea\u5206\u81ea\u8eab\u306e\u4e21\u65b9\u306e\u7d42\u4e86\u3092\u5f85\u3061 BiFunction \u3084 BiConsumer \u306b\u6e21\u3059\n\ncompose : apply\u3060\u3051\u3069 \u95a2\u6570\u306e\u623b\u308a\u5024\u304c ComplationStage \u306e\u5834\u5408\n\ncombine : applyBoth \u306f\u5b58\u5728\u305b\u305a\u3001\u305d\u308c\u306b\u76f8\u5f53\u3059\u308b\u3082\u306e\u3092 combine \u3068\u547c\u3093\u3067\u3044\u308b\u3088\u3046\u3060\n\n\u3053\u3061\u3089\u306e\u8a18\u4e8b \u3082\u53c2\u8003\u306b\u306a\u308a\u307e\u3057\u305f\n\nPlay! Framework 1 for Java \u306e\u5834\u5408\nPlay1 \u306b\u306f F.Promise \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\nFuture<V> \u3068 F.Action<V> \u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\n\n\n\nFufure<V> \u306f java.util.concurrent \u306e\u3082\u306e\u306a\u306e\u3067 get \u3067\u304d\u308b\n\nAction<V> \u306f  void invoke(V result) \u306e\u307f\u5b9a\u7fa9\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9 \n\n\n\nV get() \u3067\u7d50\u679c\u304c\u8fd4\u308b\u307e\u3067\u30d6\u30ed\u30c3\u30af\n\nonRedeem(Action<Promise<V>> callback) \u3067\u5b8c\u4e86\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u767b\u9332\u3002\u3044\u304f\u3064\u3067\u3082\u767b\u9332\u3067\u304d\u308b\u3002\n\n\n\u8ab0\u304c\u3069\u3046\u3084\u3063\u3066\u5b8c\u4e86\u3092\u901a\u77e5\u3059\u308b\u306e\u304b\uff1f\n\n\ninvoke(V result) \u3067\u7d50\u679c\u3092\u767b\u9332\n\u3053\u306e Promise \u3092\u5f15\u6570\u306b\u3068\u308b Callable \u3092\u4f5c\u308a\u3001call() \u306e\u4e2d\u306e\u91cd\u3044\u51e6\u7406\u306e\u6700\u5f8c\u306b invoke \u3092\u305f\u305f\u304f\u4f5c\u308a\u306b\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3088\u3046\u3060\n\u305d\u3046\u3084\u3063\u3066\u4f5c\u3063\u305f Callable \u3092\u30b9\u30ec\u30c3\u30c9\u4f5c\u308b\u4eba\u306b\u6e21\u3059\u3002\n\nplay.jobs.Job \u304b\u3089 Promise \u751f\u6210\u90e8\u5206\u306e\u4f8b\u3092\u629c\u7c8b\n\nJob.java\n    public Promise<V> in(int seconds) {\n        final Promise<V> smartFuture = new Promise<V>();\n        JobsPlugin.executor.schedule(getJobCallingCallable(smartFuture), seconds, TimeUnit.SECONDS);\n        return smartFuture;\n    }\n\n    private Callable<V> getJobCallingCallable(final Promise<V> smartFuture) {\n      return new Callable<V>() {\n        public V call() throws Exception {\n          try {\n            V result = Job.this.call();\n            if (smartFuture != null) {\n              smartFuture.invoke(result);\n            }\n            return result;\n          }\n          catch (Exception e) {\n            if (smartFuture != null) {\n              smartFuture.invokeWithException(e);\n              }\n            return null;\n          }\n        }\n      };\n    }\n\n\n\nPromise \u306f\u5408\u6210\u304c\u3067\u304d\u307e\u3059\n\n\nPromise<List<T>> Promise.waitAll(Promise<V> promises...) \u3067 Promise \u3092\u5408\u6210\u3067\u304d\u308b\u3002\n Promise<F.Tuple<A, B>> wait2(Promise<A> tA, Promise<B> tB) \u306a\u3069\u578b\u304c\u9055\u3046 Promise \u3092\u5408\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\u3053\u308c\u3089\u306f\u3059\u3079\u3066\u306e Promise \u306e\u7d42\u4e86\u3092\u5f85\u3064\n\u4e00\u3064\u3067\u3082\u5148\u306b\u7d42\u308f\u308c\u3070\u3088\u3044\u5834\u5408\u306f Promise<T> waitAny(Promise<T>... futures)\u3001Promise<T> waitEither(Promise<A> tA, Promise<B> tB)) \u304c\u3042\u308b\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u305f\u3044\u5834\u5408\u306f Timeout \u3068\u3044\u3046 Promise \u3092\u7d99\u627f\u3057\u305f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u7528\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u3001waitAny \u3067\u5408\u6210\u3059\u308b\u3088\u3046\u3060\n\nPromise task = F.Promise.waitAny(F.Timeout(100), myPromise);\n\n\nF.EventStream\n\u3053\u3061\u3089\u3082\u9762\u767d\u305d\u3046\u3067\u3059\u304c\u3001\u5927\u5909\u305d\u3046\u306a\u306e\u3067\u4eca\u56de\u306f\u30d1\u30b9\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u53c2\u8003: Play1 \u306e Promise \u306e\u30bd\u30fc\u30b9\n\nPlay2Java\u3001JavaScript\u3001Scala\n\u3084\u306f\u308a\u3068\u3044\u3046\u304b\u306a\u3093\u3068\u3044\u3046\u304b\u3001\u601d\u3063\u305f\u3088\u308a\u5927\u5909\u306a\u306e\u3067 Play2Java\u3001JavaScript\u3001 Scala \u306f\u6b21\u56de\u306b\u7d9a\u304f\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u6700\u8fd1\u975e\u540c\u671f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u89e6\u308c\u308b\u6a5f\u4f1a\u304c\u5897\u3048\u3066\u304d\u3066\u3044\u307e\u3059\u304c\u3001\u8a00\u8a9e\u3054\u3068\u306b\u4f7f\u3044\u65b9\u304c\u5c11\u3057\u305a\u3064\u7570\u306a\u308b\u306e\u3067\u3001\u3088\u304f\u4f7f\u3046Java\u3001JavaScript(ECMAScript6)\u3001Scala \u306b\u3064\u3044\u3066\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u307e\u3068\u3081\u308b\u524d\u306e\u6642\u70b9\u3067\u306f\u3053\u3093\u306a\u7a0b\u5ea6\u306e\u7406\u89e3\u3067\u3057\u305f\u3002\n\n* Future \u306f get \u3059\u308b\u3068\u30d6\u30ed\u30c3\u30af\u3059\u308b\u3084\u3064\u3060\u3088\u306d\uff01\n* Promise \u306f \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u767b\u9332\u3059\u308b\u3084\u3064\u3067 Future \u3068\u30bb\u30c3\u30c8\u3067\u4f7f\u3046\u3093\u3060\u3088\u306d\uff01\n* \u30b9\u30ec\u30c3\u30c9\u306b\u8cac\u4efb\u6301\u3063\u3066\u3044\u308b\u30af\u30e9\u30b9\u3068\u306e\u9023\u643a\u304c\u5fc5\u8981\u306a\u306f\u305a\u3060\u3051\u3069\u30b0\u30b0\u3089\u306a\u3044\u3068\u308f\u304b\u3089\u306a\u3044\u3084\u2026\u2026\n* \u30a8\u30e9\u30fc\u51e6\u7406\u3068\u304b\u3069\u3046\u3059\u308b\u3093\u3060\u308d\u3046\uff1f\n\n# Java 1.5 \u4ee5\u964d\u306e\u5834\u5408\n\n1.5 \u4ee5\u964d\u3001`java.util.concurrent` \u914d\u4e0b\u306b\u3001\u975e\u540c\u671f\u5b9f\u884c\u306b\u95a2\u9023\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n### Future\\<V\\>\n * get \u3067\u7d50\u679cV\u304c\u8fd4\u3063\u3066\u304f\u308b\u307e\u3067\u5f85\u3064\n * `cancel` \u3067 \u30ad\u30e3\u30f3\u30bb\u30eb\u3002`isCanceled`\u3001`isDone` \u3067\u72b6\u614b\u3092\u8abf\u3079\u3089\u308c\u308b\n * \u751f\u6210\u306f `Future<T> ExecutorService.submit(Callable<T> myfunc)` \u306b\u4f9d\u983c\n  * `Callable<V>` \u306f `V call()` \u3068\u3044\u3046\u91cd\u3044\u51e6\u7406\u3092\u5165\u308c\u308b\u305f\u3081\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u6301\u3064\n  * \u51e6\u7406\u7d50\u679c\u304c\u3044\u3089\u306a\u3044\u306a\u3089 `Future<?> ExecutorService.submit(Runnable myfunc)` \u3082\u3042\u308b\n  \n### FutureTask\\<V\\> \n * `Future` \u3068 `Runnable` \u3092\u7d99\u627f\u3057\u3066\u304a\u308a\u3001\u5b8c\u4e86\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af done \u3092\u6301\u3063\u3066\u3044\u308b\n * \u751f\u6210\u3059\u308b\u3068\u304d\u306b `Callable` \u3092\u5f15\u6570\u306b\u3068\u308b\n * `Runnable` \u3060\u304b\u3089 `ExecuterService` \u306b\u6e21\u3059\u3068\u304d\u306f `void execute(Runnable job)` \u30e1\u30bd\u30c3\u30c9\u3002`submit` \u3060\u3068\u623b\u308a\u5024\u3067\u5225\u306eFuture\u304c\u8fd4\u3063\u3066\u304d\u3066\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3053\u3068\u306b\n\n\u300c`Future`\u304c\u5b8c\u4e86\u3057\u305f\u3089\u4f55\u304b\u3092\u3059\u308b\u300d\u3068\u3044\u3046\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u307e\u308f\u308a\u3092\u3069\u3046\u66f8\u304f\u3079\u304d\u304b\u60a9\u307e\u3057\u3044\u307e\u307e\u30b3\u30fc\u30c9\u4f8b\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u3044\u308c\u3088\u3046\u3068\u3059\u308b\u3068 `Future.get(long, TimeUnit)` \u3092\u4f7f\u3046\u3057\u304b\u306a\u304f\u3001\u305d\u3046\u3059\u308b\u3068 done \u306f\u4f55\u3092\u3057\u305f\u3089\u3088\u3044\u306e\uff1f\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3084\u308a\u305f\u3044\u3053\u3068\u3068 `FutureTask` \u304c\u5408\u308f\u306a\u3044\u611f\u3058\u3067\u3059\u3002\n\n\u30b0\u30b0\u3063\u3066\u307f\u3066\u3082\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u767b\u9332\u3059\u308b\u4f8b\u304c\u3067\u3066\u3053\u306a\u3044\u3057\u3001\u73fe\u5b9f\u7684\u306b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f\u7121\u8996\u3067\u304d\u306a\u3044\u4ee5\u4e0a\u3001`FutureTask` \u306f\u51e6\u7406\u7d42\u4e86\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3059\u5341\u5206\u306a\u6a5f\u80fd\u3092\u6301\u3063\u3066\u306a\u3044\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\n\n```java:FutureSample.java\n\t\tExecutorService executor = Executors.newSingleThreadExecutor();\n\t\t\n\t\t// \u91cd\u3044\u51e6\u7406\u3092\u767b\u9332\n\t\tCallable<String> heavy = new Callable<String>() {\n\t\t\t@Override public String call() throws InterruptedException {\n\t\t\t\tThread.sleep(2000);\n\t\t\t\treturn \"Je suis fatigue!\";\n\t\t\t}\n\t\t};\n\t\t\n\t\t// \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u767b\u9332\n\t\tFutureTask<String> myTask = new FutureTask<String>(heavy) {\n\t\t\t@Override protected void done() {\n\t\t\t\ttry {\n\t\t\t\t\tputs(\"result: \" + get()); // \u3053\u3053\u3067\u306f\u30d6\u30ed\u30c3\u30af\u3057\u306a\u3044\n\t\t\t\t} catch {} // \u8a18\u8ff0\u7701\u7565\n\t\t\t}\n\t\t};\n\t\t\n\t\t// \u5b9f\u884c!!\n\t\texecutor.execute(myTask);\n                \n\t\t// \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3092\u8003\u616e\u3057\u3088\u3046\u3068\u3059\u308b\u3068 get \u306e\u4ed6\u306e\u65b9\u6cd5\u304c\u898b\u3064\u304b\u3089\u305a\u3001get\u3057\u3066\u3057\u307e\u3046\u3068 done \u3092\u5b9a\u7fa9\u3057\u305f\u610f\u5473\u304c\u306a\u304f\u306a\u308b\n\t\tString result = myTask.get(1000, TimeUnit.MILLISECONDS)\n\t\t\n\t\texecutor.shutdown();\n```\n\n# Java8\u306e\u5834\u5408\n\n### CompletableFuture \u3068 CompletionStage\n\u3068\u601d\u3063\u3066\u8abf\u3079\u3066\u3044\u305f\u3089\u3001Java8 \u306b [CompletableFuture](https://docs.oracle.com/javase/jp/8/api/java/util/concurrent/CompletableFuture.html) \u304c\u5c0e\u5165\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n* `complete` \u3067\u5916\u90e8\u304b\u3089\u306e\u5b8c\u4e86\u901a\u77e5\u3092\u53d7\u3051\u307e\u3059\n* `CompletableFuture.supplyAsync(Supplier myfunc)` \u3067 `CompletableFuture` \u3092\u751f\u6210\u3059\u308b\u3002executor\u3092\u5f15\u6570\u306b\u3068\u308b\u3053\u3068\u3082\u3067\u304d\u308b\n\n* \u7d50\u679c\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u3001\u89aa\u30af\u30e9\u30b9\u306e [CompletionStage](https://docs.oracle.com/javase/jp/8/api/java/util/concurrent/CompletionStage.html) \u306e\u30e1\u30bd\u30c3\u30c9\u7fa4\u3067\u884c\u3046\n  * `stage.thenApply(x -> x * 2).thenApply(x -> newStage(x)).thenRun(x -> System.out.println())` \u306e\u3088\u3046\u306b\u66f8\u3051\u308b\u3088\u3046\u3060\n* \u305f\u3060\u3001\u5229\u7528\u65b9\u6cd5\u306e\u7d44\u307f\u5408\u308f\u305b\u6bce\u306b\u81a8\u5927\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u628a\u63e1\u3067\u304d\u305d\u3046\u2026\u2026\u3068\u601d\u3063\u305f\u3051\u3069\u3061\u3087\u3063\u3068\u899a\u3048\u3089\u308c\u308b\u6c17\u304c\u3057\u306a\u3044\n\n### CompletionStage\u30e1\u30bd\u30c3\u30c9\u63a2\u691c\n#### \u5148\u982d\u306e\u52d5\u8a5e\u90e8\u5206\n  * `runAfterXX` : \u6b63\u5e38\u7d42\u4e86\u6642\u306b `Runnable` \u306b\u6e21\u3059\u3002\uff08\u7d50\u679c\u306f\u305d\u3053\u3067\u9014\u5207\u308c\u308b\uff09\n  * `acceptXX` : \u6b63\u5e38\u7d42\u4e86\u6642\u306b `Consumer` \u306b\u6e21\u3059\u3002\uff08\u7d50\u679c\u306f\u305d\u3053\u3067\u9014\u5207\u308c\u308b\uff09\n  * `applyXX` : \u6b63\u5e38\u7d42\u4e86\u6642\u306b `Function` \u306b\u6e21\u3059\u3002Either \u306e\u524d\u306e\u6642\u306f To \u304c\u4ed8\u3044\u3066 `applyToEitherXX` \u306b\u306a\u308b\n  * `handleXX` : \u6b63\u5e38\u7d42\u4e86\u3068\u7570\u5e38\u7d42\u4e86\u3092\u4e21\u65b9\u6271\u3048\u308b `BiConsumer` \u306b\u6e21\u3059\u3002\n  * `then...` : \u81ea\u5206\u81ea\u8eab\u306e\u7d42\u4e86\u3092\u5f85\u3064\u3068\u304d\u306e\u6795\u8a5e\u3002Either \u306e\u6642\u306f then \u306f\u3064\u304b\u306a\u3044\u3002\u305f\u3060\u3057Both \u306e\u5834\u5408\u3067\u3082 thenRunBoth \u3067\u306f\u306a\u304f\u3066 runAfterBoth \u3060\u3063\u305f\u308a\u3057\u3066\u5c11\u3005\u4e0d\u898f\u5247\u5909\u5316\u3057\u3066\u3044\u308b\n  * `whenComplete` : `BiConsumer` \u3092\u3068\u308a\u3001\u7d42\u4e86\u6642\u306b\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\u304c\u5143\u306e\u7d50\u679c\u3092\u5f15\u304d\u7d99\u3050(tap\u7684\u306a\u3082\u306e)\n\n#### \u540c\u671f\u307e\u305f\u306f\u975e\u540c\u671f\n  * `XXAsync` : \u5f15\u6570\u306e\u6700\u5f8c\u306b `Executor` \u3092\u3068\u308c\u308b\u3002\u7701\u7565\u3059\u308b\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u306eExecutor\u306b\u306a\u308b\n\n#### \u4ed6\u306e `ComplationStage` \u3068\u306e\u5f85\u3061\u5408\u308f\u305b\u3084\u5408\u6210\n  * `Either`  : \u5f15\u6570\u306b \u4ed6\u306e `CompletionStage` \u3092\u3068\u308a\u3001\u305d\u3061\u3089\u306e\u7d42\u4e86\u7d50\u679c\u3092\u5f85\u3061\u5408\u308f\u305b\u308b\u3002\n  * `Both` : \u5f15\u6570\u306b\u4ed6\u306e `CompletionStage` \u3092\u3068\u308a\u3001\u3053\u308c\u3068\u81ea\u5206\u81ea\u8eab\u306e\u4e21\u65b9\u306e\u7d42\u4e86\u3092\u5f85\u3061 `BiFunction` \u3084 `BiConsumer` \u306b\u6e21\u3059\n  * `compose` : apply\u3060\u3051\u3069 \u95a2\u6570\u306e\u623b\u308a\u5024\u304c `ComplationStage` \u306e\u5834\u5408\n  * `combine` : applyBoth \u306f\u5b58\u5728\u305b\u305a\u3001\u305d\u308c\u306b\u76f8\u5f53\u3059\u308b\u3082\u306e\u3092 combine \u3068\u547c\u3093\u3067\u3044\u308b\u3088\u3046\u3060\n\n\n[\u3053\u3061\u3089\u306e\u8a18\u4e8b] (http://koiroha.blogspot.jp/2014/04/java8-completablefuture-usefull-asa-scala-future.html) \u3082\u53c2\u8003\u306b\u306a\u308a\u307e\u3057\u305f\n\n# Play! Framework 1 for Java \u306e\u5834\u5408\n\nPlay1 \u306b\u306f `F.Promise` \u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n* `Future<V>` \u3068 `F.Action<V>` \u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\n  * `Fufure<V>` \u306f `java.util.concurrent` \u306e\u3082\u306e\u306a\u306e\u3067 `get` \u3067\u304d\u308b\n  * `Action<V>` \u306f  `void invoke(V result)` \u306e\u307f\u5b9a\u7fa9\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9 \n* `V get()` \u3067\u7d50\u679c\u304c\u8fd4\u308b\u307e\u3067\u30d6\u30ed\u30c3\u30af\n* `onRedeem(Action<Promise<V>> callback)` \u3067\u5b8c\u4e86\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u767b\u9332\u3002\u3044\u304f\u3064\u3067\u3082\u767b\u9332\u3067\u304d\u308b\u3002\n\n### \u8ab0\u304c\u3069\u3046\u3084\u3063\u3066\u5b8c\u4e86\u3092\u901a\u77e5\u3059\u308b\u306e\u304b\uff1f\n* `invoke(V result)` \u3067\u7d50\u679c\u3092\u767b\u9332\n* \u3053\u306e Promise \u3092\u5f15\u6570\u306b\u3068\u308b Callable \u3092\u4f5c\u308a\u3001call() \u306e\u4e2d\u306e\u91cd\u3044\u51e6\u7406\u306e\u6700\u5f8c\u306b invoke \u3092\u305f\u305f\u304f\u4f5c\u308a\u306b\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3088\u3046\u3060\n* \u305d\u3046\u3084\u3063\u3066\u4f5c\u3063\u305f Callable \u3092\u30b9\u30ec\u30c3\u30c9\u4f5c\u308b\u4eba\u306b\u6e21\u3059\u3002\n\n[play.jobs.Job \u304b\u3089 Promise \u751f\u6210\u90e8\u5206\u306e\u4f8b\u3092\u629c\u7c8b](https://github.com/playframework/play1/blob/44230c118db7527127316adb054c5ad178f7092d/framework/src/play/jobs/Job.java)\n\n```java:Job.java\n    public Promise<V> in(int seconds) {\n        final Promise<V> smartFuture = new Promise<V>();\n        JobsPlugin.executor.schedule(getJobCallingCallable(smartFuture), seconds, TimeUnit.SECONDS);\n        return smartFuture;\n    }\n\n    private Callable<V> getJobCallingCallable(final Promise<V> smartFuture) {\n      return new Callable<V>() {\n        public V call() throws Exception {\n          try {\n            V result = Job.this.call();\n            if (smartFuture != null) {\n              smartFuture.invoke(result);\n            }\n            return result;\n          }\n          catch (Exception e) {\n            if (smartFuture != null) {\n              smartFuture.invokeWithException(e);\n              }\n            return null;\n          }\n        }\n      };\n    }\n```\n\n### Promise \u306f\u5408\u6210\u304c\u3067\u304d\u307e\u3059\n\n* `Promise<List<T>> Promise.waitAll(Promise<V> promises...)` \u3067 `Promise` \u3092\u5408\u6210\u3067\u304d\u308b\u3002\n*  `Promise<F.Tuple<A, B>> wait2(Promise<A> tA, Promise<B> tB)` \u306a\u3069\u578b\u304c\u9055\u3046 Promise \u3092\u5408\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n* \u3053\u308c\u3089\u306f\u3059\u3079\u3066\u306e `Promise` \u306e\u7d42\u4e86\u3092\u5f85\u3064\n* \u4e00\u3064\u3067\u3082\u5148\u306b\u7d42\u308f\u308c\u3070\u3088\u3044\u5834\u5408\u306f `Promise<T> waitAny(Promise<T>... futures)`\u3001`Promise<T> waitEither(Promise<A> tA, Promise<B> tB))` \u304c\u3042\u308b\n* \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u305f\u3044\u5834\u5408\u306f `Timeout` \u3068\u3044\u3046 `Promise` \u3092\u7d99\u627f\u3057\u305f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u7528\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u3001`waitAny` \u3067\u5408\u6210\u3059\u308b\u3088\u3046\u3060\n\n```java:\nPromise task = F.Promise.waitAny(F.Timeout(100), myPromise);\n```\n\n\n### F.EventStream \n\u3053\u3061\u3089\u3082\u9762\u767d\u305d\u3046\u3067\u3059\u304c\u3001\u5927\u5909\u305d\u3046\u306a\u306e\u3067\u4eca\u56de\u306f\u30d1\u30b9\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\u53c2\u8003: [Play1 \u306e Promise \u306e\u30bd\u30fc\u30b9](https://github.com/playframework/play1/blob/44230c118db7527127316adb054c5ad178f7092d/framework/src/play/libs/F.java)\n\n# Play2Java\u3001JavaScript\u3001Scala\n\n\u3084\u306f\u308a\u3068\u3044\u3046\u304b\u306a\u3093\u3068\u3044\u3046\u304b\u3001\u601d\u3063\u305f\u3088\u308a\u5927\u5909\u306a\u306e\u3067 Play2Java\u3001JavaScript\u3001 Scala \u306f\u6b21\u56de\u306b\u7d9a\u304f\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n", "tags": ["Java", "java8", "PlayFramework1", "promise", "future"]}