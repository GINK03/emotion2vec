{"context": "\nhttps://twitter.com/kozeni_shkt/status/709743397196541953\nhttp://www.b-ch.com/ttl/index.php?ttl_c=467\n[iOS]\u90e8\u5c4b\u306e\u706f\u308a\u304c\u6d88\u3048\u305f\u3089\u81ea\u52d5\u3067Get Wild\u3092\u518d\u751f\u3057\u3066Get Wild\u9000\u52e4\u3059\u308b\u306ewindows10\u7248\u3067\u3059\u3002\n\n\u5b9f\u88c5\nUWP\u3067\u4f5c\u3063\u3066\u307e\u3059\u3002UWP\u6b743\u6642\u9593\u3002\nhttps://github.com/iwata-n/GetWild\n\nMainPage.xaml.cs\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Runtime.InteropServices.WindowsRuntime;\nusing Windows.Devices.Sensors;\nusing Windows.Foundation;\nusing Windows.Foundation.Collections;\nusing Windows.UI.Notifications;\nusing Windows.UI.Xaml;\nusing Windows.UI.Xaml.Controls;\nusing Windows.UI.Xaml.Controls.Primitives;\nusing Windows.UI.Xaml.Data;\nusing Windows.UI.Xaml.Input;\nusing Windows.UI.Xaml.Media;\nusing Windows.UI.Xaml.Navigation;\n\n// \u7a7a\u767d\u30da\u30fc\u30b8\u306e\u30a2\u30a4\u30c6\u30e0 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3064\u3044\u3066\u306f\u3001http://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\n\nnamespace GetWild\n{\n\n    /// <summary>\n    /// \u305d\u308c\u81ea\u4f53\u3067\u4f7f\u7528\u3067\u304d\u308b\u7a7a\u767d\u30da\u30fc\u30b8\u307e\u305f\u306f\u30d5\u30ec\u30fc\u30e0\u5185\u306b\u79fb\u52d5\u3067\u304d\u308b\u7a7a\u767d\u30da\u30fc\u30b8\u3002\n    /// </summary>\n    public sealed partial class MainPage : Page\n    {\n        private LightSensor sensor;\n        private uint thresholdValue;\n        private MediaElement media = new MediaElement();\n\n        public MainPage()\n        {\n            this.InitializeComponent();\n\n            this.sensor = LightSensor.GetDefault();\n            if (sensor == null)\n            {\n            }\n        }\n\n        async private void getWildAndTough()\n        {\n            if (media.CurrentState == MediaElementState.Playing)\n            {\n                return;\n            }\n            var uri = new System.Uri(\"ms-appx:///Assets/getwild.mp3\");\n            var file = await Windows.Storage.StorageFile.GetFileFromApplicationUriAsync(uri);\n            var stream = await file.OpenAsync(Windows.Storage.FileAccessMode.Read);\n\n            media.SetSource(stream, file.ContentType);\n            media.Play();\n        }\n\n        /// <summary>\n        /// \u30da\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u305f\u6642\u306b\u5b9f\u884c\n        /// </summary>\n        /// <param name=\"e\"></param>\n        protected override void OnNavigatedTo(NavigationEventArgs e)\n        {\n            base.OnNavigatedTo(e);\n\n            // \u30bb\u30f3\u30b5\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u767b\u9332\n            this.sensor.ReadingChanged += new TypedEventHandler<LightSensor, LightSensorReadingChangedEventArgs>(ReadingChanged);\n\n            this.threshold_slider.ValueChanged += new RangeBaseValueChangedEventHandler(ValueChanged);\n        }\n\n        async private void ReadingChanged(object sender, LightSensorReadingChangedEventArgs e)\n        {\n            await Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =>\n            {\n                LightSensorReading reading = e.Reading;\n                this.nowValue.Text = String.Format(\"{0,5:0.00}\", reading.IlluminanceInLux);\n\n                if ((uint)reading.IlluminanceInLux < this.thresholdValue)\n                {\n                    getWildAndTough();\n                }\n            });\n        }\n\n        async private void ValueChanged(object sender, RangeBaseValueChangedEventArgs e)\n        {\n            await Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =>\n            {\n                this.thresholdValue = (uint)(e.NewValue) * 10;\n                this.threshold.Text = String.Format(\"{0,5:0.00}\", this.thresholdValue);\n            });\n        }\n    }\n}\n\n\n\n\n\u30e1\u30e2\n\n\u30bb\u30f3\u30b5\u304c\u7121\u3044\u3068\u6b7b\u306c\nAssets\u306bgetwild.mp3\u304c\u7121\u3044\u3068\u6b7b\u306c\n\u753b\u9762\u304c\u6697\u304f\u306a\u308b\u3068\u66f2\u304c\u6b62\u307e\u308b\n\u8a2d\u5b9a\u5024\u306f\u899a\u3048\u3066\u306a\u3044\n\n![wp_ss_20160401_0001.png](https://qiita-image-store.s3.amazonaws.com/0/16612/70996e02-6847-8fa9-0a13-bd6cc637c3d2.png)\n\nhttps://twitter.com/kozeni_shkt/status/709743397196541953\nhttp://www.b-ch.com/ttl/index.php?ttl_c=467\n\n[[iOS]\u90e8\u5c4b\u306e\u706f\u308a\u304c\u6d88\u3048\u305f\u3089\u81ea\u52d5\u3067Get Wild\u3092\u518d\u751f\u3057\u3066Get Wild\u9000\u52e4\u3059\u308b](http://qiita.com/oubakiou/items/b9b78b00906415d056b2)\u306ewindows10\u7248\u3067\u3059\u3002\n\n# \u5b9f\u88c5\nUWP\u3067\u4f5c\u3063\u3066\u307e\u3059\u3002UWP\u6b743\u6642\u9593\u3002\nhttps://github.com/iwata-n/GetWild\n\n```csharp:MainPage.xaml.cs\nusing System;\nusing System.Collections.Generic;\nusing System.IO;\nusing System.Linq;\nusing System.Runtime.InteropServices.WindowsRuntime;\nusing Windows.Devices.Sensors;\nusing Windows.Foundation;\nusing Windows.Foundation.Collections;\nusing Windows.UI.Notifications;\nusing Windows.UI.Xaml;\nusing Windows.UI.Xaml.Controls;\nusing Windows.UI.Xaml.Controls.Primitives;\nusing Windows.UI.Xaml.Data;\nusing Windows.UI.Xaml.Input;\nusing Windows.UI.Xaml.Media;\nusing Windows.UI.Xaml.Navigation;\n\n// \u7a7a\u767d\u30da\u30fc\u30b8\u306e\u30a2\u30a4\u30c6\u30e0 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3064\u3044\u3066\u306f\u3001http://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\n\nnamespace GetWild\n{\n\n    /// <summary>\n    /// \u305d\u308c\u81ea\u4f53\u3067\u4f7f\u7528\u3067\u304d\u308b\u7a7a\u767d\u30da\u30fc\u30b8\u307e\u305f\u306f\u30d5\u30ec\u30fc\u30e0\u5185\u306b\u79fb\u52d5\u3067\u304d\u308b\u7a7a\u767d\u30da\u30fc\u30b8\u3002\n    /// </summary>\n    public sealed partial class MainPage : Page\n    {\n        private LightSensor sensor;\n        private uint thresholdValue;\n        private MediaElement media = new MediaElement();\n\n        public MainPage()\n        {\n            this.InitializeComponent();\n\n            this.sensor = LightSensor.GetDefault();\n            if (sensor == null)\n            {\n            }\n        }\n\n        async private void getWildAndTough()\n        {\n            if (media.CurrentState == MediaElementState.Playing)\n            {\n                return;\n            }\n            var uri = new System.Uri(\"ms-appx:///Assets/getwild.mp3\");\n            var file = await Windows.Storage.StorageFile.GetFileFromApplicationUriAsync(uri);\n            var stream = await file.OpenAsync(Windows.Storage.FileAccessMode.Read);\n\n            media.SetSource(stream, file.ContentType);\n            media.Play();\n        }\n\n        /// <summary>\n        /// \u30da\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u305f\u6642\u306b\u5b9f\u884c\n        /// </summary>\n        /// <param name=\"e\"></param>\n        protected override void OnNavigatedTo(NavigationEventArgs e)\n        {\n            base.OnNavigatedTo(e);\n\n            // \u30bb\u30f3\u30b5\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u767b\u9332\n            this.sensor.ReadingChanged += new TypedEventHandler<LightSensor, LightSensorReadingChangedEventArgs>(ReadingChanged);\n\n            this.threshold_slider.ValueChanged += new RangeBaseValueChangedEventHandler(ValueChanged);\n        }\n\n        async private void ReadingChanged(object sender, LightSensorReadingChangedEventArgs e)\n        {\n            await Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =>\n            {\n                LightSensorReading reading = e.Reading;\n                this.nowValue.Text = String.Format(\"{0,5:0.00}\", reading.IlluminanceInLux);\n\n                if ((uint)reading.IlluminanceInLux < this.thresholdValue)\n                {\n                    getWildAndTough();\n                }\n            });\n        }\n\n        async private void ValueChanged(object sender, RangeBaseValueChangedEventArgs e)\n        {\n            await Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =>\n            {\n                this.thresholdValue = (uint)(e.NewValue) * 10;\n                this.threshold.Text = String.Format(\"{0,5:0.00}\", this.thresholdValue);\n            });\n        }\n    }\n}\n\n```\n\n# \u30e1\u30e2\n- \u30bb\u30f3\u30b5\u304c\u7121\u3044\u3068\u6b7b\u306c\n- Assets\u306bgetwild.mp3\u304c\u7121\u3044\u3068\u6b7b\u306c\n- \u753b\u9762\u304c\u6697\u304f\u306a\u308b\u3068\u66f2\u304c\u6b62\u307e\u308b\n- \u8a2d\u5b9a\u5024\u306f\u899a\u3048\u3066\u306a\u3044\n", "tags": ["Windows10", "UWP", "windows10mobile", "GetWild"]}