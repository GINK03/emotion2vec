{"context": "\u4eca\u56de\u306f11/10\u306b\u30ea\u30ea\u30fc\u30b9\u304c\u4e88\u5b9a\u3055\u308c\u3066\u3044\u308bSpring Security 4.2\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff08\u306a\u3093\u3068\u306a\u304f\u30ea\u30ea\u30fc\u30b9\u306f\u4f38\u3073\u308b\u6c17\u304c\u3059\u308b\u3051\u3069\u30fb\u30fb\u30fb\uff09\u3002\u300cSpring Security 4.1 \u4e3b\u306a\u5909\u66f4\u70b9\u300d\u306e\u6642\u3068\u540c\u69d8\u306b\u3001\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e\u300cWhat\u2019s New in Spring Security 4.2\u300d\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u5185\u5bb9\u3092\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4ea4\u3048\u3066\u5177\u4f53\u7684\u306b\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\uff08\u9006\u306b\u3044\u3046\u3068\u3001\u300cWhat\u2019s New in Spring Security 4.2\u300d\u306b\u306e\u3063\u3066\u3044\u306a\u3044\u5909\u66f4\u70b9\u306f\u7d39\u4ecb\u3057\u306a\u3044\u306e\u3067\u3001\u3042\u3057\u304b\u3089\u305a\u30fb\u30fb\u30fb  \uff09\n\n4.2.0.RELEASE (2016/11/10)\n\u4e88\u60f3\u306b\u53cd\u3057\u3066\uff01\uff1f11/10\u306b\u3061\u3083\u3093\u3068\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f \nRC1\u306e\u30d0\u30b0\u4fee\u6b63\u3084\u6a5f\u80fd\u8ffd\u52a0\u304c\u3042\u3063\u305f\u306e\u3067\u53cd\u6620\u3057\u307e\u3057\u305f\u3002\n\n\u52d5\u4f5c\u691c\u8a3c\u74b0\u5883\n\nSpring Security 4.2.0.RC1 -> 4.2.0.RELEASE\nSpring Boot 1.4.1.RELEASE -> 1.4.2.RELEASE\n\n\nWhat\u2019s New in Spring Security 4.2\n\nWeb Improvements\n\u4ee5\u4e0b\u306f\u3001Web\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n\n\nNo\nWeb\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\n1\n\u8a8d\u8a3c\u60c5\u5831\u306a\u3069\u3092\u4fdd\u6301\u3059\u308bSpring Security\u63d0\u4f9b\u306e\u30af\u30e9\u30b9\u3092\u3001JSON\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306eJackson\u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002(\u5206\u6563\u30bb\u30c3\u30b7\u30e7\u30f3\u74b0\u5883\u5411\u3051)\n\n\n2\nReferrer Policy\u30d8\u30c3\u30c0\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\uff08\u2605 11/10\u8ffd\u52a0\uff09\n\n\n3\n\nDefaultHttpFirewall\u306bHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u5206\u5272\u653b\u6483\u5bfe\u7b56\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n4\n\n@AuthenticationPrincipal\u306eexpression\u5c5e\u6027\u306e\u4e2d\u3067Bean\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n5\nSSO\u9023\u643a\u7528\u306bRequestAttributeAuthenticationFilter\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n6\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u306a\u3069\u306eProxy Server\u306e\u8a2d\u5b9a\u306b\u95a2\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n7\n\u7121\u52b9\u5316\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u305f\u6642\u306e\u632f\u308b\u821e\u3044\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\uff08SessionInformationExpiredStrategy\uff09\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\uff08\u540c\u4e00\u30e6\u30fc\u30b6\u30fc\u3067\u306e\u540c\u6642\u30bb\u30c3\u30b7\u30e7\u30f3\u6570\u3092\u5236\u9650\u3057\u3066\u3044\u308b\u6642\u306b\u4f7f\u308f\u308c\u307e\u3059\uff09\n\n\n8\n\u8907\u6570\u306eLogoutHandler\u3092\u3072\u3068\u3064\u306eLogoutHandler\u3068\u3057\u3066\u6271\u3046\u305f\u3081\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\uff08CompositeLogoutHandler\uff09\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n\n\nConfiguration Improvements\n\u4ee5\u4e0b\u306f\u3001Configuration\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n\n\nNo\nConfiguration\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\n9\n\u30ed\u30fc\u30eb\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9(\u30c7\u30d5\u30a9\u30eb\u30c8\uff1aROLE_)\u3092\u4e00\u5143\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n10\nJava Config(WebSecurityConfigurerAdapter)\u4f7f\u7528\u6642\u306b\u3001\u72ec\u81ea\u306eConfigurer(AbstractHttpConfigurer\u306e\u30b5\u30d6\u30af\u30e9\u30b9)\u3092\u8aad\u307f\u8fbc\u3080\u4ed5\u7d44\u307f\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n11\nXML\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9(concurrency-control\u8981\u7d20\u306emax-sessions\u5c5e\u6027)\u3092\u4f7f\u3063\u3066\u540c\u4e00\u30e6\u30fc\u30b6\u30fc\u306e\u540c\u6642\u30bb\u30c3\u30b7\u30e7\u30f3\u6570\u3092\u7121\u5236\u9650(-1)\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n12\nXML\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9(intercept-url\u8981\u7d20\u306brequest-matcher-ref\u5c5e\u6027)\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u306e\u9069\u7528\u5bfe\u8c61\u3092\u67d4\u8edf\u306b\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n13\n\nMap<String, List<String>>\u304b\u3089\u968e\u5c64\u5316\u30ed\u30fc\u30eb\u3092\u8868\u73fe\u3059\u308b\u6587\u5b57\u5217(\u4f8b\uff1a ROLE_ADMIN > ROLE_STAFF)\u3092\u4f5c\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n14\n\nCookieCsrfTokenRepository\u3067\u6271\u3046Cookie\u306e\u30d1\u30b9\u304c\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n15\n\nInvalidSessionStrategy\u306e\u5b9f\u88c5\u30af\u30e9\u30b9(\u7121\u52b9\u306a\u3063\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u691c\u51fa\u3057\u305f\u6642\u306e\u52d5\u4f5c)\u3092\u7c21\u5358\u306b\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n16\n\"Fix Exposing Beans for defaultMethodExpressionHandler can prevent Method Security\"\u306f\u3001\u30d0\u30b0\u4fee\u6b63\u306e\u3088\u3046\u306a\u306e\u3067\u8aac\u660e\u306f\u5272\u611b\u3057\u307e\u3059 \n\n\n\n\n\nMiscellaneous\n\u4ee5\u4e0b\u306f\u3001\u305d\u306e\u4ed6\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n\n\nNo\n\u305d\u306e\u4ed6\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\n17\nSpring 5\u4e0a\u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\uff08\u305f\u3076\u3093\uff09 \u203b\u8a66\u3057\u3066\u307e\u305b\u3093\u3051\u3069 \n\n\n\n18\n\nUser\u30af\u30e9\u30b9\u306b\u3001UserBuilder\u3068\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n19\n\"Fix after csrf() is invoked, future MockMvc invocations use original CsrfTokenRepository\"\u306f\u3001\u30d0\u30b0\u4fee\u6b63\u306e\u3088\u3046\u306a\u306e\u3067\u8aac\u660e\u306f\u5272\u611b\u3057\u307e\u3059 \n\n\n\n20\n\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u304b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30a2\u30c3\u30d7\u3055\u308c\u307e\u3059\uff08\u305d\u3057\u3066\u8aac\u660e\u306f\u5272\u611b\u3057\u307e\u301c\u3059 \uff09\n\n\n\n\nSpring 4.2.0.RELEASE\u306e\u9069\u7528\u3059\u308b\n\u307e\u305a\u3001SPRING INITIALIZR\u304b\u3089\u300cWeb\u300d\u300cSecurity\u300d\u3092\u6307\u5b9a\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n\npom.xml\n<!-- ... -->\n<properties>\n    <!-- ... -->\n    <spring-security.version>4.2.0.RELEASE</spring-security.version> <!-- \u2190 \u8ffd\u52a0 -->\n</properties>\n<!-- ... -->\n\n\n\n\u5206\u6563\u30bb\u30c3\u30b7\u30e7\u30f3\u5411\u3051\u306eJackson\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u63d0\u4f9b\u3055\u308c\u308b\nSpring Security\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3067\u306f\u3001\u8a8d\u8a3c\u60c5\u5831\u306a\u3069\u3092HTTP\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u683c\u7d0d\u3059\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u8907\u6570\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u5171\u6709\u3059\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u65b9\u6cd5\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u9593\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3059\u308b\nRDBMS\u3084Key/Value\u30b9\u30c8\u30a2(Redis\u306a\u3069)\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u4fdd\u5b58\u3059\u308b\n\n\u3044\u305a\u308c\u306e\u65b9\u6cd5\u3092\u63a1\u7528\u3057\u3066\u3082\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\uff08Java\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u53ca\u3073\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3059\u308b\u4ed5\u7d44\u307f\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u3082\u3063\u3068\u3082\u6a19\u6e96\u7684\u306a\u306e\u306fJava\u6a19\u6e96\u306e\u4ed5\u7d44\u307f(java.io.Serializable)\u3067\u3059\u304c\u3001\u5b9f\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u5f8c\u306e\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba\u306e\u5897\u52a0\u7387\u304c\u591a\u3044\uff0b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u3082\u96e3\u70b9\u304c\u3042\u308a\u3001\u5225\u306e\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u304c\u5fc5\u8981\u306b\u306a\u308b\u30b1\u30fc\u30b9\u3082\u5c11\u306a\u304f\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u3072\u3068\u3064\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u306e\u304c\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092JSON\u30c7\u30fc\u30bf\u306b\u5909\u63db\u3057\u3066\u5171\u6709\u3059\u308b\u65b9\u6cd5\u306b\u306a\u308a\u307e\u3059\u3002\n\u672c\u6295\u7a3f\u3067\u306f\u3001Spring Session\u3092\u4f7f\u7528\u3057\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092Redis\u306b\u683c\u7d0d\u3059\u308b\u969b\u306b\u3001Spring Security 4.2\u3067\u8ffd\u52a0\u3055\u308c\u305fJackson\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092JSON\u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nRedis\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u8d77\u52d5\n\u672c\u6295\u7a3f\u3067\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u3084\u8d77\u52d5\u65b9\u6cd5\u306e\u8aac\u660e\u306f\u5272\u611b\u3057\u307e\u3059\u3002\u30cd\u30c3\u30c8\u3067\u8abf\u3079\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044 \n\nSpring Session(Redis)\u306e\u9069\u7528\n\u307e\u305a\u3001\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u300corg.springframework.session:spring-session-data-redis\u300d\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\npom.xml\n<dependency>\n    <groupId>org.springframework.session</groupId>\n    <artifactId>spring-session-data-redis</artifactId>\n</dependency>\n\n\n\u3064\u304e\u306b\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4fdd\u5b58\u5148\u3068\u3057\u3066Redis\u3092\u6307\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\n\nsrc/main/resources/application.properties\nspring.session.store-type=redis\n\n\n\nNote:\nspring.session.store-type\u306f\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u5b9f\u306f\u52d5\u304f\u306e\u3067\u3059\u304c\u30fb\u30fb\u30fb\u4ee5\u4e0b\u306e\u3088\u3046\u306aWARN\u30ed\u30b0\u304c\u51fa\u3066\u3057\u307e\u3046\u306e\u3067\u5fc5\u305a\u6307\u5b9a\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\uff01\uff01\n2016-11-10 23:44:46.257  WARN 31968 --- [ost-startStop-1] o.s.b.a.s.RedisSessionConfiguration      : Spring Session store type is mandatory: set 'spring.session.store-type=redis' in your configuration\n\n\n\n\u30d5\u30a9\u30fc\u30e0\u30ed\u30b0\u30a4\u30f3\u306e\u9069\u7528\nSpring Boot\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068Basic\u8a8d\u8a3c\u304c\u6709\u52b9\u306b\u306a\u3066\u304a\u308a\u3001\u30ed\u30b0\u30a4\u30f3\u304c\u6210\u529f\u3057\u3066\u3082\u8a8d\u8a3c\u60c5\u5831\u304c\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u683c\u7d0d\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u30d5\u30a9\u30fc\u30e0\u30ed\u30b0\u30a4\u30f3\u6a5f\u80fd\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002\npackage com.example.config;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.formLogin()\n                .permitAll();\n        http.authorizeRequests()\n                .anyRequest().authenticated();\n    }\n\n}\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u30e6\u30fc\u30b6\u30fc\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u5909\u66f4\nSpring Boot\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u3001Spring Security\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e6\u30fc\u30b6\u30fc(user)\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u8d77\u52d5\u6642\u306b\u767a\u884c\u3055\u308c\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\n...\n2016-11-05 17:12:26.520  INFO 12105 --- [           main] b.a.s.AuthenticationManagerConfiguration : \n\nUsing default security password: e825bc6d-19ef-4c76-93c7-d436a95172d2\n\n\n\u6bce\u56de\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u5909\u308f\u308b\u306e\u306f\u9762\u5012\u306a\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u300cpassword\u300d\u306b\u5909\u66f4\u3057\u3061\u3083\u3044\u307e\u3057\u3087\u3046\u3002\n\nsrc/resources/application.properties\nsecurity.user.password=password\n\n\n\n\u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u306e\u8868\u793a\n\u300chttp://localhost:8080/login\u300d\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001Spring Security\u63d0\u4f9b\u306e\u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u8868\u793a\u3059\u308b\u3068\u3001HTTP\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u751f\u6210\u3055\u308cRedis\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\u4eca\u56de\u306fMedis\u3068\u3044\u3046Redis\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30c4\u30fc\u30eb\u3092\u4f7f\u3063\u3066Redis\u306e\u4e2d\u8eab\u3092\u8997\u3044\u3066\u307f\u307e\u3059\u3002 \uff08\u30c4\u30fc\u30eb\u306f\u306a\u3093\u3067\u3082OK\u3067\u3059\uff09\n\n\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u306f\u3001HTTP\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u683c\u7d0d\u3057\u305fCSRF\u30c8\u30fc\u30af\u30f3\u3092\u4fdd\u6301\u3059\u308b\u30af\u30e9\u30b9\u306e\u4e2d\u8eab\u3067\u3059\u3002\u30fb\u30fb\u30fb\u30fb\u4e2d\u8eab\u304c\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306a\u306e\u304c\u308f\u304b\u308b\u3068\u304a\u3082\u3044\u307e\u3059\u3002\n\nJackson\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u9069\u7528\nSpring Security 4.2\u3067\u8ffd\u52a0\u3055\u308c\u305fJackson\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3001Spring Session\u306e\u4e2d\u3067\u5229\u7528\u3057\u3066\u3044\u308bSpring Data Redis\u306e\u4e2d\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092JSON\u306b\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\npackage com.example.config;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.springframework.beans.factory.BeanClassLoaderAware;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer;\nimport org.springframework.data.redis.serializer.RedisSerializer;\nimport org.springframework.security.jackson2.SecurityJackson2Modules;\n\n@Configuration\npublic class HttpSessionConfig implements BeanClassLoaderAware {\n\n    private ClassLoader classLoader;\n\n    @Bean\n    public RedisSerializer<Object> springSessionDefaultRedisSerializer() {\n        ObjectMapper objectMapper = new ObjectMapper();\n        objectMapper.registerModules(SecurityJackson2Modules.getModules(classLoader)); // Spring Security\u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u9069\u7528\n        return new GenericJackson2JsonRedisSerializer(objectMapper); // Spring Data Redis\u306bJSON\u5909\u63db\u7528\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u9069\u7528\n    }\n\n    @Override\n    public void setBeanClassLoader(ClassLoader classLoader) {\n        this.classLoader = classLoader;\n    }\n\n}\n\n\nNote:\nSpring Boot\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306f\u3001@Configuration\u306e\u4ee3\u308f\u308a\u306b@org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\uff01\uff01\n\nJackson\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u9069\u7528\u3057\u305f\u5f8c\u306b\u3001Redis\u306e\u4e2d\u8eab\u3092\u30af\u30ea\u30a2\u3057\u3066\u518d\u5ea6\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u304cJSON\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306d \n\n\u3055\u3089\u306b\u3001\u30ed\u30b0\u30a4\u30f3\u5f8c\u306bRedis\u306e\u4e2d\u3092\u8997\u304f\u3068\u3001\u8a8d\u8a3c\u60c5\u5831\u3082JSON\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059 \n\n\nWarning:\nRC1\u306e\u6642\u70b9\u3067\u306f\u3001\u4e8b\u524d\u8a8d\u8a3c\u95a2\u9023\u306e\u30af\u30e9\u30b9(PreAuthenticatedAuthenticationToken\u306a\u3069)\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u307f\u305f\u3044\u3067\u3001\u4e8b\u524d\u8a8d\u8a3c\u3092\u4f7f\u3046\u3068Redis\u304b\u3089\u30ed\u30fc\u30c9\u3057\u305f\u8a8d\u8a3c\u60c5\u5831\uff08JSON\uff09\u3092\u30d1\u30fc\u30b9\u3059\u308b\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\uff08\uff1d\u8a8d\u8a3c\u5f8c\u306e\u30a2\u30af\u30bb\u30b9\u3067\u30a8\u30e9\u30fc\u306b\u306a\u308b\u30fb\u30fb\u30fb\uff09\u3002\u3068\u308a\u3042\u3048\u305a\u3001GitHub\u306eIssue\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n4.2.0.RELEASE\u3067\u89e3\u6d88\u3055\u308c\u307e\u3057\u305f\uff01\uff01\n\n\nReferrer Policy\u30d8\u30c3\u30c0\u306e\u51fa\u529b\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u308b\nSpring Security 4.2\u3088\u308a\u3001Referrer Policy\u3092\u30d6\u30e9\u30a6\u30b6\u306b\u6307\u793a\u3059\u308b\u305f\u3081\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u3092\u51fa\u529b\u3059\u308b\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u306a\u304a\u3001\u3053\u306e\u6a5f\u80fd\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u9069\u7528\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u9069\u7528\u3057\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306aBean\u5b9a\u7fa9\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nJavaConfig\u306b\u3088\u308bBean\u5b9a\u7fa9\u4f8b\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    // ...\n    http.headers()\n            .referrerPolicy(ReferrerPolicyHeaderWriter.ReferrerPolicy.SAME_ORIGIN);\n    // ...\n}\n\n\n\nXML\u306b\u3088\u308bBean\u5b9a\u7fa9\u4f8b\n<sec:http>\n    <!-- ... -->\n    <sec:headers>\n        <sec:referrer-policy policy=\"same-origin\"/>\n    </sec:headers>\n    <!-- ... -->\n</sec:http>\n\n\n\u4ee5\u4e0b\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u51fa\u529b\u4f8b\nHTTP/1.1 200\n...\nReferrer-Policy: same-origin\n...\n\n\n\nHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u5206\u5272\u653b\u6483\u5bfe\u7b56\u304c\u8ffd\u52a0\u3055\u308c\u308b\nHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u5206\u5272\u653b\u6483(HTTP Response Splitting Attack)\u306f\u3001HTTP\u30d8\u30c3\u30c0\u30fb\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u653b\u6483\u306b\u3088\u308a\u8907\u6570\u306eHTTP\u30ec\u30b9\u30f3\u30dd\u30f3\u30b9\u3092\u4f5c\u308a\u51fa\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u30b5\u30fc\u30d0\uff08\u30d7\u30ed\u30ad\u30b7\u30b5\u30fc\u30d0\uff09\u306b\u507d\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u305b\u308b\u3053\u3068\u3067\u3001\u60aa\u610f\u306e\u3042\u308b\u30da\u30fc\u30b8\u3092\u95b2\u89a7\u3055\u305b\u308b\u3068\u3044\u3046\u653b\u6483\u624b\u6cd5\u3067\u3059\u3002Spring Secuirty 4.2\u304b\u3089\u306f\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u5024\u306b\u6539\u884c\u30b3\u30fc\u30c9\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3068IllegalArgumentException\u306b\u306a\u308a\u307e\u3059\u3002\n\n@AuthenticationPrincipal\u306eexpression\u5c5e\u6027\u306e\u4e2d\u3067Bean\u53c2\u7167\u3067\u304d\u308b\n@AuthenticationPrincipal\u306eexpression\u5c5e\u6027\u306e\u4e2d\u3067Bean\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068\u3067\u3001\u8a8d\u8a3c\u60c5\u5831\u3092\u5f15\u6570\u306b\u3057\u3066\u4efb\u610f\u306eBean\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u3092Handler\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nSpring Security\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3067\u306fJPA\u306eEntityManager\u3068\u306e\u9023\u643a\u4f8b\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u672c\u6295\u7a3f\u3067\u306f\u3001\u8a8d\u8a3c\u60c5\u5831\u306b\u7d10\u3065\u304f\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u60c5\u5831\uff08\u96fb\u8a71\u756a\u53f7\u3001\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\uff09\u3092\u691c\u7d22\u3057\u3066Handler\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u691c\u7d22\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\n\u307e\u305a\u3001\u30e6\u30fc\u30b6\u540d\u3092\u53d7\u3051\u53d6\u3063\u3066\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u3092\u8fd4\u5374\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002\u672c\u6765\u3067\u3042\u308c\u3070\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u691c\u7d22\u3059\u308b\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u672c\u6295\u7a3f\u3067\u306f\u56fa\u5b9a\u5024\u3092\u8fd4\u3057\u3061\u3083\u3044\u307e\u3059\u3002\npackage com.example.service;\n\nimport com.example.domain.Profile;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ProfileService {\n\n    public Profile find(String username) {\n        Profile profile = new Profile();\n        profile.setUsername(username);\n        profile.setPhone(\"09012345678\");\n        profile.setEmail(\"test@gmail.com\");\n        return profile;\n    }\n\n}\n\n\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u691c\u7d22\u30b5\u30fc\u30d3\u30b9\u306e\u547c\u3073\u51fa\u3057\n@AuthenticationPrincipal\u306eexpression\u5c5e\u6027\u306e\u4e2d\u304b\u3089\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u691c\u7d22\u30b5\u30fc\u30d3\u30b9\u306eBean\u3092\u53c2\u7167\u3057\u3001\u691c\u7d22\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u7d50\u679c\u3092Handler\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u307e\u3057\u3087\u3046\u3002\npackage com.example.controller;\n\nimport com.example.domain.Profile;\nimport org.springframework.security.core.annotation.AuthenticationPrincipal;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/profile\")\npublic class ProfileRestController {\n\n    @GetMapping\n    public Profile getProfile(\n            @AuthenticationPrincipal(expression = \"@profileService.find(username)\") Profile profile) {\n        return profile;\n    }\n\n}\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u300chttp://localhost:8080/profile\u300d\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068\u4ee5\u4e0b\u306eJSON\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n{\"username\":\"user\",\"phone\":\"09012345678\",\"email\":\"test@gmail.com\"}\n\n\nRequestAttributeAuthenticationFilter\u304c\u8ffd\u52a0\u3055\u308c\u308b\nAbstractPreAuthenticatedProcessingFilter\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3068\u3057\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30b9\u30b3\u30fc\u30d7\u304b\u3089\u8cc7\u683c\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u4e8b\u524d\u8a8d\u8a3c\u3092\u884c\u3046RequestAttributeAuthenticationFilter\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\n\nShibboleth\nStanford WebAuth\n\n\u3068\u3044\u3063\u305fSSO(Single Sign-On)\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u3068\u9023\u643a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nNote:\n\u985e\u4f3c\u306e\u30af\u30e9\u30b9\u3068\u3057\u3066\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u304b\u3089\u8cc7\u683c\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u30af\u30e9\u30b9\uff08RequestHeaderAuthenticationFilter\uff09\u304c\u3042\u308a\u307e\u3059\u3002\n\nSSO(Single Sign-On)\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u3068\u5b9f\u969b\u306b\u9023\u643a\u3059\u308b\u306e\u306f\u3061\u3087\u3063\u3068\u9762\u5012\u306a\u306e\u3067\u30fb\u30fb\u30fb\u672c\u6295\u7a3f\u3067\u306f\u3001\u64ec\u4f3c\u7684\u306b\u540c\u3058\u72b6\u614b\u3092\u4f5c\u308a\u51fa\u3057\u3066\u52d5\u4f5c\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\npackage com.example.config;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.Ordered;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.core.authority.AuthorityUtils;\nimport org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\nimport org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider;\nimport org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService;\nimport org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails;\nimport org.springframework.security.web.authentication.preauth.RequestAttributeAuthenticationFilter;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.filter.OncePerRequestFilter;\n\nimport javax.servlet.FilterChain;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    AuthenticationManager authenticationManager;\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.formLogin()\n                .permitAll();\n        http.authorizeRequests()\n                .anyRequest().authenticated();\n        // \u2193 \u4e8b\u524d\u8a8d\u8a3c\u7528\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u9069\u7528\uff08\u30d5\u30a9\u30fc\u30e0\u8a8d\u8a3c\u3088\u308a\u512a\u5148\uff09\n        http.addFilterBefore(preAuthenticationFilter(), UsernamePasswordAuthenticationFilter.class);\n    }\n\n    // \u4e8b\u524d\u8a8d\u8a3c\u7528\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n    private RequestAttributeAuthenticationFilter preAuthenticationFilter() {\n        RequestAttributeAuthenticationFilter filter = new RequestAttributeAuthenticationFilter();\n        filter.setAuthenticationManager(authenticationManager);\n        filter.setAuthenticationDetailsSource(\n                request -> new PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails(\n                        request, AuthorityUtils.createAuthorityList(\"ROLE_USER\")));\n        filter.setExceptionIfVariableMissing(false);\n        return filter;\n    }\n\n    // \u4e8b\u524d\u8a8d\u8a3c\u7528\u306e\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n    @Autowired\n    void configurePreAuthenticatedAuthenticationProvider(AuthenticationManagerBuilder builder) {\n        PreAuthenticatedAuthenticationProvider provider = new PreAuthenticatedAuthenticationProvider();\n        provider.setPreAuthenticatedUserDetailsService(new PreAuthenticatedGrantedAuthoritiesUserDetailsService());\n        builder.authenticationProvider(provider);\n    }\n\n    // \u64ec\u4f3c\u7684\u306bSSO\u30d7\u30ed\u30c0\u30af\u30c8\u3092\u901a\u904e\u3057\u305f\u72b6\u614b\u3092\u4f5c\u308a\u51fa\u3059\u305f\u3081\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\n    // \u8a8d\u8a3c\u304c\u5fc5\u8981\u306a\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u300c?user=xxxx\u300d\u3092\u4ed8\u4e0e\u3059\u308b\u3068SSO\u30d7\u30ed\u30c0\u30af\u30c8\u3092\u901a\u904e\u3057\u305f\u72b6\u614b\u306b\u306a\u308b\n    @Component\n    @Order(Ordered.HIGHEST_PRECEDENCE)\n    static class SsoUsernameStoringFilter extends OncePerRequestFilter {\n        @Override\n        protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {\n            String user = request.getParameter(\"user\");\n            if (user != null) {\n                request.setAttribute(\"REMOTE_USER\", user);\n            }\n            filterChain.doFilter(request, response);\n        }\n    }\n\n}\n\n\u4e8b\u524d\u8a8d\u8a3c\u9069\u7528\u5f8c\u306b\u524d\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u4f5c\u6210\u3057\u305f\u300c/profile\u300d\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u3092\u4f7f\u7528\u3057\u305f\u8a8d\u8a3c\u3092\u884c\u308f\u305a\u306b\u300c/profile\u300d\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n$ curl -D - http://localhost:8080/profile?user=kazuki43zoo\nHTTP/1.1 200 \nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode=block\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nSet-Cookie: SESSION=acffc6c9-d555-4da5-828d-ec4e20a937d6;path=/;HttpOnly\nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Sat, 05 Nov 2016 15:07:39 GMT\n\n{\"username\":\"kazuki43zoo\",\"phone\":\"09012345678\",\"email\":\"test@gmail.com\"}\n\n\u4e8b\u524d\u8a8d\u8a3c\u304c\u6210\u529f\u3059\u308b\u3068Spring Secuirty\u306e\u8a8d\u8a3c\u60c5\u5831\u306f\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u683c\u7d0d\u3055\u308c\u3001\u4ee5\u964d\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u306f\u8a8d\u8a3c\u51e6\u7406\u304c\u4e0d\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\uff12\u56de\u76ee\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u306f\u3001\u300c?user=xxxxx\u300d\u3092\u7701\u7565\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n$ curl -D - http://localhost:8080/profile -H 'Cookie: SESSION=acffc6c9-d555-4da5-828d-ec4e20a937d6'\nHTTP/1.1 200 \nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode=block\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Sat, 05 Nov 2016 15:15:46 GMT\n\n{\"username\":\"kazuki43zoo\",\"phone\":\"09012345678\",\"email\":\"test@gmail.com\"}\n\n\u4eca\u5ea6\u306f\u9055\u3046\u30e6\u30fc\u30b6\u30fc\u540d\u3092\u6307\u5b9a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n$ curl -D - http://localhost:8080/profile?user=hoge -H 'Cookie: SESSION=acffc6c9-d555-4da5-828d-ec4e20a937d6'\nHTTP/1.1 200 \nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode=block\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Sat, 05 Nov 2016 15:16:47 GMT\n\n{\"username\":\"kazuki43zoo\",\"phone\":\"09012345678\",\"email\":\"test@gmail.com\"}\n\n\u65e2\u306b\u540c\u4e00\u30bb\u30c3\u30b7\u30e7\u30f3\u5185\u306b\u8a8d\u8a3c\u60c5\u5831\u304c\u3042\u308b\u305f\u3081\u3001\u8a8d\u8a3c\u51e6\u7406\u304c\u884c\u308f\u308c\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\nProxy Server\u95a2\u9023\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u308b\nSpring Security\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30da\u30fc\u30b8\u306b\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u306a\u3069\u306eProxy Server\u5229\u7528\u6642\u306e\u8a2d\u5b9a\u306b\u95a2\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\nhttp://docs.spring.io/spring-security/site/docs/4.2.0.RELEASE/reference/htmlsingle/#appendix-proxy-server\n\n\nSessionInformationExpiredStrategy\u304c\u8ffd\u52a0\u3055\u308c\u308b\n\u7121\u52b9\u5316\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u305f\u6642\u306e\u632f\u308b\u821e\u3044\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\uff08SessionInformationExpiredStrategy\uff09\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u8ffd\u52a0\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3084\u30af\u30e9\u30b9\u306f\u3001\u540c\u4e00\u30e6\u30fc\u30b6\u30fc\u3067\u306e\u540c\u6642\u30bb\u30c3\u30b7\u30e7\u30f3\u6570\u3092\u5236\u9650\u3057\u3066\u3044\u3066\uff0b\u540c\u6642\u30bb\u30c3\u30b7\u30e7\u30f3\u6570\u3092\u8d85\u3048\u305f\u6642\u306b\u3082\u3063\u3068\u3082\u30a2\u30af\u30bb\u30b9\u304c\u306a\u3044\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u7121\u52b9\u5316\u3059\u308b\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u3044\u308b\u6642\u3067\u3059\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u308f\u308c\u308b\u5b9f\u88c5\u30af\u30e9\u30b9\u306f\u3001ConcurrentSessionFilter\u306e\u5185\u90e8\u30af\u30e9\u30b9\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308bResponseBodySessionInformationExpiredStrategy\u3067\u3001\u30ec\u30b9\u30dd\u30f3\u30b9BODY\u306b\u300cThis session has been expired (possibly due to multiple concurrent logins being attempted as the same user).\u300d\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001\u7121\u52b9\u5316\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u305f\u969b\u306b\u3001\u6307\u5b9a\u3057\u305fURL\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u8a2d\u5b9a\u306b\u3059\u308b\u3068SimpleRedirectSessionInformationExpiredStrategy\u3068\u3044\u3046\u30af\u30e9\u30b9\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    // ...\n    http.sessionManagement()\n            .maximumSessions(5)\n            .maxSessionsPreventsLogin(false)\n            .expiredUrl(\"/login?session-expired\");\n    // ...\n}\n\n\u306a\u304a\u3001Spring Security\u304c\u7528\u610f\u3057\u3066\u3044\u308b\u5b9f\u88c5\u3067\u8981\u4ef6\u304c\u5145\u305f\u305b\u306a\u3044\u5834\u5408\u306f\u3001\u72ec\u81ea\u306e\u5b9f\u88c5\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    // ...\n    http.sessionManagement()\n            .maximumSessions(5)\n            .maxSessionsPreventsLogin(false)\n            .expiredSessionStrategy(expiredSessionStrategy());\n    // ...\n}\n\nprivate SessionInformationExpiredStrategy expiredSessionStrategy() {\n    return event -> {\n        // \u8981\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081\u306e\u72ec\u81ea\u51e6\u7406\u3092\u5b9f\u88c5\n    };\n}\n\n\nCompositeLogoutHandler\u304c\u8ffd\u52a0\u3055\u308c\u308b\n\u8907\u6570\u306eLogoutHandler\u3092\u3072\u3068\u3064\u306eLogoutHandler\u3068\u3057\u3066\u6271\u3046\u305f\u3081\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\uff08CompositeLogoutHandler\uff09\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u304a\u305d\u3089\u304f\u30fb\u30fb\u30fb\u3053\u306e\u30af\u30e9\u30b9\u3092\u76f4\u63a5\u4f7f\u3046\u3053\u3068\u306f\u3042\u307e\u308a\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u672c\u6295\u7a3f\u3067\u306f\u8aac\u660e\u306f\u5272\u611b\u3055\u305b\u3066\u3082\u3089\u3044\u307e\u3059\u3002\n\n\u30ed\u30fc\u30eb\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u4e00\u5143\u7ba1\u7406\u3067\u304d\u308b\nSpring Security\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30ed\u30fc\u30eb\u30d9\u30fc\u30b9\u306e\u6a29\u9650\u3092\"ROLE_\"\u3067\u306f\u3058\u307e\u308b\u6587\u5b57\u5217\u3068\u3057\u3066\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070\u3001\u3042\u308b\u30e6\u30fc\u30b6\u30fc\u306b\u300c\u5229\u7528\u8005\u300d\u3068\u300c\u7ba1\u7406\u8005\u300d\u306e\u30ed\u30fc\u30eb\u3092\u5272\u308a\u5f53\u3066\u308b\u5834\u5408\u306f\u3001\u300cROLE_USER\u300d\u300cROLE_ADMIN\u300d\u3068\u3044\u3063\u305f\u611f\u3058\u306e\u30ed\u30fc\u30eb\u540d\u3092\u6a29\u9650\u60c5\u5831\u3068\u3057\u3066\u4fdd\u6301\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u72b6\u614b\u3067\u306e\u30ed\u30fc\u30eb\u306e\u4ed8\u4e0e\u4f8b\n@Service\npublic class CustomUserDetailsService implements UserDetailsService {\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        return new User(username, \"N/A\", AuthorityUtils.createAuthorityList(\"ROLE_USER\")); // \"ROLE_\"\u304c\u5fc5\u8981\n   }\n}\n\n\n\n\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u306e\u6307\u5b9a\u4f8b\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    // ...\n    http.authorizeRequests()\n            .anyRequest().hasRole(\"USER\"); // \"ROLE_\"\u306f\u7701\u7565\u3067\u304d\u308b(Spring Security 4.0\u301c)\n    // ...\n}\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9(\"ROLE_\")\u6587\u5b57\u306f\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001Spring Security 4.2\u304b\u3089\u306f\u3001org.springframework.security.config.core.GrantedAuthorityDefaults\u306eBean\u3092\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9(\"ROLE_\")\u3092\u306a\u304f\u3059\u5834\u5408\u306e\u8a2d\u5b9a\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u3092\u306a\u304f\u3059\u969b\u306e\u8a2d\u5b9a\u4f8b\n@Bean\nGrantedAuthorityDefaults grantedAuthorityDefaults() {\n    return new GrantedAuthorityDefaults(\"\");\n}\n\n\n\u4e0a\u8a18\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3068\u3001\u8a8d\u8a3c\u60c5\u5831\u306b\u4fdd\u6301\u3059\u308b\u30ed\u30fc\u30eb\u306b\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\"ROLE_\"\uff09\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u306a\u304f\u3057\u305f\u6642\u306e\u30ed\u30fc\u30eb\u306e\u4ed8\u4e0e\u4f8b\n@Service\npublic class CustomUserDetailsService implements UserDetailsService {\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        return new User(username, \"N/A\", AuthorityUtils.createAuthorityList(\"USER\")); // \"ROLE_\"\u306f\u4e0d\u8981\n   }\n}\n\n\nSpring Security 4.0\u3088\u308a\u3001\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u3092\u6307\u5b9a\u3059\u308b\u969b\u306b\u30ed\u30fc\u30eb\u540d\u304b\u3089\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u7701\u7565\u3067\u304d\u308b\u3088\u3046\u306b\u6539\u5584\u3055\u308c\u3066\u304a\u308a\u3001\u8a8d\u8a3c\u60c5\u5831\u3067\u4fdd\u6301\u3059\u308b\u30ed\u30fc\u30eb\u540d\u304b\u3089\u3082\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9(\"ROLE_\")\u3092\u5916\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u65b9\u3082\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f Spring Security 4.2\u304b\u3089\u5c0e\u5165\u3055\u308c\u305f\u3053\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u306a\u304f\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff01\n\nWarning:\n\u8a8d\u8a3c\u60c5\u5831\u3067\u4fdd\u6301\u3059\u308b\u30ed\u30fc\u30eb\u540d\u304b\u3089\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u306a\u304f\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u7d39\u4ecb\u3057\u307e\u3057\u305f\u304c\u30fb\u30fb\u30fb\u3001hasRole\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3068\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u3044\u307e\u3059\u30fb\u30fb\u30fb\nhttp.authorizeRequests()\n       .anyRequest().hasRole(\"USER\"); // \u2190 hasRole\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\"ROLE_\"\u3092\u56fa\u5b9a\u3067\u4ed8\u4e0e\u3057\u3066\u3044\u308b\u30fb\u30fb\u30fb\n\n\u3053\u306e\u554f\u984c\u306e\u56de\u907f\u7b56\u3068\u3057\u3066\u306f\u30fb\u30fb\u30fb\u3001access\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3001Expression\u3068\u3057\u3066hasRole\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u6b63\u3057\u304f\u52d5\u4f5c\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nhttp.authorizeRequests()\n       .anyRequest().access(\"hasRole('USER')\"); // Expression\u7d4c\u7531\u3060\u3068\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u5185\u5bb9\u304c\u53cd\u6620\u3055\u308c\u308b\n\n\u3053\u308c\u306fSpring Security\u306e\u30d0\u30b0\uff1f\u306a\u6c17\u304c\u3059\u308b\u306e\u3067\u30fb\u30fb\u30fb\n\u3068\u308a\u3042\u3048\u305a\u30fb\u30fb\u30fbGitHub\u306eIssue\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n11/16\u8ffd\u8a18\nRob\u304b\u3089\u5225\u9014Issue\u3092\u4f5c\u3063\u3066\uff01\uff01\u3068\u30b3\u30e1\u30f3\u30c8\u304c\u8fd4\u3063\u3066\u304d\u305f\u306e\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\nhttps://github.com/spring-projects/spring-security/issues/4134\n\n\n\u72ec\u81ea\u306eSecurityConfigurer\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\nJava Config\u3092\u4f7f\u3063\u3066Spring Security\u306e\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u5834\u5408\u3001WebSecurityConfigurerAdapter\u3092\u7d99\u627f\u3057\u305fJava Config\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3001WebSecurityConfigurerAdapter\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3057\u3066\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3044\u307e\u3059\u3002\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.formLogin()\n                .permitAll();\n        http.logout()\n                .permitAll();\n        http.authorizeRequests()\n                .anyRequest().authenticated();\n    }\n\n}\n\n\u3067\u306f\u3001SecurityConfigurer\u3068\u306f\u4f55\u8005\u306a\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u5b9f\u306f\u30fb\u30fb\u30fb\u3044\u3064\u3082\u4f55\u6c17\u306a\u304f\u3064\u304b\u3063\u3066\u3044\u308b\u3001formLogin\u3001logout\u3001authorizeRequests\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u304b\u3089\u8fd4\u5374\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304cSecurityConfigurer\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u304a\u308a\u3001\u958b\u767a\u8005\u304c\u6307\u5b9a\u3057\u305f\u8a2d\u5b9a\u5185\u5bb9\u306b\u5fdc\u3058\u3066Spring Security\u306e\u5404\u6a5f\u80fd\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u884c\u3046\u5f79\u5272\u3092\u62c5\u3044\u307e\u3059\u3002\u3053\u306e\u4ed5\u7d44\u307f\u306e\u304a\u304b\u3052\u3067\u3001\u6211\u3005\u958b\u767a\u8005\u306f\u305f\u3063\u305f\u6570\u884c\u306e\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u3060\u3051\u3067\u3001Spring Security\u304c\u63d0\u4f9b\u3059\u308b\u69d8\u3005\u306a\u6a5f\u80fd\u3092\u7c21\u5358\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u3002\n\u672c\u6295\u7a3f\u3067\u306f\u3001Spring Security 4.2\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u4ed5\u7d44\u307f\u3092\u7d39\u4ecb\u3059\u308b\u524d\u306b\u3001SecurityConfigurer\u306e\u4f5c\u6210\u65b9\u6cd5\u3068\u9069\u7528\u4f8b\u3092\u7c21\u5358\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u72ec\u81ea\u306eSecurityConfigurer\u306e\u4f5c\u6210\nSpring Security\u304b\u3089\u69d8\u3005\u306aSecurityConfigurer\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u304c\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\u3001\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u305d\u308c\u3089\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066Spring Security\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3068\u306f\u3044\u3048\u30fb\u30fb\u30fbSpring Security\u3082\u4e07\u80fd\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u3069\u3046\u3057\u3066\u3082\u72ec\u81ea\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u304c\u5fc5\u8981\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u30fb\u30fb\u30fb\u672c\u6295\u7a3f\u3067\u7d39\u4ecb\u3057\u3066\u3044\u308bRequestAttributeAuthenticationFilter\u3092\u4f7f\u3063\u305f\u4e8b\u524d\u8a8d\u8a3c\u3092\u884c\u3046\u969b\u306b\u306f\u3001\u4e8b\u524d\u8a8d\u8a3c\u3092\u9069\u7528\u3059\u308b\u305f\u3081\u306b\u72ec\u81ea\u306eBean\u5b9a\u7fa9\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u3072\u3068\u3064\u53c8\u306f\u6570\u500b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u9069\u7528\u3059\u308b\u3060\u3051\u306a\u3089\u30a2\u30c9\u30db\u30c3\u30af\u306bBean\u5b9a\u7fa9\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u3088\u3044\u3067\u3057\u3087\u3046\u304c\u3001\u3053\u308c\u304c\u6570\u5341\u3001\u6570\u767e\u3068\u3044\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u540c\u3058\u8a2d\u5b9a\u3092\u9069\u7528\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u72ec\u81ea\u306eSecurityConfigurer\u306e\u4f5c\u6210\u3092\u691c\u8a0e\u3057\u3066\u307f\u308b\u306e\u304c\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001RequestAttributeAuthenticationFilter\u3092\u4f7f\u3063\u305f\u4e8b\u524d\u8a8d\u8a3c\u306e\u3068\u3053\u308d\u3067\u30a2\u30c9\u30db\u30c3\u30af\u306bBean\u5b9a\u7fa9\u3057\u305f\u90e8\u5206\u3092\u3001SecurityConfigurer\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u306b\u7f6e\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002\npackage com.example.config;\n\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;\nimport org.springframework.security.core.authority.AuthorityUtils;\nimport org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\nimport org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider;\nimport org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService;\nimport org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails;\nimport org.springframework.security.web.authentication.preauth.RequestAttributeAuthenticationFilter;\n\npublic class MyPreAuthenticationConfigurer extends AbstractHttpConfigurer<MyPreAuthenticationConfigurer, HttpSecurity> {\n\n    @Override\n    public void init(HttpSecurity http) throws Exception {\n        // \u4e8b\u524d\u8a8d\u8a3c\u7528\u306e\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n        PreAuthenticatedAuthenticationProvider provider = new PreAuthenticatedAuthenticationProvider();\n        provider.setPreAuthenticatedUserDetailsService(new PreAuthenticatedGrantedAuthoritiesUserDetailsService());\n        http.authenticationProvider(provider);\n    }\n\n    @Override\n    public void configure(HttpSecurity http) throws Exception {\n        // \u2193 \u4e8b\u524d\u8a8d\u8a3c\u7528\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u9069\u7528\uff08\u30d5\u30a9\u30fc\u30e0\u8a8d\u8a3c\u3088\u308a\u512a\u5148\uff09\n        AuthenticationManager authenticationManager = http.getSharedObject(AuthenticationManager.class);\n        http.addFilterBefore(createPreAuthenticationFilter(authenticationManager), UsernamePasswordAuthenticationFilter.class);\n    }\n\n    private RequestAttributeAuthenticationFilter createPreAuthenticationFilter(AuthenticationManager authenticationManager) {\n        RequestAttributeAuthenticationFilter filter = new RequestAttributeAuthenticationFilter();\n        filter.setAuthenticationManager(authenticationManager);\n        filter.setAuthenticationDetailsSource(\n                request -> new PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails(\n                        request, AuthorityUtils.createAuthorityList(\"ROLE_USER\")));\n        filter.setExceptionIfVariableMissing(false);\n        return filter;\n    }\n\n}\n\n\nNote:\n\u958b\u767a\u8005\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u30dd\u30a4\u30f3\u30c8\u3092\u63d0\u4f9b\u3059\u308b\u5834\u5408\u306f\u3001setter\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u3092\u63d0\u4f9b\u3057\u3001\u5916\u90e8\u304b\u3089\u8a2d\u5b9a\u3055\u308c\u305f\u5185\u5bb9\u306b\u5fdc\u3058\u3066Bean\u5b9a\u7fa9\u3059\u308b\u306e\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002\uff08\u672c\u6295\u7a3f\u3067\u306f\u8aac\u660e\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u30dd\u30a4\u30f3\u30c8\u306f\u3042\u3048\u3066\u63d0\u4f9b\u3057\u3066\u3044\u307e\u305b\u3093\uff09\n\n\n\u72ec\u81ea\u306eSecurityConfigurer\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u9069\u7528\n\u4f5c\u6210\u3057\u305fSecurityConfigurer\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066Spring Security\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u305f\u3044\u5834\u5408\u306f\u3001HttpSecurity\u306eapply\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\uff08Spring Security 4.1\u4ee5\u524d\u3067\u3082\u5229\u7528\u53ef\u80fd\u306a\u65b9\u6cd5\u3067\u3059\uff09\n\nSecurityConfigurer\u306e\u9069\u7528\u4f8b\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.apply(new MyPreAuthenticationConfigurer());\n    }\n}\n\n\n\nNote:\nSpring Security\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30da\u30fc\u30b8\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u30fb\u30fb\u30fb\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u3063\u3066\uff08\uff0bstatic\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\uff09\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b9\u30bf\u30a4\u30eb\u306b\u3057\u3066\u3082\u3088\u3044\u3067\u3057\u3087\u3046\u3002\uff08\u597d\u307f\u306e\u554f\u984c\u304b\u306a\u3068\u30fb\u30fb\u30fb\uff09\nhttp.apply(preAuth());\n\n\n\n\u72ec\u81ea\u306eSecurityConfigurer\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u9069\u7528\nSpring Security 4.2\u3088\u308a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9069\u7528\u3057\u305f\u3044SecurityConfigurer\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u3001\u30af\u30e9\u30b9\u30d1\u30b9\u5185\u306e/META-INF/spring.factories\u306b\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u30fb\u30fb\u30fb\u3053\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001SecurityConfigurer\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u306forg.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer\u3092\u7d99\u627f\u3057\u3066\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3055\u3082\u306a\u3044\u3068\u30fb\u30fb\u30fb\u8d77\u52d5\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\nsrc/resources/META-INF/spring.factories\norg.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer = com.example.config.MyPreAuthenticationConfigurer\n\n\n\u306a\u304a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u9069\u7528\u3055\u308c\u308b\u8a2d\u5b9a\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\u5834\u5408\u3084\u3001\u4f55\u304b\u3057\u3089\u306e\u7406\u7531\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u9069\u7528\u5916\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u30fb\u30fb\u30fb\u524d\u8ff0\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u9069\u7528\u3092\u884c\u3046\u3053\u3068\u3067\u5bfe\u5fdc\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u969b\u306e\u8a2d\u5b9a\u4f8b\nhttp.apply(new MyPreAuthenticationConfigurer())\n        .principalEnvironmentVariable(\"AUTH_USER\"); // \u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u7528\u306esetter\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u3092\u5225\u9014\u7528\u610f\u3057\u3066\u304a\u304f\n\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u9069\u7528\u5916\u306b\u3059\u308b\u8a2d\u5b9a\u4f8b\nhttp.apply(new MyPreAuthenticationConfigurer())\n        .disable(); // disable\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u7121\u52b9\u5316\u3067\u304d\u308b\n\n\n\nXML\u306eBean\u5b9a\u7fa9\u3067\u540c\u4e00\u30e6\u30fc\u30b6\u30fc\u306e\u540c\u6642\u30bb\u30c3\u30b7\u30e7\u30f3\u6570\u3092\u7121\u5236\u9650\u306b\u3067\u304d\u308b\nSpring Security 4.2\u3088\u308a\u3001XML\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9(concurrency-control\u8981\u7d20\u306emax-sessions\u5c5e\u6027)\u3092\u4f7f\u3063\u3066\u540c\u4e00\u30e6\u30fc\u30b6\u30fc\u306e\u540c\u6642\u30bb\u30c3\u30b7\u30e7\u30f3\u6570\u3092\u7121\u5236\u9650(-1)\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Spring Security 4.1\u4ee5\u524d\u304b\u3089\u6a5f\u80fd\u7684\u306b\u306f\u7121\u5236\u9650\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u304c\u3001XML\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u3092\u4f7f\u3063\u3066\u7121\u5236\u9650(-1)\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n<sec:http>\n    <!-- ... -->\n    <sec:session-management>\n        <sec:concurrency-control max-sessions=\"-1\" />\n    </sec:session-management>\n</sec:http>\n\n\nintercept-url\u8981\u7d20\u306brequest-matcher-ref\u5c5e\u6027\u304c\u8ffd\u52a0\u3055\u308c\u308b\nXML\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9(intercept-url\u8981\u7d20\u306brequest-matcher-ref\u5c5e\u6027)\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u306e\u9069\u7528\u5bfe\u8c61\u3092\u67d4\u8edf\u306b\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Java Config\u3067\u306f\u4ee5\u524d\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u306e\u9069\u7528\u5bfe\u8c61\u3092\u6307\u5b9a\u3059\u308b\u969b\u306b\u3001XML\u3067\u3082RequestMatcher\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n<sec:http>\n    <!-- ... -->\n    <sec:intercept-url request-matcher-ref=\"adminRolePathMatcher\" access=\"hasRole('ADMIN')\"/>\n</sec:http>\n\n<bean id=\"adminRolePathMatcher\" class=\"org.springframework.security.web.util.matcher.AndRequestMatcher\">\n    <constructor-arg>\n        <list>\n            <bean class=\"org.springframework.security.web.util.matcher.AntPathRequestMatcher\">\n                <constructor-arg value=\"/admin/**\" />\n            </bean>\n            <bean class=\"org.springframework.security.web.util.matcher.AntPathRequestMatcher\">\n                <constructor-arg value=\"/config/**\" />\n            </bean>\n            <bean class=\"org.springframework.security.web.util.matcher.AntPathRequestMatcher\">\n                <constructor-arg value=\"/monitor/**\" />\n            </bean>\n        </list>\n    </constructor-arg>\n</bean>\n\n\n\nMap\u304b\u3089\u968e\u5c64\u5316\u30ed\u30fc\u30eb\u3092\u8868\u73fe\u3059\u308b\u6587\u5b57\u5217\u3092\u7c21\u5358\u306b\u4f5c\u308c\u308b\nMap<String, List<String>>\u304b\u3089\u968e\u5c64\u5316\u30ed\u30fc\u30eb\u3092\u8868\u73fe\u3059\u308b\u6587\u5b57\u5217(\u4f8b\uff1a ROLE_ADMIN > ROLE_STAFF)\u3092\u4f5c\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001Spring Boot\u306eType-safe Configuration Properties\u3068\u306e\u9023\u643a\u3092\u5f37\u304f\u610f\u8b58\u4ed5\u7d44\u307f\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066RoleHierarchy\u306eBean\u3092\u5b9a\u7fa9\u3092\u884c\u3046\u3060\u3051\u3067\u3001\u7c21\u5358\u306b\u968e\u5c64\u5316\u30ed\u30fc\u30eb\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u672c\u6295\u7a3f\u3067\u306f\u3001Spring Security 4.2\u3067\u8ffd\u52a0\u3055\u308c\u305f\u4ed5\u7d44\u307f\u3092\u6d3b\u7528\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u968e\u5c64\u5316\u30ed\u30fc\u30eb\u3092\u8868\u73fe\u3059\u308b\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u5b9a\u7fa9\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\nROLE_ADMIN > ROLE_MANAGER\nROLE_ADMIN > ROLE_STAFF\nROLE_STAFF > ROLE_USER\nROLE_USER > ROLE_GUEST\n\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u30af\u30e9\u30b9\u306e\u4f5c\u6210\u4f8b\npackage com.example.config;\n\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.security.access.hierarchicalroles.RoleHierarchy;\nimport org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl;\nimport org.springframework.security.access.hierarchicalroles.RoleHierarchyUtils;\nimport org.springframework.stereotype.Component;\nimport org.springframework.util.CollectionUtils;\n\nimport java.util.LinkedHashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@ConfigurationProperties(\"security.roles\")\n@Component\npublic class SecurityRolesProperties {\n\n    private Map<String, List<String>> hierarchyMap = new LinkedHashMap<>();\n\n    public Map<String, List<String>> getHierarchyMap() {\n        return hierarchyMap;\n    }\n\n    public void setHierarchyMap(Map<String, List<String>> hierarchyMap) {\n        this.hierarchyMap = hierarchyMap;\n    }\n\n    public RoleHierarchy getRoleHierarchy() {\n        RoleHierarchyImpl roleHierarchy = new RoleHierarchyImpl();\n        roleHierarchy.setHierarchy(CollectionUtils.isEmpty(hierarchyMap) ? \"\"\n                : RoleHierarchyUtils.roleHierarchyFromMap(hierarchyMap)); // Map\u304b\u3089\u968e\u5c64\u5316\u30ed\u30fc\u30eb\u6587\u5b57\u5217\u306b\u5909\u63db\n        return roleHierarchy;\n\n    }\n\n}\n\n\n\nRoleHierarchy\u306eBean\u5b9a\u7fa9\u4f8b\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Bean\n    RoleHierarchy roleHierarchy(SecurityRolesProperties rolesProperties) {\n        return rolesProperties.getRoleHierarchy();\n    }\n}\n\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u3084YAML\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ed\u30fc\u30eb\u306e\u968e\u5c64\u5316\u5b9a\u7fa9\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u305f\u5b9a\u7fa9\u4f8b(src/resources/application.properties)\nsecurity.roles.hierarchyMap.ROLE_ADMIN = ROLE_MANAGER,ROLE_STAFF\nsecurity.roles.hierarchyMap.ROLE_STAFF = ROLE_USER\nsecurity.roles.hierarchyMap.ROLE_USER = ROLE_GUEST\n\n\nor\n\nYAML\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u305f\u5b9a\u7fa9\u4f8b(src/resources/application.yml)\nsecurity:\n  roles:\n    hierarchyMap:\n      ROLE_ADMIN:\n        - ROLE_MANAGER\n        - ROLE_STAFF\n      ROLE_STAFF:\n        - ROLE_USER\n      ROLE_USER:\n        - ROLE_GUEST\n\n\n\nCookieCsrfTokenRepository\u3067\u6271\u3046Cookie\u306e\u30d1\u30b9\u304c\u6307\u5b9a\u3067\u304d\u308b\nSpring Security 4.1\u3067\u8ffd\u52a0\u3055\u308c\u305fCookieCsrfTokenRepository\u3067\u3059\u304c\u3001Cookie\u306e\u30d1\u30b9\u306b\u306fWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30d1\u30b9\u304c\u56fa\u5b9a\u3067\u8a2d\u5b9a\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002Spring Security 4.2\u304b\u3089\u306f\u3001Cookie\u306e\u30d1\u30b9\u306b\u8a2d\u5b9a\u3059\u308b\u5024\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    // ...\n    http.csrf()\n            .csrfTokenRepository(csrfTokenRepository());\n\n}\n\nprivate CsrfTokenRepository csrfTokenRepository() {\n    CookieCsrfTokenRepository repository = new CookieCsrfTokenRepository();\n    repository.setCookiePath(\"/foo\"); // \u660e\u793a\u7684\u306b\u30d1\u30b9\u3092\u6307\u5b9a\u3067\u304d\u308b\n    return repository;\n}\n\n\nInvalidSessionStrategy\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u7c21\u5358\u306b\u9069\u7528\u3067\u304d\u308b\nSpring Security 4.2\u304b\u3089\u3001InvalidSessionStrategy\u306e\u5b9f\u88c5\u30af\u30e9\u30b9(\u7121\u52b9\u306a\u3063\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u691c\u51fa\u3057\u305f\u6642\u306e\u52d5\u4f5c)\u3092\u7c21\u5358\u306b\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u307e\u3067\u306f\u3001\u7121\u52b9\u306a\u3063\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u691c\u51fa\u3057\u305f\u6642\u306b\u8868\u793a\u3059\u308bURL\u306e\u6307\u5b9a\u3057\u304b\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\nNote:\nJava Config\u306e\u65b9\u306f4.1\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u305f\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3051\u3069\u30fb\u30fb\u30fb\u30fb\n\n\nJavaConfig\u3092\u4f7f\u7528\u3057\u305f\u5b9a\u7fa9\u4f8b\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    // ...\n    http.sessionManagement()\n            .invalidSessionStrategy(invalidSessionStrategy());\n    // ...\n}\n\nprivate InvalidSessionStrategy invalidSessionStrategy() {\n    return (request, response) -> {\n        // \u8981\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081\u306e\u72ec\u81ea\u51e6\u7406\u3092\u5b9f\u88c5\n    };\n}\n\n\n\nXML\u3092\u4f7f\u7528\u3057\u305f\u5b9a\u7fa9\u4f8b\n<sec:http>\n    <!-- ... -->\n    <sec:session-management invalid-session-strategy-ref=\"invalidSessionStrategy\" />\n    <!-- ... -->\n</sec:http>\n\n<bean id=\"invalidSessionStrategy\" class=\"com.example.CustomInvalidSessionStrategy\" />\n\n\n\nUserBuilder\u3068\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u308b\nUser\u30af\u30e9\u30b9\u306b\u3001UserBuilder\u3068\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n@Bean\npublic UserDetailsService userDetailsService() {\n    InMemoryUserDetailsManager userDetailsManager = new InMemoryUserDetailsManager();\n    userDetailsManager.createUser(User.withUsername(\"kazuki43zoo\").password(\"password\").roles(\"USER\").build());\n    return userDetailsManager;\n}\n\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306f\u3053\u308c\u304b\u3089\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u308bSpring Security 4.2\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002Spring Security 4.1\u306b\u5f15\u304d\u7d9a\u304d\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u7c21\u5358\u306b\u306a\u3063\u305f\u308a\u3001\u3044\u304f\u3064\u304b\u65b0\u6a5f\u80fd\u3082\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\uff01\uff01\uff08Spring 4.1\u306b\u304f\u3089\u3079\u308b\u3068\u30a4\u30f3\u30d1\u30af\u30c8\u306e\u3042\u308b\u5909\u66f4\u5c11\u306a\u3044\u6c17\u306f\u3057\u307e\u3059\u304c\u30fb\u30fb\u30fb\uff09\u3002\n\u65e2\u306b\u300cSpring Security Reactive\u300d\u306e\u958b\u767a\u3082\u59cb\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u306e\u52d5\u5411\u3082\u898b\u9003\u305b\u306a\u3044\u3068\u3053\u308d\u3067\u3059 \n\n\u53c2\u8003\u30b5\u30a4\u30c8\n\nhttp://docs.spring.io/spring-security/site/docs/4.2.0.RELEASE/reference/htmlsingle/\nhttp://docs.spring.io/spring-security/site/docs/4.2.0.RELEASE/reference/htmlsingle/#new\n\n\u4eca\u56de\u306f11/10\u306b\u30ea\u30ea\u30fc\u30b9\u304c\u4e88\u5b9a\u3055\u308c\u3066\u3044\u308bSpring Security 4.2\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff08\u306a\u3093\u3068\u306a\u304f\u30ea\u30ea\u30fc\u30b9\u306f\u4f38\u3073\u308b\u6c17\u304c\u3059\u308b\u3051\u3069\u30fb\u30fb\u30fb\uff09\u3002\u300c[Spring Security 4.1 \u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/e925f134e65d7595aa3c)\u300d\u306e\u6642\u3068\u540c\u69d8\u306b\u3001\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e\u300cWhat\u2019s New in Spring Security 4.2\u300d\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u5185\u5bb9\u3092\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u4ea4\u3048\u3066\u5177\u4f53\u7684\u306b\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\uff08\u9006\u306b\u3044\u3046\u3068\u3001\u300cWhat\u2019s New in Spring Security 4.2\u300d\u306b\u306e\u3063\u3066\u3044\u306a\u3044\u5909\u66f4\u70b9\u306f\u7d39\u4ecb\u3057\u306a\u3044\u306e\u3067\u3001\u3042\u3057\u304b\u3089\u305a\u30fb\u30fb\u30fb :wink: \uff09\n\n## 4.2.0.RELEASE (2016/11/10)\n\n\u4e88\u60f3\u306b\u53cd\u3057\u3066\uff01\uff1f11/10\u306b\u3061\u3083\u3093\u3068\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f :grin:\nRC1\u306e\u30d0\u30b0\u4fee\u6b63\u3084\u6a5f\u80fd\u8ffd\u52a0\u304c\u3042\u3063\u305f\u306e\u3067\u53cd\u6620\u3057\u307e\u3057\u305f\u3002\n\n# \u52d5\u4f5c\u691c\u8a3c\u74b0\u5883\n* Spring Security ~~4.2.0.RC1~~ -> 4.2.0.RELEASE\n* Spring Boot ~~1.4.1.RELEASE~~ -> 1.4.2.RELEASE\n\n# What\u2019s New in Spring Security 4.2\n\n## Web Improvements\n\n\u4ee5\u4e0b\u306f\u3001Web\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n| No | Web\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9 |\n| :---: | --- |\n| 1 | \u8a8d\u8a3c\u60c5\u5831\u306a\u3069\u3092\u4fdd\u6301\u3059\u308bSpring Security\u63d0\u4f9b\u306e\u30af\u30e9\u30b9\u3092\u3001JSON\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306eJackson\u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002(\u5206\u6563\u30bb\u30c3\u30b7\u30e7\u30f3\u74b0\u5883\u5411\u3051) |\n| 2 | Referrer Policy\u30d8\u30c3\u30c0\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\uff08\u2605 11/10\u8ffd\u52a0\uff09 |\n| 3 | `DefaultHttpFirewall`\u306bHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u5206\u5272\u653b\u6483\u5bfe\u7b56\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n| 4 | `@AuthenticationPrincipal`\u306e`expression`\u5c5e\u6027\u306e\u4e2d\u3067Bean\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 5 | SSO\u9023\u643a\u7528\u306b`RequestAttributeAuthenticationFilter`\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n| 6 | \u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u306a\u3069\u306eProxy Server\u306e\u8a2d\u5b9a\u306b\u95a2\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n| 7 | \u7121\u52b9\u5316\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u305f\u6642\u306e\u632f\u308b\u821e\u3044\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\uff08`SessionInformationExpiredStrategy`\uff09\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\uff08\u540c\u4e00\u30e6\u30fc\u30b6\u30fc\u3067\u306e\u540c\u6642\u30bb\u30c3\u30b7\u30e7\u30f3\u6570\u3092\u5236\u9650\u3057\u3066\u3044\u308b\u6642\u306b\u4f7f\u308f\u308c\u307e\u3059\uff09 |\n| 8 | \u8907\u6570\u306e`LogoutHandler`\u3092\u3072\u3068\u3064\u306e`LogoutHandler`\u3068\u3057\u3066\u6271\u3046\u305f\u3081\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\uff08`CompositeLogoutHandler`\uff09\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n\n## Configuration Improvements\n\n\u4ee5\u4e0b\u306f\u3001Configuration\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n| No | Configuration\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9 |\n| :---: | --- |\n| 9 | \u30ed\u30fc\u30eb\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9(\u30c7\u30d5\u30a9\u30eb\u30c8\uff1aROLE_)\u3092\u4e00\u5143\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 10 | Java Config(`WebSecurityConfigurerAdapter`)\u4f7f\u7528\u6642\u306b\u3001\u72ec\u81ea\u306e`Configurer`(`AbstractHttpConfigurer`\u306e\u30b5\u30d6\u30af\u30e9\u30b9)\u3092\u8aad\u307f\u8fbc\u3080\u4ed5\u7d44\u307f\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n| 11 | XML\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9(`concurrency-control`\u8981\u7d20\u306e`max-sessions`\u5c5e\u6027)\u3092\u4f7f\u3063\u3066\u540c\u4e00\u30e6\u30fc\u30b6\u30fc\u306e\u540c\u6642\u30bb\u30c3\u30b7\u30e7\u30f3\u6570\u3092\u7121\u5236\u9650(-1)\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 12 | XML\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9(`intercept-url`\u8981\u7d20\u306b`request-matcher-ref`\u5c5e\u6027)\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u306e\u9069\u7528\u5bfe\u8c61\u3092\u67d4\u8edf\u306b\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 13 | `Map<String, List<String>>`\u304b\u3089\u968e\u5c64\u5316\u30ed\u30fc\u30eb\u3092\u8868\u73fe\u3059\u308b\u6587\u5b57\u5217(\u4f8b\uff1a `ROLE_ADMIN > ROLE_STAFF`)\u3092\u4f5c\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n| 14 | `CookieCsrfTokenRepository`\u3067\u6271\u3046Cookie\u306e\u30d1\u30b9\u304c\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 15 | `InvalidSessionStrategy`\u306e\u5b9f\u88c5\u30af\u30e9\u30b9(\u7121\u52b9\u306a\u3063\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u691c\u51fa\u3057\u305f\u6642\u306e\u52d5\u4f5c)\u3092\u7c21\u5358\u306b\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 16 | \"Fix Exposing Beans for defaultMethodExpressionHandler can prevent Method Security\"\u306f\u3001\u30d0\u30b0\u4fee\u6b63\u306e\u3088\u3046\u306a\u306e\u3067\u8aac\u660e\u306f\u5272\u611b\u3057\u307e\u3059 :sleepy: |\n\n\n## Miscellaneous\n\n\u4ee5\u4e0b\u306f\u3001\u305d\u306e\u4ed6\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3067\u3059\u3002\n\n| No | \u305d\u306e\u4ed6\u306e\u4e3b\u306a\u5909\u66f4\u70b9 |\n| :---: | --- |\n| 17 | Spring 5\u4e0a\u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\uff08\u305f\u3076\u3093\uff09 \u203b\u8a66\u3057\u3066\u307e\u305b\u3093\u3051\u3069 :smirk: |\n| 18 | `User`\u30af\u30e9\u30b9\u306b\u3001`UserBuilder`\u3068\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n| 19 | \"Fix after csrf() is invoked, future MockMvc invocations use original CsrfTokenRepository\"\u306f\u3001\u30d0\u30b0\u4fee\u6b63\u306e\u3088\u3046\u306a\u306e\u3067\u8aac\u660e\u306f\u5272\u611b\u3057\u307e\u3059 :sleepy: |\n| 20 | \u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u304b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30a2\u30c3\u30d7\u3055\u308c\u307e\u3059\uff08\u305d\u3057\u3066\u8aac\u660e\u306f\u5272\u611b\u3057\u307e\u301c\u3059 :wink:\uff09 |\n\n\n# Spring 4.2.0.RELEASE\u306e\u9069\u7528\u3059\u308b\n\n\u307e\u305a\u3001[SPRING INITIALIZR](https://start.spring.io/)\u304b\u3089\u300cWeb\u300d\u300cSecurity\u300d\u3092\u6307\u5b9a\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\n\n```xml:pom.xml\n<!-- ... -->\n<properties>\n\t<!-- ... -->\n\t<spring-security.version>4.2.0.RELEASE</spring-security.version> <!-- \u2190 \u8ffd\u52a0 -->\n</properties>\n<!-- ... -->\n```\n\n\n# \u5206\u6563\u30bb\u30c3\u30b7\u30e7\u30f3\u5411\u3051\u306eJackson\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u63d0\u4f9b\u3055\u308c\u308b \n\nSpring Security\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u3067\u306f\u3001\u8a8d\u8a3c\u60c5\u5831\u306a\u3069\u3092HTTP\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u683c\u7d0d\u3059\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u8907\u6570\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u5171\u6709\u3059\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u304b\u306e\u65b9\u6cd5\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u30fc\u9593\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3059\u308b\n* RDBMS\u3084Key/Value\u30b9\u30c8\u30a2(Redis\u306a\u3069)\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u4fdd\u5b58\u3059\u308b\n\n\u3044\u305a\u308c\u306e\u65b9\u6cd5\u3092\u63a1\u7528\u3057\u3066\u3082\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\uff08Java\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u53ca\u3073\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3059\u308b\u4ed5\u7d44\u307f\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u3082\u3063\u3068\u3082\u6a19\u6e96\u7684\u306a\u306e\u306fJava\u6a19\u6e96\u306e\u4ed5\u7d44\u307f(`java.io.Serializable`)\u3067\u3059\u304c\u3001\u5b9f\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u5f8c\u306e\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba\u306e\u5897\u52a0\u7387\u304c\u591a\u3044\uff0b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u3082\u96e3\u70b9\u304c\u3042\u308a\u3001\u5225\u306e\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u304c\u5fc5\u8981\u306b\u306a\u308b\u30b1\u30fc\u30b9\u3082\u5c11\u306a\u304f\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u3072\u3068\u3064\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u306e\u304c\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092JSON\u30c7\u30fc\u30bf\u306b\u5909\u63db\u3057\u3066\u5171\u6709\u3059\u308b\u65b9\u6cd5\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u672c\u6295\u7a3f\u3067\u306f\u3001Spring Session\u3092\u4f7f\u7528\u3057\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092[Redis](http://redis.io/)\u306b\u683c\u7d0d\u3059\u308b\u969b\u306b\u3001Spring Security 4.2\u3067\u8ffd\u52a0\u3055\u308c\u305fJackson\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092JSON\u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n## Redis\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u8d77\u52d5\n\n\u672c\u6295\u7a3f\u3067\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u3084\u8d77\u52d5\u65b9\u6cd5\u306e\u8aac\u660e\u306f\u5272\u611b\u3057\u307e\u3059\u3002\u30cd\u30c3\u30c8\u3067\u8abf\u3079\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044 :bow_tone2:\n\n## Spring Session(Redis)\u306e\u9069\u7528\n\n\u307e\u305a\u3001\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u300c`org.springframework.session:spring-session-data-redis`\u300d\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```xml:pom.xml\n<dependency>\n\t<groupId>org.springframework.session</groupId>\n\t<artifactId>spring-session-data-redis</artifactId>\n</dependency>\n```\n\n\u3064\u304e\u306b\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4fdd\u5b58\u5148\u3068\u3057\u3066Redis\u3092\u6307\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\n\n```properties:src/main/resources/application.properties\nspring.session.store-type=redis\n```\n\n> **Note:**\n>\n> `spring.session.store-type`\u306f\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u5b9f\u306f\u52d5\u304f\u306e\u3067\u3059\u304c\u30fb\u30fb\u30fb\u4ee5\u4e0b\u306e\u3088\u3046\u306aWARN\u30ed\u30b0\u304c\u51fa\u3066\u3057\u307e\u3046\u306e\u3067\u5fc5\u305a\u6307\u5b9a\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\uff01\uff01\n> \n> ```\n> 2016-11-10 23:44:46.257  WARN 31968 --- [ost-startStop-1] o.s.b.a.s.RedisSessionConfiguration      : Spring Session store type is mandatory: set 'spring.session.store-type=redis' in your configuration\n> ```\n\n## \u30d5\u30a9\u30fc\u30e0\u30ed\u30b0\u30a4\u30f3\u306e\u9069\u7528\n\nSpring Boot\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068Basic\u8a8d\u8a3c\u304c\u6709\u52b9\u306b\u306a\u3066\u304a\u308a\u3001\u30ed\u30b0\u30a4\u30f3\u304c\u6210\u529f\u3057\u3066\u3082\u8a8d\u8a3c\u60c5\u5831\u304c\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u683c\u7d0d\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u30d5\u30a9\u30fc\u30e0\u30ed\u30b0\u30a4\u30f3\u6a5f\u80fd\u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002\n\n```java\npackage com.example.config;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\n\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.formLogin()\n                .permitAll();\n        http.authorizeRequests()\n                .anyRequest().authenticated();\n    }\n\n}\n```\n\n## \u30c7\u30d5\u30a9\u30eb\u30c8\u30e6\u30fc\u30b6\u30fc\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u5909\u66f4\n\nSpring Boot\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u3001Spring Security\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e6\u30fc\u30b6\u30fc(`user`)\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u8d77\u52d5\u6642\u306b\u767a\u884c\u3055\u308c\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\n...\n2016-11-05 17:12:26.520  INFO 12105 --- [           main] b.a.s.AuthenticationManagerConfiguration : \n\nUsing default security password: e825bc6d-19ef-4c76-93c7-d436a95172d2\n```\n\n\u6bce\u56de\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u5909\u308f\u308b\u306e\u306f\u9762\u5012\u306a\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u300c`password`\u300d\u306b\u5909\u66f4\u3057\u3061\u3083\u3044\u307e\u3057\u3087\u3046\u3002\n\n```properties:src/resources/application.properties\nsecurity.user.password=password\n```\n\n## \u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u306e\u8868\u793a\n\n\u300c[http://localhost:8080/login](http://localhost:8080/login)\u300d\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001Spring Security\u63d0\u4f9b\u306e\u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n<img width=\"1269\" alt=\"spring-security-default-login.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/117313/833383b7-69fa-c912-12cc-5d9e81457ad2.png\">\n\n\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u8868\u793a\u3059\u308b\u3068\u3001HTTP\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u751f\u6210\u3055\u308cRedis\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\u4eca\u56de\u306f[Medis](https://github.com/luin/medis)\u3068\u3044\u3046Redis\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30c4\u30fc\u30eb\u3092\u4f7f\u3063\u3066Redis\u306e\u4e2d\u8eab\u3092\u8997\u3044\u3066\u307f\u307e\u3059\u3002 \uff08\u30c4\u30fc\u30eb\u306f\u306a\u3093\u3067\u3082OK\u3067\u3059\uff09\n\n<img width=\"1681\" alt=\"medis-bin.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/117313/5967eb52-f926-63a1-46dc-8e4165910d57.png\">\n\n\n\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u306f\u3001HTTP\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u683c\u7d0d\u3057\u305fCSRF\u30c8\u30fc\u30af\u30f3\u3092\u4fdd\u6301\u3059\u308b\u30af\u30e9\u30b9\u306e\u4e2d\u8eab\u3067\u3059\u3002\u30fb\u30fb\u30fb\u30fb\u4e2d\u8eab\u304c\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306a\u306e\u304c\u308f\u304b\u308b\u3068\u304a\u3082\u3044\u307e\u3059\u3002\n\n## Jackson\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u9069\u7528\n\nSpring Security 4.2\u3067\u8ffd\u52a0\u3055\u308c\u305fJackson\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3001Spring Session\u306e\u4e2d\u3067\u5229\u7528\u3057\u3066\u3044\u308bSpring Data Redis\u306e\u4e2d\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092JSON\u306b\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```java\npackage com.example.config;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.springframework.beans.factory.BeanClassLoaderAware;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer;\nimport org.springframework.data.redis.serializer.RedisSerializer;\nimport org.springframework.security.jackson2.SecurityJackson2Modules;\n\n@Configuration\npublic class HttpSessionConfig implements BeanClassLoaderAware {\n\n    private ClassLoader classLoader;\n\n    @Bean\n    public RedisSerializer<Object> springSessionDefaultRedisSerializer() {\n        ObjectMapper objectMapper = new ObjectMapper();\n        objectMapper.registerModules(SecurityJackson2Modules.getModules(classLoader)); // Spring Security\u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u9069\u7528\n        return new GenericJackson2JsonRedisSerializer(objectMapper); // Spring Data Redis\u306bJSON\u5909\u63db\u7528\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u9069\u7528\n    }\n\n    @Override\n    public void setBeanClassLoader(ClassLoader classLoader) {\n        this.classLoader = classLoader;\n    }\n\n}\n```\n\n> **Note:**\n>\n> Spring Boot\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306f\u3001`@Configuration`\u306e\u4ee3\u308f\u308a\u306b`@org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSession`\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\uff01\uff01\n\n\nJackson\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u9069\u7528\u3057\u305f\u5f8c\u306b\u3001Redis\u306e\u4e2d\u8eab\u3092\u30af\u30ea\u30a2\u3057\u3066\u518d\u5ea6\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3092\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u304cJSON\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306d :v:\n\n<img width=\"1681\" alt=\"medis-json.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/117313/004b3005-f831-5eff-2537-14846afa70cb.png\">\n\n\u3055\u3089\u306b\u3001\u30ed\u30b0\u30a4\u30f3\u5f8c\u306bRedis\u306e\u4e2d\u3092\u8997\u304f\u3068\u3001\u8a8d\u8a3c\u60c5\u5831\u3082JSON\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059 :grin:\n\n<img width=\"1709\" alt=\"medis-json-after-login.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/117313/1f8b35d5-9e41-459e-0b3b-3ac8dc0e3102.png\">\n\n> ~~**Warning:**~~\n>\n> ~~RC1\u306e\u6642\u70b9\u3067\u306f\u3001\u4e8b\u524d\u8a8d\u8a3c\u95a2\u9023\u306e\u30af\u30e9\u30b9(`PreAuthenticatedAuthenticationToken`\u306a\u3069)\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u307f\u305f\u3044\u3067\u3001\u4e8b\u524d\u8a8d\u8a3c\u3092\u4f7f\u3046\u3068Redis\u304b\u3089\u30ed\u30fc\u30c9\u3057\u305f\u8a8d\u8a3c\u60c5\u5831\uff08JSON\uff09\u3092\u30d1\u30fc\u30b9\u3059\u308b\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\uff08\uff1d\u8a8d\u8a3c\u5f8c\u306e\u30a2\u30af\u30bb\u30b9\u3067\u30a8\u30e9\u30fc\u306b\u306a\u308b\u30fb\u30fb\u30fb\uff09\u3002\u3068\u308a\u3042\u3048\u305a\u3001[GitHub\u306eIssue](https://github.com/spring-projects/spring-security/issues/3736#issuecomment-258615923)\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002~~\n>\n> 4.2.0.RELEASE\u3067\u89e3\u6d88\u3055\u308c\u307e\u3057\u305f\uff01\uff01\n\n\n# Referrer Policy\u30d8\u30c3\u30c0\u306e\u51fa\u529b\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u308b\n\nSpring Security 4.2\u3088\u308a\u3001[Referrer Policy](https://www.w3.org/TR/referrer-policy/)\u3092\u30d6\u30e9\u30a6\u30b6\u306b\u6307\u793a\u3059\u308b\u305f\u3081\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u3092\u51fa\u529b\u3059\u308b\u6a5f\u80fd\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u306a\u304a\u3001\u3053\u306e\u6a5f\u80fd\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u9069\u7528\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u9069\u7528\u3057\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306aBean\u5b9a\u7fa9\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```java:JavaConfig\u306b\u3088\u308bBean\u5b9a\u7fa9\u4f8b\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    // ...\n    http.headers()\n            .referrerPolicy(ReferrerPolicyHeaderWriter.ReferrerPolicy.SAME_ORIGIN);\n    // ...\n}\n```\n\n```xml:XML\u306b\u3088\u308bBean\u5b9a\u7fa9\u4f8b\n<sec:http>\n    <!-- ... -->\n    <sec:headers>\n        <sec:referrer-policy policy=\"same-origin\"/>\n    </sec:headers>\n    <!-- ... -->\n</sec:http>\n```\n\n\u4ee5\u4e0b\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```text:\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u51fa\u529b\u4f8b\nHTTP/1.1 200\n...\nReferrer-Policy: same-origin\n...\n```\n\n# HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u5206\u5272\u653b\u6483\u5bfe\u7b56\u304c\u8ffd\u52a0\u3055\u308c\u308b\n\nHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u5206\u5272\u653b\u6483(HTTP Response Splitting Attack)\u306f\u3001HTTP\u30d8\u30c3\u30c0\u30fb\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u653b\u6483\u306b\u3088\u308a\u8907\u6570\u306eHTTP\u30ec\u30b9\u30f3\u30dd\u30f3\u30b9\u3092\u4f5c\u308a\u51fa\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u30b5\u30fc\u30d0\uff08\u30d7\u30ed\u30ad\u30b7\u30b5\u30fc\u30d0\uff09\u306b\u507d\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u305b\u308b\u3053\u3068\u3067\u3001\u60aa\u610f\u306e\u3042\u308b\u30da\u30fc\u30b8\u3092\u95b2\u89a7\u3055\u305b\u308b\u3068\u3044\u3046\u653b\u6483\u624b\u6cd5\u3067\u3059\u3002Spring Secuirty 4.2\u304b\u3089\u306f\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u5024\u306b\u6539\u884c\u30b3\u30fc\u30c9\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3068`IllegalArgumentException`\u306b\u306a\u308a\u307e\u3059\u3002\n\n# `@AuthenticationPrincipal`\u306e`expression`\u5c5e\u6027\u306e\u4e2d\u3067Bean\u53c2\u7167\u3067\u304d\u308b\n\n`@AuthenticationPrincipal`\u306e`expression`\u5c5e\u6027\u306e\u4e2d\u3067Bean\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068\u3067\u3001\u8a8d\u8a3c\u60c5\u5831\u3092\u5f15\u6570\u306b\u3057\u3066\u4efb\u610f\u306eBean\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u8fd4\u308a\u5024\u3092Handler\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nSpring Security\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3067\u306fJPA\u306e`EntityManager`\u3068\u306e\u9023\u643a\u4f8b\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u672c\u6295\u7a3f\u3067\u306f\u3001\u8a8d\u8a3c\u60c5\u5831\u306b\u7d10\u3065\u304f\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u60c5\u5831\uff08\u96fb\u8a71\u756a\u53f7\u3001\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\uff09\u3092\u691c\u7d22\u3057\u3066Handler\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n## \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u691c\u7d22\u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210\n\n\u307e\u305a\u3001\u30e6\u30fc\u30b6\u540d\u3092\u53d7\u3051\u53d6\u3063\u3066\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u3092\u8fd4\u5374\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002\u672c\u6765\u3067\u3042\u308c\u3070\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u691c\u7d22\u3059\u308b\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u672c\u6295\u7a3f\u3067\u306f\u56fa\u5b9a\u5024\u3092\u8fd4\u3057\u3061\u3083\u3044\u307e\u3059\u3002\n\n```java\npackage com.example.service;\n\nimport com.example.domain.Profile;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class ProfileService {\n\n    public Profile find(String username) {\n        Profile profile = new Profile();\n        profile.setUsername(username);\n        profile.setPhone(\"09012345678\");\n        profile.setEmail(\"test@gmail.com\");\n        return profile;\n    }\n\n}\n```\n\n## \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u691c\u7d22\u30b5\u30fc\u30d3\u30b9\u306e\u547c\u3073\u51fa\u3057\n\n`@AuthenticationPrincipal`\u306e`expression`\u5c5e\u6027\u306e\u4e2d\u304b\u3089\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u691c\u7d22\u30b5\u30fc\u30d3\u30b9\u306eBean\u3092\u53c2\u7167\u3057\u3001\u691c\u7d22\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u7d50\u679c\u3092Handler\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a\u307e\u3057\u3087\u3046\u3002\n\n```java\npackage com.example.controller;\n\nimport com.example.domain.Profile;\nimport org.springframework.security.core.annotation.AuthenticationPrincipal;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/profile\")\npublic class ProfileRestController {\n\n    @GetMapping\n    public Profile getProfile(\n            @AuthenticationPrincipal(expression = \"@profileService.find(username)\") Profile profile) {\n        return profile;\n    }\n\n}\n```\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u300c[http://localhost:8080/profile](http://localhost:8080/profile)\u300d\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068\u4ee5\u4e0b\u306eJSON\u304c\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n\n```json\n{\"username\":\"user\",\"phone\":\"09012345678\",\"email\":\"test@gmail.com\"}\n```\n\n# `RequestAttributeAuthenticationFilter`\u304c\u8ffd\u52a0\u3055\u308c\u308b\n\n`AbstractPreAuthenticatedProcessingFilter`\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3068\u3057\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30b9\u30b3\u30fc\u30d7\u304b\u3089\u8cc7\u683c\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u4e8b\u524d\u8a8d\u8a3c\u3092\u884c\u3046`RequestAttributeAuthenticationFilter`\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\n\n* [Shibboleth](https://wiki.shibboleth.net/confluence/display/SHIB2/NativeSPJavaInstall)\n* [Stanford WebAuth](http://webauth.stanford.edu/manual/mod/mod_webauth.html#java)\n\n\u3068\u3044\u3063\u305fSSO(Single Sign-On)\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u3068\u9023\u643a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n> **Note:**\n>\n> \u985e\u4f3c\u306e\u30af\u30e9\u30b9\u3068\u3057\u3066\u306f\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u304b\u3089\u8cc7\u683c\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u30af\u30e9\u30b9\uff08`RequestHeaderAuthenticationFilter`\uff09\u304c\u3042\u308a\u307e\u3059\u3002\n\n\nSSO(Single Sign-On)\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u3068\u5b9f\u969b\u306b\u9023\u643a\u3059\u308b\u306e\u306f\u3061\u3087\u3063\u3068\u9762\u5012\u306a\u306e\u3067\u30fb\u30fb\u30fb\u672c\u6295\u7a3f\u3067\u306f\u3001\u64ec\u4f3c\u7684\u306b\u540c\u3058\u72b6\u614b\u3092\u4f5c\u308a\u51fa\u3057\u3066\u52d5\u4f5c\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n```java\n\npackage com.example.config;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.Ordered;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.core.authority.AuthorityUtils;\nimport org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\nimport org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider;\nimport org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService;\nimport org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails;\nimport org.springframework.security.web.authentication.preauth.RequestAttributeAuthenticationFilter;\nimport org.springframework.stereotype.Component;\nimport org.springframework.web.filter.OncePerRequestFilter;\n\nimport javax.servlet.FilterChain;\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    AuthenticationManager authenticationManager;\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.formLogin()\n                .permitAll();\n        http.authorizeRequests()\n                .anyRequest().authenticated();\n        // \u2193 \u4e8b\u524d\u8a8d\u8a3c\u7528\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u9069\u7528\uff08\u30d5\u30a9\u30fc\u30e0\u8a8d\u8a3c\u3088\u308a\u512a\u5148\uff09\n        http.addFilterBefore(preAuthenticationFilter(), UsernamePasswordAuthenticationFilter.class);\n    }\n\n    // \u4e8b\u524d\u8a8d\u8a3c\u7528\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n    private RequestAttributeAuthenticationFilter preAuthenticationFilter() {\n        RequestAttributeAuthenticationFilter filter = new RequestAttributeAuthenticationFilter();\n        filter.setAuthenticationManager(authenticationManager);\n        filter.setAuthenticationDetailsSource(\n                request -> new PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails(\n                        request, AuthorityUtils.createAuthorityList(\"ROLE_USER\")));\n        filter.setExceptionIfVariableMissing(false);\n        return filter;\n    }\n\n    // \u4e8b\u524d\u8a8d\u8a3c\u7528\u306e\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n    @Autowired\n    void configurePreAuthenticatedAuthenticationProvider(AuthenticationManagerBuilder builder) {\n        PreAuthenticatedAuthenticationProvider provider = new PreAuthenticatedAuthenticationProvider();\n        provider.setPreAuthenticatedUserDetailsService(new PreAuthenticatedGrantedAuthoritiesUserDetailsService());\n        builder.authenticationProvider(provider);\n    }\n\n    // \u64ec\u4f3c\u7684\u306bSSO\u30d7\u30ed\u30c0\u30af\u30c8\u3092\u901a\u904e\u3057\u305f\u72b6\u614b\u3092\u4f5c\u308a\u51fa\u3059\u305f\u3081\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\n    // \u8a8d\u8a3c\u304c\u5fc5\u8981\u306a\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u300c?user=xxxx\u300d\u3092\u4ed8\u4e0e\u3059\u308b\u3068SSO\u30d7\u30ed\u30c0\u30af\u30c8\u3092\u901a\u904e\u3057\u305f\u72b6\u614b\u306b\u306a\u308b\n    @Component\n    @Order(Ordered.HIGHEST_PRECEDENCE)\n    static class SsoUsernameStoringFilter extends OncePerRequestFilter {\n        @Override\n        protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain) throws ServletException, IOException {\n            String user = request.getParameter(\"user\");\n            if (user != null) {\n                request.setAttribute(\"REMOTE_USER\", user);\n            }\n            filterChain.doFilter(request, response);\n        }\n    }\n\n}\n```\n\n\u4e8b\u524d\u8a8d\u8a3c\u9069\u7528\u5f8c\u306b\u524d\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u4f5c\u6210\u3057\u305f\u300c/profile\u300d\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001\u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u3092\u4f7f\u7528\u3057\u305f\u8a8d\u8a3c\u3092\u884c\u308f\u305a\u306b\u300c/profile\u300d\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```text\n$ curl -D - http://localhost:8080/profile?user=kazuki43zoo\nHTTP/1.1 200 \nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode=block\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nSet-Cookie: SESSION=acffc6c9-d555-4da5-828d-ec4e20a937d6;path=/;HttpOnly\nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Sat, 05 Nov 2016 15:07:39 GMT\n\n{\"username\":\"kazuki43zoo\",\"phone\":\"09012345678\",\"email\":\"test@gmail.com\"}\n```\n\n\u4e8b\u524d\u8a8d\u8a3c\u304c\u6210\u529f\u3059\u308b\u3068Spring Secuirty\u306e\u8a8d\u8a3c\u60c5\u5831\u306f\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u683c\u7d0d\u3055\u308c\u3001\u4ee5\u964d\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u306f\u8a8d\u8a3c\u51e6\u7406\u304c\u4e0d\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\uff12\u56de\u76ee\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u306f\u3001\u300c?user=xxxxx\u300d\u3092\u7701\u7565\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\n$ curl -D - http://localhost:8080/profile -H 'Cookie: SESSION=acffc6c9-d555-4da5-828d-ec4e20a937d6'\nHTTP/1.1 200 \nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode=block\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Sat, 05 Nov 2016 15:15:46 GMT\n\n{\"username\":\"kazuki43zoo\",\"phone\":\"09012345678\",\"email\":\"test@gmail.com\"}\n```\n\n\u4eca\u5ea6\u306f\u9055\u3046\u30e6\u30fc\u30b6\u30fc\u540d\u3092\u6307\u5b9a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\n$ curl -D - http://localhost:8080/profile?user=hoge -H 'Cookie: SESSION=acffc6c9-d555-4da5-828d-ec4e20a937d6'\nHTTP/1.1 200 \nX-Content-Type-Options: nosniff\nX-XSS-Protection: 1; mode=block\nCache-Control: no-cache, no-store, max-age=0, must-revalidate\nPragma: no-cache\nExpires: 0\nX-Frame-Options: DENY\nContent-Type: application/json;charset=UTF-8\nTransfer-Encoding: chunked\nDate: Sat, 05 Nov 2016 15:16:47 GMT\n\n{\"username\":\"kazuki43zoo\",\"phone\":\"09012345678\",\"email\":\"test@gmail.com\"}\n```\n\n\u65e2\u306b\u540c\u4e00\u30bb\u30c3\u30b7\u30e7\u30f3\u5185\u306b\u8a8d\u8a3c\u60c5\u5831\u304c\u3042\u308b\u305f\u3081\u3001\u8a8d\u8a3c\u51e6\u7406\u304c\u884c\u308f\u308c\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n# Proxy Server\u95a2\u9023\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u308b\n\nSpring Security\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30da\u30fc\u30b8\u306b\u3001\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u306a\u3069\u306eProxy Server\u5229\u7528\u6642\u306e\u8a2d\u5b9a\u306b\u95a2\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n* http://docs.spring.io/spring-security/site/docs/4.2.0.RELEASE/reference/htmlsingle/#appendix-proxy-server\n\n# `SessionInformationExpiredStrategy`\u304c\u8ffd\u52a0\u3055\u308c\u308b\n\n\u7121\u52b9\u5316\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u305f\u6642\u306e\u632f\u308b\u821e\u3044\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\uff08`SessionInformationExpiredStrategy`\uff09\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u5b9f\u88c5\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u8ffd\u52a0\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3084\u30af\u30e9\u30b9\u306f\u3001\u540c\u4e00\u30e6\u30fc\u30b6\u30fc\u3067\u306e\u540c\u6642\u30bb\u30c3\u30b7\u30e7\u30f3\u6570\u3092\u5236\u9650\u3057\u3066\u3044\u3066\uff0b\u540c\u6642\u30bb\u30c3\u30b7\u30e7\u30f3\u6570\u3092\u8d85\u3048\u305f\u6642\u306b\u3082\u3063\u3068\u3082\u30a2\u30af\u30bb\u30b9\u304c\u306a\u3044\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u7121\u52b9\u5316\u3059\u308b\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u3044\u308b\u6642\u3067\u3059\u3002\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u308f\u308c\u308b\u5b9f\u88c5\u30af\u30e9\u30b9\u306f\u3001`ConcurrentSessionFilter`\u306e\u5185\u90e8\u30af\u30e9\u30b9\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b`ResponseBodySessionInformationExpiredStrategy`\u3067\u3001\u30ec\u30b9\u30dd\u30f3\u30b9BODY\u306b\u300cThis session has been expired (possibly due to multiple concurrent logins being attempted as the same user).\u300d\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u7121\u52b9\u5316\u3055\u308c\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u305f\u969b\u306b\u3001\u6307\u5b9a\u3057\u305fURL\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u8a2d\u5b9a\u306b\u3059\u308b\u3068`SimpleRedirectSessionInformationExpiredStrategy`\u3068\u3044\u3046\u30af\u30e9\u30b9\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002\n\n```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    // ...\n    http.sessionManagement()\n            .maximumSessions(5)\n            .maxSessionsPreventsLogin(false)\n            .expiredUrl(\"/login?session-expired\");\n    // ...\n}\n```\n\n\u306a\u304a\u3001Spring Security\u304c\u7528\u610f\u3057\u3066\u3044\u308b\u5b9f\u88c5\u3067\u8981\u4ef6\u304c\u5145\u305f\u305b\u306a\u3044\u5834\u5408\u306f\u3001\u72ec\u81ea\u306e\u5b9f\u88c5\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    // ...\n    http.sessionManagement()\n            .maximumSessions(5)\n            .maxSessionsPreventsLogin(false)\n            .expiredSessionStrategy(expiredSessionStrategy());\n    // ...\n}\n\nprivate SessionInformationExpiredStrategy expiredSessionStrategy() {\n    return event -> {\n        // \u8981\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081\u306e\u72ec\u81ea\u51e6\u7406\u3092\u5b9f\u88c5\n    };\n}\n```\n\n\n# `CompositeLogoutHandler`\u304c\u8ffd\u52a0\u3055\u308c\u308b\n\n\u8907\u6570\u306e`LogoutHandler`\u3092\u3072\u3068\u3064\u306e`LogoutHandler`\u3068\u3057\u3066\u6271\u3046\u305f\u3081\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\uff08`CompositeLogoutHandler`\uff09\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u304a\u305d\u3089\u304f\u30fb\u30fb\u30fb\u3053\u306e\u30af\u30e9\u30b9\u3092\u76f4\u63a5\u4f7f\u3046\u3053\u3068\u306f\u3042\u307e\u308a\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u672c\u6295\u7a3f\u3067\u306f\u8aac\u660e\u306f\u5272\u611b\u3055\u305b\u3066\u3082\u3089\u3044\u307e\u3059\u3002\n\n\n# \u30ed\u30fc\u30eb\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u4e00\u5143\u7ba1\u7406\u3067\u304d\u308b\n\nSpring Security\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u30ed\u30fc\u30eb\u30d9\u30fc\u30b9\u306e\u6a29\u9650\u3092\"ROLE_\"\u3067\u306f\u3058\u307e\u308b\u6587\u5b57\u5217\u3068\u3057\u3066\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070\u3001\u3042\u308b\u30e6\u30fc\u30b6\u30fc\u306b\u300c\u5229\u7528\u8005\u300d\u3068\u300c\u7ba1\u7406\u8005\u300d\u306e\u30ed\u30fc\u30eb\u3092\u5272\u308a\u5f53\u3066\u308b\u5834\u5408\u306f\u3001\u300cROLE_USER\u300d\u300cROLE_ADMIN\u300d\u3068\u3044\u3063\u305f\u611f\u3058\u306e\u30ed\u30fc\u30eb\u540d\u3092\u6a29\u9650\u60c5\u5831\u3068\u3057\u3066\u4fdd\u6301\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```java:\u30c7\u30d5\u30a9\u30eb\u30c8\u72b6\u614b\u3067\u306e\u30ed\u30fc\u30eb\u306e\u4ed8\u4e0e\u4f8b\n@Service\npublic class CustomUserDetailsService implements UserDetailsService {\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        return new User(username, \"N/A\", AuthorityUtils.createAuthorityList(\"ROLE_USER\")); // \"ROLE_\"\u304c\u5fc5\u8981\n   }\n}\n```\n\n```java:\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u306e\u6307\u5b9a\u4f8b\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    // ...\n    http.authorizeRequests()\n            .anyRequest().hasRole(\"USER\"); // \"ROLE_\"\u306f\u7701\u7565\u3067\u304d\u308b(Spring Security 4.0\u301c)\n    // ...\n}\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9(\"ROLE_\")\u6587\u5b57\u306f\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001Spring Security 4.2\u304b\u3089\u306f\u3001`org.springframework.security.config.core.GrantedAuthorityDefaults`\u306eBean\u3092\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9(\"ROLE_\")\u3092\u306a\u304f\u3059\u5834\u5408\u306e\u8a2d\u5b9a\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3057\u3087\u3046\u3002\n\n```java:\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u3092\u306a\u304f\u3059\u969b\u306e\u8a2d\u5b9a\u4f8b\n@Bean\nGrantedAuthorityDefaults grantedAuthorityDefaults() {\n    return new GrantedAuthorityDefaults(\"\");\n}\n```\n\n\u4e0a\u8a18\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3068\u3001\u8a8d\u8a3c\u60c5\u5831\u306b\u4fdd\u6301\u3059\u308b\u30ed\u30fc\u30eb\u306b\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\"ROLE_\"\uff09\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\n```java:\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u306a\u304f\u3057\u305f\u6642\u306e\u30ed\u30fc\u30eb\u306e\u4ed8\u4e0e\u4f8b\n@Service\npublic class CustomUserDetailsService implements UserDetailsService {\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        return new User(username, \"N/A\", AuthorityUtils.createAuthorityList(\"USER\")); // \"ROLE_\"\u306f\u4e0d\u8981\n   }\n}\n```\n\nSpring Security 4.0\u3088\u308a\u3001\u30ea\u30bd\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u3092\u6307\u5b9a\u3059\u308b\u969b\u306b\u30ed\u30fc\u30eb\u540d\u304b\u3089\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u7701\u7565\u3067\u304d\u308b\u3088\u3046\u306b\u6539\u5584\u3055\u308c\u3066\u304a\u308a\u3001\u8a8d\u8a3c\u60c5\u5831\u3067\u4fdd\u6301\u3059\u308b\u30ed\u30fc\u30eb\u540d\u304b\u3089\u3082\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9(\"ROLE_\")\u3092\u5916\u3057\u305f\u3044\u3068\u601d\u3063\u305f\u65b9\u3082\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f Spring Security 4.2\u304b\u3089\u5c0e\u5165\u3055\u308c\u305f\u3053\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u306a\u304f\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff01\n\n> **Warning:**\n>\n> \u8a8d\u8a3c\u60c5\u5831\u3067\u4fdd\u6301\u3059\u308b\u30ed\u30fc\u30eb\u540d\u304b\u3089\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u306a\u304f\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u7d39\u4ecb\u3057\u307e\u3057\u305f\u304c\u30fb\u30fb\u30fb\u3001`hasRole`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3068\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u3044\u307e\u3059\u30fb\u30fb\u30fb:cold_sweat:\n>\n> ```java\n> http.authorizeRequests()\n>        .anyRequest().hasRole(\"USER\"); // \u2190 hasRole\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\"ROLE_\"\u3092\u56fa\u5b9a\u3067\u4ed8\u4e0e\u3057\u3066\u3044\u308b\u30fb\u30fb\u30fb\n> ```\n>\n> \u3053\u306e\u554f\u984c\u306e\u56de\u907f\u7b56\u3068\u3057\u3066\u306f\u30fb\u30fb\u30fb\u3001`access`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3001Expression\u3068\u3057\u3066`hasRole`\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u6b63\u3057\u304f\u52d5\u4f5c\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n>\n> ```java\n> http.authorizeRequests()\n>        .anyRequest().access(\"hasRole('USER')\"); // Expression\u7d4c\u7531\u3060\u3068\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u5185\u5bb9\u304c\u53cd\u6620\u3055\u308c\u308b\n> ```\n>\n> \u3053\u308c\u306fSpring Security\u306e\u30d0\u30b0\uff1f\u306a\u6c17\u304c\u3059\u308b\u306e\u3067\u30fb\u30fb\u30fb\n> \u3068\u308a\u3042\u3048\u305a\u30fb\u30fb\u30fb[GitHub\u306eIssue](https://github.com/spring-projects/spring-security/issues/3701#issuecomment-258658837)\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u6b8b\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n>\n> **11/16\u8ffd\u8a18**\n> Rob\u304b\u3089\u5225\u9014Issue\u3092\u4f5c\u3063\u3066\uff01\uff01\u3068\u30b3\u30e1\u30f3\u30c8\u304c\u8fd4\u3063\u3066\u304d\u305f\u306e\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n> https://github.com/spring-projects/spring-security/issues/4134\n\n# \u72ec\u81ea\u306e`SecurityConfigurer`\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\n\nJava Config\u3092\u4f7f\u3063\u3066Spring Security\u306e\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u5834\u5408\u3001`WebSecurityConfigurerAdapter`\u3092\u7d99\u627f\u3057\u305fJava Config\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3001`WebSecurityConfigurerAdapter`\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3057\u3066\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3044\u307e\u3059\u3002\n\n```java:\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.formLogin()\n                .permitAll();\n        http.logout()\n                .permitAll();\n        http.authorizeRequests()\n                .anyRequest().authenticated();\n    }\n\n}\n```\n\n\u3067\u306f\u3001`SecurityConfigurer`\u3068\u306f\u4f55\u8005\u306a\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u5b9f\u306f\u30fb\u30fb\u30fb\u3044\u3064\u3082\u4f55\u6c17\u306a\u304f\u3064\u304b\u3063\u3066\u3044\u308b\u3001`formLogin`\u3001`logout`\u3001`authorizeRequests`\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u304b\u3089\u8fd4\u5374\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c`SecurityConfigurer`\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u304a\u308a\u3001\u958b\u767a\u8005\u304c\u6307\u5b9a\u3057\u305f\u8a2d\u5b9a\u5185\u5bb9\u306b\u5fdc\u3058\u3066Spring Security\u306e\u5404\u6a5f\u80fd\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u884c\u3046\u5f79\u5272\u3092\u62c5\u3044\u307e\u3059\u3002\u3053\u306e\u4ed5\u7d44\u307f\u306e\u304a\u304b\u3052\u3067\u3001\u6211\u3005\u958b\u767a\u8005\u306f\u305f\u3063\u305f\u6570\u884c\u306e\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u3060\u3051\u3067\u3001Spring Security\u304c\u63d0\u4f9b\u3059\u308b\u69d8\u3005\u306a\u6a5f\u80fd\u3092\u7c21\u5358\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u3002\n\n\u672c\u6295\u7a3f\u3067\u306f\u3001Spring Security 4.2\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u4ed5\u7d44\u307f\u3092\u7d39\u4ecb\u3059\u308b\u524d\u306b\u3001`SecurityConfigurer`\u306e\u4f5c\u6210\u65b9\u6cd5\u3068\u9069\u7528\u4f8b\u3092\u7c21\u5358\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n## \u72ec\u81ea\u306e`SecurityConfigurer`\u306e\u4f5c\u6210\n\nSpring Security\u304b\u3089\u69d8\u3005\u306a`SecurityConfigurer`\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u304c\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\u3001\u591a\u304f\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u305d\u308c\u3089\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066Spring Security\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3068\u306f\u3044\u3048\u30fb\u30fb\u30fbSpring Security\u3082\u4e07\u80fd\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u3069\u3046\u3057\u3066\u3082\u72ec\u81ea\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u304c\u5fc5\u8981\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u30fb\u30fb\u30fb\u672c\u6295\u7a3f\u3067\u7d39\u4ecb\u3057\u3066\u3044\u308b`RequestAttributeAuthenticationFilter`\u3092\u4f7f\u3063\u305f\u4e8b\u524d\u8a8d\u8a3c\u3092\u884c\u3046\u969b\u306b\u306f\u3001\u4e8b\u524d\u8a8d\u8a3c\u3092\u9069\u7528\u3059\u308b\u305f\u3081\u306b\u72ec\u81ea\u306eBean\u5b9a\u7fa9\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u3072\u3068\u3064\u53c8\u306f\u6570\u500b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u9069\u7528\u3059\u308b\u3060\u3051\u306a\u3089\u30a2\u30c9\u30db\u30c3\u30af\u306bBean\u5b9a\u7fa9\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u3088\u3044\u3067\u3057\u3087\u3046\u304c\u3001\u3053\u308c\u304c\u6570\u5341\u3001\u6570\u767e\u3068\u3044\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u540c\u3058\u8a2d\u5b9a\u3092\u9069\u7528\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u72ec\u81ea\u306e`SecurityConfigurer`\u306e\u4f5c\u6210\u3092\u691c\u8a0e\u3057\u3066\u307f\u308b\u306e\u304c\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u3001`RequestAttributeAuthenticationFilter`\u3092\u4f7f\u3063\u305f\u4e8b\u524d\u8a8d\u8a3c\u306e\u3068\u3053\u308d\u3067\u30a2\u30c9\u30db\u30c3\u30af\u306bBean\u5b9a\u7fa9\u3057\u305f\u90e8\u5206\u3092\u3001`SecurityConfigurer`\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u306b\u7f6e\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002\n\n```java\npackage com.example.config;\n\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;\nimport org.springframework.security.core.authority.AuthorityUtils;\nimport org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;\nimport org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider;\nimport org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesUserDetailsService;\nimport org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails;\nimport org.springframework.security.web.authentication.preauth.RequestAttributeAuthenticationFilter;\n\npublic class MyPreAuthenticationConfigurer extends AbstractHttpConfigurer<MyPreAuthenticationConfigurer, HttpSecurity> {\n\n    @Override\n    public void init(HttpSecurity http) throws Exception {\n        // \u4e8b\u524d\u8a8d\u8a3c\u7528\u306e\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n        PreAuthenticatedAuthenticationProvider provider = new PreAuthenticatedAuthenticationProvider();\n        provider.setPreAuthenticatedUserDetailsService(new PreAuthenticatedGrantedAuthoritiesUserDetailsService());\n        http.authenticationProvider(provider);\n    }\n\n    @Override\n    public void configure(HttpSecurity http) throws Exception {\n        // \u2193 \u4e8b\u524d\u8a8d\u8a3c\u7528\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u306e\u9069\u7528\uff08\u30d5\u30a9\u30fc\u30e0\u8a8d\u8a3c\u3088\u308a\u512a\u5148\uff09\n        AuthenticationManager authenticationManager = http.getSharedObject(AuthenticationManager.class);\n        http.addFilterBefore(createPreAuthenticationFilter(authenticationManager), UsernamePasswordAuthenticationFilter.class);\n    }\n\n    private RequestAttributeAuthenticationFilter createPreAuthenticationFilter(AuthenticationManager authenticationManager) {\n        RequestAttributeAuthenticationFilter filter = new RequestAttributeAuthenticationFilter();\n        filter.setAuthenticationManager(authenticationManager);\n        filter.setAuthenticationDetailsSource(\n                request -> new PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails(\n                        request, AuthorityUtils.createAuthorityList(\"ROLE_USER\")));\n        filter.setExceptionIfVariableMissing(false);\n        return filter;\n    }\n\n}\n```\n\n> **Note:**\n>\n> \u958b\u767a\u8005\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u30dd\u30a4\u30f3\u30c8\u3092\u63d0\u4f9b\u3059\u308b\u5834\u5408\u306f\u3001setter\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u3092\u63d0\u4f9b\u3057\u3001\u5916\u90e8\u304b\u3089\u8a2d\u5b9a\u3055\u308c\u305f\u5185\u5bb9\u306b\u5fdc\u3058\u3066Bean\u5b9a\u7fa9\u3059\u308b\u306e\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002\uff08\u672c\u6295\u7a3f\u3067\u306f\u8aac\u660e\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u30dd\u30a4\u30f3\u30c8\u306f\u3042\u3048\u3066\u63d0\u4f9b\u3057\u3066\u3044\u307e\u305b\u3093\uff09\n\n## \u72ec\u81ea\u306e`SecurityConfigurer`\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u9069\u7528\n\n\u4f5c\u6210\u3057\u305f`SecurityConfigurer`\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066Spring Security\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u305f\u3044\u5834\u5408\u306f\u3001`HttpSecurity`\u306e`apply`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\uff08Spring Security 4.1\u4ee5\u524d\u3067\u3082\u5229\u7528\u53ef\u80fd\u306a\u65b9\u6cd5\u3067\u3059\uff09\n\n```java:SecurityConfigurer\u306e\u9069\u7528\u4f8b\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        // ...\n        http.apply(new MyPreAuthenticationConfigurer());\n    }\n}\n```\n\n> **Note:**\n>\n> Spring Security\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30da\u30fc\u30b8\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u30fb\u30fb\u30fb\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u3063\u3066\uff08\uff0bstatic\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\uff09\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b9\u30bf\u30a4\u30eb\u306b\u3057\u3066\u3082\u3088\u3044\u3067\u3057\u3087\u3046\u3002\uff08\u597d\u307f\u306e\u554f\u984c\u304b\u306a\u3068\u30fb\u30fb\u30fb\uff09\n>\n> ```java\n> http.apply(preAuth());\n> ```\n\n\n## \u72ec\u81ea\u306e`SecurityConfigurer`\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u9069\u7528\n\nSpring Security 4.2\u3088\u308a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u9069\u7528\u3057\u305f\u3044`SecurityConfigurer`\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u3001\u30af\u30e9\u30b9\u30d1\u30b9\u5185\u306e`/META-INF/spring.factories`\u306b\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u30fb\u30fb\u30fb\u3053\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001`SecurityConfigurer`\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u306f`org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer`\u3092\u7d99\u627f\u3057\u3066\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3055\u3082\u306a\u3044\u3068\u30fb\u30fb\u30fb\u8d77\u52d5\u6642\u306b\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n```src/resources/META-INF/spring.factories\norg.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer = com.example.config.MyPreAuthenticationConfigurer\n```\n\n\u306a\u304a\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u9069\u7528\u3055\u308c\u308b\u8a2d\u5b9a\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\u5834\u5408\u3084\u3001\u4f55\u304b\u3057\u3089\u306e\u7406\u7531\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u9069\u7528\u5916\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u30fb\u30fb\u30fb\u524d\u8ff0\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u9069\u7528\u3092\u884c\u3046\u3053\u3068\u3067\u5bfe\u5fdc\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u969b\u306e\u8a2d\u5b9a\u4f8b\nhttp.apply(new MyPreAuthenticationConfigurer())\n        .principalEnvironmentVariable(\"AUTH_USER\"); // \u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u7528\u306esetter\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u3092\u5225\u9014\u7528\u610f\u3057\u3066\u304a\u304f\n```\n\n```java:\u30c7\u30d5\u30a9\u30eb\u30c8\u9069\u7528\u5916\u306b\u3059\u308b\u8a2d\u5b9a\u4f8b\nhttp.apply(new MyPreAuthenticationConfigurer())\n        .disable(); // disable\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3068\u7121\u52b9\u5316\u3067\u304d\u308b\n```\n\n# XML\u306eBean\u5b9a\u7fa9\u3067\u540c\u4e00\u30e6\u30fc\u30b6\u30fc\u306e\u540c\u6642\u30bb\u30c3\u30b7\u30e7\u30f3\u6570\u3092\u7121\u5236\u9650\u306b\u3067\u304d\u308b\n\nSpring Security 4.2\u3088\u308a\u3001XML\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9(`concurrency-control`\u8981\u7d20\u306e`max-sessions`\u5c5e\u6027)\u3092\u4f7f\u3063\u3066\u540c\u4e00\u30e6\u30fc\u30b6\u30fc\u306e\u540c\u6642\u30bb\u30c3\u30b7\u30e7\u30f3\u6570\u3092\u7121\u5236\u9650(-1)\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Spring Security 4.1\u4ee5\u524d\u304b\u3089\u6a5f\u80fd\u7684\u306b\u306f\u7121\u5236\u9650\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u304c\u3001XML\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u3092\u4f7f\u3063\u3066\u7121\u5236\u9650(-1)\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n```xml\n<sec:http>\n    <!-- ... -->\n    <sec:session-management>\n        <sec:concurrency-control max-sessions=\"-1\" />\n    </sec:session-management>\n</sec:http>\n```\n\n# `intercept-url`\u8981\u7d20\u306b`request-matcher-ref`\u5c5e\u6027\u304c\u8ffd\u52a0\u3055\u308c\u308b\n\nXML\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9(`intercept-url`\u8981\u7d20\u306b`request-matcher-ref`\u5c5e\u6027)\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u306e\u9069\u7528\u5bfe\u8c61\u3092\u67d4\u8edf\u306b\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002Java Config\u3067\u306f\u4ee5\u524d\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u306e\u9069\u7528\u5bfe\u8c61\u3092\u6307\u5b9a\u3059\u308b\u969b\u306b\u3001XML\u3067\u3082`RequestMatcher`\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```xml\n<sec:http>\n    <!-- ... -->\n    <sec:intercept-url request-matcher-ref=\"adminRolePathMatcher\" access=\"hasRole('ADMIN')\"/>\n</sec:http>\n\n<bean id=\"adminRolePathMatcher\" class=\"org.springframework.security.web.util.matcher.AndRequestMatcher\">\n    <constructor-arg>\n        <list>\n            <bean class=\"org.springframework.security.web.util.matcher.AntPathRequestMatcher\">\n                <constructor-arg value=\"/admin/**\" />\n            </bean>\n            <bean class=\"org.springframework.security.web.util.matcher.AntPathRequestMatcher\">\n                <constructor-arg value=\"/config/**\" />\n            </bean>\n            <bean class=\"org.springframework.security.web.util.matcher.AntPathRequestMatcher\">\n                <constructor-arg value=\"/monitor/**\" />\n            </bean>\n        </list>\n    </constructor-arg>\n</bean>\n\n```\n\n# `Map`\u304b\u3089\u968e\u5c64\u5316\u30ed\u30fc\u30eb\u3092\u8868\u73fe\u3059\u308b\u6587\u5b57\u5217\u3092\u7c21\u5358\u306b\u4f5c\u308c\u308b\n\n`Map<String, List<String>>`\u304b\u3089\u968e\u5c64\u5316\u30ed\u30fc\u30eb\u3092\u8868\u73fe\u3059\u308b\u6587\u5b57\u5217(\u4f8b\uff1a `ROLE_ADMIN > ROLE_STAFF`)\u3092\u4f5c\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001Spring Boot\u306eType-safe Configuration Properties\u3068\u306e\u9023\u643a\u3092\u5f37\u304f\u610f\u8b58\u4ed5\u7d44\u307f\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d7\u30ed\u30d1\u30c6\u30a3\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066`RoleHierarchy`\u306eBean\u3092\u5b9a\u7fa9\u3092\u884c\u3046\u3060\u3051\u3067\u3001\u7c21\u5358\u306b\u968e\u5c64\u5316\u30ed\u30fc\u30eb\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u672c\u6295\u7a3f\u3067\u306f\u3001Spring Security 4.2\u3067\u8ffd\u52a0\u3055\u308c\u305f\u4ed5\u7d44\u307f\u3092\u6d3b\u7528\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u968e\u5c64\u5316\u30ed\u30fc\u30eb\u3092\u8868\u73fe\u3059\u308b\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u5b9a\u7fa9\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n```\nROLE_ADMIN > ROLE_MANAGER\nROLE_ADMIN > ROLE_STAFF\nROLE_STAFF > ROLE_USER\nROLE_USER > ROLE_GUEST\n```\n\n```java:\u30d7\u30ed\u30d1\u30c6\u30a3\u30af\u30e9\u30b9\u306e\u4f5c\u6210\u4f8b\npackage com.example.config;\n\nimport org.springframework.boot.context.properties.ConfigurationProperties;\nimport org.springframework.security.access.hierarchicalroles.RoleHierarchy;\nimport org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl;\nimport org.springframework.security.access.hierarchicalroles.RoleHierarchyUtils;\nimport org.springframework.stereotype.Component;\nimport org.springframework.util.CollectionUtils;\n\nimport java.util.LinkedHashMap;\nimport java.util.List;\nimport java.util.Map;\n\n@ConfigurationProperties(\"security.roles\")\n@Component\npublic class SecurityRolesProperties {\n\n    private Map<String, List<String>> hierarchyMap = new LinkedHashMap<>();\n\n    public Map<String, List<String>> getHierarchyMap() {\n        return hierarchyMap;\n    }\n\n    public void setHierarchyMap(Map<String, List<String>> hierarchyMap) {\n        this.hierarchyMap = hierarchyMap;\n    }\n\n    public RoleHierarchy getRoleHierarchy() {\n        RoleHierarchyImpl roleHierarchy = new RoleHierarchyImpl();\n        roleHierarchy.setHierarchy(CollectionUtils.isEmpty(hierarchyMap) ? \"\"\n                : RoleHierarchyUtils.roleHierarchyFromMap(hierarchyMap)); // Map\u304b\u3089\u968e\u5c64\u5316\u30ed\u30fc\u30eb\u6587\u5b57\u5217\u306b\u5909\u63db\n        return roleHierarchy;\n\n    }\n\n}\n```\n\n```java:RoleHierarchy\u306eBean\u5b9a\u7fa9\u4f8b\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    // ...\n    @Bean\n    RoleHierarchy roleHierarchy(SecurityRolesProperties rolesProperties) {\n        return rolesProperties.getRoleHierarchy();\n    }\n}\n```\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u3084YAML\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ed\u30fc\u30eb\u306e\u968e\u5c64\u5316\u5b9a\u7fa9\u3092\u884c\u3044\u307e\u3059\u3002\n\n```properties:\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u305f\u5b9a\u7fa9\u4f8b(src/resources/application.properties)\nsecurity.roles.hierarchyMap.ROLE_ADMIN = ROLE_MANAGER,ROLE_STAFF\nsecurity.roles.hierarchyMap.ROLE_STAFF = ROLE_USER\nsecurity.roles.hierarchyMap.ROLE_USER = ROLE_GUEST\n```\n\nor\n\n```yaml:YAML\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u305f\u5b9a\u7fa9\u4f8b(src/resources/application.yml)\nsecurity:\n  roles:\n    hierarchyMap:\n      ROLE_ADMIN:\n        - ROLE_MANAGER\n        - ROLE_STAFF\n      ROLE_STAFF:\n        - ROLE_USER\n      ROLE_USER:\n        - ROLE_GUEST\n```\n\n# `CookieCsrfTokenRepository`\u3067\u6271\u3046Cookie\u306e\u30d1\u30b9\u304c\u6307\u5b9a\u3067\u304d\u308b\n\nSpring Security 4.1\u3067\u8ffd\u52a0\u3055\u308c\u305f`CookieCsrfTokenRepository`\u3067\u3059\u304c\u3001Cookie\u306e\u30d1\u30b9\u306b\u306fWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30d1\u30b9\u304c\u56fa\u5b9a\u3067\u8a2d\u5b9a\u3055\u308c\u308b\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002Spring Security 4.2\u304b\u3089\u306f\u3001Cookie\u306e\u30d1\u30b9\u306b\u8a2d\u5b9a\u3059\u308b\u5024\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    // ...\n    http.csrf()\n            .csrfTokenRepository(csrfTokenRepository());\n\n}\n\nprivate CsrfTokenRepository csrfTokenRepository() {\n    CookieCsrfTokenRepository repository = new CookieCsrfTokenRepository();\n    repository.setCookiePath(\"/foo\"); // \u660e\u793a\u7684\u306b\u30d1\u30b9\u3092\u6307\u5b9a\u3067\u304d\u308b\n    return repository;\n}\n```\n\n# `InvalidSessionStrategy`\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u7c21\u5358\u306b\u9069\u7528\u3067\u304d\u308b\n\nSpring Security 4.2\u304b\u3089\u3001`InvalidSessionStrategy`\u306e\u5b9f\u88c5\u30af\u30e9\u30b9(\u7121\u52b9\u306a\u3063\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u691c\u51fa\u3057\u305f\u6642\u306e\u52d5\u4f5c)\u3092\u7c21\u5358\u306b\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u307e\u3067\u306f\u3001\u7121\u52b9\u306a\u3063\u305f\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u691c\u51fa\u3057\u305f\u6642\u306b\u8868\u793a\u3059\u308bURL\u306e\u6307\u5b9a\u3057\u304b\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n> **Note:**\n>\n> Java Config\u306e\u65b9\u306f4.1\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u305f\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3051\u3069\u30fb\u30fb\u30fb\u30fb\n\n\n```java:JavaConfig\u3092\u4f7f\u7528\u3057\u305f\u5b9a\u7fa9\u4f8b\n@Override\nprotected void configure(HttpSecurity http) throws Exception {\n    // ...\n    http.sessionManagement()\n            .invalidSessionStrategy(invalidSessionStrategy());\n    // ...\n}\n\nprivate InvalidSessionStrategy invalidSessionStrategy() {\n    return (request, response) -> {\n        // \u8981\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081\u306e\u72ec\u81ea\u51e6\u7406\u3092\u5b9f\u88c5\n    };\n}\n```\n\n```xml:XML\u3092\u4f7f\u7528\u3057\u305f\u5b9a\u7fa9\u4f8b\n<sec:http>\n    <!-- ... -->\n    <sec:session-management invalid-session-strategy-ref=\"invalidSessionStrategy\" />\n    <!-- ... -->\n</sec:http>\n\n<bean id=\"invalidSessionStrategy\" class=\"com.example.CustomInvalidSessionStrategy\" />\n```\n\n# `UserBuilder`\u3068\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u308b\n\n`User`\u30af\u30e9\u30b9\u306b\u3001`UserBuilder`\u3068\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n```java\n@Bean\npublic UserDetailsService userDetailsService() {\n    InMemoryUserDetailsManager userDetailsManager = new InMemoryUserDetailsManager();\n    userDetailsManager.createUser(User.withUsername(\"kazuki43zoo\").password(\"password\").roles(\"USER\").build());\n    return userDetailsManager;\n}\n```\n\n# \u307e\u3068\u3081\n\n\u4eca\u56de\u306f\u3053\u308c\u304b\u3089\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u308bSpring Security 4.2\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002Spring Security 4.1\u306b\u5f15\u304d\u7d9a\u304d\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304c\u7c21\u5358\u306b\u306a\u3063\u305f\u308a\u3001\u3044\u304f\u3064\u304b\u65b0\u6a5f\u80fd\u3082\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\uff01\uff01\uff08Spring 4.1\u306b\u304f\u3089\u3079\u308b\u3068\u30a4\u30f3\u30d1\u30af\u30c8\u306e\u3042\u308b\u5909\u66f4\u5c11\u306a\u3044\u6c17\u306f\u3057\u307e\u3059\u304c\u30fb\u30fb\u30fb\uff09\u3002\n\u65e2\u306b\u300c[Spring Security Reactive](https://github.com/spring-projects/spring-security-reactive)\u300d\u306e\u958b\u767a\u3082\u59cb\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u306e\u52d5\u5411\u3082\u898b\u9003\u305b\u306a\u3044\u3068\u3053\u308d\u3067\u3059 :wink:\n\n# \u53c2\u8003\u30b5\u30a4\u30c8\n\n* http://docs.spring.io/spring-security/site/docs/4.2.0.RELEASE/reference/htmlsingle/\n* http://docs.spring.io/spring-security/site/docs/4.2.0.RELEASE/reference/htmlsingle/#new\n", "tags": ["spring", "spring-boot", "spring-security", "Java"]}