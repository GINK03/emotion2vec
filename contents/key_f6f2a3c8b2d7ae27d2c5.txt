{"context": " More than 1 year has passed since last update.S3 -> Lambda -> DynamoDB\u3068\u3044\u3046\u6d41\u308c\u3067\u30c7\u30fc\u30bf\u3092\u653e\u308a\u8fbc\u3080\u7b97\u6bb5\u3067\u3059\u3002\u30c7\u30fc\u30bf\u91cf\u306b\u3088\u3063\u3066\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3059\u308b\u304b\u3082\uff08\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u3066\u3066\u624b\u5143\u3067\u306f\u52d5\u3044\u3066\u307e\u305b\u3093\u2026\uff09\u3002\n\n\u524d\u63d0\n\nIAM\u30ed\u30fc\u30eb\u306a\u3069\u306f\u9069\u5207\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\n\n\nLambda\u3067S3\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b\u30b5\u30f3\u30d7\u30eb\nvar aws = require('aws-sdk');\nvar s3 = new aws.S3({ apiVersion: '2006-03-01' });\nvar dynamodb = new aws.DynamoDB({region: 'ap-northeast-1'});\n\nexports.handler = function(event, context) {\n    // Get the object from the event and show its content type\n    var bucket = event.Records[0].s3.bucket.name;\n    var key = event.Records[0].s3.object.key;\n    var params = {\n        Bucket: bucket,\n        Key: key\n    };\n\n    // Retrieve object from S3\n    s3.getObject(params, function(err, data) {\n        if (err) {\n            console.log(err);\n            var message = \"Error getting object \" + key + \" from bucket \" + bucket +\n                \". Make sure they exist and your bucket is in the same region as this function.\";\n            console.log(message);\n            context.fail(message);\n        } else {\n            // \u30d5\u30a1\u30a4\u30eb\u306e\u30d0\u30a4\u30ca\u30ea\u306f data.Body \u306b\u5165\u3063\u3066\u3044\u308b\n            var string = data.Body.toString('utf-8');\n            var payload = JSON.parse(string);\n\n            // \u578b\u3092\u4ed8\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\n            // Object.keys(payload).forEach(function(key) {\n            //     payload[key] = {'N': String(payload[key])};\n            // });\n\n            dynamodb.putItem({\"TableName\":\"s3-upload-history\",\n                \"Item\": payload\n            }\n\n            context.succeed(data.ContentType);\n        }\n    });\n};\n\n\nLambda\u306e\u8a2d\u5b9a\n\nEvent Source Type -> S3\nBucket -> \u4efb\u610f\nEvent Type -> Object Created\nPrefix -> \u4efb\u610f\u306e\u30d1\u30b9\nSuffix -> \u4efb\u610f\u306e\u62e1\u5f35\u5b50\n\n\nS3 -> Lambda -> DynamoDB\u3068\u3044\u3046\u6d41\u308c\u3067\u30c7\u30fc\u30bf\u3092\u653e\u308a\u8fbc\u3080\u7b97\u6bb5\u3067\u3059\u3002\u30c7\u30fc\u30bf\u91cf\u306b\u3088\u3063\u3066\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3059\u308b\u304b\u3082\uff08\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u3066\u3066\u624b\u5143\u3067\u306f\u52d5\u3044\u3066\u307e\u305b\u3093\u2026\uff09\u3002\n\n# \u524d\u63d0\n\n* IAM\u30ed\u30fc\u30eb\u306a\u3069\u306f\u9069\u5207\u306b\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\n\n\n# Lambda\u3067S3\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b\u30b5\u30f3\u30d7\u30eb\n\n```javascript\nvar aws = require('aws-sdk');\nvar s3 = new aws.S3({ apiVersion: '2006-03-01' });\nvar dynamodb = new aws.DynamoDB({region: 'ap-northeast-1'});\n\nexports.handler = function(event, context) {\n    // Get the object from the event and show its content type\n    var bucket = event.Records[0].s3.bucket.name;\n    var key = event.Records[0].s3.object.key;\n    var params = {\n        Bucket: bucket,\n        Key: key\n    };\n    \n    // Retrieve object from S3\n    s3.getObject(params, function(err, data) {\n        if (err) {\n            console.log(err);\n            var message = \"Error getting object \" + key + \" from bucket \" + bucket +\n                \". Make sure they exist and your bucket is in the same region as this function.\";\n            console.log(message);\n            context.fail(message);\n        } else {\n            // \u30d5\u30a1\u30a4\u30eb\u306e\u30d0\u30a4\u30ca\u30ea\u306f data.Body \u306b\u5165\u3063\u3066\u3044\u308b\n            var string = data.Body.toString('utf-8');\n            var payload = JSON.parse(string);\n            \n            // \u578b\u3092\u4ed8\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\n            // Object.keys(payload).forEach(function(key) {\n            //     payload[key] = {'N': String(payload[key])};\n            // });\n        \n            dynamodb.putItem({\"TableName\":\"s3-upload-history\",\n                \"Item\": payload\n            }\n\n            context.succeed(data.ContentType);\n        }\n    });\n};\n```\n\n\n# Lambda\u306e\u8a2d\u5b9a\n\n* Event Source Type -> S3\n* Bucket -> \u4efb\u610f\n* Event Type -> Object Created\n* Prefix -> \u4efb\u610f\u306e\u30d1\u30b9\n* Suffix -> \u4efb\u610f\u306e\u62e1\u5f35\u5b50\n\n", "tags": ["lambda", "S3", "DynamoDB", "AWS"]}