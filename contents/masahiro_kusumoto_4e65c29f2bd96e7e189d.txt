{"context": "\n\nSwift\u3067UILabel\u306e\u5148\u982d\u306e\u6587\u5b57\u3092\u30ea\u30f3\u30af\u5316\u3055\u305b\u3066\u898b\u307e\u3057\u305f\nUILabel\u3067\u4e00\u90e8\u30ea\u30f3\u30af\u5316\u3055\u305b\u305f\u3044\u306a\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u306e\u306f\u5acc\u306a\u306e\u3067\u3061\u3087\u3063\u3068\u8abf\u3079\u3066\u898b\u307e\u3057\u305f\u3002\n\u74b0\u5883\nXcode8\nSwift3\n\n\u5b9f\u88c5\nclass ViewController: UIViewController {\n\n    @IBOutlet weak var helloLabel: UILabel!\n\n    let linkText = \"Hello\"\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        helloLabel.isUserInteractionEnabled = true\n        let tapGestureRecognizer = UITapGestureRecognizer(target: self, action: #selector(tapGesture))\n        helloLabel.addGestureRecognizer(tapGestureRecognizer)\n\n        // \u30ea\u30f3\u30af\u5316\u3055\u305b\u308b\u5834\u6240\u3092\u9752\u304f\u3055\u305b\u308b\u3002\n        let string = helloLabel!.text!\n        let range = (string as NSString).range(of: linkText)\n        let attributedString = NSMutableAttributedString(string: string)\n        attributedString.addAttribute(NSForegroundColorAttributeName, value: UIColor.blue, range: range)\n        helloLabel.attributedText = attributedString\n    }\n\n    func tapGesture(gestureRecognizer: UITapGestureRecognizer) {\n        guard let text = helloLabel.text else { return }\n        let touchPoint = gestureRecognizer.location(in: helloLabel)\n        let textStorage = NSTextStorage(attributedString: NSAttributedString(string: linkText))\n        let layoutManager = NSLayoutManager()\n        textStorage.addLayoutManager(layoutManager)\n        let textContainer = NSTextContainer(size: helloLabel.frame.size)\n        layoutManager.addTextContainer(textContainer)\n        textContainer.lineFragmentPadding = 0\n        let toRange = (text as NSString).range(of: linkText)\n        let glyphRange = layoutManager.glyphRange(forCharacterRange: toRange, actualCharacterRange: nil)\n        let glyphRect = layoutManager.boundingRect(forGlyphRange: glyphRange, in: textContainer)\n        if glyphRect.contains(touchPoint) {\n            print(\"Tapped\")\n        }\n    }\n}\n\n\u3053\u308c\u3060\u3051\u3067linkText\u5185\u306e\u4efb\u610f\u306e\u6587\u5b57\u5217\u3092\u30ea\u30f3\u30af\u5316\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002(\u304d\u3082\u3044\u3067\u3059\u306d)\n# Swift\u3067UILabel\u306e\u5148\u982d\u306e\u6587\u5b57\u3092\u30ea\u30f3\u30af\u5316\u3055\u305b\u3066\u898b\u307e\u3057\u305f\n\nUILabel\u3067\u4e00\u90e8\u30ea\u30f3\u30af\u5316\u3055\u305b\u305f\u3044\u306a\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u306e\u306f\u5acc\u306a\u306e\u3067\u3061\u3087\u3063\u3068\u8abf\u3079\u3066\u898b\u307e\u3057\u305f\u3002\n\n\u74b0\u5883\nXcode8\nSwift3\n\n### \u5b9f\u88c5\n\n```\nclass ViewController: UIViewController {\n\n    @IBOutlet weak var helloLabel: UILabel!\n    \n    let linkText = \"Hello\"\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        helloLabel.isUserInteractionEnabled = true\n        let tapGestureRecognizer = UITapGestureRecognizer(target: self, action: #selector(tapGesture))\n        helloLabel.addGestureRecognizer(tapGestureRecognizer)\n        \n        // \u30ea\u30f3\u30af\u5316\u3055\u305b\u308b\u5834\u6240\u3092\u9752\u304f\u3055\u305b\u308b\u3002\n        let string = helloLabel!.text!\n        let range = (string as NSString).range(of: linkText)\n        let attributedString = NSMutableAttributedString(string: string)\n        attributedString.addAttribute(NSForegroundColorAttributeName, value: UIColor.blue, range: range)\n        helloLabel.attributedText = attributedString\n    }\n    \n    func tapGesture(gestureRecognizer: UITapGestureRecognizer) {\n        guard let text = helloLabel.text else { return }\n        let touchPoint = gestureRecognizer.location(in: helloLabel)\n        let textStorage = NSTextStorage(attributedString: NSAttributedString(string: linkText))\n        let layoutManager = NSLayoutManager()\n        textStorage.addLayoutManager(layoutManager)\n        let textContainer = NSTextContainer(size: helloLabel.frame.size)\n        layoutManager.addTextContainer(textContainer)\n        textContainer.lineFragmentPadding = 0\n        let toRange = (text as NSString).range(of: linkText)\n        let glyphRange = layoutManager.glyphRange(forCharacterRange: toRange, actualCharacterRange: nil)\n        let glyphRect = layoutManager.boundingRect(forGlyphRange: glyphRange, in: textContainer)\n        if glyphRect.contains(touchPoint) {\n            print(\"Tapped\")\n        }\n    }\n}\n```\n\n\u3053\u308c\u3060\u3051\u3067linkText\u5185\u306e\u4efb\u610f\u306e\u6587\u5b57\u5217\u3092\u30ea\u30f3\u30af\u5316\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n<img width=\"320\" alt=\"Simulator Screen Shot 2016.10.29 18.28.03.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/137474/e32c3054-bb5b-5662-b28e-f302a3bf7a09.png\">\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002(\u304d\u3082\u3044\u3067\u3059\u306d)\n\n", "tags": ["Swift", "Swift3.0", "Xcode8", "link"]}