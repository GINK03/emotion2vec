{"tags": ["C#", ".NET", "MacOSX"], "context": " More than 1 year has passed since last update.Mac\u74b0\u5883\u3067C#\u3092\u4f7f\u3063\u3066Web\u30b5\u30fc\u30d0\u3092\u4f5c\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\u3061\u306a\u307f\u306bC#\u306f\u307b\u307c\u521d\u5fc3\u8005\u3067\u3059\u3002\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nMac\u74b0\u5883\u3060\u3068homebrew\u3092\u4f7f\u3063\u3066mono\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u5b9f\u884c\u30fb\u30b3\u30f3\u30d1\u30a4\u30eb\u74b0\u5883\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nbrew install mono\nbrew link mono # dll\u30d5\u30a1\u30a4\u30eb\u3001bin\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3092\u30d1\u30b9\u306e\u901a\u3063\u305f\u5834\u6240\u306b\u30ea\u30f3\u30af\u3059\u308b\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\n\u30b3\u30f3\u30d1\u30a4\u30eb\u306fmcs\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u884c\u3044\u307e\u3059\u3002\nC#\u3084.NET\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u306f\u4ed6\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u304b-sdk\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\u53c2\u8003\uff1ahttp://noriok.hatenadiary.jp/entry/2014/05/18/163019\ndll\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f-r\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u50d5\u306e\u5834\u5408\u306f\uff08\u4e0b\u8a18\u30b3\u30fc\u30c9\u306b\u306f\u51fa\u3066\u304d\u307e\u305b\u3093\u304c\uff09Sqlite\u3092\u4f7f\u3063\u305f\u306e\u3067\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\nmcs -r:Mono.Data.Sqlite.dll *.cs\n\n\n\u5b9f\u884c\n\u5b9f\u884c\u306b\u306fmono\u30b3\u30de\u30f3\u30c9\u306bexe\u30d5\u30a1\u30a4\u30eb\u3092\u6e21\u3057\u3066\u3084\u308a\u307e\u3059\u3002\nmono application.exe\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\napplication.cs\nusing System;\n\nnamespace WebServer\n{\n    public class Application\n    {\n        static void Main (string[] args)\n        {\n            Server server = new Server();\n            server.Start();\n        }\n    }\n}\n\n\n\n\nserver.cs\nusing System;\nusing System.Net;\nusing System.Text;\nusing System.Threading;\n\nnamespace WebServer\n{\n    public class Server\n    {\n        private bool debug = false;\n\n        public Server()\n        {\n        }\n\n        public void Start()\n        {\n            HttpListener listener = GetHttpListener();\n            try\n            {\n                listener.Start();\n            }\n            catch (Exception e)\n            {\n                // Error handling is here\n            }\n            StartListenLoop(listener);\n        }\n\n        HttpListener GetHttpListener()\n        {\n            var listener = new HttpListener();\n            listener.Prefixes.Add(\"http://*:8081\");\n            return listener;\n        }\n\n        void StartListenLoop(HttpListener listener)\n        {\n            while (true)\n            {\n                HttpListenerContext context = listener.GetContext();\n                ThreadPool.QueueUserWorkItem(o => HandleRequest(context));\n            }\n        }\n\n        void HandleRequest(HttpListenerContext context)\n        {\n            AddResponseHeader(context);\n            AddResponseOutput(context);\n            context.Response.Close();\n        }\n\n        void AddResponseHeader(HttpListenerContext context)\n        {\n            context.Response.StatusCode = 200;\n        }\n\n        void AddResponseOutput(HttpListenerContext context)\n        {\n            byte[] bytes = Encoding.GetEncoding(\"UTF-8\").GetBytes(\"test\");\n\n            context.Response.OutputStream.Write(bytes, 0, bytes.Length);\n        }\n    }\n}\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\nmono application.exe # \u30b5\u30fc\u30d0\u306e\u8d77\u52d5\n\n# \u5225\u30b7\u30a7\u30eb\u3067\ncurl http://localhost:8081 # test\u3068\u8fd4\u3063\u3066\u304f\u308c\u3070OK\n\n\n\u307e\u3068\u3081\nHttpListener\u30af\u30e9\u30b9\u3068Thread\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306eWeb\u30b5\u30fc\u30d0\u3092\u7d44\u3081\u307e\u3059\u306d\u3002C#\u3059\u3054\u3044\u3002\n\u3061\u306a\u307f\u306b\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u3060\u3068\u3001curl\u3092for\u6587\u4f7f\u3063\u30661000\u4ef6\u3050\u3089\u3044\u9023\u6253\u3057\u305f\u3089\u7d50\u69cb\u306a\u5272\u5408\u3067connection refused\u304c\u8fd4\u3063\u3066\u304d\u305f\u306e\u3067\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3057\u307e\u3057\u305f\u3002\nC#\u306e\u7df4\u7fd2\u3068\u3044\u3046\u3053\u3068\u3067Sqlite\u4f7f\u3063\u3066\u307f\u305f\u308a\u3001Logger\u30af\u30e9\u30b9\u4f5c\u3063\u305f\u308a\u3082\u3057\u305f\u306e\u3067\u3059\u304c\u7279\u306b\u3064\u307e\u308b\u6240\u3082\u306a\u304b\u3063\u305f\u3067\u3059\u3002\nC#\u3067Sqlite\u306b\u3064\u3044\u3066\u306f\u3042\u307e\u308a\u53c2\u8003\u306b\u306a\u308b\u6587\u7ae0\u304c\u306a\u304b\u3063\u305f\uff08\u7279\u306bLinq\u306f\u5168\u7136\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\uff09\u306e\u3067\u307e\u305f\u8a18\u4e8b\u66f8\u304f\u304b\u3082\u3002\nMac\u74b0\u5883\u3067C#\u3092\u4f7f\u3063\u3066Web\u30b5\u30fc\u30d0\u3092\u4f5c\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\u3061\u306a\u307f\u306bC#\u306f\u307b\u307c\u521d\u5fc3\u8005\u3067\u3059\u3002\n\n## \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nMac\u74b0\u5883\u3060\u3068homebrew\u3092\u4f7f\u3063\u3066mono\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u5b9f\u884c\u30fb\u30b3\u30f3\u30d1\u30a4\u30eb\u74b0\u5883\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```bash\nbrew install mono\nbrew link mono # dll\u30d5\u30a1\u30a4\u30eb\u3001bin\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3092\u30d1\u30b9\u306e\u901a\u3063\u305f\u5834\u6240\u306b\u30ea\u30f3\u30af\u3059\u308b\n```\n\n### \u30b3\u30f3\u30d1\u30a4\u30eb\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u306f`mcs`\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u884c\u3044\u307e\u3059\u3002\nC#\u3084.NET\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u306f\u4ed6\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u304b`-sdk`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u53c2\u8003\uff1ahttp://noriok.hatenadiary.jp/entry/2014/05/18/163019\n\ndll\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f-r\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u50d5\u306e\u5834\u5408\u306f\uff08\u4e0b\u8a18\u30b3\u30fc\u30c9\u306b\u306f\u51fa\u3066\u304d\u307e\u305b\u3093\u304c\uff09Sqlite\u3092\u4f7f\u3063\u305f\u306e\u3067\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n```bash\nmcs -r:Mono.Data.Sqlite.dll *.cs\n```\n\n## \u5b9f\u884c\n\n\u5b9f\u884c\u306b\u306f`mono`\u30b3\u30de\u30f3\u30c9\u306bexe\u30d5\u30a1\u30a4\u30eb\u3092\u6e21\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n\n```bash\nmono application.exe\n```\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n```csharp:application.cs\nusing System;\n\nnamespace WebServer\n{\n    public class Application\n    {\n        static void Main (string[] args)\n        {\n            Server server = new Server();\n            server.Start();\n        }\n    }\n}\n\n```\n\n```csharp:server.cs\nusing System;\nusing System.Net;\nusing System.Text;\nusing System.Threading;\n\nnamespace WebServer\n{\n    public class Server\n    {\n        private bool debug = false;\n\n        public Server()\n        {\n        }\n\n        public void Start()\n        {\n            HttpListener listener = GetHttpListener();\n            try\n            {\n                listener.Start();\n            }\n            catch (Exception e)\n            {\n                // Error handling is here\n            }\n            StartListenLoop(listener);\n        }\n\n        HttpListener GetHttpListener()\n        {\n            var listener = new HttpListener();\n            listener.Prefixes.Add(\"http://*:8081\");\n            return listener;\n        }\n\n        void StartListenLoop(HttpListener listener)\n        {\n            while (true)\n            {\n                HttpListenerContext context = listener.GetContext();\n                ThreadPool.QueueUserWorkItem(o => HandleRequest(context));\n            }\n        }\n\n        void HandleRequest(HttpListenerContext context)\n        {\n            AddResponseHeader(context);\n            AddResponseOutput(context);\n            context.Response.Close();\n        }\n\n        void AddResponseHeader(HttpListenerContext context)\n        {\n            context.Response.StatusCode = 200;\n        }\n\n        void AddResponseOutput(HttpListenerContext context)\n        {\n            byte[] bytes = Encoding.GetEncoding(\"UTF-8\").GetBytes(\"test\");\n\n            context.Response.OutputStream.Write(bytes, 0, bytes.Length);\n        }\n    }\n}\n```\n\n## \u52d5\u4f5c\u78ba\u8a8d\n\n```bash\nmono application.exe # \u30b5\u30fc\u30d0\u306e\u8d77\u52d5\n\n# \u5225\u30b7\u30a7\u30eb\u3067\ncurl http://localhost:8081 # test\u3068\u8fd4\u3063\u3066\u304f\u308c\u3070OK\n```\n\n## \u307e\u3068\u3081\n\nHttpListener\u30af\u30e9\u30b9\u3068Thread\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306eWeb\u30b5\u30fc\u30d0\u3092\u7d44\u3081\u307e\u3059\u306d\u3002C#\u3059\u3054\u3044\u3002\n\u3061\u306a\u307f\u306b\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u3060\u3068\u3001curl\u3092for\u6587\u4f7f\u3063\u30661000\u4ef6\u3050\u3089\u3044\u9023\u6253\u3057\u305f\u3089\u7d50\u69cb\u306a\u5272\u5408\u3067connection refused\u304c\u8fd4\u3063\u3066\u304d\u305f\u306e\u3067\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306b\u3057\u307e\u3057\u305f\u3002\n\nC#\u306e\u7df4\u7fd2\u3068\u3044\u3046\u3053\u3068\u3067Sqlite\u4f7f\u3063\u3066\u307f\u305f\u308a\u3001Logger\u30af\u30e9\u30b9\u4f5c\u3063\u305f\u308a\u3082\u3057\u305f\u306e\u3067\u3059\u304c\u7279\u306b\u3064\u307e\u308b\u6240\u3082\u306a\u304b\u3063\u305f\u3067\u3059\u3002\nC#\u3067Sqlite\u306b\u3064\u3044\u3066\u306f\u3042\u307e\u308a\u53c2\u8003\u306b\u306a\u308b\u6587\u7ae0\u304c\u306a\u304b\u3063\u305f\uff08\u7279\u306bLinq\u306f\u5168\u7136\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\uff09\u306e\u3067\u307e\u305f\u8a18\u4e8b\u66f8\u304f\u304b\u3082\u3002\n"}