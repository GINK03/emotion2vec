{"context": " More than 1 year has passed since last update.\u4f7f\u7528\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\uff08\uff13\u672c\u306e\u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\uff09\n\npython\ndocument_list = [\"\u653f\u5e9c\u306f\u3001GDP\u306e\u6570\u5024\u76ee\u6a19\u3092\u660e\u793a\u3057\u3066\u63b2\u3052\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u653f\u5e9c\u3067\u3059\u304c\u3001\u5e74\u660e\u3051\u6700\u521d\u306e\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70\u3067\u3001\u666f\u6c17\u5bfe\u7b56\u3068\u5931\u696d\u7387\u306b\u3064\u3044\u3066\u306e\u8ffd\u52a0\u306e\u7dcf\u5408\u7d4c\u6e08\u5bfe\u7b56\u306b\u3064\u3044\u3066\u3001\u6c11\u9593\u8b70\u54e1\u304b\u3089\u610f\u898b\u3092\u805e\u3044\u305f\u6a21\u69d8\u3067\u3059\u3002\"\\\n            , \"FRB\uff08\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a\uff09\u306f\u3001\u4f1d\u7d71\u7684\u306a\u7269\u4fa1\u4e0a\u6607\u7387\u3068\u4e26\u3073\u3001\u7c73\u56fd\u306e\u56fd\u5185\u5931\u696d\u7387\u306e\u6c34\u6e96\u3092\u3001\u91d1\u878d\u653f\u7b56\u306e\u8235\u53d6\u308a\u3092\u884c\u3046\u4e0a\u3067\u3001\u4e3b\u8981\u306a\u53c2\u8003\u6570\u5024\u306b\u4f4d\u7f6e\u4ed8\u3051\u3066\u3044\u308b\u3002\"\\\n            , \"\u5e02\u5834\u3067\u306f\u300c\u56fd\u5185\u306e\u6a5f\u95a2\u6295\u8cc7\u5bb6\u306b\u306f\u62bc\u3057\u76ee\u8cb7\u3044\u3092\u5165\u308c\u308b\u52d5\u304d\u304c\u3042\u3063\u305f\u304c\u3001\u6d77\u5916\u6295\u8cc7\u5bb6\u304b\u3089\u306e\u8cb7\u3044\u6ce8\u6587\u306f\u5c11\u306a\u304f\u3001\u5dee\u3057\u5f15\u304d\u3067\u306f\u3084\u3084\u58f2\u308a\u8d8a\u3057\u3002\u8cb7\u3044\u306b\u614e\u91cd\u306b\u306a\u3063\u3066\u3044\u308b\u300d\uff08\u56fd\u5185\u8a3c\u5238\u30c8\u30ec\u30fc\u30c0\u30fc\uff09\u3068\u306e\u58f0\u304c\u3042\u3063\u305f\u3002\"\\\n            ]\n\n\n\n\u7279\u5b9a\u306e\u54c1\u8a5e\u306e\u307f \u62bd\u51fa\u3059\u308b\u30e1\u30bd\u30c3\u30c9 \u3092 \u7528\u610f\n\n\npython\ndef get_token_list(text, hinshi):\n    import MeCab\n    token_list = []\n    mt = MeCab.Tagger(\"-Ochasen -d /usr/local/lib/mecab/dic/mecab-ipadic-neologd\")\n    mt.parse('')\n    node = mt.parseToNode(text)\n    while node:\n        feats = node.feature.split(',')\n        if feats[0] in hinshi :\n            try:\n                token_list.append(node.surface)\n            except:\n                print(\"err: \" + str(node.surface))\n        node = node.next\n    return token_list\n\n\n\n\n\u30b3\u30fc\u30d1\u30b9\u4e2d\u3001\u51fa\u73fe\u3059\u308b\u540d\u8a5e\u3054\u3068\u306e\u51fa\u73fe\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\n\n\nHirofumiYashima Qiita\u8a18\u4e8b\uff082015/02/08\uff09 \u300cPython \u306e\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u306b\u3001if \uff5e \u3060\u3051\u3067\u306a\u304f\u3001else \uff5e \u3092\u4ed8\u3051\u308b\u65b9\u6cd5\u300d\n\n\n\u5404\u8a18\u4e8b\u304b\u3089\u3001\u540d\u8a5e\u306e\u307f\u62bd\u51fa\u3057\u305f\u5358\u8a9e\u30ea\u30b9\u30c8\u3092\u751f\u6210\n\n\npython\ntmp_noun_list = [get_token_list(document, [\"\u540d\u8a5e\"]) for document in document_list]\nprint(tmp_noun_list)\n\n\n[['\u653f\u5e9c', 'GDP', '\u6570\u5024\u76ee\u6a19', '\u660e\u793a', '\u653f\u5e9c', '\u5e74\u660e\u3051', '\u6700\u521d', '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70', '\u666f\u6c17\u5bfe\u7b56', '\u5931\u696d\u7387', '\u8ffd\u52a0', '\u7dcf\u5408', '\u7d4c\u6e08', '\u5bfe\u7b56', '\u6c11\u9593', '\u8b70\u54e1', '\u610f\u898b', '\u6a21\u69d8'], ['FRB', '\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a', '\u4f1d\u7d71\u7684', '\u7269\u4fa1\u4e0a\u6607\u7387', '\u7c73\u56fd', '\u56fd\u5185', '\u5931\u696d\u7387', '\u6c34\u6e96', '\u91d1\u878d\u653f\u7b56', '\u8235\u53d6\u308a', '\u4e0a', '\u4e3b\u8981', '\u53c2\u8003', '\u6570\u5024'], ['\u5e02\u5834', '\u56fd\u5185', '\u6a5f\u95a2\u6295\u8cc7\u5bb6', '\u62bc\u3057\u76ee\u8cb7\u3044', '\u52d5\u304d', '\u6d77\u5916\u6295\u8cc7\u5bb6', '\u6ce8\u6587', '\u5dee\u3057\u5f15\u304d', '\u8d8a\u3057', '\u8cb7\u3044', '\u614e\u91cd', '\u56fd\u5185', '\u8a3c\u5238', '\u30c8\u30ec\u30fc\u30c0\u30fc', '\u58f0']]\n\nflatten\u51e6\u7406\u3057\u3066\u3001\u4e8c\u91cd\u306b\u30cd\u30b9\u30c8\u3057\u305f\u30ea\u30b9\u30c8\u3092\u3001\u30cd\u30b9\u30c8\u306a\u3057\u30ea\u30b9\u30c8 \u306b \u5909\u63db\u3059\u308b\u3002\n\npython\n# \u540d\u8a5e\u30ea\u30b9\u30c8\uff08\u4e8c\u91cd\u30ea\u30b9\u30c8\uff09\u3092flatten\u3057\u3066\u3001\u30cd\u30b9\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30ea\u30b9\u30c8\u306b\u76f4\u3059\nfrom functools import reduce\nfrom operator import add\n\nnoun_list  = reduce(add, tmp_noun_list)\nprint(noun_list)\n\n\n['\u653f\u5e9c', 'GDP', '\u6570\u5024\u76ee\u6a19', '\u660e\u793a', '\u653f\u5e9c', '\u5e74\u660e\u3051', '\u6700\u521d', '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70', '\u666f\u6c17\u5bfe\u7b56', '\u5931\u696d\u7387', '\u8ffd\u52a0', '\u7dcf\u5408', '\u7d4c\u6e08', '\u5bfe\u7b56', '\u6c11\u9593', '\u8b70\u54e1', '\u610f\u898b', '\u6a21\u69d8', 'FRB', '\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a', '\u4f1d\u7d71\u7684', '\u7269\u4fa1\u4e0a\u6607\u7387', '\u7c73\u56fd', '\u56fd\u5185', '\u5931\u696d\u7387', '\u6c34\u6e96', '\u91d1\u878d\u653f\u7b56', '\u8235\u53d6\u308a', '\u4e0a', '\u4e3b\u8981', '\u53c2\u8003', '\u6570\u5024', '\u5e02\u5834', '\u56fd\u5185', '\u6a5f\u95a2\u6295\u8cc7\u5bb6', '\u62bc\u3057\u76ee\u8cb7\u3044', '\u52d5\u304d', '\u6d77\u5916\u6295\u8cc7\u5bb6', '\u6ce8\u6587', '\u5dee\u3057\u5f15\u304d', '\u8d8a\u3057', '\u8cb7\u3044', '\u614e\u91cd', '\u56fd\u5185', '\u8a3c\u5238', '\u30c8\u30ec\u30fc\u30c0\u30fc', '\u58f0']\n\nlist(set(\u540d\u8a5e\u30ea\u30b9\u30c8)) \u3067\u3001\u540d\u8a5e\u30ea\u30b9\u30c8\uff08list\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\u306e\u3046\u3061\u3001\u91cd\u8907\u3057\u3066\u51fa\u73fe\u3059\u308b\u8981\u7d20\uff08\u540d\u8a5e\uff09\u3092\uff11\u500b\u3060\u3051\u683c\u7d0d\u3059\u308b\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\uff08\u91cd\u8907\u6392\u9664\uff09\n\npython\n# 2\u56de\u4ee5\u4e0a\u3001\u51fa\u73fe\u3057\u3066\u3044\u308b\u540d\u8a5e\u304c\uff11\u56de\u3060\u3051\u683c\u7d0d\u3055\u308c\u308b\u30ea\u30b9\u30c8\u306b\u5909\u63db\nnoun_list = list(set(noun_list)) \n\n\n\ndocument.count()\u3067\u3001\uff11\u8a18\u4e8b\u3054\u3068\u3001\u5404\u540d\u8a5e\u304c\u4f55\u56de\u3001\u51fa\u73fe\u3057\u3066\u3044\u308b\u304b\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u305f\u7d50\u679c\uff08\u6570\u5024\uff09\u3092\u683c\u7d0d\u3057\u305f\u30ea\u30b9\u30c8\u3092\u751f\u6210\n\n\npython\ntmp_list = [[document.count(term) for term in noun_list] for document in document_list]\nprint(tmp_list)\n\n\n[[0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 2, 2, 1, 1, 0, 2, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1]]\n\n\n1\u56de\u4ee5\u4e0a \u51fa\u73fe\u3059\u308b\u5834\u5408\uff08\u300c0\u300d\u3067\u306a\u3044\u5834\u5408\uff09\u306f\u3001\u4f55\u56de\u51fa\u73fe\u3057\u3066\u3044\u3066\u3082\u3001\u300c1\u300d\uff08\u6709\u308a\u30d5\u30e9\u30b0\uff09\u306b\u5909\u63db\u3059\u308b\u3002\n\n\npython\ndoc_verctor_list_per_doc = [[count if count==0 else 1 for count in count_list_of_one_document] for count_list_of_one_document in tmp_list]\nprint(doc_verctor_list_per_doc)\n\n\n\n[[0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1]]\n\nprint(len(doc_verctor_list_per_doc))\nprint(doc_verctor_list_per_doc[0])\n\n3 # \u8a18\u4e8b\u306e\u672c\u6570\u3060\u3051\u3001\u4e8c\u91cd\u30ea\u30b9\u30c8\u306e\u4e2d\u306b\u306f\u3001\u30ea\u30b9\u30c8\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\n[0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0]\n\n\npython\nprint(doc_verctor_list_per_doc[2])\n\n\n[0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1]\n\n\n\u540d\u8a5e\u6587\u5b57\u5217\u30ab\u30e9\u30e0 \u3068 \u51fa\u73fe\u6709\u7121\uff08\u51fa\u73fe\u3042\u308a:\uff11, \u51fa\u73fe\u306a\u3057:0\uff09\u3092\u683c\u7d0d\u3057\u305fDataFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\n\nDataFrame\u306e\u5404\u5217\u306b\u683c\u7d0d\u3059\u308b\u30c7\u30fc\u30bf\u3092\u78ba\u8a8d\n\npython\nfor doc_idx, doc_verctor_list in enumerate(doc_verctor_list_per_doc):\n    print(\"doc No.: \", doc_idx)\n    print(\"doc_vector_list : \", doc_verctor_list)\n\n\ndoc No.:  0\ndoc_vector_list :  [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0]\ndoc No.:  1\ndoc_vector_list :  [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]\ndoc No.:  2\ndoc_vector_list :  [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1]\n\nDataFrame\u306b\u683c\u7d0d\u3059\u308b\u306e\u306f\u3001\u5168\u6587\u66f8\u306b\uff11\u5ea6\u4ee5\u4e0a\u51fa\u73fe\u3059\u308b\u5168\u540d\u8a5e\u306e\u30ea\u30b9\u30c8\u306a\u306e\u3067\uff08\u3042\u308b\u6587\u66f8\u306b\u51fa\u73fe\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u51fa\u73fe\u56de\u6570\u5217\u306b\u300c0\u300d\u3092\u683c\u7d0d\u3059\u308b\u4e88\u5b9a\uff09\u3001\u4ee5\u4e0b\u306f\u53c2\u8003\u307e\u3067\n\npython\nfor doc_idx, doc_noun_list in enumerate(tmp_noun_list):\n    print(\"doc No.: \", doc_idx)\n    print(\"doc_vector_list : \", doc_noun_list)\n\n\n\ndoc No.:  0\ndoc_vector_list :  ['\u653f\u5e9c', 'GDP', '\u6570\u5024\u76ee\u6a19', '\u660e\u793a', '\u653f\u5e9c', '\u5e74\u660e\u3051', '\u6700\u521d', '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70', '\u666f\u6c17\u5bfe\u7b56', '\u5931\u696d\u7387', '\u8ffd\u52a0', '\u7dcf\u5408', '\u7d4c\u6e08', '\u5bfe\u7b56', '\u6c11\u9593', '\u8b70\u54e1', '\u610f\u898b', '\u6a21\u69d8']\ndoc No.:  1\ndoc_vector_list :  ['FRB', '\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a', '\u4f1d\u7d71\u7684', '\u7269\u4fa1\u4e0a\u6607\u7387', '\u7c73\u56fd', '\u56fd\u5185', '\u5931\u696d\u7387', '\u6c34\u6e96', '\u91d1\u878d\u653f\u7b56', '\u8235\u53d6\u308a', '\u4e0a', '\u4e3b\u8981', '\u53c2\u8003', '\u6570\u5024']\ndoc No.:  2\ndoc_vector_list :  ['\u5e02\u5834', '\u56fd\u5185', '\u6a5f\u95a2\u6295\u8cc7\u5bb6', '\u62bc\u3057\u76ee\u8cb7\u3044', '\u52d5\u304d', '\u6d77\u5916\u6295\u8cc7\u5bb6', '\u6ce8\u6587', '\u5dee\u3057\u5f15\u304d', '\u8d8a\u3057', '\u8cb7\u3044', '\u614e\u91cd', '\u56fd\u5185', '\u8a3c\u5238', '\u30c8\u30ec\u30fc\u30c0\u30fc', '\u58f0']\n\n\u4e0a\u8a18\u306e\u60c5\u5831\u3092\u3001DataFrame\u306b\u683c\u7d0d\n\npython\ndoc_id_list = [doc_idx for doc_idx, doc_noun_list in enumerate(tmp_noun_list)]\nprint(doc_id_list)\n\n\n[0, 1, 2]\n\n\npython\npd.DataFrame({\n              \"Noun\": noun_list,\n              \"Doc_No.1_Exist_or_not\" : doc_verctor_list_per_doc[0],\n              \"Doc_No.2_Exist_or_not\" : doc_verctor_list_per_doc[1],\n              \"Doc_No.3_Exist_or_not\" : doc_verctor_list_per_doc[2]\n              }\n    ).T\n\n\n\n\npython\npd.DataFrame({\n              \"Noun\": noun_list,\n              \"Doc_No.1_Exist_or_not\" : doc_verctor_list_per_doc[0],\n              \"Doc_No.2_Exist_or_not\" : doc_verctor_list_per_doc[1],\n              \"Doc_No.3_Exist_or_not\" : doc_verctor_list_per_doc[2]\n              }\n    )\n\n\n\n\n\n\n\n\uff08 \u53c2\u8003 \uff09\ntest_list \u304b\u3089 \u8981\u7d20\u3092\uff11\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3066\u3001\n\u30fb \u8981\u7d20\u304c\u300c0\u300d\u3067\u3042\u308c\u3070\u3001\u305d\u306e\u307e\u307e 0 \u3092\n\u30fb \u305d\u306e\u4ed6\u306e\u5024\u306e\u5024\uff08\u3053\u308c\u306f tmp_list \u306e\u5185\u5bb9\u304b\u3089\u3001\uff11\u4ee5\u4e0a\u306e\u6574\u6570\u5024\u3057\u304b\u8a72\u5f53\u3057\u306a\u3044 \uff09\u3067\u3042\u308c\u3070\u3001\uff11 \u3092\n\u6295\u5165\u3059\u308b\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\npython\n>>> test_list = [1, 57, 14, 0, 0, 1, 1, 5, 1, 9]\n>>> print(test_list)\n[1, 57, 14, 0, 0, 1, 1, 5, 1, 9]\n>>>  \n>>> [count if count==0 else 1 for count in test_list]\n[1, 1, 1, 0, 0, 1, 1, 1, 1, 1]\n>>>\n\n\n\n\ngensim\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u5834\u5408\n\n\n\uff08 \u30b3\u30fc\u30c9\u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \uff09\n\n\nyasunori\u3055\u3093 Qiita\u8a18\u4e8b\uff082014/04/01\uff09 \u300cscikit-learn\u3068gensim\u3067\u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\u3092\u5206\u985e\u3059\u308b\u300d\n\n\n\u4e0a\u8a18\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u6240\u53ce\u306e\u30b3\u30fc\u30c9\u3092\u62dd\u501f\u3057\u3066\u3001\u3053\u308c\u307e\u3067\u6271\u3063\u3066\u304d\u305f\u306e\u3068\u540c\u3058\u30c7\u30fc\u30bf\u304b\u3089\u3001BoW\u30aa\u30d6\u30b8\u30a7\u30af\u3092\u751f\u6210\u3057\u3066\u307f\u307e\u3059\u3002\n\n\npython\ndocument_list = [\"\u653f\u5e9c\u306f\u3001GDP\u306e\u6570\u5024\u76ee\u6a19\u3092\u660e\u793a\u3057\u3066\u63b2\u3052\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u653f\u5e9c\u3067\u3059\u304c\u3001\u5e74\u660e\u3051\u6700\u521d\u306e\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70\u3067\u3001\u666f\u6c17\u5bfe\u7b56\u3068\u5931\u696d\u7387\u306b\u3064\u3044\u3066\u306e\u8ffd\u52a0\u306e\u7dcf\u5408\u7d4c\u6e08\u5bfe\u7b56\u306b\u3064\u3044\u3066\u3001\u6c11\u9593\u8b70\u54e1\u304b\u3089\u610f\u898b\u3092\u805e\u3044\u305f\u6a21\u69d8\u3067\u3059\u3002\"\\\n            , \"FRB\uff08\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a\uff09\u306f\u3001\u4f1d\u7d71\u7684\u306a\u7269\u4fa1\u4e0a\u6607\u7387\u3068\u4e26\u3073\u3001\u7c73\u56fd\u306e\u56fd\u5185\u5931\u696d\u7387\u306e\u6c34\u6e96\u3092\u3001\u91d1\u878d\u653f\u7b56\u306e\u8235\u53d6\u308a\u3092\u884c\u3046\u4e0a\u3067\u3001\u4e3b\u8981\u306a\u53c2\u8003\u6570\u5024\u306b\u4f4d\u7f6e\u4ed8\u3051\u3066\u3044\u308b\u3002\"\\\n            , \"\u5e02\u5834\u3067\u306f\u300c\u56fd\u5185\u306e\u6a5f\u95a2\u6295\u8cc7\u5bb6\u306b\u306f\u62bc\u3057\u76ee\u8cb7\u3044\u3092\u5165\u308c\u308b\u52d5\u304d\u304c\u3042\u3063\u305f\u304c\u3001\u6d77\u5916\u6295\u8cc7\u5bb6\u304b\u3089\u306e\u8cb7\u3044\u6ce8\u6587\u306f\u5c11\u306a\u304f\u3001\u5dee\u3057\u5f15\u304d\u3067\u306f\u3084\u3084\u58f2\u308a\u8d8a\u3057\u3002\u8cb7\u3044\u306b\u614e\u91cd\u306b\u306a\u3063\u3066\u3044\u308b\u300d\uff08\u56fd\u5185\u8a3c\u5238\u30c8\u30ec\u30fc\u30c0\u30fc\uff09\u3068\u306e\u58f0\u304c\u3042\u3063\u305f\u3002\"\\\n            ]\n\n\n\npython\ndef get_token_list(text, hinshi):\n    import MeCab\n    token_list = []\n    mt = MeCab.Tagger(\"-Ochasen -d /usr/local/lib/mecab/dic/mecab-ipadic-neologd\")\n    mt.parse('')\n    node = mt.parseToNode(text)\n    while node:\n        feats = node.feature.split(',')\n        if feats[0] in hinshi :\n            try:\n                token_list.append(node.surface)\n            except:\n                print(\"err: \" + str(node.surface))\n        node = node.next\n    return token_list\n\n\n\npython\ntmp_noun_list = [get_token_list(document, [\"\u540d\u8a5e\"]) for document in document_list]\nprint(tmp_noun_list)\n\n\n[['\u653f\u5e9c', 'GDP', '\u6570\u5024\u76ee\u6a19', '\u660e\u793a', '\u653f\u5e9c', '\u5e74\u660e\u3051', '\u6700\u521d', '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70', '\u666f\u6c17\u5bfe\u7b56', '\u5931\u696d\u7387', '\u8ffd\u52a0', '\u7dcf\u5408', '\u7d4c\u6e08', '\u5bfe\u7b56', '\u6c11\u9593', '\u8b70\u54e1', '\u610f\u898b', '\u6a21\u69d8'], ['FRB', '\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a', '\u4f1d\u7d71\u7684', '\u7269\u4fa1\u4e0a\u6607\u7387', '\u7c73\u56fd', '\u56fd\u5185', '\u5931\u696d\u7387', '\u6c34\u6e96', '\u91d1\u878d\u653f\u7b56', '\u8235\u53d6\u308a', '\u4e0a', '\u4e3b\u8981', '\u53c2\u8003', '\u6570\u5024'], ['\u5e02\u5834', '\u56fd\u5185', '\u6a5f\u95a2\u6295\u8cc7\u5bb6', '\u62bc\u3057\u76ee\u8cb7\u3044', '\u52d5\u304d', '\u6d77\u5916\u6295\u8cc7\u5bb6', '\u6ce8\u6587', '\u5dee\u3057\u5f15\u304d', '\u8d8a\u3057', '\u8cb7\u3044', '\u614e\u91cd', '\u56fd\u5185', '\u8a3c\u5238', '\u30c8\u30ec\u30fc\u30c0\u30fc', '\u58f0']]\n\n\npython\nprint(len(tmp_noun_list))\n# 3\n\n\n\npython\nprint(tmp_noun_list[0])\n\n\n['\u653f\u5e9c', 'GDP', '\u6570\u5024\u76ee\u6a19', '\u660e\u793a', '\u653f\u5e9c', '\u5e74\u660e\u3051', '\u6700\u521d', '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70', '\u666f\u6c17\u5bfe\u7b56', '\u5931\u696d\u7387', '\u8ffd\u52a0', '\u7dcf\u5408', '\u7d4c\u6e08', '\u5bfe\u7b56', '\u6c11\u9593', '\u8b70\u54e1', '\u610f\u898b', '\u6a21\u69d8']\n\n\n\ngensim\u306ecorpora\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3001\u5f15\u6570\uff08\u5404\u8a18\u4e8b\uff08\u6587\u66f8\uff09\u3054\u3068\u306b\u51fa\u73fe\u540d\u8a5e\u30ea\u30b9\u30c8\u3092\u683c\u7d0d\u3057\u305f\u4e8c\u91cd\u30cd\u30b9\u30c8\u30ea\u30b9\u30c8\uff09\u3092\u6e21\u3057\u3066\u3001\u30b3\u30fc\u30d1\u30b9\u8f9e\u66f8\u3092\u4f5c\u308b\n\n\npython\nfrom gensim import corpora\ndictionary = corpora.Dictionary(tmp_noun_list)\nprint(dictionary)\n\n\nDictionary(43 unique tokens: ['\u8235\u53d6\u308a', '\u62bc\u3057\u76ee\u8cb7\u3044', '\u52d5\u304d', '\u91d1\u878d\u653f\u7b56', '\u8a3c\u5238']...)\n\n\npython\nprint(dictionary.token2id)\n\n\n\n\u3044\u305a\u308c\u304b\u306e\u6587\u66f8\u306b\uff11\u5ea6\u4ee5\u4e0a\u3001\u51fa\u73fe\u3059\u308b \u3059\u3079\u3066\u306e\u540d\u8a5e \u306b\u3064\u3044\u3066\u3001\u901a\u3057\u756a\u53f7\u304c\u4ed8\u4e0e\u3055\u308c\u305f\u3002\n\n{'\u8235\u53d6\u308a': 25, '\u62bc\u3057\u76ee\u8cb7\u3044': 31, '\u52d5\u304d': 41, '\u91d1\u878d\u653f\u7b56': 19, '\u8a3c\u5238': 33, '\u58f0': 39, '\u7c73\u56fd': 22, '\u7269\u4fa1\u4e0a\u6607\u7387': 27, '\u6d77\u5916\u6295\u8cc7\u5bb6': 35, '\u4e3b\u8981': 24, '\u5e74\u660e\u3051': 8, '\u5e02\u5834': 36, '\u4f1d\u7d71\u7684': 26, '\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a': 28, '\u6a21\u69d8': 12, '\u30c8\u30ec\u30fc\u30c0\u30fc': 34, '\u8d8a\u3057': 42, '\u610f\u898b': 14, '\u4e0a': 17, '\u6a5f\u95a2\u6295\u8cc7\u5bb6': 38, 'GDP': 0, '\u6ce8\u6587': 30, '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70': 1, '\u56fd\u5185': 18, '\u6570\u5024\u76ee\u6a19': 2, '\u8b70\u54e1': 3, '\u6c34\u6e96': 20, '\u53c2\u8003': 21, '\u5bfe\u7b56': 4, '\u7d4c\u6e08': 5, '\u6570\u5024': 23, '\u660e\u793a': 6, '\u6700\u521d': 7, '\u7dcf\u5408': 16, '\u5931\u696d\u7387': 9, '\u666f\u6c17\u5bfe\u7b56': 10, '\u5dee\u3057\u5f15\u304d': 37, '\u653f\u5e9c': 11, '\u8cb7\u3044': 32, '\u614e\u91cd': 40, '\u6c11\u9593': 13, '\u8ffd\u52a0': 15, 'FRB': 29}\n\n\n\u30b3\u30fc\u30d1\u30b9\u8f9e\u66f8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306e \u7d44\u307f\u8fbc\u307f\u30e1\u30bd\u30c3\u30c9\uff08doc2bow\uff09 \u3092\u3001\u5f15\u6570\u3068\u3057\u3066\u3001\u5404\u8a18\u4e8b\uff08\u5404\u6587\u66f8\uff09\u306e\u300c\u51fa\u73fe\u540d\u8a5e\u30ea\u30b9\u30c8\u300d\u3092\u6e21\u3057\u3066\u5b9f\u884c\u3059\u308b\n\n\n\u5404\u8a18\u4e8b\uff08\u5404\u6587\u66f8\uff09\u3054\u3068\u306b\u3001(\u5358\u8a9eID, \u305d\u306e\u8a18\u4e8b\uff08\u6587\u66f8\uff09\u4e2d\u306e\u5358\u8a9e\u51fa\u73fe\u56de\u6570) \u306e \u30ea\u30b9\u30c8 \u304c\u8fd4\u3055\u308c\u308b\u3002\n\n\npython\nvec_doc_0 = dictionary.doc2bow(tmp_noun_list[0])\nvec_doc_1 = dictionary.doc2bow(tmp_noun_list[1])\nvec_doc_2 = dictionary.doc2bow(tmp_noun_list[2])\n\nprint(vec_doc_0)\n\n\n\uff08 \uff11\u3064\u76ee\u306e\u8a18\u4e8b\uff08\u6587\u66f8\uff09\u306f\u3001\u540d\u8a5eID 17\u756a\u4ee5\u964d\u306eID\u756a\u53f7\u3092\u3082\u3064\u540d\u8a5e\u304c\u51fa\u73fe\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308b \uff09\n[(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1), (11, 2), (12, 1), (13, 1), (14, 1), (15, 1), (16, 1)]\n\n\npython\nprint(vec_doc_1)\n\n\n\uff08 2\u3064\u76ee\u306e\u8a18\u4e8b\uff08\u6587\u66f8\uff09\u306f\u30011\u672c\u76ee\u306e\u8a18\u4e8b\u306b\u306f\u51fa\u73fe\u3057\u3066\u306b\u306a\u3044 \u540d\u8a5eID 18\u756a\u306e\u540d\u8a5e\u3092\u306f\u3058\u3081\u300118\u756a\u4ee5\u964d\u306eID\u756a\u53f7\u3092\u3082\u3064\u540d\u8a5e\u304c\u51fa\u73fe\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b \uff09\n\n[(9, 1), (17, 1), (18, 1), (19, 1), (20, 1), (21, 1), (22, 1), (23, 1), (24, 1), (25, 1), (26, 1), (27, 1), (28, 1), (29, 1)]\n\n\npython\nprint(vec_doc_2)\n\n\n[(18, 2), (30, 1), (31, 1), (32, 1), (33, 1), (34, 1), (35, 1), (36, 1), (37, 1), (38, 1), (39, 1), (40, 1), (41, 1), (42, 1)]\n\n\n\u540d\u523aID\u756a\u53f7\u304c\u3069\u306e\u540d\u8a5e\u306b\u7d10\u4ed8\u3044\u3066\u3044\u305f\u304b\u3092\u6539\u3081\u3066\u78ba\u8a8d\n\n\npython\nnoun_id_dict = dictionary.token2id\nprint(noun_id_dict)\n\n\n{'\u8235\u53d6\u308a': 25, '\u62bc\u3057\u76ee\u8cb7\u3044': 31, '\u52d5\u304d': 41, '\u91d1\u878d\u653f\u7b56': 19, '\u8a3c\u5238': 33, '\u58f0': 39, '\u7c73\u56fd': 22, '\u7269\u4fa1\u4e0a\u6607\u7387': 27, '\u6d77\u5916\u6295\u8cc7\u5bb6': 35, '\u4e3b\u8981': 24, '\u5e74\u660e\u3051': 8, '\u5e02\u5834': 36, '\u4f1d\u7d71\u7684': 26, '\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a': 28, '\u6a21\u69d8': 12, '\u30c8\u30ec\u30fc\u30c0\u30fc': 34, '\u8d8a\u3057': 42, '\u610f\u898b': 14, '\u4e0a': 17, '\u6a5f\u95a2\u6295\u8cc7\u5bb6': 38, 'GDP': 0, '\u6ce8\u6587': 30, '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70': 1, '\u56fd\u5185': 18, '\u6570\u5024\u76ee\u6a19': 2, '\u8b70\u54e1': 3, '\u6c34\u6e96': 20, '\u53c2\u8003': 21, '\u5bfe\u7b56': 4, '\u7d4c\u6e08': 5, '\u6570\u5024': 23, '\u660e\u793a': 6, '\u6700\u521d': 7, '\u7dcf\u5408': 16, '\u5931\u696d\u7387': 9, '\u666f\u6c17\u5bfe\u7b56': 10, '\u5dee\u3057\u5f15\u304d': 37, '\u653f\u5e9c': 11, '\u8cb7\u3044': 32, '\u614e\u91cd': 40, '\u6c11\u9593': 13, '\u8ffd\u52a0': 15, 'FRB': 29}\n\nID 17\u756a\u306e\u540d\u8a5e\u3092\u78ba\u8a8d \uff081\u672c\u76ee\u306e\u8a18\u4e8b\u306b\u51fa\u73fe\u3059\u308b\u5358\u8a9e\u3060\uff09\n\npython\nfor key, value in noun_id_dict.items():\n    if value == 17:\n        print(key)\n\n\n\u4e0a\n\nID\u756a\u53f7\u3092\u6e21\u3059\u3068\u3001\u8a72\u5f53\u3059\u308b\u540d\u8a5e\u30ea\u30c6\u30e9\u30eb\u5024\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\n\npython\ndef get_key_from_dict(dict_object, value_literal):\n    for key, value in dict_object.items():\n        if value == value_literal:\n            return key\n\n\n\npython\nprint(get_key_from_dict(noun_id_dict, 17))\n# \u4e0a\n\n\n\npython\nprint(get_key_from_dict(noun_id_dict, 29))\n# FRB\n\n\n\npython\nprint(get_key_from_dict(noun_id_dict, 42))\n# \u8d8a\u3057\n\n\n\uff13\u672c\u76ee\u306e\u8a18\u4e8b\u306b\u3001\uff12\u56de \u51fa\u73fe\u3059\u308b\u540d\u8a5e\n\npython\n# print(get_key_from_dict(noun_id_dict, 18))\n# \u56fd\u5185\n\n\n\nBoW\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\uff08\uff11\u56de\u4ee5\u4e0a\u51fa\u73fe\u3059\u308b\u5834\u5408\u306f\u3001\u4f55\u56de\u51fa\u73fe\u3057\u3066\u3082\u3001\u300c\uff11\u300d\u3092\u4ed8\u4e0e\u3002\u51fa\u73fe\u3057\u306a\u3044\u5834\u5408\u306f\u300c\uff10\u300d\u3092\u4ed8\u4e0e\uff09\n\n\npython\nfrom gensim import corpora, matutils\ndense_doc_0 = list(matutils.corpus2dense([vec_doc_0], num_terms=len(dictionary)).T[0])\n\nprint(dense_doc_0)\n\n\n\uff11\u672c\u76ee\u306e\u8a18\u4e8b\u306eBoW\n[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n\n\npython\nprint(vec_doc_0)\n\n\nID 17\u756a\u76ee\u4ee5\u964d \u306e \u540d\u8a5e \u304c\u3001\u4e0a\u8a18\u306eBoW\u3067\u306f\u3001\u3059\u3079\u3066\u300c0\u300d\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n[(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1), (11, 2), (12, 1), (13, 1), (14, 1), (15, 1), (16, 1)]\n\n\npython\ndense_doc_1 = list(matutils.corpus2dense([vec_doc_1], num_terms=len(dictionary)).T[0])\ndense_doc_2 = list(matutils.corpus2dense([vec_doc_2], num_terms=len(dictionary)).T[0])\n\n\n\n\uff08\uff12\u672c\u76ee\u306e\u8a18\u4e8b\uff09\n\nBow\n\npython\nprint(dense_doc_1)\n\n\n[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n\n\u540d\u8a5e\u51fa\u73fe\u56de\u6570\n\npython\nprint(vec_doc_1)\n\n\n[(9, 1), (17, 1), (18, 1), (19, 1), (20, 1), (21, 1), (22, 1), (23, 1), (24, 1), (25, 1), (26, 1), (27, 1), (28, 1), (29, 1)]\n\n\n\uff08\uff13\u672c\u76ee\u306e\u8a18\u4e8b\uff09\n\nBow\n\npython\nprint(dense_doc_2)\n\n\n[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n\n\u540d\u8a5e\u51fa\u73fe\u56de\u6570\n\npython\nprint(vec_doc_2)\n\n\n2\u56de\u51fa\u73fe\u3057\u3066\u3044\u308b18\u756a\u76ee\u306e\u540d\u8a5e\u3092\u898b\u308b\u3068\u3001\u4e0a\u8a18\u306eBoW\u3067\u306f\u3001\u72d9\u3044\u901a\u308a\u3001\u300c1\u300d\u304c\u6295\u5165\u3055\u308c\u3066\u3044\u308b\u3002\n[(18, 2), (30, 1), (31, 1), (32, 1), (33, 1), (34, 1), (35, 1), (36, 1), (37, 1), (38, 1), (39, 1), (40, 1), (41, 1), (42, 1)]\n\n\n\n\u3010 \u305d\u306e\u4ed6 \u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u3011\n\n\nHatena Blog stMind \uff082013/11/04\uff09\u300cPython\u3067Bag of Words\u3068SVM\u3092\u4f7f\u3063\u305f\u30bf\u30a4\u30c8\u30eb\u306e\u30ab\u30c6\u30b4\u30ea\u5206\u985e\u300d\nJubatus Blog \u7279\u5fb4\u62bd\u51fa\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\n\n\n\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u7279\u5fb4\u62bd\u51fa\u306e\u4f8b\n\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u30d9\u30af\u30c8\u30eb\u306b\u3059\u308b\u3068\u304d\u306b\u3088\u304f\u4f7f\u308f\u308c\u308b\u306e\u304c Bag of Words \uff08\u4ee5\u4e0b BoW\uff09\u3067\u3059\u3002\n\u3053\u308c\u306f\u3001\u5143\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u5358\u8a9e\u306e\u96c6\u5408\u3060\u3068\u601d\u3046\u3001\u3068\u3044\u3046\u3084\u308a\u65b9\u3067\u3059\u3002 \u4f8b\u3048\u3070\u3001\u300c\u5c71\u7530\u592a\u90ce\u300d\u3092\u5206\u89e3\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\"\u5c71\u7530\u592a\u90ce\" --> [\"\u5c71\u7530\", \"\u592a\u90ce\"]\n\n\u3057\u304b\u3057\u3001\u3053\u308c\u3067\u306f\u5148\u306e\u30d9\u30af\u30c8\u30eb\u3068\u306f\u4f3c\u3066\u3082\u306b\u3064\u304d\u307e\u305b\u3093\u3002 \u4f55\u6545\u3001\u5358\u8a9e\u306e\u96c6\u5408\u304c\u30d9\u30af\u30c8\u30eb\u306a\u306e\u3067\u3057\u3087\u3046\u3002\n\u5404\u5358\u8a9e\u306b\u56fa\u6709\u306eID\u304c\u3075\u3089\u308c\u3066\u3044\u308b\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\u3002 \n\u4f8b\u3048\u3070\u3001 \"\u5c71\u7530\" \u304c3\u756a\u3001 \"\u592a\u90ce\" \u304c5\u756a\u3060\u3068\u601d\u3044\u307e\u3059\u3002 \n\u3053\u306eID\u304c\u3001\u5148\u306e\u30d9\u30af\u30c8\u30eb\u306e\u300c\u6b21\u5143\u300d\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001 [\"\u5c71\u7530\", \"\u592a\u90ce\"] \u3068\u3044\u3046 BoW \u7279\u5fb4\u306f\u3001(0, 0, 1, 0, 1) \u3068\u3044\u3046\u30013\u756a\u76ee\u30685\u756a\u76ee\u304c1\u306b\u306a\u3063\u3066\u3044\u308b\u30d9\u30af\u30c8\u30eb\u3092\u793a\u3057\u3066\u3044\u308b\u3001\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\u3002 \n\u3053\u306e\u3088\u3046\u306b\u3001\u6587\u5b57\u5217\u60c5\u5831\u3092\u7279\u5fb4\u5909\u63db\u3059\u308b\u5834\u5408\u306f\u3001\u6587\u5b57\u5217\u306e\u96c6\u5408\uff08\u306b\u5bfe\u5fdc\u3059\u308b\u30d9\u30af\u30c8\u30eb\uff09\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\n\n__\u4f7f\u7528\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\uff08\uff13\u672c\u306e\u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\uff09__\n\n```{python:python}\ndocument_list = [\"\u653f\u5e9c\u306f\u3001GDP\u306e\u6570\u5024\u76ee\u6a19\u3092\u660e\u793a\u3057\u3066\u63b2\u3052\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u653f\u5e9c\u3067\u3059\u304c\u3001\u5e74\u660e\u3051\u6700\u521d\u306e\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70\u3067\u3001\u666f\u6c17\u5bfe\u7b56\u3068\u5931\u696d\u7387\u306b\u3064\u3044\u3066\u306e\u8ffd\u52a0\u306e\u7dcf\u5408\u7d4c\u6e08\u5bfe\u7b56\u306b\u3064\u3044\u3066\u3001\u6c11\u9593\u8b70\u54e1\u304b\u3089\u610f\u898b\u3092\u805e\u3044\u305f\u6a21\u69d8\u3067\u3059\u3002\"\\\n            , \"FRB\uff08\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a\uff09\u306f\u3001\u4f1d\u7d71\u7684\u306a\u7269\u4fa1\u4e0a\u6607\u7387\u3068\u4e26\u3073\u3001\u7c73\u56fd\u306e\u56fd\u5185\u5931\u696d\u7387\u306e\u6c34\u6e96\u3092\u3001\u91d1\u878d\u653f\u7b56\u306e\u8235\u53d6\u308a\u3092\u884c\u3046\u4e0a\u3067\u3001\u4e3b\u8981\u306a\u53c2\u8003\u6570\u5024\u306b\u4f4d\u7f6e\u4ed8\u3051\u3066\u3044\u308b\u3002\"\\\n            , \"\u5e02\u5834\u3067\u306f\u300c\u56fd\u5185\u306e\u6a5f\u95a2\u6295\u8cc7\u5bb6\u306b\u306f\u62bc\u3057\u76ee\u8cb7\u3044\u3092\u5165\u308c\u308b\u52d5\u304d\u304c\u3042\u3063\u305f\u304c\u3001\u6d77\u5916\u6295\u8cc7\u5bb6\u304b\u3089\u306e\u8cb7\u3044\u6ce8\u6587\u306f\u5c11\u306a\u304f\u3001\u5dee\u3057\u5f15\u304d\u3067\u306f\u3084\u3084\u58f2\u308a\u8d8a\u3057\u3002\u8cb7\u3044\u306b\u614e\u91cd\u306b\u306a\u3063\u3066\u3044\u308b\u300d\uff08\u56fd\u5185\u8a3c\u5238\u30c8\u30ec\u30fc\u30c0\u30fc\uff09\u3068\u306e\u58f0\u304c\u3042\u3063\u305f\u3002\"\\\n            ]\n```\n\n\n####__\u7279\u5b9a\u306e\u54c1\u8a5e\u306e\u307f \u62bd\u51fa\u3059\u308b\u30e1\u30bd\u30c3\u30c9 \u3092 \u7528\u610f__\n\n```{python:python}\ndef get_token_list(text, hinshi):\n    import MeCab\n    token_list = []\n    mt = MeCab.Tagger(\"-Ochasen -d /usr/local/lib/mecab/dic/mecab-ipadic-neologd\")\n    mt.parse('')\n    node = mt.parseToNode(text)\n    while node:\n        feats = node.feature.split(',')\n        if feats[0] in hinshi :\n            try:\n                token_list.append(node.surface)\n            except:\n                print(\"err: \" + str(node.surface))\n        node = node.next\n    return token_list\n```\n\n___\n\n####__\u30b3\u30fc\u30d1\u30b9\u4e2d\u3001\u51fa\u73fe\u3059\u308b\u540d\u8a5e\u3054\u3068\u306e\u51fa\u73fe\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8__\n\n* [HirofumiYashima Qiita\u8a18\u4e8b\uff082015/02/08\uff09 \u300cPython \u306e\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u306b\u3001if \uff5e \u3060\u3051\u3067\u306a\u304f\u3001else \uff5e \u3092\u4ed8\u3051\u308b\u65b9\u6cd5\u300d](http://qiita.com/HirofumiYashima/items/0e5fcebd083bae1a78a2)\n\n####__\u5404\u8a18\u4e8b\u304b\u3089\u3001\u540d\u8a5e\u306e\u307f\u62bd\u51fa\u3057\u305f\u5358\u8a9e\u30ea\u30b9\u30c8\u3092\u751f\u6210__\n\n```{python:python}\ntmp_noun_list = [get_token_list(document, [\"\u540d\u8a5e\"]) for document in document_list]\nprint(tmp_noun_list)\n```\n\n```\n[['\u653f\u5e9c', 'GDP', '\u6570\u5024\u76ee\u6a19', '\u660e\u793a', '\u653f\u5e9c', '\u5e74\u660e\u3051', '\u6700\u521d', '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70', '\u666f\u6c17\u5bfe\u7b56', '\u5931\u696d\u7387', '\u8ffd\u52a0', '\u7dcf\u5408', '\u7d4c\u6e08', '\u5bfe\u7b56', '\u6c11\u9593', '\u8b70\u54e1', '\u610f\u898b', '\u6a21\u69d8'], ['FRB', '\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a', '\u4f1d\u7d71\u7684', '\u7269\u4fa1\u4e0a\u6607\u7387', '\u7c73\u56fd', '\u56fd\u5185', '\u5931\u696d\u7387', '\u6c34\u6e96', '\u91d1\u878d\u653f\u7b56', '\u8235\u53d6\u308a', '\u4e0a', '\u4e3b\u8981', '\u53c2\u8003', '\u6570\u5024'], ['\u5e02\u5834', '\u56fd\u5185', '\u6a5f\u95a2\u6295\u8cc7\u5bb6', '\u62bc\u3057\u76ee\u8cb7\u3044', '\u52d5\u304d', '\u6d77\u5916\u6295\u8cc7\u5bb6', '\u6ce8\u6587', '\u5dee\u3057\u5f15\u304d', '\u8d8a\u3057', '\u8cb7\u3044', '\u614e\u91cd', '\u56fd\u5185', '\u8a3c\u5238', '\u30c8\u30ec\u30fc\u30c0\u30fc', '\u58f0']]\n```\n\n__flatten\u51e6\u7406\u3057\u3066\u3001\u4e8c\u91cd\u306b\u30cd\u30b9\u30c8\u3057\u305f\u30ea\u30b9\u30c8\u3092\u3001\u30cd\u30b9\u30c8\u306a\u3057\u30ea\u30b9\u30c8 \u306b \u5909\u63db\u3059\u308b\u3002__\n\n```{python:python}\n# \u540d\u8a5e\u30ea\u30b9\u30c8\uff08\u4e8c\u91cd\u30ea\u30b9\u30c8\uff09\u3092flatten\u3057\u3066\u3001\u30cd\u30b9\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u30ea\u30b9\u30c8\u306b\u76f4\u3059\nfrom functools import reduce\nfrom operator import add\n\nnoun_list  = reduce(add, tmp_noun_list)\nprint(noun_list)\n```\n\n```\n['\u653f\u5e9c', 'GDP', '\u6570\u5024\u76ee\u6a19', '\u660e\u793a', '\u653f\u5e9c', '\u5e74\u660e\u3051', '\u6700\u521d', '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70', '\u666f\u6c17\u5bfe\u7b56', '\u5931\u696d\u7387', '\u8ffd\u52a0', '\u7dcf\u5408', '\u7d4c\u6e08', '\u5bfe\u7b56', '\u6c11\u9593', '\u8b70\u54e1', '\u610f\u898b', '\u6a21\u69d8', 'FRB', '\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a', '\u4f1d\u7d71\u7684', '\u7269\u4fa1\u4e0a\u6607\u7387', '\u7c73\u56fd', '\u56fd\u5185', '\u5931\u696d\u7387', '\u6c34\u6e96', '\u91d1\u878d\u653f\u7b56', '\u8235\u53d6\u308a', '\u4e0a', '\u4e3b\u8981', '\u53c2\u8003', '\u6570\u5024', '\u5e02\u5834', '\u56fd\u5185', '\u6a5f\u95a2\u6295\u8cc7\u5bb6', '\u62bc\u3057\u76ee\u8cb7\u3044', '\u52d5\u304d', '\u6d77\u5916\u6295\u8cc7\u5bb6', '\u6ce8\u6587', '\u5dee\u3057\u5f15\u304d', '\u8d8a\u3057', '\u8cb7\u3044', '\u614e\u91cd', '\u56fd\u5185', '\u8a3c\u5238', '\u30c8\u30ec\u30fc\u30c0\u30fc', '\u58f0']\n```\n\n__list(set(\u540d\u8a5e\u30ea\u30b9\u30c8)) \u3067\u3001\u540d\u8a5e\u30ea\u30b9\u30c8\uff08list\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\u306e\u3046\u3061\u3001\u91cd\u8907\u3057\u3066\u51fa\u73fe\u3059\u308b\u8981\u7d20\uff08\u540d\u8a5e\uff09\u3092\uff11\u500b\u3060\u3051\u683c\u7d0d\u3059\u308b\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\uff08\u91cd\u8907\u6392\u9664\uff09__\n\n```{python:python}\n# 2\u56de\u4ee5\u4e0a\u3001\u51fa\u73fe\u3057\u3066\u3044\u308b\u540d\u8a5e\u304c\uff11\u56de\u3060\u3051\u683c\u7d0d\u3055\u308c\u308b\u30ea\u30b9\u30c8\u306b\u5909\u63db\nnoun_list = list(set(noun_list)) \n```\n\n####__document.count()\u3067\u3001\uff11\u8a18\u4e8b\u3054\u3068\u3001\u5404\u540d\u8a5e\u304c\u4f55\u56de\u3001\u51fa\u73fe\u3057\u3066\u3044\u308b\u304b\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u305f\u7d50\u679c\uff08\u6570\u5024\uff09\u3092\u683c\u7d0d\u3057\u305f\u30ea\u30b9\u30c8\u3092\u751f\u6210__\n\n```{python:python}\ntmp_list = [[document.count(term) for term in noun_list] for document in document_list]\nprint(tmp_list)\n```\n\n```\n[[0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 2, 2, 1, 1, 0, 2, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1]]\n```\n\n####__1\u56de\u4ee5\u4e0a \u51fa\u73fe\u3059\u308b\u5834\u5408\uff08\u300c0\u300d\u3067\u306a\u3044\u5834\u5408\uff09\u306f\u3001\u4f55\u56de\u51fa\u73fe\u3057\u3066\u3044\u3066\u3082\u3001\u300c1\u300d\uff08\u6709\u308a\u30d5\u30e9\u30b0\uff09\u306b\u5909\u63db\u3059\u308b\u3002__\n\n```{python:python}\ndoc_verctor_list_per_doc = [[count if count==0 else 1 for count in count_list_of_one_document] for count_list_of_one_document in tmp_list]\nprint(doc_verctor_list_per_doc)\n```\n\n```\n\n[[0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0], [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1]]\n```\n\n```\nprint(len(doc_verctor_list_per_doc))\nprint(doc_verctor_list_per_doc[0])\n```\n\n```\n3 # \u8a18\u4e8b\u306e\u672c\u6570\u3060\u3051\u3001\u4e8c\u91cd\u30ea\u30b9\u30c8\u306e\u4e2d\u306b\u306f\u3001\u30ea\u30b9\u30c8\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\n[0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0]\n```\n\n```{python:python}\nprint(doc_verctor_list_per_doc[2])\n```\n\n```\n[0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1]\n```\n\n####__\u540d\u8a5e\u6587\u5b57\u5217\u30ab\u30e9\u30e0 \u3068 \u51fa\u73fe\u6709\u7121\uff08\u51fa\u73fe\u3042\u308a:\uff11, \u51fa\u73fe\u306a\u3057:0\uff09\u3092\u683c\u7d0d\u3057\u305fDataFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210__\n\n__DataFrame\u306e\u5404\u5217\u306b\u683c\u7d0d\u3059\u308b\u30c7\u30fc\u30bf\u3092\u78ba\u8a8d__\n\n```{python:python}\nfor doc_idx, doc_verctor_list in enumerate(doc_verctor_list_per_doc):\n    print(\"doc No.: \", doc_idx)\n\tprint(\"doc_vector_list : \", doc_verctor_list)\n```\n\n```\ndoc No.:  0\ndoc_vector_list :  [0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0]\ndoc No.:  1\ndoc_vector_list :  [1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0]\ndoc No.:  2\ndoc_vector_list :  [0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1]\n```\n\n__DataFrame\u306b\u683c\u7d0d\u3059\u308b\u306e\u306f\u3001\u5168\u6587\u66f8\u306b\uff11\u5ea6\u4ee5\u4e0a\u51fa\u73fe\u3059\u308b\u5168\u540d\u8a5e\u306e\u30ea\u30b9\u30c8\u306a\u306e\u3067\uff08\u3042\u308b\u6587\u66f8\u306b\u51fa\u73fe\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u51fa\u73fe\u56de\u6570\u5217\u306b\u300c0\u300d\u3092\u683c\u7d0d\u3059\u308b\u4e88\u5b9a\uff09\u3001\u4ee5\u4e0b\u306f\u53c2\u8003\u307e\u3067__\n\n```{python:python}\nfor doc_idx, doc_noun_list in enumerate(tmp_noun_list):\n    print(\"doc No.: \", doc_idx)\n\tprint(\"doc_vector_list : \", doc_noun_list)\n\t\n```\n\n```\ndoc No.:  0\ndoc_vector_list :  ['\u653f\u5e9c', 'GDP', '\u6570\u5024\u76ee\u6a19', '\u660e\u793a', '\u653f\u5e9c', '\u5e74\u660e\u3051', '\u6700\u521d', '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70', '\u666f\u6c17\u5bfe\u7b56', '\u5931\u696d\u7387', '\u8ffd\u52a0', '\u7dcf\u5408', '\u7d4c\u6e08', '\u5bfe\u7b56', '\u6c11\u9593', '\u8b70\u54e1', '\u610f\u898b', '\u6a21\u69d8']\ndoc No.:  1\ndoc_vector_list :  ['FRB', '\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a', '\u4f1d\u7d71\u7684', '\u7269\u4fa1\u4e0a\u6607\u7387', '\u7c73\u56fd', '\u56fd\u5185', '\u5931\u696d\u7387', '\u6c34\u6e96', '\u91d1\u878d\u653f\u7b56', '\u8235\u53d6\u308a', '\u4e0a', '\u4e3b\u8981', '\u53c2\u8003', '\u6570\u5024']\ndoc No.:  2\ndoc_vector_list :  ['\u5e02\u5834', '\u56fd\u5185', '\u6a5f\u95a2\u6295\u8cc7\u5bb6', '\u62bc\u3057\u76ee\u8cb7\u3044', '\u52d5\u304d', '\u6d77\u5916\u6295\u8cc7\u5bb6', '\u6ce8\u6587', '\u5dee\u3057\u5f15\u304d', '\u8d8a\u3057', '\u8cb7\u3044', '\u614e\u91cd', '\u56fd\u5185', '\u8a3c\u5238', '\u30c8\u30ec\u30fc\u30c0\u30fc', '\u58f0']\n```\t\n\n__\u4e0a\u8a18\u306e\u60c5\u5831\u3092\u3001DataFrame\u306b\u683c\u7d0d__\n\n```{python:python}\ndoc_id_list = [doc_idx for doc_idx, doc_noun_list in enumerate(tmp_noun_list)]\nprint(doc_id_list)\n```\n\n```\n[0, 1, 2]\n```\n\n```{python:python}\npd.DataFrame({\n              \"Noun\": noun_list,\n              \"Doc_No.1_Exist_or_not\" : doc_verctor_list_per_doc[0],\n              \"Doc_No.2_Exist_or_not\" : doc_verctor_list_per_doc[1],\n              \"Doc_No.3_Exist_or_not\" : doc_verctor_list_per_doc[2]\n              }\n    ).T\n```\n\n<img width=\"926\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-18 20.17.14.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/02f58c2d-20c3-9f1b-a5eb-b73c3beb7091.png\">\n\n\n```{python:python}\npd.DataFrame({\n              \"Noun\": noun_list,\n              \"Doc_No.1_Exist_or_not\" : doc_verctor_list_per_doc[0],\n              \"Doc_No.2_Exist_or_not\" : doc_verctor_list_per_doc[1],\n              \"Doc_No.3_Exist_or_not\" : doc_verctor_list_per_doc[2]\n              }\n    )\n```\n\n<img width=\"1046\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-18 20.17.27.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/76e59ad4-47af-d3e4-8adf-d593a62f9d02.png\">\n<img width=\"1047\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-18 20.17.38.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/7e44d806-53b9-674a-cb99-42dc2874f594.png\">\n<img width=\"1048\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-18 20.21.27.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/26557235-ad38-c168-3236-f52e6731956f.png\">\n<img width=\"1044\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-18 20.21.41.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/ad9e4f81-396e-1701-066b-58399a34d161.png\">\n\n___\n\n__\uff08 \u53c2\u8003 \uff09__\n\ntest_list \u304b\u3089 \u8981\u7d20\u3092\uff11\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3066\u3001\n\n\u30fb \u8981\u7d20\u304c\u300c0\u300d\u3067\u3042\u308c\u3070\u3001\u305d\u306e\u307e\u307e 0 \u3092\n\u30fb \u305d\u306e\u4ed6\u306e\u5024\u306e\u5024\uff08\u3053\u308c\u306f tmp_list \u306e\u5185\u5bb9\u304b\u3089\u3001\uff11\u4ee5\u4e0a\u306e\u6574\u6570\u5024\u3057\u304b\u8a72\u5f53\u3057\u306a\u3044 \uff09\u3067\u3042\u308c\u3070\u3001\uff11 \u3092\n\n\u6295\u5165\u3059\u308b\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n```{python:python}\n>>> test_list = [1, 57, 14, 0, 0, 1, 1, 5, 1, 9]\n>>> print(test_list)\n[1, 57, 14, 0, 0, 1, 1, 5, 1, 9]\n>>>  \n>>> [count if count==0 else 1 for count in test_list]\n[1, 1, 1, 0, 0, 1, 1, 1, 1, 1]\n>>>\n```\n\n\n___\n\n#__gensim\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u5834\u5408__\n\n###__\uff08 \u30b3\u30fc\u30c9\u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \uff09__\n\n* [yasunori\u3055\u3093 Qiita\u8a18\u4e8b\uff082014/04/01\uff09 \u300cscikit-learn\u3068gensim\u3067\u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\u3092\u5206\u985e\u3059\u308b\u300d](http://qiita.com/yasunori/items/31a23eb259482e4824e2)\n\n\n###__\u4e0a\u8a18\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u6240\u53ce\u306e\u30b3\u30fc\u30c9\u3092\u62dd\u501f\u3057\u3066\u3001\u3053\u308c\u307e\u3067\u6271\u3063\u3066\u304d\u305f\u306e\u3068\u540c\u3058\u30c7\u30fc\u30bf\u304b\u3089\u3001BoW\u30aa\u30d6\u30b8\u30a7\u30af\u3092\u751f\u6210\u3057\u3066\u307f\u307e\u3059\u3002__\n\n```{python:python}\ndocument_list = [\"\u653f\u5e9c\u306f\u3001GDP\u306e\u6570\u5024\u76ee\u6a19\u3092\u660e\u793a\u3057\u3066\u63b2\u3052\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u653f\u5e9c\u3067\u3059\u304c\u3001\u5e74\u660e\u3051\u6700\u521d\u306e\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70\u3067\u3001\u666f\u6c17\u5bfe\u7b56\u3068\u5931\u696d\u7387\u306b\u3064\u3044\u3066\u306e\u8ffd\u52a0\u306e\u7dcf\u5408\u7d4c\u6e08\u5bfe\u7b56\u306b\u3064\u3044\u3066\u3001\u6c11\u9593\u8b70\u54e1\u304b\u3089\u610f\u898b\u3092\u805e\u3044\u305f\u6a21\u69d8\u3067\u3059\u3002\"\\\n            , \"FRB\uff08\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a\uff09\u306f\u3001\u4f1d\u7d71\u7684\u306a\u7269\u4fa1\u4e0a\u6607\u7387\u3068\u4e26\u3073\u3001\u7c73\u56fd\u306e\u56fd\u5185\u5931\u696d\u7387\u306e\u6c34\u6e96\u3092\u3001\u91d1\u878d\u653f\u7b56\u306e\u8235\u53d6\u308a\u3092\u884c\u3046\u4e0a\u3067\u3001\u4e3b\u8981\u306a\u53c2\u8003\u6570\u5024\u306b\u4f4d\u7f6e\u4ed8\u3051\u3066\u3044\u308b\u3002\"\\\n            , \"\u5e02\u5834\u3067\u306f\u300c\u56fd\u5185\u306e\u6a5f\u95a2\u6295\u8cc7\u5bb6\u306b\u306f\u62bc\u3057\u76ee\u8cb7\u3044\u3092\u5165\u308c\u308b\u52d5\u304d\u304c\u3042\u3063\u305f\u304c\u3001\u6d77\u5916\u6295\u8cc7\u5bb6\u304b\u3089\u306e\u8cb7\u3044\u6ce8\u6587\u306f\u5c11\u306a\u304f\u3001\u5dee\u3057\u5f15\u304d\u3067\u306f\u3084\u3084\u58f2\u308a\u8d8a\u3057\u3002\u8cb7\u3044\u306b\u614e\u91cd\u306b\u306a\u3063\u3066\u3044\u308b\u300d\uff08\u56fd\u5185\u8a3c\u5238\u30c8\u30ec\u30fc\u30c0\u30fc\uff09\u3068\u306e\u58f0\u304c\u3042\u3063\u305f\u3002\"\\\n            ]\n```\n\n```{python:python}\ndef get_token_list(text, hinshi):\n    import MeCab\n    token_list = []\n    mt = MeCab.Tagger(\"-Ochasen -d /usr/local/lib/mecab/dic/mecab-ipadic-neologd\")\n    mt.parse('')\n    node = mt.parseToNode(text)\n    while node:\n        feats = node.feature.split(',')\n        if feats[0] in hinshi :\n            try:\n                token_list.append(node.surface)\n            except:\n                print(\"err: \" + str(node.surface))\n        node = node.next\n    return token_list\n```\n\n```{python:python}\ntmp_noun_list = [get_token_list(document, [\"\u540d\u8a5e\"]) for document in document_list]\nprint(tmp_noun_list)\n```\n\n```\n[['\u653f\u5e9c', 'GDP', '\u6570\u5024\u76ee\u6a19', '\u660e\u793a', '\u653f\u5e9c', '\u5e74\u660e\u3051', '\u6700\u521d', '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70', '\u666f\u6c17\u5bfe\u7b56', '\u5931\u696d\u7387', '\u8ffd\u52a0', '\u7dcf\u5408', '\u7d4c\u6e08', '\u5bfe\u7b56', '\u6c11\u9593', '\u8b70\u54e1', '\u610f\u898b', '\u6a21\u69d8'], ['FRB', '\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a', '\u4f1d\u7d71\u7684', '\u7269\u4fa1\u4e0a\u6607\u7387', '\u7c73\u56fd', '\u56fd\u5185', '\u5931\u696d\u7387', '\u6c34\u6e96', '\u91d1\u878d\u653f\u7b56', '\u8235\u53d6\u308a', '\u4e0a', '\u4e3b\u8981', '\u53c2\u8003', '\u6570\u5024'], ['\u5e02\u5834', '\u56fd\u5185', '\u6a5f\u95a2\u6295\u8cc7\u5bb6', '\u62bc\u3057\u76ee\u8cb7\u3044', '\u52d5\u304d', '\u6d77\u5916\u6295\u8cc7\u5bb6', '\u6ce8\u6587', '\u5dee\u3057\u5f15\u304d', '\u8d8a\u3057', '\u8cb7\u3044', '\u614e\u91cd', '\u56fd\u5185', '\u8a3c\u5238', '\u30c8\u30ec\u30fc\u30c0\u30fc', '\u58f0']]\n```\n\n```{python:python}\nprint(len(tmp_noun_list))\n# 3\n```\n\n```{python:python}\nprint(tmp_noun_list[0])\n```\n\n```\n['\u653f\u5e9c', 'GDP', '\u6570\u5024\u76ee\u6a19', '\u660e\u793a', '\u653f\u5e9c', '\u5e74\u660e\u3051', '\u6700\u521d', '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70', '\u666f\u6c17\u5bfe\u7b56', '\u5931\u696d\u7387', '\u8ffd\u52a0', '\u7dcf\u5408', '\u7d4c\u6e08', '\u5bfe\u7b56', '\u6c11\u9593', '\u8b70\u54e1', '\u610f\u898b', '\u6a21\u69d8']\n```\n\n___\n\n####__gensim\u306ecorpora\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3001\u5f15\u6570\uff08\u5404\u8a18\u4e8b\uff08\u6587\u66f8\uff09\u3054\u3068\u306b\u51fa\u73fe\u540d\u8a5e\u30ea\u30b9\u30c8\u3092\u683c\u7d0d\u3057\u305f\u4e8c\u91cd\u30cd\u30b9\u30c8\u30ea\u30b9\u30c8\uff09\u3092\u6e21\u3057\u3066\u3001\u30b3\u30fc\u30d1\u30b9\u8f9e\u66f8\u3092\u4f5c\u308b__\n\n```{python:python}\nfrom gensim import corpora\ndictionary = corpora.Dictionary(tmp_noun_list)\nprint(dictionary)\n```\n\n```\nDictionary(43 unique tokens: ['\u8235\u53d6\u308a', '\u62bc\u3057\u76ee\u8cb7\u3044', '\u52d5\u304d', '\u91d1\u878d\u653f\u7b56', '\u8a3c\u5238']...)\n```\n\n```{python:python}\nprint(dictionary.token2id)\n```\n\n####__\u3044\u305a\u308c\u304b\u306e\u6587\u66f8\u306b\uff11\u5ea6\u4ee5\u4e0a\u3001\u51fa\u73fe\u3059\u308b \u3059\u3079\u3066\u306e\u540d\u8a5e \u306b\u3064\u3044\u3066\u3001\u901a\u3057\u756a\u53f7\u304c\u4ed8\u4e0e\u3055\u308c\u305f\u3002__\n\n```\n{'\u8235\u53d6\u308a': 25, '\u62bc\u3057\u76ee\u8cb7\u3044': 31, '\u52d5\u304d': 41, '\u91d1\u878d\u653f\u7b56': 19, '\u8a3c\u5238': 33, '\u58f0': 39, '\u7c73\u56fd': 22, '\u7269\u4fa1\u4e0a\u6607\u7387': 27, '\u6d77\u5916\u6295\u8cc7\u5bb6': 35, '\u4e3b\u8981': 24, '\u5e74\u660e\u3051': 8, '\u5e02\u5834': 36, '\u4f1d\u7d71\u7684': 26, '\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a': 28, '\u6a21\u69d8': 12, '\u30c8\u30ec\u30fc\u30c0\u30fc': 34, '\u8d8a\u3057': 42, '\u610f\u898b': 14, '\u4e0a': 17, '\u6a5f\u95a2\u6295\u8cc7\u5bb6': 38, 'GDP': 0, '\u6ce8\u6587': 30, '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70': 1, '\u56fd\u5185': 18, '\u6570\u5024\u76ee\u6a19': 2, '\u8b70\u54e1': 3, '\u6c34\u6e96': 20, '\u53c2\u8003': 21, '\u5bfe\u7b56': 4, '\u7d4c\u6e08': 5, '\u6570\u5024': 23, '\u660e\u793a': 6, '\u6700\u521d': 7, '\u7dcf\u5408': 16, '\u5931\u696d\u7387': 9, '\u666f\u6c17\u5bfe\u7b56': 10, '\u5dee\u3057\u5f15\u304d': 37, '\u653f\u5e9c': 11, '\u8cb7\u3044': 32, '\u614e\u91cd': 40, '\u6c11\u9593': 13, '\u8ffd\u52a0': 15, 'FRB': 29}\n```\n\n####__\u30b3\u30fc\u30d1\u30b9\u8f9e\u66f8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306e \u7d44\u307f\u8fbc\u307f\u30e1\u30bd\u30c3\u30c9\uff08doc2bow\uff09 \u3092\u3001\u5f15\u6570\u3068\u3057\u3066\u3001\u5404\u8a18\u4e8b\uff08\u5404\u6587\u66f8\uff09\u306e\u300c\u51fa\u73fe\u540d\u8a5e\u30ea\u30b9\u30c8\u300d\u3092\u6e21\u3057\u3066\u5b9f\u884c\u3059\u308b__\n####__\u5404\u8a18\u4e8b\uff08\u5404\u6587\u66f8\uff09\u3054\u3068\u306b\u3001(\u5358\u8a9eID, \u305d\u306e\u8a18\u4e8b\uff08\u6587\u66f8\uff09\u4e2d\u306e\u5358\u8a9e\u51fa\u73fe\u56de\u6570) \u306e \u30ea\u30b9\u30c8 \u304c\u8fd4\u3055\u308c\u308b\u3002__\n\n```{python:python}\nvec_doc_0 = dictionary.doc2bow(tmp_noun_list[0])\nvec_doc_1 = dictionary.doc2bow(tmp_noun_list[1])\nvec_doc_2 = dictionary.doc2bow(tmp_noun_list[2])\n\nprint(vec_doc_0)\n```\n\n__\uff08 \uff11\u3064\u76ee\u306e\u8a18\u4e8b\uff08\u6587\u66f8\uff09\u306f\u3001\u540d\u8a5eID 17\u756a\u4ee5\u964d\u306eID\u756a\u53f7\u3092\u3082\u3064\u540d\u8a5e\u304c\u51fa\u73fe\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308b \uff09__\n\n```\n[(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1), (11, 2), (12, 1), (13, 1), (14, 1), (15, 1), (16, 1)]\n```\n\n```{python:python}\nprint(vec_doc_1)\n```\n\n__\uff08 2\u3064\u76ee\u306e\u8a18\u4e8b\uff08\u6587\u66f8\uff09\u306f\u30011\u672c\u76ee\u306e\u8a18\u4e8b\u306b\u306f\u51fa\u73fe\u3057\u3066\u306b\u306a\u3044 \u540d\u8a5eID 18\u756a\u306e\u540d\u8a5e\u3092\u306f\u3058\u3081\u300118\u756a\u4ee5\u964d\u306eID\u756a\u53f7\u3092\u3082\u3064\u540d\u8a5e\u304c\u51fa\u73fe\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b \uff09__\n```\n[(9, 1), (17, 1), (18, 1), (19, 1), (20, 1), (21, 1), (22, 1), (23, 1), (24, 1), (25, 1), (26, 1), (27, 1), (28, 1), (29, 1)]\n```\n\n```{python:python}\nprint(vec_doc_2)\n```\n\n```\n[(18, 2), (30, 1), (31, 1), (32, 1), (33, 1), (34, 1), (35, 1), (36, 1), (37, 1), (38, 1), (39, 1), (40, 1), (41, 1), (42, 1)]\n```\n\n####__\u540d\u523aID\u756a\u53f7\u304c\u3069\u306e\u540d\u8a5e\u306b\u7d10\u4ed8\u3044\u3066\u3044\u305f\u304b\u3092\u6539\u3081\u3066\u78ba\u8a8d__\n\n```{python:python}\nnoun_id_dict = dictionary.token2id\nprint(noun_id_dict)\n```\n\n```\n{'\u8235\u53d6\u308a': 25, '\u62bc\u3057\u76ee\u8cb7\u3044': 31, '\u52d5\u304d': 41, '\u91d1\u878d\u653f\u7b56': 19, '\u8a3c\u5238': 33, '\u58f0': 39, '\u7c73\u56fd': 22, '\u7269\u4fa1\u4e0a\u6607\u7387': 27, '\u6d77\u5916\u6295\u8cc7\u5bb6': 35, '\u4e3b\u8981': 24, '\u5e74\u660e\u3051': 8, '\u5e02\u5834': 36, '\u4f1d\u7d71\u7684': 26, '\u7c73\u9023\u90a6\u6e96\u5099\u5236\u5ea6\u7406\u4e8b\u4f1a': 28, '\u6a21\u69d8': 12, '\u30c8\u30ec\u30fc\u30c0\u30fc': 34, '\u8d8a\u3057': 42, '\u610f\u898b': 14, '\u4e0a': 17, '\u6a5f\u95a2\u6295\u8cc7\u5bb6': 38, 'GDP': 0, '\u6ce8\u6587': 30, '\u7d4c\u6e08\u8ca1\u653f\u8aee\u554f\u4f1a\u8b70': 1, '\u56fd\u5185': 18, '\u6570\u5024\u76ee\u6a19': 2, '\u8b70\u54e1': 3, '\u6c34\u6e96': 20, '\u53c2\u8003': 21, '\u5bfe\u7b56': 4, '\u7d4c\u6e08': 5, '\u6570\u5024': 23, '\u660e\u793a': 6, '\u6700\u521d': 7, '\u7dcf\u5408': 16, '\u5931\u696d\u7387': 9, '\u666f\u6c17\u5bfe\u7b56': 10, '\u5dee\u3057\u5f15\u304d': 37, '\u653f\u5e9c': 11, '\u8cb7\u3044': 32, '\u614e\u91cd': 40, '\u6c11\u9593': 13, '\u8ffd\u52a0': 15, 'FRB': 29}\n```\n\n__ID 17\u756a\u306e\u540d\u8a5e\u3092\u78ba\u8a8d \uff081\u672c\u76ee\u306e\u8a18\u4e8b\u306b\u51fa\u73fe\u3059\u308b\u5358\u8a9e\u3060\uff09__\n\n```{python:python}\nfor key, value in noun_id_dict.items():\n    if value == 17:\n        print(key)\n```\n\n```\n\u4e0a\n```\n\n__ID\u756a\u53f7\u3092\u6e21\u3059\u3068\u3001\u8a72\u5f53\u3059\u308b\u540d\u8a5e\u30ea\u30c6\u30e9\u30eb\u5024\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9__\n\n```{python:python}\ndef get_key_from_dict(dict_object, value_literal):\n    for key, value in dict_object.items():\n        if value == value_literal:\n            return key\n```\n\n```{python:python}\nprint(get_key_from_dict(noun_id_dict, 17))\n# \u4e0a\n```\n\n\n```{python:python}\nprint(get_key_from_dict(noun_id_dict, 29))\n# FRB\n```\n\n\n```{python:python}\nprint(get_key_from_dict(noun_id_dict, 42))\n# \u8d8a\u3057\n```\n\n\n__\uff13\u672c\u76ee\u306e\u8a18\u4e8b\u306b\u3001\uff12\u56de \u51fa\u73fe\u3059\u308b\u540d\u8a5e__\n\n```{python:python}\n# print(get_key_from_dict(noun_id_dict, 18))\n# \u56fd\u5185\n```\n\n###__BoW\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\uff08\uff11\u56de\u4ee5\u4e0a\u51fa\u73fe\u3059\u308b\u5834\u5408\u306f\u3001\u4f55\u56de\u51fa\u73fe\u3057\u3066\u3082\u3001\u300c\uff11\u300d\u3092\u4ed8\u4e0e\u3002\u51fa\u73fe\u3057\u306a\u3044\u5834\u5408\u306f\u300c\uff10\u300d\u3092\u4ed8\u4e0e\uff09__\n\n```{python:python}\nfrom gensim import corpora, matutils\ndense_doc_0 = list(matutils.corpus2dense([vec_doc_0], num_terms=len(dictionary)).T[0])\n\nprint(dense_doc_0)\n```\n\n__\uff11\u672c\u76ee\u306e\u8a18\u4e8b\u306eBoW__\n\n```\n[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n```\n\n```{python:python}\nprint(vec_doc_0)\n```\n\n__ID 17\u756a\u76ee\u4ee5\u964d \u306e \u540d\u8a5e \u304c\u3001\u4e0a\u8a18\u306eBoW\u3067\u306f\u3001\u3059\u3079\u3066\u300c0\u300d\u306b\u306a\u3063\u3066\u3044\u308b\u3002__\n```\n[(0, 1), (1, 1), (2, 1), (3, 1), (4, 1), (5, 1), (6, 1), (7, 1), (8, 1), (9, 1), (10, 1), (11, 2), (12, 1), (13, 1), (14, 1), (15, 1), (16, 1)]\n```\n\n```{python:python}\ndense_doc_1 = list(matutils.corpus2dense([vec_doc_1], num_terms=len(dictionary)).T[0])\ndense_doc_2 = list(matutils.corpus2dense([vec_doc_2], num_terms=len(dictionary)).T[0])\n```\n\n####__\uff08\uff12\u672c\u76ee\u306e\u8a18\u4e8b\uff09__\n\n__Bow__\n\n```{python:python}\nprint(dense_doc_1)\n```\n\n```\n[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n```\n\n__\u540d\u8a5e\u51fa\u73fe\u56de\u6570__\n\n```{python:python}\nprint(vec_doc_1)\n```\n\n```\n[(9, 1), (17, 1), (18, 1), (19, 1), (20, 1), (21, 1), (22, 1), (23, 1), (24, 1), (25, 1), (26, 1), (27, 1), (28, 1), (29, 1)]\n```\n\n####__\uff08\uff13\u672c\u76ee\u306e\u8a18\u4e8b\uff09__\n\n__Bow__\n\n```{python:python}\nprint(dense_doc_2)\n```\n\n```\n[0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]\n```\n\n__\u540d\u8a5e\u51fa\u73fe\u56de\u6570__\n\n```{python:python}\nprint(vec_doc_2)\n```\n\n__2\u56de\u51fa\u73fe\u3057\u3066\u3044\u308b18\u756a\u76ee\u306e\u540d\u8a5e\u3092\u898b\u308b\u3068\u3001\u4e0a\u8a18\u306eBoW\u3067\u306f\u3001\u72d9\u3044\u901a\u308a\u3001\u300c1\u300d\u304c\u6295\u5165\u3055\u308c\u3066\u3044\u308b\u3002__\n\n```\n[(18, 2), (30, 1), (31, 1), (32, 1), (33, 1), (34, 1), (35, 1), (36, 1), (37, 1), (38, 1), (39, 1), (40, 1), (41, 1), (42, 1)]\n```\n\n___\n\n##__\u3010 \u305d\u306e\u4ed6 \u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u3011__\n\n\n\n* [Hatena Blog stMind \uff082013/11/04\uff09\u300cPython\u3067Bag of Words\u3068SVM\u3092\u4f7f\u3063\u305f\u30bf\u30a4\u30c8\u30eb\u306e\u30ab\u30c6\u30b4\u30ea\u5206\u985e\u300d](http://stmind.hatenablog.com/entry/2013/11/04/164608)\n\n* [Jubatus Blog \u7279\u5fb4\u62bd\u51fa\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://blog.jubat.us/2012/08/blog-post_27.html)\n\n> __\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u7279\u5fb4\u62bd\u51fa\u306e\u4f8b__\n>\n> \u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u30d9\u30af\u30c8\u30eb\u306b\u3059\u308b\u3068\u304d\u306b\u3088\u304f\u4f7f\u308f\u308c\u308b\u306e\u304c Bag of Words \uff08\u4ee5\u4e0b BoW\uff09\u3067\u3059\u3002\n>\n> \u3053\u308c\u306f\u3001\u5143\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u5358\u8a9e\u306e\u96c6\u5408\u3060\u3068\u601d\u3046\u3001\u3068\u3044\u3046\u3084\u308a\u65b9\u3067\u3059\u3002 \u4f8b\u3048\u3070\u3001\u300c\u5c71\u7530\u592a\u90ce\u300d\u3092\u5206\u89e3\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n>\n>>\"\u5c71\u7530\u592a\u90ce\" --> [\"\u5c71\u7530\", \"\u592a\u90ce\"]\n>\n>\u3057\u304b\u3057\u3001\u3053\u308c\u3067\u306f\u5148\u306e\u30d9\u30af\u30c8\u30eb\u3068\u306f\u4f3c\u3066\u3082\u306b\u3064\u304d\u307e\u305b\u3093\u3002 \u4f55\u6545\u3001\u5358\u8a9e\u306e\u96c6\u5408\u304c\u30d9\u30af\u30c8\u30eb\u306a\u306e\u3067\u3057\u3087\u3046\u3002\n> \u5404\u5358\u8a9e\u306b\u56fa\u6709\u306eID\u304c\u3075\u3089\u308c\u3066\u3044\u308b\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\u3002 \n>\n> \u4f8b\u3048\u3070\u3001 \"\u5c71\u7530\" \u304c3\u756a\u3001 \"\u592a\u90ce\" \u304c5\u756a\u3060\u3068\u601d\u3044\u307e\u3059\u3002 \n> \u3053\u306eID\u304c\u3001\u5148\u306e\u30d9\u30af\u30c8\u30eb\u306e\u300c\u6b21\u5143\u300d\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002\n>\n> \u3064\u307e\u308a\u3001 [\"\u5c71\u7530\", \"\u592a\u90ce\"] \u3068\u3044\u3046 BoW \u7279\u5fb4\u306f\u3001(0, 0, 1, 0, 1) \u3068\u3044\u3046\u30013\u756a\u76ee\u30685\u756a\u76ee\u304c1\u306b\u306a\u3063\u3066\u3044\u308b\u30d9\u30af\u30c8\u30eb\u3092\u793a\u3057\u3066\u3044\u308b\u3001\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\u3002 \n> \u3053\u306e\u3088\u3046\u306b\u3001\u6587\u5b57\u5217\u60c5\u5831\u3092\u7279\u5fb4\u5909\u63db\u3059\u308b\u5834\u5408\u306f\u3001\u6587\u5b57\u5217\u306e\u96c6\u5408\uff08\u306b\u5bfe\u5fdc\u3059\u308b\u30d9\u30af\u30c8\u30eb\uff09\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\n", "tags": ["Python", "python3", "NLP", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406", "gensim"]}