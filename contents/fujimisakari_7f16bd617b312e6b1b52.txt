{"context": " More than 1 year has passed since last update.\u524d\u304b\u3089\u6539\u4fee\u3057\u305f\u304b\u3063\u305f\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u3088\u3046\u3084\u304f\u6539\u4fee\u3057\u305f\u306e\u3067\u305d\u306e\u6642\u306e\u30e1\u30e2\u3002\npowerline\u3068vcs_info(git)\u3092\u7d44\u307f\u5408\u305b\u305f\u30d7\u30ed\u30f3\u30d7\u30c8\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u3066\u3044\u3066\n\u3088\u304f\u898b\u308boh-my-zsh\u3084powerline-shell\u306a\u3069\u306e\u30c4\u30fc\u30eb\u306f\u4f7f\u7528\u3057\u306a\u3044\u7d20\u306ezsh\u8a2d\u5b9a\u3067\u3084\u3063\u3066\u307e\u3059\u3002\n\n\u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u5c0e\u5165\u3057\u305f\u3053\u3068\n\n\u30d7\u30ed\u30f3\u30d7\u30c8\u306epowerline\u5316\n(git)add\u3057\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n(git)commit\u3057\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n(git)\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u3057\u3066\u3044\u306a\u3044\u304b\u30c1\u30a7\u30c3\u30af\n(git)push\u6f0f\u308c\u304c\u306a\u3044\u304b\u30c1\u30a7\u30c3\u30af\n(git)pull\u3067\u304d\u308b\u304b(\u6700\u65b0\u306e\u72b6\u614b)\u30c1\u30a7\u30c3\u30af\n\n\n\u5b9f\u969b\u306e\u5c0e\u5165\u5f8c\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\n\n\n\u8a2d\u5b9a\u8a73\u7d30\n\n\u30d7\u30ed\u30f3\u30d7\u30c8\u306epowerline\u5316\npowerline\u5316\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u30d5\u30a9\u30f3\u30c8\u306e\u6e96\u5099\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\n\u2193\u304b\u3089Menlo-Powerline.otf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u305f\u3002\nhttps://gist.github.com/qrush/1595572#file-menlo-powerline-otf\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a9\u30f3\u30c8\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u300c\u30d5\u30a9\u30f3\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u300d\u30dc\u30bf\u30f3\u304c\u51fa\u308b\u306e\u3067\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u30bf\u30fc\u30df\u30ca\u30eb\u306e\u30d5\u30a9\u30f3\u30c8\u8a2d\u5b9a\u3092Menlo-Powerline\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\nzsh\u30d7\u30ed\u30f3\u30d7\u30c8\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u307e\u3059\n#   %{%B%}...%{%b%}: \u300c...\u300d\u3092\u592a\u5b57\u306b\u3059\u308b\u3002\n#   %K{red}...%{%k%}: \u300c...\u300d\u3092\u8d64\u306e\u80cc\u666f\u8272\u306b\u3059\u308b\u3002\n#   %{%F{cyan}%}...%{%f%}: \u300c...\u300d\u3092\u30b7\u30a2\u30f3\u8272\u306e\u6587\u5b57\u306b\u3059\u308b\u3002\n#   %n: \u30e6\u30fc\u30b6\u540d\n#   %?: \u6700\u5f8c\u306b\u5b9f\u884c\u3057\u305f\u30b3\u30de\u30f3\u30c9\u306e\u7d42\u4e86\u30b9\u30c6\u30fc\u30bf\u30b9\n#   %(x.true-text.false-text): x\u304c\u771f\u306e\u3068\u304d\u306ftrue-text\u306b\u306a\u308a\n#                              \u507d\u306e\u3068\u304d\u306ffalse-text\u306b\u306a\u308b\u3002\nPROMPT_HOST='%{%b%F{gray}%K{blue}%} %(?.%{%F{green}%}\u2714.%{%F{red}%}\u2718)%{%F{black}%} %n %{%F{blue}%}'\nPROMPT_DIR='%{%F{black}%} %~%  '\nPROMPT_SU='%(!.%{%k%F{blue}%K{black}%}\u2b80%{%F{yellow}%} \u26a1 %{%k%F{black}%}.%{%k%F{magenta}%})\u2b80%{%f%k%b%}'\nPROMPT='\n%}$PROMPT_HOST$(update_git_info)$PROMPT_DIR$PROMPT_SU\n{blue}%} %{%F{black}%}$ %{%k%F{blue}\u2b80%{%f%k%b%} '\nSPROMPT='${WHITE}%r is correct? [n,y,a,e]: %{$reset_color%}'\n\n\ngit\u306eadd, commit, \u30b3\u30f3\u30d5\u30ea\u30c8\u306e\u30c1\u30a7\u30c3\u30af\nadd, commit, \u30b3\u30f3\u30d5\u30ea\u30c8\u306e\u30c1\u30a7\u30c3\u30af\u306fzsh\u306b\u30d0\u30f3\u30c9\u30eb\u3055\u308c\u3066\u3044\u308b\n\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30c4\u30fc\u30eb\u306evcs_info\u5229\u7528\u3059\u308b\u3068\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\nautoload vcs_info\n# git\u306e\u30c1\u30a7\u30c3\u30af\u3092\u6709\u52b9\u306b\u3059\u308b\nzstyle \":vcs_info:*\" enable git\n# commit\u3057\u3066\u3044\u306a\u3044\u5909\u66f4\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\nzstyle \":vcs_info:git:*\" check-for-changes true\n# git\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u5bfe\u3057\u3066\u3001\u5909\u66f4\u60c5\u5831\u3068\u30ea\u30dd\u30b8\u30c8\u30ea\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\nzstyle \":vcs_info:git:*\" formats \"\u2b60 %r \u2b81 %b%u%c\"\n# git\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u5bfe\u3057\u3066\u3001\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u306a\u3069\u306e\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\nzstyle \":vcs_info:git:*\" actionformats \"\u2b60 %r \u2b81 %b%u%c \u2b81 %a\"\n# add\u3057\u3066\u3044\u306a\u3044\u5909\u66f4\u304c\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u6587\u5b57\u5217\nzstyle \":vcs_info:git:*\" unstagedstr \" \u2b81 Unstaged\"\n# commit\u3057\u3066\u3044\u306a\u3044stage\u304c\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u6587\u5b57\u5217\nzstyle \":vcs_info:git:*\" stagedstr \" \u2b81 Staged\"\n\n\ngit\u306epush\u6f0f\u308c\u3001pull\u3067\u304d\u308b\u304b\u306e\u30c1\u30a7\u30c3\u30af\npush\u6f0f\u308c\u306b\u3064\u3044\u3066\u306f\u3001\u300cgit rev-list \u8ffd\u8de1\u30d6\u30e9\u30f3\u30c1..\u30ed\u30fc\u30ab\u30eb\u30d6\u30e9\u30f3\u30c1 \u300d\u3067\n\u73fe\u5728\u306epush\u6570\u304c\u5272\u308a\u51fa\u305b\u308b\u306e\u3067\u3053\u308c\u3067\u5224\u5b9a\u3057\u3066\u307e\u3059\u3002\npull\u3067\u304d\u308b\u304b\u306b\u3064\u3044\u3066\u306f\u3001\u30ed\u30fc\u30ab\u30eb\u30d6\u30e9\u30f3\u30c1HEAD\u3068\u8ffd\u8de1\u30d6\u30e9\u30f3\u30c1\u306e\u72b6\u614b\u306b\u5dee\u5206\u304c\u6709\u308a\n\u4e14\u3064\u73fe\u5728\u30ed\u30fc\u30ab\u30eb\u30d6\u30e9\u30f3\u30c1\u306b\u3066commit\u3057\u3066\u3044\u306a\u3044\u72b6\u614b\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3067\u5224\u5b9a\u3057\u3066\u307e\u3059\u3002\n\u307e\u305f\u3001push\u3001pull\u306e\u30c1\u30a7\u30c3\u30af\u306f\u8ffd\u8de1\u30d6\u30e9\u30f3\u30c1\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u304c\u524d\u63d0\u306b\u306a\u308b\u306e\u3067\ngit_is_track_branch\u95a2\u6570\u3067\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u6700\u5f8c\u306bupdate_git_info\u95a2\u6570\u3067git\u95a2\u9023\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u8868\u793a\u306b\u3064\u3044\u3066\u306e\u60c5\u5831\u3092\u307e\u3068\u3081\u6574\u5f62\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307e\u3059\u3002\ngit_is_track_branch(){\n    if [ \"$(git remote 2>/dev/null)\" != \"\" ]; then\n        local target_tracking_branch=\"origin/$(git rev-parse --abbrev-ref HEAD)\"\n        for tracking_branch in $(git branch -ar) ; do\n            if [ \"$target_tracking_branch\" = \"$tracking_branch\" ]; then\n                echo \"true\"\n            fi\n        done\n    fi\n}\n\ngit_info_pull(){\n    if [ -n \"$(git_is_track_branch)\" ]; then\n        local current_branch=\"$(git rev-parse --abbrev-ref HEAD)\"\n        local head_rev=\"$(git rev-parse HEAD)\"\n        local origin_rev=\"$(git rev-parse origin/$current_branch)\"\n        if [ \"$head_rev\" != \"$origin_rev\" ] && [ \"$(git_info_push)\" = \"\" ]; then\n                echo \" \u2b81 Can Be Pulled\"\n        fi\n    fi\n}\n\ngit_info_push(){\n    if [ -n \"$(git_is_track_branch)\" ]; then\n        local current_branch=\"$(git rev-parse --abbrev-ref HEAD)\"\n        local push_count=$(git rev-list origin/\"$current_branch\"..\"$current_branch\" 2>/dev/null | wc -l)\n        if [ \"$push_count\" -gt 0 ]; then\n            echo \" \u2b81 Can Be Pushed($push_count)\"\n        fi\n    fi\n}\n\nfunction update_git_info() {\n    LANG=en_US.UTF-8 vcs_info\n    _vcs_info=$vcs_info_msg_0_\n    _git_info_push=$(git_info_push)\n    _git_info_pull=$(git_info_pull)\n    if [ -n \"$_vcs_info\" ]; then\n        local BG_COLOR=green\n\n        if [ -n \"$_git_info_push\" ] || [ -n \"$_git_info_pull\" ]; then\n          BG_COLOR=yellow\n          FG_COLOR=black\n        fi\n\n        if [[ -n `echo $_vcs_info | grep -Ei \"merge|unstaged|staged\" 2> /dev/null` ]]; then\n            BG_COLOR=red\n            FG_COLOR=white\n        fi\n        echo \"%{%K{$BG_COLOR}%}\u2b80%{%F{$FG_COLOR}%} $_vcs_info$_git_info_push$_git_info_pull %{%F{$BG_COLOR}%K{magenta}%}\u2b80\"\n    else\n       echo \"%{%K{magenta}%}\u2b80\"\n    fi\n}\n\n\n\u3059\u3079\u3066\u3092\u307e\u3068\u3081\u305f\u30d7\u30ed\u30f3\u30d7\u30c8\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\nautoload vcs_info\nzstyle \":vcs_info:*\" enable git\nzstyle \":vcs_info:git:*\" check-for-changes true\nzstyle \":vcs_info:git:*\" formats \"\u2b60 %r \u2b81 %b%u%c\"\nzstyle \":vcs_info:git:*\" actionformats \"\u2b60 %r \u2b81 %b%u%c \u2b81 %a\"\nzstyle \":vcs_info:git:*\" unstagedstr \" \u2b81 Unstaged\"\nzstyle \":vcs_info:git:*\" stagedstr \" \u2b81 Staged\"\n\ngit_is_track_branch(){\n    if [ \"$(git remote 2>/dev/null)\" != \"\" ]; then\n        local target_tracking_branch=\"origin/$(git rev-parse --abbrev-ref HEAD)\"\n        for tracking_branch in $(git branch -ar) ; do\n            if [ \"$target_tracking_branch\" = \"$tracking_branch\" ]; then\n                echo \"true\"\n            fi\n        done\n    fi\n}\n\ngit_info_pull(){\n    if [ -n \"$(git_is_track_branch)\" ]; then\n        local current_branch=\"$(git rev-parse --abbrev-ref HEAD)\"\n        local head_rev=\"$(git rev-parse HEAD)\"\n        local origin_rev=\"$(git rev-parse origin/$current_branch)\"\n        if [ \"$head_rev\" != \"$origin_rev\" ] && [ \"$(git_info_push)\" = \"\" ]; then\n                echo \" \u2b81 Can Be Pulled\"\n        fi\n    fi\n}\n\ngit_info_push(){\n    if [ -n \"$(git_is_track_branch)\" ]; then\n        local current_branch=\"$(git rev-parse --abbrev-ref HEAD)\"\n        local push_count=$(git rev-list origin/\"$current_branch\"..\"$current_branch\" 2>/dev/null | wc -l)\n        if [ \"$push_count\" -gt 0 ]; then\n            echo \" \u2b81 Can Be Pushed($push_count)\"\n        fi\n    fi\n}\n\nfunction update_git_info() {\n    LANG=en_US.UTF-8 vcs_info\n    _vcs_info=$vcs_info_msg_0_\n    _git_info_push=$(git_info_push)\n    _git_info_pull=$(git_info_pull)\n    if [ -n \"$_vcs_info\" ]; then\n        local BG_COLOR=green\n\n        if [ -n \"$_git_info_push\" ] || [ -n \"$_git_info_pull\" ]; then\n          BG_COLOR=yellow\n          FG_COLOR=black\n        fi\n\n        if [[ -n `echo $_vcs_info | grep -Ei \"merge|unstaged|staged\" 2> /dev/null` ]]; then\n            BG_COLOR=red\n            FG_COLOR=white\n        fi\n        echo \"%{%K{$BG_COLOR}%}\u2b80%{%F{$FG_COLOR}%} $_vcs_info$_git_info_push$_git_info_pull %{%F{$BG_COLOR}%K{magenta}%}\u2b80\"\n    else\n       echo \"%{%K{magenta}%}\u2b80\"\n    fi\n}\n\nPROMPT_HOST='%{%b%F{gray}%K{blue}%} %(?.%{%F{green}%}\u2714.%{%F{red}%}\u2718)%{%F{black}%} %n %{%F{blue}%}'\nPROMPT_DIR='%{%F{black}%} %~%  '\nPROMPT_SU='%(!.%{%k%F{blue}%K{black}%}\u2b80%{%F{yellow}%} \u26a1 %{%k%F{black}%}.%{%k%F{magenta}%})\u2b80%{%f%k%b%}'\nPROMPT='\n%{%f%b%k%}$PROMPT_HOST$(update_git_info)$PROMPT_DIR$PROMPT_SU\n%{%f%b%K{blue}%} %{%F{black}%}$ %{%k%F{blue}\u2b80%{%f%k%b%} '\nSPROMPT='${WHITE}%r is correct? [n,y,a,e]: %{$reset_color%}'\n\n\n\u524d\u304b\u3089\u6539\u4fee\u3057\u305f\u304b\u3063\u305f\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u3088\u3046\u3084\u304f\u6539\u4fee\u3057\u305f\u306e\u3067\u305d\u306e\u6642\u306e\u30e1\u30e2\u3002\npowerline\u3068vcs_info(git)\u3092\u7d44\u307f\u5408\u305b\u305f\u30d7\u30ed\u30f3\u30d7\u30c8\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u3066\u3044\u3066\n\u3088\u304f\u898b\u308boh-my-zsh\u3084powerline-shell\u306a\u3069\u306e\u30c4\u30fc\u30eb\u306f\u4f7f\u7528\u3057\u306a\u3044\u7d20\u306ezsh\u8a2d\u5b9a\u3067\u3084\u3063\u3066\u307e\u3059\u3002\n\n## \u30d7\u30ed\u30f3\u30d7\u30c8\u306b\u5c0e\u5165\u3057\u305f\u3053\u3068\n* \u30d7\u30ed\u30f3\u30d7\u30c8\u306epowerline\u5316\n* (git)add\u3057\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n* (git)commit\u3057\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n* (git)\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u3057\u3066\u3044\u306a\u3044\u304b\u30c1\u30a7\u30c3\u30af\n* (git)push\u6f0f\u308c\u304c\u306a\u3044\u304b\u30c1\u30a7\u30c3\u30af\n* (git)pull\u3067\u304d\u308b\u304b(\u6700\u65b0\u306e\u72b6\u614b)\u30c1\u30a7\u30c3\u30af\n\n## \u5b9f\u969b\u306e\u5c0e\u5165\u5f8c\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\n\n![toukou1.gif](https://qiita-image-store.s3.amazonaws.com/0/37724/397f42f8-2ed0-3a2d-3313-3ef5c85ed02a.gif \"toukou1.gif\")\n\n## \u8a2d\u5b9a\u8a73\u7d30\n### \u30d7\u30ed\u30f3\u30d7\u30c8\u306epowerline\u5316\npowerline\u5316\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u3001\u30d5\u30a9\u30f3\u30c8\u306e\u6e96\u5099\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\n\u2193\u304b\u3089Menlo-Powerline.otf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u305f\u3002\nhttps://gist.github.com/qrush/1595572#file-menlo-powerline-otf\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a9\u30f3\u30c8\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u300c\u30d5\u30a9\u30f3\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u300d\u30dc\u30bf\u30f3\u304c\u51fa\u308b\u306e\u3067\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u30bf\u30fc\u30df\u30ca\u30eb\u306e\u30d5\u30a9\u30f3\u30c8\u8a2d\u5b9a\u3092Menlo-Powerline\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\nzsh\u30d7\u30ed\u30f3\u30d7\u30c8\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u307e\u3059\n\n```zsh\n#   %{%B%}...%{%b%}: \u300c...\u300d\u3092\u592a\u5b57\u306b\u3059\u308b\u3002\n#   %K{red}...%{%k%}: \u300c...\u300d\u3092\u8d64\u306e\u80cc\u666f\u8272\u306b\u3059\u308b\u3002\n#   %{%F{cyan}%}...%{%f%}: \u300c...\u300d\u3092\u30b7\u30a2\u30f3\u8272\u306e\u6587\u5b57\u306b\u3059\u308b\u3002\n#   %n: \u30e6\u30fc\u30b6\u540d\n#   %?: \u6700\u5f8c\u306b\u5b9f\u884c\u3057\u305f\u30b3\u30de\u30f3\u30c9\u306e\u7d42\u4e86\u30b9\u30c6\u30fc\u30bf\u30b9\n#   %(x.true-text.false-text): x\u304c\u771f\u306e\u3068\u304d\u306ftrue-text\u306b\u306a\u308a\n#                              \u507d\u306e\u3068\u304d\u306ffalse-text\u306b\u306a\u308b\u3002\nPROMPT_HOST='%{%b%F{gray}%K{blue}%} %(?.%{%F{green}%}\u2714.%{%F{red}%}\u2718)%{%F{black}%} %n %{%F{blue}%}'\nPROMPT_DIR='%{%F{black}%} %~%  '\nPROMPT_SU='%(!.%{%k%F{blue}%K{black}%}\u2b80%{%F{yellow}%} \u26a1 %{%k%F{black}%}.%{%k%F{magenta}%})\u2b80%{%f%k%b%}'\nPROMPT='\n%}$PROMPT_HOST$(update_git_info)$PROMPT_DIR$PROMPT_SU\n{blue}%} %{%F{black}%}$ %{%k%F{blue}\u2b80%{%f%k%b%} '\nSPROMPT='${WHITE}%r is correct? [n,y,a,e]: %{$reset_color%}'\n```\n\n### git\u306eadd, commit, \u30b3\u30f3\u30d5\u30ea\u30c8\u306e\u30c1\u30a7\u30c3\u30af\nadd, commit, \u30b3\u30f3\u30d5\u30ea\u30c8\u306e\u30c1\u30a7\u30c3\u30af\u306fzsh\u306b\u30d0\u30f3\u30c9\u30eb\u3055\u308c\u3066\u3044\u308b\n\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30c4\u30fc\u30eb\u306evcs_info\u5229\u7528\u3059\u308b\u3068\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\n```zsh\nautoload vcs_info\n# git\u306e\u30c1\u30a7\u30c3\u30af\u3092\u6709\u52b9\u306b\u3059\u308b\nzstyle \":vcs_info:*\" enable git\n# commit\u3057\u3066\u3044\u306a\u3044\u5909\u66f4\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\nzstyle \":vcs_info:git:*\" check-for-changes true\n# git\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u5bfe\u3057\u3066\u3001\u5909\u66f4\u60c5\u5831\u3068\u30ea\u30dd\u30b8\u30c8\u30ea\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\nzstyle \":vcs_info:git:*\" formats \"\u2b60 %r \u2b81 %b%u%c\"\n# git\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u5bfe\u3057\u3066\u3001\u30b3\u30f3\u30d5\u30ea\u30af\u30c8\u306a\u3069\u306e\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\nzstyle \":vcs_info:git:*\" actionformats \"\u2b60 %r \u2b81 %b%u%c \u2b81 %a\"\n# add\u3057\u3066\u3044\u306a\u3044\u5909\u66f4\u304c\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u6587\u5b57\u5217\nzstyle \":vcs_info:git:*\" unstagedstr \" \u2b81 Unstaged\"\n# commit\u3057\u3066\u3044\u306a\u3044stage\u304c\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u6587\u5b57\u5217\nzstyle \":vcs_info:git:*\" stagedstr \" \u2b81 Staged\"\n```\n\n### git\u306epush\u6f0f\u308c\u3001pull\u3067\u304d\u308b\u304b\u306e\u30c1\u30a7\u30c3\u30af\npush\u6f0f\u308c\u306b\u3064\u3044\u3066\u306f\u3001\u300cgit rev-list \u8ffd\u8de1\u30d6\u30e9\u30f3\u30c1..\u30ed\u30fc\u30ab\u30eb\u30d6\u30e9\u30f3\u30c1 \u300d\u3067\n\u73fe\u5728\u306epush\u6570\u304c\u5272\u308a\u51fa\u305b\u308b\u306e\u3067\u3053\u308c\u3067\u5224\u5b9a\u3057\u3066\u307e\u3059\u3002\n\npull\u3067\u304d\u308b\u304b\u306b\u3064\u3044\u3066\u306f\u3001\u30ed\u30fc\u30ab\u30eb\u30d6\u30e9\u30f3\u30c1HEAD\u3068\u8ffd\u8de1\u30d6\u30e9\u30f3\u30c1\u306e\u72b6\u614b\u306b\u5dee\u5206\u304c\u6709\u308a\n\u4e14\u3064\u73fe\u5728\u30ed\u30fc\u30ab\u30eb\u30d6\u30e9\u30f3\u30c1\u306b\u3066commit\u3057\u3066\u3044\u306a\u3044\u72b6\u614b\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3067\u5224\u5b9a\u3057\u3066\u307e\u3059\u3002\n\n\u307e\u305f\u3001push\u3001pull\u306e\u30c1\u30a7\u30c3\u30af\u306f\u8ffd\u8de1\u30d6\u30e9\u30f3\u30c1\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u304c\u524d\u63d0\u306b\u306a\u308b\u306e\u3067\ngit_is_track_branch\u95a2\u6570\u3067\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6700\u5f8c\u306bupdate_git_info\u95a2\u6570\u3067git\u95a2\u9023\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u8868\u793a\u306b\u3064\u3044\u3066\u306e\u60c5\u5831\u3092\u307e\u3068\u3081\u6574\u5f62\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307e\u3059\u3002\n\n```zsh\ngit_is_track_branch(){\n    if [ \"$(git remote 2>/dev/null)\" != \"\" ]; then\n        local target_tracking_branch=\"origin/$(git rev-parse --abbrev-ref HEAD)\"\n        for tracking_branch in $(git branch -ar) ; do\n            if [ \"$target_tracking_branch\" = \"$tracking_branch\" ]; then\n                echo \"true\"\n            fi\n        done\n    fi\n}\n\ngit_info_pull(){\n    if [ -n \"$(git_is_track_branch)\" ]; then\n        local current_branch=\"$(git rev-parse --abbrev-ref HEAD)\"\n        local head_rev=\"$(git rev-parse HEAD)\"\n        local origin_rev=\"$(git rev-parse origin/$current_branch)\"\n        if [ \"$head_rev\" != \"$origin_rev\" ] && [ \"$(git_info_push)\" = \"\" ]; then\n                echo \" \u2b81 Can Be Pulled\"\n        fi\n    fi\n}\n\ngit_info_push(){\n    if [ -n \"$(git_is_track_branch)\" ]; then\n        local current_branch=\"$(git rev-parse --abbrev-ref HEAD)\"\n        local push_count=$(git rev-list origin/\"$current_branch\"..\"$current_branch\" 2>/dev/null | wc -l)\n        if [ \"$push_count\" -gt 0 ]; then\n            echo \" \u2b81 Can Be Pushed($push_count)\"\n        fi\n    fi\n}\n\nfunction update_git_info() {\n    LANG=en_US.UTF-8 vcs_info\n    _vcs_info=$vcs_info_msg_0_\n    _git_info_push=$(git_info_push)\n    _git_info_pull=$(git_info_pull)\n    if [ -n \"$_vcs_info\" ]; then\n        local BG_COLOR=green\n\n        if [ -n \"$_git_info_push\" ] || [ -n \"$_git_info_pull\" ]; then\n          BG_COLOR=yellow\n          FG_COLOR=black\n        fi\n\n        if [[ -n `echo $_vcs_info | grep -Ei \"merge|unstaged|staged\" 2> /dev/null` ]]; then\n            BG_COLOR=red\n            FG_COLOR=white\n        fi\n        echo \"%{%K{$BG_COLOR}%}\u2b80%{%F{$FG_COLOR}%} $_vcs_info$_git_info_push$_git_info_pull %{%F{$BG_COLOR}%K{magenta}%}\u2b80\"\n    else\n       echo \"%{%K{magenta}%}\u2b80\"\n    fi\n}\n```\n\n\n## \u3059\u3079\u3066\u3092\u307e\u3068\u3081\u305f\u30d7\u30ed\u30f3\u30d7\u30c8\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\n\n```zsh\nautoload vcs_info\nzstyle \":vcs_info:*\" enable git\nzstyle \":vcs_info:git:*\" check-for-changes true\nzstyle \":vcs_info:git:*\" formats \"\u2b60 %r \u2b81 %b%u%c\"\nzstyle \":vcs_info:git:*\" actionformats \"\u2b60 %r \u2b81 %b%u%c \u2b81 %a\"\nzstyle \":vcs_info:git:*\" unstagedstr \" \u2b81 Unstaged\"\nzstyle \":vcs_info:git:*\" stagedstr \" \u2b81 Staged\"\n\ngit_is_track_branch(){\n    if [ \"$(git remote 2>/dev/null)\" != \"\" ]; then\n        local target_tracking_branch=\"origin/$(git rev-parse --abbrev-ref HEAD)\"\n        for tracking_branch in $(git branch -ar) ; do\n            if [ \"$target_tracking_branch\" = \"$tracking_branch\" ]; then\n                echo \"true\"\n            fi\n        done\n    fi\n}\n\ngit_info_pull(){\n    if [ -n \"$(git_is_track_branch)\" ]; then\n        local current_branch=\"$(git rev-parse --abbrev-ref HEAD)\"\n        local head_rev=\"$(git rev-parse HEAD)\"\n        local origin_rev=\"$(git rev-parse origin/$current_branch)\"\n        if [ \"$head_rev\" != \"$origin_rev\" ] && [ \"$(git_info_push)\" = \"\" ]; then\n                echo \" \u2b81 Can Be Pulled\"\n        fi\n    fi\n}\n\ngit_info_push(){\n    if [ -n \"$(git_is_track_branch)\" ]; then\n        local current_branch=\"$(git rev-parse --abbrev-ref HEAD)\"\n        local push_count=$(git rev-list origin/\"$current_branch\"..\"$current_branch\" 2>/dev/null | wc -l)\n        if [ \"$push_count\" -gt 0 ]; then\n            echo \" \u2b81 Can Be Pushed($push_count)\"\n        fi\n    fi\n}\n\nfunction update_git_info() {\n    LANG=en_US.UTF-8 vcs_info\n    _vcs_info=$vcs_info_msg_0_\n    _git_info_push=$(git_info_push)\n    _git_info_pull=$(git_info_pull)\n    if [ -n \"$_vcs_info\" ]; then\n        local BG_COLOR=green\n\n        if [ -n \"$_git_info_push\" ] || [ -n \"$_git_info_pull\" ]; then\n          BG_COLOR=yellow\n          FG_COLOR=black\n        fi\n\n        if [[ -n `echo $_vcs_info | grep -Ei \"merge|unstaged|staged\" 2> /dev/null` ]]; then\n            BG_COLOR=red\n            FG_COLOR=white\n        fi\n        echo \"%{%K{$BG_COLOR}%}\u2b80%{%F{$FG_COLOR}%} $_vcs_info$_git_info_push$_git_info_pull %{%F{$BG_COLOR}%K{magenta}%}\u2b80\"\n    else\n       echo \"%{%K{magenta}%}\u2b80\"\n    fi\n}\n\nPROMPT_HOST='%{%b%F{gray}%K{blue}%} %(?.%{%F{green}%}\u2714.%{%F{red}%}\u2718)%{%F{black}%} %n %{%F{blue}%}'\nPROMPT_DIR='%{%F{black}%} %~%  '\nPROMPT_SU='%(!.%{%k%F{blue}%K{black}%}\u2b80%{%F{yellow}%} \u26a1 %{%k%F{black}%}.%{%k%F{magenta}%})\u2b80%{%f%k%b%}'\nPROMPT='\n%{%f%b%k%}$PROMPT_HOST$(update_git_info)$PROMPT_DIR$PROMPT_SU\n%{%f%b%K{blue}%} %{%F{black}%}$ %{%k%F{blue}\u2b80%{%f%k%b%} '\nSPROMPT='${WHITE}%r is correct? [n,y,a,e]: %{$reset_color%}'\n```\n\n\n", "tags": ["Zsh", "Mac", "powerline", "Bash"]}