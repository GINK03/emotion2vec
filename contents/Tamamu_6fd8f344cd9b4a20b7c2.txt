{"context": "\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5236\u3059\u308b\u8005\u306f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5236\u3059\u308b\u3002\nRust\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u3064\u3044\u3066\u3001\u65e5\u672c\u8a9e\u3067\u8a73\u3057\u304f\u66f8\u3044\u3066\u3044\u308b\u60c5\u5831\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u8abf\u3079\u307e\u3057\u305f\u3002\n\u5168\u90e8\u3060\u3068\u30ad\u30ea\u304c\u306a\u3044\u306e\u3067\u3001\u4eca\u56de\u306f\u30d9\u30af\u30bf\u30fc\u306e\u307f\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\u305d\u306e\u3046\u3061\u5225\u306e\u3084\u3064\u3082\u307e\u3068\u3081\u307e\u3059\u3002\n\n\u30d9\u30af\u30bf\u30fc\u306e\u9577\u3055\u3068\u30b5\u30a4\u30ba\n\u307e\u305a\u30d9\u30af\u30bf\u30fc\u3092\u4f5c\u308b\u3002\n\u4f5c\u308a\u65b9\u306b\u306f2\u901a\u308a\u3042\u3063\u3066\u3001new\u3067\u4f5c\u308b\u65b9\u6cd5\u3068\u3001with_capacity\u3067\u521d\u671f\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u3066\u4f5c\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3002\n\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u305f\u65b9\u306f\u3001\u9577\u3055\u304c\u6307\u5b9a\u30b5\u30a4\u30ba\u4ee5\u5185\u306a\u3089\u9818\u57df\u306e\u518d\u78ba\u4fdd(reallocate)\u304c\u8d77\u304d\u306a\u3044\u3002\nlet mut vec: Vec<i32> = Vec::new();\nlet mut vec_cap: Vec<i32> = Vec::with_capacity(100);\nfor i in 0..10 {\n  vec.push(i);\n  vec_cap.push(i);\n}\nassert!(vec == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\nassert!(vec.len() == 10);\nassert!(vec_cap.len() == 10);\nassert!(vec.capacity() == 16);\nassert!(vec_cap.capacity() == 100);\n\n\n\u30d9\u30af\u30bf\u30fc\u306e\u30b5\u30a4\u30ba\u3092\u7e2e\u5c0f\n\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u524a\u6e1b\u306e\u305f\u3081\u3001\u30d9\u30af\u30bf\u30fc\u306e\u30b5\u30a4\u30ba\u3092\u73fe\u5728\u4f7f\u308f\u308c\u3066\u3044\u308b\u5927\u304d\u3055\u307e\u3067\u7e2e\u5c0f\u3059\u308b\u3002\n\u3053\u306e\u5f8c\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3068\u9818\u57df\u306e\u518d\u78ba\u4fdd\u304c\u8d77\u304d\u308b\u3002\nvec_cap.shrink_to_fit();\nassert!(vec_cap.capacity() == 10);\n\n\n\u30d9\u30af\u30bf\u30fc\u306e\u8981\u7d20\u3092\u524a\u9664\n\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u65b9\u6cd5\u306f\u8907\u6570\u3042\u308b\u3002\n\u4e00\u822c\u7684\u306a\u524a\u9664\u6cd5\u3067\u3042\u308b\u3001\u6307\u5b9a\u4f4d\u7f6e\u306e\u8981\u7d20\u3092\u524a\u9664\u3057\u3066\u304b\u3089\u6b8b\u308a\u306e\u8981\u7d20\u3092\u5de6\u306b\u30b7\u30d5\u30c8\u3059\u308b\u65b9\u5f0f\u306fremove\u3060\u3002\nassert!(vec.remove(3) == 3);\nassert!(vec.remove(6) == 7);\nassert!(vec == [0, 1, 2, 4, 5, 6, 8, 9]);\n\n\u307e\u305f\u3001\u6307\u5b9a\u4f4d\u7f6e\u306e\u8981\u7d20\u3092\u524a\u9664\u3057\u3066\u304b\u3089\u4e00\u756a\u6700\u5f8c\u306e\u8981\u7d20\u3067\u8a70\u3081\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3002\n\u30a2\u30af\u30bb\u30b9\u3059\u308b\u56de\u6570\u304c\u5c11\u306a\u3044\u5206\u3001\u4e0a\u8a18\u3088\u308a\u306f\u3053\u3063\u3061\u306e\u65b9\u304c\u901f\u3044\u3002\u8a08\u7b97\u91cf\u306fO(1)\u3002\nassert!(vec.swap_remove(2) == 2);\nassert!(vec == [0, 1, 9, 4, 5, 6, 8]);\nassert!(vec.swap_remove(2) == 9);\nassert!(vec == [0, 1, 8, 4, 5, 6]);\n\n\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u306b\u5408\u81f4\u3057\u306a\u3044\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3002\n\u3044\u308f\u3086\u308b\u95a2\u6570\u578b\u8a00\u8a9e\u306efilter\u3068\u540c\u3058\u3002\nvec.retain(|&x| x > 4);\nassert!(vec == [8, 5, 6]);\n\n\u9023\u7d9a\u3059\u308b\u91cd\u8907\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u65b9\u6cd5\u3002\n\u30d9\u30af\u30bf\u30fc\u304c\u30bd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u5168\u3066\u306e\u91cd\u8907\u304c\u524a\u9664\u3055\u308c\u308b\u3002\nvec = vec![0, 1, 1, 2, 3, 2, 5, 7, 7, 7];\nvec.dedup();\nassert!(vec == [0, 1, 2, 3, 2, 5, 7]);\n\n\u914d\u5217\u3092\u7a7a\u306b\u3059\u308b\u306b\u306fclear\u3092\u5b9f\u884c\u3059\u308c\u3070\u826f\u3044\u3002\nvec.clear();\nassert!(vec.is_empty());\n\n\n\u30d9\u30af\u30bf\u30fc\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\n\u30d9\u30af\u30bf\u30fc\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u306f\u8ffd\u52a0\u3059\u308b\u4f4d\u7f6e\u3084\u8981\u7d20\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u3002\n\u307e\u305a\u30d9\u30af\u30bf\u30fc\u306e\u6700\u5f8c\u5c3e\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u3002\nvec.push(3);\nvec.push(5);\nvec.push(7);\nassert!(vec == [3, 5, 7]);\n\n\u8907\u6570\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\nvec.extend_from_slice(&[2, 4, 6]);\nassert!(vec == [3, 5, 7, 2, 4, 6]);\n\n\u4e0a\u306b\u4f3c\u305f\u624b\u6bb5\u3068\u3057\u3066\u3001append\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u3002\n\u305f\u3060\u3057\u8ffd\u52a0\u3057\u305f\u30d9\u30af\u30bf\u30fc\u306f\u7a7a\u306b\u306a\u308b\u3002\u3064\u307e\u308a\u5438\u53ce\u3055\u308c\u308b\u3002\nlet mut v = vec![1, 2, 3];\nvec.append(&mut v);\nassert!(vec == [3, 5, 7, 2, 4, 6, 1, 2, 3]);\nassert!(v.is_empty());\n\n\u6307\u5b9a\u4f4d\u7f6e\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3046\u3059\u308b\u3002\nvec.insert(3, 0);\nvec.insert(7, 0);\nassert!(vec == [3, 5, 7, 0, 2, 4, 6, 0, 1, 2, 3]);\n\n\n\u30d9\u30af\u30bf\u30fc\u304b\u3089\u8981\u7d20\u3092\u53d6\u5f97\u3059\u308b\n\u5358\u7d14\u306a\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4ee5\u5916\u306e\u65b9\u6cd5\u3092\u898b\u3066\u3044\u304f\u3002\n\u4ee5\u4e0b\u3067\u30d9\u30af\u30bf\u30fc\u306e\u5f8c\u308d\u304b\u3089\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3059\u3002\nassert!(vec.pop() == Some(3));\nassert!(vec == [3, 5, 7, 0, 2, 4, 6, 0, 1, 2]);\nassert!(vec.pop() == Some(2));\nassert!(vec == [3, 5, 7, 0, 2, 4, 6, 0, 1]);\n\n\u307e\u305f\u3001\u6307\u5b9a\u4f4d\u7f6e\u4ee5\u964d\u3092\u5207\u308a\u843d\u3068\u3059\u65b9\u6cd5\u304c\u3042\u308b\u3002\nassert!(vec.split_off(7) == [0, 1]);\nassert!(vec == [3, 5, 7, 0, 2, 4, 6]);\n\n\u30d9\u30af\u30bf\u30fc\u306e\u5148\u982d\u306e\u8981\u7d20\u306e\u53c2\u7167\u3092\u5f97\u308b\u306b\u306f\u3053\u3046\u3059\u308b\u3002\nassert!(vec.first() == Some(&3));\nassert!(vec == [3, 5, 7, 0, 2, 4, 6]);\n\n\u540c\u69d8\u306b\u6700\u5f8c\u306e\u8981\u7d20\u306e\u53c2\u7167\u3092\u5f97\u308b\u3053\u3068\u3082\u51fa\u6765\u308b\u3002\nassert!(vec.last() == Some(&6));\nassert!(vec == [3, 5, 7, 0, 2, 4, 6]);\n\nCons\u30bb\u30eb\u306e\u3088\u3046\u306b\u3001\u30d9\u30af\u30bf\u30fc\u306e\u5148\u982d\u3068\u6b8b\u308a\u306e\u8981\u7d20\u3092slice\u306e\u5f62\u3067\u53d6\u5f97\u3059\u308b\u3002\nv = vec![2, 4, 6, 8];\nlet cons = v.split_first().unwrap();\nassert!(cons.0 == &2);\nassert!(cons.1 == &[4, 6, 8]);\nassert!(v == [2, 4, 6, 8]);\n\n\u30d9\u30af\u30bf\u30fc\u306e\u8981\u7d20\u3092\u5b89\u5168\u306b\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\u3053\u306e\u65b9\u6cd5\u306a\u3089\u9818\u57df\u5916\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u3092\u672a\u7136\u306b\u9632\u3050\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\nassert!(vec.get(3) == Some(&0));\nassert!(vec.get(10) == None); // \u9818\u57df\u5916\u3092\u53c2\u7167\u3057\u3088\u3046\u3068\u3059\u308b\u3068None\u304c\u8fd4\u308b\nassert!(vec == [3, 5, 7, 0, 2, 4, 6]);\n\n\u30d9\u30af\u30bf\u30fc\u3092\u6307\u5b9a\u3057\u305f\u6570\u306e\u8981\u7d20\u306e\u304b\u305f\u307e\u308a\u3068\u3057\u3066\u53d6\u308a\u51fa\u3059\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\u4f59\u3063\u305f\u8981\u7d20\u306e\u304b\u305f\u307e\u308a\u306f\u6307\u5b9a\u3057\u305f\u9577\u3055\u3068\u306f\u306a\u3089\u306a\u3044\u3002\nfor chunk in vec.chunks(3) {\n    println!(\"{:?}\", chunk);\n}\n\n// \u51fa\u529b\n// [3, 5, 7]\n// [0, 2, 4]\n// [6]\n\n\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u3067\u5206\u5272\u3057\u3066\u3001\u30bf\u30d7\u30eb\u3067\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3002\nassert!(vec.split_at(3) == (&[3, 5, 7], &[0, 2, 4, 6]));\nassert!(vec == [3, 5, 7, 0, 2, 4, 6]);\n\n\u6761\u4ef6\u306b\u5408\u81f4\u3059\u308b\u8981\u7d20\u3092\u533a\u5207\u308a\u3068\u3057\u3066\u5206\u5272\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3002\nfor group in vec.split(|x| *x == 0) {\n    println!(\"{:?}\", group);\n}\n\n// \u51fa\u529b\n// [3, 5, 7]\n// [2, 4, 6]\n\n\u4e0a\u8a18\u306esplit\u306b\u5206\u5272\u6570\u306e\u5236\u9650\u3092\u8a2d\u3051\u305f\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308b\u3002\nfor group in vec.splitn(3, |x| *x > 3) {\n    println!(\"{:?}\", group);\n}\n\n// \u51fa\u529b\n// [3]\n// []\n// [0, 2, 4, 6]\n\n\u4ee5\u4e0b\u306f\u305d\u308c\u3092\u30d9\u30af\u30bf\u30fc\u306e\u5f8c\u308d\u304b\u3089\u5b9f\u884c\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3002\nfor group in vec.rsplitn(3, |x| *x > 3) {\n    println!(\"{:?}\", group);\n}\n\n// \u51fa\u529b\n// []\n// []\n// [3, 5, 7, 0, 2]\n\n\n\u30d9\u30af\u30bf\u30fc\u306b\u8981\u7d20\u304c\u542b\u307e\u308c\u308b\u304b\u8abf\u3079\u308b\n\u30d9\u30af\u30bf\u30fc\u306b\u6307\u5b9a\u8981\u7d20\u304c\u542b\u307e\u308c\u308b\u304b\u8abf\u3079\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\nassert!(vec.contains(&2));\nassert!(!vec.contains(&10));\n\n\u30d9\u30af\u30bf\u30fc\u304c\u6307\u5b9a\u3057\u305f\u8981\u7d20\u3067\u59cb\u307e\u308b\u304b\u3092\u8abf\u3079\u305f\u3044\u5834\u5408\u306f\u3053\u3046\u3002\nassert!(vec.starts_with(&[3, 5]));\nassert!(vec.starts_with(&[1, 2]));\n\n\u9006\u306b\u3001\u6307\u5b9a\u3057\u305f\u8981\u7d20\u3067\u7d42\u308f\u308b\u304b\u3092\u8abf\u3079\u308b\u306a\u3089\u3053\u3046\u3002\nassert!(vec.ends_with(&[4, 6]));\nassert!(!vec.ends_with[&[2, 4]]);\n\n\n\u30d9\u30af\u30bf\u30fc\u3092\u64cd\u4f5c\u3059\u308b\n\u30d9\u30af\u30bf\u30fc\u306e\u8981\u7d20\u3092\u4ea4\u63db\u3059\u308b\u3002\nvec.swap(0, 4);\nassert!(vec == [2, 5, 7, 0, 3, 4, 6]);\n\n\u30d9\u30af\u30bf\u30fc\u3092\u53cd\u8ee2\u3059\u308b\u3002\nvec.reverse();\nassert!(vec == [6, 4, 3, 0, 7, 5, 2]);\n\n\u30d9\u30af\u30bf\u30fc\u3092\u30bd\u30fc\u30c8\u3059\u308b\u3002\nvec.sort();\nassert!(vec == [0, 2, 3, 4, 5, 6, 7]);\n\n\u30d9\u30af\u30bf\u30fc\u3092\u30d0\u30a4\u30ca\u30ea\u30b5\u30fc\u30c1\u3059\u308b\u3002\nassert!(vec.binary_search(&4) == Ok(3usize));\n\n\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u306e\u8981\u7d20\u3092\u30d0\u30a4\u30ca\u30ea\u30b5\u30fc\u30c1\u3002\n(Rust >= 1.10.0)\nlet mut vec_key: Vec<(i32, i32)> = vec![(0,0), (1,1), (2,2),\n                                        (0,3), (1,4), (2,5),\n                                        (0,6), (1,7), (2,8)];\nassert!(vec_key.binary_search_by_key(&7, |&(a,b)| b) == Ok(7usize));\n\n\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u306e\u8981\u7d20\u3067\u30bd\u30fc\u30c8\u3002\nvec_key.sort_by_key(|&(a,b)| a);\nassert!(vec_key == vec![(0,0), (0,3), (0,6),\n                        (1,1), (1,4), (1,7),\n                        (2,2), (2,5), (2,8)]);\n\n\u4ee5\u4e0a\u304c\u30d9\u30af\u30bf\u30fc\u3067\u5229\u7528\u51fa\u6765\u308b\u307b\u307c\u5168\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u3060\u3002\n\u6319\u3052\u304d\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u3082\u3042\u308b\u304c\u3001\u4e00\u822c\u7684\u306a\u7528\u9014\u3068\u3057\u3066\u306f\u5341\u5206\u3060\u308d\u3046\u3002\u307e\u305f\u3001\u53c2\u7167\u3092\u5f97\u308b\u30e1\u30bd\u30c3\u30c9\u306f_mut\u3092\u4ed8\u3051\u308b\u3068\u5909\u66f4\u53ef\u80fd\u306a\u53c2\u7167\u3092\u5f97\u3089\u308c\u308b\u3082\u306e\u3082\u3042\u308b\u3002\n\u53c2\u8003:\nRust Standard Library API Reference - std::vec::Vec\n\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5236\u3059\u308b\u8005\u306f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5236\u3059\u308b\u3002\n\nRust\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u3064\u3044\u3066\u3001\u65e5\u672c\u8a9e\u3067\u8a73\u3057\u304f\u66f8\u3044\u3066\u3044\u308b\u60c5\u5831\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u8abf\u3079\u307e\u3057\u305f\u3002\n\u5168\u90e8\u3060\u3068\u30ad\u30ea\u304c\u306a\u3044\u306e\u3067\u3001\u4eca\u56de\u306f\u30d9\u30af\u30bf\u30fc\u306e\u307f\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\u305d\u306e\u3046\u3061\u5225\u306e\u3084\u3064\u3082\u307e\u3068\u3081\u307e\u3059\u3002\n\n## \u30d9\u30af\u30bf\u30fc\u306e\u9577\u3055\u3068\u30b5\u30a4\u30ba\n\n\u307e\u305a\u30d9\u30af\u30bf\u30fc\u3092\u4f5c\u308b\u3002\n\u4f5c\u308a\u65b9\u306b\u306f2\u901a\u308a\u3042\u3063\u3066\u3001new\u3067\u4f5c\u308b\u65b9\u6cd5\u3068\u3001with_capacity\u3067\u521d\u671f\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u3066\u4f5c\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3002\n\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u305f\u65b9\u306f\u3001\u9577\u3055\u304c\u6307\u5b9a\u30b5\u30a4\u30ba\u4ee5\u5185\u306a\u3089\u9818\u57df\u306e\u518d\u78ba\u4fdd(reallocate)\u304c\u8d77\u304d\u306a\u3044\u3002\n\n```rust\nlet mut vec: Vec<i32> = Vec::new();\nlet mut vec_cap: Vec<i32> = Vec::with_capacity(100);\nfor i in 0..10 {\n  vec.push(i);\n  vec_cap.push(i);\n}\nassert!(vec == [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\nassert!(vec.len() == 10);\nassert!(vec_cap.len() == 10);\nassert!(vec.capacity() == 16);\nassert!(vec_cap.capacity() == 100);\n```\n\n## \u30d9\u30af\u30bf\u30fc\u306e\u30b5\u30a4\u30ba\u3092\u7e2e\u5c0f\n\n\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u524a\u6e1b\u306e\u305f\u3081\u3001\u30d9\u30af\u30bf\u30fc\u306e\u30b5\u30a4\u30ba\u3092\u73fe\u5728\u4f7f\u308f\u308c\u3066\u3044\u308b\u5927\u304d\u3055\u307e\u3067\u7e2e\u5c0f\u3059\u308b\u3002\n\u3053\u306e\u5f8c\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3068\u9818\u57df\u306e\u518d\u78ba\u4fdd\u304c\u8d77\u304d\u308b\u3002\n\n```rust\nvec_cap.shrink_to_fit();\nassert!(vec_cap.capacity() == 10);\n```\n\n## \u30d9\u30af\u30bf\u30fc\u306e\u8981\u7d20\u3092\u524a\u9664\n\n\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u65b9\u6cd5\u306f\u8907\u6570\u3042\u308b\u3002\n\u4e00\u822c\u7684\u306a\u524a\u9664\u6cd5\u3067\u3042\u308b\u3001\u6307\u5b9a\u4f4d\u7f6e\u306e\u8981\u7d20\u3092\u524a\u9664\u3057\u3066\u304b\u3089\u6b8b\u308a\u306e\u8981\u7d20\u3092\u5de6\u306b\u30b7\u30d5\u30c8\u3059\u308b\u65b9\u5f0f\u306fremove\u3060\u3002\n\n```rust\nassert!(vec.remove(3) == 3);\nassert!(vec.remove(6) == 7);\nassert!(vec == [0, 1, 2, 4, 5, 6, 8, 9]);\n```\n\n\u307e\u305f\u3001\u6307\u5b9a\u4f4d\u7f6e\u306e\u8981\u7d20\u3092\u524a\u9664\u3057\u3066\u304b\u3089\u4e00\u756a\u6700\u5f8c\u306e\u8981\u7d20\u3067\u8a70\u3081\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3002\n\u30a2\u30af\u30bb\u30b9\u3059\u308b\u56de\u6570\u304c\u5c11\u306a\u3044\u5206\u3001\u4e0a\u8a18\u3088\u308a\u306f\u3053\u3063\u3061\u306e\u65b9\u304c\u901f\u3044\u3002\u8a08\u7b97\u91cf\u306fO(1)\u3002\n\n```rust\nassert!(vec.swap_remove(2) == 2);\nassert!(vec == [0, 1, 9, 4, 5, 6, 8]);\nassert!(vec.swap_remove(2) == 9);\nassert!(vec == [0, 1, 8, 4, 5, 6]);\n```\n\n\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u306b\u5408\u81f4\u3057\u306a\u3044\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3002\n\u3044\u308f\u3086\u308b\u95a2\u6570\u578b\u8a00\u8a9e\u306efilter\u3068\u540c\u3058\u3002\n\n```rust\nvec.retain(|&x| x > 4);\nassert!(vec == [8, 5, 6]);\n```\n\n\u9023\u7d9a\u3059\u308b\u91cd\u8907\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u65b9\u6cd5\u3002\n\u30d9\u30af\u30bf\u30fc\u304c\u30bd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u5168\u3066\u306e\u91cd\u8907\u304c\u524a\u9664\u3055\u308c\u308b\u3002\n\n```rust\nvec = vec![0, 1, 1, 2, 3, 2, 5, 7, 7, 7];\nvec.dedup();\nassert!(vec == [0, 1, 2, 3, 2, 5, 7]);\n```\n\n\u914d\u5217\u3092\u7a7a\u306b\u3059\u308b\u306b\u306fclear\u3092\u5b9f\u884c\u3059\u308c\u3070\u826f\u3044\u3002\n\n```rust\nvec.clear();\nassert!(vec.is_empty());\n```\n\n## \u30d9\u30af\u30bf\u30fc\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\n\n\u30d9\u30af\u30bf\u30fc\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u306f\u8ffd\u52a0\u3059\u308b\u4f4d\u7f6e\u3084\u8981\u7d20\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u3002\n\u307e\u305a\u30d9\u30af\u30bf\u30fc\u306e\u6700\u5f8c\u5c3e\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u3002\n\n```rust\nvec.push(3);\nvec.push(5);\nvec.push(7);\nassert!(vec == [3, 5, 7]);\n```\n\n\u8907\u6570\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\n```rust\nvec.extend_from_slice(&[2, 4, 6]);\nassert!(vec == [3, 5, 7, 2, 4, 6]);\n```\n\n\u4e0a\u306b\u4f3c\u305f\u624b\u6bb5\u3068\u3057\u3066\u3001append\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u3002\n\u305f\u3060\u3057\u8ffd\u52a0\u3057\u305f\u30d9\u30af\u30bf\u30fc\u306f\u7a7a\u306b\u306a\u308b\u3002\u3064\u307e\u308a\u5438\u53ce\u3055\u308c\u308b\u3002\n\n```rust\nlet mut v = vec![1, 2, 3];\nvec.append(&mut v);\nassert!(vec == [3, 5, 7, 2, 4, 6, 1, 2, 3]);\nassert!(v.is_empty());\n```\n\n\u6307\u5b9a\u4f4d\u7f6e\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3046\u3059\u308b\u3002\n\n```rust\nvec.insert(3, 0);\nvec.insert(7, 0);\nassert!(vec == [3, 5, 7, 0, 2, 4, 6, 0, 1, 2, 3]);\n```\n\n## \u30d9\u30af\u30bf\u30fc\u304b\u3089\u8981\u7d20\u3092\u53d6\u5f97\u3059\u308b\n\n\u5358\u7d14\u306a\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4ee5\u5916\u306e\u65b9\u6cd5\u3092\u898b\u3066\u3044\u304f\u3002\n\u4ee5\u4e0b\u3067\u30d9\u30af\u30bf\u30fc\u306e\u5f8c\u308d\u304b\u3089\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3059\u3002\n\n```rust\nassert!(vec.pop() == Some(3));\nassert!(vec == [3, 5, 7, 0, 2, 4, 6, 0, 1, 2]);\nassert!(vec.pop() == Some(2));\nassert!(vec == [3, 5, 7, 0, 2, 4, 6, 0, 1]);\n```\n\n\u307e\u305f\u3001\u6307\u5b9a\u4f4d\u7f6e\u4ee5\u964d\u3092\u5207\u308a\u843d\u3068\u3059\u65b9\u6cd5\u304c\u3042\u308b\u3002\n\n```rust\nassert!(vec.split_off(7) == [0, 1]);\nassert!(vec == [3, 5, 7, 0, 2, 4, 6]);\n```\n\n\u30d9\u30af\u30bf\u30fc\u306e\u5148\u982d\u306e\u8981\u7d20\u306e\u53c2\u7167\u3092\u5f97\u308b\u306b\u306f\u3053\u3046\u3059\u308b\u3002\n\n```rust\nassert!(vec.first() == Some(&3));\nassert!(vec == [3, 5, 7, 0, 2, 4, 6]);\n```\n\n\u540c\u69d8\u306b\u6700\u5f8c\u306e\u8981\u7d20\u306e\u53c2\u7167\u3092\u5f97\u308b\u3053\u3068\u3082\u51fa\u6765\u308b\u3002\n\n```rust\nassert!(vec.last() == Some(&6));\nassert!(vec == [3, 5, 7, 0, 2, 4, 6]);\n```\n\nCons\u30bb\u30eb\u306e\u3088\u3046\u306b\u3001\u30d9\u30af\u30bf\u30fc\u306e\u5148\u982d\u3068\u6b8b\u308a\u306e\u8981\u7d20\u3092slice\u306e\u5f62\u3067\u53d6\u5f97\u3059\u308b\u3002\n\n```rust\nv = vec![2, 4, 6, 8];\nlet cons = v.split_first().unwrap();\nassert!(cons.0 == &2);\nassert!(cons.1 == &[4, 6, 8]);\nassert!(v == [2, 4, 6, 8]);\n```\n\n\u30d9\u30af\u30bf\u30fc\u306e\u8981\u7d20\u3092\u5b89\u5168\u306b\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\u3053\u306e\u65b9\u6cd5\u306a\u3089\u9818\u57df\u5916\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u3092\u672a\u7136\u306b\u9632\u3050\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n\n```rust\nassert!(vec.get(3) == Some(&0));\nassert!(vec.get(10) == None); // \u9818\u57df\u5916\u3092\u53c2\u7167\u3057\u3088\u3046\u3068\u3059\u308b\u3068None\u304c\u8fd4\u308b\nassert!(vec == [3, 5, 7, 0, 2, 4, 6]);\n```\n\n\u30d9\u30af\u30bf\u30fc\u3092\u6307\u5b9a\u3057\u305f\u6570\u306e\u8981\u7d20\u306e\u304b\u305f\u307e\u308a\u3068\u3057\u3066\u53d6\u308a\u51fa\u3059\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\u4f59\u3063\u305f\u8981\u7d20\u306e\u304b\u305f\u307e\u308a\u306f\u6307\u5b9a\u3057\u305f\u9577\u3055\u3068\u306f\u306a\u3089\u306a\u3044\u3002\n\n```rust\nfor chunk in vec.chunks(3) {\n\tprintln!(\"{:?}\", chunk);\n}\n\n// \u51fa\u529b\n// [3, 5, 7]\n// [0, 2, 4]\n// [6]\n```\n\n\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u3067\u5206\u5272\u3057\u3066\u3001\u30bf\u30d7\u30eb\u3067\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3002\n\n```rust\nassert!(vec.split_at(3) == (&[3, 5, 7], &[0, 2, 4, 6]));\nassert!(vec == [3, 5, 7, 0, 2, 4, 6]);\n```\n\n\u6761\u4ef6\u306b\u5408\u81f4\u3059\u308b\u8981\u7d20\u3092\u533a\u5207\u308a\u3068\u3057\u3066\u5206\u5272\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3002\n\n```rust\nfor group in vec.split(|x| *x == 0) {\n\tprintln!(\"{:?}\", group);\n}\n\n// \u51fa\u529b\n// [3, 5, 7]\n// [2, 4, 6]\n```\n\n\u4e0a\u8a18\u306esplit\u306b\u5206\u5272\u6570\u306e\u5236\u9650\u3092\u8a2d\u3051\u305f\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308b\u3002\n\n```rust\nfor group in vec.splitn(3, |x| *x > 3) {\n\tprintln!(\"{:?}\", group);\n}\n\n// \u51fa\u529b\n// [3]\n// []\n// [0, 2, 4, 6]\n```\n\n\u4ee5\u4e0b\u306f\u305d\u308c\u3092\u30d9\u30af\u30bf\u30fc\u306e\u5f8c\u308d\u304b\u3089\u5b9f\u884c\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3002\n\n```rust\nfor group in vec.rsplitn(3, |x| *x > 3) {\n\tprintln!(\"{:?}\", group);\n}\n\n// \u51fa\u529b\n// []\n// []\n// [3, 5, 7, 0, 2]\n```\n\n## \u30d9\u30af\u30bf\u30fc\u306b\u8981\u7d20\u304c\u542b\u307e\u308c\u308b\u304b\u8abf\u3079\u308b\n\n\u30d9\u30af\u30bf\u30fc\u306b\u6307\u5b9a\u8981\u7d20\u304c\u542b\u307e\u308c\u308b\u304b\u8abf\u3079\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\n```rust\nassert!(vec.contains(&2));\nassert!(!vec.contains(&10));\n```\n\n\u30d9\u30af\u30bf\u30fc\u304c\u6307\u5b9a\u3057\u305f\u8981\u7d20\u3067\u59cb\u307e\u308b\u304b\u3092\u8abf\u3079\u305f\u3044\u5834\u5408\u306f\u3053\u3046\u3002\n\n```rust\nassert!(vec.starts_with(&[3, 5]));\nassert!(vec.starts_with(&[1, 2]));\n```\n\n\u9006\u306b\u3001\u6307\u5b9a\u3057\u305f\u8981\u7d20\u3067\u7d42\u308f\u308b\u304b\u3092\u8abf\u3079\u308b\u306a\u3089\u3053\u3046\u3002\n\n```rust\nassert!(vec.ends_with(&[4, 6]));\nassert!(!vec.ends_with[&[2, 4]]);\n```\n\n## \u30d9\u30af\u30bf\u30fc\u3092\u64cd\u4f5c\u3059\u308b\n\n\u30d9\u30af\u30bf\u30fc\u306e\u8981\u7d20\u3092\u4ea4\u63db\u3059\u308b\u3002\n\n```rust\nvec.swap(0, 4);\nassert!(vec == [2, 5, 7, 0, 3, 4, 6]);\n```\n\n\u30d9\u30af\u30bf\u30fc\u3092\u53cd\u8ee2\u3059\u308b\u3002\n\n```rust\nvec.reverse();\nassert!(vec == [6, 4, 3, 0, 7, 5, 2]);\n```\n\n\u30d9\u30af\u30bf\u30fc\u3092\u30bd\u30fc\u30c8\u3059\u308b\u3002\n\n```rust\nvec.sort();\nassert!(vec == [0, 2, 3, 4, 5, 6, 7]);\n```\n\n\u30d9\u30af\u30bf\u30fc\u3092\u30d0\u30a4\u30ca\u30ea\u30b5\u30fc\u30c1\u3059\u308b\u3002\n\n```rust\nassert!(vec.binary_search(&4) == Ok(3usize));\n```\n\n\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u306e\u8981\u7d20\u3092\u30d0\u30a4\u30ca\u30ea\u30b5\u30fc\u30c1\u3002\n(Rust >= 1.10.0)\n\n```rust\nlet mut vec_key: Vec<(i32, i32)> = vec![(0,0), (1,1), (2,2),\n                                        (0,3), (1,4), (2,5),\n                                        (0,6), (1,7), (2,8)];\nassert!(vec_key.binary_search_by_key(&7, |&(a,b)| b) == Ok(7usize));\n```\n\n\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u306e\u8981\u7d20\u3067\u30bd\u30fc\u30c8\u3002\n\n```rust\nvec_key.sort_by_key(|&(a,b)| a);\nassert!(vec_key == vec![(0,0), (0,3), (0,6),\n                        (1,1), (1,4), (1,7),\n                        (2,2), (2,5), (2,8)]);\n```\n\n\u4ee5\u4e0a\u304c\u30d9\u30af\u30bf\u30fc\u3067\u5229\u7528\u51fa\u6765\u308b\u307b\u307c\u5168\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u3060\u3002\n\u6319\u3052\u304d\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u3082\u3042\u308b\u304c\u3001\u4e00\u822c\u7684\u306a\u7528\u9014\u3068\u3057\u3066\u306f\u5341\u5206\u3060\u308d\u3046\u3002\u307e\u305f\u3001\u53c2\u7167\u3092\u5f97\u308b\u30e1\u30bd\u30c3\u30c9\u306f_mut\u3092\u4ed8\u3051\u308b\u3068\u5909\u66f4\u53ef\u80fd\u306a\u53c2\u7167\u3092\u5f97\u3089\u308c\u308b\u3082\u306e\u3082\u3042\u308b\u3002\n\n\u53c2\u8003:\n[Rust Standard Library API Reference - std::vec::Vec](https://doc.rust-lang.org/std/vec/struct.Vec.html)\n", "tags": ["rust"]}