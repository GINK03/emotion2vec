{"tags": ["iOS", "Crashlytics"], "context": " More than 1 year has passed since last update.\n\n\u56f0\u3063\u305f\u3053\u3068\ncocoapods\u3067Crashlytics\u3092\u5c0e\u5165\u3057\u3066\u3044\u305f\u3089\u3001\u3053\u3093\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u30d3\u30eb\u30c9\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u3002\nUndefined symbols for architecture x86_64:\n  \"_CLSMachOFormatVersion\", referenced from:\n      _CLSBinaryImageRecordMainExecutable in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOGetEncrypted\", referenced from:\n      ___CLSBinaryImageFillInImageDetails_block_invoke in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOGetLinkedSDKVersion\", referenced from:\n      ___CLSBinaryImageFillInImageDetails_block_invoke in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOGetMinimumOSVersion\", referenced from:\n      ___CLSBinaryImageFillInImageDetails_block_invoke in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOGetUUID\", referenced from:\n      ___CLSBinaryImageFillInImageDetails_block_invoke in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOSliceEnumerateLoadCommands\", referenced from:\n      _CLSBinaryImageFillInImageDetails in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOSliceGetArchitectureName\", referenced from:\n      _CLSBinaryImageRecordMainExecutable in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOSliceGetCurrent\", referenced from:\n      _CLSBinaryImageRecordMainExecutable in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOSliceGetExecutablePath\", referenced from:\n      ___CLSBinaryImageChanged_block_invoke in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOSliceGetUnwindInformation\", referenced from:\n      _CLSBinaryImageFillInImageDetails in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOSliceWithHeader\", referenced from:\n      _CLSBinaryImageFindImageForUUID in Crashlytics(CLSBinaryImage.o)\n      _CLSBinaryImageChanged in Crashlytics(CLSBinaryImage.o)\n  \"_FABApplicationGetBundleIdentifier\", referenced from:\n      -[CLSFileManager pathNamespace] in Crashlytics(CLSFileManager.o)\n      -[CLSCrashReportingController bundleIdentifier] in Crashlytics(CLSCrashReportingController.o)\n      -[CLSBetaController appBundleIdentifier] in Crashlytics(CLSBetaController.o)\n      +[CLSAnalyticsMetadataController bundleIdentifier] in Crashlytics(CLSAnalyticsMetadataController.o)\n      ___CLSContextInitialize_block_invoke30 in Crashlytics(CLSContext.o)\n  \"_FABApplicationGetBundleVersion\", referenced from:\n      -[CLSBetaController appBuildVersion] in Crashlytics(CLSBetaController.o)\n      +[CLSAnalyticsMetadataController bundleVersion] in Crashlytics(CLSAnalyticsMetadataController.o)\n      ___CLSContextInitialize_block_invoke30 in Crashlytics(CLSContext.o)\n  \"_FABApplicationGetName\", referenced from:\n      -[CLSBetaUpdate promptMessage] in Crashlytics(CLSBetaUpdate.o)\n  \"_FABApplicationGetShortBundleVersion\", referenced from:\n      -[CLSBetaController appDisplayVersion] in Crashlytics(CLSBetaController.o)\n      +[CLSAnalyticsMetadataController bundleShortVersion] in Crashlytics(CLSAnalyticsMetadataController.o)\n      ___CLSContextInitialize_block_invoke30 in Crashlytics(CLSContext.o)\n  \"_FABApplicationInstallationSource\", referenced from:\n      +[CLSBetaController isBetaSupported] in Crashlytics(CLSBetaController.o)\n      -[CLSBetaController appInstallationSource] in Crashlytics(CLSBetaController.o)\n  \"_FABApplicationShouldReportDeviceIdentifiers\", referenced from:\n      +[CLSAnalyticsMetadataController identifierForAdvertising] in Crashlytics(CLSAnalyticsMetadataController.o)\n  \"_FABBuiltinCertificates\", referenced from:\n      +[CLSBetaController pinnnedCertificates] in Crashlytics(CLSBetaController.o)\n      +[CLSNetworkClient pinner] in Crashlytics(CLSNetworkClient.o)\n  \"_FABEnumerateByteRangesOfNSDataUsingBlock\", referenced from:\n      -[CLSPackageReportOperation compressFile:] in Crashlytics(CLSPackageReportOperation.o)\n  \"_FABHostGetOSVersion\", referenced from:\n      _CLSHostGetNormalizedOSVersion in Crashlytics(CLSHost.o)\n  \"_FABHostModelInfo\", referenced from:\n      ___20-[Crashlytics start]_block_invoke in Crashlytics(Crashlytics.o)\n      +[CLSAnalyticsMetadataController hostModel] in Crashlytics(CLSAnalyticsMetadataController.o)\n      +[CLSAnalyticsMetadataController hostMachine] in Crashlytics(CLSAnalyticsMetadataController.o)\n      _CLSHostRecord in Crashlytics(CLSHost.o)\n  \"_FABHostOSBuildVersion\", referenced from:\n      ___20-[Crashlytics start]_block_invoke in Crashlytics(Crashlytics.o)\n      +[CLSAnalyticsMetadataController hostOSVersion] in Crashlytics(CLSAnalyticsMetadataController.o)\n      _CLSHostRecord in Crashlytics(CLSHost.o)\n  \"_FABHostOSDisplayVersion\", referenced from:\n      ___20-[Crashlytics start]_block_invoke in Crashlytics(Crashlytics.o)\n      +[CLSAnalyticsMetadataController hostOSVersionName] in Crashlytics(CLSAnalyticsMetadataController.o)\n      _CLSHostRecord in Crashlytics(CLSHost.o)\n  \"_FABNetworkMaximumRetryCount\", referenced from:\n      ___51-[CLSBetaController loadUpdateWithCompletionBlock:]_block_invoke in Crashlytics(CLSBetaController.o)\n      -[CLSAnalyticsNetworkingClient transmitLogFilesAtURLs:toURL:withAPIKey:completionHandler:] in Crashlytics(CLSAnalyticsNetworkingClient.o)\n  \"_FABSettingsAvailableNotification\", referenced from:\n      -[CLSAnalyticsController initWithSessionIdentifier:sessionTimestamp:analyticsRootDirectoryWithURL:betaToken:identifierGenerator:timestampGenerator:metadataController:networkingClient:] in Crashlytics(CLSAnalyticsController.o)\n      -[CLSBetaController start] in Crashlytics(CLSBetaController.o)\n  \"_OBJC_CLASS_$_CLSURLSession\", referenced from:\n      objc-class-ref in Crashlytics(CLSNetworkClient.o)\n  \"_OBJC_CLASS_$_CLSURLSessionConfiguration\", referenced from:\n      objc-class-ref in Crashlytics(CLSNetworkClient.o)\n  \"_OBJC_CLASS_$_CLSUserDefaults\", referenced from:\n      objc-class-ref in Crashlytics(CLSAnalyticsController.o)\n  \"_OBJC_CLASS_$_FABCertificatePinner\", referenced from:\n      objc-class-ref in Crashlytics(CLSNetworkClient.o)\n  \"_OBJC_CLASS_$_FABMultipartMimeStreamEncoder\", referenced from:\n      objc-class-ref in Crashlytics(CLSPackageReportOperation.o)\n      objc-class-ref in Crashlytics(CLSReportsController.o)\n      objc-class-ref in Crashlytics(CLSAnalyticsNetworkingClient.o)\n  \"_OBJC_CLASS_$_FABNetworkClient\", referenced from:\n      objc-class-ref in Crashlytics(CLSBetaController.o)\n      objc-class-ref in Crashlytics(CLSAnalyticsNetworkingClient.o)\n  \"_OBJC_CLASS_$_FABNetworkResponseHandler\", referenced from:\n      objc-class-ref in Crashlytics(CLSNetworkClient.o)\n  \"_OBJC_CLASS_$_FABURLBuilder\", referenced from:\n      objc-class-ref in Crashlytics(CLSReportsController.o)\n      objc-class-ref in Crashlytics(CLSBetaController.o)\n  \"_OBJC_CLASS_$_Fabric\", referenced from:\n      objc-class-ref in Crashlytics(Crashlytics.o)\n      objc-class-ref in Crashlytics(CLSAnalyticsController.o)\n      objc-class-ref in Crashlytics(CLSCrashReportingController.o)\n      objc-class-ref in Crashlytics(CLSReportsController.o)\n      objc-class-ref in Crashlytics(CLSEventLogFile.o)\n      objc-class-ref in Crashlytics(CLSBetaController.o)\n      objc-class-ref in Crashlytics(CLSAnalyticsMetadataController.o)\n      ...\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n\n\n\u554f\u984c\u70b9\u3068\u89e3\u6c7a\u7b56\nPodfile\u306bpod 'Crashlytics'\u3057\u304b\u66f8\u3044\u3066\u3044\u306a\u304b\u3063\u305f\u3053\u3068\u304c\u539f\u56e0\u3067\u3057\u305f\u3002 \npod 'Fabric'\u3092\u8ffd\u52a0\u3057\u3066pod install\u3057\u306a\u304a\u3057\u305f\u3089\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\u3061\u3083\u3093\u3068\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u8aad\u307f\u307e\u3057\u3087\u3046\u3002 \nManage Fabric with CocoaPods \u2014 Fabric iOS latest documentation\n\n\u53c2\u8003\nError upgrading from crashlytics on iOS - Fabric / Crashlytics - Twitter Developers\n# \u56f0\u3063\u305f\u3053\u3068\n\ncocoapods\u3067Crashlytics\u3092\u5c0e\u5165\u3057\u3066\u3044\u305f\u3089\u3001\u3053\u3093\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u30d3\u30eb\u30c9\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u3002\n\n```\nUndefined symbols for architecture x86_64:\n  \"_CLSMachOFormatVersion\", referenced from:\n      _CLSBinaryImageRecordMainExecutable in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOGetEncrypted\", referenced from:\n      ___CLSBinaryImageFillInImageDetails_block_invoke in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOGetLinkedSDKVersion\", referenced from:\n      ___CLSBinaryImageFillInImageDetails_block_invoke in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOGetMinimumOSVersion\", referenced from:\n      ___CLSBinaryImageFillInImageDetails_block_invoke in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOGetUUID\", referenced from:\n      ___CLSBinaryImageFillInImageDetails_block_invoke in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOSliceEnumerateLoadCommands\", referenced from:\n      _CLSBinaryImageFillInImageDetails in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOSliceGetArchitectureName\", referenced from:\n      _CLSBinaryImageRecordMainExecutable in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOSliceGetCurrent\", referenced from:\n      _CLSBinaryImageRecordMainExecutable in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOSliceGetExecutablePath\", referenced from:\n      ___CLSBinaryImageChanged_block_invoke in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOSliceGetUnwindInformation\", referenced from:\n      _CLSBinaryImageFillInImageDetails in Crashlytics(CLSBinaryImage.o)\n  \"_CLSMachOSliceWithHeader\", referenced from:\n      _CLSBinaryImageFindImageForUUID in Crashlytics(CLSBinaryImage.o)\n      _CLSBinaryImageChanged in Crashlytics(CLSBinaryImage.o)\n  \"_FABApplicationGetBundleIdentifier\", referenced from:\n      -[CLSFileManager pathNamespace] in Crashlytics(CLSFileManager.o)\n      -[CLSCrashReportingController bundleIdentifier] in Crashlytics(CLSCrashReportingController.o)\n      -[CLSBetaController appBundleIdentifier] in Crashlytics(CLSBetaController.o)\n      +[CLSAnalyticsMetadataController bundleIdentifier] in Crashlytics(CLSAnalyticsMetadataController.o)\n      ___CLSContextInitialize_block_invoke30 in Crashlytics(CLSContext.o)\n  \"_FABApplicationGetBundleVersion\", referenced from:\n      -[CLSBetaController appBuildVersion] in Crashlytics(CLSBetaController.o)\n      +[CLSAnalyticsMetadataController bundleVersion] in Crashlytics(CLSAnalyticsMetadataController.o)\n      ___CLSContextInitialize_block_invoke30 in Crashlytics(CLSContext.o)\n  \"_FABApplicationGetName\", referenced from:\n      -[CLSBetaUpdate promptMessage] in Crashlytics(CLSBetaUpdate.o)\n  \"_FABApplicationGetShortBundleVersion\", referenced from:\n      -[CLSBetaController appDisplayVersion] in Crashlytics(CLSBetaController.o)\n      +[CLSAnalyticsMetadataController bundleShortVersion] in Crashlytics(CLSAnalyticsMetadataController.o)\n      ___CLSContextInitialize_block_invoke30 in Crashlytics(CLSContext.o)\n  \"_FABApplicationInstallationSource\", referenced from:\n      +[CLSBetaController isBetaSupported] in Crashlytics(CLSBetaController.o)\n      -[CLSBetaController appInstallationSource] in Crashlytics(CLSBetaController.o)\n  \"_FABApplicationShouldReportDeviceIdentifiers\", referenced from:\n      +[CLSAnalyticsMetadataController identifierForAdvertising] in Crashlytics(CLSAnalyticsMetadataController.o)\n  \"_FABBuiltinCertificates\", referenced from:\n      +[CLSBetaController pinnnedCertificates] in Crashlytics(CLSBetaController.o)\n      +[CLSNetworkClient pinner] in Crashlytics(CLSNetworkClient.o)\n  \"_FABEnumerateByteRangesOfNSDataUsingBlock\", referenced from:\n      -[CLSPackageReportOperation compressFile:] in Crashlytics(CLSPackageReportOperation.o)\n  \"_FABHostGetOSVersion\", referenced from:\n      _CLSHostGetNormalizedOSVersion in Crashlytics(CLSHost.o)\n  \"_FABHostModelInfo\", referenced from:\n      ___20-[Crashlytics start]_block_invoke in Crashlytics(Crashlytics.o)\n      +[CLSAnalyticsMetadataController hostModel] in Crashlytics(CLSAnalyticsMetadataController.o)\n      +[CLSAnalyticsMetadataController hostMachine] in Crashlytics(CLSAnalyticsMetadataController.o)\n      _CLSHostRecord in Crashlytics(CLSHost.o)\n  \"_FABHostOSBuildVersion\", referenced from:\n      ___20-[Crashlytics start]_block_invoke in Crashlytics(Crashlytics.o)\n      +[CLSAnalyticsMetadataController hostOSVersion] in Crashlytics(CLSAnalyticsMetadataController.o)\n      _CLSHostRecord in Crashlytics(CLSHost.o)\n  \"_FABHostOSDisplayVersion\", referenced from:\n      ___20-[Crashlytics start]_block_invoke in Crashlytics(Crashlytics.o)\n      +[CLSAnalyticsMetadataController hostOSVersionName] in Crashlytics(CLSAnalyticsMetadataController.o)\n      _CLSHostRecord in Crashlytics(CLSHost.o)\n  \"_FABNetworkMaximumRetryCount\", referenced from:\n      ___51-[CLSBetaController loadUpdateWithCompletionBlock:]_block_invoke in Crashlytics(CLSBetaController.o)\n      -[CLSAnalyticsNetworkingClient transmitLogFilesAtURLs:toURL:withAPIKey:completionHandler:] in Crashlytics(CLSAnalyticsNetworkingClient.o)\n  \"_FABSettingsAvailableNotification\", referenced from:\n      -[CLSAnalyticsController initWithSessionIdentifier:sessionTimestamp:analyticsRootDirectoryWithURL:betaToken:identifierGenerator:timestampGenerator:metadataController:networkingClient:] in Crashlytics(CLSAnalyticsController.o)\n      -[CLSBetaController start] in Crashlytics(CLSBetaController.o)\n  \"_OBJC_CLASS_$_CLSURLSession\", referenced from:\n      objc-class-ref in Crashlytics(CLSNetworkClient.o)\n  \"_OBJC_CLASS_$_CLSURLSessionConfiguration\", referenced from:\n      objc-class-ref in Crashlytics(CLSNetworkClient.o)\n  \"_OBJC_CLASS_$_CLSUserDefaults\", referenced from:\n      objc-class-ref in Crashlytics(CLSAnalyticsController.o)\n  \"_OBJC_CLASS_$_FABCertificatePinner\", referenced from:\n      objc-class-ref in Crashlytics(CLSNetworkClient.o)\n  \"_OBJC_CLASS_$_FABMultipartMimeStreamEncoder\", referenced from:\n      objc-class-ref in Crashlytics(CLSPackageReportOperation.o)\n      objc-class-ref in Crashlytics(CLSReportsController.o)\n      objc-class-ref in Crashlytics(CLSAnalyticsNetworkingClient.o)\n  \"_OBJC_CLASS_$_FABNetworkClient\", referenced from:\n      objc-class-ref in Crashlytics(CLSBetaController.o)\n      objc-class-ref in Crashlytics(CLSAnalyticsNetworkingClient.o)\n  \"_OBJC_CLASS_$_FABNetworkResponseHandler\", referenced from:\n      objc-class-ref in Crashlytics(CLSNetworkClient.o)\n  \"_OBJC_CLASS_$_FABURLBuilder\", referenced from:\n      objc-class-ref in Crashlytics(CLSReportsController.o)\n      objc-class-ref in Crashlytics(CLSBetaController.o)\n  \"_OBJC_CLASS_$_Fabric\", referenced from:\n      objc-class-ref in Crashlytics(Crashlytics.o)\n      objc-class-ref in Crashlytics(CLSAnalyticsController.o)\n      objc-class-ref in Crashlytics(CLSCrashReportingController.o)\n      objc-class-ref in Crashlytics(CLSReportsController.o)\n      objc-class-ref in Crashlytics(CLSEventLogFile.o)\n      objc-class-ref in Crashlytics(CLSBetaController.o)\n      objc-class-ref in Crashlytics(CLSAnalyticsMetadataController.o)\n      ...\nld: symbol(s) not found for architecture x86_64\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\n```\n## \u554f\u984c\u70b9\u3068\u89e3\u6c7a\u7b56\n\nPodfile\u306b```pod 'Crashlytics'```\u3057\u304b\u66f8\u3044\u3066\u3044\u306a\u304b\u3063\u305f\u3053\u3068\u304c\u539f\u56e0\u3067\u3057\u305f\u3002 \n```pod 'Fabric'```\u3092\u8ffd\u52a0\u3057\u3066```pod install```\u3057\u306a\u304a\u3057\u305f\u3089\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\n\u3061\u3083\u3093\u3068\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u8aad\u307f\u307e\u3057\u3087\u3046\u3002 \n[Manage Fabric with CocoaPods \u2014 Fabric iOS latest documentation](https://docs.fabric.io/ios/fabric/cocoapods.html?highlight=cocoapods \"Manage Fabric with CocoaPods \u2014 Fabric iOS latest documentation\")\n\n## \u53c2\u8003\n\n[Error upgrading from crashlytics on iOS - Fabric / Crashlytics - Twitter Developers](https://twittercommunity.com/t/error-upgrading-from-crashlytics-on-ios/36196/13 \"Error upgrading from crashlytics on iOS - Fabric / Crashlytics - Twitter Developers\")\n"}