{"context": "\n\ntoc\n\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u30e1\u30e2\u3063\u3068\u304f\n- .emacs\n- .vimrc\n- .tmux.conf\n- .screenrc\n- .zshrc\n- sublime\n\n\n.emacs\n(global-set-key \"\\C-h\" 'delete-backward-char)\n\n\n.vimrc\n\" -------------------------------\n\" NeoBundle\n\" -------------------------------\nif has('vim_starting')\n  if &compatible\n    set nocompatible\n  endif\n\n  set runtimepath+=~/.vim/bundle/neobundle.vim/\nendif\n\ncall neobundle#begin(expand('~/.vim/bundle'))\n\n\n\" \u9759\u7684\u89e3\u6790\nNeoBundle 'scrooloose/syntastic'\n\n\" \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u53c2\u7167\nNeoBundle 'thinca/vim-ref'\nNeoBundle 'yuku-t/vim-ref-ri'\n\n\" \u81ea\u52d5\u3067\u9589\u3058\u308b\nNeoBundle 'tpope/vim-endwise'\n\"powerline\"\nNeoBundle 'Lokaltog/vim-powerline'\n\nNeoBundleCheck\n\n\" \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30c4\u30ea\u30fc\u8868\u793a\nNeoBundle 'scrooloose/nerdtree'\n\n\" Rails\u5411\u3051\u306e\u30b3\u30de\u30f3\u30c9\u3092\u63d0\u4f9b\u3059\u308b\nNeoBundle 'tpope/vim-rails'\n\n\" \u30b3\u30e1\u30f3\u30c8ON/OFF\u3092\u624b\u8efd\u306b\u5b9f\u884c\nNeoBundle 'tomtom/tcomment_vim'\n\n\" \u30b7\u30f3\u30b0\u30eb\u30af\u30aa\u30fc\u30c8\u3068\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u306e\u5165\u308c\u66ff\u3048\u7b49\nNeoBundle 'tpope/vim-surround'\n\n\"\u30ab\u30e9\u30fc\u30b9\u30ad\u30fc\u30de\nsyntax on\ncolorscheme molokai\nset t_Co=256\n\n\" \u30a4\u30f3\u30c7\u30f3\u30c8\u306b\u8272\u3092\u4ed8\u3051\u3066\u898b\u3084\u3059\u304f\u3059\u308b\nNeoBundle 'nathanaelkane/vim-indent-guides'\n\n\" vim\u3092\u7acb\u3061\u4e0a\u3052\u305f\u3068\u304d\u306b\u3001\u81ea\u52d5\u7684\u306bvim-indent-guides\u3092\u30aa\u30f3\u306b\u3059\u308b\nlet g:indent_guides_enable_on_vim_startup = 1\nlet g:indent_guides_guide_size=2\n\n\n\" \u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u8272\u3065\u3051\u3057\u3066\u304f\u308c\u308b\nNeoBundle 'vim-scripts/AnsiEsc.vim'\nNeoBundle 'kchmck/vim-coffee-script'\n\n\" \u884c\u672b\u306e\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u3092\u53ef\u8996\u5316\nNeoBundle 'bronson/vim-trailing-whitespace'\n\n\"paste\nNeoBundle 'ConradIrwin/vim-bracketed-paste'\ncall neobundle#end()\n\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n\" --------------------------------\n\" rubocop\n\" --------------------------------\n\" syntastic_mode_map\u3092active\u306b\u3059\u308b\u3068\u30d0\u30c3\u30d5\u30a1\u4fdd\u5b58\u6642\u306bsyntastic\u304c\u8d70\u308b\n\" active_filetypes\u306b\u3001\u4fdd\u5b58\u6642\u306bsyntastic\u3092\u8d70\u3089\u305b\u308b\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u3092\u6307\u5b9a\u3059\u308b\nlet g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': ['ruby'] }\nlet g:syntastic_ruby_checkers = ['rubocop']\n\n\" --------------------------------\n\" \u57fa\u672c\u8a2d\u5b9a\n\" --------------------------------\n\" vim\u5185\u90e8\u3067\u4f7f\u308f\u308c\u308b\u6587\u5b57\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092utf-8\u306b\u8a2d\u5b9a\u3059\u308b\nset encoding=utf-8\n\n\" \u60f3\u5b9a\u3055\u308c\u308b\u6539\u884c\u30b3\u30fc\u30c9\u306e\u6307\u5b9a\u3059\u308b\nset fileformats=unix,dos,mac\n\n\" \u30cf\u30a4\u30e9\u30a4\u30c8\u3092\u6709\u52b9\u5316\u3059\u308b\nsyntax enable\n\n\" \u633f\u5165\u30e2\u30fc\u30c9\u3067TAB\u3092\u633f\u5165\u3059\u308b\u3068\u304d\u3001\u4ee3\u308f\u308a\u306b\u9069\u5207\u306a\u6570\u306e\u7a7a\u767d\u3092\u4f7f\u3046\nset expandtab\n\n\" \u65b0\u3057\u3044\u884c\u3092\u958b\u59cb\u3057\u305f\u3068\u304d\u3001\u65b0\u3057\u3044\u884c\u306e\u30a4\u30f3\u30c7\u30f3\u30c8\u3092\u73fe\u5728\u884c\u3068\u540c\u3058\u306b\u3059\u308b\nset autoindent\n\n\" undo\u60c5\u5831\u3092\u4fdd\u6301\nset undofile\n\nset backspace=indent,eol,start\n\n\"\u30d3\u30fc\u30d7\u97f3\u3059\u3079\u3066\u3092\u7121\u52b9\u306b\u3059\u308b\nset visualbell t_vb=\nset noerrorbells\n\n\" \u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306e\u691c\u51fa\u306e\u6709\u52b9\u5316\u3059\u308b\n\" \u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u5225\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30ed\u30fc\u30c9\u3092\u6709\u52b9\u5316\u3059\u308b\n\" \u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u5225\u30a4\u30f3\u30c7\u30f3\u30c8\u306e\u30ed\u30fc\u30c9\u3092\u6709\u52b9\u5316\u3059\u308b\nfiletype plugin indent on\n\nset laststatus=2\nset showtabline=2\nset noshowmode\nset tabstop=2\nset shiftwidth=2\nset number\nset clipboard=unnamed,autoselect\nset directory=~/.vim/tmp\nset backupdir=~/.vim/tmp\nset undodir=~/.vim/tmp\nnoremap <C-j> <esc>\nnoremap! <C-j> <esc>\nnnoremap <silent><C-e> :NERDTreeToggle<CR>\n\n\" \u81ea\u52d5\u82f1\u6570\nif executable('osascript')\n  let s:keycode_jis_eisuu = 102\n  let g:force_alphanumeric_input_command = \"osascript -e 'tell application \\\"System Events\\\" to key code \" . s:keycode_jis_eisuu . \"' &\"\n\n  inoremap   :call system(g:force_alphanumeric_input_command)\n\n  autocmd! FocusGained *\n    \\ call system(g:force_alphanumeric_input_command)\nendif\n\n\n.tmux.conf\n# Validate UTF-8\n# setw -g utf8 on\n# set -g status-utf8 on\n\n# Change Prefix C-b to C-t\nunbind-key C-b\nset-option -g prefix C-t\n\n# Create & move screen\nunbind ^C\nbind ^C new-window -c \"#{pane_current_path}\"\nunbind ^p\nbind ^p previous-window\nunbind ^n\nbind ^n next-window\n\n# Split screen\nunbind |\nbind | split-window -h -c \"#{pane_current_path}\"\nunbin S\nbind S split-window -v -c \"#{pane_current_path}\"\n\n# Validate scroll\nset -g mouse on\nset -g terminal-overrides 'xterm*:smcup@:rmcup@'\n\n\n.screenrc\n#######\n\nsource ~/.zshrc\n\n\n#\n# no annoying audible bell\n#\nvbell off\n\n#\n# make the shell in every window a login shell\n#\nshell -$SHELL\n\n#\n# don't display the copyright page\n#\nstartup_message off\n\n#\n# detach on hangup\n#\nautodetach on\n\n#\n# make lockscreen invalid\n#\nbind x\nbind ^x\n\n#\n# remove some stupid/dangerous key bindings\n#\nbind k\nbind ^k\nbind .\nbind ^\\\nbind \\\\\nbind ^h\nbind h\n\n#\n# improve key bindings\n#\nbind '\\\\' quit\nbind 'K' kill\nbind 'l' login on\nbind 'O' login off\nbind '}' history\nbind '^g' undo\n\n\n#\n# escape shortcut key\n#\nescape ^t^t\n\n#\n# UTF-8 support\n#\ndefencoding utf-8\nencoding utf-8 utf-8\n\n#\n# show date\n#\nhardstatus alwayslastline \"screen |%c %m/%d| %w\"\n\n#\n# load a shell title\n#\n#shelltitle \"$ |shell\"\n\n#\n# make mouse wheel valid\n#\ntermcapinfo xterm* ti@:te@\n\n\n.zshrc\n\noh-my-zsh\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\n\n#\n# complement options and arguments\n#\nautoload -U compinit\ncompinit -u\n\n#\n# history\n#\n\nHISTFILE=~/.zhistory\nHISTSIZE=100000\nSAVEHIST=100000\n\nsetopt EXTENDED_HISTORY\nsetopt share_history\n\n#\n# alias\n#\n\nalias ls=\"ls -FG\"\nalias emacs=\"emacs -nw\"\nalias py=\"python3 \"\nalias mv=\"mv -v \"\nalias sublime=\"/Applications/Sublime\\ Text\\ 2.app/Contents/SharedSupport/bin/subl \"\n#alias sub=\"sublime \"\nalias mysql=\"mysql -T -t\"\nalias rm=\"rm -v\"\nalias revealjs=\"pandoc -s -t revealjs --variable transition=\"linear\" -V theme=\"blood\" -o \"\nalias dzslides=\"pandoc -s -t dzslides -o \"\nalias RR=\"R --no-save --slave --vanilla \"\n#alias cat=\"cat -n\"\n\n#\n# pushd automatically when execute cd.\n#\n\nsetopt autopushd\n\n#\n# show process ID when execute jobs.\n#\n\nsetopt long_list_jobs\n\n#\n# show the current directory on the left side of the prompt\n# show date & time on the right side of the prompt,\n# and turn it off when command reach.\n#\n\nPROMPT=\"%F{green}%n@%m %~ %F{39}%# \"\nRPROMPT=\"%F{green}%D %* \"\n#setopt transient_rprompt\n\n\nsublime\n\nkey-default\n\n/*\nOn OS X, basic text manipulations (left, right, command+left, etc) make use of the system key bindings,\nand don't need to be repeated here. Anything listed here will take precedence, however.\n*/\n[\n     { \"keys\": [\"super+shift+n\"], \"command\": \"new_window\" },\n     { \"keys\": [\"super+shift+w\"], \"command\": \"close_window\" },\n     { \"keys\": [\"super+o\"], \"command\": \"prompt_open\" },\n     { \"keys\": [\"super+shift+t\"], \"command\": \"reopen_last_file\" },\n     { \"keys\": [\"super+alt+up\"], \"command\": \"switch_file\", \"args\": {\"extensions\": [\"cpp\", \"cxx\", \"cc\", \"c\", \"hpp\", \"hxx\", \"h\", \"ipp\", \"inl\", \"m\", \"mm\"]} },\n     { \"keys\": [\"super+n\"], \"command\": \"new_file\" },\n     { \"keys\": [\"super+s\"], \"command\": \"save\" },\n     { \"keys\": [\"super+shift+s\"], \"command\": \"prompt_save_as\" },\n     { \"keys\": [\"super+alt+s\"], \"command\": \"save_all\" },\n     { \"keys\": [\"super+w\"], \"command\": \"close\" },\n\n     { \"keys\": [\"super+k\", \"super+b\"], \"command\": \"toggle_side_bar\" },\n     { \"keys\": [\"super+ctrl+f\"], \"command\": \"toggle_full_screen\" },\n     { \"keys\": [\"super+ctrl+shift+f\"], \"command\": \"toggle_distraction_free\" },\n\n     { \"keys\": [\"super+z\"], \"command\": \"undo\" },\n     { \"keys\": [\"super+shift+z\"], \"command\": \"redo\" },\n     { \"keys\": [\"super+y\"], \"command\": \"redo_or_repeat\" },\n     { \"keys\": [\"super+u\"], \"command\": \"soft_undo\" },\n     { \"keys\": [\"super+shift+u\"], \"command\": \"soft_redo\" },\n\n     { \"keys\": [\"super+x\"], \"command\": \"cut\" },\n     { \"keys\": [\"super+c\"], \"command\": \"copy\" },\n     { \"keys\": [\"super+v\"], \"command\": \"paste\" },\n     { \"keys\": [\"super+shift+v\"], \"command\": \"paste_and_indent\" },\n\n     { \"keys\": [\"ctrl+alt+left\"], \"command\": \"move\", \"args\": {\"by\": \"subwords\", \"forward\": false} },\n     { \"keys\": [\"ctrl+alt+right\"], \"command\": \"move\", \"args\": {\"by\": \"subword_ends\", \"forward\": true} },\n     { \"keys\": [\"ctrl+alt+shift+left\"], \"command\": \"move\", \"args\": {\"by\": \"subwords\", \"forward\": false, \"extend\": true} },\n     { \"keys\": [\"ctrl+alt+shift+right\"], \"command\": \"move\", \"args\": {\"by\": \"subword_ends\", \"forward\": true, \"extend\": true} },\n\n     { \"keys\": [\"ctrl+left\"], \"command\": \"move\", \"args\": {\"by\": \"subwords\", \"forward\": false} },\n     { \"keys\": [\"ctrl+right\"], \"command\": \"move\", \"args\": {\"by\": \"subword_ends\", \"forward\": true} },\n     { \"keys\": [\"ctrl+shift+left\"], \"command\": \"move\", \"args\": {\"by\": \"subwords\", \"forward\": false, \"extend\": true} },\n     { \"keys\": [\"ctrl+shift+right\"], \"command\": \"move\", \"args\": {\"by\": \"subword_ends\", \"forward\": true, \"extend\": true} },\n\n     { \"keys\": [\"ctrl+alt+up\"], \"command\": \"scroll_lines\", \"args\": {\"amount\": 1.0} },\n     { \"keys\": [\"ctrl+alt+down\"], \"command\": \"scroll_lines\", \"args\": {\"amount\": -1.0} },\n\n     { \"keys\": [\"ctrl+shift+up\"], \"command\": \"select_lines\", \"args\": {\"forward\": false} },\n     { \"keys\": [\"ctrl+shift+down\"], \"command\": \"select_lines\", \"args\": {\"forward\": true} },\n\n     { \"keys\": [\"super+shift+[\"], \"command\": \"prev_view\" },\n     { \"keys\": [\"super+shift+]\"], \"command\": \"next_view\" },\n     { \"keys\": [\"super+alt+left\"], \"command\": \"prev_view\" },\n     { \"keys\": [\"super+alt+right\"], \"command\": \"next_view\" },\n\n     { \"keys\": [\"ctrl+tab\"], \"command\": \"next_view\" },\n     { \"keys\": [\"ctrl+shift+tab\"], \"command\": \"prev_view\" },\n\n/*\n     { \"keys\": [\"ctrl+tab\"], \"command\": \"next_view_in_stack\" },\n     { \"keys\": [\"ctrl+shift+tab\"], \"command\": \"prev_view_in_stack\" },\n*/\n\n     { \"keys\": [\"super+a\"], \"command\": \"select_all\" },\n     { \"keys\": [\"super+shift+l\"], \"command\": \"split_selection_into_lines\" },\n     { \"keys\": [\"escape\"], \"command\": \"single_selection\", \"context\":\n          [\n               { \"key\": \"num_selections\", \"operator\": \"not_equal\", \"operand\": 1 }\n          ]\n     },\n     { \"keys\": [\"escape\"], \"command\": \"clear_fields\", \"context\":\n          [\n               { \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"escape\"], \"command\": \"clear_fields\", \"context\":\n          [\n               { \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"escape\"], \"command\": \"hide_panel\", \"args\": {\"cancel\": true},\n          \"context\":\n          [\n               { \"key\": \"panel_visible\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"escape\"], \"command\": \"hide_overlay\", \"context\":\n          [\n               { \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"escape\"], \"command\": \"hide_auto_complete\", \"context\":\n          [\n               { \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n\n     { \"keys\": [\"super+]\"], \"command\": \"indent\" },\n     { \"keys\": [\"super+[\"], \"command\": \"unindent\" },\n\n     // { \"keys\": [\"tab\"], \"command\": \"insert_best_completion\", \"args\": {\"default\": \"\\t\", \"exact\": true} },\n     // { \"keys\": [\"tab\"], \"command\": \"insert_best_completion\", \"args\": {\"default\": \"\\t\", \"exact\": false},\n     //      \"context\":\n     //      [\n     //           { \"key\": \"setting.tab_completion\", \"operator\": \"equal\", \"operand\": true }\n     //      ]\n     // },\n     { \"keys\": [\"tab\"], \"command\": \"replace_completion_with_next_completion\", \"context\":\n          [\n               { \"key\": \"last_command\", \"operator\": \"equal\", \"operand\": \"insert_best_completion\" },\n               { \"key\": \"setting.tab_completion\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"tab\"], \"command\": \"reindent\", \"context\":\n          [\n               { \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"tab\"], \"command\": \"indent\", \"context\":\n          [\n               { \"key\": \"text\", \"operator\": \"regex_contains\", \"operand\": \"\\n\" }\n          ]\n     },\n     { \"keys\": [\"tab\"], \"command\": \"next_field\", \"context\":\n          [\n               { \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"tab\"], \"command\": \"commit_completion\", \"context\":\n          [\n               { \"key\": \"auto_complete_visible\" },\n               { \"key\": \"setting.auto_complete_commit_on_tab\" }\n          ]\n     },\n\n     { \"keys\": [\"shift+tab\"], \"command\": \"insert\", \"args\": {\"characters\": \"\\t\"} },\n     { \"keys\": [\"shift+tab\"], \"command\": \"unindent\", \"context\":\n          [\n               { \"key\": \"setting.shift_tab_unindent\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"shift+tab\"], \"command\": \"unindent\", \"context\":\n          [\n               { \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\t ]*\" }\n          ]\n     },\n     { \"keys\": [\"shift+tab\"], \"command\": \"unindent\", \"context\":\n          [\n               { \"key\": \"text\", \"operator\": \"regex_contains\", \"operand\": \"\\n\" }\n          ]\n     },\n     { \"keys\": [\"shift+tab\"], \"command\": \"prev_field\", \"context\":\n          [\n               { \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n\n     { \"keys\": [\"super+l\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"line\"} },\n     { \"keys\": [\"super+d\"], \"command\": \"find_under_expand\" },\n     { \"keys\": [\"super+k\", \"super+d\"], \"command\": \"find_under_expand_skip\" },\n     { \"keys\": [\"super+shift+space\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"scope\"} },\n     { \"keys\": [\"ctrl+shift+m\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"brackets\"} },\n     { \"keys\": [\"ctrl+m\"], \"command\": \"move_to\", \"args\": {\"to\": \"brackets\"} },\n     { \"keys\": [\"super+shift+j\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"indentation\"} },\n     { \"keys\": [\"super+shift+a\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"tag\"} },\n\n     { \"keys\": [\"super+alt+.\"], \"command\": \"close_tag\" },\n\n     { \"keys\": [\"ctrl+q\"], \"command\": \"toggle_record_macro\" },\n     { \"keys\": [\"ctrl+shift+q\"], \"command\": \"run_macro\" },\n\n     { \"keys\": [\"super+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Add Line.sublime-macro\"} },\n     { \"keys\": [\"super+shift+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Add Line Before.sublime-macro\"} },\n     { \"keys\": [\"enter\"], \"command\": \"commit_completion\", \"context\":\n          [\n               { \"key\": \"auto_complete_visible\" },\n               { \"key\": \"setting.auto_complete_commit_on_tab\", \"operand\": false }\n          ]\n     },\n\n     { \"keys\": [\"super+t\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"show_files\": true} },\n     { \"keys\": [\"super+p\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"show_files\": true} },\n     { \"keys\": [\"super+shift+p\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"command_palette\"} },\n     { \"keys\": [\"super+ctrl+p\"], \"command\": \"prompt_select_project\" },\n     { \"keys\": [\"super+r\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"text\": \"@\"} },\n     { \"keys\": [\"ctrl+g\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"text\": \":\"} },\n\n     { \"keys\": [\"super+i\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"incremental_find\", \"reverse\":false} },\n     { \"keys\": [\"super+shift+i\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"incremental_find\", \"reverse\":true} },\n     { \"keys\": [\"super+f\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"find\"} },\n     { \"keys\": [\"super+alt+f\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"replace\"} },\n     { \"keys\": [\"super+alt+e\"], \"command\": \"replace_next\" },\n     { \"keys\": [\"super+g\"], \"command\": \"find_next\" },\n     { \"keys\": [\"super+shift+g\"], \"command\": \"find_prev\" },\n     { \"keys\": [\"super+e\"], \"command\": \"slurp_find_string\" },\n     { \"keys\": [\"super+shift+e\"], \"command\": \"slurp_replace_string\" },\n\n     { \"keys\": [\"alt+super+g\"], \"command\": \"find_under\" },\n     { \"keys\": [\"shift+alt+super+g\"], \"command\": \"find_under_prev\" },\n     { \"keys\": [\"ctrl+super+g\"], \"command\": \"find_all_under\" },\n\n     { \"keys\": [\"super+shift+f\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"find_in_files\"} },\n     { \"keys\": [\"f4\"], \"command\": \"next_result\" },\n     { \"keys\": [\"shift+f4\"], \"command\": \"prev_result\" },\n\n     { \"keys\": [\"f6\"], \"command\": \"toggle_setting\", \"args\": {\"setting\": \"spell_check\"} },\n     { \"keys\": [\"ctrl+f6\"], \"command\": \"next_misspelling\" },\n     { \"keys\": [\"ctrl+shift+f6\"], \"command\": \"prev_misspelling\" },\n\n     { \"keys\": [\"ctrl+super+up\"], \"command\": \"swap_line_up\" },\n     { \"keys\": [\"ctrl+super+down\"], \"command\": \"swap_line_down\" },\n\n     { \"keys\": [\"ctrl+backspace\"], \"command\": \"delete_word\", \"args\": { \"forward\": false, \"sub_words\": true } },\n     { \"keys\": [\"ctrl+delete\"], \"command\": \"delete_word\", \"args\": { \"forward\": true, \"sub_words\": true } },\n\n     { \"keys\": [\"super+forward_slash\"], \"command\": \"toggle_comment\", \"args\": { \"block\": false } },\n     { \"keys\": [\"super+alt+forward_slash\"], \"command\": \"toggle_comment\", \"args\": { \"block\": true } },\n\n     { \"keys\": [\"super+j\"], \"command\": \"join_lines\" },\n     { \"keys\": [\"super+shift+d\"], \"command\": \"duplicate_line\" },\n\n     { \"keys\": [\"ctrl+backquote\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"console\", \"toggle\": true} },\n\n     { \"keys\": [\"ctrl+space\"], \"command\": \"auto_complete\" },\n     { \"keys\": [\"ctrl+space\"], \"command\": \"replace_completion_with_auto_complete\", \"context\":\n          [\n               { \"key\": \"last_command\", \"operator\": \"equal\", \"operand\": \"insert_best_completion\" },\n               { \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false },\n               { \"key\": \"setting.tab_completion\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n\n     { \"keys\": [\"super+alt+p\"], \"command\": \"show_scope_name\" },\n     { \"keys\": [\"ctrl+shift+p\"], \"command\": \"show_scope_name\" },\n\n     { \"keys\": [\"f7\"], \"command\": \"build\" },\n     { \"keys\": [\"super+b\"], \"command\": \"build\" },\n     { \"keys\": [\"super+shift+b\"], \"command\": \"build\", \"args\": {\"variant\": \"Run\"} },\n\n     { \"keys\": [\"ctrl+t\"], \"command\": \"transpose\" },\n\n     { \"keys\": [\"f5\"], \"command\": \"sort_lines\", \"args\": {\"case_sensitive\": false} },\n     { \"keys\": [\"ctrl+f5\"], \"command\": \"sort_lines\", \"args\": {\"case_sensitive\": true} },\n\n     // Auto-pair quotes\n     { \"keys\": [\"\\\"\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\\"$0\\\"\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|>|$)\", \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"[\\\"a-zA-Z0-9_]$\", \"match_all\": true },\n               { \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.double\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"\\\"\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\\"${0:$SELECTION}\\\"\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"\\\"\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\"\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\"$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\"\", \"match_all\": true }\n          ]\n     },\n\n     // Auto-pair single quotes\n     { \"keys\": [\"'\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"'$0'\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|>|$)\", \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_]$\", \"match_all\": true },\n               { \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"'\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"'${0:$SELECTION}'\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"'\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^'\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"'$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^'\", \"match_all\": true }\n          ]\n     },\n\n     // Auto-pair brackets\n     { \"keys\": [\"(\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"($0)\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|;|\\\\}|$)\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"(\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"(${0:$SELECTION})\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\")\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\)\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\($\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\)\", \"match_all\": true }\n          ]\n     },\n\n     // Auto-pair square brackets\n     { \"keys\": [\"[\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"[$0]\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|;|\\\\}|$)\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"[\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"[${0:$SELECTION}]\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"]\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\]\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\[$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\]\", \"match_all\": true }\n          ]\n     },\n\n     // Auto-pair curly brackets\n     { \"keys\": [\"{\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"{$0}\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"{\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"{${0:$SELECTION}}\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"}\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\{$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n          ]\n     },\n\n     { \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Add Line in Braces.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\{$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"shift+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Add Line in Braces.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\{$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n          ]\n     },\n\n     {\n          \"keys\": [\"super+alt+1\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 1.0],\n               \"rows\": [0.0, 1.0],\n               \"cells\": [[0, 0, 1, 1]]\n          }\n     },\n     {\n          \"keys\": [\"super+alt+2\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 0.5, 1.0],\n               \"rows\": [0.0, 1.0],\n               \"cells\": [[0, 0, 1, 1], [1, 0, 2, 1]]\n          }\n     },\n     {\n          \"keys\": [\"super+alt+3\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 0.33, 0.66, 1.0],\n               \"rows\": [0.0, 1.0],\n               \"cells\": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1]]\n          }\n     },\n     {\n          \"keys\": [\"super+alt+4\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 0.25, 0.5, 0.75, 1.0],\n               \"rows\": [0.0, 1.0],\n               \"cells\": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1], [3, 0, 4, 1]]\n          }\n     },\n     {\n          \"keys\": [\"super+alt+shift+2\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 1.0],\n               \"rows\": [0.0, 0.5, 1.0],\n               \"cells\": [[0, 0, 1, 1], [0, 1, 1, 2]]\n          }\n     },\n     {\n          \"keys\": [\"super+alt+shift+3\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 1.0],\n               \"rows\": [0.0, 0.33, 0.66, 1.0],\n               \"cells\": [[0, 0, 1, 1], [0, 1, 1, 2], [0, 2, 1, 3]]\n          }\n     },\n     {\n          \"keys\": [\"super+alt+5\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 0.5, 1.0],\n               \"rows\": [0.0, 0.5, 1.0],\n               \"cells\":\n               [\n                    [0, 0, 1, 1], [1, 0, 2, 1],\n                    [0, 1, 1, 2], [1, 1, 2, 2]\n               ]\n          }\n     },\n     { \"keys\": [\"ctrl+1\"], \"command\": \"focus_group\", \"args\": { \"group\": 0 } },\n     { \"keys\": [\"ctrl+2\"], \"command\": \"focus_group\", \"args\": { \"group\": 1 } },\n     { \"keys\": [\"ctrl+3\"], \"command\": \"focus_group\", \"args\": { \"group\": 2 } },\n     { \"keys\": [\"ctrl+4\"], \"command\": \"focus_group\", \"args\": { \"group\": 3 } },\n     { \"keys\": [\"ctrl+shift+1\"], \"command\": \"move_to_group\", \"args\": { \"group\": 0 } },\n     { \"keys\": [\"ctrl+shift+2\"], \"command\": \"move_to_group\", \"args\": { \"group\": 1 } },\n     { \"keys\": [\"ctrl+shift+3\"], \"command\": \"move_to_group\", \"args\": { \"group\": 2 } },\n     { \"keys\": [\"ctrl+shift+4\"], \"command\": \"move_to_group\", \"args\": { \"group\": 3 } },\n     { \"keys\": [\"ctrl+0\"], \"command\": \"focus_side_bar\" },\n\n     { \"keys\": [\"super+1\"], \"command\": \"select_by_index\", \"args\": { \"index\": 0 } },\n     { \"keys\": [\"super+2\"], \"command\": \"select_by_index\", \"args\": { \"index\": 1 } },\n     { \"keys\": [\"super+3\"], \"command\": \"select_by_index\", \"args\": { \"index\": 2 } },\n     { \"keys\": [\"super+4\"], \"command\": \"select_by_index\", \"args\": { \"index\": 3 } },\n     { \"keys\": [\"super+5\"], \"command\": \"select_by_index\", \"args\": { \"index\": 4 } },\n     { \"keys\": [\"super+6\"], \"command\": \"select_by_index\", \"args\": { \"index\": 5 } },\n     { \"keys\": [\"super+7\"], \"command\": \"select_by_index\", \"args\": { \"index\": 6 } },\n     { \"keys\": [\"super+8\"], \"command\": \"select_by_index\", \"args\": { \"index\": 7 } },\n     { \"keys\": [\"super+9\"], \"command\": \"select_by_index\", \"args\": { \"index\": 8 } },\n     { \"keys\": [\"super+0\"], \"command\": \"select_by_index\", \"args\": { \"index\": 9 } },\n\n     { \"keys\": [\"f2\"], \"command\": \"next_bookmark\" },\n     { \"keys\": [\"shift+f2\"], \"command\": \"prev_bookmark\" },\n     { \"keys\": [\"super+f2\"], \"command\": \"toggle_bookmark\" },\n     { \"keys\": [\"super+shift+f2\"], \"command\": \"clear_bookmarks\" },\n     { \"keys\": [\"alt+f2\"], \"command\": \"select_all_bookmarks\" },\n\n     { \"keys\": [\"super+k\", \"super+u\"], \"command\": \"upper_case\" },\n     { \"keys\": [\"super+k\", \"super+l\"], \"command\": \"lower_case\" },\n     { \"keys\": [\"super+k\", \"super+space\"], \"command\": \"set_mark\" },\n     { \"keys\": [\"super+k\", \"super+a\"], \"command\": \"select_to_mark\" },\n     { \"keys\": [\"super+k\", \"super+w\"], \"command\": \"delete_to_mark\" },\n     { \"keys\": [\"super+k\", \"super+x\"], \"command\": \"swap_with_mark\" },\n     { \"keys\": [\"super+k\", \"super+g\"], \"command\": \"clear_bookmarks\", \"args\": {\"name\": \"mark\"} },\n\n     { \"keys\": [\"super+plus\"], \"command\": \"increase_font_size\" },\n     { \"keys\": [\"super+equals\"], \"command\": \"increase_font_size\" },\n     { \"keys\": [\"super+minus\"], \"command\": \"decrease_font_size\" },\n\n     { \"keys\": [\"ctrl+shift+w\"], \"command\": \"insert_snippet\", \"args\": { \"name\": \"Packages/XML/long-tag.sublime-snippet\" } },\n\n     { \"keys\": [\"ctrl+shift+k\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Line.sublime-macro\"} },\n\n     { \"keys\": [\"super+alt+q\"], \"command\": \"wrap_lines\" },\n\n     { \"keys\": [\"super+alt+[\"], \"command\": \"fold\" },\n     { \"keys\": [\"super+alt+]\"], \"command\": \"unfold\" },\n     { \"keys\": [\"super+k\", \"super+1\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 1} },\n     { \"keys\": [\"super+k\", \"super+2\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 2} },\n     { \"keys\": [\"super+k\", \"super+3\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 3} },\n     { \"keys\": [\"super+k\", \"super+4\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 4} },\n     { \"keys\": [\"super+k\", \"super+5\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 5} },\n     { \"keys\": [\"super+k\", \"super+6\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 6} },\n     { \"keys\": [\"super+k\", \"super+7\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 7} },\n     { \"keys\": [\"super+k\", \"super+8\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 8} },\n     { \"keys\": [\"super+k\", \"super+9\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 9} },\n     { \"keys\": [\"super+k\", \"super+0\"], \"command\": \"unfold_all\" },\n     { \"keys\": [\"super+k\", \"super+j\"], \"command\": \"unfold_all\" },\n     { \"keys\": [\"super+k\", \"super+t\"], \"command\": \"fold_tag_attributes\" },\n\n     { \"keys\": [\"super+alt+o\"], \"command\": \"toggle_overwrite\" },\n\n     { \"keys\": [\"alt+f2\"], \"command\": \"context_menu\" },\n\n     { \"keys\": [\"super+alt+c\"], \"command\": \"toggle_case_sensitive\", \"context\":\n          [\n               { \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"super+alt+r\"], \"command\": \"toggle_regex\", \"context\":\n          [\n               { \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"super+alt+w\"], \"command\": \"toggle_whole_word\", \"context\":\n          [\n               { \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"super+alt+a\"], \"command\": \"toggle_preserve_case\", \"context\":\n          [\n               { \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n\n     // Find panel key bindings\n     { \"keys\": [\"enter\"], \"command\": \"find_next\", \"context\":\n          [{\"key\": \"panel\", \"operand\": \"find\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"shift+enter\"], \"command\": \"find_prev\", \"context\":\n          [{\"key\": \"panel\", \"operand\": \"find\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"alt+enter\"], \"command\": \"find_all\", \"args\": {\"close_panel\": true},\n           \"context\": [{\"key\": \"panel\", \"operand\": \"find\"}, {\"key\": \"panel_has_focus\"}]\n     },\n\n     // Replace panel key bindings\n     { \"keys\": [\"enter\"], \"command\": \"find_next\", \"context\":\n          [{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"shift+enter\"], \"command\": \"find_prev\", \"context\":\n          [{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"alt+enter\"], \"command\": \"find_all\", \"args\": {\"close_panel\": true},\n          \"context\": [{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"ctrl+alt+enter\"], \"command\": \"replace_all\", \"args\": {\"close_panel\": true},\n           \"context\": [{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n     },\n\n     // Incremental find panel key bindings\n     { \"keys\": [\"enter\"], \"command\": \"hide_panel\", \"context\":\n          [{\"key\": \"panel\", \"operand\": \"incremental_find\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"shift+enter\"], \"command\": \"find_prev\", \"context\":\n          [{\"key\": \"panel\", \"operand\": \"incremental_find\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"alt+enter\"], \"command\": \"find_all\", \"args\": {\"close_panel\": true},\n          \"context\": [{\"key\": \"panel\", \"operand\": \"incremental_find\"}, {\"key\": \"panel_has_focus\"}]\n     },\n\n     { \"keys\": [\"super+,\"], \"command\": \"open_file\", \"args\": {\"file\": \"${packages}/User/Preferences.sublime-settings\"} },\n\n     { \"keys\": [\"super+k\", \"super+y\"], \"command\": \"yank\" },\n     { \"keys\": [\"super+k\", \"super+k\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete to Hard EOL.sublime-macro\"} },\n     { \"keys\": [\"super+k\", \"super+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete to Hard BOL.sublime-macro\"} },\n     { \"keys\": [\"super+k\", \"super+c\"], \"command\": \"show_at_center\" },\n\n     // These are OS X built in commands, and don't need to be listed here, but\n     // doing so lets them show up in the menu\n     { \"keys\": [\"ctrl+y\"], \"command\": \"yank\" },\n     { \"keys\": [\"super+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete to Hard BOL.sublime-macro\"} },\n     // super+delete isn't a built in command, but makes sense anyway\n     { \"keys\": [\"super+delete\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete to Hard EOL.sublime-macro\"} },\n     { \"keys\": [\"ctrl+k\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete to Hard EOL.sublime-macro\"} },\n     { \"keys\": [\"ctrl+l\"], \"command\": \"show_at_center\" },\n     { \"keys\": [\"ctrl+o\"], \"command\": \"insert_snippet\", \"args\": { \"contents\": \"$0\\n\" } },\n     { \"keys\": [\"ctrl+super+d\"], \"command\": \"noop\" },\n     { \"keys\": [\"ctrl+super+shift+d\"], \"command\": \"noop\" }\n]\n\n### toc\n\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u30e1\u30e2\u3063\u3068\u304f\n- .emacs\n- .vimrc\n- .tmux.conf\n- .screenrc\n- .zshrc\n- sublime\n\n---\n\n# .emacs\n```\n(global-set-key \"\\C-h\" 'delete-backward-char)\n```\n\n# .vimrc\n```\n\" -------------------------------\n\" NeoBundle\n\" -------------------------------\nif has('vim_starting')\n  if &compatible\n    set nocompatible\n  endif\n\n  set runtimepath+=~/.vim/bundle/neobundle.vim/\nendif\n\ncall neobundle#begin(expand('~/.vim/bundle'))\n\n\n\" \u9759\u7684\u89e3\u6790\nNeoBundle 'scrooloose/syntastic'\n\n\" \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u53c2\u7167\nNeoBundle 'thinca/vim-ref'\nNeoBundle 'yuku-t/vim-ref-ri'\n\n\" \u81ea\u52d5\u3067\u9589\u3058\u308b\nNeoBundle 'tpope/vim-endwise'\n\"powerline\"\nNeoBundle 'Lokaltog/vim-powerline'\n\nNeoBundleCheck\n\n\" \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30c4\u30ea\u30fc\u8868\u793a\nNeoBundle 'scrooloose/nerdtree'\n\n\" Rails\u5411\u3051\u306e\u30b3\u30de\u30f3\u30c9\u3092\u63d0\u4f9b\u3059\u308b\nNeoBundle 'tpope/vim-rails'\n\n\" \u30b3\u30e1\u30f3\u30c8ON/OFF\u3092\u624b\u8efd\u306b\u5b9f\u884c\nNeoBundle 'tomtom/tcomment_vim'\n\n\" \u30b7\u30f3\u30b0\u30eb\u30af\u30aa\u30fc\u30c8\u3068\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u306e\u5165\u308c\u66ff\u3048\u7b49\nNeoBundle 'tpope/vim-surround'\n\n\"\u30ab\u30e9\u30fc\u30b9\u30ad\u30fc\u30de\nsyntax on\ncolorscheme molokai\nset t_Co=256\n\n\" \u30a4\u30f3\u30c7\u30f3\u30c8\u306b\u8272\u3092\u4ed8\u3051\u3066\u898b\u3084\u3059\u304f\u3059\u308b\nNeoBundle 'nathanaelkane/vim-indent-guides'\n\n\" vim\u3092\u7acb\u3061\u4e0a\u3052\u305f\u3068\u304d\u306b\u3001\u81ea\u52d5\u7684\u306bvim-indent-guides\u3092\u30aa\u30f3\u306b\u3059\u308b\nlet g:indent_guides_enable_on_vim_startup = 1\nlet g:indent_guides_guide_size=2\n\n\n\" \u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u8272\u3065\u3051\u3057\u3066\u304f\u308c\u308b\nNeoBundle 'vim-scripts/AnsiEsc.vim'\nNeoBundle 'kchmck/vim-coffee-script'\n\n\" \u884c\u672b\u306e\u534a\u89d2\u30b9\u30da\u30fc\u30b9\u3092\u53ef\u8996\u5316\nNeoBundle 'bronson/vim-trailing-whitespace'\n\n\"paste\nNeoBundle 'ConradIrwin/vim-bracketed-paste'\ncall neobundle#end()\n\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n\" --------------------------------\n\" rubocop\n\" --------------------------------\n\" syntastic_mode_map\u3092active\u306b\u3059\u308b\u3068\u30d0\u30c3\u30d5\u30a1\u4fdd\u5b58\u6642\u306bsyntastic\u304c\u8d70\u308b\n\" active_filetypes\u306b\u3001\u4fdd\u5b58\u6642\u306bsyntastic\u3092\u8d70\u3089\u305b\u308b\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u3092\u6307\u5b9a\u3059\u308b\nlet g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': ['ruby'] }\nlet g:syntastic_ruby_checkers = ['rubocop']\n\n\" --------------------------------\n\" \u57fa\u672c\u8a2d\u5b9a\n\" --------------------------------\n\" vim\u5185\u90e8\u3067\u4f7f\u308f\u308c\u308b\u6587\u5b57\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092utf-8\u306b\u8a2d\u5b9a\u3059\u308b\nset encoding=utf-8\n\n\" \u60f3\u5b9a\u3055\u308c\u308b\u6539\u884c\u30b3\u30fc\u30c9\u306e\u6307\u5b9a\u3059\u308b\nset fileformats=unix,dos,mac\n\n\" \u30cf\u30a4\u30e9\u30a4\u30c8\u3092\u6709\u52b9\u5316\u3059\u308b\nsyntax enable\n\n\" \u633f\u5165\u30e2\u30fc\u30c9\u3067TAB\u3092\u633f\u5165\u3059\u308b\u3068\u304d\u3001\u4ee3\u308f\u308a\u306b\u9069\u5207\u306a\u6570\u306e\u7a7a\u767d\u3092\u4f7f\u3046\nset expandtab\n\n\" \u65b0\u3057\u3044\u884c\u3092\u958b\u59cb\u3057\u305f\u3068\u304d\u3001\u65b0\u3057\u3044\u884c\u306e\u30a4\u30f3\u30c7\u30f3\u30c8\u3092\u73fe\u5728\u884c\u3068\u540c\u3058\u306b\u3059\u308b\nset autoindent\n\n\" undo\u60c5\u5831\u3092\u4fdd\u6301\nset undofile\n\nset backspace=indent,eol,start\n\n\"\u30d3\u30fc\u30d7\u97f3\u3059\u3079\u3066\u3092\u7121\u52b9\u306b\u3059\u308b\nset visualbell t_vb=\nset noerrorbells\n\n\" \u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306e\u691c\u51fa\u306e\u6709\u52b9\u5316\u3059\u308b\n\" \u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u5225\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30ed\u30fc\u30c9\u3092\u6709\u52b9\u5316\u3059\u308b\n\" \u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u5225\u30a4\u30f3\u30c7\u30f3\u30c8\u306e\u30ed\u30fc\u30c9\u3092\u6709\u52b9\u5316\u3059\u308b\nfiletype plugin indent on\n\nset laststatus=2\nset showtabline=2\nset noshowmode\nset tabstop=2\nset shiftwidth=2\nset number\nset clipboard=unnamed,autoselect\nset directory=~/.vim/tmp\nset backupdir=~/.vim/tmp\nset undodir=~/.vim/tmp\nnoremap <C-j> <esc>\nnoremap! <C-j> <esc>\nnnoremap <silent><C-e> :NERDTreeToggle<CR>\n\n\" \u81ea\u52d5\u82f1\u6570\nif executable('osascript')\n  let s:keycode_jis_eisuu = 102\n  let g:force_alphanumeric_input_command = \"osascript -e 'tell application \\\"System Events\\\" to key code \" . s:keycode_jis_eisuu . \"' &\"\n\n  inoremap   :call system(g:force_alphanumeric_input_command)\n\n  autocmd! FocusGained *\n    \\ call system(g:force_alphanumeric_input_command)\nendif\n```\n\n# .tmux.conf\n```\n# Validate UTF-8\n# setw -g utf8 on\n# set -g status-utf8 on\n\n# Change Prefix C-b to C-t\nunbind-key C-b\nset-option -g prefix C-t\n\n# Create & move screen\nunbind ^C\nbind ^C new-window -c \"#{pane_current_path}\"\nunbind ^p\nbind ^p previous-window\nunbind ^n\nbind ^n next-window\n\n# Split screen\nunbind |\nbind | split-window -h -c \"#{pane_current_path}\"\nunbin S\nbind S split-window -v -c \"#{pane_current_path}\"\n\n# Validate scroll\nset -g mouse on\nset -g terminal-overrides 'xterm*:smcup@:rmcup@'\n```\n\n# .screenrc\n```\n#######\n\nsource ~/.zshrc\n\n\n#\n# no annoying audible bell\n#\nvbell off\n\n#\n# make the shell in every window a login shell\n#\nshell -$SHELL\n\n#\n# don't display the copyright page\n#\nstartup_message off\n\n#\n# detach on hangup\n#\nautodetach on\n\n#\n# make lockscreen invalid\n#\nbind x\nbind ^x\n\n#\n# remove some stupid/dangerous key bindings\n#\nbind k\nbind ^k\nbind .\nbind ^\\\nbind \\\\\nbind ^h\nbind h\n\n#\n# improve key bindings\n#\nbind '\\\\' quit\nbind 'K' kill\nbind 'l' login on\nbind 'O' login off\nbind '}' history\nbind '^g' undo\n\n\n#\n# escape shortcut key\n#\nescape ^t^t\n\n#\n# UTF-8 support\n#\ndefencoding utf-8\nencoding utf-8 utf-8\n\n#\n# show date\n#\nhardstatus alwayslastline \"screen |%c %m/%d| %w\"\n\n#\n# load a shell title\n#\n#shelltitle \"$ |shell\"\n\n#\n# make mouse wheel valid\n#\ntermcapinfo xterm* ti@:te@\n```\n\n# .zshrc\n- oh-my-zsh\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\n\n```\n#\n# complement options and arguments\n#\nautoload -U compinit\ncompinit -u\n\n#\n# history\n#\n\nHISTFILE=~/.zhistory\nHISTSIZE=100000\nSAVEHIST=100000\n\nsetopt EXTENDED_HISTORY\nsetopt share_history\n\n#\n# alias\n#\n\nalias ls=\"ls -FG\"\nalias emacs=\"emacs -nw\"\nalias py=\"python3 \"\nalias mv=\"mv -v \"\nalias sublime=\"/Applications/Sublime\\ Text\\ 2.app/Contents/SharedSupport/bin/subl \"\n#alias sub=\"sublime \"\nalias mysql=\"mysql -T -t\"\nalias rm=\"rm -v\"\nalias revealjs=\"pandoc -s -t revealjs --variable transition=\"linear\" -V theme=\"blood\" -o \"\nalias dzslides=\"pandoc -s -t dzslides -o \"\nalias RR=\"R --no-save --slave --vanilla \"\n#alias cat=\"cat -n\"\n\n#\n# pushd automatically when execute cd.\n#\n\nsetopt autopushd\n\n#\n# show process ID when execute jobs.\n#\n\nsetopt long_list_jobs\n\n#\n# show the current directory on the left side of the prompt\n# show date & time on the right side of the prompt,\n# and turn it off when command reach.\n#\n\nPROMPT=\"%F{green}%n@%m %~ %F{39}%# \"\nRPROMPT=\"%F{green}%D %* \"\n#setopt transient_rprompt\n```\n\n\n# sublime\n- key-default\n\n```\n/*\nOn OS X, basic text manipulations (left, right, command+left, etc) make use of the system key bindings,\nand don't need to be repeated here. Anything listed here will take precedence, however.\n*/\n[\n     { \"keys\": [\"super+shift+n\"], \"command\": \"new_window\" },\n     { \"keys\": [\"super+shift+w\"], \"command\": \"close_window\" },\n     { \"keys\": [\"super+o\"], \"command\": \"prompt_open\" },\n     { \"keys\": [\"super+shift+t\"], \"command\": \"reopen_last_file\" },\n     { \"keys\": [\"super+alt+up\"], \"command\": \"switch_file\", \"args\": {\"extensions\": [\"cpp\", \"cxx\", \"cc\", \"c\", \"hpp\", \"hxx\", \"h\", \"ipp\", \"inl\", \"m\", \"mm\"]} },\n     { \"keys\": [\"super+n\"], \"command\": \"new_file\" },\n     { \"keys\": [\"super+s\"], \"command\": \"save\" },\n     { \"keys\": [\"super+shift+s\"], \"command\": \"prompt_save_as\" },\n     { \"keys\": [\"super+alt+s\"], \"command\": \"save_all\" },\n     { \"keys\": [\"super+w\"], \"command\": \"close\" },\n\n     { \"keys\": [\"super+k\", \"super+b\"], \"command\": \"toggle_side_bar\" },\n     { \"keys\": [\"super+ctrl+f\"], \"command\": \"toggle_full_screen\" },\n     { \"keys\": [\"super+ctrl+shift+f\"], \"command\": \"toggle_distraction_free\" },\n\n     { \"keys\": [\"super+z\"], \"command\": \"undo\" },\n     { \"keys\": [\"super+shift+z\"], \"command\": \"redo\" },\n     { \"keys\": [\"super+y\"], \"command\": \"redo_or_repeat\" },\n     { \"keys\": [\"super+u\"], \"command\": \"soft_undo\" },\n     { \"keys\": [\"super+shift+u\"], \"command\": \"soft_redo\" },\n\n     { \"keys\": [\"super+x\"], \"command\": \"cut\" },\n     { \"keys\": [\"super+c\"], \"command\": \"copy\" },\n     { \"keys\": [\"super+v\"], \"command\": \"paste\" },\n     { \"keys\": [\"super+shift+v\"], \"command\": \"paste_and_indent\" },\n\n     { \"keys\": [\"ctrl+alt+left\"], \"command\": \"move\", \"args\": {\"by\": \"subwords\", \"forward\": false} },\n     { \"keys\": [\"ctrl+alt+right\"], \"command\": \"move\", \"args\": {\"by\": \"subword_ends\", \"forward\": true} },\n     { \"keys\": [\"ctrl+alt+shift+left\"], \"command\": \"move\", \"args\": {\"by\": \"subwords\", \"forward\": false, \"extend\": true} },\n     { \"keys\": [\"ctrl+alt+shift+right\"], \"command\": \"move\", \"args\": {\"by\": \"subword_ends\", \"forward\": true, \"extend\": true} },\n\n     { \"keys\": [\"ctrl+left\"], \"command\": \"move\", \"args\": {\"by\": \"subwords\", \"forward\": false} },\n     { \"keys\": [\"ctrl+right\"], \"command\": \"move\", \"args\": {\"by\": \"subword_ends\", \"forward\": true} },\n     { \"keys\": [\"ctrl+shift+left\"], \"command\": \"move\", \"args\": {\"by\": \"subwords\", \"forward\": false, \"extend\": true} },\n     { \"keys\": [\"ctrl+shift+right\"], \"command\": \"move\", \"args\": {\"by\": \"subword_ends\", \"forward\": true, \"extend\": true} },\n\n     { \"keys\": [\"ctrl+alt+up\"], \"command\": \"scroll_lines\", \"args\": {\"amount\": 1.0} },\n     { \"keys\": [\"ctrl+alt+down\"], \"command\": \"scroll_lines\", \"args\": {\"amount\": -1.0} },\n\n     { \"keys\": [\"ctrl+shift+up\"], \"command\": \"select_lines\", \"args\": {\"forward\": false} },\n     { \"keys\": [\"ctrl+shift+down\"], \"command\": \"select_lines\", \"args\": {\"forward\": true} },\n\n     { \"keys\": [\"super+shift+[\"], \"command\": \"prev_view\" },\n     { \"keys\": [\"super+shift+]\"], \"command\": \"next_view\" },\n     { \"keys\": [\"super+alt+left\"], \"command\": \"prev_view\" },\n     { \"keys\": [\"super+alt+right\"], \"command\": \"next_view\" },\n\n     { \"keys\": [\"ctrl+tab\"], \"command\": \"next_view\" },\n     { \"keys\": [\"ctrl+shift+tab\"], \"command\": \"prev_view\" },\n\n/*\n     { \"keys\": [\"ctrl+tab\"], \"command\": \"next_view_in_stack\" },\n     { \"keys\": [\"ctrl+shift+tab\"], \"command\": \"prev_view_in_stack\" },\n*/\n\n     { \"keys\": [\"super+a\"], \"command\": \"select_all\" },\n     { \"keys\": [\"super+shift+l\"], \"command\": \"split_selection_into_lines\" },\n     { \"keys\": [\"escape\"], \"command\": \"single_selection\", \"context\":\n          [\n               { \"key\": \"num_selections\", \"operator\": \"not_equal\", \"operand\": 1 }\n          ]\n     },\n     { \"keys\": [\"escape\"], \"command\": \"clear_fields\", \"context\":\n          [\n               { \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"escape\"], \"command\": \"clear_fields\", \"context\":\n          [\n               { \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"escape\"], \"command\": \"hide_panel\", \"args\": {\"cancel\": true},\n          \"context\":\n          [\n               { \"key\": \"panel_visible\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"escape\"], \"command\": \"hide_overlay\", \"context\":\n          [\n               { \"key\": \"overlay_visible\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"escape\"], \"command\": \"hide_auto_complete\", \"context\":\n          [\n               { \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n\n     { \"keys\": [\"super+]\"], \"command\": \"indent\" },\n     { \"keys\": [\"super+[\"], \"command\": \"unindent\" },\n\n     // { \"keys\": [\"tab\"], \"command\": \"insert_best_completion\", \"args\": {\"default\": \"\\t\", \"exact\": true} },\n     // { \"keys\": [\"tab\"], \"command\": \"insert_best_completion\", \"args\": {\"default\": \"\\t\", \"exact\": false},\n     //      \"context\":\n     //      [\n     //           { \"key\": \"setting.tab_completion\", \"operator\": \"equal\", \"operand\": true }\n     //      ]\n     // },\n     { \"keys\": [\"tab\"], \"command\": \"replace_completion_with_next_completion\", \"context\":\n          [\n               { \"key\": \"last_command\", \"operator\": \"equal\", \"operand\": \"insert_best_completion\" },\n               { \"key\": \"setting.tab_completion\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"tab\"], \"command\": \"reindent\", \"context\":\n          [\n               { \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_match\", \"operand\": \"^$\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"tab\"], \"command\": \"indent\", \"context\":\n          [\n               { \"key\": \"text\", \"operator\": \"regex_contains\", \"operand\": \"\\n\" }\n          ]\n     },\n     { \"keys\": [\"tab\"], \"command\": \"next_field\", \"context\":\n          [\n               { \"key\": \"has_next_field\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"tab\"], \"command\": \"commit_completion\", \"context\":\n          [\n               { \"key\": \"auto_complete_visible\" },\n               { \"key\": \"setting.auto_complete_commit_on_tab\" }\n          ]\n     },\n\n     { \"keys\": [\"shift+tab\"], \"command\": \"insert\", \"args\": {\"characters\": \"\\t\"} },\n     { \"keys\": [\"shift+tab\"], \"command\": \"unindent\", \"context\":\n          [\n               { \"key\": \"setting.shift_tab_unindent\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"shift+tab\"], \"command\": \"unindent\", \"context\":\n          [\n               { \"key\": \"preceding_text\", \"operator\": \"regex_match\", \"operand\": \"^[\\t ]*\" }\n          ]\n     },\n     { \"keys\": [\"shift+tab\"], \"command\": \"unindent\", \"context\":\n          [\n               { \"key\": \"text\", \"operator\": \"regex_contains\", \"operand\": \"\\n\" }\n          ]\n     },\n     { \"keys\": [\"shift+tab\"], \"command\": \"prev_field\", \"context\":\n          [\n               { \"key\": \"has_prev_field\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n\n     { \"keys\": [\"super+l\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"line\"} },\n     { \"keys\": [\"super+d\"], \"command\": \"find_under_expand\" },\n     { \"keys\": [\"super+k\", \"super+d\"], \"command\": \"find_under_expand_skip\" },\n     { \"keys\": [\"super+shift+space\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"scope\"} },\n     { \"keys\": [\"ctrl+shift+m\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"brackets\"} },\n     { \"keys\": [\"ctrl+m\"], \"command\": \"move_to\", \"args\": {\"to\": \"brackets\"} },\n     { \"keys\": [\"super+shift+j\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"indentation\"} },\n     { \"keys\": [\"super+shift+a\"], \"command\": \"expand_selection\", \"args\": {\"to\": \"tag\"} },\n\n     { \"keys\": [\"super+alt+.\"], \"command\": \"close_tag\" },\n\n     { \"keys\": [\"ctrl+q\"], \"command\": \"toggle_record_macro\" },\n     { \"keys\": [\"ctrl+shift+q\"], \"command\": \"run_macro\" },\n\n     { \"keys\": [\"super+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Add Line.sublime-macro\"} },\n     { \"keys\": [\"super+shift+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Add Line Before.sublime-macro\"} },\n     { \"keys\": [\"enter\"], \"command\": \"commit_completion\", \"context\":\n          [\n               { \"key\": \"auto_complete_visible\" },\n               { \"key\": \"setting.auto_complete_commit_on_tab\", \"operand\": false }\n          ]\n     },\n\n     { \"keys\": [\"super+t\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"show_files\": true} },\n     { \"keys\": [\"super+p\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"show_files\": true} },\n     { \"keys\": [\"super+shift+p\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"command_palette\"} },\n     { \"keys\": [\"super+ctrl+p\"], \"command\": \"prompt_select_project\" },\n     { \"keys\": [\"super+r\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"text\": \"@\"} },\n     { \"keys\": [\"ctrl+g\"], \"command\": \"show_overlay\", \"args\": {\"overlay\": \"goto\", \"text\": \":\"} },\n\n     { \"keys\": [\"super+i\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"incremental_find\", \"reverse\":false} },\n     { \"keys\": [\"super+shift+i\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"incremental_find\", \"reverse\":true} },\n     { \"keys\": [\"super+f\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"find\"} },\n     { \"keys\": [\"super+alt+f\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"replace\"} },\n     { \"keys\": [\"super+alt+e\"], \"command\": \"replace_next\" },\n     { \"keys\": [\"super+g\"], \"command\": \"find_next\" },\n     { \"keys\": [\"super+shift+g\"], \"command\": \"find_prev\" },\n     { \"keys\": [\"super+e\"], \"command\": \"slurp_find_string\" },\n     { \"keys\": [\"super+shift+e\"], \"command\": \"slurp_replace_string\" },\n\n     { \"keys\": [\"alt+super+g\"], \"command\": \"find_under\" },\n     { \"keys\": [\"shift+alt+super+g\"], \"command\": \"find_under_prev\" },\n     { \"keys\": [\"ctrl+super+g\"], \"command\": \"find_all_under\" },\n\n     { \"keys\": [\"super+shift+f\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"find_in_files\"} },\n     { \"keys\": [\"f4\"], \"command\": \"next_result\" },\n     { \"keys\": [\"shift+f4\"], \"command\": \"prev_result\" },\n\n     { \"keys\": [\"f6\"], \"command\": \"toggle_setting\", \"args\": {\"setting\": \"spell_check\"} },\n     { \"keys\": [\"ctrl+f6\"], \"command\": \"next_misspelling\" },\n     { \"keys\": [\"ctrl+shift+f6\"], \"command\": \"prev_misspelling\" },\n\n     { \"keys\": [\"ctrl+super+up\"], \"command\": \"swap_line_up\" },\n     { \"keys\": [\"ctrl+super+down\"], \"command\": \"swap_line_down\" },\n\n     { \"keys\": [\"ctrl+backspace\"], \"command\": \"delete_word\", \"args\": { \"forward\": false, \"sub_words\": true } },\n     { \"keys\": [\"ctrl+delete\"], \"command\": \"delete_word\", \"args\": { \"forward\": true, \"sub_words\": true } },\n\n     { \"keys\": [\"super+forward_slash\"], \"command\": \"toggle_comment\", \"args\": { \"block\": false } },\n     { \"keys\": [\"super+alt+forward_slash\"], \"command\": \"toggle_comment\", \"args\": { \"block\": true } },\n\n     { \"keys\": [\"super+j\"], \"command\": \"join_lines\" },\n     { \"keys\": [\"super+shift+d\"], \"command\": \"duplicate_line\" },\n\n     { \"keys\": [\"ctrl+backquote\"], \"command\": \"show_panel\", \"args\": {\"panel\": \"console\", \"toggle\": true} },\n\n     { \"keys\": [\"ctrl+space\"], \"command\": \"auto_complete\" },\n     { \"keys\": [\"ctrl+space\"], \"command\": \"replace_completion_with_auto_complete\", \"context\":\n          [\n               { \"key\": \"last_command\", \"operator\": \"equal\", \"operand\": \"insert_best_completion\" },\n               { \"key\": \"auto_complete_visible\", \"operator\": \"equal\", \"operand\": false },\n               { \"key\": \"setting.tab_completion\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n\n     { \"keys\": [\"super+alt+p\"], \"command\": \"show_scope_name\" },\n     { \"keys\": [\"ctrl+shift+p\"], \"command\": \"show_scope_name\" },\n\n     { \"keys\": [\"f7\"], \"command\": \"build\" },\n     { \"keys\": [\"super+b\"], \"command\": \"build\" },\n     { \"keys\": [\"super+shift+b\"], \"command\": \"build\", \"args\": {\"variant\": \"Run\"} },\n\n     { \"keys\": [\"ctrl+t\"], \"command\": \"transpose\" },\n\n     { \"keys\": [\"f5\"], \"command\": \"sort_lines\", \"args\": {\"case_sensitive\": false} },\n     { \"keys\": [\"ctrl+f5\"], \"command\": \"sort_lines\", \"args\": {\"case_sensitive\": true} },\n\n     // Auto-pair quotes\n     { \"keys\": [\"\\\"\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\\"$0\\\"\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|>|$)\", \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"[\\\"a-zA-Z0-9_]$\", \"match_all\": true },\n               { \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.double\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"\\\"\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"\\\"${0:$SELECTION}\\\"\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"\\\"\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\"\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\"$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\"\", \"match_all\": true }\n          ]\n     },\n\n     // Auto-pair single quotes\n     { \"keys\": [\"'\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"'$0'\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|>|$)\", \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"not_regex_contains\", \"operand\": \"['a-zA-Z0-9_]$\", \"match_all\": true },\n               { \"key\": \"eol_selector\", \"operator\": \"not_equal\", \"operand\": \"string.quoted.single\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"'\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"'${0:$SELECTION}'\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"'\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^'\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"'$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^'\", \"match_all\": true }\n          ]\n     },\n\n     // Auto-pair brackets\n     { \"keys\": [\"(\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"($0)\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|;|\\\\}|$)\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"(\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"(${0:$SELECTION})\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\")\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\)\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\($\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\)\", \"match_all\": true }\n          ]\n     },\n\n     // Auto-pair square brackets\n     { \"keys\": [\"[\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"[$0]\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|;|\\\\}|$)\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"[\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"[${0:$SELECTION}]\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"]\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\]\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\[$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\]\", \"match_all\": true }\n          ]\n     },\n\n     // Auto-pair curly brackets\n     { \"keys\": [\"{\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"{$0}\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^(?:\\t| |\\\\)|]|\\\\}|$)\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"{\"], \"command\": \"insert_snippet\", \"args\": {\"contents\": \"{${0:$SELECTION}}\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": false, \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"}\"], \"command\": \"move\", \"args\": {\"by\": \"characters\", \"forward\": true}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Left Right.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_match_enabled\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\{$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n          ]\n     },\n\n     { \"keys\": [\"enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Add Line in Braces.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\{$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n          ]\n     },\n     { \"keys\": [\"shift+enter\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Add Line in Braces.sublime-macro\"}, \"context\":\n          [\n               { \"key\": \"setting.auto_indent\", \"operator\": \"equal\", \"operand\": true },\n               { \"key\": \"selection_empty\", \"operator\": \"equal\", \"operand\": true, \"match_all\": true },\n               { \"key\": \"preceding_text\", \"operator\": \"regex_contains\", \"operand\": \"\\\\{$\", \"match_all\": true },\n               { \"key\": \"following_text\", \"operator\": \"regex_contains\", \"operand\": \"^\\\\}\", \"match_all\": true }\n          ]\n     },\n\n     {\n          \"keys\": [\"super+alt+1\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 1.0],\n               \"rows\": [0.0, 1.0],\n               \"cells\": [[0, 0, 1, 1]]\n          }\n     },\n     {\n          \"keys\": [\"super+alt+2\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 0.5, 1.0],\n               \"rows\": [0.0, 1.0],\n               \"cells\": [[0, 0, 1, 1], [1, 0, 2, 1]]\n          }\n     },\n     {\n          \"keys\": [\"super+alt+3\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 0.33, 0.66, 1.0],\n               \"rows\": [0.0, 1.0],\n               \"cells\": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1]]\n          }\n     },\n     {\n          \"keys\": [\"super+alt+4\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 0.25, 0.5, 0.75, 1.0],\n               \"rows\": [0.0, 1.0],\n               \"cells\": [[0, 0, 1, 1], [1, 0, 2, 1], [2, 0, 3, 1], [3, 0, 4, 1]]\n          }\n     },\n     {\n          \"keys\": [\"super+alt+shift+2\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 1.0],\n               \"rows\": [0.0, 0.5, 1.0],\n               \"cells\": [[0, 0, 1, 1], [0, 1, 1, 2]]\n          }\n     },\n     {\n          \"keys\": [\"super+alt+shift+3\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 1.0],\n               \"rows\": [0.0, 0.33, 0.66, 1.0],\n               \"cells\": [[0, 0, 1, 1], [0, 1, 1, 2], [0, 2, 1, 3]]\n          }\n     },\n     {\n          \"keys\": [\"super+alt+5\"],\n          \"command\": \"set_layout\",\n          \"args\":\n          {\n               \"cols\": [0.0, 0.5, 1.0],\n               \"rows\": [0.0, 0.5, 1.0],\n               \"cells\":\n               [\n                    [0, 0, 1, 1], [1, 0, 2, 1],\n                    [0, 1, 1, 2], [1, 1, 2, 2]\n               ]\n          }\n     },\n     { \"keys\": [\"ctrl+1\"], \"command\": \"focus_group\", \"args\": { \"group\": 0 } },\n     { \"keys\": [\"ctrl+2\"], \"command\": \"focus_group\", \"args\": { \"group\": 1 } },\n     { \"keys\": [\"ctrl+3\"], \"command\": \"focus_group\", \"args\": { \"group\": 2 } },\n     { \"keys\": [\"ctrl+4\"], \"command\": \"focus_group\", \"args\": { \"group\": 3 } },\n     { \"keys\": [\"ctrl+shift+1\"], \"command\": \"move_to_group\", \"args\": { \"group\": 0 } },\n     { \"keys\": [\"ctrl+shift+2\"], \"command\": \"move_to_group\", \"args\": { \"group\": 1 } },\n     { \"keys\": [\"ctrl+shift+3\"], \"command\": \"move_to_group\", \"args\": { \"group\": 2 } },\n     { \"keys\": [\"ctrl+shift+4\"], \"command\": \"move_to_group\", \"args\": { \"group\": 3 } },\n     { \"keys\": [\"ctrl+0\"], \"command\": \"focus_side_bar\" },\n\n     { \"keys\": [\"super+1\"], \"command\": \"select_by_index\", \"args\": { \"index\": 0 } },\n     { \"keys\": [\"super+2\"], \"command\": \"select_by_index\", \"args\": { \"index\": 1 } },\n     { \"keys\": [\"super+3\"], \"command\": \"select_by_index\", \"args\": { \"index\": 2 } },\n     { \"keys\": [\"super+4\"], \"command\": \"select_by_index\", \"args\": { \"index\": 3 } },\n     { \"keys\": [\"super+5\"], \"command\": \"select_by_index\", \"args\": { \"index\": 4 } },\n     { \"keys\": [\"super+6\"], \"command\": \"select_by_index\", \"args\": { \"index\": 5 } },\n     { \"keys\": [\"super+7\"], \"command\": \"select_by_index\", \"args\": { \"index\": 6 } },\n     { \"keys\": [\"super+8\"], \"command\": \"select_by_index\", \"args\": { \"index\": 7 } },\n     { \"keys\": [\"super+9\"], \"command\": \"select_by_index\", \"args\": { \"index\": 8 } },\n     { \"keys\": [\"super+0\"], \"command\": \"select_by_index\", \"args\": { \"index\": 9 } },\n\n     { \"keys\": [\"f2\"], \"command\": \"next_bookmark\" },\n     { \"keys\": [\"shift+f2\"], \"command\": \"prev_bookmark\" },\n     { \"keys\": [\"super+f2\"], \"command\": \"toggle_bookmark\" },\n     { \"keys\": [\"super+shift+f2\"], \"command\": \"clear_bookmarks\" },\n     { \"keys\": [\"alt+f2\"], \"command\": \"select_all_bookmarks\" },\n\n     { \"keys\": [\"super+k\", \"super+u\"], \"command\": \"upper_case\" },\n     { \"keys\": [\"super+k\", \"super+l\"], \"command\": \"lower_case\" },\n     { \"keys\": [\"super+k\", \"super+space\"], \"command\": \"set_mark\" },\n     { \"keys\": [\"super+k\", \"super+a\"], \"command\": \"select_to_mark\" },\n     { \"keys\": [\"super+k\", \"super+w\"], \"command\": \"delete_to_mark\" },\n     { \"keys\": [\"super+k\", \"super+x\"], \"command\": \"swap_with_mark\" },\n     { \"keys\": [\"super+k\", \"super+g\"], \"command\": \"clear_bookmarks\", \"args\": {\"name\": \"mark\"} },\n\n     { \"keys\": [\"super+plus\"], \"command\": \"increase_font_size\" },\n     { \"keys\": [\"super+equals\"], \"command\": \"increase_font_size\" },\n     { \"keys\": [\"super+minus\"], \"command\": \"decrease_font_size\" },\n\n     { \"keys\": [\"ctrl+shift+w\"], \"command\": \"insert_snippet\", \"args\": { \"name\": \"Packages/XML/long-tag.sublime-snippet\" } },\n\n     { \"keys\": [\"ctrl+shift+k\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete Line.sublime-macro\"} },\n\n     { \"keys\": [\"super+alt+q\"], \"command\": \"wrap_lines\" },\n\n     { \"keys\": [\"super+alt+[\"], \"command\": \"fold\" },\n     { \"keys\": [\"super+alt+]\"], \"command\": \"unfold\" },\n     { \"keys\": [\"super+k\", \"super+1\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 1} },\n     { \"keys\": [\"super+k\", \"super+2\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 2} },\n     { \"keys\": [\"super+k\", \"super+3\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 3} },\n     { \"keys\": [\"super+k\", \"super+4\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 4} },\n     { \"keys\": [\"super+k\", \"super+5\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 5} },\n     { \"keys\": [\"super+k\", \"super+6\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 6} },\n     { \"keys\": [\"super+k\", \"super+7\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 7} },\n     { \"keys\": [\"super+k\", \"super+8\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 8} },\n     { \"keys\": [\"super+k\", \"super+9\"], \"command\": \"fold_by_level\", \"args\": {\"level\": 9} },\n     { \"keys\": [\"super+k\", \"super+0\"], \"command\": \"unfold_all\" },\n     { \"keys\": [\"super+k\", \"super+j\"], \"command\": \"unfold_all\" },\n     { \"keys\": [\"super+k\", \"super+t\"], \"command\": \"fold_tag_attributes\" },\n\n     { \"keys\": [\"super+alt+o\"], \"command\": \"toggle_overwrite\" },\n\n     { \"keys\": [\"alt+f2\"], \"command\": \"context_menu\" },\n\n     { \"keys\": [\"super+alt+c\"], \"command\": \"toggle_case_sensitive\", \"context\":\n          [\n               { \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"super+alt+r\"], \"command\": \"toggle_regex\", \"context\":\n          [\n               { \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"super+alt+w\"], \"command\": \"toggle_whole_word\", \"context\":\n          [\n               { \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n     { \"keys\": [\"super+alt+a\"], \"command\": \"toggle_preserve_case\", \"context\":\n          [\n               { \"key\": \"setting.is_widget\", \"operator\": \"equal\", \"operand\": true }\n          ]\n     },\n\n     // Find panel key bindings\n     { \"keys\": [\"enter\"], \"command\": \"find_next\", \"context\":\n          [{\"key\": \"panel\", \"operand\": \"find\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"shift+enter\"], \"command\": \"find_prev\", \"context\":\n          [{\"key\": \"panel\", \"operand\": \"find\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"alt+enter\"], \"command\": \"find_all\", \"args\": {\"close_panel\": true},\n           \"context\": [{\"key\": \"panel\", \"operand\": \"find\"}, {\"key\": \"panel_has_focus\"}]\n     },\n\n     // Replace panel key bindings\n     { \"keys\": [\"enter\"], \"command\": \"find_next\", \"context\":\n          [{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"shift+enter\"], \"command\": \"find_prev\", \"context\":\n          [{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"alt+enter\"], \"command\": \"find_all\", \"args\": {\"close_panel\": true},\n          \"context\": [{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"ctrl+alt+enter\"], \"command\": \"replace_all\", \"args\": {\"close_panel\": true},\n           \"context\": [{\"key\": \"panel\", \"operand\": \"replace\"}, {\"key\": \"panel_has_focus\"}]\n     },\n\n     // Incremental find panel key bindings\n     { \"keys\": [\"enter\"], \"command\": \"hide_panel\", \"context\":\n          [{\"key\": \"panel\", \"operand\": \"incremental_find\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"shift+enter\"], \"command\": \"find_prev\", \"context\":\n          [{\"key\": \"panel\", \"operand\": \"incremental_find\"}, {\"key\": \"panel_has_focus\"}]\n     },\n     { \"keys\": [\"alt+enter\"], \"command\": \"find_all\", \"args\": {\"close_panel\": true},\n          \"context\": [{\"key\": \"panel\", \"operand\": \"incremental_find\"}, {\"key\": \"panel_has_focus\"}]\n     },\n\n     { \"keys\": [\"super+,\"], \"command\": \"open_file\", \"args\": {\"file\": \"${packages}/User/Preferences.sublime-settings\"} },\n\n     { \"keys\": [\"super+k\", \"super+y\"], \"command\": \"yank\" },\n     { \"keys\": [\"super+k\", \"super+k\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete to Hard EOL.sublime-macro\"} },\n     { \"keys\": [\"super+k\", \"super+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete to Hard BOL.sublime-macro\"} },\n     { \"keys\": [\"super+k\", \"super+c\"], \"command\": \"show_at_center\" },\n\n     // These are OS X built in commands, and don't need to be listed here, but\n     // doing so lets them show up in the menu\n     { \"keys\": [\"ctrl+y\"], \"command\": \"yank\" },\n     { \"keys\": [\"super+backspace\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete to Hard BOL.sublime-macro\"} },\n     // super+delete isn't a built in command, but makes sense anyway\n     { \"keys\": [\"super+delete\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete to Hard EOL.sublime-macro\"} },\n     { \"keys\": [\"ctrl+k\"], \"command\": \"run_macro_file\", \"args\": {\"file\": \"Packages/Default/Delete to Hard EOL.sublime-macro\"} },\n     { \"keys\": [\"ctrl+l\"], \"command\": \"show_at_center\" },\n     { \"keys\": [\"ctrl+o\"], \"command\": \"insert_snippet\", \"args\": { \"contents\": \"$0\\n\" } },\n     { \"keys\": [\"ctrl+super+d\"], \"command\": \"noop\" },\n     { \"keys\": [\"ctrl+super+shift+d\"], \"command\": \"noop\" }\n]\n```\n", "tags": ["tmux", "vimrc", "zshrc", "Emacs", "SublimeText"]}