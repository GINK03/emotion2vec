{"context": "\u524d\u56de\u306e\u7d9a\u304d\nAWS Lamdba\u3068API Gateway\u3067Web\u306e\u4e2d\u9593\u5c64\u304c\u7c21\u5358\u306b\u4f5c\u308c\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u3061\u3087\u3063\u3068\u904a\u3093\u3067\u307f\u308b\u3053\u3068\u306b\u3057\u305f\n\u8a00\u8a9e\u306f\u4eca\u56de\u3082Scala\u3067\u5b9f\u88c5\n\n\u4eca\u56de\u306e\u4ed5\u69d8\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30d7\u30ed\u30ad\u30b7\u3063\u307d\u3044API Gateway\u7d4c\u7531\u3067\u4efb\u610f\u306eWeb\u30da\u30fc\u30b8\u306eURL\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u5185\u5bb9\u3092\u30ae\u30e3\u30eb\u6587\u5b57\u306b\u5909\u63db\u3057\u3066\u8868\u793a\u3059\u308b\ngalogo-filter(url) -> \u30ae\u30e3\u30eb\u6587\u5b57\u5316\u3055\u308c\u305fHTML\u30da\u30fc\u30b8\n\n\u30ae\u30e3\u30eb\u6587\u5b57\u3068\u306f\ngalmoji(\"\u3053\u3093\u306b\u3061\u306f\") == \"\u3013\u03c9(\uff86\u5e72l\uffe1\"\n\u3061\u3087\u3063\u3068\u6614\u306b\u6d41\u884c\u3063\u305f\u3089\u3057\u3044\n\u8a73\u7d30\u306fWikipedia\u53c2\u7167\n\u610f\u5916\u3068\u6df1\u3044\n\u9762\u5012\u306a\u306e\u3067\u3072\u3089\u304c\u306a\u3060\u3051\u3084\u308b\n\n\u5358\u7d14\u306a\u30d7\u30ed\u30ad\u30b7\u306e\u4f5c\u6210\nproxy(url)\n\u6e21\u3055\u308c\u305furl\u3092GET\u3057\u3066\u305d\u306e\u307e\u307e\u8fd4\u3059\u3068\u3069\u3046\u306a\u308b\u304b\n\nsrc/main/scala/filter/HtmlFilter.scala\npackage filter\n\ntrait HtmlFilterBase {\n  import io.Source\n  // \u30c6\u30b9\u30c8\u6642\u306f\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\uff08\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3068\u304b\u30d7\u30ed\u30ad\u30b7\u4f7f\u3046\u3068\u304d\u3068\u304b\uff09\n  def fromURL(url: String, encode: String = \"UTF-8\") = Source.fromURL(url, encode)\n\n  def proxy(url: String) = {\n    fromURL(url).mkString\n  }\n}\n\nclass HtmlFilter extends HtmlFilterBase\n\n\n\u6ce8 \uff1a \u30e9\u30e0\u30c0\u95a2\u6570\u306e\u6700\u7d42\u5f15\u6570\u306ecom.amazonaws.services.lambda.runtime.Context\u306f\u7701\u3044\u3066\u3082\u3088\u3044\u3088\u3046\u306a\u306e\u3067\u4eca\u56de\u304b\u3089\u7701\u3044\u305f\u3002\u8981\u308b\u3068\u304d\u3060\u3051\u3064\u3051\u308b\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u3092AWS Lambda\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3001APIGateway\u306b\u3066\u516c\u958b\n\n\u524d\u56de\u3068\u540c\u69d8\u306e\u4e0a\u8a18\u4fee\u6b63\u3092\u3057\u3066prod\u306b\u518d\u30c7\u30d7\u30ed\u30a4\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u524d\u56de\u8a18\u4e8b\u306eURL\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\nhttps://hogehoge.execute-api.ap-northeast-1.amazonaws.com/prod/proxy?url=http://qiita.com/bakenezumi/items/4026bbd4117be598a251\n(hogehoge\u306f\u5185\u7dd2)\n\n\u5931\u6557\n\nContent-Type\u304c application/json\u306b\u306a\u3063\u3066\u308b\n\u4eca\u307e\u3067\u3055\u308f\u3063\u3066\u306a\u304b\u3063\u305f\u300c\u30e1\u30bd\u30c3\u30c9\u30ec\u30b9\u30dd\u30f3\u30b9\u300d\u3067http\u30d8\u30c3\u30c0\u30fc\u3092\u3044\u3058\u308c\u308b\u3088\u3046\u306a\u306e\u3067\u4fee\u6b63\u3059\u308b\n\n\u518d\u30c7\u30d7\u30ed\u30a4\u5f8c\n\ntext/html\u306b\u306f\u306a\u3063\u305f\u3051\u3069\u304f\u305a\u308c\u305f\n\u3067\u3059\u3088\u306d..\n\n\u4ed6\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u53c2\u7167\u306e\u76f8\u5bfe\u30d1\u30b9\u3092\u7d76\u5bfe\u30d1\u30b9\u306b\u5909\u63db\nabsolute-filter(url)\n\u753b\u50cf\u3001js\u3001css\u3068\u3044\u3063\u305f\u4ed6\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u53c2\u7167\u65b9\u6cd5\u306b\u306f\u7d76\u5bfe\u53c2\u7167\u3068\u76f8\u5bfe\u53c2\u7167\u306e\uff12\u3064\u306e\u65b9\u6cd5\u304c\u3042\u308b\u304c\u3001\n\n\u7d76\u5bfe\u53c2\u7167: <link href=\"http:/hogehoge.com/fugafuga.css\" />\n\n\u76f8\u5bfe\u53c2\u7167: <link href=\"/fugafuga.css\" />\n\n\n\u76f8\u5bfe\u53c2\u7167\u306e\u5834\u5408\u4eca\u56de\u306e\u30d5\u30a3\u30eb\u30bf\u3092\u901a\u3059\u3068\u30db\u30b9\u30c8\u304cAWS\u306eAPIGateway\u306b\u306a\u308b\u305f\u3081\u3001\u3042\u305f\u308a\u307e\u3048\u3060\u304c\u898b\u3064\u304b\u3089\u306a\u3044\n\u306a\u306e\u3067\u5168\u3066\u306e\u30ea\u30f3\u30af\u3092\u7d76\u5bfe\u53c2\u7167\u306b\u76f4\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b\n\u6b63\u898f\u8868\u73fe\u3092\u99c6\u4f7f\u3057\u3066\u9811\u5f35\u308d\u3046\u304b\u3068\u3082\u601d\u3063\u305f\u304c\u3001\n\u300cJsoup\u300d\u3068\u3044\u3046Java\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3046\u307e\u3044\u5177\u5408\u306b\u3084\u3063\u3066\u304f\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3092Google\u5148\u751f\u304c\u6559\u3048\u3066\u304f\u308c\u305f\u306e\u3067\u305d\u308c\u3092\u4f7f\u3063\u305f\n\nsrc/main/scala/filter/HtmlFilter.scala(\u8ffd\u52a0)\n  def absoluteFilter(url: String) = {\n    import scala.collection.JavaConverters._\n    import org.jsoup.Jsoup\n    val doc = Jsoup.connect(url).get\n    for (e <- doc.select(\"link\").asScala) e.attr(\"href\", e.absUrl(\"href\"))\n    for (e <- doc.select(\"script\").asScala) e.attr(\"src\", e.absUrl(\"src\"))\n    for (e <- doc.select(\"a\").asScala) e.attr(\"href\", e.absUrl(\"href\"))\n    for (e <- doc.select(\"img\").asScala) e.attr(\"src\", e.absUrl(\"src\"))\n    doc.toString\n  }\n\n\nScala\u3067\u3042\u308b\u5fc5\u8981\u304c\u306a\u3044\u3068\u3044\u3046\u7a81\u3063\u8fbc\u307f\u306f\u7121\u3057\u3067\nLambda\u4e0a\u3052\u3066API Gateway\u3068\u3064\u306a\u3044\u3067\u3055\u3063\u304d\u3068\u540c\u3058\u8a2d\u5b9a\u3092\u3057\u3066\u30c7\u30d7\u30ed\u30a4\nhttps://hogehoge.execute-api.ap-northeast-1.amazonaws.com/prod/absolute-filter?url=http://qiita.com/bakenezumi/items/4026bbd4117be598a251\n\n\u30d5\u30a1\u30d3\u30b3\u30f3\u306f\u3067\u305f\u3051\u3069\u5185\u5bb9\u306f\u5909\u308f\u3089\u305a\n\u307e\u3060\u8db3\u308a\u306a\u3044\n\u306a\u3093\u304bChrome\u304c\u6012\u3063\u3066\u308b\n\u66f0\u304f\nMixed Content: The page at 'https://hogehoge.execute-api.ap-northeast-1.amazonaws.com/prod/proxy?url=http://qiita.com/bakenezumi/items/4026bbd4117be598a251' was loaded over HTTPS, but requested an insecure stylesheet 'http://cdn.qiita.com/assets/application-e985a098a72f1b0e009b75feaa8a3df6df3339d3a8b80b7b6d518b66da3c5b44.css'. This request has been blocked; the content must be served over HTTPS.\nhttps\u306e\u30b5\u30a4\u30c8\u304b\u3089http\u306e\u30b5\u30a4\u30c8\u3078\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3001\u53ca\u3073\u30b9\u30bf\u30a4\u30eb\u30b7\u30fc\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u5371\u967a\u3060\u304b\u3089\u3067\u304d\u306a\u3044\u3068\u306e\u3053\u3068\n\u305d\u308a\u3083\u305d\u3046\u3060\n\n\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u5bfe\u5fdc\nabsolute-filter(url)\u306e\u4fee\u6b63\n\u3081\u3052\u305a\u306b\u304c\u3093\u3070\u3063\u305f\n\nsrc/main/scala/filter/HtmlFilter.scala(\u4fee\u6b63)\n  val proxyUrl = \"./proxy?url=\"\n  def absoluteFilter(url: String) = {\n    import scala.collection.JavaConverters._\n    import org.jsoup.Jsoup\n\n    val doc = Jsoup.connect(url).get\n    // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u56de\u907f\u306e\u305f\u3081\u306bproxy\u3092\u4ecb\u3059\n    for (e <- doc.select(\"link\").asScala) if (e.attr(\"href\") != \"\") e.attr(\"href\", proxyUrl + e.absUrl(\"href\"))\n    // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u56de\u907f\u306e\u305f\u3081\u306bproxy\u3092\u4ecb\u3059\n    for (e <- doc.select(\"script\").asScala) if (e.attr(\"src\") != \"\") e.attr(\"src\", proxyUrl + e.absUrl(\"src\"))\n    for (e <- doc.select(\"a\").asScala) e.attr(\"href\", proxyUrl + e.absUrl(\"href\"))\n    for (e <- doc.select(\"img\").asScala) e.attr(\"src\", e.absUrl(\"src\"))\n    doc.toString\n  }\n\n\n\u3088\u3046\u306f\u3001\u4ed6\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u7d76\u5bfe\u30ea\u30f3\u30af\u306b\u5f53\u8a18\u4e8b\u6700\u521d\u306eproxy\u30e9\u30e0\u30c0\u3092\u304b\u307e\u3059\u3053\u3068\u3067\u7121\u7406\u3084\u308a\u540c\u4e00\u30b5\u30a4\u30c8\u3068\u307f\u306a\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u305f\n<link href=\"./proxy?url=http:/hogehoge.com/fugafuga.css\" />\nproxy\u3068\u3053\u306eabsolute-filter\u306f\u540c\u4e00\u306eAPI name\u306b\u914d\u7f6e\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\n\u7570\u306a\u308bAPI name\u3060\u3068host\u540d\u304c\u5909\u308f\u308b\n\u3093\u3067\u3001\u518d\u8868\u793a\n\u7d50\u679c\u3001\u3001\u30a8\u30e9\u30fc\u306f\u6e1b\u3063\u305f\u3051\u3069\u51fa\u529b\u5909\u308f\u3089\u305a\u3001\u3001\uff08\u753b\u50cf\u7701\u7565\uff09\n\u4e00\u90e8\u306ecss\u3068js\u306e\u5185\u5bb9\u304c\u3001\n{errorMessage=Input length = 1, errorType=java.nio.charset.MalformedInputException, stackTrace=[\"java.nio.charset.CoderResult.throwException(CoderResult.java:281)\",\"sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:339)\",\"sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)\",\"java.io.InputStreamReader.read(InputStreamReader.java:184)\",\"java.io.BufferedReader.read1(BufferedReader.java:210)\",\"java.io.BufferedReader.read(BufferedReader.java:286)\",\"java.io.Reader.read(Reader.java:140)\",\"scala.io.BufferedSource.mkString(BufferedSource.scala:96)\",\"filter.HtmlFilterBase$class.proxy(HtmlFilter.scala:9)\",\"filter.HtmlFilter.proxy(HtmlFilter.scala:14)\",\"sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\",\"sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\",\"sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\",\"java.lang.reflect.Method.invoke(Method.java:498)\"]}\n\u3053\u3093\u306a\u30e9\u30e0\u30c0\u304b\u3089\u306e\u30a8\u30e9\u30fc\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9JSON\u304c\u8fd4\u3063\u3066\u304d\u3066\u308b\u3053\u3068\u304c\u308f\u304b\u308b\n\nproxy\u306egzip\u5bfe\u5fdc\nproxy(url)\u306e(\u4fee\u6b63)\n\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305fjs\u306e\u5b9f\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u78ba\u8a8d\u3059\u308b\u3068gzip\u5316\u3055\u308c\u3066\u305f\n\u306a\u306e\u3067\u89e3\u51cd\u3059\u308b\nEncoding\u306e\u898b\u65b9\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u5931\u6557\u3057\u305f\u3089\u89e3\u51cd\u3059\u308b\u3088\u3046\u306b\u3057\u305f\n\u89e3\u51cd\u306e\u4ed5\u65b9\u306fxuwei\u3055\u3093\u304c\u30e1\u30e2\u3063\u3066\u305f\n\nsrc/main/scala/filter/HtmlFilter.scala(\u4fee\u6b63)\n  def fromURL(url: String, encode: String = \"UTF-8\") = Source.fromURL(url, encode)\n  def fromGzip(url: String, encode:String = \"UTF-8\" ) = {\n    import java.net.URL\n    import java.io.BufferedInputStream\n    import java.util.zip.GZIPInputStream\n    Source.fromInputStream(\n      new GZIPInputStream(\n        new BufferedInputStream(\n           new URL(url).openStream()\n        )\n      ), encode)\n  }\n  def proxy(url: String) = {\n    try {\n      fromURL(url).mkString\n    } catch {\n      case _: java.nio.charset.MalformedInputException => fromGzip(url).mkString\n      case e => throw e\n    }\n  }\n\n\n\u3069\u304d\u3069\u304d\u3057\u306a\u304c\u3089\u518d\u8868\u793a\n\n\u30ed\u30b4\u304c\u3067\u305f\uff01\n\u3061\u304c\u3046\u3001\u305d\u3046\u3058\u3083\u306a\u3044\n\nCSS\u7528\u306e\u30d7\u30ed\u30ad\u30b7\u6e96\u5099\ncss-proxy(url)\u306e\u8ffd\u52a0\nabsolute-filter(url)\u306e\u4fee\u6b63\nCSS\u306f\u3069\u3046\u3082Content-Type\u3092text/css\u3067\u8fd4\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u305d\u308c\u3088\u3046\u306eAPIGateway\u300ccss-proxy\u300d\u3092\u8ffd\u52a0\u3057(Lamda\u306fproxy\u3092\u305d\u306e\u307e\u307e\u5229\u7528)\u3001\u305d\u308c\u306b\u5408\u308f\u305babsolute-filter\u306eLambda\u3092\u4fee\u6b63\n\nsrc/main/scala/filter/HtmlFilter.scala(\u4fee\u6b63)\n  val proxyUrl = \"./proxy?url=\"\n  val cssProxyUrl = \"./css-proxy?url=\"\n  def absoluteFilter(url: String) = {\n    import scala.collection.JavaConverters._\n    import org.jsoup.Jsoup\n\n    val doc = Jsoup.connect(url).get\n    // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u56de\u907f\u306e\u305f\u3081\u306bproxy\u3092\u4ecb\u3059\n    for (e <- doc.select(\"link\").asScala) if (e.attr(\"href\") != \"\") e.attr(\"href\", cssProxyUrl + e.absUrl(\"href\"))\n    // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u56de\u907f\u306e\u305f\u3081\u306bproxy\u3092\u4ecb\u3059\n    for (e <- doc.select(\"script\").asScala) if (e.attr(\"src\") != \"\") e.attr(\"src\", proxyUrl + e.absUrl(\"src\"))\n    for (e <- doc.select(\"a\").asScala) e.attr(\"href\", e.absUrl(\"href\"))\n    for (e <- doc.select(\"img\").asScala) e.attr(\"src\", e.absUrl(\"src\"))\n    doc.toString\n  }\n\n\n\u518d\u8868\u793a\n\n\u3084\u3063\u3068\u51fa\u305f\uff01\uff01\n\u3075\u30fc\u3001\u3001\u75b2\u308c\u305f\n\n\u30ae\u30e3\u30eb\u6587\u5b57\u5909\u63db\ngalgo-filter(url)\n\u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089\u30ae\u30e3\u30eb\u6587\u5b57\u3078\u306e\u5909\u63db\u306f\u7c21\u5358\u3060\u3063\u305f\n\nsrc/main/scala/filter/HtmlFilter.scala(\u8ffd\u52a0)\n  val galMap = Map(\n    ('\u3042' -> \"\u3041\"), ('\u3044' -> \"\uff9a\u30fd\"), ('\u3046' -> \"\u3045\"), ('\u3048' -> \"\u3047\"), ('\u304a' -> \"\u3049\"),\n    ...\n  )\n\n  val galgoUrl = \"./galgo-filter?url=\"\n\n  def galgoFilter(url: String) = {\n    import scala.collection.JavaConverters._\n    import org.jsoup.Jsoup\n\n    val doc = Jsoup.connect(url).get\n    // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u56de\u907f\u306e\u305f\u3081\u306bproxy\u3092\u4ecb\u3059\n    for (e <- doc.select(\"link\").asScala) if (e.attr(\"href\") != \"\") e.attr(\"href\", cssProxyUrl + e.absUrl(\"href\"))\n    // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u56de\u907f\u306e\u305f\u3081\u306bproxy\u3092\u4ecb\u3059\n    for (e <- doc.select(\"script\").asScala) if (e.attr(\"src\") != \"\") e.attr(\"src\", proxyUrl + e.absUrl(\"src\"))\n    // \u30ea\u30f3\u30af\u5148\u3082\u30ae\u30e3\u30eb\u8a9e\uff08\u4f3c\u975e\u518d\u5e30 \u30e2\u30ca\u30c9\u3063\u307d\u3044\uff09\n    for (e <- doc.select(\"a\").asScala) e.attr(\"href\", galgoUrl + e.absUrl(\"href\"))\n    // \u30a4\u30e1\u30fc\u30b8\u306f\u9045\u305d\u3046\u3060\u304b\u3089\u305d\u306e\u307e\u307e\n    for (e <- doc.select(\"img\").asScala) e.attr(\"src\", e.absUrl(\"src\"))\n    doc.toString.flatMap(c =>  galMap.getOrElse(c, c.toString))\n  }\n\n\nLambda\u4f5c\u3063\u3066APIGateway\u8a2d\u5b9a\uff06\u516c\u958b\nhttps://hogehoge.execute-api.ap-northeast-1.amazonaws.com/prod/galgo-filter?url=http://qiita.com/bakenezumi/items/4026bbd4117be598a251\n\u306b\u30a2\u30af\u30bb\u30b9\uff01\n\n\u8aad\u3081\u306a\u3044\u3051\u3069\u6210\u529f\u3057\u305f\u3063\u307d\u3044\uff01\n\u30ae\u30e3\u30eb\u6587\u5b57\u5316\u3055\u308c\u305f\u30da\u30fc\u30b8\u306e\u30ea\u30f3\u30af\u3092\u305f\u3069\u308b\u3068\u305d\u3053\u304b\u3089\u5148\u3082\u30ae\u30e3\u30eb\u6587\u5b57\n\n\u30b3\u30fc\u30c97\u884c\u76ee\u306e\u30b3\u30e1\u30f3\u30c8\u306b\u6ce8\u76ee\n\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\nhttps://github.com/bakenezumi/aws-filter\n\n\u6240\u611f\nWeb\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306b\u3064\u3044\u3066\u8003\u3048\u3055\u305b\u3089\u308c\u305f\n\u5909\u306a\u30b5\u30a4\u30c8\u304b\u3089\u4e0d\u7528\u610f\u306b\u30e1\u30b8\u30e3\u30fc\u30b5\u30a4\u30c8\u306e\u30ea\u30f3\u30af\u5148\u306b\u98db\u3076\u306e\u306f\u5371\u967a\nURL\u306f\u7d76\u5bfe\u78ba\u8a8d\u3057\u3088\u3046\u306d\uff01\n\u3042\u3068\u305d\u308d\u305d\u308d\u624b\u4f5c\u696d\u304c\u304d\u3064\u3044\u306e\u3067\u81ea\u52d5\u5316\u3057\u305f\u3044\n\n\u86c7\u8db3\n\u524d\u56de\u306ejson\u5909\u63db\u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u3082\u3044\u3051\u305f\nhttps://hogehoge.execute-api.ap-northeast-1.amazonaws.com/prod/htmlToJson?url=https://hogehoge.execute-api.ap-northeast-1.amazonaws.com/prod/galgo-filter?url=http://qiita.com/bakenezumi/items/4026bbd4117be598a251\n\n[\u524d\u56de](http://qiita.com/bakenezumi/items/4026bbd4117be598a251)\u306e\u7d9a\u304d\n\nAWS Lamdba\u3068API Gateway\u3067Web\u306e\u4e2d\u9593\u5c64\u304c\u7c21\u5358\u306b\u4f5c\u308c\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u3061\u3087\u3063\u3068\u904a\u3093\u3067\u307f\u308b\u3053\u3068\u306b\u3057\u305f\n\u8a00\u8a9e\u306f\u4eca\u56de\u3082Scala\u3067\u5b9f\u88c5\n\n#\u4eca\u56de\u306e\u4ed5\u69d8\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30d7\u30ed\u30ad\u30b7\u3063\u307d\u3044API Gateway\u7d4c\u7531\u3067\u4efb\u610f\u306eWeb\u30da\u30fc\u30b8\u306eURL\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u5185\u5bb9\u3092\u30ae\u30e3\u30eb\u6587\u5b57\u306b\u5909\u63db\u3057\u3066\u8868\u793a\u3059\u308b\n\n`galogo-filter(url) -> \u30ae\u30e3\u30eb\u6587\u5b57\u5316\u3055\u308c\u305fHTML\u30da\u30fc\u30b8`\n\n#\u30ae\u30e3\u30eb\u6587\u5b57\u3068\u306f\ngalmoji(\"\u3053\u3093\u306b\u3061\u306f\") == \"\u3013\u03c9(\uff86\u5e72l\uffe1\"\n\n\u3061\u3087\u3063\u3068\u6614\u306b\u6d41\u884c\u3063\u305f\u3089\u3057\u3044\n\u8a73\u7d30\u306f[Wikipedia](https://ja.wikipedia.org/wiki/%E3%82%AE%E3%83%A3%E3%83%AB%E6%96%87%E5%AD%97)\u53c2\u7167\n\u610f\u5916\u3068\u6df1\u3044\n\u9762\u5012\u306a\u306e\u3067\u3072\u3089\u304c\u306a\u3060\u3051\u3084\u308b\n\n#\u5358\u7d14\u306a\u30d7\u30ed\u30ad\u30b7\u306e\u4f5c\u6210\n`proxy(url)`\n\n\u6e21\u3055\u308c\u305furl\u3092GET\u3057\u3066\u305d\u306e\u307e\u307e\u8fd4\u3059\u3068\u3069\u3046\u306a\u308b\u304b\n\n```scala:src/main/scala/filter/HtmlFilter.scala\npackage filter\n\ntrait HtmlFilterBase {\n  import io.Source\n  // \u30c6\u30b9\u30c8\u6642\u306f\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3067\u304d\u308b\u3088\u3046\u306b\uff08\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u3068\u304b\u30d7\u30ed\u30ad\u30b7\u4f7f\u3046\u3068\u304d\u3068\u304b\uff09\n  def fromURL(url: String, encode: String = \"UTF-8\") = Source.fromURL(url, encode)\n\n  def proxy(url: String) = {\n    fromURL(url).mkString\n  }\n}\n\nclass HtmlFilter extends HtmlFilterBase\n```\n\u6ce8 \uff1a \u30e9\u30e0\u30c0\u95a2\u6570\u306e\u6700\u7d42\u5f15\u6570\u306ecom.amazonaws.services.lambda.runtime.Context\u306f\u7701\u3044\u3066\u3082\u3088\u3044\u3088\u3046\u306a\u306e\u3067\u4eca\u56de\u304b\u3089\u7701\u3044\u305f\u3002\u8981\u308b\u3068\u304d\u3060\u3051\u3064\u3051\u308b\n\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u3092AWS Lambda\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3001APIGateway\u306b\u3066\u516c\u958b\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/35910/12c51c6d-ba44-691a-f4f0-dd2a2eff7abc.png)\n\n\u524d\u56de\u3068\u540c\u69d8\u306e\u4e0a\u8a18\u4fee\u6b63\u3092\u3057\u3066prod\u306b\u518d\u30c7\u30d7\u30ed\u30a4\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u524d\u56de\u8a18\u4e8b\u306eURL\u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\n\n`https://hogehoge.execute-api.ap-northeast-1.amazonaws.com/prod/proxy?url=http://qiita.com/bakenezumi/items/4026bbd4117be598a251`\n(hogehoge\u306f\u5185\u7dd2)\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/35910/41ecd835-c859-4f6f-680b-009adb04dac6.png)\n\n\u5931\u6557\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/35910/d4720c46-9624-3105-7eb2-453bf4106bf3.png)\n\nContent-Type\u304c `application/json`\u306b\u306a\u3063\u3066\u308b\n\u4eca\u307e\u3067\u3055\u308f\u3063\u3066\u306a\u304b\u3063\u305f\u300c\u30e1\u30bd\u30c3\u30c9\u30ec\u30b9\u30dd\u30f3\u30b9\u300d\u3067http\u30d8\u30c3\u30c0\u30fc\u3092\u3044\u3058\u308c\u308b\u3088\u3046\u306a\u306e\u3067\u4fee\u6b63\u3059\u308b\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/35910/a8f4f30c-e706-48ef-a6b5-7073193ff583.png)\n\n\u518d\u30c7\u30d7\u30ed\u30a4\u5f8c\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/35910/4ac28d15-a8ae-dcfc-551b-09e4988f9a38.png)\n\ntext/html\u306b\u306f\u306a\u3063\u305f\u3051\u3069\u304f\u305a\u308c\u305f\n\u3067\u3059\u3088\u306d..\n\n#\u4ed6\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u53c2\u7167\u306e\u76f8\u5bfe\u30d1\u30b9\u3092\u7d76\u5bfe\u30d1\u30b9\u306b\u5909\u63db\n`absolute-filter(url)`\n\u753b\u50cf\u3001js\u3001css\u3068\u3044\u3063\u305f\u4ed6\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u53c2\u7167\u65b9\u6cd5\u306b\u306f\u7d76\u5bfe\u53c2\u7167\u3068\u76f8\u5bfe\u53c2\u7167\u306e\uff12\u3064\u306e\u65b9\u6cd5\u304c\u3042\u308b\u304c\u3001\n\n- \u7d76\u5bfe\u53c2\u7167: `<link href=\"http:/hogehoge.com/fugafuga.css\" />`\n- \u76f8\u5bfe\u53c2\u7167: `<link href=\"/fugafuga.css\" />`\n\n\u76f8\u5bfe\u53c2\u7167\u306e\u5834\u5408\u4eca\u56de\u306e\u30d5\u30a3\u30eb\u30bf\u3092\u901a\u3059\u3068\u30db\u30b9\u30c8\u304cAWS\u306eAPIGateway\u306b\u306a\u308b\u305f\u3081\u3001\u3042\u305f\u308a\u307e\u3048\u3060\u304c\u898b\u3064\u304b\u3089\u306a\u3044\n\u306a\u306e\u3067\u5168\u3066\u306e\u30ea\u30f3\u30af\u3092\u7d76\u5bfe\u53c2\u7167\u306b\u76f4\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b\n\n\u6b63\u898f\u8868\u73fe\u3092\u99c6\u4f7f\u3057\u3066\u9811\u5f35\u308d\u3046\u304b\u3068\u3082\u601d\u3063\u305f\u304c\u3001\n\u300cJsoup\u300d\u3068\u3044\u3046Java\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3046\u307e\u3044\u5177\u5408\u306b\u3084\u3063\u3066\u304f\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3092Google\u5148\u751f\u304c\u6559\u3048\u3066\u304f\u308c\u305f\u306e\u3067\u305d\u308c\u3092\u4f7f\u3063\u305f\n\n```scala:src/main/scala/filter/HtmlFilter.scala(\u8ffd\u52a0)\n  def absoluteFilter(url: String) = {\n    import scala.collection.JavaConverters._\n    import org.jsoup.Jsoup\n    val doc = Jsoup.connect(url).get\n    for (e <- doc.select(\"link\").asScala) e.attr(\"href\", e.absUrl(\"href\"))\n    for (e <- doc.select(\"script\").asScala) e.attr(\"src\", e.absUrl(\"src\"))\n    for (e <- doc.select(\"a\").asScala) e.attr(\"href\", e.absUrl(\"href\"))\n    for (e <- doc.select(\"img\").asScala) e.attr(\"src\", e.absUrl(\"src\"))\n    doc.toString\n  }\n```\nScala\u3067\u3042\u308b\u5fc5\u8981\u304c\u306a\u3044\u3068\u3044\u3046\u7a81\u3063\u8fbc\u307f\u306f\u7121\u3057\u3067\nLambda\u4e0a\u3052\u3066API Gateway\u3068\u3064\u306a\u3044\u3067\u3055\u3063\u304d\u3068\u540c\u3058\u8a2d\u5b9a\u3092\u3057\u3066\u30c7\u30d7\u30ed\u30a4\n\n`https://hogehoge.execute-api.ap-northeast-1.amazonaws.com/prod/absolute-filter?url=http://qiita.com/bakenezumi/items/4026bbd4117be598a251`\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/35910/f93d30c7-c30d-c8a6-bf08-e9249378a0bd.png)\n\n\u30d5\u30a1\u30d3\u30b3\u30f3\u306f\u3067\u305f\u3051\u3069\u5185\u5bb9\u306f\u5909\u308f\u3089\u305a\n\u307e\u3060\u8db3\u308a\u306a\u3044\n\u306a\u3093\u304bChrome\u304c\u6012\u3063\u3066\u308b\n\u66f0\u304f\n\n`Mixed Content: The page at 'https://hogehoge.execute-api.ap-northeast-1.amazonaws.com/prod/proxy?url=http://qiita.com/bakenezumi/items/4026bbd4117be598a251' was loaded over HTTPS, but requested an insecure stylesheet 'http://cdn.qiita.com/assets/application-e985a098a72f1b0e009b75feaa8a3df6df3339d3a8b80b7b6d518b66da3c5b44.css'. This request has been blocked; the content must be served over HTTPS.`\n\nhttps\u306e\u30b5\u30a4\u30c8\u304b\u3089http\u306e\u30b5\u30a4\u30c8\u3078\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3001\u53ca\u3073\u30b9\u30bf\u30a4\u30eb\u30b7\u30fc\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u5371\u967a\u3060\u304b\u3089\u3067\u304d\u306a\u3044\u3068\u306e\u3053\u3068\n\u305d\u308a\u3083\u305d\u3046\u3060\n\n#\u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u5bfe\u5fdc\n`absolute-filter(url)`\u306e\u4fee\u6b63\n\u3081\u3052\u305a\u306b\u304c\u3093\u3070\u3063\u305f\n\n```scala:src/main/scala/filter/HtmlFilter.scala(\u4fee\u6b63)\n  val proxyUrl = \"./proxy?url=\"\n  def absoluteFilter(url: String) = {\n    import scala.collection.JavaConverters._\n    import org.jsoup.Jsoup\n\n    val doc = Jsoup.connect(url).get\n    // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u56de\u907f\u306e\u305f\u3081\u306bproxy\u3092\u4ecb\u3059\n    for (e <- doc.select(\"link\").asScala) if (e.attr(\"href\") != \"\") e.attr(\"href\", proxyUrl + e.absUrl(\"href\"))\n    // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u56de\u907f\u306e\u305f\u3081\u306bproxy\u3092\u4ecb\u3059\n    for (e <- doc.select(\"script\").asScala) if (e.attr(\"src\") != \"\") e.attr(\"src\", proxyUrl + e.absUrl(\"src\"))\n    for (e <- doc.select(\"a\").asScala) e.attr(\"href\", proxyUrl + e.absUrl(\"href\"))\n    for (e <- doc.select(\"img\").asScala) e.attr(\"src\", e.absUrl(\"src\"))\n    doc.toString\n  }\n```\n\u3088\u3046\u306f\u3001\u4ed6\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u7d76\u5bfe\u30ea\u30f3\u30af\u306b\u5f53\u8a18\u4e8b\u6700\u521d\u306eproxy\u30e9\u30e0\u30c0\u3092\u304b\u307e\u3059\u3053\u3068\u3067\u7121\u7406\u3084\u308a\u540c\u4e00\u30b5\u30a4\u30c8\u3068\u307f\u306a\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u305f\n`<link href=\"./proxy?url=http:/hogehoge.com/fugafuga.css\" />`\nproxy\u3068\u3053\u306eabsolute-filter\u306f\u540c\u4e00\u306eAPI name\u306b\u914d\u7f6e\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\n\u7570\u306a\u308bAPI name\u3060\u3068host\u540d\u304c\u5909\u308f\u308b\n\u3093\u3067\u3001\u518d\u8868\u793a\n\n\u7d50\u679c\u3001\u3001\u30a8\u30e9\u30fc\u306f\u6e1b\u3063\u305f\u3051\u3069\u51fa\u529b\u5909\u308f\u3089\u305a\u3001\u3001\uff08\u753b\u50cf\u7701\u7565\uff09\n\u4e00\u90e8\u306ecss\u3068js\u306e\u5185\u5bb9\u304c\u3001\n\n`{errorMessage=Input length = 1, errorType=java.nio.charset.MalformedInputException, stackTrace=[\"java.nio.charset.CoderResult.throwException(CoderResult.java:281)\",\"sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:339)\",\"sun.nio.cs.StreamDecoder.read(StreamDecoder.java:178)\",\"java.io.InputStreamReader.read(InputStreamReader.java:184)\",\"java.io.BufferedReader.read1(BufferedReader.java:210)\",\"java.io.BufferedReader.read(BufferedReader.java:286)\",\"java.io.Reader.read(Reader.java:140)\",\"scala.io.BufferedSource.mkString(BufferedSource.scala:96)\",\"filter.HtmlFilterBase$class.proxy(HtmlFilter.scala:9)\",\"filter.HtmlFilter.proxy(HtmlFilter.scala:14)\",\"sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\",\"sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\",\"sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\",\"java.lang.reflect.Method.invoke(Method.java:498)\"]}`\n\n\u3053\u3093\u306a\u30e9\u30e0\u30c0\u304b\u3089\u306e\u30a8\u30e9\u30fc\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9JSON\u304c\u8fd4\u3063\u3066\u304d\u3066\u308b\u3053\u3068\u304c\u308f\u304b\u308b\n\n#proxy\u306egzip\u5bfe\u5fdc\n`proxy(url)`\u306e(\u4fee\u6b63)\n\n\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305fjs\u306e\u5b9f\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u78ba\u8a8d\u3059\u308b\u3068gzip\u5316\u3055\u308c\u3066\u305f\n\u306a\u306e\u3067\u89e3\u51cd\u3059\u308b\nEncoding\u306e\u898b\u65b9\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u5931\u6557\u3057\u305f\u3089\u89e3\u51cd\u3059\u308b\u3088\u3046\u306b\u3057\u305f\n\u89e3\u51cd\u306e\u4ed5\u65b9\u306fxuwei\u3055\u3093\u304c[\u30e1\u30e2\u3063\u3066\u305f](http://d.hatena.ne.jp/xuwei/20110207/1297075872)\n\n```scala:src/main/scala/filter/HtmlFilter.scala(\u4fee\u6b63)\n  def fromURL(url: String, encode: String = \"UTF-8\") = Source.fromURL(url, encode)\n  def fromGzip(url: String, encode:String = \"UTF-8\" ) = {\n    import java.net.URL\n    import java.io.BufferedInputStream\n    import java.util.zip.GZIPInputStream\n    Source.fromInputStream(\n      new GZIPInputStream(\n        new BufferedInputStream(\n           new URL(url).openStream()\n        )\n      ), encode)\n  }\n  def proxy(url: String) = {\n    try {\n      fromURL(url).mkString\n    } catch {\n      case _: java.nio.charset.MalformedInputException => fromGzip(url).mkString\n      case e => throw e\n    }\n  }\n```\n\u3069\u304d\u3069\u304d\u3057\u306a\u304c\u3089\u518d\u8868\u793a\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/35910/030e85ca-f85c-6536-4ecf-7795a62504aa.png)\n\n\u30ed\u30b4\u304c\u3067\u305f\uff01\n\u3061\u304c\u3046\u3001\u305d\u3046\u3058\u3083\u306a\u3044\n\n#CSS\u7528\u306e\u30d7\u30ed\u30ad\u30b7\u6e96\u5099\n`css-proxy(url)`\u306e\u8ffd\u52a0\n`absolute-filter(url)`\u306e\u4fee\u6b63\n\nCSS\u306f\u3069\u3046\u3082Content-Type\u3092`text/css`\u3067\u8fd4\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u305d\u308c\u3088\u3046\u306eAPIGateway\u300ccss-proxy\u300d\u3092\u8ffd\u52a0\u3057(Lamda\u306fproxy\u3092\u305d\u306e\u307e\u307e\u5229\u7528)\u3001\u305d\u308c\u306b\u5408\u308f\u305babsolute-filter\u306eLambda\u3092\u4fee\u6b63\n\n```scala:src/main/scala/filter/HtmlFilter.scala(\u4fee\u6b63)\n  val proxyUrl = \"./proxy?url=\"\n  val cssProxyUrl = \"./css-proxy?url=\"\n  def absoluteFilter(url: String) = {\n    import scala.collection.JavaConverters._\n    import org.jsoup.Jsoup\n\n    val doc = Jsoup.connect(url).get\n    // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u56de\u907f\u306e\u305f\u3081\u306bproxy\u3092\u4ecb\u3059\n    for (e <- doc.select(\"link\").asScala) if (e.attr(\"href\") != \"\") e.attr(\"href\", cssProxyUrl + e.absUrl(\"href\"))\n    // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u56de\u907f\u306e\u305f\u3081\u306bproxy\u3092\u4ecb\u3059\n    for (e <- doc.select(\"script\").asScala) if (e.attr(\"src\") != \"\") e.attr(\"src\", proxyUrl + e.absUrl(\"src\"))\n    for (e <- doc.select(\"a\").asScala) e.attr(\"href\", e.absUrl(\"href\"))\n    for (e <- doc.select(\"img\").asScala) e.attr(\"src\", e.absUrl(\"src\"))\n    doc.toString\n  }\n```\n\u518d\u8868\u793a\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/35910/4505f69d-076e-e5f2-5f3f-cc0645cc9ec0.png)\n\n**\u3084\u3063\u3068\u51fa\u305f\uff01\uff01**\n\u3075\u30fc\u3001\u3001\u75b2\u308c\u305f\n\n#\u30ae\u30e3\u30eb\u6587\u5b57\u5909\u63db\n`galgo-filter(url)`\n\n\u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089\u30ae\u30e3\u30eb\u6587\u5b57\u3078\u306e\u5909\u63db\u306f\u7c21\u5358\u3060\u3063\u305f\n\n```scala:src/main/scala/filter/HtmlFilter.scala(\u8ffd\u52a0)\n  val galMap = Map(\n    ('\u3042' -> \"\u3041\"), ('\u3044' -> \"\uff9a\u30fd\"), ('\u3046' -> \"\u3045\"), ('\u3048' -> \"\u3047\"), ('\u304a' -> \"\u3049\"),\n    ...\n  )\n\n  val galgoUrl = \"./galgo-filter?url=\"\n\n  def galgoFilter(url: String) = {\n    import scala.collection.JavaConverters._\n    import org.jsoup.Jsoup\n\n    val doc = Jsoup.connect(url).get\n    // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u56de\u907f\u306e\u305f\u3081\u306bproxy\u3092\u4ecb\u3059\n    for (e <- doc.select(\"link\").asScala) if (e.attr(\"href\") != \"\") e.attr(\"href\", cssProxyUrl + e.absUrl(\"href\"))\n    // \u30af\u30ed\u30b9\u30b5\u30a4\u30c8\u56de\u907f\u306e\u305f\u3081\u306bproxy\u3092\u4ecb\u3059\n    for (e <- doc.select(\"script\").asScala) if (e.attr(\"src\") != \"\") e.attr(\"src\", proxyUrl + e.absUrl(\"src\"))\n    // \u30ea\u30f3\u30af\u5148\u3082\u30ae\u30e3\u30eb\u8a9e\uff08\u4f3c\u975e\u518d\u5e30 \u30e2\u30ca\u30c9\u3063\u307d\u3044\uff09\n    for (e <- doc.select(\"a\").asScala) e.attr(\"href\", galgoUrl + e.absUrl(\"href\"))\n    // \u30a4\u30e1\u30fc\u30b8\u306f\u9045\u305d\u3046\u3060\u304b\u3089\u305d\u306e\u307e\u307e\n    for (e <- doc.select(\"img\").asScala) e.attr(\"src\", e.absUrl(\"src\"))\n    doc.toString.flatMap(c =>  galMap.getOrElse(c, c.toString))\n  }\n```\n\nLambda\u4f5c\u3063\u3066APIGateway\u8a2d\u5b9a\uff06\u516c\u958b\n`https://hogehoge.execute-api.ap-northeast-1.amazonaws.com/prod/galgo-filter?url=http://qiita.com/bakenezumi/items/4026bbd4117be598a251`\n\u306b\u30a2\u30af\u30bb\u30b9\uff01\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/35910/1a6704d2-e90b-d242-d086-f09af916186a.png)\n\n\n**\u8aad\u3081\u306a\u3044\u3051\u3069\u6210\u529f\u3057\u305f\u3063\u307d\u3044\uff01**\n\n\u30ae\u30e3\u30eb\u6587\u5b57\u5316\u3055\u308c\u305f\u30da\u30fc\u30b8\u306e\u30ea\u30f3\u30af\u3092\u305f\u3069\u308b\u3068\u305d\u3053\u304b\u3089\u5148\u3082\u30ae\u30e3\u30eb\u6587\u5b57\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/35910/6661c00d-7b71-120c-f551-0f1523e29779.png)\n\n\u30b3\u30fc\u30c97\u884c\u76ee\u306e\u30b3\u30e1\u30f3\u30c8\u306b\u6ce8\u76ee\n\n\n#\u4eca\u56de\u306e\u30b3\u30fc\u30c9\nhttps://github.com/bakenezumi/aws-filter\n\n#\u6240\u611f\nWeb\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306b\u3064\u3044\u3066\u8003\u3048\u3055\u305b\u3089\u308c\u305f\n\u5909\u306a\u30b5\u30a4\u30c8\u304b\u3089\u4e0d\u7528\u610f\u306b\u30e1\u30b8\u30e3\u30fc\u30b5\u30a4\u30c8\u306e\u30ea\u30f3\u30af\u5148\u306b\u98db\u3076\u306e\u306f\u5371\u967a\n**URL\u306f\u7d76\u5bfe\u78ba\u8a8d\u3057\u3088\u3046\u306d\uff01**\n\n\u3042\u3068\u305d\u308d\u305d\u308d\u624b\u4f5c\u696d\u304c\u304d\u3064\u3044\u306e\u3067\u81ea\u52d5\u5316\u3057\u305f\u3044\n\n#\u86c7\u8db3\n\n\u524d\u56de\u306ejson\u5909\u63db\u3068\u306e\u7d44\u307f\u5408\u308f\u305b\u3082\u3044\u3051\u305f\n\n`https://hogehoge.execute-api.ap-northeast-1.amazonaws.com/prod/htmlToJson?url=https://hogehoge.execute-api.ap-northeast-1.amazonaws.com/prod/galgo-filter?url=http://qiita.com/bakenezumi/items/4026bbd4117be598a251`\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/35910/629f54ed-e409-149e-3b55-ca047cb66941.png)\n\n\n\n", "tags": ["AWS", "lambda", "APIGateway", "Scala", "\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3"]}