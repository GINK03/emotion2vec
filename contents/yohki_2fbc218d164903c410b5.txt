{"context": " More than 1 year has passed since last update.\u753b\u50cf\u3092\u3042\u308b\u5f62\u72b6\u3067\u5207\u308a\u629c\u304d\u305f\u3044\u3068\u304d\u306a\u3069\u306b\u30a2\u30eb\u30d5\u30a1\u30de\u30b9\u30ad\u30f3\u30b0\u3068\u547c\u3070\u308c\u308b\u624b\u6cd5\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002OpenCV\u306emixChannels\u3092\u4f7f\u3063\u3066\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u30e1\u30e2\u3067\u3059\u3002\n// \u5165\u529b\u753b\u50cf\uff083\u30c1\u30e3\u30f3\u30cd\u30eb\uff09\ncv::Mat src = cv::imread(\"input.jpg\");\n\n// \u30de\u30b9\u30af\u753b\u50cf\uff08\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\uff09\ncv::Mat mask(300, 300, CV_8UC1);\n\n// \u30de\u30b9\u30af\u9818\u57df\u3092\u4f5c\u6210\ncv::Point points[] = {\n    cv::Point(10, 100),\n    cv::Point(150, 20),\n    cv::Point(240, 200),\n    cv::Point(30, 280)\n};\ncv::fillConvexPoly(mask, points, 4, cv::Scalar(255), CV_AA);\n\n// \u51fa\u529b\u753b\u50cf\uff08\u203b\u5148\u306b\u9818\u57df\u306e\u78ba\u4fdd\u304c\u5fc5\u8981\uff09\ncv::Mat dat(300, 300, CV_8UC4);\n\n// \u5165\u529b\u3059\u308b\u753b\u50cf\u306e\u914d\u5217\ncv::Mat srcArray[] = { cvSrc, mask };\n// \u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u5909\u63db\u65b9\u6cd5\u306e\u6307\u5b9a\nint from_to[] = { 0,0, 1,1, 2,2, 3,3 };\ncv::mixChannels(srcArray, 2, &dst, 1, from_to, 4);\n\n\n\u3075\u3064\u3046\u306bcv::copyTo\u306a\u3069\u3067\u30de\u30b9\u30af\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30de\u30b9\u30af\u753b\u50cf\u306e\u9ed2\u3067\u306a\u3044\u9818\u57df\u3092\u5358\u7d14\u306b\u30b3\u30d4\u30fc\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u30b8\u30e3\u30ae\u30fc\u304c\u6b8b\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u65b9\u6cd5\u3067\u3084\u308c\u3070\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u3082\u4fdd\u6301\u3055\u308c\u3066\u304d\u308c\u3044\u306a\u753b\u50cf\u306b\u306a\u308a\u307e\u3059\u3002\n\u753b\u50cf\u3092\u3042\u308b\u5f62\u72b6\u3067\u5207\u308a\u629c\u304d\u305f\u3044\u3068\u304d\u306a\u3069\u306b\u30a2\u30eb\u30d5\u30a1\u30de\u30b9\u30ad\u30f3\u30b0\u3068\u547c\u3070\u308c\u308b\u624b\u6cd5\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002OpenCV\u306emixChannels\u3092\u4f7f\u3063\u3066\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u30e1\u30e2\u3067\u3059\u3002\n\n```\n// \u5165\u529b\u753b\u50cf\uff083\u30c1\u30e3\u30f3\u30cd\u30eb\uff09\ncv::Mat src = cv::imread(\"input.jpg\");\n\n// \u30de\u30b9\u30af\u753b\u50cf\uff08\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\uff09\ncv::Mat mask(300, 300, CV_8UC1);\n\n// \u30de\u30b9\u30af\u9818\u57df\u3092\u4f5c\u6210\ncv::Point points[] = {\n    cv::Point(10, 100),\n    cv::Point(150, 20),\n    cv::Point(240, 200),\n    cv::Point(30, 280)\n};\ncv::fillConvexPoly(mask, points, 4, cv::Scalar(255), CV_AA);\n\n// \u51fa\u529b\u753b\u50cf\uff08\u203b\u5148\u306b\u9818\u57df\u306e\u78ba\u4fdd\u304c\u5fc5\u8981\uff09\ncv::Mat dat(300, 300, CV_8UC4);\n\n// \u5165\u529b\u3059\u308b\u753b\u50cf\u306e\u914d\u5217\ncv::Mat srcArray[] = { cvSrc, mask };\n// \u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u5909\u63db\u65b9\u6cd5\u306e\u6307\u5b9a\nint from_to[] = { 0,0, 1,1, 2,2, 3,3 };\ncv::mixChannels(srcArray, 2, &dst, 1, from_to, 4);\n```\n\n![Screen Shot 2015-11-30 at 09.47.24.png](https://qiita-image-store.s3.amazonaws.com/0/54852/8c28da66-0f08-ce74-26e0-11e6ff146fcc.png)\n\n\u3075\u3064\u3046\u306bcv::copyTo\u306a\u3069\u3067\u30de\u30b9\u30af\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30de\u30b9\u30af\u753b\u50cf\u306e\u9ed2\u3067\u306a\u3044\u9818\u57df\u3092\u5358\u7d14\u306b\u30b3\u30d4\u30fc\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u30b8\u30e3\u30ae\u30fc\u304c\u6b8b\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u65b9\u6cd5\u3067\u3084\u308c\u3070\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u3082\u4fdd\u6301\u3055\u308c\u3066\u304d\u308c\u3044\u306a\u753b\u50cf\u306b\u306a\u308a\u307e\u3059\u3002\n", "tags": ["OpenCV"]}