{"context": " More than 1 year has passed since last update.ARMA\u30e2\u30c7\u30eb\u3092\u3072\u305f\u3059\u3089\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u308b\u8a18\u4e8b\u3067\u3059\u3002\nARMA(p,q){\\rm ARMA}(p,q)\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3088\u3063\u3066\u3069\u306e\u3088\u3046\u306b\u30b0\u30e9\u30d5\u304c\u5909\u5316\u3059\u308b\u304b\u3092\u8996\u899a\u7684\u306b\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u30b0\u30e9\u30d5\u3092\u63cf\u304d\u307e\u304f\u308a\u307e\u3059\u3002\u8a0849\u672c\u3042\u308a\u307e\u3059w \u305a\u3063\u3068\u773a\u3081\u3066\u3044\u305f\u3089\u3001\u30b0\u30e9\u30d5\u3092\u898b\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u304c\u898b\u5206\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3089\u306a\u3044\u304b\u306a\u30fc\u3001\u3068\u3044\u3046\u6de1\u3044\u671f\u5f85\u304b\u3089\u66f8\u3044\u3066\u307f\u305f\u8a18\u4e8b\u3067\u3059  \n\u30b0\u30e9\u30d5\u3092\u4e26\u3079\u3066\u773a\u3081\u305f\u5f8c\u3001\u3053\u308c\u3089\u3092\u751f\u6210\u3057\u305fPython\u30b3\u30fc\u30c9\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n\u81ea\u5df1\u56de\u5e30\u79fb\u52d5\u5e73\u5747(ARMA)\u30e2\u30c7\u30eb\nARMA\u30e2\u30c7\u30eb\u306e\u5f0f\u306f\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002\u672c\u8a18\u4e8b\u3067\u306f p=0,1,2,\u00a0q=0,1,2p=0,1,2,\\ q=0,1,2\u306e\u30d1\u30bf\u30fc\u30f3\u3067\u3001\u304b\u3064\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7b26\u53f7\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u306e\u6570\u3060\u3051\u30b0\u30e9\u30d5\u3092\u63cf\u3044\u3066\u3044\u304d\u307e\u3059\u3002\ny_t = \\varepsilon_t +  \\sum_{i=1}^p \\phi_i y_{t-i} + \\sum_{i=1}^q \\theta_i \\varepsilon_{t-i} \\\\\n\\varepsilon_t \\sim N(0,\\sigma^2) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\\\\\nt = 1, 2, \\cdots, T\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\nyt=\u03b5t+p\u2211i=1\u03d5iyt\u2212i+q\u2211i=1\u03b8i\u03b5t\u2212i\u03b5t\u223cN(0,\u03c32)\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000t=1,2,\u22ef,T\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000{y_t = \\varepsilon_t +  \\sum_{i=1}^p \\phi_i y_{t-i} + \\sum_{i=1}^q \\theta_i \\varepsilon_{t-i} \\\\\n\\varepsilon_t \\sim N(0,\\sigma^2) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\\\\\nt = 1, 2, \\cdots, T\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n}\n\n\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3059\u308b\n\nARMA(0,0)\n y_t = \\varepsilon_t \nyt=\u03b5t{ y_t = \\varepsilon_t \n}\n\n\nARMA(0,1)\n y_t = \\varepsilon_t + \\theta_1 \\varepsilon_{t-1}\nyt=\u03b5t+\u03b81\u03b5t\u22121{ y_t = \\varepsilon_t + \\theta_1 \\varepsilon_{t-1}\n}\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n\u03b81=0.7\\theta_1=0.7\n\n\n\nARMA(0,2)\n y_t = \\varepsilon_t + \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2}\nyt=\u03b5t+\u03b81\u03b5t\u22121+\u03b82\u03b5t\u22122{ y_t = \\varepsilon_t + \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2}\n}\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n\u03b81=0.7,\u00a0\u03b82=0.3\\theta_1=0.7,\\ \\theta_2=0.3\n\n\n\n\n\nARMA(1,0)\ny_t = \\varepsilon_t +  \\phi_1 y_{t-1} \nyt=\u03b5t+\u03d51yt\u22121{y_t = \\varepsilon_t +  \\phi_1 y_{t-1} \n}\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n\u03d51=0.7\\phi_1=0.7\n\n\n\nARMA(1,1)\ny_t = \\varepsilon_t +  \\phi_1 y_{t-1} + \\theta_1 \\varepsilon_{t-1}\nyt=\u03b5t+\u03d51yt\u22121+\u03b81\u03b5t\u22121{y_t = \\varepsilon_t +  \\phi_1 y_{t-1} + \\theta_1 \\varepsilon_{t-1}\n}\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n\u03d51=0.7,\u00a0\u03b81=0.7\\phi_1=0.7,\\ \\theta_1=0.7\n\n\n\n\n\nARMA(1,2)\ny_t = \\varepsilon_t +  \\phi_1 y_{t-1} + \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2}\nyt=\u03b5t+\u03d51yt\u22121+\u03b81\u03b5t\u22121+\u03b82\u03b5t\u22122{y_t = \\varepsilon_t +  \\phi_1 y_{t-1} + \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2}\n}\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n\u03d51=0.7,\u00a0\u03b81=0.7,\u00a0\u03b82=0.3\\phi_1=0.7,\\ \\theta_1=0.7,\\ \\theta_2=0.3\n\n\n\n\n\n\n\n\n\nARMA(2,0)\ny_t = \\varepsilon_t + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} \nyt=\u03b5t+\u03d51yt\u22121+\u03d52yt\u22122{y_t = \\varepsilon_t + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} \n}\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n\u03d51=0.7,\u00a0\u03d52=0.3\\phi_1=0.7,\\ \\phi_2=0.3\n\n\n\n\n\nARMA(2,1)\ny_t = \\varepsilon_t + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} + \\theta_1 \\varepsilon_{t-1} \nyt=\u03b5t+\u03d51yt\u22121+\u03d52yt\u22122+\u03b81\u03b5t\u22121{y_t = \\varepsilon_t + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} + \\theta_1 \\varepsilon_{t-1} \n}\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n\u03d51=0.7,\u00a0\u03d52=0.3\u00a0\u03b81=0.7\\phi_1=0.7,\\ \\phi_2=0.3\\ \\theta_1=0.7\n\n\n\n\n\n\n\n\n\nARMA(2,2)\ny_t = \\varepsilon_t + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} + \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2}\nyt=\u03b5t+\u03d51yt\u22121+\u03d52yt\u22122+\u03b81\u03b5t\u22121+\u03b82\u03b5t\u22122{y_t = \\varepsilon_t + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} + \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2}\n}\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n\u03d51=0.7,\u00a0\u03d52=0.3\u00a0\u03b81=0.7,\u00a0\u03b82=0.3\\phi_1=0.7,\\ \\phi_2=0.3\\ \\theta_1=0.7,\\ \\theta_2=0.3\n\n\n\n\n\n\n\n\n\n\n[uploading ARMA_44.png...]()\n\n\n\n\n\n\n\n\u63cf\u753b\u7528\u30b3\u30fc\u30c9\nPython\u3067ARMA\u306e\u4eba\u5de5\u30c7\u30fc\u30bf\u304c\u4f5c\u308c\u308bstatsmodels\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\nimport numpy as np\nimport pandas as pd\nimport numpy.random as rd\nimport itertools, sys\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\nfrom matplotlib import gridspec\nplt.style.use('ggplot')\n\nfrom statsmodels.tsa.arima_process import arma_generate_sample\nimport statsmodels.api as sm\nimport statsmodels.tsa.stattools as stt\nimport statsmodels.graphics.tsaplots as tsaplots\n\n\n\ndef select_negative(l):\n    res = []\n    l = np.array(l)\n    n = len(l)\n    res.append(l)\n    l = np.array(l)\n    for i in range(n):\n        for j in itertools.combinations(range(n),i+1):\n            _l = l.copy()\n            _l[list(j)] = _l[list(j)] * -1\n            res.append(_l)\n    return res\n\ncnt = 0\nn = 3\nnobs = 500\nitrvl = 28\n\nfor len_ar in range(n):\n    for len_ma in range(n):\n\n        _ar_params = [.7, .3][:len_ar]\n        _ma_params = [.7, .3][:len_ma]\n\n        _ar_params = select_negative(_ar_params)\n        _ma_params = select_negative(_ma_params)\n        for i in _ar_params:\n            for j in _ma_params:\n                cnt += 1\n\n                ar_params = np.r_[1, -i]\n                ma_params = np.r_[1, j]\n\n                yy = arma_generate_sample(ar_params, ma_params, nobs)\n                ts = pd.Series(yy, index=pd.date_range('2010/1/1', periods=nobs))\n                ar_sign = ['+' if val >= 0 else '-' for val in i]\n                ma_sign = ['+' if val >= 0 else '-' for val in j]\n\n                plt.subplots(2, 1, sharex=True, figsize=(15,7)) \n                gs = gridspec.GridSpec(2, 1, height_ratios=[5,2])\n                ax1 = plt.subplot(gs[0])\n                ax2 = plt.subplot(gs[1])\n\n                # ax1 --------\n                ts.plot(color=\"b\", alpha=0.4, lw=1, ax=ax1,\n                        title=\"ARMA({0},{1}). ar:{2},ma:{3}, ar:{4},ma:{5}\".format(len_ar, len_ma, i, j, ar_sign, ma_sign))\n                ax1.set_title(ax1.get_title(), fontsize=16)\n\n                ts_mean = pd.rolling_mean(ts,itrvl)\n                ts_std = pd.rolling_std(ts,itrvl) \n                upper = ts_mean + ts_std * 1.96\n                lower = ts_mean - ts_std * 1.96\n\n                ts_mean.plot(ax=ax1)\n                upper.plot(figsize=(15,7), c=\"purple\", alpha=.6, ax=ax1, linestyle='--')\n                lower.plot(figsize=(15,7), c=\"purple\", alpha=.6, ax=ax1, linestyle='--')\n\n                # ax2 --------\n                tsaplots.plot_acf(ts ,ax=ax2, color=\"g\", lags=300, lw=2)\n                plt.subplots_adjust(hspace=0)\n\n                plt.savefig('./ARMA_fig/ARMA_{}.png'.format(cnt))\n                plt.clf()\n\n\n\u53c2\u8003\nStatsModels : Autoregressive Moving Average (ARMA): Artificial data\n\u3000http://statsmodels.sourceforge.net/stable/examples/notebooks/generated/tsa_arma_1.html\nARMA\u30e2\u30c7\u30eb\u3092\u3072\u305f\u3059\u3089\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u308b\u8a18\u4e8b\u3067\u3059\u3002\n\n${\\rm ARMA}(p,q)$\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3088\u3063\u3066\u3069\u306e\u3088\u3046\u306b\u30b0\u30e9\u30d5\u304c\u5909\u5316\u3059\u308b\u304b\u3092\u8996\u899a\u7684\u306b\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u30b0\u30e9\u30d5\u3092\u63cf\u304d\u307e\u304f\u308a\u307e\u3059\u3002\u8a0849\u672c\u3042\u308a\u307e\u3059w \u305a\u3063\u3068\u773a\u3081\u3066\u3044\u305f\u3089\u3001\u30b0\u30e9\u30d5\u3092\u898b\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u304c\u898b\u5206\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3089\u306a\u3044\u304b\u306a\u30fc\u3001\u3068\u3044\u3046\u6de1\u3044\u671f\u5f85\u304b\u3089\u66f8\u3044\u3066\u307f\u305f\u8a18\u4e8b\u3067\u3059 :grin: \n\u30b0\u30e9\u30d5\u3092\u4e26\u3079\u3066\u773a\u3081\u305f\u5f8c\u3001\u3053\u308c\u3089\u3092\u751f\u6210\u3057\u305fPython\u30b3\u30fc\u30c9\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n## \u81ea\u5df1\u56de\u5e30\u79fb\u52d5\u5e73\u5747(ARMA)\u30e2\u30c7\u30eb\n\nARMA\u30e2\u30c7\u30eb\u306e\u5f0f\u306f\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002\u672c\u8a18\u4e8b\u3067\u306f $p=0,1,2,\\ q=0,1,2$\u306e\u30d1\u30bf\u30fc\u30f3\u3067\u3001\u304b\u3064\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7b26\u53f7\u306e\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\u306e\u6570\u3060\u3051\u30b0\u30e9\u30d5\u3092\u63cf\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n```math\ny_t = \\varepsilon_t +  \\sum_{i=1}^p \\phi_i y_{t-i} + \\sum_{i=1}^q \\theta_i \\varepsilon_{t-i} \\\\\n\\varepsilon_t \\sim N(0,\\sigma^2) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\\\\\nt = 1, 2, \\cdots, T\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\n```\n\n# \u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3059\u308b\n\n## ARMA(0,0)\n\n```math\n y_t = \\varepsilon_t \n```\n![ARMA_1.png](https://qiita-image-store.s3.amazonaws.com/0/50670/d5de2ef4-9474-9ccd-50d2-cddbbb731584.png)\n\n\n\n## ARMA(0,1)\n\n```math\n y_t = \\varepsilon_t + \\theta_1 \\varepsilon_{t-1}\n```\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n$\\theta_1=0.7$\n\n![ARMA_2.png](https://qiita-image-store.s3.amazonaws.com/0/50670/365e8fb0-295a-e9a5-ffff-b389c2213a9d.png)\n\n![ARMA_3.png](https://qiita-image-store.s3.amazonaws.com/0/50670/30a1fe0c-bffa-3c49-ce34-33eed0a262e6.png)\n\n## ARMA(0,2)\n\n```math\n y_t = \\varepsilon_t + \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2}\n```\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n$\\theta_1=0.7,\\ \\theta_2=0.3$\n![ARMA_4.png](https://qiita-image-store.s3.amazonaws.com/0/50670/fa3c80c5-2c38-161d-0f09-240827d138d1.png)\n![ARMA_5.png](https://qiita-image-store.s3.amazonaws.com/0/50670/4ea64bae-c452-68fb-6cc8-c937500e87a1.png)\n![ARMA_6.png](https://qiita-image-store.s3.amazonaws.com/0/50670/57ab0b2c-802a-92fa-5106-47ddd0674260.png)\n![ARMA_7.png](https://qiita-image-store.s3.amazonaws.com/0/50670/79b5e0fa-b3bd-293f-830b-6cc4e8eb39b7.png)\n\n\n## ARMA(1,0)\n\n```math\ny_t = \\varepsilon_t +  \\phi_1 y_{t-1} \n```\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n$\\phi_1=0.7$\n![ARMA_8.png](https://qiita-image-store.s3.amazonaws.com/0/50670/9f78e7c6-f8fe-2756-2ca1-bc4d61bf86a2.png)\n![ARMA_9.png](https://qiita-image-store.s3.amazonaws.com/0/50670/e3d9a458-9d9a-0ec6-edf2-94231a19b7b8.png)\n\n\n## ARMA(1,1)\n\n```math\ny_t = \\varepsilon_t +  \\phi_1 y_{t-1} + \\theta_1 \\varepsilon_{t-1}\n```\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n$\\phi_1=0.7,\\ \\theta_1=0.7$\n![ARMA_10.png](https://qiita-image-store.s3.amazonaws.com/0/50670/d2ed3d65-0cde-6828-1b03-c2f134c2e744.png)\n![ARMA_11.png](https://qiita-image-store.s3.amazonaws.com/0/50670/ca80699f-3e94-0fb6-0bf1-dc5c0c92ad53.png)\n![ARMA_12.png](https://qiita-image-store.s3.amazonaws.com/0/50670/059d82b4-8561-208a-718a-8d7484986bdd.png)\n![ARMA_13.png](https://qiita-image-store.s3.amazonaws.com/0/50670/fe25a10a-a0e2-9435-0f4e-103ef2429c5d.png)\n\n\n\n\n## ARMA(1,2)\n\n```math\ny_t = \\varepsilon_t +  \\phi_1 y_{t-1} + \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2}\n```\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n$\\phi_1=0.7,\\ \\theta_1=0.7,\\ \\theta_2=0.3$\n\n![ARMA_14.png](https://qiita-image-store.s3.amazonaws.com/0/50670/7dbfa11d-3621-8425-6916-b5b0e156c90f.png)\n![ARMA_15.png](https://qiita-image-store.s3.amazonaws.com/0/50670/fae85c7a-1f12-aca1-cae0-7fe460b8ec47.png)\n![ARMA_16.png](https://qiita-image-store.s3.amazonaws.com/0/50670/9852848d-20d3-44d8-a48c-17ec284672dd.png)\n![ARMA_17.png](https://qiita-image-store.s3.amazonaws.com/0/50670/7404cc5c-8cdc-9a01-e6c0-820ebf3594f7.png)\n![ARMA_18.png](https://qiita-image-store.s3.amazonaws.com/0/50670/2a0e815c-7ec2-7afb-bfed-58c77d8d791d.png)\n![ARMA_19.png](https://qiita-image-store.s3.amazonaws.com/0/50670/6922843a-5b7a-a7a8-c310-6587da8c00ac.png)\n![ARMA_20.png](https://qiita-image-store.s3.amazonaws.com/0/50670/338348b1-a61d-a748-1cf8-ac8e44562e56.png)\n![ARMA_21.png](https://qiita-image-store.s3.amazonaws.com/0/50670/8572b56e-5268-8373-3ec3-f80c9d783ad1.png)\n\n\n## ARMA(2,0)\n\n```math\ny_t = \\varepsilon_t + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} \n```\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n$\\phi_1=0.7,\\ \\phi_2=0.3$\n\n![ARMA_22.png](https://qiita-image-store.s3.amazonaws.com/0/50670/39ee78eb-8cd2-2d0d-3903-532118180162.png)\n![ARMA_23.png](https://qiita-image-store.s3.amazonaws.com/0/50670/79830362-52fe-6dd9-c07f-ff8bd28b8223.png)\n![ARMA_24.png](https://qiita-image-store.s3.amazonaws.com/0/50670/8db1a045-5667-ea6d-e593-9166e7ef0647.png)\n![ARMA_25.png](https://qiita-image-store.s3.amazonaws.com/0/50670/6a84dd96-6983-046a-303c-44d2f1087608.png)\n\n\n## ARMA(2,1)\n\n```math\ny_t = \\varepsilon_t + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} + \\theta_1 \\varepsilon_{t-1} \n```\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n$\\phi_1=0.7,\\ \\phi_2=0.3\\ \\theta_1=0.7$\n\n![ARMA_26.png](https://qiita-image-store.s3.amazonaws.com/0/50670/9b740e07-a85b-e672-4693-bed31e19bf0f.png)\n![ARMA_27.png](https://qiita-image-store.s3.amazonaws.com/0/50670/f7843842-3ca9-3901-f7e4-fdbc7c744a45.png)\n![ARMA_28.png](https://qiita-image-store.s3.amazonaws.com/0/50670/dc50f51a-c5e3-691e-246d-f40f9f9d8976.png)\n![ARMA_29.png](https://qiita-image-store.s3.amazonaws.com/0/50670/baeeb7f3-0074-82e8-6854-7a20cfe6838c.png)\n![ARMA_30.png](https://qiita-image-store.s3.amazonaws.com/0/50670/f701868c-9ba8-f068-1dbb-e3c9f5fbd7c6.png)\n![ARMA_31.png](https://qiita-image-store.s3.amazonaws.com/0/50670/2ab9db60-27f2-a235-9109-c0192f0fd0c8.png)\n![ARMA_32.png](https://qiita-image-store.s3.amazonaws.com/0/50670/e4d5ef13-0ef2-e024-4a1b-8f32eb9174f4.png)\n![ARMA_33.png](https://qiita-image-store.s3.amazonaws.com/0/50670/08fbe17a-d0c7-8b80-3014-aa32c1f56c6a.png)\n\n\n## ARMA(2,2)\n\n```math\ny_t = \\varepsilon_t + \\phi_1 y_{t-1} + \\phi_2 y_{t-2} + \\theta_1 \\varepsilon_{t-1} + \\theta_2 \\varepsilon_{t-2}\n```\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\uff1a\n$\\phi_1=0.7,\\ \\phi_2=0.3\\ \\theta_1=0.7,\\ \\theta_2=0.3$\n\n![ARMA_34.png](https://qiita-image-store.s3.amazonaws.com/0/50670/b4a3c741-3aa6-ab03-a80a-20f0e2c42a93.png)\n![ARMA_35.png](https://qiita-image-store.s3.amazonaws.com/0/50670/5160673b-7271-93c8-bdc6-95d1d673be1f.png)\n![ARMA_36.png](https://qiita-image-store.s3.amazonaws.com/0/50670/02fca0ec-f128-b8a5-019b-27b25a9d91d8.png)\n![ARMA_37.png](https://qiita-image-store.s3.amazonaws.com/0/50670/a5c840cf-20f3-9405-d2ff-160d32ed7219.png)\n![ARMA_38.png](https://qiita-image-store.s3.amazonaws.com/0/50670/953b6a3c-c504-22da-1b34-6d3b25c12a51.png)\n![ARMA_39.png](https://qiita-image-store.s3.amazonaws.com/0/50670/fd7d0a8d-fa46-e788-e11c-8f6414f25c5c.png)\n![ARMA_40.png](https://qiita-image-store.s3.amazonaws.com/0/50670/58320aa4-55ec-b3bd-87ee-4aadfbbca47e.png)\n![ARMA_41.png](https://qiita-image-store.s3.amazonaws.com/0/50670/c3044681-a8ef-80e5-e30f-50039ed5d923.png)\n![ARMA_42.png](https://qiita-image-store.s3.amazonaws.com/0/50670/58313e4d-351f-a63d-8f72-893827dc08b2.png)\n![ARMA_43.png](https://qiita-image-store.s3.amazonaws.com/0/50670/29d6336e-9cf8-813f-c710-81a1a70741eb.png)\n![uploading ARMA_44.png...]()\n![ARMA_44.png](https://qiita-image-store.s3.amazonaws.com/0/50670/064bea9f-9faf-a9c3-6902-4b46b5f1c7f7.png)\n![ARMA_45.png](https://qiita-image-store.s3.amazonaws.com/0/50670/605beef2-320e-d364-9cb5-539312723c7f.png)\n![ARMA_46.png](https://qiita-image-store.s3.amazonaws.com/0/50670/aa01d336-e8ef-47ed-15eb-a08a43a46771.png)\n![ARMA_47.png](https://qiita-image-store.s3.amazonaws.com/0/50670/0a45b948-68a1-25fa-aa5b-6249d13bce8a.png)\n![ARMA_48.png](https://qiita-image-store.s3.amazonaws.com/0/50670/80cf991f-d5d4-66c8-73b4-f159b5c41446.png)\n![ARMA_49.png](https://qiita-image-store.s3.amazonaws.com/0/50670/11dfa241-5241-ae4b-ef65-114ad7d3fc51.png)\n\n\n# \u63cf\u753b\u7528\u30b3\u30fc\u30c9\nPython\u3067ARMA\u306e\u4eba\u5de5\u30c7\u30fc\u30bf\u304c\u4f5c\u308c\u308b`statsmodels`\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\n```py\nimport numpy as np\nimport pandas as pd\nimport numpy.random as rd\nimport itertools, sys\n\n%matplotlib inline\nimport matplotlib.pyplot as plt\nfrom matplotlib import gridspec\nplt.style.use('ggplot')\n\nfrom statsmodels.tsa.arima_process import arma_generate_sample\nimport statsmodels.api as sm\nimport statsmodels.tsa.stattools as stt\nimport statsmodels.graphics.tsaplots as tsaplots\n\n\n\ndef select_negative(l):\n    res = []\n    l = np.array(l)\n    n = len(l)\n    res.append(l)\n    l = np.array(l)\n    for i in range(n):\n        for j in itertools.combinations(range(n),i+1):\n            _l = l.copy()\n            _l[list(j)] = _l[list(j)] * -1\n            res.append(_l)\n    return res\n\ncnt = 0\nn = 3\nnobs = 500\nitrvl = 28\n\nfor len_ar in range(n):\n    for len_ma in range(n):\n        \n        _ar_params = [.7, .3][:len_ar]\n        _ma_params = [.7, .3][:len_ma]\n        \n        _ar_params = select_negative(_ar_params)\n        _ma_params = select_negative(_ma_params)\n        for i in _ar_params:\n            for j in _ma_params:\n                cnt += 1\n\n                ar_params = np.r_[1, -i]\n                ma_params = np.r_[1, j]\n                \n                yy = arma_generate_sample(ar_params, ma_params, nobs)\n                ts = pd.Series(yy, index=pd.date_range('2010/1/1', periods=nobs))\n                ar_sign = ['+' if val >= 0 else '-' for val in i]\n                ma_sign = ['+' if val >= 0 else '-' for val in j]\n\n                plt.subplots(2, 1, sharex=True, figsize=(15,7)) \n                gs = gridspec.GridSpec(2, 1, height_ratios=[5,2])\n                ax1 = plt.subplot(gs[0])\n                ax2 = plt.subplot(gs[1])\n\n                # ax1 --------\n                ts.plot(color=\"b\", alpha=0.4, lw=1, ax=ax1,\n                        title=\"ARMA({0},{1}). ar:{2},ma:{3}, ar:{4},ma:{5}\".format(len_ar, len_ma, i, j, ar_sign, ma_sign))\n                ax1.set_title(ax1.get_title(), fontsize=16)\n\n                ts_mean = pd.rolling_mean(ts,itrvl)\n                ts_std = pd.rolling_std(ts,itrvl) \n                upper = ts_mean + ts_std * 1.96\n                lower = ts_mean - ts_std * 1.96\n\n                ts_mean.plot(ax=ax1)\n                upper.plot(figsize=(15,7), c=\"purple\", alpha=.6, ax=ax1, linestyle='--')\n                lower.plot(figsize=(15,7), c=\"purple\", alpha=.6, ax=ax1, linestyle='--')\n\n                # ax2 --------\n                tsaplots.plot_acf(ts ,ax=ax2, color=\"g\", lags=300, lw=2)\n                plt.subplots_adjust(hspace=0)\n\n                plt.savefig('./ARMA_fig/ARMA_{}.png'.format(cnt))\n                plt.clf()\n```\n\n# \u53c2\u8003\nStatsModels : Autoregressive Moving Average (ARMA): Artificial data\n\u3000http://statsmodels.sourceforge.net/stable/examples/notebooks/generated/tsa_arma_1.html\n\n\n\n\n\n\n\n", "tags": ["Python", "\u7d71\u8a08\u5b66", "\u6642\u7cfb\u5217\u89e3\u6790", "statistics", "statsmodels"]}