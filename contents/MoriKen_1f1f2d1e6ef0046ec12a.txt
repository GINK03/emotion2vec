{"context": "\n\n\u306f\u3058\u3081\u306b\n\u4ee5\u524d\uff0cNavigation Stack \u3092\u7406\u89e3\u3059\u308b - 2.2 move_base: \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u69cb\u6210\u3092\u307f\u308b/\u7a4d\u307f\u72b6\u614b\u304b\u3089\u306e\u56de\u5fa9\u3067Recovery\u52d5\u4f5c\u306b\u5165\u308b\u3053\u3068\u3092\u89e6\u308c\u307e\u3057\u305f\uff0e\n\n\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u308b\u3068\uff0c\u306a\u304b\u306a\u304b\u3053\u306eRecovery\u52d5\u4f5c(\u4e0a\u56f3\u3067\u3044\u3046\u3068\u3053\u308d\u306e\uff0cClearing Rotation \u306b\u76f8\u5f53)\u306b\u5165\u3063\u3066\u304f\u308c\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e\u3055\u3063\u3055\u3068\u8ae6\u3081\u305f\u308a\uff0c\u8ae6\u3081\u305a\u306b\u306d\u3070\u3063\u3066\u3057\u307e\u3046\u3068\u304d\u3082\u3042\u308a\u307e\u3059\uff0e\u30c0\u30e1\u306a\u3089\u3055\u3063\u3055\u3068Recovery\u884c\u52d5\u3092\u3068\u3063\u3066\u307b\u3057\u3044\u306e\u306b\uff0c\u3058\u308c\u3063\u305f\u304f\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059^^;\n\u3068\u3044\u3046\u7d4c\u7def\u304c\u3042\u308a\uff0c\u3069\u3093\u306a\u6761\u4ef6\u3067Recovery\u306b\u5165\u308b\u306e\u3060\u308d\u3046\u304b\uff1f\u305d\u306e\u6761\u4ef6\u306f\u5909\u66f4\u3067\u304d\u308b\u306e\u3060\u308d\u3046\u304b\uff1f\u3068\u3044\u3046\u7591\u554f\u304c\u4ef2\u9593\u5185\u3067\u51fa\u3066\u304d\u307e\u3057\u305f\uff0e\n\u305d\u3093\u306a\u308f\u3051\u3067\u6c17\u306b\u306a\u3063\u3066\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u307f\u305f\u3089\uff0c\u3044\u304f\u3064\u304b\u6761\u4ef6\u304c\u6d6e\u304b\u3073\u4e0a\u304c\u308a\u307e\u3057\u305f\uff0e\nROS Wiki\u306b\u3082\u8f09\u3063\u3066\u3044\u306a\u3044\u60c5\u5831\u304c\u62bd\u51fa\u3067\u304d\u305f\u306e\u3067\uff0c\u5099\u5fd8\u9332\u304c\u3066\u3089\u6b8b\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3057\u307e\u3057\u305f\uff0emove_base\u5229\u7528\u8005\u306e\u65b9\u306b\u3068\u3063\u3066\uff0c\u5c11\u3057\u3067\u3082\u3054\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\uff0e\n\n\u74b0\u5883\n\nOS: Ubuntu 14.04\nROS: Indigo\n\u30e2\u30c7\u30eb\uff1aros-planning/navigation\n\n\n\n\u7d50\u8ad6\n\u6761\u4ef6\u306f\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u3067\u8a2d\u5b9a\u3067\u304d\u307e\u3059\uff0e\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6709\u52b9\u3068\u306a\u3063\u3066\u3044\u308b\u6761\u4ef6\u306f\uff0c\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\uff0e\n\n\ncontroller_patience\u79d2\uff0c\u505c\u6b62\u72b6\u614b\u304c\u7d99\u7d9a\u3057\u305f\u5834\u5408\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u6761\u4ef6\u306f\uff0c\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059.\n\n\noscillation_timeout\u79d2\uff0c\u632f\u52d5\u884c\u52d5\u304c\u7d99\u7d9a\u3057\u305f\u5834\u5408\n\nmax_planning_retries\u56de\uff0c\u30ed\u30fc\u30ab\u30eb\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u8a66\u884c\u3057\u3066\u3082\u7d4c\u8def\u304c\u5f97\u3089\u308c\u306a\u304b\u3063\u305f\u5834\u5408\n\n\n\u3053\u306e\u8a2d\u5b9a\u306fwiki\u306b\u306f\u8f09\u3063\u3066\u3044\u306a\u3044\u2026\n\n\n\n\u3053\u308c\u3089\u306e\u5024\u3092\u30d7\u30e9\u30f3\u30ca\u30fc\u306eyaml\u30d5\u30a1\u30a4\u30eb\u3067\u8a2d\u5b9a\u3057\u3066\u3042\u3052\u308c\u3070\u3088\u3044\u3067\u3059(Navigation Stack \u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u8a00\u3046\u3068\u3053\u308d\u306e\uff0cbase_local_planner_params.yaml \u306b\u76f8\u5f53)\uff0e\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4ed5\u69d8\uff08max_planning_retries\u4ee5\u5916\uff09\u306fmove_base\u306eWiki\u30da\u30fc\u30b8\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u3092\u691c\u7d22\u3059\u308b\u3068\u5f15\u3063\u304b\u304b\u308a\u307e\u3059\uff0e\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u89e3\u6790\n\n\u524d\u63d0: Recovery \u72b6\u614b\u306b\u9077\u79fb\u3059\u308b\u6761\u4ef6\n\n\u30e1\u30f3\u30d0\u5909\u6570state_\u304cCLEARING\u306b\u306a\u308b\u3068\uff0cRecovery \u72b6\u614b\u306b\u9077\u79fb\u3057\u307e\u3059\uff0e\n\u4ee5\u964d\uff0c\u3053\u306e\u72b6\u614b\u9077\u79fb\u304c\u8d77\u3053\u308b\u5206\u5c90\u3092\u898b\u3066\u3044\u304d\u307e\u3059\uff0e\n\n\nros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.986\n      //we'll try to clear out space with any user-provided recovery behaviors\n      case CLEARING:\n        ROS_DEBUG_NAMED(\"move_base\",\"In clearing/recovery state\");\n        //we'll invoke whatever recovery behavior we're currently on if they're enabled\n        if(recovery_behavior_enabled_ && recovery_index_ < recovery_behaviors_.size()){\n          ROS_DEBUG_NAMED(\"move_base_recovery\",\"Executing behavior %u of %zu\", recovery_index_, recovery_behaviors_.size());\n          recovery_behaviors_[recovery_index_]->runBehavior();\n\n\n\n\nrunBehavior()\u304c\u30ea\u30ab\u30d0\u30ea\u884c\u52d5\u30e1\u30bd\u30c3\u30c9\u3067\u3059\uff0e\n\n\n1. controller_patience\u79d2\uff0c\u505c\u6b62\u72b6\u614b\u304c\u7d99\u7d9a\u3057\u305f\u5834\u5408\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306f15\u79d2\u3067\u3059\uff0e\n\n\nros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.74\n    private_nh.param(\"controller_patience\", controller_patience_, 15.0);\n\n\n\n\u72b6\u614b\u9077\u79fb\u6761\u4ef6\u306e\u8a2d\u5b9a\u90e8\n\n\nros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.958\n          ROS_DEBUG_NAMED(\"move_base\", \"The local planner could not find a valid plan.\");\n          ros::Time attempt_end = last_valid_control_ + ros::Duration(controller_patience_);\n\n          //check if we've tried to find a valid control for longer than our time limit\n          if(ros::Time::now() > attempt_end){\n            //we'll move into our obstacle clearing mode\n            publishZeroVelocity();\n            state_ = CLEARING;\n            recovery_trigger_ = CONTROLLING_R;\n          }\n\n\n\n2. oscillation_timeout\u79d2\uff0c\u632f\u52d5\u884c\u52d5\u304c\u7d99\u7d9a\u3057\u305f\u5834\u5408\n\n\u30c7\u30d5\u30a9\u30eb\u30c80\u3067\u3059\uff0e\u3053\u308c\u3060\u3068\u632f\u52d5\u3057\u3066\u3066\u3082\u4e00\u751fRecovery\u306b\u79fb\u308a\u307e\u305b\u3093\uff0e\n\n\nros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.77\n    private_nh.param(\"oscillation_timeout\", oscillation_timeout_, 0.0);\n\n\n\n\u72b6\u614b\u9077\u79fb\u6761\u4ef6\u306e\u8a2d\u5b9a\u90e8\n\n\nros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.936\n        //check for an oscillation condition\n        if(oscillation_timeout_ > 0.0 &&\n            last_oscillation_reset_ + ros::Duration(oscillation_timeout_) < ros::Time::now())\n        {\n          publishZeroVelocity();\n          state_ = CLEARING;\n          recovery_trigger_ = OSCILLATION_R;\n        }\n\n\n\n3. max_planning_retries\u56de\uff0c\u30ed\u30fc\u30ab\u30eb\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u8a66\u884c\u3057\u3066\u3082\u7d4c\u8def\u304c\u5f97\u3089\u308c\u306a\u304b\u3063\u305f\u5834\u5408\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068-1\u3067\u3059\uff0e\u3053\u308c\u3060\u3068Recovery\u72b6\u614b\u3078\u306e\u9077\u79fb\u306f\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u56de\u6570\u306b\u4f9d\u5b58\u3057\u306a\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\nROS Wiki\u306b\u306f\u8a18\u8f09\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u2026\n\n\nros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.75\n    private_nh.param(\"max_planning_retries\", max_planning_retries_, -1);  // disabled by default\n\n\n\n\u72b6\u614b\u9077\u79fb\u6761\u4ef6\u306e\u8a2d\u5b9a\u90e8\n\n\nros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.655\n        ROS_DEBUG_NAMED(\"move_base_plan_thread\",\"No Plan...\");\n        ros::Time attempt_end = last_valid_plan_ + ros::Duration(planner_patience_);\n\n        //check if we've tried to make a plan for over our time limit or our maximum number of retries\n        //issue #496: we stop planning when one of the conditions is true, but if max_planning_retries_\n        //is negative (the default), it is just ignored and we have the same behavior as ever\n        lock.lock();\n        if(runPlanner_ &&\n           (ros::Time::now() > attempt_end || ++planning_retries_ > uint32_t(max_planning_retries_))){\n          //we'll move into our obstacle clearing mode\n          state_ = CLEARING;\n          publishZeroVelocity();\n          recovery_trigger_ = PLANNING_R;\n        }\n\n\n\n\u304a\u308f\u308a\u306b\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\uff0e\u4e0a\u8a18\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u9077\u79fb\u6761\u4ef6\u304c\u3086\u308b\u304f\u306a\u308b\u3088\u3046\u306b\u8abf\u6574\u3057\u305f\u3068\u3053\u308d\uff0c\u78ba\u304b\u306bRecovery\u884c\u52d5\u306b\u5165\u308a\u3084\u3059\u304f\u306a\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\uff0e\n\n\u53c2\u8003\u6587\u732e\n\nROS Wiki - move_base\nROS Wiki - Setup and Configuration of the Navigation Stack on a Robot\nGithub - ros-planning/navigation/move_base\n\n# \u306f\u3058\u3081\u306b\n\u4ee5\u524d\uff0c[Navigation Stack \u3092\u7406\u89e3\u3059\u308b - 2.2 move_base: \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u69cb\u6210\u3092\u307f\u308b/\u7a4d\u307f\u72b6\u614b\u304b\u3089\u306e\u56de\u5fa9](http://qiita.com/MoriKen/items/d5cd6208143d6c40caff#%E7%A9%8D%E3%81%BF%E7%8A%B6%E6%85%8B%E3%81%8B%E3%82%89%E3%81%AE%E5%9B%9E%E5%BE%A9)\u3067Recovery\u52d5\u4f5c\u306b\u5165\u308b\u3053\u3068\u3092\u89e6\u308c\u307e\u3057\u305f\uff0e\n\n![14_rotate_recovery.png](https://qiita-image-store.s3.amazonaws.com/0/110138/6dbccf9d-c93a-fd9c-d33d-1ede027e9d6e.png)\n\n\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u308b\u3068\uff0c\u306a\u304b\u306a\u304b\u3053\u306eRecovery\u52d5\u4f5c(\u4e0a\u56f3\u3067\u3044\u3046\u3068\u3053\u308d\u306e\uff0cClearing Rotation \u306b\u76f8\u5f53)\u306b\u5165\u3063\u3066\u304f\u308c\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e\u3055\u3063\u3055\u3068\u8ae6\u3081\u305f\u308a\uff0c\u8ae6\u3081\u305a\u306b\u306d\u3070\u3063\u3066\u3057\u307e\u3046\u3068\u304d\u3082\u3042\u308a\u307e\u3059\uff0e\u30c0\u30e1\u306a\u3089\u3055\u3063\u3055\u3068Recovery\u884c\u52d5\u3092\u3068\u3063\u3066\u307b\u3057\u3044\u306e\u306b\uff0c\u3058\u308c\u3063\u305f\u304f\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059^^;\n\n\u3068\u3044\u3046\u7d4c\u7def\u304c\u3042\u308a\uff0c\u3069\u3093\u306a\u6761\u4ef6\u3067Recovery\u306b\u5165\u308b\u306e\u3060\u308d\u3046\u304b\uff1f\u305d\u306e\u6761\u4ef6\u306f\u5909\u66f4\u3067\u304d\u308b\u306e\u3060\u308d\u3046\u304b\uff1f\u3068\u3044\u3046\u7591\u554f\u304c\u4ef2\u9593\u5185\u3067\u51fa\u3066\u304d\u307e\u3057\u305f\uff0e\n\n\u305d\u3093\u306a\u308f\u3051\u3067\u6c17\u306b\u306a\u3063\u3066\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u307f\u305f\u3089\uff0c\u3044\u304f\u3064\u304b\u6761\u4ef6\u304c\u6d6e\u304b\u3073\u4e0a\u304c\u308a\u307e\u3057\u305f\uff0e\n\n[ROS Wiki](http://wiki.ros.org/move_base)\u306b\u3082\u8f09\u3063\u3066\u3044\u306a\u3044\u60c5\u5831\u304c\u62bd\u51fa\u3067\u304d\u305f\u306e\u3067\uff0c\u5099\u5fd8\u9332\u304c\u3066\u3089\u6b8b\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3057\u307e\u3057\u305f\uff0e`move_base`\u5229\u7528\u8005\u306e\u65b9\u306b\u3068\u3063\u3066\uff0c\u5c11\u3057\u3067\u3082\u3054\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\uff0e\n\n# \u74b0\u5883\n- OS: Ubuntu 14.04\n- ROS: Indigo\n- \u30e2\u30c7\u30eb\uff1a[ros-planning/navigation](https://github.com/ros-planning/navigation/tree/indigo-devel)\n\n# \u7d50\u8ad6\n\u6761\u4ef6\u306f\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u3067\u8a2d\u5b9a\u3067\u304d\u307e\u3059\uff0e\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u6709\u52b9\u3068\u306a\u3063\u3066\u3044\u308b\u6761\u4ef6\u306f\uff0c\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\uff0e\n\n- `controller_patience`\u79d2\uff0c\u505c\u6b62\u72b6\u614b\u304c\u7d99\u7d9a\u3057\u305f\u5834\u5408\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u6761\u4ef6\u306f\uff0c\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059.\n\n\n- `oscillation_timeout`\u79d2\uff0c\u632f\u52d5\u884c\u52d5\u304c\u7d99\u7d9a\u3057\u305f\u5834\u5408\n- `max_planning_retries`\u56de\uff0c\u30ed\u30fc\u30ab\u30eb\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u8a66\u884c\u3057\u3066\u3082\u7d4c\u8def\u304c\u5f97\u3089\u308c\u306a\u304b\u3063\u305f\u5834\u5408\n  - \u3053\u306e\u8a2d\u5b9a\u306fwiki\u306b\u306f\u8f09\u3063\u3066\u3044\u306a\u3044\u2026\n\n\u3053\u308c\u3089\u306e\u5024\u3092\u30d7\u30e9\u30f3\u30ca\u30fc\u306eyaml\u30d5\u30a1\u30a4\u30eb\u3067\u8a2d\u5b9a\u3057\u3066\u3042\u3052\u308c\u3070\u3088\u3044\u3067\u3059([Navigation Stack \u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://wiki.ros.org/navigation/Tutorials/RobotSetup)\u3067\u8a00\u3046\u3068\u3053\u308d\u306e\uff0cbase_local_planner_params.yaml \u306b\u76f8\u5f53)\uff0e\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4ed5\u69d8\uff08`max_planning_retries`\u4ee5\u5916\uff09\u306f[move_base\u306eWiki\u30da\u30fc\u30b8](http://wiki.ros.org/move_base)\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u3092\u691c\u7d22\u3059\u308b\u3068\u5f15\u3063\u304b\u304b\u308a\u307e\u3059\uff0e\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u89e3\u6790\n## \u524d\u63d0: Recovery \u72b6\u614b\u306b\u9077\u79fb\u3059\u308b\u6761\u4ef6\n- \u30e1\u30f3\u30d0\u5909\u6570`state_`\u304c`CLEARING`\u306b\u306a\u308b\u3068\uff0cRecovery \u72b6\u614b\u306b\u9077\u79fb\u3057\u307e\u3059\uff0e\n- \u4ee5\u964d\uff0c\u3053\u306e\u72b6\u614b\u9077\u79fb\u304c\u8d77\u3053\u308b\u5206\u5c90\u3092\u898b\u3066\u3044\u304d\u307e\u3059\uff0e\n\n```cpp:ros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.986\n      //we'll try to clear out space with any user-provided recovery behaviors\n      case CLEARING:\n        ROS_DEBUG_NAMED(\"move_base\",\"In clearing/recovery state\");\n        //we'll invoke whatever recovery behavior we're currently on if they're enabled\n        if(recovery_behavior_enabled_ && recovery_index_ < recovery_behaviors_.size()){\n          ROS_DEBUG_NAMED(\"move_base_recovery\",\"Executing behavior %u of %zu\", recovery_index_, recovery_behaviors_.size());\n          recovery_behaviors_[recovery_index_]->runBehavior();\n```\n\n- `runBehavior()`\u304c\u30ea\u30ab\u30d0\u30ea\u884c\u52d5\u30e1\u30bd\u30c3\u30c9\u3067\u3059\uff0e\n\n## 1. `controller_patience`\u79d2\uff0c\u505c\u6b62\u72b6\u614b\u304c\u7d99\u7d9a\u3057\u305f\u5834\u5408\n- \u30c7\u30d5\u30a9\u30eb\u30c8\u306f15\u79d2\u3067\u3059\uff0e\n\n```cpp:ros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.74\n    private_nh.param(\"controller_patience\", controller_patience_, 15.0);\n```\n\n- \u72b6\u614b\u9077\u79fb\u6761\u4ef6\u306e\u8a2d\u5b9a\u90e8\n\n```cpp:ros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.958\n          ROS_DEBUG_NAMED(\"move_base\", \"The local planner could not find a valid plan.\");\n          ros::Time attempt_end = last_valid_control_ + ros::Duration(controller_patience_);\n\n          //check if we've tried to find a valid control for longer than our time limit\n          if(ros::Time::now() > attempt_end){\n            //we'll move into our obstacle clearing mode\n            publishZeroVelocity();\n            state_ = CLEARING;\n            recovery_trigger_ = CONTROLLING_R;\n          }\n```\n\n## 2. `oscillation_timeout`\u79d2\uff0c\u632f\u52d5\u884c\u52d5\u304c\u7d99\u7d9a\u3057\u305f\u5834\u5408\n- \u30c7\u30d5\u30a9\u30eb\u30c80\u3067\u3059\uff0e\u3053\u308c\u3060\u3068\u632f\u52d5\u3057\u3066\u3066\u3082\u4e00\u751fRecovery\u306b\u79fb\u308a\u307e\u305b\u3093\uff0e\n\n```cpp:ros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.77\n    private_nh.param(\"oscillation_timeout\", oscillation_timeout_, 0.0);\n```\n\n- \u72b6\u614b\u9077\u79fb\u6761\u4ef6\u306e\u8a2d\u5b9a\u90e8\n\n```cpp:ros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.936\n        //check for an oscillation condition\n        if(oscillation_timeout_ > 0.0 &&\n            last_oscillation_reset_ + ros::Duration(oscillation_timeout_) < ros::Time::now())\n        {\n          publishZeroVelocity();\n          state_ = CLEARING;\n          recovery_trigger_ = OSCILLATION_R;\n        }\n```\n\n## 3. `max_planning_retries`\u56de\uff0c\u30ed\u30fc\u30ab\u30eb\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u8a66\u884c\u3057\u3066\u3082\u7d4c\u8def\u304c\u5f97\u3089\u308c\u306a\u304b\u3063\u305f\u5834\u5408\n- \u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068-1\u3067\u3059\uff0e\u3053\u308c\u3060\u3068Recovery\u72b6\u614b\u3078\u306e\u9077\u79fb\u306f\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u56de\u6570\u306b\u4f9d\u5b58\u3057\u306a\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\n- ROS Wiki\u306b\u306f\u8a18\u8f09\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u2026\n\n\n```cpp:ros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.75\n    private_nh.param(\"max_planning_retries\", max_planning_retries_, -1);  // disabled by default\n```\n\n- \u72b6\u614b\u9077\u79fb\u6761\u4ef6\u306e\u8a2d\u5b9a\u90e8\n\n```cpp:ros-planning/navigation/blob/indigo-devel/move_base/src/move_base.cpp_l.655\n        ROS_DEBUG_NAMED(\"move_base_plan_thread\",\"No Plan...\");\n        ros::Time attempt_end = last_valid_plan_ + ros::Duration(planner_patience_);\n\n        //check if we've tried to make a plan for over our time limit or our maximum number of retries\n        //issue #496: we stop planning when one of the conditions is true, but if max_planning_retries_\n        //is negative (the default), it is just ignored and we have the same behavior as ever\n        lock.lock();\n        if(runPlanner_ &&\n           (ros::Time::now() > attempt_end || ++planning_retries_ > uint32_t(max_planning_retries_))){\n          //we'll move into our obstacle clearing mode\n          state_ = CLEARING;\n          publishZeroVelocity();\n          recovery_trigger_ = PLANNING_R;\n        }\n```\n\n# \u304a\u308f\u308a\u306b\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\uff0e\u4e0a\u8a18\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u9077\u79fb\u6761\u4ef6\u304c\u3086\u308b\u304f\u306a\u308b\u3088\u3046\u306b\u8abf\u6574\u3057\u305f\u3068\u3053\u308d\uff0c\u78ba\u304b\u306bRecovery\u884c\u52d5\u306b\u5165\u308a\u3084\u3059\u304f\u306a\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\uff0e\n\n# \u53c2\u8003\u6587\u732e\n- [ROS Wiki - move_base](http://wiki.ros.org/move_base)\n- [ROS Wiki - Setup and Configuration of the Navigation Stack on a Robot](http://wiki.ros.org/navigation/Tutorials/RobotSetup)\n- [Github - ros-planning/navigation/move_base](https://github.com/ros-planning/navigation/blob/indigo-devel/move_base)\n", "tags": ["ROS"]}