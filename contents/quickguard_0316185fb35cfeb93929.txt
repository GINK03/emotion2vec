{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u524d\u56de TICK stack \u3092\u69cb\u7bc9\u3057\u305f\u969b\u306b telegraf \u306e Docker input \u3068 CloudWatch output \u306e plugin \u304c\u6c17\u306b\u306a\u3063\u305f\u306e\u3067\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u307f\u308b\u3002\n\n\u74b0\u5883\nAWS \u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30922\u53f0\u7528\u610f\n\nip-172-31-17-95 \uff1a docker, Telegraf\nip-172-31-17-94 \uff1a docker, Telegraf\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n\nCentOS release 6.7 (Final)\nDocker version 1.7.1\nTelegraf Version v0.10.0-52-g5349a3b\n\n\n\u5404\u7a2e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nDocker \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ sudo yum -y install epel-release\n$ sudo yum -y install docker-io\n\nTelegraf \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n2016/01/25 \u6642\u70b9\u306e\u30ea\u30ea\u30fc\u30b9\u7248(v0.10.0)\u3067\u306f CloudWatch output \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u30d3\u30eb\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n$ sudo yum -y install golang\n$ export GOPATH=`pwd`\n$ go get github.com/influxdata/telegraf\n$ cd $GOPATH/src/github.com/influxdata/telegraf\n$ make\n\n\u524d\u56de \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f7f\u3044\u307e\u308f\u3057\u306e\u305f\u3081\u3001telegraf \u306f rpm \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u306a\u306e\u3067\u3001\u51fa\u6765\u305f\u30d0\u30a4\u30ca\u30ea\u3092 /usr/bin/telegraf \u306b\u4e0a\u66f8\u304d\u3059\u308b\nversion \u78ba\u8a8d\n$ telegraf -version\nTelegraf - Version v0.10.0-52-g5349a3b\n\nmake \u6642\u306b\u56fa\u307e\u308b\u5834\u5408\nCentOS 6.X \u306e BasePepo \u3067\u5165\u308b git-1.7.1 \u3060\u3068 go get gopkg.in/**** \u3067\u56fa\u307e\u3063\u305f\u306e\u3067\u3001git-2.7.0 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u305f\u3089\u76f4\u3063\u305f\n\u539f\u56e0\ngit \u306e\u30d0\u30b0\u3089\u3057\u3044\nhttp://oranie.hatenablog.com/entry/20141104/1415103858\nhttps://github.com/spf13/hugo/issues/297\n\nTelegraf \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nAWS \u5074\u3067\u306e\u4e8b\u524d\u6e96\u5099\n\n\nIAM Role \u8a2d\u5b9a\nCredential \u53d6\u5f97\n\n\n\ndocker input, cloudwatch output \u306e\u8a2d\u5b9a\n$ sudo vi /etc/telegraf/telegraf.conf\n\n\n/etc/telegraf/telegraf.conf\n[agent]\n  interval = \"10s\"\n  round_interval = true\n  flush_interval = \"10s\"\n  flush_jitter = \"0s\"\n  debug = false\n  hostname = \"\"\n\n[[outputs.cloudwatch]]\n  region = 'ap-northeast-1'\n  namespace = 'InfluxData/Telegraf'          #cloudwatch \u5074\u306b\u8868\u793a\u3055\u308c\u308b NameSpace\n\n[[inputs.docker]]\n  endpoint = \"unix:///var/run/docker.sock\"\n  container_names = []\n\n\nCredential \u3092\u74b0\u5883\u5909\u6570\u306b\u30bb\u30c3\u30c8\u3059\u308b\nexport AWS_ACCESS_KEY_ID=\"AKXXXXXXXXXXXXXXXXXX\"\nexport AWS_SECRET_ACCESS_KEY=\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n\n\u5404\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067 telegraf \u8d77\u52d5\n$ sudo /etc/init.d/telegraf start\n\n\nDocker \u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n2\u53f0\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u9069\u5f53\u306b\u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n1\u53f0\u76ee\n$ sudo docker run --name nginx-1 -d -p 8080:80 nginx\n$ sudo docker run --name redis-1 -d redis\n\n2\u53f0\u76ee\n$ sudo docker run --name nginx-2 -d -p 8080:80 nginx\n$ sudo docker run --name redis-2 -d redis\n\n\nClowdWatch \u3067\u78ba\u8a8d\nAWS\u30b3\u30f3\u30bd\u30fc\u30eb\u306e Custom Metrics \u306b InfluxData/Telegraf \u304c\u8ffd\u52a0\u3055\u308c\u308b\n\n\n\u30b0\u30e9\u30d5\u4f5c\u6210\n\u4ee5\u4e0b\u306e\u30bf\u30b0\u304c\u4f5c\u6210\u3055\u308c\u308b\n\ncont_id (container ID)\ncont_image (container \u30a4\u30e1\u30fc\u30b8)\ncont_name (container \u540d)\n\n\u4e0a\u8a18\u30bf\u30b0\u3092\u4f7f\u3063\u3066\u3001\u7279\u5b9a\u306e\u30b3\u30f3\u30c6\u30ca\u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u30b0\u30e9\u30d5\u5316\u3067\u304d\u308b\n\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3057\u3066\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306b\u767b\u9332 \n\ntelegraf \u306e docker input plugin \u3067\u53d6\u5f97\u3067\u304d\u308b\u30e1\u30c8\u30ea\u30af\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n\n\nmem\n\ntotal_pgmafault\ncache\nmapped_file\ntotal_inactive_file\npgpgout\nrss\ntotal_mapped_file\nwriteback\nunevictable\npgpgin\ntotal_unevictable\npgmajfault\ntotal_rss\ntotal_rss_huge\ntotal_writeback\ntotal_inactive_anon\nrss_huge\nhierarchical_memory_limit\ntotal_pgfault\ntotal_active_file\nactive_anon\ntotal_active_anon\ntotal_pgpgout\ntotal_cache\ninactive_anon\nactive_file\npgfault\ninactive_file\ntotal_pgpgin\nmax_usage\nusage\nfailcnt\nlimit\n\n\n\n\ncpu\n\nthrottling_periods\nthrottling_throttled_periods\nthrottling_throttled_time\nusage_in_kernelmode\nusage_in_usermode\nusage_system\nusage_total\n\n\n\nnet\n\nrx_dropped\nrx_bytes\nrx_errors\ntx_packets\ntx_dropped\nrx_packets\ntx_errors\ntx_bytes\n\n\n\nblkio\n\nio_service_bytes_recursive_async\nio_service_bytes_recursive_read\nio_service_bytes_recursive_sync\nio_service_bytes_recursive_total\nio_service_bytes_recursive_write\nio_serviced_recursive_async\nio_serviced_recursive_read\nio_serviced_recursive_sync\nio_serviced_recursive_total\nio_serviced_recursive_write\n\n\n\n\u203bDocker version 1.7.1 \u3067\u306f net \u306e\u30e1\u30c8\u30ea\u30af\u30b9\u53d6\u5f97\u4e0d\u53ef\nDocker 1.9.1 \u3067\u306f\u53d6\u5f97\u3067\u304d\u305f\n$ telegraf -config telegraf.conf -input-filter docker -test | grep docker_net\n> docker_net,cont_id=52c817ad4cf8be1294bf1c0c089a9d2b60d5753c84359d0957047b8fd361e803,cont_image=redis,cont_name=redis-3,network=eth0 rx_bytes=648i,rx_dropped=0i,rx_errors=0i,rx_packets=8i,tx_bytes=648i,tx_dropped=0i,tx_errors=0i,tx_packets=8i 1453696361692103488\n\n#\u6982\u8981\n[\u524d\u56de](http://qiita.com/quickguard/items/31e8d5ced9be54c25a8c) TICK stack \u3092\u69cb\u7bc9\u3057\u305f\u969b\u306b telegraf \u306e Docker input \u3068 CloudWatch output \u306e plugin \u304c\u6c17\u306b\u306a\u3063\u305f\u306e\u3067\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u307f\u308b\u3002\n\n#\u74b0\u5883\nAWS \u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30922\u53f0\u7528\u610f\n\n- ip-172-31-17-95 \uff1a docker, Telegraf\n- ip-172-31-17-94 \uff1a docker, Telegraf\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n\n- CentOS release 6.7 (Final)\n- Docker version 1.7.1\n- Telegraf Version v0.10.0-52-g5349a3b\n\n#\u5404\u7a2e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nDocker \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ sudo yum -y install epel-release\n$ sudo yum -y install docker-io\n```\n\nTelegraf \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n2016/01/25 \u6642\u70b9\u306e\u30ea\u30ea\u30fc\u30b9\u7248(v0.10.0)\u3067\u306f CloudWatch output \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u30d3\u30eb\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\n```\n$ sudo yum -y install golang\n$ export GOPATH=`pwd`\n$ go get github.com/influxdata/telegraf\n$ cd $GOPATH/src/github.com/influxdata/telegraf\n$ make\n```\n\n[\u524d\u56de](http://qiita.com/quickguard/items/31e8d5ced9be54c25a8c) \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f7f\u3044\u307e\u308f\u3057\u306e\u305f\u3081\u3001telegraf \u306f rpm \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u306a\u306e\u3067\u3001\u51fa\u6765\u305f\u30d0\u30a4\u30ca\u30ea\u3092 `/usr/bin/telegraf` \u306b\u4e0a\u66f8\u304d\u3059\u308b\n\nversion \u78ba\u8a8d\n\n```\n$ telegraf -version\nTelegraf - Version v0.10.0-52-g5349a3b\n```\n\n**make \u6642\u306b\u56fa\u307e\u308b\u5834\u5408**\nCentOS 6.X \u306e BasePepo \u3067\u5165\u308b git-1.7.1 \u3060\u3068 `go get gopkg.in/****` \u3067\u56fa\u307e\u3063\u305f\u306e\u3067\u3001git-2.7.0 \u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u305f\u3089\u76f4\u3063\u305f\n\n**\u539f\u56e0**\ngit \u306e\u30d0\u30b0\u3089\u3057\u3044\nhttp://oranie.hatenablog.com/entry/20141104/1415103858\nhttps://github.com/spf13/hugo/issues/297\n\n\n#Telegraf \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n- AWS \u5074\u3067\u306e\u4e8b\u524d\u6e96\u5099\n  - IAM Role \u8a2d\u5b9a\n  - Credential \u53d6\u5f97\n\n\ndocker input, cloudwatch output \u306e\u8a2d\u5b9a\n\n```\n$ sudo vi /etc/telegraf/telegraf.conf\n```\n\n```bash:/etc/telegraf/telegraf.conf\n[agent]\n  interval = \"10s\"\n  round_interval = true\n  flush_interval = \"10s\"\n  flush_jitter = \"0s\"\n  debug = false\n  hostname = \"\"\n\n[[outputs.cloudwatch]]\n  region = 'ap-northeast-1'\n  namespace = 'InfluxData/Telegraf'          #cloudwatch \u5074\u306b\u8868\u793a\u3055\u308c\u308b NameSpace\n\n[[inputs.docker]]\n  endpoint = \"unix:///var/run/docker.sock\"\n  container_names = []\n```\n\nCredential \u3092\u74b0\u5883\u5909\u6570\u306b\u30bb\u30c3\u30c8\u3059\u308b\n\n```\nexport AWS_ACCESS_KEY_ID=\"AKXXXXXXXXXXXXXXXXXX\"\nexport AWS_SECRET_ACCESS_KEY=\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\n```\n\n\u5404\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067 telegraf \u8d77\u52d5\n\n```\n$ sudo /etc/init.d/telegraf start\n```\n\n#Docker \u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n\n2\u53f0\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u9069\u5f53\u306b\u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n\n1\u53f0\u76ee\n\n```\n$ sudo docker run --name nginx-1 -d -p 8080:80 nginx\n$ sudo docker run --name redis-1 -d redis\n```\n\n2\u53f0\u76ee\n\n```\n$ sudo docker run --name nginx-2 -d -p 8080:80 nginx\n$ sudo docker run --name redis-2 -d redis\n```\n\n#ClowdWatch \u3067\u78ba\u8a8d\n\nAWS\u30b3\u30f3\u30bd\u30fc\u30eb\u306e Custom Metrics \u306b `InfluxData/Telegraf` \u304c\u8ffd\u52a0\u3055\u308c\u308b\n\n![01.png](https://qiita-image-store.s3.amazonaws.com/0/105824/f2b4424a-ede9-e41d-660f-e084b9966b04.png)\n\n#\u30b0\u30e9\u30d5\u4f5c\u6210\n\u4ee5\u4e0b\u306e\u30bf\u30b0\u304c\u4f5c\u6210\u3055\u308c\u308b\n\n- cont_id (container ID)\n- cont_image (container \u30a4\u30e1\u30fc\u30b8)\n- cont_name (container \u540d)\n\n\u4e0a\u8a18\u30bf\u30b0\u3092\u4f7f\u3063\u3066\u3001\u7279\u5b9a\u306e\u30b3\u30f3\u30c6\u30ca\u30b0\u30eb\u30fc\u30d7\u306e\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u30b0\u30e9\u30d5\u5316\u3067\u304d\u308b\n\n**\u30b0\u30e9\u30d5\u3092\u4f5c\u6210\u3057\u3066\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306b\u767b\u9332** \n\n![02.png](https://qiita-image-store.s3.amazonaws.com/0/105824/2a91fb87-a782-81c2-7630-cb8521e7b4f4.png)\n\n\n\ntelegraf \u306e docker input plugin \u3067\u53d6\u5f97\u3067\u304d\u308b\u30e1\u30c8\u30ea\u30af\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n\n- mem\n  - total_pgmafault\n  - cache\n  - mapped_file\n  - total_inactive_file\n  - pgpgout\n  - rss\n  - total_mapped_file\n  - writeback\n  - unevictable\n  - pgpgin\n  - total_unevictable\n  - pgmajfault\n  - total_rss\n  - total_rss_huge\n  - total_writeback\n  - total_inactive_anon\n  - rss_huge\n  - hierarchical_memory_limit\n  - total_pgfault\n  - total_active_file\n  - active_anon\n  - total_active_anon\n  - total_pgpgout\n  - total_cache\n  - inactive_anon\n  - active_file\n  - pgfault\n  - inactive_file\n  - total_pgpgin\n  - max_usage\n  - usage\n  - failcnt\n  - limit       \n\n- cpu\n  - throttling_periods\n  - throttling_throttled_periods\n  - throttling_throttled_time\n  - usage_in_kernelmode\n  - usage_in_usermode\n  - usage_system\n  - usage_total\n\n- net\n  - rx_dropped\n  - rx_bytes\n  - rx_errors\n  - tx_packets\n  - tx_dropped\n  - rx_packets\n  - tx_errors\n  - tx_bytes\n\n- blkio\n  - io_service_bytes_recursive_async\n  - io_service_bytes_recursive_read\n  - io_service_bytes_recursive_sync\n  - io_service_bytes_recursive_total\n  - io_service_bytes_recursive_write\n  - io_serviced_recursive_async\n  - io_serviced_recursive_read\n  - io_serviced_recursive_sync\n  - io_serviced_recursive_total\n  - io_serviced_recursive_write\n\n\n**\u203bDocker version 1.7.1 \u3067\u306f net \u306e\u30e1\u30c8\u30ea\u30af\u30b9\u53d6\u5f97\u4e0d\u53ef**\n\n\nDocker 1.9.1 \u3067\u306f\u53d6\u5f97\u3067\u304d\u305f\n\n```\n$ telegraf -config telegraf.conf -input-filter docker -test | grep docker_net\n> docker_net,cont_id=52c817ad4cf8be1294bf1c0c089a9d2b60d5753c84359d0957047b8fd361e803,cont_image=redis,cont_name=redis-3,network=eth0 rx_bytes=648i,rx_dropped=0i,rx_errors=0i,rx_packets=8i,tx_bytes=648i,tx_dropped=0i,tx_errors=0i,tx_packets=8i 1453696361692103488\n```\n", "tags": ["AWS", "CloudWatch", "Telegraf", "monitoring", "docker"]}