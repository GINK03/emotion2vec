{"tags": ["Haskell", "\u60c5\u5f31"], "context": " More than 1 year has passed since last update.\n\nProblem\n\nUsing names.txt (right click and 'Save Link/Target As...'), a 46K text file containing over five-thousand first names, begin by sorting it into alphabetical order. Then working out the alphabetical value for each name, multiply this value by its alphabetical position in the list to obtain a name score.\nFor example, when the list is sorted into alphabetical order, COLIN, which is worth $3 + 15 + 12 + 9 + 14 = 53$, is the $938$th name in the list. So, COLIN would obtain a score of $938 \\times 53 = 49714$.\nWhat is the total of all the name scores in the file?\n\n\nCode in Haskell\n\nEuler_022.hs\nmodule Main where\nimport Data.List\n\nnv c = (fromEnum c)-64\n\nnvsum str = foldl (+) 0 (map nv str)\n\ncalc _ [] = []\ncalc n (x:xs) = (n*(nvsum x)):(calc (n+1) xs)\n\naggregate nlist = sum $ calc 1 nlist\n\ncosme [] = []\ncosme (x:xs)\n  |x == '\"' = cosme xs\n  |x == ',' = ' ':cosme xs\n  |otherwise = x: cosme xs\n\n\nmain = do\n  contents <- readFile \"names.txt\"\n  print $ aggregate $ sort $ words $ cosme contents\n\n\n\nAnswer\n8*******2\n\n# Problem\n\n> Using [names.txt](http://projecteuler.net/project/names.txt) (right click and 'Save Link/Target As...'), a 46K text file containing over five-thousand first names, begin by sorting it into alphabetical order. Then working out the alphabetical value for each name, multiply this value by its alphabetical position in the list to obtain a name score.\n> \n> For example, when the list is sorted into alphabetical order, COLIN, which is worth $3 + 15 + 12 + 9 + 14 = 53$, is the $938$th name in the list. So, COLIN would obtain a score of $938 \\times 53 = 49714$.\n> \n> What is the total of all the name scores in the file?\n\n# Code in Haskell\n\n```hs:Euler_022.hs\nmodule Main where\nimport Data.List\n\nnv c = (fromEnum c)-64\n\nnvsum str = foldl (+) 0 (map nv str)\n\ncalc _ [] = []\ncalc n (x:xs) = (n*(nvsum x)):(calc (n+1) xs)\n\naggregate nlist = sum $ calc 1 nlist\n\ncosme [] = []\ncosme (x:xs)\n  |x == '\"' = cosme xs\n  |x == ',' = ' ':cosme xs\n  |otherwise = x: cosme xs\n\n\nmain = do\n  contents <- readFile \"names.txt\"\n  print $ aggregate $ sort $ words $ cosme contents\n```\n\n# Answer\n\n8*******2\n"}