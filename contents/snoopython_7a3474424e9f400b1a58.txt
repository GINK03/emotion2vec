{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nmatplotlib\u306e\u30d7\u30ed\u30c3\u30c8\u4e0a\u3067\u30de\u30a6\u30b9\u306b\u3088\u308b\u30dc\u30c3\u30af\u30b9\u9818\u57df\u9078\u629e\u3092\u884c\u3044\u3001\u305d\u306e\u7d50\u679c(\u5ea7\u6a19)\u3092\u6c42\u3081\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u3053\u308c\u306e\u5b9f\u73fe\u306e\u305f\u3081\u306b\u306fmatplotlib.widgets\u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u3082\u3061\u308d\u3093matplotlib.org\u306b\u8f09\u3063\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u305d\u306e\u307e\u307e\u3067\u306f\u5ea7\u6a19\u3092\u683c\u7d0d\u3067\u304d\u306a\u3044\u306e\u3067\u4ee5\u4e0b\u306e\u30af\u30e9\u30b9\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u9818\u57df\u306e\u78ba\u5b9a\u5f8c\u306b\u8272\u4ed8\u304d\u30dc\u30c3\u30af\u30b9\u304c\u6b8b\u308b\u3088\u3046\u306b\u30a2\u30ec\u30f3\u30b8\u3057\u3066\u307f\u307e\u3057\u305f(\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u78ba\u5b9a\u5f8c\u306b\u30dc\u30c3\u30af\u30b9\u304c\u6d88\u3048\u3066\u3057\u307e\u3044\u307e\u3059)\u3002\n\nrectselect.py\n\u4ee5\u4e0b\u306erectselect.py\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\u8272\u4ed8\u304d\u30dc\u30c3\u30af\u30b9\u306e\u30a2\u30ec\u30f3\u30b8\u306b\u95a2\u308f\u308b\u306e\u304crelease\u95a2\u6570\u306a\u306e\u3067\u3001\u78ba\u5b9a\u5f8c\u306b\u30dc\u30c3\u30af\u30b9\u3092\u6d88\u3057\u305f\u3044\u5834\u5408\u306b\u306frelease\u306b\u95a2\u308f\u308b\u884c\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308c\u3070OK\u3067\u3059\u3002\n\nrectselect.py\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Rectangle\nfrom matplotlib.widgets import RectangleSelector\n\nclass RectSelect(object):\n    def __init__(self, ax=None):\n        self.ax = ax or plt.gca()\n        self.rect = Rectangle((0,0), 0, 0, color='orange', alpha=0.5)\n        self.ax.add_patch(self.rect)\n        self.blc = np.zeros(2)\n        self.trc = np.zeros(2)\n\n        def selector(event):\n            if event.key in ['Q', 'q'] and selector.RS.active:\n                print ('RectSelect deactivated.')\n                selector.RS.set_active(False)\n            if event.key in ['A', 'a'] and not selector.RS.active:\n                print ('RectSelect activated.')\n                selector.RS.set_active(True)\n\n        selector.RS = RectangleSelector(self.ax, self.callback)\n        self.ax.figure.canvas.mpl_connect('key_press_event', selector)\n        self.ax.figure.canvas.mpl_connect('button_release_event', self.release)\n\n    def callback(self, eclick, erelease):\n        x0, x1 = eclick.xdata, erelease.xdata\n        y0, y1 = eclick.ydata, erelease.ydata\n        self.blc = min(x0, x1), min(y0, y1)\n        self.trc = max(x0, x1), max(y0, y1)\n        blc_print = '({:0.4},{:0.4})'.format(*self.blc)\n        trc_print = '({:0.4},{:0.4})'.format(*self.trc)\n        print('blc={}, trc={}'.format(blc_print, trc_print))\n\n    def release(self, event):\n        self.rect.set_width(self.trc[0] - self.blc[0])\n        self.rect.set_height(self.trc[1] - self.blc[1])\n        self.rect.set_xy(self.blc)\n        self.ax.figure.canvas.draw()\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u5b9f\u969b\u306e\u4f7f\u7528\u306e\u969b\u306b\u306fplt.show()\u306e\u76f4\u524d\u306bRectSelect\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7f6e\u3051\u3070\u52d5\u4f5c\u3057\u307e\u3059\u3002\u5bfe\u8c61\u3068\u3059\u308baxes\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u3001\u5b9f\u969b\u306e\u52d5\u4f5c\u306e\u69d8\u5b50\u3067\u3059\u3002\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom rectselect import RectSelect\n# \u4f55\u304b\u30d7\u30ed\u30c3\u30c8\nx = np.random.random(20) * 10\ny = np.random.random(20) * 10\nplt.plot(x,y,'.')\n# \u30dc\u30c3\u30af\u30b9\u9078\u629e\nregion = RectSelect()\nplt.show()\n# \u30dc\u30c3\u30af\u30b9\u306e\u5de6\u4e0b(blc)\u3068\u53f3\u4e0a(trc)\u306e\u5ea7\u6a19\u3092\u8868\u793a\nprint(region.blc) # --> (2.338709677419355, 3.7239583333333335)\nprint(region.trc) # --> (8.4879032258064502, 8.671875)\n\n\n\u30dc\u30c3\u30af\u30b9\u9078\u629e\u4e2d\n\u9078\u629e\u9818\u57df\u304c\u7dda\u3067\u56f2\u307e\u308c\u3066\u8868\u793a\u3055\u308c\u308b\u3002\n\n\n\u30dc\u30c3\u30af\u30b9\u9078\u629e\u78ba\u5b9a\u5f8c\n\u9078\u629e\u9818\u57df\u304c\u5857\u308a\u3064\u3076\u3055\u308c\u3066\u8868\u793a\u3055\u308c\u308b\u3002\n\n## \u306f\u3058\u3081\u306b\n`matplotlib`\u306e\u30d7\u30ed\u30c3\u30c8\u4e0a\u3067\u30de\u30a6\u30b9\u306b\u3088\u308b\u30dc\u30c3\u30af\u30b9\u9818\u57df\u9078\u629e\u3092\u884c\u3044\u3001\u305d\u306e\u7d50\u679c(\u5ea7\u6a19)\u3092\u6c42\u3081\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u3053\u308c\u306e\u5b9f\u73fe\u306e\u305f\u3081\u306b\u306f`matplotlib.widgets`\u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u3082\u3061\u308d\u3093[matplotlib.org](http://matplotlib.org)\u306b\u8f09\u3063\u3066\u3044\u308b[\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9][samplecode]\u3067\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u305d\u306e\u307e\u307e\u3067\u306f\u5ea7\u6a19\u3092\u683c\u7d0d\u3067\u304d\u306a\u3044\u306e\u3067\u4ee5\u4e0b\u306e\u30af\u30e9\u30b9\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u9818\u57df\u306e\u78ba\u5b9a\u5f8c\u306b\u8272\u4ed8\u304d\u30dc\u30c3\u30af\u30b9\u304c\u6b8b\u308b\u3088\u3046\u306b\u30a2\u30ec\u30f3\u30b8\u3057\u3066\u307f\u307e\u3057\u305f([\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9][samplecode]\u3067\u306f\u78ba\u5b9a\u5f8c\u306b\u30dc\u30c3\u30af\u30b9\u304c\u6d88\u3048\u3066\u3057\u307e\u3044\u307e\u3059)\u3002\n\n[samplecode]: http://matplotlib.org/api/widgets_api.html#matplotlib.widgets.RectangleSelector\n\n## rectselect.py\n\u4ee5\u4e0b\u306e`rectselect.py`\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\u8272\u4ed8\u304d\u30dc\u30c3\u30af\u30b9\u306e\u30a2\u30ec\u30f3\u30b8\u306b\u95a2\u308f\u308b\u306e\u304c`release`\u95a2\u6570\u306a\u306e\u3067\u3001\u78ba\u5b9a\u5f8c\u306b\u30dc\u30c3\u30af\u30b9\u3092\u6d88\u3057\u305f\u3044\u5834\u5408\u306b\u306f`release`\u306b\u95a2\u308f\u308b\u884c\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308c\u3070OK\u3067\u3059\u3002\n\n```py:rectselect.py\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.patches import Rectangle\nfrom matplotlib.widgets import RectangleSelector\n\nclass RectSelect(object):\n    def __init__(self, ax=None):\n        self.ax = ax or plt.gca()\n        self.rect = Rectangle((0,0), 0, 0, color='orange', alpha=0.5)\n        self.ax.add_patch(self.rect)\n        self.blc = np.zeros(2)\n        self.trc = np.zeros(2)\n\n        def selector(event):\n            if event.key in ['Q', 'q'] and selector.RS.active:\n                print ('RectSelect deactivated.')\n                selector.RS.set_active(False)\n            if event.key in ['A', 'a'] and not selector.RS.active:\n                print ('RectSelect activated.')\n                selector.RS.set_active(True)\n\n        selector.RS = RectangleSelector(self.ax, self.callback)\n        self.ax.figure.canvas.mpl_connect('key_press_event', selector)\n        self.ax.figure.canvas.mpl_connect('button_release_event', self.release)\n\n    def callback(self, eclick, erelease):\n        x0, x1 = eclick.xdata, erelease.xdata\n        y0, y1 = eclick.ydata, erelease.ydata\n        self.blc = min(x0, x1), min(y0, y1)\n        self.trc = max(x0, x1), max(y0, y1)\n        blc_print = '({:0.4},{:0.4})'.format(*self.blc)\n        trc_print = '({:0.4},{:0.4})'.format(*self.trc)\n        print('blc={}, trc={}'.format(blc_print, trc_print))\n\n    def release(self, event):\n        self.rect.set_width(self.trc[0] - self.blc[0])\n        self.rect.set_height(self.trc[1] - self.blc[1])\n        self.rect.set_xy(self.blc)\n        self.ax.figure.canvas.draw()\n```\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u5b9f\u969b\u306e\u4f7f\u7528\u306e\u969b\u306b\u306f`plt.show()`\u306e\u76f4\u524d\u306b`RectSelect`\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u7f6e\u3051\u3070\u52d5\u4f5c\u3057\u307e\u3059\u3002\u5bfe\u8c61\u3068\u3059\u308b`axes`\u3092\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u3001\u5b9f\u969b\u306e\u52d5\u4f5c\u306e\u69d8\u5b50\u3067\u3059\u3002\n\n```py:\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom rectselect import RectSelect\n# \u4f55\u304b\u30d7\u30ed\u30c3\u30c8\nx = np.random.random(20) * 10\ny = np.random.random(20) * 10\nplt.plot(x,y,'.')\n# \u30dc\u30c3\u30af\u30b9\u9078\u629e\nregion = RectSelect()\nplt.show()\n# \u30dc\u30c3\u30af\u30b9\u306e\u5de6\u4e0b(blc)\u3068\u53f3\u4e0a(trc)\u306e\u5ea7\u6a19\u3092\u8868\u793a\nprint(region.blc) # --> (2.338709677419355, 3.7239583333333335)\nprint(region.trc) # --> (8.4879032258064502, 8.671875)\n```\n### \u30dc\u30c3\u30af\u30b9\u9078\u629e\u4e2d\n\u9078\u629e\u9818\u57df\u304c\u7dda\u3067\u56f2\u307e\u308c\u3066\u8868\u793a\u3055\u308c\u308b\u3002\n![select.png](https://qiita-image-store.s3.amazonaws.com/0/44000/a176f28b-060a-d61f-9b26-c2bdb908f48d.png)\n\n### \u30dc\u30c3\u30af\u30b9\u9078\u629e\u78ba\u5b9a\u5f8c\n\u9078\u629e\u9818\u57df\u304c\u5857\u308a\u3064\u3076\u3055\u308c\u3066\u8868\u793a\u3055\u308c\u308b\u3002\n![release.png](https://qiita-image-store.s3.amazonaws.com/0/44000/fc9336bc-e9a2-fcc4-040c-dca26ea8de8d.png)\n", "tags": ["Python", "matplotlib"]}