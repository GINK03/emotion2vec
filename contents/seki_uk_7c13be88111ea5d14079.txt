{"context": "\n\njersey\nJAX-RS\u306e\u5b9f\u88c5\u3067\u7c21\u5358\u306bRestful\u306aWeb\u30b5\u30fc\u30d3\u30b9\u304c\u4f5c\u6210\u3067\u304d\u308b\n\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u306e\u4f5c\u6210\nmaven archetype\u304b\u3089\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nmvn archetype:generate -DarchetypeArtifactId=jersey-quickstart-grizzly2 \\\n-DarchetypeGroupId=org.glassfish.jersey.archetypes -DinteractiveMode=false \\\n-DgroupId=com.example -DartifactId=simple-service -Dpackage=com.example \\\n-DarchetypeVersion=2.23.2\n\nsimple-service\u3068\u3044\u3046\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\nmain\u3092\u5b9f\u884c\u3057\u3001http://localhost:8080/myapp/myresource \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068Got it!\u3068\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\nJSON\u3092\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\u307e\u305aPOM\u3092\u78ba\u8a8d\u3059\u308b\u3068JSON\u3092\u6271\u3046\u305f\u3081\u306b\u306f\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3057\u3066\u304f\u3060\u3055\u3044\u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u7b87\u6240\u304c\u3042\u308a\u307e\u3059\u3002\n         <!-- uncomment this to get JSON support:\n         <dependency>\n            <groupId>org.glassfish.jersey.media</groupId>\n            <artifactId>jersey-media-moxy</artifactId>\n        </dependency>\n        -->\n\n\u3053\u3061\u3089\u306e\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3057\u307e\u3057\u3087\u3046\u3002\n\u3053\u308c\u3067JSON\u3092\u53d7\u3051\u53d6\u308c\u308b\u306f\u305a\u30fb\u30fb\u30fb\n\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\n@POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public void viewJSON(HashMap<String,String> map){\n        for(String s:map.keySet()){\n            System.out.println(s + \":\" + map.get(s));\n        }\n    }\n\nDHC\u306a\u3069\u3067\u9069\u5f53\u306aJSON\u3092\u9001\u3063\u3066\u307f\u308b\u3068\u30fb\u30fb\u30fb415(Unsupported Mediatype)\n\u3069\u3046\u3084\u3089\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u3089\u3057\u3044\u3002\n\u307e\u305a\u30de\u30c3\u30d4\u30f3\u30b0\u306b\u5fc5\u8981\u306a\u4f9d\u5b58\u6027\u3092\u8ffd\u52a0\u3057\u3066\n<dependency>\n    <groupId>org.glassfish.jersey.media</groupId>\n    <artifactId>jersey-media-json-jackson</artifactId>\n    <version>${jersey.version}</version>\n</dependency>\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\n@Provider\npublic class MyObjectMapperProvider implements ContextResolver<ObjectMapper> {\n    final ObjectMapper defaultObjectMapper;\n    public MyObjectMapperProvider() {\n        defaultObjectMapper = createDefaultMapper();\n    }\n    @Override\n    public ObjectMapper getContext(Class<?> type) {\n            return defaultObjectMapper;\n    }\n    private static ObjectMapper createDefaultMapper() {\n        return new ObjectMapper();\n    }\n}\n\n\u3055\u3089\u306bResourceConfig\u306b\u3082\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\n.register(MyObjectMapperProvider.class) \n.register(JacksonFeature.class);\n\n\u3053\u308c\u3067JSON\u304c\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nXHR\u306b\u5bfe\u5fdc\u3059\u308b\n\u4ee5\u4e0b\u306e\u3088\u3046\u306ahtml\u3092\u66f8\u304dXHR\u3067json\u3092\u9001\u4fe1\u3059\u308b\u30c6\u30b9\u30c8\u3092\u884c\u3046\u3002\n<html>\n<head>\n<title>test</title>\n</head>\n<body>\n<script type=\"text/javascript\">\n<!--\nwindow.onload = function()\n{\n    var xmlhttp = new XMLHttpRequest();\n    xmlhttp.open(\"POST\", \"http://localhost:8080/myapp/myresource\");\n    xmlhttp.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n    xmlhttp.send(JSON.stringify({\"key\":\"value\"}));\n};\n// -->\n</script>\n</body>\n</html>\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3067\u3066\u5f3e\u304b\u308c\u308b\ntest.html:1 XMLHttpRequest cannot load http://localhost:8080/myapp/myresource. Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'null' is therefore not allowed access.\n\n\u3053\u308c\u304c\u540c\u4e00\u751f\u6210\u5143\u30dd\u30ea\u30b7\u30fc\u3068\u3044\u3046\u3084\u3064\u3067\u3001\u7279\u5b9a\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059XHR\u306b\u306f\u30d7\u30ea\u30d5\u30e9\u30a4\u30c8\u3068\u3044\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308a\u5b89\u5168\u304b\u3069\u3046\u304b\u78ba\u304b\u3081\u308b\u3002\n\u305d\u3057\u3066\u300c\u5b89\u5168\u3067\u3059\u3088\u300d\u3068\u3044\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5e30\u3063\u3066\u304d\u305f\u3089\u6b63\u5f0f\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u3044\u3046\u3082\u306e\u3002\n\u300c\u5b89\u5168\u3067\u3059\u3088\u300d\u3068\u3044\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u8fd4\u3059\u306e\u3092\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u66f8\u304f\u306e\u306f\u624b\u9593\u3060\u3057\u5b9f\u88c5\u4e0a\u3088\u304f\u306a\u3044\u306e\u3067filter\u3092\u4f7f\u3044\u3059\u3079\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u300c\u5b89\u5168\u3067\u3059\u3088\u300d\u3068\u3044\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3002\npublic class CORSResponseFilter\nimplements ContainerResponseFilter {\n\n    public void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)\n            throws IOException {\n\n        MultivaluedMap<String, Object> headers = responseContext.getHeaders();\n\n        headers.add(\"Access-Control-Allow-Origin\", \"*\");\n        headers.add(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");          \n        headers.add(\"Access-Control-Allow-Headers\", \"Content-Type\");\n    }\n\n}\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306afilter\u3092\u4f5c\u6210\u3057\u3066\u3001ResourceConfig\u306b\u3082\u8ffd\u52a0\n.register(CORSResponseFilter.class);\n\n\u3053\u308c\u3067jersey\u3067XHR\u3067\u9001\u3089\u308c\u3066\u304d\u305fJSON\u3092\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u307e\u3068\u3081\njersey\u3067XHR\u3067\u9001\u3089\u308c\u3066\u304d\u305fJSON\u3092\u51e6\u7406\u3059\u308b\u306b\u306f\n\n\u30de\u30c3\u30d4\u30f3\u30b0\n\u30d5\u30a3\u30eb\u30bf\u30fc\n\n\u304c\u5fc5\u8981\n#jersey\nJAX-RS\u306e\u5b9f\u88c5\u3067\u7c21\u5358\u306bRestful\u306aWeb\u30b5\u30fc\u30d3\u30b9\u304c\u4f5c\u6210\u3067\u304d\u308b\n\n#\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u306e\u4f5c\u6210\nmaven archetype\u304b\u3089\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\nmvn archetype:generate -DarchetypeArtifactId=jersey-quickstart-grizzly2 \\\n-DarchetypeGroupId=org.glassfish.jersey.archetypes -DinteractiveMode=false \\\n-DgroupId=com.example -DartifactId=simple-service -Dpackage=com.example \\\n-DarchetypeVersion=2.23.2\n```\n\nsimple-service\u3068\u3044\u3046\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\nmain\u3092\u5b9f\u884c\u3057\u3001http://localhost:8080/myapp/myresource \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068Got it!\u3068\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n#JSON\u3092\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\u307e\u305aPOM\u3092\u78ba\u8a8d\u3059\u308b\u3068JSON\u3092\u6271\u3046\u305f\u3081\u306b\u306f\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3057\u3066\u304f\u3060\u3055\u3044\u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u7b87\u6240\u304c\u3042\u308a\u307e\u3059\u3002\n\n```java\n         <!-- uncomment this to get JSON support:\n         <dependency>\n            <groupId>org.glassfish.jersey.media</groupId>\n            <artifactId>jersey-media-moxy</artifactId>\n        </dependency>\n        -->\n```\n\u3053\u3061\u3089\u306e\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u3053\u308c\u3067JSON\u3092\u53d7\u3051\u53d6\u308c\u308b\u306f\u305a\u30fb\u30fb\u30fb\n\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ea\u30bd\u30fc\u30b9\u3092\u4f5c\u6210\n\n```java\n@POST\n    @Consumes(MediaType.APPLICATION_JSON)\n    public void viewJSON(HashMap<String,String> map){\n    \tfor(String s:map.keySet()){\n    \t\tSystem.out.println(s + \":\" + map.get(s));\n    \t}\n    }\n```\n\nDHC\u306a\u3069\u3067\u9069\u5f53\u306aJSON\u3092\u9001\u3063\u3066\u307f\u308b\u3068\u30fb\u30fb\u30fb415(Unsupported Mediatype)\n\u3069\u3046\u3084\u3089\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u3089\u3057\u3044\u3002\n\n\u307e\u305a\u30de\u30c3\u30d4\u30f3\u30b0\u306b\u5fc5\u8981\u306a\u4f9d\u5b58\u6027\u3092\u8ffd\u52a0\u3057\u3066\n\n```java\n<dependency>\n\t<groupId>org.glassfish.jersey.media</groupId>\n\t<artifactId>jersey-media-json-jackson</artifactId>\n\t<version>${jersey.version}</version>\n</dependency>\n```\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\n\n```java\n@Provider\npublic class MyObjectMapperProvider implements ContextResolver<ObjectMapper> {\n    final ObjectMapper defaultObjectMapper;\n    public MyObjectMapperProvider() {\n        defaultObjectMapper = createDefaultMapper();\n    }\n    @Override\n    public ObjectMapper getContext(Class<?> type) {\n            return defaultObjectMapper;\n    }\n    private static ObjectMapper createDefaultMapper() {\n        return new ObjectMapper();\n    }\n}\n```\n\n\u3055\u3089\u306bResourceConfig\u306b\u3082\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\n\n```java\n.register(MyObjectMapperProvider.class) \n.register(JacksonFeature.class);\n```\n\n\n\u3053\u308c\u3067JSON\u304c\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n#XHR\u306b\u5bfe\u5fdc\u3059\u308b\n\u4ee5\u4e0b\u306e\u3088\u3046\u306ahtml\u3092\u66f8\u304dXHR\u3067json\u3092\u9001\u4fe1\u3059\u308b\u30c6\u30b9\u30c8\u3092\u884c\u3046\u3002\n\n```html\n<html>\n<head>\n<title>test</title>\n</head>\n<body>\n<script type=\"text/javascript\">\n<!--\nwindow.onload = function()\n{\n\tvar xmlhttp = new XMLHttpRequest();\n\txmlhttp.open(\"POST\", \"http://localhost:8080/myapp/myresource\");\n\txmlhttp.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n\txmlhttp.send(JSON.stringify({\"key\":\"value\"}));\n};\n// -->\n</script>\n</body>\n</html>\n```\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3067\u3066\u5f3e\u304b\u308c\u308b\n\n```\ntest.html:1 XMLHttpRequest cannot load http://localhost:8080/myapp/myresource. Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'null' is therefore not allowed access.\n```\n\n\u3053\u308c\u304c\u540c\u4e00\u751f\u6210\u5143\u30dd\u30ea\u30b7\u30fc\u3068\u3044\u3046\u3084\u3064\u3067\u3001\u7279\u5b9a\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059XHR\u306b\u306f\u30d7\u30ea\u30d5\u30e9\u30a4\u30c8\u3068\u3044\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308a\u5b89\u5168\u304b\u3069\u3046\u304b\u78ba\u304b\u3081\u308b\u3002\n\u305d\u3057\u3066\u300c\u5b89\u5168\u3067\u3059\u3088\u300d\u3068\u3044\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5e30\u3063\u3066\u304d\u305f\u3089\u6b63\u5f0f\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u3044\u3046\u3082\u306e\u3002\n\n\u300c\u5b89\u5168\u3067\u3059\u3088\u300d\u3068\u3044\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u8fd4\u3059\u306e\u3092\u3059\u3079\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u306b\u66f8\u304f\u306e\u306f\u624b\u9593\u3060\u3057\u5b9f\u88c5\u4e0a\u3088\u304f\u306a\u3044\u306e\u3067filter\u3092\u4f7f\u3044\u3059\u3079\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u300c\u5b89\u5168\u3067\u3059\u3088\u300d\u3068\u3044\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3002\n\n```java\npublic class CORSResponseFilter\nimplements ContainerResponseFilter {\n\n\tpublic void filter(ContainerRequestContext requestContext, ContainerResponseContext responseContext)\n\t\t\tthrows IOException {\n\n\t\tMultivaluedMap<String, Object> headers = responseContext.getHeaders();\n\n\t\theaders.add(\"Access-Control-Allow-Origin\", \"*\");\n\t\theaders.add(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");\t\t\t\n\t\theaders.add(\"Access-Control-Allow-Headers\", \"Content-Type\");\n\t}\n\n}\n```\n\u4e0a\u8a18\u306e\u3088\u3046\u306afilter\u3092\u4f5c\u6210\u3057\u3066\u3001ResourceConfig\u306b\u3082\u8ffd\u52a0\n\n```java\n.register(CORSResponseFilter.class);\n```\n\n\u3053\u308c\u3067jersey\u3067XHR\u3067\u9001\u3089\u308c\u3066\u304d\u305fJSON\u3092\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n#\u307e\u3068\u3081\njersey\u3067XHR\u3067\u9001\u3089\u308c\u3066\u304d\u305fJSON\u3092\u51e6\u7406\u3059\u308b\u306b\u306f\n\n- \u30de\u30c3\u30d4\u30f3\u30b0\n- \u30d5\u30a3\u30eb\u30bf\u30fc\n\n\u304c\u5fc5\u8981\n\n\n\n\n\n\n\n\n", "tags": ["JavaEE7", "jersey", "JAX-RS", "JSON", "CORS"]}