{"tags": ["serverless", "APIGateway", "lambda", "Node.js"], "context": "\n\n\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c1\u7ae0 \u301cnodejs\u306etemplate\u7de8\u301c\n\n\u3042\u3089\u3059\u3058\n\u6bce\u5e74\u30d0\u30ec\u30f3\u30bf\u30a4\u30f3\u30c7\u30fc\u306e\u6642\u671f\u306b\u306a\u308b\u3068\u3001\u30b9\u30ae\u82b1\u7c89\u3067\u4f53\u8abf\u304c\u7d76\u4e0d\u8abf\u306b\u306a\u308a\u307e\u3059\u3002\n\u75d2\u3044\u76ee\u3092\u64e6\u308a\u306a\u304c\u3089\u3001\u9f3b\u3092\u304b\u307f\u306a\u304c\u3089\u5fc5\u6b7b\u3067\u3053\u306e\u6295\u7a3f\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u4f1a\u793e\u306b\u30b8\u30e7\u30a4\u30f3\u3057\u3066\u304b\u3089\u3001\u3082\u3046\uff12\u5e74\u304f\u3089\u3044\u7d4c\u3061\u307e\u3057\u305f\u3002\n\u4eca\u56de\u304b\u3089\u306f\u5c11\u3057\u8a71\u984c\u306b\u306a\u3063\u3066\u3044\u308b\u300c\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u300d\u3068\u3044\u3046\u30cd\u30bf\u3092\u30b7\u30ea\u30fc\u30ba\u3067\u516c\u958b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u203b\u5f8c\u3005\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5fdc\u3058\u3066\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u30b9\u30c8\u30c3\u30af\u3057\u3066\u304a\u304f\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\n\u81ea\u5206\u306f\u67d0\u793e\u3067CTO\u3092\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u982d\u3067\u3063\u304b\u3061\u306b\u7406\u8ad6\u3070\u3063\u304b\u308a\u5b66\u7fd2\u3059\u308b\u3088\u308a\u306f\u3001\u30a4\u30e1\u30fc\u30b8\u304c\u306a\u3093\u3068\u306a\u304f\u63b4\u3081\u308b\u3088\u3046\u306b\u5b66\u7fd2\u3057\u3001\u5b9f\u8df5\u306e\u4e2d\u3067\u77e5\u8b58\u3092\u6df1\u3081\u3066\u3044\u304f\u65b9\u304c\u52b9\u7387\u7684\u306b\u5b66\u7fd2\u51fa\u6765\u308b\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\u6559\u80b2\u30b9\u30bf\u30a4\u30eb\u3068\u3057\u3066\u306f\u6b63\u3057\u3044\u4e8b\u3092\u304d\u3063\u3061\u308a\u304b\u3063\u3061\u308a\u6559\u3048\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u672a\u7d4c\u9a13\u30ec\u30d9\u30eb\u306e\u4eba\u304c\u306a\u3093\u3068\u306a\u304f\u63b4\u3081\u308b\u3088\u3046\u306b\u3001\u8cc7\u6599\u3092\u69cb\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b7\u30ea\u30fc\u30ba\u30cd\u30bf\u3067\u9032\u3081\u307e\u3059\u3002\n\n\n\nNo.\n\u8a18\u4e8b\n\n\n\n\n1\n\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c1\u7ae0 \u301cnodejs\u306etemplate\u5229\u7528\u7de8\u301c\n\n\n2\n\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c2\u7ae0 \u301cAPI Gateway\u5229\u7528\u7de8\u301c\n\n\n3\n[\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c3\u7ae0 \u301cDynamoDB\u5229\u7528\u7de8\u301c]\n\n\n\n\u3067\u306f\u3001\u4eca\u56de\u3082\u306f\u3058\u3081\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff01\n\n\u306f\u3058\u3081\u306b\n\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u306f\u5b57\u306e\u5982\u304f\u3001\u30b5\u30fc\u30d0\u30fc\u304c\u306a\u3044\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u3059\u3002\nAWS\u3067\u3044\u3046\u3068\u3053\u308d\u306eEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3059\u3089\u5fc5\u8981\u306a\u304f\u3001\u4e88\u3081\u7528\u610f\u3055\u308c\u305f\u6a5f\u80fd\u306e\u30b5\u30fc\u30d3\u30b9(Function-as-a-Service)\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u4e8b\u3092\u8a00\u3044\u307e\u3059\u3002\nFaaS\u306a\u3069\u3068\u8a00\u308f\u308c\u305f\u308a\u3057\u307e\u3059\u304c\u3001AWS\u3067\u3082\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u7cfb\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u5897\u3048\u3066\u3044\u307e\u3059\u306d\u3002\n\u4eca\u56de\u306f\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u7528\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\u958b\u767a\u304c\u9032\u3093\u3067\u3044\u308bserverless\u3092\u4f7f\u3063\u3066\nAWS Lambda\u3001AWS API Gateway, AWS DynamoDB\u306a\u3069\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u4f53\u9a13\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u74b0\u5883\n\nMac\u74b0\u5883\n10.11.6\n\n\nnode\u74b0\u5883\n$ nodebrew ls\n\nv0.12.14\n\n$ nodebrew install-binary v7.4.0\n\n$ nodebrew ls\nv0.12.14\nv7.4.0\n\n\npython\u74b0\u5883\n$ pyenv versions\n  system\n  2.7.12\n\n$ pyenv install -v 3.5.2\n\n$ eval \"$(pyenv init -)\"\n\n$ pyenv shell 3.5.2\n\n$ python --version\nPython 3.5.2\n\n\nawscli\u74b0\u5883\n$ pip install awscli\n\n$ aws --version\naws-cli/1.11.9 Python/2.7.10 Darwin/15.6.0 botocore/1.4.66\n\n\nserverless\u74b0\u5883\n$ npm install serverless -g\n\n$ serverless --version\n1.5.1\n\n\nserverless \u30c6\u30b9\u30c8\u7528IAM\u3092\u4f5c\u6210\n\nIAM\u3092\u4f5c\u6210\u3059\u308b\n\u30e6\u30fc\u30b6\u30fc\u540d: serverlesstest\n\u30a2\u30af\u30bb\u30b9\u306e\u7a2e\u985e: \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9\n\n\n\u65e2\u5b58\u306e\u30dd\u30ea\u30b7\u30fc\u3092\u76f4\u63a5\u30a2\u30bf\u30c3\u30c1\n\n\nAWSLambdaFullAccess\nIAMFullAccess\nAmazonS3FullAccess\nAmazonAPIGatewayAdministrator\nAWSCloudFormationReadOnlyAccess\n\n\n\u72ec\u81ea\u306e\u30dd\u30ea\u30b7\u30fc\u3092\u4f5c\u6210\n\u30dd\u30ea\u30b7\u30fc\u540d:AWSCloudFormationCreateUpdateServiceOnlyAccess\n\u30dd\u30ea\u30b7\u30fc\u6982\u8981: \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3092\u8a66\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u203b\u672c\u756a\u74b0\u5883\u3067\u306f\u5229\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\n\u753b\u50cf\u306e\u8d64\u67a0\u306e\u300c\u72ec\u81ea\u306e\u30dd\u30ea\u30b7\u30fc\u3092\u4f5c\u6210\u300d\u3092\u62bc\u4e0b\u3057\n\u4ee5\u4e0b\u306e\u6587\u5b57\u5217\u3092\u30dd\u30ea\u30b7\u30fc\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3078\u30b3\u30d4\u30fc\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1449904348000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"cloudformation:CreateStack\",\n                \"cloudformation:UpdateStack\"\n            ],\n            \"Resource\": [\n                \"arn:aws:cloudformation:ap-northeast-1:xxxxxxxxxxxxxxxx:stack/*\"\n            ]\n        }\n    ]\n}\n\n\u300c\u30dd\u30ea\u30b7\u30fc\u540d\u300d\u3001\u300c\u8aac\u660e\u300d\u3001\u300c\u30dd\u30ea\u30b7\u30fc\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u300d\u3092\u5165\u529b\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u753b\u9762\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30dd\u30ea\u30b7\u30fc\u306e\u4f5c\u6210\u3092\u62bc\u4e0b\u3057\u305f\u3089\u3001IAM\u306e\u4f5c\u6210\u753b\u9762\u306b\u623b\u308a\u300c\u66f4\u65b0\u300d\u3092\u62bc\u4e0b\u3057\u3001\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u203b\u691c\u7d22\u3092\u3059\u308b\u3068\u30bf\u30a4\u30d7\u304c\u30e6\u30fc\u30b6\u30fc\u306e\u3088\u308b\u7ba1\u7406\u306e\u72ec\u81ea\u306b\u4f5c\u3063\u305f\u30dd\u30ea\u30b7\u30fc\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\n\n\n\n\nAWS CLI\u306e\u65b0\u898f\u30e6\u30fc\u30b6\u30fc\u306e\u8a2d\u5b9a\n\u3044\u3061\u3044\u3061credentials\u306e\u4e2d\u8eab\u3092\u30b3\u30e1\u30f3\u30c8\u30a4\u30f3\u30fb\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u306e\u3082\u9762\u5012\u306a\u306e\u3067\n\u81ea\u5206\u306fAWS CLI\u3092\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u6bce\u7ba1\u7406\u3057\u3066\u307e\u3059\u3002\n\u4eca\u56de\u306fprofile\u540d\u300cserverlesstest\u300d\u3067\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002\n\n\n\n\u30d5\u30a1\u30a4\u30eb\n\u5099\u8003\n\n\n\n\n~/.aws/config\n\u8a8d\u8a3c\u60c5\u5831\u4ee5\u5916\u306e\u60c5\u5831(\u30ea\u30fc\u30b8\u30e7\u30f3\u3084\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306a\u3069)\n\n\n~/.aws/credentials\n\u8a8d\u8a3c\u60c5\u5831\n\n\n\n\nAWS CLI\u306e\u8a2d\u5b9a\u4f5c\u6210\n$ aws configure --profile serverlesstest\nAWS Access Key ID [None]: XXXXXXXXXXXXXXXXXXXXX\nAWS Secret Access Key [None]: XXXXXXXXXXXXXXXXXXXXX\nDefault region name [None]: ap-northeast-1\nDefault output format [None]: json\n\n\u4f8b) ~/.aws/config\n$ cat ~/.aws/config\n[profile serverlesstest]\noutput = json\nregion = ap-northeast-1\n\n\u4f8b) ~/.aws/credentials\n$ cat ~/.aws/credentials\n[serverlesstest]\naws_access_key_id = XXXXXXXXXXXXXX\naws_secret_access_key = XXXXXXXXXXXXXX\n\n\nserverless template\u304b\u3089\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n\u4eca\u56de\u306fnodejs\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ serverless create --template aws-nodejs --provider aws --profile serverlesstest --path serverlesstest --verbose\nServerless: Generating boilerplate...\nServerless: Generating boilerplate in \"/Users/xxxxxxxxxxx/Documents/serverlesstest\"\n _______                             __\n|   _   .-----.----.--.--.-----.----|  .-----.-----.-----.\n|   |___|  -__|   _|  |  |  -__|   _|  |  -__|__ --|__ --|\n|____   |_____|__|  \\___/|_____|__| |__|_____|_____|_____|\n|   |   |             The Serverless Application Framework\n|       |                           serverless.com, v1.5.1\n -------'\n\nServerless: Successfully generated boilerplate for template: \"aws-nodejs\"\n\n\n\u751f\u6210\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\n% ls ./serverlesstest\nhandler.js\nserverless.yml\n\n\n\u8a2d\u5b9a\u5909\u66f4\n\u8a2d\u5b9a\u7b87\u6240\u306f\u300cprofile\u300d\u3001\u300cstage\u300d\u3001\u300cregion\u300d\u3067\u3059\u3002\n$ cd serverlesstest\n$ vi serverless.yml\n\n\n\u5909\u66f4\u7b87\u6240\nprovider:\n  name: aws\n  runtime: nodejs4.3\n\n\u21e3\u21e3\u21e3\u21e3\u21e3 \nprovider:\n  name: aws\n  runtime: nodejs4.3\n  profile: serverlesstest\n  stage: dev\n  region: ap-northeast-1\n\n\n\u30c7\u30d7\u30ed\u30a4\n$ serverless deploy --provider aws --profile serverlesstest -v\n\n\u7121\u4e8b\u306b\u6210\u529f\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u3068\u306a\u308b\u3002\n\n\nAWS\u306e\u5404\u30b5\u30fc\u30d3\u30b9\u78ba\u8a8d\n\nLambda\n\n\n\nS3\n\n\nLambda\u306e\u5b9f\u884c\n\u300cinvoke\u300d\u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u3066Lambda\u306e\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001hello\u3068\u3044\u3046\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002 \n$ serverless invoke --function hello --provider aws --profile serverlesstest\n{\n    \"statusCode\": 200,\n    \"body\": \"{\\\"message\\\":\\\"Go Serverless v1.0! Your function executed successfully!\\\",\\\"input\\\":{}}\"\n}\n\n\n\u51e6\u7406\u5185\u5bb9\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3057\u3066\u3001\u751f\u6210\u3055\u308c\u305f\u300chandler.js\u300d\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u306f\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3068\u3057\u3066200\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u4e2d\u8eab\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u306d\u3002\n$ cat handler.js\n'use strict';\n\nmodule.exports.hello = (event, context, callback) => {\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: 'Go Serverless v1.0! Your function executed successfully!',\n      input: event,\n    }),\n  };\n\n  callback(null, response);\n\n  // Use this code if you don't use the http event with the LAMBDA-PROXY integration\n  // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });\n};\n\n\n\u7de8\u96c6\u5f8c\u8a18\n\u4eca\u56de\u306e\u72b6\u614b\u3067\u3082\u3001\u96f0\u56f2\u6c17\u306f\u3064\u304b\u3081\u305f\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u307e\u307e\u3067\u306fendpoint\u3082\u516c\u958b\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u5916\u90e8\u304b\u3089\u4f7f\u3048\u306a\u3044\u305f\u3081\n\u6b21\u56de\u306fAWS\u306eAPI Gateway\u3092\u5229\u7528\u3057\u3066\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5c11\u3057\u4fee\u6b63\u3057\u3066\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n# \u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c1\u7ae0 \u301cnodejs\u306etemplate\u7de8\u301c\n\n## \u3042\u3089\u3059\u3058\n\u6bce\u5e74\u30d0\u30ec\u30f3\u30bf\u30a4\u30f3\u30c7\u30fc\u306e\u6642\u671f\u306b\u306a\u308b\u3068\u3001\u30b9\u30ae\u82b1\u7c89\u3067\u4f53\u8abf\u304c\u7d76\u4e0d\u8abf\u306b\u306a\u308a\u307e\u3059\u3002\n\u75d2\u3044\u76ee\u3092\u64e6\u308a\u306a\u304c\u3089\u3001\u9f3b\u3092\u304b\u307f\u306a\u304c\u3089\u5fc5\u6b7b\u3067\u3053\u306e\u6295\u7a3f\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n[\u4f1a\u793e\u306b\u30b8\u30e7\u30a4\u30f3](https://www.wantedly.com/companies/temona/post_articles/41409)\u3057\u3066\u304b\u3089\u3001\u3082\u3046\uff12\u5e74\u304f\u3089\u3044\u7d4c\u3061\u307e\u3057\u305f\u3002\n\u4eca\u56de\u304b\u3089\u306f\u5c11\u3057\u8a71\u984c\u306b\u306a\u3063\u3066\u3044\u308b\u300c\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u300d\u3068\u3044\u3046\u30cd\u30bf\u3092\u30b7\u30ea\u30fc\u30ba\u3067\u516c\u958b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u203b\u5f8c\u3005\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5fdc\u3058\u3066\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u30b9\u30c8\u30c3\u30af\u3057\u3066\u304a\u304f\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\n\n\u81ea\u5206\u306f\u67d0\u793e\u3067CTO\u3092\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u982d\u3067\u3063\u304b\u3061\u306b\u7406\u8ad6\u3070\u3063\u304b\u308a\u5b66\u7fd2\u3059\u308b\u3088\u308a\u306f\u3001\u30a4\u30e1\u30fc\u30b8\u304c\u306a\u3093\u3068\u306a\u304f\u63b4\u3081\u308b\u3088\u3046\u306b\u5b66\u7fd2\u3057\u3001\u5b9f\u8df5\u306e\u4e2d\u3067\u77e5\u8b58\u3092\u6df1\u3081\u3066\u3044\u304f\u65b9\u304c\u52b9\u7387\u7684\u306b\u5b66\u7fd2\u51fa\u6765\u308b\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\n\u6559\u80b2\u30b9\u30bf\u30a4\u30eb\u3068\u3057\u3066\u306f\u6b63\u3057\u3044\u4e8b\u3092\u304d\u3063\u3061\u308a\u304b\u3063\u3061\u308a\u6559\u3048\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u672a\u7d4c\u9a13\u30ec\u30d9\u30eb\u306e\u4eba\u304c\u306a\u3093\u3068\u306a\u304f\u63b4\u3081\u308b\u3088\u3046\u306b\u3001\u8cc7\u6599\u3092\u69cb\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b7\u30ea\u30fc\u30ba\u30cd\u30bf\u3067\u9032\u3081\u307e\u3059\u3002\n\n|No.|\u8a18\u4e8b|\n|:-----------|-----------|\n|1|[\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c1\u7ae0 \u301cnodejs\u306etemplate\u5229\u7528\u7de8\u301c](http://qiita.com/devopsCoordinator/items/974a6e1b92a564f25a15)|\n|2|[\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c2\u7ae0 \u301cAPI Gateway\u5229\u7528\u7de8\u301c](http://qiita.com/devopsCoordinator/items/46fdce5f0356bcd35a7d)|\n|3|[\u3010\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3011\u3092serverless\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u8a66\u3059\u7b2c3\u7ae0 \u301cDynamoDB\u5229\u7528\u7de8\u301c]|\n\n\u3067\u306f\u3001\u4eca\u56de\u3082\u306f\u3058\u3081\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff01\n\n## \u306f\u3058\u3081\u306b\n\n\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u306f\u5b57\u306e\u5982\u304f\u3001\u30b5\u30fc\u30d0\u30fc\u304c\u306a\u3044\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u3059\u3002\nAWS\u3067\u3044\u3046\u3068\u3053\u308d\u306eEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3059\u3089\u5fc5\u8981\u306a\u304f\u3001\u4e88\u3081\u7528\u610f\u3055\u308c\u305f\u6a5f\u80fd\u306e\u30b5\u30fc\u30d3\u30b9(Function-as-a-Service)\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u4e8b\u3092\u8a00\u3044\u307e\u3059\u3002\nFaaS\u306a\u3069\u3068\u8a00\u308f\u308c\u305f\u308a\u3057\u307e\u3059\u304c\u3001AWS\u3067\u3082\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u7cfb\u306e\u30b5\u30fc\u30d3\u30b9\u304c\u5897\u3048\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u4eca\u56de\u306f\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u7528\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\u958b\u767a\u304c\u9032\u3093\u3067\u3044\u308b[serverless](https://github.com/serverless/serverless)\u3092\u4f7f\u3063\u3066\nAWS Lambda\u3001AWS API Gateway, AWS DynamoDB\u306a\u3069\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u4f53\u9a13\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## \u74b0\u5883\n\n### Mac\u74b0\u5883\n```shell-session\n10.11.6\n```\n\n### node\u74b0\u5883\n\n```shell-session\n$ nodebrew ls\n\nv0.12.14\n```\n\n```shell-session\n$ nodebrew install-binary v7.4.0\n```\n\n```shell-session\n$ nodebrew ls\nv0.12.14\nv7.4.0\n```\n\n### python\u74b0\u5883\n\n```shell-session\n$ pyenv versions\n  system\n  2.7.12\n```\n\n```shell-session\n$ pyenv install -v 3.5.2\n```\n\n```shell-session\n$ eval \"$(pyenv init -)\"\n```\n\n```shell-session\n$ pyenv shell 3.5.2\n```\n\n```shell-session\n$ python --version\nPython 3.5.2\n```\n\n### awscli\u74b0\u5883\n```shell-session\n$ pip install awscli\n```\n\n```shell-session\n$ aws --version\naws-cli/1.11.9 Python/2.7.10 Darwin/15.6.0 botocore/1.4.66\n```\n\n### serverless\u74b0\u5883\n\n```shell-session\n$ npm install serverless -g\n```\n\n```shell-session\n$ serverless --version\n1.5.1\n```\n\n## serverless \u30c6\u30b9\u30c8\u7528IAM\u3092\u4f5c\u6210\n\n### IAM\u3092\u4f5c\u6210\u3059\u308b\n\n\u30e6\u30fc\u30b6\u30fc\u540d: serverlesstest\n\u30a2\u30af\u30bb\u30b9\u306e\u7a2e\u985e: \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3088\u308b\u30a2\u30af\u30bb\u30b9\n\n![IAM_Management_Console.png](https://qiita-image-store.s3.amazonaws.com/0/74153/3887f315-d5ec-c857-7fbc-6202343e48c8.png)\n\n#### \u65e2\u5b58\u306e\u30dd\u30ea\u30b7\u30fc\u3092\u76f4\u63a5\u30a2\u30bf\u30c3\u30c1\n\n![IAM_Management_Console.png](https://qiita-image-store.s3.amazonaws.com/0/74153/76e1bc0b-a8eb-234c-56d1-96830c2860f7.png)\n\n- AWSLambdaFullAccess\n- IAMFullAccess\n- AmazonS3FullAccess\n- AmazonAPIGatewayAdministrator\n- AWSCloudFormationReadOnlyAccess\n\n#### \u72ec\u81ea\u306e\u30dd\u30ea\u30b7\u30fc\u3092\u4f5c\u6210\n\n\u30dd\u30ea\u30b7\u30fc\u540d:AWSCloudFormationCreateUpdateServiceOnlyAccess\n\u30dd\u30ea\u30b7\u30fc\u6982\u8981: \u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3092\u8a66\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u30dd\u30ea\u30b7\u30fc\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u203b\u672c\u756a\u74b0\u5883\u3067\u306f\u5229\u7528\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\n![IAM_Management_Console.png](https://qiita-image-store.s3.amazonaws.com/0/74153/8aa775d6-23ea-1c07-736e-1181862808e3.png)\n\n\u753b\u50cf\u306e\u8d64\u67a0\u306e\u300c\u72ec\u81ea\u306e\u30dd\u30ea\u30b7\u30fc\u3092\u4f5c\u6210\u300d\u3092\u62bc\u4e0b\u3057\n\u4ee5\u4e0b\u306e\u6587\u5b57\u5217\u3092\u30dd\u30ea\u30b7\u30fc\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3078\u30b3\u30d4\u30fc\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```shell-session\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1449904348000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"cloudformation:CreateStack\",\n                \"cloudformation:UpdateStack\"\n            ],\n            \"Resource\": [\n                \"arn:aws:cloudformation:ap-northeast-1:xxxxxxxxxxxxxxxx:stack/*\"\n            ]\n        }\n    ]\n}\n```\n\n\u300c\u30dd\u30ea\u30b7\u30fc\u540d\u300d\u3001\u300c\u8aac\u660e\u300d\u3001\u300c\u30dd\u30ea\u30b7\u30fc\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u300d\u3092\u5165\u529b\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u753b\u9762\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n![IAM_Management_Console.png](https://qiita-image-store.s3.amazonaws.com/0/74153/676def44-81b7-c692-1617-934f74108acf.png)\n\n\u30dd\u30ea\u30b7\u30fc\u306e\u4f5c\u6210\u3092\u62bc\u4e0b\u3057\u305f\u3089\u3001IAM\u306e\u4f5c\u6210\u753b\u9762\u306b\u623b\u308a\u300c\u66f4\u65b0\u300d\u3092\u62bc\u4e0b\u3057\u3001\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u203b\u691c\u7d22\u3092\u3059\u308b\u3068\u30bf\u30a4\u30d7\u304c\u30e6\u30fc\u30b6\u30fc\u306e\u3088\u308b\u7ba1\u7406\u306e\u72ec\u81ea\u306b\u4f5c\u3063\u305f\u30dd\u30ea\u30b7\u30fc\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\n\n![IAM_Management_Console.png](https://qiita-image-store.s3.amazonaws.com/0/74153/6bd62c6b-cce7-5eae-089e-1139dce66ef0.png)\n\n\n![IAM_Management_Console.png](https://qiita-image-store.s3.amazonaws.com/0/74153/ac5ef34e-a553-827e-a0d6-49fc97b5f8a1.png)\n\n![IAM_Management_Console.png](https://qiita-image-store.s3.amazonaws.com/0/74153/20fa9cb2-6bb7-ef9a-7549-a0d16906e100.png)\n\n## AWS CLI\u306e\u65b0\u898f\u30e6\u30fc\u30b6\u30fc\u306e\u8a2d\u5b9a\n\n\u3044\u3061\u3044\u3061credentials\u306e\u4e2d\u8eab\u3092\u30b3\u30e1\u30f3\u30c8\u30a4\u30f3\u30fb\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u306e\u3082\u9762\u5012\u306a\u306e\u3067\n\u81ea\u5206\u306fAWS CLI\u3092\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u6bce\u7ba1\u7406\u3057\u3066\u307e\u3059\u3002\n\n\u4eca\u56de\u306fprofile\u540d\u300cserverlesstest\u300d\u3067\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002\n\n| \u30d5\u30a1\u30a4\u30eb | \u5099\u8003 |\n|:-----------|:------------|\n| ~/.aws/config       |    \u8a8d\u8a3c\u60c5\u5831\u4ee5\u5916\u306e\u60c5\u5831(\u30ea\u30fc\u30b8\u30e7\u30f3\u3084\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306a\u3069)     |\n| ~/.aws/credentials       |    \u8a8d\u8a3c\u60c5\u5831     |\n\n\n### AWS CLI\u306e\u8a2d\u5b9a\u4f5c\u6210\n\n```shell-session\n$ aws configure --profile serverlesstest\nAWS Access Key ID [None]: XXXXXXXXXXXXXXXXXXXXX\nAWS Secret Access Key [None]: XXXXXXXXXXXXXXXXXXXXX\nDefault region name [None]: ap-northeast-1\nDefault output format [None]: json\n```\n**\u4f8b) ~/.aws/config**\n\n```shell-session\n$ cat ~/.aws/config\n[profile serverlesstest]\noutput = json\nregion = ap-northeast-1\n```\n\n**\u4f8b) ~/.aws/credentials**\n\n```shell-session\n$ cat ~/.aws/credentials\n[serverlesstest]\naws_access_key_id = XXXXXXXXXXXXXX\naws_secret_access_key = XXXXXXXXXXXXXX\n```\n\n## serverless template\u304b\u3089\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n\u4eca\u56de\u306fnodejs\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u4f5c\u6210\u3057\u307e\u3059\u3002\n \n```shell-session\n$ serverless create --template aws-nodejs --provider aws --profile serverlesstest --path serverlesstest --verbose\nServerless: Generating boilerplate...\nServerless: Generating boilerplate in \"/Users/xxxxxxxxxxx/Documents/serverlesstest\"\n _______                             __\n|   _   .-----.----.--.--.-----.----|  .-----.-----.-----.\n|   |___|  -__|   _|  |  |  -__|   _|  |  -__|__ --|__ --|\n|____   |_____|__|  \\___/|_____|__| |__|_____|_____|_____|\n|   |   |             The Serverless Application Framework\n|       |                           serverless.com, v1.5.1\n -------'\n\nServerless: Successfully generated boilerplate for template: \"aws-nodejs\"\n```\n\n### \u751f\u6210\u3055\u308c\u308b\u30d5\u30a1\u30a4\u30eb\n\n```shell-session\n% ls ./serverlesstest\nhandler.js\nserverless.yml\n```\n\n### \u8a2d\u5b9a\u5909\u66f4\n\n\u8a2d\u5b9a\u7b87\u6240\u306f\u300cprofile\u300d\u3001\u300cstage\u300d\u3001\u300cregion\u300d\u3067\u3059\u3002\n\n```shell-session\n$ cd serverlesstest\n$ vi serverless.yml\n```\n\n#### \u5909\u66f4\u7b87\u6240\n\n```\nprovider:\n  name: aws\n  runtime: nodejs4.3\n```\n\u21e3\u21e3\u21e3\u21e3\u21e3 \n\n```\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  profile: serverlesstest\n  stage: dev\n  region: ap-northeast-1\n```\n\n## \u30c7\u30d7\u30ed\u30a4\n\n```shell-session\n$ serverless deploy --provider aws --profile serverlesstest -v\n```\n\n\u7121\u4e8b\u306b\u6210\u529f\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u3068\u306a\u308b\u3002\n\n![1__noriyukinakano_0031nakano-mac____Documents_02_work_serverlesstest__zsh_.png](https://qiita-image-store.s3.amazonaws.com/0/74153/f31ea7c8-fdf5-19f0-46fa-0d205a70d734.png)\n\n## AWS\u306e\u5404\u30b5\u30fc\u30d3\u30b9\u78ba\u8a8d\n\n\n### Lambda\n\n![Lambda_Management_Console.png](https://qiita-image-store.s3.amazonaws.com/0/74153/af5d5bb2-63e4-5766-a620-fd103d2b9229.png)\n\n\n![Lambda_Management_Console.png](https://qiita-image-store.s3.amazonaws.com/0/74153/7edd70cf-aabe-eeef-2116-01d17ed77c6c.png)\n\n### S3\n\n![S3_Management_Console.png](https://qiita-image-store.s3.amazonaws.com/0/74153/884c40a0-ea5b-25ca-d992-9d0202968af3.png)\n\n\n## Lambda\u306e\u5b9f\u884c\n\n\u300cinvoke\u300d\u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u3066Lambda\u306e\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001hello\u3068\u3044\u3046\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002 \n\n```shell-session\n$ serverless invoke --function hello --provider aws --profile serverlesstest\n{\n    \"statusCode\": 200,\n    \"body\": \"{\\\"message\\\":\\\"Go Serverless v1.0! Your function executed successfully!\\\",\\\"input\\\":{}}\"\n}\n```\n\n### \u51e6\u7406\u5185\u5bb9\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3057\u3066\u3001\u751f\u6210\u3055\u308c\u305f\u300chandler.js\u300d\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u306f\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3068\u3057\u3066200\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u4e2d\u8eab\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u306d\u3002\n\n```shell-session\n$ cat handler.js\n'use strict';\n\nmodule.exports.hello = (event, context, callback) => {\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: 'Go Serverless v1.0! Your function executed successfully!',\n      input: event,\n    }),\n  };\n\n  callback(null, response);\n\n  // Use this code if you don't use the http event with the LAMBDA-PROXY integration\n  // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });\n};\n```\n\n# \u7de8\u96c6\u5f8c\u8a18\n\u4eca\u56de\u306e\u72b6\u614b\u3067\u3082\u3001\u96f0\u56f2\u6c17\u306f\u3064\u304b\u3081\u305f\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u307e\u307e\u3067\u306fendpoint\u3082\u516c\u958b\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u5916\u90e8\u304b\u3089\u4f7f\u3048\u306a\u3044\u305f\u3081\n\u6b21\u56de\u306fAWS\u306eAPI Gateway\u3092\u5229\u7528\u3057\u3066\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5c11\u3057\u4fee\u6b63\u3057\u3066\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n"}