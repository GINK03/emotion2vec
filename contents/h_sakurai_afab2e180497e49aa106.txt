{"tags": ["Haskell", "OCaml", "Scala"], "context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f\u3001\u3053\u306e\u8a18\u4e8b\u306f\u8a00\u8a9e\u5b9f\u88c5 Advent Calendar 2015 \u3068 ML Advent Calendar 2015\u306e 17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\uff08\u306a\u3093\u304b\u3001\uff12\u3064\u306e\u30ab\u30ec\u30f3\u30c0\u30fc\u306b\u30c0\u30d6\u30eb\u6295\u7a3f\u3092\u3057\u3066\u305f\u306e\u3067\u771f\u4f3c\u3057\u3066\u307f\u305f\uff09\nHaskell\u307f\u305f\u3044\u306a\u578b\u30af\u30e9\u30b9\u4f5c\u308a\u305f\u3044\u3002Haskell\u3092strict\u306b\u3057\u305f\u3088\u3046\u306a\u8a00\u8a9e\u304c\u6b32\u3057\u3044\u3089\u3057\u3044\u3002Tyiping Haskell in Haskell[1](thih)\u306fHaskell\u306e\u578b\u63a8\u8ad6\u90e8\u5206\u3092\u89e3\u8aac\u3057\u305f\u8ad6\u6587\u3067\u3059\u3002thih\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u578b\u30af\u30e9\u30b9\u306f\u5206\u304b\u308b\u306e\u3067\u3059\u3002\u3067\u3082\u3067\u3059\u3088\u3001Haskell\u306e\u578b\u30af\u30e9\u30b9\u3001\u3001\u3001\u3002\u96e3\u3057\u3044\u3093\u3067\u3059\u3002\u9177\u3044\u82f1\u8a9e\u7ffb\u8a33[2]\u3057\u3066\u307f\u3066\u305f\u3067\u3059\u3088\u3001\u3001\u3001\u3002\u30af\u30bd\u306e\u5c71\u3092\u4f5c\u3063\u3066\u529b\u4ed8\u304d\u307e\u3057\u305f\u3088\u3001\u3001\u3001\u3002\u82f1\u8a9e\u8f9b\u3044\u3067\u3059\u3088\u3002\n\u305d\u3093\u306a\u4e2d\u3001Mokkosu\u306e\u4f5c\u8005\u3055\u3093\u306fMokkosu\u3067\u3042\u308b\u7a0b\u5ea6\u5206\u304b\u308a\u3084\u3059\u304f\u565b\u307f\u7815\u3044\u305f\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002[3]\n\u3061\u3087\u3063\u3068\u7406\u89e3\u304c\u9032\u307f\u307e\u3057\u305f\u3002\u3067\u3082\u3001\u3001\u3001\u307e\u3060\u3001\u30aa\u30e9\u308f\u304b\u3089\u306d\u3047\u3060\u3002\u305d\u3046\u3001\u5206\u304b\u308b\u4eba\u306f\u5206\u304b\u3063\u305f\u3068\u8a00\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u4f5c\u3063\u305f\u308a\u4f5c\u3089\u306a\u304b\u3063\u305f\u308a\u3057\u3066\u53bb\u3063\u3066\u884c\u304f\u306e\u3067\u3059\u3002\u3046\u3046\u3001\u5206\u304b\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u308c\u3001\u3001\u3001\u3063\u3066\u601d\u3046\u3051\u3069\u3082\u7c21\u5358\u3058\u3083\u306a\u3044\u306e\u3067\u3059\u3002\u3068\u3044\u3046\u4e8b\u3067\u9ce5\u4eba\u306b\u3057\u304b\u3044\u3051\u306a\u3044\u666e\u901a\u306e\u4eba\u9593\u306b\u53d6\u3063\u3066\u96e3\u653b\u4e0d\u843d\u306aHaskell\u306e\u578b\u30af\u30e9\u30b9\u306b\u666e\u901a\u306e\u4eba\u9593\u304c\u307e\u305f\u3061\u3087\u3063\u3068\u683c\u95d8\u3057\u3066\u767b\u308d\u3046\u3068\u3057\u3066\u307f\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u4f55\u304c\u5206\u304b\u3089\u306a\u3044\u306e\u304b\n\u3042\u3042\u3001\u5206\u304b\u3089\u3093\u3002\u4f55\u304c\u5206\u304b\u3089\u306a\u3044\u306e\u304b\u3001\u3001\u3001\u3002\u4f55\u304c\u6b32\u3057\u3044\u306e\u304b\u3002\u79c1\u306fHaskell\u5206\u304b\u3089\u306a\u3044\u306e\u306b\u3001Haskell\u306e\u578b\u63a8\u8ad6\u90e8\u5206\u3092\u7406\u89e3\u3057\u3088\u3046\u3068\u3044\u3046\u5947\u7279\u306a\u65b9\u306a\u306e\u3067\u3042\u308a\u307e\u3059\u3002\u30a6\u30ef\u30fc\u99c4\u76ee\u3060\u99c4\u76ee\u3060\u3063\uff01\uff01\uff01\n\u307e\u3041\u3001\u843d\u3061\u7740\u3051\u3002\nHaskell\u306e\u30ef\u30f3\u30bd\u30fc\u30b9\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u79fb\u690d\u3057\u305fOCaml\u30d0\u30fc\u30b8\u30e7\u30f3[4]\u304c\u3042\u308a\u3001Scala\u306b\u79fb\u690d[5]\u3057\u3066\u307f\u305f\u308a\u3082\u3057\u307e\u3057\u305f\u3002\u3067\u3082\u3001\u52d5\u304b\u3057\u304b\u305f\u304c\u826f\u304f\u308f\u304b\u3089\u3093\u306e\u3067\u3057\u305f\u3002\n\u4f55\u304c\u5206\u304b\u3089\u306a\u3044\u306e\u304b\u3068\u3044\u3046\u3068\u3001\u3001\u3001\u5168\u4f53\u7684\u306a\u4f7f\u3044\u65b9\u304c\u5206\u304b\u3089\u3093\u306e\u3067\u3059\u3002thih\u306e\u30bd\u30fc\u30b9[4]\u3092\u898b\u308b\u3068\u3001\u30bd\u30fc\u30b9\u5206\u5272\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3084\u3089prelude\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u5927\u91cf\u306b\u3042\u308a\u307e\u3059\u3002\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3042\u308b\u306e\u3067\u3053\u308c\u3092\u52d5\u304b\u3057\u3066\u307f\u308c\u3070\u3044\u3044\u3093\u3060\u3088\u306a\u3041\u3002\n\n\u30c6\u30b9\u30c8\u5207\u308a\u51fa\u3057\u3066\u307f\u305f\n\u5927\u91cf\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f\u90aa\u9b54\u306a\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a1\u500b\u52d5\u304b\u3057\u307e\u3057\u3087\u3046\u3063\u3066\u3053\u3068\u3067\u53d6\u308a\u51fa\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3046\u30fc\u3093\u3002\u3053\u308c\u52d5\u304f\u306e\u304b\u306a\u3041\u3001\u3001\u3001\u3002\nlet tOrdering = TCon (Tycon(\"Ordering\", Star))\n\nlet ap  = fold_left1 (fun b a -> Ap(b, a))\nlet evar v          = (Var v)\nlet elit l          = (Lit l)\nlet econst c        = (Const c)\n\nlet toBg (g:(id * scheme option * alt list) list) : bindGroup =\n  List.fold_right(fun g (a,b) ->\n                        match g with\n                        | (v, Some t, alts) -> ((v,t,alts)::a, b)\n                        | (v, None, alts) -> (a, [(v,alts)]::b)\n                      ) g  ([],[])\n\nlet (^->) = fn\n\nlet assumps : assump list\n = [ Assump(\"_concmp\",\n       Forall([Star],\n         Qual([], \n          TGen 0 ^->  TGen 0 ^-> tOrdering))) ]\n\nlet _ = assert(assumps =\n[Assump (\"_concmp\",\n    Forall ([Star],\n     Qual ([],\n      TAp\n       (TAp (TCon (Tycon (\"(->)\", Kfun (Star, Kfun (Star, Star)))), TGen 0),\n       TAp\n        (TAp (TCon (Tycon (\"(->)\", Kfun (Star, Kfun (Star, Star)))), TGen 0),\n        TCon (Tycon (\"Ordering\", Star)))))))])\n\nlet classEnv:classEnv = exampleInsts initialEnv\n\nlet prelude : program\n = List.map toBg\n   [[(\"flip\",\n      Some (Forall ([Star; Star; Star],\n             Qual([],\n              ( (TGen 0 ^-> TGen 1 ^-> TGen 2) ^-> TGen 1 ^-> TGen 0 ^-> TGen 2)))),\n      [([PVar \"f\"; PVar \"x\"; PVar \"y\"],\n        ap [Var \"f\"; Var \"y\"; Var \"x\"])])]]\n\nlet test1 (): assump list = tiProgram classEnv assumps prelude\n\nlet _ =\n  assert (TGen 0 ^-> TGen 1 ^-> TGen 2 = TAp (\n    TAp (TCon (Tycon (\"(->)\", Kfun (Star, Kfun (Star, Star)))), TGen 0),\n    TAp (TAp (TCon (Tycon (\"(->)\", Kfun (Star, Kfun (Star, Star)))), TGen 1), TGen 2)))\n\nlet _ = test1 ()\n\n\n\u30d0\u30b0\u30c3\u3063\u3068\u308b\u3002\u3002\u3002\n\u3046\u3063\u3002\u6700\u521d\u306e1\u500b\u76ee\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3002\u56f0\u3063\u305f\u305e\u3002Haskell\u306e\u52d5\u304d\u3092\u898b\u305f\u3044\u3002\n\u3057\u304b\u3057\u3001\u30c7\u30d0\u30c3\u30b0\u306e\u4ed5\u65b9\u304c\u5206\u304b\u3089\u306a\u3044\u3002\u79c1\u306fHaskell\u306e\u4f7f\u3044\u65b9\u304c\u5206\u304b\u3089\u306a\u3044\u5947\u7279\u306a\u3001\u3001\u3001\u3063\u3066\u306e\u306f\u7f6e\u3044\u3066\u304a\u3044\u3066\u3001\u3001\u3001\n\nghci\u306e\u30c7\u30d0\u30c3\u30ac\u3092\u4f7f\u3063\u3066\u307f\u308b\nghci\u306f\u7d20\u6674\u3057\u3044\u4e8b\u306b\u3001\u30e1\u30a4\u30f3\u306e\u30bd\u30fc\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3060\u3051\u3067\u3001\u4f9d\u5b58\u89e3\u6790\u3092\u884c\u3063\u3066\u5fc5\u8981\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u307e\u3059\u3002\nTypingHaskellInHaskell.hs\u306b\u4ee5\u4e0b\u306e\u30bd\u30fc\u30b9\u3092\u52a0\u3048\u307e\u3059\u3002\ntOrdering = TCon (Tycon \"Ordering\" Star)\n\nap              = foldl1 Ap\nevar v          = (Var v)\nelit l          = (Lit l)\neconst c        = (Const c)\nelet e f        = foldr Let f (map toBg e)\n\ntoBg           :: [(Id, Maybe Scheme, [Alt])] -> BindGroup\ntoBg g          = ([(v, t, alts) | (v, Just t, alts) <- g ],\n                   filter (not . null) [[(v,alts) | (v,Nothing,alts) <- g]])\n\nassumps :: [Assump]\nassumps\n = [ \"_concmp\" :>: \n       (Forall [Star]\n         ([] :=> \n          (TGen 0 `fn` TGen 0 `fn` tOrdering))) ]\n\nclassEnv :: ClassEnv\nJust classEnv = exampleInsts initialEnv\n\nprelude :: Program\nprelude\n = map toBg\n   [[(\"flip\",\n      Just (Forall [Star, Star, Star]\n             ([] :=>\n              ((TGen 0 `fn` TGen 1 `fn` TGen 2) `fn` TGen 1 `fn` TGen 0 `fn` TGen 2))),\n      [([PVar \"f\", PVar \"x\", PVar \"y\"],\n        ap [Var \"f\", Var \"y\", Var \"x\"])])]]\n\ntest1 :: () -> [Assump]\ntest1 () = tiProgram classEnv assumps prelude\n\n\u305d\u3057\u3066\u3001ghci\u3067\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n$ ghci TypingHaskellInHaskell.hs\nGHCi, version 7.6.3: http://www.haskell.org/ghc/  :? for help\nLoading package ghc-prim ... linking ... done.\nLoading package integer-gmp ... linking ... done.\nLoading package base ... linking ... done.\n[1 of 1] Compiling TypingHaskellInHaskell ( TypingHaskellInHaskell.hs, interpreted )\nOk, modules loaded: TypingHaskellInHaskell.\n*TypingHaskellInHaskell>\n\n\u3053\u3053\u3067:list\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u95a2\u6570\u540d\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u3001\u3001\n*TypingHaskellInHaskell> :list tiExpl\n550  tiExpl :: ClassEnv -> [Assump] -> Expl -> TI [Pred]\n551  tiExpl ce as (i, sc, alts)\n552          = do (qs :=> t) <- freshInst sc\n553               ps         <- tiAlts ce as alts t\n554               s          <- getSubst\n555               let qs'     = predsApply s qs\n556                   t'      = typeApply s t\n557                   fs      = assumpsTv (assumpsApply s as)\n558                   gs      = typeTv t' \\\\ fs\n559                   sc'     = quantify gs (qs':=>t')\n560                   ps'     = filter (not . entail ce qs') (predsApply s ps)\n561               (ds,rs)    <- split ce fs gs ps'\n562               if sc /= sc' then\n563                   fail \"signature too general\"\n564                 else if not (null rs) then\n565                   fail \"context too weak\"\n566                 else\n567                   return ds\n568\n*TypingHaskellInHaskell>\n\n\u95a2\u6570\u306e\u4e2d\u5473\u3092\u898b\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002\n*TypingHaskellInHaskell> :break 559\nBreakpoint 0 activated at TypingHaskellInHaskell.hs:559:28-49\n\n\u3068\u3059\u308b\u3068\u3001\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u4ed8\u3051\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002:break\u306f:b\u3060\u3051\u3067\u3082\u3044\u3051\u308b\u3088\u3046\u3067\u3059\u3002\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046:\n*TypingHaskellInHaskell> test1 ()\nStopped at TypingHaskellInHaskell.hs:559:28-49\n_result :: Scheme = _\ngs :: [Tyvar] = [Tyvar \"v5\" Star,Tyvar \"v4\" Star,Tyvar \"v7\" Star]\nqs' :: [Pred] = _\nt' :: Type = TAp\n               (TAp (TCon ...) (TAp ...)) (TAp (TAp ...) (TAp ...))\n\n\u30d6\u30ec\u30a4\u30af\u30dd\u30a4\u30f3\u30c8\u3067\u6b62\u307e\u3063\u3066\u5909\u6570\u304c\u3042\u308b\u7a0b\u5ea6\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u3001t'\u306e\u4e2d\u5473\u3092\u8a73\u3057\u304f\u898b\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059:\n[TypingHaskellInHaskell.hs:559:28-49] *TypingHaskellInHaskell> t'\nTAp (TAp (TCon (Tycon \"(->)\" (Kfun Star (Kfun Star Star)))) (TAp (TAp (TCon (Tycon \"(->)\" (Kfun Star (Kfun Star Star)))) (TVar (Tyvar \"v5\" Star))) (TAp (TAp (TCon (Tycon \"(->)\" (Kfun Star (Kfun Star Star)))) (TVar (Tyvar \"v4\" Star))) (TVar (Tyvar \"v7\" Star))))) (TAp (TAp (TCon (Tycon \"(->)\" (Kfun Star (Kfun Star Star)))) (TVar (Tyvar \"v4\" Star))) (TAp (TAp (TCon (Tycon \"(->)\" (Kfun Star (Kfun Star Star)))) (TVar (Tyvar \"v5\" Star))) (TVar (Tyvar \"v7\" Star))))\n\n\u3055\u3089\u306b\u8a73\u3057\u3044\u60c5\u5831\u304c\u898b\u308c\u307e\u3057\u305f\u3002gs\u3068\u3059\u308c\u3070\u3001gs\u306e\u4e2d\u5473\u3092\u898b\u308c\u307e\u3059\u3002\n[TypingHaskellInHaskell.hs:559:28-49] *TypingHaskellInHaskell> gs\n[Tyvar \"v5\" Star,Tyvar \"v4\" Star,Tyvar \"v7\" Star]\n\ngs\u306e\u5185\u5bb9\u304c\u3001\u9055\u3063\u305f\u306e\u3067\u3059\u3002\n\n\u539f\u56e0\u898b\u3064\u3051\u305f\n\u30ea\u30b9\u30c8\u306eunion\u306e\u51e6\u7406\u7d50\u679c\u306e\u9806\u756a\u304c\u5909\u308f\u3063\u3066\u3044\u305f\u306e\u304c\u539f\u56e0\u3067\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002union\u306e\u51e6\u7406\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u4e8b\u3067\u30a8\u30e9\u30fc\u306f\u89e3\u6d88\u51fa\u6765\u307e\u3057\u305f\u3002\nlet union xs ys = xs @ filter (fun x -> not (mem x xs)) ys\n\n\u79fb\u690d\u306e\u969b\u306b\u306f\u3001\u539f\u56e0\u306e\u7d5e\u308a\u8fbc\u307f\u304c\u8f9b\u3044\u6240\u3067\u3059\u3002\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u304c\u3001\u3001\u3001\u9032\u6357\u30b9\u30d4\u30fc\u30c9\u304c\u304c\u305f\u843d\u3061\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u3067\u3082\u8ae6\u3081\u305a\u306b\u30b3\u30c4\u30b3\u30c4\u3068\u9032\u3080\u306e\u3067\u3059\u3002\u5f90\u3005\u306b\u7d5e\u308a\u8fbc\u3093\u3067\u884c\u3051\u3070\u5fc5\u305a\u539f\u56e0\u306f\u5206\u304b\u308a\u307e\u3059\u3002\n\u3075\u3063\u3075\u3063\u3075\u3002\u5206\u304b\u3089\u306a\u3044\u4e8b\u304c\u5206\u304b\u3063\u3066\u3001\u554f\u984c\u70b9\u3092\u6d17\u3044\u51fa\u3057\u3001\u7d5e\u308a\u8fbc\u3093\u3067\uff11\u3064\u89e3\u6c7a\u3057\u5206\u304b\u3089\u306a\u3044\u4e8b\u304c\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff01\uff01\uff01\n\n\u6b21\u306b\u3084\u308d\u3046\u3068\u3057\u3066\u308b\u4e8b\n\n\u5927\u91cf\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092Scala\u306b\u79fb\u690d\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002OCaml\u306b\u3082\u79fb\u690d\u3057\u307e\u3059\u3002Haskell\u306e\u30d7\u30ea\u30c6\u30a3\u30d7\u30ea\u30f3\u30bf\u30e9\u30a4\u30d6\u30e9\u30eaText.PrettyPrint.HughesPJ\u3092\u4f7f\u3063\u3066\u4e00\u6c17\u306b\u51fa\u529b\u3059\u308b\u3064\u3082\u308a\u3067\u3059\u3002\n\u30d1\u30fc\u30b5\u3092OCamllex\u3068OCamlYacc\u3067\u66f8\u304d\u307e\u3059\u3002\u30aa\u30d5\u30b5\u30a4\u30c9\u30eb\u30fc\u30eb\u306e\u306a\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306eHaskell\u306e\u30d1\u30fc\u30b5\u3092\u4f5c\u308a\u307e\u3059\u3002thih\u306e\u30bd\u30fc\u30b9\u5185\u306b\u306fhatchet\u3068\u3044\u3046\u5b9f\u88c5\u304c\u3042\u308b\u306e\u3067\u3001\u53c2\u8003\u306b\u3057\u307e\u3059\u3002Haskell\u306eAltJS\u3082\u6ca2\u5c71\u3042\u308a\u307e\u3059\u304cPureScript\u304c\u3088\u308a\u5358\u7d14\u5316\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u306e\u3067\u53c2\u8003\u306b\u3059\u308b\u3068\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3067\u66f8\u304d\u76f4\u3057\u307e\u3059\u3002Haskell\u306f\u7d14\u7c8b\u306a\u95a2\u6570\u578b\u8a00\u8a9e\u306a\u306e\u3067\u3001\u53c2\u7167\u900f\u660e\u6027\u3092\u78ba\u4fdd\u3059\u308b\u305f\u3081\u306b\u4e00\u5de5\u592b\u5fc5\u8981\u3067\u3059\u3002OCaml\u3084Scala\u306fmutable\u306a\u5909\u6570\u304c\u4f7f\u3048\u307e\u3059\u3002\u7d20\u76f4\u306b\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u4f7f\u3063\u3066\u66f8\u304d\u76f4\u305b\u3070\u3082\u3063\u3068\u5206\u304b\u308a\u3084\u3059\u304f\u3001\u305d\u3057\u3066\u9ad8\u901f\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\u74b0\u5883\u304c\u95a2\u6570\u304a\u5316\u3051\u306b\u306a\u3063\u3066\u308b\u7b87\u6240\u3082\u53ea\u306e\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\u306b\u3059\u308b\u3068\u7c21\u5358\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nHaskell\u3092\u4f5c\u308a\u305f\u3044\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u306b\u4f5c\u3089\u306a\u3044\u3068\u7406\u89e3\u51fa\u6765\u306a\u3055\u305d\u3046\u3060\u3002\n\u3053\u306e\u3042\u305f\u308a\u306b\u845b\u85e4\u304c\u3042\u308a\u307e\u3059\u3002\u5c11\u306a\u304f\u3068\u3082\u30aa\u30d5\u30b5\u30a4\u30c9\u30eb\u30fc\u30eb\u306e\u306a\u3044Haskell\u3092\u4f5c\u3089\u306a\u3044\u3068\u884c\u3051\u306a\u3044\u3088\u3046\u3067\u3059\u3002Haskell\u4f5c\u308a\u305f\u3044\u8a33\u3058\u3083\u306a\u3044\u306e\u306b\u3001\u4e00\u5ea6Haskell\u306e\u30d1\u30fc\u30b5\u4f5c\u3063\u305f\u307b\u3046\u304c\u826f\u3055\u305d\u3046\u306a\u306e\u3067\u8f9b\u3044\u3002\n\u5927\u4f53\u845b\u85e4\u304c\u3042\u308b\u3068\u307f\u3093\u306a\u60a9\u307f\u82e6\u3057\u3080\u306e\u3067\u3059\u3002\u305d\u3046\u3044\u3046\u5834\u5408\u306f\u3001\u845b\u85e4\u3092\u898b\u3064\u3051\u3066\u8f9b\u3055\u3092\u8a8d\u8b58\u3057\u3001\u6b21\u306b\u51fa\u6765\u308b\u306a\u3089\u3001\u305d\u306e\u845b\u85e4\u3092\u89e3\u6d88\u3057\u3066\u3084\u308c\u3070\u3044\u3044\u306e\u3067\u3059\u3002\u89e3\u6d88\u51fa\u6765\u306a\u3044\u306a\u3089\u8ae6\u3081\u308c\u3070\u3044\u3044\u3002\u3053\u306e\u6311\u6226\u306f\u845b\u85e4\u304c\u3042\u3063\u3066\u8f9b\u3044\u306e\u3067\u3001\u5f90\u3005\u306b\u9032\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\u30b9\u30c8\u30ec\u30b9\u306b\u8010\u3048\u306c\u3044\u3066\u4e00\u6c17\u306b\u89e3\u6c7a\u3067\u304d\u308b\u306e\u304c\u4e00\u756a\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u3061\u3087\u3063\u3068\u9032\u3081\u3070\u305d\u308c\u3067\u3082\u3044\u3044\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u3002\u5927\u5909\u306a\u3093\u3060\u3082\u3093\u3002\n\u3060\u304b\u3089\u3001\u8f9b\u3044\u3051\u3069\u3001\u578b\u63a8\u8ad6\u51fa\u6765\u3066\u3001\u30d1\u30fc\u30b5\u4f5c\u308c\u305f\u3089\u3001\u5f8c\u306f\u3082\u3046\u3053\u3063\u3061\u306e\u4e16\u754c\u3067\u3059\u3002\u3082\u3046\u51e6\u7406\u7cfb\u4f5c\u308c\u3066\u3057\u307e\u3046\u3002\u304d\u3063\u3068\u3001\u9811\u5f35\u308c\u3070\u7d20\u6674\u3057\u3044\u4e16\u754c\u304c\u5f85\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u3002\u305d\u308c\u3092\u5922\u307f\u3066\u9811\u5f35\u308b\u306e\u3067\u3042\u308a\u307e\u3059\u3002\nHaskell\u3092\u4f5c\u308a\u305f\u3044\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u306b\u4f5c\u3089\u306a\u3044\u3068\u7406\u89e3\u51fa\u6765\u306a\u3055\u305d\u3046\u3060\u3002\u3060\u3051\u3069\u7406\u89e3\u3057\u3066\u3057\u307e\u3048\u3070\u7d20\u6674\u3057\u3044\u4e16\u754c\u304c\u5f85\u3063\u3066\u3044\u308b\u3002\n\u305d\u3046\u8003\u3048\u3066\u3053\u306e\u5148\u306e\u4f5c\u696d\u3092\u9032\u3081\u3066\u884c\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u307e\u3068\u3081\nHaskell\u306e\u578b\u30b7\u30b9\u30c6\u30e0\u306e\u7406\u89e3\u306f\u96e3\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u5206\u304b\u3089\u306a\u3044\u70b9\u3092\u6d17\u3044\u51fa\u3057\u3001\u89e3\u6d88\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3001\u30d0\u30b0\u3092\u53d6\u308a\u9664\u304d\u3001\u4e00\u6b69\u524d\u9032\u3057\u307e\u3057\u305f\u3002\n\u307e\u3060\u307e\u3060\u8ab2\u984c\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u4e8b\u3067\u660e\u78ba\u306b\u3057\u307e\u3057\u305f\u3002\nHaskell\u306e\u578b\u63a8\u8ad6\u306fHaskell\u3092\u7406\u89e3\u3057\u306a\u3044\u3068\u96e3\u3057\u3044\u73fe\u72b6\u304c\u3042\u308a\u307e\u3059\u3002\u3067\u3082\u3001\u4e00\u5ea6\u3053\u3061\u3089\u306e\u4e16\u754c\u306b\u5f15\u304d\u305a\u308a\u8fbc\u3093\u3067\u3057\u307e\u3048\u3070\u8272\u3005\u3068\u3042\u3093\u306a\u4e8b\u3084\u3053\u3093\u306a\u4e8b\u3092\u9ad8\u901f\u306b\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u53c2\u8003\u6587\u732e\n\n[1] Typhing Haskell in Haskell\nhttps://web.cecs.pdx.edu/~mpj/thih/\n[2] Typhing Haskell in Haskell\u306e\u9177\u3044\u82f1\u8a9e\u306e\u8a33\nhttps://github.com/hsk/docs/tree/master/thih\n[3] Mokkosu\u3067Haskell\u306e\u578b\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308b (\u305d\u306e1)\nhttp://qiita.com/lambdataro/items/1e4d795d3dd97a94c8f3\n[4] Typhing Haskell in ML\nhttp://devmusings.legiasoft.com/_media/blog/2010/08/04/typinghaskellinml.ml\n[5] Typhing Haskell in Scala\nhttps://github.com/hsk/docs/blob/master/thih/scala/src/main/scala/thih.scala\n[6] Typhing Haskell in Haskell\u306e\u30bd\u30fc\u30b9\nhttps://github.com/wh5a/thih/tree/master/src\n[7] hatchet\nhttps://github.com/wh5a/thih/tree/master/hatchet\n\n\u3053\u306e\u8a18\u4e8b\u306f\u3001\u3053\u306e\u8a18\u4e8b\u306f[\u8a00\u8a9e\u5b9f\u88c5 Advent Calendar 2015](http://qiita.com/advent-calendar/2015/lang_dev) \u3068 [ML Advent Calendar 2015](http://www.adventar.org/calendars/848)\u306e 17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\uff08\u306a\u3093\u304b\u3001\uff12\u3064\u306e\u30ab\u30ec\u30f3\u30c0\u30fc\u306b\u30c0\u30d6\u30eb\u6295\u7a3f\u3092\u3057\u3066\u305f\u306e\u3067\u771f\u4f3c\u3057\u3066\u307f\u305f\uff09\n\nHaskell\u307f\u305f\u3044\u306a\u578b\u30af\u30e9\u30b9\u4f5c\u308a\u305f\u3044\u3002Haskell\u3092strict\u306b\u3057\u305f\u3088\u3046\u306a\u8a00\u8a9e\u304c\u6b32\u3057\u3044\u3089\u3057\u3044\u3002Tyiping Haskell in Haskell<a name=\"r1\"></a>[[1]](#1)(thih)\u306fHaskell\u306e\u578b\u63a8\u8ad6\u90e8\u5206\u3092\u89e3\u8aac\u3057\u305f\u8ad6\u6587\u3067\u3059\u3002thih\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u578b\u30af\u30e9\u30b9\u306f\u5206\u304b\u308b\u306e\u3067\u3059\u3002\u3067\u3082\u3067\u3059\u3088\u3001Haskell\u306e\u578b\u30af\u30e9\u30b9\u3001\u3001\u3001\u3002\u96e3\u3057\u3044\u3093\u3067\u3059\u3002\u9177\u3044\u82f1\u8a9e\u7ffb\u8a33<a name=\"r2\"></a>[[2]](#2)\u3057\u3066\u307f\u3066\u305f\u3067\u3059\u3088\u3001\u3001\u3001\u3002\u30af\u30bd\u306e\u5c71\u3092\u4f5c\u3063\u3066\u529b\u4ed8\u304d\u307e\u3057\u305f\u3088\u3001\u3001\u3001\u3002\u82f1\u8a9e\u8f9b\u3044\u3067\u3059\u3088\u3002\n\n\u305d\u3093\u306a\u4e2d\u3001Mokkosu\u306e\u4f5c\u8005\u3055\u3093\u306fMokkosu\u3067\u3042\u308b\u7a0b\u5ea6\u5206\u304b\u308a\u3084\u3059\u304f\u565b\u307f\u7815\u3044\u305f\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002<a name=\"r3\"></a>[[3]](#3)\n\n\u3061\u3087\u3063\u3068\u7406\u89e3\u304c\u9032\u307f\u307e\u3057\u305f\u3002\u3067\u3082\u3001\u3001\u3001\u307e\u3060\u3001\u30aa\u30e9\u308f\u304b\u3089\u306d\u3047\u3060\u3002\u305d\u3046\u3001\u5206\u304b\u308b\u4eba\u306f\u5206\u304b\u3063\u305f\u3068\u8a00\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u4f5c\u3063\u305f\u308a\u4f5c\u3089\u306a\u304b\u3063\u305f\u308a\u3057\u3066\u53bb\u3063\u3066\u884c\u304f\u306e\u3067\u3059\u3002\u3046\u3046\u3001\u5206\u304b\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u308c\u3001\u3001\u3001\u3063\u3066\u601d\u3046\u3051\u3069\u3082\u7c21\u5358\u3058\u3083\u306a\u3044\u306e\u3067\u3059\u3002\u3068\u3044\u3046\u4e8b\u3067\u9ce5\u4eba\u306b\u3057\u304b\u3044\u3051\u306a\u3044\u666e\u901a\u306e\u4eba\u9593\u306b\u53d6\u3063\u3066\u96e3\u653b\u4e0d\u843d\u306aHaskell\u306e\u578b\u30af\u30e9\u30b9\u306b\u666e\u901a\u306e\u4eba\u9593\u304c\u307e\u305f\u3061\u3087\u3063\u3068\u683c\u95d8\u3057\u3066\u767b\u308d\u3046\u3068\u3057\u3066\u307f\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u3002\n\n## \u4f55\u304c\u5206\u304b\u3089\u306a\u3044\u306e\u304b\n\n\u3042\u3042\u3001\u5206\u304b\u3089\u3093\u3002\u4f55\u304c\u5206\u304b\u3089\u306a\u3044\u306e\u304b\u3001\u3001\u3001\u3002\u4f55\u304c\u6b32\u3057\u3044\u306e\u304b\u3002\u79c1\u306fHaskell\u5206\u304b\u3089\u306a\u3044\u306e\u306b\u3001Haskell\u306e\u578b\u63a8\u8ad6\u90e8\u5206\u3092\u7406\u89e3\u3057\u3088\u3046\u3068\u3044\u3046\u5947\u7279\u306a\u65b9\u306a\u306e\u3067\u3042\u308a\u307e\u3059\u3002\u30a6\u30ef\u30fc\u99c4\u76ee\u3060\u99c4\u76ee\u3060\u3063\uff01\uff01\uff01\n\n\u307e\u3041\u3001\u843d\u3061\u7740\u3051\u3002\n\nHaskell\u306e\u30ef\u30f3\u30bd\u30fc\u30b9\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u79fb\u690d\u3057\u305fOCaml\u30d0\u30fc\u30b8\u30e7\u30f3<a name=\"r4\"></a>[[4]](#4)\u304c\u3042\u308a\u3001Scala\u306b\u79fb\u690d<a name=\"r5\"></a>[[5]](#5)\u3057\u3066\u307f\u305f\u308a\u3082\u3057\u307e\u3057\u305f\u3002\u3067\u3082\u3001\u52d5\u304b\u3057\u304b\u305f\u304c\u826f\u304f\u308f\u304b\u3089\u3093\u306e\u3067\u3057\u305f\u3002\n\n\u4f55\u304c\u5206\u304b\u3089\u306a\u3044\u306e\u304b\u3068\u3044\u3046\u3068\u3001\u3001\u3001\u5168\u4f53\u7684\u306a\u4f7f\u3044\u65b9\u304c\u5206\u304b\u3089\u3093\u306e\u3067\u3059\u3002thih\u306e\u30bd\u30fc\u30b9<a name=\"r4\"></a>[[4]](#4)\u3092\u898b\u308b\u3068\u3001\u30bd\u30fc\u30b9\u5206\u5272\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3084\u3089prelude\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u5927\u91cf\u306b\u3042\u308a\u307e\u3059\u3002\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3042\u308b\u306e\u3067\u3053\u308c\u3092\u52d5\u304b\u3057\u3066\u307f\u308c\u3070\u3044\u3044\u3093\u3060\u3088\u306a\u3041\u3002\n\n## \u30c6\u30b9\u30c8\u5207\u308a\u51fa\u3057\u3066\u307f\u305f\n\n\u5927\u91cf\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f\u90aa\u9b54\u306a\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a1\u500b\u52d5\u304b\u3057\u307e\u3057\u3087\u3046\u3063\u3066\u3053\u3068\u3067\u53d6\u308a\u51fa\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3046\u30fc\u3093\u3002\u3053\u308c\u52d5\u304f\u306e\u304b\u306a\u3041\u3001\u3001\u3001\u3002\n\n\n```\nlet tOrdering = TCon (Tycon(\"Ordering\", Star))\n\nlet ap  = fold_left1 (fun b a -> Ap(b, a))\nlet evar v          = (Var v)\nlet elit l          = (Lit l)\nlet econst c        = (Const c)\n\nlet toBg (g:(id * scheme option * alt list) list) : bindGroup =\n  List.fold_right(fun g (a,b) ->\n                        match g with\n                        | (v, Some t, alts) -> ((v,t,alts)::a, b)\n                        | (v, None, alts) -> (a, [(v,alts)]::b)\n                      ) g  ([],[])\n\nlet (^->) = fn\n\nlet assumps : assump list\n = [ Assump(\"_concmp\",\n       Forall([Star],\n         Qual([], \n          TGen 0 ^->  TGen 0 ^-> tOrdering))) ]\n\nlet _ = assert(assumps =\n[Assump (\"_concmp\",\n    Forall ([Star],\n     Qual ([],\n      TAp\n       (TAp (TCon (Tycon (\"(->)\", Kfun (Star, Kfun (Star, Star)))), TGen 0),\n       TAp\n        (TAp (TCon (Tycon (\"(->)\", Kfun (Star, Kfun (Star, Star)))), TGen 0),\n        TCon (Tycon (\"Ordering\", Star)))))))])\n\nlet classEnv:classEnv = exampleInsts initialEnv\n\nlet prelude : program\n = List.map toBg\n   [[(\"flip\",\n      Some (Forall ([Star; Star; Star],\n             Qual([],\n              ( (TGen 0 ^-> TGen 1 ^-> TGen 2) ^-> TGen 1 ^-> TGen 0 ^-> TGen 2)))),\n      [([PVar \"f\"; PVar \"x\"; PVar \"y\"],\n        ap [Var \"f\"; Var \"y\"; Var \"x\"])])]]\n\nlet test1 (): assump list = tiProgram classEnv assumps prelude\n\nlet _ =\n  assert (TGen 0 ^-> TGen 1 ^-> TGen 2 = TAp (\n    TAp (TCon (Tycon (\"(->)\", Kfun (Star, Kfun (Star, Star)))), TGen 0),\n    TAp (TAp (TCon (Tycon (\"(->)\", Kfun (Star, Kfun (Star, Star)))), TGen 1), TGen 2)))\n\nlet _ = test1 ()\n```\n\n## \u30d0\u30b0\u30c3\u3063\u3068\u308b\u3002\u3002\u3002\n\n\u3046\u3063\u3002\u6700\u521d\u306e1\u500b\u76ee\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3002\u56f0\u3063\u305f\u305e\u3002Haskell\u306e\u52d5\u304d\u3092\u898b\u305f\u3044\u3002\n\u3057\u304b\u3057\u3001\u30c7\u30d0\u30c3\u30b0\u306e\u4ed5\u65b9\u304c\u5206\u304b\u3089\u306a\u3044\u3002\u79c1\u306fHaskell\u306e\u4f7f\u3044\u65b9\u304c\u5206\u304b\u3089\u306a\u3044\u5947\u7279\u306a\u3001\u3001\u3001\u3063\u3066\u306e\u306f\u7f6e\u3044\u3066\u304a\u3044\u3066\u3001\u3001\u3001\n\n## ghci\u306e\u30c7\u30d0\u30c3\u30ac\u3092\u4f7f\u3063\u3066\u307f\u308b\n\nghci\u306f\u7d20\u6674\u3057\u3044\u4e8b\u306b\u3001\u30e1\u30a4\u30f3\u306e\u30bd\u30fc\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3060\u3051\u3067\u3001\u4f9d\u5b58\u89e3\u6790\u3092\u884c\u3063\u3066\u5fc5\u8981\u306a\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u307e\u3059\u3002\n\nTypingHaskellInHaskell.hs\u306b\u4ee5\u4e0b\u306e\u30bd\u30fc\u30b9\u3092\u52a0\u3048\u307e\u3059\u3002\n\n```\ntOrdering = TCon (Tycon \"Ordering\" Star)\n\nap              = foldl1 Ap\nevar v          = (Var v)\nelit l          = (Lit l)\neconst c        = (Const c)\nelet e f        = foldr Let f (map toBg e)\n\ntoBg           :: [(Id, Maybe Scheme, [Alt])] -> BindGroup\ntoBg g          = ([(v, t, alts) | (v, Just t, alts) <- g ],\n                   filter (not . null) [[(v,alts) | (v,Nothing,alts) <- g]])\n\nassumps :: [Assump]\nassumps\n = [ \"_concmp\" :>: \n       (Forall [Star]\n         ([] :=> \n          (TGen 0 `fn` TGen 0 `fn` tOrdering))) ]\n\nclassEnv :: ClassEnv\nJust classEnv = exampleInsts initialEnv\n\nprelude :: Program\nprelude\n = map toBg\n   [[(\"flip\",\n      Just (Forall [Star, Star, Star]\n             ([] :=>\n              ((TGen 0 `fn` TGen 1 `fn` TGen 2) `fn` TGen 1 `fn` TGen 0 `fn` TGen 2))),\n      [([PVar \"f\", PVar \"x\", PVar \"y\"],\n        ap [Var \"f\", Var \"y\", Var \"x\"])])]]\n\ntest1 :: () -> [Assump]\ntest1 () = tiProgram classEnv assumps prelude\n```\n\n\u305d\u3057\u3066\u3001ghci\u3067\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n```\n$ ghci TypingHaskellInHaskell.hs\nGHCi, version 7.6.3: http://www.haskell.org/ghc/  :? for help\nLoading package ghc-prim ... linking ... done.\nLoading package integer-gmp ... linking ... done.\nLoading package base ... linking ... done.\n[1 of 1] Compiling TypingHaskellInHaskell ( TypingHaskellInHaskell.hs, interpreted )\nOk, modules loaded: TypingHaskellInHaskell.\n*TypingHaskellInHaskell>\n```\n\n\u3053\u3053\u3067:list\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u95a2\u6570\u540d\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u3001\u3001\n\n```\n*TypingHaskellInHaskell> :list tiExpl\n550  tiExpl :: ClassEnv -> [Assump] -> Expl -> TI [Pred]\n551  tiExpl ce as (i, sc, alts)\n552          = do (qs :=> t) <- freshInst sc\n553               ps         <- tiAlts ce as alts t\n554               s          <- getSubst\n555               let qs'     = predsApply s qs\n556                   t'      = typeApply s t\n557                   fs      = assumpsTv (assumpsApply s as)\n558                   gs      = typeTv t' \\\\ fs\n559                   sc'     = quantify gs (qs':=>t')\n560                   ps'     = filter (not . entail ce qs') (predsApply s ps)\n561               (ds,rs)    <- split ce fs gs ps'\n562               if sc /= sc' then\n563                   fail \"signature too general\"\n564                 else if not (null rs) then\n565                   fail \"context too weak\"\n566                 else\n567                   return ds\n568\n*TypingHaskellInHaskell>\n```\n\n\u95a2\u6570\u306e\u4e2d\u5473\u3092\u898b\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002\n\n```\n*TypingHaskellInHaskell> :break 559\nBreakpoint 0 activated at TypingHaskellInHaskell.hs:559:28-49\n```\n\n\u3068\u3059\u308b\u3068\u3001\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3092\u4ed8\u3051\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002:break\u306f:b\u3060\u3051\u3067\u3082\u3044\u3051\u308b\u3088\u3046\u3067\u3059\u3002\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046:\n\n```\n*TypingHaskellInHaskell> test1 ()\nStopped at TypingHaskellInHaskell.hs:559:28-49\n_result :: Scheme = _\ngs :: [Tyvar] = [Tyvar \"v5\" Star,Tyvar \"v4\" Star,Tyvar \"v7\" Star]\nqs' :: [Pred] = _\nt' :: Type = TAp\n               (TAp (TCon ...) (TAp ...)) (TAp (TAp ...) (TAp ...))\n```\n\n\u30d6\u30ec\u30a4\u30af\u30dd\u30a4\u30f3\u30c8\u3067\u6b62\u307e\u3063\u3066\u5909\u6570\u304c\u3042\u308b\u7a0b\u5ea6\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u3001`t'`\u306e\u4e2d\u5473\u3092\u8a73\u3057\u304f\u898b\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059:\n\n```\n[TypingHaskellInHaskell.hs:559:28-49] *TypingHaskellInHaskell> t'\nTAp (TAp (TCon (Tycon \"(->)\" (Kfun Star (Kfun Star Star)))) (TAp (TAp (TCon (Tycon \"(->)\" (Kfun Star (Kfun Star Star)))) (TVar (Tyvar \"v5\" Star))) (TAp (TAp (TCon (Tycon \"(->)\" (Kfun Star (Kfun Star Star)))) (TVar (Tyvar \"v4\" Star))) (TVar (Tyvar \"v7\" Star))))) (TAp (TAp (TCon (Tycon \"(->)\" (Kfun Star (Kfun Star Star)))) (TVar (Tyvar \"v4\" Star))) (TAp (TAp (TCon (Tycon \"(->)\" (Kfun Star (Kfun Star Star)))) (TVar (Tyvar \"v5\" Star))) (TVar (Tyvar \"v7\" Star))))\n```\n\n\u3055\u3089\u306b\u8a73\u3057\u3044\u60c5\u5831\u304c\u898b\u308c\u307e\u3057\u305f\u3002gs\u3068\u3059\u308c\u3070\u3001gs\u306e\u4e2d\u5473\u3092\u898b\u308c\u307e\u3059\u3002\n\n```\n[TypingHaskellInHaskell.hs:559:28-49] *TypingHaskellInHaskell> gs\n[Tyvar \"v5\" Star,Tyvar \"v4\" Star,Tyvar \"v7\" Star]\n```\n\ngs\u306e\u5185\u5bb9\u304c\u3001\u9055\u3063\u305f\u306e\u3067\u3059\u3002\n\n## \u539f\u56e0\u898b\u3064\u3051\u305f\n\n\u30ea\u30b9\u30c8\u306eunion\u306e\u51e6\u7406\u7d50\u679c\u306e\u9806\u756a\u304c\u5909\u308f\u3063\u3066\u3044\u305f\u306e\u304c\u539f\u56e0\u3067\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002union\u306e\u51e6\u7406\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u308b\u4e8b\u3067\u30a8\u30e9\u30fc\u306f\u89e3\u6d88\u51fa\u6765\u307e\u3057\u305f\u3002\n\n\tlet union xs ys = xs @ filter (fun x -> not (mem x xs)) ys\n\n\u79fb\u690d\u306e\u969b\u306b\u306f\u3001\u539f\u56e0\u306e\u7d5e\u308a\u8fbc\u307f\u304c\u8f9b\u3044\u6240\u3067\u3059\u3002\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u304c\u3001\u3001\u3001\u9032\u6357\u30b9\u30d4\u30fc\u30c9\u304c\u304c\u305f\u843d\u3061\u3059\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u3067\u3082\u8ae6\u3081\u305a\u306b\u30b3\u30c4\u30b3\u30c4\u3068\u9032\u3080\u306e\u3067\u3059\u3002\u5f90\u3005\u306b\u7d5e\u308a\u8fbc\u3093\u3067\u884c\u3051\u3070\u5fc5\u305a\u539f\u56e0\u306f\u5206\u304b\u308a\u307e\u3059\u3002\n\n\u3075\u3063\u3075\u3063\u3075\u3002\u5206\u304b\u3089\u306a\u3044\u4e8b\u304c\u5206\u304b\u3063\u3066\u3001\u554f\u984c\u70b9\u3092\u6d17\u3044\u51fa\u3057\u3001\u7d5e\u308a\u8fbc\u3093\u3067\uff11\u3064\u89e3\u6c7a\u3057\u5206\u304b\u3089\u306a\u3044\u4e8b\u304c\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff01\uff01\uff01\n\n## \u6b21\u306b\u3084\u308d\u3046\u3068\u3057\u3066\u308b\u4e8b\n\n1. \u5927\u91cf\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092Scala\u306b\u79fb\u690d\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002OCaml\u306b\u3082\u79fb\u690d\u3057\u307e\u3059\u3002Haskell\u306e\u30d7\u30ea\u30c6\u30a3\u30d7\u30ea\u30f3\u30bf\u30e9\u30a4\u30d6\u30e9\u30eaText.PrettyPrint.HughesPJ\u3092\u4f7f\u3063\u3066\u4e00\u6c17\u306b\u51fa\u529b\u3059\u308b\u3064\u3082\u308a\u3067\u3059\u3002\n\n2. \u30d1\u30fc\u30b5\u3092OCamllex\u3068OCamlYacc\u3067\u66f8\u304d\u307e\u3059\u3002\u30aa\u30d5\u30b5\u30a4\u30c9\u30eb\u30fc\u30eb\u306e\u306a\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306eHaskell\u306e\u30d1\u30fc\u30b5\u3092\u4f5c\u308a\u307e\u3059\u3002thih\u306e\u30bd\u30fc\u30b9\u5185\u306b\u306fhatchet\u3068\u3044\u3046\u5b9f\u88c5\u304c\u3042\u308b\u306e\u3067\u3001\u53c2\u8003\u306b\u3057\u307e\u3059\u3002Haskell\u306eAltJS\u3082\u6ca2\u5c71\u3042\u308a\u307e\u3059\u304cPureScript\u304c\u3088\u308a\u5358\u7d14\u5316\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u306e\u3067\u53c2\u8003\u306b\u3059\u308b\u3068\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n3. \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3067\u66f8\u304d\u76f4\u3057\u307e\u3059\u3002Haskell\u306f\u7d14\u7c8b\u306a\u95a2\u6570\u578b\u8a00\u8a9e\u306a\u306e\u3067\u3001\u53c2\u7167\u900f\u660e\u6027\u3092\u78ba\u4fdd\u3059\u308b\u305f\u3081\u306b\u4e00\u5de5\u592b\u5fc5\u8981\u3067\u3059\u3002OCaml\u3084Scala\u306fmutable\u306a\u5909\u6570\u304c\u4f7f\u3048\u307e\u3059\u3002\u7d20\u76f4\u306b\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u4f7f\u3063\u3066\u66f8\u304d\u76f4\u305b\u3070\u3082\u3063\u3068\u5206\u304b\u308a\u3084\u3059\u304f\u3001\u305d\u3057\u3066\u9ad8\u901f\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\u74b0\u5883\u304c\u95a2\u6570\u304a\u5316\u3051\u306b\u306a\u3063\u3066\u308b\u7b87\u6240\u3082\u53ea\u306e\u30c7\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\u306b\u3059\u308b\u3068\u7c21\u5358\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n**Haskell\u3092\u4f5c\u308a\u305f\u3044\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u306b\u4f5c\u3089\u306a\u3044\u3068\u7406\u89e3\u51fa\u6765\u306a\u3055\u305d\u3046\u3060\u3002**\n\n\u3053\u306e\u3042\u305f\u308a\u306b\u845b\u85e4\u304c\u3042\u308a\u307e\u3059\u3002\u5c11\u306a\u304f\u3068\u3082\u30aa\u30d5\u30b5\u30a4\u30c9\u30eb\u30fc\u30eb\u306e\u306a\u3044Haskell\u3092\u4f5c\u3089\u306a\u3044\u3068\u884c\u3051\u306a\u3044\u3088\u3046\u3067\u3059\u3002Haskell\u4f5c\u308a\u305f\u3044\u8a33\u3058\u3083\u306a\u3044\u306e\u306b\u3001\u4e00\u5ea6Haskell\u306e\u30d1\u30fc\u30b5\u4f5c\u3063\u305f\u307b\u3046\u304c\u826f\u3055\u305d\u3046\u306a\u306e\u3067\u8f9b\u3044\u3002\n\u5927\u4f53\u845b\u85e4\u304c\u3042\u308b\u3068\u307f\u3093\u306a\u60a9\u307f\u82e6\u3057\u3080\u306e\u3067\u3059\u3002\u305d\u3046\u3044\u3046\u5834\u5408\u306f\u3001\u845b\u85e4\u3092\u898b\u3064\u3051\u3066\u8f9b\u3055\u3092\u8a8d\u8b58\u3057\u3001\u6b21\u306b\u51fa\u6765\u308b\u306a\u3089\u3001\u305d\u306e\u845b\u85e4\u3092\u89e3\u6d88\u3057\u3066\u3084\u308c\u3070\u3044\u3044\u306e\u3067\u3059\u3002\u89e3\u6d88\u51fa\u6765\u306a\u3044\u306a\u3089\u8ae6\u3081\u308c\u3070\u3044\u3044\u3002\u3053\u306e\u6311\u6226\u306f\u845b\u85e4\u304c\u3042\u3063\u3066\u8f9b\u3044\u306e\u3067\u3001\u5f90\u3005\u306b\u9032\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\u30b9\u30c8\u30ec\u30b9\u306b\u8010\u3048\u306c\u3044\u3066\u4e00\u6c17\u306b\u89e3\u6c7a\u3067\u304d\u308b\u306e\u304c\u4e00\u756a\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u3061\u3087\u3063\u3068\u9032\u3081\u3070\u305d\u308c\u3067\u3082\u3044\u3044\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u3002\u5927\u5909\u306a\u3093\u3060\u3082\u3093\u3002\n\n\u3060\u304b\u3089\u3001\u8f9b\u3044\u3051\u3069\u3001\u578b\u63a8\u8ad6\u51fa\u6765\u3066\u3001\u30d1\u30fc\u30b5\u4f5c\u308c\u305f\u3089\u3001\u5f8c\u306f\u3082\u3046\u3053\u3063\u3061\u306e\u4e16\u754c\u3067\u3059\u3002\u3082\u3046\u51e6\u7406\u7cfb\u4f5c\u308c\u3066\u3057\u307e\u3046\u3002\u304d\u3063\u3068\u3001\u9811\u5f35\u308c\u3070\u7d20\u6674\u3057\u3044\u4e16\u754c\u304c\u5f85\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u3002\u305d\u308c\u3092\u5922\u307f\u3066\u9811\u5f35\u308b\u306e\u3067\u3042\u308a\u307e\u3059\u3002\n\n**Haskell\u3092\u4f5c\u308a\u305f\u3044\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u306b\u4f5c\u3089\u306a\u3044\u3068\u7406\u89e3\u51fa\u6765\u306a\u3055\u305d\u3046\u3060\u3002\u3060\u3051\u3069\u7406\u89e3\u3057\u3066\u3057\u307e\u3048\u3070\u7d20\u6674\u3057\u3044\u4e16\u754c\u304c\u5f85\u3063\u3066\u3044\u308b\u3002**\n\n\u305d\u3046\u8003\u3048\u3066\u3053\u306e\u5148\u306e\u4f5c\u696d\u3092\u9032\u3081\u3066\u884c\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\n\nHaskell\u306e\u578b\u30b7\u30b9\u30c6\u30e0\u306e\u7406\u89e3\u306f\u96e3\u3057\u3044\u306e\u3067\u3059\u304c\u3001\u5206\u304b\u3089\u306a\u3044\u70b9\u3092\u6d17\u3044\u51fa\u3057\u3001\u89e3\u6d88\u3059\u308b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3001\u30d0\u30b0\u3092\u53d6\u308a\u9664\u304d\u3001\u4e00\u6b69\u524d\u9032\u3057\u307e\u3057\u305f\u3002\n\n\u307e\u3060\u307e\u3060\u8ab2\u984c\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u4e8b\u3067\u660e\u78ba\u306b\u3057\u307e\u3057\u305f\u3002\n\nHaskell\u306e\u578b\u63a8\u8ad6\u306fHaskell\u3092\u7406\u89e3\u3057\u306a\u3044\u3068\u96e3\u3057\u3044\u73fe\u72b6\u304c\u3042\u308a\u307e\u3059\u3002\u3067\u3082\u3001\u4e00\u5ea6\u3053\u3061\u3089\u306e\u4e16\u754c\u306b\u5f15\u304d\u305a\u308a\u8fbc\u3093\u3067\u3057\u307e\u3048\u3070\u8272\u3005\u3068\u3042\u3093\u306a\u4e8b\u3084\u3053\u3093\u306a\u4e8b\u3092\u9ad8\u901f\u306b\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n## \u53c2\u8003\u6587\u732e\n\n- <a name=\"1\"></a>[[1]](#r1) Typhing Haskell in Haskell\n    https://web.cecs.pdx.edu/~mpj/thih/\n\n- <a name=\"2\"></a>[[2]](#r2) Typhing Haskell in Haskell\u306e\u9177\u3044\u82f1\u8a9e\u306e\u8a33\n    https://github.com/hsk/docs/tree/master/thih\n\n- <a name=\"3\"></a>[[3]](#r3) Mokkosu\u3067Haskell\u306e\u578b\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308b (\u305d\u306e1)\n    http://qiita.com/lambdataro/items/1e4d795d3dd97a94c8f3\n\n- <a name=\"4\"></a>[[4]](#r4) Typhing Haskell in ML\n    http://devmusings.legiasoft.com/_media/blog/2010/08/04/typinghaskellinml.ml\n\n- <a name=\"5\"></a>[[5]](#r5) Typhing Haskell in Scala\n    https://github.com/hsk/docs/blob/master/thih/scala/src/main/scala/thih.scala\n\n- <a name=\"6\"></a>[[6]](#r6) Typhing Haskell in Haskell\u306e\u30bd\u30fc\u30b9\n    https://github.com/wh5a/thih/tree/master/src\n\n- <a name=\"7\"></a>[[7]](#r7) hatchet\n    https://github.com/wh5a/thih/tree/master/hatchet\n"}