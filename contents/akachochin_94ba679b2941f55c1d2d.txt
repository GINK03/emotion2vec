{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u3069\u3046\u3082\u3067\u3059\u3002@akachochin\u3067\u3059\u3002Advent calendar\u306e\u8a18\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u9593Linux\u306e\u30c7\u30d0\u30c9\u30e9\u306e\u30b3\u30fc\u30c9\u306b\u304b\u304b\u308f\u308b\u4ed5\u4e8b\u3092\u3057\u3066\u3044\u3066\u3001include/linux/fs.h\u3092\u898b\u307e\u3057\u305f\u3002\u3067\u3001file_operations\u69cb\u9020\u4f53\u3092\u898b\u305f\u3089\u3001ioctl\u3092\u547c\u3073\u51fa\u3059\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304c\n\ninclude/linux/fs.h\n        long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long);\n        long (*compat_ioctl) (struct file *, unsigned int, unsigned long);         \n\n\n\u3068\u3044\u3046\u30e1\u30f3\u30d0\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002Linux Device Drivers 3rd edition\u3092\u898b\u308b\u9650\u308a\u3001\u3053\u306e\u3088\u3046\u306a\u30e1\u30f3\u30d0\u306f\u8f09\u3063\u3066\u3044\u307e\u305b\u3093\u3002(ioctl\u306b\u95a2\u3059\u308b\u30e1\u30f3\u30d0\u306fioctl\u306e\u307f\u63b2\u8f09\u3055\u308c\u3066\u3044\u307e\u3057\u305f)\n\u305b\u3063\u304b\u304f\u306e\u6a5f\u4f1a\u306a\u306e\u3067\u3001\u3053\u306e\u5834\u3092\u501f\u308a\u3066\u3001unlocked_ioctl\u3068compat_ioctl\u306e\u9055\u3044\u3092\u898b\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305aDocumentation\u3092\u898b\u308b\nDocumentation\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u3092\u691c\u7d22\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nDocumentation/filesystems/vfs.txt\n\n  unlocked_ioctl: called by the ioctl(2) system call.\n\n  compat_ioctl: called by the ioctl(2) system call when 32 bit system calls                               \n         are used on 64 bit kernels.\n\n\n\u3046\u30fc\u3093\u3001\u3053\u308c\u3060\u3068\u4eca\u4e00\u3064\u30a4\u30e1\u30fc\u30b8\u304c\u6e67\u304d\u307e\u305b\u3093\u3002\u3067\u306f\u3001\u30bd\u30fc\u30b9\u3092\u898b\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30bd\u30fc\u30b9\u3092\u898b\u308b\ncompat_ioctl\u304c\u547c\u3070\u308c\u308b\u6700\u3082\u4e00\u822c\u7684\u306a\u30eb\u30fc\u30c8\u306f\u4ee5\u4e0b\u306e\u7b87\u6240\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\nfs/compat_ioctl.c\nCOMPAT_SYSCALL_DEFINE3(ioctl, unsigned int, fd, unsigned int, cmd, \n                       compat_ulong_t, arg32)\n{\n/* \u7565 */\n        /*   \n         * To allow the compat_ioctl handlers to be self contained\n         * we need to check the common ioctls here first.\n         * Just handle them with the standard handlers below.\n         */\n        switch (cmd) {\n/* \u7565 */\n        default:\n                if (f.file->f_op->compat_ioctl) {\n                        error = f.file->f_op->compat_ioctl(f.file, cmd, arg);\n                        if (error != -ENOIOCTLCMD)\n                                goto out_fput;\n                }\n\n                if (!f.file->f_op->unlocked_ioctl)\n                        goto do_ioctl;\n                break;\n        }\n\n        if (compat_ioctl_check_table(XFORM(cmd)))\n                goto found_handler;\n\n        error = do_ioctl_trans(fd, cmd, arg, f.file);\n        if (error == -ENOIOCTLCMD)\n                error = -ENOTTY;\n\n        goto out_fput;\n\n found_handler:\n        arg = (unsigned long)compat_ptr(arg);\n do_ioctl:\n        error = do_vfs_ioctl(f.file, fd, cmd, arg);\n out_fput:\n        fdput(f);\n out:\n        return error;\n}\n\n\n\u3053\u3053\u3067\u3001COMPAT_SYSCALL_DEFINE3(ioctl)\u306f\u3001\u4ee5\u4e0b\u306e\u52d5\u4f5c\u3092\u3057\u307e\u3059\u3002\n\ncompat_ioctl\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u305f\u3089\u3001\u305d\u308c\u3092\u5b9f\u884c\u3057\u3001-ENOIOCTLCMD\u4ee5\u5916\u306e\u623b\u308a\u5024\u3067\u3042\u308c\u3070\u7d42\u4e86\u3002\n\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u3001compat_ioctl_check_table()\u3092\u547c\u3073\u3001\u6e21\u3055\u308c\u305fcmd\u304c\u7279\u6b8a\u306a\u6271\u3044\u3092\u3059\u308b\u3082\u306e\u304b\u8abf\u3079\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001fs/compat_ioctl.c\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bioctl_pointer[]\u5185\u306b\u8a72\u5f53cmd\u304c\u3042\u308b\u304b\u8abf\u3079\u307e\u3059\u3002\u7279\u6b8a\u306a\u6271\u3044\u3092\u3059\u308b\u3082\u306e\u3067\u3042\u308c\u3070\u3001do_vfs_ioctl()\u304c\u547c\u3070\u308c\u307e\u3059\u3002\ndo_vfs_ioctl()\u306e\u547c\u51fa\u3057\u3092\u7d4c\u7531\u3057\u3066\u3001unlocked_ioctl()\u304c\u547c\u3070\u308c\u308b\u30b1\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u305f\u3001unlocked_ioctl\u304c\u547c\u3070\u308c\u308b\u6700\u3082\u4e00\u822c\u7684\u306a\u30eb\u30fc\u30c8\u306f\u4ee5\u4e0b\u306e\u7b87\u6240\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\nfs/ioctl.c\nstatic long vfs_ioctl(struct file *filp, unsigned int cmd,\n                      unsigned long arg)\n{\n        int error = -ENOTTY;\n\n        if (!filp->f_op->unlocked_ioctl)\n                goto out;\n\n        error = filp->f_op->unlocked_ioctl(filp, cmd, arg);\n        if (error == -ENOIOCTLCMD)\n                error = -ENOTTY;\n out:\n        return error;\n}\n\n/* \u7565 */\n\n/*\n * When you add any new common ioctls to the switches above and below\n * please update compat_sys_ioctl() too.\n *\n * do_vfs_ioctl() is not for drivers and not intended to be EXPORT_SYMBOL()'d.                            \n * It's just a simple helper for sys_ioctl and compat_sys_ioctl.\n */\nint do_vfs_ioctl(struct file *filp, unsigned int fd, unsigned int cmd,\n             unsigned long arg)\n{\n    /* \u7565 */\n        default:\n                if (S_ISREG(inode->i_mode))\n                        error = file_ioctl(filp, cmd, arg);\n                else\n                        error = vfs_ioctl(filp, cmd, arg);\n                break;\n        }\n        return error;\n}\n\n/* \u7565 */\n\nSYSCALL_DEFINE3(ioctl, unsigned int, fd, unsigned int, cmd, unsigned long, arg)\n{\n        int error;\n        struct fd f = fdget(fd);\n\n        if (!f.file)\n                return -EBADF;\n        error = security_file_ioctl(f.file, cmd, arg);\n        if (!error)\n                error = do_vfs_ioctl(f.file, fd, cmd, arg);\n        fdput(f);\n        return error;\n}\n\n\n\u6b21\u306b\u3001SYSCALL_DEFINE3\u306eioctl\u3068COMPAT_SYSCALL_DEFINE3\u306eioctl\u306e\u5dee\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nSYSCALL_DEFINE\u3068COMPAT_SYSCALL_DEFINE\n\u307e\u305a\u3001SYSCALL_DEFINE\u306e\u307b\u3046\u304b\u3089\u898b\u307e\u3059\u3002\n\ninclude/linux/syscalls.h\n#define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)\n#define SYSCALL_DEFINEx(x, sname, ...)                          \\\n        SYSCALL_METADATA(sname, x, __VA_ARGS__)                 \\\n        __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)\n\n#define __PROTECT(...) asmlinkage_protect(__VA_ARGS__)\n#define __SYSCALL_DEFINEx(x, name, ...)                                 \\\n        asmlinkage long sys##name(__MAP(x,__SC_DECL,__VA_ARGS__))       \\\n                __attribute__((alias(__stringify(SyS##name))));         \\\n        static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__));  \\\n        asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__));      \\\n        asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__))       \\\n        {                                                               \\\n                long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__));  \\\n                __MAP(x,__SC_TEST,__VA_ARGS__);                         \\\n                __PROTECT(x, ret,__MAP(x,__SC_ARGS,__VA_ARGS__));       \\\n                return ret;                                             \\\n        }                                                               \\\n        static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))\n\n\nSYSCALL_DEFINE3\u306e\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308a\u307e\u3059\u3002\n* \u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u306f\u3001SYSC##name\u3068\u3044\u3046static\u95a2\u6570\u3068\u306a\u308b\u3002\u4f8b\u3048\u3070\u3001\u4eca\u56de\u306eioctl\u306e\u5834\u5408\u3001SYSCioctl\u3068\u3044\u3046\u95a2\u6570\u540d\u306b\u306a\u308b\u3002\n* \u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u3092\u76f4\u547c\u3073\u51fa\u3057\u3059\u308b\u306e\u3067\u306a\u304f\u3001SyS##name\u3067\u5b9a\u7fa9\u3055\u308c\u308basmlinkage\u5c5e\u6027\u306e\u95a2\u6570\u7d4c\u7531\u3067\u547c\u3070\u308c\u308b\u3002\u4eca\u56de\u306e\u5834\u5408\u3001SySioctl\u3068\u306a\u308b\u3002\n\u4e00\u65b9\u3067\u3001COMPAT_SYSCALL_DEFINE\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3068\u306a\u308a\u307e\u3059\u3002\n\ninclude/linux/compat.h\n/* \u7565 */\n#define COMPAT_SYSCALL_DEFINE3(name, ...) \\\n        COMPAT_SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)\n\n#define COMPAT_SYSCALL_DEFINEx(x, name, ...)                            \\\n        asmlinkage long compat_sys##name(__MAP(x,__SC_DECL,__VA_ARGS__))\\\n                __attribute__((alias(__stringify(compat_SyS##name))));  \\\n        static inline long C_SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__));\\\n        asmlinkage long compat_SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__));\\\n        asmlinkage long compat_SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__))\\\n        {                                                               \\\n                return C_SYSC##name(__MAP(x,__SC_DELOUSE,__VA_ARGS__)); \\\n        }                                                               \\\n        static inline long C_SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))\n\n\n\n\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u306f\u3001C_SYSC##name\u3068\u3044\u3046static\u95a2\u6570\u3068\u306a\u308b\u3002\u4f8b\u3048\u3070\u3001\u4eca\u56de\u306eioctl\u306e\u5834\u5408\u3001C_SYSCioctl\u3068\u3044\u3046\u95a2\u6570\u540d\u306b\u306a\u308b\u3002\n\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u3092\u76f4\u547c\u3073\u51fa\u3057\u3059\u308b\u306e\u3067\u306a\u304f\u3001compat_SyS##name\u3067\u5b9a\u7fa9\u3055\u308c\u308basmlinkage\u5c5e\u6027\u306e\u95a2\u6570\u7d4c\u7531\u3067\u547c\u3070\u308c\u308b\u3002\u4eca\u56de\u306e\u5834\u5408\u3001compat_SySioctl\u3068\u306a\u308b\u3002\n\n\u3075\u305f\u3064\u306f\u3042\u307e\u308a\u5909\u308f\u3089\u306a\u3044\u3088\u3046\u306b\u601d\u308f\u308c\u307e\u3059\u304c\u3001\u7b2c\u4e8c\u5f15\u6570\u306b\u7740\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\ninclude/linux/syscalls.h\n// asmlinkage\u306e\u95a2\u6570(\u30ac\u30ef)\nasmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__))       \\\n// static\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u5b9f\u969b\u306e\u5b9f\u88c5\u5074\u306e\u547c\u51fa\nlong ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__));  \\\n// \u5b9f\u969b\u306e\u5b9f\u88c5\u5074\u306e\u95a2\u6570\nstatic inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))\n\n\n\ninclude/linux/compat.h\n// asmlinkage\u306e\u95a2\u6570(\u30ac\u30ef)\nasmlinkage long compat_SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__));\\\n// static\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u5b9f\u969b\u306e\u5b9f\u88c5\u5074\u306e\u547c\u51fa\nreturn C_SYSC##name(__MAP(x,__SC_DELOUSE,__VA_ARGS__)); \\\n// \u5b9f\u969b\u306e\u5b9f\u88c5\u5074\u306e\u95a2\u6570\nstatic inline long C_SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))\n\n\n\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u672c\u4f53\u306b\u6e21\u3057\u3066\u3044\u308b\u7b2c\u4e8c\u5f15\u6570\u306b\u6307\u5b9a\u3057\u3066\u3044\u308b__SC_CAST\u3068__SC_DELOUSE\u306e\u9055\u3044\u3092\u898b\u308c\u3070\u826f\u3055\u3052\u3067\u3059\u306d\u3002\n\ninclude/linux/syscalls.h\n#define __TYPE_IS_LL(t) (__same_type((t)0, 0LL) || __same_type((t)0, 0ULL))\n#define __SC_DECL(t, a) t a\n#define __SC_LONG(t, a) __typeof(__builtin_choose_expr(__TYPE_IS_LL(t), 0LL, 0L)) a\n#define __SC_CAST(t, a) (t) a\n\n\n__builtin_choose_expr\u306fGCC\u306e\u30d3\u30eb\u30c9\u30a4\u30f3\u95a2\u6570\u3067\u3001\u7b2c\u4e00\u5f15\u6570\u304c\u975e\u30bc\u30ed\u306a\u3089\u7b2c\u4e8c\u5f15\u6570\u3092\u8fd4\u3057\u305d\u3046\u3067\u306a\u3044\u306a\u3089\u7b2c\u4e09\u5f15\u6570\u3092\u8fd4\u3059\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u3055\u3066\u3001__TYPE_IS_LL\u306f\u3001\u5f15\u6570\u306b\u6e21\u3055\u308c\u305f\u578b\u304cunsigned long long\u3082\u3057\u304f\u306flong long\u306e\u3044\u305a\u308c\u304b(\u8981\u3059\u308b\u306b64bit\u304b\u3069\u3046\u304b)\u3068\u7b49\u3057\u3044\u304b\u3092\u898b\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u305d\u3057\u3066\u3001__TYPE_IS_LL\u306e\u7d50\u679c\u304c(unsigned) long long\u3067\u3042\u308c\u3070\u3001__SC_LONG\u30de\u30af\u30ed\u306f\u305d\u306e\u7b2c\u4e8c\u5f15\u6570\u306b\u6e21\u3055\u308c\u305f\u5909\u6570\u3092long long\u3067\u5ba3\u8a00\u3057\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3051\u308c\u3070long\u3067\u5ba3\u8a00\u3057\u307e\u3059\u3002\n\u53c2\u8003\u307e\u3067\u306b__same_type\u3092\u8f09\u305b\u307e\u3059\u3002\n\ninclude/linux/compiler.h\n#ifndef__same_type                                                       # define __same_type(a, b) __builtin_types_compatible_p(typeof(a), typeof(b))\n#endif\n\n\n\ninclude/linux/compat.h\n#ifndef __SC_DELOUSE\n#define __SC_DELOUSE(t,v) ((t)(unsigned long)(v))\n#endif\n\n\n\u4e00\u65b9\u3067\u3001__SC_DELOUSE\u30de\u30af\u30ed\u306f\u7b2c\u4e8c\u5f15\u6570\u3067\u6e21\u3055\u308c\u305f\u5909\u6570\u3092\u5f37\u5236\u7684\u306bunsigned long\u3067\u30ad\u30e3\u30b9\u30c8\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u5f37\u5236\u7684\u306b32bit\u5024\u306b\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u307e\u305f\u3001\u4e0a\u3067\u7d39\u4ecb\u3057\u305fGCC\u30d3\u30eb\u30c9\u30a4\u30f3\u95a2\u6570\u306f\u3053\u3053\u306b\u8f09\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3064\u307e\u308a\u3001\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\n* \u666e\u901a\u306e\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306f\u6e21\u3055\u308c\u305f\u5f15\u6570\u304c32bit\u5024\u304b64bit\u5024\u304b\u3092\u898b\u3066\u9069\u5207\u306b\u5ba3\u8a00\u3057\u3066\u304f\u308c\u308b\u3002(64bit\u5024\u5bfe\u5fdc\u7248\u3068\u3044\u3048\u305d\u3046)\n* compat\u306a\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306f\u3001\u3044\u304b\u306a\u308b\u5834\u5408\u3082\u5f37\u5236\u7684\u306b\u5f15\u6570\u304c32bit\u306b\u5207\u308a\u6368\u3066\u3089\u308c\u305f\u5f8c\u3001\u6307\u5b9a\u306e\u578b\u306b\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u308b\u3002\n\u53c2\u8003\u307e\u3067\u306b\u3001__MAP(x,__SC_LONG,__VA_ARGS__)\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\ninclude/linux/syscalls.h\n#define __MAP0(m,...)\n#define __MAP1(m,t,a) m(t,a)\n#define __MAP2(m,t,a,...) m(t,a), __MAP1(m,__VA_ARGS__)\n#define __MAP3(m,t,a,...) m(t,a), __MAP2(m,__VA_ARGS__)\n/* \u7565 */\n#define __MAP(n,...) __MAP##n(__VA_ARGS__)\n\n\n\u3088\u3063\u3066\u3001\u30de\u30af\u30ed\u306e\u5c55\u958b\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n-> __MAP(3,__SC_LONG,systype1,sysarg1,systype2,sysarg2,systype3,sysarg3) \n\u203b__VA_ARGS__\u306f\u30de\u30af\u30ed\u306b\u6e21\u3055\u308c\u305f\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u5f15\u6570\n-> __MAP3(__SC_LONG,systype1,sysarg1,systype2,sysarg2,systype3,sysarg3)\n-> __SC_LONG(systype1,sysarg1) , __MAP2(systype2,sysarg2,systype3,sysarg3)\n-> __SC_LONG(systype1,sysarg1) ,__SC_LONG(systype2,sysarg2) ,__MAP1(systype3,sysarg3)\n->__SC_LONG(systype1,sysarg1) ,__SC_LONG(systype2,sysarg2),__SC_LONG(systype3,sysarg3)\n\n\u3067\u306f\u3001\u8ab0\u304ccompat\u3068\u305d\u3046\u3067\u306a\u3044\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u547c\u3073\u5206\u3051\u3092\u3059\u308b\u306e\u304b\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001libc\u306e\u3088\u3046\u3067\u3059\u3002\nx86\u306e\u5834\u5408\u3001\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u30c6\u30fc\u30d6\u30eb\u306f\u4ee5\u4e0b\u306e\u30bd\u30fc\u30b9\u5185\u306b\u3042\u308a\u307e\u3059\u3002\n\narch/x86/kernel/syscall_64.c\n/* \u7565 */\n#ifdef CONFIG_X86_X32_ABI\n# define __SYSCALL_X32(nr, sym, compat) __SYSCALL_64(nr, sym, compat)\n#else\n# define __SYSCALL_X32(nr, sym, compat) /* nothing */\n#endif\n\n#define __SYSCALL_64(nr, sym, compat) extern asmlinkage void sym(void) ;\n#include <asm/syscalls_64.h>\n#undef __SYSCALL_64\n\n#define __SYSCALL_64(nr, sym, compat) [nr] = sym,\n\nextern void sys_ni_syscall(void);\n\nasmlinkage const sys_call_ptr_t sys_call_table[__NR_syscall_max+1] = {\n        /*\n         * Smells like a compiler bug -- it doesn't work\n         * when the & below is removed.\n         */\n        [0 ... __NR_syscall_max] = &sys_ni_syscall,\n#include <asm/syscalls_64.h>\n};                    \n\n\n\narch/x86/kernel/syscall_32.c\n/* \u7565 */\n#define __SYSCALL_I386(nr, sym, compat) extern asmlinkage void sym(void) ;\n#include <asm/syscalls_32.h>\n#undef __SYSCALL_I386\n\n#define __SYSCALL_I386(nr, sym, compat) [nr] = sym,\n/* \u7565 */      \n__visible const sys_call_ptr_t sys_call_table[__NR_syscall_max+1] = {\n        /*\n         * Smells like a compiler bug -- it doesn't work\n         * when the & below is removed.\n         */\n       [0 ... __NR_syscall_max] = &sys_ni_syscall,\n#include <asm/syscalls_32.h>\n};\n\n\nsys_call_table\u306e\u5404\u8981\u7d20\u306e\u521d\u671f\u5024\u306f\u300csys_ni_syscall\u300d\u3067\u3059\u3002\u3053\u308c\u306f-ENOSYS\u3060\u3051\u3092\u8fd4\u3059\u95a2\u6570\u3067\u300c\u5b58\u5728\u3057\u306a\u3044\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u756a\u53f7\u3092\u6307\u5b9a\u3057\u305f\u300d\u4e8b\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\u305d\u308c\u3067\u306f\u3001\u8ab0\u304c\u5b58\u5728\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u30a8\u30f3\u30c8\u30ea\u3092sys_call_table\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u305d\u306e\u9375\u306f\u4e0a\u3067\u5f15\u7528\u3057\u305f\u30bd\u30fc\u30b9\u5185\u306easm/syscalls_64.h\u3082\u3057\u304f\u306fasm/syscalls_32.h\u306b\u3042\u308a\u305d\u3046\u3067\u3059\u3002\u3057\u304b\u3057\u3001arch/x86/include/asm\u306e\u4e0b\u306b\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u5b9f\u306f\u3001\u30ab\u30fc\u30cd\u30eb\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001arch/x86/include/generated\u304c\u751f\u6210\u3055\u308c\u3001\u305d\u306e\u4e0b\u306bsyscalls_64.h\u3082\u3057\u304f\u306fsyscalls_32.h\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n(\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u77e5\u308a\u305f\u3044\u65b9\u306farch/x86/syscalls\u306e\u4e0b\u3092\u307f\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u3002)\n\u3055\u3066\u3001ioctl\u306b\u9650\u5b9a\u3057\u3066\u3001syscalls_64.h\u3068syscalls_32.h\u3092\u898b\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\narch/x86/include/generated/asm/syscalls_64.h\n/* \u7565 */\n__SYSCALL_64(16, sys_ioctl, sys_ioctl)                 \n/* \u7565 */\n__SYSCALL_X32(514, compat_sys_ioctl, compat_sys_ioctl)                 \n/* \u7565 */\n\n\n64bit\u7248\u3067\u306f\u3001CONFIG_X86_X32_ABI\u304c\u6709\u52b9\u306a\u5834\u5408\u3001_SYSCALL_X32\u3067\u6307\u5b9a\u3055\u308c\u305fcompat\u304c\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u307e\u3067\u306e\u8a71\u304b\u3089\u3001sysioctl\u3068compat_sys_ioctl\u306f\u5225\u7269\u306e\u72ec\u7acb\u3057\u305f\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3067\u3059\u3002\n\narch/x86/include/generated/asm/syscalls_32.h\n/* \u7565 */\n__SYSCALL_I386(54, sys_ioctl, compat_sys_ioctl)           \n/* \u7565 */\n\n\n\u4e00\u65b9\u300132bit\u7248\u3067\u306f\u3001ioctl\u306f\u5e38\u306bsys_ioctl\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002compat\u306f\u4f7f\u308f\u308c\u307e\u305b\u3093\u3002\n\u3061\u306a\u307f\u306b\u3001sys_call_table\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u30a2\u30bb\u30f3\u30d6\u30e9\u306e\u30b3\u30fc\u30c9\u304b\u3089\u6271\u3046\u305f\u3081\u3001\u8a72\u5f53\u30b3\u30fc\u30c9\u304b\u3089\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\u304c\u547c\u3070\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\narch/x86/kernel/entry_32.S\nsysenter_do_call:\n        cmpl $(NR_syscalls), %eax \n        jae sysenter_badsys\n        call *sys_call_table(,%eax,4)                                           \n        movl %eax,PT_EAX(%esp)\n\n\n(entry_64.S\u3082\u3042\u308a\u307e\u3059\u3002\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u305c\u3072\u3002)\n\n\u307e\u3068\u3081\n\u3053\u3053\u307e\u3067\u8ff0\u3079\u305f\u3053\u3068\u304b\u3089\u3001\u5148\u306b\u5f15\u7528\u3057\u305f\n\nunlocked_ioctl: called by the ioctl(2) system call.\ncompat_ioctl: called by the ioctl(2) system call when 32 bit system calls\n         are used on 64 bit kernels.\n\n\u3082\u5177\u4f53\u7684\u306b\u30a4\u30e1\u30fc\u30b8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nunlocked_ioctl\u306f\u3001\u901a\u5e38\u306eioctl\u5b9f\u88c5\u3067\u3001compat_ioctl\u306fCONFIG_X86_X32_ABI\u3092\u6709\u52b9\u306b\u3057\u3066\u30d3\u30eb\u30c9\u3057\u305f64bit\u30ab\u30fc\u30cd\u30eb\u306b\u5bfe\u3057\u306632bit\u7248\u306eioctl\u3092\u547c\u3073\u51fa\u3057\u305f\u3068\u304d(\u4f8b\u3048\u307032bit\u7248\u306e\u30a2\u30d7\u30ea\u304b\u3089ioctl\u3092\u53e9\u3044\u305f\u3068\u304d)\u306b\u547c\u3070\u308c\u308bioctl\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u308c\u3067\u306f\u3002\n## \u306f\u3058\u3081\u306b\n\u3069\u3046\u3082\u3067\u3059\u3002@akachochin\u3067\u3059\u3002Advent calendar\u306e\u8a18\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u9593Linux\u306e\u30c7\u30d0\u30c9\u30e9\u306e\u30b3\u30fc\u30c9\u306b\u304b\u304b\u308f\u308b\u4ed5\u4e8b\u3092\u3057\u3066\u3044\u3066\u3001include/linux/fs.h\u3092\u898b\u307e\u3057\u305f\u3002\u3067\u3001file_operations\u69cb\u9020\u4f53\u3092\u898b\u305f\u3089\u3001ioctl\u3092\u547c\u3073\u51fa\u3059\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304c\n\n```c:include/linux/fs.h\n        long (*unlocked_ioctl) (struct file *, unsigned int, unsigned long);\n        long (*compat_ioctl) (struct file *, unsigned int, unsigned long);         \n```\n\n\u3068\u3044\u3046\u30e1\u30f3\u30d0\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002Linux Device Drivers 3rd edition\u3092\u898b\u308b\u9650\u308a\u3001\u3053\u306e\u3088\u3046\u306a\u30e1\u30f3\u30d0\u306f\u8f09\u3063\u3066\u3044\u307e\u305b\u3093\u3002(ioctl\u306b\u95a2\u3059\u308b\u30e1\u30f3\u30d0\u306fioctl\u306e\u307f\u63b2\u8f09\u3055\u308c\u3066\u3044\u307e\u3057\u305f)\n\u305b\u3063\u304b\u304f\u306e\u6a5f\u4f1a\u306a\u306e\u3067\u3001\u3053\u306e\u5834\u3092\u501f\u308a\u3066\u3001unlocked_ioctl\u3068compat_ioctl\u306e\u9055\u3044\u3092\u898b\u307e\u3057\u3087\u3046\u3002\n\n## \u307e\u305aDocumentation\u3092\u898b\u308b\n\nDocumentation\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u3092\u691c\u7d22\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```Documentation/filesystems/vfs.txt\n\n  unlocked_ioctl: called by the ioctl(2) system call.\n\n  compat_ioctl: called by the ioctl(2) system call when 32 bit system calls                               \n         are used on 64 bit kernels.\n```\n\n\u3046\u30fc\u3093\u3001\u3053\u308c\u3060\u3068\u4eca\u4e00\u3064\u30a4\u30e1\u30fc\u30b8\u304c\u6e67\u304d\u307e\u305b\u3093\u3002\u3067\u306f\u3001\u30bd\u30fc\u30b9\u3092\u898b\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n## \u30bd\u30fc\u30b9\u3092\u898b\u308b\n\ncompat_ioctl\u304c\u547c\u3070\u308c\u308b**\u6700\u3082\u4e00\u822c\u7684\u306a**\u30eb\u30fc\u30c8\u306f\u4ee5\u4e0b\u306e\u7b87\u6240\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\n```c:fs/compat_ioctl.c\nCOMPAT_SYSCALL_DEFINE3(ioctl, unsigned int, fd, unsigned int, cmd, \n                       compat_ulong_t, arg32)\n{\n/* \u7565 */\n        /*   \n         * To allow the compat_ioctl handlers to be self contained\n         * we need to check the common ioctls here first.\n         * Just handle them with the standard handlers below.\n         */\n        switch (cmd) {\n/* \u7565 */\n        default:\n                if (f.file->f_op->compat_ioctl) {\n                        error = f.file->f_op->compat_ioctl(f.file, cmd, arg);\n                        if (error != -ENOIOCTLCMD)\n                                goto out_fput;\n                }\n\n                if (!f.file->f_op->unlocked_ioctl)\n                        goto do_ioctl;\n                break;\n        }\n\n        if (compat_ioctl_check_table(XFORM(cmd)))\n                goto found_handler;\n\n        error = do_ioctl_trans(fd, cmd, arg, f.file);\n        if (error == -ENOIOCTLCMD)\n                error = -ENOTTY;\n\n        goto out_fput;\n\n found_handler:\n        arg = (unsigned long)compat_ptr(arg);\n do_ioctl:\n        error = do_vfs_ioctl(f.file, fd, cmd, arg);\n out_fput:\n        fdput(f);\n out:\n        return error;\n}\n```\n\n\u3053\u3053\u3067\u3001COMPAT_SYSCALL_DEFINE3(ioctl)\u306f\u3001\u4ee5\u4e0b\u306e\u52d5\u4f5c\u3092\u3057\u307e\u3059\u3002\n\n* compat_ioctl\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u305f\u3089\u3001\u305d\u308c\u3092\u5b9f\u884c\u3057\u3001-ENOIOCTLCMD\u4ee5\u5916\u306e\u623b\u308a\u5024\u3067\u3042\u308c\u3070\u7d42\u4e86\u3002\n* \u305d\u3046\u3067\u306a\u3044\u5834\u5408\u3001compat_ioctl_check_table()\u3092\u547c\u3073\u3001\u6e21\u3055\u308c\u305fcmd\u304c\u7279\u6b8a\u306a\u6271\u3044\u3092\u3059\u308b\u3082\u306e\u304b\u8abf\u3079\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001fs/compat_ioctl.c\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bioctl_pointer[]\u5185\u306b\u8a72\u5f53cmd\u304c\u3042\u308b\u304b\u8abf\u3079\u307e\u3059\u3002\u7279\u6b8a\u306a\u6271\u3044\u3092\u3059\u308b\u3082\u306e\u3067\u3042\u308c\u3070\u3001do_vfs_ioctl()\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n* do_vfs_ioctl()\u306e\u547c\u51fa\u3057\u3092\u7d4c\u7531\u3057\u3066\u3001unlocked_ioctl()\u304c\u547c\u3070\u308c\u308b\u30b1\u30fc\u30b9\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u305f\u3001unlocked_ioctl\u304c\u547c\u3070\u308c\u308b**\u6700\u3082\u4e00\u822c\u7684\u306a**\u30eb\u30fc\u30c8\u306f\u4ee5\u4e0b\u306e\u7b87\u6240\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\n```c:fs/ioctl.c\nstatic long vfs_ioctl(struct file *filp, unsigned int cmd,\n                      unsigned long arg)\n{\n        int error = -ENOTTY;\n\n        if (!filp->f_op->unlocked_ioctl)\n                goto out;\n\n        error = filp->f_op->unlocked_ioctl(filp, cmd, arg);\n        if (error == -ENOIOCTLCMD)\n                error = -ENOTTY;\n out:\n        return error;\n}\n\n/* \u7565 */\n\n/*\n * When you add any new common ioctls to the switches above and below\n * please update compat_sys_ioctl() too.\n *\n * do_vfs_ioctl() is not for drivers and not intended to be EXPORT_SYMBOL()'d.                            \n * It's just a simple helper for sys_ioctl and compat_sys_ioctl.\n */\nint do_vfs_ioctl(struct file *filp, unsigned int fd, unsigned int cmd,\n             unsigned long arg)\n{\n    /* \u7565 */\n        default:\n                if (S_ISREG(inode->i_mode))\n                        error = file_ioctl(filp, cmd, arg);\n                else\n                        error = vfs_ioctl(filp, cmd, arg);\n                break;\n        }\n        return error;\n}\n\n/* \u7565 */\n\nSYSCALL_DEFINE3(ioctl, unsigned int, fd, unsigned int, cmd, unsigned long, arg)\n{\n        int error;\n        struct fd f = fdget(fd);\n\n        if (!f.file)\n                return -EBADF;\n        error = security_file_ioctl(f.file, cmd, arg);\n        if (!error)\n                error = do_vfs_ioctl(f.file, fd, cmd, arg);\n        fdput(f);\n        return error;\n}\n```\n\n\u6b21\u306b\u3001SYSCALL_DEFINE3\u306eioctl\u3068COMPAT_SYSCALL_DEFINE3\u306eioctl\u306e\u5dee\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## SYSCALL_DEFINE\u3068COMPAT_SYSCALL_DEFINE\n\n\u307e\u305a\u3001SYSCALL_DEFINE\u306e\u307b\u3046\u304b\u3089\u898b\u307e\u3059\u3002\n\n```c:include/linux/syscalls.h\n#define SYSCALL_DEFINE3(name, ...) SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)\n#define SYSCALL_DEFINEx(x, sname, ...)                          \\\n        SYSCALL_METADATA(sname, x, __VA_ARGS__)                 \\\n        __SYSCALL_DEFINEx(x, sname, __VA_ARGS__)\n\n#define __PROTECT(...) asmlinkage_protect(__VA_ARGS__)\n#define __SYSCALL_DEFINEx(x, name, ...)                                 \\\n        asmlinkage long sys##name(__MAP(x,__SC_DECL,__VA_ARGS__))       \\\n                __attribute__((alias(__stringify(SyS##name))));         \\\n        static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__));  \\\n        asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__));      \\\n        asmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__))       \\\n        {                                                               \\\n                long ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__));  \\\n                __MAP(x,__SC_TEST,__VA_ARGS__);                         \\\n                __PROTECT(x, ret,__MAP(x,__SC_ARGS,__VA_ARGS__));       \\\n                return ret;                                             \\\n        }                                                               \\\n        static inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))\n```\n\nSYSCALL_DEFINE3\u306e\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308a\u307e\u3059\u3002\n* \u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u306f\u3001SYSC##name\u3068\u3044\u3046static\u95a2\u6570\u3068\u306a\u308b\u3002\u4f8b\u3048\u3070\u3001\u4eca\u56de\u306eioctl\u306e\u5834\u5408\u3001SYSCioctl\u3068\u3044\u3046\u95a2\u6570\u540d\u306b\u306a\u308b\u3002\n* \u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u3092\u76f4\u547c\u3073\u51fa\u3057\u3059\u308b\u306e\u3067\u306a\u304f\u3001SyS##name\u3067\u5b9a\u7fa9\u3055\u308c\u308basmlinkage\u5c5e\u6027\u306e\u95a2\u6570\u7d4c\u7531\u3067\u547c\u3070\u308c\u308b\u3002\u4eca\u56de\u306e\u5834\u5408\u3001SySioctl\u3068\u306a\u308b\u3002\n\n\u4e00\u65b9\u3067\u3001COMPAT_SYSCALL_DEFINE\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3068\u306a\u308a\u307e\u3059\u3002\n\n```c:include/linux/compat.h\n/* \u7565 */\n#define COMPAT_SYSCALL_DEFINE3(name, ...) \\\n        COMPAT_SYSCALL_DEFINEx(3, _##name, __VA_ARGS__)\n\n#define COMPAT_SYSCALL_DEFINEx(x, name, ...)                            \\\n        asmlinkage long compat_sys##name(__MAP(x,__SC_DECL,__VA_ARGS__))\\\n                __attribute__((alias(__stringify(compat_SyS##name))));  \\\n        static inline long C_SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__));\\\n        asmlinkage long compat_SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__));\\\n        asmlinkage long compat_SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__))\\\n        {                                                               \\\n                return C_SYSC##name(__MAP(x,__SC_DELOUSE,__VA_ARGS__)); \\\n        }                                                               \\\n        static inline long C_SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))\n```\n\n* \u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u306f\u3001C_SYSC##name\u3068\u3044\u3046static\u95a2\u6570\u3068\u306a\u308b\u3002\u4f8b\u3048\u3070\u3001\u4eca\u56de\u306eioctl\u306e\u5834\u5408\u3001C_SYSCioctl\u3068\u3044\u3046\u95a2\u6570\u540d\u306b\u306a\u308b\u3002\n* \u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u3092\u76f4\u547c\u3073\u51fa\u3057\u3059\u308b\u306e\u3067\u306a\u304f\u3001compat_SyS##name\u3067\u5b9a\u7fa9\u3055\u308c\u308basmlinkage\u5c5e\u6027\u306e\u95a2\u6570\u7d4c\u7531\u3067\u547c\u3070\u308c\u308b\u3002\u4eca\u56de\u306e\u5834\u5408\u3001compat_SySioctl\u3068\u306a\u308b\u3002\n\n\u3075\u305f\u3064\u306f\u3042\u307e\u308a\u5909\u308f\u3089\u306a\u3044\u3088\u3046\u306b\u601d\u308f\u308c\u307e\u3059\u304c\u3001\u7b2c\u4e8c\u5f15\u6570\u306b\u7740\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```c:include/linux/syscalls.h\n// asmlinkage\u306e\u95a2\u6570(\u30ac\u30ef)\nasmlinkage long SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__))       \\\n// static\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u5b9f\u969b\u306e\u5b9f\u88c5\u5074\u306e\u547c\u51fa\nlong ret = SYSC##name(__MAP(x,__SC_CAST,__VA_ARGS__));  \\\n// \u5b9f\u969b\u306e\u5b9f\u88c5\u5074\u306e\u95a2\u6570\nstatic inline long SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))\n```\n\n```c:include/linux/compat.h\n// asmlinkage\u306e\u95a2\u6570(\u30ac\u30ef)\nasmlinkage long compat_SyS##name(__MAP(x,__SC_LONG,__VA_ARGS__));\\\n// static\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u5b9f\u969b\u306e\u5b9f\u88c5\u5074\u306e\u547c\u51fa\nreturn C_SYSC##name(__MAP(x,__SC_DELOUSE,__VA_ARGS__)); \\\n// \u5b9f\u969b\u306e\u5b9f\u88c5\u5074\u306e\u95a2\u6570\nstatic inline long C_SYSC##name(__MAP(x,__SC_DECL,__VA_ARGS__))\n```\n\n\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u672c\u4f53\u306b\u6e21\u3057\u3066\u3044\u308b\u7b2c\u4e8c\u5f15\u6570\u306b\u6307\u5b9a\u3057\u3066\u3044\u308b\\_\\_SC\\_CAST\u3068\\_\\_SC\\_DELOUSE\u306e\u9055\u3044\u3092\u898b\u308c\u3070\u826f\u3055\u3052\u3067\u3059\u306d\u3002\n\n```c:include/linux/syscalls.h\n#define __TYPE_IS_LL(t) (__same_type((t)0, 0LL) || __same_type((t)0, 0ULL))\n#define __SC_DECL(t, a) t a\n#define __SC_LONG(t, a) __typeof(__builtin_choose_expr(__TYPE_IS_LL(t), 0LL, 0L)) a\n#define __SC_CAST(t, a) (t) a\n```\n\n\\_\\_builtin\\_choose\\_expr\u306fGCC\u306e\u30d3\u30eb\u30c9\u30a4\u30f3\u95a2\u6570\u3067\u3001\u7b2c\u4e00\u5f15\u6570\u304c\u975e\u30bc\u30ed\u306a\u3089\u7b2c\u4e8c\u5f15\u6570\u3092\u8fd4\u3057\u305d\u3046\u3067\u306a\u3044\u306a\u3089\u7b2c\u4e09\u5f15\u6570\u3092\u8fd4\u3059\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u3055\u3066\u3001\\_\\_TYPE\\_IS\\_LL\u306f\u3001\u5f15\u6570\u306b\u6e21\u3055\u308c\u305f\u578b\u304cunsigned long long\u3082\u3057\u304f\u306flong long\u306e\u3044\u305a\u308c\u304b(\u8981\u3059\u308b\u306b64bit\u304b\u3069\u3046\u304b)\u3068\u7b49\u3057\u3044\u304b\u3092\u898b\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u305d\u3057\u3066\u3001\\_\\_TYPE\\_IS\\_LL\u306e\u7d50\u679c\u304c(unsigned) long long\u3067\u3042\u308c\u3070\u3001__SC_LONG\u30de\u30af\u30ed\u306f\u305d\u306e\u7b2c\u4e8c\u5f15\u6570\u306b\u6e21\u3055\u308c\u305f\u5909\u6570\u3092long long\u3067\u5ba3\u8a00\u3057\u307e\u3059\u3002\u305d\u3046\u3067\u306a\u3051\u308c\u3070long\u3067\u5ba3\u8a00\u3057\u307e\u3059\u3002\n\n\u53c2\u8003\u307e\u3067\u306b\\_\\_same\\_type\u3092\u8f09\u305b\u307e\u3059\u3002\n\n```c:include/linux/compiler.h\n#ifndef__same_type                                                       # define __same_type(a, b) __builtin_types_compatible_p(typeof(a), typeof(b))\n#endif\n```\n\n```c:include/linux/compat.h\n#ifndef __SC_DELOUSE\n#define __SC_DELOUSE(t,v) ((t)(unsigned long)(v))\n#endif\n```\n\n\u4e00\u65b9\u3067\u3001__SC_DELOUSE\u30de\u30af\u30ed\u306f\u7b2c\u4e8c\u5f15\u6570\u3067\u6e21\u3055\u308c\u305f\u5909\u6570\u3092\u5f37\u5236\u7684\u306bunsigned long\u3067\u30ad\u30e3\u30b9\u30c8\u3057\u307e\u3059\u3002\u3064\u307e\u308a\u5f37\u5236\u7684\u306b32bit\u5024\u306b\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u4e0a\u3067\u7d39\u4ecb\u3057\u305fGCC\u30d3\u30eb\u30c9\u30a4\u30f3\u95a2\u6570\u306f[\u3053\u3053](http://gcc.gnu.org/onlinedocs/gcc-4.1.2/gcc/Other-Builtins.html)\u306b\u8f09\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3064\u307e\u308a\u3001\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\n* \u666e\u901a\u306e\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306f\u6e21\u3055\u308c\u305f\u5f15\u6570\u304c32bit\u5024\u304b64bit\u5024\u304b\u3092\u898b\u3066\u9069\u5207\u306b\u5ba3\u8a00\u3057\u3066\u304f\u308c\u308b\u3002(64bit\u5024\u5bfe\u5fdc\u7248\u3068\u3044\u3048\u305d\u3046)\n* compat\u306a\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306f\u3001\u3044\u304b\u306a\u308b\u5834\u5408\u3082\u5f37\u5236\u7684\u306b\u5f15\u6570\u304c32bit\u306b\u5207\u308a\u6368\u3066\u3089\u308c\u305f\u5f8c\u3001\u6307\u5b9a\u306e\u578b\u306b\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u308b\u3002\n\n\u53c2\u8003\u307e\u3067\u306b\u3001\\_\\_MAP(x,\\_\\_SC\\_LONG,\\_\\_VA\\_ARGS\\_\\_)\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n```c:include/linux/syscalls.h\n#define __MAP0(m,...)\n#define __MAP1(m,t,a) m(t,a)\n#define __MAP2(m,t,a,...) m(t,a), __MAP1(m,__VA_ARGS__)\n#define __MAP3(m,t,a,...) m(t,a), __MAP2(m,__VA_ARGS__)\n/* \u7565 */\n#define __MAP(n,...) __MAP##n(__VA_ARGS__)\n```\n\n\u3088\u3063\u3066\u3001\u30de\u30af\u30ed\u306e\u5c55\u958b\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n-> \\_\\_MAP(3,\\_\\_SC\\_LONG,systype1,sysarg1,systype2,sysarg2,systype3,sysarg3) \n\u203b\\_\\_VA\\_ARGS\\_\\_\u306f\u30de\u30af\u30ed\u306b\u6e21\u3055\u308c\u305f\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u5f15\u6570\n-> \\_\\_MAP3(\\_\\_SC\\_LONG,systype1,sysarg1,systype2,sysarg2,systype3,sysarg3)\n-> \\_\\_SC\\_LONG(systype1,sysarg1) , \\_\\_MAP2(systype2,sysarg2,systype3,sysarg3)\n-> \\_\\_SC\\_LONG(systype1,sysarg1) ,\\_\\_SC\\_LONG(systype2,sysarg2) ,\\_\\_MAP1(systype3,sysarg3)\n->\\_\\_SC\\_LONG(systype1,sysarg1) ,\\_\\_SC\\_LONG(systype2,sysarg2),\\_\\_SC\\_LONG(systype3,sysarg3)\n\n## \u3067\u306f\u3001\u8ab0\u304ccompat\u3068\u305d\u3046\u3067\u306a\u3044\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u547c\u3073\u5206\u3051\u3092\u3059\u308b\u306e\u304b\n\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001libc\u306e\u3088\u3046\u3067\u3059\u3002\nx86\u306e\u5834\u5408\u3001\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u30c6\u30fc\u30d6\u30eb\u306f\u4ee5\u4e0b\u306e\u30bd\u30fc\u30b9\u5185\u306b\u3042\u308a\u307e\u3059\u3002\n\n```c:arch/x86/kernel/syscall_64.c\n/* \u7565 */\n#ifdef CONFIG_X86_X32_ABI\n# define __SYSCALL_X32(nr, sym, compat) __SYSCALL_64(nr, sym, compat)\n#else\n# define __SYSCALL_X32(nr, sym, compat) /* nothing */\n#endif\n\n#define __SYSCALL_64(nr, sym, compat) extern asmlinkage void sym(void) ;\n#include <asm/syscalls_64.h>\n#undef __SYSCALL_64\n\n#define __SYSCALL_64(nr, sym, compat) [nr] = sym,\n\nextern void sys_ni_syscall(void);\n\nasmlinkage const sys_call_ptr_t sys_call_table[__NR_syscall_max+1] = {\n        /*\n         * Smells like a compiler bug -- it doesn't work\n         * when the & below is removed.\n         */\n        [0 ... __NR_syscall_max] = &sys_ni_syscall,\n#include <asm/syscalls_64.h>\n};                    \n```\n\n```c:arch/x86/kernel/syscall_32.c\n/* \u7565 */\n#define __SYSCALL_I386(nr, sym, compat) extern asmlinkage void sym(void) ;\n#include <asm/syscalls_32.h>\n#undef __SYSCALL_I386\n\n#define __SYSCALL_I386(nr, sym, compat) [nr] = sym,\n/* \u7565 */      \n__visible const sys_call_ptr_t sys_call_table[__NR_syscall_max+1] = {\n        /*\n         * Smells like a compiler bug -- it doesn't work\n         * when the & below is removed.\n         */\n       [0 ... __NR_syscall_max] = &sys_ni_syscall,\n#include <asm/syscalls_32.h>\n};\n```\n\nsys_call_table\u306e\u5404\u8981\u7d20\u306e\u521d\u671f\u5024\u306f\u300csys_ni_syscall\u300d\u3067\u3059\u3002\u3053\u308c\u306f-ENOSYS\u3060\u3051\u3092\u8fd4\u3059\u95a2\u6570\u3067\u300c\u5b58\u5728\u3057\u306a\u3044\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u756a\u53f7\u3092\u6307\u5b9a\u3057\u305f\u300d\u4e8b\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\n\u305d\u308c\u3067\u306f\u3001\u8ab0\u304c\u5b58\u5728\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u30a8\u30f3\u30c8\u30ea\u3092sys_call_table\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u305d\u306e\u9375\u306f\u4e0a\u3067\u5f15\u7528\u3057\u305f\u30bd\u30fc\u30b9\u5185\u306easm/syscalls_64.h\u3082\u3057\u304f\u306fasm/syscalls_32.h\u306b\u3042\u308a\u305d\u3046\u3067\u3059\u3002\u3057\u304b\u3057\u3001arch/x86/include/asm\u306e\u4e0b\u306b\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u5b9f\u306f\u3001\u30ab\u30fc\u30cd\u30eb\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001arch/x86/include/generated\u304c\u751f\u6210\u3055\u308c\u3001\u305d\u306e\u4e0b\u306bsyscalls_64.h\u3082\u3057\u304f\u306fsyscalls_32.h\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n(\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u77e5\u308a\u305f\u3044\u65b9\u306farch/x86/syscalls\u306e\u4e0b\u3092\u307f\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u3002)\n\n\u3055\u3066\u3001ioctl\u306b\u9650\u5b9a\u3057\u3066\u3001syscalls_64.h\u3068syscalls_32.h\u3092\u898b\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```c:arch/x86/include/generated/asm/syscalls_64.h\n/* \u7565 */\n__SYSCALL_64(16, sys_ioctl, sys_ioctl)                 \n/* \u7565 */\n__SYSCALL_X32(514, compat_sys_ioctl, compat_sys_ioctl)                 \n/* \u7565 */\n```\n\n64bit\u7248\u3067\u306f\u3001CONFIG_X86_X32_ABI\u304c\u6709\u52b9\u306a\u5834\u5408\u3001__SYSCALL_X32\u3067\u6307\u5b9a\u3055\u308c\u305fcompat\u304c\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u307e\u3067\u306e\u8a71\u304b\u3089\u3001sys_ioctl\u3068compat_sys_ioctl\u306f\u5225\u7269\u306e\u72ec\u7acb\u3057\u305f\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3067\u3059\u3002\n\n```c:arch/x86/include/generated/asm/syscalls_32.h\n/* \u7565 */\n__SYSCALL_I386(54, sys_ioctl, compat_sys_ioctl)           \n/* \u7565 */\n```\n\n\u4e00\u65b9\u300132bit\u7248\u3067\u306f\u3001ioctl\u306f\u5e38\u306bsys_ioctl\u304c\u4f7f\u308f\u308c\u307e\u3059\u3002compat\u306f\u4f7f\u308f\u308c\u307e\u305b\u3093\u3002\n\n\u3061\u306a\u307f\u306b\u3001sys_call_table\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u30a2\u30bb\u30f3\u30d6\u30e9\u306e\u30b3\u30fc\u30c9\u304b\u3089\u6271\u3046\u305f\u3081\u3001\u8a72\u5f53\u30b3\u30fc\u30c9\u304b\u3089\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\u304c\u547c\u3070\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n```arch/x86/kernel/entry_32.S\nsysenter_do_call:\n        cmpl $(NR_syscalls), %eax \n        jae sysenter_badsys\n        call *sys_call_table(,%eax,4)                                           \n        movl %eax,PT_EAX(%esp)\n```\n(entry_64.S\u3082\u3042\u308a\u307e\u3059\u3002\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u305c\u3072\u3002)\n\n## \u307e\u3068\u3081\n\n\u3053\u3053\u307e\u3067\u8ff0\u3079\u305f\u3053\u3068\u304b\u3089\u3001\u5148\u306b\u5f15\u7528\u3057\u305f\n\n>  unlocked_ioctl: called by the ioctl(2) system call.\n>\n>  compat_ioctl: called by the ioctl(2) system call when 32 bit system calls                               \n         are used on 64 bit kernels.\n\n\u3082\u5177\u4f53\u7684\u306b\u30a4\u30e1\u30fc\u30b8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nunlocked_ioctl\u306f\u3001\u901a\u5e38\u306eioctl\u5b9f\u88c5\u3067\u3001compat_ioctl\u306fCONFIG_X86_X32_ABI\u3092\u6709\u52b9\u306b\u3057\u3066\u30d3\u30eb\u30c9\u3057\u305f64bit\u30ab\u30fc\u30cd\u30eb\u306b\u5bfe\u3057\u306632bit\u7248\u306eioctl\u3092\u547c\u3073\u51fa\u3057\u305f\u3068\u304d(\u4f8b\u3048\u307032bit\u7248\u306e\u30a2\u30d7\u30ea\u304b\u3089ioctl\u3092\u53e9\u3044\u305f\u3068\u304d)\u306b\u547c\u3070\u308c\u308bioctl\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u305d\u308c\u3067\u306f\u3002\n", "tags": ["Linux", "driver", "kernel"]}