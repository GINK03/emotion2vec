{"context": " More than 1 year has passed since last update.\n\nO'Reilly \u51fa\u7248 Ben Fry \u8457\uff08\u548c\u8a33\u7248\uff09\u300e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b8\u30f3\u30b0\u30fb\u30c7\u30fc\u30bf\u300f   Chap.3  \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u89e3\u8aad\u3057\u3066\u3001\u5b9f\u884c\u3057\u3066\u307f\u308b\u3000\n\n\n\u3010 O'Reilly \u672c \u30b5\u30dd\u30fc\u30c8\u30da\u30fc\u30b8\u304b\u3089\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u53d6\u5f97 \u3011\n\n \uff08\u30ea\u30f3\u30af\u5148\uff09\u82f1\u8a9e\u539f\u8457\u8005 Ben Fry \u6c0f\u306e\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \n\n\n\n\uff08 Chapter.3 \u306e\u8d64\u6587\u5b57\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 Zip. \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff09\n\n\nZip. \u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\u3068\u4ee5\u4e0b\u306e\u753b\u9762\u306b\u306a\u308b\n\nch03-usmap \u30d5\u30a9\u30eb\u30c0\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u958b\u304f\n\n\nstep01_fig1_red_dots \u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f\n\n\npde \u30d5\u30a1\u30a4\u30eb\u304c2\u672c \u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\n\n\u3055\u3089\u306b\u3001 data \u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f\n\n\ntsv \u30d5\u30a1\u30a4\u30eb\u3000\u3068 png \u30d5\u30a1\u30a4\u30eb\u304c\u3000\uff11\u3064\u305a\u3064\u3042\u308b\n\n\n\u81ea\u5206\u306e PC \uff08\u30ed\u30fc\u30ab\u30eb PC \uff09\u306e\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306b\u3001 Chap.3-1 \u30d5\u30a9\u30eb\u30c0\u3092\u3064\u304f\u308b\uff08\u4e2d\u8eab\u306f\u30ab\u30e9\u306b\u3059\u308b\uff09\n\nstep01_fig1_red_dots \u306b\u623b\u308a\u3001\u3053\u306e\u30d5\u30a9\u30eb\u30c0\u5168\u4f53\u3092\u3001\u81ea\u5206\u306e PC \uff08\u30ed\u30fc\u30ab\u30eb PC \uff09\u306e\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306b\u4f5c\u6210\u3057\u305f Chap.3-1 \u30d5\u30a9\u30eb\u30c0\u306b\u30de\u30a6\u30b9\u3067\u30c9\u30e9\u30c3\u30b0\u3059\u308b\n\n\nChap.3-1 \u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f\n\n\nstep01_fig1_red_dots \u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f\n\npde \u30d5\u30a1\u30a4\u30eb\u304c\u914d\u7f6e\u3055\u308c\u305f\u30d5\u30a9\u30eb\u30c0\u306e\u76f4\u4e0b\u306b\u3001 data \u30d5\u30a9\u30eb\u30c0\u304c\u7f6e\u304b\u308c\u3066\u3044\u308b\n\n\u203b data \u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u914d\u7f6e\u3055\u308c\u305f \u7c73\u56fd\u5730\u56f3\u306e png \u30d5\u30a1\u30a4\u30eb \u3068 \u5404\u5dde\u306e\u4e2d\u5fc3\u5ea7\u6a19\uff08\u7def\u5ea6 / \u7d4c\u5ea6\uff09\u3092\u8a18\u8ff0\u3057\u305f tsv \u30d5\u30a1\u30a4\u30eb\u3092\u3001 pde \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3066\u5b9f\u884c\u3067\u304d\u308b\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\uff08\u8cc7\u6e90\u914d\u7f6e\uff09\u306b\u306a\u3063\u3066\u3044\u308b\n\n\nstep01_fig1_red_dots.pde \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 Processing \u30b3\u30fc\u30c9\u7de8\u96c6\u753b\u9762 (pde ) \u3092\u8d77\u52d5\u3059\u308b\n\n\n\u3010 \u30b3\u30fc\u30c9 \u3011 \u203b \u30b3\u30fc\u30c9\u306e\u89e3\u8aac\u306f\u3001\u8ffd\u3063\u3066\u8a18\u8f09\u3057\u307e\u3059\n\n Processing\nPImage mapImage;\nTable locationTable;\nint rowCount;\n\nvoid setup() {\n  size(640, 400);\n  mapImage = loadImage(\"map.png\");\n  // Make a data table from a file that contains \n  // the coordinates of each state.\n  locationTable = new Table(\"locations.tsv\");\n  // The row count will be used a lot, store it locally.\n  rowCount = locationTable.getRowCount();\n}\n\nvoid draw() {\n  background(255);\n  image(mapImage, 0, 0);\n\n  // Drawing attributes for the ellipses   \n  smooth();\n  fill(192, 0, 0);\n  noStroke();\n\n  // Loop through the rows of the locations file and draw the points  \n  for (int row = 0; row < rowCount; row++) {\n    float x = locationTable.getFloat(row, 1);  // column 1\n    float y = locationTable.getFloat(row, 2);  // column 2\n    ellipse(x, y, 9, 9);\n  }\n}\n\n\n\n\u753b\u9762\u4e0a\u306e Table \u30bf\u30d6\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u5225\u306e\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u308b\n\n\u203b \u30c9\u30e9\u30c3\u30b0\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u3042\u308b Table.pde \u3092\u76f4\u63a5 \u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u3066\u8d77\u52d5\u3055\u305b\u3066\u3082\u3001\u540c\u3058\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u308b\n\n\n Processing\nclass Table {\n  int rowCount;\n  String[][] data;\n\n\n  Table(String filename) {\n    String[] rows = loadStrings(filename);\n    data = new String[rows.length][];\n\n    for (int i = 0; i < rows.length; i++) {\n      if (trim(rows[i]).length() == 0) {\n        continue; // skip empty rows\n      }\n      if (rows[i].startsWith(\"#\")) {\n        continue;  // skip comment lines\n      }\n\n      // split the row on the tabs\n      String[] pieces = split(rows[i], TAB);\n      // copy to the table array\n      data[rowCount] = pieces;\n      rowCount++;\n\n      // this could be done in one fell swoop via:\n      //data[rowCount++] = split(rows[i], TAB);\n    }\n    // resize the 'data' array as necessary\n    data = (String[][]) subset(data, 0, rowCount);\n  }\n\n\n  int getRowCount() {\n    return rowCount;\n  }\n\n\n  // find a row by its name, returns -1 if no row found\n  int getRowIndex(String name) {\n    for (int i = 0; i < rowCount; i++) {\n      if (data[i][0].equals(name)) {\n        return i;\n      }\n    }\n    println(\"No row named '\" + name + \"' was found\");\n    return -1;\n  }\n\n\n  String getRowName(int row) {\n    return getString(row, 0);\n  }\n\n\n  String getString(int rowIndex, int column) {\n    return data[rowIndex][column];\n  }\n\n\n  String getString(String rowName, int column) {\n    return getString(getRowIndex(rowName), column);\n  }\n\n\n  int getInt(String rowName, int column) {\n    return parseInt(getString(rowName, column));\n  }\n\n\n  int getInt(int rowIndex, int column) {\n    return parseInt(getString(rowIndex, column));\n  }\n\n\n  float getFloat(String rowName, int column) {\n    return parseFloat(getString(rowName, column));\n  }\n\n\n  float getFloat(int rowIndex, int column) {\n    return parseFloat(getString(rowIndex, column));\n  }\n\n\n  void setRowName(int row, String what) {\n    data[row][0] = what;\n  }\n\n\n  void setString(int rowIndex, int column, String what) {\n    data[rowIndex][column] = what;\n  }\n\n\n  void setString(String rowName, int column, String what) {\n    int rowIndex = getRowIndex(rowName);\n    data[rowIndex][column] = what;\n  }\n\n\n  void setInt(int rowIndex, int column, int what) {\n    data[rowIndex][column] = str(what);\n  }\n\n\n  void setInt(String rowName, int column, int what) {\n    int rowIndex = getRowIndex(rowName);\n    data[rowIndex][column] = str(what);\n  }\n\n\n  void setFloat(int rowIndex, int column, float what) {\n    data[rowIndex][column] = str(what);\n  }\n\n\n  void setFloat(String rowName, int column, float what) {\n    int rowIndex = getRowIndex(rowName);\n    data[rowIndex][column] = str(what);\n  }  \n}\n\n\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30c9\u30e9\u30c3\u30b0\u3057\u305f data \u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u7f6e\u304b\u308c\u305f\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u51e6\u7406\u3092\u53d7\u3051\u6301\u3063\u3066\u3044\u308b\n\n\n\n\ndata\u30d5\u30a1\u30a4\u30eb\uff08\u30d5\u30a1\u30a4\u30eb\u540d\uff1alocations.tsv\nAL  439 270\nAK  94  325\nAZ  148 241\nAR  368 247\nCA  56  176\nCO  220 183\nCT  576 120\nDE  556 166\nFL  510 331\nGA  478 267\nHI  232 380\nID  143 101\nIL  405 168\nIN  437 165\nIA  357 147\nKS  302 194\nKY  453 203\nLA  371 302\nME  595 59\nMD  538 162\nMA  581 108\nMI  446 120\nMN  339 86\nMS  406 274\nMO  365 197\nMT  194 61\nNE  286 151\nNV  102 157\nNH  580 89\nNJ  561 143\nNM  208 245\nNY  541 107\nNC  519 221\nND  283 65\nOH  472 160\nOK  309 239\nOR  74  86\nPA  523 144\nRI  589 117\nSC  506 251\nSD  286 109\nTN  441 229\nTX  291 299\nUT  154 171\nVT  567 86\nVA  529 189\nWA  92  38\nWV  496 178\nWI  392 103\nWY  207 125\n\n\n\n\u753b\u9762\u4e0a\u90e8\u306e\u4e09\u89d2\u306e\u5b9f\u884c\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\n\n\n\u5168\u7c73\u306e\u5730\u56f3\u304c\u3001\u5404\u5dde\u306e\u4e2d\u5fc3\u5ea7\u6a19\u306e\u4f4d\u7f6e\u306b\u8d64\u70b9\u306e\u8868\u793a\u3092\u4f34\u3063\u3066\u8868\u793a\u3055\u308c\u305f\n\n## _O'Reilly_ \u51fa\u7248 _Ben Fry_ \u8457\uff08\u548c\u8a33\u7248\uff09\u300e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b8\u30f3\u30b0\u30fb\u30c7\u30fc\u30bf\u300f   _Chap.3_  \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u89e3\u8aad\u3057\u3066\u3001\u5b9f\u884c\u3057\u3066\u307f\u308b\u3000\n\n![book.gif](https://qiita-image-store.s3.amazonaws.com/0/43487/824876f0-53db-7a1a-849d-0148f53b7c4c.gif)\n\n###\u3010 _O'Reilly_ \u672c \u30b5\u30dd\u30fc\u30c8\u30da\u30fc\u30b8\u304b\u3089\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u53d6\u5f97 \u3011\n### [ \uff08\u30ea\u30f3\u30af\u5148\uff09\u82f1\u8a9e\u539f\u8457\u8005 _Ben Fry_ \u6c0f\u306e\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 ](http://benfry.com/writing/archives/category/examples)\n![ref.1.png](https://qiita-image-store.s3.amazonaws.com/0/43487/7fb65bfa-8e7f-67ca-da61-1d5368f3733d.png)\n\n#### \uff08 _Chapter.3_ \u306e\u8d64\u6587\u5b57\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 _Zip._ \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff09\n![ref.2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/b28f2979-9aba-5490-c933-1ab437c59030.png)\n\n#### _Zip._ \u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\u3068\u4ee5\u4e0b\u306e\u753b\u9762\u306b\u306a\u308b\n#### _ch03-usmap_ \u30d5\u30a9\u30eb\u30c0\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u958b\u304f\n![\uff11.png](https://qiita-image-store.s3.amazonaws.com/0/43487/ab8ed4b5-8d71-c41d-86a8-fa5c38948793.png)\n\n#### _step01_fig1_red_dots_ \u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f\n![2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/3d0cf312-92e1-4b97-6863-589679e5f670.png)\n\n#### _pde_ \u30d5\u30a1\u30a4\u30eb\u304c2\u672c \u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\n#### \u3055\u3089\u306b\u3001 _data_ \u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f \n![3.png](https://qiita-image-store.s3.amazonaws.com/0/43487/1212799c-175e-b04e-d64c-bb4d606d83ad.png)\n\n#### _tsv_ \u30d5\u30a1\u30a4\u30eb\u3000\u3068 _png_ \u30d5\u30a1\u30a4\u30eb\u304c\u3000\uff11\u3064\u305a\u3064\u3042\u308b\n![4.png](https://qiita-image-store.s3.amazonaws.com/0/43487/faeb8689-beda-6100-acf6-746c5e64ec35.png)\n\n#### \u81ea\u5206\u306e _PC_ \uff08\u30ed\u30fc\u30ab\u30eb _PC_ \uff09\u306e\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306b\u3001 _Chap.3-1_ \u30d5\u30a9\u30eb\u30c0\u3092\u3064\u304f\u308b\uff08\u4e2d\u8eab\u306f\u30ab\u30e9\u306b\u3059\u308b\uff09\n\n#### _step01_fig1_red_dots_ \u306b\u623b\u308a\u3001\u3053\u306e\u30d5\u30a9\u30eb\u30c0\u5168\u4f53\u3092\u3001\u81ea\u5206\u306e _PC_ \uff08\u30ed\u30fc\u30ab\u30eb _PC_ \uff09\u306e\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306b\u4f5c\u6210\u3057\u305f _Chap.3-1_ \u30d5\u30a9\u30eb\u30c0\u306b\u30de\u30a6\u30b9\u3067\u30c9\u30e9\u30c3\u30b0\u3059\u308b\n![4.5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/8eca3f52-0467-80cb-b86b-47b320ccb2dc.png)\n\n#### _Chap.3-1_ \u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f\n![4.6.png](https://qiita-image-store.s3.amazonaws.com/0/43487/425730f0-fe4c-ff88-f8d1-778c5a8effd8.png)\n\n#### _step01_fig1_red_dots_ \u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f\n# _pde_ \u30d5\u30a1\u30a4\u30eb\u304c\u914d\u7f6e\u3055\u308c\u305f\u30d5\u30a9\u30eb\u30c0\u306e\u76f4\u4e0b\u306b\u3001 _data_ \u30d5\u30a9\u30eb\u30c0\u304c\u7f6e\u304b\u308c\u3066\u3044\u308b\n### \u203b _data_ \u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u914d\u7f6e\u3055\u308c\u305f \u7c73\u56fd\u5730\u56f3\u306e _png_ \u30d5\u30a1\u30a4\u30eb \u3068 \u5404\u5dde\u306e\u4e2d\u5fc3\u5ea7\u6a19\uff08\u7def\u5ea6 / \u7d4c\u5ea6\uff09\u3092\u8a18\u8ff0\u3057\u305f _tsv_ \u30d5\u30a1\u30a4\u30eb\u3092\u3001 _pde_ \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3066\u5b9f\u884c\u3067\u304d\u308b\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\uff08\u8cc7\u6e90\u914d\u7f6e\uff09\u306b\u306a\u3063\u3066\u3044\u308b\n![4.7.png](https://qiita-image-store.s3.amazonaws.com/0/43487/ff0842ea-dc59-4e02-cdb6-e6a2832ff82c.png)\n\n#### _step01_fig1_red_dots.pde_ \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 _Processing_ \u30b3\u30fc\u30c9\u7de8\u96c6\u753b\u9762 (_pde_ ) \u3092\u8d77\u52d5\u3059\u308b\n![5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/23567f71-ffea-6508-f9b8-dc1c298af39f.png)\n\n# \u3010 \u30b3\u30fc\u30c9 \u3011 \u203b \u30b3\u30fc\u30c9\u306e\u89e3\u8aac\u306f\u3001\u8ffd\u3063\u3066\u8a18\u8f09\u3057\u307e\u3059\n```{Processing: Processing}\nPImage mapImage;\nTable locationTable;\nint rowCount;\n\nvoid setup() {\n  size(640, 400);\n  mapImage = loadImage(\"map.png\");\n  // Make a data table from a file that contains \n  // the coordinates of each state.\n  locationTable = new Table(\"locations.tsv\");\n  // The row count will be used a lot, store it locally.\n  rowCount = locationTable.getRowCount();\n}\n\nvoid draw() {\n  background(255);\n  image(mapImage, 0, 0);\n\n  // Drawing attributes for the ellipses   \n  smooth();\n  fill(192, 0, 0);\n  noStroke();\n\n  // Loop through the rows of the locations file and draw the points  \n  for (int row = 0; row < rowCount; row++) {\n    float x = locationTable.getFloat(row, 1);  // column 1\n    float y = locationTable.getFloat(row, 2);  // column 2\n    ellipse(x, y, 9, 9);\n  }\n}\n```\n\n### \u753b\u9762\u4e0a\u306e _Table_ \u30bf\u30d6\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u5225\u306e\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u308b\n### \u203b \u30c9\u30e9\u30c3\u30b0\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u3042\u308b _Table.pde_ \u3092\u76f4\u63a5 \u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u3066\u8d77\u52d5\u3055\u305b\u3066\u3082\u3001\u540c\u3058\u30b3\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u308b\n![5.5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/4b69818e-59ee-b623-c29b-920d523f6abb.png)\n\n```{Processing: Processing}\nclass Table {\n  int rowCount;\n  String[][] data;\n  \n  \n  Table(String filename) {\n    String[] rows = loadStrings(filename);\n    data = new String[rows.length][];\n    \n    for (int i = 0; i < rows.length; i++) {\n      if (trim(rows[i]).length() == 0) {\n        continue; // skip empty rows\n      }\n      if (rows[i].startsWith(\"#\")) {\n        continue;  // skip comment lines\n      }\n      \n      // split the row on the tabs\n      String[] pieces = split(rows[i], TAB);\n      // copy to the table array\n      data[rowCount] = pieces;\n      rowCount++;\n      \n      // this could be done in one fell swoop via:\n      //data[rowCount++] = split(rows[i], TAB);\n    }\n    // resize the 'data' array as necessary\n    data = (String[][]) subset(data, 0, rowCount);\n  }\n  \n  \n  int getRowCount() {\n    return rowCount;\n  }\n  \n  \n  // find a row by its name, returns -1 if no row found\n  int getRowIndex(String name) {\n    for (int i = 0; i < rowCount; i++) {\n      if (data[i][0].equals(name)) {\n        return i;\n      }\n    }\n    println(\"No row named '\" + name + \"' was found\");\n    return -1;\n  }\n  \n  \n  String getRowName(int row) {\n    return getString(row, 0);\n  }\n\n\n  String getString(int rowIndex, int column) {\n    return data[rowIndex][column];\n  }\n\n  \n  String getString(String rowName, int column) {\n    return getString(getRowIndex(rowName), column);\n  }\n\n  \n  int getInt(String rowName, int column) {\n    return parseInt(getString(rowName, column));\n  }\n\n  \n  int getInt(int rowIndex, int column) {\n    return parseInt(getString(rowIndex, column));\n  }\n\n  \n  float getFloat(String rowName, int column) {\n    return parseFloat(getString(rowName, column));\n  }\n\n  \n  float getFloat(int rowIndex, int column) {\n    return parseFloat(getString(rowIndex, column));\n  }\n  \n  \n  void setRowName(int row, String what) {\n    data[row][0] = what;\n  }\n\n\n  void setString(int rowIndex, int column, String what) {\n    data[rowIndex][column] = what;\n  }\n\n  \n  void setString(String rowName, int column, String what) {\n    int rowIndex = getRowIndex(rowName);\n    data[rowIndex][column] = what;\n  }\n\n  \n  void setInt(int rowIndex, int column, int what) {\n    data[rowIndex][column] = str(what);\n  }\n\n  \n  void setInt(String rowName, int column, int what) {\n    int rowIndex = getRowIndex(rowName);\n    data[rowIndex][column] = str(what);\n  }\n\n  \n  void setFloat(int rowIndex, int column, float what) {\n    data[rowIndex][column] = str(what);\n  }\n\n\n  void setFloat(String rowName, int column, float what) {\n    int rowIndex = getRowIndex(rowName);\n    data[rowIndex][column] = str(what);\n  }  \n}\n```\n\n# \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30c9\u30e9\u30c3\u30b0\u3057\u305f _data_ \u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u7f6e\u304b\u308c\u305f\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u51e6\u7406\u3092\u53d7\u3051\u6301\u3063\u3066\u3044\u308b\n\n![add.1.png](https://qiita-image-store.s3.amazonaws.com/0/43487/cf7072b8-5af3-706e-c797-9ec0f46766b4.png)\n\n![add.2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/6db3d37f-006f-f824-4c73-260010f11390.png)\n\n![add.3.png](https://qiita-image-store.s3.amazonaws.com/0/43487/de2b90fe-80af-bd89-d5d1-6c0c76091152.png)\n\n```{data:data\u30d5\u30a1\u30a4\u30eb\uff08\u30d5\u30a1\u30a4\u30eb\u540d\uff1alocations.tsv}\nAL\t439\t270\nAK\t94\t325\nAZ\t148\t241\nAR\t368\t247\nCA\t56\t176\nCO\t220\t183\nCT\t576\t120\nDE\t556\t166\nFL\t510\t331\nGA\t478\t267\nHI\t232\t380\nID\t143\t101\nIL\t405\t168\nIN\t437\t165\nIA\t357\t147\nKS\t302\t194\nKY\t453\t203\nLA\t371\t302\nME\t595\t59\nMD\t538\t162\nMA\t581\t108\nMI\t446\t120\nMN\t339\t86\nMS\t406\t274\nMO\t365\t197\nMT\t194\t61\nNE\t286\t151\nNV\t102\t157\nNH\t580\t89\nNJ\t561\t143\nNM\t208\t245\nNY\t541\t107\nNC\t519\t221\nND\t283\t65\nOH\t472\t160\nOK\t309\t239\nOR\t74\t86\nPA\t523\t144\nRI\t589\t117\nSC\t506\t251\nSD\t286\t109\nTN\t441\t229\nTX\t291\t299\nUT\t154\t171\nVT\t567\t86\nVA\t529\t189\nWA\t92\t38\nWV\t496\t178\nWI\t392\t103\nWY\t207\t125\n```\n\n# \u753b\u9762\u4e0a\u90e8\u306e\u4e09\u89d2\u306e\u5b9f\u884c\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\n![add.4.png](https://qiita-image-store.s3.amazonaws.com/0/43487/553d8395-c978-e3d3-e73a-3fb19fa3ae8a.png)\n\n# \u5168\u7c73\u306e\u5730\u56f3\u304c\u3001\u5404\u5dde\u306e\u4e2d\u5fc3\u5ea7\u6a19\u306e\u4f4d\u7f6e\u306b\u8d64\u70b9\u306e\u8868\u793a\u3092\u4f34\u3063\u3066\u8868\u793a\u3055\u308c\u305f\n\n![6.png](https://qiita-image-store.s3.amazonaws.com/0/43487/f1956646-2ada-a882-50b0-a9145a08ad23.png)\n", "tags": ["processing", "Processing2", "DataVisualization", "\u30c7\u30fc\u30bf\u53ef\u8996\u5316", "\u30c7\u30fc\u30bf\u8996\u899a\u5316"]}