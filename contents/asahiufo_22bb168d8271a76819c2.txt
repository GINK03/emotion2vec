{"tags": ["Git", "ShellScript", "sh", "Trac1.0.ja1"], "context": " More than 1 year has passed since last update.\n\n\u524d\u63d0\nTrac \u306e\u30d7\u30e9\u30b0\u30a4\u30f3 CommitTicketReferenceMacro\u3001CommitTicketUpdater \u3092\u6709\u52b9\u306b\u3057\u3066\u304a\u304f\u3002\n\nGit \u306e\u30d5\u30c3\u30af\u30b9\u30af\u30ea\u30d7\u30c8\n\npost-receive\n#!/bin/sh\n#\n# An example hook script for the \"post-receive\" event.\n#\n# The \"post-receive\" script is run after receive-pack has accepted a pack\n# and the repository has been updated.  It is passed arguments in through\n# stdin in the form\n#  <oldrev> <newrev> <refname>\n# For example:\n#  aa453216d1b3e49e7f6f98441fa56946ddcd6a20 68f7abf4e6f922807889f52bc043ecd31b79f814 refs/heads/master\n#\n# see contrib/hooks/ for a sample, or uncomment the next line and\n# rename the file to \"post-receive\".\n\n#. /usr/local/share/git-core/contrib/hooks/post-receive-email\n\nGIT_APP=\"/usr/local/bin/git\"\nTRAC_ADMIN=\"/usr/local/bin/trac-admin\"\nTRAC_ENV=\"\u3010Trac\u306eenv\u3078\u306e\u30d1\u30b9\u3011\"\nREPO_NAME=\"\u3010Trac\u306b\u767b\u9332\u3057\u305fGIT\u30ea\u30dd\u30b8\u30c8\u30ea\u540d\u3011\"\nLOG=\"/dev/null\"\n\nwhile read oldrev newrev refname; do\n\n    echo \"oldrev=${oldrev}, newrev=${newrev}, refname=${refname}\" >> \"${LOG}\"\n\n    from_rev=`git log -n 1 --reverse --pretty=format:%h ${oldrev}`\n    to_rev=`git log -n 1 --reverse --pretty=format:%h ${newrev}`\n\n    echo \"from_rev=${from_rev}, to_rev=${to_rev}\" >> \"${LOG}\"\n\n    added_flag=\"0\"\n    for rev in `${GIT_APP} log --reverse --pretty=format:%h`; do\n\n        if [ \"${added_flag}\" = \"1\" -o \"${from_rev}\" = \"\" ]; then\n            echo \"rev=${rev}\" >> \"${LOG}\"\n            ${TRAC_ADMIN} \"${TRAC_ENV}\" changeset added \"${REPO_NAME}\" \"${rev}\"\n        elif [ \"${from_rev}\" = \"${rev}\" ]; then\n            added_flag=\"1\"\n        fi\n    done\ndone\n\n${TRAC_ADMIN} \"${TRAC_ENV}\" repository resync \"${REPO_NAME}\"\n\n\n\n\u5fc3\u914d\u4e8b\n\u30d6\u30e9\u30f3\u30c1\u3092\u30de\u30fc\u30b8\u3057\u305f\u5f8c push \u3059\u308b\u3068\u3001\u30c1\u30b1\u30c3\u30c8\u304c\u30b3\u30e1\u30f3\u30c8\u3060\u3089\u3051\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u304b\u3082\uff1f\n# \u524d\u63d0\nTrac \u306e\u30d7\u30e9\u30b0\u30a4\u30f3 CommitTicketReferenceMacro\u3001CommitTicketUpdater \u3092\u6709\u52b9\u306b\u3057\u3066\u304a\u304f\u3002\n\n# Git \u306e\u30d5\u30c3\u30af\u30b9\u30af\u30ea\u30d7\u30c8\n```sh:post-receive\n#!/bin/sh\n#\n# An example hook script for the \"post-receive\" event.\n#\n# The \"post-receive\" script is run after receive-pack has accepted a pack\n# and the repository has been updated.  It is passed arguments in through\n# stdin in the form\n#  <oldrev> <newrev> <refname>\n# For example:\n#  aa453216d1b3e49e7f6f98441fa56946ddcd6a20 68f7abf4e6f922807889f52bc043ecd31b79f814 refs/heads/master\n#\n# see contrib/hooks/ for a sample, or uncomment the next line and\n# rename the file to \"post-receive\".\n\n#. /usr/local/share/git-core/contrib/hooks/post-receive-email\n\nGIT_APP=\"/usr/local/bin/git\"\nTRAC_ADMIN=\"/usr/local/bin/trac-admin\"\nTRAC_ENV=\"\u3010Trac\u306eenv\u3078\u306e\u30d1\u30b9\u3011\"\nREPO_NAME=\"\u3010Trac\u306b\u767b\u9332\u3057\u305fGIT\u30ea\u30dd\u30b8\u30c8\u30ea\u540d\u3011\"\nLOG=\"/dev/null\"\n\nwhile read oldrev newrev refname; do\n\n    echo \"oldrev=${oldrev}, newrev=${newrev}, refname=${refname}\" >> \"${LOG}\"\n\n    from_rev=`git log -n 1 --reverse --pretty=format:%h ${oldrev}`\n    to_rev=`git log -n 1 --reverse --pretty=format:%h ${newrev}`\n\n    echo \"from_rev=${from_rev}, to_rev=${to_rev}\" >> \"${LOG}\"\n\n    added_flag=\"0\"\n    for rev in `${GIT_APP} log --reverse --pretty=format:%h`; do\n\n        if [ \"${added_flag}\" = \"1\" -o \"${from_rev}\" = \"\" ]; then\n            echo \"rev=${rev}\" >> \"${LOG}\"\n            ${TRAC_ADMIN} \"${TRAC_ENV}\" changeset added \"${REPO_NAME}\" \"${rev}\"\n        elif [ \"${from_rev}\" = \"${rev}\" ]; then\n            added_flag=\"1\"\n        fi\n    done\ndone\n\n${TRAC_ADMIN} \"${TRAC_ENV}\" repository resync \"${REPO_NAME}\"\n```\n\n# \u5fc3\u914d\u4e8b\n\u30d6\u30e9\u30f3\u30c1\u3092\u30de\u30fc\u30b8\u3057\u305f\u5f8c push \u3059\u308b\u3068\u3001\u30c1\u30b1\u30c3\u30c8\u304c\u30b3\u30e1\u30f3\u30c8\u3060\u3089\u3051\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u304b\u3082\uff1f"}