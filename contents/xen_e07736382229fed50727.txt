{"context": "\n\n\u6982\u8981\nVPC\u30a2\u30af\u30bb\u30b9\u3092\u5229\u7528\u3059\u308bLambda Function\u3067\u306f\u3001ENI\u751f\u6210\u306b\u4f34\u3046\u30ec\u30a4\u30c6\u30f3\u30b7\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u305f\u3081\u3001\u5b9a\u671f\u7684\u306b\u30dd\u30fc\u30ea\u30f3\u30b0\u3092\u884c\u3046\u306e\u304c\u30aa\u30b9\u30b9\u30e1\u3068\u3055\u308c\u3066\u3044\u308b\u3002\n\u4eca\u56de\u306fLambda\u306eScheduled Event\u3068\u3001SAM(Serverless Application Model)\u3092\u5229\u7528\u3057\u3066\u3001\u5b9a\u671f\u5b9f\u884c\u306e\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3002\n\n\u30dd\u30fc\u30ea\u30f3\u30b0\u90e8\u5206\u306e\u5b9f\u88c5\n\u81ea\u8eab\u304c\u4fdd\u6709\u3057\u3066\u3044\u308bLambda Function\u3092\u53d6\u5f97\u3057\u3066\u304d\u3066\u3001\u305d\u308c\u305e\u308cInvoke\u3059\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\nindex.js\nimport aws from 'aws-sdk';\n\nexport const handler = (event, context, callback) => {\n    const lambda = new aws.Lambda();\n\n    // \u4fdd\u6709\u3057\u3066\u3044\u308b\u3059\u3079\u3066\u306eLambda Function\u3092\u53d6\u5f97\u3057\u3066\u304f\u308b\n    lambda.listFunctions({}, (error, data) => {\n        let invokes = [];\n        data.Functions.forEach((lambdaFunction) => {\n            // \u81ea\u5206\u81ea\u8eab\u306f\u5b9f\u884c\u3057\u306a\u3044\n            if (lambdaFunction.FunctionName === 'MyFunctionName') {\n                return true;\n            }\n\n            let invoke = new Promise((resolve, reject) => {\n                lambda.invoke({\n                    'FunctionName': lambdaFunction.FunctionName,\n                    'InvocationType': 'Event',\n                    'Qualifier': 'v1'\n                }, (error, data) => {\n                    if (error !== null) {\n                        reject(error);\n                        return;\n                    }\n\n                    resolve(data);\n                });\n            });\n\n            invokes.push(invoke);\n        });\n\n        // \u5b9f\u884c\u6642\u9593\u304c\u3082\u3063\u305f\u3044\u306a\u3044\u306e\u3067Promise.all\u3067\u4e26\u5217\u51e6\u7406\u3055\u305b\u308b\n        Promise.all(invokes).then((data) => {\n            context.succeed(data);\n\n        }).catch((error) => {\n            context.fail(error);\n        });\n    });\n};\n\n\n\u5b9a\u671f\u5b9f\u884c\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u306f\u3053\u308c\u3060\u3051\u3002\naws-sdk\u306fLambda\u5b9f\u884c\u74b0\u5883\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u542b\u3081\u306a\u304f\u3066\u3082\u5229\u7528\u3067\u304d\u308b\u3002\n\nSAM\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5b9f\u88c5\u3059\u308b\n\ntemplate.yml\nAWSTemplateFormatVersion: '2010-09-09'\nTransform: AWS::Serverless-2016-10-31\nDescription: Wake up functions triggered on a timer.\nResources:\n  ScheduledFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      Handler: index.handler\n      Runtime: nodejs4.3\n      CodeUri: ./zip/index.zip\n      MemorySize: 128\n      Timeout: 60\n      Role: arn:aws:iam::XXXXXXXXXXXX:role/AmazonAPIGatewayLambdaExecRole\n      VpcConfig:\n        SecurityGroupIds:\n          - sg-xxxxxxxx\n        SubnetIds:\n          - subnet-XXXXXXXX\n          - subnet-XXXXXXXX\n      Events:\n        Timer:\n          Type: Schedule\n          Properties:\n            Schedule: rate(10 minutes)\n\n\n\n10\u5206\u9593\u9694\u3067index.handler\u3092\u5b9f\u884c\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3002\nCodeUri\u306e\u5024\u306f\u3001\u5f8c\u8ff0\u3059\u308bGulp\u3092\u5229\u7528\u3057\u305f\u969b\u306bzip\u304c\u751f\u6210\u3055\u308c\u308b\u30d1\u30b9\u3092\u8a18\u8f09\u3002\n\nGulp\u3092\u5229\u7528\u3057\u3066cloudformation\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\n% aws cloudformation package --template-file ./template.yaml --output-template-file ./serverless-output.yaml --s3-bucket s3-backet-name\n% aws cloudformation deploy --template-file ./serverless-output.yaml --stack-name wakeup --capabilities CAPABILITY_IAM\n\n\u4e0a\u8a18\u30b3\u30de\u30f3\u30c9\u3067S3\u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u304b\u3089\u3001\u5b9f\u884c\u74b0\u5883\u3078\u306e\u53cd\u6620\u307e\u3067\u5b8c\u4e86\u3059\u308b\u304c\u3001Gulp\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u6bce\u56de\u306e\u53cd\u6620\u30d7\u30ed\u30bb\u30b9\u3092\u52b9\u7387\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nAWS Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3092Gulp\u3067\u30c7\u30d7\u30ed\u30a4\u3092\u53c2\u8003\u306b\u3001cloudformation\u3092\u5229\u7528\u3057\u305fgulpfile\u3092\u4f5c\u6210\u3059\u308b\u3002\n\ngulpfile.babel.js\nimport gulp from 'gulp';\nimport babel from 'gulp-babel';\nimport zip from 'gulp-zip';\nimport del from 'del';\nimport child from 'child_process'\nimport runSequence from 'run-sequence';\n\ngulp.task('clean', (callback) => {\n    return del(['./dist', './index.zip'], callback);\n});\n\ngulp.task('main', () => {\n    return gulp.src(['./index.js'])\n        .pipe(babel())\n        .pipe(gulp.dest('./dist/'));\n});\n\ngulp.task('zip', () => {\n    return gulp.src(['./dist/**/*', '!./dist/package.json'])\n        .pipe(zip('index.zip'))\n        .pipe(gulp.dest('./zip/'));\n});\n\ngulp.task('cfn-package', (callback) => {\n    const command = 'aws cloudformation package --template-file ./template.yaml --output-template-file ./serverless-output.yaml --s3-bucket s3-backet-name';\n    child.exec(command, (error, stdout, stderr) => {\n        callback(error);\n    });\n});\n\ngulp.task('cfn-deploy', (callback) => {\n    const command = 'aws cloudformation deploy --template-file ./serverless-output.yaml --stack-name wakeup --capabilities CAPABILITY_IAM';\n    child.exec(command, (error, stdout, stderr) => {\n        callback(error);\n    });\n});\n\ngulp.task('deploy', (callback) => {\n    return runSequence(\n        ['clean'],\n        ['main'],\n        ['zip'],\n        ['cfn-package'],\n        ['cfn-deploy'],\n        callback\n    );\n});\n\n\n\n\u4eca\u56de\u30c6\u30b9\u30c8\u95a2\u9023\u306b\u3064\u3044\u3066\u306f\u7701\u3044\u3066\u3044\u308b\u306e\u3068\u3001deploy\u3067\u304d\u308bcloudformation\u306enpm\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u30a8\u30f3\u30c8\u30ea\u30fc\u516c\u958b\u6642\u70b9\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001child_process\u3067\u76f4\u63a5\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3002\n\u3042\u3068\u306fgulp\u3092\u52d5\u304b\u305b\u3070\u3001Lambda Function\u3092\u5b9a\u671f\u5b9f\u884c\u3059\u308bSchedule Event\u304c\u52d5\u304d\u51fa\u3057\u3066\u304f\u308c\u308b\u3002\n% gulp deploy\n[19:12:39] Requiring external module babel-core/register\n[19:12:40] Using gulpfile ~/Src/lambda/wakeup/gulpfile.babel.js\n[19:12:40] Starting 'deploy'...\n[19:12:40] Starting 'clean'...\n[19:12:40] Finished 'clean' after 9.47 ms\n[19:12:40] Starting 'main'...\n[19:12:40] Finished 'main' after 121 ms\n[19:12:41] Starting 'zip'...\n[19:12:41] Finished 'zip' after 21 ms\n[19:12:41] Starting 'cfn-package'...\n[19:12:42] Finished 'cfn-package' after 1.04 s\n[19:12:42] Starting 'cfn-deploy'...\n[19:13:24] Finished 'cfn-deploy' after 43 s\n[19:13:24] Finished 'deploy' after 44 s\n\ncloudformation\u306edeploy\u306f\u7d50\u69cb\u6642\u9593\u304b\u304b\u308b\u306e\u304c\u7389\u306b\u7455\u3002\n# \u6982\u8981\nVPC\u30a2\u30af\u30bb\u30b9\u3092\u5229\u7528\u3059\u308bLambda Function\u3067\u306f\u3001ENI\u751f\u6210\u306b\u4f34\u3046\u30ec\u30a4\u30c6\u30f3\u30b7\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u305f\u3081\u3001[\u5b9a\u671f\u7684\u306b\u30dd\u30fc\u30ea\u30f3\u30b0\u3092\u884c\u3046\u306e\u304c\u30aa\u30b9\u30b9\u30e1](http://qiita.com/Keisuke69/items/1d84684f0511a062e968)\u3068\u3055\u308c\u3066\u3044\u308b\u3002\n\u4eca\u56de\u306fLambda\u306eScheduled Event\u3068\u3001SAM(Serverless Application Model)\u3092\u5229\u7528\u3057\u3066\u3001\u5b9a\u671f\u5b9f\u884c\u306e\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3002\n\n# \u30dd\u30fc\u30ea\u30f3\u30b0\u90e8\u5206\u306e\u5b9f\u88c5\n\u81ea\u8eab\u304c\u4fdd\u6709\u3057\u3066\u3044\u308bLambda Function\u3092\u53d6\u5f97\u3057\u3066\u304d\u3066\u3001\u305d\u308c\u305e\u308cInvoke\u3059\u308b\u3088\u3046\u306a\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n```js:index.js\nimport aws from 'aws-sdk';\n\nexport const handler = (event, context, callback) => {\n    const lambda = new aws.Lambda();\n\n    // \u4fdd\u6709\u3057\u3066\u3044\u308b\u3059\u3079\u3066\u306eLambda Function\u3092\u53d6\u5f97\u3057\u3066\u304f\u308b\n    lambda.listFunctions({}, (error, data) => {\n        let invokes = [];\n        data.Functions.forEach((lambdaFunction) => {\n            // \u81ea\u5206\u81ea\u8eab\u306f\u5b9f\u884c\u3057\u306a\u3044\n            if (lambdaFunction.FunctionName === 'MyFunctionName') {\n                return true;\n            }\n\n            let invoke = new Promise((resolve, reject) => {\n                lambda.invoke({\n                    'FunctionName': lambdaFunction.FunctionName,\n                    'InvocationType': 'Event',\n                    'Qualifier': 'v1'\n                }, (error, data) => {\n                    if (error !== null) {\n                        reject(error);\n                        return;\n                    }\n\n                    resolve(data);\n                });\n            });\n\n            invokes.push(invoke);\n        });\n\n        // \u5b9f\u884c\u6642\u9593\u304c\u3082\u3063\u305f\u3044\u306a\u3044\u306e\u3067Promise.all\u3067\u4e26\u5217\u51e6\u7406\u3055\u305b\u308b\n        Promise.all(invokes).then((data) => {\n            context.succeed(data);\n\n        }).catch((error) => {\n            context.fail(error);\n        });\n    });\n};\n```\n\u5b9a\u671f\u5b9f\u884c\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u306f\u3053\u308c\u3060\u3051\u3002\naws-sdk\u306fLambda\u5b9f\u884c\u74b0\u5883\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u542b\u3081\u306a\u304f\u3066\u3082\u5229\u7528\u3067\u304d\u308b\u3002\n\n# SAM\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u5b9f\u88c5\u3059\u308b\n```yaml:template.yml\nAWSTemplateFormatVersion: '2010-09-09'\nTransform: AWS::Serverless-2016-10-31\nDescription: Wake up functions triggered on a timer.\nResources:\n  ScheduledFunction:\n    Type: AWS::Serverless::Function\n    Properties:\n      Handler: index.handler\n      Runtime: nodejs4.3\n      CodeUri: ./zip/index.zip\n      MemorySize: 128\n      Timeout: 60\n      Role: arn:aws:iam::XXXXXXXXXXXX:role/AmazonAPIGatewayLambdaExecRole\n      VpcConfig:\n        SecurityGroupIds:\n          - sg-xxxxxxxx\n        SubnetIds:\n          - subnet-XXXXXXXX\n          - subnet-XXXXXXXX\n      Events:\n        Timer:\n          Type: Schedule\n          Properties:\n            Schedule: rate(10 minutes)\n\n```\n10\u5206\u9593\u9694\u3067index.handler\u3092\u5b9f\u884c\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f5c\u6210\u3002\nCodeUri\u306e\u5024\u306f\u3001\u5f8c\u8ff0\u3059\u308bGulp\u3092\u5229\u7528\u3057\u305f\u969b\u306bzip\u304c\u751f\u6210\u3055\u308c\u308b\u30d1\u30b9\u3092\u8a18\u8f09\u3002\n\n# Gulp\u3092\u5229\u7528\u3057\u3066cloudformation\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\n```\n% aws cloudformation package --template-file ./template.yaml --output-template-file ./serverless-output.yaml --s3-bucket s3-backet-name\n% aws cloudformation deploy --template-file ./serverless-output.yaml --stack-name wakeup --capabilities CAPABILITY_IAM\n```\n\u4e0a\u8a18\u30b3\u30de\u30f3\u30c9\u3067S3\u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u304b\u3089\u3001\u5b9f\u884c\u74b0\u5883\u3078\u306e\u53cd\u6620\u307e\u3067\u5b8c\u4e86\u3059\u308b\u304c\u3001Gulp\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u6bce\u56de\u306e\u53cd\u6620\u30d7\u30ed\u30bb\u30b9\u3092\u52b9\u7387\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n[AWS Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3092Gulp\u3067\u30c7\u30d7\u30ed\u30a4](http://dev.classmethod.jp/cloud/aws/how-to-deploy-a-lambda-function-with-gulp/)\u3092\u53c2\u8003\u306b\u3001cloudformation\u3092\u5229\u7528\u3057\u305fgulpfile\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n```js:gulpfile.babel.js\nimport gulp from 'gulp';\nimport babel from 'gulp-babel';\nimport zip from 'gulp-zip';\nimport del from 'del';\nimport child from 'child_process'\nimport runSequence from 'run-sequence';\n\ngulp.task('clean', (callback) => {\n    return del(['./dist', './index.zip'], callback);\n});\n\ngulp.task('main', () => {\n    return gulp.src(['./index.js'])\n        .pipe(babel())\n        .pipe(gulp.dest('./dist/'));\n});\n\ngulp.task('zip', () => {\n    return gulp.src(['./dist/**/*', '!./dist/package.json'])\n        .pipe(zip('index.zip'))\n        .pipe(gulp.dest('./zip/'));\n});\n\ngulp.task('cfn-package', (callback) => {\n    const command = 'aws cloudformation package --template-file ./template.yaml --output-template-file ./serverless-output.yaml --s3-bucket s3-backet-name';\n    child.exec(command, (error, stdout, stderr) => {\n        callback(error);\n    });\n});\n\ngulp.task('cfn-deploy', (callback) => {\n    const command = 'aws cloudformation deploy --template-file ./serverless-output.yaml --stack-name wakeup --capabilities CAPABILITY_IAM';\n    child.exec(command, (error, stdout, stderr) => {\n        callback(error);\n    });\n});\n\ngulp.task('deploy', (callback) => {\n    return runSequence(\n        ['clean'],\n        ['main'],\n        ['zip'],\n        ['cfn-package'],\n        ['cfn-deploy'],\n        callback\n    );\n});\n\n```\n\u4eca\u56de\u30c6\u30b9\u30c8\u95a2\u9023\u306b\u3064\u3044\u3066\u306f\u7701\u3044\u3066\u3044\u308b\u306e\u3068\u3001deploy\u3067\u304d\u308bcloudformation\u306enpm\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u30a8\u30f3\u30c8\u30ea\u30fc\u516c\u958b\u6642\u70b9\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001child_process\u3067\u76f4\u63a5\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3002\n\u3042\u3068\u306fgulp\u3092\u52d5\u304b\u305b\u3070\u3001Lambda Function\u3092\u5b9a\u671f\u5b9f\u884c\u3059\u308bSchedule Event\u304c\u52d5\u304d\u51fa\u3057\u3066\u304f\u308c\u308b\u3002\n\n```\n% gulp deploy\n[19:12:39] Requiring external module babel-core/register\n[19:12:40] Using gulpfile ~/Src/lambda/wakeup/gulpfile.babel.js\n[19:12:40] Starting 'deploy'...\n[19:12:40] Starting 'clean'...\n[19:12:40] Finished 'clean' after 9.47 ms\n[19:12:40] Starting 'main'...\n[19:12:40] Finished 'main' after 121 ms\n[19:12:41] Starting 'zip'...\n[19:12:41] Finished 'zip' after 21 ms\n[19:12:41] Starting 'cfn-package'...\n[19:12:42] Finished 'cfn-package' after 1.04 s\n[19:12:42] Starting 'cfn-deploy'...\n[19:13:24] Finished 'cfn-deploy' after 43 s\n[19:13:24] Finished 'deploy' after 44 s\n```\ncloudformation\u306edeploy\u306f\u7d50\u69cb\u6642\u9593\u304b\u304b\u308b\u306e\u304c\u7389\u306b\u7455\u3002\n", "tags": ["AWS", "lambda", "serverless"]}