{"context": "\u307e\u3060\u5b9f\u6226\u6295\u5165\u3057\u3066\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u773a\u3081\u3066\u305f\u3089\u3001 As such, sessions and views are no longer included with the framework.\u3068\u306e\u8a18\u8ff0\u304c\u3002\n\u30c8\u30fc\u30af\u30f3\u6e21\u3057\u3066\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u8a00\u3046\u306a\u3089\u3001\u30af\u30c3\u30ad\u30fc\u6e21\u3057\u3066\u3082\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3060\u308d\u304c\u3001\u3063\u3066\u6240\u3067\u610f\u5730\u3067\u3082Session\u4f7f\u3063\u3066\u3044\u304d\u305f\u3044\u885d\u52d5\u306b\u99c6\u3089\u308c\u305f\u306e\u3067\u3001Lumen 5.2\u3067\u3082Session\u4f7f\u3048\u308b\u3088\u3046\u306b\u6539\u9020\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u6539\u9020\nilluminate/session\u81ea\u4f53\u306flumen5.2\u306e\u4e2d\u306b\u3082\u5165\u3063\u3066\u308b\u3088\u3046\u3067\u3059\u3002\n\u4f9d\u5b58\u3092\u8ffd\u3046\u306e\u306f\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u3057\u3066\u306a\u3044\u306e\u3067\u3059\u304c\u3001support\u3057\u306a\u3044\u306e\u306b\u5165\u3063\u3066\u308b\u306e\u306f\u306a\u3093\u3067\u306a\u3093\u3067\u3057\u3087\u3046\u304b\u3002\n\u5fc5\u8981\u306a\u30af\u30e9\u30b9\u306f\u63c3\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a\u5fc5\u8981\u306a\u30bb\u30c3\u30b7\u30e7\u30f3\u521d\u671f\u5316\u306e\u8a18\u8ff0\u3092bootstrap/app.php \u306b\u8a18\u8ff0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n$app->extend(\"session\",function($obj)use($app){\n    $app->configure(\"session\");\n    return $obj;\n});\n$app->alias(\"session\",\\Illuminate\\Session\\SessionManager::class);\n$app->register(\\Illuminate\\Session\\SessionServiceProvider::class);\n$app->middleware([\n    \\Illuminate\\Session\\Middleware\\StartSession::class\n]);\n\nServiceProvider\u8aad\u307f\u8fbc\u307f\u306b\u30d5\u30c3\u30af\u3057\u3066\u4f5c\u6210\u3057\u3066\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u3092\u884c\u3044\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u767b\u9332\u3001\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u767b\u9332\u3092\u884c\u3046\u611f\u3058\u3067\u3059\u3002\n\u203b \u30b3\u30e1\u30f3\u30c8\u6b04\u3067\u306e\u6307\u6458\u3092\u53cd\u6620\u3055\u305b\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\n\u3042\u3068\u306flumen 5.1 \u3068\u304b\u304b\u304b\u3089\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u6301\u3063\u3066\u304d\u3066\u3001config\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\u3002\nfile\u30c9\u30e9\u30a4\u30d0\u3067\u4f7f\u3063\u3066\u307f\u308b\u5834\u5408\u306fstorage/framework/session/.gitempty\u306e\u4f5c\u6210\u3092\u304a\u5fd8\u308c\u306a\u304f\n\u6bce\u56delumen5.1\u304b\u3089\u8a2d\u5b9a\u6301\u3063\u3066\u304f\u308b\u306e\u3082\u9762\u5012\u306a\u306e\u3067\u5099\u5fd8\u3067\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n<?php\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Default Session Driver\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default session \"driver\" that will be used on\n    | requests. By default, we will use the lightweight native driver but\n    | you may specify any of the other wonderful drivers provided here.\n    |\n    | Supported: \"file\", \"cookie\", \"database\", \"apc\",\n    |            \"memcached\", \"redis\", \"array\"\n    |\n    */\n\n    'driver' => env('SESSION_DRIVER', 'file'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Lifetime\n    |--------------------------------------------------------------------------\n    |\n    | Here you may specify the number of minutes that you wish the session\n    | to be allowed to remain idle before it expires. If you want them\n    | to immediately expire on the browser closing, set that option.\n    |\n    */\n\n    'lifetime' => env('SESSION_LIFETIME', 120),\n\n    'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Encryption\n    |--------------------------------------------------------------------------\n    |\n    | This option allows you to easily specify that all of your session data\n    | should be encrypted before it is stored. All encryption will be run\n    | automatically by Laravel and you can use the Session like normal.\n    |\n    */\n\n    'encrypt' => false,\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session File Location\n    |--------------------------------------------------------------------------\n    |\n    | When using the native session driver, we need a location where session\n    | files may be stored. A default has been set for you but a different\n    | location may be specified. This is only needed for file sessions.\n    |\n    */\n\n    'files' => storage_path('framework/sessions'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Database Connection\n    |--------------------------------------------------------------------------\n    |\n    | When using the \"database\" or \"redis\" session drivers, you may specify a\n    | connection that should be used to manage these sessions. This should\n    | correspond to a connection in your database configuration options.\n    |\n    */\n\n    'connection' => env('SESSION_DATABASE_CONNECTION',\"default\"),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Database Table\n    |--------------------------------------------------------------------------\n    |\n    | When using the \"database\" session driver, you may specify the table we\n    | should use to manage the sessions. Of course, a sensible default is\n    | provided for you; however, you are free to change this as needed.\n    |\n    */\n\n    'table' => env('SESSION_DATABASE_TABLE', 'sessions'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Sweeping Lottery\n    |--------------------------------------------------------------------------\n    |\n    | Some session drivers must manually sweep their storage location to get\n    | rid of old sessions from storage. Here are the chances that it will\n    | happen on a given request. By default, the odds are 2 out of 100.\n    |\n    */\n\n    'lottery' => [2, 100],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Cookie Name\n    |--------------------------------------------------------------------------\n    |\n    | Here you may change the name of the cookie used to identify a session\n    | instance by ID. The name specified here will get used every time a\n    | new session cookie is created by the framework for every driver.\n    |\n    */\n\n    'cookie' => 'laravel_session',\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Cookie Path\n    |--------------------------------------------------------------------------\n    |\n    | The session cookie path determines the path for which the cookie will\n    | be regarded as available. Typically, this will be the root path of\n    | your application but you are free to change this when necessary.\n    |\n    */\n\n    'path' => '/',\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Cookie Domain\n    |--------------------------------------------------------------------------\n    |\n    | Here you may change the domain of the cookie used to identify a session\n    | in your application. This will determine which domains the cookie is\n    | available to in your application. A sensible default has been set.\n    |\n    */\n\n    'domain' => null,\n\n    /*\n    |--------------------------------------------------------------------------\n    | HTTPS Only Cookies\n    |--------------------------------------------------------------------------\n    |\n    | By setting this option to true, session cookies will only be sent back\n    | to the server if the browser has a HTTPS connection. This will keep\n    | the cookie from being sent to you if it can not be done securely.\n    |\n    */\n    'secure' => env(\"SESSION_HTTPS\",isset($_SERVER[\"HTTPS\"])),\n\n];\n\n\n\n\u307e\u3060\u5b9f\u6226\u6295\u5165\u3057\u3066\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001[\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8](https://lumen.laravel.com/docs/5.2/releases)\u773a\u3081\u3066\u305f\u3089\u3001 **As such, sessions and views are no longer included with the framework.**\u3068\u306e\u8a18\u8ff0\u304c\u3002\n\n\u30c8\u30fc\u30af\u30f3\u6e21\u3057\u3066\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u8a00\u3046\u306a\u3089\u3001\u30af\u30c3\u30ad\u30fc\u6e21\u3057\u3066\u3082\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3060\u308d\u304c\u3001\u3063\u3066\u6240\u3067\u610f\u5730\u3067\u3082Session\u4f7f\u3063\u3066\u3044\u304d\u305f\u3044\u885d\u52d5\u306b\u99c6\u3089\u308c\u305f\u306e\u3067\u3001Lumen 5.2\u3067\u3082Session\u4f7f\u3048\u308b\u3088\u3046\u306b\u6539\u9020\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\n## \u6539\u9020\n\n`illuminate/session`\u81ea\u4f53\u306flumen5.2\u306e\u4e2d\u306b\u3082\u5165\u3063\u3066\u308b\u3088\u3046\u3067\u3059\u3002\n\n \u4f9d\u5b58\u3092\u8ffd\u3046\u306e\u306f\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u3057\u3066\u306a\u3044\u306e\u3067\u3059\u304c\u3001support\u3057\u306a\u3044\u306e\u306b\u5165\u3063\u3066\u308b\u306e\u306f\u306a\u3093\u3067\u306a\u3093\u3067\u3057\u3087\u3046\u304b\u3002\n \n\u5fc5\u8981\u306a\u30af\u30e9\u30b9\u306f\u63c3\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a\u5fc5\u8981\u306a\u30bb\u30c3\u30b7\u30e7\u30f3\u521d\u671f\u5316\u306e\u8a18\u8ff0\u3092`bootstrap/app.php` \u306b\u8a18\u8ff0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n````\n$app->extend(\"session\",function($obj)use($app){\n    $app->configure(\"session\");\n    return $obj;\n});\n$app->alias(\"session\",\\Illuminate\\Session\\SessionManager::class);\n$app->register(\\Illuminate\\Session\\SessionServiceProvider::class);\n$app->middleware([\n    \\Illuminate\\Session\\Middleware\\StartSession::class\n]);\n````\n\n\n`ServiceProvider`\u8aad\u307f\u8fbc\u307f\u306b\u30d5\u30c3\u30af\u3057\u3066\u4f5c\u6210\u3057\u3066\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u3092\u884c\u3044\u3001\u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u767b\u9332\u3001\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u767b\u9332\u3092\u884c\u3046\u611f\u3058\u3067\u3059\u3002\n\n\u203b \u30b3\u30e1\u30f3\u30c8\u6b04\u3067\u306e\u6307\u6458\u3092\u53cd\u6620\u3055\u305b\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\n\n\u3042\u3068\u306flumen 5.1 \u3068\u304b\u304b\u304b\u3089\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u6301\u3063\u3066\u304d\u3066\u3001`config`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\u3002\n\nfile\u30c9\u30e9\u30a4\u30d0\u3067\u4f7f\u3063\u3066\u307f\u308b\u5834\u5408\u306f`storage/framework/session/.gitempty`\u306e\u4f5c\u6210\u3092\u304a\u5fd8\u308c\u306a\u304f\n\n\u6bce\u56delumen5.1\u304b\u3089\u8a2d\u5b9a\u6301\u3063\u3066\u304f\u308b\u306e\u3082\u9762\u5012\u306a\u306e\u3067\u5099\u5fd8\u3067\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n````php\n<?php\n\nreturn [\n\n    /*\n    |--------------------------------------------------------------------------\n    | Default Session Driver\n    |--------------------------------------------------------------------------\n    |\n    | This option controls the default session \"driver\" that will be used on\n    | requests. By default, we will use the lightweight native driver but\n    | you may specify any of the other wonderful drivers provided here.\n    |\n    | Supported: \"file\", \"cookie\", \"database\", \"apc\",\n    |            \"memcached\", \"redis\", \"array\"\n    |\n    */\n\n    'driver' => env('SESSION_DRIVER', 'file'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Lifetime\n    |--------------------------------------------------------------------------\n    |\n    | Here you may specify the number of minutes that you wish the session\n    | to be allowed to remain idle before it expires. If you want them\n    | to immediately expire on the browser closing, set that option.\n    |\n    */\n\n    'lifetime' => env('SESSION_LIFETIME', 120),\n\n    'expire_on_close' => env('SESSION_EXPIRE_ON_CLOSE', false),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Encryption\n    |--------------------------------------------------------------------------\n    |\n    | This option allows you to easily specify that all of your session data\n    | should be encrypted before it is stored. All encryption will be run\n    | automatically by Laravel and you can use the Session like normal.\n    |\n    */\n\n    'encrypt' => false,\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session File Location\n    |--------------------------------------------------------------------------\n    |\n    | When using the native session driver, we need a location where session\n    | files may be stored. A default has been set for you but a different\n    | location may be specified. This is only needed for file sessions.\n    |\n    */\n\n    'files' => storage_path('framework/sessions'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Database Connection\n    |--------------------------------------------------------------------------\n    |\n    | When using the \"database\" or \"redis\" session drivers, you may specify a\n    | connection that should be used to manage these sessions. This should\n    | correspond to a connection in your database configuration options.\n    |\n    */\n\n    'connection' => env('SESSION_DATABASE_CONNECTION',\"default\"),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Database Table\n    |--------------------------------------------------------------------------\n    |\n    | When using the \"database\" session driver, you may specify the table we\n    | should use to manage the sessions. Of course, a sensible default is\n    | provided for you; however, you are free to change this as needed.\n    |\n    */\n\n    'table' => env('SESSION_DATABASE_TABLE', 'sessions'),\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Sweeping Lottery\n    |--------------------------------------------------------------------------\n    |\n    | Some session drivers must manually sweep their storage location to get\n    | rid of old sessions from storage. Here are the chances that it will\n    | happen on a given request. By default, the odds are 2 out of 100.\n    |\n    */\n\n    'lottery' => [2, 100],\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Cookie Name\n    |--------------------------------------------------------------------------\n    |\n    | Here you may change the name of the cookie used to identify a session\n    | instance by ID. The name specified here will get used every time a\n    | new session cookie is created by the framework for every driver.\n    |\n    */\n\n    'cookie' => 'laravel_session',\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Cookie Path\n    |--------------------------------------------------------------------------\n    |\n    | The session cookie path determines the path for which the cookie will\n    | be regarded as available. Typically, this will be the root path of\n    | your application but you are free to change this when necessary.\n    |\n    */\n\n    'path' => '/',\n\n    /*\n    |--------------------------------------------------------------------------\n    | Session Cookie Domain\n    |--------------------------------------------------------------------------\n    |\n    | Here you may change the domain of the cookie used to identify a session\n    | in your application. This will determine which domains the cookie is\n    | available to in your application. A sensible default has been set.\n    |\n    */\n\n    'domain' => null,\n\n    /*\n    |--------------------------------------------------------------------------\n    | HTTPS Only Cookies\n    |--------------------------------------------------------------------------\n    |\n    | By setting this option to true, session cookies will only be sent back\n    | to the server if the browser has a HTTPS connection. This will keep\n    | the cookie from being sent to you if it can not be done securely.\n    |\n    */\n    'secure' => env(\"SESSION_HTTPS\",isset($_SERVER[\"HTTPS\"])),\n\n];\n\n````\n", "tags": ["PHP", "lumen"]}