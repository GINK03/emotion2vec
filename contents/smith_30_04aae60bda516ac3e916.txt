{"context": "\u3053\u308c\u304b\u3089\u306f\u3058\u3081\u308bTDD \u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u5165\u9580 ThinkIT Books \u3088\u308a\n\n\u30dc\u30fc\u30ea\u30f3\u30b0\u306e\u70b9\u6570\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\n\n\u5168\u90e81\u30d4\u30f3\u3060\u3051\u5012\u3057\u305f\u3068\u304d\u306e\u30c6\u30b9\u30c8\u3092\u8ffd\u52a0\nBowlingGameTest\u306b\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3002\n\n\u30d4\u30f3\u306e\u672c\u6570\u3092\u8a18\u9332\u3059\u308b$score\u30d7\u30ed\u30d1\u30c6\u30a3\u3092BowlingGame\u306b\u8a2d\u5b9a\n\u5168\u6295\u7403\u3067 1 \u30d4\u30f3\u306e\u307f\u5012\u3057\u305f\u3068\u304d\u306e\u6b63\u3057\u3044\u6319\u52d5\u3092\u4fdd\u8a3c\u3055\u305b\u308b\n\n\n\u30c6\u30b9\u30c8\u3092\u66f8\u304f\n    /**\n     * \u5168\u6295\u7403\u3067 1 \u30d4\u30f3\u306e\u307f\u5012\u3059\n     */\n    public function testKnockedDownAllOne()\n    {\n        $this->BowlingGame = new BowlingGame();\n\n        for ($i = 0; $i < 20; $i++) {\n            $this->BowlingGame->recordShot(1);\n        }\n\n        $this->assertEquals(20, $this->BowlingGame->calculateScore());\n    }\n\n\n\u5b9f\u884c\u3057\u3066\u6012\u3089\u308c\u308b\n\u3060\u3093\u3060\u3093\u6012\u3089\u308c\u308b\u306e\u306b\u3082\u6163\u308c\u3066\u304d\u305f\u304b\u306a\u3002\u3002\n$ vendor/bin/phpunit tests/BowlingGameTest.php \nPHPUnit 5.5.4 by Sebastian Bergmann and contributors.\n\n.F                                                                  2 / 2 (100%)\n\nTime: 27 ms, Memory: 4.00MB\n\nThere was 1 failure:\n\n1) BowlingGameTest::testKnockedDownAllOne\nFailed asserting that 0 matches expected 20.\n\n/var/www/html/test/UnitTest/tests/BowlingGameTest.php:45\n\nFAILURES!\nTests: 2, Assertions: 2, Failures: 1.\n\n\n\u30c6\u30b9\u30c8\u304c\u901a\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u66f8\u304f(\u6700\u5c0f\u306e\u69cb\u6210\u3067)\n\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3057\u305f\u306e\u3067construct()\u3067\u521d\u671f\u5316\n<?php\n\nnamespace App;\n\nclass BowlingGame\n{\n    /** @var int **/\n    private $score;\n\n    public function __construct()\n    {\n        $this->score = 0;\n    }\n\n    /**\n     * @param  int    $pin [description]\n     * @return [type]      [description]\n     */\n    public function recordShot(int $pin)\n    {\n        $this->score += $pin;\n    }\n\n    /**\n     * @return int [description]\n     */\n    public function calculateScore()\n    {\n        return $this->score;\n    }\n}\n\n\n\u5b9f\u884c\u3059\u308b\n$ vendor/bin/phpunit tests/BowlingGameTest.php \nPHPUnit 5.5.4 by Sebastian Bergmann and contributors.\n\n..                                                                  2 / 2 (100%)\n\nTime: 30 ms, Memory: 4.00MB\n\nOK (2 tests, 2 assertions)\n\n\n\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\n\u6a5f\u80fd(\u3075\u308b\u307e\u3044)\u3092\u5909\u66f4\u305b\u305a\u306b\u8a2d\u8a08\u3092\u6539\u5584\u3059\u308b\n\u307e\u305a\u306f\u91cd\u8907\u30b3\u30fc\u30c9\u3092\u6539\u5584\u3059\u308b\n\nBowlingGameTest.php\n    /**\n     * \u5168\u6295\u7403\u304c\u30ac\u30fc\u30bf\u30fc\n     */\n    public function testAllGarter()\n    {\n        $this->BowlingGame = new BowlingGame();\n\n        for ($i = 0; $i < 20; $i++) {\n            $this->BowlingGame->recordShot(0);\n        }\n\n        $this->assertTrue(0 === $this->BowlingGame->calculateScore());\n    }\n\n    /**\n     * \u5168\u6295\u7403\u3067 1 \u30d4\u30f3\u306e\u307f\u5012\u3059\n     */\n    public function testKnockedDownAllOne()\n    {\n        $this->BowlingGame = new BowlingGame();\n\n        for ($i = 0; $i < 20; $i++) {\n            $this->BowlingGame->recordShot(1);\n        }\n\n        $this->assertEquals(20, $this->BowlingGame->calculateScore());\n    }\n\n\n20\u56de\u306e\u7e70\u308a\u8fd4\u3057\u6295\u7403\u51e6\u7406\u304c\u91cd\u8907\u3057\u3066\u3044\u308b\u306e\u3067\n\u30e1\u30bd\u30c3\u30c9\u306b\u307e\u3068\u3081\u308b\n(\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u3082setUp()\u306b\u79fb\u3057\u305f)\n\u2193\n\nBowlingGameTest.php\n<?php\nuse PHPUnit\\Framework\\TestCase;\nuse App\\BowlingGame;\n\nclass BowlingGameTest extends TestCase\n{\n\n    public $BowlingGame;\n\n    public function setUp()\n    {\n        $this->BowlingGame = new BowlingGame();\n    }\n\n    public function tearDown()\n    {\n        unset($this->BowlingGame);\n    }\n\n    /**\n     * \u5168\u6295\u7403\u304c\u30ac\u30fc\u30bf\u30fc\n     */\n    public function testAllGarter()\n    {\n        $this->loopRecordShot(20, 0);\n\n        $this->assertTrue(0 === $this->BowlingGame->calculateScore());\n    }\n\n    /**\n     * \u5168\u6295\u7403\u3067 1 \u30d4\u30f3\u306e\u307f\u5012\u3059\n     */\n    public function testKnockedDownAllOne()\n    {\n        $this->loopRecordShot(20, 1);\n\n        $this->assertEquals(20, $this->BowlingGame->calculateScore());\n    }\n\n    /**\n\u3000\u3000  * @param  int    $loop [description]\n\u3000\u3000  * @param  int    $pin  [description]\n\u3000\u3000  * @return void       [description]\n\u3000\u3000  */\n    private function loopRecordShot(int $loop, int $pin)\n    {\n        for ($i = 0; $i < $loop; $i++) {\n            $this->BowlingGame->recordShot($pin);\n        }\n    }\n}\n\n\n\n\u30c6\u30b9\u30c8\u3092\u52d5\u304b\u3057\u3066\u901a\u3063\u3066\u3044\u308c\u3070ok!\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3082\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3082\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3044\u308c\u3070\u6bd4\u8f03\u7684\u7c21\u5358\u306b\u884c\u3048\u308b\u3002\n\u306a\u305c\u306a\u3089\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u81ea\u5206\u81ea\u8eab\u3082\u6b63\u3057\u3044\u524d\u63d0\u6761\u4ef6\u3068\u6b63\u3057\u3044\u7d50\u679c\u3092\u7406\u89e3\u3057\u3066\u3044\u308b\u304b\u3089\u3002\n\u3053\u308c\u304b\u3089\u306f\u3058\u3081\u308bTDD \u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u5165\u9580 ThinkIT Books \u3088\u308a\n\n# \u30dc\u30fc\u30ea\u30f3\u30b0\u306e\u70b9\u6570\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\n\n## \u5168\u90e81\u30d4\u30f3\u3060\u3051\u5012\u3057\u305f\u3068\u304d\u306e\u30c6\u30b9\u30c8\u3092\u8ffd\u52a0\n\nBowlingGameTest\u306b\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3002\n\n- \u30d4\u30f3\u306e\u672c\u6570\u3092\u8a18\u9332\u3059\u308b$score\u30d7\u30ed\u30d1\u30c6\u30a3\u3092BowlingGame\u306b\u8a2d\u5b9a\n- \u5168\u6295\u7403\u3067 1 \u30d4\u30f3\u306e\u307f\u5012\u3057\u305f\u3068\u304d\u306e\u6b63\u3057\u3044\u6319\u52d5\u3092\u4fdd\u8a3c\u3055\u305b\u308b\n\n### \u30c6\u30b9\u30c8\u3092\u66f8\u304f\n\n```php\n    /**\n     * \u5168\u6295\u7403\u3067 1 \u30d4\u30f3\u306e\u307f\u5012\u3059\n     */\n    public function testKnockedDownAllOne()\n    {\n        $this->BowlingGame = new BowlingGame();\n\n        for ($i = 0; $i < 20; $i++) {\n            $this->BowlingGame->recordShot(1);\n        }\n\n        $this->assertEquals(20, $this->BowlingGame->calculateScore());\n    }\n```\n\n### \u5b9f\u884c\u3057\u3066\u6012\u3089\u308c\u308b\n\n\u3060\u3093\u3060\u3093\u6012\u3089\u308c\u308b\u306e\u306b\u3082\u6163\u308c\u3066\u304d\u305f\u304b\u306a\u3002\u3002\n\n```bash\n$ vendor/bin/phpunit tests/BowlingGameTest.php \nPHPUnit 5.5.4 by Sebastian Bergmann and contributors.\n\n.F                                                                  2 / 2 (100%)\n\nTime: 27 ms, Memory: 4.00MB\n\nThere was 1 failure:\n\n1) BowlingGameTest::testKnockedDownAllOne\nFailed asserting that 0 matches expected 20.\n\n/var/www/html/test/UnitTest/tests/BowlingGameTest.php:45\n\nFAILURES!\nTests: 2, Assertions: 2, Failures: 1.\n```\n\n### \u30c6\u30b9\u30c8\u304c\u901a\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u66f8\u304f(__\u6700\u5c0f\u306e\u69cb\u6210\u3067__)\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3057\u305f\u306e\u3067construct()\u3067\u521d\u671f\u5316\n\n```php\n<?php\n\nnamespace App;\n\nclass BowlingGame\n{\n    /** @var int **/\n    private $score;\n\n    public function __construct()\n    {\n        $this->score = 0;\n    }\n\n    /**\n     * @param  int    $pin [description]\n     * @return [type]      [description]\n     */\n    public function recordShot(int $pin)\n    {\n        $this->score += $pin;\n    }\n\n    /**\n     * @return int [description]\n     */\n    public function calculateScore()\n    {\n        return $this->score;\n    }\n}\n```\n\n### \u5b9f\u884c\u3059\u308b\n\n```bash\n$ vendor/bin/phpunit tests/BowlingGameTest.php \nPHPUnit 5.5.4 by Sebastian Bergmann and contributors.\n\n..                                                                  2 / 2 (100%)\n\nTime: 30 ms, Memory: 4.00MB\n\nOK (2 tests, 2 assertions)\n```\n\n## \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\n\u6a5f\u80fd(\u3075\u308b\u307e\u3044)\u3092\u5909\u66f4\u305b\u305a\u306b\u8a2d\u8a08\u3092\u6539\u5584\u3059\u308b\n\n\u307e\u305a\u306f\u91cd\u8907\u30b3\u30fc\u30c9\u3092\u6539\u5584\u3059\u308b\n\n\n```php:BowlingGameTest.php\n    /**\n     * \u5168\u6295\u7403\u304c\u30ac\u30fc\u30bf\u30fc\n     */\n    public function testAllGarter()\n    {\n        $this->BowlingGame = new BowlingGame();\n\n        for ($i = 0; $i < 20; $i++) {\n            $this->BowlingGame->recordShot(0);\n        }\n\n        $this->assertTrue(0 === $this->BowlingGame->calculateScore());\n    }\n\n    /**\n     * \u5168\u6295\u7403\u3067 1 \u30d4\u30f3\u306e\u307f\u5012\u3059\n     */\n    public function testKnockedDownAllOne()\n    {\n        $this->BowlingGame = new BowlingGame();\n\n        for ($i = 0; $i < 20; $i++) {\n            $this->BowlingGame->recordShot(1);\n        }\n\n        $this->assertEquals(20, $this->BowlingGame->calculateScore());\n    }\n```\n20\u56de\u306e\u7e70\u308a\u8fd4\u3057\u6295\u7403\u51e6\u7406\u304c\u91cd\u8907\u3057\u3066\u3044\u308b\u306e\u3067\n\u30e1\u30bd\u30c3\u30c9\u306b\u307e\u3068\u3081\u308b\n(\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u3082setUp()\u306b\u79fb\u3057\u305f)\n\u2193\n\n```php:BowlingGameTest.php\n<?php\nuse PHPUnit\\Framework\\TestCase;\nuse App\\BowlingGame;\n\nclass BowlingGameTest extends TestCase\n{\n\n    public $BowlingGame;\n\n    public function setUp()\n    {\n        $this->BowlingGame = new BowlingGame();\n    }\n\n    public function tearDown()\n    {\n        unset($this->BowlingGame);\n    }\n\n    /**\n     * \u5168\u6295\u7403\u304c\u30ac\u30fc\u30bf\u30fc\n     */\n    public function testAllGarter()\n    {\n        $this->loopRecordShot(20, 0);\n\n        $this->assertTrue(0 === $this->BowlingGame->calculateScore());\n    }\n\n    /**\n     * \u5168\u6295\u7403\u3067 1 \u30d4\u30f3\u306e\u307f\u5012\u3059\n     */\n    public function testKnockedDownAllOne()\n    {\n        $this->loopRecordShot(20, 1);\n\n        $this->assertEquals(20, $this->BowlingGame->calculateScore());\n    }\n\n    /**\n\u3000\u3000  * @param  int    $loop [description]\n\u3000\u3000  * @param  int    $pin  [description]\n\u3000\u3000  * @return void       [description]\n\u3000\u3000  */\n    private function loopRecordShot(int $loop, int $pin)\n    {\n        for ($i = 0; $i < $loop; $i++) {\n            $this->BowlingGame->recordShot($pin);\n        }\n    }\n}\n\n```\n\n\u30c6\u30b9\u30c8\u3092\u52d5\u304b\u3057\u3066\u901a\u3063\u3066\u3044\u308c\u3070ok!\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3082\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3082\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3044\u308c\u3070\u6bd4\u8f03\u7684\u7c21\u5358\u306b\u884c\u3048\u308b\u3002\n\u306a\u305c\u306a\u3089\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u81ea\u5206\u81ea\u8eab\u3082\u6b63\u3057\u3044\u524d\u63d0\u6761\u4ef6\u3068\u6b63\u3057\u3044\u7d50\u679c\u3092\u7406\u89e3\u3057\u3066\u3044\u308b\u304b\u3089\u3002\n", "tags": ["PHP", "PHPUnit"]}