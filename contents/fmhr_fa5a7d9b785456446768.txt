{"tags": ["\u30e1\u30e2"], "context": "\u8ffd\u8a18:slice\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u65e9\u3044\n\nGolang\u306econtainer/list\u3067\u30b9\u30bf\u30c3\u30af\u3068\u30ad\u30e5\u30fc\nhttp://golang.org/pkg/container/list/\nPop\u306b\u306fRemove\u3092\u3064\u304b\u3046\nPush\u306f\u524d\u306b\u5165\u308c\u308bPushFront\u3068\u5f8c\u308d\u306b\u5165\u308c\u308bPushBack\u304c\u3042\u308b\ns.PushFron()\u3068s.Remive(s.Front())\u3092\u4f7f\u3063\u3066Stack\nq.PushBack()\u3068q.Remove(q.Front())\u3092\u4f7f\u3063\u3066Queue\n\u5024\u306finterface\u578b\n\nStack\ns := list.New()           //init\ns.PushFront(x)             //Push\nv := s.Remove(s.Front)    //Pop\n\n\nQueue\nq := list.New()          //init\nq.PushBack(x)             //Enqueue\nv := q.Remove(q.Front)  //Dequeue\n\n\n0~9\u3092\u3044\u308c\u3066,10\u56de\u53d6\u308a\u51fa\u3059\npackage main\n\nimport (\n    \"fmt\" \n    \"container/list\"\n)\n\n\nfunc stacktest(){\n    s := list.New()\n    fmt.Print(\"--Stack--\\nPush: \")\n    for i:=0; i<10; i++{\n        s.PushBack(i) //<-------\u5f8c\u308d\u306b\u5165\u308c\u308b\n        fmt.Print(i, \",\")\n    }\n    fmt.Print(\"\\nPop : \")\n    for i:=0; i<10; i++{\n        r := s.Remove(s.Front())\n        fmt.Print(r, \",\")\n    }\n}\n\nfunc queuetest(){\n    s := list.New()\n    fmt.Print(\"\\n--Queue--\\nEnqueue: \")\n    for i:=0; i<10; i++{\n        s.PushFront(i)  //<-------\u524d\u306b\u5165\u308c\u308b\n        fmt.Print(i, \",\")\n    }\n    fmt.Print(\"\\nDequeue: \")\n    for i:=0; i<10; i++{\n        r := s.Remove(s.Front())\n        fmt.Print(r, \",\")\n    }\n}\n\nfunc main() {\n    stacktest()\n    queuetest()\n}\n\n--Stack--\nPush: 0,1,2,3,4,5,6,7,8,9,\nPop : 0,1,2,3,4,5,6,7,8,9,\n--Queue--\nEnqueue: 0,1,2,3,4,5,6,7,8,9,\nDequeue: 9,8,7,6,5,4,3,2,1,0,\n\n\n(\u304a\u307e\u3051)popcount\n1\u306b\u306a\u3063\u3066\u308b\u30d3\u30c3\u30c8\u306e\u6570\u3092\u6570\u3048\u308b\n// \u6539\u826f\u524d\nfunc popcount0(a int)(b int) {\n    for a > 0 {\n        b += a & 1\n        a >>= 1\n    }\n    return \n}\n\nfunc popcount(x uint64) uint64 {\n    x = (x & 0x5555555555555555) + ((x & 0xAAAAAAAAAAAAAAAA) >> 1)\n    x = (x & 0x3333333333333333) + ((x & 0xCCCCCCCCCCCCCCCC) >> 2)\n    x = (x & 0x0F0F0F0F0F0F0F0F) + ((x & 0xF0F0F0F0F0F0F0F0) >> 4)\n    x = (x & 0x00ff00ff00ff00ff) + ((x & 0xff00ff00ff00ff00) >> 8)\n    x = (x & 0x0000ffff0000ffff) + ((x & 0xffff0000ffff0000) >> 16)\n    x = (x & 0x00000000ffffffff) + ((x & 0xffffffff00000000) >> 32)\n    return x\n}\n\n\u306a\u306b\u3092\u3084\u3063\u3066\u308b\u306e\u304b\u306f\u4e0b\u306e\u30b9\u30e9\u30a4\u30c9\u304c\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\nhttp://www.slideshare.net/KMC_JP/slide-www?related=1\n\u30cf\u30df\u30f3\u30b0\u8ddd\u96e2\u3068\u3082\u3044\u3046.CPU\u547d\u4ee4\u306b\u3082\u3042\u308b.\n\nHachioji.pm 46\u3067\u300cGo\u3092\u66f8\u3044\u3066\u305f\u3089\u3001\u3044\u3064\u306e\u307e\u306b\u304b\u30a2\u30bb\u30f3\u30d6\u30ea\u3092\u66f8\u3044\u3066\u305f\u8a71\u300d\u3092\u3057\u3066\u304d\u305f(hide_o_55)\n\"\u8ffd\u8a18\uff1aGo\u3067PopCount\u3084\u3063\u3066\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u3059\u3067\u306b\u4ed6\u306b\u3082\u3042\u308b\u3051\u3069\u3001POPCNT\u4f7f\u3048\u3066\u3001\u304b\u3064PopCount\u5358\u6a5f\u80fd\u3067\u4f7f\u3048\u308b\u306e\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\"\nhttp://d.hatena.ne.jp/hide_o_55/20150201/1422719130\n\nStockfish DD \u2013 bitcount.h(\u3084\u306d\u3046\u3089\u738b\u3055\u3093)\n\"popcount\u306f\u3001\u738b\u306b\u5229\u304d\u306e\u3042\u308b\u6575\u99d2\u306ebitboard\u3092\u5f97\u305f\u3068\u304d\u306bpopcount\u3057\u3066\u305d\u308c\u304c2\u4ee5\u4e0a\u3067\u3042\u308c\u3070\u4e21\u738b\u624b\u306a\u306e\u3067\u6b21\u306e\u5408\u6cd5\u624b\u3068\u3057\u3066\u306f\u738b\u304c\u9003\u3052\u308b\u6307\u3057\u624b\u306e\u307f\u3092\u751f\u6210\u3059\u308b\u3068\u304d\u306b\u4f7f\u3048\u307e\u3059\u3002\"\nhttp://yaneuraou.yaneu.com/2014/12/30/stockfish-dd-bitcount-h/\n\nb-Bit MinHash\u306b\u3088\u308b\u9ad8\u901f\u304b\u3064\u7701\u30b9\u30da\u30fc\u30b9\u306a\u985e\u4f3c\u5ea6\u5224\u5b9a(SmartNews)\n\"\u7d9a\u3044\u3066\u3001\u3053\u306e\u30d3\u30c3\u30c8\u5217\u306e\u30cf\u30df\u30f3\u30b0\u91cd\u307f\uff081\u306e\u500b\u6570\u3001popcount\u3068\u3082\u547c\u3070\u308c\u308b\uff09\u3092\u6570\u3048\u307e\u3059\u3002\u3068\u3044\u3063\u3066\u3082\u30011\u30d3\u30c3\u30c8\u305a\u3064\u6570\u3048\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u52b9\u7387\u7684\u306b\u8a08\u7b97\u3059\u308b\u5b9f\u88c5\u304c\u78ba\u7acb\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001Java\u306e\u5834\u5408\u306f\u6a19\u6e96API\u306eLong.bitCount()\u3084Integer.bitCount()\u3092\u4f7f\u3046\u3060\u3051\u3067\u3059\u3002\"\nhttp://developer.smartnews.com/blog/2013/08/05/efficient-similarity-estimation-using-b-bit-minhash/\n\n\u300c\u30eb\u30fc\u30d7\u30ab\u30a6\u30f3\u30bf\u309264bit\u306b\u3057\u305f\u308a\u3001 \u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3092\u5b9a\u6570\u306b\u3057\u305f\u3089\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6fc0\u843d\u3061\u306a\u3093\u3060\u3051\u3069\u4f55\u3067\uff1f\u300d\u672c\u306e\u866b(\u6c5f\u6dfb\u4eae)\n\"\u3053\u306e\u4e0d\u601d\u8b70\u306a\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u5909\u5316\u306e\u7406\u7531\u306f\u3001Intel\u306eSnady/Ivy Bridge, Haswell\u306epopcnt\u547d\u4ee4\u306e\u3001\u4e0d\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u4f9d\u5b58\u306b\u3088\u308b\u3082\u306e\u3060\u3068\u3044\u3046\u3002\npopcnt src, dest\n\n\u3068\u3042\u3063\u305f\u3068\u304d\u3001\u306a\u305c\u304bIntel\u306eCPU\u306f\u3001\u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\u5148\u306e\u30ec\u30b8\u30b9\u30bf\u30fc\u306b\u30c7\u30fc\u30bf\u4f9d\u5b58\u304c\u767a\u751f\u3059\u308b\u306e\u3060\u3068\u3044\u3046\u3002\u305d\u306e\u305f\u3081\u3001dest\u306b\u6307\u5b9a\u3055\u308c\u305f\u30ec\u30b8\u30b9\u30bf\u30fc\u306e\u5024\u304c\u5b9a\u307e\u308b\u307e\u3067\u3001\u5f8c\u7d9a\u306epopcnt\u3092\u4e26\u5217\u5b9f\u884c\u3067\u304d\u305a\u3001\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u304c\u843d\u3061\u308b\u306e\u3060\u3068\u3044\u3046\u3002\u3057\u304b\u3057\u3001dest\u306f\u3069\u3046\u305b\u4e0a\u66f8\u304d\u3057\u3066\u3057\u307e\u3044\u3001\u76f4\u524d\u306e\u5024\u306f\u4f55\u306e\u610f\u5473\u3082\u6301\u305f\u306a\u3044\u306e\u3067\u3001\u30c7\u30fc\u30bf\u4f9d\u5b58\u3082\u30af\u30bd\u3082\u306a\u3044\u306f\u305a\u306a\u306e\u3060\u304c\u3002\"\nhttp://cpplover.blogspot.jp/2014/08/64bit.html\n```\n\u8ffd\u8a18:slice\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u65e9\u3044\n```\n\n\nGolang\u306econtainer/list\u3067\u30b9\u30bf\u30c3\u30af\u3068\u30ad\u30e5\u30fc\nhttp://golang.org/pkg/container/list/\n\nPop\u306b\u306fRemove\u3092\u3064\u304b\u3046\nPush\u306f\u524d\u306b\u5165\u308c\u308bPushFront\u3068\u5f8c\u308d\u306b\u5165\u308c\u308bPushBack\u304c\u3042\u308b\ns.PushFron()\u3068s.Remive(s.Front())\u3092\u4f7f\u3063\u3066Stack\nq.PushBack()\u3068q.Remove(q.Front())\u3092\u4f7f\u3063\u3066Queue\n\u5024\u306finterface\u578b\n\n##Stack\n\n```Go\ns := list.New()           //init\ns.PushFront(x)             //Push\nv := s.Remove(s.Front)    //Pop\n```\n\n##Queue\n```GO\nq := list.New()          //init\nq.PushBack(x)             //Enqueue\nv := q.Remove(q.Front)\t//Dequeue\n```\n\n###0~9\u3092\u3044\u308c\u3066,10\u56de\u53d6\u308a\u51fa\u3059\n```Go\npackage main\n\nimport (\n\t\"fmt\" \n\t\"container/list\"\n)\n\n\nfunc stacktest(){\n\ts := list.New()\n\tfmt.Print(\"--Stack--\\nPush: \")\n\tfor i:=0; i<10; i++{\n\t\ts.PushBack(i) //<-------\u5f8c\u308d\u306b\u5165\u308c\u308b\n\t\tfmt.Print(i, \",\")\n\t}\n\tfmt.Print(\"\\nPop : \")\n\tfor i:=0; i<10; i++{\n\t\tr := s.Remove(s.Front())\n\t\tfmt.Print(r, \",\")\n\t}\n}\n\nfunc queuetest(){\n\ts := list.New()\n\tfmt.Print(\"\\n--Queue--\\nEnqueue: \")\n\tfor i:=0; i<10; i++{\n\t\ts.PushFront(i)  //<-------\u524d\u306b\u5165\u308c\u308b\n\t\tfmt.Print(i, \",\")\n\t}\n\tfmt.Print(\"\\nDequeue: \")\n\tfor i:=0; i<10; i++{\n\t\tr := s.Remove(s.Front())\n\t\tfmt.Print(r, \",\")\n\t}\n}\n\nfunc main() {\n\tstacktest()\n\tqueuetest()\n}\n```\n```\n--Stack--\nPush: 0,1,2,3,4,5,6,7,8,9,\nPop : 0,1,2,3,4,5,6,7,8,9,\n--Queue--\nEnqueue: 0,1,2,3,4,5,6,7,8,9,\nDequeue: 9,8,7,6,5,4,3,2,1,0,\n```\n\n## (\u304a\u307e\u3051)popcount\n1\u306b\u306a\u3063\u3066\u308b\u30d3\u30c3\u30c8\u306e\u6570\u3092\u6570\u3048\u308b\n\n```go\n// \u6539\u826f\u524d\nfunc popcount0(a int)(b int) {\n \tfor a > 0 {\n \t\tb += a & 1\n \t\ta >>= 1\n\t}\n\treturn \n}\n```\n```go\nfunc popcount(x uint64) uint64 {\n\tx = (x & 0x5555555555555555) + ((x & 0xAAAAAAAAAAAAAAAA) >> 1)\n\tx = (x & 0x3333333333333333) + ((x & 0xCCCCCCCCCCCCCCCC) >> 2)\n\tx = (x & 0x0F0F0F0F0F0F0F0F) + ((x & 0xF0F0F0F0F0F0F0F0) >> 4)\n\tx = (x & 0x00ff00ff00ff00ff) + ((x & 0xff00ff00ff00ff00) >> 8)\n\tx = (x & 0x0000ffff0000ffff) + ((x & 0xffff0000ffff0000) >> 16)\n\tx = (x & 0x00000000ffffffff) + ((x & 0xffffffff00000000) >> 32)\n\treturn x\n}\n```\n\u306a\u306b\u3092\u3084\u3063\u3066\u308b\u306e\u304b\u306f\u4e0b\u306e\u30b9\u30e9\u30a4\u30c9\u304c\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\nhttp://www.slideshare.net/KMC_JP/slide-www?related=1\n\u30cf\u30df\u30f3\u30b0\u8ddd\u96e2\u3068\u3082\u3044\u3046.CPU\u547d\u4ee4\u306b\u3082\u3042\u308b.\n\n###Hachioji.pm 46\u3067\u300cGo\u3092\u66f8\u3044\u3066\u305f\u3089\u3001\u3044\u3064\u306e\u307e\u306b\u304b\u30a2\u30bb\u30f3\u30d6\u30ea\u3092\u66f8\u3044\u3066\u305f\u8a71\u300d\u3092\u3057\u3066\u304d\u305f(hide_o_55)\n\"\u8ffd\u8a18\uff1aGo\u3067PopCount\u3084\u3063\u3066\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u3059\u3067\u306b\u4ed6\u306b\u3082\u3042\u308b\u3051\u3069\u3001POPCNT\u4f7f\u3048\u3066\u3001\u304b\u3064PopCount\u5358\u6a5f\u80fd\u3067\u4f7f\u3048\u308b\u306e\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\"\nhttp://d.hatena.ne.jp/hide_o_55/20150201/1422719130\n###Stockfish DD \u2013 bitcount.h(\u3084\u306d\u3046\u3089\u738b\u3055\u3093)\n\"popcount\u306f\u3001\u738b\u306b\u5229\u304d\u306e\u3042\u308b\u6575\u99d2\u306ebitboard\u3092\u5f97\u305f\u3068\u304d\u306bpopcount\u3057\u3066\u305d\u308c\u304c2\u4ee5\u4e0a\u3067\u3042\u308c\u3070\u4e21\u738b\u624b\u306a\u306e\u3067\u6b21\u306e\u5408\u6cd5\u624b\u3068\u3057\u3066\u306f\u738b\u304c\u9003\u3052\u308b\u6307\u3057\u624b\u306e\u307f\u3092\u751f\u6210\u3059\u308b\u3068\u304d\u306b\u4f7f\u3048\u307e\u3059\u3002\"\nhttp://yaneuraou.yaneu.com/2014/12/30/stockfish-dd-bitcount-h/\n###b-Bit MinHash\u306b\u3088\u308b\u9ad8\u901f\u304b\u3064\u7701\u30b9\u30da\u30fc\u30b9\u306a\u985e\u4f3c\u5ea6\u5224\u5b9a(SmartNews)\n\"\u7d9a\u3044\u3066\u3001\u3053\u306e\u30d3\u30c3\u30c8\u5217\u306e\u30cf\u30df\u30f3\u30b0\u91cd\u307f\uff081\u306e\u500b\u6570\u3001popcount\u3068\u3082\u547c\u3070\u308c\u308b\uff09\u3092\u6570\u3048\u307e\u3059\u3002\u3068\u3044\u3063\u3066\u3082\u30011\u30d3\u30c3\u30c8\u305a\u3064\u6570\u3048\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u52b9\u7387\u7684\u306b\u8a08\u7b97\u3059\u308b\u5b9f\u88c5\u304c\u78ba\u7acb\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001Java\u306e\u5834\u5408\u306f\u6a19\u6e96API\u306eLong.bitCount()\u3084Integer.bitCount()\u3092\u4f7f\u3046\u3060\u3051\u3067\u3059\u3002\"\n\nhttp://developer.smartnews.com/blog/2013/08/05/efficient-similarity-estimation-using-b-bit-minhash/\n\n### \u300c\u30eb\u30fc\u30d7\u30ab\u30a6\u30f3\u30bf\u309264bit\u306b\u3057\u305f\u308a\u3001 \u30d0\u30c3\u30d5\u30a1\u306e\u30b5\u30a4\u30ba\u3092\u5b9a\u6570\u306b\u3057\u305f\u3089\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6fc0\u843d\u3061\u306a\u3093\u3060\u3051\u3069\u4f55\u3067\uff1f\u300d\u672c\u306e\u866b(\u6c5f\u6dfb\u4eae)\n\"\u3053\u306e\u4e0d\u601d\u8b70\u306a\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u5909\u5316\u306e\u7406\u7531\u306f\u3001Intel\u306eSnady/Ivy Bridge, Haswell\u306epopcnt\u547d\u4ee4\u306e\u3001\u4e0d\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u4f9d\u5b58\u306b\u3088\u308b\u3082\u306e\u3060\u3068\u3044\u3046\u3002\n\n```\npopcnt src, dest\n```\n\u3068\u3042\u3063\u305f\u3068\u304d\u3001\u306a\u305c\u304bIntel\u306eCPU\u306f\u3001\u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\u5148\u306e\u30ec\u30b8\u30b9\u30bf\u30fc\u306b\u30c7\u30fc\u30bf\u4f9d\u5b58\u304c\u767a\u751f\u3059\u308b\u306e\u3060\u3068\u3044\u3046\u3002\u305d\u306e\u305f\u3081\u3001dest\u306b\u6307\u5b9a\u3055\u308c\u305f\u30ec\u30b8\u30b9\u30bf\u30fc\u306e\u5024\u304c\u5b9a\u307e\u308b\u307e\u3067\u3001\u5f8c\u7d9a\u306epopcnt\u3092\u4e26\u5217\u5b9f\u884c\u3067\u304d\u305a\u3001\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8\u304c\u843d\u3061\u308b\u306e\u3060\u3068\u3044\u3046\u3002\u3057\u304b\u3057\u3001dest\u306f\u3069\u3046\u305b\u4e0a\u66f8\u304d\u3057\u3066\u3057\u307e\u3044\u3001\u76f4\u524d\u306e\u5024\u306f\u4f55\u306e\u610f\u5473\u3082\u6301\u305f\u306a\u3044\u306e\u3067\u3001\u30c7\u30fc\u30bf\u4f9d\u5b58\u3082\u30af\u30bd\u3082\u306a\u3044\u306f\u305a\u306a\u306e\u3060\u304c\u3002\"\nhttp://cpplover.blogspot.jp/2014/08/64bit.html\n\n"}