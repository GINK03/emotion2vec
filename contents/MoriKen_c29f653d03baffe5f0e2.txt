{"context": " More than 1 year has passed since last update.\n\n\u76ee\u6b21\n\n\n\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9\u3068\u767b\u9332\n\n\nURDF\u3067\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\n\nHardwareInterface\u306e\u5b58\u5728\u610f\u7fa9\n\nURDF\u3067Gazebo\u306e\u8a2d\u5b9a\u3092\u3059\u308b\n\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u306b\u767b\u9332\u3059\u308b\n\n\n\nRobotHWSim\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u3064\u3044\u3066\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u5b9a\u7fa9\n\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u308b\u5834\u6240\n\nRobotHWSin\u3068RobotHW\u3068\u306e\u5bfe\u6bd4\n\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b \n\nDefaultRobotHWSim\u306b\u3064\u3044\u3066\n\n\n\nController\u306b\u3064\u3044\u3066\u3000\u2190\u3000\u30a4\u30de\u30b3\u30b3\n\n\n\nGazebo\u306b\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u3092Spawn\u3059\u308b\n\nController\u3092\u8d77\u52d5\u3059\u308b\n\nControllerManager\u3068HardwareInterface\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n\n\n\n\n\u304a\u984c\n\n\n\u66f8\u7c4d\n\n\nLearning ROS for Robotics Programming - Second Edition Chapter 10: Manipulation with MoveIt!\n\n\n\n\n\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\n\ngithub: AaronMR/Learning_ROS_for_Robotics_Programming_2nd_edition\n\n\n\n\n\u306f\u3058\u3081\u306b\n\u300c1. \u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9\u3068\u767b\u9332\u300d\u3068\u300c2. RobotHWSim\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u3064\u3044\u3066\u300d\u3067\uff0c\u4e0b\u8a18\u56f3\u306e\u9752\u8272\u3067\u56f2\u3063\u305f\u90e8\u5206\u306e\u304a\u8a71\u304c\u7d42\u308f\u308a\u307e\u3057\u305f\uff0e\u4eca\u56de\u306f\uff0c\u540c\u56f3\u5185\u306e\u30d4\u30f3\u30af\u3067\u56f2\u3063\u305f\u90e8\u5206\u306e\u304a\u8a71\u306b\u79fb\u308a\u307e\u3059\uff0e\n\n\u672c\u8a18\u4e8b\u7528\u306e\u307e\u3068\u3081\u306e\u56f3\u306b\u304a\u3044\u3066\u306f\uff0c\u4e0b\u8a18\u306e\u7dd1\u3067\u56f2\u3063\u305f\u7b87\u6240\u3067\u3059\uff0e\n\n\u305f\u3060\uff0c\u3044\u304d\u306a\u308aController\u4e91\u3005\u306e\u8a71\u304b\u3089\u59cb\u3081\u308b\u30b9\u30bf\u30a4\u30eb\u306f\u53d6\u308a\u307e\u305b\u3093\uff0eGazebo\u3092\u8d77\u52d5\u3059\u308blaunch\u30d5\u30a1\u30a4\u30eb\u3092\u8d77\u70b9\u306b\uff0c\u3069\u3093\u306a\u30d5\u30a1\u30a4\u30eb\u304c\u4f55\u306e\u305f\u3081\u306b\u8aad\u307f\u8fbc\u307e\u308c\u308b\u306e\u304b\u3092\u7d10\u89e3\u304d\u306a\u304c\u3089\uff0c\u5f90\u3005\u306bController\u306e\u4e2d\u8eab\u3092\u898b\u3066\u3044\u304f\u30b9\u30bf\u30a4\u30eb\u3092\u53d6\u308a\u307e\u3059\uff0e\n\nlaunch\u30d5\u30a1\u30a4\u30eb\u306e\u69cb\u9020\n\u6700\u3082\u5358\u7d14\u306a\u8d77\u52d5\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308brosbook_arm_empty_world.launch\u3092\u8d77\u70b9\u306b\uff0c\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3092\u53d6\u3063\u3066\u3044\u307e\u3059\uff0e\n\n\u3053\u308c\u3092\u9806\u756a\u306b\u898b\u3066\u3044\u304d\u307e\u3059\uff0e\n\nrosbook_arm_gazebo/launch/rosbook_arm_empty_world.launch\n<launch>\n  <include file=\"$(find rosbook_arm_gazebo)/launch/rosbook_arm_gazebo.launch\">\n    <arg name=\"world\" default=\"empty\"/>\n  </include>\n</launch>\n\n\nempty_world \u3067Gazebo\u3092\u8d77\u52d5\u3059\u308b\u3088\u3046\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\u6b21\u306erosbook_arm_gazebo.launch\u306b\u884c\u304d\u307e\u3059\uff0e\n\nrosbook_arm_gazebo/launch/rosbook_arm_gazebo.launch\n<launch>\n  <arg name=\"world\" default=\"empty\"/>\n  <arg name=\"robot\" default=\"base\"/>\n  <arg name=\"gzpose\" default=\"-x 0 -y 0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0\"/>\n  <!--\u7701\u7565-->\n  <!-- Start up world -->\n  <include file=\"$(find gazebo_ros)/launch/empty_world.launch\">\n    <arg name=\"world_name\" default=\"$(find rosbook_arm_gazebo)/worlds/$(arg world).world\"/>\n    <arg name=\"gui\" default=\"$(arg gui)\"/>\n    <arg name=\"debug\" default=\"$(arg debug)\"/>\n  </include>\n\n  <!-- Spawn robot in simulation -->\n  <include file=\"$(find rosbook_arm_gazebo)/launch/rosbook_arm_spawn.launch\">\n    <arg name=\"robot\"  value=\"$(arg robot)\"/>\n    <arg name=\"gzpose\" value=\"$(arg gzpose)\"/>\n  </include>\n\n  <!-- Bring up robot -->\n  <include file=\"$(find rosbook_arm_bringup)/launch/rosbook_arm_bringup.launch\"/>\n</launch>\n\n\nworld\u306e\u8d77\u52d5\u3001Gazebo\u4e0a\u3078\u306e\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u306eSpawn(rosbook_arm_gazebo/launch/rosbook_arm_spawn.launch)\u3001Controller\u306e\u8d77\u52d5(rosbook_arm_bringup/launch/rosbook_arm_bringup.launch)\u3092\u884c\u3044\u307e\u3059\uff0eworld\u306e\u8d77\u52d5\u306f\u3053\u3053\u3067\u306f\u91cd\u8981\u3067\u306f\u306a\u3044\u306e\u3067Spawn\u304b\u3089\u884c\u304d\u307e\u3059\uff0e\n\u5b9f\u306fSpawn\u81ea\u4f53\u3082\uff0c\u3053\u3053\u306e\u4e3b\u984c\u3092\u8003\u3048\u308b\u4e0a\u3067\u306f\u3042\u307e\u308a\u91cd\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\u3057\u304b\u3057\uff0c\u305d\u3053\u306b\u884c\u304d\u7740\u304f\u904e\u7a0b\u3067Controller\u306b\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u7b87\u6240\u304c\u3042\u308a\u307e\u3059\uff0e\u5b9f\u6a5f\u3068Gazebo\u3092\u5207\u308a\u66ff\u3048\u308b\u30b7\u30b9\u30c6\u30e0\u3092\u7d44\u3080\u6642\u306e\u30ce\u30a6\u30cf\u30a6\u306b\u3082\u306a\u308b\u306e\u3067\uff0c\u3053\u3053\u3082\u8ffd\u3063\u3066\u304a\u304f\u3079\u304d\u3068\u5224\u65ad\u3057\u307e\u3057\u305f\uff0e\n\nGazebo\u306b\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u3092Spawn \u3059\u308b\n\u5bfe\u8c61\u306f\u4e0b\u8a18\u56f3\u306e\u30d4\u30f3\u30af\u90e8\u5206\u3067\u3059\uff0e\n\n\u3067\u306f\uff0c\u5bfe\u8c61\u7bc4\u56f2\u306e\u982d\u3067\u3042\u308brosbook_arm_spawn.launch\u304b\u3089\u898b\u3066\u307f\u307e\u3059\uff0e\n\nrosbook_arm_gazebo/launch/rosbook_arm_spawn.launch\n<launch>\n  <arg name=\"robot\" default=\"base\"/>\n  <arg name=\"gzpose\" default=\"-x 0 -y 0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0\"/>\n\n  <!-- PID gains -->\n  <rosparam file=\"$(find rosbook_arm_controller_configuration_gazebo)/config/pids.yaml\" command=\"load\"/>\n\n  <!-- Joint trajectory controllers -->\n  <rosparam file=\"$(find rosbook_arm_controller_configuration_gazebo)/config/joint_trajectory_controllers.yaml\" command=\"load\"/>\n\n  <!-- Robot model -->\n  <include file=\"$(find rosbook_arm_description)/robots/upload_rosbook_arm.launch\">\n    <arg name=\"robot\" default=\"$(arg robot)\"/>\n  </include>\n\n  <!-- Spawn robot in Gazebo -->\n  <node pkg=\"gazebo_ros\" type=\"spawn_model\" name=\"spawn_model\"\n        args=\"-urdf -param robot_description $(arg gzpose) -model rosbook_arm\"/>\n</launch>\n\n\n\u307e\u305a\uff0c\u3044\u304f\u3064\u304byaml\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\uff0epids.yaml\u3068\uff0cjoint_trajectory_controllers.yaml\u3067\u3059\uff0e\u3044\u304b\u306b\u3082Controller\u5411\u3051\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u305d\u3046\u306a\u540d\u524d\u3067\u3059\uff0e\u4e2d\u3092\u8997\u3044\u3066\u307f\u307e\u3059\uff0e\u4f8b\u306b\u3088\u3063\u3066\uff0cshoulder_joint\u3060\u3051\u3092\u5bfe\u8c61\u306b\u8ffd\u3063\u3066\u3044\u304d\u307e\u3059\uff0e\n\nrosbook_arm_controller_configuration_gazebo/config/pids.yaml\ngains:\n  shoulder_joint:  {p: 1000.0, d: 10.0, i: 0.01, i_clamp: 3.0}\n  #\u7701\u7565\n\n\n\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u3067\u306f\uff0cjoint \u306e\u5236\u5fa1\u30b2\u30a4\u30f3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\n\nrosbook_arm_controller_configuration_gazebo/config/joint_trajectory_controllers.yaml\narm_controller:\n  type: position_controllers/JointTrajectoryController\n  joints:\n    - shoulder_joint\n  #\u7701\u7565\n\ngripper_controller:\n  #\u7701\u7565\n\n\n\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u3067\u306f\uff0c\u4f7f\u7528\u3059\u308bController\u306e\u7a2e\u985e\u3068\uff0c\u305d\u308c\u3092\u9069\u7528\u3059\u308bjoint \u306e\u5bfe\u5fdc\u4ed8\u3051\u3092\u884c\u3044\u307e\u3059\uff0e\n\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u306f\uff0carm_controller\u3068\u3044\u3046\u540d\u524d\u7a7a\u9593\u3092\u6307\u5b9a\u3057\uff0cposition_controllers/JointTrajectoryController\u3068\u3044\u3046Controller\u3092\u4f7f\u3046\u3053\u3068\u3068\uff0c\u305d\u308c\u306b\u5bfe\u3057\u3066shoulder_joint\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\uff0e\u672c\u5f53\u306f\uff0c\u3053\u308c\u4ee5\u5916\u306ejoint \u3082\u5272\u308a\u5f53\u3066\u3066\u3044\u308b\u3057\uff0c\u305d\u306e\u4ed6\u5236\u7d04\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3082\u8a18\u8ff0\u3055\u308c\u3066\u304a\u308a\u307e\u3059\u304c\uff0c\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\uff0e\n\n\u5c11\u3057\u5bc4\u308a\u9053\u3092\u3057\u307e\u3059\uff0e\n\n\n\u306f\u3058\u3081\uff0c\u4e0a\u8a18yaml\u30d5\u30a1\u30a4\u30eb\u3092\u3053\u3053\u3067\u8aad\u307f\u8fbc\u3080\u3053\u3068\u306b\u9055\u548c\u611f\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\u73fe\u5728\u5bfe\u8c61\u3068\u3057\u3066\u3044\u308brosbook_arm_spawn.launch\u3067\u306f\uff0c\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u3092Gazebo\u306bSpawn\u3059\u308b\u3053\u3068\u304c\u4e3b\u984c\u306e\u306f\u305a\u306a\u306e\u306b\uff0c\u3053\u3053\u3067\u7a81\u7136Controller\u306b\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u51fa\u308b\u306e\u306f\u4f55\u6545\u3060\uff1f\u3068\u601d\u3063\u305f\u304b\u3089\u3067\u3059\uff0e\n\u3057\u304b\u3057\uff0c\u6b21\u306e\u3088\u3046\u306b\u8003\u3048\u308c\u3070\uff0c\u3053\u308c\u306b\u610f\u5473\u306f\u3042\u308a\u305d\u3046\u3067\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u5b9f\u6a5f\u3068Gazebo\u306e\u30e2\u30c7\u30eb\u304c\u4e21\u65b9\u63c3\u3063\u3066\u304a\u308a\uff0c\u5207\u308a\u66ff\u3048\u3066\u4f7f\u3048\u308b\u72b6\u6cc1\u4e0b\u3067\u306f\uff0c\u305d\u308c\u305e\u308c\u306e\u5834\u5408\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u305f\u3044\u3068\u3044\u3046\u8981\u6c42\u304c\u3042\u308b\u306f\u305a\u3067\u3059\uff0e\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3068\u5b9f\u6a5f\u306e\u5236\u5fa1\u30b2\u30a4\u30f3\u304c\u4e00\u81f4\u3059\u308b\u306a\u3093\u3066\u3053\u3068\u306f\uff0c\u901a\u5e38\u306f\u3042\u308a\u3048\u306a\u3044\u305f\u3081\u3067\u3059\uff0e\n\n\n\n\u3067\u306f\uff0c\u8a71\u3092\u623b\u3057\u307e\u3059\uff0e\u6b21\u306b\uff0cupload_rosbook_arm.launch\u3092\u898b\u3066\u307f\u307e\u3059\uff0e\n\nrosbook_arm_description/robots/upload_rosbook_arm.launch\n<launch>\n  <arg name=\"robot\" default=\"base\"/>\n\n  <!-- Load URDF into ROS param server -->\n  <param name=\"robot_description\" command=\"$(find xacro)/xacro\n    '$(find rosbook_arm_description)/robots/rosbook_arm_$(arg robot).urdf.xacro'\"/>\n\n  <!-- Joint limits -->\n  <rosparam file=\"$(find rosbook_arm_description)/config/joint_limits.yaml\" command=\"load\"/>\n</launch>\n\n\n\u4ee5\u524d\u306e\u30a8\u30f3\u30c8\u30ea\u3067\uff0cdemo.launch\u3067robot_description\u306b\u30e2\u30c7\u30eb\u3092\u767b\u9332\u3059\u308b\u8a18\u8ff0\u304c\u3042\u308a\u307e\u3057\u305f\u304c\uff0c\u3042\u308c\u306fGazebo\u3092\u629c\u304d\u306b\u3057\u305f\u7c21\u6613\u78ba\u8a8d\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u306a\u306e\u3067\uff0c\u3053\u3053\u3067\u306f\u4e0d\u8981\u3067\u3059\uff0eGazebo\u3092\u4f7f\u3046\u5834\u5408\u306f\uff0cupload_rosbook_arm.launch\u3092\u8d77\u52d5\u3059\u308c\u3070\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u304c\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u306b\u767b\u9332\u3055\u308c\u307e\u3059\uff0e\n\u305d\u306e\u5f8cjoint_limits.yaml\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u304c\uff0c\u95a2\u7bc0\u901f\u5ea6\u3084\u52a0\u901f\u5ea6\u306e\u30ea\u30df\u30c3\u30c8\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u3053\u306f\u8ffd\u308f\u306a\u304f\u3066\u3082\u4e3b\u984c\u306b\u5f71\u97ff\u3057\u306a\u3044\u306e\u3067\uff0c\u5272\u611b\u3057\u307e\u3059\uff0e\n\u305d\u3057\u3066\uff0c\u3044\u3088\u3044\u3088\u30e2\u30c7\u30eb\u3092Spawn \u3057\u307e\u3059\uff0e\ngazebo_ros\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3042\u308bspawn_model\u3092\u8d77\u52d5\u3057\u3066\u3044\u307e\u3059\uff0e\u300c\u30ed\u30dc\u30c3\u30c8\u3092\u8868\u793a\u3055\u305b\u308d\u300d\u3068\uff0cgazebo_ros\u306b\u30b5\u30fc\u30d3\u30b9\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u3063\u3066\u3044\u307e\u3059\uff0e\u5f15\u6570\u306f\u3082\u3061\u308d\u3093\uff0crobot_description\u3067\u3059.\u3053\u308c\u3067\uff0cGazebo\u306b\u30ed\u30dc\u30c3\u30c8\u304c\u51fa\u73fe\u3059\u308b\u306f\u305a\u3067\u3059\uff0e\nGazebo\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u898b\u308b\u3068\u3053\u306e\u8fba\u308a\u304c\u8a73\u3057\u304f\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\uff0e\n\nController\u3092\u8d77\u52d5\u3059\u308b\n\u3088\u3046\u3084\u304f\u6e96\u5099\u304c\u7d42\u308f\u308a\uff0c\u672c\u4e38\u306e\u8a71\u306b\u5165\u308a\u307e\u3059\uff0e\u5bfe\u8c61\u306f\u4e0b\u8a18\u56f3\u306e\u30d4\u30f3\u30af\u306e\u90e8\u5206\u3067\u3059\uff0e\n\n\u30ed\u30dc\u30c3\u30c8\u306e\u4e16\u754c\u3067\u3082bringup\u3068\u3044\u3046\u8868\u73fe\u3092\u4f7f\u3046\u306e\u304b\u3068(\u5b50\u4f9b\u304c\u80b2\u3064\uff0c\u7684\u306a\u5834\u9762\u3067\u4f7f\u308f\u308c\u308b\u3088\u3046\u306a\u6c17\u304c\u3059\u308b)\uff0c\u3069\u3046\u3067\u3082\u3088\u3044\u3053\u3068\u306b\u82e5\u5e72\u306e\u95a2\u5fc3\u3092\u793a\u3057\u3064\u3064\uff0c\u982d\u304b\u3089\u898b\u3066\u307f\u307e\u3059\uff0e\n\nrosbook_arm_bringup/launch/rosbook_arm_bringup.launch\n<launch>\n  <!-- Load default controllers -->\n  <include file=\"$(find rosbook_arm_controller_configuration)/launch/default_controllers.launch\"/>\n\n  <!-- Robot state publisher -->\n  <node pkg=\"robot_state_publisher\" type=\"robot_state_publisher\" name=\"robot_state_publisher\">\n    <param name=\"publish_frequency\" value=\"50.0\"/>\n    <param name=\"tf_prefix\"         value=\"\"/>\n  </node>\n\n  <!-- Motion planning -->\n  <include file=\"$(find rosbook_arm_moveit_config)/launch/move_group.launch\"/>\n\n  <!--\u7701\u7565-->\n</launch>\n\n\ndefault_controllers.launch\u3067Controller\u3092\u8d77\u52d5\u3057\u307e\u3059\uff0e\n\u305d\u306e\u5f8c\uff0crobot_state_publisher\u3068move_group\u3092\u8d77\u52d5\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u3053\u306f\u6df1\u5165\u308a\u3057\u306a\u304f\u3066\u3082\u826f\u3044\u306e\u3067\u3056\u3063\u304f\u308a\u3068\u89e3\u91c8\u3059\u308b\u3068\uff0c\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\uff0e\n\nrobot_state_publihser\n\n\n\nhardware_interface::JointStateInterface\u304cpublish\u3059\u308b/joint_states\u30c8\u30d4\u30c3\u30af\u3092subscribe\u3057\u3066\uff0cTF\u306e\u30d5\u30ec\u30fc\u30e0\u306b\u3088\u308d\u3057\u304f\u5909\u63db\u3057\u3066\u304f\u308c\u308b\u4eba\n\n\nmove_group.launch\n\n\n\u5f8c\u8005\u306f\u30a8\u30f3\u30c9\u30a4\u30d5\u30a7\u30af\u30bf\u306e\u7d4c\u8def\u8a08\u753b\u3068\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u3092\u53f8\u308bMoveit!\u306e\u30ce\u30fc\u30c9\u3092\u8d77\u52d5\u3057\u3066\u304f\u308c\u308b\u4eba\n\n\n\n\n\u3053\u3053\u3067\u30df\u30bd\u306a\u306e\u306fdefault_controllers.launch\u306a\u306e\u3067\uff0c\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u307e\u3059\uff0e\n\nrosbook_arm_controller_configuration/launch/default_controllers.launch\n<launch>\n  <!-- Joint state controller -->\n  <rosparam file=\"$(find joint_state_controller)/joint_state_controller.yaml\" command=\"load\"/>\n\n  <!-- Default controllers -->\n  <node pkg=\"controller_manager\" type=\"spawner\" name=\"default_controllers_spawner\"\n        args=\"joint_state_controller\n              arm_controller\n              gripper_controller\"/>\n</launch>\n\n\njoint_state_controller.yaml\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\uff0e\u3053\u308c\u306e\u4f4d\u7f6e\u3065\u3051\u306f\uff0c\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\uff0e\n\n\u5148\u307b\u3069\uff0cjoint_trajectory_controllers.yaml\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067position_controllers/JointTrajectoryController\u3092\u4f7f\u3046\u3053\u3068\u3092\u6307\u5b9a\u3057\u307e\u3057\u305f\uff0e\n\njoint_state_controller.yaml\u306f\uff0c\u305d\u308c\u306ejoint_state_controller/JointStateController\u7248\u3067\u3059\uff0e\n\n\nros_controllers/joint_state_controller/joint_state_controller.yaml\njoint_state_controller:\n  type: joint_state_controller/JointStateController\n  publish_rate: 50\n\n\n\u3053\u308c\u304cjoint_state_controller.yaml\u306e\u5168\u6587\u3067\u3059\uff0eJointStateController\u3067\u306f\u5168joint \u3092\u6271\u3046\u306e\u3067\uff0c\u7279\u5b9a\u306ejoint \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3088\u3046\u3067\u3059\uff0e\n\n\u305d\u3057\u3066\uff0cController\u3092Spawn \u3057\u307e\u3059\uff0e\u4e3b\u5f79\u306f\uff0ccontroller_manager\u30d1\u30c3\u30b1\u30fc\u30b8\u306espawner\u30ce\u30fc\u30c9\u3067\u3059\uff0e\u5f15\u6570\u306b\uff0choge_hoge_controller.yaml\u3067\u8a2d\u5b9a\u3057\u305f\u540d\u524d\u7a7a\u9593\u304c\u5165\u3063\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u540d\u524d\u7a7a\u9593\u306b\u3072\u3082\u4ed8\u3051\u3055\u308c\u305ftype\u7b49\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u53d6\u3063\u3066\uff0cController\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3088\u3046\u306b\uff0cControllerManager\u306b\u30b5\u30fc\u30d3\u30b9\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u307e\u3059\uff0e\n\u3053\u306e\u30ce\u30fc\u30c9\u306e\u6b63\u4f53\u306f\uff0cros_control/controller_manager/scripts/spawner\u3067\u3059\uff0e\u4e00\u5fdc\u8997\u3044\u3066\u307f\u307e\u3059\uff0e\n\ncontroller_manager/scripts/spawner\n# \u7701\u7565\ndef main():\n    # find yaml files to load\n# \u7701\u7565\n    controllers = []\n    for name in args.controllers:\n        if os.path.exists(name):\n            # load yaml file onto the parameter server, using the namespace specified in the yaml file\n            rosparam.set_param(\"\",open(name))\n            # list the controllers to be loaded\n            name_yaml = yaml.load(open(name))\n            for controller in name_yaml:\n                controllers.append(controller)\n        else:\n            controllers.append(name)\n\n    # load controllers\n    for name in controllers:\n        rospy.loginfo(\"Loading controller: \"+name)\n        resp = load_controller(name)\n        if resp.ok != 0:\n            loaded.append(name)\n        else:\n            time.sleep(1) # give error message a chance to get out\n            rospy.logerr(\"Failed to load %s\" % name)\n\n    rospy.loginfo(\"Controller Spawner: Loaded controllers: %s\" % ', '.join(loaded))\n\n    if rospy.is_shutdown():\n        return\n\n    # start controllers is requested\n    if autostart:\n        resp = switch_controller(loaded, [], 2)\n        if resp.ok != 0:\n            rospy.loginfo(\"Started controllers: %s\" % ', '.join(loaded))\n        else:\n            rospy.logerr(\"Failed to start controllers: %s\" % ', '.join(loaded))\n\n    rospy.spin()\n# \u7701\u7565\n\n\n\u30ce\u30fc\u30c9\u8d77\u52d5\u6642\u306b\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u305f\u540d\u524d\u7a7a\u9593\u540d(joint_state_controller, arm_controller\u7b49)\u3092\u5143\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\uff0cController\u306e\u7a2e\u985e(position_controllers/JointTrajectoryController\u7b49)\u3092\u8aad\u307f\u51fa\u3057\u307e\u3059\uff0e\nload_controller()\u3067\u306f\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u304b\u3089\u5f97\u305f\u60c5\u5831\u3092\u57fa\u306bController\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u6e96\u5099\u3092\u3059\u308b\u3088\u3046\uff0cControllerManager\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u307e\u3059\uff0e\u3053\u3053\u3067\u306f\uff0cGazeboRosControlPlugin\u5074\u3067\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u306e\u60c5\u5831\u3092\u5143\u306bHardwareInterface\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u3057\u307e\u3059\uff0eControllerManager\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067RobotHWSim\u306e\u60c5\u5831\u3092\u77e5\u3063\u3066\u3044\u308b\u3053\u3068\u306f\uff0c\u300c2. RobotHWSim\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u3064\u3044\u3066\u300d\u3067\u3082\u89e6\u308c\u307e\u3057\u305f\uff0e\n\u305d\u3057\u3066\uff0cswitch_controller()\u3068\u3044\u3046\u95a2\u6570\u306bController\u306e\u7a2e\u985e\u3092\u6e21\u3057\u3066\uff0cControllerManager\u306bController\u3092\u8d77\u52d5\u3055\u305b\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u3066\u3044\u307e\u3059\uff0e\n\nControllerManager\u3068HardwareInterface\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n\u3053\u3053\u3067\uff0cControllerManager\u3068HardwareInterface\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u3069\u3046\u884c\u3063\u3066\u3044\u308b\u306e\u304b\uff0c\u3061\u3087\u3063\u3068\u3060\u3051\u898b\u3066\u307f\u307e\u3059\uff0e\n\ncontroller_manager/src/controller_manager.cpp\n// \u7701\u7565\nnamespace controller_manager{\n// \u7701\u7565\nbool ControllerManager::loadController(const std::string& name)\n{\n// \u7701\u7565\n  boost::shared_ptr<controller_interface::ControllerBase> c;\n// \u7701\u7565\n  // Initializes the controller\n  try{\n// \u7701\u7565\n    initialized = c->initRequest(robot_hw_, root_nh_, c_nh, claimed_resources);\n  }\n// \u7701\u7565\n}\n// \u7701\u7565\n}\n\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\uff0c\u30b3\u30f3\u30c8\u30ed\u30fc\u30e91\u3064\u3092\u8aad\u307f\u8fbc\u3080\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\uff0e\nc\u306b\u306f\uff0cController\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5165\u308a\u307e\u3059\uff0eJointTrajectoryController\u3084JointStateController\u7b49\uff0c\u305d\u306e\u6642\u6307\u5b9a\u3055\u308c\u305fController\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5165\u3063\u3066\u3044\u307e\u3059\uff0e\u305d\u3057\u3066\uff0cc->initRequest()\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\uff0e\u4e2d\u3092\u898b\u3066\u307f\u307e\u3059\uff0e\n\ncontroller_interface/include/controller_interface/controller.h\nnamespace controller_interface\n{\n// \u7701\u7565\n  virtual bool initRequest(hardware_interface::RobotHW* robot_hw,\n                           ros::NodeHandle&             root_nh,\n                           ros::NodeHandle&             controller_nh,\n                           ClaimedResources&            claimed_resources)\n  {\n// \u7701\u7565\n    // get a pointer to the hardware interface\n    T* hw = robot_hw->get<T>();\n// \u7701\u7565\n    // return which resources are claimed by this controller\n    hw->clearClaims();\n    if (!init(hw, controller_nh) || !init(hw, root_nh, controller_nh))\n    {\n      ROS_ERROR(\"Failed to initialize the controller\");\n      return false;\n    }\n// \u7701\u7565\n  }\n}\n\n\nT* hw = robot_hw->get<T>();\u3067\uff0cHardwareInterface\u304c\u767b\u5834\u3057\u307e\u3059\uff0eT\u306fHardwareInterface\u306e\u578b\u304c\u5165\u308a\u307e\u3059\uff0eRobotHW\u304c\u30e1\u30f3\u30d0\u3068\u3057\u3066\u6301\u3063\u3066\u3044\u308bHardwareInterface\u578b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4e2d\u304b\u3089\uff0cT\u306e\u578b\u3092\u6301\u3063\u305f\u3082\u306e\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\uff0e\u78ba\u304b\u306b\u3053\u306e\u60c5\u5831\u304c\u3042\u308c\u3070\uff0cRobotHWSim\u3067\u3044\u3058\u304f\u308a\u56de\u3057\u3066\u3044\u305fjnt_pos_\u3084jnt_pos_cmd_\u7b49\u306e\u5024\u3092\uff0cControllerManger\u5074\u3067\u6271\u3048\u305d\u3046\u306a\u4e88\u611f\u304c\u3057\u307e\u3059\uff0e\n\u3053\u306e\u5148\u5c11\u3057\u8a71\u304c\u3084\u3084\u3053\u3057\u3044\u306e\u3067\uff0c\u9752\u5199\u771f\u7684\u306b\u30a4\u30e1\u30fc\u30b8\u56f3\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\uff0e\u767d\u629c\u304d\u77e2\u5370\u304c\u7d99\u627f\uff0c\u9ed2\u629c\u304d\u77e2\u5370\u304c\u30c7\u30fc\u30bf\u306e\u65b9\u5411\u3092\u8868\u3057\u307e\u3059\uff0e\n\n\nJointStateController\u306e\u5834\u5408\n\u3053\u306eT\u3064\u3044\u3066\u4f7f\u7528\u4f8b\u3092\u6319\u3052\u307e\u3059\uff0eJointStateController\u306e\u5834\u5408\u306f\uff0c\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u306e\u3067\uff0cT\u306b\u306fJointStateInterface\u304c\u5f53\u3066\u306f\u307e\u308a\u307e\u3059\uff0e\n\njoint_state_controller/include/joint_state_controller/joint_state_controller.h\nclass JointStateController: public controller_interface::Controller<hardware_interface::JointStateInterface>\n\n\n\u6c17\u306b\u306a\u308b\u306e\u306finit()\u3067\u3059\uff0e\u3053\u3053\u304c\u30df\u30bd\u306a\u306e\u306f\u9593\u9055\u3044\u306a\u3055\u305d\u3046\u3067\u3059\uff0e\u69cb\u9020\u304c\u5358\u7d14\u306aJointStateController\u3092\u4f8b\u306b\uff0cinit()\u306e\u4f8b\u3092\u898b\u3066\u307f\u307e\u3059\uff0e\n\njoint_state_controller/src/joint_state_controller.cpp\n// \u7701\u7565\nnamespace joint_state_controller\n{\n// \u7701\u7565\n  bool JointStateController::init(hardware_interface::JointStateInterface* hw,\n                                  ros::NodeHandle&                         root_nh,\n                                  ros::NodeHandle&                         controller_nh)\n  {\n    // get all joint names from the hardware interface\n    const std::vector<std::string>& joint_names = hw->getNames();\n    num_hw_joints_ = joint_names.size();\n    for (unsigned i=0; i<num_hw_joints_; i++)\n      ROS_DEBUG(\"Got joint %s\", joint_names[i].c_str());\n\n    // get publishing period\n    if (!controller_nh.getParam(\"publish_rate\", publish_rate_)){\n      ROS_ERROR(\"Parameter 'publish_rate' not set\");\n      return false;\n    }\n\n    // realtime publisher\n    realtime_pub_.reset(new realtime_tools::RealtimePublisher<sensor_msgs::JointState>(root_nh, \"joint_states\", 4));\n\n    // get joints and allocate message\n    for (unsigned i=0; i<num_hw_joints_; i++){\n      joint_state_.push_back(hw->getHandle(joint_names[i]));\n      realtime_pub_->msg_.name.push_back(joint_names[i]);\n      realtime_pub_->msg_.position.push_back(0.0);\n      realtime_pub_->msg_.velocity.push_back(0.0);\n      realtime_pub_->msg_.effort.push_back(0.0);\n    }\n    addExtraJoints(controller_nh, realtime_pub_->msg_);\n\n    return true;\n  }\n// \u7701\u7565\n}\n\n\nconst std::vector<std::string>& joint_names = hw->getNames();\u3067\uff0cRobotHWSim\u304c\u6301\u3063\u3066\u3044\u308b\u5168joint \u540d\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e\n\u305d\u306ejoint \u540d\u304b\u3089\u30cf\u30f3\u30c9\u30eb\u3092\u53d6\u5f97\u3057\uff0caddExtraJoints(controller_nh, realtime_pub_->msg_);\u3067\uff0cController\u5074\u306e\u30e1\u30f3\u30d0\u3067\u3042\u308bjoint_state_\u3068\uff0cHardwareInterface\u5074\u3067\u65e2\u306b\u4f5c\u6210\u3055\u308c\u3066\u3044\u308bjoint \u306e\u30cf\u30f3\u30c9\u30eb\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u3044\u307e\u3059\uff0e\u4ee5\u964d\uff0cJointStateController\u306f\u81ea\u7531\u306bjoint \u306e\u72b6\u614b(RobotHWSim\u306ejnt_pos_\u7b49\u306e\u5024)\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\u3053\u308c\u3067JointStateController\u304c\uff0cJointStateInterface\u3092\u4ecb\u3057\u3066\uff0cRobotHWSim\u3068\u7e4b\u304c\u3063\u305f\u308f\u3051\u3067\u3059\uff0e\u7d0d\u5f97\u3067\u3059\uff01\n\u98db\u3070\u3057\u307e\u3057\u305f\u304c\uff0crealtime_pub_.reset(new realtime_tools::RealtimePublisher<sensor_msgs::JointState>(root_nh, \"joint_states\", 4));\u3067publisher\u304c\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\uff0e\u3064\u3044\u3067\u306b\uff0cJointStateInterface\u306eupdate()\u30e1\u30bd\u30c3\u30c9\u3082\u898b\u3066\u307f\u307e\u3059\uff0e\n\njoint_state_controller/src/joint_state_controller.cpp\n// \u7701\u7565\n  void JointStateController::update(const ros::Time& time, const ros::Duration& /*period*/)\n  {\n    // limit rate of publishing\n    if (publish_rate_ > 0.0 && last_publish_time_ + ros::Duration(1.0/publish_rate_) < time){\n\n      // try to publish\n      if (realtime_pub_->trylock()){\n        // we're actually publishing, so increment time\n        last_publish_time_ = last_publish_time_ + ros::Duration(1.0/publish_rate_);\n\n        // populate joint state message:\n        // - fill only joints that are present in the JointStateInterface, i.e. indices [0, num_hw_joints_)\n        // - leave unchanged extra joints, which have static values, i.e. indices from num_hw_joints_ onwards\n        realtime_pub_->msg_.header.stamp = time;\n        for (unsigned i=0; i<num_hw_joints_; i++){\n          realtime_pub_->msg_.position[i] = joint_state_[i].getPosition();\n          realtime_pub_->msg_.velocity[i] = joint_state_[i].getVelocity();\n          realtime_pub_->msg_.effort[i] = joint_state_[i].getEffort();\n        }\n        realtime_pub_->unlockAndPublish();\n      }\n    }\n  }\n// \u7701\u7565\n\n\n/joint_states\u30c8\u30d4\u30c3\u30af\u3092publish\u3059\u308b\u51e6\u7406\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\n\nJointTrajectoryController\u306e\u5834\u5408\nposition_controllers/JointTrajectoryController\u3067\u3082\uff0c\u5927\u304d\u306a\u6d41\u308c\u306f\u540c\u3058\u3088\u3046\u3067\u3059\uff0einit()\u3067joint\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3044\uff0cupdate()\u3067\u6307\u4ee4\u5024\u3092\u66f4\u65b0\u3057\u3066\u3044\u307e\u3059\uff0e\n\u305f\u3060\uff0cJointTrajectoryController\u81ea\u4f53\u306f\uff0c\u4f4d\u7f6e\u3067\u3082\u901f\u5ea6\u3067\u3082\u529b\u3067\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\uff0c\u3069\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u6765\u3066\u3082\u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\uff0c\u30af\u30e9\u30b9\u306e\u5ba3\u8a00\u6642\u306f\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u3067\u3042\u308bHardwareInteface\u3092T\u3068\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\uff0e\u305f\u3060\u3057\uff0cposition_controllers/JointTrajectoryController\u306e\u5834\u5408\u306f\uff0c\u4f4d\u7f6e\u6307\u4ee4\u3067\u8ecc\u9053\u30b3\u30de\u30f3\u30c9\u3092\u53d7\u3051\u53d6\u308b\u4ed5\u69d8\u3068\u306a\u3063\u3066\u304a\u308a\uff0c\u5bfe\u5fdc\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306fPositionJointInterface\u3068\u306a\u308b\u3088\u3046\u3067\u3059\uff0e\u79c1\u306e\u529b\u4e0d\u8db3\u306b\u3088\u308a\uff0c\u3053\u3053\u306e\u89e3\u6790\u306f\u3057\u304d\u308c\u307e\u305b\u3093\u3067\u3057\u305f\uff0e\n\u3072\u3068\u307e\u305a\u5148\u306b\u9032\u3081\u307e\u3059\uff0e\n\njoint_trajectory_controller/include/joint_trajectory_controller/joint_trajectory_controller_impl.h\n// \u7701\u7565\nbool JointTrajectoryController<SegmentImpl, HardwareInterface>::init(HardwareInterface* hw,\n                                                                     ros::NodeHandle&   root_nh,\n                                                                     ros::NodeHandle&   controller_nh)\n{\n// \u7701\u7565\n  // List of controlled joints\n  joint_names_ = getStrings(controller_nh_, \"joints\");\n  if (joint_names_.empty()) {return false;}\n  const unsigned int n_joints = joint_names_.size();\n\n  // URDF joints\n  boost::shared_ptr<urdf::Model> urdf = getUrdf(root_nh, \"robot_description\");\n// \u7701\u7565\n  std::vector<UrdfJointConstPtr> urdf_joints = getUrdfJoints(*urdf, joint_names_);\n// \u7701\u7565\n  for (unsigned int i = 0; i < n_joints; ++i)\n  {\n    // Joint handle\n    try {joints_[i] = hw->getHandle(joint_names_[i]);}\n// \u7701\u7565\n    // Whether a joint is continuous (ie. has angle wraparound)\n    angle_wraparound_[i] = urdf_joints[i]->type == urdf::Joint::CONTINUOUS;\n// \u7701\u7565\n  }\n// \u7701\u7565\n  // Hardware interface adapter\n  hw_iface_adapter_.init(joints_, controller_nh_);\n// \u7701\u7565\n}\n// \u7701\u7565\n\n\n\u3059\u3079\u3066\u306ejoint \u540d\u3092\u53d6\u5f97\u3059\u308b\u306e\u3067\u306f\u306a\u304f\uff0cjoint_trajectory_controllers.yaml\u5185\u3067joints\u3068\u3057\u3066\u767b\u9332\u3057\u305fjoint\u540d\u3060\u3051\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0eurdf_joints\u3092\u53d6\u3063\u3066\u304d\u3066\u3044\u308b\u306e\u306f\uff0cURDF\u5185\u3067\u5b9a\u7fa9\u3057\u305fjoint\u306e\u7a2e\u985e(continuous\u7b49)\u306b\u3088\u3063\u3066\u6319\u52d5\u3092\u5909\u3048\u308b\u305f\u3081\u306e\u3088\u3046\u3067\u3059\uff0e\nhw_iface_adapter_.init()\u3067\uff0cController\u3068joint \u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u3057\u3066\u3044\u307e\u3059\uff0e\n\njoint_trajectory_controller/include/joint_trajectory_controller/joint_trajectory_controller_impl.h\n// \u7701\u7565\nvoid JointTrajectoryController<SegmentImpl, HardwareInterface>::\nupdate(const ros::Time& time, const ros::Duration& period)\n{\n// \u7701\u7565\n  // Update current state and state error\n  for (unsigned int i = 0; i < joints_.size(); ++i)\n  {\n    current_state_.position[i] = joints_[i].getPosition();\n    current_state_.velocity[i] = joints_[i].getVelocity();\n    // There's no acceleration data available in a joint handle\n\n    state_error_.position[i] = desired_state_.position[i] - current_state_.position[i];\n    state_error_.velocity[i] = desired_state_.velocity[i] - current_state_.velocity[i];\n    state_error_.acceleration[i] = 0.0;\n  }\n// \u7701\u7565\n  // Hardware interface adapter: Generate and send commands\n  hw_iface_adapter_.updateCommand(time_data.uptime, time_data.period,\n                                  desired_state_, state_error_);\n\n  // Publish state\n  publishState(time_data.uptime);\n}\n// \u7701\u7565\n\n\nupdate()\u30e1\u30bd\u30c3\u30c9\u306f\uff0c\u73fe\u5728\u306ejoint \u306e\u72b6\u614b\u3092\u66f4\u65b0\u3057\u3066\u76ee\u6a19\u5024\u3068\u306e\u5dee\u5206\u3092\u8a08\u7b97\u3057\u305f\u5f8c\uff0chw_iface_adapter_.updateCommand()\u3067\u6307\u4ee4\u5024(jnt_pos_cmd_)\u3092\u66f4\u65b0\u3057\u307e\u3059\uff0e\nJointTrajectoyController\u304c\uff0c\u4f8b\u3048\u3070Moveit!\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308c\u3070\uff0c\u4e0a\u8a18\u30d5\u30ed\u30fc\u3092\u7d4c\u7531\u3057\u3066Gazebo\u307e\u3067\u6307\u4ee4\u304c\u9001\u308a\u5c4a\u3051\u3089\u308c\u307e\u3059\uff0e\n\n\u30a4\u30e1\u30fc\u30b8\u56f3\n\n\u4ee5\u4e0a\u3067\u5927\u4f53\u8ffd\u3048\u305f\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u307e\u3068\u3081\n\u5192\u982d\u306b\u8a18\u8f09\u3057\u305f\uff0c\u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\u306e\u56f3\u3092\u518d\u63b2\u3057\u307e\u3059\uff0e\n\n\u6700\u5f8c\u306b\u3053\u308c\u3092\u632f\u308a\u8fd4\u308b\u3068\uff0c\u5168\u4f53\u304c\u7e4b\u304c\u3063\u3066\u3044\u308b\u3093\u3060\u306a\u3063\u3066\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\n\n\u7d42\u308f\u308a\u306b\n\u521d\u3081\u3066ros_control\u306eController\u3068HardwareInterface\u306e\u8a2d\u5b9a\u3092\u898b\u305f\u6642\uff0c\u305d\u306e\u95a2\u4fc2\u304c\u63b4\u3081\u305a\u3042\u3063\u3051\u306b\u3068\u3089\u308c\u3066\u3044\u307e\u3057\u305f\u304c\uff0c\u3088\u3046\u3084\u304f\u30af\u30ea\u30a2\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\u8a73\u7d30\u306b\u306f\u773c\u3092\u3064\u3080\u308a\u307e\u3057\u305f\u304c\uff0c\u6d41\u308c\u3092\u7406\u89e3\u3059\u308b\u306b\u306f\u5341\u5206\u3068\u5224\u65ad\u3057\u307e\u3057\u305f\uff0e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u81ea\u4f5c\u3059\u308b\u3068\u304d\u306b\u3082\uff0c\u3069\u3053\u3092\u89e6\u308c\u3070\u3044\u3044\u306e\u304b\u5927\u4f53\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\u500b\u3005\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u72ec\u7acb\u3057\u3066\u3044\u3066\uff0c\u500b\u3005\u306e\u8981\u7d20\u306f\u500b\u5225\u306b\u4ea4\u63db\u304c\u53ef\u80fd\u3067\u3059\uff0e\u65e2\u5b58\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u306f\u7269\u8db3\u308a\u306a\u3044\uff0c\u3061\u3087\u3063\u3068\u5909\u3048\u305f\u3044\uff0c\u3068\u3044\u3046\u3068\u3053\u308d\u3060\u3051\u30d7\u30e9\u30b0\u30a4\u30f3\u5316\u3057\u3066\u3057\u307e\u3048\u3070\uff0c\u81ea\u5206\u4ed5\u69d8\u306e\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u304c\u51fa\u6765\u4e0a\u304c\u308a\u307e\u3059\uff0e\u4eca\u56de\u306e\u53d6\u7d44\u307f\u3067\uff0cROS\u306b\u3088\u308b\u5206\u6563\u958b\u767a\u306e\u826f\u3055\u306b\u3064\u3044\u3066\uff0c\u7406\u89e3\u3092\u6df1\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\uff0eROS\u3092\u5b66\u3076\u3053\u3068\u306e\u826f\u3055\u306e\u4e00\u3064\u3057\u3066\uff0c\u30ed\u30dc\u30c3\u30c8\u958b\u767a\u306e\u5de8\u4eba\u304c\u57f9\u3063\u305f\u30ce\u30a6\u30cf\u30a6\u306e\u96c6\u5927\u6210\u3092\u60dc\u3057\u307f\u306a\u304f\u898b\u305b\u3066\u3082\u3089\u3048\u308b\u3053\u3068\u304c\u6319\u3052\u3089\u308c\u308b\u306a\u3041\uff0c\u3068\u611f\u3058\u305f\u6b21\u7b2c\u3067\u3059\uff0e\n\u3053\u306e\u8a2d\u8a08\u601d\u60f3\u306f\uff0c\u30ed\u30dc\u30c3\u30c8\u306b\u9650\u3089\u305a\u4e00\u822c\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3078\u3082\u9069\u7528\u3067\u304d\u308b\u3067\u3057\u3087\u3046\uff0e\u4eca\u5f8c\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u3067\u306a\u306b\u304b\u56f0\u3063\u305f\u3053\u3068\u304c\u3042\u3063\u305f\u3089\uff0cROS\u304b\u3089\u5b66\u3070\u305b\u3066\u9802\u304f\u3053\u3068\u306f\u306a\u3044\u304b\uff0c\u3068\u601d\u3044\u3092\u99b3\u305b\u3066\u307f\u3088\u3046\u601d\u3044\u307e\u3059\uff0e\n\n# \u76ee\u6b21\n1. [\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9\u3068\u767b\u9332](http://qiita.com/MoriKen/items/613635b90f3a98042dc5)\n 1. `URDF`\u3067\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\n 1. `HardwareInterface`\u306e\u5b58\u5728\u610f\u7fa9\n 1. `URDF`\u3067`Gazebo`\u306e\u8a2d\u5b9a\u3092\u3059\u308b\n 1. \u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u306b\u767b\u9332\u3059\u308b\n1. [`RobotHWSim`\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u3064\u3044\u3066](http://qiita.com/MoriKen/items/5cab7436c1b36c25e0ce)\n 1. \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u5b9a\u7fa9\n 1. \u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u308b\u5834\u6240\n 1. `RobotHWSin`\u3068`RobotHW`\u3068\u306e\u5bfe\u6bd4\n 1. \u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b \n 1. `DefaultRobotHWSim`\u306b\u3064\u3044\u3066\n1. [`Controller`\u306b\u3064\u3044\u3066](http://qiita.com/MoriKen/items/c29f653d03baffe5f0e2)\u3000\u2190\u3000\u30a4\u30de\u30b3\u30b3\n 1. `Gazebo`\u306b\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u3092Spawn\u3059\u308b\n 1. `Controller`\u3092\u8d77\u52d5\u3059\u308b\n 1. `ControllerManager`\u3068`HardwareInterface`\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n\n# \u304a\u984c\n- \u66f8\u7c4d\n - [Learning ROS for Robotics Programming - Second Edition](http://www.amazon.co.jp/Learning-ROS-Robotics-Programming-Edition-ebook/dp/B00YSIL6VM) `Chapter 10: Manipulation with MoveIt!`<br/>\n<img src=\"https://qiita-image-store.s3.amazonaws.com/0/110138/92e03e5e-dce8-008b-19a2-00ecafd6fbec.jpeg\" data-canonical-src=\"http://www.amazon.co.jp/Learning-ROS-Robotics-Programming-Edition-ebook/dp/B00YSIL6VM\" width=\"20%\" />\n<br /><br />\n\n- \u30ea\u30dd\u30b8\u30c8\u30ea\n - [github: AaronMR/Learning_ROS_for_Robotics_Programming_2nd_edition](https://github.com/AaronMR/Learning_ROS_for_Robotics_Programming_2nd_edition)\n\n# \u306f\u3058\u3081\u306b\n\u300c[1. \u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9\u3068\u767b\u9332](http://qiita.com/MoriKen/items/613635b90f3a98042dc5)\u300d\u3068\u300c2. [RobotHWSim\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u3064\u3044\u3066](http://qiita.com/MoriKen/items/5cab7436c1b36c25e0ce)\u300d\u3067\uff0c\u4e0b\u8a18\u56f3\u306e\u9752\u8272\u3067\u56f2\u3063\u305f\u90e8\u5206\u306e\u304a\u8a71\u304c\u7d42\u308f\u308a\u307e\u3057\u305f\uff0e\u4eca\u56de\u306f\uff0c\u540c\u56f3\u5185\u306e\u30d4\u30f3\u30af\u3067\u56f2\u3063\u305f\u90e8\u5206\u306e\u304a\u8a71\u306b\u79fb\u308a\u307e\u3059\uff0e\n![RobotHWSim_HardwareInterface_ControllerManager.png](https://qiita-image-store.s3.amazonaws.com/0/110138/004aa973-33fc-d5f6-d751-e4e91021fdfc.png)\n\n\u672c\u8a18\u4e8b\u7528\u306e\u307e\u3068\u3081\u306e\u56f3\u306b\u304a\u3044\u3066\u306f\uff0c\u4e0b\u8a18\u306e\u7dd1\u3067\u56f2\u3063\u305f\u7b87\u6240\u3067\u3059\uff0e\n![3.summary.png](https://qiita-image-store.s3.amazonaws.com/0/110138/0b451b97-b2d0-5ad7-c701-c04f6b1e70a7.png)\n\n\n\u305f\u3060\uff0c\u3044\u304d\u306a\u308a`Controller`\u4e91\u3005\u306e\u8a71\u304b\u3089\u59cb\u3081\u308b\u30b9\u30bf\u30a4\u30eb\u306f\u53d6\u308a\u307e\u305b\u3093\uff0e`Gazebo`\u3092\u8d77\u52d5\u3059\u308blaunch\u30d5\u30a1\u30a4\u30eb\u3092\u8d77\u70b9\u306b\uff0c\u3069\u3093\u306a\u30d5\u30a1\u30a4\u30eb\u304c\u4f55\u306e\u305f\u3081\u306b\u8aad\u307f\u8fbc\u307e\u308c\u308b\u306e\u304b\u3092\u7d10\u89e3\u304d\u306a\u304c\u3089\uff0c\u5f90\u3005\u306b`Controller`\u306e\u4e2d\u8eab\u3092\u898b\u3066\u3044\u304f\u30b9\u30bf\u30a4\u30eb\u3092\u53d6\u308a\u307e\u3059\uff0e\n\n# launch\u30d5\u30a1\u30a4\u30eb\u306e\u69cb\u9020\n\u6700\u3082\u5358\u7d14\u306a\u8d77\u52d5\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b`rosbook_arm_empty_world.launch`\u3092\u8d77\u70b9\u306b\uff0c\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3092\u53d6\u3063\u3066\u3044\u307e\u3059\uff0e<br />\n![gazebo_file_structure.png](https://qiita-image-store.s3.amazonaws.com/0/110138/9ad4a403-a175-c564-72ac-01fb078fc3d6.png)\n\n\n\u3053\u308c\u3092\u9806\u756a\u306b\u898b\u3066\u3044\u304d\u307e\u3059\uff0e\n\n```xml:rosbook_arm_gazebo/launch/rosbook_arm_empty_world.launch\n<launch>\n  <include file=\"$(find rosbook_arm_gazebo)/launch/rosbook_arm_gazebo.launch\">\n    <arg name=\"world\" default=\"empty\"/>\n  </include>\n</launch>\n```\n\nempty_world \u3067`Gazebo`\u3092\u8d77\u52d5\u3059\u308b\u3088\u3046\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\u6b21\u306e`rosbook_arm_gazebo.launch`\u306b\u884c\u304d\u307e\u3059\uff0e\n\n```xml:rosbook_arm_gazebo/launch/rosbook_arm_gazebo.launch\n<launch>\n  <arg name=\"world\" default=\"empty\"/>\n  <arg name=\"robot\" default=\"base\"/>\n  <arg name=\"gzpose\" default=\"-x 0 -y 0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0\"/>\n  <!--\u7701\u7565-->\n  <!-- Start up world -->\n  <include file=\"$(find gazebo_ros)/launch/empty_world.launch\">\n    <arg name=\"world_name\" default=\"$(find rosbook_arm_gazebo)/worlds/$(arg world).world\"/>\n    <arg name=\"gui\" default=\"$(arg gui)\"/>\n    <arg name=\"debug\" default=\"$(arg debug)\"/>\n  </include>\n\n  <!-- Spawn robot in simulation -->\n  <include file=\"$(find rosbook_arm_gazebo)/launch/rosbook_arm_spawn.launch\">\n    <arg name=\"robot\"  value=\"$(arg robot)\"/>\n    <arg name=\"gzpose\" value=\"$(arg gzpose)\"/>\n  </include>\n\n  <!-- Bring up robot -->\n  <include file=\"$(find rosbook_arm_bringup)/launch/rosbook_arm_bringup.launch\"/>\n</launch>\n```\nworld\u306e\u8d77\u52d5\u3001`Gazebo`\u4e0a\u3078\u306e\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u306eSpawn(`rosbook_arm_gazebo/launch/rosbook_arm_spawn.launch`)\u3001`Controller`\u306e\u8d77\u52d5(`rosbook_arm_bringup/launch/rosbook_arm_bringup.launch`)\u3092\u884c\u3044\u307e\u3059\uff0eworld\u306e\u8d77\u52d5\u306f\u3053\u3053\u3067\u306f\u91cd\u8981\u3067\u306f\u306a\u3044\u306e\u3067Spawn\u304b\u3089\u884c\u304d\u307e\u3059\uff0e\n\u5b9f\u306fSpawn\u81ea\u4f53\u3082\uff0c\u3053\u3053\u306e\u4e3b\u984c\u3092\u8003\u3048\u308b\u4e0a\u3067\u306f\u3042\u307e\u308a\u91cd\u8981\u3067\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\u3057\u304b\u3057\uff0c\u305d\u3053\u306b\u884c\u304d\u7740\u304f\u904e\u7a0b\u3067`Controller`\u306b\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u7b87\u6240\u304c\u3042\u308a\u307e\u3059\uff0e\u5b9f\u6a5f\u3068`Gazebo`\u3092\u5207\u308a\u66ff\u3048\u308b\u30b7\u30b9\u30c6\u30e0\u3092\u7d44\u3080\u6642\u306e\u30ce\u30a6\u30cf\u30a6\u306b\u3082\u306a\u308b\u306e\u3067\uff0c\u3053\u3053\u3082\u8ffd\u3063\u3066\u304a\u304f\u3079\u304d\u3068\u5224\u65ad\u3057\u307e\u3057\u305f\uff0e\n\n# `Gazebo`\u306b\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u3092Spawn \u3059\u308b\n\u5bfe\u8c61\u306f\u4e0b\u8a18\u56f3\u306e\u30d4\u30f3\u30af\u90e8\u5206\u3067\u3059\uff0e\n![gazebo_file_structure_spawn.png](https://qiita-image-store.s3.amazonaws.com/0/110138/ea710f32-3b00-1163-6e97-09a945270572.png)\n\n\n\u3067\u306f\uff0c\u5bfe\u8c61\u7bc4\u56f2\u306e\u982d\u3067\u3042\u308b`rosbook_arm_spawn.launch`\u304b\u3089\u898b\u3066\u307f\u307e\u3059\uff0e\n\n```xml:rosbook_arm_gazebo/launch/rosbook_arm_spawn.launch\n<launch>\n  <arg name=\"robot\" default=\"base\"/>\n  <arg name=\"gzpose\" default=\"-x 0 -y 0 -z 0.0 -R 0.0 -P 0.0 -Y 0.0\"/>\n\n  <!-- PID gains -->\n  <rosparam file=\"$(find rosbook_arm_controller_configuration_gazebo)/config/pids.yaml\" command=\"load\"/>\n\n  <!-- Joint trajectory controllers -->\n  <rosparam file=\"$(find rosbook_arm_controller_configuration_gazebo)/config/joint_trajectory_controllers.yaml\" command=\"load\"/>\n\n  <!-- Robot model -->\n  <include file=\"$(find rosbook_arm_description)/robots/upload_rosbook_arm.launch\">\n    <arg name=\"robot\" default=\"$(arg robot)\"/>\n  </include>\n\n  <!-- Spawn robot in Gazebo -->\n  <node pkg=\"gazebo_ros\" type=\"spawn_model\" name=\"spawn_model\"\n        args=\"-urdf -param robot_description $(arg gzpose) -model rosbook_arm\"/>\n</launch>\n```\n\n\u307e\u305a\uff0c\u3044\u304f\u3064\u304b`yaml`\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\uff0e`pids.yaml`\u3068\uff0c`joint_trajectory_controllers.yaml`\u3067\u3059\uff0e\u3044\u304b\u306b\u3082`Controller`\u5411\u3051\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u305d\u3046\u306a\u540d\u524d\u3067\u3059\uff0e\u4e2d\u3092\u8997\u3044\u3066\u307f\u307e\u3059\uff0e\u4f8b\u306b\u3088\u3063\u3066\uff0c`shoulder_joint`\u3060\u3051\u3092\u5bfe\u8c61\u306b\u8ffd\u3063\u3066\u3044\u304d\u307e\u3059\uff0e\n\n```yaml:rosbook_arm_controller_configuration_gazebo/config/pids.yaml\ngains:\n  shoulder_joint:  {p: 1000.0, d: 10.0, i: 0.01, i_clamp: 3.0}\n  #\u7701\u7565\n```\n\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u3067\u306f\uff0cjoint \u306e\u5236\u5fa1\u30b2\u30a4\u30f3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\n\n```yaml:rosbook_arm_controller_configuration_gazebo/config/joint_trajectory_controllers.yaml\narm_controller:\n  type: position_controllers/JointTrajectoryController\n  joints:\n    - shoulder_joint\n  #\u7701\u7565\n\ngripper_controller:\n  #\u7701\u7565\n```\n\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u3067\u306f\uff0c\u4f7f\u7528\u3059\u308b`Controller`\u306e\u7a2e\u985e\u3068\uff0c\u305d\u308c\u3092\u9069\u7528\u3059\u308bjoint \u306e\u5bfe\u5fdc\u4ed8\u3051\u3092\u884c\u3044\u307e\u3059\uff0e\n\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u306f\uff0c`arm_controller`\u3068\u3044\u3046\u540d\u524d\u7a7a\u9593\u3092\u6307\u5b9a\u3057\uff0c`position_controllers/JointTrajectoryController`\u3068\u3044\u3046`Controller`\u3092\u4f7f\u3046\u3053\u3068\u3068\uff0c\u305d\u308c\u306b\u5bfe\u3057\u3066`shoulder_joint`\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\uff0e\u672c\u5f53\u306f\uff0c\u3053\u308c\u4ee5\u5916\u306ejoint \u3082\u5272\u308a\u5f53\u3066\u3066\u3044\u308b\u3057\uff0c\u305d\u306e\u4ed6\u5236\u7d04\u306b\u95a2\u3059\u308b\u8a2d\u5b9a\u3082\u8a18\u8ff0\u3055\u308c\u3066\u304a\u308a\u307e\u3059\u304c\uff0c\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\uff0e\n\n\n- \u5c11\u3057\u5bc4\u308a\u9053\u3092\u3057\u307e\u3059\uff0e\n - \u306f\u3058\u3081\uff0c\u4e0a\u8a18`yaml`\u30d5\u30a1\u30a4\u30eb\u3092\u3053\u3053\u3067\u8aad\u307f\u8fbc\u3080\u3053\u3068\u306b\u9055\u548c\u611f\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\u73fe\u5728\u5bfe\u8c61\u3068\u3057\u3066\u3044\u308b`rosbook_arm_spawn.launch`\u3067\u306f\uff0c\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u3092`Gazebo`\u306bSpawn\u3059\u308b\u3053\u3068\u304c\u4e3b\u984c\u306e\u306f\u305a\u306a\u306e\u306b\uff0c\u3053\u3053\u3067\u7a81\u7136`Controller`\u306b\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u51fa\u308b\u306e\u306f\u4f55\u6545\u3060\uff1f\u3068\u601d\u3063\u305f\u304b\u3089\u3067\u3059\uff0e\n - \u3057\u304b\u3057\uff0c\u6b21\u306e\u3088\u3046\u306b\u8003\u3048\u308c\u3070\uff0c\u3053\u308c\u306b\u610f\u5473\u306f\u3042\u308a\u305d\u3046\u3067\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u5b9f\u6a5f\u3068`Gazebo`\u306e\u30e2\u30c7\u30eb\u304c\u4e21\u65b9\u63c3\u3063\u3066\u304a\u308a\uff0c\u5207\u308a\u66ff\u3048\u3066\u4f7f\u3048\u308b\u72b6\u6cc1\u4e0b\u3067\u306f\uff0c\u305d\u308c\u305e\u308c\u306e\u5834\u5408\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u305f\u3044\u3068\u3044\u3046\u8981\u6c42\u304c\u3042\u308b\u306f\u305a\u3067\u3059\uff0e\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u3068\u5b9f\u6a5f\u306e\u5236\u5fa1\u30b2\u30a4\u30f3\u304c\u4e00\u81f4\u3059\u308b\u306a\u3093\u3066\u3053\u3068\u306f\uff0c\u901a\u5e38\u306f\u3042\u308a\u3048\u306a\u3044\u305f\u3081\u3067\u3059\uff0e\n\n\n\u3067\u306f\uff0c\u8a71\u3092\u623b\u3057\u307e\u3059\uff0e\u6b21\u306b\uff0c`upload_rosbook_arm.launch`\u3092\u898b\u3066\u307f\u307e\u3059\uff0e\n\n```xml:rosbook_arm_description/robots/upload_rosbook_arm.launch\n<launch>\n  <arg name=\"robot\" default=\"base\"/>\n\n  <!-- Load URDF into ROS param server -->\n  <param name=\"robot_description\" command=\"$(find xacro)/xacro\n    '$(find rosbook_arm_description)/robots/rosbook_arm_$(arg robot).urdf.xacro'\"/>\n\n  <!-- Joint limits -->\n  <rosparam file=\"$(find rosbook_arm_description)/config/joint_limits.yaml\" command=\"load\"/>\n</launch>\n```\n\n\u4ee5\u524d\u306e\u30a8\u30f3\u30c8\u30ea\u3067\uff0c`demo.launch`\u3067`robot_description`\u306b\u30e2\u30c7\u30eb\u3092\u767b\u9332\u3059\u308b\u8a18\u8ff0\u304c\u3042\u308a\u307e\u3057\u305f\u304c\uff0c\u3042\u308c\u306f`Gazebo`\u3092\u629c\u304d\u306b\u3057\u305f\u7c21\u6613\u78ba\u8a8d\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u306a\u306e\u3067\uff0c\u3053\u3053\u3067\u306f\u4e0d\u8981\u3067\u3059\uff0e`Gazebo`\u3092\u4f7f\u3046\u5834\u5408\u306f\uff0c`upload_rosbook_arm.launch`\u3092\u8d77\u52d5\u3059\u308c\u3070\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u304c\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u306b\u767b\u9332\u3055\u308c\u307e\u3059\uff0e\n\n\u305d\u306e\u5f8c`joint_limits.yaml`\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u304c\uff0c\u95a2\u7bc0\u901f\u5ea6\u3084\u52a0\u901f\u5ea6\u306e\u30ea\u30df\u30c3\u30c8\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u3053\u306f\u8ffd\u308f\u306a\u304f\u3066\u3082\u4e3b\u984c\u306b\u5f71\u97ff\u3057\u306a\u3044\u306e\u3067\uff0c\u5272\u611b\u3057\u307e\u3059\uff0e\n\n\u305d\u3057\u3066\uff0c\u3044\u3088\u3044\u3088\u30e2\u30c7\u30eb\u3092Spawn \u3057\u307e\u3059\uff0e\n`gazebo_ros`\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3042\u308b`spawn_model`\u3092\u8d77\u52d5\u3057\u3066\u3044\u307e\u3059\uff0e\u300c\u30ed\u30dc\u30c3\u30c8\u3092\u8868\u793a\u3055\u305b\u308d\u300d\u3068\uff0c`gazebo_ros`\u306b\u30b5\u30fc\u30d3\u30b9\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u3063\u3066\u3044\u307e\u3059\uff0e\u5f15\u6570\u306f\u3082\u3061\u308d\u3093\uff0c`robot_description`\u3067\u3059.\u3053\u308c\u3067\uff0c`Gazebo`\u306b\u30ed\u30dc\u30c3\u30c8\u304c\u51fa\u73fe\u3059\u308b\u306f\u305a\u3067\u3059\uff0e\n[Gazebo\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://gazebosim.org/tutorials?tut=ros_roslaunch#UsingroslaunchtoSpawnURDFRobots)\u3092\u898b\u308b\u3068\u3053\u306e\u8fba\u308a\u304c\u8a73\u3057\u304f\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\uff0e\n\n# `Controller`\u3092\u8d77\u52d5\u3059\u308b\n\u3088\u3046\u3084\u304f\u6e96\u5099\u304c\u7d42\u308f\u308a\uff0c\u672c\u4e38\u306e\u8a71\u306b\u5165\u308a\u307e\u3059\uff0e\u5bfe\u8c61\u306f\u4e0b\u8a18\u56f3\u306e\u30d4\u30f3\u30af\u306e\u90e8\u5206\u3067\u3059\uff0e\n![gazebo_file_structure_controller.png](https://qiita-image-store.s3.amazonaws.com/0/110138/e4f08ba2-5c3e-ad74-2f06-8dd2096f933f.png)\n\n\u30ed\u30dc\u30c3\u30c8\u306e\u4e16\u754c\u3067\u3082`bringup`\u3068\u3044\u3046\u8868\u73fe\u3092\u4f7f\u3046\u306e\u304b\u3068(\u5b50\u4f9b\u304c\u80b2\u3064\uff0c\u7684\u306a\u5834\u9762\u3067\u4f7f\u308f\u308c\u308b\u3088\u3046\u306a\u6c17\u304c\u3059\u308b)\uff0c\u3069\u3046\u3067\u3082\u3088\u3044\u3053\u3068\u306b\u82e5\u5e72\u306e\u95a2\u5fc3\u3092\u793a\u3057\u3064\u3064\uff0c\u982d\u304b\u3089\u898b\u3066\u307f\u307e\u3059\uff0e\n\n```xml:rosbook_arm_bringup/launch/rosbook_arm_bringup.launch\n<launch>\n  <!-- Load default controllers -->\n  <include file=\"$(find rosbook_arm_controller_configuration)/launch/default_controllers.launch\"/>\n\n  <!-- Robot state publisher -->\n  <node pkg=\"robot_state_publisher\" type=\"robot_state_publisher\" name=\"robot_state_publisher\">\n    <param name=\"publish_frequency\" value=\"50.0\"/>\n    <param name=\"tf_prefix\"         value=\"\"/>\n  </node>\n\n  <!-- Motion planning -->\n  <include file=\"$(find rosbook_arm_moveit_config)/launch/move_group.launch\"/>\n\n  <!--\u7701\u7565-->\n</launch>\n```\n\n`default_controllers.launch`\u3067`Controller`\u3092\u8d77\u52d5\u3057\u307e\u3059\uff0e\n\u305d\u306e\u5f8c\uff0c`robot_state_publisher`\u3068`move_group`\u3092\u8d77\u52d5\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u3053\u306f\u6df1\u5165\u308a\u3057\u306a\u304f\u3066\u3082\u826f\u3044\u306e\u3067\u3056\u3063\u304f\u308a\u3068\u89e3\u91c8\u3059\u308b\u3068\uff0c\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\uff0e\n\n- robot_state_publihser\n - `hardware_interface::JointStateInterface`\u304c`publish`\u3059\u308b`/joint_states`\u30c8\u30d4\u30c3\u30af\u3092`subscribe`\u3057\u3066\uff0c`TF`\u306e\u30d5\u30ec\u30fc\u30e0\u306b\u3088\u308d\u3057\u304f\u5909\u63db\u3057\u3066\u304f\u308c\u308b\u4eba\n- move_group.launch\n - \u5f8c\u8005\u306f\u30a8\u30f3\u30c9\u30a4\u30d5\u30a7\u30af\u30bf\u306e\u7d4c\u8def\u8a08\u753b\u3068\u30ca\u30d3\u30b2\u30fc\u30b7\u30e7\u30f3\u3092\u53f8\u308b`Moveit!`\u306e\u30ce\u30fc\u30c9\u3092\u8d77\u52d5\u3057\u3066\u304f\u308c\u308b\u4eba\n\n![Controller_ROSMessage_Moveit_RobotStatePublisher.png](https://qiita-image-store.s3.amazonaws.com/0/110138/1bacadc0-cd63-a7e5-624c-42c4264dcb72.png)\n\n\n\u3053\u3053\u3067\u30df\u30bd\u306a\u306e\u306f`default_controllers.launch`\u306a\u306e\u3067\uff0c\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u307e\u3059\uff0e\n\n```xml:rosbook_arm_controller_configuration/launch/default_controllers.launch\n<launch>\n  <!-- Joint state controller -->\n  <rosparam file=\"$(find joint_state_controller)/joint_state_controller.yaml\" command=\"load\"/>\n\n  <!-- Default controllers -->\n  <node pkg=\"controller_manager\" type=\"spawner\" name=\"default_controllers_spawner\"\n        args=\"joint_state_controller\n              arm_controller\n              gripper_controller\"/>\n</launch>\n```\n\n`joint_state_controller.yaml`\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\uff0e\u3053\u308c\u306e\u4f4d\u7f6e\u3065\u3051\u306f\uff0c\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\uff0e\n\n- \u5148\u307b\u3069\uff0c`joint_trajectory_controllers.yaml`\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067`position_controllers/JointTrajectoryController`\u3092\u4f7f\u3046\u3053\u3068\u3092\u6307\u5b9a\u3057\u307e\u3057\u305f\uff0e\n- `joint_state_controller.yaml`\u306f\uff0c\u305d\u308c\u306e`joint_state_controller/JointStateController`\u7248\u3067\u3059\uff0e\n\n```yaml:ros_controllers/joint_state_controller/joint_state_controller.yaml\njoint_state_controller:\n  type: joint_state_controller/JointStateController\n  publish_rate: 50\n```\n\n\u3053\u308c\u304c`joint_state_controller.yaml`\u306e\u5168\u6587\u3067\u3059\uff0e`JointStateController`\u3067\u306f\u5168joint \u3092\u6271\u3046\u306e\u3067\uff0c\u7279\u5b9a\u306ejoint \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3088\u3046\u3067\u3059\uff0e\n\n![JointController_yaml.png](https://qiita-image-store.s3.amazonaws.com/0/110138/c0abbf27-9688-663e-88ab-1f19914dcb5b.png)\n\n\n\u305d\u3057\u3066\uff0c`Controller`\u3092Spawn \u3057\u307e\u3059\uff0e\u4e3b\u5f79\u306f\uff0c`controller_manager`\u30d1\u30c3\u30b1\u30fc\u30b8\u306e`spawner`\u30ce\u30fc\u30c9\u3067\u3059\uff0e\u5f15\u6570\u306b\uff0c`hoge_hoge_controller.yaml`\u3067\u8a2d\u5b9a\u3057\u305f\u540d\u524d\u7a7a\u9593\u304c\u5165\u3063\u3066\u3044\u307e\u3059\uff0e\u3053\u306e\u540d\u524d\u7a7a\u9593\u306b\u3072\u3082\u4ed8\u3051\u3055\u308c\u305f`type`\u7b49\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u53d6\u3063\u3066\uff0c`Controller`\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3088\u3046\u306b\uff0c`ControllerManager`\u306b\u30b5\u30fc\u30d3\u30b9\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u307e\u3059\uff0e\n\n\u3053\u306e\u30ce\u30fc\u30c9\u306e\u6b63\u4f53\u306f\uff0c[`ros_control/controller_manager/scripts/spawner`](https://github.com/ros-controls/ros_control/blob/9d0d8922d448c563b6f6afb2f7578dd2ba73cabb/controller_manager/scripts/spawner)\u3067\u3059\uff0e\u4e00\u5fdc\u8997\u3044\u3066\u307f\u307e\u3059\uff0e\n\n```py:controller_manager/scripts/spawner\n# \u7701\u7565\ndef main():\n    # find yaml files to load\n# \u7701\u7565\n    controllers = []\n    for name in args.controllers:\n        if os.path.exists(name):\n            # load yaml file onto the parameter server, using the namespace specified in the yaml file\n            rosparam.set_param(\"\",open(name))\n            # list the controllers to be loaded\n            name_yaml = yaml.load(open(name))\n            for controller in name_yaml:\n                controllers.append(controller)\n        else:\n            controllers.append(name)\n\n    # load controllers\n    for name in controllers:\n        rospy.loginfo(\"Loading controller: \"+name)\n        resp = load_controller(name)\n        if resp.ok != 0:\n            loaded.append(name)\n        else:\n            time.sleep(1) # give error message a chance to get out\n            rospy.logerr(\"Failed to load %s\" % name)\n\n    rospy.loginfo(\"Controller Spawner: Loaded controllers: %s\" % ', '.join(loaded))\n\n    if rospy.is_shutdown():\n        return\n\n    # start controllers is requested\n    if autostart:\n        resp = switch_controller(loaded, [], 2)\n        if resp.ok != 0:\n            rospy.loginfo(\"Started controllers: %s\" % ', '.join(loaded))\n        else:\n            rospy.logerr(\"Failed to start controllers: %s\" % ', '.join(loaded))\n\n    rospy.spin()\n# \u7701\u7565\n```\n\n\u30ce\u30fc\u30c9\u8d77\u52d5\u6642\u306b\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u305f\u540d\u524d\u7a7a\u9593\u540d(`joint_state_controller`, `arm_controller`\u7b49)\u3092\u5143\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\uff0c`Controller`\u306e\u7a2e\u985e(`position_controllers/JointTrajectoryController`\u7b49)\u3092\u8aad\u307f\u51fa\u3057\u307e\u3059\uff0e\n\n`load_controller()`\u3067\u306f\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30fc\u30d0\u304b\u3089\u5f97\u305f\u60c5\u5831\u3092\u57fa\u306b`Controller`\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306e\u6e96\u5099\u3092\u3059\u308b\u3088\u3046\uff0c`ControllerManager`\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u307e\u3059\uff0e\u3053\u3053\u3067\u306f\uff0c`GazeboRosControlPlugin`\u5074\u3067\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u306e\u60c5\u5831\u3092\u5143\u306b`HardwareInterface`\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u3057\u307e\u3059\uff0e`ControllerManager`\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067`RobotHWSim`\u306e\u60c5\u5831\u3092\u77e5\u3063\u3066\u3044\u308b\u3053\u3068\u306f\uff0c\u300c[2. RobotHWSim\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u3064\u3044\u3066](http://qiita.com/MoriKen/items/5cab7436c1b36c25e0ce)\u300d\u3067\u3082\u89e6\u308c\u307e\u3057\u305f\uff0e\n\n\u305d\u3057\u3066\uff0c`switch_controller()`\u3068\u3044\u3046\u95a2\u6570\u306b`Controller`\u306e\u7a2e\u985e\u3092\u6e21\u3057\u3066\uff0c`ControllerManager`\u306b`Controller`\u3092\u8d77\u52d5\u3055\u305b\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u3066\u3044\u307e\u3059\uff0e\n\n# `ControllerManager`\u3068`HardwareInterface`\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n\u3053\u3053\u3067\uff0c`ControllerManager`\u3068`HardwareInterface`\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u3069\u3046\u884c\u3063\u3066\u3044\u308b\u306e\u304b\uff0c\u3061\u3087\u3063\u3068\u3060\u3051\u898b\u3066\u307f\u307e\u3059\uff0e\n\n```cpp:controller_manager/src/controller_manager.cpp\n// \u7701\u7565\nnamespace controller_manager{\n// \u7701\u7565\nbool ControllerManager::loadController(const std::string& name)\n{\n// \u7701\u7565\n  boost::shared_ptr<controller_interface::ControllerBase> c;\n// \u7701\u7565\n  // Initializes the controller\n  try{\n// \u7701\u7565\n    initialized = c->initRequest(robot_hw_, root_nh_, c_nh, claimed_resources);\n  }\n// \u7701\u7565\n}\n// \u7701\u7565\n}\n```\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\uff0c\u30b3\u30f3\u30c8\u30ed\u30fc\u30e91\u3064\u3092\u8aad\u307f\u8fbc\u3080\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\uff0e\n`c`\u306b\u306f\uff0c`Controller`\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5165\u308a\u307e\u3059\uff0e`JointTrajectoryController`\u3084`JointStateController`\u7b49\uff0c\u305d\u306e\u6642\u6307\u5b9a\u3055\u308c\u305f`Controller`\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5165\u3063\u3066\u3044\u307e\u3059\uff0e\u305d\u3057\u3066\uff0c`c->initRequest()`\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\uff0e\u4e2d\u3092\u898b\u3066\u307f\u307e\u3059\uff0e\n\n```cpp:controller_interface/include/controller_interface/controller.h\nnamespace controller_interface\n{\n// \u7701\u7565\n  virtual bool initRequest(hardware_interface::RobotHW* robot_hw,\n                           ros::NodeHandle&             root_nh,\n                           ros::NodeHandle&             controller_nh,\n                           ClaimedResources&            claimed_resources)\n  {\n// \u7701\u7565\n    // get a pointer to the hardware interface\n    T* hw = robot_hw->get<T>();\n// \u7701\u7565\n    // return which resources are claimed by this controller\n    hw->clearClaims();\n    if (!init(hw, controller_nh) || !init(hw, root_nh, controller_nh))\n    {\n      ROS_ERROR(\"Failed to initialize the controller\");\n      return false;\n    }\n// \u7701\u7565\n  }\n}\n```\n`T* hw = robot_hw->get<T>();`\u3067\uff0c`HardwareInterface`\u304c\u767b\u5834\u3057\u307e\u3059\uff0e`T`\u306f`HardwareInterface`\u306e\u578b\u304c\u5165\u308a\u307e\u3059\uff0e`RobotHW`\u304c\u30e1\u30f3\u30d0\u3068\u3057\u3066\u6301\u3063\u3066\u3044\u308b`HardwareInterface`\u578b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4e2d\u304b\u3089\uff0c`T`\u306e\u578b\u3092\u6301\u3063\u305f\u3082\u306e\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\uff0e\u78ba\u304b\u306b\u3053\u306e\u60c5\u5831\u304c\u3042\u308c\u3070\uff0c`RobotHWSim`\u3067\u3044\u3058\u304f\u308a\u56de\u3057\u3066\u3044\u305f`jnt_pos_`\u3084`jnt_pos_cmd_`\u7b49\u306e\u5024\u3092\uff0c`ControllerManger`\u5074\u3067\u6271\u3048\u305d\u3046\u306a\u4e88\u611f\u304c\u3057\u307e\u3059\uff0e\n\n\u3053\u306e\u5148\u5c11\u3057\u8a71\u304c\u3084\u3084\u3053\u3057\u3044\u306e\u3067\uff0c\u9752\u5199\u771f\u7684\u306b\u30a4\u30e1\u30fc\u30b8\u56f3\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\uff0e\u767d\u629c\u304d\u77e2\u5370\u304c\u7d99\u627f\uff0c\u9ed2\u629c\u304d\u77e2\u5370\u304c\u30c7\u30fc\u30bf\u306e\u65b9\u5411\u3092\u8868\u3057\u307e\u3059\uff0e\n![HardwareInterface_ControllerManager.png](https://qiita-image-store.s3.amazonaws.com/0/110138/caa0be1e-0cee-8236-4d68-014656d93418.png)\n\n\n## `JointStateController`\u306e\u5834\u5408\n\u3053\u306e`T`\u3064\u3044\u3066\u4f7f\u7528\u4f8b\u3092\u6319\u3052\u307e\u3059\uff0e`JointStateController`\u306e\u5834\u5408\u306f\uff0c\u4e0b\u8a18\u306e\u3088\u3046\u306b\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u306e\u3067\uff0c`T`\u306b\u306f`JointStateInterface`\u304c\u5f53\u3066\u306f\u307e\u308a\u307e\u3059\uff0e\n\n```ccp:joint_state_controller/include/joint_state_controller/joint_state_controller.h\nclass JointStateController: public controller_interface::Controller<hardware_interface::JointStateInterface>\n```\n\n\u6c17\u306b\u306a\u308b\u306e\u306f`init()`\u3067\u3059\uff0e\u3053\u3053\u304c\u30df\u30bd\u306a\u306e\u306f\u9593\u9055\u3044\u306a\u3055\u305d\u3046\u3067\u3059\uff0e\u69cb\u9020\u304c\u5358\u7d14\u306a`JointStateController`\u3092\u4f8b\u306b\uff0c`init()`\u306e\u4f8b\u3092\u898b\u3066\u307f\u307e\u3059\uff0e\n\n```cpp:joint_state_controller/src/joint_state_controller.cpp\n// \u7701\u7565\nnamespace joint_state_controller\n{\n// \u7701\u7565\n  bool JointStateController::init(hardware_interface::JointStateInterface* hw,\n                                  ros::NodeHandle&                         root_nh,\n                                  ros::NodeHandle&                         controller_nh)\n  {\n    // get all joint names from the hardware interface\n    const std::vector<std::string>& joint_names = hw->getNames();\n    num_hw_joints_ = joint_names.size();\n    for (unsigned i=0; i<num_hw_joints_; i++)\n      ROS_DEBUG(\"Got joint %s\", joint_names[i].c_str());\n\n    // get publishing period\n    if (!controller_nh.getParam(\"publish_rate\", publish_rate_)){\n      ROS_ERROR(\"Parameter 'publish_rate' not set\");\n      return false;\n    }\n\n    // realtime publisher\n    realtime_pub_.reset(new realtime_tools::RealtimePublisher<sensor_msgs::JointState>(root_nh, \"joint_states\", 4));\n\n    // get joints and allocate message\n    for (unsigned i=0; i<num_hw_joints_; i++){\n      joint_state_.push_back(hw->getHandle(joint_names[i]));\n      realtime_pub_->msg_.name.push_back(joint_names[i]);\n      realtime_pub_->msg_.position.push_back(0.0);\n      realtime_pub_->msg_.velocity.push_back(0.0);\n      realtime_pub_->msg_.effort.push_back(0.0);\n    }\n    addExtraJoints(controller_nh, realtime_pub_->msg_);\n\n    return true;\n  }\n// \u7701\u7565\n}\n```\n`const std::vector<std::string>& joint_names = hw->getNames();`\u3067\uff0c`RobotHWSim`\u304c\u6301\u3063\u3066\u3044\u308b\u5168joint \u540d\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e\n\u305d\u306ejoint \u540d\u304b\u3089\u30cf\u30f3\u30c9\u30eb\u3092\u53d6\u5f97\u3057\uff0c`addExtraJoints(controller_nh, realtime_pub_->msg_);`\u3067\uff0c`Controller`\u5074\u306e\u30e1\u30f3\u30d0\u3067\u3042\u308b`joint_state_`\u3068\uff0c`HardwareInterface`\u5074\u3067\u65e2\u306b\u4f5c\u6210\u3055\u308c\u3066\u3044\u308bjoint \u306e\u30cf\u30f3\u30c9\u30eb\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u3044\u307e\u3059\uff0e\u4ee5\u964d\uff0c`JointStateController`\u306f\u81ea\u7531\u306bjoint \u306e\u72b6\u614b(`RobotHWSim`\u306e`jnt_pos_`\u7b49\u306e\u5024)\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\u3053\u308c\u3067`JointStateController`\u304c\uff0c`JointStateInterface`\u3092\u4ecb\u3057\u3066\uff0c`RobotHWSim`\u3068\u7e4b\u304c\u3063\u305f\u308f\u3051\u3067\u3059\uff0e\u7d0d\u5f97\u3067\u3059\uff01\n\n\u98db\u3070\u3057\u307e\u3057\u305f\u304c\uff0c`realtime_pub_.reset(new realtime_tools::RealtimePublisher<sensor_msgs::JointState>(root_nh, \"joint_states\", 4));`\u3067`publisher`\u304c\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\uff0e\u3064\u3044\u3067\u306b\uff0c`JointStateInterface`\u306e`update()`\u30e1\u30bd\u30c3\u30c9\u3082\u898b\u3066\u307f\u307e\u3059\uff0e\n\n```cpp:joint_state_controller/src/joint_state_controller.cpp\n// \u7701\u7565\n  void JointStateController::update(const ros::Time& time, const ros::Duration& /*period*/)\n  {\n    // limit rate of publishing\n    if (publish_rate_ > 0.0 && last_publish_time_ + ros::Duration(1.0/publish_rate_) < time){\n\n      // try to publish\n      if (realtime_pub_->trylock()){\n        // we're actually publishing, so increment time\n        last_publish_time_ = last_publish_time_ + ros::Duration(1.0/publish_rate_);\n\n        // populate joint state message:\n        // - fill only joints that are present in the JointStateInterface, i.e. indices [0, num_hw_joints_)\n        // - leave unchanged extra joints, which have static values, i.e. indices from num_hw_joints_ onwards\n        realtime_pub_->msg_.header.stamp = time;\n        for (unsigned i=0; i<num_hw_joints_; i++){\n          realtime_pub_->msg_.position[i] = joint_state_[i].getPosition();\n          realtime_pub_->msg_.velocity[i] = joint_state_[i].getVelocity();\n          realtime_pub_->msg_.effort[i] = joint_state_[i].getEffort();\n        }\n        realtime_pub_->unlockAndPublish();\n      }\n    }\n  }\n// \u7701\u7565\n```\n\n`/joint_states`\u30c8\u30d4\u30c3\u30af\u3092`publish`\u3059\u308b\u51e6\u7406\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\n\n## `JointTrajectoryController`\u306e\u5834\u5408\n`position_controllers/JointTrajectoryController`\u3067\u3082\uff0c\u5927\u304d\u306a\u6d41\u308c\u306f\u540c\u3058\u3088\u3046\u3067\u3059\uff0e`init()`\u3067`joint`\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3044\uff0c`update()`\u3067\u6307\u4ee4\u5024\u3092\u66f4\u65b0\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\u305f\u3060\uff0c`JointTrajectoryController`\u81ea\u4f53\u306f\uff0c\u4f4d\u7f6e\u3067\u3082\u901f\u5ea6\u3067\u3082\u529b\u3067\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\uff0c\u3069\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u6765\u3066\u3082\u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\uff0c\u30af\u30e9\u30b9\u306e\u5ba3\u8a00\u6642\u306f\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u3067\u3042\u308b`HardwareInteface`\u3092`T`\u3068\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\uff0e\u305f\u3060\u3057\uff0c`position_controllers/JointTrajectoryController`\u306e\u5834\u5408\u306f\uff0c\u4f4d\u7f6e\u6307\u4ee4\u3067\u8ecc\u9053\u30b3\u30de\u30f3\u30c9\u3092\u53d7\u3051\u53d6\u308b\u4ed5\u69d8\u3068\u306a\u3063\u3066\u304a\u308a\uff0c\u5bfe\u5fdc\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f`PositionJointInterface`\u3068\u306a\u308b\u3088\u3046\u3067\u3059\uff0e\u79c1\u306e\u529b\u4e0d\u8db3\u306b\u3088\u308a\uff0c\u3053\u3053\u306e\u89e3\u6790\u306f\u3057\u304d\u308c\u307e\u305b\u3093\u3067\u3057\u305f\uff0e\n\u3072\u3068\u307e\u305a\u5148\u306b\u9032\u3081\u307e\u3059\uff0e\n\n```cpp:joint_trajectory_controller/include/joint_trajectory_controller/joint_trajectory_controller_impl.h\n// \u7701\u7565\nbool JointTrajectoryController<SegmentImpl, HardwareInterface>::init(HardwareInterface* hw,\n                                                                     ros::NodeHandle&   root_nh,\n                                                                     ros::NodeHandle&   controller_nh)\n{\n// \u7701\u7565\n  // List of controlled joints\n  joint_names_ = getStrings(controller_nh_, \"joints\");\n  if (joint_names_.empty()) {return false;}\n  const unsigned int n_joints = joint_names_.size();\n\n  // URDF joints\n  boost::shared_ptr<urdf::Model> urdf = getUrdf(root_nh, \"robot_description\");\n// \u7701\u7565\n  std::vector<UrdfJointConstPtr> urdf_joints = getUrdfJoints(*urdf, joint_names_);\n// \u7701\u7565\n  for (unsigned int i = 0; i < n_joints; ++i)\n  {\n    // Joint handle\n    try {joints_[i] = hw->getHandle(joint_names_[i]);}\n// \u7701\u7565\n    // Whether a joint is continuous (ie. has angle wraparound)\n    angle_wraparound_[i] = urdf_joints[i]->type == urdf::Joint::CONTINUOUS;\n// \u7701\u7565\n  }\n// \u7701\u7565\n  // Hardware interface adapter\n  hw_iface_adapter_.init(joints_, controller_nh_);\n// \u7701\u7565\n}\n// \u7701\u7565\n```\n\u3059\u3079\u3066\u306ejoint \u540d\u3092\u53d6\u5f97\u3059\u308b\u306e\u3067\u306f\u306a\u304f\uff0c`joint_trajectory_controllers.yaml`\u5185\u3067`joints`\u3068\u3057\u3066\u767b\u9332\u3057\u305f`joint`\u540d\u3060\u3051\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e`urdf_joints`\u3092\u53d6\u3063\u3066\u304d\u3066\u3044\u308b\u306e\u306f\uff0c`URDF`\u5185\u3067\u5b9a\u7fa9\u3057\u305f`joint`\u306e\u7a2e\u985e(continuous\u7b49)\u306b\u3088\u3063\u3066\u6319\u52d5\u3092\u5909\u3048\u308b\u305f\u3081\u306e\u3088\u3046\u3067\u3059\uff0e\n`hw_iface_adapter_.init()`\u3067\uff0c`Controller`\u3068joint \u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u3057\u3066\u3044\u307e\u3059\uff0e\n\n```cpp:joint_trajectory_controller/include/joint_trajectory_controller/joint_trajectory_controller_impl.h\n// \u7701\u7565\nvoid JointTrajectoryController<SegmentImpl, HardwareInterface>::\nupdate(const ros::Time& time, const ros::Duration& period)\n{\n// \u7701\u7565\n  // Update current state and state error\n  for (unsigned int i = 0; i < joints_.size(); ++i)\n  {\n    current_state_.position[i] = joints_[i].getPosition();\n    current_state_.velocity[i] = joints_[i].getVelocity();\n    // There's no acceleration data available in a joint handle\n\n    state_error_.position[i] = desired_state_.position[i] - current_state_.position[i];\n    state_error_.velocity[i] = desired_state_.velocity[i] - current_state_.velocity[i];\n    state_error_.acceleration[i] = 0.0;\n  }\n// \u7701\u7565\n  // Hardware interface adapter: Generate and send commands\n  hw_iface_adapter_.updateCommand(time_data.uptime, time_data.period,\n                                  desired_state_, state_error_);\n\n  // Publish state\n  publishState(time_data.uptime);\n}\n// \u7701\u7565\n```\n`update()`\u30e1\u30bd\u30c3\u30c9\u306f\uff0c\u73fe\u5728\u306ejoint \u306e\u72b6\u614b\u3092\u66f4\u65b0\u3057\u3066\u76ee\u6a19\u5024\u3068\u306e\u5dee\u5206\u3092\u8a08\u7b97\u3057\u305f\u5f8c\uff0c`hw_iface_adapter_.updateCommand()`\u3067\u6307\u4ee4\u5024(`jnt_pos_cmd_`)\u3092\u66f4\u65b0\u3057\u307e\u3059\uff0e\n`JointTrajectoyController`\u304c\uff0c\u4f8b\u3048\u3070`Moveit!`\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308c\u3070\uff0c\u4e0a\u8a18\u30d5\u30ed\u30fc\u3092\u7d4c\u7531\u3057\u3066`Gazebo`\u307e\u3067\u6307\u4ee4\u304c\u9001\u308a\u5c4a\u3051\u3089\u308c\u307e\u3059\uff0e\n\n## \u30a4\u30e1\u30fc\u30b8\u56f3\n![Controller_ROSMessage.png](https://qiita-image-store.s3.amazonaws.com/0/110138/1027a372-f185-4b91-81f6-5371fbc31e1a.png)\n\n\u4ee5\u4e0a\u3067\u5927\u4f53\u8ffd\u3048\u305f\u3068\u601d\u3044\u307e\u3059\uff0e\n\n#\u307e\u3068\u3081\n\u5192\u982d\u306b\u8a18\u8f09\u3057\u305f\uff0c\u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\u306e\u56f3\u3092\u518d\u63b2\u3057\u307e\u3059\uff0e\n![summary.png](https://qiita-image-store.s3.amazonaws.com/0/110138/ff5180a8-fb22-48ea-dc87-a0993b276221.png)\n\n\u6700\u5f8c\u306b\u3053\u308c\u3092\u632f\u308a\u8fd4\u308b\u3068\uff0c\u5168\u4f53\u304c\u7e4b\u304c\u3063\u3066\u3044\u308b\u3093\u3060\u306a\u3063\u3066\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\uff0e\n\n#\u7d42\u308f\u308a\u306b\n\u521d\u3081\u3066`ros_control`\u306e`Controller`\u3068`HardwareInterface`\u306e\u8a2d\u5b9a\u3092\u898b\u305f\u6642\uff0c\u305d\u306e\u95a2\u4fc2\u304c\u63b4\u3081\u305a\u3042\u3063\u3051\u306b\u3068\u3089\u308c\u3066\u3044\u307e\u3057\u305f\u304c\uff0c\u3088\u3046\u3084\u304f\u30af\u30ea\u30a2\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\u8a73\u7d30\u306b\u306f\u773c\u3092\u3064\u3080\u308a\u307e\u3057\u305f\u304c\uff0c\u6d41\u308c\u3092\u7406\u89e3\u3059\u308b\u306b\u306f\u5341\u5206\u3068\u5224\u65ad\u3057\u307e\u3057\u305f\uff0e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u81ea\u4f5c\u3059\u308b\u3068\u304d\u306b\u3082\uff0c\u3069\u3053\u3092\u89e6\u308c\u3070\u3044\u3044\u306e\u304b\u5927\u4f53\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\n\u500b\u3005\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u72ec\u7acb\u3057\u3066\u3044\u3066\uff0c\u500b\u3005\u306e\u8981\u7d20\u306f\u500b\u5225\u306b\u4ea4\u63db\u304c\u53ef\u80fd\u3067\u3059\uff0e\u65e2\u5b58\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u306f\u7269\u8db3\u308a\u306a\u3044\uff0c\u3061\u3087\u3063\u3068\u5909\u3048\u305f\u3044\uff0c\u3068\u3044\u3046\u3068\u3053\u308d\u3060\u3051\u30d7\u30e9\u30b0\u30a4\u30f3\u5316\u3057\u3066\u3057\u307e\u3048\u3070\uff0c\u81ea\u5206\u4ed5\u69d8\u306e\u30ed\u30dc\u30c3\u30c8\u30e2\u30c7\u30eb\u304c\u51fa\u6765\u4e0a\u304c\u308a\u307e\u3059\uff0e\u4eca\u56de\u306e\u53d6\u7d44\u307f\u3067\uff0c`ROS`\u306b\u3088\u308b\u5206\u6563\u958b\u767a\u306e\u826f\u3055\u306b\u3064\u3044\u3066\uff0c\u7406\u89e3\u3092\u6df1\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\uff0e`ROS`\u3092\u5b66\u3076\u3053\u3068\u306e\u826f\u3055\u306e\u4e00\u3064\u3057\u3066\uff0c\u30ed\u30dc\u30c3\u30c8\u958b\u767a\u306e\u5de8\u4eba\u304c\u57f9\u3063\u305f\u30ce\u30a6\u30cf\u30a6\u306e\u96c6\u5927\u6210\u3092\u60dc\u3057\u307f\u306a\u304f\u898b\u305b\u3066\u3082\u3089\u3048\u308b\u3053\u3068\u304c\u6319\u3052\u3089\u308c\u308b\u306a\u3041\uff0c\u3068\u611f\u3058\u305f\u6b21\u7b2c\u3067\u3059\uff0e\n\n\u3053\u306e\u8a2d\u8a08\u601d\u60f3\u306f\uff0c\u30ed\u30dc\u30c3\u30c8\u306b\u9650\u3089\u305a\u4e00\u822c\u306e\u30b7\u30b9\u30c6\u30e0\u3067\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3078\u3082\u9069\u7528\u3067\u304d\u308b\u3067\u3057\u3087\u3046\uff0e\u4eca\u5f8c\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u3067\u306a\u306b\u304b\u56f0\u3063\u305f\u3053\u3068\u304c\u3042\u3063\u305f\u3089\uff0c`ROS`\u304b\u3089\u5b66\u3070\u305b\u3066\u9802\u304f\u3053\u3068\u306f\u306a\u3044\u304b\uff0c\u3068\u601d\u3044\u3092\u99b3\u305b\u3066\u307f\u3088\u3046\u601d\u3044\u307e\u3059\uff0e\n", "tags": ["ROS"]}