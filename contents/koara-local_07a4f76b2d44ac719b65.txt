{"context": "\n\nTL;DR\n\u3044\u308d\u3093\u306a\u7b87\u6240\u304b\u3089\u547c\u3070\u308c\u308b\u95a2\u6570\u306e\u30c7\u30d0\u30c3\u30b0\u3092\u3057\u305f\u3044\u306e\u3067\u3001\u547c\u3073\u51fa\u3057\u5143\u306e\u95a2\u6570\u540d\u3092\u53d6\u5f97\u3057\u305f\u3044\u3002\n__builtin_return_address(0) \u3068 dladdr \u3092\u4f7f\u3046\u3068\u826f\u3055\u305d\u3046\u3002\n\n\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\n\ntest.c(\u547c\u3073\u51fa\u3057\u5143\u306e\u95a2\u6570\u540d\u3068\u5fa9\u5e30\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b)\n#include <stdio.h>\n#define __USE_GNU\n#include <dlfcn.h>\n\nvoid hoge() {\n    Dl_info info;\n    dladdr(__builtin_return_address(0), &info);\n    printf(\"[%s] parent func name => %p [%s]\\n\",\n           __func__,\n           __builtin_return_address(0),\n           info.dli_sname);\n}\n\nvoid foo() {\n    hoge();\n\n    Dl_info info;\n    dladdr(__builtin_return_address(0), &info);\n    printf(\"[%s] parent func name => %p [%s]\\n\",\n           __func__,\n           __builtin_return_address(0),\n           info.dli_sname);\n}\n\nint main(int argc, char const* argv[])\n{\n    hoge();\n\n    foo();\n\n    return 0;\n}\n\n\n\u5b9f\u884c\u3057\u305f\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002dladdr\u304b\u3089\u30b7\u30f3\u30dc\u30eb\u540d\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n$ gcc test.c -ldl -rdynamic\n$ ./a.out\n[hoge] parent func name => 0x4008ee [main]\n[hoge] parent func name => 0x40089e [foo]\n[foo] parent func name => 0x4008f8 [main]\n\n\u305f\u3060\u3057\u3001\u3053\u306e\u65b9\u6cd5\u306b\u306f\u5236\u9650\u304c\u3042\u3063\u3066\u3001-rdynamic \u3092\u3064\u3051\u3066\u30d3\u30eb\u30c9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n(-rdynamic => \u3059\u3079\u3066\u306e\u30b7\u30f3\u30dc\u30eb\u3092\u52d5\u7684\u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0)\n\u52d5\u7684\u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u306b\u30b7\u30f3\u30dc\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f dladdr \u306b\u3088\u308a\u540d\u524d\u306e\u53d6\u5f97\u306f\u3067\u304d\u306a\u3044\u3002\n\n\u5b9f\u884c\u7d50\u679c\n$ gcc test.c -ldl\n$ ./a.out\n[hoge] parent func name => 0x4006de [(null)]\n[hoge] parent func name => 0x40068e [(null)]\n[foo] parent func name => 0x4006e8 [(null)]\n\n\n__builtin_return_address(0) \u306b\u3088\u308a\u5fa9\u5e30\u30a2\u30c9\u30ec\u30b9\u306f\u308f\u304b\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u4f8b\u3048\u3070 objdump \u7b49\u3092\u4f7f\u3048\u3070\u5224\u5225\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u308b\n$ objdump -d ./a.out | view -\n000000000040067c <foo>: #\u547c\u3073\u51fa\u3057\u5143\n  40067c:   55                      push   %rbp\n  40067d:   48 89 e5                mov    %rsp,%rbp\n  400680:   48 83 ec 20             sub    $0x20,%rsp\n  400684:   b8 00 00 00 00          mov    $0x0,%eax\n  400689:   e8 af ff ff ff          callq  40063d <hoge>\n  40068e:   48 8b 45 08             mov    0x8(%rbp),%rax   # hoge\u304b\u3089\u629c\u3051\u308b\u3068\u3053\u3053\u306b\u623b\u308b\n  400692:   48 8d 55 e0             lea    -0x20(%rbp),%rdx\n  400696:   48 89 d6                mov    %rdx,%rsi\n  400699:   48 89 c7                mov    %rax,%rdi\n  40069c:   e8 7f fe ff ff          callq  400520 <dladdr@plt>\n  4006a1:   48 8b 55 f0             mov    -0x10(%rbp),%rdx\n  4006a5:   48 8b 45 08             mov    0x8(%rbp),%rax\n  4006a9:   48 89 d1                mov    %rdx,%rcx\n  4006ac:   48 89 c2                mov    %rax,%rdx\n  4006af:   be 9f 07 40 00          mov    $0x40079f,%esi\n  4006b4:   bf 78 07 40 00          mov    $0x400778,%edi\n  4006b9:   b8 00 00 00 00          mov    $0x0,%eax\n  4006be:   e8 4d fe ff ff          callq  400510 <printf@plt>\n  4006c3:   c9                      leaveq \n  4006c4:   c3                      retq   \n~\u4e2d\u7565~\n00000000004006c5 <main>: #\u547c\u3073\u51fa\u3057\u5143\n  4006c5:   55                      push   %rbp\n  4006c6:   48 89 e5                mov    %rsp,%rbp\n  4006c9:   48 83 ec 10             sub    $0x10,%rsp\n  4006cd:   89 7d fc                mov    %edi,-0x4(%rbp)\n  4006d0:   48 89 75 f0             mov    %rsi,-0x10(%rbp)\n  4006d4:   b8 00 00 00 00          mov    $0x0,%eax\n  4006d9:   e8 5f ff ff ff          callq  40063d <hoge>\n  4006de:   b8 00 00 00 00          mov    $0x0,%eax     # hoge\u304b\u3089\u629c\u3051\u308b\u3068\u3053\u3053\u306b\u623b\u308b\n  4006e3:   e8 94 ff ff ff          callq  40067c <foo>\n  4006e8:   b8 00 00 00 00          mov    $0x0,%eax     # foo\u304b\u3089\u629c\u3051\u308b\u3068\u3053\u3053\u306b\u623b\u308b\n  4006ed:   c9                      leaveq \n  4006ee:   c3                      retq   \n  4006ef:   90                      nop\n\n\n\u95a2\u9023\n\u4ee5\u524d\u8abf\u3079\u305fLD_PRELOAD\u3067\u306e\u30d5\u30c3\u30af\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u30c7\u30d0\u30c3\u30b0\u304c\u6357\u308a\u305d\u3046\u3002\nLD_PRELOAD\u3067printf\u3092\u5f8c\u304b\u3089\u5dee\u3057\u66ff\u3048\u308b - Qiita\n\n\u53c2\u8003\nC\u8a00\u8a9e\u3067\u95a2\u6570\u540d\u306e\u6587\u5b57\u5217\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5 - \u305f\u3044\u3057\u3087\u30fc(miettal)\u306e\u65e5\u8a18\nFunction caller in linux kernel - Stack Overflow\nHow to get function's name from function's pointer in C? - Stack Overflow\nReturn Address - Using the GNU Compiler Collection (GCC)\nGCC\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u95a2\u6570\u30c8\u30ec\u30fc\u30b5 - torutk\u306e\u65e5\u8a18\n__builtin_return_address\u306b\u3064\u3044\u3066 - syohex\u2019s diary\n# TL;DR\n\n\u3044\u308d\u3093\u306a\u7b87\u6240\u304b\u3089\u547c\u3070\u308c\u308b\u95a2\u6570\u306e\u30c7\u30d0\u30c3\u30b0\u3092\u3057\u305f\u3044\u306e\u3067\u3001\u547c\u3073\u51fa\u3057\u5143\u306e\u95a2\u6570\u540d\u3092\u53d6\u5f97\u3057\u305f\u3044\u3002\n\n`__builtin_return_address(0)` \u3068 `dladdr` \u3092\u4f7f\u3046\u3068\u826f\u3055\u305d\u3046\u3002\n\n# \u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\n\n```c:test.c(\u547c\u3073\u51fa\u3057\u5143\u306e\u95a2\u6570\u540d\u3068\u5fa9\u5e30\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b)\n#include <stdio.h>\n#define __USE_GNU\n#include <dlfcn.h>\n\nvoid hoge() {\n    Dl_info info;\n    dladdr(__builtin_return_address(0), &info);\n    printf(\"[%s] parent func name => %p [%s]\\n\",\n           __func__,\n           __builtin_return_address(0),\n           info.dli_sname);\n}\n\nvoid foo() {\n    hoge();\n\n    Dl_info info;\n    dladdr(__builtin_return_address(0), &info);\n    printf(\"[%s] parent func name => %p [%s]\\n\",\n           __func__,\n           __builtin_return_address(0),\n           info.dli_sname);\n}\n\nint main(int argc, char const* argv[])\n{\n    hoge();\n\n    foo();\n\n    return 0;\n}\n```\n\n\u5b9f\u884c\u3057\u305f\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002dladdr\u304b\u3089\u30b7\u30f3\u30dc\u30eb\u540d\u304c\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n```\u5b9f\u884c\u7d50\u679c\n$ gcc test.c -ldl -rdynamic\n$ ./a.out\n[hoge] parent func name => 0x4008ee [main]\n[hoge] parent func name => 0x40089e [foo]\n[foo] parent func name => 0x4008f8 [main]\n```\n\n\u305f\u3060\u3057\u3001\u3053\u306e\u65b9\u6cd5\u306b\u306f\u5236\u9650\u304c\u3042\u3063\u3066\u3001`-rdynamic` \u3092\u3064\u3051\u3066\u30d3\u30eb\u30c9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n(`-rdynamic` => \u3059\u3079\u3066\u306e\u30b7\u30f3\u30dc\u30eb\u3092\u52d5\u7684\u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0)\n\n\u52d5\u7684\u30b7\u30f3\u30dc\u30eb\u30c6\u30fc\u30d6\u30eb\u306b\u30b7\u30f3\u30dc\u30eb\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f `dladdr` \u306b\u3088\u308a\u540d\u524d\u306e\u53d6\u5f97\u306f\u3067\u304d\u306a\u3044\u3002\n\n```bash:\u5b9f\u884c\u7d50\u679c\n$ gcc test.c -ldl\n$ ./a.out\n[hoge] parent func name => 0x4006de [(null)]\n[hoge] parent func name => 0x40068e [(null)]\n[foo] parent func name => 0x4006e8 [(null)]\n```\n\n`__builtin_return_address(0)` \u306b\u3088\u308a\u5fa9\u5e30\u30a2\u30c9\u30ec\u30b9\u306f\u308f\u304b\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u4f8b\u3048\u3070 `objdump` \u7b49\u3092\u4f7f\u3048\u3070\u5224\u5225\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u308b\n\n```\n$ objdump -d ./a.out | view -\n000000000040067c <foo>: #\u547c\u3073\u51fa\u3057\u5143\n  40067c:\t55                   \tpush   %rbp\n  40067d:\t48 89 e5             \tmov    %rsp,%rbp\n  400680:\t48 83 ec 20          \tsub    $0x20,%rsp\n  400684:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  400689:\te8 af ff ff ff       \tcallq  40063d <hoge>\n  40068e:\t48 8b 45 08          \tmov    0x8(%rbp),%rax   # hoge\u304b\u3089\u629c\u3051\u308b\u3068\u3053\u3053\u306b\u623b\u308b\n  400692:\t48 8d 55 e0          \tlea    -0x20(%rbp),%rdx\n  400696:\t48 89 d6             \tmov    %rdx,%rsi\n  400699:\t48 89 c7             \tmov    %rax,%rdi\n  40069c:\te8 7f fe ff ff       \tcallq  400520 <dladdr@plt>\n  4006a1:\t48 8b 55 f0          \tmov    -0x10(%rbp),%rdx\n  4006a5:\t48 8b 45 08          \tmov    0x8(%rbp),%rax\n  4006a9:\t48 89 d1             \tmov    %rdx,%rcx\n  4006ac:\t48 89 c2             \tmov    %rax,%rdx\n  4006af:\tbe 9f 07 40 00       \tmov    $0x40079f,%esi\n  4006b4:\tbf 78 07 40 00       \tmov    $0x400778,%edi\n  4006b9:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4006be:\te8 4d fe ff ff       \tcallq  400510 <printf@plt>\n  4006c3:\tc9                   \tleaveq \n  4006c4:\tc3                   \tretq   \n~\u4e2d\u7565~\n00000000004006c5 <main>: #\u547c\u3073\u51fa\u3057\u5143\n  4006c5:\t55                   \tpush   %rbp\n  4006c6:\t48 89 e5             \tmov    %rsp,%rbp\n  4006c9:\t48 83 ec 10          \tsub    $0x10,%rsp\n  4006cd:\t89 7d fc             \tmov    %edi,-0x4(%rbp)\n  4006d0:\t48 89 75 f0          \tmov    %rsi,-0x10(%rbp)\n  4006d4:\tb8 00 00 00 00       \tmov    $0x0,%eax\n  4006d9:\te8 5f ff ff ff       \tcallq  40063d <hoge>\n  4006de:\tb8 00 00 00 00       \tmov    $0x0,%eax     # hoge\u304b\u3089\u629c\u3051\u308b\u3068\u3053\u3053\u306b\u623b\u308b\n  4006e3:\te8 94 ff ff ff       \tcallq  40067c <foo>\n  4006e8:\tb8 00 00 00 00       \tmov    $0x0,%eax     # foo\u304b\u3089\u629c\u3051\u308b\u3068\u3053\u3053\u306b\u623b\u308b\n  4006ed:\tc9                   \tleaveq \n  4006ee:\tc3                   \tretq   \n  4006ef:\t90                   \tnop\n```\n\n\n# \u95a2\u9023\n\n\u4ee5\u524d\u8abf\u3079\u305fLD_PRELOAD\u3067\u306e\u30d5\u30c3\u30af\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u30c7\u30d0\u30c3\u30b0\u304c\u6357\u308a\u305d\u3046\u3002\n\n[LD_PRELOAD\u3067printf\u3092\u5f8c\u304b\u3089\u5dee\u3057\u66ff\u3048\u308b - Qiita](http://qiita.com/koara-local/items/d5205f94decade3ffbf1)\n\n# \u53c2\u8003\n[C\u8a00\u8a9e\u3067\u95a2\u6570\u540d\u306e\u6587\u5b57\u5217\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5 - \u305f\u3044\u3057\u3087\u30fc(miettal)\u306e\u65e5\u8a18](http://miettal.hatenablog.com/entry/20120624/1340533907)\n[Function caller in linux kernel - Stack Overflow](http://stackoverflow.com/questions/4141324/function-caller-in-linux-kernel)\n[How to get function's name from function's pointer in C? - Stack Overflow](http://stackoverflow.com/questions/351134/how-to-get-functions-name-from-functions-pointer-in-c)\n[Return Address - Using the GNU Compiler Collection (GCC)](https://gcc.gnu.org/onlinedocs/gcc/Return-Address.html)\n[GCC\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u95a2\u6570\u30c8\u30ec\u30fc\u30b5 - torutk\u306e\u65e5\u8a18](http://d.hatena.ne.jp/torutk/20090126/p1)\n[__builtin_return_address\u306b\u3064\u3044\u3066 - syohex\u2019s diary](http://syohex.hatenablog.com/entry/20110923/1316784987)\n", "tags": ["C", "C++", "GCC", "Linux"]}