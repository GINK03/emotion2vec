{"context": " More than 1 year has passed since last update.D\u8a00\u8a9e Advent Calendar 2014\u306e\u6700\u521d\u306e\u8a18\u4e8b\u3067\u3059\uff0e2013\u5e74\u3068\u540c\u3058\u304f\uff0c2014\u5e74\u306e\u9593\u306b\u3042\u3063\u305fD\u8a00\u8a9e\u3067\u5f71\u97ff\u306e\u3042\u308a\u305d\u3046\u306a\u5909\u66f4\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\uff0e\n\u73fe\u6bb5\u968e\u3067\u306edmd\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306f2.066.1\u3067\uff0c2.067.0\u306e\u30d9\u30fc\u30bf\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u3067\u3059(2.067\u306e\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u3092\u5f85\u3063\u3066\u307e\u3057\u305f\u304c\uff0c\u4eca\u5e74\u4e2d\u306b\u306f\u51fa\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u8ae6\u3081\u3066\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u307e\u3059)\uff0c\n\n\u516c\u5f0f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\ndmd\n\n\u8907\u6570\u30c7\u30a3\u30e1\u30f3\u30b7\u30e7\u30f3\u3067\u306e\u30a2\u30af\u30bb\u30b9\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\uff0copIndex / opIndexAssign\u306b\u3044\u304f\u3064\u3082\u5f15\u6570\u3092\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\nimport std.stdio;\n\nstruct A\n{\n    int[][] arr;\n\n    // other members\n\n    int opIndex(size_t i1, size_t i2) // 3\u3064\u306b\u3057\u305f\u304b\u3063\u305f\u3089size_t i3\u3092\u8db3\u3059\u3060\u3051\n    {\n        return arr[i1][i2];\n    }\n}\n\nvoid main()\n{\n    A a = A(new int[][](10, 10));\n    // mutate a object;\n    writeln(a[2,3]);\n}\n\n\u591a\u6b21\u5143\u914d\u5217\u3092\u4f7f\u3046\u6570\u5024\u8a08\u7b97\u306a\u3069\u3067\u6709\u7528\u3067\u3059\uff0e\n\n@nogc\n\nGC\u306e\u30d2\u30fc\u30d7\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7981\u6b62\u3059\u308b\u5c5e\u6027\u3067\u3059.\nvoid f() @nogc\n{\n    int* a = new int(10);\n}\n\n\n\u4e0a\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3088\u3046\u3068\u3059\u308b\u3068\uff0c\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\uff0e\nfoo.d(3): Error: cannot use 'new' in @nogc function f\n\n@nogc\u306b\u95a2\u3057\u3066\u306fmono_shoo\u3055\u3093\u304c\u66f8\u3044\u305f@nogc\u306b\u95a2\u3059\u308b\u8003\u5bdf\u3082\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0e\n\nshared\u578b\u3078\u306e\u66f8\u304d\u8fbc\u307f\u30c1\u30a7\u30c3\u30af\u306e\u5f37\u5316\nshared int global;\nvoid main()\n{\n    global++;\n    global *= 2;\n}\n\n\u4eca\u307e\u3067\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u8a31\u3055\u308c\u3066\u3044\u305f\u306e\u3067\u3059\u304c\uff0c2.066\u4ee5\u964d\u306f\u7981\u6b62\u3067\u3059\uff0e\u4ee5\u4e0b\u306e\u3088\u3046\u306bcore.atomic\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u7fa4\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\nshared int global;\nvoid main()\n{\n    import core.atomic;\n    atomicOp!\"+=\"(global, 1);\n    atomicOp!\"*=\"(global, 2);\n}\n\n\n\u6d6e\u52d5\u5c0f\u6570\u70b9\u5468\u308a\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\n\nDeprecate unordered floating point comparisons (!<>=, etc) and later remove them\n\n<>=\u3068\u304b!<>=\u7cfb\u306e\u3084\u3064\u304c\u5168\u90e8\u975e\u63a8\u5968\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\u307e\u3041\u8ab0\u3082\u4f7f\u3063\u3066\u306a\u304b\u3063\u305f\u3067\u3059\u3057\u2026\u3044\u305a\u308c\u524a\u9664\u3055\u308c\u307e\u3059\uff0e\n\nDeprecate float.min, double.min, real.min, and later remove them\n\nmin_normal\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\uff0e\u3053\u308c\u3089\u3082\u3044\u305a\u308c\u524a\u9664\u3055\u308c\u307e\u3059\uff0e\n\nCTFE\u6642\u306eunion\u306e\u9650\u5b9a\u7684\u306a\u30b5\u30dd\u30fc\u30c8\n\u81ea\u5206\u3067\u826f\u3044\u4f8b\u3092\u8003\u3048\u308b\u306e\u304c\u9762\u5012\u3060\u3063\u305f\u306e\u3067\uff0cChangeLog\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u5f15\u7528\u3057\u307e\u3059\uff0e\nunion U\n{\n    size_t x;\n    int* y;\n}\n\nbool test()\n{\n    U u;\n    assert(u.x == 0); // In here, reading u.y will cause CTFE error.\n\n    u.y = [1,2,3].ptr; // Writing value to overlapped field u.y will make corresponding field u.x invalid.\n\n    assert(u.y[0..3] == [1,2,3]); // u.y holds valid field and reading it is allowed\n    // In here, reading u.x will cause CTFE error.\n\n    u.x = 10; // Set value to u.x again.\n    assert(u.x == 10);  // OK\n    // In here, reading u.y will cause CTFE error.\n\n    return true;\n}\nstatic assert(test());  // run CTFE\n\n\u30b3\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u3042\u308b\u901a\u308a\u3067\u3059\uff0e\u3042\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5f04\u3063\u3066\u3044\u308b\u6642\u306b\u4ed6\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8aad\u307f\u8fbc\u3093\u3060\u308a\u3059\u308b\u306e\u306f\u30c0\u30e1\u306a\u3093\u3067\u3059\u304c(\u3064\u307e\u308aunion\u3092\u4f7f\u3063\u305f\u30d3\u30c3\u30c8\u64cd\u4f5c\u306f\u30c0\u30e1)\uff0c\u3061\u3083\u3093\u3068\u305d\u308c\u305e\u308c\u306b\u308f\u3051\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\u3053\u308c\u306b\u3088\u3063\u3066\uff0c\u3044\u304f\u3064\u304b\u306eunion\u30d9\u30fc\u30b9\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u52d5\u304f\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n\n\u65b0\u3057\u3044trait\n\ngetFunctionAttributes: \u95a2\u6570\u306b\u3064\u3044\u3066\u3044\u308b\u5c5e\u6027\u304c\u53d6\u5f97\u51fa\u6765\u307e\u3059\uff0e\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u7279\u5b9a\u306e\u5c5e\u6027\u3092\u6301\u3063\u305f\u95a2\u6570\u3067\u30e9\u30c3\u30d7\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u51fa\u6765\u308b\u304b\u3069\u3046\u304b\uff1f\u307f\u305f\u3044\u306a\u30c8\u30ea\u30c3\u30af\u306f\u3082\u3046\u3044\u308a\u307e\u305b\u3093\ngetAliasThis: alias this\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u3092\u8fd4\u3057\u307e\u3059\uff0e\u73fe\u72b6\u5fc5\u305a\u9577\u3055\u306f1\u3067\u3059\u304c\uff0cDIP66\u304c\u63a1\u629e\u3055\u308c\u305f\u306e\u3067\uff0c\u3044\u305a\u308c\u306f\u8907\u6570\u306e\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\nisTemplate: \u3042\u308b\u30b7\u30f3\u30dc\u30eb\u304ctemplate\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\u51fa\u6765\u308b\uff0e\n\n\ninout const\n\u6614\u306fimmutable(T)\u3068inout(T)\u306fconst(T)\u306b\u306a\u3063\u3066\u305f\u3093\u3067\u3059\u3051\u3069\uff0c\u3053\u308c\u3060\u3068inout\u60c5\u5831\u304c\u6d88\u3048\u3066\u3057\u307e\u3046\u306e\u3067\uff0cinout const\u304c\u5897\u3048\u307e\u3057\u305f\uff0e\u3061\u3087\u3063\u3068\u578b\u304c\u5897\u3048\u3061\u3083\u3063\u305f\u306a\u3041\u3068\u3044\u3046\u611f\u3058\u3067\u500b\u4eba\u7684\u306b\u306f\u5fae\u5999\u306a\u3093\u3067\u3059\u304c\uff0c\u3053\u306e\u8fbaD3\u3067\u6574\u7406\u3055\u308c\u308b\u306e\u304b\u3069\u3046\u304b\u2026\n\n\u30b3\u30f3\u30d1\u30a4\u30e9\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5909\u66f4\n\n-noboundscheck: \u975e\u63a8\u5968\u306b\u306a\u308a\u307e\u3057\u305f\uff0eboundscheck=on/safeonly/off\u3068\u6307\u5b9a\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e-release\u3060\u3068safeonly\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\n-vgc: \u30d2\u30fc\u30d7\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u8d77\u304d\u308b\u3068\u3053\u308d\u3092\u5217\u6319\u3057\u3066\u304f\u308c\u307e\u3059\uff0e\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\n\n\nfoo.d(3): vgc: 'new' causes GC allocation\n\n\n-vcolumns: \u884c\u6570\u3060\u3051\u3058\u3083\u306a\u304f\u3066\uff0c\u4f55\u6587\u5b57\u76ee\u3067\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u3066\u3044\u308b\u304b\u3082\u304a\u3057\u3048\u3066\u304f\u308c\u307e\u3059\uff01\n\n\nfoo.d(3,14): vgc: 'new' causes GC allocation\n\n\n\n\ndruntime\n\n\u914d\u5217/\u9023\u60f3\u914d\u5217\u306e\u7d44\u307f\u8fbc\u307f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u95a2\u6570\u3067\u7f6e\u304d\u63db\u3048\n\u914d\u5217\u306edup/idup\uff0c\u9023\u60f3\u914d\u5217\u306erehash/dup/byKey/byValue/keys/values/get\u306f\u4eca\u307e\u3067\u7d44\u307f\u8fbc\u307f\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3060\u3063\u305f\u3093\u3067\u3059\u304c\uff0cD\u8a00\u8a9e\u306e\u578b\u3084\u5c5e\u6027\u306e\u6271\u3044\u304c\u6539\u5584\u3055\u308c\uff0c\u901a\u5e38\u306e\u95a2\u6570\u3067\u3082\u5b9f\u73fe\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\u306a\u306e\u3067\uff0c\u30d7\u30ed\u30d1\u30c6\u30a3\u304b\u3089\u901a\u5e38\u306e\u95a2\u6570\u3067\u5b9f\u88c5\u3057\u306a\u304a\u3057\u307e\u3057\u305f\uff0eUFCS\u306e\u304a\u304b\u3052\u3067\u4eca\u307e\u3067\u3068\u540c\u3058\u3088\u3046\u306b\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u308b\u306e\u3067\uff0c\u30e6\u30fc\u30b6\u5074\u306b\u306f\u4f55\u3082\u5f71\u97ff\u304c\u3042\u308a\u307e\u305b\u3093\uff0e\n\ncore.time.Duration\u306e\u6539\u5584\nDuration.get and Duration's individual unit getters are bug-prone\n\u6642\u9593\u95a2\u4fc2\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u4eba\u3067\u3042\u308c\u3070\u5d4c\u307e\u3063\u305f\u3053\u3068\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff0ccorea.time.Duration\u306b\u306f\u3042\u308b\u5358\u4f4d\u3067\u5024\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306eget\u3068total\u306e\u4e8c\u3064\u306e\u95a2\u6570\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\nassert(dur!\"hours\"(49).total!\"days\" == 2);\nassert(dur!\"hours\"(49).total!\"hours\" == 49);\n\nassert(dur!\"hours\"(49).get!\"days\"() == 2);\nassert(dur!\"hours\"(49).get!\"hours\"() == 1);\n\n\u6319\u52d5\u306e\u9055\u3044\u306f\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u8cb0\u3048\u308c\u3070\u5206\u304b\u308b\u3068\u601d\u3046\u3093\u3067\u3059\u304c\uff0ctotal\u304c\u3042\u308b\u5358\u4f4d\u3092\u57fa\u6e96\u306b\u3057\u3066\u53d6\u5f97\u3059\u308b\u306e\u306b\u5bfe\u3057\u3066\uff0cget\u306f\u3042\u308b\u5358\u4f4d\u3067\u306e\u307f\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5024\u3060\u3051\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e\u3053\u306eget\u304c\u540d\u524d\u304c\u6c4e\u7528\u7684\u904e\u304e\u308b\u4e0a\u306b\u9593\u9055\u3063\u305f\u4f7f\u3044\u65b9\u3092\u8a98\u767a\u3059\u308b\u306e\u3067\u975e\u63a8\u5968\u306b\u3057\u3066\uff0c\u3088\u308a\u308f\u304b\u308a\u3084\u3059\u3044split\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\uff0e\nauto d = dur!\"days\"(12) + dur!\"minutes\"(7) + dur!\"usecs\"(501223);\nlong days;\nint seconds;\nshort msecs;\nd.split!(\"days\", \"seconds\", \"msecs\")(days, seconds, msecs);\nassert(days == 12);\nassert(seconds == 7 * 60);\nassert(msecs == 501);\n\nauto splitStruct = d.split!(\"days\", \"seconds\", \"msecs\")();\nassert(splitStruct.days == 12);\nassert(splitStruct.seconds == 7 * 60);\nassert(splitStruct.msecs == 501);\n\nsplit\u306e\u4f7f\u3044\u65b9\u306f\u4e0a\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u898b\u308c\u3070\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\u5f15\u6570\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u306f\uff0c\u305d\u306e\u5f15\u6570\u306b\u305d\u308c\u305e\u308c\u306e\u5358\u4f4d\u3067\u306e\u5024\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\uff0e\u5f15\u6570\u304c\u306a\u3051\u308c\u3070\u69cb\u9020\u4f53\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\uff0c\u6b32\u3057\u3044\u5358\u4f4d\u306e\u30e1\u30f3\u30d0\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070\u826f\u3044\u3067\u3059\uff0e\nget\u3088\u308a\u306fAPI\u3068\u3057\u3066\u306f\u308f\u304b\u308a\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\nphobos\n\nstd.algorithm\n\n\n\nany/all/canFind/equal\u306etemplate\u5316\n\n\u3053\u308c\u306b\u3088\u3063\u3066\uff0c\u4ed6\u306e\u95a2\u6570\u306epredicator\u306b\u306a\u308c\u308b\u3088\u3046\u306b\u306a\u308a\uff0calias\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306b\u65b0\u3057\u3044predicator\u3092\u5b9a\u7fa9\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\nvoid main()\n{\n    string[] inputs = [\"foo1\", \"bar2\"];\n\n    bool allContainDigit;\n    foreach (input; inputs)\n    {\n        if (!any!isDigit(input))\n        {\n            allContainDigit = false;\n            break;\n        }\n    }\n}\n\n\u4eca\u307e\u3067\u4e0a\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u305f\u3082\u306e\u304c\uff0c\u4e0b\u306e\u3088\u3046\u306b\u3088\u308a\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u305f\uff0e\nvoid main()\n{\n    string[] inputs = [\"foo1\", \"bar2\"];\n    bool allContainDigit = all!(any!isDigit)(inputs);\n\n    // \u3042\u308b\u95a2\u6570\u3092alias\u3067wrap\u3059\u308b\u306e\u3082\u7c21\u5358\n    alias isAnyDigit = any!isDigit; \n}\n\n\n\npredSwitch, sum\u306e\u8ffd\u52a0\n\nstring res = 2.predSwitch!\"a < b\"(\n    1, \"less than 1\",\n    5, \"less than 5\",\n    10, \"less than 10\",\n    \"greater or equal to 10\");\n\nassert(res == \"less than 5\");\n\nsum\u306f\u540d\u524d\u306e\u901a\u308a\uff0cRange\u306e\u5404\u8981\u7d20\u3092\u8db3\u3057\u3066\u304f\u308c\u308b\u3084\u3064\u3067\u3059\uff0e\n\nstd.digest.sha\n\nSHA\u306b\u95a2\u3057\u3066\u306f\u4eca\u307e\u3067\u306fSHA1\u3060\u3051\u3067\u3057\u305f\u304c\uff0c\u4ed6\u306eSHA256\u3084SHA512\u306a\u3069\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\uff0e\n\nARM\u5bfe\u5fdc\ndruntime\u3082\u542b\u3081\u3066\u306a\u3093\u3067\u3059\u304c\uff0c\u3061\u3087\u304f\u3061\u3087\u304f\u300c\u3053\u3053\u304cARM\u3060\u3068\u4e0a\u624b\u304f\u884c\u304b\u306a\u3044\u300d\u307f\u305f\u3044\u306a\u30d1\u30c3\u30c1\u304c\u98db\u3093\u3067\u304d\u3066\u306f\u30de\u30fc\u30b8\u3055\u308c\u3066\u307e\u3057\u305f\uff0e\u53bb\u5e74\u3042\u305f\u308a\u304b\u3089D\u8a00\u8a9e\u3092Android\u4e0a\u3067\u4f7f\u3044\u305f\u3044\u4eba\u304c\u8272\u3005\u3068\u3084\u3063\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\uff0c\u3044\u305a\u308c\u306fD\u8a00\u8a9e\u3082gdc\u4f7f\u3063\u3066Android\u3067\u52d5\u304f\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\uff0e\n\nInPlace\u7248\u306e\u8ffd\u52a0\uff0c\u30b3\u30fc\u30c9\u306eimmtabule/pure/CTFE/@nogc\u5bfe\u5fdc\uff0cetc\n\u4eca\u5e74\u306fPhobos\u305d\u306e\u3082\u306e\u306b\u5927\u304d\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5909\u66f4\u306f\u305d\u3093\u306a\u306b\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\uff0e\u4e0a\u3067\u7d39\u4ecb\u3057\u305f\u3088\u3046\u306a\u6a5f\u80fd\u8ffd\u52a0\u306f\u52ff\u8ad6\u69d8\u3005\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3042\u308a\u307e\u3057\u305f\u304c\uff0c\u3069\u3061\u3089\u304b\u3068\u3044\u3046\u3068\u30d0\u30b0\u4fee\u6b63\u3084\u6700\u65b0\u6a5f\u80fd\u3078\u306e\u8ffd\u5f93\u304c\u591a\u304b\u3063\u305f\u6c17\u304c\u3057\u307e\u3059\uff0eCTFE\u3067\u52d5\u304b\u306a\u304b\u3063\u305f\u95a2\u6570\u306e\u3044\u304f\u3064\u304b\u306f\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3057\uff0cimmutable/pure/@nogc\u5316\uff0c\u30e1\u30e2\u30ea\u3092\u306a\u308b\u3079\u304f\u4f7f\u308f\u306a\u3044\u3088\u3046\u306bInPlace\u7248\u306e\u8ffd\u52a0\uff0c\u305d\u306e\u4ed6Range\u5468\u308a\u306e\u5bfe\u5fdc\u306a\u3069\uff0c\u5927\u91cf\u306e\u7d30\u3005\u3068\u3057\u305f\u5909\u66f4\u304c\u30e1\u30a4\u30f3\u3060\u3063\u305f\u306a\u3041\u3068\u601d\u3046\u5e74\u3067\u3057\u305f\uff0e\nstd.logger(std.log\u304c\u6b7b\u3093\u3067\u4ee3\u308f\u308a\u306b\u51fa\u3066\u304d\u305f\u3084\u3064)\uff0cstd.serialization\uff0cstd.lexer\u306a\u3069\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304cReview\u30ad\u30e5\u30fc\u306b\u8caf\u307e\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u3053\u306e\u8fba\u306f\u6765\u5e74\u8fba\u308a\u306b\u9032\u5c55\u304c\u3042\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u3041\u3068\u601d\u3063\u305f\u308a\u3057\u3066\u307e\u3059\uff0e\n\n\u305d\u306e\u4ed6\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 / \u30a4\u30d9\u30f3\u30c8\n\n\u30d9\u30fc\u30bf\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u306e\u6539\u5584\nBeta Testing\n\u30d9\u30fc\u30bf\u30ea\u30ea\u30fc\u30b9\u5468\u308a\u304c\u304b\u306a\u308a\u6539\u5584\u3055\u308c\u307e\u3057\u305f\uff0e\u5c02\u7528\u306e\u30da\u30fc\u30b8\u304c\u51fa\u6765\u307e\u3057\u305f\u3057\uff0cBlocker\u3084Regression\u3082\u30da\u30fc\u30b8\u4e0a\u3067\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\uff0c\u4f55\u304c\u554f\u984c\u304b\u3059\u3050\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u307e\u3059\uff0e\n\nD Cookbook\n\nD\u8a00\u8a9e\u754c\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u88fd\u9020\u5668\u306e\u4e00\u4eba\u3067\u3042\u308bAdam\u3055\u3093\u306e\u672c\u304cPackt Publishing\u304b\u3089\u51fa\u3066\u307e\u3057\u305f\uff0e\u5b9f\u306f\u307e\u3060\u8aad\u3093\u3067\u306a\u3044\u306e\u3067\uff0c\u6642\u9593\u3092\u898b\u3064\u3051\u3066\u8aad\u3080\uff01\n\nD\u8a00\u8a9e\u30e6\u30fc\u30b6\nFacebook\u306f\u76f8\u5909\u308f\u3089\u305aD\u8a00\u8a9e\u30e6\u30fc\u30b6\u306a\u3093\u3067\u3059\u304c(Facebook\u88fd\u306ePresto\u306eODBC\u30c9\u30e9\u30a4\u30d0\u306fD\u8a00\u8a9e\u88fd)\uff0c\u305d\u306e\u4ed6\u306b\u3082D\u8a00\u8a9e\u3067MQTT\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u66f8\u3044\u3066\u4f7f\u3063\u3066\u3044\u308b\u6240\u304c\u3042\u3063\u305f\u308a\uff0cAdroll\u3068\u3044\u3046\u6709\u540d\u306a\u30a2\u30c9\u7cfb\u306e\u4f1a\u793e\u306e\u4eba\u304c\u30c7\u30fc\u30bf\u51e6\u7406\u3067\u3064\u304b\u3063\u3066\u3044\u305f\u308a\u3068\uff0c\u30b3\u30c4\u30b3\u30c4\u30e6\u30fc\u30b6\u304c\u5897\u3048\u3066\u308b\u611f\u3058\u306f\u3057\u307e\u3059\uff0e\n\u30c7\u30fc\u30bf\u89e3\u6790\u3084\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3084\u6a5f\u68b0\u5b66\u7fd2\u3068\u304b\u306b\u306f\uff0c\u500b\u4eba\u7684\u306b\u306fD\u8a00\u8a9e\u306f\u304b\u306a\u308a\u5411\u3044\u3066\u3044\u308b\u3068\u306f\u601d\u3046\u306e\u3067\uff0c\u4eca\u5f8c\u3053\u306e\u8fba\u306f\u3061\u3087\u304f\u3061\u3087\u304f\u5897\u3048\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3063\u305f\u308a\u306f\u3057\u3066\u307e\u3059\uff0e\n\nDConf 2014\n\n\u4eca\u56de\u306f\u4e88\u5b9a\u304c\u3042\u308f\u306a\u304f\u3066\u53c2\u52a0\u51fa\u6765\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\uff0cDConf\u304c\u307e\u305f\u884c\u308f\u308c\u307e\u3057\u305f\uff0e\u4eca\u56de\u306fScott Meyers\u3082\u53c2\u52a0\u3057\u305f\u308a\u3068\uff0c\u524d\u3088\u308a\u3055\u3089\u306b\u5927\u304d\u304f\u306a\u3063\u305f\u3088\u3046\u3067\u3059\uff0e\nDConf 2015?\nDConf 2015\u3082\u3084\u308b\u3089\u3057\u3044\u306e\u3067\uff0c\u6642\u9593\u304c\u3042\u3048\u3070\u53c2\u52a0\u3057\u305f\u3044\u6240\u3067\u3059\uff0e\u3042\u3068SV\u3067D\u8a00\u8a9e\u306e\u30df\u30fc\u30c8\u30a2\u30c3\u30d7\u304c\u958b\u50ac\u3055\u308c\u308b\u3089\u3057\u304f\uff0c\u5c11\u3057\u6d3b\u767a\u306b\u306a\u3063\u3066\u304d\u3066\u307e\u3059\u306d\uff0e\n\n\u307e\u3068\u3081\n\u4e00\u5e74\u632f\u308a\u8fd4\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\u7834\u58ca\u7684\u5909\u66f4\u306b\u95a2\u3057\u3066\u306f\u3082\u3046\u5b8c\u5168\u306bRust\u306b\u8b72\u3063\u3066\u3057\u307e\u3063\u3066\uff0c\u304b\u306a\u308a\u6a5f\u80fd\u8ffd\u52a0\u30fb\u6539\u5584\u306e\u65b9\u306b\u958b\u767a\u306e\u6d41\u308c\u304c\u884c\u3063\u3066\u307e\u3059\uff0e\u6c7a\u3057\u3066\u5909\u66f4\u30fb\u524a\u9664\u304c\u884c\u308f\u308c\u306a\u3044\u308f\u3051\u3067\u306f\u306a\u3044\u3067\u3059\u304c\uff0c\u4ee5\u524d\u3088\u308a\u3082\u683c\u6bb5\u306b\u6e1b\u308a\u307e\u3057\u305f\uff0e\u3053\u3053\u3067\u306f\u8a00\u53ca\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u304c\uff0cgdc\u3084ldc\u306a\u3069\u306f\u76f8\u5909\u308f\u3089\u305a\u5143\u6c17\u3067\uff0c\u304a\u4e92\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u7af6\u3044\u3042\u3063\u305f\u308a\u3057\u3066\u307e\u3059\uff0e\n\u6765\u5e74\u306f\u3069\u306e\u65b9\u5411\u306b\u8235\u3092\u5207\u3063\u3066\u3044\u304f\u306e\u304b\uff0c\u697d\u3057\u307f\u3067\u3059\u306d\uff0e\n\nD\u8a00\u8a9e Advent Calendar 2014\u306e\u6700\u521d\u306e\u8a18\u4e8b\u3067\u3059\uff0e2013\u5e74\u3068\u540c\u3058\u304f\uff0c2014\u5e74\u306e\u9593\u306b\u3042\u3063\u305fD\u8a00\u8a9e\u3067\u5f71\u97ff\u306e\u3042\u308a\u305d\u3046\u306a\u5909\u66f4\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\uff0e\n\n\u73fe\u6bb5\u968e\u3067\u306edmd\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306f2.066.1\u3067\uff0c2.067.0\u306e\u30d9\u30fc\u30bf\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u3067\u3059(2.067\u306e\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u3092\u5f85\u3063\u3066\u307e\u3057\u305f\u304c\uff0c\u4eca\u5e74\u4e2d\u306b\u306f\u51fa\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u8ae6\u3081\u3066\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u307e\u3059)\uff0c\n\n# \u516c\u5f0f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\n## dmd\n\n### \u8907\u6570\u30c7\u30a3\u30e1\u30f3\u30b7\u30e7\u30f3\u3067\u306e\u30a2\u30af\u30bb\u30b9\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\uff0c`opIndex` / `opIndexAssign`\u306b\u3044\u304f\u3064\u3082\u5f15\u6570\u3092\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\n```d\nimport std.stdio;\n\nstruct A\n{\n    int[][] arr;\n\n    // other members\n\n    int opIndex(size_t i1, size_t i2) // 3\u3064\u306b\u3057\u305f\u304b\u3063\u305f\u3089size_t i3\u3092\u8db3\u3059\u3060\u3051\n    {\n        return arr[i1][i2];\n    }\n}\n\nvoid main()\n{\n    A a = A(new int[][](10, 10));\n    // mutate a object;\n    writeln(a[2,3]);\n}\n```\n\n\u591a\u6b21\u5143\u914d\u5217\u3092\u4f7f\u3046\u6570\u5024\u8a08\u7b97\u306a\u3069\u3067\u6709\u7528\u3067\u3059\uff0e\n\n### @nogc\n\nGC\u306e\u30d2\u30fc\u30d7\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u7981\u6b62\u3059\u308b\u5c5e\u6027\u3067\u3059.\n\n```d\nvoid f() @nogc\n{\n    int* a = new int(10);\n}\n\n```\n\n\u4e0a\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3088\u3046\u3068\u3059\u308b\u3068\uff0c\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\uff0e\n\n    foo.d(3): Error: cannot use 'new' in @nogc function f\n\n`@nogc`\u306b\u95a2\u3057\u3066\u306fmono_shoo\u3055\u3093\u304c\u66f8\u3044\u305f[@nogc\u306b\u95a2\u3059\u308b\u8003\u5bdf](http://qiita.com/mono_shoo/items/d2ce576a2cbf2a0aebbc)\u3082\u53c2\u8003\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0e\n\n### shared\u578b\u3078\u306e\u66f8\u304d\u8fbc\u307f\u30c1\u30a7\u30c3\u30af\u306e\u5f37\u5316\n\n```d\nshared int global;\nvoid main()\n{\n    global++;\n    global *= 2;\n}\n```\n\n\u4eca\u307e\u3067\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u8a31\u3055\u308c\u3066\u3044\u305f\u306e\u3067\u3059\u304c\uff0c2.066\u4ee5\u964d\u306f\u7981\u6b62\u3067\u3059\uff0e\u4ee5\u4e0b\u306e\u3088\u3046\u306b`core.atomic`\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u7fa4\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\n\n```d\nshared int global;\nvoid main()\n{\n    import core.atomic;\n    atomicOp!\"+=\"(global, 1);\n    atomicOp!\"*=\"(global, 2);\n}\n```\n\n\n### \u6d6e\u52d5\u5c0f\u6570\u70b9\u5468\u308a\u3092\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\n\n- [Deprecate unordered floating point comparisons (!<>=, etc) and later remove them](https://issues.dlang.org/show_bug.cgi?id=10369)\n\n`<>=`\u3068\u304b`!<>=`\u7cfb\u306e\u3084\u3064\u304c\u5168\u90e8\u975e\u63a8\u5968\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\u307e\u3041\u8ab0\u3082\u4f7f\u3063\u3066\u306a\u304b\u3063\u305f\u3067\u3059\u3057\u2026\u3044\u305a\u308c\u524a\u9664\u3055\u308c\u307e\u3059\uff0e\n\n- [Deprecate float.min, double.min, real.min, and later remove them](https://issues.dlang.org/show_bug.cgi?id=10439)\n\n`min_normal`\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\uff0e\u3053\u308c\u3089\u3082\u3044\u305a\u308c\u524a\u9664\u3055\u308c\u307e\u3059\uff0e\n\n### CTFE\u6642\u306eunion\u306e\u9650\u5b9a\u7684\u306a\u30b5\u30dd\u30fc\u30c8\n\n\u81ea\u5206\u3067\u826f\u3044\u4f8b\u3092\u8003\u3048\u308b\u306e\u304c\u9762\u5012\u3060\u3063\u305f\u306e\u3067\uff0cChangeLog\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u5f15\u7528\u3057\u307e\u3059\uff0e\n\n```d\nunion U\n{\n    size_t x;\n    int* y;\n}\n\nbool test()\n{\n    U u;\n    assert(u.x == 0); // In here, reading u.y will cause CTFE error.\n\n    u.y = [1,2,3].ptr; // Writing value to overlapped field u.y will make corresponding field u.x invalid.\n\n    assert(u.y[0..3] == [1,2,3]); // u.y holds valid field and reading it is allowed\n    // In here, reading u.x will cause CTFE error.\n\n    u.x = 10; // Set value to u.x again.\n    assert(u.x == 10);  // OK\n    // In here, reading u.y will cause CTFE error.\n\n    return true;\n}\nstatic assert(test());  // run CTFE\n```\n\n\u30b3\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u3042\u308b\u901a\u308a\u3067\u3059\uff0e\u3042\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5f04\u3063\u3066\u3044\u308b\u6642\u306b\u4ed6\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8aad\u307f\u8fbc\u3093\u3060\u308a\u3059\u308b\u306e\u306f\u30c0\u30e1\u306a\u3093\u3067\u3059\u304c(\u3064\u307e\u308aunion\u3092\u4f7f\u3063\u305f\u30d3\u30c3\u30c8\u64cd\u4f5c\u306f\u30c0\u30e1)\uff0c\u3061\u3083\u3093\u3068\u305d\u308c\u305e\u308c\u306b\u308f\u3051\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\u3053\u308c\u306b\u3088\u3063\u3066\uff0c\u3044\u304f\u3064\u304b\u306eunion\u30d9\u30fc\u30b9\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u52d5\u304f\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n\n### \u65b0\u3057\u3044trait\n\n- getFunctionAttributes: \u95a2\u6570\u306b\u3064\u3044\u3066\u3044\u308b\u5c5e\u6027\u304c\u53d6\u5f97\u51fa\u6765\u307e\u3059\uff0e\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u7279\u5b9a\u306e\u5c5e\u6027\u3092\u6301\u3063\u305f\u95a2\u6570\u3067\u30e9\u30c3\u30d7\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u51fa\u6765\u308b\u304b\u3069\u3046\u304b\uff1f\u307f\u305f\u3044\u306a\u30c8\u30ea\u30c3\u30af\u306f\u3082\u3046\u3044\u308a\u307e\u305b\u3093\n- getAliasThis: `alias this`\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u3092\u8fd4\u3057\u307e\u3059\uff0e\u73fe\u72b6\u5fc5\u305a\u9577\u3055\u306f1\u3067\u3059\u304c\uff0c[DIP66\u304c\u63a1\u629e\u3055\u308c\u305f](http://wiki.dlang.org/DIP66)\u306e\u3067\uff0c\u3044\u305a\u308c\u306f\u8907\u6570\u306e\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n- isTemplate: \u3042\u308b\u30b7\u30f3\u30dc\u30eb\u304ctemplate\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\u51fa\u6765\u308b\uff0e\n\n### inout const\n\n\u6614\u306f`immutable(T)`\u3068`inout(T)`\u306f`const(T)`\u306b\u306a\u3063\u3066\u305f\u3093\u3067\u3059\u3051\u3069\uff0c\u3053\u308c\u3060\u3068`inout`\u60c5\u5831\u304c\u6d88\u3048\u3066\u3057\u307e\u3046\u306e\u3067\uff0c`inout const`\u304c\u5897\u3048\u307e\u3057\u305f\uff0e\u3061\u3087\u3063\u3068\u578b\u304c\u5897\u3048\u3061\u3083\u3063\u305f\u306a\u3041\u3068\u3044\u3046\u611f\u3058\u3067\u500b\u4eba\u7684\u306b\u306f\u5fae\u5999\u306a\u3093\u3067\u3059\u304c\uff0c\u3053\u306e\u8fbaD3\u3067\u6574\u7406\u3055\u308c\u308b\u306e\u304b\u3069\u3046\u304b\u2026\n\n### \u30b3\u30f3\u30d1\u30a4\u30e9\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5909\u66f4\n\n- -noboundscheck: \u975e\u63a8\u5968\u306b\u306a\u308a\u307e\u3057\u305f\uff0eboundscheck=on/safeonly/off\u3068\u6307\u5b9a\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e-release\u3060\u3068safeonly\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\n- -vgc: \u30d2\u30fc\u30d7\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u8d77\u304d\u308b\u3068\u3053\u308d\u3092\u5217\u6319\u3057\u3066\u304f\u308c\u307e\u3059\uff0e\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\n    - `foo.d(3): vgc: 'new' causes GC allocation`\n- -vcolumns: \u884c\u6570\u3060\u3051\u3058\u3083\u306a\u304f\u3066\uff0c\u4f55\u6587\u5b57\u76ee\u3067\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u3066\u3044\u308b\u304b\u3082\u304a\u3057\u3048\u3066\u304f\u308c\u307e\u3059\uff01\n    - `foo.d(3,14): vgc: 'new' causes GC allocation`\n\n\n## druntime\n\n### \u914d\u5217/\u9023\u60f3\u914d\u5217\u306e\u7d44\u307f\u8fbc\u307f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u95a2\u6570\u3067\u7f6e\u304d\u63db\u3048\n\n\u914d\u5217\u306e`dup`/`idup`\uff0c\u9023\u60f3\u914d\u5217\u306e`rehash`/`dup`/`byKey`/`byValue`/`keys`/`values`/`get`\u306f\u4eca\u307e\u3067\u7d44\u307f\u8fbc\u307f\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3060\u3063\u305f\u3093\u3067\u3059\u304c\uff0cD\u8a00\u8a9e\u306e\u578b\u3084\u5c5e\u6027\u306e\u6271\u3044\u304c\u6539\u5584\u3055\u308c\uff0c\u901a\u5e38\u306e\u95a2\u6570\u3067\u3082\u5b9f\u73fe\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\u306a\u306e\u3067\uff0c\u30d7\u30ed\u30d1\u30c6\u30a3\u304b\u3089\u901a\u5e38\u306e\u95a2\u6570\u3067\u5b9f\u88c5\u3057\u306a\u304a\u3057\u307e\u3057\u305f\uff0eUFCS\u306e\u304a\u304b\u3052\u3067\u4eca\u307e\u3067\u3068\u540c\u3058\u3088\u3046\u306b\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u308b\u306e\u3067\uff0c\u30e6\u30fc\u30b6\u5074\u306b\u306f\u4f55\u3082\u5f71\u97ff\u304c\u3042\u308a\u307e\u305b\u3093\uff0e\n\n### core.time.Duration\u306e\u6539\u5584\n\n[Duration.get and Duration's individual unit getters are bug-prone](https://issues.dlang.org/show_bug.cgi?id=12837)\n\n\u6642\u9593\u95a2\u4fc2\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u4eba\u3067\u3042\u308c\u3070\u5d4c\u307e\u3063\u305f\u3053\u3068\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff0c`corea.time.Duration`\u306b\u306f\u3042\u308b\u5358\u4f4d\u3067\u5024\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e`get`\u3068`total`\u306e\u4e8c\u3064\u306e\u95a2\u6570\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\n\n```d\nassert(dur!\"hours\"(49).total!\"days\" == 2);\nassert(dur!\"hours\"(49).total!\"hours\" == 49);\n\nassert(dur!\"hours\"(49).get!\"days\"() == 2);\nassert(dur!\"hours\"(49).get!\"hours\"() == 1);\n```\n\n\u6319\u52d5\u306e\u9055\u3044\u306f\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u8cb0\u3048\u308c\u3070\u5206\u304b\u308b\u3068\u601d\u3046\u3093\u3067\u3059\u304c\uff0c`total`\u304c\u3042\u308b\u5358\u4f4d\u3092\u57fa\u6e96\u306b\u3057\u3066\u53d6\u5f97\u3059\u308b\u306e\u306b\u5bfe\u3057\u3066\uff0c`get`\u306f\u3042\u308b\u5358\u4f4d\u3067\u306e\u307f\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5024\u3060\u3051\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e\u3053\u306e`get`\u304c\u540d\u524d\u304c\u6c4e\u7528\u7684\u904e\u304e\u308b\u4e0a\u306b\u9593\u9055\u3063\u305f\u4f7f\u3044\u65b9\u3092\u8a98\u767a\u3059\u308b\u306e\u3067\u975e\u63a8\u5968\u306b\u3057\u3066\uff0c\u3088\u308a\u308f\u304b\u308a\u3084\u3059\u3044`split`\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\uff0e\n\n```d\nauto d = dur!\"days\"(12) + dur!\"minutes\"(7) + dur!\"usecs\"(501223);\nlong days;\nint seconds;\nshort msecs;\nd.split!(\"days\", \"seconds\", \"msecs\")(days, seconds, msecs);\nassert(days == 12);\nassert(seconds == 7 * 60);\nassert(msecs == 501);\n\nauto splitStruct = d.split!(\"days\", \"seconds\", \"msecs\")();\nassert(splitStruct.days == 12);\nassert(splitStruct.seconds == 7 * 60);\nassert(splitStruct.msecs == 501);\n```\n\n`split`\u306e\u4f7f\u3044\u65b9\u306f\u4e0a\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u898b\u308c\u3070\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\u5f15\u6570\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u306f\uff0c\u305d\u306e\u5f15\u6570\u306b\u305d\u308c\u305e\u308c\u306e\u5358\u4f4d\u3067\u306e\u5024\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\uff0e\u5f15\u6570\u304c\u306a\u3051\u308c\u3070\u69cb\u9020\u4f53\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\uff0c\u6b32\u3057\u3044\u5358\u4f4d\u306e\u30e1\u30f3\u30d0\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070\u826f\u3044\u3067\u3059\uff0e\n`get`\u3088\u308a\u306fAPI\u3068\u3057\u3066\u306f\u308f\u304b\u308a\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n## phobos\n\n### [std.algorithm](http://dlang.org/phobos/std_algorithm.html)\n\n- `any`/`all`/`canFind`/`equal`\u306etemplate\u5316\n\n\u3053\u308c\u306b\u3088\u3063\u3066\uff0c\u4ed6\u306e\u95a2\u6570\u306epredicator\u306b\u306a\u308c\u308b\u3088\u3046\u306b\u306a\u308a\uff0c`alias`\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306b\u65b0\u3057\u3044predicator\u3092\u5b9a\u7fa9\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\n```d\nvoid main()\n{\n    string[] inputs = [\"foo1\", \"bar2\"];\n\n    bool allContainDigit;\n    foreach (input; inputs)\n    {\n        if (!any!isDigit(input))\n        {\n            allContainDigit = false;\n            break;\n        }\n    }\n}\n```\n\n\u4eca\u307e\u3067\u4e0a\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u305f\u3082\u306e\u304c\uff0c\u4e0b\u306e\u3088\u3046\u306b\u3088\u308a\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u305f\uff0e\n\n```d\nvoid main()\n{\n    string[] inputs = [\"foo1\", \"bar2\"];\n    bool allContainDigit = all!(any!isDigit)(inputs);\n\n    // \u3042\u308b\u95a2\u6570\u3092alias\u3067wrap\u3059\u308b\u306e\u3082\u7c21\u5358\n    alias isAnyDigit = any!isDigit; \n}\n```\n\n- `predSwitch`, `sum`\u306e\u8ffd\u52a0\n\n```d\nstring res = 2.predSwitch!\"a < b\"(\n    1, \"less than 1\",\n    5, \"less than 5\",\n    10, \"less than 10\",\n    \"greater or equal to 10\");\n\nassert(res == \"less than 5\");\n```\n\n`sum`\u306f\u540d\u524d\u306e\u901a\u308a\uff0cRange\u306e\u5404\u8981\u7d20\u3092\u8db3\u3057\u3066\u304f\u308c\u308b\u3084\u3064\u3067\u3059\uff0e\n\n### [std.digest.sha](http://dlang.org/phobos/std_digest_sha.html)\n\nSHA\u306b\u95a2\u3057\u3066\u306f\u4eca\u307e\u3067\u306fSHA1\u3060\u3051\u3067\u3057\u305f\u304c\uff0c\u4ed6\u306eSHA256\u3084SHA512\u306a\u3069\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\uff0e\n\n### ARM\u5bfe\u5fdc\n\ndruntime\u3082\u542b\u3081\u3066\u306a\u3093\u3067\u3059\u304c\uff0c\u3061\u3087\u304f\u3061\u3087\u304f\u300c\u3053\u3053\u304cARM\u3060\u3068\u4e0a\u624b\u304f\u884c\u304b\u306a\u3044\u300d\u307f\u305f\u3044\u306a\u30d1\u30c3\u30c1\u304c\u98db\u3093\u3067\u304d\u3066\u306f\u30de\u30fc\u30b8\u3055\u308c\u3066\u307e\u3057\u305f\uff0e\u53bb\u5e74\u3042\u305f\u308a\u304b\u3089D\u8a00\u8a9e\u3092Android\u4e0a\u3067\u4f7f\u3044\u305f\u3044\u4eba\u304c\u8272\u3005\u3068\u3084\u3063\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\uff0c\u3044\u305a\u308c\u306fD\u8a00\u8a9e\u3082gdc\u4f7f\u3063\u3066Android\u3067\u52d5\u304f\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n### InPlace\u7248\u306e\u8ffd\u52a0\uff0c\u30b3\u30fc\u30c9\u306eimmtabule/pure/CTFE/@nogc\u5bfe\u5fdc\uff0cetc\n\n\u4eca\u5e74\u306fPhobos\u305d\u306e\u3082\u306e\u306b\u5927\u304d\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5909\u66f4\u306f\u305d\u3093\u306a\u306b\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\uff0e\u4e0a\u3067\u7d39\u4ecb\u3057\u305f\u3088\u3046\u306a\u6a5f\u80fd\u8ffd\u52a0\u306f\u52ff\u8ad6\u69d8\u3005\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3042\u308a\u307e\u3057\u305f\u304c\uff0c\u3069\u3061\u3089\u304b\u3068\u3044\u3046\u3068\u30d0\u30b0\u4fee\u6b63\u3084\u6700\u65b0\u6a5f\u80fd\u3078\u306e\u8ffd\u5f93\u304c\u591a\u304b\u3063\u305f\u6c17\u304c\u3057\u307e\u3059\uff0eCTFE\u3067\u52d5\u304b\u306a\u304b\u3063\u305f\u95a2\u6570\u306e\u3044\u304f\u3064\u304b\u306f\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3057\uff0c`immutable`/`pure`/`@nogc`\u5316\uff0c\u30e1\u30e2\u30ea\u3092\u306a\u308b\u3079\u304f\u4f7f\u308f\u306a\u3044\u3088\u3046\u306bInPlace\u7248\u306e\u8ffd\u52a0\uff0c\u305d\u306e\u4ed6Range\u5468\u308a\u306e\u5bfe\u5fdc\u306a\u3069\uff0c\u5927\u91cf\u306e\u7d30\u3005\u3068\u3057\u305f\u5909\u66f4\u304c\u30e1\u30a4\u30f3\u3060\u3063\u305f\u306a\u3041\u3068\u601d\u3046\u5e74\u3067\u3057\u305f\uff0e\n\nstd.logger(std.log\u304c\u6b7b\u3093\u3067\u4ee3\u308f\u308a\u306b\u51fa\u3066\u304d\u305f\u3084\u3064)\uff0cstd.serialization\uff0cstd.lexer\u306a\u3069\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304cReview\u30ad\u30e5\u30fc\u306b\u8caf\u307e\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u3053\u306e\u8fba\u306f\u6765\u5e74\u8fba\u308a\u306b\u9032\u5c55\u304c\u3042\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u3041\u3068\u601d\u3063\u305f\u308a\u3057\u3066\u307e\u3059\uff0e\n\n# \u305d\u306e\u4ed6\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 / \u30a4\u30d9\u30f3\u30c8\n\n## \u30d9\u30fc\u30bf\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u306e\u6539\u5584\n\n[Beta Testing](http://wiki.dlang.org/Beta_Testing)\n\n\u30d9\u30fc\u30bf\u30ea\u30ea\u30fc\u30b9\u5468\u308a\u304c\u304b\u306a\u308a\u6539\u5584\u3055\u308c\u307e\u3057\u305f\uff0e\u5c02\u7528\u306e\u30da\u30fc\u30b8\u304c\u51fa\u6765\u307e\u3057\u305f\u3057\uff0cBlocker\u3084Regression\u3082\u30da\u30fc\u30b8\u4e0a\u3067\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u3067\uff0c\u4f55\u304c\u554f\u984c\u304b\u3059\u3050\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u307e\u3059\uff0e\n\n## [D Cookbook](https://www.packtpub.com/application-development/d-cookbook)\n\nD\u8a00\u8a9e\u754c\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u88fd\u9020\u5668\u306e\u4e00\u4eba\u3067\u3042\u308bAdam\u3055\u3093\u306e\u672c\u304cPackt Publishing\u304b\u3089\u51fa\u3066\u307e\u3057\u305f\uff0e\u5b9f\u306f\u307e\u3060\u8aad\u3093\u3067\u306a\u3044\u306e\u3067\uff0c\u6642\u9593\u3092\u898b\u3064\u3051\u3066\u8aad\u3080\uff01\n\n## D\u8a00\u8a9e\u30e6\u30fc\u30b6\n\nFacebook\u306f\u76f8\u5909\u308f\u3089\u305aD\u8a00\u8a9e\u30e6\u30fc\u30b6\u306a\u3093\u3067\u3059\u304c(Facebook\u88fd\u306ePresto\u306e[ODBC\u30c9\u30e9\u30a4\u30d0\u306fD\u8a00\u8a9e\u88fd](https://github.com/prestodb/presto-odbc))\uff0c\u305d\u306e\u4ed6\u306b\u3082[D\u8a00\u8a9e\u3067MQTT\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u66f8\u3044\u3066\u4f7f\u3063\u3066\u3044\u308b\u6240](https://atilanevesoncode.wordpress.com/2014/01/08/adding-java-and-c-to-the-mqtt-benchmarks-or-how-i-learned-to-stop-worrying-and-love-the-garbage-collector/)\u304c\u3042\u3063\u305f\u308a\uff0c[Adroll\u3068\u3044\u3046\u6709\u540d\u306a\u30a2\u30c9\u7cfb\u306e\u4f1a\u793e\u306e\u4eba\u304c\u30c7\u30fc\u30bf\u51e6\u7406\u3067\u3064\u304b\u3063\u3066\u3044\u305f\u308a](http://tech.adroll.com/blog/data/2014/11/17/d-is-for-data-science.html)\u3068\uff0c\u30b3\u30c4\u30b3\u30c4\u30e6\u30fc\u30b6\u304c\u5897\u3048\u3066\u308b\u611f\u3058\u306f\u3057\u307e\u3059\uff0e\n\n\u30c7\u30fc\u30bf\u89e3\u6790\u3084\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3084\u6a5f\u68b0\u5b66\u7fd2\u3068\u304b\u306b\u306f\uff0c\u500b\u4eba\u7684\u306b\u306fD\u8a00\u8a9e\u306f\u304b\u306a\u308a\u5411\u3044\u3066\u3044\u308b\u3068\u306f\u601d\u3046\u306e\u3067\uff0c\u4eca\u5f8c\u3053\u306e\u8fba\u306f\u3061\u3087\u304f\u3061\u3087\u304f\u5897\u3048\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3063\u305f\u308a\u306f\u3057\u3066\u307e\u3059\uff0e\n\n## [DConf 2014](http://dconf.org/2014/index.html)\n\n\u4eca\u56de\u306f\u4e88\u5b9a\u304c\u3042\u308f\u306a\u304f\u3066\u53c2\u52a0\u51fa\u6765\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\uff0cDConf\u304c\u307e\u305f\u884c\u308f\u308c\u307e\u3057\u305f\uff0e\u4eca\u56de\u306fScott Meyers\u3082\u53c2\u52a0\u3057\u305f\u308a\u3068\uff0c\u524d\u3088\u308a\u3055\u3089\u306b\u5927\u304d\u304f\u306a\u3063\u305f\u3088\u3046\u3067\u3059\uff0e\n\n[DConf 2015?](http://forum.dlang.org/thread/gcukbcpxfawjaohnofsn@forum.dlang.org)\n\nDConf 2015\u3082\u3084\u308b\u3089\u3057\u3044\u306e\u3067\uff0c\u6642\u9593\u304c\u3042\u3048\u3070\u53c2\u52a0\u3057\u305f\u3044\u6240\u3067\u3059\uff0e\u3042\u3068[SV\u3067D\u8a00\u8a9e\u306e\u30df\u30fc\u30c8\u30a2\u30c3\u30d7\u304c\u958b\u50ac](http://www.meetup.com/D-Lang-Sillicon-Valley/events/219413448/)\u3055\u308c\u308b\u3089\u3057\u304f\uff0c\u5c11\u3057\u6d3b\u767a\u306b\u306a\u3063\u3066\u304d\u3066\u307e\u3059\u306d\uff0e\n\n# \u307e\u3068\u3081\n\n\u4e00\u5e74\u632f\u308a\u8fd4\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\u7834\u58ca\u7684\u5909\u66f4\u306b\u95a2\u3057\u3066\u306f\u3082\u3046\u5b8c\u5168\u306bRust\u306b\u8b72\u3063\u3066\u3057\u307e\u3063\u3066\uff0c\u304b\u306a\u308a\u6a5f\u80fd\u8ffd\u52a0\u30fb\u6539\u5584\u306e\u65b9\u306b\u958b\u767a\u306e\u6d41\u308c\u304c\u884c\u3063\u3066\u307e\u3059\uff0e\u6c7a\u3057\u3066\u5909\u66f4\u30fb\u524a\u9664\u304c\u884c\u308f\u308c\u306a\u3044\u308f\u3051\u3067\u306f\u306a\u3044\u3067\u3059\u304c\uff0c\u4ee5\u524d\u3088\u308a\u3082\u683c\u6bb5\u306b\u6e1b\u308a\u307e\u3057\u305f\uff0e\u3053\u3053\u3067\u306f\u8a00\u53ca\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u304c\uff0cgdc\u3084ldc\u306a\u3069\u306f\u76f8\u5909\u308f\u3089\u305a\u5143\u6c17\u3067\uff0c\u304a\u4e92\u3044\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u7af6\u3044\u3042\u3063\u305f\u308a\u3057\u3066\u307e\u3059\uff0e\n\u6765\u5e74\u306f\u3069\u306e\u65b9\u5411\u306b\u8235\u3092\u5207\u3063\u3066\u3044\u304f\u306e\u304b\uff0c\u697d\u3057\u307f\u3067\u3059\u306d\uff0e\n", "tags": ["dlang"]}