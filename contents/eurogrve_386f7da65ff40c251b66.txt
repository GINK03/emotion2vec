{"context": "\n\n\u25a0 \u6570\u5024N(<=25)\u3092\u91cd\u8907\u3057\u306a\u3044\u6570\u5024\u306b\u5206\u5272\n\u6570\u5024N\u3092\u91cd\u8907\u3057\u306a\u3044\u6570\u5024\u306b\u5206\u5272\u3059\u308b\u8ab2\u984c(CodeIQ\u306e\u554f\u984c\u3092\u89e3\u304f\u305f\u3081\u306b\u5fc5\u8981\u306a\u8a08\u7b97)\u306b\u3064\u3044\u3066\u8003\u3048\u3066\n\u7121\u7406\u3084\u308a3\u30d1\u30bf\u30fc\u30f3\u4f5c\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n\u89e3\u7b54\u4f8b\nN=3\u306e\u5834\u5408\u3001(1+2),(3)\nN=6\u306e\u5834\u5408\u3001(1+2+3),(1+5),(2+4),(6)\n\n\n\n\u25a0 \u4f55\u306e\u305f\u3081\u306b\u4f5c\u308b\u306e\u304b\uff1f\n\u5168\u691c\u7d22\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u30b9\u30bf\u30c3\u30af\u3084\u30ad\u30e5\u30fc\u3092\u4f7f\u3063\u305f\u5834\u5408\u306e\u8003\u3048\u65b9\u306b\u3082\u6163\u308c\u305f\u3044\u3002\n\u518d\u8d77\u547c\u3073\u51fa\u3057\u4ee5\u5916\u3067\u306e\u5b9f\u88c5\u306f\u3069\u3046\u3059\u308b\u306e\u304b\uff1f\u3092\u8003\u3048\u305f\u304f\u306a\u3063\u305f\u3002\n\n\u25a0 \u5b9f\u88c5(C++)\nideone.com\u3067\u52d5\u4f5c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\u25a1 1. \u7dcf\u5f53\u305f\u308a\u65b9\u5f0f\uff08brute_force\u95a2\u6570\uff09\n\u307e\u305a\u306f\u96e3\u3057\u3044\u4e8b\u3092\u8003\u3048\u305a\u306b\u7dcf\u5f53\u305f\u308a\u65b9\u5f0f\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\nnum\u306e\u5404\u30d3\u30c3\u30c8\u3092\u4e0b\u4f4d\u304b\u30891,2,3,...\u3068\u8aad\u307f\u63db\u3048\u3066\u5408\u8a08\u5024\u304cN\u306a\u3089\u8a72\u5f53\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u65b9\u6cd5\u3002\n\u8003\u3048\u3089\u308c\u308b\u30d1\u30bf\u30fc\u30f3\u3092\u5168\u3066\u63a2\u7d22\u3059\u308b\u306e\u3067\u9045\u3044\u304c\u3001\u5168\u30d1\u30bf\u30fc\u30f3\u691c\u7d22\u3067\u304d\u308b\u304b\u306f\u4e00\u76ee\u77ad\u7136\u3002\n\nbrute_force\nint brute_force(int N)\n{\n    int num, i, val;\n    int count = 0;\n    for (num = 1; num < (1 << N); num++) {\n        val = 0;\n        for (i = 0; i<MAXNUMBER; i++) {\n            if (num & (1 << i)) { val += (i + 1); }\n        }\n        if (val == N) {\n            count++;\n        }\n    }\n    return count;\n}\n\n\nN=3\u306e\u5834\u5408\u30010b001, 0b010, 0b011, 0b100, 0b101, 0b110, 0b111 \u306e7\u30d1\u30bf\u30fc\u30f3(2^3-1)\u306b\u5bfe\u3057N\u3068\u7b49\u4fa1\u304b\u8abf\u67fb\u3059\u308b\u3002\nN=6\u306e\u5834\u5408\u306f\u300163\u30d1\u30bf\u30fc\u30f3=(2^6)-1\u306b\u5bfe\u3057\u2026\u4ee5\u4e0b\u3001\u7565\u2026\nN=25\u306e\u5834\u5408\u306f\u300133554431\u30d1\u30bf\u30fc\u30f3=(2^25-1)\u306b\u5bfe\u3057\u2026\u4ee5\u4e0b\u3001\u7565\u2026\n\u7d50\u8ad6\uff1a\u8a08\u7b97\u6570\u304c\u591a\u3059\u304e\u3066\u5b9f\u7528\u306b\u306a\u3089\u306a\u3044(CodeIQ\u306e\u5236\u9650\u6642\u9593\u306b\u5f15\u3063\u304b\u304b\u308b)\nideone.com\u306f\u3001\u9ad8\u901f\u306aCPU\u3092\u4f7f\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u51c4\u304f\u901f\u304f\u3066\u30d3\u30c3\u30af\u30ea\u3057\u305f\u304c...\n\n\u25a1 2. \u518d\u8d77\u547c\u3073\u51fa\u3057\u65b9\u5f0f\uff08recursive\u95a2\u6570\uff09\n\u4ed6\u95a2\u6570\u3068\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5171\u901a\u5316\u3057\u3088\u3046\u3068\u601d\u3063\u3066\u5b9f\u88c5\u3057\u305f\u306e\u3067\u7406\u89e3\u3057\u306b\u304f\u304f\u3066\u7533\u3057\u8a33\u306a\u3044\u611f\u3058\u3067\u3059\u304c...\n\nrecursive\nint recursive(int N, PartData* prev = NULL)\n{\n    int n;\n    int num = 0;\n    PartData pd = { 0, 1 };\n\n    if (prev == NULL) { prev = &pd; }\n\n    for (n = prev->start; n <= N; n++)\n    {\n        PartData nd = *prev;\n        nd.sum += n;\n        nd.start = n + 1;\n        nd.hist[n] = n;\n\n        if (nd.sum > N) { return 0; }\n        if (nd.sum == N)\n        {\n            PartDataPrint(&nd);\n            num++;\n            return num;\n        }\n        else\n        {\n            num += recursive(N, &nd);\n        }\n    }\n    return num;\n}\n\n\n\u76ee\u6a19\u5024N\u306b\u5bfe\u3057\u30661\u304b\u3089\u9806\u756a\u306b\u52a0\u7b97\u3057\u3066\u3044\u304dN\u3088\u308a\u5c0f\u3055\u3051\u308c\u3070\u518d\u8d77\u547c\u3073\u51fa\u3057\u3092\u3059\u308b\u3002\n\u76ee\u6a19\u5024N\u3088\u308a\u5927\u304d\u3051\u308c\u3070\u51e6\u7406\u3092\u6b62\u3081\u308b\u306e\u3067\u7121\u99c4\u304c\u306a\u3044\u3002\n\n\u52d5\u4f5c\u4f8b(+\u306f\u518d\u8d77\u547c\u3073\u51fa\u3057\u767a\u751f\u3092\u793a\u3059)\n1 + 2 + 3 = 6 : OK\n1 + 2 + 4 = 7 : NG\n1 + 3 + 4 = 8 : NG\n1 + 4 + 5 = 9 : NG\n1 + 5     = 6 : OK\n2 + 3 + 4 = 9 : NG\n2 + 4     = 6 : OK\n\u4ee5\u4e0b\u7565\u3001\u3001\u3001\n\n\n\n3. \u30ad\u30e5\u30fcor\u30b9\u30bf\u30c3\u30af\u3092\u5229\u7528\u3059\u308b\u65b9\u5f0f\uff08stack_or_que\u95a2\u6570\uff09\n\nstack_or_que\n//-----------------------------------------------------------------------------\n// \u30b9\u30bf\u30c3\u30af or \u30ad\u30e5\u30fc\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\n//-----------------------------------------------------------------------------\nint stack_or_que(int N, int isStack)\n{\n    int i;\n    int num = 0;\n    std::stack<PartData> stk;\n    std::queue<PartData> que;\n\n    // \u521d\u671f\u5024\u767b\u9332\n    //  \u5408\u8a08\u5024       = 0\n    //  \u30eb\u30fc\u30d7\u958b\u59cb\u5024 = 1\n    PartData s = { 0, 1 };\n    if (isStack)    stk.push(s);\n    else        que.push(s);\n\n    while ((isStack ? stk.size() : que.size()) > 0)\n    {\n        if (isStack) { s = stk.top();   stk.pop(); } // \u5024\u3092\u53d6\u308a\u51fa\u3059\n        else { s = que.front(); que.pop(); } // \u5024\u3092\u53d6\u308a\u51fa\u3059\n\n        // \u76ee\u6a19\u5024\u306b\u5230\u9054\u3057\u3066\u3044\u308c\u3070\u8868\u793a\u3057\u3066\u6b21\u3078\n        if (s.sum == N)\n        {\n            PartDataPrint(&s);\n            num++;\n            continue;\n        }\n\n        // s \u3092 1 \u8981\u7d20\u5206\u3060\u3051\u63a2\u7d22\n        // \"\u5408\u8a08\u5024 <= N\" \u306e\u6761\u4ef6\u306b\u8a72\u5f53\u3059\u308b\u3082\u306e\u3092\u767b\u9332\n        for (i = s.start; i <= N; i++)\n        {\n            PartData cp = s;\n            cp.sum += i;\n            cp.start = i + 1;\n            cp.hist[i] = i;\n\n            if (cp.sum > N)\n            {\n                break; // \u3053\u308c\u4ee5\u4e0a\u306e\u63a2\u7d22\u306f\u7121\u99c4\u306a\u306e\u3067break\n            }\n            // \u6b21\u306b\u671f\u5f85\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u30b9\u30eb\u30fc\n            if ((cp.sum < N) && (cp.sum + cp.start) > N) {\n                continue;\n            }\n            if (isStack) { stk.push(cp); }\n            else { que.push(cp); }\n        }\n    }\n    return num;\n}\n\n\n\u4e0b\u8a18\u306e\u539f\u5247\u3067\u52d5\u4f5c\u3059\u308b\u3002(\u7406\u89e3\u3057\u306b\u304f\u3044\u306a\u3041...)\npop\u3057\u305f\u5024(s.sum)\u306bs.start \uff5e N\u306e\u5024\u3092\u52a0\u7b97\u3057\u3001\u7d50\u679c\u304cN\u4ee5\u4e0b\u306a\u3089\u6b21\u306e\u5019\u88dc\u3068\u3057\u3066push\u3059\u308b\u3002\n1\u56de\u76ee\u306epop\u3067\u3001recursive\u95a2\u6570\u306e1\u968e\u5c64\u76ee\u306e\u30eb\u30fc\u30d7\u306b\u76f8\u5f53\u3059\u308b\u51e6\u7406\u3002\n2\u56de\u76ee\u4ee5\u964d\u306epop\u3067\u306f\u3001recursive\u95a2\u6570\u306e2\u968e\u5c64\u76ee\u4ee5\u964d\u306e\u30eb\u30fc\u30d7\u306b\u76f8\u5f53\u3059\u308b\u51e6\u7406\u3002\n\u8981\u306fpop\u3067\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u3092\u898b\u3066\u3001\u6b21\u306b\u6301\u3061\u8d8a\u3059\u304b\u3001\u7834\u68c4\u3059\u308b\u304b\u306e2\u629e\u51e6\u7406\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u30ad\u30e5\u30fc\u5229\u7528\u6642\u306e\u8aac\u660e(N=6)\u3000\u203b\u30ad\u30e5\u30fc\u64cd\u4f5c\u306a\u306e\u306bpush/pop\u3068\u66f8\u3044\u3066\u3042\u308b\u306e\u306f\u30b9\u30eb\u30fc\u3067\n1\u56de\u76eepop sum=0, start=1\n  [0+1] sum=1, start=2 : push (N\u3088\u308a\u5c0f\u3055\u3044\u306e\u3067\u7d99\u7d9a)\n  [0+2] sum=2, start=3 : push (N\u3088\u308a\u5c0f\u3055\u3044\u306e\u3067\u7d99\u7d9a)\n  [0+3] sum=3, start=4 : continue (\u7834\u68c4)\n  [0+4] sum=4, start=5 : continue (\u7834\u68c4)\n  [0+5] sum=5, start=6 : continue (\u7834\u68c4)\n  [0+6] sum=6, start=7 : push (N\u3068\u7b49\u4fa1\u306a\u306e\u3067pop\u6642\u306b\u8868\u793a)\n2\u56de\u76eepop sum=1, start=2\n  [0+1+2] sum=3, start=3 : push (N\u3088\u308a\u5c0f\u3055\u3044\u306e\u3067\u7d99\u7d9a)\n  [0+1+3] sum=4, start=4 : continue (\u7834\u68c4)\n  [0+1+4] sum=5, start=5 : continue (\u7834\u68c4)\n  [0+1+5] sum=6, start=6 : push (N\u3068\u7b49\u4fa1\u306a\u306e\u3067pop\u6642\u306b\u8868\u793a)\n  [0+1+6] sum=7, start=7 : break (\u7834\u68c4)\n3\u56de\u76eepop sum=2, start=3\n  [0+2+3] sum=5, start=4 : continue (\u7834\u68c4)\n  [0+2+4] sum=6, start=5 : push (N\u3068\u7b49\u4fa1\u306a\u306e\u3067pop\u6642\u306b\u8868\u793a)\n  [0+2+5] sum=7, start=6 : break (\u7834\u68c4)\n4\u56de\u76eepop sum=6, start=7 \u2192 \u767a\u898b\n5\u56de\u76eepop sum=3, start=3\n  [0+1+2+3] sum=6, start=4 : push (N\u3068\u7b49\u4fa1\u306a\u306e\u3067pop\u6642\u306b\u8868\u793a)\n  [0+1+2+4] sum=7, start=5 : break\n6\u56de\u76eepop sum=6, start=6 \u2192 \u767a\u898b\n7\u56de\u76eepop sum=6, start=5 \u2192 \u767a\u898b\n8\u56de\u76eepop sum=6, start=4 \u2192 \u767a\u898b\n\n\n\n\u25a0\u7d50\u8ad6\n\u518d\u8d77\u547c\u3073\u51fa\u3057\u304c\u4e00\u756a\u308f\u304b\u308a\u3084\u3059\u3044\u5b9f\u88c5\u306b\u898b\u3048\u308b\u304c\u3001\u5b9f\u88c5\u306f\u51fa\u6765\u305f\u3002\n\u3082\u3046\u3061\u3087\u3063\u3068\u3001\u30de\u30b7\u306a\u5b9f\u88c5\u304c\u3042\u308b\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u306e\u3060\u304c\u30fb\u30fb\u30fb\n# \u25a0 \u6570\u5024N(<=25)\u3092\u91cd\u8907\u3057\u306a\u3044\u6570\u5024\u306b\u5206\u5272\n\u6570\u5024N\u3092\u91cd\u8907\u3057\u306a\u3044\u6570\u5024\u306b\u5206\u5272\u3059\u308b\u8ab2\u984c(CodeIQ\u306e\u554f\u984c\u3092\u89e3\u304f\u305f\u3081\u306b\u5fc5\u8981\u306a\u8a08\u7b97)\u306b\u3064\u3044\u3066\u8003\u3048\u3066\n\u7121\u7406\u3084\u308a3\u30d1\u30bf\u30fc\u30f3\u4f5c\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n```text:\u89e3\u7b54\u4f8b\nN=3\u306e\u5834\u5408\u3001(1+2),(3)\nN=6\u306e\u5834\u5408\u3001(1+2+3),(1+5),(2+4),(6)\n```\n\n## \u25a0 \u4f55\u306e\u305f\u3081\u306b\u4f5c\u308b\u306e\u304b\uff1f\n\u5168\u691c\u7d22\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u30b9\u30bf\u30c3\u30af\u3084\u30ad\u30e5\u30fc\u3092\u4f7f\u3063\u305f\u5834\u5408\u306e\u8003\u3048\u65b9\u306b\u3082\u6163\u308c\u305f\u3044\u3002\n\u518d\u8d77\u547c\u3073\u51fa\u3057\u4ee5\u5916\u3067\u306e\u5b9f\u88c5\u306f\u3069\u3046\u3059\u308b\u306e\u304b\uff1f\u3092\u8003\u3048\u305f\u304f\u306a\u3063\u305f\u3002\n\n## \u25a0 \u5b9f\u88c5(C++)\n[ideone.com](http://ideone.com/abDUD5)\u3067\u52d5\u4f5c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n### \u25a1 1. \u7dcf\u5f53\u305f\u308a\u65b9\u5f0f\uff08brute_force\u95a2\u6570\uff09\n\u307e\u305a\u306f\u96e3\u3057\u3044\u4e8b\u3092\u8003\u3048\u305a\u306b\u7dcf\u5f53\u305f\u308a\u65b9\u5f0f\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\nnum\u306e\u5404\u30d3\u30c3\u30c8\u3092\u4e0b\u4f4d\u304b\u30891,2,3,...\u3068\u8aad\u307f\u63db\u3048\u3066\u5408\u8a08\u5024\u304cN\u306a\u3089\u8a72\u5f53\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\u65b9\u6cd5\u3002\n\u8003\u3048\u3089\u308c\u308b\u30d1\u30bf\u30fc\u30f3\u3092\u5168\u3066\u63a2\u7d22\u3059\u308b\u306e\u3067\u9045\u3044\u304c\u3001\u5168\u30d1\u30bf\u30fc\u30f3\u691c\u7d22\u3067\u304d\u308b\u304b\u306f\u4e00\u76ee\u77ad\u7136\u3002\n\n```c++:brute_force\nint brute_force(int N)\n{\n    int num, i, val;\n    int count = 0;\n    for (num = 1; num < (1 << N); num++) {\n        val = 0;\n        for (i = 0; i<MAXNUMBER; i++) {\n            if (num & (1 << i)) { val += (i + 1); }\n        }\n        if (val == N) {\n            count++;\n        }\n    }\n    return count;\n}\n```\n\nN=3\u306e\u5834\u5408\u30010b001, 0b010, 0b011, 0b100, 0b101, 0b110, 0b111 \u306e7\u30d1\u30bf\u30fc\u30f3(2^3-1)\u306b\u5bfe\u3057N\u3068\u7b49\u4fa1\u304b\u8abf\u67fb\u3059\u308b\u3002\nN=6\u306e\u5834\u5408\u306f\u300163\u30d1\u30bf\u30fc\u30f3=(2^6)-1\u306b\u5bfe\u3057\u2026\u4ee5\u4e0b\u3001\u7565\u2026\nN=25\u306e\u5834\u5408\u306f\u300133554431\u30d1\u30bf\u30fc\u30f3=(2^25-1)\u306b\u5bfe\u3057\u2026\u4ee5\u4e0b\u3001\u7565\u2026\n**\u7d50\u8ad6\uff1a\u8a08\u7b97\u6570\u304c\u591a\u3059\u304e\u3066\u5b9f\u7528\u306b\u306a\u3089\u306a\u3044(CodeIQ\u306e\u5236\u9650\u6642\u9593\u306b\u5f15\u3063\u304b\u304b\u308b)**\n**ideone.com\u306f\u3001\u9ad8\u901f\u306aCPU\u3092\u4f7f\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u51c4\u304f\u901f\u304f\u3066\u30d3\u30c3\u30af\u30ea\u3057\u305f\u304c...**\n\n### \u25a1 2. \u518d\u8d77\u547c\u3073\u51fa\u3057\u65b9\u5f0f\uff08recursive\u95a2\u6570\uff09\n*\u4ed6\u95a2\u6570\u3068\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5171\u901a\u5316\u3057\u3088\u3046\u3068\u601d\u3063\u3066\u5b9f\u88c5\u3057\u305f\u306e\u3067\u7406\u89e3\u3057\u306b\u304f\u304f\u3066\u7533\u3057\u8a33\u306a\u3044\u611f\u3058\u3067\u3059\u304c...*\n\n```c++:recursive\nint recursive(int N, PartData* prev = NULL)\n{\n\tint n;\n\tint num = 0;\n\tPartData pd = { 0, 1 };\n\n\tif (prev == NULL) { prev = &pd; }\n\n\tfor (n = prev->start; n <= N; n++)\n\t{\n\t\tPartData nd = *prev;\n\t\tnd.sum += n;\n\t\tnd.start = n + 1;\n\t\tnd.hist[n] = n;\n\n\t\tif (nd.sum > N) { return 0; }\n\t\tif (nd.sum == N)\n\t\t{\n\t\t\tPartDataPrint(&nd);\n\t\t\tnum++;\n\t\t\treturn num;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tnum += recursive(N, &nd);\n\t\t}\n\t}\n\treturn num;\n}\n```\n\n\u76ee\u6a19\u5024N\u306b\u5bfe\u3057\u30661\u304b\u3089\u9806\u756a\u306b\u52a0\u7b97\u3057\u3066\u3044\u304dN\u3088\u308a\u5c0f\u3055\u3051\u308c\u3070\u518d\u8d77\u547c\u3073\u51fa\u3057\u3092\u3059\u308b\u3002\n\u76ee\u6a19\u5024N\u3088\u308a\u5927\u304d\u3051\u308c\u3070\u51e6\u7406\u3092\u6b62\u3081\u308b\u306e\u3067\u7121\u99c4\u304c\u306a\u3044\u3002\n\n```text:\u52d5\u4f5c\u4f8b(+\u306f\u518d\u8d77\u547c\u3073\u51fa\u3057\u767a\u751f\u3092\u793a\u3059)\n1 + 2 + 3 = 6 : OK\n1 + 2 + 4 = 7 : NG\n1 + 3 + 4 = 8 : NG\n1 + 4 + 5 = 9 : NG\n1 + 5     = 6 : OK\n2 + 3 + 4 = 9 : NG\n2 + 4     = 6 : OK\n\u4ee5\u4e0b\u7565\u3001\u3001\u3001\n```\n\n### 3. \u30ad\u30e5\u30fcor\u30b9\u30bf\u30c3\u30af\u3092\u5229\u7528\u3059\u308b\u65b9\u5f0f\uff08stack_or_que\u95a2\u6570\uff09\n\n```c++:stack_or_que\n//-----------------------------------------------------------------------------\n// \u30b9\u30bf\u30c3\u30af or \u30ad\u30e5\u30fc\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\n//-----------------------------------------------------------------------------\nint stack_or_que(int N, int isStack)\n{\n\tint i;\n\tint num = 0;\n\tstd::stack<PartData> stk;\n\tstd::queue<PartData> que;\n\n\t// \u521d\u671f\u5024\u767b\u9332\n\t//  \u5408\u8a08\u5024       = 0\n\t//  \u30eb\u30fc\u30d7\u958b\u59cb\u5024 = 1\n\tPartData s = { 0, 1 };\n\tif (isStack)\tstk.push(s);\n\telse        que.push(s);\n\n\twhile ((isStack ? stk.size() : que.size()) > 0)\n\t{\n\t\tif (isStack) { s = stk.top();   stk.pop(); } // \u5024\u3092\u53d6\u308a\u51fa\u3059\n\t\telse { s = que.front(); que.pop(); } // \u5024\u3092\u53d6\u308a\u51fa\u3059\n\n\t\t// \u76ee\u6a19\u5024\u306b\u5230\u9054\u3057\u3066\u3044\u308c\u3070\u8868\u793a\u3057\u3066\u6b21\u3078\n\t\tif (s.sum == N)\n\t\t{\n\t\t\tPartDataPrint(&s);\n\t\t\tnum++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// s \u3092 1 \u8981\u7d20\u5206\u3060\u3051\u63a2\u7d22\n\t\t// \"\u5408\u8a08\u5024 <= N\" \u306e\u6761\u4ef6\u306b\u8a72\u5f53\u3059\u308b\u3082\u306e\u3092\u767b\u9332\n\t\tfor (i = s.start; i <= N; i++)\n\t\t{\n\t\t\tPartData cp = s;\n\t\t\tcp.sum += i;\n\t\t\tcp.start = i + 1;\n\t\t\tcp.hist[i] = i;\n\n\t\t\tif (cp.sum > N)\n\t\t\t{\n\t\t\t\tbreak; // \u3053\u308c\u4ee5\u4e0a\u306e\u63a2\u7d22\u306f\u7121\u99c4\u306a\u306e\u3067break\n\t\t\t}\n\t\t\t// \u6b21\u306b\u671f\u5f85\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u30b9\u30eb\u30fc\n\t\t\tif ((cp.sum < N) && (cp.sum + cp.start) > N) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (isStack) { stk.push(cp); }\n\t\t\telse { que.push(cp); }\n\t\t}\n\t}\n\treturn num;\n}\n```\n\n\u4e0b\u8a18\u306e\u539f\u5247\u3067\u52d5\u4f5c\u3059\u308b\u3002*(\u7406\u89e3\u3057\u306b\u304f\u3044\u306a\u3041...)*\npop\u3057\u305f\u5024(s.sum)\u306bs.start \uff5e N\u306e\u5024\u3092\u52a0\u7b97\u3057\u3001\u7d50\u679c\u304cN\u4ee5\u4e0b\u306a\u3089\u6b21\u306e\u5019\u88dc\u3068\u3057\u3066push\u3059\u308b\u3002\n\n1\u56de\u76ee\u306epop\u3067\u3001recursive\u95a2\u6570\u306e1\u968e\u5c64\u76ee\u306e\u30eb\u30fc\u30d7\u306b\u76f8\u5f53\u3059\u308b\u51e6\u7406\u3002\n2\u56de\u76ee\u4ee5\u964d\u306epop\u3067\u306f\u3001recursive\u95a2\u6570\u306e2\u968e\u5c64\u76ee\u4ee5\u964d\u306e\u30eb\u30fc\u30d7\u306b\u76f8\u5f53\u3059\u308b\u51e6\u7406\u3002\n**\u8981\u306fpop\u3067\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u3092\u898b\u3066\u3001\u6b21\u306b\u6301\u3061\u8d8a\u3059\u304b\u3001\u7834\u68c4\u3059\u308b\u304b\u306e2\u629e\u51e6\u7406\u306b\u306a\u3063\u3066\u3044\u308b\u3002**\n\n```text:\u30ad\u30e5\u30fc\u5229\u7528\u6642\u306e\u8aac\u660e(N=6)\u3000\u203b\u30ad\u30e5\u30fc\u64cd\u4f5c\u306a\u306e\u306bpush/pop\u3068\u66f8\u3044\u3066\u3042\u308b\u306e\u306f\u30b9\u30eb\u30fc\u3067\n1\u56de\u76eepop sum=0, start=1\n  [0+1] sum=1, start=2 : push (N\u3088\u308a\u5c0f\u3055\u3044\u306e\u3067\u7d99\u7d9a)\n  [0+2] sum=2, start=3 : push (N\u3088\u308a\u5c0f\u3055\u3044\u306e\u3067\u7d99\u7d9a)\n  [0+3] sum=3, start=4 : continue (\u7834\u68c4)\n  [0+4] sum=4, start=5 : continue (\u7834\u68c4)\n  [0+5] sum=5, start=6 : continue (\u7834\u68c4)\n  [0+6] sum=6, start=7 : push (N\u3068\u7b49\u4fa1\u306a\u306e\u3067pop\u6642\u306b\u8868\u793a)\n2\u56de\u76eepop sum=1, start=2\n  [0+1+2] sum=3, start=3 : push (N\u3088\u308a\u5c0f\u3055\u3044\u306e\u3067\u7d99\u7d9a)\n  [0+1+3] sum=4, start=4 : continue (\u7834\u68c4)\n  [0+1+4] sum=5, start=5 : continue (\u7834\u68c4)\n  [0+1+5] sum=6, start=6 : push (N\u3068\u7b49\u4fa1\u306a\u306e\u3067pop\u6642\u306b\u8868\u793a)\n  [0+1+6] sum=7, start=7 : break (\u7834\u68c4)\n3\u56de\u76eepop sum=2, start=3\n  [0+2+3] sum=5, start=4 : continue (\u7834\u68c4)\n  [0+2+4] sum=6, start=5 : push (N\u3068\u7b49\u4fa1\u306a\u306e\u3067pop\u6642\u306b\u8868\u793a)\n  [0+2+5] sum=7, start=6 : break (\u7834\u68c4)\n4\u56de\u76eepop sum=6, start=7 \u2192 \u767a\u898b\n5\u56de\u76eepop sum=3, start=3\n  [0+1+2+3] sum=6, start=4 : push (N\u3068\u7b49\u4fa1\u306a\u306e\u3067pop\u6642\u306b\u8868\u793a)\n  [0+1+2+4] sum=7, start=5 : break\n6\u56de\u76eepop sum=6, start=6 \u2192 \u767a\u898b\n7\u56de\u76eepop sum=6, start=5 \u2192 \u767a\u898b\n8\u56de\u76eepop sum=6, start=4 \u2192 \u767a\u898b\n```\n\n# \u25a0\u7d50\u8ad6\n\u518d\u8d77\u547c\u3073\u51fa\u3057\u304c\u4e00\u756a\u308f\u304b\u308a\u3084\u3059\u3044\u5b9f\u88c5\u306b\u898b\u3048\u308b\u304c\u3001\u5b9f\u88c5\u306f\u51fa\u6765\u305f\u3002\n\u3082\u3046\u3061\u3087\u3063\u3068\u3001\u30de\u30b7\u306a\u5b9f\u88c5\u304c\u3042\u308b\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u306e\u3060\u304c\u30fb\u30fb\u30fb\n", "tags": ["\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"]}