{"context": " More than 1 year has passed since last update.\n\nSSReflect\u306b\u3088\u308b\u9ce9\u306e\u5de3\u539f\u7406\u306e\u8a3c\u660e\n@suharahiromichi\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 Coq \u81ea\u7136\u6570\u3092\u6271\u3046\nhttp://www.iij-ii.co.jp/lab/techdoc/coqt/coqt4.html\n\u3067\u89e3\u8aac\u3055\u308c\u3066\u3044\u308b\u9ce9\u306e\u5de3\u539f\u7406\u306e\u8a3c\u660e\u3092SSReflect\u306b\u79fb\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u8a3c\u660e\u306e\u5185\u5bb9\u306f\u307e\u3063\u305f\u304f\u540c\u3058\u306a\u306e\u3067\u3001\u6bd4\u3079\u308b\u3068\u304a\u3082\u3057\u308d\u3044\u3068\u304a\u3082\u3044\u307e\u3059\u3002\n\nRequire Import ssreflect ssrbool ssrnat seq.\n\nLemma lt_S_n : forall (n m : nat), S n < S m -> n < m.\nProof.\n  by [].\nQed.\n\nLemma lt_Snm_nm : forall (n m : nat), S n < m -> n < m.\nProof.\n  move=> n m.\n  by apply (@ltn_trans n.+1 n m).\nQed.\n\nInductive InList (A : Type)(a : A) : list A -> Prop :=\n| headIL : forall xs, InList A a (a::xs)                     (* 1 *)\n| consIL : forall x xs, InList A a xs -> InList A a (x::xs). (* 2 *)\n\nTheorem pigeonhole : forall (xs : list nat),\n                       size xs < foldr plus 0 xs ->\n                       exists x : nat, InList nat x.+2 xs.\nProof.\n  elim.\n  (* xs = [] \u306e\u5834\u5408 *)\n    by [].\n  (* xs = x :: xs' \u306e\u5834\u5408 *)\n  elim.\n    (* a = 0 \u306e\u5834\u5408 *)\n    move=> xs IHxs H; apply lt_Snm_nm, IHxs in H.\n    by elim: H => x; exists x; constructor.\n\n  elim.\n    (* a = 1 \u306e\u5834\u5408 *)\n    move=> _ xs IHxs H; apply lt_S_n, IHxs in H.\n    by elim: H => x; exists x; constructor.\n\n  (* a >= 2 \u306e\u5834\u5408 *)\n  move=> a.\n  by exists a; constructor.\nQed.\n\n\n\n\u6ce8\u610f\uff1a\u300c\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u57fa\u790e\u300d\u306e\u7df4\u7fd2\u554f\u984c\u3068\u306f\u3001\u7570\u306a\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nhttp://proofcafe.org/sf/Logic_J.\n\n(* $Id: ssr_pigeonhole.v,v 1.21 2014/04/30 04:25:03 suhara Exp suhara $ *)\n\nSSReflect\u306b\u3088\u308b\u9ce9\u306e\u5de3\u539f\u7406\u306e\u8a3c\u660e\n======\n@suharahiromichi\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 Coq \u81ea\u7136\u6570\u3092\u6271\u3046\nhttp://www.iij-ii.co.jp/lab/techdoc/coqt/coqt4.html\n\n\u3067\u89e3\u8aac\u3055\u308c\u3066\u3044\u308b\u9ce9\u306e\u5de3\u539f\u7406\u306e\u8a3c\u660e\u3092SSReflect\u306b\u79fb\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u8a3c\u660e\u306e\u5185\u5bb9\u306f\u307e\u3063\u305f\u304f\u540c\u3058\u306a\u306e\u3067\u3001\u6bd4\u3079\u308b\u3068\u304a\u3082\u3057\u308d\u3044\u3068\u304a\u3082\u3044\u307e\u3059\u3002\n\n\n```\n\nRequire Import ssreflect ssrbool ssrnat seq.\n\nLemma lt_S_n : forall (n m : nat), S n < S m -> n < m.\nProof.\n  by [].\nQed.\n\nLemma lt_Snm_nm : forall (n m : nat), S n < m -> n < m.\nProof.\n  move=> n m.\n  by apply (@ltn_trans n.+1 n m).\nQed.\n\nInductive InList (A : Type)(a : A) : list A -> Prop :=\n| headIL : forall xs, InList A a (a::xs)                     (* 1 *)\n| consIL : forall x xs, InList A a xs -> InList A a (x::xs). (* 2 *)\n\nTheorem pigeonhole : forall (xs : list nat),\n                       size xs < foldr plus 0 xs ->\n                       exists x : nat, InList nat x.+2 xs.\nProof.\n  elim.\n  (* xs = [] \u306e\u5834\u5408 *)\n    by [].\n  (* xs = x :: xs' \u306e\u5834\u5408 *)\n  elim.\n    (* a = 0 \u306e\u5834\u5408 *)\n    move=> xs IHxs H; apply lt_Snm_nm, IHxs in H.\n    by elim: H => x; exists x; constructor.\n\n  elim.\n    (* a = 1 \u306e\u5834\u5408 *)\n    move=> _ xs IHxs H; apply lt_S_n, IHxs in H.\n    by elim: H => x; exists x; constructor.\n\n  (* a >= 2 \u306e\u5834\u5408 *)\n  move=> a.\n  by exists a; constructor.\nQed.\n\n\n```\n\u6ce8\u610f\uff1a\u300c\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u57fa\u790e\u300d\u306e\u7df4\u7fd2\u554f\u984c\u3068\u306f\u3001\u7570\u306a\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nhttp://proofcafe.org/sf/Logic_J.\n\n\n```\n\n(* $Id: ssr_pigeonhole.v,v 1.21 2014/04/30 04:25:03 suhara Exp suhara $ *)\n```\n", "tags": ["ssreflect", "Coq", "\u8a3c\u660e"]}