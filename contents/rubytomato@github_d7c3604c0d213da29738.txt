{"context": "\n\n\u6982\u8981\n\u30cf\u30f3\u30c9\u30e9\u30fc\u30e1\u30bd\u30c3\u30c9\uff08\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\uff09\u306b\u4ed8\u52a0\u3057\u305f\u30de\u30fc\u30ab\u30fc\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5224\u5225\u3057\u3066Response Header\u306bCache-Control\u3092\u30bb\u30c3\u30c8\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u74b0\u5883\n\nWindows10 Professional\nJava 1.8.0_101\nSpring Boot 1.4.1\n\n\nSpring Framework 4.3.3\n\n\n\n\u53c2\u8003\n\nInterceptorRegistry\nHandlerInterceptorAdapter\n\u30d6\u30e9\u30a6\u30b6\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3092\u6b63\u3057\u304f\u7406\u89e3\u3059\u308b\n[spring mvc]\u30ed\u30b1\u30fc\u30eb\u3092URL(\u30d1\u30b9)\u306e\u4e00\u90e8\u3067\u5207\u308a\u66ff\u3048\u308b\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\nInterceptor\nHandlerInterceptorAdapter\u3092\u7d99\u627f\u3057\u3066\u72ec\u81ea\u306eInterceptor\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\nMyCustomHandlerInterceptor\npublic class MyCustomHandlerInterceptor extends HandlerInterceptorAdapter {\n\n  @Override\n  public void postHandle(HttpServletRequest request\n                       , HttpServletResponse response\n                       , Object handler\n                       , ModelAndView modelAndView) throws Exception {\n    if (!(handler instanceof HandlerMethod)) {\n      return;\n    }\n\n    HandlerMethod handlerMethod = (HandlerMethod) handler;\n\n    if (handlerMethod.hasMethodAnnotation(NoCacheAnnotation.class)) {\n      addNoCacheHeaders(response);\n\n    } else if (handlerMethod.hasMethodAnnotation(CacheAnnotation.class)) {\n      CacheAnnotation annotation = handlerMethod.getMethodAnnotation(CacheAnnotation.class);\n      int maxAge = (int) AnnotationUtils.getValue(annotation, \"maxAge\");\n      addCacheHeaders(response, maxAge);\n    }\n\n  }\n\n  private void addNoCacheHeaders(HttpServletResponse response) {\n    response.addHeader(\"Cache-Control\", \"no-store\");\n  }\n\n  private void addCacheHeaders(HttpServletResponse response, int maxAge) {\n    response.addHeader(\"Cache-Control\", \"max-age=\" + maxAge);\n    //response.addDateHeader(\"Expires\", new Date().getTime() + (long)(maxAge * 1000));\n  }\n\n}\n\n\n\nAnnotation\nResponse Header\u3092\u4ed8\u52a0\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5225\u3059\u308b\u30de\u30fc\u30ab\u30fc\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u30cf\u30f3\u30c9\u30e9\u30fc\u30e1\u30bd\u30c3\u30c9\u306b\u4ed8\u52a0\u3057\u307e\u3059\u3002\n\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u306a\u3044\u30cf\u30f3\u30c9\u30e9\u30fc\u30e1\u30bd\u30c3\u30c9\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\nNoCacheAnnotation\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ElementType.METHOD})\npublic @interface NoCacheAnnotation {\n}\n\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u30fc\u30e1\u30bd\u30c3\u30c9\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\nCacheAnnotation\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ElementType.METHOD})\npublic @interface CacheAnnotation {\n  public int maxAge();\n}\n\n\n\nConfiguration\nWebMvcConfigurerAdapter\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u72ec\u81ea\u306eInterceptor\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n@Configuration\npublic class MyWebMvcConfigurer extends WebMvcConfigurerAdapter {\n  @Override\n  public void addInterceptors(InterceptorRegistry registry) {\n    registry.addInterceptor(new MyCustomHandlerInterceptor())\n      .addPathPatterns(\"/**\")\n      .excludePathPatterns(\"/static/**\");\n  }\n}\n\n\nController\n\u691c\u8a3c\u7528\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3067\u3059\u3002\n@Controller\n@RequestMapping(value = \"/cache\")\npublic class CacheController {\n\n  @CacheAnnotation(maxAge = 600)\n  @RequestMapping(value = \"/cache\", method = RequestMethod.GET)\n  public String cache() {\n    return \"cache/cache\";\n  }\n\n  @NoCacheAnnotation\n  @RequestMapping(value = \"/nocache\", method = RequestMethod.GET)\n  public String noCache() {\n    return \"cache/nocache\";\n  }\n\n  @RequestMapping(value = \"/nothing\", method = RequestMethod.GET)\n  public String nothing() {\n    return \"cache/nothing\";\n  }\n\n}\n\n\nResponse Headers\n/cache/cache\nCache-Control:max-age=600\nContent-Language:ja\nContent-Type:text/html;charset=UTF-8\nDate:Tue, 08 Nov 2016 17:19:50 GMT\n\n/cache/nocache\nHTTP/1.1 200\nCache-Control: no-store\nContent-Type: text/html;charset=UTF-8\nContent-Language: ja\nTransfer-Encoding: chunked\nDate: Tue, 08 Nov 2016 17:23:45 GMT\n\n/cache/nothing\nHTTP/1.1 200\nContent-Type: text/html;charset=UTF-8\nContent-Language: ja\nTransfer-Encoding: chunked\nDate: Tue, 08 Nov 2016 17:23:24 GMT\n\n# \u6982\u8981\n\n\u30cf\u30f3\u30c9\u30e9\u30fc\u30e1\u30bd\u30c3\u30c9\uff08\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\uff09\u306b\u4ed8\u52a0\u3057\u305f\u30de\u30fc\u30ab\u30fc\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5224\u5225\u3057\u3066Response Header\u306bCache-Control\u3092\u30bb\u30c3\u30c8\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n**\u74b0\u5883**\n\n* Windows10 Professional\n* Java 1.8.0_101\n* Spring Boot 1.4.1\n * Spring Framework 4.3.3\n\n**\u53c2\u8003**\n\n* [InterceptorRegistry] (http://docs.spring.io/spring/docs/4.3.3.RELEASE/javadoc-api/org/springframework/web/servlet/config/annotation/InterceptorRegistry.html)\n* [HandlerInterceptorAdapter] (http://docs.spring.io/spring/docs/4.3.3.RELEASE/javadoc-api/org/springframework/web/servlet/handler/HandlerInterceptorAdapter.html)\n* [\u30d6\u30e9\u30a6\u30b6\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3092\u6b63\u3057\u304f\u7406\u89e3\u3059\u308b] (http://qiita.com/hkusu/items/d40aa8a70bacd2015dfa)\n* [[spring mvc]\u30ed\u30b1\u30fc\u30eb\u3092URL(\u30d1\u30b9)\u306e\u4e00\u90e8\u3067\u5207\u308a\u66ff\u3048\u308b] (http://zero-config.com/java/spring-002.html)\n\n# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n## Interceptor\n\nHandlerInterceptorAdapter\u3092\u7d99\u627f\u3057\u3066\u72ec\u81ea\u306eInterceptor\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```java:MyCustomHandlerInterceptor\npublic class MyCustomHandlerInterceptor extends HandlerInterceptorAdapter {\n\n  @Override\n  public void postHandle(HttpServletRequest request\n                       , HttpServletResponse response\n                       , Object handler\n                       , ModelAndView modelAndView) throws Exception {\n    if (!(handler instanceof HandlerMethod)) {\n      return;\n    }\n\n    HandlerMethod handlerMethod = (HandlerMethod) handler;\n\n    if (handlerMethod.hasMethodAnnotation(NoCacheAnnotation.class)) {\n      addNoCacheHeaders(response);\n\n    } else if (handlerMethod.hasMethodAnnotation(CacheAnnotation.class)) {\n      CacheAnnotation annotation = handlerMethod.getMethodAnnotation(CacheAnnotation.class);\n      int maxAge = (int) AnnotationUtils.getValue(annotation, \"maxAge\");\n      addCacheHeaders(response, maxAge);\n    }\n\n  }\n\n  private void addNoCacheHeaders(HttpServletResponse response) {\n    response.addHeader(\"Cache-Control\", \"no-store\");\n  }\n\n  private void addCacheHeaders(HttpServletResponse response, int maxAge) {\n    response.addHeader(\"Cache-Control\", \"max-age=\" + maxAge);\n    //response.addDateHeader(\"Expires\", new Date().getTime() + (long)(maxAge * 1000));\n  }\n\n}\n```\n\n## Annotation\n\nResponse Header\u3092\u4ed8\u52a0\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5225\u3059\u308b\u30de\u30fc\u30ab\u30fc\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u30cf\u30f3\u30c9\u30e9\u30fc\u30e1\u30bd\u30c3\u30c9\u306b\u4ed8\u52a0\u3057\u307e\u3059\u3002\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u306a\u3044\u30cf\u30f3\u30c9\u30e9\u30fc\u30e1\u30bd\u30c3\u30c9\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\n```java:NoCacheAnnotation\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ElementType.METHOD})\npublic @interface NoCacheAnnotation {\n}\n```\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u30fc\u30e1\u30bd\u30c3\u30c9\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\n```java:CacheAnnotation\n@Retention(RetentionPolicy.RUNTIME)\n@Target({ElementType.METHOD})\npublic @interface CacheAnnotation {\n  public int maxAge();\n}\n```\n\n## Configuration\n\nWebMvcConfigurerAdapter\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u72ec\u81ea\u306eInterceptor\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n```java\n@Configuration\npublic class MyWebMvcConfigurer extends WebMvcConfigurerAdapter {\n  @Override\n  public void addInterceptors(InterceptorRegistry registry) {\n    registry.addInterceptor(new MyCustomHandlerInterceptor())\n      .addPathPatterns(\"/**\")\n      .excludePathPatterns(\"/static/**\");\n  }\n}\n```\n\n## Controller\n\n\u691c\u8a3c\u7528\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3067\u3059\u3002\n\n```java\n@Controller\n@RequestMapping(value = \"/cache\")\npublic class CacheController {\n\n  @CacheAnnotation(maxAge = 600)\n  @RequestMapping(value = \"/cache\", method = RequestMethod.GET)\n  public String cache() {\n    return \"cache/cache\";\n  }\n\n  @NoCacheAnnotation\n  @RequestMapping(value = \"/nocache\", method = RequestMethod.GET)\n  public String noCache() {\n    return \"cache/nocache\";\n  }\n\n  @RequestMapping(value = \"/nothing\", method = RequestMethod.GET)\n  public String nothing() {\n    return \"cache/nothing\";\n  }\n\n}\n```\n\n### Response Headers\n\n**/cache/cache**\n\n```text\nCache-Control:max-age=600\nContent-Language:ja\nContent-Type:text/html;charset=UTF-8\nDate:Tue, 08 Nov 2016 17:19:50 GMT\n```\n\n**/cache/nocache**\n\n```text\nHTTP/1.1 200\nCache-Control: no-store\nContent-Type: text/html;charset=UTF-8\nContent-Language: ja\nTransfer-Encoding: chunked\nDate: Tue, 08 Nov 2016 17:23:45 GMT\n```\n\n**/cache/nothing**\n\n```text\nHTTP/1.1 200\nContent-Type: text/html;charset=UTF-8\nContent-Language: ja\nTransfer-Encoding: chunked\nDate: Tue, 08 Nov 2016 17:23:24 GMT\n```\n\n", "tags": ["Java", "spring-boot"]}