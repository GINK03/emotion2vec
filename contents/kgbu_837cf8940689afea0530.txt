{"context": " More than 1 year has passed since last update.\u52d5\u753b\uff1ahttps://twitter.com/ocaokgbu/status/687457479140093954\ngithub\uff1ahttps://github.com/kgbu/marionette\nFaceRig\u3067Live2D\u3063\u3066\u306e\u304cGOROman\u3055\u3093\u306b\u3088\u308b\u7206\u767a\u7684\u30d2\u30c3\u30c8\u3060\u3063\u305f\u306e\u3067\u3001FaceRig\u306e\u304b\u308f\u308a\u306b\uff16\u500b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4e00\u904d\u306b\u3068\u308c\u308b\u30bb\u30f3\u30b5\u30fc(MPU6050)\u3092Arduino\u3067\u53d7\u4fe1\u3057\u3066\u3001\u305d\u306e\u307e\u307eUnity\u306b\u53d6\u308a\u8fbc\u3081\u308b\u304b\u3068\u304a\u3082\u3063\u305f\u3089\u6700\u8fd1\u306eUnity5\u3060\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u4e8b\u4f8b\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3067MQTT\u7d4c\u7531\u306b\u3057\u307e\u3057\u305f\u3002\n\u305d\u306e\u305f\u3081Raspberry Pi2\u3068\u305d\u306e\u4e0a\u3067\u52d5\u304fMQTT\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306eFuji\u304c\u4e00\u679a\u304b\u3093\u3067\u3044\u307e\u3059\u3002\nMQTT\u7d4c\u7531\u306b\u3059\u308b\u3053\u3068\u3067\u3001Live2D\u306e\u300c\u632f\u308a\u300d\u3092\u591a\u6570\uff08\u305d\u308c\u3053\u305d\u6570\u5343\u3067\u3082\uff09\u306e\u7aef\u672b\u306b\u540c\u6642\u306b\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u914d\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u30b1\u30ac\u306e\u529f\u540d\u304b\u3082\u3002\n\u3053\u306e\u4ed5\u7d44\u307f\u3067\u5bfe\u6226\u30b2\u30fc\u30e0\u3068\u304b\u3001\u3067\u304d\u308b\u308f\u3051\u3067\u3059\uff08\u9ad8\u983b\u5ea6\u3067\u30d1\u30b1\u30c3\u30c8\u9001\u308b\u306e\u306b\u9069\u3057\u305f\u56de\u7dda\u3058\u3083\u306a\u3044\u3068\u3042\u308c\u3060\u3051\u3069\u3001\u52d5\u753b\u914d\u4fe1\u3088\u308a\u306f\u697d\u305d\u3046\uff09\u3002\n\nThanks to\n\n\u3059\u3079\u3066\u306e\u30cd\u30bf\u306e\u6e90\u6cc9\u3067\u3042\u308bGOROman\u3055\u3093\u3078\n Live2D \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306a\u3069\uff1ahttp://sites.cybernoids.jp/cubism2/lets-do-it/my-first-lapp\n\n Live2D\u306e\u30e2\u30c7\u30eb\u3092\u99c6\u52d5\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7d20\u6674\u3089\u3057\u3044\u89e3\u8aac\u6587\u66f8\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3063\u305fMaruchu\u3055\u3093\u3078 https://drive.google.com/file/d/0B-99Ww6ro_aodkhET1lwWFVFQTQ/view\n\n\uff13\u8ef8\u30b8\u30e3\u30a4\u30ed\u3001\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306eArduino\u30b9\u30b1\u30c3\u30c1\u3092\u30d1\u30d6\u30ea\u30c3\u30af\u30c9\u30e1\u30a4\u30f3\u306b\u3057\u3066\u304f\u308c\u305fArduino User JohnChi\u3078 http://playground.arduino.cc/Main/MPU-6050\n\nWindows10\u3068Unity5\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u306f\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u3051\u3069\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u306e\u6271\u3044\u3092\u6559\u3048\u3066\u304f\u308c\u305fmakoragi on Qiita\u3055\u3093\u3078 http://qiita.com/makoragi/items/79813b660edbd1246c7c\n\nUnity\u306e\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u306e\u6271\u3044\u306f\u5927\u5909\u305d\u3046\u3060\u3068\u6559\u3048\u3066\u304f\u308c\u305f7of9\u3055\u3093\u3078 http://qiita.com/7of9/items/cb08473ec5f3cc8d4b61\n\nUnity\u3067MQTT\u9001\u53d7\u4fe1\u306e\u8a18\u4e8b\u3092\u304b\u3044\u3066\u304f\u308c\u305fxhatenen\u3055\u3093\u3078 http://xhatenen.hatenablog.com/entry/2014/12/23/230657\n\n\n\n\u69cb\u6210\n\n\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\n\n\u30bb\u30f3\u30b5\u30fc\uff08\uff13\u8ef8\u52a0\u901f\u5ea6\u3001\uff13\u8ef8\u30b8\u30e3\u30a4\u30ed\uff09\uff1aMPU-6050\nArduino nano\uff1a\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3092I2C\u306710Hz\u3067\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3066115200baud\u3067JSON\u5f62\u5f0f\u3067\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\nRaspberry Pi 2 \uff1a\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3057\u3066\u5f97\u305f\u30c7\u30fc\u30bf\u3092Fuji\u3092\u4f7f\u3063\u3066MQTT\u3067\u30d6\u30ed\u30fc\u30ab\u30fc\u30b5\u30fc\u30d0\u30fc\u3078\u9001\u4fe1\nUnity\u3092\u5b9f\u884c\u3057\u305fPC\uff1a\n\n\nCPU\uff1aIntel Core i7-6600HQ 2.6GHz 4core Hyperthreading\nRAM\uff1a16GB\nGraphic board NVIDIA GEFORCE GTX970M (3GB memory)\n\u5185\u8535\u30d3\u30c7\u30aa\u30ab\u30e1\u30e9\n\n\n\n\n\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\n\nArduino\u306e\u30b9\u30b1\u30c3\u30c1\u306b\u3088\u308b\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u306e\u8aad\u307f\u53d6\u308a\u3068\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\nRaspberryPi2\u4e0a\u306eMQTT\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\uff1aFuji\u306b\u3088\u308b\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u304b\u3089\u306e\u8aad\u307f\u8fbc\u307f\u3068MQTT\u3067\u306epublish\n\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306e\u30b5\u30fc\u30d0\u30fc\u4e0a\u306eMQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\nWindows 10 Home\nUnity 5\nLive2D\n\n\n\u30b3\u30fc\u30c9\u306f\u3069\u306a\u3044\u306a\u3063\u3068\u3093\u306e\ngithub\u306b\u3042\u3052\u3066\u307e\u3059\u3002https://github.com/kgbu/marionette\n\u307b\u3068\u3093\u3069\u30b5\u30f3\u30d7\u30eb\u306e\u307e\u307e\u306a\u306e\u3067\u3001Thanks to\u306e\u60c5\u5831\u3092\u8aad\u3093\u3060\u307b\u3046\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nArduino\u306e\u30b9\u30b1\u30c3\u30c1\n// MPU-6050 Short Example Sketch\n// By Arduino User JohnChi\n// August 17, 2014\n// Public Domain\n//\n// modified to print JSON \n// By kgbu@github \n// January 13, 2015\n// Public Domain+\n\n#include<Wire.h>\nconst int MPU_addr=0x68; // I2C address of the MPU-6050\nint16_t AcX,AcY,AcZ;\nint16_t Tmp;\nint16_t GyX,GyY,GyZ;\n\n\nvoid setup(){\n  Wire.begin();\n  Wire.beginTransmission(MPU_addr);\n  Wire.write(0x6B); // PWR_MGMT_1 register\n  Wire.write(0); // set to zero (wakes up the MPU-6050)\n  Wire.endTransmission(true);\n  Serial.begin(115200);\n}\n\nvoid loop(){\n  Wire.beginTransmission(MPU_addr);\n  Wire.write(0x3B); // starting with register 0x38 (ACCEL_XOUT_H)\n  Wire.endTransmission(false);\n  Wire.requestFrom(MPU_addr,14,true); // request a total of 14 registers\n  AcX=Wire.read()<<8|Wire.read(); // 0x3B (ACCEL_XOUT_H) & 0x3C (ACCEL_XOUT_L)\n  AcY=Wire.read()<<8|Wire.read(); // 0x3D (ACCEL_YOUT_H) & 0x3E (ACCEL_YOUT_L)\n  AcZ=Wire.read()<<8|Wire.read(); // 0x3F (ACCEL_ZOUT_H) & 0x40 (ACCEL_ZOUT_L)\n  Tmp=Wire.read()<<8|Wire.read(); // 0x41 (TEMP_OUT_H) & 0x42 (TEMP_OUT_L)\n  GyX=Wire.read()<<8|Wire.read(); // 0x43 (GYRO_XOUT_H) & 0x44 (GYRO_XOUT_L)\n  GyY=Wire.read()<<8|Wire.read(); // 0x45 (GYRO_YOUT_H) & 0x46 (GYRO_YOUT_L)\n  GyZ=Wire.read()<<8|Wire.read(); // 0x47 (GYRO_ZOUT_H) & 0x48 (GYRO_ZOUT_L)\n  Serial.print(\"{\\\"AcX\\\": \"); Serial.print(AcX);\n  Serial.print(\", \\\"AcY\\\": \"); Serial.print(AcY);\n  Serial.print(\", \\\"AcZ\\\": \"); Serial.print(AcZ);\n  Serial.print(\", \\\"GyX\\\": \"); Serial.print(GyX);\n  Serial.print(\", \\\"GyY\\\": \"); Serial.print(GyY);\n  Serial.print(\", \\\"GyZ\\\": \"); Serial.print(GyZ);\n  Serial.println(\"}\");\n  delay(100);\n}\n\n\nMQTT\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4Fuji\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\nFuji\u3068\u306f\uff1f https://github.com/shiguredo/fuji\n[gateway]\n    name = \"mpu\"\n\n[[broker.\"mqttbroker\"]]\n    hostname = \"MQTTbrokerHostname\"\n    port = 1883\n    username = \"USERNAME\"\n    password = \"PASSWORD\"\n\n[device.\"sensor\"]\n    type = \"serial\"\n    broker = \"mqttbroker\"\n    qos = 0\n    serial = \"/dev/USB0\"\n    baud = 115200\n\n\nUnity\u306e\u30b9\u30af\u30ea\u30d7\u30c8\n\nLive2D\u306e\u30e2\u30c7\u30eb\u306b\u30a2\u30bf\u30c3\u30c1\u3057\u305f\u3082\u306e\nusing UnityEngine;\nusing System;\nusing System.IO.Ports;\nusing System.Threading;\nusing System.Collections;\nusing System.Collections.Generic;\nusing live2d;\nusing live2d.framework;\nusing uPLibrary.Networking.M2Mqtt;\nusing uPLibrary.Networking.M2Mqtt.Messages;\n\n\n\n[ExecuteInEditMode]\npublic class SimpleModel : MonoBehaviour\n{\n\n    public TextAsset mocFile;\n    public TextAsset physicsFile;\n    public Texture2D[] textureFiles;\n\n    private MqttClient4Unity client;\n\n    public string brokerHostname;\n    public int brokerPort = 1883;\n    public string userName = \"\";\n    public string password = \"\";\n    public string topic = \"\";\n    public float AccRatio = 2000.0F;\n    public float GyroRatio = 7000.0F;\n\n\n    private float gyX, gyY, gyZ;\n    private const Int64 mean_size = 20;\n    private float[] _lastGyX = new float[20];\n    private float[] _lastGyY = new float[20];\n    private float[] _lastGyZ = new float[20];\n    private float acX, acY, acZ;\n\n    private Int64 meanindex = 0;\n\n    private Live2DModelUnity live2DModel;\n    private EyeBlinkMotion eyeBlink = new EyeBlinkMotion();\n    private L2DPhysics physics;\n    private Matrix4x4 live2DCanvasPos;\n\n\n\n    void Start()\n    {\n        Live2D.init();\n\n        load();\n\n        if (brokerHostname != null && userName != null && password != null)\n        {\n            Connect();\n            client.Subscribe(topic);\n        }\n\n        var j = (IDictionary) MiniJSON.Json.Deserialize(\"{\\\"AcX\\\": -15200, \\\"AcY\\\": -1416, \\\"AcZ\\\": 4292, \\\"Tmp\\\": -4528, \\\"GyX\\\": -203, \\\"GyY\\\": 72, \\\"GyZ\\\": -48}\");\n        Debug.Log(j.GetType());\n\n    }\n\n    void Connect()\n    {\n        // SSL\u4f7f\u7528\u6642\u306ftrue\u3001CA\u3092\u6307\u5b9a\n        client = new MqttClient4Unity(brokerHostname, brokerPort, false,\n                                      null);\n        // clientid\u3092\u751f\u6210\n        string clientId = Guid.NewGuid().ToString();\n        client.Connect(clientId, userName, password);\n    }\n\n\n    void load()\n    {\n        live2DModel = Live2DModelUnity.loadModel(mocFile.bytes);\n\n        for (int i = 0; i < textureFiles.Length; i++)\n        {\n            live2DModel.setTexture(i, textureFiles[i]);\n        }\n\n        float modelWidth = live2DModel.getCanvasWidth();\n        live2DCanvasPos = Matrix4x4.Ortho(0, modelWidth, modelWidth, 0, -50.0f, 50.0f);\n\n        if (physicsFile != null) physics = L2DPhysics.load(physicsFile.bytes);\n    }\n\n\n    void Update()\n    {\n        if (live2DModel == null) load();\n        live2DModel.setMatrix(transform.localToWorldMatrix * live2DCanvasPos);\n        if (!Application.isPlaying)\n        {\n            live2DModel.update();\n            return;\n        }\n        while (client.Count() > 0)\n        {\n            meanindex = (meanindex + 1) % mean_size;\n            string jsonLine = client.Receive().Split('\\n')[0];\n            var json = MiniJSON.Json.Deserialize(jsonLine) as Dictionary<string, object>;\n            Debug.Log(jsonLine);\n\n            if (json == null) { continue;  }\n            Debug.Log(json[\"AcX\"].GetType() + \"type of json\");\n            Debug.Log(json[\"AcX\"]);\n            acX = (Int64)json[\"AcX\"] / AccRatio;\n            acY = (Int64)json[\"AcY\"] / AccRatio;\n            acZ = (Int64)json[\"AcZ\"] / AccRatio;\n            _lastGyX[meanindex] = ((Int64)json[\"GyX\"]);\n            _lastGyY[meanindex] = ((Int64)json[\"GyY\"]);\n            _lastGyZ[meanindex] = ((Int64)json[\"GyZ\"]);\n            gyX = gyY = gyZ = 0.0f;\n            for (var i = 0; i < mean_size; i++)\n            {\n                gyX += _lastGyX[i];\n                gyY += _lastGyY[i];\n                gyY += _lastGyY[i];\n            }\n            gyX = gyX / GyroRatio;\n            gyY = gyY / GyroRatio;\n            gyZ = gyZ / GyroRatio;\n\n            Debug.LogFormat(\"{0} {1} {2} {3} {4} {5}\",acX, acY, acZ, gyX, gyY, gyZ);\n            break;\n        }\n\n\n        live2DModel.setParamFloat(\"PARAM_ANGLE_X\", acX); // head panning : value range -30.0 to 30.0 (degree)\n        live2DModel.setParamFloat(\"PARAM_ANGLE_Y\", acY); // head banking back and forth : -30 to 30 \n\n        live2DModel.setParamFloat(\"PARAM_BODY_ANGLE_X\", acZ); // body angle sideway : -30.0 to 30.0\n\n        live2DModel.setParamFloat(\"PARAM_EYE_L_OPEN\", gyX + 0.5f); // 0 to 1\n        live2DModel.setParamFloat(\"PARAM_EYE_R_OPEN\", gyX + 0.5f); // \n\n        live2DModel.setParamFloat(\"PARAM_BROW_L_Y\", gyX); // -1.0 to 1.0\n        live2DModel.setParamFloat(\"PARAM_BROW_R_Y\", gyX); // \n\n        live2DModel.setParamFloat(\"PARAM_MOUTH_OPEN_Y\", gyY + 0.5f); // 0 to 1.0\n        live2DModel.setParamFloat(\"PARAM_MOUTH_FORM\", gyZ); //  -1.0 to 1.0\n\n\n        live2DModel.setParamFloat(\"PARAM_BREATH\", 1);\n\n        eyeBlink.setParam(live2DModel);\n\n        if (physics != null) physics.updateParam(live2DModel);\n\n        live2DModel.update();\n    }\n\n\n\n    void OnRenderObject()\n    {\n        if (live2DModel == null) load();\n        if (live2DModel.getRenderMode() == Live2D.L2D_RENDER_DRAW_MESH_NOW) live2DModel.draw();\n    }\n\n\n}\n\n\n\u64cd\u4f5c\u3059\u308b\u4eba\u3092\u6620\u3057\u305f\u30ab\u30e1\u30e9\u753b\u50cf\u3092\u306f\u308a\u3064\u3051\u305fPlane\u306b\u30a2\u30bf\u30c3\u30c1\u3057\u305f\u3082\u306e\nusing UnityEngine;\nusing System.Collections;\n\npublic class videocaptureTexture : MonoBehaviour {\n\n\n        public int Width = 1920;\n        public int Height = 1080;\n        public int FPS = 30;\n\n        void Start()\n        {\n            WebCamDevice[] devices = WebCamTexture.devices;\n            // display all cameras\n            for (var i = 0; i < devices.Length; i++)\n            {\n                Debug.Log(devices[i].name);\n            }\n\n            WebCamTexture webcamTexture = new WebCamTexture(devices[0].name, Width, Height, FPS);\n            GetComponent<Renderer>().material.mainTexture = webcamTexture;\n            webcamTexture.Play();\n        }\n\n}\n\n\n\u52d5\u753b\uff1ahttps://twitter.com/ocaokgbu/status/687457479140093954\ngithub\uff1ahttps://github.com/kgbu/marionette\n\nFaceRig\u3067Live2D\u3063\u3066\u306e\u304cGOROman\u3055\u3093\u306b\u3088\u308b\u7206\u767a\u7684\u30d2\u30c3\u30c8\u3060\u3063\u305f\u306e\u3067\u3001FaceRig\u306e\u304b\u308f\u308a\u306b\uff16\u500b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4e00\u904d\u306b\u3068\u308c\u308b\u30bb\u30f3\u30b5\u30fc(MPU6050)\u3092Arduino\u3067\u53d7\u4fe1\u3057\u3066\u3001\u305d\u306e\u307e\u307eUnity\u306b\u53d6\u308a\u8fbc\u3081\u308b\u304b\u3068\u304a\u3082\u3063\u305f\u3089\u6700\u8fd1\u306eUnity5\u3060\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u4e8b\u4f8b\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3067MQTT\u7d4c\u7531\u306b\u3057\u307e\u3057\u305f\u3002\n\u305d\u306e\u305f\u3081Raspberry Pi2\u3068\u305d\u306e\u4e0a\u3067\u52d5\u304fMQTT\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306eFuji\u304c\u4e00\u679a\u304b\u3093\u3067\u3044\u307e\u3059\u3002\n\nMQTT\u7d4c\u7531\u306b\u3059\u308b\u3053\u3068\u3067\u3001Live2D\u306e\u300c\u632f\u308a\u300d\u3092\u591a\u6570\uff08\u305d\u308c\u3053\u305d\u6570\u5343\u3067\u3082\uff09\u306e\u7aef\u672b\u306b\u540c\u6642\u306b\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u914d\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u30b1\u30ac\u306e\u529f\u540d\u304b\u3082\u3002\n\n\u3053\u306e\u4ed5\u7d44\u307f\u3067\u5bfe\u6226\u30b2\u30fc\u30e0\u3068\u304b\u3001\u3067\u304d\u308b\u308f\u3051\u3067\u3059\uff08\u9ad8\u983b\u5ea6\u3067\u30d1\u30b1\u30c3\u30c8\u9001\u308b\u306e\u306b\u9069\u3057\u305f\u56de\u7dda\u3058\u3083\u306a\u3044\u3068\u3042\u308c\u3060\u3051\u3069\u3001\u52d5\u753b\u914d\u4fe1\u3088\u308a\u306f\u697d\u305d\u3046\uff09\u3002\n\n## Thanks to\n\n- \u3059\u3079\u3066\u306e\u30cd\u30bf\u306e\u6e90\u6cc9\u3067\u3042\u308bGOROman\u3055\u3093\u3078\n-  Live2D \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306a\u3069\uff1ahttp://sites.cybernoids.jp/cubism2/lets-do-it/my-first-lapp\n-  Live2D\u306e\u30e2\u30c7\u30eb\u3092\u99c6\u52d5\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7d20\u6674\u3089\u3057\u3044\u89e3\u8aac\u6587\u66f8\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3063\u305fMaruchu\u3055\u3093\u3078 https://drive.google.com/file/d/0B-99Ww6ro_aodkhET1lwWFVFQTQ/view\n- \uff13\u8ef8\u30b8\u30e3\u30a4\u30ed\u3001\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306eArduino\u30b9\u30b1\u30c3\u30c1\u3092\u30d1\u30d6\u30ea\u30c3\u30af\u30c9\u30e1\u30a4\u30f3\u306b\u3057\u3066\u304f\u308c\u305fArduino User JohnChi\u3078 http://playground.arduino.cc/Main/MPU-6050\n- Windows10\u3068Unity5\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u306f\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u3051\u3069\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u306e\u6271\u3044\u3092\u6559\u3048\u3066\u304f\u308c\u305fmakoragi on Qiita\u3055\u3093\u3078 http://qiita.com/makoragi/items/79813b660edbd1246c7c\n- Unity\u306e\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u306e\u6271\u3044\u306f\u5927\u5909\u305d\u3046\u3060\u3068\u6559\u3048\u3066\u304f\u308c\u305f7of9\u3055\u3093\u3078 http://qiita.com/7of9/items/cb08473ec5f3cc8d4b61\n- Unity\u3067MQTT\u9001\u53d7\u4fe1\u306e\u8a18\u4e8b\u3092\u304b\u3044\u3066\u304f\u308c\u305fxhatenen\u3055\u3093\u3078 http://xhatenen.hatenablog.com/entry/2014/12/23/230657\n\n\n## \u69cb\u6210\n\n### \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\n\n- \u30bb\u30f3\u30b5\u30fc\uff08\uff13\u8ef8\u52a0\u901f\u5ea6\u3001\uff13\u8ef8\u30b8\u30e3\u30a4\u30ed\uff09\uff1aMPU-6050\n- Arduino nano\uff1a\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3092I2C\u306710Hz\u3067\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3066115200baud\u3067JSON\u5f62\u5f0f\u3067\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\n- Raspberry Pi 2 \uff1a\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3057\u3066\u5f97\u305f\u30c7\u30fc\u30bf\u3092Fuji\u3092\u4f7f\u3063\u3066MQTT\u3067\u30d6\u30ed\u30fc\u30ab\u30fc\u30b5\u30fc\u30d0\u30fc\u3078\u9001\u4fe1\n- Unity\u3092\u5b9f\u884c\u3057\u305fPC\uff1a\n    - CPU\uff1aIntel Core i7-6600HQ 2.6GHz 4core Hyperthreading\n    - RAM\uff1a16GB\n    - Graphic board NVIDIA GEFORCE GTX970M (3GB memory)\n    - \u5185\u8535\u30d3\u30c7\u30aa\u30ab\u30e1\u30e9\n\n### \u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\n\n- Arduino\u306e\u30b9\u30b1\u30c3\u30c1\u306b\u3088\u308b\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u306e\u8aad\u307f\u53d6\u308a\u3068\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\n- RaspberryPi2\u4e0a\u306eMQTT\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\uff1aFuji\u306b\u3088\u308b\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u304b\u3089\u306e\u8aad\u307f\u8fbc\u307f\u3068MQTT\u3067\u306epublish\n- \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306e\u30b5\u30fc\u30d0\u30fc\u4e0a\u306eMQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\n- Windows 10 Home\n- Unity 5\n- Live2D\n\n# \u30b3\u30fc\u30c9\u306f\u3069\u306a\u3044\u306a\u3063\u3068\u3093\u306e\n\ngithub\u306b\u3042\u3052\u3066\u307e\u3059\u3002https://github.com/kgbu/marionette\n\u307b\u3068\u3093\u3069\u30b5\u30f3\u30d7\u30eb\u306e\u307e\u307e\u306a\u306e\u3067\u3001Thanks to\u306e\u60c5\u5831\u3092\u8aad\u3093\u3060\u307b\u3046\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## Arduino\u306e\u30b9\u30b1\u30c3\u30c1\n\n```text\n// MPU-6050 Short Example Sketch\n// By Arduino User JohnChi\n// August 17, 2014\n// Public Domain\n//\n// modified to print JSON \n// By kgbu@github \n// January 13, 2015\n// Public Domain+\n\n#include<Wire.h>\nconst int MPU_addr=0x68; // I2C address of the MPU-6050\nint16_t AcX,AcY,AcZ;\nint16_t Tmp;\nint16_t GyX,GyY,GyZ;\n\n\nvoid setup(){\n  Wire.begin();\n  Wire.beginTransmission(MPU_addr);\n  Wire.write(0x6B); // PWR_MGMT_1 register\n  Wire.write(0); // set to zero (wakes up the MPU-6050)\n  Wire.endTransmission(true);\n  Serial.begin(115200);\n}\n\nvoid loop(){\n  Wire.beginTransmission(MPU_addr);\n  Wire.write(0x3B); // starting with register 0x38 (ACCEL_XOUT_H)\n  Wire.endTransmission(false);\n  Wire.requestFrom(MPU_addr,14,true); // request a total of 14 registers\n  AcX=Wire.read()<<8|Wire.read(); // 0x3B (ACCEL_XOUT_H) & 0x3C (ACCEL_XOUT_L)\n  AcY=Wire.read()<<8|Wire.read(); // 0x3D (ACCEL_YOUT_H) & 0x3E (ACCEL_YOUT_L)\n  AcZ=Wire.read()<<8|Wire.read(); // 0x3F (ACCEL_ZOUT_H) & 0x40 (ACCEL_ZOUT_L)\n  Tmp=Wire.read()<<8|Wire.read(); // 0x41 (TEMP_OUT_H) & 0x42 (TEMP_OUT_L)\n  GyX=Wire.read()<<8|Wire.read(); // 0x43 (GYRO_XOUT_H) & 0x44 (GYRO_XOUT_L)\n  GyY=Wire.read()<<8|Wire.read(); // 0x45 (GYRO_YOUT_H) & 0x46 (GYRO_YOUT_L)\n  GyZ=Wire.read()<<8|Wire.read(); // 0x47 (GYRO_ZOUT_H) & 0x48 (GYRO_ZOUT_L)\n  Serial.print(\"{\\\"AcX\\\": \"); Serial.print(AcX);\n  Serial.print(\", \\\"AcY\\\": \"); Serial.print(AcY);\n  Serial.print(\", \\\"AcZ\\\": \"); Serial.print(AcZ);\n  Serial.print(\", \\\"GyX\\\": \"); Serial.print(GyX);\n  Serial.print(\", \\\"GyY\\\": \"); Serial.print(GyY);\n  Serial.print(\", \\\"GyZ\\\": \"); Serial.print(GyZ);\n  Serial.println(\"}\");\n  delay(100);\n}\n```\n\n## MQTT\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4Fuji\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\nFuji\u3068\u306f\uff1f https://github.com/shiguredo/fuji\n\n```toml\n[gateway]\n    name = \"mpu\"\n    \n[[broker.\"mqttbroker\"]]\n    hostname = \"MQTTbrokerHostname\"\n    port = 1883\n    username = \"USERNAME\"\n    password = \"PASSWORD\"\n\n[device.\"sensor\"]\n    type = \"serial\"\n    broker = \"mqttbroker\"\n    qos = 0\n    serial = \"/dev/USB0\"\n    baud = 115200\n```\n\n\n## Unity\u306e\u30b9\u30af\u30ea\u30d7\u30c8\n\n### Live2D\u306e\u30e2\u30c7\u30eb\u306b\u30a2\u30bf\u30c3\u30c1\u3057\u305f\u3082\u306e\n\n```csharp\nusing UnityEngine;\nusing System;\nusing System.IO.Ports;\nusing System.Threading;\nusing System.Collections;\nusing System.Collections.Generic;\nusing live2d;\nusing live2d.framework;\nusing uPLibrary.Networking.M2Mqtt;\nusing uPLibrary.Networking.M2Mqtt.Messages;\n\n\n\n[ExecuteInEditMode]\npublic class SimpleModel : MonoBehaviour\n{\n   \n    public TextAsset mocFile;\n    public TextAsset physicsFile;\n    public Texture2D[] textureFiles;\n\n    private MqttClient4Unity client;\n\n    public string brokerHostname;\n    public int brokerPort = 1883;\n    public string userName = \"\";\n    public string password = \"\";\n    public string topic = \"\";\n    public float AccRatio = 2000.0F;\n    public float GyroRatio = 7000.0F;\n\n\n    private float gyX, gyY, gyZ;\n    private const Int64 mean_size = 20;\n    private float[] _lastGyX = new float[20];\n    private float[] _lastGyY = new float[20];\n    private float[] _lastGyZ = new float[20];\n    private float acX, acY, acZ;\n\n    private Int64 meanindex = 0;\n\n    private Live2DModelUnity live2DModel;\n    private EyeBlinkMotion eyeBlink = new EyeBlinkMotion();\n    private L2DPhysics physics;\n    private Matrix4x4 live2DCanvasPos;\n\n\n\n    void Start()\n    {\n        Live2D.init();\n\n        load();\n\n        if (brokerHostname != null && userName != null && password != null)\n        {\n            Connect();\n            client.Subscribe(topic);\n        }\n\n        var j = (IDictionary) MiniJSON.Json.Deserialize(\"{\\\"AcX\\\": -15200, \\\"AcY\\\": -1416, \\\"AcZ\\\": 4292, \\\"Tmp\\\": -4528, \\\"GyX\\\": -203, \\\"GyY\\\": 72, \\\"GyZ\\\": -48}\");\n        Debug.Log(j.GetType());\n        \n    }\n\n    void Connect()\n    {\n        // SSL\u4f7f\u7528\u6642\u306ftrue\u3001CA\u3092\u6307\u5b9a\n        client = new MqttClient4Unity(brokerHostname, brokerPort, false,\n                                      null);\n        // clientid\u3092\u751f\u6210\n        string clientId = Guid.NewGuid().ToString();\n        client.Connect(clientId, userName, password);\n    }\n\n\n    void load()\n    {\n        live2DModel = Live2DModelUnity.loadModel(mocFile.bytes);\n\n        for (int i = 0; i < textureFiles.Length; i++)\n        {\n            live2DModel.setTexture(i, textureFiles[i]);\n        }\n\n        float modelWidth = live2DModel.getCanvasWidth();\n        live2DCanvasPos = Matrix4x4.Ortho(0, modelWidth, modelWidth, 0, -50.0f, 50.0f);\n\n        if (physicsFile != null) physics = L2DPhysics.load(physicsFile.bytes);\n    }\n\n\n    void Update()\n    {\n        if (live2DModel == null) load();\n        live2DModel.setMatrix(transform.localToWorldMatrix * live2DCanvasPos);\n        if (!Application.isPlaying)\n        {\n            live2DModel.update();\n            return;\n        }\n        while (client.Count() > 0)\n        {\n            meanindex = (meanindex + 1) % mean_size;\n            string jsonLine = client.Receive().Split('\\n')[0];\n            var json = MiniJSON.Json.Deserialize(jsonLine) as Dictionary<string, object>;\n            Debug.Log(jsonLine);\n\n            if (json == null) { continue;  }\n            Debug.Log(json[\"AcX\"].GetType() + \"type of json\");\n            Debug.Log(json[\"AcX\"]);\n            acX = (Int64)json[\"AcX\"] / AccRatio;\n            acY = (Int64)json[\"AcY\"] / AccRatio;\n            acZ = (Int64)json[\"AcZ\"] / AccRatio;\n            _lastGyX[meanindex] = ((Int64)json[\"GyX\"]);\n            _lastGyY[meanindex] = ((Int64)json[\"GyY\"]);\n            _lastGyZ[meanindex] = ((Int64)json[\"GyZ\"]);\n            gyX = gyY = gyZ = 0.0f;\n            for (var i = 0; i < mean_size; i++)\n            {\n                gyX += _lastGyX[i];\n                gyY += _lastGyY[i];\n                gyY += _lastGyY[i];\n            }\n            gyX = gyX / GyroRatio;\n            gyY = gyY / GyroRatio;\n            gyZ = gyZ / GyroRatio;\n\n            Debug.LogFormat(\"{0} {1} {2} {3} {4} {5}\",acX, acY, acZ, gyX, gyY, gyZ);\n            break;\n        }\n        \n\n        live2DModel.setParamFloat(\"PARAM_ANGLE_X\", acX); // head panning : value range -30.0 to 30.0 (degree)\n        live2DModel.setParamFloat(\"PARAM_ANGLE_Y\", acY); // head banking back and forth : -30 to 30 \n\n        live2DModel.setParamFloat(\"PARAM_BODY_ANGLE_X\", acZ); // body angle sideway : -30.0 to 30.0\n\n        live2DModel.setParamFloat(\"PARAM_EYE_L_OPEN\", gyX + 0.5f); // 0 to 1\n        live2DModel.setParamFloat(\"PARAM_EYE_R_OPEN\", gyX + 0.5f); // \n\n        live2DModel.setParamFloat(\"PARAM_BROW_L_Y\", gyX); // -1.0 to 1.0\n        live2DModel.setParamFloat(\"PARAM_BROW_R_Y\", gyX); // \n\n        live2DModel.setParamFloat(\"PARAM_MOUTH_OPEN_Y\", gyY + 0.5f); // 0 to 1.0\n        live2DModel.setParamFloat(\"PARAM_MOUTH_FORM\", gyZ); //  -1.0 to 1.0\n\n\n        live2DModel.setParamFloat(\"PARAM_BREATH\", 1);\n\n        eyeBlink.setParam(live2DModel);\n\n        if (physics != null) physics.updateParam(live2DModel);\n\n        live2DModel.update();\n    }\n\n\n\n    void OnRenderObject()\n    {\n        if (live2DModel == null) load();\n        if (live2DModel.getRenderMode() == Live2D.L2D_RENDER_DRAW_MESH_NOW) live2DModel.draw();\n    }\n\n\n}\n```\n\n### \u64cd\u4f5c\u3059\u308b\u4eba\u3092\u6620\u3057\u305f\u30ab\u30e1\u30e9\u753b\u50cf\u3092\u306f\u308a\u3064\u3051\u305fPlane\u306b\u30a2\u30bf\u30c3\u30c1\u3057\u305f\u3082\u306e\n\n```csharp\nusing UnityEngine;\nusing System.Collections;\n\npublic class videocaptureTexture : MonoBehaviour {\n\n\n        public int Width = 1920;\n        public int Height = 1080;\n        public int FPS = 30;\n\n        void Start()\n        {\n            WebCamDevice[] devices = WebCamTexture.devices;\n            // display all cameras\n            for (var i = 0; i < devices.Length; i++)\n            {\n                Debug.Log(devices[i].name);\n            }\n\n            WebCamTexture webcamTexture = new WebCamTexture(devices[0].name, Width, Height, FPS);\n            GetComponent<Renderer>().material.mainTexture = webcamTexture;\n            webcamTexture.Play();\n        }\n\n}\n```\n", "tags": ["mqtt", "Live2D", "Fuji", "Unity", "mpu6050"]}