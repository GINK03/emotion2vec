{"context": "\n\n\u306f\u3058\u3081\u306b\n\u3000\u8fd1\u5e74\u6d41\u884c\u308a\u306e\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u7406\u8ad6\u3092\u77e5\u3089\u306a\u304f\u3066\u3082\u3068\u308a\u3042\u3048\u305a\u8a66\u3057\u3066\u307f\u305f\u3044\u4eba\u3084\u305f\u3060\u4f7f\u3044\u305f\u3044\u4eba\u5411\u3051\u306e\u6295\u7a3f\u306b\u306a\u308a\u307e\u3059\u3002\u81ea\u5206\u306e\u30e1\u30e2\u306e\u305f\u3081\u306b\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u5206\u304b\u308a\u306b\u304f\u3044\u7b87\u6240\u3084\u9593\u9055\u3044\u304c\u3042\u308c\u3070\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\n\u3000Keras\u3068\u306f\u3001Tensorflow\u3068Theano\u306e\u305f\u3081\u306ePython\u306b\u3088\u308b\u30e9\u30c3\u30d1\u30fc\u3067\u3042\u308a\u3001\u6df1\u5c64\u5b66\u7fd2\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u975e\u5e38\u306b\u7c21\u5358\u306b\u6df1\u5c64\u5b66\u7fd2\u3092\u4f53\u611f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u5171\u306b\u3001\u591a\u304f\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u9020\u3092\u96e3\u3057\u3044\u7406\u8ad6\u3092\u610f\u8b58\u3059\u308b\u3053\u3068\u306a\u304f\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3000\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001Tensorflow\u3068Keras\u306e\u5c0e\u5165\u3068\u307e\u305a\u624b\u59cb\u3081\u306b\u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u3067\u56db\u89d2\u5f62\u306e\u8b58\u5225\u3092\u884c\u3044\u307e\u3059\u3002\n\uff08\u8ffd\u8a18\uff09\u591a\u304f\u306e\u65b9\u306b\u898b\u3066\u3044\u305f\u3060\u3051\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u5b66\u7fd2\u6e08\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u306e\u8b58\u5225\u3082\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\u7686\u69d8\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\uff082017/03/09\u8ffd\u8a18\uff092017\u5e742\u670815\u65e5\u306bGoogle\u304b\u3089TensorFlow 1.0\u304c\u516c\u958b\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u4f34\u3044\u3001TensorFlow\u306b\u65b0\u305f\u306btf.keras\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5c0e\u5165\u3055\u308c\u308b\u4e88\u5b9a\u3067\u3059\u3002\uff08\u4eca\u306e\u3068\u3053\u308d\u3001TensorFlow 1.2\u3067\u8ffd\u52a0\u4e88\u5b9a\u307f\u305f\u3044\u3067\u3059\u3002\uff09\u305d\u306e\u305f\u3081\u3001\u3053\u308c\u307e\u3067\u901a\u308aKeras\u3092\u4f7f\u3063\u3066\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3067TensorFlow\u3092\u52d5\u304b\u3055\u306a\u304f\u3066\u3082\u3001\u76f4\u63a5Keras\u306eAPI\u3092TensorFlow\u304b\u3089\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3000\u3061\u3087\u3063\u3068\u7d9a\u304d\u306e\u8a18\u4e8b\u3092\u3069\u3061\u3089\u3067\u66f8\u304f\u3079\u304d\u304b\u8ff7\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u304a\u305d\u3089\u304f\u3053\u306e\u9023\u8f09\u306f\u7d14\u7c8b\u306aKeras\u3067\u66f8\u304d\u5207\u308d\u3046\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002TensorFlow\u304cKeras\u306b\u3082\u5bfe\u5fdc\u3057\u305f\u3089TensorFlow\u306e\u30b3\u30fc\u30c9\u3082\u53c2\u8003\u3068\u3057\u3066\u3001Gist\u306b\u306f\u30a2\u30c3\u30d7\u3059\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5b9f\u884c\u74b0\u5883\n\nWindows 10\uff0864bit\uff09with only CPU\nPython 3.5.2\nAnaconda 4.2.0\uff0864bit\uff09\nTensorflow 0.12.1\nKeras 1.2.1\n\n\n\u5b9f\u884c\u74b0\u5883\u306e\u5c0e\u5165\u624b\u9806\n\nAnaconda\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u3000\u79c1\u306f\u3001Windows\u3067\u306epython\u306e\u5b9f\u884c\u74b0\u5883\u3068\u3057\u3066\u3001Anaconda\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u65e2\u306b\u3001\u4f7f\u7528\u3057\u3066\u3044\u308b\u74b0\u5883\u304c\u3042\u308b\u65b9\u306f\u8aad\u307f\u98db\u3070\u3057\u3066\u3044\u305f\u3060\u3044\u3066\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002Anaconda\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u3001\u516c\u5f0f\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30da\u30fc\u30b8\u306b\u79fb\u52d5\u3057\u3066\u3001\u74b0\u5883\u306b\u3042\u3063\u305f\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\u5f8c\u306f\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u5b9f\u884c\u3057\u3066\u3001\u6b21\u3078\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3044\u3051\u3070\u5b8c\u4e86\u3067\u3059\u3002\n\u3000Anaconda\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u5171\u306b\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u6642\u306b\u9078\u629e\u3057\u305fPython\uff08\u79c1\u306e\u5834\u5408\u306fPython3\uff09\u3068jupyter notebook\u3068\u3044\u3046\u30a8\u30c7\u30a3\u30bf\u3082\u5165\u308b\u306e\u3067\u3001\u5225\u3067python\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\nTensorflow\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u3000Keras\u3067\u306f\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3067\u52d5\u304b\u3059\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Tensorflow\u304bTheano\u304b\u3067\u9078\u629e\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306fTensorflow\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u306f\u3001pip\u3092\u7528\u3044\u308b\u305f\u3081\u3001\u307e\u305a\u3001\u30b9\u30bf\u30fc\u30c8\u753b\u9762\u304b\u3089Anaconda\u3092\u691c\u7d22\u3057\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n\u3000\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u76f4\u5f8c\u306f\u3001\u5ff5\u306e\u305f\u3081pip\u3092\u6700\u65b0\u7248\u306b\u66f4\u65b0\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\u6700\u65b0\u7248\u306b\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092Anaconda Prompt\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\n\npip_upgrade\n$ pip install --upgrade pip\n\n\n\u3000\u6700\u65b0\u7248\u306b\u3067\u304d\u305f\u3089\u3001Tensorflow\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002Anaconda\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u958b\u3044\u305f\u72b6\u614b\u306e\u307e\u307e\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002GPU\u642d\u8f09PC\u3068CPU\u306e\u307f\u306ePC\u3067\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306e\u30b3\u30de\u30f3\u30c9\u304c\u7570\u306a\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\ntensorflow_install\n# CPU\u306e\u307f\u306e\u5834\u5408\n$ pip install tensorflow\n# GPU\u642d\u8f09\u3057\u3066\u3044\u308b\u5834\u5408\n$ pip install tensorflow-gpu\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u306e\u78ba\u8a8d\u65b9\u6cd5\n# \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001\u30ea\u30b9\u30c8\u306e\u4e2d\u306btensorflow\u304c\u3042\u308c\u3070OK\u3067\u3059\n$ pip list |grep tensorflow\n\n\n\uff08\u8ffd\u8a18\uff09\uff082017/3/8\u73fe\u5728\uff09Tensorflow\u306fPython\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c3.5.x\u3067\u306a\u3044\u3068\u4e0a\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u308c\u3092\u56de\u907f\u3059\u308b\u65b9\u6cd5\u3092\u307e\u3068\u3081\u305f\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u306a\u3044\u65b9\u306f\u305d\u308c\u3092\u53c2\u8003\u306bTensorflow\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4e0b\u8a18\u304c\u305d\u306e\u8a18\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\nWindows\u306eAnaconda\u74b0\u5883\u306b\u6df1\u5c64\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30afTensorflow 1.0\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u65b9\u6cd5\n\nKeras\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u3000\u7d9a\u3051\u3066\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068Keras\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5b8c\u4e86\u3067\u3059\u3002\n\nKeras_install\n# Keras\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ pip install keras\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u306e\u78ba\u8a8d\n# \u540c\u3058\u304fKeras\u304c\u78ba\u8a8d\u3067\u304d\u308c\u3070OK\u3067\u3059\u3002\n$ pip list |grep Keras\n\n\n\n\u5c0e\u5165\u3067\u304d\u3066\u3044\u308b\u304b\u306e\u78ba\u8a8d\n\u3000\u3053\u3053\u3067\u3001\u672c\u984c\u306b\u5165\u308b\u524d\u306b\u5c0e\u5165\u304c\u6b63\u3057\u304f\u3067\u304d\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3059\u3002Anaconda\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u958b\u3044\u3066\u3044\u308b\u72b6\u614b\u3060\u3068\u601d\u3046\u306e\u3067\u3001\u305d\u3053\u3067python\u3092\u8d77\u52d5\u3057\u3001\u304d\u3061\u3093\u3068import\u3067\u304d\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308c\u3070\u5927\u4e08\u592b\u3067\u3059\u3002\n\nintroduction_confirmation\n# python\u306e\u8d77\u52d5\n$ python\n# tensorflow\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n>>> import tensorflow \n# Keras\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n>>> import keras\nusing TensorFlow backend\n\n\n\n\u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\uff08MLP\uff09\u3092\u7528\u3044\u305f\u591a\u5024\u5206\u985e\n\n\u56db\u89d2\u5f62\u306e\u6a2a\u9577\u304b\u7e26\u9577\u304b\u306e\u5206\u985e\n\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u3000\u6b21\u306e\u3088\u3046\u306a\u753b\u50cf\u3092\u5165\u529b\u3068\u3057\u3066\u3001\u7c21\u5358\u306a\u5206\u985e\u3092\u3057\u3066\u307f\u307e\u3059\u3002\u307e\u305a\u3001Deeplearning\u3092\u3059\u308b\u306b\u306f\u30c7\u30fc\u30bf\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001\u30b5\u30a4\u30c8\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3000\u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u6b21\u306e\u3088\u3046\u306a\u56db\u89d2\u5f62\u306e\u753b\u50cf\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u624b\u59cb\u3081\u306bKeras\u3092\u4f7f\u3063\u3066\u7e26\u9577\u304b\u6a2a\u9577\u304b\u306e\uff12\u30af\u30e9\u30b9\u5206\u985e\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\u3000Jupyter\u306e\u4f7f\u3044\u65b9\u306f\u3001\u3053\u3061\u3089\u304c\u5206\u304b\u308a\u3084\u3059\u304f\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u308b\u306e\u3067\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3055\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u9806\u306b\u3064\u3044\u3066\u3067\u3059\u304c\u3001\u3056\u3063\u304f\u308a\u3044\u3046\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5b66\u7fd2\u7528\u306e\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n\u5b66\u7fd2\u3067\u304d\u308b\u5f62\u306b\u30c7\u30fc\u30bf\u306e\u6574\u5f62\uff08\u524d\u51e6\u7406\uff09\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5c64\u306e\u69cb\u7bc9\n\u5b66\u7fd2\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u6027\u80fd\u306e\u8a55\u4fa1\n\u753b\u9762\u306b\u7d50\u679c\u306e\u4e00\u90e8\u3092\u8868\u793a\u3057\u3066\u78ba\u8a8d\n\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u91cd\u307f\u3092\u66f8\u304d\u51fa\u3057\n\n\u3000\u4e00\u5ea6\u5b66\u7fd2\u3057\u3066\u3057\u307e\u3048\u3070\u3001\uff12\u56de\u76ee\u304b\u3089\u306f\u66f8\u304d\u51fa\u3057\u305f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u91cd\u307f\u3092\u8aad\u307f\u8fbc\u3093\u3067\u4f7f\u3048\u308b\u306e\u3067\uff13\u3001\uff14\u304c\u5fc5\u8981\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u5b9f\u88c5\u3059\u308b\u3068\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u5b9f\u884c\u7d50\u679c\u306a\u3069\u306fJupyter Notebook\u3092Gist\u306b\u30a2\u30c3\u30d7\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5fc5\u8981\u3067\u3057\u305f\u3089\u305d\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nrectangle_mlp.py\nimport numpy as np\nfrom scipy.misc import toimage\nfrom keras.utils import np_utils\nimport matplotlib.pyplot as plt\n\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Activation\n\n# \u56db\u89d2\u5f62\u306e\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u95a2\u6570\ndef load_rectangles_data(filename):\n    data = np.loadtxt(filename)\n    # \u753b\u50cf\u30c7\u30fc\u30bf\u306e\u62bd\u51fa\n    x = data[:,0:784]\n    # \u6b63\u89e3\u30e9\u30d9\u30eb\u306e\u62bd\u51fa\n    y = data[:,784]\n    return [x,y]\n\n# \u30d1\u30e9\u30e1\u30fc\u30bf\u8a2d\u5b9a\nnb_classes = 2\nepoch = 20\nbatch = 10\n\n# \u30e9\u30d9\u30eb\uff1a\"Horizontal\": \u6a2a\u9577\uff0c\"Vertical\": \u7e26\u9577\nlabel = [\"Horizontal\",\"Vertical\"]\n\n# \u56db\u89d2\u5f62\u306e\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n[X_train,y_train] = load_rectangles_data('rectangles_train.amat')\n\n# \u56db\u89d2\u5f62\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n[X_test,y_test] = load_rectangles_data('rectangles_test.amat')\n\n# \u30e9\u30d9\u30eb\u3092\u30af\u30e9\u30b9\u6570\u306b\u5bfe\u5fdc\u3059\u308b\u914d\u5217\u306b\u5909\u66f4\n# \u4f8b\uff1ay_train:[0 1 0 0] -> Y_train:[[1 0],[0 1],[1 0],[1 0]]\nY_train = np_utils.to_categorical(y_train,nb_classes)\nY_test = np_utils.to_categorical(y_test,nb_classes)\n\n# \u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f5c\u6210\n# \u5165\u529b\u3092784\u6b21\u5143(28x28)\u3067\u3001\u6700\u7d42\u7684\u306a\u51fa\u529b\u3092\u30af\u30e9\u30b9\u6570\u306b\u8a2d\u5b9a\nmodel = Sequential()\nmodel.add(Dense(512, input_dim=784, init='uniform'))\nmodel.add(Activation('sigmoid'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(512, init='uniform'))\nmodel.add(Activation('sigmoid'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(nb_classes, input_dim=512, init='uniform'))\nmodel.add(Activation('softmax'))\n\n# 2\u5024\u5206\u985e\u306a\u306e\u3067\u30d0\u30a4\u30ca\u30ea\u3092\u9078\u629e\uff0c\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306fRMSprop\u3092\u9078\u629e\nmodel.compile(loss='binary_crossentropy',\n              optimizer='rmsprop',\n              metrics=['accuracy'])\n\nmodel.fit(X_train, Y_train,\n          nb_epoch=epoch,\n          batch_size=batch)\n\n# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\uff0c\u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u3068\u91cd\u307f\u306e\u8a55\u4fa1\nscore = model.evaluate(X_test, Y_test, batch_size=batch)\n# \u4eca\u56de\u306f\u6b63\u89e3\u738792%\nprint(score)\n# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u306e\u30e9\u30d9\u30eb\u3092\u4e88\u6e2c\nclassified_labels = model.predict_classes(X_test[0:10,:].reshape(-1,784))\n\n# \u8868\u793a\u3059\u308b\u5927\u304d\u3055\u3092\u6307\u5b9a\nplt.figure(figsize=(20,10))\nfor i in range(10):\n    plt.subplot(2,5,i+1)\n    # \u753b\u50cf\u30c7\u30fc\u30bf\u306b\u5909\u63db\n    img = toimage(X_test[i].reshape(28,28))\n    plt.imshow(img, cmap='gray')\n    plt.title(\"Class {}\".format(label[classified_labels[i]]),fontsize=20)\n    plt.axis('off')\nplt.show()\n\n# \u30e2\u30c7\u30eb\u3068\u91cd\u307f\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f8\u304d\u51fa\u3057\nmodel_json = model.to_json()\nopen('rectangles_architecture.json', 'w').write(model_json)\nmodel.save_weights('rectangles_weights.h5', overwrite=True)\n\n\n\n\u7d50\u679c\n\u3000\u30a8\u30dd\u30c3\u30af\u6570\u3001\u30d0\u30c3\u30c1\u6570\u3001\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306a\u3069\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u9069\u5f53\u306b\u8abf\u6574\u3057\u3066\u3084\u308b\u3068\u3001\u3053\u306e\u7c21\u5358\u306a\u5206\u985e\u3060\u3068\u6b63\u7b54\u7387\uff19\uff12%\u7a0b\u5ea6\u306f\u51fa\u308b\u307f\u305f\u3044\u3067\u3059\u3002\u4e00\u90e8\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u7d50\u679c\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u6b63\u3057\u304f\u5206\u985e\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3066\u304d\u307e\u3059\u306d\u3002\n\n\n\u5b66\u7fd2\u6e08\u307f\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u306e\u5206\u985e\n\u3000\u5b66\u7fd2\u3055\u305b\u308b\u306b\u306f\u3001\u3084\u306f\u308a\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u5b9f\u7528\u306e\u969b\u306b\u306f\u3001\u3042\u3089\u304b\u3058\u3081\u5b66\u7fd2\u6e08\u307f\u306e\u91cd\u307f\u3092\u4fdd\u5b58\u3057\u3066\u304a\u3044\u3066\u305d\u308c\u3092\u4f7f\u7528\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3092\u3068\u308a\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u3069\u3046\u3059\u308b\u306e\u304b\u3068\u8a00\u3046\u3068\u3001\u5148\u307b\u3069\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u6700\u5f8c\u3067JSON\u3068h5\u3068\u3044\u3046\u62e1\u5f35\u5b50\u3067\u4fdd\u5b58\u3057\u3066\u3044\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u305d\u308c\u3092\u8aad\u307f\u8fbc\u3080\u3060\u3051\u3067\u3059\u3002\u7c21\u5358\u3067\u3059\u3002\n\u3000\u4e0a\u3067\u306f\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5206\u985e\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u3069\u3093\u306a\u30c7\u30fc\u30bf\u3067\u3082\u5206\u985e\u3067\u304d\u308b\u306e\u304b\u3053\u308c\u3060\u3051\u3060\u3068\u4fe1\u7528\u3067\u304d\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u3001\u30da\u30a4\u30f3\u30c8\u3067\u9069\u5f53\u306b\u6b21\u306e\u3088\u3046\u306a\uff15\uff16\u30d4\u30af\u30bb\u30eb\u00d7\uff15\uff16\u30d4\u30af\u30bb\u30eb\u306e\u56db\u89d2\u5f62\u306e\u30c7\u30fc\u30bf\u3092\uff14\u679a\u7528\u610f\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u304c\u5206\u985e\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\u7d50\u679c\u306f\u3001\u898b\u3066\u3044\u305f\u3060\u304f\u3068\u6b63\u3057\u304f\u5206\u985e\u3067\u304d\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308a\u307e\u3059\u306d\u3002\n\n\u3000\u4f7f\u7528\u3057\u305f\u8aad\u307f\u8fbc\u3093\u3067\u5206\u985e\u3059\u308bPython\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u6b21\u306b\u306a\u308a\u307e\u3059\u3002Gist\u306bJupyter Notebook\u306e\u7d50\u679c\u3082\u8f09\u305b\u3066\u304a\u308a\u307e\u3059\u306e\u3067\u3001\u5fc5\u8981\u306a\u65b9\u306f\u305d\u3061\u3089\u3092\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n\nrectangle_load_learned_parameter.py\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nfrom keras.utils import np_utils\n\nfrom keras.models import Sequential,model_from_json\nfrom keras.layers import Dense, Dropout, Activation\nfrom keras.preprocessing import image\nfrom keras.applications.imagenet_utils import preprocess_input, decode_predictions\n\n# \u30a2\u30ec\u30a4\u306e\u5024\u3092\u95be\u5024\u3092\u6307\u5b9a\u3057\u30660\u30681\u306b2\u5024\u5316\u3059\u308b\u95a2\u6570\n# array:2\u6b21\u5143\u306e\u30a2\u30ec\u30a4\u3001threshold:\u95be\u5024\ndef array2d_binarization(array,threshold):\n    (row,column) = array.shape\n    for i in range(row):\n        for j in range(column):\n            if(array[i,j] > threshold):\n                array[i,j] = 1\n            else:\n                array[i,j] = 0\n    return array\n\n# \u30c6\u30b9\u30c8\u306b\u7528\u610f\u3057\u305f\u753b\u50cf\u306e\u679a\u6570\ntest_num = 4\n\n# \u8b58\u5225\u3057\u305f\u30e9\u30d9\u30eb\u306e\u610f\u5473\n# \"Horizontal\": \u6a2a\u9577\uff0c\"Vertical\": \u7e26\u9577\nlabel = [\"Horizontal\",\"Vertical\"]\n\n# \u30e2\u30c7\u30eb\u306e\u8aad\u307f\u8fbc\u307f\nmodel = model_from_json(open('rectangles_architecture.json').read())\n# \u30e2\u30c7\u30eb\u306e\u91cd\u307f\u306e\u8aad\u307f\u8fbc\u307f\nmodel.load_weights('rectangles_weights.h5')\n\nfor s in range(test_num):\n    # \u30d5\u30a1\u30a4\u30eb\u540d\u306e\u6307\u5b9a\n    img_path = \"rectangle\" + str(s)+\".jpg\"\n    # 28\u30d4\u30af\u30bb\u30ebx28\u30d4\u30af\u30bb\u30eb\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3067\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\n    img = image.load_img(img_path, grayscale=True, target_size=(28, 28))\n    # \u8aad\u307f\u8fbc\u3093\u3060\u30a4\u30e1\u30fc\u30b8\u3092\u30a2\u30ec\u30a4\u306b\u5909\u63db\n    x = image.img_to_array(img)\n    # \u30a2\u30ec\u30a4\u30b5\u30a4\u30ba\u306e\u78ba\u8a8d\n    print(x.shape)\n\n    # \u753b\u50cf\u30c7\u30fc\u30bf\u3092\u95be\u502450\u30672\u5024\u5316\u3001\u5f15\u6570\u3068\u3057\u306628x28\u3092\u4e0e\u3048\u308b\u305f\u3081\u306bx[:,:,0]\u3068\u3057\u3066\u3044\u308b\n    x = array2d_binarization(x[:,:,0],50)\n    # \u5165\u529b\u3059\u308b\u305f\u3081\u306b\u300128x28\u306e2\u6b21\u5143\u914d\u5217\u3092\u5927\u304d\u3055784\u306e\u30d9\u30af\u30c8\u30eb\u306b\u6574\u5f62\n    x = x.reshape(-1,784)\n\n    # \u30af\u30e9\u30b9\u306e\u4e88\u6e2c\n    classified_label = model.predict_classes(x)\n\n    # \u4e88\u6e2c\u7d50\u679c\u306e\u30d7\u30ed\u30c3\u30c8\n    plt.subplot(1,test_num,s+1)\n    plt.imshow(img, cmap='gray')\n    plt.title(\"Class {0}\".format(label[classified_label[0]]),fontsize=10)\n    plt.axis('off')\nplt.show()\n\n\n\n\u304a\u308f\u308a\u306b\n\u3000\u7d9a\u3051\u3066\u3001\u4f55\u56de\u304b\u306b\u5206\u3051\u3066Keras\u306e\u4f7f\u3044\u65b9\u3092\u8a18\u4e8b\u306b\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\u6b21\u56de\u306f\u3082\u3046\u5c11\u3057\u8907\u96d1\u306a\u5206\u985e\u306b\u3064\u3044\u3066\u306e\u4e88\u5b9a\u3067\u3059\u3002\u8aa4\u308a\u304c\u3042\u308c\u3070\u3001\u8a02\u6b63\u3057\u307e\u3059\u306e\u3067\u3054\u6307\u6458\u304f\u3060\u3055\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\u3002\n\n\u53c2\u8003\n\nTensorflow\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8-\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nKeras\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8-\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nKeras\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8-Sequential\u30e2\u30c7\u30eb\u306e\u30ac\u30a4\u30c9\n\u56db\u89d2\u5f62\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\nJupyter\u4e8b\u59cb\u3081\nTensorFlow 1.0\u3092\u767a\u8868\n\n# \u306f\u3058\u3081\u306b\n\u3000\u8fd1\u5e74\u6d41\u884c\u308a\u306e\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u3092\u7406\u8ad6\u3092\u77e5\u3089\u306a\u304f\u3066\u3082\u3068\u308a\u3042\u3048\u305a\u8a66\u3057\u3066\u307f\u305f\u3044\u4eba\u3084\u305f\u3060\u4f7f\u3044\u305f\u3044\u4eba\u5411\u3051\u306e\u6295\u7a3f\u306b\u306a\u308a\u307e\u3059\u3002\u81ea\u5206\u306e\u30e1\u30e2\u306e\u305f\u3081\u306b\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u5206\u304b\u308a\u306b\u304f\u3044\u7b87\u6240\u3084\u9593\u9055\u3044\u304c\u3042\u308c\u3070\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\n\u3000[Keras](http://keras.io/ja/)\u3068\u306f\u3001Tensorflow\u3068Theano\u306e\u305f\u3081\u306ePython\u306b\u3088\u308b\u30e9\u30c3\u30d1\u30fc\u3067\u3042\u308a\u3001\u6df1\u5c64\u5b66\u7fd2\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u975e\u5e38\u306b\u7c21\u5358\u306b\u6df1\u5c64\u5b66\u7fd2\u3092\u4f53\u611f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u5171\u306b\u3001\u591a\u304f\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u9020\u3092\u96e3\u3057\u3044\u7406\u8ad6\u3092\u610f\u8b58\u3059\u308b\u3053\u3068\u306a\u304f\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3000\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001Tensorflow\u3068Keras\u306e\u5c0e\u5165\u3068\u307e\u305a\u624b\u59cb\u3081\u306b\u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u3067\u56db\u89d2\u5f62\u306e\u8b58\u5225\u3092\u884c\u3044\u307e\u3059\u3002\n\n\uff08\u8ffd\u8a18\uff09\u591a\u304f\u306e\u65b9\u306b\u898b\u3066\u3044\u305f\u3060\u3051\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u5b66\u7fd2\u6e08\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u306e\u8b58\u5225\u3082\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\u7686\u69d8\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\uff082017/03/09\u8ffd\u8a18\uff092017\u5e742\u670815\u65e5\u306bGoogle\u304b\u3089TensorFlow 1.0\u304c\u516c\u958b\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u4f34\u3044\u3001TensorFlow\u306b\u65b0\u305f\u306btf.keras\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5c0e\u5165\u3055\u308c\u308b\u4e88\u5b9a\u3067\u3059\u3002\uff08\u4eca\u306e\u3068\u3053\u308d\u3001TensorFlow 1.2\u3067\u8ffd\u52a0\u4e88\u5b9a\u307f\u305f\u3044\u3067\u3059\u3002\uff09\u305d\u306e\u305f\u3081\u3001\u3053\u308c\u307e\u3067\u901a\u308aKeras\u3092\u4f7f\u3063\u3066\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3067TensorFlow\u3092\u52d5\u304b\u3055\u306a\u304f\u3066\u3082\u3001\u76f4\u63a5Keras\u306eAPI\u3092TensorFlow\u304b\u3089\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3000\u3061\u3087\u3063\u3068\u7d9a\u304d\u306e\u8a18\u4e8b\u3092\u3069\u3061\u3089\u3067\u66f8\u304f\u3079\u304d\u304b\u8ff7\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u304a\u305d\u3089\u304f\u3053\u306e\u9023\u8f09\u306f\u7d14\u7c8b\u306aKeras\u3067\u66f8\u304d\u5207\u308d\u3046\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002TensorFlow\u304cKeras\u306b\u3082\u5bfe\u5fdc\u3057\u305f\u3089TensorFlow\u306e\u30b3\u30fc\u30c9\u3082\u53c2\u8003\u3068\u3057\u3066\u3001Gist\u306b\u306f\u30a2\u30c3\u30d7\u3059\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u5b9f\u884c\u74b0\u5883\n- Windows 10\uff0864bit\uff09with only CPU\n- Python 3.5.2\n- Anaconda 4.2.0\uff0864bit\uff09\n- Tensorflow 0.12.1\n- Keras 1.2.1\n\n# \u5b9f\u884c\u74b0\u5883\u306e\u5c0e\u5165\u624b\u9806\n## Anaconda\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u3000\u79c1\u306f\u3001Windows\u3067\u306epython\u306e\u5b9f\u884c\u74b0\u5883\u3068\u3057\u3066\u3001Anaconda\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u65e2\u306b\u3001\u4f7f\u7528\u3057\u3066\u3044\u308b\u74b0\u5883\u304c\u3042\u308b\u65b9\u306f\u8aad\u307f\u98db\u3070\u3057\u3066\u3044\u305f\u3060\u3044\u3066\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002Anaconda\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u3001\u516c\u5f0f\u306e[\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30da\u30fc\u30b8](http://www.continuum.io/downloads#windows)\u306b\u79fb\u52d5\u3057\u3066\u3001\u74b0\u5883\u306b\u3042\u3063\u305f\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\u5f8c\u306f\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u5b9f\u884c\u3057\u3066\u3001\u6b21\u3078\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3044\u3051\u3070\u5b8c\u4e86\u3067\u3059\u3002\n\u3000Anaconda\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u5171\u306b\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u6642\u306b\u9078\u629e\u3057\u305fPython\uff08\u79c1\u306e\u5834\u5408\u306fPython3\uff09\u3068jupyter notebook\u3068\u3044\u3046\u30a8\u30c7\u30a3\u30bf\u3082\u5165\u308b\u306e\u3067\u3001\u5225\u3067python\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n![anaconda2.png](https://qiita-image-store.s3.amazonaws.com/0/146858/b410b16f-ca3d-2528-ecb8-fcf69963b607.png)\n\n## Tensorflow\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u3000Keras\u3067\u306f\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3067\u52d5\u304b\u3059\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Tensorflow\u304bTheano\u304b\u3067\u9078\u629e\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306fTensorflow\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u306f\u3001pip\u3092\u7528\u3044\u308b\u305f\u3081\u3001\u307e\u305a\u3001\u30b9\u30bf\u30fc\u30c8\u753b\u9762\u304b\u3089Anaconda\u3092\u691c\u7d22\u3057\u8d77\u52d5\u3057\u307e\u3059\u3002\n![anaconda_pronpt2.png](https://qiita-image-store.s3.amazonaws.com/0/146858/4042bdea-19f9-45d7-7ebc-65eb3ecc8aaf.png)\n\u3000\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u76f4\u5f8c\u306f\u3001\u5ff5\u306e\u305f\u3081pip\u3092\u6700\u65b0\u7248\u306b\u66f4\u65b0\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\u6700\u65b0\u7248\u306b\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092Anaconda Prompt\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```shell-session:pip_upgrade\n$ pip install --upgrade pip\n```\n\u3000\u6700\u65b0\u7248\u306b\u3067\u304d\u305f\u3089\u3001Tensorflow\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002Anaconda\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u958b\u3044\u305f\u72b6\u614b\u306e\u307e\u307e\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002GPU\u642d\u8f09PC\u3068CPU\u306e\u307f\u306ePC\u3067\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u306e\u30b3\u30de\u30f3\u30c9\u304c\u7570\u306a\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```shell-session:tensorflow_install\n# CPU\u306e\u307f\u306e\u5834\u5408\n$ pip install tensorflow\n# GPU\u642d\u8f09\u3057\u3066\u3044\u308b\u5834\u5408\n$ pip install tensorflow-gpu\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u306e\u78ba\u8a8d\u65b9\u6cd5\n# \u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001\u30ea\u30b9\u30c8\u306e\u4e2d\u306btensorflow\u304c\u3042\u308c\u3070OK\u3067\u3059\n$ pip list |grep tensorflow\n```\n\n\uff08\u8ffd\u8a18\uff09\uff082017/3/8\u73fe\u5728\uff09Tensorflow\u306fPython\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c3.5.x\u3067\u306a\u3044\u3068\u4e0a\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u308c\u3092\u56de\u907f\u3059\u308b\u65b9\u6cd5\u3092\u307e\u3068\u3081\u305f\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u306a\u3044\u65b9\u306f\u305d\u308c\u3092\u53c2\u8003\u306bTensorflow\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4e0b\u8a18\u304c\u305d\u306e\u8a18\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\n[Windows\u306eAnaconda\u74b0\u5883\u306b\u6df1\u5c64\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30afTensorflow 1.0\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u65b9\u6cd5](http://qiita.com/tomochiii/items/fe4c791b313ddcef4cd7)\n\n## Keras\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u3000\u7d9a\u3051\u3066\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068Keras\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5b8c\u4e86\u3067\u3059\u3002\n\n```shell-session:Keras_install\n# Keras\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ pip install keras\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u306e\u78ba\u8a8d\n# \u540c\u3058\u304fKeras\u304c\u78ba\u8a8d\u3067\u304d\u308c\u3070OK\u3067\u3059\u3002\n$ pip list |grep Keras\n```\n\n## \u5c0e\u5165\u3067\u304d\u3066\u3044\u308b\u304b\u306e\u78ba\u8a8d\n\u3000\u3053\u3053\u3067\u3001\u672c\u984c\u306b\u5165\u308b\u524d\u306b\u5c0e\u5165\u304c\u6b63\u3057\u304f\u3067\u304d\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3059\u3002Anaconda\u30d7\u30ed\u30f3\u30d7\u30c8\u3092\u958b\u3044\u3066\u3044\u308b\u72b6\u614b\u3060\u3068\u601d\u3046\u306e\u3067\u3001\u305d\u3053\u3067python\u3092\u8d77\u52d5\u3057\u3001\u304d\u3061\u3093\u3068import\u3067\u304d\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308c\u3070\u5927\u4e08\u592b\u3067\u3059\u3002\n\n```shell-session:introduction_confirmation\n# python\u306e\u8d77\u52d5\n$ python\n# tensorflow\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n>>> import tensorflow \n# Keras\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n>>> import keras\nusing TensorFlow backend\n```\n\n# \u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\uff08MLP\uff09\u3092\u7528\u3044\u305f\u591a\u5024\u5206\u985e\n## \u56db\u89d2\u5f62\u306e\u6a2a\u9577\u304b\u7e26\u9577\u304b\u306e\u5206\u985e\n### \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u3000\u6b21\u306e\u3088\u3046\u306a\u753b\u50cf\u3092\u5165\u529b\u3068\u3057\u3066\u3001\u7c21\u5358\u306a\u5206\u985e\u3092\u3057\u3066\u307f\u307e\u3059\u3002\u307e\u305a\u3001Deeplearning\u3092\u3059\u308b\u306b\u306f\u30c7\u30fc\u30bf\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001[\u30b5\u30a4\u30c8](http://www.iro.umontreal.ca/~lisa/twiki/bin/view.cgi/Public/RectanglesData)\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n![rectangle2.png](https://qiita-image-store.s3.amazonaws.com/0/146858/a819c590-f644-5c31-1edb-acf237c90101.png)\n\u3000\u3053\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306f\u6b21\u306e\u3088\u3046\u306a\u56db\u89d2\u5f62\u306e\u753b\u50cf\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u624b\u59cb\u3081\u306bKeras\u3092\u4f7f\u3063\u3066\u7e26\u9577\u304b\u6a2a\u9577\u304b\u306e\uff12\u30af\u30e9\u30b9\u5206\u985e\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\n![rectangleImage.png](https://qiita-image-store.s3.amazonaws.com/0/146858/78e6a4ba-6c42-6605-aa01-55e0d18c2cb5.png)\n\n### \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\u3000Jupyter\u306e\u4f7f\u3044\u65b9\u306f\u3001[\u3053\u3061\u3089](http://qiita.com/taka4sato/items/2c3397ff34c440044978)\u304c\u5206\u304b\u308a\u3084\u3059\u304f\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u308b\u306e\u3067\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3055\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u624b\u9806\u306b\u3064\u3044\u3066\u3067\u3059\u304c\u3001\u3056\u3063\u304f\u308a\u3044\u3046\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n1. \u5b66\u7fd2\u7528\u306e\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n2. \u5b66\u7fd2\u3067\u304d\u308b\u5f62\u306b\u30c7\u30fc\u30bf\u306e\u6574\u5f62\uff08\u524d\u51e6\u7406\uff09\n3. \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5c64\u306e\u69cb\u7bc9\n4. \u5b66\u7fd2\n5. \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u6027\u80fd\u306e\u8a55\u4fa1\n6. \u753b\u9762\u306b\u7d50\u679c\u306e\u4e00\u90e8\u3092\u8868\u793a\u3057\u3066\u78ba\u8a8d\n7. \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u91cd\u307f\u3092\u66f8\u304d\u51fa\u3057\n\n\u3000\u4e00\u5ea6\u5b66\u7fd2\u3057\u3066\u3057\u307e\u3048\u3070\u3001\uff12\u56de\u76ee\u304b\u3089\u306f\u66f8\u304d\u51fa\u3057\u305f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u91cd\u307f\u3092\u8aad\u307f\u8fbc\u3093\u3067\u4f7f\u3048\u308b\u306e\u3067\uff13\u3001\uff14\u304c\u5fc5\u8981\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u5b9f\u88c5\u3059\u308b\u3068\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u5b9f\u884c\u7d50\u679c\u306a\u3069\u306fJupyter Notebook\u3092[Gist](http://gist.github.com/keit0222/24922f11c7c3e3c36e42a4e4f2722ee4)\u306b\u30a2\u30c3\u30d7\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5fc5\u8981\u3067\u3057\u305f\u3089\u305d\u3061\u3089\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```py3:rectangle_mlp.py\nimport numpy as np\nfrom scipy.misc import toimage\nfrom keras.utils import np_utils\nimport matplotlib.pyplot as plt\n\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Activation\n\n# \u56db\u89d2\u5f62\u306e\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u95a2\u6570\ndef load_rectangles_data(filename):\n    data = np.loadtxt(filename)\n    # \u753b\u50cf\u30c7\u30fc\u30bf\u306e\u62bd\u51fa\n    x = data[:,0:784]\n    # \u6b63\u89e3\u30e9\u30d9\u30eb\u306e\u62bd\u51fa\n    y = data[:,784]\n    return [x,y]\n\n# \u30d1\u30e9\u30e1\u30fc\u30bf\u8a2d\u5b9a\nnb_classes = 2\nepoch = 20\nbatch = 10\n\n# \u30e9\u30d9\u30eb\uff1a\"Horizontal\": \u6a2a\u9577\uff0c\"Vertical\": \u7e26\u9577\nlabel = [\"Horizontal\",\"Vertical\"]\n\n# \u56db\u89d2\u5f62\u306e\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n[X_train,y_train] = load_rectangles_data('rectangles_train.amat')\n\n# \u56db\u89d2\u5f62\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n[X_test,y_test] = load_rectangles_data('rectangles_test.amat')\n\n# \u30e9\u30d9\u30eb\u3092\u30af\u30e9\u30b9\u6570\u306b\u5bfe\u5fdc\u3059\u308b\u914d\u5217\u306b\u5909\u66f4\n# \u4f8b\uff1ay_train:[0 1 0 0] -> Y_train:[[1 0],[0 1],[1 0],[1 0]]\nY_train = np_utils.to_categorical(y_train,nb_classes)\nY_test = np_utils.to_categorical(y_test,nb_classes)\n\n# \u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f5c\u6210\n# \u5165\u529b\u3092784\u6b21\u5143(28x28)\u3067\u3001\u6700\u7d42\u7684\u306a\u51fa\u529b\u3092\u30af\u30e9\u30b9\u6570\u306b\u8a2d\u5b9a\nmodel = Sequential()\nmodel.add(Dense(512, input_dim=784, init='uniform'))\nmodel.add(Activation('sigmoid'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(512, init='uniform'))\nmodel.add(Activation('sigmoid'))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(nb_classes, input_dim=512, init='uniform'))\nmodel.add(Activation('softmax'))\n\n# 2\u5024\u5206\u985e\u306a\u306e\u3067\u30d0\u30a4\u30ca\u30ea\u3092\u9078\u629e\uff0c\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306fRMSprop\u3092\u9078\u629e\nmodel.compile(loss='binary_crossentropy',\n              optimizer='rmsprop',\n              metrics=['accuracy'])\n\nmodel.fit(X_train, Y_train,\n          nb_epoch=epoch,\n          batch_size=batch)\n\n# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\uff0c\u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u3068\u91cd\u307f\u306e\u8a55\u4fa1\nscore = model.evaluate(X_test, Y_test, batch_size=batch)\n# \u4eca\u56de\u306f\u6b63\u89e3\u738792%\nprint(score)\n# \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\u306e\u30e9\u30d9\u30eb\u3092\u4e88\u6e2c\nclassified_labels = model.predict_classes(X_test[0:10,:].reshape(-1,784))\n\n# \u8868\u793a\u3059\u308b\u5927\u304d\u3055\u3092\u6307\u5b9a\nplt.figure(figsize=(20,10))\nfor i in range(10):\n    plt.subplot(2,5,i+1)\n    # \u753b\u50cf\u30c7\u30fc\u30bf\u306b\u5909\u63db\n    img = toimage(X_test[i].reshape(28,28))\n    plt.imshow(img, cmap='gray')\n    plt.title(\"Class {}\".format(label[classified_labels[i]]),fontsize=20)\n    plt.axis('off')\nplt.show()\n\n# \u30e2\u30c7\u30eb\u3068\u91cd\u307f\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f8\u304d\u51fa\u3057\nmodel_json = model.to_json()\nopen('rectangles_architecture.json', 'w').write(model_json)\nmodel.save_weights('rectangles_weights.h5', overwrite=True)\n```\n### \u7d50\u679c\n\u3000\u30a8\u30dd\u30c3\u30af\u6570\u3001\u30d0\u30c3\u30c1\u6570\u3001\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306a\u3069\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u9069\u5f53\u306b\u8abf\u6574\u3057\u3066\u3084\u308b\u3068\u3001\u3053\u306e\u7c21\u5358\u306a\u5206\u985e\u3060\u3068\u6b63\u7b54\u7387\uff19\uff12%\u7a0b\u5ea6\u306f\u51fa\u308b\u307f\u305f\u3044\u3067\u3059\u3002\u4e00\u90e8\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u7d50\u679c\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u6b63\u3057\u304f\u5206\u985e\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u3066\u304d\u307e\u3059\u306d\u3002\n![result.png](https://qiita-image-store.s3.amazonaws.com/0/146858/0f9df2d9-962a-6faf-72b4-fb55abd0a2af.png)\n\n### \u5b66\u7fd2\u6e08\u307f\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u306e\u5206\u985e\n\u3000\u5b66\u7fd2\u3055\u305b\u308b\u306b\u306f\u3001\u3084\u306f\u308a\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u5b9f\u7528\u306e\u969b\u306b\u306f\u3001\u3042\u3089\u304b\u3058\u3081\u5b66\u7fd2\u6e08\u307f\u306e\u91cd\u307f\u3092\u4fdd\u5b58\u3057\u3066\u304a\u3044\u3066\u305d\u308c\u3092\u4f7f\u7528\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3092\u3068\u308a\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u3069\u3046\u3059\u308b\u306e\u304b\u3068\u8a00\u3046\u3068\u3001\u5148\u307b\u3069\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u6700\u5f8c\u3067JSON\u3068h5\u3068\u3044\u3046\u62e1\u5f35\u5b50\u3067\u4fdd\u5b58\u3057\u3066\u3044\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u305d\u308c\u3092\u8aad\u307f\u8fbc\u3080\u3060\u3051\u3067\u3059\u3002\u7c21\u5358\u3067\u3059\u3002\n\u3000\u4e0a\u3067\u306f\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5206\u985e\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u3069\u3093\u306a\u30c7\u30fc\u30bf\u3067\u3082\u5206\u985e\u3067\u304d\u308b\u306e\u304b\u3053\u308c\u3060\u3051\u3060\u3068\u4fe1\u7528\u3067\u304d\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u3001\u30da\u30a4\u30f3\u30c8\u3067\u9069\u5f53\u306b\u6b21\u306e\u3088\u3046\u306a\uff15\uff16\u30d4\u30af\u30bb\u30eb\u00d7\uff15\uff16\u30d4\u30af\u30bb\u30eb\u306e\u56db\u89d2\u5f62\u306e\u30c7\u30fc\u30bf\u3092\uff14\u679a\u7528\u610f\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u304c\u5206\u985e\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\u7d50\u679c\u306f\u3001\u898b\u3066\u3044\u305f\u3060\u304f\u3068\u6b63\u3057\u304f\u5206\u985e\u3067\u304d\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308a\u307e\u3059\u306d\u3002\n![result3.png](https://qiita-image-store.s3.amazonaws.com/0/146858/27088bea-a04a-f362-898b-81a63bde397e.png)\n\u3000\u4f7f\u7528\u3057\u305f\u8aad\u307f\u8fbc\u3093\u3067\u5206\u985e\u3059\u308bPython\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u6b21\u306b\u306a\u308a\u307e\u3059\u3002[Gist](http://gist.github.com/keit0222/77dcf73e9930dcae1d5708ab154f3034)\u306bJupyter Notebook\u306e\u7d50\u679c\u3082\u8f09\u305b\u3066\u304a\u308a\u307e\u3059\u306e\u3067\u3001\u5fc5\u8981\u306a\u65b9\u306f\u305d\u3061\u3089\u3092\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n\n```py3:rectangle_load_learned_parameter.py\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nfrom keras.utils import np_utils\n\nfrom keras.models import Sequential,model_from_json\nfrom keras.layers import Dense, Dropout, Activation\nfrom keras.preprocessing import image\nfrom keras.applications.imagenet_utils import preprocess_input, decode_predictions\n\n# \u30a2\u30ec\u30a4\u306e\u5024\u3092\u95be\u5024\u3092\u6307\u5b9a\u3057\u30660\u30681\u306b2\u5024\u5316\u3059\u308b\u95a2\u6570\n# array:2\u6b21\u5143\u306e\u30a2\u30ec\u30a4\u3001threshold:\u95be\u5024\ndef array2d_binarization(array,threshold):\n    (row,column) = array.shape\n    for i in range(row):\n        for j in range(column):\n            if(array[i,j] > threshold):\n                array[i,j] = 1\n            else:\n                array[i,j] = 0\n    return array\n\n# \u30c6\u30b9\u30c8\u306b\u7528\u610f\u3057\u305f\u753b\u50cf\u306e\u679a\u6570\ntest_num = 4\n\n# \u8b58\u5225\u3057\u305f\u30e9\u30d9\u30eb\u306e\u610f\u5473\n# \"Horizontal\": \u6a2a\u9577\uff0c\"Vertical\": \u7e26\u9577\nlabel = [\"Horizontal\",\"Vertical\"]\n\n# \u30e2\u30c7\u30eb\u306e\u8aad\u307f\u8fbc\u307f\nmodel = model_from_json(open('rectangles_architecture.json').read())\n# \u30e2\u30c7\u30eb\u306e\u91cd\u307f\u306e\u8aad\u307f\u8fbc\u307f\nmodel.load_weights('rectangles_weights.h5')\n\nfor s in range(test_num):\n    # \u30d5\u30a1\u30a4\u30eb\u540d\u306e\u6307\u5b9a\n    img_path = \"rectangle\" + str(s)+\".jpg\"\n    # 28\u30d4\u30af\u30bb\u30ebx28\u30d4\u30af\u30bb\u30eb\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3067\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\n    img = image.load_img(img_path, grayscale=True, target_size=(28, 28))\n    # \u8aad\u307f\u8fbc\u3093\u3060\u30a4\u30e1\u30fc\u30b8\u3092\u30a2\u30ec\u30a4\u306b\u5909\u63db\n    x = image.img_to_array(img)\n    # \u30a2\u30ec\u30a4\u30b5\u30a4\u30ba\u306e\u78ba\u8a8d\n    print(x.shape)\n    \n    # \u753b\u50cf\u30c7\u30fc\u30bf\u3092\u95be\u502450\u30672\u5024\u5316\u3001\u5f15\u6570\u3068\u3057\u306628x28\u3092\u4e0e\u3048\u308b\u305f\u3081\u306bx[:,:,0]\u3068\u3057\u3066\u3044\u308b\n    x = array2d_binarization(x[:,:,0],50)\n    # \u5165\u529b\u3059\u308b\u305f\u3081\u306b\u300128x28\u306e2\u6b21\u5143\u914d\u5217\u3092\u5927\u304d\u3055784\u306e\u30d9\u30af\u30c8\u30eb\u306b\u6574\u5f62\n    x = x.reshape(-1,784)\n\n    # \u30af\u30e9\u30b9\u306e\u4e88\u6e2c\n    classified_label = model.predict_classes(x)\n    \n    # \u4e88\u6e2c\u7d50\u679c\u306e\u30d7\u30ed\u30c3\u30c8\n    plt.subplot(1,test_num,s+1)\n    plt.imshow(img, cmap='gray')\n    plt.title(\"Class {0}\".format(label[classified_label[0]]),fontsize=10)\n    plt.axis('off')\nplt.show()\n```\n\n# \u304a\u308f\u308a\u306b\n\u3000\u7d9a\u3051\u3066\u3001\u4f55\u56de\u304b\u306b\u5206\u3051\u3066Keras\u306e\u4f7f\u3044\u65b9\u3092\u8a18\u4e8b\u306b\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\u6b21\u56de\u306f\u3082\u3046\u5c11\u3057\u8907\u96d1\u306a\u5206\u985e\u306b\u3064\u3044\u3066\u306e\u4e88\u5b9a\u3067\u3059\u3002\u8aa4\u308a\u304c\u3042\u308c\u3070\u3001\u8a02\u6b63\u3057\u307e\u3059\u306e\u3067\u3054\u6307\u6458\u304f\u3060\u3055\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\u3002\n\n# \u53c2\u8003\n- [Tensorflow\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8-\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb](http://www.tensorflow.org/get_started/os_setup#pip_installation)\n- [Keras\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8-\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb](http://keras.io/ja/#_2)\n- [Keras\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8-Sequential\u30e2\u30c7\u30eb\u306e\u30ac\u30a4\u30c9](http://keras.io/ja/getting-started/sequential-model-guide/#_5)\n- [\u56db\u89d2\u5f62\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8](http://www.iro.umontreal.ca/~lisa/twiki/bin/view.cgi/Public/RectanglesData)\n- [Jupyter\u4e8b\u59cb\u3081](http://qiita.com/taka4sato/items/2c3397ff34c440044978)\n- [TensorFlow 1.0\u3092\u767a\u8868](http://developers-jp.googleblog.com/2017/02/announcing-tensorflow-10..html)\n", "tags": ["Keras", "Python", "DeepLearning", "Windows10"]}