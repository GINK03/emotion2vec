{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\n\nDocker\u3067Elasticsearch\u3068Kibana\n\n\n\u524d\u63d0\u6761\u4ef6\n\nOS X 10.9.5\nDockerToolbox-1.9.1f \n\n\ndocker-machine 0.5.4\ndocker 1.9.1\n\n\n\n\nDocker\u304c\u7a3c\u50cd\u3059\u308b\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u4f5c\u6210\n$ docker-machine create --driver virtualbox dev\nCreating CA: /Users/moriyasu/.docker/machine/certs/ca.pem\nCreating client certificate: /Users/moriyasu/.docker/machine/certs/cert.pem\nRunning pre-create checks...\nCreating machine...\n(dev) Creating VirtualBox VM...\n(dev) Creating SSH key...\n(dev) Starting VM...\nWaiting for machine to be running, this may take a few minutes...\nMachine is running, waiting for SSH to be available...\nDetecting operating system of created instance...\nDetecting the provisioner...\nProvisioning with boot2docker...\nCopying certs to the local machine directory...\nCopying certs to the remote machine...\nSetting Docker configuration on the remote daemon...\nChecking connection to Docker...\nDocker is up and running!\nTo see how to connect Docker to this machine, run: docker-machine env dev\n\n\n\u4eee\u60f3\u30de\u30b7\u30f3\u78ba\u8a8d\n$ docker-machine ls\nNAME   ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER   ERRORS\ndev    -        virtualbox   Running   tcp://192.168.99.100:2376           v1.9.1\n\n\ndocker-machine\u74b0\u5883\u78ba\u8a8d\n$ docker-machine env dev\nexport DOCKER_TLS_VERIFY=\"1\"\nexport DOCKER_HOST=\"tcp://192.168.99.100:2376\"\nexport DOCKER_CERT_PATH=\"/Users/moriyasu0410/.docker/machine/machines/dev\"\nexport DOCKER_MACHINE_NAME=\"dev\"\n# Run this command to configure your shell:\n# eval \"$(docker-machine env dev)\"\n\n\ndocker-machine\u74b0\u5883\u8a2d\u5b9a\n$ export DOCKER_TLS_VERIFY=\"1\"\n$ export DOCKER_HOST=\"tcp://192.168.99.100:2376\"\n$ export DOCKER_CERT_PATH=\"/Users/moriyasu0410/.docker/machine/machines/dev\"\n$ export DOCKER_MACHINE_NAME=\"dev\"\n\n\nElasticsearch Dockerfile\u4f5c\u6210\n$ cd\n$ mkdir -p docker/es\n$ cd docker/es\n$ vim Dockerfile\n\n\nDockerfile\nFROM centos:6.6\n\nRUN yum -y update\n\nRUN yum install -y wget tar\n\nRUN yum install -y java-1.8.0-openjdk\nENV JAVA_HOME /usr/lib/jvm/jre-1.8.0-openjdk.x86_64\nENV PATH $PATH:$JAVA_HOME/bin\nENV CLASSPATH=.:$JAVA_HOME/jre/lib:$JAVA_HOME/lib:$JAVA_HOME/lib/tools.jar\n\nENV ES_PKG_NAME elasticsearch-1.7.4\nRUN cd /\nRUN wget https://download.elasticsearch.org/elasticsearch/elasticsearch/$ES_PKG_NAME.tar.gz\nRUN tar xvzf $ES_PKG_NAME.tar.gz\nRUN rm -f $ES_PKG_NAME.tar.gz\nRUN mv /$ES_PKG_NAME /elasticsearch\n\nCMD [\"/elasticsearch/bin/elasticsearch\"]\n\nEXPOSE 9200 9300\n\n\n\nDocker\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n$ docker build --no-cache=true -t centos6/es .\n\n\nDocker\u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n$ docker run --name es -t -i -d -p 9200:9200 -p 9300:9300 centos6/es\n\n\nkibana Dockerfile\n$ cd\n$ mkdir -p docker/kibana\n$ cd docker/kibana\n$ vim Dockerfile\n$ vim kibana.yml\n\n\nDockerfile\nFROM centos:6.6\n\nRUN yum -y update\n\nRUN yum install -y wget tar\n\nENV KIBANA_PKG_NAME kibana-4.1.4-linux-x64\nRUN cd /\nRUN wget https://download.elastic.co/kibana/kibana/$KIBANA_PKG_NAME.tar.gz\nRUN tar xvzf $KIBANA_PKG_NAME.tar.gz\nRUN rm -f $KIBANA_PKG_NAME.tar.gz\nRUN mv /$KIBANA_PKG_NAME /kibana\nRUN cp /kibana/config/kibana.yml /kibana/config/kibana.yml.org\nADD kibana.yml /kibana/config/\n\nCMD [\"/kibana/bin/kibana\"]\n\nEXPOSE 5601\n\n\n\nkibana.yml\n# Kibana is served by a back end server. This controls which port to use.\nport: 5601\n\n# The host to bind the server to.\nhost: \"0.0.0.0\"\n\n# The Elasticsearch instance to use for all your queries.\nelasticsearch_url: \"http://es_alias:9200\"\n\n# preserve_elasticsearch_host true will send the hostname specified in `elasticsearch`. If you set it to false,\n# then the host you use to connect to *this* Kibana instance will be sent.\nelasticsearch_preserve_host: true\n\n# Kibana uses an index in Elasticsearch to store saved searches, visualizations\n# and dashboards. It will create a new index if it doesn't already exist.\nkibana_index: \".kibana\"\n\n# If your Elasticsearch is protected with basic auth, this is the user credentials\n# used by the Kibana server to perform maintence on the kibana_index at statup. Your Kibana\n# users will still need to authenticate with Elasticsearch (which is proxied thorugh\n# the Kibana server)\n# kibana_elasticsearch_username: user\n# kibana_elasticsearch_password: pass\n\n# If your Elasticsearch requires client certificate and key\n# kibana_elasticsearch_client_crt: /path/to/your/client.crt\n# kibana_elasticsearch_client_key: /path/to/your/client.key\n\n# If you need to provide a CA certificate for your Elasticsarech instance, put\n# the path of the pem file here.\n# ca: /path/to/your/CA.pem\n\n# The default application to load.\ndefault_app_id: \"discover\"\n\n# Time in milliseconds to wait for elasticsearch to respond to pings, defaults to\n# request_timeout setting\n# ping_timeout: 1500\n\n# Time in milliseconds to wait for responses from the back end or elasticsearch.\n# This must be > 0\nrequest_timeout: 300000\n\n# Time in milliseconds for Elasticsearch to wait for responses from shards.\n# Set to 0 to disable.\nshard_timeout: 0\n\n# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying\n# startup_timeout: 5000\n\n# Set to false to have a complete disregard for the validity of the SSL\n# certificate.\nverify_ssl: true\n\n# SSL for outgoing requests from the Kibana Server (PEM formatted)\n# ssl_key_file: /path/to/your/server.key\n# ssl_cert_file: /path/to/your/server.crt\n\n# Set the path to where you would like the process id file to be created.\n# pid_file: /var/run/kibana.pid\n\n# If you would like to send the log output to a file you can set the path below.\n# This will also turn off the STDOUT log output.\n# log_file: ./kibana.log\n\n# A value to use as a XSRF token. This token is sent back to the server on each request\n# and required if you want to execute requests from other clients (like curl).\n# xsrf_token: \"\"\n\n# Plugins that are included in the build, and no longer found in the plugins/ folder\nbundled_plugin_ids:\n - plugins/dashboard/index\n - plugins/discover/index\n - plugins/doc/index\n - plugins/kibana/index\n - plugins/markdown_vis/index\n - plugins/metric_vis/index\n - plugins/settings/index\n - plugins/table_vis/index\n - plugins/vis_types/index\n - plugins/visualize/index\n\n\n\nDocker\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n$ docker build --no-cache=true -t centos6/kibana .\n\n\nDocker\u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n$ docker run --name kibana --link es:es_alias -t -i -d  -p 5601:5601 centos6/kibana\n\n\nDocker\u30b3\u30f3\u30c6\u30ca\u78ba\u8a8d\n$ docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                            NAMES\n6a68ea6bccd6        centos6/kibana      \"/kibana/bin/kibana\"     5 seconds ago       Up 5 seconds        0.0.0.0:5601->5601/tcp                           kibana\n1663201be1f3        centos6/es          \"/elasticsearch/bin/e\"   1 minutes ago       Up 1 minutes        0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   es\n\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u958b\u304f\nhttp://192.168.99.100:5601\n# \u76ee\u7684\n* Docker\u3067Elasticsearch\u3068Kibana\n\n# \u524d\u63d0\u6761\u4ef6\n* OS X 10.9.5\n* DockerToolbox-1.9.1f \n * docker-machine 0.5.4\n * docker 1.9.1\n\n# Docker\u304c\u7a3c\u50cd\u3059\u308b\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u4f5c\u6210\n<pre>\n$ docker-machine create --driver virtualbox dev\nCreating CA: /Users/moriyasu/.docker/machine/certs/ca.pem\nCreating client certificate: /Users/moriyasu/.docker/machine/certs/cert.pem\nRunning pre-create checks...\nCreating machine...\n(dev) Creating VirtualBox VM...\n(dev) Creating SSH key...\n(dev) Starting VM...\nWaiting for machine to be running, this may take a few minutes...\nMachine is running, waiting for SSH to be available...\nDetecting operating system of created instance...\nDetecting the provisioner...\nProvisioning with boot2docker...\nCopying certs to the local machine directory...\nCopying certs to the remote machine...\nSetting Docker configuration on the remote daemon...\nChecking connection to Docker...\nDocker is up and running!\nTo see how to connect Docker to this machine, run: docker-machine env dev\n</pre>\n\n# \u4eee\u60f3\u30de\u30b7\u30f3\u78ba\u8a8d\n<pre>\n$ docker-machine ls\nNAME   ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER   ERRORS\ndev    -        virtualbox   Running   tcp://192.168.99.100:2376           v1.9.1\n</pre>\n\n# docker-machine\u74b0\u5883\u78ba\u8a8d\n<pre>\n$ docker-machine env dev\nexport DOCKER_TLS_VERIFY=\"1\"\nexport DOCKER_HOST=\"tcp://192.168.99.100:2376\"\nexport DOCKER_CERT_PATH=\"/Users/moriyasu0410/.docker/machine/machines/dev\"\nexport DOCKER_MACHINE_NAME=\"dev\"\n# Run this command to configure your shell:\n# eval \"$(docker-machine env dev)\"\n</pre>\n\n# docker-machine\u74b0\u5883\u8a2d\u5b9a\n<pre>\n$ export DOCKER_TLS_VERIFY=\"1\"\n$ export DOCKER_HOST=\"tcp://192.168.99.100:2376\"\n$ export DOCKER_CERT_PATH=\"/Users/moriyasu0410/.docker/machine/machines/dev\"\n$ export DOCKER_MACHINE_NAME=\"dev\"\n</pre>\n\n# Elasticsearch Dockerfile\u4f5c\u6210\n<pre>\n$ cd\n$ mkdir -p docker/es\n$ cd docker/es\n$ vim Dockerfile\n</pre>\n\n```sh:Dockerfile\nFROM centos:6.6\n\nRUN yum -y update\n\nRUN yum install -y wget tar\n\nRUN yum install -y java-1.8.0-openjdk\nENV JAVA_HOME /usr/lib/jvm/jre-1.8.0-openjdk.x86_64\nENV PATH $PATH:$JAVA_HOME/bin\nENV CLASSPATH=.:$JAVA_HOME/jre/lib:$JAVA_HOME/lib:$JAVA_HOME/lib/tools.jar\n\nENV ES_PKG_NAME elasticsearch-1.7.4\nRUN cd /\nRUN wget https://download.elasticsearch.org/elasticsearch/elasticsearch/$ES_PKG_NAME.tar.gz\nRUN tar xvzf $ES_PKG_NAME.tar.gz\nRUN rm -f $ES_PKG_NAME.tar.gz\nRUN mv /$ES_PKG_NAME /elasticsearch\n\nCMD [\"/elasticsearch/bin/elasticsearch\"]\n\nEXPOSE 9200 9300\n```\n\n# Docker\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n<pre>\n$ docker build --no-cache=true -t centos6/es .\n</pre>\n\n# Docker\u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n<pre>\n$ docker run --name es -t -i -d -p 9200:9200 -p 9300:9300 centos6/es\n</pre>\n\n# kibana Dockerfile\n<pre>\n$ cd\n$ mkdir -p docker/kibana\n$ cd docker/kibana\n$ vim Dockerfile\n$ vim kibana.yml\n</pre>\n\n```sh:Dockerfile\nFROM centos:6.6\n\nRUN yum -y update\n\nRUN yum install -y wget tar\n\nENV KIBANA_PKG_NAME kibana-4.1.4-linux-x64\nRUN cd /\nRUN wget https://download.elastic.co/kibana/kibana/$KIBANA_PKG_NAME.tar.gz\nRUN tar xvzf $KIBANA_PKG_NAME.tar.gz\nRUN rm -f $KIBANA_PKG_NAME.tar.gz\nRUN mv /$KIBANA_PKG_NAME /kibana\nRUN cp /kibana/config/kibana.yml /kibana/config/kibana.yml.org\nADD kibana.yml /kibana/config/\n\nCMD [\"/kibana/bin/kibana\"]\n\nEXPOSE 5601\n```\n\n```kibana.yml\n# Kibana is served by a back end server. This controls which port to use.\nport: 5601\n\n# The host to bind the server to.\nhost: \"0.0.0.0\"\n\n# The Elasticsearch instance to use for all your queries.\nelasticsearch_url: \"http://es_alias:9200\"\n\n# preserve_elasticsearch_host true will send the hostname specified in `elasticsearch`. If you set it to false,\n# then the host you use to connect to *this* Kibana instance will be sent.\nelasticsearch_preserve_host: true\n\n# Kibana uses an index in Elasticsearch to store saved searches, visualizations\n# and dashboards. It will create a new index if it doesn't already exist.\nkibana_index: \".kibana\"\n\n# If your Elasticsearch is protected with basic auth, this is the user credentials\n# used by the Kibana server to perform maintence on the kibana_index at statup. Your Kibana\n# users will still need to authenticate with Elasticsearch (which is proxied thorugh\n# the Kibana server)\n# kibana_elasticsearch_username: user\n# kibana_elasticsearch_password: pass\n\n# If your Elasticsearch requires client certificate and key\n# kibana_elasticsearch_client_crt: /path/to/your/client.crt\n# kibana_elasticsearch_client_key: /path/to/your/client.key\n\n# If you need to provide a CA certificate for your Elasticsarech instance, put\n# the path of the pem file here.\n# ca: /path/to/your/CA.pem\n\n# The default application to load.\ndefault_app_id: \"discover\"\n\n# Time in milliseconds to wait for elasticsearch to respond to pings, defaults to\n# request_timeout setting\n# ping_timeout: 1500\n\n# Time in milliseconds to wait for responses from the back end or elasticsearch.\n# This must be > 0\nrequest_timeout: 300000\n\n# Time in milliseconds for Elasticsearch to wait for responses from shards.\n# Set to 0 to disable.\nshard_timeout: 0\n\n# Time in milliseconds to wait for Elasticsearch at Kibana startup before retrying\n# startup_timeout: 5000\n\n# Set to false to have a complete disregard for the validity of the SSL\n# certificate.\nverify_ssl: true\n\n# SSL for outgoing requests from the Kibana Server (PEM formatted)\n# ssl_key_file: /path/to/your/server.key\n# ssl_cert_file: /path/to/your/server.crt\n\n# Set the path to where you would like the process id file to be created.\n# pid_file: /var/run/kibana.pid\n\n# If you would like to send the log output to a file you can set the path below.\n# This will also turn off the STDOUT log output.\n# log_file: ./kibana.log\n\n# A value to use as a XSRF token. This token is sent back to the server on each request\n# and required if you want to execute requests from other clients (like curl).\n# xsrf_token: \"\"\n\n# Plugins that are included in the build, and no longer found in the plugins/ folder\nbundled_plugin_ids:\n - plugins/dashboard/index\n - plugins/discover/index\n - plugins/doc/index\n - plugins/kibana/index\n - plugins/markdown_vis/index\n - plugins/metric_vis/index\n - plugins/settings/index\n - plugins/table_vis/index\n - plugins/vis_types/index\n - plugins/visualize/index\n```\n\n# Docker\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210\n<pre>\n$ docker build --no-cache=true -t centos6/kibana .\n</pre>\n\n# Docker\u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n<pre>\n$ docker run --name kibana --link es:es_alias -t -i -d  -p 5601:5601 centos6/kibana\n</pre>\n\n# Docker\u30b3\u30f3\u30c6\u30ca\u78ba\u8a8d\n<pre>\n$ docker ps -a\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                            NAMES\n6a68ea6bccd6        centos6/kibana      \"/kibana/bin/kibana\"     5 seconds ago       Up 5 seconds        0.0.0.0:5601->5601/tcp                           kibana\n1663201be1f3        centos6/es          \"/elasticsearch/bin/e\"   1 minutes ago       Up 1 minutes        0.0.0.0:9200->9200/tcp, 0.0.0.0:9300->9300/tcp   es\n</pre>\n\n# \u30d6\u30e9\u30a6\u30b6\u3067\u958b\u304f\nhttp://192.168.99.100:5601\n", "tags": ["docker-machine", "docker", "Elasticsearch", "kibana"]}