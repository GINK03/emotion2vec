{"context": "\n\nUWP\u3067\u306eTwitter\u9023\u643a\u307e\u3067\u306e\u6d41\u308c\n\nTwitter\u306e\u958b\u767a\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u767b\u9332\nApiKey\u3084AccessToken\u306e\u53d6\u5f97\nUWP\u30a2\u30d7\u30ea\u4e0a\u3067\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u51e6\u7406\u306e\u5b9f\u88c5\nTwitter\u306e\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u308a\u3064\u3076\u3084\u304d\u3092\u6295\u7a3f\u3057\u305f\u308a\n\n\u3053\u3053\u3067\u306f 3\u756a\u76ee \u306e\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u51e6\u7406\u3092\u624b\u8efd\u306b\u6271\u3046\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u6e96\u5099\u3059\u308b\u3082\u306e\n\nVisualStudio\u306b UWPCommunityToolkit.Services \u3092 nuget \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nTwitter\u306e\u958b\u767a\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u9805\u76ee\u3092\u63a7\u3048\u3066\u304a\u304d\u307e\u3059\n\n\nConsumerKey\nConsumerKeySecret\nCallbackURL(\u30c0\u30df\u30fc\u3067\u3044\u3044\u306e\u3067\u5fc5\u305a\u8a2d\u5b9a\u3057\u307e\u3059\u3002http\u306e\u30b9\u30ad\u30fc\u30de\u6e96\u62e0\u3057\u3066\u3044\u308c\u3070\u4e00\u5fdc\u8a2d\u5b9a\u53ef\u80fd)\nAccessToken\nAccessTokenSecret\n\n\n\nAccessToken\u3068AccessTokenSecret\u306f\u958b\u767a\u8005\u753b\u9762\u304b\u3089\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u624b\u52d5\u3067\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff09\n\nUWP\u30a2\u30d7\u30ea\u3067\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u51e6\u7406\u3092\u5b9f\u88c5\nUWPCommunityToolkit.Services \u306e TwitterService \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u5b9f\u88c5\u306e\u624b\u9593\u3092\u5927\u5e45\u306b\u8efd\u6e1b\u3067\u304d\u307e\u3059\u3002\n\nTwitterHelper\nusing System;\nusing System.Runtime.Serialization;\nusing System.Threading.Tasks;\nusing Microsoft.Toolkit.Uwp.Services.Twitter;\nusing Windows.Storage;\n\nnamespace NicoPlayerHohoema.Util\n{\n    public class TwitterHelper\n    {\n        public static Uri TwitterKeyAssetUri = new Uri(\"ms-appx:///Assets/OAuth/twitter.json\");\n\n\n\n        public static bool IsAvailableTwitterService = false;\n\n        public static TwitterUser TwitterUser { get; private set; }\n\n        public static bool IsLoggedIn => TwitterUser != null;\n\n\n\n        public static async Task Initialize()\n        {\n            var key = await GetTwitterOAuthTokens();\n\n            IsAvailableTwitterService = TwitterService.Instance.Initialize(key);\n        }\n\n\n\n        public static async Task<TwitterOAuthTokens> GetTwitterOAuthTokens()\n        {\n            var file = await StorageFile.GetFileFromApplicationUriAsync(TwitterKeyAssetUri);\n            var jsonText = await FileIO.ReadTextAsync(file);\n            var data = Newtonsoft.Json.JsonConvert.DeserializeObject<TwitterAuthData>(jsonText);\n\n\n            return new TwitterOAuthTokens()\n            {\n                ConsumerKey = data.ConsumerKey,\n                ConsumerSecret = data.ConsumerSecret,\n                AccessToken = data.AccessToken,\n                AccessTokenSecret = data.AccessTokenSecret,\n                CallbackUri = data.CallbackUrl\n            };\n        }\n\n\n\n        public static async Task<bool> LoginOrRefreshToken()\n        {\n            if (!IsAvailableTwitterService) { return false; }\n\n            var result = false;\n            if (result = await TwitterService.Instance.LoginAsync())\n            {\n                var user = await TwitterService.Instance.GetUserAsync();\n\n                TwitterUser = user;\n            }\n\n            return result;\n        }\n\n\n\n        public static void Logout()\n        {\n            if (!IsAvailableTwitterService) { return; }\n\n            TwitterUser = null;\n            TwitterService.Instance.Logout();\n        }\n\n\n\n        public static Task<bool> SubmitTweet(string message/*, StorageFile[] imageFiles = null*/)\n        {\n            if (!IsAvailableTwitterService) { return Task.FromResult(false); }\n\n            return TwitterService.Instance.TweetStatusAsync(message);\n        }\n    }\n\n    [DataContract]\n    public struct TwitterAuthData\n    {\n        [DataMember(Name = \"consumer_key\")]\n        public string ConsumerKey { get; set; }\n\n        [DataMember(Name = \"consumer_secret\")]\n        public string ConsumerSecret { get; set; }\n\n        [DataMember(Name = \"access_token\")]\n        public string AccessToken { get; set; }\n\n        [DataMember(Name = \"access_token_secret\")]\n        public string AccessTokenSecret { get; set; }\n\n        [DataMember(Name = \"callback_url\")]\n        public string CallbackUrl { get; set; }\n    }\n}\n\n\n\ntwitter.json\n{\n   \"consumer_key\": \"\",\n  \"consumer_secret\": \"\",\n  \"access_token\": \"\",\n  \"access_token_secret\": \"\",\n  \"callback_url\" : \"\"\n}\n\n\n\nTwitterHelper\u30af\u30e9\u30b9\u306e\u88dc\u8db3\n\nInitialize(TwitterService.Instance.Initialize)\u306e\u547c\u3073\u51fa\u3057\u304c\u5fc5\u9808\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b /Assets/OAuth/twitter.json \u3092\u914d\u7f6e\n\n\n \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30d3\u30eb\u30c9\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u300c\u30b3\u30f3\u30c6\u30f3\u30c4\u300d\u306b\u8a2d\u5b9a\n \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30aa\u30fc\u30d7\u30f3\u306a\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u516c\u958b\u3057\u3066\u3044\u308b\u5834\u5408\u306f git\u306a\u3069\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7ba1\u7406\u304b\u3089\u9664\u5916\u3055\u308c\u308b\u3088\u3046\u8a2d\u5b9a\u3059\u308b\n\n\n LoginOrRefreshToken \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\n\n\n \u30ed\u30b0\u30a2\u30a6\u30c8\u3055\u308c\u305f\u72b6\u614b\u3067\u306f\u9023\u643a\u8a8d\u8a3c\u306e\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u304c\u8868\u793a\u3055\u308c\u308b\n \u4e00\u5ea6\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u4ee5\u964d\u3067\u306f\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u8868\u793a\u306a\u3057\u3067\u8a8d\u8a3c\u60c5\u5831\u304c\u66f4\u65b0\u3055\u308c\u308b\uff08\u30a2\u30d7\u30ea\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u7d42\u4e86\u3057\u3066\u3082\u3001\u6b21\u56de\u8d77\u52d5\u6642\u306b\u9023\u643a\u8a8d\u8a3c\u306e\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\uff09\n\n\n\n\u6295\u7a3f\u306e\u30e1\u30bd\u30c3\u30c9\u3057\u304b\u6271\u3063\u3066\u307e\u305b\u3093\u304c\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u53d6\u5f97\u3084\u691c\u7d22\u3082TwitterService\u304b\u3089\u51fa\u6765\u308b\u306e\u3067\u9069\u5b9c\u62e1\u5f35\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u4ed6\u306b\u3082UWPCommunityToolkit\u306f\u4fbf\u5229\u306a\u6a5f\u80fd\u304c\u305f\u304f\u3055\u3093\u3042\u3063\u3066\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\nhttps://github.com/Microsoft/UWPCommunityToolkit\n\n\u53c2\u8003\n\nWeb \u30a2\u30ab\u30a6\u30f3\u30c8 \u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306b\u3088\u308b ID \u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3078\u306e\u63a5\u7d9a\nWeb \u8a8d\u8a3c\u30d6\u30ed\u30fc\u30ab\u30fc\nTwitter\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u307e\u3067\u306e\u9053\u306e\u308a\uff08OAuth\u306a\u3093\u3066\u5acc\u3044\u3060\uff01\uff09\nTwitterSerivce sample code - UWPCommunityToolkit\n\n## UWP\u3067\u306eTwitter\u9023\u643a\u307e\u3067\u306e\u6d41\u308c\n\n1. Twitter\u306e\u958b\u767a\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u767b\u9332\n2. ApiKey\u3084AccessToken\u306e\u53d6\u5f97\n3. UWP\u30a2\u30d7\u30ea\u4e0a\u3067\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u51e6\u7406\u306e\u5b9f\u88c5\n4. Twitter\u306e\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u308a\u3064\u3076\u3084\u304d\u3092\u6295\u7a3f\u3057\u305f\u308a\n\n\u3053\u3053\u3067\u306f 3\u756a\u76ee \u306e\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u51e6\u7406\u3092\u624b\u8efd\u306b\u6271\u3046\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n## \u6e96\u5099\u3059\u308b\u3082\u306e\n\n* VisualStudio\u306b **UWPCommunityToolkit.Services** \u3092 nuget \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n* Twitter\u306e\u958b\u767a\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u9805\u76ee\u3092\u63a7\u3048\u3066\u304a\u304d\u307e\u3059\n * ConsumerKey\n * ConsumerKeySecret\n * CallbackURL(\u30c0\u30df\u30fc\u3067\u3044\u3044\u306e\u3067\u5fc5\u305a\u8a2d\u5b9a\u3057\u307e\u3059\u3002http\u306e\u30b9\u30ad\u30fc\u30de\u6e96\u62e0\u3057\u3066\u3044\u308c\u3070\u4e00\u5fdc\u8a2d\u5b9a\u53ef\u80fd)\n * AccessToken\n * AccessTokenSecret\n\nAccessToken\u3068AccessTokenSecret\u306f\u958b\u767a\u8005\u753b\u9762\u304b\u3089\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u624b\u52d5\u3067\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff09\n\n\n## UWP\u30a2\u30d7\u30ea\u3067\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u51e6\u7406\u3092\u5b9f\u88c5\n\nUWPCommunityToolkit.Services \u306e **TwitterService** \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u5b9f\u88c5\u306e\u624b\u9593\u3092\u5927\u5e45\u306b\u8efd\u6e1b\u3067\u304d\u307e\u3059\u3002\n\n```csharp:TwitterHelper\nusing System;\nusing System.Runtime.Serialization;\nusing System.Threading.Tasks;\nusing Microsoft.Toolkit.Uwp.Services.Twitter;\nusing Windows.Storage;\n\nnamespace NicoPlayerHohoema.Util\n{\n\tpublic class TwitterHelper\n\t{\n\t\tpublic static Uri TwitterKeyAssetUri = new Uri(\"ms-appx:///Assets/OAuth/twitter.json\");\n\n\n\n\t\tpublic static bool IsAvailableTwitterService = false;\n\n\t\tpublic static TwitterUser TwitterUser { get; private set; }\n\n\t\tpublic static bool IsLoggedIn => TwitterUser != null;\n\n\n\n\t\tpublic static async Task Initialize()\n\t\t{\n\t\t\tvar key = await GetTwitterOAuthTokens();\n\n\t\t\tIsAvailableTwitterService = TwitterService.Instance.Initialize(key);\n\t\t}\n\n\n\n\t\tpublic static async Task<TwitterOAuthTokens> GetTwitterOAuthTokens()\n\t\t{\n\t\t\tvar file = await StorageFile.GetFileFromApplicationUriAsync(TwitterKeyAssetUri);\n\t\t\tvar jsonText = await FileIO.ReadTextAsync(file);\n\t\t\tvar data = Newtonsoft.Json.JsonConvert.DeserializeObject<TwitterAuthData>(jsonText);\n\n\n\t\t\treturn new TwitterOAuthTokens()\n\t\t\t{\n\t\t\t\tConsumerKey = data.ConsumerKey,\n\t\t\t\tConsumerSecret = data.ConsumerSecret,\n\t\t\t\tAccessToken = data.AccessToken,\n\t\t\t\tAccessTokenSecret = data.AccessTokenSecret,\n\t\t\t\tCallbackUri = data.CallbackUrl\n\t\t\t};\n\t\t}\n\n\n\n\t\tpublic static async Task<bool> LoginOrRefreshToken()\n\t\t{\n\t\t\tif (!IsAvailableTwitterService) { return false; }\n\n\t\t\tvar result = false;\n\t\t\tif (result = await TwitterService.Instance.LoginAsync())\n\t\t\t{\n\t\t\t\tvar user = await TwitterService.Instance.GetUserAsync();\n\n\t\t\t\tTwitterUser = user;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\n\n\t\tpublic static void Logout()\n\t\t{\n\t\t\tif (!IsAvailableTwitterService) { return; }\n\n\t\t\tTwitterUser = null;\n\t\t\tTwitterService.Instance.Logout();\n\t\t}\n\n\n\n\t\tpublic static Task<bool> SubmitTweet(string message/*, StorageFile[] imageFiles = null*/)\n\t\t{\n\t\t\tif (!IsAvailableTwitterService) { return Task.FromResult(false); }\n\n\t\t\treturn TwitterService.Instance.TweetStatusAsync(message);\n\t\t}\n\t}\n\n\t[DataContract]\n\tpublic struct TwitterAuthData\n\t{\n\t\t[DataMember(Name = \"consumer_key\")]\n\t\tpublic string ConsumerKey { get; set; }\n\n\t\t[DataMember(Name = \"consumer_secret\")]\n\t\tpublic string ConsumerSecret { get; set; }\n\n\t\t[DataMember(Name = \"access_token\")]\n\t\tpublic string AccessToken { get; set; }\n\n\t\t[DataMember(Name = \"access_token_secret\")]\n\t\tpublic string AccessTokenSecret { get; set; }\n\n\t\t[DataMember(Name = \"callback_url\")]\n\t\tpublic string CallbackUrl { get; set; }\n\t}\n}\n```\n\n\n\n```json:twitter.json\n{\n   \"consumer_key\": \"\",\n  \"consumer_secret\": \"\",\n  \"access_token\": \"\",\n  \"access_token_secret\": \"\",\n  \"callback_url\" : \"\"\n}\n```\n\n## TwitterHelper\u30af\u30e9\u30b9\u306e\u88dc\u8db3\n\n* Initialize(TwitterService.Instance.Initialize)\u306e\u547c\u3073\u51fa\u3057\u304c\u5fc5\u9808\n* \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b /Assets/OAuth/twitter.json \u3092\u914d\u7f6e\n *  \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30d3\u30eb\u30c9\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u300c\u30b3\u30f3\u30c6\u30f3\u30c4\u300d\u306b\u8a2d\u5b9a\n *  \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30aa\u30fc\u30d7\u30f3\u306a\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u516c\u958b\u3057\u3066\u3044\u308b\u5834\u5408\u306f git\u306a\u3069\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u7ba1\u7406\u304b\u3089\u9664\u5916\u3055\u308c\u308b\u3088\u3046\u8a2d\u5b9a\u3059\u308b\n*  LoginOrRefreshToken \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3068\n *  \u30ed\u30b0\u30a2\u30a6\u30c8\u3055\u308c\u305f\u72b6\u614b\u3067\u306f\u9023\u643a\u8a8d\u8a3c\u306e\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u304c\u8868\u793a\u3055\u308c\u308b\n *  \u4e00\u5ea6\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u4ee5\u964d\u3067\u306f\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u8868\u793a\u306a\u3057\u3067\u8a8d\u8a3c\u60c5\u5831\u304c\u66f4\u65b0\u3055\u308c\u308b\uff08\u30a2\u30d7\u30ea\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u7d42\u4e86\u3057\u3066\u3082\u3001\u6b21\u56de\u8d77\u52d5\u6642\u306b\u9023\u643a\u8a8d\u8a3c\u306e\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\uff09\n\n\u6295\u7a3f\u306e\u30e1\u30bd\u30c3\u30c9\u3057\u304b\u6271\u3063\u3066\u307e\u305b\u3093\u304c\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u53d6\u5f97\u3084\u691c\u7d22\u3082TwitterService\u304b\u3089\u51fa\u6765\u308b\u306e\u3067\u9069\u5b9c\u62e1\u5f35\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u306e\u4ed6\u306b\u3082UWPCommunityToolkit\u306f\u4fbf\u5229\u306a\u6a5f\u80fd\u304c\u305f\u304f\u3055\u3093\u3042\u3063\u3066\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\nhttps://github.com/Microsoft/UWPCommunityToolkit\n\n## \u53c2\u8003\n\n* [Web \u30a2\u30ab\u30a6\u30f3\u30c8 \u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306b\u3088\u308b ID \u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3078\u306e\u63a5\u7d9a](https://msdn.microsoft.com/ja-jp/windows/uwp/security/web-account-manager?f=255&MSPPError=-2147217396)\n* [Web \u8a8d\u8a3c\u30d6\u30ed\u30fc\u30ab\u30fc](https://msdn.microsoft.com/ja-jp/windows/uwp/security/web-authentication-broker)\n* [Twitter\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u307e\u3067\u306e\u9053\u306e\u308a\uff08OAuth\u306a\u3093\u3066\u5acc\u3044\u3060\uff01\uff09](http://blog.okazuki.jp/entry/2014/04/13/141108)\n* [TwitterSerivce sample code - UWPCommunityToolkit](https://github.com/Microsoft/UWPCommunityToolkit/tree/f97399b9f7da8916b62d81a027f2ef49b4e94baf/Microsoft.Toolkit.Uwp.SampleApp/SamplePages/Twitter%20Service)\n", "tags": ["UWP", "C#"]}