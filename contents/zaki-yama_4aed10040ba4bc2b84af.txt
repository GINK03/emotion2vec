{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nGoogle App Engine/Python \u3067\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u3089\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u3066\u304f\u308c\u308b\n@login_required \u3068\u3044\u3046\u30c7\u30b3\u30ec\u30fc\u30bf\u3002\nhttps://cloud.google.com/appengine/docs/python/tools/webapp/utilmodule#login_required\n\nappengine/ext/webapp/util.py\ndef login_required(handler_method):\n  \"\"\"A decorator to require that a user be logged in to access a handler.\n\n  To use it, decorate your get() method like this:\n\n    @login_required\n    def get(self):\n      user = users.get_current_user(self)\n      self.response.out.write('Hello, ' + user.nickname())\n\n  We will redirect to a login page if the user is not logged in. We always\n  redirect to the request URI, and Google Accounts only redirects back as a GET\n  request, so this should not be used for POSTs.\n  \"\"\"\n  def check_login(self, *args):\n    if self.request.method != 'GET':\n      raise webapp.Error('The check_login decorator can only be used for GET '\n                         'requests')\n    user = users.get_current_user()\n    if not user:\n      self.redirect(users.create_login_url(self.request.uri))\n      return\n    else:\n      handler_method(self, *args)\n  return check_login\n\n\n\uff08\u30b3\u30fc\u30c9\u306f SDK \u3088\u308a\u5f15\u7528\uff09\n\u975e\u5e38\u306b\u4fbf\u5229\u306a\u3093\u3067\u3059\u304c\u3001\u3053\u308c\u306f webapp \u306b\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u305f\u3081\nDjango \u7528\u306b\u66f8\u304d\u76f4\u3057\u3066\u307f\u305f\u3002\nClass-based View\uff08\u30af\u30e9\u30b9\u30d9\u30fc\u30b9\u6c4e\u7528\u30d3\u30e5\u30fc\uff09\u7528\u3067\u3059\u3002\n\n\u30b3\u30fc\u30c9\n\nutil.py\n# -*- coding: utf-8 -*-\nfrom django.http import HttpResponsePermanentRedirect\nfrom google.appengine.api import users\n\n\ndef login_required(handler_method):\n    u\"\"\"Django \u306e Class-based View \u7528\u30c7\u30b3\u30ec\u30fc\u30bf\n\n    Example:\n        class MyView(View):\n\n            @login_required\n            def get(self, request):\n                user = users.get_current_user()\n                ...\n    \"\"\"\n    def check_login(self, request, *args):\n        user = users.get_current_user()\n\n        if not user:\n            login_url = users.create_login_url(request.get_full_path())\n            return HttpResponsePermanentRedirect(login_url)\n        else:\n            return handler_method(self, request, *args)\n\n    return check_login\n\n\n# \u306f\u3058\u3081\u306b\n\nGoogle App Engine/Python \u3067\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u3089\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3057\u3066\u304f\u308c\u308b\n`@login_required` \u3068\u3044\u3046\u30c7\u30b3\u30ec\u30fc\u30bf\u3002\n\nhttps://cloud.google.com/appengine/docs/python/tools/webapp/utilmodule#login_required\n\n```python:appengine/ext/webapp/util.py\ndef login_required(handler_method):\n  \"\"\"A decorator to require that a user be logged in to access a handler.\n\n  To use it, decorate your get() method like this:\n\n\t@login_required\n\tdef get(self):\n\t  user = users.get_current_user(self)\n\t  self.response.out.write('Hello, ' + user.nickname())\n\n  We will redirect to a login page if the user is not logged in. We always\n  redirect to the request URI, and Google Accounts only redirects back as a GET\n  request, so this should not be used for POSTs.\n  \"\"\"\n  def check_login(self, *args):\n\tif self.request.method != 'GET':\n\t  raise webapp.Error('The check_login decorator can only be used for GET '\n\t\t\t\t\t\t 'requests')\n\tuser = users.get_current_user()\n\tif not user:\n\t  self.redirect(users.create_login_url(self.request.uri))\n\t  return\n\telse:\n\t  handler_method(self, *args)\n  return check_login\n```\n\n\uff08\u30b3\u30fc\u30c9\u306f SDK \u3088\u308a\u5f15\u7528\uff09\n\n\u975e\u5e38\u306b\u4fbf\u5229\u306a\u3093\u3067\u3059\u304c\u3001\u3053\u308c\u306f webapp \u306b\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u305f\u3081\nDjango \u7528\u306b\u66f8\u304d\u76f4\u3057\u3066\u307f\u305f\u3002\nClass-based View\uff08\u30af\u30e9\u30b9\u30d9\u30fc\u30b9\u6c4e\u7528\u30d3\u30e5\u30fc\uff09\u7528\u3067\u3059\u3002\n\n\n\n# \u30b3\u30fc\u30c9\n\n```python:util.py\n# -*- coding: utf-8 -*-\nfrom django.http import HttpResponsePermanentRedirect\nfrom google.appengine.api import users\n\n\ndef login_required(handler_method):\n\tu\"\"\"Django \u306e Class-based View \u7528\u30c7\u30b3\u30ec\u30fc\u30bf\n\n\tExample:\n\t\tclass MyView(View):\n\n\t\t\t@login_required\n\t\t\tdef get(self, request):\n\t\t\t\tuser = users.get_current_user()\n\t\t\t\t...\n\t\"\"\"\n\tdef check_login(self, request, *args):\n\t\tuser = users.get_current_user()\n\n\t\tif not user:\n\t\t\tlogin_url = users.create_login_url(request.get_full_path())\n\t\t\treturn HttpResponsePermanentRedirect(login_url)\n\t\telse:\n\t\t\treturn handler_method(self, request, *args)\n\n\treturn check_login\n```\n", "tags": ["GoogleAppEngine", "Python", "Django"]}