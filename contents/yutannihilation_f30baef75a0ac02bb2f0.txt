{"context": "\u3053\u306e\u8a18\u4e8b\u306f\u3001R\u306eggplot2\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u300cExtending ggplot2\u300d\u3068\u3044\u3046Vignette\u3092\u8a33\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u539f\u6587\u306fGPL-2\u30e9\u30a4\u30bb\u30f3\u30b9\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308bggplot2\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u542b\u307e\u308c\u3001\u8457\u4f5c\u6a29\u306fHadley Wickham\u306b\u5e30\u5c5e\u3057\u307e\u3059\u3002\u3053\u306e\u7ffb\u8a33\u6587\u306b\u3082GPL-2\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u9069\u7528\u3055\u308c\u307e\u3059\u3002\nNote that the original document is provided under the license of GPL-2 and the copyright belongs to Hadley Wickham, one of the authors of ggplot2.\n\n\u3053\u306evignette\u306b\u306f\u3001ggplot2 2.0.0\u3067\u516c\u5f0f\u306b\u63d0\u4f9b\u3055\u308c\u308b\u62e1\u5f35\u30e1\u30ab\u30cb\u30ba\u30e0\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002 \u3053\u306evignette\u306f\u3001?Stat\u3084?Geom\u3084?theme\u3067\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u4f4e\u30ec\u30d9\u30eb\u306a\u8a73\u7d30\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002 \u65b0\u3057\u3044stat\u3001geom\u3001theme\u3092\u3064\u304f\u3063\u3066ggplot2\u3092\u62e1\u5f35\u3059\u308b\u65b9\u6cd5\u3092\u8eab\u306b\u7740\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\n\u3053\u308c\u3092\u8aad\u307f\u9032\u3081\u308b\u306b\u3064\u308c\u3066\u3042\u306a\u305f\u306f\u3001\u982d\u3092\u63bb\u304d\u3080\u3057\u308a\u3001\u3044\u3063\u305f\u3044\u306a\u305c\u3053\u3093\u306a\u3075\u3046\u306b\u3064\u304f\u3063\u305f\u3093\u3060\uff1f\u3068\u9996\u3092\u304b\u3057\u3052\u308b\u3082\u306e\u3092\u305f\u304f\u3055\u3093\u76ee\u306b\u3059\u308b\u3067\u3057\u3087\u3046\u3002 \u305d\u308c\u3089\u306e\u591a\u304f\u306f\u3001\u6b74\u53f2\u7684\u7d4c\u7def\u3067\u3059\u3002ggplot2\u306e\u958b\u767a\u3092\u59cb\u3081\u305f\u3053\u308d\u79c1\u306f\u3042\u307e\u308a\u3088\u3044R\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002 \u79c1\u305f\u3061\u306f2.0.0\u306e\u30ea\u30ea\u30fc\u30b9\u3067\u53ef\u80fd\u306a\u9650\u308a\u591a\u304f\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3057\u307e\u3057\u305f\u304c\u3001\u82e6\u52b4\u3082\u3080\u306a\u3057\u304f\u3046\u307e\u304f\u4fee\u6b63\u3067\u304d\u306a\u3044\u3082\u306e\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n\nggproto\n\u3059\u3079\u3066\u306eggplot2\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001ggproto\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u3063\u3066\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30b7\u30b9\u30c6\u30e0\u306f\u305f\u3063\u305f\u3072\u3068\u3064\u306e\u5834\u6240\u3067\u3057\u304b\u4f7f\u308f\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u305d\u308c\u306f\u3001ggplot2\u3067\u3059\u3002 \u3053\u308c\u306f\u307b\u3068\u3093\u3069\u304c\u6b74\u53f2\u7684\u7d4c\u7def\u3067\u3059\u3002ggplot2\u306fmutable\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u305f\u3081\u306bproto\u3092\u4f7f\u3063\u3066\u59cb\u307e\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306f\uff08\u77ed\u547d\u3060\u3063\u305f\uff09mutatr\u3084\u53c2\u7167\u30af\u30e9\u30b9\u3084R6\u3088\u308a\u305a\u3063\u3068\u6614\u306e\u8a71\u3067\u3059\u3002proto\u3060\u3051\u304c\u552f\u4e00\u306e\u9078\u629e\u80a2\u3060\u3063\u305f\u306e\u3067\u3059\u3002\n\u3067\u3082\u305d\u308c\u3067\u306f\u3001\u306a\u305cggproto\u306a\u306e\u3067\u3057\u3087\u3046\u3002 ggplot2\u306e\u516c\u5f0f\u306e\u62e1\u5f35\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u8ffd\u52a0\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u304d\u3001\u79c1\u305f\u3061\u306f\u5927\u304d\u306a\u554f\u984c\u306b\u6c17\u4ed8\u304d\u307e\u3057\u305f\u3002proto\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u5225\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u62e1\u5f35\u3055\u308c\u3066\u3044\u308b\u3068\u554f\u984c\u304c\u8d77\u3053\u308b\u306e\u3067\u3059\uff08\u30e1\u30bd\u30c3\u30c9\u306f\u305d\u306e\u62e1\u5f35\u304c\u8ffd\u52a0\u3055\u308c\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u306f\u306a\u304fggplot2\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u8a55\u4fa1\u3055\u308c\u307e\u3059\uff09\u3002R6\u306b\u5207\u308a\u66ff\u3048\u3088\u3046\u3068\u8a66\u307f\u307e\u3057\u305f\u304c\u3001ggplot2\u306e\u8981\u6c42\u3068\u5408\u81f4\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002 proto\u3092\u6539\u9020\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u305d\u3046\u3059\u308b\u3068\u3001\u307e\u305aproto\u304c\u3069\u306e\u3088\u3046\u306b\u6a5f\u80fd\u3059\u308b\u304b\u3092\u6b63\u78ba\u306b\u7406\u89e3\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u3001\u3055\u3089\u306b\u305d\u306e\u5909\u66f4\u304cproto\u306e\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u304a\u304b\u3057\u306a\u8a71\u3067\u3059\u304c\u3001\u3053\u308c\u306f\u3001\u65b0\u3057\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3092\u767a\u660e\u3059\u308b\u3068\u3044\u3046\u306e\u304c\u554f\u984c\u306b\u5bfe\u3059\u308b\u6b63\u3057\u3044\u7b54\u3048\u3060\u3063\u305f\u30b1\u30fc\u30b9\u3067\u3059\uff01 \u5e78\u904b\u306b\u3082Winston\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30b7\u30b9\u30c6\u30e0\u3092\u3064\u304f\u308b\u306e\u306b\u3068\u3066\u3082\u9577\u3051\u3066\u3044\u3066\u3001\u305f\u3063\u305f1\u65e5\u3067ggproto\u3092\u601d\u3044\u3064\u304d\u307e\u3057\u305f\u3002ggproto\u306fggplot2\u304c\u5fc5\u8981\u3068\u3059\u308bproto\u306e\u6a5f\u80fd\u3092\u3059\u3079\u3066\u4fdd\u6301\u3057\u3001\u4e00\u65b9\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u9593\u306b\u307e\u305f\u304c\u308b\u7d99\u627f\u3082\u3046\u307e\u304f\u6a5f\u80fd\u3055\u305b\u307e\u3059\u3002\n\u4ee5\u4e0b\u306fggproto\u306e\u7c21\u5358\u306a\u4f7f\u7528\u4f8b\u3067\u3059\u3002\nA <- ggproto(\"A\", NULL,\n  x = 1,\n  inc = function(self) {\n    self$x <- self$x + 1\n  }\n)\nA$x\n\n#> [1] 1\n\nA$inc()\nA$x\n\n#> [1] 2\n\nA$inc()\nA$inc()\nA$x\n\n#> [1] 4\n\nggplot2\u306e\u30af\u30e9\u30b9\u306e\u591a\u304f\u306f\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u3067\u9759\u7684\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30af\u30e9\u30b9\u306e\u4e2d\u3067\u72b6\u614b\u3092\u4f7f\u3046\u3053\u3068\u3082\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u3082\u3057\u307e\u305b\u3093\u3002\u3053\u308c\u3089\u306e\u30af\u30e9\u30b9\u306f\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u3001\u95a2\u9023\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u307e\u3068\u3081\u308b\u306e\u306b\u4fbf\u5229\u306a\u65b9\u6cd5\u3068\u3057\u3066\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u65b0\u3057\u3044geom\u3084stat\u3092\u3064\u304f\u308b\u306b\u306f\u3001\u3053\u308c\u304b\u3089\u8aac\u660e\u3059\u308b\u3088\u3046\u306bStat\u3084Geom\u3092\u7d99\u627f\u3057\u3066\u65b0\u3057\u3044ggproto\u3092\u3064\u304f\u3063\u3066\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u65b0\u3057\u3044stat\u3092\u3064\u304f\u308b\n\n\u3082\u3063\u3068\u3082\u5358\u7d14\u306astat\n\u3068\u3066\u3082\u5358\u7d14\u306astat\u3092\u3064\u304f\u308b\u3053\u3068\u304b\u3089\u59cb\u3081\u307e\u3059\u3002\u70b9\u306e\u96c6\u5408\u306e\u51f8\u5305\u3092\u5f97\u308bstat\u3067\u3059\u3002\u307e\u305a\u3001Stat\u3092\u7d99\u627f\u3059\u308bggproto\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u3064\u304f\u308a\u307e\u3059\u3002\nStatChull <- ggproto(\"StatChull\", Stat,\n  compute_group = function(data, scales) {\n    data[chull(data$x, data$y), , drop = FALSE]\n  },\n\n  required_aes = c(\"x\", \"y\")\n)\n\n\u3082\u3063\u3068\u3082\u91cd\u8981\u306a\u90e8\u5206\u306f\u3001compute_group()\u30e1\u30bd\u30c3\u30c9\uff08\u8a08\u7b97\u3092\u5b9f\u884c\u3057\u307e\u3059\uff09\u3068required_aes\u30d5\u30a3\u30fc\u30eb\u30c9\uff08\u3053\u306estat\u304c\u52d5\u304f\u306e\u306b\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044aesthetics\u3092\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\uff09\u3067\u3059\u3002\n\u6b21\u306b\u3001layer\u95a2\u6570\u3092\u66f8\u304d\u307e\u3059\u3002\u4e0d\u5e78\u306b\u3082\u3001\u65e9\u671f\u306e\u8a2d\u8a08\u30df\u30b9\u306b\u3088\u308a\u79c1\u306f\u3053\u308c\u3089\u3092stat_()\u3084geom_()\u3068\u540d\u4ed8\u3051\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002layer_()\u95a2\u6570\u3068\u3059\u308b\u3079\u304d\u3067\u3057\u305f\u3002\u3053\u308c\u306f\u3088\u308a\u5b9f\u4f53\u306b\u5373\u3057\u305f\u8868\u8a18\u3067\u3059\u3002\u306a\u305c\u306a\u3089\u3001\u3059\u3079\u3066\u306e\u30ec\u30a4\u30e4\u30fc\u304cstat\u306b\u3082geom\u306b\u3082\u95a2\u308f\u3063\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\n\u3059\u3079\u3066\u306elayer\u95a2\u6570\u306f\u540c\u3058\u5f62\u5f0f\u306b\u5f93\u3044\u307e\u3059\u3002\u95a2\u6570\u306e\u5f15\u6570\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u3001layer()\u3092\u547c\u3073\u3001...\u3092\u305d\u306eparam\u5f15\u6570\u306b\u6e21\u3057\u307e\u3059\u3002 ...\u306b\u542b\u307e\u308c\u308b\u5f15\u6570\u306f\u3001geom\u306e\u5f15\u6570\uff08stat\u306e\u30e9\u30c3\u30d1\u30fc\u306e\u5834\u5408\uff09\u304bstat\u306e\u5f15\u6570\uff08geom\u306e\u30e9\u30c3\u30d1\u30fc\u306e\u5834\u5408\uff09\u304b\u30bb\u30c3\u30c8\u3059\u308baesthetics\u306e\u3044\u305a\u308c\u304b\u3067\u3059\u3002layer()\u304c\u3001\u7570\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5206\u96e2\u3057\u3066\u6b63\u3057\u3044\u5834\u6240\u306b\u683c\u7d0d\u3059\u308b\u3053\u3068\u306e\u9762\u5012\u3092\u898b\u3066\u304f\u308c\u307e\u3059\u3002\nstat_chull <- function(mapping = NULL, data = NULL, geom = \"polygon\",\n                       position = \"identity\", na.rm = FALSE, show.legend = NA, \n                       inherit.aes = TRUE, ...) {\n  layer(\n    stat = StatChull, data = data, mapping = mapping, geom = geom, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(na.rm = na.rm, ...)\n  )\n}\n\n\uff08\u6ce8\uff1a\u3082\u3057\u81ea\u5206\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e2d\u3067\u3053\u308c\u3092\u66f8\u304f\u306a\u3089\u3001ggplot2::layer()\u3068\u660e\u793a\u7684\u306b\u547c\u3076\u304b\u3001layer()\u95a2\u6570\u3092\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u540d\u524d\u7a7a\u9593\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u304b\u3001\u3044\u305a\u308c\u304b\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff09\n\u3044\u3063\u305f\u3093layer\u95a2\u6570\u3092\u624b\u306b\u3059\u308c\u3070\u3001\u65b0\u3057\u3044stat\u3092\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  stat_chull(fill = NA, colour = \"black\")\n\n\n\uff08fill=NA\u3068\u6bce\u56de\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u3044\u3044\u3088\u3046\u306bgeom\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3092\u5909\u66f4\u3059\u308b\u65b9\u6cd5\u306f\u5f8c\u307b\u3069\u51fa\u3066\u304d\u307e\u3059\uff09\n\u3072\u3068\u305f\u3073\u3053\u306e\u57fa\u672c\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u66f8\u304d\u4e0a\u3052\u308b\u3068\u3001ggplot2\u304c\u63d0\u4f9b\u3059\u308b\u305f\u304f\u3055\u3093\u306e\u6a5f\u80fd\u3092\u81ea\u7531\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001ggplot2\u306f\u305d\u308c\u305e\u308c\u306e\u30b0\u30eb\u30fc\u30d7\u3067\u56fa\u5b9a\u306eaesthetics\u3092\u81ea\u52d5\u3067\u4fdd\u5b58\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nggplot(mpg, aes(displ, hwy, colour = drv)) + \n  geom_point() + \n  stat_chull(fill = NA)\n\n\n\u51f8\u5305\u3092\u5225\u306e\u65b9\u6cd5\u3067\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u306egeom\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\nggplot(mpg, aes(displ, hwy)) + \n  stat_chull(geom = \"point\", size = 4, colour = \"red\") +\n  geom_point()\n\n\n\nStat\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\n\u3055\u3089\u306b\u8907\u96d1\u306astat\u306f\u3044\u304f\u3064\u304b\u306e\u8a08\u7b97\u3092\u884c\u3044\u307e\u3059\u3002\u30d7\u30ed\u30c3\u30c8\u306b\u3082\u3063\u3068\u3082\u30d5\u30a3\u30c3\u30c8\u3059\u308b\u7dda\u3092\u8ffd\u52a0\u3059\u308b\u3001\u7c21\u5358\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u306egeom_smooth()\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002Stat\u3092\u7d99\u627f\u3057\u305fStatLm\u3068layer\u95a2\u6570stat_lm()\u3092\u3064\u304f\u308a\u307e\u3059\u3002\nStatLm <- ggproto(\"StatLm\", Stat, \n  required_aes = c(\"x\", \"y\"),\n\n  compute_group = function(data, scales) {\n    rng <- range(data$x, na.rm = TRUE)\n    grid <- data.frame(x = rng)\n\n    mod <- lm(y ~ x, data = data)\n    grid$y <- predict(mod, newdata = grid)\n\n    grid\n  }\n)\n\nstat_lm <- function(mapping = NULL, data = NULL, geom = \"line\",\n                    position = \"identity\", na.rm = FALSE, show.legend = NA, \n                    inherit.aes = TRUE, ...) {\n  layer(\n    stat = StatLm, data = data, mapping = mapping, geom = geom, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(na.rm = na.rm, ...)\n  )\n}\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  stat_lm()\n\n\nStatLm\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u305f\u306a\u3044\u305f\u3081\u67d4\u8edf\u6027\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u30e2\u30c7\u30eb\u306e\u5f0f\u3084\u30b0\u30ea\u30c3\u30c9\u3092\u751f\u6210\u3059\u308b\u306e\u306b\u4f7f\u308f\u308c\u308b\u70b9\u306e\u6570\u3092\u30e6\u30fc\u30b6\u30fc\u304c\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3001\u3068\u601d\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u305d\u3046\u3059\u308b\u306b\u306f\u3001compute_group()\u30e1\u30bd\u30c3\u30c9\u3068\u5148\u307b\u3069\u306e\u30e9\u30c3\u30d1\u30fc\u95a2\u6570\u306b\u5f15\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nStatLm <- ggproto(\"StatLm\", Stat, \n  required_aes = c(\"x\", \"y\"),\n\n  compute_group = function(data, scales, params, n = 100, formula = y ~ x) {\n    rng <- range(data$x, na.rm = TRUE)\n    grid <- data.frame(x = seq(rng[1], rng[2], length = n))\n\n    mod <- lm(formula, data = data)\n    grid$y <- predict(mod, newdata = grid)\n\n    grid\n  }\n)\n\nstat_lm <- function(mapping = NULL, data = NULL, geom = \"line\",\n                    position = \"identity\", na.rm = FALSE, show.legend = NA, \n                    inherit.aes = TRUE, n = 50, formula = y ~ x, \n                    ...) {\n  layer(\n    stat = StatLm, data = data, mapping = mapping, geom = geom, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(n = n, formula = formula, na.rm = na.rm, ...)\n  )\n}\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  stat_lm(formula = y ~ poly(x, 10)) + \n  stat_lm(formula = y ~ poly(x, 10), geom = \"point\", colour = \"red\", n = 20)\n\n\n\u6ce8\u610f\u3059\u3079\u304d\u70b9\u3068\u3057\u3066\u3001\u65b0\u3057\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u660e\u793a\u7684\u306blayer\u306e\u5f15\u6570\u306b\u542b\u3081\u308b\u3053\u3068\u306f\u3001\u5fc5\u305a\u3084\u3089\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3044\u305a\u308c\u306b\u305b\u3088...\u306f\u6b63\u3057\u3044\u4f4d\u7f6e\u306b\u6e21\u3055\u308c\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u305d\u308c\u306b\u3064\u3044\u3066\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3069\u3053\u304b\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u66f8\u304f\u5fc5\u8981\u306f\u3042\u308b\u3067\u3057\u3087\u3046\u3002 \u3053\u3053\u306b\u77ed\u3044\u4f8b\u304c\u3042\u308a\u307e\u3059\u3002@inheritParams ggplot2::stat_identity\u306f\u3001stat_identity()\u306b\u3064\u3044\u3066\u5b9a\u7fa9\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3064\u3044\u3066\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u81ea\u52d5\u7684\u306b\u7d99\u627f\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n#' @inheritParams ggplot2::stat_identity\n#' @param formula The modelling formula passed to \\code{lm}. Should only \n#'   involve \\code{y} and \\code{x}\n#' @param n Number of points used for interpolation.\nstat_lm <- function(mapping = NULL, data = NULL, geom = \"line\",\n                    position = \"identity\", na.rm = FALSE, show.legend = NA, \n                    inherit.aes = TRUE, n = 50, formula = y ~ x, \n                    ...) {\n  layer(\n    stat = StatLm, data = data, mapping = mapping, geom = geom, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(n = n, formula = formula, na.rm = na.rm, ...)\n  )\n}\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u4f7f\u3046\n\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u4e00\u5ea6\u3065\u3064\u3067\u306f\u306a\u304f\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u5168\u4f53\u306b\u884c\u3046\u3079\u304d\u8a08\u7b97\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u308c\u306f\u3001\u7406\u306b\u304b\u306a\u3063\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u9078\u3076\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u5bc6\u5ea6\u63a8\u5b9a\u3092\u884c\u3044\u305f\u3044\u3068\u304d\u3001\u30d7\u30ed\u30c3\u30c8\u5168\u4f53\u306b\u5bfe\u3057\u3066\u3072\u3068\u3064\u306e\u30d0\u30f3\u30c9\u5e45\u3092\u9078\u3076\u306e\u306f\u59a5\u5f53\u306a\u3053\u3068\u3067\u3057\u3087\u3046\u3002 \u4ee5\u4e0b\u306eStat\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u6700\u9069\u306a\u30d0\u30f3\u30c9\u5e45\u306e\u5e73\u5747\u3092\u5168\u30b0\u30eb\u30fc\u30d7\u306e\u30d0\u30f3\u30c9\u5e45\u3068\u3057\u3066\u4f7f\u3046\uff08\u3053\u306e\u65b9\u6cd5\u306b\u8ad6\u7406\u7684\u306a\u6839\u62e0\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u975e\u5408\u7406\u7684\u3067\u306f\u306a\u3055\u305d\u3046\u306b\u898b\u3048\u307e\u3059\uff09\u3001stat_density()\u306e\u4e00\u7a2e\u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\u305d\u3046\u3059\u308b\u305f\u3081\u306b\u306f\u3001setup_param()\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30c7\u30fc\u30bf\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\u3092\u6e21\u3059\u3068\u66f4\u65b0\u3055\u308c\u305f\u30ea\u30b9\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\nStatDensityCommon <- ggproto(\"StatDensityCommon\", Stat, \n  required_aes = \"x\",\n\n  setup_params = function(data, params) {\n    if (!is.null(params$bandwidth))\n      return(params)\n\n    xs <- split(data$x, data$group)\n    bws <- vapply(xs, bw.nrd0, numeric(1))\n    bw <- mean(bws)\n    message(\"Picking bandwidth of \", signif(bw, 3))\n\n    params$bandwidth <- bw\n    params\n  },\n\n  compute_group = function(data, scales, bandwidth = 1) {\n    d <- density(data$x, bw = bandwidth)\n    data.frame(x = d$x, y = d$y)\n  }  \n)\n\nstat_density_common <- function(mapping = NULL, data = NULL, geom = \"line\",\n                                position = \"identity\", na.rm = FALSE, show.legend = NA, \n                                inherit.aes = TRUE, bandwidth = NULL,\n                                ...) {\n  layer(\n    stat = StatDensityCommon, data = data, mapping = mapping, geom = geom, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(bandwidth = bandwidth, na.rm = na.rm, ...)\n  )\n}\n\nggplot(mpg, aes(displ, colour = drv)) + \n  stat_density_common()\n\n#> Picking bandwidth of 0.345\n\n\nggplot(mpg, aes(displ, colour = drv)) + \n  stat_density_common(bandwidth = 0.5)\n\n\n\u79c1\u306fNULL\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u3059\u308b\u3053\u3068\u3092\u304a\u85a6\u3081\u3057\u307e\u3059\u3002\u3082\u3057\u3082\u91cd\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u81ea\u52d5\u3067\u9078\u3076\u306e\u3067\u3042\u308c\u3070\u3001message()\u3067\u30e6\u30fc\u30b6\u30fc\u306b\u4f1d\u3048\u308b\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002(\u3042\u3068\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u3068\u304d\u306fsignif()\u3092\u4f7f\u3063\u3066\u6570\u6841\u3060\u3051\u3092\u898b\u305b\u308b\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046)\n\n\u5909\u6570\u540d\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u306eaesthetics\n\u4ee5\u4e0b\u306estat\u306f\u5225\u306e\u91cd\u8981\u306a\u70b9\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u3082\u3057\u3082\u4ed6\u306egeom\u3068\u3044\u3063\u3057\u3087\u306b\u3053\u306estat\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u3001y\u3067\u306f\u306a\u304fdensity\u3068\u3044\u3046\u540d\u524d\u306e\u5909\u6570\u3092\u8fd4\u3059\u3079\u304d\u3067\u3059\u3002 \u305d\u3046\u3059\u308b\u3053\u3068\u3067\u3001density\u3092y\u306b\u81ea\u52d5\u7684\u306b\u30de\u30c3\u30d7\u3059\u308b\u3088\u3046\u306bdefault_aes\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u306f\u3053\u306eaesthetics\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u5225\u306egeom\u3067\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nStatDensityCommon <- ggproto(\"StatDensity2\", Stat, \n  required_aes = \"x\",\n  default_aes = aes(y = ..density..),\n\n  compute_group = function(data, scales, bandwidth = 1) {\n    d <- density(data$x, bw = bandwidth)\n    data.frame(x = d$x, density = d$y)\n  }  \n)\n\nggplot(mpg, aes(displ, drv, colour = ..density..)) + \n  stat_density_common(bandwidth = 1, geom = \"point\")\n\n\n\u3057\u304b\u3057\u3001\u3053\u306estat\u3092area\u306egeom\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\u9762\u304c\u7a4d\u307f\u91cd\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\nggplot(mpg, aes(displ, fill = drv)) + \n  stat_density_common(bandwidth = 1, geom = \"area\", position = \"stack\")\n\n\n\u3053\u308c\u306f\u306a\u305c\u304b\u3068\u3044\u3046\u3068\u3001\u5404\u30b0\u30eb\u30fc\u30d7\u306e\u5bc6\u5ea6\u304c\u5225\u3005\u306b\u8a08\u7b97\u3055\u308c\u3066\u3044\u3066x\u306e\u63a8\u5b9a\u5024\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u304b\u3089\u3067\u3059\u3002\u3053\u306e\u554f\u984c\u306f\u3001setup_param()\u3067\u4e00\u5ea6\u3060\u3051\u30c7\u30fc\u30bf\u306e\u7bc4\u56f2\u3092\u8a08\u7b97\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002\nStatDensityCommon <- ggproto(\"StatDensityCommon\", Stat, \n  required_aes = \"x\",\n  default_aes = aes(y = ..density..),\n\n  setup_params = function(data, params) {\n    min <- min(data$x) - 3 * params$bandwidth\n    max <- max(data$x) + 3 * params$bandwidth\n\n    list(\n      bandwidth = params$bandwidth,\n      min = min,\n      max = max,\n      na.rm = params$na.rm\n    )\n  },\n\n  compute_group = function(data, scales, min, max, bandwidth = 1) {\n    d <- density(data$x, bw = bandwidth, from = min, to = max)\n    data.frame(x = d$x, density = d$y)\n  }  \n)\n\nggplot(mpg, aes(displ, fill = drv)) + \n  stat_density_common(bandwidth = 1, geom = \"area\", position = \"stack\")\n\n\nggplot(mpg, aes(displ, drv, fill = ..density..)) + \n  stat_density_common(bandwidth = 1, geom = \"raster\")\n\n\n\nExercises\n\n stat_chull\u3092\u62e1\u5f35\u3057\u3066\u3001alphahull\u304c\u3084\u3063\u3066\u3044\u308b\u3088\u3046\u306b\u30a2\u30eb\u30d5\u30a1\u30b7\u30a7\u30a4\u30d7\u3092\u8a08\u7b97\u3059\u308b\u3088\u3046\u306b\u3057\u306a\u3055\u3044\u3002 \u65b0\u3057\u3044stat\u306falpha\u3092\u5f15\u6570\u306b\u53d6\u308b\u3053\u3068\u3002\n StatDensityCommon\u306e\u6700\u7d42\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u5909\u66f4\u3092\u52a0\u3048\u3001\u30e6\u30fc\u30b6\u30fc\u304cmin\u3068max\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u306a\u3055\u3044\u3002layer\u95a2\u6570\u3068 compute_group()\u30e1\u30bd\u30c3\u30c9\u306e\u4e21\u65b9\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n StatLm\u3068ggplot2::StatSmooth\u3092\u6bd4\u8f03\u3057\u306a\u3055\u3044\u3002StatSmooth\u3092StatLm\u3088\u308a\u8907\u96d1\u306b\u3057\u3066\u3044\u308b\u91cd\u8981\u306a\u9055\u3044\u306f\u4f55\uff1f\n\n\n\u65b0\u3057\u3044geom\u3092\u3064\u304f\u308b\n\u65b0\u3057\u3044geom\u3092\u3064\u304f\u308b\u306e\u306f\u3001grid\u306b\u3064\u3044\u3066\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3001\u65b0\u3057\u3044stat\u3092\u3064\u304f\u308b\u3088\u308a\u96e3\u3057\u3044\u3067\u3059\u3002 ggplot2\u306fgrid\u306e\u4e0a\u306b\u6210\u308a\u7acb\u3063\u3066\u3044\u308b\u306e\u3067\u3001grid\u3067\u30d7\u30ed\u30c3\u30c8\u3092\u63cf\u304f\u57fa\u672c\u306b\u3064\u3044\u3066\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3082\u3057\u3082\u65b0\u3057\u3044geom\u3092\u3064\u304f\u308b\u3053\u3068\u3092\u771f\u5263\u306b\u691c\u8a0e\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070Paul Murrell\u306eR graphics\uff08\u90a6\u8a33\uff1aR\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\uff09\u3092\u8cfc\u5165\u3059\u308b\u3053\u3068\u3092\u304a\u85a6\u3081\u3057\u307e\u3059\u3002\u3053\u306e\u672c\u306fgrid\u3067\u30d7\u30ed\u30c3\u30c8\u3092\u63cf\u304f\u305f\u3081\u306b\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u3092\u3059\u3079\u3066\u6559\u3048\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u7c21\u5358\u306ageom\n\u7c21\u5358\u306a\u4f8b\u304b\u3089\u59cb\u3081\u308b\u306e\u304c\u7c21\u5358\u3067\u3057\u3087\u3046\u3002\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306fgeom_point()\u306e\u7c21\u5358\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\uff1a\nGeomSimplePoint <- ggproto(\"GeomSimplePoint\", Geom,\n  required_aes = c(\"x\", \"y\"),\n  default_aes = aes(shape = 19, colour = \"black\"),\n  draw_key = draw_key_point,\n\n  draw_panel = function(data, panel_scales, coord) {\n    coords <- coord$transform(data, panel_scales)\n    grid::pointsGrob(\n      coords$x, coords$y,\n      pch = coords$shape,\n      gp = grid::gpar(col = coords$colour)\n    )\n  }\n)\n\ngeom_simple_point <- function(mapping = NULL, data = NULL, stat = \"identity\",\n                              position = \"identity\", na.rm = FALSE, show.legend = NA, \n                              inherit.aes = TRUE, ...) {\n  layer(\n    geom = GeomSimplePoint, mapping = mapping,  data = data, stat = stat, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(na.rm = na.rm, ...)\n  )\n}\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_simple_point()\n\n\n\u3053\u308c\u306f\u3042\u305f\u3089\u3057\u3044stat\u3092\u5b9a\u7fa9\u3059\u308b\u6642\u3068\u3068\u3066\u3082\u3088\u304f\u4f3c\u3066\u3044\u307e\u3059\u3002\u4e0a\u306b\u793a\u3057\u305f4\u3064\u306b\u5bfe\u3057\u3066\u30d5\u30a3\u30fc\u30eb\u30c9\u307e\u305f\u306f\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n required_aes\u306f\u30e6\u30fc\u30b6\u304c\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3059\u3079\u3066\u306eaesthetics\u3092\u4e26\u3079\u305fcharacter\u306e\u30d9\u30af\u30c8\u30eb\u3067\u3059\u3002\ndefault_aes\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6301\u3064aesthetics\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\ndraw_key\u306f\u51e1\u4f8b\u306e\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\u306e\u306b\u4f7f\u308f\u308c\u308b\u95a2\u6570\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002?draw_key\u3092\u898b\u308c\u3070\u7d44\u307f\u8fbc\u307f\u306ekey\u95a2\u6570\u306e\u30ea\u30b9\u30c8\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\ndraw_group()\u306f\u9b54\u6cd5\u304c\u8d77\u3053\u308b\u5834\u6240\u3067\u3059\u3002\u3053\u306e\u95a2\u6570\u306f3\u3064\u306e\u5f15\u6570\u3092\u53d6\u3063\u3066\u30011\u3064\u306egrid grob\u3092\u8fd4\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u305d\u308c\u305e\u308c\u306e\u30d1\u30cd\u30eb\u306b\u5bfe\u3057\u30661\u56de\u3065\u3064\u547c\u3070\u308c\u307e\u3059\u3002 \u3053\u308c\u306f\u4ee5\u4e0b\u306b\u3088\u308a\u8a73\u3057\u304f\u8aac\u660e\u3057\u307e\u3059\u304c\u3001\u3082\u3063\u3068\u3082\u8907\u96d1\u306a\u90e8\u5206\u3067\u3059\u3002\n\ndraw_group()\u306f3\u3064\u306e\u5f15\u6570\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff1a\n\ndata: \u305d\u308c\u305e\u308c\u306eaesthetics\u306b\u5bfe\u3057\u3066\u3072\u3068\u3064\u306e\u30ab\u30e9\u30e0\u3092\u6301\u3064\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\npanel_scales: \u73fe\u5728\u306e\u30d1\u30cd\u30eb\u306ex\u3068y\u306e\u30b9\u30b1\u30fc\u30eb\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u542b\u3093\u3060\u30ea\u30b9\u30c8\ncoord: \u5ea7\u6a19\u7cfb\u306b\u3064\u3044\u3066\u8a18\u8ff0\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\n\u4e00\u822c\u7684\u306b\u3001panel_scales\u3068coord\u304c\u76f4\u63a5\u4f7f\u308f\u308c\u308b\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u3057\u304b\u3057\u3001\u30c7\u30fc\u30bf\u3092\u5909\u5f62\u3055\u305b\u308b\u305f\u3081\u306b\u5e38\u306b\u3053\u308c\u3089\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff1acoords <- coord$transform(data, panel_scales) \u3053\u308c\u306f\u3001position\u5909\u6570\u304c0\uff5e1\u306e\u7bc4\u56f2\u306b\u30b9\u30b1\u30fc\u30eb\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u305d\u308c\u304b\u3089\u3001\u3053\u306e\u30c7\u30fc\u30bf\u304c\u8fd4\u3063\u3066\u304d\u3066\u3001grid grob\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\uff08\u975e\u76f4\u884c\u5ea7\u6a19\u7cfb\u3067\u306e\u5909\u5f62\u306f\u3068\u3066\u3082\u8907\u96d1\u3067\u3059\u3002\u65e2\u5b58\u306eggplot2\u306egeom\u304c\u53d7\u3051\u4ed8\u3051\u308b\u5f62\u306b\u30c7\u30fc\u30bf\u3092\u5909\u5f62\u3057\u3066\u3001\u305d\u306egeom\u306b\u6e21\u3059\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\uff09\n\n\u96c6\u5408\u7684\u306ageom\ndraw_panel()\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u306e\u306f\u30011\u3064\u306e\u884c\u30671\u3064\u306e\u8981\u7d20\u3060\u3051\u304c\u63cf\u753b\u3055\u308c\u308b\u306a\u3089\u3001\u3082\u3063\u3068\u3082\u9069\u5207\u306a\u3084\u308a\u65b9\u3067\u3059\u3002\u4ed6\u306e\u5834\u5408\u3060\u3068\u3001\u30b0\u30eb\u30fc\u30d7\u3054\u3068\u306b\u8981\u7d20\u3092\u63cf\u304d\u305f\u304f\u306a\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u591a\u89d2\u5f62\u3092\u4f8b\u306b\u3068\u308b\u3068\u3001\u5404\u884c\u306f\u591a\u89d2\u5f62\u306e1\u3064\u306e\u9802\u70b9\u3092\u4e0e\u3048\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u306b\u306f\u3001draw_group()\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3079\u304d\u3067\u3059\u3002\n\u4ee5\u4e0b\u306fGeomPolygon\u306e\u7c21\u5358\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002\nGeomSimplePolygon <- ggproto(\"GeomPolygon\", Geom,\n  required_aes = c(\"x\", \"y\"),\n\n  default_aes = aes(\n    colour = NA, fill = \"grey20\", size = 0.5,\n    linetype = 1, alpha = 1\n  ),\n\n  draw_key = draw_key_polygon,\n\n  draw_group = function(data, panel_scales, coord) {\n    n <- nrow(data)\n    if (n <= 2) return(grid::nullGrob())\n\n    coords <- coord$transform(data, panel_scales)\n    # A polygon can only have a single colour, fill, etc, so take from first row\n    first_row <- coords[1, , drop = FALSE]\n\n    grid::polygonGrob(\n      coords$x, coords$y, \n      default.units = \"native\",\n      gp = grid::gpar(\n        col = first_row$colour,\n        fill = scales::alpha(first_row$fill, first_row$alpha),\n        lwd = first_row$size * .pt,\n        lty = first_row$linetype\n      )\n    )\n  }\n)\ngeom_simple_polygon <- function(mapping = NULL, data = NULL, stat = \"chull\",\n                                position = \"identity\", na.rm = FALSE, show.legend = NA, \n                                inherit.aes = TRUE, ...) {\n  layer(\n    geom = GeomSimplePolygon, mapping = mapping, data = data, stat = stat, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(na.rm = na.rm, ...)\n  )\n}\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  geom_simple_polygon(aes(colour = class), fill = NA)\n\n\n\u3044\u304f\u3064\u304b\u7279\u7b46\u3059\u3079\u304d\u70b9\u304c\u3042\u308a\u307e\u3059\uff1a\n\n1\u3064\u306e\u884c\u306b\u3064\u304d1\u3064\u306e\u591a\u89d2\u5f62\u3092\u63cf\u304f\u306e\u3067\u306f\u306a\u304f1\u3064\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u3064\u304d1\u3064\u306e\u591a\u89d2\u5f62\u3092\u63cf\u304d\u305f\u3044\u306e\u3067\u3001draw_layer()\u306e\u4ee3\u308f\u308a\u306bdraw_group()\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3044\u307e\u3059\u3002 \u30aa\u30ea\u30b8\u30ca\u30eb\u306eGeomPolygon\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u305f\u306a\u3089\u3001\u5b9f\u969b\u306b\u306fgeom_layer()\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u6c17\u3065\u304f\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u306fpolygonGrob\u3092\u3064\u304f\u308b\u305f\u3081\u306e\u3044\u304f\u3064\u304b\u306e \u30c8\u30ea\u30c3\u30af\u304c1\u56de\u306e\u547c\u3073\u51fa\u3057\u3067\u8907\u6570\u306e\u591a\u89d2\u5f62\u3092\u751f\u6210\u3059\u308b\u304b\u3089\u3067\u3059\u3002\u3053\u308c\u306f\u304b\u306a\u308a\u8907\u96d1\u3067\u3059\u304c\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u512a\u308c\u3066\u3044\u307e\u3059\u3002\n\u3082\u3057\u30c7\u30fc\u30bf\u304c2\u3064\u4ee5\u4e0b\u306e\u70b9\u3057\u304b\u542b\u307e\u306a\u3044\u5834\u5408\u3001\u591a\u89d2\u5f62\u3092\u63cf\u3053\u3046\u3068\u3059\u308b\u610f\u5473\u306f\u306a\u3044\u306e\u3067\u3001nullGrob()\u3092\u8fd4\u3057\u307e\u3059\u3002 \u3053\u308c\u306fNULL\u306b\u76f8\u5f53\u3059\u308b\u3082\u306e\u3067\u3059\uff1a\u3053\u308c\u306f\u4f55\u3082\u63cf\u753b\u305b\u305a\u5834\u6240\u3082\u53d6\u3089\u306a\u3044grob\u3067\u3059\u3002\n\u5358\u4f4d\u306b\u3064\u3044\u3066\u6ce8\u610f\u3059\u3079\u304d\u306f\u3001x\u3068y\u304c\u300c\u30cd\u30a4\u30c6\u30a3\u30d6\u306a\u300d\u5358\u4f4d\u3067\u63cf\u304b\u308c\u308b\u3068\u3044\u3046\u70b9\u3067\u3059\uff08pointGrob\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e \u5358\u4f4d\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u306a\u306e\u3067\u3001\u4f55\u3082\u5909\u66f4\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff09\u3002lwd\u306f\u30dd\u30a4\u30f3\u30c8\u5358\u4f4d\u3067\u3059\u304c\u3001ggplot2\u306fmm\u5358\u4f4d\u3092\u4f7f\u3046\u306e\u3067\u3001 \u4fee\u6b63\u3059\u308b\u305f\u3081\u306e\u8981\u7d20.pt\u3092\u639b\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n\u65e2\u5b58\u306egeom\u304b\u3089\u306e\u7d99\u627f\n\u3068\u304d\u3069\u304d\u3001\u65e2\u5b58\u306egeom\u306b\u5c0f\u3055\u306a\u5909\u66f4\u3092\u52a0\u3048\u305f\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001Geom\u3092\u7d99\u627f\u3059\u308b\u3088\u308a\u3082\u3001\u65e2\u306b\u5b58\u5728\u3059\u308b\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001StatChull\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u3046\u307e\u304f\u52d5\u304f\u3088\u3046\u306bGeomPolygon\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3092\u5909\u66f4\u3057\u305f\u304f\u306a\u308a\u307e\u3059\uff1a\nGeomPolygonHollow <- ggproto(\"GeomPolygonHollow\", GeomPolygon,\n  default_aes = aes(colour = \"black\", fill = NA, size = 0.5, linetype = 1,\n    alpha = NA)\n  )\ngeom_chull <- function(mapping = NULL, data = NULL, \n                       position = \"identity\", na.rm = FALSE, show.legend = NA, \n                       inherit.aes = TRUE, ...) {\n  layer(\n    stat = StatChull, geom = GeomPolygonHollow, data = data, mapping = mapping,\n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(na.rm = na.rm, ...)\n  )\n}\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  geom_chull()\n\n\n\u3053\u306e\u3084\u308a\u65b9\u3067\u306f\u5225\u306egeom\u3092\u3053\u306estat\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u51f8\u5305\u304c\u304a\u304a\u3080\u306d\u591a\u89d2\u5f62\u306e\u6a5f\u80fd\u3068\u306a\u3063\u305f\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u9069\u5207\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\nExercises\n\n GeomPoint\u3068GeomSimplePoint\u3092\u6bd4\u8f03\u3057\u306a\u3055\u3044\u3002\n GeomPolygon\u3068GeomSimplePolygon\u3092\u6bd4\u8f03\u3057\u306a\u3055\u3044\u3002\n\n\n\u81ea\u5206\u306etheme\u3092\u3064\u304f\u308b\n\u3082\u3057\u81ea\u5206\u306e\u5b8c\u5168\u306atheme\u3092\u3064\u304f\u308d\u3046\u3068\u3059\u308b\u306a\u3089\u3001\u3044\u304f\u3064\u304b\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff1a\n\n  \u65e2\u5b58\u306eelement\u306b\u5909\u66f4\u3092\u52a0\u3048\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\n  theme\u306e\uff08\u307b\u307c\uff09\u3059\u3079\u3066\u306eelement\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b4\u3064\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u306aelement\n  \u5b8c\u5168\u306aelement vs \u4e0d\u5b8c\u5168\u306aelement\n\n\nelement\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u65b0\u3057\u3044theme element\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001\u65e2\u5b58\u306e\u30c6\u30fc\u30de\u304b\u3089\u5024\u3092\u7d99\u627f\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306fkey\u306ecolour\u3092\u8d64\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u65e2\u5b58\u306efill\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\ntheme_grey()$legend.key\n\n#> List of 4\n#>  $ fill    : chr \"grey95\"\n#>  $ colour  : chr \"white\"\n#>  $ size    : NULL\n#>  $ linetype: NULL\n#>  - attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n\nnew_theme <- theme_grey() + theme(legend.key = element_rect(colour = \"red\"))\nnew_theme$legend.key\n\n#> List of 4\n#>  $ fill    : chr \"grey95\"\n#>  $ colour  : chr \"red\"\n#>  $ size    : NULL\n#>  $ linetype: NULL\n#>  - attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n\n\u5b8c\u5168\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u306b\u306f+\u3067\u306f\u306a\u304f%+replace%\u3092\u4f7f\u3044\u307e\u3059\u3002\nnew_theme <- theme_grey() %+replace% theme(legend.key = element_rect(colour = \"red\"))\nnew_theme$legend.key\n\n#> List of 4\n#>  $ fill    : NULL\n#>  $ colour  : chr \"red\"\n#>  $ size    : NULL\n#>  $ linetype: NULL\n#>  - attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n\n\n\u30b0\u30ed\u30fc\u30d0\u30eb\u306aelement\n\u30d7\u30ed\u30c3\u30c8\u5168\u4f53\u306e\u898b\u3048\u65b9\u306b\u5f71\u97ff\u3059\u308belement\u304c4\u3064\u3042\u308a\u307e\u3059\uff1a\n\n\n\nElement\nTheme function\n\u6982\u8981\n\n\n\n\nline\nelement_line()\n\u3059\u3079\u3066\u306e\u7dda\n\n\nrect\nelement_rect()\n\u3059\u3079\u3066\u306e\u9577\u65b9\u5f62\n\n\ntext\nelement_text()\n\u3059\u3079\u3066\u306e\u30c6\u30ad\u30b9\u30c8\n\n\ntitle\nelement_text()\n\u30bf\u30a4\u30c8\u30eb\u8981\u7d20\uff08\u30d7\u30ed\u30c3\u30c8\u3001\u8ef8\u3001\u51e1\u4f8b\uff09\u306e\u3059\u3079\u3066\u306e\u30c6\u30ad\u30b9\u30c8\n\n\n\n\u3053\u308c\u3089\u306f\u3001\u3088\u308a\u8a73\u7d30\u306a\u8a2d\u5b9a\u304b\u3089\u7d99\u627f\u3055\u308c\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5c5e\u6027\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u5168\u4f53\u306ebackground\u306e\u8272\u3084\u5168\u4f53\u306e\u30d5\u30a9\u30f3\u30c8\u8a2d\u5b9a\uff08family\u3084size\uff09\u3092\u8a2d\u5b9a\u3059\u308b\u306e\u306b\u4fbf\u5229\u3067\u3059\u3002\ndf <- data.frame(x = 1:3, y = 1:3)\nbase <- ggplot(df, aes(x, y)) + \n  geom_point() + \n  theme_minimal()\n\nbase\n\n\nbase + theme(text = element_text(colour = \"red\"))\n\n\n\u4e00\u822c\u7684\u306b\u306f\u3001\u3053\u308c\u3089\u306e\u5024\u3092\u5909\u66f4\u3059\u308b\u3068\u3053\u308d\u304b\u3089theme\u3065\u304f\u308a\u3092\u59cb\u3081\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u3002\n\n\u5b8c\u5168\u306aelement vs \u4e0d\u5b8c\u5168\u306aelement\n\u5b8c\u5168\u306atheme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u4e0d\u5b8c\u5168\u306atheme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u7406\u89e3\u3059\u308b\u306e\u306f\u6709\u7528\u3067\u3059\u3002\u5b8c\u5168\u306atheme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001complete = TRUE\u3092\u4ed8\u3051\u3066theme\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u751f\u6210\u3055\u308c\u307e\u3059\u3002\ntheme_grey()\u3068theme_bw()\u306f\u5b8c\u5168\u306atheme\u95a2\u6570\u306e\u4f8b\u3067\u3059\u3002 theme()\u306f\u4e0d\u5b8c\u5168\u306atheme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3001\u305d\u308c\u3089\u306f\u3001theme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u90e8\u5206\u7684\u306a\u5909\u66f4\u3092\u8868\u3059\u306e\u3067\u3042\u3063\u3066\u3001\u5b8c\u5168\u306atheme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u305d\u308c\u81ea\u4f53\u3092\u8fd4\u3059\u3082\u306e\u3067\u306f\u306a\u3044\u304b\u3089\u3067\u3059\u3002 \u4e0d\u5b8c\u5168\u306atheme\u3068\u5b8c\u5168\u306atheme\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\u3068\u3001\u5b8c\u5168\u306atheme\uff56\u304c\u3067\u304d\u307e\u3059\u3002\n\u5b8c\u5168\u306atheme\u3068\u4e0d\u5b8c\u5168\u306atheme\u306fggplot\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u8db3\u3057\u3042\u308f\u3055\u308c\u305f\u6642\u306f\u3084\u3084\u7570\u306a\u308b\u6319\u52d5\u3092\u3057\u307e\u3059\u3002\n\n\u4e0d\u5b8c\u5168\u306atheme\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\u3068\u3001\u4eca\u306etheme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u62e1\u5f35\u3057\u3001theme()\u306e\u547c\u3073\u51fa\u3057\u306b\u5b9a\u7fa9\u3055\u308c\u305felement\u306e\u5c5e\u6027\u306e\u307f\u3092\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\u5b8c\u5168\u306atheme\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\u3068\u3001\u65e2\u5b58\u306etheme\u3092\u53d6\u308a\u9664\u304d\u3001\u65b0\u3057\u3044theme\u3092\u9069\u7528\u3057\u307e\u3059\u3002\n\n\n\u65b0\u3057\u3044facetting\u3092\u3064\u304f\u308b\nggplot2\u62e1\u5f35\u306e\u3088\u308a\u56f0\u96e3\u306a\u8ab2\u984c\u306e1\u3064\u306f\u3001\u65b0\u3057\u3044facetting system\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u305d\u306e\u7406\u7531\u306f\u3001\u65b0\u3057\u3044facetting\u3092\u4f5c\u6210\u3059\u308b\u6642\u306b\u306f\u753b\u9762\u4e0a\u306e\u63cf\u753b\u306e\uff08\u307b\u307c\uff09\u3059\u3079\u3066\u306e\u8cac\u4efb\u3092\u8ca0\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u3068\u3001ggplot2\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306e\u571f\u53f0\u3068\u306a\u3063\u3066\u3044\u308bgtable\u30d1\u30c3\u30b1\u30fc\u30b8\u3068grid\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u76f4\u63a5\u4f7f\u7528\u3057\u305f\u7d4c\u9a13\u304c\u3042\u308b\u4eba\u306f\u3042\u307e\u308a\u3044\u306a\u3044\u304b\u3089\u3067\u3059\u3002facetting\u306e\u62e1\u5f35\u62e1\u5f35\u306b\u6311\u6226\u3059\u308b\u3053\u3068\u3092\u6c7a\u3081\u305f\u5834\u5408\u306f\u3001\u3053\u308c\u3089\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u719f\u7df4\u3092\u5f97\u308b\u3053\u3068\u3092\u5f37\u304f\u63a8\u5968\u3057\u307e\u3059\u3002\nggplot2\u306eFacet\u30af\u30e9\u30b9\u306f\u3001\u5e45\u5e83\u3044\u30bf\u30b9\u30af\u306e\u8cac\u4efb\u3092\u8ca0\u3046\u975e\u5e38\u306b\u5f37\u529b\u306a\u30af\u30e9\u30b9\u3067\u3059\u3002\u30d5\u30a1\u30bb\u30c3\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e3b\u306a\u30bf\u30b9\u30af\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5b9a\u7fa9\u3059\u308b\u3002\u3059\u306a\u308f\u3061\u3001\u30c7\u30fc\u30bf\u3092\u7570\u306a\u308b\u30d7\u30ed\u30c3\u30c8\u9818\u57df\uff08\u30d1\u30cd\u30eb\uff09\u306b\u5206\u5272\u3059\u308b\u3053\u3068\u3001\u304a\u3088\u3073\u3069\u306e\u30d1\u30cd\u30eb\u304c\u4f4d\u7f6e\u30b9\u30b1\u30fc\u30eb\u3092\u5171\u6709\u3059\u308b\u304b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u30d7\u30ed\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u6b63\u3057\u3044\u30d1\u30cd\u30eb\u306b\u30de\u30c3\u30d7\u3059\u308b\u3002\u8907\u6570\u306e\u30d1\u30cd\u30eb\u306b\u30c7\u30fc\u30bf\u304c\u5b58\u5728\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u305d\u308c\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\uff08facet_grid()\u306e\u30de\u30fc\u30b8\u30f3\u306a\u3069\uff09\u3002\n\u3059\u3079\u3066\u306e\u30d1\u30cd\u30eb\u3092\u6700\u7d42\u7684\u306agtable\u306b\u7d44\u307f\u7acb\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8ef8\u3001\u30b9\u30c8\u30ea\u30c3\u30d7\uff08\u8a33\u6ce8\uff1afacet\u306e\u30e9\u30d9\u30eb\uff09\u3001\u88c5\u98fe\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u6a5f\u80fd\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u308c\u3089\u306e3\u3064\u306e\u30bf\u30b9\u30af\u306e\u4ed6\u306b\u3001\u9069\u5207\u306a\u30c7\u30d5\u30a9\u30eb\u30c8\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u8ffd\u52a0\u306e\u62e1\u5f35\u30dd\u30a4\u30f3\u30c8\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u4e00\u822c\u7684\u306b\u7121\u8996\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u5192\u967a\u7684\u306a\u958b\u767a\u8005\u306f\u305d\u308c\u3089\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3055\u3089\u306b\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff1a\n\n\u5404\u30d1\u30cd\u30eb\u306e\u30b9\u30b1\u30fc\u30eb\u306e\u521d\u671f\u5316\u3068\u8abf\u6574\n\u5404\u30d1\u30cd\u30eb\u306e\u524d\u5f8c\u306b\u88c5\u98fe\n\u8ef8\u30e9\u30d9\u30eb\u306e\u63cf\u753b\n\n\u65b0\u3057\u3044facetting\u306e\u30af\u30e9\u30b9\u304c\u3069\u306e\u3088\u3046\u306b\u4f5c\u6210\u3055\u308c\u308b\u304b\u3092\u793a\u3059\u305f\u3081\u3001\u306f\u3058\u3081\u306f\u30b7\u30f3\u30d7\u30eb\u306b\u3001\u305d\u308c\u305e\u308c\u306e\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u9806\u756a\u306b\u5b9f\u884c\u3057\u3066\u3001\u30d7\u30ed\u30c3\u30c8\u30922\u3064\u306e\u30d1\u30cd\u30eb\u306b\u8907\u88fd\u3059\u308b\u3060\u3051\u306efacet_duplicate()\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u3088\u308a\u5f37\u529b\u306a\u53ef\u80fd\u6027\u306e\u3044\u304f\u3064\u304b\u3092\u793a\u3059\u305f\u3081\u306b\u305d\u308c\u3092\u5c11\u3057\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u65b0\u3057\u3044\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u5b9a\u7fa9\u3092\u3064\u304f\u308b\nfacetting\u3068\u3044\u3046\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u306f\u3001\u30c7\u30fc\u30bf\u3068\u305d\u308c\u304c\u5e38\u99d0\u3059\u3079\u304d\u30d1\u30cd\u30eb\u3068\u306e\u9593\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3068\u3001\u3069\u306e\u30b9\u30b1\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u3079\u304d\u304b\u3092\u5b9a\u7fa9\u3059\u308bdata.frame\u3067\u3059\u3002 \u5c11\u306a\u304f\u3068\u3082 PANEL\u3001SCALE_X\u3001 SCALE_Y\u306e\u5217\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u591a\u304f\u306e\u5834\u5408\u306f\u3055\u3089\u306b\u3001\u9069\u5207\u306a\u30d1\u30cd\u30eb\u306b\u30c7\u30fc\u30bf\u3092\u5272\u308a\u5f53\u3066\u308b\u306e\u306b\u5f79\u7acb\u3064\u5217\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff08\u4f8b\uff1afacet_grid()\u306f\u30d1\u30cd\u30eb\u305d\u308c\u305e\u308c\u306b\u7d10\u3065\u3044\u3066\u3044\u308b\u5909\u6570\u3092\u8fd4\u3057\u307e\u3059\uff09\u3002 \u3067\u306f\u3001\u91cd\u8907\u3057\u305f\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5b9a\u7fa9\u3059\u308b\u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nlayout <- function(data, params) {\n  data.frame(PANEL = c(1L, 2L), SCALE_X = 1L, SCALE_Y = 1L)\n}\n\n\u3053\u308c\u306f\u3001facetting\u304c\u5165\u529b\u30c7\u30fc\u30bf\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u95a2\u4fc2\u306a\u304f2\u3064\u306e\u30d1\u30cd\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u975e\u5e38\u306b\u7c21\u5358\u3067\u3059\u3002\n\n\u30d1\u30cd\u30eb\u3078\u306e\u30c7\u30fc\u30bf\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n\u3069\u306e\u30c7\u30fc\u30bf\u304c\u3069\u3053\u306b\u884c\u304f\u304b\u77e5\u308b\u305f\u3081\u306b\u3001ggplot2\u306f\u305d\u306e\u30d1\u30cd\u30eb\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u3079\u304d\u30c7\u30fc\u30bf\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u30b9\u30c6\u30c3\u30d7\u306e\u76ee\u7684\u306f\u3001PANEL\u5217\u3092\u305d\u306e\u30d1\u30cd\u30eb\u306b\u6240\u5c5e\u3059\u3079\u304d\u30c7\u30fc\u30bf\u3092\u7279\u5b9a\u3057\u3064\u3064\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u3067\u3059\u3002\nmapping <- function(data, layout, params) {\n  if (plyr::empty(data)) {\n    return(cbind(data, PANEL = integer(0)))\n  }\n  rbind(\n    cbind(data, PANEL = 1L),\n    cbind(data, PANEL = 2L)\n  )\n}\n\n\u3055\u3066\u3001\u6700\u521d\u306b\u7a7a\u306e data.frame\u3092\u53d6\u5f97\u3057\u305f\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u3001\u3082\u3057\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u30c7\u30fc\u30bf\u3092\u8907\u88fd\u3057\u3066\u5143\u306e\u30c7\u30fc\u30bf\u3092\u6700\u521d\u306e\u30d1\u30cd\u30eb\u306b\u5272\u308a\u5f53\u3066\u3001\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u30922\u756a\u76ee\u306e\u30d1\u30cd\u30eb\u306b\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\n\n\u30d1\u30cd\u30eb\u306e\u914d\u7f6e\n\u4e0a\u8a18\u306e2\u3064\u306e\u95a2\u6570\u306f\u4e00\u898b\u7c21\u5358\u305d\u3046\u306b\u898b\u3048\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u6700\u5f8c\u306e\u95a2\u6570\u306f\u3082\u3046\u5c11\u3057\u4f5c\u696d\u304c\u5fc5\u8981\u3067\u3059\u3002 \u79c1\u305f\u3061\u306e\u76ee\u6a19\u306f\u30012\u3064\u306e\u30d1\u30cd\u30eb\u3092\u8ef8\u3092\u631f\u3093\u3067\u5de6\u53f3\uff08\u307e\u305f\u306f\u4e0a\u4e0b\uff09\u306b\u63cf\u304f\u3053\u3068\u3067\u3059\u3002\nrender <- function(panels, layout, x_scales, y_scales, ranges, coord, data,\n                   theme, params) {\n  # Place panels according to settings\n  if (params$horizontal) {\n    # Put panels in matrix and convert to a gtable\n    panels <- matrix(panels, ncol = 2)\n    panel_table <- gtable::gtable_matrix(\"layout\", panels, \n      widths = unit(c(1, 1), \"null\"), heights = unit(1, \"null\"), clip = \"on\")\n    # Add spacing according to theme\n    panel_spacing <- if (is.null(theme$panel.spacing.x)) {\n      theme$panel.spacing\n    } else {\n      theme$panel.spacing.x\n    }\n    panel_table <- gtable::gtable_add_col_space(panel_table, panel_spacing)\n  } else {\n    panels <- matrix(panels, ncol = 1)\n    panel_table <- gtable::gtable_matrix(\"layout\", panels, \n      widths = unit(1, \"null\"), heights = unit(c(1, 1), \"null\"), clip = \"on\")\n    panel_spacing <- if (is.null(theme$panel.spacing.y)) {\n      theme$panel.spacing\n    } else {\n      theme$panel.spacing.y\n    }\n    panel_table <- gtable::gtable_add_row_space(panel_table, panel_spacing)\n  }\n  # Name panel grobs so they can be found later\n  panel_table$layout$name <- paste0(\"panel-\", c(1, 2))\n\n  # Construct the axes\n  axes <- render_axes(ranges[1], ranges[1], coord, theme, \n    transpose = TRUE)\n\n  # Add axes around each panel\n  panel_pos_h <- panel_cols(panel_table)$l\n  panel_pos_v <- panel_rows(panel_table)$t\n  axis_width_l <- unit(grid::convertWidth(\n    grid::grobWidth(axes$y$left[[1]]), \"cm\", TRUE), \"cm\")\n  axis_width_r <- unit(grid::convertWidth(\n    grid::grobWidth(axes$y$right[[1]]), \"cm\", TRUE), \"cm\")\n  ## We do it reverse so we don't change the position of panels when we add axes\n  for (i in rev(panel_pos_h)) {\n    panel_table <- gtable::gtable_add_cols(panel_table, axis_width_r, i)\n    panel_table <- gtable::gtable_add_grob(panel_table, \n      rep(axes$y$right, length(panel_pos_v)), t = panel_pos_v, l = i + 1, \n      clip = \"off\")\n    panel_table <- gtable::gtable_add_cols(panel_table, axis_width_l, i - 1)\n    panel_table <- gtable::gtable_add_grob(panel_table, \n      rep(axes$y$left, length(panel_pos_v)), t = panel_pos_v, l = i, \n      clip = \"off\")\n  }\n  ## Recalculate as gtable has changed\n  panel_pos_h <- panel_cols(panel_table)$l\n  panel_pos_v <- panel_rows(panel_table)$t\n  axis_height_t <- unit(grid::convertHeight(\n    grid::grobHeight(axes$x$top[[1]]), \"cm\", TRUE), \"cm\")\n  axis_height_b <- unit(grid::convertHeight(\n    grid::grobHeight(axes$x$bottom[[1]]), \"cm\", TRUE), \"cm\")\n  for (i in rev(panel_pos_v)) {\n    panel_table <- gtable::gtable_add_rows(panel_table, axis_height_b, i)\n    panel_table <- gtable::gtable_add_grob(panel_table, \n      rep(axes$x$bottom, length(panel_pos_h)), t = i + 1, l = panel_pos_h, \n      clip = \"off\")\n    panel_table <- gtable::gtable_add_rows(panel_table, axis_height_t, i - 1)\n    panel_table <- gtable::gtable_add_grob(panel_table, \n      rep(axes$x$top, length(panel_pos_h)), t = i, l = panel_pos_h, \n      clip = \"off\")\n  }\n  panel_table\n}\n\n\nFacet\u30af\u30e9\u30b9\u306e\u7d44\u307f\u7acb\u3066\n\u901a\u5e38\u3001\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u306f Geom\u3068Stat\u306e\u5834\u5408\u3068\u540c\u3058\u3088\u3046\u306b\u30af\u30e9\u30b9\u5b9a\u7fa9\u306e\u4e2d\u3067\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002 \u3053\u3053\u3067\u79c1\u305f\u3061\u306f\u305d\u308c\u3092\u5206\u3051\u3066\u3001\u305d\u308c\u305e\u308c\u3092\u9806\u756a\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002 \u6b8b\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u3053\u308c\u3089\u306e\u95a2\u6570\u3092\u9069\u5207\u306a\u30e1\u30bd\u30c3\u30c9\u306b\u5272\u308a\u5f53\u3066\u308b\u306e\u3068\u540c\u6642\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f5c\u308b\u3053\u3068\u3067\u3059\u3002\n# Constructor: shrink is required to govern whether scales are trained on \n# Stat-transformed data or not.\nfacet_duplicate <- function(horizontal = TRUE, shrink = TRUE) {\n  ggproto(NULL, FacetDuplicate,\n    shrink = shrink,\n    params = list(\n      horizontal = horizontal\n    )\n  )\n}\n\nFacetDuplicate <- ggproto(\"FacetDuplicate\", Facet,\n  compute_layout = layout,\n  map_data = mapping,\n  draw_panels = render\n)\n\n\u3053\u308c\u3067\u3059\u3079\u3066\u7d44\u307f\u7acb\u3066\u3089\u308c\u305f\u306e\u3067\u3001\u3055\u3063\u305d\u304f\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\np <- ggplot(mtcars, aes(x = hp, y = mpg)) + geom_point()\np\n\n\np + facet_duplicate()\n\n\n\n\u3082\u3063\u3068facets\u3067\u3044\u308d\u3044\u308d\u3084\u3063\u3066\u307f\u308b\n\u4e0a\u8a18\u306e\u4f8b\u306f\u307b\u3068\u3093\u3069\u5f79\u306b\u7acb\u3061\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u79c1\u305f\u3061\u306f\u3053\u308c\u304b\u3089\u3001\u5b9f\u969b\u306b\u6709\u7528\u306a\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306b\u3053\u308c\u3092\u62e1\u5f35\u3059\u308b\u3053\u3068\u3092\u8a66\u307f\u3066\u3044\u304d\u307e\u3059\u3002 Y\u8ef8\u3092\u5909\u63db\u3057\u305f\u30d1\u30cd\u30eb\u3092\u8ffd\u52a0\u3059\u308bfacetting\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a\nlibrary(scales)\n\nfacet_trans <- function(trans, horizontal = TRUE, shrink = TRUE) {\n  ggproto(NULL, FacetTrans,\n    shrink = shrink,\n    params = list(\n      trans = scales::as.trans(trans),\n      horizontal = horizontal\n    )\n  )\n}\n\nFacetTrans <- ggproto(\"FacetTrans\", Facet,\n  # Almost as before but we want different y-scales for each panel\n  compute_layout = function(data, params) {\n    data.frame(PANEL = c(1L, 2L), SCALE_X = 1L, SCALE_Y = c(1L, 2L))\n  },\n  # Same as before\n  map_data = function(data, layout, params) {\n    if (plyr::empty(data)) {\n      return(cbind(data, PANEL = integer(0)))\n    }\n    rbind(\n      cbind(data, PANEL = 1L),\n      cbind(data, PANEL = 2L)\n    )\n  },\n  # This is new. We create a new scale with the defined transformation\n  init_scales = function(layout, x_scale = NULL, y_scale = NULL, params) {\n    scales <- list()\n    if (!is.null(x_scale)) {\n      scales$x <- plyr::rlply(max(layout$SCALE_X), x_scale$clone())\n    }\n    if (!is.null(y_scale)) {\n      y_scale_orig <- y_scale$clone()\n      y_scale_new <- y_scale$clone()\n      y_scale_new$trans <- params$trans\n      # Make sure that oob values are kept\n      y_scale_new$oob <- function(x, ...) x\n      scales$y <- list(y_scale_orig, y_scale_new)\n    }\n    scales\n  },\n  # We must make sure that the second scale is trained on transformed data\n  train_scales = function(x_scales, y_scales, layout, data, params) {\n    # Transform data for second panel prior to scale training\n    if (!is.null(y_scales)) {\n      data <- lapply(data, function(layer_data) {\n        match_id <- match(layer_data$PANEL, layout$PANEL)\n        y_vars <- intersect(y_scales[[1]]$aesthetics, names(layer_data))\n        trans_scale <- layer_data$PANEL == 2L\n        for (i in y_vars) {\n          layer_data[trans_scale, i] <- y_scales[[2]]$transform(layer_data[trans_scale, i])\n        }\n        layer_data\n      })\n    }\n    Facet$train_scales(x_scales, y_scales, layout, data, params)\n  },\n  # this is where we actually modify the data. It cannot be done in $map_data as that function\n  # doesn't have access to the scales\n  finish_data = function(data, layout, x_scales, y_scales, params) {\n    match_id <- match(data$PANEL, layout$PANEL)\n    y_vars <- intersect(y_scales[[1]]$aesthetics, names(data))\n    trans_scale <- data$PANEL == 2L\n    for (i in y_vars) {\n      data[trans_scale, i] <- y_scales[[2]]$transform(data[trans_scale, i])\n    }\n    data\n  },\n  # A few changes from before to accomodate that axes are now not duplicate of each other\n  # We also add a panel strip to annotate the different panels\n  draw_panels = function(panels, layout, x_scales, y_scales, ranges, coord,\n                         data, theme, params) {\n    # Place panels according to settings\n    if (params$horizontal) {\n      # Put panels in matrix and convert to a gtable\n      panels <- matrix(panels, ncol = 2)\n      panel_table <- gtable::gtable_matrix(\"layout\", panels, \n        widths = unit(c(1, 1), \"null\"), heights = unit(1, \"null\"), clip = \"on\")\n      # Add spacing according to theme\n      panel_spacing <- if (is.null(theme$panel.spacing.x)) {\n        theme$panel.spacing\n      } else {\n        theme$panel.spacing.x\n      }\n      panel_table <- gtable::gtable_add_col_space(panel_table, panel_spacing)\n    } else {\n      panels <- matrix(panels, ncol = 1)\n      panel_table <- gtable::gtable_matrix(\"layout\", panels, \n        widths = unit(1, \"null\"), heights = unit(c(1, 1), \"null\"), clip = \"on\")\n      panel_spacing <- if (is.null(theme$panel.spacing.y)) {\n        theme$panel.spacing\n      } else {\n        theme$panel.spacing.y\n      }\n      panel_table <- gtable::gtable_add_row_space(panel_table, panel_spacing)\n    }\n    # Name panel grobs so they can be found later\n    panel_table$layout$name <- paste0(\"panel-\", c(1, 2))\n\n    # Construct the axes\n    axes <- render_axes(ranges[1], ranges, coord, theme, \n      transpose = TRUE)\n\n    # Add axes around each panel\n    grobWidths <- function(x) {\n      unit(vapply(x, function(x) {\n        grid::convertWidth(\n          grid::grobWidth(x), \"cm\", TRUE)\n      }, numeric(1)), \"cm\")\n    }\n    panel_pos_h <- panel_cols(panel_table)$l\n    panel_pos_v <- panel_rows(panel_table)$t\n    axis_width_l <- grobWidths(axes$y$left)\n    axis_width_r <- grobWidths(axes$y$right)\n    ## We do it reverse so we don't change the position of panels when we add axes\n    for (i in rev(seq_along(panel_pos_h))) {\n      panel_table <- gtable::gtable_add_cols(panel_table, axis_width_r[i], panel_pos_h[i])\n      if (params$horizontal) {\n        panel_table <- gtable::gtable_add_grob(panel_table, \n          rep(axes$y$right[i], length(panel_pos_v)), t = panel_pos_v, l = panel_pos_h[i] + 1, \n          clip = \"off\")\n      } else {\n        panel_table <- gtable::gtable_add_grob(panel_table, \n          rep(axes$y$right, length(panel_pos_v)), t = panel_pos_v, l = panel_pos_h[i] + 1, \n          clip = \"off\")\n      }\n      panel_table <- gtable::gtable_add_cols(panel_table, axis_width_l[i], panel_pos_h[i] - 1)\n      if (params$horizontal) {\n        panel_table <- gtable::gtable_add_grob(panel_table, \n        rep(axes$y$left[i], length(panel_pos_v)), t = panel_pos_v, l = panel_pos_h[i], \n        clip = \"off\")\n      } else {\n        panel_table <- gtable::gtable_add_grob(panel_table, \n        rep(axes$y$left, length(panel_pos_v)), t = panel_pos_v, l = panel_pos_h[i], \n        clip = \"off\")\n      }\n    }\n    ## Recalculate as gtable has changed\n    panel_pos_h <- panel_cols(panel_table)$l\n    panel_pos_v <- panel_rows(panel_table)$t\n    axis_height_t <- unit(grid::convertHeight(\n      grid::grobHeight(axes$x$top[[1]]), \"cm\", TRUE), \"cm\")\n    axis_height_b <- unit(grid::convertHeight(\n      grid::grobHeight(axes$x$bottom[[1]]), \"cm\", TRUE), \"cm\")\n    for (i in rev(panel_pos_v)) {\n      panel_table <- gtable::gtable_add_rows(panel_table, axis_height_b, i)\n      panel_table <- gtable::gtable_add_grob(panel_table, \n        rep(axes$x$bottom, length(panel_pos_h)), t = i + 1, l = panel_pos_h, \n        clip = \"off\")\n      panel_table <- gtable::gtable_add_rows(panel_table, axis_height_t, i - 1)\n      panel_table <- gtable::gtable_add_grob(panel_table, \n        rep(axes$x$top, length(panel_pos_h)), t = i, l = panel_pos_h, \n        clip = \"off\")\n    }\n\n    # Add strips\n    strips <- render_strips(\n      x = data.frame(name = c(\"Original\", paste0(\"Transformed (\", params$trans$name, \")\"))),\n      labeller = label_value, theme = theme)\n\n    panel_pos_h <- panel_cols(panel_table)$l\n    panel_pos_v <- panel_rows(panel_table)$t\n    strip_height <- unit(grid::convertHeight(\n      grid::grobHeight(strips$x$top[[1]]), \"cm\", TRUE), \"cm\")\n    for (i in rev(seq_along(panel_pos_v))) {\n      panel_table <- gtable::gtable_add_rows(panel_table, strip_height, panel_pos_v[i] - 1)\n      if (params$horizontal) {\n        panel_table <- gtable::gtable_add_grob(panel_table, strips$x$top, \n          t = panel_pos_v[i], l = panel_pos_h, clip = \"off\")\n      } else {\n        panel_table <- gtable::gtable_add_grob(panel_table, strips$x$top[i], \n          t = panel_pos_v[i], l = panel_pos_h, clip = \"off\")\n      }\n    }\n\n\n    panel_table\n  }\n)\n\n\u975e\u5e38\u306b\u660e\u767d\u306a\u3088\u3046\u306b\u3001 draw_panel\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u3044\u3063\u305f\u3093\u8907\u6570\u306e\u53ef\u80fd\u6027\u3092\u8003\u616e\u306b\u5165\u308c\u308b\u3068\u3001\u975e\u5e38\u306b\u6271\u3044\u306b\u304f\u304f\u306a\u308a\u307e\u3059\u3002 \u6c34\u5e73\u30ec\u30a4\u30a2\u30a6\u30c8\u3068\u5782\u76f4\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u4e21\u65b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u4e8b\u5b9f\u306f\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306eif/else\u30d6\u30ed\u30c3\u30af\u306e\u591a\u7528\u306b\u3064\u306a\u304c\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002facets\u306e\u62e1\u5f35\u3092\u66f8\u304f\u3068\u304d\u306b\u306f\u3001\u4e00\u822c\u306b\u3001\u3053\u308c\u306f\u5927\u304d\u306a\u8ab2\u984c\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8a18\u8ff0\u3059\u308b\u969b\u306b\u975e\u5e38\u306b\u7d30\u5fc3\u306e\u6ce8\u610f\u3092\u6255\u3046\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u304a\u3057\u3083\u3079\u308a\u306f\u7d42\u308f\u308a\u3067\u3059\u3002\u65b0\u3057\u3044facetting\u62e1\u5f35\u6a5f\u80fd\u304c\u3046\u307e\u304f\u52d5\u304f\u304b\u898b\u3066\u307f\u307e\u3057\u3087\u3046\uff1a\nggplot(mtcars, aes(x = hp, y = mpg)) + geom_point() + facet_trans('sqrt')\n\n\n\n\u65e2\u5b58\u306efacet\u95a2\u6570\u306e\u62e1\u5f35\nfacet\u30af\u30e9\u30b9\u306e\u63cf\u753b\u90e8\u5206\u306f\u96e3\u3057\u3044\u958b\u767a\u30b9\u30c6\u30c3\u30d7\u3067\u3042\u308b\u3053\u3068\u304c\u591a\u3044\u305f\u3081\u3001\u65e2\u5b58\u306efacetting\u30af\u30e9\u30b9\u306b\u4e57\u3063\u304b\u3063\u3066\u69d8\u3005\u306a\u65b0\u3057\u3044faceting\u3092\u4f5c\u308a\u4e0a\u3052\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u4ee5\u4e0b\u3067\u306f\u3001facet_wrap()\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u3001\u5165\u529b\u30c7\u30fc\u30bf\u3092\u591a\u6570\u306e\u30d1\u30cd\u30eb\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u5206\u5272\u3059\u308bfacet_bootstarp()\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nfacet_bootstrap <- function(n = 9, prop = 0.2, nrow = NULL, ncol = NULL, \n  scales = \"fixed\", shrink = TRUE, strip.position = \"top\") {\n\n  facet <- facet_wrap(~.bootstrap, nrow = nrow, ncol = ncol, scales = scales, \n    shrink = shrink, strip.position = strip.position)\n  facet$params$n <- n\n  facet$params$prop <- prop\n  ggproto(NULL, FacetBootstrap,\n    shrink = shrink,\n    params = facet$params\n  )\n}\n\nFacetBootstrap <- ggproto(\"FacetBootstrap\", FacetWrap,\n  compute_layout = function(data, params) {\n    id <- seq_len(params$n)\n\n    dims <- wrap_dims(params$n, params$nrow, params$ncol)\n    layout <- data.frame(PANEL = factor(id))\n\n    if (params$as.table) {\n      layout$ROW <- as.integer((id - 1L) %/% dims[2] + 1L)\n    } else {\n      layout$ROW <- as.integer(dims[1] - (id - 1L) %/% dims[2])\n    }\n    layout$COL <- as.integer((id - 1L) %% dims[2] + 1L)\n\n    layout <- layout[order(layout$PANEL), , drop = FALSE]\n    rownames(layout) <- NULL\n\n    # Add scale identification\n    layout$SCALE_X <- if (params$free$x) id else 1L\n    layout$SCALE_Y <- if (params$free$y) id else 1L\n\n    cbind(layout, .bootstrap = id)\n  },\n  map_data = function(data, layout, params) {\n    if (is.null(data) || nrow(data) == 0) {\n      return(cbind(data, PANEL = integer(0)))\n    }\n    n_samples <- round(nrow(data) * params$prop)\n    new_data <- lapply(seq_len(params$n), function(i) {\n      cbind(data[sample(nrow(data), n_samples), , drop = FALSE], PANEL = i)\n    })\n    do.call(rbind, new_data)\n  }\n)\n\nggplot(diamonds, aes(carat, price)) + \n  geom_point(alpha = 0.1) + \n  facet_bootstrap(n = 9, prop = 0.05)\n\n\n\u4e0a\u8a18\u3067\u884c\u3063\u3066\u3044\u308b\u51e6\u7406\u306f\u3001 compute_layout\u3068map_data\u30e1\u30bd\u30c3\u30c9\u3092\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30c8\u3057\u3001\u30c7\u30fc\u30bf\u3092\u5909\u6570\u3067\u5206\u5272\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u57fa\u3065\u3044\u3066\u30e9\u30f3\u30c0\u30e0\u306b\u884c\u3092\u5404\u30d1\u30cd\u30eb\u306b\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u3067\u3059\uff08n\u306f\u30d1\u30cd\u30eb\u306e\u6570\u3092\u3001 prop\u306f\u5404\u30d1\u30cd\u30eb\u306e\u30c7\u30fc\u30bf\u306e\u5272\u5408\u3092\u6c7a\u5b9a\u3059\u308b\uff09\u3002 \u3053\u3053\u3067\u91cd\u8981\u306a\u306e\u306f compute_layout\u306b\u3088\u3063\u3066\u8fd4\u3055\u308c\u305f\u30ec\u30a4\u30a2\u30a6\u30c8\u304cFacetWrap\u306e\u305f\u3081\u306e\u6709\u52b9\u306a\u30ec\u30a4\u30a2\u30a6\u30c8\u3067\u3042\u308b\u3053\u3068\u3067\u3059\u3002\u306a\u305c\u306a\u3089\u3001\u79c1\u305f\u3061\u306fFacetWrap\u306edraw_panel\u30e1\u30bd\u30c3\u30c9\u304c\u3059\u3079\u3066\u306e\u4ed5\u4e8b\u3092\u679c\u305f\u3057\u3066\u304f\u308c\u308b\u3053\u3068\u3092\u5f53\u3066\u306b\u3057\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002 \u3057\u305f\u304c\u3063\u3066\u3001FacetWrap\u307e\u305f\u306fFacetGrid\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u3001\u30ec\u30a4\u30a2\u30a6\u30c8\u4ed5\u69d8\u306e\u6027\u8cea\u3092\u5fc5\u305a\u7406\u89e3\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u7df4\u7fd2\n\nFacetTrans\u3092\u66f8\u304d\u63db\u3048\u3066\u3001\u5909\u63db\u306e\u30d9\u30af\u30c8\u30eb\u3092\u53d6\u5f97\u3057\u3001\u5909\u63db\u3054\u3068\u306b\u8ffd\u52a0\u306e\u30d1\u30cd\u30eb\u3092\u4f5c\u6210\u3057\u306a\u3055\u3044\u3002\nFacetWrap\u5b9f\u88c5\u306b\u57fa\u3065\u3044\u3066\u3001strip.placement\u30c6\u30fc\u30de\u306e\u8a2d\u5b9a\u3092\u8003\u616e\u306b\u5165\u308c\u3066facetTrans\u3092\u66f8\u304d\u63db\u3048\u306a\u3055\u3044\u3002\nFacetBootstrap\u306b\u306f\u3001\u7279\u306b\u540c\u3058\u30c7\u30fc\u30bf\u3092\u6301\u3064\u8907\u6570\u306e\u30ec\u30a4\u30e4\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b\u3069\u306e\u3088\u3046\u306a\u6ce8\u610f\u70b9\u304c\u3042\u308b\u304b\u8003\u3048\u306a\u3055\u3044\u3002\n\n\u3053\u306e\u8a18\u4e8b\u306f\u3001R\u306eggplot2\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u300c[Extending ggplot2](https://cran.r-project.org/web/packages/ggplot2/vignettes/extending-ggplot2.html)\u300d\u3068\u3044\u3046Vignette\u3092\u8a33\u3057\u305f\u3082\u306e\u3067\u3059\u3002\u539f\u6587\u306f[GPL-2\u30e9\u30a4\u30bb\u30f3\u30b9](https://cran.r-project.org/web/licenses/GPL-2)\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308bggplot2\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u542b\u307e\u308c\u3001\u8457\u4f5c\u6a29\u306fHadley Wickham\u306b\u5e30\u5c5e\u3057\u307e\u3059\u3002\u3053\u306e\u7ffb\u8a33\u6587\u306b\u3082GPL-2\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u9069\u7528\u3055\u308c\u307e\u3059\u3002\n\nNote that the original document is provided under the license of GPL-2 and the copyright belongs to Hadley Wickham, one of the authors of [ggplot2](https://github.com/hadley/ggplot2).\n\n------\n\n\u3053\u306evignette\u306b\u306f\u3001ggplot2 2.0.0\u3067\u516c\u5f0f\u306b\u63d0\u4f9b\u3055\u308c\u308b\u62e1\u5f35\u30e1\u30ab\u30cb\u30ba\u30e0\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002 \u3053\u306evignette\u306f\u3001`?Stat`\u3084`?Geom`\u3084`?theme`\u3067\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u4f4e\u30ec\u30d9\u30eb\u306a\u8a73\u7d30\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002 \u65b0\u3057\u3044stat\u3001geom\u3001theme\u3092\u3064\u304f\u3063\u3066ggplot2\u3092\u62e1\u5f35\u3059\u308b\u65b9\u6cd5\u3092\u8eab\u306b\u7740\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\n\n\u3053\u308c\u3092\u8aad\u307f\u9032\u3081\u308b\u306b\u3064\u308c\u3066\u3042\u306a\u305f\u306f\u3001\u982d\u3092\u63bb\u304d\u3080\u3057\u308a\u3001\u3044\u3063\u305f\u3044\u306a\u305c\u3053\u3093\u306a\u3075\u3046\u306b\u3064\u304f\u3063\u305f\u3093\u3060\uff1f\u3068\u9996\u3092\u304b\u3057\u3052\u308b\u3082\u306e\u3092\u305f\u304f\u3055\u3093\u76ee\u306b\u3059\u308b\u3067\u3057\u3087\u3046\u3002 \u305d\u308c\u3089\u306e\u591a\u304f\u306f\u3001\u6b74\u53f2\u7684\u7d4c\u7def\u3067\u3059\u3002ggplot2\u306e\u958b\u767a\u3092\u59cb\u3081\u305f\u3053\u308d\u79c1\u306f\u3042\u307e\u308a\u3088\u3044R\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002 \u79c1\u305f\u3061\u306f2.0.0\u306e\u30ea\u30ea\u30fc\u30b9\u3067\u53ef\u80fd\u306a\u9650\u308a\u591a\u304f\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3057\u307e\u3057\u305f\u304c\u3001\u82e6\u52b4\u3082\u3080\u306a\u3057\u304f\u3046\u307e\u304f\u4fee\u6b63\u3067\u304d\u306a\u3044\u3082\u306e\u3082\u3042\u308a\u307e\u3057\u305f\u3002\n\nggproto\n-------\n\n\u3059\u3079\u3066\u306eggplot2\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001ggproto\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u3063\u3066\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30b7\u30b9\u30c6\u30e0\u306f\u305f\u3063\u305f\u3072\u3068\u3064\u306e\u5834\u6240\u3067\u3057\u304b\u4f7f\u308f\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u305d\u308c\u306f\u3001ggplot2\u3067\u3059\u3002 \u3053\u308c\u306f\u307b\u3068\u3093\u3069\u304c\u6b74\u53f2\u7684\u7d4c\u7def\u3067\u3059\u3002ggplot2\u306fmutable\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u305f\u3081\u306b[proto](https://cran.r-project.org/package=proto)\u3092\u4f7f\u3063\u3066\u59cb\u307e\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306f\uff08\u77ed\u547d\u3060\u3063\u305f\uff09[mutatr](http://vita.had.co.nz/papers/mutatr.html)\u3084\u53c2\u7167\u30af\u30e9\u30b9\u3084R6\u3088\u308a\u305a\u3063\u3068\u6614\u306e\u8a71\u3067\u3059\u3002proto\u3060\u3051\u304c\u552f\u4e00\u306e\u9078\u629e\u80a2\u3060\u3063\u305f\u306e\u3067\u3059\u3002\n\n\u3067\u3082\u305d\u308c\u3067\u306f\u3001\u306a\u305cggproto\u306a\u306e\u3067\u3057\u3087\u3046\u3002 ggplot2\u306e\u516c\u5f0f\u306e\u62e1\u5f35\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u8ffd\u52a0\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u304d\u3001\u79c1\u305f\u3061\u306f\u5927\u304d\u306a\u554f\u984c\u306b\u6c17\u4ed8\u304d\u307e\u3057\u305f\u3002proto\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u5225\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u62e1\u5f35\u3055\u308c\u3066\u3044\u308b\u3068\u554f\u984c\u304c\u8d77\u3053\u308b\u306e\u3067\u3059\uff08\u30e1\u30bd\u30c3\u30c9\u306f\u305d\u306e\u62e1\u5f35\u304c\u8ffd\u52a0\u3055\u308c\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u306f\u306a\u304fggplot2\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u8a55\u4fa1\u3055\u308c\u307e\u3059\uff09\u3002R6\u306b\u5207\u308a\u66ff\u3048\u3088\u3046\u3068\u8a66\u307f\u307e\u3057\u305f\u304c\u3001ggplot2\u306e\u8981\u6c42\u3068\u5408\u81f4\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002 proto\u3092\u6539\u9020\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u305d\u3046\u3059\u308b\u3068\u3001\u307e\u305aproto\u304c\u3069\u306e\u3088\u3046\u306b\u6a5f\u80fd\u3059\u308b\u304b\u3092\u6b63\u78ba\u306b\u7406\u89e3\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u3001\u3055\u3089\u306b\u305d\u306e\u5909\u66f4\u304cproto\u306e\u4ed6\u306e\u30e6\u30fc\u30b6\u30fc\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u304a\u304b\u3057\u306a\u8a71\u3067\u3059\u304c\u3001\u3053\u308c\u306f\u3001\u65b0\u3057\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3092\u767a\u660e\u3059\u308b\u3068\u3044\u3046\u306e\u304c\u554f\u984c\u306b\u5bfe\u3059\u308b\u6b63\u3057\u3044\u7b54\u3048\u3060\u3063\u305f\u30b1\u30fc\u30b9\u3067\u3059\uff01 \u5e78\u904b\u306b\u3082Winston\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30b7\u30b9\u30c6\u30e0\u3092\u3064\u304f\u308b\u306e\u306b\u3068\u3066\u3082\u9577\u3051\u3066\u3044\u3066\u3001\u305f\u3063\u305f1\u65e5\u3067ggproto\u3092\u601d\u3044\u3064\u304d\u307e\u3057\u305f\u3002ggproto\u306fggplot2\u304c\u5fc5\u8981\u3068\u3059\u308bproto\u306e\u6a5f\u80fd\u3092\u3059\u3079\u3066\u4fdd\u6301\u3057\u3001\u4e00\u65b9\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u9593\u306b\u307e\u305f\u304c\u308b\u7d99\u627f\u3082\u3046\u307e\u304f\u6a5f\u80fd\u3055\u305b\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306fggproto\u306e\u7c21\u5358\u306a\u4f7f\u7528\u4f8b\u3067\u3059\u3002\n\n``` r\nA <- ggproto(\"A\", NULL,\n  x = 1,\n  inc = function(self) {\n    self$x <- self$x + 1\n  }\n)\nA$x\n```\n\n    #> [1] 1\n\n``` r\nA$inc()\nA$x\n```\n\n    #> [1] 2\n\n``` r\nA$inc()\nA$inc()\nA$x\n```\n\n    #> [1] 4\n\nggplot2\u306e\u30af\u30e9\u30b9\u306e\u591a\u304f\u306f\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u3067\u9759\u7684\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30af\u30e9\u30b9\u306e\u4e2d\u3067\u72b6\u614b\u3092\u4f7f\u3046\u3053\u3068\u3082\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u3082\u3057\u307e\u305b\u3093\u3002\u3053\u308c\u3089\u306e\u30af\u30e9\u30b9\u306f\u307b\u3068\u3093\u3069\u306e\u5834\u5408\u3001\u95a2\u9023\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u307e\u3068\u3081\u308b\u306e\u306b\u4fbf\u5229\u306a\u65b9\u6cd5\u3068\u3057\u3066\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u65b0\u3057\u3044geom\u3084stat\u3092\u3064\u304f\u308b\u306b\u306f\u3001\u3053\u308c\u304b\u3089\u8aac\u660e\u3059\u308b\u3088\u3046\u306b`Stat`\u3084`Geom`\u3092\u7d99\u627f\u3057\u3066\u65b0\u3057\u3044ggproto\u3092\u3064\u304f\u3063\u3066\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u65b0\u3057\u3044stat\u3092\u3064\u304f\u308b\n------------------\n\n### \u3082\u3063\u3068\u3082\u5358\u7d14\u306astat\n\n\u3068\u3066\u3082\u5358\u7d14\u306astat\u3092\u3064\u304f\u308b\u3053\u3068\u304b\u3089\u59cb\u3081\u307e\u3059\u3002\u70b9\u306e\u96c6\u5408\u306e\u51f8\u5305\u3092\u5f97\u308bstat\u3067\u3059\u3002\u307e\u305a\u3001`Stat`\u3092\u7d99\u627f\u3059\u308bggproto\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\n``` r\nStatChull <- ggproto(\"StatChull\", Stat,\n  compute_group = function(data, scales) {\n    data[chull(data$x, data$y), , drop = FALSE]\n  },\n  \n  required_aes = c(\"x\", \"y\")\n)\n```\n\n\u3082\u3063\u3068\u3082\u91cd\u8981\u306a\u90e8\u5206\u306f\u3001`compute_group()`\u30e1\u30bd\u30c3\u30c9\uff08\u8a08\u7b97\u3092\u5b9f\u884c\u3057\u307e\u3059\uff09\u3068`required_aes`\u30d5\u30a3\u30fc\u30eb\u30c9\uff08\u3053\u306estat\u304c\u52d5\u304f\u306e\u306b\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044aesthetics\u3092\u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\uff09\u3067\u3059\u3002\n\n\u6b21\u306b\u3001layer\u95a2\u6570\u3092\u66f8\u304d\u307e\u3059\u3002\u4e0d\u5e78\u306b\u3082\u3001\u65e9\u671f\u306e\u8a2d\u8a08\u30df\u30b9\u306b\u3088\u308a\u79c1\u306f\u3053\u308c\u3089\u3092`stat_()`\u3084`geom_()`\u3068\u540d\u4ed8\u3051\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002`layer_()`\u95a2\u6570\u3068\u3059\u308b\u3079\u304d\u3067\u3057\u305f\u3002\u3053\u308c\u306f\u3088\u308a\u5b9f\u4f53\u306b\u5373\u3057\u305f\u8868\u8a18\u3067\u3059\u3002\u306a\u305c\u306a\u3089\u3001\u3059\u3079\u3066\u306e\u30ec\u30a4\u30e4\u30fc\u304cstat\u306b\u3082geom\u306b\u3082\u95a2\u308f\u3063\u3066\u3044\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u3059\u3079\u3066\u306elayer\u95a2\u6570\u306f\u540c\u3058\u5f62\u5f0f\u306b\u5f93\u3044\u307e\u3059\u3002\u95a2\u6570\u306e\u5f15\u6570\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u3001`layer()`\u3092\u547c\u3073\u3001`...`\u3092\u305d\u306e`param`\u5f15\u6570\u306b\u6e21\u3057\u307e\u3059\u3002 `...`\u306b\u542b\u307e\u308c\u308b\u5f15\u6570\u306f\u3001geom\u306e\u5f15\u6570\uff08stat\u306e\u30e9\u30c3\u30d1\u30fc\u306e\u5834\u5408\uff09\u304bstat\u306e\u5f15\u6570\uff08geom\u306e\u30e9\u30c3\u30d1\u30fc\u306e\u5834\u5408\uff09\u304b\u30bb\u30c3\u30c8\u3059\u308baesthetics\u306e\u3044\u305a\u308c\u304b\u3067\u3059\u3002`layer()`\u304c\u3001\u7570\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5206\u96e2\u3057\u3066\u6b63\u3057\u3044\u5834\u6240\u306b\u683c\u7d0d\u3059\u308b\u3053\u3068\u306e\u9762\u5012\u3092\u898b\u3066\u304f\u308c\u307e\u3059\u3002\n\n``` r\nstat_chull <- function(mapping = NULL, data = NULL, geom = \"polygon\",\n                       position = \"identity\", na.rm = FALSE, show.legend = NA, \n                       inherit.aes = TRUE, ...) {\n  layer(\n    stat = StatChull, data = data, mapping = mapping, geom = geom, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(na.rm = na.rm, ...)\n  )\n}\n```\n\n\uff08\u6ce8\uff1a\u3082\u3057\u81ea\u5206\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4e2d\u3067\u3053\u308c\u3092\u66f8\u304f\u306a\u3089\u3001`ggplot2::layer()`\u3068\u660e\u793a\u7684\u306b\u547c\u3076\u304b\u3001`layer()`\u95a2\u6570\u3092\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u540d\u524d\u7a7a\u9593\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u304b\u3001\u3044\u305a\u308c\u304b\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff09\n\n\u3044\u3063\u305f\u3093layer\u95a2\u6570\u3092\u624b\u306b\u3059\u308c\u3070\u3001\u65b0\u3057\u3044stat\u3092\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n``` r\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  stat_chull(fill = NA, colour = \"black\")\n```\n\n![unnamed-chunk-3-1.png](https://qiita-image-store.s3.amazonaws.com/0/80093/33c0968c-c60d-4e5c-ea8c-e67eb92a14e3.png)\n\n\n\uff08`fill=NA`\u3068\u6bce\u56de\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u3044\u3044\u3088\u3046\u306bgeom\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3092\u5909\u66f4\u3059\u308b\u65b9\u6cd5\u306f\u5f8c\u307b\u3069\u51fa\u3066\u304d\u307e\u3059\uff09\n\n\u3072\u3068\u305f\u3073\u3053\u306e\u57fa\u672c\u7684\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u66f8\u304d\u4e0a\u3052\u308b\u3068\u3001ggplot2\u304c\u63d0\u4f9b\u3059\u308b\u305f\u304f\u3055\u3093\u306e\u6a5f\u80fd\u3092\u81ea\u7531\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001ggplot2\u306f\u305d\u308c\u305e\u308c\u306e\u30b0\u30eb\u30fc\u30d7\u3067\u56fa\u5b9a\u306eaesthetics\u3092\u81ea\u52d5\u3067\u4fdd\u5b58\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n``` r\nggplot(mpg, aes(displ, hwy, colour = drv)) + \n  geom_point() + \n  stat_chull(fill = NA)\n```\n\n![unnamed-chunk-4-1.png](https://qiita-image-store.s3.amazonaws.com/0/80093/fb3806ae-85f4-e72f-99da-b0ea32ed9376.png)\n\n\n\u51f8\u5305\u3092\u5225\u306e\u65b9\u6cd5\u3067\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u306egeom\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n``` r\nggplot(mpg, aes(displ, hwy)) + \n  stat_chull(geom = \"point\", size = 4, colour = \"red\") +\n  geom_point()\n```\n\n![unnamed-chunk-5-1.png](https://qiita-image-store.s3.amazonaws.com/0/80093/4bd7ed20-1b28-c936-6390-516445c34534.png)\n\n\n### Stat\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\n\n\u3055\u3089\u306b\u8907\u96d1\u306astat\u306f\u3044\u304f\u3064\u304b\u306e\u8a08\u7b97\u3092\u884c\u3044\u307e\u3059\u3002\u30d7\u30ed\u30c3\u30c8\u306b\u3082\u3063\u3068\u3082\u30d5\u30a3\u30c3\u30c8\u3059\u308b\u7dda\u3092\u8ffd\u52a0\u3059\u308b\u3001\u7c21\u5358\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u306e`geom_smooth()`\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002`Stat`\u3092\u7d99\u627f\u3057\u305f`StatLm`\u3068layer\u95a2\u6570`stat_lm()`\u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\n``` r\nStatLm <- ggproto(\"StatLm\", Stat, \n  required_aes = c(\"x\", \"y\"),\n  \n  compute_group = function(data, scales) {\n    rng <- range(data$x, na.rm = TRUE)\n    grid <- data.frame(x = rng)\n    \n    mod <- lm(y ~ x, data = data)\n    grid$y <- predict(mod, newdata = grid)\n    \n    grid\n  }\n)\n\nstat_lm <- function(mapping = NULL, data = NULL, geom = \"line\",\n                    position = \"identity\", na.rm = FALSE, show.legend = NA, \n                    inherit.aes = TRUE, ...) {\n  layer(\n    stat = StatLm, data = data, mapping = mapping, geom = geom, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(na.rm = na.rm, ...)\n  )\n}\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  stat_lm()\n```\n\n![unnamed-chunk-6-1.png](https://qiita-image-store.s3.amazonaws.com/0/80093/322be7be-d1e2-3c54-f01d-6c14f32ac87e.png)\n\n\n`StatLm`\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u305f\u306a\u3044\u305f\u3081\u67d4\u8edf\u6027\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u30e2\u30c7\u30eb\u306e\u5f0f\u3084\u30b0\u30ea\u30c3\u30c9\u3092\u751f\u6210\u3059\u308b\u306e\u306b\u4f7f\u308f\u308c\u308b\u70b9\u306e\u6570\u3092\u30e6\u30fc\u30b6\u30fc\u304c\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3001\u3068\u601d\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u305d\u3046\u3059\u308b\u306b\u306f\u3001`compute_group()`\u30e1\u30bd\u30c3\u30c9\u3068\u5148\u307b\u3069\u306e\u30e9\u30c3\u30d1\u30fc\u95a2\u6570\u306b\u5f15\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n``` r\nStatLm <- ggproto(\"StatLm\", Stat, \n  required_aes = c(\"x\", \"y\"),\n  \n  compute_group = function(data, scales, params, n = 100, formula = y ~ x) {\n    rng <- range(data$x, na.rm = TRUE)\n    grid <- data.frame(x = seq(rng[1], rng[2], length = n))\n    \n    mod <- lm(formula, data = data)\n    grid$y <- predict(mod, newdata = grid)\n    \n    grid\n  }\n)\n\nstat_lm <- function(mapping = NULL, data = NULL, geom = \"line\",\n                    position = \"identity\", na.rm = FALSE, show.legend = NA, \n                    inherit.aes = TRUE, n = 50, formula = y ~ x, \n                    ...) {\n  layer(\n    stat = StatLm, data = data, mapping = mapping, geom = geom, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(n = n, formula = formula, na.rm = na.rm, ...)\n  )\n}\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  stat_lm(formula = y ~ poly(x, 10)) + \n  stat_lm(formula = y ~ poly(x, 10), geom = \"point\", colour = \"red\", n = 20)\n```\n\n![unnamed-chunk-7-1.png](https://qiita-image-store.s3.amazonaws.com/0/80093/e4c79613-6ed3-4daf-9ac5-eb446ae1d6f7.png)\n\n\n\u6ce8\u610f\u3059\u3079\u304d\u70b9\u3068\u3057\u3066\u3001\u65b0\u3057\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u660e\u793a\u7684\u306blayer\u306e\u5f15\u6570\u306b\u542b\u3081\u308b\u3053\u3068\u306f\u3001\u5fc5\u305a\u3084\u3089\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3044\u305a\u308c\u306b\u305b\u3088`...`\u306f\u6b63\u3057\u3044\u4f4d\u7f6e\u306b\u6e21\u3055\u308c\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u305d\u308c\u306b\u3064\u3044\u3066\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3069\u3053\u304b\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u66f8\u304f\u5fc5\u8981\u306f\u3042\u308b\u3067\u3057\u3087\u3046\u3002 \u3053\u3053\u306b\u77ed\u3044\u4f8b\u304c\u3042\u308a\u307e\u3059\u3002`@inheritParams ggplot2::stat_identity`\u306f\u3001`stat_identity()`\u306b\u3064\u3044\u3066\u5b9a\u7fa9\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3064\u3044\u3066\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u81ea\u52d5\u7684\u306b\u7d99\u627f\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n``` r\n#' @inheritParams ggplot2::stat_identity\n#' @param formula The modelling formula passed to \\code{lm}. Should only \n#'   involve \\code{y} and \\code{x}\n#' @param n Number of points used for interpolation.\nstat_lm <- function(mapping = NULL, data = NULL, geom = \"line\",\n                    position = \"identity\", na.rm = FALSE, show.legend = NA, \n                    inherit.aes = TRUE, n = 50, formula = y ~ x, \n                    ...) {\n  layer(\n    stat = StatLm, data = data, mapping = mapping, geom = geom, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(n = n, formula = formula, na.rm = na.rm, ...)\n  )\n}\n```\n\n### \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u4f7f\u3046\n\n\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u4e00\u5ea6\u3065\u3064\u3067\u306f\u306a\u304f\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u5168\u4f53\u306b\u884c\u3046\u3079\u304d\u8a08\u7b97\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u308c\u306f\u3001\u7406\u306b\u304b\u306a\u3063\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u9078\u3076\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u5bc6\u5ea6\u63a8\u5b9a\u3092\u884c\u3044\u305f\u3044\u3068\u304d\u3001\u30d7\u30ed\u30c3\u30c8\u5168\u4f53\u306b\u5bfe\u3057\u3066\u3072\u3068\u3064\u306e\u30d0\u30f3\u30c9\u5e45\u3092\u9078\u3076\u306e\u306f\u59a5\u5f53\u306a\u3053\u3068\u3067\u3057\u3087\u3046\u3002 \u4ee5\u4e0b\u306eStat\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u6700\u9069\u306a\u30d0\u30f3\u30c9\u5e45\u306e\u5e73\u5747\u3092\u5168\u30b0\u30eb\u30fc\u30d7\u306e\u30d0\u30f3\u30c9\u5e45\u3068\u3057\u3066\u4f7f\u3046\uff08\u3053\u306e\u65b9\u6cd5\u306b\u8ad6\u7406\u7684\u306a\u6839\u62e0\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u975e\u5408\u7406\u7684\u3067\u306f\u306a\u3055\u305d\u3046\u306b\u898b\u3048\u307e\u3059\uff09\u3001`stat_density()`\u306e\u4e00\u7a2e\u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\n\u305d\u3046\u3059\u308b\u305f\u3081\u306b\u306f\u3001`setup_param()`\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30c7\u30fc\u30bf\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30ea\u30b9\u30c8\u3092\u6e21\u3059\u3068\u66f4\u65b0\u3055\u308c\u305f\u30ea\u30b9\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n``` r\nStatDensityCommon <- ggproto(\"StatDensityCommon\", Stat, \n  required_aes = \"x\",\n  \n  setup_params = function(data, params) {\n    if (!is.null(params$bandwidth))\n      return(params)\n    \n    xs <- split(data$x, data$group)\n    bws <- vapply(xs, bw.nrd0, numeric(1))\n    bw <- mean(bws)\n    message(\"Picking bandwidth of \", signif(bw, 3))\n    \n    params$bandwidth <- bw\n    params\n  },\n  \n  compute_group = function(data, scales, bandwidth = 1) {\n    d <- density(data$x, bw = bandwidth)\n    data.frame(x = d$x, y = d$y)\n  }  \n)\n\nstat_density_common <- function(mapping = NULL, data = NULL, geom = \"line\",\n                                position = \"identity\", na.rm = FALSE, show.legend = NA, \n                                inherit.aes = TRUE, bandwidth = NULL,\n                                ...) {\n  layer(\n    stat = StatDensityCommon, data = data, mapping = mapping, geom = geom, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(bandwidth = bandwidth, na.rm = na.rm, ...)\n  )\n}\n\nggplot(mpg, aes(displ, colour = drv)) + \n  stat_density_common()\n```\n\n    #> Picking bandwidth of 0.345\n\n![unnamed-chunk-9-1.png](https://qiita-image-store.s3.amazonaws.com/0/80093/dad5a254-6a4d-0e61-b747-e7337522d581.png)\n\n\n``` r\nggplot(mpg, aes(displ, colour = drv)) + \n  stat_density_common(bandwidth = 0.5)\n```\n\n![unnamed-chunk-9-2.png](https://qiita-image-store.s3.amazonaws.com/0/80093/594ab53b-02fd-01af-5607-e3c22a97aa20.png)\n\n\n\u79c1\u306f`NULL`\u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306b\u3059\u308b\u3053\u3068\u3092\u304a\u85a6\u3081\u3057\u307e\u3059\u3002\u3082\u3057\u3082\u91cd\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u81ea\u52d5\u3067\u9078\u3076\u306e\u3067\u3042\u308c\u3070\u3001`message()`\u3067\u30e6\u30fc\u30b6\u30fc\u306b\u4f1d\u3048\u308b\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\u3002(\u3042\u3068\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u3068\u304d\u306f`signif()`\u3092\u4f7f\u3063\u3066\u6570\u6841\u3060\u3051\u3092\u898b\u305b\u308b\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046)\n\n### \u5909\u6570\u540d\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u306eaesthetics\n\n\u4ee5\u4e0b\u306estat\u306f\u5225\u306e\u91cd\u8981\u306a\u70b9\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u3082\u3057\u3082\u4ed6\u306egeom\u3068\u3044\u3063\u3057\u3087\u306b\u3053\u306estat\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u3001`y`\u3067\u306f\u306a\u304f`density`\u3068\u3044\u3046\u540d\u524d\u306e\u5909\u6570\u3092\u8fd4\u3059\u3079\u304d\u3067\u3059\u3002 \u305d\u3046\u3059\u308b\u3053\u3068\u3067\u3001`density`\u3092`y`\u306b\u81ea\u52d5\u7684\u306b\u30de\u30c3\u30d7\u3059\u308b\u3088\u3046\u306b`default_aes`\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u306f\u3053\u306eaesthetics\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u5225\u306egeom\u3067\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n``` r\nStatDensityCommon <- ggproto(\"StatDensity2\", Stat, \n  required_aes = \"x\",\n  default_aes = aes(y = ..density..),\n\n  compute_group = function(data, scales, bandwidth = 1) {\n    d <- density(data$x, bw = bandwidth)\n    data.frame(x = d$x, density = d$y)\n  }  \n)\n\nggplot(mpg, aes(displ, drv, colour = ..density..)) + \n  stat_density_common(bandwidth = 1, geom = \"point\")\n```\n\n![unnamed-chunk-10-1.png](https://qiita-image-store.s3.amazonaws.com/0/80093/0c62b923-d9aa-d3fd-bb63-38eb1593d2f6.png)\n\n\n\u3057\u304b\u3057\u3001\u3053\u306estat\u3092area\u306egeom\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\u9762\u304c\u7a4d\u307f\u91cd\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n``` r\nggplot(mpg, aes(displ, fill = drv)) + \n  stat_density_common(bandwidth = 1, geom = \"area\", position = \"stack\")\n```\n\n![unnamed-chunk-11-1.png](https://qiita-image-store.s3.amazonaws.com/0/80093/5da15cdd-c7d8-a007-5dbd-4f6e8986c53c.png)\n\n\n\u3053\u308c\u306f\u306a\u305c\u304b\u3068\u3044\u3046\u3068\u3001\u5404\u30b0\u30eb\u30fc\u30d7\u306e\u5bc6\u5ea6\u304c\u5225\u3005\u306b\u8a08\u7b97\u3055\u308c\u3066\u3044\u3066`x`\u306e\u63a8\u5b9a\u5024\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u304b\u3089\u3067\u3059\u3002\u3053\u306e\u554f\u984c\u306f\u3001`setup_param()`\u3067\u4e00\u5ea6\u3060\u3051\u30c7\u30fc\u30bf\u306e\u7bc4\u56f2\u3092\u8a08\u7b97\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u89e3\u6c7a\u3067\u304d\u307e\u3059\u3002\n\n``` r\nStatDensityCommon <- ggproto(\"StatDensityCommon\", Stat, \n  required_aes = \"x\",\n  default_aes = aes(y = ..density..),\n\n  setup_params = function(data, params) {\n    min <- min(data$x) - 3 * params$bandwidth\n    max <- max(data$x) + 3 * params$bandwidth\n    \n    list(\n      bandwidth = params$bandwidth,\n      min = min,\n      max = max,\n      na.rm = params$na.rm\n    )\n  },\n  \n  compute_group = function(data, scales, min, max, bandwidth = 1) {\n    d <- density(data$x, bw = bandwidth, from = min, to = max)\n    data.frame(x = d$x, density = d$y)\n  }  \n)\n\nggplot(mpg, aes(displ, fill = drv)) + \n  stat_density_common(bandwidth = 1, geom = \"area\", position = \"stack\")\n```\n\n![unnamed-chunk-12-1.png](https://qiita-image-store.s3.amazonaws.com/0/80093/d63a6e97-352d-a3df-01d2-612c8c48e308.png)\n\n\n``` r\nggplot(mpg, aes(displ, drv, fill = ..density..)) + \n  stat_density_common(bandwidth = 1, geom = \"raster\")\n```\n\n![unnamed-chunk-12-2.png](https://qiita-image-store.s3.amazonaws.com/0/80093/919d739c-1251-29ff-23ae-3007d001ab2c.png)\n\n\n### Exercises\n\n1.  `stat_chull`\u3092\u62e1\u5f35\u3057\u3066\u3001[alphahull](https://cran.r-project.org/package=alphahull)\u304c\u3084\u3063\u3066\u3044\u308b\u3088\u3046\u306b\u30a2\u30eb\u30d5\u30a1\u30b7\u30a7\u30a4\u30d7\u3092\u8a08\u7b97\u3059\u308b\u3088\u3046\u306b\u3057\u306a\u3055\u3044\u3002 \u65b0\u3057\u3044stat\u306f`alpha`\u3092\u5f15\u6570\u306b\u53d6\u308b\u3053\u3068\u3002\n2.  `StatDensityCommon`\u306e\u6700\u7d42\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u5909\u66f4\u3092\u52a0\u3048\u3001\u30e6\u30fc\u30b6\u30fc\u304c`min`\u3068`max`\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u306a\u3055\u3044\u3002layer\u95a2\u6570\u3068 `compute_group()`\u30e1\u30bd\u30c3\u30c9\u306e\u4e21\u65b9\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n3.  `StatLm`\u3068`ggplot2::StatSmooth`\u3092\u6bd4\u8f03\u3057\u306a\u3055\u3044\u3002`StatSmooth`\u3092`StatLm`\u3088\u308a\u8907\u96d1\u306b\u3057\u3066\u3044\u308b\u91cd\u8981\u306a\u9055\u3044\u306f\u4f55\uff1f\n\n\u65b0\u3057\u3044geom\u3092\u3064\u304f\u308b\n------------------\n\n\u65b0\u3057\u3044geom\u3092\u3064\u304f\u308b\u306e\u306f\u3001grid\u306b\u3064\u3044\u3066\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3001\u65b0\u3057\u3044stat\u3092\u3064\u304f\u308b\u3088\u308a\u96e3\u3057\u3044\u3067\u3059\u3002 ggplot2\u306fgrid\u306e\u4e0a\u306b\u6210\u308a\u7acb\u3063\u3066\u3044\u308b\u306e\u3067\u3001grid\u3067\u30d7\u30ed\u30c3\u30c8\u3092\u63cf\u304f\u57fa\u672c\u306b\u3064\u3044\u3066\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 \u3082\u3057\u3082\u65b0\u3057\u3044geom\u3092\u3064\u304f\u308b\u3053\u3068\u3092\u771f\u5263\u306b\u691c\u8a0e\u3057\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070Paul Murrell\u306e[R graphics](http://amzn.com/B00I60M26G)\uff08\u90a6\u8a33\uff1a[R\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9](http://www.kyoritsu-pub.co.jp/bookdetail/9784320019058)\uff09\u3092\u8cfc\u5165\u3059\u308b\u3053\u3068\u3092\u304a\u85a6\u3081\u3057\u307e\u3059\u3002\u3053\u306e\u672c\u306fgrid\u3067\u30d7\u30ed\u30c3\u30c8\u3092\u63cf\u304f\u305f\u3081\u306b\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u3092\u3059\u3079\u3066\u6559\u3048\u3066\u304f\u308c\u307e\u3059\u3002\n\n### \u7c21\u5358\u306ageom\n\n\u7c21\u5358\u306a\u4f8b\u304b\u3089\u59cb\u3081\u308b\u306e\u304c\u7c21\u5358\u3067\u3057\u3087\u3046\u3002\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f`geom_point()`\u306e\u7c21\u5358\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\uff1a\n\n``` r\nGeomSimplePoint <- ggproto(\"GeomSimplePoint\", Geom,\n  required_aes = c(\"x\", \"y\"),\n  default_aes = aes(shape = 19, colour = \"black\"),\n  draw_key = draw_key_point,\n\n  draw_panel = function(data, panel_scales, coord) {\n    coords <- coord$transform(data, panel_scales)\n    grid::pointsGrob(\n      coords$x, coords$y,\n      pch = coords$shape,\n      gp = grid::gpar(col = coords$colour)\n    )\n  }\n)\n\ngeom_simple_point <- function(mapping = NULL, data = NULL, stat = \"identity\",\n                              position = \"identity\", na.rm = FALSE, show.legend = NA, \n                              inherit.aes = TRUE, ...) {\n  layer(\n    geom = GeomSimplePoint, mapping = mapping,  data = data, stat = stat, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(na.rm = na.rm, ...)\n  )\n}\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_simple_point()\n```\n\n![GeomSimplePoint-1.png](https://qiita-image-store.s3.amazonaws.com/0/80093/05fc2fce-617a-7739-262a-bef24658aef8.png)\n\n\n\u3053\u308c\u306f\u3042\u305f\u3089\u3057\u3044stat\u3092\u5b9a\u7fa9\u3059\u308b\u6642\u3068\u3068\u3066\u3082\u3088\u304f\u4f3c\u3066\u3044\u307e\u3059\u3002\u4e0a\u306b\u793a\u3057\u305f4\u3064\u306b\u5bfe\u3057\u3066\u30d5\u30a3\u30fc\u30eb\u30c9\u307e\u305f\u306f\u30e1\u30bd\u30c3\u30c9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n-   `required_aes`\u306f\u30e6\u30fc\u30b6\u304c\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3059\u3079\u3066\u306eaesthetics\u3092\u4e26\u3079\u305fcharacter\u306e\u30d9\u30af\u30c8\u30eb\u3067\u3059\u3002\n-   `default_aes`\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6301\u3064aesthetics\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\n\n-   `draw_key`\u306f\u51e1\u4f8b\u306e\u30ad\u30fc\u3092\u63cf\u753b\u3059\u308b\u306e\u306b\u4f7f\u308f\u308c\u308b\u95a2\u6570\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002`?draw_key`\u3092\u898b\u308c\u3070\u7d44\u307f\u8fbc\u307f\u306ekey\u95a2\u6570\u306e\u30ea\u30b9\u30c8\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n-   `draw_group()`\u306f\u9b54\u6cd5\u304c\u8d77\u3053\u308b\u5834\u6240\u3067\u3059\u3002\u3053\u306e\u95a2\u6570\u306f3\u3064\u306e\u5f15\u6570\u3092\u53d6\u3063\u3066\u30011\u3064\u306egrid grob\u3092\u8fd4\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u305d\u308c\u305e\u308c\u306e\u30d1\u30cd\u30eb\u306b\u5bfe\u3057\u30661\u56de\u3065\u3064\u547c\u3070\u308c\u307e\u3059\u3002 \u3053\u308c\u306f\u4ee5\u4e0b\u306b\u3088\u308a\u8a73\u3057\u304f\u8aac\u660e\u3057\u307e\u3059\u304c\u3001\u3082\u3063\u3068\u3082\u8907\u96d1\u306a\u90e8\u5206\u3067\u3059\u3002\n\n`draw_group()`\u306f3\u3064\u306e\u5f15\u6570\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff1a\n\n-   `data`: \u305d\u308c\u305e\u308c\u306eaesthetics\u306b\u5bfe\u3057\u3066\u3072\u3068\u3064\u306e\u30ab\u30e9\u30e0\u3092\u6301\u3064\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\n\n-   `panel_scales`: \u73fe\u5728\u306e\u30d1\u30cd\u30eb\u306ex\u3068y\u306e\u30b9\u30b1\u30fc\u30eb\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u542b\u3093\u3060\u30ea\u30b9\u30c8\n\n-   `coord`: \u5ea7\u6a19\u7cfb\u306b\u3064\u3044\u3066\u8a18\u8ff0\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\n\u4e00\u822c\u7684\u306b\u3001`panel_scales`\u3068`coord`\u304c\u76f4\u63a5\u4f7f\u308f\u308c\u308b\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u3057\u304b\u3057\u3001\u30c7\u30fc\u30bf\u3092\u5909\u5f62\u3055\u305b\u308b\u305f\u3081\u306b\u5e38\u306b\u3053\u308c\u3089\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff1a`coords <- coord$transform(data, panel_scales)` \u3053\u308c\u306f\u3001position\u5909\u6570\u304c0\uff5e1\u306e\u7bc4\u56f2\u306b\u30b9\u30b1\u30fc\u30eb\u3055\u308c\u305f\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u305d\u308c\u304b\u3089\u3001\u3053\u306e\u30c7\u30fc\u30bf\u304c\u8fd4\u3063\u3066\u304d\u3066\u3001grid grob\u95a2\u6570\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\uff08\u975e\u76f4\u884c\u5ea7\u6a19\u7cfb\u3067\u306e\u5909\u5f62\u306f\u3068\u3066\u3082\u8907\u96d1\u3067\u3059\u3002\u65e2\u5b58\u306eggplot2\u306egeom\u304c\u53d7\u3051\u4ed8\u3051\u308b\u5f62\u306b\u30c7\u30fc\u30bf\u3092\u5909\u5f62\u3057\u3066\u3001\u305d\u306egeom\u306b\u6e21\u3059\u306e\u304c\u3044\u3044\u3067\u3057\u3087\u3046\uff09\n\n### \u96c6\u5408\u7684\u306ageom\n\n`draw_panel()`\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u306e\u306f\u30011\u3064\u306e\u884c\u30671\u3064\u306e\u8981\u7d20\u3060\u3051\u304c\u63cf\u753b\u3055\u308c\u308b\u306a\u3089\u3001\u3082\u3063\u3068\u3082\u9069\u5207\u306a\u3084\u308a\u65b9\u3067\u3059\u3002\u4ed6\u306e\u5834\u5408\u3060\u3068\u3001\u30b0\u30eb\u30fc\u30d7\u3054\u3068\u306b\u8981\u7d20\u3092\u63cf\u304d\u305f\u304f\u306a\u308a\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u591a\u89d2\u5f62\u3092\u4f8b\u306b\u3068\u308b\u3068\u3001\u5404\u884c\u306f\u591a\u89d2\u5f62\u306e1\u3064\u306e\u9802\u70b9\u3092\u4e0e\u3048\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u306b\u306f\u3001`draw_group()`\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3079\u304d\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306f`GeomPolygon`\u306e\u7c21\u5358\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002\n\n``` r\nGeomSimplePolygon <- ggproto(\"GeomPolygon\", Geom,\n  required_aes = c(\"x\", \"y\"),\n  \n  default_aes = aes(\n    colour = NA, fill = \"grey20\", size = 0.5,\n    linetype = 1, alpha = 1\n  ),\n\n  draw_key = draw_key_polygon,\n\n  draw_group = function(data, panel_scales, coord) {\n    n <- nrow(data)\n    if (n <= 2) return(grid::nullGrob())\n\n    coords <- coord$transform(data, panel_scales)\n    # A polygon can only have a single colour, fill, etc, so take from first row\n    first_row <- coords[1, , drop = FALSE]\n\n    grid::polygonGrob(\n      coords$x, coords$y, \n      default.units = \"native\",\n      gp = grid::gpar(\n        col = first_row$colour,\n        fill = scales::alpha(first_row$fill, first_row$alpha),\n        lwd = first_row$size * .pt,\n        lty = first_row$linetype\n      )\n    )\n  }\n)\ngeom_simple_polygon <- function(mapping = NULL, data = NULL, stat = \"chull\",\n                                position = \"identity\", na.rm = FALSE, show.legend = NA, \n                                inherit.aes = TRUE, ...) {\n  layer(\n    geom = GeomSimplePolygon, mapping = mapping, data = data, stat = stat, \n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(na.rm = na.rm, ...)\n  )\n}\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  geom_simple_polygon(aes(colour = class), fill = NA)\n```\n\n![unnamed-chunk-13-1.png](https://qiita-image-store.s3.amazonaws.com/0/80093/49012187-ea11-754c-4b6f-a42549ad1724.png)\n\n\n\u3044\u304f\u3064\u304b\u7279\u7b46\u3059\u3079\u304d\u70b9\u304c\u3042\u308a\u307e\u3059\uff1a\n\n-   1\u3064\u306e\u884c\u306b\u3064\u304d1\u3064\u306e\u591a\u89d2\u5f62\u3092\u63cf\u304f\u306e\u3067\u306f\u306a\u304f1\u3064\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u3064\u304d1\u3064\u306e\u591a\u89d2\u5f62\u3092\u63cf\u304d\u305f\u3044\u306e\u3067\u3001`draw_layer()`\u306e\u4ee3\u308f\u308a\u306b`draw_group()`\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3044\u307e\u3059\u3002 \u30aa\u30ea\u30b8\u30ca\u30eb\u306e`GeomPolygon`\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u305f\u306a\u3089\u3001\u5b9f\u969b\u306b\u306f`geom_layer()`\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u6c17\u3065\u304f\u3067\u3057\u3087\u3046\u3002\u3053\u308c\u306f`polygonGrob`\u3092\u3064\u304f\u308b\u305f\u3081\u306e\u3044\u304f\u3064\u304b\u306e \u30c8\u30ea\u30c3\u30af\u304c1\u56de\u306e\u547c\u3073\u51fa\u3057\u3067\u8907\u6570\u306e\u591a\u89d2\u5f62\u3092\u751f\u6210\u3059\u308b\u304b\u3089\u3067\u3059\u3002\u3053\u308c\u306f\u304b\u306a\u308a\u8907\u96d1\u3067\u3059\u304c\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u512a\u308c\u3066\u3044\u307e\u3059\u3002\n\n-   \u3082\u3057\u30c7\u30fc\u30bf\u304c2\u3064\u4ee5\u4e0b\u306e\u70b9\u3057\u304b\u542b\u307e\u306a\u3044\u5834\u5408\u3001\u591a\u89d2\u5f62\u3092\u63cf\u3053\u3046\u3068\u3059\u308b\u610f\u5473\u306f\u306a\u3044\u306e\u3067\u3001`nullGrob()`\u3092\u8fd4\u3057\u307e\u3059\u3002 \u3053\u308c\u306f`NULL`\u306b\u76f8\u5f53\u3059\u308b\u3082\u306e\u3067\u3059\uff1a\u3053\u308c\u306f\u4f55\u3082\u63cf\u753b\u305b\u305a\u5834\u6240\u3082\u53d6\u3089\u306a\u3044grob\u3067\u3059\u3002\n\n-   \u5358\u4f4d\u306b\u3064\u3044\u3066\u6ce8\u610f\u3059\u3079\u304d\u306f\u3001`x`\u3068`y`\u304c\u300c\u30cd\u30a4\u30c6\u30a3\u30d6\u306a\u300d\u5358\u4f4d\u3067\u63cf\u304b\u308c\u308b\u3068\u3044\u3046\u70b9\u3067\u3059\uff08`pointGrob`\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e \u5358\u4f4d\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u306a\u306e\u3067\u3001\u4f55\u3082\u5909\u66f4\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff09\u3002`lwd`\u306f\u30dd\u30a4\u30f3\u30c8\u5358\u4f4d\u3067\u3059\u304c\u3001ggplot2\u306fmm\u5358\u4f4d\u3092\u4f7f\u3046\u306e\u3067\u3001 \u4fee\u6b63\u3059\u308b\u305f\u3081\u306e\u8981\u7d20`.pt`\u3092\u639b\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u65e2\u5b58\u306egeom\u304b\u3089\u306e\u7d99\u627f\n\n\u3068\u304d\u3069\u304d\u3001\u65e2\u5b58\u306egeom\u306b\u5c0f\u3055\u306a\u5909\u66f4\u3092\u52a0\u3048\u305f\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001`Geom`\u3092\u7d99\u627f\u3059\u308b\u3088\u308a\u3082\u3001\u65e2\u306b\u5b58\u5728\u3059\u308b\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001`StatChull`\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u3046\u307e\u304f\u52d5\u304f\u3088\u3046\u306b`GeomPolygon`\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3092\u5909\u66f4\u3057\u305f\u304f\u306a\u308a\u307e\u3059\uff1a\n\n``` r\nGeomPolygonHollow <- ggproto(\"GeomPolygonHollow\", GeomPolygon,\n  default_aes = aes(colour = \"black\", fill = NA, size = 0.5, linetype = 1,\n    alpha = NA)\n  )\ngeom_chull <- function(mapping = NULL, data = NULL, \n                       position = \"identity\", na.rm = FALSE, show.legend = NA, \n                       inherit.aes = TRUE, ...) {\n  layer(\n    stat = StatChull, geom = GeomPolygonHollow, data = data, mapping = mapping,\n    position = position, show.legend = show.legend, inherit.aes = inherit.aes,\n    params = list(na.rm = na.rm, ...)\n  )\n}\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point() + \n  geom_chull()\n```\n\n![unnamed-chunk-14-1.png](https://qiita-image-store.s3.amazonaws.com/0/80093/074c5229-5642-abe6-e408-80caa273d25d.png)\n\n\n\u3053\u306e\u3084\u308a\u65b9\u3067\u306f\u5225\u306egeom\u3092\u3053\u306estat\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u51f8\u5305\u304c\u304a\u304a\u3080\u306d\u591a\u89d2\u5f62\u306e\u6a5f\u80fd\u3068\u306a\u3063\u305f\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u9069\u5207\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\n### Exercises\n\n1.  `GeomPoint`\u3068`GeomSimplePoint`\u3092\u6bd4\u8f03\u3057\u306a\u3055\u3044\u3002\n2.  `GeomPolygon`\u3068`GeomSimplePolygon`\u3092\u6bd4\u8f03\u3057\u306a\u3055\u3044\u3002\n\n\u81ea\u5206\u306etheme\u3092\u3064\u304f\u308b\n-------------------\n\n\u3082\u3057\u81ea\u5206\u306e\u5b8c\u5168\u306atheme\u3092\u3064\u304f\u308d\u3046\u3068\u3059\u308b\u306a\u3089\u3001\u3044\u304f\u3064\u304b\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff1a\n\n-   \u65e2\u5b58\u306eelement\u306b\u5909\u66f4\u3092\u52a0\u3048\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\n-   theme\u306e\uff08\u307b\u307c\uff09\u3059\u3079\u3066\u306eelement\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b4\u3064\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u306aelement\n-   \u5b8c\u5168\u306aelement vs \u4e0d\u5b8c\u5168\u306aelement\n\n### element\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u65b0\u3057\u3044theme element\u3092\u8ffd\u52a0\u3059\u308b\u3068\u3001\u65e2\u5b58\u306e\u30c6\u30fc\u30de\u304b\u3089\u5024\u3092\u7d99\u627f\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306fkey\u306ecolour\u3092\u8d64\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u65e2\u5b58\u306efill\u3092\u7d99\u627f\u3057\u3066\u3044\u307e\u3059\u3002\n\n``` r\ntheme_grey()$legend.key\n```\n\n    #> List of 4\n    #>  $ fill    : chr \"grey95\"\n    #>  $ colour  : chr \"white\"\n    #>  $ size    : NULL\n    #>  $ linetype: NULL\n    #>  - attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n\n``` r\nnew_theme <- theme_grey() + theme(legend.key = element_rect(colour = \"red\"))\nnew_theme$legend.key\n```\n\n    #> List of 4\n    #>  $ fill    : chr \"grey95\"\n    #>  $ colour  : chr \"red\"\n    #>  $ size    : NULL\n    #>  $ linetype: NULL\n    #>  - attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n\n\u5b8c\u5168\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u306b\u306f`+`\u3067\u306f\u306a\u304f`%+replace%`\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n``` r\nnew_theme <- theme_grey() %+replace% theme(legend.key = element_rect(colour = \"red\"))\nnew_theme$legend.key\n```\n\n    #> List of 4\n    #>  $ fill    : NULL\n    #>  $ colour  : chr \"red\"\n    #>  $ size    : NULL\n    #>  $ linetype: NULL\n    #>  - attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n\n### \u30b0\u30ed\u30fc\u30d0\u30eb\u306aelement\n\n\u30d7\u30ed\u30c3\u30c8\u5168\u4f53\u306e\u898b\u3048\u65b9\u306b\u5f71\u97ff\u3059\u308belement\u304c4\u3064\u3042\u308a\u307e\u3059\uff1a\n\n| Element | Theme function   | \u6982\u8981                                                 |\n|---------|------------------|------------------------------------------------------|\n| line    | `element_line()` | \u3059\u3079\u3066\u306e\u7dda                                           |\n| rect    | `element_rect()` | \u3059\u3079\u3066\u306e\u9577\u65b9\u5f62                                       |\n| text    | `element_text()` | \u3059\u3079\u3066\u306e\u30c6\u30ad\u30b9\u30c8                                     |\n| title   | `element_text()` | \u30bf\u30a4\u30c8\u30eb\u8981\u7d20\uff08\u30d7\u30ed\u30c3\u30c8\u3001\u8ef8\u3001\u51e1\u4f8b\uff09\u306e\u3059\u3079\u3066\u306e\u30c6\u30ad\u30b9\u30c8 |\n\n\u3053\u308c\u3089\u306f\u3001\u3088\u308a\u8a73\u7d30\u306a\u8a2d\u5b9a\u304b\u3089\u7d99\u627f\u3055\u308c\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5c5e\u6027\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u5168\u4f53\u306ebackground\u306e\u8272\u3084\u5168\u4f53\u306e\u30d5\u30a9\u30f3\u30c8\u8a2d\u5b9a\uff08family\u3084size\uff09\u3092\u8a2d\u5b9a\u3059\u308b\u306e\u306b\u4fbf\u5229\u3067\u3059\u3002\n\n``` r\ndf <- data.frame(x = 1:3, y = 1:3)\nbase <- ggplot(df, aes(x, y)) + \n  geom_point() + \n  theme_minimal()\n\nbase\n```\n\n![axis-line-ex-1.png](https://qiita-image-store.s3.amazonaws.com/0/80093/ba653633-97bf-d8fe-37e9-0953b641d27c.png)\n\n\n``` r\nbase + theme(text = element_text(colour = \"red\"))\n```\n\n![axis-line-ex-2.png](https://qiita-image-store.s3.amazonaws.com/0/80093/9ad18d97-fa39-397d-9b49-dd2068e2873f.png)\n\n\n\u4e00\u822c\u7684\u306b\u306f\u3001\u3053\u308c\u3089\u306e\u5024\u3092\u5909\u66f4\u3059\u308b\u3068\u3053\u308d\u304b\u3089theme\u3065\u304f\u308a\u3092\u59cb\u3081\u308b\u3079\u304d\u3067\u3057\u3087\u3046\u3002\n\n### \u5b8c\u5168\u306aelement vs \u4e0d\u5b8c\u5168\u306aelement\n\n\u5b8c\u5168\u306atheme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u4e0d\u5b8c\u5168\u306atheme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u7406\u89e3\u3059\u308b\u306e\u306f\u6709\u7528\u3067\u3059\u3002\u5b8c\u5168\u306atheme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001`complete = TRUE`\u3092\u4ed8\u3051\u3066theme\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n`theme_grey()`\u3068`theme_bw()`\u306f\u5b8c\u5168\u306atheme\u95a2\u6570\u306e\u4f8b\u3067\u3059\u3002 `theme()`\u306f\u4e0d\u5b8c\u5168\u306atheme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u306a\u305c\u306a\u3089\u3001\u305d\u308c\u3089\u306f\u3001theme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u90e8\u5206\u7684\u306a\u5909\u66f4\u3092\u8868\u3059\u306e\u3067\u3042\u3063\u3066\u3001\u5b8c\u5168\u306atheme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u305d\u308c\u81ea\u4f53\u3092\u8fd4\u3059\u3082\u306e\u3067\u306f\u306a\u3044\u304b\u3089\u3067\u3059\u3002 \u4e0d\u5b8c\u5168\u306atheme\u3068\u5b8c\u5168\u306atheme\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\u3068\u3001\u5b8c\u5168\u306atheme\uff56\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u5b8c\u5168\u306atheme\u3068\u4e0d\u5b8c\u5168\u306atheme\u306fggplot\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u8db3\u3057\u3042\u308f\u3055\u308c\u305f\u6642\u306f\u3084\u3084\u7570\u306a\u308b\u6319\u52d5\u3092\u3057\u307e\u3059\u3002\n\n-   \u4e0d\u5b8c\u5168\u306atheme\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\u3068\u3001\u4eca\u306etheme\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u62e1\u5f35\u3057\u3001`theme()`\u306e\u547c\u3073\u51fa\u3057\u306b\u5b9a\u7fa9\u3055\u308c\u305felement\u306e\u5c5e\u6027\u306e\u307f\u3092\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n-   \u5b8c\u5168\u306atheme\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\u3068\u3001\u65e2\u5b58\u306etheme\u3092\u53d6\u308a\u9664\u304d\u3001\u65b0\u3057\u3044theme\u3092\u9069\u7528\u3057\u307e\u3059\u3002\n\n## \u65b0\u3057\u3044facetting\u3092\u3064\u304f\u308b\n\nggplot2\u62e1\u5f35\u306e\u3088\u308a\u56f0\u96e3\u306a\u8ab2\u984c\u306e1\u3064\u306f\u3001\u65b0\u3057\u3044facetting system\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u305d\u306e\u7406\u7531\u306f\u3001\u65b0\u3057\u3044facetting\u3092\u4f5c\u6210\u3059\u308b\u6642\u306b\u306f\u753b\u9762\u4e0a\u306e\u63cf\u753b\u306e\uff08\u307b\u307c\uff09\u3059\u3079\u3066\u306e\u8cac\u4efb\u3092\u8ca0\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u3068\u3001ggplot2\u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306e\u571f\u53f0\u3068\u306a\u3063\u3066\u3044\u308bgtable\u30d1\u30c3\u30b1\u30fc\u30b8\u3068grid\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u76f4\u63a5\u4f7f\u7528\u3057\u305f\u7d4c\u9a13\u304c\u3042\u308b\u4eba\u306f\u3042\u307e\u308a\u3044\u306a\u3044\u304b\u3089\u3067\u3059\u3002facetting\u306e\u62e1\u5f35\u62e1\u5f35\u306b\u6311\u6226\u3059\u308b\u3053\u3068\u3092\u6c7a\u3081\u305f\u5834\u5408\u306f\u3001\u3053\u308c\u3089\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u719f\u7df4\u3092\u5f97\u308b\u3053\u3068\u3092\u5f37\u304f\u63a8\u5968\u3057\u307e\u3059\u3002\n\nggplot2\u306eFacet\u30af\u30e9\u30b9\u306f\u3001\u5e45\u5e83\u3044\u30bf\u30b9\u30af\u306e\u8cac\u4efb\u3092\u8ca0\u3046\u975e\u5e38\u306b\u5f37\u529b\u306a\u30af\u30e9\u30b9\u3067\u3059\u3002\u30d5\u30a1\u30bb\u30c3\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e3b\u306a\u30bf\u30b9\u30af\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n* \u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5b9a\u7fa9\u3059\u308b\u3002\u3059\u306a\u308f\u3061\u3001\u30c7\u30fc\u30bf\u3092\u7570\u306a\u308b\u30d7\u30ed\u30c3\u30c8\u9818\u57df\uff08\u30d1\u30cd\u30eb\uff09\u306b\u5206\u5272\u3059\u308b\u3053\u3068\u3001\u304a\u3088\u3073\u3069\u306e\u30d1\u30cd\u30eb\u304c\u4f4d\u7f6e\u30b9\u30b1\u30fc\u30eb\u3092\u5171\u6709\u3059\u308b\u304b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n* \u30d7\u30ed\u30c3\u30c8\u30c7\u30fc\u30bf\u3092\u6b63\u3057\u3044\u30d1\u30cd\u30eb\u306b\u30de\u30c3\u30d7\u3059\u308b\u3002\u8907\u6570\u306e\u30d1\u30cd\u30eb\u306b\u30c7\u30fc\u30bf\u304c\u5b58\u5728\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f\u305d\u308c\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\uff08`facet_grid()`\u306e\u30de\u30fc\u30b8\u30f3\u306a\u3069\uff09\u3002\n* \u3059\u3079\u3066\u306e\u30d1\u30cd\u30eb\u3092\u6700\u7d42\u7684\u306agtable\u306b\u7d44\u307f\u7acb\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u8ef8\u3001\u30b9\u30c8\u30ea\u30c3\u30d7\uff08\u8a33\u6ce8\uff1afacet\u306e\u30e9\u30d9\u30eb\uff09\u3001\u88c5\u98fe\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u6a5f\u80fd\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u308c\u3089\u306e3\u3064\u306e\u30bf\u30b9\u30af\u306e\u4ed6\u306b\u3001\u9069\u5207\u306a\u30c7\u30d5\u30a9\u30eb\u30c8\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u8ffd\u52a0\u306e\u62e1\u5f35\u30dd\u30a4\u30f3\u30c8\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u4e00\u822c\u7684\u306b\u7121\u8996\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u5192\u967a\u7684\u306a\u958b\u767a\u8005\u306f\u305d\u308c\u3089\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3055\u3089\u306b\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff1a\n\n* \u5404\u30d1\u30cd\u30eb\u306e\u30b9\u30b1\u30fc\u30eb\u306e\u521d\u671f\u5316\u3068\u8abf\u6574\n* \u5404\u30d1\u30cd\u30eb\u306e\u524d\u5f8c\u306b\u88c5\u98fe\n* \u8ef8\u30e9\u30d9\u30eb\u306e\u63cf\u753b\n\n\u65b0\u3057\u3044facetting\u306e\u30af\u30e9\u30b9\u304c\u3069\u306e\u3088\u3046\u306b\u4f5c\u6210\u3055\u308c\u308b\u304b\u3092\u793a\u3059\u305f\u3081\u3001\u306f\u3058\u3081\u306f\u30b7\u30f3\u30d7\u30eb\u306b\u3001\u305d\u308c\u305e\u308c\u306e\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u9806\u756a\u306b\u5b9f\u884c\u3057\u3066\u3001\u30d7\u30ed\u30c3\u30c8\u30922\u3064\u306e\u30d1\u30cd\u30eb\u306b\u8907\u88fd\u3059\u308b\u3060\u3051\u306e`facet_duplicate()`\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u3088\u308a\u5f37\u529b\u306a\u53ef\u80fd\u6027\u306e\u3044\u304f\u3064\u304b\u3092\u793a\u3059\u305f\u3081\u306b\u305d\u308c\u3092\u5c11\u3057\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n### \u65b0\u3057\u3044\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u5b9a\u7fa9\u3092\u3064\u304f\u308b\n\nfacetting\u3068\u3044\u3046\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3067\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u306f\u3001\u30c7\u30fc\u30bf\u3068\u305d\u308c\u304c\u5e38\u99d0\u3059\u3079\u304d\u30d1\u30cd\u30eb\u3068\u306e\u9593\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3068\u3001\u3069\u306e\u30b9\u30b1\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u3079\u304d\u304b\u3092\u5b9a\u7fa9\u3059\u308b`data.frame`\u3067\u3059\u3002 \u5c11\u306a\u304f\u3068\u3082 `PANEL`\u3001` SCALE_X`\u3001 `SCALE_Y`\u306e\u5217\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u591a\u304f\u306e\u5834\u5408\u306f\u3055\u3089\u306b\u3001\u9069\u5207\u306a\u30d1\u30cd\u30eb\u306b\u30c7\u30fc\u30bf\u3092\u5272\u308a\u5f53\u3066\u308b\u306e\u306b\u5f79\u7acb\u3064\u5217\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff08\u4f8b\uff1a`facet_grid()`\u306f\u30d1\u30cd\u30eb\u305d\u308c\u305e\u308c\u306b\u7d10\u3065\u3044\u3066\u3044\u308b\u5909\u6570\u3092\u8fd4\u3057\u307e\u3059\uff09\u3002 \u3067\u306f\u3001\u91cd\u8907\u3057\u305f\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5b9a\u7fa9\u3059\u308b\u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\n```r\nlayout <- function(data, params) {\n  data.frame(PANEL = c(1L, 2L), SCALE_X = 1L, SCALE_Y = 1L)\n}\n```\n\n\u3053\u308c\u306f\u3001facetting\u304c\u5165\u529b\u30c7\u30fc\u30bf\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u95a2\u4fc2\u306a\u304f2\u3064\u306e\u30d1\u30cd\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u975e\u5e38\u306b\u7c21\u5358\u3067\u3059\u3002\n\n### \u30d1\u30cd\u30eb\u3078\u306e\u30c7\u30fc\u30bf\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n\n\u3069\u306e\u30c7\u30fc\u30bf\u304c\u3069\u3053\u306b\u884c\u304f\u304b\u77e5\u308b\u305f\u3081\u306b\u3001ggplot2\u306f\u305d\u306e\u30d1\u30cd\u30eb\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u3079\u304d\u30c7\u30fc\u30bf\u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\u3002\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u30b9\u30c6\u30c3\u30d7\u306e\u76ee\u7684\u306f\u3001`PANEL`\u5217\u3092\u305d\u306e\u30d1\u30cd\u30eb\u306b\u6240\u5c5e\u3059\u3079\u304d\u30c7\u30fc\u30bf\u3092\u7279\u5b9a\u3057\u3064\u3064\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u3067\u3059\u3002\n\n```r\nmapping <- function(data, layout, params) {\n  if (plyr::empty(data)) {\n    return(cbind(data, PANEL = integer(0)))\n  }\n  rbind(\n    cbind(data, PANEL = 1L),\n    cbind(data, PANEL = 2L)\n  )\n}\n```\n\n\n\u3055\u3066\u3001\u6700\u521d\u306b\u7a7a\u306e `data.frame`\u3092\u53d6\u5f97\u3057\u305f\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u3001\u3082\u3057\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u30c7\u30fc\u30bf\u3092\u8907\u88fd\u3057\u3066\u5143\u306e\u30c7\u30fc\u30bf\u3092\u6700\u521d\u306e\u30d1\u30cd\u30eb\u306b\u5272\u308a\u5f53\u3066\u3001\u65b0\u3057\u3044\u30c7\u30fc\u30bf\u30922\u756a\u76ee\u306e\u30d1\u30cd\u30eb\u306b\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\n\n### \u30d1\u30cd\u30eb\u306e\u914d\u7f6e\n\n\u4e0a\u8a18\u306e2\u3064\u306e\u95a2\u6570\u306f\u4e00\u898b\u7c21\u5358\u305d\u3046\u306b\u898b\u3048\u307e\u3057\u305f\u304c\u3001\u3053\u306e\u6700\u5f8c\u306e\u95a2\u6570\u306f\u3082\u3046\u5c11\u3057\u4f5c\u696d\u304c\u5fc5\u8981\u3067\u3059\u3002 \u79c1\u305f\u3061\u306e\u76ee\u6a19\u306f\u30012\u3064\u306e\u30d1\u30cd\u30eb\u3092\u8ef8\u3092\u631f\u3093\u3067\u5de6\u53f3\uff08\u307e\u305f\u306f\u4e0a\u4e0b\uff09\u306b\u63cf\u304f\u3053\u3068\u3067\u3059\u3002\n\n```r\nrender <- function(panels, layout, x_scales, y_scales, ranges, coord, data,\n                   theme, params) {\n  # Place panels according to settings\n  if (params$horizontal) {\n    # Put panels in matrix and convert to a gtable\n    panels <- matrix(panels, ncol = 2)\n    panel_table <- gtable::gtable_matrix(\"layout\", panels, \n      widths = unit(c(1, 1), \"null\"), heights = unit(1, \"null\"), clip = \"on\")\n    # Add spacing according to theme\n    panel_spacing <- if (is.null(theme$panel.spacing.x)) {\n      theme$panel.spacing\n    } else {\n      theme$panel.spacing.x\n    }\n    panel_table <- gtable::gtable_add_col_space(panel_table, panel_spacing)\n  } else {\n    panels <- matrix(panels, ncol = 1)\n    panel_table <- gtable::gtable_matrix(\"layout\", panels, \n      widths = unit(1, \"null\"), heights = unit(c(1, 1), \"null\"), clip = \"on\")\n    panel_spacing <- if (is.null(theme$panel.spacing.y)) {\n      theme$panel.spacing\n    } else {\n      theme$panel.spacing.y\n    }\n    panel_table <- gtable::gtable_add_row_space(panel_table, panel_spacing)\n  }\n  # Name panel grobs so they can be found later\n  panel_table$layout$name <- paste0(\"panel-\", c(1, 2))\n  \n  # Construct the axes\n  axes <- render_axes(ranges[1], ranges[1], coord, theme, \n    transpose = TRUE)\n\n  # Add axes around each panel\n  panel_pos_h <- panel_cols(panel_table)$l\n  panel_pos_v <- panel_rows(panel_table)$t\n  axis_width_l <- unit(grid::convertWidth(\n    grid::grobWidth(axes$y$left[[1]]), \"cm\", TRUE), \"cm\")\n  axis_width_r <- unit(grid::convertWidth(\n    grid::grobWidth(axes$y$right[[1]]), \"cm\", TRUE), \"cm\")\n  ## We do it reverse so we don't change the position of panels when we add axes\n  for (i in rev(panel_pos_h)) {\n    panel_table <- gtable::gtable_add_cols(panel_table, axis_width_r, i)\n    panel_table <- gtable::gtable_add_grob(panel_table, \n      rep(axes$y$right, length(panel_pos_v)), t = panel_pos_v, l = i + 1, \n      clip = \"off\")\n    panel_table <- gtable::gtable_add_cols(panel_table, axis_width_l, i - 1)\n    panel_table <- gtable::gtable_add_grob(panel_table, \n      rep(axes$y$left, length(panel_pos_v)), t = panel_pos_v, l = i, \n      clip = \"off\")\n  }\n  ## Recalculate as gtable has changed\n  panel_pos_h <- panel_cols(panel_table)$l\n  panel_pos_v <- panel_rows(panel_table)$t\n  axis_height_t <- unit(grid::convertHeight(\n    grid::grobHeight(axes$x$top[[1]]), \"cm\", TRUE), \"cm\")\n  axis_height_b <- unit(grid::convertHeight(\n    grid::grobHeight(axes$x$bottom[[1]]), \"cm\", TRUE), \"cm\")\n  for (i in rev(panel_pos_v)) {\n    panel_table <- gtable::gtable_add_rows(panel_table, axis_height_b, i)\n    panel_table <- gtable::gtable_add_grob(panel_table, \n      rep(axes$x$bottom, length(panel_pos_h)), t = i + 1, l = panel_pos_h, \n      clip = \"off\")\n    panel_table <- gtable::gtable_add_rows(panel_table, axis_height_t, i - 1)\n    panel_table <- gtable::gtable_add_grob(panel_table, \n      rep(axes$x$top, length(panel_pos_h)), t = i, l = panel_pos_h, \n      clip = \"off\")\n  }\n  panel_table\n}\n```\n\n### Facet\u30af\u30e9\u30b9\u306e\u7d44\u307f\u7acb\u3066\n\n\u901a\u5e38\u3001\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u306f `Geom`\u3068` Stat`\u306e\u5834\u5408\u3068\u540c\u3058\u3088\u3046\u306b\u30af\u30e9\u30b9\u5b9a\u7fa9\u306e\u4e2d\u3067\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002 \u3053\u3053\u3067\u79c1\u305f\u3061\u306f\u305d\u308c\u3092\u5206\u3051\u3066\u3001\u305d\u308c\u305e\u308c\u3092\u9806\u756a\u306b\u5b9a\u7fa9\u3057\u3066\u3044\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002 \u6b8b\u3063\u3066\u3044\u308b\u306e\u306f\u3001\u3053\u308c\u3089\u306e\u95a2\u6570\u3092\u9069\u5207\u306a\u30e1\u30bd\u30c3\u30c9\u306b\u5272\u308a\u5f53\u3066\u308b\u306e\u3068\u540c\u6642\u306b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u4f5c\u308b\u3053\u3068\u3067\u3059\u3002\n\n```r\n# Constructor: shrink is required to govern whether scales are trained on \n# Stat-transformed data or not.\nfacet_duplicate <- function(horizontal = TRUE, shrink = TRUE) {\n  ggproto(NULL, FacetDuplicate,\n    shrink = shrink,\n    params = list(\n      horizontal = horizontal\n    )\n  )\n}\n\nFacetDuplicate <- ggproto(\"FacetDuplicate\", Facet,\n  compute_layout = layout,\n  map_data = mapping,\n  draw_panels = render\n)\n```\n\n\u3053\u308c\u3067\u3059\u3079\u3066\u7d44\u307f\u7acb\u3066\u3089\u308c\u305f\u306e\u3067\u3001\u3055\u3063\u305d\u304f\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```r\np <- ggplot(mtcars, aes(x = hp, y = mpg)) + geom_point()\np\n```\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/80093/d5cbd6a0-0590-b1a2-cfbf-b2ac9c50908a.png)\n\n```r\np + facet_duplicate()\n```\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/80093/0ac07d15-37f5-3817-61ca-417e4533db29.png)\n\n\n\n### \u3082\u3063\u3068facets\u3067\u3044\u308d\u3044\u308d\u3084\u3063\u3066\u307f\u308b\n\n\u4e0a\u8a18\u306e\u4f8b\u306f\u307b\u3068\u3093\u3069\u5f79\u306b\u7acb\u3061\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u79c1\u305f\u3061\u306f\u3053\u308c\u304b\u3089\u3001\u5b9f\u969b\u306b\u6709\u7528\u306a\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306b\u3053\u308c\u3092\u62e1\u5f35\u3059\u308b\u3053\u3068\u3092\u8a66\u307f\u3066\u3044\u304d\u307e\u3059\u3002 Y\u8ef8\u3092\u5909\u63db\u3057\u305f\u30d1\u30cd\u30eb\u3092\u8ffd\u52a0\u3059\u308bfacetting\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a\n\n```r\nlibrary(scales)\n\nfacet_trans <- function(trans, horizontal = TRUE, shrink = TRUE) {\n  ggproto(NULL, FacetTrans,\n    shrink = shrink,\n    params = list(\n      trans = scales::as.trans(trans),\n      horizontal = horizontal\n    )\n  )\n}\n\nFacetTrans <- ggproto(\"FacetTrans\", Facet,\n  # Almost as before but we want different y-scales for each panel\n  compute_layout = function(data, params) {\n    data.frame(PANEL = c(1L, 2L), SCALE_X = 1L, SCALE_Y = c(1L, 2L))\n  },\n  # Same as before\n  map_data = function(data, layout, params) {\n    if (plyr::empty(data)) {\n      return(cbind(data, PANEL = integer(0)))\n    }\n    rbind(\n      cbind(data, PANEL = 1L),\n      cbind(data, PANEL = 2L)\n    )\n  },\n  # This is new. We create a new scale with the defined transformation\n  init_scales = function(layout, x_scale = NULL, y_scale = NULL, params) {\n    scales <- list()\n    if (!is.null(x_scale)) {\n      scales$x <- plyr::rlply(max(layout$SCALE_X), x_scale$clone())\n    }\n    if (!is.null(y_scale)) {\n      y_scale_orig <- y_scale$clone()\n      y_scale_new <- y_scale$clone()\n      y_scale_new$trans <- params$trans\n      # Make sure that oob values are kept\n      y_scale_new$oob <- function(x, ...) x\n      scales$y <- list(y_scale_orig, y_scale_new)\n    }\n    scales\n  },\n  # We must make sure that the second scale is trained on transformed data\n  train_scales = function(x_scales, y_scales, layout, data, params) {\n    # Transform data for second panel prior to scale training\n    if (!is.null(y_scales)) {\n      data <- lapply(data, function(layer_data) {\n        match_id <- match(layer_data$PANEL, layout$PANEL)\n        y_vars <- intersect(y_scales[[1]]$aesthetics, names(layer_data))\n        trans_scale <- layer_data$PANEL == 2L\n        for (i in y_vars) {\n          layer_data[trans_scale, i] <- y_scales[[2]]$transform(layer_data[trans_scale, i])\n        }\n        layer_data\n      })\n    }\n    Facet$train_scales(x_scales, y_scales, layout, data, params)\n  },\n  # this is where we actually modify the data. It cannot be done in $map_data as that function\n  # doesn't have access to the scales\n  finish_data = function(data, layout, x_scales, y_scales, params) {\n    match_id <- match(data$PANEL, layout$PANEL)\n    y_vars <- intersect(y_scales[[1]]$aesthetics, names(data))\n    trans_scale <- data$PANEL == 2L\n    for (i in y_vars) {\n      data[trans_scale, i] <- y_scales[[2]]$transform(data[trans_scale, i])\n    }\n    data\n  },\n  # A few changes from before to accomodate that axes are now not duplicate of each other\n  # We also add a panel strip to annotate the different panels\n  draw_panels = function(panels, layout, x_scales, y_scales, ranges, coord,\n                         data, theme, params) {\n    # Place panels according to settings\n    if (params$horizontal) {\n      # Put panels in matrix and convert to a gtable\n      panels <- matrix(panels, ncol = 2)\n      panel_table <- gtable::gtable_matrix(\"layout\", panels, \n        widths = unit(c(1, 1), \"null\"), heights = unit(1, \"null\"), clip = \"on\")\n      # Add spacing according to theme\n      panel_spacing <- if (is.null(theme$panel.spacing.x)) {\n        theme$panel.spacing\n      } else {\n        theme$panel.spacing.x\n      }\n      panel_table <- gtable::gtable_add_col_space(panel_table, panel_spacing)\n    } else {\n      panels <- matrix(panels, ncol = 1)\n      panel_table <- gtable::gtable_matrix(\"layout\", panels, \n        widths = unit(1, \"null\"), heights = unit(c(1, 1), \"null\"), clip = \"on\")\n      panel_spacing <- if (is.null(theme$panel.spacing.y)) {\n        theme$panel.spacing\n      } else {\n        theme$panel.spacing.y\n      }\n      panel_table <- gtable::gtable_add_row_space(panel_table, panel_spacing)\n    }\n    # Name panel grobs so they can be found later\n    panel_table$layout$name <- paste0(\"panel-\", c(1, 2))\n    \n    # Construct the axes\n    axes <- render_axes(ranges[1], ranges, coord, theme, \n      transpose = TRUE)\n  \n    # Add axes around each panel\n    grobWidths <- function(x) {\n      unit(vapply(x, function(x) {\n        grid::convertWidth(\n          grid::grobWidth(x), \"cm\", TRUE)\n      }, numeric(1)), \"cm\")\n    }\n    panel_pos_h <- panel_cols(panel_table)$l\n    panel_pos_v <- panel_rows(panel_table)$t\n    axis_width_l <- grobWidths(axes$y$left)\n    axis_width_r <- grobWidths(axes$y$right)\n    ## We do it reverse so we don't change the position of panels when we add axes\n    for (i in rev(seq_along(panel_pos_h))) {\n      panel_table <- gtable::gtable_add_cols(panel_table, axis_width_r[i], panel_pos_h[i])\n      if (params$horizontal) {\n        panel_table <- gtable::gtable_add_grob(panel_table, \n          rep(axes$y$right[i], length(panel_pos_v)), t = panel_pos_v, l = panel_pos_h[i] + 1, \n          clip = \"off\")\n      } else {\n        panel_table <- gtable::gtable_add_grob(panel_table, \n          rep(axes$y$right, length(panel_pos_v)), t = panel_pos_v, l = panel_pos_h[i] + 1, \n          clip = \"off\")\n      }\n      panel_table <- gtable::gtable_add_cols(panel_table, axis_width_l[i], panel_pos_h[i] - 1)\n      if (params$horizontal) {\n        panel_table <- gtable::gtable_add_grob(panel_table, \n        rep(axes$y$left[i], length(panel_pos_v)), t = panel_pos_v, l = panel_pos_h[i], \n        clip = \"off\")\n      } else {\n        panel_table <- gtable::gtable_add_grob(panel_table, \n        rep(axes$y$left, length(panel_pos_v)), t = panel_pos_v, l = panel_pos_h[i], \n        clip = \"off\")\n      }\n    }\n    ## Recalculate as gtable has changed\n    panel_pos_h <- panel_cols(panel_table)$l\n    panel_pos_v <- panel_rows(panel_table)$t\n    axis_height_t <- unit(grid::convertHeight(\n      grid::grobHeight(axes$x$top[[1]]), \"cm\", TRUE), \"cm\")\n    axis_height_b <- unit(grid::convertHeight(\n      grid::grobHeight(axes$x$bottom[[1]]), \"cm\", TRUE), \"cm\")\n    for (i in rev(panel_pos_v)) {\n      panel_table <- gtable::gtable_add_rows(panel_table, axis_height_b, i)\n      panel_table <- gtable::gtable_add_grob(panel_table, \n        rep(axes$x$bottom, length(panel_pos_h)), t = i + 1, l = panel_pos_h, \n        clip = \"off\")\n      panel_table <- gtable::gtable_add_rows(panel_table, axis_height_t, i - 1)\n      panel_table <- gtable::gtable_add_grob(panel_table, \n        rep(axes$x$top, length(panel_pos_h)), t = i, l = panel_pos_h, \n        clip = \"off\")\n    }\n    \n    # Add strips\n    strips <- render_strips(\n      x = data.frame(name = c(\"Original\", paste0(\"Transformed (\", params$trans$name, \")\"))),\n      labeller = label_value, theme = theme)\n    \n    panel_pos_h <- panel_cols(panel_table)$l\n    panel_pos_v <- panel_rows(panel_table)$t\n    strip_height <- unit(grid::convertHeight(\n      grid::grobHeight(strips$x$top[[1]]), \"cm\", TRUE), \"cm\")\n    for (i in rev(seq_along(panel_pos_v))) {\n      panel_table <- gtable::gtable_add_rows(panel_table, strip_height, panel_pos_v[i] - 1)\n      if (params$horizontal) {\n        panel_table <- gtable::gtable_add_grob(panel_table, strips$x$top, \n          t = panel_pos_v[i], l = panel_pos_h, clip = \"off\")\n      } else {\n        panel_table <- gtable::gtable_add_grob(panel_table, strips$x$top[i], \n          t = panel_pos_v[i], l = panel_pos_h, clip = \"off\")\n      }\n    }\n    \n    \n    panel_table\n  }\n)\n```\n\n\u975e\u5e38\u306b\u660e\u767d\u306a\u3088\u3046\u306b\u3001 `draw_panel`\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u3044\u3063\u305f\u3093\u8907\u6570\u306e\u53ef\u80fd\u6027\u3092\u8003\u616e\u306b\u5165\u308c\u308b\u3068\u3001\u975e\u5e38\u306b\u6271\u3044\u306b\u304f\u304f\u306a\u308a\u307e\u3059\u3002 \u6c34\u5e73\u30ec\u30a4\u30a2\u30a6\u30c8\u3068\u5782\u76f4\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u4e21\u65b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u3044\u3068\u3044\u3046\u4e8b\u5b9f\u306f\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306eif/else\u30d6\u30ed\u30c3\u30af\u306e\u591a\u7528\u306b\u3064\u306a\u304c\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002facets\u306e\u62e1\u5f35\u3092\u66f8\u304f\u3068\u304d\u306b\u306f\u3001\u4e00\u822c\u306b\u3001\u3053\u308c\u306f\u5927\u304d\u306a\u8ab2\u984c\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8a18\u8ff0\u3059\u308b\u969b\u306b\u975e\u5e38\u306b\u7d30\u5fc3\u306e\u6ce8\u610f\u3092\u6255\u3046\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u304a\u3057\u3083\u3079\u308a\u306f\u7d42\u308f\u308a\u3067\u3059\u3002\u65b0\u3057\u3044facetting\u62e1\u5f35\u6a5f\u80fd\u304c\u3046\u307e\u304f\u52d5\u304f\u304b\u898b\u3066\u307f\u307e\u3057\u3087\u3046\uff1a\n\n```r\nggplot(mtcars, aes(x = hp, y = mpg)) + geom_point() + facet_trans('sqrt')\n```\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/80093/94f09dcc-5ef0-be5c-a5b2-6e52c4e8375e.png)\n\n### \u65e2\u5b58\u306efacet\u95a2\u6570\u306e\u62e1\u5f35\n\nfacet\u30af\u30e9\u30b9\u306e\u63cf\u753b\u90e8\u5206\u306f\u96e3\u3057\u3044\u958b\u767a\u30b9\u30c6\u30c3\u30d7\u3067\u3042\u308b\u3053\u3068\u304c\u591a\u3044\u305f\u3081\u3001\u65e2\u5b58\u306efacetting\u30af\u30e9\u30b9\u306b\u4e57\u3063\u304b\u3063\u3066\u69d8\u3005\u306a\u65b0\u3057\u3044faceting\u3092\u4f5c\u308a\u4e0a\u3052\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\u4ee5\u4e0b\u3067\u306f\u3001`facet_wrap()`\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u3001\u5165\u529b\u30c7\u30fc\u30bf\u3092\u591a\u6570\u306e\u30d1\u30cd\u30eb\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u5206\u5272\u3059\u308b`facet_bootstarp()`\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\n```r\nfacet_bootstrap <- function(n = 9, prop = 0.2, nrow = NULL, ncol = NULL, \n  scales = \"fixed\", shrink = TRUE, strip.position = \"top\") {\n  \n  facet <- facet_wrap(~.bootstrap, nrow = nrow, ncol = ncol, scales = scales, \n    shrink = shrink, strip.position = strip.position)\n  facet$params$n <- n\n  facet$params$prop <- prop\n  ggproto(NULL, FacetBootstrap,\n    shrink = shrink,\n    params = facet$params\n  )\n}\n\nFacetBootstrap <- ggproto(\"FacetBootstrap\", FacetWrap,\n  compute_layout = function(data, params) {\n    id <- seq_len(params$n)\n\n    dims <- wrap_dims(params$n, params$nrow, params$ncol)\n    layout <- data.frame(PANEL = factor(id))\n\n    if (params$as.table) {\n      layout$ROW <- as.integer((id - 1L) %/% dims[2] + 1L)\n    } else {\n      layout$ROW <- as.integer(dims[1] - (id - 1L) %/% dims[2])\n    }\n    layout$COL <- as.integer((id - 1L) %% dims[2] + 1L)\n\n    layout <- layout[order(layout$PANEL), , drop = FALSE]\n    rownames(layout) <- NULL\n\n    # Add scale identification\n    layout$SCALE_X <- if (params$free$x) id else 1L\n    layout$SCALE_Y <- if (params$free$y) id else 1L\n\n    cbind(layout, .bootstrap = id)\n  },\n  map_data = function(data, layout, params) {\n    if (is.null(data) || nrow(data) == 0) {\n      return(cbind(data, PANEL = integer(0)))\n    }\n    n_samples <- round(nrow(data) * params$prop)\n    new_data <- lapply(seq_len(params$n), function(i) {\n      cbind(data[sample(nrow(data), n_samples), , drop = FALSE], PANEL = i)\n    })\n    do.call(rbind, new_data)\n  }\n)\n\nggplot(diamonds, aes(carat, price)) + \n  geom_point(alpha = 0.1) + \n  facet_bootstrap(n = 9, prop = 0.05)\n```\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/80093/fa47334d-20fd-123d-d4c4-e836039672c2.png)\n\n\u4e0a\u8a18\u3067\u884c\u3063\u3066\u3044\u308b\u51e6\u7406\u306f\u3001 `compute_layout`\u3068` map_data`\u30e1\u30bd\u30c3\u30c9\u3092\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30c8\u3057\u3001\u30c7\u30fc\u30bf\u3092\u5909\u6570\u3067\u5206\u5272\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u57fa\u3065\u3044\u3066\u30e9\u30f3\u30c0\u30e0\u306b\u884c\u3092\u5404\u30d1\u30cd\u30eb\u306b\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u3067\u3059\uff08`n`\u306f\u30d1\u30cd\u30eb\u306e\u6570\u3092\u3001 `prop`\u306f\u5404\u30d1\u30cd\u30eb\u306e\u30c7\u30fc\u30bf\u306e\u5272\u5408\u3092\u6c7a\u5b9a\u3059\u308b\uff09\u3002 \u3053\u3053\u3067\u91cd\u8981\u306a\u306e\u306f `compute_layout`\u306b\u3088\u3063\u3066\u8fd4\u3055\u308c\u305f\u30ec\u30a4\u30a2\u30a6\u30c8\u304c` FacetWrap`\u306e\u305f\u3081\u306e\u6709\u52b9\u306a\u30ec\u30a4\u30a2\u30a6\u30c8\u3067\u3042\u308b\u3053\u3068\u3067\u3059\u3002\u306a\u305c\u306a\u3089\u3001\u79c1\u305f\u3061\u306f`FacetWrap`\u306e` draw_panel`\u30e1\u30bd\u30c3\u30c9\u304c\u3059\u3079\u3066\u306e\u4ed5\u4e8b\u3092\u679c\u305f\u3057\u3066\u304f\u308c\u308b\u3053\u3068\u3092\u5f53\u3066\u306b\u3057\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u3002 \u3057\u305f\u304c\u3063\u3066\u3001FacetWrap\u307e\u305f\u306fFacetGrid\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u3001\u30ec\u30a4\u30a2\u30a6\u30c8\u4ed5\u69d8\u306e\u6027\u8cea\u3092\u5fc5\u305a\u7406\u89e3\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n### \u7df4\u7fd2\n\n1. FacetTrans\u3092\u66f8\u304d\u63db\u3048\u3066\u3001\u5909\u63db\u306e\u30d9\u30af\u30c8\u30eb\u3092\u53d6\u5f97\u3057\u3001\u5909\u63db\u3054\u3068\u306b\u8ffd\u52a0\u306e\u30d1\u30cd\u30eb\u3092\u4f5c\u6210\u3057\u306a\u3055\u3044\u3002\n2. FacetWrap\u5b9f\u88c5\u306b\u57fa\u3065\u3044\u3066\u3001strip.placement\u30c6\u30fc\u30de\u306e\u8a2d\u5b9a\u3092\u8003\u616e\u306b\u5165\u308c\u3066facetTrans\u3092\u66f8\u304d\u63db\u3048\u306a\u3055\u3044\u3002\n3. FacetBootstrap\u306b\u306f\u3001\u7279\u306b\u540c\u3058\u30c7\u30fc\u30bf\u3092\u6301\u3064\u8907\u6570\u306e\u30ec\u30a4\u30e4\u30fc\u3092\u8ffd\u52a0\u3059\u308b\u969b\u306b\u3069\u306e\u3088\u3046\u306a\u6ce8\u610f\u70b9\u304c\u3042\u308b\u304b\u8003\u3048\u306a\u3055\u3044\u3002\n", "tags": ["R", "ggplot2"]}