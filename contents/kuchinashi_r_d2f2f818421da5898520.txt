{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u79c1\u306f\u307e\u3060\u307e\u3060\u30c6\u30b9\u30c8\u521d\u5fc3\u8005\u3067\u3059\uff0e\n\u5358\u4f53\u30c6\u30b9\u30c8\u3059\u3089\u308d\u304f\u306b\u66f8\u3044\u305f\u3053\u3068\u304c\u7121\u3044\u306e\u3067\uff0c\u7686\u69d8\u306e\u77e5\u6075\u306a\u3069\u8272\u3005\u304a\u8cb8\u3057\u9802\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\uff0e\n\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u3082\u9060\u616e\u7121\u304f\u3069\u3046\u305e\uff0e\n\u3053\u3053\u306b\u8a18\u8f09\u3057\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u306f NYSL \u3067\u3069\u3046\u305e\uff0e\n\nEspresso\u3068\u306f\n2013.10\u306bGoogle\u304c\u516c\u958b\u3057\u305fAndroid\u7528\u306eUI\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u306d\uff0e\n\u307e\u3060\u516c\u958b\u3055\u308c\u3066\u9593\u3082\u306a\u3044\u3067\u304d\u305f\u3066\u30db\u30e4\u30db\u30e4\u306e\u6fc0\u71b1\u30c6\u30b9\u30c8\u30c4\u30fc\u30eb\u3067\u3059\uff08\u30a8\u30b9\u30d7\u30ec\u30c3\u30bd\u3060\u3051\u306b\uff09\n\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u30a2\u30af\u30b7\u30e7\u30f3\u3060\u3063\u305f\u308a\u8a55\u4fa1\u3057\u305f\u308a\uff0c\u51e6\u7406\u304c\u7d42\u308f\u308b\u307e\u3067\u5f85\u3063\u3066\u30c6\u30b9\u30c8\u3057\u305f\u308a\u3068\u3044\u3046\u3053\u3068\u3092\u81ea\u52d5\u3067\u3084\u3063\u3066\u304f\u308c\u307e\u3059\uff0e\n\nEspresso\u5c0e\u5165\n\u3053\u3053\u304b\u3089Espresso\u306ejar\u3092\u843d\u3068\u3057\u3066\uff0c\u305d\u306e\u307e\u307e\u30c6\u30b9\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306elibs\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u7a81\u3063\u8fbc\u3093\u3067\u7d42\u308f\u308a\u3067\u3059\uff0e\nhttps://code.google.com/p/android-test-kit/source/browse/#git%2Fbin%2Fespresso-standalone\n\nEspresso\u524d\u6e96\u5099\n\nAndroidManifest.xml\u306e\u30bf\u30b0\u306e\u4e2d\u306b\u4e0b\u8a18\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff0e\ntargetPackage\u306e\u3068\u3053\u308d\u306f\u30c6\u30b9\u30c8\u5bfe\u8c61\u3068\u306a\u308b\u30a2\u30d7\u30ea\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\nandroid.permission.SET_ANIMATION_SCALE \u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306f\uff0c\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u901f\u5ea6\u3092\u5909\u66f4\u3059\u308b\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3067\u3059\uff0e\n\u6bce\u56de\u958b\u767a\u8005\u30aa\u30d7\u30b7\u30e7\u30f3\u304b\u3089\u5909\u66f4\u3059\u308b\u306e\u306f\u9762\u5012\u306a\u306e\u3067\uff0c\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u5b9f\u884c\u524d\u306b\u5909\u66f4\u3092\u884c\u3044\uff0c\u30c6\u30b9\u30c8\u5f8c\u306b\u5143\u306b\u623b\u3059\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\n\nAndroidManifest.xml\n<uses-permission android:name=\"android.permission.SET_ANIMATION_SCALE\" />\n<instrumentation\n    android:name=\"com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner\"\n    android:targetPackage=\"com.example.appli\" />\n\n\n\nInstrumentation runner\u3092\u5909\u66f4\u3057\u307e\u3059\n\nEclipse\u306e\u30c6\u30b9\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u5b9f\u884c(run)\u2192\u5b9f\u884c\u306e\u69cb\u6210(Run Configuration)\u3092\u958b\u304d\u307e\u3059\uff0e\n\u5de6\u30da\u30a4\u30f3\u306e Android JUnit Test \u304b\u3089\uff0c\u76ee\u7684\u306e\u30c6\u30b9\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9078\u629e\u3057\u307e\u3059\uff0e\n\uff08\u4e00\u89a7\u306b\u7121\u3044\u5834\u5408\u306f\u5de6\u4e0a\u306e\u30a2\u30a4\u30b3\u30f3\u304b\u3089\u65b0\u898f\u4f5c\u6210\u3092\u884c\u3044\u307e\u3059\uff0e\uff09\n\u30c6\u30b9\u30c8(Test)\u30bf\u30d6\u306eRun all tests in the selected project, or package\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u307e\u3059\uff0e\n\u65b0\u898f\u4f5c\u6210\u3057\u305f\u5834\u5408\u306f\uff0c\u540d\u524d\u3092\u8a2d\u5b9a\u3057\uff0c\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9078\u629e\u3057\u307e\u3059\uff0e\nInstrumentation runner:\u3067\u300ccom.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner\u300d\u3092\u9078\u629e\u3057\u307e\u3059\uff0e\n\u9069\u7528(Apply)\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u5b8c\u4e86\u3067\u3059\uff0e\n\n\u306a\u304a\uff0c\u3069\u3046\u3084\u3089GoogleInstrumentationTestRunner\u3078\u5909\u66f4\u3059\u308b\u3068\uff0c\u30af\u30e9\u30b9\u5358\u4f4d\u3084\u30e1\u30bd\u30c3\u30c9\u5358\u4f4d\u3067\u306e\u30c6\u30b9\u30c8\u304c\u3067\u304d\u306a\u304f\u306a\u308b\u3088\u3046\u3067\u3059\uff0e\n\nActivity\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\nsetUp\u30e1\u30bd\u30c3\u30c9\n\n\u3053\u3053\u306f\u30c6\u30b9\u30c8\u3092\u958b\u59cb\u3059\u308b\u524d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\uff0e\n\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u305fgetActivity()\u3092\u30b3\u30fc\u30eb\u3057\u3066Activity\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e\u3053\u306e\u3068\u304d\uff0cActivity\u3082\u4f5c\u6210\u3055\u308c\u307e\u3059\uff0e\n\u3055\u3089\u306bTestUtils#toggleAnimationEnable()\u3092\u30b3\u30fc\u30eb\u307e\u3059\uff0e\uff08TestUtils.java\u306b\u3064\u3044\u3066\u306f\u4e0b\u8a18\u53c2\u7167\uff09\n\ngetActivity\u30e1\u30bd\u30c3\u30c9\n\ngetActivity()\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u3053\u308c\u306f\u547c\u3073\u51fa\u3059Activity\u3078Intent\u60c5\u5831\u306a\u3069\u3092\u6e21\u3057\u305f\u3044\u5834\u5408\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308c\u3070\u826f\u304f\uff0c\u4f55\u3082\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u7121\u3044\u5834\u5408\u306f\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u306a\u304f\u3066\u69cb\u3044\u307e\u305b\u3093\uff0e\n\u4eca\u56de\u306f Intent\u306bBundle\u3067\u60c5\u5831\u3092\u6e21\u3057\u305f\u3044\u3068\u4eee\u5b9a\u3057\u3066\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3044\u307e\u3059\uff0e\n\ntearDown\u30e1\u30bd\u30c3\u30c9\n\ntearDown()\u306f\u30c6\u30b9\u30c8\u7d42\u4e86\u5f8c\u306b\u884c\u3046\u51e6\u7406\u3067\u3059\uff0e\n\u4eca\u56de\u306fsetUp()\u3067\u7121\u52b9\u5316\u3057\u305f\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u3053\u3053\u3067\u6709\u52b9\u5316\uff08\u5143\u306b\u3082\u3069\uff09\u3057\u307e\u3059\uff0e\n\ntest*\u30e1\u30bd\u30c3\u30c9\n\n\u5f8c\u306f\u901a\u5e38\u306eJUnit\u540c\u69d8\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u30b7\u30ca\u30ea\u30aa\u3092\u66f8\u3044\u3066\u3044\u304f\u3060\u3051\u3067\u3059\uff0e\n\u304c\uff0cActivity\u8d77\u52d5\uff5e\u7d42\u4e86\u306e1\u30b5\u30a4\u30af\u30eb\u30921\u30b7\u30ca\u30ea\u30aa\u30c6\u30b9\u30c8\u3068\u3057\u3066\uff0c\u8907\u6570\u306e\u30b7\u30ca\u30ea\u30aa\u30c6\u30b9\u30c8\u3092\u3057\u305f\u3044\u5834\u5408\u306f\uff0c\u540c\u3058\u3088\u3046\u306b\u5225\u306eTest\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\nActivityTest.java\n\npackage com.example.appli;\n\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.test.ActivityInstrumentationTestCase2;\n\nimport com.example.appli.TestUtils;\n\npublic class MainActivityTest extends ActivityInstrumentationTestCase2<TestActivity> {\n    private static final String TAG = MainActivityTest.class.getSimpleName();\n    private Activity mActivity;\n\n    public MainActivityTest() {\n        super(TestActivity.class);\n    }\n\n    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        mActivity = getActivity();\n        TestUtils.toggleAnimationEnable(mActivity, TAG, false);\n    }\n\n    @Override\n    public TestActivity getActivity() {\n        Intent intent = new Intent();\n        intent.putExtra(\"key\", \"value\");\n        setActivityIntent(intent);\n        return super.getActivity();\n    }\n\n    @Override\n    protected void tearDown() throws Exception {\n        TestUtils.toggleAnimationEnable(mActivity, TAG, true);\n        super.tearDown();\n    }\n\n    public void testStory() throws Exception {\n        // TODO \u3053\u3053\u306b\u30c6\u30b9\u30c8\u3092\u66f8\u304f\n    }\n}\n\n\n\nTestUtils (\u30b3\u30d4\u30da\u3067OK\u3067\u3059)\n\u30a6\u30a3\u30f3\u30c9\u30a6\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30b9\u30b1\u30fc\u30eb\u3068\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30b9\u30b1\u30fc\u30eb\u3092\u5909\u66f4\u3057\u307e\u3059\uff0e\n\u4e0a\u8a18\u306eMainActivityTest.java\u3067\u306fsetUp()\u3068tearDown()\u304b\u3089\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\uff0e\nhttps://code.google.com/p/android-test-kit/wiki/DisablingAnimations \u306e\u60c5\u5831\u3092\u5143\u306b\u5c11\u3057\u3060\u3051\u624b\u3092\u52a0\u3048\u3066\u3044\u307e\u3059\uff0e\n\nTestUtils.java\n\npackage com.example.appli;\n\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\n\nimport android.content.Context;\nimport android.content.pm.PackageManager;\nimport android.os.IBinder;\nimport android.util.Log;\n\npublic final class TestUtils {\n\n    private static final int RESULT_ENABLED = 0;\n    private static final int RESULT_DISABLED = 1;\n    private static final int RESULT_NG = -1;\n\n    /**\n     * Espresso\u3067UI\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306f setUp \u30e1\u30bd\u30c3\u30c9\u3067\u7121\u52b9\u306b\u3057\uff0ctearDown\u3067\u6709\u52b9\u306b\u3057\u3066\u304f\u3060\u3055\u3044\n     * \n     * @param context\n     * @param TAG\n     * @param isEnable\n     */\n    public static void toggleAnimationEnable(Context context, String TAG, boolean isEnable) {\n        int permStatus = context\n                .checkCallingOrSelfPermission(\"android.permission.SET_ANIMATION_SCALE\");\n        if (permStatus == PackageManager.PERMISSION_GRANTED) {\n            int result;\n            if ((result = reflectivelyToggleAnimation(TAG, isEnable)) != RESULT_NG) {\n                if (result == RESULT_ENABLED) {\n                    Log.i(TAG, \"All animations enabled.\");\n                } else {\n                    Log.i(TAG, \"All animations disabled.\");\n                }\n            } else {\n                Log.i(TAG, \"Could not toggle animations.\");\n            }\n        } else {\n            Log.i(TAG, \"Cannot disable animations due to lack of permission.\");\n        }\n    }\n\n    private static int reflectivelyToggleAnimation(String TAG, boolean isEnable) {\n        try {\n            Class<?> windowManagerStubClazz = Class.forName(\"android.view.IWindowManager$Stub\");\n            Method asInterface = windowManagerStubClazz.getDeclaredMethod(\"asInterface\",\n                    IBinder.class);\n            Class<?> serviceManagerClazz = Class.forName(\"android.os.ServiceManager\");\n            Method getService = serviceManagerClazz.getDeclaredMethod(\"getService\", String.class);\n            Class<?> windowManagerClazz = Class.forName(\"android.view.IWindowManager\");\n            Method setAnimationScales = windowManagerClazz.getDeclaredMethod(\"setAnimationScales\",\n                    float[].class);\n            Method getAnimationScales = windowManagerClazz.getDeclaredMethod(\"getAnimationScales\");\n\n            IBinder windowManagerBinder = (IBinder) getService.invoke(null, \"window\");\n            Object windowManagerObj = asInterface.invoke(null, windowManagerBinder);\n            float[] currentScales = (float[]) getAnimationScales.invoke(windowManagerObj);\n            for (int i = 0; i < currentScales.length; i++) {\n                if (isEnable) {\n                    currentScales[i] = 1.0f;\n                } else {\n                    currentScales[i] = 0.0f;\n                }\n            }\n            setAnimationScales.invoke(windowManagerObj, currentScales);\n\n            return isEnable ? RESULT_ENABLED : RESULT_DISABLED;\n        } catch (ClassNotFoundException cnfe) {\n            Log.w(TAG, \"Cannot disable animations reflectively.\", cnfe);\n        } catch (NoSuchMethodException mnfe) {\n            Log.w(TAG, \"Cannot disable animations reflectively.\", mnfe);\n        } catch (SecurityException se) {\n            Log.w(TAG, \"Cannot disable animations reflectively.\", se);\n        } catch (InvocationTargetException ite) {\n            Log.w(TAG, \"Cannot disable animations reflectively.\", ite);\n        } catch (IllegalAccessException iae) {\n            Log.w(TAG, \"Cannot disable animations reflectively.\", iae);\n        } catch (RuntimeException re) {\n            Log.w(TAG, \"Cannot disable animations reflectively.\", re);\n        }\n        return RESULT_NG;\n    }\n\n    private TestUtils() {\n        // \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u306e\u7981\u6b62\n    }\n\n}\n\n\n\nEspresso UI \u30c6\u30b9\u30c8\u306e\u57fa\u672c\n\u3084\u3063\u3068\u524d\u6e96\u5099\u304c\u7d42\u308f\u308a\u307e\u3057\u305f\uff0e\u3042\u3068\u306f\u30b4\u30ea\u30b4\u30ea\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u3044\u304f\u3060\u3051\u3067\u3059\uff0e\n\u57fa\u672c\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u306f\u4e0b\u306b\u5217\u6319\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\nEspresso.onView(Matcher matcher)\nMatcher\u3092\u6e21\u3059\u3068\uff0c\u4e00\u81f4\u3057\u305fView\u306eViewInteraction\u3092\u8fd4\u3057\u307e\u3059\uff0e\n\u3053\u306eViewInteraction\u306b\u5bfe\u3057\u3066\uff0c\u30af\u30ea\u30c3\u30af\u3068\u304b\u5024\u306e\u30c1\u30a7\u30c3\u30af\u306a\u3069\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\uff0e\n\nViewMatchers.withId(int id)\n\u3044\u3064\u3082\u306efindViewById\u3068\u540c\u3058\u304f\uff0cView\u306eID\u3092\u6e21\u3059\u3068\u4e00\u81f4\u3057\u305fView\u306eViewMatcher\u3092\u8fd4\u3057\u307e\u3059\uff0e1\n\ne.g.\nEspresso.onView(ViewMatchers.withId(R.id.button))\n\n\n\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\uff0e\n\nViewInteraction.perform(ViewAction...)\nViewInteraction\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\uff0e\u5f15\u6570\u3067\u6e21\u3055\u308c\u305fViewAction\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\n\u4f8b\u3048\u3070\uff0c\u6e21\u3055\u308c\u305fViewAction\u304cViewActions.click()\u306a\u3089\uff0c\u305d\u306eView\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\uff0e\n\ne.g.\nEspresso.onView(ViewMatchers.withId(R.id.button)).perform(ViewActions.click());\n\n\n\nViewInteraction.check(ViewAssertion)\nViewInteraction\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\uff0e\u5f15\u6570\u3067\u6e21\u3055\u308c\u305fViewAssertion\u3067View\u306e\u72b6\u614b\u3092\u691c\u67fb\u3057\u307e\u3059\uff0e\n\ne.g.\n// R.id.button \u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\uff0e\nEspresso.onView(ViewMatchers.withId(R.id.button)).check(ViewAssertions.matches(ViewMatchers.isDisplayed()));\n\n\n\ne.g.\n// R.id.button \u304c\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\uff0e\n// not\u30e1\u30bd\u30c3\u30c9\u306f org.hamcrest.Matchers.not\nEspresso.onView(ViewMatchers.withId(R.id.button)).check(ViewAssertions.matches(Matchers.not(ViewMatchers.isDisplayed())));\n\n\n\nViewMatchers.isDisplayed()\n\u305d\u306e\u540d\u306e\u901a\u308a\uff0cView\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3067\u3059\uff0e\n\nViewMatchers.withText()\nView\u304c\u6301\u3063\u3066\u3044\u308b\u30c6\u30ad\u30b9\u30c8\u304c\u4e00\u81f4\u3059\u308b\u304b\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3067\u3059\uff0e\n\nTips\nViewMatchers\u3084ViewAssertions\u7b49\uff0c\u5927\u91cf\u306bstatic\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3059\u308b\u306e\u3067\uff0cstatic\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3057\u307e\u3063\u305f\u65b9\u304c\u30b3\u30fc\u30c9\u304c\u77ed\u304f\u306a\u308a\u307e\u3059\uff0e\nEclipse\u306a\u3089ViewMathers.withId\u306a\u3069\uff0cstatic\u30e1\u30bd\u30c3\u30c9\u306b\u30ab\u30fc\u30bd\u30eb\u3092\u5408\u308f\u305b\u3066 Ctrl + Shift + M\u3067\u81ea\u52d5\u7684\u306bstatic\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304f\u308c\u307e\u3059\uff0e\nstatic\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3068\uff0c\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\nbefore\nEspresso.onView(ViewMatchers.withId(R.id.button)).check(ViewAssertions.matches(Matchers.not(ViewMatchers.isDisplayed())));\n\n\n\nafter\nonView(withId(R.id.button)).check(matches(not(isDisplayed())));\n\n\n\n\u6b32\u3057\u3044 ViewMatcher\u3084ViewAction\u304c\u7121\u3044\u5834\u5408\n\u6b74\u53f2\u304c\u6d45\u3044\u305f\u3081\u304b\uff0c\u898b\u305f\u611f\u3058\u6b32\u3057\u3044ViewMather\u3084ViewAction\u304c\u7121\u304b\u3063\u305f\u308a\u3057\u307e\u3059\uff0e\n\u3053\u306e\u5834\u5408\u306f\u81ea\u5206\u3067\u66f8\u304f\u3088\u3046\u3067\u3059\uff0e\n\u4f8b\u3048\u3070\uff0c\u524d\u65b9\u4e00\u81f4\u3067TextView\u306e\u5024\u3092\u691c\u67fb\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u304c\uff0cViewMatchers\u306b\u306f\u305d\u308c\u3089\u3057\u304d\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u305b\u3093\uff0e\n(\u3068\u3044\u3046\u304b\uff0c\u3053\u306e\u304f\u3089\u3044\u3042\u308a\u305d\u3046\u306a\u7269\u3067\u3059\u304c\uff0c\u306a\u306b\u304b\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044)\n\nViewMatcher\u3092\u81ea\u4f5c\u3059\u308b\n\u3068\u3044\u3046\u308f\u3051\u3067\uff0c\u3044\u304f\u3064\u304b\u306eViewMatcher\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\uff0e\n\uff08\u3042\u307e\u308a\u81ea\u4fe1\u306a\u3044\u306e\u3067\uff0c\u304a\u304b\u3057\u306a\u3068\u3053\u308d\u6709\u308c\u3070\u3054\u6307\u6458\u304f\u3060\u3055\u3044\uff09\n\nEspressoUtils.java\npackage com.example.appli.espresso;\n\nimport static org.hamcrest.Matchers.is;\n\nimport org.hamcrest.Description;\nimport org.hamcrest.Matcher;\nimport org.hamcrest.Matchers;\n\nimport android.view.View;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\n\nimport com.google.android.apps.common.testing.ui.espresso.matcher.BoundedMatcher;\n\npublic final class EspressoUtils {\n\n    /**\n     * TextView\u306e\u6587\u5b57\u5217\u3092\u524d\u65b9\u4e00\u81f4\u3067\u691c\u67fb\n     * \n     * @param expectString\n     * @return\n     */\n    public static Matcher<View> startsWith(final String expectString) {\n        final Matcher<String> textMatcher = is(expectString);\n        return new BoundedMatcher<View, TextView>(TextView.class) {\n\n            @Override\n            protected boolean matchesSafely(TextView textView) {\n                CharSequence text = textView.getText();\n                if (text == null) {\n                    return text == expectString;\n                }\n                return expectString.startsWith(text.toString());\n            }\n\n            @Override\n            public void describeTo(Description description) {\n                description.appendText(\"start text : \");\n                textMatcher.describeTo(description);\n            }\n\n        };\n    }\n\n    /**\n     * TextView\u306e\u6587\u5b57\u5217\u3092\u5f8c\u65b9\u4e00\u81f4\u3067\u691c\u67fb\n     * \n     * @param expectString\n     * @return\n     */\n    public static Matcher<View> endsWith(final String expectString) {\n        final Matcher<String> textMatcher = is(expectString);\n        return new BoundedMatcher<View, TextView>(TextView.class) {\n\n            @Override\n            protected boolean matchesSafely(TextView textView) {\n                CharSequence text = textView.getText();\n                if (text == null) {\n                    return text == expectString;\n                }\n                return expectString.endsWith(text.toString());\n            }\n\n            @Override\n            public void describeTo(Description description) {\n                description.appendText(\"end text : \");\n                textMatcher.describeTo(description);\n            }\n\n        };\n    }\n\n    /**\n     * ProgressBar\u306e\u30d7\u30ed\u30b0\u30ec\u30b9\u3092\u524d\u65b9\u4e00\u81f4\u3067\u691c\u67fb\n     * \n     * @param expectString\n     * @return\n     */\n    public static Matcher<View> withProgress(final Integer expectProgress) {\n        final Matcher<Integer> progressMatcher = is(expectProgress);\n        return new BoundedMatcher<View, ProgressBar>(ProgressBar.class) {\n\n            @Override\n            protected boolean matchesSafely(ProgressBar progressBar) {\n                return progressMatcher.matches(progressBar.getProgress());\n            }\n\n            @Override\n            public void describeTo(Description description) {\n                description.appendText(\"with progress : \");\n                progressMatcher.describeTo(description);\n            }\n        };\n    }\n\n    private EspressoUtils() {\n    }\n}\n\n\n\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\uff0e\n\u30c6\u30ad\u30b9\u30c8\u306e\u524d\u65b9\uff0c\u5f8c\u65b9\u4e00\u81f4\u3068\uff0cProgressBar\u306e\u30d7\u30ed\u30b0\u30ec\u30b9\u306e\u5024\u3092\u691c\u67fb\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\n\u306a\u304a\uff0cButton\u3084EditText\u306fTextView\u3092\uff0cSeekBar\u3084RatingBar\u306fProgressBar\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\u540c\u3058\u691c\u67fb\u30e1\u30bd\u30c3\u30c9\u3067\u5229\u7528\u3067\u304d\u307e\u3059\uff0e\n\n\u30b7\u30ca\u30ea\u30aa\u30c6\u30b9\u30c8\n\u3044\u3088\u3044\u3088\u30b7\u30ca\u30ea\u30aa\u30c6\u30b9\u30c8\u3067\u3059\u304c\uff0c\u5b9f\u969b\u306f\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\uff0cView\u3092\u64cd\u4f5c\u3057\u3066\u72b6\u614b\u3092\u78ba\u8a8d\u3057\u3066\u2026\u306e\u7e70\u308a\u8fd4\u3057\u3067\u3059\uff0e\n\u7c21\u5358\u306b\u66f8\u3044\u3066\u307f\u307e\u3059\uff0e\n\u3053\u3053\u3067\u306f\uff0cMainActivity\u306bEditText\u3068Button\u3092\u6301\u3061\uff0cEditText\u306b\u5165\u529b\u3057\u305f\u5185\u5bb9\u304cSubActivity\u306b\u9001\u3089\u308c\u3066\uff0c\u305d\u3053\u306eTextView\u306b\u6587\u5b57\u5217\u304c\u8868\u793a\u3055\u308c\u308b\uff0e\u3068\u3044\u3046\u3053\u3068\u3067\u66f8\u3044\u3066\u307f\u307e\u3059\uff0e\n\nMainActivity\n\nMainActivity.java\npackage com.example.test;\n\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.view.View.OnClickListener;\nimport android.view.ViewGroup.LayoutParams;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.LinearLayout;\n\npublic class MainActivity extends Activity {\n\n    private static final int WC = LayoutParams.WRAP_CONTENT;\n    private static final int MP = LayoutParams.MATCH_PARENT;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        final LinearLayout rootLayout = new LinearLayout(this);\n        rootLayout.setOrientation(LinearLayout.VERTICAL);\n        rootLayout.setLayoutParams(new LayoutParams(MP, MP));\n        setContentView(rootLayout);\n\n        // EditText\n        final EditText editText = new EditText(this);\n        editText.setId(R.id.editText);\n        editText.setLayoutParams(new LayoutParams(MP, WC));\n        editText.setHint(\"'test'\u3067\u59cb\u307e\u308b\u6587\u5b57\u5217\u304b\uff0c'123'\u3067\u7d42\u308f\u308b\u6587\u5b57\u5217\u304b\uff0c'abc'\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\");\n        rootLayout.addView(editText);\n\n        // Button\n        final Button button = new Button(this);\n        button.setId(R.id.button);\n        button.setLayoutParams(new LayoutParams(WC, WC));\n        button.setText(\"OK\");\n        rootLayout.addView(button);\n\n        button.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                String input = editText.getText().toString();\n                Intent intent = new Intent();\n                intent.putExtra(\"input\", input);\n                intent.setClassName(getApplicationContext(), \"com.example.test.SubActivity\");\n                startActivity(intent);\n            }\n        });\n    }\n}\n\n\n\nSubActivity.java\n\nSubActivity.java\npackage com.example.test;\n\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.view.ViewGroup.LayoutParams;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\npublic class SubActivity extends Activity {\n\n    private static final int WC = LayoutParams.WRAP_CONTENT;\n    private static final int MP = LayoutParams.MATCH_PARENT;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        final LinearLayout rootLayout = new LinearLayout(this);\n        rootLayout.setOrientation(LinearLayout.VERTICAL);\n        rootLayout.setLayoutParams(new LayoutParams(MP, MP));\n        setContentView(rootLayout);\n\n        Bundle bundle = getIntent().getExtras();\n        String text = bundle.getString(\"input\");\n\n        // TextView\n        final TextView textView = new TextView(this);\n        textView.setId(R.id.text);\n        textView.setLayoutParams(new LayoutParams(WC, WC));\n        textView.setText(text);\n        rootLayout.addView(textView);\n\n    }\n}\n\n\n\n/res/values/view_ids.xml\n\nview_ids.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <item name=\"editText\" type=\"id\"/>\n    <item name=\"button\" type=\"id\"/>\n    <item name=\"text\" type=\"id\"/>\n</resources>\n\n\n\nMainActivityTest.java\n\nMainActivityTest.java\npackage com.example.test;\n\nimport static com.google.android.apps.common.testing.ui.espresso.Espresso.onView;\nimport static com.google.android.apps.common.testing.ui.espresso.action.ViewActions.click;\nimport static com.google.android.apps.common.testing.ui.espresso.action.ViewActions.typeText;\nimport static com.google.android.apps.common.testing.ui.espresso.assertion.ViewAssertions.matches;\nimport static com.google.android.apps.common.testing.ui.espresso.matcher.ViewMatchers.withId;\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.test.ActivityInstrumentationTestCase2;\n\nimport com.google.android.apps.common.testing.ui.espresso.matcher.ViewMatchers;\nimport com.example.test.TestUtils;\n\npublic class MainActivityTest extends ActivityInstrumentationTestCase2<MainActivity> {\n    private static final String TAG = MainActivityTest.class.getSimpleName();\n    private Activity mActivity;\n\n    public MainActivityTest() {\n        super(MainActivity.class);\n    }\n\n    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        mActivity = getActivity();\n        TestUtils.toggleAnimationEnable(mActivity, TAG, false);\n    }\n\n    @Override\n    protected void tearDown() throws Exception {\n        TestUtils.toggleAnimationEnable(mActivity, TAG, true);\n        super.tearDown();\n    }\n\n    public void testStory() throws Exception {\n        onView(withId(R.id.editText)).perform(typeText(\"123456\"));\n        onView(withId(R.id.button)).perform(click());\n        onView(withId(R.id.text)).check(matches(ViewMatchers.withText(\"123456\")));\n    }\n}\n\n\n\u3053\u308c\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u53f3\u30af\u30ea\u30c3\u30af\u2192\u5b9f\u884c\u2192Android JUnit Test\u3092\u9078\u629e\u3059\u308b\u3068\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e\n\u3061\u3087\u3063\u3068\u901f\u3044\u3067\u3059\u304c\uff0c\u753b\u9762\u306e\u52d5\u304d\u3092\u898b\u308b\u3068\uff0c\u3061\u3083\u3093\u3068EditText\u306b\u6587\u5b57\u5217\u304c\u5165\u529b\u3055\u308c\uff0c\u6b21\u306eSubActivity\u3078\u9077\u79fb\u3057\u3066\uff0c\u305d\u3053\u306eTextView\u306b\u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u5217\u304c\u8868\u793a\u3055\u308c\u308b\u4e8b\u304c\u5206\u304b\u308a\u307e\u3059\uff0e\n\u3082\u3061\u308d\u3093\uff0cJUnit\u306e\u691c\u67fb\u30d0\u30fc\u306f\u30b0\u30ea\u30fc\u30f3\u306b\u306a\u308b\u306f\u305a\u3067\u3059\uff0e\n\u3068\u3053\u308d\u3067\uff0cEditText\u306e\u30d2\u30f3\u30c8\u306b\u5165\u529b\u6587\u5b57\u5217\u306e\u6761\u4ef6\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\uff0e\n\u30b3\u30ec\u3092\u6b21\u306eSubActivity\u306eTextView\u304b\u3089\u53d6\u5f97\u3057\u3066\u30c6\u30b9\u30c8\u3057\u307e\u3059\u2026\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u3093\u3067\u3059\u304c\uff0c\u529b\u5c3d\u304d\u307e\u3057\u305f\uff0e\n\u306a\u306e\u3067\uff0c\u307f\u306a\u3055\u3093\u305c\u3072\u6311\u6226\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0e\n\nTips\n\u3064\u304b\u308c\u305f\u306e\u3067\uff0c\u3042\u3068\u3067\u307e\u3068\u3081\u307e\u3059\u2026\uff08\u3042\u3093\u307e\u308a\u306a\u3044\u3051\u3069\uff09\nActivity\u9077\u79fb\u5f8c\u306eActivity\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u3068\u308a\u304b\u305f\u3068\u304b\u2026\n# \u306f\u3058\u3081\u306b\n\u79c1\u306f\u307e\u3060\u307e\u3060\u30c6\u30b9\u30c8\u521d\u5fc3\u8005\u3067\u3059\uff0e\n\u5358\u4f53\u30c6\u30b9\u30c8\u3059\u3089\u308d\u304f\u306b\u66f8\u3044\u305f\u3053\u3068\u304c\u7121\u3044\u306e\u3067\uff0c\u7686\u69d8\u306e\u77e5\u6075\u306a\u3069\u8272\u3005\u304a\u8cb8\u3057\u9802\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\uff0e\n\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u3082\u9060\u616e\u7121\u304f\u3069\u3046\u305e\uff0e\n\u3053\u3053\u306b\u8a18\u8f09\u3057\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u306f [NYSL](http://www.kmonos.net/nysl/) \u3067\u3069\u3046\u305e\uff0e\n\n# Espresso\u3068\u306f\n2013.10\u306bGoogle\u304c\u516c\u958b\u3057\u305fAndroid\u7528\u306eUI\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u306d\uff0e\n\u307e\u3060\u516c\u958b\u3055\u308c\u3066\u9593\u3082\u306a\u3044\u3067\u304d\u305f\u3066\u30db\u30e4\u30db\u30e4\u306e\u6fc0\u71b1\u30c6\u30b9\u30c8\u30c4\u30fc\u30eb\u3067\u3059\uff08\u30a8\u30b9\u30d7\u30ec\u30c3\u30bd\u3060\u3051\u306b\uff09\n\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u30a2\u30af\u30b7\u30e7\u30f3\u3060\u3063\u305f\u308a\u8a55\u4fa1\u3057\u305f\u308a\uff0c\u51e6\u7406\u304c\u7d42\u308f\u308b\u307e\u3067\u5f85\u3063\u3066\u30c6\u30b9\u30c8\u3057\u305f\u308a\u3068\u3044\u3046\u3053\u3068\u3092\u81ea\u52d5\u3067\u3084\u3063\u3066\u304f\u308c\u307e\u3059\uff0e\n\n# Espresso\u5c0e\u5165\n\u3053\u3053\u304b\u3089Espresso\u306ejar\u3092\u843d\u3068\u3057\u3066\uff0c\u305d\u306e\u307e\u307e\u30c6\u30b9\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306elibs\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u7a81\u3063\u8fbc\u3093\u3067\u7d42\u308f\u308a\u3067\u3059\uff0e\nhttps://code.google.com/p/android-test-kit/source/browse/#git%2Fbin%2Fespresso-standalone\n\n# Espresso\u524d\u6e96\u5099\n\n## AndroidManifest.xml\u306e<manifest>\u30bf\u30b0\u306e\u4e2d\u306b\u4e0b\u8a18\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\ntargetPackage\u306e\u3068\u3053\u308d\u306f\u30c6\u30b9\u30c8\u5bfe\u8c61\u3068\u306a\u308b\u30a2\u30d7\u30ea\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\nandroid.permission.SET_ANIMATION_SCALE \u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306f\uff0c\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u884c\u901f\u5ea6\u3092\u5909\u66f4\u3059\u308b\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3067\u3059\uff0e\n\u6bce\u56de\u958b\u767a\u8005\u30aa\u30d7\u30b7\u30e7\u30f3\u304b\u3089\u5909\u66f4\u3059\u308b\u306e\u306f\u9762\u5012\u306a\u306e\u3067\uff0c\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u5b9f\u884c\u524d\u306b\u5909\u66f4\u3092\u884c\u3044\uff0c\u30c6\u30b9\u30c8\u5f8c\u306b\u5143\u306b\u623b\u3059\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\n\n```xml:AndroidManifest.xml\n<uses-permission android:name=\"android.permission.SET_ANIMATION_SCALE\" />\n<instrumentation\n    android:name=\"com.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner\"\n    android:targetPackage=\"com.example.appli\" />\n```\n\n## Instrumentation runner\u3092\u5909\u66f4\u3057\u307e\u3059\n\n1. Eclipse\u306e\u30c6\u30b9\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u5b9f\u884c(run)\u2192\u5b9f\u884c\u306e\u69cb\u6210(Run Configuration)\u3092\u958b\u304d\u307e\u3059\uff0e\n1. \u5de6\u30da\u30a4\u30f3\u306e Android JUnit Test \u304b\u3089\uff0c\u76ee\u7684\u306e\u30c6\u30b9\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9078\u629e\u3057\u307e\u3059\uff0e\n\uff08\u4e00\u89a7\u306b\u7121\u3044\u5834\u5408\u306f\u5de6\u4e0a\u306e\u30a2\u30a4\u30b3\u30f3\u304b\u3089\u65b0\u898f\u4f5c\u6210\u3092\u884c\u3044\u307e\u3059\uff0e\uff09\n1. \u30c6\u30b9\u30c8(Test)\u30bf\u30d6\u306eRun all tests in the selected project, or package\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u307e\u3059\uff0e\n1. \u65b0\u898f\u4f5c\u6210\u3057\u305f\u5834\u5408\u306f\uff0c\u540d\u524d\u3092\u8a2d\u5b9a\u3057\uff0c\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9078\u629e\u3057\u307e\u3059\uff0e\n1. Instrumentation runner:\u3067\u300ccom.google.android.apps.common.testing.testrunner.GoogleInstrumentationTestRunner\u300d\u3092\u9078\u629e\u3057\u307e\u3059\uff0e\n1. \u9069\u7528(Apply)\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u5b8c\u4e86\u3067\u3059\uff0e\n\n\u306a\u304a\uff0c\u3069\u3046\u3084\u3089GoogleInstrumentationTestRunner\u3078\u5909\u66f4\u3059\u308b\u3068\uff0c\u30af\u30e9\u30b9\u5358\u4f4d\u3084\u30e1\u30bd\u30c3\u30c9\u5358\u4f4d\u3067\u306e\u30c6\u30b9\u30c8\u304c\u3067\u304d\u306a\u304f\u306a\u308b\u3088\u3046\u3067\u3059\uff0e\n\n## Activity\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\n* setUp\u30e1\u30bd\u30c3\u30c9\n\n\u3053\u3053\u306f\u30c6\u30b9\u30c8\u3092\u958b\u59cb\u3059\u308b\u524d\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\uff0e\n\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u305fgetActivity()\u3092\u30b3\u30fc\u30eb\u3057\u3066Activity\u3092\u53d6\u5f97\u3057\u307e\u3059\uff0e\u3053\u306e\u3068\u304d\uff0cActivity\u3082\u4f5c\u6210\u3055\u308c\u307e\u3059\uff0e\n\u3055\u3089\u306bTestUtils#toggleAnimationEnable()\u3092\u30b3\u30fc\u30eb\u307e\u3059\uff0e\uff08TestUtils.java\u306b\u3064\u3044\u3066\u306f\u4e0b\u8a18\u53c2\u7167\uff09\n\n* getActivity\u30e1\u30bd\u30c3\u30c9\n\ngetActivity()\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u3053\u308c\u306f\u547c\u3073\u51fa\u3059Activity\u3078Intent\u60c5\u5831\u306a\u3069\u3092\u6e21\u3057\u305f\u3044\u5834\u5408\u306b\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308c\u3070\u826f\u304f\uff0c\u4f55\u3082\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u7121\u3044\u5834\u5408\u306f\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u306a\u304f\u3066\u69cb\u3044\u307e\u305b\u3093\uff0e\n\u4eca\u56de\u306f Intent\u306bBundle\u3067\u60c5\u5831\u3092\u6e21\u3057\u305f\u3044\u3068\u4eee\u5b9a\u3057\u3066\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3044\u307e\u3059\uff0e\n\n* tearDown\u30e1\u30bd\u30c3\u30c9\n\ntearDown()\u306f\u30c6\u30b9\u30c8\u7d42\u4e86\u5f8c\u306b\u884c\u3046\u51e6\u7406\u3067\u3059\uff0e\n\u4eca\u56de\u306fsetUp()\u3067\u7121\u52b9\u5316\u3057\u305f\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u3053\u3053\u3067\u6709\u52b9\u5316\uff08\u5143\u306b\u3082\u3069\uff09\u3057\u307e\u3059\uff0e\n\n* test*\u30e1\u30bd\u30c3\u30c9\n\n\u5f8c\u306f\u901a\u5e38\u306eJUnit\u540c\u69d8\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u30b7\u30ca\u30ea\u30aa\u3092\u66f8\u3044\u3066\u3044\u304f\u3060\u3051\u3067\u3059\uff0e\n\u304c\uff0cActivity\u8d77\u52d5\uff5e\u7d42\u4e86\u306e1\u30b5\u30a4\u30af\u30eb\u30921\u30b7\u30ca\u30ea\u30aa\u30c6\u30b9\u30c8\u3068\u3057\u3066\uff0c\u8907\u6570\u306e\u30b7\u30ca\u30ea\u30aa\u30c6\u30b9\u30c8\u3092\u3057\u305f\u3044\u5834\u5408\u306f\uff0c\u540c\u3058\u3088\u3046\u306b\u5225\u306eTest\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\n```java:ActivityTest.java\n\npackage com.example.appli;\n\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.test.ActivityInstrumentationTestCase2;\n\nimport com.example.appli.TestUtils;\n\npublic class MainActivityTest extends ActivityInstrumentationTestCase2<TestActivity> {\n    private static final String TAG = MainActivityTest.class.getSimpleName();\n    private Activity mActivity;\n\n    public MainActivityTest() {\n        super(TestActivity.class);\n    }\n\n    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        mActivity = getActivity();\n        TestUtils.toggleAnimationEnable(mActivity, TAG, false);\n    }\n\n    @Override\n    public TestActivity getActivity() {\n        Intent intent = new Intent();\n        intent.putExtra(\"key\", \"value\");\n        setActivityIntent(intent);\n        return super.getActivity();\n    }\n\n    @Override\n    protected void tearDown() throws Exception {\n        TestUtils.toggleAnimationEnable(mActivity, TAG, true);\n        super.tearDown();\n    }\n\n    public void testStory() throws Exception {\n        // TODO \u3053\u3053\u306b\u30c6\u30b9\u30c8\u3092\u66f8\u304f\n    }\n}\n```\n\n### TestUtils (\u30b3\u30d4\u30da\u3067OK\u3067\u3059)\n\u30a6\u30a3\u30f3\u30c9\u30a6\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30b9\u30b1\u30fc\u30eb\u3068\u30c8\u30e9\u30f3\u30b8\u30b7\u30e7\u30f3\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30b9\u30b1\u30fc\u30eb\u3092\u5909\u66f4\u3057\u307e\u3059\uff0e\n\u4e0a\u8a18\u306eMainActivityTest.java\u3067\u306fsetUp()\u3068tearDown()\u304b\u3089\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\uff0e\n\nhttps://code.google.com/p/android-test-kit/wiki/DisablingAnimations \u306e\u60c5\u5831\u3092\u5143\u306b\u5c11\u3057\u3060\u3051\u624b\u3092\u52a0\u3048\u3066\u3044\u307e\u3059\uff0e\n\n```java:TestUtils.java\n\npackage com.example.appli;\n\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\n\nimport android.content.Context;\nimport android.content.pm.PackageManager;\nimport android.os.IBinder;\nimport android.util.Log;\n\npublic final class TestUtils {\n\n    private static final int RESULT_ENABLED = 0;\n    private static final int RESULT_DISABLED = 1;\n    private static final int RESULT_NG = -1;\n\n    /**\n     * Espresso\u3067UI\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306f setUp \u30e1\u30bd\u30c3\u30c9\u3067\u7121\u52b9\u306b\u3057\uff0ctearDown\u3067\u6709\u52b9\u306b\u3057\u3066\u304f\u3060\u3055\u3044\n     * \n     * @param context\n     * @param TAG\n     * @param isEnable\n     */\n    public static void toggleAnimationEnable(Context context, String TAG, boolean isEnable) {\n        int permStatus = context\n                .checkCallingOrSelfPermission(\"android.permission.SET_ANIMATION_SCALE\");\n        if (permStatus == PackageManager.PERMISSION_GRANTED) {\n            int result;\n            if ((result = reflectivelyToggleAnimation(TAG, isEnable)) != RESULT_NG) {\n                if (result == RESULT_ENABLED) {\n                    Log.i(TAG, \"All animations enabled.\");\n                } else {\n                    Log.i(TAG, \"All animations disabled.\");\n                }\n            } else {\n                Log.i(TAG, \"Could not toggle animations.\");\n            }\n        } else {\n            Log.i(TAG, \"Cannot disable animations due to lack of permission.\");\n        }\n    }\n\n    private static int reflectivelyToggleAnimation(String TAG, boolean isEnable) {\n        try {\n            Class<?> windowManagerStubClazz = Class.forName(\"android.view.IWindowManager$Stub\");\n            Method asInterface = windowManagerStubClazz.getDeclaredMethod(\"asInterface\",\n                    IBinder.class);\n            Class<?> serviceManagerClazz = Class.forName(\"android.os.ServiceManager\");\n            Method getService = serviceManagerClazz.getDeclaredMethod(\"getService\", String.class);\n            Class<?> windowManagerClazz = Class.forName(\"android.view.IWindowManager\");\n            Method setAnimationScales = windowManagerClazz.getDeclaredMethod(\"setAnimationScales\",\n                    float[].class);\n            Method getAnimationScales = windowManagerClazz.getDeclaredMethod(\"getAnimationScales\");\n\n            IBinder windowManagerBinder = (IBinder) getService.invoke(null, \"window\");\n            Object windowManagerObj = asInterface.invoke(null, windowManagerBinder);\n            float[] currentScales = (float[]) getAnimationScales.invoke(windowManagerObj);\n            for (int i = 0; i < currentScales.length; i++) {\n                if (isEnable) {\n                    currentScales[i] = 1.0f;\n                } else {\n                    currentScales[i] = 0.0f;\n                }\n            }\n            setAnimationScales.invoke(windowManagerObj, currentScales);\n\n            return isEnable ? RESULT_ENABLED : RESULT_DISABLED;\n        } catch (ClassNotFoundException cnfe) {\n            Log.w(TAG, \"Cannot disable animations reflectively.\", cnfe);\n        } catch (NoSuchMethodException mnfe) {\n            Log.w(TAG, \"Cannot disable animations reflectively.\", mnfe);\n        } catch (SecurityException se) {\n            Log.w(TAG, \"Cannot disable animations reflectively.\", se);\n        } catch (InvocationTargetException ite) {\n            Log.w(TAG, \"Cannot disable animations reflectively.\", ite);\n        } catch (IllegalAccessException iae) {\n            Log.w(TAG, \"Cannot disable animations reflectively.\", iae);\n        } catch (RuntimeException re) {\n            Log.w(TAG, \"Cannot disable animations reflectively.\", re);\n        }\n        return RESULT_NG;\n    }\n\n    private TestUtils() {\n        // \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u306e\u7981\u6b62\n    }\n\n}\n```\n\n# Espresso UI \u30c6\u30b9\u30c8\u306e\u57fa\u672c\n\n\u3084\u3063\u3068\u524d\u6e96\u5099\u304c\u7d42\u308f\u308a\u307e\u3057\u305f\uff0e\u3042\u3068\u306f\u30b4\u30ea\u30b4\u30ea\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u3044\u304f\u3060\u3051\u3067\u3059\uff0e\n\u57fa\u672c\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u306f\u4e0b\u306b\u5217\u6319\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\n## Espresso.onView(Matcher<View> matcher)\n\nMatcher\u3092\u6e21\u3059\u3068\uff0c\u4e00\u81f4\u3057\u305fView\u306eViewInteraction\u3092\u8fd4\u3057\u307e\u3059\uff0e\n\u3053\u306eViewInteraction\u306b\u5bfe\u3057\u3066\uff0c\u30af\u30ea\u30c3\u30af\u3068\u304b\u5024\u306e\u30c1\u30a7\u30c3\u30af\u306a\u3069\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\uff0e\n\n## ViewMatchers.withId(int id)\n\n\u3044\u3064\u3082\u306efindViewById\u3068\u540c\u3058\u304f\uff0cView\u306eID\u3092\u6e21\u3059\u3068\u4e00\u81f4\u3057\u305fView\u306eViewMatcher\u3092\u8fd4\u3057\u307e\u3059\uff0e1\n\n```java:e.g.\nEspresso.onView(ViewMatchers.withId(R.id.button))\n```\n\n\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\uff0e\n\n## ViewInteraction.perform(ViewAction...)\n\nViewInteraction\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\uff0e\u5f15\u6570\u3067\u6e21\u3055\u308c\u305fViewAction\u3092\u5b9f\u884c\u3057\u307e\u3059\uff0e\n\u4f8b\u3048\u3070\uff0c\u6e21\u3055\u308c\u305fViewAction\u304cViewActions.click()\u306a\u3089\uff0c\u305d\u306eView\u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\uff0e\n\n```java:e.g.\nEspresso.onView(ViewMatchers.withId(R.id.button)).perform(ViewActions.click());\n```\n\n## ViewInteraction.check(ViewAssertion)\n\nViewInteraction\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\uff0e\u5f15\u6570\u3067\u6e21\u3055\u308c\u305fViewAssertion\u3067View\u306e\u72b6\u614b\u3092\u691c\u67fb\u3057\u307e\u3059\uff0e\n\n```java:e.g.\n// R.id.button \u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\uff0e\nEspresso.onView(ViewMatchers.withId(R.id.button)).check(ViewAssertions.matches(ViewMatchers.isDisplayed()));\n```\n\n```java:e.g.\n// R.id.button \u304c\u8868\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\uff0e\n// not\u30e1\u30bd\u30c3\u30c9\u306f org.hamcrest.Matchers.not\nEspresso.onView(ViewMatchers.withId(R.id.button)).check(ViewAssertions.matches(Matchers.not(ViewMatchers.isDisplayed())));\n```\n\n## ViewMatchers.isDisplayed()\n\n\u305d\u306e\u540d\u306e\u901a\u308a\uff0cView\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3067\u3059\uff0e\n\n## ViewMatchers.withText()\n\nView\u304c\u6301\u3063\u3066\u3044\u308b\u30c6\u30ad\u30b9\u30c8\u304c\u4e00\u81f4\u3059\u308b\u304b\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3067\u3059\uff0e\n\n## Tips\n\nViewMatchers\u3084ViewAssertions\u7b49\uff0c\u5927\u91cf\u306bstatic\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3059\u308b\u306e\u3067\uff0cstatic\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3057\u307e\u3063\u305f\u65b9\u304c\u30b3\u30fc\u30c9\u304c\u77ed\u304f\u306a\u308a\u307e\u3059\uff0e\nEclipse\u306a\u3089ViewMathers.withId\u306a\u3069\uff0cstatic\u30e1\u30bd\u30c3\u30c9\u306b\u30ab\u30fc\u30bd\u30eb\u3092\u5408\u308f\u305b\u3066 Ctrl + Shift + M\u3067\u81ea\u52d5\u7684\u306bstatic\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304f\u308c\u307e\u3059\uff0e\nstatic\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3068\uff0c\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n```java:before\nEspresso.onView(ViewMatchers.withId(R.id.button)).check(ViewAssertions.matches(Matchers.not(ViewMatchers.isDisplayed())));\n```\n\n```java:after\nonView(withId(R.id.button)).check(matches(not(isDisplayed())));\n```\n\n# \u6b32\u3057\u3044 ViewMatcher\u3084ViewAction\u304c\u7121\u3044\u5834\u5408\n\n\u6b74\u53f2\u304c\u6d45\u3044\u305f\u3081\u304b\uff0c\u898b\u305f\u611f\u3058\u6b32\u3057\u3044ViewMather\u3084ViewAction\u304c\u7121\u304b\u3063\u305f\u308a\u3057\u307e\u3059\uff0e\n\u3053\u306e\u5834\u5408\u306f\u81ea\u5206\u3067\u66f8\u304f\u3088\u3046\u3067\u3059\uff0e\n\u4f8b\u3048\u3070\uff0c\u524d\u65b9\u4e00\u81f4\u3067TextView\u306e\u5024\u3092\u691c\u67fb\u3057\u305f\u3044\u3068\u3057\u307e\u3059\u304c\uff0cViewMatchers\u306b\u306f\u305d\u308c\u3089\u3057\u304d\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u305b\u3093\uff0e\n(\u3068\u3044\u3046\u304b\uff0c\u3053\u306e\u304f\u3089\u3044\u3042\u308a\u305d\u3046\u306a\u7269\u3067\u3059\u304c\uff0c\u306a\u306b\u304b\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044)\n\n## ViewMatcher\u3092\u81ea\u4f5c\u3059\u308b\n\n\u3068\u3044\u3046\u308f\u3051\u3067\uff0c\u3044\u304f\u3064\u304b\u306eViewMatcher\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\uff0e\n\uff08\u3042\u307e\u308a\u81ea\u4fe1\u306a\u3044\u306e\u3067\uff0c\u304a\u304b\u3057\u306a\u3068\u3053\u308d\u6709\u308c\u3070\u3054\u6307\u6458\u304f\u3060\u3055\u3044\uff09\n\n```java:EspressoUtils.java\npackage com.example.appli.espresso;\n\nimport static org.hamcrest.Matchers.is;\n\nimport org.hamcrest.Description;\nimport org.hamcrest.Matcher;\nimport org.hamcrest.Matchers;\n\nimport android.view.View;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\n\nimport com.google.android.apps.common.testing.ui.espresso.matcher.BoundedMatcher;\n\npublic final class EspressoUtils {\n    \n    /**\n     * TextView\u306e\u6587\u5b57\u5217\u3092\u524d\u65b9\u4e00\u81f4\u3067\u691c\u67fb\n     * \n     * @param expectString\n     * @return\n     */\n    public static Matcher<View> startsWith(final String expectString) {\n        final Matcher<String> textMatcher = is(expectString);\n        return new BoundedMatcher<View, TextView>(TextView.class) {\n\n            @Override\n            protected boolean matchesSafely(TextView textView) {\n                CharSequence text = textView.getText();\n                if (text == null) {\n                    return text == expectString;\n                }\n                return expectString.startsWith(text.toString());\n            }\n\n            @Override\n            public void describeTo(Description description) {\n                description.appendText(\"start text : \");\n                textMatcher.describeTo(description);\n            }\n\n        };\n    }\n\n    /**\n     * TextView\u306e\u6587\u5b57\u5217\u3092\u5f8c\u65b9\u4e00\u81f4\u3067\u691c\u67fb\n     * \n     * @param expectString\n     * @return\n     */\n    public static Matcher<View> endsWith(final String expectString) {\n        final Matcher<String> textMatcher = is(expectString);\n        return new BoundedMatcher<View, TextView>(TextView.class) {\n\n            @Override\n            protected boolean matchesSafely(TextView textView) {\n                CharSequence text = textView.getText();\n                if (text == null) {\n                    return text == expectString;\n                }\n                return expectString.endsWith(text.toString());\n            }\n\n            @Override\n            public void describeTo(Description description) {\n                description.appendText(\"end text : \");\n                textMatcher.describeTo(description);\n            }\n\n        };\n    }\n\n    /**\n     * ProgressBar\u306e\u30d7\u30ed\u30b0\u30ec\u30b9\u3092\u524d\u65b9\u4e00\u81f4\u3067\u691c\u67fb\n     * \n     * @param expectString\n     * @return\n     */\n    public static Matcher<View> withProgress(final Integer expectProgress) {\n        final Matcher<Integer> progressMatcher = is(expectProgress);\n        return new BoundedMatcher<View, ProgressBar>(ProgressBar.class) {\n\n            @Override\n            protected boolean matchesSafely(ProgressBar progressBar) {\n                return progressMatcher.matches(progressBar.getProgress());\n            }\n\n            @Override\n            public void describeTo(Description description) {\n                description.appendText(\"with progress : \");\n                progressMatcher.describeTo(description);\n            }\n        };\n    }\n    \n    private EspressoUtils() {\n    }\n}\n```\n\n\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\uff0e\n\u30c6\u30ad\u30b9\u30c8\u306e\u524d\u65b9\uff0c\u5f8c\u65b9\u4e00\u81f4\u3068\uff0cProgressBar\u306e\u30d7\u30ed\u30b0\u30ec\u30b9\u306e\u5024\u3092\u691c\u67fb\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\n\u306a\u304a\uff0cButton\u3084EditText\u306fTextView\u3092\uff0cSeekBar\u3084RatingBar\u306fProgressBar\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\u540c\u3058\u691c\u67fb\u30e1\u30bd\u30c3\u30c9\u3067\u5229\u7528\u3067\u304d\u307e\u3059\uff0e\n\n# \u30b7\u30ca\u30ea\u30aa\u30c6\u30b9\u30c8\n\n\u3044\u3088\u3044\u3088\u30b7\u30ca\u30ea\u30aa\u30c6\u30b9\u30c8\u3067\u3059\u304c\uff0c\u5b9f\u969b\u306f\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\uff0cView\u3092\u64cd\u4f5c\u3057\u3066\u72b6\u614b\u3092\u78ba\u8a8d\u3057\u3066\u2026\u306e\u7e70\u308a\u8fd4\u3057\u3067\u3059\uff0e\n\u7c21\u5358\u306b\u66f8\u3044\u3066\u307f\u307e\u3059\uff0e\n\u3053\u3053\u3067\u306f\uff0cMainActivity\u306bEditText\u3068Button\u3092\u6301\u3061\uff0cEditText\u306b\u5165\u529b\u3057\u305f\u5185\u5bb9\u304cSubActivity\u306b\u9001\u3089\u308c\u3066\uff0c\u305d\u3053\u306eTextView\u306b\u6587\u5b57\u5217\u304c\u8868\u793a\u3055\u308c\u308b\uff0e\u3068\u3044\u3046\u3053\u3068\u3067\u66f8\u3044\u3066\u307f\u307e\u3059\uff0e\n\n## MainActivity\n\n```java:MainActivity.java\npackage com.example.test;\n\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.view.View.OnClickListener;\nimport android.view.ViewGroup.LayoutParams;\nimport android.widget.Button;\nimport android.widget.EditText;\nimport android.widget.LinearLayout;\n\npublic class MainActivity extends Activity {\n\n    private static final int WC = LayoutParams.WRAP_CONTENT;\n    private static final int MP = LayoutParams.MATCH_PARENT;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        final LinearLayout rootLayout = new LinearLayout(this);\n        rootLayout.setOrientation(LinearLayout.VERTICAL);\n        rootLayout.setLayoutParams(new LayoutParams(MP, MP));\n        setContentView(rootLayout);\n\n        // EditText\n        final EditText editText = new EditText(this);\n        editText.setId(R.id.editText);\n        editText.setLayoutParams(new LayoutParams(MP, WC));\n        editText.setHint(\"'test'\u3067\u59cb\u307e\u308b\u6587\u5b57\u5217\u304b\uff0c'123'\u3067\u7d42\u308f\u308b\u6587\u5b57\u5217\u304b\uff0c'abc'\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\");\n        rootLayout.addView(editText);\n\n        // Button\n        final Button button = new Button(this);\n        button.setId(R.id.button);\n        button.setLayoutParams(new LayoutParams(WC, WC));\n        button.setText(\"OK\");\n        rootLayout.addView(button);\n\n        button.setOnClickListener(new OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                String input = editText.getText().toString();\n                Intent intent = new Intent();\n                intent.putExtra(\"input\", input);\n                intent.setClassName(getApplicationContext(), \"com.example.test.SubActivity\");\n                startActivity(intent);\n            }\n        });\n    }\n}\n```\n\n## SubActivity.java\n\n```java:SubActivity.java\npackage com.example.test;\n\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.view.ViewGroup.LayoutParams;\nimport android.widget.LinearLayout;\nimport android.widget.TextView;\n\npublic class SubActivity extends Activity {\n\n    private static final int WC = LayoutParams.WRAP_CONTENT;\n    private static final int MP = LayoutParams.MATCH_PARENT;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n        final LinearLayout rootLayout = new LinearLayout(this);\n        rootLayout.setOrientation(LinearLayout.VERTICAL);\n        rootLayout.setLayoutParams(new LayoutParams(MP, MP));\n        setContentView(rootLayout);\n\n        Bundle bundle = getIntent().getExtras();\n        String text = bundle.getString(\"input\");\n\n        // TextView\n        final TextView textView = new TextView(this);\n        textView.setId(R.id.text);\n        textView.setLayoutParams(new LayoutParams(WC, WC));\n        textView.setText(text);\n        rootLayout.addView(textView);\n\n    }\n}\n```\n\n## /res/values/view_ids.xml\n\n```xml:view_ids.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <item name=\"editText\" type=\"id\"/>\n    <item name=\"button\" type=\"id\"/>\n    <item name=\"text\" type=\"id\"/>\n</resources>\n```\n\n## MainActivityTest.java\n\n```java:MainActivityTest.java\npackage com.example.test;\n\nimport static com.google.android.apps.common.testing.ui.espresso.Espresso.onView;\nimport static com.google.android.apps.common.testing.ui.espresso.action.ViewActions.click;\nimport static com.google.android.apps.common.testing.ui.espresso.action.ViewActions.typeText;\nimport static com.google.android.apps.common.testing.ui.espresso.assertion.ViewAssertions.matches;\nimport static com.google.android.apps.common.testing.ui.espresso.matcher.ViewMatchers.withId;\nimport android.app.Activity;\nimport android.content.Intent;\nimport android.test.ActivityInstrumentationTestCase2;\n\nimport com.google.android.apps.common.testing.ui.espresso.matcher.ViewMatchers;\nimport com.example.test.TestUtils;\n\npublic class MainActivityTest extends ActivityInstrumentationTestCase2<MainActivity> {\n    private static final String TAG = MainActivityTest.class.getSimpleName();\n    private Activity mActivity;\n\n    public MainActivityTest() {\n        super(MainActivity.class);\n    }\n\n    @Override\n    public void setUp() throws Exception {\n        super.setUp();\n        mActivity = getActivity();\n        TestUtils.toggleAnimationEnable(mActivity, TAG, false);\n    }\n\n    @Override\n    protected void tearDown() throws Exception {\n        TestUtils.toggleAnimationEnable(mActivity, TAG, true);\n        super.tearDown();\n    }\n\n    public void testStory() throws Exception {\n        onView(withId(R.id.editText)).perform(typeText(\"123456\"));\n        onView(withId(R.id.button)).perform(click());\n        onView(withId(R.id.text)).check(matches(ViewMatchers.withText(\"123456\")));\n    }\n}\n```\n\n\u3053\u308c\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u53f3\u30af\u30ea\u30c3\u30af\u2192\u5b9f\u884c\u2192Android JUnit Test\u3092\u9078\u629e\u3059\u308b\u3068\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e\n\u3061\u3087\u3063\u3068\u901f\u3044\u3067\u3059\u304c\uff0c\u753b\u9762\u306e\u52d5\u304d\u3092\u898b\u308b\u3068\uff0c\u3061\u3083\u3093\u3068EditText\u306b\u6587\u5b57\u5217\u304c\u5165\u529b\u3055\u308c\uff0c\u6b21\u306eSubActivity\u3078\u9077\u79fb\u3057\u3066\uff0c\u305d\u3053\u306eTextView\u306b\u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u5217\u304c\u8868\u793a\u3055\u308c\u308b\u4e8b\u304c\u5206\u304b\u308a\u307e\u3059\uff0e\n\u3082\u3061\u308d\u3093\uff0cJUnit\u306e\u691c\u67fb\u30d0\u30fc\u306f\u30b0\u30ea\u30fc\u30f3\u306b\u306a\u308b\u306f\u305a\u3067\u3059\uff0e\n\n\u3068\u3053\u308d\u3067\uff0cEditText\u306e\u30d2\u30f3\u30c8\u306b\u5165\u529b\u6587\u5b57\u5217\u306e\u6761\u4ef6\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\uff0e\n\u30b3\u30ec\u3092\u6b21\u306eSubActivity\u306eTextView\u304b\u3089\u53d6\u5f97\u3057\u3066\u30c6\u30b9\u30c8\u3057\u307e\u3059\u2026\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u3093\u3067\u3059\u304c\uff0c\u529b\u5c3d\u304d\u307e\u3057\u305f\uff0e\n\n\u306a\u306e\u3067\uff0c\u307f\u306a\u3055\u3093\u305c\u3072\u6311\u6226\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0e\n\n# Tips\n\n\u3064\u304b\u308c\u305f\u306e\u3067\uff0c\u3042\u3068\u3067\u307e\u3068\u3081\u307e\u3059\u2026\uff08\u3042\u3093\u307e\u308a\u306a\u3044\u3051\u3069\uff09\nActivity\u9077\u79fb\u5f8c\u306eActivity\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u3068\u308a\u304b\u305f\u3068\u304b\u2026\n", "tags": ["Java1.6", "Android4.0.3", "Espresso1.1"]}