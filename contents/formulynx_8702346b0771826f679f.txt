{"context": " More than 1 year has passed since last update.[update: 2015/11/02]\n6S\u3067\u8ffd\u52a0\u3055\u308c\u305fForceTouch\u304c\u4f7f\u3044\u3084\u3059\u3044\u306e\u3067\u81ea\u5206\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u6368\u3066\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u5099\u5fd8\u9332\u3068\u3057\u3066\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u985e\u3092\u5b9f\u88c5\u3059\u308b\u969b\u3001\u30e6\u30fc\u30b6\u30fc\u30c6\u30b9\u30c8\u3068\u79f0\u3057\u3066UITextView\u5185\u3067\u5165\u529b\u4f5c\u696d\u3092\u9577\u304f\u7d9a\u3051\u3066\u307f\u308b\u3068\u3001\u30ab\u30fc\u30bd\u30eb\u4f4d\u7f6e\u3092\u30bf\u30c3\u30d7\u2192\u30c9\u30e9\u30c3\u30b0\u64cd\u4f5c\u3067\u79fb\u52d5\u3055\u305b\u308b\u306e\u304c\u5730\u5473\u306b\u30c4\u30e9\u3044\u3068\u611f\u3058\u305f\u3002\n\u7269\u7406\u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u3088\u3046\u306b\u77e2\u5370\u30ad\u30fc\u3067\u64cd\u4f5c\u3057\u305f\u3044\u3002\n\u3057\u304b\u3057iOS\u306b\u306f\u6587\u5b57\u4ee5\u5916\u306e\u30ad\u30fc\u5165\u529b\u64cd\u4f5c\u30b3\u30de\u30f3\u30c9\u3092\u9001\u4fe1\u3059\u308bAPI\u304c\u306a\u3044\u30021\n\u305d\u3053\u3067inputAccessoryView\u306b\u4e0a\u4e0b\u5de6\u53f3\u306e\u77e2\u5370\u30ad\u30fc\u30dc\u30bf\u30f3\u3092\u8ffd\u52a0\u3057\u3066\u307f\u305f\u3002\n\u4ee5\u4e0b\u3067UITextView\u5185\u306e\u30ad\u30e3\u30ec\u30c3\u30c8\u4f4d\u7f6e\u3092\u8a08\u7b97\u3057\u3066\u79fb\u52d5\u3055\u305b\u308b\u5b9f\u88c5\u3092\u884c\u3063\u3066\u3044\u308b\u3002\n\n\u5de6\u53f3\u306fUITextPosition\u30921\u6587\u5b57\u524d\u5f8c\u3055\u305b\u308c\u3070OK\u3002\n\u4e0a\u4e0b\u3067\u82e5\u5e72\u60a9\u3093\u3060\u304c\u3001\u30ad\u30e3\u30ec\u30c3\u30c8\u4f4d\u7f6e\u3067\u306e\u5ea7\u6a19\u3068UIFont\u3092\u53d6\u5f97\u3057\u3001lineheight\u30d7\u30ed\u30d1\u30c6\u30a3\u5206\u3060\u3051\u5782\u76f4\u65b9\u5411\u306b\u79fb\u52d5\u3055\u305b\u305f\u5ea7\u6a19\u304b\u3089closestPositionToPoint:\u3067UITextPosition\u3092\u5f97\u308b\u3002\n\n\nUIViewController.m\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    //...\n    [self setUpCursorKeyboard];\n}\n\n- (void)setUpCursorKeyboard\n{\n    UIToolbar *toolBar = [[UIToolbar alloc] initWithFrame:CGRectMake(0, 0, 320, 44)];\n\n    UIBarButtonItem *left = [[UIBarButtonItem alloc] initWithTitle:@\" \u2190 \"\n                                                             style:UIBarButtonItemStylePlain\n                                                            target:self\n                                                            action:@selector(simulateLeftKey)];\n    UIBarButtonItem *right = [[UIBarButtonItem alloc] initWithTitle:@\" \u2192 \"\n                                                              style:UIBarButtonItemStylePlain\n                                                             target:self\n                                                             action:@selector(simulateRightKey)];\n    UIBarButtonItem *down = [[UIBarButtonItem alloc] initWithTitle:@\" \u2193 \"\n                                                             style:UIBarButtonItemStylePlain\n                                                            target:self\n                                                            action:@selector(simulateDownKey)];\n    UIBarButtonItem *up = [[UIBarButtonItem alloc] initWithTitle:@\" \u2191 \"\n                                                           style:UIBarButtonItemStylePlain\n                                                          target:self\n                                                          action:@selector(simulateUpKey)];\n\n    [toolBar setItems:@[left, up, down, right] animated:YES];\n\n    self.textView.inputAccessoryView = toolBar;\n}\n\n- (void)simulateLeftKey\n{\n    UITextRange *currentRange = self.textView.selectedTextRange;\n\n    if (![currentRange.start isEqual:self.textView.beginningOfDocument]) {\n        UITextPosition *newPosition = [self.textView positionFromPosition:currentRange.start\n                                                                   offset:-1];\n        self.textView.selectedTextRange = [self.textView textRangeFromPosition:newPosition\n                                                                    toPosition:newPosition];\n    }\n}\n\n- (void)simulateRightKey\n{\n    UITextRange *currentRange = self.textView.selectedTextRange;\n\n    if (![currentRange.end isEqual:self.textView.endOfDocument]) {\n        UITextPosition *newPosition = [self.textView positionFromPosition:currentRange.end\n                                                                   offset:1];\n        self.textView.selectedTextRange = [self.textView textRangeFromPosition:newPosition\n                                                                    toPosition:newPosition];\n    }\n}\n\n- (void)simulateUpKey\n{\n    UITextRange *currentRange = self.textView.selectedTextRange;\n    UITextRange *allRange = [self.textView textRangeFromPosition:self.textView.beginningOfDocument\n                                                      toPosition:self.textView.endOfDocument];\n\n    CGRect caretRect = [self.textView caretRectForPosition:currentRange.start];\n\n    NSDictionary *att = [self.textView textStylingAtPosition:currentRange.start\n                                                 inDirection:UITextStorageDirectionForward];\n    UIFont *currentFont = att[NSFontAttributeName];\n    CGFloat nextY = caretRect.origin.y + (caretRect.size.height/2) - currentFont.lineHeight;\n    CGPoint nextCaretPoint = CGPointMake(caretRect.origin.x, nextY);\n    UITextPosition *newPosition = [self.textView closestPositionToPoint:nextCaretPoint\n                                                            withinRange:allRange];\n\n    self.textView.selectedTextRange = [self.textView textRangeFromPosition:newPosition\n                                                                toPosition:newPosition];\n}\n\n- (void)simulateDownKey\n{\n    UITextRange *currentRange = self.textView.selectedTextRange;\n    UITextRange *allRange = [self.textView textRangeFromPosition:self.textView.beginningOfDocument\n                                                      toPosition:self.textView.endOfDocument];\n\n    CGRect caretRect = [self.textView caretRectForPosition:currentRange.end];\n\n    NSDictionary *att = [self.textView textStylingAtPosition:currentRange.end\n                                                 inDirection:UITextStorageDirectionForward];\n    UIFont *currentFont = att[NSFontAttributeName];\n    CGFloat nextY = caretRect.origin.y + (caretRect.size.height/2) + currentFont.lineHeight;\n    CGPoint nextCaretPoint = CGPointMake(caretRect.origin.x, nextY);\n    UITextPosition *newPosition = [self.textView closestPositionToPoint:nextCaretPoint\n                                                            withinRange:allRange];\n\n    self.textView.selectedTextRange = [self.textView textRangeFromPosition:newPosition\n                                                                toPosition:newPosition];\n}\n\n\n\u30ad\u30e3\u30ec\u30c3\u30c8\u304c\u7bc4\u56f2\u9078\u629e\u72b6\u614b\u306e\u3068\u304d\u306e\u6319\u52d5\u306f\u4eba\u306b\u3088\u3063\u3066\u597d\u307f\u304c\u3042\u308b\u3068\u601d\u3046\u306e\u3067\nif (!self.textView.selectedTextRange.empty) {} \u306e\u6761\u4ef6\u5206\u5c90\u3092\u8a2d\u3051\u308b\u306a\u3069\u3057\u3066\u5225\u51e6\u7406\u306b\u3059\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\n\nOSX\u306fNSEvent\u3067\u30ad\u30fc\u5165\u529b\u30a4\u30d9\u30f3\u30c8\u3092\u751f\u6210\u53ef\u80fd\u3089\u3057\u3044\u00a0\u21a9\n\n\n\n[update: 2015/11/02]\n\n6S\u3067\u8ffd\u52a0\u3055\u308c\u305fForceTouch\u304c\u4f7f\u3044\u3084\u3059\u3044\u306e\u3067\u81ea\u5206\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u6368\u3066\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u5099\u5fd8\u9332\u3068\u3057\u3066\u6b8b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n___\n\n\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\b\u985e\u3092\u5b9f\u88c5\u3059\u308b\u969b\u3001\u30e6\u30fc\u30b6\u30fc\u30c6\u30b9\u30c8\u3068\u79f0\u3057\u3066UITextView\u5185\u3067\u5165\u529b\u4f5c\u696d\u3092\u9577\u304f\u7d9a\u3051\u3066\u307f\u308b\u3068\u3001\u30ab\u30fc\u30bd\u30eb\u4f4d\u7f6e\u3092\u30bf\u30c3\u30d7\u2192\u30c9\u30e9\u30c3\u30b0\u64cd\u4f5c\u3067\u79fb\u52d5\u3055\u305b\u308b\u306e\u304c\u5730\u5473\u306b\u30c4\u30e9\u3044\u3068\u611f\u3058\u305f\u3002\n\n\u7269\u7406\u30ad\u30fc\u30dc\u30fc\u30c9\u306e\u3088\u3046\u306b\u77e2\u5370\u30ad\u30fc\u3067\u64cd\u4f5c\u3057\u305f\u3044\u3002\n\u3057\u304b\u3057iOS\u306b\u306f\u6587\u5b57\u4ee5\u5916\u306e\u30ad\u30fc\u5165\u529b\u64cd\u4f5c\u30b3\u30de\u30f3\u30c9\u3092\u9001\u4fe1\u3059\u308bAPI\u304c\u306a\u3044\u3002[^1]\n\n\u305d\u3053\u3067inputAccessoryView\u306b\u4e0a\u4e0b\u5de6\u53f3\u306e\u77e2\u5370\u30ad\u30fc\u30dc\u30bf\u30f3\u3092\u8ffd\u52a0\u3057\u3066\u307f\u305f\u3002\n\n\u4ee5\u4e0b\u3067UITextView\u5185\u306e\u30ad\u30e3\u30ec\u30c3\u30c8\u4f4d\u7f6e\u3092\u8a08\u7b97\u3057\u3066\u79fb\u52d5\u3055\u305b\u308b\u5b9f\u88c5\u3092\u884c\u3063\u3066\u3044\u308b\u3002\n\n* \u5de6\u53f3\u306fUITextPosition\u30921\u6587\u5b57\u524d\u5f8c\u3055\u305b\u308c\u3070OK\u3002\n* \u4e0a\u4e0b\u3067\u82e5\u5e72\u60a9\u3093\u3060\u304c\u3001\u30ad\u30e3\u30ec\u30c3\u30c8\u4f4d\u7f6e\u3067\u306e\u5ea7\u6a19\u3068UIFont\u3092\u53d6\u5f97\u3057\u3001lineheight\u30d7\u30ed\u30d1\u30c6\u30a3\u5206\u3060\u3051\u5782\u76f4\u65b9\u5411\u306b\u79fb\u52d5\u3055\u305b\u305f\u5ea7\u6a19\u304b\u3089`closestPositionToPoint:`\u3067UITextPosition\u3092\u5f97\u308b\u3002\n\n```objc:UIViewController.m\n- (void)viewDidLoad\n{\n    [super viewDidLoad];\n    //...\n    [self setUpCursorKeyboard];\n}\n\n- (void)setUpCursorKeyboard\n{\n    UIToolbar *toolBar = [[UIToolbar alloc] initWithFrame:CGRectMake(0, 0, 320, 44)];\n    \n    UIBarButtonItem *left = [[UIBarButtonItem alloc] initWithTitle:@\" \u2190 \"\n                                                             style:UIBarButtonItemStylePlain\n                                                            target:self\n                                                            action:@selector(simulateLeftKey)];\n    UIBarButtonItem *right = [[UIBarButtonItem alloc] initWithTitle:@\" \u2192 \"\n                                                              style:UIBarButtonItemStylePlain\n                                                             target:self\n                                                             action:@selector(simulateRightKey)];\n    UIBarButtonItem *down = [[UIBarButtonItem alloc] initWithTitle:@\" \u2193 \"\n                                                             style:UIBarButtonItemStylePlain\n                                                            target:self\n                                                            action:@selector(simulateDownKey)];\n    UIBarButtonItem *up = [[UIBarButtonItem alloc] initWithTitle:@\" \u2191 \"\n                                                           style:UIBarButtonItemStylePlain\n                                                          target:self\n                                                          action:@selector(simulateUpKey)];\n    \n    [toolBar setItems:@[left, up, down, right] animated:YES];\n    \n    self.textView.inputAccessoryView = toolBar;\n}\n\n- (void)simulateLeftKey\n{\n    UITextRange *currentRange = self.textView.selectedTextRange;\n    \n    if (![currentRange.start isEqual:self.textView.beginningOfDocument]) {\n        UITextPosition *newPosition = [self.textView positionFromPosition:currentRange.start\n                                                                   offset:-1];\n        self.textView.selectedTextRange = [self.textView textRangeFromPosition:newPosition\n                                                                    toPosition:newPosition];\n    }\n}\n\n- (void)simulateRightKey\n{\n    UITextRange *currentRange = self.textView.selectedTextRange;\n    \n    if (![currentRange.end isEqual:self.textView.endOfDocument]) {\n        UITextPosition *newPosition = [self.textView positionFromPosition:currentRange.end\n                                                                   offset:1];\n        self.textView.selectedTextRange = [self.textView textRangeFromPosition:newPosition\n                                                                    toPosition:newPosition];\n    }\n}\n\n- (void)simulateUpKey\n{\n    UITextRange *currentRange = self.textView.selectedTextRange;\n    UITextRange *allRange = [self.textView textRangeFromPosition:self.textView.beginningOfDocument\n                                                      toPosition:self.textView.endOfDocument];\n\n    CGRect caretRect = [self.textView caretRectForPosition:currentRange.start];\n    \n    NSDictionary *att = [self.textView textStylingAtPosition:currentRange.start\n                                                 inDirection:UITextStorageDirectionForward];\n    UIFont *currentFont = att[NSFontAttributeName];\n    CGFloat nextY = caretRect.origin.y + (caretRect.size.height/2) - currentFont.lineHeight;\n    CGPoint nextCaretPoint = CGPointMake(caretRect.origin.x, nextY);\n    UITextPosition *newPosition = [self.textView closestPositionToPoint:nextCaretPoint\n                                                            withinRange:allRange];\n    \n    self.textView.selectedTextRange = [self.textView textRangeFromPosition:newPosition\n                                                                toPosition:newPosition];\n}\n\n- (void)simulateDownKey\n{\n    UITextRange *currentRange = self.textView.selectedTextRange;\n    UITextRange *allRange = [self.textView textRangeFromPosition:self.textView.beginningOfDocument\n                                                      toPosition:self.textView.endOfDocument];\n\n    CGRect caretRect = [self.textView caretRectForPosition:currentRange.end];\n    \n    NSDictionary *att = [self.textView textStylingAtPosition:currentRange.end\n                                                 inDirection:UITextStorageDirectionForward];\n    UIFont *currentFont = att[NSFontAttributeName];\n    CGFloat nextY = caretRect.origin.y + (caretRect.size.height/2) + currentFont.lineHeight;\n    CGPoint nextCaretPoint = CGPointMake(caretRect.origin.x, nextY);\n    UITextPosition *newPosition = [self.textView closestPositionToPoint:nextCaretPoint\n                                                            withinRange:allRange];\n    \n    self.textView.selectedTextRange = [self.textView textRangeFromPosition:newPosition\n                                                                toPosition:newPosition];\n}\n```\n\n\u30ad\u30e3\u30ec\u30c3\u30c8\u304c\u7bc4\u56f2\u9078\u629e\u72b6\u614b\u306e\u3068\u304d\u306e\u6319\u52d5\u306f\u4eba\u306b\u3088\u3063\u3066\u597d\u307f\u304c\u3042\u308b\u3068\u601d\u3046\u306e\u3067\n`if (!self.textView.selectedTextRange.empty) {}` \u306e\u6761\u4ef6\u5206\u5c90\u3092\u8a2d\u3051\u308b\u306a\u3069\u3057\u3066\u5225\u51e6\u7406\u306b\u3059\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n[^1]: OSX\u306fNSEvent\u3067\u30ad\u30fc\u5165\u529b\u30a4\u30d9\u30f3\u30c8\u3092\u751f\u6210\u53ef\u80fd\u3089\u3057\u3044\n", "tags": ["iOS", "UITextView", "UI", "inputAccessoryView"]}