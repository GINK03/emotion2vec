{"context": " More than 1 year has passed since last update.React\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u89e6\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304c\u306a\u3044\u3068POST\u3067\u304d\u306a\u3044\u306e\u3067\u3064\u307e\u3089\u306a\u3044\u3002Express\u3068MongoDB\u3092\u8ffd\u52a0\u3057\u3066\u52d5\u304f\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u306f\u666e\u6bb5\u306fGrunt\u306a\u306e\u3067\u3059\u304cGulp\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nLivereload\u306e\u4ee3\u308f\u308a\u306bBrowserSync\u3092\u5c0e\u5165\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://github.com/110chang/react-express-mongodb\n\n$ node -v # v0.12.0\n\n\nReact\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\n\nreact\nrect-dom\njQuery\uff08ajax\u7528\uff09\n\n\nmain.js\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar $ = require('jquery');\n\n//...\u4ee5\u964d\u3001\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u30b3\u30fc\u30c9\n\n\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306fajax\u306e\u305f\u3081\u306bjQuery\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001superagent\u3067\u3082\u3044\u3044\u3068\u304a\u3082\u3044\u307e\u3059\u3002\n\nJSX\u3092Gulp\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\n\ngulp\nbrowserify\nbaberify\nbabel-preset-react\nvinyl-source-stream\n\n\ngulpfile.js\nvar gulp = require(\"gulp\");\nvar source = require('vinyl-source-stream');\nvar browserify = require('browserify');\nvar babelify = require('babelify');\n\n//...\n\ngulp.task('concat', function() {\n  browserify({\n    entries: ['path/to/main.js'],\n    debug : !gulp.env.production\n  }).transform(babelify, { presets: [\"react\"] })\n    .bundle()\n    .pipe(source('bundle.js'))\n    .pipe(gulp.dest(\"./public\"));\n});\n\n//...\n\n\n\nbabel-preset-react\u306frequire\u3057\u307e\u305b\u3093\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u6642\u306b\u5fc5\u8981\u3067\u3059\u3002\nvinyl-source-stream\u306f\u3001Node\u306eStream\u3092Gulp\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b\u3082\u306e\u3089\u3057\u3044\u3002Stream\u306f\u30c7\u30fc\u30bf\u3092pipe\u3067\u3064\u306a\u3044\u3067\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u3044\u3046\u3053\u3068\u306e\u3088\u3046\u3067\u3059\u3002\nLint\u306f\u3001SublimeLinter-eslint\u3092\u5165\u308c\u307e\u3057\u305f\u3002\n\n\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\n\nmongo\nexpress\nbody-parser\uff08POST\u3092\u53d7\u3051\u53d6\u308b\u969b\u306b\u5fc5\u8981\uff09\n\nbodyParser\u306e\u4f7f\u7528\u6cd5\u306fdeprecated\u3046\u3093\u306c\u3093\u306e\u60c5\u5831\u304c\u932f\u7d9c\u3057\u3066\u3044\u3066\u82e6\u52b4\u3057\u305f\u3002\n\u4eca\u306e\u3068\u3053\u308d\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3046\u6a21\u69d8\u3002(2015/12/20\u73fe\u5728)\n\napp.js\nvar express = require('express');\nvar parser = require('body-parser');\n\nvar app = express();\nvar server = http.createServer(app);\n\n//\u00d7app.use(parser());\napp.use(parser.urlencoded({extended: true}));\napp.use(parser.json());\n\n//...\n\n\nvia Express\u3067POST\u3092\u51e6\u7406\u3059\u308b\u30e1\u30e2\nCRUD\u306f\u300cNode.js+Express+MongoDB\u3067Web API\u3092\u3064\u304f\u308b\u300d\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u4f7f\u308f\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\n\u305d\u306e\u4ed6\u306e\u30bf\u30b9\u30af\u7528\n\ngulp-live-server\uff08express\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\uff09\ngulp-sass\nbrowser-sync\uff08\u30d6\u30e9\u30a6\u30b6\u78ba\u8a8d\u7528\uff09\n\nBrowserSync\u3092\u30d7\u30ed\u30ad\u30b7\u3067\u4f7f\u3044\u307e\u3057\u305f\u3002proxy\u3068files\u3068port\u3092\u6307\u5b9a\u3059\u308b\u3002\n\ngulpfile.js\nvar browsersync = require('browser-sync');\n\n//...\n\nbrowsersync.init({\n  proxy: 'http://localhost:XXXX/',//express\u306e\u30ed\u30fc\u30ab\u30eb\u30a2\u30c9\u30ec\u30b9\n  files: ['./public/**/*.*'],//watch\u5bfe\u8c61\n  port: 3333,//\u51fa\u529b\u5148\n  open: false,//\u9b31\u9676\u3057\u3044\u306e\u3067\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u304f\u306e\u3092\u6b62\u3081\u308b\n});\n\n//...\n\n\nBrowserSync\u306f\u30ed\u30fc\u30ab\u30eb\u30cd\u30c3\u30c8\u3067\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u30da\u30fc\u30b8\u3092\u5168\u3066\u540c\u671f\u3067\u304d\u308b\u306e\u3067\u3059\u3054\u304f\u4fbf\u5229\u305d\u3046\u3002GhostLab\u304c\u8981\u3089\u306a\u3044\u5b50\u306b\u2026\nvia gulp + node + express \u3067 BrowserSync \u4f7f\u304a\u3046\u3002\n\u3053\u306e\u8a18\u4e8b\u306f\u30d6\u30ed\u30b0\u306b\u3082\u63b2\u8f09\u3057\u3066\u3044\u307e\u3059\n[React\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](https://facebook.github.io/react/docs/tutorial.html)\u3092\u89e6\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u304c\u306a\u3044\u3068POST\u3067\u304d\u306a\u3044\u306e\u3067\u3064\u307e\u3089\u306a\u3044\u3002Express\u3068MongoDB\u3092\u8ffd\u52a0\u3057\u3066\u52d5\u304f\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30bf\u30b9\u30af\u30e9\u30f3\u30ca\u30fc\u306f\u666e\u6bb5\u306fGrunt\u306a\u306e\u3067\u3059\u304cGulp\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nLivereload\u306e\u4ee3\u308f\u308a\u306bBrowserSync\u3092\u5c0e\u5165\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n[https://github.com/110chang/react-express-mongodb](https://github.com/110chang/react-express-mongodb)\n\n![fig-react-express-mongodb.png](https://qiita-image-store.s3.amazonaws.com/0/33768/2ed64ccf-cbe0-64c1-95f2-4ef5886c284b.png)\n\n```bash\n$ node -v # v0.12.0\n```\n\n# React\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\n\n- react\n- rect-dom\n- jQuery\uff08ajax\u7528\uff09\n\n```js:main.js\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar $ = require('jquery');\n\n//...\u4ee5\u964d\u3001\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u30b3\u30fc\u30c9\n```\n\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306fajax\u306e\u305f\u3081\u306bjQuery\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001superagent\u3067\u3082\u3044\u3044\u3068\u304a\u3082\u3044\u307e\u3059\u3002\n\n# JSX\u3092Gulp\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\n\n- gulp\n- browserify\n- baberify\n- babel-preset-react\n- vinyl-source-stream\n\n```js:gulpfile.js\nvar gulp = require(\"gulp\");\nvar source = require('vinyl-source-stream');\nvar browserify = require('browserify');\nvar babelify = require('babelify');\n\n//...\n\ngulp.task('concat', function() {\n  browserify({\n    entries: ['path/to/main.js'],\n    debug : !gulp.env.production\n  }).transform(babelify, { presets: [\"react\"] })\n    .bundle()\n    .pipe(source('bundle.js'))\n    .pipe(gulp.dest(\"./public\"));\n});\n\n//...\n\n```\n\nbabel-preset-react\u306f`require`\u3057\u307e\u305b\u3093\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u6642\u306b\u5fc5\u8981\u3067\u3059\u3002\n\nvinyl-source-stream\u306f\u3001Node\u306e`Stream`\u3092Gulp\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b\u3082\u306e\u3089\u3057\u3044\u3002Stream\u306f\u30c7\u30fc\u30bf\u3092`pipe`\u3067\u3064\u306a\u3044\u3067\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u3044\u3046\u3053\u3068\u306e\u3088\u3046\u3067\u3059\u3002\n\nLint\u306f\u3001[SublimeLinter-eslint](https://github.com/roadhump/SublimeLinter-eslint)\u3092\u5165\u308c\u307e\u3057\u305f\u3002\n\n# \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\n\n- mongo\n- express\n- body-parser\uff08POST\u3092\u53d7\u3051\u53d6\u308b\u969b\u306b\u5fc5\u8981\uff09\n\nbodyParser\u306e\u4f7f\u7528\u6cd5\u306fdeprecated\u3046\u3093\u306c\u3093\u306e\u60c5\u5831\u304c\u932f\u7d9c\u3057\u3066\u3044\u3066\u82e6\u52b4\u3057\u305f\u3002\n\u4eca\u306e\u3068\u3053\u308d\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3046\u6a21\u69d8\u3002(2015/12/20\u73fe\u5728)\n\n```js:app.js\nvar express = require('express');\nvar parser = require('body-parser');\n\nvar app = express();\nvar server = http.createServer(app);\n\n//\u00d7app.use(parser());\napp.use(parser.urlencoded({extended: true}));\napp.use(parser.json());\n\n//...\n```\n\nvia [Express\u3067POST\u3092\u51e6\u7406\u3059\u308b\u30e1\u30e2](http://qiita.com/K_ichi/items/c70bf4b08467717460d5)\n\nCRUD\u306f\u300c[Node.js+Express+MongoDB\u3067Web API\u3092\u3064\u304f\u308b](http://qiita.com/itagakishintaro/items/a1519998a91061cbfb1e)\u300d\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u4f7f\u308f\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\n# \u305d\u306e\u4ed6\u306e\u30bf\u30b9\u30af\u7528\n\n- gulp-live-server\uff08express\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\uff09\n- gulp-sass\n- browser-sync\uff08\u30d6\u30e9\u30a6\u30b6\u78ba\u8a8d\u7528\uff09\n\nBrowserSync\u3092\u30d7\u30ed\u30ad\u30b7\u3067\u4f7f\u3044\u307e\u3057\u305f\u3002`proxy`\u3068`files`\u3068`port`\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n```js:gulpfile.js\nvar browsersync = require('browser-sync');\n\n//...\n\nbrowsersync.init({\n  proxy: 'http://localhost:XXXX/',//express\u306e\u30ed\u30fc\u30ab\u30eb\u30a2\u30c9\u30ec\u30b9\n  files: ['./public/**/*.*'],//watch\u5bfe\u8c61\n  port: 3333,//\u51fa\u529b\u5148\n  open: false,//\u9b31\u9676\u3057\u3044\u306e\u3067\u30d6\u30e9\u30a6\u30b6\u3092\u958b\u304f\u306e\u3092\u6b62\u3081\u308b\n});\n\n//...\n```\n\nBrowserSync\u306f\u30ed\u30fc\u30ab\u30eb\u30cd\u30c3\u30c8\u3067\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u30da\u30fc\u30b8\u3092\u5168\u3066\u540c\u671f\u3067\u304d\u308b\u306e\u3067\u3059\u3054\u304f\u4fbf\u5229\u305d\u3046\u3002GhostLab\u304c\u8981\u3089\u306a\u3044\u5b50\u306b\u2026\n\nvia [gulp + node + express \u3067 BrowserSync \u4f7f\u304a\u3046\u3002](http://mid0111.hatenablog.com/entry/2015/08/19/200657)\n\n[\u3053\u306e\u8a18\u4e8b\u306f\u30d6\u30ed\u30b0\u306b\u3082\u63b2\u8f09\u3057\u3066\u3044\u307e\u3059](http://110chang.com/knowledge/react-express-mongodb/)\n", "tags": ["reactjs", "React", "Express", "MongoDB", "BrowserSync"]}