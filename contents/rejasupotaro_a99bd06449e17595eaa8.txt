{"context": " More than 1 year has passed since last update.Rust\u3067\u9069\u5f53\u306a\u7a7a\u3044\u3066\u3044\u308b\u30dd\u30fc\u30c8\u3092\u53d6\u5f97\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u305f\u3089\u30dd\u30fc\u30c8\u756a\u53f7\u304c\u53d6\u308c\u3066\u4fbf\u5229\u3067\u3057\u305f\u3002\nuse std::io;\nuse std::net::TcpListener;\n\nfn available_port() -> io::Result<u16> {\n    match TcpListener::bind(\"localhost:0\") {\n        Ok(listener) => {\n            listener.local_addr().unwrap().port()\n        }\n        Err(e) => Err(e)\n    }\n}\n\nfn main() {\n    println!(\"port: {}\", available_port().unwrap());\n}\n\nTcpListener::bind \u306e\u5f15\u6570\u306b localhost:0 \u3092\u6e21\u3059\u3068\u3001OS\u304c\u7a7a\u3044\u3066\u3044\u308b\u30dd\u30fc\u30c8\u3078\u306e\u5272\u308a\u5f53\u3066\u3092\u8981\u6c42\u3059\u308b\u3089\u3057\u3044\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066bind\u3057\u3066\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u53d6\u5f97\u3057\u3066\u304b\u3089\u305d\u306e\u30ea\u30b9\u30ca\u30fc\u3092close\u3059\u308c\u3070\u305d\u306e\u30dd\u30fc\u30c8\u304c\u7a7a\u304f\u306e\u3067\u7a7a\u304d\u30dd\u30fc\u30c8\u304c\u53d6\u308c\u308b\u3001\u3068\u3044\u3046\u5bf8\u6cd5\u3067\u3059\u3002\n\u5b9f\u884c\u3059\u308b\u5ea6\u306b\u7570\u306a\u308b\u30dd\u30fc\u30c8\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n$ cargo run\n     Running `target/debug/sample`\nport: 59103\n$ cargo run\n     Running `target/debug/sample`\nport: 62786\n$ cargo run\n     Running `target/debug/sample`\nport: 62799\n\nHyper\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001Hyper\u306f\u5185\u90e8\u3067TcpListener\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067 localhost:0 \u3092\u6307\u5b9a\u3059\u308c\u3070\u540c\u3058\u3088\u3046\u306b\u9069\u5f53\u306a\u30dd\u30fc\u30c8\u3067bind\u3055\u308c\u307e\u3059\u3002\nServer::http(hello).listen(\"localhost:0\").unwrap();\n\n\n\u53c2\u8003\u30ea\u30f3\u30af\n\nTCP\u306e\u7a7a\u304d\u30dd\u30fc\u30c8\u3092Listen\u3059\u308b\nJava\u3067\u7a7a\u3044\u3066\u3044\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u53d6\u3063\u3066\u304d\u305f\u3044\nstd::net::TcpListener - Rust\n\nRust\u3067\u9069\u5f53\u306a\u7a7a\u3044\u3066\u3044\u308b\u30dd\u30fc\u30c8\u3092\u53d6\u5f97\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u305f\u3089\u30dd\u30fc\u30c8\u756a\u53f7\u304c\u53d6\u308c\u3066\u4fbf\u5229\u3067\u3057\u305f\u3002\n\n```rust\nuse std::io;\nuse std::net::TcpListener;\n\nfn available_port() -> io::Result<u16> {\n    match TcpListener::bind(\"localhost:0\") {\n        Ok(listener) => {\n            listener.local_addr().unwrap().port()\n        }\n        Err(e) => Err(e)\n    }\n}\n\nfn main() {\n    println!(\"port: {}\", available_port().unwrap());\n}\n```\n\n`TcpListener::bind` \u306e\u5f15\u6570\u306b `localhost:0` \u3092\u6e21\u3059\u3068\u3001OS\u304c\u7a7a\u3044\u3066\u3044\u308b\u30dd\u30fc\u30c8\u3078\u306e\u5272\u308a\u5f53\u3066\u3092\u8981\u6c42\u3059\u308b\u3089\u3057\u3044\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066bind\u3057\u3066\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u53d6\u5f97\u3057\u3066\u304b\u3089\u305d\u306e\u30ea\u30b9\u30ca\u30fc\u3092close\u3059\u308c\u3070\u305d\u306e\u30dd\u30fc\u30c8\u304c\u7a7a\u304f\u306e\u3067\u7a7a\u304d\u30dd\u30fc\u30c8\u304c\u53d6\u308c\u308b\u3001\u3068\u3044\u3046\u5bf8\u6cd5\u3067\u3059\u3002\n\n\u5b9f\u884c\u3059\u308b\u5ea6\u306b\u7570\u306a\u308b\u30dd\u30fc\u30c8\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n```sh\n$ cargo run\n     Running `target/debug/sample`\nport: 59103\n$ cargo run\n     Running `target/debug/sample`\nport: 62786\n$ cargo run\n     Running `target/debug/sample`\nport: 62799\n```\n\nHyper\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001Hyper\u306f\u5185\u90e8\u3067TcpListener\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067 `localhost:0` \u3092\u6307\u5b9a\u3059\u308c\u3070\u540c\u3058\u3088\u3046\u306b\u9069\u5f53\u306a\u30dd\u30fc\u30c8\u3067bind\u3055\u308c\u307e\u3059\u3002\n\n```rust\nServer::http(hello).listen(\"localhost:0\").unwrap();\n```\n\n# \u53c2\u8003\u30ea\u30f3\u30af\n\n- [TCP\u306e\u7a7a\u304d\u30dd\u30fc\u30c8\u3092Listen\u3059\u308b](http://qiita.com/shiena/items/14016f3875a136ad0134)\n- [Java\u3067\u7a7a\u3044\u3066\u3044\u308b\u30dd\u30fc\u30c8\u756a\u53f7\u3092\u53d6\u3063\u3066\u304d\u305f\u3044](http://moznion.hatenadiary.com/entry/2014/11/29/222221)\n- [std::net::TcpListener - Rust](https://doc.rust-lang.org/std/net/struct.TcpListener.html)\n", "tags": ["rust"]}