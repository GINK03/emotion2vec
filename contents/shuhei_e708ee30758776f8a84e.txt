{"context": " More than 1 year has passed since last update.Ember Data \u306f\u3001Beta \u306a\u3053\u3068\u3082\u3042\u308a\u3001\u307e\u3060\u3042\u307e\u308a\u60c5\u5831\u304c\u306a\u3044\u306e\u3067\u6574\u7406\u3057\u3066\u304a\u304d\u307e\u3059\u3002Guides \u306b\u3082\u3042\u307e\u308a\u66f8\u304b\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001Discussion Forum \u3084 Stackoverflow \u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\nActiveModelAdapter\nRESTAdapter \u3068\u3044\u3046\u4e00\u898b\u30c7\u30d5\u30a9\u30eb\u30c8\u98a8\u306e Adapter \u304c\u3042\u308a\u307e\u3059\u304c\u3001Rails \u306e snakecase \u306a\u5909\u6570\u540d\u304b\u3089 JavaScript \u306a camelcase \u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b ActiveModelAdapter \u304c\u4f7f\u3044\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nRails \u5074\u3067\u306f Active Model Serializer \u3092\u4f7f\u3063\u3066 JSON \u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\nRails \u306e routing\n\u885d\u6483\u7684\u306a\u3053\u3068\u306b\u3001AcriveModelAdapter \u306f\uff08RESTAdapter \u3082\uff09\u30cd\u30b9\u30c8\u3057\u305f URL \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002Adapter \u306b\u624b\u3092\u5165\u308c\u308c\u3070\u5bfe\u5fdc\u3055\u305b\u308b\u3053\u3068\u306f\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3072\u3068\u307e\u305a\u305d\u306e\u307e\u307e\u3044\u304d\u307e\u3059\u3002\n\nconfig/routes.rb\nresources :posts, except: [:new, :edit], defaults: { format: 'json' }\nresources :comments, except: [:new, :edit], defaults: { format: 'json' }\n\n\n\nActiveModel::Serializers\nActiveModel::Serializers \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\ngem 'active_model_serializer'\n\nbundle install\n./bin/rails g serializer post\n./bin/rails g serializer comment\n\nSerializer \u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3060\u3051\u3067\u3001controller \u3067 respond_to \u3057\u305f\u969b\u306b\u3001\u81ea\u52d5\u7684\u306b Serializer \u3092\u4f7f\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u5b50\u306e\u4e2d\u8eab\u3082\u89aa\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u542b\u3081\u308b\u5834\u5408\n\u95a2\u9023\u3092 id \u306e\u914d\u5217\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u305f\u3081 embed :ids \u3068\u66f8\u304d\u307e\u3059\u3002\u3069\u306e model \u306b\u3082\u66f8\u304f\u306e\u3067\u3001\u89aa\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\n\napp/serializers/applicaton_serializer.rb\nclass ApplicationSerializer < ActiveModel::Serializer\n  # Compatible with ember-data.\n  embed :ids, include: true\nend\n\n\n\napp/serializers/post_serializer.rb\nclass PostSerializer < ApplicationSerializer\n  attributes :id, :title, :body\n  has_many :comments\nend\n\n\n\napp/serializers/comment_serializer.rb\nclass CommentSerializer < ApplicationSerializer\n  attributes :id, :post_id, :body\nend\n\n\nembed :ids, include: true \u306b\u3059\u308b\u3068\u3001Post \u306e JSON \u3092\u8fd4\u3059\u6642\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b comments \u306e\u4e2d\u8eab\u3082\u4e00\u7dd2\u306b\u542b\u3081\u3066\u304f\u308c\u307e\u3059\u3002\n\n/posts.json\n{\n  \"comments\": [\n    {\n      \"id\": 123,\n      \"body\": \"Nice post!\"\n    }\n  ],\n  \"posts\": [\n    {\n      \"id\": 345,\n      \"title\": \"Hello, World!\",\n      \"body\": \"I'm so happy to meet you, World!\",\n      \"comment_ids\": [123]\n    }\n  ]\n}\n\n\n\u3053\u306e\u969b\u3001Ember \u5074\u306e model \u306e hasMany \u3092 async: false \u306b\u3057\u307e\u3059\u3002\n\nmodels/post.js\nApp.Post = DS.Model.extend({\n  title: DS.attr('string'),\n  body: DS.attr('string'),\n  comments: DS.hasMany('comment', { async: false })\n});\n\n\n\n\u5b50\u306e\u4e2d\u8eab\u3092\u89aa\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u542b\u3081\u306a\u3044\u5834\u5408\nComment \u306f\u5225\u306e JSON \u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u3001embed :ids, include: false \u306b\u3057\u3066\u3001Post \u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306b Comment \u306e\u4e2d\u8eab\u3092\u542b\u3081\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002false \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\u3002\n\napp/serializers/applicaton_serializer.rb\nclass ApplicationSerializer < ActiveModel::Serializer\n  # Compatible with ember-data.\n  embed :ids\nend\n\n\nEmber \u5074\u306f async: true \u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u3053\u3063\u3061\u306e\u4f5c\u308a\u304c\u3001\u4eca\u5f8c Ember Data \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u305d\u3046\u3067\u3059\u3002\n\nmodels/post.js\nApp.Post = DS.Model.extend({\n  title: DS.attr('string'),\n  body: DS.attr('string'),\n  comments: DS.hasMany('comment', { async: true })\n});\n\n\n\u3053\u3046\u3057\u3066\u304a\u304f\u3068\u3001Post \u304c\u8aad\u307f\u8fbc\u307e\u308c\u305f\u5f8c\u3001Comment \u306f\u5225\u9014 Post \u3054\u3068\u306b /comments?ids[]=1&ids[]=2 \u306e\u3088\u3046\u306a URL \u3067\u554f\u3044\u5408\u308f\u305b\u3089\u308c\u307e\u3059\u3002\u5b9f\u969b\u306f URL ecnode \u3055\u308c\u3066\u3044\u3066 /comments?ids%5b%5d=1&ids%5b%5d=2 \u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nRails \u306e controller \u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u3001\u6bce\u56de\u5168\u90e8\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u8fd4\u3057\u3066\u3057\u307e\u3044\u7121\u99c4\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u308c\u3067\u3082\u52d5\u304f\u3088\u3046\u3067\u3057\u305f\u304c\u3002\nclass CommentController < ApplicationController\n  respond_to :json\n\n  def index\n    if params[:ids].is_a?(Enumerable)\n      @comments = Comment.where(id: params[:ids])\n    else\n      @comments = Comment.all\n    end\n    respond_with @comments\n  end\nend\n\n\n\u5b50\u306e\u4fdd\u5b58\n\u5b50\u3092\u4fdd\u5b58\u3057\u3066\u3082\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u306f\u81ea\u52d5\u7684\u306b\u89aa\u306b\u8ffd\u52a0\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u3067\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\ncontrollers/comment_new_controller.js\nApp.CommentNewController = Ember.ObjectController.extend({\n  // PostController \u3092\u547c\u3073\u51fa\u3059\u306e\u306b\u5fc5\u8981\u3002\n  needs: 'post',\n  actions: {\n    createComment: function() {\n      // PostController \u306e model \u3092\u53d6\u5f97\u3002\n      var post = this.get('controllers.post.content');\n\n      var comment = this.store.createRecord('comment', {\n        body: this.get('body'),\n        post: post\n      };\n\n      comment.save().then(function() {\n        post.get('comments').pushObject(comment);\n      });\n    }\n  }\n});\n\n\nRails \u5074\u3082 resources \u3092\u30cd\u30b9\u30c8\u3055\u305b\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u5909\u308f\u3063\u305f\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\nclass CommentController < ApplicationController\n  respond_to :json\n\n  before_action :set_post, only: [:create]\n\n  def create\n    @comment = @post.comments.create(comment_params)\n    respond_with @comment\n  end\n\n  private\n\n  def set_post\n    @post = Post.find(comment_params[:post_id])\n  end\n\n  def comment_params\n    params.require(:comment).permit(:body, :post_id)\n  end\nend\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u3001\u306a\u3093\u3068\u304b\u3072\u3068\u3068\u304a\u308a\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nEmber \u306e\u4ed6\u306e\u90e8\u5206\u306b\u6bd4\u3079\u3001Ember Data \u306f\u307e\u3060\u307e\u3060\u3053\u308c\u304b\u3089\u306a\u611f\u3058\u3067\u3059\u306d\u3002\n\n\u53c2\u8003\nhasMany \u306e async: true \u3063\u3066\u4f55\uff1f\nhttp://discuss.emberjs.com/t/what-is-an-async-relationship-async-true-vs-async-false/4107/10\n\nEmber Data \u306f\u3001Beta \u306a\u3053\u3068\u3082\u3042\u308a\u3001\u307e\u3060\u3042\u307e\u308a\u60c5\u5831\u304c\u306a\u3044\u306e\u3067\u6574\u7406\u3057\u3066\u304a\u304d\u307e\u3059\u3002Guides \u306b\u3082\u3042\u307e\u308a\u66f8\u304b\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001Discussion Forum \u3084 Stackoverflow \u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n## ActiveModelAdapter\n\nRESTAdapter \u3068\u3044\u3046\u4e00\u898b\u30c7\u30d5\u30a9\u30eb\u30c8\u98a8\u306e Adapter \u304c\u3042\u308a\u307e\u3059\u304c\u3001Rails \u306e snakecase \u306a\u5909\u6570\u540d\u304b\u3089 JavaScript \u306a camelcase \u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b ActiveModelAdapter \u304c\u4f7f\u3044\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nRails \u5074\u3067\u306f Active Model Serializer \u3092\u4f7f\u3063\u3066 JSON \u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n## Rails \u306e routing\n\n\u885d\u6483\u7684\u306a\u3053\u3068\u306b\u3001AcriveModelAdapter \u306f\uff08RESTAdapter \u3082\uff09\u30cd\u30b9\u30c8\u3057\u305f URL \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002Adapter \u306b\u624b\u3092\u5165\u308c\u308c\u3070\u5bfe\u5fdc\u3055\u305b\u308b\u3053\u3068\u306f\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3072\u3068\u307e\u305a\u305d\u306e\u307e\u307e\u3044\u304d\u307e\u3059\u3002\n\n```config/routes.rb\nresources :posts, except: [:new, :edit], defaults: { format: 'json' }\nresources :comments, except: [:new, :edit], defaults: { format: 'json' }\n```\n\n## ActiveModel::Serializers\n\n[ActiveModel::Serializers](https://github.com/rails-api/active_model_serializers) \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\n\n```Gemfile\ngem 'active_model_serializer'\n```\n\n```shell\nbundle install\n./bin/rails g serializer post\n./bin/rails g serializer comment\n```\n\nSerializer \u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3060\u3051\u3067\u3001controller \u3067 `respond_to` \u3057\u305f\u969b\u306b\u3001\u81ea\u52d5\u7684\u306b Serializer \u3092\u4f7f\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n### \u5b50\u306e\u4e2d\u8eab\u3082\u89aa\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u542b\u3081\u308b\u5834\u5408\n\n\u95a2\u9023\u3092 id \u306e\u914d\u5217\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u305f\u3081 `embed :ids` \u3068\u66f8\u304d\u307e\u3059\u3002\u3069\u306e model \u306b\u3082\u66f8\u304f\u306e\u3067\u3001\u89aa\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\n\n```app/serializers/applicaton_serializer.rb\nclass ApplicationSerializer < ActiveModel::Serializer\n  # Compatible with ember-data.\n  embed :ids, include: true\nend\n```\n\n```app/serializers/post_serializer.rb\nclass PostSerializer < ApplicationSerializer\n  attributes :id, :title, :body\n  has_many :comments\nend\n```\n\n```app/serializers/comment_serializer.rb\nclass CommentSerializer < ApplicationSerializer\n  attributes :id, :post_id, :body\nend\n```\n\n`embed :ids, include: true` \u306b\u3059\u308b\u3068\u3001Post \u306e JSON \u3092\u8fd4\u3059\u6642\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b comments \u306e\u4e2d\u8eab\u3082\u4e00\u7dd2\u306b\u542b\u3081\u3066\u304f\u308c\u307e\u3059\u3002\n\n```/posts.json\n{\n  \"comments\": [\n    {\n      \"id\": 123,\n      \"body\": \"Nice post!\"\n    }\n  ],\n  \"posts\": [\n    {\n      \"id\": 345,\n      \"title\": \"Hello, World!\",\n      \"body\": \"I'm so happy to meet you, World!\",\n      \"comment_ids\": [123]\n    }\n  ]\n}\n```\n\n\u3053\u306e\u969b\u3001Ember \u5074\u306e model \u306e hasMany \u3092 `async: false` \u306b\u3057\u307e\u3059\u3002\n\n```models/post.js\nApp.Post = DS.Model.extend({\n  title: DS.attr('string'),\n  body: DS.attr('string'),\n  comments: DS.hasMany('comment', { async: false })\n});\n```\n\n### \u5b50\u306e\u4e2d\u8eab\u3092\u89aa\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u542b\u3081\u306a\u3044\u5834\u5408\n\nComment \u306f\u5225\u306e JSON \u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u3001`embed :ids, include: false` \u306b\u3057\u3066\u3001Post \u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306b Comment \u306e\u4e2d\u8eab\u3092\u542b\u3081\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002false \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3059\u3002\n\n```app/serializers/applicaton_serializer.rb\nclass ApplicationSerializer < ActiveModel::Serializer\n  # Compatible with ember-data.\n  embed :ids\nend\n```\n\nEmber \u5074\u306f `async: true` \u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002[\u3053\u3063\u3061\u306e\u4f5c\u308a\u304c\u3001\u4eca\u5f8c Ember Data \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u305d\u3046\u3067\u3059\u3002](https://github.com/emberjs/data/issues/1443#issuecomment-26607013)\n\n```models/post.js\nApp.Post = DS.Model.extend({\n  title: DS.attr('string'),\n  body: DS.attr('string'),\n  comments: DS.hasMany('comment', { async: true })\n});\n```\n\n\u3053\u3046\u3057\u3066\u304a\u304f\u3068\u3001Post \u304c\u8aad\u307f\u8fbc\u307e\u308c\u305f\u5f8c\u3001Comment \u306f\u5225\u9014 Post \u3054\u3068\u306b `/comments?ids[]=1&ids[]=2` \u306e\u3088\u3046\u306a URL \u3067\u554f\u3044\u5408\u308f\u305b\u3089\u308c\u307e\u3059\u3002\u5b9f\u969b\u306f URL ecnode \u3055\u308c\u3066\u3044\u3066 `/comments?ids%5b%5d=1&ids%5b%5d=2` \u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nRails \u306e controller \u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u3001\u6bce\u56de\u5168\u90e8\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u8fd4\u3057\u3066\u3057\u307e\u3044\u7121\u99c4\u306b\u306a\u308a\u307e\u3059\u3002\u305d\u308c\u3067\u3082\u52d5\u304f\u3088\u3046\u3067\u3057\u305f\u304c\u3002\n\n```ruby\nclass CommentController < ApplicationController\n  respond_to :json\n\n  def index\n    if params[:ids].is_a?(Enumerable)\n      @comments = Comment.where(id: params[:ids])\n    else\n      @comments = Comment.all\n    end\n    respond_with @comments\n  end\nend\n```\n\n## \u5b50\u306e\u4fdd\u5b58\n\n\u5b50\u3092\u4fdd\u5b58\u3057\u3066\u3082\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u306f\u81ea\u52d5\u7684\u306b\u89aa\u306b\u8ffd\u52a0\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u3067\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```controllers/comment_new_controller.js\nApp.CommentNewController = Ember.ObjectController.extend({\n  // PostController \u3092\u547c\u3073\u51fa\u3059\u306e\u306b\u5fc5\u8981\u3002\n  needs: 'post',\n  actions: {\n    createComment: function() {\n      // PostController \u306e model \u3092\u53d6\u5f97\u3002\n      var post = this.get('controllers.post.content');\n      \n      var comment = this.store.createRecord('comment', {\n        body: this.get('body'),\n        post: post\n      };\n\n      comment.save().then(function() {\n        post.get('comments').pushObject(comment);\n      });\n    }\n  }\n});\n```\n\nRails \u5074\u3082 resources \u3092\u30cd\u30b9\u30c8\u3055\u305b\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u5909\u308f\u3063\u305f\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n```ruby\nclass CommentController < ApplicationController\n  respond_to :json\n\n  before_action :set_post, only: [:create]\n\n  def create\n    @comment = @post.comments.create(comment_params)\n    respond_with @comment\n  end\n\n  private\n\n  def set_post\n    @post = Post.find(comment_params[:post_id])\n  end\n\n  def comment_params\n    params.require(:comment).permit(:body, :post_id)\n  end\nend\n```\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u3001\u306a\u3093\u3068\u304b\u3072\u3068\u3068\u304a\u308a\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nEmber \u306e\u4ed6\u306e\u90e8\u5206\u306b\u6bd4\u3079\u3001Ember Data \u306f\u307e\u3060\u307e\u3060\u3053\u308c\u304b\u3089\u306a\u611f\u3058\u3067\u3059\u306d\u3002\n\n## \u53c2\u8003\nhasMany \u306e async: true \u3063\u3066\u4f55\uff1f\nhttp://discuss.emberjs.com/t/what-is-an-async-relationship-async-true-vs-async-false/4107/10\n", "tags": ["JavaScript", "Ember.js", "EmberData1.0.0-beta.7"]}