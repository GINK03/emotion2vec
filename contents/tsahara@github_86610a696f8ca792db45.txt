{"context": " More than 1 year has passed since last update.\n\nmruby \u3067 C \u8a00\u8a9e\u306e\u69cb\u9020\u4f53\u3092\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u6b63\u3057\u3044\u65b9\u6cd5\nmruby \u306f\u5c0f\u3055\u306a\u8a00\u8a9e\u51e6\u7406\u7cfb\u3067\u3059\u3002\u305d\u308c\u5358\u4f53\u3067\u306f HTTP \u901a\u4fe1\u3084 JSON \u306e\u8aad\u307f\u66f8\u304d\u306f\u304a\u308d\u304b\u3001\u30d5\u30a1\u30a4\u30eb I/O \u3059\u3089\u3067\u304d\u307e\u305b\u3093\u3002Ruby \u306e\u51e6\u7406\u7cfb\u306a\u306e\u306b\u6b63\u898f\u8868\u73fe\u3082\u4f7f\u3048\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u3001mrbgem \u3068\u547c\u3070\u308c\u308b\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7d44\u307f\u8fbc\u3080\u3053\u3068\u3067\u3001\u5fc5\u8981\u306a\u6a5f\u80fd\u3092\u5fc5\u8981\u306a\u3060\u3051\u8db3\u3057\u3066\u3084\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nmrbgem \u306e\u958b\u767a\u306f\u304b\u3093\u305f\u3093\u3067\u3059\u3002mrbgem \u306f C \u3068 Ruby (mruby) \u306e\u30b3\u30fc\u30c9\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002mruby \u306e\u65e2\u5b58\u306e\u6a5f\u80fd\u3067\u5b9f\u73fe\u53ef\u80fd\u306a\u7bc4\u56f2\u306e\u30b3\u30fc\u30c9\u306f Ruby \u3067\u66f8\u304d\u3001Ruby \u3067\u306f\u66f8\u3051\u306a\u3044\u3088\u3046\u306a\u51e6\u7406\u306f C \u3067\u66f8\u304f\u3053\u3068\u304c\u6a5f\u80fd\u6027\u3084\u4fdd\u5b88\u6027\u306e\u9762\u304b\u3089\u306f\u6709\u5229\u3067\u3059\u3002\nmrbgem \u306e\u958b\u767a\u306b\u304a\u3044\u3066\u306f\u3001\u65e2\u5b58\u306e C \u8a00\u8a9e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u7a4d\u6975\u7684\u306b\u518d\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002mgem-list \u3068\u3044\u3046 mruby \u306e gem \u306e\u30ea\u30b9\u30c8\u3092\u3056\u3063\u3068\u773a\u3081\u3066\u307f\u3066\u3082\u3001C \u8a00\u8a9e\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u3092\u63a2\u3059\u65b9\u304c\u96e3\u3057\u3044\u304f\u3089\u3044\u3067\u3059\u3002\nC \u8a00\u8a9e\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u56fa\u6709\u306e\u60c5\u5831\u3084\u72b6\u614b\u306a\u3069\u3092 C \u8a00\u8a9e\u306e\u69cb\u9020\u4f53\u306b\u30d1\u30c3\u30af\u3057\u3066\u305d\u308c\u3092\u4f7f\u3044\u56de\u3059\u30c6\u30af\u30cb\u30c3\u30af\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070 C \u8a00\u8a9e\u306e\u6a19\u6e96\u5165\u51fa\u529b\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u72b6\u614b\u3092 FILE \u69cb\u9020\u4f53\u3068\u3057\u3066\u8868\u73fe\u3057\u307e\u3059\u3002\u6a19\u6e96\u5165\u51fa\u529b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5229\u7528\u8005\u306f FILE \u69cb\u9020\u4f53\u306e\u4e2d\u8eab\u3092\u610f\u8b58\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3057\u3001\u307e\u305f\u4e2d\u8eab\u3092\u76f4\u63a5\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u63a8\u5968\u3055\u308c\u307e\u305b\u3093\u3002\u305d\u3057\u3066 C \u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u306e\u4e2d\u3067 FILE \u69cb\u9020\u4f53\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u5834\u5408\u306f\u3001FILE  \u69cb\u9020\u4f53\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u95a2\u6570\u306e\u5f15\u6570\u3084\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3068\u3057\u3066\u53d7\u3051\u6e21\u3057\u307e\u3059\u3002C \u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u306b\u9589\u3058\u3066\u3044\u308b\u5834\u5408\u306f\u305d\u308c\u3067\u4e8b\u8db3\u308a\u307e\u3059\u304c\u3001mruby \u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u306f C \u8a00\u8a9e\u3067\u66f8\u304b\u308c\u305f\u30b3\u30fc\u30c9\u3068 Ruby \u3067\u66f8\u304b\u308c\u305f\u30b3\u30fc\u30c9\u3092\u884c\u304d\u6765\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3001\u5358\u306b\u3069\u3053\u304b\u306e\u5909\u6570\u306b\u683c\u7d0d\u3059\u308b\u3060\u3051\u306f\u6e08\u307f\u307e\u305b\u3093\u3002\nC \u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u3068 Ruby \u306e\u30b3\u30fc\u30c9\u3092\u884c\u3063\u305f\u308a\u6765\u305f\u308a\u3057\u3064\u3064\u3001C \u8a00\u8a9e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u305f\u3081\u306e\u69cb\u9020\u4f53\u3092\u4fdd\u6301\u3057\u7d9a\u3051\u308b\u305f\u3081\u306b\u306f\u3001C \u8a00\u8a9e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u8981\u6c42\u3059\u308b\u69cb\u9020\u4f53\u306b\u76ae\u3092\u304b\u3076\u305b\u3066 Ruby \u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u3057\u307e\u3046\u306e\u304c\u4e00\u756a\u30b7\u30f3\u30d7\u30eb\u306a\u65b9\u6cd5\u3067\u3059\u3002mruby \u3067\u306f\u3001\u3053\u306e\u3088\u3046\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 (\u9069\u5f53\u306a\u540d\u524d\u304c\u7121\u3044\u3088\u3046\u306a\u306e\u3067\u4ee5\u4e0b Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u547c\u3073\u307e\u3059) \u3092\u6271\u3046\u30af\u30e9\u30b9\u3092\u305f\u3044\u3078\u3093\u7c21\u5358\u306b\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3053\u308c\u3092 \u6b63\u3057\u304f \u4f7f\u3046\u306e\u306f\u610f\u5916\u3068\u3084\u3063\u304b\u3044\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u3053\u306e Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6b63\u3057\u304f\u6271\u3046\u65b9\u6cd5\u3092\u3001Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6271\u3046 mrbgem \u3092\u4f5c\u308a\u306a\u304c\u3089\u89e3\u8aac\u3057\u307e\u3059\u3002\n\nmrbgem \u3092\u4f5c\u308b\n\u5b9a\u8de1\u901a\u308a \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u306b\u5f93\u3044\u3064\u3064 mrbgem \u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002mrbgem \u306e\u540d\u524d\u306f \"mruby-hoge\" \u306b\u3057\u307e\u3059\u3002\n\u307e\u305a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u968e\u5c64\u3092\u4f5c\u308a\u3001\n% cd mruby\n% mkdir mruby-hoge\n% mkdir mruby-hoge/src\n\nbuild_config.rb \u306b gem \u3092\u8db3\u3057\u3066\u3001\n\nbuild_config.rb\n  conf.gem \"#{root}/mruby-hoge\"\n\n\n\u7d9a\u3051\u3066 mruby-hoge/mrbgem.rake \u3092\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 \u304b\u3089\u30b3\u30d4\u30fc\u3057\u3066\u4f5c\u308a\u307e\u3059\u3002\u540d\u524d\u3060\u3051\u66f8\u304d\u5909\u3048\u3066\u3084\u308a\u307e\u3059\u3002\n\nmrbgem.rake\nMRuby::Gem::Specification.new('mruby-hoge') do |spec|\n  spec.license = 'MIT'\n  spec.author  = 'mruby developers'\nend                                   \n\n\nmruby-hoge/src/hoge.c \u306f\u307e\u305a\u4f55\u3082\u3057\u306a\u3044\u3082\u306e\u3092\u7f6e\u304d\u307e\u3059\u3002\n\nhoge.c\n#include \"mruby.h\"\n\nvoid\nmrb_mruby_hoge_gem_init(mrb_state *mrb)\n{\n}\n\nvoid\nmrb_mruby_hoge_gem_final(mrb_state *mrb)\n{\n}\n\n\n\u3053\u3053\u307e\u3067\u66f8\u3051\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308a\u307e\u3059\u3002\u306f\u3044\u3001\u4f55\u3082\u3057\u306a\u3044 mrbgem \u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\nNote: mruby \u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3092 C \u3067\u66f8\u304f\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f @cubicdaiya \u3055\u3093\u306e mruby\u3068C\u306e\u9023\u643a \u3068\u3044\u3046 Post \u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\u69cb\u9020\u4f53\u3092\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\n\u3055\u3066\u3001\u6e96\u5099\u304c\u3067\u304d\u305f\u306e\u3067C\u69cb\u9020\u4f53\u3092\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\u307e\u305a\u306f\u3066\u304d\u3068\u3046\u306bC\u69cb\u9020\u4f53\u3092\u7528\u610f\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u30e1\u30f3\u30d0\u306b\u30dd\u30a4\u30f3\u30bf\u3092\u542b\u3080\u3068\u8a71\u304c\u3084\u3084\u3053\u3057\u304f\u306a\u308b\u306e\u3067\u3001\u307e\u305a\u306f\u30dd\u30a4\u30f3\u30bf\u3092\u542b\u307e\u306a\u3044\u69cb\u9020\u4f53\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nstruct hoge {\n  int num;\n};\n\n\u305d\u3057\u3066\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n#include \"mruby/class.h\"\n#include \"mruby/value.h\"\n\nvoid\nmrb_mruby_hoge_gem_init(mrb_state *mrb)\n{\n  struct RClass *cls;\n\n  cls = mrb_define_class(mrb, \"Hoge\", mrb->object_class);\n  MRB_SET_INSTANCE_TT(cls, MRB_TT_DATA);\n  mrb_define_method(mrb, cls, \"initialize\", mrb_hoge_init, MRB_ARGS_NONE());\n}\n\n\u30af\u30e9\u30b9\u306e\u4f5c\u6210\u306f\u3075\u3064\u3046\u306b mrb_define_class \u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u306e\u6642 Object \u30af\u30e9\u30b9\u306e\u5b50\u30af\u30e9\u30b9\u3068\u3057\u3066\u3044\u308b\u306e\u304c\u7b2c\u4e00\u306e\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002Data \u30af\u30e9\u30b9\u306f\u57fa\u672c\u7684\u306b Object \u4ee5\u5916\u306e\u7d44\u307f\u8fbc\u307f\u30af\u30e9\u30b9\u306e\u5b50\u5b6b\u306b\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u3046\u3063\u304b\u308a\u4ed6\u30af\u30e9\u30b9\u306e\u5b50\u306b\u3057\u3066\u3057\u307e\u3046\u3068\u30e1\u30e2\u30ea\u7834\u58ca\u306e\u30d0\u30b0\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\nNote: \u3069\u3046\u307e\u305a\u3044\u306e\u304b\u77e5\u308a\u305f\u3044\u4eba\u306f src/gc.c \u306e gc_mark_children() \u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u6b21\u306b\n  MRB_SET_INSTANCE_TT(cls, MRB_TT_DATA);\n\n\u3067\u3001\u3044\u307e\u4f5c\u3063\u305f\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u3092 MRB_TT_DATA \u3068\u5ba3\u8a00\u3057\u307e\u3059\u3002\u3053\u306e\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u306f GC \u6642\u306e\u5f8c\u59cb\u672b\u306a\u3069\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u53d6\u6271\u3044\u306b\u5f71\u97ff\u3057\u307e\u3059\u3002\u6700\u5f8c\u306b initialize \u30e1\u30bd\u30c3\u30c9\u3092 mrb_hoge_init \u95a2\u6570\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u3053\u307e\u3067 struct hoge \u304c\u51fa\u3066\u304d\u3066\u3044\u307e\u305b\u3093\u304c\u3001Hoge \u30af\u30e9\u30b9\u3068 struct hoge \u306e\u7d10\u4ed8\u3051\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf mrb_hoge_init \u306e\u4e2d\u3067\u884c\u308f\u308c\u307e\u3059\u3002\n\nNote: \u672c\u7a3f\u3067\u4f5c\u6210\u3057\u305f mrbgem \u3067\u306f\u3001mrbgem \u306e\u540d\u524d\u3068\u69cb\u9020\u4f53\u540d\u3068\u95a2\u6570\u540d\u306b\u3059\u3079\u3066 \"hoge\" \u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u5358\u306a\u308b\u6163\u4f8b\u3067\u30eb\u30fc\u30eb\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u4efb\u610f\u306e\u540d\u524d\u306b\u5909\u3048\u3066\u3082\u52d5\u304d\u307e\u3059\u3002\u305f\u3060\u3057 mrbgem \u306e\u540d\u524d\u3068 mrbgem \u306e\u521d\u671f\u5316/\u7d42\u4e86\u95a2\u6570\u306e\u540d\u524d\u3060\u3051\u306f\u4f8b\u5916\u7684\u306b\u5f37\u3044\u4f9d\u5b58\u95a2\u4fc2\u304c\u3042\u308a\u3001\u30d3\u30eb\u30c9\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066 mrb_#{mrbgem\u306e\u540d\u524d}_gem_init/final \u3068\u6c7a\u3081\u3089\u308c\u3066\u304a\u308a\u5909\u66f4\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u3055\u3066\u3001mrb_hoge_init \u306e\u4e2d\u8eab\u3092\u66f8\u304f\u524d\u306b\u3082\u3046\u3072\u3068\u3064\u6e96\u5099\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n#include \"mruby/data.h\"\n\nconst static struct mrb_data_type mrb_hoge_type = { \"Hoge\", mrb_free };\n\nstruct mrb_data_type \u578b\u306e\u5909\u6570 mrb_hoge_type \u3092\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002struct mrb_data_type \u306f\u3001Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c GC \u3067\u56de\u53ce\u3055\u308c\u308b\u6642\u306b\u5f8c\u59cb\u672b\u3092\u3059\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\u3002struct mrb_data_type \u306e\u5b9a\u7fa9\u306f mruby/data.h \u306b\u3042\u308a\u307e\u3059:\n\nmruby/data.h\n14 typedef struct mrb_data_type {\n15   const char *struct_name;\n16   void (*dfree)(mrb_state *mrb, void*);\n17 } mrb_data_type;\n\n\nstruct_name \u306f\u4f8b\u5916\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u3057\u3066\u8868\u793a\u3059\u308b\u305f\u3081\u306b\u3057\u304b\u4f7f\u308f\u308c\u306a\u3044\u305f\u3081\u9069\u5f53\u3067\u69cb\u3044\u307e\u305b\u3093\u3002\u305d\u306e\u30af\u30e9\u30b9\u306e\u540d\u524d\u3092\u66f8\u304f\u306e\u304c\u6163\u4f8b\u3067\u3059\u3002\u4e00\u65b9\u3082\u3046\u3072\u3068\u3064\u306e\u30e1\u30f3\u30d0 dfree \u306f\u8d85\u91cd\u8981\u3067\u3059\u3002dfree \u306f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3067\u3001\u305d\u306e\u95a2\u6570\u306f Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c GC \u306b\u3088\u3063\u3066\u5230\u9054\u4e0d\u80fd(=\u30b4\u30df)\u3068\u5224\u5b9a\u3055\u308c\u305f\u6642\u306b\u547c\u3070\u308c\u3001malloc \u3057\u305f\u9818\u57df\u3084\u30d5\u30a1\u30a4\u30eb\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\u306e\u89e3\u653e\u306a\u3069\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5f8c\u59cb\u672b\u3092\u884c\u3044\u307e\u3059\u3002\n\u3055\u3066 Hoge \u30af\u30e9\u30b9\u306e mrb_data_type \u3092\u6539\u3081\u3066\u898b\u3066\u307f\u307e\u3059\u3002\nconst static struct mrb_data_type mrb_hoge_type = { \"Hoge\", mrb_free };\n\nmrb_hoge_type \u306f\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u305f\u3081 const \u3067\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\u306f\u3058\u3081\u306e\u30e1\u30f3\u30d0 struct_name \u306f\u6163\u4f8b\u306b\u5f93\u3063\u3066\u30af\u30e9\u30b9\u306e\u540d\u524d\u3068\u540c\u3058 \"Hoge\" \u3068\u3057\u307e\u3057\u305f\u3002\u305d\u3057\u3066 dfree \u306b\u306f mruby \u306e\u30e1\u30e2\u30ea\u7ba1\u7406 API \u3092\u305d\u306e\u307e\u307e\u4f7f\u3063\u3066 mrb_free \u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\u5f8c\u8ff0\u306e\u3088\u3046\u306b\u69cb\u9020\u4f53\u306e\u9818\u57df\u3092 mrb_malloc \u3092\u4f7f\u3063\u3066\u78ba\u4fdd\u3059\u308b Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001\u307e\u305f\u69cb\u9020\u4f53\u30e1\u30f3\u30d0\u306b\u30dd\u30a4\u30f3\u30bf\u306a\u3069\u306e\u89e3\u653e\u304c\u5fc5\u8981\u306a\u30ea\u30bd\u30fc\u30b9\u3092\u542b\u307e\u306a\u3044\u5834\u5408\u306f mrb_free \u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u306e\u304c\u304b\u3093\u305f\u3093\u3067\u3059\u3002\n\nNote: \u30dd\u30a4\u30f3\u30bf\u3092\u542b\u307e\u306a\u304f\u3066\u3082\u3001\u30d5\u30a1\u30a4\u30eb\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\u7b49\u306e\u89e3\u653e\u51e6\u7406\u304c\u5fc5\u8981\u306a\u30ea\u30bd\u30fc\u30b9\u3092\u542b\u3080\u5834\u5408\u306f\u30ab\u30b9\u30bf\u30e0 dfree \u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u6e96\u5099\u304c\u3067\u304d\u305f\u306e\u3067 mrb_hoge_init \u3092\u66f8\u304d\u307e\u3059\u3002\nmrb_value\nmrb_hoge_init(mrb_state *mrb, mrb_value self)\n{\n  struct hoge *h;\n\n  h = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n  h->num = 1234;\n  DATA_TYPE(self) = &mrb_hoge_type;\n  DATA_PTR(self) = h;\n  return self;\n}\n\n\u4e00\u884c\u3065\u3064\u898b\u3066\u3086\u304d\u307e\u3059\u3002\n\u307e\u305a mrb_malloc \u3067\u69cb\u9020\u4f53\u306e\u30c7\u30fc\u30bf\u9818\u57df\u3092\u78ba\u4fdd\u3057\u307e\u3059\u3002mrb_malloc \u306f malloc(3) \u3068\u540c\u3058\u3088\u3046\u306b\u52d5\u304d\u307e\u3059\u304c\u3001 \u4f8b\u5916\u3092\u4e0a\u3052\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b \u70b9\u304c\u5927\u304d\u306a\u9055\u3044\u3067\u3059\u3002 \u4f8b\u5916\u3092\u4e0a\u3052\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u3053\u91cd\u8981\u3067\u3059\u3002\u305d\u3057\u3066\u78ba\u4fdd\u3057\u305f h \u306b\u9069\u5f53\u306b\u5024\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u30e1\u30f3\u30d0 num \u306b 1234 \u3067\u3082\u5165\u308c\u3066\u304a\u304d\u307e\u3059\u3002\n\u6b21\u306b\n  DATA_TYPE(self) = &mrb_hoge_type;\n\n\u3067 self \u306e\u30c7\u30fc\u30bf\u578b\u3092 mrb_hoge_type \u306b\u8a2d\u5b9a\u3057\u3001\n  DATA_PTR(self) = h;\n\n\u3067\u3044\u307e\u78ba\u4fdd\u3057\u305f\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u30dd\u30a4\u30f3\u30bf\u3092 self \u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u3053\u3053\u307e\u3067\u3067 C \u69cb\u9020\u4f53\u3092\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u69cb\u9020\u4f53\u306e\u4e2d\u8eab\u306e\u53c2\u7167\n\u3055\u304d\u307b\u3069\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30dd\u30a4\u30f3\u30bf\u3092\u30bb\u30c3\u30c8\u3059\u308b\u306e\u306b\u4f7f\u3063\u305f DATA_PTR \u306f\u3001\u53cd\u5bfe\u306b\u30e9\u30c3\u30d7\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u306b\u3082\u4f7f\u3048\u307e\u3059\u3002\u3053\u308c\u3092\u5229\u7528\u3057\u3066\u5024\u3092\u53d6\u308a\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u8db3\u3057\u3066\u307f\u307e\u3059\u3002\n\u307e\u305a Hoge \u30af\u30e9\u30b9\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u540d\u524d\u306f\u30d9\u30bf\u306b #get \u30e1\u30bd\u30c3\u30c9\u3068\u3057\u307e\u3059\u3002\nvoid\nmrb_mruby_hoge_gem_init(mrb_state *mrb)\n{\n  ...\n  mrb_define_method(mrb, cls, \"get\", mrb_hoge_get, MRB_ARGS_NONE());\n}\n\n#get \u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5 mrb_hoge_get \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059:\nmrb_value\nmrb_hoge_get(mrb_state *mrb, mrb_value self)\n{\n  struct hoge *h;\n\n  h = DATA_PTR(self);\n  return mrb_fixnum_value(h->num);\n}\n\n\u3053\u306e\u3088\u3046\u306b\u3057\u3066 DATA_PTR \u3067\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u308a\u51fa\u305b\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002\n% bin/mruby -e 'a = Hoge.new; p a.get'\n1234\n\n\u306f\u3044\u3001\u30d0\u30c3\u30c1\u30ea\u3067\u3059\u306d\u3002get \u3092\u4f5c\u3063\u305f\u306e\u3067\u7d9a\u3051\u3066 put \u3082\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\nmrb_value\nmrb_hoge_put(mrb_state *mrb, mrb_value self)\n{\n  struct hoge *h;\n  mrb_int num;\n\n  mrb_get_args(mrb, \"i\", &num);\n  h = DATA_PTR(self);\n  h->num = num;\n  return mrb_fixnum_value(num);\n}\n\nvoid\nmrb_mruby_hoge_gem_init(mrb_state *mrb)\n{\n  ...\n  mrb_define_method(mrb, cls, \"put\", mrb_hoge_put, MRB_ARGS_REQ(1));\n}\n\n\u3053\u3061\u3089\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\n% bin/mruby -e 'a = Hoge.new; a.put(3); p a.get'\n3\n\n\u3046\u307e\u304f\u52d5\u3044\u3066\u3044\u307e\u3059\u306d\u3002Hoge \u306f Object \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u306e\u3067\u3001Object \u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3082\u3075\u3064\u3046\u306b\u4f7f\u3048...\n% bin/mruby -e 'a = Hoge.new; p a.object_id; p a.nil?; p a.dup.get'\n1907878821\nfalse\nzsh: segmentation fault (core dumped)  bin/mruby -e 'a = Hoge.new; p a.object_id; p a.nil?; p a.dup.get'\n\n\u304a\u3084?\n\n#dup\nsegmentation fault \u304c\u767a\u751f\u3057\u305f\u539f\u56e0\u3092\u63a2\u3063\u3066\u307f\u307e\u3059\u3002\n% bin/mruby -e 'a = Hoge.new; a.dup'\n% bin/mruby -e 'a = Hoge.new; a.dup.get'\nzsh: segmentation fault (core dumped)  bin/mruby -e 'a = Hoge.new; a.dup.get'\n\n#dup \u3057\u305f\u3060\u3051\u306a\u3089\u5927\u4e08\u592b\u3067\u3059\u3002\u305d\u306e\u5f8c\u3067 #get \u3092\u547c\u3076\u3068\u6b7b\u306b\u307e\u3059\u3002core \u304c\u3042\u308b\u306e\u3067\u898b\u3066\u307f\u307e\u3059\u3002\n% gdb bin/mruby mruby.core\nGNU gdb 6.3\n...\nCore was generated by `mruby'.\nProgram terminated with signal 11, Segmentation fault.\n...\n#0  mrb_hoge_get (mrb=0xb2fae690200, self=\n      {value = {f = 6.076630865399442e-311, p = 0xb2fa3b32b80, i = -1548539008, \nsym = 11136}, tt = MRB_TT_DATA}) at value.h:419\n419       MRB_SET_VALUE(v, MRB_TT_FIXNUM, value.i, i);\n(gdb) l\n414     static inline mrb_value\n415     mrb_fixnum_value(mrb_int i)\n416     {\n417       mrb_value v;\n418     \n419       MRB_SET_VALUE(v, MRB_TT_FIXNUM, value.i, i);\n420       return v;\n421     }\n422     \n423     static inline mrb_value\n(gdb)\n\n\u9762\u5012\u306a\u3053\u3068\u306b\u30a4\u30f3\u30e9\u30a4\u30f3\u5c55\u958b\u3055\u308c\u305f\u3068\u3053\u308d\u3067\u6b7b\u3093\u3067\u3044\u307e\u3059...\u3002\u3068\u3044\u3063\u3066\u3082 mrb_hoge_get \u306e\u4e2d\u306e\u30dd\u30a4\u30f3\u30bf\u5909\u6570\u306f\u3072\u3068\u3064\u3060\u3051\u3067\u3059\u3002\u3053\u308c\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n#include <stdio.h>\n\nmrb_value\nmrb_hoge_get(mrb_state *mrb, mrb_value self)\n{\n  struct hoge *h;\n\n  h = DATA_PTR(self);\n  fprintf(stderr, \"h=%p\\n\", h);\n  return mrb_fixnum_value(h->num);\n}\n\n% bin/mruby -e 'a = Hoge.new; a.dup.get'\nh=0x0\nzsh: segmentation fault (core dumped)  bin/mruby -e 'a = Hoge.new; a.dup.get'\n\n\u306f\u3044\u3001NULL \u30dd\u30a4\u30f3\u30bf\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\u539f\u56e0\u306f\u3053\u308c\u3067\u3059\u306d\u3002\n\u3067\u306f DATA_PTR(self) \u304c\u306a\u305c NULL \u306a\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u7b54\u3048\u306f\u304b\u3093\u305f\u3093\u3067\u3001\u8ab0\u3082\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u3044\u304b\u3089\u3067\u3059\u3002Hoge#dup \u306e\u5b9f\u4f53\u306f Object \u30af\u30e9\u30b9\u306e #dup \u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u3057\u304b\u3057 Object \u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5b50\u30af\u30e9\u30b9\u5074\u3067 DATA_PTR(self) \u3092\u4f7f\u3063\u3066\u3044\u308b\u306a\u3093\u3066\u77e5\u308a\u307e\u305b\u3093\u3002\u3064\u307e\u308a\u3053\u3053\u306f\u5b50\u30af\u30e9\u30b9\u5074\u3067\u9762\u5012\u3092\u898b\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u3042\u305f\u308a\u306f\u5b9f\u306f CRuby \u3068\u540c\u3058\u3067\u3001#initialize_copy \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3066\u3084\u308c\u3070 #dup \u3082\u304d\u3061\u3093\u3068\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u5b9f\u88c5\u306f\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059:\nstatic mrb_value\nmrb_hoge_init_copy(mrb_state *mrb, mrb_value copy)\n{\n  mrb_value src;\n\n  mrb_get_args(mrb, \"o\", &src);\n  if (mrb_obj_equal(mrb, copy, src)) return copy;\n  if (!mrb_obj_is_instance_of(mrb, src, mrb_obj_class(mrb, copy))) {\n    mrb_raise(mrb, E_TYPE_ERROR, \"wrong argument class\");\n  }\n  if (!DATA_PTR(copy)) {\n    DATA_PTR(copy) = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n    DATA_TYPE(copy) = &mrb_hoge_type;\n  }\n  *(struct hoge *)DATA_PTR(copy) = *(struct hoge *)DATA_PTR(src);\n  return copy;\n}\n\n\u7406\u89e3\u3057\u306b\u304f\u3044\u30b3\u30fc\u30c9\u304c\u4e26\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u3084\u3089\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u306e\u306f\u6700\u5f8c\u306b\u69cb\u9020\u4f53\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308b\u500b\u6240\u3060\u3051\u3067\u3001\u6b8b\u308a\u306f Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e #initialize_copy \u306e\u5b9f\u88c5\u306a\u3089\u3069\u308c\u3067\u3082(\u307b\u307c)\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n  *(struct hoge *)DATA_PTR(copy) = *(struct hoge *)DATA_PTR(src);\n\n\u3042\u307e\u308a\u304a\u76ee\u306b\u304b\u304b\u3089\u306a\u3044\u69cb\u9020\u4f53\u306e\u4ee3\u5165\u69cb\u6587\u3067\u307e\u308b\u3063\u3068\u30b3\u30d4\u30fc\u3057\u3066\u3044\u307e\u3059\u3002struct hoge \u306b\u306f\u30e1\u30f3\u30d0\u304c num \u3057\u304b\u3042\u308a\u307e\u305b\u3093\u304b\u3089\u3001\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u7d50\u5c40 copy \u306e num \u3092 src \u306e num \u306b\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\u3055\u3066\u3001\u76f4\u3063\u305f\u3067\u3057\u3087\u3046\u304b\u3002\u9577\u304f\u306a\u308b\u305f\u3081\u4eca\u5ea6\u306f mirb \u3067\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n% bin/mirb\nmirb - Embeddable Interactive Ruby Shell\n\nThis is a very early version, please test and report errors.\nThanks :)\n\n> a = Hoge.new\n => #<Hoge:0xc7678ec9bb0>\n> a.put(3)\n => 3\n> b = a.dup\n => #<Hoge:0xc7678ec9a60>\n> p b.get\n3\n => 3\n> b.put(4)\n => 4\n> p b.get\n4\n => 4\n> p a.get\n3\n => 3\n\n\u3046\u307e\u304f\u52d5\u3044\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u30ab\u30b9\u30bf\u30e0 dfree\n\u305d\u308c\u3067\u306f\u3001\u3082\u3046\u5c11\u3057\u8907\u96d1\u306a\u69cb\u9020\u4f53\u3092\u30e9\u30c3\u30d7\u3057\u3066\u307f\u307e\u3059\u3002\u4f8b\u3068\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u69cb\u9020\u4f53 FILE * \u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u307e\u305a struct hoge \u306b\u30e1\u30f3\u30d0 FILE *fp \u3092\u8db3\u3057\u307e\u3059\u3002\n#include <stdio.h>\n\nstruct hoge {\n  int num;\n  FILE *fp;\n};\n\n\u6b21\u306b\u521d\u671f\u5316\u51e6\u7406 mrb_hoge_init \u306b fp \u306e\u521d\u671f\u5316\u3092\u8db3\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u69cb\u9020\u4f53\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u521d\u671f\u5316\u306a\u306e\u3067\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf Hoge.new \u306e\u5f15\u6570\u3068\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u53d6\u308b\u306e\u304c\u81ea\u7136\u3067\u3057\u3087\u3046\u3002\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3092 fopen(3) \u306b\u6e21\u3057\u3066\u3001\u8fd4\u308a\u5024\u3067 fp \u3067\u521d\u671f\u5316\u3057\u307e\u3059\u3002\n#include \"mruby/string.h\"\n\nmrb_value\nmrb_hoge_init(mrb_state *mrb, mrb_value self)\n{\n  FILE *fp;\n  struct hoge *h;\n  mrb_value path;\n  char *cpath;\n\n  mrb_get_args(mrb, \"S\", &path);\n  cpath = mrb_str_to_cstr(mrb, path);\n  fp = fopen(cpath, \"r\");\n  if (fp == NULL) {\n    mrb_raisef(mrb, E_ARGUMENT_ERROR, \"cannot open file: %S\", path);\n  }\n\n  h = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n  h->num = 1234;\n  h->fp = fp;\n  DATA_TYPE(self) = &mrb_hoge_type;\n  DATA_PTR(self) = h;\n  return self;\n}\n\n\nNote: mrb_str_to_cstr \u306f mruby \u306e String \u3092\u683c\u7d0d\u3057\u305f mrb_value \u304b\u3089 C \u8a00\u8a9e\u306e NUL \u7d42\u7aef\u6587\u5b57\u5217\u3092\u53d6\u308a\u51fa\u3059\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u95a2\u6570\u3067\u3059\u3002\"mruby/string.h\" \u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u540c\u69d8\u306e\u6a5f\u80fd\u3092\u6301\u3064\u3082\u306e\u306b RSTRING_PTR \u30de\u30af\u30ed\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u9069\u5207\u306a\u9577\u3055\u3067 NUL \u7d42\u7aef\u3055\u308c\u3066\u3044\u308b\u4fdd\u8a3c\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u3061\u3087\u3063\u3068\u8907\u96d1\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3068\u8868\u308c\u308b\u3068\u3044\u3046\u8ffd\u3044\u96e3\u3044\u30d0\u30b0\u306e\u539f\u56e0\u3068\u306a\u308b\u305f\u3081\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u5148\u306b\u66f8\u3044\u3066\u304a\u304f\u3068\u3001\u4e0a\u306e\u30b3\u30fc\u30c9\u306b\u306f \u30d0\u30b0\u304c\u3042\u308a\u307e\u3059\u3002 \u304c\u3001\u3072\u3068\u307e\u305a\u5148\u306b\u89e3\u653e\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002\u89e3\u653e\u3059\u308b\u95a2\u6570\u306e\u540d\u524d\u306f mrb_hoge_free \u3068\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u95a2\u6570\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u306f\u3001\u5148\u8ff0\u306e\u901a\u308a \"mruby/data.h\" \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\n\nmruby/data.h\n  void (*dfree)(mrb_state *mrb, void*);\n\n\n\u306b\u5408\u308f\u305b\u307e\u3059\u3002mrb \u306f\u304a\u306a\u3058\u307f\u306e mrb_state \u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3067\u3001\u3082\u3046\u3072\u3068\u3064\u306e\u5f15\u6570\u304c C \u8a00\u8a9e\u69cb\u9020\u4f53\u306e\u30c7\u30fc\u30bf\u3092\u6307\u3057\u793a\u3059\u30dd\u30a4\u30f3\u30bf\u3067\u3059\u3002\u5b9f\u88c5\u306f\u3053\u306e\u901a\u308a\u3067\u3059:\nstatic void\nmrb_hoge_free(mrb_state *mrb, void *ptr)\n{\n  struct hoge *h = ptr;\n\n  fclose(h->fp);\n  mrb_free(mrb, h);\n}\n\n\u307e\u305aC \u8a00\u8a9e\u69cb\u9020\u4f53\u306e\u30c7\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6301\u3064\u30ea\u30bd\u30fc\u30b9 h->fp \u3092\u89e3\u653e\u3057\u3001\u305d\u308c\u304b\u3089\u30c7\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u305d\u306e\u3082\u306e h \u3092\u89e3\u653e\u3057\u307e\u3059\u3002\u305d\u3057\u3066  mrb_hoge_type \u306e dfree \u3092\u3044\u307e\u5b9a\u7fa9\u3057\u305f mrb_hoge_free \u95a2\u6570\u3067\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\nconst static struct mrb_data_type mrb_hoge_type = { \"Hoge\", mrb_hoge_free };\n\n\u305d\u308c\u3067\u306f\u65b0\u3057\u304f\u8ffd\u52a0\u3057\u305f fp \u3092\u4f7f\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u8aad\u307f\u51fa\u3059 #read \u30e1\u30bd\u30c3\u30c9\u306b\u3057\u307e\u3059\u3002\u304d\u3061\u3093\u3068\u6a5f\u80fd\u3059\u308b\u3082\u306e\u3092\u4f5c\u308b\u306e\u306f\u5c11\u3005\u9762\u5012\u306a\u306e\u3067\u300c\u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u306e\u65b9\u3092\u305f\u3044\u3066\u3044\u8aad\u307f\u51fa\u305b\u308b\u300d\u30e1\u30bd\u30c3\u30c9\u306b\u3057\u307e\u3059\u3002\nmrb_mruby_hoge_gem_init() \u306b\u4ee5\u4e0b\u3092\u8db3\u3057\u3066 Hoge \u30af\u30e9\u30b9\u306b #read \u30e1\u30bd\u30c3\u30c9\u3092\u8db3\u3057\u307e\u3059\u3002\n  mrb_define_method(mrb, cls, \"read\", mrb_hoge_read, MRB_ARGS_NONE());\n\n#read \u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u3067\u3042\u308b mrb_hoge_read \u306f\u3053\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nmrb_value\nmrb_hoge_read(mrb_state *mrb, mrb_value self)\n{\n  struct hoge *h;\n  size_t n;\n  char buf[1024];\n\n  h = DATA_PTR(self);\n  n = fread(buf, 1, sizeof(buf), h->fp);\n  if (n == 0) {\n    mrb_raise(mrb, E_ARGUMENT_ERROR, \"fread(3) returns 0\");\n  }\n  return mrb_str_new(mrb, buf, n);\n}\n\n\u7d30\u304b\u3044\u3053\u3068\u306f\u6c17\u306b\u305b\u305a fread(3) \u3067 1024 \u30d0\u30a4\u30c8\u3092\u8aad\u307f\u51fa\u3057\u3066\u307f\u3066\u3001\u305d\u308c\u3092 mruby \u306e String \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3057\u3066\u8fd4\u3059\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n% rake\n% bin/mruby -e 'h = Hoge.new(\"mruby-hoge/mrbgem.rake\"); puts h.read'\nMRuby::Gem::Specification.new('mruby-hoge') do |spec|\n  spec.license = 'MIT'\n  spec.author  = 'Tomoyuki Sahara'\nend\n%\n\n\u610f\u56f3\u3057\u305f\u901a\u308a\u306b\u6a5f\u80fd\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u30ea\u30bd\u30fc\u30b9\u306e\u89e3\u653e\u30bf\u30a4\u30df\u30f3\u30b0\n\u6b8b\u5ff5\u306a\u304c\u3089\u3001\u73fe\u5728\u306e\u5b9f\u88c5\u306f\u5927\u304d\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u5229\u7528\u3059\u308b\u3068\u671f\u5f85\u901a\u308a\u306b\u3046\u307e\u304f\u52d5\u304d\u307e\u305b\u3093\u3002Hoge.new \u3092\u4f55\u56de\u3082\u547c\u3076\u3068\u5931\u6557\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059:\n% bin/mruby -e '10000.times { Hoge.new(\"mruby-hoge/mrbgem.rake\") }'\ntrace:\n        [2] -e:1:in Object.call\n        [0] -e:1\n-e:1: cannot open file: mruby-hoge/mrbgem.rake (ArgumentError)\n\n\u7e70\u308a\u8fd4\u3057\u306e\u56de\u6570\u3092\u305f\u3068\u3048\u3070 10 \u56de\u7a0b\u5ea6\u306b\u6e1b\u3089\u3057\u3066\u3084\u308b\u3068\u52d5\u4f5c\u3057\u307e\u3059\u3002\u56de\u6570\u304c\u591a\u304f\u306a\u308b\u3068\u52d5\u304b\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u539f\u56e0\u306f\u5c11\u3005\u308f\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3059\u304c\u3001\u30d5\u30a1\u30a4\u30eb\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\u306e\u4e0d\u8db3\u304c\u767a\u751f\u3057\u3066\u3044\u307e\u3059\u3002ulimit -n 20 \u7b49\u3068\u3057\u3066\u30ea\u30df\u30c3\u30c8\u3092\u5c0f\u3055\u304f\u3057\u3066\u3084\u308b\u3068\u3001\u30eb\u30fc\u30d7\u306e\u56de\u6570\u3068\u306e\u76f8\u95a2\u304c\u898b\u3066\u3068\u308c\u307e\u3059\u3002\n\nNote: iij/mruby-errno \u3092\u5229\u7528\u3059\u308b\u3068\u4f8b\u5916\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4ecb\u3057\u3066\u3082\u3046\u5c11\u3057\u8a73\u7d30\u306a\u30a8\u30e9\u30fc\u3092\u53d6\u5f97\u3067\u304d\u308b\u305f\u3081\u3001\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u53e9\u304f\u3088\u3046\u306a mrbgem \u306e\u30c7\u30d0\u30c3\u30b0\u304c\u697d\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3067\u3082\u3001\u3055\u3063\u304d\u78ba\u304b\u306b\u30d5\u30a1\u30a4\u30eb\u69cb\u9020\u4f53\u3092\u89e3\u653e(fclose)\u3059\u308b mrb_hoge_free \u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u3053\u308c\u304c\u6b63\u3057\u304f\u547c\u3070\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f mrb_hoge_free \u304c\u547c\u3070\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u3042\u308a\u307e\u3059\u3002mrb_hoge_free\u3001\u4e00\u822c\u5316\u3057\u3066 dfree \u306f Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u89e3\u653e\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u547c\u3070\u308c\u307e\u3059\u3002\u305d\u3057\u3066 mruby \u3067\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u89e3\u653e\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306f GC \u304c\u6c7a\u3081\u307e\u3059\u3002GC \u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u89e3\u653e\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0... \u306f\u3084\u3084\u3053\u3057\u3044\u306e\u3067\u8aac\u660e\u3092\u7701\u7565\u3057\u307e\u3059\u304c\u3001\u30eb\u30fc\u30d7\u304b\u3089\u629c\u3051\u305f\u6642\u306b GC \u304c\u8d70\u3089\u306a\u3044(\u3053\u3068\u304c\u3042\u308b)\u70b9\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u306b\u3001\u30eb\u30fc\u30d7\u5185\u3067\u4f5c\u6210\u3057\u305f Hoge \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3059\u3050\u306b\u306f\u89e3\u653e\u3055\u308c\u305a\u3001\u305d\u306e\u7d50\u679c Hoge \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u4fdd\u6301\u3059\u308b FILE \u69cb\u9020\u4f53\u3082\u30af\u30ed\u30fc\u30ba\u3055\u308c\u305a\u3001\u30d7\u30ed\u30bb\u30b9\u306e\u30ea\u30df\u30c3\u30c8\u306b\u9039\u3057\u305f\u3068\u3053\u308d\u3067 fopen(3) \u304c\u5931\u6557\u3057\u59cb\u3081\u307e\u3059\u3002\n\u3053\u306e\u554f\u984c\u306e\u5bfe\u51e6\u306f\u78ba\u4fdd\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u306e\u7279\u6027\u306b\u3082\u3088\u3063\u3066\u3044\u308d\u3044\u308d\u8003\u3048\u3089\u308c\u307e\u3059\u3002\u4eca\u56de\u306f CRuby (\u3084 iij/mruby-io) \u3067\u884c\u308f\u308c\u3066\u3044\u308b\u5bfe\u51e6\u3092\u5165\u308c\u3066\u307f\u307e\u3059\u3002\n  ...\n  fp = fopen(cpath, \"r\");\n  if (fp == NULL) {\n    if (errno == EMFILE || errno == ENFILE) {\n      mrb_full_gc(mrb);\n      fp = fopen(cpath, \"r\");\n    }\n    if (fp == NULL) {\n      mrb_raisef(mrb, E_ARGUMENT_ERROR, \"cannot open file: %S\", path);\n    }\n  }\n\n  h = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n  ...\n\nfopen(3) \u306b\u5931\u6557\u3057\u3001\u305d\u306e\u539f\u56e0\u304c\u30d5\u30a1\u30a4\u30eb\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\u6ea2\u308c\u3060\u3063\u305f\u5834\u5408\u306f\u5f37\u5236\u7684\u306b Full GC \u3092\u8d70\u3089\u305b\u3001\u5b99\u306b\u6d6e\u3044\u3066\u3044\u308b Hoge \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308c\u3070\u305d\u308c\u3092\u56de\u53ce\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u9593\u63a5\u7684\u306b mrb_hoge_free \u3092\u547c\u3073\u3001\u4e0d\u8981\u306a FILE \u69cb\u9020\u4f53\u3092 fclose(3) \u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n% bin/mruby -e '10000.times { Hoge.new(\"mruby-hoge/mrbgem.rake\") }'\n%\n\n\u3053\u306e\u901a\u308a\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30ea\u30bd\u30fc\u30b9\u306e\u8a2d\u5b9a\u9806\u5e8f\n\u5148\u306b \"\u30ab\u30b9\u30bf\u30e0 dfree\" \u306e\u7bc0\u3067\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u73fe\u5728\u306e mrb_hoge_init \u306e\u5b9f\u88c5\u306b\u306f \u30d0\u30b0\u304c\u3042\u308a\u307e\u3059\u3002 mrb_hoge_init \u3092\u518d\u63b2\u3057\u307e\u3059\u3002\u30d0\u30b0\u306f FILE \u69cb\u9020\u4f53\u306e\u30ea\u30fc\u30af\u3067\u3059\u3002\u3069\u3046\u3044\u3046\u30ed\u30b8\u30c3\u30af\u3067\u8d77\u3053\u308a\u5f97\u308b\u304b\u308f\u304b\u308a\u307e\u3059\u304b?\nmrb_value\nmrb_hoge_init(mrb_state *mrb, mrb_value self)\n{\n  FILE *fp;\n  struct hoge *h;\n  mrb_value path;\n  char *cpath;\n\n  mrb_get_args(mrb, \"S\", &path);\n  cpath = mrb_str_to_cstr(mrb, path);\n  fp = fopen(cpath, \"r\");\n  if (fp == NULL) {\n    if (errno == EMFILE || errno == ENFILE) {\n      mrb_full_gc(mrb);\n      fp = fopen(cpath, \"r\");\n    }\n    if (fp == NULL) {\n      mrb_raisef(mrb, E_ARGUMENT_ERROR, \"cannot open file: %S\", path);\n    }\n  }\n\n  h = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n  h->num = 1234;\n  h->fp = fp;\n  DATA_TYPE(self) = &mrb_hoge_type;\n  DATA_PTR(self) = h;\n  return self;\n}\n\n\u7b54\u3048\u306f mrb_malloc \u306e\u547c\u3073\u51fa\u3057\u3067\u3059\u3002\u3053\u306e\u4f4d\u7f6e\u3067\u547c\u3093\u3067\u306f\u3044\u3051\u307e\u305b\u3093\u3002\nC \u30d7\u30ed\u30b0\u30e9\u30de\u306a\u3089\u3071\u3063\u3068\u898b\u3066\u3001\u300cNULL \u30c1\u30a7\u30c3\u30af\u3057\u3066\u306a\u3044\u306a\u300d\u3068\u6c17\u3065\u304f\u3067\u3057\u3087\u3046\u3002\u3057\u304b\u3057\u305d\u308c\u3067\u306f\u3042\u308a\u307e\u305b\u3093(NULL \u30c1\u30a7\u30c3\u30af\u306f\u5fc5\u8981\u3068\u8a00\u3048\u3070\u5fc5\u8981\u3067\u3059\u304c... \u8a71\u304c\u9577\u304f\u306a\u308b\u305f\u3081\u5272\u611b\u3057\u307e\u3059)\u3002\u5b9f\u306f\u3001mrb_malloc \u306f \u4f8b\u5916\u3092\u767a\u751f\u3057 longjmp(3) \u3092\u4f7f\u3063\u3066\u4e00\u8db3\u98db\u3073\u306b mrb_hoge_init \u304b\u3089\u629c\u3051\u51fa\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u3053\u306e\u4f4d\u7f6e\u3067\u629c\u3051\u51fa\u3055\u308c\u308b\u3068\u3001\u76f4\u524d\u306b\u958b\u3044\u305f fp \u304c\u30b3\u30fc\u30eb\u30b9\u30bf\u30c3\u30af\u304b\u3089\u6d88\u3048\u3055\u308a\u89e3\u653e\u3057\u3088\u3046\u304c\u7121\u304f\u306a\u308a\u307e\u3059\u3002\n\nNote: \u3069\u3093\u306a\u4f8b\u5916\u3092\u3069\u3093\u306a\u5834\u5408\u306b\u4e0a\u3052\u308b\u304b\u8208\u5473\u306e\u3042\u308b\u65b9\u306f src/gc.c \u304b\u3089\u305f\u3069\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u306e\u30d0\u30b0\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089 mruby \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u307b\u3068\u3093\u3069\u554f\u984c\u306b\u306a\u3089\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u3057\u304b\u3057\u5916\u90e8\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b libmruby \u3092\u30ea\u30f3\u30af\u3057\u3001\u30ab\u30b9\u30bf\u30e0\u30e1\u30e2\u30ea\u30a2\u30ed\u30b1\u30fc\u30bf(mrb->allocf)\u3092\u4f7f\u3063\u3066\u30e1\u30e2\u30ea\u5bb9\u91cf\u306b\u4e0a\u9650\u3092\u8a2d\u3051\u3066\u304a\u304f\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u3001mruby \u5185\u3067\u306e\u30ea\u30bd\u30fc\u30b9\u30ea\u30fc\u30af\u304c\u7d44\u307f\u8fbc\u307f\u5148\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6bba\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u554f\u984c\u306f\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3067\u56de\u907f\u304c\u53ef\u80fd\u3067\u3059\u3002\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3067\u306f mrb_malloc \u306e\u547c\u3073\u51fa\u3057\u3092 fopen \u306e\u76f4\u524d\u306b\u6301\u3063\u3066\u304f\u308b\u306e\u304c\u3044\u3061\u3070\u3093\u7c21\u5358\u3067\u3059\u3002\u3057\u304b\u3057\u3072\u3068\u3064\u306e\u69cb\u9020\u4f53\u306e\u4e2d\u306b\u78ba\u4fdd/\u89e3\u653e\u304c\u5fc5\u8981\u306a\u30ea\u30bd\u30fc\u30b9\u304c\u8907\u6570\u3042\u3063\u305f\u308a\u3001\u307e\u305f\u521d\u671f\u5316\u95a2\u6570\u306e\u4e2d\u3067 mrb_malloc() \u4ee5\u5916\u306e\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u3046\u308b\u95a2\u6570\u3092\u547c\u3076\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u3068\u305f\u3093\u306b\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u3002\u3088\u3063\u3066\u3001\u3053\u3053\u3067\u306f\u3082\u3046\u5c11\u3057\u4e00\u822c\u7684\u306a\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nNote: \u300c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u3046\u308b\u95a2\u6570\u300d\u3068\u3044\u3046\u306e\u304c\u66f2\u8005\u3067\u3059\u3002mruby \u306e\u591a\u7a2e\u591a\u69d8\u306a API \u306e\u3046\u3061\u3001\u3069\u306e\u95a2\u6570\u304c\u4f8b\u5916\u3092\u767a\u751f\u3057\u5f97\u308b\u304b\u306f\u305d\u306e\u95a2\u6570\u306e\u5b9f\u88c5\u3092\u305f\u3093\u306d\u3093\u306b\u8ffd\u3063\u3066\u3086\u304b\u306a\u3044\u3068\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\n\u307e\u305a mrb_malloc() \u306b\u3088\u308b\u69cb\u9020\u4f53\u306e\u30a2\u30ed\u30b1\u30fc\u30c8\u3068 DATA_TYPE/DATA_PTR \u306e\u30bb\u30c3\u30c8\u3092\u5148\u982d\u306b\u6301\u3063\u3066\u304d\u307e\u3059\u3002\n  ...\n  char *cpath;\n\n  h = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n  DATA_TYPE(self) = &mrb_hoge_type;\n  DATA_PTR(self) = h;\n\n  mrb_get_args(mrb, \"S\", &path);\n  ...\n\n\u3053\u308c\u306a\u3089 mrb_malloc() \u304c\u4f8b\u5916\u3092\u4e0a\u3052\u3066\u3082\u30ea\u30fc\u30af\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u306f\u4f55\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u3057\u3066 mrb_get_args \u306e\u547c\u3073\u51fa\u3057\u4ee5\u964d\u3067\u4f8b\u5916\u304c\u4e0a\u304c\u3063\u3066\u3082(\u3042\u308b\u3044\u306f return \u3067\u629c\u3051\u3066\u3082)\u3001self \u306b\u306f DATA_TYPE \u3067 GC \u7528\u306e\u69cb\u9020\u304c\u8a2d\u5b9a\u6e08\u307f\u3067\u3059\u304b\u3089\u3001mrb_malloc() \u3067\u78ba\u4fdd\u3057\u305f DATA_PTR(self) = h \u306f\u3044\u305a\u308c GC \u306b\u3088\u3063\u3066\u89e3\u653e\u3055\u308c\u307e\u3059\u3002\u305f\u3060\u3057\u3053\u306e\u307e\u307e\u3067\u306f h->fp \u304c\u521d\u671f\u5316\u3055\u308c\u306a\u3044\u307e\u307e mrb_hoge_free \u304c\u547c\u3070\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u89e3\u653e\u524d\u306f NULL \u3067\u521d\u671f\u5316\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n  ...\n  h = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n  h->fp = NULL;\n  DATA_TYPE(self) = &mrb_hoge_type;\n  DATA_PTR(self) = h;\n  ...\n\nh->fp \u304c NULL \u306e\u5834\u5408\u3067\u3082\u3061\u3083\u3093\u3068\u52d5\u304f\u3088\u3046\u306b mrb_hoge_free \u3082\u66f4\u65b0\u3057\u307e\u3059\u3002\nstatic void\nmrb_hoge_free(mrb_state *mrb, void *ptr)\n{\n  struct hoge *h = ptr;\n\n  if (h->fp != NULL) {\n    fclose(h->fp);\n    h->fp = NULL;\n  }\n  mrb_free(mrb, h);\n}\n\n\u3053\u306e\u3088\u3046\u306b mrb_malloc() \u3067 C \u8a00\u8a9e\u69cb\u9020\u4f53\u3092\u307e\u305a\u306f\u3058\u3081\u306b\u78ba\u4fdd\u3057\u3001\u4f8b\u5916\u304c\u767a\u751f\u3057\u306a\u3044\u3053\u3068\u304c\u62c5\u4fdd\u3055\u308c\u3066\u3044\u308b\u9593\u306b NULL \u3084 -1 \u3068\u3044\u3063\u305f\u78ba\u4fdd\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u5024\u3067\u57cb\u3081\u3066\u304a\u304d\u3001\u3044\u3064\u3069\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u547c\u3070\u308c\u3066\u3082\u30ea\u30bd\u30fc\u30b9\u3092\u9069\u5207\u306b\u89e3\u653e\u3067\u304d\u308b\u3088\u3046\u306b dfree \u95a2\u6570\u3092\u66f8\u3044\u3066\u304a\u304f\u306e\u304c\u30ea\u30bd\u30fc\u30b9\u30ea\u30fc\u30af\u3092\u907f\u3051\u308b\u30b3\u30c4\u3067\u3059\u3002\n\n\u7d42\u308f\u308a\u306b\n\u672c\u65e5\u306f mruby \u3067 C \u8a00\u8a9e\u306e\u69cb\u9020\u4f53\u3092\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6b63\u3057\u304f\u53d6\u308a\u6271\u3046\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u4ed6\u306b\u3082\u3001\n\nTCPSocket \u306e\u3088\u3046\u306a\u8907\u96d1\u306a #initialize \u3092\u6301\u3064 Data \u30af\u30e9\u30b9\u3067\u3001#initalize \u3092 Ruby \u306e\u30b3\u30fc\u30c9\u3067\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\nData \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u6642\u306e DATA_TYPE/DATA_PTR \u306e\u521d\u671f\u5316\u306e\u4ed5\u65b9\nSystemCallError \u306e\u3088\u3046\u306b .new \u306e\u5f15\u6570\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\u6cd5\n\u30ea\u30bd\u30fc\u30b9\u3092\u6301\u3064 Data \u30af\u30e9\u30b9\u306e initialize_copy \n\n\u306a\u3069\u53d6\u308a\u4e0a\u3052\u305f\u3044\u30cd\u30bf\u306f\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u6642\u9593\u5207\u308c\u3068\u306a\u308a\u307e\u3057\u305f\u306e\u3067\u3053\u306e\u8a18\u4e8b\u306f\u3053\u3053\u3067\u304a\u3057\u307e\u3044\u3067\u3059\u3002\u9577\u3044\u8a18\u4e8b\u306b\u304a\u4ed8\u304d\u5408\u3044\u3044\u305f\u3060\u304d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n# mruby \u3067 C \u8a00\u8a9e\u306e\u69cb\u9020\u4f53\u3092\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u6b63\u3057\u3044\u65b9\u6cd5\n\nmruby \u306f\u5c0f\u3055\u306a\u8a00\u8a9e\u51e6\u7406\u7cfb\u3067\u3059\u3002\u305d\u308c\u5358\u4f53\u3067\u306f HTTP \u901a\u4fe1\u3084 JSON \u306e\u8aad\u307f\u66f8\u304d\u306f\u304a\u308d\u304b\u3001\u30d5\u30a1\u30a4\u30eb I/O \u3059\u3089\u3067\u304d\u307e\u305b\u3093\u3002Ruby \u306e\u51e6\u7406\u7cfb\u306a\u306e\u306b\u6b63\u898f\u8868\u73fe\u3082\u4f7f\u3048\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u3001mrbgem \u3068\u547c\u3070\u308c\u308b\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7d44\u307f\u8fbc\u3080\u3053\u3068\u3067\u3001\u5fc5\u8981\u306a\u6a5f\u80fd\u3092\u5fc5\u8981\u306a\u3060\u3051\u8db3\u3057\u3066\u3084\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nmrbgem \u306e\u958b\u767a\u306f\u304b\u3093\u305f\u3093\u3067\u3059\u3002mrbgem \u306f C \u3068 Ruby (mruby) \u306e\u30b3\u30fc\u30c9\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002mruby \u306e\u65e2\u5b58\u306e\u6a5f\u80fd\u3067\u5b9f\u73fe\u53ef\u80fd\u306a\u7bc4\u56f2\u306e\u30b3\u30fc\u30c9\u306f Ruby \u3067\u66f8\u304d\u3001Ruby \u3067\u306f\u66f8\u3051\u306a\u3044\u3088\u3046\u306a\u51e6\u7406\u306f C \u3067\u66f8\u304f\u3053\u3068\u304c\u6a5f\u80fd\u6027\u3084\u4fdd\u5b88\u6027\u306e\u9762\u304b\u3089\u306f\u6709\u5229\u3067\u3059\u3002\n\nmrbgem \u306e\u958b\u767a\u306b\u304a\u3044\u3066\u306f\u3001\u65e2\u5b58\u306e C \u8a00\u8a9e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u7a4d\u6975\u7684\u306b\u518d\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002[mgem-list](https://github.com/bovi/mgem-list) \u3068\u3044\u3046 mruby \u306e gem \u306e\u30ea\u30b9\u30c8\u3092\u3056\u3063\u3068\u773a\u3081\u3066\u307f\u3066\u3082\u3001C \u8a00\u8a9e\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3057\u3066\u3044\u306a\u3044\u3082\u306e\u3092\u63a2\u3059\u65b9\u304c\u96e3\u3057\u3044\u304f\u3089\u3044\u3067\u3059\u3002\n\nC \u8a00\u8a9e\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u56fa\u6709\u306e\u60c5\u5831\u3084\u72b6\u614b\u306a\u3069\u3092 C \u8a00\u8a9e\u306e\u69cb\u9020\u4f53\u306b\u30d1\u30c3\u30af\u3057\u3066\u305d\u308c\u3092\u4f7f\u3044\u56de\u3059\u30c6\u30af\u30cb\u30c3\u30af\u304c\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3002\u4f8b\u3048\u3070 C \u8a00\u8a9e\u306e\u6a19\u6e96\u5165\u51fa\u529b\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u72b6\u614b\u3092 FILE \u69cb\u9020\u4f53\u3068\u3057\u3066\u8868\u73fe\u3057\u307e\u3059\u3002\u6a19\u6e96\u5165\u51fa\u529b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5229\u7528\u8005\u306f FILE \u69cb\u9020\u4f53\u306e\u4e2d\u8eab\u3092\u610f\u8b58\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3057\u3001\u307e\u305f\u4e2d\u8eab\u3092\u76f4\u63a5\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u63a8\u5968\u3055\u308c\u307e\u305b\u3093\u3002\u305d\u3057\u3066 C \u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u306e\u4e2d\u3067 FILE \u69cb\u9020\u4f53\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u5834\u5408\u306f\u3001FILE  \u69cb\u9020\u4f53\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u95a2\u6570\u306e\u5f15\u6570\u3084\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3068\u3057\u3066\u53d7\u3051\u6e21\u3057\u307e\u3059\u3002C \u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u306b\u9589\u3058\u3066\u3044\u308b\u5834\u5408\u306f\u305d\u308c\u3067\u4e8b\u8db3\u308a\u307e\u3059\u304c\u3001mruby \u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u306f C \u8a00\u8a9e\u3067\u66f8\u304b\u308c\u305f\u30b3\u30fc\u30c9\u3068 Ruby \u3067\u66f8\u304b\u308c\u305f\u30b3\u30fc\u30c9\u3092\u884c\u304d\u6765\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3001\u5358\u306b\u3069\u3053\u304b\u306e\u5909\u6570\u306b\u683c\u7d0d\u3059\u308b\u3060\u3051\u306f\u6e08\u307f\u307e\u305b\u3093\u3002\n\nC \u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u3068 Ruby \u306e\u30b3\u30fc\u30c9\u3092\u884c\u3063\u305f\u308a\u6765\u305f\u308a\u3057\u3064\u3064\u3001C \u8a00\u8a9e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u305f\u3081\u306e\u69cb\u9020\u4f53\u3092\u4fdd\u6301\u3057\u7d9a\u3051\u308b\u305f\u3081\u306b\u306f\u3001C \u8a00\u8a9e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u8981\u6c42\u3059\u308b\u69cb\u9020\u4f53\u306b\u76ae\u3092\u304b\u3076\u305b\u3066 Ruby \u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u3057\u307e\u3046\u306e\u304c\u4e00\u756a\u30b7\u30f3\u30d7\u30eb\u306a\u65b9\u6cd5\u3067\u3059\u3002mruby \u3067\u306f\u3001\u3053\u306e\u3088\u3046\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 (\u9069\u5f53\u306a\u540d\u524d\u304c\u7121\u3044\u3088\u3046\u306a\u306e\u3067\u4ee5\u4e0b Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u547c\u3073\u307e\u3059) \u3092\u6271\u3046\u30af\u30e9\u30b9\u3092\u305f\u3044\u3078\u3093\u7c21\u5358\u306b\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u3053\u308c\u3092 **\u6b63\u3057\u304f** \u4f7f\u3046\u306e\u306f\u610f\u5916\u3068\u3084\u3063\u304b\u3044\u3067\u3059\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u3053\u306e Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6b63\u3057\u304f\u6271\u3046\u65b9\u6cd5\u3092\u3001Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6271\u3046 mrbgem \u3092\u4f5c\u308a\u306a\u304c\u3089\u89e3\u8aac\u3057\u307e\u3059\u3002\n\n## mrbgem \u3092\u4f5c\u308b\n\n\u5b9a\u8de1\u901a\u308a [\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/mruby/mruby/blob/master/doc/guides/mrbgems.md) \u306b\u5f93\u3044\u3064\u3064 mrbgem \u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002mrbgem \u306e\u540d\u524d\u306f \"mruby-hoge\" \u306b\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u968e\u5c64\u3092\u4f5c\u308a\u3001\n\n```shell-session\n% cd mruby\n% mkdir mruby-hoge\n% mkdir mruby-hoge/src\n```\nbuild\\_config.rb \u306b gem \u3092\u8db3\u3057\u3066\u3001\n\n```rb:build_config.rb\n  conf.gem \"#{root}/mruby-hoge\"\n```\n\n\u7d9a\u3051\u3066 mruby-hoge/mrbgem.rake \u3092\u3001[\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8](https://github.com/mruby/mruby/blob/master/doc/guides/mrbgems.md#build-process) \u304b\u3089\u30b3\u30d4\u30fc\u3057\u3066\u4f5c\u308a\u307e\u3059\u3002\u540d\u524d\u3060\u3051\u66f8\u304d\u5909\u3048\u3066\u3084\u308a\u307e\u3059\u3002\n\n```rb:mrbgem.rake\nMRuby::Gem::Specification.new('mruby-hoge') do |spec|\n  spec.license = 'MIT'\n  spec.author  = 'mruby developers'\nend                                   \n```\n\nmruby-hoge/src/hoge.c \u306f\u307e\u305a\u4f55\u3082\u3057\u306a\u3044\u3082\u306e\u3092\u7f6e\u304d\u307e\u3059\u3002\n\n```c:hoge.c\n#include \"mruby.h\"\n\nvoid\nmrb_mruby_hoge_gem_init(mrb_state *mrb)\n{\n}\n\nvoid\nmrb_mruby_hoge_gem_final(mrb_state *mrb)\n{\n}\n```\n\n\u3053\u3053\u307e\u3067\u66f8\u3051\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308a\u307e\u3059\u3002\u306f\u3044\u3001\u4f55\u3082\u3057\u306a\u3044 mrbgem \u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n> Note: mruby \u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3092 C \u3067\u66f8\u304f\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f @cubicdaiya \u3055\u3093\u306e [mruby\u3068C\u306e\u9023\u643a](http://qiita.com/cubicdaiya/items/fc0620c7b9629bb85d6f) \u3068\u3044\u3046 Post \u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u69cb\u9020\u4f53\u3092\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\n\u3055\u3066\u3001\u6e96\u5099\u304c\u3067\u304d\u305f\u306e\u3067C\u69cb\u9020\u4f53\u3092\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\u307e\u305a\u306f\u3066\u304d\u3068\u3046\u306bC\u69cb\u9020\u4f53\u3092\u7528\u610f\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u30e1\u30f3\u30d0\u306b\u30dd\u30a4\u30f3\u30bf\u3092\u542b\u3080\u3068\u8a71\u304c\u3084\u3084\u3053\u3057\u304f\u306a\u308b\u306e\u3067\u3001\u307e\u305a\u306f\u30dd\u30a4\u30f3\u30bf\u3092\u542b\u307e\u306a\u3044\u69cb\u9020\u4f53\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```c\nstruct hoge {\n  int num;\n};\n```\n\u305d\u3057\u3066\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```c:\n#include \"mruby/class.h\"\n#include \"mruby/value.h\"\n\nvoid\nmrb_mruby_hoge_gem_init(mrb_state *mrb)\n{\n  struct RClass *cls;\n\n  cls = mrb_define_class(mrb, \"Hoge\", mrb->object_class);\n  MRB_SET_INSTANCE_TT(cls, MRB_TT_DATA);\n  mrb_define_method(mrb, cls, \"initialize\", mrb_hoge_init, MRB_ARGS_NONE());\n}\n```\n\n\u30af\u30e9\u30b9\u306e\u4f5c\u6210\u306f\u3075\u3064\u3046\u306b `mrb_define_class` \u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u306e\u6642 Object \u30af\u30e9\u30b9\u306e\u5b50\u30af\u30e9\u30b9\u3068\u3057\u3066\u3044\u308b\u306e\u304c\u7b2c\u4e00\u306e\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002Data \u30af\u30e9\u30b9\u306f\u57fa\u672c\u7684\u306b Object \u4ee5\u5916\u306e\u7d44\u307f\u8fbc\u307f\u30af\u30e9\u30b9\u306e\u5b50\u5b6b\u306b\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u3046\u3063\u304b\u308a\u4ed6\u30af\u30e9\u30b9\u306e\u5b50\u306b\u3057\u3066\u3057\u307e\u3046\u3068\u30e1\u30e2\u30ea\u7834\u58ca\u306e\u30d0\u30b0\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n> Note: \u3069\u3046\u307e\u305a\u3044\u306e\u304b\u77e5\u308a\u305f\u3044\u4eba\u306f src/gc.c \u306e gc_mark_children() \u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u6b21\u306b\n\n```c\n  MRB_SET_INSTANCE_TT(cls, MRB_TT_DATA);\n```\n\n\u3067\u3001\u3044\u307e\u4f5c\u3063\u305f\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u3092 MRB_TT_DATA \u3068\u5ba3\u8a00\u3057\u307e\u3059\u3002\u3053\u306e\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u306f GC \u6642\u306e\u5f8c\u59cb\u672b\u306a\u3069\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u53d6\u6271\u3044\u306b\u5f71\u97ff\u3057\u307e\u3059\u3002\u6700\u5f8c\u306b `initialize` \u30e1\u30bd\u30c3\u30c9\u3092 `mrb_hoge_init` \u95a2\u6570\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u3053\u307e\u3067 struct hoge \u304c\u51fa\u3066\u304d\u3066\u3044\u307e\u305b\u3093\u304c\u3001Hoge \u30af\u30e9\u30b9\u3068 struct hoge \u306e\u7d10\u4ed8\u3051\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf `mrb_hoge_init` \u306e\u4e2d\u3067\u884c\u308f\u308c\u307e\u3059\u3002\n\n> Note: \u672c\u7a3f\u3067\u4f5c\u6210\u3057\u305f mrbgem \u3067\u306f\u3001mrbgem \u306e\u540d\u524d\u3068\u69cb\u9020\u4f53\u540d\u3068\u95a2\u6570\u540d\u306b\u3059\u3079\u3066 \"hoge\" \u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u5358\u306a\u308b\u6163\u4f8b\u3067\u30eb\u30fc\u30eb\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u4efb\u610f\u306e\u540d\u524d\u306b\u5909\u3048\u3066\u3082\u52d5\u304d\u307e\u3059\u3002\u305f\u3060\u3057 mrbgem \u306e\u540d\u524d\u3068 mrbgem \u306e\u521d\u671f\u5316/\u7d42\u4e86\u95a2\u6570\u306e\u540d\u524d\u3060\u3051\u306f\u4f8b\u5916\u7684\u306b\u5f37\u3044\u4f9d\u5b58\u95a2\u4fc2\u304c\u3042\u308a\u3001\u30d3\u30eb\u30c9\u30b7\u30b9\u30c6\u30e0\u306b\u3088\u3063\u3066 `mrb_#{mrbgem\u306e\u540d\u524d}_gem_init/final` \u3068\u6c7a\u3081\u3089\u308c\u3066\u304a\u308a\u5909\u66f4\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u3055\u3066\u3001`mrb_hoge_init` \u306e\u4e2d\u8eab\u3092\u66f8\u304f\u524d\u306b\u3082\u3046\u3072\u3068\u3064\u6e96\u5099\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```c\n#include \"mruby/data.h\"\n\nconst static struct mrb_data_type mrb_hoge_type = { \"Hoge\", mrb_free };\n```\n\nstruct mrb_data_type \u578b\u306e\u5909\u6570 `mrb_hoge_type` \u3092\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002struct mrb_data_type \u306f\u3001Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c GC \u3067\u56de\u53ce\u3055\u308c\u308b\u6642\u306b\u5f8c\u59cb\u672b\u3092\u3059\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\u3002struct mrb_data_type \u306e\u5b9a\u7fa9\u306f mruby/data.h \u306b\u3042\u308a\u307e\u3059:\n\n```c:mruby/data.h\n14 typedef struct mrb_data_type {\n15   const char *struct_name;\n16   void (*dfree)(mrb_state *mrb, void*);\n17 } mrb_data_type;\n```\n\n`struct_name` \u306f\u4f8b\u5916\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u3057\u3066\u8868\u793a\u3059\u308b\u305f\u3081\u306b\u3057\u304b\u4f7f\u308f\u308c\u306a\u3044\u305f\u3081\u9069\u5f53\u3067\u69cb\u3044\u307e\u305b\u3093\u3002\u305d\u306e\u30af\u30e9\u30b9\u306e\u540d\u524d\u3092\u66f8\u304f\u306e\u304c\u6163\u4f8b\u3067\u3059\u3002\u4e00\u65b9\u3082\u3046\u3072\u3068\u3064\u306e\u30e1\u30f3\u30d0 `dfree` \u306f\u8d85\u91cd\u8981\u3067\u3059\u3002`dfree` \u306f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3067\u3001\u305d\u306e\u95a2\u6570\u306f Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c GC \u306b\u3088\u3063\u3066\u5230\u9054\u4e0d\u80fd(=\u30b4\u30df)\u3068\u5224\u5b9a\u3055\u308c\u305f\u6642\u306b\u547c\u3070\u308c\u3001malloc \u3057\u305f\u9818\u57df\u3084\u30d5\u30a1\u30a4\u30eb\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\u306e\u89e3\u653e\u306a\u3069\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5f8c\u59cb\u672b\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u3055\u3066 Hoge \u30af\u30e9\u30b9\u306e mrb_data_type \u3092\u6539\u3081\u3066\u898b\u3066\u307f\u307e\u3059\u3002\n\n```c\nconst static struct mrb_data_type mrb_hoge_type = { \"Hoge\", mrb_free };\n```\n\nmrb_hoge_type \u306f\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u305f\u3081 const \u3067\u5ba3\u8a00\u3057\u3066\u3044\u307e\u3059\u3002\u306f\u3058\u3081\u306e\u30e1\u30f3\u30d0 `struct_name` \u306f\u6163\u4f8b\u306b\u5f93\u3063\u3066\u30af\u30e9\u30b9\u306e\u540d\u524d\u3068\u540c\u3058 \"Hoge\" \u3068\u3057\u307e\u3057\u305f\u3002\u305d\u3057\u3066 `dfree` \u306b\u306f mruby \u306e\u30e1\u30e2\u30ea\u7ba1\u7406 API \u3092\u305d\u306e\u307e\u307e\u4f7f\u3063\u3066 mrb_free \u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\u5f8c\u8ff0\u306e\u3088\u3046\u306b\u69cb\u9020\u4f53\u306e\u9818\u57df\u3092 mrb_malloc \u3092\u4f7f\u3063\u3066\u78ba\u4fdd\u3059\u308b Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001\u307e\u305f\u69cb\u9020\u4f53\u30e1\u30f3\u30d0\u306b\u30dd\u30a4\u30f3\u30bf\u306a\u3069\u306e\u89e3\u653e\u304c\u5fc5\u8981\u306a\u30ea\u30bd\u30fc\u30b9\u3092\u542b\u307e\u306a\u3044\u5834\u5408\u306f mrb_free \u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u306e\u304c\u304b\u3093\u305f\u3093\u3067\u3059\u3002\n\n> Note: \u30dd\u30a4\u30f3\u30bf\u3092\u542b\u307e\u306a\u304f\u3066\u3082\u3001\u30d5\u30a1\u30a4\u30eb\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\u7b49\u306e\u89e3\u653e\u51e6\u7406\u304c\u5fc5\u8981\u306a\u30ea\u30bd\u30fc\u30b9\u3092\u542b\u3080\u5834\u5408\u306f\u30ab\u30b9\u30bf\u30e0 `dfree` \u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u6e96\u5099\u304c\u3067\u304d\u305f\u306e\u3067 `mrb_hoge_init` \u3092\u66f8\u304d\u307e\u3059\u3002\n\n```c\nmrb_value\nmrb_hoge_init(mrb_state *mrb, mrb_value self)\n{\n  struct hoge *h;\n\n  h = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n  h->num = 1234;\n  DATA_TYPE(self) = &mrb_hoge_type;\n  DATA_PTR(self) = h;\n  return self;\n}\n```\n\n\u4e00\u884c\u3065\u3064\u898b\u3066\u3086\u304d\u307e\u3059\u3002\n\n\u307e\u305a mrb_malloc \u3067\u69cb\u9020\u4f53\u306e\u30c7\u30fc\u30bf\u9818\u57df\u3092\u78ba\u4fdd\u3057\u307e\u3059\u3002mrb_malloc \u306f malloc(3) \u3068\u540c\u3058\u3088\u3046\u306b\u52d5\u304d\u307e\u3059\u304c\u3001 **\u4f8b\u5916\u3092\u4e0a\u3052\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b** \u70b9\u304c\u5927\u304d\u306a\u9055\u3044\u3067\u3059\u3002 **\u4f8b\u5916\u3092\u4e0a\u3052\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002** \u3053\u3053\u91cd\u8981\u3067\u3059\u3002\u305d\u3057\u3066\u78ba\u4fdd\u3057\u305f `h` \u306b\u9069\u5f53\u306b\u5024\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u30e1\u30f3\u30d0 num \u306b 1234 \u3067\u3082\u5165\u308c\u3066\u304a\u304d\u307e\u3059\u3002\n\u6b21\u306b\n\n```c\n  DATA_TYPE(self) = &mrb_hoge_type;\n```\n\u3067 `self` \u306e\u30c7\u30fc\u30bf\u578b\u3092 mrb_hoge_type \u306b\u8a2d\u5b9a\u3057\u3001\n\n```c\n  DATA_PTR(self) = h;\n```\n\n\u3067\u3044\u307e\u78ba\u4fdd\u3057\u305f\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u30dd\u30a4\u30f3\u30bf\u3092 `self` \u306b\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u3053\u3053\u307e\u3067\u3067 C \u69cb\u9020\u4f53\u3092\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n## \u69cb\u9020\u4f53\u306e\u4e2d\u8eab\u306e\u53c2\u7167\n\u3055\u304d\u307b\u3069\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30dd\u30a4\u30f3\u30bf\u3092\u30bb\u30c3\u30c8\u3059\u308b\u306e\u306b\u4f7f\u3063\u305f `DATA_PTR` \u306f\u3001\u53cd\u5bfe\u306b\u30e9\u30c3\u30d7\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u306b\u3082\u4f7f\u3048\u307e\u3059\u3002\u3053\u308c\u3092\u5229\u7528\u3057\u3066\u5024\u3092\u53d6\u308a\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u8db3\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u307e\u305a Hoge \u30af\u30e9\u30b9\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u540d\u524d\u306f\u30d9\u30bf\u306b `#get` \u30e1\u30bd\u30c3\u30c9\u3068\u3057\u307e\u3059\u3002\n\n```c\nvoid\nmrb_mruby_hoge_gem_init(mrb_state *mrb)\n{\n  ...\n  mrb_define_method(mrb, cls, \"get\", mrb_hoge_get, MRB_ARGS_NONE());\n}\n```\n\n`#get` \u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5 mrb_hoge_get \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059:\n\n```c\nmrb_value\nmrb_hoge_get(mrb_state *mrb, mrb_value self)\n{\n  struct hoge *h;\n\n  h = DATA_PTR(self);\n  return mrb_fixnum_value(h->num);\n}\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3057\u3066 DATA_PTR \u3067\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u308a\u51fa\u305b\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002\n\n```shell-session\n% bin/mruby -e 'a = Hoge.new; p a.get'\n1234\n```\n\n\u306f\u3044\u3001\u30d0\u30c3\u30c1\u30ea\u3067\u3059\u306d\u3002get \u3092\u4f5c\u3063\u305f\u306e\u3067\u7d9a\u3051\u3066 put \u3082\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n```c\nmrb_value\nmrb_hoge_put(mrb_state *mrb, mrb_value self)\n{\n  struct hoge *h;\n  mrb_int num;\n\n  mrb_get_args(mrb, \"i\", &num);\n  h = DATA_PTR(self);\n  h->num = num;\n  return mrb_fixnum_value(num);\n}\n\nvoid\nmrb_mruby_hoge_gem_init(mrb_state *mrb)\n{\n  ...\n  mrb_define_method(mrb, cls, \"put\", mrb_hoge_put, MRB_ARGS_REQ(1));\n}\n```\n\n\u3053\u3061\u3089\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\n\n```shell-session\n% bin/mruby -e 'a = Hoge.new; a.put(3); p a.get'\n3\n```\n\n\u3046\u307e\u304f\u52d5\u3044\u3066\u3044\u307e\u3059\u306d\u3002Hoge \u306f Object \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u306e\u3067\u3001Object \u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3082\u3075\u3064\u3046\u306b\u4f7f\u3048...\n\n```shell-session\n% bin/mruby -e 'a = Hoge.new; p a.object_id; p a.nil?; p a.dup.get'\n1907878821\nfalse\nzsh: segmentation fault (core dumped)  bin/mruby -e 'a = Hoge.new; p a.object_id; p a.nil?; p a.dup.get'\n```\n\n\u304a\u3084?\n\n## #dup\nsegmentation fault \u304c\u767a\u751f\u3057\u305f\u539f\u56e0\u3092\u63a2\u3063\u3066\u307f\u307e\u3059\u3002\n\n```shell-session\n% bin/mruby -e 'a = Hoge.new; a.dup'\n% bin/mruby -e 'a = Hoge.new; a.dup.get'\nzsh: segmentation fault (core dumped)  bin/mruby -e 'a = Hoge.new; a.dup.get'\n```\n\n`#dup` \u3057\u305f\u3060\u3051\u306a\u3089\u5927\u4e08\u592b\u3067\u3059\u3002\u305d\u306e\u5f8c\u3067 `#get` \u3092\u547c\u3076\u3068\u6b7b\u306b\u307e\u3059\u3002core \u304c\u3042\u308b\u306e\u3067\u898b\u3066\u307f\u307e\u3059\u3002\n\n```shell-session\n% gdb bin/mruby mruby.core\nGNU gdb 6.3\n...\nCore was generated by `mruby'.\nProgram terminated with signal 11, Segmentation fault.\n...\n#0  mrb_hoge_get (mrb=0xb2fae690200, self=\n      {value = {f = 6.076630865399442e-311, p = 0xb2fa3b32b80, i = -1548539008, \nsym = 11136}, tt = MRB_TT_DATA}) at value.h:419\n419       MRB_SET_VALUE(v, MRB_TT_FIXNUM, value.i, i);\n(gdb) l\n414     static inline mrb_value\n415     mrb_fixnum_value(mrb_int i)\n416     {\n417       mrb_value v;\n418     \n419       MRB_SET_VALUE(v, MRB_TT_FIXNUM, value.i, i);\n420       return v;\n421     }\n422     \n423     static inline mrb_value\n(gdb)\n```\n\n\u9762\u5012\u306a\u3053\u3068\u306b\u30a4\u30f3\u30e9\u30a4\u30f3\u5c55\u958b\u3055\u308c\u305f\u3068\u3053\u308d\u3067\u6b7b\u3093\u3067\u3044\u307e\u3059...\u3002\u3068\u3044\u3063\u3066\u3082 mrb_hoge_get \u306e\u4e2d\u306e\u30dd\u30a4\u30f3\u30bf\u5909\u6570\u306f\u3072\u3068\u3064\u3060\u3051\u3067\u3059\u3002\u3053\u308c\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n```c\n#include <stdio.h>\n\nmrb_value\nmrb_hoge_get(mrb_state *mrb, mrb_value self)\n{\n  struct hoge *h;\n\n  h = DATA_PTR(self);\n  fprintf(stderr, \"h=%p\\n\", h);\n  return mrb_fixnum_value(h->num);\n}\n```\n\n```shell-session\n% bin/mruby -e 'a = Hoge.new; a.dup.get'\nh=0x0\nzsh: segmentation fault (core dumped)  bin/mruby -e 'a = Hoge.new; a.dup.get'\n```\n\n\u306f\u3044\u3001NULL \u30dd\u30a4\u30f3\u30bf\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\u539f\u56e0\u306f\u3053\u308c\u3067\u3059\u306d\u3002\n\n\u3067\u306f `DATA_PTR(self)` \u304c\u306a\u305c NULL \u306a\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u7b54\u3048\u306f\u304b\u3093\u305f\u3093\u3067\u3001\u8ab0\u3082\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u3044\u304b\u3089\u3067\u3059\u3002`Hoge#dup` \u306e\u5b9f\u4f53\u306f Object \u30af\u30e9\u30b9\u306e `#dup` \u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u3057\u304b\u3057 Object \u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5b50\u30af\u30e9\u30b9\u5074\u3067 `DATA_PTR(self)` \u3092\u4f7f\u3063\u3066\u3044\u308b\u306a\u3093\u3066\u77e5\u308a\u307e\u305b\u3093\u3002\u3064\u307e\u308a\u3053\u3053\u306f\u5b50\u30af\u30e9\u30b9\u5074\u3067\u9762\u5012\u3092\u898b\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u3042\u305f\u308a\u306f\u5b9f\u306f CRuby \u3068\u540c\u3058\u3067\u3001`#initialize_copy` \u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3066\u3084\u308c\u3070 `#dup` \u3082\u304d\u3061\u3093\u3068\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u5b9f\u88c5\u306f\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059:\n\n```c\nstatic mrb_value\nmrb_hoge_init_copy(mrb_state *mrb, mrb_value copy)\n{\n  mrb_value src;\n\n  mrb_get_args(mrb, \"o\", &src);\n  if (mrb_obj_equal(mrb, copy, src)) return copy;\n  if (!mrb_obj_is_instance_of(mrb, src, mrb_obj_class(mrb, copy))) {\n    mrb_raise(mrb, E_TYPE_ERROR, \"wrong argument class\");\n  }\n  if (!DATA_PTR(copy)) {\n    DATA_PTR(copy) = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n    DATA_TYPE(copy) = &mrb_hoge_type;\n  }\n  *(struct hoge *)DATA_PTR(copy) = *(struct hoge *)DATA_PTR(src);\n  return copy;\n}\n```\n\n\u7406\u89e3\u3057\u306b\u304f\u3044\u30b3\u30fc\u30c9\u304c\u4e26\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u3084\u3089\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u306e\u306f\u6700\u5f8c\u306b\u69cb\u9020\u4f53\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308b\u500b\u6240\u3060\u3051\u3067\u3001\u6b8b\u308a\u306f Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e `#initialize_copy` \u306e\u5b9f\u88c5\u306a\u3089\u3069\u308c\u3067\u3082(\u307b\u307c)\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n```c\n  *(struct hoge *)DATA_PTR(copy) = *(struct hoge *)DATA_PTR(src);\n```\n\n\u3042\u307e\u308a\u304a\u76ee\u306b\u304b\u304b\u3089\u306a\u3044\u69cb\u9020\u4f53\u306e\u4ee3\u5165\u69cb\u6587\u3067\u307e\u308b\u3063\u3068\u30b3\u30d4\u30fc\u3057\u3066\u3044\u307e\u3059\u3002struct hoge \u306b\u306f\u30e1\u30f3\u30d0\u304c `num` \u3057\u304b\u3042\u308a\u307e\u305b\u3093\u304b\u3089\u3001\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u7d50\u5c40 copy \u306e `num` \u3092 src \u306e `num` \u306b\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\u3055\u3066\u3001\u76f4\u3063\u305f\u3067\u3057\u3087\u3046\u304b\u3002\u9577\u304f\u306a\u308b\u305f\u3081\u4eca\u5ea6\u306f mirb \u3067\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n```rb\n% bin/mirb\nmirb - Embeddable Interactive Ruby Shell\n\nThis is a very early version, please test and report errors.\nThanks :)\n\n> a = Hoge.new\n => #<Hoge:0xc7678ec9bb0>\n> a.put(3)\n => 3\n> b = a.dup\n => #<Hoge:0xc7678ec9a60>\n> p b.get\n3\n => 3\n> b.put(4)\n => 4\n> p b.get\n4\n => 4\n> p a.get\n3\n => 3\n```\n\n\u3046\u307e\u304f\u52d5\u3044\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n## \u30ab\u30b9\u30bf\u30e0 dfree\n\n\u305d\u308c\u3067\u306f\u3001\u3082\u3046\u5c11\u3057\u8907\u96d1\u306a\u69cb\u9020\u4f53\u3092\u30e9\u30c3\u30d7\u3057\u3066\u307f\u307e\u3059\u3002\u4f8b\u3068\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u69cb\u9020\u4f53 `FILE *` \u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u307e\u305a `struct hoge` \u306b\u30e1\u30f3\u30d0 `FILE *fp` \u3092\u8db3\u3057\u307e\u3059\u3002\n\n```c\n#include <stdio.h>\n\nstruct hoge {\n  int num;\n  FILE *fp;\n};\n```\n\n\u6b21\u306b\u521d\u671f\u5316\u51e6\u7406 `mrb_hoge_init` \u306b fp \u306e\u521d\u671f\u5316\u3092\u8db3\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u69cb\u9020\u4f53\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u521d\u671f\u5316\u306a\u306e\u3067\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf `Hoge.new` \u306e\u5f15\u6570\u3068\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u53d6\u308b\u306e\u304c\u81ea\u7136\u3067\u3057\u3087\u3046\u3002\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u3092 fopen(3) \u306b\u6e21\u3057\u3066\u3001\u8fd4\u308a\u5024\u3067 fp \u3067\u521d\u671f\u5316\u3057\u307e\u3059\u3002\n\n```c\n#include \"mruby/string.h\"\n\nmrb_value\nmrb_hoge_init(mrb_state *mrb, mrb_value self)\n{\n  FILE *fp;\n  struct hoge *h;\n  mrb_value path;\n  char *cpath;\n\n  mrb_get_args(mrb, \"S\", &path);\n  cpath = mrb_str_to_cstr(mrb, path);\n  fp = fopen(cpath, \"r\");\n  if (fp == NULL) {\n    mrb_raisef(mrb, E_ARGUMENT_ERROR, \"cannot open file: %S\", path);\n  }\n\n  h = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n  h->num = 1234;\n  h->fp = fp;\n  DATA_TYPE(self) = &mrb_hoge_type;\n  DATA_PTR(self) = h;\n  return self;\n}\n```\n\n> Note: mrb_str_to_cstr \u306f mruby \u306e String \u3092\u683c\u7d0d\u3057\u305f mrb_value \u304b\u3089 C \u8a00\u8a9e\u306e NUL \u7d42\u7aef\u6587\u5b57\u5217\u3092\u53d6\u308a\u51fa\u3059\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u95a2\u6570\u3067\u3059\u3002\"mruby/string.h\" \u3067\u5ba3\u8a00\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u540c\u69d8\u306e\u6a5f\u80fd\u3092\u6301\u3064\u3082\u306e\u306b RSTRING_PTR \u30de\u30af\u30ed\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u9069\u5207\u306a\u9577\u3055\u3067 NUL \u7d42\u7aef\u3055\u308c\u3066\u3044\u308b\u4fdd\u8a3c\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u3061\u3087\u3063\u3068\u8907\u96d1\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3068\u8868\u308c\u308b\u3068\u3044\u3046\u8ffd\u3044\u96e3\u3044\u30d0\u30b0\u306e\u539f\u56e0\u3068\u306a\u308b\u305f\u3081\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u5148\u306b\u66f8\u3044\u3066\u304a\u304f\u3068\u3001\u4e0a\u306e\u30b3\u30fc\u30c9\u306b\u306f **\u30d0\u30b0\u304c\u3042\u308a\u307e\u3059\u3002** \u304c\u3001\u3072\u3068\u307e\u305a\u5148\u306b\u89e3\u653e\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002\u89e3\u653e\u3059\u308b\u95a2\u6570\u306e\u540d\u524d\u306f `mrb_hoge_free` \u3068\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u95a2\u6570\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u306f\u3001\u5148\u8ff0\u306e\u901a\u308a \"mruby/data.h\" \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\n\n```c:mruby/data.h\n  void (*dfree)(mrb_state *mrb, void*);\n```\n\n\u306b\u5408\u308f\u305b\u307e\u3059\u3002mrb \u306f\u304a\u306a\u3058\u307f\u306e mrb_state \u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3067\u3001\u3082\u3046\u3072\u3068\u3064\u306e\u5f15\u6570\u304c C \u8a00\u8a9e\u69cb\u9020\u4f53\u306e\u30c7\u30fc\u30bf\u3092\u6307\u3057\u793a\u3059\u30dd\u30a4\u30f3\u30bf\u3067\u3059\u3002\u5b9f\u88c5\u306f\u3053\u306e\u901a\u308a\u3067\u3059:\n\n```c\nstatic void\nmrb_hoge_free(mrb_state *mrb, void *ptr)\n{\n  struct hoge *h = ptr;\n\n  fclose(h->fp);\n  mrb_free(mrb, h);\n}\n```\n\n\u307e\u305aC \u8a00\u8a9e\u69cb\u9020\u4f53\u306e\u30c7\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6301\u3064\u30ea\u30bd\u30fc\u30b9 `h->fp` \u3092\u89e3\u653e\u3057\u3001\u305d\u308c\u304b\u3089\u30c7\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u305d\u306e\u3082\u306e `h` \u3092\u89e3\u653e\u3057\u307e\u3059\u3002\u305d\u3057\u3066  mrb_hoge_type \u306e dfree \u3092\u3044\u307e\u5b9a\u7fa9\u3057\u305f mrb_hoge_free \u95a2\u6570\u3067\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n```c\nconst static struct mrb_data_type mrb_hoge_type = { \"Hoge\", mrb_hoge_free };\n```\n\n\u305d\u308c\u3067\u306f\u65b0\u3057\u304f\u8ffd\u52a0\u3057\u305f fp \u3092\u4f7f\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u8aad\u307f\u51fa\u3059 `#read` \u30e1\u30bd\u30c3\u30c9\u306b\u3057\u307e\u3059\u3002\u304d\u3061\u3093\u3068\u6a5f\u80fd\u3059\u308b\u3082\u306e\u3092\u4f5c\u308b\u306e\u306f\u5c11\u3005\u9762\u5012\u306a\u306e\u3067\u300c\u30d5\u30a1\u30a4\u30eb\u306e\u5148\u982d\u306e\u65b9\u3092\u305f\u3044\u3066\u3044\u8aad\u307f\u51fa\u305b\u308b\u300d\u30e1\u30bd\u30c3\u30c9\u306b\u3057\u307e\u3059\u3002\n\nmrb_mruby_hoge_gem_init() \u306b\u4ee5\u4e0b\u3092\u8db3\u3057\u3066 Hoge \u30af\u30e9\u30b9\u306b `#read` \u30e1\u30bd\u30c3\u30c9\u3092\u8db3\u3057\u307e\u3059\u3002\n\n```c\n  mrb_define_method(mrb, cls, \"read\", mrb_hoge_read, MRB_ARGS_NONE());\n```\n\n`#read` \u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u3067\u3042\u308b mrb_hoge_read \u306f\u3053\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```c\nmrb_value\nmrb_hoge_read(mrb_state *mrb, mrb_value self)\n{\n  struct hoge *h;\n  size_t n;\n  char buf[1024];\n\n  h = DATA_PTR(self);\n  n = fread(buf, 1, sizeof(buf), h->fp);\n  if (n == 0) {\n    mrb_raise(mrb, E_ARGUMENT_ERROR, \"fread(3) returns 0\");\n  }\n  return mrb_str_new(mrb, buf, n);\n}\n```\n\n\u7d30\u304b\u3044\u3053\u3068\u306f\u6c17\u306b\u305b\u305a fread(3) \u3067 1024 \u30d0\u30a4\u30c8\u3092\u8aad\u307f\u51fa\u3057\u3066\u307f\u3066\u3001\u305d\u308c\u3092 mruby \u306e String \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3057\u3066\u8fd4\u3059\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n```shell-session\n% rake\n% bin/mruby -e 'h = Hoge.new(\"mruby-hoge/mrbgem.rake\"); puts h.read'\nMRuby::Gem::Specification.new('mruby-hoge') do |spec|\n  spec.license = 'MIT'\n  spec.author  = 'Tomoyuki Sahara'\nend\n%\n```\n\n\u610f\u56f3\u3057\u305f\u901a\u308a\u306b\u6a5f\u80fd\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n## \u30ea\u30bd\u30fc\u30b9\u306e\u89e3\u653e\u30bf\u30a4\u30df\u30f3\u30b0\n\n\u6b8b\u5ff5\u306a\u304c\u3089\u3001\u73fe\u5728\u306e\u5b9f\u88c5\u306f\u5927\u304d\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u5229\u7528\u3059\u308b\u3068\u671f\u5f85\u901a\u308a\u306b\u3046\u307e\u304f\u52d5\u304d\u307e\u305b\u3093\u3002Hoge.new \u3092\u4f55\u56de\u3082\u547c\u3076\u3068\u5931\u6557\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059:\n\n```shell-session\n% bin/mruby -e '10000.times { Hoge.new(\"mruby-hoge/mrbgem.rake\") }'\ntrace:\n        [2] -e:1:in Object.call\n        [0] -e:1\n-e:1: cannot open file: mruby-hoge/mrbgem.rake (ArgumentError)\n```\n\n\u7e70\u308a\u8fd4\u3057\u306e\u56de\u6570\u3092\u305f\u3068\u3048\u3070 10 \u56de\u7a0b\u5ea6\u306b\u6e1b\u3089\u3057\u3066\u3084\u308b\u3068\u52d5\u4f5c\u3057\u307e\u3059\u3002\u56de\u6570\u304c\u591a\u304f\u306a\u308b\u3068\u52d5\u304b\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u539f\u56e0\u306f\u5c11\u3005\u308f\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3059\u304c\u3001\u30d5\u30a1\u30a4\u30eb\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\u306e\u4e0d\u8db3\u304c\u767a\u751f\u3057\u3066\u3044\u307e\u3059\u3002``ulimit -n 20`` \u7b49\u3068\u3057\u3066\u30ea\u30df\u30c3\u30c8\u3092\u5c0f\u3055\u304f\u3057\u3066\u3084\u308b\u3068\u3001\u30eb\u30fc\u30d7\u306e\u56de\u6570\u3068\u306e\u76f8\u95a2\u304c\u898b\u3066\u3068\u308c\u307e\u3059\u3002\n\n> Note: [iij/mruby-errno](https://github.com/iij/mruby-errno) \u3092\u5229\u7528\u3059\u308b\u3068\u4f8b\u5916\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4ecb\u3057\u3066\u3082\u3046\u5c11\u3057\u8a73\u7d30\u306a\u30a8\u30e9\u30fc\u3092\u53d6\u5f97\u3067\u304d\u308b\u305f\u3081\u3001\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u53e9\u304f\u3088\u3046\u306a mrbgem \u306e\u30c7\u30d0\u30c3\u30b0\u304c\u697d\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3067\u3082\u3001\u3055\u3063\u304d\u78ba\u304b\u306b\u30d5\u30a1\u30a4\u30eb\u69cb\u9020\u4f53\u3092\u89e3\u653e(fclose)\u3059\u308b mrb_hoge_free \u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u3053\u308c\u304c\u6b63\u3057\u304f\u547c\u3070\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u30dd\u30a4\u30f3\u30c8\u306f mrb_hoge_free \u304c\u547c\u3070\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u3042\u308a\u307e\u3059\u3002mrb_hoge_free\u3001\u4e00\u822c\u5316\u3057\u3066 dfree \u306f Data \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u89e3\u653e\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u547c\u3070\u308c\u307e\u3059\u3002\u305d\u3057\u3066 mruby \u3067\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u89e3\u653e\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306f GC \u304c\u6c7a\u3081\u307e\u3059\u3002GC \u304c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u89e3\u653e\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0... \u306f\u3084\u3084\u3053\u3057\u3044\u306e\u3067\u8aac\u660e\u3092\u7701\u7565\u3057\u307e\u3059\u304c\u3001\u30eb\u30fc\u30d7\u304b\u3089\u629c\u3051\u305f\u6642\u306b GC \u304c\u8d70\u3089\u306a\u3044(\u3053\u3068\u304c\u3042\u308b)\u70b9\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u306b\u3001\u30eb\u30fc\u30d7\u5185\u3067\u4f5c\u6210\u3057\u305f Hoge \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3059\u3050\u306b\u306f\u89e3\u653e\u3055\u308c\u305a\u3001\u305d\u306e\u7d50\u679c Hoge \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u4fdd\u6301\u3059\u308b FILE \u69cb\u9020\u4f53\u3082\u30af\u30ed\u30fc\u30ba\u3055\u308c\u305a\u3001\u30d7\u30ed\u30bb\u30b9\u306e\u30ea\u30df\u30c3\u30c8\u306b\u9039\u3057\u305f\u3068\u3053\u308d\u3067 fopen(3) \u304c\u5931\u6557\u3057\u59cb\u3081\u307e\u3059\u3002\n\n\u3053\u306e\u554f\u984c\u306e\u5bfe\u51e6\u306f\u78ba\u4fdd\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u306e\u7279\u6027\u306b\u3082\u3088\u3063\u3066\u3044\u308d\u3044\u308d\u8003\u3048\u3089\u308c\u307e\u3059\u3002\u4eca\u56de\u306f CRuby (\u3084 [iij/mruby-io](https://github.com/iij/mruby-io)) \u3067\u884c\u308f\u308c\u3066\u3044\u308b\u5bfe\u51e6\u3092\u5165\u308c\u3066\u307f\u307e\u3059\u3002\n\n```c\n  ...\n  fp = fopen(cpath, \"r\");\n  if (fp == NULL) {\n    if (errno == EMFILE || errno == ENFILE) {\n      mrb_full_gc(mrb);\n      fp = fopen(cpath, \"r\");\n    }\n    if (fp == NULL) {\n      mrb_raisef(mrb, E_ARGUMENT_ERROR, \"cannot open file: %S\", path);\n    }\n  }\n\n  h = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n  ...\n```\n\nfopen(3) \u306b\u5931\u6557\u3057\u3001\u305d\u306e\u539f\u56e0\u304c\u30d5\u30a1\u30a4\u30eb\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\u6ea2\u308c\u3060\u3063\u305f\u5834\u5408\u306f\u5f37\u5236\u7684\u306b Full GC \u3092\u8d70\u3089\u305b\u3001\u5b99\u306b\u6d6e\u3044\u3066\u3044\u308b Hoge \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308c\u3070\u305d\u308c\u3092\u56de\u53ce\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u9593\u63a5\u7684\u306b mrb_hoge_free \u3092\u547c\u3073\u3001\u4e0d\u8981\u306a FILE \u69cb\u9020\u4f53\u3092 fclose(3) \u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```shell-session\n% bin/mruby -e '10000.times { Hoge.new(\"mruby-hoge/mrbgem.rake\") }'\n%\n```\n\n\u3053\u306e\u901a\u308a\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n## \u30ea\u30bd\u30fc\u30b9\u306e\u8a2d\u5b9a\u9806\u5e8f\n\n\u5148\u306b \"\u30ab\u30b9\u30bf\u30e0 dfree\" \u306e\u7bc0\u3067\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u73fe\u5728\u306e mrb_hoge_init \u306e\u5b9f\u88c5\u306b\u306f **\u30d0\u30b0\u304c\u3042\u308a\u307e\u3059\u3002** mrb_hoge_init \u3092\u518d\u63b2\u3057\u307e\u3059\u3002\u30d0\u30b0\u306f FILE \u69cb\u9020\u4f53\u306e\u30ea\u30fc\u30af\u3067\u3059\u3002\u3069\u3046\u3044\u3046\u30ed\u30b8\u30c3\u30af\u3067\u8d77\u3053\u308a\u5f97\u308b\u304b\u308f\u304b\u308a\u307e\u3059\u304b?\n\n```rb\nmrb_value\nmrb_hoge_init(mrb_state *mrb, mrb_value self)\n{\n  FILE *fp;\n  struct hoge *h;\n  mrb_value path;\n  char *cpath;\n\n  mrb_get_args(mrb, \"S\", &path);\n  cpath = mrb_str_to_cstr(mrb, path);\n  fp = fopen(cpath, \"r\");\n  if (fp == NULL) {\n    if (errno == EMFILE || errno == ENFILE) {\n      mrb_full_gc(mrb);\n      fp = fopen(cpath, \"r\");\n    }\n    if (fp == NULL) {\n      mrb_raisef(mrb, E_ARGUMENT_ERROR, \"cannot open file: %S\", path);\n    }\n  }\n\n  h = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n  h->num = 1234;\n  h->fp = fp;\n  DATA_TYPE(self) = &mrb_hoge_type;\n  DATA_PTR(self) = h;\n  return self;\n}\n```\n\n\u7b54\u3048\u306f mrb_malloc \u306e\u547c\u3073\u51fa\u3057\u3067\u3059\u3002\u3053\u306e\u4f4d\u7f6e\u3067\u547c\u3093\u3067\u306f\u3044\u3051\u307e\u305b\u3093\u3002\n\nC \u30d7\u30ed\u30b0\u30e9\u30de\u306a\u3089\u3071\u3063\u3068\u898b\u3066\u3001\u300cNULL \u30c1\u30a7\u30c3\u30af\u3057\u3066\u306a\u3044\u306a\u300d\u3068\u6c17\u3065\u304f\u3067\u3057\u3087\u3046\u3002\u3057\u304b\u3057\u305d\u308c\u3067\u306f\u3042\u308a\u307e\u305b\u3093(NULL \u30c1\u30a7\u30c3\u30af\u306f\u5fc5\u8981\u3068\u8a00\u3048\u3070\u5fc5\u8981\u3067\u3059\u304c... \u8a71\u304c\u9577\u304f\u306a\u308b\u305f\u3081\u5272\u611b\u3057\u307e\u3059)\u3002\u5b9f\u306f\u3001mrb_malloc \u306f **\u4f8b\u5916\u3092\u767a\u751f\u3057 longjmp(3) \u3092\u4f7f\u3063\u3066\u4e00\u8db3\u98db\u3073\u306b mrb_hoge_init \u304b\u3089\u629c\u3051\u51fa\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002** \u3053\u3053\u306e\u4f4d\u7f6e\u3067\u629c\u3051\u51fa\u3055\u308c\u308b\u3068\u3001\u76f4\u524d\u306b\u958b\u3044\u305f fp \u304c\u30b3\u30fc\u30eb\u30b9\u30bf\u30c3\u30af\u304b\u3089\u6d88\u3048\u3055\u308a\u89e3\u653e\u3057\u3088\u3046\u304c\u7121\u304f\u306a\u308a\u307e\u3059\u3002\n\n> Note: \u3069\u3093\u306a\u4f8b\u5916\u3092\u3069\u3093\u306a\u5834\u5408\u306b\u4e0a\u3052\u308b\u304b\u8208\u5473\u306e\u3042\u308b\u65b9\u306f [src/gc.c](https://github.com/mruby/mruby/blob/master/src/gc.c) \u304b\u3089\u305f\u3069\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u306e\u30d0\u30b0\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089 mruby \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u307b\u3068\u3093\u3069\u554f\u984c\u306b\u306a\u3089\u306a\u3044\u3067\u3057\u3087\u3046\u3002\u3057\u304b\u3057\u5916\u90e8\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b libmruby \u3092\u30ea\u30f3\u30af\u3057\u3001\u30ab\u30b9\u30bf\u30e0\u30e1\u30e2\u30ea\u30a2\u30ed\u30b1\u30fc\u30bf(`mrb->allocf`)\u3092\u4f7f\u3063\u3066\u30e1\u30e2\u30ea\u5bb9\u91cf\u306b\u4e0a\u9650\u3092\u8a2d\u3051\u3066\u304a\u304f\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u3001mruby \u5185\u3067\u306e\u30ea\u30bd\u30fc\u30b9\u30ea\u30fc\u30af\u304c\u7d44\u307f\u8fbc\u307f\u5148\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6bba\u3059\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u554f\u984c\u306f\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3067\u56de\u907f\u304c\u53ef\u80fd\u3067\u3059\u3002\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3067\u306f mrb_malloc \u306e\u547c\u3073\u51fa\u3057\u3092 fopen \u306e\u76f4\u524d\u306b\u6301\u3063\u3066\u304f\u308b\u306e\u304c\u3044\u3061\u3070\u3093\u7c21\u5358\u3067\u3059\u3002\u3057\u304b\u3057\u3072\u3068\u3064\u306e\u69cb\u9020\u4f53\u306e\u4e2d\u306b\u78ba\u4fdd/\u89e3\u653e\u304c\u5fc5\u8981\u306a\u30ea\u30bd\u30fc\u30b9\u304c\u8907\u6570\u3042\u3063\u305f\u308a\u3001\u307e\u305f\u521d\u671f\u5316\u95a2\u6570\u306e\u4e2d\u3067 mrb_malloc() \u4ee5\u5916\u306e\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u3046\u308b\u95a2\u6570\u3092\u547c\u3076\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u3068\u305f\u3093\u306b\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u3002\u3088\u3063\u3066\u3001\u3053\u3053\u3067\u306f\u3082\u3046\u5c11\u3057\u4e00\u822c\u7684\u306a\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n> Note: \u300c\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u3046\u308b\u95a2\u6570\u300d\u3068\u3044\u3046\u306e\u304c\u66f2\u8005\u3067\u3059\u3002mruby \u306e\u591a\u7a2e\u591a\u69d8\u306a API \u306e\u3046\u3061\u3001\u3069\u306e\u95a2\u6570\u304c\u4f8b\u5916\u3092\u767a\u751f\u3057\u5f97\u308b\u304b\u306f\u305d\u306e\u95a2\u6570\u306e\u5b9f\u88c5\u3092\u305f\u3093\u306d\u3093\u306b\u8ffd\u3063\u3066\u3086\u304b\u306a\u3044\u3068\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\n\u307e\u305a mrb_malloc() \u306b\u3088\u308b\u69cb\u9020\u4f53\u306e\u30a2\u30ed\u30b1\u30fc\u30c8\u3068 DATA_TYPE/DATA_PTR \u306e\u30bb\u30c3\u30c8\u3092\u5148\u982d\u306b\u6301\u3063\u3066\u304d\u307e\u3059\u3002\n\n```c\n  ...\n  char *cpath;\n\n  h = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n  DATA_TYPE(self) = &mrb_hoge_type;\n  DATA_PTR(self) = h;\n\n  mrb_get_args(mrb, \"S\", &path);\n  ...\n```\n\n\u3053\u308c\u306a\u3089 mrb_malloc() \u304c\u4f8b\u5916\u3092\u4e0a\u3052\u3066\u3082\u30ea\u30fc\u30af\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u306f\u4f55\u3082\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u3057\u3066 mrb_get_args \u306e\u547c\u3073\u51fa\u3057\u4ee5\u964d\u3067\u4f8b\u5916\u304c\u4e0a\u304c\u3063\u3066\u3082(\u3042\u308b\u3044\u306f return \u3067\u629c\u3051\u3066\u3082)\u3001self \u306b\u306f DATA_TYPE \u3067 GC \u7528\u306e\u69cb\u9020\u304c\u8a2d\u5b9a\u6e08\u307f\u3067\u3059\u304b\u3089\u3001mrb_malloc() \u3067\u78ba\u4fdd\u3057\u305f DATA_PTR(self) = h \u306f\u3044\u305a\u308c GC \u306b\u3088\u3063\u3066\u89e3\u653e\u3055\u308c\u307e\u3059\u3002\u305f\u3060\u3057\u3053\u306e\u307e\u307e\u3067\u306f `h->fp` \u304c\u521d\u671f\u5316\u3055\u308c\u306a\u3044\u307e\u307e mrb_hoge_free \u304c\u547c\u3070\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u89e3\u653e\u524d\u306f NULL \u3067\u521d\u671f\u5316\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n```c\n  ...\n  h = (struct hoge *)mrb_malloc(mrb, sizeof(struct hoge));\n  h->fp = NULL;\n  DATA_TYPE(self) = &mrb_hoge_type;\n  DATA_PTR(self) = h;\n  ...\n```\n\n`h->fp` \u304c NULL \u306e\u5834\u5408\u3067\u3082\u3061\u3083\u3093\u3068\u52d5\u304f\u3088\u3046\u306b mrb_hoge_free \u3082\u66f4\u65b0\u3057\u307e\u3059\u3002\n\n```c\nstatic void\nmrb_hoge_free(mrb_state *mrb, void *ptr)\n{\n  struct hoge *h = ptr;\n\n  if (h->fp != NULL) {\n    fclose(h->fp);\n    h->fp = NULL;\n  }\n  mrb_free(mrb, h);\n}\n```\n\n\u3053\u306e\u3088\u3046\u306b mrb_malloc() \u3067 C \u8a00\u8a9e\u69cb\u9020\u4f53\u3092\u307e\u305a\u306f\u3058\u3081\u306b\u78ba\u4fdd\u3057\u3001\u4f8b\u5916\u304c\u767a\u751f\u3057\u306a\u3044\u3053\u3068\u304c\u62c5\u4fdd\u3055\u308c\u3066\u3044\u308b\u9593\u306b NULL \u3084 -1 \u3068\u3044\u3063\u305f\u78ba\u4fdd\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u5024\u3067\u57cb\u3081\u3066\u304a\u304d\u3001\u3044\u3064\u3069\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u547c\u3070\u308c\u3066\u3082\u30ea\u30bd\u30fc\u30b9\u3092\u9069\u5207\u306b\u89e3\u653e\u3067\u304d\u308b\u3088\u3046\u306b dfree \u95a2\u6570\u3092\u66f8\u3044\u3066\u304a\u304f\u306e\u304c\u30ea\u30bd\u30fc\u30b9\u30ea\u30fc\u30af\u3092\u907f\u3051\u308b\u30b3\u30c4\u3067\u3059\u3002\n\n\n## \u7d42\u308f\u308a\u306b\n\n\u672c\u65e5\u306f mruby \u3067 C \u8a00\u8a9e\u306e\u69cb\u9020\u4f53\u3092\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6b63\u3057\u304f\u53d6\u308a\u6271\u3046\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u4ed6\u306b\u3082\u3001\n\n- TCPSocket \u306e\u3088\u3046\u306a\u8907\u96d1\u306a `#initialize` \u3092\u6301\u3064 Data \u30af\u30e9\u30b9\u3067\u3001`#initalize` \u3092 Ruby \u306e\u30b3\u30fc\u30c9\u3067\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\n- Data \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u6642\u306e DATA_TYPE/DATA_PTR \u306e\u521d\u671f\u5316\u306e\u4ed5\u65b9\n- SystemCallError \u306e\u3088\u3046\u306b `.new` \u306e\u5f15\u6570\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\u6cd5\n- \u30ea\u30bd\u30fc\u30b9\u3092\u6301\u3064 Data \u30af\u30e9\u30b9\u306e initialize_copy \n\n\u306a\u3069\u53d6\u308a\u4e0a\u3052\u305f\u3044\u30cd\u30bf\u306f\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u6642\u9593\u5207\u308c\u3068\u306a\u308a\u307e\u3057\u305f\u306e\u3067\u3053\u306e\u8a18\u4e8b\u306f\u3053\u3053\u3067\u304a\u3057\u307e\u3044\u3067\u3059\u3002\u9577\u3044\u8a18\u4e8b\u306b\u304a\u4ed8\u304d\u5408\u3044\u3044\u305f\u3060\u304d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n", "tags": ["mruby"]}