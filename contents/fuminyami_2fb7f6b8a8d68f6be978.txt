{"tags": ["Unity", "unity5"], "context": "\n\n\u306f\u3058\u3081\u306b\nUnity5\u3067\u30a8\u30af\u30bb\u30eb\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u5834\u5408\u3001\u3044\u304f\u3064\u304b\u306eDLL\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u30a8\u30af\u30bb\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u64cd\u4f5c\u6a5f\u80fd\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u3067\u3059\u3002\u4eca\u56de\u306f\u305d\u306eDLL\u306e\u7d39\u4ecb\u3068Unity5\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306e\u4f7f\u3044\u65b9\u3001\u6ce8\u610f\u70b9\u3092\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u4f7f\u7528\u3059\u308bDLL\u306b\u3064\u3044\u3066\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306e4\u3064\u3092\u691c\u8a0e\nOpenXML\nClosedXML\nNPOI\nEPPlus\n\n\u3069\u308c\u3092\u4f7f\u7528\u3059\u308b\u304b\n\nOpenXML\n\u307e\u305aOpenXML\u306fSDK2.0\u3060\u3068.Net\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c3.5\u306a\u306e\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3002SDK1.0\u3060\u30682007\u306e\u30a8\u30af\u30bb\u30eb\u307e\u3067\u306f\u6271\u3048\u308b\u304c\u53e4\u3044\u3002\u5f8c\u5358\u7d14\u306bAPI\u304c\u6271\u3044\u3065\u3089\u3044\u3002\u306e\u3067\u4f7f\u308f\u306a\u3044\u3002\n\nClosedXML\nOpenXML\u3092\u4f7f\u3044\u3084\u3059\u304f\u3057\u305f\u3082\u306e\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u306e\u3067Unity\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u30d3\u30eb\u30c9\u304c\u53ef\u80fd\u3002\n\u30d3\u30eb\u30c9\u3059\u308b\u969b\u306fTargetFramework\u3092Unity3.5 .net Full Base Class Libraries\u306b\u3057\u3066\u884c\u3046\u3053\u3068\u3002\n\u305f\u3060\u3057\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\u3067Api Compatibility Level\u304cFull Base\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\nNPOI\n\u3053\u3061\u3089\u306fdll\u3092\u7279\u306b\u30d3\u30eb\u30c9\u3057\u76f4\u3055\u306a\u304f\u3066\u3082\u4f7f\u7528\u53ef\u80fd\u3002\nApi Compatibility Level\u3082\u6c17\u306b\u3057\u306a\u304f\u3066OK\u3002\nClosedXML\u304c\u4f7f\u3048\u306a\u3044\u5834\u5408\u306e\u5019\u88dc\u3002\n\nEPPlus\n.xls\u5f62\u5f0f\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u305d\u3046\u306a\u306e\u3067\u4eca\u56de\u306f\u691c\u8a3c\u3057\u3066\u306a\u3044\u3002\n\nDLL\u30d5\u30a1\u30a4\u30eb\u306e\u7f6e\u304d\u5834\u6240\nAsset\u30d5\u30a9\u30eb\u30c0\u5185\u3067\u3042\u308c\u3070\u3069\u3053\u3067\u3082\u8a8d\u8b58\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u305d\u308c\u305e\u308c\u3067\u5fc5\u8981\u306aDLL\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u7f6e\u3057\u307e\u3059\u3002\n\n\u8aad\u307f\u8fbc\u307f\u3092\u884c\u3046\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u9069\u5f53\u306b\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u305d\u308c\u305e\u308c\u30d5\u30a1\u30a4\u30eb\u2192\u30b7\u30fc\u30c8\u2192\u5217\u884c\u306e\u9805\u76ee\u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306a\u5f62\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n\nCLOSEDXML\npublic void Read(string _path)\n{\n    XLWorkbook _book;\n    using (_book = new XLWorkbook(_path))\n    {\n        for (int index = 0; index < _book.Worksheets.Count; index++)\n        {\n            IXLWorksheet _sheet = _book.Worksheet(index);\n            for (int _index_row = 0; _index_row < _sheet.RowCount(); _index_row++)\n            {\n                for (int _index_column = 0; _index_column < _sheet.ColumnCount(); _index_column++)\n                {\n                    IXLCell _cell = _sheet.Cell(_index_row, _index_column);\n                }\n            }\n        }\n    }\n}\n\n\nNPOI\npublic void Read(string _path)\n{\n    using (FileStream _stream = File.Open(_path, FileMode.Open, FileAccess.Read, FileShare.Read))\n    {\n        file_path = _path;\n        IWorkbook _book = null;\n        string _extension = Path.GetExtension(_path);\n        if (_extension == \".xls\")\n        {\n            _book = new HSSFWorkbook(_stream);\n        }\n        else if (_extension == \".xlsx\")\n        {\n            _book = new XSSFWorkbook(_stream);\n        }\n        else\n        {\n            return;\n        }\n\n        for (int _sheet_index = 0; _sheet_index < _book.NumberOfSheets; ++_sheet_index)\n        {\n            ISheet _sheet = _book.GetSheetAt(_sheet_index);\n            int _row_num = _sheet.LastRowNum;\n            for (int _row_index = _sheet.FirstRowNum; _row_index < _row_num; _row_index++)\n            {\n                IRow _row = _sheet.GetRow(_row_index);\n                if (_row == null )\n                    continue;\n\n                int _cell_num = _row.LastCellNum;\n                for (int _cell_index = _row.FirstCellNum; _cell_index < _cell_num; _cell_index++)\n                {\n                    ICell _cell = _row.GetCell(_cell_index);\n                    if (_cell == null)\n                        continue;\n\n                    string _value = \"\";\n                    switch (_cell.CellType)\n                    {\n                        case CellType.String:\n                                _value = _cell.StringCellValue;\n                                break;\n                        case CellType.Numeric:\n                                _value = _cell.NumericCellValue.ToString();\n                                break;\n                        case CellType.Boolean:\n                                _value = _cell.BooleanCellValue.ToString();\n                                break;\n                        default:\n                                break;\n                    }\n                }\n            }\n        }\n    }\n}\n\n\n\u3000\n\u66f8\u304d\u8fbc\u307f\u51e6\u7406\u306b\u95a2\u3057\u3066\u306f\u8a66\u3057\u3066\u3044\u306a\u3044\u3051\u3069\u305d\u3053\u307e\u3067\u96e3\u3057\u304f\u306a\u3044\u306f\u305a\u3002\nOpenXML\u3092\u4f7f\u3046\u3088\u308a\u304b\u306f\u683c\u6bb5\u306b\u697d\u306b\u306a\u308b\u306e\u3067\u3070\u3093\u3070\u3093\u4f7f\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\u307e\u3041\u3001\u3042\u307e\u308a\u6a5f\u4f1a\u306f\u306a\u3044\u304b\u3082\u3067\u3059\u304c\u3002\n# \u306f\u3058\u3081\u306b\nUnity5\u3067\u30a8\u30af\u30bb\u30eb\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u5834\u5408\u3001\u3044\u304f\u3064\u304b\u306eDLL\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u30a8\u30af\u30bb\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u64cd\u4f5c\u6a5f\u80fd\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u304c\u53ef\u80fd\u3067\u3059\u3002\u4eca\u56de\u306f\u305d\u306eDLL\u306e\u7d39\u4ecb\u3068Unity5\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306e\u4f7f\u3044\u65b9\u3001\u6ce8\u610f\u70b9\u3092\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\n# \u4f7f\u7528\u3059\u308bDLL\u306b\u3064\u3044\u3066\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306e4\u3064\u3092\u691c\u8a0e\n\nOpenXML\nClosedXML\nNPOI\nEPPlus\n\n# \u3069\u308c\u3092\u4f7f\u7528\u3059\u308b\u304b\n### OpenXML\n\u307e\u305aOpenXML\u306fSDK2.0\u3060\u3068.Net\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c3.5\u306a\u306e\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3002SDK1.0\u3060\u30682007\u306e\u30a8\u30af\u30bb\u30eb\u307e\u3067\u306f\u6271\u3048\u308b\u304c\u53e4\u3044\u3002\u5f8c\u5358\u7d14\u306bAPI\u304c\u6271\u3044\u3065\u3089\u3044\u3002\u306e\u3067\u4f7f\u308f\u306a\u3044\u3002\n\n### ClosedXML\nOpenXML\u3092\u4f7f\u3044\u3084\u3059\u304f\u3057\u305f\u3082\u306e\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u306e\u3067Unity\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u30d3\u30eb\u30c9\u304c\u53ef\u80fd\u3002\n\u30d3\u30eb\u30c9\u3059\u308b\u969b\u306fTargetFramework\u3092Unity3.5 .net Full Base Class Libraries\u306b\u3057\u3066\u884c\u3046\u3053\u3068\u3002\n\u305f\u3060\u3057\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\u3067Api Compatibility Level\u304cFull Base\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\n### NPOI\n\u3053\u3061\u3089\u306fdll\u3092\u7279\u306b\u30d3\u30eb\u30c9\u3057\u76f4\u3055\u306a\u304f\u3066\u3082\u4f7f\u7528\u53ef\u80fd\u3002\nApi Compatibility Level\u3082\u6c17\u306b\u3057\u306a\u304f\u3066OK\u3002\nClosedXML\u304c\u4f7f\u3048\u306a\u3044\u5834\u5408\u306e\u5019\u88dc\u3002\n\n### EPPlus\n.xls\u5f62\u5f0f\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u305d\u3046\u306a\u306e\u3067\u4eca\u56de\u306f\u691c\u8a3c\u3057\u3066\u306a\u3044\u3002\n\n\n# DLL\u30d5\u30a1\u30a4\u30eb\u306e\u7f6e\u304d\u5834\u6240\nAsset\u30d5\u30a9\u30eb\u30c0\u5185\u3067\u3042\u308c\u3070\u3069\u3053\u3067\u3082\u8a8d\u8b58\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u305d\u308c\u305e\u308c\u3067\u5fc5\u8981\u306aDLL\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u7f6e\u3057\u307e\u3059\u3002\n\n# \u8aad\u307f\u8fbc\u307f\u3092\u884c\u3046\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u9069\u5f53\u306b\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u305d\u308c\u305e\u308c\u30d5\u30a1\u30a4\u30eb\u2192\u30b7\u30fc\u30c8\u2192\u5217\u884c\u306e\u9805\u76ee\u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306a\u5f62\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n\n### CLOSEDXML\n```cpp\npublic void Read(string _path)\n{\n    XLWorkbook _book;\n    using (_book = new XLWorkbook(_path))\n    {\n        for (int index = 0; index < _book.Worksheets.Count; index++)\n        {\n            IXLWorksheet _sheet = _book.Worksheet(index);\n            for (int _index_row = 0; _index_row < _sheet.RowCount(); _index_row++)\n            {\n                for (int _index_column = 0; _index_column < _sheet.ColumnCount(); _index_column++)\n                {\n                    IXLCell _cell = _sheet.Cell(_index_row, _index_column);\n                }\n            }\n        }\n    }\n}\n```\n\n### NPOI\n```cpp\npublic void Read(string _path)\n{\n    using (FileStream _stream = File.Open(_path, FileMode.Open, FileAccess.Read, FileShare.Read))\n    {\n        file_path = _path;\n        IWorkbook _book = null;\n        string _extension = Path.GetExtension(_path);\n        if (_extension == \".xls\")\n        {\n            _book = new HSSFWorkbook(_stream);\n        }\n        else if (_extension == \".xlsx\")\n        {\n            _book = new XSSFWorkbook(_stream);\n        }\n        else\n        {\n            return;\n        }\n\n        for (int _sheet_index = 0; _sheet_index < _book.NumberOfSheets; ++_sheet_index)\n        {\n            ISheet _sheet = _book.GetSheetAt(_sheet_index);\n            int _row_num = _sheet.LastRowNum;\n            for (int _row_index = _sheet.FirstRowNum; _row_index < _row_num; _row_index++)\n            {\n                IRow _row = _sheet.GetRow(_row_index);\n                if (_row == null )\n                    continue;\n\n                int _cell_num = _row.LastCellNum;\n                for (int _cell_index = _row.FirstCellNum; _cell_index < _cell_num; _cell_index++)\n                {\n                    ICell _cell = _row.GetCell(_cell_index);\n                    if (_cell == null)\n                        continue;\n\n                    string _value = \"\";\n                    switch (_cell.CellType)\n                    {\n                        case CellType.String:\n                                _value = _cell.StringCellValue;\n                                break;\n                        case CellType.Numeric:\n                                _value = _cell.NumericCellValue.ToString();\n                                break;\n                        case CellType.Boolean:\n                                _value = _cell.BooleanCellValue.ToString();\n                                break;\n                        default:\n                                break;\n                    }\n                }\n            }\n        }\n    }\n}\n```\n\n## \u3000\n\n\u66f8\u304d\u8fbc\u307f\u51e6\u7406\u306b\u95a2\u3057\u3066\u306f\u8a66\u3057\u3066\u3044\u306a\u3044\u3051\u3069\u305d\u3053\u307e\u3067\u96e3\u3057\u304f\u306a\u3044\u306f\u305a\u3002\nOpenXML\u3092\u4f7f\u3046\u3088\u308a\u304b\u306f\u683c\u6bb5\u306b\u697d\u306b\u306a\u308b\u306e\u3067\u3070\u3093\u3070\u3093\u4f7f\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u3041\u3001\u3042\u307e\u308a\u6a5f\u4f1a\u306f\u306a\u3044\u304b\u3082\u3067\u3059\u304c\u3002\n\n\n\n\n"}