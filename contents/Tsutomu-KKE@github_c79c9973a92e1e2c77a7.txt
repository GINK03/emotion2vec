{"context": " More than 1 year has passed since last update.\n\n \u306f\u3058\u3081\u306b\npython\u306e\u63cf\u753b\u30d1\u30c3\u30b1\u30fc\u30b8seaborn\u306eChoosing color palettes\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002\nJupyter\u30d5\u30a1\u30a4\u30eb\u3082\u7528\u610f\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n \u6e96\u5099\n\npython\n%matplotlib inline\nimport seaborn as sns, numpy as np\nfrom ipywidgets import interact, FloatSlider\n\n\n\n color_palette()\u3092\u7528\u3044\u305f\u4f5c\u6210\u65b9\u6cd5(Building color palettes with color_palette())\n\ncolor_palette\u3092\u7528\u3044\u308b\u3068\u3001\u307b\u3068\u3093\u3069\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\nset_palette\u3092\u7528\u3044\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059(\u4f8b\u306f\u5f8c\u8ff0)\u3002\n\n\n \u5b9a\u6027\u7684\u306a\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8(Qualitative color palettes)\n\n\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u540d\u3092\u6307\u5b9a\u3057\u306a\u3044\u3068\u3001\u73fe\u5728\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002(\u4e0b\u8a18\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8)\npalplot\u306f\u3001\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n\npython\ncurrent_palette = sns.color_palette(n_colors=24)\nsns.palplot(current_palette)\n\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u306f\u30016\u3064\u306e\u30c6\u30fc\u30de(deep, muted, pastel, bright, dark, colorblind)\u304c\u3042\u308a\u307e\u3059\u3002(\u30c7\u30d5\u30a9\u30eb\u30c8\u306fdeep)\nJupyter\u3067\u3001\u30c6\u30fc\u30de\u3092\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\npython\ndef show_pal0(palette):\n    sns.palplot(sns.color_palette(palette, 24))\ninteract(show_pal0, palette='deep muted pastel bright dark colorblind'.split());\n\n\n\n\n \u8272\u76f8\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8(Using circular color systems)\n\u3088\u304f\u4f7f\u308f\u308c\u308b\u306e\u306f\u3001hls\u3067\u3059\u3002color_palette\u3067\u3082\u3001hls_palette\u3067\u3082\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\npython\nsns.palplot(sns.color_palette(\"hls\",24))\nsns.palplot(sns.hls_palette(24))\n\n\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf l \u3067\u660e\u5ea6\u3092\u3001s \u3067\u5f69\u5ea6\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\npython\nsns.palplot(sns.hls_palette(24, l=0.2))\nsns.palplot(sns.hls_palette(24, s=0.2))\n\n\n\n\n\u4e0b\u8a18\u306e\u69d8\u306b\u3059\u308b\u3068\u304f\u3063\u304d\u308a\u3057\u305f\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n\npython\nsns.palplot(sns.hls_palette(24, l=0.5, s=1))\n\n\n\nJupyter\u3067\u3001\u660e\u5ea6\u3068\u5f69\u5ea6\u3092\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\npython\ndef show_pal1(l, s):\n    sns.palplot(sns.hls_palette(24, l=l, s=s))\ninteract(show_pal1, l=FloatSlider(0.6, max=1), s=FloatSlider(0.65, max=1));\n\n\n\nhls\u306e\u8272\u76f8\u3054\u3068\u306e\u660e\u5ea6\u306e\u3070\u3089\u3064\u304d\u3092\u5c11\u306a\u304f\u3057\u305fhusl\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\npython\nsns.palplot(sns.husl_palette(24))\n\n\n\n\n \u30ab\u30c6\u30b4\u30ea\u30ab\u30e9\u30fc(Using categorical Color Brewer palettes)\n\u540d\u524d\u306e\u3064\u3044\u305f\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3067\u3059\u3002 \u5c11\u3057\u53e4\u3044\u3067\u3059\u304c\u3001\u4e00\u89a7(\u5370\u5237\u7528PDF)\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n\npython\nsns.palplot(sns.color_palette(\"Set1\", 24))\n\n\n\nJupyter\u3067\u306f\u3001\u7c21\u5358\u306b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\npython\nsns.choose_colorbrewer_palette('qualitative');\n\n\n\nRGB\u3067\u6307\u5b9a\u3057\u3066\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\npython\nflatui = [\"#9b59b6\", \"#3498db\", \"#95a5a6\", \"#e74c3c\", \"#34495e\", \"#2ecc71\"]\nsns.palplot(sns.color_palette(flatui, 24))\n\n\n\n\n \u9023\u7d9a\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8(Sequential color palettes)\n\n\u7279\u5b9a\u306e\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u9023\u7d9a\u7684\u306a\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n\u540d\u524d\u306b\"_d\"\u3092\u3064\u3051\u308b\u3068dark\u306b\u306a\u308a\u307e\u3059\u3002(\u3064\u3051\u306a\u3044\u3068light)\n\u540d\u524d\u306b\"_r\"\u3092\u3064\u3051\u308b\u3068\u9006\u9806\u306b\u306a\u308a\u307e\u3059\u3002\n\n\npython\nsns.palplot(sns.color_palette(\"Blues\", 24))\nsns.palplot(sns.color_palette(\"Blues_d\", 24))\nsns.palplot(sns.color_palette(\"Blues_r\", 24))\n\n\n\n\n\nJupyter\u3067\u306f\u3001\u7c21\u5358\u306b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\npython\nsns.choose_colorbrewer_palette('sequential');\n\n\n\n\n cubehelix_palette\u3092\u7528\u3044\u305f\u9023\u7d9a\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8(Sequential palettes with cubehelix_palette())\ncubehelix\u3092\u4f7f\u3063\u3066\u8272\u8abf\u3092\u5909\u5316\u3055\u305b\u306a\u304c\u3089\u3001\u660e\u308b\u3055\u3092\u9023\u7d9a\u7684\u306b\u5909\u5316\u3055\u305b\u305f\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\npython\nsns.palplot(sns.color_palette(\"cubehelix\", 24))\n\n\n\ncubehelix_palette\u306f\u3001\u9055\u3046\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n\npython\nsns.palplot(sns.cubehelix_palette(24))\n\n\n\nas_cmap=True\u3068\u3059\u308b\u3053\u3068\u3067\u3001cmap\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u3064\u30b0\u30e9\u30d5\u63cf\u753b\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\npython\nnp.random.seed(1)\nx, y = np.random.multivariate_normal([0, 0], [[1, -.5], [-.5, 1]], size=300).T\ncmap = sns.cubehelix_palette(light=1, as_cmap=True)\nsns.kdeplot(x, y, cmap=cmap, shade=True);\n\n\n\nJupyter\u3067\u3001cubehelix_palette \u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\npython\ndef show_pal2(start, rot):\n    sns.palplot(sns.cubehelix_palette(24, start=start, rot=rot))\ninteract(show_pal2, start=FloatSlider(max=1), rot=FloatSlider(0.4, max=1));\n\n\n\n\n \u30ab\u30b9\u30bf\u30e0\u9023\u7d9a\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8(Custom sequential palettes with light_palette() and dark_palette())\nlight_palette\u3084dark_palette\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\npython\nsns.palplot(sns.light_palette(\"blue\", 24))\nsns.palplot(sns.dark_palette(\"blue\", 24))\n\n\n\n\n\u5148\u307b\u3069\u306e\u56f3\u306e\u7b49\u9ad8\u7dda\u306b\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\npython\ncmap = sns.dark_palette(\"palegreen\", as_cmap=True)\nsns.kdeplot(x, y, cmap=cmap);\n\n\n\nJupyter\u3067\u3001\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\npython\ndef show_pal3(light_or_dark, color, reverse):\n    sns.palplot(eval('sns.%s_palette'%light_or_dark)(color=color, n_colors=24, reverse=reverse))\ninteract(show_pal3, light_or_dark=('light', 'dark'), color=('blue', 'navy', 'green', 'palegreen', 'red'), reverse=False);\n\n\n\n\n 2\u8272\u306b\u5206\u304b\u308c\u305f\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8(Diverging color palettes)\n\u4e21\u7aef\u304c\u5225\u306e\u8272\u3067\u3001\u4e2d\u9593\u304c\u767d\u8272\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3067\u3059\u3002\ncolor_palette\u3067\u6307\u5b9a\u3059\u308c\u3070\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\npython\nsns.palplot(sns.color_palette(\"BrBG\", 24))\nsns.palplot(sns.color_palette(\"RdBu_r\", 24))\nsns.palplot(sns.color_palette(\"coolwarm\", 24))\n\n\n\n\n\nJupyter\u3067\u306f\u3001\u7c21\u5358\u306b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\npython\nsns.choose_colorbrewer_palette('diverging');\n\n\n\n\n 2\u8272\u306b\u5206\u304b\u308c\u305f\u30ab\u30b9\u30bf\u30e0\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8(Custom diverging palettes with diverging_palette())\ndiverging_palette\u3067\u30ab\u30b9\u30bf\u30e0\u3067\u304d\u307e\u3059\u3002\n\u4e2d\u9593\u3092\u6697\u304f\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\npython\nsns.palplot(sns.diverging_palette(220, 20, n=24))\nsns.palplot(sns.diverging_palette(145, 280, s=85, l=25, n=24))\nsns.palplot(sns.diverging_palette(255, 133, l=60, n=24, center=\"dark\"))\n\n\n\n\n\nJupyter\u3067\u3001\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\npython\ndef show_pal4(h_neg, h_pos, s, l, center):\n    sns.palplot(sns.diverging_palette(h_neg, h_pos, n=24, s=s, l=l, center=center))\ninteract(show_pal4, h_neg=FloatSlider(220, max=360), h_pos=FloatSlider(20, max=360), \n         s=FloatSlider(75, max=99), l=FloatSlider(50, max=99), center=('light', 'dark'));\n\n\n\n\n \u30c7\u30d5\u30a9\u30eb\u30c8\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u306e\u8a2d\u5b9a(Changing default palettes with set_palette())\nset_palette\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u8a2d\u5b9a\u306a\u3057\u3067\u63cf\u753b\u3057\u307e\u3059\u3002\n\npython\ndef sinplot(flip=1):\n    x = np.linspace(0, 14, 100)\n    for i in range(1, 7):\n        plt.plot(x, np.sin(x + i * .5) * (7 - i) * flip)\n\nsinplot()\n\n\n\n\u8a2d\u5b9a\u3057\u3066\u63cf\u753b\u3057\u307e\u3059\u3002\n\npython\nsns.set_palette(\"husl\")\nsinplot()\n\n\n\nwith\u53e5\u3092\u4f7f\u3046\u3068\u3001\u5c40\u6240\u7684\u306b\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\npython\nwith sns.color_palette(\"PuBuGn_d\"):\n    sinplot()\n\n\n\n\u4ee5\u4e0a\n# <i class='fa fa-line-chart' /> \u306f\u3058\u3081\u306b\npython\u306e\u63cf\u753b\u30d1\u30c3\u30b1\u30fc\u30b8seaborn\u306e[Choosing color palettes](http://stanford.edu/~mwaskom/software/seaborn/tutorial/color_palettes.html)\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002\n[Jupyter\u30d5\u30a1\u30a4\u30eb](http://nbviewer.jupyter.org/gist/Tsutomu-KKE/e578cc7b031795bdefdb)\u3082\u7528\u610f\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n## <i class='fa fa-line-chart' /> \u6e96\u5099\n```py3:python\n%matplotlib inline\nimport seaborn as sns, numpy as np\nfrom ipywidgets import interact, FloatSlider\n```\n\n## <i class='fa fa-line-chart' /> color_palette()\u3092\u7528\u3044\u305f\u4f5c\u6210\u65b9\u6cd5<br />(Building color palettes with color_palette())\n- color_palette\u3092\u7528\u3044\u308b\u3068\u3001\u307b\u3068\u3093\u3069\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n- set_palette\u3092\u7528\u3044\u308b\u3068\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059(\u4f8b\u306f\u5f8c\u8ff0)\u3002\n\n## <i class='fa fa-line-chart' /> \u5b9a\u6027\u7684\u306a\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8<br />(Qualitative color palettes)\n- \u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u540d\u3092\u6307\u5b9a\u3057\u306a\u3044\u3068\u3001\u73fe\u5728\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002(\u4e0b\u8a18\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8)\n- palplot\u306f\u3001\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n```py3:python\ncurrent_palette = sns.color_palette(n_colors=24)\nsns.palplot(current_palette)\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/7440ea7b-2dd8-85e0-04d5-104570c8dc92.png)\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u306f\u30016\u3064\u306e\u30c6\u30fc\u30de(deep, muted, pastel, bright, dark, colorblind)\u304c\u3042\u308a\u307e\u3059\u3002(\u30c7\u30d5\u30a9\u30eb\u30c8\u306fdeep)\nJupyter\u3067\u3001\u30c6\u30fc\u30de\u3092\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```py3:python\ndef show_pal0(palette):\n    sns.palplot(sns.color_palette(palette, 24))\ninteract(show_pal0, palette='deep muted pastel bright dark colorblind'.split());\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/51dd03da-e029-f882-fafb-b03e28991b8a.png)\n\n## <i class='fa fa-line-chart' /> \u8272\u76f8\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8<br />(Using circular color systems)\n\u3088\u304f\u4f7f\u308f\u308c\u308b\u306e\u306f\u3001hls\u3067\u3059\u3002color_palette\u3067\u3082\u3001hls_palette\u3067\u3082\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n```py3:python\nsns.palplot(sns.color_palette(\"hls\",24))\nsns.palplot(sns.hls_palette(24))\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/b4b291c5-ac68-8fbf-883a-2cc6e0c94c72.png)\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/b4b291c5-ac68-8fbf-883a-2cc6e0c94c72.png)\n\n\u30d1\u30e9\u30e1\u30fc\u30bf l \u3067\u660e\u5ea6\u3092\u3001s \u3067\u5f69\u5ea6\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n```py3:python\nsns.palplot(sns.hls_palette(24, l=0.2))\nsns.palplot(sns.hls_palette(24, s=0.2))\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/6766c741-a528-e330-6f40-43f9d336ea24.png)\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/b9459e9a-9853-49c2-bed3-ba2f65ec053c.png)\n\n\u4e0b\u8a18\u306e\u69d8\u306b\u3059\u308b\u3068\u304f\u3063\u304d\u308a\u3057\u305f\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n\n```py3:python\nsns.palplot(sns.hls_palette(24, l=0.5, s=1))\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/7d03b0fc-41e1-1f78-1902-52c61ab84966.png)\n\nJupyter\u3067\u3001\u660e\u5ea6\u3068\u5f69\u5ea6\u3092\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```py3:python\ndef show_pal1(l, s):\n    sns.palplot(sns.hls_palette(24, l=l, s=s))\ninteract(show_pal1, l=FloatSlider(0.6, max=1), s=FloatSlider(0.65, max=1));\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/bb7196c4-a422-6b9e-7a98-53be4955343b.png)\n\nhls\u306e\u8272\u76f8\u3054\u3068\u306e\u660e\u5ea6\u306e\u3070\u3089\u3064\u304d\u3092\u5c11\u306a\u304f\u3057\u305fhusl\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n```py3:python\nsns.palplot(sns.husl_palette(24))\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/c105e567-e14a-d6e0-0946-83eff8864fde.png)\n\n## <i class='fa fa-line-chart' /> \u30ab\u30c6\u30b4\u30ea\u30ab\u30e9\u30fc<br />(Using categorical Color Brewer palettes)\n\u540d\u524d\u306e\u3064\u3044\u305f\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3067\u3059\u3002 \u5c11\u3057\u53e4\u3044\u3067\u3059\u304c\u3001\u4e00\u89a7([\u5370\u5237\u7528PDF](https://dl.dropboxusercontent.com/u/35689878/pdf/pal.pdf))\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/279e0621-678a-8345-49b5-d5af7dec1544.png)\n\n```py3:python\nsns.palplot(sns.color_palette(\"Set1\", 24))\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/b23dfc98-9436-9aa4-2d61-70100d207564.png)\n\nJupyter\u3067\u306f\u3001\u7c21\u5358\u306b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```py3:python\nsns.choose_colorbrewer_palette('qualitative');\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/4c455d11-b9e1-8781-0226-a36e3389a14a.png)\n\nRGB\u3067\u6307\u5b9a\u3057\u3066\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```py3:python\nflatui = [\"#9b59b6\", \"#3498db\", \"#95a5a6\", \"#e74c3c\", \"#34495e\", \"#2ecc71\"]\nsns.palplot(sns.color_palette(flatui, 24))\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/c7f83704-ace3-fd13-28f7-8617e6801cb2.png)\n\n## <i class='fa fa-line-chart' /> \u9023\u7d9a\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8<br />(Sequential color palettes)\n- \u7279\u5b9a\u306e\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u9023\u7d9a\u7684\u306a\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n- \u540d\u524d\u306b\"_d\"\u3092\u3064\u3051\u308b\u3068dark\u306b\u306a\u308a\u307e\u3059\u3002(\u3064\u3051\u306a\u3044\u3068light)\n- \u540d\u524d\u306b\"_r\"\u3092\u3064\u3051\u308b\u3068\u9006\u9806\u306b\u306a\u308a\u307e\u3059\u3002\n\n```py3:python\nsns.palplot(sns.color_palette(\"Blues\", 24))\nsns.palplot(sns.color_palette(\"Blues_d\", 24))\nsns.palplot(sns.color_palette(\"Blues_r\", 24))\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/185565f3-344c-d9a4-fc3b-79c6e9690630.png)\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/96e86db0-3dd3-6c51-089b-e5183081a9a3.png)\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/022a046e-d736-f0b5-e112-5c259e454b6a.png)\n\nJupyter\u3067\u306f\u3001\u7c21\u5358\u306b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```py3:python\nsns.choose_colorbrewer_palette('sequential');\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/3c4bd984-f031-1f7d-fa9c-8a9eb6d15305.png)\n\n## <i class='fa fa-line-chart' /> cubehelix_palette\u3092\u7528\u3044\u305f\u9023\u7d9a\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8<br />(Sequential palettes with cubehelix_palette())\n\ncubehelix\u3092\u4f7f\u3063\u3066\u8272\u8abf\u3092\u5909\u5316\u3055\u305b\u306a\u304c\u3089\u3001\u660e\u308b\u3055\u3092\u9023\u7d9a\u7684\u306b\u5909\u5316\u3055\u305b\u305f\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n```py3:python\nsns.palplot(sns.color_palette(\"cubehelix\", 24))\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/1e7c3041-f2c8-2389-b9bc-d397e09237dd.png)\n\ncubehelix_palette\u306f\u3001\u9055\u3046\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n\n```py3:python\nsns.palplot(sns.cubehelix_palette(24))\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/6f55bced-24cd-0be1-0a6f-e5d23679b7cc.png)\n\nas_cmap=True\u3068\u3059\u308b\u3053\u3068\u3067\u3001cmap\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6301\u3064\u30b0\u30e9\u30d5\u63cf\u753b\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```py3:python\nnp.random.seed(1)\nx, y = np.random.multivariate_normal([0, 0], [[1, -.5], [-.5, 1]], size=300).T\ncmap = sns.cubehelix_palette(light=1, as_cmap=True)\nsns.kdeplot(x, y, cmap=cmap, shade=True);\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/69aa2d3e-5aae-3100-aa7b-27146e245a0d.png)\n\nJupyter\u3067\u3001cubehelix_palette \u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```py3:python\ndef show_pal2(start, rot):\n    sns.palplot(sns.cubehelix_palette(24, start=start, rot=rot))\ninteract(show_pal2, start=FloatSlider(max=1), rot=FloatSlider(0.4, max=1));\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/a165973e-45d7-c398-8b6a-b26ca46b1322.png)\n\n## <i class='fa fa-line-chart' /> \u30ab\u30b9\u30bf\u30e0\u9023\u7d9a\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8<br />(Custom sequential palettes with light_palette() and dark_palette())\n\nlight_palette\u3084dark_palette\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```py3:python\nsns.palplot(sns.light_palette(\"blue\", 24))\nsns.palplot(sns.dark_palette(\"blue\", 24))\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/ab7e2f81-c236-9077-75c4-ad072b9c9f44.png)\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/2e686455-522e-1f22-3041-64e35638c36d.png)\n\n\u5148\u307b\u3069\u306e\u56f3\u306e\u7b49\u9ad8\u7dda\u306b\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```py3:python\ncmap = sns.dark_palette(\"palegreen\", as_cmap=True)\nsns.kdeplot(x, y, cmap=cmap);\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/8b14f0ba-8f99-22e0-cc2b-60aea463cfd7.png)\n\nJupyter\u3067\u3001\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```py3:python\ndef show_pal3(light_or_dark, color, reverse):\n    sns.palplot(eval('sns.%s_palette'%light_or_dark)(color=color, n_colors=24, reverse=reverse))\ninteract(show_pal3, light_or_dark=('light', 'dark'), color=('blue', 'navy', 'green', 'palegreen', 'red'), reverse=False);\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/036f8f45-2ef7-aa0a-4324-77b1c9c0b97e.png)\n\n\n## <i class='fa fa-line-chart' /> 2\u8272\u306b\u5206\u304b\u308c\u305f\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8<br />(Diverging color palettes)\n\n\u4e21\u7aef\u304c\u5225\u306e\u8272\u3067\u3001\u4e2d\u9593\u304c\u767d\u8272\u306e\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3067\u3059\u3002\ncolor_palette\u3067\u6307\u5b9a\u3059\u308c\u3070\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n```py3:python\nsns.palplot(sns.color_palette(\"BrBG\", 24))\nsns.palplot(sns.color_palette(\"RdBu_r\", 24))\nsns.palplot(sns.color_palette(\"coolwarm\", 24))\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/e4d169b5-ce41-a94d-6eec-5b432c8e4737.png)\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/cadb60d9-5901-83c8-d29d-eca459dd33e9.png)\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/31fff8b8-c3e6-e5ee-65ee-406ed630835a.png)\n\nJupyter\u3067\u306f\u3001\u7c21\u5358\u306b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```py3:python\nsns.choose_colorbrewer_palette('diverging');\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/acacfd34-70fe-f278-9442-16dc67aee340.png)\n\n## <i class='fa fa-line-chart' /> 2\u8272\u306b\u5206\u304b\u308c\u305f\u30ab\u30b9\u30bf\u30e0\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8<br />(Custom diverging palettes with diverging_palette())\n\ndiverging_palette\u3067\u30ab\u30b9\u30bf\u30e0\u3067\u304d\u307e\u3059\u3002\n\u4e2d\u9593\u3092\u6697\u304f\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```py3:python\nsns.palplot(sns.diverging_palette(220, 20, n=24))\nsns.palplot(sns.diverging_palette(145, 280, s=85, l=25, n=24))\nsns.palplot(sns.diverging_palette(255, 133, l=60, n=24, center=\"dark\"))\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/c6045d9c-e545-53af-aa0d-e35729ec4637.png)\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/36fa462b-6cf3-5b8f-ec3d-f4562024eccb.png)\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/2939b275-a190-430d-a9b9-6d72e98b6a0f.png)\n\nJupyter\u3067\u3001\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u78ba\u8a8d\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```py3:python\ndef show_pal4(h_neg, h_pos, s, l, center):\n    sns.palplot(sns.diverging_palette(h_neg, h_pos, n=24, s=s, l=l, center=center))\ninteract(show_pal4, h_neg=FloatSlider(220, max=360), h_pos=FloatSlider(20, max=360), \n         s=FloatSlider(75, max=99), l=FloatSlider(50, max=99), center=('light', 'dark'));\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/0ef54c48-bcb4-ad2c-dba7-f88412f0bf17.png)\n\n## <i class='fa fa-line-chart' /> \u30c7\u30d5\u30a9\u30eb\u30c8\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u306e\u8a2d\u5b9a<br />(Changing default palettes with set_palette())\n\nset_palette\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u8a2d\u5b9a\u306a\u3057\u3067\u63cf\u753b\u3057\u307e\u3059\u3002\n\n```py3:python\ndef sinplot(flip=1):\n    x = np.linspace(0, 14, 100)\n    for i in range(1, 7):\n        plt.plot(x, np.sin(x + i * .5) * (7 - i) * flip)\n\nsinplot()\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/161b4359-af71-6cd4-0410-dd65cd37a5b9.png)\n\n\u8a2d\u5b9a\u3057\u3066\u63cf\u753b\u3057\u307e\u3059\u3002\n\n```py3:python\nsns.set_palette(\"husl\")\nsinplot()\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/dcb9f275-34c1-207c-7ac4-6b5d74c8fc7a.png)\n\nwith\u53e5\u3092\u4f7f\u3046\u3068\u3001\u5c40\u6240\u7684\u306b\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\n```py3:python\nwith sns.color_palette(\"PuBuGn_d\"):\n    sinplot()\n```\n![image](https://qiita-image-store.s3.amazonaws.com/0/13955/5f1d9889-6bb3-d23b-1c0b-8e488f618dbe.png)\n\n\u4ee5\u4e0a\n", "tags": ["Python", "seaborn"]}