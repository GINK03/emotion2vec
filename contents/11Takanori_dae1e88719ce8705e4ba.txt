{"context": "\u666e\u6bb5\u306e\u4ed5\u4e8b(Ruby)\u3067\u4e45\u3057\u3076\u308a\u306bcsv\u3092\u8aad\u307f\u66f8\u304d\u3057\u305f\u306e\u3067\u3001Rust\u3067\u3082csv\u3092\u8aad\u307f\u66f8\u304d\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n \u4eca\u56de\u306f rust-csv\u3068\u3044\u3046\u30af\u30ec\u30fc\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nCSV\u306b\u66f8\u304d\u8fbc\u307f\n\nextern crate csv;\n\nfn main() {\n    let people = vec![\n        (\"Yamada\", \"Taro\", 1989),\n        (\"Sato\", \"Takashi\", 1990),\n        (\"Suzuki\", \"Emi\", 1991),\n    ];\n    let mut writer = csv::Writer::from_file(\"sample.csv\").unwrap();\n\n    for row in people {\n        writer.encode(row).expect(\"CSV writer error\");\n    }\n}\n\npeople\u306b\u306fcsv\u306b\u66f8\u304d\u8fbc\u307f\u305f\u3044\u5185\u5bb9\u3092\u675f\u7e1b\u3057\u307e\u3059\u3002tuple\uff11\u3064\u304ccsv\u306e\uff11\u884c\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002from_file\u306e\u5f15\u6570\u306b\u306fcsv\u3092\u51fa\u529b\u5148(\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9)\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n$ cat sample.csv\nYamada,Taro,1989\nSato,Takashi,1990\nSuzuki,Emi,1991\n\n\u51fa\u529b\u3057\u305fsample.csv\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u308b\u3068\u3001people\u306e\u5185\u5bb9\u304c\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\nCSV\u3092\u30d1\u30fc\u30b9\nextern crate csv;\n\nfn main() {\n    let mut reader = csv::Reader::from_file(\"sample.csv\").unwrap().has_headers(false);\n    for row in reader.decode() {\n        let row: (String, String, usize) = row.unwrap();\n        println!(\"{:?}\", row);\n    }\n}\n\n\u30d1\u30fc\u30b9\u3082\u66f8\u304d\u8fbc\u307f\u3068\u307b\u307c\u540c\u3058\u3067\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u3066\u3001decode\u3059\u308b\u3060\u3051\u3067\u3059\u3002\ncargo run\n(\"Yamada\", \"Taro\", 1989)\n(\"Sato\", \"Takashi\", 1990)\n(\"Suzuki\", \"Emi\", 1991)\n\n\nCSV\u306b\u66f8\u304d\u8fbc\u307f\uff08struct\u3092\u4f7f\u7528\uff09\nextern crate csv;\nextern crate rustc_serialize;\n\n#[derive(RustcEncodable)]\nstruct People {\n    last_name: String,\n    first_name: String,\n    year: usize,\n}\n\nfn main() {    \n    let people = People {\n        last_name: \"Takahashi\".to_owned(),\n        first_name: \"Hanako\".to_owned(),\n        year: 1992,\n    };\n    let mut writer = csv::Writer::from_file(\"sample.csv\").unwrap();\n\n    writer.encode(people).expect(\"CSV writer error\");\n}\n\ntuple\u306e\u4ee3\u308f\u308a\u306bstruct\u3067\u5b9a\u7fa9\u3057\u305f\u3082\u306e\u3067\u3082csv\u306b\u51fa\u529b\u3067\u304d\u307e\u3059\u3002\n\u81ea\u5206\u3067\u5b9a\u7fa9\u3057\u305f\u30c7\u30fc\u30bf\u578b\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b\u305f\u3081\u306b\u3001rustc_serialize\u3068\u3044\u3046\u30af\u30ec\u30fc\u30c8\u3082\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n$ cat sample.csv\nTakahashi,Hanako,1992\n\n\u666e\u6bb5\u306e\u4ed5\u4e8b(Ruby)\u3067\u4e45\u3057\u3076\u308a\u306bcsv\u3092\u8aad\u307f\u66f8\u304d\u3057\u305f\u306e\u3067\u3001Rust\u3067\u3082csv\u3092\u8aad\u307f\u66f8\u304d\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n \u4eca\u56de\u306f [rust-csv](http://burntsushi.net/rustdoc/csv/)\u3068\u3044\u3046\u30af\u30ec\u30fc\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n## CSV\u306b\u66f8\u304d\u8fbc\u307f\n```rust\n\nextern crate csv;\n\nfn main() {\n    let people = vec![\n        (\"Yamada\", \"Taro\", 1989),\n        (\"Sato\", \"Takashi\", 1990),\n        (\"Suzuki\", \"Emi\", 1991),\n    ];\n    let mut writer = csv::Writer::from_file(\"sample.csv\").unwrap();\n\n    for row in people {\n        writer.encode(row).expect(\"CSV writer error\");\n    }\n}\n```\n`people`\u306b\u306fcsv\u306b\u66f8\u304d\u8fbc\u307f\u305f\u3044\u5185\u5bb9\u3092\u675f\u7e1b\u3057\u307e\u3059\u3002tuple\uff11\u3064\u304ccsv\u306e\uff11\u884c\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002`from_file`\u306e\u5f15\u6570\u306b\u306fcsv\u3092\u51fa\u529b\u5148(\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9)\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\n$ cat sample.csv\nYamada,Taro,1989\nSato,Takashi,1990\nSuzuki,Emi,1991\n```\n\u51fa\u529b\u3057\u305f`sample.csv`\u306e\u4e2d\u8eab\u3092\u898b\u3066\u307f\u308b\u3068\u3001`people`\u306e\u5185\u5bb9\u304c\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n## CSV\u3092\u30d1\u30fc\u30b9\n ```rust\nextern crate csv;\n\nfn main() {\n    let mut reader = csv::Reader::from_file(\"sample.csv\").unwrap().has_headers(false);\n    for row in reader.decode() {\n        let row: (String, String, usize) = row.unwrap();\n        println!(\"{:?}\", row);\n    }\n}\n```\n\u30d1\u30fc\u30b9\u3082\u66f8\u304d\u8fbc\u307f\u3068\u307b\u307c\u540c\u3058\u3067\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u6307\u5b9a\u3057\u3066\u3001`decode `\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n```\ncargo run\n(\"Yamada\", \"Taro\", 1989)\n(\"Sato\", \"Takashi\", 1990)\n(\"Suzuki\", \"Emi\", 1991)\n```\n\n\n## CSV\u306b\u66f8\u304d\u8fbc\u307f\uff08struct\u3092\u4f7f\u7528\uff09\n```rust\nextern crate csv;\nextern crate rustc_serialize;\n\n#[derive(RustcEncodable)]\nstruct People {\n    last_name: String,\n    first_name: String,\n    year: usize,\n}\n\nfn main() {    \n    let people = People {\n        last_name: \"Takahashi\".to_owned(),\n        first_name: \"Hanako\".to_owned(),\n        year: 1992,\n    };\n    let mut writer = csv::Writer::from_file(\"sample.csv\").unwrap();\n\n    writer.encode(people).expect(\"CSV writer error\");\n}\n```\n`tuple`\u306e\u4ee3\u308f\u308a\u306b`struct`\u3067\u5b9a\u7fa9\u3057\u305f\u3082\u306e\u3067\u3082csv\u306b\u51fa\u529b\u3067\u304d\u307e\u3059\u3002\n\u81ea\u5206\u3067\u5b9a\u7fa9\u3057\u305f\u30c7\u30fc\u30bf\u578b\u3092\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b\u305f\u3081\u306b\u3001[rustc_serialize](https://doc.rust-lang.org/rustc-serialize/rustc_serialize/index.html)\u3068\u3044\u3046\u30af\u30ec\u30fc\u30c8\u3082\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n\n```\n$ cat sample.csv\nTakahashi,Hanako,1992\n```\n", "tags": ["rust"]}