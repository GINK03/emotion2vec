{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nArduino\u307b\u307c\u521d\u5fc3\u8005\u3002\n\u96fb\u5b50\u5de5\u4f5c\u3092\u59cb\u3081\u305f\u3044\u3068\u601d\u3044\u3064\u3064\u30013\u5e74\u524d\u3050\u3089\u3044\u306bArduino\u3092\u8cb7\u3046\u304c\u3001LED\u3092\u70b9\u6ec5\u3055\u305b\u3066\u7d42\u308f\u308b\u3002\n\u4ee5\u964d\u3001Arduino\u306f\u62bc\u5165\u308c\u306b\u3072\u3063\u305d\u308a\u3068\u7720\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u590f\u4f11\u307f\u306e\u5b50\u3069\u3082\u306e\u81ea\u7531\u7814\u7a76\u306b\u6700\u9069\uff01 \u690d\u7269\u304b\u3089\u30e1\u30fc\u30eb\u3092\u3082\u3089\u304a\u3046 (1/3)\nhttp://www.atmarkit.co.jp/ait/articles/1408/01/news019.html\n\u4e0a\u306e\u30d6\u30ed\u30b0\u3092\u898b\u3066\u3001\u3084\u308b\u3053\u3068\u3092\u6c7a\u610f\u3002\n\n\u8cfc\u5165\u3057\u305f\u3082\u306e\n\n\nARDUINO-A000066 Arduino Uno R3\nSEEED-SEN11301P GROVE - \u30c7\u30b8\u30bf\u30eb\u6e29\u5ea6\u30fb\u6e7f\u5ea6\u30bb\u30f3\u30b5\nSEEED-SLD01099P GROVE - \u30d9\u30fc\u30b9\u30b7\u30fc\u30eb\u30c9 V1.3\n\n\u5168\u90e8\u30675000\u5186\u3050\u3089\u3044\u3002Arduino\u304c3000\u5186\u3050\u3089\u3044\u3057\u307e\u3057\u305f\u3002\n\nArudino\u3067\u6e29\u5ea6\u53d6\u5f97\ngithub\u306eSeeed-Studio/Grove_Temperature_And_Humidity_Sensor\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3002\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306f/libraries/\u4e0a\u306b\u65bc\u3051\u3070\u5927\u4e08\u592b\u3067\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3059\u3068\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u304b\u3089\u6e29\u5ea6\u3068\u6e7f\u5ea6\u304c\u898b\u308c\u307e\u3057\u305f\u3002\n\n\u3053\u3053\u307e\u3067\u306f\u7121\u4e8b\u306b\u52d5\u304d\u307e\u3057\u305f\u30fc\n\nArduino\u304b\u3089\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3067\u30ed\u30fc\u30ab\u30eb\u4e0a\u306eNode.js\u30b5\u30fc\u30d0\u30fc\u3078\u30c7\u30fc\u30bf\u9001\u4fe1\n\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3068\u306f\n1\u672c\u306e\u4fe1\u53f7\u7dda\u3084\u56de\u7dda\u3092\u4f7f\u3063\u30661\u30d3\u30c3\u30c8\u305a\u3064\u9806\u756a\u306b\u30c7\u30fc\u30bf\u3092\u9001\u53d7\u4fe1\u3059\u308b\u901a\u4fe1\u30fb\u8ee2\u9001\u65b9\u5f0f  (eWord\u3088\u308a)\nExpress\u3068Arudino\u306e\u9023\u643a\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u30d6\u30ed\u30b0\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nnode-serialport\u3092\u4f7f\u3063\u3066Node.js\u3067Arduino\u3068\u901a\u4fe1\u3059\u308b\nhttp://tomowatanabe.hatenablog.com/entry/2013/03/23/233554\nArudino\u3068PC\u304cUSB\u30b1\u30fc\u30d6\u30eb\u3067\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u306e\u3067\u3001USB\u7d4c\u7531\u3067Arudino\u304b\u3089PC\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308b\u3053\u3068\u3060\u3068\u52dd\u624b\u306b\u89e3\u91c8\u3057\u307e\u3057\u305f\u3002\nArudino\u5074\u304b\u3089PC\u306b\u30c7\u30fc\u30bf\u304cjson\u5f62\u5f0f\u3067\u9001\u4fe1\u3057\u307e\u3059\u3002\n\nsam.ino\n#include \"DHT.h\"\n\n#define DHTPIN A1     // what pin we're connected to\n#define LED  13\n\n// Uncomment whatever type you're using!\n#define DHTTYPE DHT11   // DHT 11 \n\nDHT dht(DHTPIN, DHTTYPE);\n\nchar trans[20]; \n\n#define PORT 3000\n\nvoid setup() \n{\n    Serial.begin(115200);\n\n    dht.begin();\n}\n\nvoid loop() \n{\n\n    float h = dht.readHumidity();\n    float t = dht.readTemperature();\n\n    if (isnan(t) || isnan(h)) \n    {\n        Serial.print(\"Failed to read from DHT\");\n    } \n    else \n    {\n        memset(trans, 0, 20);\n        char *json = &trans[0];\n        int sendTemData = (int)(t);\n\n        // \u9001\u4fe1\u7528\u306eJSON\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\n        sprintf(json, \"{\\\"temp\\\":%d, \\\"led\\\":%d}\", sendTemData, digitalRead(LED));\n        Serial.println(json);        \n\n    }\n\n\n    delay(5000);\n}\n\n\n\n\u53c2\u8003: \n- https://github.com/tomovwgti/Node-SerialPort/blob/master/temp/temp.ino\n\nNode.js\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u53d7\u4fe1\nnode-serialport\u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u3001\u30c7\u30fc\u30bf\u53d7\u4fe1\u3092\u884c\u3046\u3002\nnode-serialport\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb npm install serialport\n\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u3053\u308c\u3082\u5148\u307b\u3069\u7d39\u4ecb\u3057\u305f\u30d6\u30ed\u30b0\u304b\u3089\u305d\u306e\u307e\u307e\u4f7f\u3044\u307e\u3059\u3002\nportName\u306fArduino IDE\u304b\u3089\u524d\u3082\u3063\u3066\u8abf\u3079\u304a\u304d\u307e\u3059\u3002\n\nmain.js\nvar serialport = require('serialport');\n\n// -----------------------\n// --------- \u4e2d\u7565 ---------\n// -----------------------\n\nvar portName = \"/dev/cu.usbmodem1451\";\nvar sp = new serialport.SerialPort(portName, {\n    baudRate: 115200,\n    dataBits: 8,\n    parity: 'none',\n    stopBits: 1,\n    flowControl: false,\n    parser: serialport.parsers.readline(\"\\n\")   \n});\n\n\n\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u305f\u3073\u306b\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u6e29\u5ea6\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\nmain.js\nsp.on('data', function(input) {\n\n    var buffer = new Buffer(input, 'utf8');\n\n    var jsonData;\n    try {\n        jsonData = JSON.parse(buffer);\n        console.log('temp: ' + jsonData.temp);\n    } catch(e) {\n        console.log(\"error\");\n        // \u30c7\u30fc\u30bf\u53d7\u4fe1\u304c\u304a\u304b\u3057\u3044\u5834\u5408\u7121\u8996\u3059\u308b\n        return;\n    }\n\n});\n\n\n\u4ee5\u4e0a\u3067\u7d42\u4e86\u3067\u3059\u3002\n\u4eca\u56de\u306fnode.js\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066express\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nnode.js\u30b5\u30fc\u30d0\u30fc\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n28\u3068\u51fa\u3066\u3044\u308b\u306e\u3067\u3001\u6210\u529f\u3068\u4fe1\u3058\u307e\u3059\u3002\n\n\u4eca\u5f8c\u306b\u5411\u3051\u3066\n\nMongoDB\u306b\u6e29\u5ea6\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u3002\n\u6e29\u5ea6\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u30da\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u898b\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u6bce\u56de\u6e29\u5ea6\u30c7\u30fc\u30bf\u304c\u5909\u308f\u308b\u6bce\u306b\u3001\u8868\u793a\u30da\u30fc\u30b8\u304cAjax\u3067\u66f4\u65b0\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u3053\u306e3\u3064\u306f\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u305f\u3044\u3067\u3059\u30fc\n###\u306f\u3058\u3081\u306b\n\nArduino\u307b\u307c\u521d\u5fc3\u8005\u3002\n\u96fb\u5b50\u5de5\u4f5c\u3092\u59cb\u3081\u305f\u3044\u3068\u601d\u3044\u3064\u3064\u30013\u5e74\u524d\u3050\u3089\u3044\u306bArduino\u3092\u8cb7\u3046\u304c\u3001LED\u3092\u70b9\u6ec5\u3055\u305b\u3066\u7d42\u308f\u308b\u3002\n\u4ee5\u964d\u3001Arduino\u306f\u62bc\u5165\u308c\u306b\u3072\u3063\u305d\u308a\u3068\u7720\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\n**\u590f\u4f11\u307f\u306e\u5b50\u3069\u3082\u306e\u81ea\u7531\u7814\u7a76\u306b\u6700\u9069\uff01 \u690d\u7269\u304b\u3089\u30e1\u30fc\u30eb\u3092\u3082\u3089\u304a\u3046 (1/3)**\nhttp://www.atmarkit.co.jp/ait/articles/1408/01/news019.html\n\n\u4e0a\u306e\u30d6\u30ed\u30b0\u3092\u898b\u3066\u3001\u3084\u308b\u3053\u3068\u3092\u6c7a\u610f\u3002\n\n###\u8cfc\u5165\u3057\u305f\u3082\u306e\n\n![2014-08-16-arduino-set.png](https://qiita-image-store.s3.amazonaws.com/0/15925/6ad5ec5f-04fb-dbc0-d436-8e39e41ffde4.png)\n\n- [ARDUINO-A000066 Arduino Uno R3](http://www.switch-science.com/catalog/789/)\n- [SEEED-SEN11301P GROVE - \u30c7\u30b8\u30bf\u30eb\u6e29\u5ea6\u30fb\u6e7f\u5ea6\u30bb\u30f3\u30b5](http://www.switch-science.com/catalog/818/)\n- [SEEED-SLD01099P GROVE - \u30d9\u30fc\u30b9\u30b7\u30fc\u30eb\u30c9 V1.3](http://www.switch-science.com/catalog/1293/)\n\n\u5168\u90e8\u30675000\u5186\u3050\u3089\u3044\u3002Arduino\u304c3000\u5186\u3050\u3089\u3044\u3057\u307e\u3057\u305f\u3002\n\n\n###Arudino\u3067\u6e29\u5ea6\u53d6\u5f97\n\ngithub\u306e[Seeed-Studio/Grove_Temperature_And_Humidity_Sensor](https://github.com/Seeed-Studio/Grove_Temperature_And_Humidity_Sensor)\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3002\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306f<arduinosketchfolder>/libraries/\u4e0a\u306b\u65bc\u3051\u3070\u5927\u4e08\u592b\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3092\u52d5\u304b\u3059\u3068\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u304b\u3089\u6e29\u5ea6\u3068\u6e7f\u5ea6\u304c\u898b\u308c\u307e\u3057\u305f\u3002\n\n![Screen Shot 2014-09-06 at 1.49.28 PM.png](https://qiita-image-store.s3.amazonaws.com/0/15925/b52e40e8-b105-f53c-61e0-cdcc91738092.png)\n\n\n\n\u3053\u3053\u307e\u3067\u306f\u7121\u4e8b\u306b\u52d5\u304d\u307e\u3057\u305f\u30fc\n\n###Arduino\u304b\u3089\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3067\u30ed\u30fc\u30ab\u30eb\u4e0a\u306eNode.js\u30b5\u30fc\u30d0\u30fc\u3078\u30c7\u30fc\u30bf\u9001\u4fe1\n\n**\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3068\u306f**\n1\u672c\u306e\u4fe1\u53f7\u7dda\u3084\u56de\u7dda\u3092\u4f7f\u3063\u30661\u30d3\u30c3\u30c8\u305a\u3064\u9806\u756a\u306b\u30c7\u30fc\u30bf\u3092\u9001\u53d7\u4fe1\u3059\u308b\u901a\u4fe1\u30fb\u8ee2\u9001\u65b9\u5f0f  ([eWord](http://e-words.jp/w/E382B7E383AAE382A2E383ABE9809AE4BFA1.html)\u3088\u308a)\n\nExpress\u3068Arudino\u306e\u9023\u643a\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u30d6\u30ed\u30b0\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n**node-serialport\u3092\u4f7f\u3063\u3066Node.js\u3067Arduino\u3068\u901a\u4fe1\u3059\u308b**\nhttp://tomowatanabe.hatenablog.com/entry/2013/03/23/233554\n\n\n\n\nArudino\u3068PC\u304cUSB\u30b1\u30fc\u30d6\u30eb\u3067\u3064\u306a\u304c\u3063\u3066\u3044\u308b\u306e\u3067\u3001USB\u7d4c\u7531\u3067Arudino\u304b\u3089PC\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308b\u3053\u3068\u3060\u3068\u52dd\u624b\u306b\u89e3\u91c8\u3057\u307e\u3057\u305f\u3002\n\nArudino\u5074\u304b\u3089PC\u306b\u30c7\u30fc\u30bf\u304cjson\u5f62\u5f0f\u3067\u9001\u4fe1\u3057\u307e\u3059\u3002\n\n```c:sam.ino\n#include \"DHT.h\"\n\n#define DHTPIN A1     // what pin we're connected to\n#define LED  13\n\n// Uncomment whatever type you're using!\n#define DHTTYPE DHT11   // DHT 11 \n\nDHT dht(DHTPIN, DHTTYPE);\n\nchar trans[20]; \n\n#define PORT 3000\n\nvoid setup() \n{\n    Serial.begin(115200);\n    \n    dht.begin();\n}\n\nvoid loop() \n{\n\n    float h = dht.readHumidity();\n    float t = dht.readTemperature();\n\n    if (isnan(t) || isnan(h)) \n    {\n        Serial.print(\"Failed to read from DHT\");\n    } \n    else \n    {\n        memset(trans, 0, 20);\n        char *json = &trans[0];\n        int sendTemData = (int)(t);\n        \n        // \u9001\u4fe1\u7528\u306eJSON\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\n        sprintf(json, \"{\\\"temp\\\":%d, \\\"led\\\":%d}\", sendTemData, digitalRead(LED));\n        Serial.println(json);        \n        \n    }\n    \n    \n    delay(5000);\n}\n\n```\n\n\n\u53c2\u8003: \n- https://github.com/tomovwgti/Node-SerialPort/blob/master/temp/temp.ino\n\n\n###Node.js\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u53d7\u4fe1\n[node-serialport](https://github.com/voodootikigod/node-serialport)\u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u3001\u30c7\u30fc\u30bf\u53d7\u4fe1\u3092\u884c\u3046\u3002\n\nnode-serialport\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb `npm install serialport`\n\n\u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u3053\u308c\u3082\u5148\u307b\u3069\u7d39\u4ecb\u3057\u305f[\u30d6\u30ed\u30b0](http://tomowatanabe.hatenablog.com/entry/2013/03/23/233554)\u304b\u3089\u305d\u306e\u307e\u307e\u4f7f\u3044\u307e\u3059\u3002\nportName\u306fArduino IDE\u304b\u3089\u524d\u3082\u3063\u3066\u8abf\u3079\u304a\u304d\u307e\u3059\u3002\n\n```js:main.js\nvar serialport = require('serialport');\n\n// -----------------------\n// --------- \u4e2d\u7565 ---------\n// -----------------------\n\nvar portName = \"/dev/cu.usbmodem1451\";\nvar sp = new serialport.SerialPort(portName, {\n    baudRate: 115200,\n    dataBits: 8,\n    parity: 'none',\n    stopBits: 1,\n    flowControl: false,\n    parser: serialport.parsers.readline(\"\\n\")   \n});\n```\n\n\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u305f\u3073\u306b\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u6e29\u5ea6\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n\n```js:main.js\nsp.on('data', function(input) {\n\n    var buffer = new Buffer(input, 'utf8');\n\n    var jsonData;\n    try {\n        jsonData = JSON.parse(buffer);\n        console.log('temp: ' + jsonData.temp);\n    } catch(e) {\n        console.log(\"error\");\n        // \u30c7\u30fc\u30bf\u53d7\u4fe1\u304c\u304a\u304b\u3057\u3044\u5834\u5408\u7121\u8996\u3059\u308b\n        return;\n    }\n\n});\n```\n\u4ee5\u4e0a\u3067\u7d42\u4e86\u3067\u3059\u3002\n\n\u4eca\u56de\u306fnode.js\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066express\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nnode.js\u30b5\u30fc\u30d0\u30fc\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n![Screen Shot 2014-09-06 at 2.20.41 PM.png](https://qiita-image-store.s3.amazonaws.com/0/15925/56d76dab-e41b-5f46-4e53-6f05b9d46107.png)\n\n28\u3068\u51fa\u3066\u3044\u308b\u306e\u3067\u3001\u6210\u529f\u3068\u4fe1\u3058\u307e\u3059\u3002\n\n###\u4eca\u5f8c\u306b\u5411\u3051\u3066\n\n- MongoDB\u306b\u6e29\u5ea6\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u3002\n- \u6e29\u5ea6\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3059\u308b\u30da\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u898b\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n- \u6bce\u56de\u6e29\u5ea6\u30c7\u30fc\u30bf\u304c\u5909\u308f\u308b\u6bce\u306b\u3001\u8868\u793a\u30da\u30fc\u30b8\u304cAjax\u3067\u66f4\u65b0\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u3053\u306e3\u3064\u306f\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u305f\u3044\u3067\u3059\u30fc\n\n", "tags": ["Node.js", "JavaScript", "Arduino", "Express.js"]}