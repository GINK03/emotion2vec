{"context": "\u521d\u5fc3\u8005\u304cAngular\u3067GitHub\u306eGraphQL\u3092\u53e9\u3051\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u306e\u624b\u9806\u3092\u8a18\u3057\u307e\u3059\u3002Apollo\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306eGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u2192 ovrmrw/angular-apollo-github-graphql\n\nangular-cli\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ npm i -g angular-cli\n\n\n\u65b0\u3057\u3044Angular\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n$ ng new new-project\n\nng new\u306f\u901a\u4fe1\u74b0\u5883\u3084\u30de\u30b7\u30f3\u30b9\u30da\u30c3\u30af\u306b\u3088\u3063\u3066\u306f\u304a\u98a8\u5442\u306b\u5165\u308c\u308b\u3050\u3089\u3044\u306e\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\nApollo\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nApollo Initialization\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n$ npm install apollo-client angular2-apollo graphql-tag --save\n\nApollo\u3092\u4f7f\u3046\u3068Angular\u3067GraphQL\u30b5\u30fc\u30d0\u30fc\u3092\u53e9\u3044\u3066\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306fGitHub\u306eGraphQL API\u3092\u53e9\u3044\u3066\u307f\u307e\u3059\u3002\n\nGitHub\u5074\u306e\u8a2d\u5b9a\u3092\u3059\u308b\n\u500b\u4eba\u7684\u306b\u306f\u3053\u3053\u304c\u4e00\u756a\u96e3\u5100\u3057\u307e\u3057\u305f\u3002\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3053\u3053\u3092\u3088\u304f\u8aad\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u2192 Accessing GraphQL\n\u307e\u305a\u306f\n\n1) You must be signed up for the Early Access Program.\n\n\u3060\u305d\u3046\u3067\u3059\u3002\u6307\u793a\u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\u6b21\u306b\n\n2) You'll need an OAuth token with the right scopes.\n\n\u3060\u305d\u3046\u3067\u3059\u3002\nGenerating an OAuth token\u306e\u9805\u3092\u8aad\u3093\u3067\u6307\u793a\u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\u305d\u3057\u3066\u5f97\u3089\u308c\u305fToken\u306f\u6b21\u3067\u4f7f\u3044\u307e\u3059\u3002\n\nGitHub Token\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u542b\u3081\u308b\nconfig.secret.default.ts\u3092\u30b3\u30d4\u30fc\u3057\u3066config.secret.ts\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u4e2d\u8eab\u3092\n\nconfig.secret.ts\nexport const githubToken = 'your_github_token';\n\n\n\u306e\u3088\u3046\u306b\u7de8\u96c6\u3057\u307e\u3059\u3002\n\u5f53\u7136\u306e\u3053\u3068\u3067\u3059\u304c\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306fGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u306bpush\u3055\u308c\u306a\u3044\u3088\u3046\u6c17\u3092\u4ed8\u3051\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\napp.module.ts\u3092\u7de8\u96c6\u3059\u308b\n\u3053\u308c\u304capp.module.ts\u306e\u5168\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\nsrc/app/app.module.ts\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport ApolloClient, { createNetworkInterface } from 'apollo-client';\nimport { ApolloModule } from 'angular2-apollo';\n\nimport { AppComponent } from './app.component';\nimport { AppService } from './app.service';\nimport { githubToken } from '../../config.secret';\nimport { StoreModule } from './store';\n\n\nconst networkInterface = createNetworkInterface('https://api.github.com/graphql');\nnetworkInterface.use([{\n  applyMiddleware(req, next) {\n    if (!req.options.headers) {\n      req.options.headers = {};\n    }\n    req.options.headers['authorization'] = `bearer ${githubToken}`;\n    next();\n  }\n}]);\nconst client = new ApolloClient({ networkInterface });\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ApolloModule.withClient(client),\n    StoreModule,\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\u5c11\u3005\u3054\u3061\u3083\u3054\u3061\u3083\u3057\u3066\u308b\u306e\u3067Apollo\u306b\u95a2\u308f\u308b\u90e8\u5206\u3060\u3051\u629c\u304d\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nsrc/app/app.module.ts(\u629c\u7c8b)\nimport ApolloClient, { createNetworkInterface } from 'apollo-client';\nimport { ApolloModule } from 'angular2-apollo';\n\nimport { githubToken } from '../../config.secret';\n\n\nconst networkInterface = createNetworkInterface('https://api.github.com/graphql');\nnetworkInterface.use([{\n  applyMiddleware(req, next) {\n    if (!req.options.headers) {\n      req.options.headers = {};\n    }\n    req.options.headers['authorization'] = `bearer ${githubToken}`;\n    next();\n  }\n}]);\nconst client = new ApolloClient({ networkInterface });\n\n\n@NgModule({\n  imports: [ApolloModule.withClient(client)],  \n})\nexport class AppModule { }\n\n\n\u5927\u5206\u3059\u3063\u304d\u308a\u3057\u307e\u3057\u305f\u3002\nnetworkInterface\u3068\u3044\u3046\u306e\u3092\u4f5c\u3063\u3066ApolloClient\u3092\u751f\u6210\u3057\u3066ApolloModule\u306b\u542b\u3081\u308b\u3068\u3044\u3046\u5185\u5bb9\u3067\u3059\u3002\n\u5148\u7a0b\u306eGitHub Token\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d8\u30c3\u30c0\u30fc\u306b\u542b\u3081\u3066\u3044\u308b\u306e\u3060\u3068\u3044\u3046\u3053\u3068\u304c\u306a\u3093\u3068\u306a\u304f\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n\nGraphQL API\u3092\u53e9\u3044\u3066\u307f\u308b (app.service.ts\u3092\u4f5c\u308b)\nApollo Queries\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nApollo\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u8003\u306b\u3057\u3064\u3064Service\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u50d5\u306f\u4eca\u306e\u3068\u3053\u308dRedux\u5927\u597d\u304d\u3063\u5b50\u306a\u306e\u3067API\u306e\u623b\u308a\u5024\u3092dispatcher\u3067Store\u306b\u9001\u308b\u3068\u3044\u3046\u6d41\u308c\u3092\u4f5c\u308a\u307e\u3059\u3002\napollo.watchQuery\u306e\u623b\u308a\u5024\u306f\u62e1\u5f35\u3057\u305fObservable\u306a\u306e\u3067RxJS\u306b\u3082\u6163\u308c\u3066\u304a\u304f\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002take(1)\u3092\u631f\u3080\u3053\u3068\u3067\u6bce\u56decomplete\u3057\u3066\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nsrc/app/app.service.ts\nimport { Injectable } from '@angular/core';\nimport { Angular2Apollo } from 'angular2-apollo';\nimport gql from 'graphql-tag';\n\nimport { environment } from '../environments/environment';\nimport { Dispatcher, Action, RequestViewerAction, ViewerState } from './store';\n\n\nconst CurrentViewerQuery = gql`\n  query {\n    viewer {\n      name\n      login\n    }\n  }\n`;\n\n\n@Injectable()\nexport class AppService {\n  constructor(\n    private dispatcher$: Dispatcher<Action>,\n    private apollo: Angular2Apollo,\n  ) { }\n\n\n  requestViewer(): void {\n    console.time('requestViewer');\n    this.apollo\n      .watchQuery({ query: CurrentViewerQuery })\n      .take(1)\n      .subscribe(result => {\n        if (!environment.production) {\n          console.log('result:', result);\n        }\n        const viewer = result.data.viewer as ViewerState;\n        this.dispatcher$.next(new RequestViewerAction(viewer));\n      }, err => console.error(err), () => console.timeEnd('requestViewer'));\n  }\n\n}\n\n\n\nComponent\u3067State\u3092\u53d7\u3051\u308b (app.component.ts\u3092\u7de8\u96c6\u3059\u308b)\nRedux\u3067\u3059\u306e\u3067Component\u306fAction\u3092\u547c\u3093\u3060\u5f8cState\u3092\u53d7\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nsrc/app/app.component.ts\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\n\nimport { AppService } from './app.service';\nimport { Store, AppState } from './store';\n\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>{{title}}</h1>\n    <pre>{{state | async | json}}</pre>\n    <div>\n      <button (click)=\"requestViewer()\">Request Viewer</button>\n    </div>\n  `,\n  styleUrls: ['./app.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  title = 'app works!';\n\n  constructor(\n    private service: AppService,\n    private store: Store,\n  ) { }\n\n\n  requestViewer(): void {\n    this.service.requestViewer();\n  }\n\n  get state(): Observable<AppState> { return this.store.getState(); }\n\n}\n\n\n\u51e6\u7406\u306e\u6d41\u308c\u306f\u3053\u3046\u3002\n\n\nrequestViewer()\u3067Service\u306eAction\u3092\u547c\u3076\u3002 \n\nget state()\u3067\u66f4\u65b0\u3055\u308c\u305fState\u3092Observable\u3068\u3057\u3066\u53d7\u3051\u308b\u3002\ntemplate\u306e{{state | async | json}}\u3067state\u3092AsyncPipe\u3067\u53d7\u3051\u308b\u3002\nView\u304c\u66f4\u65b0\u3055\u308c\u308b\u3002\n\n\nApollo\u304c\u30c7\u30fc\u30bf\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n$ npm start\n\nhttp://localhost:4200/\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u958b\u304d\u307e\u3059\u3002\nRequest Viewer\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u81ea\u5206\u306e\u540d\u524d\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3055\u3089\u306b\u4f55\u56de\u3082\u30af\u30ea\u30c3\u30af\u3057\u3066\u3082\u8868\u793a\u306f\u5909\u308f\u308a\u307e\u305b\u3093\u304c\u3001\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30c4\u30fc\u30eb\u3067Network\u3092\u76e3\u8996\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u30022\u56de\u76ee\u4ee5\u964d\u306fHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u767a\u751f\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\nSo Cool!!\n\u3061\u306a\u307f\u306b\n\nsrc/app/app.service.ts\nthis.apollo.watchQuery({ query: CurrentViewerQuery })\n\n\n\u3092\n\nsrc/app/app.service.ts\nthis.apollo.watchQuery({ query: CurrentViewerQuery, forceFetch: true })\n\n\n\u3068\u3059\u308b\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3044\u3066\u3082\u6bce\u56de\u5f37\u5236\u7684\u306bfetch\u3057\u307e\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4ed5\u7d44\u307f\u306b\u95a2\u3057\u3066\u306fGraphQL Concepts Visualized\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\n\nRedux\u90e8\u5206\u306b\u3064\u3044\u3066\nRedux\u306fRxJS\u3067\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3059\u3002\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3002\u2192 src/app/store\n\u521d\u5fc3\u8005\u304cAngular\u3067GitHub\u306eGraphQL\u3092\u53e9\u3051\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u306e\u624b\u9806\u3092\u8a18\u3057\u307e\u3059\u3002Apollo\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306eGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u2192 [ovrmrw/angular-apollo-github-graphql](https://github.com/ovrmrw/angular-apollo-github-graphql)\n\n## angular-cli\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n```\n$ npm i -g angular-cli\n```\n\n## \u65b0\u3057\u3044Angular\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n```\n$ ng new new-project\n```\n\n`ng new`\u306f\u901a\u4fe1\u74b0\u5883\u3084\u30de\u30b7\u30f3\u30b9\u30da\u30c3\u30af\u306b\u3088\u3063\u3066\u306f\u304a\u98a8\u5442\u306b\u5165\u308c\u308b\u3050\u3089\u3044\u306e\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\n## Apollo\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n[Apollo Initialization\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://dev.apollodata.com/angular2/initialization.html)\n\n```\n$ npm install apollo-client angular2-apollo graphql-tag --save\n```\n\nApollo\u3092\u4f7f\u3046\u3068Angular\u3067GraphQL\u30b5\u30fc\u30d0\u30fc\u3092\u53e9\u3044\u3066\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306fGitHub\u306eGraphQL API\u3092\u53e9\u3044\u3066\u307f\u307e\u3059\u3002\n\n## GitHub\u5074\u306e\u8a2d\u5b9a\u3092\u3059\u308b\n\u500b\u4eba\u7684\u306b\u306f\u3053\u3053\u304c\u4e00\u756a\u96e3\u5100\u3057\u307e\u3057\u305f\u3002\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3053\u3053\u3092\u3088\u304f\u8aad\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u2192 [Accessing GraphQL](https://developer.github.com/early-access/graphql/guides/accessing-graphql/)\n\n\u307e\u305a\u306f\n> 1) You must be signed up for the Early Access Program.\n\n\u3060\u305d\u3046\u3067\u3059\u3002\u6307\u793a\u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\u6b21\u306b\n> 2) You'll need an OAuth token with the right scopes.\n\n\u3060\u305d\u3046\u3067\u3059\u3002\n**Generating an OAuth token**\u306e\u9805\u3092\u8aad\u3093\u3067\u6307\u793a\u306b\u5f93\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u305d\u3057\u3066\u5f97\u3089\u308c\u305fToken\u306f\u6b21\u3067\u4f7f\u3044\u307e\u3059\u3002\n\n## GitHub Token\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u542b\u3081\u308b\n\n`config.secret.default.ts`\u3092\u30b3\u30d4\u30fc\u3057\u3066`config.secret.ts`\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u4e2d\u8eab\u3092\n\n```ts:config.secret.ts\nexport const githubToken = 'your_github_token';\n```\n\u306e\u3088\u3046\u306b\u7de8\u96c6\u3057\u307e\u3059\u3002\n\n\u5f53\u7136\u306e\u3053\u3068\u3067\u3059\u304c\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306fGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u306bpush\u3055\u308c\u306a\u3044\u3088\u3046\u6c17\u3092\u4ed8\u3051\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n## app.module.ts\u3092\u7de8\u96c6\u3059\u308b\n\u3053\u308c\u304c`app.module.ts`\u306e\u5168\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n```ts:src/app/app.module.ts\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport ApolloClient, { createNetworkInterface } from 'apollo-client';\nimport { ApolloModule } from 'angular2-apollo';\n\nimport { AppComponent } from './app.component';\nimport { AppService } from './app.service';\nimport { githubToken } from '../../config.secret';\nimport { StoreModule } from './store';\n\n\nconst networkInterface = createNetworkInterface('https://api.github.com/graphql');\nnetworkInterface.use([{\n  applyMiddleware(req, next) {\n    if (!req.options.headers) {\n      req.options.headers = {};\n    }\n    req.options.headers['authorization'] = `bearer ${githubToken}`;\n    next();\n  }\n}]);\nconst client = new ApolloClient({ networkInterface });\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    ApolloModule.withClient(client),\n    StoreModule,\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```\n\n\u5c11\u3005\u3054\u3061\u3083\u3054\u3061\u3083\u3057\u3066\u308b\u306e\u3067Apollo\u306b\u95a2\u308f\u308b\u90e8\u5206\u3060\u3051\u629c\u304d\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```ts:src/app/app.module.ts(\u629c\u7c8b)\nimport ApolloClient, { createNetworkInterface } from 'apollo-client';\nimport { ApolloModule } from 'angular2-apollo';\n\nimport { githubToken } from '../../config.secret';\n\n\nconst networkInterface = createNetworkInterface('https://api.github.com/graphql');\nnetworkInterface.use([{\n  applyMiddleware(req, next) {\n    if (!req.options.headers) {\n      req.options.headers = {};\n    }\n    req.options.headers['authorization'] = `bearer ${githubToken}`;\n    next();\n  }\n}]);\nconst client = new ApolloClient({ networkInterface });\n\n\n@NgModule({\n  imports: [ApolloModule.withClient(client)],  \n})\nexport class AppModule { }\n```\n\n\u5927\u5206\u3059\u3063\u304d\u308a\u3057\u307e\u3057\u305f\u3002\n`networkInterface`\u3068\u3044\u3046\u306e\u3092\u4f5c\u3063\u3066`ApolloClient`\u3092\u751f\u6210\u3057\u3066`ApolloModule`\u306b\u542b\u3081\u308b\u3068\u3044\u3046\u5185\u5bb9\u3067\u3059\u3002\n\u5148\u7a0b\u306eGitHub Token\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30d8\u30c3\u30c0\u30fc\u306b\u542b\u3081\u3066\u3044\u308b\u306e\u3060\u3068\u3044\u3046\u3053\u3068\u304c\u306a\u3093\u3068\u306a\u304f\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n\n## GraphQL API\u3092\u53e9\u3044\u3066\u307f\u308b (app.service.ts\u3092\u4f5c\u308b)\n[Apollo Queries\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://dev.apollodata.com/angular2/queries.html)\n\nApollo\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u8003\u306b\u3057\u3064\u3064Service\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u50d5\u306f\u4eca\u306e\u3068\u3053\u308dRedux\u5927\u597d\u304d\u3063\u5b50\u306a\u306e\u3067API\u306e\u623b\u308a\u5024\u3092dispatcher\u3067Store\u306b\u9001\u308b\u3068\u3044\u3046\u6d41\u308c\u3092\u4f5c\u308a\u307e\u3059\u3002\n`apollo.watchQuery`\u306e\u623b\u308a\u5024\u306f\u62e1\u5f35\u3057\u305fObservable\u306a\u306e\u3067RxJS\u306b\u3082\u6163\u308c\u3066\u304a\u304f\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002`take(1)`\u3092\u631f\u3080\u3053\u3068\u3067\u6bce\u56decomplete\u3057\u3066\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```ts:src/app/app.service.ts\nimport { Injectable } from '@angular/core';\nimport { Angular2Apollo } from 'angular2-apollo';\nimport gql from 'graphql-tag';\n\nimport { environment } from '../environments/environment';\nimport { Dispatcher, Action, RequestViewerAction, ViewerState } from './store';\n\n\nconst CurrentViewerQuery = gql`\n  query {\n    viewer {\n      name\n      login\n    }\n  }\n`;\n\n\n@Injectable()\nexport class AppService {\n  constructor(\n    private dispatcher$: Dispatcher<Action>,\n    private apollo: Angular2Apollo,\n  ) { }\n\n\n  requestViewer(): void {\n    console.time('requestViewer');\n    this.apollo\n      .watchQuery({ query: CurrentViewerQuery })\n      .take(1)\n      .subscribe(result => {\n        if (!environment.production) {\n          console.log('result:', result);\n        }\n        const viewer = result.data.viewer as ViewerState;\n        this.dispatcher$.next(new RequestViewerAction(viewer));\n      }, err => console.error(err), () => console.timeEnd('requestViewer'));\n  }\n\n}\n```\n\n## Component\u3067State\u3092\u53d7\u3051\u308b (app.component.ts\u3092\u7de8\u96c6\u3059\u308b)\nRedux\u3067\u3059\u306e\u3067Component\u306fAction\u3092\u547c\u3093\u3060\u5f8cState\u3092\u53d7\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```ts:src/app/app.component.ts\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\n\nimport { AppService } from './app.service';\nimport { Store, AppState } from './store';\n\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1>{{title}}</h1>\n    <pre>{{state | async | json}}</pre>\n    <div>\n      <button (click)=\"requestViewer()\">Request Viewer</button>\n    </div>\n  `,\n  styleUrls: ['./app.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent {\n  title = 'app works!';\n\n  constructor(\n    private service: AppService,\n    private store: Store,\n  ) { }\n\n\n  requestViewer(): void {\n    this.service.requestViewer();\n  }\n\n  get state(): Observable<AppState> { return this.store.getState(); }\n\n}\n```\n\n\u51e6\u7406\u306e\u6d41\u308c\u306f\u3053\u3046\u3002\n\n1. `requestViewer()`\u3067Service\u306eAction\u3092\u547c\u3076\u3002 \n2. `get state()`\u3067\u66f4\u65b0\u3055\u308c\u305fState\u3092Observable\u3068\u3057\u3066\u53d7\u3051\u308b\u3002\n3. template\u306e`{{state | async | json}}`\u3067`state`\u3092AsyncPipe\u3067\u53d7\u3051\u308b\u3002\n4. View\u304c\u66f4\u65b0\u3055\u308c\u308b\u3002\n\n## Apollo\u304c\u30c7\u30fc\u30bf\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\n$ npm start\n```\n\n`http://localhost:4200/`\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u958b\u304d\u307e\u3059\u3002\n\n**Request Viewer**\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u81ea\u5206\u306e\u540d\u524d\u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3055\u3089\u306b\u4f55\u56de\u3082\u30af\u30ea\u30c3\u30af\u3057\u3066\u3082\u8868\u793a\u306f\u5909\u308f\u308a\u307e\u305b\u3093\u304c\u3001\u30c7\u30d9\u30ed\u30c3\u30d1\u30fc\u30c4\u30fc\u30eb\u3067Network\u3092\u76e3\u8996\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u30022\u56de\u76ee\u4ee5\u964d\u306fHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u767a\u751f\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n**So Cool!!**\n\n\u3061\u306a\u307f\u306b\n\n```ts:src/app/app.service.ts\nthis.apollo.watchQuery({ query: CurrentViewerQuery })\n```\n\u3092\n\n```ts:src/app/app.service.ts\nthis.apollo.watchQuery({ query: CurrentViewerQuery, forceFetch: true })\n```\n\u3068\u3059\u308b\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3044\u3066\u3082\u6bce\u56de\u5f37\u5236\u7684\u306bfetch\u3057\u307e\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4ed5\u7d44\u307f\u306b\u95a2\u3057\u3066\u306f[GraphQL Concepts Visualized](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.juccoy4fv)\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\n\n## Redux\u90e8\u5206\u306b\u3064\u3044\u3066\nRedux\u306fRxJS\u3067\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3059\u3002\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3002\u2192 [src/app/store](https://github.com/ovrmrw/angular-apollo-github-graphql/tree/master/src/app/store)\n", "tags": ["Angular2", "redux", "GraphQL", "apollo", "angular2"]}