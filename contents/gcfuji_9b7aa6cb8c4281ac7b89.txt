{"context": "\n\n\u6982\u8981\nReact + ES6 + Webpack\u3067\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u884c\u3063\u305f\u306e\u3067ES6\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30bd\u30fc\u30b9\u3092\u30e1\u30e2\u3002\n\u3010\u672c\u5bb6\u3011   https://facebook.github.io/react/docs/tutorial.html\n\nES6\u5909\u63db\u30bd\u30fc\u30b9\u4e00\u89a7\n\nwebpack.config.js\n\n/webpack.config.js\n\nlet path       = require('path');\nlet webpack    = require('webpack');\n\nconst PATHS = {\n  src: path.join(__dirname, 'src'),\n  www: path.join(__dirname, 'www')\n};\n\nmodule.exports = {\n  entry: [\n    `${PATHS.src}/App.jsx`\n  ],\n  output: {\n    path: PATHS.www,\n    filename: 'bundle.js'\n  },\n  resolve: {\n    extensions: [\n      '',\n      '.js',\n      '.jsx'\n    ]\n  },\n  plugins: [\n    new webpack.ProvidePlugin({\n      jQuery: 'jquery',\n      $: 'jqeury'\n    })\n  ],\n  devtool: 'inline-source-map',\n  devServer: {\n    contentBase: './www',\n    port: 3000,\n    hot: false,\n    inline: true,\n    colors: true\n  },\n  module: {\n    loaders: [\n      // Babel\n      {\n        test: [\n          /\\.jsx$/,\n          /\\.js$/\n        ],\n        loaders: [\n          'babel'\n        ],\n        exclude: /node_modules/\n      },\n      // Sass\n      {\n        test: [\n          /\\.scss$/\n        ],\n        loaders: [\n          'style',\n          'css',\n          'sass'\n        ]\n      },\n      // CSS & Bootstrap\n      { test: /\\.css$/, loader: 'style-loader!css-loader' },\n      { test: /\\.svg$/, loader: 'url-loader?mimetype=image/svg+xml' },\n      { test: /\\.woff$/, loader: 'url-loader?mimetype=application/font-woff' },\n      { test: /\\.woff2$/, loader: 'url-loader?mimetype=application/font-woff' },\n      { test: /\\.eot$/, loader: 'url-loader?mimetype=application/font-woff' },\n      { test: /\\.ttf$/, loader: 'url-loader?mimetype=application/font-woff' }\n    ]\n  }\n};\n\n\n\n.babelrc\n\n/.babelrc\n\n{\n  \"presets\": [\n    \"react\",\n    \"es2015\"\n  ]\n}\n\n\n\nApp.jsx\n\n/src/App.jsx\n\n\n/*::::::::::::::::::::::::::::::::::\n JS\n:::::::::::::::::::::::::::::::::::*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/*::::::::::::::::::::::::::::::::::\n Components\n:::::::::::::::::::::::::::::::::::*/\nimport CommentApp from './components/Comment/CommentApp';\n\n/*::::::::::::::::::::::::::::::::::\n InitialDOM\n:::::::::::::::::::::::::::::::::::*/\nlet mountNode = document.getElementById('mountNode');\n\n/*::::::::::::::::::::::::::::::::::\n AppComponent Defined\n:::::::::::::::::::::::::::::::::::*/\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <CommentApp url=\"http://XXXXXXXXXX/dummy/comments.json\" pollInterval={2000} />\n      </div>\n    );\n  }\n}\n\n/*::::::::::::::::::::::::::::::::::\n ToDOMRendering\n:::::::::::::::::::::::::::::::::::*/\nReactDOM.render(<App />, mountNode);\n\n\n\n\nCommentApp.jsx\n\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306fCommentBox.jsx\u3060\u3063\u305f\u304cApp\u3067\u7d71\u4e00\u3057\u305f\u304b\u3063\u305f\u70ba\u3001\u540d\u79f0\u5909\u66f4\u3002\n\n\n/src/components/Comment/CommentApp.jsx\n\nimport React from 'react';\nimport CommentList from './CommentList';\nimport CommentForm from './CommentForm';\nimport $ from 'jquery';\n\nexport default class CommentApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        {\n          author: 'Jack',\n          text: 'just setting up my twttr'\n        },\n        {\n          author: 'Evu',\n          text: 'this tweet is nice'\n        }\n      ]\n    };\n    this.loadCommentsFromServer = this.loadCommentsFromServer.bind(this);\n    this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadCommentsFromServer();\n    setInterval(this.loadCommentsFromServer, this.props.pollInterval);\n  }\n\n  loadCommentsFromServer() {\n    // Ajax\u306f\u4e00\u65e6\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3067state\u30d9\u30fc\u30b9\u3067\u5b9f\u88c5\n\n    // $.ajax({\n    //   url: this.props.url,\n    //   dataType: 'json',\n    //   cache: false,\n    //   success: (data) => { this.setState({ data }); },\n    //   error: (xhr, status, err) => {\n    //     console.log(this.props.url, status, err.toString());\n    //   }\n    // });\n\n    this.setState({\n      data: this.state.data\n    });\n  }\n\n  handleCommentSubmit(comment) {\n    this.setState({\n      data: this.state.data.concat(comment)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"commentApp\">\n        <h1>CommentApp</h1>\n        <CommentList data={this.state.data} />\n        <CommentForm onCommentSubmit={this.handleCommentSubmit} />\n      </div>\n    );\n  }\n}\n\nCommentApp.propTypes = {\n  data: React.PropTypes.array,\n  url: React.PropTypes.string,\n  pollInterval: React.PropTypes.number\n};\n\n\n\n\nCommentList.jsx\n\n/src/components/Comment/CommentList.jsx\n\nimport React from 'react';\nimport Comment from './Comment';\n\nexport default class CommentList extends React.Component {\n  render() {\n    let commentNodes = this.props.data.map((comment, i) => {\n      return (\n        <Comment key={i} author={comment.author}>{comment.text}</Comment>\n      );\n    });\n    return (\n      <div className=\"commentList\">\n        {commentNodes}\n      </div>\n    );\n  }\n}\n\nCommentList.propTypes = {\n  data: React.PropTypes.array\n};\n\n\n\n\nCommentForm.jsx\n\n/src/components/Comment/CommentForm.jsx\n\nimport React from 'react';\n\nexport default class CommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    // \u30d6\u30e9\u30a6\u30b6\u6319\u52d5\u505c\u6b62\n    e.preventDefault();\n\n    // ref\u306e\u5024\u3092\u53d6\u5f97\n    let author = this.refs.author.value;\n    let text = this.refs.text.value;\n    if (!text || !author) return;\n\n    // \u30b5\u30fc\u30d0\u306b\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\n    this.props.onCommentSubmit({\n      author,\n      text\n    });\n\n    // \u5024\u3092\u7a7a\u306b\u3059\u308b\n    this.refs.author.value = '';\n    this.refs.text.value = '';\n  }\n\n  render() {\n    return (\n      <form\n        className=\"commentForm\"\n        onSubmit={this.handleSubmit}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"YourName\"\n          className=\"textArea\"\n          ref=\"author\"\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Say Something...\"\n          ref=\"text\"\n          className=\"textArea\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Tweet\"\n        />\n      </form>\n    );\n  }\n}\n\nCommentForm.propTypes = {\n  onCommentSubmit: React.PropTypes.func\n};\n\n\n\n\nComment.jsx\n\n/src/components/Comment/Comment.jsx\n\nimport marked from 'marked';\nimport React from 'react';\n\nexport default class Comment extends React.Component {\n\n  render() {\n    let rawMarkup = marked(this.props.children.toString(), { sanitize: true });\n    return (\n      <div className=\"comment\">\n        <h3 className=\"commentAuthor\">\n          {this.props.author}\n        </h3>\n        <span dangerouslySetInnerHTML={{ __html: rawMarkup }} />\n      </div>\n    );\n  }\n}\n\nComment.propTypes = {\n  author: React.PropTypes.string,\n  children: React.PropTypes.string\n};\n\n\n\n\n\u307e\u3068\u3081\n\u3084\u3063\u3071\u308aES6\u3067\u66f8\u304f\u3068\u6c17\u6301\u3061\u3044\u3044\u3002\nReact\u95a2\u9023\u306e\u52c9\u5f37\u3092\u3082\u3063\u3068\u9032\u3081\u3088\u3046\u3002\ngulp\u304b\u3089Webpack\u306b\u4e57\u308a\u63db\u3048\u305f\u3051\u3069\u3001\u8a2d\u5b9a\u3055\u3048\u899a\u3048\u308c\u3070Webpack\u306e\u65b9\u304c\u4fbf\u5229\u304b\u3082\u3002\n\nGithub\nhttps://github.com/gemcook/kitchen.gemcook.com/tree/react-tutorial\n# \u6982\u8981\n\nReact + ES6 + Webpack\u3067\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u884c\u3063\u305f\u306e\u3067ES6\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30bd\u30fc\u30b9\u3092\u30e1\u30e2\u3002\n\u3010\u672c\u5bb6\u3011   https://facebook.github.io/react/docs/tutorial.html\n\n## ES6\u5909\u63db\u30bd\u30fc\u30b9\u4e00\u89a7\n\n### webpack.config.js\n\n```js:/webpack.config.js\n\nlet path       = require('path');\nlet webpack    = require('webpack');\n\nconst PATHS = {\n  src: path.join(__dirname, 'src'),\n  www: path.join(__dirname, 'www')\n};\n\nmodule.exports = {\n  entry: [\n    `${PATHS.src}/App.jsx`\n  ],\n  output: {\n    path: PATHS.www,\n    filename: 'bundle.js'\n  },\n  resolve: {\n    extensions: [\n      '',\n      '.js',\n      '.jsx'\n    ]\n  },\n  plugins: [\n    new webpack.ProvidePlugin({\n      jQuery: 'jquery',\n      $: 'jqeury'\n    })\n  ],\n  devtool: 'inline-source-map',\n  devServer: {\n    contentBase: './www',\n    port: 3000,\n    hot: false,\n    inline: true,\n    colors: true\n  },\n  module: {\n    loaders: [\n      // Babel\n      {\n        test: [\n          /\\.jsx$/,\n          /\\.js$/\n        ],\n        loaders: [\n          'babel'\n        ],\n        exclude: /node_modules/\n      },\n      // Sass\n      {\n        test: [\n          /\\.scss$/\n        ],\n        loaders: [\n          'style',\n          'css',\n          'sass'\n        ]\n      },\n      // CSS & Bootstrap\n      { test: /\\.css$/, loader: 'style-loader!css-loader' },\n      { test: /\\.svg$/, loader: 'url-loader?mimetype=image/svg+xml' },\n      { test: /\\.woff$/, loader: 'url-loader?mimetype=application/font-woff' },\n      { test: /\\.woff2$/, loader: 'url-loader?mimetype=application/font-woff' },\n      { test: /\\.eot$/, loader: 'url-loader?mimetype=application/font-woff' },\n      { test: /\\.ttf$/, loader: 'url-loader?mimetype=application/font-woff' }\n    ]\n  }\n};\n```\n\n### .babelrc\n\n```json:/.babelrc\n\n{\n  \"presets\": [\n    \"react\",\n    \"es2015\"\n  ]\n}\n```\n\n### App.jsx\n\n```js:/src/App.jsx\n\n\n/*::::::::::::::::::::::::::::::::::\n JS\n:::::::::::::::::::::::::::::::::::*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n/*::::::::::::::::::::::::::::::::::\n Components\n:::::::::::::::::::::::::::::::::::*/\nimport CommentApp from './components/Comment/CommentApp';\n\n/*::::::::::::::::::::::::::::::::::\n InitialDOM\n:::::::::::::::::::::::::::::::::::*/\nlet mountNode = document.getElementById('mountNode');\n\n/*::::::::::::::::::::::::::::::::::\n AppComponent Defined\n:::::::::::::::::::::::::::::::::::*/\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <CommentApp url=\"http://XXXXXXXXXX/dummy/comments.json\" pollInterval={2000} />\n      </div>\n    );\n  }\n}\n\n/*::::::::::::::::::::::::::::::::::\n ToDOMRendering\n:::::::::::::::::::::::::::::::::::*/\nReactDOM.render(<App />, mountNode);\n\n```\n\n### CommentApp.jsx\n> \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306fCommentBox.jsx\u3060\u3063\u305f\u304cApp\u3067\u7d71\u4e00\u3057\u305f\u304b\u3063\u305f\u70ba\u3001\u540d\u79f0\u5909\u66f4\u3002\n\n```js:/src/components/Comment/CommentApp.jsx\n\nimport React from 'react';\nimport CommentList from './CommentList';\nimport CommentForm from './CommentForm';\nimport $ from 'jquery';\n\nexport default class CommentApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        {\n          author: 'Jack',\n          text: 'just setting up my twttr'\n        },\n        {\n          author: 'Evu',\n          text: 'this tweet is nice'\n        }\n      ]\n    };\n    this.loadCommentsFromServer = this.loadCommentsFromServer.bind(this);\n    this.handleCommentSubmit = this.handleCommentSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadCommentsFromServer();\n    setInterval(this.loadCommentsFromServer, this.props.pollInterval);\n  }\n\n  loadCommentsFromServer() {\n    // Ajax\u306f\u4e00\u65e6\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3067state\u30d9\u30fc\u30b9\u3067\u5b9f\u88c5\n\n    // $.ajax({\n    //   url: this.props.url,\n    //   dataType: 'json',\n    //   cache: false,\n    //   success: (data) => { this.setState({ data }); },\n    //   error: (xhr, status, err) => {\n    //     console.log(this.props.url, status, err.toString());\n    //   }\n    // });\n\n    this.setState({\n      data: this.state.data\n    });\n  }\n\n  handleCommentSubmit(comment) {\n    this.setState({\n      data: this.state.data.concat(comment)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"commentApp\">\n        <h1>CommentApp</h1>\n        <CommentList data={this.state.data} />\n        <CommentForm onCommentSubmit={this.handleCommentSubmit} />\n      </div>\n    );\n  }\n}\n\nCommentApp.propTypes = {\n  data: React.PropTypes.array,\n  url: React.PropTypes.string,\n  pollInterval: React.PropTypes.number\n};\n\n```\n\n### CommentList.jsx\n\n```js:/src/components/Comment/CommentList.jsx\n\nimport React from 'react';\nimport Comment from './Comment';\n\nexport default class CommentList extends React.Component {\n  render() {\n    let commentNodes = this.props.data.map((comment, i) => {\n      return (\n        <Comment key={i} author={comment.author}>{comment.text}</Comment>\n      );\n    });\n    return (\n      <div className=\"commentList\">\n        {commentNodes}\n      </div>\n    );\n  }\n}\n\nCommentList.propTypes = {\n  data: React.PropTypes.array\n};\n\n```\n\n### CommentForm.jsx\n\n```js:/src/components/Comment/CommentForm.jsx\n\nimport React from 'react';\n\nexport default class CommentForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    // \u30d6\u30e9\u30a6\u30b6\u6319\u52d5\u505c\u6b62\n    e.preventDefault();\n\n    // ref\u306e\u5024\u3092\u53d6\u5f97\n    let author = this.refs.author.value;\n    let text = this.refs.text.value;\n    if (!text || !author) return;\n\n    // \u30b5\u30fc\u30d0\u306b\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\n    this.props.onCommentSubmit({\n      author,\n      text\n    });\n\n    // \u5024\u3092\u7a7a\u306b\u3059\u308b\n    this.refs.author.value = '';\n    this.refs.text.value = '';\n  }\n\n  render() {\n    return (\n      <form\n        className=\"commentForm\"\n        onSubmit={this.handleSubmit}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"YourName\"\n          className=\"textArea\"\n          ref=\"author\"\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Say Something...\"\n          ref=\"text\"\n          className=\"textArea\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Tweet\"\n        />\n      </form>\n    );\n  }\n}\n\nCommentForm.propTypes = {\n  onCommentSubmit: React.PropTypes.func\n};\n\n```\n\n### Comment.jsx\n\n```js:/src/components/Comment/Comment.jsx\n\nimport marked from 'marked';\nimport React from 'react';\n\nexport default class Comment extends React.Component {\n\n  render() {\n    let rawMarkup = marked(this.props.children.toString(), { sanitize: true });\n    return (\n      <div className=\"comment\">\n        <h3 className=\"commentAuthor\">\n          {this.props.author}\n        </h3>\n        <span dangerouslySetInnerHTML={{ __html: rawMarkup }} />\n      </div>\n    );\n  }\n}\n\nComment.propTypes = {\n  author: React.PropTypes.string,\n  children: React.PropTypes.string\n};\n\n```\n\n# \u307e\u3068\u3081\n\u3084\u3063\u3071\u308aES6\u3067\u66f8\u304f\u3068\u6c17\u6301\u3061\u3044\u3044\u3002\nReact\u95a2\u9023\u306e\u52c9\u5f37\u3092\u3082\u3063\u3068\u9032\u3081\u3088\u3046\u3002\ngulp\u304b\u3089Webpack\u306b\u4e57\u308a\u63db\u3048\u305f\u3051\u3069\u3001\u8a2d\u5b9a\u3055\u3048\u899a\u3048\u308c\u3070Webpack\u306e\u65b9\u304c\u4fbf\u5229\u304b\u3082\u3002\n\n# Github\nhttps://github.com/gemcook/kitchen.gemcook.com/tree/react-tutorial\n", "tags": ["reactjs", "es6", "webpack", "babel", "flux"]}