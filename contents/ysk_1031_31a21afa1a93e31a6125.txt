{"context": "AWS Lambda & Serverless Framework\u306e\u7c21\u5358\u306a\u304a\u8a66\u3057\u3002\nCloudWatch\u306e\u30a2\u30e9\u30fc\u30e0\u306e\u901a\u77e5\u5148\u3092SNS\u30c8\u30d4\u30c3\u30af\u306b\u8a2d\u5b9a\u3057\u3001\u305d\u308c\u3092Lambda\u306e\u30c8\u30ea\u30ac\u30fc\u306b\u3057\u3066Chatwork\u306b\u901a\u77e5\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u3092\u3084\u3063\u3066\u307f\u308b\u3002\nServerless - The Serverless Application Framework powered by AWS Lambda and API Gateway\n\n\u74b0\u5883\n\nserverless 1.3.0\n\n\n\u6e96\u5099\n\u4f5c\u696d\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u3068\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306a\u3069\u3002\n$ mkdir hello-serverless\n$ cd hello-serverless\n$ npm init\n$ npm install -D serverless\n\npackage.json\u306b\u3001Serverless\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff08\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff09\u4f5c\u6210\u7528\u306enpm run\u30bf\u30b9\u30af\u3092\u8ffd\u52a0\u3002\n\npackage.json\n{\n  \"scripts\": {\n    \"create-template\": \"sls create --template\"\n  },\n  ...\n}\n\n\nLambda\u3067\u52d5\u304b\u3059\u8a00\u8a9e\u3068\u3057\u3066\u3001\u4eca\u56de\u306fNode (v4.3) \u3092\u9078\u629e\u3002\n$ npm run create-template -- aws-nodejs\n\n> hello-serverless@1.0.0 create-template /Users/Aono/works/hello-serverless\n> sls create --template aws-nodejs\n\nServerless: Generating boilerplate...\n _______                             __\n|   _   .-----.----.--.--.-----.----|  .-----.-----.-----.\n|   |___|  -__|   _|  |  |  -__|   _|  |  -__|__ --|__ --|\n|____   |_____|__|  \\___/|_____|__| |__|_____|_____|_____|\n|   |   |             The Serverless Application Framework\n|       |                           serverless.com, v1.3.0\n -------'\n\nServerless: Successfully generated boilerplate for template: \"aws-nodejs\"\nServerless: NOTE: Please update the \"service\" property in serverless.yml with your service name\n\n\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3068\u3001handler.js, serverless.yml\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u3002\u524d\u8005\u304c\u5b9f\u969b\u306bLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066\u52d5\u304f\u30ed\u30b8\u30c3\u30af\u3092\u66f8\u304f\u30d5\u30a1\u30a4\u30eb\u3001\u5f8c\u8005\u304cServerless Framework\u306e\u52d5\u4f5c\u306b\u95a2\u308f\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3068\u306a\u308b\u3002\n\u2193\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f5c\u6210\u3055\u308c\u308bhandler.js\u3002\n\nhandler.js\n'use strict';\n\nmodule.exports.hello = (event, context, callback) => {\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: 'Go Serverless v1.0! Your function executed successfully!',\n      input: event,\n    }),\n  };\n\n  callback(null, response);\n\n  // Use this code if you don't use the http event with the LAMBDA-PROXY integration\n  // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });\n};\n\n\n\nLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u30c7\u30d7\u30ed\u30a4\n\u3068\u308a\u3042\u3048\u305a\u4e0a\u8a18\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u95a2\u6570\u3092AWS\u5074\u306b\u30c7\u30d7\u30ed\u30a4(sls deploy)\u3057\u3066\u307f\u308b\u3002\nserverless.yml\u306eservice\u30d6\u30ed\u30c3\u30af\u306e\u5024\u3092\u9069\u5f53\u306a\u3082\u306e\u306b\u5909\u66f4\u3002\u307e\u305f\u3001AWS\u306e\u6771\u4eac\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u3046\u306e\u3067\u3001provider\u30d6\u30ed\u30c3\u30af\u306eregion\u3092\u8ffd\u52a0\u3002\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068 us-east-1\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3089\u3057\u3044\uff09\n\nserverless.yml\nservice: hogehoge-functions # NOTE: update this with your service name\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  region: ap-northeast-1\n\nfunctions:\n  hello:\n    handler: handler.hello\n\n\nhandler.js\u306b\u3066export\u3057\u305fhello\u95a2\u6570\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u304c\u306a\u3093\u3068\u306a\u304f\u898b\u3066\u5206\u304b\u308b\u3002\n\u7d9a\u3044\u3066\u3001package.json\u306b\u30c7\u30d7\u30ed\u30a4\u7528\u306e\u30bf\u30b9\u30af\u3082\u8ffd\u52a0\u3002\u3053\u3053\u304b\u3089\u3001Serverless\u306e\u64cd\u4f5c\u306b\u306fAWS\u306eAPI\u30ad\u30fc\u304c\u5fc5\u8981\u3068\u306a\u308b\u3002Administrator Access\u6a29\u9650\u3092\u4e0e\u3048\u305fIAM\u30e6\u30fc\u30b6\u3092\u4f5c\u6210\u3057\u3001API\u30ad\u30fc\u3068\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3092\u5165\u624b\u3002config\u30ad\u30fc\u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u3002\n\u203b\u4eca\u56de\u306f\u30c6\u30b9\u30c8\u306a\u306e\u3067\u7121\u8996\u3057\u305f\u304c\u3001\u30d5\u30eb\u30a2\u30af\u30bb\u30b9\u306eIAM\u30e6\u30fc\u30b6\u3092\u4f7f\u3046\u306e\u306f\u30ad\u30b1\u30f3\u306a\u306e\u3067\u3001\u6a29\u9650\u306e\u7cbe\u67fb\u304c\u5fc5\u8981\u306b\u306a\u308a\u305d\u3046\u3002\n\u53c2\u8003: Serverless Framework\u5229\u7528\u6642\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u6bce\u306eIAM\u6a29\u9650\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u305f - Qiita\n\npackage.json\n{\n  \"config\": {\n    \"aws_access_key_id\": \"XXXXX\",\n    \"aws_secret_access_key\": \"XXXXXXXXXXXXXXX\"\n  },\n  \"scripts\": {\n    \"deploy-lambda\": \"cross-env AWS_ACCESS_KEY_ID=$npm_package_config_aws_access_key_id AWS_SECRET_ACCESS_KEY=$npm_package_config_aws_secret_access_key sls deploy\",\n  },\n  \"devDependencies\": {\n    \"cross-env\": \"^3.1.3\",\n    \"serverless\": \"^1.3.0\"\n  }\n}\n\n\n\u30bf\u30b9\u30af\u306e\u4e2d\u3067\u74b0\u5883\u5909\u6570\u3092\u6307\u5b9a\u3059\u308b\u306e\u3067\u3001cross-env\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3002\n\u3088\u3046\u3084\u304f\u30c7\u30d7\u30ed\u30a4\u306e\u5b9f\u884c\u3002\n$ npm run deploy-lambda -- -f hello \n\n> hello-serverless@1.0.0 deploy-lambda /Users/Aono/works/hello-serverless\n> cross-env AWS_ACCESS_KEY_ID=$npm_package_config_aws_access_key_id AWS_SECRET_ACCESS_KEY=$npm_package_config_aws_secret_access_key sls deploy \"-f\" \"dispatcher\"\n\nServerless: Creating Stack...\nServerless: Checking Stack create progress...\n.....\nServerless: Stack create finished...\nServerless: Packaging service...\nServerless: Uploading CloudFormation file to S3...\nServerless: Uploading service .zip file to S3 (13.07 MB)...\nServerless: Updating Stack...\nServerless: Checking Stack update progress...\n...............\nServerless: Stack update finished...\n\nService Information\nservice: hogehoge-functions\nstage: dev\nregion: ap-northeast-1\napi keys:\n  None\nendpoints:\n  None\nfunctions:\n  hogehoge-functions-dev-hello: arn:aws:lambda:ap-northeast-1:xxxxxx:function:hogehoge-functions-dev-hello\n\n\u3053\u308c\u3067\u5b8c\u4e86\u3002AWS\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u898b\u308b\u3068\u3001\"hogehoge-functions-dev-helloLambda\"\u3068\u3044\u3046\u540d\u524d\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u3002(\u203b\u4eca\u56de\u306f\u89e6\u308c\u306a\u3044\u304c\u3001Serverless\u3067\u306f\u672c\u756a\u74b0\u5883\u7528\u3068\u30c6\u30b9\u30c8\u74b0\u5883\u7528\u3092\u5206\u3051\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u30c6\u30b9\u30c8\u7528\u306edev\u304c\u30c7\u30d5\u30a9\u30eb\u30c8)\n\u307e\u305f\u3001\u30ed\u30b0\u3092\u898b\u308b\u3068\u3001Serverless\u304cCloudFormation\u3084S3\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\u3053\u3061\u3089\u3082AWS\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u78ba\u8a8d\u304c\u53ef\u80fd\u3002\n(\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e./serverless\u4ee5\u4e0b\u306b\u8a2d\u5b9a\u306b\u5229\u7528\u3057\u305fjson\u304c\u3067\u304d\u3066\u305f\u308a\u3082\u3059\u308b)\n\n\u30c6\u30b9\u30c8\u5b9f\u884c\nServerless\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u304b\u3089Lambda\u3092\u30c6\u30b9\u30c8\u5b9f\u884c(sls invoke)\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002package.json\u306b\u3055\u3089\u306b\u30bf\u30b9\u30af\u3092\u8ffd\u52a0\u3002\n\npackage.json\n{\n  \"scripts\": {\n    \"invoke-lambda\": \"cross-env AWS_ACCESS_KEY_ID=$npm_package_config_aws_access_key_id AWS_SECRET_ACCESS_KEY=$npm_package_config_aws_secret_access_key sls invoke\"\n  }\n}\n\n\n\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001hello\u95a2\u6570\u304c\u52d5\u3044\u3066\u308b\u306e\u304c\u5206\u304b\u308b\u3002\n$ npm run invoke-lambda -- -f hello\n\n> hello-serverless@1.0.0 invoke-lambda /Users/Aono/works/hello-serverless\n> cross-env AWS_ACCESS_KEY_ID=$npm_package_config_aws_access_key_id AWS_SECRET_ACCESS_KEY=$npm_package_config_aws_secret_access_key sls invoke \"-f\" \"hello\"\n\n{\n    \"statusCode\": 200,\n    \"body\": \"{\\\"message\\\":\\\"Go Serverless v1.0! Your function executed successfully!\\\",\\\"input\\\":{}}\"\n}\n\n\n\u30ed\u30b0\u306e\u78ba\u8a8d\n\u95a2\u6570\u5b9f\u884c\u6642\u306e\u30ed\u30b0\u3082\u30ed\u30fc\u30ab\u30eb\u304b\u3089\u78ba\u8a8d\u3067\u304d\u308b(sls logs)\u3002\n\npackage.json\n{\n  \"scripts\": {\n    \"logs-lambda\": \"cross-env AWS_ACCESS_KEY_ID=$npm_package_config_aws_access_key_id AWS_SECRET_ACCESS_KEY=$npm_package_config_aws_secret_access_key sls logs\"\n  }\n}\n\n\n$ npm run logs-lambda -- -f hello\n\n> hello-serverless@1.0.0 logs-lambda /Users/Aono/works/hello-serverless\n> cross-env AWS_ACCESS_KEY_ID=$npm_package_config_aws_access_key_id AWS_SECRET_ACCESS_KEY=$npm_package_config_aws_secret_access_key sls logs \"-f\" \"hello\"\n\nSTART RequestId: xxxxxxxxxxxxxxxxx Version: $LATEST\nEND RequestId: xxxxxxxxxxxxxxxxx\nREPORT RequestId: xxxxxxxxxxxxxxxxx Duration: 2.22 ms   Billed Duration: 100 ms     Memory Size: 1024 MB    Max Memory Used: 7 MB\n\n\u30b3\u30fc\u30c9\u5185\u306econsole.log\u306a\u3069\u3067\u51fa\u529b\u3057\u305f\u5185\u5bb9\u3092\u898b\u308c\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u30c7\u30d0\u30c3\u30b0\u6642\u306b\u306f\u6b20\u304b\u305b\u306a\u3044\u304b\u306a\u3002\n\nSNS\u3068\u9023\u643a\n\u672c\u984c\u3002\nServerless Framework\u3067\u306f\u3001SNS\u30c8\u30d4\u30c3\u30af\u306e\u8cfc\u8aad\u3082\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\nhttps://serverless.com/framework/docs/providers/aws/events/sns/\nserverless.yml\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u3001SNS\u30c8\u30d4\u30c3\u30af\u3092Lambda\u306e\u30c8\u30ea\u30ac\u30fc\u306b\u3057\u305f\u72b6\u614b\u3067\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3002\u3053\u306e\u30c7\u30d7\u30ed\u30a4\u306b\u3088\u3063\u3066\u3001\"lambda-test\"\u3068\u3044\u3046\u540d\u524d\u306eSNS\u30c8\u30d4\u30c3\u30af\u3082\u540c\u6642\u306b\u65b0\u898f\u4f5c\u6210\u3002\n\nserverless.yml\nfunctions:\n  dispatcher:\n    handler: dispatcher.dispatch\n    events:\n      - sns: lambda-test\n\n\n\u3055\u3063\u304d\u306ehandler.js\u3092\u30b3\u30d4\u3063\u3066\u3001\u9069\u5f53\u306bdispatcher.js\u3068export\u3059\u308b\u95a2\u6570dispatch\u3092\u4f5c\u6210\u3002\n\ndispatcher.js\n'use strict';\n\nmodule.exports.dispatch = (event, context, callback) => {\n  // \u4e2d\u8eab\u306fhandler.js\u3068\u3044\u3063\u3057\u3087\n};\n\n\nSNS\u30c8\u30d4\u30c3\u30af\u304c\u4f5c\u6210\u3055\u308c\u3001\u65b0\u3057\u304f\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305fLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u30c8\u30ea\u30ac\u30fc\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u898b\u308b\u3068\u5206\u304b\u308b\u3002\n\n\u3053\u306eSNS\u30c8\u30d4\u30c3\u30af\u3092CloudWatch\u306e\u30a2\u30e9\u30fc\u30e0\u3068\u9023\u643a\u3055\u305b\u308b\u3002\u8a66\u3057\u306b\u3001\u3068\u3042\u308b\u30c6\u30b9\u30c8\u74b0\u5883\u306eELB\u306eHealthyHostCount\u306b\u95a2\u3059\u308b\u30a2\u30e9\u30fc\u30e0\u306e\u901a\u77e5\u5148\u306b\u8a2d\u5b9a\u3002\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u4e0b\u306b\u306f1\u3064\u306eEC2\u304c\u914d\u7f6e\u3057\u3066\u3042\u308b\u3002\u6b63\u5e38\u306a\u30db\u30b9\u30c8\u6570\u306e\u5408\u8a08\u304c1\u3092\u4e0b\u56de\u3063\u305f\u3089\u8b66\u544a\u3092\u901a\u77e5\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\u308f\u3056\u3068EC2\u3067\u52d5\u3044\u3066\u3044\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3092\u30b9\u30c8\u30c3\u30d7\u3059\u308b\u3068\u3001CloudWatch\u304b\u3089\u901a\u77e5\u3092\u53d7\u3051\u305fSNS\u3092\u901a\u3057\u3066\u3001Lambda\u304c\u8d77\u52d5\u3059\u308b\u3002(Lambda\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306eMonitoring\u306a\u3069\u304b\u3089\u78ba\u8a8d\u3067\u304d\u308b\uff09\n\n\u30c1\u30e3\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u901a\u77e5\n\u8d77\u52d5\u30c8\u30ea\u30ac\u30fc\u3068\u306a\u3063\u3066\u3044\u308bSNS\u306e\u901a\u77e5\u5185\u5bb9\uff08\u30a4\u30d9\u30f3\u30c8\uff09\u3092\u3001Lambda\u3092\u4f7f\u3063\u3066\u30c1\u30e3\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u901a\u77e5\u3059\u308b\u3002\u3082\u3046\u30a4\u30d9\u30f3\u30c8\u306esubscription\u81ea\u4f53\u306f\u3067\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u3042\u3068\u306f\u305d\u308c\u3092\u5143\u306b\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u8eab\u3092\u66f8\u304f\u3002\u5148\u307b\u3069\u306edispatcher.js\u3092\u5909\u66f4\u3002  \n\uff08Lambda\u306f\u30a4\u30d9\u30f3\u30c8\u99c6\u52d5\u3067\u3042\u308b\u304c\u3086\u3048\u306b\u3001\u30ed\u30b8\u30c3\u30af\u3092\u66f8\u304d\u306a\u304c\u3089\u30c7\u30d0\u30c3\u30b0\u3057\u3066\u3044\u304f\u306e\u304c\u9762\u5012\u3002\u4f55\u304b\u826f\u3044\u65b9\u6cd5\u3042\u308b\u306e\u3060\u308d\u3046\u304b\u3002\u3002\uff09\n\ndispatcher.js\n'use strict';\n\nconst https = require('https');\nconst querystring = require('querystring');\n\nmodule.exports.dispatch = (event, context) => {\n  const record = event.Records[0];\n\n  if (record.Sns) {\n    const message = JSON.parse(record.Sns.Message);\n    const alarmStatus = message.NewStateValue;\n    const postMessge = alarmStatus +\n      \": \" +\n      message.Trigger.Namespace +\n      \" \" +\n      message.Trigger.MetricName +\n      \"\\n\" +\n      message.NewStateReason;\n\n    const postData = querystring.stringify({\n      body: postMessge\n    });\n    const requestOptions = {\n      host: 'api.chatwork.com',\n      port: 443,\n      method: 'POST',\n      path: '/v1/rooms/xxxxxxxx/messages',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Content-Length': postData.length,\n        'X-ChatWorkToken': 'xxxxxxxxxxxxxxxx'\n      }\n    };\n\n    const req = https.request(requestOptions, res => {\n      if (res.statusCode === 200) {\n        context.succeed(res);\n      } else {\n        context.fail(res.statusCode);\n      }\n    });\n\n    req.on('error', e => {\n      console.log(\"RequestError: \" + e.message);\n      context.fail(e.message);\n    });\n\n    req.write(postData);\n    req.end();\n  }\n};\n\n\nSNS\u304b\u3089\u53d7\u3051\u305f\u30a4\u30d9\u30f3\u30c8\u3092\u30d1\u30fc\u30b9\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u5206\u3092\u4f5c\u6210\u3057\u3001\u30c1\u30e3\u30c3\u30c8\u30ef\u30fc\u30af\u306eAPI\u306bPOST\u3002\u3061\u306a\u307f\u306b\u3001event.Records\u306e\u4e2d\u8eab\u306f\u3053\u3093\u306a\u3093\u304c\u6765\u308b\u3002\uff08\u5185\u5bb9\u306f\u7701\u7565\u3057\u3066\u307e\u3059\uff09\n{ EventSource: 'aws:sns',\n  EventVersion: '1.0',\n  EventSubscriptionArn: 'arn:aws:sns:ap-northeast-1:xxxxxxxxxx,\n  Sns:\n   { Type: 'Notification',\n     MessageId: 'xxxxx',\n     TopicArn: 'arn:aws:sns:ap-northeast-1:xxxxx',\n     Subject: 'OK: \"lambda-test\" in Asia Pacific - Tokyo',\n     Message: <\u901a\u77e5\u5185\u5bb9\u30c7\u30fc\u30bf>,\n     Timestamp: '2016-12-18T05:41:20.824Z',\n     ... }\n}\n\n\u3053\u308c\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u76f4\u305b\u3070\u8a2d\u5b9a\u304a\u308f\u308a\u3002CloudWatch\u306e\u30a2\u30e9\u30fc\u30e0\u304c\u6765\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30c1\u30e3\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u3067\u901a\u77e5\u304c\u6765\u308b\u3002\n\n\n\u304a\u308f\u308a\n\u7c21\u5358\u3067\u306f\u3042\u308b\u304c\u3001\u3044\u3063\u305f\u3093\u304a\u8a66\u3057\u7d42\u308f\u308a\u3002\nServerless Framework\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u7c21\u5358\u306a\u30c7\u30d7\u30ed\u30a4 & AWS\u5404\u7a2e\u30b5\u30fc\u30d3\u30b9(\u4eca\u56de\u306eSNS\u3060\u3051\u3067\u306a\u304f\u3001API Gateway\u3084S3 etc.)\u3068\u306e\u9023\u643a\u304c\u7c21\u5358\u306b\u5b9f\u884c\u3067\u304d\u308b\u306e\u304c\u5206\u304b\u3063\u305f\u3002\u30a4\u30d9\u30f3\u30c8\u9023\u643a\u306a\u3069\u3092\u7d71\u5408\u3057\u3066\u3084\u3063\u3066\u304f\u308c\u308b\u306e\u306f\u3042\u308a\u304c\u305f\u3044\u3002\n\u307e\u305f\u3001Serverless\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u7fa4\u3092Git\u3067\u7ba1\u7406\u3059\u308c\u3070\u3001Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306a\u3069\u306e\u5909\u66f4\u5c65\u6b74\u3092\u7ba1\u7406\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\u3053\u308c\u3082\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u6069\u6075\u3067\u3059\u306d\u3002\nLambda\u5468\u308a\u306f\u3001AWS\u304cre:Invent\u3067\u3082\u3081\u3061\u3083\u304f\u3061\u3083\u529b\u5165\u308c\u3066\u308b\u611f\u3092\u51fa\u3057\u3066\u305f\u306e\u3067\u3001\u3061\u3083\u3093\u3068\u5b66\u3093\u3067\u30ae\u30e7\u30fc\u30e0\u3067\u4f5c\u3063\u3066\u308b\u30b7\u30b9\u30c6\u30e0\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u3082\u53d6\u308a\u5165\u308c\u3066\u3044\u304d\u305f\u3044\u3068\u3053\u308d\u3002\nAWS Lambda & Serverless Framework\u306e\u7c21\u5358\u306a\u304a\u8a66\u3057\u3002\n\nCloudWatch\u306e\u30a2\u30e9\u30fc\u30e0\u306e\u901a\u77e5\u5148\u3092SNS\u30c8\u30d4\u30c3\u30af\u306b\u8a2d\u5b9a\u3057\u3001\u305d\u308c\u3092Lambda\u306e\u30c8\u30ea\u30ac\u30fc\u306b\u3057\u3066Chatwork\u306b\u901a\u77e5\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u3092\u3084\u3063\u3066\u307f\u308b\u3002\n\n[Serverless - The Serverless Application Framework powered by AWS Lambda and API Gateway](https://serverless.com/)\n\n## \u74b0\u5883\n- serverless 1.3.0\n\n## \u6e96\u5099\n\u4f5c\u696d\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\u3068\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306a\u3069\u3002\n\n```console\n$ mkdir hello-serverless\n$ cd hello-serverless\n$ npm init\n$ npm install -D serverless\n```\n\n`package.json`\u306b\u3001Serverless\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff08\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff09\u4f5c\u6210\u7528\u306e`npm run`\u30bf\u30b9\u30af\u3092\u8ffd\u52a0\u3002\n\n```json:package.json\n{\n  \"scripts\": {\n    \"create-template\": \"sls create --template\"\n  },\n  ...\n}\n```\n\nLambda\u3067\u52d5\u304b\u3059\u8a00\u8a9e\u3068\u3057\u3066\u3001\u4eca\u56de\u306fNode (v4.3) \u3092\u9078\u629e\u3002\n\n```console\n$ npm run create-template -- aws-nodejs\n\n> hello-serverless@1.0.0 create-template /Users/Aono/works/hello-serverless\n> sls create --template aws-nodejs\n\nServerless: Generating boilerplate...\n _______                             __\n|   _   .-----.----.--.--.-----.----|  .-----.-----.-----.\n|   |___|  -__|   _|  |  |  -__|   _|  |  -__|__ --|__ --|\n|____   |_____|__|  \\___/|_____|__| |__|_____|_____|_____|\n|   |   |             The Serverless Application Framework\n|       |                           serverless.com, v1.3.0\n -------'\n\nServerless: Successfully generated boilerplate for template: \"aws-nodejs\"\nServerless: NOTE: Please update the \"service\" property in serverless.yml with your service name\n```\n\n\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3068\u3001`handler.js`, `serverless.yml`\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u3002\u524d\u8005\u304c\u5b9f\u969b\u306bLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066\u52d5\u304f\u30ed\u30b8\u30c3\u30af\u3092\u66f8\u304f\u30d5\u30a1\u30a4\u30eb\u3001\u5f8c\u8005\u304cServerless Framework\u306e\u52d5\u4f5c\u306b\u95a2\u308f\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3068\u306a\u308b\u3002\n\n\u2193\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f5c\u6210\u3055\u308c\u308b`handler.js`\u3002\n\n```js:handler.js\n'use strict';\n\nmodule.exports.hello = (event, context, callback) => {\n  const response = {\n    statusCode: 200,\n    body: JSON.stringify({\n      message: 'Go Serverless v1.0! Your function executed successfully!',\n      input: event,\n    }),\n  };\n\n  callback(null, response);\n\n  // Use this code if you don't use the http event with the LAMBDA-PROXY integration\n  // callback(null, { message: 'Go Serverless v1.0! Your function executed successfully!', event });\n};\n```\n\n### Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u30c7\u30d7\u30ed\u30a4\n\u3068\u308a\u3042\u3048\u305a\u4e0a\u8a18\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u95a2\u6570\u3092AWS\u5074\u306b\u30c7\u30d7\u30ed\u30a4(`sls deploy`)\u3057\u3066\u307f\u308b\u3002\n\n`serverless.yml`\u306e`service`\u30d6\u30ed\u30c3\u30af\u306e\u5024\u3092\u9069\u5f53\u306a\u3082\u306e\u306b\u5909\u66f4\u3002\u307e\u305f\u3001AWS\u306e\u6771\u4eac\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u3046\u306e\u3067\u3001`provider`\u30d6\u30ed\u30c3\u30af\u306e`region`\u3092\u8ffd\u52a0\u3002\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068 us-east-1\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3089\u3057\u3044\uff09\n\n```yaml:serverless.yml\nservice: hogehoge-functions # NOTE: update this with your service name\n\nprovider:\n  name: aws\n  runtime: nodejs4.3\n  region: ap-northeast-1\n\nfunctions:\n  hello:\n    handler: handler.hello\n```\n\n`handler.js`\u306b\u3066export\u3057\u305f`hello`\u95a2\u6570\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u304c\u306a\u3093\u3068\u306a\u304f\u898b\u3066\u5206\u304b\u308b\u3002\n\n\u7d9a\u3044\u3066\u3001`package.json`\u306b\u30c7\u30d7\u30ed\u30a4\u7528\u306e\u30bf\u30b9\u30af\u3082\u8ffd\u52a0\u3002\u3053\u3053\u304b\u3089\u3001Serverless\u306e\u64cd\u4f5c\u306b\u306fAWS\u306eAPI\u30ad\u30fc\u304c\u5fc5\u8981\u3068\u306a\u308b\u3002Administrator Access\u6a29\u9650\u3092\u4e0e\u3048\u305fIAM\u30e6\u30fc\u30b6\u3092\u4f5c\u6210\u3057\u3001API\u30ad\u30fc\u3068\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3092\u5165\u624b\u3002`config`\u30ad\u30fc\u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u3002\n\n\u203b\u4eca\u56de\u306f\u30c6\u30b9\u30c8\u306a\u306e\u3067\u7121\u8996\u3057\u305f\u304c\u3001\u30d5\u30eb\u30a2\u30af\u30bb\u30b9\u306eIAM\u30e6\u30fc\u30b6\u3092\u4f7f\u3046\u306e\u306f\u30ad\u30b1\u30f3\u306a\u306e\u3067\u3001\u6a29\u9650\u306e\u7cbe\u67fb\u304c\u5fc5\u8981\u306b\u306a\u308a\u305d\u3046\u3002\n\n\u53c2\u8003: [Serverless Framework\u5229\u7528\u6642\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u6bce\u306eIAM\u6a29\u9650\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u305f - Qiita](http://qiita.com/quartette/items/be95c13908dabcd06644)\n\n```json:package.json\n{\n  \"config\": {\n    \"aws_access_key_id\": \"XXXXX\",\n    \"aws_secret_access_key\": \"XXXXXXXXXXXXXXX\"\n  },\n  \"scripts\": {\n    \"deploy-lambda\": \"cross-env AWS_ACCESS_KEY_ID=$npm_package_config_aws_access_key_id AWS_SECRET_ACCESS_KEY=$npm_package_config_aws_secret_access_key sls deploy\",\n  },\n  \"devDependencies\": {\n    \"cross-env\": \"^3.1.3\",\n    \"serverless\": \"^1.3.0\"\n  }\n}\n```\n\n\u30bf\u30b9\u30af\u306e\u4e2d\u3067\u74b0\u5883\u5909\u6570\u3092\u6307\u5b9a\u3059\u308b\u306e\u3067\u3001[cross-env](https://www.npmjs.com/package/cross-env)\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3002\n\n\u3088\u3046\u3084\u304f\u30c7\u30d7\u30ed\u30a4\u306e\u5b9f\u884c\u3002\n\n```console\n$ npm run deploy-lambda -- -f hello \n\n> hello-serverless@1.0.0 deploy-lambda /Users/Aono/works/hello-serverless\n> cross-env AWS_ACCESS_KEY_ID=$npm_package_config_aws_access_key_id AWS_SECRET_ACCESS_KEY=$npm_package_config_aws_secret_access_key sls deploy \"-f\" \"dispatcher\"\n\nServerless: Creating Stack...\nServerless: Checking Stack create progress...\n.....\nServerless: Stack create finished...\nServerless: Packaging service...\nServerless: Uploading CloudFormation file to S3...\nServerless: Uploading service .zip file to S3 (13.07 MB)...\nServerless: Updating Stack...\nServerless: Checking Stack update progress...\n...............\nServerless: Stack update finished...\n\nService Information\nservice: hogehoge-functions\nstage: dev\nregion: ap-northeast-1\napi keys:\n  None\nendpoints:\n  None\nfunctions:\n  hogehoge-functions-dev-hello: arn:aws:lambda:ap-northeast-1:xxxxxx:function:hogehoge-functions-dev-hello\n```\n\n\u3053\u308c\u3067\u5b8c\u4e86\u3002AWS\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u898b\u308b\u3068\u3001\"hogehoge-functions-dev-helloLambda\"\u3068\u3044\u3046\u540d\u524d\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u3002(\u203b\u4eca\u56de\u306f\u89e6\u308c\u306a\u3044\u304c\u3001Serverless\u3067\u306f\u672c\u756a\u74b0\u5883\u7528\u3068\u30c6\u30b9\u30c8\u74b0\u5883\u7528\u3092\u5206\u3051\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u30c6\u30b9\u30c8\u7528\u306edev\u304c\u30c7\u30d5\u30a9\u30eb\u30c8)\n\n\u307e\u305f\u3001\u30ed\u30b0\u3092\u898b\u308b\u3068\u3001Serverless\u304cCloudFormation\u3084S3\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\u3053\u3061\u3089\u3082AWS\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u78ba\u8a8d\u304c\u53ef\u80fd\u3002\n(\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e`./serverless`\u4ee5\u4e0b\u306b\u8a2d\u5b9a\u306b\u5229\u7528\u3057\u305fjson\u304c\u3067\u304d\u3066\u305f\u308a\u3082\u3059\u308b)\n\n### \u30c6\u30b9\u30c8\u5b9f\u884c\nServerless\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u304b\u3089Lambda\u3092\u30c6\u30b9\u30c8\u5b9f\u884c(`sls invoke`)\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002`package.json`\u306b\u3055\u3089\u306b\u30bf\u30b9\u30af\u3092\u8ffd\u52a0\u3002\n\n```json:package.json\n{\n  \"scripts\": {\n    \"invoke-lambda\": \"cross-env AWS_ACCESS_KEY_ID=$npm_package_config_aws_access_key_id AWS_SECRET_ACCESS_KEY=$npm_package_config_aws_secret_access_key sls invoke\"\n  }\n}\n```\n\n\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001`hello`\u95a2\u6570\u304c\u52d5\u3044\u3066\u308b\u306e\u304c\u5206\u304b\u308b\u3002\n\n```console\n$ npm run invoke-lambda -- -f hello\n\n> hello-serverless@1.0.0 invoke-lambda /Users/Aono/works/hello-serverless\n> cross-env AWS_ACCESS_KEY_ID=$npm_package_config_aws_access_key_id AWS_SECRET_ACCESS_KEY=$npm_package_config_aws_secret_access_key sls invoke \"-f\" \"hello\"\n\n{\n    \"statusCode\": 200,\n    \"body\": \"{\\\"message\\\":\\\"Go Serverless v1.0! Your function executed successfully!\\\",\\\"input\\\":{}}\"\n}\n```\n\n### \u30ed\u30b0\u306e\u78ba\u8a8d\n\u95a2\u6570\u5b9f\u884c\u6642\u306e\u30ed\u30b0\u3082\u30ed\u30fc\u30ab\u30eb\u304b\u3089\u78ba\u8a8d\u3067\u304d\u308b(`sls logs`)\u3002\n\n```json:package.json\n{\n  \"scripts\": {\n    \"logs-lambda\": \"cross-env AWS_ACCESS_KEY_ID=$npm_package_config_aws_access_key_id AWS_SECRET_ACCESS_KEY=$npm_package_config_aws_secret_access_key sls logs\"\n  }\n}\n```\n\n```console\n$ npm run logs-lambda -- -f hello\n\n> hello-serverless@1.0.0 logs-lambda /Users/Aono/works/hello-serverless\n> cross-env AWS_ACCESS_KEY_ID=$npm_package_config_aws_access_key_id AWS_SECRET_ACCESS_KEY=$npm_package_config_aws_secret_access_key sls logs \"-f\" \"hello\"\n\nSTART RequestId: xxxxxxxxxxxxxxxxx Version: $LATEST\nEND RequestId: xxxxxxxxxxxxxxxxx\nREPORT RequestId: xxxxxxxxxxxxxxxxx\tDuration: 2.22 ms\tBilled Duration: 100 ms \tMemory Size: 1024 MB\tMax Memory Used: 7 MB\n```\n\n\u30b3\u30fc\u30c9\u5185\u306e`console.log`\u306a\u3069\u3067\u51fa\u529b\u3057\u305f\u5185\u5bb9\u3092\u898b\u308c\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u30c7\u30d0\u30c3\u30b0\u6642\u306b\u306f\u6b20\u304b\u305b\u306a\u3044\u304b\u306a\u3002\n\n## SNS\u3068\u9023\u643a\n\u672c\u984c\u3002\n\nServerless Framework\u3067\u306f\u3001SNS\u30c8\u30d4\u30c3\u30af\u306e\u8cfc\u8aad\u3082\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\nhttps://serverless.com/framework/docs/providers/aws/events/sns/\n\n`serverless.yml`\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u3001SNS\u30c8\u30d4\u30c3\u30af\u3092Lambda\u306e\u30c8\u30ea\u30ac\u30fc\u306b\u3057\u305f\u72b6\u614b\u3067\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u3002\u3053\u306e\u30c7\u30d7\u30ed\u30a4\u306b\u3088\u3063\u3066\u3001\"lambda-test\"\u3068\u3044\u3046\u540d\u524d\u306eSNS\u30c8\u30d4\u30c3\u30af\u3082\u540c\u6642\u306b\u65b0\u898f\u4f5c\u6210\u3002\n\n```yaml:serverless.yml\nfunctions:\n  dispatcher:\n    handler: dispatcher.dispatch\n    events:\n      - sns: lambda-test\n```\n\n\u3055\u3063\u304d\u306e`handler.js`\u3092\u30b3\u30d4\u3063\u3066\u3001\u9069\u5f53\u306b`dispatcher.js`\u3068export\u3059\u308b\u95a2\u6570`dispatch`\u3092\u4f5c\u6210\u3002\n\n```js:dispatcher.js\n'use strict';\n\nmodule.exports.dispatch = (event, context, callback) => {\n  // \u4e2d\u8eab\u306fhandler.js\u3068\u3044\u3063\u3057\u3087\n};\n```\n\nSNS\u30c8\u30d4\u30c3\u30af\u304c\u4f5c\u6210\u3055\u308c\u3001\u65b0\u3057\u304f\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u305fLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u30c8\u30ea\u30ac\u30fc\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u898b\u308b\u3068\u5206\u304b\u308b\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-18 17.00.31.png](https://qiita-image-store.s3.amazonaws.com/0/1795/e68b6964-99b6-569a-58fc-54fd0a1b8b49.png)\n\n\u3053\u306eSNS\u30c8\u30d4\u30c3\u30af\u3092CloudWatch\u306e\u30a2\u30e9\u30fc\u30e0\u3068\u9023\u643a\u3055\u305b\u308b\u3002\u8a66\u3057\u306b\u3001\u3068\u3042\u308b\u30c6\u30b9\u30c8\u74b0\u5883\u306eELB\u306eHealthyHostCount\u306b\u95a2\u3059\u308b\u30a2\u30e9\u30fc\u30e0\u306e\u901a\u77e5\u5148\u306b\u8a2d\u5b9a\u3002\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u4e0b\u306b\u306f1\u3064\u306eEC2\u304c\u914d\u7f6e\u3057\u3066\u3042\u308b\u3002\u6b63\u5e38\u306a\u30db\u30b9\u30c8\u6570\u306e\u5408\u8a08\u304c1\u3092\u4e0b\u56de\u3063\u305f\u3089\u8b66\u544a\u3092\u901a\u77e5\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\u308f\u3056\u3068EC2\u3067\u52d5\u3044\u3066\u3044\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3092\u30b9\u30c8\u30c3\u30d7\u3059\u308b\u3068\u3001CloudWatch\u304b\u3089\u901a\u77e5\u3092\u53d7\u3051\u305fSNS\u3092\u901a\u3057\u3066\u3001Lambda\u304c\u8d77\u52d5\u3059\u308b\u3002(Lambda\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306eMonitoring\u306a\u3069\u304b\u3089\u78ba\u8a8d\u3067\u304d\u308b\uff09\n\n## \u30c1\u30e3\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u901a\u77e5\n\u8d77\u52d5\u30c8\u30ea\u30ac\u30fc\u3068\u306a\u3063\u3066\u3044\u308bSNS\u306e\u901a\u77e5\u5185\u5bb9\uff08\u30a4\u30d9\u30f3\u30c8\uff09\u3092\u3001Lambda\u3092\u4f7f\u3063\u3066\u30c1\u30e3\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u901a\u77e5\u3059\u308b\u3002\u3082\u3046\u30a4\u30d9\u30f3\u30c8\u306esubscription\u81ea\u4f53\u306f\u3067\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u3042\u3068\u306f\u305d\u308c\u3092\u5143\u306b\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u8eab\u3092\u66f8\u304f\u3002\u5148\u307b\u3069\u306e`dispatcher.js`\u3092\u5909\u66f4\u3002\t\n\n\uff08Lambda\u306f\u30a4\u30d9\u30f3\u30c8\u99c6\u52d5\u3067\u3042\u308b\u304c\u3086\u3048\u306b\u3001\u30ed\u30b8\u30c3\u30af\u3092\u66f8\u304d\u306a\u304c\u3089\u30c7\u30d0\u30c3\u30b0\u3057\u3066\u3044\u304f\u306e\u304c\u9762\u5012\u3002\u4f55\u304b\u826f\u3044\u65b9\u6cd5\u3042\u308b\u306e\u3060\u308d\u3046\u304b\u3002\u3002\uff09\n\n```js:dispatcher.js\n'use strict';\n\nconst https = require('https');\nconst querystring = require('querystring');\n\nmodule.exports.dispatch = (event, context) => {\n  const record = event.Records[0];\n\n  if (record.Sns) {\n    const message = JSON.parse(record.Sns.Message);\n    const alarmStatus = message.NewStateValue;\n    const postMessge = alarmStatus +\n      \": \" +\n      message.Trigger.Namespace +\n      \" \" +\n      message.Trigger.MetricName +\n      \"\\n\" +\n      message.NewStateReason;\n\n    const postData = querystring.stringify({\n      body: postMessge\n    });\n    const requestOptions = {\n      host: 'api.chatwork.com',\n      port: 443,\n      method: 'POST',\n      path: '/v1/rooms/xxxxxxxx/messages',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Content-Length': postData.length,\n        'X-ChatWorkToken': 'xxxxxxxxxxxxxxxx'\n      }\n    };\n\n    const req = https.request(requestOptions, res => {\n      if (res.statusCode === 200) {\n        context.succeed(res);\n      } else {\n        context.fail(res.statusCode);\n      }\n    });\n\n    req.on('error', e => {\n      console.log(\"RequestError: \" + e.message);\n      context.fail(e.message);\n    });\n\n    req.write(postData);\n    req.end();\n  }\n};\n```\n\nSNS\u304b\u3089\u53d7\u3051\u305f\u30a4\u30d9\u30f3\u30c8\u3092\u30d1\u30fc\u30b9\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u5206\u3092\u4f5c\u6210\u3057\u3001\u30c1\u30e3\u30c3\u30c8\u30ef\u30fc\u30af\u306eAPI\u306bPOST\u3002\u3061\u306a\u307f\u306b\u3001`event.Records`\u306e\u4e2d\u8eab\u306f\u3053\u3093\u306a\u3093\u304c\u6765\u308b\u3002\uff08\u5185\u5bb9\u306f\u7701\u7565\u3057\u3066\u307e\u3059\uff09\n\n```\n{ EventSource: 'aws:sns',\n  EventVersion: '1.0',\n  EventSubscriptionArn: 'arn:aws:sns:ap-northeast-1:xxxxxxxxxx,\n  Sns:\n   { Type: 'Notification',\n     MessageId: 'xxxxx',\n     TopicArn: 'arn:aws:sns:ap-northeast-1:xxxxx',\n     Subject: 'OK: \"lambda-test\" in Asia Pacific - Tokyo',\n     Message: <\u901a\u77e5\u5185\u5bb9\u30c7\u30fc\u30bf>,\n     Timestamp: '2016-12-18T05:41:20.824Z',\n     ... }\n}\n```\n\n\u3053\u308c\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u76f4\u305b\u3070\u8a2d\u5b9a\u304a\u308f\u308a\u3002CloudWatch\u306e\u30a2\u30e9\u30fc\u30e0\u304c\u6765\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30c1\u30e3\u30c3\u30c8\u30ef\u30fc\u30af\u4e0a\u3067\u901a\u77e5\u304c\u6765\u308b\u3002\n\n<img width=\"841\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-18 15.42.54.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/1795/a2b827ce-4513-490d-c68f-8b6af27c3b15.png\">\n\n## \u304a\u308f\u308a\n\u7c21\u5358\u3067\u306f\u3042\u308b\u304c\u3001\u3044\u3063\u305f\u3093\u304a\u8a66\u3057\u7d42\u308f\u308a\u3002\n\nServerless Framework\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u7c21\u5358\u306a\u30c7\u30d7\u30ed\u30a4 & AWS\u5404\u7a2e\u30b5\u30fc\u30d3\u30b9(\u4eca\u56de\u306eSNS\u3060\u3051\u3067\u306a\u304f\u3001API Gateway\u3084S3 etc.)\u3068\u306e\u9023\u643a\u304c\u7c21\u5358\u306b\u5b9f\u884c\u3067\u304d\u308b\u306e\u304c\u5206\u304b\u3063\u305f\u3002\u30a4\u30d9\u30f3\u30c8\u9023\u643a\u306a\u3069\u3092\u7d71\u5408\u3057\u3066\u3084\u3063\u3066\u304f\u308c\u308b\u306e\u306f\u3042\u308a\u304c\u305f\u3044\u3002\n\u307e\u305f\u3001Serverless\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u7fa4\u3092Git\u3067\u7ba1\u7406\u3059\u308c\u3070\u3001Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306a\u3069\u306e\u5909\u66f4\u5c65\u6b74\u3092\u7ba1\u7406\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\u3053\u308c\u3082\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u6069\u6075\u3067\u3059\u306d\u3002\n\nLambda\u5468\u308a\u306f\u3001AWS\u304c[re:Invent](https://reinvent.awsevents.com/)\u3067\u3082\u3081\u3061\u3083\u304f\u3061\u3083\u529b\u5165\u308c\u3066\u308b\u611f\u3092\u51fa\u3057\u3066\u305f\u306e\u3067\u3001\u3061\u3083\u3093\u3068\u5b66\u3093\u3067\u30ae\u30e7\u30fc\u30e0\u3067\u4f5c\u3063\u3066\u308b\u30b7\u30b9\u30c6\u30e0\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u3082\u53d6\u308a\u5165\u308c\u3066\u3044\u304d\u305f\u3044\u3068\u3053\u308d\u3002\n", "tags": ["serverless", "AWS", "lambda"]}