{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nbinding.pry; Hoge.hoge\u3067\u30c8\u30ec\u30fc\u30b9\u3092\u958b\u59cb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u7de8\u96c6\u3057\u3066binding.pry\u3092\u57cb\u3081\u8fbc\u3080\u5fc5\u8981\u304c\u306a\u3044\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002\n\n\u4f7f\u7528\u4f8b\nRails\u306eModel\u3092\u65b0\u898f\u4f5c\u6210\u3059\u308b\u3068\u304d\u306e\u6319\u52d5\u304c\u77e5\u308a\u305f\u3044\uff01\n[28] pry(main)> binding.pry; User.new name: \"sachaos\"\n\nFrame number: 0/20\n\nFrom: /Users/hogehoge/.rbenv/versions/2.2.1/lib/ruby/gems/2.2.0/gems/activerecord-4.2.2/lib/active_record/inheritance.rb @ line 49 ActiveRecord::Inheritance::ClassMethods#new:\n\n    48: def new(*args, &block)\n => 49:   if abstract_class? || self == Base\n    50:     raise NotImplementedError, \"#{self} is an abstract class and cannot be instantiated.\"\n    51:   end\n    52:\n    53:   attrs = args.first\n    54:   if subclass_from_attributes?(attrs)\n    55:     subclass = subclass_from_attributes(attrs)\n    56:   end\n    57:\n    58:   if subclass\n    59:     subclass.new(*args, &block)\n    60:   else\n    61:     super\n    62:   end\n    63: end\n\n[1] pry(User)> args\n=> [{:name=>\"sachaos\"}]\n\n\u6357\u308a\u307e\u3059\u306d\u3002\n# \u6982\u8981\n\n`binding.pry; Hoge.hoge`\u3067\u30c8\u30ec\u30fc\u30b9\u3092\u958b\u59cb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u7de8\u96c6\u3057\u3066binding.pry\u3092\u57cb\u3081\u8fbc\u3080\u5fc5\u8981\u304c\u306a\u3044\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002\n\n# \u4f7f\u7528\u4f8b\n\nRails\u306eModel\u3092\u65b0\u898f\u4f5c\u6210\u3059\u308b\u3068\u304d\u306e\u6319\u52d5\u304c\u77e5\u308a\u305f\u3044\uff01\n\n```rb\n[28] pry(main)> binding.pry; User.new name: \"sachaos\"\n\nFrame number: 0/20\n\nFrom: /Users/hogehoge/.rbenv/versions/2.2.1/lib/ruby/gems/2.2.0/gems/activerecord-4.2.2/lib/active_record/inheritance.rb @ line 49 ActiveRecord::Inheritance::ClassMethods#new:\n\n    48: def new(*args, &block)\n => 49:   if abstract_class? || self == Base\n    50:     raise NotImplementedError, \"#{self} is an abstract class and cannot be instantiated.\"\n    51:   end\n    52:\n    53:   attrs = args.first\n    54:   if subclass_from_attributes?(attrs)\n    55:     subclass = subclass_from_attributes(attrs)\n    56:   end\n    57:\n    58:   if subclass\n    59:     subclass.new(*args, &block)\n    60:   else\n    61:     super\n    62:   end\n    63: end\n\n[1] pry(User)> args\n=> [{:name=>\"sachaos\"}]\n```\n\n\u6357\u308a\u307e\u3059\u306d\u3002\n", "tags": ["pry", "Ruby", "Rails"]}