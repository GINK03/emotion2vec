{"context": " More than 1 year has passed since last update.2015/03/01 \u30a2\u30eb\u30c7\u30d0\u30e9\u30f3\u30fb\u30a2\u30c8\u30ea\u30a8\u79cb\u8449\u539f\u3000Pepper\u958b\u767a\u30bf\u30c3\u30c1\uff06\u30c8\u30e9\u30a4\u306e\u8a18\u9332\nPepper\u306e\u76ee\u3067\u3042\u308b3D\u30ab\u30e1\u30e9\uff08Xtion\u306eDepth\u30bb\u30f3\u30b5\uff09\u3092\u4f7f\u3063\u3066\u30013\u6b21\u5143\u70b9\u7fa4\u3092\u53d6\u5f97\u3059\u308b\u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u53c2\u8003\u8a18\u4e8b\uff1athorikawa\u3055\u3093\u306ePepper\u304f\u3093\u3067Point Cloud\n\ngetPointCloud\u30dc\u30c3\u30af\u30b9\u306e\u4f5c\u6210\nChoregraphe 2.1.2\u3092\u8d77\u52d5\u3057\u3001Python\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u53f3\u30af\u30ea\u30c3\u30af\u2192\u30dc\u30c3\u30af\u30b9\u306e\u65b0\u898f\u4f5c\u6210\u2192Python\u30b9\u30af\u30ea\u30d7\u30c8\u3001\u307e\u305f\u306f\u3001\u30dc\u30c3\u30af\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u306estandard\u2192Templates\u2192Python Script\u3002\n\n\u30dc\u30c3\u30af\u30b9\u306e\u540d\u524d\u3068\u6982\u8981\u3092\u8a18\u8ff0\u3057\u3001OK\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30dc\u30c3\u30af\u30b9\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3001Python\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7de8\u96c6\u3057\u307e\u3059\u3002\n\n\u6b21\u306e\u3088\u3046\u306b\u3001getPointCloud\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        #put initialization code here\n        pass\n\n    def onUnload(self):\n        #put clean-up code here\n        pass\n\n    def getPointCloud(self):\n        import argparse\n        import Image\n        import time\n\n        # Camera parameters (only tested on Pepper)\n        # Focal length\n        FX = 525.0 / 2\n        FY = 525.0 / 2\n        # Optical center\n        CX = 319.5 / 2\n        CY = 239.5 / 2\n\n        # millimeter to meter\n        UNIT_SCALING = 0.001\n\n        NAME = \"depth_camera\"\n        CAMERA_ID = 2 # depth\n        RESOLUTION = 1 # 320*240\n        FRAMERATE = 15\n        COLOR_SPACE = 17 # mono16 Note: this is not documented as of Dec 14, 2014\n\n        video = ALProxy('ALVideoDevice')\n        client = video.subscribeCamera(NAME, CAMERA_ID, RESOLUTION, COLOR_SPACE, FRAMERATE)\n\n        try:\n            image = video.getImageRemote(client)\n\n            if image is None:\n                print 'Cannot obtain depth image.'\n                exit()\n\n            width = image[0]\n            height = image[1]\n            array = image[6]\n\n            cloud = []\n            for v in range(height):\n                for u in range(width):\n                    offset = (v * width + u) * 2\n                    depth = ord(array[offset]) + ord(array[offset+1]) * 256\n                    x = (u - CX) * depth * UNIT_SCALING / FX\n                    y = (v - CY) * depth * UNIT_SCALING / FY\n                    z = depth * UNIT_SCALING\n                    cloud.append((x, y, z))\n        finally:\n            video.unsubscribe(client)\n\n        fileName = '/home/nao/recordings/cameras/cloud%f.ply' % time.time()\n\n        f = open(fileName, 'w')\n        num = len(cloud)\n        header = '''ply\n format ascii 1.0\n comment Pepper 3D generated\n element vertex %d\n property float x\n property float y\n property float z\nend_header\n'''\n\n        f.write(header % (width*height))\n        f.write(\"\\n\")\n        for c in cloud:\n            f.write('%f %f %f' % (c[0], c[1], c[2]))\n            f.write(\"\\n\")\n        f.close()\n        pass\n\n    def onInput_onStart(self):\n        #self.onStopped() #activate the output of the box\n        self.getPointCloud()\n        pass\n\n    def onInput_onStop(self):\n        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped\n        self.onStopped() #activate the output of the box\n\n\n\u5b9f\u884c\n\u30ed\u30dc\u30c3\u30c8\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u518d\u751f\uff08F5\uff09\u3057\u3001\n3\u6b21\u5143\u70b9\u7fa4\u3092ply\u5f62\u5f0f\u3067Pepper\u306e\u30ed\u30fc\u30ab\u30eb\u3078\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\u7dda\u3067\u7e4b\u3044\u3060\u3082\u306e\u304c\u6700\u521d\u306b\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n\u7dda\u3067\u7e4b\u304c\u306a\u304f\u3066\u3082\u30ed\u30dc\u30c3\u30c8\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u3042\u3068\u306f\u3001\u5165\u529b\u306e\u3068\u3053\u308d\uff08\u518d\u751f\u30dc\u30bf\u30f3\uff09\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u5358\u4f53\u3067\u5b9f\u884c\u3067\u304d\u308b\u3002\n\n\n\u70b9\u7fa4\u30d5\u30a1\u30a4\u30eb\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u304b\u3089\u63a5\u7d9a\u2192\u4e0a\u7d1a\u8005\u5411\u3051\u2192\u30d5\u30a1\u30a4\u30eb\u306e\u8ee2\u9001\u3092\u30af\u30ea\u30c3\u30af\nID:nao Password:nao\n\u3067Pepper\u306e\u30ed\u30fc\u30ab\u30eb\u30d5\u30a9\u30eb\u30c0\u304c\u898b\u308c\u307e\u3059\u3002\nrecordings/cameras/\u306e\u4e2d\u306b\u3001\u70b9\u7fa4\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\u3002\n\n\n\n\n\n\u70b9\u7fa4\u306e\u8868\u793a\nMeshlab\u3067\u958b\u304f\u3068\u30013\u6b21\u5143\u70b9\u7fa4\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\n\u307e\u3068\u3081\nPepper\u306e3D\u30ab\u30e1\u30e9\u3092\u4f7f\u3063\u3066\u30013\u6b21\u5143\u70b9\u7fa4\u3092ply\u3067\u4fdd\u5b58\u3001\u30ed\u30fc\u30ab\u30eb\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3001Meshlab\u3067\u8868\u793a\u3067\u304d\u307e\u3057\u305f\u3002\n\u6b21\u306f\u3001Depth\u306e\u751f\u30c7\u30fc\u30bf(16bit, png\u753b\u50cf)\u3092\u5229\u7528\u3057\u3001\u5730\u56f3\u4f5c\u6210\u3068\u81ea\u5df1\u4f4d\u7f6e\u63a8\u5b9a\u3092\u540c\u6642\u306b\u884c\u3046SLAM\u3092\u3057\u305f\u3044\u3002\n\u76ee\u6a19\u8ecc\u9053\uff08move_traj.pmt\uff09\u3092\u8d70\u884c\u6642\u306e\u30aa\u30c9\u30e1\u30c8\u30ea\uff08\u52a0\u901f\u5ea6\uff09\u3084RGB(\u30ab\u30e9\u30fc)\u3001Depth(\u6df1\u5ea6)\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u308b\u3002\n\n\u88dc\u8db3\nSLAM\u306f\u3001\u30ed\u30dc\u30c3\u30c8\u3092\u3042\u308b\u8ecc\u9053\u3067\u81ea\u5f8b\u79fb\u52d5\u3055\u305b\u305f\u3044\u3068\u304d\u3084\u8d70\u884c\u74b0\u5883\u3092\u7406\u89e3\u3055\u305b\u305f\u3044\u3068\u304d\u306b\u7528\u3044\u307e\u3059\u3002\u30a8\u30f3\u30b3\u30fc\u30c0\u3084\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u306a\u3069\u306e\u5185\u754c\u30bb\u30f3\u30b5\u3088\u308a\u3082\u7cbe\u5ea6\u304c\u3088\u304f\u3001\u4fe1\u983c\u3067\u304d\u307e\u3059\u3002\n3D\u30ab\u30e1\u30e9\u306f\u3001\u5e73\u9762\u62bd\u51fa\u3084\u7269\u4f53\u691c\u51fa\u3001\u9854\u8a8d\u8b58\u306a\u3069\u306b\u3082\u5fdc\u7528\u3067\u304d\u307e\u3059\u3002\nPepper\u306b\u306f2\u53f0\u306e2D\u30ab\u30e1\u30e9\uff08RGB\u30ab\u30e1\u30e9)\u304c\u3042\u308b\u306e\u3067\u3001\u30b9\u30c6\u30ec\u30aa\u30ab\u30e1\u30e9\u306b\u3059\u308c\u3070\u70b9\u7fa4\u3082\u5f97\u3089\u308c\u307e\u3059\u3057\uff08\u5171\u901a\u306b\u898b\u3048\u3066\u3044\u308b\u90e8\u5206\u306e\u307f\u3001\u3042\u308b\u304b\u306a\uff1f\uff57\uff09\u30013D\u30ab\u30e1\u30e9\u304b\u3089\u5f97\u3089\u308c\u308b\u70b9\u7fa4\u306b\u8272\u3065\u3051\u3057\u305f\u308a\u3082\u3067\u304d\u307e\u3059\u3002\n\u203bPepper\u3055\u3093\u3092\u4f7f\u308f\u306a\u3044\u3068\u304d\u306f\u3044\u3064\u3082Rest\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\u5ef6\u547d\u306e\u305f\u3081\u306b\u3002\u7b11\n2015/03/01 \u30a2\u30eb\u30c7\u30d0\u30e9\u30f3\u30fb\u30a2\u30c8\u30ea\u30a8\u79cb\u8449\u539f\u3000Pepper\u958b\u767a\u30bf\u30c3\u30c1\uff06\u30c8\u30e9\u30a4\u306e\u8a18\u9332\n\nPepper\u306e\u76ee\u3067\u3042\u308b3D\u30ab\u30e1\u30e9\uff08Xtion\u306eDepth\u30bb\u30f3\u30b5\uff09\u3092\u4f7f\u3063\u3066\u30013\u6b21\u5143\u70b9\u7fa4\u3092\u53d6\u5f97\u3059\u308b\u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u53c2\u8003\u8a18\u4e8b\uff1athorikawa\u3055\u3093\u306e[Pepper\u304f\u3093\u3067Point Cloud](http://qiita.com/thorikawa/items/a625b4766dcd283b783b#pcd%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E5%87%BA%E5%8A%9B)\n\n# getPointCloud\u30dc\u30c3\u30af\u30b9\u306e\u4f5c\u6210\nChoregraphe 2.1.2\u3092\u8d77\u52d5\u3057\u3001Python\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u53f3\u30af\u30ea\u30c3\u30af\u2192\u30dc\u30c3\u30af\u30b9\u306e\u65b0\u898f\u4f5c\u6210\u2192Python\u30b9\u30af\u30ea\u30d7\u30c8\u3001\u307e\u305f\u306f\u3001\u30dc\u30c3\u30af\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\u306estandard\u2192Templates\u2192Python Script\u3002\n![p1.png](https://qiita-image-store.s3.amazonaws.com/0/63863/8380222f-3448-93f6-a346-cd4372400d8b.png)\n\n\u30dc\u30c3\u30af\u30b9\u306e\u540d\u524d\u3068\u6982\u8981\u3092\u8a18\u8ff0\u3057\u3001OK\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n![p2.png](https://qiita-image-store.s3.amazonaws.com/0/63863/4ffa4154-eed3-e624-123f-3a2bcfe83a4b.png)\n\n\u30dc\u30c3\u30af\u30b9\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3001Python\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7de8\u96c6\u3057\u307e\u3059\u3002\n![p3.png](https://qiita-image-store.s3.amazonaws.com/0/63863/247a85a2-1f19-ab2d-7a7f-a59ad1acf262.png)\n\n\u6b21\u306e\u3088\u3046\u306b\u3001getPointCloud\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n~~~\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        #put initialization code here\n        pass\n\n    def onUnload(self):\n        #put clean-up code here\n        pass\n\n    def getPointCloud(self):\n        import argparse\n        import Image\n        import time\n\n        # Camera parameters (only tested on Pepper)\n        # Focal length\n        FX = 525.0 / 2\n        FY = 525.0 / 2\n        # Optical center\n        CX = 319.5 / 2\n        CY = 239.5 / 2\n\n        # millimeter to meter\n        UNIT_SCALING = 0.001\n\n        NAME = \"depth_camera\"\n        CAMERA_ID = 2 # depth\n        RESOLUTION = 1 # 320*240\n        FRAMERATE = 15\n        COLOR_SPACE = 17 # mono16 Note: this is not documented as of Dec 14, 2014\n\n        video = ALProxy('ALVideoDevice')\n        client = video.subscribeCamera(NAME, CAMERA_ID, RESOLUTION, COLOR_SPACE, FRAMERATE)\n\n        try:\n            image = video.getImageRemote(client)\n\n            if image is None:\n                print 'Cannot obtain depth image.'\n                exit()\n\n            width = image[0]\n            height = image[1]\n            array = image[6]\n            \n            cloud = []\n            for v in range(height):\n                for u in range(width):\n                    offset = (v * width + u) * 2\n                    depth = ord(array[offset]) + ord(array[offset+1]) * 256\n                    x = (u - CX) * depth * UNIT_SCALING / FX\n                    y = (v - CY) * depth * UNIT_SCALING / FY\n                    z = depth * UNIT_SCALING\n                    cloud.append((x, y, z))\n        finally:\n            video.unsubscribe(client)\n\n        fileName = '/home/nao/recordings/cameras/cloud%f.ply' % time.time()\n\n        f = open(fileName, 'w')\n        num = len(cloud)\n        header = '''ply\n format ascii 1.0\n comment Pepper 3D generated\n element vertex %d\n property float x\n property float y\n property float z\nend_header\n'''\n\n        f.write(header % (width*height))\n        f.write(\"\\n\")\n        for c in cloud:\n            f.write('%f %f %f' % (c[0], c[1], c[2]))\n            f.write(\"\\n\")\n        f.close()\n        pass\n\n    def onInput_onStart(self):\n        #self.onStopped() #activate the output of the box\n        self.getPointCloud()\n        pass\n\n    def onInput_onStop(self):\n        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped\n        self.onStopped() #activate the output of the box\n~~~\n\n#\u5b9f\u884c\n\n\u30ed\u30dc\u30c3\u30c8\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u518d\u751f\uff08F5\uff09\u3057\u3001\n3\u6b21\u5143\u70b9\u7fa4\u3092ply\u5f62\u5f0f\u3067Pepper\u306e\u30ed\u30fc\u30ab\u30eb\u3078\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n\u7dda\u3067\u7e4b\u3044\u3060\u3082\u306e\u304c\u6700\u521d\u306b\u5b9f\u884c\u3055\u308c\u308b\u3002\n![p4.PNG](https://qiita-image-store.s3.amazonaws.com/0/63863/37e0fa0a-2cf1-02e1-1ad7-9b53640ab91e.png)\n\n\u7dda\u3067\u7e4b\u304c\u306a\u304f\u3066\u3082\u30ed\u30dc\u30c3\u30c8\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u3042\u3068\u306f\u3001\u5165\u529b\u306e\u3068\u3053\u308d\uff08\u518d\u751f\u30dc\u30bf\u30f3\uff09\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u5358\u4f53\u3067\u5b9f\u884c\u3067\u304d\u308b\u3002\n![p5.PNG](https://qiita-image-store.s3.amazonaws.com/0/63863/b0a06eab-6a53-32c0-f959-b9deb7a69ef7.png)\n\n#\u70b9\u7fa4\u30d5\u30a1\u30a4\u30eb\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u304b\u3089\u63a5\u7d9a\u2192\u4e0a\u7d1a\u8005\u5411\u3051\u2192\u30d5\u30a1\u30a4\u30eb\u306e\u8ee2\u9001\u3092\u30af\u30ea\u30c3\u30af\nID:nao Password:nao\n\u3067Pepper\u306e\u30ed\u30fc\u30ab\u30eb\u30d5\u30a9\u30eb\u30c0\u304c\u898b\u308c\u307e\u3059\u3002\n\nrecordings/cameras/\u306e\u4e2d\u306b\u3001\u70b9\u7fa4\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u3087\u3046\u3002\n![c1.png](https://qiita-image-store.s3.amazonaws.com/0/63863/3b29f2e4-d655-ee04-9b02-7de64792f6b4.png)\n\n![c2.png](https://qiita-image-store.s3.amazonaws.com/0/63863/e83c12ae-f196-c7e0-b771-65d144bba0cb.png)\n\n![c3.png](https://qiita-image-store.s3.amazonaws.com/0/63863/e66a0468-da1b-904f-f37b-a4fce60217b9.png)\n\n![c4.png](https://qiita-image-store.s3.amazonaws.com/0/63863/7d9d9f40-bbbe-c8ec-5a91-dfe29cab83fb.png)\n\n#\u70b9\u7fa4\u306e\u8868\u793a\n[Meshlab](http://meshlab.sourceforge.net/)\u3067\u958b\u304f\u3068\u30013\u6b21\u5143\u70b9\u7fa4\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n![p7.PNG](https://qiita-image-store.s3.amazonaws.com/0/63863/34b07bb1-8274-8f64-b378-c1637f891081.png)\n\n#\u307e\u3068\u3081\nPepper\u306e3D\u30ab\u30e1\u30e9\u3092\u4f7f\u3063\u3066\u30013\u6b21\u5143\u70b9\u7fa4\u3092ply\u3067\u4fdd\u5b58\u3001\u30ed\u30fc\u30ab\u30eb\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3001Meshlab\u3067\u8868\u793a\u3067\u304d\u307e\u3057\u305f\u3002\n\u6b21\u306f\u3001Depth\u306e\u751f\u30c7\u30fc\u30bf(16bit, png\u753b\u50cf)\u3092\u5229\u7528\u3057\u3001\u5730\u56f3\u4f5c\u6210\u3068\u81ea\u5df1\u4f4d\u7f6e\u63a8\u5b9a\u3092\u540c\u6642\u306b\u884c\u3046SLAM\u3092\u3057\u305f\u3044\u3002\n\u76ee\u6a19\u8ecc\u9053\uff08move_traj.pmt\uff09\u3092\u8d70\u884c\u6642\u306e\u30aa\u30c9\u30e1\u30c8\u30ea\uff08\u52a0\u901f\u5ea6\uff09\u3084RGB(\u30ab\u30e9\u30fc)\u3001Depth(\u6df1\u5ea6)\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u308b\u3002\n\n#\u88dc\u8db3\nSLAM\u306f\u3001\u30ed\u30dc\u30c3\u30c8\u3092\u3042\u308b\u8ecc\u9053\u3067\u81ea\u5f8b\u79fb\u52d5\u3055\u305b\u305f\u3044\u3068\u304d\u3084\u8d70\u884c\u74b0\u5883\u3092\u7406\u89e3\u3055\u305b\u305f\u3044\u3068\u304d\u306b\u7528\u3044\u307e\u3059\u3002\u30a8\u30f3\u30b3\u30fc\u30c0\u3084\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u306a\u3069\u306e\u5185\u754c\u30bb\u30f3\u30b5\u3088\u308a\u3082\u7cbe\u5ea6\u304c\u3088\u304f\u3001\u4fe1\u983c\u3067\u304d\u307e\u3059\u3002\n\n3D\u30ab\u30e1\u30e9\u306f\u3001\u5e73\u9762\u62bd\u51fa\u3084\u7269\u4f53\u691c\u51fa\u3001\u9854\u8a8d\u8b58\u306a\u3069\u306b\u3082\u5fdc\u7528\u3067\u304d\u307e\u3059\u3002\nPepper\u306b\u306f2\u53f0\u306e2D\u30ab\u30e1\u30e9\uff08RGB\u30ab\u30e1\u30e9)\u304c\u3042\u308b\u306e\u3067\u3001\u30b9\u30c6\u30ec\u30aa\u30ab\u30e1\u30e9\u306b\u3059\u308c\u3070\u70b9\u7fa4\u3082\u5f97\u3089\u308c\u307e\u3059\u3057\uff08\u5171\u901a\u306b\u898b\u3048\u3066\u3044\u308b\u90e8\u5206\u306e\u307f\u3001\u3042\u308b\u304b\u306a\uff1f\uff57\uff09\u30013D\u30ab\u30e1\u30e9\u304b\u3089\u5f97\u3089\u308c\u308b\u70b9\u7fa4\u306b\u8272\u3065\u3051\u3057\u305f\u308a\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u203bPepper\u3055\u3093\u3092\u4f7f\u308f\u306a\u3044\u3068\u304d\u306f\u3044\u3064\u3082Rest\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\u5ef6\u547d\u306e\u305f\u3081\u306b\u3002\u7b11\n", "tags": ["Pepper", "Choregraphe", "Python", "3D", "\u753b\u50cf\u51e6\u7406"]}