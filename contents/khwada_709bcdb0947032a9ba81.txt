{"context": "\n\n2016/9/3 SpringOne Platform 2016 \u5831\u544a\u4f1a \u53c2\u52a0\u30e1\u30e2\n\nhttps://jsug.doorkeeper.jp/events/50931\nSpringOne Platform 2016\n\n\n2016/8/1-4 @Las Vegas\n\n\n\n\n\u30a4\u30d9\u30f3\u30c8\u5168\u4f53\u30fb\u30ad\u30fc\u30ce\u30fc\u30c8\n\n\u4e3b\u50ac\u304cSpring\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304b\u3089Pivotal\u793e\u306b\u5909\u308f\u3063\u305f\n\n\nPivotal Cloud Foundry\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u5897\u3048\u305f\n\u53c2\u52a0\u80052,000\u4eba\u8d85\uff08\u6628\u5e74\u306e\u500d\uff09\n\u65e5\u672c\u304b\u3089\u3082\u7d0430\u540d\u304c\u53c2\u52a0\uff08\u65e5\u672c\u4eba\u767a\u8868\u8005\u3082\uff09\n\n\n\u30b9\u30dd\u30f3\u30b5\u30fc\u306e\u9854\u3076\u308c\u304c\u5927\u5e45\u306b\u5909\u5316\n\n\nAccenture, Google, EMC, Microsoft\u306a\u3069\u5927\u4f01\u696d\u304c\u80a9\u3092\u4e26\u3079\u305f\nNTT Data\u3082\u30b7\u30eb\u30d0\u30fc\u30b9\u30dd\u30f3\u30b5\u30fc\n\n\nCase Study\u304c\u5897\u3048\u305f\n\u57fa\u8abf\u8b1b\u6f14\n\n\n\u30c4\u30fc\u30eb\u3060\u3051\u3067\u306a\u304f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u30b5\u30a4\u30af\u30eb\u3092\u56de\u3059Culture\u304c\u91cd\u8981\uff08Pivotal Labs\u306e\u7d39\u4ecb\uff09\nSpring\u306e\u6b69\u307f\n\n\n2002 DI/AOP\n2007 Annotation Config\n2009 Boot/Cloud\n\n\nSpring 5.0\n\n\nReactive\u5bfe\u5fdc\u304c\u76ee\u7389\n2017 Q1\u306b\u30ea\u30ea\u30fc\u30b9\u4e88\u5b9a\u3001Java SE9\u5bfe\u5fdc\u306f5.1\u3067\n\n\nSpring 4.x\u306f2019\u5e74\u307e\u3067\u30b5\u30dd\u30fc\u30c8\n\n\nSpring 5.0\u306f\u6765\u6625\u30ea\u30ea\u30fc\u30b9\uff01 \u30af\u30e9\u30a6\u30c9\u30cd\u30a4\u30c6\u30a3\u30d6\u958b\u767a\u3001\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u5316\u306a\u3069\u6700\u65b0\u6280\u8853\u30fb\u4e8b\u4f8b\u306b\u3042\u3075\u308c\u305f4\u65e5\u9593\n\n\nSpring Core\n\n\"Modern Java Component Design with Spring Framework 4.3\", \"Spring MVC 4 Web Apps\"\nSpring Framework \u3075\u308a\u304b\u3048\u308a\u30684.3\u65b0\u6a5f\u80fd\n\n4.2\n\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\uff1a\u30d5\u30a3\u30fc\u30eb\u30c9\u3092final\u306b\u3057\u3066immutable\u306b\u3067\u304d\u308b\nLazy Injection Point\n\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3000\n\n\npublic @interface MyCustomeService{}\n\u4e0a\u66f8\u304d\u3057\u305f\u3044\u5c5e\u6027\u3060\u3051\u516c\u958b\u3067\u304d\u308b\n\n\n\n\n4.3\n\n\n4\u7cfb\u306e\u30e9\u30b9\u30c8\u30ea\u30ea\u30fc\u30b9\u30012019\u5e74\u307e\u3067\u30b5\u30dd\u30fc\u30c8\u3001SpringBoot1.4\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\nCore Container\n\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\uff11\u3064\u306a\u3089@Autowired\u306f\u7701\u7565\u53ef\u80fd\u306b\nJavaConfig\u30af\u30e9\u30b9\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3067\u304d\u308b\u3088\u3046\u306b\nInjectionPoint like CDI\uff1a\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u5148\u306e\u30e1\u30bf\u60c5\u5831\u3092\u53d6\u308c\u308b\n\u3061\u306a\u307f\u306blombok\u3060\u3068\u3001@Slf3j\u3067Logger log\u304c\u5b9a\u7fa9\u3055\u308c\u308b\n\n\nWeb Improvements\n\n\n\u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u8ffd\u52a0\u3001@GetMapping @RequestScope\n\nGET\u4ed8\u4e0e\u3067HEAD\u3068OPTION\u304c\u81ea\u52d5\u30b5\u30dd\u30fc\u30c8\n\u5f15\u6570\u306b@RequestAttribute(\"param1\") String param1 => servlet API\u306b\u4f9d\u5b58\u305b\u305a\u306b\u53d6\u308c\u308b\n\n\n\n\n\n\nReactive\n\n\"From Imperative To Reactive Web Apps\", \"Reactor 3.0a JVM Foundation for Java 8 and Reactive Streams\"\n\nReactive Streams\n\n\nStream processing, Asynchronus, Non-blocking, Back pressure\n\u51e6\u7406\u3057\u304d\u308c\u306a\u304f\u306a\u3063\u305f\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5897\u3084\u3059\u21d2\u30ea\u30bd\u30fc\u30b9\u3092\u52b9\u7387\u7684\u306b\u6d3b\u7528\nPublisher\uff1a\u7121\u9650\u306b\u3054\u98ef\u3092\u51fa\u3057\u3066\u304f\u308b\u7530\u820e\u306e\u89aa\u621a\u3001Subscriber\uff1a\u5e30\u7701\u3057\u305f\u9752\u5e74\n\n\nReactor 2.x\uff1a\u6b63\u76f4\u8a00\u3063\u3066\u30af\u30bd\u3060\u3063\u305f\uff08\u3084\u308d\u3046\u3068\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u3059\u304e\u308b\u3001\u591a\u3059\u304e\u3066\u5206\u304b\u3089\u306a\u3044\uff09\nReactor 3.0\n\n\nPublisher\n\n\nMono[0|1]\u3068Flux[n]\nReactive Streams\u306epublisher\u306e\u5b9f\u88c5\nRxJava(Netflix\u88fd)\u306fReactive Streams\u6e96\u62e0\u3092\u91cd\u8996\u3057\u3066\u3044\u306a\u3044\uff08\u30e6\u30fc\u30b6\u306e\u591a\u304f\u304cAndroid\uff09\n\n\nSpring 5\u306fReactor Core\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3001Spring\u306e\u6b74\u53f2\u306e\u4e2d\u3067\u4f55\u304b\u306b\u4f9d\u5b58\u3059\u308b\u306e\u306f\u306f\u3058\u3081\u3066\n\n\n\n\n\"A Lite Rx API for the JVM\"\nSpringOne Platform 2016 \u5831\u544a\u4f1a (A Lite Rx API for the JVM)\n\n[\u5143\u30bb\u30c3\u30b7\u30e7\u30f3]A lite Rx API for the JVM\n\n[\u5143\u30bb\u30c3\u30b7\u30e7\u30f3]lite-rx-api-hands-on\n\nReactive\n\n\u5e83\u7fa9\u306b\u306fnon-blocking\u3067event-driven\u306a\u30b7\u30b9\u30c6\u30e0\u3092\u5f62\u5bb9\u3059\u308b\u8a00\u8449\n\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\uff1a\u30b9\u30b1\u30fc\u30eb\u3001\u5b89\u5b9a\u7684\u306b\u52d5\u4f5c\u3001\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u5bb9\u6613\u6027\nBigData processing\u3001\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u306b\u4f9d\u5b58\u3059\u308bwebapp\u3001\u30c7\u30fc\u30bf\u751f\u6210\u5074\u3068\u5229\u7528\u5074\u306e\u51e6\u7406\u901f\u5ea6\u306b\u975e\u5bfe\u79f0\u6027\u304c\u3042\u308b\u30b7\u30b9\u30c6\u30e0\u3001\u5927\u91cf\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u634c\u304f\u5fc5\u8981\u306e\u3042\u308b\u30b7\u30b9\u30c6\u30e0\n\n\n\nReactive Streams\n\n\u975e\u540c\u671f\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306e\u6a19\u6e96\u4ed5\u69d8\nj.u.c.Flow\u3068\u3057\u3066Java9\u306b\u3082\u7d44\u307f\u8fbc\u307e\u308c\u308b\u4e88\u5b9a\nSubscriber\u304c\u53d7\u3051\u53d6\u308b\u30c7\u30fc\u30bf\u306e\u500b\u6570\u3092\u3001\u81ea\u8eab\u3067\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u53ef\u80fd\uff08backpressure\uff09\nPublisher, Subscriber, Subscription, Processor\nComponent A -> T1 -> Processor -> T2 -> Component B\n\n\n\nReactive API Library\n\nRxJava 2.0\nAkka-Stream\nReactor Core\n\n\n\nReactor\n\n\u30ea\u30bd\u30fc\u30b9\u306e\u52b9\u7387\u6027\u306b\u5f37\u304f\u30d5\u30a9\u30fc\u30ab\u30b9\ndebug, logging, test\u3092\u5bb9\u6613\u306b\u884c\u3048\u308b\n\n\n\nMono\n\n1\u500b\uff08\u307e\u305f\u306f0\u500b\uff09\u306e\u5024\u3092\u653e\u51fa\u3059\u308bPublisher\nsubscribe\u306bcallable\u3092\u6e21\u3059\u3068\u88cf\u5074\u3067subscription\u3092\u751f\u6210\u3057\u3066\u30d5\u30ed\u30fc\u304c\u6d41\u308c\u308b\n\n\n\nFlux\n\n\u8907\u6570\u306e\u5024\u3092emit\u3059\u308bPublisher\n\n\n\nScheduller\n\npublish/subscribe\u3092\u884c\u3046\u30b9\u30ec\u30c3\u30c9\u306e\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u306efactory\nsingle(), parallel(), elastic()\n\n\n\nRxJava\u3068\u306e\u76f8\u4e92\u904b\u7528\n\nRxjava1Adapter\n\n\n\nReactor and Spring 5\n\nFlux/Mono\u3092\u53d7\u3051\u53d6\u308a\u3001\u8fd4\u5374\u53ef\u80fd\u306aController\nFlux/Mono\u3092\u8fd4\u5374\u53ef\u80fd\u306aHttpClient\u5b9f\u88c5\nSpring Initializr\u3067\u624b\u8efd\u306b\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u308b\uff1aReactive Web(Spring Boot\u306f1.4.1 SNAPSHOT\u3092\u9078\u3076\u3053\u3068)\n\n\nReactor API Hands-on\n\n\u9280\u306e\u5f3e\u4e38\u3067\u306f\u306a\u3044\n\n\u5b89\u5b9a\u7684\u306a\u52d5\u4f5c\u3001\u4e88\u6e2c\u53ef\u80fd\u306a\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3068\u5f15\u304d\u63db\u3048\u306b\u3001\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306f\u3042\u308b\n\n\n \u4f8b\uff1a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306equery\u6570\u306f\u5897\u3048\u308b\n\n\n\u975e\u540c\u671f\u51e6\u7406\u7279\u6709\u306e\u8907\u96d1\u3055\u3001\u30c7\u30d0\u30c3\u30b0\u306e\u3057\u3065\u3089\u3055\u306f\u3042\u308b\n\n\n\n\n\"Designing, Implementing, and Using Reactive APIs\"\n\n[\u5143\u30bb\u30c3\u30b7\u30e7\u30f3]Designing, Implementing, and Using Reactive APIs\n\n\u5b9f\u7528\u7d4c\u9a13\u306b\u57fa\u3065\u3044\u305fReactive API\u306e\u8a2d\u8a08\u3001\u5b9f\u88c5\u3001\u4f7f\u7528\u6cd5\u3092\u7d39\u4ecb\n\n\nhttps://github.com/cloudfoundry/cf-java-client\n\n\n\u623b\u308a\u5024\u3092void\u306b\u3057\u3066\u306f\u3044\u3051\u306a\u3044\n\n\nsubscribe\u3059\u308b\u307e\u3067\u306f\u305f\u3060\u306e\u300c\u8a2d\u8a08\u66f8\u300d\u306b\u3059\u304e\u306a\u3044\n\u4f5c\u3063\u305f\u8a2d\u8a08\u66f8\u3092\u623b\u308a\u5024\u3068\u3057\u3066\u8fd4\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b\nMono delete(String id)\n\n\nFunctional Style\u306e\u63a8\u5968\n\n\n\u526f\u4f5c\u7528\u306e\u306a\u3044\u3001\u5358\u7d14\u3067\u5c0f\u3055\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u3064\u304f\u308a\u3001\u7d44\u307f\u5408\u308f\u305b\u3066\u5927\u304d\u306a\u51e6\u7406\u3092\u884c\u3046\n\u7d44\u307f\u5408\u308f\u305b\u306e\u9053\u5177\uff1a\u9ad8\u968e\u95a2\u6570\uff08\u95a2\u6570\u3092\u5f15\u6570\u306b\u53d6\u308b\u3001map/flatmap\u306a\u3069\uff09\n\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u306b\u3088\u308b\u7d44\u307f\u7acb\u3066\uff08\u8907\u6570\u5f15\u6570\u3092\u53d6\u308b\u95a2\u6570\u306b\u306f\u3001\u88dc\u52a9\u95a2\u6570\u3068tuple\u3067\uff09\nPointfree Style\u306e\u63a8\u5968\nf = (+1)\n\n\n\u6761\u4ef6\u5206\u5c90\n\n\n\u30a8\u30e9\u30fc\u306b\u3088\u308b\u6761\u4ef6\u5206\u5c90\uff08otherwise\uff09\nEmpty\u306b\u3088\u308b\u6761\u4ef6\u5206\u5c90\uff08defaultWithEmpty\u306a\u3069\uff09\n\u5024\u306b\u3088\u308b\u6761\u4ef6\u5206\u5c90\u306f\u3001if\u6587\u3092\u4f7f\u3063\u3066\u547d\u4ee4\u7684\u306b\u66f8\u3051\u3070\u3088\u3044\uff08Mono/Flux\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u76f4\u89b3\u7684\u306b\u7406\u89e3\u3057\u3065\u3089\u304f\u306a\u308b\uff09\n\n\n\u30c6\u30b9\u30c8\u8f9b\u3044\u554f\u984c\n\n\n\u975e\u540c\u671f\u51e6\u7406\u306a\u306e\u3067\u3001\u4ed5\u4e8b\u3092\u983c\u3093\u3060\u6642\u70b9\u3067\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306f\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\n\u4ed6\u306e\u30b9\u30ec\u30c3\u30c9\u306e\u7d42\u4e86\u3092\u5f85\u3064\uff1ajava.util.concurrent.CountDownLatch\nTestSubscriber\u21d2\u540c\u671f\u3055\u305b\u308b\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u81ea\u5206\u3067\u66f8\u304b\u306a\u304f\u3066\u3088\u304f\u306a\u308b\n\n\n\nReactor\u3067\u306f\u6e96\u5099\u4e2d\u30013.0.0.RELEASE\u3067\u306f\u9664\u304b\u308c\u305f\u3001Clound Foundry Java Client\u3067\u306f\u72ec\u81ea\u306b\u5b9f\u88c5\u3057\u305f\u3082\u306e\u3092\u5229\u7528\n\n\n\n\n\n\nTracing\n\n\"How to Properly Blame Things for Causing Latency: An Introduction to Distributed Tracing and Zipkin\", \"Implementing Microservices Tracing with Spring Cloud and Zipkin\", \"Let's Visualize Your Spring Boot Applications\"\n[SpringOne2016] Distributed Tracing using Sleuth and Zipkin \n\n\u5206\u6563\u30b7\u30b9\u30c6\u30e0\u3092\u7d44\u3080\u6642\u306b\u5fc5\u305a\u76f4\u9762\u3059\u308b\u554f\u984c\n\n\n\u3069\u3053\u3067\u554f\u984c\u304c\u8d77\u304d\u305f\u304b\u3001\u3069\u3053\u304c\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u304b\n\n\n\u554f\u984c\u767a\u751f\u500b\u6240\u3092\u30ed\u30b0\u304b\u3089\u8abf\u3079\u308b\n\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066ID\u3092\u767a\u884c\u3057\u3066\u305d\u308c\u3092\u5171\u6709\nSpring Clound Sleuth\n\u30ea\u30af\u30a8\u30b9\u30c8\u5168\u4f53\uff1aTrace\u3001\u500b\u5225\u30ea\u30af\u30a8\u30b9\u30c8\uff1aSpan\nHTTP/AMQP\u30d8\u30c3\u30c0\u306bID\u3092\u57cb\u3081\u308b\u3001\u53d7\u3051\u53d6\u3063\u3066ThreadLocal\u306b\u5165\u308c\u308b\u3001\u6b21\u306b\u6e21\u3059\u30fb\u30fb\u30fb\u306e\u7e70\u308a\u8fd4\u3057\n\n\n\u30b5\u30fc\u30d3\u30b9\u306e\u69cb\u9020\u3092\u53ef\u8996\u5316\u3059\u308b\n\n\nSleuth\u3067\u96c6\u3081\u305f\u60c5\u5831\u3092\u4f7f\u3063\u3066\u3001\u9045\u3044\u3068\u3053\u308d\u3092\u63a2\u3057\u305f\u308a\u30b5\u30fc\u30d3\u30b9\u306e\u95a2\u9023\u3092\u898b\u305f\u3044\nZipkin\n\n\nFind Trace\nDependencies\uff08\u30b5\u30fc\u30d3\u30b9\u306e\u95a2\u9023\u304c\u53ef\u8996\u5316\u3055\u308c\u308b\uff09\n\n\n\n\nsleuth\u3068zipkin\u306e\u59cb\u3081\u65b9\n\n\nSpring Initializr\u3067\"sleuth\" and \"zipkin\"\u3092\u63a2\u3059\nzipkin\u5074\u304c\u843d\u3061\u3066\u3044\u305f\u5834\u5408\u3067\u3082\u6f0f\u308c\u306a\u304ftrace\u3059\u308b\u306b\u306f\u3001\u9593\u306bRabbitMQ\uff08\u304bKafka\uff09\u3092\u631f\u3080\n\n\nNetflix VIZCERAL\n\n\nSpring Cloud DataFlow\n\n\"Data Microservices in the Cloud\"\n[\u5143\u30bb\u30c3\u30b7\u30e7\u30f3]Data Microservices in the Cloud\n\nETL\u306b\u4ee3\u308f\u308b\u3082\u306e\nSpring XD Streams/ ZooKeeper\n\n\nstream1 = http | cassandra\n\u8ab2\u984c\uff1ascale up / down\u3001upgrade\n\n\nRefactoring to MSA\n\n\n\u30b3\u30f3\u30c6\u30ca\u306b\u7d44\u307f\u8fbc\u307e\u308c\u305f\u8907\u6570\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089\u3001\u5358\u4f53\u3067\u5b9f\u884c\u3055\u308c\u308b\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30f3\u30a2\u30d7\u30ea\u3078\n\u72ec\u81ea\u30e9\u30f3\u30bf\u30a4\u30e0\u304b\u3089\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u59d4\u4efb\u3078\n\n\nSpring Cloud Stream\n\n\nSpring Boot based event-driven microservice framework\nkafka inspired\nMessage Broker\u3068\u4f1a\u8a71\u3067\u304d\u308b\nXD-Container\u306f\u306a\u304f\u306a\u308a\u3001Runtime\u306fClound Foundry\u306a\u3069\u306b\u4efb\u305b\u308b\n\n\nSpring Cloud Task\n\n\nSpring Batch\u3068\u306e\u89aa\u548c\u6027\u304c\u9ad8\u3044\n\n\n\n\nNew Functional Web API in Spring 5\n\nAnnotation Hell -> Lambda\n\nSpark, Ratpack, vert.x\n\n\nLambda-oriented HTTP routing & processing\n\n\norg.springframework.web.reactive.function\nhttps://github.com/making/demo-lambda-routing\nNo Reflection. Lightweight & Fast, DI Container is not necesary\nwill be in Spring 5.0.0.M2 (Sep 15th)\n\n\n\n\nMicorservices\n\n\"Consumer Driven Contracts and Your Microservice Architecture\"\n\nConsumer Drivern Contract\n\n\nConsumer\u304cProducer\u306b\u671f\u5f85\u3059\u308b\u6a5f\u80fd\u3092Contract\u3068\u3057\u3066\u5171\u6709\u3057\u3001Producer\u306e\u5168Consumer\u306b\u5bfe\u3059\u308b\u8cac\u52d9\u3092\u307e\u3068\u3081\u305f\u3082\u306e\nProducer\u3068Counsumer\u9593\u3067\u5408\u610f\u3057\u305fAPI\u306e\u5229\u7528\u65b9\u6cd5\n\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30ec\u30d9\u30eb\u306eTDD\nspring cloud contract\n\n\nconsumer\u5074\u3067contract\u3092\u4f5c\u6210\uff08Consumer Driven\uff09\u3057\u3066API\u306e\u5909\u66f4\u3092\u4fc3\u3059\n\n\ngroovy DSL -> json\u306b\u3057\u3066wiremock\u3067stub\u5316\u3057\u3066\u30c6\u30b9\u30c8\u3092\u901a\u3059\uff08spring cloud contract wiremock\uff09\nproducer\u306b\u5bfe\u3057\u3066contract\u306ePR\u3092\u51fa\u3059 -> producer\u5074\u306fPR\u3092\u53d7\u3051\u5165\u308c\u308b\u3068\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\n\n\n\n\n\"Developing Microservices with Aggregates\"\n[SpringOne2016] Developing Microservices with Aggregates\n[\u5143\u30bb\u30c3\u30b7\u30e7\u30f3]Developing Microservices with Aggregates\n\nSpringOne 2016 \u8c37\u672c\u3055\u3093\u7684\u30d9\u30b9\u30c8\u30bb\u30c3\u30b7\u30e7\u30f3\n\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u3092\u3069\u3046\u3059\u308b\u306e\u304b\n\n\n2 phase commit\u306f\u3053\u306e\u5148 \u751f\u304d\u6b8b\u308b\u9078\u629e\u80a2\u3067\u306f\u306a\u3044\n\n\n\uff11\u56de\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u30b3\u30fc\u30eb = \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7bc4\u56f2 = NoSQL\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u3057\u3066\u3044\u304f\nEvent driven\u3092\u7528\u3044\u305f\u7d50\u679c\u6574\u5408\u6027\n\n\n\u30c7\u30fc\u30bf\u66f4\u65b0\uff0f\u30a4\u30d9\u30f3\u30c8\u767a\u884c \u21d2 event sourcing\uff08DB\u3092\u66f4\u65b0\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3059\u308b\uff09\n\u5c65\u6b74\u306e\u7a4d\u307f\u91cd\u306d \u21d2 \u9806\u756a\u306f\u95a2\u4fc2\u306a\u304f\u7d50\u679c\u6574\u5408\u6027\u30d9\u30fc\u30b9\u3067\u8003\u3048\u308b\n\u3069\u3046\u96c6\u7d04\u3059\u308b\u304b\u306f\u30dd\u30ea\u30b7\u30fc\u6b21\u7b2c\u3001\u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u30ab\u30fc\u30c9\u3067\u3042\u308c\u3070\u6700\u7d42\u7684\u306a\u72b6\u614b\u3092\u30e6\u30fc\u30b6\u306b\u78ba\u8a8d\u3055\u305b\u308b\nACID\u6027\u3092\u62c5\u4fdd\u3057\u305f\u3051\u308c\u3070RDBMS\u3067\u30ed\u30c3\u30af\u3057\u3066\u3084\u308b\u3057\u304b\u306a\u3044\u304c\u3001\u305d\u306eACID\u6027\u306f\u672c\u5f53\u306b\u5fc5\u8981\u304b\uff1f\n\u72b6\u614b\u3092\u66f4\u65b0\u3057\u306a\u3044\u3001\u72b6\u614b\u306f\u30a4\u30d9\u30f3\u30c8\u306e\u84c4\u7a4d\u304b\u3089\u5224\u65ad\u3059\u308b\uff08CQRS\u3068\u3082\u89aa\u548c\u6027\u304c\u9ad8\u3044\uff09\n\n\n\n\nSpring Projects\n\n\"What's new in Spring Data\"\n[\u5143\u30bb\u30c3\u30b7\u30e7\u30f3]What's New in Spring Data?\n\nHopper\n\n\nSpring Framework 4.2\u30d9\u30fc\u30b9\nquery by example\n\nExample\u306bEntity\u4f8b\u3068\u4e00\u81f4\u6761\u4ef6\uff08ExampleMatcher\uff09\u3092\u6e21\u3059\nrepo.findAll(Example)\n\n\nOpen Projection\n\n\nfindAllProjectedBy()\n\n\n\n\nSpring Data 2.0\n\n\nSpring Framework 5.0 / JDK 8\u30d9\u30fc\u30b9\nreactive\uff08Mongo DB, Redis, Couchbase\uff09\n\n\n\n\n\"To Spring Security 4.1 and Beyond\"\nSpring Security 4.1 \u306e\u65b0\u6a5f\u80fd\n\n@formatter.off\nCookieCsrfTokenRepository\n\n\nwithHttpOnlyFalse()\u3092\u3064\u3051\u308b\u3068JS\u304b\u3089\u53d6\u5f97\u53ef\u80fd\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067XSRF-TOKEN\u306b\u683c\u7d0d\u3055\u308c\u308b\n\n\nContents Security Policy\n\n\n\u8a31\u53ef\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u53d6\u5f97\u5143\u3092\u5b9a\u7fa9\n\n\n\n@AuthenticationPrinciple\n\nController\u306e\u5f15\u6570\u3067\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\n\n\nPath Variable in Web Security Expressions\nmvcMatcher\n\n\nAntMatcher\u3060\u3068\u3001\u672b\u5c3e\u306b\"/\"\u3092\u8ca0\u8377\u3059\u308b\u3068\u30a2\u30af\u30bb\u30b9\u3067\u304d\u3066\u3057\u307e\u3046\n\n\n\n\nCaseStudy\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3068\u76e3\u8996 -> Spring Boot Acturator + extention endpoint\nCloud Config\u3067\u3001\u30c7\u30d7\u30ed\u30a4\u306a\u3057\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6319\u52d5\u3092\u5909\u66f4\nSpring Initializer\u3092fork\u3057\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\nMicroscervieces\u306f\u76ee\u7684\u306b\u3059\u308b\u3082\u306e\u3067\u306f\u306a\u304f\u3001\u5927\u304d\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5f90\u3005\u306b\u5206\u5272\u3057\u3066\u3044\u3063\u305f\u7d50\u679c\n\n\nSPRING DAY 2016\n\n11/18(\u91d1)9:30-18:30\nhttp://springday2016.springframework.jp/\n\n# 2016/9/3 SpringOne Platform 2016 \u5831\u544a\u4f1a \u53c2\u52a0\u30e1\u30e2\n* https://jsug.doorkeeper.jp/events/50931\n* SpringOne Platform 2016\n - 2016/8/1-4 @Las Vegas\n\n## \u30a4\u30d9\u30f3\u30c8\u5168\u4f53\u30fb\u30ad\u30fc\u30ce\u30fc\u30c8\n* \u4e3b\u50ac\u304cSpring\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u304b\u3089Pivotal\u793e\u306b\u5909\u308f\u3063\u305f\n - Pivotal Cloud Foundry\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u5897\u3048\u305f\n - \u53c2\u52a0\u80052,000\u4eba\u8d85\uff08\u6628\u5e74\u306e\u500d\uff09\n - \u65e5\u672c\u304b\u3089\u3082\u7d0430\u540d\u304c\u53c2\u52a0\uff08\u65e5\u672c\u4eba\u767a\u8868\u8005\u3082\uff09\n* \u30b9\u30dd\u30f3\u30b5\u30fc\u306e\u9854\u3076\u308c\u304c\u5927\u5e45\u306b\u5909\u5316\n - Accenture, Google, EMC, Microsoft\u306a\u3069\u5927\u4f01\u696d\u304c\u80a9\u3092\u4e26\u3079\u305f\n - NTT Data\u3082\u30b7\u30eb\u30d0\u30fc\u30b9\u30dd\u30f3\u30b5\u30fc\n* Case Study\u304c\u5897\u3048\u305f\n* \u57fa\u8abf\u8b1b\u6f14\n - \u30c4\u30fc\u30eb\u3060\u3051\u3067\u306a\u304f\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u30b5\u30a4\u30af\u30eb\u3092\u56de\u3059Culture\u304c\u91cd\u8981\uff08Pivotal Labs\u306e\u7d39\u4ecb\uff09\n - Spring\u306e\u6b69\u307f\n     + 2002 DI/AOP\n     + 2007 Annotation Config\n     + 2009 Boot/Cloud\n - Spring 5.0\n     + Reactive\u5bfe\u5fdc\u304c\u76ee\u7389\n     + 2017 Q1\u306b\u30ea\u30ea\u30fc\u30b9\u4e88\u5b9a\u3001Java SE9\u5bfe\u5fdc\u306f5.1\u3067\n - Spring 4.x\u306f2019\u5e74\u307e\u3067\u30b5\u30dd\u30fc\u30c8\n* [Spring 5.0\u306f\u6765\u6625\u30ea\u30ea\u30fc\u30b9\uff01 \u30af\u30e9\u30a6\u30c9\u30cd\u30a4\u30c6\u30a3\u30d6\u958b\u767a\u3001\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u5316\u306a\u3069\u6700\u65b0\u6280\u8853\u30fb\u4e8b\u4f8b\u306b\u3042\u3075\u308c\u305f4\u65e5\u9593](https://codezine.jp/article/detail/9631)\n\n## Spring Core\n### \"Modern Java Component Design with Spring Framework 4.3\", \"Spring MVC 4 Web Apps\"\n[Spring Framework \u3075\u308a\u304b\u3048\u308a\u30684.3\u65b0\u6a5f\u80fd](http://www.slideshare.net/kimulla/spring-framework-43)\n\n* 4.2\n - \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\uff1a\u30d5\u30a3\u30fc\u30eb\u30c9\u3092final\u306b\u3057\u3066immutable\u306b\u3067\u304d\u308b\n - Lazy Injection Point\n - \u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3000\n     + public @interface MyCustomeService{}\n     + \u4e0a\u66f8\u304d\u3057\u305f\u3044\u5c5e\u6027\u3060\u3051\u516c\u958b\u3067\u304d\u308b\n* 4.3\n - 4\u7cfb\u306e\u30e9\u30b9\u30c8\u30ea\u30ea\u30fc\u30b9\u30012019\u5e74\u307e\u3067\u30b5\u30dd\u30fc\u30c8\u3001SpringBoot1.4\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\n - Core Container\n     + \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\uff11\u3064\u306a\u3089@Autowired\u306f\u7701\u7565\u53ef\u80fd\u306b\n     + JavaConfig\u30af\u30e9\u30b9\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3067\u304d\u308b\u3088\u3046\u306b\n     + InjectionPoint like CDI\uff1a\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u5148\u306e\u30e1\u30bf\u60c5\u5831\u3092\u53d6\u308c\u308b\n     + \u3061\u306a\u307f\u306blombok\u3060\u3068\u3001@Slf3j\u3067Logger log\u304c\u5b9a\u7fa9\u3055\u308c\u308b\n - Web Improvements\n     + \u5408\u6210\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u8ffd\u52a0\u3001@GetMapping @RequestScope\n     + GET\u4ed8\u4e0e\u3067HEAD\u3068OPTION\u304c\u81ea\u52d5\u30b5\u30dd\u30fc\u30c8\n     + \u5f15\u6570\u306b@RequestAttribute(\"param1\") String param1 => servlet API\u306b\u4f9d\u5b58\u305b\u305a\u306b\u53d6\u308c\u308b\n\n## Reactive\n### \"From Imperative To Reactive Web Apps\", \"Reactor 3.0a JVM Foundation for Java 8 and Reactive Streams\"\n* Reactive Streams\n - Stream processing, Asynchronus, Non-blocking, Back pressure\n - \u51e6\u7406\u3057\u304d\u308c\u306a\u304f\u306a\u3063\u305f\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5897\u3084\u3059\u21d2\u30ea\u30bd\u30fc\u30b9\u3092\u52b9\u7387\u7684\u306b\u6d3b\u7528\n - Publisher\uff1a\u7121\u9650\u306b\u3054\u98ef\u3092\u51fa\u3057\u3066\u304f\u308b\u7530\u820e\u306e\u89aa\u621a\u3001Subscriber\uff1a\u5e30\u7701\u3057\u305f\u9752\u5e74\n* Reactor 2.x\uff1a\u6b63\u76f4\u8a00\u3063\u3066\u30af\u30bd\u3060\u3063\u305f\uff08\u3084\u308d\u3046\u3068\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u3059\u304e\u308b\u3001\u591a\u3059\u304e\u3066\u5206\u304b\u3089\u306a\u3044\uff09\n* Reactor 3.0\n - Publisher\n     + Mono[0|1]\u3068Flux[n]\n     + Reactive Streams\u306epublisher\u306e\u5b9f\u88c5\n     + RxJava(Netflix\u88fd)\u306fReactive Streams\u6e96\u62e0\u3092\u91cd\u8996\u3057\u3066\u3044\u306a\u3044\uff08\u30e6\u30fc\u30b6\u306e\u591a\u304f\u304cAndroid\uff09\n - Spring 5\u306fReactor Core\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3001Spring\u306e\u6b74\u53f2\u306e\u4e2d\u3067\u4f55\u304b\u306b\u4f9d\u5b58\u3059\u308b\u306e\u306f\u306f\u3058\u3081\u3066\n\n### \"A Lite Rx API for the JVM\"\n[SpringOne Platform 2016 \u5831\u544a\u4f1a (A Lite Rx API for the JVM)](https://speakerdeck.com/kainoque/springone-platform-2016-bao-gao-hui-a-lite-rx-api-for-the-jvm)\n\n* [\u5143\u30bb\u30c3\u30b7\u30e7\u30f3][A lite Rx API for the JVM](https://speakerdeck.com/sdeleuze/a-lite-rx-api-for-the-jvm)\n* [\u5143\u30bb\u30c3\u30b7\u30e7\u30f3][lite-rx-api-hands-on](https://github.com/reactor/lite-rx-api-hands-on)\n\n* Reactive\n - \u5e83\u7fa9\u306b\u306fnon-blocking\u3067event-driven\u306a\u30b7\u30b9\u30c6\u30e0\u3092\u5f62\u5bb9\u3059\u308b\u8a00\u8449\n - \u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\uff1a\u30b9\u30b1\u30fc\u30eb\u3001\u5b89\u5b9a\u7684\u306b\u52d5\u4f5c\u3001\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30d7\u30e9\u30f3\u30cb\u30f3\u30b0\u5bb9\u6613\u6027\n - BigData processing\u3001\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u306b\u4f9d\u5b58\u3059\u308bwebapp\u3001\u30c7\u30fc\u30bf\u751f\u6210\u5074\u3068\u5229\u7528\u5074\u306e\u51e6\u7406\u901f\u5ea6\u306b\u975e\u5bfe\u79f0\u6027\u304c\u3042\u308b\u30b7\u30b9\u30c6\u30e0\u3001\u5927\u91cf\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u634c\u304f\u5fc5\u8981\u306e\u3042\u308b\u30b7\u30b9\u30c6\u30e0\n* Reactive Streams\n - \u975e\u540c\u671f\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306e\u6a19\u6e96\u4ed5\u69d8\n - j.u.c.Flow\u3068\u3057\u3066Java9\u306b\u3082\u7d44\u307f\u8fbc\u307e\u308c\u308b\u4e88\u5b9a\n - Subscriber\u304c\u53d7\u3051\u53d6\u308b\u30c7\u30fc\u30bf\u306e\u500b\u6570\u3092\u3001\u81ea\u8eab\u3067\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u53ef\u80fd\uff08backpressure\uff09\n - Publisher, Subscriber, Subscription, Processor\n - Component A -> T1 -> Processor<T1, T2> -> T2 -> Component B\n* Reactive API Library\n - RxJava 2.0\n - Akka-Stream\n - Reactor Core\n* Reactor\n - \u30ea\u30bd\u30fc\u30b9\u306e\u52b9\u7387\u6027\u306b\u5f37\u304f\u30d5\u30a9\u30fc\u30ab\u30b9\n - debug, logging, test\u3092\u5bb9\u6613\u306b\u884c\u3048\u308b\n* Mono\n - 1\u500b\uff08\u307e\u305f\u306f0\u500b\uff09\u306e\u5024\u3092\u653e\u51fa\u3059\u308bPublisher\n - subscribe\u306bcallable\u3092\u6e21\u3059\u3068\u88cf\u5074\u3067subscription\u3092\u751f\u6210\u3057\u3066\u30d5\u30ed\u30fc\u304c\u6d41\u308c\u308b\n* Flux\n - \u8907\u6570\u306e\u5024\u3092emit\u3059\u308bPublisher\n* Scheduller\n - publish/subscribe\u3092\u884c\u3046\u30b9\u30ec\u30c3\u30c9\u306e\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u306efactory\n - single(), parallel(), elastic()\n* RxJava\u3068\u306e\u76f8\u4e92\u904b\u7528\n - Rxjava1Adapter\n* Reactor and Spring 5\n - Flux/Mono\u3092\u53d7\u3051\u53d6\u308a\u3001\u8fd4\u5374\u53ef\u80fd\u306aController\n - Flux/Mono\u3092\u8fd4\u5374\u53ef\u80fd\u306aHttpClient\u5b9f\u88c5\n - Spring Initializr\u3067\u624b\u8efd\u306b\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u308b\uff1aReactive Web(Spring Boot\u306f1.4.1 SNAPSHOT\u3092\u9078\u3076\u3053\u3068)\n* Reactor API Hands-on\n* \u9280\u306e\u5f3e\u4e38\u3067\u306f\u306a\u3044\n - \u5b89\u5b9a\u7684\u306a\u52d5\u4f5c\u3001\u4e88\u6e2c\u53ef\u80fd\u306a\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3068\u5f15\u304d\u63db\u3048\u306b\u3001\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306f\u3042\u308b\n     +  \u4f8b\uff1a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306equery\u6570\u306f\u5897\u3048\u308b\n - \u975e\u540c\u671f\u51e6\u7406\u7279\u6709\u306e\u8907\u96d1\u3055\u3001\u30c7\u30d0\u30c3\u30b0\u306e\u3057\u3065\u3089\u3055\u306f\u3042\u308b\n\n### \"Designing, Implementing, and Using Reactive APIs\"\n\n* [\u5143\u30bb\u30c3\u30b7\u30e7\u30f3][Designing, Implementing, and Using Reactive APIs](http://www.slideshare.net/SpringCentral/designing-implementing-and-using-reactive-apis)\n* \u5b9f\u7528\u7d4c\u9a13\u306b\u57fa\u3065\u3044\u305fReactive API\u306e\u8a2d\u8a08\u3001\u5b9f\u88c5\u3001\u4f7f\u7528\u6cd5\u3092\u7d39\u4ecb\n - https://github.com/cloudfoundry/cf-java-client\n* \u623b\u308a\u5024\u3092void\u306b\u3057\u3066\u306f\u3044\u3051\u306a\u3044\n - subscribe\u3059\u308b\u307e\u3067\u306f\u305f\u3060\u306e\u300c\u8a2d\u8a08\u66f8\u300d\u306b\u3059\u304e\u306a\u3044\n - \u4f5c\u3063\u305f\u8a2d\u8a08\u66f8\u3092\u623b\u308a\u5024\u3068\u3057\u3066\u8fd4\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b\n - Mono<Void> delete(String id)\n* Functional Style\u306e\u63a8\u5968\n - \u526f\u4f5c\u7528\u306e\u306a\u3044\u3001\u5358\u7d14\u3067\u5c0f\u3055\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u3064\u304f\u308a\u3001\u7d44\u307f\u5408\u308f\u305b\u3066\u5927\u304d\u306a\u51e6\u7406\u3092\u884c\u3046\n - \u7d44\u307f\u5408\u308f\u305b\u306e\u9053\u5177\uff1a\u9ad8\u968e\u95a2\u6570\uff08\u95a2\u6570\u3092\u5f15\u6570\u306b\u53d6\u308b\u3001map/flatmap\u306a\u3069\uff09\n - \u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u306b\u3088\u308b\u7d44\u307f\u7acb\u3066\uff08\u8907\u6570\u5f15\u6570\u3092\u53d6\u308b\u95a2\u6570\u306b\u306f\u3001\u88dc\u52a9\u95a2\u6570\u3068tuple\u3067\uff09\n - Pointfree Style\u306e\u63a8\u5968\n   + f = (+1)\n* \u6761\u4ef6\u5206\u5c90\n - \u30a8\u30e9\u30fc\u306b\u3088\u308b\u6761\u4ef6\u5206\u5c90\uff08otherwise\uff09\n - Empty\u306b\u3088\u308b\u6761\u4ef6\u5206\u5c90\uff08defaultWithEmpty\u306a\u3069\uff09\n - \u5024\u306b\u3088\u308b\u6761\u4ef6\u5206\u5c90\u306f\u3001if\u6587\u3092\u4f7f\u3063\u3066\u547d\u4ee4\u7684\u306b\u66f8\u3051\u3070\u3088\u3044\uff08Mono/Flux\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u76f4\u89b3\u7684\u306b\u7406\u89e3\u3057\u3065\u3089\u304f\u306a\u308b\uff09\n* \u30c6\u30b9\u30c8\u8f9b\u3044\u554f\u984c\n - \u975e\u540c\u671f\u51e6\u7406\u306a\u306e\u3067\u3001\u4ed5\u4e8b\u3092\u983c\u3093\u3060\u6642\u70b9\u3067\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306f\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\n - \u4ed6\u306e\u30b9\u30ec\u30c3\u30c9\u306e\u7d42\u4e86\u3092\u5f85\u3064\uff1ajava.util.concurrent.CountDownLatch\n - TestSubscriber\u21d2\u540c\u671f\u3055\u305b\u308b\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u81ea\u5206\u3067\u66f8\u304b\u306a\u304f\u3066\u3088\u304f\u306a\u308b\n     + **Reactor\u3067\u306f\u6e96\u5099\u4e2d\u30013.0.0.RELEASE\u3067\u306f\u9664\u304b\u308c\u305f**\u3001Clound Foundry Java Client\u3067\u306f\u72ec\u81ea\u306b\u5b9f\u88c5\u3057\u305f\u3082\u306e\u3092\u5229\u7528\n\n\n## Tracing\n### \"How to Properly Blame Things for Causing Latency: An Introduction to Distributed Tracing and Zipkin\", \"Implementing Microservices Tracing with Spring Cloud and Zipkin\", \"Let's Visualize Your Spring Boot Applications\"\n\n[[SpringOne2016] Distributed Tracing using Sleuth and Zipkin](https://speakerdeck.com/shintanimoto/springone2016-distributed-tracing-using-sleuth-and-zipkin) \n\n* \u5206\u6563\u30b7\u30b9\u30c6\u30e0\u3092\u7d44\u3080\u6642\u306b\u5fc5\u305a\u76f4\u9762\u3059\u308b\u554f\u984c\n   - \u3069\u3053\u3067\u554f\u984c\u304c\u8d77\u304d\u305f\u304b\u3001\u3069\u3053\u304c\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u304b\n* \u554f\u984c\u767a\u751f\u500b\u6240\u3092\u30ed\u30b0\u304b\u3089\u8abf\u3079\u308b\n - \u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066ID\u3092\u767a\u884c\u3057\u3066\u305d\u308c\u3092\u5171\u6709\n - Spring Clound Sleuth\n - \u30ea\u30af\u30a8\u30b9\u30c8\u5168\u4f53\uff1aTrace\u3001\u500b\u5225\u30ea\u30af\u30a8\u30b9\u30c8\uff1aSpan\n - HTTP/AMQP\u30d8\u30c3\u30c0\u306bID\u3092\u57cb\u3081\u308b\u3001\u53d7\u3051\u53d6\u3063\u3066ThreadLocal\u306b\u5165\u308c\u308b\u3001\u6b21\u306b\u6e21\u3059\u30fb\u30fb\u30fb\u306e\u7e70\u308a\u8fd4\u3057\n* \u30b5\u30fc\u30d3\u30b9\u306e\u69cb\u9020\u3092\u53ef\u8996\u5316\u3059\u308b\n - Sleuth\u3067\u96c6\u3081\u305f\u60c5\u5831\u3092\u4f7f\u3063\u3066\u3001\u9045\u3044\u3068\u3053\u308d\u3092\u63a2\u3057\u305f\u308a\u30b5\u30fc\u30d3\u30b9\u306e\u95a2\u9023\u3092\u898b\u305f\u3044\n - Zipkin\n     + Find Trace\n     + Dependencies\uff08\u30b5\u30fc\u30d3\u30b9\u306e\u95a2\u9023\u304c\u53ef\u8996\u5316\u3055\u308c\u308b\uff09\n* sleuth\u3068zipkin\u306e\u59cb\u3081\u65b9\n - Spring Initializr\u3067\"sleuth\" and \"zipkin\"\u3092\u63a2\u3059\n - zipkin\u5074\u304c\u843d\u3061\u3066\u3044\u305f\u5834\u5408\u3067\u3082\u6f0f\u308c\u306a\u304ftrace\u3059\u308b\u306b\u306f\u3001\u9593\u306bRabbitMQ\uff08\u304bKafka\uff09\u3092\u631f\u3080\n* [Netflix VIZCERAL](http://techblog.netflix.com/2016/08/vizceral-open-source.html)\n\n## Spring Cloud DataFlow\n### \"Data Microservices in the Cloud\"\n\n[\u5143\u30bb\u30c3\u30b7\u30e7\u30f3][Data Microservices in the Cloud](http://www.slideshare.net/SpringCentral/data-microservices-in-the-cloud)\n\n* ETL\u306b\u4ee3\u308f\u308b\u3082\u306e\n* Spring XD Streams/ ZooKeeper\n - stream1 = http | cassandra\n - \u8ab2\u984c\uff1ascale up / down\u3001upgrade\n* Refactoring to MSA\n - \u30b3\u30f3\u30c6\u30ca\u306b\u7d44\u307f\u8fbc\u307e\u308c\u305f\u8907\u6570\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089\u3001\u5358\u4f53\u3067\u5b9f\u884c\u3055\u308c\u308b\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30f3\u30a2\u30d7\u30ea\u3078\n - \u72ec\u81ea\u30e9\u30f3\u30bf\u30a4\u30e0\u304b\u3089\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u59d4\u4efb\u3078\n* Spring Cloud Stream\n - Spring Boot based event-driven microservice framework\n - kafka inspired\n - Message Broker\u3068\u4f1a\u8a71\u3067\u304d\u308b\n - XD-Container\u306f\u306a\u304f\u306a\u308a\u3001Runtime\u306fClound Foundry\u306a\u3069\u306b\u4efb\u305b\u308b\n* Spring Cloud Task\n - Spring Batch\u3068\u306e\u89aa\u548c\u6027\u304c\u9ad8\u3044\n\n## New Functional Web API in Spring 5\n* Annotation Hell -> Lambda  \n - Spark, Ratpack, vert.x\n* Lambda-oriented HTTP routing & processing\n - org.springframework.web.reactive.function\n - https://github.com/making/demo-lambda-routing\n - No Reflection. Lightweight & Fast, DI Container is not necesary\n - will be in Spring 5.0.0.M2 (Sep 15th)\n\n## Micorservices\n### \"Consumer Driven Contracts and Your Microservice Architecture\"\n\n* Consumer Drivern Contract\n - Consumer\u304cProducer\u306b\u671f\u5f85\u3059\u308b\u6a5f\u80fd\u3092Contract\u3068\u3057\u3066\u5171\u6709\u3057\u3001Producer\u306e\u5168Consumer\u306b\u5bfe\u3059\u308b\u8cac\u52d9\u3092\u307e\u3068\u3081\u305f\u3082\u306e\n - Producer\u3068Counsumer\u9593\u3067\u5408\u610f\u3057\u305fAPI\u306e\u5229\u7528\u65b9\u6cd5\n - \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30ec\u30d9\u30eb\u306eTDD\n - spring cloud contract\n* consumer\u5074\u3067contract\u3092\u4f5c\u6210\uff08Consumer Driven\uff09\u3057\u3066API\u306e\u5909\u66f4\u3092\u4fc3\u3059\n - groovy DSL -> json\u306b\u3057\u3066wiremock\u3067stub\u5316\u3057\u3066\u30c6\u30b9\u30c8\u3092\u901a\u3059\uff08spring cloud contract wiremock\uff09\n - producer\u306b\u5bfe\u3057\u3066contract\u306ePR\u3092\u51fa\u3059 -> producer\u5074\u306fPR\u3092\u53d7\u3051\u5165\u308c\u308b\u3068\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u304c\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\n\n### \"Developing Microservices with Aggregates\"\n[[SpringOne2016] Developing Microservices with Aggregates](https://speakerdeck.com/shintanimoto/springone2016-developing-microservices-with-aggregates)\n[\u5143\u30bb\u30c3\u30b7\u30e7\u30f3][Developing Microservices with Aggregates](http://www.slideshare.net/SpringCentral/developing-bmicroservices-with-aggregates)\n\n* SpringOne 2016 \u8c37\u672c\u3055\u3093\u7684\u30d9\u30b9\u30c8\u30bb\u30c3\u30b7\u30e7\u30f3\n* \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u3092\u3069\u3046\u3059\u308b\u306e\u304b\n - 2 phase commit\u306f\u3053\u306e\u5148 \u751f\u304d\u6b8b\u308b\u9078\u629e\u80a2\u3067\u306f\u306a\u3044\n- \uff11\u56de\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u30b3\u30fc\u30eb = \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7bc4\u56f2 = NoSQL\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u3057\u3066\u3044\u304f\n* Event driven\u3092\u7528\u3044\u305f\u7d50\u679c\u6574\u5408\u6027\n - \u30c7\u30fc\u30bf\u66f4\u65b0\uff0f\u30a4\u30d9\u30f3\u30c8\u767a\u884c \u21d2 event sourcing\uff08DB\u3092\u66f4\u65b0\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3059\u308b\uff09\n - \u5c65\u6b74\u306e\u7a4d\u307f\u91cd\u306d \u21d2 \u9806\u756a\u306f\u95a2\u4fc2\u306a\u304f\u7d50\u679c\u6574\u5408\u6027\u30d9\u30fc\u30b9\u3067\u8003\u3048\u308b\n - \u3069\u3046\u96c6\u7d04\u3059\u308b\u304b\u306f\u30dd\u30ea\u30b7\u30fc\u6b21\u7b2c\u3001\u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u30ab\u30fc\u30c9\u3067\u3042\u308c\u3070\u6700\u7d42\u7684\u306a\u72b6\u614b\u3092\u30e6\u30fc\u30b6\u306b\u78ba\u8a8d\u3055\u305b\u308b\n - ACID\u6027\u3092\u62c5\u4fdd\u3057\u305f\u3051\u308c\u3070RDBMS\u3067\u30ed\u30c3\u30af\u3057\u3066\u3084\u308b\u3057\u304b\u306a\u3044\u304c\u3001\u305d\u306eACID\u6027\u306f\u672c\u5f53\u306b\u5fc5\u8981\u304b\uff1f\n - \u72b6\u614b\u3092\u66f4\u65b0\u3057\u306a\u3044\u3001\u72b6\u614b\u306f\u30a4\u30d9\u30f3\u30c8\u306e\u84c4\u7a4d\u304b\u3089\u5224\u65ad\u3059\u308b\uff08CQRS\u3068\u3082\u89aa\u548c\u6027\u304c\u9ad8\u3044\uff09\n\n## Spring Projects\n### \"What's new in Spring Data\"\n\n[\u5143\u30bb\u30c3\u30b7\u30e7\u30f3][What's New in Spring Data?](http://www.slideshare.net/SpringCentral/whats-new-in-spring-data-64851606)\n\n- Hopper\n  - Spring Framework 4.2\u30d9\u30fc\u30b9\n  - query by example  \n      + Example\u306bEntity\u4f8b\u3068\u4e00\u81f4\u6761\u4ef6\uff08ExampleMatcher\uff09\u3092\u6e21\u3059\n      + repo.findAll(Example)\n - Open Projection\n      + findAllProjectedBy()\n* Spring Data 2.0\n - Spring Framework 5.0 / JDK 8\u30d9\u30fc\u30b9\n - reactive\uff08Mongo DB, Redis, Couchbase\uff09\n\n### \"To Spring Security 4.1 and Beyond\"\n[Spring Security 4.1 \u306e\u65b0\u6a5f\u80fd](http://www.slideshare.net/hitting1024/spring-security-41)\n\n* @formatter.off\n* CookieCsrfTokenRepository\n - withHttpOnlyFalse()\u3092\u3064\u3051\u308b\u3068JS\u304b\u3089\u53d6\u5f97\u53ef\u80fd\n - \u30c7\u30d5\u30a9\u30eb\u30c8\u3067XSRF-TOKEN\u306b\u683c\u7d0d\u3055\u308c\u308b\n* Contents Security Policy\n - \u8a31\u53ef\u3059\u308b\u30ea\u30bd\u30fc\u30b9\u53d6\u5f97\u5143\u3092\u5b9a\u7fa9\n* @AuthenticationPrinciple\n - Controller\u306e\u5f15\u6570\u3067\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\n* Path Variable in Web Security Expressions\n* mvcMatcher\n - AntMatcher\u3060\u3068\u3001\u672b\u5c3e\u306b\"/\"\u3092\u8ca0\u8377\u3059\u308b\u3068\u30a2\u30af\u30bb\u30b9\u3067\u304d\u3066\u3057\u307e\u3046\n\n## CaseStudy\n* \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3068\u76e3\u8996 -> Spring Boot Acturator + extention endpoint\n* Cloud Config\u3067\u3001\u30c7\u30d7\u30ed\u30a4\u306a\u3057\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6319\u52d5\u3092\u5909\u66f4\n* Spring Initializer\u3092fork\u3057\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n* Microscervieces\u306f\u76ee\u7684\u306b\u3059\u308b\u3082\u306e\u3067\u306f\u306a\u304f\u3001\u5927\u304d\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5f90\u3005\u306b\u5206\u5272\u3057\u3066\u3044\u3063\u305f\u7d50\u679c\n\n## SPRING DAY 2016\n - 11/18(\u91d1)9:30-18:30\n - http://springday2016.springframework.jp/\n", "tags": ["Java", "spring"]}