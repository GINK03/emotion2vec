{"context": " More than 1 year has passed since last update.\n\njsm \u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3001\u65e5\u672c\u4f01\u696d\u306e\u682a\u4fa1\u30c7\u30fc\u30bf\u3092Python\u3067\u53d6\u5f97\n\n\u4f8b\u3068\u3057\u3066\u3001\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9\uff08\u8a3c\u5238\u30b3\u30fc\u30c9: 8604\uff09 \u3068 \u5927\u548c\u8a3c\u5238\uff08\u8a3c\u5238\u30b3\u30fc\u30c9: 8601\uff09\u306e2015\u5e74\u5e74\u59cb\u304b\u30892015\u5e742\u670813\u65e5\u307e\u3067\u306e\u65e5\u6b21\uff08\u539f\u7cfb\u5217\uff09\u682a\u4fa1\u30c7\u30fc\u30bf\uff08\u59cb\u5024\u30fb\u7d42\u5024\u30fb\u9ad8\u5024\u30fb\u5b89\u5024\uff09\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3059\n\n\nPython 2.7\nimport jsm\nq = jsm.Quotes()\n\nimport datetime\n\nstart_date = datetime.date(2015,1,1)\nend_date = datetime.date(2015,2,13)\n\nnomura_holdings = q.get_historical_prices(8604, jsm.DAILY, start_date = start_date, end_date = end_date)\n\ndaiwa_securities = q.get_historical_prices(8601, jsm.DAILY, start_date = start_date, end_date = end_date)\n\nnomura_stock_list = [each_day_data.date for each_day_data in nomura_holdings]\n\nnomura_date_list = [each_day_data.date for each_day_data in nomura_holdings]\n\nnomura_open_list = [each_day_data.open for each_day_data in nomura_holdings]\n\nnomura_close_list = [each_day_data.close for each_day_data in nomura_holdings]\n\nnomura_high_list = [each_day_data.high for each_day_data in nomura_holdings]\n\nnomura_low_list = [each_day_data.low for each_day_data in nomura_holdings]\n\nfor (date, open, close, high, low) in zip(nomura_date_list[0:10], nomura_open_list[0:10], nomura_close_list[0:10],\\\nnomura_high_list[0:10], nomura_high_list[0:10]):\n    print(date, open, close, high, low)\n\n\n\n\n\n\n\u53d6\u5f97\u3057\u305f\u682a\u4fa1\u30c7\u30fc\u30bf\u3092\u3001\u30ea\u30b9\u30c8\u578b\u3084\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u6210\u578b\n\nPython 2.7\nnomura_date_str = [str(x)[0:10] for x in nomura_date_list]\n\nprint(nomura_date_str[0:10])\n\n\n\n\nPython 2.7\nnomura_daily_stock_df = pd.DataFrame([nomura_date_str, nomura_open_list, nomura_close_list, \\\nnomura_high_list, nomura_low_list])\n\nimport types\n\nprint(type(nomura_daily_stock_df))\n\n\n<class 'pandas.core.frame.DataFrame'>\n\n\n\n Python 2.7\nnomura_daily_stock_df\n\n\n\n\n\uff08 \u53c2\u8003 \uff09\n\n\n\u9006\u5f15\u304dPandas (DataFrame\u7de8)\n\n\n\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u4f5c\u308a\u65b9\u306f\u3001\u4ee5\u4e0b\u3092\u53c2\u8003\n\n\nHatena::Diary \u6771\u4eac\u3067\u5c3b\u3092\u6d17\u3046 \uff082012\u5e748\u670819\u65e5\u4ed8\uff09\u300cpandas\u30e1\u30e2\u300d\n\n\n\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u308b\nsmp = {'state' : ['Ohio', 'Ohio', 'Ohio', 'Nebada', 'Nebada'], \n            'year' : [2000, 2001, 2002, 2001, 2002],\n            'pop' : [1.5, 1.6, 1.7, 3.5, 4.3]}\nframe = DataFrame(smp)\n\n\nPython 2.7\nnomura_daily_stock = {'date':nomura_date_str, 'open':nomura_open_list,\\\n'close':nomura_close_list, 'high':nomura_high_list, 'low':nomura_low_list}\n\nnomura_daily_stock\n\n\n\n\nPython 2.7\nfrom pandas import DataFrame\n\nnomura_daily_stock_df = DataFrame(nomura_daily_stock)\n\nnomura_daily_stock_df\n\n\n\n\nPython 2.7\nplt.figure()\n\nnomura_daily_stock_df.plot()\n\nplt.show()\n\n\n\n\n\nPython 2.7\nplt.figure()\n\nnomura_daily_stock_df.plot()\n\nplt.savefig(\"\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1 \u65e5\u6b21\uff08\u539f\u578b\u5217\uff09\u63a8\u79fb\u30b0\u30e9\u30d5\")\n\n\n\n\n\u8907\u6570\u306e\u30b0\u30e9\u30d5\u3092\uff11\u3064\u306e\u30b0\u30e9\u30d5\u306e\u4e2d\u306b\u6bb5\u7d44\u3057\u3066\u63cf\u753b\u3055\u305b\u308b\u65b9\u6cd5\u306f\u3001\u66f8\u304d\u306e Qiita \u8a18\u4e8b\u3092\u53c2\u8003\n\n\nynakayama\u3055\u3093 Qiita \u6295\u7a3f\u8a18\u4e8b \uff082014\u5e743\u670810\u65e5\uff09\u300cpandas + matplotlib \u306b\u3088\u308b\u591a\u5f69\u306a\u30c7\u30fc\u30bf\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\u300d\n\n\nPython 2.7\nfrom pylab import *\n\nnomura_daily_stock_df.plot(subplots=True, figsize=(6,6); plt.legend(loc='best')\n\nplt.show()\n\n\n\n\n\nPython 2.7\nfrom pylab import *\n\nnomura_daily_stock_df.plot(subplots=True, figsize=(6,6); plt.legend(loc='best')\n\nplt.savefig(\"\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1 \u65e5\u6b21\uff08\u539f\u578b\u5217\uff09\u63a8\u79fb\u30b0\u30e9\u30d5\uff08\u6bb5\u7d44\u307f\u30b0\u30e9\u30d5\uff09\")\n\n\n\n\n\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092Excel\u306b\u66f8\u304d\u51fa\u3059\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u3092\u53c2\u7167\n\n\nkshigeru\u3055\u3093 Qiita \u8a18\u4e8b\uff082014\u5e7412\u670810\u65e5\uff09\u300cpandas \u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u30a8\u30af\u30bb\u30eb\u306b\u66f8\u304d\u51fa\u3059\u300d\n\n\nPython 2.7\nimport xlsxwriter\n\nnomura_daily_stock_df.to_excel('\u91ce\u6751Hldg.\u682a\u4fa1\u65e5\u6b21\u63a8\u79fb\uff08\u539f\u578b\u5217\uff09\u8a08\u6570\u30c7\u30fc\u30bf.xks', sheet_name='\u8a08\u6570\u30c7\u30fc\u30bf')\n\n\n\n\n\u65e5\u672c\u8a9e\u6587\u5b57\u5217\u3092 u( ) \u3067\u56f2\u3093\u3067\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u306b\u5909\u63db\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\n\n\nPython 2.7\nimport xlsxwriter\n\nnomura_daily_stock_df.to_excel(u'\u91ce\u6751Hldg.\u682a\u4fa1\u65e5\u6b21\u63a8\u79fb\uff08\u539f\u578b\u5217\uff09\u8a08\u6570\u30c7\u30fc\u30bf.xks', sheet_name=u'\u8a08\u6570\u30c7\u30fc\u30bf')\n\n\n\n\n\n\n\nPandas \u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u3001\u5e73\u5747\u5024\u3084\u6a19\u6e96\u504f\u5dee\u3092\u7b97\u51fa\u3057\u305f\u308a\u3001\u524d\u65e5\u6bd4\u3092\u7b97\u51fa\u3057\u3066\u307f\u308b\n\n\uff08 \u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003 \uff09\n\n\n ynakayama\u3055\u3093 Qiita \u8a18\u4e8b \uff082014\u5e743\u670811\u65e5\u4ed8\uff09\u300cpandas \u306b\u3088\u308b\u91d1\u878d\u30c7\u30fc\u30bf\u306e\u5206\u6790\u3068\u305d\u306e\u53ef\u8996\u5316 (1)\u300d \n\n\n\n\n\n\n\uff08 \u79fb\u52d5\u5e73\u5747 \u306a\u3069\u306e\u30ed\u30fc\u30ea\u30f3\u30b0\u95a2\u6570\u306e\u5b9f\u88c5\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3082\u53c2\u8003 \uff09\n\n\n\n\n\n\n\n\u30ec\u30dd\u30fc\u30c8\u306e\u81ea\u52d5\u30e1\u30fc\u30eb\u914d\u4fe1\uff08\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\uff09\n\n\n\uff08\u6a5f\u4f1a\u3092\u6539\u3081\u3066\u3001_HTML\u30e1\u30fc\u30eb\u306b\u30b0\u30e9\u30d5\u753b\u50cf\u3092\u57cb\u3081\u8fbc\u3093\u3060\u30e1\u30fc\u30eb\u3082\u914d\u4fe1\u3057\u3066\u307f\u305f\u3044\u3068\u304a\u3082\u3044\u307e\u3059\uff09\n\n\n\u753b\u50cf\u57cb\u3081\u8fbc\u307f\u578b\u306e HTML\u30e1\u30fc\u30eb\u306e\u914d\u4fe1\u306f\u3001Python \u3088\u308a\u3082\u3001PHP\u8a00\u8a9e\u3000\u3092\u4f7f\u3046\u65b9\u304c\u4e00\u822c\u7684\u304b\u3082\u3057\u308c\u307e\u305b\u3093\n\n\n\u6700\u5f8c\u306b\u3001\u51fa\u529b\u3055\u305b\u305fExcel Book \u3084 \u30b0\u30e9\u30d5\uff08png\u30d5\u30a1\u30a4\u30eb\uff09\u3092Gmail\u306b\u6dfb\u4ed8\u3057\u3066\u9001\u4fe1\u3057\u3066\u307f\u307e\u3059\n\n\n\uff08 \u6ce8\u610f\u70b9 \uff09\n\n\u30b3\u30fc\u30c9\u4e2d\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\uff08\u8907\u6570\uff09\u3092\u9806\u6b21\u53d6\u5f97\u3059\u308b\u90e8\u5206\u3067\u3001\u548c\u540d\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u6587\u5b57\u5217\u3092 u( ) \u3067\u56f2\u3080\u3068\u3001\u53d7\u4fe1\u3057\u305f\u30e1\u30fc\u30eb\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u304c\u4ef6\u540d\u3060\u3051\u3061\u3083\u3093\u3068\u3064\u304f\u3082\u306e\u306e\u3001\u4e2d\u8eab\u304c\u7a7a\u767d\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u306b\u63b2\u8f09\u3059\u308b\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u3001_u( ) _ \u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u3044\u308c\u305a\u306b\u3001\u305d\u306e\u307e\u307e\u65e5\u672c\u8a9e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u8a18\u8ff0\u3059\u308b\u3068\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u304c\u30b0\u30e9\u30d5\u306e\u4e2d\u8eab\u3064\u304d\u3067\u9001\u4fe1\u3067\u304d\u307e\u3059\n\nfor filename in ['\u91ce\u6751Hldg.\u682a\u4fa1\u65e5\u6b21\u63a8\u79fb\uff08\u539f\u7cfb\u5217\uff09\u8a08\u6570\u30c7\u30fc\u30bf.xls', '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1\u3000\u65e5\u6b21\uff08\u539f\u7cfb\u5217\uff09\u63a8\u79fb\u30b0\u30e9\u30d5.png',\\\n                 '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1\u3000\u65e5\u6b21\uff08\u539f\u7cfb\u5217\uff09\u63a8\u79fb\u30b0\u30e9\u30d5(\u6bb5\u7d44\u30b0\u30e9\u30d5\uff09.png', '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1\u9ad8\u5024 \u65e5\u6b21\u30c7\u30fc\u30bf \uff15\u65e5\u79fb\u52d5\u5e73\u5747\u7dda\u30b0\u30e9\u30d5.png']:\n\n\n\n email_Nomura_data_files_attachment.py\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\nimport smtplib\nfrom email.MIMEText import MIMEText\nfrom email.MIMEImage import MIMEImage\nfrom email.MIMEMultipart import MIMEMultipart\nfrom email.Header import Header\nfrom email.Utils import formatdate\n\ndef create_message(from_addr, to_addr, subject, body, encoding):\n    msg = MIMEMultipart()\n    msg['Subject'] = Header(subject, encoding)\n    msg['From'] = from_addr\n    msg['To'] = to_addr\n    msg['Date'] = formatdate()\n\n    related = MIMEMultipart('related')\n    alt = MIMEMultipart('alternative')\n    related.attach(alt)\n\n    content = MIMEText(body, 'plain', encoding)\n    alt.attach(content)\n\n    for filename in ['\u91ce\u6751Hldg.\u682a\u4fa1\u65e5\u6b21\u63a8\u79fb\uff08\u539f\u7cfb\u5217\uff09\u8a08\u6570\u30c7\u30fc\u30bf.xls', '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1\u3000\u65e5\u6b21\uff08\u539f\u7cfb\u5217\uff09\u63a8\u79fb\u30b0\u30e9\u30d5.png',\\\n                     '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1\u3000\u65e5\u6b21\uff08\u539f\u7cfb\u5217\uff09\u63a8\u79fb\u30b0\u30e9\u30d5(\u6bb5\u7d44\u30b0\u30e9\u30d5\uff09.png', '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1\u9ad8\u5024 \u65e5\u6b21\u30c7\u30fc\u30bf \uff15\u65e5\u79fb\u52d5\u5e73\u5747\u7dda\u30b0\u30e9\u30d5.png']:\n# \u8907\u6570\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f['\u30d5\u30a1\u30a4\u30eb\uff11' , '\u30d5\u30a1\u30a4\u30eb\uff12' , \u2026]\u306e\u5f62\u306b\u3059\u308b\u3002\n        fp = file('%s' % filename, 'rb')\n        img = MIMEImage(fp.read(), 'png', name=filename)\n        related.attach(img)\n\n    msg.attach(related)\n    return msg\n    pass\n\ndef send_via_gmail(from_addr, to_addr, msg):\n    s = smtplib.SMTP('smtp.gmail.com', 587)\n    s.ehlo()\n    s.starttls()\n    s.ehlo()\n    s.login('hirofumi.yashima2012@gmail.com', 'XXXXX')\n    s.sendmail(from_addr, [to_addr], msg.as_string())\n    s.close()\n\nif __name__ == '__main__':\n    from_addr = 'hirofumi.yashima2012@gmail.com'\n    to_addr = 'hirofumi.yashima2012@gmail.com'\n    title = '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9\u3000\u682a\u4fa1\u30c7\u30fc\u30bf\u9001\u4fe1'\n    body = 'Excel\u30d5\u30a1\u30a4\u30eb \u3068 \u30b0\u30e9\u30d5 \u3092\u6dfb\u4ed8\u3057\u307e\u3059\u3002'\n    msg = create_message(from_addr, to_addr, title, body, 'utf-8')\n    send_via_gmail(from_addr, to_addr, msg)\n\n\n\nPython 2.7\npython email_Nomura_data_files_attachment.py\n\n\n\n\n\uff08 \u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u4ed8\u304d\u306e\u96fb\u5b50\u30e1\u30fc\u30eb\u306e\u53d7\u4fe1\u6210\u529f\uff09\n\n\n\n\n\n\n\uff08 \u4eca\u5f8c\u306e\u5c55\u671b \uff09\n\u2160 \u4eca\u56de\u3001\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 to_excel \u30e1\u30bd\u30c3\u30c9\u3067 Excel \u306b\u4e00\u62ec\u51fa\u529b\u3059\u308b\u3060\u3051\u3067\u3057\u305f\u3002\u3088\u308a\u3001\u30ec\u30dd\u30fc\u30c8\u3089\u3057\u304f\u3059\u308b\u305f\u3081\u306b\u3001xlwt \u30e2\u30b8\u30e5\u30fc\u30eb \u306e sheet_object_name.write(\u5217\u6570, \u884c\u6570, \u51fa\u529b\u30c7\u30fc\u30bf\u5024, \u30bb\u30eb\u51fa\u529b\u66f8\u5f0f) \u3092\u500b\u5225\u306b\u8a18\u8ff0\u3057\u3066\u3001\u30c7\u30fc\u30bf\u9805\u76ee\u306e\u6b04\u540d \u3092\u8a18\u8ff0\u3057\u305f\u308a\u3001Excel\u30b7\u30fc\u30c8\u5185\u306e\u51fa\u529b\u9805\u76ee\u5225\u306e\u51fa\u529b\u9818\u57df\u306b\u3001\u30eb\u30fc\u30d7\u51e6\u7406\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u51fa\u3057\u3066\u307f\u305f\u3044\u3002\n *  for n, value in enumerate(data_list):; sheet_object_name.write(n+cell_row_head_number, cell_column_number, value);\n\n\n *   for n, value in enumerate(data_list):; sheet_object_name.write(cell_row_head_number, n+cell_column_number, value);\n\n\u2161 Excel BOOK \u306b\u51fa\u529b\u3059\u308b\u30c7\u30fc\u30bf\u3092\u3001\u3088\u308a\u91d1\u878d\u5b9f\u52d9\u306e\u306a\u304b\u3067\u4fa1\u5024\u3042\u308b\u5206\u6790\u3084\u30c7\u30fc\u30bf\u52a0\u5de5\u3092\u65bd\u3057\u305f\u7d50\u679c\u306e\u6570\u5024\u306b\u5909\u3048\u3066\u3044\u304d\u305f\u3044\u3002\n\u3000\u3000\u30001.\u3000\u5404\u7a2e\u91d1\u878d\u6307\u6a19\u5024\n\u3000\u3000\u30002.\u3000\u30c6\u30af\u30cb\u30ab\u30eb\u5206\u6790\u6307\u6a19\u5024\n\u3000\u3000\u30003.  \u30aa\u30d7\u30b7\u30e7\u30f3\u4fa1\u683c\u7b97\u5b9a\u30fb\u91d1\u878d\u5de5\u5b66\u4e0a\u306e\u53c2\u8003\u6307\u6570\u5024\n\u3000\u3000\u30004.\u3000M&A \u30c7\u30e5\u30fc\u30fb\u30c7\u30ea\u30b8\u30a7\u30f3\u30b9\u5be9\u67fb\u6642\u306e\u53c2\u8003\u6307\u6570\u5024\uff08\u8ca1\u52d9\u6307\u6a19etc\uff09\n\u3000\u3000\u30005.\u3000Basel 2 / 3 \u306a\u3069\u306e\u91d1\u878d\u6a5f\u95a2 \u30ea\u30b9\u30af\u7ba1\u7406\u6307\u6a19\u5024\u3084\u3001\u4fdd\u967a\u4f1a\u793e\u306e\u30bd\u30eb\u30d9\u30f3\u30b7\u30fc\u30fb\u30de\u30fc\u30b8\u30f3\u6bd4\u7387\u306a\u3069\n\u2162 \u96fb\u5b50\u30e1\u30fc\u30eb\u3067\u306e\u60c5\u5831\u5831\u544a\u5f62\u5f0f\u3092\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u30e1\u30fc\u30eb\u6dfb\u4ed8 \u306b\u52a0\u3048\u3066\u3001\u30e1\u30fc\u30eb\u672c\u6587\u3078\u306e\u30b0\u30e9\u30d5\u3084\u6570\u8868\u306e\u57cb\u3081\u8fbc\u307f\u8868\u793a\uff08html\u30e1\u30fc\u30eb\uff09\u306e\u5c0e\u5165\n\u2163 \u7d50\u679c\u3092\u3001jinja2 \u306a\u3069\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3 + html\u30d5\u30a1\u30a4\u30eb + D3.js \u3084 HighCharts \u306a\u3069\u306e\u52d5\u7684\uff08\u30e6\u30fc\u30b6\u5bfe\u8a71\u578b\uff09\u30b0\u30e9\u30d5\u306b\u3057\u3066\u3001\uff08\u4f1a\u54e1\u9650\u5b9a\uff09\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u306b\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u306a\u3069\u3082\u8a66\u307f\u3066\u307f\u305f\u3044\n### _jsm_ \u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3001\u65e5\u672c\u4f01\u696d\u306e\u682a\u4fa1\u30c7\u30fc\u30bf\u3092_Python_\u3067\u53d6\u5f97\n###### **\u4f8b\u3068\u3057\u3066\u3001\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9\uff08\u8a3c\u5238\u30b3\u30fc\u30c9: 8604\uff09 \u3068 \u5927\u548c\u8a3c\u5238\uff08\u8a3c\u5238\u30b3\u30fc\u30c9: 8601\uff09\u306e2015\u5e74\u5e74\u59cb\u304b\u30892015\u5e742\u670813\u65e5\u307e\u3067\u306e\u65e5\u6b21\uff08\u539f\u7cfb\u5217\uff09\u682a\u4fa1\u30c7\u30fc\u30bf\uff08\u59cb\u5024\u30fb\u7d42\u5024\u30fb\u9ad8\u5024\u30fb\u5b89\u5024\uff09\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3059**\n\n\n\n```{Python:Python 2.7}\nimport jsm\nq = jsm.Quotes()\n\nimport datetime\n\nstart_date = datetime.date(2015,1,1)\nend_date = datetime.date(2015,2,13)\n\nnomura_holdings = q.get_historical_prices(8604, jsm.DAILY, start_date = start_date, end_date = end_date)\n\ndaiwa_securities = q.get_historical_prices(8601, jsm.DAILY, start_date = start_date, end_date = end_date)\n\nnomura_stock_list = [each_day_data.date for each_day_data in nomura_holdings]\n\nnomura_date_list = [each_day_data.date for each_day_data in nomura_holdings]\n\nnomura_open_list = [each_day_data.open for each_day_data in nomura_holdings]\n\nnomura_close_list = [each_day_data.close for each_day_data in nomura_holdings]\n\nnomura_high_list = [each_day_data.high for each_day_data in nomura_holdings]\n\nnomura_low_list = [each_day_data.low for each_day_data in nomura_holdings]\n\nfor (date, open, close, high, low) in zip(nomura_date_list[0:10], nomura_open_list[0:10], nomura_close_list[0:10],\\\nnomura_high_list[0:10], nomura_high_list[0:10]):\n    print(date, open, close, high, low)\n```\n\n\n![pic_1.png](https://qiita-image-store.s3.amazonaws.com/0/43487/a19eafc3-4c7b-a5e0-60cb-05b69e66fd67.png)\n![pic_2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/d7cb6ca8-13a4-c5b2-367f-25120561957e.png)\n![pic_3.png](https://qiita-image-store.s3.amazonaws.com/0/43487/de89ae6f-99a9-7a75-9c81-74f25ad526eb.png)\n\n\n### \u53d6\u5f97\u3057\u305f\u682a\u4fa1\u30c7\u30fc\u30bf\u3092\u3001\u30ea\u30b9\u30c8\u578b\u3084\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u6210\u578b\n\n```{Python:Python 2.7}\nnomura_date_str = [str(x)[0:10] for x in nomura_date_list]\n\nprint(nomura_date_str[0:10])\n```\n\n![pic_4.png](https://qiita-image-store.s3.amazonaws.com/0/43487/100eb873-0732-0af6-5151-da2bd71a81f3.png)\n\n```{Python:Python 2.7}\nnomura_daily_stock_df = pd.DataFrame([nomura_date_str, nomura_open_list, nomura_close_list, \\\nnomura_high_list, nomura_low_list])\n\nimport types\n\nprint(type(nomura_daily_stock_df))\n```\n\n\n```\n<class 'pandas.core.frame.DataFrame'>\n```\n\n![pic_5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/8c7c395b-9533-94a8-2887-59170e8eeed5.png)\n\n\n\n```{Python: Python 2.7}\nnomura_daily_stock_df\n```\n\n![pic_6.png](https://qiita-image-store.s3.amazonaws.com/0/43487/b5552634-ebb9-1f7e-3bf5-a7be7e382095.png)\n\n\n#### **\uff08 \u53c2\u8003 \uff09**\n* [\u9006\u5f15\u304dPandas (DataFrame\u7de8)](http://blog.kzfmix.com/entry/1388138505)\n\n##### **\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u4f5c\u308a\u65b9\u306f\u3001\u4ee5\u4e0b\u3092\u53c2\u8003**\n* [Hatena::Diary \u6771\u4eac\u3067\u5c3b\u3092\u6d17\u3046 \uff082012\u5e748\u670819\u65e5\u4ed8\uff09\u300cpandas\u30e1\u30e2\u300d](http://d.hatena.ne.jp/dichika/20120819/1345385529)\n\n>\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u308b\n>\n>smp = {'state' : ['Ohio', 'Ohio', 'Ohio', 'Nebada', 'Nebada'], \n            'year' : [2000, 2001, 2002, 2001, 2002],\n            'pop' : [1.5, 1.6, 1.7, 3.5, 4.3]}\nframe = DataFrame(smp)\n\n\n```{Python:Python 2.7}\nnomura_daily_stock = {'date':nomura_date_str, 'open':nomura_open_list,\\\n'close':nomura_close_list, 'high':nomura_high_list, 'low':nomura_low_list}\n\nnomura_daily_stock\n```\n\n\n![pic_7.png](https://qiita-image-store.s3.amazonaws.com/0/43487/41564b32-a747-bb96-921f-82658b449a30.png)\n\n\n```{Python:Python 2.7}\nfrom pandas import DataFrame\n\nnomura_daily_stock_df = DataFrame(nomura_daily_stock)\n\nnomura_daily_stock_df\n```\n\n![pic_8.png](https://qiita-image-store.s3.amazonaws.com/0/43487/992a61a9-a68a-4551-50f6-c08663a403a3.png)\n\n\n\n```{Python:Python 2.7}\nplt.figure()\n\nnomura_daily_stock_df.plot()\n\nplt.show()\n```\n\n![add_1.png](https://qiita-image-store.s3.amazonaws.com/0/43487/f2f4aca8-1402-e61e-911a-c5f1e20e7d9b.png)\n\n\n![add_2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/091d7433-b88c-1105-8103-79aedcac6472.png)\n\n\n```{Python:Python 2.7}\nplt.figure()\n\nnomura_daily_stock_df.plot()\n\nplt.savefig(\"\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1 \u65e5\u6b21\uff08\u539f\u578b\u5217\uff09\u63a8\u79fb\u30b0\u30e9\u30d5\")\n```\n\n![add_3.png](https://qiita-image-store.s3.amazonaws.com/0/43487/ec053398-5c0f-f19a-fb62-065fb7e5f64c.png)\n\n\n\n\n\n#### **\u8907\u6570\u306e\u30b0\u30e9\u30d5\u3092\uff11\u3064\u306e\u30b0\u30e9\u30d5\u306e\u4e2d\u306b\u6bb5\u7d44\u3057\u3066\u63cf\u753b\u3055\u305b\u308b\u65b9\u6cd5\u306f\u3001\u66f8\u304d\u306e _Qiita_ \u8a18\u4e8b\u3092\u53c2\u8003**\n* [ynakayama\u3055\u3093 _Qiita_ \u6295\u7a3f\u8a18\u4e8b \uff082014\u5e743\u670810\u65e5\uff09\u300cpandas + matplotlib \u306b\u3088\u308b\u591a\u5f69\u306a\u30c7\u30fc\u30bf\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\u300d](http://qiita.com/ynakayama/items/68eff3cb146181329b48)\n\n```{Python:Python 2.7}\nfrom pylab import *\n\nnomura_daily_stock_df.plot(subplots=True, figsize=(6,6); plt.legend(loc='best')\n\nplt.show()\n```\n\n![add_4.png](https://qiita-image-store.s3.amazonaws.com/0/43487/81f92513-55fb-1fa0-0dea-b4239999a1a5.png)\n\n\n![add_5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/c6377a09-5d10-ce10-35e9-c4f3c5072861.png)\n\n```{Python:Python 2.7}\nfrom pylab import *\n\nnomura_daily_stock_df.plot(subplots=True, figsize=(6,6); plt.legend(loc='best')\n\nplt.savefig(\"\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1 \u65e5\u6b21\uff08\u539f\u578b\u5217\uff09\u63a8\u79fb\u30b0\u30e9\u30d5\uff08\u6bb5\u7d44\u307f\u30b0\u30e9\u30d5\uff09\")\n```\n\n![add_6.png](https://qiita-image-store.s3.amazonaws.com/0/43487/11ad5ca7-054d-45e9-9a54-dd6738b4dd91.png)\n\n\n#### **\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092Excel\u306b\u66f8\u304d\u51fa\u3059\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u3092\u53c2\u7167**\n* [kshigeru\u3055\u3093 _Qiita_ \u8a18\u4e8b\uff082014\u5e7412\u670810\u65e5\uff09\u300cpandas \u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u30a8\u30af\u30bb\u30eb\u306b\u66f8\u304d\u51fa\u3059\u300d](http://qiita.com/kshigeru/items/e44b11ff5835566bf402)\n\n```{Python:Python 2.7}\nimport xlsxwriter\n\nnomura_daily_stock_df.to_excel('\u91ce\u6751Hldg.\u682a\u4fa1\u65e5\u6b21\u63a8\u79fb\uff08\u539f\u578b\u5217\uff09\u8a08\u6570\u30c7\u30fc\u30bf.xks', sheet_name='\u8a08\u6570\u30c7\u30fc\u30bf')\n\n```\n\n#### **\u65e5\u672c\u8a9e\u6587\u5b57\u5217\u3092 u( ) \u3067\u56f2\u3093\u3067\u30e6\u30cb\u30b3\u30fc\u30c9\u6587\u5b57\u306b\u5909\u63db\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b**\n\n\n![add_7.png](https://qiita-image-store.s3.amazonaws.com/0/43487/e494d2ea-0090-cfec-4056-0cd7e468696e.png)\n\n\n```{Python:Python 2.7}\nimport xlsxwriter\n\nnomura_daily_stock_df.to_excel(u'\u91ce\u6751Hldg.\u682a\u4fa1\u65e5\u6b21\u63a8\u79fb\uff08\u539f\u578b\u5217\uff09\u8a08\u6570\u30c7\u30fc\u30bf.xks', sheet_name=u'\u8a08\u6570\u30c7\u30fc\u30bf')\n\n```\n\n![add_8.png](https://qiita-image-store.s3.amazonaws.com/0/43487/56338567-a5f2-3878-4417-19e08295ea3c.png)\n\n\n![add_9.png](https://qiita-image-store.s3.amazonaws.com/0/43487/1c940731-d15a-f9d9-306d-ebf489e4db8f.png)\n\n\n![add_10.png](https://qiita-image-store.s3.amazonaws.com/0/43487/d9f102f3-409e-ebd3-47e2-a52160ddd360.png)\n\n### _Pandas_ \u306e\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u3001\u5e73\u5747\u5024\u3084\u6a19\u6e96\u504f\u5dee\u3092\u7b97\u51fa\u3057\u305f\u308a\u3001\u524d\u65e5\u6bd4\u3092\u7b97\u51fa\u3057\u3066\u307f\u308b\n\n#### **\uff08 \u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003 \uff09**\n* [ ynakayama\u3055\u3093 _Qiita_ \u8a18\u4e8b \uff082014\u5e743\u670811\u65e5\u4ed8\uff09\u300cpandas \u306b\u3088\u308b\u91d1\u878d\u30c7\u30fc\u30bf\u306e\u5206\u6790\u3068\u305d\u306e\u53ef\u8996\u5316 (1)\u300d ](http://qiita.com/ynakayama/items/32b1ca2a108876f889cc)\n\n\n![pic_10.png](https://qiita-image-store.s3.amazonaws.com/0/43487/3093ffd9-6bbd-97e5-14a7-3e84c4729c97.png)\n\n\n![pic_11.png](https://qiita-image-store.s3.amazonaws.com/0/43487/688b220a-a1cc-6347-9a24-dfadc60f688c.png)\n\n\n![pic_12.png](https://qiita-image-store.s3.amazonaws.com/0/43487/357e163f-8684-127d-2102-95f19928ef26.png)\n\n![pic_13.png](https://qiita-image-store.s3.amazonaws.com/0/43487/28a38cc8-3077-3779-bfb4-4f522529c3d1.png)\n\n##### **\uff08 \u79fb\u52d5\u5e73\u5747 \u306a\u3069\u306e\u30ed\u30fc\u30ea\u30f3\u30b0\u95a2\u6570\u306e\u5b9f\u88c5\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3082\u53c2\u8003 \uff09**\n\n![pic_14.png](https://qiita-image-store.s3.amazonaws.com/0/43487/bb7679a8-9028-a033-3749-a178bdbc9457.png)\n\n\n![new_1.png](https://qiita-image-store.s3.amazonaws.com/0/43487/64616dbe-0afc-cbde-3e20-19617b5124dd.png)\n\n\n![new_2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/13fb03ad-8cde-1f28-61ae-822e201b1542.png)\n\n\n![new_3.png](https://qiita-image-store.s3.amazonaws.com/0/43487/1be18994-fcd0-7857-055f-755c10ed3657.png)\n\n\n![new_4.png](https://qiita-image-store.s3.amazonaws.com/0/43487/817c8282-3db0-e530-bfb5-3c15529d6aa3.png)\n\n### **\u30ec\u30dd\u30fc\u30c8\u306e\u81ea\u52d5\u30e1\u30fc\u30eb\u914d\u4fe1\uff08\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\uff09**\n###### **\uff08\u6a5f\u4f1a\u3092\u6539\u3081\u3066\u3001_HTML\u30e1\u30fc\u30eb\u306b\u30b0\u30e9\u30d5\u753b\u50cf\u3092\u57cb\u3081\u8fbc\u3093\u3060\u30e1\u30fc\u30eb\u3082\u914d\u4fe1\u3057\u3066\u307f\u305f\u3044\u3068\u304a\u3082\u3044\u307e\u3059\uff09**\n\n* \u753b\u50cf\u57cb\u3081\u8fbc\u307f\u578b\u306e _HTML_\u30e1\u30fc\u30eb\u306e\u914d\u4fe1\u306f\u3001Python \u3088\u308a\u3082\u3001_PHP\u8a00\u8a9e_\u3000\u3092\u4f7f\u3046\u65b9\u304c\u4e00\u822c\u7684\u304b\u3082\u3057\u308c\u307e\u305b\u3093\n\n##### **\u6700\u5f8c\u306b\u3001\u51fa\u529b\u3055\u305b\u305f_Excel Book_ \u3084 \u30b0\u30e9\u30d5\uff08_png_\u30d5\u30a1\u30a4\u30eb\uff09\u3092_Gmail_\u306b\u6dfb\u4ed8\u3057\u3066\u9001\u4fe1\u3057\u3066\u307f\u307e\u3059**\n\n##### **\uff08 \u6ce8\u610f\u70b9 \uff09**\n\u30b3\u30fc\u30c9\u4e2d\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\uff08\u8907\u6570\uff09\u3092\u9806\u6b21\u53d6\u5f97\u3059\u308b\u90e8\u5206\u3067\u3001\u548c\u540d\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u6587\u5b57\u5217\u3092 _u( )_ \u3067\u56f2\u3080\u3068\u3001\u53d7\u4fe1\u3057\u305f\u30e1\u30fc\u30eb\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u304c\u4ef6\u540d\u3060\u3051\u3061\u3083\u3093\u3068\u3064\u304f\u3082\u306e\u306e\u3001\u4e2d\u8eab\u304c\u7a7a\u767d\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u306b\u63b2\u8f09\u3059\u308b\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u3001_u( ) _ \u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306b\u3044\u308c\u305a\u306b\u3001\u305d\u306e\u307e\u307e\u65e5\u672c\u8a9e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3092\u8a18\u8ff0\u3059\u308b\u3068\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u304c\u30b0\u30e9\u30d5\u306e\u4e2d\u8eab\u3064\u304d\u3067\u9001\u4fe1\u3067\u304d\u307e\u3059\n\n>     for filename in ['\u91ce\u6751Hldg.\u682a\u4fa1\u65e5\u6b21\u63a8\u79fb\uff08\u539f\u7cfb\u5217\uff09\u8a08\u6570\u30c7\u30fc\u30bf.xls', '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1\u3000\u65e5\u6b21\uff08\u539f\u7cfb\u5217\uff09\u63a8\u79fb\u30b0\u30e9\u30d5.png',\\\n                     '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1\u3000\u65e5\u6b21\uff08\u539f\u7cfb\u5217\uff09\u63a8\u79fb\u30b0\u30e9\u30d5(\u6bb5\u7d44\u30b0\u30e9\u30d5\uff09.png', '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1\u9ad8\u5024 \u65e5\u6b21\u30c7\u30fc\u30bf \uff15\u65e5\u79fb\u52d5\u5e73\u5747\u7dda\u30b0\u30e9\u30d5.png']:\n\n\n```{Python: email_Nomura_data_files_attachment.py}\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\nimport smtplib\nfrom email.MIMEText import MIMEText\nfrom email.MIMEImage import MIMEImage\nfrom email.MIMEMultipart import MIMEMultipart\nfrom email.Header import Header\nfrom email.Utils import formatdate\n\ndef create_message(from_addr, to_addr, subject, body, encoding):\n    msg = MIMEMultipart()\n    msg['Subject'] = Header(subject, encoding)\n    msg['From'] = from_addr\n    msg['To'] = to_addr\n    msg['Date'] = formatdate()\n\n    related = MIMEMultipart('related')\n    alt = MIMEMultipart('alternative')\n    related.attach(alt)\n\n    content = MIMEText(body, 'plain', encoding)\n    alt.attach(content)\n\n    for filename in ['\u91ce\u6751Hldg.\u682a\u4fa1\u65e5\u6b21\u63a8\u79fb\uff08\u539f\u7cfb\u5217\uff09\u8a08\u6570\u30c7\u30fc\u30bf.xls', '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1\u3000\u65e5\u6b21\uff08\u539f\u7cfb\u5217\uff09\u63a8\u79fb\u30b0\u30e9\u30d5.png',\\\n                     '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1\u3000\u65e5\u6b21\uff08\u539f\u7cfb\u5217\uff09\u63a8\u79fb\u30b0\u30e9\u30d5(\u6bb5\u7d44\u30b0\u30e9\u30d5\uff09.png', '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9 \u682a\u4fa1\u9ad8\u5024 \u65e5\u6b21\u30c7\u30fc\u30bf \uff15\u65e5\u79fb\u52d5\u5e73\u5747\u7dda\u30b0\u30e9\u30d5.png']:\n# \u8907\u6570\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306f['\u30d5\u30a1\u30a4\u30eb\uff11' , '\u30d5\u30a1\u30a4\u30eb\uff12' , \u2026]\u306e\u5f62\u306b\u3059\u308b\u3002\n        fp = file('%s' % filename, 'rb')\n        img = MIMEImage(fp.read(), 'png', name=filename)\n        related.attach(img)\n\n    msg.attach(related)\n    return msg\n    pass\n\ndef send_via_gmail(from_addr, to_addr, msg):\n    s = smtplib.SMTP('smtp.gmail.com', 587)\n    s.ehlo()\n    s.starttls()\n    s.ehlo()\n    s.login('hirofumi.yashima2012@gmail.com', 'XXXXX')\n    s.sendmail(from_addr, [to_addr], msg.as_string())\n    s.close()\n\nif __name__ == '__main__':\n    from_addr = 'hirofumi.yashima2012@gmail.com'\n    to_addr = 'hirofumi.yashima2012@gmail.com'\n    title = '\u91ce\u6751\u30db\u30fc\u30eb\u30c7\u30a3\u30f3\u30b0\u30b9\u3000\u682a\u4fa1\u30c7\u30fc\u30bf\u9001\u4fe1'\n    body = 'Excel\u30d5\u30a1\u30a4\u30eb \u3068 \u30b0\u30e9\u30d5 \u3092\u6dfb\u4ed8\u3057\u307e\u3059\u3002'\n    msg = create_message(from_addr, to_addr, title, body, 'utf-8')\n    send_via_gmail(from_addr, to_addr, msg)\n```\n\n```{Python:Python 2.7}\npython email_Nomura_data_files_attachment.py\n```\n\n![new_5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/063ffd14-e07e-803e-0982-6fffe7c94263.png)\n\n##### **\uff08 \u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u4ed8\u304d\u306e\u96fb\u5b50\u30e1\u30fc\u30eb\u306e\u53d7\u4fe1\u6210\u529f\uff09**\n \n![new_6.png](https://qiita-image-store.s3.amazonaws.com/0/43487/33f7f941-2020-1add-c84e-106183fa1e7f.png)\n\n\n![new_7.png](https://qiita-image-store.s3.amazonaws.com/0/43487/1896c75f-6d1f-0b6c-3706-6fa712e40591.png)\n\n\n![new_8.png](https://qiita-image-store.s3.amazonaws.com/0/43487/f9e17671-1fe0-6bd9-5324-eea9c9fc9686.png)\n\n___\n\n### \uff08 \u4eca\u5f8c\u306e\u5c55\u671b \uff09\n\n\u2160 \u4eca\u56de\u3001\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 *to_excel* \u30e1\u30bd\u30c3\u30c9\u3067 _Excel_ \u306b\u4e00\u62ec\u51fa\u529b\u3059\u308b\u3060\u3051\u3067\u3057\u305f\u3002\u3088\u308a\u3001\u30ec\u30dd\u30fc\u30c8\u3089\u3057\u304f\u3059\u308b\u305f\u3081\u306b\u3001_xlwt_ \u30e2\u30b8\u30e5\u30fc\u30eb \u306e *sheet_object_name.write(\u5217\u6570, \u884c\u6570, \u51fa\u529b\u30c7\u30fc\u30bf\u5024, \u30bb\u30eb\u51fa\u529b\u66f8\u5f0f)* \u3092\u500b\u5225\u306b\u8a18\u8ff0\u3057\u3066\u3001**\u30c7\u30fc\u30bf\u9805\u76ee\u306e\u6b04\u540d** \u3092\u8a18\u8ff0\u3057\u305f\u308a\u3001Excel\u30b7\u30fc\u30c8\u5185\u306e\u51fa\u529b\u9805\u76ee\u5225\u306e\u51fa\u529b\u9818\u57df\u306b\u3001\u30eb\u30fc\u30d7\u51e6\u7406\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u51fa\u3057\u3066\u307f\u305f\u3044\u3002\n\n     *  for n, value in enumerate(data_list):; sheet_object_name.write(n+cell_row_head_number, cell_column_number, value);\n\n\n     *   for n, value in enumerate(data_list):; sheet_object_name.write(cell_row_head_number, n+cell_column_number, value);\n\n\n\u2161 _Excel BOOK_ \u306b\u51fa\u529b\u3059\u308b\u30c7\u30fc\u30bf\u3092\u3001\u3088\u308a\u91d1\u878d\u5b9f\u52d9\u306e\u306a\u304b\u3067\u4fa1\u5024\u3042\u308b\u5206\u6790\u3084\u30c7\u30fc\u30bf\u52a0\u5de5\u3092\u65bd\u3057\u305f\u7d50\u679c\u306e\u6570\u5024\u306b\u5909\u3048\u3066\u3044\u304d\u305f\u3044\u3002\n\u3000\u3000\u30001.\u3000\u5404\u7a2e\u91d1\u878d\u6307\u6a19\u5024\n\u3000\u3000\u30002.\u3000\u30c6\u30af\u30cb\u30ab\u30eb\u5206\u6790\u6307\u6a19\u5024\n\u3000\u3000\u30003.  \u30aa\u30d7\u30b7\u30e7\u30f3\u4fa1\u683c\u7b97\u5b9a\u30fb\u91d1\u878d\u5de5\u5b66\u4e0a\u306e\u53c2\u8003\u6307\u6570\u5024\n\u3000\u3000\u30004.\u3000_M&A_ \u30c7\u30e5\u30fc\u30fb\u30c7\u30ea\u30b8\u30a7\u30f3\u30b9\u5be9\u67fb\u6642\u306e\u53c2\u8003\u6307\u6570\u5024\uff08\u8ca1\u52d9\u6307\u6a19etc\uff09\n\u3000\u3000\u30005.\u3000Basel 2 / 3 \u306a\u3069\u306e\u91d1\u878d\u6a5f\u95a2 \u30ea\u30b9\u30af\u7ba1\u7406\u6307\u6a19\u5024\u3084\u3001\u4fdd\u967a\u4f1a\u793e\u306e\u30bd\u30eb\u30d9\u30f3\u30b7\u30fc\u30fb\u30de\u30fc\u30b8\u30f3\u6bd4\u7387\u306a\u3069\n\n\u2162 \u96fb\u5b50\u30e1\u30fc\u30eb\u3067\u306e\u60c5\u5831\u5831\u544a\u5f62\u5f0f\u3092\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u30e1\u30fc\u30eb\u6dfb\u4ed8 \u306b\u52a0\u3048\u3066\u3001\u30e1\u30fc\u30eb\u672c\u6587\u3078\u306e\u30b0\u30e9\u30d5\u3084\u6570\u8868\u306e\u57cb\u3081\u8fbc\u307f\u8868\u793a\uff08_html_\u30e1\u30fc\u30eb\uff09\u306e\u5c0e\u5165\n\n\u2163 \u7d50\u679c\u3092\u3001_jinja2_ \u306a\u3069\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3 + _html\u30d5\u30a1\u30a4\u30eb_ + D3.js \u3084 HighCharts \u306a\u3069\u306e\u52d5\u7684\uff08\u30e6\u30fc\u30b6\u5bfe\u8a71\u578b\uff09\u30b0\u30e9\u30d5\u306b\u3057\u3066\u3001\uff08\u4f1a\u54e1\u9650\u5b9a\uff09\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u306b\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u306a\u3069\u3082\u8a66\u307f\u3066\u307f\u305f\u3044\n", "tags": ["Python", "pandas", "api", "Finance", "statistics"]}