{"context": "\n\nNode::getChildByName()\u3067\"/\"\u533a\u5207\u308a\u3067\u518d\u5e30\u7684\u306b\u691c\u7d22\u3057\u53d6\u5f97\u3059\u308b\n\nCCNode.cpp\nNode* Node::getChildByName(const std::string& name) const\n{\n  std::string str = name;\n  auto pos = str.find(\"/\");\n  if( pos == 0 ){\n    str = str.substr(1,std::string::npos);\n    pos = str.find(\"/\");\n  }\n  std::string a = str.substr(0,pos);\n  std::string b;\n  if( pos != std::string::npos ){\n    b = str.substr(pos,std::string::npos);\n  }\n\n  std::hash<std::string> h;\n  size_t hash = h(a);\n\n  for (const auto& child : _children)\n  {\n    // Different strings may have the same hash code, but can use it to compare first for speed\n    if(child->_hashOfName == hash && child->_name.compare(a) == 0){\n      if( b.empty() || b == \"/\" ){\n        return child;\n      }\n      else{\n        return child->getChildByName(b);\n      }\n    }\n  }\n  return nullptr;\n}\n\n\n\n\u682a\u5f0f\u4f1a\u793e\u30ca\u30ce\u30b3\u30cd\u30af\u30c8\u3067\u306f\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u306a\u958b\u767a\u8005\u3092\u52df\u96c6\u4e2d\u3067\u3059\uff01\u304f\u308f\u3057\u304f\u306f\u3053\u3061\u3089\n# Node::getChildByName()\u3067\"/\"\u533a\u5207\u308a\u3067\u518d\u5e30\u7684\u306b\u691c\u7d22\u3057\u53d6\u5f97\u3059\u308b\n\n```cpp:CCNode.cpp\nNode* Node::getChildByName(const std::string& name) const\n{\n  std::string str = name;\n  auto pos = str.find(\"/\");\n  if( pos == 0 ){\n    str = str.substr(1,std::string::npos);\n    pos = str.find(\"/\");\n  }\n  std::string a = str.substr(0,pos);\n  std::string b;\n  if( pos != std::string::npos ){\n    b = str.substr(pos,std::string::npos);\n  }\n\n  std::hash<std::string> h;\n  size_t hash = h(a);\n\n  for (const auto& child : _children)\n  {\n    // Different strings may have the same hash code, but can use it to compare first for speed\n    if(child->_hashOfName == hash && child->_name.compare(a) == 0){\n      if( b.empty() || b == \"/\" ){\n        return child;\n      }\n      else{\n        return child->getChildByName(b);\n      }\n    }\n  }\n  return nullptr;\n}\n\n```\n\n\u682a\u5f0f\u4f1a\u793e\u30ca\u30ce\u30b3\u30cd\u30af\u30c8\u3067\u306f\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u306a\u958b\u767a\u8005\u3092\u52df\u96c6\u4e2d\u3067\u3059\uff01\u304f\u308f\u3057\u304f\u306f[\u3053\u3061\u3089](http://www.nanoconnect.co.jp/recruit/)\n", "tags": ["cocos2d-x"]}