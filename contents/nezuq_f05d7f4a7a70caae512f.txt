{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nPixiv\u306e\u30bf\u30b0\u691c\u7d22\u7d50\u679c\u306b\u5bfe\u3057\u3066\u7d71\u8a08\u89e3\u6790\u3092\u3059\u308b\u969b\u306b\u3001\n\u4f5c\u54c1\u5225\u306e\u30bf\u30b0\u60c5\u5831\u30921\u30bf\u30b01\u30ab\u30e9\u30e0\u306e\u8868\u30c7\u30fc\u30bf\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u3002\n\u52a0\u3048\u3066\u3001\u4f5c\u8005\u5225\u30fb\u6642\u7cfb\u5217\u5225\u306e\u89e3\u6790\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u5143\u306e\u7d50\u679c\u3082\u8868\u793a\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u3002\n\u5177\u4f53\u7684\u306b\u8a00\u3048\u3070\u3001(A)\u304b\u3089(B)\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u3002\n\u305d\u306e\u305f\u3081\u3001\u4ee5\u524d\u306eRuby\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3057\u305f\u3002\n(A)\n0000000,000000,jpg,...,\u30bf\u30b01 \u30bf\u30b02 \u30bf\u30b03,...,http\n0000000,000000,jpg,...,\u30bf\u30b01 \u30bf\u30b03 \u30bf\u30b04,...,http\n(B)\nillust_id,user_id,extension,...,tags,...,user_url,\u30bf\u30b01,\u30bf\u30b02,\u30bf\u30b03,\u30bf\u30b04\n0000000,000000,jpg,...,\u30bf\u30b01 \u30bf\u30b02 \u30bf\u30b03,...,http,1,1,1,0\n0000000,000000,jpg,...,\u30bf\u30b01 \u30bf\u30b03 \u30bf\u30b04,...,http,1,0,1,1\n\n\u30c7\u30fc\u30bf\n-> Pixiv\u691c\u7d22\u7d50\u679c\u3092CSV\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308bHTML\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u305f\n\n\u30b3\u30fc\u30c9\n\npxcsv2tagtable.rb\n# coding: UTF-8\n\n=begin\npxcsv2tagtable.rb\nCopyright (c) 2014 nezuq\nThis software is released under the MIT License.\nhttp://opensource.org/licenses/mit-license.php\n=end\n\nrequire 'csv'\n\n#\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\nINPUT_CSV = 'INPUT.csv'\n#\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\nOUTPUT_CSV = 'OUTPUT.csv'\n#\u3057\u304d\u3044\u5024\uff08\u51fa\u73fe\u983b\u5ea6\u304c\u6307\u5b9a\u7bc4\u56f2\u5916\u306e\u30bf\u30b0\u306e\u30ab\u30e9\u30e0\u306f\u51fa\u529b\u3057\u306a\u3044\uff09\n#MAX_FREQUENCY = 1.000\n#MIN_FREQUENCY = 0.005\n#\u3057\u304d\u3044\u5024\uff08\u51fa\u73fe\u56de\u6570\u304c\u6307\u5b9a\u7bc4\u56f2\u5916\u306e\u30bf\u30b0\u306e\u30ab\u30e9\u30e0\u306f\u51fa\u529b\u3057\u306a\u3044\uff09\nMAX_COUNT = 9999\nMIN_COUNT = 3\n#\u8868\u793a\u3057\u306a\u3044\u30bf\u30b0\u306e\u30d1\u30bf\u30fc\u30f3\nUNDISP_KEYPATTERN = /\u6f2b\u753b|\u843d\u66f8\u304d/\n#\u5143\u30c7\u30fc\u30bf\u306e\u5217\u540d\nORIGINAL_COLUMNS = %w(illust_id user_id extension title server_no user_name illust_128_url x1 x2 illust_480mw_url x3 x4 illust_entry_dt tags tool_name evaluate_cnt evaluate_sum view_cnt caption page_cnt x5 x6 x7 x8 user_disp_id x9 r18_flg x10 x11 user_url)\n#\u5143\u30c7\u30fc\u30bf\u306e\u8868\u793a\u30d5\u30e9\u30b0\nDISP_ORIGINAL_COLUMNS = true\n\nh_org = {}\nh = {}\nclm = []\nCSV.foreach(INPUT_CSV, encoding: \"UTF-8\") do |row|\n    ORIGINAL_COLUMNS.each_with_index do |key, i|\n        h_org[key] = clm.clone if (! h_org[key])\n        h_org[key].push(row[i])\n    end if (DISP_ORIGINAL_COLUMNS)\n    tags = row[13] ? row[13].split(' ') : []\n    (h.keys | tags).each do |key|\n        h[key] = clm.clone if (! h[key])\n        h[key].push(tags.include?(key) ? 1 : 0)\n    end\n    clm.push(0)\nend\n\nsum = ->(ary){ary.reduce {|x, y| x + y}}\ncnt = h.values[0].length\nlst = h.delete_if {|key, ary|\n#        (key =~ UNDISP_KEYPATTERN) || !((sum.call(ary)*1.000/cnt).between?(MIN_FREQUENCY, MAX_FREQUENCY))\n       (key =~ UNDISP_KEYPATTERN) || !((sum.call(ary)).between?(MIN_COUNT, MAX_COUNT))\n    }.sort_by{\n        |key, ary| -sum.call(ary)\n    }\n\nCSV.open(OUTPUT_CSV, \"wb\") do |csv|\n    hdr = []\n    h_org.each do |key,val|\n            hdr.push(key)\n    end if (DISP_ORIGINAL_COLUMNS)\n    for i in 0..(lst.length - 1) do\n        hdr.push(lst[i][0])\n    end\n    csv << hdr\n    for i in 0..(cnt - 1) do\n        row = []\n        h_org.each do |key,val|\n            row.push(val[i])\n        end\n        for j in 0..(lst.length - 1) do\n            row.push(lst[j][1][i])\n        end\n        csv << row\n    end\nend\n\nputs \"end!\"\n\n\n#\u6982\u8981\nPixiv\u306e\u30bf\u30b0\u691c\u7d22\u7d50\u679c\u306b\u5bfe\u3057\u3066\u7d71\u8a08\u89e3\u6790\u3092\u3059\u308b\u969b\u306b\u3001\n\u4f5c\u54c1\u5225\u306e\u30bf\u30b0\u60c5\u5831\u30921\u30bf\u30b01\u30ab\u30e9\u30e0\u306e\u8868\u30c7\u30fc\u30bf\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u3002\n\u52a0\u3048\u3066\u3001\u4f5c\u8005\u5225\u30fb\u6642\u7cfb\u5217\u5225\u306e\u89e3\u6790\u3082\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u5143\u306e\u7d50\u679c\u3082\u8868\u793a\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u3002\n\u5177\u4f53\u7684\u306b\u8a00\u3048\u3070\u3001(A)\u304b\u3089(B)\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u3002\n\u305d\u306e\u305f\u3081\u3001[\u4ee5\u524d\u306eRuby\u30b3\u30fc\u30c9](http://qiita.com/nezuq/items/69d15011b6c4b73830b7)\u3092\u4fee\u6b63\u3057\u305f\u3002\n\n(A)\n0000000,000000,jpg,...,\u30bf\u30b01 \u30bf\u30b02 \u30bf\u30b03,...,http\n0000000,000000,jpg,...,\u30bf\u30b01 \u30bf\u30b03 \u30bf\u30b04,...,http\n\n(B)\nillust_id,user_id,extension,...,tags,...,user_url,\u30bf\u30b01,\u30bf\u30b02,\u30bf\u30b03,\u30bf\u30b04\n0000000,000000,jpg,...,\u30bf\u30b01 \u30bf\u30b02 \u30bf\u30b03,...,http,1,1,1,0\n0000000,000000,jpg,...,\u30bf\u30b01 \u30bf\u30b03 \u30bf\u30b04,...,http,1,0,1,1\n\n#\u30c7\u30fc\u30bf\n[-> Pixiv\u691c\u7d22\u7d50\u679c\u3092CSV\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308bHTML\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u305f](http://qiita.com/nezuq/items/55800d55c03606e0b13c)\n\n#\u30b3\u30fc\u30c9\n```ruby:pxcsv2tagtable.rb\n# coding: UTF-8\n\n=begin\npxcsv2tagtable.rb\nCopyright (c) 2014 nezuq\nThis software is released under the MIT License.\nhttp://opensource.org/licenses/mit-license.php\n=end\n\nrequire 'csv'\n\n#\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u540d\nINPUT_CSV = 'INPUT.csv'\n#\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\nOUTPUT_CSV = 'OUTPUT.csv'\n#\u3057\u304d\u3044\u5024\uff08\u51fa\u73fe\u983b\u5ea6\u304c\u6307\u5b9a\u7bc4\u56f2\u5916\u306e\u30bf\u30b0\u306e\u30ab\u30e9\u30e0\u306f\u51fa\u529b\u3057\u306a\u3044\uff09\n#MAX_FREQUENCY = 1.000\n#MIN_FREQUENCY = 0.005\n#\u3057\u304d\u3044\u5024\uff08\u51fa\u73fe\u56de\u6570\u304c\u6307\u5b9a\u7bc4\u56f2\u5916\u306e\u30bf\u30b0\u306e\u30ab\u30e9\u30e0\u306f\u51fa\u529b\u3057\u306a\u3044\uff09\nMAX_COUNT = 9999\nMIN_COUNT = 3\n#\u8868\u793a\u3057\u306a\u3044\u30bf\u30b0\u306e\u30d1\u30bf\u30fc\u30f3\nUNDISP_KEYPATTERN = /\u6f2b\u753b|\u843d\u66f8\u304d/\n#\u5143\u30c7\u30fc\u30bf\u306e\u5217\u540d\nORIGINAL_COLUMNS = %w(illust_id user_id extension title server_no user_name illust_128_url x1 x2 illust_480mw_url x3 x4 illust_entry_dt tags tool_name evaluate_cnt evaluate_sum view_cnt caption page_cnt x5 x6 x7 x8 user_disp_id x9 r18_flg x10 x11 user_url)\n#\u5143\u30c7\u30fc\u30bf\u306e\u8868\u793a\u30d5\u30e9\u30b0\nDISP_ORIGINAL_COLUMNS = true\n\nh_org = {}\nh = {}\nclm = []\nCSV.foreach(INPUT_CSV, encoding: \"UTF-8\") do |row|\n    ORIGINAL_COLUMNS.each_with_index do |key, i|\n        h_org[key] = clm.clone if (! h_org[key])\n        h_org[key].push(row[i])\n    end if (DISP_ORIGINAL_COLUMNS)\n    tags = row[13] ? row[13].split(' ') : []\n    (h.keys | tags).each do |key|\n        h[key] = clm.clone if (! h[key])\n        h[key].push(tags.include?(key) ? 1 : 0)\n    end\n    clm.push(0)\nend\n\nsum = ->(ary){ary.reduce {|x, y| x + y}}\ncnt = h.values[0].length\nlst = h.delete_if {|key, ary|\n#        (key =~ UNDISP_KEYPATTERN) || !((sum.call(ary)*1.000/cnt).between?(MIN_FREQUENCY, MAX_FREQUENCY))\n       (key =~ UNDISP_KEYPATTERN) || !((sum.call(ary)).between?(MIN_COUNT, MAX_COUNT))\n    }.sort_by{\n        |key, ary| -sum.call(ary)\n    }\n\nCSV.open(OUTPUT_CSV, \"wb\") do |csv|\n    hdr = []\n    h_org.each do |key,val|\n            hdr.push(key)\n    end if (DISP_ORIGINAL_COLUMNS)\n    for i in 0..(lst.length - 1) do\n        hdr.push(lst[i][0])\n    end\n    csv << hdr\n    for i in 0..(cnt - 1) do\n        row = []\n        h_org.each do |key,val|\n            row.push(val[i])\n        end\n        for j in 0..(lst.length - 1) do\n            row.push(lst[j][1][i])\n        end\n        csv << row\n    end\nend\n\nputs \"end!\"\n```\n", "tags": ["Ruby1.9.3", "pixiv", "Pixiv\u7d71\u8a08\u30b7\u30ea\u30fc\u30ba"]}