{"context": " More than 1 year has passed since last update.\n\nLaravel5\u3067\u5909\u66f4\u306b\u5f37\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u7d4c\u8cbb(\u672c)\u3092\u8a18\u9332\u3059\u308b\u3060\u3051\u306eWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3002\n\u65e5\u4ed8\u3001\u30bf\u30a4\u30c8\u30eb\u3001\u4fa1\u683c\u3001URL\u30921\u30c6\u30fc\u30d6\u30eb\u306b\u3057\u3066MySQL\u3078\u683c\u7d0d\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nhttps://github.com/niiyz/Laravel-DDD\n\n\n\nLaravel\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n% composer create-project laravel/laravel keihi\n\n% cd keihi\n% php artisan -V \nLaravel Framework version 5.1.20 (LTS)\n\n\n\u540d\u524d\u7a7a\u9593\u3092\u66f4\u65b0\nKeihi\u3068\u3044\u3046\u540d\u524d\u7a7a\u9593\u306b\u3057\u307e\u3059\u3002\n// namespace\u3092\u300cApp\u300d\u304b\u3089\u300cKeihi\u300d\u3078\u5909\u66f4\n% php artisan app:name Keihi\n\nnamespace\u6307\u5b9a\u3057\u3066\u3042\u308b\u7b87\u6240\u304c\u5168\u90e8\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3055\u308c\u307e\u3059\u3002\n\ncomposer.json\n         \"psr-4\": {\n-            \"App\\\\\": \"app/\"\n+            \"Keihi\\\\\": \"app/\"\n         }\n\n\n\napp/Console/Kernel.php\n <?php\n\n-namespace App\\Console;\n+namespace Keihi\\Console;\n\n\n\n\nDatabase\u3092\u7528\u610f\n\nMAMP\u3067MYSQL\u30b5\u30fc\u30d0\u30fc\u8d77\u52d5\u3001UTF8\u3067DB\u4f5c\u6210\u3002\n\u4ee5\u4e0b\u3001MAMP\u306e\u30bd\u30b1\u30c3\u30c8\u3067\u7e4b\u3050\u3068\u304d\u306b\u5fc5\u8981\u306a\u51e6\u7406\u3002\n\nUNIX_SOCKET\u8ffd\u8a18\n\n/config/database.php\n        'mysql' => [\n            'driver'    => 'mysql',\n            'unix_socket' => env('DB_UNIX_SOCKET'),// 1\u884c\u8ffd\u8a18\n            'host'      => env('DB_HOST', 'localhost'),\n            'database'  => env('DB_DATABASE', 'forge'),\n\n\n\n.env\u306eDB\u8a2d\u5b9a\u3092\u7de8\u96c6\u3057\u3066DB_UNIX_SOCKET\u306f\u8ffd\u8a18\u3002\n\n.env\nDB_UNIX_SOCKET=/Applications/MAMP/tmp/mysql/mysql.sock\nDB_HOST=localhost\nDB_DATABASE=keihi_db\nDB_USERNAME=test\nDB_PASSWORD=test\n\n\n\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\n\n\u4f5c\u6210\u30b3\u30de\u30f3\u30c9\n% php artisan make:migration create_keihi_table --create=keihi \nCreated Migration: 2015_10_23_235515_create_keihi_table\n\n\n\u30d5\u30a1\u30a4\u30eb\u7de8\u96c6\n\n/database/migrations/2015_10_23_235515_create_keihi_table.php\npublic function up()\n{\n    Schema::create('keihi', function (Blueprint $table) {\n        $table->increments('id');       // ID\n        $table->char('title', 100);     // \u30bf\u30a4\u30c8\u30eb\n        $table->integer('price');       // \u4fa1\u683c\n        $table->text('url');            // URL\n        $table->timestamps();           // \u4f5c\u6210\u6642\u523b\n     });\n}\n\n\n\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\nMySQL\u306b\u30c6\u30fc\u30d6\u30eb\u304c\u4f5c\u6210\u3002(keihi\u4ee5\u5916\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b58\u5728\u3059\u308b\u3082\u306e)\n% php artisan migrate\nMigration table created successfully.\nMigrated: 2014_10_12_000000_create_users_table\nMigrated: 2014_10_12_100000_create_password_resets_table\nMigrated: 2015_10_23_235515_create_keihi_table\n\n\n\u30a8\u30ec\u30af\u30a8\u30f3\u30c8\u4f5c\u6210\nKeihi\u30e2\u30c7\u30eb(/app/Keihi.php)\u3092\u4f5c\u6210\u3002\n% php artisan make:model Keihi\n\n\n\u30a8\u30ec\u30af\u30a8\u30f3\u30c8\u7de8\u96c6\nKeihi\u30e2\u30c7\u30eb\u306b\u7d10\u3065\u304f\u30c6\u30fc\u30d6\u30eb\u3092\u300ckeihi\u300d\u306b\u8a2d\u5b9a\u3002\n\n/app/Keihi.php\n<?php\n\nnamespace Keihi;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Keihi extends Model\n{\n    protected $table = 'keihi';\n}\n\n\n\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u4f5c\u6210\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u4f5c\u6210\n\n/app/Repositories/KeihiInterface.php\n<?php\n\n/**\n * Interface KeihiInterface\n */\ninterface KeihiInterface\n{\n    /**\n     * \u53d6\u5f97\n     * @param $id\n     * @return mixed\n     */\n    public function get($id);\n\n    /**\n     * \u4e00\u89a7\u53d6\u5f97\n     * @return mixed\n     */\n    public function getList();\n\n    /**\n     * \u66f4\u65b0\n     * @param $id\n     * @param $data\n     * @return mixed\n     */\n    public function update($id, $data);\n\n    /**\n     * \u65b0\u898f\u767b\u9332\n     * @param $data\n     * @return mixed\n     */\n    public function create($data);\n\n    /**\n     * \u524a\u9664\n     * @param $id\n     * @return mixed\n     */\n    public function delete($id);\n}\n\n\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u5b9f\u88c5\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f7f\u7528\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30a8\u30ec\u30af\u30a8\u30f3\u30c8\u30e2\u30c7\u30eb\u3092\u4f9d\u5b58\u6ce8\u5165\u3057\u307e\u3059\u3002\n\n/app/Repositories/KeihiRepository.php\n<?php\n\nnamespace Keihi\\Repositories;\n\nuse Keihi\\Repositories\\KeihiInterface;\nuse Keihi\\Keihi;\n\n/**\n * Class KeihiRepository\n * @package Keihi\\Repositories\n */\nclass KeihiRepository implements KeihiInterface\n{\n    /**\n     * @var Keihi\n     */\n    protected $keihi;\n\n    /**\n     * @param Keihi $keihi\n     */\n    public function __construct(Keihi $keihi)\n    {\n        $this->keihi = $keihi;\n    }\n\n    /**\n     * \u53d6\u5f97\n     * @param $id\n     * @return mixed\n     */\n    public function get($id)\n    {\n\u3000\u3000\u3000\u3000\u3000\n    }\n\n\n\n\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u4f5c\u6210\n\u30ea\u30dd\u30b8\u30c8\u30ea\u7528\u306e\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u4f5c\u6210\nphp artisan make:provider RepositoryProvider\n\n\n\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u7de8\u96c6\n\n/app/Providers/RepositoryProvider.php\n    /**\n     * Register the application services.\n     *\n     * @return void\n     */\n    public function register()\n    {\n        // \u7d4c\u8cbb\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30b9\u3068\u7d4c\u8cbb\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u9023\u7d50\n        $this->app->bind(KeihiInterface::class, KeihiRepository::class);\n    }\n\n\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u306e\u8aad\u8fbc\n\n/config/app.php\n        /*\n         * Application Service Providers...\n         */\n        Keihi\\Providers\\AppServiceProvider::class,\n        Keihi\\Providers\\AuthServiceProvider::class,\n        Keihi\\Providers\\EventServiceProvider::class,\n        Keihi\\Providers\\RouteServiceProvider::class,\n        Keihi\\Providers\\RepositoryProvider::class,// \uff11\u884c\u8ffd\u52a0\n    ],\n\n\n\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u6295\u5165\n\n\u30b7\u30fc\u30c0\u30fc\u4f5c\u6210\n% php artisan make:seeder KeihiSeeder\n\n\n\u30b7\u30fc\u30c0\u30fc\u7de8\u96c6\n\u30a8\u30ec\u30af\u30a8\u30f3\u30c8\u30e2\u30c7\u30eb\u3092\u5229\u7528\u3057\u3066\u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u3092\u8a18\u8ff0\u3002\n\n/database/seeds/KeihiSeeder.php\n<?php\n\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Keihi\\Keihi;\n\nclass KeihiSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        Model::unguard();\n        Keihi::create([\n            'id' => 1,\n            'title' => 'WEB+DB PRESS Vol.89',\n            'price' => 1598,\n            'url' => 'http://www.amazon.co.jp/gp/product/4774176389'\n        ]);\n        Keihi::create([\n            'id' => 2,\n            'title' => 'Docker\u5b9f\u8df5\u5165\u9580\u2015\u2015Linux\u30b3\u30f3\u30c6\u30ca\u6280\u8853\u306e\u57fa\u790e\u304b\u3089\u5fdc\u7528\u307e\u3067 (Software Design plus)',\n            'price' => 2894,\n            'url' => 'http://www.amazon.co.jp/gp/product/4774176540'\n        ]);\n        Keihi::create([\n            'id' => 3,\n            'title' => 'HTML5 Web\u6a19\u6e96API \u30d0\u30a4\u30d6\u30eb',\n            'price' => 3218,\n            'url' => 'http://www.amazon.co.jp/gp/product/4774176540'\n        ]);\n    }\n}\n\n\n\n\n\u30c7\u30fc\u30bf\u6295\u5165\n% php artisan db:seed --class=KeihiSeeder\n\n\n\u5358\u4f53\u30c6\u30b9\u30c8(PHPUnit)\n\u5358\u4f53\u30c6\u30b9\u30c8\u4f5c\u6210\n\n/tests/Repositories/KeihiRepositoryTest.php\n<?php\n\nuse Keihi\\Repositories\\KeihiInterface;\n\nclass KeihiRepositoryTest extends TestCase\n{\n    protected $repo;\n\n    public function setUp()\n    {\n        parent::setUp();\n        $this->repo = $this->app->make(KeihiInterface::class);\n    }\n\n    public function testGet()\n    {\n        $result = $this->repo->get(1);\n        $this->assertSame($result->title, 'WEB+DB PRESS Vol.89');\n        $this->assertSame($result->price, 1598);\n        $this->assertSame($result->url,   'http://www.amazon.co.jp/gp/product/4774176389');\n    }\n\n    public function testGetList()\n    {\n        $result = $this->repo->getList();\n        $this->assertCount(3, $result);\n        $this->assertSame($result[2]->title, 'HTML5 Web\u6a19\u6e96API \u30d0\u30a4\u30d6\u30eb');\n        $this->assertSame($result[2]->price, 3218);\n        $this->assertSame($result[2]->url,   'http://www.amazon.co.jp/gp/product/4774176540');\n    }\n\n}\n\n\n\n\u5358\u4f53\u30c6\u30b9\u30c8\u5b9f\u884c\n% php vendor/bin/phpunit --tap\nTAP version 13\nok 1 - ExampleTest::testBasicExample\nok 2 - KeihiRepositoryTest::testGet\nok 3 - KeihiRepositoryTest::testGetList\n1..3\n\n\n\u30b5\u30fc\u30d3\u30b9\u4f5c\u6210\n\u30b3\u30fc\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u5185\u3067\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u64cd\u4f5c\u3059\u308b\u70ba\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3002\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u6210\u3002\n\n/app/Services/KeihiServiceInterface.php\n/**\n * Interface KeihiServiceInterface\n * @package Keihi\\Services\n */\ninterface KeihiServiceInterface\n{\n    /**\n     * \u5358\u4f53\u53d6\u5f97\n     * @return mixed\n     */\n    public function get($id);\n\n    /**\n     * \u4e00\u89a7\u53d6\u5f97\n     * @return mixed\n     */\n    public function getList();\n\n    /**\n     * \u4fdd\u5b58\n     * @param $input\n     * @param $id | null\n     * @return $id | null\n     */\n    public function save($input, $id=null);\n\n    /**\n     * \u524a\u9664\n     * @param $id\n     * @return $id\n     */\n    public function delete($id);\n\n    /**\n     * \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u4f5c\u6210\n     * @return $entity\n     */\n    public function createEntity();\n\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f7f\u7528\u3057\u3066\u5b9f\u88c5\u3002\n\u30c7\u30fc\u30bf\u691c\u8a3c\u306e\u5f79\u5272\u3092\u6301\u305f\u305b\u308b\u3002\n\n/app/Services/KeihiService.php\n<?php\n\nnamespace Keihi\\Services;\n\nuse Keihi\\Services\\KeihiServiceInterface;\nuse Keihi\\Repositories\\KeihiInterface;\nuse Illuminate\\Validation\\Factory as ValidateFactory;\n\n/**\n * Class KeihiService\n * @package Keihi\\Services\n */\nclass KeihiService implements KeihiServiceInterface\n{\n    /**\n     * @var KeihiInterface\n     */\n    protected $keihiInterface;\n\n    /**\n     * @var ValidateFactory\n     */\n    protected $validateFactory;\n\n    /**\n     * @var array\n     */\n    protected $rules = [\"title\" => \"required|max: 100\", \"price\" => \"required|integer|min:0|max:100000\", \"url\" => \"required\"];\n\n    /**\n     * @param KeihiInterface $keihiInterface\n     * @param ValidateFactory $validateFactory\n     */\n    public function __construct(KeihiInterface $keihiInterface, ValidateFactory $validateFactory)\n    {\n        $this->keihiInterface = $keihiInterface;\n        $this->validateFactory = $validateFactory;\n    }\n\n    /**\n     * @param $id\n     * @return mixed\n     */\n    public function get($id)\n    {\n        return $this->keihiInterface->get($id);\n    }\n\n    /**\n     * @return mixed\n     */\n    public function getList()\n    {\n        return $this->keihiInterface->getList();\n    }\n\n    /**\n     * @param $request\n     * @param $id\n     * @return $id\n     */\n    public function save($request, $id=null)\n    {\n        $input = $request->only(['title', 'price', 'url']);\n        $v = $this->validateFactory->make($input, $this->rules);\n        if ($v->fails()) {\n            return null;\n        }\n\n        if (is_null($id)) {\n            $id = $this->keihiInterface->create($input);\n        } else {\n            $id = $this->keihiInterface->update($id, $input);\n        }\n\n        return $id;\n    }\n\n    /**\n     * @param $id\n     * @return bool\n     */\n    public function delete($id)\n    {\n        $this->keihiInterface->delete($id);\n        return true;\n    }\n\n    /**\n     * @return mixed\n     */\n    public function createEntity()\n    {\n        return $this->keihiInterface->createEntity();\n    }\n}\n\n\nApp\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u306b\u767b\u9332\u3002\n\n/app/Providers/AppServiceProvider.php\n    /**\n     * Register any application services.\n     *\n     * @return void\n     */\n    public function register()\n    {\n        // \u7d4c\u8cbb\u30b5\u30fc\u30d3\u30b9\n        $this->app->singleton(KeihiServiceInterface::class, KeihiService::class);\n    }\n\n\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u4f5c\u6210\u3002\n\u7d4c\u8cbb\u30b5\u30fc\u30d3\u30b9\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f9d\u5b58\u6ce8\u5165\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\n% php artisan make:controller KeihiController\n\n\n/app/Http/Controllers/KeihiController.php\n<?php\n\nnamespace Keihi\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse Keihi\\Http\\Requests;\nuse Keihi\\Http\\Controllers\\Controller;\nuse Keihi\\Services\\KeihiServiceInterface;\n\n/**\n * Class KeihiController\n * @package Keihi\\Http\\Controllers\n */\nclass KeihiController extends Controller\n{\n    /**\n     * @var KeihiServiceInterface\n     */\n    private $keihiService;\n\n    /**\n     * @param KeihiServiceInterface $keihiServiceInterface\n     */\n    public function __construct(KeihiServiceInterface $keihiServiceInterface)\n    {\n        $this->keihiService = $keihiServiceInterface;\n    }\n\n    /**\n     * \u4e00\u89a7\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index()\n    {\n        $list = $this->keihiService->getList();\n        return view('keihi.list', compact('list'));\n    }\n\n    /**\n     * \u65b0\u898f\u5165\u529b\u753b\u9762\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create()\n    {\n        $keihi = $this->keihiService->createEntity();\n        return view('keihi.edit', compact('keihi'));\n    }\n\n    /**\n     * \u65b0\u898f\u767b\u9332\u51e6\u7406\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        $id = $this->keihiService->save($request);\n        return $this->show($id);\n    }\n\n    /**\n     * \u8a73\u7d30\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show($id)\n    {\n        $keihi = $this->keihiService->get($id);\n        return view('keihi.detail', compact('keihi'));\n    }\n\n    /**\n     * \u7de8\u96c6\u753b\u9762\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit($id)\n    {\n        $keihi = $this->keihiService->get($id);\n        return view('keihi.edit', compact('keihi'));\n    }\n\n    /**\n     * \u66f4\u65b0\u51e6\u7406\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, $id)\n    {\n        $id = $this->keihiService->save($request, $id);\n        return $this->show($id);\n    }\n\n    /**\n     * \u524a\u9664\u51e6\u7406\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy($id)\n    {\n        $this->keihiService->delete($id);\n        return $this->index();\n    }\n}\n\n\n\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\n\n/app/Http/routes.php\nRoute::resource('keihi', 'KeihiController');\n\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u78ba\u8a8d\u3002\n% php artisan route:list\n+--------+----------+--------------------+---------------+------------------------------------------------+------------+\n| Domain | Method   | URI                | Name          | Action                                         | Middleware |\n+--------+----------+--------------------+---------------+------------------------------------------------+------------+\n|        | GET|HEAD | /                  |               | Closure                                        |            |\n|        | GET|HEAD | keihi              | keihi.index   | Keihi\\Http\\Controllers\\KeihiController@index   |            |\n|        | POST     | keihi              | keihi.store   | Keihi\\Http\\Controllers\\KeihiController@store   |            |\n|        | GET|HEAD | keihi/create       | keihi.create  | Keihi\\Http\\Controllers\\KeihiController@create  |            |\n|        | DELETE   | keihi/{keihi}      | keihi.destroy | Keihi\\Http\\Controllers\\KeihiController@destroy |            |\n|        | PATCH    | keihi/{keihi}      |               | Keihi\\Http\\Controllers\\KeihiController@update  |            |\n|        | GET|HEAD | keihi/{keihi}      | keihi.show    | Keihi\\Http\\Controllers\\KeihiController@show    |            |\n|        | PUT      | keihi/{keihi}      | keihi.update  | Keihi\\Http\\Controllers\\KeihiController@update  |            |\n|        | GET|HEAD | keihi/{keihi}/edit | keihi.edit    | Keihi\\Http\\Controllers\\KeihiController@edit    |            |\n+--------+----------+--------------------+---------------+------------------------------------------------+------------+\n\n\n# Laravel5\u3067\u5909\u66f4\u306b\u5f37\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u7d4c\u8cbb(\u672c)\u3092\u8a18\u9332\u3059\u308b\u3060\u3051\u306eWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3002\n\u65e5\u4ed8\u3001\u30bf\u30a4\u30c8\u30eb\u3001\u4fa1\u683c\u3001URL\u30921\u30c6\u30fc\u30d6\u30eb\u306b\u3057\u3066MySQL\u3078\u683c\u7d0d\u3002\n\n- \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nhttps://github.com/niiyz/Laravel-DDD\n\n## Laravel\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n``` sh\n% composer create-project laravel/laravel keihi\n```\n\n``` bash\n% cd keihi\n% php artisan -V \nLaravel Framework version 5.1.20 (LTS)\n```\n## \u540d\u524d\u7a7a\u9593\u3092\u66f4\u65b0\nKeihi\u3068\u3044\u3046\u540d\u524d\u7a7a\u9593\u306b\u3057\u307e\u3059\u3002\n\n```\n// namespace\u3092\u300cApp\u300d\u304b\u3089\u300cKeihi\u300d\u3078\u5909\u66f4\n% php artisan app:name Keihi\n```\n\nnamespace\u6307\u5b9a\u3057\u3066\u3042\u308b\u7b87\u6240\u304c\u5168\u90e8\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3055\u308c\u307e\u3059\u3002\n\n``` composer.json\n         \"psr-4\": {\n-            \"App\\\\\": \"app/\"\n+            \"Keihi\\\\\": \"app/\"\n         }\n```\n\n``` php:app/Console/Kernel.php\n <?php\n \n-namespace App\\Console;\n+namespace Keihi\\Console;\n\n```\n\n## Database\u3092\u7528\u610f\n\n#### MAMP\u3067MYSQL\u30b5\u30fc\u30d0\u30fc\u8d77\u52d5\u3001UTF8\u3067DB\u4f5c\u6210\u3002\n\n\u4ee5\u4e0b\u3001MAMP\u306e\u30bd\u30b1\u30c3\u30c8\u3067\u7e4b\u3050\u3068\u304d\u306b\u5fc5\u8981\u306a\u51e6\u7406\u3002\n\n##### UNIX_SOCKET\u8ffd\u8a18\n\n``` php:/config/database.php\n        'mysql' => [\n            'driver'    => 'mysql',\n            'unix_socket' => env('DB_UNIX_SOCKET'),// 1\u884c\u8ffd\u8a18\n            'host'      => env('DB_HOST', 'localhost'),\n            'database'  => env('DB_DATABASE', 'forge'),\n```\n#####  .env\u306eDB\u8a2d\u5b9a\u3092\u7de8\u96c6\u3057\u3066DB_UNIX_SOCKET\u306f\u8ffd\u8a18\u3002\n\n``` php:.env\nDB_UNIX_SOCKET=/Applications/MAMP/tmp/mysql/mysql.sock\nDB_HOST=localhost\nDB_DATABASE=keihi_db\nDB_USERNAME=test\nDB_PASSWORD=test\n```\n\n## \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\n\n### \u4f5c\u6210\u30b3\u30de\u30f3\u30c9\n\n```\n% php artisan make:migration create_keihi_table --create=keihi \nCreated Migration: 2015_10_23_235515_create_keihi_table\n```\n\n### \u30d5\u30a1\u30a4\u30eb\u7de8\u96c6\n\n``` php:/database/migrations/2015_10_23_235515_create_keihi_table.php\npublic function up()\n{\n    Schema::create('keihi', function (Blueprint $table) {\n        $table->increments('id');       // ID\n        $table->char('title', 100);     // \u30bf\u30a4\u30c8\u30eb\n        $table->integer('price');       // \u4fa1\u683c\n        $table->text('url');            // URL\n        $table->timestamps();           // \u4f5c\u6210\u6642\u523b\n     });\n}\n```\n\n### \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\n\nMySQL\u306b\u30c6\u30fc\u30d6\u30eb\u304c\u4f5c\u6210\u3002(keihi\u4ee5\u5916\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b58\u5728\u3059\u308b\u3082\u306e)\n\n``` sh\n% php artisan migrate\nMigration table created successfully.\nMigrated: 2014_10_12_000000_create_users_table\nMigrated: 2014_10_12_100000_create_password_resets_table\nMigrated: 2015_10_23_235515_create_keihi_table\n```\n\n\n\n## \u30a8\u30ec\u30af\u30a8\u30f3\u30c8\u4f5c\u6210\n\nKeihi\u30e2\u30c7\u30eb(/app/Keihi.php)\u3092\u4f5c\u6210\u3002\n\n```\n% php artisan make:model Keihi\n```\n\n\n### \u30a8\u30ec\u30af\u30a8\u30f3\u30c8\u7de8\u96c6\n\nKeihi\u30e2\u30c7\u30eb\u306b\u7d10\u3065\u304f\u30c6\u30fc\u30d6\u30eb\u3092\u300ckeihi\u300d\u306b\u8a2d\u5b9a\u3002\n\n``` php:/app/Keihi.php\n<?php\n\nnamespace Keihi;\n\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass Keihi extends Model\n{\n    protected $table = 'keihi';\n}\n\n```\n\n## \u30ea\u30dd\u30b8\u30c8\u30ea\u4f5c\u6210\n\n### \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u4f5c\u6210\n\n``` php:/app/Repositories/KeihiInterface.php\n<?php\n\n/**\n * Interface KeihiInterface\n */\ninterface KeihiInterface\n{\n    /**\n     * \u53d6\u5f97\n     * @param $id\n     * @return mixed\n     */\n    public function get($id);\n\n    /**\n     * \u4e00\u89a7\u53d6\u5f97\n     * @return mixed\n     */\n    public function getList();\n\n    /**\n     * \u66f4\u65b0\n     * @param $id\n     * @param $data\n     * @return mixed\n     */\n    public function update($id, $data);\n\n    /**\n     * \u65b0\u898f\u767b\u9332\n     * @param $data\n     * @return mixed\n     */\n    public function create($data);\n\n    /**\n     * \u524a\u9664\n     * @param $id\n     * @return mixed\n     */\n    public function delete($id);\n}\n```\n\n### \u30ea\u30dd\u30b8\u30c8\u30ea\u5b9f\u88c5\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f7f\u7528\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u30a8\u30ec\u30af\u30a8\u30f3\u30c8\u30e2\u30c7\u30eb\u3092\u4f9d\u5b58\u6ce8\u5165\u3057\u307e\u3059\u3002\n\n``` php:/app/Repositories/KeihiRepository.php\n<?php\n\nnamespace Keihi\\Repositories;\n\nuse Keihi\\Repositories\\KeihiInterface;\nuse Keihi\\Keihi;\n\n/**\n * Class KeihiRepository\n * @package Keihi\\Repositories\n */\nclass KeihiRepository implements KeihiInterface\n{\n    /**\n     * @var Keihi\n     */\n    protected $keihi;\n\n    /**\n     * @param Keihi $keihi\n     */\n    public function __construct(Keihi $keihi)\n    {\n        $this->keihi = $keihi;\n    }\n\n    /**\n     * \u53d6\u5f97\n     * @param $id\n     * @return mixed\n     */\n    public function get($id)\n    {\n\u3000\u3000\u3000\u3000\u3000\n    }\n```\n\n### \u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u4f5c\u6210\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u7528\u306e\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u4f5c\u6210\n\n```\nphp artisan make:provider RepositoryProvider\n```\n\n### \u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u7de8\u96c6\n\n``` php:/app/Providers/RepositoryProvider.php\n    /**\n     * Register the application services.\n     *\n     * @return void\n     */\n    public function register()\n    {\n        // \u7d4c\u8cbb\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30b9\u3068\u7d4c\u8cbb\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u9023\u7d50\n        $this->app->bind(KeihiInterface::class, KeihiRepository::class);\n    }\n```\n\n### \u30ea\u30dd\u30b8\u30c8\u30ea\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u306e\u8aad\u8fbc\n\n```php:/config/app.php\n        /*\n         * Application Service Providers...\n         */\n        Keihi\\Providers\\AppServiceProvider::class,\n        Keihi\\Providers\\AuthServiceProvider::class,\n        Keihi\\Providers\\EventServiceProvider::class,\n        Keihi\\Providers\\RouteServiceProvider::class,\n        Keihi\\Providers\\RepositoryProvider::class,// \uff11\u884c\u8ffd\u52a0\n    ],\n```\n\n## \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u6295\u5165\n\n### \u30b7\u30fc\u30c0\u30fc\u4f5c\u6210\n```\n% php artisan make:seeder KeihiSeeder\n```\n\n### \u30b7\u30fc\u30c0\u30fc\u7de8\u96c6\n\n\u30a8\u30ec\u30af\u30a8\u30f3\u30c8\u30e2\u30c7\u30eb\u3092\u5229\u7528\u3057\u3066\u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u3092\u8a18\u8ff0\u3002\n\n``` php:/database/seeds/KeihiSeeder.php\n<?php\n\nuse Illuminate\\Database\\Seeder;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Keihi\\Keihi;\n\nclass KeihiSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     *\n     * @return void\n     */\n    public function run()\n    {\n        Model::unguard();\n        Keihi::create([\n            'id' => 1,\n            'title' => 'WEB+DB PRESS Vol.89',\n            'price' => 1598,\n            'url' => 'http://www.amazon.co.jp/gp/product/4774176389'\n        ]);\n        Keihi::create([\n            'id' => 2,\n            'title' => 'Docker\u5b9f\u8df5\u5165\u9580\u2015\u2015Linux\u30b3\u30f3\u30c6\u30ca\u6280\u8853\u306e\u57fa\u790e\u304b\u3089\u5fdc\u7528\u307e\u3067 (Software Design plus)',\n            'price' => 2894,\n            'url' => 'http://www.amazon.co.jp/gp/product/4774176540'\n        ]);\n        Keihi::create([\n            'id' => 3,\n            'title' => 'HTML5 Web\u6a19\u6e96API \u30d0\u30a4\u30d6\u30eb',\n            'price' => 3218,\n            'url' => 'http://www.amazon.co.jp/gp/product/4774176540'\n        ]);\n    }\n}\n\n```\n\n### \u30c7\u30fc\u30bf\u6295\u5165\n\n```\n% php artisan db:seed --class=KeihiSeeder\n```\n\n## \u5358\u4f53\u30c6\u30b9\u30c8(PHPUnit)\n\n\u5358\u4f53\u30c6\u30b9\u30c8\u4f5c\u6210\n\n``` php:/tests/Repositories/KeihiRepositoryTest.php\n<?php\n\nuse Keihi\\Repositories\\KeihiInterface;\n\nclass KeihiRepositoryTest extends TestCase\n{\n    protected $repo;\n\n    public function setUp()\n    {\n        parent::setUp();\n        $this->repo = $this->app->make(KeihiInterface::class);\n    }\n\n    public function testGet()\n    {\n        $result = $this->repo->get(1);\n        $this->assertSame($result->title, 'WEB+DB PRESS Vol.89');\n        $this->assertSame($result->price, 1598);\n        $this->assertSame($result->url,   'http://www.amazon.co.jp/gp/product/4774176389');\n    }\n\n    public function testGetList()\n    {\n        $result = $this->repo->getList();\n        $this->assertCount(3, $result);\n        $this->assertSame($result[2]->title, 'HTML5 Web\u6a19\u6e96API \u30d0\u30a4\u30d6\u30eb');\n        $this->assertSame($result[2]->price, 3218);\n        $this->assertSame($result[2]->url,   'http://www.amazon.co.jp/gp/product/4774176540');\n    }\n\n}\n```\n\n### \u5358\u4f53\u30c6\u30b9\u30c8\u5b9f\u884c\n\n```\n% php vendor/bin/phpunit --tap\nTAP version 13\nok 1 - ExampleTest::testBasicExample\nok 2 - KeihiRepositoryTest::testGet\nok 3 - KeihiRepositoryTest::testGetList\n1..3\n```\n\n## \u30b5\u30fc\u30d3\u30b9\u4f5c\u6210\n\n\u30b3\u30fc\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u5185\u3067\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u64cd\u4f5c\u3059\u308b\u70ba\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u6210\u3002\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u6210\u3002\n\n``` php:/app/Services/KeihiServiceInterface.php\n/**\n * Interface KeihiServiceInterface\n * @package Keihi\\Services\n */\ninterface KeihiServiceInterface\n{\n    /**\n     * \u5358\u4f53\u53d6\u5f97\n     * @return mixed\n     */\n    public function get($id);\n\n    /**\n     * \u4e00\u89a7\u53d6\u5f97\n     * @return mixed\n     */\n    public function getList();\n\n    /**\n     * \u4fdd\u5b58\n     * @param $input\n     * @param $id | null\n     * @return $id | null\n     */\n    public function save($input, $id=null);\n\n    /**\n     * \u524a\u9664\n     * @param $id\n     * @return $id\n     */\n    public function delete($id);\n\n    /**\n     * \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u4f5c\u6210\n     * @return $entity\n     */\n    public function createEntity();\n```\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f7f\u7528\u3057\u3066\u5b9f\u88c5\u3002\n\u30c7\u30fc\u30bf\u691c\u8a3c\u306e\u5f79\u5272\u3092\u6301\u305f\u305b\u308b\u3002\n\n``` php:/app/Services/KeihiService.php\n<?php\n\nnamespace Keihi\\Services;\n\nuse Keihi\\Services\\KeihiServiceInterface;\nuse Keihi\\Repositories\\KeihiInterface;\nuse Illuminate\\Validation\\Factory as ValidateFactory;\n\n/**\n * Class KeihiService\n * @package Keihi\\Services\n */\nclass KeihiService implements KeihiServiceInterface\n{\n    /**\n     * @var KeihiInterface\n     */\n    protected $keihiInterface;\n\n    /**\n     * @var ValidateFactory\n     */\n    protected $validateFactory;\n\n    /**\n     * @var array\n     */\n    protected $rules = [\"title\" => \"required|max: 100\", \"price\" => \"required|integer|min:0|max:100000\", \"url\" => \"required\"];\n\n    /**\n     * @param KeihiInterface $keihiInterface\n     * @param ValidateFactory $validateFactory\n     */\n    public function __construct(KeihiInterface $keihiInterface, ValidateFactory $validateFactory)\n    {\n        $this->keihiInterface = $keihiInterface;\n        $this->validateFactory = $validateFactory;\n    }\n\n    /**\n     * @param $id\n     * @return mixed\n     */\n    public function get($id)\n    {\n        return $this->keihiInterface->get($id);\n    }\n\n    /**\n     * @return mixed\n     */\n    public function getList()\n    {\n        return $this->keihiInterface->getList();\n    }\n\n    /**\n     * @param $request\n     * @param $id\n     * @return $id\n     */\n    public function save($request, $id=null)\n    {\n        $input = $request->only(['title', 'price', 'url']);\n        $v = $this->validateFactory->make($input, $this->rules);\n        if ($v->fails()) {\n            return null;\n        }\n\n        if (is_null($id)) {\n            $id = $this->keihiInterface->create($input);\n        } else {\n            $id = $this->keihiInterface->update($id, $input);\n        }\n\n        return $id;\n    }\n\n    /**\n     * @param $id\n     * @return bool\n     */\n    public function delete($id)\n    {\n        $this->keihiInterface->delete($id);\n        return true;\n    }\n\n    /**\n     * @return mixed\n     */\n    public function createEntity()\n    {\n        return $this->keihiInterface->createEntity();\n    }\n}\n```\n\nApp\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u306b\u767b\u9332\u3002\n\n```php:/app/Providers/AppServiceProvider.php\n    /**\n     * Register any application services.\n     *\n     * @return void\n     */\n    public function register()\n    {\n        // \u7d4c\u8cbb\u30b5\u30fc\u30d3\u30b9\n        $this->app->singleton(KeihiServiceInterface::class, KeihiService::class);\n    }\n```\n\n## \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u4f5c\u6210\u3002\n\n\u7d4c\u8cbb\u30b5\u30fc\u30d3\u30b9\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f9d\u5b58\u6ce8\u5165\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```\n% php artisan make:controller KeihiController\n```\n\n```php:/app/Http/Controllers/KeihiController.php\n<?php\n\nnamespace Keihi\\Http\\Controllers;\n\nuse Illuminate\\Http\\Request;\nuse Keihi\\Http\\Requests;\nuse Keihi\\Http\\Controllers\\Controller;\nuse Keihi\\Services\\KeihiServiceInterface;\n\n/**\n * Class KeihiController\n * @package Keihi\\Http\\Controllers\n */\nclass KeihiController extends Controller\n{\n    /**\n     * @var KeihiServiceInterface\n     */\n    private $keihiService;\n\n    /**\n     * @param KeihiServiceInterface $keihiServiceInterface\n     */\n    public function __construct(KeihiServiceInterface $keihiServiceInterface)\n    {\n        $this->keihiService = $keihiServiceInterface;\n    }\n\n    /**\n     * \u4e00\u89a7\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function index()\n    {\n        $list = $this->keihiService->getList();\n        return view('keihi.list', compact('list'));\n    }\n\n    /**\n     * \u65b0\u898f\u5165\u529b\u753b\u9762\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function create()\n    {\n        $keihi = $this->keihiService->createEntity();\n        return view('keihi.edit', compact('keihi'));\n    }\n\n    /**\n     * \u65b0\u898f\u767b\u9332\u51e6\u7406\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function store(Request $request)\n    {\n        $id = $this->keihiService->save($request);\n        return $this->show($id);\n    }\n\n    /**\n     * \u8a73\u7d30\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function show($id)\n    {\n        $keihi = $this->keihiService->get($id);\n        return view('keihi.detail', compact('keihi'));\n    }\n\n    /**\n     * \u7de8\u96c6\u753b\u9762\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function edit($id)\n    {\n        $keihi = $this->keihiService->get($id);\n        return view('keihi.edit', compact('keihi'));\n    }\n\n    /**\n     * \u66f4\u65b0\u51e6\u7406\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function update(Request $request, $id)\n    {\n        $id = $this->keihiService->save($request, $id);\n        return $this->show($id);\n    }\n\n    /**\n     * \u524a\u9664\u51e6\u7406\n     *\n     * @param  int  $id\n     * @return \\Illuminate\\Http\\Response\n     */\n    public function destroy($id)\n    {\n        $this->keihiService->delete($id);\n        return $this->index();\n    }\n}\n\n```\n\n## \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\n\n```php:/app/Http/routes.php\nRoute::resource('keihi', 'KeihiController');\n```\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u78ba\u8a8d\u3002\n\n```\n% php artisan route:list\n+--------+----------+--------------------+---------------+------------------------------------------------+------------+\n| Domain | Method   | URI                | Name          | Action                                         | Middleware |\n+--------+----------+--------------------+---------------+------------------------------------------------+------------+\n|        | GET|HEAD | /                  |               | Closure                                        |            |\n|        | GET|HEAD | keihi              | keihi.index   | Keihi\\Http\\Controllers\\KeihiController@index   |            |\n|        | POST     | keihi              | keihi.store   | Keihi\\Http\\Controllers\\KeihiController@store   |            |\n|        | GET|HEAD | keihi/create       | keihi.create  | Keihi\\Http\\Controllers\\KeihiController@create  |            |\n|        | DELETE   | keihi/{keihi}      | keihi.destroy | Keihi\\Http\\Controllers\\KeihiController@destroy |            |\n|        | PATCH    | keihi/{keihi}      |               | Keihi\\Http\\Controllers\\KeihiController@update  |            |\n|        | GET|HEAD | keihi/{keihi}      | keihi.show    | Keihi\\Http\\Controllers\\KeihiController@show    |            |\n|        | PUT      | keihi/{keihi}      | keihi.update  | Keihi\\Http\\Controllers\\KeihiController@update  |            |\n|        | GET|HEAD | keihi/{keihi}/edit | keihi.edit    | Keihi\\Http\\Controllers\\KeihiController@edit    |            |\n+--------+----------+--------------------+---------------+------------------------------------------------+------------+\n\n```\n", "tags": ["laravel", "laravel5", "DDD"]}