{"context": " More than 1 year has passed since last update.\u30ed\u30b0\u51fa\u529b\u3060\u3051\u3057\u3066close\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u3002\ntelnet localhost 12345\u3067\u8a66\u305b\u307e\u3059\u3002\nwireshark\u3067localhost\u3092\u89b3\u5bdf\u3057\u306a\u304c\u3089\u52c9\u5f37\u3057\u307e\u3057\u305f\u3002\n\u3082\u3057\u304f\u306f\u3001sudo tcpdump -n -i lo0\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <unistd.h>\n\nint main(int argc, char **argv)\n{\n    int listenfd, connfd;\n    struct sockaddr_in servaddr;\n\n    listenfd = socket(AF_INET, SOCK_STREAM, 0);\n    if(listenfd < 0) {\n        perror(\"socket() err\");\n        exit(EXIT_FAILURE);\n    }\n\n    bzero(&servaddr, sizeof(servaddr));\n    servaddr.sin_family = AF_INET;\n    servaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n    servaddr.sin_port = htons(12345);\n    servaddr.sin_len = sizeof(servaddr);\n\n    if(bind(listenfd, (struct sockaddr*)&servaddr, sizeof(servaddr)) < 0) {\n        perror(\"bind() err\");\n        exit(EXIT_FAILURE);\n    }\n\n    if(listen(listenfd, SOMAXCONN) < 0) {\n        perror(\"listen() err\");\n        exit(EXIT_FAILURE);\n    }\n    for(;;) {\n        connfd = accept(listenfd, (struct sockaddr*)NULL, NULL);\n        if(connfd < 0) {\n            perror(\"accept() err\");\n            exit(EXIT_FAILURE);\n        }\n        printf(\"----\\n\");\n        if(close(connfd) == -1) {\n            perror(\"close() err\");\n            exit(EXIT_FAILURE);\n        }\n    }\n    return 0;\n}\n\n\u30ed\u30b0\u51fa\u529b\u3060\u3051\u3057\u3066close\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u3002\n`telnet localhost 12345`\u3067\u8a66\u305b\u307e\u3059\u3002\nwireshark\u3067localhost\u3092\u89b3\u5bdf\u3057\u306a\u304c\u3089\u52c9\u5f37\u3057\u307e\u3057\u305f\u3002\n\u3082\u3057\u304f\u306f\u3001`sudo tcpdump -n -i lo0`\n\n\n```\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <unistd.h>\n\nint main(int argc, char **argv)\n{\n\tint listenfd, connfd;\n\tstruct sockaddr_in servaddr;\n\n\tlistenfd = socket(AF_INET, SOCK_STREAM, 0);\n\tif(listenfd < 0) {\n\t\tperror(\"socket() err\");\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tbzero(&servaddr, sizeof(servaddr));\n\tservaddr.sin_family = AF_INET;\n\tservaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n\tservaddr.sin_port = htons(12345);\n\tservaddr.sin_len = sizeof(servaddr);\n\n\tif(bind(listenfd, (struct sockaddr*)&servaddr, sizeof(servaddr)) < 0) {\n\t\tperror(\"bind() err\");\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif(listen(listenfd, SOMAXCONN) < 0) {\n\t\tperror(\"listen() err\");\n\t\texit(EXIT_FAILURE);\n\t}\n\tfor(;;) {\n\t\tconnfd = accept(listenfd, (struct sockaddr*)NULL, NULL);\n\t\tif(connfd < 0) {\n\t\t\tperror(\"accept() err\");\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\t\tprintf(\"----\\n\");\n\t\tif(close(connfd) == -1) {\n\t\t\tperror(\"close() err\");\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n", "tags": ["socket", "C\u8a00\u8a9e"]}