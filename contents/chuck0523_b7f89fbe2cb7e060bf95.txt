{"context": "\n\n\u3084\u308b\u3053\u3068\nExpress\u3068MongoDB\u3067\u4f5c\u6210\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306bRedis\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\n\n\u4f5c\u308b\u3082\u306e\n\u56f3\u66f8\u9928\u3092\u6a21\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30c7\u30fc\u30bf -> \u66f8\u7c4d\n\u30c7\u30fc\u30bf\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8 -> \u66f8\u7c4d\u304c\u4f5c\u6210\u3055\u308c\u305f\u308a\u3001\u53d6\u308a\u51fa\u3055\u308c\u305f\u308a\n\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\uff08MongoDB\uff09-> \u66f8\u68da\n\u30ad\u30e3\u30c3\u30b7\u30e5\uff08Redis\uff09 -> \u5171\u7528\u306e\u30c7\u30b9\u30af\n\n\u306e\u3088\u3046\u306a\u6a21\u3057\u65b9\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u8981\u306f\u3001\u3044\u3061\u3044\u3061\u66f8\u68da\u307e\u3067\u672c\u3092\u63a2\u3057\u306b\u884c\u304f\u306e\u306f\u9762\u5012\u306a\u306e\u3067\u3001\u3088\u304f\u4f7f\u3046\u672c\u306f\u5171\u7528\u306e\u30c7\u30b9\u30af\u306b\u7f6e\u3044\u3066\u304a\u304d\u305f\u3044\u3088\u306d\u3068\u3044\u3046\u8a71\u3002\n\u3053\u306e\u8a18\u4e8b\u306fCaching a MongoDB Database with Redis\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u524d\u63d0\nNode.js, npm, MongoDB, Redis\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u6e08\u3093\u3067\u3044\u308b\u524d\u63d0\u3067\u3059\u3002\n\nMongo\u8d77\u52d5\n\u8d77\u52d5\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n$ mongod --dbpath=/data --port 27017\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\nNode\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u3002\n$ npm init -y\n$ npm i --save express mongodb redis body-parser\n$ touch index.js\n\nMongo\u306b\u63a5\u7d9a\u3057\u3066\u3001\u30a2\u30d7\u30ea\u3092\u7acb\u3061\u4e0a\u3052\u308b\u51e6\u7406\u3002\n// index.js\nconst express = require('express')\nconst MongoClient = require('mongodb').MongoClient\nconst app = express()\nconst bodyParser = require('body-parser')\nconst mongoUrl = 'mongodb://localhost:27017/textmonkey'\n\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json())\n\n\nMongoClient.connect(mongoUrl, (err, db) => {\n  if(err) {\n    throw 'Error connecting to database - ' + err\n  }\n  app.listen(8000, () => {\n    console.log('Listening on port 8000')\n  })\n})\n\n\n\u57fa\u672c\u7684\u306a\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u4f5c\u6210\nExpress\u3068MongoDB\u3092\u5229\u7528\u3057\u305f\u57fa\u672c\u7684\u306a\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3002\n$ touch access.js\n\n// access.js\n\n// \u66f8\u7c4d\u306e\u4fdd\u5b58\nmodule.exports.saveBook = (db, title, author, text, callback) => {\n  db.collection('text').save({\n    title: title,\n    author: author,\n    text: text\n  }, callback)\n}\n\n// \u66f8\u7c4d\u306e\u53d6\u5f97\nmodule.exports.findBookByTitle = (db, title, callback) => {\n  db.collection('text').findOne({ title }, (err, doc) => {\n    callback((err || !doc) ? null : doc.text)\n  })\n}\n\nindex.js\u306b\u8ffd\u8a18\n// index.js\n\n// ... \u7565\n\n// new\nconst access = require('./access.js') \n\nMongoClient.connect(mongoUrl, (err, db) => {\n  if(err) {\n    throw 'Error connecting to database - ' + err\n  }\n  // new\n  app.post('/book', (req, res) => {\n    if (!req.body.title || !req.body.author) {\n      res.status(400).send(\"Please send a title and an author for the book\")\n    } else if (!req.body.text) {\n      res.status(400).send(\"Please send some text for the book\")\n    } else {\n      access.saveBook(db, req.body.title, req.body.author, req.body.text, (err) => {\n        if (err) {\n          res.status(500).send(\"Server error\")\n        } else {\n          res.status(201).send(\"Saved\")\n        }\n      })\n    }\n  })\n  // new\n  app.get('/book/:title', (req, res) => {\n    if (!req.params['title']) {\n      res.status(400).send(\"Please send a proper title\")\n    } else {\n      access.findBookByTitle(db, req.params['title'], (text) => {\n        if (!text) {\n          res.status(500).send(\"Server error\")\n        } else {\n          res.status(200).send(text)\n        }\n      })\n    }\n  })\n  // ...\u7565\n})\n\n\u3053\u308c\u3067\u57fa\u672c\u7684\u306a\u66f8\u7c4d\u306e\u4fdd\u5b58\u3068\u53d6\u5f97\u304c\u5b9f\u88c5\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u80fd\u3092\u8ffd\u52a0\nRedis\u30b5\u30fc\u30d0\u3092\u7acb\u3061\u4e0a\u3052\u3066\u304a\u304d\u307e\u3059\u3002\n$ redis-server\n\nredis\u306b\u5fc5\u8981\u306a\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u547c\u3073\u51fa\u3057\u3002\n// index.js\n\n// new\nconst redisClient = require('redis').createClient\nconst redis = redisClient(6379, 'localhost')\n\n\nfindBookByTitleCached\u95a2\u6570\u3092\u8ffd\u52a0\naccess.js\u306b\u3066\u3001\u95a2\u6570\u3092\u8ffd\u52a0\u3002\n// access.js\n\nmodule.exports.findBookByTitleCached = (db, redis, title, callback) => {\n  redis.get(title, (err, reply) => {\n    if (err) {\n      callback(null)\n    } else if (reply) {\n      // \u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u3066\u66f8\u7c4d\u3092\u767a\u898b\n      callback(JSON.parse(reply))\n    } else {\n      // \u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u66f8\u7c4d\u304c\u7121\u304b\u3063\u305f\u306e\u3067DB\u306b\u30af\u30a8\u30ea\u767a\u884c\n      db.collection('text').findOne({ title }, (err, doc) => {\n        if (err || !doc) {\n          // DB\u306b\u3082\u66f8\u7c4d\u304c\u7121\u304b\u3063\u305f\u5834\u5408\n          callback(null)\n        } else {\n          // DB\u306b\u3066\u66f8\u7c4d\u3092\u767a\u898b\n          // \u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u30bb\u30fc\u30d6\u3057\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u30ea\u30bf\u30fc\u30f3\u3059\u308b\n          redis.set(title, JSON.stringify(doc), () => {\n            callback(doc)\n          })\n        }\n      })\n    }\n  })\n}\n\nindex.js\u306b\u3066\u66f8\u7c4d\u53d6\u5f97\u306bfindBookByTitleCached\u3092\u4f7f\u3046\u3088\u3046\u306b\u5909\u66f4\u3002\n// index.js\n\napp.get('/book/:title', (req, res) => {\n  if (!req.params['title']) {\n    res.status(400).send(\"Please send a proper title\")\n  } else {\n    access.findBookByTitleCached(db, redis, req.params['title'], (text) => {\n      if (!text) {\n        res.status(500).send(\"Server error\")\n      } else {\n        res.status(200).send(text)\n      }\n    })\n  }\n})\n\n\u3053\u308c\u3067\u3001redis\u306b\u30c7\u30fc\u30bf\u304c\u3042\u308c\u3070\u305d\u308c\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u66f8\u68da\u307e\u3067\u3044\u3061\u3044\u3061\u898b\u306b\u884c\u304b\u305a\u3068\u3082\u3001\u5171\u7528\u306e\u30c7\u30b9\u30af\u3067\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u7684\u306a\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\n$ node index.js\n\nMongo, Redis\u30b5\u30fc\u30d0, Express\u304c\u8d77\u52d5\u3057\u3066\u304a\u308a\u3001\u554f\u984c\u304c\u306a\u3051\u308c\u3070localhost\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u7acb\u3061\u4e0a\u304c\u308b\u306f\u305a\u3067\u3059\u3002\n\nPostMan\u306e\u3088\u3046\u306aHTTP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u66f8\u7c4d\u306ePOST\u3084GET\u3092\u8a66\u3057\u3066\u307f\u308b\u3068\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u52d5\u3044\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\nCodes on Github\n\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u3092\u898b\u305f\u3044\u65b9\u306f\u3053\u3061\u3089\u304b\u3089\u3069\u3046\u305e\u3002\nhttps://github.com/chuck0523/chuck-personal-repo/tree/master/langs/redis/mongo-node-redis\n## \u3084\u308b\u3053\u3068\n\nExpress\u3068MongoDB\u3067\u4f5c\u6210\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306bRedis\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\n\n## \u4f5c\u308b\u3082\u306e\n\n\u56f3\u66f8\u9928\u3092\u6a21\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```text\n\u30c7\u30fc\u30bf -> \u66f8\u7c4d\n\u30c7\u30fc\u30bf\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8 -> \u66f8\u7c4d\u304c\u4f5c\u6210\u3055\u308c\u305f\u308a\u3001\u53d6\u308a\u51fa\u3055\u308c\u305f\u308a\n\u30c7\u30fc\u30bf\u30b9\u30c8\u30ec\u30fc\u30b8\uff08MongoDB\uff09-> \u66f8\u68da\n\u30ad\u30e3\u30c3\u30b7\u30e5\uff08Redis\uff09 -> \u5171\u7528\u306e\u30c7\u30b9\u30af\n```\n\n\u306e\u3088\u3046\u306a\u6a21\u3057\u65b9\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u8981\u306f\u3001\u3044\u3061\u3044\u3061\u66f8\u68da\u307e\u3067\u672c\u3092\u63a2\u3057\u306b\u884c\u304f\u306e\u306f\u9762\u5012\u306a\u306e\u3067\u3001\u3088\u304f\u4f7f\u3046\u672c\u306f\u5171\u7528\u306e\u30c7\u30b9\u30af\u306b\u7f6e\u3044\u3066\u304a\u304d\u305f\u3044\u3088\u306d\u3068\u3044\u3046\u8a71\u3002\n\n \n\u3053\u306e\u8a18\u4e8b\u306f[Caching a MongoDB Database with Redis](https://www.sitepoint.com/caching-a-mongodb-database-with-redis/)\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u524d\u63d0\nNode.js, npm, MongoDB, Redis\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u6e08\u3093\u3067\u3044\u308b\u524d\u63d0\u3067\u3059\u3002\n\n## Mongo\u8d77\u52d5\n\n\u8d77\u52d5\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```bash\n$ mongod --dbpath=/data --port 27017\n```\n\n## \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\n\nNode\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u3002\n\n```bash\n$ npm init -y\n$ npm i --save express mongodb redis body-parser\n$ touch index.js\n```\n\nMongo\u306b\u63a5\u7d9a\u3057\u3066\u3001\u30a2\u30d7\u30ea\u3092\u7acb\u3061\u4e0a\u3052\u308b\u51e6\u7406\u3002\n\n```js\n// index.js\nconst express = require('express')\nconst MongoClient = require('mongodb').MongoClient\nconst app = express()\nconst bodyParser = require('body-parser')\nconst mongoUrl = 'mongodb://localhost:27017/textmonkey'\n\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json())\n\n\nMongoClient.connect(mongoUrl, (err, db) => {\n  if(err) {\n    throw 'Error connecting to database - ' + err\n  }\n  app.listen(8000, () => {\n    console.log('Listening on port 8000')\n  })\n})\n```\n\n\n\n## \u57fa\u672c\u7684\u306a\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u4f5c\u6210\n\nExpress\u3068MongoDB\u3092\u5229\u7528\u3057\u305f\u57fa\u672c\u7684\u306a\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u6210\u3002\n\n```bash\n$ touch access.js\n```\n\n```js\n// access.js\n\n// \u66f8\u7c4d\u306e\u4fdd\u5b58\nmodule.exports.saveBook = (db, title, author, text, callback) => {\n  db.collection('text').save({\n    title: title,\n    author: author,\n    text: text\n  }, callback)\n}\n\n// \u66f8\u7c4d\u306e\u53d6\u5f97\nmodule.exports.findBookByTitle = (db, title, callback) => {\n  db.collection('text').findOne({ title }, (err, doc) => {\n    callback((err || !doc) ? null : doc.text)\n  })\n}\n```\n\nindex.js\u306b\u8ffd\u8a18\n\n```js\n// index.js\n\n// ... \u7565\n\n// new\nconst access = require('./access.js') \n\nMongoClient.connect(mongoUrl, (err, db) => {\n  if(err) {\n    throw 'Error connecting to database - ' + err\n  }\n  // new\n  app.post('/book', (req, res) => {\n    if (!req.body.title || !req.body.author) {\n      res.status(400).send(\"Please send a title and an author for the book\")\n    } else if (!req.body.text) {\n      res.status(400).send(\"Please send some text for the book\")\n    } else {\n      access.saveBook(db, req.body.title, req.body.author, req.body.text, (err) => {\n        if (err) {\n          res.status(500).send(\"Server error\")\n        } else {\n          res.status(201).send(\"Saved\")\n        }\n      })\n    }\n  })\n  // new\n  app.get('/book/:title', (req, res) => {\n    if (!req.params['title']) {\n      res.status(400).send(\"Please send a proper title\")\n    } else {\n      access.findBookByTitle(db, req.params['title'], (text) => {\n        if (!text) {\n          res.status(500).send(\"Server error\")\n        } else {\n          res.status(200).send(text)\n        }\n      })\n    }\n  })\n  // ...\u7565\n})\n```\n\n\u3053\u308c\u3067\u57fa\u672c\u7684\u306a\u66f8\u7c4d\u306e\u4fdd\u5b58\u3068\u53d6\u5f97\u304c\u5b9f\u88c5\u3067\u304d\u307e\u3057\u305f\u3002\n\n## \u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u80fd\u3092\u8ffd\u52a0\n\nRedis\u30b5\u30fc\u30d0\u3092\u7acb\u3061\u4e0a\u3052\u3066\u304a\u304d\u307e\u3059\u3002\n\n```bash\n$ redis-server\n```\n\nredis\u306b\u5fc5\u8981\u306a\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u547c\u3073\u51fa\u3057\u3002\n\n```js\n// index.js\n\n// new\nconst redisClient = require('redis').createClient\nconst redis = redisClient(6379, 'localhost')\n```\n\n### findBookByTitleCached\u95a2\u6570\u3092\u8ffd\u52a0\n\naccess.js\u306b\u3066\u3001\u95a2\u6570\u3092\u8ffd\u52a0\u3002\n\n```js\n// access.js\n\nmodule.exports.findBookByTitleCached = (db, redis, title, callback) => {\n  redis.get(title, (err, reply) => {\n    if (err) {\n      callback(null)\n    } else if (reply) {\n      // \u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u3066\u66f8\u7c4d\u3092\u767a\u898b\n      callback(JSON.parse(reply))\n    } else {\n      // \u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u66f8\u7c4d\u304c\u7121\u304b\u3063\u305f\u306e\u3067DB\u306b\u30af\u30a8\u30ea\u767a\u884c\n      db.collection('text').findOne({ title }, (err, doc) => {\n        if (err || !doc) {\n          // DB\u306b\u3082\u66f8\u7c4d\u304c\u7121\u304b\u3063\u305f\u5834\u5408\n          callback(null)\n        } else {\n          // DB\u306b\u3066\u66f8\u7c4d\u3092\u767a\u898b\n          // \u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u30bb\u30fc\u30d6\u3057\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u30ea\u30bf\u30fc\u30f3\u3059\u308b\n          redis.set(title, JSON.stringify(doc), () => {\n            callback(doc)\n          })\n        }\n      })\n    }\n  })\n}\n```\n\nindex.js\u306b\u3066\u66f8\u7c4d\u53d6\u5f97\u306b```findBookByTitleCached```\u3092\u4f7f\u3046\u3088\u3046\u306b\u5909\u66f4\u3002\n\n```js\n// index.js\n\napp.get('/book/:title', (req, res) => {\n  if (!req.params['title']) {\n    res.status(400).send(\"Please send a proper title\")\n  } else {\n    access.findBookByTitleCached(db, redis, req.params['title'], (text) => {\n      if (!text) {\n        res.status(500).send(\"Server error\")\n      } else {\n        res.status(200).send(text)\n      }\n    })\n  }\n})\n```\n\n\u3053\u308c\u3067\u3001redis\u306b\u30c7\u30fc\u30bf\u304c\u3042\u308c\u3070\u305d\u308c\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u66f8\u68da\u307e\u3067\u3044\u3061\u3044\u3061\u898b\u306b\u884c\u304b\u305a\u3068\u3082\u3001\u5171\u7528\u306e\u30c7\u30b9\u30af\u3067\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u7684\u306a\u3002\n\n## \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\n\n```bash\n$ node index.js\n```\n\nMongo, Redis\u30b5\u30fc\u30d0, Express\u304c\u8d77\u52d5\u3057\u3066\u304a\u308a\u3001\u554f\u984c\u304c\u306a\u3051\u308c\u3070localhost\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u7acb\u3061\u4e0a\u304c\u308b\u306f\u305a\u3067\u3059\u3002\n\n<img width=\"929\" alt=\"Screen Shot 2017-02-04 at 10.46.59 AM.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/77614/a015027f-a07b-ea3e-05a6-ac4c860bd85a.png\">\n\n[PostMan](https://www.getpostman.com/)\u306e\u3088\u3046\u306aHTTP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u66f8\u7c4d\u306ePOST\u3084GET\u3092\u8a66\u3057\u3066\u307f\u308b\u3068\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u52d5\u3044\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\n## Codes on Github\n\n\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u3092\u898b\u305f\u3044\u65b9\u306f\u3053\u3061\u3089\u304b\u3089\u3069\u3046\u305e\u3002\n\nhttps://github.com/chuck0523/chuck-personal-repo/tree/master/langs/redis/mongo-node-redis\n", "tags": ["Node.js", "Express.js", "MongoDB", "Redis"]}