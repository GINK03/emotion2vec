{"tags": ["CommonLisp", "lisp"], "context": " More than 1 year has passed since last update.\u6587\u5b57\u5217\u3092\u30d0\u30a4\u30c8\u5217\u306b\u3057\u3001\u305d\u308c\u3092stream\u3068\u3057\u3066\u6271\u3044\u305f\u3044\u5834\u9762\u304c\u3042\u3063\u305f\u306e\u3067\u305d\u306e\u65b9\u6cd5\u3092\u30e1\u30e2\u3057\u3066\u304a\u304f\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u306e\u30c6\u30b9\u30c8\u304c\u3057\u305f\u304b\u3063\u305f\n\nread-string.lisp\n(defmethod get-data-from-post-data (query)\n  \"clack\u30b5\u30fc\u30d0\u306eenvironment\u304b\u3089Post\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u53d6\u3063\u3066\u9069\u5207\u306a\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u5909\u63db\u3057\u3066\u8fd4\u3059\"\n  (let ((stream (getf query :RAW-BODY))\n    (temp \"\"))\n    (setf temp (concatenate 'string \n                temp \n                (jp:decode (getf query :RAW-BODY-BUFFER) :guess)))\n    (do ((line (read-line stream nil)\n               (read-line stream nil)))\n        ((null line))\n      (setf temp (concatenate 'string\n                      temp \n                      (jp:decode (kmrcl:string-to-usb8-array line)  :guess)\n                      (list #\\newline))))\n    temp))\n\n\n\nclack\u3067\u306fquery\u306e:raw-body\u306b\u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u308b\u3002 \n\u305d\u306e\u578b\u306f\u3001\u30d0\u30a4\u30c8\u5217\u306estream(flexi-stream)\u3067\u3042\u308b\u3002\n\u3053\u306e\u95a2\u6570\u306e\u30c6\u30b9\u30c8\u3092\u3057\u3088\u3046\u3068\u3057\u305f\u3089\n\u6587\u5b57\u5217\u304b\u3089\u30d0\u30a4\u30c8\u5217\u306estream\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\ncreate-stream.lisp\n(flexi-streams:make-flexi-stream (flexi-streams:make-in-memory-input-stream (flexi-streams:string-to-octets \n\"\u3053\u3093\u306b\u3061\u308f\n\u65e5\u672c\u8a9e\u3067\u3082\u3060\u3044\u3058\u3087\u3046\u3076\n&author=test\" :external-format :utf-8)))\n\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u6587\u5b57\u5217\u3092\u30d0\u30a4\u30c8\u5217\u306estream\u306b\u5909\u63db\u3067\u304d\u305f\u3002\n\u3053\u308c\u3092\u898b\u3064\u3051\u308b\u306e\u306b2\u6642\u9593\u3082\u6642\u9593\u3092\u4f7f\u3063\u3066\u3057\u307e\u3063\u305f...\u3002\nin-memory-input-stream\u3067\u4f5c\u3063\u305f\u3060\u3051\u3060\u3068read-line\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\nin-memory-input-stream\u304b\u3089flexi-stream\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067read-line\u3067\u304d\u308bstream\u306b\n\u306a\u308b\u3053\u3068\u306b\u6c17\u304c\u4ed8\u304b\u306a\u304b\u3063\u305f...\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001\u3053\u308c\u3067\u69d8\u3005\u306a\u5165\u529b\u306e\u30c6\u30b9\u30c8\u5b9f\u884c\u304c\u3067\u304d\u305f\u306e\u3067\u30ac\u30b7\u30ac\u30b7\u958b\u767a\u9032\u3081\u3066\u3044\u304d\u305f\u3044\u3002\n\u6587\u5b57\u5217\u3092\u30d0\u30a4\u30c8\u5217\u306b\u3057\u3001\u305d\u308c\u3092stream\u3068\u3057\u3066\u6271\u3044\u305f\u3044\u5834\u9762\u304c\u3042\u3063\u305f\u306e\u3067\u305d\u306e\u65b9\u6cd5\u3092\u30e1\u30e2\u3057\u3066\u304a\u304f\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u306e\u30c6\u30b9\u30c8\u304c\u3057\u305f\u304b\u3063\u305f\n\n```common-lisp:read-string.lisp\n(defmethod get-data-from-post-data (query)\n  \"clack\u30b5\u30fc\u30d0\u306eenvironment\u304b\u3089Post\u306e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u53d6\u3063\u3066\u9069\u5207\u306a\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u5909\u63db\u3057\u3066\u8fd4\u3059\"\n  (let ((stream (getf query :RAW-BODY))\n\t(temp \"\"))\n    (setf temp (concatenate 'string \n\t\t\t    temp \n\t\t\t    (jp:decode (getf query :RAW-BODY-BUFFER) :guess)))\n    (do ((line (read-line stream nil)\n     \t       (read-line stream nil)))\n     \t((null line))\n      (setf temp (concatenate 'string\n      \t\t\t      temp \n      \t\t\t      (jp:decode (kmrcl:string-to-usb8-array line)  :guess)\n      \t\t\t      (list #\\newline))))\n    temp))\n\n```\n\nclack\u3067\u306fquery\u306e:raw-body\u306b\u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u308b\u3002 \n\u305d\u306e\u578b\u306f\u3001\u30d0\u30a4\u30c8\u5217\u306estream(flexi-stream)\u3067\u3042\u308b\u3002\n\n\u3053\u306e\u95a2\u6570\u306e\u30c6\u30b9\u30c8\u3092\u3057\u3088\u3046\u3068\u3057\u305f\u3089\n\u6587\u5b57\u5217\u304b\u3089\u30d0\u30a4\u30c8\u5217\u306estream\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n```common-lisp:create-stream.lisp\n(flexi-streams:make-flexi-stream (flexi-streams:make-in-memory-input-stream (flexi-streams:string-to-octets \n\"\u3053\u3093\u306b\u3061\u308f\n\u65e5\u672c\u8a9e\u3067\u3082\u3060\u3044\u3058\u3087\u3046\u3076\n&author=test\" :external-format :utf-8)))\n```\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u6587\u5b57\u5217\u3092\u30d0\u30a4\u30c8\u5217\u306estream\u306b\u5909\u63db\u3067\u304d\u305f\u3002\n\u3053\u308c\u3092\u898b\u3064\u3051\u308b\u306e\u306b2\u6642\u9593\u3082\u6642\u9593\u3092\u4f7f\u3063\u3066\u3057\u307e\u3063\u305f...\u3002\n\nin-memory-input-stream\u3067\u4f5c\u3063\u305f\u3060\u3051\u3060\u3068read-line\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\nin-memory-input-stream\u304b\u3089flexi-stream\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067read-line\u3067\u304d\u308bstream\u306b\n\u306a\u308b\u3053\u3068\u306b\u6c17\u304c\u4ed8\u304b\u306a\u304b\u3063\u305f...\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u3053\u308c\u3067\u69d8\u3005\u306a\u5165\u529b\u306e\u30c6\u30b9\u30c8\u5b9f\u884c\u304c\u3067\u304d\u305f\u306e\u3067\u30ac\u30b7\u30ac\u30b7\u958b\u767a\u9032\u3081\u3066\u3044\u304d\u305f\u3044\u3002"}