{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u3044\u307e\u3069\u304d\u306e\u30af\u30e9\u30b9\u306b\u5024\u3092\u6301\u305f\u305b\u308b\u5b9f\u88c5\u3067\u3001\nVB6\u304a\u3058\u3055\u3093\u304c\u7d44\u3093\u3060\u30ec\u30ac\u30b7\u30fc\u306a\u30b3\u30fc\u30c9\u3042\u308b\u3042\u308b\n\n\u306a\u306b\u3053\u308c\nQiita\u3078\u306e\u521d\u6295\u7a3f\u30c6\u30b9\u30c8\u7684\u306a\u8a18\u4e8b\n\n\u3069\u3093\u306a\u306e\n\u8981\u4ef6\n\u3000\u30fbHTTP\u306eGET\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092hogeRequest\u306b\u6301\u305f\u305b\u308b\u3002\n\u3000\u30fbhogeRequest\u3092\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5909\u63db\u3059\u308b\nhogeRequest\u306e\u5b9a\u7fa9\u306f\u3053\u3093\u306a\u611f\u3058\n\nhogeRequest\n    Public Class hogeRequest\n        Private value1Field As String\n        Private value2Field As String\n\n        Public Sub New()\n            Me.value1Field = Nothing\n        End Sub\n\n        Public Property value1() As String\n            Get\n                Return Me.value1Field\n            End Get\n            Set(value As String)\n                Me.value1Field = value\n            End Set\n        End Property\n\n        Public Property value2() As String\n            Get\n                Return Me.value2Field\n            End Get\n            Set(value As String)\n                Me.value2Field = value\n            End Set\n        End Property\n    End Class\n\n\n\u3053\u3053\u307e\u3067\u306f\u5272\u3068\u3075\u3064\u3046\n\u304c\u3001\u809d\u5fc3\u306e\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u4f5c\u6210\u30ed\u30b8\u30c3\u30af\u304c\u3053\u3093\u306a\u3093\u306a\u3063\u3066\u305f\u308a\u3059\u308b\n\nfoo\n    Private Sub foo()\n        Dim x As New hogeRequest\n        x.value1 = \"hogehoge\"\n        x.value2 = Nothing\n\n        Dim s As String = \"\"\n\n        s &= \"value1=\" & x.value1\n\n        If Not IsNothing(x.value2) Then\n            s &= \"&value2=\" & x.value2\n        End If\n\n        Debug.Print(s)\n    End Sub\n\n\n\u3053\u308c\u3060\u3068\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u5897\u3048\u308b\u5ea6\u306b\u30e1\u30f3\u30c6\u3057\u306a\u3044\u3068\u30c0\u30e1\u3060\u3057\u3001\u306a\u3093\u3068\u3044\u3046\u304b\u3001\u3046\u3093\u3002\n\uff08\u8077\u696d\u30d7\u30ed\u30b0\u30e9\u30de\u304a\u3058\u3055\u3093\u306f\u52d5\u3051\u3070\u554f\u984c\u306a\u3044\u3002\u30e1\u30f3\u30c6\u3059\u308b\u5974\u306a\u3093\u304b\u77e5\u3089\u3093\u3068\u8a00\u3046\uff09\n\n\u306a\u306e\u3067\n\u305d\u308c\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u4f7f\u3063\u305f\u3089\u3059\u3063\u304d\u308a\u3059\u308b\u3088\uff01\n\u307e\u305a\u3053\u3093\u306a\u611f\u3058\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\n\nconvertUtil\nImports System.Reflection\n    Public Class convertUtil\n        ''' <summary>\n        ''' \u4efb\u610f\u306e\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092HTTP GET\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5909\u63db\n        ''' </summary>\n        ''' <typeparam name=\"T\"></typeparam>\n        ''' <param name=\"model\"></param>\n        ''' <returns></returns>\n        ''' <remarks></remarks>\n        Private Function toQueryString(Of T)(model As T) As String\n            Dim reqParm As String = \"\"\n\n            Try\n                Dim typ As Type = model.GetType\n                Dim members() As MemberInfo = typ.GetMembers(BindingFlags.Public Or\n                                                            BindingFlags.Instance Or\n                                                            BindingFlags.DeclaredOnly)\n                '\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u4f5c\u6210\n                For Each m As MemberInfo In members\n                    If m.MemberType <> MemberTypes.Property Then Continue For\n\n                    Dim pr As PropertyInfo = typ.GetProperty(m.Name)\n                    Dim ores As Object = pr.GetValue(model, Nothing)\n\n                    If IsNothing(ores) Then Continue For\n\n                    reqParm &= IIf(reqParm.Length = 0, \"\", \"&\")\n                    reqParm &= m.Name & \"=\" & ores.ToString\n                Next m\n            Catch ex As Exception\n                Throw ex\n            End Try\n            Return reqParm\n        End Function\n    End Class\n\n\n\u203b\u30d1\u30e9\u30e1\u30fc\u30bf\u591a\u3044\u3068\u304d\u306fStringBuilder\u4f7f\u3063\u305f\u307b\u3046\u304c\u305f\u3076\u3093\u3057\u3042\u308f\u305b\u306b\u306a\u308c\u308b\n\u3067\u3001\u547c\u3073\u51fa\u3057\u306f\u3053\u3093\u306a\u611f\u3058\u3002\u30b7\u30f3\u30d7\u30eb\u3002\n\nbar\n    Private Sub bar()\n        Dim x As New hogeRequest\n        x.value1 = \"hogehoge\"\n        x.value2 = Nothing\n\n        Dim s As String = convertUtil.toQueryString(x)\n        Debug.Print(s)\n    End Sub\n\n\n\u3053\u308c\u3060\u3068\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u4f5c\u6210\u30ed\u30b8\u30c3\u30af\u3092\u3044\u3061\u3044\u3061\u4fee\u6b63\u3057\u306a\u304f\u3066\u3044\u3044\u304b\u3089\u697d\u3060\u3088\u306d\u3063\u3066\u8a71\u3067\u3057\u305f\u3002\n\n\u6700\u5f8c\u306b\n\u3053\u306e\u7269\u8a9e\u306f\u30d5\u30a3\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\u305f\u3076\u3093\u3002\n\u304a\u308f\u308c\u3002\n#\u306f\u3058\u3081\u306b\n\u3044\u307e\u3069\u304d\u306e\u30af\u30e9\u30b9\u306b\u5024\u3092\u6301\u305f\u305b\u308b\u5b9f\u88c5\u3067\u3001\nVB6\u304a\u3058\u3055\u3093\u304c\u7d44\u3093\u3060\u30ec\u30ac\u30b7\u30fc\u306a\u30b3\u30fc\u30c9\u3042\u308b\u3042\u308b\n\n#\u306a\u306b\u3053\u308c\nQiita\u3078\u306e\u521d\u6295\u7a3f\u30c6\u30b9\u30c8\u7684\u306a\u8a18\u4e8b\n\n#\u3069\u3093\u306a\u306e\n\u8981\u4ef6\n\u3000\u30fbHTTP\u306eGET\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092hogeRequest\u306b\u6301\u305f\u305b\u308b\u3002\n\u3000\u30fbhogeRequest\u3092\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5909\u63db\u3059\u308b\n\nhogeRequest\u306e\u5b9a\u7fa9\u306f\u3053\u3093\u306a\u611f\u3058\n\n```vb.net:hogeRequest\n    Public Class hogeRequest\n        Private value1Field As String\n        Private value2Field As String\n\n        Public Sub New()\n            Me.value1Field = Nothing\n        End Sub\n\n        Public Property value1() As String\n            Get\n                Return Me.value1Field\n            End Get\n            Set(value As String)\n                Me.value1Field = value\n            End Set\n        End Property\n\n        Public Property value2() As String\n            Get\n                Return Me.value2Field\n            End Get\n            Set(value As String)\n                Me.value2Field = value\n            End Set\n        End Property\n    End Class\n```\n\u3053\u3053\u307e\u3067\u306f\u5272\u3068\u3075\u3064\u3046\n\n\u304c\u3001\u809d\u5fc3\u306e\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u4f5c\u6210\u30ed\u30b8\u30c3\u30af\u304c\u3053\u3093\u306a\u3093\u306a\u3063\u3066\u305f\u308a\u3059\u308b\n\n```vb.net:foo\n    Private Sub foo()\n        Dim x As New hogeRequest\n        x.value1 = \"hogehoge\"\n        x.value2 = Nothing\n\n        Dim s As String = \"\"\n\n        s &= \"value1=\" & x.value1\n\n        If Not IsNothing(x.value2) Then\n            s &= \"&value2=\" & x.value2\n        End If\n\n        Debug.Print(s)\n    End Sub\n```\n\u3053\u308c\u3060\u3068\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u5897\u3048\u308b\u5ea6\u306b\u30e1\u30f3\u30c6\u3057\u306a\u3044\u3068\u30c0\u30e1\u3060\u3057\u3001\u306a\u3093\u3068\u3044\u3046\u304b\u3001\u3046\u3093\u3002\n\uff08\u8077\u696d\u30d7\u30ed\u30b0\u30e9\u30de\u304a\u3058\u3055\u3093\u306f\u52d5\u3051\u3070\u554f\u984c\u306a\u3044\u3002\u30e1\u30f3\u30c6\u3059\u308b\u5974\u306a\u3093\u304b\u77e5\u3089\u3093\u3068\u8a00\u3046\uff09\n\n\n#\u306a\u306e\u3067\n\u305d\u308c\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u4f7f\u3063\u305f\u3089\u3059\u3063\u304d\u308a\u3059\u308b\u3088\uff01\n\n\u307e\u305a\u3053\u3093\u306a\u611f\u3058\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\n\n```vb.net:convertUtil\nImports System.Reflection\n    Public Class convertUtil\n        ''' <summary>\n        ''' \u4efb\u610f\u306e\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092HTTP GET\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5909\u63db\n        ''' </summary>\n        ''' <typeparam name=\"T\"></typeparam>\n        ''' <param name=\"model\"></param>\n        ''' <returns></returns>\n        ''' <remarks></remarks>\n        Private Function toQueryString(Of T)(model As T) As String\n            Dim reqParm As String = \"\"\n\n            Try\n                Dim typ As Type = model.GetType\n                Dim members() As MemberInfo = typ.GetMembers(BindingFlags.Public Or\n                                                            BindingFlags.Instance Or\n                                                            BindingFlags.DeclaredOnly)\n                '\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u4f5c\u6210\n                For Each m As MemberInfo In members\n                    If m.MemberType <> MemberTypes.Property Then Continue For\n\n                    Dim pr As PropertyInfo = typ.GetProperty(m.Name)\n                    Dim ores As Object = pr.GetValue(model, Nothing)\n\n                    If IsNothing(ores) Then Continue For\n\n                    reqParm &= IIf(reqParm.Length = 0, \"\", \"&\")\n                    reqParm &= m.Name & \"=\" & ores.ToString\n                Next m\n            Catch ex As Exception\n                Throw ex\n            End Try\n            Return reqParm\n        End Function\n    End Class\n```\n\u203b\u30d1\u30e9\u30e1\u30fc\u30bf\u591a\u3044\u3068\u304d\u306fStringBuilder\u4f7f\u3063\u305f\u307b\u3046\u304c\u305f\u3076\u3093\u3057\u3042\u308f\u305b\u306b\u306a\u308c\u308b\n\n\u3067\u3001\u547c\u3073\u51fa\u3057\u306f\u3053\u3093\u306a\u611f\u3058\u3002\u30b7\u30f3\u30d7\u30eb\u3002\n\n```VB.net:bar\n    Private Sub bar()\n        Dim x As New hogeRequest\n        x.value1 = \"hogehoge\"\n        x.value2 = Nothing\n\n        Dim s As String = convertUtil.toQueryString(x)\n        Debug.Print(s)\n    End Sub\n```\n\n\u3053\u308c\u3060\u3068\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u4f5c\u6210\u30ed\u30b8\u30c3\u30af\u3092\u3044\u3061\u3044\u3061\u4fee\u6b63\u3057\u306a\u304f\u3066\u3044\u3044\u304b\u3089\u697d\u3060\u3088\u306d\u3063\u3066\u8a71\u3067\u3057\u305f\u3002\n\n#\u6700\u5f8c\u306b\n\u3053\u306e\u7269\u8a9e\u306f\u30d5\u30a3\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\u305f\u3076\u3093\u3002\n\n\u304a\u308f\u308c\u3002\n", "tags": ["VB.Net"]}