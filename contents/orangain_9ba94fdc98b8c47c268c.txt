{"context": " More than 1 year has passed since last update.RSpec\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\uff08\u7b2c1\u90e8\uff1aRSpec\uff09\u306e\u7d9a\u304d\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u7591\u554f\u3092\u89e3\u6d88\u3059\u308b\u305f\u3081\u306bTurnip\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u304d\u307e\u3059\u3002\n\n\n.rspec\u306b\u66f8\u304f-r turnip/rspec\u306e\u610f\u5473\u306f\uff1f\n\u306a\u305cspec_helper\u306e\u4e2d\u3067step\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u5206\u3067load\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\uff1f\nTurnip\u3092\u4f7f\u3063\u305f\u6642\u306frequire 'spec_helper'\u3057\u3066\u306a\u3044\u306e\u306b\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3066\u6016\u3044\uff1e\uff1c\n\nRSpec\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f2.14.7, Turnip\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.2.1\u3067\u3059\u3002\u3053\u306e\u8a18\u4e8b\u4e2d\u306e\u5168\u3066\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306eWeb\u30b5\u30a4\u30c8\u304b\u3089\u306e\u5f15\u7528\u3067\u3059\u304c\u3001\u4e00\u90e8\u8aac\u660e\u306e\u305f\u3081\u306b\u65e5\u672c\u8a9e\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\nrspec/rspec-core at v2.14.7\njnicklas/turnip at 1.2.1\n\n\n\u7b2c2\u90e8\uff1aTurnip\n\u4eca\u56de\u306fTurnip\u304cRSpec\u306b\u3069\u306e\u3088\u3046\u306a\u4fee\u6b63\u3092\u52a0\u3048\u3066\u3044\u308b\u304b\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n1. .rspec\u30d5\u30a1\u30a4\u30eb\nTurnip\u306eREADME\u306b\u306f\u3001.rspec\u30d5\u30a1\u30a4\u30eb\u306b-r turnip/rspec\u3092\u8ffd\u52a0\u3059\u308b\u3068\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u4f55\u3067\u3057\u3087\u3046\u304b\u3002\nRSpec\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3080\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\nYou can store command line options in a .rspec file in the project's root directory, and the rspec command will read them as though you typed them on the command line.\n\n\u3064\u307e\u308a\u3001\u6bce\u56derspec -r turnip/rspec\u3092\u5b9f\u884c\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001rspec\u3068\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3088\u304f\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n2. rspec -r\n\u6b21\u306f\u3053\u306e-r\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002rspec --help\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u8a18\u8ff0\u304c\u898b\u3064\u304b\u308a\u307e\u3059\u3002\n-r, --require PATH               Require a file.\n\n\u3053\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3067\u6e21\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u3001\u524d\u56de\u3082\u898b\u305fConfiguration#setup_load_path_and_require\u306e\u5f15\u6570paths\u306b\u6e21\u3055\u308c\u307e\u3059\u3002\u305d\u3057\u3066\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u3042\u308b\u3088\u3046\u306b\u3001spec\u3092\u30ed\u30fc\u30c9\u3059\u308b\u524d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067require\u3055\u308c\u307e\u3059\u3002\n\nrspec-core-2.14.7/lib/rspec/core/configuration.rb\n      # @private\n      def setup_load_path_and_require(paths)  # 864\u884c\u76ee\n        directories = ['lib', default_path].select { |p| File.directory? p }\n        RSpec::Core::RubyProject.add_to_load_path(*directories)\n        paths.each {|path| require path}\n        @requires += paths\n      end\n\n\n\n3. turnip/rspec.rb\n\u3053\u3053\u304b\u3089Turnip\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u4ee5\u4e0b\u306e2\u3064\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nTurnip::RSpec::Loader\nTurnip::RSpec::Execute\n\n\u4e0b\u306e\u65b9\u3092\u898b\u308b\u3068\u300195\u884c\u76ee\u3067RSpec::Core::Configuration\u306bTurnip::RSpec::Loader\u3092include\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001100\u884c\u76ee\u3067\u306fconfig.pattern\u306b\",**/*.feature\"\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\"**/*_spec.rb,**/*.feature\"\u3068\u306a\u308a\u307e\u3059\u3002\n.feature\u30d5\u30a1\u30a4\u30eb\u306fGherkin\u5f62\u5f0f\u3067\u3059\u306e\u3067\u3001\u305d\u306e\u307e\u307e\u3067\u306fRuby\u304c\u8aad\u3081\u307e\u305b\u3093\u3002\u305d\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306e\u304cTurnip::RSpec::Loader\u3067\u3059\u3002\u8a73\u3057\u304f\u306f4\u3067\u8aac\u660e\u3057\u307e\u3059\u3002\n\nturnip-1.2.1/lib/turnip/rspec.rb\nrequire \"turnip\"\nrequire \"rspec\"\n\nmodule Turnip\n  module RSpec\n\n    ##\n    #\n    # This module hooks Turnip into RSpec by duck punching the load Kernel\n    # method. If the file is a feature file, we run Turnip instead!\n    #\n    module Loader\n      def load(*a, &b)\n        if a.first.end_with?('.feature')\n          require_if_exists 'turnip_helper'\n          require_if_exists 'spec_helper'\n\n          Turnip::RSpec.run(a.first)\n        else\n          super\n        end\n      end\n\n      private\n\n      def require_if_exists(filename)\n        require filename\n      rescue LoadError => e\n        # Don't hide LoadErrors raised in the spec helper.\n        raise unless e.message.include?(filename)\n      end\n    end\n\n    ##\n    #\n    # This module provides an improved method to run steps inside RSpec, adding\n    # proper support for pending steps, as well as nicer backtraces.\n    #\n    module Execute\n      include Turnip::Execute\n\n      def run_step(feature_file, step)\n        begin\n          step(step)\n        rescue Turnip::Pending => e\n          # This is kind of a hack, but it will make RSpec throw way nicer exceptions\n          example = Turnip::RSpec.fetch_current_example(self)\n          example.metadata[:line_number] = step.line\n          pending(\"No such step: '#{e}'\")\n        rescue StandardError => e\n          e.backtrace.push \"#{feature_file}:#{step.line}:in `#{step.description}'\"\n          raise e\n        end\n      end\n    end\n\n    class << self\n      def fetch_current_example(context)\n        if ::RSpec.respond_to?(:current_example)\n          ::RSpec.current_example\n        else\n          context.example\n        end\n      end\n\n      def run(feature_file)\n        Turnip::Builder.build(feature_file).features.each do |feature|\n          describe feature.name, feature.metadata_hash do\n            before do\n              example = Turnip::RSpec.fetch_current_example(self)\n              # This is kind of a hack, but it will make RSpec throw way nicer exceptions\n              example.metadata[:file_path] = feature_file\n\n              feature.backgrounds.map(&:steps).flatten.each do |step|\n                run_step(feature_file, step)\n              end\n            end\n            feature.scenarios.each do |scenario|\n              instance_eval <<-EOS, feature_file, scenario.line\n                describe scenario.name, scenario.metadata_hash do it(scenario.steps.map(&:description).join(' -> ')) do\n                    scenario.steps.each do |step|\n                      run_step(feature_file, step)\n                    end\n                  end\n                end\n              EOS\n            end\n          end\n        end\n      end\n    end\n  end\nend\n\n::RSpec::Core::Configuration.send(:include, Turnip::RSpec::Loader)  # 95\u884c\u76ee\n\n::RSpec.configure do |config|\n  config.include Turnip::RSpec::Execute, turnip: true\n  config.include Turnip::Steps, turnip: true\n  config.pattern << \",**/*.feature\"  # 100\u884c\u76ee\nend\n\n\n\n4. Turnip::RSpec::Loader\nTurnip::RSpec::Loader#load\u306frspec/core/configuration.rb\u306e896\u884c\u76ee\u3067\u4f7f\u308f\u308c\u3066\u3044\u308bKernel#load\u3092\u8986\u3044\u96a0\u3057\u3066\u3001.feature\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u306b\u5225\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f'turnip_helper.rb'\u3068'spec_helper.rb'\u304c\u3042\u308c\u3070require\u3057\u305f\u4e0a\u3067\u3001Turnip::RSpec.run\u3092\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\u3002\n\nrspec-core-2.14.7/lib/rspec/core/configuration.rb\n      # @private\n      def load_spec_files\n        files_to_run.uniq.each {|f| load File.expand_path(f) }  # 896\u884c\u76ee\n        raise_if_rspec_1_is_loaded\n      end\n\n\n\nturnip-1.2.1/lib/turnip/rspec.rb\n    module Loader\n      def load(*a, &b)  # 13\u884c\u76ee\n        if a.first.end_with?('.feature')\n          require_if_exists 'turnip_helper'\n          require_if_exists 'spec_helper'\n\n          Turnip::RSpec.run(a.first)  # 5\u3078\n        else\n          super\n        end\n      end\n\n      private\n\n      def require_if_exists(filename)\n        require filename\n      rescue LoadError => e\n        # Don't hide LoadErrors raised in the spec helper.\n        raise unless e.message.include?(filename)\n      end\n    end\n\n\n\n5. turnip/rspec.rb\uff08\u518d\u63b2\uff09\nTurnip::RSpec.run\u306f66\u884c\u76ee\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nTurnip::Builder.build\u306f\u5f8c\u3067\u898b\u307e\u3059\u304c\u3001Gherkin\u5f62\u5f0f\u306efeature_file\u3092\u30d1\u30fc\u30b9\u3057\u3066\u308b\u3063\u307d\u3044\u3053\u3068\u306f\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u8907\u96d1\u3067\u3059\u304c\u3001\u8aad\u307f\u8fbc\u3093\u3060feature\u3092Feature Spec\u306e\u30b9\u30bf\u30a4\u30eb\u3067\u30c6\u30b9\u30c8\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\nturnip-1.2.1/lib/turnip/rspec.rb\n\nmodule Turnip\n  module RSpec\n\n    # \uff08\u7565\uff09\n\n    class << self\n      def fetch_current_example(context)\n        if ::RSpec.respond_to?(:current_example)\n          ::RSpec.current_example\n        else\n          context.example\n        end\n      end\n\n      def run(feature_file)  # 66\u884c\u76ee\n        Turnip::Builder.build(feature_file).features.each do |feature|  # 6\u3078\n          describe feature.name, feature.metadata_hash do\n            before do\n              example = Turnip::RSpec.fetch_current_example(self)\n              # This is kind of a hack, but it will make RSpec throw way nicer exceptions\n              example.metadata[:file_path] = feature_file\n\n              feature.backgrounds.map(&:steps).flatten.each do |step|\n                run_step(feature_file, step)\n              end\n            end\n            feature.scenarios.each do |scenario|\n              instance_eval <<-EOS, feature_file, scenario.line\n                describe scenario.name, scenario.metadata_hash do it(scenario.steps.map(&:description).join(' -> ')) do\n                    scenario.steps.each do |step|\n                      run_step(feature_file, step)\n                    end\n                  end\n                end\n              EOS\n            end\n          end\n        end\n      end\n    end\n  end\nend\n\n\n\n6. turnip/builder.rb\nGherkin::Parser::Parser\u3092\u4f7f\u3063\u3066Gherkin\u5f62\u5f0f\u306efeature_file\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3044\u307e\u3059\u3002\n\nturnip-1.2.1/lib/turnip/builder.rb\nrequire \"gherkin\"\n\nmodule Turnip\n  class Builder\n\n    # \uff08\u7565\uff09\n\n    class << self\n      def build(feature_file)\n        Turnip::Builder.new.tap do |builder|\n          parser = Gherkin::Parser::Parser.new(builder, true)\n          parser.parse(File.read(feature_file), feature_file, 0)\n        end\n      end\n    end\n\n    # \uff08\u7565\uff09\n\n  end\nend\n\n\n\n\u7b2c2\u90e8\u307e\u3068\u3081\n\u3053\u3053\u307e\u3067\u3067\u3001\u6700\u521d\u306e\u7591\u554f\u306f\u5927\u4f53\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\n.rspec\u306b\u66f8\u304f-r turnip/rspec\u306e\u610f\u5473\u306f\uff1f\n\nrequire 'turnip/rspec'\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u306a\u305cstep\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u5206\u3067load\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\uff1f\n\nTurnip\u306eREADME\u306b\u306f\u3001spec_helper.rb\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3088\u3046\u6307\u793a\u304c\u3042\u308a\u307e\u3059\u3002\n\nspec/spec_helper.rb\nDir.glob('spec/steps/**/*steps.rb') { |f| load f, true }\n\n\n\u3053\u308c\u307e\u3067\u898b\u3066\u304d\u305f\u3088\u3046\u306bspec\u30d5\u30a1\u30a4\u30eb\u3084feature\u30d5\u30a1\u30a4\u30eb\u306f\u81ea\u52d5\u3067\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u304c\u3001helper\u95a2\u6570\u6271\u3044\u306estep\u30d5\u30a1\u30a4\u30eb\u306f\u81ea\u5206\u3067\u8aad\u307f\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3059\u3002\n\nTurnip\u3092\u4f7f\u3063\u305f\u6642\u306frequire 'spec_helper'\u3057\u3066\u306a\u3044\u306e\u306b\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3066\u6016\u3044\uff1e\uff1c\n\n\u8003\u3048\u308c\u3070\u5f53\u305f\u308a\u524d\u306a\u3093\u3067\u3059\u304c\u3001Gherkin\u5f62\u5f0f\u306efeature\u30d5\u30a1\u30a4\u30eb\u306frequire 'spec_helper'\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001Turnip\u304c\u81ea\u52d5\u3067\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u307e\u3059\u3002Turnip\u3060\u3051\u3067\u5fc5\u8981\u306a\u30b3\u30fc\u30c9\u306fturnip_helper.rb\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\nRSpec\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u307e\u3068\u3081\nRSpec\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u306f\u3053\u308c\u3067\u7d42\u308f\u308a\u3067\u3059\u3002\u3061\u3083\u3093\u3068\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3053\u3068\u3067\u6f20\u7136\u3068\u3057\u305f\u4e0d\u5b89\u3092\u89e3\u6d88\u3067\u304d\u307e\u3057\u305f\u3002\n\u81ea\u7531\u5ea6\u304c\u9ad8\u3059\u304e\u3066Ruby\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u306e\u306f\u8f9b\u3044\u3068\u3053\u308d\u3082\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u3044\u308d\u3044\u308d\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u66f8\u304d\u65b9\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u9762\u767d\u304b\u3063\u305f\u3067\u3059\u3002\n\n[RSpec\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\uff08\u7b2c1\u90e8\uff1aRSpec\uff09](http://qiita.com/orangain/items/32ce0ac113d607fab003)\u306e\u7d9a\u304d\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u7591\u554f\u3092\u89e3\u6d88\u3059\u308b\u305f\u3081\u306b[Turnip](https://github.com/jnicklas/turnip)\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u3044\u304d\u307e\u3059\u3002\n\n- `.rspec`\u306b\u66f8\u304f`-r turnip/rspec`\u306e\u610f\u5473\u306f\uff1f\n- \u306a\u305cspec_helper\u306e\u4e2d\u3067step\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u5206\u3067load\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\uff1f\n- Turnip\u3092\u4f7f\u3063\u305f\u6642\u306f`require 'spec_helper'`\u3057\u3066\u306a\u3044\u306e\u306b\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3066\u6016\u3044\uff1e\uff1c\n\n\n\nRSpec\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f2.14.7, Turnip\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.2.1\u3067\u3059\u3002\u3053\u306e\u8a18\u4e8b\u4e2d\u306e\u5168\u3066\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306eWeb\u30b5\u30a4\u30c8\u304b\u3089\u306e\u5f15\u7528\u3067\u3059\u304c\u3001\u4e00\u90e8\u8aac\u660e\u306e\u305f\u3081\u306b\u65e5\u672c\u8a9e\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n- [rspec/rspec-core at v2.14.7](https://github.com/rspec/rspec-core/tree/v2.14.7)\n- [jnicklas/turnip at 1.2.1](https://github.com/jnicklas/turnip/tree/1.2.1)\n\n## \u7b2c2\u90e8\uff1aTurnip\n\n\u4eca\u56de\u306fTurnip\u304cRSpec\u306b\u3069\u306e\u3088\u3046\u306a\u4fee\u6b63\u3092\u52a0\u3048\u3066\u3044\u308b\u304b\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n### 1. .rspec\u30d5\u30a1\u30a4\u30eb\n\n[Turnip\u306eREADME](https://github.com/jnicklas/turnip)\u306b\u306f\u3001`.rspec`\u30d5\u30a1\u30a4\u30eb\u306b`-r turnip/rspec`\u3092\u8ffd\u52a0\u3059\u308b\u3068\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u4f55\u3067\u3057\u3087\u3046\u304b\u3002\n\n[RSpec\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://rubydoc.info/gems/rspec-core/file/README.md#store_command_line_options__rspec)\u3092\u8aad\u3080\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\n> You can store command line options in a .rspec file in the project's root directory, and the rspec command will read them as though you typed them on the command line.\n\n\u3064\u307e\u308a\u3001\u6bce\u56de`rspec -r turnip/rspec`\u3092\u5b9f\u884c\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001`rspec`\u3068\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3088\u304f\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n### 2. rspec -r\n\n\u6b21\u306f\u3053\u306e`-r`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002`rspec --help`\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u8a18\u8ff0\u304c\u898b\u3064\u304b\u308a\u307e\u3059\u3002\n\n```\n-r, --require PATH               Require a file.\n```\n\n\u3053\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3067\u6e21\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u3001[\u524d\u56de](http://qiita.com/orangain/items/32ce0ac113d607fab003#3-9)\u3082\u898b\u305f`Configuration#setup_load_path_and_require`\u306e\u5f15\u6570`paths`\u306b\u6e21\u3055\u308c\u307e\u3059\u3002\u305d\u3057\u3066\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u3042\u308b\u3088\u3046\u306b\u3001spec\u3092\u30ed\u30fc\u30c9\u3059\u308b\u524d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067`require`\u3055\u308c\u307e\u3059\u3002\n\n```ruby:rspec-core-2.14.7/lib/rspec/core/configuration.rb\n      # @private\n      def setup_load_path_and_require(paths)  # 864\u884c\u76ee\n        directories = ['lib', default_path].select { |p| File.directory? p }\n        RSpec::Core::RubyProject.add_to_load_path(*directories)\n        paths.each {|path| require path}\n        @requires += paths\n      end\n```\n\n\n### 3. turnip/rspec.rb\n\n\u3053\u3053\u304b\u3089Turnip\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u3001\u4ee5\u4e0b\u306e2\u3064\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n- `Turnip::RSpec::Loader`\n- `Turnip::RSpec::Execute`\n\n\u4e0b\u306e\u65b9\u3092\u898b\u308b\u3068\u300195\u884c\u76ee\u3067`RSpec::Core::Configuration`\u306b`Turnip::RSpec::Loader`\u3092`include`\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u3001100\u884c\u76ee\u3067\u306f`config.pattern`\u306b`\",**/*.feature\"`\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068`\"**/*_spec.rb,**/*.feature\"`\u3068\u306a\u308a\u307e\u3059\u3002\n\n`.feature`\u30d5\u30a1\u30a4\u30eb\u306fGherkin\u5f62\u5f0f\u3067\u3059\u306e\u3067\u3001\u305d\u306e\u307e\u307e\u3067\u306fRuby\u304c\u8aad\u3081\u307e\u305b\u3093\u3002\u305d\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306e\u304c`Turnip::RSpec::Loader`\u3067\u3059\u3002\u8a73\u3057\u304f\u306f4\u3067\u8aac\u660e\u3057\u307e\u3059\u3002\n\n```ruby:turnip-1.2.1/lib/turnip/rspec.rb\nrequire \"turnip\"\nrequire \"rspec\"\n\nmodule Turnip\n  module RSpec\n\n    ##\n    #\n    # This module hooks Turnip into RSpec by duck punching the load Kernel\n    # method. If the file is a feature file, we run Turnip instead!\n    #\n    module Loader\n      def load(*a, &b)\n        if a.first.end_with?('.feature')\n          require_if_exists 'turnip_helper'\n          require_if_exists 'spec_helper'\n\n          Turnip::RSpec.run(a.first)\n        else\n          super\n        end\n      end\n\n      private\n\n      def require_if_exists(filename)\n        require filename\n      rescue LoadError => e\n        # Don't hide LoadErrors raised in the spec helper.\n        raise unless e.message.include?(filename)\n      end\n    end\n\n    ##\n    #\n    # This module provides an improved method to run steps inside RSpec, adding\n    # proper support for pending steps, as well as nicer backtraces.\n    #\n    module Execute\n      include Turnip::Execute\n\n      def run_step(feature_file, step)\n        begin\n          step(step)\n        rescue Turnip::Pending => e\n          # This is kind of a hack, but it will make RSpec throw way nicer exceptions\n          example = Turnip::RSpec.fetch_current_example(self)\n          example.metadata[:line_number] = step.line\n          pending(\"No such step: '#{e}'\")\n        rescue StandardError => e\n          e.backtrace.push \"#{feature_file}:#{step.line}:in `#{step.description}'\"\n          raise e\n        end\n      end\n    end\n\n    class << self\n      def fetch_current_example(context)\n        if ::RSpec.respond_to?(:current_example)\n          ::RSpec.current_example\n        else\n          context.example\n        end\n      end\n\n      def run(feature_file)\n        Turnip::Builder.build(feature_file).features.each do |feature|\n          describe feature.name, feature.metadata_hash do\n            before do\n              example = Turnip::RSpec.fetch_current_example(self)\n              # This is kind of a hack, but it will make RSpec throw way nicer exceptions\n              example.metadata[:file_path] = feature_file\n\n              feature.backgrounds.map(&:steps).flatten.each do |step|\n                run_step(feature_file, step)\n              end\n            end\n            feature.scenarios.each do |scenario|\n              instance_eval <<-EOS, feature_file, scenario.line\n                describe scenario.name, scenario.metadata_hash do it(scenario.steps.map(&:description).join(' -> ')) do\n                    scenario.steps.each do |step|\n                      run_step(feature_file, step)\n                    end\n                  end\n                end\n              EOS\n            end\n          end\n        end\n      end\n    end\n  end\nend\n\n::RSpec::Core::Configuration.send(:include, Turnip::RSpec::Loader)  # 95\u884c\u76ee\n\n::RSpec.configure do |config|\n  config.include Turnip::RSpec::Execute, turnip: true\n  config.include Turnip::Steps, turnip: true\n  config.pattern << \",**/*.feature\"  # 100\u884c\u76ee\nend\n```\n\n### 4. Turnip::RSpec::Loader\n\n`Turnip::RSpec::Loader#load`\u306f`rspec/core/configuration.rb`\u306e896\u884c\u76ee\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b`Kernel#load`\u3092\u8986\u3044\u96a0\u3057\u3066\u3001`.feature`\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u306b\u5225\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u5177\u4f53\u7684\u306b\u306f`'turnip_helper.rb'`\u3068`'spec_helper.rb'`\u304c\u3042\u308c\u3070require\u3057\u305f\u4e0a\u3067\u3001`Turnip::RSpec.run`\u3092\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\u3002\n\n```ruby:rspec-core-2.14.7/lib/rspec/core/configuration.rb\n      # @private\n      def load_spec_files\n        files_to_run.uniq.each {|f| load File.expand_path(f) }  # 896\u884c\u76ee\n        raise_if_rspec_1_is_loaded\n      end\n```\n\n```ruby:turnip-1.2.1/lib/turnip/rspec.rb\n    module Loader\n      def load(*a, &b)  # 13\u884c\u76ee\n        if a.first.end_with?('.feature')\n          require_if_exists 'turnip_helper'\n          require_if_exists 'spec_helper'\n\n          Turnip::RSpec.run(a.first)  # 5\u3078\n        else\n          super\n        end\n      end\n\n      private\n\n      def require_if_exists(filename)\n        require filename\n      rescue LoadError => e\n        # Don't hide LoadErrors raised in the spec helper.\n        raise unless e.message.include?(filename)\n      end\n    end\n```\n\n### 5. turnip/rspec.rb\uff08\u518d\u63b2\uff09\n\n`Turnip::RSpec.run`\u306f66\u884c\u76ee\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n`Turnip::Builder.build`\u306f\u5f8c\u3067\u898b\u307e\u3059\u304c\u3001Gherkin\u5f62\u5f0f\u306e`feature_file`\u3092\u30d1\u30fc\u30b9\u3057\u3066\u308b\u3063\u307d\u3044\u3053\u3068\u306f\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u8907\u96d1\u3067\u3059\u304c\u3001\u8aad\u307f\u8fbc\u3093\u3060`feature`\u3092Feature Spec\u306e\u30b9\u30bf\u30a4\u30eb\u3067\u30c6\u30b9\u30c8\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n```ruby:turnip-1.2.1/lib/turnip/rspec.rb\n\nmodule Turnip\n  module RSpec\n\n    # \uff08\u7565\uff09\n\n    class << self\n      def fetch_current_example(context)\n        if ::RSpec.respond_to?(:current_example)\n          ::RSpec.current_example\n        else\n          context.example\n        end\n      end\n\n      def run(feature_file)  # 66\u884c\u76ee\n        Turnip::Builder.build(feature_file).features.each do |feature|  # 6\u3078\n          describe feature.name, feature.metadata_hash do\n            before do\n              example = Turnip::RSpec.fetch_current_example(self)\n              # This is kind of a hack, but it will make RSpec throw way nicer exceptions\n              example.metadata[:file_path] = feature_file\n\n              feature.backgrounds.map(&:steps).flatten.each do |step|\n                run_step(feature_file, step)\n              end\n            end\n            feature.scenarios.each do |scenario|\n              instance_eval <<-EOS, feature_file, scenario.line\n                describe scenario.name, scenario.metadata_hash do it(scenario.steps.map(&:description).join(' -> ')) do\n                    scenario.steps.each do |step|\n                      run_step(feature_file, step)\n                    end\n                  end\n                end\n              EOS\n            end\n          end\n        end\n      end\n    end\n  end\nend\n```\n\n### 6. turnip/builder.rb\n\n`Gherkin::Parser::Parser`\u3092\u4f7f\u3063\u3066Gherkin\u5f62\u5f0f\u306e`feature_file`\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3044\u307e\u3059\u3002\n\n```ruby:turnip-1.2.1/lib/turnip/builder.rb\nrequire \"gherkin\"\n\nmodule Turnip\n  class Builder\n\n    # \uff08\u7565\uff09\n\n    class << self\n      def build(feature_file)\n        Turnip::Builder.new.tap do |builder|\n          parser = Gherkin::Parser::Parser.new(builder, true)\n          parser.parse(File.read(feature_file), feature_file, 0)\n        end\n      end\n    end\n\n    # \uff08\u7565\uff09\n\n  end\nend\n```\n\n### \u7b2c2\u90e8\u307e\u3068\u3081\n\n\u3053\u3053\u307e\u3067\u3067\u3001\u6700\u521d\u306e\u7591\u554f\u306f\u5927\u4f53\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\n> `.rspec`\u306b\u66f8\u304f`-r turnip/rspec`\u306e\u610f\u5473\u306f\uff1f\n\n`require 'turnip/rspec'`\u3057\u3066\u3044\u307e\u3059\u3002\n\n> \u306a\u305cstep\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u5206\u3067load\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\uff1f\n\n[Turnip\u306eREADME](https://github.com/jnicklas/turnip)\u306b\u306f\u3001`spec_helper.rb`\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3088\u3046\u6307\u793a\u304c\u3042\u308a\u307e\u3059\u3002\n\n```ruby:spec/spec_helper.rb\nDir.glob('spec/steps/**/*steps.rb') { |f| load f, true }\n```\n\n\u3053\u308c\u307e\u3067\u898b\u3066\u304d\u305f\u3088\u3046\u306bspec\u30d5\u30a1\u30a4\u30eb\u3084feature\u30d5\u30a1\u30a4\u30eb\u306f\u81ea\u52d5\u3067\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u304c\u3001helper\u95a2\u6570\u6271\u3044\u306estep\u30d5\u30a1\u30a4\u30eb\u306f\u81ea\u5206\u3067\u8aad\u307f\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3059\u3002\n\n> Turnip\u3092\u4f7f\u3063\u305f\u6642\u306f`require 'spec_helper'`\u3057\u3066\u306a\u3044\u306e\u306b\u8aad\u307f\u8fbc\u307e\u308c\u3066\u3066\u6016\u3044\uff1e\uff1c\n\n\u8003\u3048\u308c\u3070\u5f53\u305f\u308a\u524d\u306a\u3093\u3067\u3059\u304c\u3001Gherkin\u5f62\u5f0f\u306efeature\u30d5\u30a1\u30a4\u30eb\u306f`require 'spec_helper'`\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001Turnip\u304c\u81ea\u52d5\u3067\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u307e\u3059\u3002Turnip\u3060\u3051\u3067\u5fc5\u8981\u306a\u30b3\u30fc\u30c9\u306f`turnip_helper.rb`\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n## RSpec\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u307e\u3068\u3081\n\nRSpec\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u306f\u3053\u308c\u3067\u7d42\u308f\u308a\u3067\u3059\u3002\u3061\u3083\u3093\u3068\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3053\u3068\u3067\u6f20\u7136\u3068\u3057\u305f\u4e0d\u5b89\u3092\u89e3\u6d88\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u81ea\u7531\u5ea6\u304c\u9ad8\u3059\u304e\u3066Ruby\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u306e\u306f\u8f9b\u3044\u3068\u3053\u308d\u3082\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u3044\u308d\u3044\u308d\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u66f8\u304d\u65b9\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u9762\u767d\u304b\u3063\u305f\u3067\u3059\u3002\n\n", "tags": ["RSpec2.14.7", "Turnip1.2.1"]}