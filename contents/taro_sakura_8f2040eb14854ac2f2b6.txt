{"context": " More than 1 year has passed since last update.Golang\u306e\u6709\u540d\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u3072\u3068\u3064Revel\u306b\u7528\u3044\u308bORM\u3092\u63a2\u3057\u3066\u3044\u305f\u3068\u304d\u306bGorp\u3092\u898b\u3064\u3051\u305f\u3051\u308c\u3069\u3001\u4f55\u3068\u306a\u304f\u9055\u3046\u306a\u30fc\u3068\u601d\u3063\u3066\u4ed6\u3092\u63a2\u3057\u3066\u3044\u305f\u3068\u304d\u306b\u898b\u3064\u3051\u305fORM\u306eGorm\u3002\n\u521d\u671f\u8a2d\u5b9a\u306b\u30cf\u30de\u3063\u305f\u306e\u3067\u5099\u5fd8\u3068\u3057\u3066\u3002\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067DB\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u306fRevel\u306eCache\u6a5f\u80fd\u3067Cache\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u3002\n\u307e\u305a\u306f gorm.go \u3092\u4f5c\u6210\u3002\npackage db\n\nimport (\n    \"github.com/revel/revel\"\n    \"github.com/jinzhu/gorm\"\n    _ \"github.com/go-sql-driver/mysql\"\n    \"strings\"\n    \"fmt\"\n    \"time\"\n)\n\nvar Gdb gorm.DB\nvar GCacheTime time.Duration\nvar TimeFormat string\n\nfunc getConnectionString() string {\n    host := getParamString(\"db.host\", \"\")\n    port := getParamString(\"db.port\", \"3306\")\n    user := getParamString(\"db.user\", \"\")\n    pass := getParamString(\"db.password\", \"\")\n    dbname := getParamString(\"db.name\", \"\")\n    protocol := getParamString(\"db.protocol\", \"tcp\")\n    dbargs := getParamString(\"db.args\", \" \")\n\n    if strings.Trim(dbargs, \" \") != \"\" {\n        dbargs = \"?\" + dbargs\n    } else {\n        dbargs = \"\"\n    }\n    return fmt.Sprintf(\"%s:%s@%s([%s]:%s)/%s%s\", \n        user, pass, protocol, host, port, dbname, dbargs)\n}\n\nfunc InitDB() {\n    var err error\n    connectionString := getConnectionString()\n    Gdb, err = gorm.Open(\"mysql\", connectionString)\n    if err != nil {\n        revel.ERROR.Println(\"FATAL\", err)\n        panic( err )\n    }\n    Gdb.LogMode(getParamBool(\"db.debug\"))\n    GCacheTime = getCacheTime()\n    TimeFormat = \"2006-01-02 15:04:06\"\n}\n\nfunc getParamString(param string, defaultValue string) string {\n    p, found := revel.Config.String(param)\n    if !found {\n        if defaultValue == \"\" {\n            revel.ERROR.Fatal(\"Cound not find parameter: \" + param)\n        } else {\n            return defaultValue\n        }\n    }\n    return p\n}\n\nfunc getParamInt(param string) int {\n    p, found := revel.Config.Int(param)\n    if !found {\n        revel.ERROR.Fatal(\"Cound not find parameter: \" + param)\n    }\n    return p\n}\n\nfunc getParamBool(param string) bool {\n    p, found := revel.Config.Bool(param)\n    if !found {\n        revel.ERROR.Fatal(\"Cound not find parameter: \" + param)\n    }\n    return p\n}\n\nfunc getCacheTime() time.Duration {\n    cacheTime := time.Duration(getParamInt(\"cache.time\")) * time.Minute\n    if cacheTime < 0 {\n        cacheTime = 1 * time.Nanosecond\n    }\n    return cacheTime\n}\n\n\u305d\u3057\u305f\u3089 \u4eca\u5ea6\u306f model \u3092\u4f5c\u6210\npackage models\n\nimport (\n    d \"api.gamefeat.net/app/libs/db\"\n    \"github.com/revel/revel/cache\"\n    \"github.com/revel/revel\"\n    \"errors\"\n)\n\nfunc (t TableModel) FindData(id string) (res TableModel, err error){\n    //DB\u63a5\u7d9a\n    d.InitDB()  \n    if c := cache.Get(\"SQL_CACHE_\"+id, &res); c != nil {\n        if d.Gdb.Table(\"table_name\").Select(\"*\").Where(\"id = ?\", id, 0, 0).First(&res).RecordNotFound() {\n            err = errors.New(\"FindData - NoData id : \"+id)\n            return res, err\n        }\n\n        go cache.Set(\"SQL_CACHE_\"+id, res, d.GCacheTime)\n    }\n\n    revel.INFO.Println(d.GCacheTime)\n    revel.INFO.Println(res)\n    return res, err\n}\n\n\u3053\u308c\u3067\u3068\u308a\u3042\u3048\u305aGORM\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3002\nGORM\u306f\u306a\u304b\u306a\u304b\u4fbf\u5229\u3067\u4f7f\u3044\u52dd\u624b\u304c\u3044\u3044\u611f\u3058\u304c\u3057\u305f\u3002\nGolang\u306e\u6709\u540d\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u3072\u3068\u3064[Revel](http://revel.github.io/)\u306b\u7528\u3044\u308bORM\u3092\u63a2\u3057\u3066\u3044\u305f\u3068\u304d\u306b[Gorp](https://github.com/coopernurse/gorp)\u3092\u898b\u3064\u3051\u305f\u3051\u308c\u3069\u3001\u4f55\u3068\u306a\u304f\u9055\u3046\u306a\u30fc\u3068\u601d\u3063\u3066\u4ed6\u3092\u63a2\u3057\u3066\u3044\u305f\u3068\u304d\u306b\u898b\u3064\u3051\u305fORM\u306e[Gorm](https://github.com/jinzhu/gorm)\u3002\n\n\u521d\u671f\u8a2d\u5b9a\u306b\u30cf\u30de\u3063\u305f\u306e\u3067\u5099\u5fd8\u3068\u3057\u3066\u3002\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067DB\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u306fRevel\u306eCache\u6a5f\u80fd\u3067Cache\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u3002\n\n\u307e\u305a\u306f gorm.go \u3092\u4f5c\u6210\u3002\n\n```go\npackage db\n\nimport (\n\t\"github.com/revel/revel\"\n\t\"github.com/jinzhu/gorm\"\n    _ \"github.com/go-sql-driver/mysql\"\n    \"strings\"\n    \"fmt\"\n    \"time\"\n)\n\nvar Gdb gorm.DB\nvar GCacheTime time.Duration\nvar TimeFormat string\n\nfunc getConnectionString() string {\n    host := getParamString(\"db.host\", \"\")\n    port := getParamString(\"db.port\", \"3306\")\n    user := getParamString(\"db.user\", \"\")\n    pass := getParamString(\"db.password\", \"\")\n    dbname := getParamString(\"db.name\", \"\")\n    protocol := getParamString(\"db.protocol\", \"tcp\")\n    dbargs := getParamString(\"db.args\", \" \")\n\n    if strings.Trim(dbargs, \" \") != \"\" {\n        dbargs = \"?\" + dbargs\n    } else {\n        dbargs = \"\"\n    }\n    return fmt.Sprintf(\"%s:%s@%s([%s]:%s)/%s%s\", \n        user, pass, protocol, host, port, dbname, dbargs)\n}\n\nfunc InitDB() {\n\tvar err error\n    connectionString := getConnectionString()\n    Gdb, err = gorm.Open(\"mysql\", connectionString)\n    if err != nil {\n        revel.ERROR.Println(\"FATAL\", err)\n        panic( err )\n    }\n    Gdb.LogMode(getParamBool(\"db.debug\"))\n    GCacheTime = getCacheTime()\n    TimeFormat = \"2006-01-02 15:04:06\"\n}\n\nfunc getParamString(param string, defaultValue string) string {\n    p, found := revel.Config.String(param)\n    if !found {\n        if defaultValue == \"\" {\n            revel.ERROR.Fatal(\"Cound not find parameter: \" + param)\n        } else {\n            return defaultValue\n        }\n    }\n    return p\n}\n\nfunc getParamInt(param string) int {\n    p, found := revel.Config.Int(param)\n    if !found {\n        revel.ERROR.Fatal(\"Cound not find parameter: \" + param)\n    }\n    return p\n}\n\nfunc getParamBool(param string) bool {\n    p, found := revel.Config.Bool(param)\n    if !found {\n        revel.ERROR.Fatal(\"Cound not find parameter: \" + param)\n    }\n    return p\n}\n\nfunc getCacheTime() time.Duration {\n\tcacheTime := time.Duration(getParamInt(\"cache.time\")) * time.Minute\n\tif cacheTime < 0 {\n\t\tcacheTime = 1 * time.Nanosecond\n\t}\n\treturn cacheTime\n}\n```\n\n\u305d\u3057\u305f\u3089 \u4eca\u5ea6\u306f model \u3092\u4f5c\u6210\n\n```go\npackage models\n\nimport (\n\td \"api.gamefeat.net/app/libs/db\"\n\t\"github.com/revel/revel/cache\"\n\t\"github.com/revel/revel\"\n\t\"errors\"\n)\n\nfunc (t TableModel) FindData(id string) (res TableModel, err error){\n\t//DB\u63a5\u7d9a\n\td.InitDB()\t\n\tif c := cache.Get(\"SQL_CACHE_\"+id, &res); c != nil {\n\t\tif d.Gdb.Table(\"table_name\").Select(\"*\").Where(\"id = ?\", id, 0, 0).First(&res).RecordNotFound() {\n\t\t\terr = errors.New(\"FindData - NoData id : \"+id)\n\t\t\treturn res, err\n\t\t}\n\t\t\n\t\tgo cache.Set(\"SQL_CACHE_\"+id, res, d.GCacheTime)\n\t}\n\t\n\trevel.INFO.Println(d.GCacheTime)\n\trevel.INFO.Println(res)\n\treturn res, err\n}\n```\n\n\u3053\u308c\u3067\u3068\u308a\u3042\u3048\u305aGORM\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3002\nGORM\u306f\u306a\u304b\u306a\u304b\u4fbf\u5229\u3067\u4f7f\u3044\u52dd\u624b\u304c\u3044\u3044\u611f\u3058\u304c\u3057\u305f\u3002\n", "tags": ["Go", "golang", "Revel"]}