{"context": " More than 1 year has passed since last update.Mac\u30a2\u30d7\u30ea\u8a18\u8ff0\u8a00\u8a9e\u306eSwift\u304b\u3089Oclus SDK\u3092\u547c\u3073\u51fa\u3059\u624b\u9806\u304c\u5c11\u3005\u9762\u5012\u3067\u3057\u305f\u306e\u3067\u3001\u624b\u9806\u3092\u516c\u958b\u3057\u307e\u3059\u3002\n\u79c1\u306f\u3001\u4eac\u90fd\u96fb\u5275\u5eb5( http://www57.atwiki.jp/kyoto-densouan/ )\u3068\u3044\u3046\u96fb\u5b50\u5de5\u4f5c\u30b5\u30fc\u30af\u30eb\u306e\u4ef2\u9593\u3068\u300c\u30b1\u30c3\u30c8\u30b7\u30fc\u30fb\u30c7\u30f3\u30b8\u30e3\u30fc\u300d\u3068\u3044\u3046\u30ed\u30dc\u30c3\u30c8\u3092\u4f5c\u3063\u3066\u3044\u3066\u3001\u982d\u90e8\u306b\u30b9\u30c6\u30ec\u30aa\u30ab\u30e1\u30e9Ovrvision\u3092\u8a2d\u7f6e\u3057\u3001Oculus Rift DK2\u3067\u7acb\u4f53\u7684\u306b\u30e2\u30cb\u30bf\u3059\u308b\u6a5f\u69cb\u3092\u7d44\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\nhttps://www.youtube.com/watch?v=ypdVjHlC7Bg\n\u30b9\u30c6\u30ec\u30aa\u30ab\u30e1\u30e9Ovrvision\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089 \u2192 http://ovrvision.com/\n\u30ed\u30dc\u30c3\u30c8\u3092\u30e2\u30cb\u30bf\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Mac\u3067\u4f5c\u6210\u3057\u305f\u306e\u3067\u3059\u304c\u3001Oculus Rift\u3068Ovrvision\u306e\u52d5\u304d\u3092\u9023\u52d5\u3055\u305b\u308b\u305f\u3081\u3001Oculus SDK\u306eAPI\u3092\u7528\u3044\u3066Oculus Rift\u306e\u5411\u304d\u3092\u8aad\u307f\u3060\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u306bSwift\u304b\u3089Oculus SDK\u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\nOculus Rift\u3092\u3053\u306e\u3088\u3046\u306a\u7528\u9014\u3067\u4f7f\u3044\u305f\u3044\u304b\u305f\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\u8a18\u4e8b\u57f7\u7b46\u6642\u306e\u74b0\u5883\n\u30fbXcode Version 6.1 (6A1052d)\n\u30fbOculus SDK 0.4.3 Beta\n\nCocoa Application\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\nXcode\u3067Cocoa Application\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002Language\u306b\u306fSwift\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306bOculus\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8ffd\u52a0\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306bOculus SDK\u5185\u306eLibOVR\u30d5\u30a9\u30eb\u30c0\u3092\u30c9\u30ed\u30c3\u30d7\u3057\u307e\u3059\u3002\n\u203b\u3053\u306e\u6642\u3001\u300cAdd to targets:\u300d\u306e\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u300cLinked Frameworks and Libraries\u300d\u306b\u300cLibovr.a\u300d\u3092\u30c9\u30ed\u30c3\u30d7\u3057\u307e\u3059\u3002\n\n\u300cHeader Search Paths\u300d\u306b\u300cLibOVR/include\u300d\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\nObjective-C \u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3059\u308b\nOculus\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306fC++\u7528\u306e\u305f\u3081\u3001Swift\u304b\u3089\u547c\u3073\u51fa\u3059\u306b\u306f\u3001Objective-C\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u30e1\u30cb\u30e5\u30fc\u306e\u300cNew File...\u300d\u304b\u3089\u300cCocoa Class\u300d\u3092\u9078\u3093\u3067Objective-C\u306e\u30bd\u30fc\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u30d6\u30ea\u30c3\u30b8\u30f3\u30b0\u30d8\u30c3\u30c0\u4f5c\u6210\u78ba\u8a8d\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001YES\u3092\u62bc\u3057\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u203b\u3082\u3057\u30d6\u30ea\u30c3\u30b8\u30f3\u30b0\u30d8\u30c3\u30c0\u4f5c\u6210\u78ba\u8a8d\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u3053\u3061\u3089 http://qiita.com/titoi2/items/abe7b58a9e644b29e8c3 \u3092\u53c2\u8003\u306b\u8ffd\u52a0\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u3053\u3053\u3067\u306f\u30af\u30e9\u30b9\u540d\u3092OvrManager\u3068\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nC++\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u547c\u3073\u51fa\u3059\u305f\u3081\u306b\u3001OvrManager.m \u306e\u62e1\u5f35\u5b50\u3092.mm \u306b\u5909\u66f4\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nOculus SDK\u3092\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\nOvrManager\u30af\u30e9\u30b9\u306bOculus SDK\u3092\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u4f8b\u3068\u3057\u3066Oculus Rift\u306e\u5411\u304d\u3092\u8aad\u307f\u51fa\u3059\u30b3\u30fc\u30c9\u3092\u793a\u3057\u307e\u3059\u3002\n\nOvrManager.h\n#import <Foundation/Foundation.h>\n\n@interface OvrManager : NSObject\n\n- (void) ovrInitialize;\n- (void) ovrDestroy;\n\n- (BOOL) ovrGetOrientationYaw:(CGFloat*)yaw Pitch:(CGFloat*)pitch Roll:(CGFloat*)roll;\n\n@end\n\n\n\nOvrManager.mm\n\n#import \"OvrManager.h\"\n#import \"OVR.H\"\n\n@interface  OvrManager()\n\n@property  ovrHmd hmd;\n\n@end\n\n@implementation OvrManager\n\n\n- (void) ovrInitialize {\n    ovr_Initialize();\n    self.hmd = ovrHmd_Create(0);\n\n    if (self.hmd) {\n        // Get more details about the HMD.\n        ovrSizei resolution = self.hmd->Resolution;\n        NSLog(@\"resolution w:%d,h:%d\", resolution.w,resolution.h );\n\n        ovrHmd_ConfigureTracking(self.hmd, ovrTrackingCap_Orientation |\n                                 ovrTrackingCap_MagYawCorrection |\n                                 ovrTrackingCap_Position, 0);\n    }\n}\n\n- (BOOL) ovrGetOrientationYaw:(CGFloat*)yaw Pitch:(CGFloat*)pitch Roll:(CGFloat*)roll {\n    ovrTrackingState ts  = ovrHmd_GetTrackingState(self.hmd, ovr_GetTimeInSeconds());\n    if (ts.StatusFlags & (ovrStatus_OrientationTracked | ovrStatus_PositionTracked)) {\n        OVR::Posef pose = ts.HeadPose.ThePose;\n        float hmdYaw, hmdPitch, hmdRoll;\n        pose.Rotation.GetEulerAngles<OVR::Axis_Y, OVR::Axis_X, OVR::Axis_Z>(&hmdYaw, &hmdPitch, &hmdRoll);\n\n        *yaw  = hmdYaw;\n        *pitch = hmdPitch;\n        *roll = hmdRoll;\n        return YES;\n    }\n    return NO;\n}\n\n- (void) ovrDestroy {\n    ovrHmd_Destroy(self.hmd);\n    ovr_Shutdown();\n}\n\n@end\n\n\n\n\u30d6\u30ea\u30c3\u30b8\u30f3\u30b0\u30d8\u30c3\u30c0\u306bOvrManager.h\u306eimport\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\nOvrTest-Bridging-Header.h\n//\n//  Use this file to import your target's public headers that you would like to expose to Swift.\n//\n\n#import \"OvrManager.h\"\n\n\n\n\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u4f8b\n\u4f8b\u3068\u3057\u3066\u30bf\u30a4\u30de\u30fc\u3067\u5b9a\u671f\u7684\u306bOculus Rift\u306e\u5411\u304d\u3092\u30ed\u30b0\u306b\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u3092\u793a\u3057\u307e\u3059\u3002\n\u5b9f\u884c\u3057\u3066\u3001\u305d\u308c\u3063\u307d\u3044\u30ed\u30b0\u304c\u6d41\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\u505c\u6b62\u306fXcode\u306eStop\u3067\u884c\u3063\u3066\u4e0b\u3055\u3044\u3002\n\nAppDelegate.swift\nimport Cocoa\n\n@NSApplicationMain\nclass AppDelegate: NSObject, NSApplicationDelegate {\n\n    @IBOutlet weak var window: NSWindow!\n\n    // \u30ed\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    private let lockQueue = dispatch_queue_create(\"qiita.advent2014.swift.oculus.LockQueue\", nil)\n\n    private let ovrManager = OvrManager()\n    private var timer : NSTimer? = nil\n\n    // \u5411\u304d\u306e\u73fe\u5728\u5024\n    private var currentYaw : CGFloat = 0.0\n    private var currentPitch : CGFloat = 0.0\n    private var currentRoll : CGFloat = 0.0\n\n\n    func applicationDidFinishLaunching(aNotification: NSNotification) {\n        ovrManager.ovrInitialize()\n        sensingStart()\n    }\n\n    func applicationWillTerminate(aNotification: NSNotification) {\n        // Insert code here to tear down your application\n    }\n\n    func sensingStart() {\n        dispatch_sync(lockQueue, {\n            if self.timer != nil {\n                return\n            }\n            self.timer = NSTimer.scheduledTimerWithTimeInterval(0.05,\n                target:self,\n                selector:Selector(\"sensingUpdate\"),userInfo:nil,repeats:true);\n        })\n    }\n\n    func sensingStop() {\n        dispatch_sync(lockQueue, {\n            if self.timer == nil {\n                return\n            }\n\n            self.timer?.invalidate()\n            self.timer = nil\n        })\n    }\n\n    @objc private  func sensingUpdate() {\n        ovrManager.ovrGetOrientationYaw (&currentYaw, pitch: &currentPitch, roll: &currentRoll)\n        NSLog(\"sensingUpdate Yaw:\\(currentYaw), Pitch:\\(currentPitch), Roll:\\(currentRoll)\")\n    }\n}\n\n\n\n\n\u7d42\u308f\u308a\u306b\u5411\u304b\u3063\u3066\n\u660e\u65e512\u670806\u65e5\u306e\u8a18\u4e8b\u306f\u3001\n\u305d\u308c\u3067\u306f\u3001Oculus\u3092\u4f7f\u3063\u3066\u697d\u3057\u3044Swift\u30e9\u30a4\u30d5\u3092\uff01\nMac\u30a2\u30d7\u30ea\u8a18\u8ff0\u8a00\u8a9e\u306eSwift\u304b\u3089Oclus SDK\u3092\u547c\u3073\u51fa\u3059\u624b\u9806\u304c\u5c11\u3005\u9762\u5012\u3067\u3057\u305f\u306e\u3067\u3001\u624b\u9806\u3092\u516c\u958b\u3057\u307e\u3059\u3002\n\n\u79c1\u306f\u3001\u4eac\u90fd\u96fb\u5275\u5eb5( http://www57.atwiki.jp/kyoto-densouan/ )\u3068\u3044\u3046\u96fb\u5b50\u5de5\u4f5c\u30b5\u30fc\u30af\u30eb\u306e\u4ef2\u9593\u3068\u300c\u30b1\u30c3\u30c8\u30b7\u30fc\u30fb\u30c7\u30f3\u30b8\u30e3\u30fc\u300d\u3068\u3044\u3046\u30ed\u30dc\u30c3\u30c8\u3092\u4f5c\u3063\u3066\u3044\u3066\u3001\u982d\u90e8\u306b\u30b9\u30c6\u30ec\u30aa\u30ab\u30e1\u30e9Ovrvision\u3092\u8a2d\u7f6e\u3057\u3001Oculus Rift DK2\u3067\u7acb\u4f53\u7684\u306b\u30e2\u30cb\u30bf\u3059\u308b\u6a5f\u69cb\u3092\u7d44\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\nhttps://www.youtube.com/watch?v=ypdVjHlC7Bg\n\u30b9\u30c6\u30ec\u30aa\u30ab\u30e1\u30e9Ovrvision\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089 \u2192 http://ovrvision.com/\n\n\u30ed\u30dc\u30c3\u30c8\u3092\u30e2\u30cb\u30bf\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Mac\u3067\u4f5c\u6210\u3057\u305f\u306e\u3067\u3059\u304c\u3001Oculus Rift\u3068Ovrvision\u306e\u52d5\u304d\u3092\u9023\u52d5\u3055\u305b\u308b\u305f\u3081\u3001Oculus SDK\u306eAPI\u3092\u7528\u3044\u3066Oculus Rift\u306e\u5411\u304d\u3092\u8aad\u307f\u3060\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u306bSwift\u304b\u3089Oculus SDK\u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\nOculus Rift\u3092\u3053\u306e\u3088\u3046\u306a\u7528\u9014\u3067\u4f7f\u3044\u305f\u3044\u304b\u305f\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u8a18\u4e8b\u57f7\u7b46\u6642\u306e\u74b0\u5883\n\u30fbXcode Version 6.1 (6A1052d)\n\u30fbOculus SDK 0.4.3 Beta\n\n#Cocoa Application\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\nXcode\u3067Cocoa Application\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002**Language\u306b\u306fSwift\u3092\u9078\u629e\u3057\u307e\u3059\u3002**\n\n#\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306bOculus\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8ffd\u52a0\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306bOculus SDK\u5185\u306eLibOVR\u30d5\u30a9\u30eb\u30c0\u3092\u30c9\u30ed\u30c3\u30d7\u3057\u307e\u3059\u3002\n**\u203b\u3053\u306e\u6642\u3001\u300cAdd to targets:\u300d\u306e\u30c1\u30a7\u30c3\u30af\u3092\u5916\u3057\u3066\u304a\u304d\u307e\u3059\u3002**\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-11-18 2.19.29.png](https://qiita-image-store.s3.amazonaws.com/0/26936/605232d8-42e3-7a00-d3cc-bff2ad2629ea.png)\n\n\u300cLinked Frameworks and Libraries\u300d\u306b\u300cLibovr.a\u300d\u3092\u30c9\u30ed\u30c3\u30d7\u3057\u307e\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-11-18 2.23.44.png](https://qiita-image-store.s3.amazonaws.com/0/26936/40453d2b-8432-b37b-1eb8-eb1bd65e176e.png)\n\n\u300cHeader Search Paths\u300d\u306b\u300cLibOVR/include\u300d\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-11-18 2.31.34.png](https://qiita-image-store.s3.amazonaws.com/0/26936/1f36035c-4407-aedd-9962-549a0012af4e.png)\n\n#Objective-C \u30bd\u30fc\u30b9\u3092\u8ffd\u52a0\u3059\u308b\nOculus\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306fC++\u7528\u306e\u305f\u3081\u3001Swift\u304b\u3089\u547c\u3073\u51fa\u3059\u306b\u306f\u3001Objective-C\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u30e1\u30cb\u30e5\u30fc\u306e\u300cNew File...\u300d\u304b\u3089\u300cCocoa Class\u300d\u3092\u9078\u3093\u3067Objective-C\u306e\u30bd\u30fc\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u30d6\u30ea\u30c3\u30b8\u30f3\u30b0\u30d8\u30c3\u30c0\u4f5c\u6210\u78ba\u8a8d\u306e\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001YES\u3092\u62bc\u3057\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u203b\u3082\u3057\u30d6\u30ea\u30c3\u30b8\u30f3\u30b0\u30d8\u30c3\u30c0\u4f5c\u6210\u78ba\u8a8d\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u3053\u3061\u3089 http://qiita.com/titoi2/items/abe7b58a9e644b29e8c3 \u3092\u53c2\u8003\u306b\u8ffd\u52a0\u3057\u3066\u4e0b\u3055\u3044\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-11-18 2.36.56.png](https://qiita-image-store.s3.amazonaws.com/0/26936/a9f38c0a-e523-bd09-e692-1aeec4845190.png)\n\n\u3053\u3053\u3067\u306f\u30af\u30e9\u30b9\u540d\u3092OvrManager\u3068\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n**C++\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u547c\u3073\u51fa\u3059\u305f\u3081\u306b\u3001OvrManager.m \u306e\u62e1\u5f35\u5b50\u3092.mm \u306b\u5909\u66f4\u3057\u3066\u304a\u304d\u307e\u3059\u3002**\n\n#Oculus SDK\u3092\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\n\nOvrManager\u30af\u30e9\u30b9\u306bOculus SDK\u3092\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u4f8b\u3068\u3057\u3066Oculus Rift\u306e\u5411\u304d\u3092\u8aad\u307f\u51fa\u3059\u30b3\u30fc\u30c9\u3092\u793a\u3057\u307e\u3059\u3002\n\n```obj-c:OvrManager.h\n#import <Foundation/Foundation.h>\n\n@interface OvrManager : NSObject\n\n- (void) ovrInitialize;\n- (void) ovrDestroy;\n\n- (BOOL) ovrGetOrientationYaw:(CGFloat*)yaw Pitch:(CGFloat*)pitch Roll:(CGFloat*)roll;\n\n@end\n```\n\n```obj-c:OvrManager.mm\n\n#import \"OvrManager.h\"\n#import \"OVR.H\"\n\n@interface  OvrManager()\n\n@property  ovrHmd hmd;\n\n@end\n\n@implementation OvrManager\n\n\n- (void) ovrInitialize {\n    ovr_Initialize();\n    self.hmd = ovrHmd_Create(0);\n    \n    if (self.hmd) {\n        // Get more details about the HMD.\n        ovrSizei resolution = self.hmd->Resolution;\n        NSLog(@\"resolution w:%d,h:%d\", resolution.w,resolution.h );\n        \n        ovrHmd_ConfigureTracking(self.hmd, ovrTrackingCap_Orientation |\n                                 ovrTrackingCap_MagYawCorrection |\n                                 ovrTrackingCap_Position, 0);\n    }\n}\n\n- (BOOL) ovrGetOrientationYaw:(CGFloat*)yaw Pitch:(CGFloat*)pitch Roll:(CGFloat*)roll {\n    ovrTrackingState ts  = ovrHmd_GetTrackingState(self.hmd, ovr_GetTimeInSeconds());\n    if (ts.StatusFlags & (ovrStatus_OrientationTracked | ovrStatus_PositionTracked)) {\n        OVR::Posef pose = ts.HeadPose.ThePose;\n        float hmdYaw, hmdPitch, hmdRoll;\n        pose.Rotation.GetEulerAngles<OVR::Axis_Y, OVR::Axis_X, OVR::Axis_Z>(&hmdYaw, &hmdPitch, &hmdRoll);\n        \n        *yaw  = hmdYaw;\n        *pitch = hmdPitch;\n        *roll = hmdRoll;\n        return YES;\n    }\n    return NO;\n}\n\n- (void) ovrDestroy {\n    ovrHmd_Destroy(self.hmd);\n    ovr_Shutdown();\n}\n\n@end\n\n```\n\n\u30d6\u30ea\u30c3\u30b8\u30f3\u30b0\u30d8\u30c3\u30c0\u306bOvrManager.h\u306eimport\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```obj-c:OvrTest-Bridging-Header.h\n//\n//  Use this file to import your target's public headers that you would like to expose to Swift.\n//\n\n#import \"OvrManager.h\"\n```\n\n#\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u4f8b\n\n\u4f8b\u3068\u3057\u3066\u30bf\u30a4\u30de\u30fc\u3067\u5b9a\u671f\u7684\u306bOculus Rift\u306e\u5411\u304d\u3092\u30ed\u30b0\u306b\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u3092\u793a\u3057\u307e\u3059\u3002\n\u5b9f\u884c\u3057\u3066\u3001\u305d\u308c\u3063\u307d\u3044\u30ed\u30b0\u304c\u6d41\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\u505c\u6b62\u306fXcode\u306eStop\u3067\u884c\u3063\u3066\u4e0b\u3055\u3044\u3002\n\n```swift:AppDelegate.swift\nimport Cocoa\n\n@NSApplicationMain\nclass AppDelegate: NSObject, NSApplicationDelegate {\n    \n    @IBOutlet weak var window: NSWindow!\n    \n    // \u30ed\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    private let lockQueue = dispatch_queue_create(\"qiita.advent2014.swift.oculus.LockQueue\", nil)\n    \n    private let ovrManager = OvrManager()\n    private var timer : NSTimer? = nil\n    \n    // \u5411\u304d\u306e\u73fe\u5728\u5024\n    private var currentYaw : CGFloat = 0.0\n    private var currentPitch : CGFloat = 0.0\n    private var currentRoll : CGFloat = 0.0\n    \n    \n    func applicationDidFinishLaunching(aNotification: NSNotification) {\n        ovrManager.ovrInitialize()\n        sensingStart()\n    }\n    \n    func applicationWillTerminate(aNotification: NSNotification) {\n        // Insert code here to tear down your application\n    }\n    \n    func sensingStart() {\n        dispatch_sync(lockQueue, {\n            if self.timer != nil {\n                return\n            }\n            self.timer = NSTimer.scheduledTimerWithTimeInterval(0.05,\n                target:self,\n                selector:Selector(\"sensingUpdate\"),userInfo:nil,repeats:true);\n        })\n    }\n    \n    func sensingStop() {\n        dispatch_sync(lockQueue, {\n            if self.timer == nil {\n                return\n            }\n            \n            self.timer?.invalidate()\n            self.timer = nil\n        })\n    }\n    \n    @objc private  func sensingUpdate() {\n        ovrManager.ovrGetOrientationYaw (&currentYaw, pitch: &currentPitch, roll: &currentRoll)\n        NSLog(\"sensingUpdate Yaw:\\(currentYaw), Pitch:\\(currentPitch), Roll:\\(currentRoll)\")\n    }\n}\n\n```\n\n#\u7d42\u308f\u308a\u306b\u5411\u304b\u3063\u3066\n\u660e\u65e512\u670806\u65e5\u306e\u8a18\u4e8b\u306f\u3001\n\u305d\u308c\u3067\u306f\u3001Oculus\u3092\u4f7f\u3063\u3066\u697d\u3057\u3044Swift\u30e9\u30a4\u30d5\u3092\uff01\n\n", "tags": ["Oculus", "Swift", "Xcode"]}