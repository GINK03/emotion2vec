{"context": " More than 1 year has passed since last update.\u56de\u5e30\u5206\u6790\u306b\u3064\u3044\u3066\u306f\u4ee5\u524d\u306b\u3082\u7dda\u5f62\u56de\u5e30\u306e\u8a71\u984c\u3067\u89e6\u308c\u307e\u3057\u305f\u3002\n\nNumPy \u3067\u56de\u5e30\u5206\u6790\n\u3067\u306f\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u56de\u5e30\u5206\u6790\u3092\u304a\u3053\u306a\u3063\u3066\u307f\u307e\u3059\u3002 np.polyfit \u3084 np.polyval \u3092\u5229\u7528\u3059\u308b\u3068 n \u6b21\u5f0f\u3067 2 \u5909\u6570\u306e\u56de\u5e30\u5206\u6790\u3092\u304a\u3053\u306a\u3048\u307e\u3059\u3002\n\u8a73\u7d30\u306f\u4e0a\u8a18\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u305f\u307b\u3046\u304c\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u6b21\u306e\u901a\u308a\u3068\u306a\u308a\u307e\u3059\u3002\n\nnp.polyfit(x, y, n) : n \u6b21\u5f0f\u3067 2 \u5909\u6570\u306e\u56de\u5e30\u5206\u6790\nnp.polyval(p, t) : p \u3067\u8868\u3055\u308c\u308b\u591a\u9805\u5f0f\u306b t \u3092\u4ee3\u5165\u3057\u5024\u3092\u8a08\u7b97\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.array([0.0, 1.0, 2.0, 3.0,  4.0,  5.0])\ny = np.array([0.0, 0.8, 0.9, 0.1, -0.8, -1.0])\nz = np.polyfit(x, y, 3)\n\np = np.poly1d(z)\np30 = np.poly1d(np.polyfit(x, y, 30))\nxp = np.linspace(-2, 6, 100)\n\nplt.plot(x, y, '.', xp, p(xp), '-', xp, p30(xp), '*')\nplt.ylim(-2,2)\nplt.show()\nplt.savefig('image.png')\n\n\n\u3053\u306e\u3068\u304d\n1 \u6b21\u5f0f\u306e\u5834\u5408\u306f p[0]: \u50be\u304d\u3001 p[1]: \u5207\u7247\u3068\u306a\u308a\u307e\u3059\u3002\nN \u6b21\u5f0f\u306a\u3089 p[0]t(N-1) + p[1]*t*(N-2) + ... + p[N-2]*t + p[N-1] \u3067\u3059\u3002\n\u6700\u5c0f\u4e8c\u4e57\u6cd5\u306b\u3064\u3044\u3066\u3082\u4ee5\u524d\u306b\u89e6\u308c\u307e\u3057\u305f\u304c\u3001\u30c7\u30fc\u30bf\u5217 {(x_1, y_1), (x_2, y_2), ... (x_n, y_n)} \u306b\u5bfe\u3057\u3066\u6b8b\u5dee\u5e73\u65b9\u548c\u3092\u6700\u5c0f\u3068\u3059\u308b\u30e2\u30c7\u30eb\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u89b3\u6e2c\u5024\u306e\u8aa4\u5dee\u5206\u5e03\u306e\u5206\u6563\u304c\u4e00\u5b9a\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\n\n\u91cd\u56de\u5e30\u5206\u6790\n\u72ec\u7acb\u5909\u6570 m \u500b\u306e\u30e2\u30c7\u30eb\u3067\u306e\u56de\u5e30\u5206\u6790\u304c\u91cd\u56de\u5e30\u5206\u6790\u3067\u3059\u3002\nz=ax+by+cz=ax+by+c{z = ax + by + c\n}\n\u3068\u3044\u3046\u5f0f\u3092\u6c42\u3081\u305f\u3044\u3068\u3057\u307e\u3059\u3002\nx = [9.83, -9.97, -3.91, -3.94, -13.67, -14.04, 4.81, 7.65, 5.50, -3.34]\ny = [-5.50, -13.53, -1.23, 6.07, 1.94, 2.79, -5.43, 15.57, 7.26, 1.34]\nz = [635.99, 163.78, 86.94, 245.35, 1132.88, 1239.55, 214.01, 67.94, -1.48, 104.18]\n\nimport numpy as np\nfrom scipy import linalg as LA\n\nN = len(x)\nG = np.array([x, y, np.ones(N)]).T\nresult = LA.solve(G.T.dot(G), G.T.dot(z))\n\nprint(result)\n\n\u3053\u308c\u306b\u3088\u308a\n[ -30.02043308    3.55275314  322.33397214]\n\u304c\u6c42\u307e\u308a\u307e\u3059\u304b\u3089\nz=\u221230.0x+3.55y+322z=\u221230.0x+3.55y+322{z = -30.0x + 3.55y + 322\n}\n\u3068\u3044\u3046\u65b9\u7a0b\u5f0f\u304c\u6c42\u307e\u308a\u3001\u3053\u308c\u304c\u89e3\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u53c2\u8003\n2013\u5e74 \u30d7\u30ed\u30b0\u30e9\u30de\u306e\u70ba\u306e\u6570\u5b66\u52c9\u5f37\u4f1a \u8cc7\u6599 \nhttp://nineties.github.io/math-seminar/\n\u56de\u5e30\u5206\u6790\u306b\u3064\u3044\u3066\u306f\u4ee5\u524d\u306b\u3082[\u7dda\u5f62\u56de\u5e30\u306e\u8a71\u984c](http://qiita.com/ynakayama/items/d6e8513791b43f18d28b)\u3067\u89e6\u308c\u307e\u3057\u305f\u3002\n\n## NumPy \u3067\u56de\u5e30\u5206\u6790\n\n\u3067\u306f\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u56de\u5e30\u5206\u6790\u3092\u304a\u3053\u306a\u3063\u3066\u307f\u307e\u3059\u3002 [np.polyfit](http://docs.scipy.org/doc/numpy/reference/generated/numpy.polyfit.html) \u3084 [np.polyval](http://docs.scipy.org/doc/numpy/reference/generated/numpy.polyval.html#numpy.polyval) \u3092\u5229\u7528\u3059\u308b\u3068 n \u6b21\u5f0f\u3067 2 \u5909\u6570\u306e\u56de\u5e30\u5206\u6790\u3092\u304a\u3053\u306a\u3048\u307e\u3059\u3002\n\n\u8a73\u7d30\u306f\u4e0a\u8a18\u306e\u30ea\u30f3\u30af\u304b\u3089\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u305f\u307b\u3046\u304c\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u6b21\u306e\u901a\u308a\u3068\u306a\u308a\u307e\u3059\u3002\n\n* np.polyfit(x, y, n) : n \u6b21\u5f0f\u3067 2 \u5909\u6570\u306e\u56de\u5e30\u5206\u6790\n* np.polyval(p, t) : p \u3067\u8868\u3055\u308c\u308b\u591a\u9805\u5f0f\u306b t \u3092\u4ee3\u5165\u3057\u5024\u3092\u8a08\u7b97\n\n```py3\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.array([0.0, 1.0, 2.0, 3.0,  4.0,  5.0])\ny = np.array([0.0, 0.8, 0.9, 0.1, -0.8, -1.0])\nz = np.polyfit(x, y, 3)\n\np = np.poly1d(z)\np30 = np.poly1d(np.polyfit(x, y, 30))\nxp = np.linspace(-2, 6, 100)\n\nplt.plot(x, y, '.', xp, p(xp), '-', xp, p30(xp), '*')\nplt.ylim(-2,2)\nplt.show()\nplt.savefig('image.png')\n```\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/38501/6c64f09a-864d-785d-2d77-289bb1edd98f.png)\n\n\u3053\u306e\u3068\u304d\n1 \u6b21\u5f0f\u306e\u5834\u5408\u306f p[0]: \u50be\u304d\u3001 p[1]: \u5207\u7247\u3068\u306a\u308a\u307e\u3059\u3002\nN \u6b21\u5f0f\u306a\u3089 p[0]*t**(N-1) + p[1]*t**(N-2) + ... + p[N-2]*t + p[N-1] \u3067\u3059\u3002\n\n\u6700\u5c0f\u4e8c\u4e57\u6cd5\u306b\u3064\u3044\u3066\u3082[\u4ee5\u524d\u306b\u89e6\u308c\u307e\u3057\u305f](http://qiita.com/ynakayama/items/5732f0631c860d4b5d8b)\u304c\u3001\u30c7\u30fc\u30bf\u5217 {(x_1, y_1), (x_2, y_2), ... (x_n, y_n)} \u306b\u5bfe\u3057\u3066\u6b8b\u5dee\u5e73\u65b9\u548c\u3092\u6700\u5c0f\u3068\u3059\u308b\u30e2\u30c7\u30eb\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u89b3\u6e2c\u5024\u306e\u8aa4\u5dee\u5206\u5e03\u306e\u5206\u6563\u304c\u4e00\u5b9a\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\n\n## \u91cd\u56de\u5e30\u5206\u6790\n\n\u72ec\u7acb\u5909\u6570 m \u500b\u306e\u30e2\u30c7\u30eb\u3067\u306e\u56de\u5e30\u5206\u6790\u304c[\u91cd\u56de\u5e30\u5206\u6790](http://ja.wikipedia.org/wiki/%E9%87%8D%E5%9B%9E%E5%B8%B0%E5%88%86%E6%9E%90)\u3067\u3059\u3002\n\n```math\nz = ax + by + c\n```\n\u3068\u3044\u3046\u5f0f\u3092\u6c42\u3081\u305f\u3044\u3068\u3057\u307e\u3059\u3002\n\n```py3\nx = [9.83, -9.97, -3.91, -3.94, -13.67, -14.04, 4.81, 7.65, 5.50, -3.34]\ny = [-5.50, -13.53, -1.23, 6.07, 1.94, 2.79, -5.43, 15.57, 7.26, 1.34]\nz = [635.99, 163.78, 86.94, 245.35, 1132.88, 1239.55, 214.01, 67.94, -1.48, 104.18]\n\nimport numpy as np\nfrom scipy import linalg as LA\n\nN = len(x)\nG = np.array([x, y, np.ones(N)]).T\nresult = LA.solve(G.T.dot(G), G.T.dot(z))\n\nprint(result)\n```\n\n\u3053\u308c\u306b\u3088\u308a\n[ -30.02043308    3.55275314  322.33397214]\n\u304c\u6c42\u307e\u308a\u307e\u3059\u304b\u3089\n\n```math\nz = -30.0x + 3.55y + 322\n```\n\n\u3068\u3044\u3046\u65b9\u7a0b\u5f0f\u304c\u6c42\u307e\u308a\u3001\u3053\u308c\u304c\u89e3\u3068\u306a\u308a\u307e\u3059\u3002\n\n## \u53c2\u8003\n\n2013\u5e74 \u30d7\u30ed\u30b0\u30e9\u30de\u306e\u70ba\u306e\u6570\u5b66\u52c9\u5f37\u4f1a \u8cc7\u6599 \nhttp://nineties.github.io/math-seminar/\n", "tags": ["numpy", "scipy", "statistics", "Python"]}