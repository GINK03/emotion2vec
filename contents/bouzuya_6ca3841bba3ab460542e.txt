{"context": "\u3053\u306e\u8a18\u4e8b\u306f (bouzuya) PureScript Advent Calendar 2016 \u306e 24 \u65e5\u76ee\u3002 (bouzuya) PureScript Advent Calendar 2016 \u306f bouzuya \u306e PureScript \u5b66\u7fd2\u306e\u8a18\u9332\u3060\u3002\n\n\u2190 23 \u65e5\u76ee\u300e PureScript by Example \u306e 6.11, 6.12, 6.13 \u3092\u8aad\u3080 - Qiita \u300f\n\u2192 25 \u65e5\u76ee\u300e PureScript by Example \u306e 7.5, 7.6, 7.7, 7.8 \u3092\u8aad\u3080 - Qiita \u300f\n\n\n\u6982\u8981\nPureScript by Example \u3092 PureScript Language Guide \u3084 Pursuit \u3092\u898b\u306a\u304c\u3089\u9032\u3081\u3066\u3044\u304f\u3002\n\u4eca\u65e5\u306f 7.1, 7.2, 7.3, 7.4 \u3092\u8aad\u3080\u3002\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u4f8b\u306f purescript-book \u306e exercises/chapter7 \u306b\u3042\u308b\u3002\n\u203b\u6ce8\u610f\u4e8b\u9805: \u82f1\u8a9e\u3068\u65e5\u672c\u8a9e\u8a33\u3067\u306f\u5927\u304d\u306a\u5dee\u7570\u304c\u3042\u308b\u30020.10.x \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u82f1\u8a9e\u306e\u5074\u3067\u9032\u3081\u308b\u3002\n\n\nPureScript by Example 2016-12-05 \u6642\u70b9\u3067 0.10.x \u5411\u3051\n\n\u5b9f\u4f8b\u306b\u3088\u308b PureScript 2016-12-05 \u6642\u70b9\u3067 0.7 \u5411\u3051\n\nPureScript Language Guide \u5bfe\u8c61\u30d0\u30fc\u30b8\u30e7\u30f3\u4e0d\u660e\n\n\nPureScript by Example 7.1\n\u3053\u306e\u7ae0\u3067\u306f applicative functor \u3068 traversable functor \u304c\u51fa\u3066\u6765\u308b\u3089\u3057\u3044\u3002\u4f8b\u3068\u3057\u3066\u306f 3 \u7ae0\u306e\u96fb\u8a71\u5e33\u3092\u307e\u305f\u4f7f\u3046\u3089\u3057\u3044\u3002\nPursuit:\n\nApplicative - Control.Applicative - purescript-prelude - Pursuit\nTraversable - Data.Traversable - purescript-foldable-traversable - Pursuit\n\n\nPureScript by Example 7.2\npurescript-control \u3068 purescript-validation \u3092\u4f7f\u3046\u3089\u3057\u3044\u3002\nPursuit:\n\npurescript-control - Pursuit\npurescript-validation - Pursuit\n\n\nPureScript by Example 7.3\n\u4f8b\u306e\u901a\u308a\u306b\u8aac\u660e\u3057\u3066\u307f\u308b\u3002\n\u4e0b\u8a18\u306e\u3088\u3046\u306a address \u304c\u3042\u308b\u3068\u304d\u3001 Maybe \u3092\u3068\u308b\u5f62\u3067\u4f7f\u3044\u305f\u304f\u306a\u308b\u3053\u3068\u306f\u307e\u307e\u3042\u308b\u3002\naddress :: String -> String -> String -> AddressBook\nMaybe \u3092\u3068\u308b\u5f62\u306f\u6b21\u306e\u3088\u3046\u306a\u578b\u306b\u306a\u308a\u305d\u3046\u3060\u3002\naddress' :: Maybe String -> Maybe String -> Maybe String -> Maybe AddressBook\n\u3053\u308c\u3092\u5b9f\u88c5\u3059\u308b\u306b\u306f Control.Apply \u30e2\u30b8\u30e5\u30fc\u30eb\u306e lift3 \u3092\u4f7f\u3046\u3068\u826f\u3044\u3089\u3057\u3044\u3002\nlift3 :: forall a b c d f. Apply f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\nPursuit:\n\nlift3 - Control.Apply - purescript-prelude - Pursuit\n\nMaybe \u3067\u306f\u306a\u304f Apply \u3060\u3051\u3069\u3001Maybe \u3082 Apply \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306a\u306e\u3067\u554f\u984c\u306a\u3044\u3002\nPursuit:\n\nMaybe - Data.Maybe - purescript-maybe - Pursuit\n\n> import Control.Apply (lift3)\n> import Data.AddressBook (address)\n> import Data.Maybe (Maybe(..))\n> :t lift3\nforall a b c d f. (Apply f) => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\n\n> :t address\nString -> String -> String -> Address\n\n> :t (lift3 address)\nforall t1. (Apply t1) => t1 String -> t1 String -> t1 String -> t1 Address\n\n> lift3 address (Just \"123 Fake St.\") Nothing (Just \"CA\")\nNothing\n\n> lift3 address (Just \"123 Fake St.\") (Just \"Faketown\") (Just \"CA\")\n(Just Address { street: \"123 Fake St.\", city: \"Faketown\", state: \"CA\" })\n\n\u3075\u3080\u3002\u3072\u3068\u3064\u3067\u3082 Nothing \u3060\u3068 Nothing \u306b\u306a\u308b\u3002\n\nPureScript by Example 7.4\nlift3 :: forall a b c d f. Apply f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\n\u3067\u51fa\u3066\u304f\u308b Apply \u3063\u3066\u4f55\u306a\u306e\u3001\u3068\u3044\u3046\u8a71\u3002\nclass Functor f where\n  map :: forall a b. (a -> b) -> f a -> f b\n\nclass Functor f <= Apply f where\n  apply :: forall a b. f (a -> b) -> f a -> f b\n\nf \u306e\u4e2d\u306b\u306a\u3044\u95a2\u6570\u3092 f \u306e\u4e2d\u306e a \u306b\u9069\u7528\u3059\u308b map \u3068\u3001f \u306e\u4e2d\u306b\u3042\u308b\u95a2\u6570\u3092 f \u306e\u4e2d\u306e a \u306b\u9069\u7528\u3059\u308b apply \u3002 f \u306f\u4eca\u56de\u3060\u3068 Maybe \u3002\ninstance functorMaybe :: Functor Maybe where\n  map f (Just a) = Just (f a)\n  map f Nothing  = Nothing\n\ninstance applyMaybe :: Apply Maybe where\n  apply (Just f) (Just x) = Just (f x)\n  apply _        _        = Nothing\n\n\u3055\u304d\u306e\u4f8b\u304b\u3089\u60f3\u50cf\u3067\u304d\u308b\u7bc4\u56f2\u306e\u5b9f\u88c5\u3002\n\u3067 lift3 \u306e\u5b9f\u88c5\u3002\u305d\u308c\u305e\u308c map \u306f <$> \u3001 apply \u306f <*> \u3068\u3044\u3046 operator \u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\nforall a b c d f. (Apply f) => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\nlift3 f x y z = f <$> x <*> y <*> z\n\n\u9806\u756a\u306b\u8ffd\u3063\u3066\u3044\u3051\u3070\u78ba\u304b\u306b\u3002\n> import Data.AddressBook (address)\n> import Data.Maybe (Maybe(..))\n> import Prelude ((<$>), (<*>))\n> address <$> Just \"123 Fake St.\" <*> Nothing <*> Just \"CA\"\nNothing\n\n> address <$> Just \"123 Fake St.\" <*> Just \"Faketown\" <*> Just \"CA\"\n(Just Address { street: \"123 Fake St.\", city: \"Faketown\", state: \"CA\" })\n\n\n\u307e\u3068\u3081\n\u7c21\u5358\u306b Maybe \u5bfe\u5fdc\u3067\u304d\u3061\u3083\u3046\u3082\u3093\u3060\u306a\u3042\u2026\u2026\u3002 Functor \u306e map \u3063\u3066\u805e\u304f\u3068\u6238\u60d1\u3046\u3051\u3069\u3001JavaScript \u3067\u3082 Array \u306e map \u4f7f\u3063\u3066\u308b\u3093\u3060\u3088\u306a\u2026\u2026\u3002\n\n\u6b21\u56de\u4ee5\u964d\u306e TODO\n\nPureScript by Example & PureScript Language Guide \u3092\u8aad\u307f\u9032\u3081\u308b\n\nArray \u4ee5\u5916\u3067\u306e do \u8a18\u6cd5\npsc-package\n24 Days of PureScript, 2016\n24 Days of PureScript, 2014\n\u67d0\u6c0f\u306e\u8a18\u4e8b\u306e\u7d39\u4ecb\n\ngithub.com/purescript \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\n\ngithub.com/purescript-node \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\n\ngithub.com/purescript-contrib \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\n\n\u3053\u306e\u8a18\u4e8b\u306f [(bouzuya) PureScript Advent Calendar 2016](http://www.adventar.org/calendars/1494) \u306e 24 \u65e5\u76ee\u3002 (bouzuya) PureScript Advent Calendar 2016 \u306f bouzuya \u306e PureScript \u5b66\u7fd2\u306e\u8a18\u9332\u3060\u3002\n\n- \u2190 23 \u65e5\u76ee\u300e [PureScript by Example \u306e 6.11, 6.12, 6.13 \u3092\u8aad\u3080 - Qiita][2016-12-23] \u300f\n- \u2192 25 \u65e5\u76ee\u300e [PureScript by Example \u306e 7.5, 7.6, 7.7, 7.8 \u3092\u8aad\u3080 - Qiita][2016-12-25] \u300f\n\n## \u6982\u8981\n\n[PureScript by Example][purescript-by-example] \u3092 [PureScript Language Guide][language-guide] \u3084 [Pursuit][pursuit] \u3092\u898b\u306a\u304c\u3089\u9032\u3081\u3066\u3044\u304f\u3002\n\n\u4eca\u65e5\u306f 7.1, 7.2, 7.3, 7.4 \u3092\u8aad\u3080\u3002\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u4f8b\u306f [purescript-book \u306e exercises/chapter7][purescript-book-chapter-7] \u306b\u3042\u308b\u3002\n\n\u203b\u6ce8\u610f\u4e8b\u9805: \u82f1\u8a9e\u3068\u65e5\u672c\u8a9e\u8a33\u3067\u306f\u5927\u304d\u306a\u5dee\u7570\u304c\u3042\u308b\u3002`0.10.x` \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u82f1\u8a9e\u306e\u5074\u3067\u9032\u3081\u308b\u3002\n\n- [PureScript by Example][purescript-by-example] 2016-12-05 \u6642\u70b9\u3067 0.10.x \u5411\u3051\n- [\u5b9f\u4f8b\u306b\u3088\u308b PureScript][purescript-by-example-ja] 2016-12-05 \u6642\u70b9\u3067 0.7 \u5411\u3051\n- [PureScript Language Guide][language-guide] \u5bfe\u8c61\u30d0\u30fc\u30b8\u30e7\u30f3\u4e0d\u660e\n\n## PureScript by Example 7.1\n\n\u3053\u306e\u7ae0\u3067\u306f applicative functor \u3068 traversable functor \u304c\u51fa\u3066\u6765\u308b\u3089\u3057\u3044\u3002\u4f8b\u3068\u3057\u3066\u306f 3 \u7ae0\u306e\u96fb\u8a71\u5e33\u3092\u307e\u305f\u4f7f\u3046\u3089\u3057\u3044\u3002\n\nPursuit:\n\n- [Applicative - Control.Applicative - purescript-prelude - Pursuit][pursuit-prelude-applicative]\n- [Traversable - Data.Traversable - purescript-foldable-traversable - Pursuit][pursuit-foldable-traversable-traversable]\n\n## PureScript by Example 7.2\n\n`purescript-control` \u3068 `purescript-validation` \u3092\u4f7f\u3046\u3089\u3057\u3044\u3002\n\nPursuit:\n\n- [purescript-control - Pursuit][pursuit-control]\n- [purescript-validation - Pursuit][pursuit-validation]\n\n## PureScript by Example 7.3\n\n\u4f8b\u306e\u901a\u308a\u306b\u8aac\u660e\u3057\u3066\u307f\u308b\u3002\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306a `address` \u304c\u3042\u308b\u3068\u304d\u3001 `Maybe` \u3092\u3068\u308b\u5f62\u3067\u4f7f\u3044\u305f\u304f\u306a\u308b\u3053\u3068\u306f\u307e\u307e\u3042\u308b\u3002\n\n`address :: String -> String -> String -> AddressBook`\n\n`Maybe` \u3092\u3068\u308b\u5f62\u306f\u6b21\u306e\u3088\u3046\u306a\u578b\u306b\u306a\u308a\u305d\u3046\u3060\u3002\n\n`address' :: Maybe String -> Maybe String -> Maybe String -> Maybe AddressBook`\n\n\u3053\u308c\u3092\u5b9f\u88c5\u3059\u308b\u306b\u306f `Control.Apply` \u30e2\u30b8\u30e5\u30fc\u30eb\u306e `lift3` \u3092\u4f7f\u3046\u3068\u826f\u3044\u3089\u3057\u3044\u3002\n\n`lift3 :: forall a b c d f. Apply f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d`\n\nPursuit:\n\n- [lift3 - Control.Apply - purescript-prelude - Pursuit][pursuit-prelude-lift3]\n\n`Maybe` \u3067\u306f\u306a\u304f `Apply` \u3060\u3051\u3069\u3001`Maybe` \u3082 `Apply` \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306a\u306e\u3067\u554f\u984c\u306a\u3044\u3002\n\nPursuit:\n\n- [Maybe - Data.Maybe - purescript-maybe - Pursuit][pursuit-maybe-maybe]\n\n```\n> import Control.Apply (lift3)\n> import Data.AddressBook (address)\n> import Data.Maybe (Maybe(..))\n> :t lift3\nforall a b c d f. (Apply f) => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\n\n> :t address\nString -> String -> String -> Address\n\n> :t (lift3 address)\nforall t1. (Apply t1) => t1 String -> t1 String -> t1 String -> t1 Address\n\n> lift3 address (Just \"123 Fake St.\") Nothing (Just \"CA\")\nNothing\n\n> lift3 address (Just \"123 Fake St.\") (Just \"Faketown\") (Just \"CA\")\n(Just Address { street: \"123 Fake St.\", city: \"Faketown\", state: \"CA\" })\n```\n\n\u3075\u3080\u3002\u3072\u3068\u3064\u3067\u3082 `Nothing` \u3060\u3068 `Nothing` \u306b\u306a\u308b\u3002\n\n## PureScript by Example 7.4\n\n`lift3 :: forall a b c d f. Apply f => (a -> b -> c -> d) -> f a -> f b -> f c -> f d`\n\n\u3067\u51fa\u3066\u304f\u308b `Apply` \u3063\u3066\u4f55\u306a\u306e\u3001\u3068\u3044\u3046\u8a71\u3002\n\n```\nclass Functor f where\n  map :: forall a b. (a -> b) -> f a -> f b\n\nclass Functor f <= Apply f where\n  apply :: forall a b. f (a -> b) -> f a -> f b\n```\n\n`f` \u306e\u4e2d\u306b\u306a\u3044\u95a2\u6570\u3092 `f` \u306e\u4e2d\u306e `a` \u306b\u9069\u7528\u3059\u308b `map` \u3068\u3001`f` \u306e\u4e2d\u306b\u3042\u308b\u95a2\u6570\u3092 `f` \u306e\u4e2d\u306e `a` \u306b\u9069\u7528\u3059\u308b `apply` \u3002 `f` \u306f\u4eca\u56de\u3060\u3068 `Maybe` \u3002\n\n```\ninstance functorMaybe :: Functor Maybe where\n  map f (Just a) = Just (f a)\n  map f Nothing  = Nothing\n\ninstance applyMaybe :: Apply Maybe where\n  apply (Just f) (Just x) = Just (f x)\n  apply _        _        = Nothing\n```\n\n\u3055\u304d\u306e\u4f8b\u304b\u3089\u60f3\u50cf\u3067\u304d\u308b\u7bc4\u56f2\u306e\u5b9f\u88c5\u3002\n\n\u3067 `lift3` \u306e\u5b9f\u88c5\u3002\u305d\u308c\u305e\u308c `map` \u306f `<$>` \u3001 `apply` \u306f `<*>` \u3068\u3044\u3046 operator \u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\n\n```\nforall a b c d f. (Apply f) => (a -> b -> c -> d) -> f a -> f b -> f c -> f d\nlift3 f x y z = f <$> x <*> y <*> z\n```\n\n\u9806\u756a\u306b\u8ffd\u3063\u3066\u3044\u3051\u3070\u78ba\u304b\u306b\u3002\n\n```\n> import Data.AddressBook (address)\n> import Data.Maybe (Maybe(..))\n> import Prelude ((<$>), (<*>))\n> address <$> Just \"123 Fake St.\" <*> Nothing <*> Just \"CA\"\nNothing\n\n> address <$> Just \"123 Fake St.\" <*> Just \"Faketown\" <*> Just \"CA\"\n(Just Address { street: \"123 Fake St.\", city: \"Faketown\", state: \"CA\" })\n```\n\n## \u307e\u3068\u3081\n\n\u7c21\u5358\u306b `Maybe` \u5bfe\u5fdc\u3067\u304d\u3061\u3083\u3046\u3082\u3093\u3060\u306a\u3042\u2026\u2026\u3002 `Functor` \u306e `map` \u3063\u3066\u805e\u304f\u3068\u6238\u60d1\u3046\u3051\u3069\u3001JavaScript \u3067\u3082 `Array` \u306e `map` \u4f7f\u3063\u3066\u308b\u3093\u3060\u3088\u306a\u2026\u2026\u3002\n\n## \u6b21\u56de\u4ee5\u964d\u306e TODO\n\n- PureScript by Example & PureScript Language Guide \u3092\u8aad\u307f\u9032\u3081\u308b\n- `Array` \u4ee5\u5916\u3067\u306e `do` \u8a18\u6cd5\n- `psc-package`\n- [24 Days of PureScript, 2016][paf31/24-days-of-purescript-2016]\n- [24 Days of PureScript, 2014](https://gist.github.com/paf31/8e9177b20ee920480fbc)\n- \u67d0\u6c0f\u306e\u8a18\u4e8b\u306e\u7d39\u4ecb\n- [github.com/purescript](https://github.com/purescript/) \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\n- [github.com/purescript-node](https://github.com/purescript-node) \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\n- [github.com/purescript-contrib](https://github.com/purescript-contrib) \u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\n\n[purescript-by-example]: https://leanpub.com/purescript/read\n[purescript-by-example-1]: https://leanpub.com/purescript/read#leanpub-auto-introduction\n[purescript-by-example-2]: https://leanpub.com/purescript/read#leanpub-auto-getting-started\n[purescript-by-example-3]: https://leanpub.com/purescript/read#leanpub-auto-functions-and-records\n[purescript-by-example-4]: https://leanpub.com/purescript/read#leanpub-auto-recursion-maps-and-folds\n[purescript-by-example-5]: https://leanpub.com/purescript/read#leanpub-auto-pattern-matching\n[purescript-by-example-6]: https://leanpub.com/purescript/read#leanpub-auto-type-classes\n[purescript-by-example-7]: https://leanpub.com/purescript/read#leanpub-auto-applicative-validation\n[purescript-by-example-8]: https://leanpub.com/purescript/read#leanpub-auto-the-eff-monad\n[purescript-by-example-9]: https://leanpub.com/purescript/read#leanpub-auto-canvas-graphics\n[purescript-by-example-10]: https://leanpub.com/purescript/read#leanpub-auto-the-foreign-function-interface\n[purescript-by-example-11]: https://leanpub.com/purescript/read#leanpub-auto-monadic-adventures\n[purescript-by-example-12]: https://leanpub.com/purescript/read#leanpub-auto-callback-hell\n[purescript-by-example-13]: https://leanpub.com/purescript/read#leanpub-auto-generative-testing\n[purescript-by-example-14]: https://leanpub.com/purescript/read#leanpub-auto-domain-specific-languages\n\n[2016-12-01]: http://qiita.com/bouzuya/items/a5be85ec3e496e5bf436\n[2016-12-02]: http://qiita.com/bouzuya/items/806335ea74ead0e33d95\n[2016-12-03]: http://qiita.com/bouzuya/items/86cc9aaaddcc1aa790cf\n[2016-12-04]: http://qiita.com/bouzuya/items/b2b80c22c50d0c1e739c\n[2016-12-05]: http://qiita.com/bouzuya/items/f19ee0b86e9aec3f0afa\n[2016-12-06]: http://qiita.com/bouzuya/items/4694ac25f68931115319\n[2016-12-07]: http://qiita.com/bouzuya/items/62c6ad30ecba3c68a7a3\n[2016-12-08]: http://qiita.com/bouzuya/items/7224535dd053c41748ed\n[2016-12-09]: http://qiita.com/bouzuya/items/868eafc19b96619c025a\n[2016-12-10]: http://qiita.com/bouzuya/items/1a54ba3702f9818527a5\n[2016-12-11]: http://qiita.com/bouzuya/items/ab2bc2d19461203f1ee5\n[2016-12-12]: http://qiita.com/bouzuya/items/c42ddb14477716de1dcf\n[2016-12-13]: http://qiita.com/bouzuya/items/a49463871a96459d7083\n[2016-12-14]: http://qiita.com/bouzuya/items/14ca2a2cd9c0bb01653d\n[2016-12-15]: http://qiita.com/bouzuya/items/0511f040381c6c2eba12\n[2016-12-16]: http://qiita.com/bouzuya/items/10d8f935c0e5695826c5\n[2016-12-17]: http://qiita.com/bouzuya/items/129b2ab8ba3fa89edaf5\n[2016-12-18]: http://qiita.com/bouzuya/items/ae7ce46363d0ccdfb03b\n[2016-12-19]: http://qiita.com/bouzuya/items/ade348495b755d57ede0\n[2016-12-20]: http://qiita.com/bouzuya/items/6e3cc11aa8387b4a5254\n[2016-12-21]: http://qiita.com/bouzuya/items/b7e04a015084eb1e8d32\n[2016-12-22]: http://qiita.com/bouzuya/items/92d21ee3bbfde3399888\n[2016-12-23]: http://qiita.com/bouzuya/items/6e49ad627da276263075\n[2016-12-24]: http://qiita.com/bouzuya/items/6ca3841bba3ab460542e\n[2016-12-25]: http://qiita.com/bouzuya/items/513f1f8ab0aeca0ea76a\n\n[pursuit-prelude-show]: https://pursuit.purescript.org/packages/purescript-prelude/2.1.0/docs/Data.Show#t:Show\n[pursuit-foldable-traversable-foldable]: https://pursuit.purescript.org/packages/purescript-foldable-traversable/2.0.0/docs/Data.Foldable#t:Foldable\n[pursuit-maybe-maybe]: https://pursuit.purescript.org/packages/purescript-maybe/2.0.1/docs/Data.Maybe#t:Maybe\n[pursuit-monoid-monoid]: https://pursuit.purescript.org/packages/purescript-monoid/2.2.0/docs/Data.Monoid#t:Monoid\n[pursuit-prelude-eq]: https://pursuit.purescript.org/packages/purescript-prelude/2.1.0/docs/Data.Eq#t:Eq\n[pursuit-prelude-field]: https://pursuit.purescript.org/packages/purescript-prelude/2.1.0/docs/Data.Field#t:Field\n[pursuit-prelude-functor]: https://pursuit.purescript.org/packages/purescript-prelude/2.1.0/docs/Data.Functor#t:Functor\n[pursuit-prelude-ord]: https://pursuit.purescript.org/packages/purescript-prelude/2.1.0/docs/Data.Ord#t:Ord\n[pursuit-prelude-semigroup]: https://pursuit.purescript.org/packages/purescript-prelude/2.1.0/docs/Data.Semigroup#t:Semigroup\n[pursuit-arrays-head]: https://pursuit.purescript.org/packages/purescript-arrays/3.1.0/docs/Data.Array.Partial#v:head\n[pursuit-partial-unsafe-partial]: https://pursuit.purescript.org/packages/purescript-partial/1.1.2/docs/Partial.Unsafe#v:unsafePartial\n[pursuit-either-either]: https://pursuit.purescript.org/packages/purescript-either/2.0.0/docs/Data.Either#t:Either\n\n[pursuit-maybe-maybe]: https://pursuit.purescript.org/packages/purescript-maybe/2.0.1/docs/Data.Maybe#t:Maybe\n[pursuit-prelude-lift3]: https://pursuit.purescript.org/packages/purescript-prelude/2.1.0/docs/Control.Apply#v:lift3\n[pursuit-control]: https://pursuit.purescript.org/packages/purescript-control/2.0.0\n[pursuit-foldable-traversable-traversable]: https://pursuit.purescript.org/packages/purescript-foldable-traversable/2.0.0/docs/Data.Traversable#t:Traversable\n[pursuit-prelude-applicative]: https://pursuit.purescript.org/packages/purescript-prelude/2.1.0/docs/Control.Applicative#t:Applicative\n[pursuit-validation]: https://pursuit.purescript.org/packages/purescript-validation/2.0.0\n\n[paf31/24-days-of-purescript-2016]: https://github.com/paf31/24-days-of-purescript-2016\n[purescript/purescript]: https://github.com/purescript/purescript\n[pursuit]: https://pursuit.purescript.org/\n[purescript/documentation]: https://github.com/purescript/documentation\n[purescript-by-example-6]: https://leanpub.com/purescript/read#leanpub-auto-type-classes\n[purescript-by-example-ja]: http://hiruberuto.bitbucket.org/purescript/\n[try-purescript]: http://try.purescript.org/\n[language-guide]: https://github.com/purescript/documentation/tree/f48ba1ee7761446e1ae75ee806e51688c1937297/language/\n[paf31/purescript-book]: https://github.com/paf31/purescript-book/tree/8ad7d2af75ad4c795d5075018e9ee45005799e6f/\n[purescript-book-chapter-7]: https://github.com/paf31/purescript-book/tree/8ad7d2af75ad4c795d5075018e9ee45005799e6f/exercises/chapter7\n", "tags": ["purescript"]}