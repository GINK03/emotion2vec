{"context": "\u3061\u3087\u3063\u3068\u96e3\u3057\u304b\u3063\u305f\u308a\u3072\u3063\u304b\u304b\u3063\u305f\u308a\u3057\u305fMaterial-UI\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30e1\u30e2\u3092\u6b8b\u3059\u3002\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\nmaterial-ui: v0.15.0\nreact: v15.0.2\nredux: v3.5.2\n\n\nDialog\n\u30b9\u30af\u30ed\u30fc\u30eb\u53ef\u80fd\u306aDialog\u3002\nautoScrollBodyContent={true}\u306e\u72b6\u614b\u3067Slider\u7b49\u3092\u633f\u5165\u3059\u308b\u3068\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u305a\u308c\u308b\u304c\u3001Dialog\u306e\u3072\u3068\u3064\u4e0b\u306bdiv\u30bf\u30b0\u3092\u5165\u308c\u308b\u3053\u3068\u3067\u30ec\u30a4\u30a2\u30a6\u30c8\u5d29\u308c\u3092\u89e3\u6d88\u3067\u304d\u308b\u3002\n    <Dialog\n      title={bookinfo.title}\n      actions={[\n          <FlatButton\n            label=\"\u30ad\u30e3\u30f3\u30bb\u30eb\"\n            primary={true}\n            onTouchTap={handleClose}\n          />,\n          <FlatButton\n            label=\"\u767b\u9332\"\n            primary={true}\n            onTouchTap={handleClose}\n          />,\n        ]}\n      modal={false}\n      onRequestClose={handleClose}\n      open={isAddDialogOpen}\n      autoScrollBodyContent={true}\n      contentStyle={customContentStyle}\n    >\n      <div>\n        <img src={info.imagesrc} className={cx('imgtest')} />\n        <br />\n        <Slider\n          description=\"\u30c6\u30b9\u30c8\"\n          style={ {'max-width': '450px'} }\n          min={0}\n          max={100}\n          step={1}\n          defaultValue={50}\n          value={progressSlider}\n          onChange={(e, value) => {handleProgressSlider(value)}}\n        />\n        <br />\n        <TextField\n          floatingLabelText=\"\u30e1\u30e2\u30c6\u30b9\u30c8\"\n          style={ {'max-width': '450px'} }\n          multiLine={true}\n          rows={4}\n          fullWidth={true}\n          onChange={e => handleChangeComment(e.target.value)}\n        />\n      </div>\n    </Dialog>\n\n\nGrid List\n\u5358\u7d14\u306b\u3001\u5de6\u306b\u753b\u50cf\u30fb\u53f3\u306b\u8aac\u660e\u307f\u305f\u3044\u306a\u914d\u7f6e\u3092\u3057\u3066\u307f\u308b\u3002\n\u4eca\u3069\u304d\u306e\u304a\u3057\u3083\u308c\u914d\u7f6e\u306f\u672c\u5bb6\u30b5\u30a4\u30c8\u306e\u30bd\u30fc\u30b9\u304b\u3089\u5b9f\u73fe\u53ef\u80fd\u3002\n        <div style={gridStyle.root}>\n          <GridList\n            cellHeight={200}\n            style={gridStyle.gridList}\n          >\n              <GridTile\n                cols={0.6}\n              >\n                <div>\n                  <a href={url} target=\"_blank\">\n                    <img src={imagesrc}} />\n                  </a>\n                </div>\n              </GridTile>\n              <GridTile\n                cols={1.4}\n                style={gridStyle.gridTile2}\n              >\n                <p>\u30c6\u30b9\u30c8</p>\n              </GridTile>\n          </GridList>\n        </div>\n\n\u53f3\u3068\u5de6\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306750%\u3065\u3064\u306b\u306a\u308b\u306e\u306b\u4e00\u77ac\u306f\u307e\u3063\u305f\u3051\u308c\u3069\u3001\u89aa\u306eGridList\u306ecols\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u304c2\u306a\u306e\u3067\u5b50\u306eGridTile\u306ecols\u3092\u8db3\u3057\u3066\uff12\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u3068div\u306ewidth\u3092\u3046\u307e\u3044\u5177\u5408\u306e%\u3067\u5272\u308a\u632f\u3063\u3066\u3082\u3089\u3048\u308b\u3002\n\nTable\nTable\u4ee5\u5916\u306e\u5834\u6240\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u304c\u6d88\u3048\u3066\u3057\u307e\u3046\u554f\u984c\u3067\u304b\u306a\u308a\u306f\u307e\u3063\u305f\u3002\u3002\ndeselectOnClickaway\u3092false\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u89e3\u6d88\u3067\u304d\u308b\u3002\nonRowSelection\u3067\u30c1\u30a7\u30c3\u30af\u306eOn/Off\u3092\u691c\u77e5\u3057\u3066Container\u3067dispatch\u3057\u3066state\u306b\u4fdd\u5b58\u3059\u308b\u3002\n\ncomponent\n  <Table\n    style={styles.ctSearchTable}\n    multiSelectable={true}\n    onRowSelection={indexes => onCtRowSelect(indexes)}\n  >\n    <TableBody\n      deselectOnClickaway={false}\n      showRowHover={true}\n    >\n      {bookCategories.map(bookCategory =>\n        <TableRow selected={bookCategory.selected}>\n          <TableRowColumn>{bookCategory.name}</TableRowColumn>\n        </TableRow>\n      )}\n    </TableBody>\n  </Table>\n\n\n\ncontainer\n  onCtRowSelect(indexes){\n    const { dispatch, bookCategories, onHover } = this.props;\n    var newSelected = [];\n    if(typeof indexes === \"object\"){\n      for (var i = indexes.length - 1; i >= 0; i--) {\n        newSelected.push(bookCategories[indexes[i]]);\n      }\n    }\n    else if (typeof indexes === \"number\"){\n        newSelected.push(bookCategories[indexes]);\n    }\n    dispatch(changeCtSelect(newSelected));\n  }\n\n\n\nCard\n\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u5f62\u5f0f\uff08actAsExpander={true}\uff09\u306b\u3057\u305f\u3068\u304d\u3001\u30d8\u30c3\u30c0\u30fc\u90e8\u5206\u306e\u30b5\u30d6\u30bf\u30a4\u30c8\u30eb(subtitle)\u306e\u80cc\u666f\u8272\u3092\u5909\u66f4\u3057\u305f\u304b\u3063\u305f\u3068\u304d\u306b\u601d\u8003\u932f\u8aa4\u3057\u305f\u306e\u3067\u30e1\u30e2\u3002\n\u30bf\u30a4\u30c8\u30eb\u306fCardHeader\u306e\u5c5e\u6027\u306b\u8ffd\u52a0\u3057\u3001\u30b5\u30d6\u30bf\u30a4\u30c8\u30eb\u306fCardHeader\u306e\u5185\u90e8\u306bdiv\u30bf\u30b0\u3067\u8ffd\u52a0\u3059\u308b\u3002\n\ncomponent\n    <Card>\n      <CardHeader\n        title={data.title}\n        actAsExpander={true}\n        showExpandableButton={true}\n      >\n        <div style={{ width: data.progress + \"%\", backgroundColor: \"#111\" }}>\n          <span>{data.progress + \"%\"}</span>\n        </div>\n      </CardHeader>\n      <CardText>\n        { data.comment }\n      </CardText>\n      <CardActions expandable={true}>\n        <RaisedButton label=\"\u66f4\u65b0\" secondary={true} />\n      </CardActions>\n    </Card>\n\n\n\u3061\u3087\u3063\u3068\u96e3\u3057\u304b\u3063\u305f\u308a\u3072\u3063\u304b\u304b\u3063\u305f\u308a\u3057\u305fMaterial-UI\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30e1\u30e2\u3092\u6b8b\u3059\u3002\n\n# \u30d0\u30fc\u30b8\u30e7\u30f3\n- material-ui: v0.15.0\n- react: v15.0.2\n- redux: v3.5.2\n\n# Dialog\n\u30b9\u30af\u30ed\u30fc\u30eb\u53ef\u80fd\u306aDialog\u3002\nautoScrollBodyContent={true}\u306e\u72b6\u614b\u3067Slider\u7b49\u3092\u633f\u5165\u3059\u308b\u3068\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u305a\u308c\u308b\u304c\u3001Dialog\u306e\u3072\u3068\u3064\u4e0b\u306bdiv\u30bf\u30b0\u3092\u5165\u308c\u308b\u3053\u3068\u3067\u30ec\u30a4\u30a2\u30a6\u30c8\u5d29\u308c\u3092\u89e3\u6d88\u3067\u304d\u308b\u3002\n\n```js:\n    <Dialog\n      title={bookinfo.title}\n      actions={[\n          <FlatButton\n            label=\"\u30ad\u30e3\u30f3\u30bb\u30eb\"\n            primary={true}\n            onTouchTap={handleClose}\n          />,\n          <FlatButton\n            label=\"\u767b\u9332\"\n            primary={true}\n            onTouchTap={handleClose}\n          />,\n        ]}\n      modal={false}\n      onRequestClose={handleClose}\n      open={isAddDialogOpen}\n      autoScrollBodyContent={true}\n      contentStyle={customContentStyle}\n    >\n      <div>\n        <img src={info.imagesrc} className={cx('imgtest')} />\n        <br />\n        <Slider\n          description=\"\u30c6\u30b9\u30c8\"\n          style={ {'max-width': '450px'} }\n          min={0}\n          max={100}\n          step={1}\n          defaultValue={50}\n          value={progressSlider}\n          onChange={(e, value) => {handleProgressSlider(value)}}\n        />\n        <br />\n        <TextField\n          floatingLabelText=\"\u30e1\u30e2\u30c6\u30b9\u30c8\"\n          style={ {'max-width': '450px'} }\n          multiLine={true}\n          rows={4}\n          fullWidth={true}\n          onChange={e => handleChangeComment(e.target.value)}\n        />\n      </div>\n    </Dialog>\n```\n\n# Grid List\n\u5358\u7d14\u306b\u3001\u5de6\u306b\u753b\u50cf\u30fb\u53f3\u306b\u8aac\u660e\u307f\u305f\u3044\u306a\u914d\u7f6e\u3092\u3057\u3066\u307f\u308b\u3002\n\u4eca\u3069\u304d\u306e\u304a\u3057\u3083\u308c\u914d\u7f6e\u306f\u672c\u5bb6\u30b5\u30a4\u30c8\u306e\u30bd\u30fc\u30b9\u304b\u3089\u5b9f\u73fe\u53ef\u80fd\u3002\n\n```js:\n        <div style={gridStyle.root}>\n          <GridList\n            cellHeight={200}\n            style={gridStyle.gridList}\n          >\n              <GridTile\n                cols={0.6}\n              >\n                <div>\n                  <a href={url} target=\"_blank\">\n                    <img src={imagesrc}} />\n                  </a>\n                </div>\n              </GridTile>\n              <GridTile\n                cols={1.4}\n                style={gridStyle.gridTile2}\n              >\n                <p>\u30c6\u30b9\u30c8</p>\n              </GridTile>\n          </GridList>\n        </div>\n```\n\n\u53f3\u3068\u5de6\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306750%\u3065\u3064\u306b\u306a\u308b\u306e\u306b\u4e00\u77ac\u306f\u307e\u3063\u305f\u3051\u308c\u3069\u3001\u89aa\u306eGridList\u306ecols\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u304c2\u306a\u306e\u3067\u5b50\u306eGridTile\u306ecols\u3092\u8db3\u3057\u3066\uff12\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u3068div\u306ewidth\u3092\u3046\u307e\u3044\u5177\u5408\u306e%\u3067\u5272\u308a\u632f\u3063\u3066\u3082\u3089\u3048\u308b\u3002\n\n# Table\nTable\u4ee5\u5916\u306e\u5834\u6240\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u304c\u6d88\u3048\u3066\u3057\u307e\u3046\u554f\u984c\u3067\u304b\u306a\u308a\u306f\u307e\u3063\u305f\u3002\u3002\n`deselectOnClickaway`\u3092false\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u89e3\u6d88\u3067\u304d\u308b\u3002\n`onRowSelection`\u3067\u30c1\u30a7\u30c3\u30af\u306eOn/Off\u3092\u691c\u77e5\u3057\u3066Container\u3067dispatch\u3057\u3066state\u306b\u4fdd\u5b58\u3059\u308b\u3002\n\n```js:component\n  <Table\n    style={styles.ctSearchTable}\n    multiSelectable={true}\n    onRowSelection={indexes => onCtRowSelect(indexes)}\n  >\n    <TableBody\n      deselectOnClickaway={false}\n      showRowHover={true}\n    >\n      {bookCategories.map(bookCategory =>\n        <TableRow selected={bookCategory.selected}>\n          <TableRowColumn>{bookCategory.name}</TableRowColumn>\n        </TableRow>\n      )}\n    </TableBody>\n  </Table>\n```\n\n```js:container\n  onCtRowSelect(indexes){\n    const { dispatch, bookCategories, onHover } = this.props;\n    var newSelected = [];\n    if(typeof indexes === \"object\"){\n      for (var i = indexes.length - 1; i >= 0; i--) {\n        newSelected.push(bookCategories[indexes[i]]);\n      }\n    }\n    else if (typeof indexes === \"number\"){\n        newSelected.push(bookCategories[indexes]);\n    }\n    dispatch(changeCtSelect(newSelected));\n  }\n```\n\n# Card\n\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u5f62\u5f0f\uff08actAsExpander={true}\uff09\u306b\u3057\u305f\u3068\u304d\u3001\u30d8\u30c3\u30c0\u30fc\u90e8\u5206\u306e\u30b5\u30d6\u30bf\u30a4\u30c8\u30eb(subtitle)\u306e\u80cc\u666f\u8272\u3092\u5909\u66f4\u3057\u305f\u304b\u3063\u305f\u3068\u304d\u306b\u601d\u8003\u932f\u8aa4\u3057\u305f\u306e\u3067\u30e1\u30e2\u3002\n\u30bf\u30a4\u30c8\u30eb\u306fCardHeader\u306e\u5c5e\u6027\u306b\u8ffd\u52a0\u3057\u3001\u30b5\u30d6\u30bf\u30a4\u30c8\u30eb\u306fCardHeader\u306e\u5185\u90e8\u306bdiv\u30bf\u30b0\u3067\u8ffd\u52a0\u3059\u308b\u3002\n\n```js:component\n    <Card>\n      <CardHeader\n        title={data.title}\n        actAsExpander={true}\n        showExpandableButton={true}\n      >\n        <div style={{ width: data.progress + \"%\", backgroundColor: \"#111\" }}>\n          <span>{data.progress + \"%\"}</span>\n        </div>\n      </CardHeader>\n      <CardText>\n        { data.comment }\n      </CardText>\n      <CardActions expandable={true}>\n        <RaisedButton label=\"\u66f4\u65b0\" secondary={true} />\n      </CardActions>\n    </Card>\n```\n", "tags": ["material-ui"]}