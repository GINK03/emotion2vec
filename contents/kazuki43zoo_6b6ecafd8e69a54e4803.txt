{"context": "\u4eca\u56de\u306f\u3001Spring Framework 4.3\u306e\u5909\u66f4\u70b9\u7d39\u4ecb\u30b7\u30ea\u30fc\u30ba\u306e\u6700\u7d42\u56de\u3067\u3001\u30c6\u30b9\u30c8\u95a2\u9023\u306e\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\uff08\u30ea\u30ea\u30fc\u30b9\u524d\u306e\u6295\u7a3f\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\uff01\uff01\u3000\u5dee\u5206\u306f\u3001\u300c\u26056/11\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n\n\u30b7\u30ea\u30fc\u30ba\n\n\u7b2c\uff11\u56de\uff1aSpring 4.3 DI\u30b3\u30f3\u30c6\u30ca\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff12\u56de\uff1aSpring 4.3 \u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff13\u56de\uff1aSpring 4.3 \u30ad\u30e3\u30c3\u30b7\u30e5\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff14\u56de\uff1aSpring 4.3 JMS\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff15\u56de\uff1aSpring 4.3 Web\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\u7b2c\uff16\u56de\uff1aSpring 4.3 WebSocket\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\u52d5\u4f5c\u691c\u8a3c\u74b0\u5883\n\nSpring Framework 4.3.0.RELEASE\nSpring Boot 1.4.0.BUILD-SNAPSHOT (2016/6/11\u6642\u70b9)\n\n\nTesting Improvements\n\u4eca\u56de\u306f\u3001\u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\n\n\nNo\n\u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\n\n\n\n\n1\nSpring TestContext Framework\u306eJUnit\u306e\u5fc5\u9808\u30d0\u30fc\u30b8\u30e7\u30f3\u304c4.12\u4ee5\u4e0a\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n2\n\nSpringJUnit4ClassRunner\u30af\u30e9\u30b9\u306e\u5225\u540d\u3068\u3057\u3066SpringRunner\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\n3\nSpring Test\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30c6\u30b9\u30c8\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067\u3001\u8907\u6570\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3067\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5b9a\u7fa9\u3092\u5171\u6709\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u300c\u26056/11\u8ffd\u52a0\u300d\n\n\n4\n\u81ea\u52d5\u691c\u51fa\u3055\u308c\u308b\u30c6\u30b9\u30c8\u7528\u306eBean\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001@ContextConfiguration\u306f\u7701\u7565\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n5\n\n@Transactional\u306f\u3001public\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u3082\u9069\u7528\u3067\u304d\u307e\u3059\u3002(TestNG\u3084JUnit 5\u5411\u3051\u306e\u5bfe\u5fdc)\n\n\n6\n\n@BeforeTransaction\u3001@AfterTransaction\u306f\u3001public\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u3082\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u3055\u3089\u306bJava 8\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n7\nSpring TestContext Framework\u5185\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u6570\u306b\u4e0a\u9650\u3092\u8a2d\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3067\u306f\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6700\u5927\u6570\u306f32\u500b\u3067\u6700\u5927\u6570\u3092\u3053\u3048\u308b\u3068\u6700\u3082\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u304b\u3089\u7834\u68c4\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6700\u5927\u6570\u306f\u3001\u30d7\u30ed\u30d1\u30c6\u30a3(spring.test.context.cache.maxSize)\u3067\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\n\n8\nBean\u5b9a\u7fa9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9(ContextCustomizer)\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u5185\u306bBean\u5b9a\u7fa9\u3092\u8aad\u307f\u8fbc\u3093\u3060\u76f4\u5f8c\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u307e\u3059\u3002\n\n\n9\n\n@Sql\u3068@SqlGroup\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n10\n\nReflectionTestUtils\u306b\u3066\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30d9\u30fc\u30b9\u306eProxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u300c\u26056/11\u8ffd\u52a0\u300d\n\n\n11\n\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u5411\u3051Spring MVC Test Framework(MockMvc)\u306b\u3066\u3001\u8907\u6570\u306e\u5024\u3092\u3082\u3064\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u691c\u8a3c\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002\n\n\n12\n\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u5411\u3051Spring MVC Test Framework(MockMvc)\u306b\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306b\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf(application/x-www-form-urlencoded\u5f62\u5f0f)\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n13\n\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u5411\u3051Spring MVC Test Framework(MockMvc)\u306b\u3066\u3001\u547c\u3073\u51fa\u3055\u308c\u305fHandler\u30e1\u30bd\u30c3\u30c9\u306e\u691c\u8a3c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u300c\u26056/11\u8ffd\u52a0\u300d\n\n\n14\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u5411\u3051\u30e2\u30c3\u30afREST\u30b5\u30fc\u30d0\u6a5f\u80fd(MockRestServiceServer)\u306b\u3066\u3001\u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u56de\u6570\u306a\u3069\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n15\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u5411\u3051\u30e2\u30c3\u30afREST\u30b5\u30fc\u30d0\u6a5f\u80fd(MockRestServiceServer)\u306b\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306b\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf(application/x-www-form-urlencoded\u5f62\u5f0f)\u306e\u691c\u8a3c\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002\n\n\n\n\nJUnit\u306e\u5fc5\u9808\u30d0\u30fc\u30b8\u30e7\u30f3\u304c4.12\u4ee5\u4e0a\u306b\u306a\u308b\nSpring 4.3\u304b\u3089\u3001Junit\u3092\u4f7f\u3046\u5834\u5408\u306f4.12\u4ee5\u4e0a\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002Spring Boot\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3(1.3.5.RELEASE)\u306f\u3059\u3067\u306b4.12\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u305f\u3081\u3001Spring Boot\u30e6\u30fc\u30b6\u30fc\u306f\u610f\u8b58\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\nSpring Boot\u30e6\u30fc\u30b6\u30fc\u3067\u306f\u306a\u3044\u65b9\u3084\u3001\u72ec\u81ea\u306bJUnit\u306e\u4f9d\u5b58\u5b9a\u7fa9\u3092\u884c\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001JUnit\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\npom.xml\n<dependency>\n    <groupId>junit</groupId>\n    <artifactId>junit</artifactId>\n    <version>4.12</version>\n</dependency>\n\n\n\nSpringRunner\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u308b \n\nSpring 4.3\u304b\u3089\u3001SpringJUnit4ClassRunner\u306e\u5225\u540d\u30af\u30e9\u30b9\u3068\u3057\u3066SpringRunner\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u540d\u524d\u304c\u77ed\u304f\u3066\u30ca\u30a4\u30b9\u3067\u3059  \u5229\u7528\u3067\u304d\u308b\u6a5f\u80fd\u306fSpringJUnit4ClassRunner\u3068\u5168\u304f\u4e00\u7dd2\u3067\u3001SpringJUnit4ClassRunner\u3082\u5f15\u304d\u7d9a\u304d\u5229\u7528\u53ef\u80fd\u3067\u3059\u3002\n\n\u301c4.2\n@RunWith(SpringJUnit4ClassRunner.class)\npublic class SpringTest {\n    // ...\n}\n\n\n\n4.3\u301c\n@RunWith(SpringRunner.class) // \u540d\u524d\u304c\u77ed\u304f\u3066\u30b7\u30f3\u30d7\u30eb\uff01\uff01\npublic class SpringTest {\n    // ...\n}\n\n\n\n\u30c6\u30b9\u30c8\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u5b9a\u7fa9\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001Spring Test\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30c6\u30b9\u30c8\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067\u3001\u8907\u6570\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3067\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5b9a\u7fa9\u3092\u5171\u6709\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u5b9a\u7fa9\u53ef\u80fd\u306a\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u306f\u3001Spring JIRA\u306eSPR-14184\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff01\uff01\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u4f5c\u6210\u4f8b\npackage com.example;\n\nimport org.springframework.test.context.ActiveProfiles;\n\n@ActiveProfiles(\"unittest\") // \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3059\u308b\npublic interface ActivateUnitTestProfiles {\n}\n\n\n\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306e\u4f5c\u6210\u4f8b\npackage com.example;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Profile;\nimport org.springframework.test.context.junit4.SpringRunner;\n\nimport java.time.Clock;\nimport java.time.ZoneId;\nimport java.time.ZonedDateTime;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\n@RunWith(SpringRunner.class)\npublic class ProfileTests implements ActivateUnitTestProfiles { // \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\n\n    @Autowired\n    Clock clock;\n\n    @Test\n    public void testClock() {\n        assertThat(ZonedDateTime.now(clock))\n                .isEqualTo(ZonedDateTime.of(2016, 6, 11, 0, 0, 0, 1, ZoneId.systemDefault()));\n    }\n\n}\n\n\n\nProfile\u3092\u610f\u8b58\u3057\u305f\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\n@Configuration\npublic class ClockConfig {\n    @Bean\n    @Profile(\"prod\")\n    public Clock prodClock() {\n        return Clock.systemDefaultZone();\n    }\n\n    @Bean\n    @Profile(\"dev\")\n    public Clock devClock() {\n        return Clock.systemDefaultZone();\n    }\n\n    @Bean\n    @Profile(\"unittest\") //  \u3053\u306eBean\u5b9a\u7fa9\u304c\u4f7f\u308f\u308c\u308b\n    public Clock unittestClock() {\n        return Clock.fixed(ZonedDateTime.of(2016, 6, 11, 0, 0, 0, 1, ZoneId.systemDefault()).toInstant(), ZoneId.systemDefault());\n    }\n\n}\n\n\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306a\u306e\u3067\u3001\u76ee\u7684\u6bce(\u4f8b\u3048\u3070\u3001Web\u7528\u3001\u30d0\u30c3\u30c1\u7528\u3001\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u7528\u306a\u3069)\u306b\u4f5c\u6210\u3057\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u30df\u30c3\u30af\u30b9\u30a4\u30f3\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001Java 8\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3057\u3066\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u305f\u3081\u3001\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3067\u306f\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u4f5c\u6210\u306b\u96c6\u4e2d\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\u306a\u304a\u3001\u305d\u308c\u305e\u308c\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3001Spring Test\u306e\u300c\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u300d\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\n@ContextConfiguration\u304c\u7701\u7565\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001@ContextConfiguration\u304c\u7701\u7565\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002@ContextConfiguration\u3092\u7701\u7565\u3059\u308b\u5834\u5408\u306f\u3001Spring\u304c\u81ea\u52d5\u691c\u51fa\u3059\u308bBean\u5b9a\u7fa9(\u30af\u30e9\u30b9 or \u30d5\u30a1\u30a4\u30eb)\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\uff08\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u7528\u610f\u3057\u306a\u304f\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u304c\u3001DI\u30b3\u30f3\u30c6\u30ca\u306b\u30c6\u30b9\u30c8\u5bfe\u8c61\u306eBean\u306a\u3069\u304c\u767b\u9332\u3067\u304d\u306a\u3044\u306e\u3067\u610f\u5473\u306a\u3044\u3067\u3059\u3088\u306d  \uff09\n\u3053\u306e\u4ed5\u7d44\u307f\u306f\u3001\u672c\u683c\u7684\u306a\u30c6\u30b9\u30c8\u3092\u884c\u3046\u6642\u306b\u306f\u3042\u307e\u308a\u4f7f\u3046\u6a5f\u4f1a\u306f\u306a\u3044\u6c17\u3082\u3057\u307e\u3059\u304c\u30fb\u30fb\u30fb\u3061\u3087\u3063\u3068\u3057\u305f\u52d5\u4f5c\u691c\u8a3c\u3092JUnit\u4e0a\u3067\u884c\u3046\u6642\u306b\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3001\u79c1\u3082\u3088\u304f\u4f7f\u3044\u307e\u3059  \n\nNote: Spring 4.2\u307e\u3067\u306f\u30fb\u30fb\u30fb\n\u540c\u7b49\u306e\u4ed5\u7d44\u307f\u306f\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u5fc5\u305a@ContextConfiguration\u3092\u4ed8\u4e0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\nSpring\u306f\u3001\u4ee5\u4e0b\u306eBean\u5b9a\u7fa9(\u30af\u30e9\u30b9 or \u30d5\u30a1\u30a4\u30eb)\u3092\u81ea\u52d5\u691c\u51fa\u3057\u307e\u3059\u304c\u3001\u4f75\u7528\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n\n@Configuration\u304c\u4ed8\u4e0e\u3055\u308c\u305fstatic\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\n\u30cd\u30fc\u30df\u30f3\u30b0\u30eb\u30fc\u30eb\u3067\u89e3\u6c7a\u3055\u308c\u308bXML\u5f62\u5f0f\u306eBean\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\n\n\n@Configuration\u304c\u4ed8\u4e0e\u3055\u308c\u305fstatic\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u306e\u5229\u7528\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u5185\u306b\u3001Java Config\u30af\u30e9\u30b9\u3092static\u306a\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\n@RunWith(SpringRunner.class)\n// @ContextConfiguration \u2190 Spring 4.3\u304b\u3089\u7701\u7565\u53ef\u80fd\npublic class SpringTest {\n    @Configuration\n    static class LocalContext {\n        @Bean\n        public DataSource dataSource() {\n            return new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.H2).build();\n        }\n    }\n    // ...\n}\n\n\n\n\u30cd\u30fc\u30df\u30f3\u30b0\u30eb\u30fc\u30eb\u3067\u89e3\u6c7a\u3055\u308c\u308bXML\u5f62\u5f0f\u306eBean\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306e\u5229\u7528\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u3068\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u968e\u5c64\u306b\u3001\u300c\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30af\u30e9\u30b9\u540d-context.xml\u300d\u3068\u3044\u3046\u540d\u524d\u306eXML\u5f62\u5f0f\u306eBean\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\npackage com.example;\n// ...\n@RunWith(SpringRunner.class)\n// @ContextConfiguration \u2190 Spring 4.3\u304b\u3089\u7701\u7565\u53ef\u80fd\npublic class SpringTest {\n    // ...\n}\n\n\n\nsrc/test/resources/com/example/SpringTest-context.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:jdbc=\"http://www.springframework.org/schema/jdbc\"\n       xsi:schemaLocation=\"\n         http://www.springframework.org/schema/beans\n         http://www.springframework.org/schema/beans/spring-beans.xsd\n         http://www.springframework.org/schema/jdbc\n         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd\n       \">\n\n    <jdbc:embedded-database type=\"H2\" id=\"dataSource\"/>\n\n</beans>\n\n\n\n@Transactional\u3092public\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u3082\u9069\u7528\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001@Transactional\u3092public\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u300cTestNG\u300d\u3084\u300cJUnit 5\u300d\u5411\u3051\u306e\u5bfe\u5fdc\u306e\u3088\u3046\u3067\u3059\u3002\u672c\u6295\u7a3f\u3067\u306f\u7279\u306b\u8aac\u660e\u306f\u3057\u307e\u305b\u3093\u3002\uff08\u3042\u3057\u304b\u3089\u305a\u30fb\u30fb\u30fb\uff09\n\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fbSpring\u306eJUnit 5\u5bfe\u5fdc\u306b\u3064\u3044\u3066\u306f\u300cSPR-13575\u300d\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 (spring-test-junit5)\u304cGitHub\u4e0a\u306b\u516c\u958b\u3055\u308c\u3066\u304a\u308a\u3001Spring 5\u3067Spring\u672c\u4f53\u306b\u7d44\u307f\u8fbc\u307e\u308c\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\n@BeforeTransaction\u3001@AfterTransaction\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u9069\u7528\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001Java 8\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u306b@BeforeTransaction\u3001@AfterTransaction\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u672c\u6295\u7a3f\u3067\u306f\u8aac\u660e\u306f\u3057\u307e\u305b\u3093\u304c\u3001@Transactional\u3068\u540c\u69d8\u306bpublic\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u3082\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u672c\u6295\u7a3f\u3067\u306f\u3001Java 8\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3067@BeforeTransaction\u3001@AfterTransaction\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u3092\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u4f8b\npackage com.example;\n\nimport org.springframework.test.context.transaction.AfterTransaction;\nimport org.springframework.test.context.transaction.BeforeTransaction;\n\npublic interface TransactionSupports {\n    @BeforeTransaction\n    default void beforeTx() {\n        System.out.println(\"before transaction !!\");\n        // Please implements your code\n    }\n    @AfterTransaction\n    default void afterTx() {\n        System.out.println(\"after transaction !!\");\n        // Please implements your code\n    }\n}\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u3001@BeforeTransaction\u30e1\u30bd\u30c3\u30c9\u3068@AfterTransaction\u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u306b\u30df\u30c3\u30af\u30b9\u30a4\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n@BeforeTransaction\u3068@AfterTransaction\u30e1\u30bd\u30c3\u30c9\u306e\u30df\u30c3\u30af\u30b9\u30a4\u30f3\u4f8b\n@RunWith(SpringRunner.class)\n@Transactional\npublic class SpringTest implements TransactionSupports { // \u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u3060\u3051\uff01\uff01\n    // ...\n}\n\n\n\u3053\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3059\u308b\u3068\u3001@BeforeTransaction\u30e1\u30bd\u30c3\u30c9\u3068@AfterTransaction\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u3092\u7c21\u5358\u306b\u8907\u6570\u306e\u30af\u30e9\u30b9\u3067\u5171\u6709\u3067\u304d\u307e\u3059\u3002\u62bd\u8c61\u30af\u30e9\u30b9\u3067\u306f\u306a\u304f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306a\u306e\u3067\u3001\u8907\u6570\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u30df\u30c3\u30af\u30b9\u30a4\u30f3\u3082\u3067\u304d\u307e\u3059\uff01\uff01\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u6570\u306b\u4e0a\u9650\u3092\u8a2d\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b \n\nSpring TestContext Framework\u5185\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u6570\u306b\u4e0a\u9650\u3092\u8a2d\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3067\u306f\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6700\u5927\u6570\u306f32\u500b\u3067\u6700\u5927\u6570\u3092\u3053\u3048\u308b\u3068\u6700\u3082\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u304b\u3089\u7834\u68c4(LRU : Least Recently Used)\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6700\u5927\u6570\u306f\u3001\u30d7\u30ed\u30d1\u30c6\u30a3(spring.test.context.cache.maxSize)\u3067\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\u30d7\u30ed\u30d1\u30c6\u30a3\u5024\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u3068\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u304c\u3001\u6307\u5b9a\u304c\u91cd\u8907\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u304c\u512a\u5148\u3055\u308c\u307e\u3059\u3002\n\nSpring\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3057\u3066\u6700\u5927\u5024\u3092\u5909\u66f4\n\u30af\u30e9\u30b9\u30d1\u30b9\u76f4\u4e0b\u306bspring.properties\u3092\u4f5c\u6210\u3057\u3066\u6700\u5927\u5024\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\nsrc/test/resources/spring.properties\nspring.test.context.cache.maxSize=64\n\n\n\n\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5229\u7528\u3057\u3066\u6700\u5927\u5024\u3092\u5909\u66f4\n-Dspring.test.context.cache.maxSize=64\n\n\nBean\u5b9a\u7fa9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9(ContextCustomizer)\u304c\u8ffd\u52a0\u3055\u308c\u308b \n\nSpring 4.3\u304b\u3089\u3001Bean\u5b9a\u7fa9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9(ContextCustomizer)\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u5185\u306bBean\u5b9a\u7fa9\u3092\u8aad\u307f\u8fbc\u3093\u3060\u76f4\u5f8c\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001\u30c6\u30b9\u30c8\u7528\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001Spring Boot\u306fContextCustomizer\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3057\u3066\u3001\u30c6\u30b9\u30c8\u7528\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092Spring Boot\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u5411\u3051\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u3067\u306f\u3001\u81ea\u4f5c\u306eContextCustomizer\u3092Spring TestContext Framework\u306b\u9069\u7528\u3059\u308b\u65b9\u6cd5\u3092\u307f\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u307e\u305a\u3001ContextCustomizer\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\npackage com.example;\n\nimport org.springframework.context.ConfigurableApplicationContext;\nimport org.springframework.test.context.ContextCustomizer;\nimport org.springframework.test.context.MergedContextConfiguration;\n\npublic class MyContextCustomizer implements ContextCustomizer {\n    @Override\n    public void customizeContext(ConfigurableApplicationContext context, MergedContextConfiguration mergedConfig) {\n        System.out.println(\"customizeContext !!\");\n        // Please implements your code.\n    }\n}\n\n\u6b21\u306b\u3001\u4f5c\u6210\u3057\u305fMyContextCustomizer\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u30d5\u30a1\u30af\u30c8\u30ea\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\npackage com.example;\n\nimport org.springframework.test.context.ContextConfigurationAttributes;\nimport org.springframework.test.context.ContextCustomizer;\nimport org.springframework.test.context.ContextCustomizerFactory;\n\nimport java.util.List;\n\npublic class MyContextCustomizerFactory implements ContextCustomizerFactory {\n    @Override\n    public ContextCustomizer createContextCustomizer(Class<?> testClass, List<ContextConfigurationAttributes> configAttributes) {\n        return new MyContextCustomizer();\n    }\n}\n\n\u6700\u5f8c\u306b\u3001\u30af\u30e9\u30b9\u30d1\u30b9\u4e0a\u306e/META-INF/spring.factories\u306b\u4f5c\u6210\u3057\u305f\u30d5\u30a1\u30af\u30c8\u30ea\u30af\u30e9\u30b9\u3092\u767b\u9332\u3057\u307e\u3059\u3002\uff08\u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3051\u308c\u3070\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n\nsrc/test/resoueces/META-INF/spring.factories\n# Spring Test ContextCustomizerFactories\norg.springframework.test.context.ContextCustomizerFactory=com.example.MyContextCustomizerFactory\n\n\n\n@Sql\u3068@SqlGroup\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001@Sql\u3068@SqlGroup\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u5404\u512a\u5148\u5ea6\u304c\u9ad8\u3044\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f\u3092\u6271\u3046\u30ea\u30b9\u30ca\u30fc\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u73fe\u3059\u308b\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(Java8\u301c)\n@Sql(\"classpath:sql/clear.sql\")\n@Sql(\"classpath:sql/load.sql\")\n@Target({ElementType.METHOD, ElementType.TYPE})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface InitializingSqls {\n}\n\n\n\n\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(\u301cJava7)\n@SqlGroup({\n    @Sql(\"classpath:sql/clear.sql\")\n    , @Sql(\"classpath:sql/load.sql\")\n})\n@Target({ElementType.METHOD, ElementType.TYPE})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface InitializingSqls {\n}\n\n\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u5074\u3067\u306f\u3001\u30af\u30e9\u30b9\u30ec\u30d9\u30eb\u307e\u305f\u306f\u30e1\u30bd\u30c3\u30c9\u30ec\u30d9\u30eb\u306b\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\n@RunWith(SpringRunner.class)\n@Transactional\n@InitializingSqls // \u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\npublic class SpringTests implements TransactionSupports {\n    // ...\n}\n\n\n\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30d9\u30fc\u30b9\u306eProxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u306b\u306a\u308b \n\nSpring 4.3\u306b\u3066\u3001\u30c6\u30b9\u30c8\u7528\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30af\u30e9\u30b9(ReflectionTestUtils)\u3092\u4ecb\u3057\u3066\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30d9\u30fc\u30b9\u306eProxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\u500b\u4eba\u7684\u306b\u306f\u3001ReflectionTestUtils\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u6e08\u3080\u3088\u3046\u306b\u30af\u30e9\u30b9\u8a2d\u8a08\u3001\u30c6\u30b9\u30c8\u8a2d\u8a08\u3059\u3079\u304d\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u30fb\u30fb\u30fb  (\u307e\u3001Spring Test\u306b\u306f\u3053\u3093\u306a\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3082\u3042\u308b\u3093\u3060\u301c\u304f\u3089\u3044\u306b\u601d\u3063\u3066\u304a\u3051\u3070\u3044\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u30fb\u30fb\u30fb)\npackage com.example;\n\npublic interface TodoService {\n    void create(Todo todo);\n}\n\npackage com.example;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\nimport org.springframework.web.client.RestTemplate;\n\n@Service\n@Transactional // \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30d9\u30fc\u30b9\u306eproxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308b\npublic class TodoServiceImpl implements TodoService {\n    @Autowired\n    private RestOperations restOperations;\n    public void create(Todo todo) {\n        // ...\n    }\n}\n\n@Autowired\nTodoService todoService; // Proxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3055\u308c\u308b\n\n@Test\npublic void createTodo() {\n    RestOperations restOperations = Mockito.mock(RestOperations.class);\n    // ...\n    ReflectionTestUtils.setField(todoService, \"restOperations\", restOperations); // \u30d5\u30a3\u30fc\u30eb\u30c9\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30e2\u30c3\u30af\u3092\u8a2d\u5b9a\n\n    todoService.create(new Todo());\n    // ...\n\n}\n\n\nMockMvc\u3067\u8907\u6570\u306e\u5024\u3092\u3082\u3064\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u691c\u8a3c\u304c\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u5411\u3051Spring MVC Test Framework(MockMvc)\u306b\u3066\u3001\u8907\u6570\u306e\u5024\u3092\u3082\u3064\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u691c\u8a3c\u7528\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\n...\nCache-Control: max-age=86400\nCache-Control: must-revalidate\n...\n\n\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\n@RunWith(SpringRunner.class)\n@WebAppConfiguration\npublic class SpringTest {\n\n    @Autowired\n    WebApplicationContext wac;\n\n    MockMvc mockMvc;\n\n    @Before\n    public void setUpMockMvc() {\n        this.mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();\n    }\n\n    @Test\n    public void getMultiResponseHeader() throws Exception {\n        mockMvc.perform(get(\"/\"))\n                .andExpect(header()\n                        .stringValues(\"Cache-Control\", \"max-age=86400\", \"must-revalidate\")); // \u8907\u6570\u306e\u30d8\u30c3\u30c0\u5024\u306e\u691c\u8a3c\u304c\u53ef\u80fd\n    }\n\n}\n\n\n\nMockMvc\u3067\u30d5\u30a9\u30fc\u30e0\u5f62\u5f0f\u306e\u30dc\u30c7\u30a3\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6271\u3048\u308b \n\nSpring 4.3\u304b\u3089\u3001\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u5411\u3051Spring MVC Test Framework(MockMvc)\u306b\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306b\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf(application/x-www-form-urlencoded\u5f62\u5f0f)\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u3053\u3067\u306f\u3001param1\u3068param2\u3068\u3044\u3046\u3075\u305f\u3064\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6271\u3046\u4f8b\u3092\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n@Controller\npublic class TestController {\n    @RequestMapping(path = \"/post\", method = RequestMethod.POST)\n    public String post(@RequestParam String param1, @RequestParam String param2, Model model) {\n        model.addAttribute(\"param1\", param1);\n        model.addAttribute(\"param2\", param2);\n        return \"confirm\";\n    }\n}\n\nSpring 4.2\u307e\u3067\u306f\u3001param\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u3082\u3061\u308d\u3093Spring 4.3\u4ee5\u964d\u3067\u3082\u3053\u306e\u65b9\u6cd5\u306f\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n@Test\npublic void form() throws Exception {\n    mockMvc.perform(post(\"/post\")\n            .param(\"param1\", \"aaaa\").param(\"param2\", \"bbbb\")) // param\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6307\u5b9a\n            .andExpect(status().isOk())\n            .andExpect(view().name(\"confirm\"))\n            .andExpect(model().attribute(\"param1\", \"aaaa\"))\n            .andExpect(model().attribute(\"param2\", \"bbbb\"));\n}\n\nSpring 4.3\u304b\u3089\u306f\u3001content\u30e1\u30bd\u30c3\u30c9\u306bapplication/x-www-form-urlencoded\u5f62\u5f0f\u306e\u30dc\u30c7\u30a3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u540c\u3058\u3053\u3068\u3092\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n4.3\u301c\n@Test\npublic void form() throws Exception {\n    mockMvc.perform(post(\"/post\")\n            .contentType(MediaType.APPLICATION_FORM_URLENCODED) // Content-Type\u306b\u300capplication/x-www-form-urlencoded\u300d\u3092\u6307\u5b9a\n            .content(\"param1=aaaa&param2=bbbb\")) // \u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306b\u300capplication/x-www-form-urlencoded\u300d\u5f62\u5f0f\u306e\u5024\u3092\u6307\u5b9a\n            .andExpect(status().isOk())\n            .andExpect(view().name(\"confirm\"))\n            .andExpect(model().attribute(\"param1\", \"aaaa\"))\n            .andExpect(model().attribute(\"param2\", \"bbbb\"));\n}\n\n\nContent-Type\u306bMediaType.APPLICATION_FORM_URLENCODED\u3092\u6307\u5b9a\u3059\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\u6307\u5b9a\u3057\u306a\u3044\u3068\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u305b\u3093\u3002\n\n\u547c\u3073\u51fa\u3055\u308c\u305fHandler\u30e1\u30bd\u30c3\u30c9\u306e\u691c\u8a3c\u304c\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u5411\u3051Spring MVC Test Framework(MockMvc)\u306b\u3066\u3001\u547c\u3073\u51fa\u3055\u308c\u305fHandler\u30e1\u30bd\u30c3\u30c9\u306e\u691c\u8a3c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n@Test\npublic void getAll() throws Exception {\n    mockMvc.perform(get(\"/todos\"))\n            .andExpect(status().isOk())\n            // \u547c\u3073\u51fa\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u691c\u8a3c(MvcUriComponentsBuilder\u306eon\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528)\n            .andExpect(handler().methodCall(on(TodoRestController.class).getAll()))\n            // \u547c\u3073\u51fa\u3055\u308c\u305fHandler\u30e1\u30bd\u30c3\u30c9\u306e\u30af\u30e9\u30b9\u3092\u691c\u8a3c\n            .andExpect(handler().handlerType(TodoRestController.class))\n            // \u547c\u3073\u51fa\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u691c\u8a3c\n            .andExpect(handler().method(TodoRestController.class.getMethod(\"getAll\")))\n            // \u547c\u3073\u51fa\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u540d\u524d\u3092\u691c\u8a3c\n            .andExpect(handler().methodName(\"getAll\"));\n}\n\n\u3044\u304f\u3064\u304b\u65b9\u6cd5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001MvcUriComponentsBuilder\u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u30bf\u30a4\u30d7\u30bb\u30fc\u30d5\u306a\u5b9f\u88c5\u306a\u306e\u3067\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\nMockRestServiceServer\u3067\u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u56de\u6570\u3092\u6307\u5b9a\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u5411\u3051\u30e2\u30c3\u30afREST\u30b5\u30fc\u30d0\u6a5f\u80fd(MockRestServiceServer)\u306b\u3066\u3001\u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u56de\u6570\u3084\u9806\u5e8f\u6027\u3092\u7121\u8996\u3059\u308b\u305f\u3081\u306e\u30d5\u30e9\u30b0\u306a\u3069\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 MockRestServiceServer\u306f\u3042\u307e\u308a\u77e5\u3089\u308c\u3066\u3044\u306a\u3044\uff01\uff1f\u6c17\u304c\u3057\u307e\u3059\u304c\u3001\u5916\u90e8\u306eREST API\u306a\u3069\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u3092\u884c\u3046\u5834\u5408\u306b\u975e\u5e38\u306b\u4fbf\u5229\u306a\u6a5f\u80fd\u3067\u3059\u3002\n\nMockRestServiceServer\u306e\u4f7f\u3044\u65b9\n\u3059\u3054\u301c\u304f\u7c21\u5358\u306bMockRestServiceServer\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aController\u306e\u30c6\u30b9\u30c8\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3053\u306eController\u30af\u30e9\u30b9\u3067\u306f\u3001\u5916\u90e8\u306eREST API\u3092\u547c\u3073\u51fa\u3057\u305f\u7d50\u679c\u3092\u753b\u9762\u306b\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u5916\u90e8\u306eREST API\u3092\u547c\u3073\u51fa\u3059\u969b\u306b\u306f\u3001Spring\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308bRestOperations\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4ecb\u3057\u3066RestTemplate\u30af\u30e9\u30b9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u306eController\u30af\u30e9\u30b9\n@RequestMapping(\"/todos\")\n@Controller\nstatic class TodoController {\n\n    @Autowired\n    RestOperations restOperations;\n\n    @RequestMapping(path = \"{todoId}\", method = RequestMethod.GET)\n    public String detail(@PathVariable String todoId, Model model) {\n        Todo todo = restOperations.getForObject(\"https://api.domain/todos/{todoId}\", Todo.class, todoId); // \u5916\u90e8\u306eREST API\u306e\u547c\u3073\u51fa\u3057\n        model.addAttribute(todo);\n        return \"detail\";\n    }\n}\n\n\n\u4f55\u3082\u884c\u308f\u306a\u3044\u3068\u3001\u5916\u90e8\u306eREST API\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u30b7\u30b9\u30c6\u30e0\u30c6\u30b9\u30c8\u306a\u3069\u3067\u306f\u5916\u90e8\u306eREST API\u306b\u5b9f\u969b\u306b\u3064\u306a\u3050\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u5358\u4f53\u30c6\u30b9\u30c8\u3084\u30e2\u30b8\u30e5\u30fc\u30eb\u7d50\u5408\u30c6\u30b9\u30c8\u3067\u306f\u5916\u90e8\u306eREST API\u306b\u3064\u306a\u304e\u305f\u304f\u306a\u3044\u30b1\u30fc\u30b9\u3082\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u3044\u3063\u305f\u5834\u5408\u306b\u306f\u3001MockRestServiceServer\u304c\u4f7f\u3048\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\n@RunWith(SpringRunner.class)\n@WebAppConfiguration\n// ...\npublic class SpringTest {\n\n    @Autowired\n    WebApplicationContext wac;\n\n    MockMvc mockMvc;\n\n    @Autowired\n    RestTemplate restTemplate; // \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30af\u30e9\u30b9\u3067\u4f7f\u3046RestTemplate\u3068\u540c\u3058\u3082\u306e\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\n\n    @Before\n    public void setUpMockMvc() {\n        this.mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();\n    }\n\n    @Test\n    public void detail() throws Exception {\n        // \u5916\u90e8\u306eAPI\u3092\u547c\u3073\u51fa\u3059\u969b\u306b\u4f7f\u7528\u3059\u308bRestTemplate\u3092\u3001MockRestServiceServer\u3068\u7d10\u3065\u3051\u308b\u3002\n        // \u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001MockRestServiceServer\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u9001\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n        MockRestServiceServer mockServer = MockRestServiceServer.bindTo(restTemplate).build();\n\n        // \u671f\u5f85\u7d50\u679c\u3092MockRestServiceServer\u306b\u767b\u9332\u3059\u308b\n        mockServer.expect(requestTo(\"https://api.domain/todos/123\"))\n                .andRespond(withSuccess(\"{\\\"id\\\":\\\"123\\\", \\\"title\\\":\\\"\u30bf\u30a4\u30c8\u30eb\\\", \\\"finished\\\":false}\", MediaType.APPLICATION_JSON_UTF8));\n\n        mockMvc.perform(get(\"/todos/123\"))\n                .andExpect(status().isOk())\n                .andExpect(view().name(\"detail\"))\n                .andExpect(model().attribute(\"todo\", hasProperty(\"id\", is(\"123\"))))\n                .andExpect(model().attribute(\"todo\", hasProperty(\"title\", is(\"\u30bf\u30a4\u30c8\u30eb\"))))\n                .andExpect(model().attribute(\"todo\", hasProperty(\"finished\", is(false))));\n\n        mockServer.verify(); // \u671f\u5f85\u901a\u308a\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304cMockRestServiceServer\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u691c\u8a3c\u3059\u308b\n    }\n\n}\n\n\n\u3055\u3089\u306b\u8a73\u3057\u3044\u4f7f\u3044\u65b9\u3092\u77e5\u308a\u305f\u3044\u65b9\u306f\u300cSpring\u306e\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u300d\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n2016/6/6 \u8ffd\u8a18\n\u300cSpring\u306eRestTemplate\u3092\u4f7f\u3046\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306eJUnit\u30c6\u30b9\u30c8\u306f\u3053\u3046\u66f8\u304f\uff01\uff01\u300d\u306bMockRestServiceServer\u306e\u4ed5\u7d44\u307f\u3068\u4f7f\u3044\u65b9\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\n\u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u56de\u6570\u306e\u5236\u5fa1\n\u3067\u3001Spring 4.3\u304b\u3089expect\u30e1\u30bd\u30c3\u30c9\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u4efb\u610f\u306eExpectedCount\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u6307\u5b9a\u3057\u305f\u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u56de\u6570\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u301c4.2\n// \u5730\u5473\u306b\u5217\u6319\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u304c\u30fb\u30fb\u30fb\nMockRestServiceServer mockServer = MockRestServiceServer.bindTo(restTemplate).build();\nmockServer.expect(requestTo(\"https://api.domain/todos/123\"))\n            .andRespond(withSuccess(\"{\\\"id\\\":\\\"123\\\", \\\"title\\\":\\\"\u30bf\u30a4\u30c8\u30eb\\\", \\\"finished\\\":false}\", \nmockServer.expect(requestTo(\"https://api.domain/todos/123\"))\n            .andRespond(withSuccess(\"{\\\"id\\\":\\\"123\\\", \\\"title\\\":\\\"\u30bf\u30a4\u30c8\u30eb\\\", \\\"finished\\\":false}\", \nmockServer.expect(requestTo(\"https://api.domain/todos/123\"))\n            .andRespond(withSuccess(\"{\\\"id\\\":\\\"123\\\", \\\"title\\\":\\\"\u30bf\u30a4\u30c8\u30eb\\\", \\\"finished\\\":false}\", \n// ...\n\n\n\n4.3\u301c\nMockRestServiceServer mockServer = MockRestServiceServer.bindTo(restTemplate).build();\n// \u56de\u6570\u6307\u5b9a\u304c\u53ef\u80fd\u306b\u306a\u308b\uff01\uff01\nmockServer.expect(times(3), requestTo(\"https://api.domain/todos/123\"))\n            .andRespond(withSuccess(\"{\\\"id\\\":\\\"123\\\", \\\"title\\\":\\\"\u30bf\u30a4\u30c8\u30eb\\\", \\\"finished\\\":false}\", \n// ...\n\n\ntimes\u610f\u5916\u306b\u3082\u3001once, manyTimes, min, max, between\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u9806\u5e8f\u6027\u306e\u7121\u8996\nSpring 4.3\u304b\u3089\u3001expect\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u6307\u5b9a\u3057\u305f\u671f\u5f85\u7d50\u679c(\u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9)\u306e\u9806\u5e8f\u6027\u3092\u691c\u8a3c\u5bfe\u8c61\u304b\u3089\u9664\u5916\u3059\u308b(\u7121\u8996\u3059\u308b)\u3053\u3068\u3092\u793a\u3059\u30d5\u30e9\u30b0(ignoreExpectOrder)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002ignoreExpectOrder\u3092true\u306b\u3059\u308b\u3068\u3001\u5b9a\u7fa9\u9806\u306b\u95a2\u4fc2\u306a\u304f\u30ea\u30af\u30a8\u30b9\u30c8\u5185\u5bb9\u306b\u4e00\u81f4\u3059\u308b\u671f\u5f85\u7d50\u679c(\u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9)\u304c\u6d88\u8cbb\u3055\u308c\u307e\u3059\u3002\nMockRestServiceServer mockServer = MockRestServiceServer.bindTo(restTemplate)\n        .ignoreExpectOrder(true).build();\n\n\nbindTo\u30e1\u30bd\u30c3\u30c9\n\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fbMockRestServiceServer\u306ebindTo\u30e1\u30bd\u30c3\u30c9\u306fSpring 4.3\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3067\u3001MockRestServiceServer\u7528\u306e\u30d3\u30eb\u30c0\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002MockRestServiceServer\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u306a\u3051\u308c\u3070\u3001MockRestServiceServer\u306ecreateServer\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\nMockRestServiceServer\u3067\u30d5\u30a9\u30fc\u30e0\u5f62\u5f0f\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306e\u691c\u8a3c\u304c\u3067\u304d\u308b \n\nSpring 4.3\u304b\u3089\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u5411\u3051\u30e2\u30c3\u30afREST\u30b5\u30fc\u30d0\u6a5f\u80fd(MockRestServiceServer)\u306b\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306b\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf(application/x-www-form-urlencoded\u5f62\u5f0f)\u306e\u691c\u8a3c\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070\u3001\u5916\u90e8\u306eWeb API\u306b\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf(application/x-www-form-urlencoded\u5f62\u5f0f)\u3092\u9001\u4fe1\u3059\u308b\u3088\u3046\u306a\u51e6\u7406\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u306eController\u30af\u30e9\u30b9\n@RequestMapping(\"/todos\")\n@Controller\npublic class TodoController {\n\n    @Autowired\n    RestOperations restOperations;\n\n    @RequestMapping(method = RequestMethod.POST)\n    public String postTodo(Form from) {\n\n        // \u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf(application/x-www-form-urlencoded\u5f62\u5f0f)\u3092\u9001\u4fe1\n        MultiValueMap<String, Object> formData = new LinkedMultiValueMap<>();\n        formData.add(\"title\", from.getTitle());\n        restOperations.postForObject(\"https://api.domain/todos\", formData, Void.class);\n\n        return \"complete\";\n    }\n\n}\n\n\n\u3053\u306e\u51e6\u7406\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30e1\u30bd\u30c3\u30c9\n@Test\npublic void postTodo() throws Exception {\n\n    MockRestServiceServer mockServer = MockRestServiceServer.bindTo(restTemplate).build();\n\n    MultiValueMap<String, String> expectedFormData = new LinkedMultiValueMap<>();\n    formData.add(\"title\", \"\u30bf\u30a4\u30c8\u30eb\");\n\n    mockServer.expect(requestTo(\"https://api.domain/todos\"))\n            .andExpect(content().contentType(MediaType.APPLICATION_FORM_URLENCODED))\n            .andExpect(content().formData(expectedFormData)) // \u30ea\u30af\u30a8\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u671f\u5f85\u5024\u3092\u6307\u5b9a\n            .andRespond(withCreatedEntity(URI.create(\"https://api.domain/todos/123\")));\n\n    mockMvc.perform(post(\"/todos\")\n            .param(\"title\", \"\u30bf\u30a4\u30c8\u30eb\"))\n            .andExpect(status().isOk())\n            .andExpect(view().name(\"complete\"));\n\n    mockServer.verify();\n}\n\n\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306f\u3001\u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u3067Spring Framework 4.3\u306e\u5909\u66f4\u70b9\u7d39\u4ecb\u30b7\u30ea\u30fc\u30ba\u306f\u304a\u308f\u308a\u3067\u3059\u304c\u3001\u672c\u30b7\u30ea\u30fc\u30ba\u3067\u7d39\u4ecb\u3057\u3066\u3044\u306a\u3044\u5909\u66f4\u70b9\u3082\u6570\u591a\u304f\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u4e2d\u306b\u306f\u3001\u672c\u30b7\u30ea\u30fc\u30ba\u3067\u7d39\u4ecb\u3057\u3066\u3082\u306e\u3088\u308a\u5229\u7528\u983b\u5ea6\u304c\u591a\u305d\u3046\uff01\uff1f\u306a\u3082\u306e\u3082\u3042\u308b\u306e\u3067\u3001\u8208\u5473\u304c\u3042\u308b\u65b9\u306f\u662f\u975e\u300cSpring JIRA\u306eIssue\u300d\u3092\u78ba\u8a8d\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u3044\u3063\u305f\u3093\u7d42\u4e86\u3057\u307e\u3059\u304c\u3001\u7d99\u7d9a\u3057\u3066\u66f4\u65b0\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\n\nhttp://docs.spring.io/spring/docs/4.3.0.RELEASE/spring-framework-reference/htmlsingle/\n\n\n\u88dc\u8db3\n\nSpring 4.3 GA\u306b\u4f34\u3044\u5909\u66f4\u70b9\u3092\u8ffd\u52a0 (2016/6/11)\n\u3064\u3044\u306b4.3\u304cGA\u306b\u306a\u308a\u3001\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4e3b\u306a\u5909\u66f4\u70b9\u306b\u8ffd\u52a0\u3055\u308c\u305f\u30c8\u30d4\u30c3\u30af\u30b9\u3092\u53cd\u6620\u3057\u307e\u3057\u305f\u3002\uff08\u300c\u26056/11\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n\u4eca\u56de\u306f\u3001Spring Framework 4.3\u306e\u5909\u66f4\u70b9\u7d39\u4ecb\u30b7\u30ea\u30fc\u30ba\u306e\u6700\u7d42\u56de\u3067\u3001\u30c6\u30b9\u30c8\u95a2\u9023\u306e\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\uff08\u30ea\u30ea\u30fc\u30b9\u524d\u306e\u6295\u7a3f\u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\uff01\uff01\u3000\u5dee\u5206\u306f\u3001\u300c\u26056/11\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n\n# \u30b7\u30ea\u30fc\u30ba\n\n* \u7b2c\uff11\u56de\uff1a[Spring 4.3 DI\u30b3\u30f3\u30c6\u30ca\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/172d132ff8f4ba098888)\n* \u7b2c\uff12\u56de\uff1a[Spring 4.3 \u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/bc036b433444f5c33dc4)\n* \u7b2c\uff13\u56de\uff1a[Spring 4.3 \u30ad\u30e3\u30c3\u30b7\u30e5\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/43cea4b36822b58c0562)\n* \u7b2c\uff14\u56de\uff1a[Spring 4.3 JMS\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/f0142ebe76dbe873bd5d)\n* \u7b2c\uff15\u56de\uff1a[Spring 4.3 Web\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/53d2ca25c174ff618331)\n* \u7b2c\uff16\u56de\uff1a[Spring 4.3 WebSocket\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9](http://qiita.com/kazuki43zoo/items/f2eac11f94e2afc7c964)\n\n\n# \u52d5\u4f5c\u691c\u8a3c\u74b0\u5883\n\n* Spring Framework 4.3.0.RELEASE\n* Spring Boot 1.4.0.BUILD-SNAPSHOT (2016/6/11\u6642\u70b9)\n\n\n# Testing Improvements\n\n\u4eca\u56de\u306f\u3001\u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\n| No | \u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9 |\n| --- | --- |\n| 1 | Spring TestContext Framework\u306eJUnit\u306e\u5fc5\u9808\u30d0\u30fc\u30b8\u30e7\u30f3\u304c4.12\u4ee5\u4e0a\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 2 | `SpringJUnit4ClassRunner`\u30af\u30e9\u30b9\u306e\u5225\u540d\u3068\u3057\u3066`SpringRunner`\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002 |\n| 3 | Spring Test\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30c6\u30b9\u30c8\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067\u3001\u8907\u6570\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3067\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5b9a\u7fa9\u3092\u5171\u6709\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u300c\u26056/11\u8ffd\u52a0\u300d |\n| 4 | \u81ea\u52d5\u691c\u51fa\u3055\u308c\u308b\u30c6\u30b9\u30c8\u7528\u306eBean\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001`@ContextConfiguration`\u306f\u7701\u7565\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 5 | `@Transactional`\u306f\u3001public\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u3082\u9069\u7528\u3067\u304d\u307e\u3059\u3002(TestNG\u3084JUnit 5\u5411\u3051\u306e\u5bfe\u5fdc) |\n| 6 | `@BeforeTransaction`\u3001`@AfterTransaction`\u306f\u3001public\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u3082\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u3055\u3089\u306bJava 8\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 |\n| 7 | Spring TestContext Framework\u5185\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u6570\u306b\u4e0a\u9650\u3092\u8a2d\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3067\u306f\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6700\u5927\u6570\u306f32\u500b\u3067\u6700\u5927\u6570\u3092\u3053\u3048\u308b\u3068\u6700\u3082\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u304b\u3089\u7834\u68c4\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6700\u5927\u6570\u306f\u3001\u30d7\u30ed\u30d1\u30c6\u30a3(`spring.test.context.cache.maxSize`)\u3067\u5909\u66f4\u3067\u304d\u307e\u3059\u3002 |\n| 8 | Bean\u5b9a\u7fa9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9(`ContextCustomizer`)\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u5185\u306bBean\u5b9a\u7fa9\u3092\u8aad\u307f\u8fbc\u3093\u3060\u76f4\u5f8c\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u307e\u3059\u3002 |\n| 9 | `@Sql`\u3068`@SqlGroup`\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 10 | `ReflectionTestUtils`\u306b\u3066\u3001\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30d9\u30fc\u30b9\u306eProxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002 \u300c\u26056/11\u8ffd\u52a0\u300d |\n| 11 | \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u5411\u3051Spring MVC Test Framework(`MockMvc`)\u306b\u3066\u3001\u8907\u6570\u306e\u5024\u3092\u3082\u3064\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u691c\u8a3c\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002 |\n| 12 | \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u5411\u3051Spring MVC Test Framework(`MockMvc`)\u306b\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306b\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf(`application/x-www-form-urlencoded`\u5f62\u5f0f)\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 13 | \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u5411\u3051Spring MVC Test Framework(`MockMvc`)\u306b\u3066\u3001\u547c\u3073\u51fa\u3055\u308c\u305fHandler\u30e1\u30bd\u30c3\u30c9\u306e\u691c\u8a3c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u300c\u26056/11\u8ffd\u52a0\u300d |\n| 14 | \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u5411\u3051\u30e2\u30c3\u30afREST\u30b5\u30fc\u30d0\u6a5f\u80fd(`MockRestServiceServer`)\u306b\u3066\u3001\u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u56de\u6570\u306a\u3069\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 |\n| 15 | \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u5411\u3051\u30e2\u30c3\u30afREST\u30b5\u30fc\u30d0\u6a5f\u80fd(`MockRestServiceServer`)\u306b\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306b\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf(`application/x-www-form-urlencoded`\u5f62\u5f0f)\u306e\u691c\u8a3c\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3059\u3002 |\n\n\n# JUnit\u306e\u5fc5\u9808\u30d0\u30fc\u30b8\u30e7\u30f3\u304c4.12\u4ee5\u4e0a\u306b\u306a\u308b\n\nSpring 4.3\u304b\u3089\u3001Junit\u3092\u4f7f\u3046\u5834\u5408\u306f4.12\u4ee5\u4e0a\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002Spring Boot\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3(1.3.5.RELEASE)\u306f\u3059\u3067\u306b4.12\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u305f\u3081\u3001Spring Boot\u30e6\u30fc\u30b6\u30fc\u306f\u610f\u8b58\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\nSpring Boot\u30e6\u30fc\u30b6\u30fc\u3067\u306f\u306a\u3044\u65b9\u3084\u3001\u72ec\u81ea\u306bJUnit\u306e\u4f9d\u5b58\u5b9a\u7fa9\u3092\u884c\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001JUnit\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```xml:pom.xml\n<dependency>\n    <groupId>junit</groupId>\n    <artifactId>junit</artifactId>\n    <version>4.12</version>\n</dependency>\n```\n\n# `SpringRunner`\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001`SpringJUnit4ClassRunner`\u306e\u5225\u540d\u30af\u30e9\u30b9\u3068\u3057\u3066`SpringRunner`\u30af\u30e9\u30b9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\u540d\u524d\u304c\u77ed\u304f\u3066\u30ca\u30a4\u30b9\u3067\u3059 :+1: \u5229\u7528\u3067\u304d\u308b\u6a5f\u80fd\u306f`SpringJUnit4ClassRunner`\u3068\u5168\u304f\u4e00\u7dd2\u3067\u3001`SpringJUnit4ClassRunner`\u3082\u5f15\u304d\u7d9a\u304d\u5229\u7528\u53ef\u80fd\u3067\u3059\u3002\n\n```java:\u301c4.2\n@RunWith(SpringJUnit4ClassRunner.class)\npublic class SpringTest {\n    // ...\n}\n```\n\n```java:4.3\u301c\n@RunWith(SpringRunner.class) // \u540d\u524d\u304c\u77ed\u304f\u3066\u30b7\u30f3\u30d7\u30eb\uff01\uff01\npublic class SpringTest {\n    // ...\n}\n```\n\n# \u30c6\u30b9\u30c8\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u5b9a\u7fa9\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001Spring Test\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30c6\u30b9\u30c8\u7528\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067\u3001\u8907\u6570\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3067\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5b9a\u7fa9\u3092\u5171\u6709\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u5b9a\u7fa9\u53ef\u80fd\u306a\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u306f\u3001Spring JIRA\u306e[SPR-14184](https://jira.spring.io/browse/SPR-14184)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff01\uff01\n\n```java:\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u4f5c\u6210\u4f8b\npackage com.example;\n\nimport org.springframework.test.context.ActiveProfiles;\n\n@ActiveProfiles(\"unittest\") // \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3059\u308b\npublic interface ActivateUnitTestProfiles {\n}\n```\n\n```java:\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306e\u4f5c\u6210\u4f8b\npackage com.example;\n\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Profile;\nimport org.springframework.test.context.junit4.SpringRunner;\n\nimport java.time.Clock;\nimport java.time.ZoneId;\nimport java.time.ZonedDateTime;\n\nimport static org.assertj.core.api.Assertions.assertThat;\n\n@RunWith(SpringRunner.class)\npublic class ProfileTests implements ActivateUnitTestProfiles { // \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\n\n    @Autowired\n    Clock clock;\n\n    @Test\n    public void testClock() {\n        assertThat(ZonedDateTime.now(clock))\n                .isEqualTo(ZonedDateTime.of(2016, 6, 11, 0, 0, 0, 1, ZoneId.systemDefault()));\n    }\n\n}\n```\n\n```java:Profile\u3092\u610f\u8b58\u3057\u305f\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\n@Configuration\npublic class ClockConfig {\n    @Bean\n    @Profile(\"prod\")\n    public Clock prodClock() {\n        return Clock.systemDefaultZone();\n    }\n\n    @Bean\n    @Profile(\"dev\")\n    public Clock devClock() {\n        return Clock.systemDefaultZone();\n    }\n\n    @Bean\n    @Profile(\"unittest\") //  \u3053\u306eBean\u5b9a\u7fa9\u304c\u4f7f\u308f\u308c\u308b\n    public Clock unittestClock() {\n        return Clock.fixed(ZonedDateTime.of(2016, 6, 11, 0, 0, 0, 1, ZoneId.systemDefault()).toInstant(), ZoneId.systemDefault());\n    }\n\n}\n```\n\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306a\u306e\u3067\u3001\u76ee\u7684\u6bce(\u4f8b\u3048\u3070\u3001Web\u7528\u3001\u30d0\u30c3\u30c1\u7528\u3001\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u7528\u306a\u3069)\u306b\u4f5c\u6210\u3057\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u30df\u30c3\u30af\u30b9\u30a4\u30f3\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001Java 8\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3057\u3066\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u305f\u3081\u3001\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3067\u306f\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u4f5c\u6210\u306b\u96c6\u4e2d\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u305d\u308c\u305e\u308c\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3001Spring Test\u306e\u300c[\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9](https://github.com/spring-projects/spring-framework/tree/master/spring-test/src/test/java/org/springframework/test/context/configuration/interfaces)\u300d\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\n# `@ContextConfiguration`\u304c\u7701\u7565\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001`@ContextConfiguration`\u304c\u7701\u7565\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002`@ContextConfiguration`\u3092\u7701\u7565\u3059\u308b\u5834\u5408\u306f\u3001Spring\u304c\u81ea\u52d5\u691c\u51fa\u3059\u308bBean\u5b9a\u7fa9(\u30af\u30e9\u30b9 or \u30d5\u30a1\u30a4\u30eb)\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\uff08\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb\u7528\u610f\u3057\u306a\u304f\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u304c\u3001DI\u30b3\u30f3\u30c6\u30ca\u306b\u30c6\u30b9\u30c8\u5bfe\u8c61\u306eBean\u306a\u3069\u304c\u767b\u9332\u3067\u304d\u306a\u3044\u306e\u3067\u610f\u5473\u306a\u3044\u3067\u3059\u3088\u306d :sweat_smile: \uff09\n\u3053\u306e\u4ed5\u7d44\u307f\u306f\u3001\u672c\u683c\u7684\u306a\u30c6\u30b9\u30c8\u3092\u884c\u3046\u6642\u306b\u306f\u3042\u307e\u308a\u4f7f\u3046\u6a5f\u4f1a\u306f\u306a\u3044\u6c17\u3082\u3057\u307e\u3059\u304c\u30fb\u30fb\u30fb\u3061\u3087\u3063\u3068\u3057\u305f\u52d5\u4f5c\u691c\u8a3c\u3092JUnit\u4e0a\u3067\u884c\u3046\u6642\u306b\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3001\u79c1\u3082\u3088\u304f\u4f7f\u3044\u307e\u3059 :smile: \n\n> **Note: Spring 4.2\u307e\u3067\u306f\u30fb\u30fb\u30fb**\n> \u540c\u7b49\u306e\u4ed5\u7d44\u307f\u306f\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u5fc5\u305a`@ContextConfiguration`\u3092\u4ed8\u4e0e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n\nSpring\u306f\u3001\u4ee5\u4e0b\u306eBean\u5b9a\u7fa9(\u30af\u30e9\u30b9 or \u30d5\u30a1\u30a4\u30eb)\u3092\u81ea\u52d5\u691c\u51fa\u3057\u307e\u3059\u304c\u3001\u4f75\u7528\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n* `@Configuration`\u304c\u4ed8\u4e0e\u3055\u308c\u305fstatic\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\n* \u30cd\u30fc\u30df\u30f3\u30b0\u30eb\u30fc\u30eb\u3067\u89e3\u6c7a\u3055\u308c\u308bXML\u5f62\u5f0f\u306eBean\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\n\n\n## `@Configuration`\u304c\u4ed8\u4e0e\u3055\u308c\u305fstatic\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u306e\u5229\u7528\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u5185\u306b\u3001Java Config\u30af\u30e9\u30b9\u3092static\u306a\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```java:\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\n@RunWith(SpringRunner.class)\n// @ContextConfiguration \u2190 Spring 4.3\u304b\u3089\u7701\u7565\u53ef\u80fd\npublic class SpringTest {\n    @Configuration\n    static class LocalContext {\n        @Bean\n        public DataSource dataSource() {\n            return new EmbeddedDatabaseBuilder().setType(EmbeddedDatabaseType.H2).build();\n        }\n    }\n    // ...\n}\n```\n\n## \u30cd\u30fc\u30df\u30f3\u30b0\u30eb\u30fc\u30eb\u3067\u89e3\u6c7a\u3055\u308c\u308bXML\u5f62\u5f0f\u306eBean\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306e\u5229\u7528\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u3068\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u968e\u5c64\u306b\u3001\u300c\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30af\u30e9\u30b9\u540d-context.xml\u300d\u3068\u3044\u3046\u540d\u524d\u306eXML\u5f62\u5f0f\u306eBean\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002\n\n```java:\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\npackage com.example;\n// ...\n@RunWith(SpringRunner.class)\n// @ContextConfiguration \u2190 Spring 4.3\u304b\u3089\u7701\u7565\u53ef\u80fd\npublic class SpringTest {\n    // ...\n}\n```\n\n```xml:src/test/resources/com/example/SpringTest-context.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:jdbc=\"http://www.springframework.org/schema/jdbc\"\n       xsi:schemaLocation=\"\n         http://www.springframework.org/schema/beans\n         http://www.springframework.org/schema/beans/spring-beans.xsd\n         http://www.springframework.org/schema/jdbc\n         http://www.springframework.org/schema/jdbc/spring-jdbc.xsd\n       \">\n\n    <jdbc:embedded-database type=\"H2\" id=\"dataSource\"/>\n\n</beans>\n```\n\n\n# `@Transactional`\u3092public\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u3082\u9069\u7528\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001`@Transactional`\u3092public\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u300c[TestNG](http://testng.org/)\u300d\u3084\u300c[JUnit 5](http://junit.org/junit5/)\u300d\u5411\u3051\u306e\u5bfe\u5fdc\u306e\u3088\u3046\u3067\u3059\u3002\u672c\u6295\u7a3f\u3067\u306f\u7279\u306b\u8aac\u660e\u306f\u3057\u307e\u305b\u3093\u3002\uff08\u3042\u3057\u304b\u3089\u305a\u30fb\u30fb\u30fb\uff09\n\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fbSpring\u306eJUnit 5\u5bfe\u5fdc\u306b\u3064\u3044\u3066\u306f\u300c[SPR-13575](https://jira.spring.io/browse/SPR-13575)\u300d\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 ([spring-test-junit5](https://github.com/sbrannen/spring-test-junit5))\u304cGitHub\u4e0a\u306b\u516c\u958b\u3055\u308c\u3066\u304a\u308a\u3001Spring 5\u3067Spring\u672c\u4f53\u306b\u7d44\u307f\u8fbc\u307e\u308c\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\n# `@BeforeTransaction`\u3001`@AfterTransaction`\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u9069\u7528\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001Java 8\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u306b`@BeforeTransaction`\u3001`@AfterTransaction`\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u672c\u6295\u7a3f\u3067\u306f\u8aac\u660e\u306f\u3057\u307e\u305b\u3093\u304c\u3001`@Transactional`\u3068\u540c\u69d8\u306bpublic\u4ee5\u5916\u306e\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306b\u3082\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u672c\u6295\u7a3f\u3067\u306f\u3001Java 8\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3067`@BeforeTransaction`\u3001`@AfterTransaction`\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u3092\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\n```java:\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u4f8b\npackage com.example;\n\nimport org.springframework.test.context.transaction.AfterTransaction;\nimport org.springframework.test.context.transaction.BeforeTransaction;\n\npublic interface TransactionSupports {\n    @BeforeTransaction\n    default void beforeTx() {\n        System.out.println(\"before transaction !!\");\n        // Please implements your code\n    }\n    @AfterTransaction\n    default void afterTx() {\n        System.out.println(\"after transaction !!\");\n        // Please implements your code\n    }\n}\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u3001`@BeforeTransaction`\u30e1\u30bd\u30c3\u30c9\u3068`@AfterTransaction`\u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u306b\u30df\u30c3\u30af\u30b9\u30a4\u30f3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:@BeforeTransaction\u3068@AfterTransaction\u30e1\u30bd\u30c3\u30c9\u306e\u30df\u30c3\u30af\u30b9\u30a4\u30f3\u4f8b\n@RunWith(SpringRunner.class)\n@Transactional\npublic class SpringTest implements TransactionSupports { // \u30c7\u30d5\u30a9\u30eb\u30c8\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u3060\u3051\uff01\uff01\n    // ...\n}\n```\n\n\u3053\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3059\u308b\u3068\u3001`@BeforeTransaction`\u30e1\u30bd\u30c3\u30c9\u3068`@AfterTransaction`\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u3092\u7c21\u5358\u306b\u8907\u6570\u306e\u30af\u30e9\u30b9\u3067\u5171\u6709\u3067\u304d\u307e\u3059\u3002\u62bd\u8c61\u30af\u30e9\u30b9\u3067\u306f\u306a\u304f\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306a\u306e\u3067\u3001\u8907\u6570\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u30df\u30c3\u30af\u30b9\u30a4\u30f3\u3082\u3067\u304d\u307e\u3059\uff01\uff01\n\n\n# \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u6570\u306b\u4e0a\u9650\u3092\u8a2d\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b :+1: \n\nSpring TestContext Framework\u5185\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306e\u6570\u306b\u4e0a\u9650\u3092\u8a2d\u3051\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u52d5\u4f5c\u3067\u306f\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6700\u5927\u6570\u306f32\u500b\u3067\u6700\u5927\u6570\u3092\u3053\u3048\u308b\u3068\u6700\u3082\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u304b\u3089\u7834\u68c4(LRU : Least Recently Used)\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\u306a\u304a\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6700\u5927\u6570\u306f\u3001\u30d7\u30ed\u30d1\u30c6\u30a3(`spring.test.context.cache.maxSize`)\u3067\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u5024\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u3068\u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u304c\u3001\u6307\u5b9a\u304c\u91cd\u8907\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306e\u5024\u304c\u512a\u5148\u3055\u308c\u307e\u3059\u3002\n\n## Spring\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3057\u3066\u6700\u5927\u5024\u3092\u5909\u66f4\n\n\u30af\u30e9\u30b9\u30d1\u30b9\u76f4\u4e0b\u306b`spring.properties`\u3092\u4f5c\u6210\u3057\u3066\u6700\u5927\u5024\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```properties:src/test/resources/spring.properties\nspring.test.context.cache.maxSize=64\n```\n\n## \u30b7\u30b9\u30c6\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5229\u7528\u3057\u3066\u6700\u5927\u5024\u3092\u5909\u66f4\n\n```\n-Dspring.test.context.cache.maxSize=64\n```\n\n# Bean\u5b9a\u7fa9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9(`ContextCustomizer`)\u304c\u8ffd\u52a0\u3055\u308c\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001Bean\u5b9a\u7fa9\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9(`ContextCustomizer`)\u304c\u8ffd\u52a0\u3055\u308c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u5185\u306bBean\u5b9a\u7fa9\u3092\u8aad\u307f\u8fbc\u3093\u3060\u76f4\u5f8c\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u3001\u30c6\u30b9\u30c8\u7528\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u3002\u306a\u304a\u3001Spring Boot\u306f`ContextCustomizer`\u306e\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3057\u3066\u3001\u30c6\u30b9\u30c8\u7528\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092Spring Boot\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u5411\u3051\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u3067\u306f\u3001\u81ea\u4f5c\u306e`ContextCustomizer`\u3092Spring TestContext Framework\u306b\u9069\u7528\u3059\u308b\u65b9\u6cd5\u3092\u307f\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u307e\u305a\u3001`ContextCustomizer`\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```java\npackage com.example;\n\nimport org.springframework.context.ConfigurableApplicationContext;\nimport org.springframework.test.context.ContextCustomizer;\nimport org.springframework.test.context.MergedContextConfiguration;\n\npublic class MyContextCustomizer implements ContextCustomizer {\n    @Override\n    public void customizeContext(ConfigurableApplicationContext context, MergedContextConfiguration mergedConfig) {\n        System.out.println(\"customizeContext !!\");\n        // Please implements your code.\n    }\n}\n```\n\n\u6b21\u306b\u3001\u4f5c\u6210\u3057\u305f`MyContextCustomizer`\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u30d5\u30a1\u30af\u30c8\u30ea\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```java\npackage com.example;\n\nimport org.springframework.test.context.ContextConfigurationAttributes;\nimport org.springframework.test.context.ContextCustomizer;\nimport org.springframework.test.context.ContextCustomizerFactory;\n\nimport java.util.List;\n\npublic class MyContextCustomizerFactory implements ContextCustomizerFactory {\n    @Override\n    public ContextCustomizer createContextCustomizer(Class<?> testClass, List<ContextConfigurationAttributes> configAttributes) {\n        return new MyContextCustomizer();\n    }\n}\n```\n\n\u6700\u5f8c\u306b\u3001\u30af\u30e9\u30b9\u30d1\u30b9\u4e0a\u306e`/META-INF/spring.factories`\u306b\u4f5c\u6210\u3057\u305f\u30d5\u30a1\u30af\u30c8\u30ea\u30af\u30e9\u30b9\u3092\u767b\u9332\u3057\u307e\u3059\u3002\uff08\u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3051\u308c\u3070\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\uff09\n\n```properties:src/test/resoueces/META-INF/spring.factories\n# Spring Test ContextCustomizerFactories\norg.springframework.test.context.ContextCustomizerFactory=com.example.MyContextCustomizerFactory\n```\n\n# `@Sql`\u3068`@SqlGroup`\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001`@Sql`\u3068`@SqlGroup`\u3092\u30e1\u30bf\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u5404\u512a\u5148\u5ea6\u304c\u9ad8\u3044\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u307f\u3092\u6271\u3046\u30ea\u30b9\u30ca\u30fc\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u73fe\u3059\u308b\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n```java:\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(Java8\u301c)\n@Sql(\"classpath:sql/clear.sql\")\n@Sql(\"classpath:sql/load.sql\")\n@Target({ElementType.METHOD, ElementType.TYPE})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface InitializingSqls {\n}\n```\n\n```java:\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3(\u301cJava7)\n@SqlGroup({\n    @Sql(\"classpath:sql/clear.sql\")\n    , @Sql(\"classpath:sql/load.sql\")\n})\n@Target({ElementType.METHOD, ElementType.TYPE})\n@Retention(RetentionPolicy.RUNTIME)\npublic @interface InitializingSqls {\n}\n\n```\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u5074\u3067\u306f\u3001\u30af\u30e9\u30b9\u30ec\u30d9\u30eb\u307e\u305f\u306f\u30e1\u30bd\u30c3\u30c9\u30ec\u30d9\u30eb\u306b\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n```java:\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\n@RunWith(SpringRunner.class)\n@Transactional\n@InitializingSqls // \u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\npublic class SpringTests implements TransactionSupports {\n    // ...\n}\n```\n\n# \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30d9\u30fc\u30b9\u306eProxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u306b\u306a\u308b :+1: \n\nSpring 4.3\u306b\u3066\u3001\u30c6\u30b9\u30c8\u7528\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30af\u30e9\u30b9(`ReflectionTestUtils`)\u3092\u4ecb\u3057\u3066\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30d9\u30fc\u30b9\u306eProxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3059\u308b\u30d5\u30a3\u30fc\u30eb\u30c9\u30a2\u30af\u30bb\u30b9\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\u500b\u4eba\u7684\u306b\u306f\u3001`ReflectionTestUtils`\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u6e08\u3080\u3088\u3046\u306b\u30af\u30e9\u30b9\u8a2d\u8a08\u3001\u30c6\u30b9\u30c8\u8a2d\u8a08\u3059\u3079\u304d\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u30fb\u30fb\u30fb :sweat_smile: (\u307e\u3001Spring Test\u306b\u306f\u3053\u3093\u306a\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3082\u3042\u308b\u3093\u3060\u301c\u304f\u3089\u3044\u306b\u601d\u3063\u3066\u304a\u3051\u3070\u3044\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u30fb\u30fb\u30fb)\n\n```java\npackage com.example;\n\npublic interface TodoService {\n    void create(Todo todo);\n}\n```\n```java\npackage com.example;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\nimport org.springframework.web.client.RestTemplate;\n\n@Service\n@Transactional // \u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u30d9\u30fc\u30b9\u306eproxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u308b\npublic class TodoServiceImpl implements TodoService {\n    @Autowired\n    private RestOperations restOperations;\n    public void create(Todo todo) {\n        // ...\n    }\n}\n```\n```java\n@Autowired\nTodoService todoService; // Proxy\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3055\u308c\u308b\n\n@Test\npublic void createTodo() {\n    RestOperations restOperations = Mockito.mock(RestOperations.class);\n    // ...\n    ReflectionTestUtils.setField(todoService, \"restOperations\", restOperations); // \u30d5\u30a3\u30fc\u30eb\u30c9\u30a2\u30af\u30bb\u30b9\u3057\u3066\u30e2\u30c3\u30af\u3092\u8a2d\u5b9a\n\n    todoService.create(new Todo());\n    // ...\n\n}\n```\n\n\n# `MockMvc`\u3067\u8907\u6570\u306e\u5024\u3092\u3082\u3064\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u691c\u8a3c\u304c\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u5411\u3051Spring MVC Test Framework(`MockMvc`)\u306b\u3066\u3001\u8907\u6570\u306e\u5024\u3092\u3082\u3064\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306e\u691c\u8a3c\u7528\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n```text:\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\n...\nCache-Control: max-age=86400\nCache-Control: must-revalidate\n...\n```\n\n```java:\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\n@RunWith(SpringRunner.class)\n@WebAppConfiguration\npublic class SpringTest {\n\n    @Autowired\n    WebApplicationContext wac;\n\n    MockMvc mockMvc;\n\n    @Before\n    public void setUpMockMvc() {\n        this.mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();\n    }\n\n    @Test\n    public void getMultiResponseHeader() throws Exception {\n        mockMvc.perform(get(\"/\"))\n                .andExpect(header()\n                        .stringValues(\"Cache-Control\", \"max-age=86400\", \"must-revalidate\")); // \u8907\u6570\u306e\u30d8\u30c3\u30c0\u5024\u306e\u691c\u8a3c\u304c\u53ef\u80fd\n    }\n\n}\n```\n\n# `MockMvc`\u3067\u30d5\u30a9\u30fc\u30e0\u5f62\u5f0f\u306e\u30dc\u30c7\u30a3\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6271\u3048\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u5411\u3051Spring MVC Test Framework(`MockMvc`)\u306b\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306b\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf(`application/x-www-form-urlencoded`\u5f62\u5f0f)\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 \u3053\u3053\u3067\u306f\u3001`param1`\u3068`param2`\u3068\u3044\u3046\u3075\u305f\u3064\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6271\u3046\u4f8b\u3092\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```java:\n@Controller\npublic class TestController {\n    @RequestMapping(path = \"/post\", method = RequestMethod.POST)\n    public String post(@RequestParam String param1, @RequestParam String param2, Model model) {\n        model.addAttribute(\"param1\", param1);\n        model.addAttribute(\"param2\", param2);\n        return \"confirm\";\n    }\n}\n```\n\nSpring 4.2\u307e\u3067\u306f\u3001`param`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u3082\u3061\u308d\u3093Spring 4.3\u4ee5\u964d\u3067\u3082\u3053\u306e\u65b9\u6cd5\u306f\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n```java\n@Test\npublic void form() throws Exception {\n    mockMvc.perform(post(\"/post\")\n            .param(\"param1\", \"aaaa\").param(\"param2\", \"bbbb\")) // param\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u6307\u5b9a\n            .andExpect(status().isOk())\n            .andExpect(view().name(\"confirm\"))\n            .andExpect(model().attribute(\"param1\", \"aaaa\"))\n            .andExpect(model().attribute(\"param2\", \"bbbb\"));\n}\n```\n\nSpring 4.3\u304b\u3089\u306f\u3001`content`\u30e1\u30bd\u30c3\u30c9\u306b`application/x-www-form-urlencoded`\u5f62\u5f0f\u306e\u30dc\u30c7\u30a3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u540c\u3058\u3053\u3068\u3092\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:4.3\u301c\n@Test\npublic void form() throws Exception {\n    mockMvc.perform(post(\"/post\")\n            .contentType(MediaType.APPLICATION_FORM_URLENCODED) // Content-Type\u306b\u300capplication/x-www-form-urlencoded\u300d\u3092\u6307\u5b9a\n            .content(\"param1=aaaa&param2=bbbb\")) // \u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306b\u300capplication/x-www-form-urlencoded\u300d\u5f62\u5f0f\u306e\u5024\u3092\u6307\u5b9a\n            .andExpect(status().isOk())\n            .andExpect(view().name(\"confirm\"))\n            .andExpect(model().attribute(\"param1\", \"aaaa\"))\n            .andExpect(model().attribute(\"param2\", \"bbbb\"));\n}\n```\n\nContent-Type\u306b`MediaType.APPLICATION_FORM_URLENCODED`\u3092\u6307\u5b9a\u3059\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\u6307\u5b9a\u3057\u306a\u3044\u3068\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u305b\u3093\u3002\n\n\n# \u547c\u3073\u51fa\u3055\u308c\u305fHandler\u30e1\u30bd\u30c3\u30c9\u306e\u691c\u8a3c\u304c\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u5411\u3051Spring MVC Test Framework(`MockMvc`)\u306b\u3066\u3001\u547c\u3073\u51fa\u3055\u308c\u305fHandler\u30e1\u30bd\u30c3\u30c9\u306e\u691c\u8a3c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\n@Test\npublic void getAll() throws Exception {\n    mockMvc.perform(get(\"/todos\"))\n            .andExpect(status().isOk())\n            // \u547c\u3073\u51fa\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u691c\u8a3c(MvcUriComponentsBuilder\u306eon\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528)\n            .andExpect(handler().methodCall(on(TodoRestController.class).getAll()))\n            // \u547c\u3073\u51fa\u3055\u308c\u305fHandler\u30e1\u30bd\u30c3\u30c9\u306e\u30af\u30e9\u30b9\u3092\u691c\u8a3c\n            .andExpect(handler().handlerType(TodoRestController.class))\n            // \u547c\u3073\u51fa\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u691c\u8a3c\n            .andExpect(handler().method(TodoRestController.class.getMethod(\"getAll\")))\n            // \u547c\u3073\u51fa\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u540d\u524d\u3092\u691c\u8a3c\n            .andExpect(handler().methodName(\"getAll\"));\n}\n```\n\n\u3044\u304f\u3064\u304b\u65b9\u6cd5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001`MvcUriComponentsBuilder`\u3092\u4f7f\u3046\u65b9\u6cd5\u304c\u30bf\u30a4\u30d7\u30bb\u30fc\u30d5\u306a\u5b9f\u88c5\u306a\u306e\u3067\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\n# `MockRestServiceServer`\u3067\u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u56de\u6570\u3092\u6307\u5b9a\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u5411\u3051\u30e2\u30c3\u30afREST\u30b5\u30fc\u30d0\u6a5f\u80fd(`MockRestServiceServer`)\u306b\u3066\u3001\u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u56de\u6570\u3084\u9806\u5e8f\u6027\u3092\u7121\u8996\u3059\u308b\u305f\u3081\u306e\u30d5\u30e9\u30b0\u306a\u3069\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002 `MockRestServiceServer`\u306f\u3042\u307e\u308a\u77e5\u3089\u308c\u3066\u3044\u306a\u3044\uff01\uff1f\u6c17\u304c\u3057\u307e\u3059\u304c\u3001\u5916\u90e8\u306eREST API\u306a\u3069\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u3092\u884c\u3046\u5834\u5408\u306b\u975e\u5e38\u306b\u4fbf\u5229\u306a\u6a5f\u80fd\u3067\u3059\u3002\n\n## `MockRestServiceServer`\u306e\u4f7f\u3044\u65b9\n\u3059\u3054\u301c\u304f\u7c21\u5358\u306b`MockRestServiceServer`\u306e\u4f7f\u3044\u65b9\u3092\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aController\u306e\u30c6\u30b9\u30c8\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3053\u306eController\u30af\u30e9\u30b9\u3067\u306f\u3001\u5916\u90e8\u306eREST API\u3092\u547c\u3073\u51fa\u3057\u305f\u7d50\u679c\u3092\u753b\u9762\u306b\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u5916\u90e8\u306eREST API\u3092\u547c\u3073\u51fa\u3059\u969b\u306b\u306f\u3001Spring\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b`RestOperations`\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4ecb\u3057\u3066`RestTemplate`\u30af\u30e9\u30b9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n```java:\u30c6\u30b9\u30c8\u5bfe\u8c61\u306eController\u30af\u30e9\u30b9\n@RequestMapping(\"/todos\")\n@Controller\nstatic class TodoController {\n\n    @Autowired\n    RestOperations restOperations;\n\n    @RequestMapping(path = \"{todoId}\", method = RequestMethod.GET)\n    public String detail(@PathVariable String todoId, Model model) {\n        Todo todo = restOperations.getForObject(\"https://api.domain/todos/{todoId}\", Todo.class, todoId); // \u5916\u90e8\u306eREST API\u306e\u547c\u3073\u51fa\u3057\n        model.addAttribute(todo);\n        return \"detail\";\n    }\n}\n```\n\n\u4f55\u3082\u884c\u308f\u306a\u3044\u3068\u3001\u5916\u90e8\u306eREST API\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u30b7\u30b9\u30c6\u30e0\u30c6\u30b9\u30c8\u306a\u3069\u3067\u306f\u5916\u90e8\u306eREST API\u306b\u5b9f\u969b\u306b\u3064\u306a\u3050\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u5358\u4f53\u30c6\u30b9\u30c8\u3084\u30e2\u30b8\u30e5\u30fc\u30eb\u7d50\u5408\u30c6\u30b9\u30c8\u3067\u306f\u5916\u90e8\u306eREST API\u306b\u3064\u306a\u304e\u305f\u304f\u306a\u3044\u30b1\u30fc\u30b9\u3082\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u3044\u3063\u305f\u5834\u5408\u306b\u306f\u3001`MockRestServiceServer`\u304c\u4f7f\u3048\u307e\u3059\u3002\n\n```java:\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\n@RunWith(SpringRunner.class)\n@WebAppConfiguration\n// ...\npublic class SpringTest {\n\n    @Autowired\n    WebApplicationContext wac;\n\n    MockMvc mockMvc;\n\n    @Autowired\n    RestTemplate restTemplate; // \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30af\u30e9\u30b9\u3067\u4f7f\u3046RestTemplate\u3068\u540c\u3058\u3082\u306e\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3059\u308b\n\n    @Before\n    public void setUpMockMvc() {\n        this.mockMvc = MockMvcBuilders.webAppContextSetup(wac).build();\n    }\n\n    @Test\n    public void detail() throws Exception {\n        // \u5916\u90e8\u306eAPI\u3092\u547c\u3073\u51fa\u3059\u969b\u306b\u4f7f\u7528\u3059\u308bRestTemplate\u3092\u3001MockRestServiceServer\u3068\u7d10\u3065\u3051\u308b\u3002\n        // \u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001MockRestServiceServer\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u9001\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n        MockRestServiceServer mockServer = MockRestServiceServer.bindTo(restTemplate).build();\n\n        // \u671f\u5f85\u7d50\u679c\u3092MockRestServiceServer\u306b\u767b\u9332\u3059\u308b\n        mockServer.expect(requestTo(\"https://api.domain/todos/123\"))\n                .andRespond(withSuccess(\"{\\\"id\\\":\\\"123\\\", \\\"title\\\":\\\"\u30bf\u30a4\u30c8\u30eb\\\", \\\"finished\\\":false}\", MediaType.APPLICATION_JSON_UTF8));\n\n        mockMvc.perform(get(\"/todos/123\"))\n                .andExpect(status().isOk())\n                .andExpect(view().name(\"detail\"))\n                .andExpect(model().attribute(\"todo\", hasProperty(\"id\", is(\"123\"))))\n                .andExpect(model().attribute(\"todo\", hasProperty(\"title\", is(\"\u30bf\u30a4\u30c8\u30eb\"))))\n                .andExpect(model().attribute(\"todo\", hasProperty(\"finished\", is(false))));\n\n        mockServer.verify(); // \u671f\u5f85\u901a\u308a\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304cMockRestServiceServer\u306b\u9001\u4fe1\u3055\u308c\u305f\u304b\u691c\u8a3c\u3059\u308b\n    }\n\n}\n```\n\n\u3055\u3089\u306b\u8a73\u3057\u3044\u4f7f\u3044\u65b9\u3092\u77e5\u308a\u305f\u3044\u65b9\u306f\u300c[Spring\u306e\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](http://docs.spring.io/spring/docs/4.3.0.BUILD-SNAPSHOT/spring-framework-reference/htmlsingle/#spring-mvc-test-client)\u300d\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n> 2016/6/6 \u8ffd\u8a18\n> \u300c[Spring\u306eRestTemplate\u3092\u4f7f\u3046\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306eJUnit\u30c6\u30b9\u30c8\u306f\u3053\u3046\u66f8\u304f\uff01\uff01](http://qiita.com/kazuki43zoo/items/fa9fea1c813f76080fe7)\u300d\u306b`MockRestServiceServer`\u306e\u4ed5\u7d44\u307f\u3068\u4f7f\u3044\u65b9\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\n## \u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u56de\u6570\u306e\u5236\u5fa1\n\n\u3067\u3001Spring 4.3\u304b\u3089`expect`\u30e1\u30bd\u30c3\u30c9\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u4efb\u610f\u306e`ExpectedCount`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u6307\u5b9a\u3057\u305f\u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u5374\u3059\u308b\u56de\u6570\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java:\u301c4.2\n// \u5730\u5473\u306b\u5217\u6319\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u304c\u30fb\u30fb\u30fb\nMockRestServiceServer mockServer = MockRestServiceServer.bindTo(restTemplate).build();\nmockServer.expect(requestTo(\"https://api.domain/todos/123\"))\n            .andRespond(withSuccess(\"{\\\"id\\\":\\\"123\\\", \\\"title\\\":\\\"\u30bf\u30a4\u30c8\u30eb\\\", \\\"finished\\\":false}\", \nmockServer.expect(requestTo(\"https://api.domain/todos/123\"))\n            .andRespond(withSuccess(\"{\\\"id\\\":\\\"123\\\", \\\"title\\\":\\\"\u30bf\u30a4\u30c8\u30eb\\\", \\\"finished\\\":false}\", \nmockServer.expect(requestTo(\"https://api.domain/todos/123\"))\n            .andRespond(withSuccess(\"{\\\"id\\\":\\\"123\\\", \\\"title\\\":\\\"\u30bf\u30a4\u30c8\u30eb\\\", \\\"finished\\\":false}\", \n// ...\n```\n```java:4.3\u301c\nMockRestServiceServer mockServer = MockRestServiceServer.bindTo(restTemplate).build();\n// \u56de\u6570\u6307\u5b9a\u304c\u53ef\u80fd\u306b\u306a\u308b\uff01\uff01\nmockServer.expect(times(3), requestTo(\"https://api.domain/todos/123\"))\n            .andRespond(withSuccess(\"{\\\"id\\\":\\\"123\\\", \\\"title\\\":\\\"\u30bf\u30a4\u30c8\u30eb\\\", \\\"finished\\\":false}\", \n// ...\n```\n\n`times`\u610f\u5916\u306b\u3082\u3001`once`, `manyTimes`, `min`, `max`, `between`\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n## \u9806\u5e8f\u6027\u306e\u7121\u8996\n\nSpring 4.3\u304b\u3089\u3001`expect`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u6307\u5b9a\u3057\u305f\u671f\u5f85\u7d50\u679c(\u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9)\u306e\u9806\u5e8f\u6027\u3092\u691c\u8a3c\u5bfe\u8c61\u304b\u3089\u9664\u5916\u3059\u308b(\u7121\u8996\u3059\u308b)\u3053\u3068\u3092\u793a\u3059\u30d5\u30e9\u30b0(`ignoreExpectOrder`)\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002`ignoreExpectOrder`\u3092`true`\u306b\u3059\u308b\u3068\u3001\u5b9a\u7fa9\u9806\u306b\u95a2\u4fc2\u306a\u304f\u30ea\u30af\u30a8\u30b9\u30c8\u5185\u5bb9\u306b\u4e00\u81f4\u3059\u308b\u671f\u5f85\u7d50\u679c(\u30e2\u30c3\u30af\u30ec\u30b9\u30dd\u30f3\u30b9)\u304c\u6d88\u8cbb\u3055\u308c\u307e\u3059\u3002\n\n```java\nMockRestServiceServer mockServer = MockRestServiceServer.bindTo(restTemplate)\n        .ignoreExpectOrder(true).build();\n```\n\n## `bindTo`\u30e1\u30bd\u30c3\u30c9\n\n\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb`MockRestServiceServer`\u306e`bindTo`\u30e1\u30bd\u30c3\u30c9\u306fSpring 4.3\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3067\u3001`MockRestServiceServer`\u7528\u306e\u30d3\u30eb\u30c0\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u5374\u3057\u307e\u3059\u3002`MockRestServiceServer`\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u306a\u3051\u308c\u3070\u3001`MockRestServiceServer`\u306e`createServer`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\n# `MockRestServiceServer`\u3067\u30d5\u30a9\u30fc\u30e0\u5f62\u5f0f\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306e\u691c\u8a3c\u304c\u3067\u304d\u308b :+1: \n\nSpring 4.3\u304b\u3089\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u5411\u3051\u30e2\u30c3\u30afREST\u30b5\u30fc\u30d0\u6a5f\u80fd(`MockRestServiceServer`)\u306b\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306b\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf(`application/x-www-form-urlencoded`\u5f62\u5f0f)\u306e\u691c\u8a3c\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u305f\u3068\u3048\u3070\u3001\u5916\u90e8\u306eWeb API\u306b\u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf(`application/x-www-form-urlencoded`\u5f62\u5f0f)\u3092\u9001\u4fe1\u3059\u308b\u3088\u3046\u306a\u51e6\u7406\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\u3002\n\n```java:\u30c6\u30b9\u30c8\u5bfe\u8c61\u306eController\u30af\u30e9\u30b9\n@RequestMapping(\"/todos\")\n@Controller\npublic class TodoController {\n\n    @Autowired\n    RestOperations restOperations;\n\n    @RequestMapping(method = RequestMethod.POST)\n    public String postTodo(Form from) {\n\n        // \u30d5\u30a9\u30fc\u30e0\u30c7\u30fc\u30bf(application/x-www-form-urlencoded\u5f62\u5f0f)\u3092\u9001\u4fe1\n        MultiValueMap<String, Object> formData = new LinkedMultiValueMap<>();\n        formData.add(\"title\", from.getTitle());\n        restOperations.postForObject(\"https://api.domain/todos\", formData, Void.class);\n\n        return \"complete\";\n    }\n\n}\n```\n\n\u3053\u306e\u51e6\u7406\u306b\u5bfe\u3059\u308b\u30c6\u30b9\u30c8\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java:\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30e1\u30bd\u30c3\u30c9\n@Test\npublic void postTodo() throws Exception {\n\n    MockRestServiceServer mockServer = MockRestServiceServer.bindTo(restTemplate).build();\n\n    MultiValueMap<String, String> expectedFormData = new LinkedMultiValueMap<>();\n    formData.add(\"title\", \"\u30bf\u30a4\u30c8\u30eb\");\n\n    mockServer.expect(requestTo(\"https://api.domain/todos\"))\n            .andExpect(content().contentType(MediaType.APPLICATION_FORM_URLENCODED))\n            .andExpect(content().formData(expectedFormData)) // \u30ea\u30af\u30a8\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u671f\u5f85\u5024\u3092\u6307\u5b9a\n            .andRespond(withCreatedEntity(URI.create(\"https://api.domain/todos/123\")));\n\n    mockMvc.perform(post(\"/todos\")\n            .param(\"title\", \"\u30bf\u30a4\u30c8\u30eb\"))\n            .andExpect(status().isOk())\n            .andExpect(view().name(\"complete\"));\n\n    mockServer.verify();\n}\n```\n\n# \u307e\u3068\u3081\n\n\u4eca\u56de\u306f\u3001\u30c6\u30b9\u30c8\u95a2\u9023\u306e\u4e3b\u306a\u5909\u66f4\u70b9\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u3067Spring Framework 4.3\u306e\u5909\u66f4\u70b9\u7d39\u4ecb\u30b7\u30ea\u30fc\u30ba\u306f\u304a\u308f\u308a\u3067\u3059\u304c\u3001\u672c\u30b7\u30ea\u30fc\u30ba\u3067\u7d39\u4ecb\u3057\u3066\u3044\u306a\u3044\u5909\u66f4\u70b9\u3082\u6570\u591a\u304f\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u4e2d\u306b\u306f\u3001\u672c\u30b7\u30ea\u30fc\u30ba\u3067\u7d39\u4ecb\u3057\u3066\u3082\u306e\u3088\u308a\u5229\u7528\u983b\u5ea6\u304c\u591a\u305d\u3046\uff01\uff1f\u306a\u3082\u306e\u3082\u3042\u308b\u306e\u3067\u3001\u8208\u5473\u304c\u3042\u308b\u65b9\u306f\u662f\u975e\u300c[Spring JIRA\u306eIssue](https://jira.spring.io/issues/?jql=project%20%3D%20SPR%20AND%20fixVersion%20in%20%28%224.3%20GA%22%2C%20%224.3%20RC1%22%2C%20%224.3%20RC2%22%29)\u300d\u3092\u78ba\u8a8d\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3044\u3063\u305f\u3093\u7d42\u4e86\u3057\u307e\u3059\u304c\u3001\u7d99\u7d9a\u3057\u3066\u66f4\u65b0\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u53c2\u8003\u30b5\u30a4\u30c8\n\n* http://docs.spring.io/spring/docs/4.3.0.RELEASE/spring-framework-reference/htmlsingle/\n\n\n# \u88dc\u8db3\n## Spring 4.3 GA\u306b\u4f34\u3044\u5909\u66f4\u70b9\u3092\u8ffd\u52a0 (2016/6/11)\n\u3064\u3044\u306b4.3\u304cGA\u306b\u306a\u308a\u3001\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4e3b\u306a\u5909\u66f4\u70b9\u306b\u8ffd\u52a0\u3055\u308c\u305f\u30c8\u30d4\u30c3\u30af\u30b9\u3092\u53cd\u6620\u3057\u307e\u3057\u305f\u3002\uff08\u300c\u26056/11\u8ffd\u52a0\u300d\u3067\u30de\u30fc\u30af\u3057\u3066\u3042\u308a\u307e\u3059\uff09\n", "tags": ["Java", "spring", "spring-boot", "testing"]}