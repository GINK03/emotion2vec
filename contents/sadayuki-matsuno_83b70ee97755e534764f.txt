{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nEC2\u3067Web\u30b5\u30a4\u30c8\u306e\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u53d7\u3051\u53d6\u308b\u6642\u306b\u3001CloudWatch -> SNS\u3060\u3068\u3001\u82f1\u8a9e\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u304f\u3066\u840e\u3048\u308b\u306e\u3067\u3001Lambda\u3067\u6574\u5f62\u3057\u3066\u304b\u3089SNS\u3067\u30e1\u30fc\u30eb\u9001\u4fe1\u3057\u305f\u3044\u3002\nCloudwatchlogs -> lambda -> SNS\u3068\u3044\u3046\u69cb\u6210\u3067\u3084\u308b\u3002\n\u4ed6\u306b\u3082\u3001Cloudwatchlogs -> kinesis -> lambda -> SNS\u3068\u3044\u3046\u65b9\u6cd5\u304c\u3042\u308b\u304c\u3001kinesis\u3092\u631f\u3093\u3067\u3082\u3042\u3093\u307e\u308a\u65e8\u307f\u304c\u306a\u3044\u3057\uff08\u3082\u3061\u308d\u3093\u30e1\u30ea\u30c3\u30c8\u304c0\u3067\u306f\u306a\u3044\uff09\u3001kinesis -> lambda\u306f\u30dd\u30fc\u30ea\u30f3\u30b0\u306a\u306e\u3067\u3001\u30a4\u30d9\u30f3\u30c8\u30c9\u30ea\u30d6\u30f3\u306b\u3067\u304d\u306a\u3044\u6b20\u70b9\u304c\u3042\u308b\u3002\n\u53c2\u8003\n\u3010\u65b0\u6a5f\u80fd\u3011Amazon CloudWatch Logs\u306e\u30ed\u30b0\u30c7\u30fc\u30bf\u3092AWS Lambda\u3067\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u51e6\u7406\u3059\u308b\nCloudWatch Logs Subscriptions\u3092\u5229\u7528\u3057\u305fZabbix\u3078\u306e\u30ed\u30b0\u8ee2\u9001\n\n\u69cb\u6210\n\n\n\nEC2 -> CloudwatchLogs \u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u7d4c\u7531\u3057\u3066\u884c\u3046\n\u30c7\u30fc\u30bf\u306floggroup\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u7ba1\u7406\u3059\u308b\u3002\uff08\u901a\u77e5\u306e\u969b\u306e\u5207\u308a\u5206\u3051\u304c\u3057\u3084\u3059\u3044\u3088\u3046\u306b\uff09\n\nCloudwatchLogs -> lambda \u306fsubscription\u3092\u4f7f\u3063\u3066\u3001ERROR,FATAL\u3060\u3051\u306b\u7d5e\u308b\uff08INFO,WARN\u3092\u9001\u308b\u3068\u3044\u3063\u3071\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u5897\u3048\u3066\u304a\u91d1\u304b\u304b\u308b\u306e\u3067\uff09\nlambda\u306fpython\u3067\u66f8\u304f\uff08\u7c21\u5358\u306a\u306e\u3067\uff09\n\nCloudwachLogs -> SNS\u306f\u30e1\u30c8\u30ea\u30c3\u30af\u30b9\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u4f7f\u3046\nlambda\u306e\u30a8\u30e9\u30fc\u51e6\u7406\u3082\u884c\u3046\uff08\u5fc3\u914d\u306a\u306e\u3067\uff09\n\u4eca\u56deSNS\u306e\u6574\u5f62\u306f\u9811\u5f35\u3089\u306a\u3044\uff08\u5fc5\u8981\u306a\u60c5\u5831\u304c\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b\u611f\u3058\u304c\u308f\u304b\u308c\u3070\u3044\u3044\uff09\n\n\n\u6599\u91d1\n\ncloudwatchlogs\n\n\n\n\u9805\u76ee\n\u5358\u4f4d\n\u6599\u91d1\uff08Month\uff09\n\n\n\n\n\u30ab\u30b9\u30bf\u30e0\u30e1\u30c8\u30ea\u30c3\u30af\u30b9\n\u500b\n$0.5\n\n\n\u30a2\u30e9\u30fc\u30e0\n\u500b\n$0.10\n\n\n\u53d6\u308a\u8fbc\u307f\nGB\n$0.76\n\n\n\u30a2\u30fc\u30ab\u30a4\u30d6\nGB\n$0.033\n\n\nEC2\u304b\u3089\u306e\u8ee2\u9001\nGB\n$0.140\n\n\n\nEC2\u304b\u3089\u306e\u8ee2\u9001\u306f\u6700\u521d\u306e1GB\u7121\u6599\u3001\u6b21\u306e10T\u307e\u3067\u304c\u3053\u306e\u5024\u6bb5\n\u30a8\u30e9\u30fc\u306e\u983b\u5ea6\u306b\u3082\u3088\u308b\u304c\u3001\u305d\u3093\u306a\u306b\u304a\u91d1\u306f\u304b\u304b\u3089\u306a\u3044\u5370\u8c61\u3002\n1\u6642\u9593\u306b1\u56de\u304f\u3089\u3044\u306e\u983b\u5ea6\u3067\u30a8\u30e9\u30fc\u304c\u5410\u304b\u308c\u308b\u304f\u3089\u3044\u306a\u3089\u30012\u30c9\u30eb/\u6708\u3082\u304b\u304b\u3089\u306a\u3044\u3068\u601d\u3046\n\nlambda\n\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u3046\u3061\u6bce\u6708\u6700\u521d\u306e 1,000,000 \u4ef6\u306f\u7121\u6599\n\u4eca\u56de\u306e\u69cb\u6210\u3067\u306f\u7121\u6599\u3067\u3044\u3051\u308b\u3068\u601d\u3046\u3002\n\nSNS\nEmail\u306f1000\u4ef6\u7121\u6599\u3002\n\u305d\u306e\u5f8c\u306f100,000 \u4ef6\u3042\u305f\u308a 2 \u30c9\u30eb\n\u4eca\u56de\u306f\u3001\u30a8\u30e9\u30fc\u304c\u3044\u3063\u3071\u3044\u51fa\u305f\u3068\u3057\u3066\u30822\u30c9\u30eb\u3067\u6e08\u3080\u3068\u601d\u3046\u3002\n\n\u5408\u8a08\n2\u30c9\u30eb\uff08cloudwatchlogs) + \u7121\u6599\uff08lambda\uff09 + 2\u30c9\u30eb(SNS) = 4\u30c9\u30eb\n\u3082\u3061\u308d\u3093\u3001cloudwatchlogs\u306e\u30c7\u30fc\u30bf\u4fdd\u6301\u5bb9\u91cf\u3001\u30a8\u30e9\u30fc\u30ed\u30b0\u983b\u5ea6\u306b\u3088\u3063\u3066\u3044\u308d\u3044\u308d\u5909\u308f\u308a\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\n\nlambda\n\n\nlambda\nfrom __future__ import print_function\n\nimport base64\nimport json\nimport zlib\nimport datetime\nimport boto3\n\nsns = boto3.client('sns')\n\nprint('Loading function')\n\ndef lambda_handler(event, context):\n    #print(\"Received event: \" + json.dumps(event, indent=2))\n    data = zlib.decompress(base64.b64decode(event['awslogs']['data']), 16+zlib.MAX_WBITS)\n    data_json = json.loads(data)\n    log_json = json.loads(json.dumps(data_json[\"logEvents\"][0], ensure_ascii=False))\n    if data_json[\"logGroup\"]:\n        date = datetime.datetime.fromtimestamp(int(str(log_json[\"timestamp\"])[:10])) + datetime.timedelta(hours=9)\n        sns_body = {}\n        sns_body[\"default\"] = \"\" \n        sns_body[\"default\"] += \"Owner : \" +  data_json[\"owner\"] + \"\\n\" \n        sns_body[\"default\"] += \"LogGroup : \" + data_json[\"logGroup\"] + \"\\n\" \n        sns_body[\"default\"] += \"LogStream : \" + data_json[\"logStream\"] + \"\\n\" \n        sns_body[\"default\"] += \"SubscriptionFilters : \" + ''.join(data_json[\"subscriptionFilters\"]) + \"\\n\" \n        sns_body[\"default\"] += \"Time : \" +  date.strftime('%Y-%m-%d %H:%M:%S') + \"\\n\" \n        sns_body[\"default\"] += \"Message : \" + log_json['message'] + \"\\n\" \n\n        topic = 'arn:aws:sns:ap-northeast-1:111111111111:***********'\n        subject = 'Your Email Subject!!'\n        region = 'ap-northeast-1'\n        response = sns.publish(\n            TopicArn=topic,\n            Message=json.dumps(sns_body, ensure_ascii=False),\n            Subject=subject,\n            MessageStructure='json'\n        )\n    return 'Successfully processed {} records.'.format(len(event['awslogs']))\n\n\n\u3053\u308c\u3092lambda\u306b\u30dd\u30c1\u30c3\u3068\u8cbc\u308a\u4ed8\u3051\u308c\u3070\u5927\u4e08\u592b\u3067\u3059\u3002\nSNS\u306eTOPIC\u3060\u3051\u306f\u5404\u81ea\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u6700\u5f8c\u306b\n\u4f55\u304b\u9593\u9055\u3044\u3042\u308c\u3070\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\n# \u306f\u3058\u3081\u306b\n\nEC2\u3067Web\u30b5\u30a4\u30c8\u306e\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u53d7\u3051\u53d6\u308b\u6642\u306b\u3001CloudWatch -> SNS\u3060\u3068\u3001\u82f1\u8a9e\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u304f\u3066\u840e\u3048\u308b\u306e\u3067\u3001Lambda\u3067\u6574\u5f62\u3057\u3066\u304b\u3089SNS\u3067\u30e1\u30fc\u30eb\u9001\u4fe1\u3057\u305f\u3044\u3002\n`Cloudwatchlogs -> lambda -> SNS`\u3068\u3044\u3046\u69cb\u6210\u3067\u3084\u308b\u3002\n\n\u4ed6\u306b\u3082\u3001`Cloudwatchlogs -> kinesis -> lambda -> SNS`\u3068\u3044\u3046\u65b9\u6cd5\u304c\u3042\u308b\u304c\u3001kinesis\u3092\u631f\u3093\u3067\u3082\u3042\u3093\u307e\u308a\u65e8\u307f\u304c\u306a\u3044\u3057\uff08\u3082\u3061\u308d\u3093\u30e1\u30ea\u30c3\u30c8\u304c0\u3067\u306f\u306a\u3044\uff09\u3001`kinesis -> lambda`\u306f\u30dd\u30fc\u30ea\u30f3\u30b0\u306a\u306e\u3067\u3001\u30a4\u30d9\u30f3\u30c8\u30c9\u30ea\u30d6\u30f3\u306b\u3067\u304d\u306a\u3044\u6b20\u70b9\u304c\u3042\u308b\u3002\n\n\u53c2\u8003\n[\u3010\u65b0\u6a5f\u80fd\u3011Amazon CloudWatch Logs\u306e\u30ed\u30b0\u30c7\u30fc\u30bf\u3092AWS Lambda\u3067\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u51e6\u7406\u3059\u308b](http://dev.classmethod.jp/cloud/aws/real-time-processing-log-data-with-lambda/)\n[CloudWatch Logs Subscriptions\u3092\u5229\u7528\u3057\u305fZabbix\u3078\u306e\u30ed\u30b0\u8ee2\u9001](http://dev.classmethod.jp/cloud/aws/cloudwatch-logs-to-zabbix/)\n\n\n# \u69cb\u6210\n\n![logfilter1.png](https://qiita-image-store.s3.amazonaws.com/0/55672/eaf785c4-98f9-7cee-6353-6d30fea2ec5a.png)\n\n* `EC2 -> CloudwatchLogs` \u306f\u3001\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u7d4c\u7531\u3057\u3066\u884c\u3046\n* \u30c7\u30fc\u30bf\u306floggroup\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u3057\u3066\u7ba1\u7406\u3059\u308b\u3002\uff08\u901a\u77e5\u306e\u969b\u306e\u5207\u308a\u5206\u3051\u304c\u3057\u3084\u3059\u3044\u3088\u3046\u306b\uff09\n* `CloudwatchLogs -> lambda` \u306fsubscription\u3092\u4f7f\u3063\u3066\u3001ERROR,FATAL\u3060\u3051\u306b\u7d5e\u308b\uff08INFO,WARN\u3092\u9001\u308b\u3068\u3044\u3063\u3071\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u5897\u3048\u3066\u304a\u91d1\u304b\u304b\u308b\u306e\u3067\uff09\n* lambda\u306fpython\u3067\u66f8\u304f\uff08\u7c21\u5358\u306a\u306e\u3067\uff09\n* `CloudwachLogs -> SNS`\u306f\u30e1\u30c8\u30ea\u30c3\u30af\u30b9\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u4f7f\u3046\n* lambda\u306e\u30a8\u30e9\u30fc\u51e6\u7406\u3082\u884c\u3046\uff08\u5fc3\u914d\u306a\u306e\u3067\uff09\n* \u4eca\u56deSNS\u306e\u6574\u5f62\u306f\u9811\u5f35\u3089\u306a\u3044\uff08\u5fc5\u8981\u306a\u60c5\u5831\u304c\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u308b\u611f\u3058\u304c\u308f\u304b\u308c\u3070\u3044\u3044\uff09\n\n# \u6599\u91d1\n\n## cloudwatchlogs\n\n|\u9805\u76ee|\u5358\u4f4d|\u6599\u91d1\uff08Month\uff09|\n|:--|:--|:--|\n|\u30ab\u30b9\u30bf\u30e0\u30e1\u30c8\u30ea\u30c3\u30af\u30b9|\u500b|$0.5|\n|\u30a2\u30e9\u30fc\u30e0|\u500b|$0.10|\n|\u53d6\u308a\u8fbc\u307f|GB|$0.76|\n|\u30a2\u30fc\u30ab\u30a4\u30d6|GB|$0.033|\n|EC2\u304b\u3089\u306e\u8ee2\u9001|GB|$0.140|\n\n EC2\u304b\u3089\u306e\u8ee2\u9001\u306f\u6700\u521d\u306e1GB\u7121\u6599\u3001\u6b21\u306e10T\u307e\u3067\u304c\u3053\u306e\u5024\u6bb5\n\n\u30a8\u30e9\u30fc\u306e\u983b\u5ea6\u306b\u3082\u3088\u308b\u304c\u3001\u305d\u3093\u306a\u306b\u304a\u91d1\u306f\u304b\u304b\u3089\u306a\u3044\u5370\u8c61\u3002\n1\u6642\u9593\u306b1\u56de\u304f\u3089\u3044\u306e\u983b\u5ea6\u3067\u30a8\u30e9\u30fc\u304c\u5410\u304b\u308c\u308b\u304f\u3089\u3044\u306a\u3089\u30012\u30c9\u30eb/\u6708\u3082\u304b\u304b\u3089\u306a\u3044\u3068\u601d\u3046\n\n## lambda\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u3046\u3061\u6bce\u6708\u6700\u521d\u306e 1,000,000 \u4ef6\u306f\u7121\u6599\n\u4eca\u56de\u306e\u69cb\u6210\u3067\u306f\u7121\u6599\u3067\u3044\u3051\u308b\u3068\u601d\u3046\u3002\n\n## SNS\n\nEmail\u306f1000\u4ef6\u7121\u6599\u3002\n\u305d\u306e\u5f8c\u306f100,000 \u4ef6\u3042\u305f\u308a 2 \u30c9\u30eb\n\n\u4eca\u56de\u306f\u3001\u30a8\u30e9\u30fc\u304c\u3044\u3063\u3071\u3044\u51fa\u305f\u3068\u3057\u3066\u30822\u30c9\u30eb\u3067\u6e08\u3080\u3068\u601d\u3046\u3002\n\n## \u5408\u8a08\n\n2\u30c9\u30eb\uff08cloudwatchlogs) + \u7121\u6599\uff08lambda\uff09 + 2\u30c9\u30eb(SNS) = 4\u30c9\u30eb\n\n\u3082\u3061\u308d\u3093\u3001cloudwatchlogs\u306e\u30c7\u30fc\u30bf\u4fdd\u6301\u5bb9\u91cf\u3001\u30a8\u30e9\u30fc\u30ed\u30b0\u983b\u5ea6\u306b\u3088\u3063\u3066\u3044\u308d\u3044\u308d\u5909\u308f\u308a\u307e\u3059\u3002\n\n# \u30b3\u30fc\u30c9\n\n* lambda\n\n```py:lambda\nfrom __future__ import print_function\n\nimport base64\nimport json\nimport zlib\nimport datetime\nimport boto3\n\nsns = boto3.client('sns')\n\nprint('Loading function')\n\ndef lambda_handler(event, context):\n    #print(\"Received event: \" + json.dumps(event, indent=2))\n    data = zlib.decompress(base64.b64decode(event['awslogs']['data']), 16+zlib.MAX_WBITS)\n    data_json = json.loads(data)\n    log_json = json.loads(json.dumps(data_json[\"logEvents\"][0], ensure_ascii=False))\n    if data_json[\"logGroup\"]:\n        date = datetime.datetime.fromtimestamp(int(str(log_json[\"timestamp\"])[:10])) + datetime.timedelta(hours=9)\n        sns_body = {}\n        sns_body[\"default\"] = \"\" \n        sns_body[\"default\"] += \"Owner : \" +  data_json[\"owner\"] + \"\\n\" \n        sns_body[\"default\"] += \"LogGroup : \" + data_json[\"logGroup\"] + \"\\n\" \n        sns_body[\"default\"] += \"LogStream : \" + data_json[\"logStream\"] + \"\\n\" \n        sns_body[\"default\"] += \"SubscriptionFilters : \" + ''.join(data_json[\"subscriptionFilters\"]) + \"\\n\" \n        sns_body[\"default\"] += \"Time : \" +  date.strftime('%Y-%m-%d %H:%M:%S') + \"\\n\" \n        sns_body[\"default\"] += \"Message : \" + log_json['message'] + \"\\n\" \n\n        topic = 'arn:aws:sns:ap-northeast-1:111111111111:***********'\n        subject = 'Your Email Subject!!'\n        region = 'ap-northeast-1'\n        response = sns.publish(\n            TopicArn=topic,\n            Message=json.dumps(sns_body, ensure_ascii=False),\n            Subject=subject,\n            MessageStructure='json'\n        )\n    return 'Successfully processed {} records.'.format(len(event['awslogs']))\n```\n\n\u3053\u308c\u3092lambda\u306b\u30dd\u30c1\u30c3\u3068\u8cbc\u308a\u4ed8\u3051\u308c\u3070\u5927\u4e08\u592b\u3067\u3059\u3002\nSNS\u306eTOPIC\u3060\u3051\u306f\u5404\u81ea\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u6700\u5f8c\u306b\n\n\u4f55\u304b\u9593\u9055\u3044\u3042\u308c\u3070\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\n", "tags": ["AWS", "SNS", "lambda", "CloudWatch"]}