{"tags": ["cocos2d-x"], "context": " More than 1 year has passed since last update.CCDictionary\u3001CCArray\u306e\u4e2d\u8eab\u3092\u7c21\u5358\u306b\u53d6\u308a\u51fa\u305b\u308b\u30de\u30af\u30ed\u304c\u6b32\u3057\u3044\u3068\u601d\u3063\u305f\u306e\u3067\u3001JSON\u98a8\u306b\u51fa\u529b\u3059\u308b\u95a2\u6570\u30fb\u30de\u30af\u30ed\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nvoid outputObject(CCObject* obj, const char* key, int level);\n\ninline const char* getIndentString(int level)\n{\n    CCString* str = CCString::create(\"\");\n    for(int i = 0; i < level; ++i)\n    {\n        str = appendCCString(str, CCString::create(\"   \"));\n    }\n\n    return str->getCString();\n}\n\ninline void outputArray(CCArray* array, int level)\n{\n    CCLOG(\"%s{\", getIndentString(level));\n\n    for(int i = 0 ; i < array->count(); ++i)\n    {\n        CCObject* value = array->objectAtIndex(i);\n\n        outputObject(value, GetCStrI(i), level + 1);\n    }\n\n    CCLOG(\"%s}\", getIndentString(level));\n}\n\ninline void outputDictionary(CCDictionary* dictionary, int level)\n{\n    CCLOG(\"%s{\", getIndentString(level));\n\n    CCArray* allKeys = dictionary->allKeys();\n    CCObject* obj;\n    CCARRAY_FOREACH(allKeys, obj)\n    {\n        CCString* key = (CCString*)obj;\n\n        CCObject* value = dictionary->objectForKey(key->getCString());\n\n        outputObject(value, key->getCString(), level + 1);\n    }\n\n    CCLOG(\"%s}\", getIndentString(level));\n}\n\ninline void outputObject(CCObject* obj, const char* key, int level)\n{\n    const char* initialString;\n    if(strlen(key) == 0)\n    {\n        initialString = \"\";\n    }\n    else\n    {\n        initialString = GetCStrFmt(\"%s\\\"%s\\\" : \", getIndentString(level), key);\n    }\n\n    if(typeid(*obj) == typeid(CCString))\n    {\n        CCLOG(\"%s\\\"%s\\\"\", initialString, ((CCString*)obj)->getCString());\n    }\n    else if(typeid(*obj) == typeid(CCInteger))\n    {\n        CCLOG(\"%s%d\", initialString, ((CCInteger*)obj)->getValue());\n    }\n    else if(typeid(*obj) == typeid(CCArray))\n    {\n        CCLOG(\"%sCCArray( %d Objects )\", initialString, ((CCArray*)obj)->count());\n        outputArray((CCArray*)obj, level);\n    }\n    else if(typeid(*obj) == typeid(CCDictionary))\n    {\n        CCLOG(\"%sCCDictionary( %d Key/Values)\", initialString, ((CCDictionary*)obj)->allKeys()->count());\n        outputDictionary((CCDictionary*)obj, level);\n    }\n    else\n    {\n        CCLOG(\"%s%s\", initialString, typeid(obj).name());\n    }\n}\n\n#define OutputCCObject( obj )       ( outputObject( obj , \"\", 0 ) )\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3044\u307e\u3059\u3002\n\nCCDictionary* dictionary = CCDictionary::create();\ndictionary->setObject(CCString::create(\"ABC\"), \"StringSample\");\ndictionary->setObject(CCInteger::create(01234), \"IntegerSample\");\n\nCCDictionary* dictA = CCDictionary::create();\ndictA->setObject(CCString::create(\"JP\"), \"Language\");\ndictA->setObject(CCString::create(\"\u3053\u3093\u306b\u3061\u306f\"), \"Hello\");\n\nCCDictionary* dictB = CCDictionary::create();\ndictB->setObject(CCString::create(\"EN\"), \"Language\");\ndictB->setObject(CCString::create(\"HELLO\"), \"Hello\");\n\ndictionary->setObject(CCArray::create(dictA, dictB, NULL), \"CollectionSample\");\n\nOutputCCObject( dictionary );\n\n\n\u51fa\u529b\u7d50\u679c\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\nCCDictionary( 3 Key/Values)\n{\n   \"StringSample\" : \"ABC\"\n   \"IntegerSample\" : 668\n   \"CollectionSample\" : CCArray( 2 Objects )\n   {\n      \"0\" : CCDictionary( 2 Key/Values)\n      {\n         \"Language\" : \"JP\"\n         \"Hello\" : \"\u3053\u3093\u306b\u3061\u306f\"\n      }\n      \"1\" : CCDictionary( 2 Key/Values)\n      {\n         \"Language\" : \"EN\"\n         \"Hello\" : \"HELLO\"\n      }\n   }\n}\n\n\nCCDictionary\u3001CCArray\u306e\u4e2d\u8eab\u3092\u7c21\u5358\u306b\u53d6\u308a\u51fa\u305b\u308b\u30de\u30af\u30ed\u304c\u6b32\u3057\u3044\u3068\u601d\u3063\u305f\u306e\u3067\u3001JSON\u98a8\u306b\u51fa\u529b\u3059\u308b\u95a2\u6570\u30fb\u30de\u30af\u30ed\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n```cpp\nvoid outputObject(CCObject* obj, const char* key, int level);\n\ninline const char* getIndentString(int level)\n{\n    CCString* str = CCString::create(\"\");\n    for(int i = 0; i < level; ++i)\n    {\n        str = appendCCString(str, CCString::create(\"   \"));\n    }\n    \n    return str->getCString();\n}\n\ninline void outputArray(CCArray* array, int level)\n{\n    CCLOG(\"%s{\", getIndentString(level));\n    \n    for(int i = 0 ; i < array->count(); ++i)\n    {\n        CCObject* value = array->objectAtIndex(i);\n        \n        outputObject(value, GetCStrI(i), level + 1);\n    }\n    \n    CCLOG(\"%s}\", getIndentString(level));\n}\n\ninline void outputDictionary(CCDictionary* dictionary, int level)\n{\n    CCLOG(\"%s{\", getIndentString(level));\n    \n    CCArray* allKeys = dictionary->allKeys();\n    CCObject* obj;\n    CCARRAY_FOREACH(allKeys, obj)\n    {\n        CCString* key = (CCString*)obj;\n        \n        CCObject* value = dictionary->objectForKey(key->getCString());\n        \n        outputObject(value, key->getCString(), level + 1);\n    }\n    \n    CCLOG(\"%s}\", getIndentString(level));\n}\n\ninline void outputObject(CCObject* obj, const char* key, int level)\n{\n    const char* initialString;\n    if(strlen(key) == 0)\n    {\n        initialString = \"\";\n    }\n    else\n    {\n        initialString = GetCStrFmt(\"%s\\\"%s\\\" : \", getIndentString(level), key);\n    }\n    \n    if(typeid(*obj) == typeid(CCString))\n    {\n        CCLOG(\"%s\\\"%s\\\"\", initialString, ((CCString*)obj)->getCString());\n    }\n    else if(typeid(*obj) == typeid(CCInteger))\n    {\n        CCLOG(\"%s%d\", initialString, ((CCInteger*)obj)->getValue());\n    }\n    else if(typeid(*obj) == typeid(CCArray))\n    {\n        CCLOG(\"%sCCArray( %d Objects )\", initialString, ((CCArray*)obj)->count());\n        outputArray((CCArray*)obj, level);\n    }\n    else if(typeid(*obj) == typeid(CCDictionary))\n    {\n        CCLOG(\"%sCCDictionary( %d Key/Values)\", initialString, ((CCDictionary*)obj)->allKeys()->count());\n        outputDictionary((CCDictionary*)obj, level);\n    }\n    else\n    {\n        CCLOG(\"%s%s\", initialString, typeid(obj).name());\n    }\n}\n\n#define OutputCCObject( obj )       ( outputObject( obj , \"\", 0 ) )\n\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n```cpp\n\nCCDictionary* dictionary = CCDictionary::create();\ndictionary->setObject(CCString::create(\"ABC\"), \"StringSample\");\ndictionary->setObject(CCInteger::create(01234), \"IntegerSample\");\n\nCCDictionary* dictA = CCDictionary::create();\ndictA->setObject(CCString::create(\"JP\"), \"Language\");\ndictA->setObject(CCString::create(\"\u3053\u3093\u306b\u3061\u306f\"), \"Hello\");\n\nCCDictionary* dictB = CCDictionary::create();\ndictB->setObject(CCString::create(\"EN\"), \"Language\");\ndictB->setObject(CCString::create(\"HELLO\"), \"Hello\");\n\ndictionary->setObject(CCArray::create(dictA, dictB, NULL), \"CollectionSample\");\n\nOutputCCObject( dictionary );\n\n```\n\n\u51fa\u529b\u7d50\u679c\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\n```\n\nCCDictionary( 3 Key/Values)\n{\n   \"StringSample\" : \"ABC\"\n   \"IntegerSample\" : 668\n   \"CollectionSample\" : CCArray( 2 Objects )\n   {\n      \"0\" : CCDictionary( 2 Key/Values)\n      {\n         \"Language\" : \"JP\"\n         \"Hello\" : \"\u3053\u3093\u306b\u3061\u306f\"\n      }\n      \"1\" : CCDictionary( 2 Key/Values)\n      {\n         \"Language\" : \"EN\"\n         \"Hello\" : \"HELLO\"\n      }\n   }\n}\n\n```"}