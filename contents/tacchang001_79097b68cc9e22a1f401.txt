{"tags": ["Java", "subethasmtp", "JUnit"], "context": " More than 1 year has passed since last update.JUnit\u3067\u4f7f\u3048\u308b\u30e1\u30fc\u30eb\u30b5\u30fc\u30d0SubEtha SMTP\u304c\u3042\u308b\u3053\u3068\u3092\u77e5\u308a\u307e\u3057\u305f\u3002\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u7528\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u7acb\u3066\u3066\u3044\u305f\u624b\u9593\u304c\u7701\u3051\u3066\u52a9\u304b\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\nMailSender.java\uff08\u30c6\u30b9\u30c8\u5bfe\u8c61\uff09\nimport java.util.Date;\nimport java.util.Properties;\n\nimport javax.mail.Address;\nimport javax.mail.Message;\nimport javax.mail.MessagingException;\nimport javax.mail.Session;\nimport javax.mail.Transport;\nimport javax.mail.internet.AddressException;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeMessage;\n\nimport lombok.Data;\n\n@Data\npublic class MailSender {\n    private String from;\n    private String host;\n    private Integer port;\n\n    public MailSender(final String host, final int port) {\n        this.host = host;\n        this.port = port;\n    }\n\n    public void send(String from, String to, String subject, String text)\n            throws AddressException, MessagingException {\n        Properties prop = new Properties();\n        prop.put(\"mail.smtp.host\", getHost());\n        prop.put(\"mail.smtp.port\", getPort().toString());\n        Session session = Session.getDefaultInstance(prop);\n        MimeMessage mime = new MimeMessage(session);\n        mime.addFrom(InternetAddress.parse(from));\n        Address[] tos = { new InternetAddress(to) };\n        mime.setRecipients(Message.RecipientType.TO, tos);\n        mime.setSubject(subject, \"iso-2022-jp\");\n        mime.setText(text);\n        mime.setSentDate(new Date());\n        Transport.send(mime);\n    }\n}\n\n\n\n\nMailServerTest\uff08\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\uff09\nimport org.junit.*;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\nimport static org.junit.Assert.fail;\n\nimport java.util.List;\n\nimport javax.mail.MessagingException;\n\nimport lombok.val;\n\nimport org.subethamail.wiser.Wiser;\nimport org.subethamail.wiser.WiserMessage;\n\npublic class MailSenderTest {\n\n    private static Wiser wiser;\n\n    final static String hostName = \"localhost\";\n    final static int port = 2500;\n\n    @BeforeClass\n    public static void setUpBeforeClass() throws Exception {\n        // \u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u308b\n        wiser = new Wiser();\n        wiser.setPort(port);\n        wiser.setHostname(hostName);\n        wiser.start();\n    }\n\n    @AfterClass\n    public static void tearDownAfterClass() throws Exception {\n        // \u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u3092\u843d\u3068\u3059\n        wiser.stop();\n    }\n\n    @Test\n    public void test() {\n        final String expectTo = \"to@devel.local\";\n        final String expectFrom = \"from@devel.local\";\n        final String expectSubject = \"Hello World\";\n        final String content = \"What a nice weather today\\nDo not you think so?\";\n\n        val mailer = new MailSender(hostName, port);\n        try {\n            mailer.send(expectFrom, expectTo, expectSubject, content);\n\n            // \u30e1\u30fc\u30eb\u5185\u5bb9\u3092\u691c\u67fb\n            List<WiserMessage> messages = wiser.getMessages();\n            for (WiserMessage wiserMessage : messages) {\n                assertThat(wiserMessage.getEnvelopeSender(), is(expectFrom));\n                assertThat(wiserMessage.getEnvelopeReceiver(), is(expectTo));\n                try {\n                    assertThat(wiserMessage.getMimeMessage().getSubject(), is(expectSubject));\n                } catch (MessagingException e) {\n                    fail(\"\u984c\u540d\u3092\u53d6\u5f97\u3067\u304d\u306a\u3044\");\n                }\n            }\n\n        } catch (MessagingException e) {\n            fail(\"\u671f\u5f85\u3057\u3066\u3044\u306a\u3044\u4f8b\u5916\u304c\u767a\u751f\");\n        }\n    }\n\n}\n\n\n\n\nbuild.gradle\napply plugin: 'java'\napply plugin: 'eclipse'\napply plugin: 'maven'\napply plugin: 'provided-base'\n\nbuildscript {\n    repositories {  \n        maven { url 'http://jcenter.bintray.com' }\n    }\n    dependencies {\n        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'\n    }\n}\n\nsourceCompatibility = \"$project.java_version\"\ntargetCompatibility = \"$project.java_version\"\n\nversion = \"$project.spec_version\"\ngroup = \"$project.app_group\"\n\nrepositories {\n    maven { url \"http://repo.maven.apache.org/maven2\" }    \n}\n\ndependencies {\n    compile 'javax.mail:mail:1.+'\n    provided 'org.projectlombok:lombok:1.14.+'\n\n    testCompile 'junit:junit:4.11', {\n        transitive = false\n    }\n    testCompile 'org.hamcrest:hamcrest-all:1.3'\n    testCompile(\"org.subethamail:subethasmtp:3.1.+\") // \u7d44\u8fbc\u307f\u30b5\u30fc\u30d0\n}\n\ndef defaultEncoding = 'UTF-8'\ntasks.withType(JavaCompile) {\n    options.encoding = defaultEncoding\n}\n\njar {\n    manifest {\n        attributes 'Implementation-Title': \"$project.app_description\",\n                   'Implementation-Version': version + \"-$project.patch_version\"\n    }\n}\n\nclean {\n    delete 'bin', 'target', 'logs'\n}\n\n\n\n\ngradle.properties\nspec_version = 0.9.0\npatch_version = p0\n\napp_group = org.example\napp_name = example\napp_description = \"This is a example\"\n\njava_version = 1.8\n\n\nJUnit\u3067\u4f7f\u3048\u308b\u30e1\u30fc\u30eb\u30b5\u30fc\u30d0[SubEtha SMTP](https://github.com/voodoodyne/subethasmtp)\u304c\u3042\u308b\u3053\u3068\u3092\u77e5\u308a\u307e\u3057\u305f\u3002\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u7528\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u7acb\u3066\u3066\u3044\u305f\u624b\u9593\u304c\u7701\u3051\u3066\u52a9\u304b\u308a\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n```java:MailSender.java\uff08\u30c6\u30b9\u30c8\u5bfe\u8c61\uff09\nimport java.util.Date;\nimport java.util.Properties;\n\nimport javax.mail.Address;\nimport javax.mail.Message;\nimport javax.mail.MessagingException;\nimport javax.mail.Session;\nimport javax.mail.Transport;\nimport javax.mail.internet.AddressException;\nimport javax.mail.internet.InternetAddress;\nimport javax.mail.internet.MimeMessage;\n\nimport lombok.Data;\n\n@Data\npublic class MailSender {\n\tprivate String from;\n\tprivate String host;\n\tprivate Integer port;\n\n\tpublic MailSender(final String host, final int port) {\n\t\tthis.host = host;\n\t\tthis.port = port;\n\t}\n\n\tpublic void send(String from, String to, String subject, String text)\n\t\t\tthrows AddressException, MessagingException {\n\t\tProperties prop = new Properties();\n\t\tprop.put(\"mail.smtp.host\", getHost());\n\t\tprop.put(\"mail.smtp.port\", getPort().toString());\n\t\tSession session = Session.getDefaultInstance(prop);\n\t\tMimeMessage mime = new MimeMessage(session);\n\t\tmime.addFrom(InternetAddress.parse(from));\n\t\tAddress[] tos = { new InternetAddress(to) };\n\t\tmime.setRecipients(Message.RecipientType.TO, tos);\n\t\tmime.setSubject(subject, \"iso-2022-jp\");\n\t\tmime.setText(text);\n\t\tmime.setSentDate(new Date());\n\t\tTransport.send(mime);\n\t}\n}\n\n```\n\n```java:MailServerTest\uff08\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\uff09\nimport org.junit.*;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\nimport static org.junit.Assert.fail;\n\nimport java.util.List;\n\nimport javax.mail.MessagingException;\n\nimport lombok.val;\n\nimport org.subethamail.wiser.Wiser;\nimport org.subethamail.wiser.WiserMessage;\n\npublic class MailSenderTest {\n\t\n\tprivate static Wiser wiser;\n\t\n\tfinal static String hostName = \"localhost\";\n\tfinal static int port = 2500;\n\t\n\t@BeforeClass\n\tpublic static void setUpBeforeClass() throws Exception {\n\t\t// \u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u3092\u7acb\u3066\u308b\n\t\twiser = new Wiser();\n        wiser.setPort(port);\n        wiser.setHostname(hostName);\n        wiser.start();\n\t}\n\n\t@AfterClass\n\tpublic static void tearDownAfterClass() throws Exception {\n    \t// \u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u3092\u843d\u3068\u3059\n    \twiser.stop();\n\t}\n\n\t@Test\n\tpublic void test() {\n\t\tfinal String expectTo = \"to@devel.local\";\n\t\tfinal String expectFrom = \"from@devel.local\";\n\t\tfinal String expectSubject = \"Hello World\";\n\t\tfinal String content = \"What a nice weather today\\nDo not you think so?\";\n\n\t\tval mailer = new MailSender(hostName, port);\n\t\ttry {\n\t\t\tmailer.send(expectFrom, expectTo, expectSubject, content);\n\t\t\t\n\t\t\t// \u30e1\u30fc\u30eb\u5185\u5bb9\u3092\u691c\u67fb\n\t        List<WiserMessage> messages = wiser.getMessages();\n\t        for (WiserMessage wiserMessage : messages) {\n\t        \tassertThat(wiserMessage.getEnvelopeSender(), is(expectFrom));\n\t        \tassertThat(wiserMessage.getEnvelopeReceiver(), is(expectTo));\n\t        \ttry {\n\t\t\t\t\tassertThat(wiserMessage.getMimeMessage().getSubject(), is(expectSubject));\n\t\t\t\t} catch (MessagingException e) {\n\t\t\t\t\tfail(\"\u984c\u540d\u3092\u53d6\u5f97\u3067\u304d\u306a\u3044\");\n\t\t\t\t}\n\t        }\n\n\t\t} catch (MessagingException e) {\n\t\t\tfail(\"\u671f\u5f85\u3057\u3066\u3044\u306a\u3044\u4f8b\u5916\u304c\u767a\u751f\");\n\t\t}\n\t}\n\n}\n\n```\n\n```groovy:build.gradle\napply plugin: 'java'\napply plugin: 'eclipse'\napply plugin: 'maven'\napply plugin: 'provided-base'\n\nbuildscript {\n    repositories {  \n        maven { url 'http://jcenter.bintray.com' }\n    }\n    dependencies {\n        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:1.12.+'\n    }\n}\n \nsourceCompatibility = \"$project.java_version\"\ntargetCompatibility = \"$project.java_version\"\n \nversion = \"$project.spec_version\"\ngroup = \"$project.app_group\"\n \nrepositories {\n    maven { url \"http://repo.maven.apache.org/maven2\" }    \n}\n \ndependencies {\n\tcompile 'javax.mail:mail:1.+'\n    provided 'org.projectlombok:lombok:1.14.+'\n    \n    testCompile 'junit:junit:4.11', {\n        transitive = false\n    }\n    testCompile 'org.hamcrest:hamcrest-all:1.3'\n    testCompile(\"org.subethamail:subethasmtp:3.1.+\") // \u7d44\u8fbc\u307f\u30b5\u30fc\u30d0\n}\n \ndef defaultEncoding = 'UTF-8'\ntasks.withType(JavaCompile) {\n    options.encoding = defaultEncoding\n}\n \njar {\n    manifest {\n        attributes 'Implementation-Title': \"$project.app_description\",\n                   'Implementation-Version': version + \"-$project.patch_version\"\n    }\n}\n \nclean {\n    delete 'bin', 'target', 'logs'\n}\n\n```\n\n```properties:gradle.properties\nspec_version = 0.9.0\npatch_version = p0\n \napp_group = org.example\napp_name = example\napp_description = \"This is a example\"\n \njava_version = 1.8\n```\n"}