{"context": "c88\u3067\u30a8\u30f3\u30b8\u30cb\u30a2\u7cfb\u306e\u672c\u3092\u8cb7\u3063\u3066\u8208\u5473\u3092\u6301\u3063\u305f\u306e\u3067RxAndroid\u3092\u8a66\u3057\u3066\u307f\u305f!\n\nRxAndroid\u3068\u306f\nRxAndroid\u306fRxJava\u306eAndroid\u7528\u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\nRxJava\u306f\u4e3b\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u51fa\u6765\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u307e\u305fObserver\u30d1\u30bf\u30fc\u30f3\u306b\u8e0f\u8972\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30fc\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u306e\u9023\u643a\u3082\u53ef\u80fd\u3067\u3059\u3002\nECMA6\u304b\u3089Javascript\u306b\u6a19\u6e96\u642d\u8f09\u3055\u308c\u308b\u4e88\u5b9a\u306ePromise\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\u3002\n\u3053\u3053\u3067\u306fPromise.when\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3084\u308d\u3046\u3068\u3057\u3066\u307e\u3059\u3002\njQuery\u3092\u4f7f\u3046\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002javascript\u306f\u7c21\u5358\u3067\u3059\u306d  \nvar baseUrl = \"http://api.openweathermap.org/data/2.5/weather?q=\";\n$.when(\n    $.getJSON(baseUrl+\"Tokyo\"),\n    $.getJSON(baseUrl+\"Kyoto\"),\n    $.getJSON(baseUrl+\"Osaka\"),\n    $.getJSON(baseUrl+\"Okinawa\"),\n    $.getJSON(baseUrl+\"Hokkaido\")\n)\n.then(\n    function(data1, data2, data3, data4, data5){\n        var s = \"\";\n        s += data1[0].id + \":\" + data1[0].name + \"\\n\";\n        s += data2[0].id + \":\" + data2[0].name + \"\\n\";\n        s += data3[0].id + \":\" + data3[0].name + \"\\n\";\n        s += data4[0].id + \":\" + data4[0].name + \"\\n\";\n        s += data5[0].id + \":\" + data5[0].name + \"\\n\";\n        return $.Deferred().resolve(s);\n    }\n)\n.then(\n    function(s){\n        console.log(s);\n    }\n);\n\n\u3061\u3087\u3063\u3068\u601d\u60f3\u304c\u9055\u3044\u307e\u3059\u304c\u3001\u7af6\u5408\u306fBoltsFramework\u3068\u304b\u3067\u3059\u304b\u306d\u3002\nBoltsFramework\u306f\u751f\u7406\u7684\u306b\u53d7\u3051\u4ed8\u3051\u306a\u3044\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u63a8\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\u3053\u3053\u3067\u306fRxAndroid\u3068RESTAPI\u30e9\u30a4\u30d6\u30e9\u30ea\u306eRetrofit\u3092\u5229\u7528\u3057\u3066\u3001\nAPI\u3078\u4e26\u5217\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\nAPI\u306fopenweathermap\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\nbuild.gradle\n    compile 'com.squareup.retrofit:retrofit:1.9.0'\n    compile 'io.reactivex:rxandroid:1.0.1'\n\n\nAPI\u7528\u306einterface\u3092\u4f5c\u6210\n\nRetrofit\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u8272\u3005\u6307\u5b9a\u51fa\u6765\u3066\u4fbf\u5229\u3067\u3059\u3002\n\u7d50\u679c\u306f\u30c7\u30fc\u30bf\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u306e\u304c\u9762\u5012\u306a\u306e\u3067JSONObject\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n\npublic interface WeatherApi {\n    @GET(\"/data/2.5/weather\")\n    public Observable<JSONObject> get(@Query(\"q\") String query);\n}\n\n\nJsonConverter\u306e\u4f5c\u6210\n\n\u6a19\u6e96\u3060\u3068GsonConverter\u3057\u304b\u306a\u3044\u306e\u3067\u3001\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\nGsonConver\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u5fc5\u8981\u306a\u3044\u3067\u3059\u3002\n\n\n\npublic class JsonConverter implements Converter {\n    private static final Charset UTF_8 = Charset.forName(\"UTF-8\");\n\n    @Override\n    public Object fromBody(TypedInput body, Type type) \n        throws ConversionException {\n        InputStream inputStream = null;\n        JSONObject jsonObject = null;\n        try {\n            inputStream = body.in();\n            jsonObject = new JSONObject(IOUtils.toString(inputStream, UTF_8));\n        } catch (IOException | JSONException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (inputStream != null) {\n                    inputStream.close();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return jsonObject;\n    }\n\n    @Override\n    public TypedOutput toBody(Object object) {\n        return null;\n    }\n}\n\n\nAPI\u3092\u4f5c\u6210\u3059\u308b\n\nAPI\u751f\u6210\u6642\u306bJsonConverter\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\nLogLevel.FULL\u3060\u3068\u3059\u3079\u3066\u306e\u901a\u4fe1\u30ed\u30b0\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\nWeatherApi api = new RestAdapter.Builder()\n    .setConverter(new JsonConverter())\n    .setEndpoint(\"http://api.openweathermap.org/\")\n    .setLogLevel(RestAdapter.LogLevel.FULL)\n    .build()\n    .create(WeatherApi.class);\n\n\n\u4e26\u5217\u3067API\u3092\u547c\u3093\u3067\u307f\u308b\n\nObservable.zip\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u74b0\u5883\u306e\u90fd\u5408\u4e0a\u3001\u30e9\u30e0\u30c0\u5f0f\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nTextView\u306b\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u6587\u5b57\u5217\u3092\u4f5c\u3063\u3066\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\nObservable.zip(\n    api.get(\"Tokyo\"), \n    api.get(\"Kyoto\"), \n    api.get(\"Osaka\"), \n    api.get(\"Okinawa\"), \n    api.get(\"Hokkaido\"),\n    (jsonObject, jsonObject2, jsonObject3, jsonObject4, jsonObject5) -> {\n        String newLine = System.getProperty(\"line.separator\");\n        StringBuilder sb = new StringBuilder();\n        try {\n            sb.append(jsonObject.getString(\"id\")+\":\"+jsonObject.getString(\"name\"));\n            sb.append(newLine);\n            sb.append(jsonObject2.getString(\"id\")+\":\"+jsonObject2.getString(\"name\"));\n            sb.append(newLine);\n            sb.append(jsonObject3.getString(\"id\")+\":\"+jsonObject3.getString(\"name\"));\n            sb.append(newLine);\n            sb.append(jsonObject4.getString(\"id\")+\":\"+jsonObject2.getString(\"name\"));\n            sb.append(newLine);\n            sb.append(jsonObject5.getString(\"id\")+\":\"+jsonObject3.getString(\"name\"));\n            sb.append(newLine);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n        return sb.toString();\n    })\n    .subscribeOn(Schedulers.newThread())\n    .observeOn(AndroidSchedulers.mainThread())\n    .subscribe(new Subscriber<String>() {\n        @Override\n        public void onCompleted() {\n        }\n        @Override\n        public void onError(Throwable e) {\n            e.printStackTrace();\n            Toast.makeText(this, \"error\", Toast.LENGTH_SHORT).show();\n        }\n        @Override\n        public void onNext(String s) {\n            result.setText(s); // \u8868\u793a\u3059\u308bTextView\n        }\n    });\n\n\nsubscribeOn \u3068 observerOn\nsubscribeOn(Schedulers.newThread())\u306f\nObservable.zip\u306e\u51e6\u7406\u3092\u65b0\u898f\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002\nAndroidSchedulers.mainThread()\u3092\u6e21\u3059\u3053\u3068\u3082\u53ef\u80fd\u3002\nobserveOn(AndroidSchedulers.mainThread())\u306f\nsubscriber\u306e\u51e6\u7406\u3092Main\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002\nparallel-rxandroid-example\nc88\u3067\u30a8\u30f3\u30b8\u30cb\u30a2\u7cfb\u306e\u672c\u3092\u8cb7\u3063\u3066\u8208\u5473\u3092\u6301\u3063\u305f\u306e\u3067RxAndroid\u3092\u8a66\u3057\u3066\u307f\u305f!\n\n# RxAndroid\u3068\u306f\n[RxAndroid](https://github.com/ReactiveX/RxAndroid)\u306f[RxJava](https://github.com/ReactiveX/RxJava)\u306eAndroid\u7528\u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\nRxJava\u306f\u4e3b\u306b\u975e\u540c\u671f\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u51fa\u6765\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u307e\u305fObserver\u30d1\u30bf\u30fc\u30f3\u306b\u8e0f\u8972\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30fc\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u306e\u9023\u643a\u3082\u53ef\u80fd\u3067\u3059\u3002\nECMA6\u304b\u3089Javascript\u306b\u6a19\u6e96\u642d\u8f09\u3055\u308c\u308b\u4e88\u5b9a\u306ePromise\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\u3002\n\u3053\u3053\u3067\u306fPromise.when\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3084\u308d\u3046\u3068\u3057\u3066\u307e\u3059\u3002\njQuery\u3092\u4f7f\u3046\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002javascript\u306f\u7c21\u5358\u3067\u3059\u306d :kissing_heart: \n\n```js\nvar baseUrl = \"http://api.openweathermap.org/data/2.5/weather?q=\";\n$.when(\n    $.getJSON(baseUrl+\"Tokyo\"),\n    $.getJSON(baseUrl+\"Kyoto\"),\n    $.getJSON(baseUrl+\"Osaka\"),\n    $.getJSON(baseUrl+\"Okinawa\"),\n    $.getJSON(baseUrl+\"Hokkaido\")\n)\n.then(\n    function(data1, data2, data3, data4, data5){\n        var s = \"\";\n        s += data1[0].id + \":\" + data1[0].name + \"\\n\";\n        s += data2[0].id + \":\" + data2[0].name + \"\\n\";\n        s += data3[0].id + \":\" + data3[0].name + \"\\n\";\n        s += data4[0].id + \":\" + data4[0].name + \"\\n\";\n        s += data5[0].id + \":\" + data5[0].name + \"\\n\";\n        return $.Deferred().resolve(s);\n    }\n)\n.then(\n    function(s){\n        console.log(s);\n    }\n);\n```\n\u3061\u3087\u3063\u3068\u601d\u60f3\u304c\u9055\u3044\u307e\u3059\u304c\u3001\u7af6\u5408\u306f[BoltsFramework](https://github.com/BoltsFramework)\u3068\u304b\u3067\u3059\u304b\u306d\u3002\nBoltsFramework\u306f\u751f\u7406\u7684\u306b\u53d7\u3051\u4ed8\u3051\u306a\u3044\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u63a8\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\u3053\u3053\u3067\u306fRxAndroid\u3068RESTAPI\u30e9\u30a4\u30d6\u30e9\u30ea\u306e[Retrofit](http://square.github.io/retrofit/)\u3092\u5229\u7528\u3057\u3066\u3001\nAPI\u3078\u4e26\u5217\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\nAPI\u306f[openweathermap](http://openweathermap.org/)\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n### build.gradle\n```\n\tcompile 'com.squareup.retrofit:retrofit:1.9.0'\n\tcompile 'io.reactivex:rxandroid:1.0.1'\n```\n### API\u7528\u306einterface\u3092\u4f5c\u6210\n* Retrofit\u3092\u5229\u7528\u3057\u307e\u3059\u3002\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u8272\u3005\u6307\u5b9a\u51fa\u6765\u3066\u4fbf\u5229\u3067\u3059\u3002\n* \u7d50\u679c\u306f\u30c7\u30fc\u30bf\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u306e\u304c\u9762\u5012\u306a\u306e\u3067JSONObject\u3092\u5229\u7528\u3057\u307e\u3059\u3002  \n\n```\npublic interface WeatherApi {\n    @GET(\"/data/2.5/weather\")\n    public Observable<JSONObject> get(@Query(\"q\") String query);\n}\n```\n### JsonConverter\u306e\u4f5c\u6210\n* \u6a19\u6e96\u3060\u3068GsonConverter\u3057\u304b\u306a\u3044\u306e\u3067\u3001\u4f5c\u6210\u3057\u307e\u3059\u3002\n\t* GsonConver\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u5fc5\u8981\u306a\u3044\u3067\u3059\u3002\n\n```\npublic class JsonConverter implements Converter {\n    private static final Charset UTF_8 = Charset.forName(\"UTF-8\");\n\n    @Override\n    public Object fromBody(TypedInput body, Type type) \n        throws ConversionException {\n        InputStream inputStream = null;\n        JSONObject jsonObject = null;\n        try {\n            inputStream = body.in();\n            jsonObject = new JSONObject(IOUtils.toString(inputStream, UTF_8));\n        } catch (IOException | JSONException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (inputStream != null) {\n                    inputStream.close();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return jsonObject;\n    }\n\n    @Override\n    public TypedOutput toBody(Object object) {\n        return null;\n    }\n}\n```\n### API\u3092\u4f5c\u6210\u3059\u308b\n* API\u751f\u6210\u6642\u306bJsonConverter\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n* LogLevel.FULL\u3060\u3068\u3059\u3079\u3066\u306e\u901a\u4fe1\u30ed\u30b0\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```\nWeatherApi api = new RestAdapter.Builder()\n\t.setConverter(new JsonConverter())\n\t.setEndpoint(\"http://api.openweathermap.org/\")\n\t.setLogLevel(RestAdapter.LogLevel.FULL)\n\t.build()\n\t.create(WeatherApi.class);\n```\n### \u4e26\u5217\u3067API\u3092\u547c\u3093\u3067\u307f\u308b\n* Observable.zip\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n* \u74b0\u5883\u306e\u90fd\u5408\u4e0a\u3001\u30e9\u30e0\u30c0\u5f0f\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n* TextView\u306b\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u6587\u5b57\u5217\u3092\u4f5c\u3063\u3066\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\n```java\nObservable.zip(\n    api.get(\"Tokyo\"), \n    api.get(\"Kyoto\"), \n    api.get(\"Osaka\"), \n    api.get(\"Okinawa\"), \n    api.get(\"Hokkaido\"),\n\t(jsonObject, jsonObject2, jsonObject3, jsonObject4, jsonObject5) -> {\n    \tString newLine = System.getProperty(\"line.separator\");\n    \tStringBuilder sb = new StringBuilder();\n    \ttry {\n    \t\tsb.append(jsonObject.getString(\"id\")+\":\"+jsonObject.getString(\"name\"));\n    \t\tsb.append(newLine);\n    \t\tsb.append(jsonObject2.getString(\"id\")+\":\"+jsonObject2.getString(\"name\"));\n    \t\tsb.append(newLine);\n    \t\tsb.append(jsonObject3.getString(\"id\")+\":\"+jsonObject3.getString(\"name\"));\n    \t\tsb.append(newLine);\n    \t\tsb.append(jsonObject4.getString(\"id\")+\":\"+jsonObject2.getString(\"name\"));\n    \t\tsb.append(newLine);\n    \t\tsb.append(jsonObject5.getString(\"id\")+\":\"+jsonObject3.getString(\"name\"));\n    \t\tsb.append(newLine);\n    \t} catch (JSONException e) {\n    \t\te.printStackTrace();\n    \t}\n\t    return sb.toString();\n    })\n    .subscribeOn(Schedulers.newThread())\n    .observeOn(AndroidSchedulers.mainThread())\n    .subscribe(new Subscriber<String>() {\n    \t@Override\n    \tpublic void onCompleted() {\n    \t}\n    \t@Override\n    \tpublic void onError(Throwable e) {\n    \t\te.printStackTrace();\n      \t\tToast.makeText(this, \"error\", Toast.LENGTH_SHORT).show();\n\t\t}\n\t\t@Override\n\t\tpublic void onNext(String s) {\n\t\t\tresult.setText(s); // \u8868\u793a\u3059\u308bTextView\n\t\t}\n\t});\n```\n### subscribeOn \u3068 observerOn\n`subscribeOn(Schedulers.newThread())`\u306f\nObservable.zip\u306e\u51e6\u7406\u3092\u65b0\u898f\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002\nAndroidSchedulers.mainThread()\u3092\u6e21\u3059\u3053\u3068\u3082\u53ef\u80fd\u3002\n\n`observeOn(AndroidSchedulers.mainThread())`\u306f\nsubscriber\u306e\u51e6\u7406\u3092Main\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u3092\u8868\u3057\u307e\u3059\u3002\n\n[parallel-rxandroid-example](https://github.com/ichiwa/parallel-rxandroid-example)\n", "tags": ["Java", "RxAndroid", "Retrofit", "REST-API", "\u4e26\u5217\u51e6\u7406"]}