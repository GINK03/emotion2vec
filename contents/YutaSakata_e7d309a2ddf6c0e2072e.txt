{"context": "\u3053\u306e\u6295\u7a3f\u306f Retty inc. Advent Calendar 17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\u6628\u65e5\u306fSatoshi Nishinaka\u6c0f(@satoshi_nishinaka)\u306eLet's Enjoy PhantomJS\u3067\u3057\u305f\uff0e\n\u7686\u3055\u3093\u3053\u3093\u306b\u3061\u306f\uff0eRetty inc.\u306eSakata\u3067\u3059\uff0eKotlin\u306e1.0\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f2016\u5e74\u3082\u6b8b\u3059\u3068\u3053\u308d\u3042\u3068\u4e8c\u9031\u9593\u3068\u306a\u308a\u307e\u3057\u305f\uff0e\u5148\u6708\u306e\u672b\uff0cKotlin 1.1\u306e\u4e09\u756a\u76ee\u306e\u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3\u30ea\u30ea\u30fc\u30b9\uff0c1.1-M03\u304c\u3042\u308a\u307e\u3057\u305f\u306d\uff0e\u7686\u3055\u3093\u306f\u3082\u3046\u8a66\u3057\u307e\u3057\u305f\u304b\uff1f\u4eca\u56de\u306f\u3053\u306e1.1-M03\u3068Kotlin 1.1\u306e\u6a5f\u80fd\u306e\u4e00\u3064\u3067\u3042\u308bcoroutine\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\uff0ckotlinx.coroutines\u3092\u5b9f\u969b\u306b\u4f7f\u3044\u306a\u304c\u3089\u305f\u3060\u3067\u3055\u3048\u304b\u308f\u3044\u3044Kotlin\u304c1.1\u3067\u66f4\u306b\u9b45\u529b\u7684\u306b\u306a\u308b\u306e\u3092\u697d\u3057\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306fKotlin Blog\u3092\u3082\u3068\u306bKotlin1.1-M03\u306e\u6642\u70b9\u3067\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u6a5f\u80fd\u3092\u304b\u3093\u305f\u3093\u306b\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\uff0e\n\nThis is not a stable version of Kotlin, and no compatibility guarantees are given here: in the future previews of 1.1, syntax, APIs, command-line switches and anything else may be changed. If you need a stable version of Kotlin, please stay on 1.0.X until further notice.\n\n\u5f15\u7528\u5143\n\u3068\u3044\u3046\u3053\u3068\u3067\u5f8c\u3005\u3053\u3053\u3067\u7d39\u4ecb\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u52d5\u304b\u306a\u304f\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\u5f15\u7528\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u660e\u8a18\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\u6e96\u5099\n\u307e\u305a\u306fIDEA\u3067Kotlin1.1\u3068kotlinx.corutines\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\uff0egradle\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3053\u3093\u306a\u611f\u3058\u306b\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\n\nbuild.gradle\ngroup 'io.github.yusaka39'\nversion '1.0-SNAPSHOT'\n\nbuildscript {\n    ext.kotlin_version = '1.1-M03'\n\n    repositories {\n        mavenCentral()\n        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.1' }\n    }\n    dependencies {\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\n\napply plugin: 'kotlin'\napply plugin: 'application'\n\nmainClassName = 'io.github.yusaka39.demos110.MainKt'\n\nrepositories {\n    mavenCentral()\n    maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.1' }\n    maven { url \"http://dl.bintray.com/kotlin/kotlinx.coroutines\" }\n}\n\ndependencies {\n    compile \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\n    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-generate:0.1-alpha-2'\n    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-async:0.1-alpha-2'\n    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-rx:0.1-alpha-2'\n}\n\n\n\u307e\u305f\uff0c[Tools] -> [Kotlin] -> [Configure Kotlin Plugin Updates] \u304b\u3089 EAP 1.1 \u3092\u9078\u3093\u3067plugin\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u3066\u304a\u304f\u3068IDE\u306e\u30b5\u30dd\u30fc\u30c8\u304c\u52b9\u3044\u3066\u697d\u3061\u3093\u3067\u3059\uff0e\n\n\u65b0\u3057\u3044\u6587\u6cd5\n\u307e\u305a\u306f\u6587\u6cd5\u30ec\u30d9\u30eb\u3067\u306e\u5909\u66f4\u3092\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u578b\u30a8\u30a4\u30ea\u30a2\u30b9\n\u3044\u308f\u3086\u308b\u578b\u30b7\u30ce\u30cb\u30e0\u3067\u3059\uff0e\u65e2\u5b58\u306e\u578b\u306b\u5225\u540d\u3092\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\ntypealias Point = Pair<Double, Double>\n\nfun square(x: Double) = x * x\nfun calcDistance(from: Point, to: Point): Double {\n    val (fromX, fromY) = from\n    val (toX, toY) = to\n    return Math.sqrt(square(toX - fromX) + square(toY - fromY))\n}\n\n\u4eca\u56de\u306e\u4f8b\u3060\u3068Point\u3092\u62e1\u5f35\u3057\u3066\u4e0b\u306e\u3088\u3046\u306bx\u3068y\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u5ba3\u8a00\u3067\u304d\u307e\u3059\u304c\uff0c\u9069\u5207\u306b\u30b9\u30b3\u30fc\u30d7\u3092\u5207\u3089\u306a\u3044\u3068Pair<Double, Double>\u306b\u3082\u5ba3\u8a00\u3055\u308c\u3066(\u3042\u304f\u307e\u3067\u3082\u305f\u3060\u306e\u540c\u7fa9\u8a9e)\u30ad\u30e2\u3044\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\uff0e\nval Point.x: Double\n    get() = this.first\nval Point.y: Double\n    get() = this.second\n\n(0.0 to 0.0).x // legal\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30e1\u30f3\u30d0\u53c2\u7167\n\u4eca\u307e\u3067\u3082HogeClass::method\u3067\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u304c\uff0cinstanceOfHoge::method\u3067\u30ec\u30b7\u30fc\u30d0\u304c\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\nval fruits = listOf(\"apple\", \"orange\", \"peach\")\nfruits.filter(\"apple\"::equals) // [\"apple\"]\n\n\n\u30ed\u30fc\u30ab\u30eb\u306adelegated property\nclass\u306e\u30e1\u30f3\u30d0\u4ee5\u5916\u306e\u5834\u6240\u3067\u3082delegated property\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0eAndroid\u3063\u307d\u3044\u30b3\u30fc\u30c9\u3067\u5931\u793c\u3057\u307e\u3059\uff0e\n\nHogeActivity.kt\nclass HogeActivity : AppCompatActivity() {\n\n    @Suppress(\"unchecked_cast\")\n    fun <T> bindView(resId: Int) = lazy {\n        this.findViewById(resId) as T\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        this.setContentView(R.layout.hoge)\n        val titleText: TextView by bindView(R.id.titleText)\n        titleText.text = \"hello\"\n    }\n}\n\n\n\u4eca\u307e\u3067delegate\u3057\u305f\u3044\u304c\u305f\u3081\u306b\u30af\u30e9\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u5ba3\u8a00\u3057\u3066\u3044\u305f\u3082\u306e\u306e\u30b9\u30b3\u30fc\u30d7\u304c\u7d5e\u308c\u3066\u30cf\u30c3\u30d4\u30fc\u306a\u611f\u3058\u3067\u3059\uff0e\n\nlambda\u3067data\u306a\u5f15\u6570\u3092\u5206\u89e3\n\u4eca\u307e\u3067\u3082\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306f\u30ea\u30fc\u30ac\u30eb\u3067\u3057\u305f\uff0e\ndata class Triple<F, S, T>(val first: F, val second: S, val third: T)\n\nfun sum(triple: Triple<Int, Int, Int>): Int {\n    val (f, s, t) = triple\n    return f + s + t\n}\n\n1.1-M03\u3067\u306f\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3082\u8a31\u5bb9\u3055\u308c\u307e\u3059\uff0e\nval lst: List<Triple<Int, Int, Int>> = // Some initialize codes\nlst.map { (f, s, t) -> f + s + t }\n\n\n\u5909\u6570\u5ba3\u8a00\u3067\u30a2\u30f3\u30b9\u30b3\n\u30c7\u30fc\u30bf\u30af\u30e9\u30b9\u3092\u5206\u89e3\u3057\u305f\u308a\u8907\u6570\u306e\u5f15\u6570\u3092\u53d6\u308blambda\u3092\u4f7f\u3046\u30b1\u30fc\u30b9\u3067\u4f7f\u308f\u306a\u3044\u5909\u6570\u3092golang\u3068\u304b\u3063\u307d\u304f_\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\nval lst: List<Pair<Hoge, Fuga>> = // Some initialize codes\nlst.forEach { (_, fuga) -> doSomethingWithFuga(fuga) }\n\nval (hoge, _) = lst.filterIndexed{ i, _ -> i % 2 == 0 }[0]\n\ntry-catch\u3067\u3082\u3064\u304b\u3048\u307e\u3059(\u4f7f\u3046\u306e\u304c\u59a5\u5f53\u304b\u3069\u3046\u304b\u306f\u7f6e\u3044\u3068\u3044\u3066)\ntry {\n    executeQuery(query)\n} catch (_: SqlException) {\n    // Ignore\n}\n\n\n\u6570\u5024\u3067\u30a2\u30f3\u30b9\u30b3\n\u6570\u5024\u30ea\u30c6\u30e9\u30eb\u306e\u4e2d\u306b\u30a2\u30f3\u30b9\u30b3\u3092\u66f8\u3044\u3066\u6841\u533a\u5207\u308a\u3057\u305f\u308a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n10_000_000 // legal\n23_57 // legal\n23__57 // legal\n23_57.0 // legal\n23_57f // legal\n0x2_357 // legal\n\n_2357 // illegal\n2357_ // illegal\n\n\nstdlib\n\u4fbf\u5229\u306a\u5b50\u304c\u5897\u3048\u307e\u3057\u305f\uff0e\n\nEnum\u5411\u3051\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u95a2\u6570\nreified\u306a\u578b\u5909\u6570\u304b\u3089enum\u306evalue\u3084values\u3092\u53d6\u3063\u3066\u3053\u308c\u308b\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u95a2\u6570\nenumValues()\uff0cenumValueOf()\u304c\u751f\u3048\u307e\u3057\u305f\uff0e\n\nDSL\u958b\u767a\u7528\u306b\u30b9\u30b3\u30fc\u30d7\u3092\u30bf\u30a4\u30c8\u306b\u3059\u308b\u3084\u3064\n\u4eca\u307e\u3067\u306f\u6b21\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u304c\u8d77\u3053\u308a\u3046\u308b\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\ntable {\n  tr {\n    tr {} // PROBLEM: Table.tr() is valid here\n  }\n}\n\n\u30b3\u30fc\u30c9\u5f15\u7528\u5143\n\u3053\u308c\u306fhtml\u30d3\u30eb\u30c0\u306e\u4f8b\u3067\u3059\u304c\uff0ctr(outer)\u306e\u4e2d\u306btr(inner)\u306f\u5165\u3063\u3066\u307b\u3057\u304f\u306a\u3044\u304ctr(outer)\u304b\u3089table\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u304c\u898b\u3048\u3066\u3057\u307e\u3046\u305f\u3081\uff0cKotlin\u306e\u6587\u6cd5\u7684\u306b\u5408\u6cd5\u306btr(inner)\u304c\u547c\u3073\u51fa\u305b\u3066\u3057\u307e\u3044\u307e\u3059\uff0e\u3053\u308c\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b@DslMarker\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\uff0e\u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u6ce8\u91c8\u3055\u308c\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u6ce8\u91c8\u3055\u308c\u305f\u30af\u30e9\u30b9\u304b\u3089\u540c\u3058\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u3064\u3044\u3066\u3044\u308b\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u304c\u898b\u3048\u306a\u304f\u306a\u308a\u307e\u3059\uff0e\u81ea\u5206\u3067\u66f8\u3044\u3066\u3066\u8a33\u304c\u308f\u304b\u3089\u306a\u304f\u306a\u3063\u3066\u304d\u305f\uff0e\u7c21\u5358\u306ahtml\u30d3\u30eb\u30c0\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\uff0e\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306a\u3057\u306e\u5834\u5408\nfun html(initializer: Html.() -> Unit) = Html(initializer)\n\nclass Html(initializer: Html.() -> Unit) {\n    lateinit var header: Header\n    init {\n        this.initializer()\n    }\n\n    fun header(initializer: Header.() -> Unit) {\n        this.header = Header(initializer)\n    }\n}\n\nclass Header(initializer: Header.() -> Unit) {\n    init {\n        this.initializer()\n    }\n}\n\nhtml {\n    // this@Html\u304c\u898b\u3048\u3066\u3044\u308b\n    header {\n        // this@Header\u3068this@Html\u304c\u898b\u3048\u3066\u3044\u308b\n        header { // legal\n        }\n    }\n}\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u6709\u308a\u306e\u5834\u5408\n@DslMarker\nannotation class HtmlMarker\n\nfun html(initializer: Html.() -> Unit) = Html(initializer)\n\n@HtmlMarker\nclass Html(initializer: Html.() -> Unit) {\n    lateinit var header: Header\n    init {\n        this.initializer()\n    }\n\n    fun header(initializer: Header.() -> Unit) {\n        this.header = Header(initializer)\n    }\n}\n\n@HtmlMarker\nclass Header(initializer: Header.() -> Unit) {\n    init {\n        this.initializer()\n    }\n}\n\nhtml {\n    // this@Html\u304c\u898b\u3048\u3066\u3044\u308b\n    header {\n        // this@Header\u304c\u898b\u3048\u3066\u3044\u308b\n        header { // Html#header()\u304c\u898b\u3048\u306a\u3044\u306e\u3067illegal\n        }\n    }\n}\n\nkotlinx.html repository\u3067\u3082\u4f7f\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\uff0e\n\nCoroutine\n\u30b3\u30eb\u30fc\u30c1\u30f3\u304cKotlin\u306b\u304f\u308b\uff01\n\u3059\u3067\u306b\u72ec\u81ea\u306e\u5b9f\u88c5\u3092\u751f\u307f\u51fa\u3057\u3066\u3044\u308b\u4eba\u3068\u304b\u5c45\u305d\u3046\u3067\u3059\u304c\u6700\u7d42\u7684\u306bstdlib\u306b\u5165\u3063\u3066\u304f\u308b\u3088\u3046\u3067\u3059\uff0e\n\nasync/await\nfun getRestaurant(id: Long) = CompletableFuture.supplyAsync {\n    // \u901a\u4fe1\u304c\u5165\u308b\u51e6\u7406\n}\n\nfun getRestaurantsById(ids: List<Long>) = async<List<Restaurant>> {\n    ids.map { getRestaurant(it) } // \u901a\u4fe1\u3092\u4e26\u5217\u3067\u5b9f\u884c\n            .map { await(it) } // \u901a\u4fe1\u304c\u3059\u3079\u3066\u5b8c\u4e86\u3057\u305f\u3089id\u306b\u5bfe\u5fdc\u3059\u308b\u9806\u306bList\u306b\u7a81\u3063\u8fbc\u3080\n}\n\nfun showRestaurants(ids: List<Long>) = asyncUI {\n    await(getRestaurantsById(ids)).let {\n        setRestaurantsToView(it) // \u975e\u540c\u671f\u3067\u5f85\u6a5f\u3057\u3064\u3064\u7d42\u308f\u3063\u305f\u3089UI\u30b9\u30ec\u30c3\u30c9\u3067View\u3092\u64cd\u4f5c\n    }\n}\n\n\u30a4\u30a4\u306d\uff01\n\nyield\niterable\u306asomething\u306e\u751f\u6210\u3092\u7c21\u5358\u306b\u3057\u3066\u304f\u308c\u308b\u30a4\u30b1\u3066\u308b\u5974\u3067\u3059\uff0e\u898b\u304b\u3051\u4e0a\u7121\u9650\u306e\u3082\u306e\u3082\u4f5c\u308c\u307e\u3059\uff0e\u578b\u304c\u8a31\u3059\u9650\u308a\u6b63\u3057\u3044\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306b\u306a\u308b\u3082\u306e\u3092\u751f\u6210\u3057\u3066\u307f\u307e\u3059\uff0e\nfun fib() = generate<Long> {\n    var acc1 = 0L\n    var acc2 = 1L\n    while (true) {\n        yield(acc1)\n        val tmp = acc1\n        acc1 = acc2\n        acc2 += tmp\n    }\n}\n\n(0 until 10).zip(fib().asIterable())\n// [(0, 0), (1, 1), (2, 1), (3, 2), (4, 3), (5, 5), (6, 8), (7, 13), (8, 21), (9, 34)]\n\n\u3061\u306a\u307f\u306b\u4e0b\u306e\u4f8b\u306f\u6012\u3089\u308c\u307e\u3059\uff0e\nfun fib() = generate<Long> {\n    tailrec fun iter(acc1: Long, acc2: Long) {\n        yield(acc1)\n        iter(acc2, acc1 + acc2)\n    }\n    iter(0L, 1L)\n}\n\n\n\u307e\u3068\u3081\nKotlin\u3092\u66f8\u3044\u3066\u3066\u3067\u304d\u305f\u3089\u826f\u3044\u306a\u3068\u601d\u3063\u3066\u3044\u305f\u3042\u3093\u306a\u6a5f\u80fd\u3084\u3053\u3093\u306a\u6a5f\u80fd\u304c\u76db\u308a\u8fbc\u307e\u308c\u3066\u3066Stable\u306e\u30ea\u30ea\u30fc\u30b9\u304c\u5f85\u3061\u9060\u3057\u3044\u3067\u3059\u306d\uff01\n\n\u53c2\u8003\u306b\u3057\u305f\u3082\u306e\n\nKotlin Blog\nKotlin repository\nkotlinx.coroutines repository\nkotlinx.html repository\n\n\u3053\u306e\u6295\u7a3f\u306f **Retty inc. Advent Calendar** 17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\u6628\u65e5\u306fSatoshi Nishinaka\u6c0f(@satoshi_nishinaka)\u306e[Let's Enjoy PhantomJS](http://qiita.com/satoshi_nishinaka/items/eb78d9a74b35d98dbb4e)\u3067\u3057\u305f\uff0e\n\n\u7686\u3055\u3093\u3053\u3093\u306b\u3061\u306f\uff0eRetty inc.\u306eSakata\u3067\u3059\uff0eKotlin\u306e1.0\u304c[\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f](https://blog.jetbrains.com/kotlin/2016/02/kotlin-1-0-released-pragmatic-language-for-jvm-and-android/)2016\u5e74\u3082\u6b8b\u3059\u3068\u3053\u308d\u3042\u3068\u4e8c\u9031\u9593\u3068\u306a\u308a\u307e\u3057\u305f\uff0e\u5148\u6708\u306e\u672b\uff0cKotlin 1.1\u306e\u4e09\u756a\u76ee\u306e\u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3\u30ea\u30ea\u30fc\u30b9\uff0c1.1-M03\u304c\u3042\u308a\u307e\u3057\u305f\u306d\uff0e\u7686\u3055\u3093\u306f\u3082\u3046\u8a66\u3057\u307e\u3057\u305f\u304b\uff1f\u4eca\u56de\u306f\u3053\u306e1.1-M03\u3068Kotlin 1.1\u306e\u6a5f\u80fd\u306e\u4e00\u3064\u3067\u3042\u308bcoroutine\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\uff0c[kotlinx.coroutines](https://github.com/Kotlin/kotlin-coroutines)\u3092\u5b9f\u969b\u306b\u4f7f\u3044\u306a\u304c\u3089\u305f\u3060\u3067\u3055\u3048\u304b\u308f\u3044\u3044Kotlin\u304c1.1\u3067\u66f4\u306b\u9b45\u529b\u7684\u306b\u306a\u308b\u306e\u3092\u697d\u3057\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\n# \u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306f[Kotlin Blog](https://blog.jetbrains.com/kotlin/)\u3092\u3082\u3068\u306bKotlin1.1-M03\u306e\u6642\u70b9\u3067\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u6a5f\u80fd\u3092\u304b\u3093\u305f\u3093\u306b\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\uff0e\n\n>This is not a stable version of Kotlin, and no compatibility guarantees are given here: in the future previews of 1.1, syntax, APIs, command-line switches and anything else may be changed. If you need a stable version of Kotlin, please stay on 1.0.X until further notice.\n\n[\u5f15\u7528\u5143](https://blog.jetbrains.com/kotlin/2016/07/first-glimpse-of-kotlin-1-1-coroutines-type-aliases-and-more/)\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u5f8c\u3005\u3053\u3053\u3067\u7d39\u4ecb\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f**\u52d5\u304b\u306a\u304f\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e**\u5f15\u7528\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u660e\u8a18\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\n# \u6e96\u5099\n\n\u307e\u305a\u306fIDEA\u3067Kotlin1.1\u3068kotlinx.corutines\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\uff0egradle\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3053\u3093\u306a\u611f\u3058\u306b\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\n\n```groovy:build.gradle\ngroup 'io.github.yusaka39'\nversion '1.0-SNAPSHOT'\n\nbuildscript {\n    ext.kotlin_version = '1.1-M03'\n\n    repositories {\n        mavenCentral()\n        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.1' }\n    }\n    dependencies {\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\n\napply plugin: 'kotlin'\napply plugin: 'application'\n\nmainClassName = 'io.github.yusaka39.demos110.MainKt'\n\nrepositories {\n    mavenCentral()\n    maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.1' }\n    maven { url \"http://dl.bintray.com/kotlin/kotlinx.coroutines\" }\n}\n\ndependencies {\n    compile \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\n    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-generate:0.1-alpha-2'\n    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-async:0.1-alpha-2'\n    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-rx:0.1-alpha-2'\n}\n```\n\n\u307e\u305f\uff0c[Tools] -> [Kotlin] -> [Configure Kotlin Plugin Updates] \u304b\u3089 EAP 1.1 \u3092\u9078\u3093\u3067plugin\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u3066\u304a\u304f\u3068IDE\u306e\u30b5\u30dd\u30fc\u30c8\u304c\u52b9\u3044\u3066\u697d\u3061\u3093\u3067\u3059\uff0e\n\n# \u65b0\u3057\u3044\u6587\u6cd5\n\n\u307e\u305a\u306f\u6587\u6cd5\u30ec\u30d9\u30eb\u3067\u306e\u5909\u66f4\u3092\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\n## \u578b\u30a8\u30a4\u30ea\u30a2\u30b9\n\n\u3044\u308f\u3086\u308b\u578b\u30b7\u30ce\u30cb\u30e0\u3067\u3059\uff0e\u65e2\u5b58\u306e\u578b\u306b\u5225\u540d\u3092\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n```kotlin\ntypealias Point = Pair<Double, Double>\n\nfun square(x: Double) = x * x\nfun calcDistance(from: Point, to: Point): Double {\n    val (fromX, fromY) = from\n    val (toX, toY) = to\n    return Math.sqrt(square(toX - fromX) + square(toY - fromY))\n}\n```\n\n\u4eca\u56de\u306e\u4f8b\u3060\u3068`Point`\u3092\u62e1\u5f35\u3057\u3066\u4e0b\u306e\u3088\u3046\u306b`x`\u3068`y`\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u5ba3\u8a00\u3067\u304d\u307e\u3059\u304c\uff0c\u9069\u5207\u306b\u30b9\u30b3\u30fc\u30d7\u3092\u5207\u3089\u306a\u3044\u3068`Pair<Double, Double>`\u306b\u3082\u5ba3\u8a00\u3055\u308c\u3066(\u3042\u304f\u307e\u3067\u3082\u305f\u3060\u306e\u540c\u7fa9\u8a9e)\u30ad\u30e2\u3044\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\uff0e\n\n```kotlin\nval Point.x: Double\n    get() = this.first\nval Point.y: Double\n    get() = this.second\n\n(0.0 to 0.0).x // legal\n```\n\n## \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30e1\u30f3\u30d0\u53c2\u7167\n\n\u4eca\u307e\u3067\u3082`HogeClass::method`\u3067\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u304c\uff0c`instanceOfHoge::method`\u3067\u30ec\u30b7\u30fc\u30d0\u304c\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\n```kotlin\nval fruits = listOf(\"apple\", \"orange\", \"peach\")\nfruits.filter(\"apple\"::equals) // [\"apple\"]\n```\n\n## \u30ed\u30fc\u30ab\u30eb\u306adelegated property\nclass\u306e\u30e1\u30f3\u30d0\u4ee5\u5916\u306e\u5834\u6240\u3067\u3082delegated property\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0eAndroid\u3063\u307d\u3044\u30b3\u30fc\u30c9\u3067\u5931\u793c\u3057\u307e\u3059\uff0e\n\n```kotlin:HogeActivity.kt\nclass HogeActivity : AppCompatActivity() {\n\n    @Suppress(\"unchecked_cast\")\n    fun <T> bindView(resId: Int) = lazy {\n        this.findViewById(resId) as T\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        this.setContentView(R.layout.hoge)\n        val titleText: TextView by bindView(R.id.titleText)\n        titleText.text = \"hello\"\n    }\n}\n```\n\n\u4eca\u307e\u3067delegate\u3057\u305f\u3044\u304c\u305f\u3081\u306b\u30af\u30e9\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u5ba3\u8a00\u3057\u3066\u3044\u305f\u3082\u306e\u306e\u30b9\u30b3\u30fc\u30d7\u304c\u7d5e\u308c\u3066\u30cf\u30c3\u30d4\u30fc\u306a\u611f\u3058\u3067\u3059\uff0e\n\n## lambda\u3067data\u306a\u5f15\u6570\u3092\u5206\u89e3\n\n\u4eca\u307e\u3067\u3082\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306f\u30ea\u30fc\u30ac\u30eb\u3067\u3057\u305f\uff0e\n\n```kotlin\ndata class Triple<F, S, T>(val first: F, val second: S, val third: T)\n\nfun sum(triple: Triple<Int, Int, Int>): Int {\n    val (f, s, t) = triple\n    return f + s + t\n}\n```\n\n1.1-M03\u3067\u306f\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3082\u8a31\u5bb9\u3055\u308c\u307e\u3059\uff0e\n\n```kotlin\nval lst: List<Triple<Int, Int, Int>> = // Some initialize codes\nlst.map { (f, s, t) -> f + s + t }\n```\n\n## \u5909\u6570\u5ba3\u8a00\u3067\u30a2\u30f3\u30b9\u30b3\n\n\u30c7\u30fc\u30bf\u30af\u30e9\u30b9\u3092\u5206\u89e3\u3057\u305f\u308a\u8907\u6570\u306e\u5f15\u6570\u3092\u53d6\u308blambda\u3092\u4f7f\u3046\u30b1\u30fc\u30b9\u3067\u4f7f\u308f\u306a\u3044\u5909\u6570\u3092golang\u3068\u304b\u3063\u307d\u304f`_`\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\n```kotlin\nval lst: List<Pair<Hoge, Fuga>> = // Some initialize codes\nlst.forEach { (_, fuga) -> doSomethingWithFuga(fuga) }\n\nval (hoge, _) = lst.filterIndexed{ i, _ -> i % 2 == 0 }[0]\n```\n\n:innocent:try-catch\u3067\u3082\u3064\u304b\u3048\u307e\u3059(\u4f7f\u3046\u306e\u304c\u59a5\u5f53\u304b\u3069\u3046\u304b\u306f\u7f6e\u3044\u3068\u3044\u3066):innocent:\n\n```kotlin\ntry {\n    executeQuery(query)\n} catch (_: SqlException) {\n    // Ignore\n}\n```\n\n## \u6570\u5024\u3067\u30a2\u30f3\u30b9\u30b3\n\n\u6570\u5024\u30ea\u30c6\u30e9\u30eb\u306e\u4e2d\u306b\u30a2\u30f3\u30b9\u30b3\u3092\u66f8\u3044\u3066\u6841\u533a\u5207\u308a\u3057\u305f\u308a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\n```\n10_000_000 // legal\n23_57 // legal\n23__57 // legal\n23_57.0 // legal\n23_57f // legal\n0x2_357 // legal\n\n_2357 // illegal\n2357_ // illegal\n```\n\n# stdlib\n\n\u4fbf\u5229\u306a\u5b50\u304c\u5897\u3048\u307e\u3057\u305f\uff0e\n\n## Enum\u5411\u3051\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u95a2\u6570\n\nreified\u306a\u578b\u5909\u6570\u304b\u3089enum\u306evalue\u3084values\u3092\u53d6\u3063\u3066\u3053\u308c\u308b\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u95a2\u6570\n`enumValues()`\uff0c`enumValueOf()`\u304c\u751f\u3048\u307e\u3057\u305f\uff0e\n\n## DSL\u958b\u767a\u7528\u306b\u30b9\u30b3\u30fc\u30d7\u3092\u30bf\u30a4\u30c8\u306b\u3059\u308b\u3084\u3064\n\n\u4eca\u307e\u3067\u306f\u6b21\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u304c\u8d77\u3053\u308a\u3046\u308b\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\n\n```kotlin\ntable {\n  tr {\n    tr {} // PROBLEM: Table.tr() is valid here\n  }\n}\n```\n[\u30b3\u30fc\u30c9\u5f15\u7528\u5143](https://blog.jetbrains.com/kotlin/2016/11/kotlin-1-1-m03-is-here/)\n\n\u3053\u308c\u306fhtml\u30d3\u30eb\u30c0\u306e\u4f8b\u3067\u3059\u304c\uff0c`tr`(outer)\u306e\u4e2d\u306b`tr`(inner)\u306f\u5165\u3063\u3066\u307b\u3057\u304f\u306a\u3044\u304c`tr`(outer)\u304b\u3089`table`\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u304c\u898b\u3048\u3066\u3057\u307e\u3046\u305f\u3081\uff0cKotlin\u306e\u6587\u6cd5\u7684\u306b\u5408\u6cd5\u306b`tr`(inner)\u304c\u547c\u3073\u51fa\u305b\u3066\u3057\u307e\u3044\u307e\u3059\uff0e\u3053\u308c\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b`@DslMarker`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\uff0e\u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u6ce8\u91c8\u3055\u308c\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u6ce8\u91c8\u3055\u308c\u305f\u30af\u30e9\u30b9\u304b\u3089\u540c\u3058\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u3064\u3044\u3066\u3044\u308b\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u304c\u898b\u3048\u306a\u304f\u306a\u308a\u307e\u3059\uff0e~~\u81ea\u5206\u3067\u66f8\u3044\u3066\u3066\u8a33\u304c\u308f\u304b\u3089\u306a\u304f\u306a\u3063\u3066\u304d\u305f\uff0e~~\u7c21\u5358\u306ahtml\u30d3\u30eb\u30c0\u306e\u4f8b\u3092\u793a\u3057\u307e\u3059\uff0e\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306a\u3057\u306e\u5834\u5408\n\n```kotlin\nfun html(initializer: Html.() -> Unit) = Html(initializer)\n\nclass Html(initializer: Html.() -> Unit) {\n    lateinit var header: Header\n    init {\n        this.initializer()\n    }\n\n    fun header(initializer: Header.() -> Unit) {\n        this.header = Header(initializer)\n    }\n}\n\nclass Header(initializer: Header.() -> Unit) {\n    init {\n        this.initializer()\n    }\n}\n\nhtml {\n    // this@Html\u304c\u898b\u3048\u3066\u3044\u308b\n    header {\n        // this@Header\u3068this@Html\u304c\u898b\u3048\u3066\u3044\u308b\n        header { // legal\n        }\n    }\n}\n```\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u6709\u308a\u306e\u5834\u5408\n\n```kotlin\n@DslMarker\nannotation class HtmlMarker\n\nfun html(initializer: Html.() -> Unit) = Html(initializer)\n\n@HtmlMarker\nclass Html(initializer: Html.() -> Unit) {\n    lateinit var header: Header\n    init {\n        this.initializer()\n    }\n\n    fun header(initializer: Header.() -> Unit) {\n        this.header = Header(initializer)\n    }\n}\n\n@HtmlMarker\nclass Header(initializer: Header.() -> Unit) {\n    init {\n        this.initializer()\n    }\n}\n\nhtml {\n    // this@Html\u304c\u898b\u3048\u3066\u3044\u308b\n    header {\n        // this@Header\u304c\u898b\u3048\u3066\u3044\u308b\n        header { // Html#header()\u304c\u898b\u3048\u306a\u3044\u306e\u3067illegal\n        }\n    }\n}\n```\n\n[kotlinx.html repository](https://github.com/Kotlin/kotlinx.html)\u3067\u3082\u4f7f\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\uff0e\n\n# Coroutine\n\n\u30b3\u30eb\u30fc\u30c1\u30f3\u304cKotlin\u306b\u304f\u308b\uff01\n\n\u3059\u3067\u306b\u72ec\u81ea\u306e\u5b9f\u88c5\u3092\u751f\u307f\u51fa\u3057\u3066\u3044\u308b\u4eba\u3068\u304b\u5c45\u305d\u3046\u3067\u3059\u304c\u6700\u7d42\u7684\u306bstdlib\u306b\u5165\u3063\u3066\u304f\u308b\u3088\u3046\u3067\u3059\uff0e\n\n## async/await\n\n```kotlin\nfun getRestaurant(id: Long) = CompletableFuture.supplyAsync {\n    // \u901a\u4fe1\u304c\u5165\u308b\u51e6\u7406\n}\n\nfun getRestaurantsById(ids: List<Long>) = async<List<Restaurant>> {\n    ids.map { getRestaurant(it) } // \u901a\u4fe1\u3092\u4e26\u5217\u3067\u5b9f\u884c\n            .map { await(it) } // \u901a\u4fe1\u304c\u3059\u3079\u3066\u5b8c\u4e86\u3057\u305f\u3089id\u306b\u5bfe\u5fdc\u3059\u308b\u9806\u306bList\u306b\u7a81\u3063\u8fbc\u3080\n}\n\nfun showRestaurants(ids: List<Long>) = asyncUI {\n    await(getRestaurantsById(ids)).let {\n        setRestaurantsToView(it) // \u975e\u540c\u671f\u3067\u5f85\u6a5f\u3057\u3064\u3064\u7d42\u308f\u3063\u305f\u3089UI\u30b9\u30ec\u30c3\u30c9\u3067View\u3092\u64cd\u4f5c\n    }\n}\n```\n\n\u30a4\u30a4\u306d\uff01\n\n## yield\niterable\u306asomething\u306e\u751f\u6210\u3092\u7c21\u5358\u306b\u3057\u3066\u304f\u308c\u308b\u30a4\u30b1\u3066\u308b\u5974\u3067\u3059\uff0e\u898b\u304b\u3051\u4e0a\u7121\u9650\u306e\u3082\u306e\u3082\u4f5c\u308c\u307e\u3059\uff0e\u578b\u304c\u8a31\u3059\u9650\u308a\u6b63\u3057\u3044\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306b\u306a\u308b\u3082\u306e\u3092\u751f\u6210\u3057\u3066\u307f\u307e\u3059\uff0e\n\n```kotlin\nfun fib() = generate<Long> {\n    var acc1 = 0L\n    var acc2 = 1L\n    while (true) {\n        yield(acc1)\n        val tmp = acc1\n        acc1 = acc2\n        acc2 += tmp\n    }\n}\n\n(0 until 10).zip(fib().asIterable())\n// [(0, 0), (1, 1), (2, 1), (3, 2), (4, 3), (5, 5), (6, 8), (7, 13), (8, 21), (9, 34)]\n```\n\n\u3061\u306a\u307f\u306b\u4e0b\u306e\u4f8b\u306f\u6012\u3089\u308c\u307e\u3059\uff0e\n\n```kotlin\nfun fib() = generate<Long> {\n    tailrec fun iter(acc1: Long, acc2: Long) {\n        yield(acc1)\n        iter(acc2, acc1 + acc2)\n    }\n    iter(0L, 1L)\n}\n```\n\n# \u307e\u3068\u3081\n\nKotlin\u3092\u66f8\u3044\u3066\u3066\u3067\u304d\u305f\u3089\u826f\u3044\u306a\u3068\u601d\u3063\u3066\u3044\u305f\u3042\u3093\u306a\u6a5f\u80fd\u3084\u3053\u3093\u306a\u6a5f\u80fd\u304c\u76db\u308a\u8fbc\u307e\u308c\u3066\u3066Stable\u306e\u30ea\u30ea\u30fc\u30b9\u304c\u5f85\u3061\u9060\u3057\u3044\u3067\u3059\u306d\uff01\n\n# \u53c2\u8003\u306b\u3057\u305f\u3082\u306e\n- [Kotlin Blog](https://blog.jetbrains.com/kotlin/)\n- [Kotlin repository](https://github.com/JetBrains/kotlin)\n- [kotlinx.coroutines repository](https://github.com/Kotlin/kotlinx.coroutines)\n- [kotlinx.html repository](https://github.com/Kotlin/kotlinx.html)\n", "tags": ["Kotlin"]}