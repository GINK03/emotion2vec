{"context": " More than 1 year has passed since last update.\n\n2014/03/31 \u8ffd\u8a18\n\u5b89\u6613\u306b\u66f8\u3044\u3066\u307e\u3057\u305f\u304c\u3053\u306e\u65b9\u6cd5\u306f\u5b9f\u7528\u30ec\u30d9\u30eb\u306b\u9054\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u7406\u7531\u306fS3\u3067\u306f\u7d50\u679c\u6574\u5408\u6027\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\u3053\u306e\u70b9\u306f\u3061\u3087\u3063\u3068\u53e4\u3044\u8a18\u4e8b\u3067\u3059\u304cDevelopers.IO\u3055\u3093\u306e\u8a18\u4e8b\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\nhttp://dev.classmethod.jp/cloud/amazon-s3-eventually-consistent-and-consistent-read/\n\u3064\u307e\u308a\u3001\u30b7\u30fc\u30b1\u30f3\u30b9\u756a\u53f7\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u591a\u6570\u306e\u30a2\u30af\u30bb\u30b9\u3067\u8aad\u307f\u8fbc\u307f\u307e\u304f\u308b\u3068\u3001\n\u305f\u307e\u30fc\u306b\u66f4\u65b0\u524d\u306e\u756a\u53f7\u304c\u53d6\u308c\u3066\u3057\u307e\u3046\u30b1\u30fc\u30b9\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u4e8b\u3067\u3059\u3002\n\u3088\u3063\u3066\u3053\u306e\u65b9\u6cd5\u306f\u3086\u308b\u30fc\u304f\u8a00\u3048\u3070\u30a2\u30af\u30bb\u30b9\u6570\u304c\u3081\u3061\u3083\u3081\u3061\u3083\u5c11\u306a\u3044\u3068\u304b\u3001\n\u305f\u307e\u30fc\u306b\u9055\u3063\u3061\u3083\u3046\u304f\u3089\u3044\u4ed6\u306e\u51e6\u7406\u3067\u691c\u77e5\u3057\u3066\u30ea\u30c8\u30e9\u30a4\u3059\u3093\u305c\u30fc\n\u3063\u3066\u5834\u5408\u306e\u307f\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ed6\u306b\u4f55\u304b\u65b9\u6cd5\u306f\u306a\u3044\u304b\uff01\uff1f\u3063\u3066\u65b9\u306f\u5225\u8a18\u4e8b\n(DynamoDB\u3067SEQUENCE)[http://qiita.com/supertaihei02/items/a3cf7b374ea5699f32e3]\n\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u76ee\u7684\nS3\u4e0a\u306e\u3042\u308b\u30d5\u30a1\u30a4\u30eb\u3067DB\u306eSEQUENCE\u7684\u306b\u4e00\u610f\u306enumber\u3092\u7ba1\u7406\u3057\u305f\u3044\u3093\u3060\uff01\n\u4f1a\u54e1\u60c5\u5831\u3068\u304bS3\u3067\u7ba1\u7406\u3057\u3066\u30e9\u30f3\u30cb\u30f3\u30b0\u30b3\u30b9\u30c8\u3092\u4e0b\u3052\u305f\u3044\u3093\u3060\u30fc\uff01\n\n\u3084\u3063\u3066\u307f\u305f\n\u6392\u4ed6\u30ed\u30c3\u30af\u304b\u3051\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3088\u306d\u30fc\u3068\u3044\u3046\u4e8b\u3067\u3001\u4ee5\u4e0b\u306a\u611f\u3058\u3067\u3084\u3063\u3066\u307f\u305f\n1.registerStreamWrapper\u3059\u308b\n2.\u8aad\u307f\u66f8\u304d\u30e2\u30fc\u30c9(r+)\u3067fopen\u3059\u308b\n3.\u6392\u4ed6\u30e2\u30fc\u30c9(LOCK_EX)\u3067flock\u3059\u308b\n4.\u73fe\u5728\u306e\u5024\u3092fread\u3057\u3066\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u3066ftruncate\u3057\u3066fwrite\n5.lock\u89e3\u9664\u3057\u3066fclose\n\n\u3058\u3047\u3058\u3047\u3058\u3047\n\nWarning: The Amazon S3 stream wrapper does not allow simultaneous reading and writing. >Mode not supported: r+. Use one 'r', 'w', 'a', or 'x'. in phar:///var/www/html/hihin/htdocs/flmodule/core/aws/aws.phar/Aws/S3/StreamWrapper.php on  line 701\n\n\u306a\u3093\u30fb\u30fb\u30fb\u3060\u3068\u30fb\u30fb\u30fb\uff1f\n\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u30a2\u30f3\u30c9\u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\u30cf\u30ad\u30e7\u30ab\u30b5\u30ec\u30c6\u30de\u30bb\u30f3\u30ce\u30c7\u30b9\u30ab\u30fc\uff01\n\u30de\u30cb\u30e5\u30a2\u30eb\n\nYou can upload larger files by streaming data using fopen() and a \"w\", \"x\", or \"a\" stream >access mode. The Amazon S3 stream wrapper does not support simultaneous read and write >streams (e.g. \"r+\", \"w+\", etc). This is because the HTTP protocol does not allow >simultaneous reading and writing.\n\n\u305d\u3082\u305d\u3082flock\u3067\u304d\u308b\u306e\u304b\u8a66\u3057\u3066\u307f\u308b\u3068\n\nWarning: flock(): Aws\\S3\\StreamWrapper::stream_lock is not implemented!\n\nOh my god...\n\u3068\u3044\u3046\u308f\u3051\u3067\u30fb\u30fb\u30fb\n\n\u5b9f\u88c5\u958b\u59cb\n\u305d\u306e\u6614Perl\u754c\u9688\u3067\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u305frename\u65b9\u5f0f\u3068\u3044\u3046\u3082\u306e\u3092\u5fdc\u7528\u3057\u307e\u3059\u3002\n\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n1.\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u306b\u73fe\u5728\u6642\u9593\u60c5\u5831\u3092\u3064\u3051\u3066\u30ea\u30cd\u30fc\u30e0\n1-1.\u5931\u6557\u3057\u305f\u5834\u5408\uff08\u30ed\u30c3\u30af\u4e2d\uff09wait&timeout\u51e6\u7406\n2.\u8aad\u307f\u8fbc\u3080\n3.\u66f8\u304d\u8fbc\u3080\n4.\u5143\u306e\u540d\u524d\u306b\u30ea\u30cd\u30fc\u30e0\n\nrequire(dirname(__FILE__).'/aws.phar'); // load aws.phar\nuse Aws\\Common\\Aws;\nuse Aws\\Common\\Enum\\Region;\nuse Aws\\S3\\Exception\\S3Exception;\n\n$accesskey = 'Your AWS Access Key'; // TODO\n$secret = 'Your AWS Access Secret'; // TODO\n$bucket = 'Your Bucket Name'; // TODO\n$key = '/path/to/filedir/filename.txt'; // TODO\n$unlocktime = 10; // TODO(sec)\n$waittime = 1; // TODO(sec)\n$retry = 5; // TODO\n\n$sdir = 's3://'.$bucket.$dir;\n$skey = $sdir.$lockfile;\n\n$aws = AWS::factory(array(\n    'key' => $accesskey,\n    'secret' => $secret,\n    'certificate_authority' => false,\n    'region' => Region::AP_NORTHEAST_1\n));\n$client = $aws->get('s3');\n$client->registerStreamWrapper();\n\n$skey = 's3://'.$bucket.$key;\n$sdir = dirname($skey);\n$lockfile = basename($key);\n$current = '';\n$fail = false;\n// lock\nfor($i=0;$i<$retry;$i++) {\n    echo \"lock try \".($i + 1).\"<br/>\";\n    try {\n        if (rename($skey, $current = $skey.time())) {\n            echo \"Get lock<br/>\";\n            $fail = true;\n            break;\n        } else {\n            echo \"Rename error<br/>\";\n        }\n    } catch(S3Exception $e) {\n        echo \"Locked check start<br/>\";\n    }\n    sleep($waittime);\n}\n\nif (!$fail && $handle = opendir($sdir)) {\n    // \u30ed\u30c3\u30af\u30d5\u30a1\u30a4\u30eb\u3092\u691c\u7d22\n    while (($file = readdir($handle)) !== false) {\n        // \u30ed\u30c3\u30af\u30d5\u30a1\u30a4\u30eb + \u6642\u9593 \u306e\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u305f\u5834\u5408\n        if (preg_match('/^'.$lockfile.'([0-9]+)$', $file)) {\n            // \u30ed\u30c3\u30af\u30d5\u30a1\u30a4\u30eb\u306e\u6642\u9593\u3092\u53d6\u5f97\n            $time = preg_replace('/^'.$lockfile.'/', '', $file);\n            // \u671f\u9650\u5207\u308c\u306a\u3089\u30ed\u30c3\u30af\u89e3\u9664\n            if (time() - $time > $unlocktime) {\n                echo \"Destruction lock<br/>\";\n                rename($sdir.$file, $current = $skey.time());\n            } else {\n                die(\"Process busy<br/>\");\n            }\n            break;\n        }\n    }\n    closedir($handle);\n}\n// read.\nif ($fp = fopen($current, 'r')) {\n    $seq = intval(fgets($fp), 0);\n    echo \"Now sequence:\".$seq.\"<br/>\";\n    fclose($fp);\n    // write.\n    if ($fp = fopen($current, 'w')) {\n        $next = $seq+1;\n        fputs($fp, $next);\n        echo \"Next sequence:\".$next.\"<br/>\";\n        fclose($fp);\n    }\n}\n\n// unlock\ntry {\n    if(rename($current, $skey)) {\n        echo \"Unlock<br/>\";\n    } else {\n        echo \"Unlock failed<br/>\";\n    }\n} catch(S3Exception $e) {\n    echo \"Unlock failed<br/>\";\n}\n\n\n\u3053\u308c\u3067\u6392\u4ed6\u30ed\u30c3\u30af\u3067\u304d\u307e\u3057\u305f\u3068\u3055\u3002\n\u6642\u9593\u3092\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u4ed8\u52a0\u3059\u308b\u90e8\u5206\u306fS3\u306emetadata\u3092\u4f7f\u3063\u3066\u30b9\u30de\u30fc\u30c8\u306b\u3067\u304d\u306a\u3044\u304b\u3068\u8abf\u67fb\u3057\u3066\u307f\u305f\u3093\u3060\u3051\u3069\u3001\n\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u76f4\u3059\u5fc5\u8981\u304c\u3042\u308b\uff08Body\u3092NULL\u306b\u3057\u3066\u306eput\u306f\u30a8\u30e9\u30fc\uff09\u4e8b\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u3084\u3080\u306a\u304f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\ngithub\u306bS3\u7528\u306e\u72ec\u81ea\u30e9\u30c3\u30d1\u30fc\u3092\u7f6e\u3044\u3066\u307e\u3059\u3002\naws_s3wrapper.php\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u4ee5\u4e0b\u306e\u69d8\u306b\u7c21\u5358\u306b\u30ed\u30c3\u30af\u304c\u53d6\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n$s3 = S3::getInstance();\n$lockfile = 's3://bucketname/path/to/filedir/filename.txt';\n// lock\n$lockedfile = $s3->lock($lockfile);\n// unlock\n$s3->unlock($lockfile, $lockedfile)\n\n\n\u4ee5\u4e0a\n## 2014/03/31 \u8ffd\u8a18\n\u5b89\u6613\u306b\u66f8\u3044\u3066\u307e\u3057\u305f\u304c\u3053\u306e\u65b9\u6cd5\u306f\u5b9f\u7528\u30ec\u30d9\u30eb\u306b\u9054\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u7406\u7531\u306fS3\u3067\u306f\u7d50\u679c\u6574\u5408\u6027\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\u3053\u306e\u70b9\u306f\u3061\u3087\u3063\u3068\u53e4\u3044\u8a18\u4e8b\u3067\u3059\u304cDevelopers.IO\u3055\u3093\u306e\u8a18\u4e8b\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\nhttp://dev.classmethod.jp/cloud/amazon-s3-eventually-consistent-and-consistent-read/\n\n\u3064\u307e\u308a\u3001\u30b7\u30fc\u30b1\u30f3\u30b9\u756a\u53f7\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u591a\u6570\u306e\u30a2\u30af\u30bb\u30b9\u3067\u8aad\u307f\u8fbc\u307f\u307e\u304f\u308b\u3068\u3001\n\u305f\u307e\u30fc\u306b\u66f4\u65b0\u524d\u306e\u756a\u53f7\u304c\u53d6\u308c\u3066\u3057\u307e\u3046\u30b1\u30fc\u30b9\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u4e8b\u3067\u3059\u3002\n\u3088\u3063\u3066\u3053\u306e\u65b9\u6cd5\u306f\u3086\u308b\u30fc\u304f\u8a00\u3048\u3070\u30a2\u30af\u30bb\u30b9\u6570\u304c\u3081\u3061\u3083\u3081\u3061\u3083\u5c11\u306a\u3044\u3068\u304b\u3001\n\u305f\u307e\u30fc\u306b\u9055\u3063\u3061\u3083\u3046\u304f\u3089\u3044\u4ed6\u306e\u51e6\u7406\u3067\u691c\u77e5\u3057\u3066\u30ea\u30c8\u30e9\u30a4\u3059\u3093\u305c\u30fc\n\u3063\u3066\u5834\u5408\u306e\u307f\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ed6\u306b\u4f55\u304b\u65b9\u6cd5\u306f\u306a\u3044\u304b\uff01\uff1f\u3063\u3066\u65b9\u306f\u5225\u8a18\u4e8b\n(DynamoDB\u3067SEQUENCE)[http://qiita.com/supertaihei02/items/a3cf7b374ea5699f32e3]\n\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\n## \u76ee\u7684\nS3\u4e0a\u306e\u3042\u308b\u30d5\u30a1\u30a4\u30eb\u3067DB\u306eSEQUENCE\u7684\u306b\u4e00\u610f\u306enumber\u3092\u7ba1\u7406\u3057\u305f\u3044\u3093\u3060\uff01\n\u4f1a\u54e1\u60c5\u5831\u3068\u304bS3\u3067\u7ba1\u7406\u3057\u3066\u30e9\u30f3\u30cb\u30f3\u30b0\u30b3\u30b9\u30c8\u3092\u4e0b\u3052\u305f\u3044\u3093\u3060\u30fc\uff01\n\n## \u3084\u3063\u3066\u307f\u305f\n\u6392\u4ed6\u30ed\u30c3\u30af\u304b\u3051\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3088\u306d\u30fc\u3068\u3044\u3046\u4e8b\u3067\u3001\u4ee5\u4e0b\u306a\u611f\u3058\u3067\u3084\u3063\u3066\u307f\u305f\n1.registerStreamWrapper\u3059\u308b\n2.\u8aad\u307f\u66f8\u304d\u30e2\u30fc\u30c9(r+)\u3067fopen\u3059\u308b\n3.\u6392\u4ed6\u30e2\u30fc\u30c9(LOCK_EX)\u3067flock\u3059\u308b\n4.\u73fe\u5728\u306e\u5024\u3092fread\u3057\u3066\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u3066ftruncate\u3057\u3066fwrite\n5.lock\u89e3\u9664\u3057\u3066fclose\n\n## \u3058\u3047\u3058\u3047\u3058\u3047\n>Warning: The Amazon S3 stream wrapper does not allow simultaneous reading and writing. >Mode not supported: r+. Use one 'r', 'w', 'a', or 'x'. in phar:///var/www/html/hihin/htdocs/flmodule/core/aws/aws.phar/Aws/S3/StreamWrapper.php on  line 701\n\n\u306a\u3093\u30fb\u30fb\u30fb\u3060\u3068\u30fb\u30fb\u30fb\uff1f\n\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u30a2\u30f3\u30c9\u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\u30cf\u30ad\u30e7\u30ab\u30b5\u30ec\u30c6\u30de\u30bb\u30f3\u30ce\u30c7\u30b9\u30ab\u30fc\uff01\n[\u30de\u30cb\u30e5\u30a2\u30eb](http://docs.aws.amazon.com/aws-sdk-php/guide/latest/feature-s3-stream-wrapper.html)\n>You can upload larger files by streaming data using fopen() and a \"w\", \"x\", or \"a\" stream >access mode. The Amazon S3 stream wrapper does not support simultaneous read and write >streams (e.g. \"r+\", \"w+\", etc). This is because the HTTP protocol does not allow >simultaneous reading and writing.\n\n\u305d\u3082\u305d\u3082flock\u3067\u304d\u308b\u306e\u304b\u8a66\u3057\u3066\u307f\u308b\u3068\n>Warning: flock(): Aws\\S3\\StreamWrapper::stream_lock is not implemented!\n\nOh my god...\n\u3068\u3044\u3046\u308f\u3051\u3067\u30fb\u30fb\u30fb\n\n### \u5b9f\u88c5\u958b\u59cb\n\n\u305d\u306e\u6614Perl\u754c\u9688\u3067\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u305frename\u65b9\u5f0f\u3068\u3044\u3046\u3082\u306e\u3092\u5fdc\u7528\u3057\u307e\u3059\u3002\n\u624b\u9806\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n1.\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u306b\u73fe\u5728\u6642\u9593\u60c5\u5831\u3092\u3064\u3051\u3066\u30ea\u30cd\u30fc\u30e0\n1-1.\u5931\u6557\u3057\u305f\u5834\u5408\uff08\u30ed\u30c3\u30af\u4e2d\uff09wait&timeout\u51e6\u7406\n2.\u8aad\u307f\u8fbc\u3080\n3.\u66f8\u304d\u8fbc\u3080\n4.\u5143\u306e\u540d\u524d\u306b\u30ea\u30cd\u30fc\u30e0\n\n```php\n\nrequire(dirname(__FILE__).'/aws.phar'); // load aws.phar\nuse Aws\\Common\\Aws;\nuse Aws\\Common\\Enum\\Region;\nuse Aws\\S3\\Exception\\S3Exception;\n\n$accesskey = 'Your AWS Access Key'; // TODO\n$secret = 'Your AWS Access Secret'; // TODO\n$bucket = 'Your Bucket Name'; // TODO\n$key = '/path/to/filedir/filename.txt'; // TODO\n$unlocktime = 10; // TODO(sec)\n$waittime = 1; // TODO(sec)\n$retry = 5; // TODO\n\n$sdir = 's3://'.$bucket.$dir;\n$skey = $sdir.$lockfile;\n\n$aws = AWS::factory(array(\n    'key' => $accesskey,\n    'secret' => $secret,\n    'certificate_authority' => false,\n    'region' => Region::AP_NORTHEAST_1\n));\n$client = $aws->get('s3');\n$client->registerStreamWrapper();\n\n$skey = 's3://'.$bucket.$key;\n$sdir = dirname($skey);\n$lockfile = basename($key);\n$current = '';\n$fail = false;\n// lock\nfor($i=0;$i<$retry;$i++) {\n    echo \"lock try \".($i + 1).\"<br/>\";\n    try {\n        if (rename($skey, $current = $skey.time())) {\n            echo \"Get lock<br/>\";\n            $fail = true;\n            break;\n        } else {\n            echo \"Rename error<br/>\";\n        }\n    } catch(S3Exception $e) {\n        echo \"Locked check start<br/>\";\n    }\n    sleep($waittime);\n}\n\nif (!$fail && $handle = opendir($sdir)) {\n    // \u30ed\u30c3\u30af\u30d5\u30a1\u30a4\u30eb\u3092\u691c\u7d22\n    while (($file = readdir($handle)) !== false) {\n        // \u30ed\u30c3\u30af\u30d5\u30a1\u30a4\u30eb + \u6642\u9593 \u306e\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u305f\u5834\u5408\n        if (preg_match('/^'.$lockfile.'([0-9]+)$', $file)) {\n            // \u30ed\u30c3\u30af\u30d5\u30a1\u30a4\u30eb\u306e\u6642\u9593\u3092\u53d6\u5f97\n            $time = preg_replace('/^'.$lockfile.'/', '', $file);\n            // \u671f\u9650\u5207\u308c\u306a\u3089\u30ed\u30c3\u30af\u89e3\u9664\n            if (time() - $time > $unlocktime) {\n                echo \"Destruction lock<br/>\";\n                rename($sdir.$file, $current = $skey.time());\n            } else {\n                die(\"Process busy<br/>\");\n            }\n            break;\n        }\n    }\n    closedir($handle);\n}\n// read.\nif ($fp = fopen($current, 'r')) {\n    $seq = intval(fgets($fp), 0);\n    echo \"Now sequence:\".$seq.\"<br/>\";\n    fclose($fp);\n    // write.\n    if ($fp = fopen($current, 'w')) {\n        $next = $seq+1;\n        fputs($fp, $next);\n        echo \"Next sequence:\".$next.\"<br/>\";\n        fclose($fp);\n    }\n}\n\n// unlock\ntry {\n    if(rename($current, $skey)) {\n        echo \"Unlock<br/>\";\n    } else {\n        echo \"Unlock failed<br/>\";\n    }\n} catch(S3Exception $e) {\n    echo \"Unlock failed<br/>\";\n}\n\n```\n\n\u3053\u308c\u3067\u6392\u4ed6\u30ed\u30c3\u30af\u3067\u304d\u307e\u3057\u305f\u3068\u3055\u3002\n\u6642\u9593\u3092\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u4ed8\u52a0\u3059\u308b\u90e8\u5206\u306fS3\u306emetadata\u3092\u4f7f\u3063\u3066\u30b9\u30de\u30fc\u30c8\u306b\u3067\u304d\u306a\u3044\u304b\u3068\u8abf\u67fb\u3057\u3066\u307f\u305f\u3093\u3060\u3051\u3069\u3001\n\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u76f4\u3059\u5fc5\u8981\u304c\u3042\u308b\uff08Body\u3092NULL\u306b\u3057\u3066\u306eput\u306f\u30a8\u30e9\u30fc\uff09\u4e8b\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u3084\u3080\u306a\u304f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\ngithub\u306bS3\u7528\u306e\u72ec\u81ea\u30e9\u30c3\u30d1\u30fc\u3092\u7f6e\u3044\u3066\u307e\u3059\u3002\n[aws_s3wrapper.php](https://github.com/supertaihei02/aws_s3wrapper.php)\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u4ee5\u4e0b\u306e\u69d8\u306b\u7c21\u5358\u306b\u30ed\u30c3\u30af\u304c\u53d6\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```php\n\n$s3 = S3::getInstance();\n$lockfile = 's3://bucketname/path/to/filedir/filename.txt';\n// lock\n$lockedfile = $s3->lock($lockfile);\n// unlock\n$s3->unlock($lockfile, $lockedfile)\n\n```\n\n\u4ee5\u4e0a\n", "tags": ["S3", "PHP"]}