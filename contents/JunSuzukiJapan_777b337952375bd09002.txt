{"tags": ["Scala", "PlayFramework", "SecureSocial", "Twitter"], "context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nScala+Play+SecureSocial\u3067Twitter\u306b\u30ed\u30b0\u30a4\u30f3\u8a8d\u8a3c\u3057\u3066\u30e6\u30fc\u30b6\u540d\u3068\u30a2\u30d0\u30bf\u30fc\u3092\u8868\u793a\u3059\u308b\u30e1\u30e2\u306e\u30b3\u30fc\u30c9\u306b\u4fee\u6b63\u3092\u52a0\u3048\u3066\u3001Twitter\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u4fee\u6b63\u7b87\u6240\n\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u3001Twitter4j\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u3044\u307e\u3059\u3002\n\nbuild.sbt\n\nbuild.sbt\nimport com.github.play2war.plugin._\n\n\nname := \"play221ss214SNSLogin\"\n\nversion := \"1.0-SNAPSHOT\"\n\nscalaVersion := \"2.11.1\"\n\nlibraryDependencies ++= Seq(\n  jdbc,\n  anorm,\n  cache,\n  \"mysql\" % \"mysql-connector-java\" % \"5.1.18\",\n  \"ws.securesocial\" %% \"securesocial\" % \"2.1.4\",\n   \"org.twitter4j\" % \"twitter4j-core\" % \"4.0.1\"\n)     \n\nplay.Project.playScalaSettings\n\nPlay2WarPlugin.play2WarSettings\n\nPlay2WarKeys.servletVersion := \"3.0\"\n\n\n\n\u4fee\u6b63\u306f\uff11\u884c\u3060\u3051\u3067\u3059\u304c\u3001\u305d\u3093\u306a\u306b\u9577\u304f\u306a\u3044\u306e\u3067\u5168\u90e8\u63b2\u8f09\u3002\n\n\nApplication.scala\n\napp/controllers/Application.scala\npackage controllers\n\nimport play.api._\nimport play.api.mvc._\nimport play.Play\nimport securesocial.core._\n\n\nimport twitter4j.auth.AccessToken\nimport twitter4j.TwitterFactory\nimport twitter4j.TwitterResponse\nimport twitter4j.ResponseList\nimport twitter4j.Status\nimport scala.collection.JavaConversions._\n\n\nobject Application extends securesocial.core.SecureSocial {\n  val twitter = {\n    val tw = TwitterFactory.getSingleton\n    val consumer_key = Play.application().configuration().getString(\"securesocial.twitter.consumerKey\")\n    val consumer_secret = Play.application().configuration().getString(\"securesocial.twitter.consumerSecret\")\n    tw.setOAuthConsumer(consumer_key, consumer_secret)\n    tw\n  }\n\n\n  def index = SecuredAction { implicit request =>\n    // \u3053\u3053\u306b\u304f\u308b\u6642\u70b9\u3067fullName\u3084\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u53d6\u5f97\u6e08\u307f\n    val name = request.user.fullName\n    val provider = request.user.identityId.providerId\n\n    val oAuth2Info:Option[OAuth2Info] = request.user.oAuth2Info\n    var token = \"\"\n    var tokenType: Option[String] = None\n    var expiresIn: Option[Int] = None\n    var refreshToken: Option[String] = None\n    oAuth2Info match {\n      case Some(info) => {\n        token = info.accessToken\n        tokenType = info.tokenType\n        expiresIn = info.expiresIn\n        refreshToken = info.refreshToken \n      }\n      case None => println(\"oAuth2Info == None\")\n    }\n\n    var timeline: ResponseList[twitter4j.Status] = null\n    val oAuth1Info:Option[OAuth1Info] = request.user.oAuth1Info\n    oAuth1Info match {\n      case Some(info) => {\n        token = info.token\n        val secret = info.secret\n\n        val ac = new AccessToken(token, secret)\n        twitter.setOAuthAccessToken(ac)\n        timeline = twitter.getUserTimeline\n      }\n      case None => ()\n    }\n\n    Ok(views.html.index(name, provider, request.user.avatarUrl, timeline))\n  }\n\n  def page = UserAwareAction { implicit request =>\n    val userName = request.user match {\n      case Some(user) => user.fullName\n      case _ => \"guest\"\n    }\n    Ok(\"Hello %s\".format(userName))\n  }\n\n}\n\n\n\nindex.scala.html\n\napp/views/index.scala.html\n@(user: String, provider: String, avatarUrl: Option[String], timeline: twitter4j.ResponseList[twitter4j.Status])(implicit request: RequestHeader, lang: Lang)\n\n@import helper._\n@import securesocial.core.Registry\n@import securesocial.core.AuthenticationMethod._\n@import securesocial.core.providers.UsernamePasswordProvider.UsernamePassword\n\n\n@main(\"Welcome\") {\n  <div class=\"page-header\">\n    <h1>Welcome!</h1>\n  </div>\n\n    Welcome @(user) at @(provider)!\n\n    @avatarUrl match {\n        case Some(url) => { <image src=\"@url\" /> }\n        case None => {}\n    }\n    <p>\n    <ul>\n    @for(tweet <- timeline){\n        <li><p>@tweet.getText</p></li>\n    }\n    </ul>\n    </P>\n\n    <p>\n        <a href=\"/logout\">Logout</a>\n    </p>\n\n}\n\n\n\n## \u306f\u3058\u3081\u306b\n\n[Scala+Play+SecureSocial\u3067Twitter\u306b\u30ed\u30b0\u30a4\u30f3\u8a8d\u8a3c\u3057\u3066\u30e6\u30fc\u30b6\u540d\u3068\u30a2\u30d0\u30bf\u30fc\u3092\u8868\u793a\u3059\u308b\u30e1\u30e2](http://qiita.com/JunSuzukiJapan@github/items/ff0412617b0e99a6166f)\u306e\u30b3\u30fc\u30c9\u306b\u4fee\u6b63\u3092\u52a0\u3048\u3066\u3001Twitter\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n## \u4fee\u6b63\u7b87\u6240\n\n\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u3001Twitter4j\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n### build.sbt\n\n```build.sbt\nimport com.github.play2war.plugin._\n\n\nname := \"play221ss214SNSLogin\"\n\nversion := \"1.0-SNAPSHOT\"\n\nscalaVersion := \"2.11.1\"\n\nlibraryDependencies ++= Seq(\n  jdbc,\n  anorm,\n  cache,\n  \"mysql\" % \"mysql-connector-java\" % \"5.1.18\",\n  \"ws.securesocial\" %% \"securesocial\" % \"2.1.4\",\n   \"org.twitter4j\" % \"twitter4j-core\" % \"4.0.1\"\n)     \n\nplay.Project.playScalaSettings\n\nPlay2WarPlugin.play2WarSettings\n\nPlay2WarKeys.servletVersion := \"3.0\"\n```\n\n>\u4fee\u6b63\u306f\uff11\u884c\u3060\u3051\u3067\u3059\u304c\u3001\u305d\u3093\u306a\u306b\u9577\u304f\u306a\u3044\u306e\u3067\u5168\u90e8\u63b2\u8f09\u3002\n\n\n### Application.scala\n\n```scala:app/controllers/Application.scala\npackage controllers\n\nimport play.api._\nimport play.api.mvc._\nimport play.Play\nimport securesocial.core._\n\n\nimport twitter4j.auth.AccessToken\nimport twitter4j.TwitterFactory\nimport twitter4j.TwitterResponse\nimport twitter4j.ResponseList\nimport twitter4j.Status\nimport scala.collection.JavaConversions._\n\n\nobject Application extends securesocial.core.SecureSocial {\n  val twitter = {\n    val tw = TwitterFactory.getSingleton\n    val consumer_key = Play.application().configuration().getString(\"securesocial.twitter.consumerKey\")\n    val consumer_secret = Play.application().configuration().getString(\"securesocial.twitter.consumerSecret\")\n    tw.setOAuthConsumer(consumer_key, consumer_secret)\n    tw\n  }\n\n\n  def index = SecuredAction { implicit request =>\n    // \u3053\u3053\u306b\u304f\u308b\u6642\u70b9\u3067fullName\u3084\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u53d6\u5f97\u6e08\u307f\n    val name = request.user.fullName\n    val provider = request.user.identityId.providerId\n    \n    val oAuth2Info:Option[OAuth2Info] = request.user.oAuth2Info\n    var token = \"\"\n    var tokenType: Option[String] = None\n    var expiresIn: Option[Int] = None\n    var refreshToken: Option[String] = None\n    oAuth2Info match {\n      case Some(info) => {\n        token = info.accessToken\n        tokenType = info.tokenType\n        expiresIn = info.expiresIn\n        refreshToken = info.refreshToken \n      }\n      case None => println(\"oAuth2Info == None\")\n    }\n    \n    var timeline: ResponseList[twitter4j.Status] = null\n    val oAuth1Info:Option[OAuth1Info] = request.user.oAuth1Info\n    oAuth1Info match {\n      case Some(info) => {\n    \ttoken = info.token\n    \tval secret = info.secret\n\n   \t\tval ac = new AccessToken(token, secret)\n   \t\ttwitter.setOAuthAccessToken(ac)\n   \t\ttimeline = twitter.getUserTimeline\n      }\n      case None => ()\n    }\n    \n    Ok(views.html.index(name, provider, request.user.avatarUrl, timeline))\n  }\n\n  def page = UserAwareAction { implicit request =>\n    val userName = request.user match {\n      case Some(user) => user.fullName\n      case _ => \"guest\"\n    }\n    Ok(\"Hello %s\".format(userName))\n  }\n\n}\n```\n\n### index.scala.html\n\n\n```html:app/views/index.scala.html\n@(user: String, provider: String, avatarUrl: Option[String], timeline: twitter4j.ResponseList[twitter4j.Status])(implicit request: RequestHeader, lang: Lang)\n\n@import helper._\n@import securesocial.core.Registry\n@import securesocial.core.AuthenticationMethod._\n@import securesocial.core.providers.UsernamePasswordProvider.UsernamePassword\n\n\n@main(\"Welcome\") {\n  <div class=\"page-header\">\n    <h1>Welcome!</h1>\n  </div>\n\n    Welcome @(user) at @(provider)!\n    \n    @avatarUrl match {\n    \tcase Some(url) => { <image src=\"@url\" /> }\n    \tcase None => {}\n    }\n    <p>\n\t<ul>\n\t@for(tweet <- timeline){\n\t\t<li><p>@tweet.getText</p></li>\n\t}\n\t</ul>\n    </P>\n    \n    <p>\n    \t<a href=\"/logout\">Logout</a>\n    </p>\n\n}\n```\n\n"}