{"tags": ["Hubot", "Node.js"], "context": "log4js\u3092\u4f7f\u3046\u305f\u3081\u306b\u3001package.json\u306b\u4e0b\u8a18\u3092\u8ffd\u52a0\u3059\u308b\n\"log4js\": \"^0.6.37\"\n\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u8a18\u8ff0\u3092\u884c\u3046\u3002\nLinux\u306a\u3069\u3067\u3001\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u3001#{process.env.HOME}\u3092\u4f7f\u7528\u3057\u3001\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b\u3002\n\u203bLinux\u306a\u3069\u3067\u8a18\u8f09\u3059\u308b\u3068\u304d\u306e\u3088\u3046\u306b~/logs\u3068\u8a18\u8ff0\u3057\u3066\u3044\u3066\u3001\u3059\u3053\u3057\u30cf\u30de\u3063\u305f\u3002\u3002\u3002\n\nnekobot.coffee\n#\u3053\u3053\u304b\u3089\n  log4js = require('log4js')\n  log4js.configure {\n      \"appenders\": [\n        {\n          \"category\": \"access\",\n          \"type\": \"dateFile\",\n          \"filename\": \"#{process.env.HOME}/logs/nekobot_access.log\",\n          \"pattern\": \"-yyyy-MM-dd\",\n          \"backups\": 7\n        },\n        {\n          \"category\": \"system\",\n          \"type\": \"dateFile\",\n          \"filename\": \"#{process.env.HOME}/logs/nekobot_system.log\",\n          \"pattern\": \"-yyyy-MM-dd\",\n          \"backups\": 7\n        },\n        {\n          \"category\": \"error\",\n          \"type\": \"dateFile\",\n          \"filename\": \"#{process.env.HOME}/logs/nekobot_error.log\",\n          \"pattern\": \"-yyyy-MM-dd\",\n          \"backups\": 7\n        }\n      ],\n      \"levels\": {\n        \"access\": \"INFO\",\n        \"system\": \"INFO\",\n        \"error\": \"INFO\"\n      }\n  }\n\n  systemLogger = log4js.getLogger('system')\n  accessLogger = log4js.getLogger('access')\n  errorLogger = log4js.getLogger('error')\n#\u3053\u3053\u307e\u3067\nmodule.exports = (robot) ->\n  robot.hear /(shiitake|([C\u690e]|[\u3057\u30b7]\\s*([\u3044\u30a4\u3043\u30a3\u30fc]))\\s*([\u305f\u30bf]\\s*[\u3051\u30b1]|\u8338)|Shiitake\\s*mushrooms|\u0e40\u0e2b\u0e47\u0e14\u0e2b\u0e2d\u0e21)/i, (msg) ->\n      room = msg.envelope.room\n      if room == \"Shell\"\n        text = msg.match[1]\n        msg.send  \"#{text}\u4e00\u4eba\u524d\u8ffd\u52a0\u3067\u30fc\u3059\u3002\u306f\u3044\u3088\u308d\u3053\u3093\u3067\u30fc\"\n\n\n\u7d9a\u3044\u3066\u3001\u5b9f\u969b\u306b\u51fa\u529b\u3059\u308b\u969b\u306e\u8a18\u8ff0\u3092\u8ffd\u52a0\n\nnekobot.coffee\n  log4js = require('log4js')\n  log4js.configure {\n      \"appenders\": [\n        {\n          \"category\": \"access\",\n          \"type\": \"dateFile\",\n          \"filename\": \"#{process.env.HOME}/logs/nekobot_access.log\",\n          \"pattern\": \"-yyyy-MM-dd\",\n          \"backups\": 7\n        },\n        {\n          \"category\": \"system\",\n          \"type\": \"dateFile\",\n          \"filename\": \"#{process.env.HOME}/logs/nekobot_system.log\",\n          \"pattern\": \"-yyyy-MM-dd\",\n          \"backups\": 7\n        },\n        {\n          \"category\": \"error\",\n          \"type\": \"dateFile\",\n          \"filename\": \"#{process.env.HOME}/logs/nekobot_error.log\",\n          \"pattern\": \"-yyyy-MM-dd\",\n          \"backups\": 7\n        }\n      ],\n      \"levels\": {\n        \"access\": \"INFO\",\n        \"system\": \"INFO\",\n        \"error\": \"INFO\"\n      }\n  }\n\n  systemLogger = log4js.getLogger('system')\n  accessLogger = log4js.getLogger('access')\n  errorLogger = log4js.getLogger('error')\n\n  module.exports = (robot) ->\n    robot.hear /(shiitake|([C\u690e]|[\u3057\u30b7]\\s*([\u3044\u30a4\u3043\u30a3\u30fc]))\\s*([\u305f\u30bf]\\s*[\u3051\u30b1]|\u8338)|Shiitake\\s*mushrooms|\u0e40\u0e2b\u0e47\u0e14\u0e2b\u0e2d\u0e21)/i, (msg) ->\n      accessLogger.info 'nekobot connected'\n      room = msg.envelope.room\n      accessLogger.info room\n      if room == \"Shell\"\n        text = msg.match[1]\n        msg.send  \"#{text}\u4e00\u4eba\u524d\u8ffd\u52a0\u3067\u30fc\u3059\u3002\u306f\u3044\u3088\u308d\u3053\u3093\u3067\u30fc\"\n\n\n\n\u5b9f\u969b\u306b\u8a66\u3057\u3066\u307f\u308b\n$ bin/hubot\nnekobot> [Sun Aug 28 2016 02:39:15 GMT+0900 (JST)] INFO hubot-redis-brain: Using default redis on localhost:6379\nnekobot> \n\nHubot\u3092\u8d77\u52d5\u3059\u308b\u3068\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306elogs\u306b\u4e0b\u8a183\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b\n$ pwd\n/Users/kijitoraneko/logs\n$\n$ ls -ltr\ntotal 0\n-rw-r--r--  1 kijitoraneko  staff  0  8 28 02:39 nekobot_system.log\n-rw-r--r--  1 kijitoraneko  staff  0  8 28 02:39 nekobot_error.log\n-rw-r--r--  1 kijitoraneko  staff  0  8 28 02:39 nekobot_access.log\n$\n\n\u7d9a\u3051\u3066\nnekobot> \u3057\u3044\u305f\u3051\nnekobot> \u3057\u3044\u305f\u3051\u4e00\u4eba\u524d\u8ffd\u52a0\u3067\u30fc\u3059\u3002\u306f\u3044\u3088\u308d\u3053\u3093\u3067\u30fc\n\n\u3068\u3001\u30dc\u30c3\u30c8\u306b\u53cd\u5fdc\u3055\u305b\u308b\u3068\n$ ls -ltr\ntotal 8\n-rw-r--r--  1 kijitoraneko  staff    0  8 28 02:39 nekobot_system.log\n-rw-r--r--  1 kijitoraneko  staff    0  8 28 02:39 nekobot_error.log\n-rw-r--r--  1 kijitoraneko  staff  108  8 28 02:41 nekobot_access.log\n$ vim nekobot_access.log\n[2016-08-28 02:41:35.589] [INFO] access - nekobot connected\n[2016-08-28 02:41:35.590] [INFO] access - Shell\n\n\u3061\u3083\u3093\u3068\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\u306a\u304a\u3001\u30ed\u30b0\u30ec\u30d9\u30eb\u7b49\u306b\u3064\u3044\u3066\u306f\u30b3\u30c1\u30e9\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nlog4js\u306e\u899a\u3048\u66f8\u304d - log4.js\u3092\u4f7f\u3063\u3066\u307f\u305f -\nlog4js\u3092\u4f7f\u3046\u305f\u3081\u306b\u3001package.json\u306b\u4e0b\u8a18\u3092\u8ffd\u52a0\u3059\u308b\n`\"log4js\": \"^0.6.37\"`\n\n\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u306e\u8a18\u8ff0\u3092\u884c\u3046\u3002\nLinux\u306a\u3069\u3067\u3001\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u3001`#{process.env.HOME}`\u3092\u4f7f\u7528\u3057\u3001\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\u3059\u308b\u3002\n\u203bLinux\u306a\u3069\u3067\u8a18\u8f09\u3059\u308b\u3068\u304d\u306e\u3088\u3046\u306b`~/logs`\u3068\u8a18\u8ff0\u3057\u3066\u3044\u3066\u3001\u3059\u3053\u3057\u30cf\u30de\u3063\u305f\u3002\u3002\u3002\n\n```nekobot.coffee\n#\u3053\u3053\u304b\u3089\n  log4js = require('log4js')\n  log4js.configure {\n      \"appenders\": [\n        {\n          \"category\": \"access\",\n          \"type\": \"dateFile\",\n          \"filename\": \"#{process.env.HOME}/logs/nekobot_access.log\",\n          \"pattern\": \"-yyyy-MM-dd\",\n          \"backups\": 7\n        },\n        {\n          \"category\": \"system\",\n          \"type\": \"dateFile\",\n          \"filename\": \"#{process.env.HOME}/logs/nekobot_system.log\",\n          \"pattern\": \"-yyyy-MM-dd\",\n          \"backups\": 7\n        },\n        {\n          \"category\": \"error\",\n          \"type\": \"dateFile\",\n          \"filename\": \"#{process.env.HOME}/logs/nekobot_error.log\",\n          \"pattern\": \"-yyyy-MM-dd\",\n          \"backups\": 7\n        }\n      ],\n      \"levels\": {\n        \"access\": \"INFO\",\n        \"system\": \"INFO\",\n        \"error\": \"INFO\"\n      }\n  }\n\n  systemLogger = log4js.getLogger('system')\n  accessLogger = log4js.getLogger('access')\n  errorLogger = log4js.getLogger('error')\n#\u3053\u3053\u307e\u3067\nmodule.exports = (robot) ->\n  robot.hear /(shiitake|([C\u690e]|[\u3057\u30b7]\\s*([\u3044\u30a4\u3043\u30a3\u30fc]))\\s*([\u305f\u30bf]\\s*[\u3051\u30b1]|\u8338)|Shiitake\\s*mushrooms|\u0e40\u0e2b\u0e47\u0e14\u0e2b\u0e2d\u0e21)/i, (msg) ->\n      room = msg.envelope.room\n      if room == \"Shell\"\n        text = msg.match[1]\n        msg.send  \"#{text}\u4e00\u4eba\u524d\u8ffd\u52a0\u3067\u30fc\u3059\u3002\u306f\u3044\u3088\u308d\u3053\u3093\u3067\u30fc\"\n```\n\n\u7d9a\u3044\u3066\u3001\u5b9f\u969b\u306b\u51fa\u529b\u3059\u308b\u969b\u306e\u8a18\u8ff0\u3092\u8ffd\u52a0\n\n```nekobot.coffee\n  log4js = require('log4js')\n  log4js.configure {\n      \"appenders\": [\n        {\n          \"category\": \"access\",\n          \"type\": \"dateFile\",\n          \"filename\": \"#{process.env.HOME}/logs/nekobot_access.log\",\n          \"pattern\": \"-yyyy-MM-dd\",\n          \"backups\": 7\n        },\n        {\n          \"category\": \"system\",\n          \"type\": \"dateFile\",\n          \"filename\": \"#{process.env.HOME}/logs/nekobot_system.log\",\n          \"pattern\": \"-yyyy-MM-dd\",\n          \"backups\": 7\n        },\n        {\n          \"category\": \"error\",\n          \"type\": \"dateFile\",\n          \"filename\": \"#{process.env.HOME}/logs/nekobot_error.log\",\n          \"pattern\": \"-yyyy-MM-dd\",\n          \"backups\": 7\n        }\n      ],\n      \"levels\": {\n        \"access\": \"INFO\",\n        \"system\": \"INFO\",\n        \"error\": \"INFO\"\n      }\n  }\n\n  systemLogger = log4js.getLogger('system')\n  accessLogger = log4js.getLogger('access')\n  errorLogger = log4js.getLogger('error')\n\n  module.exports = (robot) ->\n    robot.hear /(shiitake|([C\u690e]|[\u3057\u30b7]\\s*([\u3044\u30a4\u3043\u30a3\u30fc]))\\s*([\u305f\u30bf]\\s*[\u3051\u30b1]|\u8338)|Shiitake\\s*mushrooms|\u0e40\u0e2b\u0e47\u0e14\u0e2b\u0e2d\u0e21)/i, (msg) ->\n      accessLogger.info 'nekobot connected'\n      room = msg.envelope.room\n      accessLogger.info room\n      if room == \"Shell\"\n        text = msg.match[1]\n        msg.send  \"#{text}\u4e00\u4eba\u524d\u8ffd\u52a0\u3067\u30fc\u3059\u3002\u306f\u3044\u3088\u308d\u3053\u3093\u3067\u30fc\"\n\n```\n\n\u5b9f\u969b\u306b\u8a66\u3057\u3066\u307f\u308b\n\n```\n$ bin/hubot\nnekobot> [Sun Aug 28 2016 02:39:15 GMT+0900 (JST)] INFO hubot-redis-brain: Using default redis on localhost:6379\nnekobot> \n```\n\nHubot\u3092\u8d77\u52d5\u3059\u308b\u3068\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306elogs\u306b\u4e0b\u8a183\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b\n\n```\n$ pwd\n/Users/kijitoraneko/logs\n$\n$ ls -ltr\ntotal 0\n-rw-r--r--  1 kijitoraneko  staff  0  8 28 02:39 nekobot_system.log\n-rw-r--r--  1 kijitoraneko  staff  0  8 28 02:39 nekobot_error.log\n-rw-r--r--  1 kijitoraneko  staff  0  8 28 02:39 nekobot_access.log\n$\n```\n\n\u7d9a\u3051\u3066\n\n```\nnekobot> \u3057\u3044\u305f\u3051\nnekobot> \u3057\u3044\u305f\u3051\u4e00\u4eba\u524d\u8ffd\u52a0\u3067\u30fc\u3059\u3002\u306f\u3044\u3088\u308d\u3053\u3093\u3067\u30fc\n```\n\n\u3068\u3001\u30dc\u30c3\u30c8\u306b\u53cd\u5fdc\u3055\u305b\u308b\u3068\n\n```\n$ ls -ltr\ntotal 8\n-rw-r--r--  1 kijitoraneko  staff    0  8 28 02:39 nekobot_system.log\n-rw-r--r--  1 kijitoraneko  staff    0  8 28 02:39 nekobot_error.log\n-rw-r--r--  1 kijitoraneko  staff  108  8 28 02:41 nekobot_access.log\n$ vim nekobot_access.log\n[2016-08-28 02:41:35.589] [INFO] access - nekobot connected\n[2016-08-28 02:41:35.590] [INFO] access - Shell\n```\n\n\u3061\u3083\u3093\u3068\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\n\u306a\u304a\u3001\u30ed\u30b0\u30ec\u30d9\u30eb\u7b49\u306b\u3064\u3044\u3066\u306f\u30b3\u30c1\u30e9\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n[log4js\u306e\u899a\u3048\u66f8\u304d - log4.js\u3092\u4f7f\u3063\u3066\u307f\u305f -](http://qiita.com/_daisuke/items/865cf929a403cc9eec53)\n"}