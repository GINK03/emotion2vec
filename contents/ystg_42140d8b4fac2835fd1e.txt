{"context": " More than 1 year has passed since last update.\n\nMocha\u3092\u4f7f\u3063\u305fNode.js\u3067\u306e\u5358\u4f53\u30c6\u30b9\u30c8\u5165\u9580\u306e\u5165\u9580\n\n\u7528\u8a9e\n\nMocha\uff08\u30e2\u30ab\uff09\n\nJavaScript\u306e\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002\n\nChai\n\nJavaScript\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u4e00\u7dd2\u306b\u4f7f\u3046\u3002\n\u8a18\u8ff0\u30b9\u30bf\u30a4\u30eb\u3092should,expect,assert\u6587\u304b\u3089\u9078\u3079\u308b\u3002\n\nTDD\n\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a (\u3066\u3059\u3068\u304f\u3069\u3046\u304b\u3044\u306f\u3064\u3001test-driven development; TDD) \n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u958b\u767a\u624b\u6cd5\u306e\u4e00\u7a2e\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5fc5\u8981\u306a\u5404\u6a5f\u80fd\u306b\u3064\u3044\u3066\u3001\u6700\u521d\u306b\u30c6\u30b9\u30c8\u3092\u66f8\u304d\uff08\u3053\u308c\u3092\u30c6\u30b9\u30c8\u30d5\u30a1\u30fc\u30b9\u30c8\u3068\u8a00\u3046\uff09\u3001\u305d\u306e\u30c6\u30b9\u30c8\u304c\u52d5\u4f5c\u3059\u308b\u5fc5\u8981\u6700\u4f4e\u9650\u306a\u5b9f\u88c5\u3092\u3068\u308a\u3042\u3048\u305a\u884c\u3063\u305f\u5f8c\u3001\u30b3\u30fc\u30c9\u3092\u6d17\u7df4\u3055\u305b\u308b\u3001\u3068\u3044\u3046\u77ed\u3044\u5de5\u7a0b\u3092\u7e70\u308a\u8fd4\u3059\u30b9\u30bf\u30a4\u30eb\u3067\u3042\u308b\u3002\u591a\u304f\u306e\u30a2\u30b8\u30e3\u30a4\u30eb\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u624b\u6cd5\u3001\u4f8b\u3048\u3070\u30a8\u30af\u30b9\u30c8\u30ea\u30fc\u30e0\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u304a\u3044\u3066\u5f37\u304f\u63a8\u5968\u3055\u308c\u3066\u3044\u308b\u3002\u8fd1\u5e74\u306f\u30d3\u30d8\u30a4\u30d3\u30a2\u99c6\u52d5\u958b\u767a\u3078\u3068\u767a\u5c55\u3092\u9042\u3052\u3066\u3044\u308b\u3002\n\n\nBDD\n\u30d3\u30d8\u30a4\u30d3\u30a2\u99c6\u52d5\u958b\u767a (\u632f\u821e\u99c6\u52d5\u958b\u767a; behavior driven development; BDD)\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u958b\u767a\u624b\u6cd5\u306e\u4e00\u7a2e\u3067\u3001\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u304b\u3089\u6d3e\u751f\u3057\u305f\u7269\u3067\u3042\u308b\u3002\n\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u3067\u8a18\u8ff0\u3055\u308c\u308b\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306f\u3001\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u52d5\u4f5c\u304c\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\u3092\u691c\u8a3c\u3059\u308b\u305f\u3081\u306b\u884c\u3046\u300c\u30c6\u30b9\u30c8\u300d\u3067\u3042\u308b\u3002\u30c6\u30b9\u30c8\u3067\u3042\u308b\u3068\u3044\u3046\u70b9\u306f\u540c\u4e00\u3067\u3042\u308b\u304c\u3001\u52a0\u3048\u3066\u3001\u3053\u308c\u304b\u3089\u4f5c\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u671f\u5f85\u3055\u308c\u308b\u300c\u632f\u308b\u821e\u3044\u300d\u3084\u300c\u5236\u7d04\u6761\u4ef6\u300d\u3001\u3064\u307e\u308a\u300c\u8981\u6c42\u4ed5\u69d8\u300d\u306b\u8fd1\u3044\u5f62\u3067\u3001\u81ea\u7136\u8a00\u8a9e\u3092\u4f75\u8a18\u3057\u306a\u304c\u3089\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308b\u3002\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3082\u81ea\u7136\u8a00\u8a9e\uff08\u82f1\u8a9e\u306a\u3069\uff09\u306b\u8fd1\u3044\u5f62\u3092\u3068\u3063\u3066\u3044\u308b\u3002\n\n\n\u30b9\u30bf\u30a4\u30eb\n\n\nTDD\u30b9\u30bf\u30a4\u30eb\n\nNode.js\u6a19\u6e96\u306eassert\u6587\u304c\u30e1\u30a4\u30f3\u306e\u30b9\u30bf\u30a4\u30eb\n\n\nassert\nassert.equal(foo, 'bar');\n\n\n\n\nBDD\u30b9\u30bf\u30a4\u30eb\n\nShould\u6587\u3092\u4f7f\u7528\u3057\u305f\u30b9\u30bf\u30a4\u30eb\n> The should interface extends Object.prototype to provide a single getter as the starting point for your language assertions. It works on node.js and in all modern browsers except Internet Explorer.\n\nNode\u53ca\u3073IE\u4ee5\u5916\u306e\u30e2\u30c0\u30f3\u30d6\u30e9\u30a6\u30b6\u3067\u52d5\u304f\u3002\n\nshould\nfoo.should.be.a('string');\n\n\n\nExpect\u6587\u3092\u4f7f\u7528\u3057\u305f\u30b9\u30bf\u30a4\u30eb\n> The expect interface provides a function as a starting point for chaining your language assertions. It works on node.js and in all browsers.\n\nNode\u53ca\u3073\u3059\u3079\u3066\u306e\u30d6\u30e9\u30a6\u30b6\u3067\u52d5\u304f\u2606\n\nexpect\nexpect(foo).to.be.a('string');\n\n\n\n\n\n\u3055\u308f\u3063\u3066\u307f\u308b\n\nassert\u30b9\u30bf\u30a4\u30eb\n$ npm install mocha --save-dev\n$ npm install chai  --save-dev\n$ mkdir test\n$ ls\nnode_modules  package.json  test\n$ cat <<_EOF> test/test.js\nvar assert = require('assert');\ndescribe('Array', function() {\n  describe('#indexOf()', function () {\n    it('should return -1 when the value is not present', function () {\n      assert.equal(-1, [1,2,3].indexOf(5));\n      assert.equal(-1, [1,2,3].indexOf(0));\n    });\n  });\n});\n_EOF\n$ mocha\nArray\n  #indexOf()\n    ? should return -1 when the value is not present\n\n\n1 passing (8ms)\n\n\n\nShould\u30b9\u30bf\u30a4\u30eb\n\nshould\nvar chai = require(\"chai\");\nchai.should();\n\ndescribe('Array', function() {\n  describe('#indexOf()', function() {\n    it('should return -1 when the value is not present', function() {\n      [1,2,3].indexOf(5).should.equal(-1);\n      [1,2,3].indexOf(0).should.equal(-1);\n    });\n  });\n});\n\n\n\nExpect\u30b9\u30bf\u30a4\u30eb\n\nexpect\nvar expect = require(\"chai\").expect;\ndescribe('Array', function() {\n  describe('#indexOf()', function() {\n    it('should return -1 when the value is not present', function() {\n      expect([1,2,3].indexOf(5)).to.equal(-1);\n      expect([1,2,3].indexOf(0)).to.equal(-1);\n    });\n  });\n});\n\n\n\n\u304a\u308f\u308a\n\u4eca\u56deNode.js\u306e\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066Mocha\u3092\u4f7f\u7528\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u4ed6\u306b\u3082Jasmine2\u3068\u304b\u304c\u6709\u540d\u306e\u3088\u3046\u3067\u3059\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\n\nhttp://qiita.com/oret/items/8c9a216865b088c15d68\nhttps://mochajs.org/\nhttp://chaijs.com/\nhttp://jasmine.github.io/2.0/introduction.html\nhttp://lxyuma.hatenablog.com/entry/2013/12/15/211637\n\n# Mocha\u3092\u4f7f\u3063\u305fNode.js\u3067\u306e\u5358\u4f53\u30c6\u30b9\u30c8\u5165\u9580\u306e\u5165\u9580\n\n## \u7528\u8a9e\n### [Mocha\uff08\u30e2\u30ab\uff09](https://mochajs.org/)\nJavaScript\u306e\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002\n\n### [Chai](http://chaijs.com/)\nJavaScript\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u4e00\u7dd2\u306b\u4f7f\u3046\u3002\n\u8a18\u8ff0\u30b9\u30bf\u30a4\u30eb\u3092should,expect,assert\u6587\u304b\u3089\u9078\u3079\u308b\u3002\n\n### TDD\n[\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a (\u3066\u3059\u3068\u304f\u3069\u3046\u304b\u3044\u306f\u3064\u3001test-driven development; TDD) ](https://ja.wikipedia.org/wiki/%E3%83%86%E3%82%B9%E3%83%88%E9%A7%86%E5%8B%95%E9%96%8B%E7%99%BA)\n  > \u30d7\u30ed\u30b0\u30e9\u30e0\u958b\u767a\u624b\u6cd5\u306e\u4e00\u7a2e\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5fc5\u8981\u306a\u5404\u6a5f\u80fd\u306b\u3064\u3044\u3066\u3001\u6700\u521d\u306b\u30c6\u30b9\u30c8\u3092\u66f8\u304d\uff08\u3053\u308c\u3092\u30c6\u30b9\u30c8\u30d5\u30a1\u30fc\u30b9\u30c8\u3068\u8a00\u3046\uff09\u3001\u305d\u306e\u30c6\u30b9\u30c8\u304c\u52d5\u4f5c\u3059\u308b\u5fc5\u8981\u6700\u4f4e\u9650\u306a\u5b9f\u88c5\u3092\u3068\u308a\u3042\u3048\u305a\u884c\u3063\u305f\u5f8c\u3001\u30b3\u30fc\u30c9\u3092\u6d17\u7df4\u3055\u305b\u308b\u3001\u3068\u3044\u3046\u77ed\u3044\u5de5\u7a0b\u3092\u7e70\u308a\u8fd4\u3059\u30b9\u30bf\u30a4\u30eb\u3067\u3042\u308b\u3002\u591a\u304f\u306e\u30a2\u30b8\u30e3\u30a4\u30eb\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u624b\u6cd5\u3001\u4f8b\u3048\u3070\u30a8\u30af\u30b9\u30c8\u30ea\u30fc\u30e0\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u304a\u3044\u3066\u5f37\u304f\u63a8\u5968\u3055\u308c\u3066\u3044\u308b\u3002\u8fd1\u5e74\u306f\u30d3\u30d8\u30a4\u30d3\u30a2\u99c6\u52d5\u958b\u767a\u3078\u3068\u767a\u5c55\u3092\u9042\u3052\u3066\u3044\u308b\u3002\n  \n### BDD\n[\u30d3\u30d8\u30a4\u30d3\u30a2\u99c6\u52d5\u958b\u767a (\u632f\u821e\u99c6\u52d5\u958b\u767a; behavior driven development; BDD)](https://ja.wikipedia.org/wiki/%E3%83%93%E3%83%98%E3%82%A4%E3%83%93%E3%82%A2%E9%A7%86%E5%8B%95%E9%96%8B%E7%99%BA)\n  > \u30d7\u30ed\u30b0\u30e9\u30e0\u958b\u767a\u624b\u6cd5\u306e\u4e00\u7a2e\u3067\u3001\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u304b\u3089\u6d3e\u751f\u3057\u305f\u7269\u3067\u3042\u308b\u3002\n  > \u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u3067\u8a18\u8ff0\u3055\u308c\u308b\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306f\u3001\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u52d5\u4f5c\u304c\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\u3092\u691c\u8a3c\u3059\u308b\u305f\u3081\u306b\u884c\u3046\u300c\u30c6\u30b9\u30c8\u300d\u3067\u3042\u308b\u3002\u30c6\u30b9\u30c8\u3067\u3042\u308b\u3068\u3044\u3046\u70b9\u306f\u540c\u4e00\u3067\u3042\u308b\u304c\u3001\u52a0\u3048\u3066\u3001\u3053\u308c\u304b\u3089\u4f5c\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u671f\u5f85\u3055\u308c\u308b\u300c\u632f\u308b\u821e\u3044\u300d\u3084\u300c\u5236\u7d04\u6761\u4ef6\u300d\u3001\u3064\u307e\u308a\u300c\u8981\u6c42\u4ed5\u69d8\u300d\u306b\u8fd1\u3044\u5f62\u3067\u3001\u81ea\u7136\u8a00\u8a9e\u3092\u4f75\u8a18\u3057\u306a\u304c\u3089\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308b\u3002\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3082\u81ea\u7136\u8a00\u8a9e\uff08\u82f1\u8a9e\u306a\u3069\uff09\u306b\u8fd1\u3044\u5f62\u3092\u3068\u3063\u3066\u3044\u308b\u3002\n\n### \u30b9\u30bf\u30a4\u30eb\n* TDD\u30b9\u30bf\u30a4\u30eb\n  * Node.js\u6a19\u6e96\u306eassert\u6587\u304c\u30e1\u30a4\u30f3\u306e\u30b9\u30bf\u30a4\u30eb\n  \n    ```js:assert\n  assert.equal(foo, 'bar');\n    ```\n* BDD\u30b9\u30bf\u30a4\u30eb\n\n  * Should\u6587\u3092\u4f7f\u7528\u3057\u305f\u30b9\u30bf\u30a4\u30eb\n  > The should interface extends Object.prototype to provide a single getter as the starting point for your language assertions. It works on node.js and in all modern browsers except Internet Explorer.\n\n    Node\u53ca\u3073IE\u4ee5\u5916\u306e\u30e2\u30c0\u30f3\u30d6\u30e9\u30a6\u30b6\u3067\u52d5\u304f\u3002\n  \n    ```js:should\n    foo.should.be.a('string');\n    ```\n    \n  * Expect\u6587\u3092\u4f7f\u7528\u3057\u305f\u30b9\u30bf\u30a4\u30eb\n  > The expect interface provides a function as a starting point for chaining your language assertions. It works on node.js and in all browsers.\n\n    Node\u53ca\u3073\u3059\u3079\u3066\u306e\u30d6\u30e9\u30a6\u30b6\u3067\u52d5\u304f\u2606\n  \n    ```js:expect\n    expect(foo).to.be.a('string');\n    ```\n\n## \u3055\u308f\u3063\u3066\u307f\u308b\n### assert\u30b9\u30bf\u30a4\u30eb\n```bash\n$ npm install mocha --save-dev\n$ npm install chai  --save-dev\n$ mkdir test\n$ ls\nnode_modules  package.json  test\n$ cat <<_EOF> test/test.js\nvar assert = require('assert');\ndescribe('Array', function() {\n  describe('#indexOf()', function () {\n    it('should return -1 when the value is not present', function () {\n      assert.equal(-1, [1,2,3].indexOf(5));\n      assert.equal(-1, [1,2,3].indexOf(0));\n    });\n  });\n});\n_EOF\n$ mocha\nArray\n  #indexOf()\n    ? should return -1 when the value is not present\n\n\n1 passing (8ms)\n\n```\n\n### Should\u30b9\u30bf\u30a4\u30eb\n```js:should\nvar chai = require(\"chai\");\nchai.should();\n\ndescribe('Array', function() {\n  describe('#indexOf()', function() {\n    it('should return -1 when the value is not present', function() {\n      [1,2,3].indexOf(5).should.equal(-1);\n      [1,2,3].indexOf(0).should.equal(-1);\n    });\n  });\n});\n```\n\n### Expect\u30b9\u30bf\u30a4\u30eb\n```js:expect\nvar expect = require(\"chai\").expect;\ndescribe('Array', function() {\n  describe('#indexOf()', function() {\n    it('should return -1 when the value is not present', function() {\n      expect([1,2,3].indexOf(5)).to.equal(-1);\n      expect([1,2,3].indexOf(0)).to.equal(-1);\n    });\n  });\n});\n```\n\n## \u304a\u308f\u308a\n\u4eca\u56deNode.js\u306e\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066Mocha\u3092\u4f7f\u7528\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u4ed6\u306b\u3082Jasmine2\u3068\u304b\u304c\u6709\u540d\u306e\u3088\u3046\u3067\u3059\u3002\n\n## \u53c2\u8003\u30b5\u30a4\u30c8\n* http://qiita.com/oret/items/8c9a216865b088c15d68\n* https://mochajs.org/\n* http://chaijs.com/\n* http://jasmine.github.io/2.0/introduction.html\n* http://lxyuma.hatenablog.com/entry/2013/12/15/211637\n", "tags": ["Node.js", "mocha", "bdd", "TDD", "Beginner"]}