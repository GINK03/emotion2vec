{"tags": ["Groovy", "spock"], "context": " More than 1 year has passed since last update.\u6700\u8fd1\u306e\u5358\u4f53\u30c6\u30b9\u30c8\u3067\u306f\u6b20\u304b\u305b\u306a\u3044Mocking\u3067\u3059\u304c\u3001Groovy\u306e\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bSpock\u3067\u3082\u306a\u304b\u306a\u304b\u5f37\u529b\u306aMocking\u6a5f\u80fd\u304c\u6a19\u6e96\u642d\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u3088\u304fMocking\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308bsetupSpec\u3068setup\u3067\u306e\u632f\u308b\u821e\u3044\u306b\u3064\u3044\u3066\u3001\u4e00\u500b\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306b\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\nMockTest.groovy\n@Grab(group='org.spockframework', module='spock-core', version='0.7-groovy-2.0')\n\nimport spock.lang.*\n\nclass MockTest extends Specification {\n  interface ClassA{\n    int method1()\n  } \n\n  static ClassA classA_spec,s1\n  static ClassA classA_setup,a1\n\n  def setupSpec(){\n    classA_spec = Mock()\n    s1 = classA_spec\n  }\n  def setup(){\n    classA_setup = Mock()\n    a1 = classA_setup\n  }\n\n  def \"setupSpec\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u5b9a\u7fa9\u304c\u51fa\u6765\u306a\u3044(setup)\"(){\n    setup:\n    classA_spec.method1() >> 1\n\n    expect:\n    s1.is(classA_spec) && s1.method1() != 1\n  }\n\n  def \"setupSpec\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u5b9a\u7fa9\u304c\u51fa\u6765\u306a\u3044(when)\"(){\n    when:\n    classA_spec.method1() >> 2\n\n    then:\n    s1.is(classA_spec) && s1.method1() != 2\n  }\n\n  def \"\u305f\u3060\u3057setupSpec\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3082where\u3067\u306f\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3067\u304d\u308b\"(){\n    expect:\n    s1.is(classA_spec) && s1.method1() == 3\n    s.is(classA_spec) && s.method1() == 3\n\n    where:\n    s << [{classA_spec.method1() >> 3;s1}()]\n  }\n\n  def \"setup\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u5b9a\u7fa9\u304c\u3067\u304d\u308b(setup)\"(){\n    setup:\n    classA_setup.method1() >> 1\n\n    expect:\n    a1.is(classA_setup) && a1.method1() == 1\n  }\n\n  def \"setup\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u5b9a\u7fa9\u304c\u3067\u304d\u308b(when)\"(){\n    when:\n    classA_setup.method1() >> 1\n\n    then:\n    a1.is(classA_setup) && a1.method1() == 1\n  }\n\n  def \"setup\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306fwhere\u3067\u306f\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3067\u304d\u306a\u3044\"(){\n    expect:\"where\u6642\u70b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3082\u5909\u308f\u308b\"\n    a1.is(classA_setup) && a1.method1() != 1\n    !a.is(classA_setup) && a.method1() != 1\n\n    where:\n    a << [{classA_setup.method1() >> 1;classA_setup}()]\n  }\n\n  def \"setup\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306fdata\u30c6\u30fc\u30d6\u30eb\u304c\u6709\u52b9\"(){\n    setup:\n    classA_setup.method1() >> data\n\n    expect:\n    a1.is(classA_setup) && a1.method1() == data\n\n    where:\n    data << [1,2,3]\n  }\n\n  def \"setupSpec\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u5b9a\u7fa9\u6e08\u307f\u3060\u3068\u305d\u308c\u4ee5\u964d\u5b9a\u7fa9\u3067\u304d\u306a\u3044\"(){\n    expect:\n    s1.is(classA_spec) && s1.method1() == 3\n\n    where:\n    data << [4,5,6].each {\n      classA_spec.method1() >> it\n    }    \n  }\n\n\n  def \"\u305d\u3082\u305d\u3082\u540c\u4e00\u306eMock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u306e\u306f\u4e00\u5ea6\u304d\u308a\"(){\n    setup:\n    classA_setup.method1() >> data\n    classA_setup.method1() >> 1\n\n    expect:\n    a1.is(classA_setup) && a1.method1() == data\n\n    where:\n    data << [1,2,3]\n  }\n}\n\n\n\u3053\u308c\u3089\u306e\u632f\u308b\u821e\u3044\u304b\u3089\u3001\n\n\u30c6\u30b9\u30c8\u3092\u901a\u3058\u3066\u632f\u308b\u821e\u3044\u304c\u5909\u308f\u3089\u306a\u3044Mock\u5bfe\u8c61\n\n\nsetupSpec\u3067Mock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3059\u308b\n\u540c\u69d8\u306bsetupSpec\u3067\u632f\u308b\u821e\u3044\u307e\u3067\u5b9a\u7fa9\u3059\u308b\n\n\n\n\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30c6\u30b9\u30c8\u5168\u4f53\u306e\u524d\u63d0\u3068\u306a\u308bMock\u5b9a\u7fa9\u3092\u4e00\u7b87\u6240\u3067\u7ba1\u7406\u3059\u308b\n\n\u305d\u308c\u305e\u308c\u306e\u30c6\u30b9\u30c8\u306b\u304a\u3044\u3066\u632f\u308b\u821e\u3044\u3092\u5909\u3048\u308b\u5fc5\u8981\u306e\u3042\u308bMock\u5bfe\u8c61\n\n\nsetup\u3067Mock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3059\u308b\n\u5404\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306esetup\u307e\u305f\u306fwhen\u3067\u52d5\u4f5c\u3092\u5b9a\u7fa9\u3059\u308b\n\n\n\n\u3053\u3068\u306b\u3088\u3063\u3066\u3001where\u306b\u3088\u308bDataDriven\u306a\u30c6\u30b9\u30c8\u3092\u3084\u308a\u3084\u3059\u304f\u3059\u308b\n\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3068\u3044\u3046\u3053\u3068\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\u6700\u8fd1\u306e\u5358\u4f53\u30c6\u30b9\u30c8\u3067\u306f\u6b20\u304b\u305b\u306a\u3044Mocking\u3067\u3059\u304c\u3001Groovy\u306e\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bSpock\u3067\u3082\u306a\u304b\u306a\u304b\u5f37\u529b\u306aMocking\u6a5f\u80fd\u304c\u6a19\u6e96\u642d\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u3088\u304fMocking\u306e\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308bsetupSpec\u3068setup\u3067\u306e\u632f\u308b\u821e\u3044\u306b\u3064\u3044\u3066\u3001\u4e00\u500b\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306b\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n```groovy:MockTest.groovy\n@Grab(group='org.spockframework', module='spock-core', version='0.7-groovy-2.0')\n\nimport spock.lang.*\n\nclass MockTest extends Specification {\n  interface ClassA{\n    int method1()\n  } \n  \n  static ClassA classA_spec,s1\n  static ClassA classA_setup,a1\n  \n  def setupSpec(){\n    classA_spec = Mock()\n    s1 = classA_spec\n  }\n  def setup(){\n    classA_setup = Mock()\n    a1 = classA_setup\n  }\n  \n  def \"setupSpec\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u5b9a\u7fa9\u304c\u51fa\u6765\u306a\u3044(setup)\"(){\n    setup:\n    classA_spec.method1() >> 1\n    \n    expect:\n    s1.is(classA_spec) && s1.method1() != 1\n  }\n  \n  def \"setupSpec\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u5b9a\u7fa9\u304c\u51fa\u6765\u306a\u3044(when)\"(){\n    when:\n    classA_spec.method1() >> 2\n    \n    then:\n    s1.is(classA_spec) && s1.method1() != 2\n  }\n\n  def \"\u305f\u3060\u3057setupSpec\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3082where\u3067\u306f\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3067\u304d\u308b\"(){\n    expect:\n    s1.is(classA_spec) && s1.method1() == 3\n    s.is(classA_spec) && s.method1() == 3\n    \n    where:\n    s << [{classA_spec.method1() >> 3;s1}()]\n  }\n  \n  def \"setup\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u5b9a\u7fa9\u304c\u3067\u304d\u308b(setup)\"(){\n    setup:\n    classA_setup.method1() >> 1\n    \n    expect:\n    a1.is(classA_setup) && a1.method1() == 1\n  }\n\n  def \"setup\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u5b9a\u7fa9\u304c\u3067\u304d\u308b(when)\"(){\n    when:\n    classA_setup.method1() >> 1\n    \n    then:\n    a1.is(classA_setup) && a1.method1() == 1\n  }\n\n  def \"setup\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306fwhere\u3067\u306f\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3067\u304d\u306a\u3044\"(){\n    expect:\"where\u6642\u70b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3082\u5909\u308f\u308b\"\n    a1.is(classA_setup) && a1.method1() != 1\n    !a.is(classA_setup) && a.method1() != 1\n    \n    where:\n    a << [{classA_setup.method1() >> 1;classA_setup}()]\n  }\n\n  def \"setup\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306fdata\u30c6\u30fc\u30d6\u30eb\u304c\u6709\u52b9\"(){\n    setup:\n    classA_setup.method1() >> data\n    \n    expect:\n    a1.is(classA_setup) && a1.method1() == data\n    \n    where:\n    data << [1,2,3]\n  }\n  \n  def \"setupSpec\u3067Mock()\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u5b9a\u7fa9\u6e08\u307f\u3060\u3068\u305d\u308c\u4ee5\u964d\u5b9a\u7fa9\u3067\u304d\u306a\u3044\"(){\n    expect:\n    s1.is(classA_spec) && s1.method1() == 3\n    \n    where:\n    data << [4,5,6].each {\n      classA_spec.method1() >> it\n    }    \n  }\n  \n  \n  def \"\u305d\u3082\u305d\u3082\u540c\u4e00\u306eMock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u52d5\u4f5c\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u306e\u306f\u4e00\u5ea6\u304d\u308a\"(){\n    setup:\n    classA_setup.method1() >> data\n    classA_setup.method1() >> 1\n    \n    expect:\n    a1.is(classA_setup) && a1.method1() == data\n    \n    where:\n    data << [1,2,3]\n  }\n}\n```\n\n\u3053\u308c\u3089\u306e\u632f\u308b\u821e\u3044\u304b\u3089\u3001\n\n* \u30c6\u30b9\u30c8\u3092\u901a\u3058\u3066\u632f\u308b\u821e\u3044\u304c\u5909\u308f\u3089\u306a\u3044Mock\u5bfe\u8c61\n  * setupSpec\u3067Mock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3059\u308b\n  * \u540c\u69d8\u306bsetupSpec\u3067\u632f\u308b\u821e\u3044\u307e\u3067\u5b9a\u7fa9\u3059\u308b\n\n\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30c6\u30b9\u30c8\u5168\u4f53\u306e\u524d\u63d0\u3068\u306a\u308bMock\u5b9a\u7fa9\u3092\u4e00\u7b87\u6240\u3067\u7ba1\u7406\u3059\u308b\n\n* \u305d\u308c\u305e\u308c\u306e\u30c6\u30b9\u30c8\u306b\u304a\u3044\u3066\u632f\u308b\u821e\u3044\u3092\u5909\u3048\u308b\u5fc5\u8981\u306e\u3042\u308bMock\u5bfe\u8c61\n  * setup\u3067Mock\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3059\u308b\n  * \u5404\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306esetup\u307e\u305f\u306fwhen\u3067\u52d5\u4f5c\u3092\u5b9a\u7fa9\u3059\u308b\n\n\u3053\u3068\u306b\u3088\u3063\u3066\u3001where\u306b\u3088\u308bDataDriven\u306a\u30c6\u30b9\u30c8\u3092\u3084\u308a\u3084\u3059\u304f\u3059\u308b\n\n\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3068\u3044\u3046\u3053\u3068\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n"}