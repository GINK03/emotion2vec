{"context": " More than 1 year has passed since last update.\u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f\nhttp://atnd.org/events/38770\n\u306e\u3001\u554f\u984c(\u30d3\u30c3\u30c8\u3042\u307f\u3060\u304f\u3058)\nhttp://nabetani.sakura.ne.jp/hena/ord11bitamida/\n\u306e\u3001groovy\u306b\u3088\u308b\u5b9f\u88c5\n\u307e\u3060\u51fa\u3066\u306a\u3044\u8a00\u8a9e\u3068\u3044\u3046\u3053\u3068\u3067\u3001groovy\u3002\n\u4ed6\u306e\u8a00\u8a9e\u306a\u3069\u306e\u89e3\u7b54\u4f8b\u306f\nhttp://qiita.com/items/93cde1a6b7561426a3ac\n\u304b\u3089\u8fbf\u308c\u307e\u3059\u3002\n\u3067\u3002\n\u3053\u3093\u306a\u611f\u3058\u3002\n\nsolver.groovy\ndef remap(s, bits ){\n  pairs=(0..8).findAll{ bits & (256>>it) }\n  0.step( pairs.size(),2 ){\n    Collections.swap( s, pairs[it], pairs[it+1] )\n  }\n  s\n}\n\ndef solve( src ){\n  s=(0..8).toArray()\n  src.split(/-/).each{\n    bits=Integer.parseInt( it, 16 )\n    s=remap( s,  bits ^ (bits*2) )\n  }\n  s.join(\"\")\n}\n\ndef test( src, expected ){\n  actual = solve( src )\n  ok = actual==expected ? \"ok\" : \"***NG***\"\n  println( \"${ok} ${src}->${actual} ( ${expected})\" )\n}\n\n/*0*/ test( \"d6-7b-e1-9e\", \"740631825\" );\n/*1*/ test( \"83-4c-20-10\", \"123805476\" );\n/*41*/ test( \"6f-dd-ff-ff\", \"230685147\" );\n\n\n\u3044\u3064\u3082\u3069\u304a\u308a\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5927\u534a\u3092\u7701\u7565\u3002\n\u4eca\u56de\u306f\u3001\u4e0a\u304b\u3089\u9806\u306b\u3001\u5165\u308c\u66ff\u3048\u306b\u3088\u3063\u3066\u3044\u3063\u307a\u3093\u306b\u51e6\u7406\u3001xor \u3092\u5229\u7528\u3001\u3068\u3044\u3046\u65b9\u91dd\u3067\u3002\n\u914d\u5217\u306e\u8981\u7d20\u3092\u5165\u308c\u66ff\u3048\u308b\u306b\u306f Collection.swap \u3092\u4f7f\u3046\u3068\u3044\u3046\u3053\u3068\u3092\u5b66\u3093\u3060\u3002\n\u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f\nhttp://atnd.org/events/38770\n\u306e\u3001\u554f\u984c(\u30d3\u30c3\u30c8\u3042\u307f\u3060\u304f\u3058)\nhttp://nabetani.sakura.ne.jp/hena/ord11bitamida/\n\u306e\u3001groovy\u306b\u3088\u308b\u5b9f\u88c5\n\n\u307e\u3060\u51fa\u3066\u306a\u3044\u8a00\u8a9e\u3068\u3044\u3046\u3053\u3068\u3067\u3001groovy\u3002\n\u4ed6\u306e\u8a00\u8a9e\u306a\u3069\u306e\u89e3\u7b54\u4f8b\u306f\nhttp://qiita.com/items/93cde1a6b7561426a3ac\n\u304b\u3089\u8fbf\u308c\u307e\u3059\u3002\n\n\u3067\u3002\n\u3053\u3093\u306a\u611f\u3058\u3002\n\n```groovy:solver.groovy\ndef remap(s, bits ){\n  pairs=(0..8).findAll{ bits & (256>>it) }\n  0.step( pairs.size(),2 ){\n    Collections.swap( s, pairs[it], pairs[it+1] )\n  }\n  s\n}\n\ndef solve( src ){\n  s=(0..8).toArray()\n  src.split(/-/).each{\n    bits=Integer.parseInt( it, 16 )\n    s=remap( s,  bits ^ (bits*2) )\n  }\n  s.join(\"\")\n}\n\ndef test( src, expected ){\n  actual = solve( src )\n  ok = actual==expected ? \"ok\" : \"***NG***\"\n  println( \"${ok} ${src}->${actual} ( ${expected})\" )\n}\n\n/*0*/ test( \"d6-7b-e1-9e\", \"740631825\" );\n/*1*/ test( \"83-4c-20-10\", \"123805476\" );\n/*41*/ test( \"6f-dd-ff-ff\", \"230685147\" );\n```\n\n\u3044\u3064\u3082\u3069\u304a\u308a\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5927\u534a\u3092\u7701\u7565\u3002\n\n\u4eca\u56de\u306f\u3001\u4e0a\u304b\u3089\u9806\u306b\u3001\u5165\u308c\u66ff\u3048\u306b\u3088\u3063\u3066\u3044\u3063\u307a\u3093\u306b\u51e6\u7406\u3001xor \u3092\u5229\u7528\u3001\u3068\u3044\u3046\u65b9\u91dd\u3067\u3002\n\n\u914d\u5217\u306e\u8981\u7d20\u3092\u5165\u308c\u66ff\u3048\u308b\u306b\u306f `Collection.swap` \u3092\u4f7f\u3046\u3068\u3044\u3046\u3053\u3068\u3092\u5b66\u3093\u3060\u3002\n", "tags": ["Groovy2.1.1", "yhpg", "\u3069\u3046\u66f8\u304f"]}