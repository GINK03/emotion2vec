{"tags": ["PIC18F14K50", "EUSART", "uart", "48MHz"], "context": "\n\n1.\u76ee\u7684\n\u300012MHz\u306e\u5916\u90e8\u30aa\u30b7\u30ec\u30fc\u30bf\u306bPLL\u3092\u304b\u3051\u3066\u3001Fosc\u309248MHz\u306b\u3057\u305f\u5f8cUART\uff08PIC18F14K50\u3067\u306fEUSART\u3068\u3044\u3046\u3002\uff09\u306e\u901a\u4fe1\u3092\u884c\u306a\u3046\u3053\u3068\u304c\u76ee\u7684\u3002\n\n2.\u65e9\u901f\u3064\u307e\u305a\u3044\u305f\n\u3000\u4f8b\u306e\u3054\u3068\u304f\u65e9\u901f\u3064\u307e\u305a\u304d\u307e\u3057\u305f\u3002\n\u3000\u4e00\u756a\u521d\u3081\u306b\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3002\n/*\n * File: main.c\n * Author: kashiharaakira\n *\n * Created on April 16, 2016, 8:35 PM\n */\n#include <xc.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <p18f14k50.h>\n#define _XTAL_FREQ 48000000\n\n#pragma config CPUDIV = NOCLKDIV\n#pragma config USBDIV = OFF\n#pragma config FOSC = HS\n#pragma config PLLEN = ON\n#pragma config FCMEN = OFF\n#pragma config IESO = OFF\n#pragma config PWRTEN = OFF\n#pragma config BOREN = OFF\n#pragma config BORV = 30\n#pragma config WDTEN = OFF\n#pragma config WDTPS = 32768\n#pragma config MCLRE = OFF\n#pragma config HFOFST = OFF\n#pragma config STVREN = ON\n#pragma config LVP = OFF\n#pragma config XINST = OFF\n#pragma config BBSIZ = OFF\n#pragma config CP0 = OFF\n#pragma config CP1 = OFF\n#pragma config CPB = OFF\n#pragma config WRT0 = OFF\n#pragma config WRT1 = OFF\n#pragma config WRTB = OFF\n#pragma config WRTC = OFF\n#pragma config EBTR0 = OFF\n#pragma config EBTR1 = OFF\n#pragma config EBTRB = OFF\n\nvoid putch(unsigned char ch) {\n    while(!TXIF);\n    TXREG = ch;\n}\n\nvoid DelayMs(int dlyms){\n    while(dlyms--){\n        __delay_ms(1);\n    }\n}\n\nvoid main(void) {\n    OSCCON = 0b00000000; \n    TRISB = 0xF0;\n    RCSTA = 0b10010000; \n    TXSTA = 0b00100100; \n    BAUDCON = 0b00001000; \n    SPBRGH = 0; \n    SPBRG = 1249; \n    __delay_ms(10); \n    while(1){\n        printf(\"Hello World!\\n\");\n        DelayMs(1000);\n    }\n}\n\n\u3000\u3053\u3053\u3067\u809d\u306b\u306a\u308b\u306e\u306fTXSTA\u3001BAUDCON\u3001SPBRGH\u3001SPBRG\u30ec\u30b8\u30b9\u30bf\u3002\n\u3000\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\u3068\u3001\u6587\u5b57\u5316\u3051\u3057\u3066\u3068\u3066\u3082\u8aad\u3081\u308b\u6587\u5b57\u5217\u3092\u8fd4\u3057\u3066\u3053\u306a\u3044\u3002\n\u3000\n\n3.\u89e3\u6c7a\u7b56\n\n3.1.\u8003\u3048\u3089\u308c\u308b\u539f\u56e0\n\u30fb\u30aa\u30b7\u30ec\u30fc\u30bf\u306e\u7cbe\u5ea6\n\u30fbPLL\u306e\u7cbe\u5ea6\n\u30fbBaudrate\u306e\u4f55\u304b\u3057\u3089\u306e\u4e0d\u5177\u5408\n\n3.3.\u5b9f\u9a13\u3057\u3066\u307f\u305f\n\u9577\u304f\u306a\u308b\u306e\u3067\u8a73\u7d30\u306f\u7701\u304d\u307e\u3059\u304c\u3001\u7d50\u679c\u4e00\u756a\u9ad8\u3044\u306e\u306fBaundrate\u306e\u4f55\u304b\u3057\u3089\u306e\u4e0d\u5177\u5408orPLL\u306e\u7cbe\u5ea6\u3067\u3057\u305f\u3002\n\u7406\u7531\u3068\u3057\u3066\u306f\u3001\u30aa\u30b7\u30ec\u30fc\u30bf\u306e\u7cbe\u5ea6\u306f\u30aa\u30b7\u30ed\u30b9\u30b3\u30fc\u30d7\u3067\u898b\u305f\u6ce2\u5f62\u304b\u3089\u8aa4\u5dee\u304c\u307b\u307c\u7121\u304f\u7dba\u9e97\u306a\u3082\u306e\u3067\u3057\u305f\u3002PLL\u306e\u7cbe\u5ea6\u306b\u95a2\u3057\u3066\u306f\u3001\u5185\u90e8\u30aa\u30b7\u30ec\u30fc\u30bf\u306ePLL\u306f\u6b63\u5e38\u306b\u884c\u306a\u3048UART\u306e\u9001\u53d7\u4fe1\u306f\u6b63\u5e38\u306b\u884c\u3048\u305f\u3002\u3057\u304b\u3057\u3001\u5468\u6ce2\u6570\u304c\u9ad8\u3044\u5834\u5408\u7279\u6027\u304c\u5909\u308f\u308b\u3053\u3068\u306f\u5426\u5b9a\u51fa\u6765\u306a\u3044\u3002\u6700\u5f8c\u306eBaudrate\u306e\u8a2d\u5b9a\u306f\u3001\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8\u306e\u5bfe\u5fdc\u8868\u3092\u5143\u306b\u30b3\u30fc\u30c9\u3092\u7d44\u3093\u3060\u3002\u3057\u304b\u3057\u3001\u3053\u306e\u8a2d\u5b9a\u304c\u6839\u672c\u7684\u306b\u304a\u304b\u3057\u3044\u3053\u3068\u3092\u5426\u5b9a\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u306a\u3044\u3002\n\n3.4.\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8\u3092\u3082\u3046\u4e00\u5ea6\u898b\u308b\nPIC18F14K50\u306e\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8\u306f\u4ee5\u4e0b\u3002\n\u65e5\u672c\u8a9e\uff1b\u3000http://ww1.microchip.com/downloads/jp/DeviceDoc/41350D_JP.pdf\n\u82f1\u8a9e\uff1b\u3000http://ww1.microchip.com/downloads/en/DeviceDoc/40001350F.pdf\nPLL\u306f\u4eca\u306e\u3068\u3053\u308d\u8abf\u67fb\u3057\u3088\u3046\u304c\u306a\u3044\u306e\u3067\u3001Baudrate\u3092\u7591\u3046\u3002\nBaudrate\u306b\u95a2\u3057\u3066\u306e\u57fa\u672c\u7684\u306a\u60c5\u5831\u306f\u4ee5\u4e0b\u3002\n\nbaudrate timer\u306f\u30d5\u30ea\u30fc\u30e9\u30f3\u52d5\u4f5c\nSPBRGH:SPBRG\u30ec\u30b8\u30b9\u30bf\u30da\u30a2\u3067\u52d5\u4f5c\u3059\u308b\nTXSTA\u30ec\u30b8\u30b9\u30bf\u306eBRGH\u30d3\u30c3\u30c8\u3068BAUDCON\u30ec\u30b8\u30b9\u30bf\u306eBRG16\u30d3\u30c3\u30c8\u306b\u3088\u3063\u3066baudrate\u5468\u671f\u306e\u4e57\u6570\u304c\u6c7a\u307e\u308b\nBRGH\u30d3\u30c3\u30c8\u306f\u9ad8baud\u30ec\u30fc\u30c8\u3001BRG16\u30d3\u30c3\u30c8\u306f16bitBRG\u3092\u610f\u5473\u3059\u308b\u3002\u305d\u308c\u305e\u308cH\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u5229\u7528\u304c\u53ef\u80fd\u3002\u3069\u3061\u3089\u3082baud\u30ec\u30fc\u30c8\u30a8\u30e9\u30fc\u306e\u4f4e\u6e1b\u306b\u52b9\u679c\u304c\u3042\u308a\u300116bitBRG\u306b\u95a2\u3057\u3066\u306f\u30aa\u30b7\u30ec\u30fc\u30bf\u306e\u5468\u6ce2\u6570\u304c\u9ad8\u3044\u5834\u5408\u3067\u3082\u4f4e\u901f\u306ebaud\u30ec\u30fc\u30c8\u3092\u5f97\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\nSPBRGH:SPBRG\u30ec\u30b8\u30b9\u30bf\u30da\u30a2\u306b\u65b0\u3057\u3044\u5024\u3092\u66f8\u304d\u8fbc\u3080\u3068BRG timer\u306f\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\n->BRG timer\u30aa\u30fc\u30d0\u30d5\u30ed\u30fc\u3092\u5f85\u305f\u305a\u3001\u65b0\u3057\u3044baudrate\u3092\u51fa\u529b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\n3.5.\u4eca\u56de\u5229\u7528\u3059\u308b\u8a2d\u5b9a\n\u4eca\u56de\u5229\u7528\u3059\u308b\u8a2d\u5b9a\u5185\u5bb9\u306f\u3001\u4ee5\u4e0b\nBRG16=1,SYNC=0,BRGH=1\n\u3053\u306e\u3001\u8a2d\u5b9a\u306e\u5834\u5408Desired Baud Rate\u3068SPBRGH:SPBRG\u306e\u95a2\u4fc2\u5f0f\u306f\u4ee5\u4e0b\n\nDesired Baud Rate = Fosc/64([SPBRGH:SPBRG]+1)\n\u3053\u308c\u3092\u3068\u308a\u3042\u3048\u305a\u89e3\u3044\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u76ee\u7684\u306fSPBRGH:SPBRG\u3092\u5c0e\u304d\u51fa\u3059\u3053\u3068\u3067\u3059\u3002\nSPBRGH:SPBRG = X, Desired Baud Rate = Y\u3068\u7f6e\u304f\u3002\nY = Fosc/4(X+1)\nX+1 = Fosc/4Y\nX = (Fosc/4Y)-1\n\u4eca\u3001Fosc=48MHz, Desired Baud Rate = 9600\u3088\u308a\nX = {(48*10^6) / 4*9600} - 1\nX = 1249\n\n\u3053\u3053\u3067X\u3068\u306f\u306a\u3093\u305e\u3084\u3068\u3044\u3046\u3068\u3053\u308d\u304c\u3001\u30cd\u30c3\u30af\u3060\u3063\u305f\u308f\u3051\u3067\u3059\u3002\n\u3053\u308c\u307e\u3067\u306f\u3001\u3053\u306eSPBRGH:SPBRG\u306f\u300c\u6bd4\u7387\u300d\u3060\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u3046\u3067\u306f\u306a\u304f\u30668bit:8bit\u306e\u610f\u5473\u3060\u3063\u305f\u3093\u3067\u3059\u3002\n\u3064\u307e\u308a\n\nSPBRGH:SPBRG = 1249[D] = 0000010011100001[B]\nSPBRGH = 00000100[B] = 4[D]\nSPBRG = 11100001[B] = 225[D]\n\n\u3068\u3044\u3046\u3053\u3068\u3060\u3063\u305f\u3093\u3067\u3059\u306d\u3002\n\u3064\u307e\u308a\u3001\u3055\u3063\u304d\u306e\u30b3\u30fc\u30c9\u306e\u3053\u306e\u90e8\u5206\u3092\u304d\u3061\u3093\u3068\u5909\u3048\u3066\u3084\u308c\u3070\u52d5\u304f\u306f\u305a\u3067\u3059\u3002\n\n3.6.\u3084\u3063\u3068\u52d5\u3044\u305f\u2026\n\u4eca\u307e\u3067\u306e\u904e\u7a0b\u3067\u3001\u66f8\u3044\u305f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u3084\u3063\u3068\u52d5\u304d\u307e\u3057\u305f\u2026\u5b8c\u6210\u3067\u3059\u3002\n/*\n * File:   main.c\n * Author: kashiharaakira\n *\n * Created on April 16, 2016, 8:35 PM\n */\n#include <xc.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <p18f14k50.h>\n#define _XTAL_FREQ 48000000\n\n#pragma config CPUDIV = NOCLKDIV\n#pragma config USBDIV = OFF\n#pragma config FOSC   = HS\n#pragma config PLLEN  = ON\n#pragma config FCMEN  = OFF\n#pragma config IESO   = OFF\n#pragma config PWRTEN = OFF\n#pragma config BOREN  = OFF\n#pragma config BORV   = 30\n#pragma config WDTEN  = OFF\n#pragma config WDTPS  = 32768\n#pragma config MCLRE  = OFF\n#pragma config HFOFST = OFF\n#pragma config STVREN = ON\n#pragma config LVP    = OFF\n#pragma config XINST  = OFF\n#pragma config BBSIZ  = OFF\n#pragma config CP0    = OFF\n#pragma config CP1    = OFF\n#pragma config CPB    = OFF\n#pragma config WRT0   = OFF\n#pragma config WRT1   = OFF\n#pragma config WRTB   = OFF\n#pragma config WRTC   = OFF\n#pragma config EBTR0  = OFF\n#pragma config EBTR1  = OFF\n#pragma config EBTRB  = OFF\n\nvoid putch(unsigned char ch) {\n    while(!TXIF);\n    TXREG = ch;\n}\n\nvoid DelayMs(int dlyms){\n    while(dlyms--){\n        __delay_ms(1);\n    }\n}\n\nvoid DelayUs(int dlyum){\n    while(dlyum--){\n        __delay_us(1);\n    }\n}\n\nvoid main(void) {\n    OSCCON = 0b00000000;       \n    TRISB = 0xF0;\n    RCSTA   = 0b10010000; \n    TXSTA   = 0b00100100;  \n    BAUDCON = 0b00001000;  \n    SPBRGH  = 1249 / 256;           \n    SPBRG   = 1249 % 256;    \n    __delay_ms(10);                \n    while(1){\n        printf(\"Hello World!\\n\");\n        DelayMs(1000);\n    }\n}\n\n\n4.\u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8\n\u53c2\u8003\uff11\uff1b\u3000http://www.microchip.com/forums/m924490.aspx\n\u53c2\u8003\uff12\uff1b\u3000http://www48.atpages.jp/cent22/Electronics/PIC/Usart_Calc_Baudrate/Usart_Calc_Baudrate.html\n\n5.\u8b1d\u8f9e\n\u53c2\u8003\uff11\u306e\u30b5\u30a4\u30c8\u3067\u3001\u672c\u4ef6\u306b\u3064\u3044\u3066\u8cea\u554f\u3092\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\u89e3\u6c7a\u306e\u7cf8\u53e3\u306f\u3001\u7b54\u3048\u3066\u3044\u305f\u3060\u3044\u305fMicrochip Forum\u306e\u5229\u7528\u8005\u306e\u65b9\u306e\u52a9\u8a00\u304c\u3042\u3063\u305f\u304b\u3089\u3067\u3059\u3002\u672c\u3001\u60c5\u5831\u3092\u66f8\u304f\u306b\u3042\u305f\u308a\u5fa1\u793c\u7533\u3057\u4e0a\u3052\u307e\u3059\u3002\n\n6.\u554f\u3044\u5408\u308f\u305b\n\u306a\u3093\u304b\u300c\u3053\u3053\u304a\u304b\u3057\u3044\u3093\u3058\u3083\u306a\u3044\u306e\uff1f\u300d\u3068\u304b\u300c\u3053\u3053\u3082\u3063\u3068\u805e\u304d\u305f\u3044\uff01\u300d\u3068\u3044\u3046\u6240\u304c\u3042\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3082\u3057\u304f\u306f\u672c\u8a18\u4e8b\u306b\u30b3\u30e1\u30f3\u30c8\u3044\u305f\u3060\u3051\u308b\u3068\u3001\u5b09\u3057\u3044\u3067\u3059\u3002\nakira.kashihara@a-dawn.net\n#1.\u76ee\u7684\n\u300012MHz\u306e\u5916\u90e8\u30aa\u30b7\u30ec\u30fc\u30bf\u306bPLL\u3092\u304b\u3051\u3066\u3001Fosc\u309248MHz\u306b\u3057\u305f\u5f8cUART\uff08PIC18F14K50\u3067\u306fEUSART\u3068\u3044\u3046\u3002\uff09\u306e\u901a\u4fe1\u3092\u884c\u306a\u3046\u3053\u3068\u304c\u76ee\u7684\u3002\n\n#2.\u65e9\u901f\u3064\u307e\u305a\u3044\u305f\n\u3000\u4f8b\u306e\u3054\u3068\u304f\u65e9\u901f\u3064\u307e\u305a\u304d\u307e\u3057\u305f\u3002\n\u3000\u4e00\u756a\u521d\u3081\u306b\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3002\n\n```\n/*\n * File: main.c\n * Author: kashiharaakira\n *\n * Created on April 16, 2016, 8:35 PM\n */\n#include <xc.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <p18f14k50.h>\n#define _XTAL_FREQ 48000000\n\n#pragma config CPUDIV = NOCLKDIV\n#pragma config USBDIV = OFF\n#pragma config FOSC = HS\n#pragma config PLLEN = ON\n#pragma config FCMEN = OFF\n#pragma config IESO = OFF\n#pragma config PWRTEN = OFF\n#pragma config BOREN = OFF\n#pragma config BORV = 30\n#pragma config WDTEN = OFF\n#pragma config WDTPS = 32768\n#pragma config MCLRE = OFF\n#pragma config HFOFST = OFF\n#pragma config STVREN = ON\n#pragma config LVP = OFF\n#pragma config XINST = OFF\n#pragma config BBSIZ = OFF\n#pragma config CP0 = OFF\n#pragma config CP1 = OFF\n#pragma config CPB = OFF\n#pragma config WRT0 = OFF\n#pragma config WRT1 = OFF\n#pragma config WRTB = OFF\n#pragma config WRTC = OFF\n#pragma config EBTR0 = OFF\n#pragma config EBTR1 = OFF\n#pragma config EBTRB = OFF\n\nvoid putch(unsigned char ch) {\n    while(!TXIF);\n    TXREG = ch;\n}\n\nvoid DelayMs(int dlyms){\n    while(dlyms--){\n        __delay_ms(1);\n    }\n}\n\nvoid main(void) {\n    OSCCON = 0b00000000; \n    TRISB = 0xF0;\n    RCSTA = 0b10010000; \n    TXSTA = 0b00100100; \n    BAUDCON = 0b00001000; \n    SPBRGH = 0; \n    SPBRG = 1249; \n    __delay_ms(10); \n    while(1){\n        printf(\"Hello World!\\n\");\n        DelayMs(1000);\n    }\n}\n```\n\n\u3000\u3053\u3053\u3067\u809d\u306b\u306a\u308b\u306e\u306fTXSTA\u3001BAUDCON\u3001SPBRGH\u3001SPBRG\u30ec\u30b8\u30b9\u30bf\u3002\n\u3000\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\u3068\u3001\u6587\u5b57\u5316\u3051\u3057\u3066\u3068\u3066\u3082\u8aad\u3081\u308b\u6587\u5b57\u5217\u3092\u8fd4\u3057\u3066\u3053\u306a\u3044\u3002\n\u3000\n#3.\u89e3\u6c7a\u7b56\n##3.1.\u8003\u3048\u3089\u308c\u308b\u539f\u56e0\n\u30fb\u30aa\u30b7\u30ec\u30fc\u30bf\u306e\u7cbe\u5ea6\n\u30fbPLL\u306e\u7cbe\u5ea6\n\u30fbBaudrate\u306e\u4f55\u304b\u3057\u3089\u306e\u4e0d\u5177\u5408\n\n#3.3.\u5b9f\u9a13\u3057\u3066\u307f\u305f\n\u9577\u304f\u306a\u308b\u306e\u3067\u8a73\u7d30\u306f\u7701\u304d\u307e\u3059\u304c\u3001\u7d50\u679c\u4e00\u756a\u9ad8\u3044\u306e\u306fBaundrate\u306e\u4f55\u304b\u3057\u3089\u306e\u4e0d\u5177\u5408orPLL\u306e\u7cbe\u5ea6\u3067\u3057\u305f\u3002\n\u7406\u7531\u3068\u3057\u3066\u306f\u3001\u30aa\u30b7\u30ec\u30fc\u30bf\u306e\u7cbe\u5ea6\u306f\u30aa\u30b7\u30ed\u30b9\u30b3\u30fc\u30d7\u3067\u898b\u305f\u6ce2\u5f62\u304b\u3089\u8aa4\u5dee\u304c\u307b\u307c\u7121\u304f\u7dba\u9e97\u306a\u3082\u306e\u3067\u3057\u305f\u3002PLL\u306e\u7cbe\u5ea6\u306b\u95a2\u3057\u3066\u306f\u3001\u5185\u90e8\u30aa\u30b7\u30ec\u30fc\u30bf\u306ePLL\u306f\u6b63\u5e38\u306b\u884c\u306a\u3048UART\u306e\u9001\u53d7\u4fe1\u306f\u6b63\u5e38\u306b\u884c\u3048\u305f\u3002\u3057\u304b\u3057\u3001\u5468\u6ce2\u6570\u304c\u9ad8\u3044\u5834\u5408\u7279\u6027\u304c\u5909\u308f\u308b\u3053\u3068\u306f\u5426\u5b9a\u51fa\u6765\u306a\u3044\u3002\u6700\u5f8c\u306eBaudrate\u306e\u8a2d\u5b9a\u306f\u3001\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8\u306e\u5bfe\u5fdc\u8868\u3092\u5143\u306b\u30b3\u30fc\u30c9\u3092\u7d44\u3093\u3060\u3002\u3057\u304b\u3057\u3001\u3053\u306e\u8a2d\u5b9a\u304c\u6839\u672c\u7684\u306b\u304a\u304b\u3057\u3044\u3053\u3068\u3092\u5426\u5b9a\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u306a\u3044\u3002\n\n##3.4.\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8\u3092\u3082\u3046\u4e00\u5ea6\u898b\u308b\nPIC18F14K50\u306e\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8\u306f\u4ee5\u4e0b\u3002\n\u65e5\u672c\u8a9e\uff1b\u3000http://ww1.microchip.com/downloads/jp/DeviceDoc/41350D_JP.pdf\n\u82f1\u8a9e\uff1b\u3000http://ww1.microchip.com/downloads/en/DeviceDoc/40001350F.pdf\n\nPLL\u306f\u4eca\u306e\u3068\u3053\u308d\u8abf\u67fb\u3057\u3088\u3046\u304c\u306a\u3044\u306e\u3067\u3001Baudrate\u3092\u7591\u3046\u3002\nBaudrate\u306b\u95a2\u3057\u3066\u306e\u57fa\u672c\u7684\u306a\u60c5\u5831\u306f\u4ee5\u4e0b\u3002\n>baudrate timer\u306f\u30d5\u30ea\u30fc\u30e9\u30f3\u52d5\u4f5c\n>SPBRGH:SPBRG\u30ec\u30b8\u30b9\u30bf\u30da\u30a2\u3067\u52d5\u4f5c\u3059\u308b\n>TXSTA\u30ec\u30b8\u30b9\u30bf\u306eBRGH\u30d3\u30c3\u30c8\u3068BAUDCON\u30ec\u30b8\u30b9\u30bf\u306eBRG16\u30d3\u30c3\u30c8\u306b\u3088\u3063\u3066baudrate\u5468\u671f\u306e\u4e57\u6570\u304c\u6c7a\u307e\u308b\n>BRGH\u30d3\u30c3\u30c8\u306f\u9ad8baud\u30ec\u30fc\u30c8\u3001BRG16\u30d3\u30c3\u30c8\u306f16bitBRG\u3092\u610f\u5473\u3059\u308b\u3002\u305d\u308c\u305e\u308cH\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u5229\u7528\u304c\u53ef\u80fd\u3002\u3069\u3061\u3089\u3082baud\u30ec\u30fc\u30c8\u30a8\u30e9\u30fc\u306e\u4f4e\u6e1b\u306b\u52b9\u679c\u304c\u3042\u308a\u300116bitBRG\u306b\u95a2\u3057\u3066\u306f\u30aa\u30b7\u30ec\u30fc\u30bf\u306e\u5468\u6ce2\u6570\u304c\u9ad8\u3044\u5834\u5408\u3067\u3082\u4f4e\u901f\u306ebaud\u30ec\u30fc\u30c8\u3092\u5f97\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n>SPBRGH:SPBRG\u30ec\u30b8\u30b9\u30bf\u30da\u30a2\u306b\u65b0\u3057\u3044\u5024\u3092\u66f8\u304d\u8fbc\u3080\u3068BRG timer\u306f\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\n>->BRG timer\u30aa\u30fc\u30d0\u30d5\u30ed\u30fc\u3092\u5f85\u305f\u305a\u3001\u65b0\u3057\u3044baudrate\u3092\u51fa\u529b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n##3.5.\u4eca\u56de\u5229\u7528\u3059\u308b\u8a2d\u5b9a\n\u4eca\u56de\u5229\u7528\u3059\u308b\u8a2d\u5b9a\u5185\u5bb9\u306f\u3001\u4ee5\u4e0b\nBRG16=1,SYNC=0,BRGH=1\n\u3053\u306e\u3001\u8a2d\u5b9a\u306e\u5834\u5408Desired Baud Rate\u3068SPBRGH:SPBRG\u306e\u95a2\u4fc2\u5f0f\u306f\u4ee5\u4e0b\n\n>Desired Baud Rate = Fosc/64([SPBRGH:SPBRG]+1)\n\u3053\u308c\u3092\u3068\u308a\u3042\u3048\u305a\u89e3\u3044\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u76ee\u7684\u306fSPBRGH:SPBRG\u3092\u5c0e\u304d\u51fa\u3059\u3053\u3068\u3067\u3059\u3002\nSPBRGH:SPBRG = X, Desired Baud Rate = Y\u3068\u7f6e\u304f\u3002\nY = Fosc/4(X+1)\nX+1 = Fosc/4Y\nX = (Fosc/4Y)-1\n\u4eca\u3001Fosc=48MHz, Desired Baud Rate = 9600\u3088\u308a\nX = {(48*10^6) / 4*9600} - 1\nX = 1249\n\n\u3053\u3053\u3067X\u3068\u306f\u306a\u3093\u305e\u3084\u3068\u3044\u3046\u3068\u3053\u308d\u304c\u3001\u30cd\u30c3\u30af\u3060\u3063\u305f\u308f\u3051\u3067\u3059\u3002\n\u3053\u308c\u307e\u3067\u306f\u3001\u3053\u306eSPBRGH:SPBRG\u306f\u300c\u6bd4\u7387\u300d\u3060\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u3046\u3067\u306f\u306a\u304f\u30668bit:8bit\u306e\u610f\u5473\u3060\u3063\u305f\u3093\u3067\u3059\u3002\n\u3064\u307e\u308a\n\n>SPBRGH:SPBRG = 1249[D] = 0000010011100001[B]\nSPBRGH = 00000100[B] = 4[D]\nSPBRG = 11100001[B] = 225[D]\n\n\u3068\u3044\u3046\u3053\u3068\u3060\u3063\u305f\u3093\u3067\u3059\u306d\u3002\n\u3064\u307e\u308a\u3001\u3055\u3063\u304d\u306e\u30b3\u30fc\u30c9\u306e\u3053\u306e\u90e8\u5206\u3092\u304d\u3061\u3093\u3068\u5909\u3048\u3066\u3084\u308c\u3070\u52d5\u304f\u306f\u305a\u3067\u3059\u3002\n\n##3.6.\u3084\u3063\u3068\u52d5\u3044\u305f\u2026\n\u4eca\u307e\u3067\u306e\u904e\u7a0b\u3067\u3001\u66f8\u3044\u305f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u3084\u3063\u3068\u52d5\u304d\u307e\u3057\u305f\u2026\u5b8c\u6210\u3067\u3059\u3002\n\n```\n/*\n * File:   main.c\n * Author: kashiharaakira\n *\n * Created on April 16, 2016, 8:35 PM\n */\n#include <xc.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include <p18f14k50.h>\n#define _XTAL_FREQ 48000000\n\n#pragma config CPUDIV = NOCLKDIV\n#pragma config USBDIV = OFF\n#pragma config FOSC   = HS\n#pragma config PLLEN  = ON\n#pragma config FCMEN  = OFF\n#pragma config IESO   = OFF\n#pragma config PWRTEN = OFF\n#pragma config BOREN  = OFF\n#pragma config BORV   = 30\n#pragma config WDTEN  = OFF\n#pragma config WDTPS  = 32768\n#pragma config MCLRE  = OFF\n#pragma config HFOFST = OFF\n#pragma config STVREN = ON\n#pragma config LVP    = OFF\n#pragma config XINST  = OFF\n#pragma config BBSIZ  = OFF\n#pragma config CP0    = OFF\n#pragma config CP1    = OFF\n#pragma config CPB    = OFF\n#pragma config WRT0   = OFF\n#pragma config WRT1   = OFF\n#pragma config WRTB   = OFF\n#pragma config WRTC   = OFF\n#pragma config EBTR0  = OFF\n#pragma config EBTR1  = OFF\n#pragma config EBTRB  = OFF\n\nvoid putch(unsigned char ch) {\n    while(!TXIF);\n    TXREG = ch;\n}\n\nvoid DelayMs(int dlyms){\n    while(dlyms--){\n        __delay_ms(1);\n    }\n}\n\nvoid DelayUs(int dlyum){\n    while(dlyum--){\n        __delay_us(1);\n    }\n}\n\nvoid main(void) {\n    OSCCON = 0b00000000;       \n    TRISB = 0xF0;\n    RCSTA   = 0b10010000; \n    TXSTA   = 0b00100100;  \n    BAUDCON = 0b00001000;  \n    SPBRGH  = 1249 / 256;           \n    SPBRG   = 1249 % 256;    \n    __delay_ms(10);                \n    while(1){\n        printf(\"Hello World!\\n\");\n        DelayMs(1000);\n    }\n}\n```\n\n#4.\u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8\n\u53c2\u8003\uff11\uff1b\u3000http://www.microchip.com/forums/m924490.aspx\n\u53c2\u8003\uff12\uff1b\u3000http://www48.atpages.jp/cent22/Electronics/PIC/Usart_Calc_Baudrate/Usart_Calc_Baudrate.html\n\n#5.\u8b1d\u8f9e\n\u53c2\u8003\uff11\u306e\u30b5\u30a4\u30c8\u3067\u3001\u672c\u4ef6\u306b\u3064\u3044\u3066\u8cea\u554f\u3092\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\u89e3\u6c7a\u306e\u7cf8\u53e3\u306f\u3001\u7b54\u3048\u3066\u3044\u305f\u3060\u3044\u305fMicrochip Forum\u306e\u5229\u7528\u8005\u306e\u65b9\u306e\u52a9\u8a00\u304c\u3042\u3063\u305f\u304b\u3089\u3067\u3059\u3002\u672c\u3001\u60c5\u5831\u3092\u66f8\u304f\u306b\u3042\u305f\u308a\u5fa1\u793c\u7533\u3057\u4e0a\u3052\u307e\u3059\u3002\n\n#6.\u554f\u3044\u5408\u308f\u305b\n\u306a\u3093\u304b\u300c\u3053\u3053\u304a\u304b\u3057\u3044\u3093\u3058\u3083\u306a\u3044\u306e\uff1f\u300d\u3068\u304b\u300c\u3053\u3053\u3082\u3063\u3068\u805e\u304d\u305f\u3044\uff01\u300d\u3068\u3044\u3046\u6240\u304c\u3042\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3082\u3057\u304f\u306f\u672c\u8a18\u4e8b\u306b\u30b3\u30e1\u30f3\u30c8\u3044\u305f\u3060\u3051\u308b\u3068\u3001\u5b09\u3057\u3044\u3067\u3059\u3002\nakira.kashihara@a-dawn.net\n"}