{"context": "\u4e00\u5ea6\u4f7f\u3063\u305f\u66f8\u304d\u65b9\u306a\u3069\u3092\u30e1\u30e2\u3063\u3066\u3044\u304f\u5834\u6240\u3002\n\u203b \u8a18\u4e8b\u306e\u7c21\u6f54\u3055\u3092\u512a\u5148\u3057\u3066\u975e\u7701\u7565\u5f62\u306f\u3042\u3048\u3066\u8a18\u8f09\u3057\u307e\u305b\u3093\u3002\n\u203b $R0:\u306a\u3069\u306f\u5b9f\u884c\u7d50\u679c\u3067\u3059\u3002\n\n\n\u914d\u5217\u304b\u3089\u8981\u7d20\u3092\u524a\u9664\nvar ary = [1,2,3]\n\n// \u5148\u982d\u306e\u8981\u7d20\u3092\u524a\u9664\u3001\u623b\u308a\u5024\u306f\u524a\u9664\u3055\u308c\u305fElement\nary.removeFirst()\n\n// \u672b\u5c3e\u306e\u8981\u7d20\u3092\u524a\u9664\u3001\u623b\u308a\u5024\u306f\u524a\u9664\u3055\u308c\u305fElement\nary.removeLast()\n\n// \u5168\u8981\u7d20\u3092\u524a\u9664\u3001\u623b\u308a\u5024\u306f\u7121\u3057\nary.removeAll()\n\n\n\n\n\u914d\u5217\u304b\u3089\u6700\u5927\u5024/\u6700\u5c0f\u5024\u3092\u5f97\u308b\n[1,2,3].min()\n$R0: Int? = 1\n\n[1,2,3].max()\n$R1: Int? = 3\n\n\n\nfor-each\n[1,2,3].forEach{ print($0) }\n\n\n\n\u914d\u5217\u8981\u7d20\u306e\u5b58\u5728\u30c1\u30a7\u30c3\u30af\n[1,2,3].contains(3)\n$R0: Bool = true\n\n[1,2,3].contains(8)\n$R1: Bool = false\n\n\n\n\u914d\u5217\u8981\u7d20\u5168\u3066\u306b\u51e6\u7406\u3092\u884c\u3046\n// Ms.\u3092\u8ffd\u52a0\n[\"Rinda\",\"Cathy\"].map{ \"Ms.\" + $0 }\n\n$R0: [String] = 2 values {\n  [0] = \"Ms.Rinda\"\n  [1] = \"Ms.Cathy\"\n}\n\n// 2\u3092\u304b\u3051\u308b\n[1,2,3].map{ $0 * 2 }\n\n$R0: [Int] = 3 values {\n  [0] = 2\n  [1] = 4\n  [2] = 6\n}\n\n// 2\u4e57\n[1,2,3].map{ pow(Double($0), 2) }\n$R0: [Double] = 3 values {\n  [0] = 1\n  [1] = 4\n  [2] = 9\n}\n\n\n\n\u914d\u5217\u8981\u7d20\u3092\u5408\u8a08\u3059\u308b\n/// \u7b2c1\u5f15\u6570\u306f\u521d\u671f\u5024\n[1,2,3].reduce(0, +)\n\n$R0: Int = 6\n\n\n\n\u914d\u5217\u8981\u7d20\u3092\u9023\u7d50\u3059\u308b\n[\"a\",\"b\",\"c\"].joined(separator: \",\")\n$R15: String = \"a,b,c\"\n\n\n\n\u6587\u5b57\u5217\u304b\u3089\u6539\u884c\u3092\u53d6\u308a\u9664\u304f(filter\u3067)\nlet str = String(\"a\\nb\\r\".characters.filter { !\"\\n\\r\".characters.contains($0) })\n\n=> str: String = \"ab\"\n\n\n\n\u6587\u5b57\u5217\u3092\u30bb\u30d1\u30ec\u30fc\u30bf\u3067\u5206\u5272\u3057\u3066\u914d\u5217\u306b\u3059\u308b\n\"1,2,3\".characters.split(separator: \",\").map(String.init)\n$R17: [String] = 3 values {\n  [0] = \"1\"\n  [1] = \"2\"\n  [2] = \"3\"\n}\n\n\n\n\u6570\u5024\u3068\u6587\u5b57\u5217\u304c\u6df7\u5728\u3059\u308b\u914d\u5217\u304b\u3089\u6570\u5024\u306e\u307f\u306e\u914d\u5217\u3092\u5f97\u308b\n[\"1\",\"2\",\"a\"].flatMap{ Int($0) }\n\n$R0: [Int] = 2 values {\n  [0] = 1\n  [1] = 2\n}\n\n\n\n\u914d\u5217\u3067\u6570\u5024\u306b\u5909\u63db\u3067\u304d\u308b\u8981\u7d20\u306e\u307f\u5408\u8a08\u3059\u308b\n[\"1\",\"2\",\"3\",\"a\"].flatMap{ Int($0) }.reduce(0, +)\n$R21: Int = 6  \n\n\n\u914d\u5217\u304b\u3089nil\u3092\u9664\u53bb\n [\"1\",\"2\",nil].flatMap{$0}\n\n\n\n\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5f97\u308b\n[1,2,3].index{ $0 == 1 }\n$R24: Array.Index? = 0\n\n\n\n\n\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u65b0\u3057\u3044\u914d\u5217\u3092\u5f97\u308b\n[1,2,3,4,0].filter{ $0 % 2 == 0 && $0 > 0 }\n\n$R0: [Int] = 2 values {\n  [0] = 2\n  [1] = 4\n}\n\n\n\n\u914d\u5217\u3092\u964d\u9806\u30bd\u30fc\u30c8/\u6607\u9806\u30bd\u30fc\u30c8\n//\u3053\u308c\u306f\u964d\u9806\u30bd\u30fc\u30c8\uff08\u6607\u9806\u306f<\uff09\n [2,3,1].sorted(by: >)\n$R26: [Int] = 3 values {\n  [0] = 3\n  [1] = 2\n  [2] = 1\n}\n\n\n\n\u8f9e\u66f8\u3092\u30bd\u30fc\u30c8\n\n//key\u3067\u6607\u9806\u30bd\u30fc\u30c8\nvar dic1 = [10 : 1, 8 : 2, 3 : 3, 4 : 7]\n\ndic1.sorted(by: {$0.0 < $1.0 })\n$R33: [(key: Int, value: Int)] = 4 values {\n  [0] = {\n    key = 3\n    value = 3\n  }\n  [1] = {\n    key = 4\n    value = 7\n  }\n  [2] = {\n    key = 8\n    value = 2\n  }\n  [3] = {\n    key = 10\n    value = 1\n  }\n}\n\n// value\u3067\u6607\u9806\u30bd\u30fc\u30c8\ndic1.sorted(by: {$0.1 < $1.1 })  \n\n\n\n\n\u7834\u58ca\u7684\u30bd\u30fc\u30c8\nvar ary = [1,2,3]\nary.sort(by: >)\nary\n\n$R0: [Int] = 3 values {\n  [0] = 3\n  [1] = 2\n  [2] = 1\n}\n\n\n\n2\u79d2\u5f8c\u306b\u9045\u5ef6\u51e6\u7406\nDispatchQueue.main.asyncAfter(deadline: .now() + .seconds(2), execute: { \n    // do staff\n})\n\n\n\n\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u51e6\u7406\u3092\u5b9f\u884c\nDispatchQueue.main.async(execute: {\n    // do staff                 \n})\n\n\n\n\n\u5909\u6570\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u8868\u793a \uff08\u53c2\u8003\u60c5\u5831\u306e\u307f\uff09\nAPI for binding memory types and pointer conversion\n\nSwift3.0\u7248\u3001Enum\u306ecase\u3092\u914d\u5217\u3067\u8fd4\u3059Protocol Extension\n\n\n\u53c2\u8003\nSwift\u6587\u5b57\u5217\u64cd\u4f5c\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea \nSwift String Cheat Sheet\n10 Swift One Liners To Impress Your Friends\nSwift 2.0\u306e\u65b0\u3057\u3044flatMap\u304c\u4fbf\u5229\u904e\u304e\u308b\n\u4e00\u5ea6\u4f7f\u3063\u305f\u66f8\u304d\u65b9\u306a\u3069\u3092\u30e1\u30e2\u3063\u3066\u3044\u304f\u5834\u6240\u3002\n\n\u203b \u8a18\u4e8b\u306e\u7c21\u6f54\u3055\u3092\u512a\u5148\u3057\u3066\u975e\u7701\u7565\u5f62\u306f\u3042\u3048\u3066\u8a18\u8f09\u3057\u307e\u305b\u3093\u3002\n\u203b $R0:\u306a\u3069\u306f\u5b9f\u884c\u7d50\u679c\u3067\u3059\u3002\n\n--- \n\n### \u914d\u5217\u304b\u3089\u8981\u7d20\u3092\u524a\u9664  \n```swift \nvar ary = [1,2,3]\n\n// \u5148\u982d\u306e\u8981\u7d20\u3092\u524a\u9664\u3001\u623b\u308a\u5024\u306f\u524a\u9664\u3055\u308c\u305fElement\nary.removeFirst()\n\n// \u672b\u5c3e\u306e\u8981\u7d20\u3092\u524a\u9664\u3001\u623b\u308a\u5024\u306f\u524a\u9664\u3055\u308c\u305fElement\nary.removeLast()\n\n// \u5168\u8981\u7d20\u3092\u524a\u9664\u3001\u623b\u308a\u5024\u306f\u7121\u3057\nary.removeAll()\n\n```\n\n--- \n\n### \u914d\u5217\u304b\u3089\u6700\u5927\u5024/\u6700\u5c0f\u5024\u3092\u5f97\u308b\n\n```swift \n[1,2,3].min()\n$R0: Int? = 1\n\n[1,2,3].max()\n$R1: Int? = 3\n```\n\n--- \n\n### for-each  \n```swift \n[1,2,3].forEach{ print($0) }\n``` \n\n--- \n\n### \u914d\u5217\u8981\u7d20\u306e\u5b58\u5728\u30c1\u30a7\u30c3\u30af  \n```swift \n[1,2,3].contains(3)\n$R0: Bool = true\n\n[1,2,3].contains(8)\n$R1: Bool = false\n```\n\n--- \n\n### \u914d\u5217\u8981\u7d20\u5168\u3066\u306b\u51e6\u7406\u3092\u884c\u3046  \n\n```swift \n// Ms.\u3092\u8ffd\u52a0\n[\"Rinda\",\"Cathy\"].map{ \"Ms.\" + $0 }\n\n$R0: [String] = 2 values {\n  [0] = \"Ms.Rinda\"\n  [1] = \"Ms.Cathy\"\n}\n\n// 2\u3092\u304b\u3051\u308b\n[1,2,3].map{ $0 * 2 }\n\n$R0: [Int] = 3 values {\n  [0] = 2\n  [1] = 4\n  [2] = 6\n}\n\n// 2\u4e57\n[1,2,3].map{ pow(Double($0), 2) }\n$R0: [Double] = 3 values {\n  [0] = 1\n  [1] = 4\n  [2] = 9\n}\n``` \n\n--- \n\n### \u914d\u5217\u8981\u7d20\u3092\u5408\u8a08\u3059\u308b\n\n```swift\n/// \u7b2c1\u5f15\u6570\u306f\u521d\u671f\u5024\n[1,2,3].reduce(0, +)\n\n$R0: Int = 6\n```\n\n--- \n\n### \u914d\u5217\u8981\u7d20\u3092\u9023\u7d50\u3059\u308b\n\n```swift\n[\"a\",\"b\",\"c\"].joined(separator: \",\")\n$R15: String = \"a,b,c\"\n```\n\n--- \n\n### \u6587\u5b57\u5217\u304b\u3089\u6539\u884c\u3092\u53d6\u308a\u9664\u304f(filter\u3067)\n```swift \nlet str = String(\"a\\nb\\r\".characters.filter { !\"\\n\\r\".characters.contains($0) })\n\n=> str: String = \"ab\"\n``` \n\n---\n\n### \u6587\u5b57\u5217\u3092\u30bb\u30d1\u30ec\u30fc\u30bf\u3067\u5206\u5272\u3057\u3066\u914d\u5217\u306b\u3059\u308b\n\n```swift\n\"1,2,3\".characters.split(separator: \",\").map(String.init)\n$R17: [String] = 3 values {\n  [0] = \"1\"\n  [1] = \"2\"\n  [2] = \"3\"\n}\n```\n\n---\n\n### \u6570\u5024\u3068\u6587\u5b57\u5217\u304c\u6df7\u5728\u3059\u308b\u914d\u5217\u304b\u3089\u6570\u5024\u306e\u307f\u306e\u914d\u5217\u3092\u5f97\u308b\n\n```swift\n[\"1\",\"2\",\"a\"].flatMap{ Int($0) }\n\n$R0: [Int] = 2 values {\n  [0] = 1\n  [1] = 2\n}\n```\n\n---\n\n### \u914d\u5217\u3067\u6570\u5024\u306b\u5909\u63db\u3067\u304d\u308b\u8981\u7d20\u306e\u307f\u5408\u8a08\u3059\u308b\n\n```swift\n[\"1\",\"2\",\"3\",\"a\"].flatMap{ Int($0) }.reduce(0, +)\n$R21: Int = 6  \n``` \n### \u914d\u5217\u304b\u3089nil\u3092\u9664\u53bb\n\n```  \n [\"1\",\"2\",nil].flatMap{$0}\n```\n\n---\n\n### \u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5f97\u308b  \n\n```swift\n[1,2,3].index{ $0 == 1 }\n$R24: Array.Index? = 0\n\n```\n\n---\n\n### \u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u65b0\u3057\u3044\u914d\u5217\u3092\u5f97\u308b\n\n```swift\n[1,2,3,4,0].filter{ $0 % 2 == 0 && $0 > 0 }\n\n$R0: [Int] = 2 values {\n  [0] = 2\n  [1] = 4\n}\n```\n\n---\n\n### \u914d\u5217\u3092\u964d\u9806\u30bd\u30fc\u30c8/\u6607\u9806\u30bd\u30fc\u30c8\n\n```swift\n//\u3053\u308c\u306f\u964d\u9806\u30bd\u30fc\u30c8\uff08\u6607\u9806\u306f<\uff09\n [2,3,1].sorted(by: >)\n$R26: [Int] = 3 values {\n  [0] = 3\n  [1] = 2\n  [2] = 1\n}\n```\n\n---\n\n### \u8f9e\u66f8\u3092\u30bd\u30fc\u30c8\n\n```swift\n\n//key\u3067\u6607\u9806\u30bd\u30fc\u30c8\nvar dic1 = [10 : 1, 8 : 2, 3 : 3, 4 : 7]\n\ndic1.sorted(by: {$0.0 < $1.0 })\n$R33: [(key: Int, value: Int)] = 4 values {\n  [0] = {\n    key = 3\n    value = 3\n  }\n  [1] = {\n    key = 4\n    value = 7\n  }\n  [2] = {\n    key = 8\n    value = 2\n  }\n  [3] = {\n    key = 10\n    value = 1\n  }\n}\n\n// value\u3067\u6607\u9806\u30bd\u30fc\u30c8\ndic1.sorted(by: {$0.1 < $1.1 })  \n\n```\n\n--- \n\n### \u7834\u58ca\u7684\u30bd\u30fc\u30c8   \n\n```swift \nvar ary = [1,2,3]\nary.sort(by: >)\nary\n\n$R0: [Int] = 3 values {\n  [0] = 3\n  [1] = 2\n  [2] = 1\n}\n```\n\n--- \n\n### 2\u79d2\u5f8c\u306b\u9045\u5ef6\u51e6\u7406  \n\n```swift \nDispatchQueue.main.asyncAfter(deadline: .now() + .seconds(2), execute: { \n    // do staff\n})\n```\n\n--- \n\n### \u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u51e6\u7406\u3092\u5b9f\u884c\n\n```swift \nDispatchQueue.main.async(execute: {\n    // do staff\t\t\t\t\t\n})\n\n```\n\n--- \n\n### \u5909\u6570\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u8868\u793a \uff08\u53c2\u8003\u60c5\u5831\u306e\u307f\uff09  \n[API for binding memory types and pointer conversion\n](https://swift.org/migration-guide/se-0107-migrate.html#api-for-binding-memory-types-and-pointer-conversion)\n[Swift3.0\u7248\u3001Enum\u306ecase\u3092\u914d\u5217\u3067\u8fd4\u3059Protocol Extension](http://qiita.com/su_k/items/c1c6a91324cf12151256)\n\n--- \n\n### \u53c2\u8003  \n\n[Swift\u6587\u5b57\u5217\u64cd\u4f5c\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea](https://github.com/tikidunpon/SwiftMoji)  \n\n[Swift String Cheat Sheet](http://useyourloaf.com/blog/swift-string-cheat-sheet/)\n\n[10 Swift One Liners To Impress Your Friends](https://www.uraimo.com/2016/01/06/10-Swift-One-Liners-To-Impress-Your-Friends/)\n\n[Swift 2.0\u306e\u65b0\u3057\u3044flatMap\u304c\u4fbf\u5229\u904e\u304e\u308b](http://qiita.com/koher/items/6a95cb8edb04fb81f787)\n", "tags": ["Swift", "swift3"]}