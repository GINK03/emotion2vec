{"context": " More than 1 year has passed since last update.\u4ffa\u3067\u3059\u3002\n\u6e80\u3092\u6301\u3057\u3066\u6e96\u5099\u3057\u305fmongodb\u3082\u3001\u6642\u306b\u306f\u80b2\u305f\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3093\u306a\u3068\u304d\u306f\u30b9\u30b1\u30fc\u30eb\u30a4\u30f3\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u4eca\u56de\u306f\u80b2\u305f\u306a\u304b\u3063\u305fmongodb\u3092\u4f9b\u990a\u3057\u3066\u3001\u5c0f\u3055\u3044\u5f62\u3067\u8f2a\u5efb\u8ee2\u751f\u3055\u305b\u308b\u8a71\u3067\u3059\u3002\n\n\u6761\u4ef6\u3068\u79fb\u884c\u524d\u79fb\u884c\u5f8c\n\n\u79fb\u884c\u4e2d\u306f\u30b5\u30fc\u30d3\u30b9\u505c\u6b62\u3092\u4f34\u3046\nmongodb\u30af\u30e9\u30b9\u30bf\u306e\u30b7\u30e3\u30fc\u30c9\u3092\u524a\u9664\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u65b0\u3057\u304f\u6e96\u5099\u3059\u308b\nmongodump\u3067\u9759\u6b62\u70b9\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u53d6\u5f97\u3057\u3066mongorestore\u3067DB\u5358\u4f4d\u306e\u30ea\u30b9\u30c8\u30a2\u3092\u5b9f\u884c\u3059\u308b\n\u5404mongodb\u30af\u30e9\u30b9\u30bf\u306b\u4f5c\u3089\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u53ca\u3073\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u30d0\u30c3\u30c6\u30a3\u30f3\u30b0\u3057\u306a\u3044\u3053\u3068(\u6f70\u3057\u3066\u3057\u307e\u3046\u306e\u3067)\n\n\nas is\n\nmongodb cluster *2\ncluster\u5185\u306e\u30ed\u30fc\u30eb\n\n\nconf * 3\nshard * 2\n\n\nreplica set *2(member *3)\n\n\n\n\n\n\u8a08 18(9*2)\u53f0\n\u5404\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3067mongos\u304c\u8d77\u52d5\u3057\u3001mongos\u7d4c\u7531\u3067mongodb\u30af\u30e9\u30b9\u30bf\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\nto be\n\nmongodb cluster *1\ncluster\u5185\u306e\u30ed\u30fc\u30eb\n\n\nshard * 1\nreplica set *1\nconf + replica set member *3\n\n\n\n\u8a08 3\u53f0\n\u5404\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3067mongos\u304c\u8d77\u52d5\u3057\u3001mongos\u7d4c\u7531\u3067mongodb\u30af\u30e9\u30b9\u30bf\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n\u79fb\u884c\u5f8c\u30e2\u30f3\u30b4\u306e\u69cb\u7bc9\n\nmongodb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nAmazon Linux 2015.09\u306a\u3089\u73fe\u6642\u70b9\u3067mongodb 3.0.9-1\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\n\u3088\u30fc\u3057\u304a\u5144\u3055\u3093WiredTiger\u4f7f\u3063\u3061\u3083\u3046\u305e\u30fc\n$ sudo yum install mongodb -y\n\n\nmongodb config(metadata)\u7528\u5b9a\u7fa9\n\n/etc/mongoc.conf\n\n# mongodb config\n\nsystemLog:\n  destination: file\n  path: /var/log/mongodb/mongod_config_27019.log\n  logAppend: true\nprocessManagement:\n  fork: true\n  pidFilePath: /var/run/mongodb/mongod_config_27019.pid\nnet:\n  port: 27019\nstorage:\n  dbPath: \"/var/lib/mongodb/mongoc\"\n  engine: wiredTiger\n  wiredTiger:\n    engineConfig:\n      journalCompressor: none # default snappy\n    collectionConfig:\n      blockCompressor: none # default snappy\nsharding:\n  clusterRole: \"configsvr\"\n\n\n/etc/init.d/mongoc\n\nmongo config\u306e\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u6e96\u5099\u3057\u307e\u3059\u3002\nyum\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305fmongodb\u306einit\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u3066\u4fee\u6b63\u3057\u307e\u3059\u3002\n\nmongoc\u306e\u8d77\u52d5\n\n$ sudo service mongoc start\n\n\nmongodb shard(replicaset)\u7528\u5b9a\u7fa9\n\u3044\u3064\u304b\u307e\u305f\u5927\u304d\u304f\u80b2\u3064\u3053\u3068\u3092\u7948\u308a\u3001replSetName\u306b\u30aa\u30ea\u30b8\u30f300\u3092\u6307\u5b9a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n/etc/mongod.conf\n\n# mongodb mongod\n\nsystemLog:\n  destination: file\n  path: /var/log/mongodb/mongod_27017.log\n  logAppend: true\nprocessManagement:\n  fork: true\n  pidFilePath: /var/run/mongodb/mongod_27017.pid\nnet:\n  port: 27017\nstorage:\n  dbPath: \"/var/lib/mongodb/mongod\"\n  engine: wiredTiger\n  wiredTiger:\n    engineConfig:\n      journalCompressor: none # default snappy\n    collectionConfig:\n      blockCompressor: none # default snappy\nreplication:\n  replSetName: \"mongodb_replicaset00\"\nsharding:\n  clusterRole: \"shardsvr\"\n\n\n/etc/init.d/mongod\n\nmongod\u306e\u8d77\u52d5\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nyum\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305fmongodb\u306einit\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u3066\u4fee\u6b63\u3057\u307e\u3059\u3002\n\nmongod\u306e\u8d77\u52d5\n\n$ sudo service mongod start\n\n\u4ee5\u4e0a\u3067\u65b0\u74b0\u5883\u306emongo config/mongod\u304c\u8d77\u52d5\u3057\u307e\u3057\u305f\u3002\n\nreplica set\u306e\u4f5c\u6210\n3\u53f0\u30d0\u30e9\u30d0\u30e9\u306b\u306a\u3063\u3066\u3044\u308b\u30e2\u30f3\u30b4\u306e\u30cf\u30fc\u30c8\u3092\u4e00\u3064\u306b\u3057\u307e\u3059\u3002\n\nPrimary\u306b\u3059\u308bmongodb\u30ce\u30fc\u30c9\u3067\u64cd\u4f5c\n\n$ mongo --port=27017\nmongod> config = {   \"_id\": \"mongodb_replicaset00\",   \"members\": [     { \"_id\": 0, \"host\": '172.16.11.21:27017'},     { \"_id\": 1, \"host\": '172.16.11.22:27017'},     { \"_id\": 2, \"host\": '172.16.11.23:27017'}     ] }\nmongod> rs.initiate(config);\nPRIMARY\n\n\nbackup\u7528replica set member\u306e\u8a2d\u5b9a\nreplica set member\u306f3\u53f0\u3042\u308b\u306e\u3067\u30011\u53f0\u3092hidden\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nbackup\u7528replica set member\n\n\u4eca\u56de\u306f\"_id\":\"1\"\u306emember\u3092hidden member\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nmongodb_replicaset00:PRIMARY> cfg = rs.config()\n{\n        \"_id\" : \"mongodb_replicaset00\",\n        \"version\" : 2,\n        \"members\" : [\n                {\n                        \"_id\" : 0,\n                        \"host\" : \"172.16.11.21:27017\",\n                        \"arbiterOnly\" : false,\n                        \"buildIndexes\" : true,\n                        \"hidden\" : false,\n                        \"priority\" : 1,\n                        \"tags\" : {\n\n                        },\n                        \"slaveDelay\" : 0,\n                        \"votes\" : 1\n                },\n                {\n                        \"_id\" : 1,\n                        \"host\" : \"172.16.11.22:27017\",\n                        \"arbiterOnly\" : false,\n                        \"buildIndexes\" : true,\n                        \"hidden\" : false,\n                        \"priority\" : 1,\n                        \"tags\" : {\n\n                        },\n                        \"slaveDelay\" : 0,\n                        \"votes\" : 1\n                },\n                {\n                        \"_id\" : 2,\n                        \"host\" : \"172.16.11.23:27017\",\n                        \"arbiterOnly\" : false,\n                        \"buildIndexes\" : true,\n                        \"hidden\" : false,\n                        \"priority\" : 0,\n                        \"tags\" : {\n\n                        },\n                        \"slaveDelay\" : 0,\n                        \"votes\" : 1\n                }\n        ],\n        \"settings\" : {\n                \"chainingAllowed\" : true,\n                \"heartbeatTimeoutSecs\" : 10,\n                \"getLastErrorModes\" : {\n\n                },\n                \"getLastErrorDefaults\" : {\n                        \"w\" : 1,\n                        \"wtimeout\" : 0\n                }\n        }\n}  \nmongodb_replicaset00:PRIMARY> cfg.members[2].priority = 0\n0\nmongodb_replicaset00:PRIMARY> cfg.members[2].hidden = true\ntrue\nmongodb_replicaset00:PRIMARY> rs.reconfig(cfg)\n{\n        \"ok\" : 1,\n        \"$gleStats\" : {\n                \"lastOpTime\" : Timestamp(1455458942, 1),\n                \"electionId\" : ObjectId(\"56c07ea680f80b802b651ba2\")\n        }\n}\nmongodb_replicaset00:PRIMARY>rs.config()\nmongodb_replicaset00:PRIMARY> rs.config()\n{\n        \"_id\" : \"mongodb_replicaset00\",\n        \"version\" : 2,\n        \"members\" : [\n                {\n                        \"_id\" : 0,\n                        \"host\" : \"172.16.11.21:27017\",\n                        \"arbiterOnly\" : false,\n                        \"buildIndexes\" : true,\n                        \"hidden\" : false,\n                        \"priority\" : 1,\n                        \"tags\" : {\n\n                        },\n                        \"slaveDelay\" : 0,\n                        \"votes\" : 1\n                },\n                {\n                        \"_id\" : 1,\n                        \"host\" : \"172.16.11.22:27017\",\n                        \"arbiterOnly\" : false,\n                        \"buildIndexes\" : true,\n                        \"hidden\" : false,\n                        \"priority\" : 1,\n                        \"tags\" : {\n\n                        },\n                        \"slaveDelay\" : 0,\n                        \"votes\" : 1\n                },\n                {\n                        \"_id\" : 2,\n                        \"host\" : \"172.16.11.23:27017\",\n                        \"arbiterOnly\" : false,\n                        \"buildIndexes\" : true,\n                        \"hidden\" : true,\n                        \"priority\" : 0,\n                        \"tags\" : {\n\n                        },\n                        \"slaveDelay\" : 0,\n                        \"votes\" : 1\n                }\n        ],\n        \"settings\" : {\n                \"chainingAllowed\" : true,\n                \"heartbeatTimeoutSecs\" : 10,\n                \"getLastErrorModes\" : {\n\n                },\n                \"getLastErrorDefaults\" : {\n                        \"w\" : 1,\n                        \"wtimeout\" : 0\n                }\n        }\n}          \n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0(mongos)\u306e\u8a2d\u5b9a\n\n\u65b0\u30af\u30e9\u30b9\u30bf\u7528mongos\u5b9a\u7fa9\u4f5c\u6210\n\u65b0\u3057\u3044mongo cluster\u3078\u306e\u63a5\u7d9a\u5b9a\u7fa9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u65b0\u3057\u3044mongo cluster\u306emongo config\u30ce\u30fc\u30c9\u306eIP\u306fDNS\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4e0a\u306fmongod\u306e\u30ce\u30fc\u30c9\u540d\u3082DNS\u304bhosts\u3067\u540d\u524d\u89e3\u6c7a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u306e\u304c\u63a8\u5968\u3055\u308c\u3066\u305f\u306f\u305a..)\n\n/etc/mongos.conf\n\n  # mongos(mongodb router)\n\nsystemLog:\n  destination: file\n  path: /var/log/mongodb/mongos.log\n  logAppend: true\nprocessManagement:\n  fork: true\n  pidFilePath: /var/run/mongodb/mongos.pid\nnet:\n  port: 37017\nsharding:\n  configDB: mongodb-conf0.mongo.internal:27019,mongodb-conf1.mongo.internal:27019,mongodb-conf2.mongo.internal:27019\n\n\n/etc/init.d/mongos-new\n\nmongos\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u3066\u4fee\u6b63\u3057\u307e\u3059\u3002\n\nmongos\u8d77\u52d5\n\ncommand\n\n$ sudo service mongos-new start\n\n\n\u30b7\u30e3\u30fc\u30c9\u306e\u8a2d\u5b9a\n\u65b0mongos\u306e\u8a2d\u5b9a\u5b8c\u4e86\u6e08\u307f\u306e\u30b5\u30fc\u30d0\u3067\u4f5c\u696d\u3059\u308b\n\n\u30b7\u30e3\u30fc\u30c9\u8ffd\u52a0\n$ mongo --port=37017\nmongos> sh.status()\n--- Sharding Status ---\n  sharding version: {\n        \"_id\" : 1,\n        \"minCompatibleVersion\" : 5,\n        \"currentVersion\" : 6,\n        \"clusterId\" : ObjectId(\"56c081bccabb5eff10c1c995\")\n}\n  shards:\n  balancer:\n        Currently enabled:  yes\n        Currently running:  no\n        Failed balancer rounds in last 5 attempts:  0\n        Migration Results for the last 24 hours:\n                No recent migrations\n  databases:\n        {  \"_id\" : \"admin\",  \"partitioned\" : false,  \"primary\" : \"config\" }\nmongos> sh.addShard(\"mongodb_replicaset00/172.16.11.21:27017\");\n{ \"shardAdded\" : \"mongodb_replicaset00\", \"ok\" : 1 }\nmongos> sh.status()\n--- Sharding Status ---\n  sharding version: {\n        \"_id\" : 1,\n        \"minCompatibleVersion\" : 5,\n        \"currentVersion\" : 6,\n        \"clusterId\" : ObjectId(\"56c081bccabb5eff10c1c995\")\n}\n  shards:\n        {  \"_id\" : \"mongodb_replicaset00\",  \"host\" : \"mongodb_replicaset00/172.16.11.21:27017,172.16.11.22:27017,172.16.11.23:27017\" }\n  balancer:\n        Currently enabled:  yes\n        Currently running:  no\n        Failed balancer rounds in last 5 attempts:  0\n        Migration Results for the last 24 hours:\n                No recent migrations\n  databases:\n        {  \"_id\" : \"admin\",  \"partitioned\" : false,  \"primary\" : \"config\" }\n\n\n\u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\nnewmongodb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f5c\u308a\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3newshard_test\u3092\u4f5c\u6210\u3059\u308b\u3002\n\nmongos\u3067\u306e\u4f5c\u696d\n\nmongos> use newmongodb\nmongos> db.createCollection(\"newshard_test\");\n{\n        \"ok\" : 1,\n        \"$gleStats\" : {\n                \"lastOpTime\" : Timestamp(1455458157, 1),\n                \"electionId\" : ObjectId(\"56c07ea680f80b802b651ba2\")\n        }\n}\n\n\nreplica set member(primary)\u3067\u306e\u78ba\u8a8d\n\nmongos\u7d4c\u7531\u3067\u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u3001PRIMARY\u304b\u3089\u3082\u78ba\u8a8d\u3067\u304d\u308b\u3002\n$ mongo --port=37017\nmongodb_replicaset00:PRIMARY> show dbs\nconfig  0.000GB\nlocal   0.000GB\nnewmongodb    0.000GB\nmongodb_replicaset00:PRIMARY> use newmongodb\nswitched to db newmongodb\nmongodb_replicaset00:PRIMARY> show collections;\nnewshard_test\n\n\n\u30c6\u30b9\u30c8\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u633f\u5165\n\nnewmongodb.newshard_test\u306bnewshard_test\u3068\u3044\u3046\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u633f\u5165\u3059\u308b\n\nmongos> db.createCollection(\"newshard_test\");\n{\n        \"ok\" : 1,\n        \"$gleStats\" : {\n                \"lastOpTime\" : Timestamp(1455458157, 1),\n                \"electionId\" : ObjectId(\"56c07ea680f80b802b651ba2\")\n        }\n}\n\n\u3053\u308c\u3067\u65b0mongodb cluster\u306e\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\nmongodb\u306e\u30c7\u30fc\u30bf\u79fb\u884c\n\n\u30b5\u30fc\u30d3\u30b9\u505c\u6b62\n\n\u8f2a\u5efb\u8ee2\u751f\u3059\u308b\u30e2\u30f3\u30b4\u3092\u4f7f\u3046\u30b5\u30fc\u30d3\u30b9\u306bDB write\u304c\u8d70\u3089\u306a\u3044\u3088\u3046\u3001\u30e1\u30f3\u30c6\u5165\u308c\u3059\u308b\u306a\u308a\u3057\u307e\u3059\u3002\n\n\u79fb\u884c\u5143\u306e\u74b0\u5883\u304b\u3089mongodump\n\nBalancer\u306e\u505c\u6b62\u3068mongodump\n\n\u4eca\u56de\u306f\u524d\u63d0\u6761\u4ef6\u306e\u901a\u308a\u306bmongos\u7d4c\u7531\u3067mongodump\u3057\u307e\u3059\u3002\ndump\u524d\u306bBalancer\u3092\u6b62\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\n- Balancer\u306e\u505c\u6b62\n\n\u79fb\u884c\u5bfe\u8c61\u306emongodb cluster\u5168\u3066\u306b\u5bfe\u3057\u3066Balancer\u505c\u6b62\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n$ mongo --port=27017\nmongos> sh.status();\nmongos> sh.stopBalancer();\nmongos> sh.disableBalancing(true);\nmongos> sh.status();\n\u203bBalancer\u304c\u505c\u6b62\u3057\u3066\u3044\u308b\u3053\u3068\n$ mongo --port=27117\nmongos> sh.status();\nmongos> sh.stopBalancer();\nmongos> sh.disableBalancing(true);\nmongos> sh.status();\n\u203bBalancer\u304c\u505c\u6b62\u3057\u3066\u3044\u308b\u3053\u3068\n\n\n\nmongodump\n\nmongodb cluster\u306e\u6570\u3060\u3051mongos\u7d4c\u7531\u3067mongodump\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n$ mongodump --port=27017 --out=mongodbcluster_shard_dump\n$ mongodump --port=27117 --out=mongocluster2_shard_dump\n\n\n\u79fb\u884c\u5148\u306e\u74b0\u5883\u3078mongorestore\ndb\u6570\u5206mongorestore\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\nfull restore\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\nconfig database\u306f\u30ea\u30b9\u30c8\u30a2\u3067\u304d\u307e\u305b\u3093\u3088\u3068\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u3002\n$ mongorestore --port=37017 --dir=mongodbcluster_shard_dump/\n2016-02-14T23:50:39.692+0900    building a list of dbs and collections to restore from mongodbcluster_shard_dump/ dir\n2016-02-14T23:50:39.693+0900    Failed: cannot do a full restore on a sharded system - remove the 'config' directory from the dump directory first\n\n\ndb\u5358\u4f4d\u3067mongorestore\u3059\u308b\n\n$ mongorestore --port=37017 --db=mongodb --dir=mongodbcluster_shard_dump/mongodb/\n2016-02-14T23:51:25.823+0900    building a list of collections to restore from mongodbcluster_shard_dump/mongodb/ dir\n2016-02-14T23:51:25.860+0900    reading metadata file from mongodbcluster_shard_dump/mongodb/mongocollection.metadata.json\n2016-02-14T23:51:25.862+0900    restoring mongodb.mongocollection from file mongodbcluster_shard_dump/mongodb/mongocollection.bson\n2016-02-14T23:51:27.035+0900    restoring indexes for collection mongodb.mongocollection from metadata\n2016-02-14T23:51:27.054+0900    finished restoring mongodb.mongocollection (33 documents)\n2016-02-14T23:51:27.054+0900    done\n\n\n\u79fb\u884c\u5f8c\u78ba\u8a8d\n\u79fb\u884c\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5185\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4ef6\u6570\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002\n\u79fb\u884c\u524d/\u79fb\u884c\u5f8c\u540c\u3058\u4ef6\u6570\u306a\u306e\u3067\u7121\u4e8b\u79fb\u884c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u79fb\u884c\u524d\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5185\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4ef6\u6570\n\n$ mongo --port=27017\nMongoDB shell version: 3.0.9\nconnecting to: 127.0.0.1:27017/test\nmongos> use mongodb;\nswitched to db mongodb\nmongos> db.mongocollection.find().count();\n33\n\n\n\u79fb\u884c\u5f8c\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5185\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4ef6\u6570\n\n$ mongo --port=37017\nMongoDB shell version: 3.0.9\nconnecting to: 127.0.0.1:37017/test\nmongos> use mongodb;\nswitched to db mongodb\nmongos> db.mongocollection.find().count();\n33\n\n\nshard\u306e\u72b6\u614b\u3092\u78ba\u8a8d\n\n\u79fb\u884c\u524d\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u305f\u30b7\u30e3\u30fc\u30c9\u30ad\u30fc\u304c\u5265\u304c\u308c\u3061\u3083\u3063\u3066\u307e\u3059\u3002\n\u304c\u3001\u4eca\u56de\u306f1\u30b7\u30e3\u30fc\u30c9\u306b\u7e2e\u5c0f\u3057\u305f\u306e\u3067\u623b\u3059\u5fc5\u8981\u306f\u306a\u3044\u3067\u3059\u3002\nmongos> sh.status()\n--- Sharding Status ---\n  sharding version: {\n        \"_id\" : 1,\n        \"minCompatibleVersion\" : 5,\n        \"currentVersion\" : 6,\n        \"clusterId\" : ObjectId(\"56c081bccabb5eff10c1c995\")\n}\n  shards:\n        {  \"_id\" : \"mongodb_replicaset00\",  \"host\" : \"mongodb_replicaset00/172.16.11.21:27017,172.16.11.22:27017\" }\n  balancer:\n        Currently enabled:  yes\n        Currently running:  no\n        Failed balancer rounds in last 5 attempts:  0\n        Migration Results for the last 24 hours:\n                No recent migrations\n  databases:\n        {  \"_id\" : \"admin\",  \"partitioned\" : false,  \"primary\" : \"config\" }\n        {  \"_id\" : \"newmongodb\",  \"partitioned\" : false,  \"primary\" : \"mongodb_replicaset00\" }\n        {  \"_id\" : \"mongodb\",  \"partitioned\" : false,  \"primary\" : \"mongodb_replicaset00\" }\n\nmongos>\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3(mongos)\u65b0\u74b0\u5883\u3078\u306e\u5207\u66ff\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306emongos\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u65b0\u74b0\u5883\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\u79fb\u884c\u524d\u74b0\u5883\u306emongodb\u30af\u30e9\u30b9\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308bmongos\u3092\u505c\u6b62\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3067\u79fb\u884c\u3068\u5207\u66ff\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n\u79fb\u884c\u524d\u74b0\u5883\u306e\u7834\u68c4\n\u5207\u66ff\u5f8c\u3001\u7279\u306b\u554f\u984c\u306a\u3051\u308c\u3070\u79fb\u884c\u524d\u306emongodb\u30af\u30e9\u30b9\u30bf\u3092\u7834\u68c4\u3057\u307e\u3059\u3002\n\u3055\u3055\u3084\u304d\u3000\u3048\u3044\u3057\u3087\u3046\u3000\u3044\u306e\u308a\u3000terminate\n\u304a\u308f\u308a\u3002\n\n\u304a\u307e\u3051\n\n\u30b7\u30e3\u30fc\u30c9\u306e\u30b9\u30b1\u30fc\u30eb\u30a4\u30f3\n\u4eca\u56de\u306e\u3088\u3046\u306b\u4f5c\u308a\u76f4\u3057\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30b7\u30e3\u30fc\u30c9\u3060\u3051\u30b9\u30b1\u30fc\u30eb\u30a4\u30f3\u3057\u305f\u3044\u6642\u306f\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u53ef\u80fd\u3067\u3059\u3002\nremoveShard\u3092\u4f7f\u3044\u307e\u3059\u3002\nremoveShard\u306f2\u56de\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\ndraining -> drop\u306e\u9806\u3067\u72b6\u614b\u304c\u5909\u5316\u3057\u307e\u3059\u3002\n\n\u30b7\u30e3\u30fc\u30c9\u306edraining\n\nmongos> sh.status();\n\u79fb\u884c\u524d\u306e\u30b7\u30e3\u30fc\u30c9\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\nmongos> use admin\nmongos> db.runCommand( { removeShard: \"shard01\" } );\n{\n        \"msg\" : \"draining ongoing\",\n        \"state\" : \"ongoing\",\n        \"remaining\" : {\n                \"chunks\" : NumberLong(0),\n                \"dbs\" : NumberLong(2)\n        },\n        \"note\" : \"you need to drop or movePrimary these databases\",\n        \"dbsToMove\" : [\n                \"mongocollection\",\n                \"test\"\n        ],\n        \"ok\" : 1\n}\n\n\n\u30b7\u30e3\u30fc\u30c9\u306e\u78ba\u8a8d\u3068Primary\u30b7\u30e3\u30fc\u30c9\u306e\u5909\u66f4\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u6240\u5c5e\u3059\u308bPrimary\u30b7\u30e3\u30fc\u30c9\u304c\u524a\u9664\u5bfe\u8c61\u306e\u30b7\u30e3\u30fc\u30c9\u3060\u3063\u305f\u5834\u5408\u3001\n2\u56de\u76ee\u306eremoveShard\u5b9f\u884c\u6642\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n\u524a\u9664\u5bfe\u8c61\u306e\u30b7\u30e3\u30fc\u30c9\u306bPrimary\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u5b58\u5728\u3059\u308b\u3068\u30a8\u30e9\u30fc\n\nmongos> db.runCommand( { removeShard: \"shard01\" } );\n{\n        \"msg\" : \"draining ongoing\",\n        \"state\" : \"ongoing\",\n        \"remaining\" : {\n                \"chunks\" : NumberLong(0),\n                \"dbs\" : NumberLong(2)\n        },\n        \"note\" : \"you need to drop or movePrimary these databases\",\n        \"dbsToMove\" : [\n                \"mongocollection\",\n                \"test\"\n        ],\n        \"ok\" : 1\n}\n\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306ePrimary\u30b7\u30e3\u30fc\u30c9\u5909\u66f4\n\nmongos> sh.status();\n\u30c1\u30e3\u30f3\u30af\u304c\u5168\u3066\u6b8b\u3059\u30b7\u30e3\u30fc\u30c9\u306b\u5bc4\u3063\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\nmongos> db.runCommand( { movePrimary: \"mongocollection\", to :\"shard00\" } );\n{\n        \"primary \" : \"shard00:shard00/172.16.10.21:27017,172.16.10.22:27017,172.16.10.23:27017\",\n        \"ok\" : 1\n}\nmongos> sh.status()\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306ePrimary\u30b7\u30e3\u30fc\u30c9\u304c\u524a\u9664\u5bfe\u8c61\u3067\u306f\u306a\u3044\u30b7\u30e3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n\n\n\u30b7\u30e3\u30fc\u30c9\u306e\u524a\u9664\n\n\u30c1\u30e3\u30f3\u30af\u304c\u5168\u3066\u6b8b\u5b58\u30b7\u30e3\u30fc\u30c9\u306b\u79fb\u52d5\u3057\u3066\u3044\u308b\u3053\u3068\u3002\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306ePrimary\u30b7\u30e3\u30fc\u30c9\u304c\u6b8b\u5b58\u30b7\u30e3\u30fc\u30c9\u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3002\n\u4ee5\u4e0a\u304cOK\u3060\u3063\u305f\u3089\u30b7\u30e3\u30fc\u30c9\u3092\u524a\u9664\u3057\u307e\u3059\u3002\u3055\u3088\u306a\u3089~\nmongos> use admin\nmongos> db.runCommand( { removeShard: \"shard01\" } );\n{\n        \"msg\" : \"removeshard completed successfully\",\n        \"state\" : \"completed\",\n        \"shard\" : \"shard01\",\n        \"ok\" : 1\n}\n\n\u304a\u308f\u308a\u306e\u304a\u308f\u308a\u3002\n\n\n\u4ffa\u3067\u3059\u3002\n\u6e80\u3092\u6301\u3057\u3066\u6e96\u5099\u3057\u305fmongodb\u3082\u3001\u6642\u306b\u306f\u80b2\u305f\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3093\u306a\u3068\u304d\u306f\u30b9\u30b1\u30fc\u30eb\u30a4\u30f3\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n\u4eca\u56de\u306f\u80b2\u305f\u306a\u304b\u3063\u305fmongodb\u3092\u4f9b\u990a\u3057\u3066\u3001\u5c0f\u3055\u3044\u5f62\u3067\u8f2a\u5efb\u8ee2\u751f\u3055\u305b\u308b\u8a71\u3067\u3059\u3002\n\n# \u6761\u4ef6\u3068\u79fb\u884c\u524d\u79fb\u884c\u5f8c\n\n- \u79fb\u884c\u4e2d\u306f\u30b5\u30fc\u30d3\u30b9\u505c\u6b62\u3092\u4f34\u3046\n- mongodb\u30af\u30e9\u30b9\u30bf\u306e\u30b7\u30e3\u30fc\u30c9\u3092\u524a\u9664\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u65b0\u3057\u304f\u6e96\u5099\u3059\u308b\n- mongodump\u3067\u9759\u6b62\u70b9\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u53d6\u5f97\u3057\u3066mongorestore\u3067DB\u5358\u4f4d\u306e\u30ea\u30b9\u30c8\u30a2\u3092\u5b9f\u884c\u3059\u308b\n- \u5404mongodb\u30af\u30e9\u30b9\u30bf\u306b\u4f5c\u3089\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u53ca\u3073\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u30d0\u30c3\u30c6\u30a3\u30f3\u30b0\u3057\u306a\u3044\u3053\u3068(\u6f70\u3057\u3066\u3057\u307e\u3046\u306e\u3067)\n\n## as is\n\n- mongodb cluster *2\n- cluster\u5185\u306e\u30ed\u30fc\u30eb\n\t- conf * 3\n\t- shard * 2\n\t\t- replica set *2(member *3)\n\n\u8a08 18(9*2)\u53f0\n\n\u5404\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3067mongos\u304c\u8d77\u52d5\u3057\u3001mongos\u7d4c\u7531\u3067mongodb\u30af\u30e9\u30b9\u30bf\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n## to be\n\n- mongodb cluster *1\n- cluster\u5185\u306e\u30ed\u30fc\u30eb\n\t- shard * 1\n\t- replica set *1\n\t- conf + replica set member *3\n\n\u8a08 3\u53f0\n\n\u5404\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0\u3067mongos\u304c\u8d77\u52d5\u3057\u3001mongos\u7d4c\u7531\u3067mongodb\u30af\u30e9\u30b9\u30bf\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n# \u79fb\u884c\u5f8c\u30e2\u30f3\u30b4\u306e\u69cb\u7bc9\n\n## mongodb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nAmazon Linux 2015.09\u306a\u3089\u73fe\u6642\u70b9\u3067mongodb 3.0.9-1\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\n\u3088\u30fc\u3057\u304a\u5144\u3055\u3093WiredTiger\u4f7f\u3063\u3061\u3083\u3046\u305e\u30fc\n\n```\n$ sudo yum install mongodb -y\n```\n\n## mongodb config(metadata)\u7528\u5b9a\u7fa9\n\n- /etc/mongoc.conf\n\n```\n# mongodb config\n\nsystemLog:\n  destination: file\n  path: /var/log/mongodb/mongod_config_27019.log\n  logAppend: true\nprocessManagement:\n  fork: true\n  pidFilePath: /var/run/mongodb/mongod_config_27019.pid\nnet:\n  port: 27019\nstorage:\n  dbPath: \"/var/lib/mongodb/mongoc\"\n  engine: wiredTiger\n  wiredTiger:\n    engineConfig:\n      journalCompressor: none # default snappy\n    collectionConfig:\n      blockCompressor: none # default snappy\nsharding:\n  clusterRole: \"configsvr\"\n```\n\n- /etc/init.d/mongoc\n\nmongo config\u306e\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u6e96\u5099\u3057\u307e\u3059\u3002\nyum\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305fmongodb\u306einit\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u3066\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n- mongoc\u306e\u8d77\u52d5\n\n```\n$ sudo service mongoc start\n```\n\n\n## mongodb shard(replicaset)\u7528\u5b9a\u7fa9\n\n\u3044\u3064\u304b\u307e\u305f\u5927\u304d\u304f\u80b2\u3064\u3053\u3068\u3092\u7948\u308a\u3001replSetName\u306b\u30aa\u30ea\u30b8\u30f300\u3092\u6307\u5b9a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n- /etc/mongod.conf\n\n```\n# mongodb mongod\n\nsystemLog:\n  destination: file\n  path: /var/log/mongodb/mongod_27017.log\n  logAppend: true\nprocessManagement:\n  fork: true\n  pidFilePath: /var/run/mongodb/mongod_27017.pid\nnet:\n  port: 27017\nstorage:\n  dbPath: \"/var/lib/mongodb/mongod\"\n  engine: wiredTiger\n  wiredTiger:\n    engineConfig:\n      journalCompressor: none # default snappy\n    collectionConfig:\n      blockCompressor: none # default snappy\nreplication:\n  replSetName: \"mongodb_replicaset00\"\nsharding:\n  clusterRole: \"shardsvr\"\n```\n\n- /etc/init.d/mongod\n\nmongod\u306e\u8d77\u52d5\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nyum\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305fmongodb\u306einit\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u3066\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n- mongod\u306e\u8d77\u52d5\n\n```\n$ sudo service mongod start\n```\n\n\u4ee5\u4e0a\u3067\u65b0\u74b0\u5883\u306emongo config/mongod\u304c\u8d77\u52d5\u3057\u307e\u3057\u305f\u3002\n\n## replica set\u306e\u4f5c\u6210\n\n3\u53f0\u30d0\u30e9\u30d0\u30e9\u306b\u306a\u3063\u3066\u3044\u308b\u30e2\u30f3\u30b4\u306e\u30cf\u30fc\u30c8\u3092\u4e00\u3064\u306b\u3057\u307e\u3059\u3002\n\n- Primary\u306b\u3059\u308bmongodb\u30ce\u30fc\u30c9\u3067\u64cd\u4f5c\n\n```\n$ mongo --port=27017\nmongod> config = {   \"_id\": \"mongodb_replicaset00\",   \"members\": [     { \"_id\": 0, \"host\": '172.16.11.21:27017'},     { \"_id\": 1, \"host\": '172.16.11.22:27017'},     { \"_id\": 2, \"host\": '172.16.11.23:27017'}     ] }\nmongod> rs.initiate(config);\nPRIMARY\n```\n\n\n## backup\u7528replica set member\u306e\u8a2d\u5b9a\n\nreplica set member\u306f3\u53f0\u3042\u308b\u306e\u3067\u30011\u53f0\u3092hidden\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n- backup\u7528replica set member\n\n\u4eca\u56de\u306f\"_id\":\"1\"\u306emember\u3092hidden member\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```\nmongodb_replicaset00:PRIMARY> cfg = rs.config()\n{\n        \"_id\" : \"mongodb_replicaset00\",\n        \"version\" : 2,\n        \"members\" : [\n                {\n                        \"_id\" : 0,\n                        \"host\" : \"172.16.11.21:27017\",\n                        \"arbiterOnly\" : false,\n                        \"buildIndexes\" : true,\n                        \"hidden\" : false,\n                        \"priority\" : 1,\n                        \"tags\" : {\n\n                        },\n                        \"slaveDelay\" : 0,\n                        \"votes\" : 1\n                },\n                {\n                        \"_id\" : 1,\n                        \"host\" : \"172.16.11.22:27017\",\n                        \"arbiterOnly\" : false,\n                        \"buildIndexes\" : true,\n                        \"hidden\" : false,\n                        \"priority\" : 1,\n                        \"tags\" : {\n\n                        },\n                        \"slaveDelay\" : 0,\n                        \"votes\" : 1\n                },\n                {\n                        \"_id\" : 2,\n                        \"host\" : \"172.16.11.23:27017\",\n                        \"arbiterOnly\" : false,\n                        \"buildIndexes\" : true,\n                        \"hidden\" : false,\n                        \"priority\" : 0,\n                        \"tags\" : {\n\n                        },\n                        \"slaveDelay\" : 0,\n                        \"votes\" : 1\n                }\n        ],\n        \"settings\" : {\n                \"chainingAllowed\" : true,\n                \"heartbeatTimeoutSecs\" : 10,\n                \"getLastErrorModes\" : {\n\n                },\n                \"getLastErrorDefaults\" : {\n                        \"w\" : 1,\n                        \"wtimeout\" : 0\n                }\n        }\n}  \nmongodb_replicaset00:PRIMARY> cfg.members[2].priority = 0\n0\nmongodb_replicaset00:PRIMARY> cfg.members[2].hidden = true\ntrue\nmongodb_replicaset00:PRIMARY> rs.reconfig(cfg)\n{\n        \"ok\" : 1,\n        \"$gleStats\" : {\n                \"lastOpTime\" : Timestamp(1455458942, 1),\n                \"electionId\" : ObjectId(\"56c07ea680f80b802b651ba2\")\n        }\n}\nmongodb_replicaset00:PRIMARY>rs.config()\nmongodb_replicaset00:PRIMARY> rs.config()\n{\n        \"_id\" : \"mongodb_replicaset00\",\n        \"version\" : 2,\n        \"members\" : [\n                {\n                        \"_id\" : 0,\n                        \"host\" : \"172.16.11.21:27017\",\n                        \"arbiterOnly\" : false,\n                        \"buildIndexes\" : true,\n                        \"hidden\" : false,\n                        \"priority\" : 1,\n                        \"tags\" : {\n\n                        },\n                        \"slaveDelay\" : 0,\n                        \"votes\" : 1\n                },\n                {\n                        \"_id\" : 1,\n                        \"host\" : \"172.16.11.22:27017\",\n                        \"arbiterOnly\" : false,\n                        \"buildIndexes\" : true,\n                        \"hidden\" : false,\n                        \"priority\" : 1,\n                        \"tags\" : {\n\n                        },\n                        \"slaveDelay\" : 0,\n                        \"votes\" : 1\n                },\n                {\n                        \"_id\" : 2,\n                        \"host\" : \"172.16.11.23:27017\",\n                        \"arbiterOnly\" : false,\n                        \"buildIndexes\" : true,\n                        \"hidden\" : true,\n                        \"priority\" : 0,\n                        \"tags\" : {\n\n                        },\n                        \"slaveDelay\" : 0,\n                        \"votes\" : 1\n                }\n        ],\n        \"settings\" : {\n                \"chainingAllowed\" : true,\n                \"heartbeatTimeoutSecs\" : 10,\n                \"getLastErrorModes\" : {\n\n                },\n                \"getLastErrorDefaults\" : {\n                        \"w\" : 1,\n                        \"wtimeout\" : 0\n                }\n        }\n}          \n```\n\n\n# \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30fc\u30d0(mongos)\u306e\u8a2d\u5b9a\n\n## \u65b0\u30af\u30e9\u30b9\u30bf\u7528mongos\u5b9a\u7fa9\u4f5c\u6210\n\n\u65b0\u3057\u3044mongo cluster\u3078\u306e\u63a5\u7d9a\u5b9a\u7fa9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u65b0\u3057\u3044mongo cluster\u306emongo config\u30ce\u30fc\u30c9\u306eIP\u306fDNS\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4e0a\u306fmongod\u306e\u30ce\u30fc\u30c9\u540d\u3082DNS\u304bhosts\u3067\u540d\u524d\u89e3\u6c7a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u306e\u304c\u63a8\u5968\u3055\u308c\u3066\u305f\u306f\u305a..)\n\n- /etc/mongos.conf\n\n```\n  # mongos(mongodb router)\n\nsystemLog:\n  destination: file\n  path: /var/log/mongodb/mongos.log\n  logAppend: true\nprocessManagement:\n  fork: true\n  pidFilePath: /var/run/mongodb/mongos.pid\nnet:\n  port: 37017\nsharding:\n  configDB: mongodb-conf0.mongo.internal:27019,mongodb-conf1.mongo.internal:27019,mongodb-conf2.mongo.internal:27019\n```\n\n- /etc/init.d/mongos-new\n\nmongos\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u3066\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n## mongos\u8d77\u52d5\n\n- command\n\n```\n$ sudo service mongos-new start\n```\n\n# \u30b7\u30e3\u30fc\u30c9\u306e\u8a2d\u5b9a\n\n\u65b0mongos\u306e\u8a2d\u5b9a\u5b8c\u4e86\u6e08\u307f\u306e\u30b5\u30fc\u30d0\u3067\u4f5c\u696d\u3059\u308b\n\n\n\n## \u30b7\u30e3\u30fc\u30c9\u8ffd\u52a0\n\n```\n$ mongo --port=37017\nmongos> sh.status()\n--- Sharding Status ---\n  sharding version: {\n        \"_id\" : 1,\n        \"minCompatibleVersion\" : 5,\n        \"currentVersion\" : 6,\n        \"clusterId\" : ObjectId(\"56c081bccabb5eff10c1c995\")\n}\n  shards:\n  balancer:\n        Currently enabled:  yes\n        Currently running:  no\n        Failed balancer rounds in last 5 attempts:  0\n        Migration Results for the last 24 hours:\n                No recent migrations\n  databases:\n        {  \"_id\" : \"admin\",  \"partitioned\" : false,  \"primary\" : \"config\" }\nmongos> sh.addShard(\"mongodb_replicaset00/172.16.11.21:27017\");\n{ \"shardAdded\" : \"mongodb_replicaset00\", \"ok\" : 1 }\nmongos> sh.status()\n--- Sharding Status ---\n  sharding version: {\n        \"_id\" : 1,\n        \"minCompatibleVersion\" : 5,\n        \"currentVersion\" : 6,\n        \"clusterId\" : ObjectId(\"56c081bccabb5eff10c1c995\")\n}\n  shards:\n        {  \"_id\" : \"mongodb_replicaset00\",  \"host\" : \"mongodb_replicaset00/172.16.11.21:27017,172.16.11.22:27017,172.16.11.23:27017\" }\n  balancer:\n        Currently enabled:  yes\n        Currently running:  no\n        Failed balancer rounds in last 5 attempts:  0\n        Migration Results for the last 24 hours:\n                No recent migrations\n  databases:\n        {  \"_id\" : \"admin\",  \"partitioned\" : false,  \"primary\" : \"config\" }\n```\n\n\n## \u30c6\u30b9\u30c8\u7528\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\nnewmongodb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f5c\u308a\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3newshard_test\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n- mongos\u3067\u306e\u4f5c\u696d\n\n```\nmongos> use newmongodb\nmongos> db.createCollection(\"newshard_test\");\n{\n        \"ok\" : 1,\n        \"$gleStats\" : {\n                \"lastOpTime\" : Timestamp(1455458157, 1),\n                \"electionId\" : ObjectId(\"56c07ea680f80b802b651ba2\")\n        }\n}\n```\n\n- replica set member(primary)\u3067\u306e\u78ba\u8a8d\n\nmongos\u7d4c\u7531\u3067\u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u3001PRIMARY\u304b\u3089\u3082\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\n```\n$ mongo --port=37017\nmongodb_replicaset00:PRIMARY> show dbs\nconfig  0.000GB\nlocal   0.000GB\nnewmongodb    0.000GB\nmongodb_replicaset00:PRIMARY> use newmongodb\nswitched to db newmongodb\nmongodb_replicaset00:PRIMARY> show collections;\nnewshard_test\n```\n## \u30c6\u30b9\u30c8\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u633f\u5165\n\n- newmongodb.newshard_test\u306bnewshard_test\u3068\u3044\u3046\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u633f\u5165\u3059\u308b\n\n```\nmongos> db.createCollection(\"newshard_test\");\n{\n        \"ok\" : 1,\n        \"$gleStats\" : {\n                \"lastOpTime\" : Timestamp(1455458157, 1),\n                \"electionId\" : ObjectId(\"56c07ea680f80b802b651ba2\")\n        }\n}\n```\n\n\n\u3053\u308c\u3067\u65b0mongodb cluster\u306e\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\n# mongodb\u306e\u30c7\u30fc\u30bf\u79fb\u884c\n\n- \u30b5\u30fc\u30d3\u30b9\u505c\u6b62\n\n\u8f2a\u5efb\u8ee2\u751f\u3059\u308b\u30e2\u30f3\u30b4\u3092\u4f7f\u3046\u30b5\u30fc\u30d3\u30b9\u306bDB write\u304c\u8d70\u3089\u306a\u3044\u3088\u3046\u3001\u30e1\u30f3\u30c6\u5165\u308c\u3059\u308b\u306a\u308a\u3057\u307e\u3059\u3002\n\n## \u79fb\u884c\u5143\u306e\u74b0\u5883\u304b\u3089mongodump\n\n- Balancer\u306e\u505c\u6b62\u3068mongodump\n\n\u4eca\u56de\u306f\u524d\u63d0\u6761\u4ef6\u306e\u901a\u308a\u306bmongos\u7d4c\u7531\u3067mongodump\u3057\u307e\u3059\u3002\ndump\u524d\u306bBalancer\u3092\u6b62\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\n- - Balancer\u306e\u505c\u6b62\n\n\u79fb\u884c\u5bfe\u8c61\u306emongodb cluster\u5168\u3066\u306b\u5bfe\u3057\u3066Balancer\u505c\u6b62\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\n$ mongo --port=27017\nmongos> sh.status();\nmongos> sh.stopBalancer();\nmongos> sh.disableBalancing(true);\nmongos> sh.status();\n\u203bBalancer\u304c\u505c\u6b62\u3057\u3066\u3044\u308b\u3053\u3068\n$ mongo --port=27117\nmongos> sh.status();\nmongos> sh.stopBalancer();\nmongos> sh.disableBalancing(true);\nmongos> sh.status();\n\u203bBalancer\u304c\u505c\u6b62\u3057\u3066\u3044\u308b\u3053\u3068\n\n```\n\n- mongodump\n\nmongodb cluster\u306e\u6570\u3060\u3051mongos\u7d4c\u7531\u3067mongodump\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\n$ mongodump --port=27017 --out=mongodbcluster_shard_dump\n$ mongodump --port=27117 --out=mongocluster2_shard_dump\n```\n\n## \u79fb\u884c\u5148\u306e\u74b0\u5883\u3078mongorestore\n\ndb\u6570\u5206mongorestore\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n- full restore\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\nconfig database\u306f\u30ea\u30b9\u30c8\u30a2\u3067\u304d\u307e\u305b\u3093\u3088\u3068\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u3002\n\n```\n$ mongorestore --port=37017 --dir=mongodbcluster_shard_dump/\n2016-02-14T23:50:39.692+0900    building a list of dbs and collections to restore from mongodbcluster_shard_dump/ dir\n2016-02-14T23:50:39.693+0900    Failed: cannot do a full restore on a sharded system - remove the 'config' directory from the dump directory first\n```\n\n\n- db\u5358\u4f4d\u3067mongorestore\u3059\u308b\n\n```\n$ mongorestore --port=37017 --db=mongodb --dir=mongodbcluster_shard_dump/mongodb/\n2016-02-14T23:51:25.823+0900    building a list of collections to restore from mongodbcluster_shard_dump/mongodb/ dir\n2016-02-14T23:51:25.860+0900    reading metadata file from mongodbcluster_shard_dump/mongodb/mongocollection.metadata.json\n2016-02-14T23:51:25.862+0900    restoring mongodb.mongocollection from file mongodbcluster_shard_dump/mongodb/mongocollection.bson\n2016-02-14T23:51:27.035+0900    restoring indexes for collection mongodb.mongocollection from metadata\n2016-02-14T23:51:27.054+0900    finished restoring mongodb.mongocollection (33 documents)\n2016-02-14T23:51:27.054+0900    done\n```\n\n## \u79fb\u884c\u5f8c\u78ba\u8a8d\n\n\n\u79fb\u884c\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5185\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4ef6\u6570\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002\n\u79fb\u884c\u524d/\u79fb\u884c\u5f8c\u540c\u3058\u4ef6\u6570\u306a\u306e\u3067\u7121\u4e8b\u79fb\u884c\u3067\u304d\u307e\u3057\u305f\u3002\n\n- \u79fb\u884c\u524d\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5185\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4ef6\u6570\n\n```\n$ mongo --port=27017\nMongoDB shell version: 3.0.9\nconnecting to: 127.0.0.1:27017/test\nmongos> use mongodb;\nswitched to db mongodb\nmongos> db.mongocollection.find().count();\n33\n```\n\n- \u79fb\u884c\u5f8c\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5185\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4ef6\u6570\n\n```\n$ mongo --port=37017\nMongoDB shell version: 3.0.9\nconnecting to: 127.0.0.1:37017/test\nmongos> use mongodb;\nswitched to db mongodb\nmongos> db.mongocollection.find().count();\n33\n```\n\n- shard\u306e\u72b6\u614b\u3092\u78ba\u8a8d\n\n\u79fb\u884c\u524d\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u305f\u30b7\u30e3\u30fc\u30c9\u30ad\u30fc\u304c\u5265\u304c\u308c\u3061\u3083\u3063\u3066\u307e\u3059\u3002\n\u304c\u3001\u4eca\u56de\u306f1\u30b7\u30e3\u30fc\u30c9\u306b\u7e2e\u5c0f\u3057\u305f\u306e\u3067\u623b\u3059\u5fc5\u8981\u306f\u306a\u3044\u3067\u3059\u3002\n\n\n```\nmongos> sh.status()\n--- Sharding Status ---\n  sharding version: {\n        \"_id\" : 1,\n        \"minCompatibleVersion\" : 5,\n        \"currentVersion\" : 6,\n        \"clusterId\" : ObjectId(\"56c081bccabb5eff10c1c995\")\n}\n  shards:\n        {  \"_id\" : \"mongodb_replicaset00\",  \"host\" : \"mongodb_replicaset00/172.16.11.21:27017,172.16.11.22:27017\" }\n  balancer:\n        Currently enabled:  yes\n        Currently running:  no\n        Failed balancer rounds in last 5 attempts:  0\n        Migration Results for the last 24 hours:\n                No recent migrations\n  databases:\n        {  \"_id\" : \"admin\",  \"partitioned\" : false,  \"primary\" : \"config\" }\n        {  \"_id\" : \"newmongodb\",  \"partitioned\" : false,  \"primary\" : \"mongodb_replicaset00\" }\n        {  \"_id\" : \"mongodb\",  \"partitioned\" : false,  \"primary\" : \"mongodb_replicaset00\" }\n\nmongos>\n```\n\n# \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3(mongos)\u65b0\u74b0\u5883\u3078\u306e\u5207\u66ff\n\n- \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306emongos\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u65b0\u74b0\u5883\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n- \u79fb\u884c\u524d\u74b0\u5883\u306emongodb\u30af\u30e9\u30b9\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308bmongos\u3092\u505c\u6b62\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3067\u79fb\u884c\u3068\u5207\u66ff\u306f\u5b8c\u4e86\u3067\u3059\u3002\n \n\n# \u79fb\u884c\u524d\u74b0\u5883\u306e\u7834\u68c4\n\n\u5207\u66ff\u5f8c\u3001\u7279\u306b\u554f\u984c\u306a\u3051\u308c\u3070\u79fb\u884c\u524d\u306emongodb\u30af\u30e9\u30b9\u30bf\u3092\u7834\u68c4\u3057\u307e\u3059\u3002\n\n`\u3055\u3055\u3084\u304d\u3000\u3048\u3044\u3057\u3087\u3046\u3000\u3044\u306e\u308a\u3000terminate`\n\n\u304a\u308f\u308a\u3002\n\n# \u304a\u307e\u3051\n\n## \u30b7\u30e3\u30fc\u30c9\u306e\u30b9\u30b1\u30fc\u30eb\u30a4\u30f3\n\n\u4eca\u56de\u306e\u3088\u3046\u306b\u4f5c\u308a\u76f4\u3057\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30b7\u30e3\u30fc\u30c9\u3060\u3051\u30b9\u30b1\u30fc\u30eb\u30a4\u30f3\u3057\u305f\u3044\u6642\u306f\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u53ef\u80fd\u3067\u3059\u3002\n\nremoveShard\u3092\u4f7f\u3044\u307e\u3059\u3002\nremoveShard\u306f2\u56de\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\ndraining -> drop\u306e\u9806\u3067\u72b6\u614b\u304c\u5909\u5316\u3057\u307e\u3059\u3002\n\n\n- \u30b7\u30e3\u30fc\u30c9\u306edraining\n\n```\nmongos> sh.status();\n\u79fb\u884c\u524d\u306e\u30b7\u30e3\u30fc\u30c9\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\nmongos> use admin\nmongos> db.runCommand( { removeShard: \"shard01\" } );\n{\n        \"msg\" : \"draining ongoing\",\n        \"state\" : \"ongoing\",\n        \"remaining\" : {\n                \"chunks\" : NumberLong(0),\n                \"dbs\" : NumberLong(2)\n        },\n        \"note\" : \"you need to drop or movePrimary these databases\",\n        \"dbsToMove\" : [\n                \"mongocollection\",\n                \"test\"\n        ],\n        \"ok\" : 1\n}\n```\n\n- \u30b7\u30e3\u30fc\u30c9\u306e\u78ba\u8a8d\u3068Primary\u30b7\u30e3\u30fc\u30c9\u306e\u5909\u66f4\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u6240\u5c5e\u3059\u308bPrimary\u30b7\u30e3\u30fc\u30c9\u304c\u524a\u9664\u5bfe\u8c61\u306e\u30b7\u30e3\u30fc\u30c9\u3060\u3063\u305f\u5834\u5408\u3001\n2\u56de\u76ee\u306eremoveShard\u5b9f\u884c\u6642\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n- \u524a\u9664\u5bfe\u8c61\u306e\u30b7\u30e3\u30fc\u30c9\u306bPrimary\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u5b58\u5728\u3059\u308b\u3068\u30a8\u30e9\u30fc\n\n```\nmongos> db.runCommand( { removeShard: \"shard01\" } );\n{\n        \"msg\" : \"draining ongoing\",\n        \"state\" : \"ongoing\",\n        \"remaining\" : {\n                \"chunks\" : NumberLong(0),\n                \"dbs\" : NumberLong(2)\n        },\n        \"note\" : \"you need to drop or movePrimary these databases\",\n        \"dbsToMove\" : [\n                \"mongocollection\",\n                \"test\"\n        ],\n        \"ok\" : 1\n}\n```\n\n- \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306ePrimary\u30b7\u30e3\u30fc\u30c9\u5909\u66f4\n\n```\nmongos> sh.status();\n\u30c1\u30e3\u30f3\u30af\u304c\u5168\u3066\u6b8b\u3059\u30b7\u30e3\u30fc\u30c9\u306b\u5bc4\u3063\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\nmongos> db.runCommand( { movePrimary: \"mongocollection\", to :\"shard00\" } );\n{\n        \"primary \" : \"shard00:shard00/172.16.10.21:27017,172.16.10.22:27017,172.16.10.23:27017\",\n        \"ok\" : 1\n}\nmongos> sh.status()\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306ePrimary\u30b7\u30e3\u30fc\u30c9\u304c\u524a\u9664\u5bfe\u8c61\u3067\u306f\u306a\u3044\u30b7\u30e3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n```\n\n- \u30b7\u30e3\u30fc\u30c9\u306e\u524a\u9664\n\n\u30c1\u30e3\u30f3\u30af\u304c\u5168\u3066\u6b8b\u5b58\u30b7\u30e3\u30fc\u30c9\u306b\u79fb\u52d5\u3057\u3066\u3044\u308b\u3053\u3068\u3002\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306ePrimary\u30b7\u30e3\u30fc\u30c9\u304c\u6b8b\u5b58\u30b7\u30e3\u30fc\u30c9\u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3002\n\n\u4ee5\u4e0a\u304cOK\u3060\u3063\u305f\u3089\u30b7\u30e3\u30fc\u30c9\u3092\u524a\u9664\u3057\u307e\u3059\u3002\u3055\u3088\u306a\u3089~\n\n```\nmongos> use admin\nmongos> db.runCommand( { removeShard: \"shard01\" } );\n{\n        \"msg\" : \"removeshard completed successfully\",\n        \"state\" : \"completed\",\n        \"shard\" : \"shard01\",\n        \"ok\" : 1\n}\n```\n\n\u304a\u308f\u308a\u306e\u304a\u308f\u308a\u3002\n", "tags": ["MongoDB", "\u4ffa\u3067\u3082\u308f\u304b\u308b\u30b7\u30ea\u30fc\u30ba"]}