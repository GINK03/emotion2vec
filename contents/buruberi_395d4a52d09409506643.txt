{"context": " More than 1 year has passed since last update.\n\n\u306a\u306b\u306f\u3068\u3082\u3042\u308cGetting Started\nAWS Management console\u304b\u3089\u3084\u3063\u3066\u307f\u308b\u3002\n\u305d\u306e\u5f8c\u306fcli\u304b\u3089\u3084\u3063\u3066\u307f\u308b\u3002\n\n\u53c2\u8003URL\nhttp://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GettingStartedDynamoDB.html\n\n\n\nStep 1: Before You Begin\n\nDownload SDK\n\u4e0a\u8a18URL\u306e\u8aac\u660e\u3067\u306fJava\u304bphp\u304b.NET\u7248\u3057\u304bDL\u3059\u308b\u8aac\u660e\u304c\u306a\u304b\u3063\u305f\u3002\nEclipse + AWS Toolkit for eclipse\u3000\u306f\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u305f\u3002AWS\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u81ea\u52d5\u3067Java sdk\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u958b\u59cb\u3055\u308c\u305f\u3002\n\nStep 2: Create Example Tables\n2\u3064\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u304c\u3042\u308b\u306e\u3067\u305d\u308c\u305e\u308c\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u611a\u76f4\u306b\u4f5c\u6210\u3057\u3066\u307f\u308b\n\n\uff11\u3064\u76ee\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3000Product Catalog\n\uff12\u3064\u76ee\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3000Forum Application\n\n\nCreating Tables\n\u3053\u308c\u304b\u3089\u4f5c\u6210\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u306f\u3053\u306e\u8aac\u660e\u7528\u3060\u3051\u3067\u306a\u304f\u5f8c\u3005\u306e\u4f7f\u7528\u3067\u3082\u4f7f\u7528\u3059\u308b\u306e\u3067\u6c17\u3092\u3064\u3051\u308b\u65e8\u306e\u8aac\u660e\u3042\u308a\n\nProduct Catalog\n\n\n\n\n\n\n\u3053\u308c\u30671\u3064\u76ee\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306f\u7d42\u308f\u308b\u3002\n2\u3064\u76ee\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306f\u3044\u3061\u3044\u3061\u30ad\u30e3\u30d7\u3063\u3066\u3044\u3089\u308c\u306a\u3044\u306e\u3067\u3055\u304f\u3055\u304f\u4f5c\u308b\u3002\nIndex\u306e\u3068\u3053\u3060\u3051\u4e0b\u8a18\u306e\u3088\u3046\u306b\nReply\u30c6\u30fc\u30d6\u30eb\u3060\u3051index\u4f5c\u6210\u3059\u308b\u306e\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\n\n\nStep 3: Load Data into Tables\njava\u304b\u3089\u4f5c\u6210\u3059\u308b\u3002\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u304c\u30ea\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a\u304c\u7121\u304f\u3001\u4eca\u56de\u30ab\u30ea\u30d5\u30a9\u30eb\u30cb\u30a2\u3067dynamo db\u306f\u4f5c\u6210\u3057\u305f\u306e\u3067\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u5c11\u3057\u4fee\u6b63\u3057\u305f\u3002\n\nGettingStartedLoadData.java\npackage com.amazonaws.codesamples;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Arrays;\nimport java.util.Date;\nimport java.util.HashSet;\nimport java.util.TimeZone;\n\nimport com.amazonaws.AmazonClientException;\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.auth.AWSCredentials;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient;\nimport com.amazonaws.services.dynamodbv2.document.DynamoDB;\nimport com.amazonaws.services.dynamodbv2.document.Item;\nimport com.amazonaws.services.dynamodbv2.document.Table;\n\n//add\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\n\npublic class GettingStartedLoadData {\n\n    //add\n    static AmazonDynamoDBClient dynamoDBClient = new AmazonDynamoDBClient(\n            new ProfileCredentialsProvider());\n\n    static DynamoDB dynamoDB = new DynamoDB(dynamoDBClient);\n\n    static SimpleDateFormat dateFormatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n    static String productCatalogTableName = \"ProductCatalog\";\n    static String forumTableName = \"Forum\";\n    static String threadTableName = \"Thread\";\n    static String replyTableName = \"Reply\";\n\n\n    public static void main(String[] args) throws Exception {\n\n        try {\n            //add\n            Region usWest1 = Region.getRegion(Regions.US_WEST_1);\n            dynamoDBClient.setRegion(usWest1);\n\n            loadSampleProducts(productCatalogTableName);\n            loadSampleForums(forumTableName);\n            loadSampleThreads(threadTableName);\n            loadSampleReplies(replyTableName);\n\n        } catch (AmazonServiceException ase) {\n            System.err.println(\"Data load script failed.\");\n        }\n    }\n\n    private static void loadSampleProducts(String tableName) {\n\n        Table table = dynamoDB.getTable(tableName);\n\n        try {\n\n            System.out.println(\"Adding data to \" + tableName);\n\n            Item item = new Item()\n                    .withPrimaryKey(\"Id\", 101)\n                    .withString(\"Title\", \"Book 101 Title\")\n                    .withString(\"ISBN\", \"111-1111111111\")\n                    .withStringSet(\"Authors\",\n                            new HashSet<String>(Arrays.asList(\"Author1\")))\n                    .withNumber(\"Price\", 2)\n                    .withString(\"Dimensions\", \"8.5 x 11.0 x 0.5\")\n                    .withNumber(\"PageCount\", 500)\n                    .withBoolean(\"InPublication\", true)\n                    .withString(\"ProductCategory\", \"Book\");\n            table.putItem(item);\n\n            item = new Item()\n                    .withPrimaryKey(\"Id\", 102)\n                    .withString(\"Title\", \"Book 102 Title\")\n                    .withString(\"ISBN\", \"222-2222222222\")\n                    .withStringSet(\n                            \"Authors\",\n                            new HashSet<String>(Arrays.asList(\"Author1\",\n                                    \"Author2\"))).withNumber(\"Price\", 20)\n                    .withString(\"Dimensions\", \"8.5 x 11.0 x 0.8\")\n                    .withNumber(\"PageCount\", 600)\n                    .withBoolean(\"InPublication\", true)\n                    .withString(\"ProductCategory\", \"Book\");\n            table.putItem(item);\n\n            item = new Item()\n                    .withPrimaryKey(\"Id\", 103)\n                    .withString(\"Title\", \"Book 103 Title\")\n                    .withString(\"ISBN\", \"333-3333333333\")\n                    .withStringSet(\n                            \"Authors\",\n                            new HashSet<String>(Arrays.asList(\"Author1\",\n                                    \"Author2\")))\n                    // Intentional. Later we run scan to find price error. Find\n                    // items > 1000 in price.\n                    .withNumber(\"Price\", 2000)\n                    .withString(\"Dimensions\", \"8.5 x 11.0 x 1.5\")\n                    .withNumber(\"PageCount\", 600)\n                    .withBoolean(\"InPublication\", false)\n                    .withString(\"ProductCategory\", \"Book\");\n            table.putItem(item);\n\n            // Add bikes.\n\n            item = new Item()\n                    .withPrimaryKey(\"Id\", 201)\n                    .withString(\"Title\", \"18-Bike-201\")\n                    // Size, followed by some title.\n                    .withString(\"Description\", \"201 Description\")\n                    .withString(\"BicycleType\", \"Road\")\n                    .withString(\"Brand\", \"Mountain A\")\n                    // Trek, Specialized.\n                    .withNumber(\"Price\", 100)\n                    .withString(\"Gender\", \"M\")\n                    // Men's\n                    .withStringSet(\"Color\",\n                            new HashSet<String>(Arrays.asList(\"Red\", \"Black\")))\n                    .withString(\"ProductCategory\", \"Bicycle\");\n            table.putItem(item);\n\n            item = new Item()\n                    .withPrimaryKey(\"Id\", 202)\n                    .withString(\"Title\", \"21-Bike-202\")\n                    .withString(\"Description\", \"202 Description\")\n                    .withString(\"BicycleType\", \"Road\")\n                    .withString(\"Brand\", \"Brand-Company A\")\n                    .withNumber(\"Price\", 200)\n                    .withString(\"Gender\", \"M\")\n                    .withStringSet(\n                            \"Color\",\n                            new HashSet<String>(Arrays.asList(\"Green\", \"Black\")))\n                    .withString(\"ProductCategory\", \"Bicycle\");\n            table.putItem(item);\n\n            item = new Item()\n                    .withPrimaryKey(\"Id\", 203)\n                    .withString(\"Title\", \"19-Bike-203\")\n                    .withString(\"Description\", \"203 Description\")\n                    .withString(\"BicycleType\", \"Road\")\n                    .withString(\"Brand\", \"Brand-Company B\")\n                    .withNumber(\"Price\", 300)\n                    .withString(\"Gender\", \"W\")\n                    // Women's\n                    .withStringSet(\n                            \"Color\",\n                            new HashSet<String>(Arrays.asList(\"Red\", \"Green\",\n                                    \"Black\")))\n                    .withString(\"ProductCategory\", \"Bicycle\");\n            table.putItem(item);\n\n            item = new Item()\n                    .withPrimaryKey(\"Id\", 204)\n                    .withString(\"Title\", \"18-Bike-204\")\n                    .withString(\"Description\", \"204 Description\")\n                    .withString(\"BicycleType\", \"Mountain\")\n                    .withString(\"Brand\", \"Brand-Company B\")\n                    .withNumber(\"Price\", 400)\n                    .withString(\"Gender\", \"W\")\n                    .withStringSet(\"Color\",\n                            new HashSet<String>(Arrays.asList(\"Red\")))\n                    .withString(\"ProductCategory\", \"Bicycle\");\n            table.putItem(item);\n\n            item = new Item()\n                    .withPrimaryKey(\"Id\", 205)\n                    .withString(\"Title\", \"20-Bike-205\")\n                    .withString(\"Description\", \"205 Description\")\n                    .withString(\"BicycleType\", \"Hybrid\")\n                    .withString(\"Brand\", \"Brand-Company C\")\n                    .withNumber(\"Price\", 500)\n                    .withString(\"Gender\", \"B\")\n                    // Boy's\n                    .withStringSet(\"Color\",\n                            new HashSet<String>(Arrays.asList(\"Red\", \"Black\")))\n                    .withString(\"ProductCategory\", \"Bicycle\");\n            table.putItem(item);\n\n        } catch (Exception e) {\n            System.err.println(\"Failed to create item in \" + tableName);\n            System.err.println(e.getMessage());\n        }\n\n    }\n\n    private static void loadSampleForums(String tableName) {\n\n        Table table = dynamoDB.getTable(tableName);\n\n        try {\n\n            System.out.println(\"Adding data to \" + tableName);\n\n            Item item = new Item().withPrimaryKey(\"Name\", \"Amazon DynamoDB\")\n                    .withString(\"Category\", \"Amazon Web Services\")\n                    .withNumber(\"Threads\", 2).withNumber(\"Messages\", 4)\n                    .withNumber(\"Views\", 1000);\n            table.putItem(item);\n\n            item = new Item().withPrimaryKey(\"Name\", \"Amazon S3\")\n                    .withString(\"Category\", \"Amazon Web Services\")\n                    .withNumber(\"Threads\", 0);\n            table.putItem(item);\n\n        } catch (Exception e) {\n            System.err.println(\"Failed to create item in \" + tableName);\n            System.err.println(e.getMessage());\n        }\n    }\n\n\n    private static void loadSampleThreads(String tableName) {\n        try {\n            long time1 = (new Date()).getTime() - (7 * 24 * 60 * 60 * 1000); // 7\n            // days\n            // ago\n            long time2 = (new Date()).getTime() - (14 * 24 * 60 * 60 * 1000); // 14\n            // days\n            // ago\n            long time3 = (new Date()).getTime() - (21 * 24 * 60 * 60 * 1000); // 21\n            // days\n            // ago\n\n            Date date1 = new Date();\n            date1.setTime(time1);\n\n            Date date2 = new Date();\n            date2.setTime(time2);\n\n            Date date3 = new Date();\n            date3.setTime(time3);\n\n            dateFormatter.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n            Table table = dynamoDB.getTable(tableName);\n\n            System.out.println(\"Adding data to \" + tableName);\n\n            Item item = new Item()\n                    .withPrimaryKey(\"ForumName\", \"Amazon DynamoDB\")\n                    .withString(\"Subject\", \"DynamoDB Thread 1\")\n                    .withString(\"Message\", \"DynamoDB thread 1 message\")\n                    .withString(\"LastPostedBy\", \"User A\")\n                    .withString(\"LastPostedDateTime\",\n                            dateFormatter.format(date2))\n                    .withNumber(\"Views\", 0)\n                    .withNumber(\"Replies\", 0)\n                    .withNumber(\"Answered\", 0)\n                    .withStringSet(\n                            \"Tags\",\n                            new HashSet<String>(Arrays.asList(\"index\",\n                                    \"primarykey\", \"table\")));\n            table.putItem(item);\n\n            item = new Item()\n                    .withPrimaryKey(\"ForumName\", \"Amazon DynamoDB\")\n                    .withString(\"Subject\", \"DynamoDB Thread 2\")\n                    .withString(\"Message\", \"DynamoDB thread 2 message\")\n                    .withString(\"LastPostedBy\", \"User A\")\n                    .withString(\"LastPostedDateTime\",\n                            dateFormatter.format(date3))\n                    .withNumber(\"Views\", 0)\n                    .withNumber(\"Replies\", 0)\n                    .withNumber(\"Answered\", 0)\n                    .withStringSet(\n                            \"Tags\",\n                            new HashSet<String>(Arrays.asList(\"index\",\n                                    \"primarykey\", \"rangekey\")));\n            table.putItem(item);\n\n            item = new Item()\n                    .withPrimaryKey(\"ForumName\", \"Amazon S3\")\n                    .withString(\"Subject\", \"S3 Thread 1\")\n                    .withString(\"Message\", \"S3 Thread 3 message\")\n                    .withString(\"LastPostedBy\", \"User A\")\n                    .withString(\"LastPostedDateTime\",\n                            dateFormatter.format(date1))\n                    .withNumber(\"Views\", 0)\n                    .withNumber(\"Replies\", 0)\n                    .withNumber(\"Answered\", 0)\n                    .withStringSet(\n                            \"Tags\",\n                            new HashSet<String>(Arrays.asList(\"largeobjects\",\n                                    \"multipart upload\")));\n            table.putItem(item);\n\n        } catch (Exception e) {\n            System.err.println(\"Failed to create item in \" + tableName);\n            System.err.println(e.getMessage());\n        }\n\n    }\n\n    private static void loadSampleReplies(String tableName) {\n        try {\n            // 1 day ago\n            long time0 = (new Date()).getTime() - (1 * 24 * 60 * 60 * 1000); \n            // 7 days ago\n            long time1 = (new Date()).getTime() - (7 * 24 * 60 * 60 * 1000); \n            // 14 days ago\n            long time2 = (new Date()).getTime() - (14 * 24 * 60 * 60 * 1000); \n            // 21 days ago\n            long time3 = (new Date()).getTime() - (21 * 24 * 60 * 60 * 1000);\n\n            Date date0 = new Date();\n            date0.setTime(time0);\n\n            Date date1 = new Date();\n            date1.setTime(time1);\n\n            Date date2 = new Date();\n            date2.setTime(time2);\n\n            Date date3 = new Date();\n            date3.setTime(time3);\n\n            dateFormatter.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n            Table table = dynamoDB.getTable(tableName);\n\n            System.out.println(\"Adding data to \" + tableName);\n\n            // Add threads.\n\n            Item item = new Item()\n                    .withPrimaryKey(\"Id\", \"Amazon DynamoDB#DynamoDB Thread 1\")\n                    .withString(\"ReplyDateTime\", (dateFormatter.format(date3)))\n                    .withString(\"Message\", \"DynamoDB Thread 1 Reply 1 text\")\n                    .withString(\"PostedBy\", \"User A\");\n            table.putItem(item);\n\n            item = new Item()\n                    .withPrimaryKey(\"Id\", \"Amazon DynamoDB#DynamoDB Thread 1\")\n                    .withString(\"ReplyDateTime\", dateFormatter.format(date2))\n                    .withString(\"Message\", \"DynamoDB Thread 1 Reply 2 text\")\n                    .withString(\"PostedBy\", \"User B\");\n            table.putItem(item);\n\n            item = new Item()\n                    .withPrimaryKey(\"Id\", \"Amazon DynamoDB#DynamoDB Thread 2\")\n                    .withString(\"ReplyDateTime\", dateFormatter.format(date1))\n                    .withString(\"Message\", \"DynamoDB Thread 2 Reply 1 text\")\n                    .withString(\"PostedBy\", \"User A\");\n            table.putItem(item);\n\n            item = new Item()\n                    .withPrimaryKey(\"Id\", \"Amazon DynamoDB#DynamoDB Thread 2\")\n                    .withString(\"ReplyDateTime\", dateFormatter.format(date0))\n                    .withString(\"Message\", \"DynamoDB Thread 2 Reply 2 text\")\n                    .withString(\"PostedBy\", \"User A\");\n            table.putItem(item);\n\n        } catch (Exception e) {\n            System.err.println(\"Failed to create item in \" + tableName);\n            System.err.println(e.getMessage());\n\n        }\n    }\n\n}\n\n\n##\u306a\u306b\u306f\u3068\u3082\u3042\u308cGetting Started\nAWS Management console\u304b\u3089\u3084\u3063\u3066\u307f\u308b\u3002\n\u305d\u306e\u5f8c\u306fcli\u304b\u3089\u3084\u3063\u3066\u307f\u308b\u3002\n\n- \u53c2\u8003URL\nhttp://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GettingStartedDynamoDB.html\n\n###Step 1: Before You Begin\n####Download SDK\n\u4e0a\u8a18URL\u306e\u8aac\u660e\u3067\u306fJava\u304bphp\u304b.NET\u7248\u3057\u304bDL\u3059\u308b\u8aac\u660e\u304c\u306a\u304b\u3063\u305f\u3002\n\nEclipse + AWS Toolkit for eclipse\u3000\u306f\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u305f\u3002AWS\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u81ea\u52d5\u3067Java sdk\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u304c\u958b\u59cb\u3055\u308c\u305f\u3002\n\n###Step 2: Create Example Tables\n2\u3064\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u304c\u3042\u308b\u306e\u3067\u305d\u308c\u305e\u308c\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u611a\u76f4\u306b\u4f5c\u6210\u3057\u3066\u307f\u308b\n\n- \uff11\u3064\u76ee\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3000Product Catalog\n- \uff12\u3064\u76ee\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u3000Forum Application\n\n\n\n####Creating Tables\n\u3053\u308c\u304b\u3089\u4f5c\u6210\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u306f\u3053\u306e\u8aac\u660e\u7528\u3060\u3051\u3067\u306a\u304f\u5f8c\u3005\u306e\u4f7f\u7528\u3067\u3082\u4f7f\u7528\u3059\u308b\u306e\u3067\u6c17\u3092\u3064\u3051\u308b\u65e8\u306e\u8aac\u660e\u3042\u308a\n\n#####Product Catalog\n\n![150117-0001.jpg](https://qiita-image-store.s3.amazonaws.com/0/34740/462f2567-4882-a94a-1010-6739b3ef7a36.jpeg \"150117-0001.jpg\")\n\n![150117-0002.jpg](https://qiita-image-store.s3.amazonaws.com/0/34740/6742ecfe-d475-aea7-83d6-2f504d690848.jpeg \"150117-0002.jpg\")\n![150117-0004.jpg](https://qiita-image-store.s3.amazonaws.com/0/34740/df8aa77a-d971-537f-0d65-fca86f920c2c.jpeg \"150117-0004.jpg\")\n![150117-0006.jpg](https://qiita-image-store.s3.amazonaws.com/0/34740/8c78f20d-1d02-a94e-f201-9da003ff200c.jpeg \"150117-0006.jpg\")\n![150117-0007.jpg](https://qiita-image-store.s3.amazonaws.com/0/34740/d4fad2f6-36bc-f307-b48a-2661513b7d04.jpeg \"150117-0007.jpg\")\n![150117-0008.jpg](https://qiita-image-store.s3.amazonaws.com/0/34740/b7c1e500-6fa3-fd0c-b232-ade0c38a2981.jpeg \"150117-0008.jpg\")\n\n\n\u3053\u308c\u30671\u3064\u76ee\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306f\u7d42\u308f\u308b\u3002\n2\u3064\u76ee\u306e\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306f\u3044\u3061\u3044\u3061\u30ad\u30e3\u30d7\u3063\u3066\u3044\u3089\u308c\u306a\u3044\u306e\u3067\u3055\u304f\u3055\u304f\u4f5c\u308b\u3002\n\nIndex\u306e\u3068\u3053\u3060\u3051\u4e0b\u8a18\u306e\u3088\u3046\u306b\nReply\u30c6\u30fc\u30d6\u30eb\u3060\u3051index\u4f5c\u6210\u3059\u308b\u306e\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\n![150117-0009.jpg](https://qiita-image-store.s3.amazonaws.com/0/34740/8a8991b4-9878-1d4e-ec03-3695af8f554e.jpeg \"150117-0009.jpg\")\n\n###Step 3: Load Data into Tables\njava\u304b\u3089\u4f5c\u6210\u3059\u308b\u3002\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u304c\u30ea\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a\u304c\u7121\u304f\u3001\u4eca\u56de\u30ab\u30ea\u30d5\u30a9\u30eb\u30cb\u30a2\u3067dynamo db\u306f\u4f5c\u6210\u3057\u305f\u306e\u3067\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u5c11\u3057\u4fee\u6b63\u3057\u305f\u3002\n\n```java:GettingStartedLoadData.java\npackage com.amazonaws.codesamples;\n\nimport java.text.SimpleDateFormat;\nimport java.util.Arrays;\nimport java.util.Date;\nimport java.util.HashSet;\nimport java.util.TimeZone;\n\nimport com.amazonaws.AmazonClientException;\nimport com.amazonaws.AmazonServiceException;\nimport com.amazonaws.auth.AWSCredentials;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient;\nimport com.amazonaws.services.dynamodbv2.document.DynamoDB;\nimport com.amazonaws.services.dynamodbv2.document.Item;\nimport com.amazonaws.services.dynamodbv2.document.Table;\n\n//add\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\n\npublic class GettingStartedLoadData {\n\n\t//add\n\tstatic AmazonDynamoDBClient dynamoDBClient = new AmazonDynamoDBClient(\n\t\t\tnew ProfileCredentialsProvider());\n\t\n\tstatic DynamoDB dynamoDB = new DynamoDB(dynamoDBClient);\n\t\n    static SimpleDateFormat dateFormatter = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\");\n    static String productCatalogTableName = \"ProductCatalog\";\n    static String forumTableName = \"Forum\";\n    static String threadTableName = \"Thread\";\n    static String replyTableName = \"Reply\";\n    \n    \n    public static void main(String[] args) throws Exception {\n\n        try {\n        \t//add\n        \tRegion usWest1 = Region.getRegion(Regions.US_WEST_1);\n        \tdynamoDBClient.setRegion(usWest1);\n        \t\n            loadSampleProducts(productCatalogTableName);\n            loadSampleForums(forumTableName);\n            loadSampleThreads(threadTableName);\n            loadSampleReplies(replyTableName);\n\n        } catch (AmazonServiceException ase) {\n            System.err.println(\"Data load script failed.\");\n        }\n    }\n    \n\tprivate static void loadSampleProducts(String tableName) {\n\n\t\tTable table = dynamoDB.getTable(tableName);\n\n\t\ttry {\n\n\t\t\tSystem.out.println(\"Adding data to \" + tableName);\n\n\t\t\tItem item = new Item()\n\t\t\t\t\t.withPrimaryKey(\"Id\", 101)\n\t\t\t\t\t.withString(\"Title\", \"Book 101 Title\")\n\t\t\t\t\t.withString(\"ISBN\", \"111-1111111111\")\n\t\t\t\t\t.withStringSet(\"Authors\",\n\t\t\t\t\t\t\tnew HashSet<String>(Arrays.asList(\"Author1\")))\n\t\t\t\t\t.withNumber(\"Price\", 2)\n\t\t\t\t\t.withString(\"Dimensions\", \"8.5 x 11.0 x 0.5\")\n\t\t\t\t\t.withNumber(\"PageCount\", 500)\n\t\t\t\t\t.withBoolean(\"InPublication\", true)\n\t\t\t\t\t.withString(\"ProductCategory\", \"Book\");\n\t\t\ttable.putItem(item);\n\n\t\t\titem = new Item()\n\t\t\t\t\t.withPrimaryKey(\"Id\", 102)\n\t\t\t\t\t.withString(\"Title\", \"Book 102 Title\")\n\t\t\t\t\t.withString(\"ISBN\", \"222-2222222222\")\n\t\t\t\t\t.withStringSet(\n\t\t\t\t\t\t\t\"Authors\",\n\t\t\t\t\t\t\tnew HashSet<String>(Arrays.asList(\"Author1\",\n\t\t\t\t\t\t\t\t\t\"Author2\"))).withNumber(\"Price\", 20)\n\t\t\t\t\t.withString(\"Dimensions\", \"8.5 x 11.0 x 0.8\")\n\t\t\t\t\t.withNumber(\"PageCount\", 600)\n\t\t\t\t\t.withBoolean(\"InPublication\", true)\n\t\t\t\t\t.withString(\"ProductCategory\", \"Book\");\n\t\t\ttable.putItem(item);\n\n\t\t\titem = new Item()\n\t\t\t\t\t.withPrimaryKey(\"Id\", 103)\n\t\t\t\t\t.withString(\"Title\", \"Book 103 Title\")\n\t\t\t\t\t.withString(\"ISBN\", \"333-3333333333\")\n\t\t\t\t\t.withStringSet(\n\t\t\t\t\t\t\t\"Authors\",\n\t\t\t\t\t\t\tnew HashSet<String>(Arrays.asList(\"Author1\",\n\t\t\t\t\t\t\t\t\t\"Author2\")))\n\t\t\t\t\t// Intentional. Later we run scan to find price error. Find\n\t\t\t\t\t// items > 1000 in price.\n\t\t\t\t\t.withNumber(\"Price\", 2000)\n\t\t\t\t\t.withString(\"Dimensions\", \"8.5 x 11.0 x 1.5\")\n\t\t\t\t\t.withNumber(\"PageCount\", 600)\n\t\t\t\t\t.withBoolean(\"InPublication\", false)\n\t\t\t\t\t.withString(\"ProductCategory\", \"Book\");\n\t\t\ttable.putItem(item);\n\n\t\t\t// Add bikes.\n\n\t\t\titem = new Item()\n\t\t\t\t\t.withPrimaryKey(\"Id\", 201)\n\t\t\t\t\t.withString(\"Title\", \"18-Bike-201\")\n\t\t\t\t\t// Size, followed by some title.\n\t\t\t\t\t.withString(\"Description\", \"201 Description\")\n\t\t\t\t\t.withString(\"BicycleType\", \"Road\")\n\t\t\t\t\t.withString(\"Brand\", \"Mountain A\")\n\t\t\t\t\t// Trek, Specialized.\n\t\t\t\t\t.withNumber(\"Price\", 100)\n\t\t\t\t\t.withString(\"Gender\", \"M\")\n\t\t\t\t\t// Men's\n\t\t\t\t\t.withStringSet(\"Color\",\n\t\t\t\t\t\t\tnew HashSet<String>(Arrays.asList(\"Red\", \"Black\")))\n\t\t\t\t\t.withString(\"ProductCategory\", \"Bicycle\");\n\t\t\ttable.putItem(item);\n\n\t\t\titem = new Item()\n\t\t\t\t\t.withPrimaryKey(\"Id\", 202)\n\t\t\t\t\t.withString(\"Title\", \"21-Bike-202\")\n\t\t\t\t\t.withString(\"Description\", \"202 Description\")\n\t\t\t\t\t.withString(\"BicycleType\", \"Road\")\n\t\t\t\t\t.withString(\"Brand\", \"Brand-Company A\")\n\t\t\t\t\t.withNumber(\"Price\", 200)\n\t\t\t\t\t.withString(\"Gender\", \"M\")\n\t\t\t\t\t.withStringSet(\n\t\t\t\t\t\t\t\"Color\",\n\t\t\t\t\t\t\tnew HashSet<String>(Arrays.asList(\"Green\", \"Black\")))\n\t\t\t\t\t.withString(\"ProductCategory\", \"Bicycle\");\n\t\t\ttable.putItem(item);\n\n\t\t\titem = new Item()\n\t\t\t\t\t.withPrimaryKey(\"Id\", 203)\n\t\t\t\t\t.withString(\"Title\", \"19-Bike-203\")\n\t\t\t\t\t.withString(\"Description\", \"203 Description\")\n\t\t\t\t\t.withString(\"BicycleType\", \"Road\")\n\t\t\t\t\t.withString(\"Brand\", \"Brand-Company B\")\n\t\t\t\t\t.withNumber(\"Price\", 300)\n\t\t\t\t\t.withString(\"Gender\", \"W\")\n\t\t\t\t\t// Women's\n\t\t\t\t\t.withStringSet(\n\t\t\t\t\t\t\t\"Color\",\n\t\t\t\t\t\t\tnew HashSet<String>(Arrays.asList(\"Red\", \"Green\",\n\t\t\t\t\t\t\t\t\t\"Black\")))\n\t\t\t\t\t.withString(\"ProductCategory\", \"Bicycle\");\n\t\t\ttable.putItem(item);\n\n\t\t\titem = new Item()\n\t\t\t\t\t.withPrimaryKey(\"Id\", 204)\n\t\t\t\t\t.withString(\"Title\", \"18-Bike-204\")\n\t\t\t\t\t.withString(\"Description\", \"204 Description\")\n\t\t\t\t\t.withString(\"BicycleType\", \"Mountain\")\n\t\t\t\t\t.withString(\"Brand\", \"Brand-Company B\")\n\t\t\t\t\t.withNumber(\"Price\", 400)\n\t\t\t\t\t.withString(\"Gender\", \"W\")\n\t\t\t\t\t.withStringSet(\"Color\",\n\t\t\t\t\t\t\tnew HashSet<String>(Arrays.asList(\"Red\")))\n\t\t\t\t\t.withString(\"ProductCategory\", \"Bicycle\");\n\t\t\ttable.putItem(item);\n\n\t\t\titem = new Item()\n\t\t\t\t\t.withPrimaryKey(\"Id\", 205)\n\t\t\t\t\t.withString(\"Title\", \"20-Bike-205\")\n\t\t\t\t\t.withString(\"Description\", \"205 Description\")\n\t\t\t\t\t.withString(\"BicycleType\", \"Hybrid\")\n\t\t\t\t\t.withString(\"Brand\", \"Brand-Company C\")\n\t\t\t\t\t.withNumber(\"Price\", 500)\n\t\t\t\t\t.withString(\"Gender\", \"B\")\n\t\t\t\t\t// Boy's\n\t\t\t\t\t.withStringSet(\"Color\",\n\t\t\t\t\t\t\tnew HashSet<String>(Arrays.asList(\"Red\", \"Black\")))\n\t\t\t\t\t.withString(\"ProductCategory\", \"Bicycle\");\n\t\t\ttable.putItem(item);\n\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Failed to create item in \" + tableName);\n\t\t\tSystem.err.println(e.getMessage());\n\t\t}\n\n\t}\n\n\tprivate static void loadSampleForums(String tableName) {\n\n\t\tTable table = dynamoDB.getTable(tableName);\n\n\t\ttry {\n\n\t\t\tSystem.out.println(\"Adding data to \" + tableName);\n\n\t\t\tItem item = new Item().withPrimaryKey(\"Name\", \"Amazon DynamoDB\")\n\t\t\t\t\t.withString(\"Category\", \"Amazon Web Services\")\n\t\t\t\t\t.withNumber(\"Threads\", 2).withNumber(\"Messages\", 4)\n\t\t\t\t\t.withNumber(\"Views\", 1000);\n\t\t\ttable.putItem(item);\n\n\t\t\titem = new Item().withPrimaryKey(\"Name\", \"Amazon S3\")\n\t\t\t\t\t.withString(\"Category\", \"Amazon Web Services\")\n\t\t\t\t\t.withNumber(\"Threads\", 0);\n\t\t\ttable.putItem(item);\n\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Failed to create item in \" + tableName);\n\t\t\tSystem.err.println(e.getMessage());\n\t\t}\n\t}\n\n\n\tprivate static void loadSampleThreads(String tableName) {\n\t\ttry {\n\t\t\tlong time1 = (new Date()).getTime() - (7 * 24 * 60 * 60 * 1000); // 7\n\t\t\t// days\n\t\t\t// ago\n\t\t\tlong time2 = (new Date()).getTime() - (14 * 24 * 60 * 60 * 1000); // 14\n\t\t\t// days\n\t\t\t// ago\n\t\t\tlong time3 = (new Date()).getTime() - (21 * 24 * 60 * 60 * 1000); // 21\n\t\t\t// days\n\t\t\t// ago\n\n\t\t\tDate date1 = new Date();\n\t\t\tdate1.setTime(time1);\n\n\t\t\tDate date2 = new Date();\n\t\t\tdate2.setTime(time2);\n\n\t\t\tDate date3 = new Date();\n\t\t\tdate3.setTime(time3);\n\n\t\t\tdateFormatter.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n\t\t\tTable table = dynamoDB.getTable(tableName);\n\n\t\t\tSystem.out.println(\"Adding data to \" + tableName);\n\n\t\t\tItem item = new Item()\n\t\t\t\t\t.withPrimaryKey(\"ForumName\", \"Amazon DynamoDB\")\n\t\t\t\t\t.withString(\"Subject\", \"DynamoDB Thread 1\")\n\t\t\t\t\t.withString(\"Message\", \"DynamoDB thread 1 message\")\n\t\t\t\t\t.withString(\"LastPostedBy\", \"User A\")\n\t\t\t\t\t.withString(\"LastPostedDateTime\",\n\t\t\t\t\t\t\tdateFormatter.format(date2))\n\t\t\t\t\t.withNumber(\"Views\", 0)\n\t\t\t\t\t.withNumber(\"Replies\", 0)\n\t\t\t\t\t.withNumber(\"Answered\", 0)\n\t\t\t\t\t.withStringSet(\n\t\t\t\t\t\t\t\"Tags\",\n\t\t\t\t\t\t\tnew HashSet<String>(Arrays.asList(\"index\",\n\t\t\t\t\t\t\t\t\t\"primarykey\", \"table\")));\n\t\t\ttable.putItem(item);\n\n\t\t\titem = new Item()\n\t\t\t\t\t.withPrimaryKey(\"ForumName\", \"Amazon DynamoDB\")\n\t\t\t\t\t.withString(\"Subject\", \"DynamoDB Thread 2\")\n\t\t\t\t\t.withString(\"Message\", \"DynamoDB thread 2 message\")\n\t\t\t\t\t.withString(\"LastPostedBy\", \"User A\")\n\t\t\t\t\t.withString(\"LastPostedDateTime\",\n\t\t\t\t\t\t\tdateFormatter.format(date3))\n\t\t\t\t\t.withNumber(\"Views\", 0)\n\t\t\t\t\t.withNumber(\"Replies\", 0)\n\t\t\t\t\t.withNumber(\"Answered\", 0)\n\t\t\t\t\t.withStringSet(\n\t\t\t\t\t\t\t\"Tags\",\n\t\t\t\t\t\t\tnew HashSet<String>(Arrays.asList(\"index\",\n\t\t\t\t\t\t\t\t\t\"primarykey\", \"rangekey\")));\n\t\t\ttable.putItem(item);\n\n\t\t\titem = new Item()\n\t\t\t\t\t.withPrimaryKey(\"ForumName\", \"Amazon S3\")\n\t\t\t\t\t.withString(\"Subject\", \"S3 Thread 1\")\n\t\t\t\t\t.withString(\"Message\", \"S3 Thread 3 message\")\n\t\t\t\t\t.withString(\"LastPostedBy\", \"User A\")\n\t\t\t\t\t.withString(\"LastPostedDateTime\",\n\t\t\t\t\t\t\tdateFormatter.format(date1))\n\t\t\t\t\t.withNumber(\"Views\", 0)\n\t\t\t\t\t.withNumber(\"Replies\", 0)\n\t\t\t\t\t.withNumber(\"Answered\", 0)\n\t\t\t\t\t.withStringSet(\n\t\t\t\t\t\t\t\"Tags\",\n\t\t\t\t\t\t\tnew HashSet<String>(Arrays.asList(\"largeobjects\",\n\t\t\t\t\t\t\t\t\t\"multipart upload\")));\n\t\t\ttable.putItem(item);\n\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Failed to create item in \" + tableName);\n\t\t\tSystem.err.println(e.getMessage());\n\t\t}\n\n\t}\n\n\tprivate static void loadSampleReplies(String tableName) {\n\t\ttry {\n\t\t\t// 1 day ago\n\t\t\tlong time0 = (new Date()).getTime() - (1 * 24 * 60 * 60 * 1000); \n\t\t\t// 7 days ago\n\t\t\tlong time1 = (new Date()).getTime() - (7 * 24 * 60 * 60 * 1000); \n\t\t\t// 14 days ago\n\t\t\tlong time2 = (new Date()).getTime() - (14 * 24 * 60 * 60 * 1000); \n\t\t\t// 21 days ago\n\t\t\tlong time3 = (new Date()).getTime() - (21 * 24 * 60 * 60 * 1000);\n\n\t\t\tDate date0 = new Date();\n\t\t\tdate0.setTime(time0);\n\n\t\t\tDate date1 = new Date();\n\t\t\tdate1.setTime(time1);\n\n\t\t\tDate date2 = new Date();\n\t\t\tdate2.setTime(time2);\n\n\t\t\tDate date3 = new Date();\n\t\t\tdate3.setTime(time3);\n\n\t\t\tdateFormatter.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n\t\t\tTable table = dynamoDB.getTable(tableName);\n\n\t\t\tSystem.out.println(\"Adding data to \" + tableName);\n\n\t\t\t// Add threads.\n\n\t\t\tItem item = new Item()\n\t\t\t\t\t.withPrimaryKey(\"Id\", \"Amazon DynamoDB#DynamoDB Thread 1\")\n\t\t\t\t\t.withString(\"ReplyDateTime\", (dateFormatter.format(date3)))\n\t\t\t\t\t.withString(\"Message\", \"DynamoDB Thread 1 Reply 1 text\")\n\t\t\t\t\t.withString(\"PostedBy\", \"User A\");\n\t\t\ttable.putItem(item);\n\n\t\t\titem = new Item()\n\t\t\t\t\t.withPrimaryKey(\"Id\", \"Amazon DynamoDB#DynamoDB Thread 1\")\n\t\t\t\t\t.withString(\"ReplyDateTime\", dateFormatter.format(date2))\n\t\t\t\t\t.withString(\"Message\", \"DynamoDB Thread 1 Reply 2 text\")\n\t\t\t\t\t.withString(\"PostedBy\", \"User B\");\n\t\t\ttable.putItem(item);\n\n\t\t\titem = new Item()\n\t\t\t\t\t.withPrimaryKey(\"Id\", \"Amazon DynamoDB#DynamoDB Thread 2\")\n\t\t\t\t\t.withString(\"ReplyDateTime\", dateFormatter.format(date1))\n\t\t\t\t\t.withString(\"Message\", \"DynamoDB Thread 2 Reply 1 text\")\n\t\t\t\t\t.withString(\"PostedBy\", \"User A\");\n\t\t\ttable.putItem(item);\n\n\t\t\titem = new Item()\n\t\t\t\t\t.withPrimaryKey(\"Id\", \"Amazon DynamoDB#DynamoDB Thread 2\")\n\t\t\t\t\t.withString(\"ReplyDateTime\", dateFormatter.format(date0))\n\t\t\t\t\t.withString(\"Message\", \"DynamoDB Thread 2 Reply 2 text\")\n\t\t\t\t\t.withString(\"PostedBy\", \"User A\");\n\t\t\ttable.putItem(item);\n\n\t\t} catch (Exception e) {\n\t\t\tSystem.err.println(\"Failed to create item in \" + tableName);\n\t\t\tSystem.err.println(e.getMessage());\n\n\t\t}\n\t}\n\n}\n```\n\n\n\n", "tags": ["AWS", "DynamoDB"]}