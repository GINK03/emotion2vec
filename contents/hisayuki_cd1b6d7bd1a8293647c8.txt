{"context": " More than 1 year has passed since last update.\u524d\u56de\u306e\u8a18\u4e8b\u304b\u3089\u306e\u7d9a\u304d\u3067\u3059\u3002\n\u306a\u306e\u3067\u3001\u74b0\u5883\u7b49\u306f\u524d\u56de\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u307e\u305f\u3001\u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30ebExcel\u3067\u306f\u306a\u3044\u306e\u3067Sqlite3_64.bas\u3092\u8aad\u307f\u8fbc\u3093\u3067\u307e\u3059\u3002\n\u767b\u5834\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306fSqlite3_64.bas\u306b\u3042\u308b\u3082\u306e\u3067\u3059\u3002\n\u4eca\u56de\u306fDB\u306e\u4f5c\u6210\u3001\u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\u307e\u3067\u3084\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\nDLL\u8aad\u307f\u8fbc\u307f\n\u307e\u305a\u306fSQLite.dll\u306e\u8aad\u307f\u8fbc\u307f\u3067\u3059\u3002\n\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u65b0\u3057\u3044\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u308a\u3001Execute\u3068\u540d\u524d\u3092\u4ed8\u3051\u307e\u3057\u305f\u3002\n\nSQLite3Initialize()\n\nExecute\nPublic Sub Execute()\n    Dim InitReturn As Long  'SQLiteDLL\n\n    #If Win64 Then\n        Debug.Print \"Excel is 64bit\"\n        'SQLiteDLL\u8aad\u307f\u8fbc\u307f\n        InitReturn = SQLite3Initialize(ThisWorkbook.Path + \"\\x64\")\n        '\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myDbHandle As LongPtr\n    #Else\n        Debug.Print \"Excel is 32bit\"\n        'SQLiteDLL\u8aad\u307f\u8fbc\u307f\n        InitReturn = SQLite3Initialize\n        '\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myDbHandle As Long\n    #End If\n    'SQLiteDLL\u8aad\u307f\u8fbc\u307f\u6210\u5426\n    If InitReturn <> SQLITE_INIT_OK Then\n        Debug.Print \"Error Initializing SQLite. Error: \" & Err.LastDllError\n        Exit Sub\n    End If\nEnd Sub\n\n\nSQLite3Initialize\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u8aad\u307f\u8fbc\u307f\u3092\u884c\u3044\u307e\u3059\u3002\n\nSqlite3.SQLite3Initialize\nPublic Function SQLite3Initialize(Optional ByVal libDir As String) As Long\n    ' A nice option here is to call SetDllDirectory, but that API is only available since Windows XP SP1.\n    If libDir = \"\" Then libDir = ThisWorkbook.Path\n    If Right(libDir, 1) <> \"\\\" Then libDir = libDir & \"\\\"\n\n    If hSQLiteLibrary = 0 Then\n        hSQLiteLibrary = LoadLibrary(libDir + \"SQLite3.dll\")\n        If hSQLiteLibrary = 0 Then\n            Debug.Print \"SQLite3Initialize Error Loading \" + libDir + \"SQLite3.dll:\", Err.LastDllError\n            SQLite3Initialize = SQLITE_INIT_ERROR\n            Exit Function\n        End If\n    End If\n\n    #If Win64 Then\n    #Else\n    If hSQLiteStdCallLibrary = 0 Then\n        hSQLiteStdCallLibrary = LoadLibrary(libDir + \"SQLite3_StdCall.dll\")\n        If hSQLiteStdCallLibrary = 0 Then\n            Debug.Print \"SQLite3Initialize Error Loading \" + libDir + \"SQLite3_StdCall.dll:\", Err.LastDllError\n            SQLite3Initialize = SQLITE_INIT_ERROR\n            Exit Function\n        End If\n    End If\n    #End If\n    SQLite3Initialize = SQLITE_INIT_OK\nEnd Function\n\n\nSQLite3Initialize\u306f\u5f15\u6570\u3092\u6e21\u3055\u306a\u3051\u308c\u3070\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8d77\u52d5\u30d6\u30c3\u30af\u3068\u540c\u968e\u5c64\u306edll\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u540c\u6642\u306b\u540c\u968e\u5c64\u306eSQLite3_StdCall.dll\u3082\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u306e\u3067\u3001\u305d\u306e\u307e\u307e\u4f7f\u3046\u5834\u5408\u306f\nSQLite.dll\u3068SQLite3_StdCall.dll\u306f\u5fc5\u305a\u540c\u3058\u968e\u5c64\u306b\u914d\u7f6e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nDB\u4f5c\u6210\nDB\u30d5\u30a1\u30a4\u30eb\u306b\u3064\u3044\u3066\u306f\u3001SQLite3Open\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u81ea\u52d5\u3067\u4f5c\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u3044\u305f\u72b6\u614b\u306b\u306a\u308b\u306e\u3067\u3001SQLite3Close\u3067\u6700\u5f8c\u306f\u9589\u3058\u307e\u3059\u3002\n\nSQLite3Open()\n\nSqlite3.SQLite3Open\n#If Win64 Then\nPublic Function SQLite3Open(ByVal fileName As String, ByRef dbHandle As LongPtr) As Long\n#Else\nPublic Function SQLite3Open(ByVal fileName As String, ByRef dbHandle As Long) As Long\n#End If\n    SQLite3Open = sqlite3_open16(StrPtr(fileName), dbHandle)\nEnd Function\n\n\n\nSQLite3Close()\n\nSqlite3.SQLite3Close\n#If Win64 Then\nPublic Function SQLite3Close(ByVal dbHandle As LongPtr) As Long\n#Else\nPublic Function SQLite3Close(ByVal dbHandle As Long) As Long\n#End If\n    SQLite3Close = sqlite3_close(dbHandle)\nEnd Function\n\n\nSQLite3Open\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5f15\u6570\u3067\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6e21\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067DB\u30d5\u30a1\u30a4\u30eb\u306f\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\nExecute\nOption Explicit\n\nPublic Const DB_FILE_DIR As String = \"E:\\sqlite\\db\"\nPublic Const DB_FILE_NAME As String = \"sampe.db\"\n\nPublic Sub Execute()\n\n    Dim InitReturn As Long  'SQLiteDLL\n    Dim dbFile As String    'DB\u30d5\u30a1\u30a4\u30eb\n    Dim RetVal As Long      'DBData\n\n\n    #If Win64 Then\n        Debug.Print \"Excel is 64bit\"\n        'SQLiteDLL\u8aad\u307f\u8fbc\u307f\n        InitReturn = SQLite3Initialize(ThisWorkbook.Path + \"\\x64\")\n        '\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myDbHandle As LongPtr\n    #Else\n        Debug.Print \"Excel is 32bit\"\n        'SQLiteDLL\u8aad\u307f\u8fbc\u307f\n        InitReturn = SQLite3Initialize\n        '\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myDbHandle As Long\n    #End If\n\n    'SQLiteDLL\u8aad\u307f\u8fbc\u307f\u6210\u5426\n    If InitReturn <> SQLITE_INIT_OK Then\n        Debug.Print \"Error Initializing SQLite. Error: \" & Err.LastDllError\n        Exit Sub\n    End If\n\n    '\u30d5\u30a1\u30a4\u30eb\u540d\u53d6\u5f97\n    dbFile = DB_FILE_DIR + \"\\\" + DB_FILE_NAME\n\n    'DB\u30d5\u30a1\u30a4\u30ebOpen\n    RetVal = SQLite3Open(dbFile, myDbHandle)\n    Debug.Print \"SQLite3Open returned \" & RetVal\n    Debug.Print myDbHandle\n\n\n    'DB\u30d5\u30a1\u30a4\u30ebClose\n    RetVal = SQLite3Close(myDbHandle)\n    Debug.Print \"SQLite3Close returned \" & RetVal\n\nEnd Sub\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u6765\u307e\u3059\u3002\n\n\n\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\n\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\u3082\u542b\u3081\u3001SQL\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u306e\u767a\u884c\u306b\u306fSQLite3PrepareV2\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306eSQL\u3092\u767a\u884c\u3057\u307e\u3059\u3002\nsql:SQL\nCREATE TABLE MyBigTable (\n    TheId INTEGER, \n    TheDate REAL, \n    TheText TEXT, \n    TheValue REAL)\n\n\nSQLite3PrepareV2()\n\nSqlite3.SQLite3PrepareV2\n#If Win64 Then\nPublic Function SQLite3PrepareV2(ByVal dbHandle As LongPtr, ByVal sql As String, ByRef stmtHandle As LongPtr) As Long\n#Else\nPublic Function SQLite3PrepareV2(ByVal dbHandle As Long, ByVal sql As String, ByRef stmtHandle As Long) As Long\n#End If\n    ' Only the first statement (up to ';') is prepared. Currently we don't retrieve the 'tail' pointer.\n    SQLite3PrepareV2 = sqlite3_prepare16_v2(dbHandle, StrPtr(sql), Len(sql) * 2, stmtHandle, 0)\nEnd Function\n\n\n\u305d\u306e\u5f8c\u3001\u5b9f\u884c\u3001\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u306e\u524a\u9664\u3068\u7d9a\u304d\u307e\u3059\u3002\n\nSQLite3Step()\n\nSqlite3.SQLite3Step\n#If Win64 Then\nPublic Function SQLite3Step(ByVal stmtHandle As LongPtr) As Long\n#Else\nPublic Function SQLite3Step(ByVal stmtHandle As Long) As Long\n#End If\n    SQLite3Step = sqlite3_step(stmtHandle)\nEnd Function\n\n\n\n\nSQLite3Finalize()\n\nSqlite3.SQLite3Finalize\n#If Win64 Then\nPublic Function SQLite3Finalize(ByVal stmtHandle As LongPtr) As Long\n#Else\nPublic Function SQLite3Finalize(ByVal stmtHandle As Long) As Long\n#End If\n    SQLite3Finalize = sqlite3_finalize(stmtHandle)\nEnd Function\n\n\nExecute\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u4e00\u9023\u306e\u52d5\u4f5c\u3092\u7d44\u307f\u8fbc\u3093\u3067\u3044\u304d\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\u3082\u884c\u3044\u307e\u3059\u3002\n\nExecute\nOption Explicit\n\nPublic Const DB_FILE_DIR As String = \"E:\\sqlite\\db\"\nPublic Const DB_FILE_NAME As String = \"sampe.db\"\n\nPublic Sub Execute()\n\n    Dim InitReturn As Long  'SQLiteDLL\n    Dim dbFile As String    'DB\u30d5\u30a1\u30a4\u30eb\n    Dim RetVal As Long      'DBData\n\n\n    #If Win64 Then\n        Debug.Print \"Excel is 64bit\"\n        'SQLiteDLL\u8aad\u307f\u8fbc\u307f\n        InitReturn = SQLite3Initialize(ThisWorkbook.Path + \"\\x64\")\n        '\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myDbHandle As LongPtr\n        '\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myStmtHandle As LongPtr\n    #Else\n        Debug.Print \"Excel is 32bit\"\n        'SQLiteDLL\u8aad\u307f\u8fbc\u307f\n        InitReturn = SQLite3Initialize\n        '\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myDbHandle As Long\n        '\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myStmtHandle As Long\n    #End If\n\n    'SQLiteDLL\u8aad\u307f\u8fbc\u307f\u6210\u5426\n    If InitReturn <> SQLITE_INIT_OK Then\n        Debug.Print \"Error Initializing SQLite. Error: \" & Err.LastDllError\n        Exit Sub\n    End If\n\n    '\u30d5\u30a1\u30a4\u30eb\u540d\u53d6\u5f97\n    dbFile = DB_FILE_DIR + \"\\\" + DB_FILE_NAME\n\n    'DB\u30d5\u30a1\u30a4\u30ebOpen\n    RetVal = SQLite3Open(dbFile, myDbHandle)\n    Debug.Print \"SQLite3Open returned \" & RetVal\n    Debug.Print myDbHandle\n\n     'SQL statement\u4f5c\u6210\n    RetVal = SQLite3PrepareV2(myDbHandle, \"CREATE TABLE MyBigTable (TheId INTEGER, TheDate REAL, TheText TEXT, TheValue REAL)\", myStmtHandle)\n    Debug.Print \"SQLite3PrepareV2 returned \" & RetVal\n\n    'SQL\u5b9f\u884c\n    RetVal = SQLite3Step(myStmtHandle)\n    Debug.Print \"SQLite3Step returned \" & RetVal\n\n    'statement \u524a\u9664\n    RetVal = SQLite3Finalize(myStmtHandle)\n    Debug.Print \"SQLite3Finalize returned \" & RetVal\n\n    'DB\u30d5\u30a1\u30a4\u30ebClose\n    RetVal = SQLite3Close(myDbHandle)\n    Debug.Print \"SQLite3Close returned \" & RetVal\n\nEnd Sub\n\n\n\u5b9f\u884c\u5f8c\u306eDB\u3092SQLiteBrowser\u7b49\u3067\u898b\u3066\u307f\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\u307e\u3068\u3081\n\u8a2d\u5b9a\u7de8\u306b\u5f15\u304d\u7d9a\u304d\u5b9f\u8df5\u7de8\uff11\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\u307e\u3067\u66f8\u304d\u307e\u3057\u305f\u306e\u3067\u3001\u6b21\u56de\u30c7\u30fc\u30bf\u306eINSERT\u3084\nSELECT\u3092\u66f8\u3044\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff01 \n\u524d\u56de\u306e[\u8a18\u4e8b](http://qiita.com/hisayuki/items/9b42624790ba74a2fb35)\u304b\u3089\u306e\u7d9a\u304d\u3067\u3059\u3002\n\u306a\u306e\u3067\u3001\u74b0\u5883\u7b49\u306f\u524d\u56de\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u307e\u305f\u3001\u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30ebExcel\u3067\u306f\u306a\u3044\u306e\u3067__Sqlite3_64.bas__\u3092\u8aad\u307f\u8fbc\u3093\u3067\u307e\u3059\u3002\n\u767b\u5834\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306f__Sqlite3_64.bas__\u306b\u3042\u308b\u3082\u306e\u3067\u3059\u3002\n\n\u4eca\u56de\u306fDB\u306e\u4f5c\u6210\u3001\u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\u307e\u3067\u3084\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n\n## DLL\u8aad\u307f\u8fbc\u307f\n\u307e\u305a\u306fSQLite.dll\u306e\u8aad\u307f\u8fbc\u307f\u3067\u3059\u3002\n\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u65b0\u3057\u3044\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u308a\u3001Execute\u3068\u540d\u524d\u3092\u4ed8\u3051\u307e\u3057\u305f\u3002\n\n### SQLite3Initialize()\n```VBScript:Execute\nPublic Sub Execute()\n    Dim InitReturn As Long  'SQLiteDLL\n    \n    #If Win64 Then\n        Debug.Print \"Excel is 64bit\"\n        'SQLiteDLL\u8aad\u307f\u8fbc\u307f\n        InitReturn = SQLite3Initialize(ThisWorkbook.Path + \"\\x64\")\n        '\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myDbHandle As LongPtr\n    #Else\n        Debug.Print \"Excel is 32bit\"\n        'SQLiteDLL\u8aad\u307f\u8fbc\u307f\n        InitReturn = SQLite3Initialize\n        '\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myDbHandle As Long\n    #End If\n    'SQLiteDLL\u8aad\u307f\u8fbc\u307f\u6210\u5426\n    If InitReturn <> SQLITE_INIT_OK Then\n        Debug.Print \"Error Initializing SQLite. Error: \" & Err.LastDllError\n        Exit Sub\n    End If\nEnd Sub\n```\nSQLite3Initialize\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u8aad\u307f\u8fbc\u307f\u3092\u884c\u3044\u307e\u3059\u3002\n\n```VBScript:Sqlite3.SQLite3Initialize\nPublic Function SQLite3Initialize(Optional ByVal libDir As String) As Long\n    ' A nice option here is to call SetDllDirectory, but that API is only available since Windows XP SP1.\n    If libDir = \"\" Then libDir = ThisWorkbook.Path\n    If Right(libDir, 1) <> \"\\\" Then libDir = libDir & \"\\\"\n    \n    If hSQLiteLibrary = 0 Then\n        hSQLiteLibrary = LoadLibrary(libDir + \"SQLite3.dll\")\n        If hSQLiteLibrary = 0 Then\n            Debug.Print \"SQLite3Initialize Error Loading \" + libDir + \"SQLite3.dll:\", Err.LastDllError\n            SQLite3Initialize = SQLITE_INIT_ERROR\n            Exit Function\n        End If\n    End If\n        \n    #If Win64 Then\n    #Else\n    If hSQLiteStdCallLibrary = 0 Then\n        hSQLiteStdCallLibrary = LoadLibrary(libDir + \"SQLite3_StdCall.dll\")\n        If hSQLiteStdCallLibrary = 0 Then\n            Debug.Print \"SQLite3Initialize Error Loading \" + libDir + \"SQLite3_StdCall.dll:\", Err.LastDllError\n            SQLite3Initialize = SQLITE_INIT_ERROR\n            Exit Function\n        End If\n    End If\n    #End If\n    SQLite3Initialize = SQLITE_INIT_OK\nEnd Function\n```\nSQLite3Initialize\u306f\u5f15\u6570\u3092\u6e21\u3055\u306a\u3051\u308c\u3070\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8d77\u52d5\u30d6\u30c3\u30af\u3068\u540c\u968e\u5c64\u306edll\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u540c\u6642\u306b\u540c\u968e\u5c64\u306eSQLite3_StdCall.dll\u3082\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u306e\u3067\u3001\u305d\u306e\u307e\u307e\u4f7f\u3046\u5834\u5408\u306f\nSQLite.dll\u3068SQLite3_StdCall.dll\u306f\u5fc5\u305a\u540c\u3058\u968e\u5c64\u306b\u914d\u7f6e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## DB\u4f5c\u6210\nDB\u30d5\u30a1\u30a4\u30eb\u306b\u3064\u3044\u3066\u306f\u3001SQLite3Open\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u81ea\u52d5\u3067\u4f5c\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u3044\u305f\u72b6\u614b\u306b\u306a\u308b\u306e\u3067\u3001SQLite3Close\u3067\u6700\u5f8c\u306f\u9589\u3058\u307e\u3059\u3002\n\n#### SQLite3Open()\n```VBScript:Sqlite3.SQLite3Open\n#If Win64 Then\nPublic Function SQLite3Open(ByVal fileName As String, ByRef dbHandle As LongPtr) As Long\n#Else\nPublic Function SQLite3Open(ByVal fileName As String, ByRef dbHandle As Long) As Long\n#End If\n    SQLite3Open = sqlite3_open16(StrPtr(fileName), dbHandle)\nEnd Function\n```\n#### SQLite3Close()\n```VBScript:Sqlite3.SQLite3Close\n#If Win64 Then\nPublic Function SQLite3Close(ByVal dbHandle As LongPtr) As Long\n#Else\nPublic Function SQLite3Close(ByVal dbHandle As Long) As Long\n#End If\n    SQLite3Close = sqlite3_close(dbHandle)\nEnd Function\n```\nSQLite3Open\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5f15\u6570\u3067\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6e21\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067DB\u30d5\u30a1\u30a4\u30eb\u306f\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n\n```VBScript:Execute\nOption Explicit\n\nPublic Const DB_FILE_DIR As String = \"E:\\sqlite\\db\"\nPublic Const DB_FILE_NAME As String = \"sampe.db\"\n\nPublic Sub Execute()\n\n    Dim InitReturn As Long  'SQLiteDLL\n    Dim dbFile As String    'DB\u30d5\u30a1\u30a4\u30eb\n    Dim RetVal As Long      'DBData\n    \n\n    #If Win64 Then\n        Debug.Print \"Excel is 64bit\"\n        'SQLiteDLL\u8aad\u307f\u8fbc\u307f\n        InitReturn = SQLite3Initialize(ThisWorkbook.Path + \"\\x64\")\n        '\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myDbHandle As LongPtr\n    #Else\n        Debug.Print \"Excel is 32bit\"\n        'SQLiteDLL\u8aad\u307f\u8fbc\u307f\n        InitReturn = SQLite3Initialize\n        '\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myDbHandle As Long\n    #End If\n    \n    'SQLiteDLL\u8aad\u307f\u8fbc\u307f\u6210\u5426\n    If InitReturn <> SQLITE_INIT_OK Then\n        Debug.Print \"Error Initializing SQLite. Error: \" & Err.LastDllError\n        Exit Sub\n    End If\n    \n    '\u30d5\u30a1\u30a4\u30eb\u540d\u53d6\u5f97\n    dbFile = DB_FILE_DIR + \"\\\" + DB_FILE_NAME\n    \n    'DB\u30d5\u30a1\u30a4\u30ebOpen\n    RetVal = SQLite3Open(dbFile, myDbHandle)\n    Debug.Print \"SQLite3Open returned \" & RetVal\n    Debug.Print myDbHandle\n    \n    \n    'DB\u30d5\u30a1\u30a4\u30ebClose\n    RetVal = SQLite3Close(myDbHandle)\n    Debug.Print \"SQLite3Close returned \" & RetVal\n\nEnd Sub\n```\n\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u6765\u307e\u3059\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/33165/3cd6e46b-6be6-0826-1a21-19e5f68cfe39.png)\n\n## \u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\n\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\u3082\u542b\u3081\u3001SQL\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u306e\u767a\u884c\u306b\u306fSQLite3PrepareV2\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306eSQL\u3092\u767a\u884c\u3057\u307e\u3059\u3002\n```sql:SQL\nCREATE TABLE MyBigTable (\n    TheId INTEGER, \n    TheDate REAL, \n    TheText TEXT, \n    TheValue REAL)\n```\n### SQLite3PrepareV2()\n```VBScript:Sqlite3.SQLite3PrepareV2\n#If Win64 Then\nPublic Function SQLite3PrepareV2(ByVal dbHandle As LongPtr, ByVal sql As String, ByRef stmtHandle As LongPtr) As Long\n#Else\nPublic Function SQLite3PrepareV2(ByVal dbHandle As Long, ByVal sql As String, ByRef stmtHandle As Long) As Long\n#End If\n    ' Only the first statement (up to ';') is prepared. Currently we don't retrieve the 'tail' pointer.\n    SQLite3PrepareV2 = sqlite3_prepare16_v2(dbHandle, StrPtr(sql), Len(sql) * 2, stmtHandle, 0)\nEnd Function\n```\n\u305d\u306e\u5f8c\u3001\u5b9f\u884c\u3001\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u306e\u524a\u9664\u3068\u7d9a\u304d\u307e\u3059\u3002\n### SQLite3Step()\n```VBScript:Sqlite3.SQLite3Step\n#If Win64 Then\nPublic Function SQLite3Step(ByVal stmtHandle As LongPtr) As Long\n#Else\nPublic Function SQLite3Step(ByVal stmtHandle As Long) As Long\n#End If\n    SQLite3Step = sqlite3_step(stmtHandle)\nEnd Function\n\n```\n### SQLite3Finalize()\n```VBScript:Sqlite3.SQLite3Finalize\n#If Win64 Then\nPublic Function SQLite3Finalize(ByVal stmtHandle As LongPtr) As Long\n#Else\nPublic Function SQLite3Finalize(ByVal stmtHandle As Long) As Long\n#End If\n    SQLite3Finalize = sqlite3_finalize(stmtHandle)\nEnd Function\n```\n\nExecute\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u4e00\u9023\u306e\u52d5\u4f5c\u3092\u7d44\u307f\u8fbc\u3093\u3067\u3044\u304d\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\u3082\u884c\u3044\u307e\u3059\u3002\n\n```VBScript:Execute\nOption Explicit\n\nPublic Const DB_FILE_DIR As String = \"E:\\sqlite\\db\"\nPublic Const DB_FILE_NAME As String = \"sampe.db\"\n\nPublic Sub Execute()\n\n    Dim InitReturn As Long  'SQLiteDLL\n    Dim dbFile As String    'DB\u30d5\u30a1\u30a4\u30eb\n    Dim RetVal As Long      'DBData\n    \n\n    #If Win64 Then\n        Debug.Print \"Excel is 64bit\"\n        'SQLiteDLL\u8aad\u307f\u8fbc\u307f\n        InitReturn = SQLite3Initialize(ThisWorkbook.Path + \"\\x64\")\n        '\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myDbHandle As LongPtr\n        '\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myStmtHandle As LongPtr\n    #Else\n        Debug.Print \"Excel is 32bit\"\n        'SQLiteDLL\u8aad\u307f\u8fbc\u307f\n        InitReturn = SQLite3Initialize\n        '\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myDbHandle As Long\n        '\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u5b9a\u7fa9\n        Dim myStmtHandle As Long\n    #End If\n    \n    'SQLiteDLL\u8aad\u307f\u8fbc\u307f\u6210\u5426\n    If InitReturn <> SQLITE_INIT_OK Then\n        Debug.Print \"Error Initializing SQLite. Error: \" & Err.LastDllError\n        Exit Sub\n    End If\n    \n    '\u30d5\u30a1\u30a4\u30eb\u540d\u53d6\u5f97\n    dbFile = DB_FILE_DIR + \"\\\" + DB_FILE_NAME\n    \n    'DB\u30d5\u30a1\u30a4\u30ebOpen\n    RetVal = SQLite3Open(dbFile, myDbHandle)\n    Debug.Print \"SQLite3Open returned \" & RetVal\n    Debug.Print myDbHandle\n    \n     'SQL statement\u4f5c\u6210\n    RetVal = SQLite3PrepareV2(myDbHandle, \"CREATE TABLE MyBigTable (TheId INTEGER, TheDate REAL, TheText TEXT, TheValue REAL)\", myStmtHandle)\n    Debug.Print \"SQLite3PrepareV2 returned \" & RetVal\n    \n    'SQL\u5b9f\u884c\n    RetVal = SQLite3Step(myStmtHandle)\n    Debug.Print \"SQLite3Step returned \" & RetVal\n    \n    'statement \u524a\u9664\n    RetVal = SQLite3Finalize(myStmtHandle)\n    Debug.Print \"SQLite3Finalize returned \" & RetVal\n    \n    'DB\u30d5\u30a1\u30a4\u30ebClose\n    RetVal = SQLite3Close(myDbHandle)\n    Debug.Print \"SQLite3Close returned \" & RetVal\n\nEnd Sub\n```  \n\n\u5b9f\u884c\u5f8c\u306eDB\u3092SQLiteBrowser\u7b49\u3067\u898b\u3066\u307f\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/33165/e7bf9e52-9849-8579-dbfe-067cd7fa7407.png)\n\n## \u307e\u3068\u3081\n\u8a2d\u5b9a\u7de8\u306b\u5f15\u304d\u7d9a\u304d\u5b9f\u8df5\u7de8\uff11\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\u307e\u3067\u66f8\u304d\u307e\u3057\u305f\u306e\u3067\u3001\u6b21\u56de\u30c7\u30fc\u30bf\u306eINSERT\u3084\nSELECT\u3092\u66f8\u3044\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff01 \n", "tags": ["Excel", "VBA", "sqlite"]}