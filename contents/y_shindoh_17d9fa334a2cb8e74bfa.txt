{"context": " More than 1 year has passed since last update.\n\nstd::priority_queue \u3068\u306f?\nstd::priority_queue \u306f\u3001C++\u3067\u5229\u7528\u3067\u304d\u308b\u30b3\u30f3\u30c6\u30ca\u30fb\u30a2\u30c0\u30d7\u30bf\u306e1\u3064\u3067\u3001\u512a\u5148\u9806\u4f4d\u4ed8\u304d\u30ad\u30e5\u30fc\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3082\u306e\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30fb\u30d1\u30e9\u30e1\u30fc\u30bf Compare \u306b\u3088\u3063\u3066\u512a\u5148\u9806\u4f4d\u306e\u4ed8\u3051\u65b9\u3092\u5909\u66f4\u3067\u304d\u308b\u3002\n\nqueue\nnamespace std {\n  template <class T,\n            class Container = vector<T>,\n            class Compare = less<typename Container::value_type>>\n  class priority_queue;\n}\n\n\n\n\u4e00\u822c\u7684\u306a\u5229\u7528\u65b9\u6cd5\n\u30d1\u30e9\u30e1\u30fc\u30bf Compare \u3092\u30c7\u30d5\u30a9\u30eb\u30c8 std::less<TYPE> \u306e\u307e\u307e\u4f7f\u7528\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308b\u3002\n\nsample.1.cpp\n#include <cstdio>\n#include <queue>\n\nint\nmain()\n{\n    int a[] = {5, 4, 6, 3, 7, 2, 8, 1, 9, 0};\n    std::priority_queue<int> q;\n\n    for (size_t i(0); i < sizeof(a) / sizeof(a[0]); ++i) {\n        q.push(a[i]);\n    }\n\n    while (!q.empty()) {\n        std::printf(\"%d\\n\", q.top());\n        q.pop();\n    }\n\n    return 0;\n}\n\n\n> clang++ -Wall -Weffc++ -std=c++11 sample.1.cpp -o sample.exe\n> ./sample.exe\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0\n\n\u307e\u305f\u3001std::greater<TYPE> \u306b\u5909\u66f4\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308b\u3002\n\nsample.2.cpp\n#include <cstdio>\n#include <queue>\n#include <vector>\n\nint\nmain()\n{\n    int a[] = {5, 4, 6, 3, 7, 2, 8, 1, 9, 0};\n    std::priority_queue< int, std::vector<int>, std::greater<int> > q;\n\n    for (size_t i(0); i < sizeof(a) / sizeof(a[0]); ++i) {\n        q.push(a[i]);\n    }\n\n    while (!q.empty()) {\n        std::printf(\"%d\\n\", q.top());\n        q.pop();\n    }\n\n    return 0;\n}\n\n\n> clang++ -Wall -Weffc++ -std=c++11 sample.2.cpp -o sample.exe\n> ./sample.exe\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nstd::priority_queue \u306e\u8981\u7d20\u306e\u578b\u304c\u7d44\u307f\u8fbc\u307f\u578b\u3084\u305d\u306e\u5ef6\u9577\u306e\u3082\u306e (\u4f8b: std::pair \u3084 std::tuple \u3067\u7d44\u307f\u8fbc\u307f\u578b\u3092\u62e1\u5f35\u3057\u305f\u578b) \u3067\u3042\u308c\u3070\u3001\u3053\u308c\u30892\u3064\u306e\u65b9\u6cd5\u3067\u307b\u3068\u3093\u3069\u306e\u5229\u7528\u30b7\u30fc\u30f3\u3092\u30ab\u30d0\u30fc\u3067\u304d\u308b\u3002\n\n\u30e9\u30e0\u30c0\u5f0f\u306e\u30d1\u30e9\u30e1\u30fc\u30bf Compare \u3078\u306e\u4ee3\u5165?\n\u3068\u3053\u308d\u304c\u3001std::less<TYPE> \u3084 std::greater<TYPE> \u3067\u306f\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u3002\n\u4f8b\u3048\u3070\u6b21\u306e\u69d8\u306a\u512a\u5148\u9806\u4f4d\u306e\u4ed8\u3051\u65b9\u3092\u60f3\u5b9a\u3059\u308b (\u8981\u7d20\u306e\u578b\u3092 int \u3068\u3057\u3001\u5b89\u5b9a\u6027\u306f\u554f\u308f\u306a\u3044) \u3068\u3001\n\u4e0a\u8a182\u3064\u306e\u6bd4\u8f03\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306f\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u3002\n\n\u8981\u7d20A\u3068B\u306b\u5bfe\u3057\u3066\u3001A\u304c\u5076\u6570\u3067B\u304c\u5947\u6570\u306a\u3089\u3001A\u306fB\u3088\u308a\u512a\u5148\u5ea6\u304c\u4f4e\u3044\u3002\n\u8981\u7d20A\u3068B\u306b\u5bfe\u3057\u3066\u3001A\u3068B\u306e\u4e21\u65b9\u304c\u5076\u6570\u306a\u3089\u3001\u5024\u304c\u5927\u304d\u3044\u65b9\u304c\u512a\u5148\u5ea6\u304c\u4f4e\u3044\u3002\n\u8981\u7d20A\u3068B\u306b\u5bfe\u3057\u3066\u3001A\u3068B\u306e\u4e21\u65b9\u304c\u5947\u6570\u306a\u3089\u3001\u5024\u304c\u5c0f\u3055\u3044\u65b9\u304c\u512a\u5148\u5ea6\u304c\u4f4e\u3044\u3002\n\n\u3053\u308c\u3092\u30e9\u30e0\u30c0\u5f0f\u3067\u8868\u73fe\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\u306a\u304a\u30e9\u30e0\u30c0\u5f0f\u306b\u304a\u3044\u3066\u3001\u5f15\u6570 l \u304c\u512a\u5148\u5ea6\u306e\u4f4e\u3044\u8981\u7d20\u3067\u3042\u308b\u3068\u304d\u306b true \u3092\u8fd4\u5374\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\n\nsample.3.cpp\n#include <cstdio>\n#include <queue>\n#include <vector>\n\nint\nmain()\n{\n    int a[] = {5, 4, 6, 3, 7, 2, 8, 1, 9, 0};\n    auto c = [](int l, int r) { if (l % 2 == 0) return r % 2 != 0 || l >= r; else return r % 2 != 0 && l < r; };\n    std::priority_queue<int, std::vector<int>, decltype(c)> q(c);\n\n    for (size_t i(0); i < sizeof(a) / sizeof(a[0]); ++i) {\n        q.push(a[i]);\n    }\n\n    while (!q.empty()) {\n        std::printf(\"%d\\n\", q.top());\n        q.pop();\n    }\n\n    return 0;\n}\n\n\n> clang++ -Wall -Weffc++ -std=c++11 sample.3.cpp -o sample.exe\n> ./sample.exe\n9\n7\n5\n3\n1\n0\n2\n4\n6\n8\n\n\u3053\u306e\u3068\u304d\u3001\u76f4\u611f\u7684\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u306a\u3044\u3002\n\nsample.4.cpp\n#include <cstdio>\n#include <queue>\n#include <vector>\n\nint\nmain()\n{\n    int a[] = {5, 4, 6, 3, 7, 2, 8, 1, 9, 0};\n    auto c = [](int l, int r) { if (l % 2 == 0) return r % 2 != 0 || l >= r; else return r % 2 != 0 && l < r; };\n    std::priority_queue<int, std::vector<int>, c> q;\n\n    for (size_t i(0); i < sizeof(a) / sizeof(a[0]); ++i) {\n        q.push(a[i]);\n    }\n\n    while (!q.empty()) {\n        std::printf(\"%d\\n\", q.top());\n        q.pop();\n    }\n\n    return 0;\n}\n\n\n> clang++ -Wall -Weffc++ -std=c++11 sample.4.cpp -o sample.exe\nsample.4.cpp:12:45: error: template argument for template type parameter must be a type\n        std::priority_queue<int, std::vector<int>, c> q;\n                                                   ^\n/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/queue:385:17: note:\n      template parameter is declared here\n          class _Compare = less<typename _Container::value_type> >\n                ^\n1 error generated.\n\n\n\u53c2\u8003\n\nhttp://cpprefjp.github.io/reference/queue/priority_queue.html\nhttp://cpprefjp.github.io/lang/cpp11/lambda_expressions.html\nhttp://stackoverflow.com/questions/5807735/c-priority-queue-with-lambda-comparator-error\n\n# `std::priority_queue` \u3068\u306f?\n\n`std::priority_queue` \u306f\u3001C++\u3067\u5229\u7528\u3067\u304d\u308b\u30b3\u30f3\u30c6\u30ca\u30fb\u30a2\u30c0\u30d7\u30bf\u306e1\u3064\u3067\u3001\u512a\u5148\u9806\u4f4d\u4ed8\u304d\u30ad\u30e5\u30fc\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3082\u306e\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30fb\u30d1\u30e9\u30e1\u30fc\u30bf `Compare` \u306b\u3088\u3063\u3066\u512a\u5148\u9806\u4f4d\u306e\u4ed8\u3051\u65b9\u3092\u5909\u66f4\u3067\u304d\u308b\u3002\n\n```C++:queue\nnamespace std {\n  template <class T,\n            class Container = vector<T>,\n            class Compare = less<typename Container::value_type>>\n  class priority_queue;\n}\n```\n\n# \u4e00\u822c\u7684\u306a\u5229\u7528\u65b9\u6cd5\n\n\u30d1\u30e9\u30e1\u30fc\u30bf `Compare` \u3092\u30c7\u30d5\u30a9\u30eb\u30c8 `std::less<TYPE>` \u306e\u307e\u307e\u4f7f\u7528\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308b\u3002\n\n```C++:sample.1.cpp\n#include <cstdio>\n#include <queue>\n\nint\nmain()\n{\n\tint a[] = {5, 4, 6, 3, 7, 2, 8, 1, 9, 0};\n\tstd::priority_queue<int> q;\n\n\tfor (size_t i(0); i < sizeof(a) / sizeof(a[0]); ++i) {\n\t\tq.push(a[i]);\n\t}\n\n\twhile (!q.empty()) {\n\t\tstd::printf(\"%d\\n\", q.top());\n\t\tq.pop();\n\t}\n\n\treturn 0;\n}\n```\n\n\t> clang++ -Wall -Weffc++ -std=c++11 sample.1.cpp -o sample.exe\n\t> ./sample.exe\n\t9\n\t8\n\t7\n\t6\n\t5\n\t4\n\t3\n\t2\n\t1\n\t0\n\n\u307e\u305f\u3001`std::greater<TYPE>` \u306b\u5909\u66f4\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308b\u3002\n\n```C++:sample.2.cpp\n#include <cstdio>\n#include <queue>\n#include <vector>\n\nint\nmain()\n{\n\tint a[] = {5, 4, 6, 3, 7, 2, 8, 1, 9, 0};\n\tstd::priority_queue< int, std::vector<int>, std::greater<int> > q;\n\n\tfor (size_t i(0); i < sizeof(a) / sizeof(a[0]); ++i) {\n\t\tq.push(a[i]);\n\t}\n\n\twhile (!q.empty()) {\n\t\tstd::printf(\"%d\\n\", q.top());\n\t\tq.pop();\n\t}\n\n\treturn 0;\n}\n```\n\n\t> clang++ -Wall -Weffc++ -std=c++11 sample.2.cpp -o sample.exe\n\t> ./sample.exe\n\t0\n\t1\n\t2\n\t3\n\t4\n\t5\n\t6\n\t7\n\t8\n\t9\n\n`std::priority_queue` \u306e\u8981\u7d20\u306e\u578b\u304c\u7d44\u307f\u8fbc\u307f\u578b\u3084\u305d\u306e\u5ef6\u9577\u306e\u3082\u306e (\u4f8b: `std::pair` \u3084 `std::tuple` \u3067\u7d44\u307f\u8fbc\u307f\u578b\u3092\u62e1\u5f35\u3057\u305f\u578b) \u3067\u3042\u308c\u3070\u3001\u3053\u308c\u30892\u3064\u306e\u65b9\u6cd5\u3067\u307b\u3068\u3093\u3069\u306e\u5229\u7528\u30b7\u30fc\u30f3\u3092\u30ab\u30d0\u30fc\u3067\u304d\u308b\u3002\n\n# \u30e9\u30e0\u30c0\u5f0f\u306e\u30d1\u30e9\u30e1\u30fc\u30bf `Compare` \u3078\u306e\u4ee3\u5165?\n\n\u3068\u3053\u308d\u304c\u3001`std::less<TYPE>` \u3084 `std::greater<TYPE>` \u3067\u306f\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u3002\n\n\u4f8b\u3048\u3070\u6b21\u306e\u69d8\u306a\u512a\u5148\u9806\u4f4d\u306e\u4ed8\u3051\u65b9\u3092\u60f3\u5b9a\u3059\u308b (\u8981\u7d20\u306e\u578b\u3092 `int` \u3068\u3057\u3001\u5b89\u5b9a\u6027\u306f\u554f\u308f\u306a\u3044) \u3068\u3001\n\u4e0a\u8a182\u3064\u306e\u6bd4\u8f03\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306f\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u3002\n\n* \u8981\u7d20A\u3068B\u306b\u5bfe\u3057\u3066\u3001A\u304c\u5076\u6570\u3067B\u304c\u5947\u6570\u306a\u3089\u3001A\u306fB\u3088\u308a\u512a\u5148\u5ea6\u304c\u4f4e\u3044\u3002\n* \u8981\u7d20A\u3068B\u306b\u5bfe\u3057\u3066\u3001A\u3068B\u306e\u4e21\u65b9\u304c\u5076\u6570\u306a\u3089\u3001\u5024\u304c\u5927\u304d\u3044\u65b9\u304c\u512a\u5148\u5ea6\u304c\u4f4e\u3044\u3002\n* \u8981\u7d20A\u3068B\u306b\u5bfe\u3057\u3066\u3001A\u3068B\u306e\u4e21\u65b9\u304c\u5947\u6570\u306a\u3089\u3001\u5024\u304c\u5c0f\u3055\u3044\u65b9\u304c\u512a\u5148\u5ea6\u304c\u4f4e\u3044\u3002\n\n\u3053\u308c\u3092\u30e9\u30e0\u30c0\u5f0f\u3067\u8868\u73fe\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\u306a\u304a\u30e9\u30e0\u30c0\u5f0f\u306b\u304a\u3044\u3066\u3001\u5f15\u6570 `l` \u304c\u512a\u5148\u5ea6\u306e\u4f4e\u3044\u8981\u7d20\u3067\u3042\u308b\u3068\u304d\u306b `true` \u3092\u8fd4\u5374\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\n\n```C++:sample.3.cpp\n#include <cstdio>\n#include <queue>\n#include <vector>\n\nint\nmain()\n{\n\tint a[] = {5, 4, 6, 3, 7, 2, 8, 1, 9, 0};\n\tauto c = [](int l, int r) { if (l % 2 == 0) return r % 2 != 0 || l >= r; else return r % 2 != 0 && l < r; };\n\tstd::priority_queue<int, std::vector<int>, decltype(c)> q(c);\n\n\tfor (size_t i(0); i < sizeof(a) / sizeof(a[0]); ++i) {\n\t\tq.push(a[i]);\n\t}\n\n\twhile (!q.empty()) {\n\t\tstd::printf(\"%d\\n\", q.top());\n\t\tq.pop();\n\t}\n\n\treturn 0;\n}\n```\n\n\t> clang++ -Wall -Weffc++ -std=c++11 sample.3.cpp -o sample.exe\n\t> ./sample.exe\n\t9\n\t7\n\t5\n\t3\n\t1\n\t0\n\t2\n\t4\n\t6\n\t8\n\n\u3053\u306e\u3068\u304d\u3001\u76f4\u611f\u7684\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3082\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u306a\u3044\u3002\n\n```C++:sample.4.cpp\n#include <cstdio>\n#include <queue>\n#include <vector>\n\nint\nmain()\n{\n\tint a[] = {5, 4, 6, 3, 7, 2, 8, 1, 9, 0};\n\tauto c = [](int l, int r) { if (l % 2 == 0) return r % 2 != 0 || l >= r; else return r % 2 != 0 && l < r; };\n\tstd::priority_queue<int, std::vector<int>, c> q;\n\n\tfor (size_t i(0); i < sizeof(a) / sizeof(a[0]); ++i) {\n\t\tq.push(a[i]);\n\t}\n\n\twhile (!q.empty()) {\n\t\tstd::printf(\"%d\\n\", q.top());\n\t\tq.pop();\n\t}\n\n\treturn 0;\n}\n```\n\n\t> clang++ -Wall -Weffc++ -std=c++11 sample.4.cpp -o sample.exe\n\tsample.4.cpp:12:45: error: template argument for template type parameter must be a type\n\t        std::priority_queue<int, std::vector<int>, c> q;\n\t                                                   ^\n\t/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/queue:385:17: note:\n\t      template parameter is declared here\n\t          class _Compare = less<typename _Container::value_type> >\n\t                ^\n\t1 error generated.\n\n# \u53c2\u8003\n\n* http://cpprefjp.github.io/reference/queue/priority_queue.html\n* http://cpprefjp.github.io/lang/cpp11/lambda_expressions.html\n* http://stackoverflow.com/questions/5807735/c-priority-queue-with-lambda-comparator-error\n", "tags": ["C++", "STL"]}