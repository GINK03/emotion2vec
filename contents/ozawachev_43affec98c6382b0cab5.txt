{"context": " More than 1 year has passed since last update.Animo\u304b\u3089\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u304b\u304d\u51fa\u3059JSFL\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\nvar doc = fl.getDocumentDOM();\n\nfunction clearOut() {\n    fl.outputPanel.clear();\n}\n\nfunction out(_msg) {\n    fl.trace(_msg)\n}\n\nvar layoutScript = \"\";\n\nfunction outl(_s) {\n    layoutScript += _s + \"\\n\";\n}\n\nfunction getFolder(_msg) {\n    if (_msg == null) {\n        _msg = 'Select a folder';\n    }\n    return fl.browseForFolderURL(_msg);\n}\n\nfunction getFile(_msg) {\n    if (_msg == null) {\n        _msg = 'Select a file';\n    }\n    return fl.browseForFileURL(\"save\", _msg);\n}\n\nfunction saveLayout(_msg) {\n    if (_msg == null) {\n        _msg = 'Select a file';\n    }\n    var filename = getFile(_msg);\n    if (filename != null) {\n        fl.outputPanel.save(filename);\n        clearOut();\n    }\n}\n\nString.prototype.escape = function() {\n    return this.replace(/[\\s|-]/g, \"_\");\n}\n\nString.prototype.nl = function() {\n    return this + \"\\n\";\n}\n\nfunction newGroup(_name) {\n    return \"groups['\"+ _name + \"'] = display.newGroup()\";\n}\n\nfunction insertInGroup(_groupName, _elementName) {\n    return \"groups['\"+ _groupName +\"']:insert(\"+ _elementName +\")\";\n}\n\nfunction setupElement(_groupName, _element) {\n    var output = [];\n    var ename = _element.name;\n    var gname = _groupName;\n\n    var symbolType = _element.symbolType;\n    var libItemType = _element.libItem.itemType;\n    var libItemName = _element.libItem.name.split(\"/\").reverse()[0];\n    var inIgnore = _element.libItem.name.indexOf(\"ignore\") != -1;\n\n    if (inIgnore) {\n        // skipping creation because in ignore folder\n        output.unshift(\"\\t-- ignored sprite\");\n        output.push(\"\\t-- element \" +ename+ \"'s type: \"+ libItemName +\" is in ignore folder.\");\n\n        output.push(\"\\telements.\"+ename+\" = display.newGroup()\");\n\n    } else if (symbolType == \"button\" && libItemType == \"button\") {\n\n        // create a button using loq_ui_button\n        var frameArray = _element.libItem.timeline.layers[0].frames;\n\n        if (frameArray.length > 0) {\n\n            // Check that the frame elements are symbol instances and there's only one.\n            if (frameArray[0].elements[0].elementType != \"instance\") {\n                var errorMsg = \"Could not create button for  \"+ename +\".  The 'up' frame must contain only 1 Symbol instance.\";\n                alert(errorMsg);\n                return errorMsg;\n            }\n\n            if (frameArray[0].elements.length > 1) {\n                var errorMsg = \"Could not create button for  \"+ename +\".  The 'up' frame must contain only 1 Symbol instance.\";\n                alert(errorMsg);\n                return errorMsg;\n            }\n            var upSpriteName = frameArray[0].elements[0].libraryItem.name.split(\"/\").reverse()[0];\n\n            if (frameArray.length >= 3 && frameArray[2].elements[0].elementType != \"instance\") {\n                var errorMsg = \"Could not create button for  \"+ename +\".  The 'down' frame must contain only 1 Symbol instance.\";\n                alert(errorMsg);\n                return errorMsg;\n            }\n\n            if (frameArray.length >= 3 && frameArray[2].elements.length > 1) {\n                var errorMsg = \"Could not create button for  \"+ename +\".  The 'down' frame must contain only 1 Symbol instance.\";\n                alert(errorMsg);\n                return errorMsg;\n            }\n            var downSpriteName = (frameArray.length >= 3 ? frameArray[2].elements[0].libraryItem.name.split(\"/\").reverse()[0] : upSpriteName);\n\n            output.unshift(\"\\t-- new button\");\n\n            output.push(\"\\telements.\" + ename + \" = loqbutton.newButton {\"); \n            output.push(\"\\t\\tspriteGroup = _spriteFactory:newSpriteGroup('\"+ upSpriteName +\"'),\"); \n            output.push(\"\\t\\tup = '\"+ upSpriteName +\"',\"); \n            output.push(\"\\t\\tdown = '\"+ downSpriteName +\"',\"); \n            output.push(\"\\t}\"); \n\n        } else {\n            output.unshift(\"\\t-- new button ERROR\");\n            output.push(\"\\t-- Could not create button for \"+ ename +\". Missing symbol for up state.\");\n            output.push(\"\");\n\n            return output.join(\"\\n\");\n        }\n\n    } else if (ename.toLowerCase().indexOf(\"btn\") != -1 || ename.toLowerCase().indexOf(\"button\") != -1) {\n\n        var upSpriteName = libItemName;\n        var downSpriteName = libItemName;\n\n        output.unshift(\"\\t-- new button\");\n        output.push(\"\\telements.\" + ename + \" = loqbutton.newButton {\"); \n        output.push(\"\\t\\tspriteGroup = _spriteFactory:newSpriteGroup('\"+ upSpriteName +\"'),\"); \n        output.push(\"\\t\\tup = '\"+ upSpriteName +\"',\"); \n        output.push(\"\\t\\tdown = '\"+ downSpriteName +\"',\"); \n        output.push(\"\\t}\"); \n\n    } else if (symbolType == \"movie clip\" && !inIgnore) {\n        output.unshift(\"\\t-- new sprite\");\n        output.push(\"\\telements.\"+ename+\" = _spriteFactory:newSpriteGroup(\\\"\" + libItemName + \"\\\")\");\n\n    } else if (symbolType == \"graphic\" && !inIgnore) {\n        output.unshift(\"\\t-- new sprite\");\n        output.push(\"\\telements.\"+ename+\" = _spriteFactory:newSpriteGroup(\\\"\" + libItemName + \"\\\")\");\n        if (libItemType == \"movie clip\") {\n            output.push(\"\\telements.\"+ename+\":currentFrame(\" + _element.firstFrame + \")\");\n        }\n    } \n    output.push(\"\\tgroup = elements.\"+ename);\n    output.push(\"\\tgroups['\"+libItemName+\"'] = group\");    \n\n    output.push(\"\\tgroup.x = \"+ Math.round(_element.x));\n    output.push(\"\\tgroup.y = \"+ Math.round(_element.y));\n\n\n    if (_element.skewY == 180 && _element.rotation != 180) {\n        output.push(\"\\tgroup.xScale = -1\");\n    }else{\n        output.push(\"\\tgroup.xScale = \"+ (Math.floor(_element.scaleX*100)/100));    \n    }\n\n    if (_element.skewX == 180 && _element.rotation != 180) {\n        output.push(\"\\tgroup.yScale = -1\");\n    }else{\n        output.push(\"\\tgroup.yScale = \"+ (Math.floor(_element.scaleY*100)/100));\n    }\n\n     if (!isNaN(_element.rotation)) {\n        output.push(\"\\tgroup.rotation = \"+ (Math.floor(_element.rotation*100)/100));\n     }\n\n    if (_element.alpha != 1) {\n        output.push(\"\\tgroup.alpha = \"+ _element.alpha);\n    }\n    output.push(\"\");\n\n    return output.join(\"\\n\");\n}\n\nfunction clearGroup(_name) {\n    return \"\\tgroups['\"+_name+\"']:removeSelf()\";\n}\n\nfunction clearElement(_name) {\n    return \"\\tremoveElements(groups['\"+_name+\"'])\";    \n}\n\nfunction generateLayout(_tl) {\n\n    clearOut();\n    layoutScript = \"\";\n\n    var tl = _tl;\n\n    if (tl == null) {\n        tl = doc.getTimeline();\n    }\n\n    // go frame by frame creating a layout file for each frame\n    // go through each of the layers in reverse and create groups for each of the layers\n\n    var layouts = [];\n    var elementIndex = 0;\n\n    for (fdx = 0; fdx < tl.frameCount; ++fdx) {\n\n        var layout = {script: \"\", groups: []};\n\n        for (ldx = 0; ldx < tl.layerCount; ++ldx) {\n            var layer = tl.layers[ldx];\n\n            if (layer.layerType != 'normal') {\n                continue;\n            }\n\n            var group = {name: layer.name || (\"_layer\"+(tl.layerCount - ldx +1)), elements: []}\n\n            var frameArray = layer.frames;\n            if (fdx < frameArray.length) {\n                var frame = frameArray[fdx];\n\n                if (fdx == frame.startFrame) {\n\n                    // adds corona script here only for keyframes\n                    var scriptlines = frame.actionScript.split(\"\\r\");\n                    var cleanScript = [];\n                    for(sdx = 0; sdx < scriptlines.length; ++sdx) {\n                        if (scriptlines[sdx] != \"\") {\n                            cleanScript.push(scriptlines[sdx]);\n                        }\n                    }\n                    layout.script += cleanScript.join(\"\");\n\n                    // we have a keyframe get all the elements, and store it into the group\n\n                    var elements = frame.elements;\n                    for (edx = 0; edx < elements.length; ++edx) {\n                        var element = elements[edx];\n                        if (element.elementType == \"instance\") {\n                            var libItem = element.libraryItem;\n                            // filtering the element properties for easier processing\n                            var ename = (element.name || (\"_element\"+elementIndex)); \n                            elementIndex += 1;\n                            group.elements.push({\n                                name: ename,\n                                symbolType: element.symbolType,\n                                firstFrame: (element.firstFrame ? element.firstFrame + 1 : 1),\n                                libItem: libItem,\n                                x: element.x,\n                                y: element.y,\n                                left: element.left,\n                                top: element.top,\n                                width: element.width,\n                                height: element.height,\n                                rotation: element.rotation,\n                                scaleX: element.scaleX,\n                                scaleY: element.scaleY,\n                                alpha: element.colorAlphaPercent / 100,\n                                skewX: element.skewX,\n                                skewY: element.skewY,\n                                matrix: element.matrix,\n                                layer: element.layer,\n                                depth: element.depth,\n                                transformX: element.transformX,\n                                transformY: element.transformY\n                            });\n                        }\n                    }\n                }\n            }\n\n            if (group.elements.length > 0) {\n                layout.groups.push(group);\n            }\n        }\n\n        layouts.push(layout);\n    }\n    outl(\"local loqbutton = require(\\\"loq_ui_button\\\")\");\n    outl(\"\");\n    outl(\"local groups = nil \");\n    outl(\"local dimensions = nil \");\n    outl(\"local elements = nil \");\n    outl(\"\");\n    outl(\"local function createLayout(_spriteFactory,num)\");\n    outl(\"\\tassert(_spriteFactory ~= nil, \\\"Error in createLayout: _spriteFactory argument cannot be nil\\\")\");\n    outl(\"\\t--layout\");\n\n    var stack = [];\n    for (ldx = 0; ldx < layouts.length; ++ldx) {\n        // create a new layout\n        var layoutName = \"layout\"+ ldx;\n        var filename = layoutName+\".lua\";\n        var layout = layouts[ldx]; \n\n        if (layout.groups.length > 0) {\n            //\u3053\u3053\u304b\u3089\n            if(ldx == 0){\n                outl(\"if \"+ldx+\" == num then \");    \n            }else{\n                outl(\"elseif \"+ldx+\" == num then \"); \n            }\n            outl(\"\\t\\tgroups = {}\");\n            outl(\"\\t\\tdimensions = {}\");\n            outl(\"\\t\\telements = {}\");\n            outl(\"\\t\\tlocal group = nil\")\n\n            var groups = layout.groups.reverse();\n\n            for (gdx = 0; gdx < groups.length; ++gdx) {\n                var group = groups[gdx];\n                var elements = group.elements;\n                outl(\"\\t\\t-- new group\");\n                for (edx = 0; edx < elements.length; edx++) {\n                    outl(setupElement(group.name, elements[edx]).nl());\n                }\n            }\n        }\n    }\n    outl(\"else return false end\\n\");    \n\n    outl(\"\\t-- end layout\");\n    outl(\"\\treturn {groups = groups, dimensions = dimensions, elements = elements}\");\n    outl(\"end\\n\");\n\n    outl(\"return {\");\n    outl(\"\\tcreateLayout = createLayout\");\n    outl(\"\\t}\");\n\n    var layouttxt = layoutScript;\n    layoutScript = \"\";\n    return layouttxt;\n}\n\n/**\n * \u3053\u3053\u304c\u521d\u671f\u51e6\u7406\n */\nfunction generateSelectedLayouts() {\n    var fileurl = fl.browseForFileURL('save', \"Select a file\");\n    var layout = generateLayout();\n    /*for(var l in layout){\n            FLfile.write(fileurl+l+'.lua', layout[l]);\n    }*/\n    FLfile.write(fileurl, layout);\n    clearOut();\n    out(\"created \" + fileurl);\n}\n\ngenerateSelectedLayouts();\n\n\n\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u7121\u99c4\u306b\u305f\u304f\u3055\u3093\u30d5\u30a1\u30a4\u30eb\u3092\u5410\u3044\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u3072\u3068\u3064\u306eMC\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u30921\u30d5\u30a1\u30a4\u30eb\u3067\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\n\u30b3\u30ec\u3067\u3059\u3093\u3052\u30fc\u306f\u3084\u304f\u306a\u308a\u307e\u3057\u305f\uff08\u66d6\u6627)\u3002\n\u3067\u3001\u5b9f\u884c\u65b9\u6cd5\u3082\u3061\u3087\u3063\u3068\u5909\u308f\u308a\u307e\u3057\u305f\u3002\n\nanim.lua\n--[[\n    \u5358\u7d14\u306a\u6f14\u51fa\u7528\n]]--\nlocal loqsprite = require('loq_sprite')\n\nlocal anim ={\n\n    init = function(self,layout,num)\n        local animObj = {}\n        animObj.anim = require(layout)\n        animObj.cnt = num\n        animObj.k= function(img,g) \n            return {\n                stack ={},\n                notUsed ={},\n                grp = g,\n                i = img,\n                newSpriteGroup = function(self,name)\n                    if self.stack[name] == nil then\n                        self.stack[name] = self.i:newSpriteGroup(name)\n                        self.grp:insert(self.stack[name])\n                    end\n                    if self.notUsed[name] ~= nil then\n                        self.notUsed[name] = false\n                    end\n\n                    self.stack[name].alpha = 1\n                    return self.stack[name]\n                end         \n            }\n            end\n       return animObj\n    end\n\n}\nreturn anim\n\n\n\u4e0a\u8a18\u3092require\u3057\n        --\u683c\u7d0d\u7528Group\n        local grp = display.newGroup()\n\n        local a = anim:init('JSFL\u3067\u304b\u304d\u51fa\u3057\u305flua',25)\n        local img     = loqsprite.newFactory('animo\u3067\u304b\u304d\u51fa\u3057\u305flua')\n        local obj = self.lvUpAnim.k(img,grp)  \n\n        local num = 0\n---\u3068\u3057\u3066\u3001\u3042\u3068\u306f\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u7684\u306a\u3068\u3053\u308d\u3067\n\n     a.anim.createLayout(obj,num)\n\n----\u3068\u3044\u3046\u611f\u3058\u3067\u30b3\u30de\u3092\u9001\u308b\u3002\n----num\u304c\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306e\u7d42\u308f\u308a\u3092\u8d85\u3048\u305f\u3089\u7d42\u4e86\u306b\u306a\u308b\u51e6\u7406\u3092\u5165\u308c\u3066\u3084\u308b\u3002\n\n\n\u307f\u305f\u3044\u306a\u611f\u3058\u2026\u3002\u3061\u3087\u3063\u3068\u8aac\u660e\u304c\u4e0d\u89aa\u5207\u3059\u304e\u307e\u3059\u306d\u2026\u3002\n\u307e\u3042\u3001\u305d\u3093\u306a\u611f\u3058\u3067\u2026\u3002\nAnimo\u304b\u3089\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u304b\u304d\u51fa\u3059JSFL\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\n```javascript\nvar doc = fl.getDocumentDOM();\n\nfunction clearOut() {\n    fl.outputPanel.clear();\n}\n\nfunction out(_msg) {\n    fl.trace(_msg)\n}\n\nvar layoutScript = \"\";\n\nfunction outl(_s) {\n    layoutScript += _s + \"\\n\";\n}\n\nfunction getFolder(_msg) {\n    if (_msg == null) {\n        _msg = 'Select a folder';\n    }\n    return fl.browseForFolderURL(_msg);\n}\n\nfunction getFile(_msg) {\n    if (_msg == null) {\n        _msg = 'Select a file';\n    }\n    return fl.browseForFileURL(\"save\", _msg);\n}\n\nfunction saveLayout(_msg) {\n    if (_msg == null) {\n        _msg = 'Select a file';\n    }\n    var filename = getFile(_msg);\n    if (filename != null) {\n        fl.outputPanel.save(filename);\n        clearOut();\n    }\n}\n\nString.prototype.escape = function() {\n    return this.replace(/[\\s|-]/g, \"_\");\n}\n\nString.prototype.nl = function() {\n    return this + \"\\n\";\n}\n\nfunction newGroup(_name) {\n    return \"groups['\"+ _name + \"'] = display.newGroup()\";\n}\n\nfunction insertInGroup(_groupName, _elementName) {\n    return \"groups['\"+ _groupName +\"']:insert(\"+ _elementName +\")\";\n}\n\nfunction setupElement(_groupName, _element) {\n    var output = [];\n    var ename = _element.name;\n    var gname = _groupName;\n\n    var symbolType = _element.symbolType;\n    var libItemType = _element.libItem.itemType;\n    var libItemName = _element.libItem.name.split(\"/\").reverse()[0];\n    var inIgnore = _element.libItem.name.indexOf(\"ignore\") != -1;\n\n    if (inIgnore) {\n        // skipping creation because in ignore folder\n        output.unshift(\"\\t-- ignored sprite\");\n        output.push(\"\\t-- element \" +ename+ \"'s type: \"+ libItemName +\" is in ignore folder.\");\n        \n        output.push(\"\\telements.\"+ename+\" = display.newGroup()\");\n\n    } else if (symbolType == \"button\" && libItemType == \"button\") {\n\n        // create a button using loq_ui_button\n        var frameArray = _element.libItem.timeline.layers[0].frames;\n\n        if (frameArray.length > 0) {\n\n            // Check that the frame elements are symbol instances and there's only one.\n            if (frameArray[0].elements[0].elementType != \"instance\") {\n                var errorMsg = \"Could not create button for  \"+ename +\".  The 'up' frame must contain only 1 Symbol instance.\";\n                alert(errorMsg);\n                return errorMsg;\n            }\n\n            if (frameArray[0].elements.length > 1) {\n                var errorMsg = \"Could not create button for  \"+ename +\".  The 'up' frame must contain only 1 Symbol instance.\";\n                alert(errorMsg);\n                return errorMsg;\n            }\n            var upSpriteName = frameArray[0].elements[0].libraryItem.name.split(\"/\").reverse()[0];\n\n            if (frameArray.length >= 3 && frameArray[2].elements[0].elementType != \"instance\") {\n                var errorMsg = \"Could not create button for  \"+ename +\".  The 'down' frame must contain only 1 Symbol instance.\";\n                alert(errorMsg);\n                return errorMsg;\n            }\n\n            if (frameArray.length >= 3 && frameArray[2].elements.length > 1) {\n                var errorMsg = \"Could not create button for  \"+ename +\".  The 'down' frame must contain only 1 Symbol instance.\";\n                alert(errorMsg);\n                return errorMsg;\n            }\n            var downSpriteName = (frameArray.length >= 3 ? frameArray[2].elements[0].libraryItem.name.split(\"/\").reverse()[0] : upSpriteName);\n\n            output.unshift(\"\\t-- new button\");\n            \n            output.push(\"\\telements.\" + ename + \" = loqbutton.newButton {\"); \n            output.push(\"\\t\\tspriteGroup = _spriteFactory:newSpriteGroup('\"+ upSpriteName +\"'),\"); \n            output.push(\"\\t\\tup = '\"+ upSpriteName +\"',\"); \n            output.push(\"\\t\\tdown = '\"+ downSpriteName +\"',\"); \n            output.push(\"\\t}\"); \n\n        } else {\n            output.unshift(\"\\t-- new button ERROR\");\n            output.push(\"\\t-- Could not create button for \"+ ename +\". Missing symbol for up state.\");\n            output.push(\"\");\n\n            return output.join(\"\\n\");\n        }\n\n    } else if (ename.toLowerCase().indexOf(\"btn\") != -1 || ename.toLowerCase().indexOf(\"button\") != -1) {\n\n        var upSpriteName = libItemName;\n        var downSpriteName = libItemName;\n        \n        output.unshift(\"\\t-- new button\");\n        output.push(\"\\telements.\" + ename + \" = loqbutton.newButton {\"); \n        output.push(\"\\t\\tspriteGroup = _spriteFactory:newSpriteGroup('\"+ upSpriteName +\"'),\"); \n        output.push(\"\\t\\tup = '\"+ upSpriteName +\"',\"); \n        output.push(\"\\t\\tdown = '\"+ downSpriteName +\"',\"); \n        output.push(\"\\t}\"); \n\n    } else if (symbolType == \"movie clip\" && !inIgnore) {\n        output.unshift(\"\\t-- new sprite\");\n        output.push(\"\\telements.\"+ename+\" = _spriteFactory:newSpriteGroup(\\\"\" + libItemName + \"\\\")\");\n\n    } else if (symbolType == \"graphic\" && !inIgnore) {\n        output.unshift(\"\\t-- new sprite\");\n        output.push(\"\\telements.\"+ename+\" = _spriteFactory:newSpriteGroup(\\\"\" + libItemName + \"\\\")\");\n        if (libItemType == \"movie clip\") {\n            output.push(\"\\telements.\"+ename+\":currentFrame(\" + _element.firstFrame + \")\");\n        }\n    } \n    output.push(\"\\tgroup = elements.\"+ename);\n    output.push(\"\\tgroups['\"+libItemName+\"'] = group\");    \n\n    output.push(\"\\tgroup.x = \"+ Math.round(_element.x));\n    output.push(\"\\tgroup.y = \"+ Math.round(_element.y));\n\n    \n    if (_element.skewY == 180 && _element.rotation != 180) {\n        output.push(\"\\tgroup.xScale = -1\");\n    }else{\n        output.push(\"\\tgroup.xScale = \"+ (Math.floor(_element.scaleX*100)/100));    \n    }\n    \n    if (_element.skewX == 180 && _element.rotation != 180) {\n        output.push(\"\\tgroup.yScale = -1\");\n    }else{\n        output.push(\"\\tgroup.yScale = \"+ (Math.floor(_element.scaleY*100)/100));\n    }\n\n     if (!isNaN(_element.rotation)) {\n        output.push(\"\\tgroup.rotation = \"+ (Math.floor(_element.rotation*100)/100));\n     }\n\n    if (_element.alpha != 1) {\n        output.push(\"\\tgroup.alpha = \"+ _element.alpha);\n    }\n    output.push(\"\");\n\n    return output.join(\"\\n\");\n}\n\nfunction clearGroup(_name) {\n    return \"\\tgroups['\"+_name+\"']:removeSelf()\";\n}\n\nfunction clearElement(_name) {\n    return \"\\tremoveElements(groups['\"+_name+\"'])\";    \n}\n\nfunction generateLayout(_tl) {\n\n    clearOut();\n    layoutScript = \"\";\n\n    var tl = _tl;\n        \n    if (tl == null) {\n        tl = doc.getTimeline();\n    }\n\n    // go frame by frame creating a layout file for each frame\n    // go through each of the layers in reverse and create groups for each of the layers\n\n    var layouts = [];\n    var elementIndex = 0;\n\n    for (fdx = 0; fdx < tl.frameCount; ++fdx) {\n\n        var layout = {script: \"\", groups: []};\n\n        for (ldx = 0; ldx < tl.layerCount; ++ldx) {\n            var layer = tl.layers[ldx];\n\n            if (layer.layerType != 'normal') {\n                continue;\n            }\n\n            var group = {name: layer.name || (\"_layer\"+(tl.layerCount - ldx +1)), elements: []}\n\n            var frameArray = layer.frames;\n            if (fdx < frameArray.length) {\n                var frame = frameArray[fdx];\n                \n                if (fdx == frame.startFrame) {\n\n                    // adds corona script here only for keyframes\n                    var scriptlines = frame.actionScript.split(\"\\r\");\n                    var cleanScript = [];\n                    for(sdx = 0; sdx < scriptlines.length; ++sdx) {\n                        if (scriptlines[sdx] != \"\") {\n                            cleanScript.push(scriptlines[sdx]);\n                        }\n                    }\n                    layout.script += cleanScript.join(\"\");\n\n                    // we have a keyframe get all the elements, and store it into the group\n                    \n                    var elements = frame.elements;\n                    for (edx = 0; edx < elements.length; ++edx) {\n                        var element = elements[edx];\n                        if (element.elementType == \"instance\") {\n                            var libItem = element.libraryItem;\n                            // filtering the element properties for easier processing\n                            var ename = (element.name || (\"_element\"+elementIndex)); \n                            elementIndex += 1;\n                            group.elements.push({\n                                name: ename,\n                                symbolType: element.symbolType,\n                                firstFrame: (element.firstFrame ? element.firstFrame + 1 : 1),\n                                libItem: libItem,\n                                x: element.x,\n                                y: element.y,\n                                left: element.left,\n                                top: element.top,\n                                width: element.width,\n                                height: element.height,\n                                rotation: element.rotation,\n                                scaleX: element.scaleX,\n                                scaleY: element.scaleY,\n                                alpha: element.colorAlphaPercent / 100,\n                                skewX: element.skewX,\n                                skewY: element.skewY,\n                                matrix: element.matrix,\n                                layer: element.layer,\n                                depth: element.depth,\n                                transformX: element.transformX,\n                                transformY: element.transformY\n                            });\n                        }\n                    }\n                }\n            }\n\n            if (group.elements.length > 0) {\n                layout.groups.push(group);\n            }\n        }\n\n        layouts.push(layout);\n    }\n    outl(\"local loqbutton = require(\\\"loq_ui_button\\\")\");\n    outl(\"\");\n    outl(\"local groups = nil \");\n    outl(\"local dimensions = nil \");\n    outl(\"local elements = nil \");\n    outl(\"\");\n    outl(\"local function createLayout(_spriteFactory,num)\");\n    outl(\"\\tassert(_spriteFactory ~= nil, \\\"Error in createLayout: _spriteFactory argument cannot be nil\\\")\");\n    outl(\"\\t--layout\");\n    \n    var stack = [];\n    for (ldx = 0; ldx < layouts.length; ++ldx) {\n        // create a new layout\n        var layoutName = \"layout\"+ ldx;\n        var filename = layoutName+\".lua\";\n        var layout = layouts[ldx]; \n\n        if (layout.groups.length > 0) {\n            //\u3053\u3053\u304b\u3089\n            if(ldx == 0){\n                outl(\"if \"+ldx+\" == num then \");    \n            }else{\n                outl(\"elseif \"+ldx+\" == num then \"); \n            }\n            outl(\"\\t\\tgroups = {}\");\n            outl(\"\\t\\tdimensions = {}\");\n            outl(\"\\t\\telements = {}\");\n            outl(\"\\t\\tlocal group = nil\")\n\n            var groups = layout.groups.reverse();\n\n            for (gdx = 0; gdx < groups.length; ++gdx) {\n                var group = groups[gdx];\n                var elements = group.elements;\n                outl(\"\\t\\t-- new group\");\n                for (edx = 0; edx < elements.length; edx++) {\n                    outl(setupElement(group.name, elements[edx]).nl());\n                }\n            }\n        }\n    }\n    outl(\"else return false end\\n\");    \n    \n    outl(\"\\t-- end layout\");\n    outl(\"\\treturn {groups = groups, dimensions = dimensions, elements = elements}\");\n    outl(\"end\\n\");\n\n    outl(\"return {\");\n    outl(\"\\tcreateLayout = createLayout\");\n    outl(\"\\t}\");\n    \n    var layouttxt = layoutScript;\n    layoutScript = \"\";\n    return layouttxt;\n}\n\n/**\n * \u3053\u3053\u304c\u521d\u671f\u51e6\u7406\n */\nfunction generateSelectedLayouts() {\n    var fileurl = fl.browseForFileURL('save', \"Select a file\");\n    var layout = generateLayout();\n    /*for(var l in layout){\n            FLfile.write(fileurl+l+'.lua', layout[l]);\n    }*/\n    FLfile.write(fileurl, layout);\n    clearOut();\n    out(\"created \" + fileurl);\n}\n\ngenerateSelectedLayouts();\n\n```\n\n\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u7121\u99c4\u306b\u305f\u304f\u3055\u3093\u30d5\u30a1\u30a4\u30eb\u3092\u5410\u3044\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u3072\u3068\u3064\u306eMC\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u30921\u30d5\u30a1\u30a4\u30eb\u3067\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\n\u30b3\u30ec\u3067\u3059\u3093\u3052\u30fc\u306f\u3084\u304f\u306a\u308a\u307e\u3057\u305f\uff08\u66d6\u6627)\u3002\n\n\u3067\u3001\u5b9f\u884c\u65b9\u6cd5\u3082\u3061\u3087\u3063\u3068\u5909\u308f\u308a\u307e\u3057\u305f\u3002\n\n```anim.lua\n--[[\n    \u5358\u7d14\u306a\u6f14\u51fa\u7528\n]]--\nlocal loqsprite = require('loq_sprite')\n\nlocal anim ={\n    \n    init = function(self,layout,num)\n        local animObj = {}\n        animObj.anim = require(layout)\n        animObj.cnt = num\n        animObj.k= function(img,g) \n            return {\n                stack ={},\n                notUsed ={},\n                grp = g,\n                i = img,\n                newSpriteGroup = function(self,name)\n                    if self.stack[name] == nil then\n                        self.stack[name] = self.i:newSpriteGroup(name)\n                        self.grp:insert(self.stack[name])\n                    end\n                    if self.notUsed[name] ~= nil then\n                        self.notUsed[name] = false\n                    end\n\n                    self.stack[name].alpha = 1\n                    return self.stack[name]\n                end         \n            }\n            end\n       return animObj\n    end\n    \n}\nreturn anim\n```\n\n\u4e0a\u8a18\u3092require\u3057\n\n```lua\n        --\u683c\u7d0d\u7528Group\n        local grp = display.newGroup()\n\n        local a = anim:init('JSFL\u3067\u304b\u304d\u51fa\u3057\u305flua',25)\n        local img     = loqsprite.newFactory('animo\u3067\u304b\u304d\u51fa\u3057\u305flua')\n        local obj = self.lvUpAnim.k(img,grp)  \n\n        local num = 0\n---\u3068\u3057\u3066\u3001\u3042\u3068\u306f\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u7684\u306a\u3068\u3053\u308d\u3067\n     \n     a.anim.createLayout(obj,num)\n    \n----\u3068\u3044\u3046\u611f\u3058\u3067\u30b3\u30de\u3092\u9001\u308b\u3002\n----num\u304c\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u306e\u7d42\u308f\u308a\u3092\u8d85\u3048\u305f\u3089\u7d42\u4e86\u306b\u306a\u308b\u51e6\u7406\u3092\u5165\u308c\u3066\u3084\u308b\u3002\n\n```\n\n\u307f\u305f\u3044\u306a\u611f\u3058\u2026\u3002\u3061\u3087\u3063\u3068\u8aac\u660e\u304c\u4e0d\u89aa\u5207\u3059\u304e\u307e\u3059\u306d\u2026\u3002\n\u307e\u3042\u3001\u305d\u3093\u306a\u611f\u3058\u3067\u2026\u3002\n\n\n\n", "tags": ["Corona"]}