{"context": "\u8a8d\u8a3c\u3001\u8a8d\u53ef\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u91cd\u8981\u306a\u6a5f\u69cb\u3067\u3059\u3002\nRails\u3067\u306fDevise(\u8a8d\u8a3c)\u3084CanCanCan(\u8a8d\u53ef)\u306a\u3069\u306eGem\u304c\u6709\u540d\u3067\u3059\u304c\u3001\n\u30b7\u30f3\u30d7\u30eb\u306a\u8a8d\u53ef\u306eGem\u306ePundit\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u7b2c64\u56de Ruby\u95a2\u897f \u52c9\u5f37\u4f1a\u306e\u767a\u8868\u3067\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u516c\u958b\u3057\u307e\u3057\u305f\u3002\n\nPundit\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u30a2\u30af\u30b7\u30e7\u30f3\uff08\u30e1\u30bd\u30c3\u30c9\uff09\u306b\u5bfe\u3059\u308b\u8a8d\u53ef\u306e\u30e1\u30ab\u30cb\u30ba\u30e0\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\n\u8a8d\u53ef\u306e\u30dd\u30ea\u30b7\u30fc\u306fPolicy\u30af\u30e9\u30b9\u306b\u8a31\u53ef\u306e\u51e6\u7406\u3092\u81ea\u524d\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\nGem\ngem 'pundit'\n\n\nApplicationController\napp/controllers/application_controller.rb\u306binclude Pundit\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\uff08\u3053\u306e\u4f8b\u3067\u306fcurrent_user\u304c\u8a8d\u53ef\u306e\u5bfe\u8c61\u306e\u30e6\u30fc\u30b6\u3067\u3059\u3002\uff09\n\u8a8d\u53ef\u306b\u5931\u6557\u3059\u308b\u3068rescue_from\u306euser_not_authorized\u30e1\u30bd\u30c3\u30c9\u3067\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u307e\u3059\u3002\nclass ApplicationController < ActionController::Base\n  include Pundit\n  protect_from_forgery with: :exception\n  helper_method :current_user\n  before_action :authenticate\n\n  rescue_from Pundit::NotAuthorizedError, with: :user_not_authorized\n\n  def current_user\n    @current_user ||= User.find(session[:user_id]) if session[:user_id].present?\n  end\n\n  private\n    def authenticate\n      if current_user.blank?\n        session[:user_redirect_url] = request.fullpath if request.get?\n        user_not_authenticated\n      end\n    end\n\n    def user_not_authenticated\n      session.delete :user_id\n      redirect_to user_sign_in_path\n    end\n\n    def user_not_authorized\n      flash[:error] = \"You are not authorized to perform this action.\"\n      redirect_to(request.referrer || root_path)\n    end\nend\n\n\nApplicationPolicy\n\u8a31\u53ef\u306e\u51e6\u7406\u306f\u3001\u624b\u524d\u307f\u305d\u3067\u3059\u304cGrantFront\u306eGem\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002\napp/policies/application_policy.rb\u306binclude GrantFront\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nclass ApplicationPolicy\n  include GrantFront\n  attr_reader :user, :record\n\n  def initialize(user, record)\n    @user = user\n    @record = record\n  end\n\n  def index?\n    false\n  end\n\n  def show?\n    index?\n  end\n\n  def create?\n    false\n  end\n\n  def new?\n    create?\n  end\n\n  def update?\n    false\n  end\n\n  def edit?\n    update?\n  end\n\n  def destroy?\n    false\n  end\nend\n\n\nUserPolicy\napp/policies/user_policy.rb\u306b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8a31\u53ef\u3059\u308b\u30ed\u30fc\u30eb\u3092grant\u30e1\u30bd\u30c3\u30c9\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\nclass UserPolicy < ApplicationPolicy\n  def index?\n    grant :foo, :bar, :baz\n  end\n\n  def create?\n    grant :foo, :bar\n  end\n\n  def update?\n    grant :foo, :bar\n  end\n\n  def destroy?\n    grant :foo\n  end\nend\n\n\nUsersController\nbefore_action :set_user\u3084before_action :authorize_user\u306eauthorize\u30e1\u30bd\u30c3\u30c9\u3067\u8a8d\u53ef\u306e\u8a31\u53ef\u3092\u5224\u65ad\u3057\u307e\u3059\u3002\n\uff08after_action :verify_authorized\u306fPundit\u306e\u51e6\u7406\u306e\u5fd8\u308c\u3092\u9632\u6b62\u3057\u307e\u3059\u3002\uff09\nclass UsersController < ApplicationController\n  before_action :set_user, only: [:show, :edit, :update, :destroy]\n  before_action :authorize_user, only: [:index, :new, :create]\n  after_action :verify_authorized\n\n  def index\n    @users = User.all\n  end\n\n  def show\n  end\n\n  def new\n    @user = User.new\n  end\n\n  def edit\n  end\n\n  def create\n    @user = User.new(user_params)\n    @user.roles = @user.roles.split(',').map {|role| role.strip.to_sym}\n    if @user.save\n      redirect_to @user, notice: 'User was successfully created.'\n    else\n      render :new\n    end\n  end\n\n  def update\n    user = user_params\n    user['roles'] = user['roles'].split(',').map {|role| role.strip.to_sym}\n    if @user.update(user)\n      redirect_to @user, notice: 'User was successfully updated.'\n    else\n      render :edit\n    end\n  end\n\n  def destroy\n    @user.destroy\n    redirect_to users_url, notice: 'User was successfully destroyed.'\n  end\n\n  private\n    def set_user\n      @user = User.find(params[:id])\n      authorize @user\n    end\n\n    def authorize_user\n      authorize User\n    end\n\n    def user_params\n      params.require(:user).permit(:name, :email, :username, :roles)\n    end\nend\n\n\nGrantFront\nPolicy\u30af\u30e9\u30b9\u306b\u8a31\u53ef\u306e\u30e1\u30ab\u30cb\u30ba\u30e0\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\n\nGem\ngem 'grant-front'\n\n\nGrant\nuser\u306eroles\u306bgrant\u30e1\u30bd\u30c3\u30c9\u306e\u30ed\u30fc\u30eb\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3068true\u3092\u8fd4\u3057\u307e\u3059\u3002\n  private\n    def grant(*roles)\n      roles.each do |role|\n        return true if user.roles.include? role\n      end\n      return false\n    end\n\n\nDrawing\nGrantFront\u306fDomain-Driven Design\u3084Design-Driven Development\u3067\u306f\u306a\u3044 DDD \u306e\nDrawing-Driven Development\u306e \u898b\u3048\u308b\u5316 \u958b\u767a \u3067\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\uff08\u958b\u767a\u3092\u9032\u3081\u306a\u304c\u3089\u8a8d\u53ef\u306e\u78ba\u8a8d\u304c\u3067\u304d\u3066\u4fbf\u5229\u3067\u3059\u3002\uff09\n\n\nDraper\n\u30e2\u30c7\u30eb\u306b\u30d3\u30e5\u30fc\u3067\u5229\u7528\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u30c7\u30b3\u30ec\u30fc\u30bf\u3067\u8ffd\u52a0\u3059\u308b\u30e1\u30ab\u30cb\u30ba\u30e0\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\n\uff08Pundit\u3068Draper\u306eGem\u306f\u7d44\u5408\u305b\u3066\u5229\u7528\u3067\u304d\u307e\u3059\u3002\uff09\n\nGem\ngem 'draper'\n\n\nUsersController\napp/controllers/users_controller.rb\u306eUser.find\u306b.decorate\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n  private\n    def set_user\n      @user = User.find(params[:id]).decorate\n      authorize @user\n    end\n\n\nUserDecorator\napp/decorators/user_decorator.rb\u306bupdate\u3068destroy\u306e\u8a31\u53ef\u304c\u3042\u308c\u3070\u30dc\u30bf\u30f3\u3092\u8868\u793a\u3059\u308b\nlink_to_edit\u3068link_to_destroy\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nclass UserDecorator < Draper::Decorator\n  delegate_all\n\n  def link_to_edit\n    if h.policy(object).update?\n      h.link_to h.t('.edit', default: h.t(\"helpers.links.edit\")),\n                h.edit_user_path(object), class: 'btn btn-primary'\n    end\n  end\n\n  def link_to_destroy\n    if h.policy(object).destroy?\n      h.link_to h.t('.destroy', default: h.t(\"helpers.links.destroy\")),\n                h.user_path(object), method: 'delete', class: 'btn btn-danger',\n                data: { confirm: h.t('.confirm',\n                        default: h.t(\"helpers.links.confirm\", default: 'Are you sure?')) }\n    end\n  end\nend\n\n\nView\napp/views/users/show.html.erb\u306b@user.link_to_edit\u3068@user.link_to_destroy\u3092\u8ffd\u52a0\u3059\u308b\u3068\n\u30dd\u30ea\u30b7\u30fc\u306e\u8a8d\u53ef\u3068\u30dc\u30bf\u30f3\u306e\u8868\u793a\u3001\u975e\u8868\u793a\u304c\u9023\u643a\u3057\u307e\u3059\u3002\n<%- model_class = User -%>\n<%- content_for :sub_title do -%>\n  <%=t '.title', :default => model_class.model_name.human %>\n<%- end -%>\n\n<dl class=\"dl-horizontal\">\n  <dt><strong><%= model_class.human_attribute_name(:state) %>:</strong></dt>\n  <dd><%= @user.state %></dd>\n  <dt><strong><%= model_class.human_attribute_name(:name) %>:</strong></dt>\n  <dd><%= @user.name %></dd>\n</dl>\n\n<div class=\"form-actions\">\n  <%= @user.link_to_edit %>\n  <%= @user.link_to_destroy %>\n</div>\n\n\u8a8d\u53ef\u306e\u51e6\u7406\u3060\u3051\u3067\u306a\u304f\u30dd\u30ea\u30b7\u30fc\u3068\u30e1\u30ab\u30cb\u30ba\u30e0\u306e\u5206\u96e2\u306f\u3001Rails\u306e\u30e2\u30c7\u30eb\u30fb\u30d3\u30e5\u30fc\u30fb\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3092\u5c0f\u3055\u304f\u4fdd\u3061\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30b6\u30a4\u30f3\u306b\u826f\u3044\u52b9\u679c\u304c\u751f\u307e\u308c\u307e\u3059\u3002\n\u8a8d\u8a3c\u3001\u8a8d\u53ef\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u91cd\u8981\u306a\u6a5f\u69cb\u3067\u3059\u3002\nRails\u3067\u306f[Devise](https://github.com/plataformatec/devise)(\u8a8d\u8a3c)\u3084[CanCanCan](https://github.com/CanCanCommunity/cancancan)(\u8a8d\u53ef)\u306a\u3069\u306eGem\u304c\u6709\u540d\u3067\u3059\u304c\u3001\n\u30b7\u30f3\u30d7\u30eb\u306a\u8a8d\u53ef\u306eGem\u306e[Pundit](https://github.com/elabs/pundit)\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n[\u7b2c64\u56de Ruby\u95a2\u897f \u52c9\u5f37\u4f1a](https://speakerdeck.com/ogom/ddd-with-rails)\u306e\u767a\u8868\u3067[\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9](https://github.com/dddrb/rails-ddd)\u3092\u516c\u958b\u3057\u307e\u3057\u305f\u3002\n\n## Pundit\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u30a2\u30af\u30b7\u30e7\u30f3\uff08\u30e1\u30bd\u30c3\u30c9\uff09\u306b\u5bfe\u3059\u308b\u8a8d\u53ef\u306e\u30e1\u30ab\u30cb\u30ba\u30e0\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\n\u8a8d\u53ef\u306e\u30dd\u30ea\u30b7\u30fc\u306f`Policy`\u30af\u30e9\u30b9\u306b\u8a31\u53ef\u306e\u51e6\u7406\u3092\u81ea\u524d\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n### Gem\n\n```ruby\ngem 'pundit'\n```\n\n### ApplicationController\n\n`app/controllers/application_controller.rb`\u306b`include Pundit`\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\uff08\u3053\u306e\u4f8b\u3067\u306f`current_user`\u304c\u8a8d\u53ef\u306e\u5bfe\u8c61\u306e\u30e6\u30fc\u30b6\u3067\u3059\u3002\uff09\n\n\u8a8d\u53ef\u306b\u5931\u6557\u3059\u308b\u3068`rescue_from`\u306e`user_not_authorized`\u30e1\u30bd\u30c3\u30c9\u3067\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u307e\u3059\u3002\n\n```ruby\nclass ApplicationController < ActionController::Base\n  include Pundit\n  protect_from_forgery with: :exception\n  helper_method :current_user\n  before_action :authenticate\n\n  rescue_from Pundit::NotAuthorizedError, with: :user_not_authorized\n\n  def current_user\n    @current_user ||= User.find(session[:user_id]) if session[:user_id].present?\n  end\n\n  private\n    def authenticate\n      if current_user.blank?\n        session[:user_redirect_url] = request.fullpath if request.get?\n        user_not_authenticated\n      end\n    end\n\n    def user_not_authenticated\n      session.delete :user_id\n      redirect_to user_sign_in_path\n    end\n\n    def user_not_authorized\n      flash[:error] = \"You are not authorized to perform this action.\"\n      redirect_to(request.referrer || root_path)\n    end\nend\n```\n\n### ApplicationPolicy\n\n\u8a31\u53ef\u306e\u51e6\u7406\u306f\u3001\u624b\u524d\u307f\u305d\u3067\u3059\u304c[GrantFront](https://github.com/ogom/grant-front)\u306eGem\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002\n`app/policies/application_policy.rb`\u306b`include GrantFront`\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```ruby\nclass ApplicationPolicy\n  include GrantFront\n  attr_reader :user, :record\n\n  def initialize(user, record)\n    @user = user\n    @record = record\n  end\n\n  def index?\n    false\n  end\n\n  def show?\n    index?\n  end\n\n  def create?\n    false\n  end\n\n  def new?\n    create?\n  end\n\n  def update?\n    false\n  end\n\n  def edit?\n    update?\n  end\n\n  def destroy?\n    false\n  end\nend\n```\n\n### UserPolicy\n\n`app/policies/user_policy.rb`\u306b\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u8a31\u53ef\u3059\u308b\u30ed\u30fc\u30eb\u3092`grant`\u30e1\u30bd\u30c3\u30c9\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```ruby\nclass UserPolicy < ApplicationPolicy\n  def index?\n    grant :foo, :bar, :baz\n  end\n\n  def create?\n    grant :foo, :bar\n  end\n\n  def update?\n    grant :foo, :bar\n  end\n\n  def destroy?\n    grant :foo\n  end\nend\n```\n\n### UsersController\n\n`before_action :set_user`\u3084`before_action :authorize_user`\u306e`authorize`\u30e1\u30bd\u30c3\u30c9\u3067\u8a8d\u53ef\u306e\u8a31\u53ef\u3092\u5224\u65ad\u3057\u307e\u3059\u3002\n\uff08`after_action :verify_authorized`\u306f`Pundit`\u306e\u51e6\u7406\u306e\u5fd8\u308c\u3092\u9632\u6b62\u3057\u307e\u3059\u3002\uff09\n\n```ruby\nclass UsersController < ApplicationController\n  before_action :set_user, only: [:show, :edit, :update, :destroy]\n  before_action :authorize_user, only: [:index, :new, :create]\n  after_action :verify_authorized\n\n  def index\n    @users = User.all\n  end\n\n  def show\n  end\n\n  def new\n    @user = User.new\n  end\n\n  def edit\n  end\n\n  def create\n    @user = User.new(user_params)\n    @user.roles = @user.roles.split(',').map {|role| role.strip.to_sym}\n    if @user.save\n      redirect_to @user, notice: 'User was successfully created.'\n    else\n      render :new\n    end\n  end\n\n  def update\n    user = user_params\n    user['roles'] = user['roles'].split(',').map {|role| role.strip.to_sym}\n    if @user.update(user)\n      redirect_to @user, notice: 'User was successfully updated.'\n    else\n      render :edit\n    end\n  end\n\n  def destroy\n    @user.destroy\n    redirect_to users_url, notice: 'User was successfully destroyed.'\n  end\n\n  private\n    def set_user\n      @user = User.find(params[:id])\n      authorize @user\n    end\n\n    def authorize_user\n      authorize User\n    end\n\n    def user_params\n      params.require(:user).permit(:name, :email, :username, :roles)\n    end\nend\n```\n\n## GrantFront\n\n`Policy`\u30af\u30e9\u30b9\u306b\u8a31\u53ef\u306e\u30e1\u30ab\u30cb\u30ba\u30e0\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\n\n### Gem\n\n```ruby\ngem 'grant-front'\n```\n\n### Grant\n\n`user`\u306e`roles`\u306b`grant`\u30e1\u30bd\u30c3\u30c9\u306e\u30ed\u30fc\u30eb\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3068`true`\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```ruby\n  private\n    def grant(*roles)\n      roles.each do |role|\n        return true if user.roles.include? role\n      end\n      return false\n    end\n```\n\n### Drawing\n\nGrantFront\u306f`Domain-Driven Design`\u3084`Design-Driven Development`\u3067\u306f\u306a\u3044 **DDD** \u306e\n[Drawing-Driven Development](https://speakerdeck.com/ogom/draw-with-rails)\u306e **\u898b\u3048\u308b\u5316 \u958b\u767a** \u3067\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\uff08\u958b\u767a\u3092\u9032\u3081\u306a\u304c\u3089\u8a8d\u53ef\u306e\u78ba\u8a8d\u304c\u3067\u304d\u3066\u4fbf\u5229\u3067\u3059\u3002\uff09\n\n![example](http://ogom.github.io/grant-front/assets/img/example.png)\n\n## Draper\n\n\u30e2\u30c7\u30eb\u306b\u30d3\u30e5\u30fc\u3067\u5229\u7528\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u30c7\u30b3\u30ec\u30fc\u30bf\u3067\u8ffd\u52a0\u3059\u308b\u30e1\u30ab\u30cb\u30ba\u30e0\u304c\u63d0\u4f9b\u3055\u308c\u307e\u3059\u3002\n\uff08Pundit\u3068[Draper](https://github.com/drapergem/draper)\u306eGem\u306f\u7d44\u5408\u305b\u3066\u5229\u7528\u3067\u304d\u307e\u3059\u3002\uff09\n\n### Gem\n\n```ruby\ngem 'draper'\n```\n\n### UsersController\n\n`app/controllers/users_controller.rb`\u306e`User.find`\u306b`.decorate`\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```ruby\n  private\n    def set_user\n      @user = User.find(params[:id]).decorate\n      authorize @user\n    end\n```\n\n### UserDecorator\n\n`app/decorators/user_decorator.rb`\u306b`update`\u3068`destroy`\u306e\u8a31\u53ef\u304c\u3042\u308c\u3070\u30dc\u30bf\u30f3\u3092\u8868\u793a\u3059\u308b\n`link_to_edit`\u3068`link_to_destroy`\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```ruby\nclass UserDecorator < Draper::Decorator\n  delegate_all\n\n  def link_to_edit\n    if h.policy(object).update?\n      h.link_to h.t('.edit', default: h.t(\"helpers.links.edit\")),\n                h.edit_user_path(object), class: 'btn btn-primary'\n    end\n  end\n\n  def link_to_destroy\n    if h.policy(object).destroy?\n      h.link_to h.t('.destroy', default: h.t(\"helpers.links.destroy\")),\n                h.user_path(object), method: 'delete', class: 'btn btn-danger',\n                data: { confirm: h.t('.confirm',\n                        default: h.t(\"helpers.links.confirm\", default: 'Are you sure?')) }\n    end\n  end\nend\n```\n\n### View\n\n`app/views/users/show.html.erb`\u306b`@user.link_to_edit`\u3068`@user.link_to_destroy`\u3092\u8ffd\u52a0\u3059\u308b\u3068\n\u30dd\u30ea\u30b7\u30fc\u306e\u8a8d\u53ef\u3068\u30dc\u30bf\u30f3\u306e\u8868\u793a\u3001\u975e\u8868\u793a\u304c\u9023\u643a\u3057\u307e\u3059\u3002\n\n```html\n<%- model_class = User -%>\n<%- content_for :sub_title do -%>\n  <%=t '.title', :default => model_class.model_name.human %>\n<%- end -%>\n\n<dl class=\"dl-horizontal\">\n  <dt><strong><%= model_class.human_attribute_name(:state) %>:</strong></dt>\n  <dd><%= @user.state %></dd>\n  <dt><strong><%= model_class.human_attribute_name(:name) %>:</strong></dt>\n  <dd><%= @user.name %></dd>\n</dl>\n\n<div class=\"form-actions\">\n  <%= @user.link_to_edit %>\n  <%= @user.link_to_destroy %>\n</div>\n```\n\n\u8a8d\u53ef\u306e\u51e6\u7406\u3060\u3051\u3067\u306a\u304f\u30dd\u30ea\u30b7\u30fc\u3068\u30e1\u30ab\u30cb\u30ba\u30e0\u306e\u5206\u96e2\u306f\u3001Rails\u306e\u30e2\u30c7\u30eb\u30fb\u30d3\u30e5\u30fc\u30fb\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3092\u5c0f\u3055\u304f\u4fdd\u3061\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c7\u30b6\u30a4\u30f3\u306b\u826f\u3044\u52b9\u679c\u304c\u751f\u307e\u308c\u307e\u3059\u3002\n", "tags": ["DDD", "Rails", "Ruby"]}