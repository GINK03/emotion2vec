{"context": " More than 1 year has passed since last update.Iterator \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3068\u304d\u306b\u3001\u3068\u308a\u3042\u3048\u305a Iterator \u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306f\u6e80\u305f\u3057\u3066\u3044\u308b\u304b\u30c6\u30b9\u30c8\u3059\u308b\u305f\u3081\u306eAssertion\u3067\u3059\u3002PHPUnit\u3067\u4f7f\u3044\u307e\u3059\u3002\n<?php\n    /**\n     * Assert that the object is iterable\n     * @param \\Iterator $iterator\n     */\n    public function assertIterable(Iterator $iterator)\n    {\n        $result1 = array();\n        $result2 = array();\n\n        foreach ( $iterator as $key => $item ) {\n            $result1[] = array('key' => $key, 'item' => $item);\n        }\n\n        foreach ( $iterator as $key => $item ) {\n            $result2[] = array('key' => $key, 'item' => $item);\n        }\n\n        $this->assertTrue(count($result1) >= 2, 'Iterator must have more than 2 items');\n        $this->assertSame($result1, $result2, 'Iteration should be free to side effect');\n    }\n\n\n`Iterator` \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5b9f\u88c5\u3057\u3066\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3068\u304d\u306b\u3001\u3068\u308a\u3042\u3048\u305a `Iterator` \u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306f\u6e80\u305f\u3057\u3066\u3044\u308b\u304b\u30c6\u30b9\u30c8\u3059\u308b\u305f\u3081\u306eAssertion\u3067\u3059\u3002PHPUnit\u3067\u4f7f\u3044\u307e\u3059\u3002\n\n```php\n<?php\n    /**\n     * Assert that the object is iterable\n     * @param \\Iterator $iterator\n     */\n    public function assertIterable(Iterator $iterator)\n    {\n        $result1 = array();\n        $result2 = array();\n\n        foreach ( $iterator as $key => $item ) {\n            $result1[] = array('key' => $key, 'item' => $item);\n        }\n\n        foreach ( $iterator as $key => $item ) {\n            $result2[] = array('key' => $key, 'item' => $item);\n        }\n\n        $this->assertTrue(count($result1) >= 2, 'Iterator must have more than 2 items');\n        $this->assertSame($result1, $result2, 'Iteration should be free to side effect');\n    }\n```", "tags": ["PHPUnit", "PHP"]}