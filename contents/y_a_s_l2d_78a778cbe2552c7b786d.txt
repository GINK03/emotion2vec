{"context": "[2016/04/11 \u6295\u7a3f]\nLive2D SDK for OpenGL \u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3001\u30e2\u30c7\u30eb\u3092\u30aa\u30d5\u30b9\u30af\u30ea\u30fc\u30f3\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u6a5f\u80fd\u8ffd\u52a0\u306e\u30e1\u30e2\u3002\n\n\u74b0\u5883\n\nLive2D SDK\uff1a2.0.10\nCocos2d-x\uff1a3.5\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff1a/sample_cocos2dx3.5/Simple\n\n\n\u30b3\u30fc\u30c9\n\u203b\u30b3\u30e1\u30f3\u30c8\u306f\u8ffd\u52a0\u90e8\u5206\u306e\u307f\u3001\u5143\u3005\u3042\u3063\u305f\u30b3\u30e1\u30f3\u30c8\u306f\u5168\u3066\u524a\u9664\u3002\n\nSampleLive2DSprite.cpp\n#include \"SampleLive2DSprite.h\"\n#include \"base/CCDirector.h\"\n#include \"util/UtSystem.h\"\n\n#include \"graphics/DrawProfileCocos2D.h\"\n#include \"platform/CCFileUtils.h\"\n\nusing namespace live2d;\nUSING_NS_CC;\nconst char* TEXTURES[] ={\n    \"texture_00.png\" ,\n    \"texture_01.png\" ,\n    \"texture_02.png\" ,\n    NULL\n} ;\n\n// \u8ffd\u52a0\ncocos2d::CCRenderTexture *renderTexture;\ncocos2d::CCSprite *sprite;\nGLuint color_buffer;\nGLuint frame_buffer;\n\nSampleLive2DSprite::SampleLive2DSprite()\n: live2DModel(nullptr)\n{\n}\n\nSampleLive2DSprite::~SampleLive2DSprite()\n{\n    delete live2DModel;\n    Director::getInstance()->getTextureCache()->removeTextureForKey(std::string(TEXTURES[0]));\n    Director::getInstance()->getTextureCache()->removeTextureForKey(std::string(TEXTURES[1]));\n    Director::getInstance()->getTextureCache()->removeTextureForKey(std::string(TEXTURES[2]));\n\n}\n\nbool SampleLive2DSprite::init()\n{\n    if (DrawNode::init())\n    {\n        if (live2DModel != nullptr)\n        {\n            delete live2DModel;\n            live2DModel = nullptr;\n        }\n\n        const char* MODEL = \"haru.moc\" ;\n\n        unsigned char* buf;\n        ssize_t bufSize;\n        buf = FileUtils::getInstance()->getFileData(MODEL,\"rb\", &bufSize);\n\n        live2DModel = Live2DModelOpenGL::loadModel( buf,bufSize ) ;\n        free(buf);\n\n        auto chacheMgr = Director::getInstance()->getTextureCache();\n        for( int i = 0 ; TEXTURES[i] != NULL ; i++ )\n        {\n            Texture2D* texture = chacheMgr->addImage(TEXTURES[i]);\n\n            Texture2D::TexParams texParams = { GL_LINEAR_MIPMAP_LINEAR, GL_LINEAR, GL_CLAMP_TO_EDGE, GL_CLAMP_TO_EDGE };\n            texture->setTexParameters(texParams);\n            texture->generateMipmap();\n\n            int glTexNo = texture->getName() ;\n\n            live2DModel->setTexture( i , glTexNo ) ;\n        }\n\n        float w = Director::getInstance()->getWinSize().width;\n        float h = Director::getInstance()->getWinSize().height;\n        float scx = 2.0 / live2DModel->getCanvasWidth() ;\n        float scy = -2.0 / live2DModel->getCanvasWidth() * (w/h);\n        float x = -1 ;\n        float y = 1 ;\n        float matrix []= {\n            scx , 0 , 0 , 0 ,\n            0 , scy ,0 , 0 ,\n            0 , 0 , 1 , 0 ,\n            x , y , 0 , 1\n        } ;\n\n        live2DModel->setMatrix(matrix) ;\n\n        live2DModel->setPremultipliedAlpha( true );\n\n\n        CCSize size = CCDirector::sharedDirector()->getWinSize();\n\n        // Sprite\u306e\u4f5c\u6210\n        // \u753b\u9762\u306e2/3\u306e\u30b5\u30a4\u30ba\u3067\u4e2d\u592e\u306b\u914d\u7f6e\n        renderTexture = RenderTexture::create(size.width/3*2, size.height/3*2);\n        renderTexture->setPosition(ccp(size.width/2, size.height/2));\n        addChild(renderTexture);\n        sprite=renderTexture->getSprite();\n\n        // \u4e0d\u900f\u660e\u5ea6\u306e\u5909\u66f4\u3092\u3059\u308b\u306a\u3089\u4e88\u3081\u8a2d\u5b9a\u3057\u3066\u304a\u304f\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u4e57\u7b97\u6e08\u30a2\u30eb\u30d5\u30a1\u3067\u63cf\u753b\u3055\u308c\u308b\u305f\u3081\u3001\u534a\u900f\u660e\u6642\u306b\u63cf\u753b\u304c\u304a\u304b\u3057\u304f\u306a\u308b\uff09\n        sprite->setBlendFunc(BlendFunc::ALPHA_NON_PREMULTIPLIED);\n\n\n        // \u524d\u51e6\u7406\n        GLint oldFBO;\n        glGetIntegerv(GL_FRAMEBUFFER_BINDING, &oldFBO);\n\n        // \u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n        color_buffer = sprite->getTexture()->getName();\n        glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, size.width, size.height, 0, GL_RGBA, GL_UNSIGNED_BYTE, 0);\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\n        glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\n\n        glGenFramebuffers(1, &frame_buffer);\n        glBindFramebuffer(GL_FRAMEBUFFER, frame_buffer);\n        glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, color_buffer, 0);\n\n        // \u5f8c\u51e6\u7406\n        glBindFramebuffer(GL_FRAMEBUFFER, oldFBO);\n        glBindTexture(GL_TEXTURE_2D, 0);\n    }\n\n    return true;\n}\n\nvoid SampleLive2DSprite::draw(cocos2d::Renderer *renderer, const cocos2d::Mat4 &transform, uint32_t flags)\n{\n\n    // \u524d\u51e6\u7406\n    GLint oldFBO;\n    glGetIntegerv(GL_FRAMEBUFFER_BINDING, &oldFBO);\n\n    // \u30aa\u30d5\u30b9\u30af\u30ea\u30fc\u30f3\u3078\u306e\u63cf\u753b\u3092\u958b\u59cb\n    glBindFramebuffer(GL_FRAMEBUFFER, frame_buffer);\n\n    // \u30aa\u30d5\u30b9\u30af\u30ea\u30fc\u30f3\u90e8\u5206\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u80cc\u666f\u8272\u3092\u5909\u66f4\n    glClearColor(0,30,255,255);\n    glClear(GL_COLOR_BUFFER_BIT );\n\n\n    kmGLPushMatrix();\n    kmGLLoadMatrix(&transform);\n\n\n    double t = (UtSystem::getUserTimeMSec()/1000.0) * 2 * M_PI  ;\n    double cycle=3.0;\n    double value=sin( t/cycle );\n\n    live2d::DrawProfileCocos2D::preDraw();\n\n    live2DModel->update() ;\n    live2DModel->draw() ;\n\n    live2d::DrawProfileCocos2D::postDraw() ;\n\n    kmGLPopMatrix();\n\n\n\n    // \u30aa\u30d5\u30b9\u30af\u30ea\u30fc\u30f3\u3078\u306e\u63cf\u753b\u3092\u7d42\u4e86\n    glBindFramebuffer(GL_FRAMEBUFFER, oldFBO);\n\n    // \u308f\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u753b\u9762\u3092\u5225\u306e\u8272\u3067\u30af\u30ea\u30a2\u3002\n    glClearColor(0,0,0,255); \n\n    // \u4e0d\u900f\u660e\u5ea6\u3092\u8a2d\u5b9a \u5024\u306f0\uff5e255\u306e\u7bc4\u56f2\n    sprite->setOpacity((value+1) / 2 * 255);\n\n    // Sprite\u3078\u63cf\u753b\n    sprite->draw(renderer, transform, flags);\n}\n\nSampleLive2DSprite* SampleLive2DSprite::createDrawNode()\n{\n    SampleLive2DSprite *ret = new SampleLive2DSprite();\n    if (ret && ret->init())\n    {\n        ret->autorelease();\n        return ret;\n    }\n    else\n    {\n        CC_SAFE_DELETE(ret);\n        return nullptr;\n    }\n}\n\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\n\n\u53c2\u8003\u30ea\u30f3\u30af\n2010\u5e7412\u670807\u65e5 [OpenGL] \u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f7f\u3044\u65b9\u3042\u3052\u3044\u3093\ncocos2dx3.2\uff20Live2D\u3067\u30aa\u30d5\u30b9\u30af\u30ea\u30fc\u30f3\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0 \uff08\u672c\u7a3f\u306f\u307b\u307c\u3053\u306e\u30da\u30fc\u30b8\u306e\u5185\u5bb9\u307e\u3093\u307e\uff09\n[2016/04/11 \u6295\u7a3f]\nLive2D SDK for OpenGL \u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3001\u30e2\u30c7\u30eb\u3092\u30aa\u30d5\u30b9\u30af\u30ea\u30fc\u30f3\u3067\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u6a5f\u80fd\u8ffd\u52a0\u306e\u30e1\u30e2\u3002\n\n###\u74b0\u5883\n- Live2D SDK\uff1a2.0.10\n- Cocos2d-x\uff1a3.5\n- \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff1a/sample_cocos2dx3.5/Simple\n\n###\u30b3\u30fc\u30c9\n\u203b\u30b3\u30e1\u30f3\u30c8\u306f\u8ffd\u52a0\u90e8\u5206\u306e\u307f\u3001\u5143\u3005\u3042\u3063\u305f\u30b3\u30e1\u30f3\u30c8\u306f\u5168\u3066\u524a\u9664\u3002\n\n```cpp:SampleLive2DSprite.cpp\n#include \"SampleLive2DSprite.h\"\n#include \"base/CCDirector.h\"\n#include \"util/UtSystem.h\"\n\n#include \"graphics/DrawProfileCocos2D.h\"\n#include \"platform/CCFileUtils.h\"\n\nusing namespace live2d;\nUSING_NS_CC;\nconst char* TEXTURES[] ={\n\t\"texture_00.png\" ,\n\t\"texture_01.png\" ,\n\t\"texture_02.png\" ,\n\tNULL\n} ;\n\n// \u8ffd\u52a0\ncocos2d::CCRenderTexture *renderTexture;\ncocos2d::CCSprite *sprite;\nGLuint color_buffer;\nGLuint frame_buffer;\n\nSampleLive2DSprite::SampleLive2DSprite()\n: live2DModel(nullptr)\n{\n}\n\nSampleLive2DSprite::~SampleLive2DSprite()\n{\n\tdelete live2DModel;\n\tDirector::getInstance()->getTextureCache()->removeTextureForKey(std::string(TEXTURES[0]));\n\tDirector::getInstance()->getTextureCache()->removeTextureForKey(std::string(TEXTURES[1]));\n\tDirector::getInstance()->getTextureCache()->removeTextureForKey(std::string(TEXTURES[2]));\n\n}\n\nbool SampleLive2DSprite::init()\n{\n\tif (DrawNode::init())\n\t{\n\t\tif (live2DModel != nullptr)\n\t\t{\n\t\t\tdelete live2DModel;\n\t\t\tlive2DModel = nullptr;\n\t\t}\n\t\t\n\t\tconst char* MODEL = \"haru.moc\" ;\n\n\t\tunsigned char* buf;\n\t\tssize_t bufSize;\n\t\tbuf = FileUtils::getInstance()->getFileData(MODEL,\"rb\", &bufSize);\n\t\t\n\t\tlive2DModel = Live2DModelOpenGL::loadModel( buf,bufSize ) ;\n\t\tfree(buf);\n\n\t\tauto chacheMgr = Director::getInstance()->getTextureCache();\n\t\tfor( int i = 0 ; TEXTURES[i] != NULL ; i++ )\n\t\t{\n\t\t\tTexture2D* texture = chacheMgr->addImage(TEXTURES[i]);\n\n\t\t\tTexture2D::TexParams texParams = { GL_LINEAR_MIPMAP_LINEAR, GL_LINEAR, GL_CLAMP_TO_EDGE, GL_CLAMP_TO_EDGE };\n\t\t\ttexture->setTexParameters(texParams);\n\t\t\ttexture->generateMipmap();\n\n\t\t\tint glTexNo = texture->getName() ;\n\n\t\t\tlive2DModel->setTexture( i , glTexNo ) ;\n\t\t}\n\n\t\tfloat w = Director::getInstance()->getWinSize().width;\n\t\tfloat h = Director::getInstance()->getWinSize().height;\n\t\tfloat scx = 2.0 / live2DModel->getCanvasWidth() ;\n\t\tfloat scy = -2.0 / live2DModel->getCanvasWidth() * (w/h);\n\t\tfloat x = -1 ;\n\t\tfloat y = 1 ;\n\t\tfloat matrix []= {\n\t\t\tscx , 0 , 0 , 0 ,\n\t\t\t0 , scy ,0 , 0 ,\n\t\t\t0 , 0 , 1 , 0 ,\n\t\t\tx , y , 0 , 1\n\t\t} ;\n\t\t\n\t\tlive2DModel->setMatrix(matrix) ;\n\t\t\n\t\tlive2DModel->setPremultipliedAlpha( true );\n\n\n\t\tCCSize size = CCDirector::sharedDirector()->getWinSize();\n\n\t\t// Sprite\u306e\u4f5c\u6210\n\t\t// \u753b\u9762\u306e2/3\u306e\u30b5\u30a4\u30ba\u3067\u4e2d\u592e\u306b\u914d\u7f6e\n\t\trenderTexture = RenderTexture::create(size.width/3*2, size.height/3*2);\n\t\trenderTexture->setPosition(ccp(size.width/2, size.height/2));\n\t\taddChild(renderTexture);\n\t\tsprite=renderTexture->getSprite();\n\n\t\t// \u4e0d\u900f\u660e\u5ea6\u306e\u5909\u66f4\u3092\u3059\u308b\u306a\u3089\u4e88\u3081\u8a2d\u5b9a\u3057\u3066\u304a\u304f\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u4e57\u7b97\u6e08\u30a2\u30eb\u30d5\u30a1\u3067\u63cf\u753b\u3055\u308c\u308b\u305f\u3081\u3001\u534a\u900f\u660e\u6642\u306b\u63cf\u753b\u304c\u304a\u304b\u3057\u304f\u306a\u308b\uff09\n\t\tsprite->setBlendFunc(BlendFunc::ALPHA_NON_PREMULTIPLIED);\n\n\n\t\t// \u524d\u51e6\u7406\n\t\tGLint oldFBO;\n\t\tglGetIntegerv(GL_FRAMEBUFFER_BINDING, &oldFBO);\n\t\t\n\t\t// \u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\t\tcolor_buffer = sprite->getTexture()->getName();\n\t\tglTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, size.width, size.height, 0, GL_RGBA, GL_UNSIGNED_BYTE, 0);\n\t\tglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_S, GL_CLAMP_TO_EDGE);\n\t\tglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_WRAP_T, GL_CLAMP_TO_EDGE);\n\t\tglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_LINEAR);\n\t\tglTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_LINEAR);\n\n\t\tglGenFramebuffers(1, &frame_buffer);\n\t\tglBindFramebuffer(GL_FRAMEBUFFER, frame_buffer);\n\t\tglFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, color_buffer, 0);\n\n\t\t// \u5f8c\u51e6\u7406\n\t\tglBindFramebuffer(GL_FRAMEBUFFER, oldFBO);\n\t\tglBindTexture(GL_TEXTURE_2D, 0);\n\t}\n\n\treturn true;\n}\n\nvoid SampleLive2DSprite::draw(cocos2d::Renderer *renderer, const cocos2d::Mat4 &transform, uint32_t flags)\n{\n\t\n\t// \u524d\u51e6\u7406\n\tGLint oldFBO;\n\tglGetIntegerv(GL_FRAMEBUFFER_BINDING, &oldFBO);\n\t\n\t// \u30aa\u30d5\u30b9\u30af\u30ea\u30fc\u30f3\u3078\u306e\u63cf\u753b\u3092\u958b\u59cb\n\tglBindFramebuffer(GL_FRAMEBUFFER, frame_buffer);\n\n\t// \u30aa\u30d5\u30b9\u30af\u30ea\u30fc\u30f3\u90e8\u5206\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u80cc\u666f\u8272\u3092\u5909\u66f4\n\tglClearColor(0,30,255,255);\n\tglClear(GL_COLOR_BUFFER_BIT );\n\n\n\tkmGLPushMatrix();\n\tkmGLLoadMatrix(&transform);\n \n\t\n\tdouble t = (UtSystem::getUserTimeMSec()/1000.0) * 2 * M_PI  ;\n\tdouble cycle=3.0;\n\tdouble value=sin( t/cycle );\n\n\tlive2d::DrawProfileCocos2D::preDraw();\n\t\n\tlive2DModel->update() ;\n\tlive2DModel->draw() ;\n\t\n\tlive2d::DrawProfileCocos2D::postDraw() ;\n\n\tkmGLPopMatrix();\n\n\t\n\n\t// \u30aa\u30d5\u30b9\u30af\u30ea\u30fc\u30f3\u3078\u306e\u63cf\u753b\u3092\u7d42\u4e86\n\tglBindFramebuffer(GL_FRAMEBUFFER, oldFBO);\n\n\t// \u308f\u304b\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u753b\u9762\u3092\u5225\u306e\u8272\u3067\u30af\u30ea\u30a2\u3002\n\tglClearColor(0,0,0,255); \n\t\n\t// \u4e0d\u900f\u660e\u5ea6\u3092\u8a2d\u5b9a \u5024\u306f0\uff5e255\u306e\u7bc4\u56f2\n\tsprite->setOpacity((value+1) / 2 * 255);\n\n\t// Sprite\u3078\u63cf\u753b\n\tsprite->draw(renderer, transform, flags);\n}\n\nSampleLive2DSprite* SampleLive2DSprite::createDrawNode()\n{\n\tSampleLive2DSprite *ret = new SampleLive2DSprite();\n\tif (ret && ret->init())\n\t{\n\t\tret->autorelease();\n\t\treturn ret;\n\t}\n\telse\n\t{\n\t\tCC_SAFE_DELETE(ret);\n\t\treturn nullptr;\n\t}\n}\n\n```\n\n###\u5b9f\u884c\u7d50\u679c\n![cocos2dx_offscreen.png](https://qiita-image-store.s3.amazonaws.com/0/79621/1ef5c6fe-2742-9263-634e-6114f876feb4.png)\n\n\n\n\n###\u53c2\u8003\u30ea\u30f3\u30af\n[2010\u5e7412\u670807\u65e5 [OpenGL] \u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f7f\u3044\u65b9\u3042\u3052\u3044\u3093](http://marina.sys.wakayama-u.ac.jp/~tokoi/?date=20101207)\n[cocos2dx3.2\uff20Live2D\u3067\u30aa\u30d5\u30b9\u30af\u30ea\u30fc\u30f3\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0](http://d.hatena.ne.jp/t_takasaka/20140928) \uff08\u672c\u7a3f\u306f\u307b\u307c\u3053\u306e\u30da\u30fc\u30b8\u306e\u5185\u5bb9\u307e\u3093\u307e\uff09\n\n\n", "tags": ["OpenGL", "cocos2d-x", "Live2D"]}