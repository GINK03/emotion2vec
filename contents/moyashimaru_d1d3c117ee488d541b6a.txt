{"context": "AndroidThings\u3067\u30a2\u30ca\u30ed\u30b0\u5165\u529b\u3092\u3059\u308b\u306b\u306f\u5916\u90e8\u306eA/D\u30b3\u30f3\u30d0\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4eca\u56de\u306fSPI\u63a5\u7d9a\u306eMCP3204(\u4ee5\u4e0bADC)\u3092\u4f7f\u7528\u3057\u3066A/D\u5909\u63db\u3057\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nMCP3204\u306e\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8\n\nA/D\u30b3\u30f3\u30d0\u30fc\u30bf(MCP3204)\u3068\u63a5\u7d9a\nADC\u3092Raspberry Pi\u306eSPI\u901a\u4fe1\u306b\u5bfe\u5fdc\u3059\u308b\u30d4\u30f3(19, 21, 23)\u3068\u63a5\u7d9a\u3057\u307e\u3059\u3002\u4eca\u56de\u306fCS(SS)\u4fe1\u53f7\u306bBCM6\u3092\u4f7f\u7528\u3057\u3001ADC\u306f0ch\u306e\u307f\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\nhttps://developer.android.com/things/hardware/raspberrypi-io.html\n\nSPI\u901a\u4fe1\u306e\u8a2d\u5b9a\nSPI\u30e2\u30fc\u30c9\u306fmode0\u3001\u96fb\u6e90\u306f5V\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067SPI\u306e\u901a\u4fe1\u901f\u5ea6\u306f2MHz\u3001MSBfirst\u30678bit\u305a\u3064\u9001\u4fe1\u3057\u307e\u3059\u3002\npublic void configureSpiDevice(SpiDevice device) throws IOException {\n        device.setMode(SpiDevice.MODE0); \n        device.setFrequency(2000000);      // 2MHz\n        device.setBitsPerWord(8);          // 8 BPW\n        device.setBitJustification(false); // MSB first\n    }\n\n\nAD\u5909\u63db\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n    private Runnable mRunnable = new Runnable() {\n        @Override\n        public void run() {\n            byte[] txData = new byte[]{(byte) (0x06 | CHANNEL >> 2), (byte) (CHANNEL << 6), 0x00};  // \u9001\u4fe1\u30c7\u30fc\u30bf\n            byte[] rxData = new byte[3];  // \u53d7\u4fe1\u30c7\u30fc\u30bf\n\n            // GPIO\u304c\u9589\u3058\u3066\u3044\u308b\u5834\u5408\u306fRunnable\u3092\u7d42\u4e86\n            if (GPIO_BCM6 == null) {\n                return;\n            }\n\n            try {\n                mHandler.postDelayed(mRunnable, 50);  // 50ms\u5f85\u3064\n                GPIO_BCM6.setValue(false);  // LOW\n                mDevice.transfer(txData, rxData, rxData.length);  // SPI\u901a\u4fe1\n                GPIO_BCM6.setValue(true);   // HIGH\n                float ans = (rxData[1] & 0x0F) * 256 + (rxData[2] & 0xFF);  // 10\u9032\u6570\u306b\u5909\u63db\n                Log.d(TAG, String.valueOf(ans));\n\n            } catch (IOException e) {\n                Log.e(TAG, \"Error on PeripheralIO API\", e);\n            }\n        }\n    };\n\nBCM6\u3092LOW\u2192HIGH\u306b\u3059\u308b\u9593\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u9001\u4fe1\u3059\u308b\u30c7\u30fc\u30bf(\u5236\u5fa1\u30d3\u30c3\u30c8\u306e\u8a73\u7d30)\u306f\u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nhttp://www.geocities.jp/zattouka/GarageHouse/micon/circuit/A_D.htm\nrxData[1]\u306b\u683c\u7d0d\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306f\u4e0b\u4f4d4bit\u306e\u307f\u4f7f\u7528\u3059\u308b\u305f\u30810x0F\u3068AND\u6f14\u7b97\u3057\u3001\u6700\u4e0b\u4f4dbit\u304c256\u3092\u793a\u3059\u306e\u3067256\u3092\u4e57\u7b97\u3057\u307e\u3059\u3002\nrxData[2]\u306b\u683c\u7d0d\u3055\u308c\u308b8bit\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306f\u3059\u3079\u3066\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001byte\u578b\u304c\u7b26\u53f7\u4ed8\u304d\u306e8bit\u3067-128~127\u306e\u7bc4\u56f2\u3057\u304b\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u30010xFF\u3092AND\u6f14\u7b97\u3057\u3066\u6b63\u306e\u5024\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n\u4e0a\u8a18\u306e\u30c7\u30fc\u30bf\u3092\u52a0\u7b97\u3059\u308b\u3053\u3068\u3067AD\u5909\u63db\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nAndroidThings\u3067\u30a2\u30ca\u30ed\u30b0\u5165\u529b\u3092\u3059\u308b\u306b\u306f\u5916\u90e8\u306eA/D\u30b3\u30f3\u30d0\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4eca\u56de\u306fSPI\u63a5\u7d9a\u306eMCP3204(\u4ee5\u4e0bADC)\u3092\u4f7f\u7528\u3057\u3066A/D\u5909\u63db\u3057\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n[MCP3204\u306e\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8](http://ww1.microchip.com/downloads/en/DeviceDoc/21298b.pdf)\n\n#A/D\u30b3\u30f3\u30d0\u30fc\u30bf(MCP3204)\u3068\u63a5\u7d9a\nADC\u3092Raspberry Pi\u306eSPI\u901a\u4fe1\u306b\u5bfe\u5fdc\u3059\u308b\u30d4\u30f3(19, 21, 23)\u3068\u63a5\u7d9a\u3057\u307e\u3059\u3002\u4eca\u56de\u306fCS(SS)\u4fe1\u53f7\u306bBCM6\u3092\u4f7f\u7528\u3057\u3001ADC\u306f0ch\u306e\u307f\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\nhttps://developer.android.com/things/hardware/raspberrypi-io.html\n\n#SPI\u901a\u4fe1\u306e\u8a2d\u5b9a\nSPI\u30e2\u30fc\u30c9\u306fmode0\u3001\u96fb\u6e90\u306f5V\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067SPI\u306e\u901a\u4fe1\u901f\u5ea6\u306f2MHz\u3001MSBfirst\u30678bit\u305a\u3064\u9001\u4fe1\u3057\u307e\u3059\u3002\n\n```java\npublic void configureSpiDevice(SpiDevice device) throws IOException {\n        device.setMode(SpiDevice.MODE0); \n        device.setFrequency(2000000);      // 2MHz\n        device.setBitsPerWord(8);          // 8 BPW\n        device.setBitJustification(false); // MSB first\n    }\n```\n\n#AD\u5909\u63db\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n\n```java\n    private Runnable mRunnable = new Runnable() {\n        @Override\n        public void run() {\n            byte[] txData = new byte[]{(byte) (0x06 | CHANNEL >> 2), (byte) (CHANNEL << 6), 0x00};  // \u9001\u4fe1\u30c7\u30fc\u30bf\n            byte[] rxData = new byte[3];  // \u53d7\u4fe1\u30c7\u30fc\u30bf\n\n            // GPIO\u304c\u9589\u3058\u3066\u3044\u308b\u5834\u5408\u306fRunnable\u3092\u7d42\u4e86\n            if (GPIO_BCM6 == null) {\n                return;\n            }\n\n            try {\n                mHandler.postDelayed(mRunnable, 50);  // 50ms\u5f85\u3064\n                GPIO_BCM6.setValue(false);  // LOW\n                mDevice.transfer(txData, rxData, rxData.length);  // SPI\u901a\u4fe1\n                GPIO_BCM6.setValue(true);   // HIGH\n                float ans = (rxData[1] & 0x0F) * 256 + (rxData[2] & 0xFF);  // 10\u9032\u6570\u306b\u5909\u63db\n                Log.d(TAG, String.valueOf(ans));\n\n            } catch (IOException e) {\n                Log.e(TAG, \"Error on PeripheralIO API\", e);\n            }\n        }\n    };\n```\n\nBCM6\u3092LOW\u2192HIGH\u306b\u3059\u308b\u9593\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u9001\u4fe1\u3059\u308b\u30c7\u30fc\u30bf(\u5236\u5fa1\u30d3\u30c3\u30c8\u306e\u8a73\u7d30)\u306f\u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nhttp://www.geocities.jp/zattouka/GarageHouse/micon/circuit/A_D.htm\n\nrxData[1]\u306b\u683c\u7d0d\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306f\u4e0b\u4f4d4bit\u306e\u307f\u4f7f\u7528\u3059\u308b\u305f\u30810x0F\u3068AND\u6f14\u7b97\u3057\u3001\u6700\u4e0b\u4f4dbit\u304c256\u3092\u793a\u3059\u306e\u3067256\u3092\u4e57\u7b97\u3057\u307e\u3059\u3002\nrxData[2]\u306b\u683c\u7d0d\u3055\u308c\u308b8bit\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306f\u3059\u3079\u3066\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001byte\u578b\u304c\u7b26\u53f7\u4ed8\u304d\u306e8bit\u3067-128~127\u306e\u7bc4\u56f2\u3057\u304b\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u30010xFF\u3092AND\u6f14\u7b97\u3057\u3066\u6b63\u306e\u5024\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n\n\u4e0a\u8a18\u306e\u30c7\u30fc\u30bf\u3092\u52a0\u7b97\u3059\u308b\u3053\u3068\u3067AD\u5909\u63db\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n", "tags": ["AndroidThings", "IoT"]}