{"context": "\u524d\u56dePyEz\u306e\u74b0\u5883\u69cb\u7bc9\u304c\u3067\u304d\u305f\u305f\u3081\u3001\u4eca\u56de\u306f\u5b9f\u969b\u306bJUNOS\u306e\u60c5\u5831\u53d6\u5f97\u3092\u8a66\u3057\u3066\u307f\u308b\u3002\nPyEz\u3092\u4f7f\u3063\u305f\u60c5\u5831\u53d6\u5f97\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u3042\u308b\u304c\u3001\u4eca\u56de\u306f\u3053\u306e\u4e09\u3064\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4e8b\u524d\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u7c21\u5358\u306b\u57fa\u672c\u7684\u306a\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u308bfacts\u306e\u6d3b\u7528\nYAML\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u5185\u5bb9\u3092\u53d6\u5f97\u3067\u304d\u308bTable and View\u306e\u6d3b\u7528\nRPC(remote procedure calls)\u306b\u3088\u308bJUNOS show\u30b3\u30de\u30f3\u30c9\u3068\u540c\u7b49\u306e\u78ba\u8a8d\n\n\n1.JUNOS\u60c5\u5831\u53d6\u5f97(facts)\n\u307e\u305a\u306f\u3001\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3060\u304c\u3001PyEz\u306eHello world\u3068\u3057\u3066\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089JUNOS\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u5f35\u308a\u3001facts\u306b\u3088\u308a\u57fa\u672c\u7684\u306a\u60c5\u5831(hostname,version\u60c5\u5831\u306a\u3069)\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\nfacts\u306f\u3001NETCONF\u30bb\u30c3\u30b7\u30e7\u30f3\u78ba\u7acb\u6642\u306bJUNOS\u304b\u3089\u53ce\u96c6\u3057\u305f\u57fa\u672c\u7684\u306a\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u3002\n\u6982\u8981\u306fTech Library\u306b\u52d5\u4f5c\u30b5\u30f3\u30d7\u30eb\u306e\u52d5\u753b\u3082\u3042\u308b\u304c\u3001\u8a73\u7d30\u306fGitHub\u3067\u78ba\u8a8d\u53ef\u80fd\u3002\n#JUNOS\u3068\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306bDevice\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n>>> From juniper. Junos import Device \n#\u30c7\u30d0\u30a4\u30b9\u60c5\u5831\u3092\u5b9a\u7fa9\n>>> dev=Device(host='10.0.0.243', user=\"xxx\", password=\"xxx\", port='22')\n#netconf over ssh\u3067JUNOS\u306b\u63a5\u7d9a\n>>> Dev. open ()        \nDevice(1.1.1.1)\n#facts\u306b\u3088\u308a\u57fa\u672c\u60c5\u5831\u8868\u793a\n>>> print dev.facts\u3000\n{'domain': None, 'hostname': 'vSRX-1', 'ifd_style': 'CLASSIC', 'version_info': junos.version_info(major=(15, 1), type=X, minor=(49, 'D', 50), build=3), '2RE': False, 'serial number': 'xxxxx', 'fqdn': 'vSRX-1', 'switch_style': 'NONE', 'version': '15.1X49-xxx', 'HOME': '/var/home/vsrx', 'srx_cluster': False, 'model': 'VSRX', 'RE0': {'status': 'Testing', 'last_reboot_reason': '0x10: Misc hardware reason ', 'model': 'VSRX RE', 'up_time': '44 minutes'}, 'vc_capable': False, 'personality': 'UNKNOWN'}\n#facts\u306b\u3088\u308aversion\u60c5\u5831\u3060\u3051\u8868\u793a\n>>> dev.facts['version']\n'15.1X49-xxx'\n>>> dev.facts['hostname']\n'vSRX-1\u2018\n\ndev.close()\n>>> quit()\n\nfacts\u3092\u4f7f\u3063\u3066OS\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u30c6\u30ad\u30b9\u30c8\u306b\u66f8\u304d\u51fa\u3059\u30b5\u30f3\u30d7\u30eb\nfrom jnpr.junos import Device\nfrom datetime import datetime\n\nmydeviceslist=[\"1.1.1.1\"]\nf=open(\"my_devices_inventory.txt\", \"a\")\nf.write(str(datetime.now()) + '\\n')\nfor item in mydeviceslist:\n        dev=Device(host=item, user=\"xxx\", password=\"xxx\",port='22')\n        dev.open()\n        dev.close()\n        print (\"the device \"+ dev.facts[\"hostname\"]+ \" is a \" + dev.facts['model\n'] + \" running \" + dev.facts[\"version\"])\n        f.write ( \"the device \"+ dev.facts[\"hostname\"]+ \" is a \" + dev.facts['mo\ndel'] + \" running \" + dev.facts[\"version\"] + \"\\n\")\nf.close()\n\n\u5b9f\u884c\u7d50\u679c\n\n$ python print_facts.py\nthe device vSRX-1 is a VSRX running 15.1X49-xxx\n[ec2-user@ip-10-0-0-47 facts]$  more\u3000my_devices_inventory.txt\n2016-08-22 08:01:29.396263 \nthe device vSRX_AWS-1 is a VSRX running 15.1X49-xxx\n \n\n2.JUNOS\u60c5\u5831\u53d6\u5f97(Table and view)\njnpr.junos.op\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u3001YAML\u3067\u5b9a\u7fa9\u3055\u308c\u305fTable and View\u306b\u3088\u308a\u5404\u60c5\u5831\u306e\u53d6\u5f97\u304c\u3067\u304d\u308b\u3002\n\u73fe\u5728\u306eop\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3042\u308b\u3088\u3046\u306barp, interface\u60c5\u5831\u306a\u3069\u57fa\u672c\u7684\u306a\u60c5\u5831\u304c\u53d6\u5f97\u53ef\u80fd\u3002\n\u4f8b\u3068\u3057\u3066\u3001ArpTable\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u3001arp\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\n>>> from jnpr.junos.op.arp import ArpTable\n>>> arp1=ArpTable(dev)\n>>> arp1.get() \nArpTable:10.0.0.243: 3 items\n#key\u306e\u4e00\u89a7\u53d6\u5f97\n>>> arp1.keys() \u3000\u3000\n['0a:de:e9:03:15:3f', '0a:ca:89:ec:9a:51', '0a:93:06:42:03:c5']\n#values\u306e\u4e00\u89a7\u53d6\u5f97\n>>> arp1.values() \u3000\u3000\n[[('interface_name', 'fxp0.0'), ('ip_address', '10.0.0.1'), ('mac_address', '0a:de:e9:03:15:3f')], [('interface_name', 'fxp0.0'), ('ip_address', '10.0.0.47'), ('mac_address', '0a:ca:89:ec:9a:51')], [('interface_name', 'ge-0/0/0.0'), ('ip_address', '10.0.1.1'), ('mac_address', '0a:93:06:42:03:c5')]]]\n\nRouteTable\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u3066\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u60c5\u5831\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u306e\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u30b5\u30f3\u30d7\u30eb\nfrom jnpr.junos import Device\nfrom jnpr.junos.op.routes import RouteTable\n\ndev = Device(host='10.0.0.243', user='xxx', password='xxx', port='22', gathe\nr_facts=False)\ndev.open()\n\ntbl = RouteTable(dev)\ntbl.get()\n\n#get values and keys\nfor key, value in tbl.items():\n    print \"key:%s,\\t value:%s\" %(key, value)\n\n##print only GW information\nprint '##this is default gateway'\n\ngw = RouteTable(dev)\ngw.get('0.0.0.0')\nprint gw\nfor item in gw:\n    print 'protocol:', item.protocol\n    print 'age:', item.age\n    print 'via:', item.via\n    print\n\ndev.close()\n\n\u5b9f\u884c\u7d50\u679c\nkey:0.0.0.0/0,   value:[('nexthop', '10.0.0.1'), ('age', 177947), ('via', 'fxp0.0'), ('protocol', 'Static')]\nkey:10.0.0.0/24,         value:[('nexthop', None), ('age', 177947), ('via', 'fxp0.0'), ('protocol', 'Direct')]\nkey:10.0.0.243/32,       value:[('nexthop', None), ('age', 181163), ('via', 'fxp0.0'), ('protocol', 'Local')]\nkey:10.0.1.0/24,         value:[('nexthop', None), ('age', 181145), ('via', 'ge-0/0/0.0'), ('protocol', 'Direct')]\nkey:10.0.1.68/32,        value:[('nexthop', None), ('age', 181146), ('via', 'ge-0/0/0.0'), ('protocol', 'Local')]\nkey:10.0.2.98/32,        value:[('nexthop', None), ('age', 181144), ('via', 'ge-0/0/1.0'), ('protocol', 'Direct')]\nkey:10.0.3.85/32,        value:[('nexthop', None), ('age', 181144), ('via', 'ge-0/0/2.0'), ('protocol', 'Direct')]\nkey:192.168.0.1/32,      value:[('nexthop', None), ('age', 181162), ('via', 'lo0.0'), ('protocol', 'Direct')]\n##this is default gateway\nRouteTable:10.0.0.243: 1 items\nprotocol: Static\nage: 177947\nvia: fxp0.0\n\nYAML\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u5206\u3067\u5b9a\u7fa9\u3057\u3066\u3001Table and View\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\nGit\u306b\u843d\u3061\u3066\u305f\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u3001\u4f8b\u3048\u3070\u3053\u3093\u306a\u611f\u3058\u3002\n\n3.JUNOS\u60c5\u5831\u53d6\u5f97(RPC\u3001show\u30b3\u30de\u30f3\u30c9)\n\u6700\u5f8c\u306b\u3001RPC\u3092\u4f7f\u3044CLI\u306eshow\u30b3\u30de\u30f3\u30c9\u3068\u540c\u7b49\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\n\u30fbshow\u30b3\u30de\u30f3\u30c9\u3068RPC\u306e\u30de\u30c3\u30d4\u30f3\u30b0\nJUNOS XML API\u306f\u3001JUNOS\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u3084\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u30e2\u30fc\u30c9\u306e\u30b3\u30de\u30f3\u30c9\u3092XML\u3067\u8868\u3057\u305f\u3082\u306e\u3060\u304c\u3001\nRPC\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u3053\u3068\u3067\u3001XML\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nPyEz\u3067\u306f\u3001RPC\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u304c\u3001CLI\u306e\u30b3\u30de\u30f3\u30c9\u3068RPC\u306f\u3001\u30de\u30c3\u30d4\u30f3\u30b0\u3067\u304d\u308b\u305f\u3081\u3001\u4f7f\u3044\u305f\u3044CLI\u3092RPC\u3068\u3057\u3066\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u3002\n\u305d\u306e\u305f\u3081\u306b\u306f\u3001\u3069\u306eCLI\u304c\u3069\u306eRPC\u306a\u306e\u304b\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304c\u3001\u65b9\u6cd5\u3068\u3057\u3066\u30012\u3064\u7d39\u4ecb\u3059\u308b\u3002\n 1. JUNOS\u306e\u5b9f\u6a5f\u3067show\u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\n    \u4f7f\u3044\u305f\u3044show\u30b3\u30de\u30f3\u30c9\u306e\u3042\u3068\u306b| display xml rpc\u3067\u78ba\u8a8d\u3059\u308b\u3002\u4f8b\u3048\u3070show interface\u306e\u5834\u5408\u3001\n> show interfaces  | display xml rpc\n<rpc-reply xmlns:junos=\"http://xml.juniper.net/junos/15.1X49/junos\">\n    <rpc>\n        <get-interface-information>\n        </get-interface-information>\n    </rpc>\n    <cli>\n        <banner></banner>\n    </cli>\n</rpc-reply>\n\n2.PyEz\u306edisplay_xml_rpc()\u30e1\u30bd\u30c3\u30c9\u3067\u78ba\u8a8d\n\u3000dev.open()\u3067JUNOS\u3068\u63a5\u7d9a\u5f8c\u3001dev.display_xml_rpc\u30e1\u30bd\u30c3\u30c9\u3067\u4f7f\u7528\u3057\u305f\u3044show\u30b3\u30de\u30f3\u30c9\u3092\u6307\u5b9a\u3057\u78ba\u8a8d\u3002\n>>> print dev.display_xml_rpc('show interface', format='text')\n<get-interface-information>\n</get-interface-information>\n>>>\n\n\u3053\u308c\u3089\u306e\u78ba\u8a8d\u306b\u3088\u308a\u3001show interface\u306f\u3001<get-route-information>\u3068\u3044\u3046\u30bf\u30b0\u3060\u3068\u308f\u304b\u308b\u3002\n\u6b21\u306b\u3001\u30bf\u30b0\u304b\u3089RPC\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304c\u3001\u30cf\u30a4\u30d5\u30f3( - )\u3092\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2( _ )\u306b\u5909\u3048\u3001\u5c71\u62ec\u5f27\u3092\u6392\u9664\u3059\u308b\u3002\n\u3059\u306a\u308f\u3061\u3001<get-interface-information>\u306e\u5834\u5408\u3001RPC\u306f\u3001get_interface_information() \u306b\u306a\u308b\u3002\n\u3042\u3068\u306f\u3053\u306eRPC\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\u3044\u3044\u3002\n\u5c1a\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001XML\u3067\u8fd4\u3063\u3066\u304f\u308b\u305f\u3081\u3001lxml.etree\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3001\u6574\u5f62\u3057\u3066\u8868\u793a\u3059\u308b\u305f\u3081\u306betree.tostring()\u3092\u4f7f\u3046\u3002\n\u30fbshow interface\u3092\u78ba\u8a8d\u3059\u308b\u30b5\u30f3\u30d7\u30eb\nfrom jnpr.junos import Device\nfrom lxml import etree\n\n  dev = Device(xxxx,xxx,xxx,xx)\n  dev.open()\n\nint=dev.rpc.get_interface_information()\nprint(etree.tostring(int))\n\n\u30fbshow\u30b3\u30de\u30f3\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u5229\u7528(\u5024\u306a\u3057)\n\u5c1a\u3001show\u30b3\u30de\u30f3\u30c9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3001\u5024\u3092\u4f7f\u7528\u3057\u306a\u3044\u3082\u306e\u306e\u5834\u5408\u3001RPC\u30e1\u30bd\u30c3\u30c9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067=True\u3068\u3059\u308c\u3070\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\u4f8b\u3048\u3070\u3001show interface terse\u3092\u78ba\u8a8d\u3059\u308b\u30b5\u30f3\u30d7\u30eb\ndev.open()\nint=dev.rpc.get_interface_information(terse=True)\nprint(etree.tostring(int))\n\n\u30fbshow\u30b3\u30de\u30f3\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u5229\u7528(\u5024\u3042\u308a)\nshow\u30b3\u30de\u30f3\u30c9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5024\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u306eXML\u3092\u540c\u3058\u3088\u3046\u306bRPC\u30e1\u30bd\u30c3\u30c9\u306b\u5909\u63db\u3057\u3001\u30a4\u30b3\u30fc\u30eb\u3067\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\n\u4f8b\u3048\u3070show interface\u306einterface\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306e\u30bf\u30b0\u306f\u3001<interface-name> \u3060\u3068\u308f\u304b\u308b\u3002\n> show interfaces ge-0/0/0 | display xml rpc\n<rpc-reply xmlns:junos=\"http://xml.juniper.net/junos/15.1X49/junos\">\n    <rpc>\n        <get-interface-information>\n                <interface-name>ge-0/0/0</interface-name>\n        </get-interface-information>\n    </rpc>\n    <cli>\n\n\u3088\u3063\u3066RPC\u3068\u3057\u3066\u306f\u3001interface_name\u3068\u306a\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3002\n>>> int=dev.rpc.get_interface_information(interface_name='ge-0/0/0')\n>>> print(etree.tostring(int))\n\n\u307e\u305f\u3001dev.rpc.rpc_method(normalize=True)\u3068\u3059\u308b\u3068\u3001\u8fd4\u4fe1\u3055\u308c\u305fXML\u3092\u30ce\u30fc\u30de\u30e9\u30a4\u30ba\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\u307e\u305f\u3001\u8fd4\u4fe1\u3092XML\u3067\u306a\u3044\u65b9\u6cd5\u3067\u8868\u793a\u3055\u305b\u308b\u306e\u3082\u3067\u304d\u305d\u3046\u3002\n\n4.\u307e\u3068\u3081\n\u3060\u3089\u3060\u3089\u3068\u30e1\u30e2\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\n\u3068\u308a\u3042\u3048\u305a\u3001PyEz\u3092\u4f7f\u3063\u3066\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3067\u60c5\u5831\u53d6\u5f97\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u6b21\u56de\u306f\u8a2d\u5b9a\u5909\u66f4\u3092\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n5.\u53c2\u8003\u30ea\u30f3\u30af\n\u3000 PyEz \u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u96c6(on Git by Nitin Kumar)\n[\u524d\u56de](http://qiita.com/hiromiarts/items/aade90a161acd63bc8ed)PyEz\u306e\u74b0\u5883\u69cb\u7bc9\u304c\u3067\u304d\u305f\u305f\u3081\u3001\u4eca\u56de\u306f\u5b9f\u969b\u306bJUNOS\u306e\u60c5\u5831\u53d6\u5f97\u3092\u8a66\u3057\u3066\u307f\u308b\u3002\n\nPyEz\u3092\u4f7f\u3063\u305f\u60c5\u5831\u53d6\u5f97\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u3042\u308b\u304c\u3001\u4eca\u56de\u306f\u3053\u306e\u4e09\u3064\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n 1. \u4e8b\u524d\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u7c21\u5358\u306b\u57fa\u672c\u7684\u306a\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u308bfacts\u306e\u6d3b\u7528\n 2. YAML\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3055\u308c\u305f\u5185\u5bb9\u3092\u53d6\u5f97\u3067\u304d\u308bTable and View\u306e\u6d3b\u7528\n 3. RPC(remote procedure calls)\u306b\u3088\u308bJUNOS show\u30b3\u30de\u30f3\u30c9\u3068\u540c\u7b49\u306e\u78ba\u8a8d\n\n\n#1.JUNOS\u60c5\u5831\u53d6\u5f97(facts)\n\n\u307e\u305a\u306f\u3001\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3060\u304c\u3001PyEz\u306eHello world\u3068\u3057\u3066\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089JUNOS\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u5f35\u308a\u3001facts\u306b\u3088\u308a\u57fa\u672c\u7684\u306a\u60c5\u5831(hostname,version\u60c5\u5831\u306a\u3069)\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\nfacts\u306f\u3001NETCONF\u30bb\u30c3\u30b7\u30e7\u30f3\u78ba\u7acb\u6642\u306bJUNOS\u304b\u3089\u53ce\u96c6\u3057\u305f\u57fa\u672c\u7684\u306a\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u3002\n\u6982\u8981\u306f[Tech Library](https://www.juniper.net/techpubs/en_US/junos-pyez1.2/topics/task/program/junos-pyez-program-device-connecting.html)\u306b\u52d5\u4f5c\u30b5\u30f3\u30d7\u30eb\u306e\u52d5\u753b\u3082\u3042\u308b\u304c\u3001\u8a73\u7d30\u306f[GitHub](https://github.com/Juniper/py-junos-eznc)\u3067\u78ba\u8a8d\u53ef\u80fd\u3002\n\n``` \n#JUNOS\u3068\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306bDevice\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n>>> From juniper. Junos import Device \n#\u30c7\u30d0\u30a4\u30b9\u60c5\u5831\u3092\u5b9a\u7fa9\n>>> dev=Device(host='10.0.0.243', user=\"xxx\", password=\"xxx\", port='22')\n#netconf over ssh\u3067JUNOS\u306b\u63a5\u7d9a\n>>> Dev. open ()        \nDevice(1.1.1.1)\n#facts\u306b\u3088\u308a\u57fa\u672c\u60c5\u5831\u8868\u793a\n>>> print dev.facts\u3000\n{'domain': None, 'hostname': 'vSRX-1', 'ifd_style': 'CLASSIC', 'version_info': junos.version_info(major=(15, 1), type=X, minor=(49, 'D', 50), build=3), '2RE': False, 'serial number': 'xxxxx', 'fqdn': 'vSRX-1', 'switch_style': 'NONE', 'version': '15.1X49-xxx', 'HOME': '/var/home/vsrx', 'srx_cluster': False, 'model': 'VSRX', 'RE0': {'status': 'Testing', 'last_reboot_reason': '0x10: Misc hardware reason ', 'model': 'VSRX RE', 'up_time': '44 minutes'}, 'vc_capable': False, 'personality': 'UNKNOWN'}\n#facts\u306b\u3088\u308aversion\u60c5\u5831\u3060\u3051\u8868\u793a\n>>> dev.facts['version']\n'15.1X49-xxx'\n>>> dev.facts['hostname']\n'vSRX-1\u2018\n\ndev.close()\n>>> quit()\n``` \n\nfacts\u3092\u4f7f\u3063\u3066OS\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u30c6\u30ad\u30b9\u30c8\u306b\u66f8\u304d\u51fa\u3059\u30b5\u30f3\u30d7\u30eb\n\n``` \nfrom jnpr.junos import Device\nfrom datetime import datetime\n\nmydeviceslist=[\"1.1.1.1\"]\nf=open(\"my_devices_inventory.txt\", \"a\")\nf.write(str(datetime.now()) + '\\n')\nfor item in mydeviceslist:\n        dev=Device(host=item, user=\"xxx\", password=\"xxx\",port='22')\n        dev.open()\n        dev.close()\n        print (\"the device \"+ dev.facts[\"hostname\"]+ \" is a \" + dev.facts['model\n'] + \" running \" + dev.facts[\"version\"])\n        f.write ( \"the device \"+ dev.facts[\"hostname\"]+ \" is a \" + dev.facts['mo\ndel'] + \" running \" + dev.facts[\"version\"] + \"\\n\")\nf.close()\n``` \n\n\u5b9f\u884c\u7d50\u679c\n```\n$ python print_facts.py\nthe device vSRX-1 is a VSRX running 15.1X49-xxx\n[ec2-user@ip-10-0-0-47 facts]$  more\u3000my_devices_inventory.txt\n2016-08-22 08:01:29.396263 \nthe device vSRX_AWS-1 is a VSRX running 15.1X49-xxx\n``` \n\n\n\n\n#2.JUNOS\u60c5\u5831\u53d6\u5f97(Table and view)\njnpr.junos.op\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u3001YAML\u3067\u5b9a\u7fa9\u3055\u308c\u305fTable and View\u306b\u3088\u308a\u5404\u60c5\u5831\u306e\u53d6\u5f97\u304c\u3067\u304d\u308b\u3002\n\u73fe\u5728\u306eop\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u306f\u3001[\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://www.juniper.net/techpubs/en_US/junos-pyez1.0/topics/concept/junos-pyez-tables-and-views-overview.html)\u306b\u3042\u308b\u3088\u3046\u306barp, interface\u60c5\u5831\u306a\u3069\u57fa\u672c\u7684\u306a\u60c5\u5831\u304c\u53d6\u5f97\u53ef\u80fd\u3002\n\u4f8b\u3068\u3057\u3066\u3001[ArpTable\u30e1\u30bd\u30c3\u30c9](https://github.com/Juniper/py-junos-eznc/blob/master/lib/jnpr/junos/op/arp.yml)\u3092\u4f7f\u3044\u3001arp\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\n\n```  \n>>> from jnpr.junos.op.arp import ArpTable\n>>> arp1=ArpTable(dev)\n>>> arp1.get() \nArpTable:10.0.0.243: 3 items\n#key\u306e\u4e00\u89a7\u53d6\u5f97\n>>> arp1.keys() \u3000\u3000\n['0a:de:e9:03:15:3f', '0a:ca:89:ec:9a:51', '0a:93:06:42:03:c5']\n#values\u306e\u4e00\u89a7\u53d6\u5f97\n>>> arp1.values() \u3000\u3000\n[[('interface_name', 'fxp0.0'), ('ip_address', '10.0.0.1'), ('mac_address', '0a:de:e9:03:15:3f')], [('interface_name', 'fxp0.0'), ('ip_address', '10.0.0.47'), ('mac_address', '0a:ca:89:ec:9a:51')], [('interface_name', 'ge-0/0/0.0'), ('ip_address', '10.0.1.1'), ('mac_address', '0a:93:06:42:03:c5')]]]\n```  \n \n[RouteTable\u30e1\u30bd\u30c3\u30c9](https://github.com/Juniper/py-junos-eznc/blob/master/lib/jnpr/junos/op/routes.yml)\u3092\u5229\u7528\u3057\u3066\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u60c5\u5831\u3068\u30c7\u30d5\u30a9\u30eb\u30c8\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u306e\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u30b5\u30f3\u30d7\u30eb\n\n```  \nfrom jnpr.junos import Device\nfrom jnpr.junos.op.routes import RouteTable\n\ndev = Device(host='10.0.0.243', user='xxx', password='xxx', port='22', gathe\nr_facts=False)\ndev.open()\n\ntbl = RouteTable(dev)\ntbl.get()\n\n#get values and keys\nfor key, value in tbl.items():\n    print \"key:%s,\\t value:%s\" %(key, value)\n\n##print only GW information\nprint '##this is default gateway'\n\ngw = RouteTable(dev)\ngw.get('0.0.0.0')\nprint gw\nfor item in gw:\n    print 'protocol:', item.protocol\n    print 'age:', item.age\n    print 'via:', item.via\n    print\n\ndev.close()\n```  \n\n\u5b9f\u884c\u7d50\u679c\n\n```  \nkey:0.0.0.0/0,   value:[('nexthop', '10.0.0.1'), ('age', 177947), ('via', 'fxp0.0'), ('protocol', 'Static')]\nkey:10.0.0.0/24,         value:[('nexthop', None), ('age', 177947), ('via', 'fxp0.0'), ('protocol', 'Direct')]\nkey:10.0.0.243/32,       value:[('nexthop', None), ('age', 181163), ('via', 'fxp0.0'), ('protocol', 'Local')]\nkey:10.0.1.0/24,         value:[('nexthop', None), ('age', 181145), ('via', 'ge-0/0/0.0'), ('protocol', 'Direct')]\nkey:10.0.1.68/32,        value:[('nexthop', None), ('age', 181146), ('via', 'ge-0/0/0.0'), ('protocol', 'Local')]\nkey:10.0.2.98/32,        value:[('nexthop', None), ('age', 181144), ('via', 'ge-0/0/1.0'), ('protocol', 'Direct')]\nkey:10.0.3.85/32,        value:[('nexthop', None), ('age', 181144), ('via', 'ge-0/0/2.0'), ('protocol', 'Direct')]\nkey:192.168.0.1/32,      value:[('nexthop', None), ('age', 181162), ('via', 'lo0.0'), ('protocol', 'Direct')]\n##this is default gateway\nRouteTable:10.0.0.243: 1 items\nprotocol: Static\nage: 177947\nvia: fxp0.0\n```  \n\nYAML\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u5206\u3067\u5b9a\u7fa9\u3057\u3066\u3001Table and View\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\nGit\u306b\u843d\u3061\u3066\u305f\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u3001\u4f8b\u3048\u3070[\u3053\u3093\u306a](https://github.com/vnitinv/pyez-examples/blob/master/9_user_defined_table.py)\u611f\u3058\u3002\n\n\n#3.JUNOS\u60c5\u5831\u53d6\u5f97(RPC\u3001show\u30b3\u30de\u30f3\u30c9)\n\u6700\u5f8c\u306b\u3001[RPC\u3092\u4f7f\u3044](https://www.juniper.net/techpubs/en_US/junos-pyez1.2/topics/task/program/junos-pyez-rpcs-executing.html)CLI\u306eshow\u30b3\u30de\u30f3\u30c9\u3068\u540c\u7b49\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\n\n\u30fbshow\u30b3\u30de\u30f3\u30c9\u3068RPC\u306e\u30de\u30c3\u30d4\u30f3\u30b0\n\nJUNOS XML API\u306f\u3001JUNOS\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u3084\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f3\u30e2\u30fc\u30c9\u306e\u30b3\u30de\u30f3\u30c9\u3092XML\u3067\u8868\u3057\u305f\u3082\u306e\u3060\u304c\u3001\nRPC\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u3053\u3068\u3067\u3001XML\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\nPyEz\u3067\u306f\u3001RPC\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u304c\u3001CLI\u306e\u30b3\u30de\u30f3\u30c9\u3068RPC\u306f\u3001\u30de\u30c3\u30d4\u30f3\u30b0\u3067\u304d\u308b\u305f\u3081\u3001\u4f7f\u3044\u305f\u3044CLI\u3092RPC\u3068\u3057\u3066\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u3002\n\n\u305d\u306e\u305f\u3081\u306b\u306f\u3001\u3069\u306eCLI\u304c\u3069\u306eRPC\u306a\u306e\u304b\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304c\u3001\u65b9\u6cd5\u3068\u3057\u3066\u30012\u3064\u7d39\u4ecb\u3059\u308b\u3002\n 1. JUNOS\u306e\u5b9f\u6a5f\u3067show\u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\n    \u4f7f\u3044\u305f\u3044show\u30b3\u30de\u30f3\u30c9\u306e\u3042\u3068\u306b| display xml rpc\u3067\u78ba\u8a8d\u3059\u308b\u3002\u4f8b\u3048\u3070show interface\u306e\u5834\u5408\u3001\n\n```\n> show interfaces  | display xml rpc\n<rpc-reply xmlns:junos=\"http://xml.juniper.net/junos/15.1X49/junos\">\n    <rpc>\n        <get-interface-information>\n        </get-interface-information>\n    </rpc>\n    <cli>\n        <banner></banner>\n    </cli>\n</rpc-reply>\n```\n\n2.PyEz\u306edisplay_xml_rpc()\u30e1\u30bd\u30c3\u30c9\u3067\u78ba\u8a8d\n\u3000dev.open()\u3067JUNOS\u3068\u63a5\u7d9a\u5f8c\u3001dev.display_xml_rpc\u30e1\u30bd\u30c3\u30c9\u3067\u4f7f\u7528\u3057\u305f\u3044show\u30b3\u30de\u30f3\u30c9\u3092\u6307\u5b9a\u3057\u78ba\u8a8d\u3002\n \n```\n>>> print dev.display_xml_rpc('show interface', format='text')\n<get-interface-information>\n</get-interface-information>\n>>>\n```\n\n\u3053\u308c\u3089\u306e\u78ba\u8a8d\u306b\u3088\u308a\u3001show interface\u306f\u3001\\<get-route-information></get-route-information>\u3068\u3044\u3046\u30bf\u30b0\u3060\u3068\u308f\u304b\u308b\u3002\n\u6b21\u306b\u3001\u30bf\u30b0\u304b\u3089RPC\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304c\u3001\u30cf\u30a4\u30d5\u30f3( - )\u3092\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2( _ )\u306b\u5909\u3048\u3001\u5c71\u62ec\u5f27\u3092\u6392\u9664\u3059\u308b\u3002\n\u3059\u306a\u308f\u3061\u3001\\<get-interface-information>\u306e\u5834\u5408\u3001RPC\u306f\u3001get_interface_information() \u306b\u306a\u308b\u3002\n\u3042\u3068\u306f\u3053\u306eRPC\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\u3044\u3044\u3002\n\u5c1a\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001XML\u3067\u8fd4\u3063\u3066\u304f\u308b\u305f\u3081\u3001[lxml.etree\u30e9\u30a4\u30d6\u30e9\u30ea](http://www.lifewithpython.com/2013/09/lxml-etree.html)\u3082\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3001\u6574\u5f62\u3057\u3066\u8868\u793a\u3059\u308b\u305f\u3081\u306betree.tostring()\u3092\u4f7f\u3046\u3002\n\n\u30fbshow interface\u3092\u78ba\u8a8d\u3059\u308b\u30b5\u30f3\u30d7\u30eb\n\n```\nfrom jnpr.junos import Device\nfrom lxml import etree\n\n  dev = Device(xxxx,xxx,xxx,xx)\n  dev.open()\n\nint=dev.rpc.get_interface_information()\nprint(etree.tostring(int))\n```\n\n\u30fbshow\u30b3\u30de\u30f3\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u5229\u7528(\u5024\u306a\u3057)\n\u5c1a\u3001show\u30b3\u30de\u30f3\u30c9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3001\u5024\u3092\u4f7f\u7528\u3057\u306a\u3044\u3082\u306e\u306e\u5834\u5408\u3001RPC\u30e1\u30bd\u30c3\u30c9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067=True\u3068\u3059\u308c\u3070\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\n\u4f8b\u3048\u3070\u3001show interface terse\u3092\u78ba\u8a8d\u3059\u308b\u30b5\u30f3\u30d7\u30eb\n\n```\ndev.open()\nint=dev.rpc.get_interface_information(terse=True)\nprint(etree.tostring(int))\n```\n\n\n\u30fbshow\u30b3\u30de\u30f3\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u5229\u7528(\u5024\u3042\u308a)\nshow\u30b3\u30de\u30f3\u30c9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u5024\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u306eXML\u3092\u540c\u3058\u3088\u3046\u306bRPC\u30e1\u30bd\u30c3\u30c9\u306b\u5909\u63db\u3057\u3001\u30a4\u30b3\u30fc\u30eb\u3067\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\n\n\u4f8b\u3048\u3070show interface\u306einterface\u3092\u6307\u5b9a\u3059\u308b\u5834\u5408\u306e\u30bf\u30b0\u306f\u3001\\<interface-name> \u3060\u3068\u308f\u304b\u308b\u3002\n\n```\n> show interfaces ge-0/0/0 | display xml rpc\n<rpc-reply xmlns:junos=\"http://xml.juniper.net/junos/15.1X49/junos\">\n    <rpc>\n        <get-interface-information>\n                <interface-name>ge-0/0/0</interface-name>\n        </get-interface-information>\n    </rpc>\n    <cli>\n```\n\n\u3088\u3063\u3066RPC\u3068\u3057\u3066\u306f\u3001interface_name\u3068\u306a\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3002\n\n```\n>>> int=dev.rpc.get_interface_information(interface_name='ge-0/0/0')\n>>> print(etree.tostring(int))\n```\n\n\u307e\u305f\u3001dev.rpc.rpc_method(normalize=True)\u3068\u3059\u308b\u3068\u3001\u8fd4\u4fe1\u3055\u308c\u305fXML\u3092\u30ce\u30fc\u30de\u30e9\u30a4\u30ba\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\u307e\u305f\u3001\u8fd4\u4fe1\u3092XML\u3067\u306a\u3044\u65b9\u6cd5\u3067\u8868\u793a\u3055\u305b\u308b\u306e\u3082\u3067\u304d\u305d\u3046\u3002\n\n\n\n\n#4.\u307e\u3068\u3081\n\u3060\u3089\u3060\u3089\u3068\u30e1\u30e2\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\n\u3068\u308a\u3042\u3048\u305a\u3001PyEz\u3092\u4f7f\u3063\u3066\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3067\u60c5\u5831\u53d6\u5f97\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u6b21\u56de\u306f\u8a2d\u5b9a\u5909\u66f4\u3092\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n#5.\u53c2\u8003\u30ea\u30f3\u30af\n\u3000 [PyEz \u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u96c6(on Git by Nitin Kumar)](https://github.com/vnitinv/pyez-examples)\n \n\n", "tags": ["Python", "juniper", "junos", "Network", "netops"]}