{"context": "\u554f\u984c\u306f\u3053\u3061\u3089\nhttp://qiita.com/Nabetani/items/c516875b13a4d282affe\nrequire 'bundler/inline'\n\ngemfile do\n  source 'https://rubygems.org'\n\n  gem 'activesupport', require: 'active_support/all'\n\n  gem 'minitest', require: 'minitest/autorun'\n  gem 'minitest-reporters'\n\n  gem 'awesome_print'\n  gem 'tapp'\n\n  gem 'pry'\n  gem 'pry-rescue', require: 'pry-rescue/minitest'\n  gem 'pry-stack_explorer'\nend\n\nMAP = {\n  1 => {\n    A: %i(A B),\n    B: %i(B C),\n    C: %i(C),\n  },\n  2 => {\n    A: %i(A C),\n    B: %i(B),\n    C: %i(B C),\n  },\n  3 => {\n    A: %i(A C),\n    B: %i(A B),\n    C: %i(C),\n  },\n  4 => {\n    A: %i(A),\n    B: %i(A B),\n    C: %i(B C),\n  },\n  5 => {\n    A: %i(A),\n    B: %i(B C),\n    C: %i(A C),\n  },\n  6 => {\n    A: %i(A B),\n    B: %i(B),\n    C: %i(A C),\n  },\n  7 => {\n    A: %i(A),\n    B: %i(),\n    C: %i(C),\n  },\n  8 => {\n    A: %i(),\n    B: %i(B),\n    C: %i(C),\n  },\n  9 => {\n    A: %i(A),\n    B: %i(B),\n    C: %i(),\n  },\n}\n\ndef solve(input)\n  input.reverse.each_char.reduce(%i(A B C)) {|ok, c|\n    MAP[c.to_i].select {|k, vs| vs.any? {|v| ok.include?(v) } }.keys\n  }.join.downcase.presence || ?-\nend\n\nTEST_DATA = <<~EOS\n/*0*/ test( \"1728398\", \"bc\" );\n/*1*/ test( \"789\", \"-\" );\n/*2*/ test( \"274\", \"ac\" );\n/*3*/ test( \"185\", \"abc\" );\n/*4*/ test( \"396\", \"ab\" );\n/*5*/ test( \"1278\", \"abc\" );\n/*6*/ test( \"7659832\", \"a\" );\n/*7*/ test( \"178\", \"bc\" );\n/*8*/ test( \"189\", \"ab\" );\n/*9*/ test( \"197\", \"a\" );\n/*10*/ test( \"278\", \"ac\" );\n/*11*/ test( \"289\", \"bc\" );\n/*12*/ test( \"297\", \"a\" );\n/*13*/ test( \"378\", \"ac\" );\n/*14*/ test( \"389\", \"b\" );\n/*15*/ test( \"397\", \"ab\" );\n/*16*/ test( \"478\", \"c\" );\n/*17*/ test( \"489\", \"bc\" );\n/*18*/ test( \"497\", \"ab\" );\n/*19*/ test( \"578\", \"bc\" );\n/*20*/ test( \"589\", \"b\" );\n/*21*/ test( \"597\", \"ac\" );\n/*22*/ test( \"678\", \"c\" );\n/*23*/ test( \"689\", \"ab\" );\n/*24*/ test( \"697\", \"ac\" );\n/*25*/ test( \"899\", \"b\" );\n/*26*/ test( \"7172\", \"ac\" );\n/*27*/ test( \"54787\", \"bc\" );\n/*28*/ test( \"83713\", \"bc\" );\n/*29*/ test( \"149978\", \"-\" );\n/*30*/ test( \"159735\", \"abc\" );\n/*31*/ test( \"1449467\", \"abc\" );\n/*32*/ test( \"9862916\", \"b\" );\n/*33*/ test( \"96112873\", \"ab\" );\n/*34*/ test( \"311536789\", \"-\" );\n/*35*/ test( \"281787212994\", \"abc\" );\n/*36*/ test( \"697535114542\", \"ac\" );\nEOS\n\nMinitest::Reporters.use!(Minitest::Reporters::ProgressReporter.new)\n\ndescribe 'Doukaku' do\n  TEST_DATA.each_line do |test|\n    input, expected = test.scan(/\"(.*)\", \"(.*)\"/)[0]\n\n    it input do\n      assert_equal expected, solve(input)\n    end\n  end\nend\n\n25 \u5206\u304f\u3089\u3044\u3067\u7d42\u308f\u3063\u3066\u6642\u9593\u304c\u3042\u307e\u3063\u305f\u306e\u3067 MAP \u306e\u3068\u3053\u308d\u304c\u306a\u3093\u3068\u304b\u3067\u304d\u306a\u3044\u304b\u3084\u3063\u3066\u3044\u305f\u304c\u30d3\u30df\u30e7\u30fc\u3002\n4..6 \u306f 1..3 \u307e\u3067\u306e\u3082\u306e\u306e\u7dda\u5bfe\u79f0\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6c17\u3065\u3044\u305f\u304f\u3089\u3044\u3067\u3001\u4ed6\u306e\u6cd5\u5247\u6027\u306f\u308f\u304b\u3089\u305a...\nMAP = Hash.new do |hash, key|\n  tracks = (:A..:C).map {|c| [c, [c]] }.to_h\n\n  case key\n  when 1\n    tracks[:A] << :B\n    tracks[:B] << :C\n  when 2\n    tracks[:A] << :C\n    tracks[:C] << :B\n  when 3\n    tracks[:A] << :C\n    tracks[:B] << :A\n  when 4..6\n    tracks = tracks.keys.map {|k| [k, MAP[key - 3].select {|_, v| v.include?(k) }.keys] }.to_h\n  when 7\n    tracks[:B] = []\n  when 8\n    tracks[:A] = []\n  when 9\n    tracks[:C] = []\n  end\n\n  tracks\nend\n\n\u554f\u984c\u306f\u3053\u3061\u3089\n\nhttp://qiita.com/Nabetani/items/c516875b13a4d282affe\n\n```rb\nrequire 'bundler/inline'\n\ngemfile do\n  source 'https://rubygems.org'\n\n  gem 'activesupport', require: 'active_support/all'\n\n  gem 'minitest', require: 'minitest/autorun'\n  gem 'minitest-reporters'\n\n  gem 'awesome_print'\n  gem 'tapp'\n\n  gem 'pry'\n  gem 'pry-rescue', require: 'pry-rescue/minitest'\n  gem 'pry-stack_explorer'\nend\n\nMAP = {\n  1 => {\n    A: %i(A B),\n    B: %i(B C),\n    C: %i(C),\n  },\n  2 => {\n    A: %i(A C),\n    B: %i(B),\n    C: %i(B C),\n  },\n  3 => {\n    A: %i(A C),\n    B: %i(A B),\n    C: %i(C),\n  },\n  4 => {\n    A: %i(A),\n    B: %i(A B),\n    C: %i(B C),\n  },\n  5 => {\n    A: %i(A),\n    B: %i(B C),\n    C: %i(A C),\n  },\n  6 => {\n    A: %i(A B),\n    B: %i(B),\n    C: %i(A C),\n  },\n  7 => {\n    A: %i(A),\n    B: %i(),\n    C: %i(C),\n  },\n  8 => {\n    A: %i(),\n    B: %i(B),\n    C: %i(C),\n  },\n  9 => {\n    A: %i(A),\n    B: %i(B),\n    C: %i(),\n  },\n}\n\ndef solve(input)\n  input.reverse.each_char.reduce(%i(A B C)) {|ok, c|\n    MAP[c.to_i].select {|k, vs| vs.any? {|v| ok.include?(v) } }.keys\n  }.join.downcase.presence || ?-\nend\n\nTEST_DATA = <<~EOS\n/*0*/ test( \"1728398\", \"bc\" );\n/*1*/ test( \"789\", \"-\" );\n/*2*/ test( \"274\", \"ac\" );\n/*3*/ test( \"185\", \"abc\" );\n/*4*/ test( \"396\", \"ab\" );\n/*5*/ test( \"1278\", \"abc\" );\n/*6*/ test( \"7659832\", \"a\" );\n/*7*/ test( \"178\", \"bc\" );\n/*8*/ test( \"189\", \"ab\" );\n/*9*/ test( \"197\", \"a\" );\n/*10*/ test( \"278\", \"ac\" );\n/*11*/ test( \"289\", \"bc\" );\n/*12*/ test( \"297\", \"a\" );\n/*13*/ test( \"378\", \"ac\" );\n/*14*/ test( \"389\", \"b\" );\n/*15*/ test( \"397\", \"ab\" );\n/*16*/ test( \"478\", \"c\" );\n/*17*/ test( \"489\", \"bc\" );\n/*18*/ test( \"497\", \"ab\" );\n/*19*/ test( \"578\", \"bc\" );\n/*20*/ test( \"589\", \"b\" );\n/*21*/ test( \"597\", \"ac\" );\n/*22*/ test( \"678\", \"c\" );\n/*23*/ test( \"689\", \"ab\" );\n/*24*/ test( \"697\", \"ac\" );\n/*25*/ test( \"899\", \"b\" );\n/*26*/ test( \"7172\", \"ac\" );\n/*27*/ test( \"54787\", \"bc\" );\n/*28*/ test( \"83713\", \"bc\" );\n/*29*/ test( \"149978\", \"-\" );\n/*30*/ test( \"159735\", \"abc\" );\n/*31*/ test( \"1449467\", \"abc\" );\n/*32*/ test( \"9862916\", \"b\" );\n/*33*/ test( \"96112873\", \"ab\" );\n/*34*/ test( \"311536789\", \"-\" );\n/*35*/ test( \"281787212994\", \"abc\" );\n/*36*/ test( \"697535114542\", \"ac\" );\nEOS\n\nMinitest::Reporters.use!(Minitest::Reporters::ProgressReporter.new)\n\ndescribe 'Doukaku' do\n  TEST_DATA.each_line do |test|\n    input, expected = test.scan(/\"(.*)\", \"(.*)\"/)[0]\n\n    it input do\n      assert_equal expected, solve(input)\n    end\n  end\nend\n```\n\n25 \u5206\u304f\u3089\u3044\u3067\u7d42\u308f\u3063\u3066\u6642\u9593\u304c\u3042\u307e\u3063\u305f\u306e\u3067 `MAP` \u306e\u3068\u3053\u308d\u304c\u306a\u3093\u3068\u304b\u3067\u304d\u306a\u3044\u304b\u3084\u3063\u3066\u3044\u305f\u304c\u30d3\u30df\u30e7\u30fc\u3002\n\n4..6 \u306f 1..3 \u307e\u3067\u306e\u3082\u306e\u306e\u7dda\u5bfe\u79f0\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6c17\u3065\u3044\u305f\u304f\u3089\u3044\u3067\u3001\u4ed6\u306e\u6cd5\u5247\u6027\u306f\u308f\u304b\u3089\u305a...\n\n```rb\nMAP = Hash.new do |hash, key|\n  tracks = (:A..:C).map {|c| [c, [c]] }.to_h\n\n  case key\n  when 1\n    tracks[:A] << :B\n    tracks[:B] << :C\n  when 2\n    tracks[:A] << :C\n    tracks[:C] << :B\n  when 3\n    tracks[:A] << :C\n    tracks[:B] << :A\n  when 4..6\n    tracks = tracks.keys.map {|k| [k, MAP[key - 3].select {|_, v| v.include?(k) }.keys] }.to_h\n  when 7\n    tracks[:B] = []\n  when 8\n    tracks[:A] = []\n  when 9\n    tracks[:C] = []\n  end\n\n  tracks\nend\n```\n", "tags": ["Ruby", "yhpg", "\u3069\u3046\u66f8\u304f"]}