{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\nPython\u88fd\u306e\u30c7\u30d7\u30ed\u30a4\u30c4\u30fc\u30ebfabric\u306f\uff0c\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092Python\u3067\u4fbf\u5229\u306b\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3082\u306e\u3067\u3042\u308a\uff0cChef-Solo\u30e9\u30a4\u30af\u306a\u69cb\u6210\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u307e\u305f\uff0cChef\u306e\u5927\u304d\u306a\u7279\u5fb4\u306e1\u3064\u3067\u3042\u308b\u51aa\u7b49\u6027\u3060\u304c\uff0cfabric\u306e\u30e9\u30c3\u30d1\u30fc\u3067\u3042\u308bcuisine\u3092\u7528\u3044\u308b\u3053\u3068\u3067\uff0c\u4fdd\u8a3c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067Chef\u306a\u3069\u3068\u6bd4\u8f03\u3059\u308b\u3068\u5b66\u7fd2\u30b3\u30b9\u30c8\u3082\u5c0f\u3055\u304f\uff0c\u3055\u3089\u306b\u5bfe\u8c61\u3068\u306a\u308b\u30de\u30b7\u30f3\u306b\u306e\u307f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308c\u3070\u3088\u3044\u306e\u3067\u624b\u8efd\u306b\u5c0e\u5165\u3067\u304d\u308b\uff0e\u4eca\u56de\u306ffabric\u3092\u7528\u3044\u3066vagrant\u3078dotfiles\u3092\u914d\u7f6e\u3059\u308b\u3061\u3087\u3063\u3068\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u307f\u305f\uff0e\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u4e00\u767a\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\uff0e\n\n$ pip install fabric cuisine\n\n\n\u4f7f\u3044\u65b9\n\n\u5bfe\u8c61\u30de\u30b7\u30f3\u306e\u30db\u30b9\u30c8\u3092env.hosts\u3067\u6307\u5b9a\u3057\uff0c\u30b3\u30de\u30f3\u30c9\u3092run()\u3067\u56f2\u3093\u3067\u5b9f\u884c\u3059\u308b\uff0esudo\u3067\u5b9f\u884c\u3057\u305f\u3044\u3068\u304d\u306fsudo()\u3067\u56f2\u3080\uff0e\u57fa\u672c\u306f\u305f\u3063\u305f\u3053\u308c\u3060\u3051\uff0e\n\n\nsample.py\n# -*- encoding:utf-8 -*-\n\nfrom fabric.api import env\nfrom fabric.decorators import task\nfrom cuisine import run\n\nenv.hosts = ['192.168.33.10']\n\n@task\ndef A():\n  run('echo A')\n\n@task\ndef B():\n  sudo('echo B')\n\n@task\ndef main():\n  A()\n  B()\n\n\n\nmain\u3092\u5b9f\u884c\u3059\u308b\u3068\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5bfe\u8c61\u30de\u30b7\u30f3\u3067\u5b9f\u884c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\uff0e\n\n$ fab main\n[192.168.33.10] run: echo A\n[192.168.33.10] out: A\n[192.168.33.10] run: echo B\n[192.168.33.10] out: B\n\nDone.\nDisconnecting from 192.168.33.10... done.\n\n\npackage_ensure()\u306a\u3069\u306e_ensure()\u30e1\u30bd\u30c3\u30c9\u3084\uff0cdir_exists()\u306a\u3069\u306e_exisits()\u30e1\u30bd\u30c3\u30c9\u3092\u3046\u307e\u304f\u7528\u3044\u308b\u3053\u3068\u3067\uff0c\u51aa\u7b49\u6027\u3092\u4fdd\u8a3c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\npackage_ensure('vim') # vim\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u307f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\nvagrant\u9023\u643a\n\nvagrant\u3068\u9023\u643a\u3055\u305b\u308b\u306b\u306f\uff0c\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\uff0e\n\n$ vagrant plugin install vagrant-fabric \n\n\n\u305d\u3057\u3066\uff0cVagrantfile\u306b\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u8a18\u8ff0\uff0e\n\n...\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n...\n  config.vm.provision :fabric do |fabric|\n    fabric.fabfile_path = './fabfile.py'\n    fabric.tasks = ['set_env'] # \u5b9f\u884c\u3057\u305f\u3044\u30bf\u30b9\u30af\n  end\nend\n\n\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u69d8\u306adotfile\u3092\u914d\u7f6e\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u3044\u3066\u307f\u305f\uff0e\n\n\nfabfile.py\n# -*- encoding:utf-8 -*-\n\nfrom fabric.api import env, settings\nfrom fabric.decorators import task\nfrom cuisine import mode_sudo, select_package, run, package_ensure, dir_exists, cd\n\nselect_package('apt')\n\n@task\ndef set_env():\n  setup_packages()\n  fetch_dotfiles()\n  set_symlinks()\n\n@task\ndef setup_packages():\n  with settings(mode_sudo()):\n    package_ensure('unzip')\n\n@task\ndef fetch_dotfiles():\n  if not dir_exists('dotfiles'):\n    run('git clone --recursive git@github.com:pika-shi/dotfiles.git')\n\n@task\ndef set_symlinks():\n  path_pair_list = [\n    ('dotfiles/_zshrc', '.zshrc'), ('dotfiles/_tmux.conf', '.tmux.conf'),\n    ('dotfiles/_vimrc', '.vimrc'), ('dotfiles/_vim', '.vim')\n    ]\n  with cd('~/'):\n    for path_set in path_pair_list:\n      run('ln -s {} {}'.format(*path_set))\n\n\n\n\nvagrant up\u3057\u305f\u72b6\u614b\u3067\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\uff0c\u30bf\u30b9\u30af\u304c\u5b9f\u884c\u3055\u308c\uff0cdotfile\u306b\u9069\u5207\u306a\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u304c\u306f\u3089\u308c\u308b\uff0e\n\n$ vagrant provision\n\n\n\u304a\u308f\u308a\u306b\n\n\u3053\u306e\u3088\u3046\u306b\uff0c\u3061\u3087\u3063\u3068\u3057\u305f\u69cb\u6210\u7ba1\u7406\u3092\u975e\u5e38\u306b\u5bb9\u6613\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\uff0c\u4f7f\u3063\u3066\u307f\u3066\u305d\u306e\u4fbf\u5229\u3055\u3092\u5b9f\u611f\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\uff0e\n\n##\u306f\u3058\u3081\u306b\n\n>Python\u88fd\u306e\u30c7\u30d7\u30ed\u30a4\u30c4\u30fc\u30ebfabric\u306f\uff0c\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092Python\u3067\u4fbf\u5229\u306b\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3082\u306e\u3067\u3042\u308a\uff0cChef-Solo\u30e9\u30a4\u30af\u306a\u69cb\u6210\u7ba1\u7406\u3092\u5bb9\u6613\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\u307e\u305f\uff0cChef\u306e\u5927\u304d\u306a\u7279\u5fb4\u306e1\u3064\u3067\u3042\u308b\u51aa\u7b49\u6027\u3060\u304c\uff0cfabric\u306e\u30e9\u30c3\u30d1\u30fc\u3067\u3042\u308bcuisine\u3092\u7528\u3044\u308b\u3053\u3068\u3067\uff0c\u4fdd\u8a3c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n>\n>\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067Chef\u306a\u3069\u3068\u6bd4\u8f03\u3059\u308b\u3068\u5b66\u7fd2\u30b3\u30b9\u30c8\u3082\u5c0f\u3055\u304f\uff0c\u3055\u3089\u306b\u5bfe\u8c61\u3068\u306a\u308b\u30de\u30b7\u30f3\u306b\u306e\u307f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308c\u3070\u3088\u3044\u306e\u3067\u624b\u8efd\u306b\u5c0e\u5165\u3067\u304d\u308b\uff0e\u4eca\u56de\u306ffabric\u3092\u7528\u3044\u3066vagrant\u3078dotfiles\u3092\u914d\u7f6e\u3059\u308b\u3061\u3087\u3063\u3068\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u307f\u305f\uff0e\n\n##\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n>\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u4e00\u767a\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\uff0e\n\n```\n$ pip install fabric cuisine\n```\n\n##\u4f7f\u3044\u65b9\n\n>\u5bfe\u8c61\u30de\u30b7\u30f3\u306e\u30db\u30b9\u30c8\u3092env.hosts\u3067\u6307\u5b9a\u3057\uff0c\u30b3\u30de\u30f3\u30c9\u3092run()\u3067\u56f2\u3093\u3067\u5b9f\u884c\u3059\u308b\uff0esudo\u3067\u5b9f\u884c\u3057\u305f\u3044\u3068\u304d\u306fsudo()\u3067\u56f2\u3080\uff0e\u57fa\u672c\u306f\u305f\u3063\u305f\u3053\u308c\u3060\u3051\uff0e\n\n```py:sample.py\n# -*- encoding:utf-8 -*-\n\nfrom fabric.api import env\nfrom fabric.decorators import task\nfrom cuisine import run\n\nenv.hosts = ['192.168.33.10']\n\n@task\ndef A():\n  run('echo A')\n\n@task\ndef B():\n  sudo('echo B')\n\n@task\ndef main():\n  A()\n  B()\n```\n\n>main\u3092\u5b9f\u884c\u3059\u308b\u3068\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5bfe\u8c61\u30de\u30b7\u30f3\u3067\u5b9f\u884c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\uff0e\n\n```\n$ fab main\n[192.168.33.10] run: echo A\n[192.168.33.10] out: A\n[192.168.33.10] run: echo B\n[192.168.33.10] out: B\n\nDone.\nDisconnecting from 192.168.33.10... done.\n```\n\n>package_ensure()\u306a\u3069\u306e_ensure()\u30e1\u30bd\u30c3\u30c9\u3084\uff0cdir_exists()\u306a\u3069\u306e_exisits()\u30e1\u30bd\u30c3\u30c9\u3092\u3046\u307e\u304f\u7528\u3044\u308b\u3053\u3068\u3067\uff0c\u51aa\u7b49\u6027\u3092\u4fdd\u8a3c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\n```py\npackage_ensure('vim') # vim\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306e\u307f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n```\n\n##vagrant\u9023\u643a\n\n>vagrant\u3068\u9023\u643a\u3055\u305b\u308b\u306b\u306f\uff0c\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\uff0e\n\n```\n$ vagrant plugin install vagrant-fabric \n```\n\n>\u305d\u3057\u3066\uff0cVagrantfile\u306b\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u8a18\u8ff0\uff0e\n\n```\n...\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n...\n  config.vm.provision :fabric do |fabric|\n    fabric.fabfile_path = './fabfile.py'\n    fabric.tasks = ['set_env'] # \u5b9f\u884c\u3057\u305f\u3044\u30bf\u30b9\u30af\n  end\nend\n```\n\n>\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u69d8\u306adotfile\u3092\u914d\u7f6e\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u3044\u3066\u307f\u305f\uff0e\n\n```py:fabfile.py\n# -*- encoding:utf-8 -*-\n\nfrom fabric.api import env, settings\nfrom fabric.decorators import task\nfrom cuisine import mode_sudo, select_package, run, package_ensure, dir_exists, cd\n\nselect_package('apt')\n\n@task\ndef set_env():\n  setup_packages()\n  fetch_dotfiles()\n  set_symlinks()\n\n@task\ndef setup_packages():\n  with settings(mode_sudo()):\n    package_ensure('unzip')\n\n@task\ndef fetch_dotfiles():\n  if not dir_exists('dotfiles'):\n    run('git clone --recursive git@github.com:pika-shi/dotfiles.git')\n\n@task\ndef set_symlinks():\n  path_pair_list = [\n    ('dotfiles/_zshrc', '.zshrc'), ('dotfiles/_tmux.conf', '.tmux.conf'),\n    ('dotfiles/_vimrc', '.vimrc'), ('dotfiles/_vim', '.vim')\n    ]\n  with cd('~/'):\n    for path_set in path_pair_list:\n      run('ln -s {} {}'.format(*path_set))\n\n```\n\n> vagrant up\u3057\u305f\u72b6\u614b\u3067\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\uff0c\u30bf\u30b9\u30af\u304c\u5b9f\u884c\u3055\u308c\uff0cdotfile\u306b\u9069\u5207\u306a\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u304c\u306f\u3089\u308c\u308b\uff0e\n\n```\n$ vagrant provision\n```\n\n##\u304a\u308f\u308a\u306b\n\n>\u3053\u306e\u3088\u3046\u306b\uff0c\u3061\u3087\u3063\u3068\u3057\u305f\u69cb\u6210\u7ba1\u7406\u3092\u975e\u5e38\u306b\u5bb9\u6613\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\uff0c\u4f7f\u3063\u3066\u307f\u3066\u305d\u306e\u4fbf\u5229\u3055\u3092\u5b9f\u611f\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\uff0e\n", "tags": ["fabric", "Python", "vagrant"]}