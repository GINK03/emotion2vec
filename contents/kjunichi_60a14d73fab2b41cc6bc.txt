{"context": " More than 1 year has passed since last update.\n\n\u80cc\u666f\nmruby-cli\u3084cgo\u3067\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066Windows\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u7c21\u5358\u306b\u4f5c\u308c\u308b\u304c\u3001\u4eca\u56de\u53d6\u308a\u4e0a\u3052\u305fOpenCV\u306a\u3069\n\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9\u3092\u542b\u3080\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306f\u305f\u3076\u3093\u30d3\u30eb\u30c9\u304c\u96e3\u3057\u3044\u306e\u3067\u306f\u3068\n\u611f\u3058\u3066\u3044\u305f\u3002\n\u3053\u306e\u554f\u984c\u89e3\u6c7a\u306e\u7b2c\u4e00\u6b69\u3068\u3057\u3066\u3001\u81ea\u524d\u3067\u3001Linux\u4e0a\u3067\u3001Windows\u5411\u3051\u306eOpenCV\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d3\u30eb\u30c9\u3092\u8a66\u307f\u305f\u3002\n\u6700\u7d42\u7684\u306b\u30ef\u30f3\u30d0\u30a4\u30ca\u30ea\u3092\u76ee\u6a19\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001DLL\u3067\u306f\u306a\u304f\u3001.a\u306e\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n\u524d\u63d0\n\u4ee5\u4e0b\u306e\u3001Docker\u30b3\u30f3\u30c6\u30ca\u30fc\u3092\u7528\u610f\u3057\u3066\u3001mingw-w64\u304c\u52d5\u304fLinux\u74b0\u5883\u3092\u7528\u610f\u3057\u305f\u3002\n\nhttps://github.com/kjunichi/docker-mingw-w64-32\n\n\n\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u5411\u3051\u306e.cmake\u30d5\u30a1\u30a4\u30eb\u306e\u7528\u610f\nset(CMAKE_SYSTEM_NAME Windows)\n\n# specify the cross compiler\nset(CMAKE_C_COMPILER   /usr/bin/i686-w64-mingw32-gcc)\nset(CMAKE_CXX_COMPILER /usr/bin/i686-w64-mingw32-g++)\n\n# set PKG_CONFIG_PATH for MinGW Cross Compile Environment\nset(ENV{PKG_CONFIG_PATH} /usr/i686-w64-mingw32/lib/pkgconfig)\n\n# where is the target environment \nset(CMAKE_FIND_ROOT_PATH /usr/i686-w64-mingw32/)\n\n\n\u30b3\u30f3\u30d1\u30a4\u30e9\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5909\u66f4\n-Werror=non-virtual-dtor\u3092\u7121\u52b9\u5316\u3059\u308b\n--- a/cmake/OpenCVCompilerOptions.cmake\n+++ b/cmake/OpenCVCompilerOptions.cmake\n@@ -64,7 +64,7 @@ if(CMAKE_COMPILER_IS_GNUCXX)\n   add_extra_compiler_option(-W)\n   add_extra_compiler_option(-Wall)\n   add_extra_compiler_option(-Werror=return-type)\n-  add_extra_compiler_option(-Werror=non-virtual-dtor)\n+  #add_extra_compiler_option(-Werror=non-virtual-dtor)\n   add_extra_compiler_option(-Werror=address)\n   add_extra_compiler_option(-Werror=sequence-point)\n   add_extra_compiler_option(-Wformat)\n\n\n\u53c2\u8003\u8cc7\u6599\n\nOpenCV - Bug #4107: 'struct IUnknown' has accessible non-virtual destructor for MinGW 4.9.2 - OpenCV DevZone\n\n\nCMake\u306b\u3088\u308b\u30d3\u30eb\u30c9\nmkdir build\ncd  build\ncmake -DCMAKE_TOOLCHAIN_FILE=../mytool.cmake -DWITH_IPP=OFF -DBUILD_SHARED_LIBS=OFF  ..\nmake\nmake install\ncd ..\n\n\n\u4f7f\u3044\u65b9\n\n\u30b5\u30f3\u30d7\u30eb\nWebCam\u306e\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\n#include \"opencv2/opencv.hpp\"\n\nint main(int, char**)\n{\n    cv::VideoCapture cap(1); // open the default camera\n    if (!cap.isOpened())  // check if we succeeded\n        return -1;\n    for (;;)\n    {\n        cv::Mat frame;\n        cap >> frame; // get a new frame from camera\n        //cvtColor(frame, edges, COLOR_BGR2GRAY);\n        //GaussianBlur(edges, edges, Size(7, 7), 1.5, 1.5);\n        //Canny(edges, edges, 0, 30, 3);\n        cv::imshow(\"Webcam feed\", frame);\n        if (cv::waitKey(30) >= 0) break;\n    }\n    // the camera will be deinitialized automatically in VideoCapture destructor\n\n    return 0;\n}\n\n\n\n\u30d3\u30eb\u30c9\u65b9\u6cd5\n.a\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u9806\u756a\u304c\u8d85\u5927\u4e8b\u3002\ni686-w64-mingw32-g++ webcam.cpp -o webcam.exe -I ./install/include/ \\\n install/lib/libopencv_highgui300.a \\\n install/lib/libopencv_videoio300.a \\\n install/lib/libopencv_imgcodecs300.a \\\n install/lib/libopencv_imgproc300.a \\\n install/lib/libopencv_core300.a \\\n install/lib/libopencv_hal300.a \\\n 3rdparty/lib/libIlmImf.a \\\n 3rdparty/lib/libzlib.a \\\n 3rdparty/lib/liblibjasper.a \\\n 3rdparty/lib/liblibjpeg.a \\\n 3rdparty/lib/liblibtiff.a \\\n 3rdparty/lib/liblibwebp.a \\\n 3rdparty/lib/liblibpng.a \\\n -lvfw32 -lole32 -loleaut32 -lgdi32 -lcomdlg32 -luuid \\\n -static-libgcc -static-libstdc++\n\n\n\u77e5\u898b\nBUILD_opencv_world\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u307e\u3068\u3081\u3088\u3046\u3068\u3057\u305f\u3089\u3001\u30a8\u30e9\u30fc\u3068\u306a\u3063\u3066\u3044\u307e\u3044\u3001NG\u3002\n# \u80cc\u666f\n\nmruby-cli\u3084cgo\u3067\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066Windows\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u7c21\u5358\u306b\u4f5c\u308c\u308b\u304c\u3001\u4eca\u56de\u53d6\u308a\u4e0a\u3052\u305fOpenCV\u306a\u3069\n\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9\u3092\u542b\u3080\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306f\u305f\u3076\u3093\u30d3\u30eb\u30c9\u304c\u96e3\u3057\u3044\u306e\u3067\u306f\u3068\n\u611f\u3058\u3066\u3044\u305f\u3002\n\n\u3053\u306e\u554f\u984c\u89e3\u6c7a\u306e\u7b2c\u4e00\u6b69\u3068\u3057\u3066\u3001\u81ea\u524d\u3067\u3001Linux\u4e0a\u3067\u3001Windows\u5411\u3051\u306eOpenCV\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d3\u30eb\u30c9\u3092\u8a66\u307f\u305f\u3002\n\u6700\u7d42\u7684\u306b\u30ef\u30f3\u30d0\u30a4\u30ca\u30ea\u3092\u76ee\u6a19\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001DLL\u3067\u306f\u306a\u304f\u3001.a\u306e\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n\n# \u524d\u63d0\n\n\u4ee5\u4e0b\u306e\u3001Docker\u30b3\u30f3\u30c6\u30ca\u30fc\u3092\u7528\u610f\u3057\u3066\u3001mingw-w64\u304c\u52d5\u304fLinux\u74b0\u5883\u3092\u7528\u610f\u3057\u305f\u3002\n\n- https://github.com/kjunichi/docker-mingw-w64-32\n\n# \u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u5411\u3051\u306e.cmake\u30d5\u30a1\u30a4\u30eb\u306e\u7528\u610f\n\n```cmake\nset(CMAKE_SYSTEM_NAME Windows)\n\n# specify the cross compiler\nset(CMAKE_C_COMPILER   /usr/bin/i686-w64-mingw32-gcc)\nset(CMAKE_CXX_COMPILER /usr/bin/i686-w64-mingw32-g++)\n\n# set PKG_CONFIG_PATH for MinGW Cross Compile Environment\nset(ENV{PKG_CONFIG_PATH} /usr/i686-w64-mingw32/lib/pkgconfig)\n\n# where is the target environment \nset(CMAKE_FIND_ROOT_PATH /usr/i686-w64-mingw32/)\n```\n\n# \u30b3\u30f3\u30d1\u30a4\u30e9\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5909\u66f4\n\n-Werror=non-virtual-dtor\u3092\u7121\u52b9\u5316\u3059\u308b\n\n```diff\n--- a/cmake/OpenCVCompilerOptions.cmake\n+++ b/cmake/OpenCVCompilerOptions.cmake\n@@ -64,7 +64,7 @@ if(CMAKE_COMPILER_IS_GNUCXX)\n   add_extra_compiler_option(-W)\n   add_extra_compiler_option(-Wall)\n   add_extra_compiler_option(-Werror=return-type)\n-  add_extra_compiler_option(-Werror=non-virtual-dtor)\n+  #add_extra_compiler_option(-Werror=non-virtual-dtor)\n   add_extra_compiler_option(-Werror=address)\n   add_extra_compiler_option(-Werror=sequence-point)\n   add_extra_compiler_option(-Wformat)\n```\n\n## \u53c2\u8003\u8cc7\u6599\n\n- [OpenCV - Bug #4107: 'struct IUnknown' has accessible non-virtual destructor for MinGW 4.9.2 - OpenCV DevZone](http://code.opencv.org/issues/4107)\n\n# CMake\u306b\u3088\u308b\u30d3\u30eb\u30c9\n\n```bash\nmkdir build\ncd  build\ncmake -DCMAKE_TOOLCHAIN_FILE=../mytool.cmake -DWITH_IPP=OFF -DBUILD_SHARED_LIBS=OFF  ..\nmake\nmake install\ncd ..\n```\n\n# \u4f7f\u3044\u65b9\n\n## \u30b5\u30f3\u30d7\u30eb\n\nWebCam\u306e\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\n\n```cpp\n#include \"opencv2/opencv.hpp\"\n\nint main(int, char**)\n{\n    cv::VideoCapture cap(1); // open the default camera\n    if (!cap.isOpened())  // check if we succeeded\n        return -1;\n    for (;;)\n    {\n        cv::Mat frame;\n        cap >> frame; // get a new frame from camera\n        //cvtColor(frame, edges, COLOR_BGR2GRAY);\n        //GaussianBlur(edges, edges, Size(7, 7), 1.5, 1.5);\n        //Canny(edges, edges, 0, 30, 3);\n        cv::imshow(\"Webcam feed\", frame);\n        if (cv::waitKey(30) >= 0) break;\n    }\n    // the camera will be deinitialized automatically in VideoCapture destructor\n\n    return 0;\n}\n\n```\n\n## \u30d3\u30eb\u30c9\u65b9\u6cd5\n\n.a\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u9806\u756a\u304c\u8d85\u5927\u4e8b\u3002\n\n```\ni686-w64-mingw32-g++ webcam.cpp -o webcam.exe -I ./install/include/ \\\n install/lib/libopencv_highgui300.a \\\n install/lib/libopencv_videoio300.a \\\n install/lib/libopencv_imgcodecs300.a \\\n install/lib/libopencv_imgproc300.a \\\n install/lib/libopencv_core300.a \\\n install/lib/libopencv_hal300.a \\\n 3rdparty/lib/libIlmImf.a \\\n 3rdparty/lib/libzlib.a \\\n 3rdparty/lib/liblibjasper.a \\\n 3rdparty/lib/liblibjpeg.a \\\n 3rdparty/lib/liblibtiff.a \\\n 3rdparty/lib/liblibwebp.a \\\n 3rdparty/lib/liblibpng.a \\\n -lvfw32 -lole32 -loleaut32 -lgdi32 -lcomdlg32 -luuid \\\n -static-libgcc -static-libstdc++\n```\n\n# \u77e5\u898b\n\nBUILD_opencv_world\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u307e\u3068\u3081\u3088\u3046\u3068\u3057\u305f\u3089\u3001\u30a8\u30e9\u30fc\u3068\u306a\u3063\u3066\u3044\u307e\u3044\u3001NG\u3002\n", "tags": ["Windows", "Linux", "OpenCV"]}