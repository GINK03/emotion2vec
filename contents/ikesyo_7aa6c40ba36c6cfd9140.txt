{"context": " More than 1 year has passed since last update.\u5143\u30cd\u30bf: How to obtain KVO old value using ReactiveCocoa 2.0 API? \u00b7 Issue #762 \u00b7 ReactiveCocoa/ReactiveCocoa\n\n\nKVO\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\nReactiveCocoa\u3067\u306fRACObserve()\u30de\u30af\u30ed\u306b\u3088\u3063\u3066KVO\u3092\u975e\u5e38\u306b\u7c21\u5358\u306b\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u305d\u308c\u3060\u3051\u3067\u306f\u3001\u901a\u5e38\u306eKVO\u3067\u4f7f\u7528\u3059\u308baddObserver:forKeyPath:options:context:\u306e\u5834\u5408\u306b\u306f\u6307\u5b9a\u3067\u304d\u308bNSKeyValueObservingOptions (NSKeyValueObservingOptionOld\u306a\u3069) \u3092\u6307\u5b9a\u3067\u304d\u307e\u305b\u3093\u3002\nKVO\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u3001-[NSObject rac_valuesAndChangesForKeyPath:options:observer:]\u3092\u4f7f\u7528\u3059\u308b\u3068KVO\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u3092\u53cd\u6620\u3057\u305f\u30b7\u30b0\u30ca\u30eb\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u3053\u306e\u623b\u308a\u5024\u306e\u30b7\u30b0\u30ca\u30eb\u306fRACObserve()\u3068\u306f\u9055\u3044\u3001next\u3068\u3057\u3066\u3001\u5909\u66f4\u5f8c\u306e\u5024\u3068\u30c1\u30a7\u30f3\u30b8\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u30fc\u304b\u3089\u306a\u308bRACTuple\u3092\u9001\u308b\u305f\u3081\u3001-reduceEach:\u3092\u4f7f\u7528\u3059\u308b\u306a\u3069\u3057\u3066\u30bf\u30d7\u30eb\u306e\u5024\u3092\u5206\u89e3\u30fb\u30c1\u30a7\u30f3\u30b8\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u30fc\u304b\u3089\u5909\u66f4\u524d\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u306a\u3069\u306e\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n[[self \n    rac_valuesAndChangesForKeyPath:keyPath options:NSKeyValueObservingOptionOld observer:nil] \n    reduceEach:^(id value, NSDictionary *changeDictionary) {\n        id oldValue = changeDictionary[NSKeyValueChangeOldKey];\n        return // \u4f55\u304b\u3057\u3089\u306e\u5024;\n    }];\n\n\n\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n-[RACSignal combinePreviousWithStart:reduce:]\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001reduce:\u306e\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u76f4\u524d\u306e\u5024\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nRACSignal *signal = [@[ @1, @2, @3, @4 ].rac_sequence signal];\n[[signal \n    // \u6700\u521d\u306e`next`\u3067\u306f`previous`\u306b1\u3064\u76ee\u306e\u5f15\u6570\uff08\u3053\u306e\u5834\u5408\u306f`@0`\uff09\u304c\u6e21\u3055\u308c\u3001\n    // 2\u56de\u76ee\u4ee5\u964d\u306e`next` \u3067\u306f\u524d\u56de\u306e`current`\u304c\u6e21\u3055\u308c\u308b\u3002\n    combinePreviousWithStart:@0 reduce:^(NSNumber *previous, NSNumber *current) {\n        return @(previous.integerValue + current.integerValue);\n    }]\n    subscribeNext:^(NSNumber *value) {\n        NSLog(@\"%d\", value.integerValue);\n    }];\n// 1 (<= 0 + 1)\n// 3 (<= 1 + 2)\n// 5 (<= 2 + 3)\n// 7 (<= 3 + 4)\n\n\u5143\u30cd\u30bf: [How to obtain KVO old value using ReactiveCocoa 2.0 API? \u00b7 Issue #762 \u00b7 ReactiveCocoa/ReactiveCocoa](https://github.com/ReactiveCocoa/ReactiveCocoa/issues/762)\n\n-----\n\n## KVO\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\nReactiveCocoa\u3067\u306f`RACObserve()`\u30de\u30af\u30ed\u306b\u3088\u3063\u3066KVO\u3092\u975e\u5e38\u306b\u7c21\u5358\u306b\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u305d\u308c\u3060\u3051\u3067\u306f\u3001\u901a\u5e38\u306eKVO\u3067\u4f7f\u7528\u3059\u308b`addObserver:forKeyPath:options:context:`\u306e\u5834\u5408\u306b\u306f\u6307\u5b9a\u3067\u304d\u308b`NSKeyValueObservingOptions` (NSKeyValueObservingOptionOld\u306a\u3069) \u3092\u6307\u5b9a\u3067\u304d\u307e\u305b\u3093\u3002\n\nKVO\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u3001`-[NSObject rac_valuesAndChangesForKeyPath:options:observer:]`\u3092\u4f7f\u7528\u3059\u308b\u3068KVO\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u3092\u53cd\u6620\u3057\u305f\u30b7\u30b0\u30ca\u30eb\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u3053\u306e\u623b\u308a\u5024\u306e\u30b7\u30b0\u30ca\u30eb\u306f`RACObserve()`\u3068\u306f\u9055\u3044\u3001`next`\u3068\u3057\u3066\u3001\u5909\u66f4\u5f8c\u306e\u5024\u3068\u30c1\u30a7\u30f3\u30b8\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u30fc\u304b\u3089\u306a\u308b`RACTuple`\u3092\u9001\u308b\u305f\u3081\u3001`-reduceEach:`\u3092\u4f7f\u7528\u3059\u308b\u306a\u3069\u3057\u3066\u30bf\u30d7\u30eb\u306e\u5024\u3092\u5206\u89e3\u30fb\u30c1\u30a7\u30f3\u30b8\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u30fc\u304b\u3089\u5909\u66f4\u524d\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\u306a\u3069\u306e\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```objc\n[[self \n    rac_valuesAndChangesForKeyPath:keyPath options:NSKeyValueObservingOptionOld observer:nil] \n    reduceEach:^(id value, NSDictionary *changeDictionary) {\n        id oldValue = changeDictionary[NSKeyValueChangeOldKey];\n        return // \u4f55\u304b\u3057\u3089\u306e\u5024;\n    }];\n```\n\n## \u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\n`-[RACSignal combinePreviousWithStart:reduce:]`\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001`reduce:`\u306e\u30d6\u30ed\u30c3\u30af\u5f15\u6570\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u76f4\u524d\u306e\u5024\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```objc\nRACSignal *signal = [@[ @1, @2, @3, @4 ].rac_sequence signal];\n[[signal \n    // \u6700\u521d\u306e`next`\u3067\u306f`previous`\u306b1\u3064\u76ee\u306e\u5f15\u6570\uff08\u3053\u306e\u5834\u5408\u306f`@0`\uff09\u304c\u6e21\u3055\u308c\u3001\n    // 2\u56de\u76ee\u4ee5\u964d\u306e`next` \u3067\u306f\u524d\u56de\u306e`current`\u304c\u6e21\u3055\u308c\u308b\u3002\n    combinePreviousWithStart:@0 reduce:^(NSNumber *previous, NSNumber *current) {\n        return @(previous.integerValue + current.integerValue);\n    }]\n    subscribeNext:^(NSNumber *value) {\n        NSLog(@\"%d\", value.integerValue);\n    }];\n// 1 (<= 0 + 1)\n// 3 (<= 1 + 2)\n// 5 (<= 2 + 3)\n// 7 (<= 3 + 4)\n```", "tags": ["ReactiveCocoa", "Objective-C", "iOS", "FRP"]}