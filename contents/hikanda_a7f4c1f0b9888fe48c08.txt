{"context": "\n\n/proc/<pid>/sched \u306e\u4e2d\u8eab\nproc\u306eman\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u66f8\u3044\u3066\u306a\u304b\u3063\u305f\u306e\u3067\u4eca\u307e\u3067\u5168\u7136\u6c17\u3065\u3044\u3066\u3044\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u4fbf\u5229\u306a\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u7d71\u8a08\u60c5\u5831\u3092\u30e6\u30fc\u30b6\u304c\u7c21\u5358\u306b\u898b\u308c\u308b\u3053\u3068\u3092\u6700\u8fd1\u77e5\u308a\u307e\u3057\u305f\u3002/proc/<pid>/sched \u3067\u3059\u3002\nUbuntu 14.04 \u3067 pid=1 \u306e init \u30bf\u30b9\u30af\u306e\u7d71\u8a08\u60c5\u5831\u3092\u898b\u3066\u307f\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n$ cat /etc/os-release \nNAME=\"Ubuntu\"\nVERSION=\"14.04.4 LTS, Trusty Tahr\"\nID=ubuntu\nID_LIKE=debian\nPRETTY_NAME=\"Ubuntu 14.04.4 LTS\"\nVERSION_ID=\"14.04\"\nHOME_URL=\"http://www.ubuntu.com/\"\nSUPPORT_URL=\"http://help.ubuntu.com/\"\nBUG_REPORT_URL=\"http://bugs.launchpad.net/ubuntu/\"\n$ cat /proc/1/sched\ninit (1, #threads: 1)\n-------------------------------------------------------------------\nse.exec_start                                :     176686992.984163\nse.vruntime                                  :           691.937721\nse.sum_exec_runtime                          :          2342.115314\nse.statistics.wait_start                     :             0.000000\nse.statistics.sleep_start                    :     176686992.984163\nse.statistics.block_start                    :             0.000000\nse.statistics.sleep_max                      :      14095966.363585\nse.statistics.block_max                      :          4216.956618\nse.statistics.exec_max                       :            20.227471\nse.statistics.slice_max                      :            40.150588\nse.statistics.wait_max                       :            10.753266\nse.statistics.wait_sum                       :           373.022241\nse.statistics.wait_count                     :                13537\nse.statistics.iowait_sum                     :          1696.874333\nse.statistics.iowait_count                   :                  637\nse.nr_migrations                             :                 1082\nse.statistics.nr_migrations_cold             :                    0\nse.statistics.nr_failed_migrations_affine    :                    0\nse.statistics.nr_failed_migrations_running   :                  976\nse.statistics.nr_failed_migrations_hot       :                  325\nse.statistics.nr_forced_migrations           :                    1\nse.statistics.nr_wakeups                     :                 6493\nse.statistics.nr_wakeups_sync                :                 4405\nse.statistics.nr_wakeups_migrate             :                 1046\nse.statistics.nr_wakeups_local               :                 1244\nse.statistics.nr_wakeups_remote              :                 5249\nse.statistics.nr_wakeups_affine              :                  261\nse.statistics.nr_wakeups_affine_attempts     :                 1197\nse.statistics.nr_wakeups_passive             :                    0\nse.statistics.nr_wakeups_idle                :                    0\navg_atom                                     :             0.174264\navg_per_cpu                                  :             2.164616\nnr_switches                                  :                13440\nnr_voluntary_switches                        :                 6474\nnr_involuntary_switches                      :                 6966\nse.load.weight                               :                 1024\nse.avg.runnable_avg_sum                      :                  466\nse.avg.runnable_avg_period                   :                47841\nse.avg.load_avg_contrib                      :                    0\nse.avg.decay_count                           :            168501848\npolicy                                       :                    0\nprio                                         :                  120\nclock-delta                                  :                  201\n\n\u4f55\u3084\u3089\u8272\u3093\u306a\u60c5\u5831\u304c\u51fa\u3066\u307e\u3059\u306d\u3002\u3053\u308c\u3092\u898b\u308c\u3070\u3001\u7c21\u5358\u306b\u30bf\u30b9\u30af\u304cCPU\u4e0a\u3067\u5b9f\u884c\u3057\u3066\u3044\u305f\u6642\u9593\u3068\u304b\u3001\u4f55\u56de\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30b9\u30a4\u30c3\u30c1\u3092\u3057\u305f\u304b\u3001\u30bf\u30b9\u30af\u306e\u30b9\u30ea\u30fc\u30d7\u6642\u9593\u30fb\u8d77\u5e8a\u56de\u6570\u306a\u3069\u304c\u308f\u304b\u308a\u305d\u3046\u3067\u3059\u3002\n\u6b63\u78ba\u306b\u306f /proc/<pid>/sched \u306f\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7\u30ea\u30fc\u30c0\u306e\u60c5\u5831\u306a\u306e\u3067\u3001\u305d\u306e\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7\u306b\u5c5e\u3059\u308b\u5404\u30b9\u30ec\u30c3\u30c9\u306e\u60c5\u5831\u3092\u898b\u308b\u306b\u306f /proc/<tgid>/task/<tid>/sched \u3092\u898b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059 (tgid \u306f\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7ID\u3001tid \u306f\u30b9\u30ec\u30c3\u30c9ID\u306e\u610f\u5473)\u3002\n\u540d\u524d\u304b\u3089\u60f3\u50cf\u306f\u3067\u304d\u305d\u3046\u3067\u3059\u304c\u3001\u307e\u305a\u3001\u305d\u3082\u305d\u3082\u3069\u3046\u3084\u3063\u3066\u3053\u306e\u60c5\u5831\u3092\u8868\u793a\u3057\u3066\u3044\u308b\u304b  procfs \u306e\u51e6\u7406\u306e\u4e2d\u8eab\u3092\u8efd\u304f\u8ffd\u3044\u304b\u3051\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u30ab\u30fc\u30cd\u30eb\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3068\u304d\u306f\u3001\u307e\u305a\u5927\u96d1\u628a\u306b\u63a8\u6e2c\u3059\u308b\u306e\u304c\u4e00\u756a\u826f\u3044\u304b\u306a\u3068\u3002\u7d30\u304b\u3044\u6240\u3070\u304b\u308a\u8ffd\u3046\u3068\u3001\u3044\u3064\u307e\u3067\u7d4c\u3063\u3066\u3082\u8abf\u67fb\u304c\u7d42\u308f\u3089\u306a\u3044\u5834\u5408\u304c\u591a\u3044\u306e\u3067\u30fb\u30fb\u30fb\u3002\n\u30ab\u30fc\u30cd\u30eb\u306e\u4e2d\u8eab\u306a\u3093\u3066\u898b\u305f\u304f\u306a\u3044\u4eba\u306b\u3068\u3063\u3066\u306f\u3001\u5404\u7d71\u8a08\u60c5\u5831\u306e\u610f\u5473\u3060\u3051\u8aad\u3093\u3067\u3044\u305f\u3060\u3051\u308c\u3070\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3061\u3087\u3063\u3068\u30ab\u30fc\u30cd\u30eb\u5185\u90e8\u3092\u8ffd\u3044\u304b\u3051\u305f\u3044\u4eba\u306f\u3001\u5404\u7d71\u8a08\u60c5\u5831\u306e\u6587\u5b57\u5217\u3092\u30ab\u30fc\u30cd\u30eb\u30bd\u30fc\u30b9\u304b\u3089\u691c\u7d22\u3059\u308c\u3070\u3001\u3069\u3046\u3044\u3046\u51e6\u7406\u3067\u3069\u3046\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u308b\u304b\u304c\u308f\u304b\u3063\u3066Linux\u306e\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e\u6982\u8981\u304c\u7406\u89e3\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n/proc/<pid>/sched \u3092 open(2) \u3057\u305f\u6642\u306e\u30ab\u30fc\u30cd\u30eb\u51e6\u7406\npid_entry \u69cb\u9020\u4f53\u306e\u914d\u5217 tgid_base_stuff \u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nlinux-3.13/fs/proc/base.c\n2571 static const struct pid_entry tgid_base_stuff[] = {\n2572         DIR(\"task\",       S_IRUGO|S_IXUGO, proc_task_inode_operations, proc_task_operations),\n2573         DIR(\"fd\",         S_IRUSR|S_IXUSR, proc_fd_inode_operations, proc_fd_operations),\n2574 #ifdef CONFIG_CHECKPOINT_RESTORE\n2575         DIR(\"map_files\",  S_IRUSR|S_IXUSR, proc_map_files_inode_operations, proc_map_files_operations),\n2576 #endif\n2577         DIR(\"fdinfo\",     S_IRUSR|S_IXUSR, proc_fdinfo_inode_operations, proc_fdinfo_operations),\n2578         DIR(\"ns\",         S_IRUSR|S_IXUGO, proc_ns_dir_inode_operations, proc_ns_dir_operations),\n2579 #ifdef CONFIG_NET\n2580         DIR(\"net\",        S_IRUGO|S_IXUGO, proc_net_inode_operations, proc_net_operations),\n2581 #endif\n2582         REG(\"environ\",    S_IRUSR, proc_environ_operations),\n2583         INF(\"auxv\",       S_IRUSR, proc_pid_auxv),\n2584         ONE(\"status\",     S_IRUGO, proc_pid_status),\n2585         ONE(\"personality\", S_IRUGO, proc_pid_personality),\n2586         INF(\"limits\",     S_IRUGO, proc_pid_limits),\n2587 #ifdef CONFIG_SCHED_DEBUG\n2588         REG(\"sched\",      S_IRUGO|S_IWUSR, proc_pid_sched_operations),\n2589 #endif\n\u30fb\u30fb\u30fb\uff08\u7701\u7565\uff09\u30fb\u30fb\u30fb\n\n\n\u5185\u90e8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u8981\u7d20\u3068\u30e1\u30f3\u30d0\u3092\u773a\u3081\u308b\u3068\u3001/proc/<pid> \u914d\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u306b\u4e00\u81f4\u3059\u308b\u6587\u5b57\u5217\u304c DIR() \u3084 REG() \u306a\u3069\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u4e26\u3093\u3067\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u3001\u6050\u3089\u304f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f DIR()\u3001\u901a\u5e38\u30d5\u30a1\u30a4\u30eb (regular file) \u306f REG() \u3067\u8868\u73fe\u3055\u308c\u3066\u3066\u3001pid_entry \u69cb\u9020\u4f53\u3092\u826f\u3044\u611f\u3058\u3067\u5b9a\u7fa9\u3059\u308c\u3070 procfs \u4f5c\u308c\u308b\u3093\u3060\u308d\u3046\u306a\u3068\u60f3\u50cf\u3067\u304d\u307e\u3059\u3002\n\u7b2c\u4e8c\u5f15\u6570\u306b\u3042\u308b S_XXXXX \u306f\u30a2\u30af\u30bb\u30b9\u6a29\u306e\u8a2d\u5b9a\u3067\u3059\u306d\u3002\u3053\u306e\u5b9a\u7fa9\u306f include/uapi/linux/stat.h \u306b\u66f8\u3044\u3066\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u3092\u5909\u66f4\u3059\u308b chmod \u30b3\u30de\u30f3\u30c9\u3067\u5f15\u6570\u306b\u6e21\u3059 mode \u3068\u540c\u3058\u611f\u3058\u3067\u3059\u3057\u3001stat(2) \u306e man \u30de\u30cb\u30e5\u30a2\u30eb\u306b\u3082\u66f8\u3044\u3066\u304f\u308c\u3066\u307e\u3059\u3002\nls -l /proc/<pid> \u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3068tgid_base_stuff \u306e\u30e1\u30f3\u30d0\u3068\u3092\u6bd4\u8f03\u3059\u308b\u3068\u3001\u8a2d\u5b9a\u901a\u308a\u306b\u30a2\u30af\u30bb\u30b9\u6a29\u304c\u53cd\u6620\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\nlinux-3.13/include/uapi/linux/stat.h\n 27 #define S_IRWXU 00700\n 28 #define S_IRUSR 00400\n 29 #define S_IWUSR 00200\n 30 #define S_IXUSR 00100\n 31 \n 32 #define S_IRWXG 00070\n 33 #define S_IRGRP 00040\n 34 #define S_IWGRP 00020\n 35 #define S_IXGRP 00010\n 36 \n 37 #define S_IRWXO 00007\n 38 #define S_IROTH 00004\n 39 #define S_IWOTH 00002\n 40 #define S_IXOTH 00001\n\n\n\u4eca\u56de\u8ffd\u3044\u305f\u3044\u306e\u306f /proc/<pid>/sched \u306a\u306e\u3067\u3001\u3053\u306e\u5b9a\u7fa9\u3060\u3051\u7740\u76ee\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u306e\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u306b\u306f\u3001\u30ab\u30fc\u30cd\u30eb\u30b3\u30f3\u30d5\u30a3\u30b0 CONFIG_SCHED_DEBUG=y \u306b\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002Ubuntu \u306f\u30c7\u30d5\u30a9\u30eb\u30c8 y \u307f\u305f\u3044\u3067\u3059\u306d\u3002\n2587 #ifdef CONFIG_SCHED_DEBUG\n2588         REG(\"sched\",      S_IRUGO|S_IWUSR, proc_pid_sched_operations),\n2589 #endif\n\n\u7b2c\u4e09\u5f15\u6570\u306b\u306f file_operations \u69cb\u9020\u4f53\u3092\u6307\u5b9a\u3057\u3066\u3066\u3001\u3053\u308c\u306f\u30d5\u30a1\u30a4\u30eb\u306e\u64cd\u4f5c\u306b\u5bfe\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u3092\u5b9a\u7fa9\u3059\u308b\u69cb\u9020\u4f53\u307f\u305f\u3044\u306a\u3082\u306e\u3002\u4f8b\u3048\u3070\u3001/proc/<pid>/sched \u3092\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb open(2) \u3067\u30d5\u30a1\u30a4\u30eb\u30aa\u30fc\u30d7\u30f3\u3057\u305f\u5834\u5408\u3001file_operations.open() \u306b\u767b\u9332\u3055\u308c\u305f\u30cf\u30f3\u30c9\u30e9\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n/proc/<pid>/sched \u306b\u5bfe\u3059\u308b\u69cb\u9020\u4f53\u540d\u304c proc_pid_sched_operations \u306a\u306e\u3067\u3001\u6697\u9ed9\u306e\u547d\u540d\u898f\u5247\u3082\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\u6b21\u306f\u3001proc_pid_sched_operations \u306e\u4e2d\u8eab\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\nlinux-3.13/fs/proc/base.c\n1297 static const struct file_operations proc_pid_sched_operations = {\n1298         .open           = sched_open,\n1299         .read           = seq_read,\n1300         .write          = sched_write,\n1301         .llseek         = seq_lseek,\n1302         .release        = single_release,\n1303 };\n\n\n\u8272\u3005\u306a\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u306b\u5bfe\u3057\u3066\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304c\u4ee3\u5165\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u3067\u8ffd\u3046\u306e\u306f .open \u306b\u4ee3\u5165\u3055\u308c\u305f sched_open \u3067\u3059\u3002\n\nlinux-3.13/fs/proc/base.c\n1405 static int sched_open(struct inode *inode, struct file *filp)\n1406 {\n1407         return single_open(filp, sched_show, inode);\n1408 }\n\n\n\nlinux-3.13/fs/seq_file.c\n564 int single_open(struct file *file, int (*show)(struct seq_file *, void *),\n565                 void *data)\n566 {\n567         struct seq_operations *op = kmalloc(sizeof(*op), GFP_KERNEL);\n568         int res = -ENOMEM;\n569 \n570         if (op) {\n571                 op->start = single_start;\n572                 op->next = single_next;\n573                 op->stop = single_stop;\n574                 op->show = show;\n575                 res = seq_open(file, op);\n576                 if (!res)\n577                         ((struct seq_file *)file->private_data)->private = data;\n578                 else\n579                         kfree(op);\n580         }\n581         return res;\n582 }\n583 EXPORT_SYMBOL(single_open);\n\n\n\u3053\u3053\u3067\u3001seq_file \u306e\u4ed5\u7d44\u307f\u3092\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u300c\u3068\u307f\u305e\u30fc\u30ce\u30fc\u30c8\uff1aprocfs \u3092\u4f7f\u3063\u305f\u30ab\u30fc\u30cd\u30eb\u60c5\u5831\u306e\u8868\u793a \u305d\u306e2\u300d\u3067\u8a73\u3057\u304f\u8aac\u660e\u3057\u3066\u3042\u308b\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306b\u306f sched_show() \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u3001\u3088\u3046\u3084\u304f\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u7d71\u8a08\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u51e6\u7406\u304c\u51fa\u3066\u304f\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\nlinux-3.13/fs/proc/base.c\n1257 /*\n1258  * Print out various scheduling related per-task fields:\n1259  */\n1260 static int sched_show(struct seq_file *m, void *v)\n1261 {\n1262         struct inode *inode = m->private;\n1263         struct task_struct *p;\n1264 \n1265         p = get_proc_task(inode);\n1266         if (!p)\n1267                 return -ESRCH;\n1268         proc_sched_show_task(p, m);\n1269 \n1270         put_task_struct(p);\n1271 \n1272         return 0;\n1273 }\n\n\nseq_file->private \u306b\u683c\u7d0d\u3057\u3066\u3044\u305f inode \u304b\u3089 get_proc_task() \u3067 task_struct \u69cb\u9020\u4f53\u3092\u6301\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u6ce8\u610f\u3059\u308b\u3053\u3068\u306f\u3001\u3053\u306e\u4e00\u9023\u306e\u51e6\u7406\u4e2d\u306b task_struct \u306e\u60c5\u5831\u304c\u6d88\u3048\u308b (\u4f8b\u3048\u3070\u3001\u30bf\u30b9\u30af\u304c exit() \u3059\u308b) \u3068NULL\u30dd\u30a4\u30f3\u30bf\u30a2\u30af\u30bb\u30b9\u304c\u767a\u751f\u3057\u305f\u308a\u56f0\u3063\u305f\u3053\u3068\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u305d\u3053\u3067\u3001\u4f55\u304b\u3057\u3089\u4fdd\u8b77\u3059\u308b\u4ed5\u7d44\u307f\u304c\u5fc5\u8981\u3067\u3001\u305d\u308c\u304c get_task_struct(), put_task_struct() \u306e\u51e6\u7406\u3092\u5165\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u4e0a\u8a18\u306e sched_show() \u3067\u306f\u3001 get_proc_task() \u306e\u5ef6\u9577\u3067 get_task_struct() \u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30e1\u30a4\u30f3\u51e6\u7406\u306e proc_sched_show_task() \u5b9f\u884c\u4e2d\u306f\u3001\u4e2d\u8eab\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u5bfe\u8c61\u306e task_struct \u304c\u4fdd\u8b77\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4fdd\u8b77\u306e\u4ed5\u7d44\u307f\u81ea\u4f53\u306f\u9577\u304f\u306a\u308b\u306e\u3067\u3053\u3053\u3067\u306f\u5272\u611b\u3002\n\u30e1\u30a4\u30f3\u51e6\u7406 proc_sched_show_task() \u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066 printf \u3057\u3066\u3044\u307e\u3059\u306d\u3002CONFIG_SCHEDSTATS=y \u3068\u306a\u3063\u3066\u3044\u308c\u3070\u3001\u8c4a\u5bcc\u306a\u60c5\u5831\u304c\u5f97\u3089\u308c\u305d\u3046\u3067\u3059\u3002\u3053\u308c\u3067\u51fa\u529b\u7b87\u6240\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u3001\u30ab\u30fc\u30cd\u30eb\u306e\u4e2d\u8eab\u3092\u8ffd\u3044\u304b\u3051\u308b\u306e\u306f\u3053\u3093\u306a\u3068\u3053\u308d\u3067\u304a\u7d42\u3044\u3002\n\nlinux-3.13/kernel/sched/debug.c\n553 void proc_sched_show_task(struct task_struct *p, struct seq_file *m)\n554 {\n555         unsigned long nr_switches;\n556 \n557         SEQ_printf(m, \"%s (%d, #threads: %d)\\n\", p->comm, task_pid_nr(p),\n558                                                 get_nr_threads(p));\n559         SEQ_printf(m,\n560                 \"---------------------------------------------------------\"\n561                 \"----------\\n\");\n562 #define __P(F) \\\n563         SEQ_printf(m, \"%-45s:%21Ld\\n\", #F, (long long)F)\n564 #define P(F) \\\n565         SEQ_printf(m, \"%-45s:%21Ld\\n\", #F, (long long)p->F)\n566 #define __PN(F) \\\n567         SEQ_printf(m, \"%-45s:%14Ld.%06ld\\n\", #F, SPLIT_NS((long long)F))\n568 #define PN(F) \\\n569         SEQ_printf(m, \"%-45s:%14Ld.%06ld\\n\", #F, SPLIT_NS((long long)p->F))\n570 \n571         PN(se.exec_start);\n572         PN(se.vruntime);\n573         PN(se.sum_exec_runtime);\n574 \n575         nr_switches = p->nvcsw + p->nivcsw;\n576 \n577 #ifdef CONFIG_SCHEDSTATS\n578         PN(se.statistics.wait_start);\n\n\u30fb\u30fb\u30fb\uff08\u7701\u7565\uff09\u30fb\u30fb\u30fb\n\n653                 SEQ_printf(m, \"%-45s:%21Ld\\n\",\n654                            \"clock-delta\", (long long)(t1-t0));\n655         }\n656 \n657         sched_show_numa(p, m);\n658 }\n\n\n\n\u5404\u7d71\u8a08\u60c5\u5831\u306e\u610f\u5473\n\u5206\u304b\u308b\u7bc4\u56f2\u3067\u7d71\u8a08\u60c5\u5831\u3092\u4ee5\u4e0b\u306b\u307e\u3068\u3081\u307e\u3059\u3002Linux-3.13\u306e\u30bd\u30fc\u30b9\u3092\u898b\u3066\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u6700\u65b0\u30ab\u30fc\u30cd\u30eb\u3067\u306f\u7570\u306a\u3063\u3066\u3044\u308b\u7b87\u6240\u304c\u3042\u308a\u3001\u305d\u306e\u70b9\u3082\u6c17\u3065\u3044\u305f\u3089\u8ffd\u8a18\u3057\u3066\u3044\u307e\u3059\u3002\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3084\u30bf\u30b9\u30af\u8d77\u5e8a\u95a2\u4fc2\u306e\u7d71\u8a08\u60c5\u5831\u306f\u3053\u3093\u306a\u306b\u7d30\u304b\u3044\u306e\u5fc5\u8981\uff1f\u3063\u3066\u611f\u3058\u306e\u3082\u306e\u304c\u591a\u3044\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u30bf\u30b9\u30af\u306e\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u6027\u80fd\u3092\u6c17\u306b\u3057\u305f\u308a\u3001\u30b7\u30b9\u30c6\u30e0\u306e\u51e6\u7406\u306b\u3069\u308c\u3060\u3051\u90aa\u9b54\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u78ba\u8a8d\u3057\u305f\u3044\u6642\u306f\u5f79\u306b\u7acb\u3064\u6642\u304c\u6765\u308b\u304b\u3082\u3002\n\n\n\n\u9805\u76ee\n\u5358\u4f4d\n\u610f\u5473\n\u5099\u8003\n\n\n\n\nse.exec_start\n\u30ca\u30ce\u79d2\n\u30bf\u30b9\u30af\u304cCPU\u4e0a\u3067\u5b9f\u884c\u958b\u59cb\u3057\u305f\u6642\u523b\nOS\u8d77\u52d5\u3057\u305f\u6642\u523b\u3092 0.0 \u3068\u3057\u3066\u3044\u308b\u306f\u305a\n\n\nse.vruntime\n\u30ca\u30ce\u79d2\n\u30bf\u30b9\u30af\u304cCPU\u4e0a\u3067\u5b9f\u884c\u3057\u305f\u4eee\u60f3\u7684\u306a\u6642\u9593\n\u5b9f\u6642\u9593\u3092\u6b63\u898f\u5316\uff08\u91cd\u307f\u4ed8\u3051\uff09\u3057\u305f\u6642\u9593\u3067\u3001nice\u5024\u3092\u5909\u66f4\u3057\u3066\u3044\u308c\u3070\u5b9f\u6642\u9593\u3068\u7570\u306a\u308b\u5024\u306b\u306a\u3063\u3066\u304f\u308b (RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0)\n\n\nse.sum_exec_runtime\n\u30ca\u30ce\u79d2\n\u30bf\u30b9\u30af\u304cCPU\u4e0a\u3067\u5b9f\u884c\u3057\u305f\u5408\u8a08\uff08\u5b9f\uff09\u6642\u9593\n\n\n\nse.statistics.wait_start\n\u30ca\u30ce\u79d2\n\u30bf\u30b9\u30af\u304c\u30e9\u30f3\u30ad\u30e5\u30fc\u304b\u3089\u5916\u308c\u305f\u72b6\u614b\u304b\u3089\u3001\u30e9\u30f3\u30ad\u30e5\u30fc\u306b\u8ffd\u52a0\u3055\u308c\u305f\u6642\u523b\uff08\u6ce8\uff1a\u672c\u5f53\u306b\u6b63\u3057\u3044\u304b\u4e0d\u5b89\u306a\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u8abf\u3079\u308b\u5fc5\u8981\u3042\u308a\uff09\n\u30bf\u30b9\u30af\u304c\u30e9\u30f3\u30ad\u30e5\u30fc\u304b\u3089\u5916\u3055\u308c\u305f\uff08\u30c7\u30ad\u30e5\u30fc\uff09\u6642\u306f 0.0 \u306b\u306a\u308b\u306e\u3067\u3001\u30b9\u30ea\u30fc\u30d7\u4e2d\u306f\u305a\u3063\u3068 0.0 (RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0)\n\n\nse.statistics.sleep_start\n\u30ca\u30ce\u79d2\n\u30bf\u30b9\u30af\u304c\u30b9\u30ea\u30fc\u30d7\u72b6\u614b (TASK_INTERRUPTIBLE) \u306b\u306a\u3063\u305f\u6642\u523b\n\u8d77\u5e8a\u3059\u308b\u3068\u304d\u306b 0.0 \u306b\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b (RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0)\n\n\nse.statistics.block_start\n\u30ca\u30ce\u79d2\n\u30bf\u30b9\u30af\u304c\u30d6\u30ed\u30c3\u30af\u72b6\u614b (TASK_UNINTERRUPTIBLE) \u306b\u306a\u3063\u305f\u6642\u523b\n(RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0)\n\n\nse.statistics.sleep_max\n\u30ca\u30ce\u79d2\n\u30bf\u30b9\u30af\u304c\u30b9\u30ea\u30fc\u30d7\u72b6\u614b (TASK_INTERRUPTIBLE) \u3068\u306a\u3063\u3066\u3044\u305f\u6700\u9577\u6642\u9593\n(RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0)\n\n\nse.statistics.block_max\n\u30ca\u30ce\u79d2\n\u30bf\u30b9\u30af\u304c\u30d6\u30ed\u30c3\u30af\u72b6\u614b (TASK_UNINTERRUPTIBLE) \u3068\u306a\u3063\u3066\u3044\u305f\u6700\u9577\u6642\u9593\n(RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0)\n\n\nse.statistics.exec_max\n\u30ca\u30ce\u79d2\n\u30bf\u30b9\u30af\u304cCPU\u4e0a\u3067\u5b9f\u884c\u3057\u3066\u3044\u305f\u6700\u9577\u6642\u9593\n\n\n\nse.statistics.slice_max\n\u30ca\u30ce\u79d2\n\u524d\u56de\u306e\u5b9f\u884c\u6642\u9593\u6700\u5927\u5024\u3068\u73fe\u5728\u306e\u5b9f\u884c\u6642\u9593\u6700\u5927\u5024 (sum_exec_runtime) \u3068\u306e\u5dee\u5206\n\u30e9\u30f3\u30ad\u30e5\u30fc\u306e\u8ca0\u8377\u304c\u30bf\u30b9\u30af\u306e\u8ca0\u8377\u306e\uff12\u500d\u4ee5\u4e0a\u306b\u306a\u3063\u305f\u6642\u3060\u3051 slice_max \u3092\u66f4\u65b0\u3057\u3088\u3046\u3068\u3059\u308b (RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0)\n\n\nse.statistics.wait_max\n\u30ca\u30ce\u79d2\n\u30bf\u30b9\u30af\u304c\u30e9\u30f3\u30ad\u30e5\u30fc\u304b\u3089\u5916\u308c\u3066\u3044\u305f\u6700\u5927\u6642\u9593\uff08\u6ce8\uff1a\u672c\u5f53\u306b\u6b63\u3057\u3044\u304b\u4e0d\u5b89\u306a\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u8abf\u3079\u308b\u5fc5\u8981\u3042\u308a\uff09\n(RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0)\n\n\nse.statistics.wait_sum\n\u30ca\u30ce\u79d2\n\u30bf\u30b9\u30af\u304c\u30e9\u30f3\u30ad\u30e5\u30fc\u304b\u3089\u5916\u308c\u3066\u3044\u305f\u5408\u8a08\u6642\u9593\uff08\u6ce8\uff1a\u672c\u5f53\u306b\u6b63\u3057\u3044\u304b\u4e0d\u5b89\u306a\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u8abf\u3079\u308b\u5fc5\u8981\u3042\u308a\uff09\n(RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0)\n\n\nse.statistics.wait_count\n\u56de\u6570\n\u30bf\u30b9\u30af\u304c\u30e9\u30f3\u30ad\u30e5\u30fc\u304b\u3089\u5916\u308c\u305f\u56de\u6570\n\n\n\nse.statistics.iowait_sum\n\u30ca\u30ce\u79d2\n\u30bf\u30b9\u30af\u304cI/O\u5f85\u3061\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u5408\u8a08\u6642\u9593\n\u30ab\u30fc\u30cd\u30eb\u306e\u4e2d\u8eab\u3068\u3057\u3066\u306f\u3001io_schedule() \u3092\u547c\u3073\u51fa\u3057\u3066\u30b9\u30ea\u30fc\u30d7\u3057\u305f\u6642\u304b\u3089\u518d\u3073\u30e9\u30f3\u30ad\u30e5\u30fc\u306b\u8ffd\u52a0\uff08\u30a8\u30f3\u30ad\u30e5\u30fc\uff09\u3055\u308c\u308b\u6642\u307e\u3067\u304c\u30a2\u30ab\u30a6\u30f3\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u308b\n\n\nse.statistics.iowait_count\n\u56de\u6570\n\u30bf\u30b9\u30af\u304cI/O\u5f85\u3061\u72b6\u614b\u306b\u306a\u3063\u305f\u56de\u6570\n\n\n\nse.nr_migrations\n\u56de\u6570\n\u30bf\u30b9\u30af\u304c\u5b9f\u884c\u3055\u308c\u308bCPU\u3092\u79fb\u52d5\u3057\u305f\u56de\u6570\n\n\n\nse.statistics.nr_migrations_cold\n\u56de\u6570\n??\n\u73fe\u5728\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u307f\u305f\u3044\u3067\u3059\n\n\nse.statistics.nr_failed_migrations_affine\n\u56de\u6570\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3088\u3046\u3068\u3057\u305f\u304c\u3001\u30bf\u30b9\u30af\u306e\u30a2\u30d5\u30a3\u30cb\u30c6\u30a3\u30de\u30b9\u30af\u306b\u79fb\u52d5\u5148\u306eCPU\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u306b\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u5931\u6557\u3057\u305f\u56de\u6570\n\n\n\nse.statistics.nr_failed_migrations_running\n\u56de\u6570\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3088\u3046\u3068\u3057\u305f\u304c\u3001\u30bf\u30b9\u30af\u304c\u5b9f\u884c\u4e2d\u3067\u3042\u308b\u305f\u3081\u306b\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u5931\u6557\u3057\u305f\u56de\u6570\n\n\n\nse.statistics.nr_failed_migrations_hot\n\u56de\u6570\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3088\u3046\u3068\u3057\u305f\u304c\u3001\u30bf\u30b9\u30af\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u30db\u30c3\u30c8\u3068\u5224\u5b9a\u3055\u308c\u305f\u305f\u3081\u306b\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u5931\u6557\u3057\u305f\u56de\u6570\n\nsysctl \u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a sched_migration_cost \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30db\u30c3\u30c8\u306e\u5224\u5b9a\u57fa\u6e96\u3092\u5909\u66f4\u53ef\u80fd (sched_migration_cost \u306e\u8aac\u660e\u306f OpenSUSE \u306e\u30da\u30fc\u30b8\u53c2\u7167)\n\n\nse.statistics.nr_forced_migrations\n\u56de\u6570\n\u30bf\u30b9\u30af\u304c\u7121\u7406\u3084\u308a\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u305f\u56de\u6570\n\u4eca\u307e\u3067\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30c9\u30e1\u30a4\u30f3\u30ec\u30d9\u30eb\u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5931\u6557\u56de\u6570\u304c\u591a\u3044\u5834\u5408\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30db\u30c3\u30c8\u3067\u3042\u308b\u306b\u3082\u95a2\u308f\u3089\u305a\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b\n\n\nse.statistics.nr_wakeups\n\u56de\u6570\n\u30bf\u30b9\u30af\u304c\u30b9\u30ea\u30fc\u30d7\u30ad\u30e5\u30fc\u304b\u3089\u8d77\u5e8a\u3057\u305f\u56de\u6570\n\n\n\nse.statistics.nr_wakeups_sync\n\u56de\u6570\n??\n2.6\u7cfb\u30ab\u30fc\u30cd\u30eb\u3067\u306f\u95a2\u6570 __wake_up_sync() \u3092\u901a\u3063\u305f\u3089\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u3066\u305f\u307f\u305f\u3044\u3060\u3051\u3069\u30013.13\u7cfb\u4ee5\u964d\u3067\u306f\u898b\u5f53\u305f\u3089\u306a\u3044\u3002\n\n\nse.statistics.nr_wakeups_migrate\n\u56de\u6570\n\u30bf\u30b9\u30af\u8d77\u5e8a\u6642\u306b\u5143\u3044\u305fCPU\u3068\u306f\u7570\u306a\u308bCPU\u306e\u30e9\u30f3\u30ad\u30e5\u30fc\u306b\u3064\u306a\u3052\u3089\u308c\u305f\u56de\u6570\n\n\n\nse.statistics.nr_wakeups_local\n\u56de\u6570\n\u30bf\u30b9\u30af\u3092\u8d77\u5e8a\u3055\u305b\u305fCPU\u304c\u3001\u305d\u306e\u30bf\u30b9\u30af\u304c\u8d77\u5e8a\u4e88\u5b9a\u306eCPU\u3068\u540c\u3058\u3060\u3063\u305f\u56de\u6570\n\n\n\nse.statistics.nr_wakeups_remote\n\u56de\u6570\n\u30bf\u30b9\u30af\u3092\u8d77\u5e8a\u3055\u305b\u305fCPU\u304c\u3001\u305d\u306e\u30bf\u30b9\u30af\u304c\u8d77\u5e8a\u4e88\u5b9a\u306eCPU\u3068\u7570\u306a\u3063\u3066\u3044\u305f\u56de\u6570\n\n\n\nse.statistics.nr_wakeups_affine\n\u56de\u6570\n\u30bf\u30b9\u30af\u304c\u81ea\u5206\u306eCPU\u3067\u8d77\u5e8a\u3057\u305f\u56de\u6570\uff08\uff1f\uff09\n\u3053\u308c\u306f\u3082\u3046\u5c11\u3057\u3061\u3083\u3093\u3068\u30bd\u30fc\u30b9\u8aad\u307e\u306a\u3044\u3068\u5206\u304b\u3089\u306a\u3044\n\n\nse.statistics.nr_wakeups_affine_attempts\n\u56de\u6570\n\u30bf\u30b9\u30af\u304c\u81ea\u5206\u306eCPU\u3067\u8d77\u5e8a\u3057\u3088\u3046\u3068\u3057\u305f\u56de\u6570\uff08\uff1f\uff09\n\u540c\u4e0a\n\n\nse.statistics.nr_wakeups_passive\n\u56de\u6570\n??\n2.6\u7cfb\u30ab\u30fc\u30cd\u30eb\u3067\u306f\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30c9\u30e1\u30a4\u30f3\u5185\u306e\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b9\u306b\u3088\u308a\u53d7\u52d5\u7684\u306b\u8ca0\u8377\u5206\u6563\u306e\u305f\u3081\u306bCPU\u304c\u9078\u629e\u3055\u308c\u308b\u3089\u3057\u3044\u304c\u3001\u3088\u304f\u5206\u304b\u3063\u3066\u3044\u306a\u3044\u3002\u4eca\u306f\u4f7f\u308f\u308c\u3066\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u6df1\u304f\u8ffd\u3044\u304b\u3051\u308b\u306e\u306f\u3084\u3081\u308b\u3002\n\n\nse.statistics.nr_wakeups_idle\n\u56de\u6570\n??\n2.6\u7cfb\u30ab\u30fc\u30cd\u30eb\u3067\u306f\u95a2\u6570 wake_idle() \u3067\u9078\u629e\u3057\u305f\u8d77\u5e8a\u5148\u306eCPU\u304c\u30a2\u30a4\u30c9\u30eb\u72b6\u614b\u3067\u3042\u308c\u3070\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u3066\u3044\u305f\u3002\u73fe\u5728\u7279\u306b\u610f\u5473\u306f\u306a\u3044\u3088\u3046\u3060\u3002\n\n\navg_atom\n\u30ca\u30ce\u79d2\n\uff11\u56de\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30b9\u30a4\u30c3\u30c1\u304c\u884c\u308f\u308c\u308b\u9593\u306b\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u305f\u5e73\u5747\u6642\u9593\n\nsum_exec_runtime \u3092 nr_switches \u3067\u5272\u3063\u305f\u5024\u304c\u5165\u308b\u3002\u3082\u3057\u3001nr_switches == 0 \u306a\u3089 -1 \u3068\u306a\u308b\u3002\n\n\navg_per_cpu\n\u30ca\u30ce\u79d2\n\uff11\u3064\u306eCPU\u4e0a\u3067\u5b9f\u884c\u3055\u308c\u305f\u5e73\u5747\u6642\u9593\n\nsum_exec_runtime \u3092 nr_migrations \u3067\u5272\u3063\u305f\u5024\u304c\u5165\u308b\u3002\u3082\u3057\u3001nr_migrations == 0 \u306a\u3089 -1 \u3068\u306a\u308b\u3002\n\n\nnr_switches\n\u56de\u6570\n\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30b9\u30a4\u30c3\u30c1\u3092\u3057\u305f\u56de\u6570\n\nnr_voluntary_switches \u3068 nr_involuntary_switches \u306e\u5408\u8a08\u5024\n\n\nnr_voluntary_switches\n\u56de\u6570\n\u81ea\u767a\u7684\u306a\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30b9\u30a4\u30c3\u30c1\u306e\u56de\u6570\n\n\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e\u30ab\u30a6\u30f3\u30bf \u306b\u3082\u5c11\u3057\u8aac\u660e\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u3067\u3082\u3001\u4eca\u306e\u6700\u65b0\u306e\u30ab\u30fc\u30cd\u30eb (Linux-4.6\u7cfb) \u307f\u308b\u3068\u30d7\u30ea\u30a8\u30f3\u30d7\u30b7\u30e7\u30f3\u3057\u3066\u3044\u308b\u304b\u5426\u304b\u3067 voluntary \u304b involuntary \u3092\u6c7a\u3081\u3066\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\n\nnr_involuntary_switches\n\u56de\u6570\n\u975e\u81ea\u767a\u7684\u306a\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30b9\u30a4\u30c3\u30c1\u306e\u56de\u6570\n\u540c\u4e0a\n\n\nse.load.weight\n\u6574\u6570\u5024\n\u512a\u5148\u5ea6\u306b\u5fdc\u3058\u305f\u91cd\u307f\n\nkernel/sched/sched.h \u306e\u914d\u5217 prio_to_weight \u306bnice\u5024\u306b\u5fdc\u3058\u305f\u91cd\u307f\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\n\n\nse.avg.runnable_avg_sum\n??\n??\n\u3069\u3046\u3084\u3089\u904e\u53bb\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u60c5\u5831\u3092\u5143\u306b\u91cd\u307f\u8a08\u7b97\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3002\u3069\u3046\u305b\u3053\u3093\u306a\u7d30\u304b\u3044\u6240\u306f\u3059\u3050\u4fee\u6b63\u3055\u308c\u308b\u3060\u308d\u3046\u306a\u3068\u601d\u3063\u305f\u3089\u3001\u3084\u3063\u3071\u308a linux-4.6 \u3067\u8de1\u5f62\u3082\u7121\u304f\u6d88\u3048\u3066\u305f\u3002\u3068\u306f\u8a00\u3048\u3001\u307e\u305f\u4f3c\u305f\u3088\u3046\u306a\u5225\u306e\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u308b\u306e\u3067\u5f8c\u3067\u52c9\u5f37\u3057\u3088\u3002\n\n\nse.avg.runnable_avg_period\n??\n??\n\u540c\u4e0a\n\n\nse.avg.load_avg_contrib\n??\n??\n\u540c\u4e0a\n\n\nse.avg.decay_count\n??\n??\n\u540c\u4e0a\n\n\npolicy\n\u6570\u5024\n\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u30dd\u30ea\u30b7\u30fc\n\u3069\u3093\u306a\u30dd\u30ea\u30b7\u30fc\u304c\u3042\u308b\u304b\u306f include/uapi/linux/sched.h \u306b\u5b9a\u7fa9\u3057\u3066\u3042\u308b \"Scheduling policies\" \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\n\n\n\nprio\n0\u301c139\u306e\u5024\n\u30bf\u30b9\u30af\u306e\u512a\u5148\u5ea6\nRT\u30bf\u30b9\u30af\u306f 0 \u301c 99\u3001CFS\u30af\u30e9\u30b9\u306f 100 \u301c 139 \u306e\u5024\u3002nice\u5024\u306f -20 \u301c 19 \u306e\u7bc4\u56f2\u3067\u52d5\u304b\u305b\u308b\u304c\u3001CFS\u30af\u30e9\u30b9\u306e\u512a\u5148\u5ea6\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c 120 \u306a\u306e\u3067\u3001120 + nice \u304c\u30ab\u30fc\u30cd\u30eb\u5185\u3067\u4f7f\u308f\u308c\u308b (CFS\u30af\u30e9\u30b9\u306e) \u30bf\u30b9\u30af\u306e\u512a\u5148\u5ea6\u3002\n\n\nclock-delta\n\u30ca\u30ce\u79d2\n\u30bf\u30b9\u30af\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308bCPU\u4e0a\u3067\u3001\u9023\u7d9a\u3057\u3066 cpu_clock() \u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u306e\u6642\u9593\u5dee\nCPU\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u4f9d\u5b58\u3002\u306a\u3093\u306e\u305f\u3081\u306b\u3053\u3093\u306a\u6642\u9593\u8a08\u6e2c\u3057\u3066\u308b\u3093\u3060\u308d\u3046\u304b\u3002\n\n\n\n##`/proc/<pid>/sched` \u306e\u4e2d\u8eab\n[proc\u306eman\u30de\u30cb\u30e5\u30a2\u30eb](https://linuxjm.osdn.jp/html/LDP_man-pages/man5/proc.5.html)\u306b\u66f8\u3044\u3066\u306a\u304b\u3063\u305f\u306e\u3067\u4eca\u307e\u3067\u5168\u7136\u6c17\u3065\u3044\u3066\u3044\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u4fbf\u5229\u306a\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u7d71\u8a08\u60c5\u5831\u3092\u30e6\u30fc\u30b6\u304c\u7c21\u5358\u306b\u898b\u308c\u308b\u3053\u3068\u3092\u6700\u8fd1\u77e5\u308a\u307e\u3057\u305f\u3002`/proc/<pid>/sched` \u3067\u3059\u3002\n\nUbuntu 14.04 \u3067 `pid=1` \u306e `init` \u30bf\u30b9\u30af\u306e\u7d71\u8a08\u60c5\u5831\u3092\u898b\u3066\u307f\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n$ cat /etc/os-release \nNAME=\"Ubuntu\"\nVERSION=\"14.04.4 LTS, Trusty Tahr\"\nID=ubuntu\nID_LIKE=debian\nPRETTY_NAME=\"Ubuntu 14.04.4 LTS\"\nVERSION_ID=\"14.04\"\nHOME_URL=\"http://www.ubuntu.com/\"\nSUPPORT_URL=\"http://help.ubuntu.com/\"\nBUG_REPORT_URL=\"http://bugs.launchpad.net/ubuntu/\"\n$ cat /proc/1/sched\ninit (1, #threads: 1)\n-------------------------------------------------------------------\nse.exec_start                                :     176686992.984163\nse.vruntime                                  :           691.937721\nse.sum_exec_runtime                          :          2342.115314\nse.statistics.wait_start                     :             0.000000\nse.statistics.sleep_start                    :     176686992.984163\nse.statistics.block_start                    :             0.000000\nse.statistics.sleep_max                      :      14095966.363585\nse.statistics.block_max                      :          4216.956618\nse.statistics.exec_max                       :            20.227471\nse.statistics.slice_max                      :            40.150588\nse.statistics.wait_max                       :            10.753266\nse.statistics.wait_sum                       :           373.022241\nse.statistics.wait_count                     :                13537\nse.statistics.iowait_sum                     :          1696.874333\nse.statistics.iowait_count                   :                  637\nse.nr_migrations                             :                 1082\nse.statistics.nr_migrations_cold             :                    0\nse.statistics.nr_failed_migrations_affine    :                    0\nse.statistics.nr_failed_migrations_running   :                  976\nse.statistics.nr_failed_migrations_hot       :                  325\nse.statistics.nr_forced_migrations           :                    1\nse.statistics.nr_wakeups                     :                 6493\nse.statistics.nr_wakeups_sync                :                 4405\nse.statistics.nr_wakeups_migrate             :                 1046\nse.statistics.nr_wakeups_local               :                 1244\nse.statistics.nr_wakeups_remote              :                 5249\nse.statistics.nr_wakeups_affine              :                  261\nse.statistics.nr_wakeups_affine_attempts     :                 1197\nse.statistics.nr_wakeups_passive             :                    0\nse.statistics.nr_wakeups_idle                :                    0\navg_atom                                     :             0.174264\navg_per_cpu                                  :             2.164616\nnr_switches                                  :                13440\nnr_voluntary_switches                        :                 6474\nnr_involuntary_switches                      :                 6966\nse.load.weight                               :                 1024\nse.avg.runnable_avg_sum                      :                  466\nse.avg.runnable_avg_period                   :                47841\nse.avg.load_avg_contrib                      :                    0\nse.avg.decay_count                           :            168501848\npolicy                                       :                    0\nprio                                         :                  120\nclock-delta                                  :                  201\n```\n\n\u4f55\u3084\u3089\u8272\u3093\u306a\u60c5\u5831\u304c\u51fa\u3066\u307e\u3059\u306d\u3002\u3053\u308c\u3092\u898b\u308c\u3070\u3001\u7c21\u5358\u306b\u30bf\u30b9\u30af\u304cCPU\u4e0a\u3067\u5b9f\u884c\u3057\u3066\u3044\u305f\u6642\u9593\u3068\u304b\u3001\u4f55\u56de\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30b9\u30a4\u30c3\u30c1\u3092\u3057\u305f\u304b\u3001\u30bf\u30b9\u30af\u306e\u30b9\u30ea\u30fc\u30d7\u6642\u9593\u30fb\u8d77\u5e8a\u56de\u6570\u306a\u3069\u304c\u308f\u304b\u308a\u305d\u3046\u3067\u3059\u3002\n\u6b63\u78ba\u306b\u306f `/proc/<pid>/sched` \u306f\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7\u30ea\u30fc\u30c0\u306e\u60c5\u5831\u306a\u306e\u3067\u3001\u305d\u306e\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7\u306b\u5c5e\u3059\u308b\u5404\u30b9\u30ec\u30c3\u30c9\u306e\u60c5\u5831\u3092\u898b\u308b\u306b\u306f `/proc/<tgid>/task/<tid>/sched` \u3092\u898b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059 (***tgid*** \u306f\u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7ID\u3001***tid*** \u306f\u30b9\u30ec\u30c3\u30c9ID\u306e\u610f\u5473)\u3002\n\n\u540d\u524d\u304b\u3089\u60f3\u50cf\u306f\u3067\u304d\u305d\u3046\u3067\u3059\u304c\u3001\u307e\u305a\u3001\u305d\u3082\u305d\u3082\u3069\u3046\u3084\u3063\u3066\u3053\u306e\u60c5\u5831\u3092\u8868\u793a\u3057\u3066\u3044\u308b\u304b  `procfs` \u306e\u51e6\u7406\u306e\u4e2d\u8eab\u3092\u8efd\u304f\u8ffd\u3044\u304b\u3051\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u30ab\u30fc\u30cd\u30eb\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3068\u304d\u306f\u3001\u307e\u305a\u5927\u96d1\u628a\u306b\u63a8\u6e2c\u3059\u308b\u306e\u304c\u4e00\u756a\u826f\u3044\u304b\u306a\u3068\u3002\u7d30\u304b\u3044\u6240\u3070\u304b\u308a\u8ffd\u3046\u3068\u3001\u3044\u3064\u307e\u3067\u7d4c\u3063\u3066\u3082\u8abf\u67fb\u304c\u7d42\u308f\u3089\u306a\u3044\u5834\u5408\u304c\u591a\u3044\u306e\u3067\u30fb\u30fb\u30fb\u3002\n\n\u30ab\u30fc\u30cd\u30eb\u306e\u4e2d\u8eab\u306a\u3093\u3066\u898b\u305f\u304f\u306a\u3044\u4eba\u306b\u3068\u3063\u3066\u306f\u3001[\u5404\u7d71\u8a08\u60c5\u5831\u306e\u610f\u5473](#\u5404\u7d71\u8a08\u60c5\u5831\u306e\u610f\u5473)\u3060\u3051\u8aad\u3093\u3067\u3044\u305f\u3060\u3051\u308c\u3070\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3061\u3087\u3063\u3068\u30ab\u30fc\u30cd\u30eb\u5185\u90e8\u3092\u8ffd\u3044\u304b\u3051\u305f\u3044\u4eba\u306f\u3001\u5404\u7d71\u8a08\u60c5\u5831\u306e\u6587\u5b57\u5217\u3092\u30ab\u30fc\u30cd\u30eb\u30bd\u30fc\u30b9\u304b\u3089\u691c\u7d22\u3059\u308c\u3070\u3001\u3069\u3046\u3044\u3046\u51e6\u7406\u3067\u3069\u3046\u30ab\u30a6\u30f3\u30c8\u3057\u3066\u308b\u304b\u304c\u308f\u304b\u3063\u3066Linux\u306e\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e\u6982\u8981\u304c\u7406\u89e3\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n#`/proc/<pid>/sched` \u3092 open(2) \u3057\u305f\u6642\u306e\u30ab\u30fc\u30cd\u30eb\u51e6\u7406\n[`pid_entry` \u69cb\u9020\u4f53\u306e\u914d\u5217 `tgid_base_stuff`](http://lxr.free-electrons.com/source/fs/proc/base.c?v=3.13#L2571) \u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```:linux-3.13/fs/proc/base.c\n2571 static const struct pid_entry tgid_base_stuff[] = {\n2572         DIR(\"task\",       S_IRUGO|S_IXUGO, proc_task_inode_operations, proc_task_operations),\n2573         DIR(\"fd\",         S_IRUSR|S_IXUSR, proc_fd_inode_operations, proc_fd_operations),\n2574 #ifdef CONFIG_CHECKPOINT_RESTORE\n2575         DIR(\"map_files\",  S_IRUSR|S_IXUSR, proc_map_files_inode_operations, proc_map_files_operations),\n2576 #endif\n2577         DIR(\"fdinfo\",     S_IRUSR|S_IXUSR, proc_fdinfo_inode_operations, proc_fdinfo_operations),\n2578         DIR(\"ns\",         S_IRUSR|S_IXUGO, proc_ns_dir_inode_operations, proc_ns_dir_operations),\n2579 #ifdef CONFIG_NET\n2580         DIR(\"net\",        S_IRUGO|S_IXUGO, proc_net_inode_operations, proc_net_operations),\n2581 #endif\n2582         REG(\"environ\",    S_IRUSR, proc_environ_operations),\n2583         INF(\"auxv\",       S_IRUSR, proc_pid_auxv),\n2584         ONE(\"status\",     S_IRUGO, proc_pid_status),\n2585         ONE(\"personality\", S_IRUGO, proc_pid_personality),\n2586         INF(\"limits\",     S_IRUGO, proc_pid_limits),\n2587 #ifdef CONFIG_SCHED_DEBUG\n2588         REG(\"sched\",      S_IRUGO|S_IWUSR, proc_pid_sched_operations),\n2589 #endif\n\u30fb\u30fb\u30fb\uff08\u7701\u7565\uff09\u30fb\u30fb\u30fb\n```\n\n\u5185\u90e8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u8981\u7d20\u3068\u30e1\u30f3\u30d0\u3092\u773a\u3081\u308b\u3068\u3001`/proc/<pid>` \u914d\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u306b\u4e00\u81f4\u3059\u308b\u6587\u5b57\u5217\u304c `DIR()` \u3084 `REG()` \u306a\u3069\u306e\u7b2c\u4e00\u5f15\u6570\u306b\u4e26\u3093\u3067\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u3001\u6050\u3089\u304f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f `DIR()`\u3001\u901a\u5e38\u30d5\u30a1\u30a4\u30eb (regular file) \u306f `REG()` \u3067\u8868\u73fe\u3055\u308c\u3066\u3066\u3001`pid_entry` \u69cb\u9020\u4f53\u3092\u826f\u3044\u611f\u3058\u3067\u5b9a\u7fa9\u3059\u308c\u3070 `procfs` \u4f5c\u308c\u308b\u3093\u3060\u308d\u3046\u306a\u3068\u60f3\u50cf\u3067\u304d\u307e\u3059\u3002\n\n\u7b2c\u4e8c\u5f15\u6570\u306b\u3042\u308b `S_XXXXX` \u306f\u30a2\u30af\u30bb\u30b9\u6a29\u306e\u8a2d\u5b9a\u3067\u3059\u306d\u3002\u3053\u306e\u5b9a\u7fa9\u306f [include/uapi/linux/stat.h](http://lxr.free-electrons.com/source/include/uapi/linux/stat.h?v=3.13) \u306b\u66f8\u3044\u3066\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u3092\u5909\u66f4\u3059\u308b `chmod` \u30b3\u30de\u30f3\u30c9\u3067\u5f15\u6570\u306b\u6e21\u3059 `mode` \u3068\u540c\u3058\u611f\u3058\u3067\u3059\u3057\u3001[stat(2) \u306e man \u30de\u30cb\u30e5\u30a2\u30eb\u306b\u3082\u66f8\u3044\u3066\u304f\u308c\u3066\u307e\u3059](https://linuxjm.osdn.jp/html/LDP_man-pages/man2/stat.2.html)\u3002\n`ls -l /proc/<pid>` \u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3068`tgid_base_stuff` \u306e\u30e1\u30f3\u30d0\u3068\u3092\u6bd4\u8f03\u3059\u308b\u3068\u3001\u8a2d\u5b9a\u901a\u308a\u306b\u30a2\u30af\u30bb\u30b9\u6a29\u304c\u53cd\u6620\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n```:linux-3.13/include/uapi/linux/stat.h\n 27 #define S_IRWXU 00700\n 28 #define S_IRUSR 00400\n 29 #define S_IWUSR 00200\n 30 #define S_IXUSR 00100\n 31 \n 32 #define S_IRWXG 00070\n 33 #define S_IRGRP 00040\n 34 #define S_IWGRP 00020\n 35 #define S_IXGRP 00010\n 36 \n 37 #define S_IRWXO 00007\n 38 #define S_IROTH 00004\n 39 #define S_IWOTH 00002\n 40 #define S_IXOTH 00001\n```\n\n\u4eca\u56de\u8ffd\u3044\u305f\u3044\u306e\u306f `/proc/<pid>/sched` \u306a\u306e\u3067\u3001\u3053\u306e\u5b9a\u7fa9\u3060\u3051\u7740\u76ee\u3057\u307e\u3057\u3087\u3046\u3002\u3053\u306e\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u306b\u306f\u3001\u30ab\u30fc\u30cd\u30eb\u30b3\u30f3\u30d5\u30a3\u30b0 `CONFIG_SCHED_DEBUG=y` \u306b\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002Ubuntu \u306f\u30c7\u30d5\u30a9\u30eb\u30c8 `y` \u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\n```\n2587 #ifdef CONFIG_SCHED_DEBUG\n2588         REG(\"sched\",      S_IRUGO|S_IWUSR, proc_pid_sched_operations),\n2589 #endif\n```\n\n\u7b2c\u4e09\u5f15\u6570\u306b\u306f [`file_operations` \u69cb\u9020\u4f53](http://lxr.free-electrons.com/source/include/linux/fs.h?v=3.13#L1521)\u3092\u6307\u5b9a\u3057\u3066\u3066\u3001\u3053\u308c\u306f\u30d5\u30a1\u30a4\u30eb\u306e\u64cd\u4f5c\u306b\u5bfe\u3059\u308b\u30cf\u30f3\u30c9\u30e9\u3092\u5b9a\u7fa9\u3059\u308b\u69cb\u9020\u4f53\u307f\u305f\u3044\u306a\u3082\u306e\u3002\u4f8b\u3048\u3070\u3001`/proc/<pid>/sched` \u3092\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb `open(2)` \u3067\u30d5\u30a1\u30a4\u30eb\u30aa\u30fc\u30d7\u30f3\u3057\u305f\u5834\u5408\u3001`file_operations.open()` \u306b\u767b\u9332\u3055\u308c\u305f\u30cf\u30f3\u30c9\u30e9\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n`/proc/<pid>/sched` \u306b\u5bfe\u3059\u308b\u69cb\u9020\u4f53\u540d\u304c `proc_pid_sched_operations` \u306a\u306e\u3067\u3001\u6697\u9ed9\u306e\u547d\u540d\u898f\u5247\u3082\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\n\u6b21\u306f\u3001[`proc_pid_sched_operations` \u306e\u4e2d\u8eab](http://lxr.free-electrons.com/source/fs/proc/base.c?v=3.13#L1297)\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n```:linux-3.13/fs/proc/base.c\n1297 static const struct file_operations proc_pid_sched_operations = {\n1298         .open           = sched_open,\n1299         .read           = seq_read,\n1300         .write          = sched_write,\n1301         .llseek         = seq_lseek,\n1302         .release        = single_release,\n1303 };\n```\n\n\u8272\u3005\u306a\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u306b\u5bfe\u3057\u3066\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304c\u4ee3\u5165\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u3067\u8ffd\u3046\u306e\u306f `.open` \u306b\u4ee3\u5165\u3055\u308c\u305f `sched_open` \u3067\u3059\u3002\n\n```:linux-3.13/fs/proc/base.c\n1405 static int sched_open(struct inode *inode, struct file *filp)\n1406 {\n1407         return single_open(filp, sched_show, inode);\n1408 }\n```\n\n```:linux-3.13/fs/seq_file.c\n564 int single_open(struct file *file, int (*show)(struct seq_file *, void *),\n565                 void *data)\n566 {\n567         struct seq_operations *op = kmalloc(sizeof(*op), GFP_KERNEL);\n568         int res = -ENOMEM;\n569 \n570         if (op) {\n571                 op->start = single_start;\n572                 op->next = single_next;\n573                 op->stop = single_stop;\n574                 op->show = show;\n575                 res = seq_open(file, op);\n576                 if (!res)\n577                         ((struct seq_file *)file->private_data)->private = data;\n578                 else\n579                         kfree(op);\n580         }\n581         return res;\n582 }\n583 EXPORT_SYMBOL(single_open);\n```\n\n\u3053\u3053\u3067\u3001`seq_file` \u306e\u4ed5\u7d44\u307f\u3092\u77e5\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001[\u300c\u3068\u307f\u305e\u30fc\u30ce\u30fc\u30c8\uff1aprocfs \u3092\u4f7f\u3063\u305f\u30ab\u30fc\u30cd\u30eb\u60c5\u5831\u306e\u8868\u793a \u305d\u306e2\u300d](http://wiki.bit-hive.com/tomizoo/pg/proc%20fs%20%A4%F2%BB%C8%A4%C3%A4%BF%A5%AB%A1%BC%A5%CD%A5%EB%BE%F0%CA%F3%A4%CE%C9%BD%BC%A8%20%A4%BD%A4%CE2)\u3067\u8a73\u3057\u304f\u8aac\u660e\u3057\u3066\u3042\u308b\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\u6700\u7d42\u7684\u306b\u306f `sched_show()` \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u3001\u3088\u3046\u3084\u304f\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u7d71\u8a08\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\u51e6\u7406\u304c\u51fa\u3066\u304f\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n```:linux-3.13/fs/proc/base.c\n1257 /*\n1258  * Print out various scheduling related per-task fields:\n1259  */\n1260 static int sched_show(struct seq_file *m, void *v)\n1261 {\n1262         struct inode *inode = m->private;\n1263         struct task_struct *p;\n1264 \n1265         p = get_proc_task(inode);\n1266         if (!p)\n1267                 return -ESRCH;\n1268         proc_sched_show_task(p, m);\n1269 \n1270         put_task_struct(p);\n1271 \n1272         return 0;\n1273 }\n```\n\n`seq_file->private` \u306b\u683c\u7d0d\u3057\u3066\u3044\u305f `inode` \u304b\u3089 `get_proc_task()` \u3067 `task_struct` \u69cb\u9020\u4f53\u3092\u6301\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u6ce8\u610f\u3059\u308b\u3053\u3068\u306f\u3001\u3053\u306e\u4e00\u9023\u306e\u51e6\u7406\u4e2d\u306b `task_struct` \u306e\u60c5\u5831\u304c\u6d88\u3048\u308b (\u4f8b\u3048\u3070\u3001\u30bf\u30b9\u30af\u304c `exit()` \u3059\u308b) \u3068NULL\u30dd\u30a4\u30f3\u30bf\u30a2\u30af\u30bb\u30b9\u304c\u767a\u751f\u3057\u305f\u308a\u56f0\u3063\u305f\u3053\u3068\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u305d\u3053\u3067\u3001\u4f55\u304b\u3057\u3089\u4fdd\u8b77\u3059\u308b\u4ed5\u7d44\u307f\u304c\u5fc5\u8981\u3067\u3001\u305d\u308c\u304c `get_task_struct()`, `put_task_struct()` \u306e\u51e6\u7406\u3092\u5165\u308c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u4e0a\u8a18\u306e `sched_show()` \u3067\u306f\u3001 `get_proc_task()` \u306e\u5ef6\u9577\u3067 `get_task_struct()` \u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30e1\u30a4\u30f3\u51e6\u7406\u306e `proc_sched_show_task()` \u5b9f\u884c\u4e2d\u306f\u3001\u4e2d\u8eab\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u5bfe\u8c61\u306e `task_struct` \u304c\u4fdd\u8b77\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u4fdd\u8b77\u306e\u4ed5\u7d44\u307f\u81ea\u4f53\u306f\u9577\u304f\u306a\u308b\u306e\u3067\u3053\u3053\u3067\u306f\u5272\u611b\u3002\n\n[\u30e1\u30a4\u30f3\u51e6\u7406 `proc_sched_show_task()`](http://lxr.free-electrons.com/source/kernel/sched/debug.c?v=3.13#L553) \u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066 `printf` \u3057\u3066\u3044\u307e\u3059\u306d\u3002`CONFIG_SCHEDSTATS=y` \u3068\u306a\u3063\u3066\u3044\u308c\u3070\u3001\u8c4a\u5bcc\u306a\u60c5\u5831\u304c\u5f97\u3089\u308c\u305d\u3046\u3067\u3059\u3002\u3053\u308c\u3067\u51fa\u529b\u7b87\u6240\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u3001\u30ab\u30fc\u30cd\u30eb\u306e\u4e2d\u8eab\u3092\u8ffd\u3044\u304b\u3051\u308b\u306e\u306f\u3053\u3093\u306a\u3068\u3053\u308d\u3067\u304a\u7d42\u3044\u3002\n\n```:linux-3.13/kernel/sched/debug.c\n553 void proc_sched_show_task(struct task_struct *p, struct seq_file *m)\n554 {\n555         unsigned long nr_switches;\n556 \n557         SEQ_printf(m, \"%s (%d, #threads: %d)\\n\", p->comm, task_pid_nr(p),\n558                                                 get_nr_threads(p));\n559         SEQ_printf(m,\n560                 \"---------------------------------------------------------\"\n561                 \"----------\\n\");\n562 #define __P(F) \\\n563         SEQ_printf(m, \"%-45s:%21Ld\\n\", #F, (long long)F)\n564 #define P(F) \\\n565         SEQ_printf(m, \"%-45s:%21Ld\\n\", #F, (long long)p->F)\n566 #define __PN(F) \\\n567         SEQ_printf(m, \"%-45s:%14Ld.%06ld\\n\", #F, SPLIT_NS((long long)F))\n568 #define PN(F) \\\n569         SEQ_printf(m, \"%-45s:%14Ld.%06ld\\n\", #F, SPLIT_NS((long long)p->F))\n570 \n571         PN(se.exec_start);\n572         PN(se.vruntime);\n573         PN(se.sum_exec_runtime);\n574 \n575         nr_switches = p->nvcsw + p->nivcsw;\n576 \n577 #ifdef CONFIG_SCHEDSTATS\n578         PN(se.statistics.wait_start);\n\n\u30fb\u30fb\u30fb\uff08\u7701\u7565\uff09\u30fb\u30fb\u30fb\n\n653                 SEQ_printf(m, \"%-45s:%21Ld\\n\",\n654                            \"clock-delta\", (long long)(t1-t0));\n655         }\n656 \n657         sched_show_numa(p, m);\n658 }\n```\n\n#\u5404\u7d71\u8a08\u60c5\u5831\u306e\u610f\u5473\n\u5206\u304b\u308b\u7bc4\u56f2\u3067\u7d71\u8a08\u60c5\u5831\u3092\u4ee5\u4e0b\u306b\u307e\u3068\u3081\u307e\u3059\u3002Linux-3.13\u306e\u30bd\u30fc\u30b9\u3092\u898b\u3066\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u6700\u65b0\u30ab\u30fc\u30cd\u30eb\u3067\u306f\u7570\u306a\u3063\u3066\u3044\u308b\u7b87\u6240\u304c\u3042\u308a\u3001\u305d\u306e\u70b9\u3082\u6c17\u3065\u3044\u305f\u3089\u8ffd\u8a18\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3084\u30bf\u30b9\u30af\u8d77\u5e8a\u95a2\u4fc2\u306e\u7d71\u8a08\u60c5\u5831\u306f\u3053\u3093\u306a\u306b\u7d30\u304b\u3044\u306e\u5fc5\u8981\uff1f\u3063\u3066\u611f\u3058\u306e\u3082\u306e\u304c\u591a\u3044\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u30bf\u30b9\u30af\u306e\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u6027\u80fd\u3092\u6c17\u306b\u3057\u305f\u308a\u3001\u30b7\u30b9\u30c6\u30e0\u306e\u51e6\u7406\u306b\u3069\u308c\u3060\u3051\u90aa\u9b54\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u78ba\u8a8d\u3057\u305f\u3044\u6642\u306f\u5f79\u306b\u7acb\u3064\u6642\u304c\u6765\u308b\u304b\u3082\u3002\n\n| \u9805\u76ee | \u5358\u4f4d | \u610f\u5473 | \u5099\u8003 |\n|:---|:---|:---|:---|\n| se.exec_start | \u30ca\u30ce\u79d2 | \u30bf\u30b9\u30af\u304cCPU\u4e0a\u3067\u5b9f\u884c\u958b\u59cb\u3057\u305f\u6642\u523b | OS\u8d77\u52d5\u3057\u305f\u6642\u523b\u3092 0.0 \u3068\u3057\u3066\u3044\u308b\u306f\u305a |\n| se.vruntime | \u30ca\u30ce\u79d2 | \u30bf\u30b9\u30af\u304cCPU\u4e0a\u3067\u5b9f\u884c\u3057\u305f\u4eee\u60f3\u7684\u306a\u6642\u9593 | \u5b9f\u6642\u9593\u3092\u6b63\u898f\u5316\uff08\u91cd\u307f\u4ed8\u3051\uff09\u3057\u305f\u6642\u9593\u3067\u3001nice\u5024\u3092\u5909\u66f4\u3057\u3066\u3044\u308c\u3070\u5b9f\u6642\u9593\u3068\u7570\u306a\u308b\u5024\u306b\u306a\u3063\u3066\u304f\u308b (RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0) |\n| se.sum_exec_runtime | \u30ca\u30ce\u79d2 | \u30bf\u30b9\u30af\u304cCPU\u4e0a\u3067\u5b9f\u884c\u3057\u305f\u5408\u8a08\uff08\u5b9f\uff09\u6642\u9593 |  |\n| se.statistics.wait_start | \u30ca\u30ce\u79d2 | \u30bf\u30b9\u30af\u304c\u30e9\u30f3\u30ad\u30e5\u30fc\u304b\u3089\u5916\u308c\u305f\u72b6\u614b\u304b\u3089\u3001\u30e9\u30f3\u30ad\u30e5\u30fc\u306b\u8ffd\u52a0\u3055\u308c\u305f\u6642\u523b\uff08**\u6ce8**\uff1a\u672c\u5f53\u306b\u6b63\u3057\u3044\u304b\u4e0d\u5b89\u306a\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u8abf\u3079\u308b\u5fc5\u8981\u3042\u308a\uff09 | \u30bf\u30b9\u30af\u304c\u30e9\u30f3\u30ad\u30e5\u30fc\u304b\u3089\u5916\u3055\u308c\u305f\uff08\u30c7\u30ad\u30e5\u30fc\uff09\u6642\u306f 0.0 \u306b\u306a\u308b\u306e\u3067\u3001\u30b9\u30ea\u30fc\u30d7\u4e2d\u306f\u305a\u3063\u3068 0.0 (RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0) |\n| se.statistics.sleep_start | \u30ca\u30ce\u79d2 | \u30bf\u30b9\u30af\u304c\u30b9\u30ea\u30fc\u30d7\u72b6\u614b (TASK_INTERRUPTIBLE) \u306b\u306a\u3063\u305f\u6642\u523b | \u8d77\u5e8a\u3059\u308b\u3068\u304d\u306b 0.0 \u306b\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b (RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0) |\n| se.statistics.block_start | \u30ca\u30ce\u79d2 | \u30bf\u30b9\u30af\u304c\u30d6\u30ed\u30c3\u30af\u72b6\u614b (TASK_UNINTERRUPTIBLE) \u306b\u306a\u3063\u305f\u6642\u523b | (RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0) |\n| se.statistics.sleep_max | \u30ca\u30ce\u79d2 | \u30bf\u30b9\u30af\u304c\u30b9\u30ea\u30fc\u30d7\u72b6\u614b (TASK_INTERRUPTIBLE) \u3068\u306a\u3063\u3066\u3044\u305f\u6700\u9577\u6642\u9593 |  (RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0) |\n| se.statistics.block_max | \u30ca\u30ce\u79d2 | \u30bf\u30b9\u30af\u304c\u30d6\u30ed\u30c3\u30af\u72b6\u614b (TASK_UNINTERRUPTIBLE) \u3068\u306a\u3063\u3066\u3044\u305f\u6700\u9577\u6642\u9593 |  (RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0) |\n| se.statistics.exec_max | \u30ca\u30ce\u79d2 | \u30bf\u30b9\u30af\u304cCPU\u4e0a\u3067\u5b9f\u884c\u3057\u3066\u3044\u305f\u6700\u9577\u6642\u9593 |  |\n| se.statistics.slice_max | \u30ca\u30ce\u79d2 | \u524d\u56de\u306e\u5b9f\u884c\u6642\u9593\u6700\u5927\u5024\u3068\u73fe\u5728\u306e\u5b9f\u884c\u6642\u9593\u6700\u5927\u5024 (`sum_exec_runtime`) \u3068\u306e\u5dee\u5206 | \u30e9\u30f3\u30ad\u30e5\u30fc\u306e\u8ca0\u8377\u304c\u30bf\u30b9\u30af\u306e\u8ca0\u8377\u306e\uff12\u500d\u4ee5\u4e0a\u306b\u306a\u3063\u305f\u6642\u3060\u3051 `slice_max` \u3092\u66f4\u65b0\u3057\u3088\u3046\u3068\u3059\u308b (RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0) |\n| se.statistics.wait_max | \u30ca\u30ce\u79d2 | \u30bf\u30b9\u30af\u304c\u30e9\u30f3\u30ad\u30e5\u30fc\u304b\u3089\u5916\u308c\u3066\u3044\u305f\u6700\u5927\u6642\u9593\uff08**\u6ce8**\uff1a\u672c\u5f53\u306b\u6b63\u3057\u3044\u304b\u4e0d\u5b89\u306a\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u8abf\u3079\u308b\u5fc5\u8981\u3042\u308a\uff09 |  (RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0) |\n| se.statistics.wait_sum | \u30ca\u30ce\u79d2 | \u30bf\u30b9\u30af\u304c\u30e9\u30f3\u30ad\u30e5\u30fc\u304b\u3089\u5916\u308c\u3066\u3044\u305f\u5408\u8a08\u6642\u9593\uff08**\u6ce8**\uff1a\u672c\u5f53\u306b\u6b63\u3057\u3044\u304b\u4e0d\u5b89\u306a\u306e\u3067\u3001\u3082\u3046\u5c11\u3057\u8abf\u3079\u308b\u5fc5\u8981\u3042\u308a\uff09 |  (RT\u30af\u30e9\u30b9\u306e\u30bf\u30b9\u30af\u306f\u5e38\u306b 0.0) |\n| se.statistics.wait_count | \u56de\u6570 | \u30bf\u30b9\u30af\u304c\u30e9\u30f3\u30ad\u30e5\u30fc\u304b\u3089\u5916\u308c\u305f\u56de\u6570 |  |\n| se.statistics.iowait_sum | \u30ca\u30ce\u79d2 | \u30bf\u30b9\u30af\u304cI/O\u5f85\u3061\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u5408\u8a08\u6642\u9593 | \u30ab\u30fc\u30cd\u30eb\u306e\u4e2d\u8eab\u3068\u3057\u3066\u306f\u3001`io_schedule()` \u3092\u547c\u3073\u51fa\u3057\u3066\u30b9\u30ea\u30fc\u30d7\u3057\u305f\u6642\u304b\u3089\u518d\u3073\u30e9\u30f3\u30ad\u30e5\u30fc\u306b\u8ffd\u52a0\uff08\u30a8\u30f3\u30ad\u30e5\u30fc\uff09\u3055\u308c\u308b\u6642\u307e\u3067\u304c\u30a2\u30ab\u30a6\u30f3\u30c6\u30a3\u30f3\u30b0\u3055\u308c\u308b |\n| se.statistics.iowait_count | \u56de\u6570 | \u30bf\u30b9\u30af\u304cI/O\u5f85\u3061\u72b6\u614b\u306b\u306a\u3063\u305f\u56de\u6570 |  |\n| se.nr_migrations | \u56de\u6570 | \u30bf\u30b9\u30af\u304c\u5b9f\u884c\u3055\u308c\u308bCPU\u3092\u79fb\u52d5\u3057\u305f\u56de\u6570 |  |\n| se.statistics.nr_migrations_cold | \u56de\u6570 | ?? | \u73fe\u5728\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u307f\u305f\u3044\u3067\u3059 |\n| se.statistics.nr_failed_migrations_affine | \u56de\u6570 | \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3088\u3046\u3068\u3057\u305f\u304c\u3001\u30bf\u30b9\u30af\u306e\u30a2\u30d5\u30a3\u30cb\u30c6\u30a3\u30de\u30b9\u30af\u306b\u79fb\u52d5\u5148\u306eCPU\u304c\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u306b\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u5931\u6557\u3057\u305f\u56de\u6570 |  |\n| se.statistics.nr_failed_migrations_running | \u56de\u6570 | \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3088\u3046\u3068\u3057\u305f\u304c\u3001\u30bf\u30b9\u30af\u304c\u5b9f\u884c\u4e2d\u3067\u3042\u308b\u305f\u3081\u306b\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u5931\u6557\u3057\u305f\u56de\u6570 |  |\n| se.statistics.nr_failed_migrations_hot | \u56de\u6570 | \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3088\u3046\u3068\u3057\u305f\u304c\u3001\u30bf\u30b9\u30af\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u30db\u30c3\u30c8\u3068\u5224\u5b9a\u3055\u308c\u305f\u305f\u3081\u306b\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u5931\u6557\u3057\u305f\u56de\u6570 | `sysctl` \u30b3\u30de\u30f3\u30c9\u306b\u3088\u308a `sched_migration_cost` \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30db\u30c3\u30c8\u306e\u5224\u5b9a\u57fa\u6e96\u3092\u5909\u66f4\u53ef\u80fd ([`sched_migration_cost` \u306e\u8aac\u660e\u306f OpenSUSE \u306e\u30da\u30fc\u30b8\u53c2\u7167](http://manual.geeko.cpon.org/ja/cha.tuning.taskscheduler.html)) |\n| se.statistics.nr_forced_migrations | \u56de\u6570 | \u30bf\u30b9\u30af\u304c\u7121\u7406\u3084\u308a\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u305f\u56de\u6570 | \u4eca\u307e\u3067\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30c9\u30e1\u30a4\u30f3\u30ec\u30d9\u30eb\u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u5931\u6557\u56de\u6570\u304c\u591a\u3044\u5834\u5408\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30db\u30c3\u30c8\u3067\u3042\u308b\u306b\u3082\u95a2\u308f\u3089\u305a\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308b |\n| se.statistics.nr_wakeups | \u56de\u6570 | \u30bf\u30b9\u30af\u304c\u30b9\u30ea\u30fc\u30d7\u30ad\u30e5\u30fc\u304b\u3089\u8d77\u5e8a\u3057\u305f\u56de\u6570 |  |\n| se.statistics.nr_wakeups_sync | \u56de\u6570 | ?? | 2.6\u7cfb\u30ab\u30fc\u30cd\u30eb\u3067\u306f\u95a2\u6570 `__wake_up_sync()` \u3092\u901a\u3063\u305f\u3089\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u3066\u305f\u307f\u305f\u3044\u3060\u3051\u3069\u30013.13\u7cfb\u4ee5\u964d\u3067\u306f\u898b\u5f53\u305f\u3089\u306a\u3044\u3002 |\n| se.statistics.nr_wakeups_migrate | \u56de\u6570 | \u30bf\u30b9\u30af\u8d77\u5e8a\u6642\u306b\u5143\u3044\u305fCPU\u3068\u306f\u7570\u306a\u308bCPU\u306e\u30e9\u30f3\u30ad\u30e5\u30fc\u306b\u3064\u306a\u3052\u3089\u308c\u305f\u56de\u6570 |  |\n| se.statistics.nr_wakeups_local | \u56de\u6570 | \u30bf\u30b9\u30af\u3092\u8d77\u5e8a\u3055\u305b\u305fCPU\u304c\u3001\u305d\u306e\u30bf\u30b9\u30af\u304c\u8d77\u5e8a\u4e88\u5b9a\u306eCPU\u3068\u540c\u3058\u3060\u3063\u305f\u56de\u6570 |  |\n| se.statistics.nr_wakeups_remote | \u56de\u6570 | \u30bf\u30b9\u30af\u3092\u8d77\u5e8a\u3055\u305b\u305fCPU\u304c\u3001\u305d\u306e\u30bf\u30b9\u30af\u304c\u8d77\u5e8a\u4e88\u5b9a\u306eCPU\u3068\u7570\u306a\u3063\u3066\u3044\u305f\u56de\u6570 |  |\n| se.statistics.nr_wakeups_affine | \u56de\u6570 | \u30bf\u30b9\u30af\u304c\u81ea\u5206\u306eCPU\u3067\u8d77\u5e8a\u3057\u305f\u56de\u6570\uff08\uff1f\uff09 | \u3053\u308c\u306f\u3082\u3046\u5c11\u3057\u3061\u3083\u3093\u3068\u30bd\u30fc\u30b9\u8aad\u307e\u306a\u3044\u3068\u5206\u304b\u3089\u306a\u3044 |\n| se.statistics.nr_wakeups_affine_attempts | \u56de\u6570 | \u30bf\u30b9\u30af\u304c\u81ea\u5206\u306eCPU\u3067\u8d77\u5e8a\u3057\u3088\u3046\u3068\u3057\u305f\u56de\u6570\uff08\uff1f\uff09 | \u540c\u4e0a |\n| se.statistics.nr_wakeups_passive | \u56de\u6570 | ?? | 2.6\u7cfb\u30ab\u30fc\u30cd\u30eb\u3067\u306f\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u30c9\u30e1\u30a4\u30f3\u5185\u306e\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b9\u306b\u3088\u308a\u53d7\u52d5\u7684\u306b\u8ca0\u8377\u5206\u6563\u306e\u305f\u3081\u306bCPU\u304c\u9078\u629e\u3055\u308c\u308b\u3089\u3057\u3044\u304c\u3001\u3088\u304f\u5206\u304b\u3063\u3066\u3044\u306a\u3044\u3002\u4eca\u306f\u4f7f\u308f\u308c\u3066\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u6df1\u304f\u8ffd\u3044\u304b\u3051\u308b\u306e\u306f\u3084\u3081\u308b\u3002 |\n| se.statistics.nr_wakeups_idle | \u56de\u6570 | ?? | 2.6\u7cfb\u30ab\u30fc\u30cd\u30eb\u3067\u306f\u95a2\u6570 `wake_idle()` \u3067\u9078\u629e\u3057\u305f\u8d77\u5e8a\u5148\u306eCPU\u304c\u30a2\u30a4\u30c9\u30eb\u72b6\u614b\u3067\u3042\u308c\u3070\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u3066\u3044\u305f\u3002\u73fe\u5728\u7279\u306b\u610f\u5473\u306f\u306a\u3044\u3088\u3046\u3060\u3002 |\n| avg_atom | \u30ca\u30ce\u79d2 | \uff11\u56de\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30b9\u30a4\u30c3\u30c1\u304c\u884c\u308f\u308c\u308b\u9593\u306b\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u305f\u5e73\u5747\u6642\u9593 | `sum_exec_runtime` \u3092 `nr_switches` \u3067\u5272\u3063\u305f\u5024\u304c\u5165\u308b\u3002\u3082\u3057\u3001`nr_switches == 0` \u306a\u3089 -1 \u3068\u306a\u308b\u3002 |\n| avg_per_cpu | \u30ca\u30ce\u79d2 | \uff11\u3064\u306eCPU\u4e0a\u3067\u5b9f\u884c\u3055\u308c\u305f\u5e73\u5747\u6642\u9593 | `sum_exec_runtime` \u3092 `nr_migrations` \u3067\u5272\u3063\u305f\u5024\u304c\u5165\u308b\u3002\u3082\u3057\u3001`nr_migrations == 0` \u306a\u3089 -1 \u3068\u306a\u308b\u3002 |\n| nr_switches | \u56de\u6570 | \u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30b9\u30a4\u30c3\u30c1\u3092\u3057\u305f\u56de\u6570 | `nr_voluntary_switches` \u3068 `nr_involuntary_switches` \u306e\u5408\u8a08\u5024 |\n| nr_voluntary_switches | \u56de\u6570 | \u81ea\u767a\u7684\u306a\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30b9\u30a4\u30c3\u30c1\u306e\u56de\u6570 | [\u30bf\u30b9\u30af\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306e\u30ab\u30a6\u30f3\u30bf](http://qiita.com/hikanda/items/b6d35ed3ffa3a2eddcc1) \u306b\u3082\u5c11\u3057\u8aac\u660e\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u3067\u3082\u3001\u4eca\u306e\u6700\u65b0\u306e\u30ab\u30fc\u30cd\u30eb (Linux-4.6\u7cfb) \u307f\u308b\u3068\u30d7\u30ea\u30a8\u30f3\u30d7\u30b7\u30e7\u30f3\u3057\u3066\u3044\u308b\u304b\u5426\u304b\u3067 voluntary \u304b involuntary \u3092\u6c7a\u3081\u3066\u308b\u307f\u305f\u3044\u3067\u3059\u3002 |\n| nr_involuntary_switches | \u56de\u6570 | \u975e\u81ea\u767a\u7684\u306a\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30b9\u30a4\u30c3\u30c1\u306e\u56de\u6570 | \u540c\u4e0a |\n| se.load.weight | \u6574\u6570\u5024 | \u512a\u5148\u5ea6\u306b\u5fdc\u3058\u305f\u91cd\u307f | [kernel/sched/sched.h \u306e\u914d\u5217 `prio_to_weight` \u306bnice\u5024\u306b\u5fdc\u3058\u305f\u91cd\u307f\u304c\u5b9a\u7fa9](http://lxr.free-electrons.com/source/kernel/sched/sched.h?v=3.13#L955)\u3055\u308c\u3066\u3044\u308b |\n| se.avg.runnable_avg_sum | ?? | ?? | \u3069\u3046\u3084\u3089\u904e\u53bb\u306e\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u60c5\u5831\u3092\u5143\u306b\u91cd\u307f\u8a08\u7b97\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3002\u3069\u3046\u305b\u3053\u3093\u306a\u7d30\u304b\u3044\u6240\u306f\u3059\u3050\u4fee\u6b63\u3055\u308c\u308b\u3060\u308d\u3046\u306a\u3068\u601d\u3063\u305f\u3089\u3001\u3084\u3063\u3071\u308a [linux-4.6 \u3067\u8de1\u5f62\u3082\u7121\u304f\u6d88\u3048\u3066\u305f](http://lxr.free-electrons.com/source/kernel/sched/fair.c?v=4.6)\u3002\u3068\u306f\u8a00\u3048\u3001\u307e\u305f\u4f3c\u305f\u3088\u3046\u306a\u5225\u306e\u4ed5\u7d44\u307f\u306b\u306a\u3063\u3066\u308b\u306e\u3067\u5f8c\u3067\u52c9\u5f37\u3057\u3088\u3002 |\n| se.avg.runnable_avg_period | ?? | ?? | \u540c\u4e0a |\n| se.avg.load_avg_contrib | ?? | ?? | \u540c\u4e0a |\n| se.avg.decay_count | ?? | ?? | \u540c\u4e0a |\n| policy | \u6570\u5024 | \u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u30dd\u30ea\u30b7\u30fc | \u3069\u3093\u306a\u30dd\u30ea\u30b7\u30fc\u304c\u3042\u308b\u304b\u306f [`include/uapi/linux/sched.h` \u306b\u5b9a\u7fa9\u3057\u3066\u3042\u308b \"Scheduling policies\" \u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044](http://lxr.free-electrons.com/source/include/uapi/linux/sched.h?v=3.13#L33) |\n| prio | 0\u301c139\u306e\u5024 | \u30bf\u30b9\u30af\u306e\u512a\u5148\u5ea6 | RT\u30bf\u30b9\u30af\u306f 0 \u301c 99\u3001CFS\u30af\u30e9\u30b9\u306f 100 \u301c 139 \u306e\u5024\u3002nice\u5024\u306f -20 \u301c 19 \u306e\u7bc4\u56f2\u3067\u52d5\u304b\u305b\u308b\u304c\u3001CFS\u30af\u30e9\u30b9\u306e\u512a\u5148\u5ea6\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c 120 \u306a\u306e\u3067\u3001`120 + nice` \u304c\u30ab\u30fc\u30cd\u30eb\u5185\u3067\u4f7f\u308f\u308c\u308b (CFS\u30af\u30e9\u30b9\u306e) \u30bf\u30b9\u30af\u306e\u512a\u5148\u5ea6\u3002 |\n| clock-delta | \u30ca\u30ce\u79d2 | \u30bf\u30b9\u30af\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308bCPU\u4e0a\u3067\u3001\u9023\u7d9a\u3057\u3066 `cpu_clock()` \u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u306e\u6642\u9593\u5dee | CPU\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u4f9d\u5b58\u3002\u306a\u3093\u306e\u305f\u3081\u306b\u3053\u3093\u306a\u6642\u9593\u8a08\u6e2c\u3057\u3066\u308b\u3093\u3060\u308d\u3046\u304b\u3002 |\n\n", "tags": ["Linux", "scheduler", "debug", "Ubuntu14.04", "procfs"]}