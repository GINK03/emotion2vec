{"context": " More than 1 year has passed since last update.Spring Data JPA \u3067\u30af\u30a8\u30ea\u30fc\u3092\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3092\u3056\u3063\u304f\u308a\u307e\u3068\u3081\u3066\u307f\u305f\u3002\n\nJPA\u306e\u30af\u30a8\u30ea\u30fc\u5b9f\u88c5\u65b9\u6cd5\n\u5148\u305a\u306fJPA\u306e\u30af\u30a8\u30ea\u30fc\u5b9f\u88c5\u65b9\u6cd5\u3092\u898b\u3066\u307f\u308b\u3002\nJPA\u3067\u306f EntityManage \u3092\u4f7f\u7528\u3057\u3066\u30af\u30a8\u30ea\u30fc\u3092\u69cb\u7bc9\uff0f\u5b9f\u884c\u3059\u308b\u304c\u3001\u4e3b\u306a\u5b9f\u88c5\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n\u30cd\u30a4\u30c6\u30a3\u30d6SQL\nJPQL\nCriteriaAPI\n\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\nJPA\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u6a5f\u80fd\u3092\u76f4\u63a5\u4f7f\u7528\u3059\u308b\n\n\n\u30cd\u30a4\u30c6\u30a3\u30d6SQL\nEntityManager#createNativeQuery(String)\u3092\u4f7f\u7528\u3059\u308b\u3002\n        List<User> results = entityManager\n            .createNativeQuery(\"select * from user where name = :name\", User.class)\n            .setParameter(\"name\", \"\u304d\u3044\u592a\")\n            .getResultList();\n\n\nJPQL\nEntityManager#createQuery(String)\u3092\u4f7f\u7528\u3059\u308b\u3002\n        List<User> results = entityManager\n                .createQuery(\"from User where name = :name\", User.class)\n                .setParameter(\"name\", \"\u304d\u3044\u592a\")\n                .getResultList();\n\n\nCriteriaAPI\nEntityManager#createQuery(CriteriaQuery)\u3092\u4f7f\u7528\u3059\u308b\u3002\n        CriteriaBuilder cb = entityManager.getCriteriaBuilder();\n        CriteriaQuery<User> query = cb.createQuery(User.class);\n        Root<User> root = query.from(User.class);\n        query.where(cb.equal(root.get(\"name\"), \"\u304d\u3044\u592a\"));\n        List<User> results = entityManager\n                .createQuery(query)\n                .getResultList();\n\n\n\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\n@NamedQuery \u53c8\u306f @NamedNativeQuery \u3092\u4f7f\u7528\u3057\u3066Entity\u30af\u30e9\u30b9\u306b\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u4e8b\u304c\u3067\u304d\u308b\u3002\n\u5b9a\u7fa9\u3057\u305f\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\u306fEntityManager#createNamedQuery(String)\u3067\u4f7f\u7528\u3059\u308b\u3002\n\nUser.java\n@Entity\n@NamedQuery(name = \"findByName\", query = \"from User where name = :name\")\npublic class User {\n}\n\n\n        List<User> results = entityManager\n                .createNamedQuery(\"findByName\", User.class)\n                .setParameter(\"name\", \"\u304d\u3044\u592a\")\n                .getResultList();\n\n\nJPA\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u6a5f\u80fd\u3092\u76f4\u63a5\u4f7f\u7528\u3059\u308b\nEntityManager#unwrap()\u3067JPA\u30d7\u30ed\u30d0\u30a4\u30c0(Hibernate,EclipseLinke\u306a\u3069)\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3057\u3066\u5b9f\u88c5\u3059\u308b\u3002\n\nHibernate\u306e\u5834\u5408\n        Session session = entityManager.unwrap(Session.class);\n        :\n\n\n\nSpring Data JPA \u306e\u30af\u30a8\u30ea\u30fc\u5b9f\u88c5\u65b9\u6cd5\nSpring Data JPA \u3067\u306f Repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067\u30af\u30a8\u30ea\u30fc\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n\nUserRepository.java\npublic interface UserRepository extends JpaRepository<User, Long>, JpaSpecificationExecutor<User> {\n    public User findByName(String name);\n    public User findByEmail(String email);\n    :\n\n\nRepository\u306e\u30b9\u30fc\u30d1\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306b\u306f\u4ee5\u4e0b\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\norg.springframework.data.repository.CrudRepository\n\n\norg.springframework.data.repository.PagingAndSortingRepository\n\n\norg.springframework.data.jpa.repository.JpaRepository\n\n\n\n\norg.springframework.data.jpa.repository.JpaSpecificationExecutor\n\nJpaRepository\u306b\u306f\u6a19\u6e96\u7684\u306aCRUD\u64cd\u4f5c\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\u901a\u5e38\u306fJpaRepository\u3060\u3051\u4f7f\u7528\u3059\u308c\u3070\u826f\u3044\u304c\u3001\u5f8c\u8ff0\u306eSpecification\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306fJpaSpecificationExecutor\u3082\u4f75\u7528\u3059\u308b\u3002\n\u6a19\u6e96\u306e\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306e\u30af\u30a8\u30ea\u30fc\u3092\u4f5c\u308b\u306b\u306f\u3001Repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306b\u30af\u30a8\u30ea\u30fc\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\u30af\u30a8\u30ea\u30fc\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n\u547d\u540d\u898f\u7d04\u306b\u5f93\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u540d\u3067\u306e\u81ea\u52d5\u5b9f\u88c5\n\n@Query\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u306e\u30af\u30a8\u30ea\u30fc\u6307\u5b9a\n\u30ea\u30dd\u30b8\u30c8\u30ea\u5b9f\u88c5\u30af\u30e9\u30b9\u3067\u30af\u30a8\u30ea\u30fc\u3092\u5b9f\u88c5\u3059\u308b\nSpecification\u3067\u306e\u5b9f\u88c5\n\n\n\u547d\u540d\u898f\u7d04\u306b\u5f93\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u540d\u3067\u306e\u81ea\u52d5\u5b9f\u88c5\n\u6c7a\u3081\u3089\u308c\u305f\u30d1\u30bf\u30fc\u30f3\u3067\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u3001\u30af\u30a8\u30ea\u30fc\u3092\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u81ea\u52d5\u5b9f\u88c5\u3055\u308c\u308b\u3002\n\nUserRepository.java\n    public List<User> findByNameContainsOrderByIdAsc(String name);\n\n\n\n\u5b9f\u884c\u3055\u308c\u308bJPQL\nselect u\nfrom User u\nwhere u.name like %:name%\norder by u.id asc\n\n\n\n@Query\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u306e\u30af\u30a8\u30ea\u30fc\u6307\u5b9a\n\u8907\u96d1\u306a\u30af\u30a8\u30ea\u30fc\u3084\u3001\u547d\u540d\u898f\u7d04\u3067\u306f\u30e1\u30bd\u30c3\u30c9\u540d\u304c\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u5834\u5408\u306a\u3069\u306b\u306f\u3001@Query\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067JPQL\u53c8\u306f\u30cd\u30a4\u30c6\u30a3\u30d6SQL\u3092\u6307\u5b9a\u3057\u3066\u4efb\u610f\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3067\u30af\u30a8\u30ea\u30fc\u3092\u5b9a\u7fa9\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\u3002\n\nUserRepository.java\n    @Query(\"select u from User u where u.name like %:name% order by u.id asc\")\n    public List<User> findUsers(@Param(\"name\") String name);\n\n\n\n\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\u306e\u6307\u5b9a\n@Query\u306ename\u5c5e\u6027\u3067Entity\u30af\u30e9\u30b9\u306b\u5b9a\u7fa9\u3057\u305f\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\u3068\u7d50\u3073\u4ed8\u3051\u308b\u4e8b\u304c\u3067\u304d\u308b\u3002\n\nUser.java\n@Entity\n@NamedQuery(name = \"findUsers\", query = \"select u from User u where u.name like %:name% order by u.id asc\")\npublic class User {\n\n\n\nUserRepository.java\n    @Query(name = \"findUsers\")\n    public List<User> findByNamedQuery(@Param(\"name\") String name);\n\n\n\u304c\u3001\u305b\u3063\u304b\u304fRepository\u306b\u30af\u30a8\u30ea\u30fc\u3092\u307e\u3068\u3081\u3066\u308b\u306e\u306bEntity\u30af\u30e9\u30b9\u306b\u30af\u30a8\u30ea\u30fc\u3092\u66f8\u304f\u3068\u3044\u3046\u4e8b\u306f\u306a\u3044\u306e\u3067\u3001Spring Data JPA \u3067\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\u3092\u4f7f\u3046\u969b\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306b\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\u3092\u5b9a\u7fa9\u3059\u308b\n\u30af\u30a8\u30ea\u30fc\u540d\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fEntity\u540d.\u30e1\u30bd\u30c3\u30c9\u540d\u3068\u306a\u308b\u304c\u3001@Query\u306ename\u5c5e\u6027\u3067\u5909\u66f4\u53ef\u80fd\u3002\n\nresources/META-INF/jpa-named-queries.properties\nUser.findAllOrderByName=select u from User u order by u.name\nUser.findAllOrderByEmailDesc=select u from User u order by u.email desc\n\n\n\nUserRepository.java\n    public List<User> findAllOrderByName();\n    @Query(name = \"User.findAllOrderByEmailDesc\")\n    public List<User> findAllOrderByEmail();\n\n\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u5b9f\u88c5\u30af\u30e9\u30b9\u3067\u30af\u30a8\u30ea\u30fc\u3092\u5b9f\u88c5\u3059\u308b\n\u52d5\u7684\u30af\u30a8\u30ea\u30fc\u306e\u7d44\u307f\u7acb\u3066\u3084JPA\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306a\u3069\u3001\u7279\u6b8a\u306a\u30af\u30a8\u30ea\u30fc\u304c\u5fc5\u8981\u306a\u5834\u5408\u7b49\u306b\u306f\u81ea\u5206\u3067\u30af\u30a8\u30ea\u30fc\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\u3002\n\nUserRepository.java\npublic interface UserRepository extends \n        JpaRepository<User, Long>,\n        JpaSpecificationExecutor<User>,\n        UserRepositoryCustom {\n\n\n\nUserRepositoryCustom.java\npublic interface UserRepositoryCustom {\n    public List<User> findUsers(String name, String email);\n}\n\n\n\nUserRepositoryImpl.java\npublic class UserRepositoryImpl implements UserRepositoryCustom {\n    @Autowired\n    EntityManager entityManager;\n    public List<User> findUsers(String name, String email) {\n        //\u3053\u3053\u306b\u30af\u30a8\u30ea\u30fc\u3092\u5b9f\u88c5\u3059\u308b\n    }\n}\n\n\n\nSpecification\nSpecification\u306f\u4f55\u3089\u304b\u306e\u691c\u7d22\u6761\u4ef6\u3092\u8868\u3059\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3067\u3001CriteriaAPI\u3092\u4f7f\u7528\u3057\u3066\u691c\u7d22\u6761\u4ef6\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\nUserSpecifications.java\n    public Specification<User> nameContains(String name) {\n        return StringUtils.isEmpty(name) ? null : (root, query, cb) -> {\n            return cb.like(root.get(\"name\"), \"%\" + name + \"%\");\n        };\n    }\n    public Specification<User> emailContains(String email) {\n        return StringUtils.isEmpty(email) ? null : (root, query, cb) -> {\n            return cb.like(root.get(\"email\"), \"%\" + email + \"%\");\n        };\n    }\n\n\n\n\u547c\u3073\u51fa\u3059\u7b87\u6240\n    List<User> results = userRepository.findAll(Specifications\n        .where(nameContains(name))\n        .and(emailContains(email))\n    );\n\n\nSpring Data JPA \u3067\u30af\u30a8\u30ea\u30fc\u3092\u5b9f\u88c5\u3059\u308b\u65b9\u6cd5\u3092\u3056\u3063\u304f\u308a\u307e\u3068\u3081\u3066\u307f\u305f\u3002\n\n# JPA\u306e\u30af\u30a8\u30ea\u30fc\u5b9f\u88c5\u65b9\u6cd5\n\n\u5148\u305a\u306fJPA\u306e\u30af\u30a8\u30ea\u30fc\u5b9f\u88c5\u65b9\u6cd5\u3092\u898b\u3066\u307f\u308b\u3002\nJPA\u3067\u306f EntityManage \u3092\u4f7f\u7528\u3057\u3066\u30af\u30a8\u30ea\u30fc\u3092\u69cb\u7bc9\uff0f\u5b9f\u884c\u3059\u308b\u304c\u3001\u4e3b\u306a\u5b9f\u88c5\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n* \u30cd\u30a4\u30c6\u30a3\u30d6SQL\n* JPQL\n* CriteriaAPI\n* \u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\n* JPA\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u6a5f\u80fd\u3092\u76f4\u63a5\u4f7f\u7528\u3059\u308b\n\n## \u30cd\u30a4\u30c6\u30a3\u30d6SQL\n\nEntityManager#createNativeQuery(String)\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n```java\n        List<User> results = entityManager\n            .createNativeQuery(\"select * from user where name = :name\", User.class)\n            .setParameter(\"name\", \"\u304d\u3044\u592a\")\n            .getResultList();\n```\n\n## JPQL\n\nEntityManager#createQuery(String)\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n```java\n        List<User> results = entityManager\n                .createQuery(\"from User where name = :name\", User.class)\n                .setParameter(\"name\", \"\u304d\u3044\u592a\")\n                .getResultList();\n```\n\n## CriteriaAPI\n\nEntityManager#createQuery(CriteriaQuery)\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n```java\n        CriteriaBuilder cb = entityManager.getCriteriaBuilder();\n        CriteriaQuery<User> query = cb.createQuery(User.class);\n        Root<User> root = query.from(User.class);\n        query.where(cb.equal(root.get(\"name\"), \"\u304d\u3044\u592a\"));\n        List<User> results = entityManager\n                .createQuery(query)\n                .getResultList();\n```\n\n## \u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\n\n`@NamedQuery` \u53c8\u306f `@NamedNativeQuery` \u3092\u4f7f\u7528\u3057\u3066Entity\u30af\u30e9\u30b9\u306b\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u4e8b\u304c\u3067\u304d\u308b\u3002\n\u5b9a\u7fa9\u3057\u305f\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\u306fEntityManager#createNamedQuery(String)\u3067\u4f7f\u7528\u3059\u308b\u3002\n\n```java:User.java\n@Entity\n@NamedQuery(name = \"findByName\", query = \"from User where name = :name\")\npublic class User {\n}\n```\n```java\n        List<User> results = entityManager\n                .createNamedQuery(\"findByName\", User.class)\n                .setParameter(\"name\", \"\u304d\u3044\u592a\")\n                .getResultList();\n```\n\n## JPA\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u6a5f\u80fd\u3092\u76f4\u63a5\u4f7f\u7528\u3059\u308b\n\nEntityManager#unwrap()\u3067JPA\u30d7\u30ed\u30d0\u30a4\u30c0(Hibernate,EclipseLinke\u306a\u3069)\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3057\u3066\u5b9f\u88c5\u3059\u308b\u3002\n\n```java:Hibernate\u306e\u5834\u5408\n        Session session = entityManager.unwrap(Session.class);\n        :\n```\n\n# Spring Data JPA \u306e\u30af\u30a8\u30ea\u30fc\u5b9f\u88c5\u65b9\u6cd5\n\nSpring Data JPA \u3067\u306f Repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067\u30af\u30a8\u30ea\u30fc\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n\n```java:UserRepository.java\npublic interface UserRepository extends JpaRepository<User, Long>, JpaSpecificationExecutor<User> {\n    public User findByName(String name);\n    public User findByEmail(String email);\n    :\n```\n\nRepository\u306e\u30b9\u30fc\u30d1\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306b\u306f\u4ee5\u4e0b\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\n* org.springframework.data.repository.CrudRepository\n   * org.springframework.data.repository.PagingAndSortingRepository\n      * org.springframework.data.jpa.repository.JpaRepository\n* org.springframework.data.jpa.repository.JpaSpecificationExecutor\n\nJpaRepository\u306b\u306f\u6a19\u6e96\u7684\u306aCRUD\u64cd\u4f5c\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\u901a\u5e38\u306fJpaRepository\u3060\u3051\u4f7f\u7528\u3059\u308c\u3070\u826f\u3044\u304c\u3001\u5f8c\u8ff0\u306eSpecification\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306fJpaSpecificationExecutor\u3082\u4f75\u7528\u3059\u308b\u3002\n\n\u6a19\u6e96\u306e\u30e1\u30bd\u30c3\u30c9\u4ee5\u5916\u306e\u30af\u30a8\u30ea\u30fc\u3092\u4f5c\u308b\u306b\u306f\u3001Repository\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306b\u30af\u30a8\u30ea\u30fc\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\u30af\u30a8\u30ea\u30fc\u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n* \u547d\u540d\u898f\u7d04\u306b\u5f93\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u540d\u3067\u306e\u81ea\u52d5\u5b9f\u88c5\n* `@Query`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u306e\u30af\u30a8\u30ea\u30fc\u6307\u5b9a\n* \u30ea\u30dd\u30b8\u30c8\u30ea\u5b9f\u88c5\u30af\u30e9\u30b9\u3067\u30af\u30a8\u30ea\u30fc\u3092\u5b9f\u88c5\u3059\u308b\n* Specification\u3067\u306e\u5b9f\u88c5\n\n## \u547d\u540d\u898f\u7d04\u306b\u5f93\u3063\u305f\u30e1\u30bd\u30c3\u30c9\u540d\u3067\u306e\u81ea\u52d5\u5b9f\u88c5\n\n\u6c7a\u3081\u3089\u308c\u305f\u30d1\u30bf\u30fc\u30f3\u3067\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u3001\u30af\u30a8\u30ea\u30fc\u3092\u6307\u5b9a\u3057\u306a\u304f\u3066\u3082\u81ea\u52d5\u5b9f\u88c5\u3055\u308c\u308b\u3002\n\n```java:UserRepository.java\n    public List<User> findByNameContainsOrderByIdAsc(String name);\n```\n\n```sql:\u5b9f\u884c\u3055\u308c\u308bJPQL\nselect u\nfrom User u\nwhere u.name like %:name%\norder by u.id asc\n```\n\n## `@Query`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u306e\u30af\u30a8\u30ea\u30fc\u6307\u5b9a\n\n\u8907\u96d1\u306a\u30af\u30a8\u30ea\u30fc\u3084\u3001\u547d\u540d\u898f\u7d04\u3067\u306f\u30e1\u30bd\u30c3\u30c9\u540d\u304c\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u5834\u5408\u306a\u3069\u306b\u306f\u3001`@Query`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067JPQL\u53c8\u306f\u30cd\u30a4\u30c6\u30a3\u30d6SQL\u3092\u6307\u5b9a\u3057\u3066\u4efb\u610f\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3067\u30af\u30a8\u30ea\u30fc\u3092\u5b9a\u7fa9\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\u3002\n\n```java:UserRepository.java\n    @Query(\"select u from User u where u.name like %:name% order by u.id asc\")\n    public List<User> findUsers(@Param(\"name\") String name);\n```\n\n## \u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\u306e\u6307\u5b9a\n\n`@Query`\u306ename\u5c5e\u6027\u3067Entity\u30af\u30e9\u30b9\u306b\u5b9a\u7fa9\u3057\u305f\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\u3068\u7d50\u3073\u4ed8\u3051\u308b\u4e8b\u304c\u3067\u304d\u308b\u3002\n\n```java:User.java\n@Entity\n@NamedQuery(name = \"findUsers\", query = \"select u from User u where u.name like %:name% order by u.id asc\")\npublic class User {\n```\n```java:UserRepository.java\n    @Query(name = \"findUsers\")\n    public List<User> findByNamedQuery(@Param(\"name\") String name);\n```\n\n\u304c\u3001\u305b\u3063\u304b\u304fRepository\u306b\u30af\u30a8\u30ea\u30fc\u3092\u307e\u3068\u3081\u3066\u308b\u306e\u306bEntity\u30af\u30e9\u30b9\u306b\u30af\u30a8\u30ea\u30fc\u3092\u66f8\u304f\u3068\u3044\u3046\u4e8b\u306f\u306a\u3044\u306e\u3067\u3001Spring Data JPA \u3067\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\u3092\u4f7f\u3046\u969b\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n## \u30d7\u30ed\u30d1\u30c6\u30a3\u30d5\u30a1\u30a4\u30eb\u306b\u540d\u524d\u4ed8\u304d\u30af\u30a8\u30ea\u30fc\u3092\u5b9a\u7fa9\u3059\u308b\n\n\u30af\u30a8\u30ea\u30fc\u540d\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f`Entity\u540d.\u30e1\u30bd\u30c3\u30c9\u540d`\u3068\u306a\u308b\u304c\u3001`@Query`\u306ename\u5c5e\u6027\u3067\u5909\u66f4\u53ef\u80fd\u3002\n\n```properties:resources/META-INF/jpa-named-queries.properties\nUser.findAllOrderByName=select u from User u order by u.name\nUser.findAllOrderByEmailDesc=select u from User u order by u.email desc\n```\n```java:UserRepository.java\n    public List<User> findAllOrderByName();\n    @Query(name = \"User.findAllOrderByEmailDesc\")\n    public List<User> findAllOrderByEmail();\n```\n\n## \u30ea\u30dd\u30b8\u30c8\u30ea\u5b9f\u88c5\u30af\u30e9\u30b9\u3067\u30af\u30a8\u30ea\u30fc\u3092\u5b9f\u88c5\u3059\u308b\n\n\u52d5\u7684\u30af\u30a8\u30ea\u30fc\u306e\u7d44\u307f\u7acb\u3066\u3084JPA\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306a\u3069\u3001\u7279\u6b8a\u306a\u30af\u30a8\u30ea\u30fc\u304c\u5fc5\u8981\u306a\u5834\u5408\u7b49\u306b\u306f\u81ea\u5206\u3067\u30af\u30a8\u30ea\u30fc\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u304c\u3067\u304d\u308b\u3002\n\n```UserRepository.java\npublic interface UserRepository extends \n        JpaRepository<User, Long>,\n        JpaSpecificationExecutor<User>,\n        UserRepositoryCustom {\n```\n```UserRepositoryCustom.java\npublic interface UserRepositoryCustom {\n    public List<User> findUsers(String name, String email);\n}\n```\n```UserRepositoryImpl.java\npublic class UserRepositoryImpl implements UserRepositoryCustom {\n    @Autowired\n    EntityManager entityManager;\n    public List<User> findUsers(String name, String email) {\n        //\u3053\u3053\u306b\u30af\u30a8\u30ea\u30fc\u3092\u5b9f\u88c5\u3059\u308b\n    }\n}\n```\n\n## Specification\n\nSpecification\u306f\u4f55\u3089\u304b\u306e\u691c\u7d22\u6761\u4ef6\u3092\u8868\u3059\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3067\u3001CriteriaAPI\u3092\u4f7f\u7528\u3057\u3066\u691c\u7d22\u6761\u4ef6\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n```java:UserSpecifications.java\n    public Specification<User> nameContains(String name) {\n        return StringUtils.isEmpty(name) ? null : (root, query, cb) -> {\n            return cb.like(root.get(\"name\"), \"%\" + name + \"%\");\n        };\n    }\n    public Specification<User> emailContains(String email) {\n        return StringUtils.isEmpty(email) ? null : (root, query, cb) -> {\n            return cb.like(root.get(\"email\"), \"%\" + email + \"%\");\n        };\n    }\n```\n```java:\u547c\u3073\u51fa\u3059\u7b87\u6240\n    List<User> results = userRepository.findAll(Specifications\n        .where(nameContains(name))\n        .and(emailContains(email))\n    );\n```\n", "tags": ["spring", "spring-data-jpa", "jpa", "Java"]}