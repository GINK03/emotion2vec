{"context": "\u3053\u308c\u304b\u3089\u306f\u3058\u3081\u308bTDD \u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u5165\u9580 ThinkIT Books \u3088\u308a\n\n\u30dc\u30fc\u30ea\u30f3\u30b0\u306e\u70b9\u6570\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\n\n\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u5834\u5408\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\nBowlingGameTest\u306b\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3002\n\n\u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306e\u70b9\u6570\u8a08\u7b97\u304c\u6b63\u3057\u304f\u52d5\u304f\u3088\u3046\u306b\u3059\u308b\n\n\n\u30c6\u30b9\u30c8\u3092\u66f8\u304f\n    /**\n     * \u521d\u7403\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u30b1\u30fc\u30b9\n     *\n     * 1\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 2\u6295\u76ee: 3\n     * 3\u6295\u76ee: 3\n     * 4\u6295\u76ee: 1\n     *\n     * \u6b8b\u308a\u30ac\u30bf\u30fc\n     *\n     * @return [type] [description]\n     */\n    public function testStrikeAtFirstFlame()\n    {\n        $this->BowlingGame->recordShot(10);\n        $this->BowlingGame->recordShot(3);\n        $this->BowlingGame->recordShot(3);\n        $this->BowlingGame->recordShot(1);\n\n        $this->loopRecordShot(15, 0);\n\n        $this->assertEquals(23, $this->BowlingGame->calculateScore());\n    }\n\n\n\u5b9f\u884c\u3057\u3066\u6012\u3089\u308c\u308b\nThere was 1 failure:\n\n1) BowlingGameTest::testStrikeAtFirstFlame\nFailed asserting that 17 matches expected 23.\n\n/var/www/html/test/UnitTest/tests/BowlingGameTest.php:110\n\nFAILURES!\nTests: 5, Assertions: 5, Failures: 1.\n\n\n\u30c6\u30b9\u30c8\u304c\u901a\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u66f8\u304f(\u6700\u5c0f\u306e\u69cb\u6210\u3067)\n\u2460 \u30b9\u30c8\u30e9\u30a4\u30af\u306e\u5224\u5b9a\u3092\u3057\u3001\u6b63\u3057\u3044\u70b9\u6570\u8a08\u7b97\u304c\u884c\u308f\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\n\u30dc\u30fc\u30ca\u30b9\u56de\u6570\u3092\u7ba1\u7406\u3055\u305b\u308b\n(\u30b9\u30c8\u30e9\u30a4\u30af\u306f\u3001\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u306e\uff12\u6295\u76ee\u307e\u3067\u304c\u30dd\u30a4\u30f3\u30c8\u306b\u8ffd\u52a0)\n\n\nstrikeBonusCount\u3092\u5b9a\u7fa9\n\n\n 0 < strikeBonusCount \u2192 score\u306bpin\u306e\u6570\u3092\u8ffd\u52a0\u3002strikeBonusCount-1\n pin = 10 \u2192 strikeBonusCount\u306b2\u3092\u30bb\u30c3\u30c8\n\n\n\n<?php\n\nclass BowlingGame\n{\n    /** @var int **/\n    private $score;\n\n    /** @var int **/\n    private $lastPin;\n\n    /** @var bool **/\n    private $isSpare;\n\n    /** @var int **/\n    private $shotNo;\n\n    /** @var int **/\n    private $strikeBonusCount;\n\n    public function __construct()\n    {\n        $this->score = 0;\n        $this->isSpare = false;\n        $this->lastPin = 0;\n        $this->shotNo = 0;\n        $this->strikeBonusCount = 0;\n    }\n\n    /**\n     * @param  int    $pin [description]\n     * @return [type]      [description]\n     */\n    public function recordShot(int $pin)\n    {\n        ++$this->shotNo;\n\n        $this->score += $pin;\n\n        /**\n         * \u30b9\u30da\u30a2\u306e\u5834\u5408\u3001\u3082\u3046\u4e00\u5ea6\u30d4\u30f3\u306e\u6570\u3092\u8db3\u3057\u3066\n         * \u30d5\u30e9\u30b0\u3092\u4e0b\u3052\u308b\n         */\n        if ($this->isSpare) {\n            $this->score += $pin;\n            $this->isSpare = false;\n        }\n\n        /**\n         * 2\u6295\u76ee\u306e\u3068\u304d\u306b\u30b9\u30da\u30a2\u304b\u3069\u3046\u304b\u5224\u5b9a\n         * 10\u70b9\u3068\u3063\u305f\u3089\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n         */\n        if ($this->shotNo === 2 && $pin + $this->lastPin === 10) {\n            $this->isSpare = true;\n        }\n\n        /**\n         * \u30b9\u30c8\u30e9\u30a4\u30af\u3067\u306e\u30dc\u30fc\u30ca\u30b9\u8a08\u7b97\u51e6\u7406\n         */\n        if ($this->strikeBonusCount > 0) {\n            $this->score += $pin;\n            --$this->strikeBonusCount;\n        }\n\n\u3000\u3000\u3000\u3000/**\n        * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306b\u30dc\u30fc\u30ca\u30b9\u7ba1\u7406\u306e\u5909\u6570\u3092\u30bb\u30c3\u30c8\n        */\n        if ($pin === 10) {\n            $this->strikeBonusCount = 2;\n        }\n\n        $this->lastPin = $pin;\n    }\n\n    /**\n     * @return int [description]\n     */\n    public function calculateScore()\n    {\n        return $this->score;\n    }\n}\n\n\n\u2461 \u5b9f\u88c5\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d\nOK (5 tests, 5 assertions)\n\n\n\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\n\n\u70b9\u6570\u8a08\u7b97\u306erecordShot\u304c\u5de8\u5927\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u3063\u3066\u304d\u306e\u3067\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\n\u30c6\u30b9\u30c8 \u2192 \u6210\u529f\u3092\u7e70\u308a\u8fd4\u3057\u3066\u5897\u3048\u305f\u30b3\u30fc\u30c9\u3092\u6539\u5584\u3057\u3066\u3044\u304f\u30d0\u30e9\u30f3\u30b9\u304c\u5fc5\u8981\u3002\n\u30c6\u30b9\u30c8\u304c\u3042\u308b\u306e\u3067\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u306e\u30ea\u30b9\u30af\u306f\u683c\u6bb5\u306b\u5c11\u306a\u3044\u306e\u304c\u3044\u3044\u3068\u3053\u308d\u3002\n\u2460record_shot\u5185\u3067\u5207\u308a\u51fa\u305b\u305d\u3046\u306a\u90e8\u5206\u3092\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5207\u308a\u51fa\u3059\n\u4eca\u56de\u884c\u3063\u305f\u306e\u306f\u4e0b\u8a18\n\n\u30b9\u30da\u30a2\u306e\u30ed\u30b8\u30c3\u30af\u306e\u5207\u308a\u51fa\u3057\n\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u30ed\u30b8\u30c3\u30af\u306e\u5207\u308a\u51fa\u3057\n\u4eca\u56de\u306e\u6295\u7403\u304c\u6b21\u56de\u30dc\u30fc\u30ca\u30b9\u8a08\u7b97\u306b\u306a\u308b\u304b\u5224\u5b9a\n\n<?php\n\nnamespace App;\n\nclass BowlingGame\n{\n    /** @var int **/\n    private $score;\n\n    /** @var int **/\n    private $lastPin;\n\n    /** @var bool **/\n    private $isSpare;\n\n    /** @var int **/\n    private $shotNo;\n\n    /** @var int **/\n    private $strikeBonusCount;\n\n    public function __construct()\n    {\n        $this->score = 0;\n        $this->isSpare = false;\n        $this->lastPin = 0;\n        $this->shotNo = 0;\n        $this->strikeBonusCount = 0;\n    }\n\n    /**\n     * @param  int    $pin [description]\n     * @return [type]      [description]\n     */\n    public function recordShot(int $pin)\n    {\n        ++$this->shotNo;\n\n        $this->score += $pin;\n\n        $this->calculateSpare($pin);\n\n        $this->calculateStrike($pin);\n\n        $this->setBonusParam($pin);\n\n        $this->lastPin = $pin;\n    }\n\n    /**\n     * \u30b9\u30da\u30a2\u306e\u5834\u5408\u3001\u3082\u3046\u4e00\u5ea6\u30d4\u30f3\u306e\u6570\u3092\u8db3\u3057\u3066\n     * \u30d5\u30e9\u30b0\u3092\u4e0b\u3052\u308b\n     * @param int $pin\n     * @return void [description]\n     */\n    private function calculateSpare(int $pin)\n    {\n        if ($this->isSpare) {\n            $this->score += $pin;\n            $this->isSpare = false;\n        }\n    }\n\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306e\u5f97\u70b9\u8a08\u7b97\n     * @param  int    $pin [description]\n     * @return void      [description]\n     */\n    private function calculateStrike(int $pin)\n    {\n        if ($this->strikeBonusCount > 0) {\n            $this->score += $pin;\n            --$this->strikeBonusCount;\n        }\n    }\n\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306b\u30dc\u30fc\u30ca\u30b9\u7ba1\u7406\u306e\u5909\u6570\u3092\u30bb\u30c3\u30c8\n     * @param  int     $pin [description]\n     * @return void      [description]\n     */\n    private function isStrike(int $pin)\n    {\n        if ($pin === 10) {\n            $this->strikeBonusCount = 2;\n        }\n    }\n\n    /**\n     * 2\u6295\u76ee\u306e\u3068\u304d\u306b\u30b9\u30da\u30a2\u304b\u3069\u3046\u304b\u5224\u5b9a\n     * 10\u70b9\u3068\u3063\u305f\u3089\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n     *\n     * @param  int     $pin [description]\n     * @return void      [description]\n     */\n    private function isSpare(int $pin)\n    {\n        if ($this->shotNo === 2 && $pin + $this->lastPin === 10) {\n            $this->isSpare = true;\n        }\n    }\n\n    /**\n     * \u4eca\u56de\u306e\u6295\u7403\u304c\u30dc\u30fc\u30ca\u30b9\u56de\u3068\u3057\u3066\u6b21\u306e\u6295\u7403\u306b\u5f71\u97ff\u3059\u308b\u304b\u5224\u5b9a\n     * @param int $pin [description]\n     * @return void\n     */\n    private function setBonusParam(int $pin)\n    {\n        $this->isSpare($pin);\n        $this->isStrike($pin);\n    }\n\n    /**\n     * @return int [description]\n     */\n    public function calculateScore()\n    {\n        return $this->score;\n    }\n}\n\n\n\u2461 \u78ba\u8a8d\nOK (5 tests, 5 assertions)\n\n\n\u611f\u60f3\n\u3084\u3063\u3071\u30c6\u30b9\u30c8\u304c\u3042\u308b\u3068\u5b89\u5fc3\u3057\u3066\u30ea\u30d5\u30a1\u30af\u30bf\u3067\u304d\u308b\u306e\u304c\u3044\u3044\u3002\n\u4e00\u56de\u76ee\u306e\u5b9f\u88c5\u3067\u30ea\u30d5\u30a1\u30af\u30bf\u4e0d\u8981\u306a\u3093\u3066\u30b9\u30fc\u30d1\u30fc\u30a8\u30f3\u30b8\u30cb\u30a2\u306f\u307b\u3093\u306e\u4e00\u63e1\u308a\u3060\u308d\u3046\u304b\u3089\n\u51e1\u4eba\u306f\u304a\u3068\u306a\u3057\u304f\u30c6\u30b9\u30c8\u66f8\u3044\u3066\u3001\u30b3\u30fc\u30c9\u3092\u697d\u306b\u3088\u304f\u3067\u304d\u308b\u74b0\u5883\u4f5c\u308b\u3079\u3057\u3002\n\u6642\u9593\u3084\u3001\u7d0d\u671f\u3068\u306e\u517c\u306d\u5408\u3044\u306f\u96e3\u3057\u3044\u3051\u3069\u3001\u305d\u3053\u3092\u308f\u304b\u3089\u305b\u308b\u306e\u3082\u307e\u305f\u4ed5\u4e8b\u3002\u3002\u3002\n\u3053\u308c\u304b\u3089\u306f\u3058\u3081\u308bTDD \u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u5165\u9580 ThinkIT Books \u3088\u308a\n\n# \u30dc\u30fc\u30ea\u30f3\u30b0\u306e\u70b9\u6570\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\n\n## \u30b9\u30c8\u30e9\u30a4\u30af\u306e\u5834\u5408\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\n\nBowlingGameTest\u306b\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3002\n\n- \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306e\u70b9\u6570\u8a08\u7b97\u304c\u6b63\u3057\u304f\u52d5\u304f\u3088\u3046\u306b\u3059\u308b\n\n### \u30c6\u30b9\u30c8\u3092\u66f8\u304f\n\n```php\n    /**\n     * \u521d\u7403\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u30b1\u30fc\u30b9\n     *\n     * 1\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 2\u6295\u76ee: 3\n     * 3\u6295\u76ee: 3\n     * 4\u6295\u76ee: 1\n     *\n     * \u6b8b\u308a\u30ac\u30bf\u30fc\n     *\n     * @return [type] [description]\n     */\n    public function testStrikeAtFirstFlame()\n    {\n        $this->BowlingGame->recordShot(10);\n        $this->BowlingGame->recordShot(3);\n        $this->BowlingGame->recordShot(3);\n        $this->BowlingGame->recordShot(1);\n\n        $this->loopRecordShot(15, 0);\n\n        $this->assertEquals(23, $this->BowlingGame->calculateScore());\n    }\n```\n\n### \u5b9f\u884c\u3057\u3066\u6012\u3089\u308c\u308b\n\n```bash\nThere was 1 failure:\n\n1) BowlingGameTest::testStrikeAtFirstFlame\nFailed asserting that 17 matches expected 23.\n\n/var/www/html/test/UnitTest/tests/BowlingGameTest.php:110\n\nFAILURES!\nTests: 5, Assertions: 5, Failures: 1.\n```\n\n### \u30c6\u30b9\u30c8\u304c\u901a\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u66f8\u304f(__\u6700\u5c0f\u306e\u69cb\u6210\u3067__)\n\n\u2460 \u30b9\u30c8\u30e9\u30a4\u30af\u306e\u5224\u5b9a\u3092\u3057\u3001\u6b63\u3057\u3044\u70b9\u6570\u8a08\u7b97\u304c\u884c\u308f\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\n#### \u30dc\u30fc\u30ca\u30b9\u56de\u6570\u3092\u7ba1\u7406\u3055\u305b\u308b\n(\u30b9\u30c8\u30e9\u30a4\u30af\u306f\u3001\u6b21\u306e\u30d5\u30ec\u30fc\u30e0\u306e\uff12\u6295\u76ee\u307e\u3067\u304c\u30dd\u30a4\u30f3\u30c8\u306b\u8ffd\u52a0)\n\n- __strikeBonusCount__\u3092\u5b9a\u7fa9\n  -  __0 < strikeBonusCount__ \u2192 score\u306bpin\u306e\u6570\u3092\u8ffd\u52a0\u3002strikeBonusCount-1\n  -  __pin = 10__ \u2192 strikeBonusCount\u306b2\u3092\u30bb\u30c3\u30c8\n\n\n```php\n<?php\n\nclass BowlingGame\n{\n    /** @var int **/\n    private $score;\n\n    /** @var int **/\n    private $lastPin;\n\n    /** @var bool **/\n    private $isSpare;\n\n    /** @var int **/\n    private $shotNo;\n\n    /** @var int **/\n    private $strikeBonusCount;\n\n    public function __construct()\n    {\n        $this->score = 0;\n        $this->isSpare = false;\n        $this->lastPin = 0;\n        $this->shotNo = 0;\n        $this->strikeBonusCount = 0;\n    }\n\n    /**\n     * @param  int    $pin [description]\n     * @return [type]      [description]\n     */\n    public function recordShot(int $pin)\n    {\n        ++$this->shotNo;\n\n        $this->score += $pin;\n\n        /**\n         * \u30b9\u30da\u30a2\u306e\u5834\u5408\u3001\u3082\u3046\u4e00\u5ea6\u30d4\u30f3\u306e\u6570\u3092\u8db3\u3057\u3066\n         * \u30d5\u30e9\u30b0\u3092\u4e0b\u3052\u308b\n         */\n        if ($this->isSpare) {\n            $this->score += $pin;\n            $this->isSpare = false;\n        }\n\n        /**\n         * 2\u6295\u76ee\u306e\u3068\u304d\u306b\u30b9\u30da\u30a2\u304b\u3069\u3046\u304b\u5224\u5b9a\n         * 10\u70b9\u3068\u3063\u305f\u3089\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n         */\n        if ($this->shotNo === 2 && $pin + $this->lastPin === 10) {\n            $this->isSpare = true;\n        }\n\n        /**\n         * \u30b9\u30c8\u30e9\u30a4\u30af\u3067\u306e\u30dc\u30fc\u30ca\u30b9\u8a08\u7b97\u51e6\u7406\n         */\n        if ($this->strikeBonusCount > 0) {\n            $this->score += $pin;\n            --$this->strikeBonusCount;\n        }\n\n\u3000\u3000\u3000\u3000/**\n        * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306b\u30dc\u30fc\u30ca\u30b9\u7ba1\u7406\u306e\u5909\u6570\u3092\u30bb\u30c3\u30c8\n        */\n        if ($pin === 10) {\n            $this->strikeBonusCount = 2;\n        }\n\n        $this->lastPin = $pin;\n    }\n\n    /**\n     * @return int [description]\n     */\n    public function calculateScore()\n    {\n        return $this->score;\n    }\n}\n\n```\n\n\u2461 \u5b9f\u88c5\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d\n\n```bash\nOK (5 tests, 5 assertions)\n```\n\n### \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\n\n#### \u70b9\u6570\u8a08\u7b97\u306erecordShot\u304c\u5de8\u5927\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u3063\u3066\u304d\u306e\u3067\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\n\n\u30c6\u30b9\u30c8 \u2192 \u6210\u529f\u3092\u7e70\u308a\u8fd4\u3057\u3066\u5897\u3048\u305f\u30b3\u30fc\u30c9\u3092\u6539\u5584\u3057\u3066\u3044\u304f\u30d0\u30e9\u30f3\u30b9\u304c\u5fc5\u8981\u3002\n__\u30c6\u30b9\u30c8\u304c\u3042\u308b\u306e\u3067\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u306e\u30ea\u30b9\u30af\u306f\u683c\u6bb5\u306b\u5c11\u306a\u3044\u306e\u304c\u3044\u3044\u3068\u3053\u308d\u3002__\n\n\n\u2460record_shot\u5185\u3067\u5207\u308a\u51fa\u305b\u305d\u3046\u306a\u90e8\u5206\u3092\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5207\u308a\u51fa\u3059\n\n\u4eca\u56de\u884c\u3063\u305f\u306e\u306f\u4e0b\u8a18\n\n- \u30b9\u30da\u30a2\u306e\u30ed\u30b8\u30c3\u30af\u306e\u5207\u308a\u51fa\u3057\n- \u30b9\u30c8\u30e9\u30a4\u30af\u306e\u30ed\u30b8\u30c3\u30af\u306e\u5207\u308a\u51fa\u3057\n- \u4eca\u56de\u306e\u6295\u7403\u304c\u6b21\u56de\u30dc\u30fc\u30ca\u30b9\u8a08\u7b97\u306b\u306a\u308b\u304b\u5224\u5b9a\n\n```php\n<?php\n\nnamespace App;\n\nclass BowlingGame\n{\n    /** @var int **/\n    private $score;\n\n    /** @var int **/\n    private $lastPin;\n\n    /** @var bool **/\n    private $isSpare;\n\n    /** @var int **/\n    private $shotNo;\n\n    /** @var int **/\n    private $strikeBonusCount;\n\n    public function __construct()\n    {\n        $this->score = 0;\n        $this->isSpare = false;\n        $this->lastPin = 0;\n        $this->shotNo = 0;\n        $this->strikeBonusCount = 0;\n    }\n\n    /**\n     * @param  int    $pin [description]\n     * @return [type]      [description]\n     */\n    public function recordShot(int $pin)\n    {\n        ++$this->shotNo;\n\n        $this->score += $pin;\n\n        $this->calculateSpare($pin);\n\n        $this->calculateStrike($pin);\n\n        $this->setBonusParam($pin);\n\n        $this->lastPin = $pin;\n    }\n\n    /**\n     * \u30b9\u30da\u30a2\u306e\u5834\u5408\u3001\u3082\u3046\u4e00\u5ea6\u30d4\u30f3\u306e\u6570\u3092\u8db3\u3057\u3066\n     * \u30d5\u30e9\u30b0\u3092\u4e0b\u3052\u308b\n     * @param int $pin\n     * @return void [description]\n     */\n    private function calculateSpare(int $pin)\n    {\n        if ($this->isSpare) {\n            $this->score += $pin;\n            $this->isSpare = false;\n        }\n    }\n\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306e\u5f97\u70b9\u8a08\u7b97\n     * @param  int    $pin [description]\n     * @return void      [description]\n     */\n    private function calculateStrike(int $pin)\n    {\n        if ($this->strikeBonusCount > 0) {\n            $this->score += $pin;\n            --$this->strikeBonusCount;\n        }\n    }\n\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306b\u30dc\u30fc\u30ca\u30b9\u7ba1\u7406\u306e\u5909\u6570\u3092\u30bb\u30c3\u30c8\n     * @param  int     $pin [description]\n     * @return void      [description]\n     */\n    private function isStrike(int $pin)\n    {\n        if ($pin === 10) {\n            $this->strikeBonusCount = 2;\n        }\n    }\n\n    /**\n     * 2\u6295\u76ee\u306e\u3068\u304d\u306b\u30b9\u30da\u30a2\u304b\u3069\u3046\u304b\u5224\u5b9a\n     * 10\u70b9\u3068\u3063\u305f\u3089\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n     *\n     * @param  int     $pin [description]\n     * @return void      [description]\n     */\n    private function isSpare(int $pin)\n    {\n        if ($this->shotNo === 2 && $pin + $this->lastPin === 10) {\n            $this->isSpare = true;\n        }\n    }\n\n    /**\n     * \u4eca\u56de\u306e\u6295\u7403\u304c\u30dc\u30fc\u30ca\u30b9\u56de\u3068\u3057\u3066\u6b21\u306e\u6295\u7403\u306b\u5f71\u97ff\u3059\u308b\u304b\u5224\u5b9a\n     * @param int $pin [description]\n     * @return void\n     */\n    private function setBonusParam(int $pin)\n    {\n        $this->isSpare($pin);\n        $this->isStrike($pin);\n    }\n\n    /**\n     * @return int [description]\n     */\n    public function calculateScore()\n    {\n        return $this->score;\n    }\n}\n\n```\n\n\u2461 \u78ba\u8a8d\n\n```bash\nOK (5 tests, 5 assertions)\n```\n\n## \u611f\u60f3\n\n\u3084\u3063\u3071\u30c6\u30b9\u30c8\u304c\u3042\u308b\u3068\u5b89\u5fc3\u3057\u3066\u30ea\u30d5\u30a1\u30af\u30bf\u3067\u304d\u308b\u306e\u304c\u3044\u3044\u3002\n\u4e00\u56de\u76ee\u306e\u5b9f\u88c5\u3067\u30ea\u30d5\u30a1\u30af\u30bf\u4e0d\u8981\u306a\u3093\u3066\u30b9\u30fc\u30d1\u30fc\u30a8\u30f3\u30b8\u30cb\u30a2\u306f\u307b\u3093\u306e\u4e00\u63e1\u308a\u3060\u308d\u3046\u304b\u3089\n\u51e1\u4eba\u306f\u304a\u3068\u306a\u3057\u304f\u30c6\u30b9\u30c8\u66f8\u3044\u3066\u3001\u30b3\u30fc\u30c9\u3092\u697d\u306b\u3088\u304f\u3067\u304d\u308b\u74b0\u5883\u4f5c\u308b\u3079\u3057\u3002\n\u6642\u9593\u3084\u3001\u7d0d\u671f\u3068\u306e\u517c\u306d\u5408\u3044\u306f\u96e3\u3057\u3044\u3051\u3069\u3001\u305d\u3053\u3092\u308f\u304b\u3089\u305b\u308b\u306e\u3082\u307e\u305f\u4ed5\u4e8b\u3002\u3002\u3002\n\n", "tags": ["PHP", "PHPUnit"]}