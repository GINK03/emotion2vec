{"context": "\n\nTensorFlow\n\n\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 1070 (8GB)\nASRock Z170M Pro4S [Intel Z170chipset]\nUbuntu 14.04 LTS desktop amd64\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v8.0\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\n\n\nv0.1 http://qiita.com/7of9/items/8b43357bcaea1f1bce4b\n\u753b\u50cf\u3092\u8907\u6570\u8868\u793a\u3059\u308b\u6642\u306b\u3001\uff11\u3064\u306e\u30da\u30fc\u30b8\u5185\u306e\u8868\u793a\u6570\u3092\u5897\u3084\u3059\u305f\u3081\u3001\u30a4\u30e1\u30fc\u30b8\u306e\u30b5\u30a4\u30ba\u3092\u8abf\u6574\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308b\u3002\n\u53c2\u8003 http://stackoverflow.com/questions/332289/how-do-you-change-the-size-of-figures-drawn-with-matplotlib\n\nanswered Nov 29 '10 at 17:30\nPete\n\nfig = matplotlib.pyplot.gcf()\nfig.set_size_inches(18.5, 10.5)\nfig.savefig('test2png.png', dpi=100)\n\n\u8a66\u3057\u3066\u307f\u305f\u3002\nshowIn2D_2image_subplot_each()\u306b\u304a\u3044\u3066\u3001fig1.set_size_inches(3.14,3.14)\u3068\u3057\u3066\u307f\u305f\u3002\n\nin100_out100.ipynb\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\n\n'''\nv0.4 Jan. 21, 2017\n  - set size of figures\nv0.3 Jan. 21, 2017\n  - show 2 images in one figure\nv0.2 Jan. 14, 2017\n  - calcOutput() return in numpy.array\n  - add saveToCsvFile()\nv0.1 Jan. 14, 2017\n  - add calcOutput()\n  - add showIn2D()\n  - show 1d in 2d format\n'''\n\nXDIM = 10\nYDIM = 10\nINDIM = XDIM * YDIM\n\n\ndef saveToCsvFile(data_1d, filename):\n    wrk_1d = data_1d.reshape(1,INDIM)\n    np.savetxt(filename, wrk_1d, delimiter=',')\n\n\ndef calcOutput(in_1d):\n    len_1d = XDIM * YDIM\n    out_1d = [0.0] * len_1d\n    for idx in range(0, in_1d.size):\n        out_1d[idx] = in_1d[len_1d - idx - 1]\n    return np.array(out_1d)\n\n\ndef showIn2D(data_1d):\n    # print(data_1d)\n    data_2d = np.reshape(data_1d, (XDIM, YDIM))\n    plt.imshow(data_2d, extent=(0, XDIM, 0, YDIM), cmap=cm.gist_rainbow)\n    plt.show()\n\ndef showIn2D_2image_subplot_each(data1_1d, data2_1d):\n    data1_2d = np.reshape(data1_1d, (XDIM, YDIM))\n    data2_2d = np.reshape(data2_1d, (XDIM, YDIM))\n    fig1 = plt.figure(1)\n    fig1.set_size_inches(3.14,3.14)\n    plt.subplot(121)\n    plt.title('input node')\n    plt.imshow(data1_2d, extent=(0, XDIM, 0, YDIM), cmap=cm.gist_rainbow)\n    plt.subplot(122)\n    plt.title('output node')\n    plt.imshow(data2_2d, extent=(0, XDIM, 0, YDIM), cmap=cm.gist_rainbow)    \n    plt.show()\n\ndef showIn2D_2image_subplot_first(data1_1d, data2_1d):\n    data1_2d = np.reshape(data1_1d, (XDIM, YDIM))\n    data2_2d = np.reshape(data2_1d, (XDIM, YDIM))\n    fig, (axL, axR) = plt.subplots(ncols=2, figsize=(10,4))\n    axL.imshow(data1_2d, extent=(0, XDIM, 0, YDIM), cmap=cm.gist_rainbow)\n    axL.grid(True)\n    axR.imshow(data2_2d, extent=(0, XDIM, 0, YDIM), cmap=cm.gist_rainbow)\n    axR.grid(True)\n    fig.show()    \n\nif __name__ == '__main__':\n    for loop in range(5):\n        in_1d = np.random.rand(INDIM)\n        out_1d = calcOutput(in_1d)    \n        showIn2D_2image_subplot_each(in_1d, out_1d)\n        showIn2D_2image_subplot_first(in_1d, out_1d)\n\n    saveToCsvFile(in_1d, 'test_in.csv')\n    saveToCsvFile(out_1d, 'test_out.csv')\n\n\n\n### TensorFlow\n\n```txt:\u52d5\u4f5c\u74b0\u5883\nGeForce GTX 1070 (8GB)\nASRock Z170M Pro4S [Intel Z170chipset]\nUbuntu 14.04 LTS desktop amd64\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v8.0\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4\n```\n\nv0.1 http://qiita.com/7of9/items/8b43357bcaea1f1bce4b\n\n\u753b\u50cf\u3092\u8907\u6570\u8868\u793a\u3059\u308b\u6642\u306b\u3001\uff11\u3064\u306e\u30da\u30fc\u30b8\u5185\u306e\u8868\u793a\u6570\u3092\u5897\u3084\u3059\u305f\u3081\u3001\u30a4\u30e1\u30fc\u30b8\u306e\u30b5\u30a4\u30ba\u3092\u8abf\u6574\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308b\u3002\n\n\u53c2\u8003 http://stackoverflow.com/questions/332289/how-do-you-change-the-size-of-figures-drawn-with-matplotlib\n\n> answered Nov 29 '10 at 17:30\n> Pete\n\n```\nfig = matplotlib.pyplot.gcf()\nfig.set_size_inches(18.5, 10.5)\nfig.savefig('test2png.png', dpi=100)\n```\n\n\u8a66\u3057\u3066\u307f\u305f\u3002\n\nshowIn2D_2image_subplot_each()\u306b\u304a\u3044\u3066\u3001` fig1.set_size_inches(3.14,3.14)`\u3068\u3057\u3066\u307f\u305f\u3002\n\n```py:in100_out100.ipynb\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\n\n'''\nv0.4 Jan. 21, 2017\n  - set size of figures\nv0.3 Jan. 21, 2017\n  - show 2 images in one figure\nv0.2 Jan. 14, 2017\n  - calcOutput() return in numpy.array\n  - add saveToCsvFile()\nv0.1 Jan. 14, 2017\n  - add calcOutput()\n  - add showIn2D()\n  - show 1d in 2d format\n'''\n\nXDIM = 10\nYDIM = 10\nINDIM = XDIM * YDIM\n\n\ndef saveToCsvFile(data_1d, filename):\n    wrk_1d = data_1d.reshape(1,INDIM)\n    np.savetxt(filename, wrk_1d, delimiter=',')\n\n    \ndef calcOutput(in_1d):\n    len_1d = XDIM * YDIM\n    out_1d = [0.0] * len_1d\n    for idx in range(0, in_1d.size):\n        out_1d[idx] = in_1d[len_1d - idx - 1]\n    return np.array(out_1d)\n\n\ndef showIn2D(data_1d):\n    # print(data_1d)\n    data_2d = np.reshape(data_1d, (XDIM, YDIM))\n    plt.imshow(data_2d, extent=(0, XDIM, 0, YDIM), cmap=cm.gist_rainbow)\n    plt.show()\n\ndef showIn2D_2image_subplot_each(data1_1d, data2_1d):\n    data1_2d = np.reshape(data1_1d, (XDIM, YDIM))\n    data2_2d = np.reshape(data2_1d, (XDIM, YDIM))\n    fig1 = plt.figure(1)\n    fig1.set_size_inches(3.14,3.14)\n    plt.subplot(121)\n    plt.title('input node')\n    plt.imshow(data1_2d, extent=(0, XDIM, 0, YDIM), cmap=cm.gist_rainbow)\n    plt.subplot(122)\n    plt.title('output node')\n    plt.imshow(data2_2d, extent=(0, XDIM, 0, YDIM), cmap=cm.gist_rainbow)    \n    plt.show()\n\ndef showIn2D_2image_subplot_first(data1_1d, data2_1d):\n    data1_2d = np.reshape(data1_1d, (XDIM, YDIM))\n    data2_2d = np.reshape(data2_1d, (XDIM, YDIM))\n    fig, (axL, axR) = plt.subplots(ncols=2, figsize=(10,4))\n    axL.imshow(data1_2d, extent=(0, XDIM, 0, YDIM), cmap=cm.gist_rainbow)\n    axL.grid(True)\n    axR.imshow(data2_2d, extent=(0, XDIM, 0, YDIM), cmap=cm.gist_rainbow)\n    axR.grid(True)\n    fig.show()    \n    \nif __name__ == '__main__':\n    for loop in range(5):\n        in_1d = np.random.rand(INDIM)\n        out_1d = calcOutput(in_1d)    \n        showIn2D_2image_subplot_each(in_1d, out_1d)\n        showIn2D_2image_subplot_first(in_1d, out_1d)\n    \n    saveToCsvFile(in_1d, 'test_in.csv')\n    saveToCsvFile(out_1d, 'test_out.csv')\n```\n\n![qiita.png](https://qiita-image-store.s3.amazonaws.com/0/32870/242374ea-9ecc-61be-6937-2bd8beb23beb.png)\n\n\n\n\n\n\n", "tags": ["Jupyter", "matplotlib", "difference", "borgWarp"]}