{"context": " More than 1 year has passed since last update.React\u30a2\u30d7\u30ea\u306f\u89aa\u5b50\u95a2\u4fc2\u304c\u3042\u308bcomponent\u3067\u69cb\u6210\u3055\u308c\u305f\u6728\u69cb\u9020\u306b\u306a\u308a\u307e\u3059\u3002Part1\u3067\u306f\u9759\u7684\u306acomponent\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u304c\u5b9f\u969b\u306ecomponent\u306fstate\u3068props\u3092\u6301\u3061\u307e\u3059\u3002ClojureScript\u306eReagent\u3067\u306fClojure\u306eatom\u3092\u62e1\u5f35\u3057\u3066\u4f7f\u3044React\u306estate\u3092\u62bd\u8c61\u5316\u3057\u307e\u3059\u3002state\u3068props\u306e\u53b3\u5bc6\u306a\u533a\u5225\u304c\u4e0d\u8981\u3067\u3001React\u3088\u308a\u3082\u8907\u96d1\u306a\u30e2\u30c7\u30eb\u3092component\u3067\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nReact\u306estate\u3068props\nReact\u30a2\u30d7\u30ea\u306fcomopnent\u3067\u69cb\u6210\u3057\u307e\u3059\u3002\u5b50component\u306e\u5171\u901a\u306e\u89aacomponent\u304cstate\u3092\u6301\u3061\u3001\u5b50component\u3078props\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002state\u3092\u6301\u3064\u3060\u3051\u306e\u89aacomponent\u3092\u4f5c\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\u89aa\u304c\u7ba1\u7406\u3092\u3057\u3066\u5b50\u306f\u4f7f\u3046\u95a2\u4fc2\u306b\u306a\u308a\u307e\u3059\u3002\n\nstate\u306e\u7279\u5fb4\n\n\u5024\u304c\u5909\u5316\u3059\u308b\nstate\u304c\u5909\u66f4\u3055\u308c\u308b\u3068component\u306f\u518d\u63cf\u753b\u3055\u308c\u308b\n\n\nprops\u306e\u7279\u5fb4\n\nimmutable\u3067\u5024\u304c\u5909\u5316\u3057\u306a\u3044\n\u89aa\u304b\u3089\u6e21\u3055\u308c\u308b\u5024\nstate\u3084\u4ed6\u306eprops\u304b\u3089\u8a08\u7b97\u3055\u308c\u308b\u5024\n\n\natom\nReagent\u3067\u306fstate\u3092atom\u3067\u62bd\u8c61\u5316\u3057\u307e\u3059\u3002\n\nstete\u3092\u5b9a\u7fa9\u3057\u3066\u5024\u306e\u5909\u5316\u3092\u76e3\u8996\u3059\u308b\n\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u304c\u5909\u5316\u3092\u53d7\u3051\u4ed8\u3051\u3066\u5024\u3092\u66f4\u65b0\u3059\u308b\n\n\nReagent\u72ec\u81ea\u306eatom\nReagent\u306eatom(ratom)\u306f\u901a\u5e38\u306eClojure\u306eatom\u3068\u540c\u3058\u3088\u3046\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002atom\u306e\u5024\u304c\u5909\u5316\u304c\u3042\u308b\u3068\u3001deref\u3057\u3066\u3044\u308b\u3059\u3079\u3066\u306ecomponent\u304c\u81ea\u52d5\u7684\u306b\u518d\u63cf\u753b\u3055\u308c\u308b\u70b9\u304c\u901a\u5e38\u306eatom\u3068\u306f\u7570\u306a\u308a\u307e\u3059\u3002\n\natom\u306e\u64cd\u4f5c\n\u526f\u4f5c\u7528\u306e\u95a2\u6570\u3092\u4f7f\u3063\u3066atom\u306e\u5024\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\u526f\u4f5c\u7528\u306e\u95a2\u6570\u306freset!\u3084swap!\u306e\u3088\u3046\u306b!\u3067suffix\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u4f7f\u3044\u65b9\n\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3057\u3066atom\u3068component\u306e\u4f7f\u3044\u65b9\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\nBUILDING SINGLE PAGE APPS WITH REAGENT\nStep 3: Identify the minimal (but complete) representation of UI state\nFunctional programming on frontend with React & ClojureScript\n\n\nglobal\u306aatom\n\u6b21\u306e\u4f8b\u3067\u306fdocument\u5168\u4f53\u306estate\u3092\u7ba1\u7406\u3059\u308bglobal\u306aatom\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n(def state (atom {:doc {} :saved? false}))\n\n(defn set-value! [id value]\n  (swap! state assoc :saved? false)\n  (swap! state assoc-in [:doc id] value))\n\natom\u306e\u5024\u3092\u53c2\u7167(deref)\u3059\u308b\u5834\u5408\u306f\u3001@state\u306e\u3088\u3046\u306b@\u3092prefix\u3057\u307e\u3059\u3002\n(defn get-value [id]\n  (get-in @state [:doc id]))\n\n\nhome component\nhome component\u304c\u4e00\u756a\u89aa\u306ecomponent\u306b\u306a\u308a\u307e\u3059\u3002input\u3001list\u3001button\u306ecomponent\u3092\u5b50\u306b\u6301\u3061\u307e\u3059\n(defn home []\n  [:div\n    [:div.page-header [:h1 \"Reagent Form\"]]\n\n    [text-input :first-name \"First name\"]\n    [text-input :last-name \"Last name\"]\n    [selection-list :favorite-drinks \"Favorite drinks\"\n     [:coffee \"Coffee\"]\n     [:beer \"Beer\"]\n     [:crab-juice \"Crab juice\"]]\n\n   (if (:saved? @state)\n     [:p \"Saved\"]\n     [:button {:type \"submit\"\n              :class \"btn btn-default\"\n              :onClick save-doc}\n     \"Submit\"])])\n\n\ninput component\ntext-input\u95a2\u6570\u306frow\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066component\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002row\u95a2\u6570\u306f\u76f4\u63a5\u5b9f\u884c\u305b\u305a\u30d9\u30af\u30bf\u30fc\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u95a2\u6570\u306e\u5b9f\u884c\u306fReagent\u304c\u5fc5\u8981\u306a\u3068\u304d\u306b\u81ea\u52d5\u7684\u306b\u884c\u3044\u307e\u3059\u3002onChange\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u706b\u3055\u308c\u308b\u3068set-value\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u3066input\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u65b0\u3057\u3044\u306e\u5024\u3067state\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\n(defn row [label input]\n  [:div.row\n    [:div.col-md-2 [:label label]]\n    [:div.col-md-5 input]])\n\n(defn text-input [id label]\n  [row label\n   [:input\n     {:type \"text\"\n       :class \"form-control\"\n       :value (get-value id)\n       :on-change #(set-value! id (-> % .-target .-value))}]])\n\n\n-> threading macro\n-> \u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u30de\u30af\u30ed\u306f\u5de6\u304b\u3089\u53f3\u306b\u9023\u7d9a\u3057\u3066\u6b21\u306e\u95a2\u6570\u306e\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002What does -> do in clojure?\u306b\u4f8b\u304c\u3042\u308a\u307e\u3059\u3002(+ 2 3)\u306e\u7d50\u679c\u306e5\u304c\u6b21\u306e\u95a2\u6570\u306e\u5148\u982d\u306b\u9001\u4fe1\u3055\u308c\u307e\u3059\u3002(- 5 7)\u3092\u8a55\u4fa1\u3059\u308b\u306e\u3067\u7d50\u679c\u306f-2\u306b\u306a\u308a\u307e\u3059\u3002\n(-> 2 (+ 3) (- 7))\n\n\nlist component\ncomopnent\u306e\u4e2d\u3067local\u306aatom\u3092let\u3067\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n(defn selection-list [id label & items]\n  (let [selections (->> items (map (fn [[k]] [k false])) (into {}) atom)]    \n    (fn []\n      [:div.row\n       [:div.col-md-2 [:span label]]\n       [:div.col-md-5\n        [:div.row\n         (for [[k v] items]\n          [list-item id k v selections])]]])))\n\nlist-item\u95a2\u6570\u306fli component\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002onClkick\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u706b\u3055\u308c\u308b\u3068atom\u306eselections\u306b\u65b0\u3057\u3044\u5024\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n(defn list-item [id k v selections]\n  (letfn [(handle-click! []\n            (swap! selections update-in [k] not)\n            (set-value! id (->> @selections\n                                (filter second)\n                                (map first))))]\n    [:li {:class (str \"list-group-item\"\n                      (if (k @selections) \" active\"))\n          :on-click handle-click!}\n      v]))\n\n\n->> threading macro\n->> \u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u30de\u30af\u30ed\u306f\u3001-> \u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u30de\u30af\u30ed\u3068\u8a55\u4fa1\u306e\u9806\u756a\u304c\u7570\u306a\u308a\u307e\u3059\u3002->\u306f\u6700\u521d\u306b->>\u306f\u6700\u5f8c\u306b\u633f\u5165\u3055\u308c\u307e\u3059\u3002(-> 2 (+ 3) (- 7))\u306f-2\u3067\u3057\u305f\u304c\u3001(->> 2 (+ 3) (- 7))\u306e\u5834\u5408\u306f2\u306b\u306a\u308a\u307e\u3059\u3002(+ 3 2)\u306e\u7d50\u679c\u306e5\u304c(- 7 5)\u306e\u3088\u3046\u306b\u6700\u5f8c\u306b\u5165\u308a\u307e\u3059\u3002\n(->> @selections\n     (filter second)\n     (map first))\n\n(filter second @selections)\u3067\u30d5\u30a3\u30eb\u30bf\u3057\u305f\u7d50\u679c\u306ecollection\u3092(map first coll)\u3057\u307e\u3059\u3002\n\nlocal\u306eatom\natom\u306eselections\u306fselection-list\u95a2\u6570\u5185\u3067let\u3092\u4f7f\u3044local\u306eatom\u3068\u3057\u3066->>\u30de\u30af\u30ed\u3092\u4f7f\u3044\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n(defn selection-list [id label & items]\n  (let [selections (->> items (map (fn [[k]] [k false])) (into {}) atom)]\n...\n\nitems\u30d9\u30af\u30bf\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a[\u30ad\u30fc\u30ef\u30fc\u30c9 \u30b7\u30f3\u30dc\u30eb]\u306e\u30d9\u30af\u30bf\u30fc\u3092\u8981\u7d20\u306b\u6301\u3061\u307e\u3059\u3002ClojureScript REPL\u3092\u8d77\u52d5\u3057\u3066\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\ncljs.user=> (def items [[:coffee \"Coffee\"] [:beer \"Beer\"] [:crab-juice \"Crab juice\"]])\n[[:coffee \"Coffee\"] [:beer \"Beer\"] [:crab-juice \"Crab juice\"]]\n\n->>\u30de\u30af\u30ed\u3067items\u306fmap\u95a2\u6570\u306e\u5f8c\u308d\u306e\u5f15\u6570\u306b\u5165\u308a\u307e\u3059\u3002[[k]]\u3067\u30d9\u30af\u30bf\u30fc\u3092destructuring\u3057\u3066\u5148\u982d\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3092k\u306e\u30b7\u30f3\u30dc\u30eb\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u307e\u3059\u3002map\u95a2\u6570\u3067\u306fitem\u306e\u8981\u7d20\u3054\u3068\u306b[\u30ad\u30fc\u30ef\u30fc\u30c9 false]\u306e\u65b0\u3057\u3044\u30d9\u30af\u30bf\u30fc\u3092\u8fd4\u3057\u307e\u3059\u3002\ncljs.user=> (def items_keys (map (fn [[k]] [k false]) items))\n([:coffee false] [:beer false] [:crab-juice false])\n\nmap\u95a2\u6570\u306e\u7d50\u679c\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f->>\u30de\u30af\u30ed\u3067\u6b21\u306einto\u95a2\u6570\u306e\u5f15\u6570\u306e\u5f8c\u308d\u306b\u5165\u308amap\u3092\u3064\u304f\u308a\u307e\u3059\u3002\ncljs.user=> (def items_map (into {} items_keys))\n{:coffee false, :beer false, :crab-juice false}\n\n\u6700\u5f8c\u306batom\u95a2\u6570\u306e\u5f15\u6570\u306bmap\u304c\u6e21\u308aatom\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\ncljs.user=> (require '[reagent.core :as reagent :refer [atom]])\nnil\ncljs.user=> (def selections (atom items_map))\n#<Atom: {:coffee false, :beer false, :crab-juice false}>\ncljs.user=> @selections\n{:coffee false, :beer false, :crab-juice false}\n\n:beer\u306eitem\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u3066onClick\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u706b\u3055\u308c\u308b\u3068\u3001selections\u304c\u4fdd\u6301\u3059\u308b\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u8a72\u5f53\u3059\u308bbool\u5024\u3092\u53cd\u8ee2\u3055\u305b\u307e\u3059\u3002\ncljs.user=> (swap! selections update-in [:beer] not)\n{:coffee false, :beer true, :crab-juice false}\n\n\u6b21\u306e->>\u30de\u30af\u30ed\u3092\u5b9f\u884c\u3057\u3066\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f:beer\u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u5024\u3092local\u306eatom\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002\ncljs.user=> (->> @selections (filter second) (map first))\n(:beer)\n\nglobal\u306aatom\u306estate\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5168\u4f53\u306estate\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u3002\ncljs.user=> (def state (atom {:doc {} :saved? false}))\n#<Atom: {:doc {}, :saved? false}>\n\nlist component\u306e\u4e2d\u3067\u4fdd\u6301\u3057\u3066\u3044\u308blocal\u306aatom\u3092\u30af\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u306b\u3088\u3063\u3066\u66f4\u65b0\u3057\u305f\u3042\u3068\u3001global\u306aatom\u306estate\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\u9078\u629e\u3055\u308c\u305fitem component\u306e:beer\u30ad\u30fc\u30ef\u30fc\u30c9\u3068list component\u306e:favorite-drinks\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3044global\u306eatom\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\ncljs.user=> (swap! state assoc :saved? false)\n{:doc {}, :saved? false}\ncljs.user=> (swap! state assoc-in [:doc :favorite-drinks] :beer))\n{:doc {:favorite-drinks :beer}, :saved? false}\n\n[React](https://facebook.github.io/react/)\u30a2\u30d7\u30ea\u306f\u89aa\u5b50\u95a2\u4fc2\u304c\u3042\u308bcomponent\u3067\u69cb\u6210\u3055\u308c\u305f\u6728\u69cb\u9020\u306b\u306a\u308a\u307e\u3059\u3002[Part1](http://qiita.com/masato/items/d284c028ca1fd06adb60)\u3067\u306f\u9759\u7684\u306acomponent\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u304c\u5b9f\u969b\u306ecomponent\u306fstate\u3068props\u3092\u6301\u3061\u307e\u3059\u3002[ClojureScript](https://github.com/clojure/clojurescript)\u306e[Reagent](http://reagent-project.github.io/)\u3067\u306f[Clojure](http://clojure.org/)\u306e[atom](https://clojuredocs.org/clojure.core/atom)\u3092\u62e1\u5f35\u3057\u3066\u4f7f\u3044React\u306estate\u3092\u62bd\u8c61\u5316\u3057\u307e\u3059\u3002state\u3068props\u306e\u53b3\u5bc6\u306a\u533a\u5225\u304c\u4e0d\u8981\u3067\u3001React\u3088\u308a\u3082\u8907\u96d1\u306a\u30e2\u30c7\u30eb\u3092component\u3067\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n## React\u306estate\u3068props\n\n[React]()\u30a2\u30d7\u30ea\u306fcomopnent\u3067\u69cb\u6210\u3057\u307e\u3059\u3002\u5b50component\u306e\u5171\u901a\u306e\u89aacomponent\u304cstate\u3092\u6301\u3061\u3001\u5b50component\u3078props\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002state\u3092\u6301\u3064\u3060\u3051\u306e\u89aacomponent\u3092\u4f5c\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\u89aa\u304c\u7ba1\u7406\u3092\u3057\u3066\u5b50\u306f\u4f7f\u3046\u95a2\u4fc2\u306b\u306a\u308a\u307e\u3059\u3002\n\n### state\u306e\u7279\u5fb4\n\n* \u5024\u304c\u5909\u5316\u3059\u308b\n* state\u304c\u5909\u66f4\u3055\u308c\u308b\u3068component\u306f\u518d\u63cf\u753b\u3055\u308c\u308b\n\n### props\u306e\u7279\u5fb4\n\n* immutable\u3067\u5024\u304c\u5909\u5316\u3057\u306a\u3044\n* \u89aa\u304b\u3089\u6e21\u3055\u308c\u308b\u5024\n* state\u3084\u4ed6\u306eprops\u304b\u3089\u8a08\u7b97\u3055\u308c\u308b\u5024\n\n## atom\n\nReagent\u3067\u306fstate\u3092atom\u3067\u62bd\u8c61\u5316\u3057\u307e\u3059\u3002\n\n* stete\u3092\u5b9a\u7fa9\u3057\u3066\u5024\u306e\u5909\u5316\u3092\u76e3\u8996\u3059\u308b\n* \u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u304c\u5909\u5316\u3092\u53d7\u3051\u4ed8\u3051\u3066\u5024\u3092\u66f4\u65b0\u3059\u308b\n\n### Reagent\u72ec\u81ea\u306eatom\n\nReagent\u306eatom(ratom)\u306f\u901a\u5e38\u306eClojure\u306eatom\u3068\u540c\u3058\u3088\u3046\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002atom\u306e\u5024\u304c\u5909\u5316\u304c\u3042\u308b\u3068\u3001deref\u3057\u3066\u3044\u308b\u3059\u3079\u3066\u306ecomponent\u304c\u81ea\u52d5\u7684\u306b\u518d\u63cf\u753b\u3055\u308c\u308b\u70b9\u304c\u901a\u5e38\u306eatom\u3068\u306f\u7570\u306a\u308a\u307e\u3059\u3002\n\n### atom\u306e\u64cd\u4f5c\n\n\u526f\u4f5c\u7528\u306e\u95a2\u6570\u3092\u4f7f\u3063\u3066atom\u306e\u5024\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\u526f\u4f5c\u7528\u306e\u95a2\u6570\u306f[reset!](https://clojuredocs.org/clojure.core/reset!)\u3084[swap!](https://clojuredocs.org/clojure.core/swap!)\u306e\u3088\u3046\u306b`!`\u3067suffix\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n## \u4f7f\u3044\u65b9\n\n\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u8003\u306b\u3057\u3066atom\u3068component\u306e\u4f7f\u3044\u65b9\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n* [BUILDING SINGLE PAGE APPS WITH REAGENT](http://yogthos.net/posts/2014-07-15-Building-Single-Page-Apps-with-Reagent.html)\n* [Step 3: Identify the minimal (but complete) representation of UI state](http://facebook.github.io/react/docs/thinking-in-react.html#step-3-identify-the-minimal-but-complete-representation-of-ui-state)\n* [Functional programming on frontend with React & ClojureScript](http://blog.scalac.io/2015/04/02/clojurescript-reactjs-reagent.html)\n\n\n### global\u306aatom\n\n\u6b21\u306e\u4f8b\u3067\u306fdocument\u5168\u4f53\u306estate\u3092\u7ba1\u7406\u3059\u308bglobal\u306aatom\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\n```clj\n(def state (atom {:doc {} :saved? false}))\n\n(defn set-value! [id value]\n  (swap! state assoc :saved? false)\n  (swap! state assoc-in [:doc id] value))\n```\n\natom\u306e\u5024\u3092\u53c2\u7167(deref)\u3059\u308b\u5834\u5408\u306f\u3001`@state`\u306e\u3088\u3046\u306b`@`\u3092prefix\u3057\u307e\u3059\u3002\n\n```clj\n(defn get-value [id]\n  (get-in @state [:doc id]))\n```\n\n### home component\n\nhome component\u304c\u4e00\u756a\u89aa\u306ecomponent\u306b\u306a\u308a\u307e\u3059\u3002input\u3001list\u3001button\u306ecomponent\u3092\u5b50\u306b\u6301\u3061\u307e\u3059\n\n````clj\n(defn home []\n  [:div\n    [:div.page-header [:h1 \"Reagent Form\"]]\n\n    [text-input :first-name \"First name\"]\n    [text-input :last-name \"Last name\"]\n    [selection-list :favorite-drinks \"Favorite drinks\"\n     [:coffee \"Coffee\"]\n     [:beer \"Beer\"]\n     [:crab-juice \"Crab juice\"]]\n\n   (if (:saved? @state)\n     [:p \"Saved\"]\n     [:button {:type \"submit\"\n              :class \"btn btn-default\"\n              :onClick save-doc}\n     \"Submit\"])])\n```\n\n\n\n### input component\n\n`text-input`\u95a2\u6570\u306f`row`\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066component\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002`row`\u95a2\u6570\u306f\u76f4\u63a5\u5b9f\u884c\u305b\u305a\u30d9\u30af\u30bf\u30fc\u3067\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u95a2\u6570\u306e\u5b9f\u884c\u306fReagent\u304c\u5fc5\u8981\u306a\u3068\u304d\u306b\u81ea\u52d5\u7684\u306b\u884c\u3044\u307e\u3059\u3002onChange\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u706b\u3055\u308c\u308b\u3068`set-value`\u95a2\u6570\u304c\u5b9f\u884c\u3055\u308c\u3066input\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u65b0\u3057\u3044\u306e\u5024\u3067state\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\n\n```clj\n(defn row [label input]\n  [:div.row\n    [:div.col-md-2 [:label label]]\n    [:div.col-md-5 input]])\n\n(defn text-input [id label]\n  [row label\n   [:input\n     {:type \"text\"\n       :class \"form-control\"\n       :value (get-value id)\n       :on-change #(set-value! id (-> % .-target .-value))}]])\n```\n\n### -> threading macro\n\n`->` \u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u30de\u30af\u30ed\u306f\u5de6\u304b\u3089\u53f3\u306b\u9023\u7d9a\u3057\u3066\u6b21\u306e\u95a2\u6570\u306e\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002[What does -> do in clojure?](http://stackoverflow.com/questions/4579226/what-does-do-in-clojure)\u306b\u4f8b\u304c\u3042\u308a\u307e\u3059\u3002(+ 2 3)\u306e\u7d50\u679c\u306e5\u304c\u6b21\u306e\u95a2\u6570\u306e\u5148\u982d\u306b\u9001\u4fe1\u3055\u308c\u307e\u3059\u3002(- 5 7)\u3092\u8a55\u4fa1\u3059\u308b\u306e\u3067\u7d50\u679c\u306f-2\u306b\u306a\u308a\u307e\u3059\u3002\n\n```clj\n(-> 2 (+ 3) (- 7))\n```\n\n\n### list component\n\ncomopnent\u306e\u4e2d\u3067local\u306aatom\u3092let\u3067\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```clj\n(defn selection-list [id label & items]\n  (let [selections (->> items (map (fn [[k]] [k false])) (into {}) atom)]    \n    (fn []\n      [:div.row\n       [:div.col-md-2 [:span label]]\n       [:div.col-md-5\n        [:div.row\n         (for [[k v] items]\n          [list-item id k v selections])]]])))\n```\n\n`list-item`\u95a2\u6570\u306fli component\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002onClkick\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u706b\u3055\u308c\u308b\u3068atom\u306eselections\u306b\u65b0\u3057\u3044\u5024\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\n```clj\n(defn list-item [id k v selections]\n  (letfn [(handle-click! []\n            (swap! selections update-in [k] not)\n            (set-value! id (->> @selections\n                                (filter second)\n                                (map first))))]\n    [:li {:class (str \"list-group-item\"\n                      (if (k @selections) \" active\"))\n          :on-click handle-click!}\n      v]))\n```\n\n### ->> threading macro\n\n`->>` \u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u30de\u30af\u30ed\u306f\u3001`->` \u30b9\u30ec\u30c3\u30c7\u30a3\u30f3\u30b0\u30de\u30af\u30ed\u3068\u8a55\u4fa1\u306e\u9806\u756a\u304c\u7570\u306a\u308a\u307e\u3059\u3002`->`\u306f\u6700\u521d\u306b`->>`\u306f\u6700\u5f8c\u306b\u633f\u5165\u3055\u308c\u307e\u3059\u3002`(-> 2 (+ 3) (- 7))`\u306f`-2`\u3067\u3057\u305f\u304c\u3001`(->> 2 (+ 3) (- 7))`\u306e\u5834\u5408\u306f`2`\u306b\u306a\u308a\u307e\u3059\u3002`(+ 3 2)`\u306e\u7d50\u679c\u306e`5`\u304c`(- 7 5)`\u306e\u3088\u3046\u306b\u6700\u5f8c\u306b\u5165\u308a\u307e\u3059\u3002\n\n```clj\n(->> @selections\n     (filter second)\n     (map first))\n```\n\n`(filter second @selections)`\u3067\u30d5\u30a3\u30eb\u30bf\u3057\u305f\u7d50\u679c\u306ecollection\u3092`(map first coll)`\u3057\u307e\u3059\u3002\n\n### local\u306eatom\n\natom\u306eselections\u306f`selection-list`\u95a2\u6570\u5185\u3067let\u3092\u4f7f\u3044local\u306eatom\u3068\u3057\u3066`->>`\u30de\u30af\u30ed\u3092\u4f7f\u3044\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```clj\n(defn selection-list [id label & items]\n  (let [selections (->> items (map (fn [[k]] [k false])) (into {}) atom)]\n...\n```\n\nitems\u30d9\u30af\u30bf\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a`[\u30ad\u30fc\u30ef\u30fc\u30c9 \u30b7\u30f3\u30dc\u30eb]`\u306e\u30d9\u30af\u30bf\u30fc\u3092\u8981\u7d20\u306b\u6301\u3061\u307e\u3059\u3002ClojureScript REPL\u3092\u8d77\u52d5\u3057\u3066\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\n```clj\ncljs.user=> (def items [[:coffee \"Coffee\"] [:beer \"Beer\"] [:crab-juice \"Crab juice\"]])\n[[:coffee \"Coffee\"] [:beer \"Beer\"] [:crab-juice \"Crab juice\"]]\n```\n\n`->>`\u30de\u30af\u30ed\u3067items\u306fmap\u95a2\u6570\u306e\u5f8c\u308d\u306e\u5f15\u6570\u306b\u5165\u308a\u307e\u3059\u3002`[[k]]`\u3067\u30d9\u30af\u30bf\u30fc\u3092destructuring\u3057\u3066\u5148\u982d\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3092`k`\u306e\u30b7\u30f3\u30dc\u30eb\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u307e\u3059\u3002map\u95a2\u6570\u3067\u306fitem\u306e\u8981\u7d20\u3054\u3068\u306b`[\u30ad\u30fc\u30ef\u30fc\u30c9 false]`\u306e\u65b0\u3057\u3044\u30d9\u30af\u30bf\u30fc\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```clj\ncljs.user=> (def items_keys (map (fn [[k]] [k false]) items))\n([:coffee false] [:beer false] [:crab-juice false])\n```\n\nmap\u95a2\u6570\u306e\u7d50\u679c\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f`->>`\u30de\u30af\u30ed\u3067\u6b21\u306einto\u95a2\u6570\u306e\u5f15\u6570\u306e\u5f8c\u308d\u306b\u5165\u308amap\u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\n```clj\ncljs.user=> (def items_map (into {} items_keys))\n{:coffee false, :beer false, :crab-juice false}\n```\n\n\u6700\u5f8c\u306batom\u95a2\u6570\u306e\u5f15\u6570\u306bmap\u304c\u6e21\u308aatom\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```clj\ncljs.user=> (require '[reagent.core :as reagent :refer [atom]])\nnil\ncljs.user=> (def selections (atom items_map))\n#<Atom: {:coffee false, :beer false, :crab-juice false}>\ncljs.user=> @selections\n{:coffee false, :beer false, :crab-juice false}\n```\n\n`:beer`\u306eitem\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u3066onClick\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u706b\u3055\u308c\u308b\u3068\u3001selections\u304c\u4fdd\u6301\u3059\u308b\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u8a72\u5f53\u3059\u308bbool\u5024\u3092\u53cd\u8ee2\u3055\u305b\u307e\u3059\u3002\n\n```clj\ncljs.user=> (swap! selections update-in [:beer] not)\n{:coffee false, :beer true, :crab-juice false}\n```\n\n\u6b21\u306e`->>`\u30de\u30af\u30ed\u3092\u5b9f\u884c\u3057\u3066\u30af\u30ea\u30c3\u30af\u3055\u308c\u305f`:beer`\u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u5024\u3092local\u306eatom\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```clj\ncljs.user=> (->> @selections (filter second) (map first))\n(:beer)\n```\n\nglobal\u306aatom\u306estate\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5168\u4f53\u306e`state`\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u3002\n\n```clj\ncljs.user=> (def state (atom {:doc {} :saved? false}))\n#<Atom: {:doc {}, :saved? false}>\n```\n\nlist component\u306e\u4e2d\u3067\u4fdd\u6301\u3057\u3066\u3044\u308blocal\u306aatom\u3092\u30af\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u306b\u3088\u3063\u3066\u66f4\u65b0\u3057\u305f\u3042\u3068\u3001global\u306aatom\u306estate\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\u9078\u629e\u3055\u308c\u305fitem component\u306e`:beer`\u30ad\u30fc\u30ef\u30fc\u30c9\u3068list component\u306e`:favorite-drinks`\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u4f7f\u3044global\u306eatom\u3092\u66f4\u65b0\u3057\u307e\u3059\u3002\n\n```clj\ncljs.user=> (swap! state assoc :saved? false)\n{:doc {}, :saved? false}\ncljs.user=> (swap! state assoc-in [:doc :favorite-drinks] :beer))\n{:doc {:favorite-drinks :beer}, :saved? false}\n```\n", "tags": ["reactjs", "Reagent", "ClojureScript", "Clojure"]}