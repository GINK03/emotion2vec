{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u6700\u8fd1\u3001Java\u3084Objective-C\u3067\u3044\u308f\u3086\u308b\u30aa\u30d6\u30b6\u30fc\u30d0\u30fc\u30fb\u30d1\u30bf\u30fc\u30f3(Observer pattern)\u3092\u4f7f\u3046\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067\u3001C++\u3067\u3082\u3084\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u63a2\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u3059\u308b\u3068\u3001\u30b7\u30b0\u30ca\u30eb\u30fb\u30b9\u30ed\u30c3\u30c8\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3092\u767a\u898b\u3057\u3001\u3061\u3087\u3046\u3069Boost\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306b\u3088\u3055\u305d\u3046\u306a\u306e\u304c\u3042\u3063\u305f\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4f55\u3088\u308a\u3001\u540d\u524d\u304c\u3061\u3087\u3063\u3068\u683c\u597d\u3044\u3044\u3067\u3059\u3088\u306d\u3000\u2190\n\n\u30b7\u30b0\u30ca\u30eb\u3068\u30b9\u30ed\u30c3\u30c8\u3068\u306f\u4f55\u304b\uff1f\n\u30b7\u30b0\u30ca\u30eb\u3068\u30b9\u30ed\u30c3\u30c8\u3068\u306f\u4f55\u304b\u3068\u3044\u3046\u306e\u304c\u3001\u307e\u305a\u3001\u3042\u3084\u3075\u3084\u3060\u3063\u305f\u306e\u3067\u8abf\u3079\u307e\u3057\u305f\u3002\n\u307e\u3042\u3001\u3050\u3050\u3063\u305f\u3060\u3051\u306a\u306e\u3067\u8abf\u3079\u305f\u3046\u3061\u306b\u306f\u5165\u3089\u306a\u3044\u306e\u3067\u3001\u3042\u3048\u3066\u8f09\u305b\u307e\u305b\u3093\u304c\u30fb\u30fb\u30fb\u3002\n\u4e00\u8a00\u3067\u8a00\u3046\u3068\u3001Qt\u3068\u3044\u3046\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u901a\u77e5\u3092\u9001\u308b\u4ed5\u7d44\u307f\u306e\u3088\u3046\u3067\u3059\u306d\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u8a66\u3057\u3066\u307f\u308b\n\u3068\u308a\u3042\u3048\u305a\u3001\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\uff01\ndemo_model\u306a\u308b\u30e2\u30c7\u30eb\u304c\u3042\u308a\u3001\u72b6\u614b\u304c\u5909\u308f\u308b\u3068\u30b7\u30b0\u30ca\u30eb\u3092\u767a\u751f\u3057\u3066\u901a\u77e5\u3092\u9001\u308b\u3068\u3044\u3046\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u5984\u60f3\u3057\u3066\u3044\u307e\u3059\u3002\n\ndemo1.cpp\n#include <iostream>\n#include <boost/system/error_code.hpp>\n#include <boost/signals2.hpp>\n#include <boost/asio.hpp>\n\nclass demo_model\n{\npublic:\n    demo_model(boost::asio::io_service& io_service)\n    :   io_service_(io_service)\n    ,   timer_(io_service)\n    {}\n\n    boost::signals2::signal<void ()> signal;\n\n    void do_something()\n    {\n        timer_.expires_from_now(boost::posix_time::seconds(5));\n        timer_.async_wait([this](boost::system::error_code const& ec)\n        {\n            if (ec) return;\n\n            this->signal();\n        });\n    }\n\nprivate:\n    boost::asio::io_service& io_service_;\n    boost::asio::deadline_timer timer_;\n};\n\nint main()\n{\n    using namespace std;\n\n    boost::asio::io_service io_service;\n    demo_model m(io_service);\n\n    m.signal.connect([]{ cout << \"Signalled! (1)\" << endl; });\n    m.signal.connect([]{ cout << \"Signalled! (2)\" << endl; });\n\n    m.do_something();\n\n    io_service.run();\n\n    return 0;\n}\n\n\n\u30d3\u30eb\u30c9\u306b\u4f7f\u3063\u305fbjam\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\n\nJamroot.jam\nimport testing ;\nimport os ;\n\nBOOST_INCLUDE = [ os.environ BOOST_ROOT ] ;\n\nrun demo1.cpp\n    :\n    :\n    :\n    <include>$(BOOST_INCLUDE)\n    <toolset>clang:<cxxflags>-std=c++11\n    <toolset>gcc:<cxxflags>-std=gnu++0x\n    <define>BOOST_ERROR_CODE_HEADER_ONLY\n    ;\n\n\n\uff15\u79d2\u5f8c\u306b\u3001Signalled!\u3063\u3066\u3044\u3046\u306e\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u4f7f\u3063\u3066\u307f\u3066\n\u7279\u306b\u3001\u4f55\u304b\u306b\u306f\u307e\u308b\u3053\u3068\u3082\u306a\u304f\u7c21\u5358\u3067\u3057\u305f\u3002\n\u3080\u3057\u308d\u3001Jamroot\u306e\u66f8\u304d\u65b9\u3092\u601d\u3044\u51fa\u3059\u306e\u306b\u82e6\u52b4\u3057\u307e\u3057\u305f\u3002\n\u3082\u3057\u3001\u9700\u8981\u304c\u3042\u308c\u3070\u3001\u30b5\u30f3\u30d7\u30eb\u3067\u4f5c\u3063\u3066\u307f\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u89e3\u8aac\u3082\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u306f\u3058\u3081\u306b\n=======\n\n\u6700\u8fd1\u3001Java\u3084Objective-C\u3067\u3044\u308f\u3086\u308b\u30aa\u30d6\u30b6\u30fc\u30d0\u30fc\u30fb\u30d1\u30bf\u30fc\u30f3(Observer pattern)\u3092\u4f7f\u3046\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067\u3001C++\u3067\u3082\u3084\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u63a2\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\n\u3059\u308b\u3068\u3001\u30b7\u30b0\u30ca\u30eb\u30fb\u30b9\u30ed\u30c3\u30c8\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3092\u767a\u898b\u3057\u3001\u3061\u3087\u3046\u3069Boost\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306b\u3088\u3055\u305d\u3046\u306a\u306e\u304c\u3042\u3063\u305f\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4f55\u3088\u308a\u3001\u540d\u524d\u304c\u3061\u3087\u3063\u3068\u683c\u597d\u3044\u3044\u3067\u3059\u3088\u306d\u3000\u2190\n\n\n\u30b7\u30b0\u30ca\u30eb\u3068\u30b9\u30ed\u30c3\u30c8\u3068\u306f\u4f55\u304b\uff1f\n-------------------------\n\n\u30b7\u30b0\u30ca\u30eb\u3068\u30b9\u30ed\u30c3\u30c8\u3068\u306f\u4f55\u304b\u3068\u3044\u3046\u306e\u304c\u3001\u307e\u305a\u3001\u3042\u3084\u3075\u3084\u3060\u3063\u305f\u306e\u3067\u8abf\u3079\u307e\u3057\u305f\u3002\n\n\u307e\u3042\u3001\u3050\u3050\u3063\u305f\u3060\u3051\u306a\u306e\u3067\u8abf\u3079\u305f\u3046\u3061\u306b\u306f\u5165\u3089\u306a\u3044\u306e\u3067\u3001\u3042\u3048\u3066\u8f09\u305b\u307e\u305b\u3093\u304c\u30fb\u30fb\u30fb\u3002\n\n\u4e00\u8a00\u3067\u8a00\u3046\u3068\u3001Qt\u3068\u3044\u3046\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u901a\u77e5\u3092\u9001\u308b\u4ed5\u7d44\u307f\u306e\u3088\u3046\u3067\u3059\u306d\u3002\n\n\n\u3068\u308a\u3042\u3048\u305a\u8a66\u3057\u3066\u307f\u308b\n=================\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\uff01\n\ndemo_model\u306a\u308b\u30e2\u30c7\u30eb\u304c\u3042\u308a\u3001\u72b6\u614b\u304c\u5909\u308f\u308b\u3068\u30b7\u30b0\u30ca\u30eb\u3092\u767a\u751f\u3057\u3066\u901a\u77e5\u3092\u9001\u308b\u3068\u3044\u3046\u30b7\u30c1\u30e5\u30a8\u30fc\u30b7\u30e7\u30f3\u3092\u5984\u60f3\u3057\u3066\u3044\u307e\u3059\u3002\n\n```cpp:demo1.cpp\n#include <iostream>\n#include <boost/system/error_code.hpp>\n#include <boost/signals2.hpp>\n#include <boost/asio.hpp>\n\nclass demo_model\n{\npublic:\n    demo_model(boost::asio::io_service& io_service)\n    :   io_service_(io_service)\n    ,   timer_(io_service)\n    {}\n\n    boost::signals2::signal<void ()> signal;\n\n    void do_something()\n    {\n        timer_.expires_from_now(boost::posix_time::seconds(5));\n        timer_.async_wait([this](boost::system::error_code const& ec)\n        {\n            if (ec) return;\n\n            this->signal();\n        });\n    }\n\nprivate:\n    boost::asio::io_service& io_service_;\n    boost::asio::deadline_timer timer_;\n};\n\nint main()\n{\n    using namespace std;\n\n    boost::asio::io_service io_service;\n    demo_model m(io_service);\n\n    m.signal.connect([]{ cout << \"Signalled! (1)\" << endl; });\n    m.signal.connect([]{ cout << \"Signalled! (2)\" << endl; });\n\n    m.do_something();\n\n    io_service.run();\n\n    return 0;\n}\n```\n\n\u30d3\u30eb\u30c9\u306b\u4f7f\u3063\u305fbjam\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\n\n```text:Jamroot.jam\nimport testing ;\nimport os ;\n\nBOOST_INCLUDE = [ os.environ BOOST_ROOT ] ;\n\nrun demo1.cpp\n    :\n    :\n    :\n    <include>$(BOOST_INCLUDE)\n    <toolset>clang:<cxxflags>-std=c++11\n    <toolset>gcc:<cxxflags>-std=gnu++0x\n    <define>BOOST_ERROR_CODE_HEADER_ONLY\n    ;\n```\n\n\uff15\u79d2\u5f8c\u306b\u3001Signalled!\u3063\u3066\u3044\u3046\u306e\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\n\n\u4f7f\u3063\u3066\u307f\u3066\n=========\n\n\u7279\u306b\u3001\u4f55\u304b\u306b\u306f\u307e\u308b\u3053\u3068\u3082\u306a\u304f\u7c21\u5358\u3067\u3057\u305f\u3002\n\n\u3080\u3057\u308d\u3001Jamroot\u306e\u66f8\u304d\u65b9\u3092\u601d\u3044\u51fa\u3059\u306e\u306b\u82e6\u52b4\u3057\u307e\u3057\u305f\u3002\n\n\u3082\u3057\u3001\u9700\u8981\u304c\u3042\u308c\u3070\u3001\u30b5\u30f3\u30d7\u30eb\u3067\u4f5c\u3063\u3066\u307f\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u89e3\u8aac\u3082\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\n", "tags": ["C++", "boost", "C++11"]}