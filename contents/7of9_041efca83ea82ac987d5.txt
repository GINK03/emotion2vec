{"context": " More than 1 year has passed since last update.Unity\u306eTutorial\u306a\u3069\u3067Conditional\u3068\u3044\u3046\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u898b\u304b\u3051\u305f\u3002\nC#\u306e\u6a5f\u80fd\u3089\u3057\u3044\u3002\nhttps://msdn.microsoft.com/en-us/library/4xssyw96(v=vs.90).aspx\n#define TRACE_ON\nusing System;\nusing System.Diagnostics;\n\npublic class Trace\n{\n    [Conditional(\"TRACE_ON\")]\n    public static void Msg(string msg)\n    {\n        Console.WriteLine(msg);\n    }\n}\n\npublic class ProgramClass\n{\n    static void Main()\n    {\n        Trace.Msg(\"Now in Main...\");\n        Console.WriteLine(\"Done.\");\n    }\n}\n\nTRACE_ON\u306e#define\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3068Trace.Msg()\u304c\u5b9f\u884c\u3055\u308c\u306a\u304f\u306a\u308b\u3002\n\u4e0a\u8a18\u306emicrosoft\u306e\u30ea\u30f3\u30af\u3067\u306f\n\nUsing Conditional is a cleaner, more elegant, and less error-prone alternative to enclosing methods inside , \n\n\u305f\u3060\u3001\u8907\u6570\u306e\u6761\u4ef6\u3092AND\u3067\u4f7f\u3046\u3068\u304d\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b3\u30fc\u30c9\u304c\u5197\u9577\u306b\u306a\u308b\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3002\n[Conditional(\"A\")]\nstatic void DoIfA()\n{\n    DoIfAandB();\n}\n\n[Conditional(\"B\")]\nstatic void DoIfAandB()\n{\n    // Code to execute when both A and B are defined...\n}\n\n\u3053\u308c\u306f#if defined()\u3092\u4f7f\u3046\u65b9\u304c\u3044\u3044\u304b\u3082\u3002\nUnity\u306eTutorial\u306a\u3069\u3067Conditional\u3068\u3044\u3046\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u898b\u304b\u3051\u305f\u3002\n\nC#\u306e\u6a5f\u80fd\u3089\u3057\u3044\u3002\n\nhttps://msdn.microsoft.com/en-us/library/4xssyw96(v=vs.90).aspx\n\n```csharp\n#define TRACE_ON\nusing System;\nusing System.Diagnostics;\n\npublic class Trace\n{\n    [Conditional(\"TRACE_ON\")]\n    public static void Msg(string msg)\n    {\n        Console.WriteLine(msg);\n    }\n}\n\npublic class ProgramClass\n{\n    static void Main()\n    {\n        Trace.Msg(\"Now in Main...\");\n        Console.WriteLine(\"Done.\");\n    }\n}\n```\n\nTRACE_ON\u306e#define\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3068Trace.Msg()\u304c\u5b9f\u884c\u3055\u308c\u306a\u304f\u306a\u308b\u3002\n\n\u4e0a\u8a18\u306emicrosoft\u306e\u30ea\u30f3\u30af\u3067\u306f\n> Using Conditional is a cleaner, more elegant, and less error-prone alternative to enclosing methods inside <font color=red?#if and #endif</font>, \n\n\u305f\u3060\u3001\u8907\u6570\u306e\u6761\u4ef6\u3092AND\u3067\u4f7f\u3046\u3068\u304d\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b3\u30fc\u30c9\u304c\u5197\u9577\u306b\u306a\u308b\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3002\n\n```csharp\n[Conditional(\"A\")]\nstatic void DoIfA()\n{\n    DoIfAandB();\n}\n\n[Conditional(\"B\")]\nstatic void DoIfAandB()\n{\n    // Code to execute when both A and B are defined...\n}\n```\n\u3053\u308c\u306f#if defined()\u3092\u4f7f\u3046\u65b9\u304c\u3044\u3044\u304b\u3082\u3002\n", "tags": ["C#", "MyUnity"]}