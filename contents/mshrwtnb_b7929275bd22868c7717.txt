{"context": "\n\nTL; DR\nGoogle Maps SDK for iOS\u306b\u3001Marker Clustering\u304c\u65b0\u767b\u5834\u3057\u305f\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\uff01\nMarker Clustering\u3067\u306f\u3001\u30ba\u30fc\u30e0\u30a4\u30f3\u3059\u308b\u3068Marker\u304c\u30af\u30e9\u30b9\u30bf\u30fc\u304b\u3089\u5206\u96e2\u3057\u3001\u30ba\u30fc\u30e0\u30a2\u30a6\u30c8\u3059\u308b\u3068Marker\u304c\u30af\u30e9\u30b9\u30bf\u30fc\u5316\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u5927\u91cf\u306eMarker\u3067\u5730\u56f3\u304c\u57cb\u3081\u5c3d\u304f\u3055\u308c\u3001\u898b\u3065\u3089\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u554f\u984c\u304c\u89e3\u6c7a\u3055\u308c\u307e\u3059\u3002 \n\n\n\u74b0\u5883\n\nXcode Version 8.0 beta\niPhone 6s iOS 9.3.3\nSwift 3.0\nCocoapods 1.0.1\nGoogle Maps SDK 1.13.2\n\n\nGMS\u3092Cocoapods\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nCocoapods\u7d4c\u7531\u3067Google Maps SDK for iOS\u3068\u3001Google Maps SDK for iOS Utility Library\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\nPodfile\nplatform :ios, '9.0'\n\ntarget \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d do\n   pod 'GoogleMaps'\n   pod 'Google-Maps-iOS-Utils'\nend\n\n\n\n\nSwift\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u3046\u6e96\u5099\nGMS\u306f\u3001Objective-C\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\nSwift\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306fBridging-Header\u3092\u4f5c\u6210\u3057\u3001GMUMarkerClustering\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\nGoogleMapsTrial-Bridging-Header.h\n#import <Google-Maps-iOS-Utils/GMUMarkerClustering.h>\n\n\nAppDelegate\u3067Google Maps API Key\u306e\u8a2d\u5b9a\u3092\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u3082\u3057\u307e\u3059\u3002\n\nAppDelegate.swift\nimport UIKit\nimport GoogleMaps\n\n// Google Maps API Key\nlet APIKey = \"YOUR_API_KEY\"\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    var window: UIWindow?\n\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n\n        GMSServices.provideAPIKey(APIKey)\n\n        let mapViewController = UINavigationController.init(rootViewController: MapViewController())\n\n        self.window = UIWindow(frame: UIScreen.main().bounds)\n        self.window?.rootViewController = mapViewController\n        self.window?.makeKeyAndVisible()\n\n        return true\n    }\n}\n\n\n\nGMUClusterItem\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u9069\u5408\u3057\u305fItem\u3092\u4f5c\u6210\nMap\u306b\u8868\u793a\u3059\u308bMarkerItem\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nMarkerItem.swift\nclass MarkerItem: NSObject, GMUClusterItem {\n    var position: CLLocationCoordinate2D //\u5fc5\u9808\n\n    init(position: CLLocationCoordinate2D) {\n        self.position = position\n    }\n}\n\n\nMap\u3092\u8868\u793a\u3059\u308bViewController\u3092\u4f5c\u6210\n\nMapViewController.swift\n\nimport UIKit\nimport GoogleMaps\n\n\n// \u65b0\u5bbf\u30d5\u30ed\u30f3\u30c8\u30bf\u30ef\u30fc\nlet cameraLatitude = 35.695978\nlet cameraLongitude = 139.689340\n\nclass MapViewController: UIViewController, GMUClusterManagerDelegate, GMSMapViewDelegate {\n    private let camera = GMSCameraPosition.camera(withLatitude: cameraLatitude,\n                                                  longitude: cameraLongitude, zoom: 15)\n    private let mapView = GMSMapView.init(frame: CGRect.zero)\n\n    private lazy var clusterManager: GMUClusterManager = {\n        let iconGenerator = GMUDefaultClusterIconGenerator()\n        let algorithm = GMUNonHierarchicalDistanceBasedAlgorithm()\n        let renderer = GMUDefaultClusterRenderer(mapView: self.mapView, clusterIconGenerator: iconGenerator)\n        return GMUClusterManager(map: self.mapView, algorithm: algorithm, renderer: renderer)\n    }()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        self.mapView.camera = camera\n        self.view = self.mapView\n\n        // Marker \u00d7 1000 \u30e9\u30f3\u30c0\u30e0\u5ea7\u6a19\u3092\u751f\u6210\u3057\u3001ClusterManager\u306badd\n        for _ in 0...1000 {\n            let extent = 0.1\n            let latitude = cameraLatitude + extent * randomScale()\n            let longitude = cameraLongitude + extent * randomScale()\n            clusterManager.add(MarkerItem.init(position: CLLocationCoordinate2DMake(latitude, longitude)))\n        }\n\n        // MarkerItem\u3092Clustering\u3057\u3001\u5730\u56f3\u306b\u30d7\u30ed\u30c3\u30c8\n        clusterManager.cluster()\n\n        // GMUClusterManagerDelegate + GMSMapViewDelegate\u3092\u8a2d\u5b9a\n        clusterManager.setDelegate(self, mapDelegate: self)\n    }\n\n    // MARK: - GMUMapViewDelegate\n\n    // Marker or Cluster Marker\u304c\u30bf\u30c3\u30d7\u3055\u308c\u305f\n    func mapView(_ mapView: GMSMapView, didTap marker: GMSMarker) -> Bool {\n        if marker.userData is MarkerItem {\n            debugPrint(\"Cluster\u306eMarkerItem\u304c\u30bf\u30c3\u30d7\u3055\u308c\u305f\")\n        } else {\n            debugPrint(\"\u901a\u5e38\u306eMarker\u304c\u30bf\u30c3\u30d7\u3055\u308c\u305f\")\n        }\n        return false\n    }\n\n    // MARK: - GMUClusterManagerDelegate\n\n    // Cluster\u304c\u30bf\u30c3\u30d7\u3055\u308c\u305f\u305f\u3089\u3001Camera Position\u3092\u79fb\u52d5\n    func clusterManager(_ clusterManager: GMUClusterManager, didTap cluster: GMUCluster) {\n        let newCamera = GMSCameraPosition.camera(withTarget: cluster.position,\n                                                 zoom: mapView.camera.zoom + 1)\n        let update = GMSCameraUpdate.setCamera(newCamera)\n        mapView.moveCamera(update)\n    }\n\n\n    private func randomScale() -> Double {\n        return Double(arc4random()) / Double(UINT32_MAX) * 2.0 - 1.0\n    }\n\n}\n\n\n\n\n\u5229\u7528\u53ef\u80fd\u306a\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\u307e\u3060\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u898b\u5f53\u305f\u3089\u306a\u3044\u306e\u3067\u3001Jump to Definition\u3067\u98db\u3093\u3067\u3044\u3063\u305f\u3068\u3053\u308d\u30012\u7a2e\u985e\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u78ba\u8a8d\u3002\n\u4ee5\u4e0b\u306e\u8aac\u660e\u6587\u306f\u610f\u8a33\u3067\u3059\u3002\u306a\u304a\u3001\u5192\u982d\u306egif\u306fGMUNonHierarchicalDistanceBasedAlgorithm\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n// \u30de\u30c3\u30d7\u3092\u30b0\u30ea\u30c3\u30c9\u72b6\u306b\u5206\u5272\nGMUGridBasedClusterAlgorithm\n\n/*\n\u975e\u968e\u5c64\u7684\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n1. \u8ffd\u52a0\u9806\u306bitems\u3092\u30a4\u30c6\u30ec\u30fc\u30c8\uff08\u30af\u30e9\u30b9\u30bf\u30fc\u5019\u88dc\uff09\n2. item\u306e\u4e2d\u5fc3\u70b9\u3092\u6301\u3064\u30af\u30e9\u30b9\u30bf\u30fc\u3092\u4f5c\u6210\n3. \u7279\u5b9a\u306e\u8ddd\u96e2\u570f\u5185\u306b\u542b\u307e\u308c\u308b\u3059\u3079\u3066\u306eitem\u3092\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u8ffd\u52a0\n4. \u5225\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u8fd1\u3051\u308c\u3070\u3001\u65e2\u5b58\u30af\u30e9\u30b9\u30bf\u30fc\u304b\u3089\u8ffd\u52a0\u6e08\u307fitem\u3092\u79fb\u52d5\u3055\u305b\u308b\n5. \u305d\u308c\u3089\u3092\u30af\u30e9\u30b9\u30bf\u30fc\u5019\u88dc\u304b\u3089\u524a\u9664\n\u5404\u30af\u30e9\u30b9\u30bf\u30fc\u306f\u6700\u521d\u306eitem\u306e\u4e2d\u5fc3\u70b9\u3092\u6301\u3064\uff08\u8907\u6570item\u306e\u91cd\u5fc3\u3067\u306f\u306a\u304f\uff09\n*/\nGMUNonHierarchicalDistanceBasedAlgorithm\n\n\n\u53c2\u8003\n\u4ee5\u4e0b\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\ngooglemaps/google-maps-ios-utils\nMarker Clustering | Google Maps SDK for iOS | Google Developers\n\n# TL; DR\nGoogle Maps SDK for iOS\u306b\u3001[Marker Clustering\u304c\u65b0\u767b\u5834](http://googlegeodevelopers.blogspot.jp/2016/07/announcing-marker-clustering-in-google.html)\u3057\u305f\u306e\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\uff01\nMarker Clustering\u3067\u306f\u3001\u30ba\u30fc\u30e0\u30a4\u30f3\u3059\u308b\u3068Marker\u304c\u30af\u30e9\u30b9\u30bf\u30fc\u304b\u3089\u5206\u96e2\u3057\u3001\u30ba\u30fc\u30e0\u30a2\u30a6\u30c8\u3059\u308b\u3068Marker\u304c\u30af\u30e9\u30b9\u30bf\u30fc\u5316\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001**\u5927\u91cf\u306eMarker\u3067\u5730\u56f3\u304c\u57cb\u3081\u5c3d\u304f\u3055\u308c\u3001\u898b\u3065\u3089\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u554f\u984c\u304c\u89e3\u6c7a\u3055\u308c\u307e\u3059\u3002** \n\n<img src=\"https://media.giphy.com/media/3o7TKGZecssMDsr2ZG/giphy.gif\">\n\n# \u74b0\u5883\n* Xcode Version 8.0 beta\n* iPhone 6s iOS 9.3.3\n* Swift 3.0\n* Cocoapods 1.0.1\n* Google Maps SDK 1.13.2\n\n# GMS\u3092Cocoapods\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nCocoapods\u7d4c\u7531\u3067[Google Maps SDK for iOS](https://developers.google.com/maps/documentation/ios-sdk/)\u3068\u3001[Google Maps SDK for iOS Utility Library](https://developers.google.com/maps/documentation/ios-sdk/utility/)\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```ruby:Podfile\nplatform :ios, '9.0'\n\ntarget \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d do\n   pod 'GoogleMaps'\n   pod 'Google-Maps-iOS-Utils'\nend\n\n```\n\n# Swift\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u3046\u6e96\u5099\nGMS\u306f\u3001Objective-C\u3067\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\nSwift\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306fBridging-Header\u3092\u4f5c\u6210\u3057\u3001GMUMarkerClustering\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n```GoogleMapsTrial-Bridging-Header.h\n#import <Google-Maps-iOS-Utils/GMUMarkerClustering.h>\n```\n\nAppDelegate\u3067Google Maps API Key\u306e\u8a2d\u5b9a\u3092\u5fd8\u308c\u306a\u3044\u3088\u3046\u306b\u3082\u3057\u307e\u3059\u3002\n\n```Swift:AppDelegate.swift\nimport UIKit\nimport GoogleMaps\n\n// Google Maps API Key\nlet APIKey = \"YOUR_API_KEY\"\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    var window: UIWindow?\n    \n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n        \n        GMSServices.provideAPIKey(APIKey)\n        \n        let mapViewController = UINavigationController.init(rootViewController: MapViewController())\n        \n        self.window = UIWindow(frame: UIScreen.main().bounds)\n        self.window?.rootViewController = mapViewController\n        self.window?.makeKeyAndVisible()\n        \n        return true\n    }\n}\n```\n\n# GMUClusterItem\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u9069\u5408\u3057\u305fItem\u3092\u4f5c\u6210\nMap\u306b\u8868\u793a\u3059\u308bMarkerItem\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```Swift:MarkerItem.swift\nclass MarkerItem: NSObject, GMUClusterItem {\n    var position: CLLocationCoordinate2D //\u5fc5\u9808\n    \n    init(position: CLLocationCoordinate2D) {\n        self.position = position\n    }\n}\n```\n\nMap\u3092\u8868\u793a\u3059\u308bViewController\u3092\u4f5c\u6210\n\n```Swift:MapViewController.swift\n\nimport UIKit\nimport GoogleMaps\n\n\n// \u65b0\u5bbf\u30d5\u30ed\u30f3\u30c8\u30bf\u30ef\u30fc\nlet cameraLatitude = 35.695978\nlet cameraLongitude = 139.689340\n\nclass MapViewController: UIViewController, GMUClusterManagerDelegate, GMSMapViewDelegate {\n    private let camera = GMSCameraPosition.camera(withLatitude: cameraLatitude,\n                                                  longitude: cameraLongitude, zoom: 15)\n    private let mapView = GMSMapView.init(frame: CGRect.zero)\n    \n    private lazy var clusterManager: GMUClusterManager = {\n        let iconGenerator = GMUDefaultClusterIconGenerator()\n        let algorithm = GMUNonHierarchicalDistanceBasedAlgorithm()\n        let renderer = GMUDefaultClusterRenderer(mapView: self.mapView, clusterIconGenerator: iconGenerator)\n        return GMUClusterManager(map: self.mapView, algorithm: algorithm, renderer: renderer)\n    }()\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        self.mapView.camera = camera\n        self.view = self.mapView\n        \n        // Marker \u00d7 1000 \u30e9\u30f3\u30c0\u30e0\u5ea7\u6a19\u3092\u751f\u6210\u3057\u3001ClusterManager\u306badd\n        for _ in 0...1000 {\n            let extent = 0.1\n            let latitude = cameraLatitude + extent * randomScale()\n            let longitude = cameraLongitude + extent * randomScale()\n            clusterManager.add(MarkerItem.init(position: CLLocationCoordinate2DMake(latitude, longitude)))\n        }\n        \n        // MarkerItem\u3092Clustering\u3057\u3001\u5730\u56f3\u306b\u30d7\u30ed\u30c3\u30c8\n        clusterManager.cluster()\n        \n        // GMUClusterManagerDelegate + GMSMapViewDelegate\u3092\u8a2d\u5b9a\n        clusterManager.setDelegate(self, mapDelegate: self)\n    }\n    \n    // MARK: - GMUMapViewDelegate\n    \n    // Marker or Cluster Marker\u304c\u30bf\u30c3\u30d7\u3055\u308c\u305f\n    func mapView(_ mapView: GMSMapView, didTap marker: GMSMarker) -> Bool {\n        if marker.userData is MarkerItem {\n            debugPrint(\"Cluster\u306eMarkerItem\u304c\u30bf\u30c3\u30d7\u3055\u308c\u305f\")\n        } else {\n            debugPrint(\"\u901a\u5e38\u306eMarker\u304c\u30bf\u30c3\u30d7\u3055\u308c\u305f\")\n        }\n        return false\n    }\n    \n    // MARK: - GMUClusterManagerDelegate\n    \n    // Cluster\u304c\u30bf\u30c3\u30d7\u3055\u308c\u305f\u305f\u3089\u3001Camera Position\u3092\u79fb\u52d5\n    func clusterManager(_ clusterManager: GMUClusterManager, didTap cluster: GMUCluster) {\n        let newCamera = GMSCameraPosition.camera(withTarget: cluster.position,\n                                                 zoom: mapView.camera.zoom + 1)\n        let update = GMSCameraUpdate.setCamera(newCamera)\n        mapView.moveCamera(update)\n    }\n    \n    \n    private func randomScale() -> Double {\n        return Double(arc4random()) / Double(UINT32_MAX) * 2.0 - 1.0\n    }\n\n}\n\n```\n\n# \u5229\u7528\u53ef\u80fd\u306a\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\n\u307e\u3060\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u898b\u5f53\u305f\u3089\u306a\u3044\u306e\u3067\u3001Jump to Definition\u3067\u98db\u3093\u3067\u3044\u3063\u305f\u3068\u3053\u308d\u30012\u7a2e\u985e\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u78ba\u8a8d\u3002\n\u4ee5\u4e0b\u306e\u8aac\u660e\u6587\u306f\u610f\u8a33\u3067\u3059\u3002\u306a\u304a\u3001\u5192\u982d\u306egif\u306f```GMUNonHierarchicalDistanceBasedAlgorithm```\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n```Swift\n// \u30de\u30c3\u30d7\u3092\u30b0\u30ea\u30c3\u30c9\u72b6\u306b\u5206\u5272\nGMUGridBasedClusterAlgorithm\n\n/*\n\u975e\u968e\u5c64\u7684\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n1. \u8ffd\u52a0\u9806\u306bitems\u3092\u30a4\u30c6\u30ec\u30fc\u30c8\uff08\u30af\u30e9\u30b9\u30bf\u30fc\u5019\u88dc\uff09\n2. item\u306e\u4e2d\u5fc3\u70b9\u3092\u6301\u3064\u30af\u30e9\u30b9\u30bf\u30fc\u3092\u4f5c\u6210\n3. \u7279\u5b9a\u306e\u8ddd\u96e2\u570f\u5185\u306b\u542b\u307e\u308c\u308b\u3059\u3079\u3066\u306eitem\u3092\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u8ffd\u52a0\n4. \u5225\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u8fd1\u3051\u308c\u3070\u3001\u65e2\u5b58\u30af\u30e9\u30b9\u30bf\u30fc\u304b\u3089\u8ffd\u52a0\u6e08\u307fitem\u3092\u79fb\u52d5\u3055\u305b\u308b\n5. \u305d\u308c\u3089\u3092\u30af\u30e9\u30b9\u30bf\u30fc\u5019\u88dc\u304b\u3089\u524a\u9664\n\u5404\u30af\u30e9\u30b9\u30bf\u30fc\u306f\u6700\u521d\u306eitem\u306e\u4e2d\u5fc3\u70b9\u3092\u6301\u3064\uff08\u8907\u6570item\u306e\u91cd\u5fc3\u3067\u306f\u306a\u304f\uff09\n*/\nGMUNonHierarchicalDistanceBasedAlgorithm\n```\n\n# \u53c2\u8003\n\u4ee5\u4e0b\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n* [googlemaps/google-maps-ios-utils](https://github.com/googlemaps/google-maps-ios-utils)\n* [Marker Clustering | Google Maps SDK for iOS | Google Developers](https://developers.google.com/maps/documentation/ios-sdk/utility/marker-clustering?utm_source=geodevsite&utm_medium=website&utm_campaign=2016-geo-na-website-gmedia-blogs-us-blogPost&utm_content=iOSmarkers)\n", "tags": ["Swift", "iOS", "Objective-C", "GoogleMapsAPI", "GoogleMapsSDKforiOS"]}