{"tags": ["C", "gpio"], "context": "\u7d44\u8fbc\u307fC (\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u6975\u529b\u4f7f\u308f\u306a\u3044)\n\n\n\u4ed5\u69d8\n\nCase A, B, C\u306e\u3044\u305a\u308c\u304b\u306e\u8a2d\u5b9a\u3067\u52d5\u304b\u3059\u3002\n\u30dd\u30fc\u30c81..4\u304c\u3042\u308b\u3002\n\u5168\u5236\u5fa1\u6642\u9593(\u5358\u4f4d:\u5206)Ttotal_min\u306f4\u306e\u500d\u6570\u3068\u3059\u308b\u3002\n\n\u305d\u308c\u305e\u308c\u306eCase\u306b\u57fa\u3065\u304d\u3001\u30aa\u30fc\u30d7\u30f3\u3059\u308b\u30dd\u30fc\u30c8\u3092\u5236\u5fa1\u3059\u308b\u3002\n\nCase A (Ttotal_min\u306e1/4\u305a\u3064)\n\n\nP1, P2, P3, P4\n\n\nCase B (Ttotal_min\u306e1/2\u305a\u3064)\n\n\nP1, P3\n\n\nCase C (Ttotal_min\u306e\u5168\u6642\u9593)\n\n\nP1\n\n\n\n\ncode\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u305f\u3002\n\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u7701\u7565\u3057\u3066\u3044\u308b\u3002\nhttp://ideone.com/BkufAI\n#include <stdio.h>\n\n/*\nport controller\n*/\n\n#define NUM_PORT_LIST (4)\nstatic int s_portList[NUM_PORT_LIST];\n\nenum {\n    IDX_CASE_A = 0,\n    IDX_CASE_B,\n    IDX_CASE_C,\n};\nenum {\n    PORT_1 = 0,\n    PORT_2,\n    PORT_3,\n    PORT_4,\n};\n\nvoid SetPortElement(int p1, int p2, int p3, int p4, int *dstPtr)\n{\n    if (dstPtr == NULL) {\n        return;\n    }\n    dstPtr[0] = p1;\n    dstPtr[1] = p2;\n    dstPtr[2] = p3;\n    dstPtr[3] = p4;\n}\n\nvoid SetPortOnCase(int aCase, int *dstPtr)\n{\n    switch(aCase) {\n    case IDX_CASE_A:\n        SetPortElement(PORT_1, PORT_2, PORT_3, PORT_4, dstPtr);\n        break;\n    case IDX_CASE_B:\n        SetPortElement(PORT_1, PORT_1, PORT_3, PORT_3, dstPtr);\n        break;\n    case IDX_CASE_C:\n        SetPortElement(PORT_1, PORT_1, PORT_1, PORT_1, dstPtr);\n        break;\n    }\n}\n\nvoid FuncSetup(void)\n{\n    int idx;\n\n    // set open list\n    SetPortOnCase(IDX_CASE_A, &s_portList[0]);\n//  SetPortOnCase(IDX_CASE_B, &s_portList[0]);\n//  SetPortOnCase(IDX_CASE_C, &s_portList[0]);\n\n#if 0 // debug print\n    for(idx=0; idx < NUM_PORT_LIST; idx++) {\n        printf(\"%d:%d\\n\", idx, s_portList[idx]);        \n    } \n#endif  \n}\n\nint getListIndex(int elapsed_sec, int Ttotal_min)\n{\n    int idx;\n    idx = elapsed_sec * NUM_PORT_LIST / (Ttotal_min * 60); //\n    return idx;\n}\n\nvoid FuncExecute(int Ttotal_min)\n{\n    int idx;\n    int elapsed_sec = 0;\n    int curPort;\n    int lstidx;\n\n    // open ports in turn\n    elapsed_sec = 0;\n    while(1) {\n        lstidx = getListIndex(elapsed_sec, Ttotal_min);\n        curPort = s_portList[lstidx];\n        printf(\"%d:%d - %d\\n\", elapsed_sec, lstidx, curPort);\n        elapsed_sec += 10; // every 10 sec\n        if (elapsed_sec >= (Ttotal_min * 60)) {\n            break;\n        }\n    }\n}\n\nint main(void) {\n    FuncSetup();\n    FuncExecute(/* Ttotal_min=*/4); // use integral multiple of 4\n\n    // Dummy: Close all Port\n\n    return 0;\n}\n\n\n\u7d50\u679c\n\nCase A\u9078\u629e\u6642 (1/4\u305a\u3064)\nSuccess time: 0 memory: 2160 signal:0\n0:0 - 0\n10:0 - 0\n20:0 - 0\n30:0 - 0\n40:0 - 0\n50:0 - 0\n60:1 - 1\n70:1 - 1\n80:1 - 1\n90:1 - 1\n100:1 - 1\n110:1 - 1\n120:2 - 2\n130:2 - 2\n140:2 - 2\n150:2 - 2\n160:2 - 2\n170:2 - 2\n180:3 - 3\n190:3 - 3\n200:3 - 3\n210:3 - 3\n220:3 - 3\n230:3 - 3\n\n\nCase B\u9078\u629e\u6642 (1/2\u305a\u3064)\nSuccess time: 0 memory: 2156 signal:0\n0:0 - 0\n10:0 - 0\n20:0 - 0\n30:0 - 0\n40:0 - 0\n50:0 - 0\n60:1 - 0\n70:1 - 0\n80:1 - 0\n90:1 - 0\n100:1 - 0\n110:1 - 0\n120:2 - 2\n130:2 - 2\n140:2 - 2\n150:2 - 2\n160:2 - 2\n170:2 - 2\n180:3 - 2\n190:3 - 2\n200:3 - 2\n210:3 - 2\n220:3 - 2\n230:3 - 2\n\n\nCase C\u9078\u629e\u6642 (\u5168\u6642\u9593)\nSuccess time: 0 memory: 2112 signal:0\n0:0 - 0\n10:0 - 0\n20:0 - 0\n30:0 - 0\n40:0 - 0\n50:0 - 0\n60:1 - 0\n70:1 - 0\n80:1 - 0\n90:1 - 0\n100:1 - 0\n110:1 - 0\n120:2 - 0\n130:2 - 0\n140:2 - 0\n150:2 - 0\n160:2 - 0\n170:2 - 0\n180:3 - 0\n190:3 - 0\n200:3 - 0\n210:3 - 0\n220:3 - 0\n230:3 - 0\n\n\u3068\u308a\u3042\u3048\u305a\u5e0c\u671b\u3057\u305f\u52d5\u4f5c\u306b\u306f\u306a\u3063\u305f\u3002\n\u3053\u308c\u3092\u305f\u305f\u304d\u53f0\u3068\u3057\u3066\u30d6\u30e9\u30c3\u30b7\u30e5\u30a2\u30c3\u30d7\u3059\u308b\u3002\n```txt:\n\u7d44\u8fbc\u307fC (\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u6975\u529b\u4f7f\u308f\u306a\u3044)\n```\n\n## \u4ed5\u69d8\n\n- Case A, B, C\u306e\u3044\u305a\u308c\u304b\u306e\u8a2d\u5b9a\u3067\u52d5\u304b\u3059\u3002\n- \u30dd\u30fc\u30c81..4\u304c\u3042\u308b\u3002\n- \u5168\u5236\u5fa1\u6642\u9593(\u5358\u4f4d:\u5206)`Ttotal_min`\u306f4\u306e\u500d\u6570\u3068\u3059\u308b\u3002\n\n\u305d\u308c\u305e\u308c\u306eCase\u306b\u57fa\u3065\u304d\u3001\u30aa\u30fc\u30d7\u30f3\u3059\u308b\u30dd\u30fc\u30c8\u3092\u5236\u5fa1\u3059\u308b\u3002\n\n- Case A (Ttotal_min\u306e1/4\u305a\u3064)\n  - P1, P2, P3, P4\n- Case B (Ttotal_min\u306e1/2\u305a\u3064)\n  - P1, P3\n- Case C (Ttotal_min\u306e\u5168\u6642\u9593)\n  - P1\n\n## code\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u305f\u3002\n\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u7701\u7565\u3057\u3066\u3044\u308b\u3002\n\nhttp://ideone.com/BkufAI\n\n```.c\n#include <stdio.h>\n\n/*\nport controller\n*/\n\n#define NUM_PORT_LIST (4)\nstatic int s_portList[NUM_PORT_LIST];\n\nenum {\n\tIDX_CASE_A = 0,\n\tIDX_CASE_B,\n\tIDX_CASE_C,\n};\nenum {\n\tPORT_1 = 0,\n\tPORT_2,\n\tPORT_3,\n\tPORT_4,\n};\n\nvoid SetPortElement(int p1, int p2, int p3, int p4, int *dstPtr)\n{\n\tif (dstPtr == NULL) {\n\t\treturn;\n\t}\n\tdstPtr[0] = p1;\n\tdstPtr[1] = p2;\n\tdstPtr[2] = p3;\n\tdstPtr[3] = p4;\n}\n\nvoid SetPortOnCase(int aCase, int *dstPtr)\n{\n\tswitch(aCase) {\n\tcase IDX_CASE_A:\n\t\tSetPortElement(PORT_1, PORT_2, PORT_3, PORT_4, dstPtr);\n\t\tbreak;\n\tcase IDX_CASE_B:\n\t\tSetPortElement(PORT_1, PORT_1, PORT_3, PORT_3, dstPtr);\n\t\tbreak;\n\tcase IDX_CASE_C:\n\t\tSetPortElement(PORT_1, PORT_1, PORT_1, PORT_1, dstPtr);\n\t\tbreak;\n\t}\n}\n\nvoid FuncSetup(void)\n{\n\tint idx;\n\t\n\t// set open list\n\tSetPortOnCase(IDX_CASE_A, &s_portList[0]);\n//\tSetPortOnCase(IDX_CASE_B, &s_portList[0]);\n//\tSetPortOnCase(IDX_CASE_C, &s_portList[0]);\n\n#if 0 // debug print\n\tfor(idx=0; idx < NUM_PORT_LIST; idx++) {\n\t\tprintf(\"%d:%d\\n\", idx, s_portList[idx]);\t\t\n\t} \n#endif\t\n}\n\nint getListIndex(int elapsed_sec, int Ttotal_min)\n{\n\tint idx;\n\tidx = elapsed_sec * NUM_PORT_LIST / (Ttotal_min * 60); //\n\treturn idx;\n}\n\nvoid FuncExecute(int Ttotal_min)\n{\n\tint idx;\n\tint elapsed_sec = 0;\n\tint curPort;\n\tint lstidx;\n\n\t// open ports in turn\n\telapsed_sec = 0;\n\twhile(1) {\n\t\tlstidx = getListIndex(elapsed_sec, Ttotal_min);\n\t\tcurPort = s_portList[lstidx];\n\t\tprintf(\"%d:%d - %d\\n\", elapsed_sec, lstidx, curPort);\n\t\telapsed_sec += 10; // every 10 sec\n\t\tif (elapsed_sec >= (Ttotal_min * 60)) {\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nint main(void) {\n\tFuncSetup();\n\tFuncExecute(/* Ttotal_min=*/4); // use integral multiple of 4\n\t\n\t// Dummy: Close all Port\n\t\n\treturn 0;\n}\n```\n\n## \u7d50\u679c\n\n### Case A\u9078\u629e\u6642 (1/4\u305a\u3064)\n\n```txt\nSuccess\ttime: 0 memory: 2160 signal:0\n0:0 - 0\n10:0 - 0\n20:0 - 0\n30:0 - 0\n40:0 - 0\n50:0 - 0\n60:1 - 1\n70:1 - 1\n80:1 - 1\n90:1 - 1\n100:1 - 1\n110:1 - 1\n120:2 - 2\n130:2 - 2\n140:2 - 2\n150:2 - 2\n160:2 - 2\n170:2 - 2\n180:3 - 3\n190:3 - 3\n200:3 - 3\n210:3 - 3\n220:3 - 3\n230:3 - 3\n```\n\n### Case B\u9078\u629e\u6642 (1/2\u305a\u3064)\n\n```txt\nSuccess\ttime: 0 memory: 2156 signal:0\n0:0 - 0\n10:0 - 0\n20:0 - 0\n30:0 - 0\n40:0 - 0\n50:0 - 0\n60:1 - 0\n70:1 - 0\n80:1 - 0\n90:1 - 0\n100:1 - 0\n110:1 - 0\n120:2 - 2\n130:2 - 2\n140:2 - 2\n150:2 - 2\n160:2 - 2\n170:2 - 2\n180:3 - 2\n190:3 - 2\n200:3 - 2\n210:3 - 2\n220:3 - 2\n230:3 - 2\n```\n\n### Case C\u9078\u629e\u6642 (\u5168\u6642\u9593)\n\n```txt\nSuccess\ttime: 0 memory: 2112 signal:0\n0:0 - 0\n10:0 - 0\n20:0 - 0\n30:0 - 0\n40:0 - 0\n50:0 - 0\n60:1 - 0\n70:1 - 0\n80:1 - 0\n90:1 - 0\n100:1 - 0\n110:1 - 0\n120:2 - 0\n130:2 - 0\n140:2 - 0\n150:2 - 0\n160:2 - 0\n170:2 - 0\n180:3 - 0\n190:3 - 0\n200:3 - 0\n210:3 - 0\n220:3 - 0\n230:3 - 0\n```\n\n\u3068\u308a\u3042\u3048\u305a\u5e0c\u671b\u3057\u305f\u52d5\u4f5c\u306b\u306f\u306a\u3063\u305f\u3002\n\u3053\u308c\u3092\u305f\u305f\u304d\u53f0\u3068\u3057\u3066\u30d6\u30e9\u30c3\u30b7\u30e5\u30a2\u30c3\u30d7\u3059\u308b\u3002\n\n"}