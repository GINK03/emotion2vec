{"context": " More than 1 year has passed since last update.\n\nSi1132\n\n\nDatasheet\n\nSi1134\u3067\u53d6\u5f97\u3067\u304d\u308b\u5024\nUV index\u3068ambient light\u304c\u8a08\u6e2c\u53ef\u80fd\u3002\n\n\n\n\n\u9805\u76ee\u540d\n\u5024\u306e\u610f\u5473\n\n\n\n\nALS_VIS_DATA\nVisibility\n\n\nALS_IR_DATA\nInfrared Light\n\n\nAUX_DATA\nUV\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5024\n\n\n\n\nSlave Address\n\n\n\nSlave address\n0x60\n\n\n\n\n\n\nWho_am_i\n\n\n\nPART_ID\n0x00\n\n\n\n\n\nSi1132\u306e\u5834\u5408\u30010x32\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n\narduino\n#define SI1132_PART_ID 0x00\n#define SI1132_DEVICE 0x32\n\nbool SearchDevice()\n{\n  byte device = 0x00;\n  readI2c(SI1132_PART_ID, 1, &device);\n\n  if(device == SI1132_DEVICE){\n      return true;\n  } else{\n      return false;\n  }\n}\n\n\n\nConfiguration\n\nUCOEF\nUVindex\u6e2c\u5b9a\u4fc2\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\n\u5024\n\n\n\n\nUCOEF0\n0x13\n0x7B\n\n\nUCOEF1\n0x14\n0x6B\n\n\nUCOEF2\n0x15\n0x01\n\n\nUCOEF3\n0x16\n0x00\n\n\n\n\nCHLIST\nUV, IR, Visible light\u3092\u6709\u52b9\u306b\u3059\u308b\u3002\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\n\n\n\n\nCHILIST\n0x01\nEN_UV\nEN_AUX\nEN_ALS_IR\nEN_ALS_VIS\n\n\n\n\n\n\n\n\n\u3053\u3053\u307e\u3067\u306e\u30b3\u30fc\u30c9\n\narduino\n#define SI1132_UCOEF0 0x13\n#define SI1132_UCOEF1 0x14\n#define SI1132_UCOEF2 0x15\n#define SI1132_UCOEF3 0x16\n\n#define SI1132_CHIPLIST 0x01\n#define Si1132_MEASRATE0 0x08\n\n#define SI1132_EN_UV 0b10000000\n#define SI1132_EN_AUX 0b01000000\n#define SI1132_EN_ALS_IR 0b00100000\n#define SI1132_EN_ALS_VIS 0b00010000\n\nvoid Configuration()\n{\n  writeI2c(SI1132_UCOEF0, 0x7B);\n  writeI2c(SI1132_UCOEF1, 0x6B);\n  writeI2c(SI1132_UCOEF2, 0x01);\n  writeI2c(SI1132_UCOEF3, 0x00);\n\n  int enable_sensor = SI1132_EN_UV|SI1132_EN_AUX|SI1132_EN_ALS_IR|SI1132_EN_ALS_VIS;\n  writeI2c(SI1132_CHIPLIST, enable_sensor);\n\n  // Rate\u306e\u8a2d\u5b9a\n  writeI2c(SI1132_CHIPLIST, 0xff);  \n}\n\n\n\nVisible\u95a2\u9023\nVisible\u306eConfiguration\u3002Visibility\u3067\u306f\u3001\u53d6\u5f97\u3057\u305fVisible\u3068\u3001ALS_VIS_ALIGN, ALS_RATE, ALS_VIS_ADC_REC, ALS_VIS_ADC_GAIN, VIS_RANGE\u306e\u8a2d\u5b9a\u304b\u3089\u3001ALS_VIS_DATA\u3092\u751f\u6210\u3059\u308b\u3002\n\n\n\n\n\u8a2d\u5b9a\u3059\u308b\u5024\n\u8a2d\u5b9a\u3059\u308b\u5834\u6240\n\n\n\n\nALS_VIS_ALIGN\nALS_ENCODING(0x06)\u306e4bit\u76ee\u3067\u8a2d\u5b9a\n\n\nALS_RATE\nMEAS_RATE0(0x08), MEAS_RATE1(0x09)\u3067\u8a2d\u5b9a\n\n\nALS_VIS_ADC_REC\nALS_VIS_ADC_COUNTER(0x10)\u306e4\u301c6bit\u76ee\u3067\u8a2d\u5b9a\n\n\nALS_VIS_ADC_GAIN\nALS_VIS_ADC_GAIN(0x11) \u306e0\u301c2bit\u76ee\u3067\u8a2d\u5b9a\n\n\nVIS_RANGE\nALS_VIS_ADC_MISC(0x12)\u306e5bit\u76ee\u3067\u8a2d\u5b9a\n\n\n\n\nALS_VIS_ALIGN\nBit\u3092\u305f\u3066\u308b\u306817bit ADC\u306e16bit\u3092\u53d6\u3063\u3066\u304f\u308b\u3002\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\n\n\n\n\nALS_ENCODING\n0x06\n\n\n\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\n\n\n\n\nALS_ENCODING\n0x06\n\n\nALS_IR_ALIGN\nALS_VIS_ALIGN\n\n\n\n\n\n\n\n\nALS_VIS_ADC_REC\nALS-VIS\u6e2c\u5b9a\u3092\u884c\u3046\u524d\u306b\u5fc5\u8981\u3068\u3059\u308bADC\u306e\u56de\u5fa9\u5468\u671f\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\n\n\n\n\nALS_VIS_ADC_COUNTER\n0x10\n\n\n\n\n\n\n\u5024(bit)\n\u5468\u671f\n\n\n\n\n000\n1 ADC Clock (50 ns times 2ALS_VIS_ADC_GAIN)\n\n\n001\n7 ADC Clock (350 ns times 2ALS_VIS_ADC_GAIN)\n\n\n010\n15 ADC Clock (750 ns times 2ALS_VIS_ADC_GAIN)\n\n\n011\n31 ADC Clock (1.55 \u00b5s times 2ALS_VIS_ADC_GAIN)\n\n\n100\n63 ADC Clock (3.15 \u00b5s times 2ALS_VIS_ADC_GAIN)\n\n\n101\n127 ADC Clock (6.35 \u00b5s times 2ALS_VIS_ADC_GAIN)\n\n\n110\n255 ADC Clock (12.75 \u00b5s times 2ALS_VIS_ADC_GAIN)\n\n\n111\n511 ADC Clock (25.55 \u00b5s times 2ALS_VIS_ADC_GAIN)\n\n\n\n\nALS_VIS_ADC_GAIN\nALS\u53ef\u8996\u6e2c\u5b9a\u306e\u305f\u3081\u306e\u3001ADC\u306e\u7a4d\u5206\u6642\u9593\u3092\u8a2d\u5b9a\u3002\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\n\n\n\n\nALS_VIS_ADC_GAIN\n0x11\n\n\n\n\n\n\n\u5024(bit)\n\u5468\u671f\n\n\n\n\n000\n1\u5206\u5272\u3057\u305fADC Clock\n\n\n100\n16\u5206\u5272\u3057\u305fADC Clock\n\n\n110\n64\u5206\u5272\u3057\u305fADC Clock\n\n\n\n\nVIS_RANGE\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\n\n\n\n\nALS_VIS_ADC_MISC\n0x12\n\n\n\n\n\n\n\u5024(bit)\n\u610f\u5473\n\n\n\n\n0\nNormal Signal Range\n\n\n1\nHigh Signal Range\n\n\n\n\nVisible\u3092\u8ffd\u52a0\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\narduino\n#define SI1132_UCOEF0 0x13\n#define SI1132_UCOEF1 0x14\n#define SI1132_UCOEF2 0x15\n#define SI1132_UCOEF3 0x16\n#define SI1132_CHIPLIST 0x01\n#define Si1132_MEASRATE0 0x08\n#define SI1132_ALS_ENCODING 0x06\n#define SI1132_ALS_VIS_ADC_COUNTER 0x10\n#define SI1132_ALS_VIS_ADC_GAIN 0x11\n#define SI1132_ALS_VIS_ADC_MISC 0x12\n\n#define SI1132_EN_UV 0b10000000\n#define SI1132_EN_AUX 0b01000000\n#define SI1132_EN_ALS_IR 0b00100000\n#define SI1132_EN_ALS_VIS 0b00010000\n\n#define SI1132_ALS_VIS_ALIGN 0b00010000\n\n#define SI1132_1_ADC_CLOCK 0b00000000\n#define SI1132_7_ADC_CLOCK 0b00010000\n#define SI1132_15_ADC_CLOCK 0b00100000\n#define SI1132_31_ADC_CLOCK 0b00110000\n#define SI1132_63_ADC_CLOCK 0b01000000\n#define SI1132_127_ADC_CLOCK 0b10100000\n#define SI1132_255_ADC_CLOCK 0b01100000\n#define SI1132_511_ADC_CLOCK 0b01110000\n\n#define SI1132_1_DIVIDED_ADC_CLOCK 0b0000000\n#define SI1132_16_DEVIDED_ADC_CLOCK 0b0000100\n#define SI1132_64_DEVIDED_ADC_CLOCK 0b0000110\n\n#define SI1132_NORMAL_SIGNAL_RANGE 0b00000000\n#define SI1132_HIGH_SIGNAL_RANGE 0b00100000\n\nvoid Configuration()\n{\n  writeI2c(SI1132_UCOEF0, 0x7B);\n  writeI2c(SI1132_UCOEF1, 0x6B);\n  writeI2c(SI1132_UCOEF2, 0x01);\n  writeI2c(SI1132_UCOEF3, 0x00);\n\n  int enable_sensor = SI1132_EN_UV|SI1132_EN_AUX|SI1132_EN_ALS_IR|SI1132_EN_ALS_VIS;\n  writeI2c(SI1132_CHIPLIST, enable_sensor);\n\n  // Rate\u306e\u8a2d\u5b9a\n  writeI2c(SI1132_CHIPLIST, 0xff);\n\n  int flag_als_encoding = SI1132_ALS_VIS_ALIGN;\n  writeI2c(SI1132_ALS_ENCODING, flag_als_encoding);\n\n  // Visible\n  writeI2c(SI1132_ALS_VIS_ADC_COUNTER, SI1132_511_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_VIS_ADC_GAIN, SI1132_1_DIVIDED_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_VIS_ADC_MISC, SI1132_HIGH_SIGNAL_RANGE);\n}\n\n\n\nInfrared Light\u95a2\u9023\n\nInfrared Light(IR)\u306eConfiguration\u3002Infrared Light(IR)\u3067\u306f\u3001\u53d6\u5f97\u3057\u305fInfrared Light(IR)\u3068\u3001ALS_IR_ADCMUX\u306eInput\u3068\u3001ALS_IR_ALIGN, IR_RATE, ALS_IR_ADC_REC, ALS_IR_ADC_GAIN, IR_RANGE\u306e\u8a2d\u5b9a\u304b\u3089\u3001ALS_IR_DATA\u3092\u751f\u6210\u3059\u308b\u3002\n\n\n\n\u8a2d\u5b9a\u3059\u308b\u5024\n\u8a2d\u5b9a\u3059\u308b\u5834\u6240\n\n\n\n\nALS_IR_ALIGN\nALS_ENCODING(0x06)\u306e4bit\u76ee\u3067\u8a2d\u5b9a\n\n\nALS_RATE\nMEAS_RATE0(0x08), MEAS_RATE1(0x09)\u3067\u8a2d\u5b9a\n\n\nALS_IR_ADC_REC\nALS_IR_ADC_COUNTER(0x1D)\u306e4\u301c6bit\u76ee\u3067\u8a2d\u5b9a\n\n\nALS_IR_ADC_GAIN\nALS_IR_ADC_GAIN(0x1E) \u306e0\u301c2bit\u76ee\u3067\u8a2d\u5b9a\n\n\nIR_RANGE\nALS_VIS_ADC_MISC(0x1F)\u306e5bit\u76ee\u3067\u8a2d\u5b9a\n\n\nALS_IR_ADCMUX\nALS_IR_ADCMUX(0x0E)\u3067\u8a2d\u5b9a\n\n\n\n\nALS_IR_ALIGN\nBit\u3092\u305f\u3066\u308b\u306817bit ADC\u306e16bit\u3092\u53d6\u3063\u3066\u304f\u308b\u3002\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\n\n\n\n\nALS_ENCODING\n0x06\n\n\n\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\nBit7\nBit6\nBit5\nBit4\nBit3\nBit2\nBit1\nBit0\n\n\n\n\nALS_ENCODING\n0x06\n\n\nALS_IR_ALIGN\nALS_VIS_ALIGN\n\n\n\n\n\n\n\n\nALS_IR_ADC_REC\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\n\n\n\n\nALS_IR_ADC_COUNTER\n0x1D\n\n\n\nALS-IR\u6e2c\u5b9a\u3092\u884c\u3046\u524d\u306b\u5fc5\u8981\u3068\u3059\u308bADC\u306e\u56de\u5fa9\u5468\u671f\u3002\n\n\n\n\u5024(bit)\n\u5468\u671f\n\n\n\n\n000\n1 ADC Clock (50 ns times 2ALS_IR_ADC_GAIN)\n\n\n001\n7 ADC Clock (350 ns times 2ALS_IR_ADC_GAIN)\n\n\n010\n15 ADC Clock (750 ns times 2ALS_IR_ADC_GAIN)\n\n\n011\n31 ADC Clock (1.55 \u00b5s times 2ALS_IR_ADC_GAIN)\n\n\n100\n63 ADC Clock (3.15 \u00b5s times 2ALS_IR_ADC_GAIN)\n\n\n101\n127 ADC Clock (6.35 \u00b5s times 2ALS_IR_ADC_GAIN)\n\n\n110\n255 ADC Clock (12.75 \u00b5s times 2ALS_IR_ADC_GAIN)\n\n\n111\n511 ADC Clock (25.55 \u00b5s times 2ALS_IR_ADC_GAIN)\n\n\n\n\nALS_IR_ADC_GAIN\nALS\u53ef\u8996\u6e2c\u5b9a\u306e\u305f\u3081\u306e\u3001ADC\u306e\u7a4d\u5206\u6642\u9593\u3092\u8a2d\u5b9a\u3002\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\n\n\n\n\nALS_IR_ADC_GAIN\n0x1E\n\n\n\n\n\n\n\u5024(bit)\n\u5468\u671f\n\n\n\n\n000\n1\u5206\u5272\u3057\u305fADC Clock\n\n\n100\n16\u5206\u5272\u3057\u305fADC Clock\n\n\n110\n64\u5206\u5272\u3057\u305fADC Clock\n\n\n\n\nALS_IR_ADC_MISC\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\n\n\n\n\nALS_IR_ADC_MISC\n0x1F\n\n\n\n\n\n\n\u5024(bit)\n\u610f\u5473\n\n\n\n\n0\nNormal Signal Range\n\n\n1\nHigh Signal Range\n\n\n\n\nALS_IR_ADCMUX\nSelects ADC Input for ALS_IR Measurement.\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\n\n\n\n\nAUX_ADCMUX\n0x0E\n\n\n\n\n\n\n\u5024(bit)\n\u5468\u671f\n\n\n\n\n0x00\nSmall IR photodiode\n\n\n\n\nIR\u3092\u8ffd\u52a0\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\narduino\n#define SI1132_UCOEF0 0x13\n#define SI1132_UCOEF1 0x14\n#define SI1132_UCOEF2 0x15\n#define SI1132_UCOEF3 0x16\n#define SI1132_CHIPLIST 0x01\n#define Si1132_MEASRATE0 0x08\n#define SI1132_ALS_ENCODING 0x06\n#define SI1132_ALS_VIS_ADC_COUNTER 0x10\n#define SI1132_ALS_VIS_ADC_GAIN 0x11\n#define SI1132_ALS_VIS_ADC_MISC 0x12\n#define SI1132_ALS_IR_ADC_COUNTER 0x1D\n#define SI1132_ALS_IR_ADC_GAIN 0x1E\n#define SI1132_ALS_IR_ADC_MISC 0x1F\n#define SI1132_ALS_IR_ADCMUX 0x0E\n\n#define SI1132_EN_UV 0b10000000\n#define SI1132_EN_AUX 0b01000000\n#define SI1132_EN_ALS_IR 0b00100000\n#define SI1132_EN_ALS_VIS 0b00010000\n\n#define SI1132_ALS_VIS_ALIGN 0b00010000\n#define SI1132_ALS_VIS_ALIGN 0b00100000\n\n#define SI1132_1_ADC_CLOCK 0b00000000\n#define SI1132_7_ADC_CLOCK 0b00010000\n#define SI1132_15_ADC_CLOCK 0b00100000\n#define SI1132_31_ADC_CLOCK 0b00110000\n#define SI1132_63_ADC_CLOCK 0b01000000\n#define SI1132_127_ADC_CLOCK 0b10100000\n#define SI1132_255_ADC_CLOCK 0b01100000\n#define SI1132_511_ADC_CLOCK 0b01110000\n\n#define SI1132_1_DIVIDED_ADC_CLOCK 0b0000000\n#define SI1132_16_DEVIDED_ADC_CLOCK 0b0000100\n#define SI1132_64_DEVIDED_ADC_CLOCK 0b0000110\n\n#define SI1132_NORMAL_SIGNAL_RANGE 0b00000000\n#define SI1132_HIGH_SIGNAL_RANGE 0b00100000\n\n#define SI1132_ALS_IR_ADCMUX_SMALLIR 0x00\n\nvoid Configuration()\n{\n  writeI2c(SI1132_UCOEF0, 0x7B);\n  writeI2c(SI1132_UCOEF1, 0x6B);\n  writeI2c(SI1132_UCOEF2, 0x01);\n  writeI2c(SI1132_UCOEF3, 0x00);\n\n  int enable_sensor = SI1132_EN_UV|SI1132_EN_AUX|SI1132_EN_ALS_IR|SI1132_EN_ALS_VIS;\n  writeI2c(SI1132_CHIPLIST, enable_sensor);\n\n  // Rate\u306e\u8a2d\u5b9a\n  writeI2c(SI1132_CHIPLIST, 0xff);\n\n  int flag_als_encoding = SI1132_ALS_VIS_ALIGN | SI1132_ALS_IR_ALIGN;\n  writeI2c(SI1132_ALS_ENCODING, flag_als_encoding);\n\n  // Visible\n  writeI2c(SI1132_ALS_VIS_ADC_COUNTER, SI1132_511_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_VIS_ADC_GAIN, SI1132_1_DIVIDED_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_VIS_ADC_MISC, SI1132_HIGH_SIGNAL_RANGE);\n\n  // IR\n  writeI2c(SI1132_ALS_IR_ADC_COUNTER, SI1132_511_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_IR_ADC_GAIN, SI1132_1_DIVIDED_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_IR_ADC_MISC, SI1132_HIGH_SIGNAL_RANGE);\n\n  writeI2c(SI1132_ALS_IR_ADCMUX, SI1132_ALS_IR_ADCMUX_SMALLIR);\n}\n\n\n\nAUX\n\nAUX_ADCMUX\u306e\u8a2d\u5b9a\u304b\u3089Temperature\u3082\u3057\u304f\u306fVDD\u3092\u9078\u629e\u3057\u3001AUX_DATA\u3092\u751f\u6210\u3059\u308b\u3002\n\nAUX_ADCMUX\nAUX Measurement\u306eInput\u3092\u8a2d\u5b9a\u3002\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\n\n\n\n\nAUX_ADCMUX\n0x0F\n\n\n\n\n\n\n\u5024(bit)\n\u5468\u671f\n\n\n\n\n0x65\nTemperature\n\n\n0x75\nVDD\n\n\n\n\nIR\u3092\u8ffd\u52a0\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\narduino\n#define SI1132_UCOEF0 0x13\n#define SI1132_UCOEF1 0x14\n#define SI1132_UCOEF2 0x15\n#define SI1132_UCOEF3 0x16\n#define SI1132_CHIPLIST 0x01\n#define Si1132_MEASRATE0 0x08\n#define SI1132_ALS_ENCODING 0x06\n#define SI1132_ALS_VIS_ADC_COUNTER 0x10\n#define SI1132_ALS_VIS_ADC_GAIN 0x11\n#define SI1132_ALS_VIS_ADC_MISC 0x12\n#define SI1132_ALS_IR_ADC_COUNTER 0x1D\n#define SI1132_ALS_IR_ADC_GAIN 0x1E\n#define SI1132_ALS_IR_ADC_MISC 0x1F\n#define SI1132_ALS_IR_ADCMUX 0x0E\n#define SI1132_AUX_ADCMUX 0x0F\n\n#define SI1132_EN_UV 0b10000000\n#define SI1132_EN_AUX 0b01000000\n#define SI1132_EN_ALS_IR 0b00100000\n#define SI1132_EN_ALS_VIS 0b00010000\n\n#define SI1132_ALS_VIS_ALIGN 0b00010000\n#define SI1132_ALS_VIS_ALIGN 0b00100000\n\n#define SI1132_1_ADC_CLOCK 0b00000000\n#define SI1132_7_ADC_CLOCK 0b00010000\n#define SI1132_15_ADC_CLOCK 0b00100000\n#define SI1132_31_ADC_CLOCK 0b00110000\n#define SI1132_63_ADC_CLOCK 0b01000000\n#define SI1132_127_ADC_CLOCK 0b10100000\n#define SI1132_255_ADC_CLOCK 0b01100000\n#define SI1132_511_ADC_CLOCK 0b01110000\n\n#define SI1132_1_DIVIDED_ADC_CLOCK 0b0000000\n#define SI1132_16_DEVIDED_ADC_CLOCK 0b0000100\n#define SI1132_64_DEVIDED_ADC_CLOCK 0b0000110\n\n#define SI1132_NORMAL_SIGNAL_RANGE 0b00000000\n#define SI1132_HIGH_SIGNAL_RANGE 0b00100000\n\n#define SI1132_ALS_IR_ADCMUX_SMALLIR 0x00\n\n#define SI1132_AUX_ADCMUX_TEMPERATURE 0x65\n#define SI1132_AUX_ADCMUX_VDD 0x75\n\n#define SI1132_COMMAND 0x18\n#define SI1132_COMMAND_ALS_AUTO 0x0E\n\nvoid Configuration()\n{\n  writeI2c(SI1132_UCOEF0, 0x7B);\n  writeI2c(SI1132_UCOEF1, 0x6B);\n  writeI2c(SI1132_UCOEF2, 0x01);\n  writeI2c(SI1132_UCOEF3, 0x00);\n\n  int enable_sensor = SI1132_EN_UV|SI1132_EN_AUX|SI1132_EN_ALS_IR|SI1132_EN_ALS_VIS;\n  writeI2c(SI1132_CHIPLIST, enable_sensor);\n\n  int flag_als_encoding = SI1132_ALS_VIS_ALIGN | SI1132_ALS_IR_ALIGN;\n  writeI2c(SI1132_ALS_ENCODING, flag_als_encoding);\n\n  // Visible\n  writeI2c(SI1132_ALS_VIS_ADC_COUNTER, SI1132_511_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_VIS_ADC_GAIN, SI1132_1_DIVIDED_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_VIS_ADC_MISC, SI1132_HIGH_SIGNAL_RANGE);\n\n  // IR\n  writeI2c(SI1132_ALS_IR_ADC_COUNTER, SI1132_511_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_IR_ADC_GAIN, SI1132_1_DIVIDED_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_IR_ADC_MISC, SI1132_HIGH_SIGNAL_RANGE);\n\n  writeI2c(SI1132_ALS_IR_ADCMUX, SI1132_ALS_IR_ADCMUX_SMALLIR);\n\n  // AUX\n  writeI2c(SI1132_ALS_IR_ADC_GAIN, SI1132_AUX_ADCMUX_TEMPERATURE);\n\n  // COMMAND\n  writeI2c(SI1132_COMMAND, SI1132_COMMAND_ALS_AUTO);\n}\n\n\n\nRESET\n\n\n\n\u9805\u76ee\n\u30a2\u30c9\u30ec\u30b9\n\n\n\n\nCOMMAND\n0x18\n\n\n\n\n\n\n\u30b3\u30de\u30f3\u30c9\n\u5024(Bit)\n\n\n\n\nRESET\n00000001\n\n\n\n\narduino\n#define SI1132_COMMAND_RESET 0b00000001\n#define SI1132_COMMAND 0x18\n\nvoid Reset()\n{\n  writeI2c(SI1132_COMMAND, SI1132_COMMAND_RESET);\n}\n\n\n\nUV Index\u306e\u8aad\u307f\u53d6\u308a\n\narduino\n#define SI1132_AUX_DATA 0x2C\n\nvoid ReadUV()\n{\n  uint16_t uv_index;\n  uint8_t buffer[2];\n\n  readI2c(SI1132_AUX_DATA, 2, buffer);\n  uv_index = (((uint16_t)buffer[1])<<8) | (uint16_t)buffer[0];\n\n  return uv_index;\n}\n\n\n\nIR\u306e\u8aad\u307f\u53d6\u308a\n\narduino\n#define SI1132_IR_DATA 0x24\n\nvoid ReadIR()\n{\n  uint16_t ir;\n  uint8_t buffer[2];\n\n  readI2c(SI1132_IR_DATA, 2, buffer);\n  ir = (((uint16_t)buffer[1])<<8) | (uint16_t)buffer[0];\n\n  return ir;\n}\n\n\n\nVisible\u306e\u8aad\u307f\u53d6\u308a\n\narduino\n#define SI1132_IR_DATA 0x22\n\nvoid ReadIR()\n{\n  uint16_t visible;\n  uint8_t buffer[2];\n\n  readI2c(SI1132_AUX_DATA, 2, buffer);\n  visible = (((uint16_t)buffer[1])<<8) | (uint16_t)buffer[0];\n\n  return visible;\n}\n\n\n\nI2C\u306e\u30a2\u30af\u30bb\u30b9\u7528\u30b3\u30fc\u30c9\n\nArduino\n#define HTS221_SLAVE_ADDRESS 0x5F\n\n// I2C\u3078\u306e\u66f8\u304d\u8fbc\u307f\nvoid writeI2c(byte register_addr, byte value) {\n  Wire.beginTransmission(HTS221_SLAVE_ADDRESS);  \n  Wire.write(register_addr);         \n  Wire.write(value);                 \n  Wire.endTransmission();        \n}\n\n// I2C\u3078\u306e\u8aad\u307f\u8fbc\u307f\nvoid readI2c(byte register_addr, int num, byte *buf) {\n  Wire.beginTransmission(HTS221_SLAVE_ADDRESS); \n  Wire.write(register_addr);           \n  Wire.endTransmission(false);         \n\n  //Wire.beginTransmission(DEVICE_ADDR); \n  Wire.requestFrom(HTS221_SLAVE_ADDRESS, num);  \n\n  int i = 0;\n  while (Wire.available())\n  {\n    buf[i] = Wire.read(); \n    i++;   \n  }\n  //Wire.endTransmission();         \n}\n\n\n# Si1132\n\n![Si1132.jpeg](https://qiita-image-store.s3.amazonaws.com/0/63450/038f4584-ecc4-2455-fb02-7b4820089ab1.jpeg)\n\n# Datasheet\n\n# Si1134\u3067\u53d6\u5f97\u3067\u304d\u308b\u5024\nUV index\u3068ambient light\u304c\u8a08\u6e2c\u53ef\u80fd\u3002\n\n<img width=\"666\" alt=\"si1134-input.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/63450/ed97c9b4-34a5-be9e-94e2-8b12bce3df25.png\">\n\n| \u9805\u76ee\u540d | \u5024\u306e\u610f\u5473 |\n|:-:|:-:|:-:|\n| ALS_VIS_DATA | Visibility |\n| ALS_IR_DATA | Infrared Light|\n| AUX_DATA | UV\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u5024 |\n\n# Slave Address\n\n| Slave address | 0x60 |\n|:-:|:-:|\n\n# Who_am_i\n\n| PART_ID  | 0x00 |\n|:-:|:-:|\n\nSi1132\u306e\u5834\u5408\u30010x32\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n\n```cpp:arduino\n#define SI1132_PART_ID 0x00\n#define SI1132_DEVICE 0x32\n\nbool SearchDevice()\n{\n  byte device = 0x00;\n  readI2c(SI1132_PART_ID, 1, &device);\n\n  if(device == SI1132_DEVICE){\n      return true;\n  } else{\n      return false;\n  }\n}\n```\n\n# Configuration\n\n## UCOEF\nUVindex\u6e2c\u5b9a\u4fc2\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 | \u5024 |\n|:-:|:-:|:-:|\n| UCOEF0 | 0x13 | 0x7B |\n| UCOEF1 | 0x14 | 0x6B |\n| UCOEF2 | 0x15 | 0x01 |\n| UCOEF3 | 0x16 | 0x00 |\n\n## CHLIST\nUV, IR, Visible light\u3092\u6709\u52b9\u306b\u3059\u308b\u3002\n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 |Bit7 | Bit6 | Bit5 | Bit4 | Bit3 | Bit2 | Bit1 | Bit0 | \n|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|\n| CHILIST | 0x01 | EN_UV | EN_AUX | EN_ALS_IR | EN_ALS_VIS | | | \n\n## \u3053\u3053\u307e\u3067\u306e\u30b3\u30fc\u30c9\n\n```cpp:arduino\n#define SI1132_UCOEF0 0x13\n#define SI1132_UCOEF1 0x14\n#define SI1132_UCOEF2 0x15\n#define SI1132_UCOEF3 0x16\n\n#define SI1132_CHIPLIST 0x01\n#define Si1132_MEASRATE0 0x08\n\n#define SI1132_EN_UV 0b10000000\n#define SI1132_EN_AUX 0b01000000\n#define SI1132_EN_ALS_IR 0b00100000\n#define SI1132_EN_ALS_VIS 0b00010000\n\nvoid Configuration()\n{\n  writeI2c(SI1132_UCOEF0, 0x7B);\n  writeI2c(SI1132_UCOEF1, 0x6B);\n  writeI2c(SI1132_UCOEF2, 0x01);\n  writeI2c(SI1132_UCOEF3, 0x00);\n\n  int enable_sensor = SI1132_EN_UV|SI1132_EN_AUX|SI1132_EN_ALS_IR|SI1132_EN_ALS_VIS;\n  writeI2c(SI1132_CHIPLIST, enable_sensor);\n\n  // Rate\u306e\u8a2d\u5b9a\n  writeI2c(SI1132_CHIPLIST, 0xff);\t\n}\n```\n\n## Visible\u95a2\u9023\n\nVisible\u306eConfiguration\u3002Visibility\u3067\u306f\u3001\u53d6\u5f97\u3057\u305fVisible\u3068\u3001ALS_VIS_ALIGN, ALS_RATE, ALS_VIS_ADC_REC, ALS_VIS_ADC_GAIN, VIS_RANGE\u306e\u8a2d\u5b9a\u304b\u3089\u3001ALS_VIS_DATA\u3092\u751f\u6210\u3059\u308b\u3002\n\n![config_vis.png](https://qiita-image-store.s3.amazonaws.com/0/63450/e2e4a3fe-64ef-c162-5aeb-bfe80d8f2b0d.png)\n\n| \u8a2d\u5b9a\u3059\u308b\u5024 | \u8a2d\u5b9a\u3059\u308b\u5834\u6240 |\n|:--|:--|\n| ALS_VIS_ALIGN | ALS_ENCODING(0x06)\u306e4bit\u76ee\u3067\u8a2d\u5b9a |\n| ALS_RATE | MEAS_RATE0(0x08), MEAS_RATE1(0x09)\u3067\u8a2d\u5b9a |\n| ALS_VIS_ADC_REC | ALS_VIS_ADC_COUNTER(0x10)\u306e4\u301c6bit\u76ee\u3067\u8a2d\u5b9a |\n| ALS_VIS_ADC_GAIN |  ALS_VIS_ADC_GAIN(0x11) \u306e0\u301c2bit\u76ee\u3067\u8a2d\u5b9a |\n| VIS_RANGE |  ALS_VIS_ADC_MISC(0x12)\u306e5bit\u76ee\u3067\u8a2d\u5b9a |\n\n### ALS_VIS_ALIGN\n\nBit\u3092\u305f\u3066\u308b\u306817bit ADC\u306e16bit\u3092\u53d6\u3063\u3066\u304f\u308b\u3002\n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 | \n|:-:|:-:|\n| ALS_ENCODING | 0x06 | \n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 |Bit7 | Bit6 | Bit5 | Bit4 | Bit3 | Bit2 | Bit1 | Bit0 | \n|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|\n| ALS_ENCODING | 0x06 |  | | ALS_IR_ALIGN | ALS_VIS_ALIGN | | | \n\n### ALS_VIS_ADC_REC\n\nALS-VIS\u6e2c\u5b9a\u3092\u884c\u3046\u524d\u306b\u5fc5\u8981\u3068\u3059\u308bADC\u306e\u56de\u5fa9\u5468\u671f\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 | \n|:-:|:-:|\n| ALS_VIS_ADC_COUNTER | 0x10 | \n\n| \u5024(bit)  | \u5468\u671f | \n|:--|:--|\n| 000 | 1 ADC Clock (50 ns times 2ALS_VIS_ADC_GAIN) | \n| 001 | 7 ADC Clock (350 ns times 2ALS_VIS_ADC_GAIN)| \n| 010 | 15 ADC Clock (750 ns times 2ALS_VIS_ADC_GAIN)| \n| 011 | 31 ADC Clock (1.55 \u00b5s times 2ALS_VIS_ADC_GAIN)| \n| 100 | 63 ADC Clock (3.15 \u00b5s times 2ALS_VIS_ADC_GAIN)| \n| 101 | 127 ADC Clock (6.35 \u00b5s times 2ALS_VIS_ADC_GAIN)| \n| 110 | 255 ADC Clock (12.75 \u00b5s times 2ALS_VIS_ADC_GAIN)| \n| 111 | 511 ADC Clock (25.55 \u00b5s times 2ALS_VIS_ADC_GAIN)| \n\n### ALS_VIS_ADC_GAIN\nALS\u53ef\u8996\u6e2c\u5b9a\u306e\u305f\u3081\u306e\u3001ADC\u306e\u7a4d\u5206\u6642\u9593\u3092\u8a2d\u5b9a\u3002\n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 | \n|:-:|:-:|\n| ALS_VIS_ADC_GAIN | 0x11 | \n\n| \u5024(bit)  | \u5468\u671f | \n|:--|:--|\n| 000 | 1\u5206\u5272\u3057\u305fADC Clock | \n| 100 | 16\u5206\u5272\u3057\u305fADC Clock | \n| 110 | 64\u5206\u5272\u3057\u305fADC Clock | \n\n## VIS_RANGE\n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 | \n|:-:|:-:|\n| ALS_VIS_ADC_MISC  | 0x12 | \n\n\n| \u5024(bit)  | \u610f\u5473 | \n|:--|:--|\n| 0 | Normal Signal Range | \n| 1 | High Signal Range  | \n\n## Visible\u3092\u8ffd\u52a0\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n```cpp:arduino\n#define SI1132_UCOEF0 0x13\n#define SI1132_UCOEF1 0x14\n#define SI1132_UCOEF2 0x15\n#define SI1132_UCOEF3 0x16\n#define SI1132_CHIPLIST 0x01\n#define Si1132_MEASRATE0 0x08\n#define SI1132_ALS_ENCODING 0x06\n#define SI1132_ALS_VIS_ADC_COUNTER 0x10\n#define SI1132_ALS_VIS_ADC_GAIN 0x11\n#define SI1132_ALS_VIS_ADC_MISC 0x12\n\n#define SI1132_EN_UV 0b10000000\n#define SI1132_EN_AUX 0b01000000\n#define SI1132_EN_ALS_IR 0b00100000\n#define SI1132_EN_ALS_VIS 0b00010000\n\n#define SI1132_ALS_VIS_ALIGN 0b00010000\n\n#define SI1132_1_ADC_CLOCK 0b00000000\n#define SI1132_7_ADC_CLOCK 0b00010000\n#define SI1132_15_ADC_CLOCK 0b00100000\n#define SI1132_31_ADC_CLOCK 0b00110000\n#define SI1132_63_ADC_CLOCK 0b01000000\n#define SI1132_127_ADC_CLOCK 0b10100000\n#define SI1132_255_ADC_CLOCK 0b01100000\n#define SI1132_511_ADC_CLOCK 0b01110000\n\n#define SI1132_1_DIVIDED_ADC_CLOCK 0b0000000\n#define SI1132_16_DEVIDED_ADC_CLOCK 0b0000100\n#define SI1132_64_DEVIDED_ADC_CLOCK 0b0000110\n\n#define SI1132_NORMAL_SIGNAL_RANGE 0b00000000\n#define SI1132_HIGH_SIGNAL_RANGE 0b00100000\n\nvoid Configuration()\n{\n  writeI2c(SI1132_UCOEF0, 0x7B);\n  writeI2c(SI1132_UCOEF1, 0x6B);\n  writeI2c(SI1132_UCOEF2, 0x01);\n  writeI2c(SI1132_UCOEF3, 0x00);\n\n  int enable_sensor = SI1132_EN_UV|SI1132_EN_AUX|SI1132_EN_ALS_IR|SI1132_EN_ALS_VIS;\n  writeI2c(SI1132_CHIPLIST, enable_sensor);\n\n  // Rate\u306e\u8a2d\u5b9a\n  writeI2c(SI1132_CHIPLIST, 0xff);\n\n  int flag_als_encoding = SI1132_ALS_VIS_ALIGN;\n  writeI2c(SI1132_ALS_ENCODING, flag_als_encoding);\n\n  // Visible\n  writeI2c(SI1132_ALS_VIS_ADC_COUNTER, SI1132_511_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_VIS_ADC_GAIN, SI1132_1_DIVIDED_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_VIS_ADC_MISC, SI1132_HIGH_SIGNAL_RANGE);\n}\n```\n\n\n## Infrared Light\u95a2\u9023\n\n![Config-ir.png](https://qiita-image-store.s3.amazonaws.com/0/63450/ddde7620-ca61-8da1-596b-36e6959a5ed3.png)\n\nInfrared Light(IR)\u306eConfiguration\u3002Infrared Light(IR)\u3067\u306f\u3001\u53d6\u5f97\u3057\u305fInfrared Light(IR)\u3068\u3001ALS_IR_ADCMUX\u306eInput\u3068\u3001ALS_IR_ALIGN, IR_RATE, ALS_IR_ADC_REC, ALS_IR_ADC_GAIN, IR_RANGE\u306e\u8a2d\u5b9a\u304b\u3089\u3001ALS_IR_DATA\u3092\u751f\u6210\u3059\u308b\u3002\n\n| \u8a2d\u5b9a\u3059\u308b\u5024 | \u8a2d\u5b9a\u3059\u308b\u5834\u6240 |\n|:--|:--|\n| ALS_IR_ALIGN | ALS_ENCODING(0x06)\u306e4bit\u76ee\u3067\u8a2d\u5b9a |\n| ALS_RATE | MEAS_RATE0(0x08), MEAS_RATE1(0x09)\u3067\u8a2d\u5b9a |\n| ALS_IR_ADC_REC | ALS_IR_ADC_COUNTER(0x1D)\u306e4\u301c6bit\u76ee\u3067\u8a2d\u5b9a |\n| ALS_IR_ADC_GAIN |  ALS_IR_ADC_GAIN(0x1E) \u306e0\u301c2bit\u76ee\u3067\u8a2d\u5b9a |\n| IR_RANGE |  ALS_VIS_ADC_MISC(0x1F)\u306e5bit\u76ee\u3067\u8a2d\u5b9a |\n| ALS_IR_ADCMUX | ALS_IR_ADCMUX(0x0E)\u3067\u8a2d\u5b9a |\n\n### ALS_IR_ALIGN\n\nBit\u3092\u305f\u3066\u308b\u306817bit ADC\u306e16bit\u3092\u53d6\u3063\u3066\u304f\u308b\u3002\n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 | \n|:-:|:-:|\n| ALS_ENCODING | 0x06 | \n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 |Bit7 | Bit6 | Bit5 | Bit4 | Bit3 | Bit2 | Bit1 | Bit0 | \n|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|\n| ALS_ENCODING | 0x06 |  | | ALS_IR_ALIGN | ALS_VIS_ALIGN | | | \n\n### ALS_IR_ADC_REC\n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 | \n|:-:|:-:|\n| ALS_IR_ADC_COUNTER | 0x1D | \n\nALS-IR\u6e2c\u5b9a\u3092\u884c\u3046\u524d\u306b\u5fc5\u8981\u3068\u3059\u308bADC\u306e\u56de\u5fa9\u5468\u671f\u3002\n\n| \u5024(bit)  | \u5468\u671f | \n|:--|:--|\n| 000 | 1 ADC Clock (50 ns times 2ALS_IR_ADC_GAIN) | \n| 001 | 7 ADC Clock (350 ns times 2ALS_IR_ADC_GAIN)| \n| 010 | 15 ADC Clock (750 ns times 2ALS_IR_ADC_GAIN)| \n| 011 | 31 ADC Clock (1.55 \u00b5s times 2ALS_IR_ADC_GAIN)| \n| 100 | 63 ADC Clock (3.15 \u00b5s times 2ALS_IR_ADC_GAIN)| \n| 101 | 127 ADC Clock (6.35 \u00b5s times 2ALS_IR_ADC_GAIN)| \n| 110 | 255 ADC Clock (12.75 \u00b5s times 2ALS_IR_ADC_GAIN)| \n| 111 | 511 ADC Clock (25.55 \u00b5s times 2ALS_IR_ADC_GAIN)| \n\n### ALS_IR_ADC_GAIN\nALS\u53ef\u8996\u6e2c\u5b9a\u306e\u305f\u3081\u306e\u3001ADC\u306e\u7a4d\u5206\u6642\u9593\u3092\u8a2d\u5b9a\u3002\n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 | \n|:-:|:-:|\n| ALS_IR_ADC_GAIN | 0x1E | \n\n| \u5024(bit)  | \u5468\u671f | \n|:--|:--|\n| 000 | 1\u5206\u5272\u3057\u305fADC Clock | \n| 100 | 16\u5206\u5272\u3057\u305fADC Clock | \n| 110 | 64\u5206\u5272\u3057\u305fADC Clock | \n\n### ALS_IR_ADC_MISC \n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 | \n|:-:|:-:|\n| ALS_IR_ADC_MISC  | 0x1F | \n\n\n| \u5024(bit)  | \u610f\u5473 | \n|:--|:--|\n| 0 | Normal Signal Range | \n| 1 | High Signal Range  | \n\n### ALS_IR_ADCMUX \n\nSelects ADC Input for ALS_IR Measurement.\n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 | \n|:-:|:-:|\n| AUX_ADCMUX | 0x0E | \n\n| \u5024(bit)  | \u5468\u671f | \n|:--|:--|\n| 0x00 |  Small IR photodiode | \n \n## IR\u3092\u8ffd\u52a0\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\n```cpp:arduino\n#define SI1132_UCOEF0 0x13\n#define SI1132_UCOEF1 0x14\n#define SI1132_UCOEF2 0x15\n#define SI1132_UCOEF3 0x16\n#define SI1132_CHIPLIST 0x01\n#define Si1132_MEASRATE0 0x08\n#define SI1132_ALS_ENCODING 0x06\n#define SI1132_ALS_VIS_ADC_COUNTER 0x10\n#define SI1132_ALS_VIS_ADC_GAIN 0x11\n#define SI1132_ALS_VIS_ADC_MISC 0x12\n#define SI1132_ALS_IR_ADC_COUNTER 0x1D\n#define SI1132_ALS_IR_ADC_GAIN 0x1E\n#define SI1132_ALS_IR_ADC_MISC 0x1F\n#define SI1132_ALS_IR_ADCMUX 0x0E\n\n#define SI1132_EN_UV 0b10000000\n#define SI1132_EN_AUX 0b01000000\n#define SI1132_EN_ALS_IR 0b00100000\n#define SI1132_EN_ALS_VIS 0b00010000\n\n#define SI1132_ALS_VIS_ALIGN 0b00010000\n#define SI1132_ALS_VIS_ALIGN 0b00100000\n\n#define SI1132_1_ADC_CLOCK 0b00000000\n#define SI1132_7_ADC_CLOCK 0b00010000\n#define SI1132_15_ADC_CLOCK 0b00100000\n#define SI1132_31_ADC_CLOCK 0b00110000\n#define SI1132_63_ADC_CLOCK 0b01000000\n#define SI1132_127_ADC_CLOCK 0b10100000\n#define SI1132_255_ADC_CLOCK 0b01100000\n#define SI1132_511_ADC_CLOCK 0b01110000\n\n#define SI1132_1_DIVIDED_ADC_CLOCK 0b0000000\n#define SI1132_16_DEVIDED_ADC_CLOCK 0b0000100\n#define SI1132_64_DEVIDED_ADC_CLOCK 0b0000110\n\n#define SI1132_NORMAL_SIGNAL_RANGE 0b00000000\n#define SI1132_HIGH_SIGNAL_RANGE 0b00100000\n\n#define SI1132_ALS_IR_ADCMUX_SMALLIR 0x00\n\nvoid Configuration()\n{\n  writeI2c(SI1132_UCOEF0, 0x7B);\n  writeI2c(SI1132_UCOEF1, 0x6B);\n  writeI2c(SI1132_UCOEF2, 0x01);\n  writeI2c(SI1132_UCOEF3, 0x00);\n\n  int enable_sensor = SI1132_EN_UV|SI1132_EN_AUX|SI1132_EN_ALS_IR|SI1132_EN_ALS_VIS;\n  writeI2c(SI1132_CHIPLIST, enable_sensor);\n\n  // Rate\u306e\u8a2d\u5b9a\n  writeI2c(SI1132_CHIPLIST, 0xff);\n\n  int flag_als_encoding = SI1132_ALS_VIS_ALIGN | SI1132_ALS_IR_ALIGN;\n  writeI2c(SI1132_ALS_ENCODING, flag_als_encoding);\n  \n  // Visible\n  writeI2c(SI1132_ALS_VIS_ADC_COUNTER, SI1132_511_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_VIS_ADC_GAIN, SI1132_1_DIVIDED_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_VIS_ADC_MISC, SI1132_HIGH_SIGNAL_RANGE);\n\n  // IR\n  writeI2c(SI1132_ALS_IR_ADC_COUNTER, SI1132_511_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_IR_ADC_GAIN, SI1132_1_DIVIDED_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_IR_ADC_MISC, SI1132_HIGH_SIGNAL_RANGE);\n\n  writeI2c(SI1132_ALS_IR_ADCMUX, SI1132_ALS_IR_ADCMUX_SMALLIR);\n}\n```\n\n## AUX\n\n![config-aux.png](https://qiita-image-store.s3.amazonaws.com/0/63450/f4b8e4f5-b061-95e7-5fd5-8ce1fc32e341.png)\n\nAUX_ADCMUX\u306e\u8a2d\u5b9a\u304b\u3089Temperature\u3082\u3057\u304f\u306fVDD\u3092\u9078\u629e\u3057\u3001AUX_DATA\u3092\u751f\u6210\u3059\u308b\u3002\n\n### AUX_ADCMUX\nAUX Measurement\u306eInput\u3092\u8a2d\u5b9a\u3002\n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 | \n|:-:|:-:|\n| AUX_ADCMUX | 0x0F | \n\n| \u5024(bit)  | \u5468\u671f | \n|:--|:--|\n| 0x65 | Temperature | \n| 0x75 | VDD | \n\n## IR\u3092\u8ffd\u52a0\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\n```cpp:arduino\n#define SI1132_UCOEF0 0x13\n#define SI1132_UCOEF1 0x14\n#define SI1132_UCOEF2 0x15\n#define SI1132_UCOEF3 0x16\n#define SI1132_CHIPLIST 0x01\n#define Si1132_MEASRATE0 0x08\n#define SI1132_ALS_ENCODING 0x06\n#define SI1132_ALS_VIS_ADC_COUNTER 0x10\n#define SI1132_ALS_VIS_ADC_GAIN 0x11\n#define SI1132_ALS_VIS_ADC_MISC 0x12\n#define SI1132_ALS_IR_ADC_COUNTER 0x1D\n#define SI1132_ALS_IR_ADC_GAIN 0x1E\n#define SI1132_ALS_IR_ADC_MISC 0x1F\n#define SI1132_ALS_IR_ADCMUX 0x0E\n#define SI1132_AUX_ADCMUX 0x0F\n\n#define SI1132_EN_UV 0b10000000\n#define SI1132_EN_AUX 0b01000000\n#define SI1132_EN_ALS_IR 0b00100000\n#define SI1132_EN_ALS_VIS 0b00010000\n\n#define SI1132_ALS_VIS_ALIGN 0b00010000\n#define SI1132_ALS_VIS_ALIGN 0b00100000\n\n#define SI1132_1_ADC_CLOCK 0b00000000\n#define SI1132_7_ADC_CLOCK 0b00010000\n#define SI1132_15_ADC_CLOCK 0b00100000\n#define SI1132_31_ADC_CLOCK 0b00110000\n#define SI1132_63_ADC_CLOCK 0b01000000\n#define SI1132_127_ADC_CLOCK 0b10100000\n#define SI1132_255_ADC_CLOCK 0b01100000\n#define SI1132_511_ADC_CLOCK 0b01110000\n\n#define SI1132_1_DIVIDED_ADC_CLOCK 0b0000000\n#define SI1132_16_DEVIDED_ADC_CLOCK 0b0000100\n#define SI1132_64_DEVIDED_ADC_CLOCK 0b0000110\n\n#define SI1132_NORMAL_SIGNAL_RANGE 0b00000000\n#define SI1132_HIGH_SIGNAL_RANGE 0b00100000\n\n#define SI1132_ALS_IR_ADCMUX_SMALLIR 0x00\n\n#define SI1132_AUX_ADCMUX_TEMPERATURE 0x65\n#define SI1132_AUX_ADCMUX_VDD 0x75\n\n#define SI1132_COMMAND 0x18\n#define SI1132_COMMAND_ALS_AUTO 0x0E\n\nvoid Configuration()\n{\n  writeI2c(SI1132_UCOEF0, 0x7B);\n  writeI2c(SI1132_UCOEF1, 0x6B);\n  writeI2c(SI1132_UCOEF2, 0x01);\n  writeI2c(SI1132_UCOEF3, 0x00);\n\n  int enable_sensor = SI1132_EN_UV|SI1132_EN_AUX|SI1132_EN_ALS_IR|SI1132_EN_ALS_VIS;\n  writeI2c(SI1132_CHIPLIST, enable_sensor);\n\n  int flag_als_encoding = SI1132_ALS_VIS_ALIGN | SI1132_ALS_IR_ALIGN;\n  writeI2c(SI1132_ALS_ENCODING, flag_als_encoding);\n  \n  // Visible\n  writeI2c(SI1132_ALS_VIS_ADC_COUNTER, SI1132_511_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_VIS_ADC_GAIN, SI1132_1_DIVIDED_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_VIS_ADC_MISC, SI1132_HIGH_SIGNAL_RANGE);\n\n  // IR\n  writeI2c(SI1132_ALS_IR_ADC_COUNTER, SI1132_511_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_IR_ADC_GAIN, SI1132_1_DIVIDED_ADC_CLOCK);\n\n  writeI2c(SI1132_ALS_IR_ADC_MISC, SI1132_HIGH_SIGNAL_RANGE);\n\n  writeI2c(SI1132_ALS_IR_ADCMUX, SI1132_ALS_IR_ADCMUX_SMALLIR);\n\n  // AUX\n  writeI2c(SI1132_ALS_IR_ADC_GAIN, SI1132_AUX_ADCMUX_TEMPERATURE);\n\n  // COMMAND\n  writeI2c(SI1132_COMMAND, SI1132_COMMAND_ALS_AUTO);\n}\n```\n\n\n# RESET\n\n| \u9805\u76ee  | \u30a2\u30c9\u30ec\u30b9 | \n|:-:|:-:|\n| COMMAND | 0x18 | \n \n| \u30b3\u30de\u30f3\u30c9  | \u5024(Bit) | \n|:-:|:-:|\n| RESET | 00000001 |\n\n```cpp:arduino\n#define SI1132_COMMAND_RESET 0b00000001\n#define SI1132_COMMAND 0x18\n\nvoid Reset()\n{\n  writeI2c(SI1132_COMMAND, SI1132_COMMAND_RESET);\n}\n```\n\n# UV Index\u306e\u8aad\u307f\u53d6\u308a\n\n```cpp:arduino\n#define SI1132_AUX_DATA 0x2C\n\nvoid ReadUV()\n{\n  uint16_t uv_index;\n  uint8_t buffer[2];\n\n  readI2c(SI1132_AUX_DATA, 2, buffer);\n  uv_index = (((uint16_t)buffer[1])<<8) | (uint16_t)buffer[0];\n\n  return uv_index;\n}\n```\n\n# IR\u306e\u8aad\u307f\u53d6\u308a\n\n```cpp:arduino\n#define SI1132_IR_DATA 0x24\n\nvoid ReadIR()\n{\n  uint16_t ir;\n  uint8_t buffer[2];\n\n  readI2c(SI1132_IR_DATA, 2, buffer);\n  ir = (((uint16_t)buffer[1])<<8) | (uint16_t)buffer[0];\n\n  return ir;\n}\n```\n\n# Visible\u306e\u8aad\u307f\u53d6\u308a\n\n```cpp:arduino\n#define SI1132_IR_DATA 0x22\n\nvoid ReadIR()\n{\n  uint16_t visible;\n  uint8_t buffer[2];\n\n  readI2c(SI1132_AUX_DATA, 2, buffer);\n  visible = (((uint16_t)buffer[1])<<8) | (uint16_t)buffer[0];\n\n  return visible;\n}\n```\n\n# I2C\u306e\u30a2\u30af\u30bb\u30b9\u7528\u30b3\u30fc\u30c9\n\n```cpp:Arduino\n#define HTS221_SLAVE_ADDRESS 0x5F\n\n// I2C\u3078\u306e\u66f8\u304d\u8fbc\u307f\nvoid writeI2c(byte register_addr, byte value) {\n  Wire.beginTransmission(HTS221_SLAVE_ADDRESS);  \n  Wire.write(register_addr);         \n  Wire.write(value);                 \n  Wire.endTransmission();        \n}\n\n// I2C\u3078\u306e\u8aad\u307f\u8fbc\u307f\nvoid readI2c(byte register_addr, int num, byte *buf) {\n  Wire.beginTransmission(HTS221_SLAVE_ADDRESS); \n  Wire.write(register_addr);           \n  Wire.endTransmission(false);         \n\n  //Wire.beginTransmission(DEVICE_ADDR); \n  Wire.requestFrom(HTS221_SLAVE_ADDRESS, num);  \n\n  int i = 0;\n  while (Wire.available())\n  {\n    buf[i] = Wire.read(); \n    i++;   \n  }\n  //Wire.endTransmission();         \n}\n```\n", "tags": ["fabo", "I2C", "mems", "UV", "IoT"]}