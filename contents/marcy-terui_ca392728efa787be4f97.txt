{"context": " More than 1 year has passed since last update.\n\n\u52d5\u6a5f\nCloudWatch\u306eMetrics\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u5358\u4f4d\u3063\u3066\u306a\u3093\u3060\u308d\u3046\u3063\u3066\u3044\u3046\u306e\u3092\u8abf\u3079\u305f\u304b\u3063\u305f\u3051\u3069\u3001\u826f\u3044\u4e00\u89a7\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u4f5c\u3063\u305f\u3002\nbash + aws-cli\u3060\u3068\u3081\u3093\u3069\u304f\u3055\u305d\u3046\u306a\u306e\u3067\u3001Ruby\u306a\u3089\u30b5\u30af\u30c3\u3068\u4f5c\u308c\u305d\u3046\u3060\u3051\u3069\u3001\u304a\u52c9\u5f37\u304c\u3066\u3089Python\u3067\u3002\n\n\u52d5\u4f5c\u74b0\u5883\n\nPython 3.4.2\nboto 2.4.1\n\n\n\u30bd\u30fc\u30b9\n#!/usr/bin/env python\n\nimport sys\nimport datetime\nimport re\nfrom boto.ec2 import cloudwatch\n\nend    = datetime.datetime.utcnow()\nstart  = end - datetime.timedelta(minutes=10)\n\ncw = cloudwatch.connect_to_region('ap-northeast-1')\n\ndef main():\n\n    if len(sys.argv) not in [2,3]:\n        print('Usage: python %s <namespace> [separator]' % sys.argv[0])\n        quit()\n\n    namespace = sys.argv[1]\n    separator = \"\\t\" if len(sys.argv) == 2 else sys.argv[2]\n    results   = []\n\n    for metric in cw.list_metrics(namespace=namespace):\n        for data in metric.query(start_time=start, end_time=end, statistics='Average'):\n            results.append(separator.join([namespace, metric.name, data['Unit']]))\n\n    results = list(set(results))\n    for ret in results:\n        print(ret)\n\nif __name__ == '__main__':\n    main()\n\n\n\u4f7f\u3044\u65b9\npython <script-file-name> <namespace> [separator]\n\nseparator\u306f\u6307\u5b9a\u3057\u306a\u3044\u3068\u30bf\u30d6\u533a\u5207\u308a\u306b\u306a\u308b\u3002\n\n\u5b9f\u884c\u7d50\u679c\n\u3044\u308b\u304b\u3069\u3046\u304b\u5206\u304b\u3089\u306a\u3044\u3051\u3069\u3001\u7d50\u679c\u3060\u3051\u77e5\u308a\u305f\u3044\u65b9\u5411\u3051\u306b\u3002\n\uff08EC2,EBS,RDS\u306e\u307f\uff09\n$ python get-metrics-unit-type.py AWS/EC2\nAWS/EC2 CPUCreditUsage  Count\nAWS/EC2 CPUCreditBalance    Count\nAWS/EC2 StatusCheckFailed   Count\nAWS/EC2 DiskReadOps Count\nAWS/EC2 StatusCheckFailed_System    Count\nAWS/EC2 DiskWriteBytes  Bytes\nAWS/EC2 NetworkOut  Bytes\nAWS/EC2 DiskReadBytes   Bytes\nAWS/EC2 NetworkIn   Bytes\nAWS/EC2 DiskWriteOps    Count\nAWS/EC2 StatusCheckFailed_Instance  Count\nAWS/EC2 CPUUtilization  Percent\n\n$ python get-metrics-unit-type.py AWS/EBS\nAWS/EBS VolumeWriteBytes    Bytes\nAWS/EBS VolumeQueueLength   Count\nAWS/EBS VolumeReadOps   Count\nAWS/EBS VolumeIdleTime  Seconds\nAWS/EBS VolumeTotalWriteTime    Seconds\nAWS/EBS VolumeWriteOps  Count\n\n$ python get-metrics-unit-type.py AWS/RDS\nAWS/RDS FreeableMemory  Bytes\nAWS/RDS NetworkTransmitThroughput   Bytes/Second\nAWS/RDS DatabaseConnections Count\nAWS/RDS WriteIOPS   Count/Second\nAWS/RDS ReadIOPS    Count/Second\nAWS/RDS ReadLatency Seconds\nAWS/RDS WriteThroughput Bytes/Second\nAWS/RDS ReadThroughput  Bytes/Second\nAWS/RDS FreeStorageSpace    Bytes\nAWS/RDS WriteLatency    Seconds\nAWS/RDS DiskQueueDepth  Count\nAWS/RDS CPUUtilization  Percent\nAWS/RDS CPUCreditUsage  Count\nAWS/RDS NetworkReceiveThroughput    Bytes/Second\nAWS/RDS CPUCreditBalance    Count\nAWS/RDS BinLogDiskUsage Bytes\nAWS/RDS SwapUsage   Bytes\n\n\nboto\u306e\u611f\u60f3\n\n\u521d\u3081\u306f\u516c\u5f0f\u3058\u3083\u306a\u304f\u3066\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u88fd\u3060\u3063\u305f\uff08\u3067\u3059\u3088\u306d\uff1f\uff09\u304b\u3089\u304b\u3001\u4ed6\u306eSDK\u3068\u3061\u3087\u3063\u3068\u4f7f\u7528\u611f\u304c\u9055\u3046\u6c17\u304c\u3059\u308b\n\u9006\u306b\u3001\u5b9f\u7528\u91cd\u8996\u3063\u307d\u3044\u611f\u3058\u304c\u3059\u308b\u306e\u3067\u6163\u308c\u308c\u3070\u4ed6\u3088\u308a\u4f7f\u3044\u3084\u3059\u3044\u306e\u304b\u3082\uff1f\n\n# \u52d5\u6a5f\nCloudWatch\u306eMetrics\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u5358\u4f4d\u3063\u3066\u306a\u3093\u3060\u308d\u3046\u3063\u3066\u3044\u3046\u306e\u3092\u8abf\u3079\u305f\u304b\u3063\u305f\u3051\u3069\u3001\u826f\u3044\u4e00\u89a7\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u4f5c\u3063\u305f\u3002\n`bash` + `aws-cli`\u3060\u3068\u3081\u3093\u3069\u304f\u3055\u305d\u3046\u306a\u306e\u3067\u3001`Ruby`\u306a\u3089\u30b5\u30af\u30c3\u3068\u4f5c\u308c\u305d\u3046\u3060\u3051\u3069\u3001\u304a\u52c9\u5f37\u304c\u3066\u3089`Python`\u3067\u3002\n\n# \u52d5\u4f5c\u74b0\u5883\n- Python 3.4.2\n- boto 2.4.1\n\n# \u30bd\u30fc\u30b9\n\n```py\n#!/usr/bin/env python\n\nimport sys\nimport datetime\nimport re\nfrom boto.ec2 import cloudwatch\n\nend    = datetime.datetime.utcnow()\nstart  = end - datetime.timedelta(minutes=10)\n\ncw = cloudwatch.connect_to_region('ap-northeast-1')\n\ndef main():\n\n    if len(sys.argv) not in [2,3]:\n        print('Usage: python %s <namespace> [separator]' % sys.argv[0])\n        quit()\n\n    namespace = sys.argv[1]\n    separator = \"\\t\" if len(sys.argv) == 2 else sys.argv[2]\n    results   = []\n\n    for metric in cw.list_metrics(namespace=namespace):\n        for data in metric.query(start_time=start, end_time=end, statistics='Average'):\n            results.append(separator.join([namespace, metric.name, data['Unit']]))\n\n    results = list(set(results))\n    for ret in results:\n        print(ret)\n\nif __name__ == '__main__':\n\tmain()\n```\n\n# \u4f7f\u3044\u65b9\n\n```shell-session\npython <script-file-name> <namespace> [separator]\n```\n\n`separator`\u306f\u6307\u5b9a\u3057\u306a\u3044\u3068\u30bf\u30d6\u533a\u5207\u308a\u306b\u306a\u308b\u3002\n\n# \u5b9f\u884c\u7d50\u679c\n\n\u3044\u308b\u304b\u3069\u3046\u304b\u5206\u304b\u3089\u306a\u3044\u3051\u3069\u3001\u7d50\u679c\u3060\u3051\u77e5\u308a\u305f\u3044\u65b9\u5411\u3051\u306b\u3002\n\uff08EC2,EBS,RDS\u306e\u307f\uff09\n\n```shell-session\n$ python get-metrics-unit-type.py AWS/EC2\nAWS/EC2\tCPUCreditUsage\tCount\nAWS/EC2\tCPUCreditBalance\tCount\nAWS/EC2\tStatusCheckFailed\tCount\nAWS/EC2\tDiskReadOps\tCount\nAWS/EC2\tStatusCheckFailed_System\tCount\nAWS/EC2\tDiskWriteBytes\tBytes\nAWS/EC2\tNetworkOut\tBytes\nAWS/EC2\tDiskReadBytes\tBytes\nAWS/EC2\tNetworkIn\tBytes\nAWS/EC2\tDiskWriteOps\tCount\nAWS/EC2\tStatusCheckFailed_Instance\tCount\nAWS/EC2\tCPUUtilization\tPercent\n\n$ python get-metrics-unit-type.py AWS/EBS\nAWS/EBS\tVolumeWriteBytes\tBytes\nAWS/EBS\tVolumeQueueLength\tCount\nAWS/EBS\tVolumeReadOps\tCount\nAWS/EBS\tVolumeIdleTime\tSeconds\nAWS/EBS\tVolumeTotalWriteTime\tSeconds\nAWS/EBS\tVolumeWriteOps\tCount\n\n$ python get-metrics-unit-type.py AWS/RDS\nAWS/RDS\tFreeableMemory\tBytes\nAWS/RDS\tNetworkTransmitThroughput\tBytes/Second\nAWS/RDS\tDatabaseConnections\tCount\nAWS/RDS\tWriteIOPS\tCount/Second\nAWS/RDS\tReadIOPS\tCount/Second\nAWS/RDS\tReadLatency\tSeconds\nAWS/RDS\tWriteThroughput\tBytes/Second\nAWS/RDS\tReadThroughput\tBytes/Second\nAWS/RDS\tFreeStorageSpace\tBytes\nAWS/RDS\tWriteLatency\tSeconds\nAWS/RDS\tDiskQueueDepth\tCount\nAWS/RDS\tCPUUtilization\tPercent\nAWS/RDS\tCPUCreditUsage\tCount\nAWS/RDS\tNetworkReceiveThroughput\tBytes/Second\nAWS/RDS\tCPUCreditBalance\tCount\nAWS/RDS\tBinLogDiskUsage\tBytes\nAWS/RDS\tSwapUsage\tBytes\n```\n\n\n# boto\u306e\u611f\u60f3\n\n- \u521d\u3081\u306f\u516c\u5f0f\u3058\u3083\u306a\u304f\u3066\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u88fd\u3060\u3063\u305f\uff08\u3067\u3059\u3088\u306d\uff1f\uff09\u304b\u3089\u304b\u3001\u4ed6\u306eSDK\u3068\u3061\u3087\u3063\u3068\u4f7f\u7528\u611f\u304c\u9055\u3046\u6c17\u304c\u3059\u308b\n- \u9006\u306b\u3001\u5b9f\u7528\u91cd\u8996\u3063\u307d\u3044\u611f\u3058\u304c\u3059\u308b\u306e\u3067\u6163\u308c\u308c\u3070\u4ed6\u3088\u308a\u4f7f\u3044\u3084\u3059\u3044\u306e\u304b\u3082\uff1f\n", "tags": ["Python", "boto", "AWS", "CloudWatch"]}