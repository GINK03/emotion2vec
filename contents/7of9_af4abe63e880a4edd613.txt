{"tags": ["borgWarp", "TensorFlow", "difficultToSearch"], "context": "\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\n\nhttp://blog.brainpad.co.jp/entry/2016/03/28/170000\n\u3092\u5b66\u7fd2\u4e2d\u3002\nfully_connected_feed.py\n\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066flags\u3068\u3044\u3046\u306e\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\n# Basic model parameters as external flags.\nflags = tf.app.flags\nFLAGS = flags.FLAGS\nflags.DEFINE_float('learning_rate', 0.01, 'Initial learning rate.')\nflags.DEFINE_integer('max_steps', 2000, 'Number of steps to run trainer.')\nflags.DEFINE_integer('hidden1', 128, 'Number of units in hidden layer 1.')\nflags.DEFINE_integer('hidden2', 32, 'Number of units in hidden layer 2.')\nflags.DEFINE_integer('batch_size', 100, 'Batch size.  '\n                     'Must divide evenly into the dataset sizes.')\nflags.DEFINE_string('train_dir', 'data', 'Directory to put the training data.')\nflags.DEFINE_boolean('fake_data', False, 'If true, uses fake data '\n                     'for unit testing.')\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u3044\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3046\u3002\n'batch_size'\u3068\u5b9a\u7fa9\u3057\u305f\u5834\u5408\u306b\u3001FLAGS.batch_size\u3068\u3057\u3066\u4f7f\u3046\u3002\n  # Create the feed_dict for the placeholders filled with the next\n  # `batch size` examples.\n  images_feed, labels_feed = data_set.next_batch(FLAGS.batch_size,\n                                                 FLAGS.fake_data)\n\n\u30d5\u30e9\u30b0(\u6761\u4ef6\u306e\u6210\u5426\u5224\u5225\u306b\u4f7f\u3046\uff09\u3068\u3044\u3046\u3088\u308a\u5b9a\u6570\uff08\uff0b\u4ed8\u968f\u60c5\u5831\uff09\u3068\u3044\u3046\u611f\u3058\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3068\u3057\u3066\u306e\u5f79\u5272\n@antimon2\u3055\u3093\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\u60c5\u5831\u611f\u8b1d\u3067\u3059\u3002\n```txt:\n\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\n```\n\nhttp://blog.brainpad.co.jp/entry/2016/03/28/170000\n\u3092\u5b66\u7fd2\u4e2d\u3002\n\nfully_connected_feed.py\n\u306e\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066flags\u3068\u3044\u3046\u306e\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\n\n```py\n# Basic model parameters as external flags.\nflags = tf.app.flags\nFLAGS = flags.FLAGS\nflags.DEFINE_float('learning_rate', 0.01, 'Initial learning rate.')\nflags.DEFINE_integer('max_steps', 2000, 'Number of steps to run trainer.')\nflags.DEFINE_integer('hidden1', 128, 'Number of units in hidden layer 1.')\nflags.DEFINE_integer('hidden2', 32, 'Number of units in hidden layer 2.')\nflags.DEFINE_integer('batch_size', 100, 'Batch size.  '\n                     'Must divide evenly into the dataset sizes.')\nflags.DEFINE_string('train_dir', 'data', 'Directory to put the training data.')\nflags.DEFINE_boolean('fake_data', False, 'If true, uses fake data '\n                     'for unit testing.')\n```\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u3044\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3046\u3002\n'batch_size'\u3068\u5b9a\u7fa9\u3057\u305f\u5834\u5408\u306b\u3001FLAGS.batch_size\u3068\u3057\u3066\u4f7f\u3046\u3002\n\n```\n  # Create the feed_dict for the placeholders filled with the next\n  # `batch size` examples.\n  images_feed, labels_feed = data_set.next_batch(FLAGS.batch_size,\n                                                 FLAGS.fake_data)\n```\n\n\u30d5\u30e9\u30b0(\u6761\u4ef6\u306e\u6210\u5426\u5224\u5225\u306b\u4f7f\u3046\uff09\u3068\u3044\u3046\u3088\u308a\u5b9a\u6570\uff08\uff0b\u4ed8\u968f\u60c5\u5831\uff09\u3068\u3044\u3046\u611f\u3058\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n### \u30b3\u30de\u30f3\u30c9\u5f15\u6570\u3068\u3057\u3066\u306e\u5f79\u5272\n\n@antimon2\u3055\u3093\u306e[\u30b3\u30e1\u30f3\u30c8](http://qiita.com/7of9/items/af4abe63e880a4edd613#comment-a7376a8d4728443da7f3)\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\u60c5\u5831\u611f\u8b1d\u3067\u3059\u3002\n"}