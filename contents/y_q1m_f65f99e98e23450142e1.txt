{"context": "\n\n\u6982\u8981\n\u300cKotlin \u52c9\u5f37\u4f1a #1 - \u521d\u3081\u3066\u306e Kotlin\u300d\u306b\u53c2\u52a0\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f Otsuka \u3055\u3093\u304b\u3089 Kotlin \u306e\u57fa\u790e\u306b\u3064\u3044\u3066\u7d39\u4ecb\u304c\u3042\u3063\u305f\u5f8c\u3001Kotlin\u3092\u3088\u304f\u77e5\u308b\u304a\u4e8c\u65b9\u304c Kotlin \u306b\u3064\u3044\u3066 LT \u3059\u308b\u3068\u3044\u3046\u69cb\u6210\u3067\u3057\u305f\u3002\u6b21\u306e\u56de\u304b\u3089\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u3044\u304f\u5f62\u5f0f\u306b\u3059\u308b\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\n\n\n\u9805\u76ee\n\u5024\n\n\n\n\n\u65e5\u6642\n2016/07/05(Tue) 19:30-21:30\n\n\n\u5834\u6240\nappArray \u682a\u5f0f\u4f1a\u793e(\u8305\u5834\u753a\u99c5A2\u51fa\u53e3\u304b\u3089\u6b69\u3044\u3066\u3059\u3050)\n\n\n\u30a4\u30d9\u30f3\u30c8\u8a73\u7d30\nhttp://connpass.com/event/33584/\n\n\n\n\n\u30bf\u30a4\u30e0\u30c6\u30fc\u30d6\u30eb\n\n\n\n\u6642\u9593\n\u5185\u5bb9\n\n\n\n\n19:30 (5\u5206)\n\u6328\u62f6\n\n\n19:35 (40\u5206)\n\u521d\u3081\u3066\u306e Kotlin / Kenji Otsuka \u3055\u3093\n\n\n20:15 (5\u5206)\n\u4f11\u61a9\n\n\n20:20 (5\u5206)\n(LT) DI With Kotlin / hydrakecat \u3055\u3093\n\n\n20:25 (5\u5206)\n(LT) \u3044\u3064\u304b\u5f79\u306b\u305f\u3064\u304b\u3082\u3057\u308c\u306a\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5468\u308a\u306e5\u3064\u306e\u3053\u3068 / \u3080\u308d\u307b\u3057\u308a\u3087\u3046\u305f \u3055\u3093\n\n\n\n\n\nappArray Inc. \u306b\u3064\u3044\u3066\n\nKotlin + Spring \u3067\u306e\u30b5\u30fc\u30d0\u958b\u767a\u3001 Kotlin \u3067\u306e Android \u958b\u767a\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\nconnpass \u7533\u3057\u8fbc\u307f\u30da\u30fc\u30b8\u3088\u308a\n\n\n\u521d\u3081\u3066\u306e Kotlin\n\n\n\n\nSpeaker\nKenji Otsuka \u3055\u3093\n\n\n\n\n\n\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3067Kotlin\u3068Spring Boot\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u958b\u767a\n\n\u76ee\u6a19\n\nKotlin \u3067\u7c21\u5358\u306a\u554f\u984c\u3092\u89e3\u3044\u3066\u307f\u308b\nKotlin \u304c\u96e3\u3057\u304f\u306a\u3044\u3068\u601d\u3046\n\n\nKotlin \u306b\u5165\u308b\u524d\u306e\u5fc3\u306e\u6e96\u5099\n\nAndroid\u3067\u306e\u63a1\u7528\u304c\u591a\u3044\u2026\u2026\u610f\u8b58\u3057\u3066\u3044\u308b\u3089\u3057\u3044\nSpring\u306e\u958b\u767a\u30c1\u30fc\u30e0\u3082Kotlin \u7528\u8cc7\u6599\u3092\u4f5c\u6210\nGitHub\u306eLOC\u306f2016\u5e74\u306b\u5165\u3063\u3066\u6025\u4f38\n\n\n\u4f55\u304c\u826f\u3044\u306e\u304b\uff1f\nJVM\u3068Android\u3092\u5f37\u304f\u610f\u8b58\u3057\u305f\u958b\u767a\u8a00\u8a9e\n\nJava\u3068\u6bd4\u8f03\u3057\u3066\u8a18\u8ff0\u91cf\u3092\u4f4e\u6e1b\u2026\u2026\u6700\u91cd\u8981\u306e\u30e1\u30ea\u30c3\u30c8\u3001\u3068\u306e\u3053\u3068(\u7279\u306b\u578b\u63a8\u8ad6)\ndata class \u3068 object(Singleton)\u3092\u30b5\u30dd\u30fc\u30c8\nNullPoiinterException\u3092\u9632\u3050\u6a5f\u69cb\n\u81ea\u52d5\u30ad\u30e3\u30b9\u30c8\n\n\n\u5e45\u5e83\u3044\u7528\u9014\n\nAndroid \u30a2\u30d7\u30ea\nJavaScript\u3078\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\nHTML\u3084CSS\u30d3\u30eb\u30c0\u30fc\u3068\u3057\u3066\u4f7f\u3048\u308b\nJava\u95a2\u9023\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3068\u9023\u643a\u3067\u304d\u308b\nJava\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3048\u308b\n\n\n\u5909\u6570\u30fb\u5b9a\u6570\n\nval  \u5b9a\u6570\nvar  \u5909\u6570\u2026\u2026\u578b\u3092\u6307\u5b9a\u3057\u3066\u3044\u308c\u3070\u5f8c\u304b\u3089\u3067\u3082\u4ee3\u5165\u53ef\u80fd\n\n\n\u578b\u63a8\u8ad6\n\u578b\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u5024\u304b\u3089\u578b\u3092\u63a8\u6e2c\n\n\u57fa\u672c\u306e\u578b\n\nDouble/Float/Long/Int/Short/Byte\n\n\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba\u306fJava\u3068\u540c\u3058\ntoXXX\u30e1\u30bd\u30c3\u30c9\u3042\u308a\n\u9069\u5b9c\u578b\u5909\u63db\u53ef\u80fd\nrange \u6f14\u7b97\u5b50\u304c\u4f7f\u3048\u308b(..)\u3001\u5185\u90e8\u7684\u306b\u306f rangeTo \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3067\u3044\u308b\n\n\nString\n\n+ \u3067\u9023\u7d50\n\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3042\u308a\n$ \u3067\u306e\u5024\u5c55\u958b\u53ef\u80fd\n\n\nArray\n\nfactory method \u3042\u308a\u2026\u2026arrayOf(1, 2, 3)\n\u57fa\u672c\u578b\u306e Array \u578b\u3042\u308a\u2026\u2026IntArray\u7b49\n\n\nAny\n\u4f55\u3067\u3082\u4ee3\u5165\u53ef\u80fd\n\nArray\u3068Any\u306b\u6c17\u3092\u3064\u3051\u308c\u3070\u8ff7\u3046\u3053\u3068\u306f\u306a\u3044\n\n\n\u5236\u5fa1\n\nif\n\n\u8907\u6570\u884c\u306a\u3089 {} \u3067\u56f2\u3046\nScala\u3068\u540c\u3058\u3088\u3046\u306b\u5024\u3092\u8fd4\u3059\n\n\nwhen\n\nswitch\u306e\u3088\u3046\u306a\u7acb\u3061\u4f4d\u7f6e\ncondition \u306b\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u308b\n\u5024\u3092\u8fd4\u3059\n\n\nfor\n\nfor (item in collection)\nfor (i in array.indices)\nfor ((index, value) in array.withIndex())\n\n\nwhile\n\nwhile (condition) {}\ndo {} while(condition)\n\n\nnull \u306e\u6271\u3044\n\n?. \u3067 null \u3092\u56de\u907f\nnull \u304c\u3042\u308a\u3048\u306a\u3044\u306a\u3089!! \u3067\u4e3b\u5f35\u3067\u304d\u308b\nElvis Operator \u3082\u3042\u308b\n\n\n\u95a2\u6570\nfun sum(a: Int, b: Int): Int {\n    return a + b\n}\n\n\n\u30af\u30e9\u30b9\n\n\u4e2d\u8eab\u306e\u306a\u3044\u30af\u30e9\u30b9\u2026\u2026class Empty\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u306f\u30af\u30e9\u30b9\u5ba3\u8a00\u306b\u5408\u308f\u305b\u3066\u5b9f\u65bd\u3001init\u306e\u4e2d\u3067\u5b9f\u969b\u306b\u51e6\u7406\nnew \u3092\u4f7f\u308f\u305a\u306b\u521d\u671f\u5316\n\n\n\u5b9f\u969b\u306b\u66f8\u304f\nTry Kotlin \u3084 IntelliJ IDEA\u3067\n\u8caa\u6b32\u6cd5\u306e\u30b3\u30fc\u30c9\u3067\u306f\u3042\u307e\u308a\u611f\u52d5\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u904b\u52e2\u8a3a\u65ad\u306e\u30b3\u30fc\u30c9\u3092 Kotlin \u79fb\u690d\n\n\u611f\u60f3\nJava \u306e\u53f3\u8fba\u306b\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306e\u578b\u6307\u5b9a\u3059\u308b\u306e\u306f SE 7 \u304b\u3089\u3044\u3089\u306a\u304f\u306a\u3063\u305f\u6c17\u304c\u2026\u2026\n\n(LT) DI With Kotlin\n\n\n\n\nSpeaker\n@hydrakecat \u3055\u3093\n\n\n\n\n\n\nDI(Dependency Injection) \u3092\u7c21\u5358\u306b\u8a00\u3046\u3068\n\u30b5\u30fc\u30d3\u30b9\u306e\u5b9f\u88c5\u306e\u8a73\u7d30\u3092\u77e5\u3089\u305a\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3046\n\u6982\u5ff5\u306f\u30de\u30fc\u30c6\u30a3\u30f3\u30fb\u30d5\u30a1\u30a6\u30e9\u30fc\u304c2004\u5e74\u306b\u63d0\u5531\n\n\u30e1\u30ea\u30c3\u30c8\n\n\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u758e\u7d50\u5408\u306b\u3067\u304d\u308b\nUnit Test\u3067\u306e\u30e2\u30c3\u30af\u306e\u5dee\u3057\u8fbc\u307f\u304c\u697d\u306b\u306a\u308b\n\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u304c\u6e1b\u308b\n\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u5909\u66f4\u304c\u697d\u306b\u306a\u308b\n\n\nKotlin \u3067\u306f\uff1f\n\nSpring\u3084Dagger(kapt\u304c\u4e0d\u5b89\u5b9a\u3067\u3057\u3087\u3063\u3061\u3085\u3046\u30af\u30ea\u30fc\u30f3\u30d3\u30eb\u30c9\u3092\u8981\u6c42\u3055\u308c\u308b)\u3084Kodein\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30a4\u30b9\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\u3092\u6301\u3066\u308b\u306e\u3067\u305d\u308c\u3092\u4f7f\u3046\n\n\nKodein\n\n\nProperty \u306e delegate \u3092\u5229\u7528\nJava \u3092\u4f7f\u308f\u306a\u304f\u3066\u6e08\u3080\n\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u306f\u5897\u3048\u308b\n\n\nKotlin \u306e Interface \u3092\u4f7f\u3046\n\n\"Minimal Cake Pattern\" \u304c\u3088\u3055\u305d\u3046\nDSL \u304c\u4e0d\u8981\n\u30d5\u30ec\u30ad\u30b7\u30d6\u30eb\u306a\u5909\u66f4\u306b\u306f\u5411\u304b\u306a\u3044\n\n\n\u307e\u3068\u3081\n\nKotlin \u306e\u30c7\u30d5\u30a1\u30af\u30c8\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u306f\u307e\u3060\u306a\u3044\nJava \u306e DI \u3092\u4f7f\u3046\u306e\u304c\u73fe\u72b6\u306e\u6700\u5584\u7b56\n\"Minimal Cake Pattern\" \u306b\u671f\u5f85\n\n\nMinimal Cake Pattern \u306e\u53c2\u8003\u8a18\u4e8b\n\nMinimal Cake Pattern \u306e\u304a\u4f5c\u6cd5\nScala\u306b\u304a\u3051\u308b\u6700\u9069\u306aDependency Injection\u306e\u65b9\u6cd5\u3092\u8003\u5bdf\u3059\u308b \u301c\u306a\u305c\u30c9\u30ef\u30f3\u30b4\u30a2\u30ab\u30a6\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0\u306e\u751f\u7523\u6027\u306f\u9ad8\u3044\u306e\u304b\u301c\nKotlin\u3067\u3082Minimal Cake Pattern\n\n\n(LT) \u3044\u3064\u304b\u5f79\u306b\u305f\u3064\u304b\u3082\u3057\u308c\u306a\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5468\u308a\u306e5\u3064\u306e\u3053\u3068\n\n\n\n\nSpeaker\n\u3080\u308d\u307b\u3057\u308a\u3087\u3046\u305f \u3055\u3093 @ryotamurohoshi\n\n\n\n\n\n\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067 Collection \u3092\u4f7f\u308f\u306a\u3044\u3053\u3068\u306f\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u306b\u3064\u3044\u3066\u306e\u8a71\n\n\n1. \u72b6\u6cc1\u306b\u5fdc\u3058\u3066Sequence \u3092\u4f7f\u3046\n\u6700\u5f8c\u307e\u3067\u8aad\u307e\u306a\u304f\u3066\u3044\u3044\u6642\u3068\u304b\u306f\u9010\u6b21\u8aad\u307f\u8fbc\u3080\u3053\u3061\u3089\u3092\u4f7f\u3046\n\n2. \u8981\u7d20\u304c\u7a7a\u3063\u307d\u306e\u6642\u306baverage\u304c 0 \u3092\u8fd4\u3059\n\u5e73\u5747\u304c0\u304b\u3001\u7a7a\u3060\u304b\u30890\u304b\u304c\u308f\u304b\u3089\u306a\u3044\n\n3. \u30ad\u30fc\u304c\u91cd\u8907\u3057\u305f\u969b\u306eassociate\u7cfb\u30e1\u30bd\u30c3\u30c9\u304c\u4f8b\u5916\u3092\u6295\u3052\u306a\u3044\nassociate\u7cfb\u30e1\u30bd\u30c3\u30c9\u2026\u2026List\u7b49\u304b\u3089Map\u3092\u4f5c\u308b\n\u30ad\u30fc\u304c\u91cd\u306a\u3063\u305f\u3089\u5f8c\u52dd\u3061\u2026\u2026\u4f8b\u5916\u6295\u3052\u3066\u307b\u3057\u3044\u2192C#\u306eLINQ\u4e92\u63db\u30e9\u30a4\u30d6\u30e9\u30ea KotLinq \u3092\u958b\u767a\u3057\u3066\u3044\u308b\n\n4. \u30c7\u30d5\u30a9\u30eb\u30c8\u30a4\u30f3\u30dd\u30fc\u30c8\u62e1\u5f35\u95a2\u6570\u3092\u4e0a\u66f8\u304d\u53ef\u80fd\napply \u3068\u304b\ntake \u306e\u4f8b(\u5f15\u6570\u540d\u304c\u6c17\u306b\u5165\u3089\u306a\u304b\u3063\u305f\u306e\u3067count\u306b\u4e0a\u66f8\u304d\u3057\u305f)\n\n5. \u30e1\u30bd\u30c3\u30c9\u306e\u30aa\u30fc\u30d0\u30ed\u30fc\u30c9\u3068it\u304c\u76f8\u6027\u60aa\u3044\n\u3069\u3061\u3089\u3092\u547c\u3093\u3067\u3044\u3044\u304b\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u5909\u3048\u305f\n\n\u307e\u3068\u3081\nKotLinq \u306b\u661f\u3092\n\n\n\u4eca\u56de\u77e5\u3063\u305f\u3053\u3068\n\nMinimal Cake Pattern\nKotLinq\n\n# \u6982\u8981\n\u300cKotlin \u52c9\u5f37\u4f1a #1 - \u521d\u3081\u3066\u306e Kotlin\u300d\u306b\u53c2\u52a0\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u306f Otsuka \u3055\u3093\u304b\u3089 Kotlin \u306e\u57fa\u790e\u306b\u3064\u3044\u3066\u7d39\u4ecb\u304c\u3042\u3063\u305f\u5f8c\u3001Kotlin\u3092\u3088\u304f\u77e5\u308b\u304a\u4e8c\u65b9\u304c Kotlin \u306b\u3064\u3044\u3066 LT \u3059\u308b\u3068\u3044\u3046\u69cb\u6210\u3067\u3057\u305f\u3002\u6b21\u306e\u56de\u304b\u3089\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u3044\u304f\u5f62\u5f0f\u306b\u3059\u308b\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\n| \u9805\u76ee | \u5024 |\n|:---|:---|\n| \u65e5\u6642 | 2016/07/05(Tue) 19:30-21:30 |\n| \u5834\u6240 | appArray \u682a\u5f0f\u4f1a\u793e(\u8305\u5834\u753a\u99c5A2\u51fa\u53e3\u304b\u3089\u6b69\u3044\u3066\u3059\u3050) |\n| \u30a4\u30d9\u30f3\u30c8\u8a73\u7d30 | http://connpass.com/event/33584/ |\n\n## \u30bf\u30a4\u30e0\u30c6\u30fc\u30d6\u30eb\n\n| \u6642\u9593 | \u5185\u5bb9\n|:---|:---\n| 19:30 (5\u5206) | \u6328\u62f6 \n| 19:35 (40\u5206) | \u521d\u3081\u3066\u306e Kotlin / Kenji Otsuka \u3055\u3093\n| 20:15 (5\u5206) | \u4f11\u61a9\n| 20:20 (5\u5206) | (LT) [DI With Kotlin](https://speakerdeck.com/hkurokawa/di-with-kotlin) / hydrakecat \u3055\u3093\n| 20:25 (5\u5206) | (LT) [\u3044\u3064\u304b\u5f79\u306b\u305f\u3064\u304b\u3082\u3057\u308c\u306a\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5468\u308a\u306e5\u3064\u306e\u3053\u3068](https://speakerdeck.com/ryotamurohoshi/itukayi-nitatukamosirenaikorekusiyonzhou-rifalse5tufalsekoto) / \u3080\u308d\u307b\u3057\u308a\u3087\u3046\u305f \u3055\u3093\n\n----\n\n# [appArray Inc.](http://apparray.biz/) \u306b\u3064\u3044\u3066\n> Kotlin + Spring \u3067\u306e\u30b5\u30fc\u30d0\u958b\u767a\u3001 Kotlin \u3067\u306e Android \u958b\u767a\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\nconnpass \u7533\u3057\u8fbc\u307f\u30da\u30fc\u30b8\u3088\u308a\n\n----\n\n# [\u521d\u3081\u3066\u306e Kotlin](https://docs.google.com/presentation/d/1a_Dsv8p6WSgMCj5dDYbY-cBIkJA_-wOLlEUd4YSBxco)\n\n| Speaker | Kenji Otsuka \u3055\u3093\n|:---|:---\n\n\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3067Kotlin\u3068Spring Boot\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u958b\u767a\n\n## \u76ee\u6a19\n- Kotlin \u3067\u7c21\u5358\u306a\u554f\u984c\u3092\u89e3\u3044\u3066\u307f\u308b\n- Kotlin \u304c\u96e3\u3057\u304f\u306a\u3044\u3068\u601d\u3046\n\n## Kotlin \u306b\u5165\u308b\u524d\u306e\u5fc3\u306e\u6e96\u5099\n- Android\u3067\u306e\u63a1\u7528\u304c\u591a\u3044\u2026\u2026\u610f\u8b58\u3057\u3066\u3044\u308b\u3089\u3057\u3044\n- Spring\u306e\u958b\u767a\u30c1\u30fc\u30e0\u3082Kotlin \u7528\u8cc7\u6599\u3092\u4f5c\u6210\n- GitHub\u306eLOC\u306f2016\u5e74\u306b\u5165\u3063\u3066\u6025\u4f38\n\n## \u4f55\u304c\u826f\u3044\u306e\u304b\uff1f\nJVM\u3068Android\u3092\u5f37\u304f\u610f\u8b58\u3057\u305f\u958b\u767a\u8a00\u8a9e\n\n- Java\u3068\u6bd4\u8f03\u3057\u3066\u8a18\u8ff0\u91cf\u3092\u4f4e\u6e1b\u2026\u2026\u6700\u91cd\u8981\u306e\u30e1\u30ea\u30c3\u30c8\u3001\u3068\u306e\u3053\u3068(\u7279\u306b\u578b\u63a8\u8ad6)\n- data class \u3068 object(Singleton)\u3092\u30b5\u30dd\u30fc\u30c8\n- NullPoiinterException\u3092\u9632\u3050\u6a5f\u69cb\n- \u81ea\u52d5\u30ad\u30e3\u30b9\u30c8\n\n### \u5e45\u5e83\u3044\u7528\u9014\n- Android \u30a2\u30d7\u30ea\n- JavaScript\u3078\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\n- HTML\u3084CSS\u30d3\u30eb\u30c0\u30fc\u3068\u3057\u3066\u4f7f\u3048\u308b\n- Java\u95a2\u9023\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3068\u9023\u643a\u3067\u304d\u308b\n- Java\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3048\u308b\n\n## \u5909\u6570\u30fb\u5b9a\u6570\n\n- val  \u5b9a\u6570\n- var  \u5909\u6570\u2026\u2026\u578b\u3092\u6307\u5b9a\u3057\u3066\u3044\u308c\u3070\u5f8c\u304b\u3089\u3067\u3082\u4ee3\u5165\u53ef\u80fd\n\n## \u578b\u63a8\u8ad6\n\u578b\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u5024\u304b\u3089\u578b\u3092\u63a8\u6e2c\n\n## \u57fa\u672c\u306e\u578b\n### Double/Float/Long/Int/Short/Byte\n\n- \u30c7\u30fc\u30bf\u30b5\u30a4\u30ba\u306fJava\u3068\u540c\u3058\n- toXXX\u30e1\u30bd\u30c3\u30c9\u3042\u308a\n- \u9069\u5b9c\u578b\u5909\u63db\u53ef\u80fd\n- range \u6f14\u7b97\u5b50\u304c\u4f7f\u3048\u308b(..)\u3001\u5185\u90e8\u7684\u306b\u306f rangeTo \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3067\u3044\u308b\n\n### String\n- + \u3067\u9023\u7d50\n- \u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3042\u308a\n- $ \u3067\u306e\u5024\u5c55\u958b\u53ef\u80fd\n\n### Array\n- factory method \u3042\u308a\u2026\u2026arrayOf(1, 2, 3)\n- \u57fa\u672c\u578b\u306e Array \u578b\u3042\u308a\u2026\u2026IntArray\u7b49\n\n### Any\n\u4f55\u3067\u3082\u4ee3\u5165\u53ef\u80fd\n\n> Array\u3068Any\u306b\u6c17\u3092\u3064\u3051\u308c\u3070\u8ff7\u3046\u3053\u3068\u306f\u306a\u3044\n\n## \u5236\u5fa1\n\n### if\n- \u8907\u6570\u884c\u306a\u3089 {} \u3067\u56f2\u3046\n- Scala\u3068\u540c\u3058\u3088\u3046\u306b\u5024\u3092\u8fd4\u3059\n\n### when\n- switch\u306e\u3088\u3046\u306a\u7acb\u3061\u4f4d\u7f6e\n- condition \u306b\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u308b\n- \u5024\u3092\u8fd4\u3059\n\n### for\n- for (item in collection)\n- for (i in array.indices)\n- for ((index, value) in array.withIndex())\n\n### while\n- while (condition) {}\n- do {} while(condition)\n\n## null \u306e\u6271\u3044\n- ?. \u3067 null \u3092\u56de\u907f\n- null \u304c\u3042\u308a\u3048\u306a\u3044\u306a\u3089!! \u3067\u4e3b\u5f35\u3067\u304d\u308b\n- Elvis Operator \u3082\u3042\u308b\n\n## \u95a2\u6570\n```\nfun sum(a: Int, b: Int): Int {\n    return a + b\n}\n```\n\n## \u30af\u30e9\u30b9\n- \u4e2d\u8eab\u306e\u306a\u3044\u30af\u30e9\u30b9\u2026\u2026class Empty\n- \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u306f\u30af\u30e9\u30b9\u5ba3\u8a00\u306b\u5408\u308f\u305b\u3066\u5b9f\u65bd\u3001init\u306e\u4e2d\u3067\u5b9f\u969b\u306b\u51e6\u7406\n- new \u3092\u4f7f\u308f\u305a\u306b\u521d\u671f\u5316\n\n## \u5b9f\u969b\u306b\u66f8\u304f\n[Try Kotlin](http://try.kotlinlang.org/#/Examples/Hello,%20world!/Simplest%20version/Simplest%20version.kt) \u3084 IntelliJ IDEA\u3067\n\n[\u8caa\u6b32\u6cd5](https://ja.wikipedia.org/wiki/%E8%B2%AA%E6%AC%B2%E6%B3%95)\u306e\u30b3\u30fc\u30c9\u3067\u306f\u3042\u307e\u308a\u611f\u52d5\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u904b\u52e2\u8a3a\u65ad\u306e\u30b3\u30fc\u30c9\u3092 Kotlin \u79fb\u690d\n\n## \u611f\u60f3\nJava \u306e\u53f3\u8fba\u306b\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306e\u578b\u6307\u5b9a\u3059\u308b\u306e\u306f SE 7 \u304b\u3089\u3044\u3089\u306a\u304f\u306a\u3063\u305f\u6c17\u304c\u2026\u2026\n\n# (LT) [DI With Kotlin](https://speakerdeck.com/hkurokawa/di-with-kotlin)\n\n| Speaker | [@hydrakecat \u3055\u3093](https://twitter.com/hydrakecat)\n|:---|:---\n\n## [DI(Dependency Injection)](https://ja.wikipedia.org/wiki/%E4%BE%9D%E5%AD%98%E6%80%A7%E3%81%AE%E6%B3%A8%E5%85%A5) \u3092\u7c21\u5358\u306b\u8a00\u3046\u3068\n\u30b5\u30fc\u30d3\u30b9\u306e\u5b9f\u88c5\u306e\u8a73\u7d30\u3092\u77e5\u3089\u305a\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3046\n\n\u6982\u5ff5\u306f[\u30de\u30fc\u30c6\u30a3\u30f3\u30fb\u30d5\u30a1\u30a6\u30e9\u30fc\u304c2004\u5e74\u306b\u63d0\u5531](http://www.martinfowler.com/articles/injection.html#FormsOfDependencyInjection)\n\n## \u30e1\u30ea\u30c3\u30c8\n- \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u758e\u7d50\u5408\u306b\u3067\u304d\u308b\n- Unit Test\u3067\u306e\u30e2\u30c3\u30af\u306e\u5dee\u3057\u8fbc\u307f\u304c\u697d\u306b\u306a\u308b\n- \u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u304c\u6e1b\u308b\n- \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u5909\u66f4\u304c\u697d\u306b\u306a\u308b\n\n## Kotlin \u3067\u306f\uff1f\n- Spring\u3084Dagger(kapt\u304c\u4e0d\u5b89\u5b9a\u3067\u3057\u3087\u3063\u3061\u3085\u3046\u30af\u30ea\u30fc\u30f3\u30d3\u30eb\u30c9\u3092\u8981\u6c42\u3055\u308c\u308b)\u3084Kodein\n- \u30a4\u30f3\u30bf\u30d5\u30a7\u30a4\u30b9\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\u3092\u6301\u3066\u308b\u306e\u3067\u305d\u308c\u3092\u4f7f\u3046\n\n### [Kodein](https://github.com/SalomonBrys/Kodein)\n- Property \u306e delegate \u3092\u5229\u7528\n- Java \u3092\u4f7f\u308f\u306a\u304f\u3066\u6e08\u3080\n- \u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u306f\u5897\u3048\u308b\n\n### Kotlin \u306e Interface \u3092\u4f7f\u3046\n- \"Minimal Cake Pattern\" \u304c\u3088\u3055\u305d\u3046\n- DSL \u304c\u4e0d\u8981\n- \u30d5\u30ec\u30ad\u30b7\u30d6\u30eb\u306a\u5909\u66f4\u306b\u306f\u5411\u304b\u306a\u3044\n\n## \u307e\u3068\u3081\n- Kotlin \u306e\u30c7\u30d5\u30a1\u30af\u30c8\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u306f\u307e\u3060\u306a\u3044\n- Java \u306e DI \u3092\u4f7f\u3046\u306e\u304c\u73fe\u72b6\u306e\u6700\u5584\u7b56\n- \"Minimal Cake Pattern\" \u306b\u671f\u5f85\n\n## Minimal Cake Pattern \u306e\u53c2\u8003\u8a18\u4e8b\n- [Minimal Cake Pattern \u306e\u304a\u4f5c\u6cd5](http://qiita.com/tayama0324/items/7f87ee3672b15dd68016)\n- [Scala\u306b\u304a\u3051\u308b\u6700\u9069\u306aDependency Injection\u306e\u65b9\u6cd5\u3092\u8003\u5bdf\u3059\u308b \u301c\u306a\u305c\u30c9\u30ef\u30f3\u30b4\u30a2\u30ab\u30a6\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0\u306e\u751f\u7523\u6027\u306f\u9ad8\u3044\u306e\u304b\u301c](http://qiita.com/pab_tech/items/1c0bdbc8a61949891f1f)\n- [Kotlin\u3067\u3082Minimal Cake Pattern](http://qiita.com/rabitarochan/items/c6709a3a2e2f5d36d4e2)\n\n# (LT) [\u3044\u3064\u304b\u5f79\u306b\u305f\u3064\u304b\u3082\u3057\u308c\u306a\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5468\u308a\u306e5\u3064\u306e\u3053\u3068](https://speakerdeck.com/ryotamurohoshi/itukayi-nitatukamosirenaikorekusiyonzhou-rifalse5tufalsekoto)\n\n| Speaker | [\u3080\u308d\u307b\u3057\u308a\u3087\u3046\u305f \u3055\u3093 @ryotamurohoshi](https://twitter.com/ryotamurohoshi)\n|:---|:---\n\n> \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067 Collection \u3092\u4f7f\u308f\u306a\u3044\u3053\u3068\u306f\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u306b\u3064\u3044\u3066\u306e\u8a71\n\n## 1. \u72b6\u6cc1\u306b\u5fdc\u3058\u3066Sequence \u3092\u4f7f\u3046\n\u6700\u5f8c\u307e\u3067\u8aad\u307e\u306a\u304f\u3066\u3044\u3044\u6642\u3068\u304b\u306f\u9010\u6b21\u8aad\u307f\u8fbc\u3080\u3053\u3061\u3089\u3092\u4f7f\u3046\n\n## 2. \u8981\u7d20\u304c\u7a7a\u3063\u307d\u306e\u6642\u306baverage\u304c 0 \u3092\u8fd4\u3059\n\u5e73\u5747\u304c0\u304b\u3001\u7a7a\u3060\u304b\u30890\u304b\u304c\u308f\u304b\u3089\u306a\u3044\n\n## 3. \u30ad\u30fc\u304c\u91cd\u8907\u3057\u305f\u969b\u306eassociate\u7cfb\u30e1\u30bd\u30c3\u30c9\u304c\u4f8b\u5916\u3092\u6295\u3052\u306a\u3044\nassociate\u7cfb\u30e1\u30bd\u30c3\u30c9\u2026\u2026List\u7b49\u304b\u3089Map\u3092\u4f5c\u308b\n\n\u30ad\u30fc\u304c\u91cd\u306a\u3063\u305f\u3089\u5f8c\u52dd\u3061\u2026\u2026\u4f8b\u5916\u6295\u3052\u3066\u307b\u3057\u3044\u2192C#\u306eLINQ\u4e92\u63db\u30e9\u30a4\u30d6\u30e9\u30ea [KotLinq](https://github.com/RyotaMurohoshi/KotLinq) \u3092\u958b\u767a\u3057\u3066\u3044\u308b\n\n## 4. \u30c7\u30d5\u30a9\u30eb\u30c8\u30a4\u30f3\u30dd\u30fc\u30c8\u62e1\u5f35\u95a2\u6570\u3092\u4e0a\u66f8\u304d\u53ef\u80fd\napply \u3068\u304b\n\ntake \u306e\u4f8b(\u5f15\u6570\u540d\u304c\u6c17\u306b\u5165\u3089\u306a\u304b\u3063\u305f\u306e\u3067count\u306b\u4e0a\u66f8\u304d\u3057\u305f)\n\n## 5. \u30e1\u30bd\u30c3\u30c9\u306e\u30aa\u30fc\u30d0\u30ed\u30fc\u30c9\u3068it\u304c\u76f8\u6027\u60aa\u3044\n\u3069\u3061\u3089\u3092\u547c\u3093\u3067\u3044\u3044\u304b\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u5909\u3048\u305f\n\n## \u307e\u3068\u3081\n[KotLinq](https://github.com/RyotaMurohoshi/KotLinq) \u306b\u661f\u3092\n\n---\n# \u4eca\u56de\u77e5\u3063\u305f\u3053\u3068\n- Minimal Cake Pattern\n- KotLinq\n", "tags": ["Kotlin"]}