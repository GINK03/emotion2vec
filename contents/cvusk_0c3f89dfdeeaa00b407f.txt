{"tags": ["Python", "Anaconda", "Graphviz", "python3", "Keras"], "context": "\n\n\u76ee\u7684\nPython3.5\u3001Anaconda4.3\u74b0\u5883\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nKeras\u3067\u4f5c\u3063\u305fLSTM\u30e2\u30c7\u30eb\u3092Jupyter Notebook\u4e0a\u3067pydot\u3000\uff0b\u3000Graphviz\u3067\u53ef\u8996\u5316\u3059\u308b\u969b\u306e\u624b\u9806\u3067\u3059\u3002\nOS\u306fCentOS7.3\u3067\u3059\u3002\n\u3053\u3053\u306bKeras\u306e\u30e2\u30c7\u30eb\u3092\u53ef\u8996\u5316\u3059\u308b\u65b9\u6cd5\u304c\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u542b\u3081\u3066\u89e3\u8aac\u3057\u307e\u3059\u3002\nhttps://keras.io/visualization/\n\n\u624b\u9806\n\nyum\u3067OS\u306bgraphviz\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\npip\u3067pydot\u3001graphviz\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\nJupyter Notebook\u3067\u30e2\u30c7\u30eb\u3092\u53ef\u8996\u5316\u3057\u3066\u307f\u308b\u3002\n\n\nyum\u3067OS\u306bgraphviz\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nGraphviz\u81ea\u4f53\u306fPython\u3068\u95a2\u4fc2\u306a\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3059\u3002\nhttp://www.graphviz.org/About.php\nCentOS\u306b\u9650\u3089\u305a\u3001OS\u3067\u52d5\u4f5c\u3059\u308b\u3082\u306e\u306a\u306e\u3067\u3001\u307e\u305a\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\nsudo yum -y install graphviz\n\npip\u3067pydot\u3001graphviz\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nPython\u3067graphviz\u3092\u4f7f\u3063\u3066\u30e2\u30c7\u30eb\u53ef\u8996\u5316\u3059\u308b\u305f\u3081\u306b\u306fpydot\u3068graphviz\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u3053\u3061\u3089\u306egraphviz\u306fOS\u30d1\u30c3\u30b1\u30fc\u30b8\u306ePython\u30e9\u30c3\u30d1\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\npip install pydot graphviz\n\u3053\u308c\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u53ef\u8996\u5316\u3059\u308b\u305f\u3081\u306b\u3001\u74b0\u5883\u306b\u3088\u3063\u3066\u306f\u4ee5\u4e0b\u304c\u5fc5\u8981\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\npip install pydot3 pydot-ng\n\nJupyter Notebook\u3067\u30e2\u30c7\u30eb\u3092\u53ef\u8996\u5316\u3057\u3066\u307f\u308b\nJupyter Notebook\u3092\u8d77\u52d5\u3057\u3066\u3001Keras\u3067LSTM\u30e2\u30c7\u30eb\u3092\u66f8\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3053\u3053\u306e\u30e2\u30c7\u30eb\u3092\u8ee2\u7528\u3057\u307e\u3059\u3002\nhttp://machinelearningmastery.com/sequence-classification-lstm-recurrent-neural-networks-python-keras/\nimport numpy as np\nimport pydot\nfrom keras.datasets import imdb\nfrom keras.models import Sequential\nfrom keras.layers import Dense, LSTM\nfrom keras.layers.embeddings import Embedding\nfrom keras.preprocessing import sequence\n\nfrom keras.utils.visualize_util import model_to_dot \nfrom IPython.display import SVG\n\nnp.random.seed(7)\ntop_words = 5000\n(x_train, y_train), (x_test, y_test) = imdb.load_data(nb_words=top_words)\n\nmax_review_length = 500\nx_train = sequence.pad_sequences(x_train, maxlen=max_review_length)\nx_test = sequence.pad_sequences(x_test, maxlen=max_review_length)\n\nembedding_vector_length = 32\nmodel = Sequential()\nmodel.add(Embedding(top_words, embedding_vector_length, input_length=max_review_length))\nmodel.add(LSTM(100))\nmodel.add(Dense(1, activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy', optimizer='adam',\u3000metrics=['accuracy'])\n# \u3053\u3053\u3067\u30e2\u30c7\u30eb\u3092\u53ef\u8996\u5316\u3059\u308b\u3002\nSVG(model_to_dot(model).create(prog='dot', format='svg'))\n\nmodel.fit(x_train, y_train, validation_data=(x_test, y_test), nb_epoch=3, batch_size=64)\nscores = model.evaluate(x_test, y_test, verbose=0)\nprint (\"accuracy: %.3f%%\" % (scores[1]*100))\n\n\u3053\u308c\u3067\u2193\u306e\u3088\u3046\u306b\u30e2\u30c7\u30eb\u3092\u53ef\u8996\u5316\u3067\u304d\u307e\u3059\u3002\n\n## \u76ee\u7684\n\nPython3.5\u3001Anaconda4.3\u74b0\u5883\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nKeras\u3067\u4f5c\u3063\u305fLSTM\u30e2\u30c7\u30eb\u3092Jupyter Notebook\u4e0a\u3067pydot\u3000\uff0b\u3000Graphviz\u3067\u53ef\u8996\u5316\u3059\u308b\u969b\u306e\u624b\u9806\u3067\u3059\u3002\nOS\u306fCentOS7.3\u3067\u3059\u3002\n\n\u3053\u3053\u306bKeras\u306e\u30e2\u30c7\u30eb\u3092\u53ef\u8996\u5316\u3059\u308b\u65b9\u6cd5\u304c\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u542b\u3081\u3066\u89e3\u8aac\u3057\u307e\u3059\u3002\nhttps://keras.io/visualization/\n\n# \u624b\u9806\n1. yum\u3067OS\u306bgraphviz\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n2. pip\u3067pydot\u3001graphviz\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n3. Jupyter Notebook\u3067\u30e2\u30c7\u30eb\u3092\u53ef\u8996\u5316\u3057\u3066\u307f\u308b\u3002\n\n\n## yum\u3067OS\u306bgraphviz\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nGraphviz\u81ea\u4f53\u306fPython\u3068\u95a2\u4fc2\u306a\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3059\u3002\nhttp://www.graphviz.org/About.php\n\nCentOS\u306b\u9650\u3089\u305a\u3001OS\u3067\u52d5\u4f5c\u3059\u308b\u3082\u306e\u306a\u306e\u3067\u3001\u307e\u305a\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n`sudo yum -y install graphviz`\n\n## pip\u3067pydot\u3001graphviz\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nPython\u3067graphviz\u3092\u4f7f\u3063\u3066\u30e2\u30c7\u30eb\u53ef\u8996\u5316\u3059\u308b\u305f\u3081\u306b\u306fpydot\u3068graphviz\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u3053\u3061\u3089\u306egraphviz\u306fOS\u30d1\u30c3\u30b1\u30fc\u30b8\u306ePython\u30e9\u30c3\u30d1\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\n`pip install pydot graphviz`\n\n\u3053\u308c\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u53ef\u8996\u5316\u3059\u308b\u305f\u3081\u306b\u3001\u74b0\u5883\u306b\u3088\u3063\u3066\u306f\u4ee5\u4e0b\u304c\u5fc5\u8981\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n`pip install pydot3 pydot-ng`\n\n## Jupyter Notebook\u3067\u30e2\u30c7\u30eb\u3092\u53ef\u8996\u5316\u3057\u3066\u307f\u308b\nJupyter Notebook\u3092\u8d77\u52d5\u3057\u3066\u3001Keras\u3067LSTM\u30e2\u30c7\u30eb\u3092\u66f8\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3053\u3053\u306e\u30e2\u30c7\u30eb\u3092\u8ee2\u7528\u3057\u307e\u3059\u3002\nhttp://machinelearningmastery.com/sequence-classification-lstm-recurrent-neural-networks-python-keras/\n\n\n```\nimport numpy as np\nimport pydot\nfrom keras.datasets import imdb\nfrom keras.models import Sequential\nfrom keras.layers import Dense, LSTM\nfrom keras.layers.embeddings import Embedding\nfrom keras.preprocessing import sequence\n\nfrom keras.utils.visualize_util import model_to_dot \nfrom IPython.display import SVG\n\nnp.random.seed(7)\ntop_words = 5000\n(x_train, y_train), (x_test, y_test) = imdb.load_data(nb_words=top_words)\n\nmax_review_length = 500\nx_train = sequence.pad_sequences(x_train, maxlen=max_review_length)\nx_test = sequence.pad_sequences(x_test, maxlen=max_review_length)\n\nembedding_vector_length = 32\nmodel = Sequential()\nmodel.add(Embedding(top_words, embedding_vector_length, input_length=max_review_length))\nmodel.add(LSTM(100))\nmodel.add(Dense(1, activation='sigmoid'))\nmodel.compile(loss='binary_crossentropy', optimizer='adam',\u3000metrics=['accuracy'])\n# \u3053\u3053\u3067\u30e2\u30c7\u30eb\u3092\u53ef\u8996\u5316\u3059\u308b\u3002\nSVG(model_to_dot(model).create(prog='dot', format='svg'))\n\nmodel.fit(x_train, y_train, validation_data=(x_test, y_test), nb_epoch=3, batch_size=64)\nscores = model.evaluate(x_test, y_test, verbose=0)\nprint (\"accuracy: %.3f%%\" % (scores[1]*100))\n```\n\n\u3053\u308c\u3067\u2193\u306e\u3088\u3046\u306b\u30e2\u30c7\u30eb\u3092\u53ef\u8996\u5316\u3067\u304d\u307e\u3059\u3002\n![2017-02-04_graphviz.PNG](https://qiita-image-store.s3.amazonaws.com/0/55384/7805d7bb-db93-f9a2-bf23-71c96d75ff49.png)\n"}