{"tags": ["TCP", "networkApp", "CRLF", "difference", "link"], "context": "TCP\u901a\u4fe1\u306a\u3069\u306b\u304a\u3051\u308b\u30c7\u30fc\u30bf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u95a2\u3057\u3066\u3001<CR><LF>\u3084<STX><ETX>\u306a\u3069\u306e\u4f7f\u7528\u306b\u3064\u3044\u3066\u7591\u554f\u306b\u601d\u3063\u305f\u3002\n\u4ee5\u4e0b\u3092\u898b\u3064\u3051\u305f\u3002\nhttp://docs.spring.io/spring-integration/docs/2.0.0.M4/spring-integration-reference/html/ip.html\n\nThree standard message formats are provided for this purpose; you can also provide code for your own custom format.\n\n\n> The first of the three standard formats is length-header, in which case a 4 byte length header precedes the data;\n> The second is stx-etx in which the message data is preceded by an STX (0x02) character and terminated with an ETX (0x03) character.\n> The third is crlf in which the message is terminated with a carriage return and line feed (\\r\\n).\n\n...\n\nThe length-header format can also handle binary data. The other two formats can only handle text data (specifcally, data that does not contain characters 0x02 and 0x03 for stx-etx and 0x0d and 0x0a for crlf). This limitation can be avoided by appropriate character escaping techniques in the application layer. \n\nTCP\u901a\u4fe1\u306a\u3069\u306b\u304a\u3051\u308b\u30c7\u30fc\u30bf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u95a2\u3057\u3066\u3001`<CR><LF>`\u3084`<STX><ETX>`\u306a\u3069\u306e\u4f7f\u7528\u306b\u3064\u3044\u3066\u7591\u554f\u306b\u601d\u3063\u305f\u3002\n\n\u4ee5\u4e0b\u3092\u898b\u3064\u3051\u305f\u3002\n\nhttp://docs.spring.io/spring-integration/docs/2.0.0.M4/spring-integration-reference/html/ip.html\n\n> Three standard message formats are provided for this purpose; you can also provide code for your own custom format.\n\n- > The first of the three standard formats is length-header, in which case a 4 byte length header precedes the data;\n- > The second is stx-etx in which the message data is preceded by an STX (0x02) character and terminated with an ETX (0x03) character.\n- > The third is crlf in which the message is terminated with a carriage return and line feed (\\r\\n).\n\n...\n\n> The length-header format can also handle binary data. The other two formats can only handle text data (specifcally, data that does not contain characters 0x02 and 0x03 for stx-etx and 0x0d and 0x0a for crlf). This limitation can be avoided by appropriate character escaping techniques in the application layer. \n\n"}