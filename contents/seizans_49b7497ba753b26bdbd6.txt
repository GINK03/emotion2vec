{"context": " More than 1 year has passed since last update.Erlang \u3067 HTTP \u30b5\u30fc\u30d0\u30fc\u3092\u66f8\u304f\u3068\u304d cowboy \u3092\u4f7f\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u4f5c\u8005 Lo\u00efc \u3055\u3093\u88fd\u306e HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8 gun \u3092\u3088\u304f\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\ngun \u306f Websocket \u3084 SPDY \u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u3059\u3002\n\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3068\u3001\n\nproc_lib\n\u30d7\u30ed\u30bb\u30b9\u9023\u643a\u89aa\u5b50\u30d1\u30bf\u30fc\u30f3\n\n\u306a\u3069\u51fa\u3066\u304d\u3066\u3001Erlang \u521d\u5fc3\u8005\u306b\u3068\u3063\u3066\u5b66\u3073\u304c\u3042\u3063\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nproc_lib\n\u307e\u305a\u306f\u4f7f\u308f\u308c\u3066\u3044\u308b\u7b87\u6240\u3092\u898b\u307e\u3059\u3002\nhttps://github.com/ninenines/gun/blob/d88f3675dba9e066ef339789d8c223358f744aac/src/gun.erl#L460\nstart_link(Owner, Host, Port, Opts) ->\n    proc_lib:start_link(?MODULE, init,\n        [self(), Owner, Host, Port, Opts]).\n\ninit(Parent, Owner, Host, Port, Opts) ->\n    ok = proc_lib:init_ack(Parent, {ok, self()}),\n    Retry = maps:get(retry, Opts, 5),\n    Transport = case maps:get(transport, Opts, default_transport(Port)) of\n        tcp -> ranch_tcp;\n        ssl -> ranch_ssl\n    end,\n    connect(#state{parent=Parent, owner=Owner, host=Host, port=Port, opts=Opts, transport=Transport}, Retry).\n\n\u3053\u308c\u306f gun \u30d7\u30ed\u30bb\u30b9\u306e\u8d77\u52d5\u51e6\u7406\u3067\u3059\u3002\n\u540c\u30e2\u30b8\u30e5\u30fc\u30eb open/3 \u306e supervisor:start_child \u304b\u3089\u547c\u3070\u308c\u308b simple_one_for_one \u306e\u30d7\u30ed\u30bb\u30b9\u3067\u3059\u3002\nErlang \u3092\u52c9\u5f37\u3059\u308b\u3068\u307e\u305a\u57fa\u672c\u306f\u4fbf\u5229\u306a gen_server \u3092\u4f7f\u3048\u3001\u3068\u306a\u308b\u306e\u3067\u3053\u3053\u3067\u306e\u7591\u554f\u306f\u3001\u306a\u305c gen_server \u306b\u3057\u3066\u3044\u306a\u3044\u306e\u304b\u3001proc_lib \u3068\u306f\u4f55\u306a\u306e\u304b\u3001\u3060\u3068\u601d\u3044\u307e\u3059\u3002\nproc_lib \u306f\u7aef\u7684\u306b\u8a00\u3048\u3070\u3001gen_server \u306b\u307e\u3067\u3059\u308b\u5fc5\u8981\u306f\u7121\u3044\u5834\u5408\u306b\u4f7f\u3044\u307e\u3059\u3002\nErlang/OTP \u3067\u306f supervisor \u306b\u3088\u308b\u76e3\u8996\u306a\u3069\u3001OTP \u6a19\u6e96\u306e\u6069\u6075\u3092\u3044\u308d\u3044\u308d\u53d7\u3051\u3089\u308c\u308b\u8981\u4ef6\u3092\u6e80\u305f\u3057\u305f\u30d7\u30ed\u30bb\u30b9\u3092 special process \u3068\u8a00\u3044\u307e\u3059\u3002\n\u4f8b\u3048\u3070 gen_server behaviour \u3092\u5b9f\u88c5\u3057\u305f\u30d7\u30ed\u30bb\u30b9\u306f special process \u306b\u306a\u308a\u307e\u3059\u3002\nproc_lib \u306f\u305d\u306e special process \u3092\u4f5c\u308b\u305f\u3081\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3001gen_server \u306a\u3069\u306b\u3057\u306a\u304f\u3066\u3082 proc_lib \u3092\u4f7f\u3044\u3064\u3064\u3044\u304f\u3064\u304b\u306e\u30eb\u30fc\u30eb\u3092\u6e80\u305f\u305b\u3070\u3088\u3044\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u5b8c\u5168\u306a special process \u306e\u4f5c\u308a\u65b9\u306f 6 sys and proc_lib \u304b \u65e5\u672c\u8a9e\u8a33 \u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\u307e\u305f\u53c2\u8003\u8cc7\u6599\u3068\u3057\u3066 Beyond OTP \u3092\u6319\u3052\u3066\u304a\u304d\u307e\u3059\u3002\nproc_lib \u3092\u4f7f\u3044\u305f\u3044\u30b1\u30fc\u30b9\u3068\u3057\u3066\u306f\u3001\u540c\u671f\u547c\u3073\u51fa\u3057\u304c\u5fc5\u8981\u7121\u304f receive \u30eb\u30fc\u30d7\u3060\u3051\u3067\u5341\u5206\u306a\u5834\u5408\u3084\u3001\u521d\u671f\u5316\u51e6\u7406\u304c\u91cd\u3044\u5834\u5408\u306a\u3069\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30d7\u30ed\u30bb\u30b9\u9023\u643a\u89aa\u5b50\u30d1\u30bf\u30fc\u30f3\ngun \u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066 open \u304c\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/ninenines/gun/blob/d88f3675dba9e066ef339789d8c223358f744aac/src/gun.erl#L121\nopen(Host, Port, Opts) when is_list(Host); is_atom(Host) ->\n    case check_options(maps:to_list(Opts)) of\n        ok ->\n            case supervisor:start_child(gun_sup, [self(), Host, Port, Opts]) of\n                OK = {ok, ServerPid} ->\n                    consider_tracing(ServerPid, Opts),\n                    OK;\n                StartError ->\n                    StartError\n            end;\n        CheckError ->\n            CheckError\n    end.\n\n\u3053\u3053\u3067 supervisor:start_child(gun_sup, [self(), Host, Port, Opts]) \u306b\u3088\u3063\u3066\u3001start_link/4 \u306b\u51e6\u7406\u304c\u79fb\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u4eca\u6ce8\u76ee\u3057\u305f\u3044\u306e\u306f\u3001\u5f15\u6570\u306b self() \u3092\u6e21\u3057\u3066\u3044\u308b\u3053\u3068\u3067\u3059\u3002\n\u4e0a\u306e proc_lib \u306e\u8a71\u3067\u51fa\u305f\u30b3\u30fc\u30c9\u7247\u306b\u3042\u308b\u3088\u3046\u306b\u3001\u3053\u306e self() \u306f Parent \u3068\u3057\u3066 state \u3067\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002\nopen \u306f\u8fd4\u308a\u5024\u3068\u3057\u3066\u547c\u3073\u51fa\u3057\u5143\u306b Pid \u3092\u8fd4\u3057\u3001gun \u5074\u306f Parent \u3068\u3057\u3066\u547c\u3073\u51fa\u3057\u5143\u306e Pid\u3000\u4fdd\u6301\u3057\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001Parent (\u547c\u3073\u51fa\u3057\u5143) \u3068 gun \u304c\u304a\u4e92\u3044\u306e Pid \u3092\u77e5\u3063\u3066\u3044\u308b\u305f\u3081\u9023\u643a\u3067\u304d\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u547c\u3073\u51fa\u3057\u5143\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n{ok, Pid} = gun:open(Host, Port),\nreceive\n    {gun_up, Pid, http} ->\n        ok\nend,\nMRef = gun:ws_upgrade(Pid, Path),\n...\n\ngun \u5074\u304c Parent \u3092\u77e5\u3063\u3066\u3044\u308b\u305f\u3081\u3001open \u5f8c\u306e\u7d50\u679c\u3092 Parent\u5074\u3067 receive \u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u3068\u3081\nErlang \u3092\u52c9\u5f37\u3057\u3066\u5c11\u3057\u308f\u304b\u3063\u305f\u6c17\u6301\u3061\u306b\u306a\u3063\u305f\u3082\u306e\u306e\u3001\u66f8\u304d\u59cb\u3081\u308b\u3068\u7591\u554f\u306b\u306a\u308a\u305d\u3046\u3001\u3068\u3044\u3046\u7b87\u6240\u3092 gun \u3092\u901a\u3057\u3066\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\ngun \u3067\u306f\u4ed6\u306b\u3082\u4f8b\u3048\u3070\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3068\u9023\u643a\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u306a\u3069\u3082\u51fa\u3066\u304f\u308b\u306e\u3067\u6559\u6750\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3042\u3068 gun \u4fbf\u5229\u306a\u306e\u3067\u4f7f\u304a\u3046\u3002\n\nErlang \u3067 HTTP \u30b5\u30fc\u30d0\u30fc\u3092\u66f8\u304f\u3068\u304d [cowboy](https://github.com/ninenines/cowboy) \u3092\u4f7f\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u4f5c\u8005 Lo\u00efc \u3055\u3093\u88fd\u306e [HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8 gun](https://github.com/ninenines/gun) \u3092\u3088\u304f\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\ngun \u306f Websocket \u3084 SPDY \u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u3059\u3002\n\n\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3068\u3001\n\n- [proc_lib](http://erlang.org/doc/man/proc_lib.html)\n- [\u30d7\u30ed\u30bb\u30b9\u9023\u643a\u89aa\u5b50\u30d1\u30bf\u30fc\u30f3](http://qiita.com/voluntas/items/c5efdf198c19f1eb11e6#%E3%83%97%E3%83%AD%E3%82%BB%E3%82%B9%E9%80%A3%E6%90%BA%E8%A6%AA%E5%AD%90%E3%83%91%E3%82%BF%E3%83%BC%E3%83%B3)\n\n\u306a\u3069\u51fa\u3066\u304d\u3066\u3001Erlang \u521d\u5fc3\u8005\u306b\u3068\u3063\u3066\u5b66\u3073\u304c\u3042\u3063\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\n## proc_lib\n\n\u307e\u305a\u306f\u4f7f\u308f\u308c\u3066\u3044\u308b\u7b87\u6240\u3092\u898b\u307e\u3059\u3002\nhttps://github.com/ninenines/gun/blob/d88f3675dba9e066ef339789d8c223358f744aac/src/gun.erl#L460\n\n```\nstart_link(Owner, Host, Port, Opts) ->\n\tproc_lib:start_link(?MODULE, init,\n\t\t[self(), Owner, Host, Port, Opts]).\n\ninit(Parent, Owner, Host, Port, Opts) ->\n\tok = proc_lib:init_ack(Parent, {ok, self()}),\n\tRetry = maps:get(retry, Opts, 5),\n\tTransport = case maps:get(transport, Opts, default_transport(Port)) of\n\t\ttcp -> ranch_tcp;\n\t\tssl -> ranch_ssl\n\tend,\n\tconnect(#state{parent=Parent, owner=Owner, host=Host, port=Port, opts=Opts, transport=Transport}, Retry).\n```\n\n\u3053\u308c\u306f gun \u30d7\u30ed\u30bb\u30b9\u306e\u8d77\u52d5\u51e6\u7406\u3067\u3059\u3002\n\u540c\u30e2\u30b8\u30e5\u30fc\u30eb `open/3` \u306e `supervisor:start_child` \u304b\u3089\u547c\u3070\u308c\u308b `simple_one_for_one` \u306e\u30d7\u30ed\u30bb\u30b9\u3067\u3059\u3002\n\nErlang \u3092\u52c9\u5f37\u3059\u308b\u3068\u307e\u305a\u57fa\u672c\u306f\u4fbf\u5229\u306a gen_server \u3092\u4f7f\u3048\u3001\u3068\u306a\u308b\u306e\u3067\u3053\u3053\u3067\u306e\u7591\u554f\u306f\u3001\u306a\u305c gen_server \u306b\u3057\u3066\u3044\u306a\u3044\u306e\u304b\u3001proc_lib \u3068\u306f\u4f55\u306a\u306e\u304b\u3001\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\nproc_lib \u306f\u7aef\u7684\u306b\u8a00\u3048\u3070\u3001gen_server \u306b\u307e\u3067\u3059\u308b\u5fc5\u8981\u306f\u7121\u3044\u5834\u5408\u306b\u4f7f\u3044\u307e\u3059\u3002\n\nErlang/OTP \u3067\u306f supervisor \u306b\u3088\u308b\u76e3\u8996\u306a\u3069\u3001OTP \u6a19\u6e96\u306e\u6069\u6075\u3092\u3044\u308d\u3044\u308d\u53d7\u3051\u3089\u308c\u308b\u8981\u4ef6\u3092\u6e80\u305f\u3057\u305f\u30d7\u30ed\u30bb\u30b9\u3092 special process \u3068\u8a00\u3044\u307e\u3059\u3002\n\u4f8b\u3048\u3070 gen_server behaviour \u3092\u5b9f\u88c5\u3057\u305f\u30d7\u30ed\u30bb\u30b9\u306f special process \u306b\u306a\u308a\u307e\u3059\u3002\n\nproc_lib \u306f\u305d\u306e special process \u3092\u4f5c\u308b\u305f\u3081\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3001gen_server \u306a\u3069\u306b\u3057\u306a\u304f\u3066\u3082 proc_lib \u3092\u4f7f\u3044\u3064\u3064\u3044\u304f\u3064\u304b\u306e\u30eb\u30fc\u30eb\u3092\u6e80\u305f\u305b\u3070\u3088\u3044\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u5b8c\u5168\u306a special process \u306e\u4f5c\u308a\u65b9\u306f [6 sys and proc_lib](http://www.erlang.org/doc/design_principles/spec_proc.html) \u304b [\u65e5\u672c\u8a9e\u8a33](http://erlang.shibu.jp/design_principles/sys_and_proc_lib.html) \u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\u307e\u305f\u53c2\u8003\u8cc7\u6599\u3068\u3057\u3066 [Beyond OTP](http://ninenines.eu/talks/beyond-otp/beyond-otp.html) \u3092\u6319\u3052\u3066\u304a\u304d\u307e\u3059\u3002\n\nproc_lib \u3092\u4f7f\u3044\u305f\u3044\u30b1\u30fc\u30b9\u3068\u3057\u3066\u306f\u3001\u540c\u671f\u547c\u3073\u51fa\u3057\u304c\u5fc5\u8981\u7121\u304f receive \u30eb\u30fc\u30d7\u3060\u3051\u3067\u5341\u5206\u306a\u5834\u5408\u3084\u3001\u521d\u671f\u5316\u51e6\u7406\u304c\u91cd\u3044\u5834\u5408\u306a\u3069\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n## \u30d7\u30ed\u30bb\u30b9\u9023\u643a\u89aa\u5b50\u30d1\u30bf\u30fc\u30f3\n\ngun \u306e\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066 `open` \u304c\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/ninenines/gun/blob/d88f3675dba9e066ef339789d8c223358f744aac/src/gun.erl#L121\n\n```\nopen(Host, Port, Opts) when is_list(Host); is_atom(Host) ->\n\tcase check_options(maps:to_list(Opts)) of\n\t\tok ->\n\t\t\tcase supervisor:start_child(gun_sup, [self(), Host, Port, Opts]) of\n\t\t\t\tOK = {ok, ServerPid} ->\n\t\t\t\t\tconsider_tracing(ServerPid, Opts),\n\t\t\t\t\tOK;\n\t\t\t\tStartError ->\n\t\t\t\t\tStartError\n\t\t\tend;\n\t\tCheckError ->\n\t\t\tCheckError\n\tend.\n```\n\n\u3053\u3053\u3067 `supervisor:start_child(gun_sup, [self(), Host, Port, Opts])` \u306b\u3088\u3063\u3066\u3001`start_link/4` \u306b\u51e6\u7406\u304c\u79fb\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u4eca\u6ce8\u76ee\u3057\u305f\u3044\u306e\u306f\u3001\u5f15\u6570\u306b `self()` \u3092\u6e21\u3057\u3066\u3044\u308b\u3053\u3068\u3067\u3059\u3002\n\u4e0a\u306e proc_lib \u306e\u8a71\u3067\u51fa\u305f\u30b3\u30fc\u30c9\u7247\u306b\u3042\u308b\u3088\u3046\u306b\u3001\u3053\u306e `self()` \u306f Parent \u3068\u3057\u3066 state \u3067\u4fdd\u6301\u3055\u308c\u307e\u3059\u3002\n\n`open` \u306f\u8fd4\u308a\u5024\u3068\u3057\u3066\u547c\u3073\u51fa\u3057\u5143\u306b Pid \u3092\u8fd4\u3057\u3001gun \u5074\u306f Parent \u3068\u3057\u3066\u547c\u3073\u51fa\u3057\u5143\u306e Pid\u3000\u4fdd\u6301\u3057\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001Parent (\u547c\u3073\u51fa\u3057\u5143) \u3068 gun \u304c\u304a\u4e92\u3044\u306e Pid \u3092\u77e5\u3063\u3066\u3044\u308b\u305f\u3081\u9023\u643a\u3067\u304d\u307e\u3059\u3002\n\n\u5177\u4f53\u7684\u306b\u547c\u3073\u51fa\u3057\u5143\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\n```\n{ok, Pid} = gun:open(Host, Port),\nreceive\n    {gun_up, Pid, http} ->\n        ok\nend,\nMRef = gun:ws_upgrade(Pid, Path),\n...\n```\n\ngun \u5074\u304c Parent \u3092\u77e5\u3063\u3066\u3044\u308b\u305f\u3081\u3001open \u5f8c\u306e\u7d50\u679c\u3092 Parent\u5074\u3067 receive \u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\n\n## \u307e\u3068\u3081\n\nErlang \u3092\u52c9\u5f37\u3057\u3066\u5c11\u3057\u308f\u304b\u3063\u305f\u6c17\u6301\u3061\u306b\u306a\u3063\u305f\u3082\u306e\u306e\u3001\u66f8\u304d\u59cb\u3081\u308b\u3068\u7591\u554f\u306b\u306a\u308a\u305d\u3046\u3001\u3068\u3044\u3046\u7b87\u6240\u3092 gun \u3092\u901a\u3057\u3066\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\ngun \u3067\u306f\u4ed6\u306b\u3082\u4f8b\u3048\u3070\u3001\u30d7\u30ed\u30c8\u30b3\u30eb\u72b6\u614b\u3092\u7ba1\u7406\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3068\u9023\u643a\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u306a\u3069\u3082\u51fa\u3066\u304f\u308b\u306e\u3067\u6559\u6750\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3042\u3068 gun \u4fbf\u5229\u306a\u306e\u3067\u4f7f\u304a\u3046\u3002\n", "tags": ["Erlang"]}