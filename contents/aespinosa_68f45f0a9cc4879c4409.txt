{"context": " More than 1 year has passed since last update.Chefspec 3.2.0 introduced berkshelf integration lately.  However this will decrease the test speed as chefspec will setup and teardown berkshelf all the time. \nBelow is a snipped to similar chefspec#242 .  But in addition, I removed the vendoring of the cookbook in development.   Here is my rake task to do that build:\ntask :build do\n  File.open(\"chefignore\", \"a\").write(\"*aspnet_skeleton*\")\n  berksfile.install path: \"vendor/cookbooks\"\n  FileUtils.rmdir \"vendor/cookbooks/aspnet_skeleton\"\nend\n\nThis approach has several advantages: [1] chefspec doesn\u2019t need to build the vendored directory everytime rspec is invoked, [2] you can run the test against the source code directory for a fast TDD feedback cycle, and [3]  build and test phases for your CI pipeline can be separated.\nHere\u2019s how chefspec consumes the vendored cookbook_path and cookbook-in-development simultaenously:\nRSpec.configure do |config|\n  config.cookbook_path = %w(vendor/cookbooks ../)\nend\n\nOriginal post in http://amespinosa.wordpress.com/2014/02/16/manual-berkshelf-caching-on-chefspec/\nChefspec 3.2.0 introduced berkshelf integration lately.  However this will decrease the test speed as chefspec will setup and teardown berkshelf all the time. \n\nBelow is a snipped to similar [chefspec#242](https://github.com/sethvargo/chefspec/issues/242) .  But in addition, I removed the vendoring of the cookbook in development.   Here is my [rake task](https://github.com/aespinosa/aspnet_skeleton/blob/master/Rakefile#L9-L13) to do that build:\n\n    task :build do\n      File.open(\"chefignore\", \"a\").write(\"*aspnet_skeleton*\")\n      berksfile.install path: \"vendor/cookbooks\"\n      FileUtils.rmdir \"vendor/cookbooks/aspnet_skeleton\"\n    end\n\nThis approach has several advantages: [1] chefspec doesn\u2019t need to build the vendored directory everytime rspec is invoked, [2] you can run the test against the source code directory for a fast TDD feedback cycle, and [3]  build and test phases for your CI pipeline can be separated.\n\nHere\u2019s how chefspec consumes the vendored cookbook_path and cookbook-in-development [simultaenously](https://github.com/aespinosa/aspnet_skeleton/blob/master/spec/default_spec.rb#L6):\n\n    RSpec.configure do |config|\n      config.cookbook_path = %w(vendor/cookbooks ../)\n    end\n\n\nOriginal post in http://amespinosa.wordpress.com/2014/02/16/manual-berkshelf-caching-on-chefspec/", "tags": ["Ruby", "chef", "testing", "Berkshelf"]}