{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nEC2\u306b\u306f\u4e0b\u8a18\uff13\u3064\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\uff11\uff0e\u30aa\u30f3\u30c7\u30de\u30f3\u30c9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n\uff12\uff0e\u30b9\u30dd\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n\uff13\uff0e\u30ea\u30b6\u30fc\u30d6\u30c9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n\u3053\u3053\u3067\u306f\u30aa\u30f3\u30c7\u30de\u30f3\u30c9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u624b\u9806\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\nSDK for Java\n\nimport com.amazonaws.ClientConfiguration;\nimport com.amazonaws.auth.AWSCredentialsProvider;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.ec2.AmazonEC2;\nimport com.amazonaws.services.ec2.AmazonEC2Client;\nimport com.amazonaws.services.ec2.model.InstanceType;\nimport com.amazonaws.services.ec2.model.RunInstancesRequest;\nimport com.amazonaws.services.ec2.model.RunInstancesResult;\n\npublic class Ec2CreateInstanceFromAmi {\n\n    public static void main(String[] args) {\n\n        AWSCredentialsProvider provider = new ProfileCredentialsProvider(\"uzr\");\n\n        AmazonEC2 ec2_tokyo = Region.getRegion(Regions.AP_NORTHEAST_1)\n                .createClient(AmazonEC2Client.class, provider,\n                        new ClientConfiguration());\n\n        RunInstancesRequest instanceRequest = new RunInstancesRequest()\n                .withImageId(\"ami-61a29d60\")\n                .withInstanceType(InstanceType.T2Micro)\n                .withMinCount(1)\n                .withMaxCount(1)\n                .withSecurityGroupIds(\"launch-wizard-1\")\n                .withKeyName(\"uzr_key\");\n\n        RunInstancesResult result = ec2_tokyo.runInstances(instanceRequest);\n        \n        System.out.println(result.getReservation());\n    }\n}\n\n# \u5b9f\u884c\u7d50\u679c\n{ReservationId: r-596cc640,OwnerId: 117364780807,Groups: [],GroupNames: [],Instances: [{InstanceId: i-5dcf8faf,ImageId: ami-61a29d60,State: {Code: 0,Name: pending},PrivateDnsName: ip-172-31-20-119.ap-northeast-1.compute.internal,PublicDnsName: ,StateTransitionReason: ,KeyName: uzr_key,AmiLaunchIndex: 0,ProductCodes: [],InstanceType: t2.micro,LaunchTime: Wed Nov 05 13:13:39 JST 2014,Placement: {AvailabilityZone: ap-northeast-1c,GroupName: ,Tenancy: default},Monitoring: {State: disabled},SubnetId: subnet-40d1c006,VpcId: vpc-c353a0a6,PrivateIpAddress: 172.31.20.119,StateReason: {Code: pending,Message: pending},Architecture: x86_64,RootDeviceType: ebs,RootDeviceName: /dev/xvda,BlockDeviceMappings: [],VirtualizationType: hvm,ClientToken: dad5e3c1-9d17-4fce-b83c-e08d2bf2002b,Tags: [],SecurityGroups: [{GroupName: launch-wizard-1,GroupId: sg-71c21714}],SourceDestCheck: true,Hypervisor: xen,NetworkInterfaces: [{NetworkInterfaceId: eni-7f7ecd26,SubnetId: subnet-40d1c006,VpcId: vpc-c353a0a6,Description: ,OwnerId: 117364780807,Status: in-use,MacAddress: 0a:2c:f8:ff:e3:cd,PrivateIpAddress: 172.31.20.119,PrivateDnsName: ip-172-31-20-119.ap-northeast-1.compute.internal,SourceDestCheck: true,Groups: [{GroupName: launch-wizard-1,GroupId: sg-71c21714}],Attachment: {AttachmentId: eni-attach-f04a6af6,DeviceIndex: 0,Status: attaching,AttachTime: Wed Nov 05 13:13:39 JST 2014,DeleteOnTermination: true},PrivateIpAddresses: [{PrivateIpAddress: 172.31.20.119,PrivateDnsName: ip-172-31-20-119.ap-northeast-1.compute.internal,Primary: true,}]}],EbsOptimized: false,}]}\n\n\n\u88dc\u8db3\n\n\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\n\u8aac\u660e\n\n\n\n\nimageid\nAMI\u306eID\u3067\u3059\u3002\n\n\ninstanceType\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30bf\u30a4\u30d7\u3067\u3059\u3002\u7121\u6599\u3067\u5229\u7528\u3067\u304d\u308bt2.micro\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\ncount\n\u30a4\u30f3\u30b9\u30f3\u30bf\u30f3\u30b9\u306e\u6570\u3067\u3059\n\n\nsecurity group id\n\u3053\u3053\u3067\u306fSSH\u3068HTTP\u3092\u8a31\u53ef\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nkeyName\nkeypair\u306e\u540d\u79f0\u3067\u3059\u3002\u524d\u306b\u4f5c\u3063\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3068\u540c\u3058key\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u65e2\u5b58\u306e\u3082\u306e\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n\u53c2\u8003\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bf\u30a4\u30d7\u306b\u3064\u3044\u3066\n\u30b9\u30dd\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u308a\u65b9\n#\u306f\u3058\u3081\u306b\nEC2\u306b\u306f\u4e0b\u8a18\uff13\u3064\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\uff11\uff0e\u30aa\u30f3\u30c7\u30de\u30f3\u30c9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n\uff12\uff0e\u30b9\u30dd\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n\uff13\uff0e\u30ea\u30b6\u30fc\u30d6\u30c9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n\u3053\u3053\u3067\u306f\u30aa\u30f3\u30c7\u30de\u30f3\u30c9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u624b\u9806\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\n# SDK for Java\n<pre><code class=\"java\">\nimport com.amazonaws.ClientConfiguration;\nimport com.amazonaws.auth.AWSCredentialsProvider;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.ec2.AmazonEC2;\nimport com.amazonaws.services.ec2.AmazonEC2Client;\nimport com.amazonaws.services.ec2.model.InstanceType;\nimport com.amazonaws.services.ec2.model.RunInstancesRequest;\nimport com.amazonaws.services.ec2.model.RunInstancesResult;\n\npublic class Ec2CreateInstanceFromAmi {\n\n\tpublic static void main(String[] args) {\n\n\t\tAWSCredentialsProvider provider = new ProfileCredentialsProvider(\"uzr\");\n\n\t\tAmazonEC2 ec2_tokyo = Region.getRegion(Regions.AP_NORTHEAST_1)\n\t\t\t\t.createClient(AmazonEC2Client.class, provider,\n\t\t\t\t\t\tnew ClientConfiguration());\n\n\t\tRunInstancesRequest instanceRequest = new RunInstancesRequest()\n\t\t\t\t.withImageId(\"ami-61a29d60\")\n\t\t\t\t.withInstanceType(InstanceType.T2Micro)\n\t\t\t\t.withMinCount(1)\n\t\t\t\t.withMaxCount(1)\n\t\t\t\t.withSecurityGroupIds(\"launch-wizard-1\")\n\t\t\t\t.withKeyName(\"uzr_key\");\n\n\t\tRunInstancesResult result = ec2_tokyo.runInstances(instanceRequest);\n\t\t\n\t\tSystem.out.println(result.getReservation());\n\t}\n}\n</code></pre>\n# \u5b9f\u884c\u7d50\u679c\n<pre>\n{ReservationId: r-596cc640,OwnerId: 117364780807,Groups: [],GroupNames: [],Instances: [{InstanceId: i-5dcf8faf,ImageId: ami-61a29d60,State: {Code: 0,Name: pending},PrivateDnsName: ip-172-31-20-119.ap-northeast-1.compute.internal,PublicDnsName: ,StateTransitionReason: ,KeyName: uzr_key,AmiLaunchIndex: 0,ProductCodes: [],InstanceType: t2.micro,LaunchTime: Wed Nov 05 13:13:39 JST 2014,Placement: {AvailabilityZone: ap-northeast-1c,GroupName: ,Tenancy: default},Monitoring: {State: disabled},SubnetId: subnet-40d1c006,VpcId: vpc-c353a0a6,PrivateIpAddress: 172.31.20.119,StateReason: {Code: pending,Message: pending},Architecture: x86_64,RootDeviceType: ebs,RootDeviceName: /dev/xvda,BlockDeviceMappings: [],VirtualizationType: hvm,ClientToken: dad5e3c1-9d17-4fce-b83c-e08d2bf2002b,Tags: [],SecurityGroups: [{GroupName: launch-wizard-1,GroupId: sg-71c21714}],SourceDestCheck: true,Hypervisor: xen,NetworkInterfaces: [{NetworkInterfaceId: eni-7f7ecd26,SubnetId: subnet-40d1c006,VpcId: vpc-c353a0a6,Description: ,OwnerId: 117364780807,Status: in-use,MacAddress: 0a:2c:f8:ff:e3:cd,PrivateIpAddress: 172.31.20.119,PrivateDnsName: ip-172-31-20-119.ap-northeast-1.compute.internal,SourceDestCheck: true,Groups: [{GroupName: launch-wizard-1,GroupId: sg-71c21714}],Attachment: {AttachmentId: eni-attach-f04a6af6,DeviceIndex: 0,Status: attaching,AttachTime: Wed Nov 05 13:13:39 JST 2014,DeleteOnTermination: true},PrivateIpAddresses: [{PrivateIpAddress: 172.31.20.119,PrivateDnsName: ip-172-31-20-119.ap-northeast-1.compute.internal,Primary: true,}]}],EbsOptimized: false,}]}\n</pre>\n# \u88dc\u8db3\n\n|\u30d7\u30ed\u30d1\u30c6\u30a3|\u8aac\u660e|\n|:----------------|:------------|\n| imageid | AMI\u306eID\u3067\u3059\u3002 |\n| instanceType|\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30bf\u30a4\u30d7\u3067\u3059\u3002\u7121\u6599\u3067\u5229\u7528\u3067\u304d\u308bt2.micro\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002|\n|count|\u30a4\u30f3\u30b9\u30f3\u30bf\u30f3\u30b9\u306e\u6570\u3067\u3059|\n|security group id|\u3053\u3053\u3067\u306fSSH\u3068HTTP\u3092\u8a31\u53ef\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002|\n|keyName|keypair\u306e\u540d\u79f0\u3067\u3059\u3002\u524d\u306b\u4f5c\u3063\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3068\u540c\u3058key\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u65e2\u5b58\u306e\u3082\u306e\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002|\n\n\n# \u53c2\u8003\n[\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bf\u30a4\u30d7\u306b\u3064\u3044\u3066](http://www.slideshare.net/AmazonWebServicesJapan/20131023-aws-meisterregeneraterispotpublic)\n[\u30b9\u30dd\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u308a\u65b9](http://docs.aws.amazon.com/AWSSdkDocsJava/latest/DeveloperGuide/tutorial-spot-instances-java.html)\n", "tags": ["AWS", "AWS_SDK", "EC2", "Java"]}