{"tags": ["Ruby", "RuboCop"], "context": "\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u4f5c\u3063\u305f Synvert \u306e Snippet \u3092 RuboCop \u306e --auto-correct \u3067\u7f6e\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002\nhttp://qiita.com/tbpgr/items/b7117a79db6e07540328\n\nRuboCop \u306e Cop \u306e\u4f5c\u308a\u65b9\nRuboCop \u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b RuboCop::Cop::Cop \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u8a73\u7d30\u306a\u4f5c\u6210\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u4e0b\u8a18\u306e\u8a18\u4e8b\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n\u5b9f\u8df5!! RuboCop\u30d7\u30e9\u30b0\u30a4\u30f3\u958b\u767a\u5165\u9580 - SideCI TechBlog\nSynvert \u306e\u4f8b\u3068\u540c\u3058\u5909\u63db\u51e6\u7406\u3092 RuboCop \u3067\u3082\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\u5b9f\u8df5!! RuboCop\u30d7\u30e9\u30b0\u30a4\u30f3\u958b\u767a\u5165\u9580\u306e\u624b\u9806\u306b\u6cbf\u3063\u3066\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4ef6\u306e\u8a18\u4e8b\u3092\u8aad\u3081\u3070\u308f\u304b\u308b\u3068\u3053\u308d\u306f\u7701\u3044\u3066\u3001Cop\u306e\u672c\u4f53\u306e\u30b3\u30fc\u30c9\u3060\u3051\u7d39\u4ecb\u3002\n\n \u30c6\u30b9\u30c8\u5bfe\u8c61\u30b3\u30fc\u30c9\n10.times do\n  a = rand(-5..5)\n  if a > 0\n    puts \"positive\"\n  elsif a < 0\n    puts \"negative\"\n  else\n    puts \"zero\"\n  end\nend\n\n\n \u5909\u63db\u30b3\u30fc\u30c9\n# frozen_string_literal: true\n\nmodule RuboCop\n  module Cop\n    module Lint\n      class NegaPosi < Cop\n        MSG_NEGA = 'X < 0 \u306f X.negative? \u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044'.freeze\n        MSG_POSI = 'X > 0 \u306f X.positive? \u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044'.freeze\n        METHOD_NEGA = \"negative?\"\n        METHOD_POSI = \"positive?\"\n\n        def on_send(node)\n          receiver, method_name, *args = *node\n          return unless [:>, :<].include?(method_name)\n          return unless args.first.source == \"0\"\n          message = method_name == :> ? MSG_POSI : MSG_NEGA\n          add_offense(node, :expression, message)\n        end\n\n        def autocorrect(node)\n          _receiver, method_name, *args = *node\n          nega_posi = method_name == :> ? METHOD_POSI : METHOD_NEGA\n          lambda do |corrector|\n            corrector.replace(node.loc.expression, replacement(node, nega_posi))\n          end\n        end\n\n        private\n\n        def replacement(node, nega_posi)\n          \"#{node.receiver.source}.#{nega_posi}\"\n        end\n      end\n    end\n  end\nend\n\n\n \u5b9f\u884c\n\nlint \u3092\u5b9f\u884c\n\n$ rubocop  -r rubocop/nega_posi test/sample.rb\nInspecting 1 file\nW\n\nOffenses:\n\ntest/sample.rb:3:6: W: Lint/NegaPosi: X > 0 \u306f X.positive? \u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\n  if a > 0\n     ^^^^^\ntest/sample.rb:5:9: W: Lint/NegaPosi: X < 0 \u306f X.negative? \u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\n  elsif a < 0\n        ^^^^^\n\n1 file inspected, 2 offenses detected\n\n\nautocorrect \u3092\u5b9f\u884c\n\n$ rubocop --auto-correct  -r rubocop/nega_posi test/sample.rb\nInspecting 1 file\nW\n\nOffenses:\n\ntest/sample.rb:3:6: W: [Corrected] Lint/NegaPosi: X > 0 \u306f X.positive? \u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\n  if a > 0\n     ^^^^^\ntest/sample.rb:5:9: W: [Corrected] Lint/NegaPosi: X < 0 \u306f X.negative? \u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\n  elsif a < 0\n        ^^^^^\n\n1 file inspected, 2 offenses detected, 2 offenses corrected\n\n\n\u5b9f\u884c\u5f8c\u306e\u30d5\u30a1\u30a4\u30eb\n\n10.times do\n  a = rand(-5..5)\n  if a.positive?\n    puts \"positive\"\n  elsif a.negative?\n    puts \"negative\"\n  else\n    puts \"zero\"\n  end\nend\n\n\ndiff\n\n\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067\u4f5c\u3063\u305f Synvert \u306e Snippet \u3092 RuboCop \u306e `--auto-correct` \u3067\u7f6e\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002\n\nhttp://qiita.com/tbpgr/items/b7117a79db6e07540328\n\n### RuboCop \u306e Cop \u306e\u4f5c\u308a\u65b9\nRuboCop \u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b RuboCop::Cop::Cop \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002  \n\u8a73\u7d30\u306a\u4f5c\u6210\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u4e0b\u8a18\u306e\u8a18\u4e8b\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n\n[\u5b9f\u8df5!! RuboCop\u30d7\u30e9\u30b0\u30a4\u30f3\u958b\u767a\u5165\u9580 - SideCI TechBlog](http://tech.sideci.com/entry/2016/06/09/111926)\n\nSynvert \u306e\u4f8b\u3068\u540c\u3058\u5909\u63db\u51e6\u7406\u3092 RuboCop \u3067\u3082\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\u5b9f\u8df5!! RuboCop\u30d7\u30e9\u30b0\u30a4\u30f3\u958b\u767a\u5165\u9580\u306e\u624b\u9806\u306b\u6cbf\u3063\u3066\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4ef6\u306e\u8a18\u4e8b\u3092\u8aad\u3081\u3070\u308f\u304b\u308b\u3068\u3053\u308d\u306f\u7701\u3044\u3066\u3001Cop\u306e\u672c\u4f53\u306e\u30b3\u30fc\u30c9\u3060\u3051\u7d39\u4ecb\u3002\n\n#### <i class='fa fa-code'></i> \u30c6\u30b9\u30c8\u5bfe\u8c61\u30b3\u30fc\u30c9\n```ruby\n10.times do\n  a = rand(-5..5)\n  if a > 0\n    puts \"positive\"\n  elsif a < 0\n    puts \"negative\"\n  else\n    puts \"zero\"\n  end\nend\n```\n\n#### <i class='fa fa-code'></i> \u5909\u63db\u30b3\u30fc\u30c9\n```ruby\n# frozen_string_literal: true\n\nmodule RuboCop\n  module Cop\n    module Lint\n      class NegaPosi < Cop\n        MSG_NEGA = 'X < 0 \u306f X.negative? \u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044'.freeze\n        MSG_POSI = 'X > 0 \u306f X.positive? \u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044'.freeze\n        METHOD_NEGA = \"negative?\"\n        METHOD_POSI = \"positive?\"\n\n        def on_send(node)\n          receiver, method_name, *args = *node\n          return unless [:>, :<].include?(method_name)\n          return unless args.first.source == \"0\"\n          message = method_name == :> ? MSG_POSI : MSG_NEGA\n          add_offense(node, :expression, message)\n        end\n\n        def autocorrect(node)\n          _receiver, method_name, *args = *node\n          nega_posi = method_name == :> ? METHOD_POSI : METHOD_NEGA\n          lambda do |corrector|\n            corrector.replace(node.loc.expression, replacement(node, nega_posi))\n          end\n        end\n\n        private\n\n        def replacement(node, nega_posi)\n          \"#{node.receiver.source}.#{nega_posi}\"\n        end\n      end\n    end\n  end\nend\n```\n\n#### <i class='fa fa-terminal'></i> \u5b9f\u884c\n* lint \u3092\u5b9f\u884c\n\n```sh\n$ rubocop  -r rubocop/nega_posi test/sample.rb\nInspecting 1 file\nW\n\nOffenses:\n\ntest/sample.rb:3:6: W: Lint/NegaPosi: X > 0 \u306f X.positive? \u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\n  if a > 0\n     ^^^^^\ntest/sample.rb:5:9: W: Lint/NegaPosi: X < 0 \u306f X.negative? \u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\n  elsif a < 0\n        ^^^^^\n\n1 file inspected, 2 offenses detected\n```\n\n* autocorrect \u3092\u5b9f\u884c\n\n```sh\n$ rubocop --auto-correct  -r rubocop/nega_posi test/sample.rb\nInspecting 1 file\nW\n\nOffenses:\n\ntest/sample.rb:3:6: W: [Corrected] Lint/NegaPosi: X > 0 \u306f X.positive? \u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\n  if a > 0\n     ^^^^^\ntest/sample.rb:5:9: W: [Corrected] Lint/NegaPosi: X < 0 \u306f X.negative? \u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\n  elsif a < 0\n        ^^^^^\n\n1 file inspected, 2 offenses detected, 2 offenses corrected\n```\n\n* \u5b9f\u884c\u5f8c\u306e\u30d5\u30a1\u30a4\u30eb\n\n```ruby\n10.times do\n  a = rand(-5..5)\n  if a.positive?\n    puts \"positive\"\n  elsif a.negative?\n    puts \"negative\"\n  else\n    puts \"zero\"\n  end\nend\n```\n\n* diff\n\n![diff.png](https://qiita-image-store.s3.amazonaws.com/0/43480/91e2dc6c-14a3-b5bf-8945-2cb0f13a1dcc.png)\n\n"}