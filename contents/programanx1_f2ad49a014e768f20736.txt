{"tags": ["Xcode", "vDSP", "\u4fe1\u53f7\u51e6\u7406", "\u97f3\u58f0\u5206\u6790", "iPhone"], "context": " More than 1 year has passed since last update.\n\n\u30aa\u30fc\u30c7\u30a3\u30aa\u30fb\u97f3\u58f0\u5206\u6790\u3078\u306e\u9053 \u305d\u306e2\u3000\u6f14\u7b97\u51e6\u7406\n\u3055\u3066\u3001\u524d\u56de\u306fXcode\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\u3068\u3001\u8a2d\u5b9a\u3001\u66f4\u306b\u7c21\u5358\u306avDSP\u6f14\u7b97\u51e6\u7406\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3057\u305f\u3002\n\u4eca\u56de\u3082\u6f14\u7b97\u51e6\u7406\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u3001\u4eca\u5f8c\u4fe1\u53f7\u51e6\u7406\u3092\u884c\u3046\u4e0a\u3067\u5fc5\u8981\u306b\u306a\u308b\u95a2\u6570\u3092\u52c9\u5f37\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u3061\u3089\u306f\u56db\u5247\u6f14\u7b97\u306e\u95a2\u6570\u4e00\u89a7\u3067\u3059\u3002\n\n\u52a0\u7b97 : vDSP_vadd()\u3000\n\u6e1b\u7b97 : vDSP_vsub()\n\u4e57\u7b97 : vDSP_vmul()\n\u9664\u7b97 : vDSP_vdiv()\n\n\u30c7\u30fc\u30bf\u578b\u306b\u95a2\u3057\u3066\u306f\u3001\n\nvDSP_vaddi(); = int\nvDSP_vadd(); = float\nvDSP_vaddD(); = double\n\n\u3061\u306a\u307f\u306b\u3001add\u306e\u524d\u306b\u3064\u304f\"v\"\u306fvector\u306e\u610f\u5473\u3067\u3059\u3002\n\u52a0\u7b97\u306f\u524d\u56de\u3084\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u6e1b\u7b97\u304b\u3089\u3084\u308a\u307e\u3057\u3087\u3046\u3002\n\u6e1b\u7b97\u306ffloat\u3068double\u578b\u306e\u307f\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u6a21\u69d8\u3067\u3059\u3002\n\n\u6e1b\u7b97\n\nmain.c\n#include <stdio.h>\n#include<Accelerate/Accelerate.h>\n\nint main(int argc, const char * argv[])\n\n{\n    float input1[8] = {1,2,3,4,5,6,7,8};\n    float input2[8] = {11,12,13,14,15,16,17,18};\n    float output[8];\n    vDSP_vsub(input1,1,input2,1,output,1,8);\n\n    // \u7d50\u679c\u8868\u793a\n    int i;\n    for(i=0;i<8;i++){\n        printf(\"output[%d] = %f\\n\",i,output[i]);\n    }\n\n    return 0;\n}\n\n\n\u7d50\u679c\u306f\n\nresult\noutput[0] = 10.000000\noutput[1] = 10.000000\noutput[2] = 10.000000\noutput[3] = 10.000000\noutput[4] = 10.000000\noutput[5] = 10.000000\noutput[6] = 10.000000\noutput[7] = 10.000000\n\nProgram ended with exit code: 0\n\n\n\u3067\u3057\u305f\u3002\n\n\u4e57\u7b97\n\nmain.c\n    vDSP_vmul(input1,1,input2,1,output,1,8);\n\n\n\u4e0a\u306e\u69d8\u306b\u3057\u3066\u3001\u7d50\u679c\u306f\n\nresult\noutput[0] = 11.000000\noutput[1] = 24.000000\noutput[2] = 39.000000\noutput[3] = 56.000000\noutput[4] = 75.000000\noutput[5] = 96.000000\noutput[6] = 119.000000\noutput[7] = 144.000000\n\nProgram ended with exit code: 0\n\n\n\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\n\u9664\u7b97\n\nmain.c\nvDSP_vdiv(input1,1,input2,1,output,1,8);\n\n\n\u7d50\u679c\n\nresult\noutput[0] = 11.000000\noutput[1] = 6.000000\noutput[2] = 4.333333\noutput[3] = 3.500000\noutput[4] = 3.000000\noutput[5] = 2.666667\noutput[6] = 2.428571\noutput[7] = 2.250000\n\nProgram ended with exit code: 0\n\n\n\n\u305d\u306e\u4ed6\n\u4e0a\u306e\u4f8b\u3067\u306f\u3001\u56db\u5247\u6f14\u7b97\u3092\u5168\u3066\u914d\u5217\u3067\u884c\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u4f8b\u3048\u3070input1\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5168\u3066\u306e\u30c7\u30fc\u30bf\u306b\u3001\u540c\u3058\u6570\u3092\u639b\u3051\u5408\u308f\u305b\u305f\u3044\u3001\u3068\u3044\u3046\u30b1\u30fc\u30b9\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3053\u306e\u5834\u5408\u306f\u3001\u30d9\u30af\u30c8\u30eb\u30b9\u30ab\u30e9\u30fc\u8a08\u7b97\u3093\u3092\u884c\u3044\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\nvDSP_vsmul()\n\u3068vector\u306ev\u306e\u5f8c\u306bscalar\u306es\u3092\u3044\u308c\u307e\u3059\u3002\n\nmain.c\nfloat mul = 10;\nvDSP_vsmul(input1,1,&mul,output,1,8);\n\n\n\u540c\u3058\u30c7\u30fc\u30bf\u578b\u306e\u5909\u6570\u3092\u7528\u610f\u3057\u3001\u305d\u308c\u3092\u30dd\u30a4\u30f3\u30bf\u3067\u6e21\u3057\u307e\u3059\u3002\n\u3053\u306e\u5909\u6570\u306e\u30b9\u30c8\u30e9\u30a4\u30c9\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n\nmain.c\nextern void vDSP_vsmul(\n\n    const float *__vDSP_A, // input1\n\n    vDSP_Stride  __vDSP_IA, // input1\u306e\u30b9\u30c8\u30e9\u30a4\u30c9 (1)\n\n    const float *__vDSP_B, //\u5272\u308b\u6570 (\u30b9\u30c8\u30e9\u30a4\u30c9\u7121\u3057)\n\n    float       *__vDSP_C,  // output\n\n    vDSP_Stride  __vDSP_IC, // output\u306e\u30b9\u30c8\u30e9\u30a4\u30c9(1)\n\n    vDSP_Length  __vDSP_N) //\u30c7\u30fc\u30bf\u306e\u9577\u3055\n\n\n\u6b21\u306f\u6ce2\u5f62\u3092\u751f\u6210\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n#\u30aa\u30fc\u30c7\u30a3\u30aa\u30fb\u97f3\u58f0\u5206\u6790\u3078\u306e\u9053 \u305d\u306e2\u3000\u6f14\u7b97\u51e6\u7406\n\n\u3055\u3066\u3001\u524d\u56de\u306fXcode\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\u3068\u3001\u8a2d\u5b9a\u3001\u66f4\u306b\u7c21\u5358\u306avDSP\u6f14\u7b97\u51e6\u7406\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3057\u305f\u3002\n\u4eca\u56de\u3082\u6f14\u7b97\u51e6\u7406\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u3001\u4eca\u5f8c\u4fe1\u53f7\u51e6\u7406\u3092\u884c\u3046\u4e0a\u3067\u5fc5\u8981\u306b\u306a\u308b\u95a2\u6570\u3092\u52c9\u5f37\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3053\u3061\u3089\u306f\u56db\u5247\u6f14\u7b97\u306e\u95a2\u6570\u4e00\u89a7\u3067\u3059\u3002\n\n+ \u52a0\u7b97 : vDSP_vadd()\u3000\n+ \u6e1b\u7b97 : vDSP_vsub()\n+ \u4e57\u7b97 : vDSP_vmul()\n+ \u9664\u7b97 : vDSP_vdiv()\n\n\u30c7\u30fc\u30bf\u578b\u306b\u95a2\u3057\u3066\u306f\u3001\n\n+ vDSP_vaddi(); = int\n+ vDSP_vadd(); = float\n+ vDSP_vaddD(); = double\n\n\u3061\u306a\u307f\u306b\u3001add\u306e\u524d\u306b\u3064\u304f\"v\"\u306fvector\u306e\u610f\u5473\u3067\u3059\u3002\n\n\u52a0\u7b97\u306f\u524d\u56de\u3084\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u6e1b\u7b97\u304b\u3089\u3084\u308a\u307e\u3057\u3087\u3046\u3002\n\u6e1b\u7b97\u306ffloat\u3068double\u578b\u306e\u307f\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u6a21\u69d8\u3067\u3059\u3002\n\n##\u6e1b\u7b97\n\n```C:main.c\n#include <stdio.h>\n#include<Accelerate/Accelerate.h>\n\nint main(int argc, const char * argv[])\n\n{\n    float input1[8] = {1,2,3,4,5,6,7,8};\n    float input2[8] = {11,12,13,14,15,16,17,18};\n    float output[8];\n    vDSP_vsub(input1,1,input2,1,output,1,8);\n\n    // \u7d50\u679c\u8868\u793a\n    int i;\n    for(i=0;i<8;i++){\n        printf(\"output[%d] = %f\\n\",i,output[i]);\n    }\n\n    return 0;\n}\n```\n\n\u7d50\u679c\u306f\n\n```C:result\noutput[0] = 10.000000\noutput[1] = 10.000000\noutput[2] = 10.000000\noutput[3] = 10.000000\noutput[4] = 10.000000\noutput[5] = 10.000000\noutput[6] = 10.000000\noutput[7] = 10.000000\n\nProgram ended with exit code: 0\n```\n\n\u3067\u3057\u305f\u3002\n\n##\u4e57\u7b97\n\n```C:main.c\n    vDSP_vmul(input1,1,input2,1,output,1,8);\n```\n\n\u4e0a\u306e\u69d8\u306b\u3057\u3066\u3001\u7d50\u679c\u306f\n\n```C:result\noutput[0] = 11.000000\noutput[1] = 24.000000\noutput[2] = 39.000000\noutput[3] = 56.000000\noutput[4] = 75.000000\noutput[5] = 96.000000\noutput[6] = 119.000000\noutput[7] = 144.000000\n\nProgram ended with exit code: 0\n```\n\n\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\n##\u9664\u7b97\n\n```C:main.c\nvDSP_vdiv(input1,1,input2,1,output,1,8);\n```\n\n\u7d50\u679c\n\n```C:result\noutput[0] = 11.000000\noutput[1] = 6.000000\noutput[2] = 4.333333\noutput[3] = 3.500000\noutput[4] = 3.000000\noutput[5] = 2.666667\noutput[6] = 2.428571\noutput[7] = 2.250000\n\nProgram ended with exit code: 0\n```\n##\u305d\u306e\u4ed6\n\n\u4e0a\u306e\u4f8b\u3067\u306f\u3001\u56db\u5247\u6f14\u7b97\u3092\u5168\u3066\u914d\u5217\u3067\u884c\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u4f8b\u3048\u3070input1\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5168\u3066\u306e\u30c7\u30fc\u30bf\u306b\u3001\u540c\u3058\u6570\u3092\u639b\u3051\u5408\u308f\u305b\u305f\u3044\u3001\u3068\u3044\u3046\u30b1\u30fc\u30b9\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3053\u306e\u5834\u5408\u306f\u3001\u30d9\u30af\u30c8\u30eb\u30b9\u30ab\u30e9\u30fc\u8a08\u7b97\u3093\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u3064\u307e\u308a\u3001\n\nvDSP_vsmul()\n\n\u3068vector\u306ev\u306e\u5f8c\u306bscalar\u306es\u3092\u3044\u308c\u307e\u3059\u3002\n\n```C:main.c\nfloat mul = 10;\nvDSP_vsmul(input1,1,&mul,output,1,8);\n```\n\n\u540c\u3058\u30c7\u30fc\u30bf\u578b\u306e\u5909\u6570\u3092\u7528\u610f\u3057\u3001\u305d\u308c\u3092\u30dd\u30a4\u30f3\u30bf\u3067\u6e21\u3057\u307e\u3059\u3002\n\u3053\u306e\u5909\u6570\u306e\u30b9\u30c8\u30e9\u30a4\u30c9\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n\n```C:main.c\nextern void vDSP_vsmul(\n\n    const float *__vDSP_A, // input1\n\n    vDSP_Stride  __vDSP_IA, // input1\u306e\u30b9\u30c8\u30e9\u30a4\u30c9 (1)\n\n    const float *__vDSP_B, //\u5272\u308b\u6570 (\u30b9\u30c8\u30e9\u30a4\u30c9\u7121\u3057)\n\n    float       *__vDSP_C,  // output\n\n    vDSP_Stride  __vDSP_IC, // output\u306e\u30b9\u30c8\u30e9\u30a4\u30c9(1)\n\n    vDSP_Length  __vDSP_N) //\u30c7\u30fc\u30bf\u306e\u9577\u3055\n```\n\n\u6b21\u306f\u6ce2\u5f62\u3092\u751f\u6210\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n"}