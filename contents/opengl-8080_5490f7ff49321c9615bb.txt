{"tags": ["Java", "JavaFX", "SpringBoot"], "context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f JavaFX Advent Calendar 2015 - Qiita \u306e 21 \u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u6628\u65e5\u306f @fukai_yas \u3055\u3093\u306e ScalaFX\u3067\u306eListView\u306e\u6271\u3044 \u3067\u3057\u305f\u3002\n\u660e\u65e5\u306f @orekyuu \u3055\u3093\u3067\u3059\u3002\nJavaFX \u3092 Spring Boot \u304b\u3089\u8d77\u52d5\u3057\u3066\u307f\u307e\u3059\u3002\n\u3068\u3044\u3063\u3066\u3082\u3001\u7d20\u306e Spring \u3068\u9023\u643a\u3055\u305b\u308b\u65b9\u6cd5\u306f\u3059\u3067\u306b\u591a\u304f\u60c5\u5831\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nJavaFX\u306eController\u306b\u304a\u3051\u308bSpringBean\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066 - \u30bf\u30c4\u30ce\u30aa\u30c8\u30b7\u30b4\u306e\u65e5\u8a18\n\u306a\u306e\u3067\u3001 Spring Boot \u304b\u3089\u8d77\u52d5\u3059\u308b\u306e\u3082\u307b\u307c\u540c\u3058\u65b9\u6cd5\u3067\u3044\u3051\u307e\u3059\u3002\n\nbuild.gradle\nbuildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE'\n    }\n}\n\napply plugin: 'java'\napply plugin: 'spring-boot'\n\nsourceCompatibility = '1.8'\ntargetCompatibility = '1.8'\ncompileJava.options.encoding = 'UTF-8'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    compile 'org.springframework.boot:spring-boot-starter'\n}\n\n\n\u307e\u305a\u306f\u666e\u901a\u306b Spring Boot \u7528\u306e build.gradle \u3092\u7528\u610f\u3057\u3066\u3002\u3002\u3002\n\nMain.java\npackage gl8080.javafx;\n\nimport java.io.IOException;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.ConfigurableApplicationContext;\n\nimport javafx.application.Application;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.stage.Stage;\n\n@SpringBootApplication\npublic class Main extends Application { // \u2605Application \u3092\u7d99\u627f\n\n    private static ConfigurableApplicationContext context;\n\n    public static void main(String[] args) throws IOException {\n        // \u2605ApplicationContext \u306f\u5f8c\u3067\u4f7f\u3046\u306e\u3067 static \u5909\u6570\u306b\u4fdd\u5b58\u3057\u3066\u304a\u304f\n        context = SpringApplication.run(Main.class, args); // \u2605Spring Boot \u3092\u8d77\u52d5\n        launch(args); // \u2605JavaFX \u3092\u8d77\u52d5\n    }\n\n    @Override\n    public void start(Stage primaryStage) throws Exception {\n        // \u2605\u81ea\u4f5c\u306e FXMLLoader \u3092 Spring \u306e\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u53d6\u5f97\n        MySpringFXMLLoader loader = context.getBean(MySpringFXMLLoader.class);\n\n        // \u2605fxml \u3092\u30ed\u30fc\u30c9\n        Parent root = loader.load(\"sample.fxml\");\n\n        // \u2605\u3042\u3068\u306f\u666e\u901a\u306e JavaFX \u3068\u540c\u3058\n        Scene scene = new Scene(root);\n        primaryStage.setScene(scene);\n        primaryStage.show();\n    }\n\n    @Override\n    public void stop() throws Exception {\n        context.close(); // \u2605\u30a2\u30d7\u30ea\u7d42\u4e86\u6642\u306b stop() \u30e1\u30bd\u30c3\u30c9\u304c\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u306e\u3067\u3001 Spring \u30b3\u30f3\u30c6\u30ca\u3092\u7d42\u4e86\u3055\u305b\u308b\n    }\n}\n\n\n\u8d77\u52d5\u7528\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u30af\u30e9\u30b9\u81ea\u4f53\u306f JavaFX \u306e Application \u3092\u7d99\u627f\u3057\u3066\u3001 JavaFX \u3068\u540c\u3058\u611f\u3058\u3067\u4f5c\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001 main() \u30e1\u30bd\u30c3\u30c9\u306e\u5148\u982d\u3067 Spring Boot \u3092\u8d77\u52d5\u3057\u3066\u304b\u3089 JavaFX \u3092\u8d77\u52d5\uff08launch()\uff09\u3055\u305b\u307e\u3059\u3002\nstart() \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u3060\u3055\u308c\u305f\u3089\u3001 main() \u30e1\u30bd\u30c3\u30c9\u3067\u4fdd\u5b58\u3057\u3066\u304a\u3044\u305f ConfigurableApplicationContext \u304b\u3089\u81ea\u4f5c\u306e FXMLLoader \u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u81ea\u4f5c\u306e FXMLLoader \u304b\u3089 fxml \u3092\u30ed\u30fc\u30c9\u3057\u305f\u3089\u3001\u3042\u3068\u306f\u666e\u901a\u306e JavaFX \u3068\u540c\u3058\u3067\u3059\u3002\nSpring Boot \u306e\u7d42\u4e86\u51e6\u7406\u306f\u3001 Application \u30af\u30e9\u30b9\u306e stop() \u30e1\u30bd\u30c3\u30c9\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7d42\u4e86\u6642\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3001\u305d\u3053\u3067\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u81ea\u4f5c\u306e FXMLLoader \u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\nMySpringFXMLLoader.java\npackage gl8080.javafx;\n\nimport java.io.IOException;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.stereotype.Component;\n\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Parent;\n\n@Component // \u2605\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u3057\u3066\u767b\u9332\npublic class MySpringFXMLLoader {\n\n    @Autowired\n    private ApplicationContext context;\n\n    public Parent load(String path) throws IOException {\n        FXMLLoader loader = new FXMLLoader(); // \u2605\u30aa\u30ea\u30b8\u30ca\u30eb\u306e FXMLLoader \u3092\u751f\u6210\n\n        loader.setControllerFactory(this.context::getBean); // \u2605ControllerFactory \u306b ApplicationContext \u3092\u5229\u7528\u3059\u308b\n\n        return loader.load(MySpringFXMLLoader.class.getClassLoader().getResourceAsStream(path));\n    }\n}\n\n\n\u51e6\u7406\u81ea\u4f53\u306f\u3001\u307b\u3068\u3093\u3069\u30aa\u30ea\u30b8\u30ca\u30eb\u306e FXMLLoader \u306b\u4e38\u6295\u3052\u3067\u3059\u3002\n\u552f\u4e00\u9055\u3046\u306e\u304c\u3001 Controller \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e ControllerFactory \u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\nFXMLLoader \u306e setControllerFacrorey() \u306b\u306f javafx.util.Callback \u3092\u5b9f\u88c5\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u307e\u3059\u3002\n\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306a\u3063\u3066\u3044\u3066\u3001 Controller \u306e Class<?> \u3092\u53d7\u3051\u53d6\u308a\u3001 Controller \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u306f\u3001\u307e\u3055\u3057\u304f ApplicationContext#getBean() \u3068\u4e00\u81f4\u3059\u308b\u306e\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u3092\u4f7f\u3063\u3066\u30bb\u30c3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001 Controller \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c Spring \u306e\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u53d6\u5f97\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nMyController.java\npackage gl8080.javafx;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport javafx.fxml.FXML;\nimport javafx.scene.control.Label;\n\n@Component\npublic class MyController {\n\n    @FXML\n    private Label label;\n\n    @Autowired\n    private MyBean bean;\n\n    @FXML\n    public void onClickButton() {\n        String text = this.bean.getText();\n        this.label.setText(text);\n    }\n}\n\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30af\u30e9\u30b9\u3067\u3059\u3002\nSpring \u306e @Autowired \u3067\u4ed6\u306e\u30d3\u30fc\u30f3\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3057\u3066\u3044\u307e\u3059\u3002\n\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3089\u3001\u30e9\u30d9\u30eb\u306e\u6587\u5b57\u5217\u3092\u30d3\u30fc\u30f3\u304c\u8fd4\u3057\u305f\u5024\u3067\u66f8\u304d\u63db\u3048\u308b\u3060\u3051\u306e\u5358\u7d14\u306a\u5b9f\u88c5\u3067\u3059\u3002\n\nMyBean.java\npackage gl8080.javafx;\n\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class MyBean {\n\n    public String getText() {\n        return \"Hello Spring Boot!!\";\n    }\n}\n\n\nMyBean \u306e\u5b9f\u88c5\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\u5b9f\u969b\u306b\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u554f\u984c\u306a\u304f\u9023\u643a\u3067\u304d\u307e\u3057\u305f\uff01\n\u30b3\u30fc\u30c9\u306f GitHub \u306b\u3042\u3052\u3066\u3044\u307e\u3059 ( https://github.com/opengl-8080/javafx-and-spring-boot ) \u3002\n\n\u304a\u307e\u3051\n\u3053\u308c\u3067\u7d42\u308f\u308b\u306e\u306f\u30a2\u30ec\u306a\u306e\u3067\u3001 Java EE \u306e\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc \u3067\u4f5c\u3063\u305f\u30e9\u30a4\u30d5\u30b2\u30fc\u30e0\u3092 JavaFX \u306b\u79fb\u690d\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3068\u3044\u3063\u3066\u3082\u3001\u7de8\u96c6\u6a5f\u80fd\u3068\u304b\u307e\u3067\u79fb\u690d\u3057\u3066\u3044\u308b\u4f59\u88d5\u306f\u3001\u6642\u9593\u7684\u306b\u3082\u4f53\u529b\u7684\u306b\u3082\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a\u30b5\u30f3\u30d7\u30eb\u306e\u30b2\u30fc\u30e0\u5b9a\u7fa9\u3060\u3051\u3092\u52d5\u304b\u305b\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089( https://github.com/opengl-8080/lifegame-javafx )\u3067\u3059\u3002\n\u3067\u306f\u3001\u4eca\u56de\u3082\u5f7c\u306b\u6d3b\u8e8d\u3057\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u3087\u3046\uff01\n\n\u2193\n\n(\uff1b\uff9f\u0434\uff9f)\u30c7\u30e5\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30af\uff01\uff01\uff01\uff01\n\n\u53c2\u8003\n\nJavaFX\u306eController\u306b\u304a\u3051\u308bSpringBean\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066 - \u30bf\u30c4\u30ce\u30aa\u30c8\u30b7\u30b4\u306e\u65e5\u8a18\nJava\u6280\u8853\u6700\u524d\u7dda - JavaFX 2\u3067\u306f\u3058\u3081\u308b\u3001GUI\u958b\u767a\u3000\u7b2c17\u56de \u30ad\u30e3\u30f3\u30d0\u30b9\uff1aITpro\nJavaFX 2.2 \u72ec\u81ea\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092FXML\u3067\u4f7f\u3046 - denko_i\u306e\u65e5\u8a18\nSpring Boot Reference Guide\n\n\u3053\u306e\u8a18\u4e8b\u306f [JavaFX Advent Calendar 2015 - Qiita](http://qiita.com/advent-calendar/2015/javafx) \u306e 21 \u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u6628\u65e5\u306f [@fukai_yas](https://twitter.com/fukai_yas) \u3055\u3093\u306e [ScalaFX\u3067\u306eListView\u306e\u6271\u3044](http://blog.livedoor.jp/fukai_yas/archives/47274295.html) \u3067\u3057\u305f\u3002\n\u660e\u65e5\u306f [@orekyuu](https://twitter.com/orekyuu) \u3055\u3093\u3067\u3059\u3002\n\nJavaFX \u3092 Spring Boot \u304b\u3089\u8d77\u52d5\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u3068\u3044\u3063\u3066\u3082\u3001\u7d20\u306e Spring \u3068\u9023\u643a\u3055\u305b\u308b\u65b9\u6cd5\u306f\u3059\u3067\u306b\u591a\u304f\u60c5\u5831\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n[JavaFX\u306eController\u306b\u304a\u3051\u308bSpringBean\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066 - \u30bf\u30c4\u30ce\u30aa\u30c8\u30b7\u30b4\u306e\u65e5\u8a18](http://d.hatena.ne.jp/tatsu-no-toshigo/20130503/1367810193)\n\n\u306a\u306e\u3067\u3001 Spring Boot \u304b\u3089\u8d77\u52d5\u3059\u308b\u306e\u3082\u307b\u307c\u540c\u3058\u65b9\u6cd5\u3067\u3044\u3051\u307e\u3059\u3002\n\n```groovy:build.gradle\nbuildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.3.1.RELEASE'\n    }\n}\n\napply plugin: 'java'\napply plugin: 'spring-boot'\n\nsourceCompatibility = '1.8'\ntargetCompatibility = '1.8'\ncompileJava.options.encoding = 'UTF-8'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    compile 'org.springframework.boot:spring-boot-starter'\n}\n```\n\n\u307e\u305a\u306f\u666e\u901a\u306b Spring Boot \u7528\u306e `build.gradle` \u3092\u7528\u610f\u3057\u3066\u3002\u3002\u3002\n\n```java:Main.java\npackage gl8080.javafx;\n\nimport java.io.IOException;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.ConfigurableApplicationContext;\n\nimport javafx.application.Application;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.stage.Stage;\n\n@SpringBootApplication\npublic class Main extends Application { // \u2605Application \u3092\u7d99\u627f\n\n    private static ConfigurableApplicationContext context;\n    \n    public static void main(String[] args) throws IOException {\n        // \u2605ApplicationContext \u306f\u5f8c\u3067\u4f7f\u3046\u306e\u3067 static \u5909\u6570\u306b\u4fdd\u5b58\u3057\u3066\u304a\u304f\n        context = SpringApplication.run(Main.class, args); // \u2605Spring Boot \u3092\u8d77\u52d5\n        launch(args); // \u2605JavaFX \u3092\u8d77\u52d5\n    }\n    \n    @Override\n    public void start(Stage primaryStage) throws Exception {\n        // \u2605\u81ea\u4f5c\u306e FXMLLoader \u3092 Spring \u306e\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u53d6\u5f97\n        MySpringFXMLLoader loader = context.getBean(MySpringFXMLLoader.class);\n        \n        // \u2605fxml \u3092\u30ed\u30fc\u30c9\n        Parent root = loader.load(\"sample.fxml\");\n        \n        // \u2605\u3042\u3068\u306f\u666e\u901a\u306e JavaFX \u3068\u540c\u3058\n        Scene scene = new Scene(root);\n        primaryStage.setScene(scene);\n        primaryStage.show();\n    }\n\n    @Override\n    public void stop() throws Exception {\n        context.close(); // \u2605\u30a2\u30d7\u30ea\u7d42\u4e86\u6642\u306b stop() \u30e1\u30bd\u30c3\u30c9\u304c\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u306e\u3067\u3001 Spring \u30b3\u30f3\u30c6\u30ca\u3092\u7d42\u4e86\u3055\u305b\u308b\n    }\n}\n```\n\n\u8d77\u52d5\u7528\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u30af\u30e9\u30b9\u81ea\u4f53\u306f JavaFX \u306e `Application` \u3092\u7d99\u627f\u3057\u3066\u3001 JavaFX \u3068\u540c\u3058\u611f\u3058\u3067\u4f5c\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001 `main()` \u30e1\u30bd\u30c3\u30c9\u306e\u5148\u982d\u3067 Spring Boot \u3092\u8d77\u52d5\u3057\u3066\u304b\u3089 JavaFX \u3092\u8d77\u52d5\uff08`launch()`\uff09\u3055\u305b\u307e\u3059\u3002\n\n`start()` \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u3060\u3055\u308c\u305f\u3089\u3001 `main()` \u30e1\u30bd\u30c3\u30c9\u3067\u4fdd\u5b58\u3057\u3066\u304a\u3044\u305f `ConfigurableApplicationContext` \u304b\u3089\u81ea\u4f5c\u306e `FXMLLoader` \u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u81ea\u4f5c\u306e `FXMLLoader` \u304b\u3089 fxml \u3092\u30ed\u30fc\u30c9\u3057\u305f\u3089\u3001\u3042\u3068\u306f\u666e\u901a\u306e JavaFX \u3068\u540c\u3058\u3067\u3059\u3002\n\nSpring Boot \u306e\u7d42\u4e86\u51e6\u7406\u306f\u3001 `Application` \u30af\u30e9\u30b9\u306e `stop()` \u30e1\u30bd\u30c3\u30c9\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7d42\u4e86\u6642\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3001\u305d\u3053\u3067\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u81ea\u4f5c\u306e `FXMLLoader` \u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n```java:MySpringFXMLLoader.java\npackage gl8080.javafx;\n\nimport java.io.IOException;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.stereotype.Component;\n\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Parent;\n\n@Component // \u2605\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u3057\u3066\u767b\u9332\npublic class MySpringFXMLLoader {\n    \n    @Autowired\n    private ApplicationContext context;\n    \n    public Parent load(String path) throws IOException {\n        FXMLLoader loader = new FXMLLoader(); // \u2605\u30aa\u30ea\u30b8\u30ca\u30eb\u306e FXMLLoader \u3092\u751f\u6210\n        \n        loader.setControllerFactory(this.context::getBean); // \u2605ControllerFactory \u306b ApplicationContext \u3092\u5229\u7528\u3059\u308b\n        \n        return loader.load(MySpringFXMLLoader.class.getClassLoader().getResourceAsStream(path));\n    }\n}\n```\n\n\u51e6\u7406\u81ea\u4f53\u306f\u3001\u307b\u3068\u3093\u3069\u30aa\u30ea\u30b8\u30ca\u30eb\u306e `FXMLLoader` \u306b\u4e38\u6295\u3052\u3067\u3059\u3002\n\u552f\u4e00\u9055\u3046\u306e\u304c\u3001 `Controller` \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e `ControllerFactory` \u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n\n`FXMLLoader` \u306e `setControllerFacrorey()` \u306b\u306f `javafx.util.Callback` \u3092\u5b9f\u88c5\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6e21\u3057\u307e\u3059\u3002\n\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u95a2\u6570\u578b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306a\u3063\u3066\u3044\u3066\u3001 `Controller` \u306e `Class<?>` \u3092\u53d7\u3051\u53d6\u308a\u3001 `Controller` \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u306f\u3001\u307e\u3055\u3057\u304f `ApplicationContext#getBean()` \u3068\u4e00\u81f4\u3059\u308b\u306e\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u3092\u4f7f\u3063\u3066\u30bb\u30c3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001 `Controller` \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c Spring \u306e\u30b3\u30f3\u30c6\u30ca\u304b\u3089\u53d6\u5f97\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java:MyController.java\npackage gl8080.javafx;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport javafx.fxml.FXML;\nimport javafx.scene.control.Label;\n\n@Component\npublic class MyController {\n    \n    @FXML\n    private Label label;\n    \n    @Autowired\n    private MyBean bean;\n    \n    @FXML\n    public void onClickButton() {\n        String text = this.bean.getText();\n        this.label.setText(text);\n    }\n}\n```\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30af\u30e9\u30b9\u3067\u3059\u3002\nSpring \u306e `@Autowired` \u3067\u4ed6\u306e\u30d3\u30fc\u30f3\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3089\u3001\u30e9\u30d9\u30eb\u306e\u6587\u5b57\u5217\u3092\u30d3\u30fc\u30f3\u304c\u8fd4\u3057\u305f\u5024\u3067\u66f8\u304d\u63db\u3048\u308b\u3060\u3051\u306e\u5358\u7d14\u306a\u5b9f\u88c5\u3067\u3059\u3002\n\n```java:MyBean.java\npackage gl8080.javafx;\n\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class MyBean {\n\n    public String getText() {\n        return \"Hello Spring Boot!!\";\n    }\n}\n```\n\n`MyBean` \u306e\u5b9f\u88c5\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\n\u5b9f\u969b\u306b\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002\n\n![javafx_springboot.gif](https://qiita-image-store.s3.amazonaws.com/0/28302/08cd6ba1-ce13-7a51-f4b4-e2d2e9fefabe.gif)\n\n\u554f\u984c\u306a\u304f\u9023\u643a\u3067\u304d\u307e\u3057\u305f\uff01\n\n\u30b3\u30fc\u30c9\u306f GitHub \u306b\u3042\u3052\u3066\u3044\u307e\u3059 ( https://github.com/opengl-8080/javafx-and-spring-boot ) \u3002\n\n# \u304a\u307e\u3051\n\u3053\u308c\u3067\u7d42\u308f\u308b\u306e\u306f\u30a2\u30ec\u306a\u306e\u3067\u3001 [Java EE \u306e\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc](http://qiita.com/opengl-8080/items/a9dddb09d4a3e8f74439) \u3067\u4f5c\u3063\u305f\u30e9\u30a4\u30d5\u30b2\u30fc\u30e0\u3092 JavaFX \u306b\u79fb\u690d\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u3068\u3044\u3063\u3066\u3082\u3001\u7de8\u96c6\u6a5f\u80fd\u3068\u304b\u307e\u3067\u79fb\u690d\u3057\u3066\u3044\u308b\u4f59\u88d5\u306f\u3001\u6642\u9593\u7684\u306b\u3082\u4f53\u529b\u7684\u306b\u3082\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a\u30b5\u30f3\u30d7\u30eb\u306e\u30b2\u30fc\u30e0\u5b9a\u7fa9\u3060\u3051\u3092\u52d5\u304b\u305b\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089( https://github.com/opengl-8080/lifegame-javafx )\u3067\u3059\u3002\n\n\u3067\u306f\u3001\u4eca\u56de\u3082\u5f7c\u306b\u6d3b\u8e8d\u3057\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u3087\u3046\uff01\n\n![javafx-springboot_2.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/5bb61905-52d2-8a55-01d7-295dc0be409e.jpeg)\n\n\u2193\n\n![javafx_springboot-compressor.gif](https://qiita-image-store.s3.amazonaws.com/0/28302/e79eaadc-6069-91a7-e65e-8a15e3007282.gif)\n\n(\uff1b\uff9f\u0434\uff9f)\u30c7\u30e5\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30fc\u30af\uff01\uff01\uff01\uff01\n\n\n# \u53c2\u8003\n- [JavaFX\u306eController\u306b\u304a\u3051\u308bSpringBean\u306e\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066 - \u30bf\u30c4\u30ce\u30aa\u30c8\u30b7\u30b4\u306e\u65e5\u8a18](http://d.hatena.ne.jp/tatsu-no-toshigo/20130503/1367810193)\n- [Java\u6280\u8853\u6700\u524d\u7dda - JavaFX 2\u3067\u306f\u3058\u3081\u308b\u3001GUI\u958b\u767a\u3000\u7b2c17\u56de \u30ad\u30e3\u30f3\u30d0\u30b9\uff1aITpro](http://itpro.nikkeibp.co.jp/article/COLUMN/20131022/512742/?rt=nocnt)\n- [JavaFX 2.2 \u72ec\u81ea\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092FXML\u3067\u4f7f\u3046 - denko_i\u306e\u65e5\u8a18](http://d.hatena.ne.jp/denko_i/20121116/1353051352)\n- [Spring Boot Reference Guide](http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#boot-features-application-arguments)\n"}