{"context": "\n\nLINE BOT API Trial\n4/7\uff08\u6728\uff09\u306bLINE BOT API Trial\u304c\u63d0\u4f9b\u3055\u308c\u3066\u6570\u65e5\u3067Qiita\u306b\u8a18\u4e8b\u304c\u3042\u304c\u3063\u3066\u3044\u3066\u307f\u3093\u306a\u65e9\u3044\u306a\u30fc\u3068\u3002\n\nLINE BOT API Trial\u3067\u3067\u304d\u308b\u5168\u3066\u306e\u4e8b\u3092\u8a66\u3057\u3066\u307f\u305f\nLINE BOT API\u3092\u5229\u7528\u3057\u305f\u5730\u7344\u306e\u30df\u30b5\u30efBOT\u306e\u4f5c\u308a\u65b9\n\n\u300c\u81ea\u5206\u3082\u65e9\u304f\u306a\u3093\u304b\u4f5c\u3089\u306a\u3044\u3068\u300d\u3068\u3044\u3046\u7126\u308a\u3092\u611f\u3058\u3066\u3053\u306e\u571f\u65e5\u3067LINE BOT\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u30a2\u30ab\u30a6\u30f3\u30c8\u767b\u9332\n\u767b\u9332\u306f\u7c21\u5358\u3002\nhttps://developers.line.me\n\u304b\u3089\u767b\u9332\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nBOT\u540d\u3068\u304b\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u753b\u50cf\u3068\u304b\u306f\u5f8c\u304b\u3089\u3067\u3082\u5909\u3048\u3089\u308c\u308b\u306e\u3067\u9069\u5f53\u3067OK\u3002\nCallback\u95a2\u6570\u3082\u9069\u5f53\u306b\u3002\n\n\u3069\u3093\u306aBOT\u3064\u304f\u308b\u304b\n\u524dGoogleCloudVision\u306e\u8a18\u4e8b\u66f8\u3044\u3066\u3001\u305d\u306e\u6642\u4f7f\u3063\u3066\u307f\u3066\u611f\u52d5\u3057\u305f\u3093\u3067\u3059\u3088\u306d\u3002\n\u3051\u3069\u3001\u3082\u3063\u3068\u3053\u306e\u611f\u52d5\u3092\u7686\u306b\u4f1d\u3048\u305f\u3044\uff01\u3068\u601d\u3063\u3066\u305f\u3093\u3067\nLINE\u3068\u3044\u3046\u4f7f\u3044\u6163\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3067GoogleCloudVision\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u3042\u3068\u3001\u304a\u307e\u3051\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3059\u304c\u300c\u6642\u9593\u300d\u3063\u3066\u6295\u3052\u308b\u3068\u73fe\u5728\u6642\u523b\u6559\u3048\u3066\u304f\u308c\u305f\u308a\u3002\nLINE BOT\u30b5\u30fc\u30d0\u304b\u3089callback\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u30b5\u30fc\u30d0\u304c\u5fc5\u8981\u3060\u3063\u305f\u308a\u3057\u304b\u3082https\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u304b\u3063\u305f\u308a\u30aa\u30ec\u30aa\u30ec\u8a8d\u8a3c\u3060\u3081\u3068\u304b\u3063\u3066\u5642\u304c\u3042\u3063\u305f\u306e\u3067\n\u3053\u3053\u306f\u3084\u306f\u308a\u30b5\u30fc\u30d0\u30ec\u30b9\u3068\u3044\u3046\u3053\u3068\u3067AWS\u306eLambda\u3092\u3064\u304b\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\nBOT\u3092\u4f5c\u308b\n\n\u51e6\u7406\u306e\u6d41\u308c\u3092\u8003\u3048\u308b\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3082\u3089\u3063\u3066\u753b\u50cf\u89e3\u6790\u3057\u3066\u7d50\u679c\u3092\u8fd4\u3059\u90e8\u5206\u306e\u3056\u3063\u304f\u308a\u3068\u3057\u305f\u51e6\u7406\u306e\u6d41\u308c\u3092\u56f3\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n\u30e6\u30fc\u30b6\u304c\u30b9\u30de\u30db\u306eLINE\u30a2\u30d7\u30ea\u304b\u3089\u30dc\u30c3\u30c8\u5b9b\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\nLINE Server\u304c\u4e88\u3081\u6307\u5b9a\u3057\u305fCallback\u3092\u53e9\u304f\uff08Body\u306b\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u60c5\u5831\u3092\u542b\u3080json\uff09\n\u753b\u50cfID\u306b\u7d10\u3065\u304f\u753b\u50cf\u30c7\u30fc\u30bf\u3092Line Server\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\nLINE Server\u304b\u3089\u753b\u50cf\u306e\u751f\u30c7\u30fc\u30bf\u304c\u8fd4\u3063\u3066\u304f\u308b\n\u753b\u50cf\u30c7\u30fc\u30bf\u3092Base64\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066GoogleCloudVision\u306bPOST\u3059\u308b\nGoogleCloudVision\u304b\u3089\u89e3\u6790\u7d50\u679c\u304cjson\u3067\u8fd4\u3063\u3066\u304f\u308b\n\u89e3\u6790\u7d50\u679c\u304b\u3089\u8fd4\u4fe1\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6574\u5f62\u3059\u308b\nLine Server\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u6295\u7a3f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\n\u30e6\u30fc\u30b6\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5c4a\u304f\n\n\u3068\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\nLambda Function\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n\u8a8d\u8a3c\u306e\u305f\u3081\u306e\u9375\u60c5\u5831\u306f\u5225\u30d5\u30a1\u30a4\u30eb\u3067\u6301\u3063\u3068\u304d\u307e\u3059\u3002\n\u3053\u308c\u306fLINE API\u7528\uff08line_key.json\uff09\n{\"channelID\": \"\", \"channelSecret\": \"\", \"mid\": \"\"}\n\n\u3053\u308c\u3089\u306e\u60c5\u5831\u306f\u958b\u767a\u8005\u7528\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u304cGoogle Cloud Vision\u7528\uff08google_key.json\uff09\n{\"key\": \"\"}\n\n\u3053\u308c\u3082Google\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u53d6\u3063\u3066\u304d\u307e\u3057\u3087\u3046\u3002\nLambda\u95a2\u6570\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\nvar request = require('request');\nvar async = require('async');\nvar res;\nvar line_key = require('./line_key.json');\nvar google_key = require('./google_key.json');\n\nexports.handler = function(event, context) {\n    console.log('Received event:', JSON.stringify(event, null, 2));\n    res = event.result[0];\n\n    async.waterfall([\n        function recognize(callback) {\n            if (res.content.contentType === 2) {\n                callback(null, 'image');\n            } else if (res.content.text.match(/^\u6642\u9593/)) {\n                callback(null, 'time');\n            } else {\n                callback(null, 'other');\n            }\n        },\n        function run(data, callback) {\n            if (data === 'image') {\n                console.log('run image');\n                async.waterfall([\n                    function getImage(callback2) {\n                        console.log('get image');\n                        var id = res.content.id;\n\n                        var opts = {\n                            url: 'https://trialbot-api.line.me/v1/bot/message/' + id + '/content',\n                            headers: {\n                                \"Content-type\": \"application/json; charset=UTF-8\",\n                                \"X-Line-ChannelID\": line_key.channelID,\n                                \"X-Line-ChannelSecret\": line_key.channelSecret,\n                                \"X-Line-Trusted-User-With-ACL\": line_key.mid\n                            },\n                            encoding: null\n                        }\n                        request(opts, function(error, response, body) {\n                            if (!error && response.statusCode == 200) {\n                                var img = body.toString('base64')\n                                callback2(null, img);\n                            } else {\n                                callback2(error);\n                            }\n                        });\n                    },\n                    function sendCloudAPI(img, callback2) {\n                       console.log('send cloud api');\n                        var data = {\n                            \"requests\":[\n                                {\n                                    \"image\":{\"content\": img},\n                                    \"features\":[\n                                        {\"type\": \"FACE_DETECTION\", \"maxResults\": 5},\n                                        {\"type\": \"LABEL_DETECTION\", \"maxResults\": 5},\n                                        {\"type\": \"TEXT_DETECTION\", \"maxResults\": 5},\n                                        {\"type\": \"LANDMARK_DETECTION\", \"maxResults\": 5},\n                                        {\"type\": \"LOGO_DETECTION\", \"maxResults\": 5},\n                                        {\"type\": \"SAFE_SEARCH_DETECTION\", \"maxResults\": 5}\n                                    ]\n                                }\n                            ]\n                        };\n                        var opts = {\n                            url: 'https://vision.googleapis.com/v1/images:annotate?key=' + google_key.key,\n                            headers: {'Content-Type': 'application/json'},\n                            body: JSON.stringify(data)\n                        }\n                        var text = '';\n                        request.post(opts, function (error, response, body) {\n                            console.log(body);\n                            body = JSON.parse(body);\n                            var labelAnnotations = body.responses[0].labelAnnotations;\n                            var faceAnnotations = body.responses[0].faceAnnotations;\n                            var textAnnotations = body.responses[0].textAnnotations;\n                            var landmarkAnnotations = body.responses[0].landmarkAnnotations;\n                            var logoAnnotations = body.responses[0].logoAnnotations;\n                            var safeSearchAnnotation = body.responses[0].safeSearchAnnotation;\n                            if (labelAnnotations !== undefined) {\n                                for (var i = 0; i < labelAnnotations.length; i++) {\n                                    text += '\"' + labelAnnotations[i].description + '\"' + \"\u3068\u304b\\n\";\n                                }\n                                text += \"\u307e\u3041\u305d\u306e\u8fba\u308a\u3058\u3083\u306a\u3044\u304b\u306a\\n\\n\";\n                            }\n                            if (faceAnnotations !== undefined) {\n                                text += \"\u4eba\u9593\u304c\" + faceAnnotations.length + \"\u4eba\u3044\u308b\u307f\u305f\u3044\u3060\u306d\\n\\n\";\n                            }\n                            if (textAnnotations !== undefined) {\n                                text += \"\u300c\" + textAnnotations[0].description.replace(/\\n/g, ' ') + \"\u300d\u3068\u304b\u3063\u3066\u66f8\u3044\u3066\u3042\u308b\u306a\u3041\\n\\n\";\n                            }\n                            if (landmarkAnnotations !== undefined) {\n                                text += \"\u3042\uff01\u3053\u308c\u5834\u6240\u306f\" + landmarkAnnotations[0].description + \"\u3060\u3088\u306d\uff01\\n\\n\";\n                            }\n                            if (logoAnnotations !== undefined) {\n                                text += \"\u3063\u3066\u304b\u3053\u308c\u300c\" + logoAnnotations[0].description + \"\u300d\u3058\u3083\u306d\uff1fwww\\n\\n\";\n                            }\n                            if (safeSearchAnnotation !== undefined && (safeSearchAnnotation.adult === 'LIKELY' || safeSearchAnnotation.adult === 'VERY_LIKELY')) {\n                                text += \"\u3042\u3001\u3044\u3084\u3001\u3001\u3001\u3066\u304b\u3053\u308c\u2026\u3061\u3087\u3063\u3068\u30a8\u30c3\u30c1///\\n\\n\";\n                            }\n                            text = text.replace(/\\n+$/g,'');\n                            callback2(null, text);\n                        });\n                    }\n                ], function (err, result) {\n                    callback(null, result);\n                });\n            } else if (data === 'time') {\n                console.log('run time');\n                var date = new Date();\n                var year = date.getFullYear();\n                var month = date.getMonth()+1;\n                var week = date.getDay();\n                var day = date.getDate();\n                var hour = date.getHours();\n                var minute = date.getMinutes();\n                var second = date.getSeconds();\n                var text = year+\"\u5e74\"+month+\"\u6708\"+day+\"\u65e5\"+hour+\"\u6642\"+minute+\"\u5206\"+second+\"\u79d2\";\n                callback(null, text);\n            } else {\n                console.log('run else');\n                var text = '\u3044\u3084\u3001\u3061\u3087\u3063\u3068\u306a\u306b\u8a00\u3063\u3066\u308b\u304b\u5206\u304b\u3093\u306a\u3044\u3063\u3059\uff57';\n                callback(null, text);\n            }\n        },\n        function postToLine(text, callback) {\n            console.log('run post : ' + text)\n            var data = {\n                to: [res.content.from.toString()],\n                toChannel: 1383378250,\n                eventType: \"138311608800106203\",\n                content: {\n                    \"contentType\":1,\n                    \"toType\":1,\n                    \"text\":text\n                }\n            };\n            var opts = {\n                url: 'https://trialbot-api.line.me/v1/events',\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                    \"X-Line-ChannelID\": line_key.channelID,\n                    \"X-Line-ChannelSecret\": line_key.channelSecret,\n                    \"X-Line-Trusted-User-With-ACL\": line_key.mid\n                },\n                body: JSON.stringify(data)\n            }\n            request.post(opts, function (error, response, body) {\n                if (!error && response.statusCode == 200) {\n                    callback(null);\n                } else {\n                    console.log(JSON.stringify(body));\n                    callback(error);\n                }\n            });\n        }\n    ], function (err, result) {\n    });\n};\n\n\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3068\u304b\u8d85\u9069\u5f53\u306a\u306e\u306f\u3054\u3081\u3093\u306a\u3055\u3044\u3067\u3059\u3002\u3002\u3002\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u304a\u3044\u3066\u304a\u304d\u307e\u3059\u306d\u3002\nhttps://github.com/donkeykey/CloudVision_LineBot\n\u3067\u304d\u305f\u3089API GATEWAY\u8a2d\u5b9a\u3057\u3066POST\u3067Lambda\u95a2\u6570\u304c\u52d5\u304f\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nAPI\u306eURL\u304c\u308f\u304b\u3063\u305f\u3089\u305d\u306eURL\u3092LINE\u306e\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u304b\u3089Callback URL\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u3053\u306e\u72b6\u614b\u3067\u6295\u7a3f\u3057\u3066\u3082Whitelist IP\u3092\u767b\u9332\u3057\u306a\u3044\u3068BOT\u304b\u3089\u306e\u6295\u7a3f\u304c\u3067\u304d\u307e\u305b\u3093\u3002\nCloudWatch\u306e\u30a8\u30e9\u30fc\u30ed\u30b0\u306bIP\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u5e83\u3081\u306b\u53d6\u3063\u3066\u767b\u9332\u3057\u307e\u3057\u305f\u3002\n\n\u611f\u60f3\n\n\u3060\u3044\u305f\u3044\u306e\u4eba\u304c\u9023\u7d61\u624b\u6bb5\u3068\u3057\u3066\u4f7f\u3063\u3066\u3044\u308bLINE\u3068\u3044\u3046\u6700\u5f37\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u4e0a\u3067\u3044\u308d\u3093\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\u3067\u304d\u308b\uff01\n\n\n\u5e45\u5e83\u3044\u30e6\u30fc\u30b6\u306b\u30ea\u30fc\u30c1\u51fa\u6765\u305d\u3046\n\uff08BOT\u304c\u30b0\u30eb\u30fc\u30d7\u4f1a\u8a71\u306e\u4e00\u54e1\u306b\u306a\u308c\u308c\u3070\uff09\u62e1\u6563\u6027\u304c\u9ad8\u305d\u3046\n\n\n\u4f7f\u3044\u6163\u308c\u305fLINE\u30a2\u30d7\u30ea/\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u4e0a\u3067\u52d5\u304f\n\n\n\u958b\u767a\u8005\u306fhtml\u3082css\u66f8\u304f\u5fc5\u8981\u306a\u3044\uff01\nxcode\u8d77\u52d5\u3057\u3066swift\u3067\u30b4\u30ea\u30b4\u30ea\u30b3\u30fc\u30c9\u66f8\u304f\u5fc5\u8981\u306a\u3044\uff01\n\n\n\u3044\u308d\u3044\u308d\u4f5c\u308c\u305d\u3046\uff01\n\n\n\u8fd1\u6240\u306e\u304a\u3059\u3059\u3081\u30ec\u30b9\u30c8\u30e9\u30f3\u3092\u30ec\u30b3\u30e1\u30f3\u30c9\u3057\u305f\u308a\nBOT\u3068\u30c1\u30e3\u30c3\u30c8\u3059\u308b\u3060\u3051\u3067\u30cd\u30c3\u30c8\u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u3067\u304d\u305f\u308a\n\u5bb6\u96fb\u64cd\u4f5c\u3057\u305f\u308a\n\n\n\n\u307e\u3042\u8981\u306fSiri\u306e\u30c1\u30e3\u30c3\u30c8\u7248\u3063\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u3067\u4f7f\u3048\u305d\u3046\u3067\u3059\u306d\u3002\n\u306a\u306b\u304b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u5f97\u305f\u308a\u30a2\u30af\u30b7\u30e7\u30f3\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u7684\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3082\u826f\u3055\u305d\u3046\u3002\nSiri\u306f\u96fb\u8eca\u306e\u4e2d\u3068\u304b\u58f0\u3092\u51fa\u305b\u306a\u3044\u72b6\u6cc1\u3067\u306f\u4f7f\u3048\u306a\u3044\u306e\u304c\u7d50\u69cb\u5fae\u5999\u30dd\u30a4\u30f3\u30c8\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u30c1\u30e3\u30c3\u30c8\u30dc\u30c3\u30c8\u306f\u305d\u306e\u70b9\u30af\u30ea\u30a2\u3055\u308c\u307e\u3059\u3057\u3001\u6c4e\u7528\u6027\u9ad8\u305d\u3046\u3067\u3059\u3002\n\n\u4f7f\u3063\u3066\u307f\u3066\uff01\n\n\u753b\u50cf\u3092\u6295\u3052\u308b\u3060\u3051\u3067\u3044\u308d\u3044\u308d\u89e3\u6790\u3057\u3066\u304f\u308c\u307e\u3059\uff01\n\u3053\u3053\u304b\u3089\u53cb\u9054\u767b\u9332\u3067\u304d\u308b\u306f\u305a\u306a\u3093\u3067\u3002\n\u3067\u308250\u4eba\u9650\u5b9a\u306a\u306e\u3067\u304a\u65e9\u3081\u306b\u3002\n\u2192\u3059\u307f\u307e\u305b\u3093\u300150\u4eba\u306b\u9054\u3057\u305f\u3088\u3046\u3067\u3059m(__)m\n\n\n\u554f\u984c\u70b9\nLambda\u4f7f\u3046\u3068IP\u304c\u3053\u308d\u3053\u308d\u5909\u308f\u308b\u306e\u3067LINE\u306eWhitelistIP\u6307\u5b9a\u3067\u4e00\u756a\u5e83\u3044/24\u30b5\u30d6\u30cd\u30c3\u30c8\u3067\u306f\u30ab\u30d0\u30fc\u3057\u304d\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u306a\u3093\u3068\u304b\u3067\u304d\u306a\u3044\u304b\u6a21\u7d22\u3057\u307e\u3059\u3002\n\u2192\u3068\u308a\u3042\u3048\u305a\u30ec\u30f3\u30bf\u30eb\u30b5\u30fc\u30d0\u4e0a\u306b\u30d7\u30ed\u30ad\u30b7\u3092\u7acb\u3066\u3066\u3001\u3053\u3053\u3092\u7d4c\u7531\u3055\u305b\u308b\u3053\u3068\u3067\u56fa\u5b9aIP\u3067API\u3092\u53e9\u304f\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u2026\u304c\u3001\u30b5\u30fc\u30d0\u30ec\u30b9\u306a\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067AWS\u306eVPC\u306a\u308b\u3082\u306e\u3092\u4f7f\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3063\u3066\u307e\u3059\u3002\n# LINE BOT API Trial\n4/7\uff08\u6728\uff09\u306bLINE BOT API Trial\u304c\u63d0\u4f9b\u3055\u308c\u3066\u6570\u65e5\u3067Qiita\u306b\u8a18\u4e8b\u304c\u3042\u304c\u3063\u3066\u3044\u3066\u307f\u3093\u306a\u65e9\u3044\u306a\u30fc\u3068\u3002\n\n- [LINE BOT API Trial\u3067\u3067\u304d\u308b\u5168\u3066\u306e\u4e8b\u3092\u8a66\u3057\u3066\u307f\u305f](http://qiita.com/betchi/items/8e5417dbf20a62f2239d)\n- [LINE BOT API\u3092\u5229\u7528\u3057\u305f\u5730\u7344\u306e\u30df\u30b5\u30efBOT\u306e\u4f5c\u308a\u65b9](http://qiita.com/srea/items/58ba0f7d870a6ee3da2a)\n\n\u300c\u81ea\u5206\u3082\u65e9\u304f\u306a\u3093\u304b\u4f5c\u3089\u306a\u3044\u3068\u300d\u3068\u3044\u3046\u7126\u308a\u3092\u611f\u3058\u3066\u3053\u306e\u571f\u65e5\u3067LINE BOT\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n# \u30a2\u30ab\u30a6\u30f3\u30c8\u767b\u9332\n\u767b\u9332\u306f\u7c21\u5358\u3002\nhttps://developers.line.me\n\u304b\u3089\u767b\u9332\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nBOT\u540d\u3068\u304b\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u753b\u50cf\u3068\u304b\u306f\u5f8c\u304b\u3089\u3067\u3082\u5909\u3048\u3089\u308c\u308b\u306e\u3067\u9069\u5f53\u3067OK\u3002\nCallback\u95a2\u6570\u3082\u9069\u5f53\u306b\u3002\n\n# \u3069\u3093\u306aBOT\u3064\u304f\u308b\u304b\n\u524d[GoogleCloudVision\u306e\u8a18\u4e8b](http://qiita.com/dkawashi/items/2d35a8e46523ed591d12)\u66f8\u3044\u3066\u3001\u305d\u306e\u6642\u4f7f\u3063\u3066\u307f\u3066\u611f\u52d5\u3057\u305f\u3093\u3067\u3059\u3088\u306d\u3002\n\u3051\u3069\u3001\u3082\u3063\u3068\u3053\u306e\u611f\u52d5\u3092\u7686\u306b\u4f1d\u3048\u305f\u3044\uff01\u3068\u601d\u3063\u3066\u305f\u3093\u3067\nLINE\u3068\u3044\u3046\u4f7f\u3044\u6163\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3067GoogleCloudVision\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u3042\u3068\u3001\u304a\u307e\u3051\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3059\u304c\u300c\u6642\u9593\u300d\u3063\u3066\u6295\u3052\u308b\u3068\u73fe\u5728\u6642\u523b\u6559\u3048\u3066\u304f\u308c\u305f\u308a\u3002\n\nLINE BOT\u30b5\u30fc\u30d0\u304b\u3089callback\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u30b5\u30fc\u30d0\u304c\u5fc5\u8981\u3060\u3063\u305f\u308a\u3057\u304b\u3082https\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u306a\u304d\u3083\u3044\u3051\u306a\u304b\u3063\u305f\u308a\u30aa\u30ec\u30aa\u30ec\u8a8d\u8a3c\u3060\u3081\u3068\u304b\u3063\u3066\u5642\u304c\u3042\u3063\u305f\u306e\u3067\n\u3053\u3053\u306f\u3084\u306f\u308a\u30b5\u30fc\u30d0\u30ec\u30b9\u3068\u3044\u3046\u3053\u3068\u3067AWS\u306eLambda\u3092\u3064\u304b\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n# BOT\u3092\u4f5c\u308b\n## \u51e6\u7406\u306e\u6d41\u308c\u3092\u8003\u3048\u308b\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3082\u3089\u3063\u3066\u753b\u50cf\u89e3\u6790\u3057\u3066\u7d50\u679c\u3092\u8fd4\u3059\u90e8\u5206\u306e\u3056\u3063\u304f\u308a\u3068\u3057\u305f\u51e6\u7406\u306e\u6d41\u308c\u3092\u56f3\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n![line.png](https://qiita-image-store.s3.amazonaws.com/0/105205/3ec821ca-5f1c-aa66-c52f-d90aea9ffe0e.png)\n\n1. \u30e6\u30fc\u30b6\u304c\u30b9\u30de\u30db\u306eLINE\u30a2\u30d7\u30ea\u304b\u3089\u30dc\u30c3\u30c8\u5b9b\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\n2. LINE Server\u304c\u4e88\u3081\u6307\u5b9a\u3057\u305fCallback\u3092\u53e9\u304f\uff08Body\u306b\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u60c5\u5831\u3092\u542b\u3080json\uff09\n3. \u753b\u50cfID\u306b\u7d10\u3065\u304f\u753b\u50cf\u30c7\u30fc\u30bf\u3092Line Server\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\n4. LINE Server\u304b\u3089\u753b\u50cf\u306e\u751f\u30c7\u30fc\u30bf\u304c\u8fd4\u3063\u3066\u304f\u308b\n5. \u753b\u50cf\u30c7\u30fc\u30bf\u3092Base64\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066GoogleCloudVision\u306bPOST\u3059\u308b\n6. GoogleCloudVision\u304b\u3089\u89e3\u6790\u7d50\u679c\u304cjson\u3067\u8fd4\u3063\u3066\u304f\u308b\n7. \u89e3\u6790\u7d50\u679c\u304b\u3089\u8fd4\u4fe1\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6574\u5f62\u3059\u308b\n8. Line Server\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u6295\u7a3f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\n9. \u30e6\u30fc\u30b6\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5c4a\u304f\n\n\u3068\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n## Lambda Function\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n\u8a8d\u8a3c\u306e\u305f\u3081\u306e\u9375\u60c5\u5831\u306f\u5225\u30d5\u30a1\u30a4\u30eb\u3067\u6301\u3063\u3068\u304d\u307e\u3059\u3002\n\n\u3053\u308c\u306fLINE API\u7528\uff08line_key.json\uff09\n\n```\n{\"channelID\": \"\", \"channelSecret\": \"\", \"mid\": \"\"}\n```\n\u3053\u308c\u3089\u306e\u60c5\u5831\u306f\u958b\u767a\u8005\u7528\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u308c\u304cGoogle Cloud Vision\u7528\uff08google_key.json\uff09\n\n```\n{\"key\": \"\"}\n```\n\u3053\u308c\u3082Google\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u53d6\u3063\u3066\u304d\u307e\u3057\u3087\u3046\u3002\n\n\nLambda\u95a2\u6570\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n```\nvar request = require('request');\nvar async = require('async');\nvar res;\nvar line_key = require('./line_key.json');\nvar google_key = require('./google_key.json');\n\nexports.handler = function(event, context) {\n    console.log('Received event:', JSON.stringify(event, null, 2));\n    res = event.result[0];\n\n    async.waterfall([\n        function recognize(callback) {\n            if (res.content.contentType === 2) {\n                callback(null, 'image');\n            } else if (res.content.text.match(/^\u6642\u9593/)) {\n                callback(null, 'time');\n            } else {\n                callback(null, 'other');\n            }\n        },\n        function run(data, callback) {\n            if (data === 'image') {\n                console.log('run image');\n                async.waterfall([\n                    function getImage(callback2) {\n                        console.log('get image');\n                        var id = res.content.id;\n\n                        var opts = {\n                            url: 'https://trialbot-api.line.me/v1/bot/message/' + id + '/content',\n                            headers: {\n                                \"Content-type\": \"application/json; charset=UTF-8\",\n                                \"X-Line-ChannelID\": line_key.channelID,\n                                \"X-Line-ChannelSecret\": line_key.channelSecret,\n                                \"X-Line-Trusted-User-With-ACL\": line_key.mid\n                            },\n                            encoding: null\n                        }\n                        request(opts, function(error, response, body) {\n                            if (!error && response.statusCode == 200) {\n                                var img = body.toString('base64')\n                                callback2(null, img);\n                            } else {\n                                callback2(error);\n                            }\n                        });\n                    },\n                    function sendCloudAPI(img, callback2) {\n                       console.log('send cloud api');\n                        var data = {\n                            \"requests\":[\n                                {\n                                    \"image\":{\"content\": img},\n                                    \"features\":[\n                                        {\"type\": \"FACE_DETECTION\", \"maxResults\": 5},\n                                        {\"type\": \"LABEL_DETECTION\", \"maxResults\": 5},\n                                        {\"type\": \"TEXT_DETECTION\", \"maxResults\": 5},\n                                        {\"type\": \"LANDMARK_DETECTION\", \"maxResults\": 5},\n                                        {\"type\": \"LOGO_DETECTION\", \"maxResults\": 5},\n                                        {\"type\": \"SAFE_SEARCH_DETECTION\", \"maxResults\": 5}\n                                    ]\n                                }\n                            ]\n                        };\n                        var opts = {\n                            url: 'https://vision.googleapis.com/v1/images:annotate?key=' + google_key.key,\n                            headers: {'Content-Type': 'application/json'},\n                            body: JSON.stringify(data)\n                        }\n                        var text = '';\n                        request.post(opts, function (error, response, body) {\n                            console.log(body);\n                            body = JSON.parse(body);\n                            var labelAnnotations = body.responses[0].labelAnnotations;\n                            var faceAnnotations = body.responses[0].faceAnnotations;\n                            var textAnnotations = body.responses[0].textAnnotations;\n                            var landmarkAnnotations = body.responses[0].landmarkAnnotations;\n                            var logoAnnotations = body.responses[0].logoAnnotations;\n                            var safeSearchAnnotation = body.responses[0].safeSearchAnnotation;\n                            if (labelAnnotations !== undefined) {\n                                for (var i = 0; i < labelAnnotations.length; i++) {\n                                    text += '\"' + labelAnnotations[i].description + '\"' + \"\u3068\u304b\\n\";\n                                }\n                                text += \"\u307e\u3041\u305d\u306e\u8fba\u308a\u3058\u3083\u306a\u3044\u304b\u306a\\n\\n\";\n                            }\n                            if (faceAnnotations !== undefined) {\n                                text += \"\u4eba\u9593\u304c\" + faceAnnotations.length + \"\u4eba\u3044\u308b\u307f\u305f\u3044\u3060\u306d\\n\\n\";\n                            }\n                            if (textAnnotations !== undefined) {\n                                text += \"\u300c\" + textAnnotations[0].description.replace(/\\n/g, ' ') + \"\u300d\u3068\u304b\u3063\u3066\u66f8\u3044\u3066\u3042\u308b\u306a\u3041\\n\\n\";\n                            }\n                            if (landmarkAnnotations !== undefined) {\n                                text += \"\u3042\uff01\u3053\u308c\u5834\u6240\u306f\" + landmarkAnnotations[0].description + \"\u3060\u3088\u306d\uff01\\n\\n\";\n                            }\n                            if (logoAnnotations !== undefined) {\n                                text += \"\u3063\u3066\u304b\u3053\u308c\u300c\" + logoAnnotations[0].description + \"\u300d\u3058\u3083\u306d\uff1fwww\\n\\n\";\n                            }\n                            if (safeSearchAnnotation !== undefined && (safeSearchAnnotation.adult === 'LIKELY' || safeSearchAnnotation.adult === 'VERY_LIKELY')) {\n                                text += \"\u3042\u3001\u3044\u3084\u3001\u3001\u3001\u3066\u304b\u3053\u308c\u2026\u3061\u3087\u3063\u3068\u30a8\u30c3\u30c1///\\n\\n\";\n                            }\n                            text = text.replace(/\\n+$/g,'');\n                            callback2(null, text);\n                        });\n                    }\n                ], function (err, result) {\n                    callback(null, result);\n                });\n            } else if (data === 'time') {\n                console.log('run time');\n                var date = new Date();\n                var year = date.getFullYear();\n                var month = date.getMonth()+1;\n                var week = date.getDay();\n                var day = date.getDate();\n                var hour = date.getHours();\n                var minute = date.getMinutes();\n                var second = date.getSeconds();\n                var text = year+\"\u5e74\"+month+\"\u6708\"+day+\"\u65e5\"+hour+\"\u6642\"+minute+\"\u5206\"+second+\"\u79d2\";\n                callback(null, text);\n            } else {\n                console.log('run else');\n                var text = '\u3044\u3084\u3001\u3061\u3087\u3063\u3068\u306a\u306b\u8a00\u3063\u3066\u308b\u304b\u5206\u304b\u3093\u306a\u3044\u3063\u3059\uff57';\n                callback(null, text);\n            }\n        },\n        function postToLine(text, callback) {\n            console.log('run post : ' + text)\n            var data = {\n                to: [res.content.from.toString()],\n                toChannel: 1383378250,\n                eventType: \"138311608800106203\",\n                content: {\n                    \"contentType\":1,\n                    \"toType\":1,\n                    \"text\":text\n                }\n            };\n            var opts = {\n                url: 'https://trialbot-api.line.me/v1/events',\n                headers: {\n                    \"Content-type\": \"application/json; charset=UTF-8\",\n                    \"X-Line-ChannelID\": line_key.channelID,\n                    \"X-Line-ChannelSecret\": line_key.channelSecret,\n                    \"X-Line-Trusted-User-With-ACL\": line_key.mid\n                },\n                body: JSON.stringify(data)\n            }\n            request.post(opts, function (error, response, body) {\n                if (!error && response.statusCode == 200) {\n                    callback(null);\n                } else {\n                    console.log(JSON.stringify(body));\n                    callback(error);\n                }\n            });\n        }\n    ], function (err, result) {\n    });\n};\n```\n\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3068\u304b\u8d85\u9069\u5f53\u306a\u306e\u306f\u3054\u3081\u3093\u306a\u3055\u3044\u3067\u3059\u3002\u3002\u3002\n\n\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u304a\u3044\u3066\u304a\u304d\u307e\u3059\u306d\u3002\nhttps://github.com/donkeykey/CloudVision_LineBot\n\n\u3067\u304d\u305f\u3089API GATEWAY\u8a2d\u5b9a\u3057\u3066POST\u3067Lambda\u95a2\u6570\u304c\u52d5\u304f\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nAPI\u306eURL\u304c\u308f\u304b\u3063\u305f\u3089\u305d\u306eURL\u3092LINE\u306e\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u304b\u3089Callback URL\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u72b6\u614b\u3067\u6295\u7a3f\u3057\u3066\u3082Whitelist IP\u3092\u767b\u9332\u3057\u306a\u3044\u3068BOT\u304b\u3089\u306e\u6295\u7a3f\u304c\u3067\u304d\u307e\u305b\u3093\u3002\nCloudWatch\u306e\u30a8\u30e9\u30fc\u30ed\u30b0\u306bIP\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u30b5\u30d6\u30cd\u30c3\u30c8\u3092\u5e83\u3081\u306b\u53d6\u3063\u3066\u767b\u9332\u3057\u307e\u3057\u305f\u3002\n\n# \u611f\u60f3\n- \u3060\u3044\u305f\u3044\u306e\u4eba\u304c\u9023\u7d61\u624b\u6bb5\u3068\u3057\u3066\u4f7f\u3063\u3066\u3044\u308bLINE\u3068\u3044\u3046\u6700\u5f37\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u4e0a\u3067\u3044\u308d\u3093\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\u3067\u304d\u308b\uff01\n  - \u5e45\u5e83\u3044\u30e6\u30fc\u30b6\u306b\u30ea\u30fc\u30c1\u51fa\u6765\u305d\u3046\n  - \uff08BOT\u304c\u30b0\u30eb\u30fc\u30d7\u4f1a\u8a71\u306e\u4e00\u54e1\u306b\u306a\u308c\u308c\u3070\uff09\u62e1\u6563\u6027\u304c\u9ad8\u305d\u3046\n- \u4f7f\u3044\u6163\u308c\u305fLINE\u30a2\u30d7\u30ea/\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u4e0a\u3067\u52d5\u304f\n    - \u958b\u767a\u8005\u306fhtml\u3082css\u66f8\u304f\u5fc5\u8981\u306a\u3044\uff01\n    - xcode\u8d77\u52d5\u3057\u3066swift\u3067\u30b4\u30ea\u30b4\u30ea\u30b3\u30fc\u30c9\u66f8\u304f\u5fc5\u8981\u306a\u3044\uff01\n- \u3044\u308d\u3044\u308d\u4f5c\u308c\u305d\u3046\uff01\n    - \u8fd1\u6240\u306e\u304a\u3059\u3059\u3081\u30ec\u30b9\u30c8\u30e9\u30f3\u3092\u30ec\u30b3\u30e1\u30f3\u30c9\u3057\u305f\u308a\n    - BOT\u3068\u30c1\u30e3\u30c3\u30c8\u3059\u308b\u3060\u3051\u3067\u30cd\u30c3\u30c8\u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u3067\u304d\u305f\u308a\n    - \u5bb6\u96fb\u64cd\u4f5c\u3057\u305f\u308a\n\n\u307e\u3042\u8981\u306fSiri\u306e\u30c1\u30e3\u30c3\u30c8\u7248\u3063\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u3067\u4f7f\u3048\u305d\u3046\u3067\u3059\u306d\u3002\n\u306a\u306b\u304b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u5f97\u305f\u308a\u30a2\u30af\u30b7\u30e7\u30f3\u3059\u308b\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u7684\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3082\u826f\u3055\u305d\u3046\u3002\nSiri\u306f\u96fb\u8eca\u306e\u4e2d\u3068\u304b\u58f0\u3092\u51fa\u305b\u306a\u3044\u72b6\u6cc1\u3067\u306f\u4f7f\u3048\u306a\u3044\u306e\u304c\u7d50\u69cb\u5fae\u5999\u30dd\u30a4\u30f3\u30c8\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u30c1\u30e3\u30c3\u30c8\u30dc\u30c3\u30c8\u306f\u305d\u306e\u70b9\u30af\u30ea\u30a2\u3055\u308c\u307e\u3059\u3057\u3001\u6c4e\u7528\u6027\u9ad8\u305d\u3046\u3067\u3059\u3002\n\n\n# \u4f7f\u3063\u3066\u307f\u3066\uff01\n\n![IMG_8084.png](https://qiita-image-store.s3.amazonaws.com/0/105205/d3b5555f-2097-b156-0cf3-f5a49778731f.png)\n\u753b\u50cf\u3092\u6295\u3052\u308b\u3060\u3051\u3067\u3044\u308d\u3044\u308d\u89e3\u6790\u3057\u3066\u304f\u308c\u307e\u3059\uff01\n\n\u3053\u3053\u304b\u3089\u53cb\u9054\u767b\u9332\u3067\u304d\u308b\u306f\u305a\u306a\u3093\u3067\u3002\n~~\u3067\u308250\u4eba\u9650\u5b9a\u306a\u306e\u3067\u304a\u65e9\u3081\u306b\u3002~~\n\u2192\u3059\u307f\u307e\u305b\u3093\u300150\u4eba\u306b\u9054\u3057\u305f\u3088\u3046\u3067\u3059m(__)m\n![ztf0043d.png](https://qiita-image-store.s3.amazonaws.com/0/105205/e3061801-693f-e06c-16a8-f7cc3e174e43.png)\n\n# \u554f\u984c\u70b9\nLambda\u4f7f\u3046\u3068IP\u304c\u3053\u308d\u3053\u308d\u5909\u308f\u308b\u306e\u3067LINE\u306eWhitelistIP\u6307\u5b9a\u3067\u4e00\u756a\u5e83\u3044/24\u30b5\u30d6\u30cd\u30c3\u30c8\u3067\u306f\u30ab\u30d0\u30fc\u3057\u304d\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u306a\u3093\u3068\u304b\u3067\u304d\u306a\u3044\u304b\u6a21\u7d22\u3057\u307e\u3059\u3002\n\u2192\u3068\u308a\u3042\u3048\u305a\u30ec\u30f3\u30bf\u30eb\u30b5\u30fc\u30d0\u4e0a\u306b\u30d7\u30ed\u30ad\u30b7\u3092\u7acb\u3066\u3066\u3001\u3053\u3053\u3092\u7d4c\u7531\u3055\u305b\u308b\u3053\u3068\u3067\u56fa\u5b9aIP\u3067API\u3092\u53e9\u304f\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u2026\u304c\u3001\u30b5\u30fc\u30d0\u30ec\u30b9\u306a\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067AWS\u306eVPC\u306a\u308b\u3082\u306e\u3092\u4f7f\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3063\u3066\u307e\u3059\u3002\n", "tags": ["linebot", "CloudVisionAPI", "lambda", "Line", "AWS"]}