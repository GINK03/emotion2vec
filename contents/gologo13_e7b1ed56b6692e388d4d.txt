{"tags": ["iOS", "Swift", "Alamofire"], "context": " More than 1 year has passed since last update.Alamofire/Alamofire\u3067\u306e multipart/form-data \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u3084\u308a\u65b9\u3067\u3059\u3002\n\u5143\u3005\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u30d0\u30fc\u30b8\u30e7\u30f31.3.0\u304b\u3089\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u3053\u308c\u304b\u3089\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308bAPI\u306f\n\ntype: \"image\" or \"video\" \u306e\u6587\u5b57\u5217\u5024\u3092\u53d6\u308a\u3046\u308b\ndata: \u753b\u50cf or \u52d5\u753b\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\n\n\u306e\uff12\u3064\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d7\u3051\u4ed8\u3051\u308b\u3068\u3057\u307e\u3059\u3002\nAlamofire.upload(.POST,\n        URLString: \"https://api.golog13.com/v1/upload\",\n        headers: nil,\n        multipartFormData: { multipartFormData in\n            // \u6587\u5b57\u5217\u30c7\u30fc\u30bf\u306fUTF8\u30a8\u30f3\u30b3\u30fc\u30c9\u3067NSData\u578b\u306b\n            multipartFormData.appendBodyPart(data: \"image\".dataUsingEncoding(NSUTF8StringEncoding)!, name: \"type\")\n            // \u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\n            // \u30b5\u30fc\u30d0\u306b\u3088\u3063\u3066\u306f\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u9069\u5207\u306aMIME\u30bf\u30a4\u30d7\u3092\u6307\u5b9a\u3057\u306a\u3044\u3068\u3061\u3083\u3093\u3068\u51e6\u7406\u3057\u3066\u304f\u308c\u306a\u3044\u304b\u3082\n            multipartFormData.appendBodyPart(data: data, name: \"data\", fileName: \"test.png\", mimeType: \"image/png\")\n        },\n        // \u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u751f\u6210\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u305f\u3089\u547c\u3070\u308c\u308b\n        encodingCompletion: { encodingResult in\n            switch encodingResult {\n            // \u30a8\u30f3\u30b3\u30fc\u30c9\u6210\u529f\u6642\n            case .Success(let upload, _, _):\n                // \u5b9f\u969b\u306bAPI\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\n                upload.response { request, response, data, error in\n                    if let error = error {\n                        println(\"error: \\(error)\")\n                    }\n\n                    // \u3053\u3053\u304b\u3089\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u3063\u3066\u51e6\u7406\u3092\u3059\u308b..\n                }\n            // \u30a8\u30f3\u30b3\u30fc\u30c9\u5931\u6557\u6642\n            case .Failure(let encodingError):\n                println(encodingError)\n            }\n        }\n)\n\n[Alamofire/Alamofire](https://github.com/Alamofire/Alamofire)\u3067\u306e multipart/form-data \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u3084\u308a\u65b9\u3067\u3059\u3002\n\u5143\u3005\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001[\u30d0\u30fc\u30b8\u30e7\u30f31.3.0](https://github.com/Alamofire/Alamofire/releases/tag/1.3.0)\u304b\u3089\u5229\u7528\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n\u3053\u308c\u304b\u3089\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308bAPI\u306f\n\n- type: \"image\" or \"video\" \u306e\u6587\u5b57\u5217\u5024\u3092\u53d6\u308a\u3046\u308b\n- data: \u753b\u50cf or \u52d5\u753b\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\n\n\u306e\uff12\u3064\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d7\u3051\u4ed8\u3051\u308b\u3068\u3057\u307e\u3059\u3002\n\n```swift\nAlamofire.upload(.POST,\n        URLString: \"https://api.golog13.com/v1/upload\",\n        headers: nil,\n        multipartFormData: { multipartFormData in\n            // \u6587\u5b57\u5217\u30c7\u30fc\u30bf\u306fUTF8\u30a8\u30f3\u30b3\u30fc\u30c9\u3067NSData\u578b\u306b\n            multipartFormData.appendBodyPart(data: \"image\".dataUsingEncoding(NSUTF8StringEncoding)!, name: \"type\")\n            // \u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\n            // \u30b5\u30fc\u30d0\u306b\u3088\u3063\u3066\u306f\u30d5\u30a1\u30a4\u30eb\u540d\u3084\u9069\u5207\u306aMIME\u30bf\u30a4\u30d7\u3092\u6307\u5b9a\u3057\u306a\u3044\u3068\u3061\u3083\u3093\u3068\u51e6\u7406\u3057\u3066\u304f\u308c\u306a\u3044\u304b\u3082\n            multipartFormData.appendBodyPart(data: data, name: \"data\", fileName: \"test.png\", mimeType: \"image/png\")\n        },\n        // \u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u751f\u6210\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u305f\u3089\u547c\u3070\u308c\u308b\n        encodingCompletion: { encodingResult in\n            switch encodingResult {\n            // \u30a8\u30f3\u30b3\u30fc\u30c9\u6210\u529f\u6642\n            case .Success(let upload, _, _):\n                // \u5b9f\u969b\u306bAPI\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\n                upload.response { request, response, data, error in\n                    if let error = error {\n                        println(\"error: \\(error)\")\n                    }\n                    \n                    // \u3053\u3053\u304b\u3089\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u3063\u3066\u51e6\u7406\u3092\u3059\u308b..\n                }\n            // \u30a8\u30f3\u30b3\u30fc\u30c9\u5931\u6557\u6642\n            case .Failure(let encodingError):\n                println(encodingError)\n            }\n        }\n)\n```\n"}