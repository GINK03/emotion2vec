{"context": " More than 1 year has passed since last update.SampleTasklet\u304b\u3089\u3001SampleReferService#refer\u3092\u547c\u3093\u3067\u3001\u5b9f\u884c\u7d50\u679c\u3092\u3082\u3068\u306bSampleProcessService.execute\u3092\u547c\u3093\u3067\u3044\u308b\u3068\u3057\u307e\u3059\u3002\npublic class SampleTaskletTest {\n\n\n    // \u30e2\u30c3\u30af\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    @InjectMocks\n    private SampleTasklet sampleTasklet = new SampleTasklet();\n\n    // \u30e2\u30c3\u30af\u5316\u3059\u308b\u30af\u30e9\u30b9\n    @Mock\n    private SampleReferService sampleReferService;\n\n    // \u30e2\u30c3\u30af\u5316\u3059\u308b\u30af\u30e9\u30b9\n    @Mock\n    private SampleProcessService sampleProcessService;\n\n\n    /**\n     * \u4ee5\u4e0b\u3001Tasklet\u3092\u52d5\u304b\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u7fa4\n     */\n\n    private StepExecution stepExecution;\n\n    private StepContribution contrib;\n\n    private ChunkContext context;\n\n\n    @Before\n    public void setup() {\n\n        // MockitoAnnotation\u306e\u6709\u52b9\u5316\n        MockitoAnnotations.initMocks(this);\n\n        // Tasklet\u3092\u5358\u72ec\u3067\u52d5\u304b\u3059\u305f\u3081\u306e\u3001\u30c0\u30df\u30fc\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u8a2d\u5b9a\n        stepExecution = MetaDataInstanceFactory.createStepExecution(new JobParameters(jobParametorSet(\"hoge\")));\n        contrib = new StepContribution(stepExecution);\n        context = new ChunkContext(new StepContext(stepExecution));\n\n    }\n\n\n    @Test\n    public void _test() throws Exception {\n\n        // SampleReferService\u306e\u632f\u308b\u821e\u3044\u3092\u5b9a\u7fa9\n        when(sampleReferService.refer(any())).thenReturn(\n                new ArrayList<SampleObj>() {{\n                    add(new SampleObj(\"1\"));\n                    add(new SampleObj(\"2\"));\n                    add(new SampleObj(\"3\"));\n                    add(new SampleObj(\"4\"));\n                }}\n        );\n\n        // Tasklet\u3092\u5b9f\u884c\n        RepeatStatus status = sampleTasklet.execute(contrib, context);\n\n        // sampleProcessService.execute\u304c\u5b9f\u884c\u3055\u308c\u305f\u4e8b\u3092\u8a55\u4fa1\n        verify(sampleProcessService, times(1)).execute(new SampleObj(\"1\"));\n        verify(sampleProcessService, times(1)).execute(new SampleObj(\"2\"));\n        verify(sampleProcessService, times(1)).execute(new SampleObj(\"3\"));\n        verify(sampleProcessService, times(1)).execute(new SampleObj(\"4\"));\n\n        // sampleProcessService.execute\u304c\uff14\u56de\u5b9f\u884c\u3055\u308c\u305f\u4e8b\u3092\u8a55\u4fa1\n        verify(sampleProcessService, times(4)).execute(any(SampleObj.class));\n\n\n        // Tasklet\u304c\u6b63\u5e38\u7d42\u4e86\u3057\u305f\u4e8b\u3092\u8a55\u4fa1\n        assertThat(RepeatStatus.FINISHED, is(status));\n    }\n\n    @Test(expected = RuntimeException.class)\n    public void _exception() throws Exception {\n\n        // sampleReferService\u306e\u632f\u308b\u821e\u3044\u3092\u5b9a\u7fa9\n        when(sampleReferService.refer(any())).thenThrow(new RuntimeException());\n\n        // Tasklet\u3092\u5b9f\u884c\n        RepeatStatus status = sampleTasklet.execute(contrib, context);\n\n        // sampleProcessService.execute\u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u3053\u3068\u3092\u8a55\u4fa1\n        verify(sampleProcessService, never()).execute(any(SampleObj.class));\n    }\n}\n\nSampleTasklet\u304b\u3089\u3001SampleReferService#refer\u3092\u547c\u3093\u3067\u3001\u5b9f\u884c\u7d50\u679c\u3092\u3082\u3068\u306bSampleProcessService.execute\u3092\u547c\u3093\u3067\u3044\u308b\u3068\u3057\u307e\u3059\u3002\n\n```\npublic class SampleTaskletTest {\n\n\n    // \u30e2\u30c3\u30af\u3092\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n    @InjectMocks\n    private SampleTasklet sampleTasklet = new SampleTasklet();\n\n    // \u30e2\u30c3\u30af\u5316\u3059\u308b\u30af\u30e9\u30b9\n    @Mock\n    private SampleReferService sampleReferService;\n\n    // \u30e2\u30c3\u30af\u5316\u3059\u308b\u30af\u30e9\u30b9\n    @Mock\n    private SampleProcessService sampleProcessService;\n\n\n    /**\n     * \u4ee5\u4e0b\u3001Tasklet\u3092\u52d5\u304b\u3059\u305f\u3081\u306b\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u7fa4\n     */\n\n    private StepExecution stepExecution;\n\n    private StepContribution contrib;\n\n    private ChunkContext context;\n\n\n    @Before\n    public void setup() {\n\n        // MockitoAnnotation\u306e\u6709\u52b9\u5316\n        MockitoAnnotations.initMocks(this);\n\n        // Tasklet\u3092\u5358\u72ec\u3067\u52d5\u304b\u3059\u305f\u3081\u306e\u3001\u30c0\u30df\u30fc\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u8a2d\u5b9a\n        stepExecution = MetaDataInstanceFactory.createStepExecution(new JobParameters(jobParametorSet(\"hoge\")));\n        contrib = new StepContribution(stepExecution);\n        context = new ChunkContext(new StepContext(stepExecution));\n\n    }\n\n\n    @Test\n    public void _test() throws Exception {\n\n        // SampleReferService\u306e\u632f\u308b\u821e\u3044\u3092\u5b9a\u7fa9\n        when(sampleReferService.refer(any())).thenReturn(\n                new ArrayList<SampleObj>() {{\n                    add(new SampleObj(\"1\"));\n                    add(new SampleObj(\"2\"));\n                    add(new SampleObj(\"3\"));\n                    add(new SampleObj(\"4\"));\n                }}\n        );\n\n        // Tasklet\u3092\u5b9f\u884c\n        RepeatStatus status = sampleTasklet.execute(contrib, context);\n\n        // sampleProcessService.execute\u304c\u5b9f\u884c\u3055\u308c\u305f\u4e8b\u3092\u8a55\u4fa1\n        verify(sampleProcessService, times(1)).execute(new SampleObj(\"1\"));\n        verify(sampleProcessService, times(1)).execute(new SampleObj(\"2\"));\n        verify(sampleProcessService, times(1)).execute(new SampleObj(\"3\"));\n        verify(sampleProcessService, times(1)).execute(new SampleObj(\"4\"));\n\n        // sampleProcessService.execute\u304c\uff14\u56de\u5b9f\u884c\u3055\u308c\u305f\u4e8b\u3092\u8a55\u4fa1\n        verify(sampleProcessService, times(4)).execute(any(SampleObj.class));\n\n\n        // Tasklet\u304c\u6b63\u5e38\u7d42\u4e86\u3057\u305f\u4e8b\u3092\u8a55\u4fa1\n        assertThat(RepeatStatus.FINISHED, is(status));\n    }\n\n    @Test(expected = RuntimeException.class)\n    public void _exception() throws Exception {\n\n        // sampleReferService\u306e\u632f\u308b\u821e\u3044\u3092\u5b9a\u7fa9\n        when(sampleReferService.refer(any())).thenThrow(new RuntimeException());\n\n        // Tasklet\u3092\u5b9f\u884c\n        RepeatStatus status = sampleTasklet.execute(contrib, context);\n\n        // sampleProcessService.execute\u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u3053\u3068\u3092\u8a55\u4fa1\n        verify(sampleProcessService, never()).execute(any(SampleObj.class));\n    }\n}\n```\n", "tags": ["Mockito", "spring-batch"]}