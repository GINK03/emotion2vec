{"tags": ["Go", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406"], "context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u7814\u7a76\u5ba4\u3067\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af2015 \u3092\u89e3\u304f\u3053\u3068\u306b\u306a\u308a\u3001\u53bb\u5e74\u306fPython\u3067\u89e3\u3044\u305f\u306e\u3067\u9055\u3046\u8a00\u8a9e\u3067\u3084\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u6d41\u884c\u3063\u3066\u308b\u3057\u3001\u300cGo\u3084\u3063\u3066\u307e\u3059\u300d\u3068\u8a00\u3044\u305f\u3044\u304c\u305f\u3081\u306b\u3001\u521d\u3081\u3066\u306eGo\u8a00\u8a9e\u3067\u3084\u308a\u307e\u3059\u3002\n\u76f8\u8ac7\u76f8\u624b\u304c\u3044\u306a\u3044\uff08\u307f\u3093\u306aJava\u3068\u304bC++\u3067\u89e3\u3044\u3066\u308b\uff09\u306e\u3067\u3001\u3053\u3053\u3067\u53b3\u3057\u3044\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\u4ee5\u4e0bGitHub\u306e\u30da\u30fc\u30b8\u306b\u3067\u304d\u6b21\u7b2c\u3042\u3052\u3066\u3044\u304d\u307e\u3059\u3002\nhttps://github.com/yukitomo/NLP100knock2015_Go\n\u3068\u308a\u3042\u3048\u305a\u300110\u672c\u3067\u3059\n\n\u7b2c1\u7ae0: \u6e96\u5099\u904b\u52d5\n\n00. \u6587\u5b57\u5217\u306e\u9006\u9806\n\u6587\u5b57\u5217\"stressed\"\u306e\u6587\u5b57\u3092\u9006\u306b\uff08\u672b\u5c3e\u304b\u3089\u5148\u982d\u306b\u5411\u304b\u3063\u3066\uff09\u4e26\u3079\u305f\u6587\u5b57\u5217\u3092\u5f97\u3088\uff0e\n\ntest00.go\npackage main\n\nimport \"fmt\" \n\nfunc Reverse(s string) string {\n    runes := []rune(s)  //rune\u914d\u5217\u306b\u5909\u63db\n    for i, j := 0, len(runes)-1; i<j; i, j = i+1, j-1 {\n        runes[i], runes[j] = runes[j], runes[i]\n    }\n    return string(runes)\n}\n\nfunc main() {\n\n    s := \"stressed\"\n\n    fmt.Printf(\"%v\\n\",s)\n    fmt.Println(Reverse(s))\n\n}\n\n\nRecverse(s)\uff1a\u6587\u5b57\u5217\u3092\u5f15\u6570\u3068\u3057\u3066rune\u914d\u5217\u3068\u3057\u3066\u3001\u9806\u756a\u3092\u9006\u9806\u3068\u3057\u3066\u6587\u5b57\u5217\u3092\u51fa\u529b\u3059\u308b\u3002\n\u81ea\u5206\u306e\u8abf\u3079\u305f\u9650\u308a\u3060\u3068Go\u3067\u6587\u5b57\u5217\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u64cd\u4f5c\u3057\u3088\u3046\u3068\u3059\u308b\u306b\u306frune\u914d\u5217\u306b\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\uff1f\u307d\u3044\u3067\u3059\u3002\npython\u306a\u3089 s[::-1] \u3067\u4e00\u767a\u3060\u3088\u306a\u3068\u601d\u3044\u3064\u3064\u7d50\u69cb\u9577\u3044\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f...\n\n\u53c2\u8003URL\nhttp://d.hatena.ne.jp/yuheiomori0718/20131008/1381244919\n\n01. \u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\n\u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\u3068\u3044\u3046\u6587\u5b57\u5217\u306e1,3,5,7\u6587\u5b57\u76ee\u3092\u53d6\u308a\u51fa\u3057\u3066\u9023\u7d50\u3057\u305f\u6587\u5b57\u5217\u3092\u5f97\u3088\uff0e\n\ntest01.go\npackage main\n\nimport \"fmt\" \n\nfunc main() {\n\n    s := \"\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\"\n\n    fmt.Printf(\"%v\\n\", s)\n    runes := []rune(s)\n    fmt.Println(string(runes[1]) + string(runes[3]) + string(runes[5]) + string(runes[7]))\n\n}\n\n\n\n\u53c2\u8003URL\nhttp://qiita.com/ono_matope/items/d5e70d8a9ff2b54d5c37\n\n02. \u300c\u30d1\u30c8\u30ab\u30fc\u300d\uff0b\u300c\u30bf\u30af\u30b7\u30fc\u300d\uff1d\u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\n\u300c\u30d1\u30c8\u30ab\u30fc\u300d\uff0b\u300c\u30bf\u30af\u30b7\u30fc\u300d\u306e\u6587\u5b57\u3092\u5148\u982d\u304b\u3089\u4ea4\u4e92\u306b\u9023\u7d50\u3057\u3066\u6587\u5b57\u5217\u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\u3092\u5f97\u3088\n\ntest02.go\npackage main\n\nimport \"fmt\" \n\nfunc Altjoin(s1, s2 string) string {\n    runes1 := []rune(s1)  //rune\u914d\u5217\u306b\u5909\u63db\n    runes2 := []rune(s2)\n    var s3 string\n    for i := 0; i < len(runes1); i = i+1 {\n        s3 += string(runes1[i]) + string(runes2[i])\n    }\n    return s3\n}\n\nfunc main() {\n\n    s1 := \"\u30d1\u30c8\u30ab\u30fc\"\n    s2 := \"\u30bf\u30af\u30b7\u30fc\"\n\n    fmt.Printf(\"%v\\n\",s1)\n    fmt.Printf(\"%v\\n\",s2)\n    fmt.Println(Altjoin(s1,s2))\n}\n\n\nAltjoin(s1, s2)\uff1a\uff12\u3064\u306e\u6587\u5b57\u5217\u3092\u5f15\u6570\u3068\u3057\u3066\u53d6\u308a\u4ea4\u4e92\u306b\u9023\u7d50\u3057\u3066\u51fa\u529b\n\n03. \u5186\u5468\u7387\n\"Now I need a drink, alcoholic of course, after the heavy lectures involving quantum mechanics.\"\n\u3068\u3044\u3046\u6587\u3092\u5358\u8a9e\u306b\u5206\u89e3\u3057\uff0c\u5404\u5358\u8a9e\u306e\uff08\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\uff09\u6587\u5b57\u6570\u3092\u5148\u982d\u304b\u3089\u51fa\u73fe\u9806\u306b\u4e26\u3079\u305f\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\ntest03.go\npackage main\n\nimport (\n    \"fmt\"     // \u5165\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\n    \"strings\" //string\u51e6\u7406\u306e\u30e1\u30bd\u30c3\u30c9\n)\n\nfunc main() {\n    s := \"Now I need a drink, alcoholic of course, after the heavy lectures involving quantum mechanics.\"\n    s = strings.Trim(s, \".\") // \".\"\u306e\u9664\u53bb\u3001Trim\u306f\u6587\u5b57\u5217\u306e\u524d\u5f8c\u3057\u304b\u9664\u53bb\u3067\u304d\u306a\u3044\n    s = strings.Replace(s, \",\", \"\", -1) //\",\"\u306e\u9664\u53bb\n\n    words := strings.Split(s, \" \") //slices\u306b\u5358\u8a9e\u304c\u683c\u7d0d\n\n    for i := 0; i < len(words); i++ {\n        fmt.Printf(\"%d\\n\", len(words[i])) //\u5404\u5358\u8a9e\u306e\u6587\u5b57\u6570\u3092\u51fa\u529b\n    }\n\n}\n\n\nfunc Replace(s, old, new string, n int) string\uff1a\u6587\u5b57\u5217s\u306e\u30b3\u30d4\u30fc\u306b\u5bfe\u3057\u3001\u6700\u521d\u306en\u500b\u3001old\u306e\u90e8\u5206\u3092new\u306b\u7f6e\u63db(\u91cd\u8907\u306f\u306a\u3057)\u3057\u305f\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002n < 0\u306e\u3068\u304d\u3001\u7f6e\u63db\u6570\u306f\u7121\u5236\u9650\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u53c2\u8003URL\nhttps://github.com/astaxie/build-web-application-with-golang/blob/master/ja/07.6.md\n\n04. \u5143\u7d20\u8a18\u53f7\n\"Hi He Lied Because Boron Could Not Oxidize Fluorine. New Nations Might Also Sign Peace Security Clause. Arthur King Can.\" \u3068\u3044\u3046\u6587\u3092\u5358\u8a9e\u306b\u5206\u89e3\u3057\uff0c1, 5, 6, 7, 8, 9, 15, 16, 19\u756a\u76ee\u306e\u5358\u8a9e\u306f\u5148\u982d\u306e1\u6587\u5b57\uff0c\u305d\u308c\u4ee5\u5916\u306e\u5358\u8a9e\u306f\u5148\u982d\u306b2\u6587\u5b57\u3092\u53d6\u308a\u51fa\u3057\uff0c\u53d6\u308a\u51fa\u3057\u305f\u6587\u5b57\u5217\u304b\u3089\u5358\u8a9e\u306e\u4f4d\u7f6e\uff08\u5148\u982d\u304b\u3089\u4f55\u756a\u76ee\u306e\u5358\u8a9e\u304b\uff09\u3078\u306e\u9023\u60f3\u914d\u5217\uff08\u8f9e\u66f8\u578b\u3082\u3057\u304f\u306f\u30de\u30c3\u30d7\u578b\uff09\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\ntest04.go\npackage main\n\nimport (\n    \"fmt\"     // \u5165\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\n    \"strings\" //string\u51e6\u7406\u306e\u30e1\u30bd\u30c3\u30c9\n)\n\nfunc main() {\n    s := \"Hi He Lied Because Boron Could Not Oxidize Fluorine. New Nations Might Also Sign Peace Security Clause. Arthur King Can.\"\n    s = strings.Trim(s, \".\") // \".\"\u306e\u9664\u53bb\n\n    s = strings.Replace(s, \",\", \"\", -1)\n    words := strings.Split(s, \" \") //slices\u306b\u5358\u8a9e\u304c\u683c\u7d0d\n\n    words_index := make(map[string]int)\n\n    for i := 0; i < len(words); i++ {\n        runes := []rune(words[i])\n        switch i {\n        case 1, 5, 6, 7, 8, 9, 15, 16, 19: //1, 5, 6, 7, 8, 9, 15, 16, 19\u756a\u76ee\u306e\u5358\u8a9e\u306f\u5148\u982d\u306e1\u6587\u5b57\n            words_index[string(runes[0])] = i\n        default: //\u4e0a\u8a18\u4ee5\u5916\u306e\u5358\u8a9e\u306f\u5148\u982d\u306e2\u6587\u5b57\n            words_index[string(runes[0])+string(runes[1])] = i\n        }\n    }\n    fmt.Println(words_index)\n}\n\n\n\n\n\u53c2\u8003URL\nhttp://qiita.com/high5/items/3fe34d2feeff2c11f5ca\n\n05. n-gram\n\u4e0e\u3048\u3089\u308c\u305f\u30b7\u30fc\u30b1\u30f3\u30b9\uff08\u6587\u5b57\u5217\u3084\u30ea\u30b9\u30c8\u306a\u3069\uff09\u304b\u3089n-gram\u3092\u4f5c\u308b\u95a2\u6570\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\u3053\u306e\u95a2\u6570\u3092\u7528\u3044\uff0c\"I am an NLPer\"\u3068\u3044\u3046\u6587\u304b\u3089\u5358\u8a9ebi-gram\uff0c\u6587\u5b57bi-gram\u3092\u5f97\u3088\uff0e\n\ntest05.go\npackage main\n\nimport (\n    \"fmt\"     // \u5165\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\n    \"strings\" //string\u51e6\u7406\u306e\u30e1\u30bd\u30c3\u30c9\n)\n\n// n \u304c\u30b9\u30e9\u30a4\u30b9\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u304b\nfunc member(n string, xs []string) bool {\n    for _, x := range xs {\n        if n == x {\n            return true\n        }\n    }\n    return false\n}\n\n// \u91cd\u8907\u8981\u7d20\u3092\u53d6\u308a\u9664\u304f\nfunc RemoveDuplicates(xs []string) []string {\n    ys := make([]string, 0, len(xs))\n    for _, x := range xs {\n        if !member(x, ys) {\n            ys = append(ys, x)\n        }\n    }\n    return ys\n}\n\nfunc WordsSplit(s string) []string {\n    s = strings.Trim(s, \".\")            //\".\"\u306e\u9664\u53bb\n    s = strings.Replace(s, \",\", \"\", -1) //\",\"\u306e\u9664\u53bb\n\n    words := strings.Split(s, \" \") //[]\u306b\u5358\u8a9e\u304c\u683c\u7d0d\n    return words\n}\n\n//\u4e0e\u3048\u3089\u308c\u305fslice(\u5358\u8a9e or \u6587\u5b57)\u304b\u3089ngram\u3092\u8fd4\u3059\u3001c\u306f\u5bfe\u8c61\u306eobjects\u306e\u9023\u7d50\u6587\u5b57\u5217\nfunc MakeNgram(objs []string, n int, c string) []string {\n    Ngrams := []string{}\n    for i := 0; i < (len(objs) - n + 1); i++ {\n        Ngrams = append(Ngrams, strings.Join(objs[i:i+n], c))\n    }\n    return RemoveDuplicates(Ngrams)\n}\n\n//\u4e0e\u3048\u3089\u308c\u305f\u5358\u8a9e\u306eslice\u304b\u3089\u6587\u5b57ngram\u3092\u8fd4\u3059\nfunc MakeCharactersNgram(words []string, n int) []string {\n    ChNgrams := []string{}\n    for i := 0; i < len(words); i++ {\n        characters := strings.Split(words[i], \"\")                    //\u5358\u8a9e\u306e\u6587\u5b57\u306e\u30b9\u30e9\u30a4\u30b9\u3092\u4f5c\u6210\n        ChNgrams = append(ChNgrams, MakeNgram(characters, n, \"\")...) //'...'\u3092\u3064\u3051\u308b\u3053\u3068\u3067slice\u306e\u9023\u7d50\u304c\u3067\u304d\u308b\n    }\n    return RemoveDuplicates(ChNgrams)\n}\n\nfunc PrintSlice(objs []string) {\n    for i := 0; i < len(objs); i++ {\n        fmt.Printf(\"%v\\n\", objs[i])\n    }\n}\n\nfunc main() {\n    s := \"I am an NLPer\"\n    fmt.Printf(\"%v\\n\", s)\n\n    words := WordsSplit(s) //\u5358\u8a9e\u306b\u5206\u5272\u3057\u3001\u30b9\u30e9\u30a4\u30b9\u306b\u683c\u7d0d\n\n    //\u5358\u8a9ebigram\n    fmt.Printf(\"---words bigram---\\n\")\n    Wordsbigram := MakeNgram(words, 2, \" \")\n    PrintSlice(Wordsbigram)\n\n    //\u6587\u5b57bigram\n    fmt.Printf(\"---characters bigram---\\n\")\n    Charactersbigram := MakeCharactersNgram(words, 2)\n    PrintSlice(Charactersbigram)\n}\n\n\nWordsSplit(s) \u306b\u304a\u3044\u3066\u3001\u53e5\u8aad\u70b9\u306e\u9664\u53bb\u3092\u884c\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3059\u304c\u984c\u610f\u7684\u306b\u306f\u305d\u306e\u307e\u307e\u3067\u3082\u826f\u304b\u3063\u305f\u3093\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u53c2\u8003URL\nhttp://qiita.com/ono_matope/items/d5e70d8a9ff2b54d5c37\nhttp://qiita.com/kazuph/items/4bc33162da7e7d00d80c\n\n06. \u96c6\u5408\n\"paraparaparadise\"\u3068\"paragraph\"\u306b\u542b\u307e\u308c\u308b\u6587\u5b57bi-gram\u306e\u96c6\u5408\u3092\uff0c\u305d\u308c\u305e\u308c,X\u3068Y\u3068\u3057\u3066\u6c42\u3081\uff0cX\u3068Y\u306e\u548c\u96c6\u5408\uff0c\u7a4d\u96c6\u5408\uff0c\u5dee\u96c6\u5408\u3092\u6c42\u3081\u3088\uff0e\u3055\u3089\u306b\uff0c'se'\u3068\u3044\u3046bi-gram\u304cX\u304a\u3088\u3073Y\u306b\u542b\u307e\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u3088\uff0e\n\ntest06.go\npackage main\n\nimport (\n    \"fmt\"     // \u5165\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\n    \"strings\" //string\u51e6\u7406\u306e\u30e1\u30bd\u30c3\u30c9\n)\n\n// n \u304c\u30b9\u30e9\u30a4\u30b9\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u304b\nfunc member(n string, xs []string) bool {\n    for _, x := range xs {\n        if n == x {\n            return true\n        }\n    }\n    return false\n}\n\n// \u91cd\u8907\u8981\u7d20\u3092\u53d6\u308a\u9664\u304f\nfunc RemoveDuplicates(xs []string) []string {\n    ys := make([]string, 0, len(xs))\n    for _, x := range xs {\n        if !member(x, ys) {\n            ys = append(ys, x)\n        }\n    }\n    return ys\n}\n\n//\u4e0e\u3048\u3089\u308c\u305fslice(\u5358\u8a9e or \u6587\u5b57)\u304b\u3089ngram\u3092\u8fd4\u3059\nfunc MakeNgram(objs []string, n int, c string) []string {\n    Ngrams := []string{}\n    for i := 0; i < (len(objs) - n + 1); i++ {\n        //fmt.Println((objs[i : i+n]))\n        Ngrams = append(Ngrams, strings.Join(objs[i:i+n], c))\n    }\n    return RemoveDuplicates(Ngrams)\n}\n\n//\u548c\u96c6\u5408\u306e\u5c0e\u51fa\nfunc MakeUnion(set1, set2 []string) []string {\n    set := append(set1, set2...) //slice\u306e\u7d50\u5408\n    return RemoveDuplicates(set) //\u91cd\u8907\u8981\u7d20\u306e\u524a\u9664\n}\n\n//\u7a4d\u96c6\u5408\u306e\u5c0e\u51fa\nfunc MakeIntersection(set1, set2 []string) []string {\n    set := []string{}\n    //set1\u306e\u5404\u8981\u7d20\u304cset2\u306b\u542b\u307e\u308c\u3066\u3044\u305f\u5834\u5408set\u306b\u683c\u7d0d\n    for _, c := range set1 {\n        if member(c, set2) {\n            set = append(set, c)\n        }\n    }\n    return set\n}\n\n//\u5dee\u96c6\u5408\u306e\u5c0e\u51fa (set1 - set2)\nfunc MakeDifference(set1, set2 []string) []string {\n    set := []string{}\n    //set1\u306e\u5404\u8981\u7d20\u304cset2\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u5834\u5408set\u306b\u683c\u7d0d\n    for _, c := range set1 {\n        if !member(c, set2) {\n            set = append(set, c)\n        }\n    }\n    return set\n}\n\nfunc main() {\n    sent1 := \"paraparaparadise\"\n    sent2 := \"paragraph\"\n    fmt.Printf(\"%v\\n\", sent1)\n    fmt.Printf(\"%v\\n\", sent2)\n\n    X := MakeNgram(strings.Split(sent1, \"\"), 2, \"\") //\u6587\u5b57bigram\u306e\u4f5c\u6210\n    Y := MakeNgram(strings.Split(sent2, \"\"), 2, \"\")\n    fmt.Printf(\"X : %v\\n\", X)\n    fmt.Printf(\"Y : %v\\n\", Y)\n\n    Union := MakeUnion(X, Y) //\u548c\u96c6\u5408\n    fmt.Printf(\"Union(X,Y) : %v\\n\", Union)\n\n    Intersection := MakeIntersection(X, Y) //\u7a4d\u96c6\u5408\n    fmt.Printf(\"Intersection(X,Y) : %v\\n\", Intersection)\n\n    Difference := MakeDifference(X, Y) //\u5dee\u96c6\u5408\n    fmt.Printf(\"Difference(X,Y) : %v\\n\", Difference)\n\n    //'se'\u304cX\u306b\u542b\u307e\u308c\u308b\u304b\n    if member(\"se\", X) {\n        fmt.Printf(\"'se' is member of X\\n\")\n    } else {\n        fmt.Printf(\"'se' isn't member of X\\n\")\n    }\n\n    //'se'\u304cY\u306b\u542b\u307e\u308c\u308b\u304b\n    if member(\"se\", Y) {\n        fmt.Printf(\"'se' is member of Y\\n\")\n    } else {\n        fmt.Printf(\"'se' isn't member of Y\\n\")\n    }\n\n}\n\n\n\n\n\u53c2\u8003URL\nhttp://www.geocities.jp/m_hiroi/golang/yagp02.html\nhttp://golang.jp/effective_go\n\n07. \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u308b\u6587\u751f\u6210\n\u5f15\u6570 x, y, z\u3092\u53d7\u3051\u53d6\u308a\u300cx\u6642\u306ey\u306fz\u300d\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u8fd4\u3059\u95a2\u6570\u3092\u5b9f\u88c5\u305b\u3088\uff0e\n\u3055\u3089\u306b\uff0cx=12, y=\"\u6c17\u6e29\", z=22.4\u3068\u3057\u3066\uff0c\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\ntest07.go\npackage main\n\nimport (\n    \"bufio\"\n    \"fmt\"\n    \"os\"\n    \"strings\"\n)\n\nfunc scan(sent string) string {\n    fmt.Printf(\"%v : \", sent)\n    reader := bufio.NewReader(os.Stdin)\n    input, _ := reader.ReadString('\\n')\n    return input\n}\n\nfunc main() {\n    //\u5404x,y,z\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u5165\u529b\n    x := strings.Trim(scan(\"x\"), \"\\n\")\n    y := strings.Trim(scan(\"y\"), \"\\n\")\n    z := strings.Trim(scan(\"z\"), \"\\n\")\n\n    fmt.Printf(\"\u300c%v\u6642\u306e%v\u306f%v\u300d\\n\", x, y, z)\n}\n\n\nscan(string) \u3068\u3044\u3046\u3088\u3046\u306astring\u3092\u30d7\u30ea\u30f3\u30c8\u3057\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u5165\u529b\u3055\u308c\u305f\u3082\u306e\u3092\u8fd4\u3059\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002Go\u306e\u5165\u51fa\u529b\u95a2\u9023\u3044\u307e\u3044\u3061\u307e\u3060\u3088\u304f\u5206\u304b\u3063\u3066\u307e\u305b\u3093...\ntetsuok\u3055\u3093\u304b\u3089\u30b3\u30e1\u30f3\u30c8\u3092\u3044\u305f\u3060\u3044\u305f\u4e0a\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u304b\u3048\u307e\u3057\u305f\u3002\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u5f15\u6570\u3092\u53d6\u5f97\u3059\u308b\u969b\u306b\u306f flag \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u826f\u3044\u307f\u305f\u3044\u3067\u3059\u3002\n\ntest07_2.go\n//\u5b9f\u884c go run src/test07_2.go x y z\n\npackage main\n\nimport (\n    \"flag\"\n    \"fmt\"\n    \"os\"\n)\n\nfunc format(a []string) string {\n    if len(a) < 3 {\n        return \"\"\n    }\n    return fmt.Sprintf(\"%s\u6642\u306e%s\u306f%s\", a[0], a[1], a[2])\n}\n\nfunc main() {\n    //\u5f15\u6570\u306b\u95a2\u3057\u3066\u306eUsage\n    flag.Usage = func() {\n        fmt.Fprintf(os.Stderr, \"Usage: %s x y z\\n\", os.Args[0])\n        flag.PrintDefaults()\n    }\n\n    //\u5f15\u6570\u3092\u30d1\u30fc\u30b9\n    flag.Parse()\n\n    //\u5f15\u6570\u306e\u6570\u3092\u8abf\u3079\u30013\u3064\u3067\u306a\u3044\u5834\u5408Usage\u3092\u8868\u793a\u3057\u3001\u7d42\u4e86\u30b3\u30fc\u30c9\u3067\u7d42\u4e86\n    if flag.NArg() != 3 {\n        //Usage\u306e\u8868\u793a\n        flag.Usage()\n        //\u7d42\u4e86\u30b3\u30fc\u30c91\u3067\u7d42\u4e86\n        os.Exit(1)\n    }\n\n    //flag.Args():\u6a19\u6e96\u5165\u529b\u306e\u5f15\u6570\u304cstring\u306e\u914d\u5217\u3067\u6e21\u3055\u308c\u308b\n    fmt.Println(format(flag.Args()))\n}\n\n\n\n\n\u53c2\u8003URL\nhttp://d.hatena.ne.jp/umisama/20100325/1269508269\nhttps://play.golang.org/p/5OEVRC1Ncq\n\n08. \u6697\u53f7\u6587\n\u4e0e\u3048\u3089\u308c\u305f\u6587\u5b57\u5217\u306e\u5404\u6587\u5b57\u3092\uff0c\u4ee5\u4e0b\u306e\u4ed5\u69d8\u3067\u5909\u63db\u3059\u308b\u95a2\u6570cipher\u3092\u5b9f\u88c5\u305b\u3088\n\u82f1\u5c0f\u6587\u5b57\u306a\u3089\u3070(219 - \u6587\u5b57\u30b3\u30fc\u30c9)\u306e\u6587\u5b57\u306b\u7f6e\u63db\n\u305d\u306e\u4ed6\u306e\u6587\u5b57\u306f\u305d\u306e\u307e\u307e\u51fa\u529b\n\u3053\u306e\u95a2\u6570\u3092\u7528\u3044\uff0c\u82f1\u8a9e\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6697\u53f7\u5316\u30fb\u5fa9\u53f7\u5316\u305b\u3088.\n\ntest08.go\npackage main\n\nimport (\n    \"bufio\"\n    \"fmt\"\n    \"os\"\n    \"regexp\"\n    \"strings\"\n)\n\nfunc scan(sent string) string {\n    fmt.Printf(\"%v : \", sent)\n    reader := bufio.NewReader(os.Stdin)\n    input, _ := reader.ReadString('\\n')\n    return input\n}\n\n//\u82f1\u5c0f\u6587\u5b57\u304b\u3069\u3046\u304b\u6b63\u898f\u8868\u73fe\u3067\u5224\u5b9a\nfunc IsLowAlphabet(character string) bool {\n    if m, _ := regexp.MatchString(\"[a-z]\", character); !m {\n        return false\n    }\n    return true\n}\n\n//\u82f1\u5c0f\u6587\u5b57\u306a\u3089\u3070(219 - \u6587\u5b57\u30b3\u30fc\u30c9)\u306e\u6587\u5b57\u306b\u7f6e\u63db\u3001\u305d\u306e\u4ed6\u306e\u6587\u5b57\u306f\u305d\u306e\u307e\u307e\u51fa\u529b\nfunc Cipher(s string) string {\n    runes := []rune(s)\n\n    for i := 0; i < len(runes); i++ {\n\n        //\u6b63\u898f\u8868\u73fe\u3067\u5224\u65ad\uff08rune\u3092\u3044\u3061\u3044\u3061string\u306b\u623b\u3057\u3066\u3044\u308b\u306e\u3067\u5197\u9577\uff09\n        /*if IsLowAlphabet(string(runes[i])) {\n            runes[i] = 219 - runes[i]\n        }*/\n\n        //\u82f1\u5c0f\u6587\u5b57 [a-z] \u306futf-8\u306e10\u9032\u6570\u3067 97 ~ 123 \u3067\u8868\u73fe\u3055\u308c\u308b\u306e\u3067\u305d\u308c\u3092\u7528\u3044\u3066\u5224\u65ad\n        if runes[i] > 96 && runes[i] < 123 {\n            runes[i] = 219 - runes[i]\n        }\n    }\n    return string(runes)\n}\n\nfunc main() {\n    sent := strings.Trim(scan(\"input sentence\"), \"\\n\")\n    cipherSent := Cipher(sent)\n    fmt.Printf(\"cipherted sentence : %v\\n\", cipherSent)\n    decodeSent := Cipher(cipherSent)\n    fmt.Printf(\"decoded sentence : %v\\n\", decodeSent)\n}\n\n\n\u6700\u521d\u306f\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u3044\u308b\u90e8\u5206\u3067 IsLowAlphabet() \u3068\u3044\u3046\u95a2\u6570\u4e2d\u3067\u82f1\u5c0f\u6587\u5b57\u304b\u3069\u3046\u304b\u3092\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3063\u3066\u5224\u65ad\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u66f8\u3044\u3066\u3044\u308b\u9014\u4e2d\u3067\u6587\u5b57\u30b3\u30fc\u30c9\u3067\u5224\u65ad if runes[i] > 96 && runes[i] < 123 \u3057\u305f\u65b9\u304c\u30b7\u30f3\u30d7\u30eb\u3060\u3068\u6c17\u3065\u3044\u305f\u306e\u3067\u66f8\u304d\u63db\u3048\u307e\u3057\u305f\u3002\n\n\u53c2\u8003URL\nhttp://astaxie.gitbooks.io/build-web-application-with-golang/content/ja/07.3.html\nhttp://www.utf8-chartable.de/unicode-utf8-table.pl?number=128&utf8=dec\n\n09. Typoglycemia\n\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3089\u308c\u305f\u5358\u8a9e\u5217\u306b\u5bfe\u3057\u3066\uff0c\u5404\u5358\u8a9e\u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u6587\u5b57\u306f\u6b8b\u3057\uff0c\u305d\u308c\u4ee5\u5916\u306e\u6587\u5b57\u306e\u9806\u5e8f\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u9577\u3055\u304c\uff14\u4ee5\u4e0b\u306e\u5358\u8a9e\u306f\u4e26\u3073\u66ff\u3048\u306a\u3044\u3053\u3068\u3068\u3059\u308b\uff0e\n\u9069\u5f53\u306a\u82f1\u8a9e\u306e\u6587\uff08\u4f8b\u3048\u3070\"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\uff09\u3092\u4e0e\u3048\uff0c\u305d\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\ntest09.go\npackage main\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"strings\"\n)\n\n//\u5358\u8a9e\u306e\u5206\u5272\nfunc WordsSplit(s string) []string {\n    words := strings.Split(s, \" \")\n    return words\n}\n\n//\u4e0e\u3048\u3089\u308c\u305f\u5358\u8a9e\u306e\u9577\u3055\u304c4\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u3001\u5148\u982d\u3068\u672b\u5c3e\u306e\u6587\u5b57\u306f\u6b8b\u3057\uff0c\n//\u305d\u308c\u4ee5\u5916\u306e\u6587\u5b57\u306e\u9806\u5e8f\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\nfunc RandomizeWord(word string) string {\n    var new_word string\n    runes := []rune(word)\n    length := len(runes)\n\n    //\u6587\u5b57\u5217\u9577\u304c4\u4ee5\u4e0a\u306e\u5834\u5408\n    /*\n        string = \"ABCDE\"\n        length = 5\n        index = [0,1,2,3,4]\n        rand_idx := rand.Perm(length - 2) = [1,0,2] \u2192 1\u3092\u8db3\u305b\u3070 [2,1,3] \u304c\u53d6\u308c\u308b\n    */\n\n    if length > 4 {\n        new_runes := make([]rune, length)\n        rand_idx := rand.Perm(length - 2) // 0 ~ (length-2-1) \u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3079\u305f\u3082\u306e\n        new_runes[0] = runes[0]           //\u6700\u521d\u3068\u6700\u5f8c\u306f\u540c\u3058\n        new_runes[length-1] = runes[length-1]\n\n        for i := range rand_idx {\n            //rand_idx\u306e\u5404\u8981\u7d20\u306b\uff11\u3092\u8db3\u305b\u3070\u6700\u521d\u3068\u6700\u5f8c\u4ee5\u5916\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u3068\u308c\u308b\n            new_runes[i+1] = runes[rand_idx[i]+1]\n        }\n        new_word = string(new_runes)\n    } else {\n        new_word = word\n    }\n    return new_word\n}\n\nfunc RandomizeSent(sent string) string {\n    words := WordsSplit(sent)\n\n    for i := 0; i < len(words); i++ {\n        words[i] = RandomizeWord(words[i])\n    }\n    return strings.Join(words, \" \") //\u6700\u5f8c\u306b\u4e00\u3064\u306estring\u306b\u7d50\u5408\n}\n\nfunc main() {\n\n    //\u5165\u529b\u6587\n    sent := \"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\n\n    random_sent := RandomizeSent(sent)\n\n    fmt.Printf(\"src  sent : %v\\n\", sent)        //\u5143\u306e\u6587\n    fmt.Printf(\"rand sent : %v\\n\", random_sent) //\u30e9\u30f3\u30c0\u30e0\u5316\u3055\u308c\u305f\u6587\n}\n\n\n\n\u5358\u8a9e\u9577\u304c4\u4ee5\u4e0a\u306e\u5358\u8a9e\u306b\u3064\u3044\u3066\u306f\u3001rand_idx := rand.Perm(length - 2) \u3067 0 ~ (length-2-1) \u3092\u4e26\u3073\u66ff\u3048\u305f\u3082\u306e\u3092\u53d6\u5f97\u3057\u3001\u5404\u8981\u7d20\u306b\uff11\u3092\u8db3\u3059\u3053\u3068\u3067\u6700\u521d\u3068\u6700\u5f8c\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4ee5\u5916\u304c\u30e9\u30f3\u30c0\u30e0\u306a\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u53d6\u308c\u308b\u3002\n\u53c2\u8003URL\nhttps://groups.google.com/forum/#!topic/golang-nuts/JDVCR__dHbI\nhttp://golang.org/pkg/math/rand/\n##\u306f\u3058\u3081\u306b\n\u7814\u7a76\u5ba4\u3067[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af2015](http://www.cl.ecei.tohoku.ac.jp/nlp100/ \"\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af2015\") \u3092\u89e3\u304f\u3053\u3068\u306b\u306a\u308a\u3001\u53bb\u5e74\u306fPython\u3067\u89e3\u3044\u305f\u306e\u3067\u9055\u3046\u8a00\u8a9e\u3067\u3084\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u6d41\u884c\u3063\u3066\u308b\u3057\u3001\u300cGo\u3084\u3063\u3066\u307e\u3059\u300d\u3068\u8a00\u3044\u305f\u3044\u304c\u305f\u3081\u306b\u3001\u521d\u3081\u3066\u306eGo\u8a00\u8a9e\u3067\u3084\u308a\u307e\u3059\u3002\n\n\n\u76f8\u8ac7\u76f8\u624b\u304c\u3044\u306a\u3044\uff08\u307f\u3093\u306aJava\u3068\u304bC++\u3067\u89e3\u3044\u3066\u308b\uff09\u306e\u3067\u3001\u3053\u3053\u3067\u53b3\u3057\u3044\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\u4ee5\u4e0bGitHub\u306e\u30da\u30fc\u30b8\u306b\u3067\u304d\u6b21\u7b2c\u3042\u3052\u3066\u3044\u304d\u307e\u3059\u3002\nhttps://github.com/yukitomo/NLP100knock2015_Go\n\t\n\n\u3068\u308a\u3042\u3048\u305a\u300110\u672c\u3067\u3059\n\n##\u7b2c1\u7ae0: \u6e96\u5099\u904b\u52d5\n###00. \u6587\u5b57\u5217\u306e\u9006\u9806\n\u6587\u5b57\u5217\"stressed\"\u306e\u6587\u5b57\u3092\u9006\u306b\uff08\u672b\u5c3e\u304b\u3089\u5148\u982d\u306b\u5411\u304b\u3063\u3066\uff09\u4e26\u3079\u305f\u6587\u5b57\u5217\u3092\u5f97\u3088\uff0e\n\n```test00.go\npackage main\n\nimport \"fmt\" \n\nfunc Reverse(s string) string {\n\trunes := []rune(s)  //rune\u914d\u5217\u306b\u5909\u63db\n\tfor i, j := 0, len(runes)-1; i<j; i, j = i+1, j-1 {\n\t\trunes[i], runes[j] = runes[j], runes[i]\n\t}\n\treturn string(runes)\n}\n\nfunc main() {\n\n\ts := \"stressed\"\n\n\tfmt.Printf(\"%v\\n\",s)\n    fmt.Println(Reverse(s))\n\n}\n```\n`Recverse(s)`\uff1a\u6587\u5b57\u5217\u3092\u5f15\u6570\u3068\u3057\u3066rune\u914d\u5217\u3068\u3057\u3066\u3001\u9806\u756a\u3092\u9006\u9806\u3068\u3057\u3066\u6587\u5b57\u5217\u3092\u51fa\u529b\u3059\u308b\u3002\n\u81ea\u5206\u306e\u8abf\u3079\u305f\u9650\u308a\u3060\u3068Go\u3067\u6587\u5b57\u5217\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u64cd\u4f5c\u3057\u3088\u3046\u3068\u3059\u308b\u306b\u306frune\u914d\u5217\u306b\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\uff1f\u307d\u3044\u3067\u3059\u3002\npython\u306a\u3089 `s[::-1]` \u3067\u4e00\u767a\u3060\u3088\u306a\u3068\u601d\u3044\u3064\u3064\u7d50\u69cb\u9577\u3044\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f...\n\n####\u53c2\u8003URL\nhttp://d.hatena.ne.jp/yuheiomori0718/20131008/1381244919\n\n\n###01. \u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\n\u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\u3068\u3044\u3046\u6587\u5b57\u5217\u306e1,3,5,7\u6587\u5b57\u76ee\u3092\u53d6\u308a\u51fa\u3057\u3066\u9023\u7d50\u3057\u305f\u6587\u5b57\u5217\u3092\u5f97\u3088\uff0e\n\n```test01.go\npackage main\n\nimport \"fmt\" \n\nfunc main() {\n\n\ts := \"\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\"\n\n\tfmt.Printf(\"%v\\n\", s)\n\trunes := []rune(s)\n\tfmt.Println(string(runes[1]) + string(runes[3]) + string(runes[5]) + string(runes[7]))\n\n}\n```\n####\u53c2\u8003URL\nhttp://qiita.com/ono_matope/items/d5e70d8a9ff2b54d5c37\n\n###02. \u300c\u30d1\u30c8\u30ab\u30fc\u300d\uff0b\u300c\u30bf\u30af\u30b7\u30fc\u300d\uff1d\u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\n\u300c\u30d1\u30c8\u30ab\u30fc\u300d\uff0b\u300c\u30bf\u30af\u30b7\u30fc\u300d\u306e\u6587\u5b57\u3092\u5148\u982d\u304b\u3089\u4ea4\u4e92\u306b\u9023\u7d50\u3057\u3066\u6587\u5b57\u5217\u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\u3092\u5f97\u3088\n\n```test02.go\npackage main\n\nimport \"fmt\" \n\nfunc Altjoin(s1, s2 string) string {\n\trunes1 := []rune(s1)  //rune\u914d\u5217\u306b\u5909\u63db\n\trunes2 := []rune(s2)\n\tvar s3 string\n\tfor i := 0; i < len(runes1); i = i+1 {\n\t\ts3 += string(runes1[i]) + string(runes2[i])\n\t}\n\treturn s3\n}\n\nfunc main() {\n\n\ts1 := \"\u30d1\u30c8\u30ab\u30fc\"\n\ts2 := \"\u30bf\u30af\u30b7\u30fc\"\n\n\tfmt.Printf(\"%v\\n\",s1)\n\tfmt.Printf(\"%v\\n\",s2)\n\tfmt.Println(Altjoin(s1,s2))\n}\n```\n\n`Altjoin(s1, s2)`\uff1a\uff12\u3064\u306e\u6587\u5b57\u5217\u3092\u5f15\u6570\u3068\u3057\u3066\u53d6\u308a\u4ea4\u4e92\u306b\u9023\u7d50\u3057\u3066\u51fa\u529b\n\n\n###03. \u5186\u5468\u7387\n\"Now I need a drink, alcoholic of course, after the heavy lectures involving quantum mechanics.\"\n\u3068\u3044\u3046\u6587\u3092\u5358\u8a9e\u306b\u5206\u89e3\u3057\uff0c\u5404\u5358\u8a9e\u306e\uff08\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\uff09\u6587\u5b57\u6570\u3092\u5148\u982d\u304b\u3089\u51fa\u73fe\u9806\u306b\u4e26\u3079\u305f\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\n```test03.go\npackage main\n\nimport (\n\t\"fmt\"     // \u5165\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\n\t\"strings\" //string\u51e6\u7406\u306e\u30e1\u30bd\u30c3\u30c9\n)\n\nfunc main() {\n\ts := \"Now I need a drink, alcoholic of course, after the heavy lectures involving quantum mechanics.\"\n\ts = strings.Trim(s, \".\") // \".\"\u306e\u9664\u53bb\u3001Trim\u306f\u6587\u5b57\u5217\u306e\u524d\u5f8c\u3057\u304b\u9664\u53bb\u3067\u304d\u306a\u3044\n\ts = strings.Replace(s, \",\", \"\", -1) //\",\"\u306e\u9664\u53bb\n\n\twords := strings.Split(s, \" \") //slices\u306b\u5358\u8a9e\u304c\u683c\u7d0d\n\n\tfor i := 0; i < len(words); i++ {\n\t\tfmt.Printf(\"%d\\n\", len(words[i])) //\u5404\u5358\u8a9e\u306e\u6587\u5b57\u6570\u3092\u51fa\u529b\n\t}\n\n}\n```\n\n`func Replace(s, old, new string, n int) string`\uff1a\u6587\u5b57\u5217s\u306e\u30b3\u30d4\u30fc\u306b\u5bfe\u3057\u3001\u6700\u521d\u306en\u500b\u3001old\u306e\u90e8\u5206\u3092new\u306b\u7f6e\u63db(\u91cd\u8907\u306f\u306a\u3057)\u3057\u305f\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002n < 0\u306e\u3068\u304d\u3001\u7f6e\u63db\u6570\u306f\u7121\u5236\u9650\u306b\u306a\u308a\u307e\u3059\u3002\n\n####\u53c2\u8003URL\nhttps://github.com/astaxie/build-web-application-with-golang/blob/master/ja/07.6.md\n\n###04. \u5143\u7d20\u8a18\u53f7\n\"Hi He Lied Because Boron Could Not Oxidize Fluorine. New Nations Might Also Sign Peace Security Clause. Arthur King Can.\" \u3068\u3044\u3046\u6587\u3092\u5358\u8a9e\u306b\u5206\u89e3\u3057\uff0c1, 5, 6, 7, 8, 9, 15, 16, 19\u756a\u76ee\u306e\u5358\u8a9e\u306f\u5148\u982d\u306e1\u6587\u5b57\uff0c\u305d\u308c\u4ee5\u5916\u306e\u5358\u8a9e\u306f\u5148\u982d\u306b2\u6587\u5b57\u3092\u53d6\u308a\u51fa\u3057\uff0c\u53d6\u308a\u51fa\u3057\u305f\u6587\u5b57\u5217\u304b\u3089\u5358\u8a9e\u306e\u4f4d\u7f6e\uff08\u5148\u982d\u304b\u3089\u4f55\u756a\u76ee\u306e\u5358\u8a9e\u304b\uff09\u3078\u306e\u9023\u60f3\u914d\u5217\uff08\u8f9e\u66f8\u578b\u3082\u3057\u304f\u306f\u30de\u30c3\u30d7\u578b\uff09\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\n```test04.go\npackage main\n\nimport (\n\t\"fmt\"     // \u5165\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\n\t\"strings\" //string\u51e6\u7406\u306e\u30e1\u30bd\u30c3\u30c9\n)\n\nfunc main() {\n\ts := \"Hi He Lied Because Boron Could Not Oxidize Fluorine. New Nations Might Also Sign Peace Security Clause. Arthur King Can.\"\n\ts = strings.Trim(s, \".\") // \".\"\u306e\u9664\u53bb\n\n\ts = strings.Replace(s, \",\", \"\", -1)\n\twords := strings.Split(s, \" \") //slices\u306b\u5358\u8a9e\u304c\u683c\u7d0d\n\n\twords_index := make(map[string]int)\n\n\tfor i := 0; i < len(words); i++ {\n\t\trunes := []rune(words[i])\n\t\tswitch i {\n\t\tcase 1, 5, 6, 7, 8, 9, 15, 16, 19: //1, 5, 6, 7, 8, 9, 15, 16, 19\u756a\u76ee\u306e\u5358\u8a9e\u306f\u5148\u982d\u306e1\u6587\u5b57\n\t\t\twords_index[string(runes[0])] = i\n\t\tdefault: //\u4e0a\u8a18\u4ee5\u5916\u306e\u5358\u8a9e\u306f\u5148\u982d\u306e2\u6587\u5b57\n\t\t\twords_index[string(runes[0])+string(runes[1])] = i\n\t\t}\n\t}\n\tfmt.Println(words_index)\n}\n\n```\n####\u53c2\u8003URL\nhttp://qiita.com/high5/items/3fe34d2feeff2c11f5ca\n\n###05. n-gram\n\u4e0e\u3048\u3089\u308c\u305f\u30b7\u30fc\u30b1\u30f3\u30b9\uff08\u6587\u5b57\u5217\u3084\u30ea\u30b9\u30c8\u306a\u3069\uff09\u304b\u3089n-gram\u3092\u4f5c\u308b\u95a2\u6570\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\u3053\u306e\u95a2\u6570\u3092\u7528\u3044\uff0c\"I am an NLPer\"\u3068\u3044\u3046\u6587\u304b\u3089\u5358\u8a9ebi-gram\uff0c\u6587\u5b57bi-gram\u3092\u5f97\u3088\uff0e\n\n```test05.go\npackage main\n\nimport (\n\t\"fmt\"     // \u5165\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\n\t\"strings\" //string\u51e6\u7406\u306e\u30e1\u30bd\u30c3\u30c9\n)\n\n// n \u304c\u30b9\u30e9\u30a4\u30b9\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u304b\nfunc member(n string, xs []string) bool {\n\tfor _, x := range xs {\n\t\tif n == x {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// \u91cd\u8907\u8981\u7d20\u3092\u53d6\u308a\u9664\u304f\nfunc RemoveDuplicates(xs []string) []string {\n\tys := make([]string, 0, len(xs))\n\tfor _, x := range xs {\n\t\tif !member(x, ys) {\n\t\t\tys = append(ys, x)\n\t\t}\n\t}\n\treturn ys\n}\n\nfunc WordsSplit(s string) []string {\n\ts = strings.Trim(s, \".\")            //\".\"\u306e\u9664\u53bb\n\ts = strings.Replace(s, \",\", \"\", -1) //\",\"\u306e\u9664\u53bb\n\n\twords := strings.Split(s, \" \") //[]\u306b\u5358\u8a9e\u304c\u683c\u7d0d\n\treturn words\n}\n\n//\u4e0e\u3048\u3089\u308c\u305fslice(\u5358\u8a9e or \u6587\u5b57)\u304b\u3089ngram\u3092\u8fd4\u3059\u3001c\u306f\u5bfe\u8c61\u306eobjects\u306e\u9023\u7d50\u6587\u5b57\u5217\nfunc MakeNgram(objs []string, n int, c string) []string {\n\tNgrams := []string{}\n\tfor i := 0; i < (len(objs) - n + 1); i++ {\n\t\tNgrams = append(Ngrams, strings.Join(objs[i:i+n], c))\n\t}\n\treturn RemoveDuplicates(Ngrams)\n}\n\n//\u4e0e\u3048\u3089\u308c\u305f\u5358\u8a9e\u306eslice\u304b\u3089\u6587\u5b57ngram\u3092\u8fd4\u3059\nfunc MakeCharactersNgram(words []string, n int) []string {\n\tChNgrams := []string{}\n\tfor i := 0; i < len(words); i++ {\n\t\tcharacters := strings.Split(words[i], \"\")                    //\u5358\u8a9e\u306e\u6587\u5b57\u306e\u30b9\u30e9\u30a4\u30b9\u3092\u4f5c\u6210\n\t\tChNgrams = append(ChNgrams, MakeNgram(characters, n, \"\")...) //'...'\u3092\u3064\u3051\u308b\u3053\u3068\u3067slice\u306e\u9023\u7d50\u304c\u3067\u304d\u308b\n\t}\n\treturn RemoveDuplicates(ChNgrams)\n}\n\nfunc PrintSlice(objs []string) {\n\tfor i := 0; i < len(objs); i++ {\n\t\tfmt.Printf(\"%v\\n\", objs[i])\n\t}\n}\n\nfunc main() {\n\ts := \"I am an NLPer\"\n\tfmt.Printf(\"%v\\n\", s)\n\n\twords := WordsSplit(s) //\u5358\u8a9e\u306b\u5206\u5272\u3057\u3001\u30b9\u30e9\u30a4\u30b9\u306b\u683c\u7d0d\n\n\t//\u5358\u8a9ebigram\n\tfmt.Printf(\"---words bigram---\\n\")\n\tWordsbigram := MakeNgram(words, 2, \" \")\n\tPrintSlice(Wordsbigram)\n\n\t//\u6587\u5b57bigram\n\tfmt.Printf(\"---characters bigram---\\n\")\n\tCharactersbigram := MakeCharactersNgram(words, 2)\n\tPrintSlice(Charactersbigram)\n}\n```\n`WordsSplit(s)` \u306b\u304a\u3044\u3066\u3001\u53e5\u8aad\u70b9\u306e\u9664\u53bb\u3092\u884c\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3059\u304c\u984c\u610f\u7684\u306b\u306f\u305d\u306e\u307e\u307e\u3067\u3082\u826f\u304b\u3063\u305f\u3093\u3067\u3057\u3087\u3046\u304b\u3002\n####\u53c2\u8003URL\nhttp://qiita.com/ono_matope/items/d5e70d8a9ff2b54d5c37\nhttp://qiita.com/kazuph/items/4bc33162da7e7d00d80c\n\n###06. \u96c6\u5408\n\"paraparaparadise\"\u3068\"paragraph\"\u306b\u542b\u307e\u308c\u308b\u6587\u5b57bi-gram\u306e\u96c6\u5408\u3092\uff0c\u305d\u308c\u305e\u308c,X\u3068Y\u3068\u3057\u3066\u6c42\u3081\uff0cX\u3068Y\u306e\u548c\u96c6\u5408\uff0c\u7a4d\u96c6\u5408\uff0c\u5dee\u96c6\u5408\u3092\u6c42\u3081\u3088\uff0e\u3055\u3089\u306b\uff0c'se'\u3068\u3044\u3046bi-gram\u304cX\u304a\u3088\u3073Y\u306b\u542b\u307e\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u3088\uff0e\n\n```test06.go\npackage main\n\nimport (\n\t\"fmt\"     // \u5165\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5b9f\u88c5\u3057\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\n\t\"strings\" //string\u51e6\u7406\u306e\u30e1\u30bd\u30c3\u30c9\n)\n\n// n \u304c\u30b9\u30e9\u30a4\u30b9\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u304b\nfunc member(n string, xs []string) bool {\n\tfor _, x := range xs {\n\t\tif n == x {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\n// \u91cd\u8907\u8981\u7d20\u3092\u53d6\u308a\u9664\u304f\nfunc RemoveDuplicates(xs []string) []string {\n\tys := make([]string, 0, len(xs))\n\tfor _, x := range xs {\n\t\tif !member(x, ys) {\n\t\t\tys = append(ys, x)\n\t\t}\n\t}\n\treturn ys\n}\n\n//\u4e0e\u3048\u3089\u308c\u305fslice(\u5358\u8a9e or \u6587\u5b57)\u304b\u3089ngram\u3092\u8fd4\u3059\nfunc MakeNgram(objs []string, n int, c string) []string {\n\tNgrams := []string{}\n\tfor i := 0; i < (len(objs) - n + 1); i++ {\n\t\t//fmt.Println((objs[i : i+n]))\n\t\tNgrams = append(Ngrams, strings.Join(objs[i:i+n], c))\n\t}\n\treturn RemoveDuplicates(Ngrams)\n}\n\n//\u548c\u96c6\u5408\u306e\u5c0e\u51fa\nfunc MakeUnion(set1, set2 []string) []string {\n\tset := append(set1, set2...) //slice\u306e\u7d50\u5408\n\treturn RemoveDuplicates(set) //\u91cd\u8907\u8981\u7d20\u306e\u524a\u9664\n}\n\n//\u7a4d\u96c6\u5408\u306e\u5c0e\u51fa\nfunc MakeIntersection(set1, set2 []string) []string {\n\tset := []string{}\n\t//set1\u306e\u5404\u8981\u7d20\u304cset2\u306b\u542b\u307e\u308c\u3066\u3044\u305f\u5834\u5408set\u306b\u683c\u7d0d\n\tfor _, c := range set1 {\n\t\tif member(c, set2) {\n\t\t\tset = append(set, c)\n\t\t}\n\t}\n\treturn set\n}\n\n//\u5dee\u96c6\u5408\u306e\u5c0e\u51fa (set1 - set2)\nfunc MakeDifference(set1, set2 []string) []string {\n\tset := []string{}\n\t//set1\u306e\u5404\u8981\u7d20\u304cset2\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u5834\u5408set\u306b\u683c\u7d0d\n\tfor _, c := range set1 {\n\t\tif !member(c, set2) {\n\t\t\tset = append(set, c)\n\t\t}\n\t}\n\treturn set\n}\n\nfunc main() {\n\tsent1 := \"paraparaparadise\"\n\tsent2 := \"paragraph\"\n\tfmt.Printf(\"%v\\n\", sent1)\n\tfmt.Printf(\"%v\\n\", sent2)\n\n\tX := MakeNgram(strings.Split(sent1, \"\"), 2, \"\") //\u6587\u5b57bigram\u306e\u4f5c\u6210\n\tY := MakeNgram(strings.Split(sent2, \"\"), 2, \"\")\n\tfmt.Printf(\"X : %v\\n\", X)\n\tfmt.Printf(\"Y : %v\\n\", Y)\n\n\tUnion := MakeUnion(X, Y) //\u548c\u96c6\u5408\n\tfmt.Printf(\"Union(X,Y) : %v\\n\", Union)\n\n\tIntersection := MakeIntersection(X, Y) //\u7a4d\u96c6\u5408\n\tfmt.Printf(\"Intersection(X,Y) : %v\\n\", Intersection)\n\n\tDifference := MakeDifference(X, Y) //\u5dee\u96c6\u5408\n\tfmt.Printf(\"Difference(X,Y) : %v\\n\", Difference)\n\n\t//'se'\u304cX\u306b\u542b\u307e\u308c\u308b\u304b\n\tif member(\"se\", X) {\n\t\tfmt.Printf(\"'se' is member of X\\n\")\n\t} else {\n\t\tfmt.Printf(\"'se' isn't member of X\\n\")\n\t}\n\n\t//'se'\u304cY\u306b\u542b\u307e\u308c\u308b\u304b\n\tif member(\"se\", Y) {\n\t\tfmt.Printf(\"'se' is member of Y\\n\")\n\t} else {\n\t\tfmt.Printf(\"'se' isn't member of Y\\n\")\n\t}\n\n}\n\n```\n####\u53c2\u8003URL\nhttp://www.geocities.jp/m_hiroi/golang/yagp02.html\nhttp://golang.jp/effective_go\n\n###07. \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u308b\u6587\u751f\u6210\n\u5f15\u6570 x, y, z\u3092\u53d7\u3051\u53d6\u308a\u300cx\u6642\u306ey\u306fz\u300d\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u8fd4\u3059\u95a2\u6570\u3092\u5b9f\u88c5\u305b\u3088\uff0e\n\u3055\u3089\u306b\uff0cx=12, y=\"\u6c17\u6e29\", z=22.4\u3068\u3057\u3066\uff0c\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\n```test07.go\npackage main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n\t\"strings\"\n)\n\nfunc scan(sent string) string {\n\tfmt.Printf(\"%v : \", sent)\n\treader := bufio.NewReader(os.Stdin)\n\tinput, _ := reader.ReadString('\\n')\n\treturn input\n}\n\nfunc main() {\n\t//\u5404x,y,z\u3092\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u5165\u529b\n\tx := strings.Trim(scan(\"x\"), \"\\n\")\n\ty := strings.Trim(scan(\"y\"), \"\\n\")\n\tz := strings.Trim(scan(\"z\"), \"\\n\")\n\n\tfmt.Printf(\"\u300c%v\u6642\u306e%v\u306f%v\u300d\\n\", x, y, z)\n}\n```\n`scan(string)` \u3068\u3044\u3046\u3088\u3046\u306astring\u3092\u30d7\u30ea\u30f3\u30c8\u3057\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u5165\u529b\u3055\u308c\u305f\u3082\u306e\u3092\u8fd4\u3059\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002~~Go\u306e\u5165\u51fa\u529b\u95a2\u9023\u3044\u307e\u3044\u3061\u307e\u3060\u3088\u304f\u5206\u304b\u3063\u3066\u307e\u305b\u3093...~~\n\ntetsuok\u3055\u3093\u304b\u3089\u30b3\u30e1\u30f3\u30c8\u3092\u3044\u305f\u3060\u3044\u305f\u4e0a\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u304b\u3048\u307e\u3057\u305f\u3002\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u5f15\u6570\u3092\u53d6\u5f97\u3059\u308b\u969b\u306b\u306f `flag` \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5229\u7528\u3059\u308b\u306e\u304c\u826f\u3044\u307f\u305f\u3044\u3067\u3059\u3002\n\n```test07_2.go\n//\u5b9f\u884c go run src/test07_2.go x y z\n\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n\t\"os\"\n)\n\nfunc format(a []string) string {\n\tif len(a) < 3 {\n\t\treturn \"\"\n\t}\n\treturn fmt.Sprintf(\"%s\u6642\u306e%s\u306f%s\", a[0], a[1], a[2])\n}\n\nfunc main() {\n\t//\u5f15\u6570\u306b\u95a2\u3057\u3066\u306eUsage\n\tflag.Usage = func() {\n\t\tfmt.Fprintf(os.Stderr, \"Usage: %s x y z\\n\", os.Args[0])\n\t\tflag.PrintDefaults()\n\t}\n\n\t//\u5f15\u6570\u3092\u30d1\u30fc\u30b9\n\tflag.Parse()\n\n\t//\u5f15\u6570\u306e\u6570\u3092\u8abf\u3079\u30013\u3064\u3067\u306a\u3044\u5834\u5408Usage\u3092\u8868\u793a\u3057\u3001\u7d42\u4e86\u30b3\u30fc\u30c9\u3067\u7d42\u4e86\n\tif flag.NArg() != 3 {\n\t\t//Usage\u306e\u8868\u793a\n\t\tflag.Usage()\n\t\t//\u7d42\u4e86\u30b3\u30fc\u30c91\u3067\u7d42\u4e86\n\t\tos.Exit(1)\n\t}\n\n\t//flag.Args():\u6a19\u6e96\u5165\u529b\u306e\u5f15\u6570\u304cstring\u306e\u914d\u5217\u3067\u6e21\u3055\u308c\u308b\n\tfmt.Println(format(flag.Args()))\n}\n\n```\n####\u53c2\u8003URL\nhttp://d.hatena.ne.jp/umisama/20100325/1269508269\nhttps://play.golang.org/p/5OEVRC1Ncq\n\n###08. \u6697\u53f7\u6587\n\u4e0e\u3048\u3089\u308c\u305f\u6587\u5b57\u5217\u306e\u5404\u6587\u5b57\u3092\uff0c\u4ee5\u4e0b\u306e\u4ed5\u69d8\u3067\u5909\u63db\u3059\u308b\u95a2\u6570cipher\u3092\u5b9f\u88c5\u305b\u3088\n\u82f1\u5c0f\u6587\u5b57\u306a\u3089\u3070(219 - \u6587\u5b57\u30b3\u30fc\u30c9)\u306e\u6587\u5b57\u306b\u7f6e\u63db\n\u305d\u306e\u4ed6\u306e\u6587\u5b57\u306f\u305d\u306e\u307e\u307e\u51fa\u529b\n\u3053\u306e\u95a2\u6570\u3092\u7528\u3044\uff0c\u82f1\u8a9e\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6697\u53f7\u5316\u30fb\u5fa9\u53f7\u5316\u305b\u3088.\n\n```test08.go\npackage main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n\t\"regexp\"\n\t\"strings\"\n)\n\nfunc scan(sent string) string {\n\tfmt.Printf(\"%v : \", sent)\n\treader := bufio.NewReader(os.Stdin)\n\tinput, _ := reader.ReadString('\\n')\n\treturn input\n}\n\n//\u82f1\u5c0f\u6587\u5b57\u304b\u3069\u3046\u304b\u6b63\u898f\u8868\u73fe\u3067\u5224\u5b9a\nfunc IsLowAlphabet(character string) bool {\n\tif m, _ := regexp.MatchString(\"[a-z]\", character); !m {\n\t\treturn false\n\t}\n\treturn true\n}\n\n//\u82f1\u5c0f\u6587\u5b57\u306a\u3089\u3070(219 - \u6587\u5b57\u30b3\u30fc\u30c9)\u306e\u6587\u5b57\u306b\u7f6e\u63db\u3001\u305d\u306e\u4ed6\u306e\u6587\u5b57\u306f\u305d\u306e\u307e\u307e\u51fa\u529b\nfunc Cipher(s string) string {\n\trunes := []rune(s)\n\n\tfor i := 0; i < len(runes); i++ {\n\n\t\t//\u6b63\u898f\u8868\u73fe\u3067\u5224\u65ad\uff08rune\u3092\u3044\u3061\u3044\u3061string\u306b\u623b\u3057\u3066\u3044\u308b\u306e\u3067\u5197\u9577\uff09\n\t\t/*if IsLowAlphabet(string(runes[i])) {\n\t\t\trunes[i] = 219 - runes[i]\n\t\t}*/\n\n\t\t//\u82f1\u5c0f\u6587\u5b57 [a-z] \u306futf-8\u306e10\u9032\u6570\u3067 97 ~ 123 \u3067\u8868\u73fe\u3055\u308c\u308b\u306e\u3067\u305d\u308c\u3092\u7528\u3044\u3066\u5224\u65ad\n\t\tif runes[i] > 96 && runes[i] < 123 {\n\t\t\trunes[i] = 219 - runes[i]\n\t\t}\n\t}\n\treturn string(runes)\n}\n\nfunc main() {\n\tsent := strings.Trim(scan(\"input sentence\"), \"\\n\")\n\tcipherSent := Cipher(sent)\n\tfmt.Printf(\"cipherted sentence : %v\\n\", cipherSent)\n\tdecodeSent := Cipher(cipherSent)\n\tfmt.Printf(\"decoded sentence : %v\\n\", decodeSent)\n}\n```\n\u6700\u521d\u306f\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u3044\u308b\u90e8\u5206\u3067 `IsLowAlphabet()` \u3068\u3044\u3046\u95a2\u6570\u4e2d\u3067\u82f1\u5c0f\u6587\u5b57\u304b\u3069\u3046\u304b\u3092\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3063\u3066\u5224\u65ad\u3057\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u3092\u66f8\u3044\u3066\u3044\u308b\u9014\u4e2d\u3067\u6587\u5b57\u30b3\u30fc\u30c9\u3067\u5224\u65ad `if runes[i] > 96 && runes[i] < 123` \u3057\u305f\u65b9\u304c\u30b7\u30f3\u30d7\u30eb\u3060\u3068\u6c17\u3065\u3044\u305f\u306e\u3067\u66f8\u304d\u63db\u3048\u307e\u3057\u305f\u3002\n\n####\u53c2\u8003URL\nhttp://astaxie.gitbooks.io/build-web-application-with-golang/content/ja/07.3.html\nhttp://www.utf8-chartable.de/unicode-utf8-table.pl?number=128&utf8=dec\n\n###09. Typoglycemia\n\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3089\u308c\u305f\u5358\u8a9e\u5217\u306b\u5bfe\u3057\u3066\uff0c\u5404\u5358\u8a9e\u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u6587\u5b57\u306f\u6b8b\u3057\uff0c\u305d\u308c\u4ee5\u5916\u306e\u6587\u5b57\u306e\u9806\u5e8f\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u9577\u3055\u304c\uff14\u4ee5\u4e0b\u306e\u5358\u8a9e\u306f\u4e26\u3073\u66ff\u3048\u306a\u3044\u3053\u3068\u3068\u3059\u308b\uff0e\n\u9069\u5f53\u306a\u82f1\u8a9e\u306e\u6587\uff08\u4f8b\u3048\u3070\"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\uff09\u3092\u4e0e\u3048\uff0c\u305d\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\n```test09.go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n\t\"strings\"\n)\n\n//\u5358\u8a9e\u306e\u5206\u5272\nfunc WordsSplit(s string) []string {\n\twords := strings.Split(s, \" \")\n\treturn words\n}\n\n//\u4e0e\u3048\u3089\u308c\u305f\u5358\u8a9e\u306e\u9577\u3055\u304c4\u3088\u308a\u5927\u304d\u3044\u5834\u5408\u3001\u5148\u982d\u3068\u672b\u5c3e\u306e\u6587\u5b57\u306f\u6b8b\u3057\uff0c\n//\u305d\u308c\u4ee5\u5916\u306e\u6587\u5b57\u306e\u9806\u5e8f\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\nfunc RandomizeWord(word string) string {\n\tvar new_word string\n\trunes := []rune(word)\n\tlength := len(runes)\n\n\t//\u6587\u5b57\u5217\u9577\u304c4\u4ee5\u4e0a\u306e\u5834\u5408\n\t/*\n\t\tstring = \"ABCDE\"\n\t\tlength = 5\n\t\tindex = [0,1,2,3,4]\n\t\trand_idx := rand.Perm(length - 2) = [1,0,2] \u2192 1\u3092\u8db3\u305b\u3070 [2,1,3] \u304c\u53d6\u308c\u308b\n\t*/\n\n\tif length > 4 {\n\t\tnew_runes := make([]rune, length)\n\t\trand_idx := rand.Perm(length - 2) // 0 ~ (length-2-1) \u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3079\u305f\u3082\u306e\n\t\tnew_runes[0] = runes[0]           //\u6700\u521d\u3068\u6700\u5f8c\u306f\u540c\u3058\n\t\tnew_runes[length-1] = runes[length-1]\n\n\t\tfor i := range rand_idx {\n\t\t\t//rand_idx\u306e\u5404\u8981\u7d20\u306b\uff11\u3092\u8db3\u305b\u3070\u6700\u521d\u3068\u6700\u5f8c\u4ee5\u5916\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u3068\u308c\u308b\n\t\t\tnew_runes[i+1] = runes[rand_idx[i]+1]\n\t\t}\n\t\tnew_word = string(new_runes)\n\t} else {\n\t\tnew_word = word\n\t}\n\treturn new_word\n}\n\nfunc RandomizeSent(sent string) string {\n\twords := WordsSplit(sent)\n\n\tfor i := 0; i < len(words); i++ {\n\t\twords[i] = RandomizeWord(words[i])\n\t}\n\treturn strings.Join(words, \" \") //\u6700\u5f8c\u306b\u4e00\u3064\u306estring\u306b\u7d50\u5408\n}\n\nfunc main() {\n\n\t//\u5165\u529b\u6587\n\tsent := \"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\n\n\trandom_sent := RandomizeSent(sent)\n\n\tfmt.Printf(\"src  sent : %v\\n\", sent)        //\u5143\u306e\u6587\n\tfmt.Printf(\"rand sent : %v\\n\", random_sent) //\u30e9\u30f3\u30c0\u30e0\u5316\u3055\u308c\u305f\u6587\n}\n\n```\n\u5358\u8a9e\u9577\u304c4\u4ee5\u4e0a\u306e\u5358\u8a9e\u306b\u3064\u3044\u3066\u306f\u3001`rand_idx := rand.Perm(length - 2)` \u3067 0 ~ (length-2-1) \u3092\u4e26\u3073\u66ff\u3048\u305f\u3082\u306e\u3092\u53d6\u5f97\u3057\u3001\u5404\u8981\u7d20\u306b\uff11\u3092\u8db3\u3059\u3053\u3068\u3067\u6700\u521d\u3068\u6700\u5f8c\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4ee5\u5916\u304c\u30e9\u30f3\u30c0\u30e0\u306a\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u53d6\u308c\u308b\u3002\n\n\n\u53c2\u8003URL\nhttps://groups.google.com/forum/#!topic/golang-nuts/JDVCR__dHbI\nhttp://golang.org/pkg/math/rand/\n\n\n\n\n\n"}