{"context": "\u6700\u8fd1redux-saga\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u3044\u305f\u306e\u3060\u304c\u3001\u7528\u8a9e\u306e\u7406\u89e3\u304c\u66d6\u6627\u3060\u3063\u305f\u306e\u3067\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306eGlossary\u3092\u96d1\u306b\u8a33\u3057\u3066\u307f\u305f\u3002\n\nEffect\neffect\u3068\u306fsaga middleware\u306b\u3088\u3063\u3066\u5b9f\u884c\u3055\u308c\u308b\u547d\u4ee4\u3092\u542b\u3080\u30d7\u30ec\u30fc\u30f3\u306aJavaScript\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\nredux-saga\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u63d0\u4f9b\u3059\u308b\u30d5\u30a1\u30af\u30c8\u30ea\u95a2\u6570\u3092\u4f7f\u3046\u3053\u3068\u3067effect\u3092\u751f\u6210\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001call(myfunc, 'arg1', 'arg2')\u304c\u8fd4\u3059effect\u3092yield\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001middleware\u306b\u5bfe\u3057\u3066myfunc('arg1', 'arg2')\u3092\u547c\u3073\u51fa\u3057\u3066\u7d50\u679c\u3092Generator\u306b\u8fd4\u3059\u3088\u3046\u6307\u793a\u3057\u307e\u3059\u3002\n\nTask\ntask\u306f\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u3067\u8d70\u308b\u30d7\u30ed\u30bb\u30b9\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3001redux-saga\u3092\u4f7f\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u8907\u6570\u306etask\u304c\u4e26\u5217\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002fork\u95a2\u6570\u3092\u4f7f\u3046\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306btask\u3092\u751f\u6210\u3067\u304d\u307e\u3059\u3002\nfunction* saga() {\n  ...\n  const task = yield fork(otherSaga, ...args)\n  ...\n}\n\n\nBlocking/Non-blocking call\nBlocking call\u306fSaga\u304ceffect\u3092yield\u3057\u3066\u305d\u306e\u7d50\u679c\u3092\u5f85\u3063\u3066\u304b\u3089\u6b21\u306e\u547d\u4ee4\u3092\u518d\u958b\u3059\u308b\u3053\u3068\u3001\u307e\u305fNon-blocking\u306feffect\u3092yield\u3057\u305f\u3042\u3068\u3059\u3050\u306b\u51e6\u7406\u3092\u518d\u958b\u3059\u308b\u3053\u3068\u3092\u6307\u3057\u307e\u3059\u3002\n\u4f8b\nfunction* saga() {\n  yield take(ACTION)              // Blocking: action\u304c\u6765\u308b\u306e\u3092\u5f85\u3064\n  yield call(ApiFn, ...args)      // Blocking: ApiFn\u304c\u7d42\u308f\u308b\u306e\u3092\u5f85\u3064 (ApiFn\u304cPromise\u3092\u8fd4\u3059\u5834\u5408)\n  yield call(otherSaga, ...args)  // Blocking: otherSaga\u304c\u7d42\u308f\u308b\u306e\u3092\u5f85\u3064\n\n  yield put(...)                   // Blocking: \u975e\u540c\u671f\u306bdispatch\u3059\u308b (Promise.then\u3092\u4f7f\u7528)\n\n  const task = yield fork(otherSaga, ...args)  // Non-blocking: otherSaga\u306e\u7d42\u4e86\u3092\u5f85\u305f\u306a\u3044\n  yield cancel(task)                           // Non-blocking: \u3059\u3050\u306b\u518d\u958b\u3059\u308b\n  // \u307e\u305f\u306f\n  yield join(task)                              // Blocking: task\u304c\u7d42\u308f\u308b\u306e\u3092\u5f85\u3064\n}\n\n\nWatcher/Worker\n\u72ec\u7acb\u3057\u305fSaga\u3092\u4f7f\u3063\u3066\u5236\u5fa1\u30d5\u30ed\u30fc\u3092\u7d44\u7e54\u5316\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002\n- The watcher: dispatch\u3055\u308c\u305faction\u3092\u76e3\u8996\u3057\u3066\u3001action\u3054\u3068\u306bworker\u3092fork\u3059\u308b\n- The worker: action\u3092\u51e6\u7406\u3057\u3066\u7d42\u4e86\u3059\u308b\n\u4f8b\nfunction* watcher() {\n  while (true) {\n    const action = yield take(ACTION)\n    yield fork(worker, action.payload)\n  }\n}\n\nfunction* worker(payload) {\n  // ... \u4f55\u3089\u304b\u306e\u51e6\u7406\n}\n\n\n\u307e\u3068\u3081\n\u5c11\u3057\u3060\u3051\u7406\u89e3\u304c\u6df1\u307e\u3063\u305f\u3088\u3046\u306a... \u66f4\u306b\u66d6\u6627\u306b\u306a\u3063\u305f\u3088\u3046\u306a...\n\u8a33\u304c\u304b\u306a\u308a\u602a\u3057\u3044\u306e\u3067\u9593\u9055\u3063\u3066\u3044\u308b\u70b9\u304c\u3042\u308c\u3070\u6307\u6458\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u3042\u308a\u304c\u305f\u3044\u3067\u3059\u3002\n\u6700\u8fd1redux-saga\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u3044\u305f\u306e\u3060\u304c\u3001\u7528\u8a9e\u306e\u7406\u89e3\u304c\u66d6\u6627\u3060\u3063\u305f\u306e\u3067\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e[Glossary](https://yelouafi.github.io/redux-saga/docs/Glossary.html)\u3092\u96d1\u306b\u8a33\u3057\u3066\u307f\u305f\u3002\n\n## Effect\neffect\u3068\u306fsaga middleware\u306b\u3088\u3063\u3066\u5b9f\u884c\u3055\u308c\u308b\u547d\u4ee4\u3092\u542b\u3080\u30d7\u30ec\u30fc\u30f3\u306aJavaScript\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\nredux-saga\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u63d0\u4f9b\u3059\u308b\u30d5\u30a1\u30af\u30c8\u30ea\u95a2\u6570\u3092\u4f7f\u3046\u3053\u3068\u3067effect\u3092\u751f\u6210\u3067\u304d\u307e\u3059\u3002 \u4f8b\u3048\u3070\u3001`call(myfunc, 'arg1', 'arg2')`\u304c\u8fd4\u3059effect\u3092yield\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001middleware\u306b\u5bfe\u3057\u3066`myfunc('arg1', 'arg2')`\u3092\u547c\u3073\u51fa\u3057\u3066\u7d50\u679c\u3092Generator\u306b\u8fd4\u3059\u3088\u3046\u6307\u793a\u3057\u307e\u3059\u3002\n\n## Task\ntask\u306f\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u3067\u8d70\u308b\u30d7\u30ed\u30bb\u30b9\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3001redux-saga\u3092\u4f7f\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u8907\u6570\u306etask\u304c\u4e26\u5217\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002fork\u95a2\u6570\u3092\u4f7f\u3046\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306btask\u3092\u751f\u6210\u3067\u304d\u307e\u3059\u3002\n\n```javascript\nfunction* saga() {\n  ...\n  const task = yield fork(otherSaga, ...args)\n  ...\n}\n```\n\n## Blocking/Non-blocking call\nBlocking call\u306fSaga\u304ceffect\u3092yield\u3057\u3066\u305d\u306e\u7d50\u679c\u3092\u5f85\u3063\u3066\u304b\u3089\u6b21\u306e\u547d\u4ee4\u3092\u518d\u958b\u3059\u308b\u3053\u3068\u3001\u307e\u305fNon-blocking\u306feffect\u3092yield\u3057\u305f\u3042\u3068\u3059\u3050\u306b\u51e6\u7406\u3092\u518d\u958b\u3059\u308b\u3053\u3068\u3092\u6307\u3057\u307e\u3059\u3002\n\u4f8b\n\n```javascript\nfunction* saga() {\n  yield take(ACTION)              // Blocking: action\u304c\u6765\u308b\u306e\u3092\u5f85\u3064\n  yield call(ApiFn, ...args)      // Blocking: ApiFn\u304c\u7d42\u308f\u308b\u306e\u3092\u5f85\u3064 (ApiFn\u304cPromise\u3092\u8fd4\u3059\u5834\u5408)\n  yield call(otherSaga, ...args)  // Blocking: otherSaga\u304c\u7d42\u308f\u308b\u306e\u3092\u5f85\u3064\n\n  yield put(...)                   // Blocking: \u975e\u540c\u671f\u306bdispatch\u3059\u308b (Promise.then\u3092\u4f7f\u7528)\n\n  const task = yield fork(otherSaga, ...args)  // Non-blocking: otherSaga\u306e\u7d42\u4e86\u3092\u5f85\u305f\u306a\u3044\n  yield cancel(task)                           // Non-blocking: \u3059\u3050\u306b\u518d\u958b\u3059\u308b\n  // \u307e\u305f\u306f\n  yield join(task)                              // Blocking: task\u304c\u7d42\u308f\u308b\u306e\u3092\u5f85\u3064\n}\n```\n\n## Watcher/Worker\n\u72ec\u7acb\u3057\u305fSaga\u3092\u4f7f\u3063\u3066\u5236\u5fa1\u30d5\u30ed\u30fc\u3092\u7d44\u7e54\u5316\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3057\u307e\u3059\u3002\n- The watcher: dispatch\u3055\u308c\u305faction\u3092\u76e3\u8996\u3057\u3066\u3001action\u3054\u3068\u306bworker\u3092fork\u3059\u308b\n- The worker: action\u3092\u51e6\u7406\u3057\u3066\u7d42\u4e86\u3059\u308b\n\u4f8b\n\n```javascript\nfunction* watcher() {\n  while (true) {\n    const action = yield take(ACTION)\n    yield fork(worker, action.payload)\n  }\n}\n\nfunction* worker(payload) {\n  // ... \u4f55\u3089\u304b\u306e\u51e6\u7406\n}\n```\n\n## \u307e\u3068\u3081\n\u5c11\u3057\u3060\u3051\u7406\u89e3\u304c\u6df1\u307e\u3063\u305f\u3088\u3046\u306a... \u66f4\u306b\u66d6\u6627\u306b\u306a\u3063\u305f\u3088\u3046\u306a...\n\u8a33\u304c\u304b\u306a\u308a\u602a\u3057\u3044\u306e\u3067\u9593\u9055\u3063\u3066\u3044\u308b\u70b9\u304c\u3042\u308c\u3070\u6307\u6458\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u3042\u308a\u304c\u305f\u3044\u3067\u3059\u3002\n", "tags": ["redux-saga"]}