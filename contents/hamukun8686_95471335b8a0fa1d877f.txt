{"tags": ["Siv3D"], "context": "Siv3D AdventCalendar 2016 \u306e 3 \u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\n\u6982\u8981\nSiv3D \u306b\u4ed8\u5c5e\u3055\u308c\u3066\u3044\u308b HamFramework \u306f\uff0c2D \u30ab\u30e1\u30e9\u64cd\u4f5c\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u30af\u30e9\u30b9 ham::Camera2D \u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\uff0e\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u30de\u30a6\u30b9\u64cd\u4f5c\u3084 W/A/S/D/\u4e0a\u4e0b\u30ad\u30fc\u5165\u529b\u306b\u3088\u308b 2D \u30ab\u30e1\u30e9\u79fb\u52d5\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\uff0e\n\n\nMain.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n    const Font font(30);\n\n    Camera2D camera;\n\n    while (System::Update())\n    {\n        camera.update();\n        {\n            const auto t1 = camera.createTransformer();\n\n            font(L\"\u3088\u3046\u3053\u305d\u3001Siv3D \u306e\u4e16\u754c\u3078\uff01\").draw();\n\n            Circle(Mouse::PosF(), 50).draw({ 255, 0, 0, 127 });\n        }\n        camera.draw(Palette::Orange);\n    }\n}\n\n\n\n\n\u3053\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u305f\u7406\u7531\n\u30de\u30a6\u30b9\u64cd\u4f5c\u3067\u306e\u30ab\u30e1\u30e9\u79fb\u52d5\u304c\u53ef\u80fd\u306a\u72b6\u6cc1\u3067\u56db\u89d2\u5f62\u3092\u63cf\u753b\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\n\nMain.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n    Vec2 cameraPos(0.0, 0.0);\n\n    const Vec2 rectPos = Window::Size() / 2.0;\n\n    const Vec2 rectSize(100.0, 100.0);\n\n    Vec2 mouseClickStartPos;\n\n    while (System::Update())\n    {\n        if (Input::MouseR.clicked)\n        {\n            mouseClickStartPos = Mouse::Pos();\n        }\n\n        if (Input::MouseR.pressed)\n        {\n            cameraPos += (Mouse::Pos() - mouseClickStartPos) * 0.1;\n\n            Circle(mouseClickStartPos, 100.0).drawFrame(2.0, 2.0);\n            Circle(Mouse::Pos(), 30.0).draw();\n        }\n\n        RectF(rectSize).setCenter(rectPos - cameraPos).draw();\n    }\n}\n\n\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\n\n\u30ab\u30e1\u30e9\u306e\u4f4d\u7f6e cameraPos \u3092\u7528\u610f\u3057\u305d\u306e\u5ea7\u6a19\u3092\u30de\u30a6\u30b9\u306e\u64cd\u4f5c\u306b\u3088\u308a\u52d5\u304b\u3059\n\u56db\u89d2\u5f62\u306e\u63cf\u753b\u6642\u306b\u4f4d\u7f6e rectPos \u304b\u3089\u30ab\u30e1\u30e9\u306e\u4f4d\u7f6e\u3092\u5f15\u304f\n\n\u3053\u3068\u306b\u3088\u308a\uff0c\u30de\u30a6\u30b9\u64cd\u4f5c\u306b\u3088\u308b\u30ab\u30e1\u30e9\u79fb\u52d5\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u3053\u3067\uff0c\u30ab\u30e1\u30e9\u79fb\u52d5\u3060\u3051\u3067\u306a\u304f\u62e1\u5927\u7e2e\u5c0f\u3084\u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u3078\u306e\u5bfe\u5fdc\u306a\u3069\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u304b\uff0e\u63cf\u753b\u5bfe\u8c61\u3059\u3079\u3066\u306e\u4f4d\u7f6e\u3084\u62e1\u5927\u7387\u3092\u500b\u5225\u306b\u64cd\u4f5c\u3059\u308b\u3053\u3068\u304c\u5fc5\u8981\u306b\u306a\u308a\u305d\u3046\u3067\u304c\uff0c\u53ef\u80fd\u3067\u3042\u308c\u3070\u63cf\u753b\u3068\u30ab\u30e1\u30e9\u64cd\u4f5c\u306f\u5206\u96e2\u3057\u3066\u5b9f\u88c5\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3057\u305f\uff0e\u4ed6\u306b\u3082\u540c\u3058\u601d\u3044\u3092\u3057\u3066\u3044\u308b\u4eba\u304c\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\uff0cSiv3D \u4e0a\u3067\u306e2D\u30ab\u30e1\u30e9\u79fb\u52d5\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b Camera2D \u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\uff0e\n\n2D\u30ab\u30e1\u30e9\u64cd\u4f5c\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b Camera2D\nSiv3D \u306b\u306f\u63cf\u753b\u3068\u30de\u30a6\u30b9\u306e\u5ea7\u6a19\u306b\u4efb\u610f\u306e\u884c\u5217\u3092\u4f7f\u3063\u3066\u79fb\u52d5\u3084\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u4e00\u5f8b\u306b\u9069\u7528\u3067\u304d\u308b Graphics2D::PushTransform() \u3068 Graphics2D::PopTransform() \u304c\u3042\u308a\u307e\u3059\uff0eGraphics2D::PushTransform() \u306b\u306f\u79fb\u52d5\u3084\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u884c\u5217\u5f62\u5f0f\u3067\u8868\u73fe\u3059\u308b Mat3x2 \u578b\u306e\u5024\u3092\u6e21\u3057\u307e\u3059\uff0eGraphics2D::PopTransform() \u304c\u547c\u3070\u308c\u308b\u3068\uff0c\u305d\u308c\u307e\u3067\u547c\u3070\u308c\u305f\u884c\u5217\u3092\u6700\u65b0\u306e\u9806\u304b\u3089\u89e3\u9664\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\u3055\u3089\u306b\uff0c\u30b9\u30b3\u30fc\u30d7\u304b\u3089\u5916\u308c\u305f\u969b\u306b Push \u3057\u305f\u884c\u5217\u304c\u81ea\u52d5\u7684\u306b Pop \u3057\u3066\u304f\u308c\u308b\uff0cTransformer2D \u30af\u30e9\u30b9\u304c Siv3D \u306b\u5b58\u5728\u3057\u307e\u3059\uff0eHamFramework \u306e Camera2D \u306f\u3053\u306e Transformer2D \u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570 createTransformer() \u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u308a\uff0c\u7279\u5b9a\u306e\u30b9\u30b3\u30fc\u30d7\u5185\u306e\u63cf\u753b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u79fb\u52d5\u30fb\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u884c\u3044\u307e\u3059\uff0e\n\n\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\n\n\nMain.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n    Camera2D camera;\n\n    while (System::Update())\n    {\n        camera.update();\n        {\n            const auto t1 = camera.createTransformer();\n\n            Circle(100, 100, 100).draw(Palette::Red);\n            Rect(150, 100, 200, 200).draw(Palette::Orange);\n            Line(50, 400, 600, 50).draw(3, Color(128, 255, 255));\n            Circle(400, 400, 200).draw(Color(0, 0, 255, 127));\n        }\n        camera.draw(Palette::Orange);\n    }\n}\n\n\n\n\n\nHamFramework.hpp \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\n\nCamera2D \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n\u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u4e2d\u3067 Camera2D::update() \u3092\u547c\u3076\n\n{ } \u3067\u30b9\u30b3\u30fc\u30d7\u3092\u4f5c\u308a\u3001\u305d\u306e\u4e2d\u3067 Camera2D::createTransformer() \u3092\u4f7f\u3063\u3066 Transformer2D \u3092\u4f5c\u6210\n\u30ab\u30e1\u30e9\u64cd\u4f5c\u3059\u308b\u5bfe\u8c61\u3067\u3042\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u63cf\u753b\n\u30b9\u30b3\u30fc\u30d7\u5916\u3067 Camera2D \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e draw() \u3092\u547c\u3076\uff08\u4efb\u610f\uff09\n\n\u3053\u308c\u306b\u3088\u308a\n\n\u30de\u30a6\u30b9\u306e\u53f3\u30af\u30ea\u30c3\u30af\u30fb\u30c9\u30e9\u30c3\u30b0\u307e\u305f\u306f W/A/S/D \u30ad\u30fc\u3067\u30ab\u30e1\u30e9\u306e\u79fb\u52d5\n\u30de\u30a6\u30b9\u306e\u30db\u30a4\u30fc\u30eb\u307e\u305f\u306f\u4e0a\u4e0b\u30ad\u30fc\u3067\u30ab\u30e1\u30e9\u306e\u30ba\u30fc\u30e0\u64cd\u4f5c\n\n\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\n\u30de\u30a6\u30b9\u5ea7\u6a19\n\u30de\u30a6\u30b9\u5ea7\u6a19\u306e\u53d6\u6271\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\uff0e\n\n\nMain.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n    Camera2D camera;\n\n    while (System::Update())\n    {\n        camera.update();\n        {\n            const auto t1 = camera.createTransformer();\n\n            Circle(Mouse::Pos(), 2.0).drawFrame(0.1, 0.1);\n            Circle(Mouse::PosF(), 1.0).draw();\n        }\n        camera.draw(Palette::Orange);\n    }\n}\n\n\n\n\u30de\u30a6\u30b9\u5ea7\u6a19\u306e\u53d6\u5f97\u65b9\u6cd5\u306b\u306f\u4e8c\u7a2e\u985e\u3042\u308a\u307e\u3059\uff0ePoint \u578b\u3067\u30de\u30a6\u30b9\u5ea7\u6a19\u3092\u53d6\u5f97\u3059\u308b Mouse::Pos() \u3068 Vec2 \u578b\u3067\u30de\u30a6\u30b9\u5ea7\u6a19\u3092\u53d6\u5f97\u3059\u308b Mouse::PosF() \u3067\u3059\uff0eMouse::Pos() \u3067\u306f\u30ba\u30fc\u30e0\u6642\u306b\u5b9f\u969b\u306e\u30de\u30a6\u30b9\u4f4d\u7f6e\u304b\u3089\u306f\u96e2\u308c\u305f\u5834\u6240\u3092\u6307\u3057\u793a\u3059\u3053\u3068\u304c\u3042\u308b\u305f\u3081\uff0cCamera2D \u3068\u3046\u307e\u304f\u9023\u643a\u3055\u305b\u308b\u306b\u306f Mouse::PosF() \u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n\u30ab\u30e1\u30e9\u64cd\u4f5c\u306e\u8abf\u6574\n\u30ad\u30fc\u30dc\u30fc\u30c9\u307e\u305f\u306f\u30de\u30a6\u30b9\u306e\u3069\u3061\u3089\u304b\u306e\u307f\u3067\u30ab\u30e1\u30e9\u3092\u64cd\u4f5c\u3057\u305f\u3044\u5834\u5408\u3084\uff0c\u30ab\u30e1\u30e9\u306e\u79fb\u52d5\u901f\u5ea6\u306a\u3069\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\u3068\u304d\u306b\u306f\uff0cCamera2D::update() \u306e\u5f15\u6570\u3092\u5909\u66f4\u3057\u307e\u3059\uff0e\u5f15\u6570\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n\nspeed: \u30ab\u30e1\u30e9\u306e\u901f\u5ea6\n\nscaleRatio: \u30ba\u30fc\u30e0\u5909\u66f4\u7387 [0.0~1.0]\n\nmouseSpeedRatio: \u30de\u30a6\u30b9\u64cd\u4f5c\u306e\u5f71\u97ff\u7387 [0.0~1.0]\n\nlerpRatio: \u88dc\u9593\u7387 [0.0~1.0]\uff08\u306c\u308b\u3063\u3068\u611f\uff09\n\nuseKeyControl: \u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u3092\u53d7\u3051\u4ed8\u3051\u308b\u304b\u3069\u3046\u304b\n\nuseMouseControl: \u30de\u30a6\u30b9\u5165\u529b\u3092\u53d7\u3051\u4ed8\u3051\u308b\u304b\u3069\u3046\u304b\n\n\u4f8b\u3048\u3070\uff0c\u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u3092\u53d7\u3051\u4ed8\u3051\u305a\u30de\u30a6\u30b9\u5165\u529b\u306e\u307f\u3092\u53d7\u3051\u4ed8\u3051\u305f\u3044\u5834\u5408\u306b\u306f\uff0cuseKeyControl \u3092 false \u306b\u3057\uff0cuseMouseControl \u3092 true \u306b\u3057\u307e\u3059\uff0e\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3069\u3061\u3089\u3082 true \u3067\u3059\uff0e\uff09\n\n\u30ab\u30e1\u30e9\u4f4d\u7f6e\u30fb\u30ba\u30fc\u30e0\u306e\u5909\u66f4\n\n\nMain.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n    Camera2D camera;\n\n    Vec2 playerPos = Window::Center();\n\n    const Rect rect(20, 20, 200, 100);\n\n    const Circle circle(150, 300, 100);\n\n    const Polygon star = Geometry2D::CreateStar(200, 0.0, Vec2(400, 250));\n\n    while (System::Update())\n    {\n        camera.update(10.0, 1.1, 0.01, 0.2, false, true);\n        {\n            const auto t1 = camera.createTransformer();\n\n            playerPos += Vec2(Input::KeyRight.pressed - Input::KeyLeft.pressed, Input::KeyDown.pressed - Input::KeyUp.pressed) * 10.0;\n\n            camera.setTargetPos(playerPos);\n\n            const Circle player(playerPos, 30);\n\n            // \u30d7\u30ec\u30a4\u30e4\u30fc\u3068\u91cd\u306a\u3063\u3066\u3044\u305f\u3089\u8d64\u3001\u305d\u3046\u3067\u306a\u304b\u3063\u305f\u3089\u9ec4\u8272\u3067\u56f3\u5f62\u3092\u63cf\u304f\n            rect.draw(player.intersects(rect) ? Palette::Red : Palette::Yellow);\n            circle.draw(player.intersects(circle) ? Palette::Red : Palette::Yellow);\n            star.draw(player.intersects(star) ? Palette::Red : Palette::Yellow);\n\n            player.draw();\n        }\n    }\n}\n\n\n\n\u3053\u3053\u3067\u306f\uff0cCamera2D \u306e\u30ab\u30e1\u30e9\u4f4d\u7f6e\u3092\u30d7\u30ec\u30a4\u30e4\u30fc\u3068\u540c\u3058\u4f4d\u7f6e\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\n\u203bCamera2D \u306e setTargetPos() \u6b21\u56de\u306e Siv3D \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3067\u8ffd\u52a0\u3055\u308c\u308b\u95a2\u6570\u3067\u3059\uff0e\u305d\u308c\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u4f7f\u7528\u3067\u304d\u306a\u3044\u306e\u3067\uff0c\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092 HamFramework/CameraManager.hpp \u306e 227 \u884c\u76ee\u306b\u5165\u308c\u3066\u304f\u3060\u3055\u3044\uff0e\n\nCameraManager2D.hpp\n        void setTargetPos(const Vec2& targetPos)\n        {\n            m_targetPos = targetPos;\n        }\n\n        void setTargetScale(const double targetScale)\n        {\n            m_targetScale = targetScale;\n        }\n\n\n\n\n\u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u6642\u306b\u304a\u3051\u308b\u30ad\u30fc\u5272\u308a\u5f53\u3066\nCamera2D \u306e\u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u306e\u30ad\u30fc\u5272\u308a\u5f53\u3066\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u79fb\u52d5\u304c W/A/S/D, \u30ba\u30fc\u30e0\u64cd\u4f5c\u304c\u4e0a\u4e0b\u30ad\u30fc\u3068\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\u5909\u66f4\u3092\u3057\u305f\u3044\u5834\u5408\u306b\u306f\uff0csetKeyConfig() \u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u305f\u3068\u3048\u3070\uff0c\u79fb\u52d5\u306b\u4e0a\u4e0b\u5de6\u53f3\u30ad\u30fc\uff0c\u30ba\u30fc\u30e0\u64cd\u4f5c\u306b Z\u30fbX \u30ad\u30fc\u3092\u5272\u308a\u5f53\u3066\u308b\u306b\u306f\n\nMain.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n    const std::array<s3d::Key, 6> keyConfig =\n    {\n        s3d::Input::KeyUp, s3d::Input::KeyLeft, s3d::Input::KeyDown, s3d::Input::KeyRight,\n        s3d::Input::KeyZ, s3d::Input::KeyX\n    };\n\n    Camera2D camera;\n\n    camera.setKeyConfig(keyConfig);\n\n    while (System::Update())\n    {\n        camera.update();\n        {\n            const auto t1 = camera.createTransformer();\n\n            Circle(100, 100, 100).draw(Palette::Red);\n            Rect(150, 100, 200, 200).draw(Palette::Orange);\n            Line(50, 400, 600, 50).draw(3, Color(128, 255, 255));\n            Circle(400, 400, 200).draw(Color(0, 0, 255, 127));\n        }\n        camera.draw(Palette::Orange);\n    }\n}\n\n\n\n\u306e\u3088\u3046\u306b\uff0cstd::array<s3d::Key, 6> \u3067\u4f5c\u6210\u3055\u308c\u308b\u30ad\u30fc\u5272\u308a\u5f53\u3066\u3092 Camera2D::setKeyConfig() \u306e\u5f15\u6570\u306b\u5165\u308c\u3066\u304f\u3060\u3055\u3044\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306e\u30ad\u30fc\u5272\u308a\u5f53\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\nstd::array<s3d::Key, 6> m_keyConfig =\n{\n    s3d::Input::KeyW, s3d::Input::KeyA, s3d::Input::KeyS, s3d::Input::KeyD,\n    s3d::Input::KeyUp, s3d::Input::KeyDown\n};\n\n\n\nScalableWindow \u3068\u306e\u4f75\u7528\nCamera2D \u3068\u540c\u69d8\uff0cTransformer2D \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5927\u304d\u3055\u3092\u81ea\u7531\u306b\u5909\u66f4\u53ef\u80fd\u306a\u6a5f\u80fd ham::ScalableWindow \u3092 HamFramework \u3067\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\uff0eCamera2D \u3068 ScalableWindow \u3092\u540c\u6642\u306b\u4f7f\u3044\u305f\u3044\u5834\u5408\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\n\nMain.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n    Camera2D camera;\n\n    ScalableWindow::Setup();\n\n    while (System::Update())\n    {\n        camera.update();\n        {\n            const auto t1 = camera.createTransformer();\n            const auto t2 = ScalableWindow::CreateTransformer();\n\n            Circle(100, 100, 100).draw(Palette::Red);\n            Rect(150, 100, 200, 200).draw(Palette::Orange);\n            Line(50, 400, 600, 50).draw(3, Color(128, 255, 255));\n            Circle(400, 400, 200).draw(Color(0, 0, 255, 127));\n        }\n        camera.draw(Palette::Orange);\n    }\n}\n\n\n\n\n\nScalableWindow::Setup() \u3092\u547c\u3076\n\nCamera2D::createTransformer() \u306e\u5f8c ScalableWindow::CreateTransformer() \u3067Transformer2D \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u751f\u6210\n\n\n\u30ab\u30e1\u30e9\u64cd\u4f5c\u3092\u3082\u3063\u3068\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\nCamera2D \u306e\u64cd\u4f5c\u3092\u3082\u3063\u3068\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\u5834\u5408\u306f\uff0cBasicCamera2D \u3082\u3057\u304f\u306f Camera2D \u3092\u7d99\u627f\u3057\u305f\u72ec\u81ea\u306e\u30ab\u30e1\u30e9\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u4f8b\u3048\u3070\uff0cY\u8ef8\u306e\u6b63\u306e\u65b9\u5411\u3092\u4e0a\u5411\u304d\u306b\u8abf\u6574\u3057\u305f\u30ab\u30e1\u30e9\u30af\u30e9\u30b9 CameraBox2D \u306f Camera2D \u306e\u4e00\u90e8\u306e\u95a2\u6570\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3067\u4f5c\u6210\u3057\u307e\u3057\u305f\uff0e\n\n\u307e\u3068\u3081\nSiv3D Advent Calendar 2016 3 \u65e5\u76ee\u306f Camera2D \u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3057\u305f\uff0e\n\u660e\u65e5\u306f @agehama_ \u3055\u3093\u306e\u8a18\u4e8b\u3067\u3059\uff0e\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\uff0e\n[Siv3D AdventCalendar 2016](http://qiita.com/advent-calendar/2016/siv3d) \u306e 3 \u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\n# \u6982\u8981\nSiv3D \u306b\u4ed8\u5c5e\u3055\u308c\u3066\u3044\u308b HamFramework \u306f\uff0c2D \u30ab\u30e1\u30e9\u64cd\u4f5c\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u30af\u30e9\u30b9 `ham::Camera2D` \u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\uff0e\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u30de\u30a6\u30b9\u64cd\u4f5c\u3084 W/A/S/D/\u4e0a\u4e0b\u30ad\u30fc\u5165\u529b\u306b\u3088\u308b 2D \u30ab\u30e1\u30e9\u79fb\u52d5\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\uff0e\n\n![Siv3DCamera002.gif](https://qiita-image-store.s3.amazonaws.com/0/34295/56f03860-33f3-089a-956d-4681ad1d9ca8.gif)\n\n```cpp:Main.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n\tconst Font font(30);\n\n\tCamera2D camera;\n\n\twhile (System::Update())\n\t{\n\t\tcamera.update();\n\t\t{\n\t\t\tconst auto t1 = camera.createTransformer();\n\n\t\t\tfont(L\"\u3088\u3046\u3053\u305d\u3001Siv3D \u306e\u4e16\u754c\u3078\uff01\").draw();\n\n\t\t\tCircle(Mouse::PosF(), 50).draw({ 255, 0, 0, 127 });\n\t\t}\n\t\tcamera.draw(Palette::Orange);\n\t}\n}\n\n```\n\n# \u3053\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u305f\u7406\u7531\n\u30de\u30a6\u30b9\u64cd\u4f5c\u3067\u306e\u30ab\u30e1\u30e9\u79fb\u52d5\u304c\u53ef\u80fd\u306a\u72b6\u6cc1\u3067\u56db\u89d2\u5f62\u3092\u63cf\u753b\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\n![Siv3DCamera001.gif](https://qiita-image-store.s3.amazonaws.com/0/34295/cc47028f-0c51-0106-2861-876ec5649662.gif)\n\n\n```cpp:Main.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n\tVec2 cameraPos(0.0, 0.0);\n\n\tconst Vec2 rectPos = Window::Size() / 2.0;\n\n\tconst Vec2 rectSize(100.0, 100.0);\n\n\tVec2 mouseClickStartPos;\n\n\twhile (System::Update())\n\t{\n\t\tif (Input::MouseR.clicked)\n\t\t{\n\t\t\tmouseClickStartPos = Mouse::Pos();\n\t\t}\n\n\t\tif (Input::MouseR.pressed)\n\t\t{\n\t\t\tcameraPos += (Mouse::Pos() - mouseClickStartPos) * 0.1;\n\n\t\t\tCircle(mouseClickStartPos, 100.0).drawFrame(2.0, 2.0);\n\t\t\tCircle(Mouse::Pos(), 30.0).draw();\n\t\t}\n\n\t\tRectF(rectSize).setCenter(rectPos - cameraPos).draw();\n\t}\n}\n\n```\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\n\n1. \u30ab\u30e1\u30e9\u306e\u4f4d\u7f6e `cameraPos` \u3092\u7528\u610f\u3057\u305d\u306e\u5ea7\u6a19\u3092\u30de\u30a6\u30b9\u306e\u64cd\u4f5c\u306b\u3088\u308a\u52d5\u304b\u3059\n2. \u56db\u89d2\u5f62\u306e\u63cf\u753b\u6642\u306b\u4f4d\u7f6e `rectPos` \u304b\u3089\u30ab\u30e1\u30e9\u306e\u4f4d\u7f6e\u3092\u5f15\u304f\n\n\u3053\u3068\u306b\u3088\u308a\uff0c\u30de\u30a6\u30b9\u64cd\u4f5c\u306b\u3088\u308b\u30ab\u30e1\u30e9\u79fb\u52d5\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\uff0e\u3053\u3053\u3067\uff0c\u30ab\u30e1\u30e9\u79fb\u52d5\u3060\u3051\u3067\u306a\u304f\u62e1\u5927\u7e2e\u5c0f\u3084\u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u3078\u306e\u5bfe\u5fdc\u306a\u3069\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u304b\uff0e\u63cf\u753b\u5bfe\u8c61\u3059\u3079\u3066\u306e\u4f4d\u7f6e\u3084\u62e1\u5927\u7387\u3092\u500b\u5225\u306b\u64cd\u4f5c\u3059\u308b\u3053\u3068\u304c\u5fc5\u8981\u306b\u306a\u308a\u305d\u3046\u3067\u304c\uff0c\u53ef\u80fd\u3067\u3042\u308c\u3070\u63cf\u753b\u3068\u30ab\u30e1\u30e9\u64cd\u4f5c\u306f\u5206\u96e2\u3057\u3066\u5b9f\u88c5\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3057\u305f\uff0e\u4ed6\u306b\u3082\u540c\u3058\u601d\u3044\u3092\u3057\u3066\u3044\u308b\u4eba\u304c\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\uff0cSiv3D \u4e0a\u3067\u306e2D\u30ab\u30e1\u30e9\u79fb\u52d5\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b Camera2D \u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\uff0e\n\n# 2D\u30ab\u30e1\u30e9\u64cd\u4f5c\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b Camera2D\n\nSiv3D \u306b\u306f\u63cf\u753b\u3068\u30de\u30a6\u30b9\u306e\u5ea7\u6a19\u306b\u4efb\u610f\u306e\u884c\u5217\u3092\u4f7f\u3063\u3066\u79fb\u52d5\u3084\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u4e00\u5f8b\u306b\u9069\u7528\u3067\u304d\u308b `Graphics2D::PushTransform()` \u3068 `Graphics2D::PopTransform()` \u304c\u3042\u308a\u307e\u3059\uff0e`Graphics2D::PushTransform()` \u306b\u306f\u79fb\u52d5\u3084\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u884c\u5217\u5f62\u5f0f\u3067\u8868\u73fe\u3059\u308b `Mat3x2` \u578b\u306e\u5024\u3092\u6e21\u3057\u307e\u3059\uff0e`Graphics2D::PopTransform()` \u304c\u547c\u3070\u308c\u308b\u3068\uff0c\u305d\u308c\u307e\u3067\u547c\u3070\u308c\u305f\u884c\u5217\u3092\u6700\u65b0\u306e\u9806\u304b\u3089\u89e3\u9664\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\u3055\u3089\u306b\uff0c\u30b9\u30b3\u30fc\u30d7\u304b\u3089\u5916\u308c\u305f\u969b\u306b Push \u3057\u305f\u884c\u5217\u304c\u81ea\u52d5\u7684\u306b Pop \u3057\u3066\u304f\u308c\u308b\uff0c`Transformer2D` \u30af\u30e9\u30b9\u304c Siv3D \u306b\u5b58\u5728\u3057\u307e\u3059\uff0eHamFramework \u306e Camera2D \u306f\u3053\u306e Transformer2D \u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570 `createTransformer()` \u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u308a\uff0c\u7279\u5b9a\u306e\u30b9\u30b3\u30fc\u30d7\u5185\u306e\u63cf\u753b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u79fb\u52d5\u30fb\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u884c\u3044\u307e\u3059\uff0e\n\n\n# \u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\n\n![Siv3DCamera003.gif](https://qiita-image-store.s3.amazonaws.com/0/34295/9d7f87b5-e394-241f-c306-5b79f7245056.gif)\n\n```cpp:Main.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n\tCamera2D camera;\n\n\twhile (System::Update())\n\t{\n\t\tcamera.update();\n\t\t{\n\t\t\tconst auto t1 = camera.createTransformer();\n\n\t\t\tCircle(100, 100, 100).draw(Palette::Red);\n\t\t\tRect(150, 100, 200, 200).draw(Palette::Orange);\n\t\t\tLine(50, 400, 600, 50).draw(3, Color(128, 255, 255));\n\t\t\tCircle(400, 400, 200).draw(Color(0, 0, 255, 127));\n\t\t}\n\t\tcamera.draw(Palette::Orange);\n\t}\n}\n\n```\n\n1. `HamFramework.hpp` \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\n2. `Camera2D` \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n3. \u30e1\u30a4\u30f3\u30eb\u30fc\u30d7\u306e\u4e2d\u3067 `Camera2D::update()` \u3092\u547c\u3076\n4. `{ }` \u3067\u30b9\u30b3\u30fc\u30d7\u3092\u4f5c\u308a\u3001\u305d\u306e\u4e2d\u3067 `Camera2D::createTransformer()` \u3092\u4f7f\u3063\u3066 `Transformer2D` \u3092\u4f5c\u6210\n5. \u30ab\u30e1\u30e9\u64cd\u4f5c\u3059\u308b\u5bfe\u8c61\u3067\u3042\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u63cf\u753b\n6. \u30b9\u30b3\u30fc\u30d7\u5916\u3067 `Camera2D` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e `draw()` \u3092\u547c\u3076\uff08\u4efb\u610f\uff09\n\n\u3053\u308c\u306b\u3088\u308a\n\n- \u30de\u30a6\u30b9\u306e\u53f3\u30af\u30ea\u30c3\u30af\u30fb\u30c9\u30e9\u30c3\u30b0\u307e\u305f\u306f W/A/S/D \u30ad\u30fc\u3067\u30ab\u30e1\u30e9\u306e\u79fb\u52d5\n- \u30de\u30a6\u30b9\u306e\u30db\u30a4\u30fc\u30eb\u307e\u305f\u306f\u4e0a\u4e0b\u30ad\u30fc\u3067\u30ab\u30e1\u30e9\u306e\u30ba\u30fc\u30e0\u64cd\u4f5c\n\n\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\n# \u30de\u30a6\u30b9\u5ea7\u6a19\n\n\u30de\u30a6\u30b9\u5ea7\u6a19\u306e\u53d6\u6271\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\uff0e\n\n![Siv3DCamera004.gif](https://qiita-image-store.s3.amazonaws.com/0/34295/c998799b-1f08-5db9-d5e8-e0029169317d.gif)\n\n```cpp:Main.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n\tCamera2D camera;\n\n\twhile (System::Update())\n\t{\n\t\tcamera.update();\n\t\t{\n\t\t\tconst auto t1 = camera.createTransformer();\n\n\t\t\tCircle(Mouse::Pos(), 2.0).drawFrame(0.1, 0.1);\n\t\t\tCircle(Mouse::PosF(), 1.0).draw();\n\t\t}\n\t\tcamera.draw(Palette::Orange);\n\t}\n}\n\n```\n\n\u30de\u30a6\u30b9\u5ea7\u6a19\u306e\u53d6\u5f97\u65b9\u6cd5\u306b\u306f\u4e8c\u7a2e\u985e\u3042\u308a\u307e\u3059\uff0e`Point` \u578b\u3067\u30de\u30a6\u30b9\u5ea7\u6a19\u3092\u53d6\u5f97\u3059\u308b `Mouse::Pos()` \u3068 `Vec2` \u578b\u3067\u30de\u30a6\u30b9\u5ea7\u6a19\u3092\u53d6\u5f97\u3059\u308b `Mouse::PosF()` \u3067\u3059\uff0e`Mouse::Pos()` \u3067\u306f\u30ba\u30fc\u30e0\u6642\u306b\u5b9f\u969b\u306e\u30de\u30a6\u30b9\u4f4d\u7f6e\u304b\u3089\u306f\u96e2\u308c\u305f\u5834\u6240\u3092\u6307\u3057\u793a\u3059\u3053\u3068\u304c\u3042\u308b\u305f\u3081\uff0cCamera2D \u3068\u3046\u307e\u304f\u9023\u643a\u3055\u305b\u308b\u306b\u306f `Mouse::PosF()` \u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n# \u30ab\u30e1\u30e9\u64cd\u4f5c\u306e\u8abf\u6574\n\n\u30ad\u30fc\u30dc\u30fc\u30c9\u307e\u305f\u306f\u30de\u30a6\u30b9\u306e\u3069\u3061\u3089\u304b\u306e\u307f\u3067\u30ab\u30e1\u30e9\u3092\u64cd\u4f5c\u3057\u305f\u3044\u5834\u5408\u3084\uff0c\u30ab\u30e1\u30e9\u306e\u79fb\u52d5\u901f\u5ea6\u306a\u3069\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\u3068\u304d\u306b\u306f\uff0c`Camera2D::update()` \u306e\u5f15\u6570\u3092\u5909\u66f4\u3057\u307e\u3059\uff0e\u5f15\u6570\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n1. `speed`: \u30ab\u30e1\u30e9\u306e\u901f\u5ea6\n2. `scaleRatio`: \u30ba\u30fc\u30e0\u5909\u66f4\u7387 [0.0~1.0]\n3. `mouseSpeedRatio`: \u30de\u30a6\u30b9\u64cd\u4f5c\u306e\u5f71\u97ff\u7387 [0.0~1.0]\n4. `lerpRatio`: \u88dc\u9593\u7387 [0.0~1.0]\uff08\u306c\u308b\u3063\u3068\u611f\uff09\n5. `useKeyControl`: \u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u3092\u53d7\u3051\u4ed8\u3051\u308b\u304b\u3069\u3046\u304b\n6. `useMouseControl`: \u30de\u30a6\u30b9\u5165\u529b\u3092\u53d7\u3051\u4ed8\u3051\u308b\u304b\u3069\u3046\u304b\n\n\u4f8b\u3048\u3070\uff0c\u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u3092\u53d7\u3051\u4ed8\u3051\u305a\u30de\u30a6\u30b9\u5165\u529b\u306e\u307f\u3092\u53d7\u3051\u4ed8\u3051\u305f\u3044\u5834\u5408\u306b\u306f\uff0c`useKeyControl` \u3092 `false` \u306b\u3057\uff0c`useMouseControl` \u3092 `true` \u306b\u3057\u307e\u3059\uff0e\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3069\u3061\u3089\u3082 `true` \u3067\u3059\uff0e\uff09\n\n# \u30ab\u30e1\u30e9\u4f4d\u7f6e\u30fb\u30ba\u30fc\u30e0\u306e\u5909\u66f4\n\n![Siv3DCamera005.gif](https://qiita-image-store.s3.amazonaws.com/0/34295/b08f1993-fd7b-7ee0-65a9-36dcfc5fb5d9.gif)\n\n```cpp:Main.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n\tCamera2D camera;\n\n\tVec2 playerPos = Window::Center();\n\n\tconst Rect rect(20, 20, 200, 100);\n\n\tconst Circle circle(150, 300, 100);\n\n\tconst Polygon star = Geometry2D::CreateStar(200, 0.0, Vec2(400, 250));\n\n\twhile (System::Update())\n\t{\n\t\tcamera.update(10.0, 1.1, 0.01, 0.2, false, true);\n\t\t{\n\t\t\tconst auto t1 = camera.createTransformer();\n\n\t\t\tplayerPos += Vec2(Input::KeyRight.pressed - Input::KeyLeft.pressed, Input::KeyDown.pressed - Input::KeyUp.pressed) * 10.0;\n\n\t\t\tcamera.setTargetPos(playerPos);\n\n\t\t\tconst Circle player(playerPos, 30);\n\n\t\t\t// \u30d7\u30ec\u30a4\u30e4\u30fc\u3068\u91cd\u306a\u3063\u3066\u3044\u305f\u3089\u8d64\u3001\u305d\u3046\u3067\u306a\u304b\u3063\u305f\u3089\u9ec4\u8272\u3067\u56f3\u5f62\u3092\u63cf\u304f\n\t\t\trect.draw(player.intersects(rect) ? Palette::Red : Palette::Yellow);\n\t\t\tcircle.draw(player.intersects(circle) ? Palette::Red : Palette::Yellow);\n\t\t\tstar.draw(player.intersects(star) ? Palette::Red : Palette::Yellow);\n\n\t\t\tplayer.draw();\n\t\t}\n\t}\n}\n\n```\n\n\u3053\u3053\u3067\u306f\uff0c`Camera2D` \u306e\u30ab\u30e1\u30e9\u4f4d\u7f6e\u3092\u30d7\u30ec\u30a4\u30e4\u30fc\u3068\u540c\u3058\u4f4d\u7f6e\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\u203b`Camera2D` \u306e `setTargetPos()` \u6b21\u56de\u306e Siv3D \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3067\u8ffd\u52a0\u3055\u308c\u308b\u95a2\u6570\u3067\u3059\uff0e\u305d\u308c\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u4f7f\u7528\u3067\u304d\u306a\u3044\u306e\u3067\uff0c\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092 `HamFramework/CameraManager.hpp` \u306e 227 \u884c\u76ee\u306b\u5165\u308c\u3066\u304f\u3060\u3055\u3044\uff0e\n\n```cpp:CameraManager2D.hpp\n\t\tvoid setTargetPos(const Vec2& targetPos)\n\t\t{\n\t\t\tm_targetPos = targetPos;\n\t\t}\n\n\t\tvoid setTargetScale(const double targetScale)\n\t\t{\n\t\t\tm_targetScale = targetScale;\n\t\t}\n\n```\n\n\n# \u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u6642\u306b\u304a\u3051\u308b\u30ad\u30fc\u5272\u308a\u5f53\u3066\n\n`Camera2D` \u306e\u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u306e\u30ad\u30fc\u5272\u308a\u5f53\u3066\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u79fb\u52d5\u304c W/A/S/D, \u30ba\u30fc\u30e0\u64cd\u4f5c\u304c\u4e0a\u4e0b\u30ad\u30fc\u3068\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\u5909\u66f4\u3092\u3057\u305f\u3044\u5834\u5408\u306b\u306f\uff0c`setKeyConfig()` \u3092\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u305f\u3068\u3048\u3070\uff0c\u79fb\u52d5\u306b\u4e0a\u4e0b\u5de6\u53f3\u30ad\u30fc\uff0c\u30ba\u30fc\u30e0\u64cd\u4f5c\u306b Z\u30fbX \u30ad\u30fc\u3092\u5272\u308a\u5f53\u3066\u308b\u306b\u306f\n\n```cpp:Main.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n\tconst std::array<s3d::Key, 6> keyConfig =\n\t{\n\t\ts3d::Input::KeyUp, s3d::Input::KeyLeft, s3d::Input::KeyDown, s3d::Input::KeyRight,\n\t\ts3d::Input::KeyZ, s3d::Input::KeyX\n\t};\n\n\tCamera2D camera;\n\n\tcamera.setKeyConfig(keyConfig);\n\n\twhile (System::Update())\n\t{\n\t\tcamera.update();\n\t\t{\n\t\t\tconst auto t1 = camera.createTransformer();\n\n\t\t\tCircle(100, 100, 100).draw(Palette::Red);\n\t\t\tRect(150, 100, 200, 200).draw(Palette::Orange);\n\t\t\tLine(50, 400, 600, 50).draw(3, Color(128, 255, 255));\n\t\t\tCircle(400, 400, 200).draw(Color(0, 0, 255, 127));\n\t\t}\n\t\tcamera.draw(Palette::Orange);\n\t}\n}\n\n```\n\n\u306e\u3088\u3046\u306b\uff0c`std::array<s3d::Key, 6>` \u3067\u4f5c\u6210\u3055\u308c\u308b\u30ad\u30fc\u5272\u308a\u5f53\u3066\u3092 `Camera2D::setKeyConfig()` \u306e\u5f15\u6570\u306b\u5165\u308c\u3066\u304f\u3060\u3055\u3044\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306e\u30ad\u30fc\u5272\u308a\u5f53\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n\n```cpp\nstd::array<s3d::Key, 6> m_keyConfig =\n{\n\ts3d::Input::KeyW, s3d::Input::KeyA, s3d::Input::KeyS, s3d::Input::KeyD,\n\ts3d::Input::KeyUp, s3d::Input::KeyDown\n};\n\n```\n\n# ScalableWindow \u3068\u306e\u4f75\u7528\n\n`Camera2D` \u3068\u540c\u69d8\uff0c`Transformer2D` \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u5927\u304d\u3055\u3092\u81ea\u7531\u306b\u5909\u66f4\u53ef\u80fd\u306a\u6a5f\u80fd `ham::ScalableWindow` \u3092 HamFramework \u3067\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\uff0eCamera2D \u3068 ScalableWindow \u3092\u540c\u6642\u306b\u4f7f\u3044\u305f\u3044\u5834\u5408\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\n\n```cpp:Main.cpp\n# include <Siv3D.hpp>\n# include <HamFramework.hpp>\n\nvoid Main()\n{\n\tCamera2D camera;\n\n\tScalableWindow::Setup();\n\n\twhile (System::Update())\n\t{\n\t\tcamera.update();\n\t\t{\n\t\t\tconst auto t1 = camera.createTransformer();\n\t\t\tconst auto t2 = ScalableWindow::CreateTransformer();\n\n\t\t\tCircle(100, 100, 100).draw(Palette::Red);\n\t\t\tRect(150, 100, 200, 200).draw(Palette::Orange);\n\t\t\tLine(50, 400, 600, 50).draw(3, Color(128, 255, 255));\n\t\t\tCircle(400, 400, 200).draw(Color(0, 0, 255, 127));\n\t\t}\n\t\tcamera.draw(Palette::Orange);\n\t}\n}\n\n```\n\n1. `ScalableWindow::Setup()` \u3092\u547c\u3076\n2. `Camera2D::createTransformer()` \u306e\u5f8c `ScalableWindow::CreateTransformer()` \u3067`Transformer2D` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u751f\u6210\n\n# \u30ab\u30e1\u30e9\u64cd\u4f5c\u3092\u3082\u3063\u3068\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\n\n`Camera2D` \u306e\u64cd\u4f5c\u3092\u3082\u3063\u3068\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\u5834\u5408\u306f\uff0c`BasicCamera2D` \u3082\u3057\u304f\u306f `Camera2D` \u3092\u7d99\u627f\u3057\u305f\u72ec\u81ea\u306e\u30ab\u30e1\u30e9\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u4f8b\u3048\u3070\uff0cY\u8ef8\u306e\u6b63\u306e\u65b9\u5411\u3092\u4e0a\u5411\u304d\u306b\u8abf\u6574\u3057\u305f\u30ab\u30e1\u30e9\u30af\u30e9\u30b9 `CameraBox2D` \u306f `Camera2D` \u306e\u4e00\u90e8\u306e\u95a2\u6570\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3067\u4f5c\u6210\u3057\u307e\u3057\u305f\uff0e\n\n\n# \u307e\u3068\u3081\nSiv3D Advent Calendar 2016 3 \u65e5\u76ee\u306f Camera2D \u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u307e\u3057\u305f\uff0e\n\n\u660e\u65e5\u306f @agehama_ \u3055\u3093\u306e\u8a18\u4e8b\u3067\u3059\uff0e\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\uff0e\n"}