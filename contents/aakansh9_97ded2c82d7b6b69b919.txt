{"tags": ["d3.js", "Visualization", "JavaScript"], "context": " More than 1 year has passed since last update.Writing Hello World using D3js.\nD3js is now the #1 data visualization open-source project on Github. It is a low-level visualization framework written in Javascript which is difficult for non-programmers to grasp. This is a very short and basic introduction to creating visualizations using D3js.\nWe assume no knowledge of Javascript, HTML, CSS, servers or web components, so lay back.\nThere are 3 important files to make a D3 visualization which are:\n\nHTML file.\nCSS file.\nJavascript file.\n\nWe discuss the functions of these files one by one with an analogy.\nImagine you are building a house for yourself. What do you need? Very crudely, you will require the services of:\n\n\nA builder. For laying foundation, making the framework and laying the bricks.\n\nA painter/designer. For painting walls, installing wall coverings and furnishing.\n\nAn electrician and a plumber. For making the house suitable for living. Installing essential things like lights, fans, drainage etc. which make a house live-able.\n\nNow lets compare this with developing a web page. \n\n\nThe builder is like an HTML file. It contains the basic elements and text of the web page.\n\nThe painter is like the CSS file. It defines the font size, shape, color and design aspects of the page.\n\nThe electrician and plumber are like Javascript files. These files make the dynamic/moving parts of the web page with which you interact.\n\nLet's see each of these files one by one.\n\nThe Builder: HTML file\nHTML is the basic frame of the web page. It contains the text for the web page and links to CSS and Javascript files. Our HTML file is named page.html.\n\npage.html\n\n<html>\n\n <head>\n   <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\n\n   <title> D3 Visulization </title>\n\n   <script type=\"text/javascript\" src=\"http://d3js.org/d3.v2.min.js\"></script>\n\n   <link href=\"page.css\" rel=\"stylesheet\">\n </head>\n\n\n <body>\n   <div id=\"chart\"> </div>\n   <script type=\"text/javascript\" src=\"page.js\"></script>\n </body>\n\n</html>\n\n\n\nA basic understanding of the above code:\nThe <head> ... <\\head> tag defines the header of the page and <body> ... <\\body> tag defines the body of the page. Every html file has these 2 tags. \nInside the header, the <title> tag specifies the title of the page as 'D3 Visualization'. We have also specified the location of the D3 javascript file on http://d3js.org/d3.v2.min.js using <script> tag and we have specified the path to our CSS file which is page.css.\nInside the body, we have specified the tag <div id='chart'>. This tag defines a block on the web page (like a room in the house). A CSS or Javascript file can then refer to this block by using its id = 'chart' property and write or draw anything inside this block. Then there is a reference to the path of our javascript file (which is page.js) again the <script> tag.\nYou can store CSS and Javascript files on a website or on local disk. According you can point HTML to that file by mentioning it's web link or it's local file path.\nRight now this HTML file does not contain any text or drawings but just links and paths to CSS and Javascript files that we will be requiring. It's just a bare-bones framework of the house.\n\nThe Painter: CSS file\nWe name this file page.css. CSS as we discussed before is a language to describe the style of the page, that is, the color/size/font/location of the text or other objects. These objects are defined in the HTML file.\nA CSS file contains a set of rules. Each rule selects a tag/element in the HTML code and declares the style (color/size etc.) of that tag/element. The tag/element can be selected using something called as selectors which is a defined standard for selecting the elements of an HTML file. A reference for these selectors and CSS syntax is here.\nOur CSS file which we have named page.css is just one line code:\n\npage.css\ntext:{font-size:36px;}\n\n\nThis means any html <text> element will have font size 36 px. Right now, there is no such element in page.html. But it will be added by our javascript file page.js which we discuss now.\n\nThe Electrician and the Plumber: Javascript (JS) files\nJavascript is a programming language of the web. Without javascript a web page is not responsive. We can see the text but we can not interact with it. (Just like we can live in a bare-bones-house but having electricity and water and basic utilities is what makes it a home).\nThere are many javascript libraries that have been built for easily and quickly writing javascript code. When an electrician has to install lights, he just buys the light bulb and switches and wires them. There is no need to make the bulbs and switches by himself. Similarly, javascript coders directly use available pieces and wire them together. \nD3 is one such collection of pieces which are used for creating visualizations.\nThese D3 pieces can be accessed by referring to the code on http://d3js.org/d3.v2.min.js which has been built by experts using basic javascript. Before using any of D3 pieces, we refer to this file using the line:\n<script type=\"text/javascript\" src=\"http://d3js.org/d3.v2.min.js\"></script> \nin page.html above. We can also download this file on our computer and then just mention the file path name inside the HTML code.\nNow we use D3 framework to create a visualization and store in the file page.js. \nThe rules for writing D3 visualizations involves learning basic Javascript and then learning from examples on http://d3js.org. We show how to write a simple text using D3.\nA 'Hello World' example is the following:\n\npage.js\nvar w = 800, h=400,\nsvg = d3.select(\"#chart\")\n.append(\"svg\")\n.attr(\"width\",w)\n.attr(\"height\",h);\n\nvar text = svg\n.append(\"text\")\n.text(\"This is Hello World written Using D3 !\")\n.attr(\"y\",50);\n\n\nWe now point the HTML file to this code using the line: \n<script type=\"text/javascript\" src=\"page.js\"></script> \nin page.html.\nThat is it. Note that all these files should be in the same folder on your computer because of the file paths we have mentioned in the HTML code.\n\nStart Living in the House\nBefore starting to live in the house, we need to register the building, set up contracts so that electricity and water starts flowing. This is analogous to setting up a 'server' to launch the above files.\nThere are several options to do this:\n\nCreate a local server using node.js engine.\nUse a free service online for launching.\nUse a web browser locally.\n\nThe 3rd option is simplest. Just open the file page.html using a web browser. You will see the result. But nobody on the internet can see it.\nThe 1st option is a difficult one. Using a javascript runtime called node.js we setup a server on our computer and serve our files to this server. We can then access the result in a web browser. Any other person with access to internet can also access our result if we allow him to do so.\nThe 2nd option is of intermediate difficulty. Using Github, we can upload our files in a gist (with some minor changes). Then use bl.ocks.org to view the result of our D3 visualization online. Any other person on the internet can also view it.\nIf we open page.html file using chrome the result looks like this:\n\nThat's just some text written using D3.\n\nThe Alternative\nHire an architect (read: web-architect) to build the house!\n***Writing Hello World using D3js.***\n\n\nD3js is now the [#1](http://www.kdnuggets.com/2016/02/top-10-data-visualization-github.html) data visualization open-source project on Github. It is a low-level visualization framework written in Javascript which is difficult for non-programmers to grasp. This is a very short and basic introduction to creating visualizations using D3js.\n\n\n\nWe assume no knowledge of Javascript, HTML, CSS, servers or web components, so lay back.\n\nThere are 3 important files to make a D3 visualization which are:\n\n1. HTML file.\n2. CSS file.\n3. Javascript file.\n\nWe discuss the functions of these files one by one with an analogy.\n\nImagine you are building a house for yourself. What do you need? Very crudely, you will require the services of:\n\n1. *A builder*. For laying foundation, making the framework and laying the bricks.\n2. *A painter/designer*. For painting walls, installing wall coverings and furnishing.\n3. *An electrician and a plumber*. For making the house suitable for living. Installing essential things like lights, fans, drainage etc. which make a house live-able.\n\nNow lets compare this with developing a web page. \n\n1. *The builder is like an HTML file*. It contains the basic elements and text of the web page.\n2. *The painter is like the CSS file*. It defines the font size, shape, color and design aspects of the page.\n3. *The electrician and plumber are like Javascript files*. These files make the dynamic/moving parts of the web page with which you interact.\n\nLet's see each of these files one by one.\n\n# The Builder: HTML file\n\nHTML is the basic frame of the web page. It contains the text for the web page and links to CSS and Javascript files. Our HTML file is named `page.html`.\n\n```html:page.html\n\n<html>\n\n <head>\n   <meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\">\n\n   <title> D3 Visulization </title>\n\n   <script type=\"text/javascript\" src=\"http://d3js.org/d3.v2.min.js\"></script>\n\n   <link href=\"page.css\" rel=\"stylesheet\">\n </head>\n\n\n <body>\n   <div id=\"chart\"> </div>\n   <script type=\"text/javascript\" src=\"page.js\"></script>\n </body>\n\n</html>\n\n```\n\n**A basic understanding of the above code:**\n\nThe `<head> ... <\\head>` tag defines the header of the page and `<body> ... <\\body>` tag defines the body of the page. Every html file has these 2 tags. \n\nInside the header, the `<title>` tag specifies the title of the page as 'D3 Visualization'. We have also specified the location of the D3 javascript file on http://d3js.org/d3.v2.min.js using `<script>` tag and we have specified the path to our CSS file which is `page.css`.\n\nInside the body, we have specified the tag `<div id='chart'>`. This tag defines a block on the web page (like a room in the house). A CSS or Javascript file can then refer to this block by using its `id = 'chart'` property and write or draw anything inside this block. Then there is a reference to the path of our javascript file (which is `page.js`) again the `<script>` tag.\n\nYou can store CSS and Javascript files on a website or on local disk. According you can point HTML to that file by mentioning it's web link or it's local file path.\n\nRight now this HTML file does not contain any text or drawings but just links and paths to CSS and Javascript files that we will be requiring. It's just a bare-bones framework of the house.\n\n# The Painter: CSS file\n\nWe name this file `page.css`. CSS as we discussed before is a language to describe the style of the page, that is, the color/size/font/location of the text or other objects. These objects are defined in the HTML file.\n\nA CSS file contains a set of rules. Each rule selects a tag/element in the HTML code and declares the style (color/size etc.) of that tag/element. The tag/element can be selected using something called as `selectors` which is a defined standard for selecting the elements of an HTML file. A reference for these selectors and CSS syntax is [here](http://www.w3schools.com/cssref/css_selectors.asp).\n\nOur CSS file which we have named `page.css` is just one line code:\n\n```css:page.css\ntext:{font-size:36px;}\n```\n\nThis means any html `<text>` element will have font size 36 px. Right now, there is no such element in `page.html`. But it will be added by our javascript file `page.js` which we discuss now.\n\n# The Electrician and the Plumber: Javascript (JS) files\n\nJavascript is a programming language of the web. Without javascript a web page is not responsive. We can see the text but we can not interact with it. (Just like we can live in a bare-bones-house but having electricity and water and basic utilities is what makes it a home).\n\nThere are many javascript libraries that have been built for easily and quickly writing javascript code. When an electrician has to install lights, he just buys the light bulb and switches and wires them. There is no need to make the bulbs and switches by himself. Similarly, javascript coders directly use available pieces and wire them together. \n\nD3 is one such collection of pieces which are used for creating visualizations.\n\nThese D3 pieces can be accessed by referring to the code on http://d3js.org/d3.v2.min.js which has been built by experts using basic javascript. Before using any of D3 pieces, we refer to this file using the line:\n`<script type=\"text/javascript\" src=\"http://d3js.org/d3.v2.min.js\"></script>` \nin `page.html` above. We can also download this file on our computer and then just mention the file path name inside the HTML code.\n\nNow we use D3 framework to create a visualization and store in the file `page.js`. \n\nThe rules for writing D3 visualizations involves learning basic Javascript and then learning from examples on http://d3js.org. We show how to write a simple text using D3.\n\nA 'Hello World' example is the following:\n\n```js:page.js\nvar w = 800, h=400,\nsvg = d3.select(\"#chart\")\n.append(\"svg\")\n.attr(\"width\",w)\n.attr(\"height\",h);\n\nvar text = svg\n.append(\"text\")\n.text(\"This is Hello World written Using D3 !\")\n.attr(\"y\",50);\n```\n\n\nWe now point the HTML file to this code using the line: \n`<script type=\"text/javascript\" src=\"page.js\"></script>` \nin `page.html`.\n\nThat is it. Note that all these files should be in the same folder on your computer because of the file paths we have mentioned in the HTML code.\n\n# Start Living in the House\n\nBefore starting to live in the house, we need to register the building, set up contracts so that electricity and water starts flowing. This is analogous to setting up a 'server' to launch the above files.\n\nThere are several options to do this:\n\n1. Create a local server using node.js engine.\n2. Use a free service online for launching.\n3. Use a web browser locally.\n\nThe 3rd option is simplest. Just open the file `page.html` using a web browser. You will see the result. But nobody on the internet can see it.\n\nThe 1st option is a difficult one. Using a javascript runtime called [node.js](https://nodejs.org/en/) we setup a server on our computer and serve our files to this server. We can then access the result in a web browser. Any other person with access to internet can also access our result if we allow him to do so.\n\nThe 2nd option is of intermediate difficulty. Using Github, we can upload our files in a [gist](https://gist.github.com/) (with some minor changes). Then use [bl.ocks.org](http://bl.ocks.org) to view the result of our D3 visualization online. Any other person on the internet can also view it.\n\nIf we open `page.html` file using chrome the result looks like this:\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/114645/70376e4e-bbf7-ccf5-d374-83c2f9f7c972.png)\n\nThat's just some text written using D3.\n\n# The Alternative\n\nHire an architect (read: web-architect) to build the house!\n\n\n\n"}