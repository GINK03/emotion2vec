{"context": " More than 1 year has passed since last update.\u51fa\u6765\u308b\u3060\u3051\u62e1\u5f35\u3057\u306a\u3044\u3067\u3084\u308a\u305f\u3044\u3053\u3068\u3092\u3084\u308b\u9006\u5f15\u304d\u3002\nOpenResty \u306f 1.7.2.1 \u3067\u8a66\u3057\u3066\u308b\u3002\n\ncookie \u7528\u306e\u65e5\u4ed8\u3092\u53d6\u5f97\u3057\u305f\u3044\n\nngx.cookie_time(sec) \u3067\u53d6\u5f97\u3067\u304d\u308b\n\u6587\u5b57\u5217\u3067 Mon, 29-Sep-14 14:21:34 GMT \u3053\u3093\u306a\u611f\u3058\n\n\n\u4eca\u306e\u6642\u9593\u3092\u79d2\u3067\u53d6\u5f97\u3057\u305f\u3044\n\nngx.now() \u3067\u53d6\u5f97\u3067\u304d\u308b\n\n\nA-Za-z0-9 \u306e\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u51fa\u6765\u306a\u3044\nhttps://github.com/bungle/lua-resty-random\n\n\ncookie \u3092\u4f5c\u308b\u6a5f\u80fd\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u7121\u3044\nhttps://github.com/cloudflare/lua-resty-cookie\n\u305f\u3060 ngx.header \u4f7f\u3048\u3070\u4f55\u3067\u3082\u51fa\u6765\u308b\n\nngx.header['Set-Cookie'] = {'a=32; path=/', 'b=4; path=/'}\n\n\n\u6570\u5024\u3092 16 \u9032\u6570\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u305f\u3044\nlocal string = require \"resty.string\"\nstring.to_hex(10)\n\n\n\u30e9\u30f3\u30c0\u30e0\u306a\u30d0\u30a4\u30ca\u30ea\u3092\u751f\u6210\u3057\u305f\u3044\nlocal random = require \"resty.random\"\nrandom.bytes(50)\n\n\n\u30ed\u30b0\u3092\u8868\u793a\u3057\u305f\u3044\n\nngx.log \u3092\u4f7f\u3046\nngx.ERR \u3092\u4f7f\u3048\u3070 log/error.log \u306b\u51fa\u308b\n\nif not cookie then\n    ngx.log(ngx.ERR, err)\n    return\nend\n\n2014/09/23 01:55:02 [error] 46801#0: *1 [lua] egg.lua:31: no cookie found in the current request, client: 127.0.0.1, server: localhost, request: \"POST / HTTP/1.1\", host: \"127.0.0.1:8080\"\n\n\n\u30ed\u30b0\u30ec\u30d9\u30eb\u306f\u8272\u3005\u3042\u308b\n\n\nngx.STDERR\nngx.EMERG\nngx.ALERT\nngx.CRIT\nngx.ERR\nngx.WARN\nngx.NOTICE\nngx.INFO\nngx.DEBUG\n\n\n\ndebug \u3092\u4f7f\u3046\u5834\u5408\u306f ./configure --with-debug \u3057\u3066\u308b\u5fc5\u8981\u3042\u308a\n\nhttp://nginx.org/en/docs/debugging_log.html\n\nerror_log logs/error.log debug;\n\n\n\n\nHTTP Status-Code 200 \u3068\u304b\u8fd4\u3057\u305f\u3044\nngx.exit(ngx.HTTP_OK)\nngx.exit(200)\n\n\u6570\u5024\u304c\u5b9a\u6570\u5316\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304c\u4e00\u90e8\u3042\u308b\n\nngx.HTTP_OK (200)\nngx.HTTP_CREATED (201)\nngx.HTTP_SPECIAL_RESPONSE (300)\nngx.HTTP_MOVED_PERMANENTLY (301)\nngx.HTTP_MOVED_TEMPORARILY (302)\nngx.HTTP_SEE_OTHER (303)\nngx.HTTP_NOT_MODIFIED (304)\nngx.HTTP_BAD_REQUEST (400)\nngx.HTTP_UNAUTHORIZED (401)\nngx.HTTP_FORBIDDEN (403)\nngx.HTTP_NOT_FOUND (404)\nngx.HTTP_NOT_ALLOWED (405)\nngx.HTTP_GONE (410)\nngx.HTTP_INTERNAL_SERVER_ERROR (500)\nngx.HTTP_METHOD_NOT_IMPLEMENTED (501)\nngx.HTTP_SERVICE_UNAVAILABLE (503)\nngx.HTTP_GATEWAY_TIMEOUT (504)\n\n\nnginx \u306e\u30ea\u30ed\u30fc\u30c9\u304c\u3060\u308b\u3044\nlua_code_cache \u3092 off \u306b\u3059\u308b\u3068\u6bce\u56de lua \u30d5\u30a1\u30a4\u30eb\u3092\u547c\u3076\u3088\u3046\u306b\u306a\u308b\n\u305f\u3060\u3057\u672c\u756a\u3067\u306f\u7d76\u5bfe\u4f7f\u7528\u3057\u306a\u3044\u3053\u3068\u3002\n\u30ed\u30b0\u306b\u306f\u3053\u306e\u30a2\u30e9\u30fc\u30c8\u304c\u51fa\u308b\u3002\nnginx: [alert] lua_code_cache is off; this will hurt performance\n\n\n\u30a8\u30e9\u30fc(400 \u3068\u304b 500 \u3068\u304b)\u6642\u306b Body \u3082\u8fd4\u3057\u305f\u3044\nngx.status \u3068 ngx.say \u3092\u4f7f\u3044\u3001ngx.exit \u3092\u4f7f\u308f\u306a\u3044\u3002\nngx.status = ngx.HTTP_BAD_REQUEST\nngx.say(\"hello bad world\")\n\n\u6539\u884c\u5165\u308c\u305f\u304f\u306a\u3044\u5834\u5408\u306f ngx.print() \u3067\u3082\u826f\u3044\n\nPOST \u30aa\u30f3\u30ea\u30fc\u3067\u306e\u51e6\u7406\u3092\u66f8\u304d\u305f\u3044\nngx.req.get_method() \u3067\u30e1\u30bd\u30c3\u30c9\u304c\u53d6\u5f97\u3067\u304d\u308b\nif ngx.req.get_method() ~= \"POST\" then\n    ngx.exit(ngx.HTTP_NOT_ALLOWED)\nend\n\n-- \u3053\u308c\u4ee5\u964d\u306b\u51e6\u7406\u3092\u66f8\u304f\n\nngx.HTTP_POST \u306f ngx.location.capture \u3067\u4f7f\u3046\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u4f7f\u3048\u306a\u3044\u3002\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u306e Body \u304b\u3089 JSON \u3092\u30c6\u30fc\u30d6\u30eb\u3068\u3057\u3066\u53d6\u308a\u51fa\u3057\u305f\u3044\nlocal cjson = require \"cjson\"\n\nngx.req.read_body()\nlocal body_data = ngx.req.get_body_data()\n\nif body_data == nil then\n    -- nil \u3060\u3063\u305f\u3089 body \u304c\u5b58\u5728\u3057\u306a\u3044\nend\n\nlocal json = cjson.decode(body_data)\n\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30d8\u30c3\u30c0\u30fc\u3092\u5909\u66f4\u3057\u305f\u3044\nngx.header['Content-Type'] = 'applicaiton/json'\n\nngx.header.content_type = 'appliation/json'\n\n\u4e21\u65b9\u540c\u4e00\u3067\u3042\u308b\u3002\u30c6\u30fc\u30d6\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u611f\u3058\u306a\u306e\u306flua_transform_underscores_in_response_headers \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 on \u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3002\u500b\u4eba\u7684\u306b\u306f\u3069\u3063\u3061\u3067\u3082\u3044\u3044\u304c\u3001\u66f8\u304f\u3068\u304d\u306f\u7d71\u4e00\u3057\u305f\u65b9\u304c\u3044\u3044\u3060\u308d\u3046\u3002\n\u5927\u6587\u5b57\u5c0f\u6587\u5b57\u3069\u3046\u3059\u308b\u3093\u3060\u3063\u3066\u306a\u308b\u306e\u3067\u30c6\u30fc\u30d6\u30eb\u30a2\u30af\u30bb\u30b9\u3063\u307d\u3044\u611f\u3058\u306e\u307b\u3046\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u53c2\u8003\n\nHttpLuaModule\nlua-nginx-module \u306e\u7d39\u4ecb \u306a\u3089\u3073\u306b Nginx+Lua+Redis\u306b\u3088\u308b\u52d5\u7684\u306a\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306e\u5b9f\u88c5\u6848\nHow can I manipulate the JSON body of a POST request using Nginx and Lua?\n\n\n\u51fa\u6765\u308b\u3060\u3051\u62e1\u5f35\u3057\u306a\u3044\u3067\u3084\u308a\u305f\u3044\u3053\u3068\u3092\u3084\u308b\u9006\u5f15\u304d\u3002\n\nOpenResty \u306f 1.7.2.1 \u3067\u8a66\u3057\u3066\u308b\u3002\n\n## cookie \u7528\u306e\u65e5\u4ed8\u3092\u53d6\u5f97\u3057\u305f\u3044\n\n- ngx.cookie_time(sec) \u3067\u53d6\u5f97\u3067\u304d\u308b\n- \u6587\u5b57\u5217\u3067 Mon, 29-Sep-14 14:21:34 GMT \u3053\u3093\u306a\u611f\u3058\n\n## \u4eca\u306e\u6642\u9593\u3092\u79d2\u3067\u53d6\u5f97\u3057\u305f\u3044\n\n- ngx.now() \u3067\u53d6\u5f97\u3067\u304d\u308b\n\n## A-Za-z0-9 \u306e\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\n- \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u51fa\u6765\u306a\u3044\n- https://github.com/bungle/lua-resty-random\n\n## cookie \u3092\u4f5c\u308b\u6a5f\u80fd\n\n- \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u7121\u3044\n- https://github.com/cloudflare/lua-resty-cookie\n- \u305f\u3060 ngx.header \u4f7f\u3048\u3070\u4f55\u3067\u3082\u51fa\u6765\u308b\n\n```\nngx.header['Set-Cookie'] = {'a=32; path=/', 'b=4; path=/'}\n```\n\n## \u6570\u5024\u3092 16 \u9032\u6570\u306e\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u305f\u3044\n\n```lua\nlocal string = require \"resty.string\"\nstring.to_hex(10)\n```\n\n## \u30e9\u30f3\u30c0\u30e0\u306a\u30d0\u30a4\u30ca\u30ea\u3092\u751f\u6210\u3057\u305f\u3044\n\n```lua\nlocal random = require \"resty.random\"\nrandom.bytes(50)\n```\n\n## \u30ed\u30b0\u3092\u8868\u793a\u3057\u305f\u3044\n\n- ngx.log \u3092\u4f7f\u3046\n- ngx.ERR \u3092\u4f7f\u3048\u3070 log/error.log \u306b\u51fa\u308b\n\n```lua\nif not cookie then\n    ngx.log(ngx.ERR, err)\n    return\nend\n```\n\n```\n2014/09/23 01:55:02 [error] 46801#0: *1 [lua] egg.lua:31: no cookie found in the current request, client: 127.0.0.1, server: localhost, request: \"POST / HTTP/1.1\", host: \"127.0.0.1:8080\"\n```\n\n- \u30ed\u30b0\u30ec\u30d9\u30eb\u306f\u8272\u3005\u3042\u308b\n    - ngx.STDERR\n    - ngx.EMERG\n    - ngx.ALERT\n    - ngx.CRIT\n    - ngx.ERR\n    - ngx.WARN\n    - ngx.NOTICE\n    - ngx.INFO\n    - ngx.DEBUG\n- debug \u3092\u4f7f\u3046\u5834\u5408\u306f ./configure --with-debug \u3057\u3066\u308b\u5fc5\u8981\u3042\u308a\n    - http://nginx.org/en/docs/debugging_log.html\n\n    ```\n    error_log logs/error.log debug;\n    ```\n\n## HTTP Status-Code 200 \u3068\u304b\u8fd4\u3057\u305f\u3044\n\n```\nngx.exit(ngx.HTTP_OK)\nngx.exit(200)\n```\n\n\u6570\u5024\u304c\u5b9a\u6570\u5316\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304c\u4e00\u90e8\u3042\u308b\n\n- ngx.HTTP_OK (200)\n- ngx.HTTP_CREATED (201)\n- ngx.HTTP_SPECIAL_RESPONSE (300)\n- ngx.HTTP_MOVED_PERMANENTLY (301)\n- ngx.HTTP_MOVED_TEMPORARILY (302)\n- ngx.HTTP_SEE_OTHER (303)\n- ngx.HTTP_NOT_MODIFIED (304)\n- ngx.HTTP_BAD_REQUEST (400)\n- ngx.HTTP_UNAUTHORIZED (401)\n- ngx.HTTP_FORBIDDEN (403)\n- ngx.HTTP_NOT_FOUND (404)\n- ngx.HTTP_NOT_ALLOWED (405)\n- ngx.HTTP_GONE (410)\n- ngx.HTTP_INTERNAL_SERVER_ERROR (500)\n- ngx.HTTP_METHOD_NOT_IMPLEMENTED (501)\n- ngx.HTTP_SERVICE_UNAVAILABLE (503)\n- ngx.HTTP_GATEWAY_TIMEOUT (504)\n\n## nginx \u306e\u30ea\u30ed\u30fc\u30c9\u304c\u3060\u308b\u3044\n\nlua_code_cache \u3092 off \u306b\u3059\u308b\u3068\u6bce\u56de lua \u30d5\u30a1\u30a4\u30eb\u3092\u547c\u3076\u3088\u3046\u306b\u306a\u308b\n\n\u305f\u3060\u3057\u672c\u756a\u3067\u306f\u7d76\u5bfe\u4f7f\u7528\u3057\u306a\u3044\u3053\u3068\u3002\n\n\u30ed\u30b0\u306b\u306f\u3053\u306e\u30a2\u30e9\u30fc\u30c8\u304c\u51fa\u308b\u3002\n\n```\nnginx: [alert] lua_code_cache is off; this will hurt performance\n```\n\n## \u30a8\u30e9\u30fc(400 \u3068\u304b 500 \u3068\u304b)\u6642\u306b Body \u3082\u8fd4\u3057\u305f\u3044\n\nngx.status \u3068 ngx.say \u3092\u4f7f\u3044\u3001ngx.exit \u3092\u4f7f\u308f\u306a\u3044\u3002\n\n```lua\nngx.status = ngx.HTTP_BAD_REQUEST\nngx.say(\"hello bad world\")\n```\n\n\u6539\u884c\u5165\u308c\u305f\u304f\u306a\u3044\u5834\u5408\u306f ngx.print() \u3067\u3082\u826f\u3044\n\n## POST \u30aa\u30f3\u30ea\u30fc\u3067\u306e\u51e6\u7406\u3092\u66f8\u304d\u305f\u3044\n\nngx.req.get_method() \u3067\u30e1\u30bd\u30c3\u30c9\u304c\u53d6\u5f97\u3067\u304d\u308b\n\n```lua\nif ngx.req.get_method() ~= \"POST\" then\n    ngx.exit(ngx.HTTP_NOT_ALLOWED)\nend\n\n-- \u3053\u308c\u4ee5\u964d\u306b\u51e6\u7406\u3092\u66f8\u304f\n```\n\nngx.HTTP_POST \u306f ngx.location.capture \u3067\u4f7f\u3046\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u4f7f\u3048\u306a\u3044\u3002\n\n## \u30ea\u30af\u30a8\u30b9\u30c8\u306e Body \u304b\u3089 JSON \u3092\u30c6\u30fc\u30d6\u30eb\u3068\u3057\u3066\u53d6\u308a\u51fa\u3057\u305f\u3044\n\n```lua\nlocal cjson = require \"cjson\"\n\nngx.req.read_body()\nlocal body_data = ngx.req.get_body_data()\n\nif body_data == nil then\n    -- nil \u3060\u3063\u305f\u3089 body \u304c\u5b58\u5728\u3057\u306a\u3044\nend\n\nlocal json = cjson.decode(body_data)\n```\n\n## \u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30d8\u30c3\u30c0\u30fc\u3092\u5909\u66f4\u3057\u305f\u3044\n\n```\nngx.header['Content-Type'] = 'applicaiton/json'\n```\n\n```\nngx.header.content_type = 'appliation/json'\n```\n\n\u4e21\u65b9\u540c\u4e00\u3067\u3042\u308b\u3002\u30c6\u30fc\u30d6\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u611f\u3058\u306a\u306e\u306f[lua_transform_underscores_in_response_headers](http://wiki.nginx.org/HttpLuaModule#lua_transform_underscores_in_response_headers) \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 on \u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3002\u500b\u4eba\u7684\u306b\u306f\u3069\u3063\u3061\u3067\u3082\u3044\u3044\u304c\u3001\u66f8\u304f\u3068\u304d\u306f\u7d71\u4e00\u3057\u305f\u65b9\u304c\u3044\u3044\u3060\u308d\u3046\u3002\n\n\u5927\u6587\u5b57\u5c0f\u6587\u5b57\u3069\u3046\u3059\u308b\u3093\u3060\u3063\u3066\u306a\u308b\u306e\u3067\u30c6\u30fc\u30d6\u30eb\u30a2\u30af\u30bb\u30b9\u3063\u307d\u3044\u611f\u3058\u306e\u307b\u3046\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\n## \u53c2\u8003\n\n- [HttpLuaModule](http://wiki.nginx.org/HttpLuaModule)\n- [lua-nginx-module \u306e\u7d39\u4ecb \u306a\u3089\u3073\u306b Nginx+Lua+Redis\u306b\u3088\u308b\u52d5\u7684\u306a\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306e\u5b9f\u88c5\u6848](http://d.hatena.ne.jp/hiboma/20120205/1328448746)\n\n- [How can I manipulate the JSON body of a POST request using Nginx and Lua?](http://stackoverflow.com/questions/22788236/how-can-i-manipulate-the-json-body-of-a-post-request-using-nginx-and-lua)\n", "tags": ["nginx", "Lua", "openresty"]}