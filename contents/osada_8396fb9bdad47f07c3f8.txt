{"context": "P2SH\u5b9b\u3066\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u308d\u3046\u3068\u3057\u305f\u3068\u304d\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3061\u3083\u3093\u3068\u52d5\u3044\u3066\u3044\u308b\u304b\u306a\uff1f\u3068\u30c7\u30d0\u30c3\u30b0\u3057\u3066\u307f\u305f\u304f\u306a\u308a\u307e\u3059\u3002\nBitcoin\u306eRuby\u5b9f\u88c5\u306f\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u3092Script\u30af\u30e9\u30b9\u3067\u6271\u3063\u3066\u3044\u3066\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u4e00\u3064\u306brun\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3044\u306a\u304c\u3089\u52d5\u304d\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u7279\u306b\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\u4e2d\u306e\u30b9\u30bf\u30c3\u30af\u306e\u72b6\u614b\u304c\u898b\u308c\u308bdebug\u3068\u3044\u3046\u914d\u5217\u306f\u306a\u304b\u306a\u304b\u4fbf\u5229\u3067\u3059\u3002\uff08\u5f8c\u8ff0\uff09\n\nP2PKH\u306e\u30b9\u30af\u30ea\u30d7\u30c8\n\u307e\u305a\u306f\u3001\u30b7\u30f3\u30d7\u30eb\u306aP2PKH\u306e\u3068\u304d\u3002\n\u3053\u3093\u306avout\u304c\u3042\u3063\u305f\u3068\u3059\u308b\u3002\n  \"vout\": [\n    {\n      \"value\": 0.99900000,\n      \"n\": 0,\n      \"scriptPubKey\": {\n        \"asm\": \"OP_DUP OP_HASH160 687eb2c06a660cdbab88e9ea6b0ce45a1fddb99e OP_EQUALVERIFY OP_CHECKSIG\",\n        \"hex\": \"76a914687eb2c06a660cdbab88e9ea6b0ce45a1fddb99e88ac\",\n        \"reqSigs\": 1,\n        \"type\": \"pubkeyhash\",\n        \"addresses\": [\n          \"mq3UM9q26id4iJaguoST1RaHEJAtZuZCLK\"\n        ]\n      }\n    }\n  ]\n\n\u3053\u308c\u3092\u3001\u65b0\u3057\u3044\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306evin\u306b\u7d44\u307f\u8fbc\u3080\u3068\u304d\u306b\u3001\u7f72\u540d\u306e\u691c\u8a3c\u3068\u7f72\u540d\u3092\u3064\u3051\u308b\u308f\u3051\u3067\u3059\u304c\u3001\nstring\u3067\u8868\u73fe\u3059\u308b\u3068\u3001\u300cOP_DUP ...\u300d\u3002hex\u3067\u8868\u73fe\u3059\u308b\u3068\u300c76a...\u300d\n\nScript\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\nscript_hex = '76a914687eb2c06a660cdbab88e9ea6b0ce45a1fddb99e88ac'\nscript = Bitcoin::Script.new(script_hex.htb)\n\n => #<Bitcoin::Script:0x007ff8fb8876f0 @raw_byte_sizes=[25, 0], @previous_output_script=nil, @input_script=\"v\\xA9\\x14h~\\xB2\\xC0jf\\f\\xDB\\xAB\\x88\\xE9\\xEAk\\f\\xE4Z\\x1F\\xDD\\xB9\\x9E\\x88\\xAC\", @raw=\"v\\xA9\\x14h~\\xB2\\xC0jf\\f\\xDB\\xAB\\x88\\xE9\\xEAk\\f\\xE4Z\\x1F\\xDD\\xB9\\x9E\\x88\\xAC\", @chunks=[118, 169, \"h~\\xB2\\xC0jf\\f\\xDB\\xAB\\x88\\xE9\\xEAk\\f\\xE4Z\\x1F\\xDD\\xB9\\x9E\", 136, 172], @exec_stack=[], @stack_alt=[], @stack=[], @last_codeseparator_index=0, @do_exec=true> \n\n# \u60f3\u5b9a\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u4f5c\u308c\u305f\u304b\u78ba\u8a8d\u3002json\u306easm\u3068\u540c\u3058\u5024\u3067\u3042\u308c\u3070OK\nscript.to_string\n => \"OP_DUP OP_HASH160 687eb2c06a660cdbab88e9ea6b0ce45a1fddb99e OP_EQUALVERIFY OP_CHECKSIG\" \n\n# \u30a2\u30c9\u30ec\u30b9\u306b\u5909\u63db\u3057\u3066\u307f\u308b\nhash160_to_address('687eb2c06a660cdbab88e9ea6b0ce45a1fddb99e')\n => \"mq3UM9q26id4iJaguoST1RaHEJAtZuZCLK\" \n\n\n\u5b9f\u884c\u3059\u308b\n\u5b9f\u884c\u3068\u3044\u3048\u3070\u3001run\u3002\nscript.run\n => false \n\n\u3046\u3093\u3002\nscriptPubKey\u5358\u4f53\u3067\u306f\u5b9f\u884c\u3067\u304d\u306a\u3044\u3002scriptSig\u3068\u5408\u308f\u305b\u3066\u521d\u3081\u3066\u6b63\u5e38\u306b\u52d5\u4f5c\u3059\u308b\u3002\uff08\u5f8c\u8ff0\uff09\n\n\u5f15\u6570\u3092\u6e21\u3059\n\u5f15\u6570\u3092\u6e21\u3057\u3066\u4f7f\u3046\u3089\u3057\u3044\u3002do\u301cend\u306f\u3001run\u306e\u4e2d\u3067\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3002\nblock_timestamp = 200 # \u9069\u5f53\nopts = {} # \u9069\u5f53\ntx = \uff08\u7701\u7565\uff09 # Script\u3067\u691c\u8a3c\u3059\u308b\u305f\u3081\u306etx\u3002\uff08\u3064\u307e\u308a\u3001UTXO\u3092\u6307\u5b9a\u3059\u308bvin\uff09\nsig_valid = script.run(block_timestamp, opts) do\n    |pubkey,sig,hash_type,subscript|\n  hash = tx.signature_hash_for_input(in_idx, subscript, hash_type)\n  Bitcoin.verify_signature( hash, sig, pubkey.unpack(\"H*\")[0] )\nend\n => false \n\n\u306a\u308b\u307b\u3069\u3001\u3001\u3001\u308f\u304b\u3089\u3093\ndo\u301cend\u53e5\u306f\u3001validate\u7528\u306e\u305f\u3081\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3002\u3053\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\u3068\u3001OP_CHECKSIG\u304c\u4f55\u3067\u3082true\u3092\u8fd4\u3057\u3066\u3057\u307e\u3046\u3002\uff08\u672b\u5c3e\u53c2\u8003\uff09\n\n\u81ea\u529b\u3067run\nrun\u306e\u4e2d\u8eab\u3092\u9010\u6b21\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306f\u305d\u306e\u5834\u3067\u547c\u3076\u3002\n\nP2PKH\n\u516c\u5f0f\u30b5\u30a4\u30c8\uff08\u53c2\u8003\uff09\u306b\u3088\u308b\u3068\u3001P2PKH\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3051\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c\uff08\u691c\u8a3c\uff09\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u304a\u3053\u306a\u3046\n\n \n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001vin\u306e\"scriptSig\"\u3068UTXO\u306e\"scriptPubKey\"\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001Script\n\u3092\u4f5c\u308b\n\n# \u524d\u306eTx\u306escriptPubKey\u3092\u53d6\u308b\n# \u6ce8\u610f\uff1a\u3082\u3057\u3001\u305d\u308c\u304cP2SH\u3067\u3042\u308c\u3070\u3001scriptPunKey\u304c\u306a\u3044\u306e\u3067\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nscript_pubkey = prev_tx.out[prev_tx_out_index].pk_script\n\ntx.in[1].script\n=> \"H0E\\x02!\\x00\\xB6=\\xE7\\xD8\\x11;\\x80\\x10X\\xCDL3+L{,\\xA1~\\x8Dr\\xCC\\xC7\\x13\\xBA\\xC7\\xEF\\x14+\\xCF\\xD0}\\xAA\\x02 V\\x92\\x9Dt}\\xC29\\xC9\\xC8]\\x7F\\xBC\\xAF\\xD4\\x15\\xEC\\r9\\x19\\x81&\\xC2\\x9F\\xAAf3q{\\x04d\\x1D\\v\\x01!\\x02r\\xE3=\\xAB\\x1Eo(\\x170\\xC4\\xA7\\xAA\\xE5\\xEE\\x85\\xE1\\xCD\\xE6\\x10+\\x06\\xC6\\x1E\\xE7\\xA3TO\\xD0\\xA1\\x8D,\\xEC\" \n\nscript_pubkey.to_string\n=> \"v\\xA9\\x14h~\\xB2\\xC0jf\\f\\xDB\\xAB\\x88\\xE9\\xEAk\\f\\xE4Z\\x1F\\xDD\\xB9\\x9E\\x88\\xAC\" \n\n# script\u3092\u4f5c\u308b\nscript = Bitcoin::Script.new(tx.in[1].script + script_pubkey)\n\n# script\u3092\u898b\u308b\nscript.to_string\n => \"3045022100b63de7d8113b801058cd4c332b4c7b2ca17e8d72ccc713bac7ef142bcfd07daa022056929d747dc239c9c85d7fbcafd415ec0d39198126c29faa6633717b04641d0b01 0272e33dab1e6f281730c4a7aae5ee85e1cde6102b06c61ee7a3544fd0a18d2cec OP_DUP OP_HASH160 687eb2c06a660cdbab88e9ea6b0ce45a1fddb99e OP_EQUALVERIFY OP_CHECKSIG\" \n\n# 1: sig (encrypted payload with privkey)\n# 2: pubkey (no-hash)\n# -- \u4e0a scriptSig || \u4e0b scriptPubKey\n# 3: OP_DUP\n# 4: OP_HASH160 (in order to derive hash160 of pubkey in 3 which is equal to 2)\n# 5: hash160 of pubkey\n# 6: OP_EQUALVERIFY\n# 7: OP_CHECKSIG\n\n# \u5b9f\u884c\u3059\u308b\nscript.run\n => true\n\n\u304a\u304a\uff01\n\nP2SH\nP2PKH\u3068\u540c\u3058\u3088\u3046\u306b\u3084\u3063\u3066\u307f\u308b\u3002\u305f\u3060\u3057\u3001\u524d\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u306fscriptPubKey\u304c\u306a\u3044\u306e\u3067\u3001\u4ee3\u308f\u308a\u306bredeem script\uff08\u4f55\u3089\u304b\u306e\u624b\u6bb5\u3067\u4e8b\u524d\u306b\u5171\u6709\uff09\u3092\u5143\u306b\u4f7f\u3046\u3053\u3068\u306b\u6ce8\u610f\u3002\n\u3053\u306e\u3068\u304d\u3001redeem_script\uff08P2PKH\u306escriptPubKey\uff08\u524d\u306eTx\u306evout\u4e2d\u306b\u8a18\u8f09\uff09\u306b\u76f8\u5f53\uff09\u306b\u5408\u308f\u305b\u3066\u3001scriptSig\u3082\u66f8\u304d\u63db\u3048\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\u4fbf\u5b9c\u4e0a\u3001\u3053\u3053\u3067\u306f\u3001spend_script\u3068\u547c\u3076\u3002\n\u4eee\u306b\u3001P2PKH\u306e\u3088\u3046\u306b\u3001\u5358\u306b\"scriptSig + redeem_script\"\u3067\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u306e\u30b9\u30bf\u30c3\u30af\u304c\u3046\u307e\u304f\u51e6\u7406\u3055\u308c\u305a\u306b\u3001false\u3068\u306a\u308b\u3002\n\u7e70\u308a\u8fd4\u3057\u306b\u306a\u308b\u304c\u3001redeem_script\u304b\u3089spend_script\u3092\u4f5c\u308a\u3001\u305d\u308c\u3068scriptSig\u3068\u5408\u4f53\u3055\u305b\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3002\nredeem_script_hex     =\n'0175b1752102057820710677d967d13b6be404a2622498ce0f84cbb107b9003f83337a6d011bac'\n => \"0175b1752102057820710677d967d13b6be404a2622498ce0f84cbb107b9003f83337a6d011bac\" \n\n# redeem_script\u3092Script\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3059\u308b\nredeem_script = Bitcoin::Script.new(redeem_script_hex.htb)\n => #<Bitcoin::Script:0x007ff8face0c70 @raw_byte_sizes=[39, 0], @previous_output_script=nil, @input_script=\"\\x01u\\xB1u!\\x02\\x05x q\\x06w\\xD9g\\xD1;k\\xE4\\x04\\xA2b$\\x98\\xCE\\x0F\\x84\\xCB\\xB1\\a\\xB9\\x00?\\x833zm\\x01\\e\\xAC\", @raw=\"\\x01u\\xB1u!\\x02\\x05x q\\x06w\\xD9g\\xD1;k\\xE4\\x04\\xA2b$\\x98\\xCE\\x0F\\x84\\xCB\\xB1\\a\\xB9\\x00?\\x833zm\\x01\\e\\xAC\", @chunks=[\"u\", 177, 117, \"\\x02\\x05x q\\x06w\\xD9g\\xD1;k\\xE4\\x04\\xA2b$\\x98\\xCE\\x0F\\x84\\xCB\\xB1\\a\\xB9\\x00?\\x833zm\\x01\\e\", 172], @exec_stack=[], @stack_alt=[], @stack=[], @last_codeseparator_index=0, @do_exec=true> \n\n# Script\u3092\u4f5c\u6210\nscript = Bitcoin::Script.new(tx.in[0].script + spend_script)\n\n# script\u3092\u898b\u3066\u307f\u3088\u3046\nscript.to_string\n => \"304402200d1568e4762531c08a9b81520162c1f8d8927dc54dd792d7942d969e438c917e022063c38a7f3177e0f18b90cf5ffe011388d4bc3aa46d2e59ae53cac008a170d0f601 0175b1752102057820710677d967d13b6be404a2622498ce0f84cbb107b9003f83337a6d011bac 75 OP_NOP2 OP_DROP 02057820710677d967d13b6be404a2622498ce0f84cbb107b9003f83337a6d011b OP_CHECKSIG\"\n\n# 1: sig (encrypted payload with privkey)\n# 2: pubkey (no-hash)\n# -- \u4e0a scriptSig || \u4e0b scriptPubKey\n# 3: 75 (locktime in little endian of 117)\n# 4: OP_NOP2 (operation of check locktime)\n# 5: OP_DROP (drop the top of stack that is 2)\n# 6: pubkey (no in hash)\n# 7: OP_CHECKSIG\n\n# \u5ff5\u306e\u305f\u3081\u3001\u672c\u5f53\u306b\u30ad\u30fc\u306f\u3042\u3063\u3066\u3044\u308b\u304b\u78ba\u8a8d\npubkey_to_address('02057820710677d967d13b6be404a2622498ce0f84cbb107b9003f83337a6d011b')\n => \"n4ZjDj9GArupgYd5fnCgHbQJYzw6W7EXsg\" \n\npubkey_to_address('0175b1752102057820710677d967d13b6be404a2622498ce0f84cbb107b9003f83337a6d011bac')\n => \"n1zMx3XjbE45vewnSTou4WzrEfXoxe19Ux\" \n\n# \u3042\u308c\uff1f\uff1f\n\n\u3046\u30fc\u3093\u3001\u691c\u8a3c\u4e2d\n\n\u30c7\u30d0\u30c3\u30b0\ntrue\u3068false\u306b\u305f\u3069\u308a\u7740\u304f\u307e\u3067\u306e\u904e\u7a0b\u304c\u898b\u305f\u3044\u3068\u304d\u3002\nscript = Bitcoin::Script.from_string(\"1112223330 123456 OP_CHECKSIG\")\n\nscript.debug\n => [[], \"PUSH DATA 1112223330\", [[\"1112223330\"]], \"PUSH DATA 123456\", [[\"1112223330\"], [\"123456\"]], \"OP_CHECKSIG\", [1], \"RESULT\"] \n\n# \u521d\u671f\u72b6\u614b\nscript.debug[0]\n => [] \n\n# \u7b2c\u4e00\u6bb5\u968e\nscript.debug[1]\n => \"PUSH DATA 1112223330\" \n\n# \u7b2c\u4e8c\u6bb5\u968e\nscript.debug[2]\n => [[\"1112223330\"]] \n\n# \u4ee5\u964d\u3001\u5404\u6bb5\u968e\u3054\u3068\u306b\u914d\u5217\u306b\u5165\u3063\u3066\u3044\u308b\n\nscript.debug[4]\n => [[\"1112223330\"], [\"123456\"]] \n\nscript.debug[5]\n => \"OP_CHECKSIG\" \n\nscript.debug[6]\n => [1]  # ??!?!?!?!!?!\n\nscript.debug[7]\n => \"RESULT\" \n\n\ntrue(=1)\u306b\u306a\u3063\u3066\u3044\u308b\u539f\u56e0\u306f\u3001OP_CHECKSIG\u5b9f\u884c\u6642\u306b\u30b3\u30fc\u30eb\u3055\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u672a\u5b9a\u7fa9\u306e\u305f\u3081\u3002\n  # run the script. +check_callback+ is called for OP_CHECKSIG operations\n  def run(block_timestamp=Time.now.to_i, opts={}, &check_callback)\n    # \u7701\u7565\n    m.call(check_callback)\n\n\nOP\n\nOP_DROP\n\nRemoves the top stack item.\n\n\u30b9\u30bf\u30c3\u30af\u306e\u6700\u4e0a\u4f4d\u306e\u9805\u76ee\u3092\u524a\u9664\u3059\u308b\u3002OPCODE = 117(0x75)\n\nOP_CHECKSIG\nOPCODE = 172 (0xAC)\n\u5f15\u65701 = sig, \u5f15\u65702 = pubkey\n\u623b\u308a\u5024 True / false\n\nThe entire transaction's outputs, inputs, and script (from the most recently-executed OP_CODESEPARATOR to the end) are hashed. The signature used by OP_CHECKSIG must be a valid signature for this hash and public key. If it is, 1 is returned, 0 otherwise.\n\n\u30cf\u30c3\u30b7\u30e5\uff08\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306eoutput, input, scriot\uff09\u3068\u3001pubkey\u304c\u59a5\u5f53\u304b\u691c\u8a0e\u3059\u308b\u3002\n\uff08\u3069\u3046\u3044\u3046\u3053\u3068\uff1f\uff09\n\nOP_NOP2\n\u305d\u306e\u3046\u3061\u3001OP_CHECKLOCKTIMEVERIFY\u3068\u3044\u3046\u540d\u524d\u306b\u5909\u308f\u308b\nOPCODE = 177 (0xb1)\n\u5f15\u6570 = \u306a\u3057\u3001\u623b\u308a\u5024 = \u306a\u3057\uff08\u307e\u305f\u306ffail\uff09\n\nMarks transaction as invalid if the top stack item is greater than the transaction's nLockTime field, otherwise script evaluation continues as though an OP_NOP was executed. Transaction is also invalid if 1. the stack is empty; or 2. the top stack item is negative; or 3. the top stack item is greater than or equal to 500000000 while the transaction's nLockTime field is less than 500000000, or vice versa; or 4. the input's nSequence field is equal to 0xffffffff. The precise semantics are described in BIP 0065\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306enLockTime\u304c\u3001\u30b9\u30bf\u30c3\u30af\u6700\u4e0a\u4f4d\u306e\u6570\u3088\u308a\u3082\uff08greater than\uff09\u5927\u304d\u3044\u3068\u304d\u306b\u7121\u52b9\u306b\u306a\u308b\u3002\uff08\u3059\u306a\u308f\u3061\u3001nLockTime\u304c\u3001\u30b9\u30bf\u30c3\u30af\u6700\u4e0a\u4f4d\u306e\u6570\uff08redeem_script\u3067\u6307\u5b9a\uff09\u4ee5\u4e0b\u306e\u3068\u304d\u306b\u6709\u52b9\u306b\u306a\u308b\u3002\n\u305d\u306e\u4ed6\u306e\u7121\u52b9\u6761\u4ef6\n4. input\u306enSequence field\u304c0xffffffff\u306e\u3068\u304d\u3082\u3001\u7121\u52b9\u306b\u306a\u308b\u3002\n\n\u3000\u53c2\u8003\nhttps://en.bitcoin.it/wiki/Transaction\nP2SH\u5b9b\u3066\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u308d\u3046\u3068\u3057\u305f\u3068\u304d\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3061\u3083\u3093\u3068\u52d5\u3044\u3066\u3044\u308b\u304b\u306a\uff1f\u3068\u30c7\u30d0\u30c3\u30b0\u3057\u3066\u307f\u305f\u304f\u306a\u308a\u307e\u3059\u3002\n\nBitcoin\u306eRuby\u5b9f\u88c5\u306f\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u3092Script\u30af\u30e9\u30b9\u3067\u6271\u3063\u3066\u3044\u3066\u3001\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u4e00\u3064\u306brun\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3044\u306a\u304c\u3089\u52d5\u304d\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u7279\u306b\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\u4e2d\u306e\u30b9\u30bf\u30c3\u30af\u306e\u72b6\u614b\u304c\u898b\u308c\u308bdebug\u3068\u3044\u3046\u914d\u5217\u306f\u306a\u304b\u306a\u304b\u4fbf\u5229\u3067\u3059\u3002\uff08\u5f8c\u8ff0\uff09\n\n# P2PKH\u306e\u30b9\u30af\u30ea\u30d7\u30c8\n\n\u307e\u305a\u306f\u3001\u30b7\u30f3\u30d7\u30eb\u306aP2PKH\u306e\u3068\u304d\u3002\n\n\u3053\u3093\u306avout\u304c\u3042\u3063\u305f\u3068\u3059\u308b\u3002\n\n```json\n  \"vout\": [\n    {\n      \"value\": 0.99900000,\n      \"n\": 0,\n      \"scriptPubKey\": {\n        \"asm\": \"OP_DUP OP_HASH160 687eb2c06a660cdbab88e9ea6b0ce45a1fddb99e OP_EQUALVERIFY OP_CHECKSIG\",\n        \"hex\": \"76a914687eb2c06a660cdbab88e9ea6b0ce45a1fddb99e88ac\",\n        \"reqSigs\": 1,\n        \"type\": \"pubkeyhash\",\n        \"addresses\": [\n          \"mq3UM9q26id4iJaguoST1RaHEJAtZuZCLK\"\n        ]\n      }\n    }\n  ]\n```\n\n\u3053\u308c\u3092\u3001\u65b0\u3057\u3044\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306evin\u306b\u7d44\u307f\u8fbc\u3080\u3068\u304d\u306b\u3001\u7f72\u540d\u306e\u691c\u8a3c\u3068\u7f72\u540d\u3092\u3064\u3051\u308b\u308f\u3051\u3067\u3059\u304c\u3001\n\nstring\u3067\u8868\u73fe\u3059\u308b\u3068\u3001\u300cOP_DUP ...\u300d\u3002hex\u3067\u8868\u73fe\u3059\u308b\u3068\u300c76a...\u300d\n\n# Script\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\n\n```rb\nscript_hex = '76a914687eb2c06a660cdbab88e9ea6b0ce45a1fddb99e88ac'\nscript = Bitcoin::Script.new(script_hex.htb)\n\n => #<Bitcoin::Script:0x007ff8fb8876f0 @raw_byte_sizes=[25, 0], @previous_output_script=nil, @input_script=\"v\\xA9\\x14h~\\xB2\\xC0jf\\f\\xDB\\xAB\\x88\\xE9\\xEAk\\f\\xE4Z\\x1F\\xDD\\xB9\\x9E\\x88\\xAC\", @raw=\"v\\xA9\\x14h~\\xB2\\xC0jf\\f\\xDB\\xAB\\x88\\xE9\\xEAk\\f\\xE4Z\\x1F\\xDD\\xB9\\x9E\\x88\\xAC\", @chunks=[118, 169, \"h~\\xB2\\xC0jf\\f\\xDB\\xAB\\x88\\xE9\\xEAk\\f\\xE4Z\\x1F\\xDD\\xB9\\x9E\", 136, 172], @exec_stack=[], @stack_alt=[], @stack=[], @last_codeseparator_index=0, @do_exec=true> \n\n# \u60f3\u5b9a\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u4f5c\u308c\u305f\u304b\u78ba\u8a8d\u3002json\u306easm\u3068\u540c\u3058\u5024\u3067\u3042\u308c\u3070OK\nscript.to_string\n => \"OP_DUP OP_HASH160 687eb2c06a660cdbab88e9ea6b0ce45a1fddb99e OP_EQUALVERIFY OP_CHECKSIG\" \n\n# \u30a2\u30c9\u30ec\u30b9\u306b\u5909\u63db\u3057\u3066\u307f\u308b\nhash160_to_address('687eb2c06a660cdbab88e9ea6b0ce45a1fddb99e')\n => \"mq3UM9q26id4iJaguoST1RaHEJAtZuZCLK\" \n```\n\n# \u5b9f\u884c\u3059\u308b\n\n\u5b9f\u884c\u3068\u3044\u3048\u3070\u3001run\u3002\n\n```rb\nscript.run\n => false \n```\n\n\u3046\u3093\u3002\n\nscriptPubKey\u5358\u4f53\u3067\u306f\u5b9f\u884c\u3067\u304d\u306a\u3044\u3002scriptSig\u3068\u5408\u308f\u305b\u3066\u521d\u3081\u3066\u6b63\u5e38\u306b\u52d5\u4f5c\u3059\u308b\u3002\uff08\u5f8c\u8ff0\uff09\n\n# \u5f15\u6570\u3092\u6e21\u3059\n\n\u5f15\u6570\u3092\u6e21\u3057\u3066\u4f7f\u3046\u3089\u3057\u3044\u3002do\u301cend\u306f\u3001run\u306e\u4e2d\u3067\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3002\n\n```rb\nblock_timestamp = 200 # \u9069\u5f53\nopts = {} # \u9069\u5f53\ntx = \uff08\u7701\u7565\uff09 # Script\u3067\u691c\u8a3c\u3059\u308b\u305f\u3081\u306etx\u3002\uff08\u3064\u307e\u308a\u3001UTXO\u3092\u6307\u5b9a\u3059\u308bvin\uff09\nsig_valid = script.run(block_timestamp, opts) do\n    |pubkey,sig,hash_type,subscript|\n  hash = tx.signature_hash_for_input(in_idx, subscript, hash_type)\n  Bitcoin.verify_signature( hash, sig, pubkey.unpack(\"H*\")[0] )\nend\n => false \n```\n\n\u306a\u308b\u307b\u3069\u3001\u3001\u3001\u308f\u304b\u3089\u3093\n\ndo\u301cend\u53e5\u306f\u3001validate\u7528\u306e\u305f\u3081\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3002\u3053\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u306a\u3044\u3068\u3001OP_CHECKSIG\u304c\u4f55\u3067\u3082true\u3092\u8fd4\u3057\u3066\u3057\u307e\u3046\u3002\uff08\u672b\u5c3e\u53c2\u8003\uff09\n\n\n# \u81ea\u529b\u3067run\n\nrun\u306e\u4e2d\u8eab\u3092\u9010\u6b21\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306f\u305d\u306e\u5834\u3067\u547c\u3076\u3002\n\n## P2PKH\n\n\u516c\u5f0f\u30b5\u30a4\u30c8\uff08\u53c2\u8003\uff09\u306b\u3088\u308b\u3068\u3001P2PKH\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3051\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u884c\uff08\u691c\u8a3c\uff09\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u304a\u3053\u306a\u3046\n\n> <script_sig> <script_pub_key>\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001vin\u306e\"scriptSig\"\u3068UTXO\u306e\"scriptPubKey\"\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001Script\n\u3092\u4f5c\u308b\n\n```rb\n\n# \u524d\u306eTx\u306escriptPubKey\u3092\u53d6\u308b\n# \u6ce8\u610f\uff1a\u3082\u3057\u3001\u305d\u308c\u304cP2SH\u3067\u3042\u308c\u3070\u3001scriptPunKey\u304c\u306a\u3044\u306e\u3067\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nscript_pubkey = prev_tx.out[prev_tx_out_index].pk_script\n\ntx.in[1].script\n=> \"H0E\\x02!\\x00\\xB6=\\xE7\\xD8\\x11;\\x80\\x10X\\xCDL3+L{,\\xA1~\\x8Dr\\xCC\\xC7\\x13\\xBA\\xC7\\xEF\\x14+\\xCF\\xD0}\\xAA\\x02 V\\x92\\x9Dt}\\xC29\\xC9\\xC8]\\x7F\\xBC\\xAF\\xD4\\x15\\xEC\\r9\\x19\\x81&\\xC2\\x9F\\xAAf3q{\\x04d\\x1D\\v\\x01!\\x02r\\xE3=\\xAB\\x1Eo(\\x170\\xC4\\xA7\\xAA\\xE5\\xEE\\x85\\xE1\\xCD\\xE6\\x10+\\x06\\xC6\\x1E\\xE7\\xA3TO\\xD0\\xA1\\x8D,\\xEC\" \n\nscript_pubkey.to_string\n=> \"v\\xA9\\x14h~\\xB2\\xC0jf\\f\\xDB\\xAB\\x88\\xE9\\xEAk\\f\\xE4Z\\x1F\\xDD\\xB9\\x9E\\x88\\xAC\" \n\n# script\u3092\u4f5c\u308b\nscript = Bitcoin::Script.new(tx.in[1].script + script_pubkey)\n\n# script\u3092\u898b\u308b\nscript.to_string\n => \"3045022100b63de7d8113b801058cd4c332b4c7b2ca17e8d72ccc713bac7ef142bcfd07daa022056929d747dc239c9c85d7fbcafd415ec0d39198126c29faa6633717b04641d0b01 0272e33dab1e6f281730c4a7aae5ee85e1cde6102b06c61ee7a3544fd0a18d2cec OP_DUP OP_HASH160 687eb2c06a660cdbab88e9ea6b0ce45a1fddb99e OP_EQUALVERIFY OP_CHECKSIG\" \n\n# 1: sig (encrypted payload with privkey)\n# 2: pubkey (no-hash)\n# -- \u4e0a scriptSig || \u4e0b scriptPubKey\n# 3: OP_DUP\n# 4: OP_HASH160 (in order to derive hash160 of pubkey in 3 which is equal to 2)\n# 5: hash160 of pubkey\n# 6: OP_EQUALVERIFY\n# 7: OP_CHECKSIG\n\n# \u5b9f\u884c\u3059\u308b\nscript.run\n => true\n```\n\n\u304a\u304a\uff01\n\n## P2SH\n\nP2PKH\u3068\u540c\u3058\u3088\u3046\u306b\u3084\u3063\u3066\u307f\u308b\u3002\u305f\u3060\u3057\u3001\u524d\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u306fscriptPubKey\u304c\u306a\u3044\u306e\u3067\u3001\u4ee3\u308f\u308a\u306bredeem script\uff08\u4f55\u3089\u304b\u306e\u624b\u6bb5\u3067\u4e8b\u524d\u306b\u5171\u6709\uff09\u3092\u5143\u306b\u4f7f\u3046\u3053\u3068\u306b\u6ce8\u610f\u3002\n\n\u3053\u306e\u3068\u304d\u3001redeem_script\uff08P2PKH\u306escriptPubKey\uff08\u524d\u306eTx\u306evout\u4e2d\u306b\u8a18\u8f09\uff09\u306b\u76f8\u5f53\uff09\u306b\u5408\u308f\u305b\u3066\u3001scriptSig\u3082\u66f8\u304d\u63db\u3048\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\u4fbf\u5b9c\u4e0a\u3001\u3053\u3053\u3067\u306f\u3001spend_script\u3068\u547c\u3076\u3002\n\u4eee\u306b\u3001P2PKH\u306e\u3088\u3046\u306b\u3001\u5358\u306b\"scriptSig + redeem_script\"\u3067\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u306e\u30b9\u30bf\u30c3\u30af\u304c\u3046\u307e\u304f\u51e6\u7406\u3055\u308c\u305a\u306b\u3001false\u3068\u306a\u308b\u3002\n\n\u7e70\u308a\u8fd4\u3057\u306b\u306a\u308b\u304c\u3001redeem_script\u304b\u3089spend_script\u3092\u4f5c\u308a\u3001\u305d\u308c\u3068scriptSig\u3068\u5408\u4f53\u3055\u305b\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n```rb\nredeem_script_hex     =\n'0175b1752102057820710677d967d13b6be404a2622498ce0f84cbb107b9003f83337a6d011bac'\n => \"0175b1752102057820710677d967d13b6be404a2622498ce0f84cbb107b9003f83337a6d011bac\" \n\n# redeem_script\u3092Script\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3059\u308b\nredeem_script = Bitcoin::Script.new(redeem_script_hex.htb)\n => #<Bitcoin::Script:0x007ff8face0c70 @raw_byte_sizes=[39, 0], @previous_output_script=nil, @input_script=\"\\x01u\\xB1u!\\x02\\x05x q\\x06w\\xD9g\\xD1;k\\xE4\\x04\\xA2b$\\x98\\xCE\\x0F\\x84\\xCB\\xB1\\a\\xB9\\x00?\\x833zm\\x01\\e\\xAC\", @raw=\"\\x01u\\xB1u!\\x02\\x05x q\\x06w\\xD9g\\xD1;k\\xE4\\x04\\xA2b$\\x98\\xCE\\x0F\\x84\\xCB\\xB1\\a\\xB9\\x00?\\x833zm\\x01\\e\\xAC\", @chunks=[\"u\", 177, 117, \"\\x02\\x05x q\\x06w\\xD9g\\xD1;k\\xE4\\x04\\xA2b$\\x98\\xCE\\x0F\\x84\\xCB\\xB1\\a\\xB9\\x00?\\x833zm\\x01\\e\", 172], @exec_stack=[], @stack_alt=[], @stack=[], @last_codeseparator_index=0, @do_exec=true> \n\n# Script\u3092\u4f5c\u6210\nscript = Bitcoin::Script.new(tx.in[0].script + spend_script)\n\n# script\u3092\u898b\u3066\u307f\u3088\u3046\nscript.to_string\n => \"304402200d1568e4762531c08a9b81520162c1f8d8927dc54dd792d7942d969e438c917e022063c38a7f3177e0f18b90cf5ffe011388d4bc3aa46d2e59ae53cac008a170d0f601 0175b1752102057820710677d967d13b6be404a2622498ce0f84cbb107b9003f83337a6d011bac 75 OP_NOP2 OP_DROP 02057820710677d967d13b6be404a2622498ce0f84cbb107b9003f83337a6d011b OP_CHECKSIG\"\n\n# 1: sig (encrypted payload with privkey)\n# 2: pubkey (no-hash)\n# -- \u4e0a scriptSig || \u4e0b scriptPubKey\n# 3: 75 (locktime in little endian of 117)\n# 4: OP_NOP2 (operation of check locktime)\n# 5: OP_DROP (drop the top of stack that is 2)\n# 6: pubkey (no in hash)\n# 7: OP_CHECKSIG\n\n# \u5ff5\u306e\u305f\u3081\u3001\u672c\u5f53\u306b\u30ad\u30fc\u306f\u3042\u3063\u3066\u3044\u308b\u304b\u78ba\u8a8d\npubkey_to_address('02057820710677d967d13b6be404a2622498ce0f84cbb107b9003f83337a6d011b')\n => \"n4ZjDj9GArupgYd5fnCgHbQJYzw6W7EXsg\" \n\npubkey_to_address('0175b1752102057820710677d967d13b6be404a2622498ce0f84cbb107b9003f83337a6d011bac')\n => \"n1zMx3XjbE45vewnSTou4WzrEfXoxe19Ux\" \n\n# \u3042\u308c\uff1f\uff1f\n```\n\n\u3046\u30fc\u3093\u3001\u691c\u8a3c\u4e2d\n\n\n# \u30c7\u30d0\u30c3\u30b0\n\ntrue\u3068false\u306b\u305f\u3069\u308a\u7740\u304f\u307e\u3067\u306e\u904e\u7a0b\u304c\u898b\u305f\u3044\u3068\u304d\u3002\n\n```rb\nscript = Bitcoin::Script.from_string(\"1112223330 123456 OP_CHECKSIG\")\n\nscript.debug\n => [[], \"PUSH DATA 1112223330\", [[\"1112223330\"]], \"PUSH DATA 123456\", [[\"1112223330\"], [\"123456\"]], \"OP_CHECKSIG\", [1], \"RESULT\"] \n\n# \u521d\u671f\u72b6\u614b\nscript.debug[0]\n => [] \n\n# \u7b2c\u4e00\u6bb5\u968e\nscript.debug[1]\n => \"PUSH DATA 1112223330\" \n\n# \u7b2c\u4e8c\u6bb5\u968e\nscript.debug[2]\n => [[\"1112223330\"]] \n\n# \u4ee5\u964d\u3001\u5404\u6bb5\u968e\u3054\u3068\u306b\u914d\u5217\u306b\u5165\u3063\u3066\u3044\u308b\n\nscript.debug[4]\n => [[\"1112223330\"], [\"123456\"]] \n\nscript.debug[5]\n => \"OP_CHECKSIG\" \n\nscript.debug[6]\n => [1]  # ??!?!?!?!!?!\n\nscript.debug[7]\n => \"RESULT\" \n\n```\n\ntrue(=1)\u306b\u306a\u3063\u3066\u3044\u308b\u539f\u56e0\u306f\u3001OP_CHECKSIG\u5b9f\u884c\u6642\u306b\u30b3\u30fc\u30eb\u3055\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u672a\u5b9a\u7fa9\u306e\u305f\u3081\u3002\n\n```rb\n  # run the script. +check_callback+ is called for OP_CHECKSIG operations\n  def run(block_timestamp=Time.now.to_i, opts={}, &check_callback)\n    # \u7701\u7565\n    m.call(check_callback)\n```\n\n\n# OP\n## OP_DROP\n\n> Removes the top stack item.\n\n\u30b9\u30bf\u30c3\u30af\u306e\u6700\u4e0a\u4f4d\u306e\u9805\u76ee\u3092\u524a\u9664\u3059\u308b\u3002OPCODE = 117(0x75)\n\n## OP_CHECKSIG\nOPCODE = 172 (0xAC)\n\u5f15\u65701 = sig, \u5f15\u65702 = pubkey\n\u623b\u308a\u5024 True / false\n\n> The entire transaction's outputs, inputs, and script (from the most recently-executed OP_CODESEPARATOR to the end) are hashed. The signature used by OP_CHECKSIG must be a valid signature for this hash and public key. If it is, 1 is returned, 0 otherwise.\n\n\u30cf\u30c3\u30b7\u30e5\uff08\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306eoutput, input, scriot\uff09\u3068\u3001pubkey\u304c\u59a5\u5f53\u304b\u691c\u8a0e\u3059\u308b\u3002\n\uff08\u3069\u3046\u3044\u3046\u3053\u3068\uff1f\uff09\n\n## OP_NOP2\n\n\u305d\u306e\u3046\u3061\u3001OP_CHECKLOCKTIMEVERIFY\u3068\u3044\u3046\u540d\u524d\u306b\u5909\u308f\u308b\nOPCODE = 177 (0xb1)\n\u5f15\u6570 = \u306a\u3057\u3001\u623b\u308a\u5024 = \u306a\u3057\uff08\u307e\u305f\u306ffail\uff09\n> Marks transaction as invalid if the top stack item is greater than the transaction's nLockTime field, otherwise script evaluation continues as though an OP_NOP was executed. Transaction is also invalid if 1. the stack is empty; or 2. the top stack item is negative; or 3. the top stack item is greater than or equal to 500000000 while the transaction's nLockTime field is less than 500000000, or vice versa; or 4. the input's nSequence field is equal to 0xffffffff. The precise semantics are described in BIP 0065\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306enLockTime\u304c\u3001\u30b9\u30bf\u30c3\u30af\u6700\u4e0a\u4f4d\u306e\u6570**\u3088\u308a\u3082\uff08greater than\uff09\u5927\u304d\u3044**\u3068\u304d\u306b\u7121\u52b9\u306b\u306a\u308b\u3002\uff08\u3059\u306a\u308f\u3061\u3001nLockTime\u304c\u3001\u30b9\u30bf\u30c3\u30af\u6700\u4e0a\u4f4d\u306e\u6570\uff08redeem_script\u3067\u6307\u5b9a\uff09**\u4ee5\u4e0b**\u306e\u3068\u304d\u306b\u6709\u52b9\u306b\u306a\u308b\u3002\n\n\u305d\u306e\u4ed6\u306e\u7121\u52b9\u6761\u4ef6\n4. input\u306enSequence field\u304c0xffffffff\u306e\u3068\u304d\u3082\u3001\u7121\u52b9\u306b\u306a\u308b\u3002\n\n\n#\u3000\u53c2\u8003\nhttps://en.bitcoin.it/wiki/Transaction\n\n\n", "tags": ["Bitcoin", "Ruby"]}