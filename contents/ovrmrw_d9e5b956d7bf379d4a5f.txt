{"context": "(\u8ffd\u8a18)2.0\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f\u3002(2016/09/15)\n\u4eca\u56de\u306eGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u2192ovrmrw/friendlychat-ng2\n\u5148\u65e5Firebase\u306e\u516c\u5f0f\u30b5\u30a4\u30c8\u3067Web\u30a2\u30d7\u30ea\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u767a\u898b\u3057\u307e\u3057\u3066\u3001\u3053\u308c\u3092\u3084\u3063\u3066\u307f\u305f\u3089Database\u3060\u3051\u3058\u3083\u306a\u304fAuth\u3068Storage\u306e\u4f7f\u3044\u65b9\u306e\u52c9\u5f37\u306b\u3082\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306fWeb\u30a2\u30d7\u30ea\u521d\u5fc3\u8005\u306a\u3089\u4e00\u5ea6\u306f\u3084\u3063\u3066\u304a\u304f\u3079\u304d\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3060\u306a\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001JavaScript\u30d5\u30a1\u30a4\u30eb\u304cVanillaJS\u3067\u66f8\u304b\u308c\u3066\u3044\u3066\u500b\u4eba\u7684\u306b\u89e3\u91c8\u3059\u308b\u306e\u304c\u3068\u3066\u3082\u5927\u5909\u3067\u3057\u305f\u3002\n\u305d\u3053\u3067\u300c\u3053\u308c\u306f\u3088\u308d\u3057\u304f\u306a\u3044\u300d\u3068\u601d\u3044\u3001\u591a\u304f\u306e\u4eba\u304c\u5bb9\u6613\u306b\u7406\u89e3\u53ef\u80fd\u306aAngular2\u30b9\u30bf\u30a4\u30eb\u306b\u66f8\u304d\u76f4\u3055\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u601d\u3044\u7acb\u3061\u307e\u3057\u3066\u3001\u4eca\u56de\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u306b\u81f3\u3063\u305f\u6b21\u7b2c\u3067\u3059\u3002\nFirebase Hosting\u306b\u3082\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u3042\u308a\u307e\u3059\u306e\u3067\u3088\u308d\u3057\u3051\u308c\u3070\u3069\u3046\u305e\u3002\n\n(Firebase Hosting)\u3053\u3061\u3089\u306f\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b3\u30fc\u30c9\n(Firebase Hosting)\u3053\u3061\u3089\u306fAngular2\u3067\u30ea\u30e1\u30a4\u30af\u3057\u305f\u30b3\u30fc\u30c9\n\n\u5927\u4f53\u30aa\u30ea\u30b8\u30ca\u30eb\u3092\u30b3\u30d4\u30fc\u3067\u304d\u3066\u3044\u308b\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002(\u5b8c\u5168\u3067\u306f\u306a\u3044)\n\nFirebase\u30921\u30d5\u30a1\u30a4\u30eb\u3067\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\nFirebase\u3092\u76f4\u63a5\u53e9\u3044\u3066\u3044\u308b\u306e\u306f\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002Component\u306fService\u3092\u7d4c\u7531\u3057\u3066\u3053\u3053\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u30aa\u30ea\u30b8\u30ca\u30eb\u306eJS\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u2192main.js\n\u30aa\u30ea\u30b8\u30ca\u30eb\u3092\u6642\u306b\u306f\u307b\u307c\u5fe0\u5b9f\u306b\u3001\u6642\u306b\u306f\u9069\u5f53\u306b\u66f8\u304d\u63db\u3048\u3066\u4f5c\u308a\u307e\u3057\u305f\u3002\n\nsrc/firebase/firebase.controller.ts\nimport firebase from 'firebase';\nimport { Observable, Subject, BehaviorSubject, ReplaySubject } from 'rxjs/Rx';\nimport lodash from 'lodash';\nimport { MessageType } from '../types';\n\nconst config = {\n  apiKey: 'AIzaSyDUGgHesSALxeaKYH_qyt-NxPndMgD6MVI',\n  authDomain: 'friendlychat-d014b.firebaseapp.com',\n  databaseURL: 'https://friendlychat-d014b.firebaseio.com',\n  storageBucket: 'friendlychat-d014b.appspot.com',\n};\n\nconst LOADING_IMAGE_URL = 'https://www.google.com/images/spin-32.gif';\n\nexport class FirebaseController {\n  private auth: firebase.auth.Auth;\n  private database: firebase.database.Database;\n  private storage: firebase.storage.Storage;\n  private messagesRef: firebase.database.Reference;\n  private authSubject$: Subject<firebase.User | null>;\n  private messages: MessageType[] = [];\n  private messagesSubject$: Subject<MessageType[]>;\n  private informStableSubject$: Subject<boolean>;\n\n  constructor() {\n    firebase.initializeApp(config);\n\n    this.authSubject$ = new BehaviorSubject<firebase.User | null>(null);\n    this.messagesSubject$ = new ReplaySubject<MessageType[]>();\n    this.informStableSubject$ = new ReplaySubject<boolean>();\n\n    this.auth = firebase.auth();\n    this.database = firebase.database();\n    this.storage = firebase.storage();\n\n    // \u30b5\u30a4\u30f3\u30a4\u30f3\u304b\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u3092\u3059\u308b\u3068\u305d\u306e\u90fd\u5ea6\u3053\u306e\u51e6\u7406\u304c\u8d70\u308b\u3002\n    this.auth.onAuthStateChanged((user: firebase.User) => {\n      if (user) { // User is signed in!\n        this.authSubject$.next(user);\n      } else { // User is signed out!\n        this.authSubject$.next(null);\n      }\n    });\n\n    this.messagesRef = this.database.ref('messages');\n  }\n\n  signIn() {\n    // Sign in Firebase using popup auth and Google as the identity provider.\n    const provider = new firebase.auth.GoogleAuthProvider();\n    this.auth.signInWithPopup(provider);\n  }\n\n  signOut() {\n    // Sign out of Firebase.\n    this.auth.signOut();\n  }\n\n  saveMessage(message: string) {\n    if (message) {\n      const currentUser = this.auth.currentUser;\n      if (currentUser) {\n        // Add a new message entry to the Firebase Database.\n        this.messagesRef.push({\n          name: currentUser.displayName,\n          text: message,\n          photoUrl: currentUser.photoURL || '/images/profile_placeholder.png'\n        }).then(() => {\n          this.informStableSubject$.next(true);\n        }).catch((error) => {\n          console.error('Error writing new message to Firebase Database', error);\n        });\n      }\n    }\n  }\n\n  saveImageMessage(file: File) {\n    if (file) {\n      // We add a message with a loading icon that will get updated with the shared image.\n      const currentUser = this.auth.currentUser;\n      if (currentUser) {\n        this.messagesRef.push({\n          name: currentUser.displayName,\n          imageUrl: LOADING_IMAGE_URL,\n          photoUrl: currentUser.photoURL || '/images/profile_placeholder.png'\n        }).then((data) => {\n          // Upload the image to Firebase Storage.\n          const uploadTask = this.storage.ref(currentUser.uid + '/' + Date.now() + '/' + file.name)\n            // .put(file, { 'contentType': file.type });\n            .put(file);\n          // Listen for upload completion.\n          uploadTask.on('state_changed', null, (error) => {\n            console.error('There was an error uploading a file to Firebase Storage:', error);\n          }, () => {\n            // Get the file's Storage URI and update the chat message placeholder.\n            const filePath = uploadTask.snapshot.metadata.fullPath;\n            data.update({ imageUrl: this.storage.ref(filePath).toString() });\n          });\n        });\n      }\n    }\n  }\n\n  setImageUrl(imageUrl: string): Observable<string> {\n    if (!imageUrl.startsWith('gs://')) { // \u5909\u6570imageUrl\u304cFirebase Storage\u306e\u3082\u306e\u3067\u306f\u306a\u3044\u5834\u5408\u3001\u305d\u306e\u307e\u307e\u8fd4\u3059\u3002\n      return Observable.of(imageUrl);\n    }\n    // If the image is a Firebase Storage URI we fetch the URL.\n    const subject = new BehaviorSubject<string>(LOADING_IMAGE_URL); // \u3068\u308a\u3042\u3048\u305a\u30b0\u30eb\u30b0\u30eb\u3092\u8868\u793a\u3055\u305b\u308b\u3002\n\n    this.storage.refFromURL(imageUrl).getMetadata().then((metadata) => {\n      subject.next(metadata.downloadURLs[0]); // image\u30d5\u30a1\u30a4\u30eb\u306e\u672c\u6765\u306eURL\u3092\u53d6\u5f97\u3057\u305f\u3089\u5dee\u3057\u66ff\u3048\u308b\u3002\n      subject.complete(); // \u9069\u5207\u306bcomplete\u3057\u306a\u3044\u3068\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u306e\u539f\u56e0\u306b\u306a\u308b\u3002\n    });\n    return subject.asObservable();\n  }\n\n  loadMessages() {\n    this.messages = [];\n    // Make sure we remove all previous listeners.\n    this.messagesRef.off();\n\n    // Loads the last 12 messages and listen for new ones.\n    this.messagesRef.limitToLast(12).on('child_added', (snapshot: firebase.database.DataSnapshot) => {\n      const message = lodash.defaultsDeep(snapshot.val(), { key: snapshot.key }) as MessageType;\n      this.messages.push(message);\n      this.messagesSubject$.next(this.messages);\n      this.informStableSubject$.next(true);\n    });\n    this.messagesRef.limitToLast(12).on('child_changed', (snapshot: firebase.database.DataSnapshot) => {\n      const message = lodash.defaultsDeep(snapshot.val(), { key: snapshot.key }) as MessageType;\n      this.messages = lodash.reject(this.messages, { key: snapshot.key });\n      this.messages.push(message);\n      this.messagesSubject$.next(this.messages);\n      this.informStableSubject$.next(true);\n    });\n  }\n\n  get currentUser$() { return this.authSubject$.asObservable(); }\n  get messages$() { return this.messagesSubject$.asObservable(); }\n  get informStable$() { return this.informStableSubject$.asObservable(); }\n}\n\n\n\n\u30b5\u30a4\u30f3\u30a4\u30f3\u3001\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u306e\u72b6\u614b\u3092rxjs\u3067\u5236\u5fa1\u3059\u308b\n\u5f53\u7136\u306e\u3053\u3068\u306a\u304c\u3089\u30b5\u30a4\u30f3\u30a4\u30f3\u3001\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u3092\u3057\u305f\u3068\u304d\u306b\u30a2\u30d7\u30ea\u306f\u305d\u306e\u72b6\u614b\u3092\u53cd\u6620\u3055\u305b\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001rxjs\u306eSubject\u3092\u4f7f\u3063\u3066\nFirebaseController \u2192 AppService \u2192 AppComponent\n\u306e\u9806\u3067currentUser$\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u6d41\u3057\u3066\u3044\u307e\u3059\u3002\nAppComponent\u3067\u306frxjs\u306eSubscription\u304c\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3092\u8d77\u3053\u3055\u306a\u3044\u3088\u3046\u306bngOnDestroy()\u3067dispose\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8fba\u308a\u306frxjs\u3092\u6271\u3046\u3068\u304d\u306e\u57fa\u672c\u3068\u3082\u8a00\u3048\u307e\u3059\u3002\n\nsrc/app/app.service.ts\n// \u629c\u7c8b\n@Injectable()\nexport class AppService {\n  constructor(\n    private fc: FirebaseController\n  ) { }\n\n  get currentUser$() { return this.fc.currentUser$; }  \n}\n\n\n\nsrc/app/app.component.ts\n// \u629c\u7c8b\n  ngOnInit() {\n    this.disposable = this.service.currentUser$.subscribe(user => {\n      if (user) { // Firebase\u304b\u3089\u30b5\u30a4\u30f3\u30a4\u30f3\u306e\u72b6\u614b\u3092\u53d7\u3051\u53d6\u3063\u305f\u3002\n        this.isAuthed = true;\n      } else { // Firebase\u304b\u3089\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u306e\u72b6\u614b\u3092\u53d7\u3051\u53d6\u3063\u305f\u3002\n        this.isAuthed = false;\n      }\n      this.cd.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this.disposeSubscriptions(); // Subscription\u3092\u307e\u3068\u3081\u3066\u7834\u68c4\u3059\u308b\u3002\u9069\u5207\u306a\u30e1\u30e2\u30ea\u7ba1\u7406\u306frxjs\u306e\u57fa\u672c\u3002\n  }\n\n\n\u307e\u305fAppComponent\u306fAngular2\u306etemplate\u3092\u901a\u3058\u3066\u5b50Component\u306b isAuthed \u306e\u5024\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\nsrc/app/app.template.html\n<!-- \u629c\u7c8b -->\n  <chat-header [isAuthed]=\"isAuthed\"></chat-header>\n  <chat-main [isAuthed]=\"isAuthed\"></chat-main>\n\n\n\u3053\u3046\u3084\u3063\u3066\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30c4\u30ea\u30fc\u5168\u4f53\u306b\u30b5\u30a4\u30f3\u30a4\u30f3\u3001\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u306e\u72b6\u614b\u3092\u901a\u77e5\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u306d\u3002\n\nSnackBar\u3092rxjs\u3067\u5236\u5fa1\u3059\u308b\nFirebase\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u4f7f\u308f\u308c\u308bCSS\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306fMaterial Design Lite\u3068\u3044\u3046\u3082\u306e\u3067\u3001\u305d\u306e\u6a5f\u80fd\u306e\u4e00\u3064\u3068\u3057\u3066 SnackBar\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002Toastr\u307f\u305f\u3044\u306a\u901a\u77e5\u6a5f\u80fd\u3067\u3059\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3053\u308c\u3082rxjs\u306eSubject\u3067\u5236\u5fa1\u3057\u3066\u3044\u307e\u3059\u3002\n\nsrc/main/main.component.ts\n// \u629c\u7c8b\n  snackbarText$ = new Subject<string>();\n\n  onSubmitMessage() {\n    if (this.isAuthed) { // \u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u3066\u3044\u308b\u3002\n      this.service.send(this.text);\n    } else { // \u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u3066\u3044\u306a\u3044\u3002\n      this.snackbarText$.next('You must sign-in first');\n    }\n  }\n\n  onSelectImageFile(event) { // \u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u305f\u3002\n    if (event.target && event.target.files && event.target.files.length) {\n      const file = event.target.files[0] as File;\n      console.log(file);\n      if (file.type.match('image.*')) { // image\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u305f\u3002\n        this.service.saveImage(file);\n      } else { // image\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u306a\u3044\u3082\u306e\u3092\u9078\u629e\u3057\u305f\u3002\n        this.snackbarText$.next('You can only share images');\n        this.resetForm();\n      }\n    }\n  }\n\n\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u306e\u4e2d\u3067 snackbarText$.next(...) \u3068\u66f8\u3044\u3066\u3042\u308b\u90e8\u5206\u304c\u305d\u3046\u306a\u306e\u3067\u3059\u304c\u3001\u8868\u793a\u3055\u305b\u305f\u3044\u6587\u5b57\u5217\u3092\u6e21\u3059\u3068template\u3092\u901a\u3058\u3066ChatSnackbarComponent\u306esnackbarText(Observable)\u306esubscribe()\u306b\u6d41\u308c\u307e\u3059\u3002\n\u305d\u306e\u7d50\u679cnext()\u3059\u308b\u5ea6\u306bSnackBar\u304c\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u308b\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002\n\nsrc/main/main.template.html\n<!-- \u629c\u7c8b -->\n  <chat-snackbar [snackbarText]=\"snackbarText$\"></chat-snackbar>\n\n\n\nsrc/snackbar/snackbar.component.ts\n// \u629c\u7c8b\nexport class ChatSnackbarComponent extends ParentComponent implements OnInit, OnDestroy {\n  @Input() snackbarText: Observable<string>; // ChatMainComponent\u304b\u3089.next()\u3067\u65b0\u3057\u3044\u5024\u3092\u9001\u308a\u8fbc\u3080\u3002\n\n  constructor(\n    private cd: ChangeDetectorRef,\n    private el: ElementRef\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.disposable = this.snackbarText.subscribe(text => {\n      if (text) {\n        const data = {\n          message: text,\n          timeout: 2000\n        };\n        const element = (<HTMLElement>this.el.nativeElement).querySelector('#must-signin-snackbar') as any;\n        element.MaterialSnackbar.showSnackbar(data); // SnackBar\u3092\u8868\u793a\u3059\u308b\u3002\n        this.cd.markForCheck();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.disposeSubscriptions();\n  }\n}\n\n\n\n\u753b\u50cf\u306eURL\u3092\u6642\u9593\u5dee\u3067\u5dee\u3057\u66ff\u3048\u308b(rxjs\u3067)\n\u5b9f\u969b\u306e\u52d5\u304d\u3092\u898b\u3066\u3082\u3089\u3048\u308c\u3070\u308f\u304b\u308a\u307e\u3059\u304c\u3001\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u306f\u307e\u305a\u6700\u521d\u306b\u30b0\u30eb\u30b0\u30eb\u3092\u8868\u793a\u3055\u305b\u3066\u3001\u305d\u306e\u5f8cFirebase Storage\u304b\u3089\u672c\u6765\u306eURL\u3092\u53d6\u5f97\u6b21\u7b2c\u5dee\u3057\u66ff\u3048\u3092\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3082rxjs\u306eSubject\u3067\u3059\u3002\n\u4e0b\u8a18\u306fFirebaseController\u306e\u30b3\u30fc\u30c9\u3002\n\nsrc/firebase/firebase.controller.ts\n// \u629c\u7c8b\n  setImageUrl(imageUrl: string): Observable<string> {\n    if (!imageUrl.startsWith('gs://')) { // \u5909\u6570imageUrl\u304cFirebase Storage\u306e\u3082\u306e\u3067\u306f\u306a\u3044\u5834\u5408\u3001\u305d\u306e\u307e\u307e\u8fd4\u3059\u3002\n      return Observable.of(imageUrl);\n    }\n    // If the image is a Firebase Storage URI we fetch the URL.\n    const subject = new BehaviorSubject<string>(LOADING_IMAGE_URL); // \u3068\u308a\u3042\u3048\u305a\u30b0\u30eb\u30b0\u30eb\u3092\u8868\u793a\u3055\u305b\u308b\u3002\n\n    this.storage.refFromURL(imageUrl).getMetadata().then((metadata) => {\n      subject.next(metadata.downloadURLs[0]); // image\u30d5\u30a1\u30a4\u30eb\u306e\u672c\u6765\u306eURL\u3092\u53d6\u5f97\u3057\u305f\u3089\u5dee\u3057\u66ff\u3048\u308b\u3002\n      subject.complete(); // \u9069\u5207\u306bcomplete\u3057\u306a\u3044\u3068\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u306e\u539f\u56e0\u306b\u306a\u308b\u3002\n    });\n    return subject.asObservable();\n  }\n\n\n\u3053\u308c\u3092Serivce\u3092\u901a\u3058\u3066ChatMessageComponent\u304c\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\nsrc/message/message.service.ts\n// \u629c\u7c8b\nexport class ChatMessageService {\n  constructor(\n    private fc: FirebaseController\n  ) { }\n\n  resolveImageSrc(imageUrl: string) {\n    return this.fc.setImageUrl(imageUrl);\n  }\n}\n\n\n\nsrc/message/message.component.ts\n// \u629c\u7c8b\nexport class ChatMessageComponent implements OnChanges {\n  @Input() imageUrl: string;\n  imageSrc: Observable<string>;\n\n  constructor(\n    private service: ChatMessageService,\n    private cd: ChangeDetectorRef\n  ) { }\n\n  ngOnChanges() {\n    if (this.imageUrl) {\n      this.imageSrc = this.service.resolveImageSrc(this.imageUrl); // \u6642\u9593\u5dee\u3067image\u30d5\u30a1\u30a4\u30eb\u306eURL\u3092\u5dee\u3057\u66ff\u3048\u308b\u3002\n    }\n  }\n}\n\n\n\u305d\u3057\u3066\u3053\u306eimageSrc\u3092template\u306bAsyncPipe\u4ed8\u304d\u3067\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u6642\u9593\u5dee\u3067img\u30bf\u30b0\u306esrc\u30a2\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nsrc/message/message.template.html\n<!-- \u629c\u7c8b -->\n  <div *ngIf=\"imageUrl\" class=\"message\"><img (load)=\"onLoadImage()\" [src]=\"imageSrc | async\"></div>\n\n\n\nFile API\u3092\u4f7f\u3063\u3066\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\nJavaScript\u306b\u306f\u5143\u3005File API\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002(\u305d\u306e\u5f8cFirebase Storage\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b)\n\u3053\u306e\u6d41\u308c\u306f\u307e\u305atemplate\u304b\u3089\u59cb\u307e\u308a\u3001\u6700\u7d42\u7684\u306bFirebaseController\u306esaveImageMessage()\u95a2\u6570\u306b\u5230\u9054\u3057\u307e\u3059\u3002\n\n\nbutton\u30bf\u30b0\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066(click)=\"mediaCapture.click()\"\u304c\u767a\u706b\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u30d5\u30a1\u30a4\u30eb\u9078\u629e\u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u8868\u793a\u3055\u305b\u308b\u3002(input\u30bf\u30b0\u306b#mediaCapture\u3092\u66f8\u3044\u3066\u3044\u308b\u306e\u3067button\u30bf\u30b0\u5185\u3067input\u30bf\u30b0\u3092\u53c2\u7167\u3067\u304d\u308b)\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\u3002\n\ninput\u30bf\u30b0\u306e(change)=\"onSelectImageFile($event)\"\u304c\u767a\u706b\u3002\nComponent\u306eonSelectImageFile()\u95a2\u6570\u3092\u5b9f\u884c\u3002\nService\u306esaveImage()\u95a2\u6570\u3092\u5b9f\u884c\u3002\nFirebaseController\u306esaveImageMessage()\u95a2\u6570\u3092\u5b9f\u884c\u3002\n\n\nsrc/main/main.template.html\n<!-- \u629c\u7c8b -->\n  <form id=\"image-form\" action=\"#\">\n    <input id=\"mediaCapture\" #mediaCapture (change)=\"onSelectImageFile($event)\" type=\"file\" accept=\"image/*,capture=camera\">\n    <button id=\"submitImage\" (click)=\"mediaCapture.click()\" title=\"Add an image\" class=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-color--amber-400 mdl-color-text--white\">\n      <i class=\"material-icons\">image</i>\n    </button>\n  </form>\n\n\n\nsrc/main/main.component.ts\n// \u629c\u7c8b\n  onSelectImageFile(event) { // \u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u305f\u3002\n    if (event.target && event.target.files && event.target.files.length) {\n      const file = event.target.files[0] as File;\n      console.log(file);\n      if (file.type.match('image.*')) { // image\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u305f\u3002\n        this.service.saveImage(file);\n      } else { // image\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u306a\u3044\u3082\u306e\u3092\u9078\u629e\u3057\u305f\u3002\n        this.snackbarText$.next('You can only share images');\n        this.resetForm();\n      }\n    }\n  }\n\n\n\nsrc/main/main.service.ts\n// \u629c\u7c8b\nexport class ChatMainService {\n  constructor(\n    private fc: FirebaseController\n  ) { }\n\n  saveImage(file: File) {\n    this.fc.saveImageMessage(file);\n  }\n}\n\n\n\nsrc/firebase/firebase.controller.ts\n// \u629c\u7c8b\n  saveImageMessage(file: File) {\n    if (file) {\n      // We add a message with a loading icon that will get updated with the shared image.\n      // \u7701\u7565\n    }\n  }\n\n\n\n\u6700\u5f8c\u306b\n\u3068\u308a\u3042\u3048\u305a\u30d1\u30c3\u3068\u601d\u3044\u4ed8\u3044\u305f\u89e3\u8aac\u306f\u3053\u3093\u306a\u3068\u3053\u308d\u3067\u3059\u3002\u5f8c\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002(\u624b\u629c\u304d)\n\u4eca\u56deVanillaJS\u3067\u66f8\u304b\u308c\u305f\u30b3\u30fc\u30c9\u3092Angular2\u306b\u66f8\u304d\u76f4\u3057\u3066\u307f\u3066\u3059\u3054\u304f\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u50d5\u306e\u3088\u3046\u306bWeb\u30a2\u30d7\u30ea\u3092\u66f8\u3044\u305f\u3053\u3068\u304c\u306a\u3044\u521d\u5fc3\u8005\u306b\u306f\u7279\u306b\u30aa\u30b9\u30b9\u30e1\u306a\u306e\u3067\u3001\u662f\u975e\u516c\u5f0f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u3084\u3063\u3066\u307f\u3066\u304b\u3089\u3001\u81ea\u5206\u6d41\u306b\u30ea\u30e1\u30a4\u30af\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n**(\u8ffd\u8a18)2.0\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f\u3002(2016/09/15)**\n\n\u4eca\u56de\u306eGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u2192[ovrmrw/friendlychat-ng2](https://github.com/ovrmrw/friendlychat-ng2)\n\n\u5148\u65e5Firebase\u306e\u516c\u5f0f\u30b5\u30a4\u30c8\u3067[Web\u30a2\u30d7\u30ea\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](https://codelabs.developers.google.com/codelabs/firebase-web)\u3092\u767a\u898b\u3057\u307e\u3057\u3066\u3001\u3053\u308c\u3092\u3084\u3063\u3066\u307f\u305f\u3089Database\u3060\u3051\u3058\u3083\u306a\u304fAuth\u3068Storage\u306e\u4f7f\u3044\u65b9\u306e\u52c9\u5f37\u306b\u3082\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u306fWeb\u30a2\u30d7\u30ea\u521d\u5fc3\u8005\u306a\u3089\u4e00\u5ea6\u306f\u3084\u3063\u3066\u304a\u304f\u3079\u304d\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3060\u306a\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001JavaScript\u30d5\u30a1\u30a4\u30eb\u304cVanillaJS\u3067\u66f8\u304b\u308c\u3066\u3044\u3066\u500b\u4eba\u7684\u306b\u89e3\u91c8\u3059\u308b\u306e\u304c\u3068\u3066\u3082\u5927\u5909\u3067\u3057\u305f\u3002\n\n\u305d\u3053\u3067\u300c\u3053\u308c\u306f\u3088\u308d\u3057\u304f\u306a\u3044\u300d\u3068\u601d\u3044\u3001\u591a\u304f\u306e\u4eba\u304c\u5bb9\u6613\u306b\u7406\u89e3\u53ef\u80fd\u306aAngular2\u30b9\u30bf\u30a4\u30eb\u306b\u66f8\u304d\u76f4\u3055\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3068\u601d\u3044\u7acb\u3061\u307e\u3057\u3066\u3001\u4eca\u56de\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u306b\u81f3\u3063\u305f\u6b21\u7b2c\u3067\u3059\u3002\n\nFirebase Hosting\u306b\u3082\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u3042\u308a\u307e\u3059\u306e\u3067\u3088\u308d\u3057\u3051\u308c\u3070\u3069\u3046\u305e\u3002\n\n- [(Firebase Hosting)\u3053\u3061\u3089\u306f\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b3\u30fc\u30c9](https://friendlychat-d014b.firebaseapp.com/)\n- [(Firebase Hosting)\u3053\u3061\u3089\u306fAngular2\u3067\u30ea\u30e1\u30a4\u30af\u3057\u305f\u30b3\u30fc\u30c9](https://friendlychat-ng2.firebaseapp.com/)\n\n\u5927\u4f53\u30aa\u30ea\u30b8\u30ca\u30eb\u3092\u30b3\u30d4\u30fc\u3067\u304d\u3066\u3044\u308b\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002(\u5b8c\u5168\u3067\u306f\u306a\u3044)\n\n## Firebase\u30921\u30d5\u30a1\u30a4\u30eb\u3067\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\n\nFirebase\u3092\u76f4\u63a5\u53e9\u3044\u3066\u3044\u308b\u306e\u306f\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002Component\u306fService\u3092\u7d4c\u7531\u3057\u3066\u3053\u3053\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u30aa\u30ea\u30b8\u30ca\u30eb\u306eJS\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u2192[main.js](https://github.com/ovrmrw/friendlychat-ng2/blob/master/public/scripts/main.original.js)\n\n\u30aa\u30ea\u30b8\u30ca\u30eb\u3092\u6642\u306b\u306f\u307b\u307c\u5fe0\u5b9f\u306b\u3001\u6642\u306b\u306f\u9069\u5f53\u306b\u66f8\u304d\u63db\u3048\u3066\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n```js:src/firebase/firebase.controller.ts\nimport firebase from 'firebase';\nimport { Observable, Subject, BehaviorSubject, ReplaySubject } from 'rxjs/Rx';\nimport lodash from 'lodash';\nimport { MessageType } from '../types';\n\nconst config = {\n  apiKey: 'AIzaSyDUGgHesSALxeaKYH_qyt-NxPndMgD6MVI',\n  authDomain: 'friendlychat-d014b.firebaseapp.com',\n  databaseURL: 'https://friendlychat-d014b.firebaseio.com',\n  storageBucket: 'friendlychat-d014b.appspot.com',\n};\n\nconst LOADING_IMAGE_URL = 'https://www.google.com/images/spin-32.gif';\n\nexport class FirebaseController {\n  private auth: firebase.auth.Auth;\n  private database: firebase.database.Database;\n  private storage: firebase.storage.Storage;\n  private messagesRef: firebase.database.Reference;\n  private authSubject$: Subject<firebase.User | null>;\n  private messages: MessageType[] = [];\n  private messagesSubject$: Subject<MessageType[]>;\n  private informStableSubject$: Subject<boolean>;\n\n  constructor() {\n    firebase.initializeApp(config);\n\n    this.authSubject$ = new BehaviorSubject<firebase.User | null>(null);\n    this.messagesSubject$ = new ReplaySubject<MessageType[]>();\n    this.informStableSubject$ = new ReplaySubject<boolean>();\n\n    this.auth = firebase.auth();\n    this.database = firebase.database();\n    this.storage = firebase.storage();\n\n    // \u30b5\u30a4\u30f3\u30a4\u30f3\u304b\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u3092\u3059\u308b\u3068\u305d\u306e\u90fd\u5ea6\u3053\u306e\u51e6\u7406\u304c\u8d70\u308b\u3002\n    this.auth.onAuthStateChanged((user: firebase.User) => {\n      if (user) { // User is signed in!\n        this.authSubject$.next(user);\n      } else { // User is signed out!\n        this.authSubject$.next(null);\n      }\n    });\n\n    this.messagesRef = this.database.ref('messages');\n  }\n\n  signIn() {\n    // Sign in Firebase using popup auth and Google as the identity provider.\n    const provider = new firebase.auth.GoogleAuthProvider();\n    this.auth.signInWithPopup(provider);\n  }\n\n  signOut() {\n    // Sign out of Firebase.\n    this.auth.signOut();\n  }\n\n  saveMessage(message: string) {\n    if (message) {\n      const currentUser = this.auth.currentUser;\n      if (currentUser) {\n        // Add a new message entry to the Firebase Database.\n        this.messagesRef.push({\n          name: currentUser.displayName,\n          text: message,\n          photoUrl: currentUser.photoURL || '/images/profile_placeholder.png'\n        }).then(() => {\n          this.informStableSubject$.next(true);\n        }).catch((error) => {\n          console.error('Error writing new message to Firebase Database', error);\n        });\n      }\n    }\n  }\n\n  saveImageMessage(file: File) {\n    if (file) {\n      // We add a message with a loading icon that will get updated with the shared image.\n      const currentUser = this.auth.currentUser;\n      if (currentUser) {\n        this.messagesRef.push({\n          name: currentUser.displayName,\n          imageUrl: LOADING_IMAGE_URL,\n          photoUrl: currentUser.photoURL || '/images/profile_placeholder.png'\n        }).then((data) => {\n          // Upload the image to Firebase Storage.\n          const uploadTask = this.storage.ref(currentUser.uid + '/' + Date.now() + '/' + file.name)\n            // .put(file, { 'contentType': file.type });\n            .put(file);\n          // Listen for upload completion.\n          uploadTask.on('state_changed', null, (error) => {\n            console.error('There was an error uploading a file to Firebase Storage:', error);\n          }, () => {\n            // Get the file's Storage URI and update the chat message placeholder.\n            const filePath = uploadTask.snapshot.metadata.fullPath;\n            data.update({ imageUrl: this.storage.ref(filePath).toString() });\n          });\n        });\n      }\n    }\n  }\n\n  setImageUrl(imageUrl: string): Observable<string> {\n    if (!imageUrl.startsWith('gs://')) { // \u5909\u6570imageUrl\u304cFirebase Storage\u306e\u3082\u306e\u3067\u306f\u306a\u3044\u5834\u5408\u3001\u305d\u306e\u307e\u307e\u8fd4\u3059\u3002\n      return Observable.of(imageUrl);\n    }\n    // If the image is a Firebase Storage URI we fetch the URL.\n    const subject = new BehaviorSubject<string>(LOADING_IMAGE_URL); // \u3068\u308a\u3042\u3048\u305a\u30b0\u30eb\u30b0\u30eb\u3092\u8868\u793a\u3055\u305b\u308b\u3002\n\n    this.storage.refFromURL(imageUrl).getMetadata().then((metadata) => {\n      subject.next(metadata.downloadURLs[0]); // image\u30d5\u30a1\u30a4\u30eb\u306e\u672c\u6765\u306eURL\u3092\u53d6\u5f97\u3057\u305f\u3089\u5dee\u3057\u66ff\u3048\u308b\u3002\n      subject.complete(); // \u9069\u5207\u306bcomplete\u3057\u306a\u3044\u3068\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u306e\u539f\u56e0\u306b\u306a\u308b\u3002\n    });\n    return subject.asObservable();\n  }\n\n  loadMessages() {\n    this.messages = [];\n    // Make sure we remove all previous listeners.\n    this.messagesRef.off();\n\n    // Loads the last 12 messages and listen for new ones.\n    this.messagesRef.limitToLast(12).on('child_added', (snapshot: firebase.database.DataSnapshot) => {\n      const message = lodash.defaultsDeep(snapshot.val(), { key: snapshot.key }) as MessageType;\n      this.messages.push(message);\n      this.messagesSubject$.next(this.messages);\n      this.informStableSubject$.next(true);\n    });\n    this.messagesRef.limitToLast(12).on('child_changed', (snapshot: firebase.database.DataSnapshot) => {\n      const message = lodash.defaultsDeep(snapshot.val(), { key: snapshot.key }) as MessageType;\n      this.messages = lodash.reject(this.messages, { key: snapshot.key });\n      this.messages.push(message);\n      this.messagesSubject$.next(this.messages);\n      this.informStableSubject$.next(true);\n    });\n  }\n\n  get currentUser$() { return this.authSubject$.asObservable(); }\n  get messages$() { return this.messagesSubject$.asObservable(); }\n  get informStable$() { return this.informStableSubject$.asObservable(); }\n}\n```\n\n## \u30b5\u30a4\u30f3\u30a4\u30f3\u3001\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u306e\u72b6\u614b\u3092rxjs\u3067\u5236\u5fa1\u3059\u308b\n\n\u5f53\u7136\u306e\u3053\u3068\u306a\u304c\u3089\u30b5\u30a4\u30f3\u30a4\u30f3\u3001\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u3092\u3057\u305f\u3068\u304d\u306b\u30a2\u30d7\u30ea\u306f\u305d\u306e\u72b6\u614b\u3092\u53cd\u6620\u3055\u305b\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001rxjs\u306eSubject\u3092\u4f7f\u3063\u3066\nFirebaseController \u2192 AppService \u2192 AppComponent\n\u306e\u9806\u3067`currentUser$`\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u6d41\u3057\u3066\u3044\u307e\u3059\u3002\n\nAppComponent\u3067\u306frxjs\u306eSubscription\u304c\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u3092\u8d77\u3053\u3055\u306a\u3044\u3088\u3046\u306b`ngOnDestroy()`\u3067dispose\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8fba\u308a\u306frxjs\u3092\u6271\u3046\u3068\u304d\u306e\u57fa\u672c\u3068\u3082\u8a00\u3048\u307e\u3059\u3002\n\n```js:src/app/app.service.ts\n// \u629c\u7c8b\n@Injectable()\nexport class AppService {\n  constructor(\n    private fc: FirebaseController\n  ) { }\n\n  get currentUser$() { return this.fc.currentUser$; }  \n}\n```\n\n```js:src/app/app.component.ts\n// \u629c\u7c8b\n  ngOnInit() {\n    this.disposable = this.service.currentUser$.subscribe(user => {\n      if (user) { // Firebase\u304b\u3089\u30b5\u30a4\u30f3\u30a4\u30f3\u306e\u72b6\u614b\u3092\u53d7\u3051\u53d6\u3063\u305f\u3002\n        this.isAuthed = true;\n      } else { // Firebase\u304b\u3089\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u306e\u72b6\u614b\u3092\u53d7\u3051\u53d6\u3063\u305f\u3002\n        this.isAuthed = false;\n      }\n      this.cd.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this.disposeSubscriptions(); // Subscription\u3092\u307e\u3068\u3081\u3066\u7834\u68c4\u3059\u308b\u3002\u9069\u5207\u306a\u30e1\u30e2\u30ea\u7ba1\u7406\u306frxjs\u306e\u57fa\u672c\u3002\n  }\n```\n\n\u307e\u305fAppComponent\u306fAngular2\u306etemplate\u3092\u901a\u3058\u3066\u5b50Component\u306b `isAuthed` \u306e\u5024\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\n```html:src/app/app.template.html\n<!-- \u629c\u7c8b -->\n  <chat-header [isAuthed]=\"isAuthed\"></chat-header>\n  <chat-main [isAuthed]=\"isAuthed\"></chat-main>\n```\n\n\u3053\u3046\u3084\u3063\u3066\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u30c4\u30ea\u30fc\u5168\u4f53\u306b\u30b5\u30a4\u30f3\u30a4\u30f3\u3001\u30b5\u30a4\u30f3\u30a2\u30a6\u30c8\u306e\u72b6\u614b\u3092\u901a\u77e5\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u306d\u3002\n\n## SnackBar\u3092rxjs\u3067\u5236\u5fa1\u3059\u308b\n\nFirebase\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u4f7f\u308f\u308c\u308bCSS\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306fMaterial Design Lite\u3068\u3044\u3046\u3082\u306e\u3067\u3001\u305d\u306e\u6a5f\u80fd\u306e\u4e00\u3064\u3068\u3057\u3066 [SnackBar](https://getmdl.io/components/index.html#snackbar-section)\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002Toastr\u307f\u305f\u3044\u306a\u901a\u77e5\u6a5f\u80fd\u3067\u3059\u3002\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3053\u308c\u3082rxjs\u306eSubject\u3067\u5236\u5fa1\u3057\u3066\u3044\u307e\u3059\u3002\n\n```js:src/main/main.component.ts\n// \u629c\u7c8b\n  snackbarText$ = new Subject<string>();\n\n  onSubmitMessage() {\n    if (this.isAuthed) { // \u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u3066\u3044\u308b\u3002\n      this.service.send(this.text);\n    } else { // \u30b5\u30a4\u30f3\u30a4\u30f3\u3057\u3066\u3044\u306a\u3044\u3002\n      this.snackbarText$.next('You must sign-in first');\n    }\n  }\n\n  onSelectImageFile(event) { // \u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u305f\u3002\n    if (event.target && event.target.files && event.target.files.length) {\n      const file = event.target.files[0] as File;\n      console.log(file);\n      if (file.type.match('image.*')) { // image\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u305f\u3002\n        this.service.saveImage(file);\n      } else { // image\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u306a\u3044\u3082\u306e\u3092\u9078\u629e\u3057\u305f\u3002\n        this.snackbarText$.next('You can only share images');\n        this.resetForm();\n      }\n    }\n  }\n```\n\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u306e\u4e2d\u3067 `snackbarText$.next(...)` \u3068\u66f8\u3044\u3066\u3042\u308b\u90e8\u5206\u304c\u305d\u3046\u306a\u306e\u3067\u3059\u304c\u3001\u8868\u793a\u3055\u305b\u305f\u3044\u6587\u5b57\u5217\u3092\u6e21\u3059\u3068template\u3092\u901a\u3058\u3066ChatSnackbarComponent\u306e`snackbarText`(Observable)\u306e`subscribe()`\u306b\u6d41\u308c\u307e\u3059\u3002\n\u305d\u306e\u7d50\u679c`next()`\u3059\u308b\u5ea6\u306bSnackBar\u304c\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u308b\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002\n\n```html:src/main/main.template.html\n<!-- \u629c\u7c8b -->\n  <chat-snackbar [snackbarText]=\"snackbarText$\"></chat-snackbar>\n```\n\n```js:src/snackbar/snackbar.component.ts\n// \u629c\u7c8b\nexport class ChatSnackbarComponent extends ParentComponent implements OnInit, OnDestroy {\n  @Input() snackbarText: Observable<string>; // ChatMainComponent\u304b\u3089.next()\u3067\u65b0\u3057\u3044\u5024\u3092\u9001\u308a\u8fbc\u3080\u3002\n\n  constructor(\n    private cd: ChangeDetectorRef,\n    private el: ElementRef\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.disposable = this.snackbarText.subscribe(text => {\n      if (text) {\n        const data = {\n          message: text,\n          timeout: 2000\n        };\n        const element = (<HTMLElement>this.el.nativeElement).querySelector('#must-signin-snackbar') as any;\n        element.MaterialSnackbar.showSnackbar(data); // SnackBar\u3092\u8868\u793a\u3059\u308b\u3002\n        this.cd.markForCheck();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.disposeSubscriptions();\n  }\n}\n```\n\n## \u753b\u50cf\u306eURL\u3092\u6642\u9593\u5dee\u3067\u5dee\u3057\u66ff\u3048\u308b(rxjs\u3067)\n\n\u5b9f\u969b\u306e\u52d5\u304d\u3092\u898b\u3066\u3082\u3089\u3048\u308c\u3070\u308f\u304b\u308a\u307e\u3059\u304c\u3001\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u8868\u793a\u3059\u308b\u5834\u5408\u306f\u307e\u305a\u6700\u521d\u306b\u30b0\u30eb\u30b0\u30eb\u3092\u8868\u793a\u3055\u305b\u3066\u3001\u305d\u306e\u5f8cFirebase Storage\u304b\u3089\u672c\u6765\u306eURL\u3092\u53d6\u5f97\u6b21\u7b2c\u5dee\u3057\u66ff\u3048\u3092\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3082rxjs\u306eSubject\u3067\u3059\u3002\n\n\u4e0b\u8a18\u306fFirebaseController\u306e\u30b3\u30fc\u30c9\u3002\n\n```js:src/firebase/firebase.controller.ts\n// \u629c\u7c8b\n  setImageUrl(imageUrl: string): Observable<string> {\n    if (!imageUrl.startsWith('gs://')) { // \u5909\u6570imageUrl\u304cFirebase Storage\u306e\u3082\u306e\u3067\u306f\u306a\u3044\u5834\u5408\u3001\u305d\u306e\u307e\u307e\u8fd4\u3059\u3002\n      return Observable.of(imageUrl);\n    }\n    // If the image is a Firebase Storage URI we fetch the URL.\n    const subject = new BehaviorSubject<string>(LOADING_IMAGE_URL); // \u3068\u308a\u3042\u3048\u305a\u30b0\u30eb\u30b0\u30eb\u3092\u8868\u793a\u3055\u305b\u308b\u3002\n\n    this.storage.refFromURL(imageUrl).getMetadata().then((metadata) => {\n      subject.next(metadata.downloadURLs[0]); // image\u30d5\u30a1\u30a4\u30eb\u306e\u672c\u6765\u306eURL\u3092\u53d6\u5f97\u3057\u305f\u3089\u5dee\u3057\u66ff\u3048\u308b\u3002\n      subject.complete(); // \u9069\u5207\u306bcomplete\u3057\u306a\u3044\u3068\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u306e\u539f\u56e0\u306b\u306a\u308b\u3002\n    });\n    return subject.asObservable();\n  }\n```\n\n\u3053\u308c\u3092Serivce\u3092\u901a\u3058\u3066ChatMessageComponent\u304c\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\n```js:src/message/message.service.ts\n// \u629c\u7c8b\nexport class ChatMessageService {\n  constructor(\n    private fc: FirebaseController\n  ) { }\n\n  resolveImageSrc(imageUrl: string) {\n    return this.fc.setImageUrl(imageUrl);\n  }\n}\n```\n\n```js:src/message/message.component.ts\n// \u629c\u7c8b\nexport class ChatMessageComponent implements OnChanges {\n  @Input() imageUrl: string;\n  imageSrc: Observable<string>;\n\n  constructor(\n    private service: ChatMessageService,\n    private cd: ChangeDetectorRef\n  ) { }\n\n  ngOnChanges() {\n    if (this.imageUrl) {\n      this.imageSrc = this.service.resolveImageSrc(this.imageUrl); // \u6642\u9593\u5dee\u3067image\u30d5\u30a1\u30a4\u30eb\u306eURL\u3092\u5dee\u3057\u66ff\u3048\u308b\u3002\n    }\n  }\n}\n```\n\n\u305d\u3057\u3066\u3053\u306e`imageSrc`\u3092template\u306bAsyncPipe\u4ed8\u304d\u3067\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u6642\u9593\u5dee\u3067`img`\u30bf\u30b0\u306e`src`\u30a2\u30c8\u30ea\u30d3\u30e5\u30fc\u30c8\u3092\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```html:src/message/message.template.html\n<!-- \u629c\u7c8b -->\n  <div *ngIf=\"imageUrl\" class=\"message\"><img (load)=\"onLoadImage()\" [src]=\"imageSrc | async\"></div>\n```\n\n## File API\u3092\u4f7f\u3063\u3066\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\n\nJavaScript\u306b\u306f\u5143\u3005File API\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u3001\u30ed\u30fc\u30ab\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002(\u305d\u306e\u5f8cFirebase Storage\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b)\n\n\u3053\u306e\u6d41\u308c\u306f\u307e\u305atemplate\u304b\u3089\u59cb\u307e\u308a\u3001\u6700\u7d42\u7684\u306bFirebaseController\u306e`saveImageMessage()`\u95a2\u6570\u306b\u5230\u9054\u3057\u307e\u3059\u3002\n\n1. `button`\u30bf\u30b0\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066`(click)=\"mediaCapture.click()\"`\u304c\u767a\u706b\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u30d5\u30a1\u30a4\u30eb\u9078\u629e\u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u8868\u793a\u3055\u305b\u308b\u3002(`input`\u30bf\u30b0\u306b`#mediaCapture`\u3092\u66f8\u3044\u3066\u3044\u308b\u306e\u3067`button`\u30bf\u30b0\u5185\u3067`input`\u30bf\u30b0\u3092\u53c2\u7167\u3067\u304d\u308b)\n2. \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\u3002\n2. `input`\u30bf\u30b0\u306e`(change)=\"onSelectImageFile($event)\"`\u304c\u767a\u706b\u3002\n3. Component\u306e`onSelectImageFile()`\u95a2\u6570\u3092\u5b9f\u884c\u3002\n4. Service\u306e`saveImage()`\u95a2\u6570\u3092\u5b9f\u884c\u3002\n5. FirebaseController\u306e`saveImageMessage()`\u95a2\u6570\u3092\u5b9f\u884c\u3002\n\n```html:src/main/main.template.html\n<!-- \u629c\u7c8b -->\n  <form id=\"image-form\" action=\"#\">\n    <input id=\"mediaCapture\" #mediaCapture (change)=\"onSelectImageFile($event)\" type=\"file\" accept=\"image/*,capture=camera\">\n    <button id=\"submitImage\" (click)=\"mediaCapture.click()\" title=\"Add an image\" class=\"mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-color--amber-400 mdl-color-text--white\">\n      <i class=\"material-icons\">image</i>\n    </button>\n  </form>\n```\n\n```js:src/main/main.component.ts\n// \u629c\u7c8b\n  onSelectImageFile(event) { // \u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u305f\u3002\n    if (event.target && event.target.files && event.target.files.length) {\n      const file = event.target.files[0] as File;\n      console.log(file);\n      if (file.type.match('image.*')) { // image\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3057\u305f\u3002\n        this.service.saveImage(file);\n      } else { // image\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u306a\u3044\u3082\u306e\u3092\u9078\u629e\u3057\u305f\u3002\n        this.snackbarText$.next('You can only share images');\n        this.resetForm();\n      }\n    }\n  }\n```\n\n```js:src/main/main.service.ts\n// \u629c\u7c8b\nexport class ChatMainService {\n  constructor(\n    private fc: FirebaseController\n  ) { }\n\n  saveImage(file: File) {\n    this.fc.saveImageMessage(file);\n  }\n}\n```\n\n```js:src/firebase/firebase.controller.ts\n// \u629c\u7c8b\n  saveImageMessage(file: File) {\n    if (file) {\n      // We add a message with a loading icon that will get updated with the shared image.\n      // \u7701\u7565\n    }\n  }\n```\n\n## \u6700\u5f8c\u306b\n\n\u3068\u308a\u3042\u3048\u305a\u30d1\u30c3\u3068\u601d\u3044\u4ed8\u3044\u305f\u89e3\u8aac\u306f\u3053\u3093\u306a\u3068\u3053\u308d\u3067\u3059\u3002\u5f8c\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002(\u624b\u629c\u304d)\n\n\u4eca\u56deVanillaJS\u3067\u66f8\u304b\u308c\u305f\u30b3\u30fc\u30c9\u3092Angular2\u306b\u66f8\u304d\u76f4\u3057\u3066\u307f\u3066\u3059\u3054\u304f\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u50d5\u306e\u3088\u3046\u306bWeb\u30a2\u30d7\u30ea\u3092\u66f8\u3044\u305f\u3053\u3068\u304c\u306a\u3044\u521d\u5fc3\u8005\u306b\u306f\u7279\u306b\u30aa\u30b9\u30b9\u30e1\u306a\u306e\u3067\u3001\u662f\u975e\u516c\u5f0f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u3084\u3063\u3066\u307f\u3066\u304b\u3089\u3001\u81ea\u5206\u6d41\u306b\u30ea\u30e1\u30a4\u30af\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["Angular2", "Firebase", "angular"]}