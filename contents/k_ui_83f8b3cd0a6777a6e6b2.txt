{"context": " More than 1 year has passed since last update.\u81ea\u8eab\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u5404\u884c\u3092\u3061\u3087\u3063\u3068\u52a0\u5de5\u3057\u3066\u6a19\u6e96\u51fa\u529b\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3053\u3046\u3068\u3057\u3066\u3053\u3046\u66f8\u3044\u305f:\nimport 'dart:io';\nimport 'dart:convert';\n\nvoid main(){\n  new File(Platform.script.toFilePath())\n    .openRead() // Stream<List<int>> \u8fd4\u3059\u306e\u304b\n    .transform(SYSTEM_ENCODING.decoder) // \u3058\u3083\u3042\u3001List<int> \u3092 String \u306b\u5909\u63db\u3057\u3066\n    .transform(new LineSplitter()) // String \u3092\u884c\u5206\u5272\u3057\u3066 List<String> \u306b\u5909\u63db\u3057\u3066\n    .expand((List<String> lines) => lines) // \u8907\u6570\u884c List<String> \u3092\u4e00\u884c\u306b\u30d5\u30e9\u30c3\u30c8\u306b\u3057\u3088\u3046\n    // \u2191=> type 'String' is not a subtype of type 'List<String>' of 'lines'. \u2190\uff1f\uff1f\uff1f\n    .listen((String line) {\n      print('* $line');\n    });\n}\n\n\u3069\u3046\u3084\u3089 LineSplitter \u306f StreamTransformer<String, List<String> \u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u306e\u306b\u3001transform \u30e1\u30bd\u30c3\u30c9\u306b\u4e0e\u3048\u308b\u3068 Stream<List<String>> \u3067\u306f\u306a\u304f Stream<String> \u3092\u8fd4\u3059\u3088\u3046\u3060\u3002\u3064\u307e\u308a\u3001.expand \u306f\u5fc5\u8981\u306a\u3044\u3088\u3046\u3060\u3002\u610f\u5473\u304c\u308f\u304b\u3089\u306a\u3044\u3002\n\u3069\u3046\u3082\u305d\u306e\u8fba\u308a\u3092\u6f01\u3063\u3066\u3044\u308b\u3068\u3001Converter \u306e startChunkedConversion \u306e\u5f15\u6570/\u8fd4\u308a\u5024\u306b\u306f\u3001\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b S, T \u304c\u3064\u3044\u3066\u3044\u306a\u3044\u306e\u304c\u539f\u56e0\u306a\u6c17\u304c\u3059\u308b:\nabstract class Converter<S, T> implements StreamTransformer {\n\n  // ...\n\n  /**\n   * Starts a chunked conversion.\n   */\n  ChunkedConversionSink startChunkedConversion(Sink sink) {\n    throw new UnsupportedError(\n        \"This converter does not support chunked conversions: $this\");\n  }\n\n  // ...\n}\n\n\u3053\u308c\u306e\u5f71\u97ff\u3067\u3001Converter \u3067\u5b9a\u7fa9\u3057\u305f\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3092\u4f7f\u308f\u305a\u81ea\u7531\u306a\u578b\u304c\u8fd4\u305b\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u30c1\u30b0\u30cf\u30b0\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u51fa\u6765\u3066\u3057\u307e\u3063\u305f\u3088\u3046\u3059\u3002\n\u3069\u3046\u3057\u3066\u3053\u3046\u306a\u3063\u305f\u3093\u3060\u308d\u3046\u3002\n\u81ea\u8eab\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u5404\u884c\u3092\u3061\u3087\u3063\u3068\u52a0\u5de5\u3057\u3066\u6a19\u6e96\u51fa\u529b\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3053\u3046\u3068\u3057\u3066\u3053\u3046\u66f8\u3044\u305f:\n\n```dart\nimport 'dart:io';\nimport 'dart:convert';\n\nvoid main(){\n  new File(Platform.script.toFilePath())\n    .openRead() // Stream<List<int>> \u8fd4\u3059\u306e\u304b\n    .transform(SYSTEM_ENCODING.decoder) // \u3058\u3083\u3042\u3001List<int> \u3092 String \u306b\u5909\u63db\u3057\u3066\n    .transform(new LineSplitter()) // String \u3092\u884c\u5206\u5272\u3057\u3066 List<String> \u306b\u5909\u63db\u3057\u3066\n    .expand((List<String> lines) => lines) // \u8907\u6570\u884c List<String> \u3092\u4e00\u884c\u306b\u30d5\u30e9\u30c3\u30c8\u306b\u3057\u3088\u3046\n    // \u2191=> type 'String' is not a subtype of type 'List<String>' of 'lines'. \u2190\uff1f\uff1f\uff1f\n    .listen((String line) {\n      print('* $line');\n    });\n}\n```\n\n\u3069\u3046\u3084\u3089 <code>[LineSplitter][]</code> \u306f `StreamTransformer<String, List<String>` \u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u306e\u306b\u3001`transform` \u30e1\u30bd\u30c3\u30c9\u306b\u4e0e\u3048\u308b\u3068 `Stream<List<String>>` \u3067\u306f\u306a\u304f `Stream<String>` \u3092\u8fd4\u3059\u3088\u3046\u3060\u3002\u3064\u307e\u308a\u3001`.expand` \u306f\u5fc5\u8981\u306a\u3044\u3088\u3046\u3060\u3002\u610f\u5473\u304c\u308f\u304b\u3089\u306a\u3044\u3002\n\n\u3069\u3046\u3082\u305d\u306e\u8fba\u308a\u3092\u6f01\u3063\u3066\u3044\u308b\u3068\u3001<code>[Converter][]</code> \u306e `startChunkedConversion` \u306e\u5f15\u6570/\u8fd4\u308a\u5024\u306b\u306f\u3001\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b `S`, `T` \u304c\u3064\u3044\u3066\u3044\u306a\u3044\u306e\u304c\u539f\u56e0\u306a\u6c17\u304c\u3059\u308b:\n\n```dart\nabstract class Converter<S, T> implements StreamTransformer {\n\n  // ...\n\n  /**\n   * Starts a chunked conversion.\n   */\n  ChunkedConversionSink startChunkedConversion(Sink sink) {\n    throw new UnsupportedError(\n        \"This converter does not support chunked conversions: $this\");\n  }\n\n  // ...\n}\n```\n\n\u3053\u308c\u306e\u5f71\u97ff\u3067\u3001`Converter` \u3067\u5b9a\u7fa9\u3057\u305f\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u578b\u3092\u4f7f\u308f\u305a\u81ea\u7531\u306a\u578b\u304c\u8fd4\u305b\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u30c1\u30b0\u30cf\u30b0\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u51fa\u6765\u3066\u3057\u307e\u3063\u305f\u3088\u3046\u3059\u3002\n\n\u3069\u3046\u3057\u3066\u3053\u3046\u306a\u3063\u305f\u3093\u3060\u308d\u3046\u3002\n\n\n[LineSplitter]: https://code.google.com/p/dart/source/browse/branches/1.5/dart/sdk/lib/convert/line_splitter.dart\n[Converter]: https://code.google.com/p/dart/source/browse/branches/1.5/dart/sdk/lib/convert/converter.dart\n", "tags": ["Dart"]}