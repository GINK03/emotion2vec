{"tags": ["Ruby", "RubyOnRails", "Gem", "RESTful", "api"], "context": "\u3053\u306e\u8a18\u4e8b\u306fruby_on_rails\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc2016\u306e20\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\nTEISHISEI\u3067\u3059\uff01\u8a9e\u5f0a\u3092\u6050\u308c\u305a\u66f8\u304d\u307e\u3059!\u304a\u624b\u67d4\u3089\u304b\u306b\u30fc\n\u4ed5\u4e8b\u3067\u4f55\u5ea6\u304bRoR\u3092API\u30b5\u30fc\u30d0\u30fc\u3068\u3057\u3066\u69cb\u7bc9\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3089\u305b\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u304c\u3001\u3060\u3044\u305f\u3044\u540c\u3058\u3088\u3046\u306a\u51e6\u7406\u3092controller\u3084model\u306b\u6bce\u56de\u66f8\u304f\u306e\u3082\u3060\u308b\u3044\u3057\u3001\u30b5\u30fc\u30d3\u30b9\u6bce\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u82e5\u5e72\u9055\u3063\u305f\u308a\u3059\u308b\u306e\u3082\u5acc\u3060\u306a\u3068\u3002\n\u307f\u306a\u3055\u3093\u3069\u3046\u3044\u3046\u89e3\u6c7a\u7b56\u3092\u53d6\u3063\u3066\u3044\u307e\u3059\u304b\uff1f\n\u5358\u306bcontroller\u3067module\u3092include\u3059\u308b\u3060\u3051\u3067\u3001\u57fa\u672c\u7684\u306aAPI\u304c\u51fa\u6765\u4e0a\u304c\u308b\u3002\n\u305d\u3093\u306agem\u3092rubygems\u306b\u516c\u958b\u3057\u305f\u306e\u3067\u305d\u306e\u304a\u8a71\u3067\u3059\u3002\n\n\u4f5c\u3063\u305f\u3082\u306e\nbaseapi GitHub\nbaseapi rubygems\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nGemfile\u306b\u4e0b\u8a18\u3092\u8a18\u8ff0\u3057\u3066\ngem 'baseapi'\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ bundle install\n# \u307e\u305f\u306f\n$ gem install baseapi\n\n\n\u4f7f\u3044\u65b9\njson\u306e\u4f5c\u6210\u306bjbuilder\u3092\u4f7f\u3046\u65b9\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u7528\u3055\u308c\u308bjbuilder\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ bundle exec baseapi setup\n\n\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4f8b\u3068\u3057\u3066user\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002 (app/models/user.rb)\nclass User < ActiveRecord::Base\nend\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3067\u3001BaseApi module\u3092include\u3057\u307e\u3059\u3002 (app/controlers/users_controller.rb)\nclass UsersController < ApplicationController\n  include BaseApi\nend\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3002 (config/routes.rb)\nconstraints(:format => /json/) do\n  resources :users, only:[:index, :show, :create, :update, :destroy]\nend\n\n\u4e0b\u8a18\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u6301\u3064API\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n\nurl\naction\nmethod\n\n\n\n\n/users.json\nindex\nGET\n\n\n/users/{id}.json\nshow\nGET\n\n\n/users.json\ncreate\nPOST\n\n\n/users/{id}.json\nupdate\nPATCH / PUT\n\n\n/users/{id}.json\ndestroy\nDELETE\n\n\n\n\n\u3069\u3093\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u306e\uff1f\n\u4e0b\u8a18\u306emodel\u3092\u5b9a\u7fa9\u3057\u305f\u3068\u3057\u307e\u3059\u3002\nclass User < ActiveRecord::Base\n  belongs_to :company\nend\n\nclass Company < ActiveRecord::Base\n  has_many :users\nend\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3002\nUsers table data\n\n\n\nid\nname\ncompany_id\n\n\n\n\n1\nhoge\n1\n\n\n2\nhuga\n2\n\n\n\nCompany table data\n\n\n\nid\nname\n\n\n\n\n1\nGoogle\n\n\n2\nApple\n\n\n\n\naction index\n\u5168\u3066\u53d6\u5f97\nGET   /users.json\nSQL   =>  SELECT DISTINCT `users`.* FROM `users`\n\n\u53d6\u5f97\u500b\u6570\u306e\u6307\u5b9a\nGET   /users.json?count=10\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` LIMIT 10 OFFSET 0\n\n\u30da\u30fc\u30b8\u306e\u6307\u5b9a\nGET   /users.json?count=10&page=2\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` LIMIT 10 OFFSET 10\n\n\u4e26\u3073\u66ff\u3048\nGET   /users.json?order=desc&orderby=name\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` ORDER BY `users`.`name` DESC\n\n\u8907\u6570\u6761\u4ef6\u3067\u4e26\u3073\u66ff\u3048\nGET   /users.json?order[]=desc&order[]=asc&orderby[]=name&orderby[]=company_id\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` ORDER BY `users`.`name` DESC, `users`.`company_id` ASC\n\n\u95a2\u9023\u30c6\u30fc\u30d6\u30eb\u3067\u4e26\u3073\u66ff\u3048\nGET   /users.json?order=asc&orderby=company.name\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` ...JOIN... ORDER BY `companies`.`name` ASC\n\n\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u53d6\u5f97\nGET   /users.json?name=hoge\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.name = 'hoge')\n\n\u8907\u6570\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u53d6\u5f97\nGET   /users.json?name[]=hoge&name[]=huga\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.name = 'hoge' or users.name = 'huga')\n\n\u6307\u5b9a\u4ee5\u5916\u3092\u53d6\u5f97(\u5426\u5b9a)\nGET   /users.json?id=!1\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE (NOT users.id = '1')\n\n\u3082\u3061\u308d\u3093\u6587\u5b57\u5217\u3067\u3082\u53ef\nGET   /users.json?name=!hoge\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE (NOT users.name = 'hoge')\n\nnull\u3067\u3042\u308b\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\nGET   /users.json?name=null\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.name IS NULL)\n\nnull\u3067\u306f\u306a\u3044\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\nGET   /users.json?name=!null\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE (NOT users.name IS NULL)\n\nnull\u3060\u3051\u3067\u306f\u306a\u304f\u7a7a\u6587\u5b57\u3082\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3061\u3089\nGET   /users.json?name=empty\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.name IS NULL OR users.name = '')\n\nnull\u3067\u3082\u7a7a\u6587\u5b57\u3067\u3082\u306a\u3044\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\nGET   /users.json?name=!empty\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE (NOT users.name IS NULL AND NOT users.name = '')\n\n\u30af\u30a9\u30fc\u30c8\u304b\u3067\u56f2\u3046\u3068\u6587\u5b57\u5217\u3068\u3057\u3066\u691c\u7d22\u3057\u307e\u3059\nGET   /users.json?name='empty'\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( workers.name = 'empty')\n\n\u95a2\u9023\u30c6\u30fc\u30d6\u30eb(belongs_to)\u306e\u30ab\u30e9\u30e0\u3067\u691c\u7d22(user\u304b\u3089\u898b\u3066company\u306f\u5358\u6570\u5f62\u306a\u306e\u306b\u6ce8\u610f\u3057\u3066)\nGET   /users.json?company[name]=Google\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` ...JOIN... WHERE ( companies.name = 'Google')\n\n\u95a2\u9023\u30c6\u30fc\u30d6\u30eb(has_many)\u306e\u30ab\u30e9\u30e0\u3067\u691c\u7d22(company\u304b\u3089\u898b\u3066user\u306f\u8907\u6570\u5f62\u306a\u306e\u306b\u6ce8\u610f\u3057\u3066)\nGET   /companies.json?users[name]=hoge\nSQL   =>  SELECT DISTINCT `companies`.* FROM `companies` ...JOIN... WHERE ( users.name = 'hoge')\n\n\u3082\u3057\u3001company\u30c6\u30fc\u30d6\u30eb\u304c\u90e8\u7f72\u30c6\u30fc\u30d6\u30eb(units)\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u305d\u306e\u90e8\u7f72\u540d\u3067\u691c\u7d22\u3057\u305f\u3044\u5834\u5408\u3082\u5927\u4e08\u592b\u3002\n\u4f55\u968e\u5c64\u3067\u3082\u30cd\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002\nGET   /users.json?company[units][name]=development\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` ...JOIN... WHERE ( units.name = 'development')\n\n\u6307\u5b9a\u6570\u5024\u4ee5\u4e0a\u306e\u691c\u7d22\u3082\u3067\u304d\u307e\u3059\u3002\nGET   /users.json?age=>=20\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.age >= 20)\n\n\u8d85\u904e\u3082\nGET   /users.json?age=>20\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.age > 20)\n\n\u4ee5\u4e0b\u3082\nGET   /users.json?age=<=20\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.age <= 20)\n\n\u672a\u6e80\u3082\u3002\nGET   /users.json?age=<20\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.age < 20)\n\n\u65e5\u4ed8\u3082\u691c\u7d22\u3067\u304d\u3066\u3001\u7d44\u307f\u5408\u308f\u305b\u305f\u3089\u671f\u9593\u6307\u5b9a\u304c\u3067\u304d\u307e\u3059\u3002\n\u3067\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u540c\u3058\u30ab\u30e9\u30e0\u306b\u8907\u6570\u306e\u6761\u4ef6\u304c\u3042\u308b\u3068or\u691c\u7d22\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\nGET   /users.json?created_at[]=>=20150901&created_at[]=<=20150931\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.created_at >= 20150901 and users.created_at <= 20150931)\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3001\u691c\u7d22\u51e6\u7406\u3092override\u3057\u3066and\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306b\u4fee\u6b63\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002(\u66f8\u304d\u65b9\u30ad\u30e2\u3044\u3093\u3067\u8fd1\u3044\u3046\u3061\u6cbb\u3059\u304b\u3082)\n\u8a73\u7d30\u306f\u5f8c\u8ff0\u3059\u308boverride\u306e\u9805\u306b\u3066\u3002\nclass User < ActiveRecord::Base\n  def self._where_created_at(models, column, values)\n    column_match(models, column, values, operator:'and')\n  end\nend\n\n\naction show\n\u5358\u7d14\u306bid\u6307\u5b9a\u3067\u5358\u6570\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u308a\u307e\u3059\nGET   /users/1.json\nSQL   =>  SELECT `users`.* FROM `users` WHERE `users`.`id` = 1\n\n\naction create\n\u5358\u7d14\u306b\u5024\u3092\u6307\u5b9a\u3057\u3066\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\nPOST   /users.json?name=hoge\nSQL   =>  INSERT INTO `example`.`users` (`id`, `name`) VALUES (NULL, 'hoge')\n\n\naction update\nid\u3092\u6307\u5b9a\u3057\u3066\u30ab\u30e9\u30e0\u3092\u66f4\u65b0\u3067\u304d\u307e\u3059\u3002(patch\u304bput\u3092\u4f7f\u3048\u307e\u3059)\nPATCH  /users/1.json?name=huga\nPUT    /users/1.json?name=huga\nSQL   =>  UPDATE `example`.`users` SET `name` = 'huga' WHERE `users`.`id` = 1\n\n\naction delete\n\u5358\u7d14\u306bid\u3092\u6307\u5b9a\u3057\u3066\u524a\u9664\u3067\u304d\u307e\u3059\nDELETE /users/1.json\nSQL   =>  DELETE FROM `example`.`users` WHERE `users`.`id` = 1\n\n\n\u4e2d\u3067\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\nController\u3067BaseApi\u3092include\u3059\u308b\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5fdc\u3058\u3066\u4e0b\u8a18\u30d7\u30ed\u30d1\u30c6\u30a3\u5fc5\u8981\u306a\u5024\u304c\u5165\u3063\u3066\u304d\u307e\u3059\u3002\n\u30ad\u30fc\u540d\u304c\u305d\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u30ab\u30e9\u30e0\u540d\u306b\u306a\u3051\u308c\u3070\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n\n\n@models (index\u30a2\u30af\u30b7\u30e7\u30f3\u6642\u306b\u30e2\u30c7\u30eb\u914d\u5217\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b)\n\n@model (show\u3084update,create\u6642\u306f\u53d6\u5f97\u3057\u305f\u30e2\u30c7\u30eb\u304c\u3001create\u30a2\u30af\u30b7\u30e7\u30f3\u6642\u306b\u306f\u672a\u4fdd\u5b58\u306e\u30e2\u30c7\u30eb\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b)\n\n@Model (\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b)\n\ninclude BaseApi\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8fd4\u3059json\n1\u968e\u5c64\u5965\u306b\u30c7\u30fc\u30bf\u304c\u3042\u308b\u3093\u3067\u3059\u304c\u3001view\u5074\u3067\u3069\u3046\u306b\u3067\u3082\u306a\u308b\u306e\u3067\u3001\n/view/users/model.json.jbuilder \u3068\u304b\n/view/users/models.json.jbuilder \u3068\u304b\n\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u8a73\u7d30\u306f\u5f8c\u8ff0\u3059\u308bjbuilder\u306e\u9805\u306b\u3066\u3002\n\naction index\n{\n  error: false,\n  message: \"\",\n  data: [\n    {\n      id: 1,\n      name: \"hoge\"\n    },\n    {\n      id: 2,\n      name: \"huga\"\n    }\n  ]\n}\n\n\naction show, create, update, destroy\n{\n  error: false,\n  message: \"\",\n  data: {\n    id: 1,\n    name: \"hoge\"\n  }\n}\n\n\nhtml\u3082\u8fd4\u3057\u305f\u3044\nAPI\u30b5\u30fc\u30d0\u30fc\u3060\u3051\u306e\u7528\u9014\u3067RoR\u3092\u4f7f\u3063\u3066\u3044\u308b\u4eba\u306f\u3044\u3093\u3067\u3059\u304c\u3001\nhtml\u3082\u8fd4\u3057\u305f\u3044\u65b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5206\u5c90\u3067\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\nclass UsersController < ApplicationController\n\n  # baseapi module\n  include BaseApi\n\n  def index\n    if request.format.json?\n      # json request\n      return render 'models.json.jbuilder'\n    else\n      # html request\n    end\n  end\n\n  def show\n    if request.format.json?\n      # json request\n      return render 'model.json.jbuilder'\n    else\n      # html request\n    end\n  end\n\n  # html request\n  def new\n  end\n\n  # html request\n  def edit\n  end\nend\n\n\n\u4e88\u7d04\u8a9e\n\u4e0b\u8a18\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u4e88\u7d04\u8a9e\u3068\u3057\u3066baseapi\u304c\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\ncount\npage\norder\norderby\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30ab\u30e9\u30e0\u540d\u3068\u3057\u3066\u3059\u3067\u306b\u4e0a\u8a18\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u63a5\u982d\u8f9e\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\nclass User < ActiveRecord::Base\n  @reserved_word_prefix = '_'\nend\n\n\u8a2d\u5b9a\u3057\u305f\u63a5\u982d\u8f9e\u3092\u3064\u3051\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nGET   /users.json?_count=10&_page=2\n\n\nOverride\n(\u5b9f\u969b\u306e\u5b9f\u88c5\u306fOverride\u3067\u306f\u306a\u3044\u3093\u3067\u3059\u304c\u305d\u3046\u547c\u3070\u305b\u3066\u304f\u3060\u3055\u3044\u3002)\nbaseapi\u306e\u6319\u52d5\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u3001model\u306b\u4e0b\u8a18\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4ed8\u3051\u308b\u3053\u3068\u3067\u66f8\u304d\u63db\u3048\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u540c\u3058\u30ab\u30e9\u30e0\u306b\u8907\u6570\u306e\u6761\u4ef6\u304c\u3042\u308b\u3068or\u691c\u7d22\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u304cand\u691c\u7d22\u306b\u66f8\u304d\u63db\u3048\u305f\u308a\u3001\n\u8ad6\u7406\u524a\u9664\u3092\u5b9f\u88c5\u3057\u305f\u5834\u5408\u3001baseapi\u306f_delete\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u306e\u3067\u3001\u305d\u3053\u3092\u66f8\u304d\u63db\u3048\u3066\u81e8\u3093\u3060\u6319\u52d5\u306b\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\u3059\u3079\u3066\u53d6\u5f97\nclass User < ActiveRecord::Base\n  def self._all\n    self.all # default\n  end\nend\n\n\u524a\u9664\nclass User < ActiveRecord::Base\n  def _destroy\n    self.destroy # default\n  end\nend\n\n\u691c\u7d22\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3088\u3070\u308c\u307e\u3059\u3002\nclass User < ActiveRecord::Base\n  def self._where(models, column, values)\n    column_match(models, column, values) # default\n  end\nend\n\nname\u3092\u6307\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3088\u3070\u308c\u307e\u3059\u3002\nclass User < ActiveRecord::Base\n  def self._where_name(models, column, values)\n    column_match(models, column, values) # default\n  end\nend\n\nbelongs_to\u95a2\u9023\u306e\u3042\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3088\u3070\u308c\u307e\u3059\u3002\nclass User < ActiveRecord::Base\n  def self._belongs_to(models, table, hash)\n    relation_match(models, table, hash) # default\n  end\nend\n\nbelongs_to\u95a2\u9023\u306e\u3042\u308bcompany\u306e\u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3088\u3070\u308c\u307e\u3059\u3002\nclass User < ActiveRecord::Base\n  def self._belongs_to_company(models, table, hash)\n    relation_match(models, table, hash) # default\n  end\nend\n\n\u4ee5\u964d\u3082\u540c\u69d8\u306bbelongs_to\u95a2\u9023\u306e\u3042\u308b\u6307\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3001\u305d\u306e\u6307\u5b9a\u3092\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u533a\u5207\u3063\u305f\u95a2\u6570\u304c\u3088\u3070\u308c\u307e\u3059\u3002\nclass User < ActiveRecord::Base\n  def self._belongs_to_company_units_...(models, table, hash)\n    relation_match(models, table, hash) # default\n  end\nend\n\nhas_many\u95a2\u9023\u306e\u3042\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3088\u3070\u308c\u307e\u3059\u3002\nclass Company < ActiveRecord::Base\n  def self._has_many(models, table, hash)\n    relation_match(models, table, hash) # default\n  end\nend\n\nhas_many\u95a2\u9023\u306e\u3042\u308busers\u306e\u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3088\u3070\u308c\u307e\u3059\u3002\nclass Company < ActiveRecord::Base\n  def self._has_many_users(models, table, hash)\n    relation_match(models, table, hash) # default\n  end\nend\n\n\u4ee5\u964d\u3082\u540c\u69d8\u306bhas_many\u95a2\u9023\u306e\u3042\u308b\u6307\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3001\u305d\u306e\u6307\u5b9a\u3092\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u533a\u5207\u3063\u305f\u95a2\u6570\u304c\u3088\u3070\u308c\u307e\u3059\u3002\nclass Company < ActiveRecord::Base\n  def self._has_many_users_families_...(models, table, hash)\n    relation_match(models, table, hash) # default\n  end\nend\n\nbaseapi\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6319\u52d5\u306f\u5b8c\u5168\u4e00\u81f4\u306eor\u691c\u7d22\u3067\u3059\u3002\nand\u691c\u7d22\u3001like\u691c\u7d22\u306b\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u8aad\u3093\u3067\u3042\u3052\u308b\u3068\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\ncolumn_***\u95a2\u6570\u3068operator\u5f15\u6570\u3067\u5909\u66f4\u3059\u308b\u3002\nclass User < ActiveRecord::Base\n  def self._where_name(models, column, values)\n    column_match(models, column, values, operator:'or') # default is match OR\n    # column_like(models, column, values, operator:'or') # LIKE OR\n    # column_like(models, column, values, operator:'and') # LIKE AND\n  end\nend\n\n\u95a2\u9023\u7cfb\u306frelation_***\nclass User < ActiveRecord::Base\n  def self._belongs_to_company(models, table, hash)\n    relation_match(models, table, hash, operator:'or') # default is match OR\n    # relation_like(models, table, hash, operator:'or') # LIKE OR\n    # relation_like(models, table, hash, operator:'and') # LIKE AND\n  end\nend\n\n\nhook action\n\u4f5c\u6210\u524d\u5f8c\u3084\u524a\u9664\u524d\u5f8c\u306a\u3069\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u5185\u3067raise\u3059\u308b\u3068\u8fd4\u3059json\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b\u3093\u3067\u3059\u304c\u3001rails\u306emodel validation\u3092\u3061\u3083\u3093\u3068\u4f7f\u3063\u3066\u3084\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u305f\u3044\u3002\u3002\u3002\nclass CompaniesController < BaseApiController\n  # Name Required items\n  def before_create\n    if params['name'].blank?\n      raise 'Please enter your name'\n    end\n  end\nend\n\n{\n  error: true,\n  message: \"Please enter your name\",\n}\n\n\njbuilder\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306ejbuilder\u4f5c\u6210\u30b3\u30de\u30f3\u30c9\u3067jbuilder\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n$ bundle exec baseapi setup users companies ...\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4e0b\u8a18\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3044\u307e\u3059\u304c\u3001\n/app/views/application/xxx.json.jbuilder\n\nmodel\u540d\u4ee5\u4e0b\u306b\u7f6e\u304f\u3068\u305d\u306ejbuilder\u3092\u4f7f\u3044\u307e\u3059\u3002\n/app/views/{models}/xxx.json.jbuilder\n\n\u8fd4\u3059\u3082\u306e\u304c\u5358\u6570\u306e\u30a2\u30af\u30b7\u30e7\u30f3(action: show, create, delete, update)\u3067\u3042\u308c\u3070\u4e0b\u8a18jbuilder\u3092\nmodel.json.jbuilder\n\n\u8907\u6570\u306e\u30a2\u30af\u30b7\u30e7\u30f3(action: index)\u3067\u3042\u308c\u3070\u4e0b\u8a18jbuilder\u3092\u4f7f\u3044\u307e\u3059\u3002\nmodels.json.jbuilder\n\n\u30a8\u30e9\u30fc\u304c\u3042\u3063\u305f\u5834\u5408\u306f\u4e0b\u8a18jbuilder\u3092\u4f7f\u3044\u307e\u3059\u3002\nerror.json.jbuilder\n\njbuilder\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\n\nAngular 1\u4f7f\u3063\u3066\u308b\u65b9(javascript\u306e\u8a71\u3067\u3059\u304c)\n\u3053\u3093\u306afactory\u5b9a\u7fa9\u3057\u3066\nwindow.angularApp.config([\n  '$httpProvider', function($httpProvider) {\n    return $httpProvider.defaults.paramSerializer = '$httpParamSerializerJQLike';\n  }\n]);\n\nwindow.angularApp.factory('Users', [\n  '$resource', function($resource) {\n    return $resource('/users.json', {\n      id: '@id'\n    }, {\n      'query': {\n        method: 'GET',\n        url: '/users.json',\n        transformResponse: function(data, headers) {\n          data = angular.fromJson(data);\n          if (data.error) {\n            throw data.message;\n          } else {\n            return data;\n          }\n        }\n      },\n      'get': {\n        method: 'GET',\n        url: '/users/:id.json',\n        transformResponse: function(data, headers) {\n          data = angular.fromJson(data);\n          if (data.error) {\n            throw data.message;\n          } else {\n            return data.data;\n          }\n        }\n      },\n      'create': {\n        method: 'POST',\n        url: '/users/:id.json',\n        transformResponse: function(data, headers) {\n          data = angular.fromJson(data);\n          if (data.error) {\n            throw data.message;\n          } else {\n            return data.data;\n          }\n        }\n      },\n      'save': {\n        method: 'PUT',\n        url: '/users/:id.json',\n        transformResponse: function(data, headers) {\n          data = angular.fromJson(data);\n          if (data.error) {\n            throw data.message;\n          } else {\n            return data.data;\n          }\n        }\n      },\n      'delete': {\n        method: 'DELETE',\n        url: '/users/:id.json',\n        transformResponse: function(data, headers) {\n          data = angular.fromJson(data);\n          if (data.error) {\n            throw data.message;\n          } else {\n            return data.data;\n          }\n        }\n      }\n    });\n  }\n]);\n\n\u3053\u3046\u3044\u3046\u98a8\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067rails\u306emodel\u3092\u6271\u3063\u3066\u3044\u308b\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n// \u8907\u6570\u53d6\u5f97\nUsers.query()\nUsers.query({name:'name'})\nUsers.query({'company[name]':'Google'})\n\n// \u5358\u6570\u53d6\u5f97\nUsers.get({id:1})\n\n// \u4f5c\u6210\nUsers.create({name:'name'})\nuser.$create()\n\n// \u66f4\u65b0\nUsers.save({id:1, name:'name'})\nuser.$save()\n\n// \u524a\u9664\nUsers.delete({id:1})\nusers.$delete()\n\nangular\u306fGET\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u914d\u5217\u3084\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6e21\u305b\u308b\u306e\u306f\u6b63\u3057\u304f\u306a\u3044\u3068\u8003\u3048\u3066\u3044\u308b\u3088\u3046\u3067\u3001\njquery like\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u65b9\u6cd5\u3092\u63d0\u4f9b\u3059\u308b$httpParamSerializerJQLike\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u306e\u304c\u809d\u3067\u3059\u3002\n\n\u3055\u3044\u3054\u306b\n\u8106\u5f31\u6027\u8a3a\u65ad\u3082\u3057\u3066\u3044\u305f\u3060\u304d\u3001\u6700\u8fd1\u306eversion\u3067\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\u6700\u8fd1RoR\u3092API\u30b5\u30fc\u30d0\u30fc\u3068\u3057\u3066\u4f7f\u3046\u4e8b\u304c\u591a\u3044\u306e\u3067\u99c6\u3051\u8db3\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9032\u3081\u308b\u4e8b\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u6700\u5f8c\u307e\u3067\u898b\u3066\u3044\u305f\u3060\u304d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\u6b21\u306e\u8a18\u4e8b\u306ftkosuga@github\u3055\u3093\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306f[ruby_on_rails\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc2016](http://qiita.com/advent-calendar/2016/ruby_on_rails)\u306e20\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\nTEISHISEI\u3067\u3059\uff01\u8a9e\u5f0a\u3092\u6050\u308c\u305a\u66f8\u304d\u307e\u3059!\u304a\u624b\u67d4\u3089\u304b\u306b\u30fc\n\n\u4ed5\u4e8b\u3067\u4f55\u5ea6\u304bRoR\u3092API\u30b5\u30fc\u30d0\u30fc\u3068\u3057\u3066\u69cb\u7bc9\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3089\u305b\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u304c\u3001\u3060\u3044\u305f\u3044\u540c\u3058\u3088\u3046\u306a\u51e6\u7406\u3092controller\u3084model\u306b\u6bce\u56de\u66f8\u304f\u306e\u3082\u3060\u308b\u3044\u3057\u3001\u30b5\u30fc\u30d3\u30b9\u6bce\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u82e5\u5e72\u9055\u3063\u305f\u308a\u3059\u308b\u306e\u3082\u5acc\u3060\u306a\u3068\u3002\n\u307f\u306a\u3055\u3093\u3069\u3046\u3044\u3046\u89e3\u6c7a\u7b56\u3092\u53d6\u3063\u3066\u3044\u307e\u3059\u304b\uff1f\n\n\u5358\u306bcontroller\u3067module\u3092include\u3059\u308b\u3060\u3051\u3067\u3001\u57fa\u672c\u7684\u306aAPI\u304c\u51fa\u6765\u4e0a\u304c\u308b\u3002\n\u305d\u3093\u306agem\u3092rubygems\u306b\u516c\u958b\u3057\u305f\u306e\u3067\u305d\u306e\u304a\u8a71\u3067\u3059\u3002\n\n# \u4f5c\u3063\u305f\u3082\u306e\n\n[baseapi GitHub](https://github.com/arakawamoriyuki/baseapi)\n[baseapi rubygems](https://rubygems.org/gems/baseapi)\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nGemfile\u306b\u4e0b\u8a18\u3092\u8a18\u8ff0\u3057\u3066\n\n```\ngem 'baseapi'\n```\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ bundle install\n# \u307e\u305f\u306f\n$ gem install baseapi\n```\n\n# \u4f7f\u3044\u65b9\n\njson\u306e\u4f5c\u6210\u306bjbuilder\u3092\u4f7f\u3046\u65b9\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u7528\u3055\u308c\u308bjbuilder\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```\n$ bundle exec baseapi setup\n```\n\n\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4f8b\u3068\u3057\u3066user\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002 (app/models/user.rb)\n\n    class User < ActiveRecord::Base\n    end\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3067\u3001BaseApi module\u3092include\u3057\u307e\u3059\u3002 (app/controlers/users_controller.rb)\n\n    class UsersController < ApplicationController\n      include BaseApi\n    end\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3002 (config/routes.rb)\n\n    constraints(:format => /json/) do\n      resources :users, only:[:index, :show, :create, :update, :destroy]\n    end\n\n\u4e0b\u8a18\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u6301\u3064API\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n| url              | action  | method      |\n|------------------|---------|-------------|\n| /users.json      | index   | GET         |\n| /users/{id}.json | show    | GET         |\n| /users.json      | create  | POST        |\n| /users/{id}.json | update  | PATCH / PUT |\n| /users/{id}.json | destroy | DELETE      |\n\n# \u3069\u3093\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u306e\uff1f\n\n\u4e0b\u8a18\u306emodel\u3092\u5b9a\u7fa9\u3057\u305f\u3068\u3057\u307e\u3059\u3002\n\n```\nclass User < ActiveRecord::Base\n  belongs_to :company\nend\n\nclass Company < ActiveRecord::Base\n  has_many :users\nend\n```\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n\nUsers table data\n\n| id | name     | company_id |\n|----|----------|------------|\n| 1  | hoge     | 1          |\n| 2  | huga     | 2          |\n\nCompany table data\n\n| id | name     |\n|----|----------|\n| 1  | Google   |\n| 2  | Apple    |\n\n## action index\n\n\u5168\u3066\u53d6\u5f97\n\n```\nGET   /users.json\nSQL   =>  SELECT DISTINCT `users`.* FROM `users`\n```\n\n\u53d6\u5f97\u500b\u6570\u306e\u6307\u5b9a\n\n```\nGET   /users.json?count=10\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` LIMIT 10 OFFSET 0\n```\n\n\u30da\u30fc\u30b8\u306e\u6307\u5b9a\n\n```\nGET   /users.json?count=10&page=2\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` LIMIT 10 OFFSET 10\n```\n\n\u4e26\u3073\u66ff\u3048\n\n```\nGET   /users.json?order=desc&orderby=name\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` ORDER BY `users`.`name` DESC\n```\n\n\u8907\u6570\u6761\u4ef6\u3067\u4e26\u3073\u66ff\u3048\n\n```\nGET   /users.json?order[]=desc&order[]=asc&orderby[]=name&orderby[]=company_id\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` ORDER BY `users`.`name` DESC, `users`.`company_id` ASC\n```\n\n\u95a2\u9023\u30c6\u30fc\u30d6\u30eb\u3067\u4e26\u3073\u66ff\u3048\n\n```\nGET   /users.json?order=asc&orderby=company.name\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` ...JOIN... ORDER BY `companies`.`name` ASC\n```\n\n\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u53d6\u5f97\n\n```\nGET   /users.json?name=hoge\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.name = 'hoge')\n```\n\n\u8907\u6570\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u3066\u53d6\u5f97\n\n```\nGET   /users.json?name[]=hoge&name[]=huga\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.name = 'hoge' or users.name = 'huga')\n```\n\n\u6307\u5b9a\u4ee5\u5916\u3092\u53d6\u5f97(\u5426\u5b9a)\n\n```\nGET   /users.json?id=!1\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE (NOT users.id = '1')\n```\n\n\u3082\u3061\u308d\u3093\u6587\u5b57\u5217\u3067\u3082\u53ef\n\n```\nGET   /users.json?name=!hoge\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE (NOT users.name = 'hoge')\n```\n\nnull\u3067\u3042\u308b\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\n\n```\nGET   /users.json?name=null\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.name IS NULL)\n```\n\nnull\u3067\u306f\u306a\u3044\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\n\n```\nGET   /users.json?name=!null\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE (NOT users.name IS NULL)\n```\n\nnull\u3060\u3051\u3067\u306f\u306a\u304f\u7a7a\u6587\u5b57\u3082\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3061\u3089\n\n```\nGET   /users.json?name=empty\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.name IS NULL OR users.name = '')\n```\n\nnull\u3067\u3082\u7a7a\u6587\u5b57\u3067\u3082\u306a\u3044\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\n\n```\nGET   /users.json?name=!empty\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE (NOT users.name IS NULL AND NOT users.name = '')\n```\n\n\u30af\u30a9\u30fc\u30c8\u304b\u3067\u56f2\u3046\u3068\u6587\u5b57\u5217\u3068\u3057\u3066\u691c\u7d22\u3057\u307e\u3059\n\n```\nGET   /users.json?name='empty'\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( workers.name = 'empty')\n```\n\n\u95a2\u9023\u30c6\u30fc\u30d6\u30eb(belongs_to)\u306e\u30ab\u30e9\u30e0\u3067\u691c\u7d22(user\u304b\u3089\u898b\u3066company\u306f\u5358\u6570\u5f62\u306a\u306e\u306b\u6ce8\u610f\u3057\u3066)\n\n```\nGET   /users.json?company[name]=Google\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` ...JOIN... WHERE ( companies.name = 'Google')\n```\n\n\u95a2\u9023\u30c6\u30fc\u30d6\u30eb(has_many)\u306e\u30ab\u30e9\u30e0\u3067\u691c\u7d22(company\u304b\u3089\u898b\u3066user\u306f\u8907\u6570\u5f62\u306a\u306e\u306b\u6ce8\u610f\u3057\u3066)\n\n```\nGET   /companies.json?users[name]=hoge\nSQL   =>  SELECT DISTINCT `companies`.* FROM `companies` ...JOIN... WHERE ( users.name = 'hoge')\n```\n\n\u3082\u3057\u3001company\u30c6\u30fc\u30d6\u30eb\u304c\u90e8\u7f72\u30c6\u30fc\u30d6\u30eb(units)\u3092\u6301\u3063\u3066\u3044\u3066\u3001\u305d\u306e\u90e8\u7f72\u540d\u3067\u691c\u7d22\u3057\u305f\u3044\u5834\u5408\u3082\u5927\u4e08\u592b\u3002\n\u4f55\u968e\u5c64\u3067\u3082\u30cd\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002\n\n```\nGET   /users.json?company[units][name]=development\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` ...JOIN... WHERE ( units.name = 'development')\n```\n\n\u6307\u5b9a\u6570\u5024\u4ee5\u4e0a\u306e\u691c\u7d22\u3082\u3067\u304d\u307e\u3059\u3002\n\n```\nGET   /users.json?age=>=20\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.age >= 20)\n```\n\n\u8d85\u904e\u3082\n\n```\nGET   /users.json?age=>20\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.age > 20)\n```\n\n\u4ee5\u4e0b\u3082\n\n```\nGET   /users.json?age=<=20\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.age <= 20)\n```\n\n\u672a\u6e80\u3082\u3002\n\n```\nGET   /users.json?age=<20\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.age < 20)\n```\n\n\u65e5\u4ed8\u3082\u691c\u7d22\u3067\u304d\u3066\u3001\u7d44\u307f\u5408\u308f\u305b\u305f\u3089\u671f\u9593\u6307\u5b9a\u304c\u3067\u304d\u307e\u3059\u3002\n\u3067\u3082\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u540c\u3058\u30ab\u30e9\u30e0\u306b\u8907\u6570\u306e\u6761\u4ef6\u304c\u3042\u308b\u3068or\u691c\u7d22\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\n\n```\nGET   /users.json?created_at[]=>=20150901&created_at[]=<=20150931\nSQL   =>  SELECT DISTINCT `users`.* FROM `users` WHERE ( users.created_at >= 20150901 and users.created_at <= 20150931)\n```\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3001\u691c\u7d22\u51e6\u7406\u3092override\u3057\u3066and\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306b\u4fee\u6b63\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002(\u66f8\u304d\u65b9\u30ad\u30e2\u3044\u3093\u3067\u8fd1\u3044\u3046\u3061\u6cbb\u3059\u304b\u3082)\n\u8a73\u7d30\u306f\u5f8c\u8ff0\u3059\u308b**override**\u306e\u9805\u306b\u3066\u3002\n\n```\nclass User < ActiveRecord::Base\n  def self._where_created_at(models, column, values)\n    column_match(models, column, values, operator:'and')\n  end\nend\n```\n\n## action show\n\n\u5358\u7d14\u306bid\u6307\u5b9a\u3067\u5358\u6570\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u308a\u307e\u3059\n\n```\nGET   /users/1.json\nSQL   =>  SELECT `users`.* FROM `users` WHERE `users`.`id` = 1\n```\n\n## action create\n\n\u5358\u7d14\u306b\u5024\u3092\u6307\u5b9a\u3057\u3066\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n```\nPOST   /users.json?name=hoge\nSQL   =>  INSERT INTO `example`.`users` (`id`, `name`) VALUES (NULL, 'hoge')\n```\n\n## action update\n\nid\u3092\u6307\u5b9a\u3057\u3066\u30ab\u30e9\u30e0\u3092\u66f4\u65b0\u3067\u304d\u307e\u3059\u3002(patch\u304bput\u3092\u4f7f\u3048\u307e\u3059)\n\n```\nPATCH  /users/1.json?name=huga\nPUT    /users/1.json?name=huga\nSQL   =>  UPDATE `example`.`users` SET `name` = 'huga' WHERE `users`.`id` = 1\n```\n\n## action delete\n\n\u5358\u7d14\u306bid\u3092\u6307\u5b9a\u3057\u3066\u524a\u9664\u3067\u304d\u307e\u3059\n\n```\nDELETE /users/1.json\nSQL   =>  DELETE FROM `example`.`users` WHERE `users`.`id` = 1\n```\n\n# \u4e2d\u3067\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\n\nController\u3067BaseApi\u3092include\u3059\u308b\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5fdc\u3058\u3066\u4e0b\u8a18\u30d7\u30ed\u30d1\u30c6\u30a3\u5fc5\u8981\u306a\u5024\u304c\u5165\u3063\u3066\u304d\u307e\u3059\u3002\n\u30ad\u30fc\u540d\u304c\u305d\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u30ab\u30e9\u30e0\u540d\u306b\u306a\u3051\u308c\u3070\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n\n- @models (index\u30a2\u30af\u30b7\u30e7\u30f3\u6642\u306b\u30e2\u30c7\u30eb\u914d\u5217\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b)\n- @model (show\u3084update,create\u6642\u306f\u53d6\u5f97\u3057\u305f\u30e2\u30c7\u30eb\u304c\u3001create\u30a2\u30af\u30b7\u30e7\u30f3\u6642\u306b\u306f\u672a\u4fdd\u5b58\u306e\u30e2\u30c7\u30eb\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b)\n- @Model (\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b)\n\n\n```\ninclude BaseApi\n```\n\n\n# \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u8fd4\u3059json\n\n1\u968e\u5c64\u5965\u306b\u30c7\u30fc\u30bf\u304c\u3042\u308b\u3093\u3067\u3059\u304c\u3001view\u5074\u3067\u3069\u3046\u306b\u3067\u3082\u306a\u308b\u306e\u3067\u3001\n/view/users/model.json.jbuilder \u3068\u304b\n/view/users/models.json.jbuilder \u3068\u304b\n\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u8a73\u7d30\u306f\u5f8c\u8ff0\u3059\u308b**jbuilder**\u306e\u9805\u306b\u3066\u3002\n\n## action index\n\n```\n{\n  error: false,\n  message: \"\",\n  data: [\n    {\n      id: 1,\n      name: \"hoge\"\n    },\n    {\n      id: 2,\n      name: \"huga\"\n    }\n  ]\n}\n```\n\n## action show, create, update, destroy\n\n```\n{\n  error: false,\n  message: \"\",\n  data: {\n    id: 1,\n    name: \"hoge\"\n  }\n}\n```\n\n\n# html\u3082\u8fd4\u3057\u305f\u3044\n\nAPI\u30b5\u30fc\u30d0\u30fc\u3060\u3051\u306e\u7528\u9014\u3067RoR\u3092\u4f7f\u3063\u3066\u3044\u308b\u4eba\u306f\u3044\u3093\u3067\u3059\u304c\u3001\nhtml\u3082\u8fd4\u3057\u305f\u3044\u65b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5206\u5c90\u3067\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\n```\nclass UsersController < ApplicationController\n\n  # baseapi module\n  include BaseApi\n\n  def index\n    if request.format.json?\n      # json request\n      return render 'models.json.jbuilder'\n    else\n      # html request\n    end\n  end\n\n  def show\n    if request.format.json?\n      # json request\n      return render 'model.json.jbuilder'\n    else\n      # html request\n    end\n  end\n\n  # html request\n  def new\n  end\n\n  # html request\n  def edit\n  end\nend\n```\n\n# \u4e88\u7d04\u8a9e\n\n\u4e0b\u8a18\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u4e88\u7d04\u8a9e\u3068\u3057\u3066baseapi\u304c\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n- count\n- page\n- order\n- orderby\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30ab\u30e9\u30e0\u540d\u3068\u3057\u3066\u3059\u3067\u306b\u4e0a\u8a18\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u63a5\u982d\u8f9e\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n```\nclass User < ActiveRecord::Base\n  @reserved_word_prefix = '_'\nend\n```\n\n\u8a2d\u5b9a\u3057\u305f\u63a5\u982d\u8f9e\u3092\u3064\u3051\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\nGET   /users.json?_count=10&_page=2\n```\n\n# Override\n\n(\u5b9f\u969b\u306e\u5b9f\u88c5\u306fOverride\u3067\u306f\u306a\u3044\u3093\u3067\u3059\u304c\u305d\u3046\u547c\u3070\u305b\u3066\u304f\u3060\u3055\u3044\u3002)\nbaseapi\u306e\u6319\u52d5\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u3001model\u306b\u4e0b\u8a18\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4ed8\u3051\u308b\u3053\u3068\u3067\u66f8\u304d\u63db\u3048\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u540c\u3058\u30ab\u30e9\u30e0\u306b\u8907\u6570\u306e\u6761\u4ef6\u304c\u3042\u308b\u3068or\u691c\u7d22\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u304cand\u691c\u7d22\u306b\u66f8\u304d\u63db\u3048\u305f\u308a\u3001\n\u8ad6\u7406\u524a\u9664\u3092\u5b9f\u88c5\u3057\u305f\u5834\u5408\u3001baseapi\u306f_delete\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u306e\u3067\u3001\u305d\u3053\u3092\u66f8\u304d\u63db\u3048\u3066\u81e8\u3093\u3060\u6319\u52d5\u306b\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\u3059\u3079\u3066\u53d6\u5f97\n\n```\nclass User < ActiveRecord::Base\n  def self._all\n    self.all # default\n  end\nend\n```\n\n\u524a\u9664\n\n```\nclass User < ActiveRecord::Base\n  def _destroy\n    self.destroy # default\n  end\nend\n```\n\n\u691c\u7d22\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3088\u3070\u308c\u307e\u3059\u3002\n\n```\nclass User < ActiveRecord::Base\n  def self._where(models, column, values)\n    column_match(models, column, values) # default\n  end\nend\n```\n\nname\u3092\u6307\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3088\u3070\u308c\u307e\u3059\u3002\n\n```\nclass User < ActiveRecord::Base\n  def self._where_name(models, column, values)\n    column_match(models, column, values) # default\n  end\nend\n```\n\nbelongs_to\u95a2\u9023\u306e\u3042\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3088\u3070\u308c\u307e\u3059\u3002\n\n```\nclass User < ActiveRecord::Base\n  def self._belongs_to(models, table, hash)\n    relation_match(models, table, hash) # default\n  end\nend\n```\n\nbelongs_to\u95a2\u9023\u306e\u3042\u308bcompany\u306e\u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3088\u3070\u308c\u307e\u3059\u3002\n\n```\nclass User < ActiveRecord::Base\n  def self._belongs_to_company(models, table, hash)\n    relation_match(models, table, hash) # default\n  end\nend\n```\n\n\u4ee5\u964d\u3082\u540c\u69d8\u306bbelongs_to\u95a2\u9023\u306e\u3042\u308b\u6307\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3001\u305d\u306e\u6307\u5b9a\u3092\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u533a\u5207\u3063\u305f\u95a2\u6570\u304c\u3088\u3070\u308c\u307e\u3059\u3002\n\n```\nclass User < ActiveRecord::Base\n  def self._belongs_to_company_units_...(models, table, hash)\n    relation_match(models, table, hash) # default\n  end\nend\n```\n\nhas_many\u95a2\u9023\u306e\u3042\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3088\u3070\u308c\u307e\u3059\u3002\n\n```\nclass Company < ActiveRecord::Base\n  def self._has_many(models, table, hash)\n    relation_match(models, table, hash) # default\n  end\nend\n```\n\nhas_many\u95a2\u9023\u306e\u3042\u308busers\u306e\u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3088\u3070\u308c\u307e\u3059\u3002\n\n```\nclass Company < ActiveRecord::Base\n  def self._has_many_users(models, table, hash)\n    relation_match(models, table, hash) # default\n  end\nend\n```\n\n\u4ee5\u964d\u3082\u540c\u69d8\u306bhas_many\u95a2\u9023\u306e\u3042\u308b\u6307\u5b9a\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306b\u3001\u305d\u306e\u6307\u5b9a\u3092\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u533a\u5207\u3063\u305f\u95a2\u6570\u304c\u3088\u3070\u308c\u307e\u3059\u3002\n\n```\nclass Company < ActiveRecord::Base\n  def self._has_many_users_families_...(models, table, hash)\n    relation_match(models, table, hash) # default\n  end\nend\n```\n\nbaseapi\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6319\u52d5\u306f\u5b8c\u5168\u4e00\u81f4\u306eor\u691c\u7d22\u3067\u3059\u3002\nand\u691c\u7d22\u3001like\u691c\u7d22\u306b\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u8aad\u3093\u3067\u3042\u3052\u308b\u3068\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\ncolumn_***\u95a2\u6570\u3068operator\u5f15\u6570\u3067\u5909\u66f4\u3059\u308b\u3002\n\n```\nclass User < ActiveRecord::Base\n  def self._where_name(models, column, values)\n    column_match(models, column, values, operator:'or') # default is match OR\n    # column_like(models, column, values, operator:'or') # LIKE OR\n    # column_like(models, column, values, operator:'and') # LIKE AND\n  end\nend\n```\n\n\u95a2\u9023\u7cfb\u306frelation_***\n\n```\nclass User < ActiveRecord::Base\n  def self._belongs_to_company(models, table, hash)\n    relation_match(models, table, hash, operator:'or') # default is match OR\n    # relation_like(models, table, hash, operator:'or') # LIKE OR\n    # relation_like(models, table, hash, operator:'and') # LIKE AND\n  end\nend\n```\n\n\n\n\n# hook action\n\n\u4f5c\u6210\u524d\u5f8c\u3084\u524a\u9664\u524d\u5f8c\u306a\u3069\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u5185\u3067raise\u3059\u308b\u3068\u8fd4\u3059json\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b\u3093\u3067\u3059\u304c\u3001rails\u306emodel validation\u3092\u3061\u3083\u3093\u3068\u4f7f\u3063\u3066\u3084\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u305f\u3044\u3002\u3002\u3002\n\n```\nclass CompaniesController < BaseApiController\n  # Name Required items\n  def before_create\n    if params['name'].blank?\n      raise 'Please enter your name'\n    end\n  end\nend\n```\n\n```\n{\n  error: true,\n  message: \"Please enter your name\",\n}\n```\n\n### jbuilder\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306ejbuilder\u4f5c\u6210\u30b3\u30de\u30f3\u30c9\u3067jbuilder\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n```\n$ bundle exec baseapi setup users companies ...\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4e0b\u8a18\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3044\u307e\u3059\u304c\u3001\n\n```\n/app/views/application/xxx.json.jbuilder\n```\n\nmodel\u540d\u4ee5\u4e0b\u306b\u7f6e\u304f\u3068\u305d\u306ejbuilder\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```\n/app/views/{models}/xxx.json.jbuilder\n```\n\n\u8fd4\u3059\u3082\u306e\u304c\u5358\u6570\u306e\u30a2\u30af\u30b7\u30e7\u30f3(action: show, create, delete, update)\u3067\u3042\u308c\u3070\u4e0b\u8a18jbuilder\u3092\n\n```\nmodel.json.jbuilder\n```\n\n\u8907\u6570\u306e\u30a2\u30af\u30b7\u30e7\u30f3(action: index)\u3067\u3042\u308c\u3070\u4e0b\u8a18jbuilder\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```\nmodels.json.jbuilder\n```\n\n\u30a8\u30e9\u30fc\u304c\u3042\u3063\u305f\u5834\u5408\u306f\u4e0b\u8a18jbuilder\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```\nerror.json.jbuilder\n```\n\njbuilder\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f[\u3053\u3061\u3089](https://github.com/rails/jbuilder)\n\n\n# Angular 1\u4f7f\u3063\u3066\u308b\u65b9(javascript\u306e\u8a71\u3067\u3059\u304c)\n\n\u3053\u3093\u306afactory\u5b9a\u7fa9\u3057\u3066\n\n```\nwindow.angularApp.config([\n  '$httpProvider', function($httpProvider) {\n    return $httpProvider.defaults.paramSerializer = '$httpParamSerializerJQLike';\n  }\n]);\n\nwindow.angularApp.factory('Users', [\n  '$resource', function($resource) {\n    return $resource('/users.json', {\n      id: '@id'\n    }, {\n      'query': {\n        method: 'GET',\n        url: '/users.json',\n        transformResponse: function(data, headers) {\n          data = angular.fromJson(data);\n          if (data.error) {\n            throw data.message;\n          } else {\n            return data;\n          }\n        }\n      },\n      'get': {\n        method: 'GET',\n        url: '/users/:id.json',\n        transformResponse: function(data, headers) {\n          data = angular.fromJson(data);\n          if (data.error) {\n            throw data.message;\n          } else {\n            return data.data;\n          }\n        }\n      },\n      'create': {\n        method: 'POST',\n        url: '/users/:id.json',\n        transformResponse: function(data, headers) {\n          data = angular.fromJson(data);\n          if (data.error) {\n            throw data.message;\n          } else {\n            return data.data;\n          }\n        }\n      },\n      'save': {\n        method: 'PUT',\n        url: '/users/:id.json',\n        transformResponse: function(data, headers) {\n          data = angular.fromJson(data);\n          if (data.error) {\n            throw data.message;\n          } else {\n            return data.data;\n          }\n        }\n      },\n      'delete': {\n        method: 'DELETE',\n        url: '/users/:id.json',\n        transformResponse: function(data, headers) {\n          data = angular.fromJson(data);\n          if (data.error) {\n            throw data.message;\n          } else {\n            return data.data;\n          }\n        }\n      }\n    });\n  }\n]);\n```\n\n\u3053\u3046\u3044\u3046\u98a8\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067rails\u306emodel\u3092\u6271\u3063\u3066\u3044\u308b\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\n```\n// \u8907\u6570\u53d6\u5f97\nUsers.query()\nUsers.query({name:'name'})\nUsers.query({'company[name]':'Google'})\n\n// \u5358\u6570\u53d6\u5f97\nUsers.get({id:1})\n\n// \u4f5c\u6210\nUsers.create({name:'name'})\nuser.$create()\n\n// \u66f4\u65b0\nUsers.save({id:1, name:'name'})\nuser.$save()\n\n// \u524a\u9664\nUsers.delete({id:1})\nusers.$delete()\n```\n\nangular\u306fGET\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u914d\u5217\u3084\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6e21\u305b\u308b\u306e\u306f\u6b63\u3057\u304f\u306a\u3044\u3068\u8003\u3048\u3066\u3044\u308b\u3088\u3046\u3067\u3001\njquery like\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u65b9\u6cd5\u3092\u63d0\u4f9b\u3059\u308b$httpParamSerializerJQLike\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u306e\u304c\u809d\u3067\u3059\u3002\n\n\n# \u3055\u3044\u3054\u306b\n\n\u8106\u5f31\u6027\u8a3a\u65ad\u3082\u3057\u3066\u3044\u305f\u3060\u304d\u3001\u6700\u8fd1\u306eversion\u3067\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\u6700\u8fd1RoR\u3092API\u30b5\u30fc\u30d0\u30fc\u3068\u3057\u3066\u4f7f\u3046\u4e8b\u304c\u591a\u3044\u306e\u3067\u99c6\u3051\u8db3\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9032\u3081\u308b\u4e8b\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u6700\u5f8c\u307e\u3067\u898b\u3066\u3044\u305f\u3060\u304d\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\n\u6b21\u306e\u8a18\u4e8b\u306f[tkosuga@github](http://qiita.com/tkosuga@github)\u3055\u3093\u3067\u3059\u3002\n"}