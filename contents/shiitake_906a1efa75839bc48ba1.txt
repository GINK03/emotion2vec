{"context": "\n\nJenkins Master\n#!/usr/bin/env bash\n# Fail on unset variables and command errors\nset -ex -o pipefail\n# Prevent commands misbehaving due to locale differences\nexport LC_ALL=C\n\nJESNKINS_BACKUP_STORE_DIR=/var/lib/jenkins/backup\nTOTAL_NODE_NUM=1\nJDK_VERSION=\"8u91-b14\" # [Java Version]-[Build Number]\nJENKINS_PLUGINS=(\n  # maintenance plugins\n  \"thinBackup\"\n  # security plugins\n  # \"active-directory\"\n  # view plugins\n  # \"greenballs\"\n  # \"delivery-pipeline-plugin\"\n  # \"extra-columns\"\n  # \"dashboard-view\"\n  # \"sectioned-view\"\n  # job plugins\n  # \"git\"\n  # \"gitlab-hook\"\n  # \"job-import-plugin\"\n  # \"purge-job-history\"\n  # \"jobConfigHistory\"\n  # \"nodelabelparameter\"\n  # \"parameterized-trigger\"\n  # \"multiple-scms\"\n  # \"uno-choice\"\n  # \"email-ext\"\n  # \"plot\"\n  # \"ws-cleanup\"\n  # \"rebuild\"\n  # \"timestamper\"\n)\n\nPROXY_HOST=192.168.56.102\nPROXY_PORT=3128\nNO_PROXY=localhost,127.0.0.1\nSMTP_HOTS=localhost\nSMTP_PORT=9090\nexport http_proxy=\"http://${PROXY_HOST}:${PROXY_PORT}\"\nexport https_proxy=\"http://${PROXY_HOST}:${PROXY_PORT}\"\nexport no_proxy=\"${NO_PROXY}\"\n\n# initialize package repositories\nrpm -ivh http://ftp.riken.jp/Linux/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\n\n# install packages\nyum -y install git\n\n# install oracle-jdk\ncurl -s -LO -b \"oraclelicense=accept-securebackup-cookie\" \\\n               \"http://download.oracle.com/otn-pub/java/jdk/${JDK_VERSION}/jdk-${JDK_VERSION:0:4}-linux-x64.rpm\"\nrpm -ivh jdk-${JDK_VERSION:0:4}-linux-x64.rpm\n\n# install jenkins (latest)\ncurl -o /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\nrpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\nyum -y install jenkins\n\n# disable jenkins setupwizard\nsed -i -e 's/^JENKINS_JAVA_OPTIONS=.*/JENKINS_JAVA_OPTIONS=\"-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false\"/' /etc/sysconfig/jenkins\n\n# init jenkins\nchkconfig jenkins on #[CentOS6]\nservice jenkins start #[CentOS6]\n\n# wait until jenkins is ready\nwhile [ `curl -LI http://localhost:8080 -o /dev/null -w '%{http_code}\\n' -s` -ne \"200\" ]; do sleep 5; done\n\nservice jenkins stop #[CentOS6]\n\n# configure proxy\ncat << EOS >> /var/lib/jenkins/proxy.xml\n<?xml version='1.0' encoding='UTF-8'?>\n<proxy>\n  <name>${PROXY_HOST}</name>\n  <port>${PROXY_PORT}</port>\n</proxy>\nEOS\n\n# configure thinBackup\ncat << EOS >> /var/lib/jenkins/thinBackup.xml\n<?xml version='1.0' encoding='UTF-8'?>\n<org.jvnet.hudson.plugins.thinbackup.ThinBackupPluginImpl plugin=\"thinBackup@1.7.4\">\n  <fullBackupSchedule></fullBackupSchedule>\n  <diffBackupSchedule></diffBackupSchedule>\n  <backupPath>${JESNKINS_BACKUP_STORE_DIR}</backupPath>\n  <nrMaxStoredFull>5</nrMaxStoredFull>\n  <excludedFilesRegex></excludedFilesRegex>\n  <waitForIdle>true</waitForIdle>\n  <forceQuietModeTimeout>120</forceQuietModeTimeout>\n  <cleanupDiff>false</cleanupDiff>\n  <moveOldBackupsToZipFile>true</moveOldBackupsToZipFile>\n  <backupBuildResults>true</backupBuildResults>\n  <backupBuildArchive>false</backupBuildArchive>\n  <backupUserContents>true</backupUserContents>\n  <backupNextBuildNumber>true</backupNextBuildNumber>\n  <backupBuildsToKeepOnly>false</backupBuildsToKeepOnly>\n</org.jvnet.hudson.plugins.thinbackup.ThinBackupPluginImpl>\nEOS\n\n# start jenkins\nservice jenkins start #[CentOS6]\n\n# wait until jenkins is ready\nwhile [ `curl -LI http://localhost:8080 -o /dev/null -w '%{http_code}\\n' -s` -ne \"200\" ]; do sleep 5; done\n\n# install jenkins plugins\nJENKINS_CLI=/var/cache/jenkins/war/WEB-INF/jenkins-cli.jar\nfor ((i = 0; i < ${#JENKINS_PLUGINS[@]}; i++)) {\n  java -jar ${JENKINS_CLI} -s http://localhost:8080 install-plugin ${JENKINS_PLUGINS[i]}\n}\n\n# wait until all nodes is ready\nnode_count=0\nwhile [ ${node_count} -lt ${TOTAL_NODE_NUM} ]; do\n  sleep 30\n  curl -s -L -o nodes.xml http://localhost:8080/computer/api/xml\n  node_count=`echo \"xpath count(/computerSet/computer[not(displayName/text()='master')]/offline[text()='false'])\" | xmllint --shell nodes.xml | sed 's/\\/ > //g' | sed 's/Object is a number : //g'`\ndone\n\n# reboot jenkins to apply changes\nservice jenkins restart #[CentOS6]\n\n# wait until jenkins is ready\nwhile [ `curl -LI http://localhost:8080 -o /dev/null -w '%{http_code}\\n' -s` -ne \"200\" ]; do sleep 5; done\njava -jar ${JENKINS_CLI} -s http://localhost:8080 list-plugins\n\n\n\nJenkins Slave\n#!/usr/bin/env bash\n# Fail on unset variables and command errors\nset -ex -o pipefail\n# Prevent commands misbehaving due to locale differences\nexport LC_ALL=C\n\nJENKINS_MASTER_HOST=192.168.100.7\nJENKINS_MASTER_PORT=8080\nJDK_VERSION=\"8u91-b14\" # [Java Version]-[Build Number]\nJENKINS_WORKDIR=/var/lib/jenkins\nOS_SHORTNAME=cent6\nNODE_ROLE=build\nINSTANCE_ID=i-1234567890\n\n# install oracle-jdk\nmkdir -p ${JENKINS_WORKDIR}\ncurl -s -L -o ${JENKINS_WORKDIR}/jdk-${JDK_VERSION:0:4}-linux-x64.rpm \\\n           -b \"oraclelicense=accept-securebackup-cookie\" \\\n              \"http://download.oracle.com/otn-pub/java/jdk/${JDK_VERSION}/jdk-${JDK_VERSION:0:4}-linux-x64.rpm\"\nrpm -ivh ${JENKINS_WORKDIR}/jdk-${JDK_VERSION:0:4}-linux-x64.rpm\n\n# wait until master jenkins is ready\nwhile [ `curl -LI http://${JENKINS_MASTER_HOST}:${JENKINS_MASTER_PORT} -o /dev/null -w '%{http_code}\\n' -s` -ne \"200\" ]; do sleep 5; done\n\n# download jenkins cli tools\ncurl -s -L -o ${JENKINS_WORKDIR}/jenkins-cli.jar http://${JENKINS_MASTER_HOST}:${JENKINS_MASTER_PORT}/jnlpJars/jenkins-cli.jar\ncurl -s -L -o ${JENKINS_WORKDIR}/slave.jar http://${JENKINS_MASTER_HOST}:${JENKINS_MASTER_PORT}/jnlpJars/slave.jar\n\n# create jenkins user\nuseradd jenkins\n\n# create node to master jenkins\nmkdir -p ${JENKINS_WORKDIR}/jobs\nNODE_NAME=${OS_SHORTNAME}_${NODE_ROLE}_${INSTANCE_ID}\ncat <<EOS | java -jar ${JENKINS_WORKDIR}/jenkins-cli.jar -s http://${JENKINS_MASTER_HOST}:${JENKINS_MASTER_PORT} create-node ${NODE_NAME}\n<slave>\n<name>${NODE_NAME}</name>\n<description/>\n<remoteFS>${JENKINS_WORKDIR}/jobs</remoteFS>\n<numExecutors>1</numExecutors>\n<mode>EXCLUSIVE</mode>\n<retentionStrategy class=\"hudson.slaves.RetentionStrategy\\$Always\"/>\n<launcher class=\"hudson.slaves.JNLPLauncher\"/>\n<label>${OS_SHORTNAME} ${NODE_ROLE} ${OS_SHORTNAME}_${NODE_ROLE}</label>\n<nodeProperties/>\n<userId>anonymous</userId>\n</slave>\nEOS\n\n# get node token\ncurl -s -L -o ${JENKINS_WORKDIR}/slave-agent.jnlp \\\n           http://${JENKINS_MASTER_HOST}:${JENKINS_MASTER_PORT}/computer/${NODE_NAME}/slave-agent.jnlp\nsecret=`echo \"cat /jnlp/application-desc/argument[1]\" | xmllint --shell ${JENKINS_WORKDIR}/slave-agent.jnlp | sed '/^\\/ >/d' | sed 's/<[^>]*.//g'`\n\n# register jenkins as a service\ncat << EOS >> /etc/sysconfig/jenkins-slave\nJENKINS_WORKDIR=${JENKINS_WORKDIR}\nJENKINS_USER=jenkins\nJENKINS_URL=\"http://${JENKINS_MASTER_HOST}:${JENKINS_MASTER_PORT}\"\nJENKINS_NODENAME=${NODE_NAME}\nJENKINS_SECRET=${secret}\nEOS\nchmod 600 /etc/sysconfig/jenkins-slave\nchown -R jenkins:jenkins ${JENKINS_WORKDIR}\n\ncat << 'EOS' >> /etc/init.d/jenkins-slave\n#!/bin/sh\n#\n# jenkins-slave:    Launch a Jenkins BuildSlave instance on this node\n#\n# chkconfig:    - 99 01\n# description:  Enable this node to fulfill build jobs\n#\n\n# Source function library.\n. /etc/rc.d/init.d/functions\n\n[ -f /etc/sysconfig/jenkins-slave ] && . /etc/sysconfig/jenkins-slave\n\n[ -n \"$JENKINS_URL\" ] || exit 0\n[ -n \"$JENKINS_WORKDIR\" ] || exit 0\n[ -n \"$JENKINS_USER\" ] || exit 0\n[ -n \"$JENKINS_NODENAME\" ] || exit 0\n[ -n \"$JENKINS_SECRET\" ] || exit 0\n[ -x /usr/bin/java ] || exit 0\n\ndownload_jar()\n{\n    curl -s -o slave.jar $JENKINS_URL/jnlpJars/slave.jar || exit 0\n}\n\nstart()\n{\n  cd $JENKINS_WORKDIR\n  [ -f slave.jar ] || download_jar\n\n  echo -n $\"Starting $prog: \"\n\n  su $JENKINS_USER sh -c \"\\\n    java -jar slave.jar -jnlpUrl $JENKINS_URL/computer/$JENKINS_NODENAME/slave-agent.jnlp -secret $JENKINS_SECRET >slave.log 2>&1 &\"\n\n  if [ $? = 0 ]; then echo '[OK]'; else echo '[NG]'; fi\n}\n\nstop()\n{\n  echo -n $\"Shutting down $prog: \"\n\n  PID=`ps -ef | grep '[j]ava -jar slave.jar' | awk '{print $2}'`\n  [ -n \"$PID\" ] && kill $PID\n\n  if [ $? = 0 ]; then echo '[OK]'; else echo '[NG]'; fi\n}\n\n# See how we were called.\ncase \"$1\" in\n  start)\n    start\n    ;;\n  stop)\n    stop\n    ;;\n  restart|reload)\n    stop\n    start\n    ;;\n  status)\n    status java\n    ;;\n  *)\n    echo $\"Usage: $0 {start|stop|restart|reload}\"\n    exit 1\nesac\n\nexit 0\nEOS\n\nchmod 755 /etc/init.d/jenkins-slave\nchkconfig --add jenkins-slave\nchkconfig jenkins-slave on\n\n# start jenkins node\nservice jenkins-slave start\n\n\n# Jenkins Master\n\n```bash\n#!/usr/bin/env bash\n# Fail on unset variables and command errors\nset -ex -o pipefail\n# Prevent commands misbehaving due to locale differences\nexport LC_ALL=C\n\nJESNKINS_BACKUP_STORE_DIR=/var/lib/jenkins/backup\nTOTAL_NODE_NUM=1\nJDK_VERSION=\"8u91-b14\" # [Java Version]-[Build Number]\nJENKINS_PLUGINS=(\n  # maintenance plugins\n  \"thinBackup\"\n  # security plugins\n  # \"active-directory\"\n  # view plugins\n  # \"greenballs\"\n  # \"delivery-pipeline-plugin\"\n  # \"extra-columns\"\n  # \"dashboard-view\"\n  # \"sectioned-view\"\n  # job plugins\n  # \"git\"\n  # \"gitlab-hook\"\n  # \"job-import-plugin\"\n  # \"purge-job-history\"\n  # \"jobConfigHistory\"\n  # \"nodelabelparameter\"\n  # \"parameterized-trigger\"\n  # \"multiple-scms\"\n  # \"uno-choice\"\n  # \"email-ext\"\n  # \"plot\"\n  # \"ws-cleanup\"\n  # \"rebuild\"\n  # \"timestamper\"\n)\n\nPROXY_HOST=192.168.56.102\nPROXY_PORT=3128\nNO_PROXY=localhost,127.0.0.1\nSMTP_HOTS=localhost\nSMTP_PORT=9090\nexport http_proxy=\"http://${PROXY_HOST}:${PROXY_PORT}\"\nexport https_proxy=\"http://${PROXY_HOST}:${PROXY_PORT}\"\nexport no_proxy=\"${NO_PROXY}\"\n\n# initialize package repositories\nrpm -ivh http://ftp.riken.jp/Linux/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\n\n# install packages\nyum -y install git\n\n# install oracle-jdk\ncurl -s -LO -b \"oraclelicense=accept-securebackup-cookie\" \\\n               \"http://download.oracle.com/otn-pub/java/jdk/${JDK_VERSION}/jdk-${JDK_VERSION:0:4}-linux-x64.rpm\"\nrpm -ivh jdk-${JDK_VERSION:0:4}-linux-x64.rpm\n\n# install jenkins (latest)\ncurl -o /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\nrpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\nyum -y install jenkins\n\n# disable jenkins setupwizard\nsed -i -e 's/^JENKINS_JAVA_OPTIONS=.*/JENKINS_JAVA_OPTIONS=\"-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false\"/' /etc/sysconfig/jenkins\n\n# init jenkins\nchkconfig jenkins on #[CentOS6]\nservice jenkins start #[CentOS6]\n\n# wait until jenkins is ready\nwhile [ `curl -LI http://localhost:8080 -o /dev/null -w '%{http_code}\\n' -s` -ne \"200\" ]; do sleep 5; done\n\nservice jenkins stop #[CentOS6]\n\n# configure proxy\ncat << EOS >> /var/lib/jenkins/proxy.xml\n<?xml version='1.0' encoding='UTF-8'?>\n<proxy>\n  <name>${PROXY_HOST}</name>\n  <port>${PROXY_PORT}</port>\n</proxy>\nEOS\n\n# configure thinBackup\ncat << EOS >> /var/lib/jenkins/thinBackup.xml\n<?xml version='1.0' encoding='UTF-8'?>\n<org.jvnet.hudson.plugins.thinbackup.ThinBackupPluginImpl plugin=\"thinBackup@1.7.4\">\n  <fullBackupSchedule></fullBackupSchedule>\n  <diffBackupSchedule></diffBackupSchedule>\n  <backupPath>${JESNKINS_BACKUP_STORE_DIR}</backupPath>\n  <nrMaxStoredFull>5</nrMaxStoredFull>\n  <excludedFilesRegex></excludedFilesRegex>\n  <waitForIdle>true</waitForIdle>\n  <forceQuietModeTimeout>120</forceQuietModeTimeout>\n  <cleanupDiff>false</cleanupDiff>\n  <moveOldBackupsToZipFile>true</moveOldBackupsToZipFile>\n  <backupBuildResults>true</backupBuildResults>\n  <backupBuildArchive>false</backupBuildArchive>\n  <backupUserContents>true</backupUserContents>\n  <backupNextBuildNumber>true</backupNextBuildNumber>\n  <backupBuildsToKeepOnly>false</backupBuildsToKeepOnly>\n</org.jvnet.hudson.plugins.thinbackup.ThinBackupPluginImpl>\nEOS\n\n# start jenkins\nservice jenkins start #[CentOS6]\n\n# wait until jenkins is ready\nwhile [ `curl -LI http://localhost:8080 -o /dev/null -w '%{http_code}\\n' -s` -ne \"200\" ]; do sleep 5; done\n\n# install jenkins plugins\nJENKINS_CLI=/var/cache/jenkins/war/WEB-INF/jenkins-cli.jar\nfor ((i = 0; i < ${#JENKINS_PLUGINS[@]}; i++)) {\n  java -jar ${JENKINS_CLI} -s http://localhost:8080 install-plugin ${JENKINS_PLUGINS[i]}\n}\n\n# wait until all nodes is ready\nnode_count=0\nwhile [ ${node_count} -lt ${TOTAL_NODE_NUM} ]; do\n  sleep 30\n  curl -s -L -o nodes.xml http://localhost:8080/computer/api/xml\n  node_count=`echo \"xpath count(/computerSet/computer[not(displayName/text()='master')]/offline[text()='false'])\" | xmllint --shell nodes.xml | sed 's/\\/ > //g' | sed 's/Object is a number : //g'`\ndone\n\n# reboot jenkins to apply changes\nservice jenkins restart #[CentOS6]\n\n# wait until jenkins is ready\nwhile [ `curl -LI http://localhost:8080 -o /dev/null -w '%{http_code}\\n' -s` -ne \"200\" ]; do sleep 5; done\njava -jar ${JENKINS_CLI} -s http://localhost:8080 list-plugins\n\n```\n\n# Jenkins Slave\n\n```bash\n#!/usr/bin/env bash\n# Fail on unset variables and command errors\nset -ex -o pipefail\n# Prevent commands misbehaving due to locale differences\nexport LC_ALL=C\n\nJENKINS_MASTER_HOST=192.168.100.7\nJENKINS_MASTER_PORT=8080\nJDK_VERSION=\"8u91-b14\" # [Java Version]-[Build Number]\nJENKINS_WORKDIR=/var/lib/jenkins\nOS_SHORTNAME=cent6\nNODE_ROLE=build\nINSTANCE_ID=i-1234567890\n\n# install oracle-jdk\nmkdir -p ${JENKINS_WORKDIR}\ncurl -s -L -o ${JENKINS_WORKDIR}/jdk-${JDK_VERSION:0:4}-linux-x64.rpm \\\n           -b \"oraclelicense=accept-securebackup-cookie\" \\\n              \"http://download.oracle.com/otn-pub/java/jdk/${JDK_VERSION}/jdk-${JDK_VERSION:0:4}-linux-x64.rpm\"\nrpm -ivh ${JENKINS_WORKDIR}/jdk-${JDK_VERSION:0:4}-linux-x64.rpm\n\n# wait until master jenkins is ready\nwhile [ `curl -LI http://${JENKINS_MASTER_HOST}:${JENKINS_MASTER_PORT} -o /dev/null -w '%{http_code}\\n' -s` -ne \"200\" ]; do sleep 5; done\n\n# download jenkins cli tools\ncurl -s -L -o ${JENKINS_WORKDIR}/jenkins-cli.jar http://${JENKINS_MASTER_HOST}:${JENKINS_MASTER_PORT}/jnlpJars/jenkins-cli.jar\ncurl -s -L -o ${JENKINS_WORKDIR}/slave.jar http://${JENKINS_MASTER_HOST}:${JENKINS_MASTER_PORT}/jnlpJars/slave.jar\n\n# create jenkins user\nuseradd jenkins\n\n# create node to master jenkins\nmkdir -p ${JENKINS_WORKDIR}/jobs\nNODE_NAME=${OS_SHORTNAME}_${NODE_ROLE}_${INSTANCE_ID}\ncat <<EOS | java -jar ${JENKINS_WORKDIR}/jenkins-cli.jar -s http://${JENKINS_MASTER_HOST}:${JENKINS_MASTER_PORT} create-node ${NODE_NAME}\n<slave>\n<name>${NODE_NAME}</name>\n<description/>\n<remoteFS>${JENKINS_WORKDIR}/jobs</remoteFS>\n<numExecutors>1</numExecutors>\n<mode>EXCLUSIVE</mode>\n<retentionStrategy class=\"hudson.slaves.RetentionStrategy\\$Always\"/>\n<launcher class=\"hudson.slaves.JNLPLauncher\"/>\n<label>${OS_SHORTNAME} ${NODE_ROLE} ${OS_SHORTNAME}_${NODE_ROLE}</label>\n<nodeProperties/>\n<userId>anonymous</userId>\n</slave>\nEOS\n\n# get node token\ncurl -s -L -o ${JENKINS_WORKDIR}/slave-agent.jnlp \\\n           http://${JENKINS_MASTER_HOST}:${JENKINS_MASTER_PORT}/computer/${NODE_NAME}/slave-agent.jnlp\nsecret=`echo \"cat /jnlp/application-desc/argument[1]\" | xmllint --shell ${JENKINS_WORKDIR}/slave-agent.jnlp | sed '/^\\/ >/d' | sed 's/<[^>]*.//g'`\n\n# register jenkins as a service\ncat << EOS >> /etc/sysconfig/jenkins-slave\nJENKINS_WORKDIR=${JENKINS_WORKDIR}\nJENKINS_USER=jenkins\nJENKINS_URL=\"http://${JENKINS_MASTER_HOST}:${JENKINS_MASTER_PORT}\"\nJENKINS_NODENAME=${NODE_NAME}\nJENKINS_SECRET=${secret}\nEOS\nchmod 600 /etc/sysconfig/jenkins-slave\nchown -R jenkins:jenkins ${JENKINS_WORKDIR}\n\ncat << 'EOS' >> /etc/init.d/jenkins-slave\n#!/bin/sh\n#\n# jenkins-slave:    Launch a Jenkins BuildSlave instance on this node\n#\n# chkconfig:    - 99 01\n# description:  Enable this node to fulfill build jobs\n#\n\n# Source function library.\n. /etc/rc.d/init.d/functions\n\n[ -f /etc/sysconfig/jenkins-slave ] && . /etc/sysconfig/jenkins-slave\n\n[ -n \"$JENKINS_URL\" ] || exit 0\n[ -n \"$JENKINS_WORKDIR\" ] || exit 0\n[ -n \"$JENKINS_USER\" ] || exit 0\n[ -n \"$JENKINS_NODENAME\" ] || exit 0\n[ -n \"$JENKINS_SECRET\" ] || exit 0\n[ -x /usr/bin/java ] || exit 0\n\ndownload_jar()\n{\n    curl -s -o slave.jar $JENKINS_URL/jnlpJars/slave.jar || exit 0\n}\n\nstart()\n{\n  cd $JENKINS_WORKDIR\n  [ -f slave.jar ] || download_jar\n\n  echo -n $\"Starting $prog: \"\n\n  su $JENKINS_USER sh -c \"\\\n    java -jar slave.jar -jnlpUrl $JENKINS_URL/computer/$JENKINS_NODENAME/slave-agent.jnlp -secret $JENKINS_SECRET >slave.log 2>&1 &\"\n\n  if [ $? = 0 ]; then echo '[OK]'; else echo '[NG]'; fi\n}\n\nstop()\n{\n  echo -n $\"Shutting down $prog: \"\n\n  PID=`ps -ef | grep '[j]ava -jar slave.jar' | awk '{print $2}'`\n  [ -n \"$PID\" ] && kill $PID\n\n  if [ $? = 0 ]; then echo '[OK]'; else echo '[NG]'; fi\n}\n\n# See how we were called.\ncase \"$1\" in\n  start)\n    start\n    ;;\n  stop)\n    stop\n    ;;\n  restart|reload)\n    stop\n    start\n    ;;\n  status)\n    status java\n    ;;\n  *)\n    echo $\"Usage: $0 {start|stop|restart|reload}\"\n    exit 1\nesac\n\nexit 0\nEOS\n\nchmod 755 /etc/init.d/jenkins-slave\nchkconfig --add jenkins-slave\nchkconfig jenkins-slave on\n\n# start jenkins node\nservice jenkins-slave start\n\n```\n", "tags": ["CentOS6.x", "ShellScript"]}