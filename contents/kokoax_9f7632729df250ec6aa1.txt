{"tags": ["C++", "\u4e26\u5217\u51e6\u7406"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u306a\u3093\u3068\u306a\u304f\u3084\u308d\u3046\u3068\u601d\u3063\u3066\u3084\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u4e26\u5217\u51e6\u7406\u3060\u304c\u5148\u65e5\u53cb\u4eba\u304b\u3089sleep sort\u3063\u3066\u3057\u3063\u3066\u308b\uff1f\u3068\u805e\u3044\u3066\u8abf\u3079\u3066\u307f\u305f\u3068\u3053\u308d\u4e26\u5217\u51e6\u7406\u3092\u3064\u304b\u3063\u305f\u30bd\u30fc\u30c8\u3063\u307d\u304b\u305f\u3063\u305f\u306e\u3067\u4e26\u5217\u51e6\u7406\u306e\u7df4\u7fd2\u3092\u517c\u306d\u3066\u5b9f\u88c5\u3057\u3088\u3046\u3068\u601d\u3063\u305f.\n\nsleep sort\n\u5b9f\u88c5\u5185\u5bb9\u306f,\nsleep( $SortData );\necho $SortData;\n\n\u3060\u3051\u3067\u3042\u308b.\n\u3053\u306e\u4e8c\u884c\u3092\u4e26\u5217\u51e6\u7406\u3067\u305f\u304f\u3055\u3093\u52d5\u304b\u305b\u3070\u6607\u9806\u306b\u51fa\u529b\u3055\u308c\u308b\u3068\u3044\u3046\u7b97\u6bb5\u3067\u3042\u308b.\n\n\u307e\u305a\u306f\u4e26\u5217\u51e6\u7406\u306e\u52d5\u4f5c\u78ba\u8a8d\n\n\u305d\u306e\u524d\u306b\u6ce8\u610f\u70b9\nLinux\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\ng++ -std=c++11 FileName.cpp -pthread\n\n\u306e\u3088\u3046\u306b-std=c++11\u3067c++11\u3092\u4f7f\u3046,-pthread\u3067\u4e26\u5217\u51e6\u7406\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u30ea\u30f3\u30af\u3092\u3059\u308b\u3068\u3044\u3063\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044.\nMac\u306e\u5834\u5408\n clang -std=c++11 FileName.cpp\n\n\u4eca\u56de\u4f7f\u7528\u3057\u305f\u4e26\u5217\u51e6\u7406\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3067\u3042\u308b.\n\u7406\u7531\u306f\u500b\u4eba\u7684\u306b\u8cc7\u6599\u304c\u591a\u3044\u306a\u3068\u611f\u3058\u305f\u3053\u3068\u3068,\u4ed6\u3068\u6bd4\u3079\u3066\u308f\u304b\u308a\u3084\u3059\u304f\u611f\u3058\u305f\u305f\u3081\u3067\u3042\u308b.\nthread.cpp\n#include <iostream>\n#include <thread>\n\nvoid outKokoax( void ){\n  std::cout << \"kokoax\" << std::endl;\n}\n\nint main( void ){\n  //\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9f\u884c\u6642\u306b\u30b9\u30ec\u30c3\u30c9\u306e\u751f\u6210\u3068\u5b9f\u884c\u3092\u3057\u3066\u3044\u308b.\n  std::thread MyName( outKokoax );  \n\n  //\u30bf\u30b9\u30af\u306e\u7d42\u4e86\u3067\u306f\u306a\u304f\u30b9\u30ec\u30c3\u30c9\u305d\u306e\u3082\u306e\u306e\u7d42\u4e86\u3092\u5f85\u3064.\n  //join()\u3092\u5b9f\u884c\u3057\u306a\u3044\u3068\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u308b.\n  MyName.join();                    \n\n  return 0;\n}\n\n\u51fa\u529b\nkokoax\n\n\u3053\u308c\u3060\u3068\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3068\u308a\u3042\u3048\u305a\u95a2\u6570\u3092\u3044\u3064\u3082\u3068\u9055\u3046\u3084\u308a\u65b9\u3067\u5b9f\u884c\u3067\u304d\u305f\u306e\u3067\u3088\u3057\u3068\u3057\u305f.\n\nsleep sort\u306e\u5b9f\u88c5\n#include <iostream>\n#include <iomanip>\n#include <vector>\n\n#include <thread>\n\n#include <unistd.h>\n#include <time.h>\n\nvoid sleepSort( int sleepNumber ){\n  usleep( sleepNumber * 50000 );           //\u5f15\u6570\u30df\u30ea\u79d2sleep\u3059\u308b(unistd.h).  *50000\u3092\u6d88\u3059\u3068\u51fa\u529b\u304c\u91cd\u306a\u3063\u3066\u4e26\u5217\u51e6\u7406\u611f\u304c\u3067\u308b.\n  std::cout << std::setw(3) << std::left << sleepNumber;\n}\n\nint main( void ){\n  std::vector<std::thread> threads;\n\n  srand( (unsigned int)time(NULL) );           //\u73fe\u5728\u6642\u523b\u3092rand()\u95a2\u6570\u306e\u30b7\u30fc\u30c9\u5024\u306b\u3059\u308b.\n\n  std::cout << \"Before of sort\"<< std::endl;\n\n  for( int i = 0; i < 10; i++ ){\n    int random = rand() % 30; \n    std::cout << std::setw(3) << std::left << random;\n    threads.push_back( std::thread( sleepSort, random ) );  //\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306e\u6b21\u306e\u5f15\u6570\u306f\u30b9\u30ec\u30c3\u30c9\u306e\u5f15\u6570\u306b\u6e21\u3059\u5024\n    /* \u30e9\u30e0\u30c0\u5f0f\u3067\u3082\u66f8\u3051\u308b\u3088\uff01\n    threads.push_back( thread( [random]() {\n          usleep( random * 50000 );\n          cout << random << endl;\n        }\n      )\n    );\n    */\n  }\n  std::cout << std::endl << std::endl;\n\n  std::cout << \"After of sort\" << std::endl;\n\n  //threads.size()\u3067\u914d\u5217\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3057\u3066\u3044\u308b.\n  for( int i = 0; i < threads.size(); i++ ){\n    //\u30bf\u30b9\u30af\u306e\u7d42\u4e86\u3067\u306f\u306a\u304f\u30b9\u30ec\u30c3\u30c9\u305d\u306e\u3082\u306e\u306e\u7d42\u4e86\u3092\u5f85\u3064.\n    threads[i].join();\n  }\n\n  return 0;\n}\n\n\n\u51fa\u529b\nBefore of sort\n2  16 26 2  5  27 9  27 3  24 \n\nAfter of sort\n2  2  3  5  9  16 24 26 27 27\n\n\n\u8ffd\u8a18 : std::async\u3092\u4f7f\u3063\u3066\u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30b9\u30ec\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b.\n\u4e0a\u306ethread\u30af\u30e9\u30b9\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u5b9f\u884c\u3055\u308c\u305f\u6642\u306f\u30b9\u30ec\u30c3\u30c9\u306f\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u304f\u3066,join()\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\u306b\u30b9\u30ec\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3082\u306e\u3060\u3068\u52d8\u9055\u3044\u3057\u3066\u3044\u305f.\n\u305d\u3053\u3067,\u5b9f\u969b\u306b\u305d\u3046\u3044\u3063\u305f\u3053\u3068\u3092\u3084\u308c\u308b\u3068\u306e\u3053\u3068\u3060\u3063\u305f\u306e\u3067\u8ffd\u52a0\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f.\nC++\u5165\u9580 std::async\u3055\u3093\u3092\u53c2\u8003\u306b\u30b3\u30fc\u30c9\u3092\u7d44\u3093\u3067\u307f\u305f.\n#include <iostream>\n#include <future>\n#include <unistd.h>\n\nvoid threadCheck( void ){\n  std::cout << \"Start Running!\" << std::endl;\n}\n\nint main( void ){\n  //\u30b9\u30b3\u30fc\u30d7\u3092\u5206\u3051\u3066\u3044\u308b.\n  {\n    //launch::async\u3092\u6307\u5b9a\u3059\u308b\u3068\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5b9f\u884c\u6642\u70b9\u3067\u30b9\u30ec\u30c3\u30c9\u3082\u5b9f\u884c\u3055\u308c\u308b.\n    std::future<void> hereStart = std::async( std::launch::async, threadCheck );\n    usleep( 1000000 );    //1000000us -> 1s\n    std::cout << \"End of Sleep!\" << std::endl;\n    hereStart.get();\n  }\n\n  std::cout << std::endl;\n\n  {\n    //launch::deferred\u3092\u6307\u5b9a\u3059\u308b\u3068.get()\u30e1\u30c3\u30bd\u30c9\u3092\u5b9f\u884c\u3057\u305f\u6642\u306b\u30b9\u30ec\u30c3\u30c9\u3082\u5b9f\u884c\u3055\u308c\u308b.\n    std::future<void> getStart = std::async( std::launch::deferred, threadCheck );\n    usleep( 1000000 );    //1000000us -> 1s\n    std::cout << \"End of Sleep!\" << std::endl;\n    getStart.get();\n  }\n\n  return 0;\n}\n\n\u5b9f\u884c\u7d50\u679c\nStart Running!\nEnd of Sleep!\n\nEnd of Sleep!\nStart Running!\n\n\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u4e0a\u306elaunch::async\u3092\u6307\u5b9a\u3057\u3066\u4f5c\u3063\u305f\u65b9\u306fusleep\u3088\u308a\u3082\u901f\u304f\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u306b\u5bfe\u3057,deferred\u3067\u306fsleep\u306e\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b.\n\u3053\u306e\u6280\u8853\u306f\u9045\u5ef6\u5b9f\u884c\u3068\u547c\u3070\u308c\u3066\u3044\u308b.\n\n\u304a\u308f\u308a\u306b\n\u4e26\u5217\u51e6\u7406\u3068\u8a00\u308f\u308c\u3066\u601d\u3044\u3064\u304f\u306e\u304cwindwsAPI\u3060\u304c,\u306a\u3093\u3060\u304bhandler\u304c\u3069\u3046\u3068\u304b\u3067\u304b\u306a\u308a\u9762\u5012\u304f\u3055\u3044\u30a4\u30e1\u30fc\u30b8\n\u304c\u3042\u308a,\u4e26\u5217\u51e6\u7406\u3092\u656c\u9060\u3057\u3066\u3044\u305f,\u3057\u304b\u3057<thread>\u3067\u306f\u305d\u3093\u306a\u3053\u3068\u306f\u306a\u304f,\u95a2\u6570\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u3057\u3066\u3057\u307e\u3048\u3070\u3042\u3068\u306f\u3059\u3050\u52d5\u304b\u305b\u308b\u72b6\u614b\u306b\u306a\u308a\n\u304b\u306a\u308a\u7c21\u5358\u3060\u3063\u305f.\n\u307e\u305f,\u601d\u3044\u304c\u3051\u305a\u30e9\u30e0\u30c0\u5f0f\u3084vector\u3092\u52c9\u5f37\u3067\u304d\u305f\u306e\u3067\u4e00\u77f3\u4e09\u9ce5\u3060\u3063\u305f.\n\n\u53c2\u8003\u6587\u732e\n\u9065\u4f50\u4fdd\u306e\u6280\u8853\u30e1\u30e2 C++/CX\u306e\u65c5(9)\uff1aC++11\u306e\u6a19\u6e96\u30bf\u30b9\u30af\u51e6\u7406\u306e\u307e\u3068\u3081(std::future/promise/thread/async)\nC++\u5165\u9580 std::thread\nC++\u5165\u9580 std::async\n#\u306f\u3058\u3081\u306b\n\u306a\u3093\u3068\u306a\u304f\u3084\u308d\u3046\u3068\u601d\u3063\u3066\u3084\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u4e26\u5217\u51e6\u7406\u3060\u304c\u5148\u65e5\u53cb\u4eba\u304b\u3089sleep sort\u3063\u3066\u3057\u3063\u3066\u308b\uff1f\u3068\u805e\u3044\u3066\u8abf\u3079\u3066\u307f\u305f\u3068\u3053\u308d\u4e26\u5217\u51e6\u7406\u3092\u3064\u304b\u3063\u305f\u30bd\u30fc\u30c8\u3063\u307d\u304b\u305f\u3063\u305f\u306e\u3067\u4e26\u5217\u51e6\u7406\u306e\u7df4\u7fd2\u3092\u517c\u306d\u3066\u5b9f\u88c5\u3057\u3088\u3046\u3068\u601d\u3063\u305f.\n\n#sleep sort\n\u5b9f\u88c5\u5185\u5bb9\u306f,\n\n    sleep( $SortData );\n    echo $SortData;\n\u3060\u3051\u3067\u3042\u308b.\n\u3053\u306e\u4e8c\u884c\u3092\u4e26\u5217\u51e6\u7406\u3067\u305f\u304f\u3055\u3093\u52d5\u304b\u305b\u3070\u6607\u9806\u306b\u51fa\u529b\u3055\u308c\u308b\u3068\u3044\u3046\u7b97\u6bb5\u3067\u3042\u308b.\n\n#\u307e\u305a\u306f\u4e26\u5217\u51e6\u7406\u306e\u52d5\u4f5c\u78ba\u8a8d\n##\u305d\u306e\u524d\u306b\u6ce8\u610f\u70b9\nLinux\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\n\n    g++ -std=c++11 FileName.cpp -pthread\n\u306e\u3088\u3046\u306b-std=c++11\u3067c++11\u3092\u4f7f\u3046,-pthread\u3067\u4e26\u5217\u51e6\u7406\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u30ea\u30f3\u30af\u3092\u3059\u308b\u3068\u3044\u3063\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044.\n\nMac\u306e\u5834\u5408\n\n     clang -std=c++11 FileName.cpp\n\n\u4eca\u56de\u4f7f\u7528\u3057\u305f\u4e26\u5217\u51e6\u7406\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f<thread>\u3067\u3042\u308b.\n\u7406\u7531\u306f\u500b\u4eba\u7684\u306b\u8cc7\u6599\u304c\u591a\u3044\u306a\u3068\u611f\u3058\u305f\u3053\u3068\u3068,\u4ed6\u3068\u6bd4\u3079\u3066\u308f\u304b\u308a\u3084\u3059\u304f\u611f\u3058\u305f\u305f\u3081\u3067\u3042\u308b.\n\nthread.cpp\n\n    #include <iostream>\n    #include <thread>\n\n    void outKokoax( void ){\n      std::cout << \"kokoax\" << std::endl;\n    }\n\n    int main( void ){\n      //\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5b9f\u884c\u6642\u306b\u30b9\u30ec\u30c3\u30c9\u306e\u751f\u6210\u3068\u5b9f\u884c\u3092\u3057\u3066\u3044\u308b.\n      std::thread MyName( outKokoax );  \n\n      //\u30bf\u30b9\u30af\u306e\u7d42\u4e86\u3067\u306f\u306a\u304f\u30b9\u30ec\u30c3\u30c9\u305d\u306e\u3082\u306e\u306e\u7d42\u4e86\u3092\u5f85\u3064.\n      //join()\u3092\u5b9f\u884c\u3057\u306a\u3044\u3068\u5b9f\u884c\u6642\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u308b.\n      MyName.join();                    \n\n      return 0;\n    }\n\u51fa\u529b\n\n    kokoax\n\n\u3053\u308c\u3060\u3068\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3068\u308a\u3042\u3048\u305a\u95a2\u6570\u3092\u3044\u3064\u3082\u3068\u9055\u3046\u3084\u308a\u65b9\u3067\u5b9f\u884c\u3067\u304d\u305f\u306e\u3067\u3088\u3057\u3068\u3057\u305f.\n\n#sleep sort\u306e\u5b9f\u88c5\n\n    #include <iostream>\n    #include <iomanip>\n    #include <vector>\n\n    #include <thread>\n\n    #include <unistd.h>\n    #include <time.h>\n\n    void sleepSort( int sleepNumber ){\n      usleep( sleepNumber * 50000 );           //\u5f15\u6570\u30df\u30ea\u79d2sleep\u3059\u308b(unistd.h).  *50000\u3092\u6d88\u3059\u3068\u51fa\u529b\u304c\u91cd\u306a\u3063\u3066\u4e26\u5217\u51e6\u7406\u611f\u304c\u3067\u308b.\n      std::cout << std::setw(3) << std::left << sleepNumber;\n    }\n\n    int main( void ){\n      std::vector<std::thread> threads;\n\n      srand( (unsigned int)time(NULL) );           //\u73fe\u5728\u6642\u523b\u3092rand()\u95a2\u6570\u306e\u30b7\u30fc\u30c9\u5024\u306b\u3059\u308b.\n\n      std::cout << \"Before of sort\"<< std::endl;\n\n      for( int i = 0; i < 10; i++ ){\n        int random = rand() % 30; \n        std::cout << std::setw(3) << std::left << random;\n        threads.push_back( std::thread( sleepSort, random ) );  //\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306e\u6b21\u306e\u5f15\u6570\u306f\u30b9\u30ec\u30c3\u30c9\u306e\u5f15\u6570\u306b\u6e21\u3059\u5024\n        /* \u30e9\u30e0\u30c0\u5f0f\u3067\u3082\u66f8\u3051\u308b\u3088\uff01\n        threads.push_back( thread( [random]() {\n              usleep( random * 50000 );\n              cout << random << endl;\n            }\n          )\n        );\n        */\n      }\n      std::cout << std::endl << std::endl;\n\n      std::cout << \"After of sort\" << std::endl;\n\n      //threads.size()\u3067\u914d\u5217\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3057\u3066\u3044\u308b.\n      for( int i = 0; i < threads.size(); i++ ){\n        //\u30bf\u30b9\u30af\u306e\u7d42\u4e86\u3067\u306f\u306a\u304f\u30b9\u30ec\u30c3\u30c9\u305d\u306e\u3082\u306e\u306e\u7d42\u4e86\u3092\u5f85\u3064.\n        threads[i].join();\n      }\n\n      return 0;\n    }\n\n#\u51fa\u529b\n    Before of sort\n    2  16 26 2  5  27 9  27 3  24 \n\n    After of sort\n    2  2  3  5  9  16 24 26 27 27\n\n#\u8ffd\u8a18 : std::async\u3092\u4f7f\u3063\u3066\u6307\u5b9a\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30b9\u30ec\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b.\n\u4e0a\u306ethread\u30af\u30e9\u30b9\u3067\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u5b9f\u884c\u3055\u308c\u305f\u6642\u306f\u30b9\u30ec\u30c3\u30c9\u306f\u5b9f\u884c\u3055\u308c\u3066\u3044\u306a\u304f\u3066,join()\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\u306b\u30b9\u30ec\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3082\u306e\u3060\u3068\u52d8\u9055\u3044\u3057\u3066\u3044\u305f.\n\u305d\u3053\u3067,\u5b9f\u969b\u306b\u305d\u3046\u3044\u3063\u305f\u3053\u3068\u3092\u3084\u308c\u308b\u3068\u306e\u3053\u3068\u3060\u3063\u305f\u306e\u3067\u8ffd\u52a0\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f.\n\n[C++\u5165\u9580 std::async](http://kaworu.jpn.org/cpp/std::async)\u3055\u3093\u3092\u53c2\u8003\u306b\u30b3\u30fc\u30c9\u3092\u7d44\u3093\u3067\u307f\u305f.\n\n    #include <iostream>\n    #include <future>\n    #include <unistd.h>\n\n    void threadCheck( void ){\n      std::cout << \"Start Running!\" << std::endl;\n    }\n\n    int main( void ){\n      //\u30b9\u30b3\u30fc\u30d7\u3092\u5206\u3051\u3066\u3044\u308b.\n      {\n        //launch::async\u3092\u6307\u5b9a\u3059\u308b\u3068\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5b9f\u884c\u6642\u70b9\u3067\u30b9\u30ec\u30c3\u30c9\u3082\u5b9f\u884c\u3055\u308c\u308b.\n        std::future<void> hereStart = std::async( std::launch::async, threadCheck );\n        usleep( 1000000 );    //1000000us -> 1s\n        std::cout << \"End of Sleep!\" << std::endl;\n        hereStart.get();\n      }\n\n      std::cout << std::endl;\n\n      {\n        //launch::deferred\u3092\u6307\u5b9a\u3059\u308b\u3068.get()\u30e1\u30c3\u30bd\u30c9\u3092\u5b9f\u884c\u3057\u305f\u6642\u306b\u30b9\u30ec\u30c3\u30c9\u3082\u5b9f\u884c\u3055\u308c\u308b.\n        std::future<void> getStart = std::async( std::launch::deferred, threadCheck );\n        usleep( 1000000 );    //1000000us -> 1s\n        std::cout << \"End of Sleep!\" << std::endl;\n        getStart.get();\n      }\n\n      return 0;\n    }\n\n\u5b9f\u884c\u7d50\u679c\n\n    Start Running!\n    End of Sleep!\n\n    End of Sleep!\n    Start Running!\n\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u4e0a\u306elaunch::async\u3092\u6307\u5b9a\u3057\u3066\u4f5c\u3063\u305f\u65b9\u306fusleep\u3088\u308a\u3082\u901f\u304f\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u306e\u306b\u5bfe\u3057,deferred\u3067\u306fsleep\u306e\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b.\n\u3053\u306e\u6280\u8853\u306f\u9045\u5ef6\u5b9f\u884c\u3068\u547c\u3070\u308c\u3066\u3044\u308b.\n\n#\u304a\u308f\u308a\u306b\n\u4e26\u5217\u51e6\u7406\u3068\u8a00\u308f\u308c\u3066\u601d\u3044\u3064\u304f\u306e\u304cwindwsAPI\u3060\u304c,\u306a\u3093\u3060\u304bhandler\u304c\u3069\u3046\u3068\u304b\u3067\u304b\u306a\u308a\u9762\u5012\u304f\u3055\u3044\u30a4\u30e1\u30fc\u30b8\n\u304c\u3042\u308a,\u4e26\u5217\u51e6\u7406\u3092\u656c\u9060\u3057\u3066\u3044\u305f,\u3057\u304b\u3057\\<thread>\u3067\u306f\u305d\u3093\u306a\u3053\u3068\u306f\u306a\u304f,\u95a2\u6570\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u3057\u3066\u3057\u307e\u3048\u3070\u3042\u3068\u306f\u3059\u3050\u52d5\u304b\u305b\u308b\u72b6\u614b\u306b\u306a\u308a\n\u304b\u306a\u308a\u7c21\u5358\u3060\u3063\u305f.\n\u307e\u305f,\u601d\u3044\u304c\u3051\u305a\u30e9\u30e0\u30c0\u5f0f\u3084vector\u3092\u52c9\u5f37\u3067\u304d\u305f\u306e\u3067\u4e00\u77f3\u4e09\u9ce5\u3060\u3063\u305f.\n\n#\u53c2\u8003\u6587\u732e\n[\u9065\u4f50\u4fdd\u306e\u6280\u8853\u30e1\u30e2 C++/CX\u306e\u65c5(9)\uff1aC++11\u306e\u6a19\u6e96\u30bf\u30b9\u30af\u51e6\u7406\u306e\u307e\u3068\u3081(std::future/promise/thread/async)](http://blog.livedoor.jp/haruka_sao/archives/52047261.html)\n\n[C++\u5165\u9580 std::thread](http://kaworu.jpn.org/cpp/std::thread)\n\n[C++\u5165\u9580 std::async](http://kaworu.jpn.org/cpp/std::async)\n"}