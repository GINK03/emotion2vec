{"tags": ["Ruby", "dns"], "context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u4f55\u3089\u304b\u306e\u539f\u56e0\u3067DNS\u60c5\u5831\u3092\u3082\u3089\u3048\u306a\u3044\u6642\u306b\u6bce\u56de\u601d\u3044\u3064\u3044\u305f\u3082\u306e\u3092\u300cdig A XXXX.domain.co.jp\u300d\u3068\u304b\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u307e\u3068\u3081\u3066\u304a\u3044\u3066\u4e00\u62ec\u3067\u63a2\u305d\u3046\u3088\u3002\u3044\u3064\u3082\u691c\u7d22\u3057\u3066\u3044\u308b\u3082\u306e\u306f\u306a\u3093\u3060\u3063\u3051\u3068\u304b\u306a\u308b\u3057\u3002\n\n\u30b3\u30fc\u30c9\n\npopular_record_search.rb\n# coding:utf-8\n\n@fqdn = ARGV[0]\n\nif @fqdn.nil? \n  print \"FQDN or is empty, please write like a \\n\"\n  print \"\\\"ruby popular_record_search.rb sample.co.jp\\\"\\n\"\n  exit 1\nend\n\ndef search(fqdn)\n  soa = {'soa' => [\"\"]}\n  ns  = {'ns'  => [\"\"]}\n  mx  = {'mx'  => [\"\", \"mail.\", \"mx.\"]}\n  a   = {'a'   => [\"\", \"www.\", \"ftp.\", \"mail.\", \"imap.\", \"pop.\", \"smtp.\", \"localhost.\"]}\n  txt = {'txt' => [\"\"]}\n  records = [soa, ns, mx, a, txt]\n\n  records.each do |record|\n    record.each do |type, hosts|\n      puts \";; #{type} record\"\n      hosts.each do |host|\n        answer = `dig #{type} #{host}#{@fqdn} +noall +answer |grep -v ^;`.sub(\"\\n\",\"\")\n        unless answer == \"\"\n          puts answer\n        end\n      end\n    end\n  end\nend\n\nsearch(@fqdn)\n\nexit 0\n\n\n\u3042\u307e\u308a\u306b\u5358\u7d14\u306a\u3093\u3067\u3059\u304c\u3001\u305d\u308c\u305e\u308c\u306e\u30ec\u30b3\u30fc\u30c9\u3054\u3068\u306b\u8abf\u3079\u308b\u30db\u30b9\u30c8\u3092\u30cf\u30c3\u30b7\u30e5\u306b\u3057\u3066\u304a\u3044\u3066\u3001\u305d\u308c\u3089\u3092\u914d\u5217\u306b\u3057\u3066dig\u3059\u308b\u3063\u3066\u3044\u3046\u3060\u3051\u3067\u3059\u3002require\u3067\u305d\u308c\u76f8\u5fdc\u306e\u3082\u306e\u3068\u304b\u3042\u308a\u305d\u3046\u3067\u3059\u304c\u3001\u53d6\u308a\u6025\u304e\u611f\u3002\n\n\u8ffd\u8a18\n\u6307\u6458\u3092\u9802\u3044\u305f\u306e\u3067\u3001resolv \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u305f\u65b9\u6cd5\u3067\u3061\u3087\u3063\u3068\u66f8\u3044\u3066\u307f\u305f\u3002\u5165\u308c\u5b50\u304c5\u6bb5\u968e\u3067\u3061\u3087\u3063\u3068\u3069\u3046\u306a\u306e\u304b\u306a\u3068\u304b\u601d\u3046\u3051\u308c\u3069\u3082\u3002\n\npopular_record_search2.rb\n# coding: utf-8\n\nrequire 'resolv'\n\n@domain = ARGV[0]\n\nif @domain.nil?\n  print \"DOMAIN or is empty, please write like a \\n\"\n  print \"\\\"ruby popular_record_search.rb sample.co.jp\\\"\\n\"\n  exit 1  \nend\n\ndef search(fqdn)\n  resolv = Resolv::DNS.new(:nameserver =>['8.8.8.8'])\n\n  soa = {'SOA' => [\"\"]}\n  ns  = {'NS'  => [\"\"]}\n  mx  = {'MX'  => [\"\", \"mail.\", \"mx.\"]}\n  a   = {'A'   => [\"\", \"www.\", \"ftp.\", \"mail.\", \"imap.\", \"pop.\", \"smtp.\", \"localhost.\"]}\n  txt = {'TXT' => [\"\"]}\n  records = [soa, ns, mx, a, txt]\n\n  records.each do |key|\n    key.each do |type, hosts|\n      puts \"; #{type} RECORD\"\n      hosts.each do |host|\n        fqdn = \"#{host}#{@domain}\"\n\n        case type\n        when 'SOA'\n          resolv.each_resource(fqdn, Resolv::DNS::Resource::IN::SOA) do |resource|\n            puts \"TTL is #{resource.ttl}\"\n            puts \"#{fqdn}\\tIN\\t#{type}\\t#{resource.mname}\"\n          end\n        when 'NS'\n          resolv.each_resource(fqdn, Resolv::DNS::Resource::IN::NS) do |resource|\n            puts \"#{fqdn}\\tIN\\t#{type}\\t#{resource.name}\"\n          end\n        when 'MX'\n          resolv.each_resource(fqdn, Resolv::DNS::Resource::IN::MX) do |resource|\n            puts \"#{fqdn}\\tIN\\t#{type}\\t#{resource.preference}\\t#{resource.exchange}\"\n          end  \n        when 'A'\n          resolv.each_resource(fqdn, Resolv::DNS::Resource::IN::A) do |resource|\n            puts \"#{fqdn}\\tIN\\t#{type}\\t#{resource.address}\"\n          end\n        when 'TXT'\n          resolv.each_resource(fqdn, Resolv::DNS::Resource::IN::TXT) do |resource|\n            puts \"#{fqdn}\\tIN\\t#{type}\\t#{resource.strings}\"\n          end\n        end\n      end\n    end\n  end\nend\n\nsearch(@domain)\n\nexit 0\n\n\n\u306a\u3093\u3068\u306a\u304fgoogle\u306eDNS\u3092\u4eee\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u5c11\u3057\u6642\u9593\u3064\u304b\u3063\u305f\u306e\u306fresource\u304c\u3069\u3093\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u3082\u3063\u3066\u3044\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001.methods\u3067\u4e00\u89a7\u898b\u305f\u308a\u3068\u304b\u3002\u8868\u8a18\u306f\u5909\u308f\u3063\u3066\u3057\u307e\u3063\u305f\u3051\u3069\u3001\u4e00\u5fdc\u540d\u524d\u89e3\u6c7a\u306f\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u5148\u306e\u4f8b\u306f\u30ec\u30b3\u30fc\u30c9\u304c\u5165\u3063\u3066\u3044\u308b\u5217\u3092\u62bd\u51fa\u3057\u3066\u3044\u305f\u3060\u3051\u3060\u3063\u305f\u3051\u3069\u3082\u3001\u3053\u3063\u3061\u306fIP\u81ea\u4f53\u3068\u304bTTL\u81ea\u4f53\u3068\u304b\u3092\u3068\u308c\u308b\u306e\u3067\u3001\u3044\u308d\u3044\u308d\u4ed6\u306e\u4f5c\u696d\u3068\u304b\u3067\u3082\u53d6\u308a\u56de\u3057\u304c\u826f\u3055\u305d\u3046\u3067\u30ca\u30a4\u30b9\u3067\u3059\u3002\n\n\u6700\u5f8c\u306b\n\u8abf\u3079\u308b\u30db\u30b9\u30c8\u540d\u3067\u4ed6\u3082\u8abf\u3079\u305f\u307b\u3046\u304c\u826f\u3044\u3068\u304b\u3001\u3088\u304f\u3042\u308b\u30db\u30b9\u30c8\u540d\u3068\u304b\u3057\u308a\u305f\u3044\u3067\u3059\u3002\u3053\u306e\u307e\u307e.zone\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u3059\u308b\u3068\u304b\u3082\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u8003\u3048\u308b\u304b...\u3067\u3059\u3002\u3042\u3093\u307e\u30ac\u30f3\u30ac\u30f3\u7528\u9014\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u304c\u3002\n## \u306f\u3058\u3081\u306b\n\u4f55\u3089\u304b\u306e\u539f\u56e0\u3067DNS\u60c5\u5831\u3092\u3082\u3089\u3048\u306a\u3044\u6642\u306b\u6bce\u56de\u601d\u3044\u3064\u3044\u305f\u3082\u306e\u3092\u300cdig A XXXX.domain.co.jp\u300d\u3068\u304b\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u307e\u3068\u3081\u3066\u304a\u3044\u3066\u4e00\u62ec\u3067\u63a2\u305d\u3046\u3088\u3002\u3044\u3064\u3082\u691c\u7d22\u3057\u3066\u3044\u308b\u3082\u306e\u306f\u306a\u3093\u3060\u3063\u3051\u3068\u304b\u306a\u308b\u3057\u3002\n\n## \u30b3\u30fc\u30c9\n\n```popular_record_search.rb\n# coding:utf-8\n\n@fqdn = ARGV[0]\n\nif @fqdn.nil? \n  print \"FQDN or is empty, please write like a \\n\"\n  print \"\\\"ruby popular_record_search.rb sample.co.jp\\\"\\n\"\n  exit 1\nend\n\ndef search(fqdn)\n  soa = {'soa' => [\"\"]}\n  ns  = {'ns'  => [\"\"]}\n  mx  = {'mx'  => [\"\", \"mail.\", \"mx.\"]}\n  a   = {'a'   => [\"\", \"www.\", \"ftp.\", \"mail.\", \"imap.\", \"pop.\", \"smtp.\", \"localhost.\"]}\n  txt = {'txt' => [\"\"]}\n  records = [soa, ns, mx, a, txt]\n\n  records.each do |record|\n    record.each do |type, hosts|\n      puts \";; #{type} record\"\n      hosts.each do |host|\n        answer = `dig #{type} #{host}#{@fqdn} +noall +answer |grep -v ^;`.sub(\"\\n\",\"\")\n        unless answer == \"\"\n          puts answer\n        end\n      end\n    end\n  end\nend\n  \nsearch(@fqdn)\n\nexit 0\n```\n\n\u3042\u307e\u308a\u306b\u5358\u7d14\u306a\u3093\u3067\u3059\u304c\u3001\u305d\u308c\u305e\u308c\u306e\u30ec\u30b3\u30fc\u30c9\u3054\u3068\u306b\u8abf\u3079\u308b\u30db\u30b9\u30c8\u3092\u30cf\u30c3\u30b7\u30e5\u306b\u3057\u3066\u304a\u3044\u3066\u3001\u305d\u308c\u3089\u3092\u914d\u5217\u306b\u3057\u3066dig\u3059\u308b\u3063\u3066\u3044\u3046\u3060\u3051\u3067\u3059\u3002require\u3067\u305d\u308c\u76f8\u5fdc\u306e\u3082\u306e\u3068\u304b\u3042\u308a\u305d\u3046\u3067\u3059\u304c\u3001\u53d6\u308a\u6025\u304e\u611f\u3002\n\n## \u8ffd\u8a18\n\u6307\u6458\u3092\u9802\u3044\u305f\u306e\u3067\u3001resolv \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u305f\u65b9\u6cd5\u3067\u3061\u3087\u3063\u3068\u66f8\u3044\u3066\u307f\u305f\u3002\u5165\u308c\u5b50\u304c5\u6bb5\u968e\u3067\u3061\u3087\u3063\u3068\u3069\u3046\u306a\u306e\u304b\u306a\u3068\u304b\u601d\u3046\u3051\u308c\u3069\u3082\u3002\n\n```popular_record_search2.rb\n# coding: utf-8\n\nrequire 'resolv'\n\n@domain = ARGV[0]\n\nif @domain.nil?\n  print \"DOMAIN or is empty, please write like a \\n\"\n  print \"\\\"ruby popular_record_search.rb sample.co.jp\\\"\\n\"\n  exit 1  \nend\n\ndef search(fqdn)\n  resolv = Resolv::DNS.new(:nameserver =>['8.8.8.8'])\n\n  soa = {'SOA' => [\"\"]}\n  ns  = {'NS'  => [\"\"]}\n  mx  = {'MX'  => [\"\", \"mail.\", \"mx.\"]}\n  a   = {'A'   => [\"\", \"www.\", \"ftp.\", \"mail.\", \"imap.\", \"pop.\", \"smtp.\", \"localhost.\"]}\n  txt = {'TXT' => [\"\"]}\n  records = [soa, ns, mx, a, txt]\n\n  records.each do |key|\n    key.each do |type, hosts|\n      puts \"; #{type} RECORD\"\n      hosts.each do |host|\n        fqdn = \"#{host}#{@domain}\"\n\n        case type\n        when 'SOA'\n          resolv.each_resource(fqdn, Resolv::DNS::Resource::IN::SOA) do |resource|\n            puts \"TTL is #{resource.ttl}\"\n            puts \"#{fqdn}\\tIN\\t#{type}\\t#{resource.mname}\"\n          end\n        when 'NS'\n          resolv.each_resource(fqdn, Resolv::DNS::Resource::IN::NS) do |resource|\n            puts \"#{fqdn}\\tIN\\t#{type}\\t#{resource.name}\"\n          end\n        when 'MX'\n          resolv.each_resource(fqdn, Resolv::DNS::Resource::IN::MX) do |resource|\n            puts \"#{fqdn}\\tIN\\t#{type}\\t#{resource.preference}\\t#{resource.exchange}\"\n          end  \n        when 'A'\n          resolv.each_resource(fqdn, Resolv::DNS::Resource::IN::A) do |resource|\n            puts \"#{fqdn}\\tIN\\t#{type}\\t#{resource.address}\"\n          end\n        when 'TXT'\n          resolv.each_resource(fqdn, Resolv::DNS::Resource::IN::TXT) do |resource|\n            puts \"#{fqdn}\\tIN\\t#{type}\\t#{resource.strings}\"\n          end\n        end\n      end\n    end\n  end\nend\n\nsearch(@domain)\n\nexit 0\n```\n\n\u306a\u3093\u3068\u306a\u304fgoogle\u306eDNS\u3092\u4eee\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u5c11\u3057\u6642\u9593\u3064\u304b\u3063\u305f\u306e\u306fresource\u304c\u3069\u3093\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u3082\u3063\u3066\u3044\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001.methods\u3067\u4e00\u89a7\u898b\u305f\u308a\u3068\u304b\u3002\u8868\u8a18\u306f\u5909\u308f\u3063\u3066\u3057\u307e\u3063\u305f\u3051\u3069\u3001\u4e00\u5fdc\u540d\u524d\u89e3\u6c7a\u306f\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u5148\u306e\u4f8b\u306f\u30ec\u30b3\u30fc\u30c9\u304c\u5165\u3063\u3066\u3044\u308b\u5217\u3092\u62bd\u51fa\u3057\u3066\u3044\u305f\u3060\u3051\u3060\u3063\u305f\u3051\u3069\u3082\u3001\u3053\u3063\u3061\u306fIP\u81ea\u4f53\u3068\u304bTTL\u81ea\u4f53\u3068\u304b\u3092\u3068\u308c\u308b\u306e\u3067\u3001\u3044\u308d\u3044\u308d\u4ed6\u306e\u4f5c\u696d\u3068\u304b\u3067\u3082\u53d6\u308a\u56de\u3057\u304c\u826f\u3055\u305d\u3046\u3067\u30ca\u30a4\u30b9\u3067\u3059\u3002\n\n## \u6700\u5f8c\u306b\n\u8abf\u3079\u308b\u30db\u30b9\u30c8\u540d\u3067\u4ed6\u3082\u8abf\u3079\u305f\u307b\u3046\u304c\u826f\u3044\u3068\u304b\u3001\u3088\u304f\u3042\u308b\u30db\u30b9\u30c8\u540d\u3068\u304b\u3057\u308a\u305f\u3044\u3067\u3059\u3002\u3053\u306e\u307e\u307e.zone\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u3059\u308b\u3068\u304b\u3082\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u8003\u3048\u308b\u304b...\u3067\u3059\u3002\u3042\u3093\u307e\u30ac\u30f3\u30ac\u30f3\u7528\u9014\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u304c\u3002"}