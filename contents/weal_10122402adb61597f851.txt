{"context": " More than 1 year has passed since last update.\n\njavascript\u3067UTF-8/UTF-16\u5909\u63db\njavascript\u306e\u6587\u5b57\u5217\u3092UTF-8/UTF-16(LE,BE)\u3078\u5909\u63db\u30fb\u9006\u5909\u63db\u3059\u308b\n\n\u6587\u5b57\u5217\u304b\u3089UTF-8/UTF-16\u30d0\u30a4\u30c8\u5217\u3078\u306e\u5909\u63db\n\n\n\u30b9\u30ab\u30e9\u30fc\u5024\u306e\u53d6\u5f97\n\u7b26\u53f7\u5316\n\n\nUTF-8/UTF-16\u30d0\u30a4\u30c8\u5217\u304b\u3089\u6587\u5b57\u5217\u3078\u306e\u5909\u63db\n\n\n\u6587\u5b57\u5217\u304b\u3089UTF-8/UTF-16\u30d0\u30a4\u30c8\u5217\u3078\u306e\u5909\u63db\n\n\u30b9\u30ab\u30e9\u30fc\u5024\u306e\u53d6\u5f97\nString.prototype.charCodeAt(i) \u3067i\u6587\u5b57\u76ee\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u51fa\u6765\u308b\u3002 \u305f\u3060js\u306e\u6587\u5b57\u5217\u306fUTF-16\u306a\u306e\u3067\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\"use strict\";\nvar Utf = {\n    charCodes: function(str) {\n        var i, len, arr;\n        for(i=0,len=str.length,arr=[]; i<len; i++) {\n            arr.push(str.charCodeAt(i));\n        }\n        return arr;\n    },\n    scalarValues: function(arr) {\n        var scalars = [], i, len, c;\n        if (typeof arr === 'string') {arr = Utf.charCodes(arr);}\n        for(i=0,len=arr.length; c=arr[i],i<len; i++) {\n            if (c >= 0xd800 && c <= 0xdbff) {\n                scalars.push((c & 1023) + 64 << 10 | arr[++i] & 1023);\n            } else {scalars.push(c);}\n        }\n        return scalars;\n    }\n};\n\n\n\u7b26\u53f7\u5316\nUTF-8\u306f\u30b9\u30ab\u30e9\u30fc\u5024\u304b\u3089\u5909\u63db\u3059\u308b\u3002 UTF-16\u306f\u6587\u5b57\u30b3\u30fc\u30c9\u304b\u3089\u30d0\u30a4\u30c8\u5217\u5316\u3059\u308b(\u30b9\u30ab\u30e9\u30fc\u5024\u304b\u3089\u3060\u30682\u5ea6\u624b\u9593)\u3002\nUtf.encodeUTF8 = function(str) {\n    var sv = Utf.scalarValues(str), i, len, arr, c;\n    for(i=0,len=sv.length,arr=[]; c=sv[i],i<len; i++) {\n        if (c <= 0x7f) {arr.push(c);} //1byte\n        else if (c <= 0x7ff) {arr.push(0xc0|c>>>6, 0x80|c&0xbf);} //2byte\n        else if (c <= 0xffff) { //3byte\n            arr.push(0xe0|c>>>12, 0x80|c>>>6&0xbf, 0x80|c&0xbf);\n        } else if (c <= 0x1ffff) { //4byte\n            arr.push(0xf0|c>>>18, 0x80|c>>>12&0xbf, 0x80|c>>>6&0xbf, 0x80|c&0xbf);\n        }\n    }\n    return arr;\n};\nUtf.encodeUTF16 = function(str, endian) {\n    var codes = Utf.charCodes(str), i, len, arr, c;\n    arr = endian ? endian === 'LE' ? [0xff,0xfe] : [0xfe,0xff] : []; //BOM\n    for(i=0,len=codes.length; c=codes[i],i<len; i++) {\n        if (endian === 'LE') {\n            arr.push(c & 0xff, c >>> 8 & 0xff);\n        } else {\n            arr.push(c >>> 8 & 0xff, c & 0xff);\n        }\n    }\n    return arr;\n};\n\n\u307e\u305fUTF-8\u3078\u306e\u5909\u63db\u306b\u30b9\u30ab\u30e9\u30fc\u5024\u3092\u6c42\u3081\u305a\u3001\u6587\u5b57\u30b3\u30fc\u30c9\u304b\u3089\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3092\u8003\u616e\u3057\u3066\u3082\u826f\u3044\nUtf.encodeUTF8 = function(str) {\n    var codes = Utf.charCodes(str), i, len, arr, c;\n    for(i=0,len=codes.length,arr=[]; c=codes[i],i<len; i++) {\n        if (c <= 0x7f) {arr.push(c);} //1byte\n        else if (c <= 0x7ff) {arr.push(0xc0|c>>>6, 0x80|c&0xbf);} //2byte\n        else if (c <= 0xdbff && c >= 0xd800) { //4byte\n            //utf16  110110wwwwxxxxxx  110111xxxxxxxxxx\n            //utf8   11110uuu  10uuxxxx  10xxxxxx  10xxxxxx (uuuuu = wwww+1)\n            arr.push(\n                0xf0 | (c=(c & 1023) + 64) >>> 8,\n                0x80 | c >>> 2 & 63,\n                0x80 | (c & 3) << 4 | (c=codes[++i] & 1023) >>> 6,\n                0x80 | c & 63\n            );\n        } else if (c <= 0xffff) { //3byte\n            arr.push(0xe0|c>>>12, 0x80|c>>>6&0xbf, 0x80|c&0xbf);\n        }\n    }\n    return arr;\n};\n\nUTF-8/UTF-16\u30d0\u30a4\u30c8\u5217\u304b\u3089\u6587\u5b57\u5217\u3078\u306e\u5909\u63db\n\u4e0a\u8a18\u3068\u9006\u306e\u51e6\u7406\u3092\u884c\u3048\u3070\u3088\u3044\nUtf.decodeUTF8 = function(arr) {\n    var i, len, c, str, char = String.fromCharCode;\n    for(i=0,len=arr.length,str=\"\"; c=arr[i],i<len; i++) {\n        if (c <= 0x7f) {str += char(c);}\n        else if (c <= 0xdf && c >= 0xc2) {\n            str += char((c&31)<<6 | arr[++i]&63);\n        } else if (c <= 0xef && c >= 0xe0) {\n            str += char((c&15)<<12 | (arr[++i]&63)<<6 | arr[++i]&63);\n        } else if (c <= 0xf7 && c >= 0xf0) {\n            //utf8   11110uuu  10uuxxxx  10xxxxxx  10xxxxxx\n            //utf16  110110wwwwxxxxxx  110111xxxxxxxxxx (wwww = uuuuu-1)\n            str += char(\n                0xd800 | ((c&7)<<8 | (arr[++i]&63)<<2 | arr[++i]>>>4&3) - 64,\n                0xdc00 | (arr[i++]&15)<<6 | arr[i]&63\n            );\n        }\n        else {str += char(0xfffd);}\n    }\n    return str;\n};\nUtf.decodeUTF16 = function(arr) {\n    var endian = 'BE', i = 0, len, str;\n    if (arr[0]*arr[1] === 0xff*0xfe) { // remove BOM\n        endian = arr[0] === 0xff ? 'LE' : 'BE';\n        i = 2;\n    }\n    for(len=arr.length,str=\"\"; i<len; i+=2) {\n        str += String.fromCharCode(endian === 'LE' ? (arr[i+1]<<8|arr[i]) : (arr[i]<<8|arr[i+1]));\n    }\n    return str;\n};\n\n# javascript\u3067UTF-8/UTF-16\u5909\u63db\n\njavascript\u306e\u6587\u5b57\u5217\u3092UTF-8/UTF-16(LE,BE)\u3078\u5909\u63db\u30fb\u9006\u5909\u63db\u3059\u308b\n\n* \u6587\u5b57\u5217\u304b\u3089UTF-8/UTF-16\u30d0\u30a4\u30c8\u5217\u3078\u306e\u5909\u63db\n  1. \u30b9\u30ab\u30e9\u30fc\u5024\u306e\u53d6\u5f97\n  2. \u7b26\u53f7\u5316\n* UTF-8/UTF-16\u30d0\u30a4\u30c8\u5217\u304b\u3089\u6587\u5b57\u5217\u3078\u306e\u5909\u63db\n\n## \u6587\u5b57\u5217\u304b\u3089UTF-8/UTF-16\u30d0\u30a4\u30c8\u5217\u3078\u306e\u5909\u63db\n###\u30b9\u30ab\u30e9\u30fc\u5024\u306e\u53d6\u5f97\n\n`String.prototype.charCodeAt(i)` \u3067i\u6587\u5b57\u76ee\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u51fa\u6765\u308b\u3002 \u305f\u3060js\u306e\u6587\u5b57\u5217\u306fUTF-16\u306a\u306e\u3067\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n```js\n\"use strict\";\nvar Utf = {\n\tcharCodes: function(str) {\n\t\tvar i, len, arr;\n\t\tfor(i=0,len=str.length,arr=[]; i<len; i++) {\n\t\t\tarr.push(str.charCodeAt(i));\n\t\t}\n\t\treturn arr;\n\t},\n\tscalarValues: function(arr) {\n\t\tvar scalars = [], i, len, c;\n\t\tif (typeof arr === 'string') {arr = Utf.charCodes(arr);}\n\t\tfor(i=0,len=arr.length; c=arr[i],i<len; i++) {\n\t\t\tif (c >= 0xd800 && c <= 0xdbff) {\n\t\t\t\tscalars.push((c & 1023) + 64 << 10 | arr[++i] & 1023);\n\t\t\t} else {scalars.push(c);}\n\t\t}\n\t\treturn scalars;\n\t}\n};\n```\n\n### \u7b26\u53f7\u5316\n\nUTF-8\u306f\u30b9\u30ab\u30e9\u30fc\u5024\u304b\u3089\u5909\u63db\u3059\u308b\u3002 UTF-16\u306f\u6587\u5b57\u30b3\u30fc\u30c9\u304b\u3089\u30d0\u30a4\u30c8\u5217\u5316\u3059\u308b(\u30b9\u30ab\u30e9\u30fc\u5024\u304b\u3089\u3060\u30682\u5ea6\u624b\u9593)\u3002\n\n```js\nUtf.encodeUTF8 = function(str) {\n\tvar sv = Utf.scalarValues(str), i, len, arr, c;\n\tfor(i=0,len=sv.length,arr=[]; c=sv[i],i<len; i++) {\n\t\tif (c <= 0x7f) {arr.push(c);} //1byte\n\t\telse if (c <= 0x7ff) {arr.push(0xc0|c>>>6, 0x80|c&0xbf);} //2byte\n\t\telse if (c <= 0xffff) { //3byte\n\t\t\tarr.push(0xe0|c>>>12, 0x80|c>>>6&0xbf, 0x80|c&0xbf);\n\t\t} else if (c <= 0x1ffff) { //4byte\n\t\t\tarr.push(0xf0|c>>>18, 0x80|c>>>12&0xbf, 0x80|c>>>6&0xbf, 0x80|c&0xbf);\n\t\t}\n\t}\n\treturn arr;\n};\nUtf.encodeUTF16 = function(str, endian) {\n\tvar codes = Utf.charCodes(str), i, len, arr, c;\n\tarr = endian ? endian === 'LE' ? [0xff,0xfe] : [0xfe,0xff] : []; //BOM\n\tfor(i=0,len=codes.length; c=codes[i],i<len; i++) {\n\t\tif (endian === 'LE') {\n\t\t\tarr.push(c & 0xff, c >>> 8 & 0xff);\n\t\t} else {\n\t\t\tarr.push(c >>> 8 & 0xff, c & 0xff);\n\t\t}\n\t}\n\treturn arr;\n};\n```\n\n\u307e\u305fUTF-8\u3078\u306e\u5909\u63db\u306b\u30b9\u30ab\u30e9\u30fc\u5024\u3092\u6c42\u3081\u305a\u3001\u6587\u5b57\u30b3\u30fc\u30c9\u304b\u3089\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3092\u8003\u616e\u3057\u3066\u3082\u826f\u3044\n\n```js\nUtf.encodeUTF8 = function(str) {\n\tvar codes = Utf.charCodes(str), i, len, arr, c;\n\tfor(i=0,len=codes.length,arr=[]; c=codes[i],i<len; i++) {\n\t\tif (c <= 0x7f) {arr.push(c);} //1byte\n\t\telse if (c <= 0x7ff) {arr.push(0xc0|c>>>6, 0x80|c&0xbf);} //2byte\n\t\telse if (c <= 0xdbff && c >= 0xd800) { //4byte\n\t\t\t//utf16  110110wwwwxxxxxx  110111xxxxxxxxxx\n\t\t\t//utf8   11110uuu  10uuxxxx  10xxxxxx  10xxxxxx (uuuuu = wwww+1)\n\t\t\tarr.push(\n\t\t\t\t0xf0 | (c=(c & 1023) + 64) >>> 8,\n\t\t\t\t0x80 | c >>> 2 & 63,\n\t\t\t\t0x80 | (c & 3) << 4 | (c=codes[++i] & 1023) >>> 6,\n\t\t\t\t0x80 | c & 63\n\t\t\t);\n\t\t} else if (c <= 0xffff) { //3byte\n\t\t\tarr.push(0xe0|c>>>12, 0x80|c>>>6&0xbf, 0x80|c&0xbf);\n\t\t}\n\t}\n\treturn arr;\n};\n```\n\nUTF-8/UTF-16\u30d0\u30a4\u30c8\u5217\u304b\u3089\u6587\u5b57\u5217\u3078\u306e\u5909\u63db\n\n\u4e0a\u8a18\u3068\u9006\u306e\u51e6\u7406\u3092\u884c\u3048\u3070\u3088\u3044\n\n```js\nUtf.decodeUTF8 = function(arr) {\n\tvar i, len, c, str, char = String.fromCharCode;\n\tfor(i=0,len=arr.length,str=\"\"; c=arr[i],i<len; i++) {\n\t\tif (c <= 0x7f) {str += char(c);}\n\t\telse if (c <= 0xdf && c >= 0xc2) {\n\t\t\tstr += char((c&31)<<6 | arr[++i]&63);\n\t\t} else if (c <= 0xef && c >= 0xe0) {\n\t\t\tstr += char((c&15)<<12 | (arr[++i]&63)<<6 | arr[++i]&63);\n\t\t} else if (c <= 0xf7 && c >= 0xf0) {\n\t\t\t//utf8   11110uuu  10uuxxxx  10xxxxxx  10xxxxxx\n\t\t\t//utf16  110110wwwwxxxxxx  110111xxxxxxxxxx (wwww = uuuuu-1)\n\t\t\tstr += char(\n\t\t\t\t0xd800 | ((c&7)<<8 | (arr[++i]&63)<<2 | arr[++i]>>>4&3) - 64,\n\t\t\t\t0xdc00 | (arr[i++]&15)<<6 | arr[i]&63\n\t\t\t);\n\t\t}\n\t\telse {str += char(0xfffd);}\n\t}\n\treturn str;\n};\nUtf.decodeUTF16 = function(arr) {\n\tvar endian = 'BE', i = 0, len, str;\n\tif (arr[0]*arr[1] === 0xff*0xfe) { // remove BOM\n\t\tendian = arr[0] === 0xff ? 'LE' : 'BE';\n\t\ti = 2;\n\t}\n\tfor(len=arr.length,str=\"\"; i<len; i+=2) {\n\t\tstr += String.fromCharCode(endian === 'LE' ? (arr[i+1]<<8|arr[i]) : (arr[i]<<8|arr[i+1]));\n\t}\n\treturn str;\n};\n```\n\n", "tags": ["JavaScript", "unicode"]}