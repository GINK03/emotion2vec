{"tags": ["Groovy2.1.7", "processing2.0.3"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\u30dc\u30fc\u30eb\u3092\u753b\u9762\u7aef\u306e\u30d0\u30fc\u3067\u6253\u3061\u8fd4\u3059\u30b2\u30fc\u30e0\u3002\n\u52d5\u753b\u5185\u3067\u9014\u4e2d\u307e\u3067\u3057\u304b\u4f5c\u3063\u3066\u306a\u3044\u306e\u3067\u540c\u3058\u6240\u307e\u3067\u3057\u304b\u4f5c\u3063\u3066\u306a\u3044\u3002\n\u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u306e\u90e8\u5206\u304c\u52d5\u753b\u3068\u9055\u3063\u3066\u30ad\u30fc\u3092\u62bc\u3057\u3066\u308b\u9593\u3068\u30ad\u30fc\u3092\u8a71\u3057\u305f\u6642\u306e\uff12\u3064\u306b\u5206\u3051\u3066\u5b9f\u88c5\u3057\u305f\uff08\u305b\u3056\u308b\u3092\u5f97\u306a\u304b\u3063\u305f\uff09\n\u52d5\u753b\u30ea\u30b9\u30c8\uff1aLWJGL\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\n\u52d5\u753b\u306f\u30b3\u30b3\n\nDisplayTest.groovy\npackage episode009\n\nimport groovy.swing.SwingBuilder\nimport processing.core.PApplet\n\nimport javax.swing.*\n\nclass DisplayTest extends PApplet {\n\n    def lastFrame\n\n    def bat\n    def ball\n\n    def void setup() {\n        setUpDisplay()\n        setUpEntities()\n        setUpTimer()\n    }\n\n    def void draw() {\n        renderEntities()\n        logic(delta)\n    }\n\n    def setUpDisplay() {\n        frameRate(60)\n    }\n\n    def setUpEntities() {\n        bat = new Bat(this, 10, height / 2 - 80 / 2, 10, 80)\n        ball = new Ball(this, width / 2 - 10 / 2, height / 2 - 10 / 2, 10)\n        ball.dx = -0.1\n    }\n\n    def setUpTimer() {\n        lastFrame = System.currentTimeMillis()\n    }\n\n    def renderEntities() {\n        background(0, 0, 0)\n        ball.draw()\n        bat.draw()\n    }\n\n    def logic(delta) {\n        ball.update(delta)\n        bat.update(delta)\n        if (ball.x <= bat.x + bat.width\n                && ball.x >= bat.x\n                && ball.y >= bat.y\n                && ball.y <= bat.y + bat.height) {\n            ball.dx = 0.3\n        }\n    }\n\n    def void keyPressed() {\n        switch (keyCode) {\n            case UP:\n                bat.dy = -0.2\n                break\n            case DOWN:\n                bat.dy = 0.2\n                break\n        }\n    }\n\n    def void keyReleased() {\n        bat.dy = 0\n    }\n\n    def getDelta() {\n        def currentTime = System.currentTimeMillis()\n        def delta = currentTime - lastFrame\n        lastFrame = currentTime\n        delta\n    }\n\n    def static void main(args) {\n        def display = new DisplayTest()\n        new SwingBuilder().frame(\n                title: 'Episode 9',\n                defaultCloseOperation: JFrame.EXIT_ON_CLOSE,\n                size: [640, 480], show: true) {\n            widget(display)\n        }\n        display.init()\n    }\n}\n\nclass Entity {\n    def x, y, width, height\n    def display\n\n    def Entity(display, x, y, width, height) {\n        this.display = display\n        this.x = x\n        this.y = y\n        this.width = width\n        this.height = height\n    }\n\n    def setLocation(x, y) {\n        this.x = x\n        this.y = y\n    }\n\n    def intersects(other) {\n        x < other.x && y < other.y && x + width > other.x && y + height > other.y\n    }\n}\n\nclass MovableEntity extends Entity {\n    def dx, dy\n\n    def MovableEntity(display, x, y, width, height) {\n        super(display, x, y, width, height)\n        this.dx = 0\n        this.dy = 0\n    }\n\n    def update(delta) {\n        x += delta * dx\n        y += delta * dy\n    }\n}\n\nclass Bat {\n    @Delegate MovableEntity entity\n\n    def Bat(display, x, y, width, height) {\n        this.entity = new MovableEntity(display, x, y, width, height)\n    }\n\n    def draw() {\n        def posX = x\n        def posY = y\n        def boxWidth = width\n        def boxHeight = height\n        display.with {\n            noStroke()\n            fill(255, 255, 255)\n            rect(posX, posY, boxWidth, boxHeight)\n        }\n    }\n}\n\nclass Ball {\n    def weight\n    @Delegate MovableEntity entity\n\n    def Ball(display, x, y, weight) {\n        this.entity = new MovableEntity(display, x, y, weight, weight)\n        this.weight = weight\n    }\n\n    def draw() {\n        def posX = x\n        def posY = y\n        display.with {\n            noSmooth()\n            stroke(255, 255, 255)\n            strokeWeight(weight)\n            point(posX, posY)\n        }\n    }\n}\n\n\n\n\u30dc\u30fc\u30eb\u3092\u753b\u9762\u7aef\u306e\u30d0\u30fc\u3067\u6253\u3061\u8fd4\u3059\u30b2\u30fc\u30e0\u3002\n\u52d5\u753b\u5185\u3067\u9014\u4e2d\u307e\u3067\u3057\u304b\u4f5c\u3063\u3066\u306a\u3044\u306e\u3067\u540c\u3058\u6240\u307e\u3067\u3057\u304b\u4f5c\u3063\u3066\u306a\u3044\u3002\n\n\u30ad\u30fc\u30dc\u30fc\u30c9\u5165\u529b\u306e\u90e8\u5206\u304c\u52d5\u753b\u3068\u9055\u3063\u3066\u30ad\u30fc\u3092\u62bc\u3057\u3066\u308b\u9593\u3068\u30ad\u30fc\u3092\u8a71\u3057\u305f\u6642\u306e\uff12\u3064\u306b\u5206\u3051\u3066\u5b9f\u88c5\u3057\u305f\uff08\u305b\u3056\u308b\u3092\u5f97\u306a\u304b\u3063\u305f\uff09\n\n\u52d5\u753b\u30ea\u30b9\u30c8\uff1a[LWJGL\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://www.youtube.com/playlist?list=PL19F2453814E0E315)\n\u52d5\u753b\u306f[\u30b3\u30b3](http://www.youtube.com/watch?v=YIIqOEKXWLU)\n\n```groovy:DisplayTest.groovy\npackage episode009\n\nimport groovy.swing.SwingBuilder\nimport processing.core.PApplet\n\nimport javax.swing.*\n\nclass DisplayTest extends PApplet {\n\n    def lastFrame\n\n    def bat\n    def ball\n\n    def void setup() {\n        setUpDisplay()\n        setUpEntities()\n        setUpTimer()\n    }\n\n    def void draw() {\n        renderEntities()\n        logic(delta)\n    }\n\n    def setUpDisplay() {\n        frameRate(60)\n    }\n\n    def setUpEntities() {\n        bat = new Bat(this, 10, height / 2 - 80 / 2, 10, 80)\n        ball = new Ball(this, width / 2 - 10 / 2, height / 2 - 10 / 2, 10)\n        ball.dx = -0.1\n    }\n\n    def setUpTimer() {\n        lastFrame = System.currentTimeMillis()\n    }\n\n    def renderEntities() {\n        background(0, 0, 0)\n        ball.draw()\n        bat.draw()\n    }\n\n    def logic(delta) {\n        ball.update(delta)\n        bat.update(delta)\n        if (ball.x <= bat.x + bat.width\n                && ball.x >= bat.x\n                && ball.y >= bat.y\n                && ball.y <= bat.y + bat.height) {\n            ball.dx = 0.3\n        }\n    }\n\n    def void keyPressed() {\n        switch (keyCode) {\n            case UP:\n                bat.dy = -0.2\n                break\n            case DOWN:\n                bat.dy = 0.2\n                break\n        }\n    }\n\n    def void keyReleased() {\n        bat.dy = 0\n    }\n\n    def getDelta() {\n        def currentTime = System.currentTimeMillis()\n        def delta = currentTime - lastFrame\n        lastFrame = currentTime\n        delta\n    }\n\n    def static void main(args) {\n        def display = new DisplayTest()\n        new SwingBuilder().frame(\n                title: 'Episode 9',\n                defaultCloseOperation: JFrame.EXIT_ON_CLOSE,\n                size: [640, 480], show: true) {\n            widget(display)\n        }\n        display.init()\n    }\n}\n\nclass Entity {\n    def x, y, width, height\n    def display\n\n    def Entity(display, x, y, width, height) {\n        this.display = display\n        this.x = x\n        this.y = y\n        this.width = width\n        this.height = height\n    }\n\n    def setLocation(x, y) {\n        this.x = x\n        this.y = y\n    }\n\n    def intersects(other) {\n        x < other.x && y < other.y && x + width > other.x && y + height > other.y\n    }\n}\n\nclass MovableEntity extends Entity {\n    def dx, dy\n\n    def MovableEntity(display, x, y, width, height) {\n        super(display, x, y, width, height)\n        this.dx = 0\n        this.dy = 0\n    }\n\n    def update(delta) {\n        x += delta * dx\n        y += delta * dy\n    }\n}\n\nclass Bat {\n    @Delegate MovableEntity entity\n\n    def Bat(display, x, y, width, height) {\n        this.entity = new MovableEntity(display, x, y, width, height)\n    }\n\n    def draw() {\n        def posX = x\n        def posY = y\n        def boxWidth = width\n        def boxHeight = height\n        display.with {\n            noStroke()\n            fill(255, 255, 255)\n            rect(posX, posY, boxWidth, boxHeight)\n        }\n    }\n}\n\nclass Ball {\n    def weight\n    @Delegate MovableEntity entity\n\n    def Ball(display, x, y, weight) {\n        this.entity = new MovableEntity(display, x, y, weight, weight)\n        this.weight = weight\n    }\n\n    def draw() {\n        def posX = x\n        def posY = y\n        display.with {\n            noSmooth()\n            stroke(255, 255, 255)\n            strokeWeight(weight)\n            point(posX, posY)\n        }\n    }\n}\n```\n\n![grocessingGL009.png](https://qiita-image-store.s3.amazonaws.com/0/17179/167c30d7-757f-4d6b-4abf-48216baeabba.png)\n"}