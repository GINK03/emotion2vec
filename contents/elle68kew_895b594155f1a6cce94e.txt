{"context": "\n\n\u306f\u3058\u3081\u306b\n\u72ec\u5b66\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5b66\u3073\u59cb\u3081\u3066\u7d041\u5e74\u3001\u696d\u52d9\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u66f8\u304d\u59cb\u3081\u30662\u30f6\u6708\u3001Swift\u59cb\u3081\u3066\uff11\u30f6\u6708\u306eSwifter\u3067\u3059\u3002\nXcode\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u59cb\u3081\u305f\u6642\u3001\u300cCoreData\u3068\u304b\u4f7f\u308f\u306a\u3044\u3088\u306a\u3041\u300d\u3068\u601d\u3044\u3064\u3064\u3001\u3084\u3063\u3071\u308a\u4f7f\u3044\u305f\u3044\u306a\u3093\u3066\u6642\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u50d5\u306f\u307e\u307e\u3042\u308a\u307e\u3059\u3002\u5f8c\u304b\u3089\u3060\u3068\u8272\u3005\u9762\u5012\u306a\u306e\u3067\u30e1\u30e2\u7684\u306b\u8a18\u4e8b\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u5bfe\u8c61\u3068\u306a\u308b\u4eba\n\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0/Swift\u521d\u5fc3\u8005\n\u30fb\u300cUse CoreData\u300d\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u306a\u304b\u3063\u305f\u3051\u3069\u3084\u3063\u3071\u308a\u4f7f\u3044\u305f\u3044\u4eba\n\u30fbSwift\u3067CoreData\u3092\u6271\u3044\u305f\u3044\u4eba\n\n\u74b0\u5883\nxcode 7.2.1\nSwift 2.1.1\n\n\u3084\u308b\u3053\u3068\n\u30fb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\u30fbData Model\u3068\u751f\u6210\n\u30fbEntity\u306e\u751f\u6210\n\u30fbCoreData\u95a2\u9023\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u8a18\n\u30fb\u30c7\u30fc\u30bf\u64cd\u4f5c\u7528\u306e\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\n\u30fbCoreData\u306b\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3068\u691c\u7d22\n1.\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nXcode\u306e[File] -> [New] -> [Project]\u304b\u3089\u65b0\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\nSingle View Application\u3092\u9078\u629e\u3057\u3001\n\nCoreData\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u306a\u3044\u4f53\u306a\u306e\u3067\u3053\u3053\u3067\u306f\u9078\u629e\u305b\u305a\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\u8a00\u8a9e\u306fSwift\u3092\u9078\u629e\u3002Organization Name\u3068 Organization Identifier\u306f\u305d\u306e\u307e\u307e\u3067\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n\n2.Data Model\u306e\u751f\u6210\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u76f4\u4e0a\u3067\u53f3\u30af\u30ea\u30c3\u30af -> \u300cNew File\u300d -> \u300cCoreData\u300d -> \u300cData Model\u300d\u3068\u9078\u629e\u3057\u3066\u3044\u304d\u3001Data Model\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u540d\u306fCoreData.xcdatamodeld\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u7279\u306b\u610f\u5473\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u306e\u3061\u306e\u3061\u4f7f\u3046\u306e\u3067\u899a\u3048\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n3.Entity\u306e\u751f\u6210\n\u6b21\u306b\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3057\u305f\u3044Entity\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306fname\u3068age\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u6301\u3064Person\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u308a\u307e\u3059\u3002\u5148\u307b\u3069\u751f\u6210\u3057\u305fCoreData.xcdatamodeld\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u7528\u610f\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u3053\u3093\u306a\u611f\u3058\u3002\u6050\u308d\u3057\u304f\u5358\u7d14\u306a\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3067\u3059\u306d\u3002\n\n\u3053\u308c\u304c\u3067\u304d\u305f\u3089\u3001\u518d\u3073CoreData.xcdatamodeld\u3092\u30af\u30ea\u30c3\u30af -> \u300cEditor\u300d -> \u300cCreate NSManagedObjectSubclass...\u300d\u3092\u9078\u629e\u3002\n\n\u300cNext\u300d -> \u300cNext\u300d\u3068\u9078\u629e\u3002Group\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u4fdd\u5b58\u5148\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u306b\u3057\u307e\u3059\u3002\n\n\u81ea\u52d5\u7684\u306bPerson+CoreDataProperties.swift\u3068Person.swift\u304c\u751f\u6210\u3055\u308c\u308c\u3070\u6e96\u5099OK\u3067\u3059\u3002\n\n4.CoreData\u95a2\u9023\u306e\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\n\u3055\u3066\u3055\u3066\u3001\u300cUse CoreData\u300d\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u3066\u3044\u308c\u3070\u8a18\u8ff0\u3055\u308c\u3066\u3044\u305f\u306f\u305a\u306e\u30b3\u30fc\u30c9\u3092AppDelegate\u306b\u8a18\u8ff0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u307e\u305f\u3001CoreData\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092import\u3057\u307e\u3059\u3002\n\nAppDelegate.swift\nimport UIKit\nimport CoreData\n\n ~(\u7565)~\n    func applicationWillTerminate(application: UIApplication) {\n        // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.\n    }\n\n// MARK: - Core Data stack\n\n    lazy var applicationDocumentsDirectory: NSURL = {\n        // The directory the application uses to store the Core Data store file. This code uses a directory named \"jp.ne.softbank.elle68.test\" in the application's documents Application Support directory.\n        let urls = NSFileManager.defaultManager().URLsForDirectory(.DocumentDirectory, inDomains: .UserDomainMask)\n        return urls[urls.count-1]\n    }()\n\n    lazy var managedObjectModel: NSManagedObjectModel = {\n        // The managed object model for the application. This property is not optional. It is a fatal error for the application not to be able to find and load its model.\n        let modelURL = NSBundle.mainBundle().URLForResource(\"CoreData\", withExtension: \"momd\")!\n        return NSManagedObjectModel(contentsOfURL: modelURL)!\n    }()\n\n    lazy var persistentStoreCoordinator: NSPersistentStoreCoordinator = {\n        // The persistent store coordinator for the application. This implementation creates and returns a coordinator, having added the store for the application to it. This property is optional since there are legitimate error conditions that could cause the creation of the store to fail.\n        // Create the coordinator and store\n        let coordinator = NSPersistentStoreCoordinator(managedObjectModel: self.managedObjectModel)\n        let url = self.applicationDocumentsDirectory.URLByAppendingPathComponent(\"CoreData.sqlite\")\n        var failureReason = \"There was an error creating or loading the application's saved data.\"\n        do {\n            try coordinator.addPersistentStoreWithType(NSSQLiteStoreType, configuration: nil, URL: url, options: nil)\n        } catch {\n            // Report any error we got.\n            var dict = [String: AnyObject]()\n            dict[NSLocalizedDescriptionKey] = \"Failed to initialize the application's saved data\"\n            dict[NSLocalizedFailureReasonErrorKey] = failureReason\n\n            dict[NSUnderlyingErrorKey] = error as NSError\n            let wrappedError = NSError(domain: \"YOUR_ERROR_DOMAIN\", code: 9999, userInfo: dict)\n            // Replace this with code to handle the error appropriately.\n            // abort() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.\n            NSLog(\"Unresolved error \\(wrappedError), \\(wrappedError.userInfo)\")\n            abort()\n        }\n\n        return coordinator\n    }()\n\n    lazy var managedObjectContext: NSManagedObjectContext = {\n        // Returns the managed object context for the application (which is already bound to the persistent store coordinator for the application.) This property is optional since there are legitimate error conditions that could cause the creation of the context to fail.\n        let coordinator = self.persistentStoreCoordinator\n        var managedObjectContext = NSManagedObjectContext(concurrencyType: .MainQueueConcurrencyType)\n        managedObjectContext.persistentStoreCoordinator = coordinator\n        return managedObjectContext\n    }()\n\n    // MARK: - Core Data Saving support\n\n    func saveContext () {\n        if managedObjectContext.hasChanges {\n            do {\n                try managedObjectContext.save()\n            } catch {\n                // Replace this implementation with code to handle the error appropriately.\n                // abort() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.\n                let nserror = error as NSError\n                NSLog(\"Unresolved error \\(nserror), \\(nserror.userInfo)\")\n                abort()\n            }\n        }\n    }\n\n\n\n\uff11\u70b9\u6c17\u3092\u3064\u3051\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u306e\u306f\u7d0455\u884c\u76ee\u306e\"CoreData\"\u306e\u90e8\u5206\u3002\n\nAppDelegate.swift\n\nlet modelURL = NSBundle.mainBundle().URLForResource(\"CoreData\", withExtension: \"momd\")!\n\n\n\n\u3053\u3053\u306f\u5148\u307b\u3069\u751f\u6210\u3057\u305fCoreData.xcdatamodeld\u306e.\u3088\u308a\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8a18\u8ff0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u901a\u308a\u306a\u3089Model.xcdatamodeld\u3068\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3046\u306e\u3067\n\nAppDelegate.swift\n\nlet modelURL = NSBundle.mainBundle().URLForResource(\"Model\", withExtension: \"momd\")!\n\n\n\n\u3067\u3059\u306d\u3002\n\n5.\u30c7\u30fc\u30bf\u64cd\u4f5c\u7528\u306e\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\n\u3053\u308c\u307e\u3067\u3067\u304a\u304a\u3088\u305dCoreData\u304c\u52d5\u304b\u305b\u308b\u306e\u3067\u3059\u304c\u3001CRUD\u304c\u3084\u308a\u3065\u3089\u3044\u3067\u3059\u3002\u4eca\u56de\u306fCreate\u3068Read\u306e\u90e8\u5206\u3092\u30e1\u30bd\u30c3\u30c9\u5316\u3057\u307e\u3059\u3002\n\nAppDelegate.swift\n\n// MARK: -CoreDataMethod Read\u7528\n    func all(entityName:String) -> [Person]{\n        return self.fetch(entityName, limit: 0)\n    }\n    func all(entityName:String, sortKey:String?) -> [Person]{\n        return self.fetch(entityName, sortKey: sortKey, limit: 0)\n    }\n\n    func fetch(entityName:String, limit:Int) -> [Person] {\n        return self.fetch(entityName, sortKey: nil, limit: limit)\n    }\n\n    func fetch(entityName:String!, sortKey:String?, limit:Int!) -> [Person] {\n        let context: NSManagedObjectContext! = self.managedObjectContext\n        let request: NSFetchRequest! = NSFetchRequest()\n        let entity: NSEntityDescription = NSEntityDescription.entityForName(entityName, inManagedObjectContext: context)!\n        request.entity = entity\n        if let sortKey = sortKey {\n            request.sortDescriptors = [NSSortDescriptor(key: sortKey, ascending: true)]\n        }\n        request.fetchLimit = limit\n        let failureReason = \"There was an error fetching CoreDataResult.\"\n        var mutableFetchResult = [AnyObject]()\n        do {\n            mutableFetchResult = try context.executeFetchRequest(request)\n\n        } catch {\n            // Report any error we got.\n            var dict = [String: AnyObject]()\n            dict[NSLocalizedDescriptionKey] = \"Failed to initialize the application's saved data\"\n            dict[NSLocalizedFailureReasonErrorKey] = failureReason\n\n            dict[NSUnderlyingErrorKey] = error as NSError\n            let wrappedError = NSError(domain: \"YOUR_ERROR_DOMAIN\", code: 9999, userInfo: dict)\n            // Replace this with code to handle the error appropriately.\n            // abort() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.\n            NSLog(\"Unresolved error \\(wrappedError), \\(wrappedError.userInfo)\")\n            abort()\n        }\n\n        return mutableFetchResult as! [Person]\n    }\n\n// MARK: - CoreDataMethod Insert\u7528\n    func entityForInsert(entityName:String!) -> NSManagedObject?{\n            let context: NSManagedObjectContext = self.managedObjectContext\n            return NSEntityDescription.insertNewObjectForEntityForName(entityName, inManagedObjectContext: context)\n    }\n\n// MARK: - Core Data Saving support\n    func saveContext () {\n        if managedObjectContext.hasChanges {\n            do {\n                try managedObjectContext.save()\n            } catch {\n                // Replace this implementation with code to handle the error appropriately.\n                // abort() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.\n                let nserror = error as NSError\n                NSLog(\"Unresolved error \\(nserror), \\(nserror.userInfo)\")\n                abort()\n            }\n        }\n    }\n\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\u3053\u3044\u3064\u306f\u5f15\u6570\u306bEntity\u3092\u6e21\u3057\u3066\u3042\u3052\u308b\u3053\u3068\u3067\u3001\u767b\u9332\u3055\u308c\u3066\u3044\u308bPerson\u3092\u5168\u3066\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\nAppDelegate.swift\n    func all(entityName:String) -> [Person]{\n        return self.fetch(entityName, limit: 0)\n    }\n\n\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306fPerson\u3092\u5168\u3066\u8fd4\u3057\u3064\u3064\u3001\u30ad\u30fc\u306b\u5165\u308c\u305f\u3082\u306e\u3067\u30bd\u30fc\u30c8\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\nAppDelegate.swift\n    func all(entityName:String, sortKey:String?) -> [Person]{\n        return self.fetch(entityName, sortKey: sortKey, limit: 0)\n    }\n\n\n\u4f7f\u3046\u306e\u306f\u3060\u3044\u305f\u3044\u3053\u306e\uff12\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3057\u3087\u3046\u304b\u3002\nentityForInsert()\u3068saveContext()\u306f\u5b9f\u969b\u306b\u4f7f\u3046\u3068\u3053\u308d\u3067\u8aac\u660e\u3057\u307e\u3059\u3002\n6.CoreData\u3078\u306e\u767b\u9332\u3068\u30c7\u30fc\u30bf\u306e\u691c\u7d22\n\u3067\u306fViewController\u306eViewDidLoad\u5185\u3067\u30c7\u30fc\u30bf\u306e\u767b\u9332\u3068\u691c\u7d22\u3092\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nViewController.swift\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        var appDelegate = UIApplication.sharedApplication().delegate as! AppDelegate\n\n        let person1 = appDelegate.entityForInsert(\"Person\") as! Person\n        person1.name = \"\u30c6\u30b9\u30c8 \u592a\u90ce\"\n        person1.age = \"28\u6b73\"\n        appDelegate.saveContext()\n\n        let person2 = appDelegate.entityForInsert(\"Person\") as! Person\n        person2.name = \"\u30c6\u30b9\u30c8 \u82b1\u5b50\"\n        person2.age = \"18\u6b73\"\n        appDelegate.saveContext()   \n    }\n\n\n\u9806\u306b\u307f\u3066\u3044\u304d\u307e\u3059\u3002\nvar appDelegate = UIApplication.sharedApplication().delegate as! AppDelegate\n\u3053\u308c\u306fCoreData\u3092\u4f7f\u3046\u6642\u306e\u304a\u307e\u3058\u306a\u3044\u3060\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\nViewController.swift\n\n        let person1 = appDelegate.entityForInsert(\"Person\") as! Person\n        person1.name = \"\u30c6\u30b9\u30c8 \u592a\u90ce\"\n        person1.age = \"28\u6b73\"\n        appDelegate.saveContext()\n\n\nlet person1\u306e\u884c\u3067CoreData\u306b\u8ffd\u52a0\u3057\u305f\u3044Person\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002entityForInsert()\u306f\u8ffd\u52a0\u3057\u305f\u3044\u30af\u30e9\u30b9\u540d\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\u4eca\u56de\u306fPerson\u3002\n\u6b21\u306bperson1\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u6301\u3064name\u3068age\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5024\u3092\u4ee3\u5165\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u3053\u308c\u3067\u30c6\u30b9\u30c8 \u592a\u90ce\u3055\u3093(28\u6b73)\u304c\u51fa\u6765\u4e0a\u304c\u308a\u307e\u3057\u305f\u3002\n\u6700\u5f8c\u306bappDelegate.saveContext()\u3067\u30bb\u30fc\u30d6\u3057\u307e\u3059\u3002\u3053\u308c\u3092\u5fd8\u308c\u308b\u3068CoreData\u306b\u767b\u9332\u3055\u308c\u307e\u305b\u3093\u3002\n\u30c6\u30b9\u30c8 \u82b1\u5b50\u3055\u3093\u3082\u3084\u308a\u65b9\u306f\u4e00\u7dd2\u3067\u3059\u3002\n\u30fb\u8ffd\u52a0\u3057\u305f\u3044\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092entityForInsert()\u30e1\u30bd\u30c3\u30c9\u3067\u751f\u6210\n\u30fb\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5024\u3092\u4ee3\u5165\n\u30fbsaveContext()\u3067\u30c7\u30fc\u30bf\u3092\u30bb\u30fc\u30d6\u3059\u308b\u3000\u306e\u6d41\u308c\u3067\u3059\u306d\u3002\n\u3053\u308c\u3067\u30c7\u30fc\u30bf\u306e\u767b\u9332\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u6b21\u306b\u30c7\u30fc\u30bf\u306e\u691c\u7d22\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\nViewController.swift\n    person2.name = \"\u30c6\u30b9\u30c8 \u82b1\u5b50\"\n    person2.age = \"18\u6b73\"\n    appDelegate.saveContext()\n\n    var result = appDelegate.all(\"Person\")\n\n    for person in result {\n        print(\"person.name  \\(person.name!)\")\n        print(\"person.age \\(person.age!)\")\n        print(\"-----------------\")\n    }\n\n    print(\"==================================\")\n\n    result = appDelegate.all(\"Person\", sortKey: \"age\")\n    for person in result {\n        print(\"person.name  \\(person.name!)\")\n        print(\"person.age \\(person.age!)\")\n        print(\"-----------------\")\n    }\n\n\n\u3053\u308c\u3092\u8d77\u52d5\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u8868\u793a\u3055\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nappDelegate.all(\"Person\")\u304b\u3089\u8fd4\u3063\u3066\u304d\u305f\u914d\u5217\u3092\u5909\u6570result\u306b\u4ee3\u5165\u3002\u305d\u308c\u3092for\u6587\u3067\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\nappDelegate.all(\"Person\", sortKey: \"age\")\u3067\u306f\u30bd\u30fc\u30c8\u306e\u30ad\u30fc\u306bage\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u7d50\u679c\u3001age\u3092\u57fa\u6e96\u306b\u6607\u9806\u306b\u4e26\u3073\u66ff\u3048\u3089\u308c\u3001\u82b1\u5b50\u3055\u3093\u304c\u5148\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u964d\u9806\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u3001AppDelegate\u306e\u7d0464\u884c\u76ee\u3001\u4e0b\u8a18\u306etrue\u3092false\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\u3053\u306e\u6307\u5b9a\u3092\u5f15\u6570\u306b\u3057\u3066\u3001\u691c\u7d22\u6642\u306b\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u306e\u3082\u3044\u3044\u3067\u3059\u306d\u3002\n\nAppDelegate.swift\n    request.sortDescriptors = [NSSortDescriptor(key: sortKey, ascending: false)]\n\n\n\n\n\u6700\u5f8c\u306b\n\u6587\u7ae0\u306b\u3059\u308b\u3068\u3059\u3054\u304f\u9577\u3044\u3067\u3059\u304cCoreData\u306e\u304a\u304a\u3088\u305d\u306e\u6271\u3044\u3092\u30e1\u30e2\u308a\u307e\u3057\u305f\u3002 \u3082\u3063\u3068\u3088\u3044\u3084\u308a\u65b9\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3072\u3068\u307e\u305a\u306f\u3053\u3053\u307e\u3067\u306b\u3002(\u3068\u3044\u3046\u3088\u308a\u5b9f\u529b\u4e0d\u8db3\u3067\u3053\u308c\u4ee5\u4e0a\u304c\u5206\u304b\u3089\u306a\u3044)\n## \u306f\u3058\u3081\u306b\n\u72ec\u5b66\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5b66\u3073\u59cb\u3081\u3066\u7d041\u5e74\u3001\u696d\u52d9\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u66f8\u304d\u59cb\u3081\u30662\u30f6\u6708\u3001Swift\u59cb\u3081\u3066\uff11\u30f6\u6708\u306eSwifter\u3067\u3059\u3002\nXcode\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u59cb\u3081\u305f\u6642\u3001\u300cCoreData\u3068\u304b\u4f7f\u308f\u306a\u3044\u3088\u306a\u3041\u300d\u3068\u601d\u3044\u3064\u3064\u3001\u3084\u3063\u3071\u308a\u4f7f\u3044\u305f\u3044\u306a\u3093\u3066\u6642\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u50d5\u306f\u307e\u307e\u3042\u308a\u307e\u3059\u3002\u5f8c\u304b\u3089\u3060\u3068\u8272\u3005\u9762\u5012\u306a\u306e\u3067\u30e1\u30e2\u7684\u306b\u8a18\u4e8b\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u5bfe\u8c61\u3068\u306a\u308b\u4eba\n\u30fb\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0/Swift\u521d\u5fc3\u8005\n\u30fb\u300cUse CoreData\u300d\u30c1\u30a7\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u306a\u304b\u3063\u305f\u3051\u3069\u3084\u3063\u3071\u308a\u4f7f\u3044\u305f\u3044\u4eba\n\u30fbSwift\u3067CoreData\u3092\u6271\u3044\u305f\u3044\u4eba\n\n## \u74b0\u5883\nxcode 7.2.1\nSwift 2.1.1\n\n## \u3084\u308b\u3053\u3068\n\u30fb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\u30fbData Model\u3068\u751f\u6210\n\u30fbEntity\u306e\u751f\u6210\n\u30fbCoreData\u95a2\u9023\u306e\u30b3\u30fc\u30c9\u3092\u8ffd\u8a18\n\u30fb\u30c7\u30fc\u30bf\u64cd\u4f5c\u7528\u306e\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\n\u30fbCoreData\u306b\u30c7\u30fc\u30bf\u3092\u767b\u9332\u3068\u691c\u7d22\n\n1.\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nXcode\u306e[File] -> [New] -> [Project]\u304b\u3089\u65b0\u3057\u3044\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\n`Single View Application`\u3092\u9078\u629e\u3057\u3001\n<img width=\"732\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-21 22.13.46.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/115590/96a11b01-572a-7ef2-b378-981a09f028b8.png\">\n\n\nCoreData\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u306a\u3044\u4f53\u306a\u306e\u3067\u3053\u3053\u3067\u306f\u9078\u629e\u305b\u305a\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u59cb\u3057\u307e\u3059\u3002\u8a00\u8a9e\u306fSwift\u3092\u9078\u629e\u3002Organization Name\u3068 Organization Identifier\u306f\u305d\u306e\u307e\u307e\u3067\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n<img width=\"733\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-21 22.14.42.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/115590/a7997382-7aa6-58d2-f019-71cd7309f9c3.png\">\n***\n\n2.Data Model\u306e\u751f\u6210\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u76f4\u4e0a\u3067\u53f3\u30af\u30ea\u30c3\u30af -> \u300cNew File\u300d -> \u300cCoreData\u300d -> \u300cData Model\u300d\u3068\u9078\u629e\u3057\u3066\u3044\u304d\u3001Data Model\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u540d\u306fCoreData.xcdatamodeld\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u7279\u306b\u610f\u5473\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u306e\u3061\u306e\u3061\u4f7f\u3046\u306e\u3067\u899a\u3048\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n<img width=\"714\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-21 22.32.29.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/115590/d285ded6-95f6-dad8-2829-adb2b5aa660f.png\">\n\n***\n\n3.Entity\u306e\u751f\u6210\n\u6b21\u306b\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3057\u305f\u3044Entity\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306fname\u3068age\u3092\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u6301\u3064Person\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4f5c\u308a\u307e\u3059\u3002\u5148\u307b\u3069\u751f\u6210\u3057\u305fCoreData.xcdatamodeld\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u7528\u610f\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u3053\u3093\u306a\u611f\u3058\u3002\u6050\u308d\u3057\u304f\u5358\u7d14\u306a\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3067\u3059\u306d\u3002\n<img width=\"1280\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-21 22.37.16.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/115590/d8917b6d-4fc2-ddbd-e7c6-280e69a8b1df.png\">\n\n\u3053\u308c\u304c\u3067\u304d\u305f\u3089\u3001\u518d\u3073CoreData.xcdatamodeld\u3092\u30af\u30ea\u30c3\u30af -> \u300cEditor\u300d -> \u300cCreate NSManagedObjectSubclass...\u300d\u3092\u9078\u629e\u3002\n<img width=\"1280\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-21 23.00.26.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/115590/42238a09-03af-1e24-447a-722d43d10013.png\">\n\n\n\u300cNext\u300d -> \u300cNext\u300d\u3068\u9078\u629e\u3002Group\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u4fdd\u5b58\u5148\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u306b\u3057\u307e\u3059\u3002\n<img width=\"715\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-21 23.02.38.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/115590/9c712044-b016-07b4-19f8-2abc6861d044.png\">\n\u81ea\u52d5\u7684\u306b`Person+CoreDataProperties.swift`\u3068`Person.swift`\u304c\u751f\u6210\u3055\u308c\u308c\u3070\u6e96\u5099OK\u3067\u3059\u3002\n***\n\n4.CoreData\u95a2\u9023\u306e\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\n\u3055\u3066\u3055\u3066\u3001\u300cUse CoreData\u300d\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u3066\u3044\u308c\u3070\u8a18\u8ff0\u3055\u308c\u3066\u3044\u305f\u306f\u305a\u306e\u30b3\u30fc\u30c9\u3092AppDelegate\u306b\u8a18\u8ff0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u307e\u305f\u3001CoreData\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092import\u3057\u307e\u3059\u3002\n\n```swift:AppDelegate.swift\nimport UIKit\nimport CoreData\n\n ~(\u7565)~\n    func applicationWillTerminate(application: UIApplication) {\n        // Called when the application is about to terminate. Save data if appropriate. See also applicationDidEnterBackground:.\n    }\n\n// MARK: - Core Data stack\n    \n    lazy var applicationDocumentsDirectory: NSURL = {\n        // The directory the application uses to store the Core Data store file. This code uses a directory named \"jp.ne.softbank.elle68.test\" in the application's documents Application Support directory.\n        let urls = NSFileManager.defaultManager().URLsForDirectory(.DocumentDirectory, inDomains: .UserDomainMask)\n        return urls[urls.count-1]\n    }()\n    \n    lazy var managedObjectModel: NSManagedObjectModel = {\n        // The managed object model for the application. This property is not optional. It is a fatal error for the application not to be able to find and load its model.\n        let modelURL = NSBundle.mainBundle().URLForResource(\"CoreData\", withExtension: \"momd\")!\n        return NSManagedObjectModel(contentsOfURL: modelURL)!\n    }()\n    \n    lazy var persistentStoreCoordinator: NSPersistentStoreCoordinator = {\n        // The persistent store coordinator for the application. This implementation creates and returns a coordinator, having added the store for the application to it. This property is optional since there are legitimate error conditions that could cause the creation of the store to fail.\n        // Create the coordinator and store\n        let coordinator = NSPersistentStoreCoordinator(managedObjectModel: self.managedObjectModel)\n        let url = self.applicationDocumentsDirectory.URLByAppendingPathComponent(\"CoreData.sqlite\")\n        var failureReason = \"There was an error creating or loading the application's saved data.\"\n        do {\n            try coordinator.addPersistentStoreWithType(NSSQLiteStoreType, configuration: nil, URL: url, options: nil)\n        } catch {\n            // Report any error we got.\n            var dict = [String: AnyObject]()\n            dict[NSLocalizedDescriptionKey] = \"Failed to initialize the application's saved data\"\n            dict[NSLocalizedFailureReasonErrorKey] = failureReason\n            \n            dict[NSUnderlyingErrorKey] = error as NSError\n            let wrappedError = NSError(domain: \"YOUR_ERROR_DOMAIN\", code: 9999, userInfo: dict)\n            // Replace this with code to handle the error appropriately.\n            // abort() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.\n            NSLog(\"Unresolved error \\(wrappedError), \\(wrappedError.userInfo)\")\n            abort()\n        }\n        \n        return coordinator\n    }()\n    \n    lazy var managedObjectContext: NSManagedObjectContext = {\n        // Returns the managed object context for the application (which is already bound to the persistent store coordinator for the application.) This property is optional since there are legitimate error conditions that could cause the creation of the context to fail.\n        let coordinator = self.persistentStoreCoordinator\n        var managedObjectContext = NSManagedObjectContext(concurrencyType: .MainQueueConcurrencyType)\n        managedObjectContext.persistentStoreCoordinator = coordinator\n        return managedObjectContext\n    }()\n    \n    // MARK: - Core Data Saving support\n    \n    func saveContext () {\n        if managedObjectContext.hasChanges {\n            do {\n                try managedObjectContext.save()\n            } catch {\n                // Replace this implementation with code to handle the error appropriately.\n                // abort() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.\n                let nserror = error as NSError\n                NSLog(\"Unresolved error \\(nserror), \\(nserror.userInfo)\")\n                abort()\n            }\n        }\n    }\n\n```\n\n\uff11\u70b9\u6c17\u3092\u3064\u3051\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u306e\u306f\u7d0455\u884c\u76ee\u306e\"CoreData\"\u306e\u90e8\u5206\u3002\n\n```swift:AppDelegate.swift\n\nlet modelURL = NSBundle.mainBundle().URLForResource(\"CoreData\", withExtension: \"momd\")!\n\n```\n\u3053\u3053\u306f\u5148\u307b\u3069\u751f\u6210\u3057\u305fCoreData.xcdatamodeld\u306e.\u3088\u308a\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8a18\u8ff0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u901a\u308a\u306a\u3089Model.xcdatamodeld\u3068\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3046\u306e\u3067\n\n```swift:AppDelegate.swift\n\nlet modelURL = NSBundle.mainBundle().URLForResource(\"Model\", withExtension: \"momd\")!\n\n```\n\u3067\u3059\u306d\u3002\n\n***\n\n5.\u30c7\u30fc\u30bf\u64cd\u4f5c\u7528\u306e\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\n\u3053\u308c\u307e\u3067\u3067\u304a\u304a\u3088\u305dCoreData\u304c\u52d5\u304b\u305b\u308b\u306e\u3067\u3059\u304c\u3001CRUD\u304c\u3084\u308a\u3065\u3089\u3044\u3067\u3059\u3002\u4eca\u56de\u306fCreate\u3068Read\u306e\u90e8\u5206\u3092\u30e1\u30bd\u30c3\u30c9\u5316\u3057\u307e\u3059\u3002\n\n\n```swift:AppDelegate.swift\n\n// MARK: -CoreDataMethod Read\u7528\n    func all(entityName:String) -> [Person]{\n        return self.fetch(entityName, limit: 0)\n    }\n    func all(entityName:String, sortKey:String?) -> [Person]{\n        return self.fetch(entityName, sortKey: sortKey, limit: 0)\n    }\n    \n    func fetch(entityName:String, limit:Int) -> [Person] {\n        return self.fetch(entityName, sortKey: nil, limit: limit)\n    }\n    \n    func fetch(entityName:String!, sortKey:String?, limit:Int!) -> [Person] {\n        let context: NSManagedObjectContext! = self.managedObjectContext\n        let request: NSFetchRequest! = NSFetchRequest()\n        let entity: NSEntityDescription = NSEntityDescription.entityForName(entityName, inManagedObjectContext: context)!\n        request.entity = entity\n        if let sortKey = sortKey {\n            request.sortDescriptors = [NSSortDescriptor(key: sortKey, ascending: true)]\n        }\n        request.fetchLimit = limit\n        let failureReason = \"There was an error fetching CoreDataResult.\"\n        var mutableFetchResult = [AnyObject]()\n        do {\n            mutableFetchResult = try context.executeFetchRequest(request)\n\n        } catch {\n            // Report any error we got.\n            var dict = [String: AnyObject]()\n            dict[NSLocalizedDescriptionKey] = \"Failed to initialize the application's saved data\"\n            dict[NSLocalizedFailureReasonErrorKey] = failureReason\n            \n            dict[NSUnderlyingErrorKey] = error as NSError\n            let wrappedError = NSError(domain: \"YOUR_ERROR_DOMAIN\", code: 9999, userInfo: dict)\n            // Replace this with code to handle the error appropriately.\n            // abort() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.\n            NSLog(\"Unresolved error \\(wrappedError), \\(wrappedError.userInfo)\")\n            abort()\n        }\n        \n        return mutableFetchResult as! [Person]\n    }\n\n// MARK: - CoreDataMethod Insert\u7528\n    func entityForInsert(entityName:String!) -> NSManagedObject?{\n            let context: NSManagedObjectContext = self.managedObjectContext\n            return NSEntityDescription.insertNewObjectForEntityForName(entityName, inManagedObjectContext: context)\n    }\n\n// MARK: - Core Data Saving support\n    func saveContext () {\n        if managedObjectContext.hasChanges {\n            do {\n                try managedObjectContext.save()\n            } catch {\n                // Replace this implementation with code to handle the error appropriately.\n                // abort() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.\n                let nserror = error as NSError\n                NSLog(\"Unresolved error \\(nserror), \\(nserror.userInfo)\")\n                abort()\n            }\n        }\n    }\n\n```\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u3053\u3044\u3064\u306f\u5f15\u6570\u306bEntity\u3092\u6e21\u3057\u3066\u3042\u3052\u308b\u3053\u3068\u3067\u3001\u767b\u9332\u3055\u308c\u3066\u3044\u308bPerson\u3092\u5168\u3066\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```swift:AppDelegate.swift\n    func all(entityName:String) -> [Person]{\n        return self.fetch(entityName, limit: 0)\n    }\n\n```\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306fPerson\u3092\u5168\u3066\u8fd4\u3057\u3064\u3064\u3001\u30ad\u30fc\u306b\u5165\u308c\u305f\u3082\u306e\u3067\u30bd\u30fc\u30c8\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```swift:AppDelegate.swift\n    func all(entityName:String, sortKey:String?) -> [Person]{\n        return self.fetch(entityName, sortKey: sortKey, limit: 0)\n    }\n```\n\u4f7f\u3046\u306e\u306f\u3060\u3044\u305f\u3044\u3053\u306e\uff12\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3057\u3087\u3046\u304b\u3002\nentityForInsert()\u3068saveContext()\u306f\u5b9f\u969b\u306b\u4f7f\u3046\u3068\u3053\u308d\u3067\u8aac\u660e\u3057\u307e\u3059\u3002\n\n6.CoreData\u3078\u306e\u767b\u9332\u3068\u30c7\u30fc\u30bf\u306e\u691c\u7d22\n\u3067\u306fViewController\u306eViewDidLoad\u5185\u3067\u30c7\u30fc\u30bf\u306e\u767b\u9332\u3068\u691c\u7d22\u3092\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```swift:ViewController.swift\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        var appDelegate = UIApplication.sharedApplication().delegate as! AppDelegate\n        \n        let person1 = appDelegate.entityForInsert(\"Person\") as! Person\n        person1.name = \"\u30c6\u30b9\u30c8 \u592a\u90ce\"\n        person1.age = \"28\u6b73\"\n        appDelegate.saveContext()\n        \n        let person2 = appDelegate.entityForInsert(\"Person\") as! Person\n        person2.name = \"\u30c6\u30b9\u30c8 \u82b1\u5b50\"\n        person2.age = \"18\u6b73\"\n        appDelegate.saveContext()   \n    }\n```\n\u9806\u306b\u307f\u3066\u3044\u304d\u307e\u3059\u3002\n\n`var appDelegate = UIApplication.sharedApplication().delegate as! AppDelegate`\n\u3053\u308c\u306fCoreData\u3092\u4f7f\u3046\u6642\u306e\u304a\u307e\u3058\u306a\u3044\u3060\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n***\n\n```swift:ViewController.swift\n\n        let person1 = appDelegate.entityForInsert(\"Person\") as! Person\n        person1.name = \"\u30c6\u30b9\u30c8 \u592a\u90ce\"\n        person1.age = \"28\u6b73\"\n        appDelegate.saveContext()\n```\nlet person1\u306e\u884c\u3067CoreData\u306b\u8ffd\u52a0\u3057\u305f\u3044Person\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002entityForInsert()\u306f\u8ffd\u52a0\u3057\u305f\u3044\u30af\u30e9\u30b9\u540d\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\u4eca\u56de\u306fPerson\u3002\n\u6b21\u306bperson1\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u6301\u3064name\u3068age\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5024\u3092\u4ee3\u5165\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u3053\u308c\u3067\u30c6\u30b9\u30c8 \u592a\u90ce\u3055\u3093(28\u6b73)\u304c\u51fa\u6765\u4e0a\u304c\u308a\u307e\u3057\u305f\u3002\n\u6700\u5f8c\u306bappDelegate.saveContext()\u3067\u30bb\u30fc\u30d6\u3057\u307e\u3059\u3002\u3053\u308c\u3092\u5fd8\u308c\u308b\u3068CoreData\u306b\u767b\u9332\u3055\u308c\u307e\u305b\u3093\u3002\n\u30c6\u30b9\u30c8 \u82b1\u5b50\u3055\u3093\u3082\u3084\u308a\u65b9\u306f\u4e00\u7dd2\u3067\u3059\u3002\n\u30fb\u8ffd\u52a0\u3057\u305f\u3044\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092entityForInsert()\u30e1\u30bd\u30c3\u30c9\u3067\u751f\u6210\n\u30fb\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5024\u3092\u4ee3\u5165\n\u30fbsaveContext()\u3067\u30c7\u30fc\u30bf\u3092\u30bb\u30fc\u30d6\u3059\u308b\u3000\u306e\u6d41\u308c\u3067\u3059\u306d\u3002\n\u3053\u308c\u3067\u30c7\u30fc\u30bf\u306e\u767b\u9332\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u6b21\u306b\u30c7\u30fc\u30bf\u306e\u691c\u7d22\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n```swift:ViewController.swift\n    person2.name = \"\u30c6\u30b9\u30c8 \u82b1\u5b50\"\n    person2.age = \"18\u6b73\"\n    appDelegate.saveContext()\n        \n    var result = appDelegate.all(\"Person\")\n        \n    for person in result {\n        print(\"person.name  \\(person.name!)\")\n        print(\"person.age \\(person.age!)\")\n        print(\"-----------------\")\n    }\n        \n    print(\"==================================\")\n        \n    result = appDelegate.all(\"Person\", sortKey: \"age\")\n    for person in result {\n        print(\"person.name  \\(person.name!)\")\n        print(\"person.age \\(person.age!)\")\n        print(\"-----------------\")\n    }\n```\n\u3053\u308c\u3092\u8d77\u52d5\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u8868\u793a\u3055\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n<img width=\"761\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-21 23.38.45.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/115590/1f0ae745-c260-b46f-f481-ad1f8ae51517.png\">\n\n\n`appDelegate.all(\"Person\")`\u304b\u3089\u8fd4\u3063\u3066\u304d\u305f\u914d\u5217\u3092\u5909\u6570`result`\u306b\u4ee3\u5165\u3002\u305d\u308c\u3092for\u6587\u3067\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\n`appDelegate.all(\"Person\", sortKey: \"age\")`\u3067\u306f\u30bd\u30fc\u30c8\u306e\u30ad\u30fc\u306b`age`\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u7d50\u679c\u3001age\u3092\u57fa\u6e96\u306b\u6607\u9806\u306b\u4e26\u3073\u66ff\u3048\u3089\u308c\u3001\u82b1\u5b50\u3055\u3093\u304c\u5148\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u964d\u9806\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u3001AppDelegate\u306e\u7d0464\u884c\u76ee\u3001\u4e0b\u8a18\u306etrue\u3092false\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\u3053\u306e\u6307\u5b9a\u3092\u5f15\u6570\u306b\u3057\u3066\u3001\u691c\u7d22\u6642\u306b\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u306e\u3082\u3044\u3044\u3067\u3059\u306d\u3002\n\n```swift:AppDelegate.swift\n    request.sortDescriptors = [NSSortDescriptor(key: sortKey, ascending: false)]\n```\n\n***\n\n## \u6700\u5f8c\u306b\n\u6587\u7ae0\u306b\u3059\u308b\u3068\u3059\u3054\u304f\u9577\u3044\u3067\u3059\u304cCoreData\u306e\u304a\u304a\u3088\u305d\u306e\u6271\u3044\u3092\u30e1\u30e2\u308a\u307e\u3057\u305f\u3002 \u3082\u3063\u3068\u3088\u3044\u3084\u308a\u65b9\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3072\u3068\u307e\u305a\u306f\u3053\u3053\u307e\u3067\u306b\u3002(\u3068\u3044\u3046\u3088\u308a\u5b9f\u529b\u4e0d\u8db3\u3067\u3053\u308c\u4ee5\u4e0a\u304c\u5206\u304b\u3089\u306a\u3044)\n\n", "tags": ["Swift", "iOS", "CoreData"]}