{"context": "\n\n\u306f\u3058\u3081\u306b\npython\u3067CNN\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\n\u6df1\u5c64\u5b66\u7fd2\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4f7f\u7528\u305b\u305a\uff0cnumpy\u3060\u3051\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\n\u6559\u79d1\u66f8\u3068\u3057\u3066\u300e\u6df1\u5c64\u5b66\u7fd2\u300f\u3092\u4f7f\u3044\u307e\u3057\u305f\uff0e\n\u672c\u8a18\u4e8b\u306e\u69cb\u6210\n\n\u306f\u3058\u3081\u306b\nCNN\n\n\n\u7573\u8fbc\u307f\u5c64\n\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\n\n\n\u5b66\u7fd2\n\n\n\u91cd\u307f\u306e\u66f4\u65b0\n\u8aa4\u5dee\u9006\u4f1d\u64ad\n\n\npython\u3067\u306e\u5b9f\u88c5\n\n\n\u7573\u8fbc\u307f\u5c64\u306e\u5b9f\u88c5\n\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306e\u5b9f\u88c5\n\n\nMNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u306e\u5b9f\u9a13\n\n\n\u5b66\u7fd2\n\u7d50\u679c\n\n\n\u304a\u308f\u308a\u306b\n\n\nCNN\nCNN\u3068\u306f\uff0c\u7573\u8fbc\u307f\u6f14\u7b97\u3092\u7528\u3044\u305f\u9806\u4f1d\u64ad\u578b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3042\u308a\uff0c\u4e3b\u306b\u753b\u50cf\u8a8d\u8b58\u306b\u5fdc\u7528\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u4e00\u822c\u7684\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\uff0c\u96a3\u63a5\u5c64\u306e\u30e6\u30cb\u30c3\u30c8\u304c\u5168\u7d50\u5408\u3055\u308c\u305f\u3082\u306e\u3067\u3059\u304c\uff0c\nCNN\u306f\uff0c\u96a3\u63a5\u5c64\u9593\u306e\u7279\u5b9a\u306e\u30e6\u30cb\u30c3\u30c8\u306e\u307f\u304c\u7d50\u5408\u3057\u305f\u7279\u5225\u306a\u5c64\u3092\u6301\u3061\u307e\u3059\uff0e\n\u3053\u308c\u3089\u306e\u7279\u6b8a\u306a\u5c64\u3067\u306f\uff0c\u7573\u8fbc\u307f \u304a\u3088\u3073 \u30d7\u30fc\u30ea\u30f3\u30b0 \u3068\u3044\u3046\u6f14\u7b97\u3092\u884c\u3044\u307e\u3059\uff0e\n\u4ee5\u4e0b\u3067\u306f\uff0c\u7573\u8fbc\u307f\u3068\u30d7\u30fc\u30ea\u30f3\u30b0\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e\n\n\u7573\u8fbc\u307f\u5c64\n\u7573\u8fbc\u307f\u306f\uff0c\u753b\u50cf\u306b\u30d5\u30a3\u30eb\u30bf\u306e\u5bfe\u5fdc\u3059\u308b\u753b\u7d20\u540c\u58eb\u306e\u7a4d\u3092\u3068\u308a\uff0c\u305d\u306e\u7dcf\u548c\u3092\u3068\u308b\u6f14\u7b97\u3067\u3059\uff0e\n\u30d5\u30a3\u30eb\u30bf\u306e\u6fc3\u6de1\u30d1\u30bf\u30fc\u30f3\u3068\u985e\u4f3c\u3057\u305f\u6fc3\u6de1\u30d1\u30bf\u30fc\u30f3\u3092\u691c\u51fa\u3059\u308b\u50cd\u304d\u304c\u3042\u308a\u307e\u3059\uff0e\n\u753b\u50cf\u30b5\u30a4\u30ba\u3092 $W \\times W$\uff0c\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092 $(i, j)$\uff0c\u753b\u7d20\u5024\u3092 $x_{ij}$ \u3067\u8868\u3057\u307e\u3059\uff0e\n\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba\u3092 $H \\times H$\uff0c\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092 $(p, q)$\uff0c\u30d5\u30a3\u30eb\u30bf\u306e\u753b\u7d20\u5024\u3092 $h_{pq}$ \u3067\u8868\u3057\u307e\u3059\uff0e\n\u7573\u8fbc\u307f\u306f\uff0c\u4ee5\u4e0b\u306e\u5f0f\u3067\u8868\u3055\u308c\u307e\u3059\uff0e\nu_{ij} = \\sum^{H-1}_{p=0} \\sum^{H-1}_{q=0} x_{i+p, j+q} \\, h_{pq}\n\n\u753b\u50cf\u5185\u306b\u53ce\u307e\u308b\u7bc4\u56f2\u5185\u3067\u30d5\u30a3\u30eb\u30bf\u3092\u52d5\u304b\u3057\u305f\u3068\u304d\uff0c\u7573\u8fbc\u307f\u306e\u7d50\u679c\u306e\u753b\u50cf\u30b5\u30a4\u30ba\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\u305f\u3060\u3057 $\\lfloor \\cdot \\rfloor$ \u306f\u5c0f\u6570\u70b9\u4ee5\u4e0b\u3092\u5207\u308a\u6368\u3066\uff0c\u6574\u6570\u5316\u3059\u308b\u6f14\u7b97\u5b50\u3067\u3059\uff0e\n(W - 2 \\lfloor H / 2 \\rfloor) \\times (W - 2 \\lfloor H / 2 \\rfloor)\n\n\u7573\u8fbc\u307f\u5c64\u3067\u306f\uff0c\u4e0b\u56f3\u306e\u3088\u3046\u306b\u7573\u8fbc\u307f\u6f14\u7b97\u3092\u884c\u3044\u307e\u3059\uff0e\n\u5165\u529b\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3092 $W \\times W \\times K$\uff0c\u7573\u8fbc\u307f\u30d5\u30a3\u30eb\u30bf\u306e\u30b5\u30a4\u30ba\u3092 $H \\times H \\times K \\times M$ \u3068\u3057\u307e\u3059\uff0e\n$K$ \u306f\u753b\u50cf\u306e\u30c1\u30e3\u30cd\u30eb\u6570\u3092\uff0c$M$ \u306f\u30d5\u30a3\u30eb\u30bf\u306e\u7a2e\u985e\u306e\u6570\u3092\u8868\u3057\u307e\u3059\uff0e\n$l - 1$ \u5c64\u306e $k$ \u30c1\u30e3\u30cd\u30eb\u306e\u753b\u50cf\u3092 $m$ \u756a\u76ee\u306e\u30d5\u30a3\u30eb\u30bf\u3067\u7573\u8fbc\u3093\u3060\u7d50\u679c\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\uff0e\n\u305f\u3060\u3057 $b_{ijm}$ \u306f\u30d0\u30a4\u30a2\u30b9\uff0c$f$ \u306f\u6d3b\u6027\u5316\u95a2\u6570\u3092\u8868\u3057\u307e\u3059\uff0e\n\\begin{align}\nu_{ijm} &= \\sum^{K-1}_{k=0} \\sum^{H-1}_{p=0} \\sum^{H-1}_{q=0} z^{(l-1)}_{i+p, j+q, k} \\, h_{pqkm} + b_{ijm} \\\\\n\\\\\nz_{ijm} &= f(u_{ijm})\n\\end{align}\n\n$z_{ijm}$ \u3092\u9806\u756a\u306b\u4e26\u3079\u305f\u3082\u306e\u3092 $M$ \u30c1\u30e3\u30cd\u30eb\u306e\u753b\u50cf\u3068\u307f\u306a\u3057\uff0c\u6b21\u306e\u5c64\u3078\u306e\u5165\u529b $z^{(l)}_{ijm}$ \u3068\u3057\u307e\u3059\uff0e\n\u307e\u305f\uff0c\u30d5\u30a3\u30eb\u30bf\u3092\u305a\u3089\u3057\u306a\u304c\u3089\u9069\u7528\u3059\u308b\u305f\u3081\uff0c\u540c\u4e00\u306e\u91cd\u307f\u304c\u7e70\u308a\u8fd4\u3057\u4f7f\u308f\u308c\u307e\u3059\uff0e\n\u3053\u308c\u3092 \u91cd\u307f\u5171\u6709 \u3068\u547c\u3073\u307e\u3059\uff0e\n\n\u4e0a\u306e\u56f3\u3067\u306f\uff0c\u5165\u529b\u753b\u50cf\u306e\u30c1\u30e3\u30cd\u30eb\u6570 $K = 3$\uff0c\u30d5\u30a3\u30eb\u30bf\u306e\u7a2e\u985e $M = 2$ \u3068\u3057\uff0c$2$ \u30c1\u30e3\u30cd\u30eb\u306e\u753b\u50cf\u3092\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\n\u30d7\u30fc\u30ea\u30f3\u30b0\u306f\uff0c\u753b\u50cf\u306e\u5c40\u6240\u9818\u57df\u30921\u3064\u306e\u5024\u306b\u307e\u3068\u3081\u308b\u6f14\u7b97\u3067\u3059\uff0e\n\u7573\u8fbc\u307f\u5c64\u3067\u62bd\u51fa\u3055\u308c\u305f\u7279\u5fb4\u306e\u4f4d\u7f6e\u611f\u5ea6\u3092\u4f4e\u4e0b\u3055\u305b\uff0c\u591a\u5c11\u306e\u4f4d\u7f6e\u305a\u308c\u306b\u5bfe\u3057\u3066\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306e\u51fa\u529b\u304c\u4e0d\u5909\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\n\u30b5\u30a4\u30ba $W \\times W \\times K$ \u306e\u753b\u50cf\u4e0a\u3067\u753b\u7d20 $(i, j)$ \u3092\u4e2d\u5fc3\u3068\u3059\u308b $H \\times H$ \u6b63\u65b9\u9818\u57df\u3092\u3068\u308a\uff0c\u9818\u57df\u5185\u306e\u753b\u7d20\u306e\u96c6\u5408\u3092 $P_{ij}$ \u3067\u8868\u3057\u307e\u3059\uff0e\n\u30d7\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b\u5024 $u_{ijk}$ \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u305b\u307e\u3059\uff0e\nu_{ijk} = \\biggl(\\frac{1}{H^2} \\sum_{(p, q) \\in P_{ij}} z^{P}_{pqk} \\biggr)^{\\frac{1}{P}}\n\n$P = 1$ \u306e\u3068\u304d\uff0c\u9818\u57df\u5185\u306e\u753b\u7d20\u306e\u5e73\u5747\u3092\u3068\u308b\u305f\u3081\uff0c\u5e73\u5747\u30d7\u30fc\u30ea\u30f3\u30b0 \u3068\u547c\u3070\u308c\u307e\u3059\uff0e\n$P = \\infty$ \u306e\u3068\u304d\uff0c\u9818\u57df\u5185\u306e\u753b\u7d20\u306e\u6700\u5927\u5024\u3092\u3068\u308b\u305f\u3081\uff0c\u6700\u5927\u30d7\u30fc\u30ea\u30f3\u30b0 \u3068\u547c\u3070\u308c\u307e\u3059\uff0e\n\u4e0b\u56f3\u306b\u6700\u5927\u30d7\u30fc\u30ea\u30f3\u30b0\u306e\u56f3\u3092\u793a\u3057\u307e\u3059\uff0e\n\u9818\u57df\u30b5\u30a4\u30ba $2 \\times 2$\uff0c\u30b9\u30c8\u30e9\u30a4\u30c9 $2$ \u3067 $4 \\times 4$ \u306e\u5165\u529b\u753b\u50cf\u3092\u30d7\u30fc\u30ea\u30f3\u30b0\u3092\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\n\u5b66\u7fd2\nCNN\u306e\u5b66\u7fd2\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e\n\u4ee5\u524d\u66f8\u3044\u305f\u300epython\u3067\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5b9f\u88c5\u300f\u306e\u8aa4\u5dee\u9006\u4f1d\u64ad\u306e\u7ae0\u304c\u53c2\u8003\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u91cd\u307f\u306e\u66f4\u65b0\n\u5b66\u7fd2\u30c7\u30fc\u30bf\u304b\u3089\u8a08\u7b97\u3055\u308c\u308b\u51fa\u529b\u5024\u3092\u6559\u5e2b\u30e9\u30d9\u30eb\u306b\u8fd1\u3065\u3051\u308b\u305f\u3081\u306b\uff0c\u8aa4\u5dee\u95a2\u6570 $E$ \u306e\u6700\u5c0f\u5316\u3092\u8003\u3048\u307e\u3059\uff0e\n\u8aa4\u5dee\u95a2\u6570 $E$ \u3092\u91cd\u307f $w$ \u3067\u504f\u5fae\u5206\u3057\uff0c$0$ \u306b\u8fd1\u3065\u304f\u3088\u3046\u306b\u91cd\u307f\u3092\u66f4\u65b0\u3057\u307e\u3059\uff0e\nw_{new} = w_{old} - \\varepsilon \\frac{\\partial E}{\\partial w_{old}}\n\n\n\u8aa4\u5dee\u9006\u4f1d\u64ad\n\u8aa4\u5dee\u9006\u4f1d\u64ad\u306e\u8a08\u7b97\u65b9\u6cd5\u306f\uff0c\u4e00\u822c\u7684\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u5909\u308f\u308a\u307e\u305b\u3093\uff0e\n$l+1$ \u5c64\u306e\u8aa4\u5dee $\\delta^{(l+1)}$ \u3068\u91cd\u307f $w^{(l+1)}$ \u304a\u3088\u3073 $l$ \u5c64\u76ee\u304b\u3089\u306e\u5165\u529b\u306e\u5fae\u5206\u5024\u306e\u7a4d\u3067\uff0c$l$ \u5c64\u3067\u306e\u8aa4\u5dee\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u305f\u3060\u3057\uff0c\u4ee5\u4e0b\u306e2\u70b9\u304cCNN\u3068\u5168\u7d50\u5408\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u7570\u306a\u308a\u307e\u3059\uff0e\n\n\u7573\u8fbc\u307f\u5c64\u304a\u3088\u3073\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3067\u7279\u5b9a\u306e\u30e6\u30cb\u30c3\u30c8\u306e\u307f\u304c\u7d50\u5408\u3057\u3066\u3044\u308b\n\u7573\u8fbc\u307f\u5c64\u3067\u91cd\u307f\u304c\u5171\u6709\u3055\u308c\u3066\u3044\u308b\n\n\npython\u3067\u306e\u5b9f\u88c5\n\u4eca\u56de Chainer\u306b\u3088\u308b\u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5b9f\u88c5 \u3067\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\n\u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9\u306f \u3053\u3053 \u306b\u3042\u3052\u3066\u3042\u308a\u307e\u3059\uff0e\n\u7573\u8fbc\u307f\u5c64\uff0c\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306b\u5206\u3051\u3066\u5b9f\u88c5\u4e0a\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n\u7573\u8fbc\u307f\u5c64\u306e\u5b9f\u88c5\n\u7573\u8fbc\u307f\u5c64\u3067\u306f\uff0c\u307e\u305a\u753b\u50cf\u306e\u5c40\u6240\u9818\u57df\u3092\u5207\u308a\u51fa\u3057\uff0c\u9806\u756a\u306b\u4e26\u3079\u305f\u3082\u306e\u3092\u5165\u529b\u3068\u3057\u3066\u9806\u4f1d\u64ad\u3057\u3066\u3044\u307e\u3059\uff0e\n\u4f8b\u3048\u3070\uff0c$20 \\times 12 \\times 12$ \u306e\u5165\u529b\u753b\u50cf\u3092 $50 \\times 20 \\times 5 \\times 5$ \u306e\u30d5\u30a3\u30eb\u30bf\u3067\u7573\u8fbc\u3080\u5834\u5408\uff0c\u4e0b\u56f3\u306e\u3088\u3046\u306b\u5165\u529b\u753b\u50cf\u3092\u6210\u5f62\u3057\u307e\u3059\uff0e\n\u6210\u5f62\u3055\u308c\u305f\u5165\u529b\u306e\u30b5\u30a4\u30ba\u306f\uff0c$64 \\times 20 \\times 5 \\times 5$ \u3068\u306a\u308a\u307e\u3059\uff0e\n$64$ \u3068\u3044\u3046\u6570\u5024\u306f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u8a08\u7b97\u3055\u308c\u307e\u3059\uff0e\n$(12 - \\lfloor 5 / 2 \\rfloor \\times 2) \\times (12 - \\lfloor 5 / 2 \\rfloor \\times 2) = 64$\n\n\u6210\u5f62\u3057\u305f\u5165\u529b\u753b\u50cf\u3068\u30d5\u30a3\u30eb\u30bf\u306e\u7573\u8fbc\u307f\u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\n\u7e70\u308a\u8fd4\u3057\u306b\u306a\u308a\u307e\u3059\u304c\uff0c\u5165\u529b\u304a\u3088\u3073\u30d5\u30a3\u30eb\u30bf\u306e\u30b5\u30a4\u30ba\u306f\uff0c\u305d\u308c\u305e\u308c $64 \\times 20 \\times 5 \\times 5$\uff0c$50 \\times 20 \\times 5 \\times 5$ \u3067\u3059\uff0e\nnp.tensordot(X, weight, ((1, 2, 3), (1, 2, 3))) \u306b\u3088\u308a $64 \\times 50$ \u306e\u51fa\u529b\u304c\u5f97\u3089\u308c\u307e\u3059\uff0e\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\uff0c\u7573\u8fbc\u307f\u5c64\u306b\u304a\u3051\u308b\u9806\u4f1d\u64ad\u306e\u30ad\u30fc\u3068\u306a\u308b\u90e8\u5206\u3067\u3059\uff0e\n\u30df\u30cb\u30d0\u30c3\u30c1\u3067\u5b66\u7fd2\u3067\u304d\u308b\u3088\u3046\u5165\u529b\u306e\u6b21\u5143\u6570\u304c\u4e00\u3064\u5897\u3048\u3066\u3044\u308b\u306e\u3067\uff0ctensordot \u306e\u5f15\u6570\u306f\u4e00\u3064\u305a\u308c\u3066 axes = ((2, 3, 4), (1, 2, 3)) \u3068\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n    def __forward(self, X):\n        s_batch, k, xh, xw = X.shape\n        m = self.weight.shape[0]\n        oh, ow = xh - self.kh / 2 * 2, xw - self.kw / 2 * 2\n        self.__patch = self.__im2patch(X, s_batch, k, oh, ow)\n        return np.tensordot(self.__patch, self.weight, ((2, 3, 4), (1, 2, 3))).swapaxes(1, 2).reshape(s_batch, m, oh, ow)\n\n\n    def __im2patch(self, X, s_batch, k, oh, ow):\n        patch = np.zeros((s_batch, oh * ow, k, self.kh, self.kw))\n        for j in range(oh):\n            for i in range(ow):\n                patch[:, j * ow + i, :, :, :] = X[:, :, j:j+self.kh, i:i+self.kw]\n        return patch\n\n\u7573\u8fbc\u307f\u5c64\u306b\u304a\u3051\u308b\u9006\u4f1d\u64ad\u3067\u306f\uff0c\u4e00\u3064\u5148\u306e\u5c64\u306e $\\delta$ \u304a\u3088\u3073\u30d5\u30a3\u30eb\u30bf\u306e\u4fc2\u6570\u306e\u7a4d\u304c\u9006\u4f1d\u64ad\u3055\u305b\u308b\u8aa4\u5dee\u3068\u306a\u308a\u307e\u3059\uff0e\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\n\u5c40\u6240\u9818\u57df\u3054\u3068\u306b\u5f97\u3089\u308c\u305f\u8aa4\u5dee\u3092\u5165\u529b\u753b\u50cf\u306e\u5f62\u306b\u518d\u6210\u5f62\u3057\u3066\u3044\u307e\u3059\uff0e\n\u3053\u308c\u306f\uff0c\u9806\u4f1d\u64ad\u306e\u3068\u304d\u5165\u529b\u753b\u50cf\u3092\u5c40\u6240\u9818\u57df\u306b\u5207\u308a\u51fa\u3057\u305f\u51e6\u7406\u3068\u9006\u306e\u51e6\u7406\u306b\u306a\u308a\u307e\u3059\uff0e\n    def backward(self, delta, shape):\n        s_batch, k, h, w = delta.shape\n        delta_patch = np.tensordot(delta.reshape(s_batch, k, h * w), self.weight, (1, 0))\n        return self.__patch2im(delta_patch, h, w, shape)\n\n    def __patch2im(self, patch, h, w, shape):\n        im = np.zeros(shape)\n        for j in range(h):\n            for i in range(w):\n                im[:, :, j:j+self.kh, i:i+self.kw] += patch[:, j * w + i]\n        return im\n\n\n\n\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306e\u5b9f\u88c5\n\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3067\u306e\u9806\u4f1d\u64ad\u3082\u5165\u529b\u753b\u50cf\u3092\u6210\u5f62\u3057\uff0c\u5c40\u6240\u9818\u57df\u3092\u9806\u756a\u306b\u4e26\u3079\u307e\u3059\uff0e\n\u7573\u8fbc\u307f\u5c64\u3068\u7570\u306a\u308b\u306e\u306f\uff0c\u6700\u5927\u5024\u3092\u4e0e\u3048\u305f\u753b\u7d20\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4fdd\u5b58\u3057\u3066\u3044\u308b\u70b9\u3067\u3059\uff0e\n\u3053\u308c\u306f\uff0c\u3069\u306e\u753b\u7d20\u304b\u3089\u5024\u304c\u4f1d\u64ad\u3055\u308c\u3066\u304d\u305f\u304b\u3068\u3044\u3046\u60c5\u5831\u3092\u4f7f\u3063\u3066\uff0c\u8aa4\u5dee\u3092\u9006\u4f1d\u64ad\u3059\u308b\u305f\u3081\u3067\u3059\uff0e\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\uff0c\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306b\u304a\u3051\u308b\u9806\u4f1d\u64ad\u306e\u30ad\u30fc\u3068\u306a\u308b\u90e8\u5206\u3067\u3059\uff0e\n    def forward(self, X):\n        s_batch, k, h, w = X.shape\n        oh, ow = (h - self.kh) / self.s + 1, (w - self.kw) / self.s + 1\n        val, self.__ind = self.__max(X, s_batch, k, oh, ow)\n        return val\n\n    def __max(self, X, s_batch, k, oh, ow):\n        patch = self.__im2patch(X, s_batch, k, oh, ow)\n        return map(lambda _f: _f(patch, axis = 3).reshape(s_batch, k, oh, ow), [np.max, np.argmax])\n\n\n    def __im2patch(self, X, s_batch, k, oh, ow):\n        patch = np.zeros((s_batch, oh * ow, k, self.kh, self.kw))\n        for j in range(oh):\n            for i in range(ow):\n                _j, _i = j * self.s, i * self.s\n                patch[:, j * ow + i, :, :, :] = X[:, :, _j:_j+self.kh, _i:_i+self.kw]\n        return patch.swapaxes(1, 2).reshape(s_batch, k, oh * ow, -1)\n\n\n\u4e0a\u8ff0\u306e\u3088\u3046\u306b\uff0c\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3067\u306e\u9006\u4f1d\u64ad\u306f\uff0c\u6700\u5927\u5024\u3092\u4e0e\u3048\u305f\u753b\u7d20\u306b\u5bfe\u3057\u3066\u305d\u306e\u307e\u307e\u8aa4\u5dee\u3092\u4f1d\u64ad\u3057\u3066\u3044\u307e\u3059\uff0e\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\n    def backward(self, X, delta, act):\n        s_batch, k, h, w = X.shape\n        oh, ow = delta.shape[2:]\n        rh, rw = h / oh, w / ow\n        ind = np.arange(s_batch * k * oh * ow) * rh * rw + self.__ind.flatten()\n        return self.__backward(delta, ind, s_batch, k, h, w, oh, ow) * act.derivate(X)\n\n    def __backward(self, delta, ind, s_batch, k, h, w, oh, ow):\n        _delta = np.zeros(s_batch * k * h * w)\n        _delta[ind] = delta.flatten()\n        return _delta.reshape(s_batch, k, oh, ow, self.kh, self.kw).swapaxes(3, 4).reshape(s_batch, k, h, w)\n\n\nMNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u306e\u5b9f\u9a13\nMNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f7f\u3063\u3066\uff0c\u624b\u66f8\u304d\u6570\u5b57\u3092\u5b66\u7fd2\u3057\u307e\u3057\u305f\uff0e\n\u5c64\u306e\u69cb\u9020\u306f\uff0c Chainer\u306b\u3088\u308b\u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5b9f\u88c5 \u3068\u540c\u3058\u3067\u3059\uff0e\n\n\u5b66\u7fd2\n\u5404\u7a2e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\uff0e\n\u5165\u529b\u30c7\u30fc\u30bf\uff1a$28 \\times 28$ \u306e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf $10000$ \u679a\n\u5b66\u7fd2\u7387\uff1a$\\varepsilon = 0.005$\n\u6b63\u5247\u5316\u9805\u306e\u4fc2\u6570\uff1a$\\lambda = 0.0001$\n\u5b66\u7fd2\u7387\u306e\u6e1b\u8870\u4fc2\u6570\uff1a$\\gamma = 0.9$\n\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\uff1a$5$\n\u30a8\u30dd\u30c3\u30af\uff1a$50$\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\uff1a\u5165\u529b\u30c7\u30fc\u30bf\u3068\u540c\u3058\u30b5\u30a4\u30ba\u306e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf $100$ \u679a\n\n\u7d50\u679c\n\u5404\u30a8\u30dd\u30c3\u30af\u306b\u304a\u3051\u308b\u30ed\u30b9\u3092\u63cf\u753b\u3057\u305f\u30b0\u30e9\u30d5\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\uff0e\n\u6700\u7d42\u7684\u306b\u30ed\u30b9\u306f\uff0c$0.104299490259$ \u307e\u3067\u4e0b\u304c\u308a\u307e\u3057\u305f\uff0e\n\u307e\u305f\uff0c\u30c6\u30b9\u30c8\u753b\u50cf $100$ \u679a\u3067\u306e\u8b58\u5225\u7cbe\u5ea6\u306f\uff0c$\\boldsymbol{0.96}$ \u3067\u3057\u305f\uff0e\n\n\n\u304a\u308f\u308a\u306b\nCNN\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\uff0e\n\u4eca\u56de\u30d1\u30c7\u30a3\u30f3\u30b0\u3084batch normalization\u3092\u5b9f\u88c5\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u304c\uff0c\u75b2\u308c\u305f\u306e\u3067\u7d42\u308f\u308a\u306b\u3057\u307e\u3059\uff0e\n\u30e9\u30a4\u30d6\u30e9\u30ea\u4f5c\u3063\u3066\u3044\u308b\u4eba\u305f\u3061\u51c4\u3044\u3068\u611f\u3058\u307e\u3057\u305f\uff0e\n# \u306f\u3058\u3081\u306b\n\npython\u3067CNN\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\n\u6df1\u5c64\u5b66\u7fd2\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4f7f\u7528\u305b\u305a\uff0cnumpy\u3060\u3051\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\n\u6559\u79d1\u66f8\u3068\u3057\u3066[\u300e\u6df1\u5c64\u5b66\u7fd2\u300f](http://www.amazon.co.jp/\u6df1\u5c64\u5b66\u7fd2-\u6a5f\u68b0\u5b66\u7fd2\u30d7\u30ed\u30d5\u30a7\u30c3\u30b7\u30e7\u30ca\u30eb\u30b7\u30ea\u30fc\u30ba-\u5ca1\u8c37-\u8cb4\u4e4b/dp/4061529021)\u3092\u4f7f\u3044\u307e\u3057\u305f\uff0e\n\n\u672c\u8a18\u4e8b\u306e\u69cb\u6210\n\n* \u306f\u3058\u3081\u306b\n* CNN\n    * \u7573\u8fbc\u307f\u5c64\n    * \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\n* \u5b66\u7fd2\n    * \u91cd\u307f\u306e\u66f4\u65b0\n    * \u8aa4\u5dee\u9006\u4f1d\u64ad\n* python\u3067\u306e\u5b9f\u88c5\n    * \u7573\u8fbc\u307f\u5c64\u306e\u5b9f\u88c5\n    * \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306e\u5b9f\u88c5\n* MNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u306e\u5b9f\u9a13\n    * \u5b66\u7fd2\n    * \u7d50\u679c\n* \u304a\u308f\u308a\u306b\n\n\n# CNN\n\nCNN\u3068\u306f\uff0c\u7573\u8fbc\u307f\u6f14\u7b97\u3092\u7528\u3044\u305f\u9806\u4f1d\u64ad\u578b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3042\u308a\uff0c\u4e3b\u306b\u753b\u50cf\u8a8d\u8b58\u306b\u5fdc\u7528\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u4e00\u822c\u7684\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\uff0c\u96a3\u63a5\u5c64\u306e\u30e6\u30cb\u30c3\u30c8\u304c\u5168\u7d50\u5408\u3055\u308c\u305f\u3082\u306e\u3067\u3059\u304c\uff0c\nCNN\u306f\uff0c\u96a3\u63a5\u5c64\u9593\u306e\u7279\u5b9a\u306e\u30e6\u30cb\u30c3\u30c8\u306e\u307f\u304c\u7d50\u5408\u3057\u305f\u7279\u5225\u306a\u5c64\u3092\u6301\u3061\u307e\u3059\uff0e\n\u3053\u308c\u3089\u306e\u7279\u6b8a\u306a\u5c64\u3067\u306f\uff0c**\u7573\u8fbc\u307f** \u304a\u3088\u3073 **\u30d7\u30fc\u30ea\u30f3\u30b0** \u3068\u3044\u3046\u6f14\u7b97\u3092\u884c\u3044\u307e\u3059\uff0e\n\u4ee5\u4e0b\u3067\u306f\uff0c\u7573\u8fbc\u307f\u3068\u30d7\u30fc\u30ea\u30f3\u30b0\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e\n\n## \u7573\u8fbc\u307f\u5c64\n\n\u7573\u8fbc\u307f\u306f\uff0c\u753b\u50cf\u306b\u30d5\u30a3\u30eb\u30bf\u306e\u5bfe\u5fdc\u3059\u308b\u753b\u7d20\u540c\u58eb\u306e\u7a4d\u3092\u3068\u308a\uff0c\u305d\u306e\u7dcf\u548c\u3092\u3068\u308b\u6f14\u7b97\u3067\u3059\uff0e\n\u30d5\u30a3\u30eb\u30bf\u306e\u6fc3\u6de1\u30d1\u30bf\u30fc\u30f3\u3068\u985e\u4f3c\u3057\u305f\u6fc3\u6de1\u30d1\u30bf\u30fc\u30f3\u3092\u691c\u51fa\u3059\u308b\u50cd\u304d\u304c\u3042\u308a\u307e\u3059\uff0e\n\u753b\u50cf\u30b5\u30a4\u30ba\u3092 $W \\times W$\uff0c\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092 $(i, j)$\uff0c\u753b\u7d20\u5024\u3092 $x_{ij}$ \u3067\u8868\u3057\u307e\u3059\uff0e\n\u30d5\u30a3\u30eb\u30bf\u30b5\u30a4\u30ba\u3092 $H \\times H$\uff0c\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092 $(p, q)$\uff0c\u30d5\u30a3\u30eb\u30bf\u306e\u753b\u7d20\u5024\u3092 $h_{pq}$ \u3067\u8868\u3057\u307e\u3059\uff0e\n\u7573\u8fbc\u307f\u306f\uff0c\u4ee5\u4e0b\u306e\u5f0f\u3067\u8868\u3055\u308c\u307e\u3059\uff0e\n\n```math\nu_{ij} = \\sum^{H-1}_{p=0} \\sum^{H-1}_{q=0} x_{i+p, j+q} \\, h_{pq}\n```\n\n\u753b\u50cf\u5185\u306b\u53ce\u307e\u308b\u7bc4\u56f2\u5185\u3067\u30d5\u30a3\u30eb\u30bf\u3092\u52d5\u304b\u3057\u305f\u3068\u304d\uff0c\u7573\u8fbc\u307f\u306e\u7d50\u679c\u306e\u753b\u50cf\u30b5\u30a4\u30ba\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\u305f\u3060\u3057 $\\lfloor \\cdot \\rfloor$ \u306f\u5c0f\u6570\u70b9\u4ee5\u4e0b\u3092\u5207\u308a\u6368\u3066\uff0c\u6574\u6570\u5316\u3059\u308b\u6f14\u7b97\u5b50\u3067\u3059\uff0e\n\n```math\n(W - 2 \\lfloor H / 2 \\rfloor) \\times (W - 2 \\lfloor H / 2 \\rfloor)\n```\n\n\u7573\u8fbc\u307f\u5c64\u3067\u306f\uff0c\u4e0b\u56f3\u306e\u3088\u3046\u306b\u7573\u8fbc\u307f\u6f14\u7b97\u3092\u884c\u3044\u307e\u3059\uff0e\n\u5165\u529b\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3092 $W \\times W \\times K$\uff0c\u7573\u8fbc\u307f\u30d5\u30a3\u30eb\u30bf\u306e\u30b5\u30a4\u30ba\u3092 $H \\times H \\times K \\times M$ \u3068\u3057\u307e\u3059\uff0e\n$K$ \u306f\u753b\u50cf\u306e\u30c1\u30e3\u30cd\u30eb\u6570\u3092\uff0c$M$ \u306f\u30d5\u30a3\u30eb\u30bf\u306e\u7a2e\u985e\u306e\u6570\u3092\u8868\u3057\u307e\u3059\uff0e\n$l - 1$ \u5c64\u306e $k$ \u30c1\u30e3\u30cd\u30eb\u306e\u753b\u50cf\u3092 $m$ \u756a\u76ee\u306e\u30d5\u30a3\u30eb\u30bf\u3067\u7573\u8fbc\u3093\u3060\u7d50\u679c\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\uff0e\n\u305f\u3060\u3057 $b_{ijm}$ \u306f\u30d0\u30a4\u30a2\u30b9\uff0c$f$ \u306f\u6d3b\u6027\u5316\u95a2\u6570\u3092\u8868\u3057\u307e\u3059\uff0e\n\n```math\n\\begin{align}\nu_{ijm} &= \\sum^{K-1}_{k=0} \\sum^{H-1}_{p=0} \\sum^{H-1}_{q=0} z^{(l-1)}_{i+p, j+q, k} \\, h_{pqkm} + b_{ijm} \\\\\n\\\\\nz_{ijm} &= f(u_{ijm})\n\\end{align}\n```\n\n$z_{ijm}$ \u3092\u9806\u756a\u306b\u4e26\u3079\u305f\u3082\u306e\u3092 $M$ \u30c1\u30e3\u30cd\u30eb\u306e\u753b\u50cf\u3068\u307f\u306a\u3057\uff0c\u6b21\u306e\u5c64\u3078\u306e\u5165\u529b $z^{(l)}_{ijm}$ \u3068\u3057\u307e\u3059\uff0e\n\u307e\u305f\uff0c\u30d5\u30a3\u30eb\u30bf\u3092\u305a\u3089\u3057\u306a\u304c\u3089\u9069\u7528\u3059\u308b\u305f\u3081\uff0c\u540c\u4e00\u306e\u91cd\u307f\u304c\u7e70\u308a\u8fd4\u3057\u4f7f\u308f\u308c\u307e\u3059\uff0e\n\u3053\u308c\u3092 **\u91cd\u307f\u5171\u6709** \u3068\u547c\u3073\u307e\u3059\uff0e\n\n<img width=\"1000\" alt=\"conv_layer.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/82527/beefb47a-1ed2-b110-9dc5-57e40fc71fd4.png\">\n\n\u4e0a\u306e\u56f3\u3067\u306f\uff0c\u5165\u529b\u753b\u50cf\u306e\u30c1\u30e3\u30cd\u30eb\u6570 $K = 3$\uff0c\u30d5\u30a3\u30eb\u30bf\u306e\u7a2e\u985e $M = 2$ \u3068\u3057\uff0c$2$ \u30c1\u30e3\u30cd\u30eb\u306e\u753b\u50cf\u3092\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\uff0e\n\n## \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\n\n\u30d7\u30fc\u30ea\u30f3\u30b0\u306f\uff0c\u753b\u50cf\u306e\u5c40\u6240\u9818\u57df\u30921\u3064\u306e\u5024\u306b\u307e\u3068\u3081\u308b\u6f14\u7b97\u3067\u3059\uff0e\n\u7573\u8fbc\u307f\u5c64\u3067\u62bd\u51fa\u3055\u308c\u305f\u7279\u5fb4\u306e\u4f4d\u7f6e\u611f\u5ea6\u3092\u4f4e\u4e0b\u3055\u305b\uff0c\u591a\u5c11\u306e\u4f4d\u7f6e\u305a\u308c\u306b\u5bfe\u3057\u3066\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306e\u51fa\u529b\u304c\u4e0d\u5909\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\n\u30b5\u30a4\u30ba $W \\times W \\times K$ \u306e\u753b\u50cf\u4e0a\u3067\u753b\u7d20 $(i, j)$ \u3092\u4e2d\u5fc3\u3068\u3059\u308b $H \\times H$ \u6b63\u65b9\u9818\u57df\u3092\u3068\u308a\uff0c\u9818\u57df\u5185\u306e\u753b\u7d20\u306e\u96c6\u5408\u3092 $P_{ij}$ \u3067\u8868\u3057\u307e\u3059\uff0e\n\u30d7\u30fc\u30ea\u30f3\u30b0\u306b\u3088\u3063\u3066\u5f97\u3089\u308c\u308b\u5024 $u_{ijk}$ \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8868\u305b\u307e\u3059\uff0e\n\n```math\nu_{ijk} = \\biggl(\\frac{1}{H^2} \\sum_{(p, q) \\in P_{ij}} z^{P}_{pqk} \\biggr)^{\\frac{1}{P}}\n```\n\n$P = 1$ \u306e\u3068\u304d\uff0c\u9818\u57df\u5185\u306e\u753b\u7d20\u306e\u5e73\u5747\u3092\u3068\u308b\u305f\u3081\uff0c**\u5e73\u5747\u30d7\u30fc\u30ea\u30f3\u30b0** \u3068\u547c\u3070\u308c\u307e\u3059\uff0e\n$P = \\infty$ \u306e\u3068\u304d\uff0c\u9818\u57df\u5185\u306e\u753b\u7d20\u306e\u6700\u5927\u5024\u3092\u3068\u308b\u305f\u3081\uff0c**\u6700\u5927\u30d7\u30fc\u30ea\u30f3\u30b0** \u3068\u547c\u3070\u308c\u307e\u3059\uff0e\n\u4e0b\u56f3\u306b\u6700\u5927\u30d7\u30fc\u30ea\u30f3\u30b0\u306e\u56f3\u3092\u793a\u3057\u307e\u3059\uff0e\n\u9818\u57df\u30b5\u30a4\u30ba $2 \\times 2$\uff0c\u30b9\u30c8\u30e9\u30a4\u30c9 $2$ \u3067 $4 \\times 4$ \u306e\u5165\u529b\u753b\u50cf\u3092\u30d7\u30fc\u30ea\u30f3\u30b0\u3092\u3057\u3066\u3044\u307e\u3059\uff0e\n\n<img width=\"400\" alt=\"pool.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/82527/98b4812a-decc-d2c8-c29f-db18d7df97c3.png\">\n\n\n# \u5b66\u7fd2\n\nCNN\u306e\u5b66\u7fd2\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\uff0e\n\u4ee5\u524d\u66f8\u3044\u305f[\u300epython\u3067\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5b9f\u88c5\u300f](http://qiita.com/ta-ka/items/bcdfd2d9903146c51dcb)\u306e\u8aa4\u5dee\u9006\u4f1d\u64ad\u306e\u7ae0\u304c\u53c2\u8003\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n## \u91cd\u307f\u306e\u66f4\u65b0\n\n\u5b66\u7fd2\u30c7\u30fc\u30bf\u304b\u3089\u8a08\u7b97\u3055\u308c\u308b\u51fa\u529b\u5024\u3092\u6559\u5e2b\u30e9\u30d9\u30eb\u306b\u8fd1\u3065\u3051\u308b\u305f\u3081\u306b\uff0c\u8aa4\u5dee\u95a2\u6570 $E$ \u306e\u6700\u5c0f\u5316\u3092\u8003\u3048\u307e\u3059\uff0e\n\u8aa4\u5dee\u95a2\u6570 $E$ \u3092\u91cd\u307f $w$ \u3067\u504f\u5fae\u5206\u3057\uff0c$0$ \u306b\u8fd1\u3065\u304f\u3088\u3046\u306b\u91cd\u307f\u3092\u66f4\u65b0\u3057\u307e\u3059\uff0e\n\n```math\nw_{new} = w_{old} - \\varepsilon \\frac{\\partial E}{\\partial w_{old}}\n```\n\n## \u8aa4\u5dee\u9006\u4f1d\u64ad\n\n\u8aa4\u5dee\u9006\u4f1d\u64ad\u306e\u8a08\u7b97\u65b9\u6cd5\u306f\uff0c\u4e00\u822c\u7684\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u5909\u308f\u308a\u307e\u305b\u3093\uff0e\n$l+1$ \u5c64\u306e\u8aa4\u5dee $\\delta^{(l+1)}$ \u3068\u91cd\u307f $w^{(l+1)}$ \u304a\u3088\u3073 $l$ \u5c64\u76ee\u304b\u3089\u306e\u5165\u529b\u306e\u5fae\u5206\u5024\u306e\u7a4d\u3067\uff0c$l$ \u5c64\u3067\u306e\u8aa4\u5dee\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u305f\u3060\u3057\uff0c\u4ee5\u4e0b\u306e2\u70b9\u304cCNN\u3068\u5168\u7d50\u5408\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u7570\u306a\u308a\u307e\u3059\uff0e\n\n* \u7573\u8fbc\u307f\u5c64\u304a\u3088\u3073\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3067\u7279\u5b9a\u306e\u30e6\u30cb\u30c3\u30c8\u306e\u307f\u304c\u7d50\u5408\u3057\u3066\u3044\u308b\n* \u7573\u8fbc\u307f\u5c64\u3067\u91cd\u307f\u304c\u5171\u6709\u3055\u308c\u3066\u3044\u308b\n\n\n# python\u3067\u306e\u5b9f\u88c5\n\n\u4eca\u56de[ Chainer\u306b\u3088\u308b\u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5b9f\u88c5 ](http://aidiary.hatenablog.com/entry/20151007/1444223445)\u3067\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\n\u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9\u306f[ \u3053\u3053 ](https://github.com/shota-takayama/cnn)\u306b\u3042\u3052\u3066\u3042\u308a\u307e\u3059\uff0e\n\u7573\u8fbc\u307f\u5c64\uff0c\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306b\u5206\u3051\u3066\u5b9f\u88c5\u4e0a\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n## \u7573\u8fbc\u307f\u5c64\u306e\u5b9f\u88c5\n\n\u7573\u8fbc\u307f\u5c64\u3067\u306f\uff0c\u307e\u305a\u753b\u50cf\u306e\u5c40\u6240\u9818\u57df\u3092\u5207\u308a\u51fa\u3057\uff0c\u9806\u756a\u306b\u4e26\u3079\u305f\u3082\u306e\u3092\u5165\u529b\u3068\u3057\u3066\u9806\u4f1d\u64ad\u3057\u3066\u3044\u307e\u3059\uff0e\n\u4f8b\u3048\u3070\uff0c$20 \\times 12 \\times 12$ \u306e\u5165\u529b\u753b\u50cf\u3092 $50 \\times 20 \\times 5 \\times 5$ \u306e\u30d5\u30a3\u30eb\u30bf\u3067\u7573\u8fbc\u3080\u5834\u5408\uff0c\u4e0b\u56f3\u306e\u3088\u3046\u306b\u5165\u529b\u753b\u50cf\u3092\u6210\u5f62\u3057\u307e\u3059\uff0e\n\u6210\u5f62\u3055\u308c\u305f\u5165\u529b\u306e\u30b5\u30a4\u30ba\u306f\uff0c$64 \\times 20 \\times 5 \\times 5$ \u3068\u306a\u308a\u307e\u3059\uff0e\n$64$ \u3068\u3044\u3046\u6570\u5024\u306f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u8a08\u7b97\u3055\u308c\u307e\u3059\uff0e\n$(12 - \\lfloor 5 / 2 \\rfloor \\times 2) \\times (12 - \\lfloor 5 / 2 \\rfloor \\times 2) = 64$\n\n<img width=\"700\" alt=\"im2patch.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/82527/3e902509-25bf-2def-bae9-5b2c4acf708f.png\">\n\n\u6210\u5f62\u3057\u305f\u5165\u529b\u753b\u50cf\u3068\u30d5\u30a3\u30eb\u30bf\u306e\u7573\u8fbc\u307f\u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\n\u7e70\u308a\u8fd4\u3057\u306b\u306a\u308a\u307e\u3059\u304c\uff0c\u5165\u529b\u304a\u3088\u3073\u30d5\u30a3\u30eb\u30bf\u306e\u30b5\u30a4\u30ba\u306f\uff0c\u305d\u308c\u305e\u308c $64 \\times 20 \\times 5 \\times 5$\uff0c$50 \\times 20 \\times 5 \\times 5$ \u3067\u3059\uff0e\n```np.tensordot(X, weight, ((1, 2, 3), (1, 2, 3)))``` \u306b\u3088\u308a $64 \\times 50$ \u306e\u51fa\u529b\u304c\u5f97\u3089\u308c\u307e\u3059\uff0e\n\n<img width=\"1000\" alt=\"tensordot.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/82527/1f8aaf87-bc78-a0f2-e798-888dec58990b.png\">\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\uff0c\u7573\u8fbc\u307f\u5c64\u306b\u304a\u3051\u308b\u9806\u4f1d\u64ad\u306e\u30ad\u30fc\u3068\u306a\u308b\u90e8\u5206\u3067\u3059\uff0e\n\u30df\u30cb\u30d0\u30c3\u30c1\u3067\u5b66\u7fd2\u3067\u304d\u308b\u3088\u3046\u5165\u529b\u306e\u6b21\u5143\u6570\u304c\u4e00\u3064\u5897\u3048\u3066\u3044\u308b\u306e\u3067\uff0c```tensordot``` \u306e\u5f15\u6570\u306f\u4e00\u3064\u305a\u308c\u3066 ```axes = ((2, 3, 4), (1, 2, 3))``` \u3068\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n\n```py\n    def __forward(self, X):\n        s_batch, k, xh, xw = X.shape\n        m = self.weight.shape[0]\n        oh, ow = xh - self.kh / 2 * 2, xw - self.kw / 2 * 2\n        self.__patch = self.__im2patch(X, s_batch, k, oh, ow)\n        return np.tensordot(self.__patch, self.weight, ((2, 3, 4), (1, 2, 3))).swapaxes(1, 2).reshape(s_batch, m, oh, ow)\n\n\n    def __im2patch(self, X, s_batch, k, oh, ow):\n        patch = np.zeros((s_batch, oh * ow, k, self.kh, self.kw))\n        for j in range(oh):\n            for i in range(ow):\n                patch[:, j * ow + i, :, :, :] = X[:, :, j:j+self.kh, i:i+self.kw]\n        return patch\n```\n\n\u7573\u8fbc\u307f\u5c64\u306b\u304a\u3051\u308b\u9006\u4f1d\u64ad\u3067\u306f\uff0c\u4e00\u3064\u5148\u306e\u5c64\u306e $\\delta$ \u304a\u3088\u3073\u30d5\u30a3\u30eb\u30bf\u306e\u4fc2\u6570\u306e\u7a4d\u304c\u9006\u4f1d\u64ad\u3055\u305b\u308b\u8aa4\u5dee\u3068\u306a\u308a\u307e\u3059\uff0e\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\n\u5c40\u6240\u9818\u57df\u3054\u3068\u306b\u5f97\u3089\u308c\u305f\u8aa4\u5dee\u3092\u5165\u529b\u753b\u50cf\u306e\u5f62\u306b\u518d\u6210\u5f62\u3057\u3066\u3044\u307e\u3059\uff0e\n\u3053\u308c\u306f\uff0c\u9806\u4f1d\u64ad\u306e\u3068\u304d\u5165\u529b\u753b\u50cf\u3092\u5c40\u6240\u9818\u57df\u306b\u5207\u308a\u51fa\u3057\u305f\u51e6\u7406\u3068\u9006\u306e\u51e6\u7406\u306b\u306a\u308a\u307e\u3059\uff0e\n\n```py\n    def backward(self, delta, shape):\n        s_batch, k, h, w = delta.shape\n        delta_patch = np.tensordot(delta.reshape(s_batch, k, h * w), self.weight, (1, 0))\n        return self.__patch2im(delta_patch, h, w, shape)\n\n    def __patch2im(self, patch, h, w, shape):\n        im = np.zeros(shape)\n        for j in range(h):\n            for i in range(w):\n                im[:, :, j:j+self.kh, i:i+self.kw] += patch[:, j * w + i]\n        return im\n\n```\n\n## \u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306e\u5b9f\u88c5\n\n\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3067\u306e\u9806\u4f1d\u64ad\u3082\u5165\u529b\u753b\u50cf\u3092\u6210\u5f62\u3057\uff0c\u5c40\u6240\u9818\u57df\u3092\u9806\u756a\u306b\u4e26\u3079\u307e\u3059\uff0e\n\u7573\u8fbc\u307f\u5c64\u3068\u7570\u306a\u308b\u306e\u306f\uff0c\u6700\u5927\u5024\u3092\u4e0e\u3048\u305f\u753b\u7d20\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4fdd\u5b58\u3057\u3066\u3044\u308b\u70b9\u3067\u3059\uff0e\n\u3053\u308c\u306f\uff0c\u3069\u306e\u753b\u7d20\u304b\u3089\u5024\u304c\u4f1d\u64ad\u3055\u308c\u3066\u304d\u305f\u304b\u3068\u3044\u3046\u60c5\u5831\u3092\u4f7f\u3063\u3066\uff0c\u8aa4\u5dee\u3092\u9006\u4f1d\u64ad\u3059\u308b\u305f\u3081\u3067\u3059\uff0e\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c\uff0c\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u306b\u304a\u3051\u308b\u9806\u4f1d\u64ad\u306e\u30ad\u30fc\u3068\u306a\u308b\u90e8\u5206\u3067\u3059\uff0e\n\n```py\n    def forward(self, X):\n        s_batch, k, h, w = X.shape\n        oh, ow = (h - self.kh) / self.s + 1, (w - self.kw) / self.s + 1\n        val, self.__ind = self.__max(X, s_batch, k, oh, ow)\n        return val\n\n    def __max(self, X, s_batch, k, oh, ow):\n        patch = self.__im2patch(X, s_batch, k, oh, ow)\n        return map(lambda _f: _f(patch, axis = 3).reshape(s_batch, k, oh, ow), [np.max, np.argmax])\n\n\n    def __im2patch(self, X, s_batch, k, oh, ow):\n        patch = np.zeros((s_batch, oh * ow, k, self.kh, self.kw))\n        for j in range(oh):\n            for i in range(ow):\n                _j, _i = j * self.s, i * self.s\n                patch[:, j * ow + i, :, :, :] = X[:, :, _j:_j+self.kh, _i:_i+self.kw]\n        return patch.swapaxes(1, 2).reshape(s_batch, k, oh * ow, -1)\n\n```\n\n\u4e0a\u8ff0\u306e\u3088\u3046\u306b\uff0c\u30d7\u30fc\u30ea\u30f3\u30b0\u5c64\u3067\u306e\u9006\u4f1d\u64ad\u306f\uff0c\u6700\u5927\u5024\u3092\u4e0e\u3048\u305f\u753b\u7d20\u306b\u5bfe\u3057\u3066\u305d\u306e\u307e\u307e\u8aa4\u5dee\u3092\u4f1d\u64ad\u3057\u3066\u3044\u307e\u3059\uff0e\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\n\n```py\n    def backward(self, X, delta, act):\n        s_batch, k, h, w = X.shape\n        oh, ow = delta.shape[2:]\n        rh, rw = h / oh, w / ow\n        ind = np.arange(s_batch * k * oh * ow) * rh * rw + self.__ind.flatten()\n        return self.__backward(delta, ind, s_batch, k, h, w, oh, ow) * act.derivate(X)\n\n    def __backward(self, delta, ind, s_batch, k, h, w, oh, ow):\n        _delta = np.zeros(s_batch * k * h * w)\n        _delta[ind] = delta.flatten()\n        return _delta.reshape(s_batch, k, oh, ow, self.kh, self.kw).swapaxes(3, 4).reshape(s_batch, k, h, w)\n```\n\n\n# MNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u306e\u5b9f\u9a13\n\nMNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f7f\u3063\u3066\uff0c\u624b\u66f8\u304d\u6570\u5b57\u3092\u5b66\u7fd2\u3057\u307e\u3057\u305f\uff0e\n\u5c64\u306e\u69cb\u9020\u306f\uff0c[ Chainer\u306b\u3088\u308b\u7573\u307f\u8fbc\u307f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5b9f\u88c5 ](http://aidiary.hatenablog.com/entry/20151007/1444223445)\u3068\u540c\u3058\u3067\u3059\uff0e\n\n## \u5b66\u7fd2 \n\u5404\u7a2e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\uff0e\n\u5165\u529b\u30c7\u30fc\u30bf\uff1a$28 \\times 28$ \u306e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf $10000$ \u679a\n\u5b66\u7fd2\u7387\uff1a$\\varepsilon = 0.005$\n\u6b63\u5247\u5316\u9805\u306e\u4fc2\u6570\uff1a$\\lambda = 0.0001$\n\u5b66\u7fd2\u7387\u306e\u6e1b\u8870\u4fc2\u6570\uff1a$\\gamma = 0.9$\n\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\uff1a$5$\n\u30a8\u30dd\u30c3\u30af\uff1a$50$\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\uff1a\u5165\u529b\u30c7\u30fc\u30bf\u3068\u540c\u3058\u30b5\u30a4\u30ba\u306e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf $100$ \u679a\n\n## \u7d50\u679c\n\n\u5404\u30a8\u30dd\u30c3\u30af\u306b\u304a\u3051\u308b\u30ed\u30b9\u3092\u63cf\u753b\u3057\u305f\u30b0\u30e9\u30d5\u304c\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\uff0e\n\u6700\u7d42\u7684\u306b\u30ed\u30b9\u306f\uff0c$0.104299490259$ \u307e\u3067\u4e0b\u304c\u308a\u307e\u3057\u305f\uff0e\n\u307e\u305f\uff0c\u30c6\u30b9\u30c8\u753b\u50cf $100$ \u679a\u3067\u306e\u8b58\u5225\u7cbe\u5ea6\u306f\uff0c$\\boldsymbol{0.96}$ \u3067\u3057\u305f\uff0e\n\n<img width=\"600\" alt=\"loss.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/82527/392123ef-78bb-b50e-173c-2cc239ed0832.png\">\n\n\n# \u304a\u308f\u308a\u306b\n\nCNN\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\uff0e\n\u4eca\u56de\u30d1\u30c7\u30a3\u30f3\u30b0\u3084batch normalization\u3092\u5b9f\u88c5\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u304c\uff0c\u75b2\u308c\u305f\u306e\u3067\u7d42\u308f\u308a\u306b\u3057\u307e\u3059\uff0e\n\u30e9\u30a4\u30d6\u30e9\u30ea\u4f5c\u3063\u3066\u3044\u308b\u4eba\u305f\u3061\u51c4\u3044\u3068\u611f\u3058\u307e\u3057\u305f\uff0e\n", "tags": ["\u6a5f\u68b0\u5b66\u7fd2", "CNN", "Python"]}