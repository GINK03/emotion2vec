{"context": " More than 1 year has passed since last update.\nsqlalchemy_with_mssql.py\nimport yaml\nimport urllib\nimport sqlalchemy\nfrom sqlalchemy.orm.session import sessionmaker\n\n\ndef create_engine():\n    con_info = yaml.load(file)\n    con_format = \";\".join([\n        \"DRIVER={{SQL Server}}\", # escape for format method\n        \"SERVER=localhost\",\n        \"DATABASE={database}\",\n        \"UID={user}\",\n        \"PWD={password}\",\n    ]) + \";\"\n    con_params = urllib.parse.quote_plus(con_format.format(**con_info))\n    engine = sqlalchemy.create_engine(\"mssql+pyodbc:///?odbc_connect=%s\" % con_params)\n\n    return engine\n\n\ndef select_df(query, params):\n    Session = sessionmaker(bind=create_engine())\n    session = Session()\n    result = session.execute(query, params)\n\n    if result.rowcount == 0:\n        return pd.DataFrame(columns=result.keys())\n    return pd.DataFrame((r for r in result), columns=result.keys())\n\n\n```py3:sqlalchemy_with_mssql.py\nimport yaml\nimport urllib\nimport sqlalchemy\nfrom sqlalchemy.orm.session import sessionmaker\n\n\ndef create_engine():\n    con_info = yaml.load(file)\n    con_format = \";\".join([\n        \"DRIVER={{SQL Server}}\", # escape for format method\n        \"SERVER=localhost\",\n        \"DATABASE={database}\",\n        \"UID={user}\",\n        \"PWD={password}\",\n    ]) + \";\"\n    con_params = urllib.parse.quote_plus(con_format.format(**con_info))\n    engine = sqlalchemy.create_engine(\"mssql+pyodbc:///?odbc_connect=%s\" % con_params)\n\n    return engine\n\n\ndef select_df(query, params):\n    Session = sessionmaker(bind=create_engine())\n    session = Session()\n    result = session.execute(query, params)\n\n    if result.rowcount == 0:\n        return pd.DataFrame(columns=result.keys())\n    return pd.DataFrame((r for r in result), columns=result.keys())\n```\n", "tags": ["memo"]}