{"context": " More than 1 year has passed since last update.iOS\u958b\u767a\u3067\u64ae\u5f71\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u8abf\u3079\u308b\u3068\u3001\u30e9\u30a4\u30d6\u30d3\u30e5\u30fc\u8868\u793a\u4e2d\u306b\u64ae\u5f71\u3059\u308b\u3082\u306e\u3057\u304b\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u30e9\u30a4\u30d6\u30d3\u30e5\u30fc\u7121\u3057\u3067\u64ae\u5f71\u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u6ce8\u610f\n\u30b9\u30c8\u30a2\u7533\u8acb\u901a\u308b\u304b\u306f\u307e\u3060\u4e0d\u660e\u3067\u3059\u3002\u7533\u8acb\u901a\u308a\u6b21\u7b2c\u5831\u544a\u3057\u307e\u3059\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nhttp://swift-salaryman.com/avcapture.1.php\n\u30b3\u30fc\u30c9\u306e\u5927\u534a\u306f\u3053\u3053\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u30b3\u30fc\u30c9\n\nSecretCamera.swift\n\nimport UIKit\nimport AVFoundation\n\nclass SecretCamera: NSObject {\n\n    var secretView : UIView!\n\n    var stillImageOutput: AVCaptureStillImageOutput!\n    var captureSession: AVCaptureSession!\n    var videoconnection: AVCaptureConnection!\n\n    func open()\n    {\n        //\u30b9\u30af\u30ea\u30fc\u30f3\u306e\u5e45\n        let screenWidth = UIScreen.mainScreen().bounds.size.width;\n        //\u30b9\u30af\u30ea\u30fc\u30f3\u306e\u9ad8\u3055\n        let screenHeight = UIScreen.mainScreen().bounds.size.height;\n\n        self.secretView = UIView(frame: CGRectMake(0.0, 0.0, screenWidth, screenHeight))\n    }\n\n    func configureCamera() -> Bool {\n        // init camera device\n        var captureDevice: AVCaptureDevice?\n        var devices: NSArray = AVCaptureDevice.devices()\n\n        // find back camera\n        for device: AnyObject in devices {\n            if device.position == AVCaptureDevicePosition.Front {\n                captureDevice = device as? AVCaptureDevice\n            }\n        }\n\n        if (captureDevice != nil) {\n            // Debug\n            println(captureDevice!.localizedName)\n            println(captureDevice!.modelID)\n        } else {\n            println(\"Missing Camera\")\n            return false\n        }\n\n        var error: NSErrorPointer = nil\n        var deviceInput: AVCaptureInput = AVCaptureDeviceInput.deviceInputWithDevice(captureDevice, error: error) as! AVCaptureInput\n\n        self.stillImageOutput = AVCaptureStillImageOutput()\n\n        // init session\n        self.captureSession = AVCaptureSession()\n        self.captureSession.sessionPreset = AVCaptureSessionPresetPhoto\n        self.captureSession.addInput(deviceInput as AVCaptureInput)\n        self.captureSession.addOutput(self.stillImageOutput)\n\n        // layer for preview\n        var previewLayer: AVCaptureVideoPreviewLayer = AVCaptureVideoPreviewLayer.layerWithSession(self.captureSession) as! AVCaptureVideoPreviewLayer\n        previewLayer.frame = secretView.frame\n        //self.view.layer.addSublayer(previewLayer)\n\n        self.captureSession.startRunning()\n\n        return true\n    }\n\n    func takePhoto(){\n        if let stillOutput = self.stillImageOutput {\n            //\u30b9\u30ec\u30c3\u30c9\u3067\u5b89\u5168\u306b\u5229\u7528\u3057\u3066\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u306a\u3044\u3088\u3046\u306b\n            dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0)) {\n                //\u30d3\u30c7\u30aa\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u63a2\u3059\n                //self.videoconnection = AVCaptureConnection()!\n                if let videoConnection = stillOutput.connectionWithMediaType(AVMediaTypeVideo){\n                    self.stillImageOutput.captureStillImageAsynchronouslyFromConnection(videoConnection){\n                        (imageSampleBuffer : CMSampleBuffer!, _) in\n                        let imageDataJpeg = AVCaptureStillImageOutput.jpegStillImageNSDataRepresentation(imageSampleBuffer)\n                        var pickedImage: UIImage = UIImage(data: imageDataJpeg)!\n                        UIImageWriteToSavedPhotosAlbum(pickedImage, nil, nil, nil)\n                    }\n                    self.captureSession.stopRunning()\n                }\n            }\n        }\n    }\n}\n\n\n\n\n\u4f7f\u3044\u65b9\n\u3000open \u2192\u3000configureCamera\u3000\u2192 takePhoto\u3000\u306e\u9806\u3067\u547c\u3073\u51fa\u3059\u3060\u3051\niOS\u958b\u767a\u3067\u64ae\u5f71\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u8abf\u3079\u308b\u3068\u3001\u30e9\u30a4\u30d6\u30d3\u30e5\u30fc\u8868\u793a\u4e2d\u306b\u64ae\u5f71\u3059\u308b\u3082\u306e\u3057\u304b\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u30e9\u30a4\u30d6\u30d3\u30e5\u30fc\u7121\u3057\u3067\u64ae\u5f71\u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\n#\u6ce8\u610f\n\u30b9\u30c8\u30a2\u7533\u8acb\u901a\u308b\u304b\u306f\u307e\u3060\u4e0d\u660e\u3067\u3059\u3002\u7533\u8acb\u901a\u308a\u6b21\u7b2c\u5831\u544a\u3057\u307e\u3059\u3002\n\n#\u53c2\u8003\u30b5\u30a4\u30c8\nhttp://swift-salaryman.com/avcapture.1.php\n\u30b3\u30fc\u30c9\u306e\u5927\u534a\u306f\u3053\u3053\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n#\u30b3\u30fc\u30c9\n\n````swift:SecretCamera.swift\n    \nimport UIKit\nimport AVFoundation\n    \nclass SecretCamera: NSObject {\n    \n    var secretView : UIView!\n    \n    var stillImageOutput: AVCaptureStillImageOutput!\n    var captureSession: AVCaptureSession!\n    var videoconnection: AVCaptureConnection!\n    \n    func open()\n    {\n        //\u30b9\u30af\u30ea\u30fc\u30f3\u306e\u5e45\n        let screenWidth = UIScreen.mainScreen().bounds.size.width;\n        //\u30b9\u30af\u30ea\u30fc\u30f3\u306e\u9ad8\u3055\n        let screenHeight = UIScreen.mainScreen().bounds.size.height;\n        \n        self.secretView = UIView(frame: CGRectMake(0.0, 0.0, screenWidth, screenHeight))\n    }\n    \n    func configureCamera() -> Bool {\n        // init camera device\n        var captureDevice: AVCaptureDevice?\n        var devices: NSArray = AVCaptureDevice.devices()\n        \n        // find back camera\n        for device: AnyObject in devices {\n            if device.position == AVCaptureDevicePosition.Front {\n                captureDevice = device as? AVCaptureDevice\n            }\n        }\n        \n        if (captureDevice != nil) {\n            // Debug\n            println(captureDevice!.localizedName)\n            println(captureDevice!.modelID)\n        } else {\n            println(\"Missing Camera\")\n            return false\n        }\n        \n        var error: NSErrorPointer = nil\n        var deviceInput: AVCaptureInput = AVCaptureDeviceInput.deviceInputWithDevice(captureDevice, error: error) as! AVCaptureInput\n        \n        self.stillImageOutput = AVCaptureStillImageOutput()\n        \n        // init session\n        self.captureSession = AVCaptureSession()\n        self.captureSession.sessionPreset = AVCaptureSessionPresetPhoto\n        self.captureSession.addInput(deviceInput as AVCaptureInput)\n        self.captureSession.addOutput(self.stillImageOutput)\n        \n        // layer for preview\n        var previewLayer: AVCaptureVideoPreviewLayer = AVCaptureVideoPreviewLayer.layerWithSession(self.captureSession) as! AVCaptureVideoPreviewLayer\n        previewLayer.frame = secretView.frame\n        //self.view.layer.addSublayer(previewLayer)\n        \n        self.captureSession.startRunning()\n        \n        return true\n    }\n    \n    func takePhoto(){\n        if let stillOutput = self.stillImageOutput {\n            //\u30b9\u30ec\u30c3\u30c9\u3067\u5b89\u5168\u306b\u5229\u7528\u3057\u3066\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u306a\u3044\u3088\u3046\u306b\n            dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0)) {\n                //\u30d3\u30c7\u30aa\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u63a2\u3059\n                //self.videoconnection = AVCaptureConnection()!\n                if let videoConnection = stillOutput.connectionWithMediaType(AVMediaTypeVideo){\n                    self.stillImageOutput.captureStillImageAsynchronouslyFromConnection(videoConnection){\n                        (imageSampleBuffer : CMSampleBuffer!, _) in\n                        let imageDataJpeg = AVCaptureStillImageOutput.jpegStillImageNSDataRepresentation(imageSampleBuffer)\n                        var pickedImage: UIImage = UIImage(data: imageDataJpeg)!\n                        UIImageWriteToSavedPhotosAlbum(pickedImage, nil, nil, nil)\n                    }\n                    self.captureSession.stopRunning()\n                }\n            }\n        }\n    }\n}\n\n````\n\n#\u4f7f\u3044\u65b9\n\u3000open \u2192\u3000configureCamera\u3000\u2192 takePhoto\u3000\u306e\u9806\u3067\u547c\u3073\u51fa\u3059\u3060\u3051\n", "tags": ["iOS", "iPhone", "iOS8", "Swift", "\u30ab\u30e1\u30e9"]}