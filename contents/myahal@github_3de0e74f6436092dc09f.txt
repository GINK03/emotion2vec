{"tags": ["CodeDeploy", "lambda", "Scala"], "context": " More than 1 year has passed since last update.\n\n\u524d\u63d0\n\nCodeDeploy\u5074\u3067Application, DeploymentGroup, AutoScaling\u306a\u3069\u306a\u3069\u306e\u8a2d\u5b9a\u304c\u7d42\u308f\u3063\u3066\u3044\u308b\u3053\u3068\nLambda\u306e\u8a2d\u5b9a\u306f\u57fa\u672c\u7684\u306b\u306f\nhttp://aws.typepad.com/sajp/2015/04/automatically-deploy-from-amazon-s3-using-aws-codedeploy.html\n\u3068\u540c\u3058\uff08\u73fe\u5728\u306f\u4e0d\u8981\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u308f\u308c\u308b\u624b\u9806\u3082\u3042\u308b\uff09\n\n\n\u624b\u9806\n\n\nLambda\u5074\n\u57fa\u672c\u7684\u306b\u306fAWS\u30d6\u30ed\u30b0\u3068\u540c\u3058\u306a\u306e\u3067\u5dee\u5206\u3060\u3051\n\n\u5fc5\u8981\u306aRole\u306fExecution Role\u3060\u3051\nLambda\u306e\u8a2d\u5b9a\u306f\u5c11\u3057\u753b\u9762\u304c\u5909\u308f\u3063\u3066\u3044\u308b\nLambda\u95a2\u6570\u306e\u8a2d\u5b9a\n\n\nSelect blueprint\u306fSkip\nName, Description\u306f\u9069\u5f53\u306b\u3002Runtime\u306fNode.js\nCode\u306fAWS\u30d6\u30ed\u30b0\u304b\u3089\u30b3\u30d4\u30fc\u3002\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u4fee\u6b63\u3059\u308b\nHandler\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306eindex.handler\nRole\u306f\u5148\u307b\u3069\u4f5c\u3063\u305fRole\u3092\u8a2d\u5b9a\n\n\nEvent Source\u306e\u8a2d\u5b9a\n\n\nevent source\u30bf\u30d6\u3092\u9078\u629e\nEvent source type\u3092S3\u306b\u3057\u3066\u3001Bucket\u3092\u9078\u3076\nEvent type\u306fObject Created\n\n\n\n\n\n\u3053\u3053\u307e\u3067\u3067\u3001aws deploy push\u3059\u308b\u3068\u52dd\u624b\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3002\n\n\nsbt\u5074\n\u4eca\u56de\u306fsbt\u306e\u30bf\u30b9\u30af\u3068\u3057\u3066\u4f5c\u6210\u3002\n\nproject/plugins.sbt\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\n\nlibraryDependencies += \"com.amazonaws\" % \"aws-java-sdk\" % \"1.10.20\"\n\nlibraryDependencies += \"com.amazonaws\" % \"aws-java-sdk-s3\" % \"1.10.20\"\n\n\nbuild.sbt\u306b\u30bf\u30b9\u30af\u30ad\u30fc\u306e\u8a2d\u5b9a\u3092\u884c\u3046\uff08SettingKey\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\uff09\n\nlazy val bucketName = settingKey[String](\"S3 Bucket Name\")\n\nlazy val key = settingKey[String](\"S3 Key Name\")\n\nlazy val appName = settingKey[String](\"CodeDeploy Application Name\")\n\nlazy val dirName = settingKey[String](\"Source directory name\")\n\nlazy val push = taskKey[Unit](\"push zip to S3 for CodeDeploy\")\n\nbucketName := <Bucket Name>\n\nkey := <S3 Key Name>\n\nappName := <Application Name>\n\ndirName := <\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea>\n\nlazy val push = taskKey[Unit](\"push zip to S3 for CodeDeploy\")\n\npush := {\n    DeployPush.push(dirName.value, bucketName.value, key.value, appName.value)\n}\n\n\nproject/DeployPush.scala\u306b\u30b3\u30fc\u30c9\u3092\u8a2d\u5b9a\n\nimport com.amazonaws.regions._\nimport com.amazonaws.services.codedeploy.AmazonCodeDeployClient\nimport com.amazonaws.services.codedeploy.model._\nimport com.amazonaws.services.s3.AmazonS3Client\nimport com.amazonaws.services.s3.model.{PutObjectRequest, PutObjectResult}\nimport sbt._\n\nobject DeployPush {\n    def push(dir: String, bucketName: String, key: String, appName: String): Unit = {\n        val s3Client: AmazonS3Client = new AmazonS3Client()\n        s3Client.setRegion(Region.getRegion(Regions.AP_NORTHEAST_1))\n        val depClient: AmazonCodeDeployClient = new AmazonCodeDeployClient()\n        verifySetting(depClient, appName)\n\n        val zipFile: File = java.io.File.createTempFile(appName + \"-\", \".zip\")\n        IO.zip(sbt.Path.allSubpaths(new File(dir)), zipFile)\n        val key: String = zipFile.getName\n\n        val req: PutObjectRequest = new PutObjectRequest(bucketName, key, zipFile)\n        println(\"put Object to S3 : \" + zipFile.getName)\n        val res: PutObjectResult = s3Client.putObject(req)\n\n        val s3Loc: S3Location =\n            new S3Location().\n            withBucket(bucketName).\n            withKey(key).\n            withBundleType(BundleType.Zip).\n            withETag(res.getETag)\n        println(\"Location: \" + s3Loc.getKey)\n        println(\"Version: \" + s3Loc.getVersion)\n        println(\"ETag: \" + s3Loc.getETag)\n\n        val revLoc: RevisionLocation =\n            new RevisionLocation().\n            withRevisionType(RevisionLocationType.S3).\n            withS3Location(s3Loc)\n\n        val revReq: RegisterApplicationRevisionRequest =\n            new RegisterApplicationRevisionRequest().\n            withApplicationName(appName).\n            withRevision(revLoc)\n        depClient.registerApplicationRevision(revReq)\n    }\n\n    private def verifySetting(depClient: AmazonCodeDeployClient, appName: String) {\n        val applications: ListApplicationsResult = depClient.listApplications\n        if (!applications.getApplications.contains(appName)) {\n            println(\"applicationName(\" + appName + \") not found\")\n            throw new Exception()\n        }\n    }\n}\n\n\n\n\n\u30c7\u30d7\u30ed\u30a4\u624b\u9806\n\nsbt clean assembly\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u968e\u5c64\u3092\u7528\u610f\u3057\u3066\u304a\u304f(build.sbt\u3067assemblyJarName\u3092\u8a2d\u5b9a\u3057\u3066\u3001\u8a72\u5f53\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3068\u5c11\u3057\u5e78\u305b\uff09\n\u251c\u2500\u2500 appspec.yml\n\u251c\u2500\u2500 content\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 hogehoge.jar\n\u2514\u2500\u2500 scripts\n\u251c\u2500\u2500 start_server.sh\n\u2514\u2500\u2500 stop_server.sh\n\n\nsbt push\n\n\u3053\u308c\u3067Lambda\u304c\u6c17\u304c\u3064\u3044\u3066\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\n\n\u304d\u306b\u306a\u308b\u3068\u3053\u308d\n\nSettingKey\u3092\"appName in Push\"\u3068\u304b\u306b\u3057\u305f\u304b\u3063\u305f\u3093\u3060\u3051\u3069\u3001\u3069\u3046\u3084\u3063\u3066\u8a2d\u5b9a\u3059\u308b\u306e\u304b\u3088\u304f\u308f\u304b\u3089\u306a\u3044\n\n\n# \u524d\u63d0\n\n- CodeDeploy\u5074\u3067Application, DeploymentGroup, AutoScaling\u306a\u3069\u306a\u3069\u306e\u8a2d\u5b9a\u304c\u7d42\u308f\u3063\u3066\u3044\u308b\u3053\u3068\n- Lambda\u306e\u8a2d\u5b9a\u306f\u57fa\u672c\u7684\u306b\u306f\nhttp://aws.typepad.com/sajp/2015/04/automatically-deploy-from-amazon-s3-using-aws-codedeploy.html\n\u3068\u540c\u3058\uff08\u73fe\u5728\u306f\u4e0d\u8981\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u308f\u308c\u308b\u624b\u9806\u3082\u3042\u308b\uff09\n\n# \u624b\u9806\n\n- Lambda\u5074\n\u57fa\u672c\u7684\u306b\u306fAWS\u30d6\u30ed\u30b0\u3068\u540c\u3058\u306a\u306e\u3067\u5dee\u5206\u3060\u3051\n\n\t- \u5fc5\u8981\u306aRole\u306fExecution Role\u3060\u3051\n\t- Lambda\u306e\u8a2d\u5b9a\u306f\u5c11\u3057\u753b\u9762\u304c\u5909\u308f\u3063\u3066\u3044\u308b\n\n\t- Lambda\u95a2\u6570\u306e\u8a2d\u5b9a\n\t\t- Select blueprint\u306fSkip\n\t\t- Name, Description\u306f\u9069\u5f53\u306b\u3002Runtime\u306fNode.js\n\t\t- Code\u306fAWS\u30d6\u30ed\u30b0\u304b\u3089\u30b3\u30d4\u30fc\u3002\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u4fee\u6b63\u3059\u308b\n\t\t- Handler\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306eindex.handler\n\t\t- Role\u306f\u5148\u307b\u3069\u4f5c\u3063\u305fRole\u3092\u8a2d\u5b9a\n\t- Event Source\u306e\u8a2d\u5b9a\n\t\t- event source\u30bf\u30d6\u3092\u9078\u629e\n\t\t- Event source type\u3092S3\u306b\u3057\u3066\u3001Bucket\u3092\u9078\u3076\n\t\t- Event type\u306fObject Created\n\n\u3053\u3053\u307e\u3067\u3067\u3001aws deploy push\u3059\u308b\u3068\u52dd\u624b\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3002\n\n- sbt\u5074\n\u4eca\u56de\u306fsbt\u306e\u30bf\u30b9\u30af\u3068\u3057\u3066\u4f5c\u6210\u3002\n\n\t- project/plugins.sbt\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\n\t\n\t```\n\tlibraryDependencies += \"com.amazonaws\" % \"aws-java-sdk\" % \"1.10.20\"\n\n\tlibraryDependencies += \"com.amazonaws\" % \"aws-java-sdk-s3\" % \"1.10.20\"\n\t```\n\n\t- build.sbt\u306b\u30bf\u30b9\u30af\u30ad\u30fc\u306e\u8a2d\u5b9a\u3092\u884c\u3046\uff08SettingKey\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\uff09\n\t\n\t```\n\tlazy val bucketName = settingKey[String](\"S3 Bucket Name\")\n\n\tlazy val key = settingKey[String](\"S3 Key Name\")\n\n\tlazy val appName = settingKey[String](\"CodeDeploy Application Name\")\n\n\tlazy val dirName = settingKey[String](\"Source directory name\")\n\n\tlazy val push = taskKey[Unit](\"push zip to S3 for CodeDeploy\")\n\n\tbucketName := <Bucket Name>\n\n\tkey := <S3 Key Name>\n\n\tappName := <Application Name>\n\n\tdirName := <\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea>\n\t\n\tlazy val push = taskKey[Unit](\"push zip to S3 for CodeDeploy\")\n\t\n\tpush := {\n  \t\tDeployPush.push(dirName.value, bucketName.value, key.value, appName.value)\n\t}\n\t```\n\t\n\t- project/DeployPush.scala\u306b\u30b3\u30fc\u30c9\u3092\u8a2d\u5b9a\n\t\n\t```\n\timport com.amazonaws.regions._\n\timport com.amazonaws.services.codedeploy.AmazonCodeDeployClient\n\timport com.amazonaws.services.codedeploy.model._\n\timport com.amazonaws.services.s3.AmazonS3Client\n\timport com.amazonaws.services.s3.model.{PutObjectRequest, PutObjectResult}\n\timport sbt._\n\n\tobject DeployPush {\n  \t\tdef push(dir: String, bucketName: String, key: String, appName: String): Unit = {\n    \t\tval s3Client: AmazonS3Client = new AmazonS3Client()\n    \t\ts3Client.setRegion(Region.getRegion(Regions.AP_NORTHEAST_1))\n    \t\tval depClient: AmazonCodeDeployClient = new AmazonCodeDeployClient()\n    \t\tverifySetting(depClient, appName)\n\n    \t\tval zipFile: File = java.io.File.createTempFile(appName + \"-\", \".zip\")\n    \t\tIO.zip(sbt.Path.allSubpaths(new File(dir)), zipFile)\n    \t\tval key: String = zipFile.getName\n\n   \t \t\tval req: PutObjectRequest = new PutObjectRequest(bucketName, key, zipFile)\n    \t\tprintln(\"put Object to S3 : \" + zipFile.getName)\n    \t\tval res: PutObjectResult = s3Client.putObject(req)\n\n    \t\tval s3Loc: S3Location =\n      \t\t\tnew S3Location().\n        \t\twithBucket(bucketName).\n        \t\twithKey(key).\n        \t\twithBundleType(BundleType.Zip).\n        \t\twithETag(res.getETag)\n    \t\tprintln(\"Location: \" + s3Loc.getKey)\n    \t\tprintln(\"Version: \" + s3Loc.getVersion)\n    \t\tprintln(\"ETag: \" + s3Loc.getETag)\n\n    \t\tval revLoc: RevisionLocation =\n      \t\t\tnew RevisionLocation().\n        \t\twithRevisionType(RevisionLocationType.S3).\n        \t\twithS3Location(s3Loc)\n\n    \t\tval revReq: RegisterApplicationRevisionRequest =\n      \t\t\tnew RegisterApplicationRevisionRequest().\n        \t\twithApplicationName(appName).\n        \t\twithRevision(revLoc)\n    \t\tdepClient.registerApplicationRevision(revReq)\n  \t\t}\n  \t\t\n  \t\tprivate def verifySetting(depClient: AmazonCodeDeployClient, appName: String) {\n    \t\tval applications: ListApplicationsResult = depClient.listApplications\n    \t\tif (!applications.getApplications.contains(appName)) {\n      \t\t\tprintln(\"applicationName(\" + appName + \") not found\")\n      \t\t\tthrow new Exception()\n    \t\t}\n  \t\t}\n\t}\n\t```\n\t\n# \u30c7\u30d7\u30ed\u30a4\u624b\u9806\n\n- sbt clean assembly\n- \u3053\u3093\u306a\u611f\u3058\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u968e\u5c64\u3092\u7528\u610f\u3057\u3066\u304a\u304f(build.sbt\u3067assemblyJarName\u3092\u8a2d\u5b9a\u3057\u3066\u3001\u8a72\u5f53\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3068\u5c11\u3057\u5e78\u305b\uff09\n\t\n\t```\n\t\u251c\u2500\u2500 appspec.yml\n\u251c\u2500\u2500 content\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 hogehoge.jar\n\u2514\u2500\u2500 scripts\n    \u251c\u2500\u2500 start_server.sh\n    \u2514\u2500\u2500 stop_server.sh\n\t```\n- sbt push\n\n\u3053\u308c\u3067Lambda\u304c\u6c17\u304c\u3064\u3044\u3066\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u308b\n\n\t\n# \u304d\u306b\u306a\u308b\u3068\u3053\u308d\n\n- SettingKey\u3092\"appName in Push\"\u3068\u304b\u306b\u3057\u305f\u304b\u3063\u305f\u3093\u3060\u3051\u3069\u3001\u3069\u3046\u3084\u3063\u3066\u8a2d\u5b9a\u3059\u308b\u306e\u304b\u3088\u304f\u308f\u304b\u3089\u306a\u3044\n"}