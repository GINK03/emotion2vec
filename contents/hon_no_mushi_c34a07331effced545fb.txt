{"context": "\n\nOpenCV Advent Calendar 2016\u3000X\u65e5\u76ee\u3002\nOpenCV\u3067\u6587\u5b57\u3092\u63cf\u753b\u3059\u308bcv::putText()\u5148\u751f\u306b\u306f\u3044\u3064\u3082\u30c7\u30d0\u30c3\u30b0\u7b49\u3067\u975e\u5e38\u306b\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u304a\u308a\u307e\u3059\u3002\u672c\u5f53\u306b\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\uff01\n\u306a\u306e\u3067\u3059\u304c\u3001\u306a\u304b\u306a\u304b\u305d\u306e\u5b9f\u88c5\u3092\u3058\u3063\u304f\u308a\u898b\u308b\u6a5f\u4f1a\u304c\u5c11\u306a\u3044\u306e\u3067\u3001\u3053\u308c\u3092\u826f\u3044\u30c1\u30e3\u30f3\u30b9\u3068\u601d\u3044\u4e2d\u8eab\u3092\u898b\u3066\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u306a\u3044\u65b0\u3057\u3044\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u306e\u3067\u53c2\u8003\u60c5\u5831\u3068\u3057\u3066\u958b\u793a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n\u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u7406\u89e3\u3067\u304d\u308b\u3053\u3068\n\n\"Hershey\"\u3068\u306f\u3001\u3053\u306e\u30b9\u30c8\u30ed\u30fc\u30af\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u3063\u305f\u4f5c\u8005\u3055\u3093\uff01\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\nOpenCV\u3067\u306f\u30b0\u30ea\u30d5\uff11\u6587\u5b57\u3092\u8907\u6570\u30b9\u30c8\u30ed\u30fc\u30af\u306b\u5206\u5272\u3001\u5ea7\u6a19\u60c5\u5831\u3092\u6587\u5b57\u5217\u3067\u8868\u3057\u3066\u3044\u308b\u3002\n\n\n\nHERSHEY\u3063\u3066\u4f55\uff1f\nputText()\u3067\u6307\u5b9a\u3067\u304d\u308bFontFace\u306b\u306f\"HERSHEY\"\u304c\u3064\u3044\u3066\u308b\u3002\u3053\u308c\u306f\uff1f\n\nFONT_HERSHEY_SIMPLEX / PLANE / DUPLEX / COMPLEX / TRIPLEX / COMPLEX_SMALL / SCRIPT_SIMPLEX / SCRIPT_COMPLEX\n\n\n\u305d\u308c\u305e\u308c\u306e\u898b\u305f\u76ee\u306e\u9055\u3044\u3092\u78ba\u8a8d\u3057\u305f\u3044\u306a\u3089\u3070\u3001\u3053\u3061\u3089\u3092\u3002\nhttp://northstar-www.dartmouth.edu/doc/idl/html_6.2/Hershey_Vector_Font_Samples.html\n\n\nHershey fonts\n\u307e\u305a\u3001\u8a00\u8449\u306e\u5b9a\u7fa9\u3092\u78ba\u8a8d\u3059\u308b\u306a\u3089\u3070\u3001wikipedia\u304c\u4fbf\u5229\u3067\u3059\u306d\uff01 https://en.wikipedia.org/wiki/Hershey_fonts\n\nThe Hershey fonts are a collection of vector fonts developed c. 1967 by Dr. Allen V. Hershey at the Naval Weapons Laboratory.[1][2] The fonts are publicly available and have few restrictions.[3] Vector fonts are easily scaled and rotated in two or three dimensions; consequently the Hershey fonts have been widely used in computer graphics and computer-aided design programs.\n\n\n\n\u7ffb\u8a33\u3059\u308b\u3002\n\n\uff08\u8a33\uff09Hershey font\u306f\u3001Naval Weapons Laboratory\u306b\u3044\u305fDr. Allen V.Hershey\u304c1967\u5e74\u306b\u958b\u767a\u3057\u305f\u30d9\u30af\u30bf\u30fc\u30d5\u30a9\u30f3\u30c8\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3042\u308b\u3002\u3053\u306e\u30d5\u30a9\u30f3\u30c8\u306f\u4e00\u822c\u7684\u306b\u5165\u624b\u53ef\u80fd\u3067\u3042\u308a\u3001\u3044\u304f\u3064\u304b\u306e\u5236\u9650\u304c\u3042\u308a\u307e\u3059\u3002\u30d9\u30af\u30bf\u30d5\u30a9\u30f3\u30c8\u306f\u3001\uff12\u6b21\u5143\u30fb\uff13\u6b21\u5143\u7a7a\u9593\u4e0a\u3067\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3084\u56de\u8ee2\u304c\u5bb9\u6613\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u3001Hershey fonts\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u3084CAD(Computer-aided design program)\u3067\u5e83\u304f\u4f7f\u308f\u308c\u3066\u304d\u307e\u3057\u305f\u3002\n\n\n\n\u307e\u3068\u3081\u308b\u3068\n\u6614\u304b\u3089\u4f7f\u308f\u308c\u3066\u3044\u308b\u3001\u30b9\u30c8\u30ed\u30fc\u30af/\u30d9\u30af\u30bf\u30fc\u306a\u30d5\u30a9\u30f3\u30c8\u3067\u3001\u56de\u8ee2\u62e1\u5927\u7e2e\u5c0f\u306f\u304a\u624b\u306e\u7269\uff01\uff01\n\u305d\u308c\u3067\u306f\u3001\u5b9f\u88c5\u306e\u307b\u3046\u3082\u898b\u3066\u3044\u3053\u3046\uff01\n\n\nOpenCV\u4e0a\u306e\u5b9f\u88c5\n\n//github.com/opencv/opencv/blob/master/modules/imgproc/src/drawing.cpp\nextern const char* g_HersheyGlyphs[];\n\nvoid putText( InputOutputArray _img, const String& text, Point org,\n              int fontFace, double fontScale, Scalar color,\n              int thickness, int line_type, bool bottomLeftOrigin )\n\n{\n    CV_INSTRUMENT_REGION()\n\n    if ( text.empty() )\n    {\n        return;\n    }\n    Mat img = _img.getMat();\n    const int* ascii = getFontData(fontFace);\n\n    double buf[4];\n    scalarToRawData(color, buf, img.type(), 0);\n\n    int base_line = -(ascii[0] & 15);\n    int hscale = cvRound(fontScale*XY_ONE), vscale = hscale;\n\n    if( line_type == CV_AA && img.depth() != CV_8U )\n        line_type = 8;\n\n    if( bottomLeftOrigin )\n        vscale = -vscale;\n\n    int view_x = org.x << XY_SHIFT;\n    int view_y = (org.y << XY_SHIFT) + base_line*vscale;\n    std::vector<Point> pts;\n    pts.reserve(1 << 10);\n    const char **faces = cv::g_HersheyGlyphs;\n\n    for( int i = 0; i < (int)text.size(); i++ )\n    {\n        int c = (uchar)text[i];\n        Point p;\n\n        readCheck(c, i, text, fontFace);\n\n        const char* ptr = faces[ascii[(c-' ')+1]];\n        p.x = (uchar)ptr[0] - 'R';\n        p.y = (uchar)ptr[1] - 'R';\n        int dx = p.y*hscale;\n        view_x -= p.x*hscale;\n        pts.resize(0);\n\n        for( ptr += 2;; )\n        {\n            if( *ptr == ' ' || !*ptr )\n            {\n                if( pts.size() > 1 )\n                    PolyLine( img, &pts[0], (int)pts.size(), false, buf, thickness, line_type, XY_SHIFT );\n                if( !*ptr++ )\n                    break;\n                pts.resize(0);\n            }\n            else\n            {\n                p.x = (uchar)ptr[0] - 'R';\n                p.y = (uchar)ptr[1] - 'R';\n                ptr += 2;\n                pts.push_back(Point(p.x*hscale + view_x, p.y*vscale + view_y));\n            }\n        }\n        view_x += dx;\n    }\n}\n\n\n\n\n\u30b0\u30ea\u30d5\u30c7\u30fc\u30bf\u306e\u69cb\u9020\n\n\u5148\u982d\uff12\u6587\u5b57\uff1a\u6587\u5b57\u306b\u304a\u3051\u308b\u5de6\u53f3\u306e\u4f4d\u7f6e\n\u7a7a\u767d\uff1a\uff11\u30b9\u30c8\u30ed\u30fc\u30af\u306e\u533a\u5207\u308a\n\u6b8b\u308a\uff1a\u5ea7\u6a19\u60c5\u5831\u3002\n\u6570\u5024\u306f\u3001\u6587\u5b57\u5217'R'\u30920\u57fa\u6e96\u306b\u3057\u3066\u8868\u73fe\u3059\u308b\u3002\n\n\n\n\nN\nO\nP\nQ\nR\nS\nT\nU\n\n\n\n\n-4\n-3\n-2\n-1\n0\n1\n2\n3\n\n\n\n\n\n\u5b9f\u969b\u306e\u30b0\u30ea\u30d5\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\n\n//github.com/opencv/opencv/blob/master/modules/imgproc/src/hershey_fonts.cpp\n\nconst char* g_HersheyGlyphs[] = {\n \"\",\n \"MWRMNV RMVV PSTS\",\n \"MWOMOV OMSMUNUPSQ OQSQURUUSVOV\",\n \"MXVNTMRMPNOPOSPURVTVVU\",\n \"MWOMOV OMRMTNUPUSTURVOV\",\n \"MWOMOV OMUM OQSQ OVUV\",\n\n\n\n\n\u5b9f\u969b\u306e\u89e3\u91c8\u306e\u4f8b\n\u4f8b\uff1aMWOMOV UMUV OQUQ \n\n\n\n1\n2\n\n\n\n\nM\nLeftPos = -5\n\n\nW\nRightPos = 5\n\n\nOM\n-3,-5\n\n\nOV\n-3,4\n\n\n' '\nStroke End\n\n\nUM\n3,-5\n\n\nUV\n3, 4\n\n\n' '\nStroke End\n\n\nOQ\n-3,-1\n\n\nUQ\n3,-1\n\n\n\n\u5168\u4f53\u3068\u3057\u3066\u306f\"H\"\u306e\u5f62\u306b\u306a\u308b\u3002\n\n\n\n\u3082\u3046\u5c11\u3057\u4e0a\u304b\u3089\u898b\u308b\u3068\n\u2460GlyphCode\u3068Glyph Data\u306e\u5909\u63db\u30c6\u30fc\u30d6\u30eb\u3092\u6301\u3063\u3066\u304a\u304f\u3002\n\u2461\u95a2\u6570\u306b\u6307\u5b9a\u3055\u308c\u305fFontFace\u306b\u5fdc\u3058\u305f\u3001Ascii Code to Glyph Code\u306e\u5909\u63db\u30c6\u30fc\u30d6\u30eb\u3092\u6c7a\u5b9a\u3002\n\u2462\u95a2\u6570\u306b\u6307\u5b9a\u3055\u308c\u305fText\u304b\u3089\uff11\u6587\u5b57\u305a\u3064c\u306b\u5206\u96e2\u3057\u3001Glyph Code\u3092\u5f97\u308b\u3002\n\u2463\u3053\u306eGlyph Code\u3092\u9806\u756a\u306b\u63cf\u753b\u3059\u308b\u4e8b\u3067\u3001\u5168\u90e8\u306e\u6587\u5b57\u5217\u304c\u63cf\u753b\u3055\u308c\u308b\u3002\n\n\n\n\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u5217\u5bfe\u5fdc\u3001\u3068\u3044\u3046\u304b\u3001\u65e5\u672c\u8a9e\u5bfe\u5fdc\u3059\u308b\u306b\u306f\uff1f\n\u65e2\u5b58\u306e\u5b9f\u88c5\u306f\u3001Ascii code\u3092\u57fa\u6e96\u306b\u3057\u3001int\u578b\u3067\u51e6\u7406\u3057\u3066\u3044\u308b\u3002\n\u3053\u306e\u90e8\u5206\u306e\u898b\u76f4\u3057\u3060\u3051\u3067\u884c\u3051\u308b\u53ef\u80fd\u6027\u3082\u3042\u308b\u4e00\u65b9\u3001\n\u65e5\u672c\u8a9e\u4ee5\u5916\u306e\u30d5\u30a9\u30f3\u30c8\u3082\u642d\u8f09\u3057\u59cb\u3081\u308b\u3068\u3001\u7834\u7dbb\u3059\u308b\u304b\u3082\uff1f\n\n\n\u307e\u3068\u3081\uff08\u518d\u63b2\uff09\n\nHershey\u306f\u3053\u306e\u30b9\u30c8\u30ed\u30fc\u30af\u30d5\u30a9\u30f3\u30c8\u306e\u4f5c\u8005\u3055\u3093\uff01\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\nOpenCV\u3067\u306f\u30b0\u30ea\u30d5\uff11\u6587\u5b57\u3092\u8907\u6570\u30b9\u30c8\u30ed\u30fc\u30af\u306b\u5206\u5272\u3001\u5ea7\u6a19\u60c5\u5831\u3092\u6587\u5b57\u5217\u3067\u8868\u3057\u3066\u3044\u308b\u3002\n\n\n\n\u6240\u611f\n\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u304b\u3064\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba\u5bb9\u91cf\u3082\u524a\u6e1b\u3067\u304d\u308b\u3001\u3053\u3068\u3092\u5b9f\u611f\u3002\n\u3053\u308c\u3060\u3051\u77ed\u3044\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u30b0\u30ea\u30d5\u63cf\u753b\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u611f\u52d5\u3092\u899a\u3048\u308b\u3002\n\u305d\u306e\u4e00\u65b9\u3067\u3001\u753b\u50cf\u3078\u306e\u65e5\u672c\u8a9e\u3092\u63cf\u753b\u306b\u306f\u5f53\u8a72\u624b\u6bb5\u4ee5\u5916\u3092\u9069\u7528\u3059\u308b\u3079\u304d\u3068\u611f\u3058\u308b\u3002\n# OpenCV Advent Calendar 2016\u3000X\u65e5\u76ee\u3002\n\nOpenCV\u3067\u6587\u5b57\u3092\u63cf\u753b\u3059\u308bcv::putText()\u5148\u751f\u306b\u306f\u3044\u3064\u3082\u30c7\u30d0\u30c3\u30b0\u7b49\u3067\u975e\u5e38\u306b\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u304a\u308a\u307e\u3059\u3002\u672c\u5f53\u306b\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\uff01\n\u306a\u306e\u3067\u3059\u304c\u3001\u306a\u304b\u306a\u304b\u305d\u306e\u5b9f\u88c5\u3092\u3058\u3063\u304f\u308a\u898b\u308b\u6a5f\u4f1a\u304c\u5c11\u306a\u3044\u306e\u3067\u3001\u3053\u308c\u3092\u826f\u3044\u30c1\u30e3\u30f3\u30b9\u3068\u601d\u3044\u4e2d\u8eab\u3092\u898b\u3066\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u306a\u3044\u65b0\u3057\u3044\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u306e\u3067\u53c2\u8003\u60c5\u5831\u3068\u3057\u3066\u958b\u793a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n---\n# \u3053\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u7406\u89e3\u3067\u304d\u308b\u3053\u3068\n1. \"Hershey\"\u3068\u306f\u3001\u3053\u306e\u30b9\u30c8\u30ed\u30fc\u30af\u30d5\u30a9\u30f3\u30c8\u3092\u4f5c\u3063\u305f\u4f5c\u8005\u3055\u3093\uff01\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n2. OpenCV\u3067\u306f\u30b0\u30ea\u30d5\uff11\u6587\u5b57\u3092\u8907\u6570\u30b9\u30c8\u30ed\u30fc\u30af\u306b\u5206\u5272\u3001\u5ea7\u6a19\u60c5\u5831\u3092\u6587\u5b57\u5217\u3067\u8868\u3057\u3066\u3044\u308b\u3002\n\n---\n# HERSHEY\u3063\u3066\u4f55\uff1f\nputText()\u3067\u6307\u5b9a\u3067\u304d\u308bFontFace\u306b\u306f\"HERSHEY\"\u304c\u3064\u3044\u3066\u308b\u3002\u3053\u308c\u306f\uff1f\n\n- FONT_HERSHEY_SIMPLEX / PLANE / DUPLEX / COMPLEX / TRIPLEX / COMPLEX_SMALL / SCRIPT_SIMPLEX / SCRIPT_COMPLEX\n\n---\n\u305d\u308c\u305e\u308c\u306e\u898b\u305f\u76ee\u306e\u9055\u3044\u3092\u78ba\u8a8d\u3057\u305f\u3044\u306a\u3089\u3070\u3001\u3053\u3061\u3089\u3092\u3002\nhttp://northstar-www.dartmouth.edu/doc/idl/html_6.2/Hershey_Vector_Font_Samples.html\n\n---\n## Hershey fonts\n\u307e\u305a\u3001\u8a00\u8449\u306e\u5b9a\u7fa9\u3092\u78ba\u8a8d\u3059\u308b\u306a\u3089\u3070\u3001wikipedia\u304c\u4fbf\u5229\u3067\u3059\u306d\uff01 https://en.wikipedia.org/wiki/Hershey_fonts\n\n> The Hershey fonts are a collection of vector fonts developed c. 1967 by Dr. Allen V. Hershey at the Naval Weapons Laboratory.[1][2] The fonts are publicly available and have few restrictions.[3] Vector fonts are easily scaled and rotated in two or three dimensions; consequently the Hershey fonts have been widely used in computer graphics and computer-aided design programs.\n\n---\n## \u7ffb\u8a33\u3059\u308b\u3002\n> \uff08\u8a33\uff09Hershey font\u306f\u3001Naval Weapons Laboratory\u306b\u3044\u305fDr. Allen V.Hershey\u304c1967\u5e74\u306b\u958b\u767a\u3057\u305f\u30d9\u30af\u30bf\u30fc\u30d5\u30a9\u30f3\u30c8\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3042\u308b\u3002\u3053\u306e\u30d5\u30a9\u30f3\u30c8\u306f\u4e00\u822c\u7684\u306b\u5165\u624b\u53ef\u80fd\u3067\u3042\u308a\u3001\u3044\u304f\u3064\u304b\u306e\u5236\u9650\u304c\u3042\u308a\u307e\u3059\u3002\u30d9\u30af\u30bf\u30d5\u30a9\u30f3\u30c8\u306f\u3001\uff12\u6b21\u5143\u30fb\uff13\u6b21\u5143\u7a7a\u9593\u4e0a\u3067\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3084\u56de\u8ee2\u304c\u5bb9\u6613\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u3001Hershey fonts\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u3084CAD(Computer-aided design program)\u3067\u5e83\u304f\u4f7f\u308f\u308c\u3066\u304d\u307e\u3057\u305f\u3002\n\n--- \n## \u307e\u3068\u3081\u308b\u3068\n\u6614\u304b\u3089\u4f7f\u308f\u308c\u3066\u3044\u308b\u3001\u30b9\u30c8\u30ed\u30fc\u30af/\u30d9\u30af\u30bf\u30fc\u306a\u30d5\u30a9\u30f3\u30c8\u3067\u3001\u56de\u8ee2\u62e1\u5927\u7e2e\u5c0f\u306f\u304a\u624b\u306e\u7269\uff01\uff01\n\u305d\u308c\u3067\u306f\u3001\u5b9f\u88c5\u306e\u307b\u3046\u3082\u898b\u3066\u3044\u3053\u3046\uff01\n\n---\n# OpenCV\u4e0a\u306e\u5b9f\u88c5\n\n``` https://github.com/opencv/opencv/blob/master/modules/imgproc/src/drawing.cpp\nextern const char* g_HersheyGlyphs[];\n\nvoid putText( InputOutputArray _img, const String& text, Point org,\n              int fontFace, double fontScale, Scalar color,\n              int thickness, int line_type, bool bottomLeftOrigin )\n\n{\n    CV_INSTRUMENT_REGION()\n\n    if ( text.empty() )\n    {\n        return;\n    }\n    Mat img = _img.getMat();\n    const int* ascii = getFontData(fontFace);\n\n    double buf[4];\n    scalarToRawData(color, buf, img.type(), 0);\n\n    int base_line = -(ascii[0] & 15);\n    int hscale = cvRound(fontScale*XY_ONE), vscale = hscale;\n\n    if( line_type == CV_AA && img.depth() != CV_8U )\n        line_type = 8;\n\n    if( bottomLeftOrigin )\n        vscale = -vscale;\n\n    int view_x = org.x << XY_SHIFT;\n    int view_y = (org.y << XY_SHIFT) + base_line*vscale;\n    std::vector<Point> pts;\n    pts.reserve(1 << 10);\n    const char **faces = cv::g_HersheyGlyphs;\n\n    for( int i = 0; i < (int)text.size(); i++ )\n    {\n        int c = (uchar)text[i];\n        Point p;\n\n        readCheck(c, i, text, fontFace);\n\n        const char* ptr = faces[ascii[(c-' ')+1]];\n        p.x = (uchar)ptr[0] - 'R';\n        p.y = (uchar)ptr[1] - 'R';\n        int dx = p.y*hscale;\n        view_x -= p.x*hscale;\n        pts.resize(0);\n\n        for( ptr += 2;; )\n        {\n            if( *ptr == ' ' || !*ptr )\n            {\n                if( pts.size() > 1 )\n                    PolyLine( img, &pts[0], (int)pts.size(), false, buf, thickness, line_type, XY_SHIFT );\n                if( !*ptr++ )\n                    break;\n                pts.resize(0);\n            }\n            else\n            {\n                p.x = (uchar)ptr[0] - 'R';\n                p.y = (uchar)ptr[1] - 'R';\n                ptr += 2;\n                pts.push_back(Point(p.x*hscale + view_x, p.y*vscale + view_y));\n            }\n        }\n        view_x += dx;\n    }\n}\n```\n\n---\n## \u30b0\u30ea\u30d5\u30c7\u30fc\u30bf\u306e\u69cb\u9020\n- \u5148\u982d\uff12\u6587\u5b57\uff1a\u6587\u5b57\u306b\u304a\u3051\u308b\u5de6\u53f3\u306e\u4f4d\u7f6e\n- \u7a7a\u767d\uff1a\uff11\u30b9\u30c8\u30ed\u30fc\u30af\u306e\u533a\u5207\u308a\n- \u6b8b\u308a\uff1a\u5ea7\u6a19\u60c5\u5831\u3002\n- \u6570\u5024\u306f\u3001\u6587\u5b57\u5217'R'\u30920\u57fa\u6e96\u306b\u3057\u3066\u8868\u73fe\u3059\u308b\u3002\n\n| N | O | P | Q | R | S | T | U |\n|:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:|\n| -4  | -3  | -2  | -1  | 0 | 1 | 2 | 3 |\n\n---\n## \u5b9f\u969b\u306e\u30b0\u30ea\u30d5\u30c7\u30fc\u30bf\u306e\u4e00\u90e8\n``` https://github.com/opencv/opencv/blob/master/modules/imgproc/src/hershey_fonts.cpp\n\nconst char* g_HersheyGlyphs[] = {\n \"\",\n \"MWRMNV RMVV PSTS\",\n \"MWOMOV OMSMUNUPSQ OQSQURUUSVOV\",\n \"MXVNTMRMPNOPOSPURVTVVU\",\n \"MWOMOV OMRMTNUPUSTURVOV\",\n \"MWOMOV OMUM OQSQ OVUV\",\n```\n---\n## \u5b9f\u969b\u306e\u89e3\u91c8\u306e\u4f8b\n\u4f8b\uff1aMWOMOV UMUV OQUQ \n\n| 1 | 2 |\n|:-:|:-:|\n| M | LeftPos = -5\n| W | RightPos = 5\n| OM  | -3,-5  |\n| OV  | -3,4  |\n| ' '  |  Stroke End  |\n| UM |  3,-5  |\n| UV  | 3, 4  |\n| ' '  |  Stroke End  |\n| OQ  | -3,-1  |\n| UQ  |  3,-1  |\n\n\u5168\u4f53\u3068\u3057\u3066\u306f\"H\"\u306e\u5f62\u306b\u306a\u308b\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/89434/31537a7c-a7a7-3966-0008-0eed0c45085e.png)\n\n---\n# \u3082\u3046\u5c11\u3057\u4e0a\u304b\u3089\u898b\u308b\u3068\n\u2460GlyphCode\u3068Glyph Data\u306e\u5909\u63db\u30c6\u30fc\u30d6\u30eb\u3092\u6301\u3063\u3066\u304a\u304f\u3002\n\u2461\u95a2\u6570\u306b\u6307\u5b9a\u3055\u308c\u305fFontFace\u306b\u5fdc\u3058\u305f\u3001Ascii Code to Glyph Code\u306e\u5909\u63db\u30c6\u30fc\u30d6\u30eb\u3092\u6c7a\u5b9a\u3002\n\u2462\u95a2\u6570\u306b\u6307\u5b9a\u3055\u308c\u305fText\u304b\u3089\uff11\u6587\u5b57\u305a\u3064c\u306b\u5206\u96e2\u3057\u3001Glyph Code\u3092\u5f97\u308b\u3002\n\u2463\u3053\u306eGlyph Code\u3092\u9806\u756a\u306b\u63cf\u753b\u3059\u308b\u4e8b\u3067\u3001\u5168\u90e8\u306e\u6587\u5b57\u5217\u304c\u63cf\u753b\u3055\u308c\u308b\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/89434/9f1515cd-a8d3-7707-9835-ed506015c851.png)\n\n\n---\n## \u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u5217\u5bfe\u5fdc\u3001\u3068\u3044\u3046\u304b\u3001\u65e5\u672c\u8a9e\u5bfe\u5fdc\u3059\u308b\u306b\u306f\uff1f\n\u65e2\u5b58\u306e\u5b9f\u88c5\u306f\u3001Ascii code\u3092\u57fa\u6e96\u306b\u3057\u3001int\u578b\u3067\u51e6\u7406\u3057\u3066\u3044\u308b\u3002\n\u3053\u306e\u90e8\u5206\u306e\u898b\u76f4\u3057\u3060\u3051\u3067\u884c\u3051\u308b\u53ef\u80fd\u6027\u3082\u3042\u308b\u4e00\u65b9\u3001\n\u65e5\u672c\u8a9e\u4ee5\u5916\u306e\u30d5\u30a9\u30f3\u30c8\u3082\u642d\u8f09\u3057\u59cb\u3081\u308b\u3068\u3001\u7834\u7dbb\u3059\u308b\u304b\u3082\uff1f\n\n---\n# \u307e\u3068\u3081\uff08\u518d\u63b2\uff09\n1. Hershey\u306f\u3053\u306e\u30b9\u30c8\u30ed\u30fc\u30af\u30d5\u30a9\u30f3\u30c8\u306e\u4f5c\u8005\u3055\u3093\uff01\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n2. OpenCV\u3067\u306f\u30b0\u30ea\u30d5\uff11\u6587\u5b57\u3092\u8907\u6570\u30b9\u30c8\u30ed\u30fc\u30af\u306b\u5206\u5272\u3001\u5ea7\u6a19\u60c5\u5831\u3092\u6587\u5b57\u5217\u3067\u8868\u3057\u3066\u3044\u308b\u3002\n\n---\n# \u6240\u611f\n\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u304b\u3064\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba\u5bb9\u91cf\u3082\u524a\u6e1b\u3067\u304d\u308b\u3001\u3053\u3068\u3092\u5b9f\u611f\u3002\n\u3053\u308c\u3060\u3051\u77ed\u3044\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u30b0\u30ea\u30d5\u63cf\u753b\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u611f\u52d5\u3092\u899a\u3048\u308b\u3002\n\n\u305d\u306e\u4e00\u65b9\u3067\u3001\u753b\u50cf\u3078\u306e\u65e5\u672c\u8a9e\u3092\u63cf\u753b\u306b\u306f\u5f53\u8a72\u624b\u6bb5\u4ee5\u5916\u3092\u9069\u7528\u3059\u308b\u3079\u304d\u3068\u611f\u3058\u308b\u3002\n", "tags": ["OpenCV", "putText", "font"]}