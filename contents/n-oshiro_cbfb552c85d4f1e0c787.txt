{"context": " More than 1 year has passed since last update.Twitter4J \u3092\u4f7f\u3063\u3066\u3001Android \u30a2\u30d7\u30ea\u4e0a\u3067 Twitter \u306e\u30d5\u30a9\u30ed\u30fc\u6a5f\u80fd\u3092\u5b9f\u73fe\u3057\u3088\u3046\u3068\u3057\u305f\u6642\u306b\u5c11\u3057\u306f\u307e\u3063\u305f\u306e\u3067\u3001\u305d\u306e\u89e3\u6c7a\u65b9\u6cd5\u306e\u30e1\u30e2\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\u6b21\u306e followTwitterUser() \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068 android.os.NetworkOnMainThreadException \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3001\u30a2\u30d7\u30ea\u304c\u5f37\u5236\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u306a\u305c\uff1f\n\njava\npublic void followTwitterUser(String username) {\n    // Twitter \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u53d6\u5f97\n    Twitter twitter = TwitterUtils.getTwitterInstance(this);\n\n    // TwitterUtils \u30af\u30e9\u30b9\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167:\n    //    Android\u518d\u5165\u9580 - Twitter\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\n    //    http://qiita.com/gabu/items/f6f39900fd5e449045f9\n\n    try {\n        // Twitter \u30d5\u30a9\u30ed\u30fc\u5b9f\u884c\n        twitter.createFriendship(username);\n    } catch (TwitterException e) {\n        e.printStackTrace();\n    }\n}\n\n\n\njava\nString username = \"twitter\";\nfollowTwitterUser(username);\n\n\n\u30a8\u30e9\u30fc\u306e\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\nandroid.os.NetworkOnMainThreadException\nFATAL EXCEPTION: main\nandroid.os.NetworkOnMainThreadException\n    at android.os.StrictMode$AndroidBlockGuardPolicy.onNetwork(StrictMode.java:1133)\n    at org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl$SSLOutputStream.write(OpenSSLSocketImpl.java:708)\n    at java.io.BufferedOutputStream.flushInternal(BufferedOutputStream.java:185)\n    at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:85)\n    at libcore.net.http.HttpEngine.readResponse(HttpEngine.java:824)\n    at libcore.net.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:283)\n    at libcore.net.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:497)\n    at libcore.net.http.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:134)\n    at twitter4j.HttpResponseImpl.<init>(HttpResponseImpl.java:35)\n    at twitter4j.HttpClientImpl.handleRequest(HttpClientImpl.java:143)\n    at twitter4j.HttpClientBase.request(HttpClientBase.java:53)\n    at twitter4j.HttpClientBase.post(HttpClientBase.java:82)\n    at twitter4j.TwitterImpl.post(TwitterImpl.java:1986)\n    at twitter4j.TwitterImpl.createFriendship(TwitterImpl.java:480)\n(\u4ee5\u4e0b\u7701\u7565)\n\n\n\u30a8\u30e9\u30fc\u4e2d\u306b\u3042\u308b AndroidBlockGuardPolicy.onNetwork \u3068\u3044\u3046\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u8abf\u3079\u3066\u308f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u3084\u3089 Android 4.0 \u4ee5\u964d\u306f\u3001Main \u30b9\u30ec\u30c3\u30c9( UI \u30b9\u30ec\u30c3\u30c9)\u4e0a\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u3092\u884c\u3046\u3068\u3053\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\u3053\u306e\u30a8\u30e9\u30fc\u3092\u56de\u907f\u3059\u308b\u306b\u306f\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u3092\u5225\u30b9\u30ec\u30c3\u30c9(\u30b5\u30d6\u30b9\u30ec\u30c3\u30c9)\u3067\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30b5\u30d6\u30b9\u30ec\u30c3\u30c9\u3067\u975e\u540c\u671f\u51e6\u7406\u3092\u884c\u3046 AsyncTask \u3092\u4f5c\u3063\u3066 doInBackground()\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u5185\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u304c\u5fc5\u8981\u306a\u51e6\u7406(Twitter\u306e\u30d5\u30a9\u30ed\u30fc)\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\njava\n// \u30b5\u30d6\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b Twitter \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4fdd\u6301\u3059\u308b\u5909\u6570\u306f\u30e1\u30f3\u30d0\u5909\u6570\u306b\u3057\u3066\u304a\u304f\n// \u4f8b:\n// public class TwitterActivity extends Activity {\n//\n//     private Twitter mTwitter = null;\n//     // ...(\u4ee5\u4e0b\u7701\u7565)\n// }\n\npublic void followTwitterUserAsync(String username) {\n    // Twitter \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u53d6\u5f97\n    mTwitter = TwitterUtils.getTwitterInstance(this);\n\n    // \u30b5\u30d6\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u30bf\u30b9\u30af\u3092\u4f5c\u6210\n    AsyncTask<String, Void, Boolean> task = new AsyncTask<String, Void, Boolean>() {\n        @Override\n        protected Boolean doInBackground(String... params) {\n            username = params[0];\n            try {\n                // Twitter \u30d5\u30a9\u30ed\u30fc\u5b9f\u884c\n                mTwitter.createFriendship(username);\n                return true;\n            } catch (TwitterException e) {\n                e.printStackTrace();\n                return false;\n            }\n        }\n\n        @Override\n        protected void onPostExecute(Boolean followResult) {\n            if (followResult) {\n                // \u30d5\u30a9\u30ed\u30fc\u6210\u529f\u6642\u306e\u51e6\u7406\n            } else {\n                // \u30d5\u30a9\u30ed\u30fc\u5931\u6557\u6642\u306e\u51e6\u7406\n            }\n        }\n    };\n    task.execute(username);\n}\n\n\n\njava\nString username = \"twitter\";\nfollowTwitterUserAsync(username);\n\n\n\u3053\u308c\u3067 Twitter \u30d5\u30a9\u30ed\u30fc\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u3092\u4f34\u3046\u51e6\u7406\u306f\u30b5\u30d6\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u304c\u30df\u30bd\u3067\u3059\u306d\u3002\n[Twitter4J](http://twitter4j.org/ja/) \u3092\u4f7f\u3063\u3066\u3001Android \u30a2\u30d7\u30ea\u4e0a\u3067 Twitter \u306e\u30d5\u30a9\u30ed\u30fc\u6a5f\u80fd\u3092\u5b9f\u73fe\u3057\u3088\u3046\u3068\u3057\u305f\u6642\u306b\u5c11\u3057\u306f\u307e\u3063\u305f\u306e\u3067\u3001\u305d\u306e\u89e3\u6c7a\u65b9\u6cd5\u306e\u30e1\u30e2\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u6b21\u306e `followTwitterUser()` \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068 `android.os.NetworkOnMainThreadException` \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3001\u30a2\u30d7\u30ea\u304c\u5f37\u5236\u7d42\u4e86\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u306a\u305c\uff1f\n\n```java:java\npublic void followTwitterUser(String username) {\n    // Twitter \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u53d6\u5f97\n    Twitter twitter = TwitterUtils.getTwitterInstance(this);\n\n    // TwitterUtils \u30af\u30e9\u30b9\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167:\n    //    Android\u518d\u5165\u9580 - Twitter\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\n    //    http://qiita.com/gabu/items/f6f39900fd5e449045f9\n    \n    try {\n        // Twitter \u30d5\u30a9\u30ed\u30fc\u5b9f\u884c\n        twitter.createFriendship(username);\n    } catch (TwitterException e) {\n        e.printStackTrace();\n    }\n}\n```\n```java:java\nString username = \"twitter\";\nfollowTwitterUser(username);\n```\n\n\u30a8\u30e9\u30fc\u306e\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n```text:android.os.NetworkOnMainThreadException\nFATAL EXCEPTION: main\nandroid.os.NetworkOnMainThreadException\n    at android.os.StrictMode$AndroidBlockGuardPolicy.onNetwork(StrictMode.java:1133)\n    at org.apache.harmony.xnet.provider.jsse.OpenSSLSocketImpl$SSLOutputStream.write(OpenSSLSocketImpl.java:708)\n    at java.io.BufferedOutputStream.flushInternal(BufferedOutputStream.java:185)\n    at java.io.BufferedOutputStream.flush(BufferedOutputStream.java:85)\n    at libcore.net.http.HttpEngine.readResponse(HttpEngine.java:824)\n    at libcore.net.http.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:283)\n    at libcore.net.http.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:497)\n    at libcore.net.http.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:134)\n    at twitter4j.HttpResponseImpl.<init>(HttpResponseImpl.java:35)\n    at twitter4j.HttpClientImpl.handleRequest(HttpClientImpl.java:143)\n    at twitter4j.HttpClientBase.request(HttpClientBase.java:53)\n    at twitter4j.HttpClientBase.post(HttpClientBase.java:82)\n    at twitter4j.TwitterImpl.post(TwitterImpl.java:1986)\n    at twitter4j.TwitterImpl.createFriendship(TwitterImpl.java:480)\n(\u4ee5\u4e0b\u7701\u7565)\n```\n\n\u30a8\u30e9\u30fc\u4e2d\u306b\u3042\u308b `AndroidBlockGuardPolicy.onNetwork` \u3068\u3044\u3046\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u8abf\u3079\u3066\u308f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u3084\u3089 Android 4.0 \u4ee5\u964d\u306f\u3001Main \u30b9\u30ec\u30c3\u30c9( UI \u30b9\u30ec\u30c3\u30c9)\u4e0a\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u3092\u884c\u3046\u3068\u3053\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u3053\u306e\u30a8\u30e9\u30fc\u3092\u56de\u907f\u3059\u308b\u306b\u306f\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u3092\u5225\u30b9\u30ec\u30c3\u30c9(\u30b5\u30d6\u30b9\u30ec\u30c3\u30c9)\u3067\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30b5\u30d6\u30b9\u30ec\u30c3\u30c9\u3067\u975e\u540c\u671f\u51e6\u7406\u3092\u884c\u3046 `AsyncTask` \u3092\u4f5c\u3063\u3066 `doInBackground()`\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u5185\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u304c\u5fc5\u8981\u306a\u51e6\u7406(Twitter\u306e\u30d5\u30a9\u30ed\u30fc)\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\n```java:java\n// \u30b5\u30d6\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b Twitter \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4fdd\u6301\u3059\u308b\u5909\u6570\u306f\u30e1\u30f3\u30d0\u5909\u6570\u306b\u3057\u3066\u304a\u304f\n// \u4f8b:\n// public class TwitterActivity extends Activity {\n//\n//     private Twitter mTwitter = null;\n//     // ...(\u4ee5\u4e0b\u7701\u7565)\n// }\n\npublic void followTwitterUserAsync(String username) {\n    // Twitter \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u53d6\u5f97\n    mTwitter = TwitterUtils.getTwitterInstance(this);\n\n    // \u30b5\u30d6\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u30bf\u30b9\u30af\u3092\u4f5c\u6210\n    AsyncTask<String, Void, Boolean> task = new AsyncTask<String, Void, Boolean>() {\n        @Override\n        protected Boolean doInBackground(String... params) {\n            username = params[0];\n            try {\n                // Twitter \u30d5\u30a9\u30ed\u30fc\u5b9f\u884c\n                mTwitter.createFriendship(username);\n                return true;\n            } catch (TwitterException e) {\n                e.printStackTrace();\n                return false;\n            }\n        }\n\t\t\n        @Override\n        protected void onPostExecute(Boolean followResult) {\n            if (followResult) {\n                // \u30d5\u30a9\u30ed\u30fc\u6210\u529f\u6642\u306e\u51e6\u7406\n            } else {\n                // \u30d5\u30a9\u30ed\u30fc\u5931\u6557\u6642\u306e\u51e6\u7406\n            }\n        }\n    };\n    task.execute(username);\n}\n```\n\n```java:java\nString username = \"twitter\";\nfollowTwitterUserAsync(username);\n```\n\u3053\u308c\u3067 Twitter \u30d5\u30a9\u30ed\u30fc\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u3092\u4f34\u3046\u51e6\u7406\u306f\u30b5\u30d6\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u304c\u30df\u30bd\u3067\u3059\u306d\u3002\n", "tags": ["Android4.x", "Twitter4J4.0.1"]}