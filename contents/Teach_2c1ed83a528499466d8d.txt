{"context": "\n\n\n\u4f7f\u3063\u305f\u3053\u3068\n\n\nReactiveProperty\n\u5024(\u3053\u3053\u3067\u306f\u6570\u5024)\u3092\u6301\u3061\u3064\u3064\uff0c\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\u3053\u3053\u3067\u306f\uff0c_contReactiveProperty\u306e\u5024\u304c\u5909\u308f\u308b\u3068\uff0c\nSubscrive\u3067\u767b\u9332\u3055\u308c\u3066\u3044\u305f\u30a4\u30d9\u30f3\u30c8\u304c\u547c\u3070\u308c\u308b\uff0e\n\nButton.OnClickAsObservable\n\u30af\u30ea\u30c3\u30af\u3092\u691c\u77e5\u3067\u304d\u308b\uff0e\n\nWhere\nif\u6587\u306e\u5f79\u5272\n\nMV(R)P\nModel\u3068View\u3068Presenter\u3067\u69cb\u6210\u3055\u308c\u308b\uff0e\n\u3053\u3053\u3067\u306f\uff0cPresenter\u306b\u305d\u308c\u305e\u308c\u306eView(\u30dc\u30bf\u30f3)\u306e\u5f79\u5272\u3092\u96c6\u4e2d\u3055\u305b\u3066\u3044\u308b\uff0e\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\n\n\nCountModel.cs\nusing UnityEngine;\nusing System.Collections;\nusing UniRx;\nusing UnityEngine.UI;\n\npublic class CountModel : MonoBehaviour {\n\n    // \u30ab\u30e1\u30e9\n    [SerializeField]\n    private Camera _camera;\n\n    // \u30ab\u30a6\u30f3\u30c8\u8868\u793a\u7528\u30c6\u30ad\u30b9\u30c8\n    [SerializeField]\n    private Text _text;\n\n    // \u30ab\u30a6\u30f3\u30c8\u306e\u5024\u3092\u6301\u3064 & \u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\n    private ReactiveProperty<int> _countReactiveProperty = new ReactiveProperty<int> (0);\n\n    // \u30a4\u30d9\u30f3\u30c8\u3092\u8cfc\u8aad\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\uff0e\n    public ReactiveProperty<int> CountReactiveProperty{\n        get{ return _countReactiveProperty; }\n    }\n\n    void Start(){\n        // \u30ab\u30a6\u30f3\u30c8\u3092\u30c6\u30ad\u30b9\u30c8\u306b\u3064\u3063\u3053\u3080\u30a4\u30d9\u30f3\u30c8   \n       _countReactiveProperty.SubscribeToText(_text);\n\n        // \u80cc\u666f\u8272\u3092\u5909\u3048\u308b\u30a4\u30d9\u30f3\u30c8\n        _countReactiveProperty\n            .Where (count => (count / 10) <= 0)\n            .Subscribe (_=>_camera.backgroundColor = Color.red);\n\n        _countReactiveProperty\n            .Where (count => (count / 10) == 1)\n            .Subscribe (_=>_camera.backgroundColor = Color.green);\n\n        _countReactiveProperty\n            .Where (count => (count / 10) >= 2)\n            .Subscribe (_=>_camera.backgroundColor = Color.blue);\n    }\n}\n\n\n\nCountPresenter.cs\nusing UnityEngine;\nusing System.Collections;\nusing UnityEngine.UI;\nusing UniRx;\n\npublic class CountPresenter: MonoBehaviour {\n\n    // \u30d7\u30e9\u30b9\u30dc\u30bf\u30f3\n    [SerializeField]\n    private Button _plusButton;\n\n    // \u30de\u30a4\u30ca\u30b9\u30dc\u30bf\u30f3\n    [SerializeField]\n    private Button _minusButton;\n\n    void Start () {\n        var model = this.GetComponent<CountModel> ();\n\n        // \u30d7\u30e9\u30b9\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u6642\u306e\u30a4\u30d9\u30f3\u30c8\n        // \u30ab\u30a6\u30f3\u30c8\u306b1\u8db3\u3059\n        _plusButton.OnClickAsObservable ().Subscribe (_=>model.CountReactiveProperty.Value += 1);\n\n\n        // \u30de\u30a4\u30ca\u30b9\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u6642\u306e\u30a4\u30d9\u30f3\u30c8\n        // 0\u3088\u308a\u5927\u304d\u3051\u308c\u3070\uff0c\u30ab\u30a6\u30f3\u30c8\u304b\u30891\u5f15\u304f\n        _minusButton.OnClickAsObservable ()\n            .Where(_=> model.CountReactiveProperty.Value > 0)\n            .Subscribe (_=> model.CountReactiveProperty.Value -= 1);\n    }\n}\n\n\n\n![CountAppliRx.gif](https://qiita-image-store.s3.amazonaws.com/0/113504/8fdcc0a1-98f4-fb23-efd3-62315a686078.gif \"CountAppliRx.gif\")\n\n># \u4f7f\u3063\u305f\u3053\u3068\n\n## ReactiveProperty\n\u5024(\u3053\u3053\u3067\u306f\u6570\u5024)\u3092\u6301\u3061\u3064\u3064\uff0c\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\n\u3053\u3053\u3067\u306f\uff0c_contReactiveProperty\u306e\u5024\u304c\u5909\u308f\u308b\u3068\uff0c\nSubscrive\u3067\u767b\u9332\u3055\u308c\u3066\u3044\u305f\u30a4\u30d9\u30f3\u30c8\u304c\u547c\u3070\u308c\u308b\uff0e\n\n## Button.OnClickAsObservable\n\u30af\u30ea\u30c3\u30af\u3092\u691c\u77e5\u3067\u304d\u308b\uff0e\n\n## Where\nif\u6587\u306e\u5f79\u5272\n\n## MV(R)P\nModel\u3068View\u3068Presenter\u3067\u69cb\u6210\u3055\u308c\u308b\uff0e\n\n\u3053\u3053\u3067\u306f\uff0cPresenter\u306b\u305d\u308c\u305e\u308c\u306eView(\u30dc\u30bf\u30f3)\u306e\u5f79\u5272\u3092\u96c6\u4e2d\u3055\u305b\u3066\u3044\u308b\uff0e\n\n># \u30b9\u30af\u30ea\u30d7\u30c8\n\n```CountModel.cs\nusing UnityEngine;\nusing System.Collections;\nusing UniRx;\nusing UnityEngine.UI;\n\npublic class CountModel : MonoBehaviour {\n\n\t// \u30ab\u30e1\u30e9\n\t[SerializeField]\n\tprivate Camera _camera;\n\n\t// \u30ab\u30a6\u30f3\u30c8\u8868\u793a\u7528\u30c6\u30ad\u30b9\u30c8\n\t[SerializeField]\n\tprivate Text _text;\n\n\t// \u30ab\u30a6\u30f3\u30c8\u306e\u5024\u3092\u6301\u3064 & \u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\n\tprivate ReactiveProperty<int> _countReactiveProperty = new ReactiveProperty<int> (0);\n\n\t// \u30a4\u30d9\u30f3\u30c8\u3092\u8cfc\u8aad\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\uff0e\n\tpublic ReactiveProperty<int> CountReactiveProperty{\n\t\tget{ return _countReactiveProperty; }\n\t}\n\n\tvoid Start(){\n\t\t// \u30ab\u30a6\u30f3\u30c8\u3092\u30c6\u30ad\u30b9\u30c8\u306b\u3064\u3063\u3053\u3080\u30a4\u30d9\u30f3\u30c8\t\n       _countReactiveProperty.SubscribeToText(_text);\n\n\t\t// \u80cc\u666f\u8272\u3092\u5909\u3048\u308b\u30a4\u30d9\u30f3\u30c8\n\t\t_countReactiveProperty\n\t\t\t.Where (count => (count / 10) <= 0)\n\t\t\t.Subscribe (_=>_camera.backgroundColor = Color.red);\n\n\t\t_countReactiveProperty\n\t\t\t.Where (count => (count / 10) == 1)\n\t\t\t.Subscribe (_=>_camera.backgroundColor = Color.green);\n\n\t\t_countReactiveProperty\n\t\t\t.Where (count => (count / 10) >= 2)\n\t\t\t.Subscribe (_=>_camera.backgroundColor = Color.blue);\n\t}\n}\n```\n\n\n```CountPresenter.cs\nusing UnityEngine;\nusing System.Collections;\nusing UnityEngine.UI;\nusing UniRx;\n\npublic class CountPresenter: MonoBehaviour {\n\n\t// \u30d7\u30e9\u30b9\u30dc\u30bf\u30f3\n\t[SerializeField]\n\tprivate Button _plusButton;\n\n\t// \u30de\u30a4\u30ca\u30b9\u30dc\u30bf\u30f3\n\t[SerializeField]\n\tprivate Button _minusButton;\n\n\tvoid Start () {\n\t\tvar model = this.GetComponent<CountModel> ();\n\n\t\t// \u30d7\u30e9\u30b9\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u6642\u306e\u30a4\u30d9\u30f3\u30c8\n\t\t// \u30ab\u30a6\u30f3\u30c8\u306b1\u8db3\u3059\n\t\t_plusButton.OnClickAsObservable ().Subscribe (_=>model.CountReactiveProperty.Value += 1);\n\n\n\t\t// \u30de\u30a4\u30ca\u30b9\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u6642\u306e\u30a4\u30d9\u30f3\u30c8\n\t\t// 0\u3088\u308a\u5927\u304d\u3051\u308c\u3070\uff0c\u30ab\u30a6\u30f3\u30c8\u304b\u30891\u5f15\u304f\n\t\t_minusButton.OnClickAsObservable ()\n\t\t\t.Where(_=> model.CountReactiveProperty.Value > 0)\n\t\t\t.Subscribe (_=> model.CountReactiveProperty.Value -= 1);\n\t}\n}\n```\n", "tags": ["Unity", "UniRx"]}