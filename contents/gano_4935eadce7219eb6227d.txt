{"context": "\n\n\u80cc\u666f\n\u4ee5\u524d\u3001Ubuntu\u4e0a\u3067\u30d6\u30e9\u30a6\u30b6\u3092\u81ea\u52d5\u5b9f\u884c\u3057\u3001WEB\u4e0a\u306e\u5024\u3092\u5b9a\u70b9\u89b3\u6e2c\u3059\u308b\u3068\u3044\u3046\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\u76e3\u8996\u3057\u3066\u3044\u308b\u5024\u306b\u76ee\u7acb\u3064\u52d5\u304d\u304c\u3042\u3063\u305f\u5834\u5408\u3001\u30e1\u30fc\u30eb\u3067\u30a2\u30e9\u30fc\u30c8\u3092\u9001\u308b\u3068\u3044\u3046\u3053\u3068\u3092\u691c\u8a0e\u3057\u305f\u306e\u3067\u3059\u304c\u3001SMTP\u30b5\u30fc\u30d0\u30fc\u3092\uff11\u304b\u3089\u8a2d\u5b9a\u3059\u308b\u306e\u306f\u9762\u5012\u3067\u3057\u305f\u3002\n\u8abf\u3079\u3066\u307f\u308b\u3068Gmail API\u3092\u4f7f\u3048\u3070SMTP\u3092\u7528\u610f\u3057\u306a\u304f\u3066\u3082\u30e1\u30fc\u30eb\u306e\u9001\u4fe1\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d44\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\n\u74b0\u5883\nOS     : Ubuntu16.04\npython : version3.5\n\nStep\uff11\uff09 Gmai API\u3092\u4f7f\u3046\u305f\u3081\u306e\u6e96\u5099\n\n\uff08\uff11\uff09python\u7528Gmail API\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\npip3 install --upgrade google-api-python-client\n\n\n\uff08\uff12\uff09Gmail\u306e\u30da\u30fc\u30b8\u3067API\u3092\u5229\u7528\u3059\u308b\u8a8d\u8a3c\u3092\u884c\u3046\n\n\u8a8d\u8a3c\u306f\u3053\u3061\u3089\u306e\u30da\u30fc\u30b8\u306eStep1\u306b\u5f93\u3063\u3066\u4f5c\u696d\u3059\u308c\u3070\u5927\u4e08\u592b\u3067\u3057\u3087\u3046\u3002\n\nStep\uff12\uff09 Gmail\u3092\u9001\u4fe1\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\u5b9f\u969b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u304b\u3089\u307b\u3068\u3093\u3069\u771f\u4f3c\u3092\u3057\u3066\u66f8\u304d\u307e\u3057\u305f\u3002\n\u2192\u3000Python3 + google-api-python-client\u3067\u3001Gmail API\u3092\u4f7f\u3063\u3066\u30e1\u30fc\u30eb\u3092\u9001\u4fe1\u3059\u308b\n\n\u3068\u3066\u3082\u5206\u304b\u308a\u3084\u3059\u304f\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u3092\u793a\u3057\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u5185\u306e\uff14\u3064\u306e\u5b9a\u6570\uff08CLIENT_SECRET_FILE,APPLICATION_NAME,MAIL_FROM,MAIL_TO\uff09\u3092\u5909\u3048\u308b\u3060\u3051\u3067\u3001\u3054\u81ea\u8eab\u306e\u74b0\u5883\u3067\u304a\u4f7f\u3044\u9802\u3051\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nfrom __future__ import print_function\nimport httplib2\nimport os\n\nimport apiclient\nfrom apiclient import discovery\nimport oauth2client\nfrom oauth2client import client\nfrom oauth2client import tools\n\nimport base64\nfrom email.mime.text import MIMEText\nfrom email.utils import formatdate\nimport traceback\n\ntry:\n    import argparse\n    flags = argparse.ArgumentParser(parents=[tools.argparser]).parse_args()\nexcept ImportError:\n    flags = None\n\n# If modifying these scopes, delete your previously saved credentials\n# at ~/.credentials/gmail-python-quickstart.json\nSCOPES = 'https://www.googleapis.com/auth/gmail.send'\nCLIENT_SECRET_FILE = '<path_to_credintial>.json'\nAPPLICATION_NAME = '<application_name>'\n\nMAIL_FROM = \"<sender email-address>\"\nMAIL_TO = \"<receiver email-address>\"\n\ndef get_credentials():\n\n    home_dir = os.path.expanduser('~')\n    credential_dir = os.path.join(home_dir, '.credentials')\n    if not os.path.exists(credential_dir):\n        os.makedirs(credential_dir)\n    credential_path = os.path.join(credential_dir,\n                                   'gmail-send-api.json')\n\n    store = oauth2client.file.Storage(credential_path)\n    credentials = store.get()\n    if not credentials or credentials.invalid:\n        flow = client.flow_from_clientsecrets(CLIENT_SECRET_FILE, SCOPES)\n        flow.user_agent = APPLICATION_NAME\n        if flags:\n            credentials = tools.run_flow(flow, store, flags)\n        else: # Needed only for compatibility with Python 2.6\n            credentials = tools.run(flow, store)\n        print('Storing credentials to ' + credential_path)\n    return credentials\n\ndef create_message(receiver,subject,mail_str):\n    message = MIMEText(mail_str)\n    message[\"from\"] = MAIL_FROM\n    message[\"to\"] = receiver\n    message[\"subject\"] = subject\n    message[\"Date\"] = formatdate(localtime=True)\n\n    byte_msg = message.as_string().encode(encoding=\"UTF-8\")\n    byte_msg_b64encoded = base64.urlsafe_b64encode(byte_msg)\n    str_msg_b64encoded = byte_msg_b64encoded.decode(encoding=\"UTF-8\")\n\n    return {\"raw\": str_msg_b64encoded}\n\ndef send_mail(receiver,subject,mail_str):\n\n    credentials = get_credentials()\n    http = credentials.authorize(httplib2.Http())\n    service = discovery.build('gmail', 'v1', http=http)\n\n    try:\n        result = service.users().messages().send(\n            userId = MAIL_FROM,\n            body=create_message(receiver,subject,mail_str)\n        ).execute()\n\n        print(\"Message Id: {}\" .format(result[\"id\"]))\n\n    except apiclient.errors.HttpError:\n        print(\"-----start trace-----\")\n        traceback.print_exc()\n        print(\"-----end trace-----\")\n\nif __name__ == '__main__':\n    send_mail(\"gano_test\\ngano_test2\")\n\n\u88dc\u8db3\u3067\u3059\u304c\u3001\uff14\u3064\u306e\u5b9a\u6570\u306f\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\nCLIENT_SECRET_FILE :STEP1\u3067GMAIL\u30b5\u30a4\u30c8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u8a8d\u8a3c\u7528json\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\nAPPLICATION_NAME   :\u4efb\u610f\u306b\u3064\u3051\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u3002\u306a\u3093\u3067\u3082\u3088\u3044\u3067\u3059\u3002\nMAIL_FROM          \uff1a\u9001\u4fe1\u8005\u540d\u3002Step1\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30a2\u30c9\u30ec\u30b9\u3067\u3059\u3002\nMAIL_TO            :\u5b9b\u5148\u3067\u3059\u3002\u30ab\u30f3\u30de\u533a\u5207\u308a\u306b\u3059\u308b\u3053\u3068\u3067\u8907\u6570\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002\n\n# \u80cc\u666f\n\u4ee5\u524d\u3001[Ubuntu\u4e0a\u3067\u30d6\u30e9\u30a6\u30b6\u3092\u81ea\u52d5\u5b9f\u884c\u3057\u3001WEB\u4e0a\u306e\u5024\u3092\u5b9a\u70b9\u89b3\u6e2c\u3059\u308b](http://qiita.com/gano/items/f46adc5dff055baf3785)\u3068\u3044\u3046\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\u76e3\u8996\u3057\u3066\u3044\u308b\u5024\u306b\u76ee\u7acb\u3064\u52d5\u304d\u304c\u3042\u3063\u305f\u5834\u5408\u3001\u30e1\u30fc\u30eb\u3067\u30a2\u30e9\u30fc\u30c8\u3092\u9001\u308b\u3068\u3044\u3046\u3053\u3068\u3092\u691c\u8a0e\u3057\u305f\u306e\u3067\u3059\u304c\u3001SMTP\u30b5\u30fc\u30d0\u30fc\u3092\uff11\u304b\u3089\u8a2d\u5b9a\u3059\u308b\u306e\u306f\u9762\u5012\u3067\u3057\u305f\u3002\n\u8abf\u3079\u3066\u307f\u308b\u3068Gmail API\u3092\u4f7f\u3048\u3070SMTP\u3092\u7528\u610f\u3057\u306a\u304f\u3066\u3082\u30e1\u30fc\u30eb\u306e\u9001\u4fe1\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d44\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\n# \u74b0\u5883\nOS     : Ubuntu16.04\npython : version3.5\n\n# Step\uff11\uff09 Gmai API\u3092\u4f7f\u3046\u305f\u3081\u306e\u6e96\u5099\n## <b>\uff08\uff11\uff09python\u7528Gmail API\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb</b>\n\n```\npip3 install --upgrade google-api-python-client\n```\n\n## <b>\uff08\uff12\uff09Gmail\u306e\u30da\u30fc\u30b8\u3067API\u3092\u5229\u7528\u3059\u308b\u8a8d\u8a3c\u3092\u884c\u3046</b>\n\u8a8d\u8a3c\u306f[\u3053\u3061\u3089](https://developers.google.com/gmail/api/quickstart/python#step_3_set_up_the_sample)\u306e\u30da\u30fc\u30b8\u306eStep1\u306b\u5f93\u3063\u3066\u4f5c\u696d\u3059\u308c\u3070\u5927\u4e08\u592b\u3067\u3057\u3087\u3046\u3002\n\n# Step\uff12\uff09 Gmail\u3092\u9001\u4fe1\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\n\u5b9f\u969b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u304b\u3089\u307b\u3068\u3093\u3069\u771f\u4f3c\u3092\u3057\u3066\u66f8\u304d\u307e\u3057\u305f\u3002\n\u2192\u3000[Python3 + google-api-python-client\u3067\u3001Gmail API\u3092\u4f7f\u3063\u3066\u30e1\u30fc\u30eb\u3092\u9001\u4fe1\u3059\u308b\n](http://thinkami.hatenablog.com/entry/2016/06/10/065731)\n\u3068\u3066\u3082\u5206\u304b\u308a\u3084\u3059\u304f\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u3092\u793a\u3057\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u5185\u306e\uff14\u3064\u306e\u5b9a\u6570\uff08CLIENT_SECRET_FILE,APPLICATION_NAME,MAIL_FROM,MAIL_TO\uff09\u3092\u5909\u3048\u308b\u3060\u3051\u3067\u3001\u3054\u81ea\u8eab\u306e\u74b0\u5883\u3067\u304a\u4f7f\u3044\u9802\u3051\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```\nfrom __future__ import print_function\nimport httplib2\nimport os\n\nimport apiclient\nfrom apiclient import discovery\nimport oauth2client\nfrom oauth2client import client\nfrom oauth2client import tools\n\nimport base64\nfrom email.mime.text import MIMEText\nfrom email.utils import formatdate\nimport traceback\n\ntry:\n    import argparse\n    flags = argparse.ArgumentParser(parents=[tools.argparser]).parse_args()\nexcept ImportError:\n    flags = None\n\n# If modifying these scopes, delete your previously saved credentials\n# at ~/.credentials/gmail-python-quickstart.json\nSCOPES = 'https://www.googleapis.com/auth/gmail.send'\nCLIENT_SECRET_FILE = '<path_to_credintial>.json'\nAPPLICATION_NAME = '<application_name>'\n\nMAIL_FROM = \"<sender email-address>\"\nMAIL_TO = \"<receiver email-address>\"\n\ndef get_credentials():\n\n    home_dir = os.path.expanduser('~')\n    credential_dir = os.path.join(home_dir, '.credentials')\n    if not os.path.exists(credential_dir):\n        os.makedirs(credential_dir)\n    credential_path = os.path.join(credential_dir,\n                                   'gmail-send-api.json')\n\n    store = oauth2client.file.Storage(credential_path)\n    credentials = store.get()\n    if not credentials or credentials.invalid:\n        flow = client.flow_from_clientsecrets(CLIENT_SECRET_FILE, SCOPES)\n        flow.user_agent = APPLICATION_NAME\n        if flags:\n            credentials = tools.run_flow(flow, store, flags)\n        else: # Needed only for compatibility with Python 2.6\n            credentials = tools.run(flow, store)\n        print('Storing credentials to ' + credential_path)\n    return credentials\n\ndef create_message(receiver,subject,mail_str):\n    message = MIMEText(mail_str)\n    message[\"from\"] = MAIL_FROM\n    message[\"to\"] = receiver\n    message[\"subject\"] = subject\n    message[\"Date\"] = formatdate(localtime=True)\n\n    byte_msg = message.as_string().encode(encoding=\"UTF-8\")\n    byte_msg_b64encoded = base64.urlsafe_b64encode(byte_msg)\n    str_msg_b64encoded = byte_msg_b64encoded.decode(encoding=\"UTF-8\")\n\n    return {\"raw\": str_msg_b64encoded}\n\ndef send_mail(receiver,subject,mail_str):\n\n    credentials = get_credentials()\n    http = credentials.authorize(httplib2.Http())\n    service = discovery.build('gmail', 'v1', http=http)\n\n    try:\n        result = service.users().messages().send(\n            userId = MAIL_FROM,\n            body=create_message(receiver,subject,mail_str)\n        ).execute()\n\n        print(\"Message Id: {}\" .format(result[\"id\"]))\n\n    except apiclient.errors.HttpError:\n        print(\"-----start trace-----\")\n        traceback.print_exc()\n        print(\"-----end trace-----\")\n\nif __name__ == '__main__':\n    send_mail(\"gano_test\\ngano_test2\")\n```\n\n\u88dc\u8db3\u3067\u3059\u304c\u3001\uff14\u3064\u306e\u5b9a\u6570\u306f\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\n+ CLIENT_SECRET_FILE :STEP1\u3067GMAIL\u30b5\u30a4\u30c8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u8a8d\u8a3c\u7528json\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\n+ APPLICATION_NAME   :\u4efb\u610f\u306b\u3064\u3051\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u3002\u306a\u3093\u3067\u3082\u3088\u3044\u3067\u3059\u3002\n+ MAIL_FROM          \uff1a\u9001\u4fe1\u8005\u540d\u3002Step1\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30a2\u30c9\u30ec\u30b9\u3067\u3059\u3002\n+ MAIL_TO            :\u5b9b\u5148\u3067\u3059\u3002\u30ab\u30f3\u30de\u533a\u5207\u308a\u306b\u3059\u308b\u3053\u3068\u3067\u8907\u6570\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002\n\n\n\n\n\n\n\n\n", "tags": ["SMTP", "gmail", "Python", "Ubuntu", "mail"]}