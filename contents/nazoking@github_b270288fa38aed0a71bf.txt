{"context": "http://scikit-learn.org/0.18/modules/feature_extraction.html \u3092google\u7ffb\u8a33\u3057\u305f\n\u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u76ee\u6b21\n\nsklearn.feature_extraction \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u3084\u753b\u50cf\u306a\u3069\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304b\u3089\u306a\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304b\u3089\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u5f62\u5f0f\u306e\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\n\u6ce8\u8a18 \u7279\u5fb4\u91cf\u306e\u62bd\u51fa\u306f\u3001\u7279\u5fb4\u91cf\u306e\u9078\u629e\u3068\u306f\u5927\u304d\u304f\u7570\u306a\u308a\u307e\u3059\u3002\u524d\u8005\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u3084\u30a4\u30e1\u30fc\u30b8\u306a\u3069\u306e\u4efb\u610f\u306e\u30c7\u30fc\u30bf\u3092\u6a5f\u68b0\u5b66\u7fd2\u306b\u4f7f\u7528\u3067\u304d\u308b\u6570\u5024\u7279\u5fb4\u91cf\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u5f8c\u8005\u306f\u3001\u3053\u308c\u3089\u306e\u7279\u5fb4\u5024\u306b\u9069\u7528\u3055\u308c\u308b\u6a5f\u68b0\u5b66\u7fd2\u6280\u8853\u3067\u3059\u3002\n\n4.2.1. dicts\u304b\u3089\u306e\u7279\u5fb4\u91cf\u306e\u30ed\u30fc\u30c9\n\u30af\u30e9\u30b9DictVectorizer\u306f\u3001\u6a19\u6e96\u306ePython dict\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u8868\u3055\u308c\u308b\u7279\u5fb4\u91cf\u914d\u5217\u3092\u3001scikit-learn\u63a8\u5b9a\u5668\u3067\u4f7f\u7528\u3055\u308c\u308bNumPy / SciPy\u8868\u73fe\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\u7279\u306b\u51e6\u7406\u304c\u901f\u3044\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001Python\u306edict\u306b\u306f\u3001\u4f7f\u3044\u3084\u3059\u304f\u3001\u758e\u3067\u3042\u308b\uff08\u5b58\u5728\u3057\u306a\u3044\u7279\u5fb4\u3092\u683c\u7d0d\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff09\u3001\u5024\u306b\u52a0\u3048\u3066\u7279\u5fb4\u540d\u3092\u683c\u7d0d\u3067\u304d\u308b\u3068\u3044\u3046\u5229\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\nDictVectorizer\u306f\u3001\u30ab\u30c6\u30b4\u30ea\uff08\u307e\u305f\u306f\u3001\u540d\u76ee\u3001\u96e2\u6563\u5024\uff09\u306b\u5bfe\u3057\u3066\u30011\u5bfe1\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u307e\u305f\u306f\u300c\u30ef\u30f3\u30db\u30c3\u30c8\u300d\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u5b9f\u88c5\u307e\u3059\u3002\u30ab\u30c6\u30b4\u30ea\u5c5e\u6027\u306f\u3001\u5024\u306b\u9806\u756a\u306e\u306a\u3044\u96e2\u6563\u6027\u306e\u30ea\u30b9\u30c8\uff08\u30c8\u30d4\u30c3\u30af\u8b58\u5225\u5b50\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30bf\u30a4\u30d7\u3001\u30bf\u30b0\u3001\u540d\u524d\u306a\u3069\uff09\u306b\u5236\u9650\u3055\u308c\u308b\u300c\u5c5e\u6027 - \u5024\u300d\u306e\u30da\u30a2\u3067\u3059\u3002\n\u4ee5\u4e0b\u3067\u306f\u3001\u300ccity\u300d\u306f\u30ab\u30c6\u30b4\u30ea\u5c5e\u6027\u3067\u3042\u308a\u3001\u300ctemperature\u300d\u306f\u5f93\u6765\u306e\u6570\u5024\u7279\u5fb4\u91cf\u3067\u3042\u308b\u3002\n>>> measurements = [\n...     {'city': 'Dubai', 'temperature': 33.},\n...     {'city': 'London', 'temperature': 12.},\n...     {'city': 'San Fransisco', 'temperature': 18.},\n... ]\n\n>>> from sklearn.feature_extraction import DictVectorizer\n>>> vec = DictVectorizer()\n\n>>> vec.fit_transform(measurements).toarray()\narray([[  1.,   0.,   0.,  33.],\n       [  0.,   1.,   0.,  12.],\n       [  0.,   0.,   1.,  18.]])\n\n>>> vec.get_feature_names()\n['city=Dubai', 'city=London', 'city=San Fransisco', 'temperature']\n\nDictVectorizer\u306f\u3001\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u30e2\u30c7\u30eb\u306e\u6587\u7ae0\u5206\u985e\u5668\u306e\u8a13\u7df4\u306b\u4fbf\u5229\u306a\u8868\u73fe\u5909\u63db\u3067\u3059\uff08\u5178\u578b\u7684\u306b\u306f\u3001\u7279\u5b9a\u306e\u95a2\u5fc3\u306e\u3042\u308b\u5358\u8a9e\u306e\u5468\u8fba\u304b\u3089\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\uff09\u3002\n\u4f8b\u3048\u3070\u3001\u6587\u7ae0\u304b\u3089\u54c1\u8a5e\uff08PoS\uff09\u30bf\u30b0\u3092\u62bd\u51fa\u3059\u308b\u7b2c1\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6709\u3059\u308b\u3068\u4eee\u5b9a\u3059\u308b\u3002 \u6b21\u306e dict \u306f\u3001\u300cThe cat sat on the mat.\u300d\u3068\u3044\u3046\u6587\u306e\u4e2d\u306e\u300csat\u300d\u3068\u3044\u3046\u5358\u8a9e\u306e\u5468\u8fba\u304b\u3089\u62bd\u51fa\u3055\u308c\u305f\u305d\u306e\u3088\u3046\u306a\u7279\u5fb4\u3067\u3059\u3002\n>>> pos_window = [\n...     {\n...         'word-2': 'the',\n...         'pos-2': 'DT',\n...         'word-1': 'cat',\n...         'pos-1': 'NN',\n...         'word+1': 'on',\n...         'pos+1': 'PP',\n...     },\n...     # \u5b9f\u969b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u591a\u304f\u306e\u3053\u306e\u3088\u3046\u306adict\u3092\u62bd\u51fa\u3059\u308b\u3067\u3057\u3087\u3046\n... ]\n\n\u3053\u306e\u30c7\u30fc\u30bf\u306f\u3001\u5206\u985e\u5668\u306b\u4f9b\u7d66\u3059\u308b\u306e\u306b\u9069\u3057\u305f\u758e\u306a2\u6b21\u5143\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306b\u30d9\u30af\u30c8\u30eb\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff08\u6b63\u898f\u5316\u306e\u305f\u3081\u306btext.TfidfTransformer\u306b\u30d1\u30a4\u30d7\u3055\u308c\u305f\u5f8c\uff09\u3002\n>>> vec = DictVectorizer()\n>>> pos_vectorized = vec.fit_transform(pos_window)\n>>> pos_vectorized                \n<1x6 sparse matrix of type '<... 'numpy.float64'>'\n    with 6 stored elements in Compressed Sparse ... format>\n>>> pos_vectorized.toarray()\narray([[ 1.,  1.,  1.,  1.,  1.,  1.]])\n>>> vec.get_feature_names()\n['pos+1=PP', 'pos-1=NN', 'pos-2=DT', 'word+1=on', 'word-1=cat', 'word-2=the']\n\n\u3042\u306a\u305f\u304c\u60f3\u50cf\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u6587\u66f8\u30b3\u30fc\u30d1\u30b9\u306e\u500b\u3005\u306e\u5358\u8a9e\u306e\u5468\u308a\u306b\u3053\u306e\u3088\u3046\u306a\u6587\u8108\u3092\u62bd\u51fa\u3059\u308b\u3068\u3001\u7d50\u679c\u3068\u3057\u3066\u5f97\u3089\u308c\u308b\u884c\u5217\u306f\u975e\u5e38\u306b\u5e45\u5e83\u304f\u306a\u308a\uff08\u591a\u304f\u306eone-hot-features\uff09\u3001\u307b\u3068\u3093\u3069\u304c\u30bc\u30ed\u306b\u306a\u308a\u307e\u3059\u3002\u7d50\u679c\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u30e1\u30e2\u30ea\u306b\u53ce\u3081\u308b\u305f\u3081\u306b\u3001DictVectorizer\u30af\u30e9\u30b9\u306fnumpy.ndarray\u306e\u4ee3\u308f\u308a\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067scipy.sparse\u884c\u5217\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n4.2.2. \u7279\u5fb4\u30cf\u30c3\u30b7\u30e5\nFeatureHasher\u30af\u30e9\u30b9\u306f\u3001\u30d5\u30a3\u30fc\u30c1\u30e3\u30cf\u30c3\u30b7\u30e5\u307e\u305f\u306f\u300c\u30cf\u30c3\u30b7\u30f3\u30b0\u30c8\u30ea\u30c3\u30af\u300d\u3068\u3057\u3066\u77e5\u3089\u308c\u3066\u3044\u308b\u6280\u8853\u3092\u4f7f\u7528\u3059\u308b\u9ad8\u901f\u3001\u4f4e\u30e1\u30e2\u30ea\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u3067\u3059\u3002\u7279\u5fb4\u5024\u306e\u5909\u63db\u30c6\u30fc\u30d6\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001FeatureHasher\u306f\u7279\u5fb4\u5024\u306b\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u3092\u9069\u7528\u3057\u3066\u3001\u30b5\u30f3\u30d7\u30eb\u884c\u5217\u306e\u5217\u756a\u53f7\u3092\u76f4\u63a5\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u305d\u306e\u7d50\u679c\u3001\u691c\u67fb\u53ef\u80fd\u6027\u3092\u72a0\u7272\u306b\u3057\u3066\u30b9\u30d4\u30fc\u30c9\u304c\u4e0a\u304c\u308a\u3001\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u6e1b\u5c11\u3057\u307e\u3059\u3002\u30cf\u30c3\u30b7\u30e3\u30fc\u306f\u3001\u5165\u529b\u7279\u5fb4\u5024\u306e\u5916\u89b3\u3092\u899a\u3048\u3066\u304a\u3089\u305a\u3001inverse_transform\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308a\u307e\u305b\u3093\u3002\n\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u306f\uff08\u7121\u95a2\u4fc2\u306a\uff09\u7279\u5fb4\u9593\u3067\u885d\u7a81\u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001\u7b26\u53f7\u4ed8\u304d\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u304c\u4f7f\u7528\u3055\u308c\u3001\u30cf\u30c3\u30b7\u30e5\u5024\u306e\u7b26\u53f7\u306f\u7279\u5fb4\u5024\u306e\u51fa\u529b\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306b\u683c\u7d0d\u3055\u308c\u305f\u5024\u306e\u7b26\u53f7\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u885d\u7a81\u306f\u8aa4\u5dee\u3092\u7d2f\u7a4d\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u76f8\u6bba\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u304f\u3001\u51fa\u529b\u7279\u6027\u306e\u5024\u306e\u671f\u5f85\u5e73\u5747\u306f\u30bc\u30ed\u3067\u3059\u3002\nnon_negative = True\u304c\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3055\u308c\u305f\u5834\u5408\u3001\u7d76\u5bfe\u5024\u304c\u53d6\u5f97\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u885d\u7a81\u51e6\u7406\u306e\u3044\u304f\u3064\u304b\u3092\u5143\u306b\u623b\u3057\u307e\u3059\u304c\u3001\u975e\u8ca0\u5165\u529b\u3092\u671f\u5f85\u3059\u308bsklearn.naive_bayes.MultinomialNB \u63a8\u5b9a\u5668\u3084 sklearn.feature_selection.chi2 \u7279\u5fb4\u9078\u629e\u5668\u306a\u3069\u306b\u51fa\u529b\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nFeatureHasher\u306f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30d1\u30e9\u30e1\u30fc\u30bfinput_type\u306b\u5fdc\u3058\u3066\u3001\u30de\u30c3\u30d4\u30f3\u30b0\uff08Python\u306edict\u3084collections\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3042\u308b\u305d\u306e\u5909\u7a2e\u306a\u3069\uff09\u3001(feature, value)\u306e\u30da\u30a2\u3001\u307e\u305f\u306f\u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u3092\u53d7\u3051\u5165\u308c\u307e\u3059\u3002\u30de\u30c3\u30d4\u30f3\u30b0\u306f(feature, value)\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u53d6\u308a\u6271\u308f\u308c\u3001 ['feat1'\u3001 'feat2'\u3001 'feat3']\u306f[('feat1', 1), ('feat2', 1), ('feat3', 1)]\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 1\u3064\u306e\u7279\u5fb4\u5024\u304c\u30b5\u30f3\u30d7\u30eb\u5185\u3067\u8907\u6570\u56de\u51fa\u73fe\u3059\u308b\u5834\u5408\u3001\u95a2\u9023\u3059\u308b\u5024\u306f\u5408\u8a08\u3055\u308c\u307e\u3059\uff08\u3057\u305f\u304c\u3063\u3066 ('feat',2)\u3068 ('feat',3.5)\u306f( 'feat',5.5\uff09\u306b\u306a\u308a\u307e\u3059\u3002 FeatureHasher\u304b\u3089\u306e\u51fa\u529b\u306f\u3001\u5e38\u306bCSR\u5f62\u5f0f\u306escipy.sparse\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3067\u3059\u3002\n\u30d5\u30a3\u30fc\u30c1\u30e3\u30cf\u30c3\u30b7\u30e5\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5206\u985e\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u304c\u3001text.CountVectorizer\u3068\u7570\u306a\u308a\u3001FeatureHasher\u306fUnicode\u304b\u3089UTF-8\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u4ee5\u5916\u306e\u5358\u8a9e\u5206\u5272\u3084\u305d\u306e\u4ed6\u306e\u524d\u51e6\u7406\u306f\u884c\u3044\u307e\u305b\u3093\u3002\u30c8\u30fc\u30af\u30f3\u5316/\u30cf\u30c3\u30b7\u30e3\u30fc\u3092\u7d50\u5408\u3057\u305f\u3082\u306e\u306b\u3064\u3044\u3066\u306f\u3001\u4e0b\u8a18\u306e\u30cf\u30c3\u30b7\u30e5\u30c8\u30ea\u30c3\u30af\u3092\u4f7f\u7528\u3057\u305f\u5927\u304d\u306a\u30c6\u30ad\u30b9\u30c8\u30b3\u30fc\u30d1\u30b9\u306e\u30d9\u30af\u30c8\u30eb\u5316\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4f8b\u3068\u3057\u3066\u3001\uff08token\u3001part_of_speech\uff09\u5bfe\u304b\u3089\u62bd\u51fa\u3055\u308c\u305f\u7279\u5fb4\u3092\u5fc5\u8981\u3068\u3059\u308b\u5358\u8a9e\u30ec\u30d9\u30eb\u306e\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u30bf\u30b9\u30af\u3092\u8003\u3048\u308b\u3002\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u305f\u3081\u306bPython\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u95a2\u6570\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff1a\ndef token_features(token, part_of_speech):\n    if token.isdigit():\n        yield \"numeric\"\n    else:\n        yield \"token={}\".format(token.lower())\n        yield \"token,pos={},{}\".format(token, part_of_speech)\n    if token[0].isupper():\n        yield \"uppercase_initial\"\n    if token.isupper():\n        yield \"all_uppercase\"\n    yield \"pos={}\".format(part_of_speech)\n\n\u6b21\u306b\u3001FeatureHasher.transform\u306b\u4f9b\u7d66\u3055\u308c\u308braw_X\u306f\u3001\u4ee5\u4e0b\u3092\u4f7f\u7528\u3057\u3066\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002\n raw_X = (token_features(tok, pos_tagger(tok)) for tok in corpus)\n\n\u6b21\u306e\u3088\u3046\u306b\u3057\u3066\u30cf\u30c3\u30b7\u30e3\u30fc\u306b\u4f9b\u7d66\u3055\u308c\u307e\u3059\u3002\nhasher = FeatureHasher(input_type='string')\nX = hasher.transform(raw_X)\n\nscipy.sparse\u884c\u5217X\u3092\u5f97\u308b\u3002\n\u7279\u5fb4\u306e\u62bd\u51fa\u3092\u697d\u306b\u3059\u308b\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30c8\u30fc\u30af\u30f3\u306f\u3001\u30cf\u30c3\u30b7\u30e3\u30fc\u304b\u3089\u306e\u8981\u6c42\u306b\u5fdc\u3058\u3066\u306e\u307f\u51e6\u7406\u3055\u308c\u307e\u3059\u3002\n\n4.2.2.1. \u5b9f\u88c5\u306e\u8a73\u7d30\nFeatureHasher\u306fMurmurHash3\u306e\u7b26\u53f7\u4ed8\u304d32\u30d3\u30c3\u30c8\u7248\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066\uff08\u305d\u3057\u3066scipy.sparse\u306e\u5236\u9650\u306e\u305f\u3081\u306b\uff09\u3001\u73fe\u5728\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30d5\u30a3\u30fc\u30c1\u30e3\u306e\u6700\u5927\u6570\u306f 231\u221212^{31}-1 \u3067\u3059\u3002\n\u30ef\u30a4\u30f3\u30d0\u30fc\u30ac\u30fc\uff08Weinberger\uff09\u3089\u306b\u3088\u308b\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30cf\u30c3\u30b7\u30f3\u30b0\u30c8\u30ea\u30c3\u30af\u306e\u5b9a\u5f0f\u5316\u3067\u306f\u3001 2\u3064\u306e\u5225\u3005\u306e\u30cf\u30c3\u30b7\u30e5\u95a2\u6570 hh \u3068 \u03be\\xi \u3092\u4f7f\u7528\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u7279\u5fb4\u5024\u306e\u5217\u756a\u53f7\u3068\u7b26\u53f7\u3092\u6c7a\u5b9a\u3057\u307e\u3057\u305f\u3002\u73fe\u5728\u306e\u5b9f\u88c5\u306f\u3001MurmurHash3\u306e\u7b26\u53f7\u30d3\u30c3\u30c8\u304c\u4ed6\u306e\u30d3\u30c3\u30c8\u304b\u3089\u72ec\u7acb\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u524d\u63d0\u306e\u3082\u3068\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\u5358\u7d14\u306b\u5272\u308a\u7b97\u306e\u4f59\u308a\u3092\u4f7f\u7528\u3057\u3066\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u3092\u5217\u756a\u53f7\u306b\u5909\u63db\u3059\u308b\u306e\u3067\u3001n_features\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u30662\u306e\u7d2f\u4e57\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\u305d\u3046\u3057\u306a\u3044\u3068\u3001\u7279\u5fb4\u5024\u306f\u5747\u7b49\u306b\u30de\u30c3\u30d7\u3055\u308c\u307e\u305b\u3093\u3002\n\n\u53c2\u8003\u6587\u732e\uff1a\n\n\nKilian Weinberger\u3001Anirban Dasgupta\u3001John Langford\u3001Alex Smola\u3001Josh Attenberg\uff082009\uff09\u5927\u898f\u6a21\u306a\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2\u306e\u305f\u3081\u306e\u6a5f\u80fd\u30cf\u30c3\u30b7\u30f3\u30b0 Proc. ICML.\nMurmurHash3\n\n\n\n\n4.2.3. \u30c6\u30ad\u30b9\u30c8\u7279\u5fb4\u62bd\u51fa\n\n4.2.3.1. Bag of Words \u306b\u3088\u308b\u8868\u73fe\n\u30c6\u30ad\u30b9\u30c8\u89e3\u6790\u306f\u3001\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4e3b\u8981\u306a\u5fdc\u7528\u5206\u91ce\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u751f\u30c7\u30fc\u30bf\u3067\u306f\u3001\u4e00\u9023\u306e\u8a18\u53f7\u3092\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u81ea\u4f53\u306b\u76f4\u63a5\u4f9b\u7d66\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089\u305d\u308c\u3089\u306e\u5927\u90e8\u5206\u306f\u53ef\u5909\u9577\u306e\u751f\u30c6\u30ad\u30b9\u30c8\u6587\u66f8\u3067\u306f\u306a\u304f\u56fa\u5b9a\u30b5\u30a4\u30ba\u306e\u6570\u5024\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u3092\u671f\u5f85\u3059\u308b\u304b\u3089\u3067\u3059\u3002\n\u3053\u308c\u306b\u5bfe\u51e6\u3059\u308b\u305f\u3081\u306b\u3001scikit-learn\u306f\u30c6\u30ad\u30b9\u30c8\u30b3\u30f3\u30c6\u30f3\u30c4\u304b\u3089\u6570\u5024\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u305f\u3081\u306e\u6700\u3082\u4e00\u822c\u7684\u306a\u65b9\u6cd5\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n\u6587\u5b57\u5217\u3092\u30c8\u30fc\u30af\u30f3\u5316\u3057\u3001\u30c8\u30fc\u30af\u30f3\u30bb\u30d1\u30ec\u30fc\u30bf\u3068\u3057\u3066\u7a7a\u767d\u3068\u53e5\u8aad\u70b9\u3092\u4f7f\u7528\u3059\u308b\u306a\u3069\u3001\u53ef\u80fd\u306a\u30c8\u30fc\u30af\u30f3\u3054\u3068\u306b\u6574\u6570\u306eID\u3092\u4e0e\u3048\u307e\u3059\u3002\n\u5404\u6587\u66f8\u306e\u30c8\u30fc\u30af\u30f3\u306e\u51fa\u73fe\u3092\u6570\u3048\u307e\u3059\u3002\n\u5927\u591a\u6570\u306e\u30b5\u30f3\u30d7\u30eb/\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u767a\u751f\u3059\u308b\u91cd\u8981\u5ea6\u306e\u4f4e\u3044\u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u7528\u3057\u3066\u6b63\u898f\u5316\u3057\u3001\u91cd\u307f\u4ed8\u3051\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u30b9\u30ad\u30fc\u30e0\u3067\u306f\u3001\u7279\u5fb4\u304a\u3088\u3073\u30b5\u30f3\u30d7\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u3002\n\n\u500b\u3005\u306e\u30c8\u30fc\u30af\u30f3\u306e\u51fa\u73fe\u983b\u5ea6\u304c\u7279\u5fb4\u91cf\u3068\u3057\u3066\u6271\u308f\u308c\u308b\uff08\u6b63\u898f\u5316\u3055\u308c\u3066\u3044\u308b\u6642\u3082\u305d\u3046\u3067\u306a\u3044\u6642\u3082\u3042\u308b\uff09\u3002\n\u4e0e\u3048\u3089\u308c\u305f\u6587\u66f8\u306e\u3059\u3079\u3066\u306e\u30c8\u30fc\u30af\u30f3\u983b\u5ea6\u306e\u30d9\u30af\u30c8\u30eb\u306f\u3001\u591a\u5909\u91cf\u30b5\u30f3\u30d7\u30eb\u3068\u307f\u306a\u3055\u308c\u307e\u3059\u3002\n\n\u5f93\u3063\u3066\u3001\u6587\u66f8\u306e\u30b3\u30fc\u30d1\u30b9\u306f\u3001\u6587\u66f8\u5f53\u305f\u308a1\u3064\u306e\u884c\u3068\u3001\u30b3\u30fc\u30d1\u30b9\u306b\u73fe\u308c\u308b\u30c8\u30fc\u30af\u30f3\uff08\u4f8b\u3048\u3070\u3001\u5358\u8a9e\uff09\u3054\u3068\u306b1\u3064\u306e\u5217\u3068\u3092\u6709\u3059\u308b\u884c\u5217\u306b\u3088\u3063\u3066\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u30d9\u30af\u30c8\u30eb\u5316\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u6587\u66f8\u306e\u96c6\u5408\u3092\u6570\u5024\u306e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u306b\u5909\u63db\u3059\u308b\u4e00\u822c\u7684\u306a\u30d7\u30ed\u30bb\u30b9\u3067\u3059\u3002\u3053\u306e\u7279\u5b9a\u306e\u6226\u7565\uff08\u30c8\u30fc\u30af\u30f3\u5316\u3001\u8a08\u6570\u3001\u6b63\u898f\u5316\uff09\u306f\u3001Bag of Words\u307e\u305f\u306f\u300cBag of n-grams\u300d\u8868\u73fe\u3068\u547c\u3070\u308c\u307e\u3059\u3002\u6587\u66f8\u306f\u3001\u6587\u66f8\u5185\u306e\u5358\u8a9e\u306e\u76f8\u5bfe\u4f4d\u7f6e\u60c5\u5831\u3092\u5b8c\u5168\u306b\u7121\u8996\u3057\u3066\u5358\u8a9e\u306e\u51fa\u73fe\u6570\u306b\u3088\u3063\u3066\u8a18\u8ff0\u3055\u308c\u308b\u3002\n\n4.2.3.2. \u758e\n\u307b\u3068\u3093\u3069\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u4e00\u822c\u306b\u30b3\u30fc\u30d1\u30b9\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u5358\u8a9e\u306e\u3054\u304f\u4e00\u90e8\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u7d50\u679c\u306e\u884c\u5217\u306b\u306f\u591a\u304f\u306e\u30bc\u30ed\uff08\u901a\u5e38\u306f99\uff05\u4ee5\u4e0a\uff09\u306e\u7279\u5fb4\u5024\u304c\u542b\u307e\u308c\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u300110,000\u306e\u77ed\u6587\u6587\u66f8\uff08\u96fb\u5b50\u30e1\u30fc\u30eb\u306a\u3069\uff09\u306e\u96c6\u5408\u306f\u3001\u5408\u8a0810\u4e07\u30aa\u30fc\u30c0\u30fc\u306e\u8a9e\u5f59\u3092\u4f7f\u7528\u3057\u3001\u5404\u6587\u66f8\u306f100\u304b\u30891000\u306e\u30e6\u30cb\u30fc\u30af\u30ef\u30fc\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3002\n\u3053\u306e\u3088\u3046\u306a\u884c\u5217\u3092\u30e1\u30e2\u30ea\u306b\u683c\u7d0d\u3067\u304d\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u4ee3\u6570\u6f14\u7b97\u884c\u5217/\u30d9\u30af\u30c8\u30eb\u3092\u9ad8\u901f\u5316\u3059\u308b\u305f\u3081\u306b\u3001\u5b9f\u88c5\u3067\u306f\u901a\u5e38\u3001scipy.sparse\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u758e\u306a\u8868\u73fe\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n4.2.3.3. \u5171\u901a\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u306e\u4f7f\u7528\u6cd5\nCountVectorizer \u306f\u3001\u30c8\u30fc\u30af\u30f3\u5316\u3068\u51fa\u73fe\u56de\u6570\u306e\u8a08\u6570\u306e\u4e21\u65b9\u30921\u3064\u306e\u30af\u30e9\u30b9\u306b\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\n>>> from sklearn.feature_extraction.text import CountVectorizer\n\n\u3053\u306e\u30e2\u30c7\u30eb\u306b\u306f\u591a\u304f\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u975e\u5e38\u306b\u59a5\u5f53\u3067\u3059\uff08\u8a73\u7d30\u306f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff09\uff1a\n>>> vectorizer = CountVectorizer(min_df=1)\n>>> vectorizer                     \nCountVectorizer(analyzer=...'word', binary=False, decode_error=...'strict',\n        dtype=<... 'numpy.int64'>, encoding=...'utf-8', input=...'content',\n        lowercase=True, max_df=1.0, max_features=None, min_df=1,\n        ngram_range=(1, 1), preprocessor=None, stop_words=None,\n        strip_accents=None, token_pattern=...'(?u)\\\\b\\\\w\\\\w+\\\\b',\n        tokenizer=None, vocabulary=None)\n\n\u305d\u308c\u3092\u4f7f\u3063\u3066\u3001\u30c6\u30ad\u30b9\u30c8\u6587\u66f8\u306e\u6700\u5c0f\u9650\u306e\u30b3\u30fc\u30d1\u30b9\u306e\u5358\u8a9e\u306e\u51fa\u73fe\u3092\u30c8\u30fc\u30af\u30f3\u5316\u3057\u3066\u6570\u3048\u307e\u3057\u3087\u3046\u3002\n>>> corpus = [\n...     'This is the first document.',\n...     'This is the second second document.',\n...     'And the third one.',\n...     'Is this the first document?',\n... ]\n>>> X = vectorizer.fit_transform(corpus)\n>>> X                              \n<4x9 sparse matrix of type '<... 'numpy.int64'>'\n    with 19 stored elements in Compressed Sparse ... format>\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u306f\u30012\u6587\u5b57\u4ee5\u4e0a\u306e\u5358\u8a9e\u3092\u62bd\u51fa\u3057\u3066\u6587\u5b57\u5217\u3092\u30c8\u30fc\u30af\u30f3\u5316\u3057\u307e\u3059\u3002\u3053\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u5b9f\u884c\u3059\u308b\u7279\u5b9a\u306e\u6a5f\u80fd\u306f\u3001\u660e\u793a\u7684\u306b\u8981\u6c42\u3067\u304d\u307e\u3059\u3002\n>>> analyze = vectorizer.build_analyzer()\n>>> analyze(\"This is a text document to analyze.\") == (\n...     ['this', 'is', 'text', 'document', 'to', 'analyze'])\nTrue\n\n\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u4e2d\u306b\u30a2\u30ca\u30e9\u30a4\u30b6\u306b\u3088\u3063\u3066\u691c\u51fa\u3055\u308c\u305f\u5404\u7528\u8a9e\u306b\u306f\u3001\u7d50\u679c\u306e\u884c\u5217\u306e\u5217\u306b\u5bfe\u5fdc\u3059\u308b\u56fa\u6709\u306e\u6574\u6570\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002\u3053\u306e\u5217\u306e\u89e3\u91c8\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n>>> vectorizer.get_feature_names() == (\n...     ['and', 'document', 'first', 'is', 'one',\n...      'second', 'the', 'third', 'this'])\nTrue\n\n>>> X.toarray()           \narray([[0, 1, 1, 1, 0, 0, 1, 0, 1],\n       [0, 1, 0, 1, 0, 2, 1, 0, 1],\n       [1, 0, 0, 0, 1, 0, 1, 1, 0],\n       [0, 1, 1, 1, 0, 0, 1, 0, 1]]...)\n\n\u7279\u5fb4\u5024\u304b\u3089\u5217\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3078\u306e\u9006\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306f\u3001\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u306evocabulary_\u5c5e\u6027\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n>>> vectorizer.vocabulary_.get('document')\n1\n\n\u3057\u305f\u304c\u3063\u3066\u3001\u8a13\u7df4\u30b3\u30fc\u30d1\u30b9\u306b\u898b\u3089\u308c\u306a\u304b\u3063\u305f\u5358\u8a9e\u306f\u3001\u5909\u63db\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u4eca\u5f8c\u306e\u547c\u3073\u51fa\u3057\u3067\u5b8c\u5168\u306b\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n>>> vectorizer.transform(['Something completely new.']).toarray()\n...                           \narray([[0, 0, 0, 0, 0, 0, 0, 0, 0]]...)\n\n\u524d\u306e\u30b3\u30fc\u30d1\u30b9\u3067\u306f\u3001\u6700\u521d\u306e\u6587\u66f8\u3068\u6700\u5f8c\u306e\u6587\u66f8\u306f\u307e\u3063\u305f\u304f\u540c\u3058\u5358\u8a9e\u3092\u6301\u3061\u3001\u7b49\u4fa1\u30d9\u30af\u30c8\u30eb\u3067\u30b3\u30fc\u30c9\u5316\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u7279\u306b\u3001\u6700\u5f8c\u306e\u6587\u66f8\u304c\u7591\u554f\u306e\u66f8\u5f0f\u3067\u3042\u308b\u3068\u3044\u3046\u60c5\u5831\u3092\u5931\u3046\u3002\u9806\u756a\u306e\u60c5\u5831\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b\u30011\u30b0\u30e9\u30e0\uff08\u500b\u3005\u306e\u5358\u8a9e\uff09\u306b\u52a0\u3048\u30662\u30b0\u30e9\u30e0\u306e\u5358\u8a9e\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n>>> bigram_vectorizer = CountVectorizer(ngram_range=(1, 2),\n...                                     token_pattern=r'\\b\\w+\\b', min_df=1)\n>>> analyze = bigram_vectorizer.build_analyzer()\n>>> analyze('Bi-grams are cool!') == (\n...     ['bi', 'grams', 'are', 'cool', 'bi grams', 'grams are', 'are cool'])\nTrue\n\n\u3053\u306e\u30d9\u30af\u30c8\u30eb\u5316\u5668\u306b\u3088\u3063\u3066\u62bd\u51fa\u3055\u308c\u305f\u8a9e\u5f59\u306f\u3001\u306f\u308b\u304b\u306b\u5927\u304d\u304f\u306a\u308a\u3001\u7b26\u53f7\u5316\u3055\u308c\u305f\u969b\u306e\u8a9e\u9806\u4f4d\u7f6e\u60c5\u5831\u306e\u3042\u3044\u307e\u3044\u3055\u3092\u89e3\u6c7a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n>>>\n>>> X_2 = bigram_vectorizer.fit_transform(corpus).toarray()\n>>> X_2\n...                           \narray([[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0],\n       [0, 0, 1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0],\n       [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0],\n       [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1]]...)\n\n\u5177\u4f53\u7684\u306b\u306f\u3001\u300cIs this\u300d\u3068\u3044\u3046\u8cea\u554f\u5211\u306f\u6700\u5f8c\u306e\u6587\u66f8\u306b\u306e\u307f\u5b58\u5728\u3057\u307e\u3059\u3002\n>>> feature_index = bigram_vectorizer.vocabulary_.get('is this')\n>>> X_2[:, feature_index]     \narray([0, 0, 0, 1]...)\n\n\n4.2.3.4. Tf-idf\u91cd\u307f\u4ed8\u3051\n\u5927\u304d\u306a\u30c6\u30ad\u30b9\u30c8\u30b3\u30fc\u30d1\u30b9\u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u5358\u8a9e\u304c\u975e\u5e38\u306b\u591a\u304f\u5b58\u5728\u3057\uff08\u4f8b\u3048\u3070\u3001\u82f1\u8a9e\u3067\u306f\u300cthe\u300d\u3001\u300ca\u300d\u3001\u300cis\u300d\uff09\u3001\u6587\u66f8\u306e\u5185\u5bb9\u306b\u95a2\u3059\u308b\u610f\u5473\u306e\u3042\u308b\u60c5\u5831\u3092\u307b\u3068\u3093\u3069\u6301\u305f\u306a\u3044\u3002\u983b\u5ea6\u60c5\u5831\u3092\u76f4\u63a5\u5206\u985e\u5668\u306b\u76f4\u63a5\u4f9b\u7d66\u3059\u308b\u3068\u3001\u975e\u5e38\u306b\u983b\u7e41\u306b\u4f7f\u7528\u3055\u308c\u308b\u7528\u8a9e\u306f\u3001\u5e0c\u5c11\u3067\u306f\u3042\u308b\u304c\u8208\u5473\u6df1\u3044\u7528\u8a9e\u306e\u983b\u5ea6\u3092\u96a0\u3057\u307e\u3059\u3002\n\u983b\u5ea6\u60c5\u5831\u3092\u5206\u985e\u5668\u306b\u9069\u3057\u305f\u5024\u306b\u3059\u308b\u305f\u3081\u3001tf-idf\u5909\u63db\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u975e\u5e38\u306b\u4e00\u822c\u7684\u3067\u3042\u308b\u3002\nTf-idf\u306f\u5358\u8a9e\u51fa\u73fe\u6570(tf)\u3068\u51fa\u73fe\u6587\u7ae0\u6570\u306e\u9006\u6570(idf)\u3092\u610f\u5473\u3057\u3001tf-idf(t,d)=tf(t,d)\u00d7idf(t)\\text{tf-idf(t,d)}=\\text{tf(t,d)} \\times \\text{idf(t)} \u3067\u3059\u3002\nTfidfTransformer \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a TfidfTransformer(norm='l2', use_idf=True, smooth_idf=True, sublinear_tf=False) \u3092\u4f7f\u3046\u3068\u3001\n\u5358\u8a9e\u983b\u5ea6\u3001\u5358\u8a9e\u304c\u6240\u4e0e\u306e\u6587\u66f8\u5185\u3067\u767a\u751f\u3059\u308b\u56de\u6570\u306f\u6b21\u306e\u3088\u3046\u306b\u8a08\u7b97\u3055\u308c\u305fIDF\u6210\u5206\u3068\u4e57\u7b97\u3055\u308c\u307e\u3059\u3002\n\\text{idf}(t) = log{\\frac{1 + n_d}{1+\\text{df}(d,t)}} + 1\nidf(t)=log1+nd1+df(d,t)+1{\\text{idf}(t) = log{\\frac{1 + n_d}{1+\\text{df}(d,t)}} + 1\n}\n\u3053\u3053\u3067 ndn_d \u306f\u6587\u66f8\u306e\u7dcf\u6570\u3067\u3042\u308a\u3001df(d,t)\\text{df}(d,t) \u306f\u5358\u8a9e tt \u3092\u542b\u3080\u6587\u66f8\u306e\u6570\u3067\u3059\u3002\u5f97\u3089\u308c\u305ftf-idf\u30d9\u30af\u30c8\u30eb\u306f\u3001\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u30ce\u30eb\u30e0\u306b\u3088\u3063\u3066\u6b63\u898f\u5316\u3055\u308c\u308b\u3002\nv_{norm} = \\frac{v}{||v||_2} \uff1d \\frac{v}{\\sqrt{v{\\_1}^2 + v{\\_2}^2 + \\dots + v{\\_n}^2}}\nvnorm=v||v||2\uff1dv\u221av_12+v_22+\u22ef+v_n2{v_{norm} = \\frac{v}{||v||_2} \uff1d \\frac{v}{\\sqrt{v{\\_1}^2 + v{\\_2}^2 + \\dots + v{\\_n}^2}}\n}\n\u3053\u308c\u306f\u3082\u3068\u3082\u3068\u3001\u6587\u66f8\u306e\u5206\u985e\u3084\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3067\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u60c5\u5831\u691c\u7d22\u7528\u306b\u958b\u767a\u3055\u308c\u305f\u5358\u8a9e\u91cd\u307f\u4ed8\u3051\u65b9\u5f0f\uff08\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u691c\u7d22\u7d50\u679c\u306e\u9806\u4f4d\u4ed8\u3051\u6a5f\u80fd\uff09\u3067\u3057\u305f\u3002\n\u4ee5\u4e0b\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001tf-idfs\u304c\u3069\u306e\u3088\u3046\u306b\u6b63\u78ba\u306b\u8a08\u7b97\u3055\u308c\u3001scikit-learn\u306e TfidfTransformer\u3068 TfidfVectorizer \u3067\u8a08\u7b97\u3055\u308c\u305ftf-idfs\u304c\u3001idf\u3092\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u6a19\u6e96\u306e\u6559\u79d1\u66f8\u306e\u8868\u8a18\u6cd5\u3068\u5c11\u3057\u9055\u3063\u3066\u3044\u308b\u304b\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\\text{idf}(t) = log{\\frac{n_d}{1+\\text{df}(d,t)}}\nidf(t)=lognd1+df(d,t){\\text{idf}(t) = log{\\frac{n_d}{1+\\text{df}(d,t)}}\n}\nTfidfTransformer\u304a\u3088\u3073TfidfVectorizer\u3067\u306f\u3001smooth_idf = False\u306b\u3059\u308b\u3068idf\u306e\u5206\u6bcd\u306e\u4ee3\u308f\u308a\u306bidf\u306b \"1\"\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\nidf(t)=lognddf(d,t)+1\\text{idf}(t) = log{\\frac{n_d}{\\text{df}(d,t)}} + 1\n\u3053\u306e\u6b63\u898f\u5316\u306f\u3001TfidfTransformer\u30af\u30e9\u30b9\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u307e\u3059\u3002\n>>> from sklearn.feature_extraction.text import TfidfTransformer\n>>> transformer = TfidfTransformer(smooth_idf=False)\n>>> transformer   \nTfidfTransformer(norm=...'l2', smooth_idf=False, sublinear_tf=False,\n                 use_idf=True)\n\n\u518d\u5ea6\u3001\u3059\u3079\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f8b\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u6700\u521d\u306e\u5358\u8a9e\u306e\u51fa\u73fe\u7387\u306f100\uff05\u3067\u3042\u308a\u3001\u305d\u308c\u307b\u3069\u8208\u5473\u6df1\u3044\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u4ed6\u306e2\u3064\u306e\u7279\u5fb4\u306e\u51fa\u73fe\u7387\u306f50\uff05\u672a\u6e80\u3057\u304b\u306a\u3044\u305f\u3081\u3001\u304a\u305d\u3089\u304f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u5185\u5bb9\u3092\u3088\u308a\u3088\u304f\u8868\u3057\u307e\u3059\u3002\n>>> counts = [[3, 0, 1],\n...           [2, 0, 0],\n...           [3, 0, 0],\n...           [4, 0, 0],\n...           [3, 2, 0],\n...           [3, 0, 2]]\n...\n>>> tfidf = transformer.fit_transform(counts)\n>>> tfidf                         \n<6x3 sparse matrix of type '<... 'numpy.float64'>'\n    with 9 stored elements in Compressed Sparse ... format>\n\n>>> tfidf.toarray()                        \narray([[ 0.81940995,  0.        ,  0.57320793],\n       [ 1.        ,  0.        ,  0.        ],\n       [ 1.        ,  0.        ,  0.        ],\n       [ 1.        ,  0.        ,  0.        ],\n       [ 0.47330339,  0.88089948,  0.        ],\n       [ 0.58149261,  0.        ,  0.81355169]])\n\n\u5404\u884c\u306f\u3001\u5358\u4f4d\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u6a19\u6e96\u3092\u6709\u3059\u308b\u3088\u3046\u306b\u6b63\u898f\u5316\u3055\u308c\u308b\uff1a\nv\\_{norm} = \\frac{v}{||v||\\_2} = \\frac{v}{\\sqrt{v{\\_1}^2 + v{\\_2}^2 + \\dots + v{_n}^2}}\nv_norm=v||v||_2=v\u221av_12+v_22+\u22ef+vn2{v\\_{norm} = \\frac{v}{||v||\\_2} = \\frac{v}{\\sqrt{v{\\_1}^2 + v{\\_2}^2 + \\dots + v{_n}^2}}\n}\n\u305f\u3068\u3048\u3070\u3001counts\u914d\u5217\u306e\u6700\u521d\u306e\u6587\u66f8\u306e\u6700\u521d\u306e\u9805\u306etf-idf\u3092\u6b21\u306e\u3088\u3046\u306b\u8a08\u7b97\u3067\u304d\u307e\u3059\u3002\nn_{d, {\\text{term1}}} = 6  \\\\\n\\text{df}(d, t)_{\\text{term1}} = 6  \\\\\n\\text{idf}(d, t)_{\\text{term1}} = log \\frac{n_d}{\\text{df}(d, t)} + 1 = log(1)+1 = 1  \\\\\n\\text{tf-idf}_{\\text{term1}} = \\text{tf} \\times \\text{idf} = 3 \\times 1 = 3\nnd,term1=6df(d,t)term1=6idf(d,t)term1=lognddf(d,t)+1=log(1)+1=1tf-idfterm1=tf\u00d7idf=3\u00d71=3{n_{d, {\\text{term1}}} = 6  \\\\\n\\text{df}(d, t)_{\\text{term1}} = 6  \\\\\n\\text{idf}(d, t)_{\\text{term1}} = log \\frac{n_d}{\\text{df}(d, t)} + 1 = log(1)+1 = 1  \\\\\n\\text{tf-idf}_{\\text{term1}} = \\text{tf} \\times \\text{idf} = 3 \\times 1 = 3\n}\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5185\u306e\u6b8b\u308a\u306e2\u3064\u306e\u9805\u306b\u3064\u3044\u3066\u3053\u306e\u8a08\u7b97\u3092\u7e70\u308a\u8fd4\u3059\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\\text{tf-idf}_{\\text{term2}} = 0 \\times log(6/1)+1 = 0 \\\\\n\\text{tf-idf}_{\\text{term3}} = 1 \\times log(6/2)+1 \\approx 2.0986\ntf-idfterm2=0\u00d7log(6/1)+1=0tf-idfterm3=1\u00d7log(6/2)+1\u22482.0986{\\text{tf-idf}_{\\text{term2}} = 0 \\times log(6/1)+1 = 0 \\\\\n\\text{tf-idf}_{\\text{term3}} = 1 \\times log(6/2)+1 \\approx 2.0986\n}\n\u751f\u306etf-idfs\u306e\u30d9\u30af\u30c8\u30eb\uff1a\n\\text{tf-idf}_raw = [3, 0, 2.0986]\ntf-idfraw=[3,0,2.0986]{\\text{tf-idf}_raw = [3, 0, 2.0986]\n}\n\u6b21\u306b\u3001\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\uff08L2\uff09\u30ce\u30eb\u30e0\u3092\u9069\u7528\u3059\u308b\u3068\u3001\u6587\u66f81\u306b\u5bfe\u3057\u3066\u4ee5\u4e0b\u306etf-idfs\u304c\u5f97\u3089\u308c\u308b\u3002\n\\frac{[3, 0, 2.0986]}{\\sqrt{\\big(3^2 + 0^2 + 2.0986^2\\big)}}\n= [ 0.819,  0,  0.573]\n[3,0,2.0986]\u221a(32+02+2.09862)=[0.819,0,0.573]{\\frac{[3, 0, 2.0986]}{\\sqrt{\\big(3^2 + 0^2 + 2.0986^2\\big)}}\n= [ 0.819,  0,  0.573]\n}\n\u3055\u3089\u306b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30e9\u30e1\u30fc\u30bfsmooth_idf = True\u306f\u3001\u5206\u5b50\u3068\u5206\u6bcd\u306b\u300c1\u300d\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u4f59\u5206\u306a\u6587\u66f8\u304c\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5185\u306e\u3059\u3079\u3066\u306e\u9805\u3092\u6b63\u78ba\u306b1\u56de\u542b\u3080\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u3002\u30bc\u30ed\u5272\u3092\u9632\u6b62\u3057\u307e\u3059\u3002\n\\text{idf}(t) = log{\\frac{1 + n_d}{1+\\text{df}(d,t)}} + 1\nidf(t)=log1+nd1+df(d,t)+1{\\text{idf}(t) = log{\\frac{1 + n_d}{1+\\text{df}(d,t)}} + 1\n}\n\u3053\u306e\u5909\u66f4\u3092\u4f7f\u7528\u3057\u3066\u3001\u6587\u66f81\u306e\u7b2c3\u9805\u306etf-idf\u304c1.8473\u306b\u5909\u66f4\u3055\u308c\u307e\u3059\u3002\n\\text{tf-idf}_{\\text{term3}} = 1 \\times log(7/3)+1 \\approx 1.8473\ntf-idfterm3=1\u00d7log(7/3)+1\u22481.8473{\\text{tf-idf}_{\\text{term3}} = 1 \\times log(7/3)+1 \\approx 1.8473\n}\n\u305d\u3057\u3066\u3001L2\u6b63\u898f\u5316\u3055\u308c\u305ftf-idf\u306f\n\\frac{[3, 0, 1.8473]}{\\sqrt{\\big(3^2 + 0^2 + 1.8473^2\\big)}} = [0.8515, 0, 0.5243]\n[3,0,1.8473]\u221a(32+02+1.84732)=[0.8515,0,0.5243]{\\frac{[3, 0, 1.8473]}{\\sqrt{\\big(3^2 + 0^2 + 1.8473^2\\big)}} = [0.8515, 0, 0.5243]\n}\n>>> transformer = TfidfTransformer()\n>>> transformer.fit_transform(counts).toarray()\narray([[ 0.85151335,  0.        ,  0.52433293],\n       [ 1.        ,  0.        ,  0.        ],\n       [ 1.        ,  0.        ,  0.        ],\n       [ 1.        ,  0.        ,  0.        ],\n       [ 0.55422893,  0.83236428,  0.        ],\n       [ 0.63035731,  0.        ,  0.77630514]])\n\nfit \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306b\u3088\u3063\u3066\u8a08\u7b97\u3055\u308c\u305f\u5404\u30d5\u30a3\u30fc\u30c1\u30e3\u306e\u91cd\u307f\u306f\u3001model\u5c5e\u6027\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n>>> transformer.idf_                       \narray([ 1. ...,  2.25...,  1.84...])\n\ntf-idf\u306f\u30c6\u30ad\u30b9\u30c8\u6a5f\u80fd\u306b\u975e\u5e38\u306b\u3088\u304f\u4f7f\u7528\u3055\u308c\u308b\u306e\u3067\u3001CountVectorizer\u3068TfidfTransformer\u306e\u3059\u3079\u3066\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5358\u4e00\u306e\u30e2\u30c7\u30eb\u306b\u307e\u3068\u3081\u308bTfidfVectorizer\u3068\u3044\u3046\u5225\u306e\u30af\u30e9\u30b9\u3082\u3042\u308a\u307e\u3059:\n>>> from sklearn.feature_extraction.text import TfidfVectorizer\n>>> vectorizer = TfidfVectorizer(min_df=1)\n>>> vectorizer.fit_transform(corpus)\n...                                \n<4x9 sparse matrix of type '<... 'numpy.float64'>'\n    with 19 stored elements in Compressed Sparse ... format>\n\nTF-IDF\u6b63\u898f\u5316\u306f\u3001\u3057\u3070\u3057\u3070\u975e\u5e38\u306b\u6709\u7528\u3067\u3042\u308b\u304c\u3001\u30d0\u30a4\u30ca\u30ea\u767a\u751f\u30de\u30fc\u30ab\u30fc\u304c\u3001\u3088\u308a\u826f\u3044\u7279\u5fb4\u3092\u63d0\u4f9b\u3059\u308b\u4f8b\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002 \u3053\u308c\u306f\u3001CountVectorizer\u306ebinary \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002 \u7279\u306b\u3001Bernoulli Naive Bayes \u306e\u3088\u3046\u306a\u63a8\u5b9a\u5668\u306f\u3001\u96e2\u6563\u30d6\u30fc\u30eb\u78ba\u7387\u5909\u6570\u3092\u660e\u793a\u7684\u306b\u30e2\u30c7\u30eb\u5316\u3059\u308b\u3002\u307e\u305f\u3001\u975e\u5e38\u306b\u77ed\u3044\u30c6\u30ad\u30b9\u30c8\u306ftf-idf\u3067\u30ce\u30a4\u30ba\u304c\u591a\u304f\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u3001\u4e00\u65b9\u3001\u30d0\u30a4\u30ca\u30ea\u767a\u751f\u60c5\u5831\u306f\u3088\u308a\u5b89\u5b9a\u3057\u3066\u3044\u308b\u3002\n\u3044\u3064\u3082\u306e\u3088\u3046\u306b\u3001\u7279\u5fb4\u62bd\u51fa\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u6574\u3059\u308b\u6700\u826f\u306e\u65b9\u6cd5\u306f\u3001\u4f8b\u3048\u3070\u3001\u7279\u5fb4\u62bd\u51fa\u5668\u3092\u5206\u985e\u5668\u3067\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u5316\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30af\u30ed\u30b9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u305f\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3042\u308b\u3002\n\n\u30c6\u30ad\u30b9\u30c8\u306e\u7279\u5fb4\u62bd\u51fa\u3068\u8a55\u4fa1\u306e\u305f\u3081\u306e\u30b5\u30f3\u30d7\u30eb\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\n\n\n4.2.3.5. \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30c7\u30b3\u30fc\u30c9\n\u30c6\u30ad\u30b9\u30c8\u306f\u6587\u5b57\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30d5\u30a1\u30a4\u30eb\u306f\u30d0\u30a4\u30c8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30d0\u30a4\u30c8\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306b\u5f93\u3063\u305f\u6587\u5b57\u3092\u8868\u3057\u307e\u3059\u3002 Python\u3067\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u64cd\u4f5c\u3059\u308b\u306b\u306f\u3001\u305d\u306e\u30d0\u30a4\u30c8\u3092Unicode\u3068\u547c\u3070\u308c\u308b\u6587\u5b57\u30bb\u30c3\u30c8\u306b\u30c7\u30b3\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4e00\u822c\u7684\u306a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306fASCII\u3001Latin-1\uff08\u897f\u30e8\u30fc\u30ed\u30c3\u30d1\uff09\u3001KOI8-R\uff08\u30ed\u30b7\u30a2\u8a9e\uff09\u3001\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0UTF-8\u3068UTF-16\u3067\u3059\u3002\u4ed6\u306b\u3082\u591a\u304f\u306e\u3082\u306e\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n \u6ce8\uff1a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306f\u300c\u6587\u5b57\u30bb\u30c3\u30c8\u300d\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u306e\u7528\u8a9e\u306e\u7cbe\u5ea6\u306f\u4f4e\u304f\u306a\u308a\u307e\u3059\u3002\u5358\u4e00\u306e\u6587\u5b57\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u8907\u6570\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u5b58\u5728\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\nscikit-learn\u306e\u30c6\u30ad\u30b9\u30c8\u7279\u5fb4\u91cf\u62bd\u51fa\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30c7\u30b3\u30fc\u30c9\u65b9\u6cd5\u3092\u77e5\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u65b9\u6cd5\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u306e\u307f\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u76ee\u7684\u306e\u305f\u3081\u306b\u3001CountVectorizer\u306fencoding\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u308a\u307e\u3059\u3002\u73fe\u4ee3\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u3001\u6b63\u3057\u3044\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306f\u304a\u305d\u3089\u304fUTF-8\u3067\u3042\u308b\u305f\u3081\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\uff08encoding = \"utf-8\"\uff09\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u30ed\u30fc\u30c9\u3057\u3066\u3044\u308b\u30c6\u30ad\u30b9\u30c8\u304c\u5b9f\u969b\u306bUTF-8\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001UnicodeDecodeError\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u30c7\u30b3\u30fc\u30c9\u30a8\u30e9\u30fc\u306b\u3064\u3044\u3066\u306f\u3001decode_error\u30d1\u30e9\u30e1\u30fc\u30bf\u3092 \"ignore\"\u307e\u305f\u306f \"replace\"\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u3092\u9ed9\u3089\u305b\u307e\u3059\u3002 Python\u30d7\u30ed\u30f3\u30d7\u30c8\u3067help\uff08bytes.decode\uff09\u3068\u5165\u529b\u3057\u3001Python\u95a2\u6570 bytes.decode \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30c6\u30ad\u30b9\u30c8\u306e\u30c7\u30b3\u30fc\u30c9\u306b\u554f\u984c\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff1a\n\n\u30c6\u30ad\u30b9\u30c8\u306e\u5b9f\u969b\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u4f55\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b\u3002\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u3001\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u793a\u3059\u30d8\u30c3\u30c0\u30fc\u307e\u305f\u306fREADME\u304c\u4ed8\u3044\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30c6\u30ad\u30b9\u30c8\u306e\u51fa\u6240\u306b\u57fa\u3065\u3044\u3066\u60f3\u5b9a\u3067\u304d\u308b\u6a19\u6e96\u7684\u306a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u3042\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\nUNIX\u30b3\u30de\u30f3\u30c9\u30fb\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3001\u3069\u306e\u3088\u3046\u306a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u4e00\u822c\u7684\u3067\u3042\u308b\u304b\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Python\u306echardet\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306f\u3001\u7279\u5b9a\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u63a8\u6e2c\u3059\u308bchardetect.py\u3068\u3044\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u4ed8\u5c5e\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u6b63\u3057\u3044\u3068\u63a8\u6e2c\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\nUTF-8\u3092\u8a66\u3057\u3066\u30a8\u30e9\u30fc\u3092\u7121\u8996\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 bytes.decode\uff08errors = 'replace'\uff09\u3067\u30d0\u30a4\u30c8\u6587\u5b57\u5217\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u30c7\u30b3\u30fc\u30c9\u30a8\u30e9\u30fc\u3092\u610f\u5473\u306e\u306a\u3044\u6587\u5b57\u306b\u7f6e\u304d\u63db\u3048\u305f\u308a\u3001\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u3067decode_error = 'replace'\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u7279\u5fb4\u91cf\u306e\u6709\u7528\u6027\u304c\u640d\u306a\u308f\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\u5b9f\u969b\u306e\u30c6\u30ad\u30b9\u30c8\u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u3055\u307e\u3056\u307e\u306a\u30bd\u30fc\u30b9\u304b\u3089\u6765\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3057\u3001\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3055\u308c\u305f\u3082\u306e\u3068\u306f\u7570\u306a\u308b\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u3046\u3063\u304b\u308a\u30c7\u30b3\u30fc\u30c9\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001Web\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u3067\u306f\u4e00\u822c\u7684\u3067\u3059\u3002 Python\u30d1\u30c3\u30b1\u30fc\u30b8\u306eftfy\u306f\u81ea\u52d5\u7684\u306b\u3044\u304f\u3064\u304b\u306e\u30af\u30e9\u30b9\u306e\u30c7\u30b3\u30fc\u30c9\u30a8\u30e9\u30fc\u3092\u4e26\u3079\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u672a\u77e5\u306e\u30c6\u30ad\u30b9\u30c8\u3092latin-1\u3068\u3057\u3066\u30c7\u30b3\u30fc\u30c9\u3057\u3001ftfy\u3092\u4f7f\u3063\u3066\u30a8\u30e9\u30fc\u3092\u4fee\u6b63\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30c6\u30ad\u30b9\u30c8\u304c\u4e26\u3079\u66ff\u3048\u304c\u96e3\u3057\u3044\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u3054\u305f\u307e\u305c\u306e\u5834\u5408\uff0820 Newsgroups \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306a\u3069\uff09\u3001latin-1\u306e\u3088\u3046\u306a\u5358\u7d14\u306a\u30b7\u30f3\u30b0\u30eb\u30d0\u30a4\u30c8\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306b\u623b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e00\u90e8\u306e\u30c6\u30ad\u30b9\u30c8\u306f\u6b63\u3057\u304f\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u5c11\u306a\u304f\u3068\u3082\u540c\u3058\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u30d0\u30a4\u30c8\u306f\u5e38\u306b\u540c\u3058\u6a5f\u80fd\u3092\u8868\u3057\u307e\u3059\u3002\n\n\u305f\u3068\u3048\u3070\u3001\u6b21\u306e\u30b9\u30cb\u30da\u30c3\u30c8\u306f\u30013\u3064\u306e\u30c6\u30ad\u30b9\u30c8\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u628a\u63e1\u3059\u308b\u305f\u3081\u306bchardet\uff08scikit-learn\u3068\u4e00\u7dd2\u306b\u306f\u51fa\u8377\u3055\u308c\u305a\u3001\u5225\u9014\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff09\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u30c6\u30ad\u30b9\u30c8\u3092\u30d9\u30af\u30c8\u30eb\u5316\u3057\u3001\u5b66\u7fd2\u3057\u305f\u8a9e\u5f59\u3092\u5370\u5237\u3057\u307e\u3059\u3002\u51fa\u529b\u306f\u3053\u3053\u3067\u306f\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u3002\n>>> import chardet    \n>>> text1 = b\"Sei mir gegr\\xc3\\xbc\\xc3\\x9ft mein Sauerkraut\"\n>>> text2 = b\"holdselig sind deine Ger\\xfcche\"\n>>> text3 = b\"\\xff\\xfeA\\x00u\\x00f\\x00 \\x00F\\x00l\\x00\\xfc\\x00g\\x00e\\x00l\\x00n\\x00 \\x00d\\x00e\\x00s\\x00 \\x00G\\x00e\\x00s\\x00a\\x00n\\x00g\\x00e\\x00s\\x00,\\x00 \\x00H\\x00e\\x00r\\x00z\\x00l\\x00i\\x00e\\x00b\\x00c\\x00h\\x00e\\x00n\\x00,\\x00 \\x00t\\x00r\\x00a\\x00g\\x00 \\x00i\\x00c\\x00h\\x00 \\x00d\\x00i\\x00c\\x00h\\x00 \\x00f\\x00o\\x00r\\x00t\\x00\"\n>>> decoded = [x.decode(chardet.detect(x)['encoding'])\n...            for x in (text1, text2, text3)]        \n>>> v = CountVectorizer().fit(decoded).vocabulary_    \n>>> for term in v: print(v)                           \n\n\uff08chardet\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u306f\u3001\u6700\u521d\u306e\u3082\u306e\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\uff09\nUnicode\u3068\u6587\u5b57\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u6982\u8981\u306b\u3064\u3044\u3066\u306f\u3001Joel Spolsky\u306e\u3059\u3079\u3066\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u8005\u304cUnicode\u306b\u3064\u3044\u3066\u77e5\u3063\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u7d76\u5bfe\u6700\u5c0f\u5024\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n4.2.3.6. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u30b5\u30f3\u30d7\u30eb\nBag of Words \u8868\u73fe\u306f\u975e\u5e38\u306b\u5358\u7d14\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u306f\u9a5a\u304f\u307b\u3069\u6709\u7528\u3067\u3059\u3002\n\u7279\u306b \u6559\u5e2b\u3042\u308a\u8a2d\u5b9a \u3067\u306f\u3001 \u6587\u66f8\u5206\u985e\u5668 \u3092\u8a13\u7df4\u3059\u308b\u305f\u3081\u306b\u3001\u9ad8\u901f\u3067\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u7dda\u5f62\u30e2\u30c7\u30eb\u3068\u3046\u307e\u304f\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u758e\u306a\u7279\u5fb4\u3092\u7528\u3044\u305f\u30c6\u30ad\u30b9\u30c8\u6587\u66f8\u306e\u5206\u985e\n\n\u6559\u5e2b\u306a\u3057\u8a2d\u5b9a\u3067\u306f\u3001K-means\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u985e\u4f3c\u3057\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u307e\u3068\u3081\u3066\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nk-means\u3092\u4f7f\u7528\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u6587\u66f8\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\n\u6700\u5f8c\u306b\u3001\u975e\u8ca0\u884c\u5217\u5206\u89e3\uff08NMF\u307e\u305f\u306fNNMF\uff09\u3092\u4f7f\u7528\u3059\u308b\u306a\u3069\u3001\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u30cf\u30fc\u30c9\u5272\u308a\u5f53\u3066\u5236\u7d04\u3092\u7de9\u548c\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30b3\u30fc\u30d1\u30b9\u306e\u4e3b\u8981\u30c8\u30d4\u30c3\u30af\u3092\u767a\u898b\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u975e\u8ca0\u884c\u5217\u5206\u89e3\u3068\u6f5c\u5728\u7684\u30b8\u30ea\u30af\u30ec\u30c3\u30c8\u5272\u308a\u5f53\u3066\u3092\u7528\u3044\u305f\u30c8\u30d4\u30c3\u30af\u62bd\u51fa\n\n\n4.2.3.7. Bag of Words\u306e\u8868\u73fe\u306e\u9650\u754c\n\u30e6\u30cb\u30b0\u30e9\u30e0\u306e\u96c6\u5408\uff08\u3069\u306e\u5358\u8a9e\u306e\u888b\u3067\u3042\u308b\u304b\uff09\u306f\u3001\u30d5\u30ec\u30fc\u30ba\u3084\u8907\u6570\u5358\u8a9e\u306e\u8868\u73fe\u3092\u6355\u6349\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305a\u3001\u52b9\u679c\u7684\u306b\u5358\u8a9e\u9806\u5e8f\u306e\u4f9d\u5b58\u6027\u3092\u7121\u8996\u3057\u307e\u3059\u3002\u3055\u3089\u306b\u3001Bag of Words\u30e2\u30c7\u30eb\u306f\u3001\u6f5c\u5728\u7684\u306a\u30b9\u30da\u30eb\u30df\u30b9\u307e\u305f\u306f\u5358\u8a9e\u306e\u6d3e\u751f\u3092\u8aac\u660e\u3057\u307e\u305b\u3093\u3002\n\u6551\u52a9\u306bN\u30b0\u30e9\u30e0\uff01\u30e6\u30cb\u30b0\u30e9\u30e0\u306e\u5358\u7d14\u306a\u96c6\u5408\uff08n = 1\uff09\u3092\u69cb\u7bc9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u9023\u7d9a\u3059\u308b\u5358\u8a9e\u306e\u5bfe\u306e\u51fa\u73fe\u3092\u6570\u3048\u308b\u30d0\u30a4\u30b0\u30e9\u30e0\uff08n = 2\uff09\u306e\u96c6\u5408\u3092\u597d\u3080\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u4ee3\u308f\u308a\u306b\u3001\u6587\u5b57N\u30b0\u30e9\u30e0\u306e\u96c6\u5408\u3001\u30b9\u30da\u30eb\u30df\u30b9\u3084\u6d3e\u751f\u8a9e\u306b\u5bfe\u3059\u308b\u5f3e\u529b\u6027\u306e\u3042\u308b\u8868\u73fe\u3092\u8003\u616e\u3057\u3066\u3082\u3088\u3044\u3002\n\u305f\u3068\u3048\u3070\u30012\u3064\u306e\u6587\u66f8['words'\u3001 'wprds']\u306e\u30b3\u30fc\u30d1\u30b9\u3092\u6271\u3063\u3066\u3044\u308b\u3068\u3057\u307e\u3057\u3087\u3046\u3002 2\u756a\u76ee\u306e\u6587\u66f8\u306b\u306f\u5358\u8a9e\u300c\u5358\u8a9e\u300d\u306e\u30b9\u30da\u30eb\u30df\u30b9\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u5358\u7d14\u306aBag of Words\u8868\u73fe\u306f\u3001\u3053\u308c\u3089\u306e2\u3064\u3092\u975e\u5e38\u306b\u7570\u306a\u308b\u6587\u66f8\u3068\u307f\u306a\u3057\u30012\u3064\u306e\u53ef\u80fd\u306a\u7279\u5fb4\u306e\u4e21\u65b9\u304c\u7570\u306a\u308b\u3002\u3057\u304b\u3057\u3001\u6587\u5b572\u30b0\u30e9\u30e0\u8868\u73fe\u306f\u30018\u3064\u306e\u7279\u5fb4\u306e\u3046\u30614\u3064\u306b\u4e00\u81f4\u3059\u308b\u6587\u66f8\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u3053\u308c\u306f\u597d\u307e\u3057\u3044\u5206\u985e\u5668\u304c\u3088\u308a\u826f\u304f\u6c7a\u5b9a\u3059\u308b\u306e\u3092\u52a9\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n>>> ngram_vectorizer = CountVectorizer(analyzer='char_wb', ngram_range=(2, 2), min_df=1)\n>>> counts = ngram_vectorizer.fit_transform(['words', 'wprds'])\n>>> ngram_vectorizer.get_feature_names() == (\n...     [' w', 'ds', 'or', 'pr', 'rd', 's ', 'wo', 'wp'])\nTrue\n>>> counts.toarray().astype(int)\narray([[1, 1, 1, 0, 1, 1, 1, 0],\n       [1, 1, 0, 1, 1, 1, 0, 1]])\n\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001 char_wb\u30a2\u30ca\u30e9\u30a4\u30b6\u30fc\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u5358\u8a9e\u5883\u754c\u5185\u306e\u6587\u5b57\u304b\u3089\u306e\u307fn\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\uff08\u4e21\u5074\u306b\u30b9\u30da\u30fc\u30b9\u304c\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\uff09\u3002\u4ee3\u308f\u308a\u306b\u3001 char\u30a2\u30ca\u30e9\u30a4\u30b6\u306f\u5358\u8a9e\u306b\u307e\u305f\u304c\u308bn-gram\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a\n>>>\n>>> ngram_vectorizer = CountVectorizer(analyzer='char_wb', ngram_range=(5, 5), min_df=1)\n>>> ngram_vectorizer.fit_transform(['jumpy fox'])\n...                                \n<1x4 sparse matrix of type '<... 'numpy.int64'>'\n   with 4 stored elements in Compressed Sparse ... format>\n>>> ngram_vectorizer.get_feature_names() == (\n...     [' fox ', ' jump', 'jumpy', 'umpy '])\nTrue\n\n>>> ngram_vectorizer = CountVectorizer(analyzer='char', ngram_range=(5, 5), min_df=1)\n>>> ngram_vectorizer.fit_transform(['jumpy fox'])\n...                                \n<1x5 sparse matrix of type '<... 'numpy.int64'>'\n    with 5 stored elements in Compressed Sparse ... format>\n>>> ngram_vectorizer.get_feature_names() == (\n...     ['jumpy', 'mpy f', 'py fo', 'umpy ', 'y fox'])\nTrue\n\n\u5358\u8a9e\u306e\u5883\u754c\u3092\u610f\u8b58\u3057\u305f\u5909\u7a2echar_wb\u306f\u3001\u5358\u8a9e\u5206\u96e2\u306e\u305f\u3081\u306e\u7a7a\u767d\u3092\u4f7f\u7528\u3059\u308b\u8a00\u8a9e\u3067\u7279\u306b\u8208\u5473\u6df1\u3044\u3067\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u8a00\u8a9e\u306e\u5834\u5408\u3001\u30b9\u30da\u30eb\u30df\u30b9\u3084\u5358\u8a9e\u306e\u6d3e\u751f\u306b\u95a2\u3059\u308b\u5805\u7262\u6027\u3092\u4fdd\u3061\u306a\u304c\u3089\u3001\u305d\u306e\u3088\u3046\u306a\u7279\u5fb4\u3092\u7528\u3044\u3066\u8a13\u7df4\u3055\u308c\u305f\u5206\u985e\u5668\u306e\u4e88\u6e2c\u7cbe\u5ea6\u3068\u53ce\u675f\u901f\u5ea6\u306e\u4e21\u65b9\u3092\u9ad8\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u500b\u3005\u306e\u5358\u8a9e\u306e\u4ee3\u308f\u308a\u306bn\u30b0\u30e9\u30e0\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3044\u304f\u3064\u304b\u306e\u8a9e\u9806\u3092\u4fdd\u5b58\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001Bag of Words \u3084 Bag of n-gram \u306f\u6587\u66f8\u306e\u5185\u90e8\u69cb\u9020\u306e\u5927\u90e8\u5206\u3092\u7834\u58ca\u3057\u3001\u305d\u306e\u5185\u90e8\u69cb\u9020\u306b\u3088\u3063\u3066\u904b\u3070\u308c\u308b\u610f\u5473\u306e\u307b\u3068\u3093\u3069\u3092\u7834\u58ca\u3057\u307e\u3059\u3002\n\u81ea\u7136\u8a00\u8a9e\u7406\u89e3\u306e\u5e45\u5e83\u3044\u8ab2\u984c\u306b\u53d6\u308a\u7d44\u3080\u305f\u3081\u306b\u306f\u3001\u6587\u7ae0\u3068\u6bb5\u843d\u306e\u5c40\u6240\u69cb\u9020\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u30e2\u30c7\u30eb\u306e\u591a\u304f\u306f\u3001\u73fe\u5728\u3001scikit-learn \u306e\u5bfe\u8c61\u5916\u3068\u306a\u3063\u3066\u3044\u308b\u300c\u69cb\u9020\u5316\u3055\u308c\u305f\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u300d\u306e\u554f\u984c\u3068\u3057\u3066\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u307e\u3059\u3002\n\n4.2.3.8. \u30cf\u30c3\u30b7\u30e5\u30c8\u30ea\u30c3\u30af\u3092\u4f7f\u7528\u3057\u3066\u5927\u304d\u306a\u30c6\u30ad\u30b9\u30c8\u30b3\u30fc\u30d1\u30b9\u3092\u30d9\u30af\u30c8\u30eb\u5316\u3059\u308b\n\u4e0a\u8a18\u306e\u30d9\u30af\u30c8\u30eb\u5316\u30b9\u30ad\u30fc\u30e0\u306f\u5358\u7d14\u3067\u3059\u304c\u3001\u6587\u5b57\u5217\u304b\u3089\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3078\u306e\u30de\u30c3\u30d4\u30f3\u30b0\uff08vocabulary_\u5c5e\u6027\uff09\u3092\u30e1\u30e2\u30ea\u30fc\u5185\u306b\u4fdd\u6301\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u5927\u304d\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u6271\u3046\u3068\u304d\u306b\u3044\u304f\u3064\u304b\u306e\u554f\u984c\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30d1\u30b9\u304c\u5927\u304d\u304f\u306a\u308c\u3070\u306a\u308b\u307b\u3069\u3001\u8a9e\u5f59\u304c\u5927\u304d\u304f\u306a\u308a\u3001\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u3082\u5897\u3048\u307e\u3059\u3002\n\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u306b\u306f\u3001\u5143\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30b5\u30a4\u30ba\u306b\u6bd4\u4f8b\u3057\u305f\u30b5\u30a4\u30ba\u306e\u4e2d\u9593\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u5272\u308a\u5f53\u3066\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u5358\u8a9e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u69cb\u7bc9\u3059\u308b\u306b\u306f\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4e00\u65e6\u5168\u3066\u8aad\u307f\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u53b3\u5bc6\u306b\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u5668\u3092\u9069\u5408\u3055\u305b\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u5927\u304d\u306a\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u3092\u6301\u3064\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba/\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306f\u3001\u975e\u5e38\u306b\u9045\u3044\uff08\u901a\u5e38\u3001\u540c\u3058\u30b5\u30a4\u30ba\u306eNumPy\u914d\u5217\u306a\u3069\u306e\u30d5\u30e9\u30c3\u30c8\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba/\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3059\u308b\u3088\u308a\u3082\u306f\u308b\u304b\u306b\u9045\u3044\uff09\u3002\nvocabulary_\u5c5e\u6027\u304c\u304d\u3081\u7d30\u304b\u3044\u540c\u671f\u969c\u58c1\u3092\u6709\u3059\u308b\u306e\u3067\u3001\u30d9\u30af\u30c8\u30eb\u5316\u4f5c\u696d\u3092\u4e26\u884c\u3057\u305f\u30b5\u30d6\u30bf\u30b9\u30af\u306b\u5206\u5272\u3059\u308b\u3053\u3068\u306f\u5bb9\u6613\u3067\u306f\u306a\u3044\u3002\u3059\u306a\u308f\u3061\u3001\u30c8\u30fc\u30af\u30f3\u6587\u5b57\u5217\u304b\u3089\u7279\u5fb4\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3078\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u6700\u521d\u306e\u51fa\u73fe\u9806\u5e8f\u3057\u305f\u304c\u3063\u3066\u30c8\u30fc\u30af\u30f3\u304c\u5171\u6709\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u305a\u3001\u4e26\u5217\u5316\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u9010\u6b21\u51e6\u7406\u3088\u308a\u9045\u304f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\nsklearn.feature_extraction.FeatureHasher \u30af\u30e9\u30b9\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u305f \"\u30cf\u30c3\u30b7\u30f3\u30b0\u30c8\u30ea\u30c3\u30af\"\uff08\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30cf\u30c3\u30b7\u30e5\uff09\u3068\u3001CountVectorizer\u306e\u30c6\u30ad\u30b9\u30c8\u524d\u51e6\u7406\u304a\u3088\u3073\u30c8\u30fc\u30af\u30f3\u5316\u6a5f\u80fd\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u3053\u308c\u3089\u306e\u5236\u9650\u3092\u514b\u670d\u3067\u304d\u307e\u3059\u3002\n\u3053\u306e\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u307b\u3068\u3093\u3069\u304cCountVectorizer\u3068\u4e92\u63db\u6027\u306e\u3042\u308b\u30c8\u30e9\u30f3\u30b9\u30af\u30e9\u30b9\u306eHashingVectorizer\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002 HashingVectorizer\u306f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u305d\u308c\u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n>>> from sklearn.feature_extraction.text import HashingVectorizer\n>>> hv = HashingVectorizer(n_features=10)\n>>> hv.transform(corpus)\n...                                \n<4x10 sparse matrix of type '<... 'numpy.float64'>'\n    with 16 stored elements in Compressed Sparse ... format>\n\n\u30d9\u30af\u30c8\u30eb\u51fa\u529b\u3067\u306f\u300116\u500b\u306e\u975e\u30bc\u30ed\u306e\u7279\u5fb4\u30c8\u30fc\u30af\u30f3\u304c\u62bd\u51fa\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u540c\u3058\u73a9\u5177\u30b3\u30fc\u30d1\u30b9\u306eCountVectorizer\u306b\u3088\u3063\u3066\u4ee5\u524d\u306b\u62bd\u51fa\u3055\u308c\u305f19\u500b\u306e\u975e\u30bc\u30ed\u3088\u308a\u3082\u5c0f\u3055\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u4e0d\u4e00\u81f4\u306f\u3001n_features\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u304c\u4f4e\u3044\u305f\u3081\u3001\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u306e\u885d\u7a81\u306b\u8d77\u56e0\u3057\u307e\u3059\u3002\n\u73fe\u5b9f\u4e16\u754c\u306e\u8a2d\u5b9a\u3067\u306f\u3001n_features\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306e2 ** 20\uff08\u7d04100\u4e07\u306e\u53ef\u80fd\u306a\u6a5f\u80fd\uff09\u306e\u307e\u307e\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30e1\u30e2\u30ea\u3084\u30c0\u30a6\u30f3\u30b9\u30c8\u30ea\u30fc\u30e0\u30e2\u30c7\u30eb\u306e\u30b5\u30a4\u30ba\u304c\u554f\u984c\u306e\u5834\u5408\u306f\u30012^18\u306a\u3069\u306e\u3088\u308a\u4f4e\u3044\u5024\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3067\u3001\u4e00\u822c\u7684\u306a\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u30bf\u30b9\u30af\u306b\u3042\u307e\u308a\u306b\u591a\u304f\u306e\u8ffd\u52a0\u306e\u885d\u7a81\u3092\u5c0e\u5165\u3057\u306a\u304f\u3066\u3082\u5f79\u7acb\u3061\u307e\u3059\u3002\n\u6b21\u5143\u6570\u306f\u3001CSR\u884c\u5217\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08LinearSVC\uff08dual = True\uff09\u3001Perceptron\u3001SGDClassifier\u3001PassiveAggressive\uff09\u306eCPU\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u6642\u9593\u306b\u306f\u5f71\u97ff\u3057\u307e\u305b\u3093\u304c\u3001CSC\u30de\u30c8\u30ea\u30af\u30b9\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08LinearSVC(dual=False), Lasso()\u306a\u3069\uff09\u306b\u306f\u5f71\u97ff\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u3082\u3046\u4e00\u5ea6\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff1a\n>>> hv = HashingVectorizer()\n>>> hv.transform(corpus)\n...                               \n<4x1048576 sparse matrix of type '<... 'numpy.float64'>'\n    with 19 stored elements in Compressed Sparse ... format>\n>>>\n\n\u79c1\u305f\u3061\u306f\u3082\u306f\u3084\u885d\u7a81\u3092\u5f97\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3053\u308c\u306f\u51fa\u529b\u7a7a\u9593\u306e\u3088\u308a\u5927\u304d\u306a\u6b21\u5143\u6027\u3092\u72a0\u7272\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u3053\u3053\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b19\u4ee5\u5916\u306e\u7528\u8a9e\u306f\u3001\u4f9d\u7136\u3068\u3057\u3066\u4e92\u3044\u306b\u885d\u7a81\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\nHashingVectorizer\u306b\u306f\u3001\u6b21\u306e\u5236\u9650\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u5b9f\u884c\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u306e\u4e00\u65b9\u5411\u306e\u6027\u8cea\u306e\u305f\u3081\u3001\u30e2\u30c7\u30eb\u3092\u9006\u5909\u63db\u3057\u305f\u308a\uff08inverse_transform\u30e1\u30bd\u30c3\u30c9\u306a\u3057\uff09\u3001\u7279\u5fb4\u91cf\u306e\u5143\u306e\u6587\u5b57\u5217\u8868\u73fe\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u30e2\u30c7\u30eb\u304c\u72b6\u614b\u3092\u6301\u305f\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3001IDF\u306e\u91cd\u307f\u4ed8\u3051\u306f\u884c\u308f\u308c\u307e\u305b\u3093\u3002 TfidfTransformer\u306f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n4.2.3.9. HashingVectorizer\u3067\u30a2\u30a6\u30c8\u30aa\u30d6\u30b3\u30a2\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u5b9f\u884c\u3059\u308b\nHashingVectorizer \u3092\u4f7f\u7528\u3059\u308b\u8208\u5473\u6df1\u3044\u958b\u767a\u306f\u3001Out-of-Core\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u5b9f\u884c\u3059\u308b\u80fd\u529b\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u30e1\u30a4\u30f3\u30e1\u30e2\u30ea\u306b\u53ce\u307e\u3089\u306a\u3044\u30c7\u30fc\u30bf\u304b\u3089\u5b66\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nOut-of-Core\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u5b9f\u88c5\u3059\u308b\u6226\u7565\u306f\u3001\u30c7\u30fc\u30bf\u3092\u30df\u30cb\u30d0\u30c3\u30c1\u3067\u63a8\u5b9a\u5668\u306b\u6d41\u3057\u8fbc\u3080\u3053\u3068\u3067\u3059\u3002\u5404\u30df\u30cb\u30d0\u30c3\u30c1\u306f\u3001\u63a8\u5b9a\u5668\u306e\u5165\u529b\u7a7a\u9593\u304c\u5e38\u306b\u540c\u3058\u6b21\u5143\u3092\u6301\u3064\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u305f\u3081\u306b\u3001HashingVectorizer\u3092\u4f7f\u7528\u3057\u3066\u30d9\u30af\u30c8\u30eb\u5316\u3055\u308c\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u3044\u3064\u3067\u3082\u4f7f\u7528\u3055\u308c\u308b\u30e1\u30e2\u30ea\u306e\u91cf\u306f\u3001\u30df\u30cb\u30d0\u30c3\u30c1\u306e\u30b5\u30a4\u30ba\u306b\u3088\u3063\u3066\u5236\u9650\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u4f7f\u7528\u3057\u3066\u53d6\u308a\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u30c7\u30fc\u30bf\u306e\u91cf\u306b\u5236\u9650\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u5b9f\u7528\u7684\u306a\u89b3\u70b9\u304b\u3089\u3001\u5b66\u7fd2\u6642\u9593\u306f\u3057\u3070\u3057\u3070\u30bf\u30b9\u30af\u306b\u8cbb\u3084\u3059CPU\u6642\u9593\u306b\u3088\u3063\u3066\u5236\u9650\u3055\u308c\u307e\u3059\u3002\n\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u30bf\u30b9\u30af\u306b\u304a\u3051\u308bOut-of-Core\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306e\u672c\u683c\u7684\u306a\u4f8b\u306b\u3064\u3044\u3066\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u6587\u66f8\u306eOut-of-Core\u5206\u985e \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n4.2.3.10. \u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u30af\u30e9\u30b9\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\ncallable\u3092vectorizer\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3059\u3053\u3068\u3067\u3001\u52d5\u4f5c\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n>>> def my_tokenizer(s):\n...     return s.split()\n...\n>>> vectorizer = CountVectorizer(tokenizer=my_tokenizer)\n>>> vectorizer.build_analyzer()(u\"Some... punctuation!\") == (\n...     ['some...', 'punctuation!'])\nTrue\n\n\u5177\u4f53\u7684\u306b\u306f\u3001\n\n\npreprocessor\uff1a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5168\u4f53\u3092\u5165\u529b\u3068\u3057\u3066\uff08\u5358\u4e00\u306e\u6587\u5b57\u5217\u3068\u3057\u3066\uff09\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u3001\u5909\u63db\u3055\u308c\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8fd4\u3059callable\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\u3053\u308c\u306f\u3001HTML\u30bf\u30b0\u3092\u524a\u9664\u3057\u305f\u308a\u3001\u6587\u66f8\u5168\u4f53\u3092\u5c0f\u6587\u5b57\u306b\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\ntokenizer\uff1a\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u304b\u3089\u306e\u51fa\u529b\u3092\u30c8\u30fc\u30af\u30f3\u306b\u5206\u5272\u3057\u3001\u305d\u308c\u3089\u306e\u30ea\u30b9\u30c8\u3092\u8fd4\u3059callable\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\n\nanalyzer\uff1a\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u3068\u30c8\u30fc\u30af\u30ca\u30a4\u30b6\u3092\u7f6e\u304d\u63db\u3048\u308bcallable\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a2\u30ca\u30e9\u30a4\u30b6\u306f\u3059\u3079\u3066\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u3068\u30c8\u30fc\u30af\u30ca\u30a4\u30b6\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u304c\u3001\u30ab\u30b9\u30bf\u30e0\u30a2\u30ca\u30e9\u30a4\u30b6\u306f\u3053\u308c\u3092\u30b9\u30ad\u30c3\u30d7\u3057\u307e\u3059\u3002 N\u30b0\u30e9\u30e0\u62bd\u51fa\u304a\u3088\u3073\u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306f\u30a2\u30ca\u30e9\u30a4\u30b6\u30ec\u30d9\u30eb\u3067\u884c\u308f\u308c\u308b\u305f\u3081\u3001\u30ab\u30b9\u30bf\u30e0\u30a2\u30ca\u30e9\u30a4\u30b6\u306f\u3053\u308c\u3089\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u518d\u73fe\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\uff08Lucene\u30e6\u30fc\u30b6\u30fc\u306f\u3053\u308c\u3089\u306e\u540d\u524d\u3092\u8a8d\u8b58\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001scikit-learn\u306e\u6982\u5ff5\u306fLucene\u306e\u6982\u5ff5\u306b\u4e00\u5bfe\u4e00\u3067\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff09\u3002\n\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u3001\u30c8\u30fc\u30af\u30ca\u30a4\u30b6\u304a\u3088\u3073\u30a2\u30ca\u30e9\u30a4\u30b6\u304c\u30e2\u30c7\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a8d\u8b58\u3067\u304d\u308b\u3088\u3046\u3001\u30ab\u30b9\u30bf\u30e0\u95a2\u6570\u3092\u6e21\u3059\u4ee3\u308f\u308a\u306b\u3001\u30af\u30e9\u30b9\u304b\u3089\u6d3e\u751f\u3057\u3066build_preprocessor\u3001build_tokenizer \u304a\u3088\u3073 build_analyzer \u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3044\u304f\u3064\u304b\u306e\u30d2\u30f3\u30c8\u3068\u79d8\u8a23\uff1a\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u5916\u90e8\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3088\u3063\u3066\u4e8b\u524d\u306b\u30c8\u30fc\u30af\u30f3\u5316\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u7a7a\u767d\u3067\u533a\u5207\u3089\u308c\u305f\u30c8\u30fc\u30af\u30f3\u3092\u30d5\u30a1\u30a4\u30eb\uff08\u307e\u305f\u306f\u6587\u5b57\u5217\uff09\u306b\u683c\u7d0d\u3057\u3001analyzer = str.split \u3092\u6e21\u3057\u307e\u3059\n\u30b9\u30c6\u30df\u30f3\u30b0\u3001\u5b57\u5f62\u5206\u5272\u3001\u8907\u5408\u5206\u5272\u3001\u54c1\u8a5e\u306b\u57fa\u3065\u304f\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306a\u3069\u306e\u7d20\u6674\u3089\u3057\u3044\u30c8\u30fc\u30af\u30f3\u30ec\u30d9\u30eb\u89e3\u6790\u306f\u3001scikit-learning\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u306b\u306f\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u30c8\u30fc\u30af\u30ca\u30a4\u30b6\u307e\u305f\u306f\u30a2\u30ca\u30e9\u30a4\u30b6\u306e\u3044\u305a\u308c\u304b\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u306b NLTK \u3092\u4f7f\u3063\u305f\u30c8\u30fc\u30af\u30ca\u30a4\u30b6\u3068\u30ec\u30de\u30bf\u30a4\u30b6\u3092\u5099\u3048\u305fCountVectorizer\u304c\u3042\u308a\u307e\u3059\uff1a\n\n>>> from nltk import word_tokenize          \n>>> from nltk.stem import WordNetLemmatizer \n>>> class LemmaTokenizer(object):\n...     def __init__(self):\n...         self.wnl = WordNetLemmatizer()\n...     def __call__(self, doc):\n...         return [self.wnl.lemmatize(t) for t in word_tokenize(doc)]\n...\n>>> vect = CountVectorizer(tokenizer=LemmaTokenizer()) \n\n\uff08\u3053\u308c\u306f\u53e5\u8aad\u70b9\u3092\u9664\u5916\u3057\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff09\u3002\n\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u30fc\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306f\u3001\u7a7a\u767d\u306a\u3069\u306e\u660e\u793a\u7684\u306a\u5358\u8a9e\u533a\u5207\u308a\u6587\u5b57\u3092\u4f7f\u7528\u3057\u306a\u3044\u30a2\u30b8\u30a2\u8a00\u8a9e\u3092\u51e6\u7406\u3059\u308b\u5834\u5408\u306b\u3082\u5f79\u7acb\u3061\u307e\u3059\u3002\n\n4.2.4. \u753b\u50cf\u7279\u5fb4\u62bd\u51fa\n\n4.2.4.1. \u30d1\u30c3\u30c1\u62bd\u51fa\nextract_patches_2 \u95a2\u6570\u306f\u30012\u6b21\u5143\u914d\u5217\u3068\u3057\u3066\u683c\u7d0d\u3055\u308c\u305f\u753b\u50cf\u3001\u307e\u305f\u306f3\u756a\u76ee\u306e\u8ef8\u306b\u6cbf\u3063\u3066\u8272\u60c5\u5831\u3092\u6301\u30643\u6b21\u5143\u30d1\u30c3\u30c1\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30d1\u30c3\u30c1\u304b\u3089\u30a4\u30e1\u30fc\u30b8\u3092\u518d\u69cb\u7bc9\u3059\u308b\u306b\u306f\u3001 reconstruct_from_patches_2d \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u30013\u3064\u306e\u30ab\u30e9\u30fc\u30c1\u30e3\u30cd\u30eb\uff08\u4f8b\u3048\u3070\u3001RGB\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff09\u3092\u6709\u3059\u308b4\u00d74\u30d4\u30af\u30bb\u30eb\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3002\n>>> import numpy as np\n>>> from sklearn.feature_extraction import image\n\n>>> one_image = np.arange(4 * 4 * 3).reshape((4, 4, 3))\n>>> one_image[:, :, 0]  # R channel of a fake RGB picture\narray([[ 0,  3,  6,  9],\n       [12, 15, 18, 21],\n       [24, 27, 30, 33],\n       [36, 39, 42, 45]])\n\n>>> patches = image.extract_patches_2d(one_image, (2, 2), max_patches=2,\n...     random_state=0)\n>>> patches.shape\n(2, 2, 2, 3)\n>>> patches[:, :, :, 0]\narray([[[ 0,  3],\n        [12, 15]],\n\n       [[15, 18],\n        [27, 30]]])\n>>> patches = image.extract_patches_2d(one_image, (2, 2))\n>>> patches.shape\n(9, 2, 2, 3)\n>>> patches[4, :, :, 0]\narray([[15, 18],\n       [27, 30]])\n\n\u30aa\u30fc\u30d0\u30fc\u30e9\u30c3\u30d7\u9818\u57df\u3092\u5e73\u5747\u5316\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30d1\u30c3\u30c1\u304b\u3089\u5143\u306e\u753b\u50cf\u3092\u518d\u69cb\u6210\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u3087\u3046\u3002\n>>> reconstructed = image.reconstruct_from_patches_2d(patches, (4, 4, 3))\n>>> np.testing.assert_array_equal(one_image, reconstructed)\n\nPatchExtractor \u30af\u30e9\u30b9\u306fextract_patches_2d\u3068\u540c\u3058\u65b9\u6cd5\u3067\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001\u8907\u6570\u306e\u753b\u50cf\u3092\u5165\u529b\u3068\u3057\u3066\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u63a8\u5b9a\u5668\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059.\n>>> five_images = np.arange(5 * 4 * 4 * 3).reshape(5, 4, 4, 3)\n>>> patches = image.PatchExtractor((2, 2)).transform(five_images)\n>>> patches.shape\n(45, 2, 2, 3)\n\n\n4.2.4.2. \u753b\u50cf\u306e\u63a5\u7d9a\u6027\u30b0\u30e9\u30d5\nscikit-learn\u306e\u3044\u304f\u3064\u304b\u306e\u63a8\u5b9a\u5024\u306f\u3001\u7279\u5fb4\u91cf\u307e\u305f\u306f\u30b5\u30f3\u30d7\u30eb\u9593\u306e\u63a5\u7d9a\u60c5\u5831\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30a6\u30a9\u30fc\u30c9\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\uff08\u968e\u5c64\u7684\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\uff09\u306f\u3001\u753b\u50cf\u306e\u96a3\u63a5\u3059\u308b\u30d4\u30af\u30bb\u30eb\u306e\u307f\u3092\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u3057\u305f\u304c\u3063\u3066\u3001\u9023\u7d9a\u3057\u305f\u30d1\u30c3\u30c1\u3092\u5f62\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u3053\u306e\u76ee\u7684\u306e\u305f\u3081\u306b\u3001\u63a8\u5b9a\u5668\u306f\u3069\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u793a\u3059\u300c\u63a5\u7d9a\u6027\u300d\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3002\n\u95a2\u6570 img_to_graph \u306f\u30012D\u307e\u305f\u306f3D\u753b\u50cf\u304b\u3089\u305d\u306e\u3088\u3046\u306a\u884c\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002\u540c\u69d8\u306b\u3001 grid_to_graph \u306f\u3001\u3053\u308c\u3089\u306e\u753b\u50cf\u306e\u5f62\u72b6\u304c\u4e0e\u3048\u3089\u308c\u305f\u753b\u50cf\u306e\u305f\u3081\u306e\u9023\u7d50\u884c\u5217\u3092\u69cb\u7bc9\u3059\u308b\u3002\n\u3053\u308c\u3089\u306e\u884c\u5217\u306f\u3001\u30a6\u30a9\u30fc\u30c9\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\uff08\u968e\u5c64\u7684\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\uff09\u306a\u3069\u306e\u63a5\u7d9a\u6027\u60c5\u5831\u3092\u4f7f\u7528\u3059\u308b\u63a8\u5b9a\u5668\u306b\u63a5\u7d9a\u6027\u3092\u8ab2\u3059\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u4e8b\u524d\u8a08\u7b97\u3055\u308c\u305f\u30ab\u30fc\u30cd\u30eb\u307e\u305f\u306f\u985e\u4f3c\u6027\u884c\u5217\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306b\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\n\u4f8b\n\n\n\u30e9\u30af\u30ed\u30fc\u30f3\u9854\u753b\u50cf\u4e0a\u306e\u69cb\u9020\u5316\u30ef\u30fc\u30c9\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u30c7\u30e2\n\u753b\u50cf\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e\u30b9\u30da\u30af\u30c8\u30eb\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\u30d5\u30a3\u30fc\u30c1\u30e3\u30a2\u30b0\u30ed\u30e1\u30ec\u30fc\u30b7\u30e7\u30f3\u5bfe\u4e00\u5909\u91cf\u9078\u629e\n\n\n\n\u00a92010 - 2016\u3001scikit-learn developers\uff08BSD\u30e9\u30a4\u30bb\u30f3\u30b9\uff09\u3002\nhttp://scikit-learn.org/0.18/modules/feature_extraction.html \u3092google\u7ffb\u8a33\u3057\u305f\n[\u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u76ee\u6b21](http://qiita.com/nazoking@github/items/267f2371757516f8c168)\n\n----\n\n`sklearn.feature_extraction` \u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u3084\u753b\u50cf\u306a\u3069\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304b\u3089\u306a\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304b\u3089\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u5f62\u5f0f\u306e\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n<div class=\"alert alert-warning\">**\u6ce8\u8a18** \u7279\u5fb4\u91cf\u306e\u62bd\u51fa\u306f\u3001[\u7279\u5fb4\u91cf\u306e\u9078\u629e](http://qiita.com/nazoking@github/items/b9eb61f0c981af2cbdd0)\u3068\u306f\u5927\u304d\u304f\u7570\u306a\u308a\u307e\u3059\u3002\u524d\u8005\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u3084\u30a4\u30e1\u30fc\u30b8\u306a\u3069\u306e\u4efb\u610f\u306e\u30c7\u30fc\u30bf\u3092\u6a5f\u68b0\u5b66\u7fd2\u306b\u4f7f\u7528\u3067\u304d\u308b\u6570\u5024\u7279\u5fb4\u91cf\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u5f8c\u8005\u306f\u3001\u3053\u308c\u3089\u306e\u7279\u5fb4\u5024\u306b\u9069\u7528\u3055\u308c\u308b\u6a5f\u68b0\u5b66\u7fd2\u6280\u8853\u3067\u3059\u3002</div>\n\n## 4.2.1. dicts\u304b\u3089\u306e\u7279\u5fb4\u91cf\u306e\u30ed\u30fc\u30c9\n\n\u30af\u30e9\u30b9[DictVectorizer](http://scikit-learn.org/0.18/modules/generated/sklearn.feature_extraction.DictVectorizer.html#sklearn.feature_extraction.DictVectorizer)\u306f\u3001\u6a19\u6e96\u306ePython dict\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u8868\u3055\u308c\u308b\u7279\u5fb4\u91cf\u914d\u5217\u3092\u3001scikit-learn\u63a8\u5b9a\u5668\u3067\u4f7f\u7528\u3055\u308c\u308bNumPy / SciPy\u8868\u73fe\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\u7279\u306b\u51e6\u7406\u304c\u901f\u3044\u308f\u3051\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001Python\u306edict\u306b\u306f\u3001\u4f7f\u3044\u3084\u3059\u304f\u3001\u758e\u3067\u3042\u308b\uff08\u5b58\u5728\u3057\u306a\u3044\u7279\u5fb4\u3092\u683c\u7d0d\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff09\u3001\u5024\u306b\u52a0\u3048\u3066\u7279\u5fb4\u540d\u3092\u683c\u7d0d\u3067\u304d\u308b\u3068\u3044\u3046\u5229\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\nDictVectorizer\u306f\u3001\u30ab\u30c6\u30b4\u30ea\uff08\u307e\u305f\u306f\u3001\u540d\u76ee\u3001\u96e2\u6563\u5024\uff09\u306b\u5bfe\u3057\u3066\u30011\u5bfe1\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u307e\u305f\u306f\u300c\u30ef\u30f3\u30db\u30c3\u30c8\u300d\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u5b9f\u88c5\u307e\u3059\u3002\u30ab\u30c6\u30b4\u30ea\u5c5e\u6027\u306f\u3001\u5024\u306b\u9806\u756a\u306e\u306a\u3044\u96e2\u6563\u6027\u306e\u30ea\u30b9\u30c8\uff08\u30c8\u30d4\u30c3\u30af\u8b58\u5225\u5b50\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30bf\u30a4\u30d7\u3001\u30bf\u30b0\u3001\u540d\u524d\u306a\u3069\uff09\u306b\u5236\u9650\u3055\u308c\u308b\u300c\u5c5e\u6027 - \u5024\u300d\u306e\u30da\u30a2\u3067\u3059\u3002\n\u4ee5\u4e0b\u3067\u306f\u3001\u300ccity\u300d\u306f\u30ab\u30c6\u30b4\u30ea\u5c5e\u6027\u3067\u3042\u308a\u3001\u300ctemperature\u300d\u306f\u5f93\u6765\u306e\u6570\u5024\u7279\u5fb4\u91cf\u3067\u3042\u308b\u3002\n\n```py\n>>> measurements = [\n...     {'city': 'Dubai', 'temperature': 33.},\n...     {'city': 'London', 'temperature': 12.},\n...     {'city': 'San Fransisco', 'temperature': 18.},\n... ]\n\n>>> from sklearn.feature_extraction import DictVectorizer\n>>> vec = DictVectorizer()\n\n>>> vec.fit_transform(measurements).toarray()\narray([[  1.,   0.,   0.,  33.],\n       [  0.,   1.,   0.,  12.],\n       [  0.,   0.,   1.,  18.]])\n\n>>> vec.get_feature_names()\n['city=Dubai', 'city=London', 'city=San Fransisco', 'temperature']\n```\n\nDictVectorizer\u306f\u3001\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u30e2\u30c7\u30eb\u306e\u6587\u7ae0\u5206\u985e\u5668\u306e\u8a13\u7df4\u306b\u4fbf\u5229\u306a\u8868\u73fe\u5909\u63db\u3067\u3059\uff08\u5178\u578b\u7684\u306b\u306f\u3001\u7279\u5b9a\u306e\u95a2\u5fc3\u306e\u3042\u308b\u5358\u8a9e\u306e\u5468\u8fba\u304b\u3089\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\uff09\u3002\n\u4f8b\u3048\u3070\u3001\u6587\u7ae0\u304b\u3089\u54c1\u8a5e\uff08PoS\uff09\u30bf\u30b0\u3092\u62bd\u51fa\u3059\u308b\u7b2c1\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6709\u3059\u308b\u3068\u4eee\u5b9a\u3059\u308b\u3002 \u6b21\u306e dict \u306f\u3001\u300cThe cat sat on the mat.\u300d\u3068\u3044\u3046\u6587\u306e\u4e2d\u306e\u300csat\u300d\u3068\u3044\u3046\u5358\u8a9e\u306e\u5468\u8fba\u304b\u3089\u62bd\u51fa\u3055\u308c\u305f\u305d\u306e\u3088\u3046\u306a\u7279\u5fb4\u3067\u3059\u3002\n\n```py\n>>> pos_window = [\n...     {\n...         'word-2': 'the',\n...         'pos-2': 'DT',\n...         'word-1': 'cat',\n...         'pos-1': 'NN',\n...         'word+1': 'on',\n...         'pos+1': 'PP',\n...     },\n...     # \u5b9f\u969b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u3001\u591a\u304f\u306e\u3053\u306e\u3088\u3046\u306adict\u3092\u62bd\u51fa\u3059\u308b\u3067\u3057\u3087\u3046\n... ]\n```\n\n\u3053\u306e\u30c7\u30fc\u30bf\u306f\u3001\u5206\u985e\u5668\u306b\u4f9b\u7d66\u3059\u308b\u306e\u306b\u9069\u3057\u305f\u758e\u306a2\u6b21\u5143\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306b\u30d9\u30af\u30c8\u30eb\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff08\u6b63\u898f\u5316\u306e\u305f\u3081\u306b[text.TfidfTransformer](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html#sklearn.feature_extraction.text.TfidfTransformer)\u306b\u30d1\u30a4\u30d7\u3055\u308c\u305f\u5f8c\uff09\u3002\n\n```py\n>>> vec = DictVectorizer()\n>>> pos_vectorized = vec.fit_transform(pos_window)\n>>> pos_vectorized                \n<1x6 sparse matrix of type '<... 'numpy.float64'>'\n    with 6 stored elements in Compressed Sparse ... format>\n>>> pos_vectorized.toarray()\narray([[ 1.,  1.,  1.,  1.,  1.,  1.]])\n>>> vec.get_feature_names()\n['pos+1=PP', 'pos-1=NN', 'pos-2=DT', 'word+1=on', 'word-1=cat', 'word-2=the']\n```\n\n\u3042\u306a\u305f\u304c\u60f3\u50cf\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u6587\u66f8\u30b3\u30fc\u30d1\u30b9\u306e\u500b\u3005\u306e\u5358\u8a9e\u306e\u5468\u308a\u306b\u3053\u306e\u3088\u3046\u306a\u6587\u8108\u3092\u62bd\u51fa\u3059\u308b\u3068\u3001\u7d50\u679c\u3068\u3057\u3066\u5f97\u3089\u308c\u308b\u884c\u5217\u306f\u975e\u5e38\u306b\u5e45\u5e83\u304f\u306a\u308a\uff08\u591a\u304f\u306eone-hot-features\uff09\u3001\u307b\u3068\u3093\u3069\u304c\u30bc\u30ed\u306b\u306a\u308a\u307e\u3059\u3002\u7d50\u679c\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u30e1\u30e2\u30ea\u306b\u53ce\u3081\u308b\u305f\u3081\u306b\u3001`DictVectorizer`\u30af\u30e9\u30b9\u306f`numpy.ndarray`\u306e\u4ee3\u308f\u308a\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067`scipy.sparse`\u884c\u5217\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n## 4.2.2. \u7279\u5fb4\u30cf\u30c3\u30b7\u30e5\n\n[FeatureHasher](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.FeatureHasher.html#sklearn.feature_extraction.FeatureHasher)\u30af\u30e9\u30b9\u306f\u3001\u30d5\u30a3\u30fc\u30c1\u30e3\u30cf\u30c3\u30b7\u30e5\u307e\u305f\u306f\u300c[\u30cf\u30c3\u30b7\u30f3\u30b0\u30c8\u30ea\u30c3\u30af](https://en.wikipedia.org/wiki/Feature_hashing)\u300d\u3068\u3057\u3066\u77e5\u3089\u308c\u3066\u3044\u308b\u6280\u8853\u3092\u4f7f\u7528\u3059\u308b\u9ad8\u901f\u3001\u4f4e\u30e1\u30e2\u30ea\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u3067\u3059\u3002\u7279\u5fb4\u5024\u306e\u5909\u63db\u30c6\u30fc\u30d6\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001FeatureHasher\u306f\u7279\u5fb4\u5024\u306b\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u3092\u9069\u7528\u3057\u3066\u3001\u30b5\u30f3\u30d7\u30eb\u884c\u5217\u306e\u5217\u756a\u53f7\u3092\u76f4\u63a5\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u305d\u306e\u7d50\u679c\u3001\u691c\u67fb\u53ef\u80fd\u6027\u3092\u72a0\u7272\u306b\u3057\u3066\u30b9\u30d4\u30fc\u30c9\u304c\u4e0a\u304c\u308a\u3001\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u6e1b\u5c11\u3057\u307e\u3059\u3002\u30cf\u30c3\u30b7\u30e3\u30fc\u306f\u3001\u5165\u529b\u7279\u5fb4\u5024\u306e\u5916\u89b3\u3092\u899a\u3048\u3066\u304a\u3089\u305a\u3001`inverse_transform`\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308a\u307e\u305b\u3093\u3002\n\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u306f\uff08\u7121\u95a2\u4fc2\u306a\uff09\u7279\u5fb4\u9593\u3067\u885d\u7a81\u3092\u5f15\u304d\u8d77\u3053\u3059\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001\u7b26\u53f7\u4ed8\u304d\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u304c\u4f7f\u7528\u3055\u308c\u3001\u30cf\u30c3\u30b7\u30e5\u5024\u306e\u7b26\u53f7\u306f\u7279\u5fb4\u5024\u306e\u51fa\u529b\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306b\u683c\u7d0d\u3055\u308c\u305f\u5024\u306e\u7b26\u53f7\u3092\u6c7a\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u885d\u7a81\u306f\u8aa4\u5dee\u3092\u7d2f\u7a4d\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u76f8\u6bba\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u304f\u3001\u51fa\u529b\u7279\u6027\u306e\u5024\u306e\u671f\u5f85\u5e73\u5747\u306f\u30bc\u30ed\u3067\u3059\u3002\n`non_negative = True`\u304c\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3055\u308c\u305f\u5834\u5408\u3001\u7d76\u5bfe\u5024\u304c\u53d6\u5f97\u3055\u308c\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u885d\u7a81\u51e6\u7406\u306e\u3044\u304f\u3064\u304b\u3092\u5143\u306b\u623b\u3057\u307e\u3059\u304c\u3001\u975e\u8ca0\u5165\u529b\u3092\u671f\u5f85\u3059\u308b[sklearn.naive_bayes.MultinomialNB](http://scikit-learn.org/stable/modules/generated/sklearn.naive_bayes.MultinomialNB.html#sklearn.naive_bayes.MultinomialNB) \u63a8\u5b9a\u5668\u3084 [sklearn.feature_selection.chi2](http://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.chi2.html#sklearn.feature_selection.chi2) \u7279\u5fb4\u9078\u629e\u5668\u306a\u3069\u306b\u51fa\u529b\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nFeatureHasher\u306f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30d1\u30e9\u30e1\u30fc\u30bf`input_type`\u306b\u5fdc\u3058\u3066\u3001\u30de\u30c3\u30d4\u30f3\u30b0\uff08Python\u306edict\u3084`collections`\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3042\u308b\u305d\u306e\u5909\u7a2e\u306a\u3069\uff09\u3001`(feature, value)`\u306e\u30da\u30a2\u3001\u307e\u305f\u306f\u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u3092\u53d7\u3051\u5165\u308c\u307e\u3059\u3002\u30de\u30c3\u30d4\u30f3\u30b0\u306f`(feature, value)`\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u53d6\u308a\u6271\u308f\u308c\u3001 `['feat1'\u3001 'feat2'\u3001 'feat3']`\u306f`[('feat1', 1), ('feat2', 1), ('feat3', 1)]`\u3068\u89e3\u91c8\u3055\u308c\u307e\u3059\u3002 1\u3064\u306e\u7279\u5fb4\u5024\u304c\u30b5\u30f3\u30d7\u30eb\u5185\u3067\u8907\u6570\u56de\u51fa\u73fe\u3059\u308b\u5834\u5408\u3001\u95a2\u9023\u3059\u308b\u5024\u306f\u5408\u8a08\u3055\u308c\u307e\u3059\uff08\u3057\u305f\u304c\u3063\u3066 `('feat',2)`\u3068 `('feat',3.5)`\u306f`( 'feat',5.5\uff09`\u306b\u306a\u308a\u307e\u3059\u3002 FeatureHasher\u304b\u3089\u306e\u51fa\u529b\u306f\u3001\u5e38\u306bCSR\u5f62\u5f0f\u306e`scipy.sparse`\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3067\u3059\u3002\n\u30d5\u30a3\u30fc\u30c1\u30e3\u30cf\u30c3\u30b7\u30e5\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5206\u985e\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u304c\u3001[text.CountVectorizer](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html#sklearn.feature_extraction.text.CountVectorizer)\u3068\u7570\u306a\u308a\u3001FeatureHasher\u306fUnicode\u304b\u3089UTF-8\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u4ee5\u5916\u306e\u5358\u8a9e\u5206\u5272\u3084\u305d\u306e\u4ed6\u306e\u524d\u51e6\u7406\u306f\u884c\u3044\u307e\u305b\u3093\u3002\u30c8\u30fc\u30af\u30f3\u5316/\u30cf\u30c3\u30b7\u30e3\u30fc\u3092\u7d50\u5408\u3057\u305f\u3082\u306e\u306b\u3064\u3044\u3066\u306f\u3001\u4e0b\u8a18\u306e[\u30cf\u30c3\u30b7\u30e5\u30c8\u30ea\u30c3\u30af\u3092\u4f7f\u7528\u3057\u305f\u5927\u304d\u306a\u30c6\u30ad\u30b9\u30c8\u30b3\u30fc\u30d1\u30b9\u306e\u30d9\u30af\u30c8\u30eb\u5316](#4238-%E3%83%8F%E3%83%83%E3%82%B7%E3%83%A5%E3%83%88%E3%83%AA%E3%83%83%E3%82%AF%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6%E5%A4%A7%E3%81%8D%E3%81%AA%E3%83%86%E3%82%AD%E3%82%B9%E3%83%88%E3%82%B3%E3%83%BC%E3%83%91%E3%82%B9%E3%82%92%E3%83%99%E3%82%AF%E3%83%88%E3%83%AB%E5%8C%96%E3%81%99%E3%82%8B)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4f8b\u3068\u3057\u3066\u3001`\uff08token\u3001part_of_speech\uff09`\u5bfe\u304b\u3089\u62bd\u51fa\u3055\u308c\u305f\u7279\u5fb4\u3092\u5fc5\u8981\u3068\u3059\u308b\u5358\u8a9e\u30ec\u30d9\u30eb\u306e\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u30bf\u30b9\u30af\u3092\u8003\u3048\u308b\u3002\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u305f\u3081\u306bPython\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u95a2\u6570\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff1a\n\n```py\ndef token_features(token, part_of_speech):\n    if token.isdigit():\n        yield \"numeric\"\n    else:\n        yield \"token={}\".format(token.lower())\n        yield \"token,pos={},{}\".format(token, part_of_speech)\n    if token[0].isupper():\n        yield \"uppercase_initial\"\n    if token.isupper():\n        yield \"all_uppercase\"\n    yield \"pos={}\".format(part_of_speech)\n```\n\n\u6b21\u306b\u3001`FeatureHasher.transform`\u306b\u4f9b\u7d66\u3055\u308c\u308b`raw_X`\u306f\u3001\u4ee5\u4e0b\u3092\u4f7f\u7528\u3057\u3066\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002\n\n```py\n raw_X = (token_features(tok, pos_tagger(tok)) for tok in corpus)\n```\n\n\u6b21\u306e\u3088\u3046\u306b\u3057\u3066\u30cf\u30c3\u30b7\u30e3\u30fc\u306b\u4f9b\u7d66\u3055\u308c\u307e\u3059\u3002\n\n```py\nhasher = FeatureHasher(input_type='string')\nX = hasher.transform(raw_X)\n```\n\n`scipy.sparse`\u884c\u5217`X`\u3092\u5f97\u308b\u3002\n\u7279\u5fb4\u306e\u62bd\u51fa\u3092\u697d\u306b\u3059\u308b\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30c8\u30fc\u30af\u30f3\u306f\u3001\u30cf\u30c3\u30b7\u30e3\u30fc\u304b\u3089\u306e\u8981\u6c42\u306b\u5fdc\u3058\u3066\u306e\u307f\u51e6\u7406\u3055\u308c\u307e\u3059\u3002\n\n### 4.2.2.1. \u5b9f\u88c5\u306e\u8a73\u7d30\n\nFeatureHasher\u306fMurmurHash3\u306e\u7b26\u53f7\u4ed8\u304d32\u30d3\u30c3\u30c8\u7248\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066\uff08\u305d\u3057\u3066scipy.sparse\u306e\u5236\u9650\u306e\u305f\u3081\u306b\uff09\u3001\u73fe\u5728\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u30d5\u30a3\u30fc\u30c1\u30e3\u306e\u6700\u5927\u6570\u306f $2^{31}-1$ \u3067\u3059\u3002\n\u30ef\u30a4\u30f3\u30d0\u30fc\u30ac\u30fc\uff08Weinberger\uff09\u3089\u306b\u3088\u308b\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30cf\u30c3\u30b7\u30f3\u30b0\u30c8\u30ea\u30c3\u30af\u306e\u5b9a\u5f0f\u5316\u3067\u306f\u3001 2\u3064\u306e\u5225\u3005\u306e\u30cf\u30c3\u30b7\u30e5\u95a2\u6570 $h$ \u3068 $\\xi$ \u3092\u4f7f\u7528\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u7279\u5fb4\u5024\u306e\u5217\u756a\u53f7\u3068\u7b26\u53f7\u3092\u6c7a\u5b9a\u3057\u307e\u3057\u305f\u3002\u73fe\u5728\u306e\u5b9f\u88c5\u306f\u3001MurmurHash3\u306e\u7b26\u53f7\u30d3\u30c3\u30c8\u304c\u4ed6\u306e\u30d3\u30c3\u30c8\u304b\u3089\u72ec\u7acb\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u524d\u63d0\u306e\u3082\u3068\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\u5358\u7d14\u306b\u5272\u308a\u7b97\u306e\u4f59\u308a\u3092\u4f7f\u7528\u3057\u3066\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u3092\u5217\u756a\u53f7\u306b\u5909\u63db\u3059\u308b\u306e\u3067\u3001`n_features`\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u30662\u306e\u7d2f\u4e57\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\u305d\u3046\u3057\u306a\u3044\u3068\u3001\u7279\u5fb4\u5024\u306f\u5747\u7b49\u306b\u30de\u30c3\u30d7\u3055\u308c\u307e\u305b\u3093\u3002\n\n - \u53c2\u8003\u6587\u732e\uff1a\n    - Kilian Weinberger\u3001Anirban Dasgupta\u3001John Langford\u3001Alex Smola\u3001Josh Attenberg\uff082009\uff09[\u5927\u898f\u6a21\u306a\u30de\u30eb\u30c1\u30bf\u30b9\u30af\u5b66\u7fd2\u306e\u305f\u3081\u306e\u6a5f\u80fd\u30cf\u30c3\u30b7\u30f3\u30b0](http://alex.smola.org/papers/2009/Weinbergeretal09.pdf) Proc. ICML.\n    - [MurmurHash3](https://github.com/aappleby/smhasher)\n\n## 4.2.3. \u30c6\u30ad\u30b9\u30c8\u7279\u5fb4\u62bd\u51fa\n\n### 4.2.3.1. Bag of Words \u306b\u3088\u308b\u8868\u73fe\n\n\u30c6\u30ad\u30b9\u30c8\u89e3\u6790\u306f\u3001\u6a5f\u68b0\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4e3b\u8981\u306a\u5fdc\u7528\u5206\u91ce\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u751f\u30c7\u30fc\u30bf\u3067\u306f\u3001\u4e00\u9023\u306e\u8a18\u53f7\u3092\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u81ea\u4f53\u306b\u76f4\u63a5\u4f9b\u7d66\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089\u305d\u308c\u3089\u306e\u5927\u90e8\u5206\u306f\u53ef\u5909\u9577\u306e\u751f\u30c6\u30ad\u30b9\u30c8\u6587\u66f8\u3067\u306f\u306a\u304f\u56fa\u5b9a\u30b5\u30a4\u30ba\u306e\u6570\u5024\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u3092\u671f\u5f85\u3059\u308b\u304b\u3089\u3067\u3059\u3002\n\u3053\u308c\u306b\u5bfe\u51e6\u3059\u308b\u305f\u3081\u306b\u3001scikit-learn\u306f\u30c6\u30ad\u30b9\u30c8\u30b3\u30f3\u30c6\u30f3\u30c4\u304b\u3089\u6570\u5024\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u305f\u3081\u306e\u6700\u3082\u4e00\u822c\u7684\u306a\u65b9\u6cd5\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n - \u6587\u5b57\u5217\u3092\u30c8\u30fc\u30af\u30f3\u5316\u3057\u3001\u30c8\u30fc\u30af\u30f3\u30bb\u30d1\u30ec\u30fc\u30bf\u3068\u3057\u3066\u7a7a\u767d\u3068\u53e5\u8aad\u70b9\u3092\u4f7f\u7528\u3059\u308b\u306a\u3069\u3001\u53ef\u80fd\u306a\u30c8\u30fc\u30af\u30f3\u3054\u3068\u306b\u6574\u6570\u306eID\u3092\u4e0e\u3048\u307e\u3059\u3002\n - \u5404\u6587\u66f8\u306e\u30c8\u30fc\u30af\u30f3\u306e\u51fa\u73fe\u3092\u6570\u3048\u307e\u3059\u3002\n - \u5927\u591a\u6570\u306e\u30b5\u30f3\u30d7\u30eb/\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u767a\u751f\u3059\u308b\u91cd\u8981\u5ea6\u306e\u4f4e\u3044\u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u7528\u3057\u3066\u6b63\u898f\u5316\u3057\u3001\u91cd\u307f\u4ed8\u3051\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u30b9\u30ad\u30fc\u30e0\u3067\u306f\u3001\u7279\u5fb4\u304a\u3088\u3073\u30b5\u30f3\u30d7\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u3002\n\n - \u500b\u3005\u306e\u30c8\u30fc\u30af\u30f3\u306e\u51fa\u73fe\u983b\u5ea6\u304c\u7279\u5fb4\u91cf\u3068\u3057\u3066\u6271\u308f\u308c\u308b\uff08\u6b63\u898f\u5316\u3055\u308c\u3066\u3044\u308b\u6642\u3082\u305d\u3046\u3067\u306a\u3044\u6642\u3082\u3042\u308b\uff09\u3002\n - \u4e0e\u3048\u3089\u308c\u305f\u6587\u66f8\u306e\u3059\u3079\u3066\u306e\u30c8\u30fc\u30af\u30f3\u983b\u5ea6\u306e\u30d9\u30af\u30c8\u30eb\u306f\u3001\u591a\u5909\u91cf\u30b5\u30f3\u30d7\u30eb\u3068\u307f\u306a\u3055\u308c\u307e\u3059\u3002\n\n\u5f93\u3063\u3066\u3001\u6587\u66f8\u306e\u30b3\u30fc\u30d1\u30b9\u306f\u3001\u6587\u66f8\u5f53\u305f\u308a1\u3064\u306e\u884c\u3068\u3001\u30b3\u30fc\u30d1\u30b9\u306b\u73fe\u308c\u308b\u30c8\u30fc\u30af\u30f3\uff08\u4f8b\u3048\u3070\u3001\u5358\u8a9e\uff09\u3054\u3068\u306b1\u3064\u306e\u5217\u3068\u3092\u6709\u3059\u308b\u884c\u5217\u306b\u3088\u3063\u3066\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u30d9\u30af\u30c8\u30eb\u5316\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u6587\u66f8\u306e\u96c6\u5408\u3092\u6570\u5024\u306e\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u306b\u5909\u63db\u3059\u308b\u4e00\u822c\u7684\u306a\u30d7\u30ed\u30bb\u30b9\u3067\u3059\u3002\u3053\u306e\u7279\u5b9a\u306e\u6226\u7565\uff08\u30c8\u30fc\u30af\u30f3\u5316\u3001\u8a08\u6570\u3001\u6b63\u898f\u5316\uff09\u306f\u3001Bag of Words\u307e\u305f\u306f\u300cBag of n-grams\u300d\u8868\u73fe\u3068\u547c\u3070\u308c\u307e\u3059\u3002\u6587\u66f8\u306f\u3001\u6587\u66f8\u5185\u306e\u5358\u8a9e\u306e\u76f8\u5bfe\u4f4d\u7f6e\u60c5\u5831\u3092\u5b8c\u5168\u306b\u7121\u8996\u3057\u3066\u5358\u8a9e\u306e\u51fa\u73fe\u6570\u306b\u3088\u3063\u3066\u8a18\u8ff0\u3055\u308c\u308b\u3002\n\n### 4.2.3.2. \u758e\n\n\u307b\u3068\u3093\u3069\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u4e00\u822c\u306b\u30b3\u30fc\u30d1\u30b9\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u5358\u8a9e\u306e\u3054\u304f\u4e00\u90e8\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u7d50\u679c\u306e\u884c\u5217\u306b\u306f\u591a\u304f\u306e\u30bc\u30ed\uff08\u901a\u5e38\u306f99\uff05\u4ee5\u4e0a\uff09\u306e\u7279\u5fb4\u5024\u304c\u542b\u307e\u308c\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u300110,000\u306e\u77ed\u6587\u6587\u66f8\uff08\u96fb\u5b50\u30e1\u30fc\u30eb\u306a\u3069\uff09\u306e\u96c6\u5408\u306f\u3001\u5408\u8a0810\u4e07\u30aa\u30fc\u30c0\u30fc\u306e\u8a9e\u5f59\u3092\u4f7f\u7528\u3057\u3001\u5404\u6587\u66f8\u306f100\u304b\u30891000\u306e\u30e6\u30cb\u30fc\u30af\u30ef\u30fc\u30c9\u3092\u4f7f\u7528\u3059\u308b\u3002\n\u3053\u306e\u3088\u3046\u306a\u884c\u5217\u3092\u30e1\u30e2\u30ea\u306b\u683c\u7d0d\u3067\u304d\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u4ee3\u6570\u6f14\u7b97\u884c\u5217/\u30d9\u30af\u30c8\u30eb\u3092\u9ad8\u901f\u5316\u3059\u308b\u305f\u3081\u306b\u3001\u5b9f\u88c5\u3067\u306f\u901a\u5e38\u3001`scipy.sparse`\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u758e\u306a\u8868\u73fe\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n### 4.2.3.3. \u5171\u901a\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u306e\u4f7f\u7528\u6cd5\n\n[CountVectorizer](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html#sklearn.feature_extraction.text.CountVectorizer) \u306f\u3001\u30c8\u30fc\u30af\u30f3\u5316\u3068\u51fa\u73fe\u56de\u6570\u306e\u8a08\u6570\u306e\u4e21\u65b9\u30921\u3064\u306e\u30af\u30e9\u30b9\u306b\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\n\n```py\n>>> from sklearn.feature_extraction.text import CountVectorizer\n```\n\n\u3053\u306e\u30e2\u30c7\u30eb\u306b\u306f\u591a\u304f\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\u975e\u5e38\u306b\u59a5\u5f53\u3067\u3059\uff08\u8a73\u7d30\u306f[\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://scikit-learn.org/stable/modules/classes.html#text-feature-extraction-ref) \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff09\uff1a\n\n```pycon\n>>> vectorizer = CountVectorizer(min_df=1)\n>>> vectorizer                     \nCountVectorizer(analyzer=...'word', binary=False, decode_error=...'strict',\n        dtype=<... 'numpy.int64'>, encoding=...'utf-8', input=...'content',\n        lowercase=True, max_df=1.0, max_features=None, min_df=1,\n        ngram_range=(1, 1), preprocessor=None, stop_words=None,\n        strip_accents=None, token_pattern=...'(?u)\\\\b\\\\w\\\\w+\\\\b',\n        tokenizer=None, vocabulary=None)\n```\n\n\u305d\u308c\u3092\u4f7f\u3063\u3066\u3001\u30c6\u30ad\u30b9\u30c8\u6587\u66f8\u306e\u6700\u5c0f\u9650\u306e\u30b3\u30fc\u30d1\u30b9\u306e\u5358\u8a9e\u306e\u51fa\u73fe\u3092\u30c8\u30fc\u30af\u30f3\u5316\u3057\u3066\u6570\u3048\u307e\u3057\u3087\u3046\u3002\n\n```pycon\n>>> corpus = [\n...     'This is the first document.',\n...     'This is the second second document.',\n...     'And the third one.',\n...     'Is this the first document?',\n... ]\n>>> X = vectorizer.fit_transform(corpus)\n>>> X                              \n<4x9 sparse matrix of type '<... 'numpy.int64'>'\n    with 19 stored elements in Compressed Sparse ... format>\n```\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u306f\u30012\u6587\u5b57\u4ee5\u4e0a\u306e\u5358\u8a9e\u3092\u62bd\u51fa\u3057\u3066\u6587\u5b57\u5217\u3092\u30c8\u30fc\u30af\u30f3\u5316\u3057\u307e\u3059\u3002\u3053\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u5b9f\u884c\u3059\u308b\u7279\u5b9a\u306e\u6a5f\u80fd\u306f\u3001\u660e\u793a\u7684\u306b\u8981\u6c42\u3067\u304d\u307e\u3059\u3002\n\n```pycon\n>>> analyze = vectorizer.build_analyzer()\n>>> analyze(\"This is a text document to analyze.\") == (\n...     ['this', 'is', 'text', 'document', 'to', 'analyze'])\nTrue\n```\n\n\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u4e2d\u306b\u30a2\u30ca\u30e9\u30a4\u30b6\u306b\u3088\u3063\u3066\u691c\u51fa\u3055\u308c\u305f\u5404\u7528\u8a9e\u306b\u306f\u3001\u7d50\u679c\u306e\u884c\u5217\u306e\u5217\u306b\u5bfe\u5fdc\u3059\u308b\u56fa\u6709\u306e\u6574\u6570\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002\u3053\u306e\u5217\u306e\u89e3\u91c8\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n```pycon\n>>> vectorizer.get_feature_names() == (\n...     ['and', 'document', 'first', 'is', 'one',\n...      'second', 'the', 'third', 'this'])\nTrue\n\n>>> X.toarray()           \narray([[0, 1, 1, 1, 0, 0, 1, 0, 1],\n       [0, 1, 0, 1, 0, 2, 1, 0, 1],\n       [1, 0, 0, 0, 1, 0, 1, 1, 0],\n       [0, 1, 1, 1, 0, 0, 1, 0, 1]]...)\n```\n\n\u7279\u5fb4\u5024\u304b\u3089\u5217\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3078\u306e\u9006\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306f\u3001\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u306evocabulary_\u5c5e\u6027\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n\n```pycon\n>>> vectorizer.vocabulary_.get('document')\n1\n```\n\n\u3057\u305f\u304c\u3063\u3066\u3001\u8a13\u7df4\u30b3\u30fc\u30d1\u30b9\u306b\u898b\u3089\u308c\u306a\u304b\u3063\u305f\u5358\u8a9e\u306f\u3001\u5909\u63db\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u4eca\u5f8c\u306e\u547c\u3073\u51fa\u3057\u3067\u5b8c\u5168\u306b\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n\n```pycon\n>>> vectorizer.transform(['Something completely new.']).toarray()\n...                           \narray([[0, 0, 0, 0, 0, 0, 0, 0, 0]]...)\n```\n\n\u524d\u306e\u30b3\u30fc\u30d1\u30b9\u3067\u306f\u3001\u6700\u521d\u306e\u6587\u66f8\u3068\u6700\u5f8c\u306e\u6587\u66f8\u306f\u307e\u3063\u305f\u304f\u540c\u3058\u5358\u8a9e\u3092\u6301\u3061\u3001\u7b49\u4fa1\u30d9\u30af\u30c8\u30eb\u3067\u30b3\u30fc\u30c9\u5316\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002 \u7279\u306b\u3001\u6700\u5f8c\u306e\u6587\u66f8\u304c\u7591\u554f\u306e\u66f8\u5f0f\u3067\u3042\u308b\u3068\u3044\u3046\u60c5\u5831\u3092\u5931\u3046\u3002\u9806\u756a\u306e\u60c5\u5831\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b\u30011\u30b0\u30e9\u30e0\uff08\u500b\u3005\u306e\u5358\u8a9e\uff09\u306b\u52a0\u3048\u30662\u30b0\u30e9\u30e0\u306e\u5358\u8a9e\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```py\n>>> bigram_vectorizer = CountVectorizer(ngram_range=(1, 2),\n...                                     token_pattern=r'\\b\\w+\\b', min_df=1)\n>>> analyze = bigram_vectorizer.build_analyzer()\n>>> analyze('Bi-grams are cool!') == (\n...     ['bi', 'grams', 'are', 'cool', 'bi grams', 'grams are', 'are cool'])\nTrue\n```\n\n\u3053\u306e\u30d9\u30af\u30c8\u30eb\u5316\u5668\u306b\u3088\u3063\u3066\u62bd\u51fa\u3055\u308c\u305f\u8a9e\u5f59\u306f\u3001\u306f\u308b\u304b\u306b\u5927\u304d\u304f\u306a\u308a\u3001\u7b26\u53f7\u5316\u3055\u308c\u305f\u969b\u306e\u8a9e\u9806\u4f4d\u7f6e\u60c5\u5831\u306e\u3042\u3044\u307e\u3044\u3055\u3092\u89e3\u6c7a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n>>>\n>>> X_2 = bigram_vectorizer.fit_transform(corpus).toarray()\n>>> X_2\n...                           \narray([[0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0],\n       [0, 0, 1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0],\n       [1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0],\n       [0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1]]...)\n```\n\n\u5177\u4f53\u7684\u306b\u306f\u3001\u300cIs this\u300d\u3068\u3044\u3046\u8cea\u554f\u5211\u306f\u6700\u5f8c\u306e\u6587\u66f8\u306b\u306e\u307f\u5b58\u5728\u3057\u307e\u3059\u3002\n\n```\n>>> feature_index = bigram_vectorizer.vocabulary_.get('is this')\n>>> X_2[:, feature_index]     \narray([0, 0, 0, 1]...)\n```\n\n### 4.2.3.4. Tf-idf\u91cd\u307f\u4ed8\u3051\n\n\u5927\u304d\u306a\u30c6\u30ad\u30b9\u30c8\u30b3\u30fc\u30d1\u30b9\u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u5358\u8a9e\u304c\u975e\u5e38\u306b\u591a\u304f\u5b58\u5728\u3057\uff08\u4f8b\u3048\u3070\u3001\u82f1\u8a9e\u3067\u306f\u300cthe\u300d\u3001\u300ca\u300d\u3001\u300cis\u300d\uff09\u3001\u6587\u66f8\u306e\u5185\u5bb9\u306b\u95a2\u3059\u308b\u610f\u5473\u306e\u3042\u308b\u60c5\u5831\u3092\u307b\u3068\u3093\u3069\u6301\u305f\u306a\u3044\u3002\u983b\u5ea6\u60c5\u5831\u3092\u76f4\u63a5\u5206\u985e\u5668\u306b\u76f4\u63a5\u4f9b\u7d66\u3059\u308b\u3068\u3001\u975e\u5e38\u306b\u983b\u7e41\u306b\u4f7f\u7528\u3055\u308c\u308b\u7528\u8a9e\u306f\u3001\u5e0c\u5c11\u3067\u306f\u3042\u308b\u304c\u8208\u5473\u6df1\u3044\u7528\u8a9e\u306e\u983b\u5ea6\u3092\u96a0\u3057\u307e\u3059\u3002\n\u983b\u5ea6\u60c5\u5831\u3092\u5206\u985e\u5668\u306b\u9069\u3057\u305f\u5024\u306b\u3059\u308b\u305f\u3081\u3001tf-idf\u5909\u63db\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u975e\u5e38\u306b\u4e00\u822c\u7684\u3067\u3042\u308b\u3002\nTf-idf\u306f\u5358\u8a9e\u51fa\u73fe\u6570(tf)\u3068\u51fa\u73fe\u6587\u7ae0\u6570\u306e\u9006\u6570(idf)\u3092\u610f\u5473\u3057\u3001$\\text{tf-idf(t,d)}=\\text{tf(t,d)} \\times \\text{idf(t)}$ \u3067\u3059\u3002\n`TfidfTransformer` \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a `TfidfTransformer(norm='l2', use_idf=True, smooth_idf=True, sublinear_tf=False)` \u3092\u4f7f\u3046\u3068\u3001\n\u5358\u8a9e\u983b\u5ea6\u3001\u5358\u8a9e\u304c\u6240\u4e0e\u306e\u6587\u66f8\u5185\u3067\u767a\u751f\u3059\u308b\u56de\u6570\u306f\u6b21\u306e\u3088\u3046\u306b\u8a08\u7b97\u3055\u308c\u305fIDF\u6210\u5206\u3068\u4e57\u7b97\u3055\u308c\u307e\u3059\u3002\n\n```math\n\\text{idf}(t) = log{\\frac{1 + n_d}{1+\\text{df}(d,t)}} + 1\n```\n\n\u3053\u3053\u3067 $n_d$ \u306f\u6587\u66f8\u306e\u7dcf\u6570\u3067\u3042\u308a\u3001$\\text{df}(d,t)$ \u306f\u5358\u8a9e $t$ \u3092\u542b\u3080\u6587\u66f8\u306e\u6570\u3067\u3059\u3002\u5f97\u3089\u308c\u305ftf-idf\u30d9\u30af\u30c8\u30eb\u306f\u3001\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u30ce\u30eb\u30e0\u306b\u3088\u3063\u3066\u6b63\u898f\u5316\u3055\u308c\u308b\u3002\n\n```math\nv_{norm} = \\frac{v}{||v||_2} \uff1d \\frac{v}{\\sqrt{v{\\_1}^2 + v{\\_2}^2 + \\dots + v{\\_n}^2}}\n```\n\n\u3053\u308c\u306f\u3082\u3068\u3082\u3068\u3001\u6587\u66f8\u306e\u5206\u985e\u3084\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3067\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u60c5\u5831\u691c\u7d22\u7528\u306b\u958b\u767a\u3055\u308c\u305f\u5358\u8a9e\u91cd\u307f\u4ed8\u3051\u65b9\u5f0f\uff08\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u691c\u7d22\u7d50\u679c\u306e\u9806\u4f4d\u4ed8\u3051\u6a5f\u80fd\uff09\u3067\u3057\u305f\u3002\n\u4ee5\u4e0b\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001tf-idfs\u304c\u3069\u306e\u3088\u3046\u306b\u6b63\u78ba\u306b\u8a08\u7b97\u3055\u308c\u3001scikit-learn\u306e [TfidfTransformer](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html#sklearn.feature_extraction.text.TfidfTransformer)\u3068 [TfidfVectorizer](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfVectorizer.html#sklearn.feature_extraction.text.TfidfVectorizer) \u3067\u8a08\u7b97\u3055\u308c\u305ftf-idfs\u304c\u3001idf\u3092\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u6a19\u6e96\u306e\u6559\u79d1\u66f8\u306e\u8868\u8a18\u6cd5\u3068\u5c11\u3057\u9055\u3063\u3066\u3044\u308b\u304b\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```math\n\\text{idf}(t) = log{\\frac{n_d}{1+\\text{df}(d,t)}}\n```\n\nTfidfTransformer\u304a\u3088\u3073TfidfVectorizer\u3067\u306f\u3001`smooth_idf = False`\u306b\u3059\u308b\u3068idf\u306e\u5206\u6bcd\u306e\u4ee3\u308f\u308a\u306bidf\u306b \"1\"\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\u3002\n\n$\\text{idf}(t) = log{\\frac{n_d}{\\text{df}(d,t)}} + 1$\n\n\u3053\u306e\u6b63\u898f\u5316\u306f\u3001TfidfTransformer\u30af\u30e9\u30b9\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u307e\u3059\u3002\n\n```py\n>>> from sklearn.feature_extraction.text import TfidfTransformer\n>>> transformer = TfidfTransformer(smooth_idf=False)\n>>> transformer   \nTfidfTransformer(norm=...'l2', smooth_idf=False, sublinear_tf=False,\n                 use_idf=True)\n```\n\n\u518d\u5ea6\u3001\u3059\u3079\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001[\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://scikit-learn.org/stable/modules/classes.html#text-feature-extraction-ref) \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f8b\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u6700\u521d\u306e\u5358\u8a9e\u306e\u51fa\u73fe\u7387\u306f100\uff05\u3067\u3042\u308a\u3001\u305d\u308c\u307b\u3069\u8208\u5473\u6df1\u3044\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002 \u4ed6\u306e2\u3064\u306e\u7279\u5fb4\u306e\u51fa\u73fe\u7387\u306f50\uff05\u672a\u6e80\u3057\u304b\u306a\u3044\u305f\u3081\u3001\u304a\u305d\u3089\u304f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u5185\u5bb9\u3092\u3088\u308a\u3088\u304f\u8868\u3057\u307e\u3059\u3002\n\n```py\n>>> counts = [[3, 0, 1],\n...           [2, 0, 0],\n...           [3, 0, 0],\n...           [4, 0, 0],\n...           [3, 2, 0],\n...           [3, 0, 2]]\n...\n>>> tfidf = transformer.fit_transform(counts)\n>>> tfidf                         \n<6x3 sparse matrix of type '<... 'numpy.float64'>'\n    with 9 stored elements in Compressed Sparse ... format>\n\n>>> tfidf.toarray()                        \narray([[ 0.81940995,  0.        ,  0.57320793],\n       [ 1.        ,  0.        ,  0.        ],\n       [ 1.        ,  0.        ,  0.        ],\n       [ 1.        ,  0.        ,  0.        ],\n       [ 0.47330339,  0.88089948,  0.        ],\n       [ 0.58149261,  0.        ,  0.81355169]])\n```\n\n\u5404\u884c\u306f\u3001\u5358\u4f4d\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u6a19\u6e96\u3092\u6709\u3059\u308b\u3088\u3046\u306b\u6b63\u898f\u5316\u3055\u308c\u308b\uff1a\n\n```math\nv\\_{norm} = \\frac{v}{||v||\\_2} = \\frac{v}{\\sqrt{v{\\_1}^2 + v{\\_2}^2 + \\dots + v{_n}^2}}\n```\n\n\u305f\u3068\u3048\u3070\u3001counts\u914d\u5217\u306e\u6700\u521d\u306e\u6587\u66f8\u306e\u6700\u521d\u306e\u9805\u306etf-idf\u3092\u6b21\u306e\u3088\u3046\u306b\u8a08\u7b97\u3067\u304d\u307e\u3059\u3002\n\n```math\nn_{d, {\\text{term1}}} = 6  \\\\\n\\text{df}(d, t)_{\\text{term1}} = 6  \\\\\n\\text{idf}(d, t)_{\\text{term1}} = log \\frac{n_d}{\\text{df}(d, t)} + 1 = log(1)+1 = 1  \\\\\n\\text{tf-idf}_{\\text{term1}} = \\text{tf} \\times \\text{idf} = 3 \\times 1 = 3\n```\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5185\u306e\u6b8b\u308a\u306e2\u3064\u306e\u9805\u306b\u3064\u3044\u3066\u3053\u306e\u8a08\u7b97\u3092\u7e70\u308a\u8fd4\u3059\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```math\n\\text{tf-idf}_{\\text{term2}} = 0 \\times log(6/1)+1 = 0 \\\\\n\\text{tf-idf}_{\\text{term3}} = 1 \\times log(6/2)+1 \\approx 2.0986\n```\n\n\u751f\u306etf-idfs\u306e\u30d9\u30af\u30c8\u30eb\uff1a\n\n```math\n\\text{tf-idf}_raw = [3, 0, 2.0986]\n```\n\n\u6b21\u306b\u3001\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\uff08L2\uff09\u30ce\u30eb\u30e0\u3092\u9069\u7528\u3059\u308b\u3068\u3001\u6587\u66f81\u306b\u5bfe\u3057\u3066\u4ee5\u4e0b\u306etf-idfs\u304c\u5f97\u3089\u308c\u308b\u3002\n\n```math\n\\frac{[3, 0, 2.0986]}{\\sqrt{\\big(3^2 + 0^2 + 2.0986^2\\big)}}\n= [ 0.819,  0,  0.573]\n```\n\n\u3055\u3089\u306b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf`smooth_idf = True`\u306f\u3001\u5206\u5b50\u3068\u5206\u6bcd\u306b\u300c1\u300d\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u4f59\u5206\u306a\u6587\u66f8\u304c\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5185\u306e\u3059\u3079\u3066\u306e\u9805\u3092\u6b63\u78ba\u306b1\u56de\u542b\u3080\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u3002\u30bc\u30ed\u5272\u3092\u9632\u6b62\u3057\u307e\u3059\u3002\n\n```math\n\\text{idf}(t) = log{\\frac{1 + n_d}{1+\\text{df}(d,t)}} + 1\n```\n\n\u3053\u306e\u5909\u66f4\u3092\u4f7f\u7528\u3057\u3066\u3001\u6587\u66f81\u306e\u7b2c3\u9805\u306etf-idf\u304c1.8473\u306b\u5909\u66f4\u3055\u308c\u307e\u3059\u3002\n\n```math\n\\text{tf-idf}_{\\text{term3}} = 1 \\times log(7/3)+1 \\approx 1.8473\n```\n\n\u305d\u3057\u3066\u3001L2\u6b63\u898f\u5316\u3055\u308c\u305ftf-idf\u306f\n\n```math\n\\frac{[3, 0, 1.8473]}{\\sqrt{\\big(3^2 + 0^2 + 1.8473^2\\big)}} = [0.8515, 0, 0.5243]\n```\n\n```py\n>>> transformer = TfidfTransformer()\n>>> transformer.fit_transform(counts).toarray()\narray([[ 0.85151335,  0.        ,  0.52433293],\n       [ 1.        ,  0.        ,  0.        ],\n       [ 1.        ,  0.        ,  0.        ],\n       [ 1.        ,  0.        ,  0.        ],\n       [ 0.55422893,  0.83236428,  0.        ],\n       [ 0.63035731,  0.        ,  0.77630514]])\n```\n\n`fit` \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306b\u3088\u3063\u3066\u8a08\u7b97\u3055\u308c\u305f\u5404\u30d5\u30a3\u30fc\u30c1\u30e3\u306e\u91cd\u307f\u306f\u3001model\u5c5e\u6027\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n\n```py\n>>> transformer.idf_                       \narray([ 1. ...,  2.25...,  1.84...])\n```\n\ntf-idf\u306f\u30c6\u30ad\u30b9\u30c8\u6a5f\u80fd\u306b\u975e\u5e38\u306b\u3088\u304f\u4f7f\u7528\u3055\u308c\u308b\u306e\u3067\u3001CountVectorizer\u3068TfidfTransformer\u306e\u3059\u3079\u3066\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u5358\u4e00\u306e\u30e2\u30c7\u30eb\u306b\u307e\u3068\u3081\u308bTfidfVectorizer\u3068\u3044\u3046\u5225\u306e\u30af\u30e9\u30b9\u3082\u3042\u308a\u307e\u3059:\n\n```py\n>>> from sklearn.feature_extraction.text import TfidfVectorizer\n>>> vectorizer = TfidfVectorizer(min_df=1)\n>>> vectorizer.fit_transform(corpus)\n...                                \n<4x9 sparse matrix of type '<... 'numpy.float64'>'\n    with 19 stored elements in Compressed Sparse ... format>\n```\n\nTF-IDF\u6b63\u898f\u5316\u306f\u3001\u3057\u3070\u3057\u3070\u975e\u5e38\u306b\u6709\u7528\u3067\u3042\u308b\u304c\u3001\u30d0\u30a4\u30ca\u30ea\u767a\u751f\u30de\u30fc\u30ab\u30fc\u304c\u3001\u3088\u308a\u826f\u3044\u7279\u5fb4\u3092\u63d0\u4f9b\u3059\u308b\u4f8b\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002 \u3053\u308c\u306f\u3001CountVectorizer\u306e`binary` \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002 \u7279\u306b\u3001[Bernoulli Naive Bayes](http://scikit-learn.org/stable/modules/naive_bayes.html#bernoulli-naive-bayes) \u306e\u3088\u3046\u306a\u63a8\u5b9a\u5668\u306f\u3001\u96e2\u6563\u30d6\u30fc\u30eb\u78ba\u7387\u5909\u6570\u3092\u660e\u793a\u7684\u306b\u30e2\u30c7\u30eb\u5316\u3059\u308b\u3002\u307e\u305f\u3001\u975e\u5e38\u306b\u77ed\u3044\u30c6\u30ad\u30b9\u30c8\u306ftf-idf\u3067\u30ce\u30a4\u30ba\u304c\u591a\u304f\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u3001\u4e00\u65b9\u3001\u30d0\u30a4\u30ca\u30ea\u767a\u751f\u60c5\u5831\u306f\u3088\u308a\u5b89\u5b9a\u3057\u3066\u3044\u308b\u3002\n\u3044\u3064\u3082\u306e\u3088\u3046\u306b\u3001\u7279\u5fb4\u62bd\u51fa\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u6574\u3059\u308b\u6700\u826f\u306e\u65b9\u6cd5\u306f\u3001\u4f8b\u3048\u3070\u3001\u7279\u5fb4\u62bd\u51fa\u5668\u3092\u5206\u985e\u5668\u3067\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u5316\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30af\u30ed\u30b9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u305f\u30b0\u30ea\u30c3\u30c9\u30b5\u30fc\u30c1\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3042\u308b\u3002\n\n - [\u30c6\u30ad\u30b9\u30c8\u306e\u7279\u5fb4\u62bd\u51fa\u3068\u8a55\u4fa1\u306e\u305f\u3081\u306e\u30b5\u30f3\u30d7\u30eb\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3](http://scikit-learn.org/stable/auto_examples/model_selection/grid_search_text_feature_extraction.html#sphx-glr-auto-examples-model-selection-grid-search-text-feature-extraction-py)\n\n\n### 4.2.3.5. \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30c7\u30b3\u30fc\u30c9\n\n\u30c6\u30ad\u30b9\u30c8\u306f\u6587\u5b57\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30d5\u30a1\u30a4\u30eb\u306f\u30d0\u30a4\u30c8\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30d0\u30a4\u30c8\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306b\u5f93\u3063\u305f\u6587\u5b57\u3092\u8868\u3057\u307e\u3059\u3002 Python\u3067\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u64cd\u4f5c\u3059\u308b\u306b\u306f\u3001\u305d\u306e\u30d0\u30a4\u30c8\u3092Unicode\u3068\u547c\u3070\u308c\u308b\u6587\u5b57\u30bb\u30c3\u30c8\u306b\u30c7\u30b3\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4e00\u822c\u7684\u306a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306fASCII\u3001Latin-1\uff08\u897f\u30e8\u30fc\u30ed\u30c3\u30d1\uff09\u3001KOI8-R\uff08\u30ed\u30b7\u30a2\u8a9e\uff09\u3001\u30e6\u30cb\u30d0\u30fc\u30b5\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0UTF-8\u3068UTF-16\u3067\u3059\u3002\u4ed6\u306b\u3082\u591a\u304f\u306e\u3082\u306e\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\n<div class=\"alert alert-info\"> \u6ce8\uff1a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306f\u300c\u6587\u5b57\u30bb\u30c3\u30c8\u300d\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u306e\u7528\u8a9e\u306e\u7cbe\u5ea6\u306f\u4f4e\u304f\u306a\u308a\u307e\u3059\u3002\u5358\u4e00\u306e\u6587\u5b57\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u8907\u6570\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u5b58\u5728\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002</div>\n\nscikit-learn\u306e\u30c6\u30ad\u30b9\u30c8\u7279\u5fb4\u91cf\u62bd\u51fa\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30c7\u30b3\u30fc\u30c9\u65b9\u6cd5\u3092\u77e5\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u65b9\u6cd5\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306b\u306e\u307f\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u76ee\u7684\u306e\u305f\u3081\u306b\u3001[CountVectorizer](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html#sklearn.feature_extraction.text.CountVectorizer)\u306f`encoding`\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u308a\u307e\u3059\u3002\u73fe\u4ee3\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u3001\u6b63\u3057\u3044\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306f\u304a\u305d\u3089\u304fUTF-8\u3067\u3042\u308b\u305f\u3081\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\uff08`encoding = \"utf-8\"`\uff09\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u30ed\u30fc\u30c9\u3057\u3066\u3044\u308b\u30c6\u30ad\u30b9\u30c8\u304c\u5b9f\u969b\u306bUTF-8\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001`UnicodeDecodeError`\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u30c7\u30b3\u30fc\u30c9\u30a8\u30e9\u30fc\u306b\u3064\u3044\u3066\u306f\u3001decode_error\u30d1\u30e9\u30e1\u30fc\u30bf\u3092 `\"ignore\"`\u307e\u305f\u306f `\"replace\"`\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u3092\u9ed9\u3089\u305b\u307e\u3059\u3002 Python\u30d7\u30ed\u30f3\u30d7\u30c8\u3067help\uff08bytes.decode\uff09\u3068\u5165\u529b\u3057\u3001Python\u95a2\u6570 `bytes.decode` \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30c6\u30ad\u30b9\u30c8\u306e\u30c7\u30b3\u30fc\u30c9\u306b\u554f\u984c\u304c\u3042\u308b\u5834\u5408\u306f\u3001\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff1a\n\n - \u30c6\u30ad\u30b9\u30c8\u306e\u5b9f\u969b\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u4f55\u3067\u3042\u308b\u304b\u3092\u8abf\u3079\u308b\u3002\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u3001\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u793a\u3059\u30d8\u30c3\u30c0\u30fc\u307e\u305f\u306fREADME\u304c\u4ed8\u3044\u3066\u3044\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30c6\u30ad\u30b9\u30c8\u306e\u51fa\u6240\u306b\u57fa\u3065\u3044\u3066\u60f3\u5b9a\u3067\u304d\u308b\u6a19\u6e96\u7684\u306a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u3042\u308b\u5834\u5408\u3082\u3042\u308a\u307e\u3059\u3002\n - UNIX\u30b3\u30de\u30f3\u30c9\u30fb\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3057\u3066\u3001\u3069\u306e\u3088\u3046\u306a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u4e00\u822c\u7684\u3067\u3042\u308b\u304b\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 Python\u306echardet\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306f\u3001\u7279\u5b9a\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u63a8\u6e2c\u3059\u308b`chardetect.py`\u3068\u3044\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u4ed8\u5c5e\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u6b63\u3057\u3044\u3068\u63a8\u6e2c\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n - UTF-8\u3092\u8a66\u3057\u3066\u30a8\u30e9\u30fc\u3092\u7121\u8996\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002 `bytes.decode\uff08errors = 'replace'\uff09`\u3067\u30d0\u30a4\u30c8\u6587\u5b57\u5217\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u30c7\u30b3\u30fc\u30c9\u30a8\u30e9\u30fc\u3092\u610f\u5473\u306e\u306a\u3044\u6587\u5b57\u306b\u7f6e\u304d\u63db\u3048\u305f\u308a\u3001\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u3067`decode_error = 'replace'`\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001\u7279\u5fb4\u91cf\u306e\u6709\u7528\u6027\u304c\u640d\u306a\u308f\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n - \u5b9f\u969b\u306e\u30c6\u30ad\u30b9\u30c8\u306f\u3001\u3055\u307e\u3056\u307e\u306a\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u3055\u307e\u3056\u307e\u306a\u30bd\u30fc\u30b9\u304b\u3089\u6765\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3057\u3001\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3055\u308c\u305f\u3082\u306e\u3068\u306f\u7570\u306a\u308b\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u3046\u3063\u304b\u308a\u30c7\u30b3\u30fc\u30c9\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001Web\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u3067\u306f\u4e00\u822c\u7684\u3067\u3059\u3002 Python\u30d1\u30c3\u30b1\u30fc\u30b8\u306e[ftfy](https://github.com/LuminosoInsight/python-ftfy)\u306f\u81ea\u52d5\u7684\u306b\u3044\u304f\u3064\u304b\u306e\u30af\u30e9\u30b9\u306e\u30c7\u30b3\u30fc\u30c9\u30a8\u30e9\u30fc\u3092\u4e26\u3079\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u672a\u77e5\u306e\u30c6\u30ad\u30b9\u30c8\u3092latin-1\u3068\u3057\u3066\u30c7\u30b3\u30fc\u30c9\u3057\u3001ftfy\u3092\u4f7f\u3063\u3066\u30a8\u30e9\u30fc\u3092\u4fee\u6b63\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n - \u30c6\u30ad\u30b9\u30c8\u304c\u4e26\u3079\u66ff\u3048\u304c\u96e3\u3057\u3044\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u3054\u305f\u307e\u305c\u306e\u5834\u5408\uff0820 Newsgroups \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306a\u3069\uff09\u3001latin-1\u306e\u3088\u3046\u306a\u5358\u7d14\u306a\u30b7\u30f3\u30b0\u30eb\u30d0\u30a4\u30c8\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306b\u623b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4e00\u90e8\u306e\u30c6\u30ad\u30b9\u30c8\u306f\u6b63\u3057\u304f\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u5c11\u306a\u304f\u3068\u3082\u540c\u3058\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u30d0\u30a4\u30c8\u306f\u5e38\u306b\u540c\u3058\u6a5f\u80fd\u3092\u8868\u3057\u307e\u3059\u3002\n\n\u305f\u3068\u3048\u3070\u3001\u6b21\u306e\u30b9\u30cb\u30da\u30c3\u30c8\u306f\u30013\u3064\u306e\u30c6\u30ad\u30b9\u30c8\u306e\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u628a\u63e1\u3059\u308b\u305f\u3081\u306bchardet\uff08scikit-learn\u3068\u4e00\u7dd2\u306b\u306f\u51fa\u8377\u3055\u308c\u305a\u3001\u5225\u9014\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff09\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u305d\u306e\u5f8c\u3001\u30c6\u30ad\u30b9\u30c8\u3092\u30d9\u30af\u30c8\u30eb\u5316\u3057\u3001\u5b66\u7fd2\u3057\u305f\u8a9e\u5f59\u3092\u5370\u5237\u3057\u307e\u3059\u3002\u51fa\u529b\u306f\u3053\u3053\u3067\u306f\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u3002\n\n```py\n>>> import chardet    \n>>> text1 = b\"Sei mir gegr\\xc3\\xbc\\xc3\\x9ft mein Sauerkraut\"\n>>> text2 = b\"holdselig sind deine Ger\\xfcche\"\n>>> text3 = b\"\\xff\\xfeA\\x00u\\x00f\\x00 \\x00F\\x00l\\x00\\xfc\\x00g\\x00e\\x00l\\x00n\\x00 \\x00d\\x00e\\x00s\\x00 \\x00G\\x00e\\x00s\\x00a\\x00n\\x00g\\x00e\\x00s\\x00,\\x00 \\x00H\\x00e\\x00r\\x00z\\x00l\\x00i\\x00e\\x00b\\x00c\\x00h\\x00e\\x00n\\x00,\\x00 \\x00t\\x00r\\x00a\\x00g\\x00 \\x00i\\x00c\\x00h\\x00 \\x00d\\x00i\\x00c\\x00h\\x00 \\x00f\\x00o\\x00r\\x00t\\x00\"\n>>> decoded = [x.decode(chardet.detect(x)['encoding'])\n...            for x in (text1, text2, text3)]        \n>>> v = CountVectorizer().fit(decoded).vocabulary_    \n>>> for term in v: print(v)                           \n```\n\n\uff08`chardet`\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u306f\u3001\u6700\u521d\u306e\u3082\u306e\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\uff09\nUnicode\u3068\u6587\u5b57\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u6982\u8981\u306b\u3064\u3044\u3066\u306f\u3001Joel Spolsky\u306e[\u3059\u3079\u3066\u306e\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u958b\u767a\u8005\u304cUnicode\u306b\u3064\u3044\u3066\u77e5\u3063\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u7d76\u5bfe\u6700\u5c0f\u5024](http://www.joelonsoftware.com/articles/Unicode.html)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n### 4.2.3.6. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u30b5\u30f3\u30d7\u30eb\n\nBag of Words \u8868\u73fe\u306f\u975e\u5e38\u306b\u5358\u7d14\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u306f\u9a5a\u304f\u307b\u3069\u6709\u7528\u3067\u3059\u3002\n\u7279\u306b **\u6559\u5e2b\u3042\u308a\u8a2d\u5b9a** \u3067\u306f\u3001 **\u6587\u66f8\u5206\u985e\u5668** \u3092\u8a13\u7df4\u3059\u308b\u305f\u3081\u306b\u3001\u9ad8\u901f\u3067\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u306a\u7dda\u5f62\u30e2\u30c7\u30eb\u3068\u3046\u307e\u304f\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n - [\u758e\u306a\u7279\u5fb4\u3092\u7528\u3044\u305f\u30c6\u30ad\u30b9\u30c8\u6587\u66f8\u306e\u5206\u985e](http://scikit-learn.org/stable/auto_examples/text/document_classification_20newsgroups.html#sphx-glr-auto-examples-text-document-classification-20newsgroups-py)\n\n\u6559\u5e2b\u306a\u3057\u8a2d\u5b9a\u3067\u306f\u3001[K-means](http://scikit-learn.org/stable/modules/clustering.html#k-means)\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u985e\u4f3c\u3057\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u307e\u3068\u3081\u3066\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n - [k-means\u3092\u4f7f\u7528\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u6587\u66f8\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0](http://scikit-learn.org/stable/auto_examples/text/document_clustering.html#sphx-glr-auto-examples-text-document-clustering-py)\n\n\u6700\u5f8c\u306b\u3001[\u975e\u8ca0\u884c\u5217\u5206\u89e3\uff08NMF\u307e\u305f\u306fNNMF\uff09](http://scikit-learn.org/stable/modules/decomposition.html#nmf)\u3092\u4f7f\u7528\u3059\u308b\u306a\u3069\u3001\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u30cf\u30fc\u30c9\u5272\u308a\u5f53\u3066\u5236\u7d04\u3092\u7de9\u548c\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30b3\u30fc\u30d1\u30b9\u306e\u4e3b\u8981\u30c8\u30d4\u30c3\u30af\u3092\u767a\u898b\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n - [\u975e\u8ca0\u884c\u5217\u5206\u89e3\u3068\u6f5c\u5728\u7684\u30b8\u30ea\u30af\u30ec\u30c3\u30c8\u5272\u308a\u5f53\u3066\u3092\u7528\u3044\u305f\u30c8\u30d4\u30c3\u30af\u62bd\u51fa](http://scikit-learn.org/stable/auto_examples/applications/topics_extraction_with_nmf_lda.html#sphx-glr-auto-examples-applications-topics-extraction-with-nmf-lda-py)\n\n### 4.2.3.7. Bag of Words\u306e\u8868\u73fe\u306e\u9650\u754c\n\n\u30e6\u30cb\u30b0\u30e9\u30e0\u306e\u96c6\u5408\uff08\u3069\u306e\u5358\u8a9e\u306e\u888b\u3067\u3042\u308b\u304b\uff09\u306f\u3001\u30d5\u30ec\u30fc\u30ba\u3084\u8907\u6570\u5358\u8a9e\u306e\u8868\u73fe\u3092\u6355\u6349\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305a\u3001\u52b9\u679c\u7684\u306b\u5358\u8a9e\u9806\u5e8f\u306e\u4f9d\u5b58\u6027\u3092\u7121\u8996\u3057\u307e\u3059\u3002\u3055\u3089\u306b\u3001Bag of Words\u30e2\u30c7\u30eb\u306f\u3001\u6f5c\u5728\u7684\u306a\u30b9\u30da\u30eb\u30df\u30b9\u307e\u305f\u306f\u5358\u8a9e\u306e\u6d3e\u751f\u3092\u8aac\u660e\u3057\u307e\u305b\u3093\u3002\n\u6551\u52a9\u306bN\u30b0\u30e9\u30e0\uff01\u30e6\u30cb\u30b0\u30e9\u30e0\u306e\u5358\u7d14\u306a\u96c6\u5408\uff08n = 1\uff09\u3092\u69cb\u7bc9\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u9023\u7d9a\u3059\u308b\u5358\u8a9e\u306e\u5bfe\u306e\u51fa\u73fe\u3092\u6570\u3048\u308b\u30d0\u30a4\u30b0\u30e9\u30e0\uff08n = 2\uff09\u306e\u96c6\u5408\u3092\u597d\u3080\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u4ee3\u308f\u308a\u306b\u3001\u6587\u5b57N\u30b0\u30e9\u30e0\u306e\u96c6\u5408\u3001\u30b9\u30da\u30eb\u30df\u30b9\u3084\u6d3e\u751f\u8a9e\u306b\u5bfe\u3059\u308b\u5f3e\u529b\u6027\u306e\u3042\u308b\u8868\u73fe\u3092\u8003\u616e\u3057\u3066\u3082\u3088\u3044\u3002\n\u305f\u3068\u3048\u3070\u30012\u3064\u306e\u6587\u66f8`['words'\u3001 'wprds']`\u306e\u30b3\u30fc\u30d1\u30b9\u3092\u6271\u3063\u3066\u3044\u308b\u3068\u3057\u307e\u3057\u3087\u3046\u3002 2\u756a\u76ee\u306e\u6587\u66f8\u306b\u306f\u5358\u8a9e\u300c\u5358\u8a9e\u300d\u306e\u30b9\u30da\u30eb\u30df\u30b9\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u5358\u7d14\u306aBag of Words\u8868\u73fe\u306f\u3001\u3053\u308c\u3089\u306e2\u3064\u3092\u975e\u5e38\u306b\u7570\u306a\u308b\u6587\u66f8\u3068\u307f\u306a\u3057\u30012\u3064\u306e\u53ef\u80fd\u306a\u7279\u5fb4\u306e\u4e21\u65b9\u304c\u7570\u306a\u308b\u3002\u3057\u304b\u3057\u3001\u6587\u5b572\u30b0\u30e9\u30e0\u8868\u73fe\u306f\u30018\u3064\u306e\u7279\u5fb4\u306e\u3046\u30614\u3064\u306b\u4e00\u81f4\u3059\u308b\u6587\u66f8\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u3053\u308c\u306f\u597d\u307e\u3057\u3044\u5206\u985e\u5668\u304c\u3088\u308a\u826f\u304f\u6c7a\u5b9a\u3059\u308b\u306e\u3092\u52a9\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```py\n>>> ngram_vectorizer = CountVectorizer(analyzer='char_wb', ngram_range=(2, 2), min_df=1)\n>>> counts = ngram_vectorizer.fit_transform(['words', 'wprds'])\n>>> ngram_vectorizer.get_feature_names() == (\n...     [' w', 'ds', 'or', 'pr', 'rd', 's ', 'wo', 'wp'])\nTrue\n>>> counts.toarray().astype(int)\narray([[1, 1, 1, 0, 1, 1, 1, 0],\n       [1, 1, 0, 1, 1, 1, 0, 1]])\n```\n\n\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u3001 `char_wb`\u30a2\u30ca\u30e9\u30a4\u30b6\u30fc\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u5358\u8a9e\u5883\u754c\u5185\u306e\u6587\u5b57\u304b\u3089\u306e\u307fn\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u307e\u3059\uff08\u4e21\u5074\u306b\u30b9\u30da\u30fc\u30b9\u304c\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\uff09\u3002\u4ee3\u308f\u308a\u306b\u3001 `char`\u30a2\u30ca\u30e9\u30a4\u30b6\u306f\u5358\u8a9e\u306b\u307e\u305f\u304c\u308bn-gram\u3092\u4f5c\u6210\u3057\u307e\u3059\uff1a\n\n```pycon\n>>>\n>>> ngram_vectorizer = CountVectorizer(analyzer='char_wb', ngram_range=(5, 5), min_df=1)\n>>> ngram_vectorizer.fit_transform(['jumpy fox'])\n...                                \n<1x4 sparse matrix of type '<... 'numpy.int64'>'\n   with 4 stored elements in Compressed Sparse ... format>\n>>> ngram_vectorizer.get_feature_names() == (\n...     [' fox ', ' jump', 'jumpy', 'umpy '])\nTrue\n\n>>> ngram_vectorizer = CountVectorizer(analyzer='char', ngram_range=(5, 5), min_df=1)\n>>> ngram_vectorizer.fit_transform(['jumpy fox'])\n...                                \n<1x5 sparse matrix of type '<... 'numpy.int64'>'\n    with 5 stored elements in Compressed Sparse ... format>\n>>> ngram_vectorizer.get_feature_names() == (\n...     ['jumpy', 'mpy f', 'py fo', 'umpy ', 'y fox'])\nTrue\n```\n\n\u5358\u8a9e\u306e\u5883\u754c\u3092\u610f\u8b58\u3057\u305f\u5909\u7a2e`char_wb`\u306f\u3001\u5358\u8a9e\u5206\u96e2\u306e\u305f\u3081\u306e\u7a7a\u767d\u3092\u4f7f\u7528\u3059\u308b\u8a00\u8a9e\u3067\u7279\u306b\u8208\u5473\u6df1\u3044\u3067\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u8a00\u8a9e\u306e\u5834\u5408\u3001\u30b9\u30da\u30eb\u30df\u30b9\u3084\u5358\u8a9e\u306e\u6d3e\u751f\u306b\u95a2\u3059\u308b\u5805\u7262\u6027\u3092\u4fdd\u3061\u306a\u304c\u3089\u3001\u305d\u306e\u3088\u3046\u306a\u7279\u5fb4\u3092\u7528\u3044\u3066\u8a13\u7df4\u3055\u308c\u305f\u5206\u985e\u5668\u306e\u4e88\u6e2c\u7cbe\u5ea6\u3068\u53ce\u675f\u901f\u5ea6\u306e\u4e21\u65b9\u3092\u9ad8\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u500b\u3005\u306e\u5358\u8a9e\u306e\u4ee3\u308f\u308a\u306bn\u30b0\u30e9\u30e0\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3044\u304f\u3064\u304b\u306e\u8a9e\u9806\u3092\u4fdd\u5b58\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001Bag of Words \u3084 Bag of n-gram \u306f\u6587\u66f8\u306e\u5185\u90e8\u69cb\u9020\u306e\u5927\u90e8\u5206\u3092\u7834\u58ca\u3057\u3001\u305d\u306e\u5185\u90e8\u69cb\u9020\u306b\u3088\u3063\u3066\u904b\u3070\u308c\u308b\u610f\u5473\u306e\u307b\u3068\u3093\u3069\u3092\u7834\u58ca\u3057\u307e\u3059\u3002\n\u81ea\u7136\u8a00\u8a9e\u7406\u89e3\u306e\u5e45\u5e83\u3044\u8ab2\u984c\u306b\u53d6\u308a\u7d44\u3080\u305f\u3081\u306b\u306f\u3001\u6587\u7ae0\u3068\u6bb5\u843d\u306e\u5c40\u6240\u69cb\u9020\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u3088\u3046\u306a\u30e2\u30c7\u30eb\u306e\u591a\u304f\u306f\u3001\u73fe\u5728\u3001scikit-learn \u306e\u5bfe\u8c61\u5916\u3068\u306a\u3063\u3066\u3044\u308b\u300c\u69cb\u9020\u5316\u3055\u308c\u305f\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u300d\u306e\u554f\u984c\u3068\u3057\u3066\u30ad\u30e3\u30b9\u30c8\u3055\u308c\u307e\u3059\u3002\n\n### 4.2.3.8. \u30cf\u30c3\u30b7\u30e5\u30c8\u30ea\u30c3\u30af\u3092\u4f7f\u7528\u3057\u3066\u5927\u304d\u306a\u30c6\u30ad\u30b9\u30c8\u30b3\u30fc\u30d1\u30b9\u3092\u30d9\u30af\u30c8\u30eb\u5316\u3059\u308b\n\n\u4e0a\u8a18\u306e\u30d9\u30af\u30c8\u30eb\u5316\u30b9\u30ad\u30fc\u30e0\u306f\u5358\u7d14\u3067\u3059\u304c\u3001\u6587\u5b57\u5217\u304b\u3089\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3078\u306e\u30de\u30c3\u30d4\u30f3\u30b0\uff08vocabulary_\u5c5e\u6027\uff09\u3092\u30e1\u30e2\u30ea\u30fc\u5185\u306b\u4fdd\u6301\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u5927\u304d\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u6271\u3046\u3068\u304d\u306b\u3044\u304f\u3064\u304b\u306e\u554f\u984c\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n - \u30b3\u30fc\u30d1\u30b9\u304c\u5927\u304d\u304f\u306a\u308c\u3070\u306a\u308b\u307b\u3069\u3001\u8a9e\u5f59\u304c\u5927\u304d\u304f\u306a\u308a\u3001\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u3082\u5897\u3048\u307e\u3059\u3002\n - \u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u306b\u306f\u3001\u5143\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30b5\u30a4\u30ba\u306b\u6bd4\u4f8b\u3057\u305f\u30b5\u30a4\u30ba\u306e\u4e2d\u9593\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u5272\u308a\u5f53\u3066\u304c\u5fc5\u8981\u3067\u3059\u3002\n - \u5358\u8a9e\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u69cb\u7bc9\u3059\u308b\u306b\u306f\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4e00\u65e6\u5168\u3066\u8aad\u307f\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u53b3\u5bc6\u306b\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u5668\u3092\u9069\u5408\u3055\u305b\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n - \u5927\u304d\u306a\u30dc\u30ad\u30e3\u30d6\u30e9\u30ea\u3092\u6301\u3064\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba/\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306f\u3001\u975e\u5e38\u306b\u9045\u3044\uff08\u901a\u5e38\u3001\u540c\u3058\u30b5\u30a4\u30ba\u306eNumPy\u914d\u5217\u306a\u3069\u306e\u30d5\u30e9\u30c3\u30c8\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba/\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3059\u308b\u3088\u308a\u3082\u306f\u308b\u304b\u306b\u9045\u3044\uff09\u3002\n - vocabulary_\u5c5e\u6027\u304c\u304d\u3081\u7d30\u304b\u3044\u540c\u671f\u969c\u58c1\u3092\u6709\u3059\u308b\u306e\u3067\u3001\u30d9\u30af\u30c8\u30eb\u5316\u4f5c\u696d\u3092\u4e26\u884c\u3057\u305f\u30b5\u30d6\u30bf\u30b9\u30af\u306b\u5206\u5272\u3059\u308b\u3053\u3068\u306f\u5bb9\u6613\u3067\u306f\u306a\u3044\u3002\u3059\u306a\u308f\u3061\u3001\u30c8\u30fc\u30af\u30f3\u6587\u5b57\u5217\u304b\u3089\u7279\u5fb4\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3078\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u6700\u521d\u306e\u51fa\u73fe\u9806\u5e8f\u3057\u305f\u304c\u3063\u3066\u30c8\u30fc\u30af\u30f3\u304c\u5171\u6709\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u305a\u3001\u4e26\u5217\u5316\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u9010\u6b21\u51e6\u7406\u3088\u308a\u9045\u304f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n[sklearn.feature_extraction.FeatureHasher](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.FeatureHasher.html#sklearn.feature_extraction.FeatureHasher) \u30af\u30e9\u30b9\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u305f \"\u30cf\u30c3\u30b7\u30f3\u30b0\u30c8\u30ea\u30c3\u30af\"\uff08[\u30d5\u30a3\u30fc\u30c1\u30e3\u30fc\u30cf\u30c3\u30b7\u30e5](http://scikit-learn.org/stable/modules/feature_extraction.html#feature-hashing)\uff09\u3068\u3001[CountVectorizer](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.CountVectorizer.html#sklearn.feature_extraction.text.CountVectorizer)\u306e\u30c6\u30ad\u30b9\u30c8\u524d\u51e6\u7406\u304a\u3088\u3073\u30c8\u30fc\u30af\u30f3\u5316\u6a5f\u80fd\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u3053\u308c\u3089\u306e\u5236\u9650\u3092\u514b\u670d\u3067\u304d\u307e\u3059\u3002\n\u3053\u306e\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u307b\u3068\u3093\u3069\u304cCountVectorizer\u3068\u4e92\u63db\u6027\u306e\u3042\u308b\u30c8\u30e9\u30f3\u30b9\u30af\u30e9\u30b9\u306e[HashingVectorizer](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.HashingVectorizer.html#sklearn.feature_extraction.text.HashingVectorizer)\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002 HashingVectorizer\u306f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u305d\u308c\u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n```py\n>>> from sklearn.feature_extraction.text import HashingVectorizer\n>>> hv = HashingVectorizer(n_features=10)\n>>> hv.transform(corpus)\n...                                \n<4x10 sparse matrix of type '<... 'numpy.float64'>'\n    with 16 stored elements in Compressed Sparse ... format>\n```\n\n\u30d9\u30af\u30c8\u30eb\u51fa\u529b\u3067\u306f\u300116\u500b\u306e\u975e\u30bc\u30ed\u306e\u7279\u5fb4\u30c8\u30fc\u30af\u30f3\u304c\u62bd\u51fa\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u540c\u3058\u73a9\u5177\u30b3\u30fc\u30d1\u30b9\u306eCountVectorizer\u306b\u3088\u3063\u3066\u4ee5\u524d\u306b\u62bd\u51fa\u3055\u308c\u305f19\u500b\u306e\u975e\u30bc\u30ed\u3088\u308a\u3082\u5c0f\u3055\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u4e0d\u4e00\u81f4\u306f\u3001`n_features`\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5024\u304c\u4f4e\u3044\u305f\u3081\u3001\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u306e\u885d\u7a81\u306b\u8d77\u56e0\u3057\u307e\u3059\u3002\n\u73fe\u5b9f\u4e16\u754c\u306e\u8a2d\u5b9a\u3067\u306f\u3001`n_features`\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306e`2 ** 20`\uff08\u7d04100\u4e07\u306e\u53ef\u80fd\u306a\u6a5f\u80fd\uff09\u306e\u307e\u307e\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30e1\u30e2\u30ea\u3084\u30c0\u30a6\u30f3\u30b9\u30c8\u30ea\u30fc\u30e0\u30e2\u30c7\u30eb\u306e\u30b5\u30a4\u30ba\u304c\u554f\u984c\u306e\u5834\u5408\u306f\u3001`2^18`\u306a\u3069\u306e\u3088\u308a\u4f4e\u3044\u5024\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3067\u3001\u4e00\u822c\u7684\u306a\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u30bf\u30b9\u30af\u306b\u3042\u307e\u308a\u306b\u591a\u304f\u306e\u8ffd\u52a0\u306e\u885d\u7a81\u3092\u5c0e\u5165\u3057\u306a\u304f\u3066\u3082\u5f79\u7acb\u3061\u307e\u3059\u3002\n\u6b21\u5143\u6570\u306f\u3001CSR\u884c\u5217\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08`LinearSVC\uff08dual = True\uff09`\u3001`Perceptron`\u3001`SGDClassifier`\u3001`PassiveAggressive`\uff09\u306eCPU\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u6642\u9593\u306b\u306f\u5f71\u97ff\u3057\u307e\u305b\u3093\u304c\u3001CSC\u30de\u30c8\u30ea\u30af\u30b9\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\uff08`LinearSVC(dual=False)`, `Lasso()`\u306a\u3069\uff09\u306b\u306f\u5f71\u97ff\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u3082\u3046\u4e00\u5ea6\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff1a\n\n```py\n>>> hv = HashingVectorizer()\n>>> hv.transform(corpus)\n...                               \n<4x1048576 sparse matrix of type '<... 'numpy.float64'>'\n    with 19 stored elements in Compressed Sparse ... format>\n>>>\n```\n\n\u79c1\u305f\u3061\u306f\u3082\u306f\u3084\u885d\u7a81\u3092\u5f97\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3053\u308c\u306f\u51fa\u529b\u7a7a\u9593\u306e\u3088\u308a\u5927\u304d\u306a\u6b21\u5143\u6027\u3092\u72a0\u7272\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u3053\u3053\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b19\u4ee5\u5916\u306e\u7528\u8a9e\u306f\u3001\u4f9d\u7136\u3068\u3057\u3066\u4e92\u3044\u306b\u885d\u7a81\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\nHashingVectorizer\u306b\u306f\u3001\u6b21\u306e\u5236\u9650\u3082\u3042\u308a\u307e\u3059\u3002\n\n - \u30de\u30c3\u30d4\u30f3\u30b0\u3092\u5b9f\u884c\u3059\u308b\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u306e\u4e00\u65b9\u5411\u306e\u6027\u8cea\u306e\u305f\u3081\u3001\u30e2\u30c7\u30eb\u3092\u9006\u5909\u63db\u3057\u305f\u308a\uff08`inverse_transform`\u30e1\u30bd\u30c3\u30c9\u306a\u3057\uff09\u3001\u7279\u5fb4\u91cf\u306e\u5143\u306e\u6587\u5b57\u5217\u8868\u73fe\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n - \u30e2\u30c7\u30eb\u304c\u72b6\u614b\u3092\u6301\u305f\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3001IDF\u306e\u91cd\u307f\u4ed8\u3051\u306f\u884c\u308f\u308c\u307e\u305b\u3093\u3002 [TfidfTransformer](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html#sklearn.feature_extraction.text.TfidfTransformer)\u306f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### 4.2.3.9. HashingVectorizer\u3067\u30a2\u30a6\u30c8\u30aa\u30d6\u30b3\u30a2\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u5b9f\u884c\u3059\u308b\n\n[HashingVectorizer](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.HashingVectorizer.html#sklearn.feature_extraction.text.HashingVectorizer) \u3092\u4f7f\u7528\u3059\u308b\u8208\u5473\u6df1\u3044\u958b\u767a\u306f\u3001Out-of-Core\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u5b9f\u884c\u3059\u308b\u80fd\u529b\u3067\u3059\u3002\u3064\u307e\u308a\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u30e1\u30a4\u30f3\u30e1\u30e2\u30ea\u306b\u53ce\u307e\u3089\u306a\u3044\u30c7\u30fc\u30bf\u304b\u3089\u5b66\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nOut-of-Core\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u5b9f\u88c5\u3059\u308b\u6226\u7565\u306f\u3001\u30c7\u30fc\u30bf\u3092\u30df\u30cb\u30d0\u30c3\u30c1\u3067\u63a8\u5b9a\u5668\u306b\u6d41\u3057\u8fbc\u3080\u3053\u3068\u3067\u3059\u3002\u5404\u30df\u30cb\u30d0\u30c3\u30c1\u306f\u3001\u63a8\u5b9a\u5668\u306e\u5165\u529b\u7a7a\u9593\u304c\u5e38\u306b\u540c\u3058\u6b21\u5143\u3092\u6301\u3064\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u305f\u3081\u306b\u3001HashingVectorizer\u3092\u4f7f\u7528\u3057\u3066\u30d9\u30af\u30c8\u30eb\u5316\u3055\u308c\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u3044\u3064\u3067\u3082\u4f7f\u7528\u3055\u308c\u308b\u30e1\u30e2\u30ea\u306e\u91cf\u306f\u3001\u30df\u30cb\u30d0\u30c3\u30c1\u306e\u30b5\u30a4\u30ba\u306b\u3088\u3063\u3066\u5236\u9650\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u4f7f\u7528\u3057\u3066\u53d6\u308a\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u30c7\u30fc\u30bf\u306e\u91cf\u306b\u5236\u9650\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u5b9f\u7528\u7684\u306a\u89b3\u70b9\u304b\u3089\u3001\u5b66\u7fd2\u6642\u9593\u306f\u3057\u3070\u3057\u3070\u30bf\u30b9\u30af\u306b\u8cbb\u3084\u3059CPU\u6642\u9593\u306b\u3088\u3063\u3066\u5236\u9650\u3055\u308c\u307e\u3059\u3002\n\u30c6\u30ad\u30b9\u30c8\u5206\u985e\u30bf\u30b9\u30af\u306b\u304a\u3051\u308bOut-of-Core\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306e\u672c\u683c\u7684\u306a\u4f8b\u306b\u3064\u3044\u3066\u306f\u3001[\u30c6\u30ad\u30b9\u30c8\u6587\u66f8\u306eOut-of-Core\u5206\u985e](http://scikit-learn.org/stable/auto_examples/applications/plot_out_of_core_classification.html#sphx-glr-auto-examples-applications-plot-out-of-core-classification-py) \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n### 4.2.3.10. \u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u30af\u30e9\u30b9\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\n\ncallable\u3092vectorizer\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3059\u3053\u3068\u3067\u3001\u52d5\u4f5c\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```py\n>>> def my_tokenizer(s):\n...     return s.split()\n...\n>>> vectorizer = CountVectorizer(tokenizer=my_tokenizer)\n>>> vectorizer.build_analyzer()(u\"Some... punctuation!\") == (\n...     ['some...', 'punctuation!'])\nTrue\n```\n\n\u5177\u4f53\u7684\u306b\u306f\u3001\n\n - `preprocessor`\uff1a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u5168\u4f53\u3092\u5165\u529b\u3068\u3057\u3066\uff08\u5358\u4e00\u306e\u6587\u5b57\u5217\u3068\u3057\u3066\uff09\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u3001\u5909\u63db\u3055\u308c\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8fd4\u3059callable\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\u3053\u308c\u306f\u3001HTML\u30bf\u30b0\u3092\u524a\u9664\u3057\u305f\u308a\u3001\u6587\u66f8\u5168\u4f53\u3092\u5c0f\u6587\u5b57\u306b\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n - `tokenizer`\uff1a\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u304b\u3089\u306e\u51fa\u529b\u3092\u30c8\u30fc\u30af\u30f3\u306b\u5206\u5272\u3057\u3001\u305d\u308c\u3089\u306e\u30ea\u30b9\u30c8\u3092\u8fd4\u3059callable\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\n - `analyzer`\uff1a\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u3068\u30c8\u30fc\u30af\u30ca\u30a4\u30b6\u3092\u7f6e\u304d\u63db\u3048\u308bcallable\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30a2\u30ca\u30e9\u30a4\u30b6\u306f\u3059\u3079\u3066\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u3068\u30c8\u30fc\u30af\u30ca\u30a4\u30b6\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u304c\u3001\u30ab\u30b9\u30bf\u30e0\u30a2\u30ca\u30e9\u30a4\u30b6\u306f\u3053\u308c\u3092\u30b9\u30ad\u30c3\u30d7\u3057\u307e\u3059\u3002 N\u30b0\u30e9\u30e0\u62bd\u51fa\u304a\u3088\u3073\u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306f\u30a2\u30ca\u30e9\u30a4\u30b6\u30ec\u30d9\u30eb\u3067\u884c\u308f\u308c\u308b\u305f\u3081\u3001\u30ab\u30b9\u30bf\u30e0\u30a2\u30ca\u30e9\u30a4\u30b6\u306f\u3053\u308c\u3089\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u518d\u73fe\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\uff08Lucene\u30e6\u30fc\u30b6\u30fc\u306f\u3053\u308c\u3089\u306e\u540d\u524d\u3092\u8a8d\u8b58\u3059\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001scikit-learn\u306e\u6982\u5ff5\u306fLucene\u306e\u6982\u5ff5\u306b\u4e00\u5bfe\u4e00\u3067\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff09\u3002\n\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u3001\u30c8\u30fc\u30af\u30ca\u30a4\u30b6\u304a\u3088\u3073\u30a2\u30ca\u30e9\u30a4\u30b6\u304c\u30e2\u30c7\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a8d\u8b58\u3067\u304d\u308b\u3088\u3046\u3001\u30ab\u30b9\u30bf\u30e0\u95a2\u6570\u3092\u6e21\u3059\u4ee3\u308f\u308a\u306b\u3001\u30af\u30e9\u30b9\u304b\u3089\u6d3e\u751f\u3057\u3066`build_preprocessor`\u3001`build_tokenizer` \u304a\u3088\u3073 `build_analyzer` \u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3044\u304f\u3064\u304b\u306e\u30d2\u30f3\u30c8\u3068\u79d8\u8a23\uff1a\n\n - \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u5916\u90e8\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3088\u3063\u3066\u4e8b\u524d\u306b\u30c8\u30fc\u30af\u30f3\u5316\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u7a7a\u767d\u3067\u533a\u5207\u3089\u308c\u305f\u30c8\u30fc\u30af\u30f3\u3092\u30d5\u30a1\u30a4\u30eb\uff08\u307e\u305f\u306f\u6587\u5b57\u5217\uff09\u306b\u683c\u7d0d\u3057\u3001`analyzer = str.split` \u3092\u6e21\u3057\u307e\u3059\n - \u30b9\u30c6\u30df\u30f3\u30b0\u3001\u5b57\u5f62\u5206\u5272\u3001\u8907\u5408\u5206\u5272\u3001\u54c1\u8a5e\u306b\u57fa\u3065\u304f\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306a\u3069\u306e\u7d20\u6674\u3089\u3057\u3044\u30c8\u30fc\u30af\u30f3\u30ec\u30d9\u30eb\u89e3\u6790\u306f\u3001scikit-learning\u30b3\u30fc\u30c9\u30d9\u30fc\u30b9\u306b\u306f\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u30c8\u30fc\u30af\u30ca\u30a4\u30b6\u307e\u305f\u306f\u30a2\u30ca\u30e9\u30a4\u30b6\u306e\u3044\u305a\u308c\u304b\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u8ffd\u52a0\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u306b [NLTK](http://www.nltk.org/) \u3092\u4f7f\u3063\u305f\u30c8\u30fc\u30af\u30ca\u30a4\u30b6\u3068\u30ec\u30de\u30bf\u30a4\u30b6\u3092\u5099\u3048\u305fCountVectorizer\u304c\u3042\u308a\u307e\u3059\uff1a\n\n```py\n>>> from nltk import word_tokenize          \n>>> from nltk.stem import WordNetLemmatizer \n>>> class LemmaTokenizer(object):\n...     def __init__(self):\n...         self.wnl = WordNetLemmatizer()\n...     def __call__(self, doc):\n...         return [self.wnl.lemmatize(t) for t in word_tokenize(doc)]\n...\n>>> vect = CountVectorizer(tokenizer=LemmaTokenizer()) \n```\n\n\uff08\u3053\u308c\u306f\u53e5\u8aad\u70b9\u3092\u9664\u5916\u3057\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff09\u3002\n\n\u30d9\u30af\u30bf\u30e9\u30a4\u30b6\u30fc\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306f\u3001\u7a7a\u767d\u306a\u3069\u306e\u660e\u793a\u7684\u306a\u5358\u8a9e\u533a\u5207\u308a\u6587\u5b57\u3092\u4f7f\u7528\u3057\u306a\u3044\u30a2\u30b8\u30a2\u8a00\u8a9e\u3092\u51e6\u7406\u3059\u308b\u5834\u5408\u306b\u3082\u5f79\u7acb\u3061\u307e\u3059\u3002\n\n## 4.2.4. \u753b\u50cf\u7279\u5fb4\u62bd\u51fa\n\n### 4.2.4.1. \u30d1\u30c3\u30c1\u62bd\u51fa\n\n[extract_patches_2](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.image.extract_patches_2d.html#sklearn.feature_extraction.image.extract_patches_2d) \u95a2\u6570\u306f\u30012\u6b21\u5143\u914d\u5217\u3068\u3057\u3066\u683c\u7d0d\u3055\u308c\u305f\u753b\u50cf\u3001\u307e\u305f\u306f3\u756a\u76ee\u306e\u8ef8\u306b\u6cbf\u3063\u3066\u8272\u60c5\u5831\u3092\u6301\u30643\u6b21\u5143\u30d1\u30c3\u30c1\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002\u3059\u3079\u3066\u306e\u30d1\u30c3\u30c1\u304b\u3089\u30a4\u30e1\u30fc\u30b8\u3092\u518d\u69cb\u7bc9\u3059\u308b\u306b\u306f\u3001 [reconstruct_from_patches_2d](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.image.reconstruct_from_patches_2d.html#sklearn.feature_extraction.image.reconstruct_from_patches_2d) \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u30013\u3064\u306e\u30ab\u30e9\u30fc\u30c1\u30e3\u30cd\u30eb\uff08\u4f8b\u3048\u3070\u3001RGB\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff09\u3092\u6709\u3059\u308b4\u00d74\u30d4\u30af\u30bb\u30eb\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u3002\n\n```py\n>>> import numpy as np\n>>> from sklearn.feature_extraction import image\n\n>>> one_image = np.arange(4 * 4 * 3).reshape((4, 4, 3))\n>>> one_image[:, :, 0]  # R channel of a fake RGB picture\narray([[ 0,  3,  6,  9],\n       [12, 15, 18, 21],\n       [24, 27, 30, 33],\n       [36, 39, 42, 45]])\n\n>>> patches = image.extract_patches_2d(one_image, (2, 2), max_patches=2,\n...     random_state=0)\n>>> patches.shape\n(2, 2, 2, 3)\n>>> patches[:, :, :, 0]\narray([[[ 0,  3],\n        [12, 15]],\n\n       [[15, 18],\n        [27, 30]]])\n>>> patches = image.extract_patches_2d(one_image, (2, 2))\n>>> patches.shape\n(9, 2, 2, 3)\n>>> patches[4, :, :, 0]\narray([[15, 18],\n       [27, 30]])\n```\n\n\u30aa\u30fc\u30d0\u30fc\u30e9\u30c3\u30d7\u9818\u57df\u3092\u5e73\u5747\u5316\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30d1\u30c3\u30c1\u304b\u3089\u5143\u306e\u753b\u50cf\u3092\u518d\u69cb\u6210\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u3087\u3046\u3002\n\n```py\n>>> reconstructed = image.reconstruct_from_patches_2d(patches, (4, 4, 3))\n>>> np.testing.assert_array_equal(one_image, reconstructed)\n```\n\n[PatchExtractor](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.image.PatchExtractor.html#sklearn.feature_extraction.image.PatchExtractor) \u30af\u30e9\u30b9\u306fextract_patches_2d\u3068\u540c\u3058\u65b9\u6cd5\u3067\u52d5\u4f5c\u3057\u307e\u3059\u304c\u3001\u8907\u6570\u306e\u753b\u50cf\u3092\u5165\u529b\u3068\u3057\u3066\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u63a8\u5b9a\u5668\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3067\u4f7f\u7528\u3067\u304d\u307e\u3059.\n\n```py\n>>> five_images = np.arange(5 * 4 * 4 * 3).reshape(5, 4, 4, 3)\n>>> patches = image.PatchExtractor((2, 2)).transform(five_images)\n>>> patches.shape\n(45, 2, 2, 3)\n```\n\n### 4.2.4.2. \u753b\u50cf\u306e\u63a5\u7d9a\u6027\u30b0\u30e9\u30d5\n\nscikit-learn\u306e\u3044\u304f\u3064\u304b\u306e\u63a8\u5b9a\u5024\u306f\u3001\u7279\u5fb4\u91cf\u307e\u305f\u306f\u30b5\u30f3\u30d7\u30eb\u9593\u306e\u63a5\u7d9a\u60c5\u5831\u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30a6\u30a9\u30fc\u30c9\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\uff08[\u968e\u5c64\u7684\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0](http://scikit-learn.org/stable/modules/clustering.html#hierarchical-clustering)\uff09\u306f\u3001\u753b\u50cf\u306e\u96a3\u63a5\u3059\u308b\u30d4\u30af\u30bb\u30eb\u306e\u307f\u3092\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u3057\u305f\u304c\u3063\u3066\u3001\u9023\u7d9a\u3057\u305f\u30d1\u30c3\u30c1\u3092\u5f62\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n![../_images/sphx_glr_plot_face_ward_segmentation_0011.png](http://scikit-learn.org/stable/_images/sphx_glr_plot_face_ward_segmentation_0011.png)\n\n\u3053\u306e\u76ee\u7684\u306e\u305f\u3081\u306b\u3001\u63a8\u5b9a\u5668\u306f\u3069\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u793a\u3059\u300c\u63a5\u7d9a\u6027\u300d\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3002\n\u95a2\u6570 [img_to_graph](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.image.img_to_graph.html#sklearn.feature_extraction.image.img_to_graph) \u306f\u30012D\u307e\u305f\u306f3D\u753b\u50cf\u304b\u3089\u305d\u306e\u3088\u3046\u306a\u884c\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002\u540c\u69d8\u306b\u3001 [grid_to_graph](http://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.image.grid_to_graph.html#sklearn.feature_extraction.image.grid_to_graph) \u306f\u3001\u3053\u308c\u3089\u306e\u753b\u50cf\u306e\u5f62\u72b6\u304c\u4e0e\u3048\u3089\u308c\u305f\u753b\u50cf\u306e\u305f\u3081\u306e\u9023\u7d50\u884c\u5217\u3092\u69cb\u7bc9\u3059\u308b\u3002\n\u3053\u308c\u3089\u306e\u884c\u5217\u306f\u3001\u30a6\u30a9\u30fc\u30c9\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\uff08\u968e\u5c64\u7684\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\uff09\u306a\u3069\u306e\u63a5\u7d9a\u6027\u60c5\u5831\u3092\u4f7f\u7528\u3059\u308b\u63a8\u5b9a\u5668\u306b\u63a5\u7d9a\u6027\u3092\u8ab2\u3059\u305f\u3081\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u4e8b\u524d\u8a08\u7b97\u3055\u308c\u305f\u30ab\u30fc\u30cd\u30eb\u307e\u305f\u306f\u985e\u4f3c\u6027\u884c\u5217\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306b\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\n - \u4f8b\n    - [\u30e9\u30af\u30ed\u30fc\u30f3\u9854\u753b\u50cf\u4e0a\u306e\u69cb\u9020\u5316\u30ef\u30fc\u30c9\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u30c7\u30e2](http://scikit-learn.org/stable/auto_examples/cluster/plot_face_ward_segmentation.html#sphx-glr-auto-examples-cluster-plot-face-ward-segmentation-py)\n    - [\u753b\u50cf\u30bb\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e\u30b9\u30da\u30af\u30c8\u30eb\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0](http://scikit-learn.org/stable/auto_examples/cluster/plot_segmentation_toy.html#sphx-glr-auto-examples-cluster-plot-segmentation-toy-py)\n    - [\u30d5\u30a3\u30fc\u30c1\u30e3\u30a2\u30b0\u30ed\u30e1\u30ec\u30fc\u30b7\u30e7\u30f3\u5bfe\u4e00\u5909\u91cf\u9078\u629e](http://scikit-learn.org/stable/auto_examples/cluster/plot_feature_agglomeration_vs_univariate_selection.html#sphx-glr-auto-examples-cluster-plot-feature-agglomeration-vs-univariate-selection-py)\n\n\u00a92010 - 2016\u3001scikit-learn developers\uff08BSD\u30e9\u30a4\u30bb\u30f3\u30b9\uff09\u3002\n", "tags": ["scikit-learn", "\u6a5f\u68b0\u5b66\u7fd2", "Python", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406"]}