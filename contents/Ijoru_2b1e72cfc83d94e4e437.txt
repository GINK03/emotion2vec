{"context": "\u3055\u3066\u3001\u4eca\u5e74\u306eAdvent Calendar\u308213\u65e5\u76ee\u3002\n\u3061\u3087\u3046\u3069\u6298\u308a\u8fd4\u3057\u5730\u70b9\u3067\u3059\u306d\u3002\n\u62c5\u5f53\u65e5\u3092\u5fd8\u308c\u3066\u96fb\u5b50\u56de\u8def\u306e\u52c9\u5f37\u3070\u3063\u304b\u308a\u3057\u3066\u305f\u306e\u3067\u3001\u4ee5\u524d\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5f15\u3063\u5f35\u308a\u51fa\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\u30b2\u30d5\u30f3\u30b2\u30d5\u30f3\u3002\u3048\u30fc\u3068\u3002\n\u4eca\u56de\u306f\u96fb\u5b50\u5de5\u4f5c\u306e\u904a\u3073\u8a18\u4e8b\u304b\u3089\u4e00\u8ee2\u3001Unity\u306e\u5b9f\u7528\u7684\u306a\u30cd\u30bf\u3067\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nUnity UI\u3067\u30ea\u30b9\u30c8\u30d3\u30e5\u30fc\u3092\u4f5c\u308d\u3046\u3068\u3057\u305f\u6642\u3001\u307f\u3093\u306a\u30cf\u30de\u308b\u843d\u3068\u3057\u7a74\nUnity UI(uGUI)\u3067\u306f\u3001ScrollRect\u3092\u4f7f\u3046\u3068\u30ea\u30b9\u30c8\u30d3\u30e5\u30fc\u7684\u306a\u3082\u306e\u304c\u4f5c\u308c\u307e\u3059\u3002\n\u305f\u3060\u3001ScrollRect\u306f\u3042\u304f\u307e\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u5236\u5fa1\u3059\u308bscript\u3067\u3059\u306e\u3067\u3001\u666e\u901a\u306b\u4f7f\u3046\u3068\u30ea\u30b9\u30c8\u5185\u306e\u8981\u7d20\uff08\u4eca\u56de\u306f\u30bb\u30eb\u3068\u547c\u3073\u307e\u3059\uff09\u306f\u5168\u90e8\u5148\u306b\u751f\u6210\u3057\u3066\u653e\u308a\u8fbc\u3093\u3067\u304a\u304f\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001\u30bb\u30eb\u304c\u5897\u3048\u308b\u3068\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u601d\u3044\u5207\u308a\u5f71\u97ff\u3092\u53ca\u307c\u3057\u307e\u3059\u3002\n\u30bb\u30eb\u6570\u767e\u500b\u304f\u3089\u3044\u306b\u306a\u308b\u3068\u521d\u671f\u5316\uff08Instantiate\uff09\u306f\u6fc0\u9045\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u64cd\u4f5c\u3082\u30ab\u30af\u3064\u3044\u3061\u3083\u3063\u305f\u308a\u3059\u308b\u308f\u3051\u3067\u3002\n\n\u3069\u3046\u3084\u3063\u3066\u89e3\u6c7a\u3059\u308b\uff1f\n\u304b\u306e\u30c6\u30e9\u30b7\u30e5\u30fc\u30eb\u30a6\u30a7\u30a2\u69d8\u304c\u6b63\u89e3\u3092\u8a18\u4e8b\u306b\u3057\u3066\u304f\u3060\u3055\u3063\u3066\u3044\u307e\u3059\u3002\uff08\u3044\u3064\u3082\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u304a\u308a\u307e\u3059m(_ _)m\uff09\nhttp://tsubakit1.hateblo.jp/entry/2015/01/21/233000\n\u753b\u9762\u5916\u306b\u51fa\u305f\u30bb\u30eb\u3092\u518d\u5229\u7528\u3059\u308b\u5f62\u3002\n\u30a6\u30f3\u3001\u3053\u308c\u3067\u3059\u3088\u3053\u308c\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4eca\u56de\u306e\u8a18\u4e8b\u306f\u304a\u3057\u307e\u3044\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4eca\u56de\u306f\u2191\u306escript\u3092\u30ab\u30b9\u30bf\u30e0\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\uff08\u307b\u307c\u539f\u578b\u3092\u7559\u3081\u3066\u3044\u307e\u305b\u3093\u3002\u3002\uff57\uff09\n\n\u6c4e\u7528\u7684\u304b\u3064\u4f7f\u3044\u3084\u3059\u3044\u5f62\u306b\u30ab\u30b9\u30bf\u30e0\u3057\u3066\u307f\u305f\n\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306f\u3001Android\u306eListView/iOS\u306eUITableView\u3092\u76ee\u6307\u3057\u307e\u3057\u305f\u3002\n\u3069\u3063\u3061\u304b\u3063\u3066\u8a00\u3046\u3068Android\u306b\u8fd1\u3044\u304b\u3082\uff1f\n\n\u30bd\u30fc\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\n\u2193\u306fScrollRect\u306eContent\u306b\u7d10\u4ed8\u3051\u308bscript\u3002\n\u5916\u90e8\u304b\u3089\u30b3\u30fc\u30eb\u3067\u304d\u308b\u306e\u306f\u521d\u671f\u5316\u7528\u306eInitialize\u30e1\u30bd\u30c3\u30c9\u3068\u3001\u30c7\u30fc\u30bf\u304c\u5909\u308f\u3063\u305f\u6642\u306e\u518d\u63cf\u753b\u7528Reflesh\u30e1\u30bd\u30c3\u30c9\u306e\u307f\u3067\u3059\u3002\n\u3042\u3068\u306fPadding\u3068\u304b\u30b9\u30af\u30ed\u30fc\u30eb\u65b9\u5411\u3068\u304b\u306e\u57fa\u672c\u7684\u306a\u8a2d\u5b9a\u306e\u307f\u3002\n\nRecyclableItemsScrollContent.cs\nusing UnityEngine;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine.UI;\nusing System.Linq;\nusing UnityEngine.EventSystems;\nusing System;\n\npublic class RecyclableItemsScrollContent : UIBehaviour\n{\n    public Padding padding;\n    public int spacing;\n    public Direction direction;\n\n    [SerializeField, Range(0, 20)]\n    int instantateItemCount = 7;\n\n    List<RectTransform> items = new List<RectTransform>();\n    float diffPreFramePosition = 0f;\n    int currentItemNo = 0;\n    List<float> positionCaches = new List<float>();\n    IRecyclableItemsScrollContentDataProvider dataProvider;\n\n    public enum Direction\n    {\n        Vertical,\n        Horizontal,\n    }\n\n    RectTransform rectTransform;\n\n    protected RectTransform RectTransform\n    {\n        get\n        {\n            if (rectTransform == null)\n            {\n                rectTransform = GetComponent<RectTransform>();\n            }\n            return rectTransform;\n        }\n    }\n\n    float AnchoredPosition\n    {\n        get\n        {\n            return direction == Direction.Vertical ? \n                -RectTransform.anchoredPosition.y :\n                RectTransform.anchoredPosition.x;\n        }\n    }\n\n    protected override void Start()\n    {\n        var scrollRect = GetComponentInParent<ScrollRect>();\n        scrollRect.horizontal = direction == Direction.Horizontal;\n        scrollRect.vertical = direction == Direction.Vertical;\n        scrollRect.content = RectTransform;\n    }\n\n    void Update()\n    {\n        if (null == dataProvider)\n        {\n            return;\n        }\n\n        while (true)\n        {\n            var itemScale = GetItemScale(currentItemNo);\n            if (itemScale <= 0 || AnchoredPosition - diffPreFramePosition >= -(itemScale + spacing) * 2)\n            {\n                break;\n            }\n\n            var item = items[0];\n            items.RemoveAt(0);\n            diffPreFramePosition -= itemScale + spacing;\n            items.Add(GetItem(currentItemNo + instantateItemCount, item));\n\n            currentItemNo++;\n        }\n\n        while (true)\n        {\n            var itemScale = GetItemScale(currentItemNo + instantateItemCount - 1);\n            if (itemScale <= 0 || AnchoredPosition - diffPreFramePosition <= -(itemScale + spacing) * 1)\n            {\n                break;\n            }\n\n            var item = items[items.Count - 1];\n            items.RemoveAt(items.Count - 1);\n\n            currentItemNo--;\n\n            diffPreFramePosition += GetItemScale(currentItemNo) + spacing;\n            items.Insert(0, GetItem(currentItemNo, item));\n        }\n    }\n\n    public void Initialize(IRecyclableItemsScrollContentDataProvider dataProvider)\n    {\n        this.dataProvider = dataProvider;\n\n        if (items.Count == 0)\n        {\n            for (var i = 0; i < instantateItemCount; i++)\n            {\n                items.Add(GetItem(i, null));\n            }\n        }\n        else\n        {\n            positionCaches.Clear();\n            for (var i = 0; i < instantateItemCount; i++)\n            {\n                var item = items[0];\n                items.RemoveAt(0);\n                items.Add(GetItem(currentItemNo + i, item));\n            }\n        }\n\n        var rectTransform = GetComponent<RectTransform>();\n        var delta = rectTransform.sizeDelta;\n        if (direction == Direction.Vertical)\n        {\n            delta.y = padding.top + padding.bottom;\n            for (var i = 0; i < dataProvider.DataCount; i++)\n            {\n                delta.y += GetItemScale(i) + spacing;\n            }\n        }\n        else\n        {\n            delta.x = padding.left + padding.right;\n            for (var i = 0; i < dataProvider.DataCount; i++)\n            {\n                delta.x += GetItemScale(i) + spacing;\n            }\n        }\n        rectTransform.sizeDelta = delta;\n    }\n\n    float GetItemScale(int index)\n    {\n        if (null == dataProvider || dataProvider.DataCount == 0)\n        {\n            return 0;\n        }\n        return dataProvider.GetItemScale(Math.Max(0, Math.Min(index, dataProvider.DataCount - 1)));\n    }\n\n    RectTransform GetItem(int index, RectTransform recyclableItem)\n    {\n        if (null == dataProvider || index < 0 || dataProvider.DataCount <= index)\n        {\n            if (null != recyclableItem)\n            {\n                recyclableItem.gameObject.SetActive(false);\n            }\n            return recyclableItem;\n        }\n        var item = dataProvider.GetItem(index, recyclableItem);\n        if (item != recyclableItem)\n        {\n            item.SetParent(transform, false);\n        }\n        item.anchoredPosition = GetPosition(index);\n        item.gameObject.SetActive(true);\n        return item;\n    }\n\n    public void Reflesh()\n    {\n        Initialize(dataProvider);\n    }\n\n    float GetPositionCache(int index)\n    {\n        for (var i = positionCaches.Count; i <= index; i++)\n        {\n            positionCaches.Add(i == 0 ? (direction == Direction.Vertical ? padding.top : padding.left) : (positionCaches[i - 1] + GetItemScale(i - 1) + spacing));\n        }\n        return positionCaches[index];\n    }\n\n    Vector2 GetPosition(int index)\n    {\n        if (index < 0)\n        {\n            return Vector2.zero;\n        }\n        return direction == Direction.Vertical ? new Vector2(0, -GetPositionCache(index)) : new Vector2(GetPositionCache(index), 0);\n    }\n\n    [System.Serializable]\n    public class Padding\n    {\n        public int top = 0;\n        public int right = 0;\n        public int bottom = 0;\n        public int left = 0;\n    }\n}\n\n\n\u7d9a\u3044\u3066\u3001\u30ea\u30b9\u30c8\u30d3\u30e5\u30fc\u306e\u30c7\u30fc\u30bf\u30d7\u30ed\u30d0\u30a4\u30c0\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\u30bb\u30eb\u306e\u500b\u6570\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3001\u30bb\u30eb\u306e\u9ad8\u3055or\u5e45\uff08ScrollRect\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u65b9\u5411\u306b\u3088\u308b\uff09\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3001\u30bb\u30eb\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u3067\u3001\u3068\u3063\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\nIRecyclableItemsScrollContentDataProvider.cs\nusing UnityEngine;\nusing System.Collections;\n\npublic interface IRecyclableItemsScrollContentDataProvider\n{\n    int DataCount { get; }\n\n    float GetItemScale(int index);\n\n    RectTransform GetItem(int index, RectTransform recyclableItem);\n}\n\n\n\n\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\u2191\u306escript\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\nContent\u3068Cell\u306e\u8a2d\u5b9a\u306b\u3061\u3087\u3044\u3068\u30af\u30bb\u304c\u3042\u308b\uff08\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u5411\u304d\u306b\u5fdc\u3058\u3066\u3001Anchors\u3068Pivot\u3092\u6b63\u3057\u304f\u6307\u5b9a\u3057\u306a\u3044\u3068\u8868\u793a\u304c\u304a\u304b\u3057\u304f\u306a\u308b\uff09\u306e\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/akako/recyclable-items-scroll-view-sample\n\u5b9f\u88c5\u306f\u4e0a\u8a18\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e SampleSimple \u30b7\u30fc\u30f3\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\u52d5\u304b\u3057\u3066\u307f\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n\n\n\u5fdc\u7528\u7de8\uff1a\u3072\u3068\u3064\u306e\u30ea\u30b9\u30c8\u5185\u3067\u8907\u6570\u7a2e\u985e\u306e\u30bb\u30eb\u3092\u518d\u5229\u7528\u3057\u3066\u307f\u308b\n\u4f8b\u3048\u3070\u3001\u30ea\u30b9\u30c8\u5185\u306b\u30ad\u30e3\u30e9\u60c5\u5831\u306e\u30bb\u30eb\u3068\u30a2\u30a4\u30c6\u30e0\u60c5\u5831\u306e\u30bb\u30eb\u3092\u6df7\u5728\u3055\u305b\u305f\u3044\u5834\u5408\u306a\u3069\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u30bb\u30eb\u5185\u306e\u3054\u304f\u4e00\u90e8\u304c\u5909\u308f\u308b\u3060\u3051\u3067\u3042\u308c\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u2191\u306e\u4f8b\u3088\u3046\u306b\u30bb\u30eb\u306e\u5185\u5bb9\u304c\u5168\u7136\u7570\u306a\u308b\u5834\u5408\u3001\u3072\u3068\u3064\u306escript\u4e0a\u306b\u7121\u7406\u3084\u308a\u8a70\u3081\u8fbc\u3080\u3068\u975e\u5e38\u306b\u6b8b\u5ff5\u306a\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u3093\u306a\u6642\u306f\u3001\u30c7\u30fc\u30bf\u30d7\u30ed\u30d0\u30a4\u30c0\u5074\u306e\u30af\u30e9\u30b9\u3067\u30bb\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30d7\u30fc\u30eb\u3057\u3066\u304a\u304f\u3088\u3046\u306b\u3059\u308c\u3070\u3001\u30bb\u30eb\u306e\u30af\u30e9\u30b9\u3092\u5206\u3051\u3064\u3064Instantiate\u306e\u56de\u6570\u3082\u6291\u3048\u305f\u5f62\u3067\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\uff08\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3042\u308b SampleMultipleTypeCell \u30b7\u30fc\u30f3\u3067\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\uff09\n\u52d5\u304b\u3057\u3066\u307f\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n\n\u3061\u3068\u8352\u524a\u308a\u3067\u3059\u304c\u3001\u826f\u3051\u308c\u3070\u4f7f\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u307e\u3057\uff01\n\u3055\u3066\u3001\u4eca\u5e74\u306eAdvent Calendar\u308213\u65e5\u76ee\u3002\n\u3061\u3087\u3046\u3069\u6298\u308a\u8fd4\u3057\u5730\u70b9\u3067\u3059\u306d\u3002\n\n~~\u62c5\u5f53\u65e5\u3092\u5fd8\u308c\u3066\u96fb\u5b50\u56de\u8def\u306e\u52c9\u5f37\u3070\u3063\u304b\u308a\u3057\u3066\u305f\u306e\u3067\u3001\u4ee5\u524d\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5f15\u3063\u5f35\u308a\u51fa\u3057\u3066\u304d\u307e\u3057\u305f\u3002~~\n\u30b2\u30d5\u30f3\u30b2\u30d5\u30f3\u3002\u3048\u30fc\u3068\u3002\n\u4eca\u56de\u306f\u96fb\u5b50\u5de5\u4f5c\u306e\u904a\u3073\u8a18\u4e8b\u304b\u3089\u4e00\u8ee2\u3001Unity\u306e\u5b9f\u7528\u7684\u306a\u30cd\u30bf\u3067\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n# Unity UI\u3067\u30ea\u30b9\u30c8\u30d3\u30e5\u30fc\u3092\u4f5c\u308d\u3046\u3068\u3057\u305f\u6642\u3001\u307f\u3093\u306a\u30cf\u30de\u308b\u843d\u3068\u3057\u7a74\nUnity UI(uGUI)\u3067\u306f\u3001ScrollRect\u3092\u4f7f\u3046\u3068\u30ea\u30b9\u30c8\u30d3\u30e5\u30fc\u7684\u306a\u3082\u306e\u304c\u4f5c\u308c\u307e\u3059\u3002\n\n\u305f\u3060\u3001ScrollRect\u306f\u3042\u304f\u307e\u3067\u30b9\u30af\u30ed\u30fc\u30eb\u3092\u5236\u5fa1\u3059\u308bscript\u3067\u3059\u306e\u3067\u3001\u666e\u901a\u306b\u4f7f\u3046\u3068\u30ea\u30b9\u30c8\u5185\u306e\u8981\u7d20\uff08\u4eca\u56de\u306f\u30bb\u30eb\u3068\u547c\u3073\u307e\u3059\uff09\u306f\u5168\u90e8\u5148\u306b\u751f\u6210\u3057\u3066\u653e\u308a\u8fbc\u3093\u3067\u304a\u304f\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001\u30bb\u30eb\u304c\u5897\u3048\u308b\u3068\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u601d\u3044\u5207\u308a\u5f71\u97ff\u3092\u53ca\u307c\u3057\u307e\u3059\u3002\n\n\u30bb\u30eb\u6570\u767e\u500b\u304f\u3089\u3044\u306b\u306a\u308b\u3068\u521d\u671f\u5316\uff08Instantiate\uff09\u306f\u6fc0\u9045\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u64cd\u4f5c\u3082\u30ab\u30af\u3064\u3044\u3061\u3083\u3063\u305f\u308a\u3059\u308b\u308f\u3051\u3067\u3002\n\n# \u3069\u3046\u3084\u3063\u3066\u89e3\u6c7a\u3059\u308b\uff1f\n\u304b\u306e\u30c6\u30e9\u30b7\u30e5\u30fc\u30eb\u30a6\u30a7\u30a2\u69d8\u304c\u6b63\u89e3\u3092\u8a18\u4e8b\u306b\u3057\u3066\u304f\u3060\u3055\u3063\u3066\u3044\u307e\u3059\u3002\uff08\u3044\u3064\u3082\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u304a\u308a\u307e\u3059m(_ _)m\uff09\nhttp://tsubakit1.hateblo.jp/entry/2015/01/21/233000\n\n\u753b\u9762\u5916\u306b\u51fa\u305f\u30bb\u30eb\u3092\u518d\u5229\u7528\u3059\u308b\u5f62\u3002\n\u30a6\u30f3\u3001\u3053\u308c\u3067\u3059\u3088\u3053\u308c\u3002\n\n~~\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4eca\u56de\u306e\u8a18\u4e8b\u306f\u304a\u3057\u307e\u3044\u3002~~\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4eca\u56de\u306f\u2191\u306escript\u3092\u30ab\u30b9\u30bf\u30e0\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\uff08\u307b\u307c\u539f\u578b\u3092\u7559\u3081\u3066\u3044\u307e\u305b\u3093\u3002\u3002\uff57\uff09\n\n# \u6c4e\u7528\u7684\u304b\u3064\u4f7f\u3044\u3084\u3059\u3044\u5f62\u306b\u30ab\u30b9\u30bf\u30e0\u3057\u3066\u307f\u305f\n\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306f\u3001Android\u306eListView/iOS\u306eUITableView\u3092\u76ee\u6307\u3057\u307e\u3057\u305f\u3002\n\u3069\u3063\u3061\u304b\u3063\u3066\u8a00\u3046\u3068Android\u306b\u8fd1\u3044\u304b\u3082\uff1f\n\n#\u30bd\u30fc\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\n\u2193\u306fScrollRect\u306eContent\u306b\u7d10\u4ed8\u3051\u308bscript\u3002\n\n\u5916\u90e8\u304b\u3089\u30b3\u30fc\u30eb\u3067\u304d\u308b\u306e\u306f\u521d\u671f\u5316\u7528\u306eInitialize\u30e1\u30bd\u30c3\u30c9\u3068\u3001\u30c7\u30fc\u30bf\u304c\u5909\u308f\u3063\u305f\u6642\u306e\u518d\u63cf\u753b\u7528Reflesh\u30e1\u30bd\u30c3\u30c9\u306e\u307f\u3067\u3059\u3002\n\u3042\u3068\u306fPadding\u3068\u304b\u30b9\u30af\u30ed\u30fc\u30eb\u65b9\u5411\u3068\u304b\u306e\u57fa\u672c\u7684\u306a\u8a2d\u5b9a\u306e\u307f\u3002\n\n```C#:RecyclableItemsScrollContent.cs\nusing UnityEngine;\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine.UI;\nusing System.Linq;\nusing UnityEngine.EventSystems;\nusing System;\n\npublic class RecyclableItemsScrollContent : UIBehaviour\n{\n    public Padding padding;\n    public int spacing;\n    public Direction direction;\n\n    [SerializeField, Range(0, 20)]\n    int instantateItemCount = 7;\n\n    List<RectTransform> items = new List<RectTransform>();\n    float diffPreFramePosition = 0f;\n    int currentItemNo = 0;\n    List<float> positionCaches = new List<float>();\n    IRecyclableItemsScrollContentDataProvider dataProvider;\n\n    public enum Direction\n    {\n        Vertical,\n        Horizontal,\n    }\n\n    RectTransform rectTransform;\n\n    protected RectTransform RectTransform\n    {\n        get\n        {\n            if (rectTransform == null)\n            {\n                rectTransform = GetComponent<RectTransform>();\n            }\n            return rectTransform;\n        }\n    }\n\n    float AnchoredPosition\n    {\n        get\n        {\n            return direction == Direction.Vertical ? \n                -RectTransform.anchoredPosition.y :\n                RectTransform.anchoredPosition.x;\n        }\n    }\n\n    protected override void Start()\n    {\n        var scrollRect = GetComponentInParent<ScrollRect>();\n        scrollRect.horizontal = direction == Direction.Horizontal;\n        scrollRect.vertical = direction == Direction.Vertical;\n        scrollRect.content = RectTransform;\n    }\n\n    void Update()\n    {\n        if (null == dataProvider)\n        {\n            return;\n        }\n\n        while (true)\n        {\n            var itemScale = GetItemScale(currentItemNo);\n            if (itemScale <= 0 || AnchoredPosition - diffPreFramePosition >= -(itemScale + spacing) * 2)\n            {\n                break;\n            }\n\n            var item = items[0];\n            items.RemoveAt(0);\n            diffPreFramePosition -= itemScale + spacing;\n            items.Add(GetItem(currentItemNo + instantateItemCount, item));\n\n            currentItemNo++;\n        }\n\n        while (true)\n        {\n            var itemScale = GetItemScale(currentItemNo + instantateItemCount - 1);\n            if (itemScale <= 0 || AnchoredPosition - diffPreFramePosition <= -(itemScale + spacing) * 1)\n            {\n                break;\n            }\n\n            var item = items[items.Count - 1];\n            items.RemoveAt(items.Count - 1);\n\n            currentItemNo--;\n\n            diffPreFramePosition += GetItemScale(currentItemNo) + spacing;\n            items.Insert(0, GetItem(currentItemNo, item));\n        }\n    }\n\n    public void Initialize(IRecyclableItemsScrollContentDataProvider dataProvider)\n    {\n        this.dataProvider = dataProvider;\n\n        if (items.Count == 0)\n        {\n            for (var i = 0; i < instantateItemCount; i++)\n            {\n                items.Add(GetItem(i, null));\n            }\n        }\n        else\n        {\n            positionCaches.Clear();\n            for (var i = 0; i < instantateItemCount; i++)\n            {\n                var item = items[0];\n                items.RemoveAt(0);\n                items.Add(GetItem(currentItemNo + i, item));\n            }\n        }\n\n        var rectTransform = GetComponent<RectTransform>();\n        var delta = rectTransform.sizeDelta;\n        if (direction == Direction.Vertical)\n        {\n            delta.y = padding.top + padding.bottom;\n            for (var i = 0; i < dataProvider.DataCount; i++)\n            {\n                delta.y += GetItemScale(i) + spacing;\n            }\n        }\n        else\n        {\n            delta.x = padding.left + padding.right;\n            for (var i = 0; i < dataProvider.DataCount; i++)\n            {\n                delta.x += GetItemScale(i) + spacing;\n            }\n        }\n        rectTransform.sizeDelta = delta;\n    }\n\n    float GetItemScale(int index)\n    {\n        if (null == dataProvider || dataProvider.DataCount == 0)\n        {\n            return 0;\n        }\n        return dataProvider.GetItemScale(Math.Max(0, Math.Min(index, dataProvider.DataCount - 1)));\n    }\n\n    RectTransform GetItem(int index, RectTransform recyclableItem)\n    {\n        if (null == dataProvider || index < 0 || dataProvider.DataCount <= index)\n        {\n            if (null != recyclableItem)\n            {\n                recyclableItem.gameObject.SetActive(false);\n            }\n            return recyclableItem;\n        }\n        var item = dataProvider.GetItem(index, recyclableItem);\n        if (item != recyclableItem)\n        {\n            item.SetParent(transform, false);\n        }\n        item.anchoredPosition = GetPosition(index);\n        item.gameObject.SetActive(true);\n        return item;\n    }\n\n    public void Reflesh()\n    {\n        Initialize(dataProvider);\n    }\n\n    float GetPositionCache(int index)\n    {\n        for (var i = positionCaches.Count; i <= index; i++)\n        {\n            positionCaches.Add(i == 0 ? (direction == Direction.Vertical ? padding.top : padding.left) : (positionCaches[i - 1] + GetItemScale(i - 1) + spacing));\n        }\n        return positionCaches[index];\n    }\n\n    Vector2 GetPosition(int index)\n    {\n        if (index < 0)\n        {\n            return Vector2.zero;\n        }\n        return direction == Direction.Vertical ? new Vector2(0, -GetPositionCache(index)) : new Vector2(GetPositionCache(index), 0);\n    }\n\n    [System.Serializable]\n    public class Padding\n    {\n        public int top = 0;\n        public int right = 0;\n        public int bottom = 0;\n        public int left = 0;\n    }\n}\n```\n\n\u7d9a\u3044\u3066\u3001\u30ea\u30b9\u30c8\u30d3\u30e5\u30fc\u306e\u30c7\u30fc\u30bf\u30d7\u30ed\u30d0\u30a4\u30c0\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\u30bb\u30eb\u306e\u500b\u6570\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3001\u30bb\u30eb\u306e\u9ad8\u3055or\u5e45\uff08ScrollRect\u306e\u30b9\u30af\u30ed\u30fc\u30eb\u65b9\u5411\u306b\u3088\u308b\uff09\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3001\u30bb\u30eb\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u3067\u3001\u3068\u3063\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n```C#:IRecyclableItemsScrollContentDataProvider.cs\nusing UnityEngine;\nusing System.Collections;\n\npublic interface IRecyclableItemsScrollContentDataProvider\n{\n    int DataCount { get; }\n\n    float GetItemScale(int index);\n\n    RectTransform GetItem(int index, RectTransform recyclableItem);\n}\n```\n\n#\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\u2191\u306escript\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\nContent\u3068Cell\u306e\u8a2d\u5b9a\u306b\u3061\u3087\u3044\u3068\u30af\u30bb\u304c\u3042\u308b\uff08\u30b9\u30af\u30ed\u30fc\u30eb\u306e\u5411\u304d\u306b\u5fdc\u3058\u3066\u3001Anchors\u3068Pivot\u3092\u6b63\u3057\u304f\u6307\u5b9a\u3057\u306a\u3044\u3068\u8868\u793a\u304c\u304a\u304b\u3057\u304f\u306a\u308b\uff09\u306e\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/akako/recyclable-items-scroll-view-sample\n\n\u5b9f\u88c5\u306f\u4e0a\u8a18\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e SampleSimple \u30b7\u30fc\u30f3\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u52d5\u304b\u3057\u3066\u307f\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n![scrollview.gif](https://qiita-image-store.s3.amazonaws.com/0/74903/3c922415-048c-71d7-3da9-f2000e4dd5b9.gif)\n\n#\u5fdc\u7528\u7de8\uff1a\u3072\u3068\u3064\u306e\u30ea\u30b9\u30c8\u5185\u3067\u8907\u6570\u7a2e\u985e\u306e\u30bb\u30eb\u3092\u518d\u5229\u7528\u3057\u3066\u307f\u308b\n\u4f8b\u3048\u3070\u3001\u30ea\u30b9\u30c8\u5185\u306b\u30ad\u30e3\u30e9\u60c5\u5831\u306e\u30bb\u30eb\u3068\u30a2\u30a4\u30c6\u30e0\u60c5\u5831\u306e\u30bb\u30eb\u3092\u6df7\u5728\u3055\u305b\u305f\u3044\u5834\u5408\u306a\u3069\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30bb\u30eb\u5185\u306e\u3054\u304f\u4e00\u90e8\u304c\u5909\u308f\u308b\u3060\u3051\u3067\u3042\u308c\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u2191\u306e\u4f8b\u3088\u3046\u306b\u30bb\u30eb\u306e\u5185\u5bb9\u304c\u5168\u7136\u7570\u306a\u308b\u5834\u5408\u3001\u3072\u3068\u3064\u306escript\u4e0a\u306b\u7121\u7406\u3084\u308a\u8a70\u3081\u8fbc\u3080\u3068\u975e\u5e38\u306b\u6b8b\u5ff5\u306a\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u305d\u3093\u306a\u6642\u306f\u3001\u30c7\u30fc\u30bf\u30d7\u30ed\u30d0\u30a4\u30c0\u5074\u306e\u30af\u30e9\u30b9\u3067\u30bb\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30d7\u30fc\u30eb\u3057\u3066\u304a\u304f\u3088\u3046\u306b\u3059\u308c\u3070\u3001\u30bb\u30eb\u306e\u30af\u30e9\u30b9\u3092\u5206\u3051\u3064\u3064Instantiate\u306e\u56de\u6570\u3082\u6291\u3048\u305f\u5f62\u3067\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\uff08\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3042\u308b SampleMultipleTypeCell \u30b7\u30fc\u30f3\u3067\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\uff09\n\n\u52d5\u304b\u3057\u3066\u307f\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n![scrollview2.gif](https://qiita-image-store.s3.amazonaws.com/0/74903/fceb5037-1b29-aaa9-b96c-d73b0c3ddc90.gif)\n\n\n\u3061\u3068\u8352\u524a\u308a\u3067\u3059\u304c\u3001\u826f\u3051\u308c\u3070\u4f7f\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u307e\u3057\uff01\n\n\n", "tags": ["Unity", "Unity3D", "uGUI", "C#"]}