{"context": " More than 1 year has passed since last update.F#\u306e\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306b\u5236\u7d04\u3092\u3064\u3051\u3066\u3001\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u4f7f\u3048\u308b\u578b\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305d\u308c\u3092\u4f7f\u3063\u3066\u3001\u69cb\u9020\u7684\u90e8\u5206\u578b(structural subtyping)\u307f\u305f\u3044\u306a\u52d5\u304d\u3092\u3055\u305b\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nstructuralSubtyping.fs\n// target : exec \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n// num : exec \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\u5024\nlet inline exec< ^T when ^T : (member exec : int -> string)> target num =\n    (^T : (member exec : int -> string) (target, num))\n\n// exec \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\ntype IExec =\n    abstract exec : int -> string\n\n// IExec \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u30af\u30e9\u30b9\ntype Hoge() =\n    interface IExec with\n        member this.exec num = (num * 2).ToString()\n\n// exec \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u30af\u30e9\u30b9\ntype Fuga() =\n    member self.exec num = (num * (-1)).ToString()\n\nlet hoge = Hoge()\nexec (hoge :> IExec) 2 // #=> val it : string = \"4\"\n\nlet fuga = Fuga()\nexec fuga 2 // #=> val it : string = \"-2\"\n\n\n\u500b\u4eba\u7684\u306b\u306f Explicit member constraint \u306e\u52c9\u5f37\u306b\u306a\u3063\u305f\u306e\u3067\u826f\u304b\u3063\u305f\u3067\u3059\u306d\u3002\nF#\u306e\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306b\u5236\u7d04\u3092\u3064\u3051\u3066\u3001\u578b\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u4f7f\u3048\u308b\u578b\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305d\u308c\u3092\u4f7f\u3063\u3066\u3001\u69cb\u9020\u7684\u90e8\u5206\u578b(structural subtyping)\u307f\u305f\u3044\u306a\u52d5\u304d\u3092\u3055\u305b\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n```structuralSubtyping.fs\n// target : exec \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n// num : exec \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\u5024\nlet inline exec< ^T when ^T : (member exec : int -> string)> target num =\n    (^T : (member exec : int -> string) (target, num))\n\n// exec \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\ntype IExec =\n    abstract exec : int -> string\n\n// IExec \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u5b9f\u88c5\u3059\u308b\u30af\u30e9\u30b9\ntype Hoge() =\n    interface IExec with\n        member this.exec num = (num * 2).ToString()\n\n// exec \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u30af\u30e9\u30b9\ntype Fuga() =\n    member self.exec num = (num * (-1)).ToString()\n\nlet hoge = Hoge()\nexec (hoge :> IExec) 2 // #=> val it : string = \"4\"\n\nlet fuga = Fuga()\nexec fuga 2 // #=> val it : string = \"-2\"\n```\n\n\u500b\u4eba\u7684\u306b\u306f Explicit member constraint \u306e\u52c9\u5f37\u306b\u306a\u3063\u305f\u306e\u3067\u826f\u304b\u3063\u305f\u3067\u3059\u306d\u3002", "tags": ["F#"]}