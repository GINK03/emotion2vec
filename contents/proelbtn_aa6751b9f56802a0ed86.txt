{"context": "Python\u306b\u306f\u6709\u540d\u306aPytube\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u306e\u306b\u3001Java\u306b\u306f\u306a\u3055\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001Pytube\u306e\u30bd\u30fc\u30b9\u3092\u8aad\u307f\u306a\u304c\u3089Groovy\u3067Youtube\u306e\u52d5\u753b\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u305b\u3066\u307f\u307e\u3057\u305f\u3002\nimport groovy.json.JsonSlurper\n\nclass YoutubeDownloader {\n    private static def getJsonLength(String text) {\n        def num = 0\n        for (int i = 0; ; i++) {\n            if(text[i] == '{') {\n                num++\n            }\n            else if (text[i] == '}') {\n                num--\n                if (num == 0) return i + 1\n            }\n        }\n    }\n\n    private static def getJsonText(String html) {\n        def start = html.indexOf(\"ytplayer.config = \") + \"ytplayer.config = \".length()\n        def length = getJsonLength(html.substring(start))\n        return html.substring(start, start + length)\n    }\n\n    private static def getStreamMapObject(String encodedStreamMap) {\n        LinkedHashMap<String, LinkedHashMap<String, String>> dicts = new LinkedHashMap<>()\n\n        encodedStreamMap.split(\",\").each {\n            LinkedHashMap<String, String> dict = new LinkedHashMap<>()\n\n            it.split(\"&\").each {\n                def parts = it.split(\"=\")\n                dict.put(parts[0], URLDecoder.decode(parts[1], \"UTF-8\"))\n            }\n\n            def itag = dict.get(\"itag\")\n\n            dicts.put(itag, dict)\n        }\n\n        return dicts\n    }\n\n    private static def getVideoData(String YoutubeURL) {\n        def html = new URL(YoutubeURL).readLines().join(\"\")\n\n        def jsonText = getJsonText(html)\n        def jsonObject = new JsonSlurper().parseText(jsonText)\n\n        def streamMapText = jsonObject[\"args\"][\"url_encoded_fmt_stream_map\"]\n\n        jsonObject[\"args\"].putAt(\"stream_map\", getStreamMapObject(streamMapText))\n\n        return jsonObject\n    }\n\n    public static def download(String URL, String Path){\n        def videoData = getVideoData(URL)\n        new File(\"${Path}/${videoData[\"args\"][\"title\"]}.mp4\") <<\n                new URL(videoData[\"args\"][\"stream_map\"][\"22\"][\"url\"]).getBytes()\n    }\n}\n\nPython\u306b\u306f\u6709\u540d\u306aPytube\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u306e\u306b\u3001Java\u306b\u306f\u306a\u3055\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001Pytube\u306e\u30bd\u30fc\u30b9\u3092\u8aad\u307f\u306a\u304c\u3089Groovy\u3067Youtube\u306e\u52d5\u753b\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u305b\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n```\nimport groovy.json.JsonSlurper\n\nclass YoutubeDownloader {\n    private static def getJsonLength(String text) {\n        def num = 0\n        for (int i = 0; ; i++) {\n            if(text[i] == '{') {\n                num++\n            }\n            else if (text[i] == '}') {\n                num--\n                if (num == 0) return i + 1\n            }\n        }\n    }\n\n    private static def getJsonText(String html) {\n        def start = html.indexOf(\"ytplayer.config = \") + \"ytplayer.config = \".length()\n        def length = getJsonLength(html.substring(start))\n        return html.substring(start, start + length)\n    }\n\n    private static def getStreamMapObject(String encodedStreamMap) {\n        LinkedHashMap<String, LinkedHashMap<String, String>> dicts = new LinkedHashMap<>()\n\n        encodedStreamMap.split(\",\").each {\n            LinkedHashMap<String, String> dict = new LinkedHashMap<>()\n\n            it.split(\"&\").each {\n                def parts = it.split(\"=\")\n                dict.put(parts[0], URLDecoder.decode(parts[1], \"UTF-8\"))\n            }\n\n            def itag = dict.get(\"itag\")\n\n            dicts.put(itag, dict)\n        }\n\n        return dicts\n    }\n\n    private static def getVideoData(String YoutubeURL) {\n        def html = new URL(YoutubeURL).readLines().join(\"\")\n\n        def jsonText = getJsonText(html)\n        def jsonObject = new JsonSlurper().parseText(jsonText)\n\n        def streamMapText = jsonObject[\"args\"][\"url_encoded_fmt_stream_map\"]\n\n        jsonObject[\"args\"].putAt(\"stream_map\", getStreamMapObject(streamMapText))\n\n        return jsonObject\n    }\n\n    public static def download(String URL, String Path){\n        def videoData = getVideoData(URL)\n        new File(\"${Path}/${videoData[\"args\"][\"title\"]}.mp4\") <<\n                new URL(videoData[\"args\"][\"stream_map\"][\"22\"][\"url\"]).getBytes()\n    }\n}\n```\n", "tags": ["Java", "Groovy"]}