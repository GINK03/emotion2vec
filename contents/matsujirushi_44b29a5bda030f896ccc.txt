{"context": "I2C API\u3092\u8abf\u3079\u307e\u3057\u305f\u3002\n\n\u524d\u63d0\n\nRaspberry Pi 2\nWindows 10 IoT Core 10.0.10586.218\nVisual Studio 2015 14.0.25123.00 Update 2\nLSM9DS1\n\n\n\u7d50\u7dda\n\n\n\u3084\u308a\u65b9\n\n1. \u4f7f\u7528\u3059\u308bI2C\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u30c7\u30d0\u30a4\u30b9ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\nstring aqs = I2cDevice.GetDeviceSelector(friendlyName);\nvar dis = await DeviceInformation.FindAllAsync(aqs);\n// dis[0].Id \u304c\u30c7\u30d0\u30a4\u30b9ID\n\n\n\u5177\u4f53\u7684\u306a\u5024\u306f\u3053\u308c\u3002\"\\?\\ACPI#MSFT8000#1#{a11ee3c6-8421-4202-a3e7-b91ff90188e4}\\I2C1\"\n\n\n2. I2C\u306b\u63a5\u7d9a\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n1\u3064\u306e\u30b9\u30ec\u30fc\u30d6\u30a2\u30c9\u30ec\u30b9\u306b\u5bfe\u3057\u30661\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u30b9\u30ec\u30fc\u30d6\u30a2\u30c9\u30ec\u30b9\u306e\u6307\u5b9a\u306f\u5fc5\u9808\u3067\u3059\u3002\n\u30d0\u30b9\u901f\u5ea6\u3068\u5171\u6709\u30e2\u30fc\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nvar device = await I2cDevice.FromIdAsync(dis[0].Id, new I2cConnectionSettings(0x6b) { BusSpeed = I2cBusSpeed.FastMode, SharingMode = I2cSharingMode.Exclusive, });\n\n\n3. \u30c7\u30d0\u30a4\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3001Write / Read / WriteRead \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\nWriteRead \u30e1\u30bd\u30c3\u30c9\u306f\u3001Write\u3057\u305f\u5f8c\u306bRestartCondition\u3067Read\u3059\u308b\u30a2\u30ec\u3067\u3059\u3002\ndevice.Write(new byte[] { 0x20, 0xc0, });\nvar data = new byte[6];\ndevice.WriteRead(new byte[] { 0x28 }, data);\n\nWrite \u30e1\u30bd\u30c3\u30c9\u306e\u6ce2\u5f62\u3002\n\nWriteRead \u30e1\u30bd\u30c3\u30c9\u306e\u6ce2\u5f62\u3002\n\n\n\u6c17\u306b\u306a\u3063\u3066\u8abf\u3079\u305f\u3053\u3068\n\n\u5171\u6709\u30e2\u30fc\u30c9\u306eExclusive\u3063\u3066\u3001\u3069\u3046\u3044\u3046\u5358\u4f4d\u3067\u6392\u4ed6\u3059\u308b\u306e\uff1f\n\u30b9\u30ec\u30fc\u30d6\u30a2\u30c9\u30ec\u30b9\u306e\u5358\u4f4d\u3067\u6392\u4ed6\u3057\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001Exclusive\u3067\u3082\u3001\u30b9\u30ec\u30fc\u30d6\u30a2\u30c9\u30ec\u30b9\u304c0x6b\u30680x6c\u3092\u540c\u6642\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b9\u30ec\u30fc\u30d6\u30a2\u30c9\u30ec\u30b9\u304c0x6b\u30680x6b\u306f\u30c0\u30e1\u3002\u5f8c\u8005\u306e\u623b\u308a\u5024\u304cnull\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5171\u6709\u30e2\u30fc\u30c9\u306eExclusive\u306f\u3001Shared\u3088\u308a\u901f\u3044\uff1f\n\u4f59\u5206\u306a\u51e6\u7406\u304c\u7121\u3044\u5206\u3001\u901f\u3044\u3093\u3058\u3083\u306a\u3044\u304b\uff1f\u3068\u601d\u3044\u3001\u901a\u4fe1\u6642\u9593\u3092\u8a08\u6e2c\u3057\u307e\u3057\u305f\u304c\u3001\u3001\u3001\u306f\u3063\u304d\u308a\u3057\u305f\u5dee\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u30c7\u30d0\u30a4\u30b9\u5358\u4f4d\u306b\u30d0\u30b9\u901f\u5ea6\u304c\u6307\u5b9a\u3067\u304d\u308b\u3063\u3066\u3053\u3068\u306f\u3001\u540c\u4e00I2C\u30d0\u30b9\u306b\u6df7\u5728\u53ef\u80fd\uff1f\n\u53ef\u80fd\u3067\u3059\u3002\n\u8a66\u3057\u306b\u3001Shared\u3067\u30d0\u30b9\u901f\u5ea6\u9055\u3044\u306e\u30c7\u30d0\u30a4\u30b9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u3063\u3066\u5b9f\u884c\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u305d\u308c\u305e\u308c\u3067\u6307\u5b9a\u3057\u305f\u30d0\u30b9\u901f\u5ea6\u3067\u901a\u4fe1\u3057\u307e\u3057\u305f\u3002\n\u3061\u3087\u3063\u3068\u4fbf\u5229\u3002\n100K/400K\u6df7\u5728\u306e\u6ce2\u5f62\u3002\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nprivate void Page_Loaded(object sender, RoutedEventArgs e)\n{\n    Task.Run(I2cTask);\n}\n\nprivate async Task I2cTask()\n{\n    var device = await GetI2cDevice(\"I2C1\", 0x6b, I2cBusSpeed.FastMode);\n    device.Write(new byte[] { 0x20, 0xc0, });   // CTRL_REG6_XL = 0b11000000\n\n    var data = new byte[6];\n    for (;;)\n    {\n        device.WriteRead(new byte[] { 0x28 }, data);    // OUT_X_XL, OUT_Y_XL, OUT_Z_XL\n        Debug.WriteLine(\"{0} {1} {2}\", BitConverter.ToInt16(data, 0), BitConverter.ToInt16(data, 2), BitConverter.ToInt16(data, 4));\n    }\n}\n\nprivate async Task<I2cDevice> GetI2cDevice(string friendlyName, int slaveAddress, I2cBusSpeed busSpeed = I2cBusSpeed.StandardMode, I2cSharingMode sharingMode = I2cSharingMode.Exclusive)\n{\n    string aqs = I2cDevice.GetDeviceSelector(friendlyName);\n    var dis = await DeviceInformation.FindAllAsync(aqs);\n\n    return await I2cDevice.FromIdAsync(dis[0].Id, new I2cConnectionSettings(slaveAddress) { BusSpeed = busSpeed, SharingMode = sharingMode, });\n}\n\nI2C API\u3092\u8abf\u3079\u307e\u3057\u305f\u3002\n\n#\u524d\u63d0\n* Raspberry Pi 2\n* Windows 10 IoT Core 10.0.10586.218\n* Visual Studio 2015 14.0.25123.00 Update 2\n* [LSM9DS1](http://ssci.to/2734)\n\n#\u7d50\u7dda\n![20160619D.jpg](https://qiita-image-store.s3.amazonaws.com/0/109634/bef226ae-f694-6a0f-32ac-a6432ca06b1b.jpeg)\n\n\n#\u3084\u308a\u65b9\n##1. \u4f7f\u7528\u3059\u308bI2C\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u30c7\u30d0\u30a4\u30b9ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```csharp\nstring aqs = I2cDevice.GetDeviceSelector(friendlyName);\nvar dis = await DeviceInformation.FindAllAsync(aqs);\n// dis[0].Id \u304c\u30c7\u30d0\u30a4\u30b9ID\n```\n\n> \u5177\u4f53\u7684\u306a\u5024\u306f\u3053\u308c\u3002\"\\\\?\\ACPI#MSFT8000#1#{a11ee3c6-8421-4202-a3e7-b91ff90188e4}\\I2C1\"\n\n##2. I2C\u306b\u63a5\u7d9a\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n1\u3064\u306e\u30b9\u30ec\u30fc\u30d6\u30a2\u30c9\u30ec\u30b9\u306b\u5bfe\u3057\u30661\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u30b9\u30ec\u30fc\u30d6\u30a2\u30c9\u30ec\u30b9\u306e\u6307\u5b9a\u306f\u5fc5\u9808\u3067\u3059\u3002\n[\u30d0\u30b9\u901f\u5ea6](https://msdn.microsoft.com/ja-jp/library/windows/apps/windows.devices.i2c.i2cbusspeed.aspx)\u3068[\u5171\u6709\u30e2\u30fc\u30c9](https://msdn.microsoft.com/ja-jp/library/windows/apps/windows.devices.i2c.i2csharingmode.aspx)\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```csharp\nvar device = await I2cDevice.FromIdAsync(dis[0].Id, new I2cConnectionSettings(0x6b) { BusSpeed = I2cBusSpeed.FastMode, SharingMode = I2cSharingMode.Exclusive, });\n```\n#3. \u30c7\u30d0\u30a4\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3001[Write](https://msdn.microsoft.com/ja-jp/library/windows/apps/windows.devices.i2c.i2cdevice.write.aspx) / [Read](https://msdn.microsoft.com/ja-jp/library/windows/apps/windows.devices.i2c.i2cdevice.read.aspx) / [WriteRead](https://msdn.microsoft.com/ja-jp/library/windows/apps/windows.devices.i2c.i2cdevice.writeread.aspx) \u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\nWriteRead \u30e1\u30bd\u30c3\u30c9\u306f\u3001Write\u3057\u305f\u5f8c\u306bRestartCondition\u3067Read\u3059\u308b\u30a2\u30ec\u3067\u3059\u3002\n\n```csharp\ndevice.Write(new byte[] { 0x20, 0xc0, });\nvar data = new byte[6];\ndevice.WriteRead(new byte[] { 0x28 }, data);\n```\n\nWrite \u30e1\u30bd\u30c3\u30c9\u306e\u6ce2\u5f62\u3002\n![20160619A.PNG](https://qiita-image-store.s3.amazonaws.com/0/109634/080143ec-a354-0914-4514-df33cae598bf.png)\n\nWriteRead \u30e1\u30bd\u30c3\u30c9\u306e\u6ce2\u5f62\u3002\n![20160619B.PNG](https://qiita-image-store.s3.amazonaws.com/0/109634/0d71c073-1595-1e89-8542-6bd3d377b017.png)\n\n#\u6c17\u306b\u306a\u3063\u3066\u8abf\u3079\u305f\u3053\u3068\n##\u5171\u6709\u30e2\u30fc\u30c9\u306eExclusive\u3063\u3066\u3001\u3069\u3046\u3044\u3046\u5358\u4f4d\u3067\u6392\u4ed6\u3059\u308b\u306e\uff1f\n\u30b9\u30ec\u30fc\u30d6\u30a2\u30c9\u30ec\u30b9\u306e\u5358\u4f4d\u3067\u6392\u4ed6\u3057\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001Exclusive\u3067\u3082\u3001\u30b9\u30ec\u30fc\u30d6\u30a2\u30c9\u30ec\u30b9\u304c0x6b\u30680x6c\u3092\u540c\u6642\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b9\u30ec\u30fc\u30d6\u30a2\u30c9\u30ec\u30b9\u304c0x6b\u30680x6b\u306f\u30c0\u30e1\u3002\u5f8c\u8005\u306e\u623b\u308a\u5024\u304cnull\u306b\u306a\u308a\u307e\u3059\u3002\n\n##\u5171\u6709\u30e2\u30fc\u30c9\u306eExclusive\u306f\u3001Shared\u3088\u308a\u901f\u3044\uff1f\n\u4f59\u5206\u306a\u51e6\u7406\u304c\u7121\u3044\u5206\u3001\u901f\u3044\u3093\u3058\u3083\u306a\u3044\u304b\uff1f\u3068\u601d\u3044\u3001\u901a\u4fe1\u6642\u9593\u3092\u8a08\u6e2c\u3057\u307e\u3057\u305f\u304c\u3001\u3001\u3001\u306f\u3063\u304d\u308a\u3057\u305f\u5dee\u306f\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n##\u30c7\u30d0\u30a4\u30b9\u5358\u4f4d\u306b\u30d0\u30b9\u901f\u5ea6\u304c\u6307\u5b9a\u3067\u304d\u308b\u3063\u3066\u3053\u3068\u306f\u3001\u540c\u4e00I2C\u30d0\u30b9\u306b\u6df7\u5728\u53ef\u80fd\uff1f\n\u53ef\u80fd\u3067\u3059\u3002\n\u8a66\u3057\u306b\u3001Shared\u3067\u30d0\u30b9\u901f\u5ea6\u9055\u3044\u306e\u30c7\u30d0\u30a4\u30b9\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u3063\u3066\u5b9f\u884c\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u305d\u308c\u305e\u308c\u3067\u6307\u5b9a\u3057\u305f\u30d0\u30b9\u901f\u5ea6\u3067\u901a\u4fe1\u3057\u307e\u3057\u305f\u3002\n\u3061\u3087\u3063\u3068\u4fbf\u5229\u3002\n\n100K/400K\u6df7\u5728\u306e\u6ce2\u5f62\u3002\n![20160619C.PNG](https://qiita-image-store.s3.amazonaws.com/0/109634/4f03298f-4f1c-9fd9-86fc-c705707af40e.png)\n\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n```csharp\nprivate void Page_Loaded(object sender, RoutedEventArgs e)\n{\n    Task.Run(I2cTask);\n}\n\nprivate async Task I2cTask()\n{\n    var device = await GetI2cDevice(\"I2C1\", 0x6b, I2cBusSpeed.FastMode);\n    device.Write(new byte[] { 0x20, 0xc0, });   // CTRL_REG6_XL = 0b11000000\n\n    var data = new byte[6];\n    for (;;)\n    {\n        device.WriteRead(new byte[] { 0x28 }, data);    // OUT_X_XL, OUT_Y_XL, OUT_Z_XL\n        Debug.WriteLine(\"{0} {1} {2}\", BitConverter.ToInt16(data, 0), BitConverter.ToInt16(data, 2), BitConverter.ToInt16(data, 4));\n    }\n}\n\nprivate async Task<I2cDevice> GetI2cDevice(string friendlyName, int slaveAddress, I2cBusSpeed busSpeed = I2cBusSpeed.StandardMode, I2cSharingMode sharingMode = I2cSharingMode.Exclusive)\n{\n    string aqs = I2cDevice.GetDeviceSelector(friendlyName);\n    var dis = await DeviceInformation.FindAllAsync(aqs);\n\n    return await I2cDevice.FromIdAsync(dis[0].Id, new I2cConnectionSettings(slaveAddress) { BusSpeed = busSpeed, SharingMode = sharingMode, });\n}\n```\n", "tags": ["Windows10IoTCore"]}