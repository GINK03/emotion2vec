{"context": "\n\nMicrosoft Fakes\u3068\u306f\uff1f\n\u672c\u6765\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u306f\u307e\u3063\u3068\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u3001\u307e\u3063\u3068\u3046\u306a\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3067\u8a2d\u8a08\u3001\u5b9f\u88c5\u3059\u308c\u3070\u81ea\u7136\u3068\u30c6\u30b9\u30c8\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u6211\u3005\u306f\u697d\u5712\u306b\u306f\u4f4f\u3093\u3067\u3044\u306a\u3044\u306e\u3067\u3001\u3055\u307e\u3056\u307e\u306a\u7406\u7531\u3067\u540d\u72b6\u3057\u304c\u305f\u304d\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u306f\u4f5c\u6210\u3055\u308c\u3001\u53b3\u3057\u3044\u9078\u629e\u80a2\u3092\u7a81\u304d\u4ed8\u3051\u3089\u308c\u307e\u3059\u3002\n\u9078\u629e\u2460\u3000\u30c8\u30e0\u30c7\u30de\u30eb\u30b3\u306e\u3088\u3046\u306a\u7ba1\u7406\u8005\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4fee\u6b63\u3059\u308b\u3088\u3046\u306a\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u5f15\u304d\u76f4\u3059\u3002\n\u9078\u629e\u2461\u3000\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3092\u7406\u89e3\u3057\u305f\u5897\u54e1\u304c\u6765\u3066\u52a9\u3051\u3066\u304f\u308c\u308b\u3002\n\u9078\u629e\u2462\u3000\u76f4\u305b\u306a\u3044\u3002\u73fe\u5b9f\u306f\u975e\u60c5\u3067\u3042\u308b\u3002\nMicrosoft Fakes\u306f\u3053\u306e\u3088\u3046\u306a\u975e\u60c5\u306a\u73fe\u5b9f\u3092\u7a81\u304d\u4ed8\u3051\u3089\u308c\u305f\u8005\u306b\u3068\u3063\u3066\u306e\u4e00\u52a9\u306b\u306a\u308a\u307e\u3059\u3002\nMicrosoftFakes\u306eShim\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u8907\u96d1\u306b\u4f9d\u5b58\u3057\u305f\u6a5f\u80fd\u3092\u5207\u308a\u96e2\u3057\u3066\u7279\u5b9a\u306e\u7b87\u6240\u306e\u307f\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\nMicrosoft Fakes \u3092\u4f7f\u7528\u3057\u305f\u30c6\u30b9\u30c8\u3067\u306e\u30b3\u30fc\u30c9\u306e\u5206\u96e2\nhttps://msdn.microsoft.com/ja-jp/library/hh549175.aspx\n\u305f\u3068\u3048\u3070\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084\u5225\u30b7\u30b9\u30c6\u30e0\u306b\u901a\u4fe1\u3059\u308b\u3088\u3046\u306a\u6a5f\u80fd\u306e\u30c6\u30b9\u30c8\u3067\u3042\u3063\u3066\u3082\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084\u5225\u30b7\u30b9\u30c6\u30e0\u304c\u30c6\u30b9\u30c8\u306b\u90fd\u5408\u306e\u3044\u3044\u30c7\u30fc\u30bf\u3092\u8fd4\u3059\u3088\u3046\u306b\u507d\u88c5\u3067\u304d\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070\u3001\u73fe\u5728\u6642\u523b\u306b\u4f9d\u5b58\u3057\u305f\u30c6\u30b9\u30c8\u5bfe\u8c61\u3084\u3001\u30e6\u30fc\u30b6\u540d\u306b\u4f9d\u5b58\u3057\u305f\u3082\u306e\u3067\u3082\u30c6\u30b9\u30c8\u306b\u90fd\u5408\u306e\u3044\u3044\u73fe\u5728\u6642\u523b\u3084\u30e6\u30fc\u30b6\u540d\u3092\u507d\u88c5\u3057\u3066\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306b\u624b\u3092\u52a0\u3048\u308b\u3053\u3068\u306a\u304f\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001VisualStudio2013\u3067\u306fPremiume\u4ee5\u4e0a\u3001VisualStudio2015\u3067\u306fEnterprise\u306e\u30a8\u30c7\u30a3\u30b7\u30e7\u30f3\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\u307e\u305f\u57fa\u672c\u7684\u306aVisualStudio\u3067\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u66f8\u304d\u65b9\u306f\u4e0b\u8a18\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nhttp://qiita.com/mima_ita/items/55394bcc851eb8b6dc24\n\nMicrosoft Fakes\u3092\u8a66\u3059\n\n\u74b0\u5883\u69cb\u7bc9\nVisualStudioEnterprise\u306f\u4e0b\u8a18\u306e\u30da\u30fc\u30b8\u304b\u3089\u7121\u6599\u8a66\u7528\u7248\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nhttps://www.visualstudio.com/ja/downloads/\n\u306a\u304a\u300175\u4e07\u5186\u304f\u3089\u3044\u3059\u308b\u306e\u3067\u306a\u304b\u306a\u304b\u30cf\u30fc\u30c9\u30eb\u304c\u9ad8\u3044\u3067\u3059\u3002\n\n\u7c21\u5358\u306a\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\n(1)\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u6210\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3059\u308b\n\n\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\n\u8aac\u660e\n\n\n\n\nClassLibrary1\n\u30c6\u30b9\u30c8\u5bfe\u8c61\n\n\nUnitTestProject1\n\u30c6\u30b9\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0\n\n\n\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ClassLibrary1\n{\n    public class Class1\n    {\n        private int a;\n        public Class1(int a)\n        {\n            this.a = a;\n        }\n        public int Cal(int x, int y)\n        {\n            return a + x + y;\n        }\n\n    }\n\n    public class Class2\n    {\n        Class1 c1 = new Class1(5);\n        public int CallCal()\n        {\n            return c1.Cal(1, 2);\n        }\n    }\n}\n\n\n(2)\u30c6\u30b9\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u53c2\u7167\u304b\u3089\u507d\u88c5\u3057\u305f\u3044\u30a2\u30bb\u30f3\u30d6\u30ea\u3092\u9078\u629e\u3057\u3066\u53f3\u30af\u30ea\u30c3\u30af\u3092\u3057\u3066\u300cFakes\u30a2\u30bb\u30f3\u30d6\u30ea\u306b\u8ffd\u52a0\u300d\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n(3)Fakes\u30d5\u30a9\u30eb\u30c0\u306b\u62e1\u5f35\u5b50\u304cfakes\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n\n\u69cb\u6210\u7ba1\u7406\u306b\u3042\u3052\u308b\u5834\u5408\u306f\u3001\u3053\u306efakes\u30d5\u30a1\u30a4\u30eb\u3092\u4e0a\u3052\u308b\u3053\u3068\u3002\n(4)\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u5b9f\u88c5\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u4f8b\nusing System;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\nusing Microsoft.QualityTools.Testing.Fakes;\n\nnamespace UnitTestProject1\n{\n    [TestClass]\n    public class UnitTest1\n    {\n        [TestMethod]\n        public void TestMethod1()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                var c2 = new ClassLibrary1.Class2();\n\n                ClassLibrary1.Fakes.ShimClass1.AllInstances.CalInt32Int32 = (ClassLibrary1.Class1 obj, int x, int y) =>\n                {\n                    // c1.Cal(1, 2); \u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n                    Assert.AreEqual(c2.c1, obj);\n                    Assert.AreEqual(1, x);\n                    Assert.AreEqual(2, y);\n\n                    return 999999;\n                };\n\n                var act = c2.CallCal();\n\n                // Shim\u3067\u507d\u88c5\u3057\u305f\u5024\u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002\n                Assert.AreEqual(999999, act);\n            }\n        }\n    }\n}\n\n\n(5)\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3059\u308b\u3068Shim\u3067\u507d\u88c5\u3057\u305f\u5024\u304c\u53d6\u5f97\u3067\u304d\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\nShim\u306e\u4f7f\u3044\u65b9\n\nShim\u306e\u5bfe\u8c61\npublic/private/protected\u306e\u3042\u3089\u3086\u308b\u30b9\u30b3\u30fc\u30d7\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u507d\u88c5\u3067\u304d\u308b\u304c\u3001private\u306e\u5185\u90e8\u30af\u30e9\u30b9\u3084\u578b\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3082\u3057\u304f\u306f\u623b\u308a\u5024\u306b\u3059\u308b\u95a2\u6570\u306f\u507d\u88c5\u306f\u3067\u304d\u306a\u3044\u3002\n\n\u507d\u88c5\u5bfe\u8c61\u306e\u30af\u30e9\u30b9\n    public class Class3\n    {\n        public int test1()\n        {\n            return 1;\n        }\n\n        public static int test2()\n        {\n            return 2;\n        }\n        private int test3()\n        {\n            return 3;\n        }\n        protected int test4()\n        {\n            return 5;\n        }\n\n        public class Test5Ret\n        {\n        }\n\n        private Test5Ret test5()\n        {\n            return new Test5Ret();\n        }\n\n        private class Test6Ret\n        { }\n\n        // \u30d1\u30e9\u30e1\u30fc\u30bf\u307e\u305f\u306f\u623b\u308a\u5024\u304c\u516c\u958b\u3055\u308c\u305f\u578b\u3067\u306a\u3044\u306e\u3067\u507d\u88c5\u304c\u3067\u304d\u306a\u3044\u3002\n        private Test6Ret test6()\n        {\n            return new Test6Ret();\n        }\n    }\n\n\n\nShim\u306b\u3088\u308b\u507d\u88c5\u306e\u65b9\u6cd5\n        [TestMethod]\n        public void TestMethod4()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                var c2 = new ClassLibrary1.Class2();\n\n                ClassLibrary1.Fakes.ShimClass3.AllInstances.test1 = (ClassLibrary1.Class3 obj) =>\n                {\n                    return 11;\n                };\n\n                ClassLibrary1.Fakes.ShimClass3.test2 = () =>\n                {\n                    return 22;\n                };\n\n                ClassLibrary1.Fakes.ShimClass3.AllInstances.test3 = (ClassLibrary1.Class3 obj) =>\n                {\n                    return 33;\n                };\n\n                ClassLibrary1.Fakes.ShimClass3.AllInstances.test4 = (ClassLibrary1.Class3 obj) =>\n                {\n                    return 44;\n                };\n\n                ClassLibrary1.Fakes.ShimClass3.AllInstances.test5 = (ClassLibrary1.Class3 obj) =>\n                {\n                    return null;\n                };\n\n                //\u3053\u308c\u306f\u4f5c\u3089\u308c\u306a\u3044\u3002\n                //ClassLibrary1.Fakes.ShimClass3.AllInstances.test6 = (ClassLibrary1.Class3 obj) =>\n                //{\n                //    return null;\n                //};\n\n\n            }\n        }\n\n\n\nShim\u306e\u95a2\u6570\u540d\u306e\u4f5c\u6210\u30eb\u30fc\u30eb\n\u507d\u88c5\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u547d\u540d\u898f\u5247\u3067\u4f5c\u6210\u3055\u308c\u308b\u3002\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\uff1a\n\u3010\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u540d\u524d\u7a7a\u9593\u3011.Fakes..Shim\u3010\u30af\u30e9\u30b9\u540d\u3011.AllInstances.\u3010\u95a2\u6570\u540d\u3011\u3010\u30d1\u30e9\u30e1\u30fc\u30bf1\u306e\u578b\u3011\u3010\u30d1\u30e9\u30e1\u30fc\u30bf2\u306e\u578b\u3011..\u3010\u30d1\u30e9\u30e1\u30fc\u30bfn\u306e\u578b\u3011(\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9,\u30d1\u30e9\u30e1\u30fc\u30bf1,\u30d1\u30e9\u30e1\u30fc\u30bf2...)\n\u30b9\u30bf\u30c6\u30a3\u30c3\u30af\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\uff1a\n\u3010\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u540d\u524d\u7a7a\u9593\u3011.Fakes..Shim\u3010\u30af\u30e9\u30b9\u540d\u3011..\u3010\u95a2\u6570\u540d\u3011\u3010\u30d1\u30e9\u30e1\u30fc\u30bf1\u306e\u578b]\u3010\u30d1\u30e9\u30e1\u30fc\u30bf2\u306e\u578b\u3011..\u3010\u30d1\u30e9\u30e1\u30fc\u30bfn\u306e\u578b\u3011(\u30d1\u30e9\u30e1\u30fc\u30bf1,\u30d1\u30e9\u30e1\u30fc\u30bf2...)\n\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5834\u5408\uff1a\n\u3010\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u540d\u524d\u7a7a\u9593\u3011.Fakes..Shim\u3010\u30af\u30e9\u30b9\u540d\u3011.AllInstances.Get\u3010\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3011(\u30af\u30e9\u30b9)\n\u3010\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u540d\u524d\u7a7a\u9593\u3011.Fakes..Shim\u3010\u30af\u30e9\u30b9\u540d\u3011.AllInstances.Set\u3010\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3011\u3010\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u578b\u3011(\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9,\u30d1\u30e9\u30e1\u30fc\u30bf)\n\u507d\u88c5\u5bfe\u8c61\u306e\u95a2\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u5206\u3060\u3051\u540d\u79f0\u304c\u306a\u304c\u304f\u306a\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3002\n\u53e4\u3044VS2012\u3060\u3068\u9577\u3059\u304e\u308b\u3068\u507d\u88c5\u7528\u306e\u95a2\u6570\u304c\u4f5c\u6210\u3055\u308c\u306a\u3044\u3002\uff08256\u3042\u305f\u308a\uff1f\uff09\nVS2015\u3060\u3068\u3001\u5f8c\u65b9\u306e\u6587\u5b57\u3092\u5207\u3063\u3066\u9069\u6b63\u306a\u6587\u5b57\u306b\u5909\u63db\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\n\u73fe\u5728\u65e5\u4ed8\u306e\u507d\u88c5\n\u73fe\u5728\u65e5\u4ed8\u306f\u30c6\u30b9\u30c8\u3092\u3059\u308b\u3046\u3048\u3067\u3084\u3063\u304b\u3044\u3060\u304c\u3001\u3053\u308c\u3082\u507d\u88c5\u3067\u304d\u308b\u3002\n(1)System.dll\u306efakes\u30a2\u30bb\u30f3\u30d6\u30ea\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n\n(2)System.DateTime.Now\u3092\u507d\u88c5\u3059\u308b\u3002\n        [TestMethod]\n        public void TestMethod2()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                DateTime exp = new DateTime(2000, 10, 5);\n                System.Fakes.ShimDateTime.NowGet = () =>\n                {\n                    return exp;\n                };\n\n                var act = System.DateTime.Now;\n\n                Assert.AreEqual(exp, act);\n            }\n        }\n\n\n\u73fe\u5728\u30e6\u30fc\u30b6\u3084\u30de\u30b7\u30f3\u540d\u306a\u3069\u306eSysetem.Environment\u3092\u507d\u88c5\u3059\u308b\u3002\n(1)Fakes\u30d5\u30a9\u30eb\u30c0\u306e\u300cmscorlib.fakes\u300d\u3092\u958b\u304f\n\n(2)ShimGeneration\u306bSystem.Environment\u3092\u8ffd\u52a0\u3059\u308b\u3002\n<Fakes xmlns=\"http://schemas.microsoft.com/fakes/2011/\">\n  <Assembly Name=\"mscorlib\" Version=\"4.0.0.0\"/>\n  <ShimGeneration>\n    <Add FullName=\"System.Environment\"/>\n  </ShimGeneration>  \n</Fakes>\n\n(3)\u30ea\u30d3\u30eb\u30c9\u3092\u884c\u3046\u3002\n(4)\u4e0b\u8a18\u306e\u3088\u3046\u306b\u507d\u88c5\u3092\u884c\u3046\u3002\n\n        [TestMethod]\n        public void TestMethod3()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                System.Fakes.ShimEnvironment.UserNameGet = () =>\n                {\n                    return \"user\";\n                };\n                System.Fakes.ShimEnvironment.MachineNameGet = () =>\n                {\n                    return \"machine\";\n                };\n\n                Assert.AreEqual(\"user\", Environment.UserName);\n                Assert.AreEqual(\"machine\", Environment.MachineName);\n            }\n        }\n\n\n\u5185\u90e8\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u507d\u88c5\n\u5185\u90e8\u30af\u30e9\u30b9\u306fShim\u89aa\u30af\u30e9\u30b9\u540d.Shim\u5185\u90e8\u30af\u30e9\u30b9\u540d\u3068\u3044\u3046\u5f62\u3067\u507d\u88c5\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\n\n\u5185\u90e8\u30af\u30e9\u30b9\n    public class Class5\n    {\n        public class Class5Inner\n        {\n            public int Test5Inner()\n            {\n                return 5;\n            }\n        }\n    }\n\n\n\n\u5185\u90e8\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u507d\u88c5\n        [TestMethod]\n        public void TestMethod5()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                ClassLibrary1.Fakes.ShimClass5.ShimClass5Inner.AllInstances.Test5Inner = (ClassLibrary1.Class5.Class5Inner obj) =>\n                {\n                    return 99;\n                };\n                var o = new ClassLibrary1.Class5.Class5Inner();\n                Assert.AreEqual(99, o.Test5Inner());\n            }\n        }\n\n\n\n\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u507d\u88c5\n\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u306e\u507d\u88c5\u306f\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u81ea\u4f53\u3092\u507d\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u7d99\u627f\u5148\u306eShim\u306b\u306f\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5b58\u5728\u3057\u306a\u3044\u3002\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\n    public class Class6Base\n    {\n        protected int Test6Base()\n        {\n            return 6;\n        }\n    }\n\n    public class Class6: Class6Base\n    {\n        public int Test6BasePlus1()\n        {\n            return base.Test6Base() + 1;\n        }\n    }\n\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n        [TestMethod]\n        public void TestMethod6()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                ClassLibrary1.Fakes.ShimClass6Base.AllInstances.Test6Base = (ClassLibrary1.Class6Base obj) =>\n                {\n                    return 99;\n                };\n                var o = new ClassLibrary1.Class6();\n                Assert.AreEqual(100, o.Test6BasePlus1());\n            }\n        }\n\n\n\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u507d\u88c5\u65b9\u6cd5\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u507d\u88c5\u65b9\u6cd5\u306f\u578b\u3092\u6307\u5b9a\u3057\u305fShim\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\n    public static class Class7\n    {\n        /// <summary>\n        /// x\u3068y\u3092\u5165\u308c\u66ff\u3048\u308b\n        /// </summary>\n        /// <typeparam name=\"T\"></typeparam>\n        /// <param name=\"x\"></param>\n        /// <param name=\"y\"></param>\n        static void Swap<T>(ref T x, ref T y)\n        {\n            T temp;\n            temp = x;\n            y = x;\n            x = temp;\n        }\n\n        public static void Test7()\n        {\n            int x = 1;\n            int y = 9;\n            Swap(ref x, ref y);\n        }\n    }\n\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n        [TestMethod]\n        public void TestMethod7()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                bool callSwap = false;\n                ClassLibrary1.Fakes.ShimClass7.SwapOf1M0RefM0Ref<int>((ref int x, ref int y) =>\n                {\n                    // \n                    callSwap = true;\n                    Assert.AreEqual(1, x);\n                    Assert.AreEqual(9, y);\n                    return;\n                });\n                ClassLibrary1.Class7.Test7();\n                Assert.AreEqual(true, callSwap);\n            }\n        }\n\n\n\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30af\u30e9\u30b9\u306e\u507d\u88c5\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30af\u30e9\u30b9\u306eShim\u3092\u4f7f\u3046\u306b\u306fShim\u30af\u30e9\u30b9\u540d<\u578b>\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u507d\u88c5\u5bfe\u8c61\n    public class Class8<K, V>\n    {\n        public K key {set; get;}\n        public V value { set; get; }\n\n        public void Log()\n        {\n            Console.WriteLine(key.ToString() + value.ToString());\n        }\n    }\n\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n       [TestMethod]\n        public void TestMethod8()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                bool callLog = false;\n\n                ClassLibrary1.Fakes.ShimClass8<int,string>.AllInstances.Log = (ClassLibrary1.Class8<int,string> obj) => \n                {\n                    // \n                    callLog = true;\n                };\n                var o = new ClassLibrary1.Class8<int, string>();\n                o.Log();\n                Assert.AreEqual(true, callLog);\n            }\n        }\n\n\n\n\u3069\u3046\u5229\u7528\u3059\u308b\u304b\uff1f\nShim\u306f\u5f37\u529b\u306a\u30c4\u30fc\u30eb\u3067\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u591a\u304f\u306e\u30b3\u30fc\u30c9\u3092\u901a\u3059\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u3001\u30ab\u30d0\u30ec\u30c3\u30b8\u3082100%\u8fd1\u304f\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3057\u304b\u3057\u3001\u9069\u5207\u306b\u5b9f\u884c\u304c\u691c\u8a3c\u3055\u308c\u306a\u3044\u30c6\u30b9\u30c8\u306f\u3001\u7121\u610f\u5473\u3067\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u3053\u306e\u5f37\u529b\u306a\u30c4\u30fc\u30eb\u3092\u3069\u3046\u5229\u7528\u3057\u3066\u30b3\u30fc\u30c9\u306e\u691c\u8a3c\u3092\u884c\u3046\u304b\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3084Shim\u3092\u5b9f\u884c\u3057\u305f\u969b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\nShim\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u3067\u3001\u6e21\u3055\u308c\u305f\u5024\u304c\u671f\u5f85\u5024\u901a\u308a\u304b\uff1f\u5b9f\u884c\u6642\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u671f\u5f85\u901a\u308a\u306e\u72b6\u614b\u304b\u691c\u67fb\u3059\u3079\u304d\u3067\u3059\u3002\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                ClassLibrary1.Fakes.ShimClass1.AllInstances.CalInt32Int32 = (ClassLibrary1.Class1 obj, int x, int y) =>\n                {\n                    // c1.Cal(1, 2); \u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n                    Assert.AreEqual(1, x);\n                    Assert.AreEqual(2, y);\n                    // \u5b9f\u884c\u6642\u306eClass1.xxxx\u304c123\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n                    Assert.AreEqual(123, obj.xxxx);\n\n                    return 999999;\n                };\n            }\n\n\n\u5b9f\u884c\u56de\u6570\u307e\u305f\u306f\u5b9f\u884c\u3055\u308c\u305f\u304b\u5426\u304b\u306e\u691c\u67fb\u3092\u884c\u3046\nShim\u306e\u5b9f\u884c\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3068\u3059\u308b\u304b\u3001\u30d5\u30e9\u30b0\u3067\u7ba1\u7406\u3059\u308b\u3053\u3068\u306b\u3088\u308aShim\u304c\u671f\u5f85\u306e\u56de\u6570\u5b9f\u884c\u3055\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n        public void TestMethod10()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                int callCalCnt = 0;\n                ClassLibrary1.Fakes.ShimClass1.AllInstances.CalInt32Int32 = (ClassLibrary1.Class1 obj, int x, int y) =>\n                {\n                    // \u5b9f\u884c\u3057\u305f\u56de\u6570\u3092\u6570\u3048\u308b\n                    ++callCalCnt;\n                    return 999999;\n                };\n\n                var c2 = new ClassLibrary1.Class2();\n                var act = c2.CallCal();\n                Assert.AreEqual(1, callCalCnt, \"c1.Cal\u304c1\u56de\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\");\n            }\n        }\n\n\n\u8907\u6570\u56de\u5b9f\u884c\u3055\u308c\u308bShim\u306e\u5834\u5408\nShim\u304c\u8907\u6570\u56de\u5b9f\u884c\u3055\u308c\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30ea\u30b9\u30c8\u3067\u671f\u5f85\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3068Shim\u304c\u8fd4\u3059\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\n    public class Class11\n    {\n        private int x = 0;\n        private int Inc(int i)\n        {\n            x += i;\n            return x;\n        }\n\n        public int Test11()\n        {\n            int i = 0;\n            i = Inc(5);\n            i = Inc(i);\n            i = Inc(i);\n            return i;\n        }\n    }\n\n\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\n        class ShimIncData\n        {\n            public int expParam { set; get; }\n            public int returnVal { set; get; }\n        }\n\n        [TestMethod]\n        public void TestMethod11()\n        {\n            using (ShimsContext.Create())\n            {\n                int callIncCnt = 0;\n                var incShimDataList = new List<ShimIncData>();\n                incShimDataList.Add(new ShimIncData\n                {\n                    expParam = 5,\n                    returnVal = 6\n                });\n                incShimDataList.Add(new ShimIncData\n                {\n                    expParam = 6,\n                    returnVal = 7\n                });\n                incShimDataList.Add(new ShimIncData\n                {\n                    expParam = 7,\n                    returnVal = 8\n                });\n\n                ClassLibrary1.Fakes.ShimClass11.AllInstances.IncInt32 = (ClassLibrary1.Class11 obj, int i) =>\n                {\n                    // \u5b9f\u884c\u3057\u305f\u56de\u6570\u3092\u6570\u3048\u308b\n                    int ix = callIncCnt;\n                    ++callIncCnt;\n\n                    Assert.AreEqual(incShimDataList[ix].expParam, i);\n\n                    // \n                    return incShimDataList[ix].returnVal;\n                };\n\n                var o = new ClassLibrary1.Class11();\n                var act = o.Test11();\n\n                Assert.AreEqual(3, callIncCnt, \"Inc\u304c3\u56de\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\");\n                Assert.AreEqual(8, act);\n            }\n        }\n\n\n\u4eca\u56de\u306f\u56de\u6570\u3067\u8fd4\u3059\u5024\u3092\u66ff\u3048\u305f\u304c\u3001\u5206\u5c90\u3092\u4f5c\u3063\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\uff5e\u3060\u3063\u305f\u3089\uff5e\u3092\u8fd4\u3059\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3082\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u307e\u3068\u3081\nMicrosoft Fakes\u3092\u4f7f\u7528\u3059\u308b\u3068\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u4f9d\u5b58\u5148\u306e\u30b3\u30fc\u30c9\u3092\u507d\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306b\u624b\u3092\u52a0\u3048\u305a\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n#Microsoft Fakes\u3068\u306f\uff1f\n\u672c\u6765\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u306f\u307e\u3063\u3068\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u3001\u307e\u3063\u3068\u3046\u306a\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3067\u8a2d\u8a08\u3001\u5b9f\u88c5\u3059\u308c\u3070\u81ea\u7136\u3068\u30c6\u30b9\u30c8\u3057\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u6211\u3005\u306f\u697d\u5712\u306b\u306f\u4f4f\u3093\u3067\u3044\u306a\u3044\u306e\u3067\u3001\u3055\u307e\u3056\u307e\u306a\u7406\u7531\u3067\u540d\u72b6\u3057\u304c\u305f\u304d\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30fc\u30c9\u306f\u4f5c\u6210\u3055\u308c\u3001\u53b3\u3057\u3044\u9078\u629e\u80a2\u3092\u7a81\u304d\u4ed8\u3051\u3089\u308c\u307e\u3059\u3002\n\n\u9078\u629e\u2460\u3000\u30c8\u30e0\u30c7\u30de\u30eb\u30b3\u306e\u3088\u3046\u306a\u7ba1\u7406\u8005\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4fee\u6b63\u3059\u308b\u3088\u3046\u306a\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u5f15\u304d\u76f4\u3059\u3002\n\u9078\u629e\u2461\u3000\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3092\u7406\u89e3\u3057\u305f\u5897\u54e1\u304c\u6765\u3066\u52a9\u3051\u3066\u304f\u308c\u308b\u3002\n\u9078\u629e\u2462\u3000\u76f4\u305b\u306a\u3044\u3002\u73fe\u5b9f\u306f\u975e\u60c5\u3067\u3042\u308b\u3002\n\nMicrosoft Fakes\u306f\u3053\u306e\u3088\u3046\u306a\u975e\u60c5\u306a\u73fe\u5b9f\u3092\u7a81\u304d\u4ed8\u3051\u3089\u308c\u305f\u8005\u306b\u3068\u3063\u3066\u306e\u4e00\u52a9\u306b\u306a\u308a\u307e\u3059\u3002\n\nMicrosoftFakes\u306eShim\u6a5f\u80fd\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u8907\u96d1\u306b\u4f9d\u5b58\u3057\u305f\u6a5f\u80fd\u3092\u5207\u308a\u96e2\u3057\u3066\u7279\u5b9a\u306e\u7b87\u6240\u306e\u307f\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n![unit004.png](https://qiita-image-store.s3.amazonaws.com/0/47856/270e376f-8853-db30-5ee0-1617c97dd9b0.png)\n\n**Microsoft Fakes \u3092\u4f7f\u7528\u3057\u305f\u30c6\u30b9\u30c8\u3067\u306e\u30b3\u30fc\u30c9\u306e\u5206\u96e2**\nhttps://msdn.microsoft.com/ja-jp/library/hh549175.aspx\n\n\u305f\u3068\u3048\u3070\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084\u5225\u30b7\u30b9\u30c6\u30e0\u306b\u901a\u4fe1\u3059\u308b\u3088\u3046\u306a\u6a5f\u80fd\u306e\u30c6\u30b9\u30c8\u3067\u3042\u3063\u3066\u3082\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3084\u5225\u30b7\u30b9\u30c6\u30e0\u304c\u30c6\u30b9\u30c8\u306b\u90fd\u5408\u306e\u3044\u3044\u30c7\u30fc\u30bf\u3092\u8fd4\u3059\u3088\u3046\u306b\u507d\u88c5\u3067\u304d\u307e\u3059\u3002\n\n\u305f\u3068\u3048\u3070\u3001\u73fe\u5728\u6642\u523b\u306b\u4f9d\u5b58\u3057\u305f\u30c6\u30b9\u30c8\u5bfe\u8c61\u3084\u3001\u30e6\u30fc\u30b6\u540d\u306b\u4f9d\u5b58\u3057\u305f\u3082\u306e\u3067\u3082\u30c6\u30b9\u30c8\u306b\u90fd\u5408\u306e\u3044\u3044\u73fe\u5728\u6642\u523b\u3084\u30e6\u30fc\u30b6\u540d\u3092\u507d\u88c5\u3057\u3066\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u308c\u306b\u3088\u308a\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306b\u624b\u3092\u52a0\u3048\u308b\u3053\u3068\u306a\u304f\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u305f\u3060\u3057\u3001VisualStudio2013\u3067\u306fPremiume\u4ee5\u4e0a\u3001VisualStudio2015\u3067\u306fEnterprise\u306e\u30a8\u30c7\u30a3\u30b7\u30e7\u30f3\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u307e\u305f\u57fa\u672c\u7684\u306aVisualStudio\u3067\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u66f8\u304d\u65b9\u306f\u4e0b\u8a18\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nhttp://qiita.com/mima_ita/items/55394bcc851eb8b6dc24\n\n#Microsoft Fakes\u3092\u8a66\u3059\n##\u74b0\u5883\u69cb\u7bc9\nVisualStudioEnterprise\u306f\u4e0b\u8a18\u306e\u30da\u30fc\u30b8\u304b\u3089\u7121\u6599\u8a66\u7528\u7248\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nhttps://www.visualstudio.com/ja/downloads/\n\n\u306a\u304a\u300175\u4e07\u5186\u304f\u3089\u3044\u3059\u308b\u306e\u3067\u306a\u304b\u306a\u304b\u30cf\u30fc\u30c9\u30eb\u304c\u9ad8\u3044\u3067\u3059\u3002\n\n\n##\u7c21\u5358\u306a\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\n(1)\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u6210\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u7528\u610f\u3059\u308b\n![unit001.png](https://qiita-image-store.s3.amazonaws.com/0/47856/333cbecf-2587-023b-bc60-124509d737eb.png)\n\n|\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d|\u8aac\u660e|\n|:--|:--|\n|ClassLibrary1|\u30c6\u30b9\u30c8\u5bfe\u8c61|\n|UnitTestProject1|\u30c6\u30b9\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0|\n\n```csharp:\u30c6\u30b9\u30c8\u5bfe\u8c61\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ClassLibrary1\n{\n    public class Class1\n    {\n        private int a;\n        public Class1(int a)\n        {\n            this.a = a;\n        }\n        public int Cal(int x, int y)\n        {\n            return a + x + y;\n        }\n\n    }\n\n    public class Class2\n    {\n        Class1 c1 = new Class1(5);\n        public int CallCal()\n        {\n            return c1.Cal(1, 2);\n        }\n    }\n}\n```\n\n(2)\u30c6\u30b9\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u53c2\u7167\u304b\u3089\u507d\u88c5\u3057\u305f\u3044\u30a2\u30bb\u30f3\u30d6\u30ea\u3092\u9078\u629e\u3057\u3066\u53f3\u30af\u30ea\u30c3\u30af\u3092\u3057\u3066\u300cFakes\u30a2\u30bb\u30f3\u30d6\u30ea\u306b\u8ffd\u52a0\u300d\u3092\u5b9f\u884c\u3059\u308b\u3002\n![unit002.png](https://qiita-image-store.s3.amazonaws.com/0/47856/cdc4677f-6c49-25b2-2ec5-72fa3ff749d7.png)\n\n(3)Fakes\u30d5\u30a9\u30eb\u30c0\u306b\u62e1\u5f35\u5b50\u304cfakes\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n![unit003.png](https://qiita-image-store.s3.amazonaws.com/0/47856/a8eb4b5f-c9c3-0d5c-aab2-a3330916e5e9.png)\n\n\u69cb\u6210\u7ba1\u7406\u306b\u3042\u3052\u308b\u5834\u5408\u306f\u3001\u3053\u306efakes\u30d5\u30a1\u30a4\u30eb\u3092\u4e0a\u3052\u308b\u3053\u3068\u3002\n\n(4)\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u5b9f\u88c5\n\n```csharp:\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u4f8b\nusing System;\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\nusing Microsoft.QualityTools.Testing.Fakes;\n\nnamespace UnitTestProject1\n{\n    [TestClass]\n    public class UnitTest1\n    {\n        [TestMethod]\n        public void TestMethod1()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                var c2 = new ClassLibrary1.Class2();\n\n                ClassLibrary1.Fakes.ShimClass1.AllInstances.CalInt32Int32 = (ClassLibrary1.Class1 obj, int x, int y) =>\n                {\n                    // c1.Cal(1, 2); \u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n                    Assert.AreEqual(c2.c1, obj);\n                    Assert.AreEqual(1, x);\n                    Assert.AreEqual(2, y);\n\n                    return 999999;\n                };\n\n                var act = c2.CallCal();\n\n                // Shim\u3067\u507d\u88c5\u3057\u305f\u5024\u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u3002\n                Assert.AreEqual(999999, act);\n            }\n        }\n    }\n}\n```\n\n(5)\u30c6\u30b9\u30c8\u3092\u5b9f\u65bd\u3059\u308b\u3068Shim\u3067\u507d\u88c5\u3057\u305f\u5024\u304c\u53d6\u5f97\u3067\u304d\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\n##Shim\u306e\u4f7f\u3044\u65b9\n\n###Shim\u306e\u5bfe\u8c61\npublic/private/protected\u306e\u3042\u3089\u3086\u308b\u30b9\u30b3\u30fc\u30d7\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u507d\u88c5\u3067\u304d\u308b\u304c\u3001private\u306e\u5185\u90e8\u30af\u30e9\u30b9\u3084\u578b\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3082\u3057\u304f\u306f\u623b\u308a\u5024\u306b\u3059\u308b\u95a2\u6570\u306f\u507d\u88c5\u306f\u3067\u304d\u306a\u3044\u3002\n\n```csharp:\u507d\u88c5\u5bfe\u8c61\u306e\u30af\u30e9\u30b9\n    public class Class3\n    {\n        public int test1()\n        {\n            return 1;\n        }\n\n        public static int test2()\n        {\n            return 2;\n        }\n        private int test3()\n        {\n            return 3;\n        }\n        protected int test4()\n        {\n            return 5;\n        }\n\n        public class Test5Ret\n        {\n        }\n\n        private Test5Ret test5()\n        {\n            return new Test5Ret();\n        }\n\n        private class Test6Ret\n        { }\n\n        // \u30d1\u30e9\u30e1\u30fc\u30bf\u307e\u305f\u306f\u623b\u308a\u5024\u304c\u516c\u958b\u3055\u308c\u305f\u578b\u3067\u306a\u3044\u306e\u3067\u507d\u88c5\u304c\u3067\u304d\u306a\u3044\u3002\n        private Test6Ret test6()\n        {\n            return new Test6Ret();\n        }\n    }\n```\n\n```csharp:Shim\u306b\u3088\u308b\u507d\u88c5\u306e\u65b9\u6cd5\n        [TestMethod]\n        public void TestMethod4()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                var c2 = new ClassLibrary1.Class2();\n\n                ClassLibrary1.Fakes.ShimClass3.AllInstances.test1 = (ClassLibrary1.Class3 obj) =>\n                {\n                    return 11;\n                };\n\n                ClassLibrary1.Fakes.ShimClass3.test2 = () =>\n                {\n                    return 22;\n                };\n\n                ClassLibrary1.Fakes.ShimClass3.AllInstances.test3 = (ClassLibrary1.Class3 obj) =>\n                {\n                    return 33;\n                };\n\n                ClassLibrary1.Fakes.ShimClass3.AllInstances.test4 = (ClassLibrary1.Class3 obj) =>\n                {\n                    return 44;\n                };\n\n                ClassLibrary1.Fakes.ShimClass3.AllInstances.test5 = (ClassLibrary1.Class3 obj) =>\n                {\n                    return null;\n                };\n\n                //\u3053\u308c\u306f\u4f5c\u3089\u308c\u306a\u3044\u3002\n                //ClassLibrary1.Fakes.ShimClass3.AllInstances.test6 = (ClassLibrary1.Class3 obj) =>\n                //{\n                //    return null;\n                //};\n\n\n            }\n        }\n```\n\n\n###Shim\u306e\u95a2\u6570\u540d\u306e\u4f5c\u6210\u30eb\u30fc\u30eb\n\u507d\u88c5\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u547d\u540d\u898f\u5247\u3067\u4f5c\u6210\u3055\u308c\u308b\u3002\n\n**\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\uff1a**\n\u3010\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u540d\u524d\u7a7a\u9593\u3011.Fakes..Shim\u3010\u30af\u30e9\u30b9\u540d\u3011.AllInstances.\u3010\u95a2\u6570\u540d\u3011\u3010\u30d1\u30e9\u30e1\u30fc\u30bf1\u306e\u578b\u3011\u3010\u30d1\u30e9\u30e1\u30fc\u30bf2\u306e\u578b\u3011..\u3010\u30d1\u30e9\u30e1\u30fc\u30bfn\u306e\u578b\u3011(\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9,\u30d1\u30e9\u30e1\u30fc\u30bf1,\u30d1\u30e9\u30e1\u30fc\u30bf2...)\n\n**\u30b9\u30bf\u30c6\u30a3\u30c3\u30af\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\uff1a**\n\u3010\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u540d\u524d\u7a7a\u9593\u3011.Fakes..Shim\u3010\u30af\u30e9\u30b9\u540d\u3011..\u3010\u95a2\u6570\u540d\u3011\u3010\u30d1\u30e9\u30e1\u30fc\u30bf1\u306e\u578b]\u3010\u30d1\u30e9\u30e1\u30fc\u30bf2\u306e\u578b\u3011..\u3010\u30d1\u30e9\u30e1\u30fc\u30bfn\u306e\u578b\u3011(\u30d1\u30e9\u30e1\u30fc\u30bf1,\u30d1\u30e9\u30e1\u30fc\u30bf2...)\n\n**\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5834\u5408\uff1a**\n\u3010\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u540d\u524d\u7a7a\u9593\u3011.Fakes..Shim\u3010\u30af\u30e9\u30b9\u540d\u3011.AllInstances.Get\u3010\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3011(\u30af\u30e9\u30b9)\n\u3010\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u540d\u524d\u7a7a\u9593\u3011.Fakes..Shim\u3010\u30af\u30e9\u30b9\u540d\u3011.AllInstances.Set\u3010\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3011\u3010\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u578b\u3011(\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9,\u30d1\u30e9\u30e1\u30fc\u30bf)\n\n\n\u507d\u88c5\u5bfe\u8c61\u306e\u95a2\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u6570\u5206\u3060\u3051\u540d\u79f0\u304c\u306a\u304c\u304f\u306a\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3002\n\u53e4\u3044VS2012\u3060\u3068\u9577\u3059\u304e\u308b\u3068\u507d\u88c5\u7528\u306e\u95a2\u6570\u304c\u4f5c\u6210\u3055\u308c\u306a\u3044\u3002\uff08256\u3042\u305f\u308a\uff1f\uff09\nVS2015\u3060\u3068\u3001\u5f8c\u65b9\u306e\u6587\u5b57\u3092\u5207\u3063\u3066\u9069\u6b63\u306a\u6587\u5b57\u306b\u5909\u63db\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\n###\u73fe\u5728\u65e5\u4ed8\u306e\u507d\u88c5\n\u73fe\u5728\u65e5\u4ed8\u306f\u30c6\u30b9\u30c8\u3092\u3059\u308b\u3046\u3048\u3067\u3084\u3063\u304b\u3044\u3060\u304c\u3001\u3053\u308c\u3082\u507d\u88c5\u3067\u304d\u308b\u3002\n\n(1)System.dll\u306efakes\u30a2\u30bb\u30f3\u30d6\u30ea\u3092\u8ffd\u52a0\u3059\u308b\u3002\n![unit005.png](https://qiita-image-store.s3.amazonaws.com/0/47856/98bb1768-632a-872f-58a5-3c8bd6846fbd.png)\n\n![unit006.png](https://qiita-image-store.s3.amazonaws.com/0/47856/bc00a29e-9971-272f-6b19-f4d9950d9fce.png)\n\n\n(2)System.DateTime.Now\u3092\u507d\u88c5\u3059\u308b\u3002\n\n```csharp\n        [TestMethod]\n        public void TestMethod2()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                DateTime exp = new DateTime(2000, 10, 5);\n                System.Fakes.ShimDateTime.NowGet = () =>\n                {\n                    return exp;\n                };\n\n                var act = System.DateTime.Now;\n\n                Assert.AreEqual(exp, act);\n            }\n        }\n```\n\n###\u73fe\u5728\u30e6\u30fc\u30b6\u3084\u30de\u30b7\u30f3\u540d\u306a\u3069\u306eSysetem.Environment\u3092\u507d\u88c5\u3059\u308b\u3002\n(1)Fakes\u30d5\u30a9\u30eb\u30c0\u306e\u300cmscorlib.fakes\u300d\u3092\u958b\u304f\n![unit007.png](https://qiita-image-store.s3.amazonaws.com/0/47856/4b9a303c-a086-01a0-55b4-7bd3786e1319.png)\n\n(2)ShimGeneration\u306bSystem.Environment\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n```xml\n<Fakes xmlns=\"http://schemas.microsoft.com/fakes/2011/\">\n  <Assembly Name=\"mscorlib\" Version=\"4.0.0.0\"/>\n  <ShimGeneration>\n    <Add FullName=\"System.Environment\"/>\n  </ShimGeneration>  \n</Fakes>\n```\n(3)\u30ea\u30d3\u30eb\u30c9\u3092\u884c\u3046\u3002\n\n(4)\u4e0b\u8a18\u306e\u3088\u3046\u306b\u507d\u88c5\u3092\u884c\u3046\u3002\n\n```csharp\n\n        [TestMethod]\n        public void TestMethod3()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                System.Fakes.ShimEnvironment.UserNameGet = () =>\n                {\n                    return \"user\";\n                };\n                System.Fakes.ShimEnvironment.MachineNameGet = () =>\n                {\n                    return \"machine\";\n                };\n\n                Assert.AreEqual(\"user\", Environment.UserName);\n                Assert.AreEqual(\"machine\", Environment.MachineName);\n            }\n        }\n```\n\n###\u5185\u90e8\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u507d\u88c5\n\u5185\u90e8\u30af\u30e9\u30b9\u306fShim\u89aa\u30af\u30e9\u30b9\u540d.Shim\u5185\u90e8\u30af\u30e9\u30b9\u540d\u3068\u3044\u3046\u5f62\u3067\u507d\u88c5\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\n\n```csharp:\u5185\u90e8\u30af\u30e9\u30b9\n    public class Class5\n    {\n        public class Class5Inner\n        {\n            public int Test5Inner()\n            {\n                return 5;\n            }\n        }\n    }\n```\n\n```csharp:\u5185\u90e8\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u507d\u88c5\n        [TestMethod]\n        public void TestMethod5()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                ClassLibrary1.Fakes.ShimClass5.ShimClass5Inner.AllInstances.Test5Inner = (ClassLibrary1.Class5.Class5Inner obj) =>\n                {\n                    return 99;\n                };\n                var o = new ClassLibrary1.Class5.Class5Inner();\n                Assert.AreEqual(99, o.Test5Inner());\n            }\n        }\n```\n\n###\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u507d\u88c5\n\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u306e\u507d\u88c5\u306f\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u81ea\u4f53\u3092\u507d\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u7d99\u627f\u5148\u306eShim\u306b\u306f\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u5b58\u5728\u3057\u306a\u3044\u3002\n\n```csharp:\u30c6\u30b9\u30c8\u5bfe\u8c61\n    public class Class6Base\n    {\n        protected int Test6Base()\n        {\n            return 6;\n        }\n    }\n\n    public class Class6: Class6Base\n    {\n        public int Test6BasePlus1()\n        {\n            return base.Test6Base() + 1;\n        }\n    }\n```\n\n```csharp:\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n        [TestMethod]\n        public void TestMethod6()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                ClassLibrary1.Fakes.ShimClass6Base.AllInstances.Test6Base = (ClassLibrary1.Class6Base obj) =>\n                {\n                    return 99;\n                };\n                var o = new ClassLibrary1.Class6();\n                Assert.AreEqual(100, o.Test6BasePlus1());\n            }\n        }\n```\n\n###\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u507d\u88c5\u65b9\u6cd5\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u507d\u88c5\u65b9\u6cd5\u306f\u578b\u3092\u6307\u5b9a\u3057\u305fShim\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n```csharp:\u30c6\u30b9\u30c8\u5bfe\u8c61\n    public static class Class7\n    {\n        /// <summary>\n        /// x\u3068y\u3092\u5165\u308c\u66ff\u3048\u308b\n        /// </summary>\n        /// <typeparam name=\"T\"></typeparam>\n        /// <param name=\"x\"></param>\n        /// <param name=\"y\"></param>\n        static void Swap<T>(ref T x, ref T y)\n        {\n            T temp;\n            temp = x;\n            y = x;\n            x = temp;\n        }\n\n        public static void Test7()\n        {\n            int x = 1;\n            int y = 9;\n            Swap(ref x, ref y);\n        }\n    }\n```\n\n```csharp:\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n        [TestMethod]\n        public void TestMethod7()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                bool callSwap = false;\n                ClassLibrary1.Fakes.ShimClass7.SwapOf1M0RefM0Ref<int>((ref int x, ref int y) =>\n                {\n                    // \n                    callSwap = true;\n                    Assert.AreEqual(1, x);\n                    Assert.AreEqual(9, y);\n                    return;\n                });\n                ClassLibrary1.Class7.Test7();\n                Assert.AreEqual(true, callSwap);\n            }\n        }\n```\n\n###\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30af\u30e9\u30b9\u306e\u507d\u88c5\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30af\u30e9\u30b9\u306eShim\u3092\u4f7f\u3046\u306b\u306fShim\u30af\u30e9\u30b9\u540d<\u578b>\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n```csharp:\u507d\u88c5\u5bfe\u8c61\n    public class Class8<K, V>\n    {\n        public K key {set; get;}\n        public V value { set; get; }\n\n        public void Log()\n        {\n            Console.WriteLine(key.ToString() + value.ToString());\n        }\n    }\n```\n\n```csharp:\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n       [TestMethod]\n        public void TestMethod8()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                bool callLog = false;\n\n                ClassLibrary1.Fakes.ShimClass8<int,string>.AllInstances.Log = (ClassLibrary1.Class8<int,string> obj) => \n                {\n                    // \n                    callLog = true;\n                };\n                var o = new ClassLibrary1.Class8<int, string>();\n                o.Log();\n                Assert.AreEqual(true, callLog);\n            }\n        }\n```\n\n##\u3069\u3046\u5229\u7528\u3059\u308b\u304b\uff1f\nShim\u306f\u5f37\u529b\u306a\u30c4\u30fc\u30eb\u3067\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u591a\u304f\u306e\u30b3\u30fc\u30c9\u3092\u901a\u3059\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u3001\u30ab\u30d0\u30ec\u30c3\u30b8\u3082100%\u8fd1\u304f\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u3057\u304b\u3057\u3001\u9069\u5207\u306b\u5b9f\u884c\u304c\u691c\u8a3c\u3055\u308c\u306a\u3044\u30c6\u30b9\u30c8\u306f\u3001\u7121\u610f\u5473\u3067\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u3053\u306e\u5f37\u529b\u306a\u30c4\u30fc\u30eb\u3092\u3069\u3046\u5229\u7528\u3057\u3066\u30b3\u30fc\u30c9\u306e\u691c\u8a3c\u3092\u884c\u3046\u304b\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\n###\u30d1\u30e9\u30e1\u30fc\u30bf\u3084Shim\u3092\u5b9f\u884c\u3057\u305f\u969b\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\nShim\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u3067\u3001\u6e21\u3055\u308c\u305f\u5024\u304c\u671f\u5f85\u5024\u901a\u308a\u304b\uff1f\u5b9f\u884c\u6642\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u671f\u5f85\u901a\u308a\u306e\u72b6\u614b\u304b\u691c\u67fb\u3059\u3079\u304d\u3067\u3059\u3002\n\n```csharp\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                ClassLibrary1.Fakes.ShimClass1.AllInstances.CalInt32Int32 = (ClassLibrary1.Class1 obj, int x, int y) =>\n                {\n                    // c1.Cal(1, 2); \u304c\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n                    Assert.AreEqual(1, x);\n                    Assert.AreEqual(2, y);\n                    // \u5b9f\u884c\u6642\u306eClass1.xxxx\u304c123\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n                    Assert.AreEqual(123, obj.xxxx);\n\n                    return 999999;\n                };\n            }\n```\n\n###\u5b9f\u884c\u56de\u6570\u307e\u305f\u306f\u5b9f\u884c\u3055\u308c\u305f\u304b\u5426\u304b\u306e\u691c\u67fb\u3092\u884c\u3046\nShim\u306e\u5b9f\u884c\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3068\u3059\u308b\u304b\u3001\u30d5\u30e9\u30b0\u3067\u7ba1\u7406\u3059\u308b\u3053\u3068\u306b\u3088\u308aShim\u304c\u671f\u5f85\u306e\u56de\u6570\u5b9f\u884c\u3055\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```csharp\n        public void TestMethod10()\n        {\n            // ShimsContext\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306e\u307f\u507d\u88c5\u3059\u308b\u3002\n            using (ShimsContext.Create())\n            {\n                int callCalCnt = 0;\n                ClassLibrary1.Fakes.ShimClass1.AllInstances.CalInt32Int32 = (ClassLibrary1.Class1 obj, int x, int y) =>\n                {\n                    // \u5b9f\u884c\u3057\u305f\u56de\u6570\u3092\u6570\u3048\u308b\n                    ++callCalCnt;\n                    return 999999;\n                };\n\n                var c2 = new ClassLibrary1.Class2();\n                var act = c2.CallCal();\n                Assert.AreEqual(1, callCalCnt, \"c1.Cal\u304c1\u56de\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\");\n            }\n        }\n```\n\n###\u8907\u6570\u56de\u5b9f\u884c\u3055\u308c\u308bShim\u306e\u5834\u5408\nShim\u304c\u8907\u6570\u56de\u5b9f\u884c\u3055\u308c\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30ea\u30b9\u30c8\u3067\u671f\u5f85\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3068Shim\u304c\u8fd4\u3059\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```csharp:\u30c6\u30b9\u30c8\u5bfe\u8c61\n    public class Class11\n    {\n        private int x = 0;\n        private int Inc(int i)\n        {\n            x += i;\n            return x;\n        }\n\n        public int Test11()\n        {\n            int i = 0;\n            i = Inc(5);\n            i = Inc(i);\n            i = Inc(i);\n            return i;\n        }\n    }\n```\n\n```csharp:\u30c6\u30b9\u30c8\u5bfe\u8c61\n        class ShimIncData\n        {\n            public int expParam { set; get; }\n            public int returnVal { set; get; }\n        }\n\n        [TestMethod]\n        public void TestMethod11()\n        {\n            using (ShimsContext.Create())\n            {\n                int callIncCnt = 0;\n                var incShimDataList = new List<ShimIncData>();\n                incShimDataList.Add(new ShimIncData\n                {\n                    expParam = 5,\n                    returnVal = 6\n                });\n                incShimDataList.Add(new ShimIncData\n                {\n                    expParam = 6,\n                    returnVal = 7\n                });\n                incShimDataList.Add(new ShimIncData\n                {\n                    expParam = 7,\n                    returnVal = 8\n                });\n\n                ClassLibrary1.Fakes.ShimClass11.AllInstances.IncInt32 = (ClassLibrary1.Class11 obj, int i) =>\n                {\n                    // \u5b9f\u884c\u3057\u305f\u56de\u6570\u3092\u6570\u3048\u308b\n                    int ix = callIncCnt;\n                    ++callIncCnt;\n\n                    Assert.AreEqual(incShimDataList[ix].expParam, i);\n\n                    // \n                    return incShimDataList[ix].returnVal;\n                };\n\n                var o = new ClassLibrary1.Class11();\n                var act = o.Test11();\n\n                Assert.AreEqual(3, callIncCnt, \"Inc\u304c3\u56de\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\");\n                Assert.AreEqual(8, act);\n            }\n        }\n```\n\n\u4eca\u56de\u306f\u56de\u6570\u3067\u8fd4\u3059\u5024\u3092\u66ff\u3048\u305f\u304c\u3001\u5206\u5c90\u3092\u4f5c\u3063\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\uff5e\u3060\u3063\u305f\u3089\uff5e\u3092\u8fd4\u3059\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3082\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n#\u307e\u3068\u3081\nMicrosoft Fakes\u3092\u4f7f\u7528\u3059\u308b\u3068\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u4f9d\u5b58\u5148\u306e\u30b3\u30fc\u30c9\u3092\u507d\u88c5\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306b\u624b\u3092\u52a0\u3048\u305a\u306b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n", "tags": [".NET", "C#", "TDD"]}