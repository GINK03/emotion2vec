{"context": " More than 1 year has passed since last update.GitHub\u304c\u4f5c\u3063\u305f\u30c1\u30e3\u30c3\u30c8\u306ebot\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3001Hubot\u3092\u4f7f\u3063\u3066\u307f\u308b(Mac)\u3002\n\u3053\u308c\u304c\u3042\u308c\u3070\u3044\u308d\u3093\u306a\u30c1\u30e3\u30c3\u30c8\u30c4\u30fc\u30eb\u306bbot\u3092\u5c0e\u5165\u3067\u304d\u308b\uff01\n\u3053\u3053\u3067\u306f\u3001Hubot\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u5404\u7a2e\u6a5f\u80fd\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u88c5\u306e\u8aac\u660e\u3092\u3059\u308b\u3002\n\u5404\u7a2e\u30c1\u30e3\u30c3\u30c8\u30c4\u30fc\u30eb\u3068\u306e\u9023\u643a\u65b9\u6cd5\u3084Heroku\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u65b9\u6cd5\u306a\u3069\u306f\u30b3\u30b3\u3067\u306f\u8aac\u660e\u3057\u306a\u3044\u3002\n\nHubot\u306e\u69cb\u9020\nHubot\u306f\u4ee5\u4e0b\u306e\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u308b\n[\u30c1\u30e3\u30c3\u30c8\u30c4\u30fc\u30eb]\n\u3000\u2191\u2193\n[Adapter] : \u30c1\u30e3\u30c3\u30c8\u30c4\u30fc\u30eb\u3068Robot\u3068\u306e\u6a4b\u6e21\u3057\u3002\u3053\u3053\u3092\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u3067\u3044\u308d\u3093\u306a\u30c1\u30e3\u30c3\u30c8\u30c4\u30fc\u30eb\u306b\u5bfe\u5fdc\u53ef\u80fd\u3002\n\u3000\u2191\u2193\n[Robot]\uff1aHubot\u672c\u4f53\u3002\n\u3000\u2191\u2193\n[scripts]\uff1abot\u306e\u6319\u52d5\u3092\u5b9f\u88c5\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3002CoffeeScript\u3067\u66f8\u304f\u3002\n\nHubot\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nHubot\u306fnode.js\u3067\u52d5\u304f\u306e\u3067\u3001\u307e\u305anode.js\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002(node.js\u53c2\u8003)\n$ brew install node\n\n\u305d\u3057\u3066Hubot\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\nnpm\u306fnode.js\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406\u30c4\u30fc\u30eb\u3067\u3001node.js\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\nyo\u306f\u5bfe\u8a71\u5f62\u5f0f\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u3072\u306a\u5f62\u3092\u751f\u6210\u3059\u308bYeoman\u3068\u3044\u3046\u30c4\u30fc\u30eb\u3092\u69cb\u6210\u3059\u308b\u3082\u306e\u306e\u4e00\u3064\u3002(Yeoman\u53c2\u8003)\n$ npm install -g yo generator-hubot\n\n\u4efb\u610f\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n$ mkdir myhubot\n$ cd myhubot\n$ yo hubot\n\n\u307e\u305a\u3001yeoman\u6539\u5584\u306e\u305f\u3081\u306b\u533f\u540d\u3067\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u53ce\u96c6\u3057\u3066\u3044\u3044\u304b\u805e\u304b\u308c\u308b\u306e\u3067y/n\u3067\u304a\u8fd4\u4e8b\u3002\n[?] ==========================================================================\nWe're constantly looking for ways to make yo better!\nMay we anonymously report usage statistics to improve the tool over time?\nMore info: https://github.com/yeoman/insight & http://yeoman.io\n==========================================================================:\n\n\u305d\u306e\u5f8c\u3001\u5bfe\u8a71\u5f62\u5f0f\u3067\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u306a\u308b\u3002\u4ee5\u4e0b\u306b\u7b54\u3048\u308b\u3002\n\u306f\u3058\u3081\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u30ab\u30c3\u30b3\u66f8\u304d\u3067\u5165\u3063\u3066\u308b\u3051\u3069\u3001\u4f55\u304b\u5165\u529b\u3057\u305f\u3089\u305d\u3061\u3089\u306b\u4e0a\u66f8\u304d\u3055\u308c\u308b\u3002\n\n\u88fd\u4f5c\u8005\u540d\nbot\u306e\u540d\u524d\nbot\u306e\u8aac\u660e\nAdapter\u306b\u4f55\u3092\u4f7f\u3046\u304b(\u3069\u306e\u30c1\u30e3\u30c3\u30c8\u30c4\u30fc\u30eb\u5411\u3051\u306b\u4f5c\u308b\u304b)\n\nadapter\u306f\u3001irc twitter hipchat chatwork slack \u306a\u3069\u304c\u3042\u308b\u307f\u305f\u3044\u3002\n                     _____________________________\n                    /                             \\\n   //\\              |      Extracting input for    |\n  ////\\    _____    |   self-replication process   |\n //////\\  /_____\\   \\                             /\n ======= |[^_/\\_]|   /----------------------------\n  |   | _|___@@__|__\n  +===+/  ///     \\_\\\n   | |_\\ /// HUBOT/\\\\\n   |___/\\//      /  \\\\\n         \\      /   +---+\n          \\____/    |   |\n           | //|    +===+\n            \\//      |xx|\n\n? Owner: kta-m\n? Bot name: myhubot\n? Description: my first hubot\n? Bot adapter: slack\n   create bin/hubot\n   create bin/hubot.cmd\n   create Procfile\n   create README.md\n   create external-scripts.json\n   create hubot-scripts.json\n   create .gitignore\n   create package.json\n   create scripts/example.coffee\n   create .editorconfig\n                     _____________________________\n _____              /                             \\\n \\    \\             |   Self-replication process   |\n |    |    _____    |          complete...         |\n |__\\\\|   /_____\\   \\     Good luck with that.    /\n   |//+  |[^_/\\_]|   /----------------------------\n  |   | _|___@@__|__\n  +===+/  ///     \\_\\\n   | |_\\ /// HUBOT/\\\\\n   |___/\\//      /  \\\\\n         \\      /   +---+\n          \\____/    |   |\n           | //|    +===+\n            \\//      |xx|\n\n\u3042\u3068\u306f\u3044\u3044\u611f\u3058\u306b\u3044\u308d\u3044\u308d\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u308c\u308b\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u8a66\u3057\u306b\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n$ bin/hubot --name myhubot\n\nwarning\u304c\u3044\u304f\u3064\u304b\u51fa\u308b\u304b\u3082\u3060\u3051\u3069\u3001\u6c17\u306b\u305b\u305ahubot\u306b\u8a9e\u308a\u304b\u3051\u3066\u307f\u308b\u3002\n\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u306e\u304c\u9762\u5012\u306a\u3089\u3001--name\u306f\u4ed8\u3051\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3002\u305f\u3060\u3001\u305d\u306e\u5834\u5408\u306fhubot\u3067\u547c\u3073\u304b\u3051\u306a\u3044\u3068\u53cd\u5fdc\u3057\u3066\u304f\u308c\u306a\u3044\u3002\nHubot> hubot ping\nHubot> PONG\n\n\u4ed6\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3067\u304d\u308b\u3053\u3068\u306fhelp\u30b3\u30de\u30f3\u30c9\u3067\u898b\u308c\u308b\u3002\nHubot> hubot help\nHubot> Events:\ndebug - {user: <user object to send message to>}\nHubot <user> is a badass guitarist - assign a role to a user\nHubot <user> is not a badass guitarist - remove a role from a user\nHubot animate me <query> - The same thing as `image me`, except adds a few parameters to try to return an animated GIF instead.\nHubot die - End Hubot process\nHubot die - End Hubot process\nHubot echo <text> - Reply back with <text>\nHubot echo <text> - Reply back with <text>\nHubot fake event <event> - Triggers the <event> event for debugging reasons\nHubot help - Displays all of the help commands that Hubot knows about.\nHubot help <query> - Displays all help commands that match <query>.\nHubot image me <query> - The Original. Queries Google Images for <query> and returns a random top result.\nHubot map me <query> - Returns a map view of the area returned by `query`.\nHubot mustache me <query> - Searches Google Images for the specified query and mustaches it.\nHubot mustache me <url> - Adds a mustache to the specified URL.\nHubot ping - Reply with pong\nHubot ping - Reply with pong\nHubot pug bomb N - get N pugs\nHubot pug me - Receive a pug\nHubot show storage - Display the contents that are persisted in the brain\nHubot show users - Display all users that Hubot knows about\nHubot the rules - Make sure Hubot still knows the rules.\nHubot time - Reply with current time\nHubot time - Reply with current time\nHubot translate me <phrase> - Searches for a translation for the <phrase> and then prints that bad boy out.\nHubot translate me from <source> into <target> <phrase> - Translates <phrase> from <source> into <target>. Both <source> and <target> are optional\nHubot who is <user> - see what roles a user has\nHubot youtube me <query> - Searches YouTube for the query and returns the video embed link.\nship it - Display a motivation squirrel\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u304f\n\u72ec\u81ea\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3001scripts\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5165\u308c\u308b\u3002\n\n\u547c\u3073\u304b\u3051\u306b\u5fdc\u3048\u308b(respond)\n\u660e\u793a\u7684\u306bhubot\u306b\u5bfe\u3057\u3066\u547c\u3073\u304b\u3051\u3092\u884c\u306a\u3063\u305f\u3068\u304d\u306b\u53cd\u5fdc\u3059\u308b\u3002\n\u547c\u3073\u304b\u3051\u5185\u5bb9\u306f\u6b63\u898f\u8868\u73fe\u3067\u5224\u5225\u3002\u30de\u30c3\u30c1\u3057\u305f\u7b87\u6240\u3082\u53d6\u5f97\u3067\u304d\u308b\u3002\n\u547c\u3073\u304b\u3051\u65b9\u6cd5\u306f\u3044\u308d\u3044\u308d\u3042\u3063\u3066\u3001\u3069\u308c\u3067\u3082OK\u3002\nMYHUBOT xxx\nmyhubot xxx\n@myhubot xxx\nmyhubot: xxx\n\n\n\u5b9f\u88c5\n\nhoge.coffee\nmodule.exports = (robot) ->\n\n  robot.respond /\u3064\u30fc/i, (msg) ->\n    msg.send \"\u304b\u30fc\"\n\n  # \u6b63\u898f\u8868\u73fe\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3057\u305f\u90e8\u5206\u306e\u53d6\u5f97\u3082\u3067\u304d\u308b\n  robot.respond /I am (.*)/i, (msg) ->\n    msg.send \"Hi, #{msg.match[1]}\"\n\n  # msg.random\u3067\u914d\u5217\u306e\u6587\u5b57\u5217\u306e\u4e2d\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u629e\u3057\u3066\u767a\u8a00\u3059\u308b\n  robot.respond /\u304a\u307f\u304f\u3058/i, (msg) ->\n    msg.send msg.random [\"\u5927\u5409\", \"\u4e2d\u5409\", \"\u5c0f\u5409\", \"\u51f6\"]\n\n\n\n\u7d50\u679c\nHubot> myhubot \u3064\u30fc\nHubot> \u304b\u30fc\nHubot> myhubot I am Ken\nHubot> Hi, Ken\nHubot> myhuobt \u304a\u307f\u304f\u3058\nHubot> \u5927\u5409\n\n\n\u30c1\u30e3\u30c3\u30c8\u4e0a\u306e\u767a\u8a00\u306b\u53cd\u5fdc\u3059\u308b(hear)\n\u30c1\u30e3\u30c3\u30c8\u4e0a\u306e\u767a\u8a00\u306b\u7279\u5b9a\u306e\u6587\u5b57\u5217\u304c\u542b\u307e\u308c\u3066\u3044\u305f\u3089\u53cd\u5fdc\u3059\u308b\u3002\n\n\u5b9f\u88c5\n\nhoge.coffee\nmodule.exports = (robot) ->\n\n  robot.hear /\u75b2\u308c\u305f/i, (msg) ->\n    msg.send \"\u304c\u3093\u3070\u3063\u3066\uff01\"\n\n\n\n\u7d50\u679c\nHubot> \u3082\u3046\u75b2\u308c\u305f\u3088\u3002\u3002\u3002\nHubot> \u304c\u3093\u3070\u3063\u3066\uff01\n\n\n\u5b9a\u671f\u7684\u306b\u767a\u8a00\u3059\u308b(cron)\ncron\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001package.json\u306e\u4e2d\u306bcron\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\u307e\u305f\u3001\u6a19\u6e96\u3060\u3068UTC\u306a\u306e\u3067\u3001\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u306f\u5225\u9014time\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5fc5\u8981\u3002\nnpm install\u3068\u304b\u3057\u306a\u304f\u3066\u3082\u3001\u521d\u56de\u5b9f\u884c\u6642\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u308c\u308b\u3002\n\npackage.json\n{\n  (\u7565)\n  \"dependencies\": {\n    (\u7565)\n    \"cron\": \"^1.0.5\",\n    \"time\": \"^0.11.0\"\n  },\n  (\u7565)\n}\n\n\n\u5b9f\u884c\u6642\u9593\u306e\u6307\u5b9a\u306fLinux\u306ecron\u3068\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u308b\u3051\u3069\u3001\n\u3053\u3061\u3089\u306f\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3067\u304d\u308b\u306e\u3067\u3001\u8981\u7d20\u304c6\u3064\u3042\u308b\u306e\u3067\u6ce8\u610f\u3002\n\n\u5b9f\u88c5\n\nhoge.coffee\ncronJob = require('cron').CronJob\n\nmodule.exports = (robot) ->\n  cronjob = new cronJob(\n    cronTime: \"0 0 9 * * *\"     # \u5b9f\u884c\u6642\u9593\n    start:    true              # \u3059\u3050\u306bcron\u306ejob\u3092\u5b9f\u884c\u3059\u308b\u304b\n    timeZone: \"Asia/Tokyo\"      # \u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u6307\u5b9a\n    onTick: ->                  # \u6642\u9593\u304c\u6765\u305f\u6642\u306b\u5b9f\u884c\u3059\u308b\u51e6\u7406\n      robot.send {room: \"#ROOM_NAME\"}, \"\u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059\uff01\"\n    )\n\n\n\n\u7d50\u679c\n(\u6bce\u671d9:00\u306b)\nHubot> \u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\n\u3061\u306a\u307f\u306b\u3001\u5b9a\u671f\u7684\u306b\u767a\u8a00\u3055\u305b\u305f\u3044\u3060\u3051\u306a\u3089\u3001hubot-cron\u3092\u4f7f\u3046\u3068\u3044\u3046\u624b\u3082\u3042\u308b\u3002\n\n\u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316\u3092\u884c\u3046(brain)\nhubot\u306b\u30c7\u30fc\u30bf\u3092\u8a18\u61b6\u3055\u305b\u308b\u6a5f\u80fd\u3002\nredis\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002(redis\u53c2\u8003)\n\nredis\u30b5\u30fc\u30d0\u306e\u6e96\u5099\nhomebrew\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ brew install redis\n\n\u4e00\u5fdc\u30d0\u30fc\u30b8\u30e7\u30f3\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n% redis-server --version\nRedis server v=2.8.13 sha=00000000:0 malloc=libc bits=64 build=96319fcc2102d7fa\n\nRedis\u30b5\u30fc\u30d0\u8d77\u52d5\u3002(Ctrl-C\u3067\u7d42\u4e86)\n% redis-server /usr/local/etc/redis.conf\n\nRedis\u30b5\u30fc\u30d0\u304c\u81ea\u52d5\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u767b\u9332\u3057\u3066\u304a\u304f\u306e\u3082\u3044\u3044\u304b\u3082\u3002\n% ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents\n% launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.redis.plist\n\n\u5ff5\u306e\u305f\u3081\u30d7\u30ed\u30bb\u30b9\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n% ps ax | grep redis-server\n13443   ??  S      0:00.44 /usr/local/opt/redis/bin/redis-server 127.0.0.1:6379\n13836 s005  S+     0:00.00 grep redis-server\n\n\u3053\u308c\u3067Mac\u3092\u518d\u8d77\u52d5\u3057\u3066\u3082\u81ea\u52d5\u3067Redis\u30b5\u30fc\u30d0\u304c\u8d77\u52d5\u3057\u3066\u304f\u308c\u308b\u3002\n\u81ea\u52d5\u8d77\u52d5\u3092\u3084\u3081\u305f\u3044\u3068\u304d\u306f\u30b3\u30c1\u30e9\u3002\n% launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.redis.plist\n\n\n\u5b9f\u88c5\n\nhoge.coffee\nmodule.exports = (robot) ->\n\n  # redis\u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30ad\u30fc\n  KEY_DERBY_POINTS = 'derby_points'\n\n  # \u5bfe\u8c61\u3068\u70b9\u6570\u3092\u6307\u5b9a\n  robot.hear /^(.*)\u3055\u3093\u306b([0-9]+)\u70b9/, (msg) ->\n    name  = msg.match[1]\n    points = (robot.brain.get KEY_DERBY_POINTS) or {}\n    points[name] = (points[name] or 0) + Number(msg.match[2])\n\n    robot.brain.set KEY_DERBY_POINTS, points\n\n    msg.send \"#{name}\u3055\u3093: #{points[name]}\u70b9\"\n\n  # \u70b9\u6570\u306e\u5408\u8a08\u3092\u8868\u793a\n  robot.respond /derby list/i, (msg) ->\n    points = (robot.brain.get KEY_DERBY_POINTS) or {}\n    for name, point of points\n      msg.send \"#{name}\u3055\u3093: #{point}\u70b9\"\n\n  # \u70b9\u6570\u3092\u30ea\u30bb\u30c3\u30c8\n  robot.respond /derby reset/i, (msg) ->\n    robot.brain.set KEY_DERBY_POINTS, {}\n    msg.send \"reset: done\"\n\n\n\n\n\u7d50\u679c\nHubot> \u306f\u3089\u305f\u3044\u3089\u3055\u3093\u306b3000\u70b9\nHubot> \u306f\u3089\u305f\u3044\u3089\u3055\u3093: 3000\u70b9\nHubot> \u7af9\u4e0b\u666f\u5b50\u3055\u3093\u306b2000\u70b9\nHubot> \u7af9\u4e0b\u666f\u5b50\u3055\u3093: 2000\u70b9\nHubot> \u306f\u3089\u305f\u3044\u3089\u3055\u3093\u306b5000\u70b9\nHubot> \u306f\u3089\u305f\u3044\u3089\u3055\u3093: 8000\u70b9\nHubot> hubot derby list\nHubot> \u306f\u3089\u305f\u3044\u3089\u3055\u3093: 8000\u70b9\nHubot> \u7af9\u4e0b\u666f\u5b50\u3055\u3093: 2000\u70b9\n\n\nWebAPI\u3092\u53e9\u304f(http)\nWebAPI\u3067\u30c7\u30fc\u30bf\u3092json\u306a\u308a\u4f55\u306a\u308a\u3067\u53d6\u3063\u3066\u304f\u308b\u3002\n\u4f8b\u3068\u3057\u3066\u3001Google Geocoding API\u3092\u4f7f\u3063\u3066\u4f4f\u6240\u304b\u3089\u7def\u5ea6\u7d4c\u5ea6\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\n\n\u5b9f\u88c5\nmodule.exports = (robot) ->\n  robot.hear /location (.*)/, (msg) ->\n    request = robot.http(\"https://maps.googleapis.com/maps/api/geocode/json\")\n                   .query(address: msg.match[1])\n                   .get()\n    request (err, res, body) ->\n      json = JSON.parse body\n      location = json['results'][0]['geometry']['location']\n\n      msg.send \"#{location['lat']}, #{location['lng']}\"\n\n\n\n\u7d50\u679c\nHubot> location \u798f\u5ca1\u5e02\u4e2d\u592e\u533a\u5927\u540d\nHubot> 33.5869827, 130.3949105\n\n\n\u74b0\u5883\u5909\u6570\n\u3053\u308c\u3060\u3051robot\u306e\u30e1\u30bd\u30c3\u30c9\u3058\u3083\u306a\u3044\u3051\u3069\u3001\u74b0\u5883\u5909\u6570\u3092\u4f7f\u3046\u65b9\u6cd5\u3092\u77e5\u3063\u3066\u304a\u304f\u3068\u8a2d\u5b9a\u304c\u697d\u3002\n\u30ed\u30fc\u30ab\u30eb\u3067\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u306b\u306f\u3001hubot\u95a2\u4fc2\u306a\u304f\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u3053\u3093\u306a\u611f\u3058\u306b\u3002\n$ export HUBOT_ENV_TEST_VAR=hogehoge\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u8aad\u307f\u8fbc\u3080\u3068\u304d\u306f\u3053\u3093\u306a\u611f\u3058\u3002\nTEST_VAR = process.env.HUBOT_ENV_TEST_VAR\n\n\n\u307e\u3068\u3081\n\u3053\u308c\u3060\u3051\u3067\u304d\u308c\u3070\u5927\u62b5\u306e\u3053\u3068\u306f\u3067\u304d\u308b\u3068\u601d\u3046\u3002\n\u3042\u3068\u306f\u30a2\u30a4\u30c7\u30a2\u3068\u5b9f\u88c5\u3059\u308b\u6839\u6c17\u304c\u3042\u308c\u3070\u2026\uff01\n\nGitHub\u304c\u4f5c\u3063\u305f\u30c1\u30e3\u30c3\u30c8\u306ebot\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3001Hubot\u3092\u4f7f\u3063\u3066\u307f\u308b(Mac)\u3002\n\u3053\u308c\u304c\u3042\u308c\u3070\u3044\u308d\u3093\u306a\u30c1\u30e3\u30c3\u30c8\u30c4\u30fc\u30eb\u306bbot\u3092\u5c0e\u5165\u3067\u304d\u308b\uff01\n\n\u3053\u3053\u3067\u306f\u3001Hubot\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u5404\u7a2e\u6a5f\u80fd\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u5b9f\u88c5\u306e\u8aac\u660e\u3092\u3059\u308b\u3002\n\u5404\u7a2e\u30c1\u30e3\u30c3\u30c8\u30c4\u30fc\u30eb\u3068\u306e\u9023\u643a\u65b9\u6cd5\u3084Heroku\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u65b9\u6cd5\u306a\u3069\u306f\u30b3\u30b3\u3067\u306f\u8aac\u660e\u3057\u306a\u3044\u3002\n\n## Hubot\u306e\u69cb\u9020\nHubot\u306f\u4ee5\u4e0b\u306e\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u308b\n\n[\u30c1\u30e3\u30c3\u30c8\u30c4\u30fc\u30eb]\n\u3000\u2191\u2193\n[Adapter] : \u30c1\u30e3\u30c3\u30c8\u30c4\u30fc\u30eb\u3068Robot\u3068\u306e\u6a4b\u6e21\u3057\u3002\u3053\u3053\u3092\u5165\u308c\u66ff\u3048\u308b\u3053\u3068\u3067\u3044\u308d\u3093\u306a\u30c1\u30e3\u30c3\u30c8\u30c4\u30fc\u30eb\u306b\u5bfe\u5fdc\u53ef\u80fd\u3002\n\u3000\u2191\u2193\n[Robot]\uff1aHubot\u672c\u4f53\u3002\n\u3000\u2191\u2193\n[scripts]\uff1abot\u306e\u6319\u52d5\u3092\u5b9f\u88c5\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3002CoffeeScript\u3067\u66f8\u304f\u3002\n\n## Hubot\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nHubot\u306f[node.js](http://nodejs.jp/)\u3067\u52d5\u304f\u306e\u3067\u3001\u307e\u305anode.js\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002[(node.js\u53c2\u8003)](http://gihyo.jp/dev/serial/01/nodejs/0001)\n\n```\n$ brew install node\n```\n\n\u305d\u3057\u3066Hubot\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n`npm`\u306fnode.js\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406\u30c4\u30fc\u30eb\u3067\u3001node.js\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n`yo`\u306f\u5bfe\u8a71\u5f62\u5f0f\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u3072\u306a\u5f62\u3092\u751f\u6210\u3059\u308b[Yeoman](http://yeoman.io/)\u3068\u3044\u3046\u30c4\u30fc\u30eb\u3092\u69cb\u6210\u3059\u308b\u3082\u306e\u306e\u4e00\u3064\u3002[(Yeoman\u53c2\u8003)](http://www.atmarkit.co.jp/ait/articles/1407/02/news040.html)\n\n```\n$ npm install -g yo generator-hubot\n```\n\n\u4efb\u610f\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n\n```\n$ mkdir myhubot\n$ cd myhubot\n$ yo hubot\n```\n\n\u307e\u305a\u3001yeoman\u6539\u5584\u306e\u305f\u3081\u306b\u533f\u540d\u3067\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u3092\u53ce\u96c6\u3057\u3066\u3044\u3044\u304b\u805e\u304b\u308c\u308b\u306e\u3067y/n\u3067\u304a\u8fd4\u4e8b\u3002\n\n```\n[?] ==========================================================================\nWe're constantly looking for ways to make yo better!\nMay we anonymously report usage statistics to improve the tool over time?\nMore info: https://github.com/yeoman/insight & http://yeoman.io\n==========================================================================:\n```\n\n\u305d\u306e\u5f8c\u3001\u5bfe\u8a71\u5f62\u5f0f\u3067\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u306a\u308b\u3002\u4ee5\u4e0b\u306b\u7b54\u3048\u308b\u3002\n\u306f\u3058\u3081\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u30ab\u30c3\u30b3\u66f8\u304d\u3067\u5165\u3063\u3066\u308b\u3051\u3069\u3001\u4f55\u304b\u5165\u529b\u3057\u305f\u3089\u305d\u3061\u3089\u306b\u4e0a\u66f8\u304d\u3055\u308c\u308b\u3002\n\n* \u88fd\u4f5c\u8005\u540d\n* bot\u306e\u540d\u524d\n* bot\u306e\u8aac\u660e\n* Adapter\u306b\u4f55\u3092\u4f7f\u3046\u304b(\u3069\u306e\u30c1\u30e3\u30c3\u30c8\u30c4\u30fc\u30eb\u5411\u3051\u306b\u4f5c\u308b\u304b)\n\nadapter\u306f\u3001`irc` `twitter` `hipchat` `chatwork` `slack` \u306a\u3069\u304c\u3042\u308b\u307f\u305f\u3044\u3002\n\n```\n                     _____________________________\n                    /                             \\\n   //\\              |      Extracting input for    |\n  ////\\    _____    |   self-replication process   |\n //////\\  /_____\\   \\                             /\n ======= |[^_/\\_]|   /----------------------------\n  |   | _|___@@__|__\n  +===+/  ///     \\_\\\n   | |_\\ /// HUBOT/\\\\\n   |___/\\//      /  \\\\\n         \\      /   +---+\n          \\____/    |   |\n           | //|    +===+\n            \\//      |xx|\n\n? Owner: kta-m\n? Bot name: myhubot\n? Description: my first hubot\n? Bot adapter: slack\n   create bin/hubot\n   create bin/hubot.cmd\n   create Procfile\n   create README.md\n   create external-scripts.json\n   create hubot-scripts.json\n   create .gitignore\n   create package.json\n   create scripts/example.coffee\n   create .editorconfig\n                     _____________________________\n _____              /                             \\\n \\    \\             |   Self-replication process   |\n |    |    _____    |          complete...         |\n |__\\\\|   /_____\\   \\     Good luck with that.    /\n   |//+  |[^_/\\_]|   /----------------------------\n  |   | _|___@@__|__\n  +===+/  ///     \\_\\\n   | |_\\ /// HUBOT/\\\\\n   |___/\\//      /  \\\\\n         \\      /   +---+\n          \\____/    |   |\n           | //|    +===+\n            \\//      |xx|\n```\n\u3042\u3068\u306f\u3044\u3044\u611f\u3058\u306b\u3044\u308d\u3044\u308d\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u308c\u308b\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u8a66\u3057\u306b\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n```\n$ bin/hubot --name myhubot\n```\n\nwarning\u304c\u3044\u304f\u3064\u304b\u51fa\u308b\u304b\u3082\u3060\u3051\u3069\u3001\u6c17\u306b\u305b\u305ahubot\u306b\u8a9e\u308a\u304b\u3051\u3066\u307f\u308b\u3002\n\u540d\u524d\u3092\u6307\u5b9a\u3059\u308b\u306e\u304c\u9762\u5012\u306a\u3089\u3001`--name`\u306f\u4ed8\u3051\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3002\u305f\u3060\u3001\u305d\u306e\u5834\u5408\u306f`hubot`\u3067\u547c\u3073\u304b\u3051\u306a\u3044\u3068\u53cd\u5fdc\u3057\u3066\u304f\u308c\u306a\u3044\u3002\n\n```\nHubot> hubot ping\nHubot> PONG\n```\n\n\u4ed6\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u3067\u304d\u308b\u3053\u3068\u306f`help`\u30b3\u30de\u30f3\u30c9\u3067\u898b\u308c\u308b\u3002\n\n```\nHubot> hubot help\nHubot> Events:\ndebug - {user: <user object to send message to>}\nHubot <user> is a badass guitarist - assign a role to a user\nHubot <user> is not a badass guitarist - remove a role from a user\nHubot animate me <query> - The same thing as `image me`, except adds a few parameters to try to return an animated GIF instead.\nHubot die - End Hubot process\nHubot die - End Hubot process\nHubot echo <text> - Reply back with <text>\nHubot echo <text> - Reply back with <text>\nHubot fake event <event> - Triggers the <event> event for debugging reasons\nHubot help - Displays all of the help commands that Hubot knows about.\nHubot help <query> - Displays all help commands that match <query>.\nHubot image me <query> - The Original. Queries Google Images for <query> and returns a random top result.\nHubot map me <query> - Returns a map view of the area returned by `query`.\nHubot mustache me <query> - Searches Google Images for the specified query and mustaches it.\nHubot mustache me <url> - Adds a mustache to the specified URL.\nHubot ping - Reply with pong\nHubot ping - Reply with pong\nHubot pug bomb N - get N pugs\nHubot pug me - Receive a pug\nHubot show storage - Display the contents that are persisted in the brain\nHubot show users - Display all users that Hubot knows about\nHubot the rules - Make sure Hubot still knows the rules.\nHubot time - Reply with current time\nHubot time - Reply with current time\nHubot translate me <phrase> - Searches for a translation for the <phrase> and then prints that bad boy out.\nHubot translate me from <source> into <target> <phrase> - Translates <phrase> from <source> into <target>. Both <source> and <target> are optional\nHubot who is <user> - see what roles a user has\nHubot youtube me <query> - Searches YouTube for the query and returns the video embed link.\nship it - Display a motivation squirrel\n```\n\n## \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u304f\n\u72ec\u81ea\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3001`scripts`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5165\u308c\u308b\u3002\n\n### \u547c\u3073\u304b\u3051\u306b\u5fdc\u3048\u308b(respond)\n\u660e\u793a\u7684\u306bhubot\u306b\u5bfe\u3057\u3066\u547c\u3073\u304b\u3051\u3092\u884c\u306a\u3063\u305f\u3068\u304d\u306b\u53cd\u5fdc\u3059\u308b\u3002\n\u547c\u3073\u304b\u3051\u5185\u5bb9\u306f\u6b63\u898f\u8868\u73fe\u3067\u5224\u5225\u3002\u30de\u30c3\u30c1\u3057\u305f\u7b87\u6240\u3082\u53d6\u5f97\u3067\u304d\u308b\u3002\n\u547c\u3073\u304b\u3051\u65b9\u6cd5\u306f\u3044\u308d\u3044\u308d\u3042\u3063\u3066\u3001\u3069\u308c\u3067\u3082OK\u3002\n\n```\nMYHUBOT xxx\nmyhubot xxx\n@myhubot xxx\nmyhubot: xxx\n```\n\n#### \u5b9f\u88c5\n\n```hoge.coffee\nmodule.exports = (robot) ->\n\n  robot.respond /\u3064\u30fc/i, (msg) ->\n    msg.send \"\u304b\u30fc\"\n\n  # \u6b63\u898f\u8868\u73fe\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3057\u305f\u90e8\u5206\u306e\u53d6\u5f97\u3082\u3067\u304d\u308b\n  robot.respond /I am (.*)/i, (msg) ->\n    msg.send \"Hi, #{msg.match[1]}\"\n\n  # msg.random\u3067\u914d\u5217\u306e\u6587\u5b57\u5217\u306e\u4e2d\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u629e\u3057\u3066\u767a\u8a00\u3059\u308b\n  robot.respond /\u304a\u307f\u304f\u3058/i, (msg) ->\n    msg.send msg.random [\"\u5927\u5409\", \"\u4e2d\u5409\", \"\u5c0f\u5409\", \"\u51f6\"]\n```\n\n#### \u7d50\u679c\n\n```\nHubot> myhubot \u3064\u30fc\nHubot> \u304b\u30fc\nHubot> myhubot I am Ken\nHubot> Hi, Ken\nHubot> myhuobt \u304a\u307f\u304f\u3058\nHubot> \u5927\u5409\n```\n\n### \u30c1\u30e3\u30c3\u30c8\u4e0a\u306e\u767a\u8a00\u306b\u53cd\u5fdc\u3059\u308b(hear)\n\u30c1\u30e3\u30c3\u30c8\u4e0a\u306e\u767a\u8a00\u306b\u7279\u5b9a\u306e\u6587\u5b57\u5217\u304c\u542b\u307e\u308c\u3066\u3044\u305f\u3089\u53cd\u5fdc\u3059\u308b\u3002\n\n#### \u5b9f\u88c5\n\n```hoge.coffee\nmodule.exports = (robot) ->\n\n  robot.hear /\u75b2\u308c\u305f/i, (msg) ->\n    msg.send \"\u304c\u3093\u3070\u3063\u3066\uff01\"\n```\n\n#### \u7d50\u679c\n\n```\nHubot> \u3082\u3046\u75b2\u308c\u305f\u3088\u3002\u3002\u3002\nHubot> \u304c\u3093\u3070\u3063\u3066\uff01\n```\n\n### \u5b9a\u671f\u7684\u306b\u767a\u8a00\u3059\u308b(cron)\ncron\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001`package.json`\u306e\u4e2d\u306b[cron\u30e2\u30b8\u30e5\u30fc\u30eb](https://github.com/ncb000gt/node-cron)\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\u307e\u305f\u3001\u6a19\u6e96\u3060\u3068UTC\u306a\u306e\u3067\u3001\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u306f\u5225\u9014[time\u30e2\u30b8\u30e5\u30fc\u30eb](https://github.com/TooTallNate/node-time)\u304c\u5fc5\u8981\u3002\n`npm install`\u3068\u304b\u3057\u306a\u304f\u3066\u3082\u3001\u521d\u56de\u5b9f\u884c\u6642\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u308c\u308b\u3002\n\n\n```package.json\n{\n  (\u7565)\n  \"dependencies\": {\n    (\u7565)\n    \"cron\": \"^1.0.5\",\n    \"time\": \"^0.11.0\"\n  },\n  (\u7565)\n}\n```\n\n\u5b9f\u884c\u6642\u9593\u306e\u6307\u5b9a\u306fLinux\u306ecron\u3068\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u308b\u3051\u3069\u3001\n\u3053\u3061\u3089\u306f\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3067\u304d\u308b\u306e\u3067\u3001\u8981\u7d20\u304c6\u3064\u3042\u308b\u306e\u3067\u6ce8\u610f\u3002\n\n#### \u5b9f\u88c5\n\n```hoge.coffee\ncronJob = require('cron').CronJob\n \nmodule.exports = (robot) ->\n  cronjob = new cronJob(\n    cronTime: \"0 0 9 * * *\"     # \u5b9f\u884c\u6642\u9593\n    start:    true              # \u3059\u3050\u306bcron\u306ejob\u3092\u5b9f\u884c\u3059\u308b\u304b\n    timeZone: \"Asia/Tokyo\"      # \u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u6307\u5b9a\n    onTick: ->                  # \u6642\u9593\u304c\u6765\u305f\u6642\u306b\u5b9f\u884c\u3059\u308b\u51e6\u7406\n      robot.send {room: \"#ROOM_NAME\"}, \"\u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059\uff01\"\n    )\n```\n\n#### \u7d50\u679c\n\n(\u6bce\u671d9:00\u306b)\n\n```\nHubot> \u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n```\n\n\u3061\u306a\u307f\u306b\u3001\u5b9a\u671f\u7684\u306b\u767a\u8a00\u3055\u305b\u305f\u3044\u3060\u3051\u306a\u3089\u3001[hubot-cron](https://github.com/miyagawa/hubot-cronies)\u3092\u4f7f\u3046\u3068\u3044\u3046\u624b\u3082\u3042\u308b\u3002\n\n### \u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316\u3092\u884c\u3046(brain)\n\nhubot\u306b\u30c7\u30fc\u30bf\u3092\u8a18\u61b6\u3055\u305b\u308b\u6a5f\u80fd\u3002\n[redis](http://redis.io/)\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002[(redis\u53c2\u8003)](http://ameblo.jp/principia-ca/entry-11197286812.html)\n\n#### redis\u30b5\u30fc\u30d0\u306e\u6e96\u5099\nhomebrew\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ brew install redis\n```\n\n\u4e00\u5fdc\u30d0\u30fc\u30b8\u30e7\u30f3\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n```\n% redis-server --version\nRedis server v=2.8.13 sha=00000000:0 malloc=libc bits=64 build=96319fcc2102d7fa\n```\n\nRedis\u30b5\u30fc\u30d0\u8d77\u52d5\u3002(`Ctrl-C`\u3067\u7d42\u4e86)\n\n```\n% redis-server /usr/local/etc/redis.conf\n```\n\nRedis\u30b5\u30fc\u30d0\u304c\u81ea\u52d5\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u767b\u9332\u3057\u3066\u304a\u304f\u306e\u3082\u3044\u3044\u304b\u3082\u3002\n\n```\n% ln -sfv /usr/local/opt/redis/*.plist ~/Library/LaunchAgents\n% launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.redis.plist\n```\n\n\u5ff5\u306e\u305f\u3081\u30d7\u30ed\u30bb\u30b9\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n```\n% ps ax | grep redis-server\n13443   ??  S      0:00.44 /usr/local/opt/redis/bin/redis-server 127.0.0.1:6379\n13836 s005  S+     0:00.00 grep redis-server\n```\n\n\u3053\u308c\u3067Mac\u3092\u518d\u8d77\u52d5\u3057\u3066\u3082\u81ea\u52d5\u3067Redis\u30b5\u30fc\u30d0\u304c\u8d77\u52d5\u3057\u3066\u304f\u308c\u308b\u3002\n\n\u81ea\u52d5\u8d77\u52d5\u3092\u3084\u3081\u305f\u3044\u3068\u304d\u306f\u30b3\u30c1\u30e9\u3002\n\n```\n% launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.redis.plist\n```\n\n#### \u5b9f\u88c5\n```hoge.coffee\nmodule.exports = (robot) ->\n\n  # redis\u306b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30ad\u30fc\n  KEY_DERBY_POINTS = 'derby_points'\n\n  # \u5bfe\u8c61\u3068\u70b9\u6570\u3092\u6307\u5b9a\n  robot.hear /^(.*)\u3055\u3093\u306b([0-9]+)\u70b9/, (msg) ->\n    name  = msg.match[1]\n    points = (robot.brain.get KEY_DERBY_POINTS) or {}\n    points[name] = (points[name] or 0) + Number(msg.match[2])\n\n    robot.brain.set KEY_DERBY_POINTS, points\n\n    msg.send \"#{name}\u3055\u3093: #{points[name]}\u70b9\"\n\n  # \u70b9\u6570\u306e\u5408\u8a08\u3092\u8868\u793a\n  robot.respond /derby list/i, (msg) ->\n    points = (robot.brain.get KEY_DERBY_POINTS) or {}\n    for name, point of points\n      msg.send \"#{name}\u3055\u3093: #{point}\u70b9\"\n\n  # \u70b9\u6570\u3092\u30ea\u30bb\u30c3\u30c8\n  robot.respond /derby reset/i, (msg) ->\n    robot.brain.set KEY_DERBY_POINTS, {}\n    msg.send \"reset: done\"\n\n```\n\n#### \u7d50\u679c\n```\nHubot> \u306f\u3089\u305f\u3044\u3089\u3055\u3093\u306b3000\u70b9\nHubot> \u306f\u3089\u305f\u3044\u3089\u3055\u3093: 3000\u70b9\nHubot> \u7af9\u4e0b\u666f\u5b50\u3055\u3093\u306b2000\u70b9\nHubot> \u7af9\u4e0b\u666f\u5b50\u3055\u3093: 2000\u70b9\nHubot> \u306f\u3089\u305f\u3044\u3089\u3055\u3093\u306b5000\u70b9\nHubot> \u306f\u3089\u305f\u3044\u3089\u3055\u3093: 8000\u70b9\nHubot> hubot derby list\nHubot> \u306f\u3089\u305f\u3044\u3089\u3055\u3093: 8000\u70b9\nHubot> \u7af9\u4e0b\u666f\u5b50\u3055\u3093: 2000\u70b9\n```\n\n### WebAPI\u3092\u53e9\u304f(http)\n\nWebAPI\u3067\u30c7\u30fc\u30bf\u3092json\u306a\u308a\u4f55\u306a\u308a\u3067\u53d6\u3063\u3066\u304f\u308b\u3002\n\u4f8b\u3068\u3057\u3066\u3001[Google Geocoding API](https://developers.google.com/maps/documentation/geocoding/?hl=ja)\u3092\u4f7f\u3063\u3066\u4f4f\u6240\u304b\u3089\u7def\u5ea6\u7d4c\u5ea6\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\u3002\n\n#### \u5b9f\u88c5\n```\nmodule.exports = (robot) ->\n  robot.hear /location (.*)/, (msg) ->\n    request = robot.http(\"https://maps.googleapis.com/maps/api/geocode/json\")\n                   .query(address: msg.match[1])\n                   .get()\n    request (err, res, body) ->\n      json = JSON.parse body\n      location = json['results'][0]['geometry']['location']\n\n      msg.send \"#{location['lat']}, #{location['lng']}\"\n\n```\n\n#### \u7d50\u679c\n```\nHubot> location \u798f\u5ca1\u5e02\u4e2d\u592e\u533a\u5927\u540d\nHubot> 33.5869827, 130.3949105\n```\n\n### \u74b0\u5883\u5909\u6570\n\n\u3053\u308c\u3060\u3051robot\u306e\u30e1\u30bd\u30c3\u30c9\u3058\u3083\u306a\u3044\u3051\u3069\u3001\u74b0\u5883\u5909\u6570\u3092\u4f7f\u3046\u65b9\u6cd5\u3092\u77e5\u3063\u3066\u304a\u304f\u3068\u8a2d\u5b9a\u304c\u697d\u3002\n\n\u30ed\u30fc\u30ab\u30eb\u3067\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u306b\u306f\u3001hubot\u95a2\u4fc2\u306a\u304f\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u3053\u3093\u306a\u611f\u3058\u306b\u3002\n\n```\n$ export HUBOT_ENV_TEST_VAR=hogehoge\n```\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u8aad\u307f\u8fbc\u3080\u3068\u304d\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\n```\nTEST_VAR = process.env.HUBOT_ENV_TEST_VAR\n```\n\n## \u307e\u3068\u3081\n\u3053\u308c\u3060\u3051\u3067\u304d\u308c\u3070\u5927\u62b5\u306e\u3053\u3068\u306f\u3067\u304d\u308b\u3068\u601d\u3046\u3002\n\u3042\u3068\u306f\u30a2\u30a4\u30c7\u30a2\u3068\u5b9f\u88c5\u3059\u308b\u6839\u6c17\u304c\u3042\u308c\u3070\u2026\uff01\n", "tags": ["Hubot"]}