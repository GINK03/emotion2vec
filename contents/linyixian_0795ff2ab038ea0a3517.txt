{"context": " More than 1 year has passed since last update.Azure IoTHub\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u5f53\u521d\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u306fHTTPS\u3001AMQP\u3067\u3057\u305f\u3002\u3057\u3070\u3089\u304f\u3057\u3066Azure IoT \u30d7\u30ed\u30c8\u30b3\u30eb \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u304c\u30ea\u30ea\u30fc\u30b9\u306b\u306a\u3063\u3066MQTT\u30d7\u30ed\u30c8\u30b3\u30eb\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u306f\u306a\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u6642\u306f\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092\u81ea\u5206\u3067\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u4eca\u5e742\u6708\u306b\u306a\u3063\u3066IoTHub\u304c\u76f4\u63a5MQTT\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u306e\u63a5\u7d9a\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306fMQTT\u30d7\u30ed\u30c8\u30b3\u30eb\u3067IoTHub\u306b\u63a5\u7d9a\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u53c2\u8003\u306b\u3057\u305f\u306e\u306fAzure-IoT-SDK\u306eMQTT\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\uff08\u30d7\u30ed\u30b0\u30e9\u30e0\u81ea\u4f53\u306f\u307b\u307c\u4e00\u7dd2\u3067\u3059\u3002\u9001\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\uff09\n\n\u6e96\u5099\n\nAzure IoTHub\u3092\u4f5c\u6210\u3002\u4f5c\u6210\u65b9\u6cd5\u306f\u3053\u3061\u3089\n\nVisualStudio2015\u3067[\u65b0\u898f\u4f5c\u6210]-[\u30d7\u30ed\u30b8\u30a7\u30af\u30c8]-[Visual C#]-[Windows]-[\u30b3\u30f3\u30bd\u30fc\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3]\u3092\u9078\u629e\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3002\n\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u306e[\u53c2\u7167]\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066[Nuget\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u7ba1\u7406]\u3092\u9078\u629e\u3057\u3066\u3001Nuget\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3067\u300cdevices client\u300d\u3068\u691c\u7d22\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30ea\u30b9\u30c8\u306b\u300cMicrosoft.Azure.Devices.Client\u300d\u304c\u8868\u793a\u3055\u308c\u305f\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\nProgram.cs\nusing System;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Microsoft.Azure.Devices.Client;\n\nnamespace MQTT_TEST\n{\n    class Program\n    {\n        //IoTHub\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u6587\u5b57\u5217\n        private const string deviceCn = \"[replace]\";\n\n        //\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u6570\n        private static int MESSAGE_COUNT = 5;\n\n        /// <summary>\n        /// \n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            try\n            {\n                //\u30c7\u30d0\u30a4\u30b9\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\uff08\u30d7\u30ed\u30c8\u30b3\u30eb\u3092MQTT\u306b\u6307\u5b9a\uff09\n                DeviceClient client = DeviceClient.CreateFromConnectionString(deviceCn, TransportType.Mqtt);\n\n                //\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u304f\n                client.OpenAsync().Wait();\n                //IoTHub\u3078\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\n                SendEvent(client).Wait();\n                //IoTHub\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\n                ReceiveCommands(client).Wait();\n\n            }\n            catch (AggregateException ex)\n            {\n                foreach (Exception exception in ex.InnerExceptions)\n                {\n                    Console.WriteLine();\n                    Console.WriteLine(\"Error in sample: {0}\", exception);\n                }\n            }\n            catch(Exception ex)\n            {\n                Console.WriteLine();\n                Console.WriteLine(\"Error in sample: {0}\", ex.Message);\n            }\n            Console.WriteLine(\"Press enter to exit...\");\n            Console.ReadLine();\n        }\n\n        /// <summary>\n        /// \n        /// </summary>\n        /// <param name=\"client\"></param>\n        /// <returns></returns>\n        static async Task SendEvent(DeviceClient client)\n        {\n            //\u9001\u4fe1\u30e1\u30c3\u30bb\u30fc\u30b8\u7528\n            string dataBuffer;\n\n            //\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n            Console.WriteLine(\"Device sending {0} messages to IoTHub...\\n\", MESSAGE_COUNT);\n\n            for (int count=0; count < MESSAGE_COUNT; count++)\n            {\n                //\u30e1\u30c3\u30bb\u30fc\u30b8\u4f5c\u6210\n                dataBuffer = \"\u30e1\u30c3\u30bb\u30fc\u30b8:\" + count.ToString();\n\n                //\u4f5c\u6210\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d0\u30a4\u30c8\u30c7\u30fc\u30bf\u306b\u5909\u63db\u3057\u3066\u3001Message\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u4ee3\u5165\n                Message eventMessage = new Message(Encoding.UTF8.GetBytes(dataBuffer));\n\n                //\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n                Console.WriteLine(\"\\t{0} Sending message: {1}, Data: [{2}]\", DateTime.Now.ToLocalTime(), count, dataBuffer);\n\n                //\u975e\u540c\u671f\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\n                await client.SendEventAsync(eventMessage);\n            }\n        }\n\n        /// <summary>\n        /// \n        /// </summary>\n        /// <param name=\"client\"></param>\n        /// <returns></returns>\n        static async Task ReceiveCommands(DeviceClient client)\n        {\n            //\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\n            Console.WriteLine(\"\\nDevice waiting for commands from IoTHub...\\n\");\n\n            Message recievedMessage;\n\n            string messageData;\n\n            //\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3059\u308b\u305f\u3081\u306e\u30eb\u30fc\u30d7\n            while (true)\n            {\n                //\u4e00\u79d2\u3054\u3068\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u4fe1\u3092\u78ba\u8a8d\n                recievedMessage = await client.ReceiveAsync(TimeSpan.FromSeconds(1));\n\n                if (recievedMessage != null)\n                {\n                    //\u5c4a\u3044\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\n                    messageData = Encoding.ASCII.GetString(recievedMessage.GetBytes());\n\n                    //\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n                    Console.WriteLine(\"\\t{0}> Received message: {1}\", DateTime.Now.ToLocalTime(), messageData);\n\n                    //\u53d7\u4fe1\u5b8c\u4e86\u3092\u5f85\u3064\n                    await client.CompleteAsync(recievedMessage);\n                }\n            }\n        }\n\n    }\n}\n\n\n\n11\u884c\u76ee\u306e[replace]\u306e\u7b87\u6240\u306fDevice Explorer\u3067\u767b\u9332\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u306eConnectionString\u3068\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\nDevice Explorer\u306e\u30e2\u30cb\u30bf\u30fc\u3092\u6709\u52b9\u306b\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u9001\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001Device Explorer\u306e\u300cMessage To Device\u300d\u30bf\u30d6\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30f3\u30bd\u30fc\u30eb\u306bIoTHub\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u307e\u3068\u3081\nDeviceClient\u3092\u5229\u7528\u3067\u304d\u308b\u74b0\u5883\u3067\u306fHTTPS\u3084AMQP\u3068\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u30c7\u30fc\u30bf\u306e\u9001\u53d7\u4fe1\u304c\u53ef\u80fd\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u8a73\u3057\u304f\u306f\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3059\u304c\u3001IoTHub\u5074\u306b\u30d7\u30ed\u30c8\u30b3\u30eb\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092\u7528\u610f\u3057\u3066\u3042\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001DeviceClient\u3092\u5229\u7528\u3067\u304d\u306a\u3044\u74b0\u5883\u3067\u306f\u3001\u6c7a\u3081\u3089\u308c\u305fIoTHub\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u308b\u3053\u3068\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u304c\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\u6a5f\u4f1a\u304c\u3042\u308c\u3070DeviceClient\u3092\u4f7f\u308f\u306a\u3044\u30b5\u30f3\u30d7\u30eb\u3082\u4f5c\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nAzure IoTHub\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u5f53\u521d\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u30d7\u30ed\u30c8\u30b3\u30eb\u306fHTTPS\u3001AMQP\u3067\u3057\u305f\u3002\u3057\u3070\u3089\u304f\u3057\u3066Azure IoT \u30d7\u30ed\u30c8\u30b3\u30eb \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u304c\u30ea\u30ea\u30fc\u30b9\u306b\u306a\u3063\u3066MQTT\u30d7\u30ed\u30c8\u30b3\u30eb\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u306f\u306a\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u6642\u306f\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092\u81ea\u5206\u3067\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u4eca\u5e742\u6708\u306b\u306a\u3063\u3066[IoTHub\u304c\u76f4\u63a5MQTT\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u306e\u63a5\u7d9a\u3092\u30b5\u30dd\u30fc\u30c8](https://azure.microsoft.com/ja-jp/documentation/articles/iot-hub-mqtt-support/)\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u306fMQTT\u30d7\u30ed\u30c8\u30b3\u30eb\u3067IoTHub\u306b\u63a5\u7d9a\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u53c2\u8003\u306b\u3057\u305f\u306e\u306fAzure-IoT-SDK\u306e[MQTT\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0](https://github.com/Azure/azure-iot-sdks/blob/master/csharp/device/samples/DeviceClientMqttSample/Program.cs)\u3067\u3059\u3002\uff08\u30d7\u30ed\u30b0\u30e9\u30e0\u81ea\u4f53\u306f\u307b\u307c\u4e00\u7dd2\u3067\u3059\u3002\u9001\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002\uff09\n\n##\u6e96\u5099\n1. Azure IoTHub\u3092\u4f5c\u6210\u3002\u4f5c\u6210\u65b9\u6cd5\u306f[\u3053\u3061\u3089](http://qiita.com/linyixian/items/e319c5f63f9e57459ac0)\n2. VisualStudio2015\u3067[\u65b0\u898f\u4f5c\u6210]-[\u30d7\u30ed\u30b8\u30a7\u30af\u30c8]-[Visual C#]-[Windows]-[\u30b3\u30f3\u30bd\u30fc\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3]\u3092\u9078\u629e\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3002\n3. \u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u306e[\u53c2\u7167]\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066[Nuget\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u7ba1\u7406]\u3092\u9078\u629e\u3057\u3066\u3001Nuget\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3067\u300cdevices client\u300d\u3068\u691c\u7d22\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30ea\u30b9\u30c8\u306b\u300cMicrosoft.Azure.Devices.Client\u300d\u304c\u8868\u793a\u3055\u308c\u305f\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n##\u30d7\u30ed\u30b0\u30e9\u30e0\n```C#:Program.cs\nusing System;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Microsoft.Azure.Devices.Client;\n\nnamespace MQTT_TEST\n{\n    class Program\n    {\n        //IoTHub\u306b\u63a5\u7d9a\u3059\u308b\u305f\u3081\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u6587\u5b57\u5217\n        private const string deviceCn = \"[replace]\";\n        \n        //\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u6570\n        private static int MESSAGE_COUNT = 5;\n\n        /// <summary>\n        /// \n        /// </summary>\n        /// <param name=\"args\"></param>\n        static void Main(string[] args)\n        {\n            try\n            {\n                //\u30c7\u30d0\u30a4\u30b9\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\uff08\u30d7\u30ed\u30c8\u30b3\u30eb\u3092MQTT\u306b\u6307\u5b9a\uff09\n                DeviceClient client = DeviceClient.CreateFromConnectionString(deviceCn, TransportType.Mqtt);\n\n                //\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u304f\n                client.OpenAsync().Wait();\n                //IoTHub\u3078\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\n                SendEvent(client).Wait();\n                //IoTHub\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\n                ReceiveCommands(client).Wait();\n\n            }\n            catch (AggregateException ex)\n            {\n                foreach (Exception exception in ex.InnerExceptions)\n                {\n                    Console.WriteLine();\n                    Console.WriteLine(\"Error in sample: {0}\", exception);\n                }\n            }\n            catch(Exception ex)\n            {\n                Console.WriteLine();\n                Console.WriteLine(\"Error in sample: {0}\", ex.Message);\n            }\n            Console.WriteLine(\"Press enter to exit...\");\n            Console.ReadLine();\n        }\n\n        /// <summary>\n        /// \n        /// </summary>\n        /// <param name=\"client\"></param>\n        /// <returns></returns>\n        static async Task SendEvent(DeviceClient client)\n        {\n            //\u9001\u4fe1\u30e1\u30c3\u30bb\u30fc\u30b8\u7528\n            string dataBuffer;\n\n            //\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n            Console.WriteLine(\"Device sending {0} messages to IoTHub...\\n\", MESSAGE_COUNT);\n\n            for (int count=0; count < MESSAGE_COUNT; count++)\n            {\n                //\u30e1\u30c3\u30bb\u30fc\u30b8\u4f5c\u6210\n                dataBuffer = \"\u30e1\u30c3\u30bb\u30fc\u30b8:\" + count.ToString();\n\n                //\u4f5c\u6210\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d0\u30a4\u30c8\u30c7\u30fc\u30bf\u306b\u5909\u63db\u3057\u3066\u3001Message\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u4ee3\u5165\n                Message eventMessage = new Message(Encoding.UTF8.GetBytes(dataBuffer));\n\n                //\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n                Console.WriteLine(\"\\t{0} Sending message: {1}, Data: [{2}]\", DateTime.Now.ToLocalTime(), count, dataBuffer);\n\n                //\u975e\u540c\u671f\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\n                await client.SendEventAsync(eventMessage);\n            }\n        }\n\n        /// <summary>\n        /// \n        /// </summary>\n        /// <param name=\"client\"></param>\n        /// <returns></returns>\n        static async Task ReceiveCommands(DeviceClient client)\n        {\n            //\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\n            Console.WriteLine(\"\\nDevice waiting for commands from IoTHub...\\n\");\n\n            Message recievedMessage;\n\n            string messageData;\n\n            //\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\u3059\u308b\u305f\u3081\u306e\u30eb\u30fc\u30d7\n            while (true)\n            {\n                //\u4e00\u79d2\u3054\u3068\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u53d7\u4fe1\u3092\u78ba\u8a8d\n                recievedMessage = await client.ReceiveAsync(TimeSpan.FromSeconds(1));\n\n                if (recievedMessage != null)\n                {\n                    //\u5c4a\u3044\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\n                    messageData = Encoding.ASCII.GetString(recievedMessage.GetBytes());\n\n                    //\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n                    Console.WriteLine(\"\\t{0}> Received message: {1}\", DateTime.Now.ToLocalTime(), messageData);\n\n                    //\u53d7\u4fe1\u5b8c\u4e86\u3092\u5f85\u3064\n                    await client.CompleteAsync(recievedMessage);\n                }\n            }\n        }\n\n    }\n}\n\n```\n11\u884c\u76ee\u306e[replace]\u306e\u7b87\u6240\u306fDevice Explorer\u3067\u767b\u9332\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u306eConnectionString\u3068\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\nDevice Explorer\u306e\u30e2\u30cb\u30bf\u30fc\u3092\u6709\u52b9\u306b\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u9001\u4fe1\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001Device Explorer\u306e\u300cMessage To Device\u300d\u30bf\u30d6\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u30b3\u30f3\u30bd\u30fc\u30eb\u306bIoTHub\u304b\u3089\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n##\u307e\u3068\u3081\nDeviceClient\u3092\u5229\u7528\u3067\u304d\u308b\u74b0\u5883\u3067\u306fHTTPS\u3084AMQP\u3068\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u30c7\u30fc\u30bf\u306e\u9001\u53d7\u4fe1\u304c\u53ef\u80fd\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u8a73\u3057\u304f\u306f\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u3059\u304c\u3001IoTHub\u5074\u306b\u30d7\u30ed\u30c8\u30b3\u30eb\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092\u7528\u610f\u3057\u3066\u3042\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001DeviceClient\u3092\u5229\u7528\u3067\u304d\u306a\u3044\u74b0\u5883\u3067\u306f\u3001\u6c7a\u3081\u3089\u308c\u305fIoTHub\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u308b\u3053\u3068\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u53d7\u4fe1\u304c\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\u6a5f\u4f1a\u304c\u3042\u308c\u3070DeviceClient\u3092\u4f7f\u308f\u306a\u3044\u30b5\u30f3\u30d7\u30eb\u3082\u4f5c\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n", "tags": ["IoT", "Azure", "mqtt"]}