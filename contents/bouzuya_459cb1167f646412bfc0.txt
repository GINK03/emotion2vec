{"tags": ["purescript"], "context": "\n\n\u554f\u984c\nPureScript \u3067 Maybe a \u3092 a \u306b\u3057\u305f\u3044 (\u5024\u3092\u53d6\u308a\u51fa\u3057\u305f\u3044) \u3002\u3069\u3046\u3059\u308c\u3070\u826f\u3044\u306e\u304b\u3002\n\n\u89e3\u6c7a\u7b56\n\u3042\u304f\u307e\u3067\u4e00\u4f8b\u3002\n\ncase \u306a\u3069\u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067\u53d6\u308a\u51fa\u3059\u3002\n\nmaybe (https://pursuit.purescript.org/packages/purescript-maybe/2.0.1/docs/Data.Maybe#v:maybe) \u3092\u4f7f\u3046\u3002\n\nfromMaybe (https://pursuit.purescript.org/packages/purescript-maybe/2.0.1/docs/Data.Maybe#v:fromMaybe) \u3092\u4f7f\u3046\u3002\n\nfromJust (https://pursuit.purescript.org/packages/purescript-maybe/2.0.1/docs/Data.Maybe#v:fromJust) + unsafePartial \u3092\u4f7f\u3046\u3002\n\n\u57fa\u672c\u7684\u306b\u306f\u5024\u304c\u306a\u3044 (Nothing) \u3068\u304d\u306e\u4ee3\u308f\u308a\u306e\u5024\u306b\u3064\u3044\u3066\u306f\u8003\u3048\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\u6b21\u306e\u4f8b\u3067\u306f 456 \u3092\u4f7f\u3063\u3066\u3044\u308b\u3002\nfromJust \u306f Nothing \u306e\u30d1\u30bf\u30fc\u30f3\u3092\u8003\u616e\u3057\u3066\u3044\u306a\u3044\u90e8\u5206\u95a2\u6570\u3002 unsafePartial \u3092\u4f7f\u3063\u3066\u3001\u5371\u967a\u3092\u627f\u77e5\u3067 Just \u524d\u63d0\u3067\u629c\u304d\u51fa\u3059\u3002\n\ncase\n\n> import Data.Maybe (Maybe(..))\n> let m1 = Just 123\n> let m2 = Nothing\n>\n> :paste\n\u2026 case m1 of\n\u2026   Nothing -> 456\n\u2026   Just x -> x\n\u2026\n123\n\n> :paste\n\u2026 case m2 of\n\u2026   Nothing -> 456\n\u2026   Just x -> x\n\u2026\n456\n\n\nmaybe\n\n> import Data.Maybe (Maybe(..), maybe)\n> let m1 = Just 123\n> let m2 = Nothing\n>\n> maybe 456 (\\x -> x) m1\n123\n\n> maybe 456 (\\x -> x) m2\n456\n\n\nfromMaybe\n\n> import Data.Maybe (Maybe(..), fromMaybe)\n> let m1 = Just 123\n> let m2 = Nothing\n>\n> fromMaybe 456 m1\n123\n\n> fromMaybe 456 m2\n456\n\n\nfromJust (+ unsafePartial)\n> import Data.Maybe (Maybe(..), isJust, fromJust)\n> import Partial.Unsafe (unsafePartial)\n> let m1 = Just 123\n> let m2 = Nothing\n>\n> if isJust m1 then unsafePartial fromJust m1 else 456\n123\n\n> if isJust m2 then unsafePartial fromJust m2 else 456\n456\n\n> unsafePartial fromJust m1\n123\n\n> unsafePartial fromJust m2 :: Maybe Int\n...\nError: Failed pattern match\n...\n\n\n\u5b9f\u88c5\n\u3061\u306a\u307f\u306b\u305d\u308c\u305e\u308c\u306e\u5b9f\u88c5\u306f\u6b21\u306e\u901a\u308a\u3002\nmaybe https://github.com/purescript/purescript-maybe/blob/v2.0.1/src/Data/Maybe.purs#L213-L213\nmaybe :: forall a b. b -> (a -> b) -> Maybe a -> b\nmaybe b _ Nothing = b\nmaybe _ f (Just a) = f a\n\nfromMaybe https://github.com/purescript/purescript-maybe/blob/v2.0.1/src/Data/Maybe.purs#L238-L238\nfromMaybe :: forall a. a -> Maybe a -> a\nfromMaybe a = maybe a id\n\nfromJust https://github.com/purescript/purescript-maybe/blob/v2.0.1/src/Data/Maybe.purs#L264-L265\nfromJust :: forall a. Partial => Maybe a -> a\nfromJust (Just x) = x\n\n\n\u53c2\u8003\n\nhttps://pursuit.purescript.org/packages/purescript-maybe/2.0.1/docs/Data.Maybe#v:maybe\nhttps://pursuit.purescript.org/packages/purescript-maybe/2.0.1/docs/Data.Maybe#v:fromMaybe\nhttps://github.com/purescript/purescript-maybe/blob/v2.0.1/src/Data/Maybe.purs#L213-L213\nhttps://github.com/purescript/purescript-maybe/blob/v2.0.1/src/Data/Maybe.purs#L238-L238\nhttps://github.com/purescript/purescript-maybe/blob/v2.0.1/src/Data/Maybe.purs#L264-L265\n\n# \u554f\u984c\n\nPureScript \u3067 Maybe a \u3092 a \u306b\u3057\u305f\u3044 (\u5024\u3092\u53d6\u308a\u51fa\u3057\u305f\u3044) \u3002\u3069\u3046\u3059\u308c\u3070\u826f\u3044\u306e\u304b\u3002\n\n# \u89e3\u6c7a\u7b56\n\n\u3042\u304f\u307e\u3067\u4e00\u4f8b\u3002\n\n- case \u306a\u3069\u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067\u53d6\u308a\u51fa\u3059\u3002\n- `maybe` (https://pursuit.purescript.org/packages/purescript-maybe/2.0.1/docs/Data.Maybe#v:maybe) \u3092\u4f7f\u3046\u3002\n- `fromMaybe` (https://pursuit.purescript.org/packages/purescript-maybe/2.0.1/docs/Data.Maybe#v:fromMaybe) \u3092\u4f7f\u3046\u3002\n- `fromJust` (https://pursuit.purescript.org/packages/purescript-maybe/2.0.1/docs/Data.Maybe#v:fromJust) + `unsafePartial` \u3092\u4f7f\u3046\u3002\n\n\u57fa\u672c\u7684\u306b\u306f\u5024\u304c\u306a\u3044 (Nothing) \u3068\u304d\u306e\u4ee3\u308f\u308a\u306e\u5024\u306b\u3064\u3044\u3066\u306f\u8003\u3048\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\u6b21\u306e\u4f8b\u3067\u306f `456` \u3092\u4f7f\u3063\u3066\u3044\u308b\u3002\n\n`fromJust` \u306f Nothing \u306e\u30d1\u30bf\u30fc\u30f3\u3092\u8003\u616e\u3057\u3066\u3044\u306a\u3044\u90e8\u5206\u95a2\u6570\u3002 `unsafePartial` \u3092\u4f7f\u3063\u3066\u3001\u5371\u967a\u3092\u627f\u77e5\u3067 `Just` \u524d\u63d0\u3067\u629c\u304d\u51fa\u3059\u3002\n\n## `case`\n\n```\n> import Data.Maybe (Maybe(..))\n> let m1 = Just 123\n> let m2 = Nothing\n>\n> :paste\n\u2026 case m1 of\n\u2026   Nothing -> 456\n\u2026   Just x -> x\n\u2026\n123\n\n> :paste\n\u2026 case m2 of\n\u2026   Nothing -> 456\n\u2026   Just x -> x\n\u2026\n456\n```\n\n## `maybe`\n\n```\n> import Data.Maybe (Maybe(..), maybe)\n> let m1 = Just 123\n> let m2 = Nothing\n>\n> maybe 456 (\\x -> x) m1\n123\n\n> maybe 456 (\\x -> x) m2\n456\n```\n\n## `fromMaybe`\n\n```\n> import Data.Maybe (Maybe(..), fromMaybe)\n> let m1 = Just 123\n> let m2 = Nothing\n>\n> fromMaybe 456 m1\n123\n\n> fromMaybe 456 m2\n456\n```\n\n## `fromJust` (+ `unsafePartial`)\n\n```\n> import Data.Maybe (Maybe(..), isJust, fromJust)\n> import Partial.Unsafe (unsafePartial)\n> let m1 = Just 123\n> let m2 = Nothing\n>\n> if isJust m1 then unsafePartial fromJust m1 else 456\n123\n\n> if isJust m2 then unsafePartial fromJust m2 else 456\n456\n\n> unsafePartial fromJust m1\n123\n\n> unsafePartial fromJust m2 :: Maybe Int\n...\nError: Failed pattern match\n...\n```\n\n## \u5b9f\u88c5\n\n\u3061\u306a\u307f\u306b\u305d\u308c\u305e\u308c\u306e\u5b9f\u88c5\u306f\u6b21\u306e\u901a\u308a\u3002\n\n`maybe` https://github.com/purescript/purescript-maybe/blob/v2.0.1/src/Data/Maybe.purs#L213-L213\n\n```\nmaybe :: forall a b. b -> (a -> b) -> Maybe a -> b\nmaybe b _ Nothing = b\nmaybe _ f (Just a) = f a\n```\n\n`fromMaybe` https://github.com/purescript/purescript-maybe/blob/v2.0.1/src/Data/Maybe.purs#L238-L238\n\n```\nfromMaybe :: forall a. a -> Maybe a -> a\nfromMaybe a = maybe a id\n```\n\n`fromJust` https://github.com/purescript/purescript-maybe/blob/v2.0.1/src/Data/Maybe.purs#L264-L265\n\n```\nfromJust :: forall a. Partial => Maybe a -> a\nfromJust (Just x) = x\n```\n\n# \u53c2\u8003\n\n- https://pursuit.purescript.org/packages/purescript-maybe/2.0.1/docs/Data.Maybe#v:maybe\n- https://pursuit.purescript.org/packages/purescript-maybe/2.0.1/docs/Data.Maybe#v:fromMaybe\n- https://github.com/purescript/purescript-maybe/blob/v2.0.1/src/Data/Maybe.purs#L213-L213\n- https://github.com/purescript/purescript-maybe/blob/v2.0.1/src/Data/Maybe.purs#L238-L238\n- https://github.com/purescript/purescript-maybe/blob/v2.0.1/src/Data/Maybe.purs#L264-L265\n"}