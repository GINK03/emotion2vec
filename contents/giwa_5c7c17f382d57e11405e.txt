{"context": " More than 1 year has passed since last update.Here is a sample code.\nPlease install Dropbox module from here. https://github.com/dropbox/dropbox-sdk-python\nimport sys\nimport os\nimport argparse\n\nimport dropbox\nfrom dropbox.files import WriteMode\nfrom dropbox.exceptions import ApiError\n\n# Add OAuth2 access token here.\n# You can generate one for yourself in the App Console.\n# See <https://blogs.dropbox.com/developers/2014/05/generate-an-access-token-for-your-own-account/>\nTOKEN = os.environ['DBTOKEN']\n\n\n# Uploads contents of local_file to Dropbox\ndef backup(local_file, backup_path):\n    with open(local_file, 'rb') as f:\n        # We use WriteMode=overwrite to make sure that the settings in the file\n        # are changed on upload\n        try:\n            dbx.files_upload(f, backup_path, mode=WriteMode('overwrite'))\n        except ApiError as err:\n            # This checks for the specific error where a user doesn't have\n            # enough Dropbox space quota to upload this file\n            if (err.error.is_path() and\n                    err.error.get_path().error.is_insufficient_space()):\n                sys.exit(\"Cannot back up; insufficient space.\")\n            elif err.user_message_text:\n                print(err.user_message_text)\n                sys.exit()\n            else:\n                print(err)\n                sys.exit()\n\nparser = argparse.ArgumentParser(description='Upload a file to Dropbox')\nparser.add_argument('--file', '-f', help='file path')\nparser.add_argument('--dbpath', '-d', help='dropbox path')\n\nif __name__ == '__main__':\n    # Create an instance of a Dropbox class, which can make requests to the API.\n    dbx = dropbox.Dropbox(TOKEN)\n    args = parser.parse_args()\n    if not args.file:\n        print(\"Please specify the file\" +\n                \"Usage: uploadb.py -f file/path -d dropbox/path\")\n        exit(1)\n    local_file = args.file\n    if not args.dbpath:\n        dbpath = '/' + local_file\n    else:\n        dbpath = args.dbpath\n\n    # Create a backup of the current settings file\n    backup(local_file, dbpath)\n\nMotivation\nSomehow scp and sftcp are sooo slow.(I am in country side of France now) But http access is fine, though it is not so fast. I guess there are some listriction for specific port. I want get a file from my server in Japan, which I can ssh to. I upload a file to dropbox and download it to my machine.\n\n\nHere is a sample code.\n\nPlease install Dropbox module from here. https://github.com/dropbox/dropbox-sdk-python\n\n```python\nimport sys\nimport os\nimport argparse\n\nimport dropbox\nfrom dropbox.files import WriteMode\nfrom dropbox.exceptions import ApiError\n\n# Add OAuth2 access token here.\n# You can generate one for yourself in the App Console.\n# See <https://blogs.dropbox.com/developers/2014/05/generate-an-access-token-for-your-own-account/>\nTOKEN = os.environ['DBTOKEN']\n\n\n# Uploads contents of local_file to Dropbox\ndef backup(local_file, backup_path):\n    with open(local_file, 'rb') as f:\n        # We use WriteMode=overwrite to make sure that the settings in the file\n        # are changed on upload\n        try:\n            dbx.files_upload(f, backup_path, mode=WriteMode('overwrite'))\n        except ApiError as err:\n            # This checks for the specific error where a user doesn't have\n            # enough Dropbox space quota to upload this file\n            if (err.error.is_path() and\n                    err.error.get_path().error.is_insufficient_space()):\n                sys.exit(\"Cannot back up; insufficient space.\")\n            elif err.user_message_text:\n                print(err.user_message_text)\n                sys.exit()\n            else:\n                print(err)\n                sys.exit()\n\nparser = argparse.ArgumentParser(description='Upload a file to Dropbox')\nparser.add_argument('--file', '-f', help='file path')\nparser.add_argument('--dbpath', '-d', help='dropbox path')\n\nif __name__ == '__main__':\n    # Create an instance of a Dropbox class, which can make requests to the API.\n    dbx = dropbox.Dropbox(TOKEN)\n    args = parser.parse_args()\n    if not args.file:\n        print(\"Please specify the file\" +\n                \"Usage: uploadb.py -f file/path -d dropbox/path\")\n        exit(1)\n    local_file = args.file\n    if not args.dbpath:\n        dbpath = '/' + local_file\n    else:\n        dbpath = args.dbpath\n\n    # Create a backup of the current settings file\n    backup(local_file, dbpath)\n```\n\nMotivation\n\n\nSomehow scp and sftcp are sooo slow.(I am in country side of France now) But http access is fine, though it is not so fast. I guess there are some listriction for specific port. I want get a file from my server in Japan, which I can ssh to. I upload a file to dropbox and download it to my machine.\n", "tags": ["Dropbox", "Python"]}