{"context": " More than 1 year has passed since last update.FactoryGirl\u3092Cucumber\u304b\u3089\u4f7f\u3046\u3068\u304d\u306b\u3001step definition\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308b\u3051\u308c\u3069\u3082\u3001\u5b9f\u306fFactoryGirl\u306b\u57fa\u672c\u7684\u306a\u7269\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u8a71\u3002\u3067\u3082\u82f1\u8a9e\u3060\u3051\u306a\u306e\u304c\u6b8b\u5ff5\u3067\u3059\u3002\n\n\u57fa\u672c\u624b\u9806\n\u30d5\u30a3\u30fc\u30c1\u30e3\u306b\u3066\u30ec\u30b3\u30fc\u30c9\u30921\u500b\u8ffd\u52a0\n\nfeature/mypost.feature\n  Senario: really simple feature for Post\n    Given the following post exists:\n      | Title       | Body                |\n      | a fun title | here is the content |\n\n\n\u5bfe\u5fdc\u3059\u308b Factory \u3092\u66f8\u304f\n\nspec/factory_girl/mypost_factory.rb\n  FactoryGirl.define do\n    factory :post do\n    end\n  end\n\n\n\u4ee5\u4e0a\u3002\n\n\u30d5\u30a3\u30fc\u30c1\u30e3\u3092\u66f8\u304f\u3068\u304d\u306e\u6ce8\u610f\n\n\u30af\u30e9\u30b9\u540d\u306f\u5c0f\u6587\u5b57\u3067\n\u30a2\u30f3\u30c0\u30fc\u30d0\u30fc\u3067\u306f\u306a\u304f\u30b9\u30da\u30fc\u30b9\u306b\u3059\u308b\n\u5358\u6570\u3068\u8907\u6570\u306b\u6ce8\u610f\n\n\nexample.feature\n  # AdminUser\u30e2\u30c7\u30eb\u3067 name \u5c5e\u6027\u3092 \"Mother\" \u306b\u3059\u308b\n  Given a admin user exists with a name of \"Mother\"\n\n\u3000# \uff12\u3064\u306e Post \u30e2\u30c7\u30eb\u3092\u4f5c\u308b\n  And 2 posts exists\n\n  # \u540c\u3058 Tag \u3092 10 \u500b\u4f5c\u308b\n  Given 10 tags exist with a name of \"crazy\"\n\n  # \u30c6\u30fc\u30d6\u30eb\u3092\u3082\u3068\u306b\u8907\u6570\u30e6\u30fc\u30b6\u3092\u8ffd\u52a0\n  And the following users exist:\n    | Name | Email       |\n    | hoge | hoge@me.com |\n    | fuga |             |\n\n\n\n\u30d5\u30a3\u30fc\u30c1\u30e3\u3092\u66f8\u304f\u3068\u304d\u306e\u5c0f\u6280\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5c11\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001\uff11\u884c\u3067\u3067\u304d\u308b\u3002\n\n\none_line\n    Given a user exists with a name of \"norobust\"\n\n\n\n\u95a2\u9023(association)\n\n\nassoc\n  Given the following Author exists\n    | ID | Name     |\n    | 12 | norobust |\n  And the following Posts exists\n    | Title      | Author         |\n    | Thanks God | Name: norobust | \n\n\n\n\u95a2\u9023(foreign key \u6307\u5b9a\u3057\u3066\u308b\u5834\u5408)\n\n\u3053\u3053\u3067\u306f\u3001has_many :posts, :foreign_key => :watcher_id \u307f\u305f\u3044\u306a\u306e\u3092\u524d\u63d0\u306b\u3002\n\nassoc\n  Given the following Author exists\n    | ID | Name     |\n    | 12 | Carmit   |\n  And the following Posts exists\n    | Title      | watcher_id |\n    | Thanks God | ID: 14     | \n\n\n\u3082\u3061\u308d\u3093 Name: Carmit \u3067\u3082\u5927\u4e08\u592b\u3002\n\n\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u3092\u66f8\u304f\u3068\u304d\u306e\u6ce8\u610f\nGiven the following XXX exists \u306e XXX \u304c factory \u306e\u540d\u524d\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nfeature\n  Given a guest user exists\n\n\n\nfactory\nFactoryGirl.define do\n  factory :guest_user, :class => User do\n  end\nend\n\n\n\n\u304a\u307e\u3051\nFactoryGirl\u306b\u540c\u68b1\u306efeature\u3088\u308a\u3002\n\nfeature\n  Scenario: the user, norobust, exists\n    When a user exists with name of \"norobust\"\n    Then I should find the following for the last user:\n    | Name     |\n    | norobust |\n\n\n\u8981\u3059\u308b\u306b norobust \u30e6\u30fc\u30b6\u3092\u767b\u9332\u3057\u305f\u3089\u3001\u6700\u5f8c\u306e\u30ec\u30b3\u30fc\u30c9(User.last)\u306b norobust \u30e6\u30fc\u30b6\u304c\u5c45\u307e\u3059\u3088\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u3053\u308c\u3092\u3084\u308b\u306b\u306f\u3001\u30b9\u30c6\u30c3\u30d7\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nstep_definitions/database_steps.rb\nThen /^I should find the following for the last (.*):$/ do |model, table|\n  model_class = model.gsub(\" \",\"_\").camelize.constantize\n  last_instance = model_class.last or raise \"No #{model.pluralize} exist\"\n  table.hashes.first.each do |key, value|\n     last_instance.attributes[key.underscore].to_s.should == value\n  end\nend\n\n\nFactoryGirl\u3092Cucumber\u304b\u3089\u4f7f\u3046\u3068\u304d\u306b\u3001step definition\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308b\u3051\u308c\u3069\u3082\u3001\u5b9f\u306fFactoryGirl\u306b\u57fa\u672c\u7684\u306a\u7269\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u8a71\u3002\u3067\u3082\u82f1\u8a9e\u3060\u3051\u306a\u306e\u304c\u6b8b\u5ff5\u3067\u3059\u3002\n\n## \u57fa\u672c\u624b\u9806\n\n \u30d5\u30a3\u30fc\u30c1\u30e3\u306b\u3066\u30ec\u30b3\u30fc\u30c9\u30921\u500b\u8ffd\u52a0\n\n```ruby:feature/mypost.feature\n  Senario: really simple feature for Post\n    Given the following post exists:\n      | Title       | Body                |\n      | a fun title | here is the content |\n```\n\n \u5bfe\u5fdc\u3059\u308b Factory \u3092\u66f8\u304f\n\n```ruby:spec/factory_girl/mypost_factory.rb\n  FactoryGirl.define do\n    factory :post do\n    end\n  end\n```\n\n\u4ee5\u4e0a\u3002\n\n## \u30d5\u30a3\u30fc\u30c1\u30e3\u3092\u66f8\u304f\u3068\u304d\u306e\u6ce8\u610f\n\n* \u30af\u30e9\u30b9\u540d\u306f\u5c0f\u6587\u5b57\u3067\n* \u30a2\u30f3\u30c0\u30fc\u30d0\u30fc\u3067\u306f\u306a\u304f\u30b9\u30da\u30fc\u30b9\u306b\u3059\u308b\n* \u5358\u6570\u3068\u8907\u6570\u306b\u6ce8\u610f\n\n``` example.feature\n  # AdminUser\u30e2\u30c7\u30eb\u3067 name \u5c5e\u6027\u3092 \"Mother\" \u306b\u3059\u308b\n  Given a admin user exists with a name of \"Mother\"\n\n\u3000# \uff12\u3064\u306e Post \u30e2\u30c7\u30eb\u3092\u4f5c\u308b\n  And 2 posts exists\n\n  # \u540c\u3058 Tag \u3092 10 \u500b\u4f5c\u308b\n  Given 10 tags exist with a name of \"crazy\"\n\n  # \u30c6\u30fc\u30d6\u30eb\u3092\u3082\u3068\u306b\u8907\u6570\u30e6\u30fc\u30b6\u3092\u8ffd\u52a0\n  And the following users exist:\n    | Name | Email       |\n    | hoge | hoge@me.com |\n    | fuga |             |\n```\n\n## \u30d5\u30a3\u30fc\u30c1\u30e3\u3092\u66f8\u304f\u3068\u304d\u306e\u5c0f\u6280\n\n* \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u5c11\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001\uff11\u884c\u3067\u3067\u304d\u308b\u3002\n\n```ruby:one_line\n    Given a user exists with a name of \"norobust\"\n```\n\n* \u95a2\u9023(association)\n\n```ruby:assoc\n  Given the following Author exists\n    | ID | Name     |\n    | 12 | norobust |\n  And the following Posts exists\n    | Title      | Author         |\n    | Thanks God | Name: norobust | \n```\n\n* \u95a2\u9023(foreign key \u6307\u5b9a\u3057\u3066\u308b\u5834\u5408)\n\n\u3053\u3053\u3067\u306f\u3001```has_many :posts, :foreign_key => :watcher_id``` \u307f\u305f\u3044\u306a\u306e\u3092\u524d\u63d0\u306b\u3002\n\n```ruby:assoc\n  Given the following Author exists\n    | ID | Name     |\n    | 12 | Carmit   |\n  And the following Posts exists\n    | Title      | watcher_id |\n    | Thanks God | ID: 14     | \n```\n\n\u3082\u3061\u308d\u3093 ```Name: Carmit``` \u3067\u3082\u5927\u4e08\u592b\u3002\n\n## \u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u3092\u66f8\u304f\u3068\u304d\u306e\u6ce8\u610f\n\n```Given the following XXX exists``` \u306e XXX \u304c factory \u306e\u540d\u524d\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```ruby:feature\n  Given a guest user exists\n```\n```ruby:factory\nFactoryGirl.define do\n  factory :guest_user, :class => User do\n  end\nend\n```\n\n## \u304a\u307e\u3051\n\nFactoryGirl\u306b\u540c\u68b1\u306efeature\u3088\u308a\u3002\n\n```ruby:feature\n  Scenario: the user, norobust, exists\n    When a user exists with name of \"norobust\"\n    Then I should find the following for the last user:\n    | Name     |\n    | norobust |\n```\n\n\u8981\u3059\u308b\u306b norobust \u30e6\u30fc\u30b6\u3092\u767b\u9332\u3057\u305f\u3089\u3001\u6700\u5f8c\u306e\u30ec\u30b3\u30fc\u30c9(User.last)\u306b norobust \u30e6\u30fc\u30b6\u304c\u5c45\u307e\u3059\u3088\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u3053\u308c\u3092\u3084\u308b\u306b\u306f\u3001\u30b9\u30c6\u30c3\u30d7\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```ruby:step_definitions/database_steps.rb\nThen /^I should find the following for the last (.*):$/ do |model, table|\n  model_class = model.gsub(\" \",\"_\").camelize.constantize\n  last_instance = model_class.last or raise \"No #{model.pluralize} exist\"\n  table.hashes.first.each do |key, value|\n     last_instance.attributes[key.underscore].to_s.should == value\n  end\nend\n```\n", "tags": ["FactoryGirl", "Cucumber", "Rails", "Ruby"]}