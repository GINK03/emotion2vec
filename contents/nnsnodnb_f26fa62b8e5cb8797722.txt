{"context": "\n\n\u74b0\u5883\n\nXcode 8.1\n\u3048\u308b\u305f\u305d (OS X El Capitan 10.11.6)\nSwift 3.0.1\niOS 10.1 (iPhoneSE)\n\n\n\u753b\u9762\u69cb\u6210\n\u6b63\u65b9\u5f62\u306e previewView (UIView)\u304c\u914d\u7f6e\u3055\u308c\u3066\u3044\u3066\u3001\nchangeUseCamera: \u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\u3068 pushShutter: \u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\u304c\u8a2d\u7f6e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nViewController.swift\nimport UIKit\nimport AVFoundation\n\nclass ViewController: UIViewController {\n\n    @IBOutlet weak var previewView: UIView!\n\n    var isBackCamera: Bool = true\n    var captureSession: AVCaptureSession!\n    var cameraDevices: AVCaptureDevice!\n    var imageOutput: AVCaptureStillImageOutput!\n\n    // MARK: - Life Cycle\n    override func viewWillAppear(_ animated: Bool) {\n        super.viewWillAppear(animated)\n        self.setupCamera(isBack: self.isBackCamera)\n    }\n\n    // MARK: - Private Method\n    fileprivate func setupCamera(isBack: Bool) {\n        guard let devices = AVCaptureDevice.devices() else {\n            return\n        }\n        for device in devices {\n            // isBack == True  -> Back Camera\n            // iSBack == False -> Front Camera\n            let devicePosition: AVCaptureDevicePosition = isBack ? .back : .front\n            if (device as AnyObject).position == devicePosition {\n                self.cameraDevices = device as! AVCaptureDevice\n            }\n        }\n\n        let videoInput: AVCaptureInput!\n        do {\n            videoInput = try AVCaptureDeviceInput.init(device: self.cameraDevices)\n        } catch {\n            videoInput = nil\n        }\n\n        self.captureSession = AVCaptureSession()\n        self.captureSession.addInput(videoInput)\n\n        self.imageOutput = AVCaptureStillImageOutput()\n        self.captureSession.addOutput(self.imageOutput)\n\n        let captureVideoLayer = AVCaptureVideoPreviewLayer.init(session: self.captureSession)\n        let layerRect = CGRect(x: self.previewView.frame.origin.x,\n                               y: 0,\n                               width: UIScreen.main.bounds.size.width,\n                               height: UIScreen.main.bounds.size.width)\n\n        captureVideoLayer?.frame = layerRect\n        captureVideoLayer?.videoGravity = AVLayerVideoGravityResizeAspectFill\n\n        guard let videoLayer = captureVideoLayer else {\n            return\n        }\n        self.previewView.layer.addSublayer(videoLayer)\n\n        // \u958b\u59cb\n        self.captureSession.startRunning()\n    }\n\n    // MARK: - IBAction\n\n    // Change Camera\n    @IBAction func changeUseCamera(_ sender: Any) {\n        self.isBackCamera = !self.isBackCamera\n        setupCamera(isBack: self.isBackCamera)\n    }\n\n    // Save taken photo\n    @IBAction func pushShutter(_ sender: Any) {\n        let captureVideoConnection = imageOutput.connection(withMediaType: AVMediaTypeVideo)\n\n        self.imageOutput.captureStillImageAsynchronously(from: captureVideoConnection) { [weak self] (imageDataBuffer, error) -> Void in\n\n            let capturedImageData: Data = AVCaptureStillImageOutput.jpegStillImageNSDataRepresentation(imageDataBuffer) as Data\n\n            guard let image = UIImage(data: capturedImageData),\n                    let wself = self else {\n                return\n            }\n\n            UIImageWriteToSavedPhotosAlbum(image, wself, nil, nil)\n        }\n    }\n}\n\n\n\n\u88dc\u8db3\n\u3053\u306e\u307e\u307e\u3060\u3068\u3001\u4e00\u5ea6\u30a2\u30d7\u30ea\u304b\u3089\u96e2\u8131\u3092\u3057\u3066\u3057\u307e\u3046\u3068\u30ab\u30e1\u30e9\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u5207\u308c\u3066\u3057\u307e\u3046\u306e\u3067 AppDelegate.swift \u306e applicationDidBecomeActive: \u7b49\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u901a\u77e5\u3057\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u518d\u59cb\u52d5\u3057\u306a\u3044\u3068\u30c0\u30e1\u306a\u3088\u3046\u3067\u3059\u3002\n## \u74b0\u5883\n\n- Xcode 8.1\n- \u3048\u308b\u305f\u305d (OS X El Capitan 10.11.6)\n- Swift 3.0.1\n- iOS 10.1 (iPhoneSE)\n\n## \u753b\u9762\u69cb\u6210\n\n\u6b63\u65b9\u5f62\u306e **previewView** (UIView)\u304c\u914d\u7f6e\u3055\u308c\u3066\u3044\u3066\u3001\n**changeUseCamera:** \u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\u3068 **pushShutter:** \u30a2\u30af\u30b7\u30e7\u30f3\u30dc\u30bf\u30f3\u304c\u8a2d\u7f6e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n```swift:ViewController.swift\nimport UIKit\nimport AVFoundation\n\nclass ViewController: UIViewController {\n\n\t@IBOutlet weak var previewView: UIView!\n\t\n\tvar isBackCamera: Bool = true\n\tvar captureSession: AVCaptureSession!\n\tvar cameraDevices: AVCaptureDevice!\n\tvar imageOutput: AVCaptureStillImageOutput!\n\t\n\t// MARK: - Life Cycle\n\toverride func viewWillAppear(_ animated: Bool) {\n\t\tsuper.viewWillAppear(animated)\n\t\tself.setupCamera(isBack: self.isBackCamera)\n\t}\n\n\t// MARK: - Private Method\n\tfileprivate func setupCamera(isBack: Bool) {\n\t\tguard let devices = AVCaptureDevice.devices() else {\n\t\t\treturn\n\t\t}\n\t\tfor device in devices {\n\t\t\t// isBack == True  -> Back Camera\n\t\t\t// iSBack == False -> Front Camera\n\t\t\tlet devicePosition: AVCaptureDevicePosition = isBack ? .back : .front\n\t\t\tif (device as AnyObject).position == devicePosition {\n\t\t\t\tself.cameraDevices = device as! AVCaptureDevice\n\t\t\t}\n\t\t}\n\n\t\tlet videoInput: AVCaptureInput!\n\t\tdo {\n\t\t\tvideoInput = try AVCaptureDeviceInput.init(device: self.cameraDevices)\n\t\t} catch {\n\t\t\tvideoInput = nil\n\t\t}\n\n\t\tself.captureSession = AVCaptureSession()\n\t\tself.captureSession.addInput(videoInput)\n\n\t\tself.imageOutput = AVCaptureStillImageOutput()\n\t\tself.captureSession.addOutput(self.imageOutput)\n\n\t\tlet captureVideoLayer = AVCaptureVideoPreviewLayer.init(session: self.captureSession)\n\t\tlet layerRect = CGRect(x: self.previewView.frame.origin.x,\n\t\t\t\t\t\t       y: 0,\n\t\t\t\t\t\t       width: UIScreen.main.bounds.size.width,\n\t\t\t\t\t\t       height: UIScreen.main.bounds.size.width)\n\n\t\tcaptureVideoLayer?.frame = layerRect\n\t\tcaptureVideoLayer?.videoGravity = AVLayerVideoGravityResizeAspectFill\n\n\t\tguard let videoLayer = captureVideoLayer else {\n\t\t\treturn\n\t\t}\n\t\tself.previewView.layer.addSublayer(videoLayer)\n\n\t\t// \u958b\u59cb\n\t\tself.captureSession.startRunning()\n\t}\n\t\n\t// MARK: - IBAction\n\t\n\t// Change Camera\n\t@IBAction func changeUseCamera(_ sender: Any) {\n\t\tself.isBackCamera = !self.isBackCamera\n\t\tsetupCamera(isBack: self.isBackCamera)\n\t}\n\n\t// Save taken photo\n\t@IBAction func pushShutter(_ sender: Any) {\n\t\tlet captureVideoConnection = imageOutput.connection(withMediaType: AVMediaTypeVideo)\n\n\t\tself.imageOutput.captureStillImageAsynchronously(from: captureVideoConnection) { [weak self] (imageDataBuffer, error) -> Void in\n\n\t\t\tlet capturedImageData: Data = AVCaptureStillImageOutput.jpegStillImageNSDataRepresentation(imageDataBuffer) as Data\n\n\t\t\tguard let image = UIImage(data: capturedImageData),\n\t\t\t\t\tlet wself = self else {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tUIImageWriteToSavedPhotosAlbum(image, wself, nil, nil)\n\t\t}\n\t}\n}\n```\n\n## \u88dc\u8db3\n\n\u3053\u306e\u307e\u307e\u3060\u3068\u3001\u4e00\u5ea6\u30a2\u30d7\u30ea\u304b\u3089\u96e2\u8131\u3092\u3057\u3066\u3057\u307e\u3046\u3068\u30ab\u30e1\u30e9\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u304c\u5207\u308c\u3066\u3057\u307e\u3046\u306e\u3067 `AppDelegate.swift` \u306e **applicationDidBecomeActive:** \u7b49\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u901a\u77e5\u3057\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u518d\u59cb\u52d5\u3057\u306a\u3044\u3068\u30c0\u30e1\u306a\u3088\u3046\u3067\u3059\u3002\n", "tags": ["Xcode", "Swift", "iOS", "swift3", "avfoundation"]}