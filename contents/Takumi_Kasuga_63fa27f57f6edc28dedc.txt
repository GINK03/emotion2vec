{"context": " More than 1 year has passed since last update.\n\n Xin ch\u00e0o c\u00e1c b\u1ea1n\nb\u00e0i vi\u1ebft n\u00e0y \u0111\u01b0\u1ee3c d\u1ecbch t\u1eeb \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\uff08\u30b5\u30fc\u30d0\u30fc\u7de8\uff09- AWS\u4e0a\u3067\u69cb\u7bc9\u3059\u308bRESTful\u30a2\u30d7\u30ea\u52c9\u5f37\u4f1a\uff5eWeb\u958b\u767a\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7\uff5e\u3010\u7b2c10\u56de\u3011\u30de\u30cb\u30e5\u30a2\u30eb c\u1ee7a t\u00e1c gi\u1ea3 @k_shimoji \nH\u00f4m nay ch\u00fang ta s\u1ebd h\u1ecdc v\u1ec1 c\u00e1c c\u1ea5u tr\u00fac l\u1ea1i code hay c\u00f2n g\u1ecdi l\u00e0 \"refactoring\".\n\n Refactoring l\u00e0 g\u00ec ?\nRefactoring \u2013 t\u00e1i c\u1ea5u tr\u00fac \u2013 l\u00e0 qu\u00e1 tr\u00ecnh l\u00e0m thay \u0111\u1ed5i m\u00e3 hi\u1ec7n c\u00f3 b\u00ean trong m\u00e0 kh\u00f4ng thay \u0111\u1ed5i h\u00e0nh vi b\u00ean ngo\u00e0i c\u1ee7a n\u00f3. N\u00f3i c\u00e1ch kh\u00e1c, t\u1ee9c l\u00e0 thay \u0111\u1ed5i c\u00e1ch n\u00f3 th\u1ef1c hi\u1ec7n, nh\u01b0ng kh\u00f4ng kh\u00f4ng thay \u0111\u1ed5i n\u00f3 l\u00e0m c\u00e1i g\u00ec. M\u1ee5c \u0111\u00edch l\u00e0 \u0111\u1ec3 c\u1ea3i thi\u1ec7n c\u01a1 c\u1ea5u n\u1ed9i b\u1ed9.\n\n C\u00e1c b\u01b0\u1edbc Refactoring\n\nX\u00e1c \u0111\u1ecbnh n\u01a1i c\u1ea7n refactoring.\nVi\u1ebft c\u00e1c test \u0111\u1ec3 ki\u1ec3m tra .\nrefactoring\ntest\nTr\u1edf l\u1ea1i b\u01b0\u1edbc 1\n\n\n X\u00e1c \u0111\u1ecbnh n\u01a1i c\u1ea7n refactoring\nCode smells (code m\u00e0 b\u1ed1c m\u00f9i, ho\u1eb7c c\u00f3 m\u00f9i l\u1ea1 trong code) l\u00e0 b\u1ea5t k\u1ef3 tri\u1ec7u ch\u1ee9ng b\u1ea5t \u1ed5n n\u00e0o b\u00ean trong m\u00e3 ngu\u1ed3n c\u1ee7a m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh, m\u00e0 v\u00ec n\u00f3 c\u00f3 th\u1ec3 s\u1ebd d\u1eabn \u0111\u1ebfn c\u00e1c v\u1ea5n \u0111\u1ec1 l\u1edbn h\u01a1n. Code smells kh\u00f4ng ph\u1ea3i l\u00e0 bugs (l\u1ed7i l\u1eadp tr\u00ecnh), ngh\u0129a l\u00e0 ch\u00fang kh\u00f4ng l\u00e0m sai ch\u1ee9 n\u0103ng c\u1ee7a \u1ee9ng d\u1ee5ng. Thay v\u00e0o \u0111\u00f3, ch\u00fang l\u00e0 bi\u1ec3u hi\u1ec7n c\u1ee7a s\u1ef1 y\u1ebfu k\u00e9m trong thi\u1ebft k\u1ebf v\u00e0 s\u1ebd l\u00e0m cho qu\u00e1 tr\u00ecnh ph\u00e1t tri\u1ec3n \u1ee9ng d\u1ee5ng b\u1ecb ch\u1eadm l\u1ea1i ho\u1eb7c t\u0103ng nguy c\u01a1 c\u1ee7a bugs ho\u1eb7c l\u1ed7i trong t\u01b0\u01a1ng lai. \n* Quote: \u0110\u1ecbnh ngh\u0129a c\u00e1c code b\u1ed1c m\u00f9i *\n\nL\u1eb7p code\nmethod qu\u00e1 d\u00e0i\nClass qu\u00e1 to\nQu\u00e1 nhi\u1ec1u arguments\nQu\u00e1 nhi\u1ec1u s\u1ef1 thay \u0111\u1ed5i\nBi\u1ebfn thay d\u1ed5i \nC\u00e1c thu\u1ed9c t\u00ednh, s\u1ef1 ph\u1ee5 thu\u1ed9c b\u1ea5t h\u1ee3p l\u00fd c\u1ee7a operation\nHeader c\u1ee7a d\u1eef li\u1ec7u\nQu\u00e1 tu\u00e2n th\u1ee7 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u nguy\u00ean th\u1ee7y.\nL\u1ec7nh Switch\nTh\u1eeba k\u1ebf song song \nClass l\u01b0\u1eddi bi\u1ebfng\nNh\u1eefng th\u00e0nh ph\u1ea7n \u0111\u01b0\u1ee3c sinh ra \u0111\u00e1ng nghi\nThu\u1ed9c t\u00ednh t\u1ea1m th\u1eddi\nChu\u1ed7i tin nh\u1eafn\nTrung gian\nC\u00e1c m\u1ed1i quan h\u1ec7 kh\u00f4ng \u0111\u00fang\nClass interface kh\u00f4ng ph\u00f9 h\u1ee3p\nTh\u01b0 vi\u1ec7n qu\u00e1 c\u0169\nData class\nT\u1eeb ch\u1ed1i th\u1eeba k\u1ebf\nComment\n\n\n M\u00ecnh s\u1ebd ph\u00e2n lo\u1ea1i c\u00e1c m\u00f9i n\u00e0y ra\nVi\u1ec7c ph\u00e2n nh\u00f3m n\u00e0y ho\u00e0n to\u00e0n l\u00e0 m\u1ed9t \u00fd t\u01b0\u1edfng c\u00e1 nh\u00e2n nh\u1eb1m m\u1ee5c \u0111\u00edch t\u0103ng t\u00ednh d\u1ec5 nh\u1edb. \u0110\u00e2y kh\u00f4ng ph\u1ea3i l\u00e0 thu\u1eadt ng\u1eef hay keyword n\u00ean ch\u1ec9 c\u1ea7n hi\u1ec3u \u0111\u01b0\u1ee3c ch\u00fang th\u00ec b\u1ea1n mu\u1ed1n g\u1ecdi th\u1ebf n\u00e0o c\u0169ng \u0111\u01b0\u1ee3c. Ch\u00fang ta s\u1ebd \u0111i v\u00e0o t\u1eebng nh\u00f3m: \n\nM\u00f9i qu\u00e1 r\u00f5 r\u00e0ng\nM\u00f9i xu\u1ea5t hi\u1ec7n khi b\u1ea1n b\u1eaft \u0111\u1ea7u \u0111\u1ecdc code\nC\u1ea5u tr\u00fac r\u1eafc r\u1ed1i\nH\u1ec7 th\u1ed1ng l\u1ed7i th\u1eddi\nM\u00f9i tanh\nM\u00f9i m\u1ed3 h\u00f4i\nM\u00f9i l\u1eeba d\u1ed1i\n\nT\u00f4i s\u1ebd gi\u1ea3i th\u00edch \u1edf ph\u1ea7n d\u01b0\u1edbi.\nCho m\u1ed7i m\u00f9i, t\u00f4i s\u1ebd vi\u1ebft m\u1ed9t \"c\u00e1ch kh\u1eed m\u00f9i\" v\u00e0 \"nh\u1eefng nguy\u00ean t\u1eafc n\u00f3 vi ph\u1ea1m\", c\u00f2n ph\u1ea7n gi\u1ea3i th\u00edch th\u00ec \u1edf b\u00e0i vi\u1ebft n\u00e0y ch\u1eafc l\u00e0 kh\u00f4ng \u0111\u1ee7, v\u00ec v\u1eady mong c\u00e1c b\u1ea1n t\u00ecm ki\u1ebfm th\u00eam th\u00f4ng tin v\u1ec1 n\u00f3 tr\u00ean google n\u1ebfu c\u00e1c b\u1ea1n th\u1ef1c s\u1ef1 h\u1ee9ng th\u00fa.\n\nM\u00f9i qu\u00e1 r\u00f5 r\u00e0ng\nKh\u00f4ng c\u1ea7n l\u00e0m g\u00ec c\u0169ng bi\u1ebft code c\u00f3 m\u00f9i, nh\u00ecn qua ch\u1ee9 kh\u00f4ng c\u1ea7n \u0111\u1ecdc code lu\u00f4n.\n\n2. Method qu\u00e1 d\u00e0i\n\n\nH\u00e3y t\u00e1ch n\u00f3 ra.\n\n\n3. Class qu\u00e1 l\u1edbn\n\n\nT\u00e1ch n\u00f3 ra.\n\n\n4. Qu\u00e1 nhi\u1ec1u arguments\n\n\nH\u00e3y ph\u00e2n lo\u1ea1i c\u00e1c object r\u00f5 r\u00e0ng h\u01a1n.\n\n\n10. Qu\u00e1 nhi\u1ec1u l\u1ec7nh switch\n\n\nB\u1ea1n c\u00f3 m\u1ed9t Switch Statements qu\u00e1 ph\u1ee9c t\u1ea1p ho\u1eb7c m\u1ed9t chu\u1ed7i c\u00e1c v\u00f2ng if then l\u1ed3ng nhau r\u1ea5t r\u1eafc r\u1ed1i. H\u00e3y s\u1eed d\u1ee5ng h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng.\n\n\n\n\nM\u00f9i xu\u1ea5t hi\u1ec7n khi b\u1ea1n b\u1eaft \u0111\u1ea7u \u0111\u1ecdc code\nNh\u1eefng m\u00f9i n\u00e0y ngay l\u1eadp t\u1ee9c xu\u1ea5t hi\u1ec7n khi b\u1ea1n \u0111\u1ecdc qua c\u00e1c ti\u00eau \u0111\u1ec1\n\n1. L\u1eb7p code\n\n\nVi ph\u1ea1m nguy\u00ean t\u1eafc DRY, h\u00e3y h\u1ea1n ch\u1ebf vi\u1ec7c copy paste l\u1ea1i code.\n\n\n12. Class l\u01b0\u1eddi bi\u1ebfng\n\n\nM\u1ed9t class nh\u1ecf t\u1ed3n t\u1ea1i m\u00e0 kh\u00f4ng c\u00f3 nhi\u1ec1u \u00fd ngh\u0129a v\u1edbi nh\u1eefng g\u00ec b\u1ea1n \u0111ang l\u00e0m, t\u1ed1t nh\u1ea5t l\u00e0 t\u1ea1o m\u1ed9t role \u1edf class kh\u00e1c ch\u1ee9 kh\u00f4ng c\u1ea7n \u0111\u1ec3 ri\u00eang ra.\n\n\n16. Trung gian\n\n\n Vi\u1ec7c hi\u1ec3u v\u00e0 thay \u0111\u1ed5i m\u1ed9t class th\u01b0\u1eddng s\u1ebd t\u1ed1n r\u1ea5t nhi\u1ec1u chi ph\u00ed v\u00e0 th\u1eddi gian. V\u1eady n\u00ean n\u1ea5u nh\u01b0 c\u00f3 m\u1ed9t class n\u00e0o \u0111\u00f3 kh\u00f4ng \u0111\u00e1ng \u0111\u1ec3 b\u1ecf ra nh\u1eefng chi ph\u00ed nh\u01b0 v\u1eady th\u00ec h\u00e3y x\u00f3a n\u00f3 \u0111i.\n\n\n18. Interface Class kh\u00f4ng ph\u00f9 h\u1ee3p\n\n\nAi \u0111\u00f3 \u0111\u00e3 l\u00e0m m\u1ed9t vi\u1ec7c t\u01b0\u01a1ng t\u1ef1 ? h\u00e3y ng\u1ea7m hi\u1ec3u v\u1edbi nhau.\n\n\n20. Data class\n\n\nHay c\u00f2n g\u1ecdi l\u00e0 \"Thi\u1ebfu domain model\". H\u00e3y nh\u1edb data v\u00e0 c\u00e1c h\u00e0nh vi.\n\n\n\n\nC\u1ea5u tr\u00fac r\u1eafc r\u1ed1i\n\n5. Qu\u00e1 nhi\u1ec1u s\u1ef1 thay \u0111\u1ed5i\n\n\nVi ph\u1ea1m nguy\u00ean t\u1eafc SRP (single responsibility principle). M\u1ed9t class \u0111\u00e3 l\u00e0m vi\u1ec7c qu\u00e1 t\u1ea3i, hay chia s\u1ebb c\u00f4ng vi\u1ec7c c\u1ee7a n\u00f3.\n\n\n6. Bi\u1ebfn b\u1ecb thay \u0111\u1ed5i\n\n\nChia s\u1ebb 1 c\u00f4ng vi\u1ec7c cho qu\u00e1 nhi\u1ec1u class. H\u00e3y ph\u00e2n chia tr\u00e1ch nhi\u1ec7m r\u00f5 r\u00e0ng h\u01a1n .\n\n\n11. Th\u1eeba k\u1ebf song song\n\n\nM\u1ed9t v\u00ed d\u1ee5 \u0111i\u1ec3m h\u00ecnh c\u1ee7a vi ph\u1ea1m nguy\u00ean t\u1eafc OCP (open / closed principle).  M\u1ed7i khi b\u1ea1n kh\u1edfi t\u1ea1o m\u1ed9t class con c\u1ee7a m\u1ed9t class th\u00ec b\u1ea1n th\u1ea5y r\u1eb1ng m\u00ecnh c\u1ea7n ph\u1ea3i t\u1ea1o ti\u1ebfp m\u1ed9t class con c\u1ee7a m\u1ed9t class kh\u00e1c t\u01b0\u01a1ng \u1ee9ng. H\u00e3y chia s\u1ebb \u0111\u00fang c\u00f4ng vi\u1ec7c c\u1ee7a class cha v\u00e0 class con. \n\n\n\n\nH\u1ec7 th\u1ed1ng l\u1ed7i th\u1eddi\n\u1ede th\u1eddi \u0111i\u1ec3m tr\u01b0\u1edbc ( ph\u1ee5 thu\u1ed9c v\u00e0o h\u1ec7t th\u1ed1ng th\u1eddi \u0111\u00f3 ho\u1eb7c th\u1eddi gian ph\u00e1t tri\u1ec3n m\u00e0 n\u00f3 c\u00f3 khi ch\u1ec9 l\u00e0 s\u1ef1 thay \u0111\u1ed5i r\u1ea5t nh\u1ecf) n\u00f3 c\u00f3 th\u1ec3 kh\u00f4ng ph\u1ea3i m\u00f9i, tuy nhi\u00ean n\u00f3 khi\u1ebfn cho vi\u1ec7c b\u1ea3o tr\u00ec tr\u1edf n\u00ean kh\u00f3 kh\u0103n khi c\u00f4ng ngh\u1ec7 \u0111\u00f3 \u0111\u00e3 qu\u00e1n c\u0169\n\n7. Thu\u1ed9c t\u00ednh, c\u00e1c s\u1ef1 g\u1eafn k\u1ebft kh\u00f4ng h\u1ee3p l\u1ec7 c\u1ee7a c\u00e1c ho\u1ea1t \u0111\u1ed9ng\n\n\nC\u00e1c lu\u1eadt Roles c\u1ee7a class tr\u1edf n\u00ean kh\u00f4ng r\u00f5 r\u00e0ng, h\u00e3y s\u1eeda roles cho th\u00edch h\u1ee3p\n\n\n15. Chu\u1ed1i t\u00ean g\u1ecdi qu\u00e1 d\u00e0i\n\n\nTrong code c\u1ee7a b\u1ea1n xu\u1ea5t hi\u1ec7n m\u1ed9t chu\u1ed7i nh\u01b0 sau: methodA().methodB().methodC().methodD(); H\u00e3y t\u1ed5 ch\u1ee9c l\u1ea1i ch\u00fang v\u00ec r\u1ea5t ph\u1ee9c t\u1ea1p.\n\n\n17. C\u00e1c m\u1ed1i quan h\u1ec7 kh\u00f4ng \u0111\u00fang c\u00e1ch\n\n\nKhi m\u1ed9t class s\u1eed d\u1ee5ng \u0111\u1ebfn m\u1ed9t thu\u1ed9c t\u00ednh ho\u1eb7c ph\u01b0\u01a1ng th\u1ee9c c\u1ee7a m\u1ed9t class kh\u00e1c m\u00e0 \u0111\u00e1ng ra ph\u01b0\u01a1ng th\u1ee9c v\u00e0 thu\u1ed9c t\u00ednh \u0111\u00f3 n\u00ean l\u00e0 private.\n\n\n21. T\u1eeb ch\u1ed1i th\u1eeba k\u1ebf\n\n\nN\u1ebfu m\u1ed9t class th\u1ef1c thi ch\u1ec9 m\u1ed9t ho\u1ea1t \u0111\u1ed9ng m\u00e0 ph\u1ea3i k\u00e9o theo th\u00eam m\u1ed9t class kh\u00e1c th\u00ec t\u1ea1i sao class k\u00e9o theo n\u00e0y n\u00ean t\u1ed3n t\u1ea1i?\n\n\n\n\nM\u00f9i c\u00e1\nM\u00ecnh t\u1ea1m g\u1ecdi vui c\u00e1i m\u00f9i n\u00e0y gi\u1ed1ng nh\u01b0 m\u00f9i c\u00e1 tanh.\nN\u00f3 thi\u1ebfu data modeling, thi\u1ebfu s\u1ef1 c\u00e2n nh\u1eafc tr\u01b0\u1edbc khi \u0111\u00f3ng g\u00f3i. H\u00e3y c\u1ea9n th\u1eadn h\u01a1n d\u00f9 qu\u00e1 m\u1ed9t ch\u00fat th\u1eddi gian.\n\n8. Data g\u1eedi v\u00e0o header\n\n\nData c\u1ea7n lu\u00f4n \u0111\u01b0\u1ee3c s\u1eed s\u1eed d\u1ee5ng \u1edf c\u00f9ng m\u1ed9t set, h\u00e3y c\u1ed1 g\u1eafng \u0111\u1ec3 n\u00f3 th\u1eadt s\u00e1t v\u1edbi object.\n\n\n9. Tu\u00e2n th\u1ee7 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 b\u1ea3n\n\n\nH\u00e3y t\u1ea1o m\u1ed9t ValueObject\n\n\n14. Thu\u1ed9c t\u00ednh t\u1ea1m th\u1eddi\n\n\nC\u00e1c bi\u1ebfn (field) kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng ho\u1eb7c \u0111\u00e3 s\u1eed d\u1ee5ng xong. H\u00e3y chuy\u1ec3n n\u00f3 th\u00e0nh c\u00e1c bi\u1ebfn ngo\u00e0i ho\u1eb7c NullObject \n\n\n\n\nM\u00f9i m\u1ed3 h\u00f4i\nB\u1ea1n \u0111\u00e3 l\u00e0m vi\u1ec7c r\u1ea5t v\u1ea5t v\u1ea3, tuy nhi\u00ean code c\u1ee7a b\u1ea1n v\u1eabn r\u1ea5t t\u1ed3i, v\u00e0 th\u1ee9 duy nh\u1ea5t c\u00f3 th\u1ec3 xu\u1ea5t ra l\u00e0 m\u1ed3 h\u00f4i.\n\n13. Nghi ng\u1edd qu\u00e1 nhi\u1ec1u\n\n\nB\u1ea1n \u0111\u00e3 code m\u00e0 ngh\u0129 qu\u00e1 nhi\u1ec1u \u0111\u1ebfn nh\u1eefng th\u1ee9 t\u01b0\u01a1ng lai c\u1ea7n d\u00f9ng \u0111\u1ebfn, v\u00ec v\u1eady b\u1ea1n \u0111\u00e3 implement r\u1ea5t nhi\u1ec1u th\u1ee9 kh\u00f4ng c\u1ea7n thi\u1ebft t\u1ea1i th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i. H\u00e3y ch\u1ec9 implement n\u1ebfu b\u1ea1n th\u1ef1c s\u1ef1 c\u1ea7n n\u00f3, ch\u1eebng n\u00e0o b\u1ea1n v\u1eabn ch\u01b0a c\u1ea7n n\u00f3, h\u00e3y c\u1ed1 g\u1eafng \u0111\u1ec3 ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n \u0111\u01a1n gi\u1ea3n nh\u1ea5t c\u00f3 th\u1ec3.\n\n\n\n\nM\u00f9i l\u1eeba d\u1ed1i\nM\u1eb7c d\u00f9 code kh\u00f4ng c\u1ed1 t\u00ecnh vi\u1ebft sai, nh\u01b0ng k\u1ebft qu\u1ea3 n\u00f3 l\u1ea1i sai.\n\n19. Kh\u00f4ng s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c class th\u01b0 vi\u1ec7n\n\n\nTh\u01b0 vi\u1ec7n kh\u00f4ng th\u1ec3 s\u1eed d\u1ee5ng nh\u01b0 ch\u00ednh kh\u1ea3 n\u0103ng c\u1ee7a n\u00f3, h\u00e3y s\u1eeda l\u1ea1i \u0111\u1ec3 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c, \u0111\u1eebng ph\u00f3 m\u1eb7c t\u1ea5t c\u1ea3 cho th\u01b0 vi\u1ec7n.\n\n\n22. Comments\n\n\nComments qu\u00e1 c\u0169 ho\u1eb7c sai s\u1ef1 th\u1eadt. H\u00e3y c\u1ed1 \u0111\u1ecdc hi\u1ec3u ch\u01b0\u01a1ng tr\u00ecnh c\u00e0ng nhi\u1ec1u c\u00e0ng t\u1ed1t m\u00e0 kh\u00f4ng ch\u00fa \u00fd \u0111\u1ebfn comment. N\u00f3 c\u00f3 th\u1ec3 kh\u00f4ng ch\u00fa th\u00edch g\u00ec cho code c\u1ea3 ( t\u1ea1i sao l\u1ea1i d\u00f9ng logic n\u00e0y , vv...) ch\u1ec9 v\u1edbi m\u1ee5c ti\u00eau l\u00e0 b\u1ea1n mu\u1ed1n comment, h\u00e3y c\u1ed1 g\u1eafng vi\u1ebft code th\u1eadt d\u1ec5 hi\u1ec3u m\u00e0 kh\u00f4ng c\u1ea7n t\u00f3m t\u1eaft n\u00f3 b\u1eb1ng comment.\n\n\n\n\n B\u1ea1n \u0111\u00e3 c\u00f3 test n\u00e0o ch\u01b0a? N\u1ebfu ch\u01b0a, h\u00e3y vi\u1ebft test ngay - PhpUnit\nRefactoring is ngh\u0129a l\u00e0 \"kh\u00f4ng thay \u0111\u1ed5i ho\u1ea1t \u0111\u1ed9ng c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh\" nh\u01b0ng \"c\u1ea3i thi\u1ec7n \u0111\u01b0\u1ee3c c\u1ea5u tr\u00fac b\u00ean trong\".\n\u0110\u1ec3 ch\u1eafc ch\u1eafn r\u1eb1ng nh\u1eefng h\u00e0nh vi c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh kh\u00f4ng thay \u0111\u1ed5i. b\u1ea1n kh\u00f4ng th\u1ec3 ch\u1ec9 test m\u1ed9t l\u1ea7n\nH\u00e3y b\u1eaft \u0111\u1ea7u test n\u00e0o.\nCh\u00fa \u00fd r\u1eb1ng v\u1edbi vi\u1ec7c vi\u1ebft test th\u00ec c\u00f3 m\u1ed9t \u0111i\u1ec1u r\u1ea5t quan tr\u1ecdng l\u00e0 \"Test ph\u1ea3i d\u1ec5 d\u00e0ng \u0111\u1ec3 vi\u1ebft\".\n\n Refactoring\nC\u00f3 m\u1ed9t v\u00e0i k\u1ef9 thu\u1eadt cho m\u1ed7i \"code smell\" ( m\u00f9i c\u1ee7a code ), tuy nhi\u00ean t\u00f4i kh\u00f4ng th\u1ec3 m\u00f4 t\u1ea3 h\u1ebft \u0111\u01b0\u1ee3c, \u1edf workshop n\u00e0y m\u00ecnh ch\u1ec9 gi\u1eef m\u1ecdi th\u1ee9 th\u1eadt \u0111\u01a1n gi\u1ea3n.\nB\u1edfi v\u00ec h\u00e0n Upload \u1edf b\u00e0i tr\u01b0\u1edbc c\u00f3 m\u00f9i c\u1ee7a \"method qu\u00e1 d\u00e0i\", h\u00e3y th\u1eed refactor n\u00f3 b\u1eb1ng c\u00e1ch \u00e1p d\u1ee5ng c\u00e1ch \"Chia Method\".\n\n Test\nH\u00e3y ki\u1ec3m tra k\u1ebft qu\u1ea3 b\u1eb1ng c\u00e1ch test sau khi \u0111\u00e3 ho\u00e0n t\u1ea5t refactoring.\n\u0110\u1ec3 vi\u1ebft m\u1ed9t test code t\u1ed1t,\n\u0110i\u1ec1u quan tr\u1ecdng l\u00e0 nh\u1eefng g\u00ec b\u1ea1n mu\u1ed1n test ph\u1ea3i \u0111\u01b0\u1ee3c ph\u00e2n bi\u1ec7t r\u00f5 r\u00e0ng N\u1ebfu b\u1ea1n kh\u00f4ng mu\u1ed1n test t\u1ea5t c\u1ea3 m\u1ecdi th\u1ee9.\nC\u00e1c test ph\u1ea3i \u0111\u01b0\u1ee3c implement nh\u01b0 l\u00e0 m\u1ed9t \"gi\u00e1 tr\u1ecb gi\u1ea3\", m\u00ecnh s\u1ebd ti\u1ebfp t\u1ee5c test hi\u1ec7u qu\u1ea3 ch\u01b0\u01a1ng tr\u00ecnh.\n\n Tr\u1edf l\u1ea1i b\u01b0\u1edbc 1\nRefactoring c\u1ea7n lu\u00f4n \u0111\u01b0\u1ee3c th\u1ef1c thi.\nH\u00e3y ti\u1ebfp t\u1ee5c l\u00e0m gi\u1ea3m c\u00e1c g\u00e1nh n\u1eb7ng k\u1ef9 thu\u1eadt cho ch\u01b0\u01a1ng tr\u00ecnh.\n\n M\u1ee5c l\u1ee5c b\u00e0i h\u1ecdc\n\nChu\u1ea9n b\u1ecb\n\n\nDuy tr\u00ec Branch\nC\u00e0i \u0111\u1eb7t Composer\nC\u00e0i PhpUnit\nT\u1ea1o test cho DB\n\n\nB\u00e0i 1 Thi\u1ebft l\u1eadp PHPUnit v\u00e0 t\u1ea1o m\u1ed9t test \u0111\u01a1n gi\u1ea3n.\nB\u00e0i 2 test h\u00e0m upload\nB\u00e0i 3 refactoring h\u00e0m upload\n\n\n Chu\u1ea9n b\u1ecb\nPh\u1ea7n chu\u1ea9n b\u1ecb s\u1ebd gi\u1ed1ng nhau \u1edf m\u1ed7i b\u00e0i, v\u00ec v\u1eady t\u00f4i \u0111\u00e3 t\u1ed5ng h\u1ee3p n\u00f3 \u1edf m\u1ed9t entry ri\u00eang. C\u00e1c b\u1ea1n vui l\u00f2ng xem \u1edf link n\u00e0y All 12 times of study sessions in do I have use of Git - RESTful application workshops will be built on AWS ~ Web development workshop ~ - Qiita \u0111\u1ec3 chu\u1ea9n b\u1ecb .\n\nGit: B\u00e2y gi\u1edd m\u00ecnh s\u1ebd t\u1ea1o branch vol/09 v\u00e0 l\u00e0m vi\u1ec7c tr\u00ean n\u00f3.\n\nOK, b\u01b0\u1edbc \u0111\u1ea7u \u0111\u00e3 xong\n *** T\u00f4i xin nh\u1eafc l\u1ea1i \u1edf b\u00e0i 5 v\u00e0 b\u00e0i 6, ch\u00fang ta \u0111\u00e3 c\u00f3 nh\u1eefng table b\u1ecb thay \u0111\u1ed5i. ***\n\nB\u00e0i 5\n\n\nT\u1ea1o Table d\u00e0nh cho vi\u1ec7c \u0111\u0103ng k\u00fd th\u00e0nh vi\u00ean ( Th\u1ef1c hi\u1ec7n cho ch\u1ee9c n\u0103ng login )\n\n\nB\u00e0i 6\n\n\nTh\u00eam m\u1ed9t c\u1ed9t cho table TODO list ( Th\u00eam c\u1ed9t Owner v\u00e0 c\u1ed9t assignee cho ch\u1ee9c n\u0103ng ph\u00e2n c\u00f4ng c\u00f4ng vi\u1ec7c)\n\n\n\nC\u00e1c b\u1ea1n n\u00ean tham kh\u1ea3o l\u1ea1i c\u00e1c link sau \u0111\u1ec3 r\u00f5 h\u01a1n.\nT\u1ea1o Table d\u00e0nh cho vi\u1ec7c \u0111\u0103ng k\u00fd th\u00e0nh vi\u00ean\nTh\u00eam m\u1ed9t c\u1ed9t cho table TODO list\nT\u1eeb gi\u1edd tr\u1edf \u0111i, m\u00ecnh s\u1ebd s\u1eed d\u1ee5ng phpUnit \u0111\u1ec3 t\u1ea1o test code. B\u1edfi v\u00ec n\u00f3 \u0111\u01b0\u1ee3c t\u1ea1o b\u1eb1ng composer, v\u00ec v\u1eady m\u00ecnh c\u0169ng c\u1ea7n c\u00e0i s\u1eb5n composer n\u1eefa.\n\nThi\u1ebft l\u1eadp Composer, c\u00e0i \u0111\u1eb7t phpUnit\nComposer l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 qu\u1ea3n l\u00fd c\u00e1c g\u00f3i tin \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong php. B\u00e2y gi\u1edd m\u00ecnh s\u1ebd c\u00e0i \u0111\u1eb7t phpUnit b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng Composer.\n\nDownload Composer\nC\u00f4ng vi\u1ec7c \u0111\u1ea7u ti\u00ean t\u1ea5t nhi\u00ean l\u00e0 download Composer.\nV\u00e0o th\u01b0 m\u1ee5c /var/www/study/rest-study v\u00e0 s\u1eed d\u1ee5ng l\u00eanh wget \u0111\u1ec3 download.\n\nDownloadComposer\ncd /var/www/study/rest-study\nwget http://getcomposer.org/composer.phar\n\n\n\nS\u1eeda composer.json\nTi\u1ebfp theo, m\u00ecnh c\u1ea7n s\u1eeda file composer.json ( file \u0111\u1ecbnh ngh\u0129a nh\u1eefng th\u1ee9 b\u1ea1n mu\u1ed1n qu\u1ea3n l\u00fd b\u1eb1ng Composer).\nM\u00ecnh \u0111\u00e3 x\u00f3a debug_kit v\u00ec n\u00f3 kh\u00f4ng th\u1ef1c s\u1ef1 c\u1ea7n thi\u1ebft. \n T\u00f4i s\u1ebd kh\u00f4ng \u0111i s\u00e2u v\u00e0o c\u1ea5u tr\u00fac Composer v\u00e0 composer.json format \u1edf b\u00e0i n\u00e0y, r\u1ea5t xin l\u1ed7i.\n\n/var/www/study/rest-study/composer.json\n {\n    \"name\": \"cakephp/cakephp\",\n    \"description\": \"The CakePHP framework\",\n    \"type\": \"library\",\n    \"keywords\": [\"framework\"],\n    \"homepage\": \"http://cakephp.org\",\n    \"license\": \"MIT\",\n    \"authors\": [\n        {\n            \"name\": \"CakePHP Community\",\n            \"homepage\": \"https://github.com/cakephp/cakephp/graphs/contributors\"\n        }\n    ],\n    \"support\": {\n        \"issues\": \"https://github.com/cakephp/cakephp/issues\",\n        \"forum\": \"http://stackoverflow.com/tags/cakephp\",\n        \"irc\": \"irc://irc.freenode.org/cakephp\",\n        \"source\": \"https://github.com/cakephp/cakephp\"\n    },\n    \"require\": {\n        \"php\": \">=5.2.8\",\n        \"ext-mcrypt\": \"*\"\n    },\n    \"require-dev\": {\n-       \"phpunit/phpunit\": \"3.7.*\",\n-       \"cakephp/debug_kit\" : \"2.2.*\"\n+       \"phpunit/phpunit\": \"3.7.*\"\n    },\n    \"bin\": [\n        \"lib/Cake/Console/cake\"\n    ]\n }\n\n\n\nC\u00e0i \u0111\u1eb7t phpUnit b\u1eb1ng Composer\nM\u00ecnh ch\u1ea1y l\u1ec7nh sau.\nphp composer.phar install\n\n\nT\u1ea1o test cho DB\n\u0110\u1ec3 an to\u00e0n cho study database, h\u00e3y t\u1ea1o m\u1ed9t database t\u00ean study_test.\nT\u00f4i s\u1eed d\u1ee5ng phpMyAdmin.\n\u0110\u1ea7u ti\u00ean b\u1ea1n c\u1ea7n \u0111\u0103ng nh\u1eadp v\u00e0o PHPMyAdmin\nURL l\u00e0 http://(PublicIP)/phpMyAdmin/.\nN\u1ebfu b\u1ea1n ch\u01b0a thay \u0111\u1ed5i g\u00ec th\u00ec ID v\u00e0 password s\u1ebd \u0111\u1ec1u l\u00e0 study.\nSau c\u00e1c b\u01b0\u1edbc tr\u00ean, b\u1ea1n c\u1ea7n copy study database v\u00e0 t\u1ea1o m\u1ed9t database m\u1edbi t\u00ean l\u00e0 study_test.\n\nSau khi \u0111\u0103ng nh\u1eadp, \u1edf n\u01a1i b\u1ea1n ch\u1ecdn study database, click v\u00e0o ph\u1ea7n \"operation\" nh\u01b0 trong \u1ea3nh sau.\n\n\n\nTi\u1ebfp theo, ph\u1ea7n \"Copy database to:\" m\u00ecnh \u0111i\u1ec1 t\u00ean l\u00e0 \"study_test\", Tick v\u00e0o ph\u1ea7n \"Structure only\", sau \u0111\u00f3 ch\u1ea1y.\n\nN\u1ebfu k\u1ebft qu\u1ea3 nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y l\u00e0 b\u1ea1n \u0111\u00e3 th\u00e0nh c\u00f4ng\n\n\nC\u00e1c b\u01b0\u1edbc chu\u1ea9n b\u1ecb \u0111\u00e3 xong, b\u1eaft \u0111\u1ea7u b\u00e0i 1 n\u00e0o\n\n B\u00e0i 1: T\u1ea1o m\u1ed9t test \u0111\u01a1n gi\u1ea3n b\u1eb1ng PhpUnit\n\u1ede b\u00e0i 3 m\u00ecnh s\u1ebd refactoring h\u00e0m upload m\u00e0 m\u00ecnh \u0111\u00e3 t\u1ea1o \u1edf b\u00e0i tr\u01b0\u1edbc. Tuy nhi\u00ean tr\u01b0\u1edbc ti\u00ean m\u00ecnh c\u1ea7n th\u1eed t\u1ea1o m\u1ed9t test code b\u1eb1ng phpUnit \u0111\u1ec3 ki\u1ec3m tra b\u1eb1ng b\u00e0i h\u00e0m \u0111\u01a1n gi\u1ea3n.\n\nL\u1ea5y to\u00e0n b\u1ed9 TODO List(TodolistsController::index())\nL\u1ea5y TODO 1(TodoListsController::view())\n\nT\u00f4i s\u1ebd th\u1eed vi\u1ebft test code cho 2 method n\u00e0y.\nT\u01b0\u01a1ng \u1ee9ng th\u00ec \u0111\u1ec3 th\u00eam d\u1eef li\u1ec7u v\u00e0o database \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u b\u1eb1ng Json d\u01b0\u1edbi \u0111\u00e2y, h\u00e3y ch\u1eafc ch\u1eafn l\u00e0 n\u00f3 c\u00f3 th\u1ec3 t\u1ed5ng h\u1ee3p \u0111\u01b0\u1ee3c ch\u00fang.\n\nTodolistsController::index()\n\n\nTODOlist\n[\n    {\n        \"TodoList\": {\n            \"id\": \"1000\",\n            \"todo\": \"eat lunch\",\n            \"status\": \"1\",\n            \"owned\": true,\n            \"assigned\": true\n        },\n        \"Owner\": {\n            \"id\": \"1000\",\n            \"name\": \"takumi\"\n        },\n        \"Assignee\": {\n            \"id\": \"1000\",\n            \"name\": \"takumi\"\n        }\n    }\n]\n\n\n\nTodolistsController:: view()\n\n\nTODO1\u4ef6\n\n{\n    \"TodoList\": {\n        \"id\": \"1000\",\n        \"todo\": \"eat lunch\",\n        \"status\": \"1\",\n    },\n    \"Owner\": {\n        \"id\": \"1000\",\n        \"name\": \"takumi\"\n    },\n    \"Assignee\": {\n        \"id\": \"1000\",\n        \"name\": \"takumi\"\n    }\n}\n\n\n\nChi ti\u1ebft c\u00e1c file c\u1ea7n ch\u1ec9nh s\u1eeda\n\n\n\nThao t\u00e1c\nfile\nM\u00f4 t\u1ea3\n\n\n\n\nS\u1eeda\napp/Config/core.php\nTh\u00eam thi\u1ebft l\u1eadp cho phpUnit\n\n\nS\u1eeda\napp/Config/database.php\nset database d\u00f9ng \u0111\u1ec3 test\n\n\nTh\u00eam m\u1edbi\napp/Test/Fixture/TodoListFixture.php\ntest quy tr\u00ecnh g\u1eedi d\u1eef li\u1ec7u TODO v\u00e0o DB\n\n\nTh\u00eam m\u1edbi\napp/Test/Fixture/UserFixture.php\ntest quy tr\u00ecnh g\u1eedi d\u1eef li\u1ec7u User v\u00e0o DB\n\n\nTh\u00eam m\u1edbi\napp/Test/Case/Controller/TodoListsControllerTest.php\nN\u1ed9i dung ch\u00ednh c\u1ee7a test code\n\n\n\n\napp/Config/core.php\nM\u1ed7i class c\u1ee7a phpUnit m\u00ecnh s\u1ebd th\u00eam c\u00e0i \u0111\u1eb7t \u0111\u1ec3 n\u00f3 t\u1ef1 \u0111\u1ed9ng \u0111\u01b0\u1ee3c load.\n\napp/Config/core.php\n\n\u301c\u7565\u301c\n\n /**\n  * Configure the cache for model and datasource caches. This cache configuration\n  * is used to store schema descriptions, and table listings in connections.\n  */\n Cache::config('_cake_model_', array(\n    'engine' => $engine,\n    'prefix' => $prefix . 'cake_model_',\n    'path' => CACHE . 'models' . DS,\n    'serialize' => ($engine === 'File'),\n    'duration' => $duration\n ));\n+\n+require_once ROOT . DS . 'vendor' . DS . 'autoload.php'; \n\n\n\n\nTrong autoload.php, v\u00ec n\u00f3 ch\u1ee9a c\u00e1c thi\u1ebft \u0111\u1eb7t \u0111\u1ec3 t\u1ef1 \u0111\u1ed9ng \u0111\u1ecdc class m\u00e0 b\u1ea1n c\u00e0i \u0111\u1eb7t trong Composer, C\u00e1c \u0111\u1ecbnh Path c\u1ea7n load.\n\n\napp/Config/database.php\nTh\u00eam c\u00e1c th\u00f4ng tin \u0111\u1ec3 k\u1ebft n\u1ed1i \u0111\u1ebfn database m\u00e0 b\u1ea1n v\u1eeba t\u1ea1o.\n\napp/Config/database.php\n\n\u301c\u7565\u301c\n\n class DATABASE_CONFIG {\n\n    public $default = array(\n        'datasource' => 'Database/Mysql',\n        'persistent' => false,\n        'host' => 'localhost',\n        'login' => 'study',\n        'password' => 'study',\n        'database' => 'study',\n        'prefix' => '',\n        'encoding' => 'utf8',\n    );\n\n    public $test = array(\n        'datasource' => 'Database/Mysql',\n        'persistent' => false,\n        'host' => 'localhost',\n-       'login' => 'user',\n-       'password' => 'password',\n-       'database' => 'test_database_name',\n+       'login' => 'study',\n+       'password' => 'study',\n+       'database' => 'study_test',\n        'prefix' => '',\n-       //'encoding' => 'utf8',\n+       'encoding' => 'utf8',\n    );\n }\n\n\n\napp/Test/Fixture/TodoListFixture.php\n\"Fixture (fixtures)\" l\u00e0 class \u0111\u1ec3 th\u00eam m\u1ed9t d\u1eef li\u1ec7u c\u1ee7a Todo v\u00e0o test database .\n\nTodoListFixture.php\n<?php\nclass TodoListFixture extends CakeTestFixture {\n    public $import = 'TodoList';\n    public $records = array (\n        array (\n            \"id\" => 1000,\n            \"todo\" => \"eat lunch\",\n            \"status\" => \"1\",\n            \"owner\" => 1000,\n            \"assignee\" => 1000\n        )\n    );\n}\n\n\n\n\npublic $import = 'TodoList'; gi\u00fap m\u00ecnh \u0111\u1ecdc danh s\u00e1ch tr\u00ean table TodoList trong database \u0111\u01b0\u1ee3c khai b\u00e1o \u1edf $default c\u1ee7a database.php \u0111\u00f3 l\u00e0 database m\u00ecnh copy c\u1ee7a (study).\nData \u0111\u01b0\u1ee3c t\u1ea1o \u1edf public $records = array ( ... ).\n\n\napp/Test/Fixture/UserFixture.php\n\u0110\u1ec3 g\u1eedi d\u1eef li\u1ec7u c\u1ee7a User v\u00e0o test database m\u00ecnh d\u00f9ng \"Fixture (fixture)\" class.\n\nUserFixture.php\n<?php\nApp::uses('BlowfishPasswordHasher', 'Controller/Component/Auth');\nclass UserFixture extends CakeTestFixture {\n    public $import = 'User';\n    public $records;\n    public function init() {\n        $this->records = array (\n            array (\n                \"id\" => 1000,\n                \"username\" => \"yamada\",\n                \"name\" => \"takumi\",\n                \"password\" => (new BlowfishPasswordHasher())->hash(\"yamada\")\n            )\n        );\n        parent::init();\n    }\n}\n\n\nGi\u1ed1ng nh\u01b0 v\u1edbi TodoListFixture.php , set $import v\u00e0 $records, tuy nhi\u00ean \u0111\u1eebng qu\u00ean m\u00ecnh c\u0169ng c\u1ea7n hash pasword n\u1eefa, quy tr\u00ecnh c\u1ee7a ch\u00fang ch\u00fang ta l\u00e0 implement c\u00e0i \u0111\u1eb7t c\u1ee7a $records \u1edf h\u00e0m init .\n\napp/Test/Case/Controller/TodoListsControllerTest.php\n\u0110\u00e2y l\u00e0 n\u1ed9i dung ch\u00ednh c\u1ee7a test code\n\napp/Test/Case/Controller/TodoListsControllerTest.php\n<?php\nApp::uses('AppController', 'Controller');\nclass TodoListsControllerTest extends ControllerTestCase {\n    public $fixtures = array (\n        'app.todo_list',\n        'app.user'\n    );\n    /**\n     * \u6e96\u5099\n     * @return Controller\n     */\n    public function setUp() {\n        parent::setUp();\n        $mocks = array (\n            'components' => array (\n                'Auth' => array (\n                    'user'\n                )\n            )\n        );\n        //TodoListsController\u3092\u751f\u6210\n        $controller = $this->generate('TodoLists', $mocks);\n        //Auth\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306euser\u30e1\u30bd\u30c3\u30c9\u3092\u30b9\u30bf\u30d6\u306b\u3059\u308b\n        $loginUser = array (\n            \"id\" => \"1000\",\n            \"username\" => \"yamada\",\n            \"name\" => \"yamada\"\n        );\n        $controller->Auth->staticExpects($this->any())\n            ->method('user')\n            ->will($this->returnValue($loginUser));\n        $this->controller = $controller;\n    }\n    /**\n     * index\u95a2\u6570\u306e\u30c6\u30b9\u30c8\n     */\n    public function testIndex()\n    {\n        $this->testAction('/todo_lists.json', array(\n            'method' => 'get'\n        ));\n        $result = $this->vars['res'];\n        $expected = array(\n            array(\n                \"TodoList\" => array(\n                    \"id\" => \"1000\",\n                    \"todo\" => \"eat lunch\",\n                    \"status\" => \"1\",\n                    \"owned\" => true,\n                    \"assigned\" => true\n                ),\n                \"Owner\" => array(\n                    \"id\" => \"1000\",\n                    \"name\" => \"takumi\"\n                ),\n                \"Assignee\" => array(\n                    \"id\" => \"1000\",\n                    \"name\" => \"takumi\"\n                )\n            )\n        );\n        $this->assertEquals($expected, $result);\n    }\n    /**\n     * view\u95a2\u6570\u306e\u30c6\u30b9\u30c8\n     */\n       public function testView()\n    {\n        $this->testAction('/todo_lists/1000.json', array(\n            'method' => 'get'\n        ));\n        $result = $this->vars['res'];\n        $expected = array(\n            \"TodoList\" => array(\n                \"id\" => \"1000\",\n                \"todo\" => \"eat lunch\",\n                \"status\" => \"1\"\n            ),\n            \"Owner\" => array(\n                \"id\" => \"1000\",\n                \"name\" => \"takumi\"\n            ),\n            \"Assignee\" => array(\n                \"id\" => \"1000\",\n                \"name\" => \"takumi\"\n            )\n        );\n        $this->assertEquals($expected, $result);\n    }\n\n}\n\n\nM\u00ecnh s\u1ebd k\u1ebf th\u1eeba t\u1eeb class ControllerTestCase, \u0111\u00e2y l\u00e0 m\u1ed9t class d\u00f9ng \u0111\u1ec3 test TodoListsController. R\u1ed9ng h\u01a1n th\u00ec m\u00ecnh s\u1ebd m\u00f4 t\u1ea3 sau v\u00ec n\u00f3 s\u1ebd chia ra nh\u01b0 sau.\n- Bi\u1ebfn $fixtures\n    - B\u1ea1n s\u1ebd set fixture, n\u00f3 s\u1ebd g\u1eedi data l\u00ean trong qu\u00e1 tr\u00ecnh ch\u1ea1y test.\n- H\u00e0m setUp\n    - M\u00ecnh s\u1ebd test TodoListsController, n\u00f3 s\u1ebd sinh c\u00e1c v\u00ed d\u1ee5 gi\u1ea3 \u0111\u1ec3 ch\u1ea1y ph\u1ea7n n\u00e0y.\n        - Ch\u1ea1y h\u00e0m generate. T\u00ean c\u1ee7a Controller \u0111\u1ec3 t\u1ea1o (TodoLists), v\u00e0 truy\u1ec1n th\u00f4ng tin v\u1ec1 c\u00e1c \u0111\u1ed1i t\u01b0\u01a1ng gi\u1ea3 \u0111\u1ecbnh (mock).\n            - T\u1ea1i \u0111\u00e2y h\u00e0m user ( h\u00e0m s\u1ebd tr\u1ea3 v\u1ec1 th\u00f4ng tin c\u1ee7a login user) c\u1ee7a th\u00e0nh ph\u1ea7n Auth cho mock, n\u00f3 s\u1ebd ph\u1ea3i ch\u1ea1y h\u00e0m v\u00e0 return nh\u1eefng th\u00f4ng tin b\u1ea1n \u0111\u00e3 set trong $loginUser. B\u00e2y gi\u1edd ch\u00fang ta ph\u1ea3i gi\u1ea3 l\u1eadp ph\u1ea7n login.\n    - test code c\u1ee7a h\u00e0m index\n    - V\u1edbi vi\u1ec7c x\u00e1c \u0111\u1ecbnh url v\u00e0 method \u1edf testAction, b\u1ea1n c\u00f3 th\u1ec3 gi\u1ea3 l\u1eadp truy c\u1eadp t\u1eeb client.\n        - Gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1 l\u00e0 m\u1ed9t chu\u1ed7i Json, s\u1ebd \u0111\u01b0\u1ee3c x\u00e1c nh\u1eadn b\u1eb1ng h\u00e0m assertEquals xem c\u00f3 h\u1ee3p v\u1edbi ch\u1ec9 1 TODO data \u0111\u00e3 \u0111\u01b0\u1ee3c g\u1eedi l\u00ean \u1edf fixture hay kh\u00f4ng.\n- test code cho h\u00e0m View\n   - Ngo\u00e0i ra ch\u00fang ta c\u0169ng ch\u1ea1y test \u1edf h\u00e0m testAction .\n\nCh\u1ea1y Test\nOK, ch\u00fang ta \u0111\u00e3 s\u1eb5n s\u00e0ng \u0111\u1ec3 test code! T\u00f4i s\u1ebd gi\u1ea3i th\u00edch c\u00e1ch th\u1ef1c hi\u1ec7n !\nC\u00e1c b\u1ea1n c\u0169ng c\u00f3 th\u1ec3 ch\u1ea1y command line t\u1eeb tr\u00ecnh duy\u1ec7t.\n\nCh\u1ea1y t\u1eeb tr\u00ecnh duy\u1ec7t\nTruy c\u1eadp URL sau t\u1eeb tr\u00ecnh \u0111uy\u1ec7t\nhttp://(PublicIP)/rest-study/test.php\nMenu sau s\u1ebd xu\u1ea5t hi\u1ec7n tr\u00ean m\u00e0n h\u00ecnh ! H\u00e3y click v\u00e0o v\u00ec test class m\u00e0 m\u00ecnh v\u1eeba t\u1ea1o \u0111\u00e3 hi\u1ec3n th\u1ecb.\n\nTest \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ea1t. Thanh m\u00e0u xanh hi\u1ec3n th\u1ecb nh\u01b0 sau ngh\u0129a l\u00e0 th\u00e0nh c\u00f4ng.\n\n\u0110\u1ec3 th\u1eed, t\u00f4i s\u1ebd th\u1eed thay \u0111\u1ed5i data \u0111\u1ec3 set v\u00e0o fixture.\nTodo \u0111\u00e3 \u0111\u01b0\u1ee3c g\u1eedi v\u00e0o fixture, khi b\u1ea1n ch\u1ea1y n\u00f3 v\u00e0 s\u1eeda n\u00f3 t\u1eeb \"buy milk\" th\u00e0nh \"walk the dog\" ,\n\n\nCh\u1ea1y t\u1eeb command line\nV\u00e0o th\u01b0 m\u1ee5c /var/www/study/rest-study/app/Console, v\u00e0 ch\u1ea1y v\u1edbi ./cake test app Controller/TodoListsController.\n\nRunByCommandLine\ncd /var/www/study/rest-study/app/Console\n./cake test app Controller/TodoListsController\n\n\n\nTr\u01b0\u1eddng h\u1ee3p test th\u00e0nh c\u00f4ng\n\n\n\nTest th\u1ea5t b\u1ea1i\n\n\n\nT\u1ed5ng k\u1ebft b\u00e0i h\u1ecdc\nCh\u00fang ta \u0111\u00e3 th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c nh\u01b0 sau\n\n\n T\u1ea1o m\u1edbi file app/Config/core.php v\u1edbi n\u1ed9i dung nh\u01b0 tr\u00ean.\n\n S\u1eeda file app/Config/database.php nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n T\u1ea1o m\u1edbi file app/Test/Fixture/TodoListFixture.php v\u1edbi n\u1ed9i dung nh\u01b0 tr\u00ean.\n\n T\u1ea1o m\u1edbi file app/Test/Fixture/UserFixture.php v\u1edbi n\u1ed9i dung nh\u01b0 tr\u00ean.\n\n T\u1ea1o m\u1edbi file app/Test/Case/Controller/TodoListsControllerTest.php v\u1edbi n\u1ed9i dung nh\u01b0 tr\u00ean.\n\n Ki\u1ec3m tra k\u1ebft qu\u1ea3.\n\n Commit l\u00ean Git\n\n Hi\u1ec3n th\u1ecb d\u1ee5ng Diff tr\u00ean GitHub\n\u7b2c10\u56de Lesson1 phpUnit\u306e\u8a2d\u5b9a\u3068\u7c21\u5358\u306a\u30c6\u30b9\u30c8\u4f5c\u6210 \u00b7 suzukishouten-study/rest-study@a17ff3a\nChuy\u1ec3n qua b\u00e0i 2 n\u00e0o c\u1ea3 nh\u00en\n B\u00e0i 2: Test h\u00e0m Upload\n\u1ede b\u00e0i 2 n\u00e0y, ch\u00fang ta s\u1ebd t\u1ea1o m\u1ed9t test c\u1ee7a h\u00e0m upload \u0111\u1ec3 refactor.\nTh\u1eadt ra th\u00ec c\u00f3 m\u1ed9t bug \u1edf h\u00e0m upload c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y, ch\u00fang ta s\u1ebd fix n\u00f3.\n\nC\u00e1c file c\u1ea7n ch\u1ec9nh s\u1eeda\n\n\n\nThao t\u00e1c\nfile\nM\u00f4 t\u1ea3\n\n\n\n\nS\u1eeda\napp/Test/Case/Controller/TodoListsControllerTest.php\nTh\u00eam test cho ph\u1ea7n upload\n\n\nS\u1eeda\napp/Model/TodoList.php\nS\u1eeda th\u1ee9 t\u1ef1 \u0111\u1ec3 v\u00e0o test trong DB\n\n\nS\u1eeda\napp/Controller/TodoListsController.php\nFix c\u00e1c bug v\u00e0 m\u1ed9t v\u00e0i th\u1ee9 kh\u00e1c n\u1eefa\n\n\n\n\napp/Test/Case/Controller/TodoListsControllerTest.php\nT\u00f4i s\u1ebd th\u00eam h\u00e0m test cho ph\u1ea7n upoad\n\napp/Test/Case/Controller/TodoListsControllerTest.php\n\n\u301c\u7565\u301c\n    public function setUp() {\n        parent::setUp();\n        $mocks = array (\n+           'methods' => array (\n+               'getUploadFileParams'\n+           ),\n            'components' => array (\n                'Auth' => array (\n                    'user'\n @@ -90,4 +93,88 @@ public function testView() {\n        $this->assertEquals($expected, $result);\n    }\n\n+   /**\n+    * Test ham upload\n+    * Upload 1 file moi lan, gui TODO2 vao DB nhu binh thuong\n+    */\n+   public function testUploadOKFile() {\n+       // Upload cac file dang duoc luu tru tam thoi\n+       $postFileName = 'testUploadOKFile.txt';\n+       $tmpFileName = tempnam('/tmp', $postFileName);\n+       // Ban se tao file file voi noi dung o body\n+       file_put_contents($tmpFileName, array (\n+           \"Hoge\\n\",\n+           \"12345\\n\"\n+       ));\n+       // cac du lieu khac tu POST\n+       $uploadFormData = array (\n+           array (\n+               'name' => $postFileName,\n+               'tmp_name' => $tmpFileName\n+           )\n+       );\n+       // ham nhan thong tin tu Form data, tham chieu de return formdata theo cau truc nhu tren\n+       $this->controller->expects($this->any())\n+           ->method('getUploadFileParams')\n+           ->will($this->returnValue($uploadFormData));\n+       // Ch\u1ea1y test\n+       $result = $this->testAction('/todo_lists/upload.json', array (\n+           'method' => 'post'\n+       ));\n+       // ket quua/xac nhan\n+       $result = $this->vars['response'];\n+       $expected = '2 TODO were registed';\n+       $this->assertEquals($expected, $result);\n+   }\n+\n+   /**\n+    * Test ham upload\n+    * Upload file thu 2, minh se nhap 2 TODO, trong do co 1 validation error\n+    */\n+   public function testUploadOKandNGFile() {\n+       //luu tru tam thoi file thu nhat\n+       $postFileName1 = 'testUploadOKandNGFile1.txt';\n+       $tmpFileName1 = tempnam('/tmp', $postFileName1);\n+       //Ban da tao 1 file voi noi dung upload tro thanh bod\n+       file_put_contents($tmpFileName1, array (\n+           \"hoge\\n\",\n+           \"12345\\n\",\n+           \"12345\\n\"\n+       ));\n+       //luu tru tam thoi file upload thu 2\n+       $postFileName2 = 'testUploadOKandNGFile2.txt';\n+       $tmpFileName2 = tempnam('/tmp', $postFileName2);\n+       //Ban da tao 1 file voi noi dung upload tro thanh body\n+       file_put_contents($tmpFileName2, array (\n+           \"fuga\\n\",\n+           \"12345\\n\" // no se xay ra loi\n+       ));\n+       // nhan data tu POST \n+       $uploadFormData = array (\n+           array (\n+               'name' => $postFileName1,\n+               'tmp_name' => $tmpFileName1\n+           ),\n+           array (\n+               'name' => $postFileName2,\n+               'tmp_name' => $tmpFileName2\n+           )\n+       );\n+\n+       //Tao TodoListController\n+       //Form data acquisition function, the stub to return the form data prepared above\n+       $this->controller->expects($this->any())\n+           ->method('getUploadFileParams')\n+           ->will($this->returnValue($uploadFormData));\n+       //Chay test\n+       $result = $this->testAction('/todo_lists/upload.json', array (\n+           'method' => 'post'\n+       ));\n+       //Ket qua nhan duoc\n+       $result = $this->vars['response'];\n+       $this->assertEquals('3 TODO were registered', $result['errors'][0][0]);\n+       $this->assertEquals('The following error occurred.', $result['errors'][1][0]);\n+        $this->assertEquals('file:testUploadOKandNGFile1.txt - line: 3: [server]There are the same TODO exists in the TODO list.', $result['errors'][2][0]);\n+        $this->assertEquals('file:testUploadOKandNGFile2.txt - line: 2: [server]There are the same TODO exists in the TODO list.', $result['errors'][3][0]);  \n+                }\n+   } \n\n\n\nH\u00e0m setUp\n\nTh\u00eam c\u00e0i \u0111\u1eb7t mock cho h\u00e0m getUploadFileParams c\u1ee7a TodoListController\n\n\n\nH\u00e0m testUploadOKFile\n\n\u0110\u1ea7u ti\u00ean m\u00ecnh Test ph\u1ea7n upload . Ch\u1ec9 upload 1 file, h\u00e3y ch\u1eafc ch\u1eafn r\u1eb1ng TODO c\u1ee7a 2 d\u00f2ng \u0111\u01b0\u1ee3c li\u1ec7t k\u00ea trong file \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u0103ng ch\u00ednh x\u00e1c \u1edf DB.\n\n\nIt is stubbed to return the specified information getUploadFileParams function in the test code.\n\ngetUploadFileParams v\u1eabn ch\u01b0a \u0111\u01b0\u1ee3c implement, \u0111\u1ec3 t\u1ed5ng h\u1ee3p th\u00f4ng tin nh\u1eadn t\u1eeb form c\u1ee7a post t\u1eeb client qua h\u00e0m upload, m\u00ecnh d\u00f9ng $files = $this->request->params['form']; \u0111\u1ec3 l\u1ea5y. Ch\u00fang t\u00f4i c\u1eaft ra ch\u1ec9 vi\u1ec7c x\u1eed l\u00fd b\u1eb1ng h\u00e0m $ files = $ this-> request-> params['form']; \u0111\u1ec3 nh\u1eadn d\u1eef li\u1ec7u.\n\n\nSau \u0111\u00f3, c\u0169ng nh\u01b0 h\u00e0m testIndex v\u00e0 h\u00e0m testView c\u1ee7a b\u00e0i 1, ch\u1ea1y test \u1edf h\u00e0m testAction, ch\u00fang ta x\u00e1c nh\u1eadn k\u1ebft qu\u1ea3 \u1edf h\u00e0m assertEquals. \n\n\nH\u00e0m TestUploadOKandNGFile\n\nL\u1ea7n th\u1ee9 2 test ph\u1ea7n upload. M\u00ecnh s\u1ebd upload 2 file 1 l\u1ea7n, tuy nhi\u00ean m\u00ecnh s\u1ebd c\u1ea7n ch\u1eafc ch\u1eafn r\u1eb1ng trong t\u1ed5ng c\u1ed9ng 5 TODO \u0111\u01b0\u1ee3c \u0111\u0103ng, 3 c\u00e1i \u0111\u00e3 v\u00e0o DB, 2 c\u00e1i xu\u1ea5t hi\u1ec7n l\u1ed7i validation error (can not be registered TODO of the same content, it could get caught in the rule that).\nT\u1ea1o m\u1ed9t method tham chi\u1ebfu gi\u1ed1ng h\u00e0m testUploadOKFile tr\u00ean kia. - C\u00e1ch ch\u1ea1y test, x\u00e1c nh\u1eadn k\u1ebft qu\u1ea3 c\u1ee7a method t\u01b0\u01a1ng t\u1ef1.\n\n\n\n\napp/Model/TodoList.php\nM\u00ecnh s\u1ebd ph\u1ea3i s\u1eeda th\u1ee9 t\u1ef1 \u0111\u1ec3 test vi\u1ec7c g\u1eedi d\u1eef li\u1ec7u v\u00e0o DB.\n\napp/Model/TodoList.php\n\n\u301c\u7565\u301c\n\n    //Rules xac nhan\n    //Minh se kiem tra ID cua Assignee co ton tai trong users table hay khong\n    public function existsUser($userId){\n-       $userModel = new User();\n+       $userModel = ClassRegistry::init('User');\n        $count = $userModel->find('count', array('conditions'=>array('id'=>$userId), 'recursive' => -1));\n        return $count > 0;\n    }\n\n \u301c\u4ee5\u4e0b\u7565\u301c\n\n\nGi\u1ed1ng nh\u01b0 m\u1ed9t h\u00e0m cho vi\u1ec7c validation c\u1ee7a b\u1ea1n, nh\u01b0ng s\u1ebd c\u00f3 th\u00eam m\u1ed9t h\u00e0m existsUser \u0111\u1ec3 ki\u1ec3m tra ID \u0111\u00e3 \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh c\u1ee7a Assignee, \u0111\u1ec3 t\u1ea1p ra m\u1ed9t User model,\n\nnew User()\n\n\u0110\u00e2y l\u00e0 h\u00e0m set\n\nClassRegistry::init('User')\n\nS\u1ebd thay cho new User(), n\u00f3 s\u1ebd l\u1ea5y th\u00f4ng tin k\u1ebft n\u1ed1i \u0111\u01b0\u1ee3c set \u1edf bi\u1ebfn test c\u1ee7a database.php trong qu\u00e1 tr\u00ecnh ch\u1ea1y test, c\u00e1ch n\u00e0y d\u00f9ng m\u00ecnh th\u1ea5y \u0111\u01b0\u1ee3c thi\u1ebft l\u1eadp c\u1ee7a default.\nVi\u1ec7c t\u1ea1o Model them c\u00e1ch n\u00e0y t\u1ed1t h\u01a1n c\u00e1ch \u0111\u1ea7u ti\u00ean.\n\napp/Controller/TodoListsController.php\nNh\u01b0 \u0111\u00e3 \u0111\u01b0\u1ee3c nh\u1eafc \u0111\u1ebfn tr\u00ean kia, n\u00f3 \u0111\u01b0\u1ee3c tham chi\u1ebfu v\u00e0 fix c\u00e1c bug trong qu\u00e1 tr\u00ecnh nh\u1eadn th\u00f4ng tin t\u1eeb form \u0111\u01b0\u1ee3c g\u1eedi l\u00ean t\u1eeb client.\n\napp/Controller/TodoListsController.php\n\n\u301c\u7565\u301c\n\n    }\n\n    public function upload() {\n-       $files = $this->request->params['form'];\n+       $files = $this->getUploadFileParams();\n        $owner = $this->Auth->user()['id'];\n        $numTodos = 0;\n+       $errors = array ();\n        foreach ( $files as $file ) {\n            $fileName = $file['name'];\n            $filePath = $file['tmp_name'];\n            $todos = file($filePath, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n            $assignee = $owner;\n-           $errors = array ();\n            $lineNo = 1;\n            foreach ( $todos as $todo ) {\n                $data = array ();\n                $data['todo'] = $todo;\n                $data['status'] = 0;\n                $data['owner'] = $owner;\n                $data['assignee'] = $assignee;\n                $res = $this->TodoList->save($data);\n                if ($res) {\n                    $numTodos++;\n                } else {\n                    if (count($this->TodoList->validationErrors) > 0) {\n                        foreach ( $this->TodoList->validationErrors as $validationErrorsOfLine ) {\n                            $title = 'file:' . $fileName . ' - line: ' . $lineNo . ': ';\n                            foreach ( $validationErrorsOfLine as $validationError ) {\n                                $errors[] = array (\n                                                $title . $validationError\n                                );\n                            }\n                        }\n                    }\n                }\n                $this->TodoList->create();\n                $lineNo++;\n            }\n        }\n        if (count($errors) > 0) {\n            $this->TodoList->validationErrors = $errors;\n            $response = $this->editResponse(false);\n            array_unshift($response['errors'], array (\n                            '\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002'\n            ));\n            if ($numTodos > 0) {\n                array_unshift($response['errors'], array (\n                                $numTodos . '\u4ef6\u306eTODO\u3092\u767b\u9332\u3057\u307e\u3057\u305f\u3002'\n                ));\n            }\n        } else {\n            $response = $numTodos . 'TODO were registered';\n        }\n        $this->set(compact('response'));\n        $this->set('_serialize', 'response');\n    }\n\n+   protected function getUploadFileParams(){\n+       return $this->request->params['form'];\n+   }\n+\n    //edit response\n    private function editResponse($res){\n        if($res){\n\n\u301c\u4ee5\u4e0b\u7565\u301c\n\n\n\nVi\u1ec7c tham chi\u1ebfu\n\n\nth\u00eam h\u00e0m getUploadFileParams, qu\u00e1 tr\u00ecnh nh\u1eadn th\u00f4ng tin trong form g\u1eedi l\u00ean t\u1eeb client ($this-> request-> params['form']) s\u1ebd b\u1ecb ng\u1eaft kh\u1ecfi h\u00e0m upload.\n\n\nFix c\u00e1c bug\n\n\nCh\u00fang ta c\u1ea7n kh\u1edfi t\u1ea1o bi\u1ebfn $errors \u0111\u1ec3 l\u01b0u tr\u1eef th\u00f4ng tin v\u1ec1 c\u00e1c l\u1ed7i validation error $errors = array() v\u00e0 v\u1ecb tr\u00ed c\u1ee7a ch\u00fang s\u1ebd kh\u00f4ng \u0111\u1ed5i. V\u00e0 \u0111\u00f3 ch\u1ec9 l\u00e0 khi tr\u01b0\u1edbc khi \u0111\u1ebfn ph\u1ea7n ch\u1ec9nh s\u1eeda, nh\u1eefng th\u00f4ng tin l\u1ed7i c\u1ee7a m\u1ed7i file s\u1ebd b\u1ecb x\u00f3a. \n\n\n\n\n\nT\u00f3m t\u1eaft b\u00e0i h\u1ecdc\nCh\u00fang ta c\u1ea7n th\u1ef1c hi\u1ec7n c\u00e1c b\u01b0\u1edbc sau.\n\n\n app/Test/Case/Controller/TodoListsControllerTest.php s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n app/Model/TodoList.php s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n implement ph\u1ea7n \u0111\u1ea7u c\u1ee7a app/Controller/TodoListsController.php\u306e.\n\n Ch\u1ea1y test. B\u1ea1n s\u1ebd th\u1ea5y l\u1ed7i v\u00e0 x\u1eed l\u00fd ch\u00fang nh\u01b0 h\u01b0\u1edbng d\u1eabn d\u01b0\u1edbi \u0111\u00e2y.\n\nTest th\u1ea5t b\u1ea1i v\u00ec c\u00f3 bug \n\nTest l\u1ea1i m\u1ed9t l\u1ea7n n\u1eefa sau khi fix bug\n\n\n implement fix c\u00e1c bug v\u00e0o app/Controller/TodoListsController.php\n\n\n Ch\u1ea1y test. Ch\u00fac b\u1ea1n th\u00e0nh c\u00f4ng \n\n\ntest th\u00e0nh c\u00f4ng \n\n\n\n Commit l\u00ean Git\n\n Hi\u1ec3n th\u1ecb d\u1ea1ng Diff tr\u00ean Github\n\u7b2c10\u56de Lesson2 \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u6a5f\u80fd\u306e\u30c6\u30b9\u30c8 \u00b7 suzukishouten-study/rest-study@fa3f13f\nM\u00ecnh s\u1ebd ho\u00e0n t\u1ea5t vi\u1ec7c refactoring \u1edf B\u00e0i 3\n\n B\u00e0i 3: Refactoring ch\u1ee9c n\u0103ng upload\nM\u00ecnh ch\u1ec9 fix trong app/Controller/TodoListsController.php.\n\u0110\u1ea7u ti\u00ean, h\u00e3y xem qua v\u1ec1 h\u00e0m upload tr\u01b0\u1edbc khi m\u00ecnh thao t\u00e1c.\n\nFile-Truoc-Khi-Refactor\n    public function upload() {\n        $files = $this->getUploadFileParams();\n        $owner = $this->Auth->user()['id'];\n        $numTodos = 0;\n        $errors = array ();\n        foreach ( $files as $file ) {\n            $fileName = $file['name'];\n            $filePath = $file['tmp_name'];\n            $todos = file($filePath, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n            $assignee = $owner;\n            $lineNo = 1;\n            foreach ( $todos as $todo ) {\n                $data = array ();\n                $data['todo'] = $todo;\n                $data['status'] = 0;\n                $data['owner'] = $owner;\n                $data['assignee'] = $assignee;\n                $res = $this->TodoList->save($data);\n                if ($res) {\n                    $numTodos++;\n                } else {\n                    if (count($this->TodoList->validationErrors) > 0) {\n                        foreach ( $this->TodoList->validationErrors as $validationErrorsOfLine ) {\n                            $title = 'file:' . $fileName . ' - line: ' . $lineNo . ': ';\n                            foreach ( $validationErrorsOfLine as $validationError ) {\n                                $errors[] = array (\n                                                $title . $validationError\n                                );\n                            }\n                        }\n                    }\n                }\n                $this->TodoList->create();\n                $lineNo++;\n            }\n        }\n        if (count($errors) > 0) {\n            $this->TodoList->validationErrors = $errors;\n            $response = $this->editResponse(false);\n            array_unshift($response['errors'], array(\n                'The following error occurred.'\n            ));\n            if ($numTodos > 0) {\n                array_unshift($response['errors'], array(\n                    $numTodos . ' TODO were registered'\n                ));\n            }\n        } else {\n            $response = $numTodos . ' TODO were registered';\n        }\n        $this->set(compact('response'));\n        $this->set('_serialize', 'response');\n    }\n\n\nN\u00f3 kh\u00e1 l\u00e0 d\u00e0i d\u00f2ng, ch\u1eafc ch\u1ec9 c\u00f3 ng\u01b0\u1eddi vi\u1ebft m\u1edbi hi\u1ec3u ch\u01b0\u01a1ng tr\u00ecnh, logic c\u1ee7a n\u00f3 s\u1ebd r\u1ea5t kh\u00f3 \u0111\u1ec3 ng\u01b0\u1eddi kh\u00e1c h\u00ecnh dung \u0111\u01b0\u1ee3c.\nM\u00f9i n\u00e0y \u0111\u00e3 \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u trong ph\u1ea7n \u0111\u1ea7u c\u1ee7a sinister smell, m\u00f9i c\u00f3 t\u00ean l\u00e0 \"too long method\".\nB\u00e2y gi\u1edd m\u00ecnh s\u1ebd refactor n\u00f3!\nN\u1ebfu l\u00e0m theo logic n\u00e0y th\u00ec ch\u00fang c\u00f3 th\u1ec3 th\u1ea5y n\u00f3 chia th\u00e0nh c\u00e1c ph\u1ea7n nh\u01b0 sau:\n- Nh\u1eadn POST data g\u1eedi l\u00ean khi client th\u1ef1c hi\u1ec7n upload\n- Nh\u1eadn ID c\u1ee7a user \u0111ang login\n- \u0110\u1ecdc c\u00e1c file \u0111\u01b0\u1ee3c upload v\u00e0 \u0111\u0103ng ch\u00fang v\u00e0o DB th\u00e0nh c\u00e1c TODO\n    - L\u01b0u tr\u1eef c\u00e1c file \u0111\u01b0\u1ee3c upload v\u00e0o 1 m\u1ea3ng v\u00e0 \u0111\u1ecdc c\u00f9ng 1 l\u1ea7n\n        - L\u1ea7n l\u01b0\u1ee3t \u0110\u0103ng c\u00e1c TODO n\u00e0y v\u00e0o DB t\u1eeb m\u1ea3ng l\u01b0u tr\u1eef.\n        - N\u1ebfu c\u00f3 l\u1ed7i validation error, l\u01b0u tr\u1eef n\u1ed9i dung.\n- Ho\u00e0n t\u1ea5t upload v\u00e0 Hi\u1ec3n th\u1ecb k\u1ebft qu\u1ea3 c\u00f4ng vi\u1ec7c qua message t\u1edbi client\nH\u00e3y chia ch\u00fang th\u00e0nh c\u00e1c h\u00e0m.\n(C\u00e1i n\u00e0y kh\u00f4ng \u0111\u01b0\u1ee3c coi nh\u01b0 l\u00e0 m\u1ed9t k\u1ef9 n\u0103ng, ...) nh\u01b0ng \u0111\u00e2y l\u00e0 m\u1ed9t trong nh\u1eefng k\u1ef9 thu\u1eadt v\u01a1 b\u1ea3n nh\u1ea5t c\u1ee7a \"Extract Method\" trong refactoring!\nH\u00e0m sau khi \u0111\u01b0\u1ee3c chia ra v\u00e0 h\u00e0m upload \u0111\u01b0\u1ee3c s\u1eeda b\u1eb1ng c\u00e1ch \"Chia Method\" s\u1ebd nh\u01b0 sau.\n\nExtractedFunction\n\npublic function upload() {\n        $fileUploadParams = $this->getUploadFileParams();\n        $loginUserId = $this->getLoginUserId();\n        $owner = $loginUserId;\n        $assignee = $loginUserId;\n        $errors = array();\n        $numRegists = $this->registerFilesAsTodos($fileUploadParams, $owner, $assignee, $errors);\n        $response = $this->editUploadResponse($numRegists, $errors);\n        $this->set(compact('response'));\n        $this->set('_serialize', 'response');\n    }\n    //Lay du lieu POST tu file upload\n    protected function getUploadFileParams(){\n        return $this->request->params['form'];\n    }\n    //Lay login User ID\n    protected function getLoginUserId(){\n        return $this->Auth->user()['id'];\n    }\n    /Dang ky gui cac file todo de gui vao DB\n    private function registerFilesAsTodos($fileUploadParams, $owner, $assignee, &$errors){\n        $numRegists = 0;\n        //$errors = array();\n        foreach ( $fileUploadParams as $fileUploadParam ) {\n            $fileName = $fileUploadParam['name'];\n            $filePath = $fileUploadParam['tmp_name'];\n            $todos = $this->readUploadTodoFile($filePath);\n            $numRegists += $this->registerTodos($fileName, $todos, $owner, $assignee, $errors);\n        }\n        return $numRegists;\n    }\n    // Doc file upload gui vao mang\n    protected function readUploadTodoFile($filePath){\n        return file($filePath, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    }\n    // Gui TODO o tren mang vao DB\n    private function registerTodos($fileName, $todos, $owner, $assignee, &$errors){\n        $numRegists = 0;\n        $lineNo = 1;\n        foreach ( $todos as $todo ) {\n            $record = array ();\n            $record['todo'] = $todo;\n            $record['status'] = 0;\n            $record['owner'] = $owner;\n            $record['assignee'] = $assignee;\n            $res = $this->TodoList->save($record);\n            if ($res) {\n                $numRegists++;\n            } else {\n                $validationErrors = $this->TodoList->validationErrors;\n                if (count($validationErrors) > 0) {\n                    $this->formatValidationErrorMessage($fileName, $lineNo, $validationErrors, $errors);\n                }\n            }\n            $this->TodoList->create();\n            $lineNo++;\n        }\n        return $numRegists;\n    }\n    // Cau truc noi dung cho cac thong bao loi validation error\n    private function formatValidationErrorMessage($fileName, $lineNo, $validationErrors, &$errors){\n        foreach ( $validationErrors as $validationErrorsOfLine ) {\n            $title = 'file:' . $fileName . ' - line: ' . $lineNo . ': ';\n            foreach ( $validationErrorsOfLine as $validationError ) {\n                $errors[] = array (\n                    $title . $validationError\n                );\n            }\n        }\n    }\n    // Cau truc cac tin nhan thong bao ket qua toi client\n    private function editUploadResponse($numRegists, $errors){\n        if (count($errors) > 0) {\n            $this->TodoList->validationErrors = $errors;\n            $response = $this->editResponse(false);\n            array_unshift($response['errors'], array (\n                'The following error occurred.'\n            ));\n            if ($numRegists > 0) {\n                array_unshift($response['errors'], array (\n                    $numRegists . ' TODO were registered'\n                ));\n            }\n        } else {\n            $response = $numRegists . ' TODO were registered';\n        }\n        return $response;\n    }\n\n\n\n\nLogic \u0111\u00e3 \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 \u1edf tr\u00ean, b\u00e2y gi\u1edd t\u00f4i s\u1ebd show n\u00f3 ra b\u1ea3ng \"Extract Method\" d\u01b0\u1edbi \u0111\u00e2y.\n\n\n\nH\u00e0nh \u0111\u1ed9ng\nextracted method\n\n\n\n\nGet POST data khi client ch\u1ea1y Upload\ngetUploadFileParams\n\n\nL\u1ea5y ID c\u1ee7a user \u0111ang \u0111\u0103ng nh\u1eadp\ngetLoginUserId\n\n\n\u0110\u1ecdc c\u00e1c file \u0111\u01b0\u1ee3c upload v\u00e0 \u0111\u0103ng n\u00f3 v\u00e0o DB nh\u01b0 l\u00e0 TODO\nregisterFilesAsTodos\n\n\nL\u01b0u tr\u1eef c\u00e1c file \u0111\u01b0\u1ee3c upload v\u00e0o m\u1ea3ng v\u00e0 \u0111\u1ecdc m\u1ed9t l\u1ea7n\nreadUploadTodoFile\n\n\nL\u1ea7n l\u01b0\u1ee3t t\u1eebng TODO l\u01b0u tr\u00ean m\u1ea3ng \u0111\u01b0\u1ee3c \u0111\u0103ng v\u00e0o DB\nregisterTodos\n\n\nN\u1ebfu c\u00f3 validation error, t\u1ea1o c\u00e1c n\u1ed9i dung ph\u1ea3n h\u1ed3i\nformatValidationErrorMessage\n\n\nG\u1eedi c\u00e1c message c\u1ee7a k\u1ebft qu\u1ea3 upload cho client\neditUploadResponse\n\n\n\nM\u1ed7i ti\u1ebfn tr\u00ecnh \u0111\u1ec1u gi\u1ed1ng nh\u01b0 tr\u01b0\u1edbc khi ch\u1ec9nh s\u1eeda v\u00ec ch\u00fang ta ch\u1ec9 ph\u00e2n t\u00e1ch n\u00f3 ra c\u00e1c method nh\u1ecf.\nTruy\u1ec1n v\u00e0o c\u00e1c arguments v\u00e0 tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb cho c\u00e1c th\u00f4ng tin \u0111\u01b0\u1ee3c trao \u0111\u1ed5i.\n Th\u00f4ng tin v\u1ec1 validation error s\u1ebd \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o &$errors.\n\nT\u00f3m t\u1eaft b\u00e0i h\u1ecdc\nH\u00e3y ch\u1ea1y test sau khi m\u00ecnh \u0111\u00e3 ho\u00e0n t\u1ea5t c\u00e1c b\u01b0\u1edbc sau.\n\n\n app/Controller/TodoListsController.php s\u1eeda theo h\u01b0\u1edbng d\u1eabn tr\u00ean.\n\n Ch\u1ea1y test, n\u1ebfu th\u00e0nh c\u00f4ng k\u1ebft qu\u1ea3 s\u1ebd nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y.\n\nTest th\u00e0nh c\u00f4ng \n\n\n\n Commit l\u00ean Git\n\n Hi\u1ec3n th\u1ecb d\u1ea1ng diff tr\u00ean Github\n\u7b2c10\u56de Lesson3 \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u6a5f\u80fd\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0 \u00b7 suzukishouten-study/rest-study@e774e5e\n\u0110\u00f3 l\u00e0 t\u1ea5t c\u1ea3 b\u00e0i vi\u1ebft n\u00e0y.\n\nTrailer\nB\u00e0i ti\u1ebfp ch\u00fang ta s\u1ebd t\u00e1i c\u1ea5u tr\u00fac \u1edf ph\u00eda client \"refactoring (client ed)\".\nT\u00f4i hi v\u1ecdng ch\u00fang ta s\u1ebd l\u00e0m t\u1ed1t \u1edf ph\u00eda server nh\u01b0 nh\u1eefng g\u00ec m\u00ecnh \u0111\u00e3 l\u00e0m h\u00f4m nay.\n\nR\u1ea5t mong nh\u1eadn \u0111\u01b0\u1ee3c nh\u1eefng ph\u1ea3n h\u1ed3i/g\u00f3p \u00fd c\u1ee7a c\u00e1c b\u1ea1n.\nC\u1ea3m \u01a1n c\u00e1c b\u1ea1n \u0111\u00e3 d\u00f5i theo series n\u00e0y, t\u00f4i hi v\u1ecdng s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c nh\u1eefng ph\u1ea3n h\u1ed3i, g\u00f3p \u00fd t\u00edch c\u1ef1c t\u1eeb t\u1ea5t c\u00e1c b\u1ea1n \u0111\u1ec3 c\u00f3 th\u1ec3 l\u00e0m t\u1ed1t h\u01a1n n\u1eefa.\n\n## :large_blue_circle: Xin ch\u00e0o c\u00e1c b\u1ea1n\nb\u00e0i vi\u1ebft n\u00e0y \u0111\u01b0\u1ee3c d\u1ecbch t\u1eeb [\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\uff08\u30b5\u30fc\u30d0\u30fc\u7de8\uff09- AWS\u4e0a\u3067\u69cb\u7bc9\u3059\u308bRESTful\u30a2\u30d7\u30ea\u52c9\u5f37\u4f1a\uff5eWeb\u958b\u767a\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7\uff5e\u3010\u7b2c10\u56de\u3011\u30de\u30cb\u30e5\u30a2\u30eb](http://qiita.com/k_shimoji/items/cc53d321e32d104cb819) c\u1ee7a t\u00e1c gi\u1ea3 @k_shimoji \n\nH\u00f4m nay ch\u00fang ta s\u1ebd h\u1ecdc v\u1ec1 c\u00e1c c\u1ea5u tr\u00fac l\u1ea1i code hay c\u00f2n g\u1ecdi l\u00e0 \"refactoring\".\n\n## :large_blue_circle: Refactoring l\u00e0 g\u00ec ?\n\nRefactoring \u2013 t\u00e1i c\u1ea5u tr\u00fac \u2013 l\u00e0 qu\u00e1 tr\u00ecnh l\u00e0m thay \u0111\u1ed5i m\u00e3 hi\u1ec7n c\u00f3 b\u00ean trong m\u00e0 kh\u00f4ng thay \u0111\u1ed5i h\u00e0nh vi b\u00ean ngo\u00e0i c\u1ee7a n\u00f3. N\u00f3i c\u00e1ch kh\u00e1c, t\u1ee9c l\u00e0 thay \u0111\u1ed5i c\u00e1ch n\u00f3 th\u1ef1c hi\u1ec7n, nh\u01b0ng kh\u00f4ng kh\u00f4ng thay \u0111\u1ed5i n\u00f3 l\u00e0m c\u00e1i g\u00ec. M\u1ee5c \u0111\u00edch l\u00e0 \u0111\u1ec3 c\u1ea3i thi\u1ec7n c\u01a1 c\u1ea5u n\u1ed9i b\u1ed9.\n\n## :large_blue_circle: C\u00e1c b\u01b0\u1edbc Refactoring\n\n1. X\u00e1c \u0111\u1ecbnh n\u01a1i c\u1ea7n refactoring.\n2. Vi\u1ebft c\u00e1c test \u0111\u1ec3 ki\u1ec3m tra .\n3. refactoring\n4. test\n5. Tr\u1edf l\u1ea1i b\u01b0\u1edbc 1\n\n\n## :one: X\u00e1c \u0111\u1ecbnh n\u01a1i c\u1ea7n refactoring\n\nCode smells (code m\u00e0 b\u1ed1c m\u00f9i, ho\u1eb7c c\u00f3 m\u00f9i l\u1ea1 trong code) l\u00e0 b\u1ea5t k\u1ef3 tri\u1ec7u ch\u1ee9ng b\u1ea5t \u1ed5n n\u00e0o b\u00ean trong m\u00e3 ngu\u1ed3n c\u1ee7a m\u1ed9t ch\u01b0\u01a1ng tr\u00ecnh, m\u00e0 v\u00ec n\u00f3 c\u00f3 th\u1ec3 s\u1ebd d\u1eabn \u0111\u1ebfn c\u00e1c v\u1ea5n \u0111\u1ec1 l\u1edbn h\u01a1n. Code smells kh\u00f4ng ph\u1ea3i l\u00e0 bugs (l\u1ed7i l\u1eadp tr\u00ecnh), ngh\u0129a l\u00e0 ch\u00fang kh\u00f4ng l\u00e0m sai ch\u1ee9 n\u0103ng c\u1ee7a \u1ee9ng d\u1ee5ng. Thay v\u00e0o \u0111\u00f3, ch\u00fang l\u00e0 bi\u1ec3u hi\u1ec7n c\u1ee7a s\u1ef1 y\u1ebfu k\u00e9m trong thi\u1ebft k\u1ebf v\u00e0 s\u1ebd l\u00e0m cho qu\u00e1 tr\u00ecnh ph\u00e1t tri\u1ec3n \u1ee9ng d\u1ee5ng b\u1ecb ch\u1eadm l\u1ea1i ho\u1eb7c t\u0103ng nguy c\u01a1 c\u1ee7a bugs ho\u1eb7c l\u1ed7i trong t\u01b0\u01a1ng lai. \n* Quote: [\u0110\u1ecbnh ngh\u0129a c\u00e1c code b\u1ed1c m\u00f9i] (http://objectclub.jp/technicaldoc/refactoring/refact-smell) *\n\n- L\u1eb7p code\n- method qu\u00e1 d\u00e0i\n- Class qu\u00e1 to\n- Qu\u00e1 nhi\u1ec1u arguments\n- Qu\u00e1 nhi\u1ec1u s\u1ef1 thay \u0111\u1ed5i\n- Bi\u1ebfn thay d\u1ed5i \n- C\u00e1c thu\u1ed9c t\u00ednh, s\u1ef1 ph\u1ee5 thu\u1ed9c b\u1ea5t h\u1ee3p l\u00fd c\u1ee7a operation\n- Header c\u1ee7a d\u1eef li\u1ec7u\n- Qu\u00e1 tu\u00e2n th\u1ee7 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u nguy\u00ean th\u1ee7y.\n- L\u1ec7nh Switch\n- Th\u1eeba k\u1ebf song song \n- Class l\u01b0\u1eddi bi\u1ebfng\n- Nh\u1eefng th\u00e0nh ph\u1ea7n \u0111\u01b0\u1ee3c sinh ra \u0111\u00e1ng nghi\n- Thu\u1ed9c t\u00ednh t\u1ea1m th\u1eddi\n- Chu\u1ed7i tin nh\u1eafn\n- Trung gian\n- C\u00e1c m\u1ed1i quan h\u1ec7 kh\u00f4ng \u0111\u00fang\n- Class interface kh\u00f4ng ph\u00f9 h\u1ee3p\n- Th\u01b0 vi\u1ec7n qu\u00e1 c\u0169\n- Data class\n- T\u1eeb ch\u1ed1i th\u1eeba k\u1ebf\n- Comment\n\n### :point_up: M\u00ecnh s\u1ebd ph\u00e2n lo\u1ea1i c\u00e1c m\u00f9i n\u00e0y ra\n\nVi\u1ec7c ph\u00e2n nh\u00f3m n\u00e0y ho\u00e0n to\u00e0n l\u00e0 m\u1ed9t \u00fd t\u01b0\u1edfng c\u00e1 nh\u00e2n nh\u1eb1m m\u1ee5c \u0111\u00edch t\u0103ng t\u00ednh d\u1ec5 nh\u1edb. \u0110\u00e2y kh\u00f4ng ph\u1ea3i l\u00e0 thu\u1eadt ng\u1eef hay keyword n\u00ean ch\u1ec9 c\u1ea7n hi\u1ec3u \u0111\u01b0\u1ee3c ch\u00fang th\u00ec b\u1ea1n mu\u1ed1n g\u1ecdi th\u1ebf n\u00e0o c\u0169ng \u0111\u01b0\u1ee3c. Ch\u00fang ta s\u1ebd \u0111i v\u00e0o t\u1eebng nh\u00f3m: :smirk:\n\n- M\u00f9i qu\u00e1 r\u00f5 r\u00e0ng\n- M\u00f9i xu\u1ea5t hi\u1ec7n khi b\u1ea1n b\u1eaft \u0111\u1ea7u \u0111\u1ecdc code\n- C\u1ea5u tr\u00fac r\u1eafc r\u1ed1i\n- H\u1ec7 th\u1ed1ng l\u1ed7i th\u1eddi\n- M\u00f9i tanh\n- M\u00f9i m\u1ed3 h\u00f4i\n- M\u00f9i l\u1eeba d\u1ed1i\n\nT\u00f4i s\u1ebd gi\u1ea3i th\u00edch \u1edf ph\u1ea7n d\u01b0\u1edbi.\nCho m\u1ed7i m\u00f9i, t\u00f4i s\u1ebd vi\u1ebft m\u1ed9t \"c\u00e1ch kh\u1eed m\u00f9i\" v\u00e0 \"nh\u1eefng nguy\u00ean t\u1eafc n\u00f3 vi ph\u1ea1m\", c\u00f2n ph\u1ea7n gi\u1ea3i th\u00edch th\u00ec \u1edf b\u00e0i vi\u1ebft n\u00e0y ch\u1eafc l\u00e0 kh\u00f4ng \u0111\u1ee7, v\u00ec v\u1eady mong c\u00e1c b\u1ea1n t\u00ecm ki\u1ebfm th\u00eam th\u00f4ng tin v\u1ec1 n\u00f3 tr\u00ean google n\u1ebfu c\u00e1c b\u1ea1n th\u1ef1c s\u1ef1 h\u1ee9ng th\u00fa.\n\n#### M\u00f9i qu\u00e1 r\u00f5 r\u00e0ng\n\nKh\u00f4ng c\u1ea7n l\u00e0m g\u00ec c\u0169ng bi\u1ebft code c\u00f3 m\u00f9i, nh\u00ecn qua ch\u1ee9 kh\u00f4ng c\u1ea7n \u0111\u1ecdc code lu\u00f4n.\n\n- 2. Method qu\u00e1 d\u00e0i\n   - H\u00e3y t\u00e1ch n\u00f3 ra.\n- 3. Class qu\u00e1 l\u1edbn\n   - T\u00e1ch n\u00f3 ra.\n- 4. Qu\u00e1 nhi\u1ec1u arguments\n   - H\u00e3y ph\u00e2n lo\u1ea1i c\u00e1c object r\u00f5 r\u00e0ng h\u01a1n.\n- 10. Qu\u00e1 nhi\u1ec1u l\u1ec7nh switch\n   - B\u1ea1n c\u00f3 m\u1ed9t Switch Statements qu\u00e1 ph\u1ee9c t\u1ea1p ho\u1eb7c m\u1ed9t chu\u1ed7i c\u00e1c v\u00f2ng if then l\u1ed3ng nhau r\u1ea5t r\u1eafc r\u1ed1i. H\u00e3y s\u1eed d\u1ee5ng h\u01b0\u1edbng \u0111\u1ed1i t\u01b0\u1ee3ng.\n\n\n#### M\u00f9i xu\u1ea5t hi\u1ec7n khi b\u1ea1n b\u1eaft \u0111\u1ea7u \u0111\u1ecdc code\n\nNh\u1eefng m\u00f9i n\u00e0y ngay l\u1eadp t\u1ee9c xu\u1ea5t hi\u1ec7n khi b\u1ea1n \u0111\u1ecdc qua c\u00e1c ti\u00eau \u0111\u1ec1\n\n- 1. L\u1eb7p code\n   - Vi ph\u1ea1m nguy\u00ean t\u1eafc DRY, h\u00e3y h\u1ea1n ch\u1ebf vi\u1ec7c copy paste l\u1ea1i code.\n- 12. Class l\u01b0\u1eddi bi\u1ebfng\n   - M\u1ed9t class nh\u1ecf t\u1ed3n t\u1ea1i m\u00e0 kh\u00f4ng c\u00f3 nhi\u1ec1u \u00fd ngh\u0129a v\u1edbi nh\u1eefng g\u00ec b\u1ea1n \u0111ang l\u00e0m, t\u1ed1t nh\u1ea5t l\u00e0 t\u1ea1o m\u1ed9t role \u1edf class kh\u00e1c ch\u1ee9 kh\u00f4ng c\u1ea7n \u0111\u1ec3 ri\u00eang ra.\n- 16. Trung gian\n   -  Vi\u1ec7c hi\u1ec3u v\u00e0 thay \u0111\u1ed5i m\u1ed9t class th\u01b0\u1eddng s\u1ebd t\u1ed1n r\u1ea5t nhi\u1ec1u chi ph\u00ed v\u00e0 th\u1eddi gian. V\u1eady n\u00ean n\u1ea5u nh\u01b0 c\u00f3 m\u1ed9t class n\u00e0o \u0111\u00f3 kh\u00f4ng \u0111\u00e1ng \u0111\u1ec3 b\u1ecf ra nh\u1eefng chi ph\u00ed nh\u01b0 v\u1eady th\u00ec h\u00e3y x\u00f3a n\u00f3 \u0111i.\n- 18. Interface Class kh\u00f4ng ph\u00f9 h\u1ee3p\n   - Ai \u0111\u00f3 \u0111\u00e3 l\u00e0m m\u1ed9t vi\u1ec7c t\u01b0\u01a1ng t\u1ef1 ? h\u00e3y ng\u1ea7m hi\u1ec3u v\u1edbi nhau.\n- 20. Data class\n   - Hay c\u00f2n g\u1ecdi l\u00e0 \"Thi\u1ebfu domain model\". H\u00e3y nh\u1edb data v\u00e0 c\u00e1c h\u00e0nh vi.\n   \n#### C\u1ea5u tr\u00fac r\u1eafc r\u1ed1i\n\n- 5. Qu\u00e1 nhi\u1ec1u s\u1ef1 thay \u0111\u1ed5i\n   - Vi ph\u1ea1m nguy\u00ean t\u1eafc SRP (single responsibility principle). M\u1ed9t class \u0111\u00e3 l\u00e0m vi\u1ec7c qu\u00e1 t\u1ea3i, hay chia s\u1ebb c\u00f4ng vi\u1ec7c c\u1ee7a n\u00f3.\n- 6. Bi\u1ebfn b\u1ecb thay \u0111\u1ed5i\n   - Chia s\u1ebb 1 c\u00f4ng vi\u1ec7c cho qu\u00e1 nhi\u1ec1u class. H\u00e3y ph\u00e2n chia tr\u00e1ch nhi\u1ec7m r\u00f5 r\u00e0ng h\u01a1n .\n- 11. Th\u1eeba k\u1ebf song song\n   - M\u1ed9t v\u00ed d\u1ee5 \u0111i\u1ec3m h\u00ecnh c\u1ee7a vi ph\u1ea1m nguy\u00ean t\u1eafc OCP (open / closed principle).  M\u1ed7i khi b\u1ea1n kh\u1edfi t\u1ea1o m\u1ed9t class con c\u1ee7a m\u1ed9t class th\u00ec b\u1ea1n th\u1ea5y r\u1eb1ng m\u00ecnh c\u1ea7n ph\u1ea3i t\u1ea1o ti\u1ebfp m\u1ed9t class con c\u1ee7a m\u1ed9t class kh\u00e1c t\u01b0\u01a1ng \u1ee9ng. H\u00e3y chia s\u1ebb \u0111\u00fang c\u00f4ng vi\u1ec7c c\u1ee7a class cha v\u00e0 class con. \n\n\n#### H\u1ec7 th\u1ed1ng l\u1ed7i th\u1eddi\n\n\u1ede th\u1eddi \u0111i\u1ec3m tr\u01b0\u1edbc ( ph\u1ee5 thu\u1ed9c v\u00e0o h\u1ec7t th\u1ed1ng th\u1eddi \u0111\u00f3 ho\u1eb7c th\u1eddi gian ph\u00e1t tri\u1ec3n m\u00e0 n\u00f3 c\u00f3 khi ch\u1ec9 l\u00e0 s\u1ef1 thay \u0111\u1ed5i r\u1ea5t nh\u1ecf) n\u00f3 c\u00f3 th\u1ec3 kh\u00f4ng ph\u1ea3i m\u00f9i, tuy nhi\u00ean n\u00f3 khi\u1ebfn cho vi\u1ec7c b\u1ea3o tr\u00ec tr\u1edf n\u00ean kh\u00f3 kh\u0103n khi c\u00f4ng ngh\u1ec7 \u0111\u00f3 \u0111\u00e3 qu\u00e1n c\u0169\n\n- 7. Thu\u1ed9c t\u00ednh, c\u00e1c s\u1ef1 g\u1eafn k\u1ebft kh\u00f4ng h\u1ee3p l\u1ec7 c\u1ee7a c\u00e1c ho\u1ea1t \u0111\u1ed9ng\n   - C\u00e1c lu\u1eadt Roles c\u1ee7a class tr\u1edf n\u00ean kh\u00f4ng r\u00f5 r\u00e0ng, h\u00e3y s\u1eeda roles cho th\u00edch h\u1ee3p\n- 15. Chu\u1ed1i t\u00ean g\u1ecdi qu\u00e1 d\u00e0i\n   - Trong code c\u1ee7a b\u1ea1n xu\u1ea5t hi\u1ec7n m\u1ed9t chu\u1ed7i nh\u01b0 sau: methodA().methodB().methodC().methodD(); H\u00e3y t\u1ed5 ch\u1ee9c l\u1ea1i ch\u00fang v\u00ec r\u1ea5t ph\u1ee9c t\u1ea1p.\n- 17. C\u00e1c m\u1ed1i quan h\u1ec7 kh\u00f4ng \u0111\u00fang c\u00e1ch\n   - Khi m\u1ed9t class s\u1eed d\u1ee5ng \u0111\u1ebfn m\u1ed9t thu\u1ed9c t\u00ednh ho\u1eb7c ph\u01b0\u01a1ng th\u1ee9c c\u1ee7a m\u1ed9t class kh\u00e1c m\u00e0 \u0111\u00e1ng ra ph\u01b0\u01a1ng th\u1ee9c v\u00e0 thu\u1ed9c t\u00ednh \u0111\u00f3 n\u00ean l\u00e0 private.\n- 21. T\u1eeb ch\u1ed1i th\u1eeba k\u1ebf\n   - N\u1ebfu m\u1ed9t class th\u1ef1c thi ch\u1ec9 m\u1ed9t ho\u1ea1t \u0111\u1ed9ng m\u00e0 ph\u1ea3i k\u00e9o theo th\u00eam m\u1ed9t class kh\u00e1c th\u00ec t\u1ea1i sao class k\u00e9o theo n\u00e0y n\u00ean t\u1ed3n t\u1ea1i?\n     \n#### M\u00f9i c\u00e1\n\nM\u00ecnh t\u1ea1m g\u1ecdi vui c\u00e1i m\u00f9i n\u00e0y gi\u1ed1ng nh\u01b0 m\u00f9i c\u00e1 tanh.\nN\u00f3 thi\u1ebfu data modeling, thi\u1ebfu s\u1ef1 c\u00e2n nh\u1eafc tr\u01b0\u1edbc khi \u0111\u00f3ng g\u00f3i. H\u00e3y c\u1ea9n th\u1eadn h\u01a1n d\u00f9 qu\u00e1 m\u1ed9t ch\u00fat th\u1eddi gian.\n\n- 8. Data g\u1eedi v\u00e0o header\n   - Data c\u1ea7n lu\u00f4n \u0111\u01b0\u1ee3c s\u1eed s\u1eed d\u1ee5ng \u1edf c\u00f9ng m\u1ed9t set, h\u00e3y c\u1ed1 g\u1eafng \u0111\u1ec3 n\u00f3 th\u1eadt s\u00e1t v\u1edbi object.\n- 9. Tu\u00e2n th\u1ee7 c\u00e1c ki\u1ec3u d\u1eef li\u1ec7u c\u01a1 b\u1ea3n\n   - H\u00e3y t\u1ea1o m\u1ed9t ValueObject\n- 14. Thu\u1ed9c t\u00ednh t\u1ea1m th\u1eddi\n   - C\u00e1c bi\u1ebfn (field) kh\u00f4ng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng ho\u1eb7c \u0111\u00e3 s\u1eed d\u1ee5ng xong. H\u00e3y chuy\u1ec3n n\u00f3 th\u00e0nh c\u00e1c bi\u1ebfn ngo\u00e0i ho\u1eb7c NullObject \n\n#### M\u00f9i m\u1ed3 h\u00f4i\n\nB\u1ea1n \u0111\u00e3 l\u00e0m vi\u1ec7c r\u1ea5t v\u1ea5t v\u1ea3, tuy nhi\u00ean code c\u1ee7a b\u1ea1n v\u1eabn r\u1ea5t t\u1ed3i, v\u00e0 th\u1ee9 duy nh\u1ea5t c\u00f3 th\u1ec3 xu\u1ea5t ra l\u00e0 m\u1ed3 h\u00f4i.\n\n- 13. Nghi ng\u1edd qu\u00e1 nhi\u1ec1u\n   - B\u1ea1n \u0111\u00e3 code m\u00e0 ngh\u0129 qu\u00e1 nhi\u1ec1u \u0111\u1ebfn nh\u1eefng th\u1ee9 t\u01b0\u01a1ng lai c\u1ea7n d\u00f9ng \u0111\u1ebfn, v\u00ec v\u1eady b\u1ea1n \u0111\u00e3 implement r\u1ea5t nhi\u1ec1u th\u1ee9 kh\u00f4ng c\u1ea7n thi\u1ebft t\u1ea1i th\u1eddi \u0111i\u1ec3m hi\u1ec7n t\u1ea1i. H\u00e3y ch\u1ec9 implement n\u1ebfu b\u1ea1n th\u1ef1c s\u1ef1 c\u1ea7n n\u00f3, ch\u1eebng n\u00e0o b\u1ea1n v\u1eabn ch\u01b0a c\u1ea7n n\u00f3, h\u00e3y c\u1ed1 g\u1eafng \u0111\u1ec3 ch\u01b0\u01a1ng tr\u00ecnh c\u1ee7a b\u1ea1n \u0111\u01a1n gi\u1ea3n nh\u1ea5t c\u00f3 th\u1ec3.\n   \n#### M\u00f9i l\u1eeba d\u1ed1i\n\nM\u1eb7c d\u00f9 code kh\u00f4ng c\u1ed1 t\u00ecnh vi\u1ebft sai, nh\u01b0ng k\u1ebft qu\u1ea3 n\u00f3 l\u1ea1i sai.\n\n- 19. Kh\u00f4ng s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c class th\u01b0 vi\u1ec7n\n   - Th\u01b0 vi\u1ec7n kh\u00f4ng th\u1ec3 s\u1eed d\u1ee5ng nh\u01b0 ch\u00ednh kh\u1ea3 n\u0103ng c\u1ee7a n\u00f3, h\u00e3y s\u1eeda l\u1ea1i \u0111\u1ec3 c\u00f3 th\u1ec3 s\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c, \u0111\u1eebng ph\u00f3 m\u1eb7c t\u1ea5t c\u1ea3 cho th\u01b0 vi\u1ec7n.\n- 22. Comments\n   - Comments qu\u00e1 c\u0169 ho\u1eb7c sai s\u1ef1 th\u1eadt. H\u00e3y c\u1ed1 \u0111\u1ecdc hi\u1ec3u ch\u01b0\u01a1ng tr\u00ecnh c\u00e0ng nhi\u1ec1u c\u00e0ng t\u1ed1t m\u00e0 kh\u00f4ng ch\u00fa \u00fd \u0111\u1ebfn comment. N\u00f3 c\u00f3 th\u1ec3 kh\u00f4ng ch\u00fa th\u00edch g\u00ec cho code c\u1ea3 ( t\u1ea1i sao l\u1ea1i d\u00f9ng logic n\u00e0y , vv...) ch\u1ec9 v\u1edbi m\u1ee5c ti\u00eau l\u00e0 b\u1ea1n mu\u1ed1n comment, h\u00e3y c\u1ed1 g\u1eafng vi\u1ebft code th\u1eadt d\u1ec5 hi\u1ec3u m\u00e0 kh\u00f4ng c\u1ea7n t\u00f3m t\u1eaft n\u00f3 b\u1eb1ng comment.\n\n## :two: B\u1ea1n \u0111\u00e3 c\u00f3 test n\u00e0o ch\u01b0a? N\u1ebfu ch\u01b0a, h\u00e3y vi\u1ebft test ngay - PhpUnit\n\nRefactoring is ngh\u0129a l\u00e0 \"kh\u00f4ng thay \u0111\u1ed5i ho\u1ea1t \u0111\u1ed9ng c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh\" nh\u01b0ng \"c\u1ea3i thi\u1ec7n \u0111\u01b0\u1ee3c c\u1ea5u tr\u00fac b\u00ean trong\".\n\u0110\u1ec3 ch\u1eafc ch\u1eafn r\u1eb1ng nh\u1eefng h\u00e0nh vi c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh kh\u00f4ng thay \u0111\u1ed5i. b\u1ea1n kh\u00f4ng th\u1ec3 ch\u1ec9 test m\u1ed9t l\u1ea7n\n\nH\u00e3y b\u1eaft \u0111\u1ea7u test n\u00e0o.\n\nCh\u00fa \u00fd r\u1eb1ng v\u1edbi vi\u1ec7c vi\u1ebft test th\u00ec c\u00f3 m\u1ed9t \u0111i\u1ec1u r\u1ea5t quan tr\u1ecdng l\u00e0 **\"Test ph\u1ea3i d\u1ec5 d\u00e0ng \u0111\u1ec3 vi\u1ebft\"**.\n\n## :three: Refactoring\n\nC\u00f3 m\u1ed9t v\u00e0i k\u1ef9 thu\u1eadt cho m\u1ed7i \"code smell\" ( m\u00f9i c\u1ee7a code ), tuy nhi\u00ean t\u00f4i kh\u00f4ng th\u1ec3 m\u00f4 t\u1ea3 h\u1ebft \u0111\u01b0\u1ee3c, \u1edf workshop n\u00e0y m\u00ecnh ch\u1ec9 gi\u1eef m\u1ecdi th\u1ee9 th\u1eadt \u0111\u01a1n gi\u1ea3n.\n\nB\u1edfi v\u00ec h\u00e0n Upload \u1edf b\u00e0i tr\u01b0\u1edbc c\u00f3 m\u00f9i c\u1ee7a \"method qu\u00e1 d\u00e0i\", h\u00e3y th\u1eed refactor n\u00f3 b\u1eb1ng c\u00e1ch \u00e1p d\u1ee5ng c\u00e1ch \"Chia Method\".\n\n## :four: Test\n\nH\u00e3y ki\u1ec3m tra k\u1ebft qu\u1ea3 b\u1eb1ng c\u00e1ch test sau khi \u0111\u00e3 ho\u00e0n t\u1ea5t refactoring.\n\u0110\u1ec3 vi\u1ebft m\u1ed9t test code t\u1ed1t,\n**\u0110i\u1ec1u quan tr\u1ecdng l\u00e0 nh\u1eefng g\u00ec b\u1ea1n mu\u1ed1n test ph\u1ea3i \u0111\u01b0\u1ee3c ph\u00e2n bi\u1ec7t r\u00f5 r\u00e0ng** N\u1ebfu b\u1ea1n kh\u00f4ng mu\u1ed1n test t\u1ea5t c\u1ea3 m\u1ecdi th\u1ee9.\n\nC\u00e1c test ph\u1ea3i \u0111\u01b0\u1ee3c implement nh\u01b0 l\u00e0 m\u1ed9t \"gi\u00e1 tr\u1ecb gi\u1ea3\", m\u00ecnh s\u1ebd ti\u1ebfp t\u1ee5c test hi\u1ec7u qu\u1ea3 ch\u01b0\u01a1ng tr\u00ecnh.\n\n## :five: Tr\u1edf l\u1ea1i b\u01b0\u1edbc 1\n\nRefactoring c\u1ea7n lu\u00f4n \u0111\u01b0\u1ee3c th\u1ef1c thi.\nH\u00e3y ti\u1ebfp t\u1ee5c l\u00e0m gi\u1ea3m c\u00e1c g\u00e1nh n\u1eb7ng k\u1ef9 thu\u1eadt cho ch\u01b0\u01a1ng tr\u00ecnh.\n\n## :large_blue_circle: M\u1ee5c l\u1ee5c b\u00e0i h\u1ecdc\n\n- Chu\u1ea9n b\u1ecb\n   - Duy tr\u00ec Branch\n   - C\u00e0i \u0111\u1eb7t Composer\n   - C\u00e0i PhpUnit\n   - T\u1ea1o test cho DB\n- B\u00e0i 1 Thi\u1ebft l\u1eadp PHPUnit v\u00e0 t\u1ea1o m\u1ed9t test \u0111\u01a1n gi\u1ea3n.\n- B\u00e0i 2 test h\u00e0m upload\n- B\u00e0i 3 refactoring h\u00e0m upload\n\n\n\n## :large_blue_circle: Chu\u1ea9n b\u1ecb\n\nPh\u1ea7n chu\u1ea9n b\u1ecb s\u1ebd gi\u1ed1ng nhau \u1edf m\u1ed7i b\u00e0i, v\u00ec v\u1eady t\u00f4i \u0111\u00e3 t\u1ed5ng h\u1ee3p n\u00f3 \u1edf m\u1ed9t entry ri\u00eang. C\u00e1c b\u1ea1n vui l\u00f2ng xem \u1edf link n\u00e0y [All 12 times of study sessions in do I have use of Git - RESTful application workshops will be built on AWS ~ Web development workshop ~ - Qiita](http://qiita.com/k_shimoji/items/6a66dbb93b0553fa7c7f) \u0111\u1ec3 chu\u1ea9n b\u1ecb .\n\n- Git: B\u00e2y gi\u1edd m\u00ecnh s\u1ebd t\u1ea1o branch `vol/09` v\u00e0 l\u00e0m vi\u1ec7c tr\u00ean n\u00f3.\n\nOK, b\u01b0\u1edbc \u0111\u1ea7u \u0111\u00e3 xong\n\n:warning: *** T\u00f4i xin nh\u1eafc l\u1ea1i \u1edf b\u00e0i 5 v\u00e0 b\u00e0i 6, ch\u00fang ta \u0111\u00e3 c\u00f3 nh\u1eefng table b\u1ecb thay \u0111\u1ed5i. ***\n\n- B\u00e0i 5\n  - T\u1ea1o Table d\u00e0nh cho vi\u1ec7c \u0111\u0103ng k\u00fd th\u00e0nh vi\u00ean ( Th\u1ef1c hi\u1ec7n cho ch\u1ee9c n\u0103ng login )\n- B\u00e0i 6\n  - Th\u00eam m\u1ed9t c\u1ed9t cho table TODO list ( Th\u00eam c\u1ed9t Owner v\u00e0 c\u1ed9t assignee cho ch\u1ee9c n\u0103ng ph\u00e2n c\u00f4ng c\u00f4ng vi\u1ec7c)\n\nC\u00e1c b\u1ea1n n\u00ean tham kh\u1ea3o l\u1ea1i c\u00e1c link sau \u0111\u1ec3 r\u00f5 h\u01a1n.\n[T\u1ea1o Table d\u00e0nh cho vi\u1ec7c \u0111\u0103ng k\u00fd th\u00e0nh vi\u00ean](http://qiita.com/Takumi_Kasuga/items/c97e96fb91b83ed68782#t%E1%BA%A1o-table-cho-vi%E1%BB%87c-%C4%91%C4%83ng-k%C3%BD-user)\n[Th\u00eam m\u1ed9t c\u1ed9t cho table TODO list](http://qiita.com/Takumi_Kasuga/items/6d7506f8dc7de511bf14#large_blue_circle-chu%E1%BA%A9n-b%E1%BB%8B)\n\n\nT\u1eeb gi\u1edd tr\u1edf \u0111i, m\u00ecnh s\u1ebd s\u1eed d\u1ee5ng phpUnit \u0111\u1ec3 t\u1ea1o test code. B\u1edfi v\u00ec n\u00f3 \u0111\u01b0\u1ee3c t\u1ea1o b\u1eb1ng composer, v\u00ec v\u1eady m\u00ecnh c\u0169ng c\u1ea7n c\u00e0i s\u1eb5n composer n\u1eefa.\n\n### Thi\u1ebft l\u1eadp Composer, c\u00e0i \u0111\u1eb7t phpUnit\n\nComposer l\u00e0 m\u1ed9t c\u00f4ng c\u1ee5 qu\u1ea3n l\u00fd c\u00e1c g\u00f3i tin \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng trong php. B\u00e2y gi\u1edd m\u00ecnh s\u1ebd c\u00e0i \u0111\u1eb7t phpUnit b\u1eb1ng c\u00e1ch s\u1eed d\u1ee5ng Composer.\n\n#### Download Composer\n\nC\u00f4ng vi\u1ec7c \u0111\u1ea7u ti\u00ean t\u1ea5t nhi\u00ean l\u00e0 download Composer.\nV\u00e0o th\u01b0 m\u1ee5c `/var/www/study/rest-study` v\u00e0 s\u1eed d\u1ee5ng l\u00eanh `wget` \u0111\u1ec3 download.\n\n```bash:DownloadComposer\ncd /var/www/study/rest-study\nwget http://getcomposer.org/composer.phar\n```\n\n#### S\u1eeda composer.json\n\nTi\u1ebfp theo, m\u00ecnh c\u1ea7n s\u1eeda file composer.json ( file \u0111\u1ecbnh ngh\u0129a nh\u1eefng th\u1ee9 b\u1ea1n mu\u1ed1n qu\u1ea3n l\u00fd b\u1eb1ng Composer).\nM\u00ecnh \u0111\u00e3 x\u00f3a `debug_kit` v\u00ec n\u00f3 kh\u00f4ng th\u1ef1c s\u1ef1 c\u1ea7n thi\u1ebft. \n:warning: T\u00f4i s\u1ebd kh\u00f4ng \u0111i s\u00e2u v\u00e0o c\u1ea5u tr\u00fac Composer v\u00e0 `composer.json` format \u1edf b\u00e0i n\u00e0y, r\u1ea5t xin l\u1ed7i.\n\n```diff:/var/www/study/rest-study/composer.json\n {\n \t\"name\": \"cakephp/cakephp\",\n \t\"description\": \"The CakePHP framework\",\n \t\"type\": \"library\",\n \t\"keywords\": [\"framework\"],\n \t\"homepage\": \"http://cakephp.org\",\n \t\"license\": \"MIT\",\n \t\"authors\": [\n \t\t{\n \t\t\t\"name\": \"CakePHP Community\",\n \t\t\t\"homepage\": \"https://github.com/cakephp/cakephp/graphs/contributors\"\n \t\t}\n \t],\n \t\"support\": {\n \t\t\"issues\": \"https://github.com/cakephp/cakephp/issues\",\n \t\t\"forum\": \"http://stackoverflow.com/tags/cakephp\",\n \t\t\"irc\": \"irc://irc.freenode.org/cakephp\",\n \t\t\"source\": \"https://github.com/cakephp/cakephp\"\n \t},\n \t\"require\": {\n \t\t\"php\": \">=5.2.8\",\n \t\t\"ext-mcrypt\": \"*\"\n \t},\n \t\"require-dev\": {\n-\t\t\"phpunit/phpunit\": \"3.7.*\",\n-\t\t\"cakephp/debug_kit\" : \"2.2.*\"\n+\t\t\"phpunit/phpunit\": \"3.7.*\"\n \t},\n \t\"bin\": [\n \t\t\"lib/Cake/Console/cake\"\n \t]\n }\n```\n\n#### C\u00e0i \u0111\u1eb7t phpUnit b\u1eb1ng Composer\n\nM\u00ecnh ch\u1ea1y l\u1ec7nh sau.\n\n```Command\nphp composer.phar install\n```\n\n### T\u1ea1o test cho DB\n\n\u0110\u1ec3 an to\u00e0n cho `study` database, h\u00e3y t\u1ea1o m\u1ed9t database t\u00ean `study_test`.\nT\u00f4i s\u1eed d\u1ee5ng phpMyAdmin.\n\n\u0110\u1ea7u ti\u00ean b\u1ea1n c\u1ea7n \u0111\u0103ng nh\u1eadp v\u00e0o PHPMyAdmin\nURL l\u00e0 `http://(PublicIP)/phpMyAdmin/`.\nN\u1ebfu b\u1ea1n ch\u01b0a thay \u0111\u1ed5i g\u00ec th\u00ec ID v\u00e0 password s\u1ebd \u0111\u1ec1u l\u00e0 `study`.\nSau c\u00e1c b\u01b0\u1edbc tr\u00ean, b\u1ea1n c\u1ea7n copy `study` database v\u00e0 t\u1ea1o m\u1ed9t database m\u1edbi t\u00ean l\u00e0 `study_test`.\n\n1. Sau khi \u0111\u0103ng nh\u1eadp, \u1edf n\u01a1i b\u1ea1n ch\u1ecdn `study` database, click v\u00e0o ph\u1ea7n \"operation\" nh\u01b0 trong \u1ea3nh sau.\n\n\n![phpMyAdmin_1.png](https://qiita-image-store.s3.amazonaws.com/0/65988/706f8045-1a18-64c0-993d-73821560cf7d.png \"phpMyAdmin_1.png\")\n\n2. Ti\u1ebfp theo, ph\u1ea7n \"Copy database to:\" m\u00ecnh \u0111i\u1ec1 t\u00ean l\u00e0 \"`study_test`\", Tick v\u00e0o ph\u1ea7n \"Structure only\", sau \u0111\u00f3 ch\u1ea1y.\n![phpMyAdmin_2.png](https://qiita-image-store.s3.amazonaws.com/0/65988/4a5a2e27-154e-9114-dc2b-05fce024ed66.png \"phpMyAdmin_2.png\")\n\n\n3. N\u1ebfu k\u1ebft qu\u1ea3 nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y l\u00e0 b\u1ea1n \u0111\u00e3 th\u00e0nh c\u00f4ng\n![phpMyAdmin_3.png](https://qiita-image-store.s3.amazonaws.com/0/65988/6537fd3a-6dad-7bb9-5b08-128874b1a920.png \"phpMyAdmin_3.png\")\n\n\nC\u00e1c b\u01b0\u1edbc chu\u1ea9n b\u1ecb \u0111\u00e3 xong, b\u1eaft \u0111\u1ea7u b\u00e0i 1 n\u00e0o\n\n## :large_blue_circle: B\u00e0i 1: T\u1ea1o m\u1ed9t test \u0111\u01a1n gi\u1ea3n b\u1eb1ng PhpUnit\n\n\u1ede b\u00e0i 3 m\u00ecnh s\u1ebd refactoring h\u00e0m upload m\u00e0 m\u00ecnh \u0111\u00e3 t\u1ea1o \u1edf b\u00e0i tr\u01b0\u1edbc. Tuy nhi\u00ean tr\u01b0\u1edbc ti\u00ean m\u00ecnh c\u1ea7n th\u1eed t\u1ea1o m\u1ed9t test code b\u1eb1ng phpUnit \u0111\u1ec3 ki\u1ec3m tra b\u1eb1ng b\u00e0i h\u00e0m \u0111\u01a1n gi\u1ea3n.\n\n- L\u1ea5y to\u00e0n b\u1ed9 TODO List(`TodolistsController::index()`)\n- L\u1ea5y TODO 1(`TodoListsController::view()`)\n\nT\u00f4i s\u1ebd th\u1eed vi\u1ebft test code cho 2 method n\u00e0y.\n\nT\u01b0\u01a1ng \u1ee9ng th\u00ec \u0111\u1ec3 th\u00eam d\u1eef li\u1ec7u v\u00e0o database \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u b\u1eb1ng Json d\u01b0\u1edbi \u0111\u00e2y, h\u00e3y ch\u1eafc ch\u1eafn l\u00e0 n\u00f3 c\u00f3 th\u1ec3 t\u1ed5ng h\u1ee3p \u0111\u01b0\u1ee3c ch\u00fang.\n\n- `TodolistsController::index()`\n\n```json:TODOlist\n[\n    {\n        \"TodoList\": {\n            \"id\": \"1000\",\n            \"todo\": \"eat lunch\",\n            \"status\": \"1\",\n            \"owned\": true,\n            \"assigned\": true\n        },\n        \"Owner\": {\n            \"id\": \"1000\",\n            \"name\": \"takumi\"\n        },\n        \"Assignee\": {\n            \"id\": \"1000\",\n            \"name\": \"takumi\"\n        }\n    }\n]\n```\n\n\n- `TodolistsController:: view()`\n\n```json:TODO1\u4ef6\n\n{\n    \"TodoList\": {\n        \"id\": \"1000\",\n        \"todo\": \"eat lunch\",\n        \"status\": \"1\",\n    },\n    \"Owner\": {\n        \"id\": \"1000\",\n        \"name\": \"takumi\"\n    },\n    \"Assignee\": {\n        \"id\": \"1000\",\n        \"name\": \"takumi\"\n    }\n}\n```\n\n\n### Chi ti\u1ebft c\u00e1c file c\u1ea7n ch\u1ec9nh s\u1eeda\n\n\n|Thao t\u00e1c|file|M\u00f4 t\u1ea3|\n|---|:---------------------------------------|:----------------------|\n|S\u1eeda|app/Config/core.php                      |Th\u00eam thi\u1ebft l\u1eadp cho phpUnit\n|S\u1eeda| app/Config/database.php                |set database d\u00f9ng \u0111\u1ec3 test\n|Th\u00eam m\u1edbi| app/Test/Fixture/TodoListFixture.php |test quy tr\u00ecnh g\u1eedi d\u1eef li\u1ec7u TODO v\u00e0o DB\n|Th\u00eam m\u1edbi| app/Test/Fixture/UserFixture.php |test quy tr\u00ecnh g\u1eedi d\u1eef li\u1ec7u User v\u00e0o DB\n|Th\u00eam m\u1edbi| app/Test/Case/Controller/TodoListsControllerTest.php           |N\u1ed9i dung ch\u00ednh c\u1ee7a test code\n\n\n\n### app/Config/core.php\n\nM\u1ed7i class c\u1ee7a phpUnit m\u00ecnh s\u1ebd th\u00eam c\u00e0i \u0111\u1eb7t \u0111\u1ec3 n\u00f3 t\u1ef1 \u0111\u1ed9ng \u0111\u01b0\u1ee3c load.\n\n```diff:app/Config/core.php\n\n\u301c\u7565\u301c\n\n /**\n  * Configure the cache for model and datasource caches. This cache configuration\n  * is used to store schema descriptions, and table listings in connections.\n  */\n Cache::config('_cake_model_', array(\n \t'engine' => $engine,\n \t'prefix' => $prefix . 'cake_model_',\n \t'path' => CACHE . 'models' . DS,\n \t'serialize' => ($engine === 'File'),\n \t'duration' => $duration\n ));\n+\n+require_once ROOT . DS . 'vendor' . DS . 'autoload.php'; \n \n```\n\n- Trong `autoload.php`, v\u00ec n\u00f3 ch\u1ee9a c\u00e1c thi\u1ebft \u0111\u1eb7t \u0111\u1ec3 t\u1ef1 \u0111\u1ed9ng \u0111\u1ecdc class m\u00e0 b\u1ea1n c\u00e0i \u0111\u1eb7t trong Composer, C\u00e1c \u0111\u1ecbnh Path c\u1ea7n load.\n\n### app/Config/database.php\n\nTh\u00eam c\u00e1c th\u00f4ng tin \u0111\u1ec3 k\u1ebft n\u1ed1i \u0111\u1ebfn database m\u00e0 b\u1ea1n v\u1eeba t\u1ea1o.\n\n```diff:app/Config/database.php\n\n\u301c\u7565\u301c\n\n class DATABASE_CONFIG {\n \n \tpublic $default = array(\n \t\t'datasource' => 'Database/Mysql',\n \t\t'persistent' => false,\n \t\t'host' => 'localhost',\n \t\t'login' => 'study',\n \t\t'password' => 'study',\n \t\t'database' => 'study',\n \t\t'prefix' => '',\n \t\t'encoding' => 'utf8',\n \t);\n \n \tpublic $test = array(\n \t\t'datasource' => 'Database/Mysql',\n \t\t'persistent' => false,\n \t\t'host' => 'localhost',\n-\t\t'login' => 'user',\n-\t\t'password' => 'password',\n-\t\t'database' => 'test_database_name',\n+\t\t'login' => 'study',\n+\t\t'password' => 'study',\n+\t\t'database' => 'study_test',\n \t\t'prefix' => '',\n-\t\t//'encoding' => 'utf8',\n+\t\t'encoding' => 'utf8',\n \t);\n }\n```\n\n### app/Test/Fixture/TodoListFixture.php\n\n\"Fixture (fixtures)\" l\u00e0 class \u0111\u1ec3 th\u00eam m\u1ed9t d\u1eef li\u1ec7u c\u1ee7a Todo v\u00e0o test database .\n\n```php:TodoListFixture.php\n<?php\nclass TodoListFixture extends CakeTestFixture {\n\tpublic $import = 'TodoList';\n\tpublic $records = array (\n\t\tarray (\n\t\t\t\"id\" => 1000,\n\t\t\t\"todo\" => \"eat lunch\",\n\t\t\t\"status\" => \"1\",\n\t\t\t\"owner\" => 1000,\n\t\t\t\"assignee\" => 1000\n\t\t)\n\t);\n}\n```\n\n- `public $import = 'TodoList';` gi\u00fap m\u00ecnh \u0111\u1ecdc danh s\u00e1ch tr\u00ean table `TodoList` trong database \u0111\u01b0\u1ee3c khai b\u00e1o \u1edf `$default` c\u1ee7a `database.php` \u0111\u00f3 l\u00e0 database m\u00ecnh copy c\u1ee7a (`study`).\n- Data \u0111\u01b0\u1ee3c t\u1ea1o \u1edf `public $records = array ( ... )`.\n\n### app/Test/Fixture/UserFixture.php\n\n\u0110\u1ec3 g\u1eedi d\u1eef li\u1ec7u c\u1ee7a User v\u00e0o test database m\u00ecnh d\u00f9ng \"Fixture (fixture)\" class.\n\n```php:UserFixture.php\n<?php\nApp::uses('BlowfishPasswordHasher', 'Controller/Component/Auth');\nclass UserFixture extends CakeTestFixture {\n\tpublic $import = 'User';\n\tpublic $records;\n\tpublic function init() {\n\t\t$this->records = array (\n\t\t\tarray (\n\t\t\t\t\"id\" => 1000,\n\t\t\t\t\"username\" => \"yamada\",\n\t\t\t\t\"name\" => \"takumi\",\n\t\t\t\t\"password\" => (new BlowfishPasswordHasher())->hash(\"yamada\")\n\t\t\t)\n\t\t);\n\t\tparent::init();\n\t}\n}\n```\n\nGi\u1ed1ng nh\u01b0 v\u1edbi `TodoListFixture.php` , set `$import` v\u00e0 `$records`, tuy nhi\u00ean \u0111\u1eebng qu\u00ean m\u00ecnh c\u0169ng c\u1ea7n hash pasword n\u1eefa, quy tr\u00ecnh c\u1ee7a ch\u00fang ch\u00fang ta l\u00e0 implement c\u00e0i \u0111\u1eb7t c\u1ee7a `$records` \u1edf h\u00e0m `init` .\n\n### app/Test/Case/Controller/TodoListsControllerTest.php\n\n\u0110\u00e2y l\u00e0 n\u1ed9i dung ch\u00ednh c\u1ee7a test code\n\n```php:app/Test/Case/Controller/TodoListsControllerTest.php\n<?php\nApp::uses('AppController', 'Controller');\nclass TodoListsControllerTest extends ControllerTestCase {\n\tpublic $fixtures = array (\n\t\t'app.todo_list',\n\t\t'app.user'\n\t);\n\t/**\n\t * \u6e96\u5099\n\t * @return Controller\n\t */\n\tpublic function setUp() {\n\t\tparent::setUp();\n\t\t$mocks = array (\n\t\t\t'components' => array (\n\t\t\t\t'Auth' => array (\n\t\t\t\t\t'user'\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\t//TodoListsController\u3092\u751f\u6210\n\t\t$controller = $this->generate('TodoLists', $mocks);\n\t\t//Auth\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306euser\u30e1\u30bd\u30c3\u30c9\u3092\u30b9\u30bf\u30d6\u306b\u3059\u308b\n\t\t$loginUser = array (\n\t\t\t\"id\" => \"1000\",\n\t\t\t\"username\" => \"yamada\",\n\t\t\t\"name\" => \"yamada\"\n\t\t);\n\t\t$controller->Auth->staticExpects($this->any())\n\t\t\t->method('user')\n\t\t\t->will($this->returnValue($loginUser));\n\t\t$this->controller = $controller;\n\t}\n\t/**\n\t * index\u95a2\u6570\u306e\u30c6\u30b9\u30c8\n\t */\n\tpublic function testIndex()\n    {\n        $this->testAction('/todo_lists.json', array(\n            'method' => 'get'\n        ));\n        $result = $this->vars['res'];\n        $expected = array(\n            array(\n                \"TodoList\" => array(\n                    \"id\" => \"1000\",\n                    \"todo\" => \"eat lunch\",\n                    \"status\" => \"1\",\n                    \"owned\" => true,\n                    \"assigned\" => true\n                ),\n                \"Owner\" => array(\n                    \"id\" => \"1000\",\n                    \"name\" => \"takumi\"\n                ),\n                \"Assignee\" => array(\n                    \"id\" => \"1000\",\n                    \"name\" => \"takumi\"\n                )\n            )\n        );\n        $this->assertEquals($expected, $result);\n    }\n\t/**\n\t * view\u95a2\u6570\u306e\u30c6\u30b9\u30c8\n\t */\n\t   public function testView()\n    {\n        $this->testAction('/todo_lists/1000.json', array(\n            'method' => 'get'\n        ));\n        $result = $this->vars['res'];\n        $expected = array(\n            \"TodoList\" => array(\n                \"id\" => \"1000\",\n                \"todo\" => \"eat lunch\",\n                \"status\" => \"1\"\n            ),\n            \"Owner\" => array(\n                \"id\" => \"1000\",\n                \"name\" => \"takumi\"\n            ),\n            \"Assignee\" => array(\n                \"id\" => \"1000\",\n                \"name\" => \"takumi\"\n            )\n        );\n        $this->assertEquals($expected, $result);\n    }\n\n}\n```\n\nM\u00ecnh s\u1ebd k\u1ebf th\u1eeba t\u1eeb class `ControllerTestCase`, \u0111\u00e2y l\u00e0 m\u1ed9t class d\u00f9ng \u0111\u1ec3 test `TodoListsController`. R\u1ed9ng h\u01a1n th\u00ec m\u00ecnh s\u1ebd m\u00f4 t\u1ea3 sau v\u00ec n\u00f3 s\u1ebd chia ra nh\u01b0 sau.\n- Bi\u1ebfn `$fixtures`\n\t- B\u1ea1n s\u1ebd set fixture, n\u00f3 s\u1ebd g\u1eedi data l\u00ean trong qu\u00e1 tr\u00ecnh ch\u1ea1y test.\n- H\u00e0m `setUp`\n\t- M\u00ecnh s\u1ebd test `TodoListsController`, n\u00f3 s\u1ebd sinh c\u00e1c v\u00ed d\u1ee5 gi\u1ea3 \u0111\u1ec3 ch\u1ea1y ph\u1ea7n n\u00e0y.\n\t\t- Ch\u1ea1y h\u00e0m `generate`. T\u00ean c\u1ee7a Controller \u0111\u1ec3 t\u1ea1o (`TodoLists`), v\u00e0 truy\u1ec1n th\u00f4ng tin v\u1ec1 c\u00e1c \u0111\u1ed1i t\u01b0\u01a1ng gi\u1ea3 \u0111\u1ecbnh (mock).\n\t\t\t- T\u1ea1i \u0111\u00e2y h\u00e0m `user` ( h\u00e0m s\u1ebd tr\u1ea3 v\u1ec1 th\u00f4ng tin c\u1ee7a login user) c\u1ee7a th\u00e0nh ph\u1ea7n `Auth` cho mock, n\u00f3 s\u1ebd ph\u1ea3i ch\u1ea1y h\u00e0m v\u00e0 return nh\u1eefng th\u00f4ng tin b\u1ea1n \u0111\u00e3 set trong `$loginUser`. B\u00e2y gi\u1edd ch\u00fang ta ph\u1ea3i gi\u1ea3 l\u1eadp ph\u1ea7n login.\n    - test code c\u1ee7a h\u00e0m `index`\n\t- V\u1edbi vi\u1ec7c x\u00e1c \u0111\u1ecbnh url v\u00e0 method \u1edf `testAction`, b\u1ea1n c\u00f3 th\u1ec3 gi\u1ea3 l\u1eadp truy c\u1eadp t\u1eeb client.\n        - Gi\u00e1 tr\u1ecb tr\u1ea3 v\u1ec1 l\u00e0 m\u1ed9t chu\u1ed7i Json, s\u1ebd \u0111\u01b0\u1ee3c x\u00e1c nh\u1eadn b\u1eb1ng h\u00e0m `assertEquals` xem c\u00f3 h\u1ee3p v\u1edbi ch\u1ec9 1 TODO data \u0111\u00e3 \u0111\u01b0\u1ee3c g\u1eedi l\u00ean \u1edf fixture hay kh\u00f4ng.\n- test code cho h\u00e0m View\n   - Ngo\u00e0i ra ch\u00fang ta c\u0169ng ch\u1ea1y test \u1edf h\u00e0m `testAction` .\n\n### Ch\u1ea1y Test\n\nOK, ch\u00fang ta \u0111\u00e3 s\u1eb5n s\u00e0ng \u0111\u1ec3 test code! T\u00f4i s\u1ebd gi\u1ea3i th\u00edch c\u00e1ch th\u1ef1c hi\u1ec7n !\n\nC\u00e1c b\u1ea1n c\u0169ng c\u00f3 th\u1ec3 ch\u1ea1y command line t\u1eeb tr\u00ecnh duy\u1ec7t.\n\n#### Ch\u1ea1y t\u1eeb tr\u00ecnh duy\u1ec7t\n\nTruy c\u1eadp URL sau t\u1eeb tr\u00ecnh \u0111uy\u1ec7t\n\n`http://(PublicIP)/rest-study/test.php`\n\nMenu sau s\u1ebd xu\u1ea5t hi\u1ec7n tr\u00ean m\u00e0n h\u00ecnh ! H\u00e3y click v\u00e0o v\u00ec test class m\u00e0 m\u00ecnh v\u1eeba t\u1ea1o \u0111\u00e3 hi\u1ec3n th\u1ecb.\n\n![phpUnit_1.png](https://qiita-image-store.s3.amazonaws.com/0/65988/f437aec2-a1dc-163e-f628-da09e709252f.png \"phpUnit_1.png\")\n\nTest \u0111\u00e3 \u0111\u01b0\u1ee3c ch\u1ea1t. Thanh m\u00e0u xanh hi\u1ec3n th\u1ecb nh\u01b0 sau ngh\u0129a l\u00e0 th\u00e0nh c\u00f4ng.\n![phpUnit_2.png](https://qiita-image-store.s3.amazonaws.com/0/65988/325105ad-b603-971a-dd46-66048d7e8e07.png \"phpUnit_2.png\")\n\n\u0110\u1ec3 th\u1eed, t\u00f4i s\u1ebd th\u1eed thay \u0111\u1ed5i data \u0111\u1ec3 set v\u00e0o fixture.\nTodo \u0111\u00e3 \u0111\u01b0\u1ee3c g\u1eedi v\u00e0o fixture, khi b\u1ea1n ch\u1ea1y n\u00f3 v\u00e0 s\u1eeda n\u00f3 t\u1eeb \"buy milk\" th\u00e0nh \"walk the dog\" ,\n\n![phpUnit_3.png](https://qiita-image-store.s3.amazonaws.com/0/65988/837a9086-7e35-3da5-6edc-a628e4642628.png \"phpUnit_3.png\")\n\n\n#### Ch\u1ea1y t\u1eeb command line\n\nV\u00e0o th\u01b0 m\u1ee5c `/var/www/study/rest-study/app/Console`, v\u00e0 ch\u1ea1y v\u1edbi `./cake test app Controller/TodoListsController`.\n\n```bash:RunByCommandLine\ncd /var/www/study/rest-study/app/Console\n./cake test app Controller/TodoListsController\n```\n\n- Tr\u01b0\u1eddng h\u1ee3p test th\u00e0nh c\u00f4ng\n\n![phpUnit_4.png](https://qiita-image-store.s3.amazonaws.com/0/65988/dc6360b6-56f8-1238-3b42-43995bafe277.png \"phpUnit_4.png\")\n\n- Test th\u1ea5t b\u1ea1i\n\n![phpUnit_5.jpg](https://qiita-image-store.s3.amazonaws.com/0/65988/263d8b94-6815-6c96-32a8-7ebb1d4f4aea.jpeg \"phpUnit_5.jpg\")\n\n\n### T\u1ed5ng k\u1ebft b\u00e0i h\u1ecdc\n\nCh\u00fang ta \u0111\u00e3 th\u1ef1c hi\u1ec7n c\u00e1c thao t\u00e1c nh\u01b0 sau\n\n- :white_check_mark: T\u1ea1o m\u1edbi file `app/Config/core.php` v\u1edbi n\u1ed9i dung nh\u01b0 tr\u00ean.\n- :white_check_mark: S\u1eeda file `app/Config/database.php` nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: T\u1ea1o m\u1edbi file `app/Test/Fixture/TodoListFixture.php` v\u1edbi n\u1ed9i dung nh\u01b0 tr\u00ean.\n- :white_check_mark: T\u1ea1o m\u1edbi file `app/Test/Fixture/UserFixture.php` v\u1edbi n\u1ed9i dung nh\u01b0 tr\u00ean.\n- :white_check_mark: T\u1ea1o m\u1edbi file `app/Test/Case/Controller/TodoListsControllerTest.php` v\u1edbi n\u1ed9i dung nh\u01b0 tr\u00ean.\n- :white_check_mark: Ki\u1ec3m tra k\u1ebft qu\u1ea3.\n- :white_check_mark: Commit l\u00ean Git\n\n**:warning: Hi\u1ec3n th\u1ecb d\u1ee5ng Diff tr\u00ean GitHub**\n\n\n[\u7b2c10\u56de Lesson1 phpUnit\u306e\u8a2d\u5b9a\u3068\u7c21\u5358\u306a\u30c6\u30b9\u30c8\u4f5c\u6210 \u00b7 suzukishouten-study/rest-study@a17ff3a](https://github.com/suzukishouten-study/rest-study/commit/a17ff3a018d759498b2ea9bede0c54341a481c61)\n\nChuy\u1ec3n qua b\u00e0i 2 n\u00e0o c\u1ea3 nh\u00en\n\n## :large_blue_circle: B\u00e0i 2: Test h\u00e0m Upload\n\n\u1ede b\u00e0i 2 n\u00e0y, ch\u00fang ta s\u1ebd t\u1ea1o m\u1ed9t test c\u1ee7a h\u00e0m upload \u0111\u1ec3 refactor.\nTh\u1eadt ra th\u00ec c\u00f3 m\u1ed9t bug \u1edf h\u00e0m upload c\u1ee7a ch\u01b0\u01a1ng tr\u00ecnh n\u00e0y, ch\u00fang ta s\u1ebd fix n\u00f3.\n\n### C\u00e1c file c\u1ea7n ch\u1ec9nh s\u1eeda\n\n|Thao t\u00e1c|file|M\u00f4 t\u1ea3|\n|---|:---------------------------------------|:----------------------|\n|S\u1eeda| app/Test/Case/Controller/TodoListsControllerTest.php |Th\u00eam test cho ph\u1ea7n upload\n|S\u1eeda| app/Model/TodoList.php                 |S\u1eeda th\u1ee9 t\u1ef1 \u0111\u1ec3 v\u00e0o test trong DB\n|S\u1eeda| app/Controller/TodoListsController.php |Fix c\u00e1c bug v\u00e0 m\u1ed9t v\u00e0i th\u1ee9 kh\u00e1c n\u1eefa\n\n\n### app/Test/Case/Controller/TodoListsControllerTest.php\n\n\nT\u00f4i s\u1ebd th\u00eam h\u00e0m test cho ph\u1ea7n upoad\n\n```diff:app/Test/Case/Controller/TodoListsControllerTest.php\n\n\u301c\u7565\u301c\n \tpublic function setUp() {\n \t\tparent::setUp();\n \t\t$mocks = array (\n+\t\t\t'methods' => array (\n+\t\t\t\t'getUploadFileParams'\n+\t\t\t),\n \t\t\t'components' => array (\n \t\t\t\t'Auth' => array (\n \t\t\t\t\t'user'\n @@ -90,4 +93,88 @@ public function testView() {\n \t\t$this->assertEquals($expected, $result);\n \t}\n \n+\t/**\n+\t * Test ham upload\n+\t * Upload 1 file moi lan, gui TODO2 vao DB nhu binh thuong\n+\t */\n+\tpublic function testUploadOKFile() {\n+\t\t// Upload cac file dang duoc luu tru tam thoi\n+\t\t$postFileName = 'testUploadOKFile.txt';\n+\t\t$tmpFileName = tempnam('/tmp', $postFileName);\n+\t\t// Ban se tao file file voi noi dung o body\n+\t\tfile_put_contents($tmpFileName, array (\n+\t\t\t\"Hoge\\n\",\n+\t\t\t\"12345\\n\"\n+\t\t));\n+\t\t// cac du lieu khac tu POST\n+\t\t$uploadFormData = array (\n+\t\t\tarray (\n+\t\t\t\t'name' => $postFileName,\n+\t\t\t\t'tmp_name' => $tmpFileName\n+\t\t\t)\n+\t\t);\n+\t\t// ham nhan thong tin tu Form data, tham chieu de return formdata theo cau truc nhu tren\n+\t\t$this->controller->expects($this->any())\n+\t\t\t->method('getUploadFileParams')\n+\t\t\t->will($this->returnValue($uploadFormData));\n+\t\t// Ch\u1ea1y test\n+\t\t$result = $this->testAction('/todo_lists/upload.json', array (\n+\t\t\t'method' => 'post'\n+\t\t));\n+\t\t// ket quua/xac nhan\n+\t\t$result = $this->vars['response'];\n+\t\t$expected = '2 TODO were registed';\n+\t\t$this->assertEquals($expected, $result);\n+\t}\n+\n+\t/**\n+\t * Test ham upload\n+\t * Upload file thu 2, minh se nhap 2 TODO, trong do co 1 validation error\n+\t */\n+\tpublic function testUploadOKandNGFile() {\n+\t\t//luu tru tam thoi file thu nhat\n+\t\t$postFileName1 = 'testUploadOKandNGFile1.txt';\n+\t\t$tmpFileName1 = tempnam('/tmp', $postFileName1);\n+\t\t//Ban da tao 1 file voi noi dung upload tro thanh bod\n+\t\tfile_put_contents($tmpFileName1, array (\n+\t\t\t\"hoge\\n\",\n+\t\t\t\"12345\\n\",\n+\t\t\t\"12345\\n\"\n+\t\t));\n+\t\t//luu tru tam thoi file upload thu 2\n+\t\t$postFileName2 = 'testUploadOKandNGFile2.txt';\n+\t\t$tmpFileName2 = tempnam('/tmp', $postFileName2);\n+\t\t//Ban da tao 1 file voi noi dung upload tro thanh body\n+\t\tfile_put_contents($tmpFileName2, array (\n+\t\t\t\"fuga\\n\",\n+\t\t\t\"12345\\n\" // no se xay ra loi\n+\t\t));\n+\t\t// nhan data tu POST \n+\t\t$uploadFormData = array (\n+\t\t\tarray (\n+\t\t\t\t'name' => $postFileName1,\n+\t\t\t\t'tmp_name' => $tmpFileName1\n+\t\t\t),\n+\t\t\tarray (\n+\t\t\t\t'name' => $postFileName2,\n+\t\t\t\t'tmp_name' => $tmpFileName2\n+\t\t\t)\n+\t\t);\n+\n+\t\t//Tao TodoListController\n+\t\t//Form data acquisition function, the stub to return the form data prepared above\n+\t\t$this->controller->expects($this->any())\n+\t\t\t->method('getUploadFileParams')\n+\t\t\t->will($this->returnValue($uploadFormData));\n+\t\t//Chay test\n+\t\t$result = $this->testAction('/todo_lists/upload.json', array (\n+\t\t\t'method' => 'post'\n+\t\t));\n+\t\t//Ket qua nhan duoc\n+\t\t$result = $this->vars['response'];\n+\t\t$this->assertEquals('3 TODO were registered', $result['errors'][0][0]);\n+\t\t$this->assertEquals('The following error occurred.', $result['errors'][1][0]);\n+        $this->assertEquals('file:testUploadOKandNGFile1.txt - line: 3: [server]There are the same TODO exists in the TODO list.', $result['errors'][2][0]);\n+        $this->assertEquals('file:testUploadOKandNGFile2.txt - line: 2: [server]There are the same TODO exists in the TODO list.', $result['errors'][3][0]);  \n+                }\n+\t} \n```\n\n- H\u00e0m `setUp`\n\t- Th\u00eam c\u00e0i \u0111\u1eb7t mock cho h\u00e0m `getUploadFileParams` c\u1ee7a `TodoListController`\n- H\u00e0m `testUploadOKFile`\n\t- \u0110\u1ea7u ti\u00ean m\u00ecnh Test ph\u1ea7n upload . Ch\u1ec9 upload 1 file, h\u00e3y ch\u1eafc ch\u1eafn r\u1eb1ng TODO c\u1ee7a 2 d\u00f2ng \u0111\u01b0\u1ee3c li\u1ec7t k\u00ea trong file \u0111\u00e3 \u0111\u01b0\u1ee3c \u0111\u0103ng ch\u00ednh x\u00e1c \u1edf DB.\n        - It is stubbed to return the specified information `getUploadFileParams` function in the test code.\n\t\t- `getUploadFileParams` v\u1eabn ch\u01b0a \u0111\u01b0\u1ee3c implement, \u0111\u1ec3 t\u1ed5ng h\u1ee3p th\u00f4ng tin nh\u1eadn t\u1eeb form c\u1ee7a post t\u1eeb client qua h\u00e0m `upload`, m\u00ecnh d\u00f9ng `$files = $this->request->params['form'];` \u0111\u1ec3 l\u1ea5y. Ch\u00fang t\u00f4i c\u1eaft ra ch\u1ec9 vi\u1ec7c x\u1eed l\u00fd b\u1eb1ng h\u00e0m `$ files = $ this-> request-> params['form'];` \u0111\u1ec3 nh\u1eadn d\u1eef li\u1ec7u.\n\t- Sau \u0111\u00f3, c\u0169ng nh\u01b0 h\u00e0m `testIndex` v\u00e0 h\u00e0m `testView` c\u1ee7a b\u00e0i 1, ch\u1ea1y test \u1edf h\u00e0m `testAction`, ch\u00fang ta x\u00e1c nh\u1eadn k\u1ebft qu\u1ea3 \u1edf h\u00e0m `assertEquals`. \n- H\u00e0m `TestUploadOKandNGFile`\n\t- L\u1ea7n th\u1ee9 2 test ph\u1ea7n upload. M\u00ecnh s\u1ebd upload 2 file 1 l\u1ea7n, tuy nhi\u00ean m\u00ecnh s\u1ebd c\u1ea7n ch\u1eafc ch\u1eafn r\u1eb1ng trong t\u1ed5ng c\u1ed9ng 5 TODO \u0111\u01b0\u1ee3c \u0111\u0103ng, 3 c\u00e1i \u0111\u00e3 v\u00e0o DB, 2 c\u00e1i xu\u1ea5t hi\u1ec7n l\u1ed7i validation error (can not be registered TODO of the same content, it could get caught in the rule that).\n\t- T\u1ea1o m\u1ed9t method tham chi\u1ebfu gi\u1ed1ng h\u00e0m `testUploadOKFile` tr\u00ean kia. - C\u00e1ch ch\u1ea1y test, x\u00e1c nh\u1eadn k\u1ebft qu\u1ea3 c\u1ee7a method t\u01b0\u01a1ng t\u1ef1.\n\n### app/Model/TodoList.php\n\nM\u00ecnh s\u1ebd ph\u1ea3i s\u1eeda th\u1ee9 t\u1ef1 \u0111\u1ec3 test vi\u1ec7c g\u1eedi d\u1eef li\u1ec7u v\u00e0o DB.\n\n```diff:app/Model/TodoList.php\n\n\u301c\u7565\u301c\n\n \t//Rules xac nhan\n \t//Minh se kiem tra ID cua Assignee co ton tai trong users table hay khong\n \tpublic function existsUser($userId){\n-\t\t$userModel = new User();\n+\t\t$userModel = ClassRegistry::init('User');\n \t\t$count = $userModel->find('count', array('conditions'=>array('id'=>$userId), 'recursive' => -1));\n \t\treturn $count > 0;\n \t}\n \n \u301c\u4ee5\u4e0b\u7565\u301c\n```\n\n Gi\u1ed1ng nh\u01b0 m\u1ed9t h\u00e0m cho vi\u1ec7c validation c\u1ee7a b\u1ea1n, nh\u01b0ng s\u1ebd c\u00f3 th\u00eam m\u1ed9t h\u00e0m `existsUser` \u0111\u1ec3 ki\u1ec3m tra ID \u0111\u00e3 \u0111\u01b0\u1ee3c x\u00e1c \u0111\u1ecbnh c\u1ee7a Assignee, \u0111\u1ec3 t\u1ea1p ra m\u1ed9t User model,\n\n- `new User()`\n\n \u0110\u00e2y l\u00e0 h\u00e0m set\n\n- `ClassRegistry::init('User')`\n\nS\u1ebd thay cho `new User()`, n\u00f3 s\u1ebd l\u1ea5y th\u00f4ng tin k\u1ebft n\u1ed1i \u0111\u01b0\u1ee3c set \u1edf bi\u1ebfn `test` c\u1ee7a `database.php` trong qu\u00e1 tr\u00ecnh ch\u1ea1y test, c\u00e1ch n\u00e0y d\u00f9ng m\u00ecnh th\u1ea5y \u0111\u01b0\u1ee3c thi\u1ebft l\u1eadp c\u1ee7a `default`.\nVi\u1ec7c t\u1ea1o Model them c\u00e1ch n\u00e0y t\u1ed1t h\u01a1n c\u00e1ch \u0111\u1ea7u ti\u00ean.\n\n### app/Controller/TodoListsController.php\n\nNh\u01b0 \u0111\u00e3 \u0111\u01b0\u1ee3c nh\u1eafc \u0111\u1ebfn tr\u00ean kia, n\u00f3 \u0111\u01b0\u1ee3c tham chi\u1ebfu v\u00e0 fix c\u00e1c bug trong qu\u00e1 tr\u00ecnh nh\u1eadn th\u00f4ng tin t\u1eeb form \u0111\u01b0\u1ee3c g\u1eedi l\u00ean t\u1eeb client.\n\n```diff:app/Controller/TodoListsController.php\n\n\u301c\u7565\u301c\n\n \t}\n \n \tpublic function upload() {\n-\t\t$files = $this->request->params['form'];\n+\t\t$files = $this->getUploadFileParams();\n \t\t$owner = $this->Auth->user()['id'];\n \t\t$numTodos = 0;\n+\t\t$errors = array ();\n \t\tforeach ( $files as $file ) {\n \t\t\t$fileName = $file['name'];\n \t\t\t$filePath = $file['tmp_name'];\n \t\t\t$todos = file($filePath, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n \t\t\t$assignee = $owner;\n-\t\t\t$errors = array ();\n \t\t\t$lineNo = 1;\n \t\t\tforeach ( $todos as $todo ) {\n \t\t\t\t$data = array ();\n \t\t\t\t$data['todo'] = $todo;\n \t\t\t\t$data['status'] = 0;\n \t\t\t\t$data['owner'] = $owner;\n \t\t\t\t$data['assignee'] = $assignee;\n \t\t\t\t$res = $this->TodoList->save($data);\n \t\t\t\tif ($res) {\n \t\t\t\t\t$numTodos++;\n \t\t\t\t} else {\n \t\t\t\t\tif (count($this->TodoList->validationErrors) > 0) {\n \t\t\t\t\t\tforeach ( $this->TodoList->validationErrors as $validationErrorsOfLine ) {\n \t\t\t\t\t\t\t$title = 'file:' . $fileName . ' - line: ' . $lineNo . ': ';\n \t\t\t\t\t\t\tforeach ( $validationErrorsOfLine as $validationError ) {\n \t\t\t\t\t\t\t\t$errors[] = array (\n \t\t\t\t\t\t\t\t\t\t\t\t$title . $validationError\n \t\t\t\t\t\t\t\t);\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t$this->TodoList->create();\n \t\t\t\t$lineNo++;\n \t\t\t}\n \t\t}\n \t\tif (count($errors) > 0) {\n \t\t\t$this->TodoList->validationErrors = $errors;\n \t\t\t$response = $this->editResponse(false);\n \t\t\tarray_unshift($response['errors'], array (\n \t\t\t\t\t\t\t'\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002'\n \t\t\t));\n \t\t\tif ($numTodos > 0) {\n \t\t\t\tarray_unshift($response['errors'], array (\n \t\t\t\t\t\t\t\t$numTodos . '\u4ef6\u306eTODO\u3092\u767b\u9332\u3057\u307e\u3057\u305f\u3002'\n \t\t\t\t));\n \t\t\t}\n \t\t} else {\n \t\t\t$response = $numTodos . 'TODO were registered';\n \t\t}\n \t\t$this->set(compact('response'));\n \t\t$this->set('_serialize', 'response');\n \t}\n \n+\tprotected function getUploadFileParams(){\n+\t\treturn $this->request->params['form'];\n+\t}\n+\n \t//edit response\n \tprivate function editResponse($res){\n \t\tif($res){\n\n\u301c\u4ee5\u4e0b\u7565\u301c\n```\n\n- Vi\u1ec7c tham chi\u1ebfu\n\t- th\u00eam h\u00e0m `getUploadFileParams`, qu\u00e1 tr\u00ecnh nh\u1eadn th\u00f4ng tin trong form g\u1eedi l\u00ean t\u1eeb client (`$this-> request-> params['form']`) s\u1ebd b\u1ecb ng\u1eaft kh\u1ecfi h\u00e0m upload.\n- Fix c\u00e1c bug\n\t- Ch\u00fang ta c\u1ea7n kh\u1edfi t\u1ea1o bi\u1ebfn `$errors` \u0111\u1ec3 l\u01b0u tr\u1eef th\u00f4ng tin v\u1ec1 c\u00e1c l\u1ed7i validation error `$errors = array()` v\u00e0 v\u1ecb tr\u00ed c\u1ee7a ch\u00fang s\u1ebd kh\u00f4ng \u0111\u1ed5i. V\u00e0 \u0111\u00f3 ch\u1ec9 l\u00e0 khi tr\u01b0\u1edbc khi \u0111\u1ebfn ph\u1ea7n ch\u1ec9nh s\u1eeda, nh\u1eefng th\u00f4ng tin l\u1ed7i c\u1ee7a m\u1ed7i file s\u1ebd b\u1ecb x\u00f3a. :scream:\n\n\n### T\u00f3m t\u1eaft b\u00e0i h\u1ecdc\n\nCh\u00fang ta c\u1ea7n th\u1ef1c hi\u1ec7n c\u00e1c b\u01b0\u1edbc sau.\n\n- :white_check_mark: `app/Test/Case/Controller/TodoListsControllerTest.php` s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: `app/Model/TodoList.php` s\u1eeda nh\u01b0 h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: implement ph\u1ea7n \u0111\u1ea7u c\u1ee7a `app/Controller/TodoListsController.php`\u306e.\n- :white_check_mark: Ch\u1ea1y test. B\u1ea1n s\u1ebd th\u1ea5y l\u1ed7i v\u00e0 x\u1eed l\u00fd ch\u00fang nh\u01b0 h\u01b0\u1edbng d\u1eabn d\u01b0\u1edbi \u0111\u00e2y.\n\nTest th\u1ea5t b\u1ea1i v\u00ec c\u00f3 bug :scream:\n\n![phpUnit_6.jpg](https://qiita-image-store.s3.amazonaws.com/0/65988/f1dbd17c-f1f9-2665-d4da-ab87d6e0973c.jpeg \"phpUnit_6.jpg\")\n\n\nTest l\u1ea1i m\u1ed9t l\u1ea7n n\u1eefa sau khi fix bug\n\n- :white_check_mark: implement fix c\u00e1c bug v\u00e0o `app/Controller/TodoListsController.php`\n- :white_check_mark: Ch\u1ea1y test. Ch\u00fac b\u1ea1n th\u00e0nh c\u00f4ng :smile:\n\ntest th\u00e0nh c\u00f4ng :grin:\n\n\n![phpUnit_7.jpg](https://qiita-image-store.s3.amazonaws.com/0/65988/b6d513af-60be-6048-7b4e-a9c45b31319b.jpeg \"phpUnit_7.jpg\")\n\n\n\n- :white_check_mark: Commit l\u00ean Git\n\n**:warning: Hi\u1ec3n th\u1ecb d\u1ea1ng Diff tr\u00ean Github**\n\n[\u7b2c10\u56de Lesson2 \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u6a5f\u80fd\u306e\u30c6\u30b9\u30c8 \u00b7 suzukishouten-study/rest-study@fa3f13f](https://github.com/suzukishouten-study/rest-study/commit/fa3f13f7be7c08437dd042f387f62ef2f4a3301f?diff=split)\n\n\nM\u00ecnh s\u1ebd ho\u00e0n t\u1ea5t vi\u1ec7c refactoring \u1edf B\u00e0i 3\n\n## :large_blue_circle: B\u00e0i 3: Refactoring ch\u1ee9c n\u0103ng upload\n\nM\u00ecnh ch\u1ec9 fix trong `app/Controller/TodoListsController.php`.\n\u0110\u1ea7u ti\u00ean, h\u00e3y xem qua v\u1ec1 h\u00e0m upload tr\u01b0\u1edbc khi m\u00ecnh thao t\u00e1c.\n\n```php:File-Truoc-Khi-Refactor\n\tpublic function upload() {\n\t\t$files = $this->getUploadFileParams();\n\t\t$owner = $this->Auth->user()['id'];\n\t\t$numTodos = 0;\n\t\t$errors = array ();\n\t\tforeach ( $files as $file ) {\n\t\t\t$fileName = $file['name'];\n\t\t\t$filePath = $file['tmp_name'];\n\t\t\t$todos = file($filePath, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n\t\t\t$assignee = $owner;\n\t\t\t$lineNo = 1;\n\t\t\tforeach ( $todos as $todo ) {\n\t\t\t\t$data = array ();\n\t\t\t\t$data['todo'] = $todo;\n\t\t\t\t$data['status'] = 0;\n\t\t\t\t$data['owner'] = $owner;\n\t\t\t\t$data['assignee'] = $assignee;\n\t\t\t\t$res = $this->TodoList->save($data);\n\t\t\t\tif ($res) {\n\t\t\t\t\t$numTodos++;\n\t\t\t\t} else {\n\t\t\t\t\tif (count($this->TodoList->validationErrors) > 0) {\n\t\t\t\t\t\tforeach ( $this->TodoList->validationErrors as $validationErrorsOfLine ) {\n\t\t\t\t\t\t\t$title = 'file:' . $fileName . ' - line: ' . $lineNo . ': ';\n\t\t\t\t\t\t\tforeach ( $validationErrorsOfLine as $validationError ) {\n\t\t\t\t\t\t\t\t$errors[] = array (\n\t\t\t\t\t\t\t\t\t\t\t\t$title . $validationError\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$this->TodoList->create();\n\t\t\t\t$lineNo++;\n\t\t\t}\n\t\t}\n\t\tif (count($errors) > 0) {\n            $this->TodoList->validationErrors = $errors;\n            $response = $this->editResponse(false);\n            array_unshift($response['errors'], array(\n                'The following error occurred.'\n            ));\n            if ($numTodos > 0) {\n                array_unshift($response['errors'], array(\n                    $numTodos . ' TODO were registered'\n                ));\n            }\n        } else {\n            $response = $numTodos . ' TODO were registered';\n        }\n        $this->set(compact('response'));\n        $this->set('_serialize', 'response');\n    }\n```\n\nN\u00f3 kh\u00e1 l\u00e0 d\u00e0i d\u00f2ng, ch\u1eafc ch\u1ec9 c\u00f3 ng\u01b0\u1eddi vi\u1ebft m\u1edbi hi\u1ec3u ch\u01b0\u01a1ng tr\u00ecnh, logic c\u1ee7a n\u00f3 s\u1ebd r\u1ea5t kh\u00f3 \u0111\u1ec3 ng\u01b0\u1eddi kh\u00e1c h\u00ecnh dung \u0111\u01b0\u1ee3c.\nM\u00f9i n\u00e0y \u0111\u00e3 \u0111\u01b0\u1ee3c gi\u1edbi thi\u1ec7u trong ph\u1ea7n \u0111\u1ea7u c\u1ee7a [sinister smell](http://objectclub.jp/technicaldoc/refactoring/refact-smell), m\u00f9i c\u00f3 t\u00ean l\u00e0 \"too long method\".\nB\u00e2y gi\u1edd m\u00ecnh s\u1ebd refactor n\u00f3!\nN\u1ebfu l\u00e0m theo logic n\u00e0y th\u00ec ch\u00fang c\u00f3 th\u1ec3 th\u1ea5y n\u00f3 chia th\u00e0nh c\u00e1c ph\u1ea7n nh\u01b0 sau:\n- Nh\u1eadn POST data g\u1eedi l\u00ean khi client th\u1ef1c hi\u1ec7n upload\n- Nh\u1eadn ID c\u1ee7a user \u0111ang login\n- \u0110\u1ecdc c\u00e1c file \u0111\u01b0\u1ee3c upload v\u00e0 \u0111\u0103ng ch\u00fang v\u00e0o DB th\u00e0nh c\u00e1c TODO\n\t- L\u01b0u tr\u1eef c\u00e1c file \u0111\u01b0\u1ee3c upload v\u00e0o 1 m\u1ea3ng v\u00e0 \u0111\u1ecdc c\u00f9ng 1 l\u1ea7n\n        - L\u1ea7n l\u01b0\u1ee3t \u0110\u0103ng c\u00e1c TODO n\u00e0y v\u00e0o DB t\u1eeb m\u1ea3ng l\u01b0u tr\u1eef.\n        - N\u1ebfu c\u00f3 l\u1ed7i validation error, l\u01b0u tr\u1eef n\u1ed9i dung.\n- Ho\u00e0n t\u1ea5t upload v\u00e0 Hi\u1ec3n th\u1ecb k\u1ebft qu\u1ea3 c\u00f4ng vi\u1ec7c qua message t\u1edbi client\n\nH\u00e3y chia ch\u00fang th\u00e0nh c\u00e1c h\u00e0m.\n(C\u00e1i n\u00e0y kh\u00f4ng \u0111\u01b0\u1ee3c coi nh\u01b0 l\u00e0 m\u1ed9t k\u1ef9 n\u0103ng, ...) nh\u01b0ng \u0111\u00e2y l\u00e0 m\u1ed9t trong nh\u1eefng k\u1ef9 thu\u1eadt v\u01a1 b\u1ea3n nh\u1ea5t c\u1ee7a \"Extract Method\" trong refactoring!\n\n\nH\u00e0m sau khi \u0111\u01b0\u1ee3c chia ra v\u00e0 h\u00e0m upload \u0111\u01b0\u1ee3c s\u1eeda b\u1eb1ng c\u00e1ch \"Chia Method\" s\u1ebd nh\u01b0 sau.\n\n```php:ExtractedFunction\n\npublic function upload() {\n        $fileUploadParams = $this->getUploadFileParams();\n        $loginUserId = $this->getLoginUserId();\n        $owner = $loginUserId;\n        $assignee = $loginUserId;\n        $errors = array();\n        $numRegists = $this->registerFilesAsTodos($fileUploadParams, $owner, $assignee, $errors);\n        $response = $this->editUploadResponse($numRegists, $errors);\n        $this->set(compact('response'));\n        $this->set('_serialize', 'response');\n    }\n    //Lay du lieu POST tu file upload\n    protected function getUploadFileParams(){\n        return $this->request->params['form'];\n    }\n    //Lay login User ID\n    protected function getLoginUserId(){\n        return $this->Auth->user()['id'];\n    }\n    /Dang ky gui cac file todo de gui vao DB\n    private function registerFilesAsTodos($fileUploadParams, $owner, $assignee, &$errors){\n        $numRegists = 0;\n        //$errors = array();\n        foreach ( $fileUploadParams as $fileUploadParam ) {\n            $fileName = $fileUploadParam['name'];\n            $filePath = $fileUploadParam['tmp_name'];\n            $todos = $this->readUploadTodoFile($filePath);\n            $numRegists += $this->registerTodos($fileName, $todos, $owner, $assignee, $errors);\n        }\n        return $numRegists;\n    }\n    // Doc file upload gui vao mang\n    protected function readUploadTodoFile($filePath){\n        return file($filePath, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);\n    }\n    // Gui TODO o tren mang vao DB\n    private function registerTodos($fileName, $todos, $owner, $assignee, &$errors){\n        $numRegists = 0;\n        $lineNo = 1;\n        foreach ( $todos as $todo ) {\n            $record = array ();\n            $record['todo'] = $todo;\n            $record['status'] = 0;\n            $record['owner'] = $owner;\n            $record['assignee'] = $assignee;\n            $res = $this->TodoList->save($record);\n            if ($res) {\n                $numRegists++;\n            } else {\n                $validationErrors = $this->TodoList->validationErrors;\n                if (count($validationErrors) > 0) {\n                    $this->formatValidationErrorMessage($fileName, $lineNo, $validationErrors, $errors);\n                }\n            }\n            $this->TodoList->create();\n            $lineNo++;\n        }\n        return $numRegists;\n    }\n    // Cau truc noi dung cho cac thong bao loi validation error\n    private function formatValidationErrorMessage($fileName, $lineNo, $validationErrors, &$errors){\n        foreach ( $validationErrors as $validationErrorsOfLine ) {\n            $title = 'file:' . $fileName . ' - line: ' . $lineNo . ': ';\n            foreach ( $validationErrorsOfLine as $validationError ) {\n                $errors[] = array (\n                    $title . $validationError\n                );\n            }\n        }\n    }\n    // Cau truc cac tin nhan thong bao ket qua toi client\n    private function editUploadResponse($numRegists, $errors){\n        if (count($errors) > 0) {\n            $this->TodoList->validationErrors = $errors;\n            $response = $this->editResponse(false);\n            array_unshift($response['errors'], array (\n                'The following error occurred.'\n            ));\n            if ($numRegists > 0) {\n                array_unshift($response['errors'], array (\n                    $numRegists . ' TODO were registered'\n                ));\n            }\n        } else {\n            $response = $numRegists . ' TODO were registered';\n        }\n        return $response;\n    }\n\n\n```\n\nLogic \u0111\u00e3 \u0111\u01b0\u1ee3c m\u00f4 t\u1ea3 \u1edf tr\u00ean, b\u00e2y gi\u1edd t\u00f4i s\u1ebd show n\u00f3 ra b\u1ea3ng \"Extract Method\" d\u01b0\u1edbi \u0111\u00e2y.\n\nH\u00e0nh \u0111\u1ed9ng | extracted method\n-----------------------------------------------------+----------------------------\nGet POST data khi client ch\u1ea1y Upload               | getUploadFileParams\nL\u1ea5y ID c\u1ee7a user \u0111ang \u0111\u0103ng nh\u1eadp           | getLoginUserId\n\u0110\u1ecdc c\u00e1c file \u0111\u01b0\u1ee3c upload v\u00e0 \u0111\u0103ng n\u00f3 v\u00e0o DB nh\u01b0 l\u00e0 TODO | registerFilesAsTodos\nL\u01b0u tr\u1eef c\u00e1c file \u0111\u01b0\u1ee3c upload v\u00e0o m\u1ea3ng v\u00e0 \u0111\u1ecdc m\u1ed9t l\u1ea7n  | readUploadTodoFile\nL\u1ea7n l\u01b0\u1ee3t t\u1eebng TODO l\u01b0u tr\u00ean m\u1ea3ng \u0111\u01b0\u1ee3c \u0111\u0103ng v\u00e0o DB | registerTodos\nN\u1ebfu c\u00f3 validation error, t\u1ea1o c\u00e1c n\u1ed9i dung ph\u1ea3n h\u1ed3i             | formatValidationErrorMessage\nG\u1eedi c\u00e1c message c\u1ee7a k\u1ebft qu\u1ea3 upload cho client    | editUploadResponse\n\nM\u1ed7i ti\u1ebfn tr\u00ecnh \u0111\u1ec1u gi\u1ed1ng nh\u01b0 tr\u01b0\u1edbc khi ch\u1ec9nh s\u1eeda v\u00ec ch\u00fang ta ch\u1ec9 ph\u00e2n t\u00e1ch n\u00f3 ra c\u00e1c method nh\u1ecf.\nTruy\u1ec1n v\u00e0o c\u00e1c arguments v\u00e0 tr\u1ea3 v\u1ec1 gi\u00e1 tr\u1ecb cho c\u00e1c th\u00f4ng tin \u0111\u01b0\u1ee3c trao \u0111\u1ed5i.\n\n:warning: Th\u00f4ng tin v\u1ec1 validation error s\u1ebd \u0111\u01b0\u1ee3c truy\u1ec1n v\u00e0o `&$errors`.\n\n\n### T\u00f3m t\u1eaft b\u00e0i h\u1ecdc\n\nH\u00e3y ch\u1ea1y test sau khi m\u00ecnh \u0111\u00e3 ho\u00e0n t\u1ea5t c\u00e1c b\u01b0\u1edbc sau.\n\n- :white_check_mark: `app/Controller/TodoListsController.php` s\u1eeda theo h\u01b0\u1edbng d\u1eabn tr\u00ean.\n- :white_check_mark: Ch\u1ea1y test, n\u1ebfu th\u00e0nh c\u00f4ng k\u1ebft qu\u1ea3 s\u1ebd nh\u01b0 d\u01b0\u1edbi \u0111\u00e2y.\n\nTest th\u00e0nh c\u00f4ng :smile:\n![phpUnit_8.jpg](https://qiita-image-store.s3.amazonaws.com/0/65988/f4db4baa-bce8-7b81-53bc-04c83e456490.jpeg \"phpUnit_8.jpg\")\n\n\n- :white_check_mark: Commit l\u00ean Git\n\n**:warning: Hi\u1ec3n th\u1ecb d\u1ea1ng diff tr\u00ean Github**\n\n[\u7b2c10\u56de Lesson3 \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u6a5f\u80fd\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0 \u00b7 suzukishouten-study/rest-study@e774e5e](https://github.com/suzukishouten-study/rest-study/commit/e774e5e02fddbcf46b173ab5489d1fe1a3bfdece)\n\n\u0110\u00f3 l\u00e0 t\u1ea5t c\u1ea3 b\u00e0i vi\u1ebft n\u00e0y.\n\n\n## Trailer\n\nB\u00e0i ti\u1ebfp ch\u00fang ta s\u1ebd t\u00e1i c\u1ea5u tr\u00fac \u1edf ph\u00eda client \"refactoring (client ed)\".\nT\u00f4i hi v\u1ecdng ch\u00fang ta s\u1ebd l\u00e0m t\u1ed1t \u1edf ph\u00eda server nh\u01b0 nh\u1eefng g\u00ec m\u00ecnh \u0111\u00e3 l\u00e0m h\u00f4m nay.\n\n## R\u1ea5t mong nh\u1eadn \u0111\u01b0\u1ee3c nh\u1eefng ph\u1ea3n h\u1ed3i/g\u00f3p \u00fd c\u1ee7a c\u00e1c b\u1ea1n.\n\nC\u1ea3m \u01a1n c\u00e1c b\u1ea1n \u0111\u00e3 d\u00f5i theo series n\u00e0y, t\u00f4i hi v\u1ecdng s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c nh\u1eefng ph\u1ea3n h\u1ed3i, g\u00f3p \u00fd t\u00edch c\u1ef1c t\u1eeb t\u1ea5t c\u00e1c b\u1ea1n \u0111\u1ec3 c\u00f3 th\u1ec3 l\u00e0m t\u1ed1t h\u01a1n n\u1eefa.\n", "tags": ["PHPCake", "PHP", "Backbone.js", "AWS", "amazonEC2"]}