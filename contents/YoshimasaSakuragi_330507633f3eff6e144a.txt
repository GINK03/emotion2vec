{"context": " More than 1 year has passed since last update.\n\n\u59cb\u3081\u306b\nopenFrameworks\u3067\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u88fd\u4f5c\u3059\u308b\u6a5f\u4f1a\u304c\u3042\u308a\u307e\u3057\u305f.\n\u305d\u306e\u6642\u7528\u3044\u305f\u8a2d\u8a08\u306b\u3064\u3044\u3066\u306e\u30e1\u30e2\u3067\u3059.\n\u2192\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\n\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306eSceneElement\u3068SceneManager\u306e\u4e8c\u3064\u306e\u62bd\u8c61\u30af\u30e9\u30b9\u3092\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u306b\u3057\u3066\u958b\u767a\u3092\u884c\u3044\u307e\u3057\u305f.\n\u4ee5\u4e0bSceneElement\u3001SceneManager\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u305d\u308c\u305e\u308cElement\u3001Manager\u3068\u8868\u8a18\u3057\u307e\u3059.\nmanager\u306esetup()\u306b\u3066\u5fc5\u8981\u306aelement\u3092\u8ffd\u52a0\u3057\u3066init()\u3057\u307e\u3059.\n\u6620\u50cf\u4f5c\u54c1\u3068\u3044\u3046\u3053\u3068\u3067FPS\u3092\u4e00\u5b9a\u3067\u7dad\u6301\u51fa\u6765\u306a\u3044\u3053\u3068\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u3001\u57fa\u672c\u7684\u306b\u5168\u3066\u306e\u30b7\u30fc\u30f3\u306e\u30e1\u30e2\u30ea\u306e\u78ba\u4fdd\u3084ofVboMesh\u306e\u5927\u91cf\u306e\u9802\u70b9\u306e\u521d\u671f\u5316\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306a\u3069\u306e\u91cd\u305f\u3044\u51e6\u7406\u3092\u8d77\u52d5\u6642\u306b\u5148\u306b\u307e\u3068\u3081\u3066\u3084\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u306binit()\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002(\u4eca\u56de\u306f\u6700\u521d\u306b\u898b\u305b\u308b\u753b\u9762\u304c\u5f85\u6a5f\u753b\u9762\u3060\u3063\u305f\u306e\u3067\u3001\u8d77\u52d5\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3082\u554f\u984c\u304c\u306a\u304b\u3063\u305f\u305f\u3081)\n\u307e\u305f\u4eca\u56de\u306fVJ\u3063\u307d\u3044\u6620\u50cf\u4f5c\u54c1\u3060\u3063\u305f\u306e\u3067\u540c\u3058element\u3092\u4f55\u56de\u3082\u5207\u308a\u66ff\u3048\u3066\u4f7f\u3044\u56de\u3057\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u5207\u308a\u66ff\u3048\u6642\u306b\u80cc\u666f\u3084BlendMode,DepthTest\u306a\u3069\u306e\u8a2d\u5b9a\u304c\u6b21\u306eElement\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u305f\u3081\u306bstart()\u3067Element\u306e\u63cf\u753b\u8a2d\u5b9a\u3092\u884c\u3044\u3001stop()\u3067\u63cf\u753b\u8a2d\u5b9a\u3092\u30af\u30ea\u30a2\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f.\nManager\u306bnextElement()\u3068changeElement()\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u3067\u5207\u308a\u66ff\u3048\u3092\u9806\u756a\u306b\u3057\u305f\u3044\u5834\u5408\u3068\u3001\u4e0d\u898f\u5247\u306a\u5834\u5408\u306e\u4e21\u65b9\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f.\n\u5165\u529b\u306b\u5bfe\u3059\u308b\u6319\u52d5\u306b\u95a2\u3057\u3066\u306f\u4eca\u56de\u306fkeyReleased\u3068mouseReleased\u306e\u307f\u3067\u3088\u304b\u3063\u305f\u306e\u3067\uff12\u7a2e\u3057\u304b\u5b9f\u88c5\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u4f7f\u3063\u3066\u9802\u3051\u308b\u5834\u5408\u306f\u5fc5\u8981\u306a\u5206\u3060\u3051\u4ed8\u3051\u52a0\u3048\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059.\n\nSceneElement.cpp\n#include \"ofMain.h\"\n\nclass SceneElement {\npublic:\n    virtual void init(){};\n    virtual void start(){};\n    virtual void stop(){};\n    virtual void update(){};\n    virtual void draw()=0;\n    virtual void end(){};\n\n    virtual void keyReleased(int key){};\n    virtual void mouseReleased(int x, int y, int button){};\n};\n\n\n\nSceneManager.cpp\n#include \"SceneElement.cpp\"\n#include \"ofMain.h\"\n\nclass SceneManager{\nprotected:\n    int elementIndex = 0;\n    vector<SceneElement *> elements;\n\npublic:\n    virtual void setup()=0; //add SceneElement in this\n\n    void init(){\n        for(int i = 0; i < elements.size(); i++){\n            elements[i]->init();\n        }\n    }\n    void update(){\n        elements.at(elementIndex)->update();\n    };\n\n    void draw(){\n        ofSetWindowTitle(\"FPS:\" + ofToString(ofGetFrameRate()));\n        elements.at(elementIndex)->draw();\n    };\n\n    void end(){\n        for(int i = 0; i < elements.size(); i++){\n            elements[i]->end();\n        }\n    }\n\n    void changeElement(int index){\n        if(index >= elements.size()) return;\n        elements[elementIndex]->stop();\n        elementIndex = index;\n        elements[elementIndex]->start();\n    }\n\n    bool nextElement(){\n        elements[elementIndex]->stop();\n        elementIndex++;\n        if(elementIndex >= elements.size()){\n            elementIndex--;\n            return false;\n        }else{\n            elements[elementIndex]->start();\n            return true;\n        }\n    };\n\n    virtual void keyReleased(int key){\n        elements.at(elementIndex)->keyReleased(key);\n    };\n    virtual void mouseReleased(int x, int y, int button){\n        elements.at(elementIndex)->mouseReleased(x, y, button);\n    };\n};\n\n\n\n\u4f7f\u7528\u4f8b\n\u6700\u5f8c\u306b\u30ad\u30fc\u64cd\u4f5c\u306b\u3088\u3063\u3066\u80cc\u666f\u304c\u5909\u308f\u308b\u7c21\u5358\u306a\u30b5\u30f3\u30d7\u30eb\u3082\u63b2\u8f09\u3057\u3066\u304a\u304d\u307e\u3059.\n\n\u21e9\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306fnextElement()\u3067\u6b21\u306eElement\u304c\u306a\u3044\u5834\u5408\u306b\u65b0\u3057\u3044Manager\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u3066\u5207\u308a\u66ff\u3048\u3066\u3044\u307e\u3059\u304c\u3001\u672c\u6765\u306f\u3053\u3053\u3067\u306f\u3042\u3089\u304b\u3058\u3081\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u3066\u304a\u3044\u305fManager\u306b\u5207\u308a\u66ff\u3048\u3066\u4f7f\u3063\u3066\u307e\u3057\u305f.\n\nofApp.cpp\n#include \"SampleSceneManager.h\"\n\nSampleSceneManager manager;\n\nvoid ofApp::setup(){\n    manager.setup();\n}\n\nvoid ofApp::update(){\n    manager.update();\n}\n\nvoid ofApp::draw(){\n    manager.draw();\n}\nvoid ofApp::keyReleased(int key){\n    if(key == ' '){\n        if(!manager.nextElement()){\n            //Create new manager if has no more elements\n            manager = *new SampleSceneManager();\n            manager.setup();\n        }\n    }\n\n    manager.keyReleased(key);\n}\n\nvoid ofApp::mousePressed(int x, int y, int button){\n    manager.mouseReleased(x, y, button);\n}\n\n\n\nSampleSceneElement\n//SampleSceneElement.h\n\n#include \"SceneElement.h\"\nclass SampleSceneElement : public SceneElement {\npublic:\n    void draw() override;\n    SampleSceneElement();\n\nprivate:\n    ofColor backgroundColor;\n};\n\n//SampleSceneElement.cpp\n\nSampleSceneElement::SampleSceneElement(){\n    this->backgroundColor = ofColor::fromHsb(ofRandom(255), 255, 255);\n}\n\nvoid SampleSceneElement::draw(){\n    ofBackground(backgroundColor);\n}\n\n\n\n\nSampleSceneManager\n\n//SampleSceneManager.h\n#include \"SceneManager.cpp\"\n#include \"SampleSceneElement.h\"\n\nclass SampleSceneManager : public SceneManager {\npublic:\n    void setup() override;\n    void keyReleased(int key) override;\n};\n\n//SampleSceneManager.cpp\nvoid SampleSceneManager::setup(){\n    for(int i = 0; i < 5; i++){\n        this->elements.push_back(new SampleSceneElement());\n    }\n    init();\n}\n\nvoid SampleSceneManager::keyReleased(int key){\n    switch (key) {\n        case OF_KEY_RETURN:\n            changeElement(ofRandom(5));\n            break;\n        default:\n            break;\n    }\n}\n\n\n\n\u7d42\u308f\u308a\u306b\n\u7d04\uff11\u30f6\u6708\u9593\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u7528\u3044\u307e\u3057\u305f\u304c\u6700\u521d\u306b\u4f5c\u3063\u3066\u304b\u3089\u5927\u304d\u306a\u5909\u66f4\u306f\u306a\u304b\u3063\u305f\u4e0a\u306b\u3001\u7279\u306b\u9077\u79fb\u3067\u306e\u4e0d\u4fbf\u306f\u611f\u3058\u305a\u3001\u30b7\u30fc\u30f3\u6bce\u306b\u7ba1\u7406\u51fa\u6765\u308b\u306e\u3067\u958b\u767a\u52b9\u7387\u3082\u826f\u304b\u3063\u305f\u3067\u3059.\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u9077\u79fb\u304c\u30e9\u30f3\u30c0\u30e0\u3082\u3057\u304f\u306f\u9806\u756a\u306e\u307f\u3067\u3059\u304c\u30ad\u30fc\u30dc\u30fc\u30c9\u306b\u5272\u308a\u5f53\u3066\u305f\u308a\u51fa\u6765\u308b\u306e\u3067\u8272\u3005\u51fa\u6765\u307e\u3059.\n\u3053\u308c\u304b\u3089openFrameworks\u3067\u6620\u50cf\u4f5c\u54c1\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\u3068\u3044\u3046\u65b9\u306f\u3088\u3051\u308c\u3070\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044.\n\u3054\u610f\u898b\u7b49\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059.\n2015.10.26\n  \n  \n##\u59cb\u3081\u306b\nopenFrameworks\u3067\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u88fd\u4f5c\u3059\u308b\u6a5f\u4f1a\u304c\u3042\u308a\u307e\u3057\u305f.\n\u305d\u306e\u6642\u7528\u3044\u305f\u8a2d\u8a08\u306b\u3064\u3044\u3066\u306e\u30e1\u30e2\u3067\u3059.\n\u2192[\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8](https://github.com/SakuragiYoshimasa/SceneManagerSample)\n\n## \u30d9\u30fc\u30b9\u30af\u30e9\u30b9\n\u4eca\u56de\u306f\u4ee5\u4e0b\u306eSceneElement\u3068SceneManager\u306e\u4e8c\u3064\u306e\u62bd\u8c61\u30af\u30e9\u30b9\u3092\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u306b\u3057\u3066\u958b\u767a\u3092\u884c\u3044\u307e\u3057\u305f.\n\u4ee5\u4e0bSceneElement\u3001SceneManager\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u305d\u308c\u305e\u308cElement\u3001Manager\u3068\u8868\u8a18\u3057\u307e\u3059.\n\nmanager\u306esetup()\u306b\u3066\u5fc5\u8981\u306aelement\u3092\u8ffd\u52a0\u3057\u3066init()\u3057\u307e\u3059.\n\u6620\u50cf\u4f5c\u54c1\u3068\u3044\u3046\u3053\u3068\u3067FPS\u3092\u4e00\u5b9a\u3067\u7dad\u6301\u51fa\u6765\u306a\u3044\u3053\u3068\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u3001\u57fa\u672c\u7684\u306b\u5168\u3066\u306e\u30b7\u30fc\u30f3\u306e\u30e1\u30e2\u30ea\u306e\u78ba\u4fdd\u3084ofVboMesh\u306e\u5927\u91cf\u306e\u9802\u70b9\u306e\u521d\u671f\u5316\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306a\u3069\u306e\u91cd\u305f\u3044\u51e6\u7406\u3092\u8d77\u52d5\u6642\u306b\u5148\u306b\u307e\u3068\u3081\u3066\u3084\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u306binit()\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002(\u4eca\u56de\u306f\u6700\u521d\u306b\u898b\u305b\u308b\u753b\u9762\u304c\u5f85\u6a5f\u753b\u9762\u3060\u3063\u305f\u306e\u3067\u3001\u8d77\u52d5\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u3066\u3082\u554f\u984c\u304c\u306a\u304b\u3063\u305f\u305f\u3081)\n\n\u307e\u305f\u4eca\u56de\u306fVJ\u3063\u307d\u3044\u6620\u50cf\u4f5c\u54c1\u3060\u3063\u305f\u306e\u3067\u540c\u3058element\u3092\u4f55\u56de\u3082\u5207\u308a\u66ff\u3048\u3066\u4f7f\u3044\u56de\u3057\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u5207\u308a\u66ff\u3048\u6642\u306b\u80cc\u666f\u3084BlendMode,DepthTest\u306a\u3069\u306e\u8a2d\u5b9a\u304c\u6b21\u306eElement\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u305f\u3081\u306bstart()\u3067Element\u306e\u63cf\u753b\u8a2d\u5b9a\u3092\u884c\u3044\u3001stop()\u3067\u63cf\u753b\u8a2d\u5b9a\u3092\u30af\u30ea\u30a2\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f.\nManager\u306bnextElement()\u3068changeElement()\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u3067\u5207\u308a\u66ff\u3048\u3092\u9806\u756a\u306b\u3057\u305f\u3044\u5834\u5408\u3068\u3001\u4e0d\u898f\u5247\u306a\u5834\u5408\u306e\u4e21\u65b9\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f.\n\u5165\u529b\u306b\u5bfe\u3059\u308b\u6319\u52d5\u306b\u95a2\u3057\u3066\u306f\u4eca\u56de\u306fkeyReleased\u3068mouseReleased\u306e\u307f\u3067\u3088\u304b\u3063\u305f\u306e\u3067\uff12\u7a2e\u3057\u304b\u5b9f\u88c5\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u4f7f\u3063\u3066\u9802\u3051\u308b\u5834\u5408\u306f\u5fc5\u8981\u306a\u5206\u3060\u3051\u4ed8\u3051\u52a0\u3048\u308b\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059.\n\n```cpp:SceneElement.cpp\n#include \"ofMain.h\"\n\nclass SceneElement {\npublic:\n    virtual void init(){};\n    virtual void start(){};\n    virtual void stop(){};\n    virtual void update(){};\n    virtual void draw()=0;\n    virtual void end(){};\n    \n    virtual void keyReleased(int key){};\n    virtual void mouseReleased(int x, int y, int button){};\n};\n```\n\n```cpp:SceneManager.cpp\n#include \"SceneElement.cpp\"\n#include \"ofMain.h\"\n\nclass SceneManager{\nprotected:\n    int elementIndex = 0;\n    vector<SceneElement *> elements;\n\npublic:\n    virtual void setup()=0; //add SceneElement in this\n    \n    void init(){\n        for(int i = 0; i < elements.size(); i++){\n            elements[i]->init();\n        }\n    }\n    void update(){\n        elements.at(elementIndex)->update();\n    };\n    \n    void draw(){\n        ofSetWindowTitle(\"FPS:\" + ofToString(ofGetFrameRate()));\n        elements.at(elementIndex)->draw();\n    };\n    \n    void end(){\n        for(int i = 0; i < elements.size(); i++){\n            elements[i]->end();\n        }\n    }\n    \n    void changeElement(int index){\n        if(index >= elements.size()) return;\n        elements[elementIndex]->stop();\n        elementIndex = index;\n        elements[elementIndex]->start();\n    }\n\n    bool nextElement(){\n        elements[elementIndex]->stop();\n        elementIndex++;\n        if(elementIndex >= elements.size()){\n            elementIndex--;\n            return false;\n        }else{\n            elements[elementIndex]->start();\n            return true;\n        }\n    };\n    \n    virtual void keyReleased(int key){\n        elements.at(elementIndex)->keyReleased(key);\n    };\n    virtual void mouseReleased(int x, int y, int button){\n        elements.at(elementIndex)->mouseReleased(x, y, button);\n    };\n};\n```\n\n##\u4f7f\u7528\u4f8b\n\u6700\u5f8c\u306b\u30ad\u30fc\u64cd\u4f5c\u306b\u3088\u3063\u3066\u80cc\u666f\u304c\u5909\u308f\u308b\u7c21\u5358\u306a\u30b5\u30f3\u30d7\u30eb\u3082\u63b2\u8f09\u3057\u3066\u304a\u304d\u307e\u3059.\n<img width=\"250\" alt=\"2.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/68570/c4d5d8e1-15ba-8c31-5369-4aaed1fee77f.png\">\n\u21e9\n<img width=\"250\" alt=\"3.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/68570/1e654dd9-454c-5bff-09b4-4265e278bb59.png\">\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306fnextElement()\u3067\u6b21\u306eElement\u304c\u306a\u3044\u5834\u5408\u306b\u65b0\u3057\u3044Manager\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u3066\u5207\u308a\u66ff\u3048\u3066\u3044\u307e\u3059\u304c\u3001\u672c\u6765\u306f\u3053\u3053\u3067\u306f\u3042\u3089\u304b\u3058\u3081\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u3066\u304a\u3044\u305fManager\u306b\u5207\u308a\u66ff\u3048\u3066\u4f7f\u3063\u3066\u307e\u3057\u305f.\n\n```cpp:ofApp.cpp\n#include \"SampleSceneManager.h\"\n\nSampleSceneManager manager;\n\nvoid ofApp::setup(){\n    manager.setup();\n}\n\nvoid ofApp::update(){\n    manager.update();\n}\n\nvoid ofApp::draw(){\n    manager.draw();\n}\nvoid ofApp::keyReleased(int key){\n    if(key == ' '){\n        if(!manager.nextElement()){\n            //Create new manager if has no more elements\n            manager = *new SampleSceneManager();\n            manager.setup();\n        }\n    }\n    \n    manager.keyReleased(key);\n}\n\nvoid ofApp::mousePressed(int x, int y, int button){\n    manager.mouseReleased(x, y, button);\n}\n```\n\n```cpp:SampleSceneElement\n//SampleSceneElement.h\n\n#include \"SceneElement.h\"\nclass SampleSceneElement : public SceneElement {\npublic:\n    void draw() override;\n    SampleSceneElement();\n    \nprivate:\n    ofColor backgroundColor;\n};\n\n//SampleSceneElement.cpp\n\nSampleSceneElement::SampleSceneElement(){\n    this->backgroundColor = ofColor::fromHsb(ofRandom(255), 255, 255);\n}\n\nvoid SampleSceneElement::draw(){\n    ofBackground(backgroundColor);\n}\n\n```\n\n```cpp:SampleSceneManager\n\n//SampleSceneManager.h\n#include \"SceneManager.cpp\"\n#include \"SampleSceneElement.h\"\n\nclass SampleSceneManager : public SceneManager {\npublic:\n    void setup() override;\n    void keyReleased(int key) override;\n};\n\n//SampleSceneManager.cpp\nvoid SampleSceneManager::setup(){\n    for(int i = 0; i < 5; i++){\n        this->elements.push_back(new SampleSceneElement());\n    }\n    init();\n}\n\nvoid SampleSceneManager::keyReleased(int key){\n    switch (key) {\n        case OF_KEY_RETURN:\n            changeElement(ofRandom(5));\n            break;\n        default:\n            break;\n    }\n}\n```\n\n##\u7d42\u308f\u308a\u306b\n\u7d04\uff11\u30f6\u6708\u9593\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u7528\u3044\u307e\u3057\u305f\u304c\u6700\u521d\u306b\u4f5c\u3063\u3066\u304b\u3089\u5927\u304d\u306a\u5909\u66f4\u306f\u306a\u304b\u3063\u305f\u4e0a\u306b\u3001\u7279\u306b\u9077\u79fb\u3067\u306e\u4e0d\u4fbf\u306f\u611f\u3058\u305a\u3001\u30b7\u30fc\u30f3\u6bce\u306b\u7ba1\u7406\u51fa\u6765\u308b\u306e\u3067\u958b\u767a\u52b9\u7387\u3082\u826f\u304b\u3063\u305f\u3067\u3059.\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u9077\u79fb\u304c\u30e9\u30f3\u30c0\u30e0\u3082\u3057\u304f\u306f\u9806\u756a\u306e\u307f\u3067\u3059\u304c\u30ad\u30fc\u30dc\u30fc\u30c9\u306b\u5272\u308a\u5f53\u3066\u305f\u308a\u51fa\u6765\u308b\u306e\u3067\u8272\u3005\u51fa\u6765\u307e\u3059.\n\u3053\u308c\u304b\u3089openFrameworks\u3067\u6620\u50cf\u4f5c\u54c1\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\u3068\u3044\u3046\u65b9\u306f\u3088\u3051\u308c\u3070\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044.\n\u3054\u610f\u898b\u7b49\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059.\n\n\n       \n2015.10.26\n", "tags": ["openFrameworks", "C++"]}