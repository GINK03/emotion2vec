{"context": " More than 1 year has passed since last update.\u307b\u3069\u3088\u3044\u30b5\u30f3\u30d7\u30eb\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u4f5c\u3063\u305f\u3002\n\nExpress4 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nWebStorm 10 \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u300cNode.js Express App\u300d\u3092\u9078\u3093\u3067\u81ea\u52d5\u7684\u306b\u4f5c\u6210\u3002\nTemplate \u306f Jade\u3002\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3053\u3093\u306a\u611f\u3058\n\npackage.json\n{\n  \"name\": \"NodeExpPassportOAuth2_SocketIO\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node ./bin/www\"\n  },\n  \"dependencies\": {\n    \"body-parser\": \"~1.12.4\",\n    \"cookie-parser\": \"~1.3.5\",\n    \"debug\": \"~2.2.0\",\n    \"express\": \"~4.12.4\",\n    \"jade\": \"~1.9.2\",\n    \"morgan\": \"~1.5.3\",\n    \"serve-favicon\": \"~2.2.1\",\n    \"passport\": \"^0.2.2\",\n    \"express-session\": \"^1.11.2\",\n    \"mongoose\": \"^4.0.4\",\n    \"passport-google-oauth\": \"^0.2.0\",\n    \"socket.io\": \"^1.3.5\",\n    \"cookie\": \"^0.1.3\",\n    \"passport.socketio\": \"^3.5.1\",\n    \"connect-mongo\": \"^0.8.1\"\n  },\n  \"main\": \"app.js\",\n  \"devDependencies\": {},\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n\n\n\u3053\u306e\u3088\u3046\u306a\u3002\n\nMongoDB \u3092\u6e96\u5099\u3059\u308b\n\u3044\u308d\u3044\u308d\u4fdd\u5b58\u3057\u3066\u304a\u304d\u305f\u3044\u306e\u3067 MongoDB \u3092\u4f7f\u3046\u3002\n\u30c7\u30fc\u30bf\u306e\u30e2\u30c7\u30eb\u306f models/user.js \u306b\u4f5c\u308b\n\nmodeles/user.js\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\n\nvar User = new Schema({\n    // User ID (google account id)\n    uid: {\n        type: String,\n        unique: true\n    },\n    // display name\n    displayName: {\n        type: String\n    },\n    // E-mail\n    email: {\n        type: String\n    },\n    // icon\n    icon: {\n        type: String\n    }\n}, {\n    // define this collection's name explicitly\n    collection: \"users\"\n});\n\nmodule.exports = mongoose.model('User', User);\n\n\n\n\napp.js\n\nvar User = require('./models/user.js');\nmongoose.connect('mongodb://localhost/passport-google-oauth-example');\nvar mongoose = require('mongoose');\n\n\n\n\nPassport \u3067 Google \u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u9023\u643a\u3059\u308b\npassport \u3068 passport-google-oauth \u3092\u4f7f\u3046\u3002\n\napp.js\n\nvar passport = require('passport');\nvar GoogleStrategy = require('passport-google-oauth').OAuth2Strategy;\n\n// session serializer\npassport.serializeUser(function(req, uid, done) {\n  done(null, uid);\n});\n\n// session deserializer\npassport.deserializeUser(function(req, uid, done) {\n  // MongoDB \u304b\u3089\u30e6\u30fc\u30b6\u30fc\u3092\u53d6\u3063\u3066\u304f\u308b\n  User.findOne({\n    uid: uid\n  }, function(err, user) {\n    done(null, user);\n  });\n});\n\n// Google \u30a2\u30ab\u30a6\u30f3\u30c8\u3067 OAuth2 \u63a5\u7d9a\npassport.use(new GoogleStrategy({\n      clientID: GOOGLE_CLIENT_ID, //\u3054\u81ea\u5206\u306e\u3084\u3064\u3092\u3069\u3046\u305e\n      clientSecret: GOOGLE_CLIENT_SECRET, //\u3054\u81ea\u5206\u306e\u3084\u3064\u3092\u3069\u3046\u305e\n      callbackURL: CALLBACK_URL //\u3054\u81ea\u5206\u306e\u3084\u3064\u3092\u3069\u3046\u305e\n    }, \n    function(accessToken, refreshToken, profile, done) {\n      proce ss.nextTick(function() {\n        //\u8a8d\u8a3c\u60c5\u5831\u3092 DB \u306b\u4fdd\u5b58\n        var uid = profile.id;\n        var displayName = profile.displayName;\n        var email = profile.emails[0].value;\n        var icon = profile.photos[0].value;\n\n        User.findOneAndUpdate({\n          uid: uid\n        }, {\n          $set: {\n            uid: uid,\n            displayName: displayName,\n            email: email,\n            icon:icon\n          }\n        }, {\n          upsert: true\n        }, function(err, user) {\n          return done(null, uid);\n        });\n      }\n    );\n\n}));\n\n\n\n\nSessionStore \u306b MongoDB \u3092\u4f7f\u3046\nconnect-mongo \u304c\u826f\u3044\u3089\u3057\u3044\u3002\n\napp.js\nvar MongoStore = require('connect-mongo')(session); //Express \u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u5f15\u6570\u306b\u6e21\u3059\nvar sessionStore = new MongoStore({ mongooseConnection: mongoose.connection }); \n\n//Express \u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\napp.use(session({\n    key: 'express.sid', //socket.io \u304b\u3089\u53c2\u7167\u3059\u308b\u969b\u306b\u30ad\u30fc\u3068\u3057\u3066\u4f7f\u3063\u3066\u308b\u3063\u307d\u3044\n    secret: \"session_secret\",\n    saveUninitialized: true,\n    store: sessionStore, //passport-socketio \u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30c8\u30a2\u306b\u4f7f\u3048\u308b\u3084\u3064\u3058\u3083\u306a\u3044\u3068\u30a8\u30e9\u30fc\u51fa\u308b \n    resave: false\n}));\napp.use(passport.initialize());\napp.use(passport.session());\n\n\n\n\nrouter \u307e\u308f\u308a\u3092\u8a2d\u5b9a\u3059\u308b\n\nroutes/index.js\n\n// Google \u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306e\u30ea\u30f3\u30af\nrouter.get('/auth/google', passport.authenticate('google', {\n      scope: ['https://www.googleapis.com/auth/plus.login', \"email\", \"profile\"]\n    }),\n    function(req, res) {} // this never gets called\n);\n\n// Google OAuth \u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u8a2d\u5b9a\nrouter.get('/oauth2callback', passport.authenticate('google', {\n  successRedirect: '/',\n  failureRedirect: '/login'\n}));\n\n\n/* logout */\nrouter.get('/logout', function(req, res) {\n  req.logout();\n  res.redirect('/');\n});\n\n\n\n\n\u3042\u3068\u306f Socket IO \u304b\u3089\u8af8\u3005\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3060\uff01\n\nvar io = require('socket.io')(server);\nvar passportSocketIo = require(\"passport.socketio\");\n\n//Passport \u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092 SocketIO \u304b\u3089\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\nio.use(passportSocketIo.authorize({\n    passport : passport,\n    cookieParser: require('cookie-parser'),\n    key:          'express.sid',\n    secret:       'session_secret',\n    store:        sessionStore, //\u3055\u3063\u304d\u306e sessionStore \u6e21\u3059\n    success:      onAuthorizeSuccess,\n    fail:         onAuthorizeFail\n}));\n\n\n// \u30bb\u30c3\u30b7\u30e7\u30f3\u306eAuthorize \u6210\u529f\n\nfunction onAuthorizeSuccess(data, accept){\n    console.log('successful connection to socket.io');\n    accept(null, true);\n\n}\n\n//\u30bb\u30c3\u30b7\u30e7\u30f3\u306eAuthorize\u3057\u3063\u3071\u3044\u3057\u3063\u3071\u3044\nfunction onAuthorizeFail(data, message, error, accept){\n    if(error) {\n        throw new Error(message);\n    }\n    console.log('failed connection to socket.io:', message);\n    accept(null, false);\n}\n\n//\u63a5\u7d9a\u304c\u3042\u3063\u305f\u3089\nio.on('connection', function(socket) {\n    console.log('socket-io connect');\n\n    var user = socket.request.user; //\u3053\u308c\u3067\u30e6\u30fc\u30b6\u30fc\u3092\u53c2\u7167\u3067\u304d\u308b\n    if(user){\n        console.log(\"session data : \", user);\n    }\n});\n\n\n\nHTML\u5074\u304b\u3089\nGoogle \u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u3042\u3068\u306b\u3001\u666e\u901a\u306b SocketIO \u306b connect \u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nvar socket = io.connect();\n\n\n\n\u3084\u3084\u3053\u3057\u3044\u3068\u3053\u308d\n\nExpress 3 \u3068 4 \u3067 Passport \u307e\u308f\u308a\u306e\u6319\u52d5\u304c\u3044\u3061\u3044\u3061\u9055\u3046\u3002\nGoogle \u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u8a8d\u8a3c\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u305f\u304f\u3055\u3093\u3042\u3063\u3066\u56f0\u308b\u3002 \u3057\u304b\u3082\u5148\u65e5\u3001 OAuth2\u3057\u304b\u3064\u306a\u304c\u3089\u306a\u304f\u306a\u3063\u305f\u306e\u3067\u4f7f\u3044\u7269\u306b\u306a\u3089\u306a\u3044\u3082\u306e\u3082\u591a\u3044\u3002 npm \u306e\u30b5\u30a4\u30c8\u3067 DL \u6570\u306e\u591a\u3044\u3084\u3064\u3092\u9078\u3076\u3068\u3088\u3044\u304b\u3082\u3002\n\u540c\u69d8\u306b\u3001Socket IO \u3068 Passport \u3092\u7e4b\u3050\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u305f\u304f\u3055\u3093\u3042\u3063\u3066\u56f0\u308b\u3002\nPassport \u306e sessionStore \u3067\u306f\u52d5\u304f\u3051\u3069 Socket.IO \u306e sessionStore \u306b\u6307\u5b9a\u3067\u304d\u306a\u3044\u3084\u3064\u304c\u7d50\u69cb\u3042\u308b\u3002\n\u3053\u306e\u3078\u3093 https://github.com/senchalabs/connect/wiki#session-stores \u3092\u898b\u308b\u3068\u3044\u3044\u3089\u3057\u3044\u3002\n\n\n\u307b\u3069\u3088\u3044\u30b5\u30f3\u30d7\u30eb\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u4f5c\u3063\u305f\u3002\n\n## Express4 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nWebStorm 10 \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u300cNode.js Express App\u300d\u3092\u9078\u3093\u3067\u81ea\u52d5\u7684\u306b\u4f5c\u6210\u3002\nTemplate \u306f Jade\u3002\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3053\u3093\u306a\u611f\u3058\n\n```Javascript:package.json\n{\n  \"name\": \"NodeExpPassportOAuth2_SocketIO\",\n  \"version\": \"0.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node ./bin/www\"\n  },\n  \"dependencies\": {\n    \"body-parser\": \"~1.12.4\",\n    \"cookie-parser\": \"~1.3.5\",\n    \"debug\": \"~2.2.0\",\n    \"express\": \"~4.12.4\",\n    \"jade\": \"~1.9.2\",\n    \"morgan\": \"~1.5.3\",\n    \"serve-favicon\": \"~2.2.1\",\n    \"passport\": \"^0.2.2\",\n    \"express-session\": \"^1.11.2\",\n    \"mongoose\": \"^4.0.4\",\n    \"passport-google-oauth\": \"^0.2.0\",\n    \"socket.io\": \"^1.3.5\",\n    \"cookie\": \"^0.1.3\",\n    \"passport.socketio\": \"^3.5.1\",\n    \"connect-mongo\": \"^0.8.1\"\n  },\n  \"main\": \"app.js\",\n  \"devDependencies\": {},\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n```\n\n\u3053\u306e\u3088\u3046\u306a\u3002\n\n\n\n## MongoDB \u3092\u6e96\u5099\u3059\u308b\n\n\u3044\u308d\u3044\u308d\u4fdd\u5b58\u3057\u3066\u304a\u304d\u305f\u3044\u306e\u3067 MongoDB \u3092\u4f7f\u3046\u3002\n\u30c7\u30fc\u30bf\u306e\u30e2\u30c7\u30eb\u306f models/user.js \u306b\u4f5c\u308b\n\n```Javascript:modeles/user.js\nvar mongoose = require('mongoose');\nvar Schema = mongoose.Schema;\n\nvar User = new Schema({\n    // User ID (google account id)\n    uid: {\n        type: String,\n        unique: true\n    },\n    // display name\n    displayName: {\n        type: String\n    },\n    // E-mail\n    email: {\n        type: String\n    },\n    // icon\n    icon: {\n        type: String\n    }\n}, {\n    // define this collection's name explicitly\n    collection: \"users\"\n});\n\nmodule.exports = mongoose.model('User', User);\n\n```\n\n```Javascript:app.js\n\nvar User = require('./models/user.js');\nmongoose.connect('mongodb://localhost/passport-google-oauth-example');\nvar mongoose = require('mongoose');\n\n```\n\n\n## Passport \u3067 Google \u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u9023\u643a\u3059\u308b\n\npassport \u3068 passport-google-oauth \u3092\u4f7f\u3046\u3002\n\n```Javascript:app.js\n\nvar passport = require('passport');\nvar GoogleStrategy = require('passport-google-oauth').OAuth2Strategy;\n\n// session serializer\npassport.serializeUser(function(req, uid, done) {\n  done(null, uid);\n});\n\n// session deserializer\npassport.deserializeUser(function(req, uid, done) {\n  // MongoDB \u304b\u3089\u30e6\u30fc\u30b6\u30fc\u3092\u53d6\u3063\u3066\u304f\u308b\n  User.findOne({\n    uid: uid\n  }, function(err, user) {\n    done(null, user);\n  });\n});\n\n// Google \u30a2\u30ab\u30a6\u30f3\u30c8\u3067 OAuth2 \u63a5\u7d9a\npassport.use(new GoogleStrategy({\n\t  clientID: GOOGLE_CLIENT_ID, //\u3054\u81ea\u5206\u306e\u3084\u3064\u3092\u3069\u3046\u305e\n\t  clientSecret: GOOGLE_CLIENT_SECRET, //\u3054\u81ea\u5206\u306e\u3084\u3064\u3092\u3069\u3046\u305e\n\t  callbackURL: CALLBACK_URL //\u3054\u81ea\u5206\u306e\u3084\u3064\u3092\u3069\u3046\u305e\n\t}, \n\tfunction(accessToken, refreshToken, profile, done) {\n\t  proce\tss.nextTick(function() {\n\t\t//\u8a8d\u8a3c\u60c5\u5831\u3092 DB \u306b\u4fdd\u5b58\n\t    var uid = profile.id;\n\t    var displayName = profile.displayName;\n\t    var email = profile.emails[0].value;\n\t    var icon = profile.photos[0].value;\n\n\t    User.findOneAndUpdate({\n\t      uid: uid\n\t    }, {\n\t      $set: {\n\t        uid: uid,\n\t        displayName: displayName,\n\t        email: email,\n\t        icon:icon\n\t      }\n\t    }, {\n\t      upsert: true\n\t    }, function(err, user) {\n\t      return done(null, uid);\n\t    });\n\t  }\n\t);\n\n}));\n\n```\n\n## SessionStore \u306b MongoDB \u3092\u4f7f\u3046\n\nconnect-mongo \u304c\u826f\u3044\u3089\u3057\u3044\u3002\n\n```Javascript:app.js\nvar MongoStore = require('connect-mongo')(session); //Express \u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u5f15\u6570\u306b\u6e21\u3059\nvar sessionStore = new MongoStore({ mongooseConnection: mongoose.connection }); \n\n//Express \u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\napp.use(session({\n    key: 'express.sid', //socket.io \u304b\u3089\u53c2\u7167\u3059\u308b\u969b\u306b\u30ad\u30fc\u3068\u3057\u3066\u4f7f\u3063\u3066\u308b\u3063\u307d\u3044\n    secret: \"session_secret\",\n    saveUninitialized: true,\n    store: sessionStore, //passport-socketio \u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u30b9\u30c8\u30a2\u306b\u4f7f\u3048\u308b\u3084\u3064\u3058\u3083\u306a\u3044\u3068\u30a8\u30e9\u30fc\u51fa\u308b \n    resave: false\n}));\napp.use(passport.initialize());\napp.use(passport.session());\n\n```\n\n## router \u307e\u308f\u308a\u3092\u8a2d\u5b9a\u3059\u308b\n\n```Javascript:routes/index.js\n\n// Google \u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u306e\u30ea\u30f3\u30af\nrouter.get('/auth/google', passport.authenticate('google', {\n      scope: ['https://www.googleapis.com/auth/plus.login', \"email\", \"profile\"]\n    }),\n    function(req, res) {} // this never gets called\n);\n\n// Google OAuth \u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u8a2d\u5b9a\nrouter.get('/oauth2callback', passport.authenticate('google', {\n  successRedirect: '/',\n  failureRedirect: '/login'\n}));\n\n\n/* logout */\nrouter.get('/logout', function(req, res) {\n  req.logout();\n  res.redirect('/');\n});\n\n```\n\n## \u3042\u3068\u306f Socket IO \u304b\u3089\u8af8\u3005\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3060\uff01\n\n```Javascript\n\nvar io = require('socket.io')(server);\nvar passportSocketIo = require(\"passport.socketio\");\n\n//Passport \u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092 SocketIO \u304b\u3089\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\nio.use(passportSocketIo.authorize({\n    passport : passport,\n    cookieParser: require('cookie-parser'),\n    key:          'express.sid',\n    secret:       'session_secret',\n    store:        sessionStore, //\u3055\u3063\u304d\u306e sessionStore \u6e21\u3059\n    success:      onAuthorizeSuccess,\n    fail:         onAuthorizeFail\n}));\n\n\n// \u30bb\u30c3\u30b7\u30e7\u30f3\u306eAuthorize \u6210\u529f\n\nfunction onAuthorizeSuccess(data, accept){\n    console.log('successful connection to socket.io');\n    accept(null, true);\n\n}\n\n//\u30bb\u30c3\u30b7\u30e7\u30f3\u306eAuthorize\u3057\u3063\u3071\u3044\u3057\u3063\u3071\u3044\nfunction onAuthorizeFail(data, message, error, accept){\n    if(error) {\n        throw new Error(message);\n    }\n    console.log('failed connection to socket.io:', message);\n    accept(null, false);\n}\n\n//\u63a5\u7d9a\u304c\u3042\u3063\u305f\u3089\nio.on('connection', function(socket) {\n    console.log('socket-io connect');\n\n    var user = socket.request.user; //\u3053\u308c\u3067\u30e6\u30fc\u30b6\u30fc\u3092\u53c2\u7167\u3067\u304d\u308b\n    if(user){\n        console.log(\"session data : \", user);\n    }\n});\n\n```\n\n## HTML\u5074\u304b\u3089\n\nGoogle \u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u3042\u3068\u306b\u3001\u666e\u901a\u306b SocketIO \u306b connect \u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```Javascript\n\nvar socket = io.connect();\n\n```\n\n\n\n## \u3084\u3084\u3053\u3057\u3044\u3068\u3053\u308d\n\n* Express 3 \u3068 4 \u3067 Passport \u307e\u308f\u308a\u306e\u6319\u52d5\u304c\u3044\u3061\u3044\u3061\u9055\u3046\u3002\n* Google \u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u8a8d\u8a3c\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u305f\u304f\u3055\u3093\u3042\u3063\u3066\u56f0\u308b\u3002 \u3057\u304b\u3082\u5148\u65e5\u3001 OAuth2\u3057\u304b\u3064\u306a\u304c\u3089\u306a\u304f\u306a\u3063\u305f\u306e\u3067\u4f7f\u3044\u7269\u306b\u306a\u3089\u306a\u3044\u3082\u306e\u3082\u591a\u3044\u3002 npm \u306e\u30b5\u30a4\u30c8\u3067 DL \u6570\u306e\u591a\u3044\u3084\u3064\u3092\u9078\u3076\u3068\u3088\u3044\u304b\u3082\u3002\n* \u540c\u69d8\u306b\u3001Socket IO \u3068 Passport \u3092\u7e4b\u3050\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u305f\u304f\u3055\u3093\u3042\u3063\u3066\u56f0\u308b\u3002\n* Passport \u306e sessionStore \u3067\u306f\u52d5\u304f\u3051\u3069 Socket.IO \u306e sessionStore \u306b\u6307\u5b9a\u3067\u304d\u306a\u3044\u3084\u3064\u304c\u7d50\u69cb\u3042\u308b\u3002\n\u3053\u306e\u3078\u3093 https://github.com/senchalabs/connect/wiki#session-stores \u3092\u898b\u308b\u3068\u3044\u3044\u3089\u3057\u3044\u3002\n\n\n\n\n\n", "tags": ["Socket.io", "Node.js", "express4", "Passport"]}