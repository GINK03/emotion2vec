{"tags": ["Java", "glassfish", "JavaEE", "JTA"], "context": " More than 1 year has passed since last update.\u74b0\u5883\u69cb\u7bc9\n\u30b3\u30fc\u30c9\n\n\u74b0\u5883\n\nOS\nWindows 7\n\nAP \u30b5\u30fc\u30d0\u30fc\nGlassFish 4.1 Open Source Edition (\u4e00\u90e8 Wildfly 9.0.1 \u4f7f\u7528)\n\nJava\n1.8.0_60\n\nDB \u30b5\u30fc\u30d0\u30fc\nMySQL 5.5.28, for Win64 (x86)\n\nJTA \u3068\u306f\nJava Transaction API \u306e\u7565\u3002\nJava \u3067 \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3 \u3092\u6271\u3046\u305f\u3081\u306e\u5404\u7a2e API \u3092\u5b9a\u7fa9\u3057\u305f\u4ed5\u69d8\u3002\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u3068\u306f\u3001\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u7ba1\u7406\u3092\u884c\u3046\u30b5\u30fc\u30d3\u30b9\uff08\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\uff09\u3067\u3001 Java EE \u30b5\u30fc\u30d0\u30fc\u3060\u3068 EJB \u30b3\u30f3\u30c6\u30ca\u304c\u305d\u306e\u5f79\u5272\u3092\u62c5\u3063\u3066\u3044\u308b\u3002\n\nDTP\nDistributed Transaction Processing \u306e\u7565\uff08\u76f4\u8a33\u3059\u308b\u306a\u3089\u3001\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u51e6\u7406\uff1f\uff09\u3002\nX/Open \u3068\u3044\u3046\u7d44\u7e54\u304c\u7b56\u5b9a\u3057\u305f\u3001\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u306e\u6a19\u6e96\u898f\u683c\u3002JTA \u304c\u6271\u3046\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3082\u3001\u3053\u306e DTP \u306b\u6e96\u62e0\u3057\u3066\u3044\u308b\u3002\nX/Open \u306f UNIX \u306b\u95a2\u3059\u308b\u6280\u8853\u306e\u6a19\u6e96\u5316\u3092\u884c\u3046\u56e3\u4f53\u3060\u3063\u305f\u304c\u3001 1996 \u5e74\u306b Open Software Foundation \u3068\u5408\u4f75\u3057\u3066\u3001\u73fe\u5728\u306f The Open Group \u3068\u3044\u3046\u7d44\u7e54\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\nDTP \u3067\u767b\u5834\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\nDTP \u3067\u306f\u3001\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u767b\u5834\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3082\u306e\u3092\u6319\u3052\u3066\u3044\u308b\u3002\n\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u6a5f\u80fd\u3092\u5099\u3048\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u7ba1\u7406\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3002\n\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u88fd\u54c1\u3084\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u6307\u5411\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306a\u3069\u304c\u3053\u308c\u306b\u3042\u305f\u308b\u3002\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\n\u8907\u6570\u306e\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u3092\u7ba1\u7406\u3057\u3001\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5236\u5fa1\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3002\n\n\uff12\u30d5\u30a7\u30fc\u30ba\u30b3\u30df\u30c3\u30c8\n\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u5177\u4f53\u7684\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u3002\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30b3\u30df\u30c3\u30c8\u3092\uff12\u56de\u306e\u30d5\u30a7\u30fc\u30ba\u306b\u5206\u3051\u3066\u884c\u3046\u3002\n\u7b2c\uff11\u30d5\u30a7\u30fc\u30ba\u3067\u306f\u3001\u5404\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u306b\u73fe\u5728\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u53ef\u80fd\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\u5168\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u30b3\u30df\u30c3\u30c8\u53ef\u80fd\u3067\u3042\u308b\u3068\u8fd4\u4e8b\u3092\u3057\u305f\u3089\u3001\u7b2c\uff12\u30d5\u30a7\u30fc\u30ba\u3068\u3057\u3066\u5404\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u306b\u30b3\u30df\u30c3\u30c8\u306e\u6307\u793a\u304c\u98db\u3076\u3002\n\u3069\u308c\u304b\uff11\u3064\u3067\u3082\u30b3\u30df\u30c3\u30c8\u4e0d\u53ef\u306e\u8fd4\u4e8b\u3092\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u5b58\u5728\u3057\u305f\u5834\u5408\u306f\u3001\u5168\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u306b\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u6307\u793a\u304c\u98db\u3076\u3002\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u306e\u539f\u5b50\u6027\u306e\u62c5\u4fdd\u304c\u5b9f\u73fe\u3055\u308c\u3066\u3044\u308b\u3002\n\u3088\u308a\u7d30\u304b\u3044\u8a71\u306f \u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u6311\u6226\u3057\u3088\u3046\uff01 \u3092\u53c2\u7167\u306e\u3053\u3068\u3002\nDTP \u3067\u306f\u3001\u3053\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u5177\u4f53\u7684\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\nDTP \u3067\u306f\u3001\u5927\u304d\u304f\u4ee5\u4e0b\u306e\uff12\u3064\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\nTX \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u516c\u958b\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\nXA \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\n\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u306b\u5bfe\u3057\u3066\u516c\u958b\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\nJTA \u304c\u5b9a\u7fa9\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\nJTA \u3067\u306f\u3001\u4ee5\u4e0b\u306e\uff13\u3064\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\n\njavax.transaction.TransactionManager\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u3001 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30b5\u30fc\u30d0\u30fc \u306b\u5bfe\u3057\u3066\u516c\u958b\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\nEJB \u304c\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u7ba1\u7406\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\uff08CMT\uff09\u306f\u3001\u3053\u306e TransactionManager \u3092\u4f7f\u3063\u3066\u5b9f\u73fe\u3055\u308c\u3066\u3044\u308b\u3002\n\njavax.transaction.UserTransaction\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u3001 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u306b\u5bfe\u3057\u3066\u516c\u958b\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u958b\u59cb\u30fb\u7d42\u4e86\u3092\u30b3\u30f3\u30c6\u30ca\u306b\u4efb\u305b\u306a\u3044\u3068\u304d\uff08BMT\uff09\u306f\u3001\u3053\u306e UserTransaction \u3092 EJB \u306a\u3069\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3057\u3066\u660e\u793a\u7684\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\njavax.transaction.xa.XAResource\n\n\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u306b\u5bfe\u3057\u3066\u516c\u958b\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u306f\u3001\u3053\u306e XAResource \u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u3066\u3001 DTP \u3067\u5b9a\u7fa9\u3055\u308c\u305f\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3002\nXAResource \u306e\u5b9f\u88c5\u306f\u3001\u5404\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u7528\u610f\u3059\u308b\u3002\n\u4f8b\u3048\u3070\u3001 MySQL \u306e\u5834\u5408\u306f JDBC \u30c9\u30e9\u30a4\u30d0\u306e\u4e2d\u306b XAResource \u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u304c\u542b\u307e\u308c\u3066\u3044\u308b\uff08com.mysql.jdbc.jdbc2.optional.MysqlXAConnection\uff09\u3002\n\u4e0b\u56f3\u306f\u3001JTA \u306e\u4ed5\u69d8\u66f8\u306b\u63cf\u304b\u308c\u3066\u3044\u308b\u56f3\u3067\u3001\u5404\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u95a2\u9023\u3092\u628a\u63e1\u3059\u308b\u306e\u306b\u4e01\u5ea6\u3044\u3044\u56f3\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\n\u30b0\u30ed\u30fc\u30d0\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3068\u30ed\u30fc\u30ab\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\nJTA \u306e\u8a2d\u5b9a\u306e\u3068\u304d\u306a\u3069\u306b\u76ee\u306b\u3059\u308b\u3001\u3053\u308c\u3089\u306e\u8a00\u8449\u306b\u3064\u3044\u3066\u3002\n\n\u30b0\u30ed\u30fc\u30d0\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\n\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u3053\u3068\u3002\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5bfe\u8c61\u3068\u306a\u308b\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u3068\u304d\u306b\u5229\u7528\u3059\u308b\u3002\n\n\u30ed\u30fc\u30ab\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\n\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u63d0\u4f9b\u3059\u308b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e API \u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3059\u308b\u3053\u3068\u3002\nJDBC \u306a\u3089\u3001 java.sql.Connection \u306e commit() \u30e1\u30bd\u30c3\u30c9\u3068\u304b\u3092\u76f4\u63a5\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5bfe\u8c61\u3068\u306a\u308b\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\uff11\u3064\u3057\u304b\u5b58\u5728\u3057\u306a\u3044\u3068\u304d\u306b\u5229\u7528\u3059\u308b\u3002\n\nGlassFish \u3067\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\nJTA \u3092\u4f7f\u3046\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u3059\u306a\u308f\u3061\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u300c\u660e\u793a\u7684\u306b\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u300d\u3068\u3044\u3063\u305f\u8a2d\u5b9a\u306f\u5fc5\u8981\u306a\u3044\u3002\n\u5f37\u3044\u3066\u8a00\u3046\u306a\u3089\u3001\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306e\u767b\u9332\u3067 XA \u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3001\u3068\u3044\u3046\u70b9\u304f\u3089\u3044\u3002\nMySQL \u3092\u4f7f\u3063\u3066 XA \u306b\u5bfe\u5fdc\u3057\u305f\uff12\u3064\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u767b\u9332\u3059\u308b\u3002\nJDBC \u30c9\u30e9\u30a4\u30d0\u306f\u3042\u3089\u304b\u3058\u3081\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3053\u3068\u3002\n\n\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306e\u767b\u9332\n\n\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30eb\u306e\u767b\u9332\n\n\u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u958b\u304d\u3001 [Resources] > [JDBC] > [JDBC Connection Pools] \u3092\u9078\u629e\u3059\u308b\u3002\n[New...] \u3092\u30af\u30ea\u30c3\u30af\u3002\n\u4ee5\u4e0b\u5165\u529b\u3002\n\n\n[Pool Name] \u306b\u9069\u5f53\u306a\u540d\u524d\u3092\u5165\u308c\u308b\u3002\n[Resource Type] \u3067 javax.sql.XADataSource \u3092\u9078\u629e\u3002\n[Database Driver Vendor] \u3067 MySql \u3092\u9078\u629e\u3002\n\n\n\n\n\n[Next] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u6b21\u306e\u30da\u30fc\u30b8\u3067\u4ee5\u4e0b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8a2d\u5b9a\u3002\n\n\n\nUsername, Password, ServerName, DatabaseName\n\n\n\n\u540c\u3058\u8981\u9818\u3067\u3001\u540d\u524d\u9055\u3044\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u3082\u3046\uff11\u3064\u767b\u9332\u3059\u308b\u3002\n\n\nJDBC \u30ea\u30bd\u30fc\u30b9\u306e\u767b\u9332\n\n\u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u3001 [Resources] > [JDBC] > [JDBC Resources] \u3092\u9078\u629e\u3059\u308b\u3002\n[New...] \u3092\u30af\u30ea\u30c3\u30af\u3002\n\u4ee5\u4e0b\u5165\u529b\u3002\n\n\n[JNDI Name] \u306b\u9069\u5f53\u306a\u540d\u524d\u3092\u5165\u308c\u308b\u3002\n[Pool Name] \u3067\u3001\u5148\u307b\u3069\u767b\u9332\u3057\u305f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30eb\u3092\u9078\u629e\u3002\n\n\n\n\n\n[OK] \u3092\u30af\u30ea\u30c3\u30af\u3002\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n\u3053\u3093\u306a\u30c6\u30fc\u30d6\u30eb\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3002\n\n\u5b9f\u88c5\uff0b\u52d5\u4f5c\u78ba\u8a8d\n\nHelloEjb.java\npackage sample.jta.ejb;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.sql.DataSource;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\npublic class HelloEjb {\n\n    @Resource(lookup = \"jdbc/mysql_global_1\") // \u2605\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u6ce8\u5165\n    private DataSource ds1;\n\n    @Resource(lookup = \"jdbc/mysql_global_2\") // \u2605\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u6ce8\u5165\n    private DataSource ds2;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    public void execute() {\n        this.insert(this.ds1, \"hoge\");\n        this.insert(this.ds2, \"fuga\");\n\n        System.out.println(\"txKey = \" + tx.getTransactionKey());\n    }\n\n    private void insert(DataSource ds, String value) {\n        // \u2605 TEST_TABLE \u306b\u30ec\u30b3\u30fc\u30c9\u3092 INSERT\n        try (Connection con = ds.getConnection();\n            PreparedStatement ps = con.prepareStatement(\"INSERT INTO TEST_TABLE (VALUE) VALUES (?)\");\n            ) {\n\n            ps.setString(1, value);\n            ps.executeUpdate();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n\nHelloEjb#execute() \u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u5916\u90e8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   txKey = JavaEETransactionImpl: txId=21 nonXAResource=null jtsTx=com.sun.jts.jta.TransactionImpl@c3161dfc ...]\n\n\n\u5b9f\u884c\u5f8c\u306e\u30c6\u30fc\u30d6\u30eb\n\n\u8907\u6570\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u3001\uff11\u3064\u306e EJB \uff08\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\uff09\u306e\u4e2d\u3067\u5229\u7528\u3067\u304d\u3066\u3044\u308b\u3002\n\n\u975e XA \u306a\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u767b\u9332\u3059\u308b\u3068\u3069\u3046\u306a\u308b\uff1f\nGlassFish \u306b\u9650\u3089\u305a\u3001 AP \u30b5\u30fc\u30d0\u30fc\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306b\u306f\u3001 XA \u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3082\u767b\u9332\u3067\u304d\u308b\u3002\nJTA \u306f\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e API \u306a\u306e\u3067\u3001 XA \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306f\u5229\u7528\u3067\u304d\u306a\u3055\u305d\u3046\u3060\u304c\u3001\u5b9f\u969b\u306f\u767b\u9332\u3067\u304d\u308b\u3057\u3001\u305d\u306e\u307e\u307e JTA \u7d4c\u7531\u3067\u5229\u7528\u3082\u3067\u304d\u3066\u3057\u307e\u3046\u3002\n\u4f55\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u306e\u304b\u8abf\u3079\u3066\u307f\u308b\u3002\n\n\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u767b\u9332\u3059\u308b\n\u5148\u307b\u3069\u3068\u540c\u3058\u8981\u9818\u3067\u3001\u975e XA \u306a\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u767b\u9332\u3059\u308b\u3002\n\n\n\u5b9f\u88c5\n\nNonXADataSourceEjb.java\npackage sample.jta.ejb;\n\nimport java.lang.reflect.Field;\nimport java.lang.reflect.Method;\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.sql.DataSource;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\npublic class NonXADataSourceEjb {\n\n    @Resource(lookup = \"jdbc/mysql_local_1\")\n    private DataSource ds;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    public void execute() throws Exception {\n        try (Connection con = ds.getConnection()) { // \u2605 ds \u3092 JTA \u306b\u53c2\u52a0\u3055\u305b\u308b\n            Object key = tx.getTransactionKey();\n            System.out.println(\"txKey = \" + key);\n\n            // \u2605 TransactionKey \u304c\u6301\u3064 nonXAResource \u306e\u5177\u4f53\u7684\u306a\u30af\u30e9\u30b9\u540d\u3092\u78ba\u8a8d\u3059\u308b\n            Object nonXAResource = this.getFieldValue(key, \"nonXAResource\");\n            System.out.println(\"nonXAResource.class = \" + nonXAResource.getClass());\n        }\n    }\n\n    public Object getFieldValue(Object obj, String fieldName) throws Exception {\n        if (obj == null) return null;\n\n        Class<?> clazz = obj.getClass();\n        try {\n            Field field = clazz.getDeclaredField(fieldName);\n            field.setAccessible(true);\n            Object result = field.get(obj);\n            field.setAccessible(false);\n            return result;\n        } catch (NoSuchFieldException e) {\n            return null;\n        }\n    }\n}\n\n\n\u975e XA \u306a\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092 JTA \u7d4c\u7531\u3067\u5229\u7528\u3059\u308b\u3068\u3001 nonXAResource \u3068\u3044\u3046\u3044\u304b\u306b\u3082\u305d\u308c\u3063\u307d\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u305d\u306e\u5024\u3092\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u7121\u7406\u3084\u308a\u53d6\u5f97\u3057\u3066\u3044\u308b\u3002\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   txKey = JavaEETransactionImpl: txId=39 nonXAResource=715 jtsTx=null ...]\n\u60c5\u5831:   nonXAResource.class = class com.sun.enterprise.resource.ResourceHandle\n\n\nnonXAResource \u306e\u5b9f\u4f53\u306f com.sun.enterprise.resource.ResourceHandle \u3068\u3044\u3046\u30af\u30e9\u30b9\u3089\u3057\u3044\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u306a\u308b\u3002\nGC: ResourceHandle - com.sun.enterprise.resource.ResourceHandle (.java) - GrepCode Class Source\n\nResourceHandle.java\npublic class ResourceHandle implements\n        com.sun.appserv.connectors.internal.api.ResourceHandle, TransactionalResource {\n\n    ...\n\n    private XAResource xares;\n\n    ...\n\n\n\u3088\u304f\u898b\u308b\u3068\u3001\u4e2d\u306b XAResource \u304c\u5165\u3063\u3066\u3044\u308b\u3002\n\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5b9f\u4f53\u3092\u8abf\u3079\u3066\u307f\u308b\u3068\u3001 com.sun.enterprise.resource.ConnectorXAResource \u3068\u3044\u3046\u30af\u30e9\u30b9\u3060\u3063\u305f\u3002\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3002\nGC: ConnectorXAResource - com.sun.enterprise.resource.ConnectorXAResource (.java) - GrepCode Class Source\n\u3053\u306e\u30af\u30e9\u30b9\u306e\u3001 commit() \u30e1\u30bd\u30c3\u30c9\u3092\u8997\u3044\u3066\u307f\u308b\u3002\n\nConnectorXAResource.java\n    public void commit(Xid xid, boolean onePhase) throws XAException {\n        try {\n            ResourceHandle handle = getResourceHandle();\n            ManagedConnection mc = (ManagedConnection) handle.getResource();\n            mc.getLocalTransaction().commit(); // \u2605 getLocalTransaction() \u3057\u3066\u308b\uff01\n        } catch (Exception ex) {\n            handleResourceException(ex);\n        }finally{\n            resetAssociation();\n        }\n    }\n\n\nConnectorXAResource \u306f XAResource \u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3082\u306e\u306e\u3001\u5b9f\u306f\u30ed\u30fc\u30ab\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u3044\u308b\u3063\u307d\u3044\u3002\n\u3064\u307e\u308a\u3001\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u304c XA \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u3057\u3066\u3082\u3001\u5185\u90e8\u3067\u30e9\u30c3\u30d7\u3057\u3066 XAResource \u306b\u64ec\u4f3c\u7684\u306b\u5bfe\u5fdc\u3055\u305b\u308b\u3053\u3068\u3067\u3001 JTA \u7d4c\u7531\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3060\u308d\u3046\u3002\n\u4e00\u5fdc Wildfly \u3067\u3082\u540c\u3058\u3088\u3046\u306b\u78ba\u8a8d\u3057\u305f\u304c\u3001\u3084\u306f\u308a\u975e XA \u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306f\u3001\u5185\u90e8\u3067\u30ed\u30fc\u30ab\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u30af\u30e9\u30b9\u306b\u30e9\u30c3\u30d7\u3055\u308c\u3066\u5229\u7528\u3055\u308c\u3066\u3044\u305f\u3002\n\n\u8907\u6570\u306e\u30ed\u30fc\u30ab\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3068\u3069\u3046\u306a\u308b\uff1f\n\nMultiNonXADataSourceEjb.java\npackage sample.jta.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.sql.DataSource;\n\n@Stateless\npublic class MultiNonXADataSourceEjb {\n\n    @Resource(lookup = \"jdbc/mysql_local_1\")\n    private DataSource ds1;\n\n    @Resource(lookup = \"jdbc/mysql_local_2\")\n    private DataSource ds2;\n\n    public void execute() throws Exception {\n        try (Connection c1 = ds1.getConnection();\n             Connection c2 = ds2.getConnection()) {}\n    }\n}\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   ejb = MultiNonXADataSourceEjb, method = execute\n\u91cd\u5927:   RAR5029:Unexpected exception while registering component \njava.lang.IllegalStateException: Local transaction already has 1 non-XA Resource: cannot add more resources.  \n    at com.sun.enterprise.transaction.JavaEETransactionManagerSimplified.enlistResource(JavaEETransactionManagerSimplified.java:345)\n        ...\n\n\u8b66\u544a:   RAR7132: Unable to enlist the resource in transaction. Returned resource to pool. Pool name: [ mysql_local_2 ]\n\u8b66\u544a:   RAR5117 : Failed to obtain/create connection from connection pool [ mysql_local_2 ]. Reason : com.sun.appserv.connectors.internal.api.PoolingException: java.lang.IllegalStateException: Local transaction already has 1 non-XA Resource: cannot add more resources.  \n\u8b66\u544a:   RAR5114 : Error allocating connection : [Error in allocating a connection. Cause: java.lang.IllegalStateException: Local transaction already has 1 non-XA Resource: cannot add more resources.  ]\n\u91cd\u5927:   java.lang.reflect.InvocationTargetException\n       ...\n\n\nds2 \u3092 JTA \u306b\u53c2\u52a0\u3055\u305b\u3088\u3046\u3068\u3057\u305f\u6642\u70b9\u3067\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u3002\nLocal transaction already has 1 non-XA Resource: cannot add more resources. \u3068\u3042\u308b\u306e\u3067\u3001\u975e XA \u306a\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u8907\u6570\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c JTA \u306b\u53c2\u52a0\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\n\u8aac\u660e\u3092\u7701\u3044\u3066\u3044\u305f\u304c\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c JTA \u306e\u7ba1\u7406\u4e0b\u306b\u7f6e\u304b\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306f\u3001\u4e0a\u8a18\u306e\u4f8b\u304b\u3089\u3082\u5206\u304b\u308b\u901a\u308a DataSource#getConnection() \u3092\u5b9f\u884c\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u306a\u308b\u3002\n\u305f\u3060\u3057\u3001 JTA \u306e\u4ed5\u69d8\u7684\u306b\u305d\u3046\u306a\u306e\u304b\u3001 GlassFish \u306e\u5b9f\u88c5\u7684\u306b\u305d\u3046\u306a\u306e\u304b\u306f\u5206\u304b\u3089\u306a\u3044\u3002\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\nJTA1.2 (Java EE 7) \u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u3001 @Transactional \u3068 @TransactionScoped \u304c\u3042\u308b\u3002\n\u3053\u308c\u3089\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001 CDI \u7ba1\u7406\u30d3\u30fc\u30f3\u3067\u30b3\u30f3\u30c6\u30ca\u7ba1\u7406\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n@Transactional\n\n\u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067 CDI \u7ba1\u7406\u30d3\u30fc\u30f3\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3053\u3068\u3067\u3001 EJB \u3068\u540c\u3058\u3088\u3046\u306b\u5ba3\u8a00\u7684\u306a\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\u57fa\u672c\npackage sample.jta.ejb;\n\nimport java.sql.Connection;\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.inject.Inject;\nimport javax.sql.DataSource;\nimport javax.transaction.TransactionSynchronizationRegistry;\nimport sample.jta.cdi.TransactionalBean;\n\n@Stateless\npublic class TransactionalEjb {\n\n    @Resource(lookup = \"jdbc/mysql_local_1\")\n    private DataSource ds;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    @Inject\n    private TransactionalBean bean;\n\n    public void execute() throws Exception {\n        try (Connection con = ds.getConnection()) {\n            System.out.println(\"TransactionalEjb : txKey=\" + tx.getTransactionKey());\n            this.bean.requreisNew();\n            this.bean.required();\n        }\n    }\n}\n\n\nTransactionalBean.java\npackage sample.jta.cdi;\n\nimport java.sql.Connection;\nimport javax.annotation.Resource;\nimport javax.enterprise.context.ApplicationScoped;\nimport javax.sql.DataSource;\nimport javax.transaction.TransactionSynchronizationRegistry;\nimport javax.transaction.Transactional;\n\n@ApplicationScoped\npublic class TransactionalBean {\n\n    @Resource(lookup = \"jdbc/mysql_local_1\")\n    private DataSource ds;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    @Transactional\n    public void required() throws Exception {\n        try (Connection con = ds.getConnection()) {\n            System.out.println(\"required() : txKey=\" + tx.getTransactionKey());\n        }\n    }\n\n    @Transactional(Transactional.TxType.REQUIRES_NEW)\n    public void requreisNew() throws Exception {\n        try (Connection con = ds.getConnection()) {\n            System.out.println(\"requreisNew() : txKey=\" + tx.getTransactionKey());\n        }\n    }\n}\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   TransactionalEjb : txKey=JavaEETransactionImpl: txId=52 nonXAResource=827 jtsTx=null ...]\n\n\u60c5\u5831:   requreisNew() : txKey=JavaEETransactionImpl: txId=53 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[]\n\n\u60c5\u5831:   required() : txKey=JavaEETransactionImpl: txId=52 nonXAResource=827 jtsTx=null ...]\n\n\n\n\n@Transactional \u3067 CDI \u7ba1\u7406\u30d3\u30fc\u30f3\u306e\u30e1\u30bd\u30c3\u30c9\uff08\u30af\u30e9\u30b9\uff09\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3053\u3068\u3067\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u3092\u8a2d\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u3067\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u958b\u59cb\u30fb\u7d42\u4e86\u3092\u3069\u3046\u3059\u308b\u304b\u306e\u5236\u5fa1\u304c\u3067\u304d\u308b\u3002\n\n\n\u5217\u6319\u578b\u306e TxType \u3092\u4f7f\u7528\u3059\u308b\u3002\n\u305d\u308c\u305e\u308c\u306e\u610f\u5473\u306f\u3001 EJB \u306e\u5834\u5408 \u3068\u540c\u3058\u3002\n\n\n\n\n\u4f8b\u5916\u767a\u751f\u6642\u306e\u5236\u5fa1\n\u203b\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u3001\u6700\u521d GlassFish 4.1 \u3068 Payara 4.1.153 \u3067\u52d5\u4f5c\u691c\u8a3c\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u3082\u4ed5\u69d8\u901a\u308a\u306b\u52d5\u3044\u3066\u304f\u308c\u306a\u304b\u3063\u305f\u306e\u3067 Wildfly 9.0.1 \u3067\u52d5\u4f5c\u691c\u8a3c\u3057\u307e\u3057\u305f\u3002\n\u8ffd\u8a18\n\u30b3\u30e1\u30f3\u30c8 \u306b\u3042\u308b\u3068\u304a\u308a\u3001\u30d0\u30b0\u3060\u3063\u305f\u3088\u3046\u3067\u4eca\u5f8c\u4fee\u6b63\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u57fa\u672c\n\nTransactionalExceptionBean.java\npackage sample.jta.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.inject.Inject;\nimport sample.jta.cdi.TransactionalExceptionBean;\n\n@Stateless\npublic class TransactionalExceptionEjb {\n\n    @Inject\n    private TransactionalExceptionBean bean;\n\n    public void execute() {\n        this.executeQuietly(this.bean::insertAndThrowException);\n        this.executeQuietly(this.bean::insertAndThrowRuntimeException);\n    }\n\n    private void executeQuietly(ThrowableRunnable tr) {\n        try {\n            tr.execute();\n        } catch (Exception ex) {\n            System.out.println(\"[\" + ex.getClass().getSimpleName() + \"] \" + ex.getMessage());\n        }\n    }\n\n    @FunctionalInterface\n    private static interface ThrowableRunnable {\n        void execute() throws Exception;\n    }\n}\n\n\n\nTransactionalExceptionBean.java\npackage sample.jta.cdi;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\nimport javax.annotation.Resource;\nimport javax.enterprise.context.ApplicationScoped;\nimport javax.sql.DataSource;\nimport javax.transaction.Transactional;\n\n@ApplicationScoped\n@Transactional(Transactional.TxType.REQUIRES_NEW)\npublic class TransactionalExceptionBean {\n\n    @Resource(lookup = \"java:/jdbc/mysql_test\")\n    private DataSource ds;\n\n    public void insertAndThrowException() throws Exception {\n        this.insert(this.ds, \"insertAndThrowException\");\n        throw new Exception(\"test exception\");\n    }\n\n    public void insertAndThrowRuntimeException() throws Exception {\n        this.insert(this.ds, \"insertAndThrowRuntimeException\");\n        throw new RuntimeException(\"test runtime exception\");\n    }\n\n    private void insert(DataSource ds, String value) throws SQLException {\n        try (Connection con = ds.getConnection();\n            PreparedStatement ps = con.prepareStatement(\"INSERT INTO TEST_TABLE (VALUE) VALUES (?)\");\n            ) {\n\n            ps.setString(1, value);\n            ps.executeUpdate();\n        }\n    }\n}\n\n\n\nWildfly\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n22:14:29,546 INFO  [stdout] (default task-2) [Exception] test exception\n22:14:29,552 INFO  [stdout] (default task-2) [RuntimeException] test runtime exception\n\n\n\u5b9f\u884c\u5f8c\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n\n\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u5834\u5408\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u306a\u3044\u3002\n\u975e\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u5834\u5408\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3002\n\n\u3053\u306e\u8fba\u306e\u6319\u52d5\u306f\u3001 EJB \u306e\u5834\u5408\u3068\u540c\u3058\u3002\n\n\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\uff08\u3057\u306a\u3044\uff09\u4f8b\u5916\u3092\u9650\u5b9a\u3059\u308b\n\nTransactionalExceptionBean.java\npackage sample.jta.cdi;\n\n...\nimport java.util.function.Supplier;\n\n@ApplicationScoped\n@Transactional(Transactional.TxType.REQUIRES_NEW)\npublic class TransactionalExceptionBean {\n\n    @Resource(lookup = \"java:/jdbc/mysql_test\")\n    private DataSource ds;\n\n    ...\n\n    @Transactional(\n        value=Transactional.TxType.REQUIRES_NEW,\n        rollbackOn=IOException.class,\n        dontRollbackOn=NullPointerException.class\n    )\n    public void insertAndThrowAnyException(Supplier<? extends Exception> exceptionProducer) throws Exception {\n        Exception e = exceptionProducer.get();\n        this.insert(this.ds, \"insertAndThrowAnyException(\" + e.getClass().getSimpleName() + \")\");\n        throw e;\n    }\n\n    ...\n}\n\n\n\nTransactionalExceptionEjb.java\npackage sample.jta.ejb;\n\nimport java.io.IOException;\n...\n\n@Stateless\npublic class TransactionalExceptionEjb {\n\n    @Inject\n    private TransactionalExceptionBean bean;\n\n    public void execute() {\n        ...\n\n        // RuntimeException\n        this.executeQuietly(() -> this.bean.insertAndThrowAnyException(NullPointerException::new));\n        this.executeQuietly(() -> this.bean.insertAndThrowAnyException(IllegalStateException::new));\n\n        // Exception\n        this.executeQuietly(() -> this.bean.insertAndThrowAnyException(NoSuchMethodException::new));\n        this.executeQuietly(() -> this.bean.insertAndThrowAnyException(IOException::new));\n    }\n\n    ...\n}\n\n\n\nWildfly\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n22:30:30,120 INFO  [stdout] (default task-4) [NullPointerException] null\n22:30:30,127 INFO  [stdout] (default task-4) [IllegalStateException] null\n22:30:30,132 INFO  [stdout] (default task-4) [NoSuchMethodException] null\n22:30:30,137 INFO  [stdout] (default task-4) [IOException] null\n\n\n\u5b9f\u884c\u5f8c\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\n\n\nrollbackOn \u3067\u3001\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u306e\u4e2d\u3067\u3082\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u4f8b\u5916\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n\n\n\nIOException \u306f\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u306a\u306e\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u305a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\u3055\u308c\u308b\u3002\n\u3057\u304b\u3057\u3001 rollbackOn \u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u3002\n\n\n\ndontRollbackOn \u3067\u3001\u975e\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u306e\u4e2d\u3067\u3082\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u306a\u3044\u4f8b\u5916\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n\n\n\nNullPointerException \u306f\u975e\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u306a\u306e\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u306f\u767b\u9332\u3055\u308c\u306a\u3044\u3002\n\u3057\u304b\u3057\u3001 dontRollbackOn \u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u305a\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u3002\n\n\n\n\nGlassFish \u3067\u306e\u52d5\u4f5c\nGlassFish \u3067\u52d5\u304b\u3059\u3068\u3001 RuntimeException \u3092\u30b9\u30ed\u30fc\u3057\u3066\u3082\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u3066\u304f\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u4ee3\u308f\u308a\u306b\u3001 RollbackException \u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3068\u3044\u3046\u73fe\u8c61\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\u6319\u52d5\u7684\u306b\u306f\u3001 GlassFish4.1\u3092\u306a\u304a\u3057\u3066\u307f\u305f - \u898b\u7fd2\u3044\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u65e5\u8a18 \u3053\u3061\u3089\u306e\u8a18\u4e8b\u306b\u63cf\u304b\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u540c\u3058\u611f\u3058\u3067\u3057\u305f\u3002\nissue \u306f reolved \u3060\u3051\u3069\u3001\u3082\u3057\u304b\u3057\u3066\u4f8b\u5916\u306e\u30bb\u30c3\u30c8\u3060\u3051\u76f4\u3057\u3066\u3001 rollbackonly \u2192 commit \u306e\u5373\u6b7b\u30b3\u30f3\u30dc\u306f\u76f4\u3063\u3066\u306a\u3044\u306e\u304b\u306a\u3041\u3002\u3002\u3002\n\n@TransactionScoped\n\n\nTransactionScopedBean.java\npackage sample.jta.cdi;\n\nimport java.io.Serializable;\nimport javax.transaction.TransactionScoped;\n\n@TransactionScoped\npublic class TransactionScopedBean implements Serializable {\n\n    @Override\n    public String toString() {\n        return \"TransactionScopedBean {hash=\" + this.hashCode() + \"}\";\n    }\n}\n\n\n\nTransactionScopedEjb.java\npackage sample.jta.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.inject.Inject;\nimport javax.transaction.TransactionSynchronizationRegistry;\nimport sample.jta.cdi.TransactionScopedBean;\n\n@Stateless\npublic class TransactionScopedEjb {\n\n    @Inject\n    private TransactionScopedBean bean;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    @Inject\n    private RequiredEjb requiredEjb;\n\n    @Inject\n    private RequiresNewEjb requiresNewEjb;\n\n    public void execute() {\n        System.out.println(\"[TestTransactionScopedEjb]\");\n        System.out.println(\"txKey=\" + this.tx.getTransactionKey());\n        System.out.println(\"bean=\" + this.bean);\n\n        this.requiresNewEjb.execute();\n        this.requiredEjb.execute();\n    }\n}\n\n\n\nRequiredEjb.java\npackage sample.jta.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.inject.Inject;\nimport javax.transaction.TransactionSynchronizationRegistry;\nimport sample.jta.cdi.TransactionScopedBean;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.REQUIRED)\npublic class RequiredEjb {\n\n    @Inject\n    private TransactionScopedBean bean;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    public void execute() {\n        System.out.println(\"[RequiredEjb]\");\n        System.out.println(\"txKey=\" + this.tx.getTransactionKey());\n        System.out.println(\"bean=\" + this.bean);\n    }\n}\n\n\n\nRequiresNewEjb.java\npackage sample.jta.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.inject.Inject;\nimport javax.transaction.TransactionSynchronizationRegistry;\nimport sample.jta.cdi.TransactionScopedBean;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.REQUIRES_NEW)\npublic class RequiresNewEjb {\n\n    @Inject\n    private TransactionScopedBean bean;\n\n    @Resource\n    private TransactionSynchronizationRegistry tx;\n\n    public void execute() {\n        System.out.println(\"[RequiresNewEjb]\");\n        System.out.println(\"txKey=\" + this.tx.getTransactionKey());\n        System.out.println(\"bean=\" + this.bean);\n    }\n}\n\n\n\nGlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [TestTransactionScopedEjb]\n\u60c5\u5831:   txKey=JavaEETransactionImpl: txId=1 ...]\n\u60c5\u5831:   bean=TransactionScopedBean {hash=1815003275}\n\n\u60c5\u5831:   [RequiresNewEjb]\n\u60c5\u5831:   txKey=JavaEETransactionImpl: txId=2 ...]\n\u60c5\u5831:   bean=TransactionScopedBean {hash=2009619742}\n\n\u60c5\u5831:   [RequiredEjb]\n\u60c5\u5831:   txKey=JavaEETransactionImpl: txId=1 ...]\n\u60c5\u5831:   bean=TransactionScopedBean {hash=1815003275}\n\n\n\n\ntxId \u3068 TransactionScopedBean \u306e\u30cf\u30c3\u30b7\u30e5\u5024\u306e\u95a2\u4fc2\u306b\u6ce8\u76ee\u3002\n\n@TransactionScoped \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3068\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u308b\u3002\n\n\n\u53c2\u8003\n\nJSR 907: JavaTM Transaction API (JTA) | The Java Community Process(SM) Program - JSRs: Java Specification Requests - detail JSR# 907\n1.4 Java Transaction Service(JTS)\n\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u6311\u6226\u3057\u3088\u3046\uff01\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30e2\u30cb\u30bf\u30fc - Wikipedia\nX/Open XA - Wikipedia\nX/Open\u3068\u306f \u300cX/Open Company, Ltd.\u300d (\u30a8\u30c3\u30af\u30b9\u30aa\u30fc\u30d7\u30f3)\uff1a - IT\u7528\u8a9e\u8f9e\u5178\u30d0\u30a4\u30ca\u30ea\nOracle XA\u3092\u4f7f\u7528\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\nThe Open Group\u3068\u306f \u30b8\u30aa\u30fc\u30d7\u30f3\u30b0\u30eb\u30fc\u30d7\uff1a - IT\u7528\u8a9e\u8f9e\u5178\u30d0\u30a4\u30ca\u30ea\nJDBC \u63a5\u7d9a\u30d7\u30fc\u30eb\u306e\u7de8\u96c6 (Sun GlassFish Enterprise Server 2.1 \u7ba1\u7406\u30ac\u30a4\u30c9)\nAmazon.co.jp\uff1a \u30de\u30b9\u30bf\u30ea\u30f3\u30b0JavaEE5 \u7b2c2\u7248 (DVD\u4ed8) (Programmer\u2019s SELECTION): \u4e09\u83f1UFJ\u30a4\u30f3\u30d5\u30a9\u30e1\u30fc\u30b7\u30e7\u30f3\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u682a\u5f0f\u4f1a\u793e \u6589\u85e4 \u8ce2\u54c9: \u672c\nAmazon.co.jp\uff1a Beginning Java EE 6 GlassFish 3\u3067\u59cb\u3081\u308b\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30baJava (Programmer\u2019s SELECTION): Antonio Goncalves, \u65e5\u672c\u30aa\u30e9\u30af\u30eb\u682a\u5f0f\u4f1a\u793e, \u682a\u5f0f\u4f1a\u793e\u30d7\u30ed\u30b7\u30b9\u30c6\u30e0\u30a8\u30eb\u30aa\u30fc\u30b7\u30fc: \u672c\nAmazon.co.jp\uff1a Enterprise JavaBeans 3.1 \u7b2c6\u7248: Andrew Lee Rubinger, Bill Burke, \u4f50\u85e4 \u76f4\u751f, \u6728\u4e0b \u54f2\u4e5f: \u672c\nJava Transaction API - Wikipedia\n\n[\u74b0\u5883\u69cb\u7bc9](http://qiita.com/opengl-8080/items/aeda0d8bad42af3113bd)\n\n[\u30b3\u30fc\u30c9](https://github.com/opengl8080-javaee-samples/jta)\n\n# \u74b0\u5883\n## OS\nWindows 7\n\n## AP \u30b5\u30fc\u30d0\u30fc\nGlassFish 4.1 Open Source Edition (\u4e00\u90e8 Wildfly 9.0.1 \u4f7f\u7528)\n\n## Java\n1.8.0_60\n\n## DB \u30b5\u30fc\u30d0\u30fc\nMySQL 5.5.28, for Win64 (x86)\n\n# JTA \u3068\u306f\nJava Transaction API \u306e\u7565\u3002  \nJava \u3067 **\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3** \u3092\u6271\u3046\u305f\u3081\u306e\u5404\u7a2e API \u3092\u5b9a\u7fa9\u3057\u305f\u4ed5\u69d8\u3002\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u3068\u306f\u3001\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u7ba1\u7406\u3092\u884c\u3046\u30b5\u30fc\u30d3\u30b9\uff08\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\uff09\u3067\u3001 Java EE \u30b5\u30fc\u30d0\u30fc\u3060\u3068 EJB \u30b3\u30f3\u30c6\u30ca\u304c\u305d\u306e\u5f79\u5272\u3092\u62c5\u3063\u3066\u3044\u308b\u3002\n\n# DTP\nDistributed Transaction Processing \u306e\u7565\uff08\u76f4\u8a33\u3059\u308b\u306a\u3089\u3001\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u51e6\u7406\uff1f\uff09\u3002\n\n**X/Open** \u3068\u3044\u3046\u7d44\u7e54\u304c\u7b56\u5b9a\u3057\u305f\u3001\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u306e\u6a19\u6e96\u898f\u683c\u3002JTA \u304c\u6271\u3046\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3082\u3001\u3053\u306e DTP \u306b\u6e96\u62e0\u3057\u3066\u3044\u308b\u3002\nX/Open \u306f UNIX \u306b\u95a2\u3059\u308b\u6280\u8853\u306e\u6a19\u6e96\u5316\u3092\u884c\u3046\u56e3\u4f53\u3060\u3063\u305f\u304c\u3001 1996 \u5e74\u306b Open Software Foundation \u3068\u5408\u4f75\u3057\u3066\u3001\u73fe\u5728\u306f The Open Group \u3068\u3044\u3046\u7d44\u7e54\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n## DTP \u3067\u767b\u5834\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\nDTP \u3067\u306f\u3001\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u767b\u5834\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3082\u306e\u3092\u6319\u3052\u3066\u3044\u308b\u3002\n\n**\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3**\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u6a5f\u80fd\u3092\u5099\u3048\u305f\u30ea\u30bd\u30fc\u30b9\u3092\u7ba1\u7406\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3002\n\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u88fd\u54c1\u3084\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u6307\u5411\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306a\u3069\u304c\u3053\u308c\u306b\u3042\u305f\u308b\u3002\n\n**\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3**\n\n\u8907\u6570\u306e\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u3092\u7ba1\u7406\u3057\u3001\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5236\u5fa1\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3002\n\n**\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3**\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3002\n\n## \uff12\u30d5\u30a7\u30fc\u30ba\u30b3\u30df\u30c3\u30c8\n\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u5177\u4f53\u7684\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u3002\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u30b3\u30df\u30c3\u30c8\u3092\uff12\u56de\u306e\u30d5\u30a7\u30fc\u30ba\u306b\u5206\u3051\u3066\u884c\u3046\u3002\n\n\u7b2c\uff11\u30d5\u30a7\u30fc\u30ba\u3067\u306f\u3001\u5404\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u306b\u73fe\u5728\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u53ef\u80fd\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\u5168\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u30b3\u30df\u30c3\u30c8\u53ef\u80fd\u3067\u3042\u308b\u3068\u8fd4\u4e8b\u3092\u3057\u305f\u3089\u3001\u7b2c\uff12\u30d5\u30a7\u30fc\u30ba\u3068\u3057\u3066\u5404\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u306b\u30b3\u30df\u30c3\u30c8\u306e\u6307\u793a\u304c\u98db\u3076\u3002\n\n\u3069\u308c\u304b\uff11\u3064\u3067\u3082\u30b3\u30df\u30c3\u30c8\u4e0d\u53ef\u306e\u8fd4\u4e8b\u3092\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u5b58\u5728\u3057\u305f\u5834\u5408\u306f\u3001\u5168\u3066\u306e\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u306b\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u6307\u793a\u304c\u98db\u3076\u3002\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u306e\u539f\u5b50\u6027\u306e\u62c5\u4fdd\u304c\u5b9f\u73fe\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u3088\u308a\u7d30\u304b\u3044\u8a71\u306f [\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u6311\u6226\u3057\u3088\u3046\uff01][1] \u3092\u53c2\u7167\u306e\u3053\u3068\u3002\n\nDTP \u3067\u306f\u3001\u3053\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u5177\u4f53\u7684\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\n\n## \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\nDTP \u3067\u306f\u3001\u5927\u304d\u304f\u4ee5\u4e0b\u306e\uff12\u3064\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\n\n**TX \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9**\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u516c\u958b\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\n**XA \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9**\n\n\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u306b\u5bfe\u3057\u3066\u516c\u958b\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\n# JTA \u304c\u5b9a\u7fa9\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\nJTA \u3067\u306f\u3001\u4ee5\u4e0b\u306e\uff13\u3064\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\n\n## [javax.transaction.TransactionManager](http://docs.oracle.com/javaee/7/api/javax/transaction/TransactionManager.html)\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u3001 **\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30b5\u30fc\u30d0\u30fc** \u306b\u5bfe\u3057\u3066\u516c\u958b\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\nEJB \u304c\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u7ba1\u7406\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\uff08CMT\uff09\u306f\u3001\u3053\u306e `TransactionManager` \u3092\u4f7f\u3063\u3066\u5b9f\u73fe\u3055\u308c\u3066\u3044\u308b\u3002\n\n## [javax.transaction.UserTransaction](http://docs.oracle.com/javaee/7/api/javax/transaction/UserTransaction.html)\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u3001 **\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3** \u306b\u5bfe\u3057\u3066\u516c\u958b\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u958b\u59cb\u30fb\u7d42\u4e86\u3092\u30b3\u30f3\u30c6\u30ca\u306b\u4efb\u305b\u306a\u3044\u3068\u304d\uff08BMT\uff09\u306f\u3001\u3053\u306e `UserTransaction` \u3092 EJB \u306a\u3069\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u3057\u3066\u660e\u793a\u7684\u306b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n## [javax.transaction.xa.XAResource](http://docs.oracle.com/javaee/7/api/javax/transaction/xa/XAResource.html)\n\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u306b\u5bfe\u3057\u3066\u516c\u958b\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3002\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30de\u30cd\u30fc\u30b8\u30e3\u306f\u3001\u3053\u306e `XAResource` \u306b\u5b9a\u7fa9\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u3066\u3001 DTP \u3067\u5b9a\u7fa9\u3055\u308c\u305f\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3002\n\n`XAResource` \u306e\u5b9f\u88c5\u306f\u3001\u5404\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u7528\u610f\u3059\u308b\u3002\n\u4f8b\u3048\u3070\u3001 MySQL \u306e\u5834\u5408\u306f JDBC \u30c9\u30e9\u30a4\u30d0\u306e\u4e2d\u306b `XAResource` \u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u304c\u542b\u307e\u308c\u3066\u3044\u308b\uff08`com.mysql.jdbc.jdbc2.optional.MysqlXAConnection`\uff09\u3002\n\n\u4e0b\u56f3\u306f\u3001[JTA \u306e\u4ed5\u69d8\u66f8][2]\u306b\u63cf\u304b\u308c\u3066\u3044\u308b\u56f3\u3067\u3001\u5404\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3068\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306e\u95a2\u9023\u3092\u628a\u63e1\u3059\u308b\u306e\u306b\u4e01\u5ea6\u3044\u3044\u56f3\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n![jta.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/8f5fb537-b18d-2274-c2d9-76b7631e0eea.jpeg)\n\n# \u30b0\u30ed\u30fc\u30d0\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3068\u30ed\u30fc\u30ab\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\nJTA \u306e\u8a2d\u5b9a\u306e\u3068\u304d\u306a\u3069\u306b\u76ee\u306b\u3059\u308b\u3001\u3053\u308c\u3089\u306e\u8a00\u8449\u306b\u3064\u3044\u3066\u3002\n\n## \u30b0\u30ed\u30fc\u30d0\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\n\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u3053\u3068\u3002\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5bfe\u8c61\u3068\u306a\u308b\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u3068\u304d\u306b\u5229\u7528\u3059\u308b\u3002\n\n## \u30ed\u30fc\u30ab\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\n\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\u63d0\u4f9b\u3059\u308b\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e API \u3092\u305d\u306e\u307e\u307e\u5229\u7528\u3059\u308b\u3053\u3068\u3002\nJDBC \u306a\u3089\u3001 `java.sql.Connection` \u306e `commit()` \u30e1\u30bd\u30c3\u30c9\u3068\u304b\u3092\u76f4\u63a5\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5bfe\u8c61\u3068\u306a\u308b\u30ea\u30bd\u30fc\u30b9\u30de\u30cd\u30fc\u30b8\u30e3\u304c\uff11\u3064\u3057\u304b\u5b58\u5728\u3057\u306a\u3044\u3068\u304d\u306b\u5229\u7528\u3059\u308b\u3002\n\n# GlassFish \u3067\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\nJTA \u3092\u4f7f\u3046\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u3059\u306a\u308f\u3061\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u300c\u660e\u793a\u7684\u306b\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3059\u308b\u300d\u3068\u3044\u3063\u305f\u8a2d\u5b9a\u306f\u5fc5\u8981\u306a\u3044\u3002\n\n\u5f37\u3044\u3066\u8a00\u3046\u306a\u3089\u3001\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306e\u767b\u9332\u3067 `XA` \u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3001\u3068\u3044\u3046\u70b9\u304f\u3089\u3044\u3002\n\nMySQL \u3092\u4f7f\u3063\u3066 `XA` \u306b\u5bfe\u5fdc\u3057\u305f\uff12\u3064\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u767b\u9332\u3059\u308b\u3002\nJDBC \u30c9\u30e9\u30a4\u30d0\u306f[\u3042\u3089\u304b\u3058\u3081\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3053\u3068](http://qiita.com/opengl-8080/items/7d51351cb540269e1d05#mysql-%E3%81%AE-jdbc-%E3%83%89%E3%83%A9%E3%82%A4%E3%83%90%E3%82%92%E9%85%8D%E7%BD%AE%E3%81%99%E3%82%8B)\u3002\n\n## \u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306e\u767b\u9332\n### \u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30eb\u306e\u767b\u9332\n- \u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u958b\u304d\u3001 [Resources] > [JDBC] > [JDBC Connection Pools] \u3092\u9078\u629e\u3059\u308b\u3002\n- [New...] \u3092\u30af\u30ea\u30c3\u30af\u3002\n- \u4ee5\u4e0b\u5165\u529b\u3002\n    - [Pool Name] \u306b\u9069\u5f53\u306a\u540d\u524d\u3092\u5165\u308c\u308b\u3002\n    - [Resource Type] \u3067 `javax.sql.XADataSource` \u3092\u9078\u629e\u3002\n    - [Database Driver Vendor] \u3067 `MySql` \u3092\u9078\u629e\u3002\n\n![jta.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/7f5d2891-34ad-1cde-4297-bef9c058409a.jpeg)\n\n\n- [Next] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u6b21\u306e\u30da\u30fc\u30b8\u3067\u4ee5\u4e0b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8a2d\u5b9a\u3002\n    - `Username`, `Password`, `ServerName`, `DatabaseName`\n- \u540c\u3058\u8981\u9818\u3067\u3001\u540d\u524d\u9055\u3044\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u3082\u3046\uff11\u3064\u767b\u9332\u3059\u308b\u3002\n\n### JDBC \u30ea\u30bd\u30fc\u30b9\u306e\u767b\u9332\n- \u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u3001 [Resources] > [JDBC] > [JDBC Resources] \u3092\u9078\u629e\u3059\u308b\u3002\n- [New...] \u3092\u30af\u30ea\u30c3\u30af\u3002\n- \u4ee5\u4e0b\u5165\u529b\u3002\n    - [JNDI Name] \u306b\u9069\u5f53\u306a\u540d\u524d\u3092\u5165\u308c\u308b\u3002\n    - [Pool Name] \u3067\u3001\u5148\u307b\u3069\u767b\u9332\u3057\u305f\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30eb\u3092\u9078\u629e\u3002\n\n![jta.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/866cfe5a-0d03-4139-dd8a-4f01eab49c7c.jpeg)\n\n- [OK] \u3092\u30af\u30ea\u30c3\u30af\u3002\n\n## \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n![jta.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/7f60d6bd-bc94-edfa-012c-5530dac196cf.jpeg)\n\n\u3053\u3093\u306a\u30c6\u30fc\u30d6\u30eb\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3002\n\n## \u5b9f\u88c5\uff0b\u52d5\u4f5c\u78ba\u8a8d\n```java:HelloEjb.java\npackage sample.jta.ejb;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.sql.DataSource;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\npublic class HelloEjb {\n    \n    @Resource(lookup = \"jdbc/mysql_global_1\") // \u2605\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u6ce8\u5165\n    private DataSource ds1;\n    \n    @Resource(lookup = \"jdbc/mysql_global_2\") // \u2605\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u6ce8\u5165\n    private DataSource ds2;\n    \n    @Resource\n    private TransactionSynchronizationRegistry tx;\n    \n    public void execute() {\n        this.insert(this.ds1, \"hoge\");\n        this.insert(this.ds2, \"fuga\");\n        \n        System.out.println(\"txKey = \" + tx.getTransactionKey());\n    }\n    \n    private void insert(DataSource ds, String value) {\n        // \u2605 TEST_TABLE \u306b\u30ec\u30b3\u30fc\u30c9\u3092 INSERT\n        try (Connection con = ds.getConnection();\n            PreparedStatement ps = con.prepareStatement(\"INSERT INTO TEST_TABLE (VALUE) VALUES (?)\");\n            ) {\n            \n            ps.setString(1, value);\n            ps.executeUpdate();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n`HelloEjb#execute()` \u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u5916\u90e8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   txKey = JavaEETransactionImpl: txId=21 nonXAResource=null jtsTx=com.sun.jts.jta.TransactionImpl@c3161dfc ...]\n```\n\n**\u5b9f\u884c\u5f8c\u306e\u30c6\u30fc\u30d6\u30eb**\n\n![jta.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/8579a56d-4bff-fa95-8d4e-bb79326ad079.jpeg)\n\n\u8907\u6570\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u3001\uff11\u3064\u306e EJB \uff08\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\uff09\u306e\u4e2d\u3067\u5229\u7528\u3067\u304d\u3066\u3044\u308b\u3002\n\n# \u975e XA \u306a\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u767b\u9332\u3059\u308b\u3068\u3069\u3046\u306a\u308b\uff1f\nGlassFish \u306b\u9650\u3089\u305a\u3001 AP \u30b5\u30fc\u30d0\u30fc\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306b\u306f\u3001 XA \u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3082\u767b\u9332\u3067\u304d\u308b\u3002\n\nJTA \u306f\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306e API \u306a\u306e\u3067\u3001 XA \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306f\u5229\u7528\u3067\u304d\u306a\u3055\u305d\u3046\u3060\u304c\u3001\u5b9f\u969b\u306f\u767b\u9332\u3067\u304d\u308b\u3057\u3001\u305d\u306e\u307e\u307e JTA \u7d4c\u7531\u3067\u5229\u7528\u3082\u3067\u304d\u3066\u3057\u307e\u3046\u3002\n\n\u4f55\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u306e\u304b\u8abf\u3079\u3066\u307f\u308b\u3002\n\n## \u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u767b\u9332\u3059\u308b\n\u5148\u307b\u3069\u3068\u540c\u3058\u8981\u9818\u3067\u3001\u975e XA \u306a\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u767b\u9332\u3059\u308b\u3002\n\n![jta.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/50ddbeec-d953-a5dc-ca4e-36af2b84d5e1.jpeg)\n\n## \u5b9f\u88c5\n```java:NonXADataSourceEjb.java\npackage sample.jta.ejb;\n\nimport java.lang.reflect.Field;\nimport java.lang.reflect.Method;\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.sql.DataSource;\nimport javax.transaction.TransactionSynchronizationRegistry;\n\n@Stateless\npublic class NonXADataSourceEjb {\n    \n    @Resource(lookup = \"jdbc/mysql_local_1\")\n    private DataSource ds;\n    \n    @Resource\n    private TransactionSynchronizationRegistry tx;\n    \n    public void execute() throws Exception {\n        try (Connection con = ds.getConnection()) { // \u2605 ds \u3092 JTA \u306b\u53c2\u52a0\u3055\u305b\u308b\n            Object key = tx.getTransactionKey();\n            System.out.println(\"txKey = \" + key);\n\n            // \u2605 TransactionKey \u304c\u6301\u3064 nonXAResource \u306e\u5177\u4f53\u7684\u306a\u30af\u30e9\u30b9\u540d\u3092\u78ba\u8a8d\u3059\u308b\n            Object nonXAResource = this.getFieldValue(key, \"nonXAResource\");\n            System.out.println(\"nonXAResource.class = \" + nonXAResource.getClass());\n        }\n    }\n    \n    public Object getFieldValue(Object obj, String fieldName) throws Exception {\n        if (obj == null) return null;\n        \n        Class<?> clazz = obj.getClass();\n        try {\n            Field field = clazz.getDeclaredField(fieldName);\n            field.setAccessible(true);\n            Object result = field.get(obj);\n            field.setAccessible(false);\n            return result;\n        } catch (NoSuchFieldException e) {\n            return null;\n        }\n    }\n}\n```\n\n\u975e XA \u306a\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092 JTA \u7d4c\u7531\u3067\u5229\u7528\u3059\u308b\u3068\u3001 `nonXAResource` \u3068\u3044\u3046\u3044\u304b\u306b\u3082\u305d\u308c\u3063\u307d\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u305d\u306e\u5024\u3092\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u7121\u7406\u3084\u308a\u53d6\u5f97\u3057\u3066\u3044\u308b\u3002\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   txKey = JavaEETransactionImpl: txId=39 nonXAResource=715 jtsTx=null ...]\n\u60c5\u5831:   nonXAResource.class = class com.sun.enterprise.resource.ResourceHandle\n```\n\n`nonXAResource` \u306e\u5b9f\u4f53\u306f `com.sun.enterprise.resource.ResourceHandle` \u3068\u3044\u3046\u30af\u30e9\u30b9\u3089\u3057\u3044\u3002\n\n\u3053\u306e\u30af\u30e9\u30b9\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u306a\u308b\u3002\n\n[GC: ResourceHandle - com.sun.enterprise.resource.ResourceHandle (.java) - GrepCode Class Source](http://grepcode.com/file/repo1.maven.org/maven2/org.glassfish.connectors/connectors-runtime/3.0/com/sun/enterprise/resource/ResourceHandle.java#ResourceHandle)\n\n```java:ResourceHandle.java\npublic class ResourceHandle implements\n        com.sun.appserv.connectors.internal.api.ResourceHandle, TransactionalResource {\n\n    ...\n\n    private XAResource xares;\n\n    ...\n```\n\n\u3088\u304f\u898b\u308b\u3068\u3001\u4e2d\u306b `XAResource` \u304c\u5165\u3063\u3066\u3044\u308b\u3002\n\n\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5b9f\u4f53\u3092\u8abf\u3079\u3066\u307f\u308b\u3068\u3001 `com.sun.enterprise.resource.ConnectorXAResource` \u3068\u3044\u3046\u30af\u30e9\u30b9\u3060\u3063\u305f\u3002\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3002\n\n[GC: ConnectorXAResource - com.sun.enterprise.resource.ConnectorXAResource (.java) - GrepCode Class Source](http://grepcode.com/file/repo1.maven.org/maven2/org.glassfish.connectors/connectors-runtime/3.0/com/sun/enterprise/resource/ConnectorXAResource.java#ConnectorXAResource)\n\n\u3053\u306e\u30af\u30e9\u30b9\u306e\u3001 `commit()` \u30e1\u30bd\u30c3\u30c9\u3092\u8997\u3044\u3066\u307f\u308b\u3002\n\n```java:ConnectorXAResource.java\n    public void commit(Xid xid, boolean onePhase) throws XAException {\n        try {\n            ResourceHandle handle = getResourceHandle();\n            ManagedConnection mc = (ManagedConnection) handle.getResource();\n            mc.getLocalTransaction().commit(); // \u2605 getLocalTransaction() \u3057\u3066\u308b\uff01\n        } catch (Exception ex) {\n            handleResourceException(ex);\n        }finally{\n            resetAssociation();\n        }\n    }\n```\n\n`ConnectorXAResource` \u306f `XAResource` \u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3082\u306e\u306e\u3001\u5b9f\u306f\u30ed\u30fc\u30ab\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u3044\u308b\u3063\u307d\u3044\u3002\n\n\u3064\u307e\u308a\u3001\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u304c XA \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u3068\u3057\u3066\u3082\u3001\u5185\u90e8\u3067\u30e9\u30c3\u30d7\u3057\u3066 `XAResource` \u306b\u64ec\u4f3c\u7684\u306b\u5bfe\u5fdc\u3055\u305b\u308b\u3053\u3068\u3067\u3001 JTA \u7d4c\u7531\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3060\u308d\u3046\u3002\n\n\u4e00\u5fdc Wildfly \u3067\u3082\u540c\u3058\u3088\u3046\u306b\u78ba\u8a8d\u3057\u305f\u304c\u3001\u3084\u306f\u308a\u975e XA \u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306f\u3001\u5185\u90e8\u3067\u30ed\u30fc\u30ab\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u30af\u30e9\u30b9\u306b\u30e9\u30c3\u30d7\u3055\u308c\u3066\u5229\u7528\u3055\u308c\u3066\u3044\u305f\u3002\n\n# \u8907\u6570\u306e\u30ed\u30fc\u30ab\u30eb\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3068\u3069\u3046\u306a\u308b\uff1f\n```java:MultiNonXADataSourceEjb.java\npackage sample.jta.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.sql.DataSource;\n\n@Stateless\npublic class MultiNonXADataSourceEjb {\n\n    @Resource(lookup = \"jdbc/mysql_local_1\")\n    private DataSource ds1;\n\n    @Resource(lookup = \"jdbc/mysql_local_2\")\n    private DataSource ds2;\n    \n    public void execute() throws Exception {\n        try (Connection c1 = ds1.getConnection();\n             Connection c2 = ds2.getConnection()) {}\n    }\n}\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   ejb = MultiNonXADataSourceEjb, method = execute\n\u91cd\u5927:   RAR5029:Unexpected exception while registering component \njava.lang.IllegalStateException: Local transaction already has 1 non-XA Resource: cannot add more resources.  \n\tat com.sun.enterprise.transaction.JavaEETransactionManagerSimplified.enlistResource(JavaEETransactionManagerSimplified.java:345)\n        ...\n\n\u8b66\u544a:   RAR7132: Unable to enlist the resource in transaction. Returned resource to pool. Pool name: [ mysql_local_2 ]\n\u8b66\u544a:   RAR5117 : Failed to obtain/create connection from connection pool [ mysql_local_2 ]. Reason : com.sun.appserv.connectors.internal.api.PoolingException: java.lang.IllegalStateException: Local transaction already has 1 non-XA Resource: cannot add more resources.  \n\u8b66\u544a:   RAR5114 : Error allocating connection : [Error in allocating a connection. Cause: java.lang.IllegalStateException: Local transaction already has 1 non-XA Resource: cannot add more resources.  ]\n\u91cd\u5927:   java.lang.reflect.InvocationTargetException\n       ...\n```\n\n`ds2` \u3092 JTA \u306b\u53c2\u52a0\u3055\u305b\u3088\u3046\u3068\u3057\u305f\u6642\u70b9\u3067\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u3002\n\n`Local transaction already has 1 non-XA Resource: cannot add more resources. ` \u3068\u3042\u308b\u306e\u3067\u3001\u975e XA \u306a\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u8907\u6570\u4f7f\u3046\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n## \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c JTA \u306b\u53c2\u52a0\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\n\u8aac\u660e\u3092\u7701\u3044\u3066\u3044\u305f\u304c\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c JTA \u306e\u7ba1\u7406\u4e0b\u306b\u7f6e\u304b\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306f\u3001\u4e0a\u8a18\u306e\u4f8b\u304b\u3089\u3082\u5206\u304b\u308b\u901a\u308a `DataSource#getConnection()` \u3092\u5b9f\u884c\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u306a\u308b\u3002\n\n\u305f\u3060\u3057\u3001 JTA \u306e\u4ed5\u69d8\u7684\u306b\u305d\u3046\u306a\u306e\u304b\u3001 GlassFish \u306e\u5b9f\u88c5\u7684\u306b\u305d\u3046\u306a\u306e\u304b\u306f\u5206\u304b\u3089\u306a\u3044\u3002\n\n# \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\nJTA1.2 (Java EE 7) \u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u3001 `@Transactional` \u3068 `@TransactionScoped` \u304c\u3042\u308b\u3002\n\n\u3053\u308c\u3089\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001 CDI \u7ba1\u7406\u30d3\u30fc\u30f3\u3067\u30b3\u30f3\u30c6\u30ca\u7ba1\u7406\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n## @Transactional\n\u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067 CDI \u7ba1\u7406\u30d3\u30fc\u30f3\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3053\u3068\u3067\u3001 EJB \u3068\u540c\u3058\u3088\u3046\u306b\u5ba3\u8a00\u7684\u306a\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n### \u57fa\u672c\n```java:\npackage sample.jta.ejb;\n\nimport java.sql.Connection;\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.inject.Inject;\nimport javax.sql.DataSource;\nimport javax.transaction.TransactionSynchronizationRegistry;\nimport sample.jta.cdi.TransactionalBean;\n\n@Stateless\npublic class TransactionalEjb {\n    \n    @Resource(lookup = \"jdbc/mysql_local_1\")\n    private DataSource ds;\n    \n    @Resource\n    private TransactionSynchronizationRegistry tx;\n    \n    @Inject\n    private TransactionalBean bean;\n    \n    public void execute() throws Exception {\n        try (Connection con = ds.getConnection()) {\n            System.out.println(\"TransactionalEjb : txKey=\" + tx.getTransactionKey());\n            this.bean.requreisNew();\n            this.bean.required();\n        }\n    }\n}\n```\n\n```java:TransactionalBean.java\npackage sample.jta.cdi;\n\nimport java.sql.Connection;\nimport javax.annotation.Resource;\nimport javax.enterprise.context.ApplicationScoped;\nimport javax.sql.DataSource;\nimport javax.transaction.TransactionSynchronizationRegistry;\nimport javax.transaction.Transactional;\n\n@ApplicationScoped\npublic class TransactionalBean {\n    \n    @Resource(lookup = \"jdbc/mysql_local_1\")\n    private DataSource ds;\n    \n    @Resource\n    private TransactionSynchronizationRegistry tx;\n    \n    @Transactional\n    public void required() throws Exception {\n        try (Connection con = ds.getConnection()) {\n            System.out.println(\"required() : txKey=\" + tx.getTransactionKey());\n        }\n    }\n    \n    @Transactional(Transactional.TxType.REQUIRES_NEW)\n    public void requreisNew() throws Exception {\n        try (Connection con = ds.getConnection()) {\n            System.out.println(\"requreisNew() : txKey=\" + tx.getTransactionKey());\n        }\n    }\n}\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   TransactionalEjb : txKey=JavaEETransactionImpl: txId=52 nonXAResource=827 jtsTx=null ...]\n\n\u60c5\u5831:   requreisNew() : txKey=JavaEETransactionImpl: txId=53 nonXAResource=null jtsTx=null localTxStatus=0 syncs=[]\n\n\u60c5\u5831:   required() : txKey=JavaEETransactionImpl: txId=52 nonXAResource=827 jtsTx=null ...]\n```\n\n- `@Transactional` \u3067 CDI \u7ba1\u7406\u30d3\u30fc\u30f3\u306e\u30e1\u30bd\u30c3\u30c9\uff08\u30af\u30e9\u30b9\uff09\u3092\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3053\u3068\u3067\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u3092\u8a2d\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u3067\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u958b\u59cb\u30fb\u7d42\u4e86\u3092\u3069\u3046\u3059\u308b\u304b\u306e\u5236\u5fa1\u304c\u3067\u304d\u308b\u3002\n    - \u5217\u6319\u578b\u306e `TxType` \u3092\u4f7f\u7528\u3059\u308b\u3002\n    - \u305d\u308c\u305e\u308c\u306e\u610f\u5473\u306f\u3001 [EJB \u306e\u5834\u5408](http://qiita.com/opengl-8080/items/e4840aa3e33b42ae0d6b#%E3%81%BE%E3%81%A8%E3%82%81-1) \u3068\u540c\u3058\u3002\n\n### \u4f8b\u5916\u767a\u751f\u6642\u306e\u5236\u5fa1\n\u203b\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u3001\u6700\u521d GlassFish 4.1 \u3068 Payara 4.1.153 \u3067\u52d5\u4f5c\u691c\u8a3c\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u3082\u4ed5\u69d8\u901a\u308a\u306b\u52d5\u3044\u3066\u304f\u308c\u306a\u304b\u3063\u305f\u306e\u3067 Wildfly 9.0.1 \u3067\u52d5\u4f5c\u691c\u8a3c\u3057\u307e\u3057\u305f\u3002\n\n**\u8ffd\u8a18**\n\n[\u30b3\u30e1\u30f3\u30c8](http://qiita.com/opengl-8080/items/9b9d432e0a10486bc1b4#comment-5a6f430884930097e028) \u306b\u3042\u308b\u3068\u304a\u308a\u3001\u30d0\u30b0\u3060\u3063\u305f\u3088\u3046\u3067\u4eca\u5f8c\u4fee\u6b63\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n#### \u57fa\u672c\n```java:TransactionalExceptionBean.java\npackage sample.jta.ejb;\n\nimport javax.ejb.Stateless;\nimport javax.inject.Inject;\nimport sample.jta.cdi.TransactionalExceptionBean;\n\n@Stateless\npublic class TransactionalExceptionEjb {\n    \n    @Inject\n    private TransactionalExceptionBean bean;\n    \n    public void execute() {\n        this.executeQuietly(this.bean::insertAndThrowException);\n        this.executeQuietly(this.bean::insertAndThrowRuntimeException);\n    }\n    \n    private void executeQuietly(ThrowableRunnable tr) {\n        try {\n            tr.execute();\n        } catch (Exception ex) {\n            System.out.println(\"[\" + ex.getClass().getSimpleName() + \"] \" + ex.getMessage());\n        }\n    }\n    \n    @FunctionalInterface\n    private static interface ThrowableRunnable {\n        void execute() throws Exception;\n    }\n}\n```\n\n```java:TransactionalExceptionBean.java\npackage sample.jta.cdi;\n\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.SQLException;\nimport javax.annotation.Resource;\nimport javax.enterprise.context.ApplicationScoped;\nimport javax.sql.DataSource;\nimport javax.transaction.Transactional;\n\n@ApplicationScoped\n@Transactional(Transactional.TxType.REQUIRES_NEW)\npublic class TransactionalExceptionBean {\n    \n    @Resource(lookup = \"java:/jdbc/mysql_test\")\n    private DataSource ds;\n    \n    public void insertAndThrowException() throws Exception {\n        this.insert(this.ds, \"insertAndThrowException\");\n        throw new Exception(\"test exception\");\n    }\n    \n    public void insertAndThrowRuntimeException() throws Exception {\n        this.insert(this.ds, \"insertAndThrowRuntimeException\");\n        throw new RuntimeException(\"test runtime exception\");\n    }\n    \n    private void insert(DataSource ds, String value) throws SQLException {\n        try (Connection con = ds.getConnection();\n            PreparedStatement ps = con.prepareStatement(\"INSERT INTO TEST_TABLE (VALUE) VALUES (?)\");\n            ) {\n            \n            ps.setString(1, value);\n            ps.executeUpdate();\n        }\n    }\n}\n```\n\n```text:Wildfly\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n22:14:29,546 INFO  [stdout] (default task-2) [Exception] test exception\n22:14:29,552 INFO  [stdout] (default task-2) [RuntimeException] test runtime exception\n```\n\n**\u5b9f\u884c\u5f8c\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9**\n\n![jta.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/aee30cb6-90a6-b294-9980-4f95778707c3.jpeg)\n\n- \u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u5834\u5408\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f**\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u306a\u3044**\u3002\n- \u975e\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u304c\u30b9\u30ed\u30fc\u3055\u308c\u305f\u5834\u5408\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3002\n\n\u3053\u306e\u8fba\u306e\u6319\u52d5\u306f\u3001 EJB \u306e\u5834\u5408\u3068\u540c\u3058\u3002\n\n#### \u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\uff08\u3057\u306a\u3044\uff09\u4f8b\u5916\u3092\u9650\u5b9a\u3059\u308b\n```java:TransactionalExceptionBean.java\npackage sample.jta.cdi;\n\n...\nimport java.util.function.Supplier;\n\n@ApplicationScoped\n@Transactional(Transactional.TxType.REQUIRES_NEW)\npublic class TransactionalExceptionBean {\n    \n    @Resource(lookup = \"java:/jdbc/mysql_test\")\n    private DataSource ds;\n    \n    ...\n\n    @Transactional(\n        value=Transactional.TxType.REQUIRES_NEW,\n        rollbackOn=IOException.class,\n        dontRollbackOn=NullPointerException.class\n    )\n    public void insertAndThrowAnyException(Supplier<? extends Exception> exceptionProducer) throws Exception {\n        Exception e = exceptionProducer.get();\n        this.insert(this.ds, \"insertAndThrowAnyException(\" + e.getClass().getSimpleName() + \")\");\n        throw e;\n    }\n    \n    ...\n}\n```\n\n```java:TransactionalExceptionEjb.java\npackage sample.jta.ejb;\n\nimport java.io.IOException;\n...\n\n@Stateless\npublic class TransactionalExceptionEjb {\n    \n    @Inject\n    private TransactionalExceptionBean bean;\n    \n    public void execute() {\n        ...\n        \n        // RuntimeException\n        this.executeQuietly(() -> this.bean.insertAndThrowAnyException(NullPointerException::new));\n        this.executeQuietly(() -> this.bean.insertAndThrowAnyException(IllegalStateException::new));\n        \n        // Exception\n        this.executeQuietly(() -> this.bean.insertAndThrowAnyException(NoSuchMethodException::new));\n        this.executeQuietly(() -> this.bean.insertAndThrowAnyException(IOException::new));\n    }\n    \n    ...\n}\n```\n\n```text:Wildfly\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n22:30:30,120 INFO  [stdout] (default task-4) [NullPointerException] null\n22:30:30,127 INFO  [stdout] (default task-4) [IllegalStateException] null\n22:30:30,132 INFO  [stdout] (default task-4) [NoSuchMethodException] null\n22:30:30,137 INFO  [stdout] (default task-4) [IOException] null\n```\n\n**\u5b9f\u884c\u5f8c\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9**\n\n![jta.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/be9504c1-4df1-3b80-fea8-84f8ce93be94.jpeg)\n\n- `rollbackOn` \u3067\u3001\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u306e\u4e2d\u3067\u3082\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u4f8b\u5916\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n    - `IOException` \u306f\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u306a\u306e\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u305a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\u3055\u308c\u308b\u3002\n    - \u3057\u304b\u3057\u3001 `rollbackOn` \u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u306f\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u3002\n- `dontRollbackOn` \u3067\u3001\u975e\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u306e\u4e2d\u3067\u3082\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u306a\u3044\u4f8b\u5916\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n    - `NullPointerException` \u306f\u975e\u30c1\u30a7\u30c3\u30af\u4f8b\u5916\u306a\u306e\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u306f\u767b\u9332\u3055\u308c\u306a\u3044\u3002\n    - \u3057\u304b\u3057\u3001 `dontRollbackOn` \u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u305a\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u3002\n\n#### GlassFish \u3067\u306e\u52d5\u4f5c\nGlassFish \u3067\u52d5\u304b\u3059\u3068\u3001 `RuntimeException` \u3092\u30b9\u30ed\u30fc\u3057\u3066\u3082\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3057\u3066\u304f\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u4ee3\u308f\u308a\u306b\u3001 `RollbackException` \u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u3068\u3044\u3046\u73fe\u8c61\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n\u6319\u52d5\u7684\u306b\u306f\u3001 [GlassFish4.1\u3092\u306a\u304a\u3057\u3066\u307f\u305f - \u898b\u7fd2\u3044\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u65e5\u8a18](http://n-agetsuma.hatenablog.com/entry/2014/12/25/000638) \u3053\u3061\u3089\u306e\u8a18\u4e8b\u306b\u63cf\u304b\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u540c\u3058\u611f\u3058\u3067\u3057\u305f\u3002\nissue \u306f reolved \u3060\u3051\u3069\u3001\u3082\u3057\u304b\u3057\u3066\u4f8b\u5916\u306e\u30bb\u30c3\u30c8\u3060\u3051\u76f4\u3057\u3066\u3001 rollbackonly \u2192 commit \u306e\u5373\u6b7b\u30b3\u30f3\u30dc\u306f\u76f4\u3063\u3066\u306a\u3044\u306e\u304b\u306a\u3041\u3002\u3002\u3002\n\n## @TransactionScoped\n```java:TransactionScopedBean.java\npackage sample.jta.cdi;\n\nimport java.io.Serializable;\nimport javax.transaction.TransactionScoped;\n\n@TransactionScoped\npublic class TransactionScopedBean implements Serializable {\n\n    @Override\n    public String toString() {\n        return \"TransactionScopedBean {hash=\" + this.hashCode() + \"}\";\n    }\n}\n```\n\n```java:TransactionScopedEjb.java\npackage sample.jta.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.inject.Inject;\nimport javax.transaction.TransactionSynchronizationRegistry;\nimport sample.jta.cdi.TransactionScopedBean;\n\n@Stateless\npublic class TransactionScopedEjb {\n    \n    @Inject\n    private TransactionScopedBean bean;\n    \n    @Resource\n    private TransactionSynchronizationRegistry tx;\n    \n    @Inject\n    private RequiredEjb requiredEjb;\n    \n    @Inject\n    private RequiresNewEjb requiresNewEjb;\n    \n    public void execute() {\n        System.out.println(\"[TestTransactionScopedEjb]\");\n        System.out.println(\"txKey=\" + this.tx.getTransactionKey());\n        System.out.println(\"bean=\" + this.bean);\n        \n        this.requiresNewEjb.execute();\n        this.requiredEjb.execute();\n    }\n}\n```\n\n```java:RequiredEjb.java\npackage sample.jta.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.inject.Inject;\nimport javax.transaction.TransactionSynchronizationRegistry;\nimport sample.jta.cdi.TransactionScopedBean;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.REQUIRED)\npublic class RequiredEjb {\n    \n    @Inject\n    private TransactionScopedBean bean;\n    \n    @Resource\n    private TransactionSynchronizationRegistry tx;\n    \n    public void execute() {\n        System.out.println(\"[RequiredEjb]\");\n        System.out.println(\"txKey=\" + this.tx.getTransactionKey());\n        System.out.println(\"bean=\" + this.bean);\n    }\n}\n```\n\n```java:RequiresNewEjb.java\npackage sample.jta.ejb;\n\nimport javax.annotation.Resource;\nimport javax.ejb.Stateless;\nimport javax.ejb.TransactionAttribute;\nimport javax.ejb.TransactionAttributeType;\nimport javax.inject.Inject;\nimport javax.transaction.TransactionSynchronizationRegistry;\nimport sample.jta.cdi.TransactionScopedBean;\n\n@Stateless\n@TransactionAttribute(TransactionAttributeType.REQUIRES_NEW)\npublic class RequiresNewEjb {\n\n    @Inject\n    private TransactionScopedBean bean;\n    \n    @Resource\n    private TransactionSynchronizationRegistry tx;\n    \n    public void execute() {\n        System.out.println(\"[RequiresNewEjb]\");\n        System.out.println(\"txKey=\" + this.tx.getTransactionKey());\n        System.out.println(\"bean=\" + this.bean);\n    }\n}\n```\n\n```text:GlassFish\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n\u60c5\u5831:   [TestTransactionScopedEjb]\n\u60c5\u5831:   txKey=JavaEETransactionImpl: txId=1 ...]\n\u60c5\u5831:   bean=TransactionScopedBean {hash=1815003275}\n\n\u60c5\u5831:   [RequiresNewEjb]\n\u60c5\u5831:   txKey=JavaEETransactionImpl: txId=2 ...]\n\u60c5\u5831:   bean=TransactionScopedBean {hash=2009619742}\n\n\u60c5\u5831:   [RequiredEjb]\n\u60c5\u5831:   txKey=JavaEETransactionImpl: txId=1 ...]\n\u60c5\u5831:   bean=TransactionScopedBean {hash=1815003275}\n```\n\n- `txId` \u3068 `TransactionScopedBean` \u306e\u30cf\u30c3\u30b7\u30e5\u5024\u306e\u95a2\u4fc2\u306b\u6ce8\u76ee\u3002\n- `@TransactionScoped` \u3067\u30a2\u30ce\u30c6\u30fc\u30c8\u3059\u308b\u3068\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u751f\u6210\u3055\u308c\u308b\u3002\n\n# \u53c2\u8003\n- [JSR 907: JavaTM Transaction API (JTA) | The Java Community Process(SM) Program - JSRs: Java Specification Requests - detail JSR# 907][2]\n- [1.4 Java Transaction Service(JTS)](http://software.fujitsu.com/jp/manual/manualfiles/M050000/B1WN4841/04/j2ee01/j2ee0008.htm)\n- [\u5206\u6563\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u6311\u6226\u3057\u3088\u3046\uff01][1]\n- [\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u30e2\u30cb\u30bf\u30fc - Wikipedia](https://ja.wikipedia.org/wiki/%E3%83%88%E3%83%A9%E3%83%B3%E3%82%B6%E3%82%AF%E3%82%B7%E3%83%A7%E3%83%B3%E3%83%A2%E3%83%8B%E3%82%BF%E3%83%BC)\n- [X/Open XA - Wikipedia](https://ja.wikipedia.org/wiki/X/Open_XA)\n- [X/Open\u3068\u306f \u300cX/Open Company, Ltd.\u300d (\u30a8\u30c3\u30af\u30b9\u30aa\u30fc\u30d7\u30f3)\uff1a - IT\u7528\u8a9e\u8f9e\u5178\u30d0\u30a4\u30ca\u30ea](http://www.sophia-it.com/content/X/Open)\n- [Oracle XA\u3092\u4f7f\u7528\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a](http://otndnld.oracle.co.jp/document/products/oracle10g/102/doc_cd/appdev.102/B19248-02/adfns_xa.htm)\n- [The Open Group\u3068\u306f \u30b8\u30aa\u30fc\u30d7\u30f3\u30b0\u30eb\u30fc\u30d7\uff1a - IT\u7528\u8a9e\u8f9e\u5178\u30d0\u30a4\u30ca\u30ea](http://www.sophia-it.com/content/The+Open+Group)\n- [JDBC \u63a5\u7d9a\u30d7\u30fc\u30eb\u306e\u7de8\u96c6 (Sun GlassFish Enterprise Server 2.1 \u7ba1\u7406\u30ac\u30a4\u30c9)](http://docs.oracle.com/cd/E19879-01/820-7432/ablir/index.html)\n- [Amazon.co.jp\uff1a \u30de\u30b9\u30bf\u30ea\u30f3\u30b0JavaEE5 \u7b2c2\u7248 (DVD\u4ed8) (Programmer\u2019s SELECTION): \u4e09\u83f1UFJ\u30a4\u30f3\u30d5\u30a9\u30e1\u30fc\u30b7\u30e7\u30f3\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u682a\u5f0f\u4f1a\u793e \u6589\u85e4 \u8ce2\u54c9: \u672c](http://www.amazon.co.jp/%E3%83%9E%E3%82%B9%E3%82%BF%E3%83%AA%E3%83%B3%E3%82%B0JavaEE5-%E7%AC%AC2%E7%89%88-DVD%E4%BB%98-Programmer%E2%80%99s-SELECTION/dp/4798120545)\n- [Amazon.co.jp\uff1a Beginning Java EE 6 GlassFish 3\u3067\u59cb\u3081\u308b\u30a8\u30f3\u30bf\u30fc\u30d7\u30e9\u30a4\u30baJava (Programmer\u2019s SELECTION): Antonio Goncalves, \u65e5\u672c\u30aa\u30e9\u30af\u30eb\u682a\u5f0f\u4f1a\u793e, \u682a\u5f0f\u4f1a\u793e\u30d7\u30ed\u30b7\u30b9\u30c6\u30e0\u30a8\u30eb\u30aa\u30fc\u30b7\u30fc: \u672c](http://www.amazon.co.jp/Beginning-GlassFish-3%E3%81%A7%E5%A7%8B%E3%82%81%E3%82%8B%E3%82%A8%E3%83%B3%E3%82%BF%E3%83%BC%E3%83%97%E3%83%A9%E3%82%A4%E3%82%BAJava-Programmer%E2%80%99s-SELECTION/dp/4798124605/ref=sr_1_1?ie=UTF8&qid=1443342866&sr=8-1&keywords=beginning+java+ee+6)\n- [Amazon.co.jp\uff1a Enterprise JavaBeans 3.1 \u7b2c6\u7248: Andrew Lee Rubinger, Bill Burke, \u4f50\u85e4 \u76f4\u751f, \u6728\u4e0b \u54f2\u4e5f: \u672c](http://www.amazon.co.jp/Enterprise-JavaBeans-3-1-Andrew-Rubinger/dp/4873115086)\n- [Java Transaction API - Wikipedia](https://ja.wikipedia.org/wiki/Java_Transaction_API)\n\n[1]: http://www.ogis-ri.co.jp/otc/hiroba/technical/DTP/step2/\n[2]: https://jcp.org/en/jsr/detail?id=907\n"}