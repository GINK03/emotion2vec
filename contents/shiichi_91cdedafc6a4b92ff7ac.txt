{"context": " More than 1 year has passed since last update.//App/Http/Controllers/Frontend/Auth/Authcontroller.php\n\u30fb\n\u30fb\n\u30fb\npublic function __construct(AuthenticationContract $auth)\n{\n    $this->auth = $auth;\n}\n\n\u30fb\n\u30fb\n\u30fb\n\npublic function confirmAccount($token) {\n    //Don't know why the exception handler is not catching this\n    try {\n        $this->auth->confirmAccount($token);\n        return redirect()->route('frontend.dashboard')->withFlashSuccess(\"Your account has been successfully confirmed!\");\n    } catch (GeneralException $e) {\n        return redirect()->back()->withInput()->withFlashDanger($e->getMessage());\n    }\n}\n\u30fb\n\u30fb\n\u30fb\n\n//App/Providers/AccessServiceProvider.php\n\u30fb\n\u30fb\n\u30fb\npublic function registerBindings() {\n    $this->app->bind(\n        'App\\Repositories\\Frontend\\Auth\\AuthenticationContract',\n        'App\\Repositories\\Frontend\\Auth\\EloquentAuthenticationRepository'\n    );\n\n    $this->app->bind(\n        'App\\Repositories\\Frontend\\User\\UserContract',\n        'App\\Repositories\\Frontend\\User\\EloquentUserRepository'\n    );\n\n    $this->app->bind(\n        'App\\Repositories\\Backend\\User\\UserContract',\n        'App\\Repositories\\Backend\\User\\EloquentUserRepository'\n    );\n\n    $this->app->bind(\n        'App\\Repositories\\Backend\\Role\\RoleRepositoryContract',\n        'App\\Repositories\\Backend\\Role\\EloquentRoleRepository'\n    );\n\n    $this->app->bind(\n        'App\\Repositories\\Backend\\Permission\\PermissionRepositoryContract',\n        'App\\Repositories\\Backend\\Permission\\EloquentPermissionRepository'\n    );\n}\n\u30fb\n\u30fb\n\u30fb\n\nAuthController\u306fApp/Repositories/Frontend/Auth/EloquentAuthenticationRepository.php\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092 $auth \u3068\u3057\u3066\u53d7\u3051\u53d6\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\n//App/Repositories/Frontend/Auth/EloquentAuthenticationRepository.php\n\u30fb\n\u30fb\n\u30fb\nuse App\\Repositories\\Frontend\\User\\UserContract;\n\u30fb\n\u30fb\n\u30fb\npublic function __construct(Socialite $socialite, Guard $auth, UserContract $users) {\n    $this->socialite = $socialite;\n    $this->users = $users;\n    $this->auth = $auth;\n}\n\u30fb\n\u30fb\n\u30fb\npublic function confirmAccount($token) {\n    return $this->users->confirmAccount($token);\n}\n\npublic function resendConfirmationEmail($user_id) {\n    return $this->users->sendConfirmationEmail($user_id);\n}\n\u30fb\n\u30fb\n\u30fb\n\nEloquentAuthenticationRepository.php\u306f $users \u3068\u3057\u3066App/Repositories/Frontend/User/EloquentUserRepository.php\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u3063\u3066\u3044\u308b\n//App/Repositories/Frontend/User/EloquentUserRepository.php\n\npublic function confirmAccount($token) {\n    $user = User::where('confirmation_code', $token)->first();\n\n    if ($user) {\n        if ($user->confirmed == 1)\n            throw new GeneralException(\"Your account is already confirmed.\");\n\n        if ($user->confirmation_code == $token) {\n            $user->confirmed = 1;\n            return $user->save();\n        }\n\n        throw new GeneralException(\"Your confirmation code does not match.\");\n    }\n\n    throw new GeneralException(\"That confirmation code does not exist.\");\n}\n\n    /**\n     * @param $user\n     * @return mixed\n     */\npublic function sendConfirmationEmail($user) {\n    //$user can be user instance or id\n    if (! $user instanceof User)\n        $user = User::findOrFail($user);\n\n    return Mail::send('emails.confirm', ['token' => $user->confirmation_code], function($message) use ($user)\n    {\n        $message->to($user->email, $user->name)->subject(app_name().': Confirm your account!');\n    });\n}\n\n\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306e\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30c8\u95a2\u9023\u306e\u8a18\u8ff0\u306f\u3053\u3053\u3067\u884c\u3046\u3053\u3068\u3068\u306a\u308b\n\u4ee5\u4e0b\u306b\u95a2\u9023\u3059\u308b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u793a\u3057\u3066\u304a\u304f\n\u305d\u308c\u305e\u308c\u3000user_id\u3000\u307e\u305f\u306f\u3000token\u3000\u3092\u3000URL\u3088\u308a\u53d7\u3051\u53d6\u308a\u51e6\u7406\u3057\u305f\u306e\u3061\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3092\u884c\u3063\u3066\u3044\u308b\nGET|HEAD | account/confirm/resend/{user_id} | account.confirm.resend  | App\\Http\\Controllers\\Frontend\\Auth\\AuthController@resendConfirmationEmail\nGET|HEAD | account/confirm/{token}          | account.confirm         | App\\Http\\Controllers\\Frontend\\Auth\\AuthController@confirmAccount\nuse App\\Repositories\\Frontend\\Auth\\AuthenticationContract;\n\u3053\u3053\u3067\u8a2d\u5b9a\n\n\n```php\n//App/Http/Controllers/Frontend/Auth/Authcontroller.php\n\u30fb\n\u30fb\n\u30fb\npublic function __construct(AuthenticationContract $auth)\n{\n\t$this->auth = $auth;\n}\n\n\u30fb\n\u30fb\n\u30fb\n\npublic function confirmAccount($token) {\n\t//Don't know why the exception handler is not catching this\n\ttry {\n\t\t$this->auth->confirmAccount($token);\n\t\treturn redirect()->route('frontend.dashboard')->withFlashSuccess(\"Your account has been successfully confirmed!\");\n\t} catch (GeneralException $e) {\n\t\treturn redirect()->back()->withInput()->withFlashDanger($e->getMessage());\n\t}\n}\n\u30fb\n\u30fb\n\u30fb\n```\n\n```php\n//App/Providers/AccessServiceProvider.php\n\u30fb\n\u30fb\n\u30fb\npublic function registerBindings() {\n\t$this->app->bind(\n\t\t'App\\Repositories\\Frontend\\Auth\\AuthenticationContract',\n\t\t'App\\Repositories\\Frontend\\Auth\\EloquentAuthenticationRepository'\n\t);\n\n\t$this->app->bind(\n\t\t'App\\Repositories\\Frontend\\User\\UserContract',\n\t\t'App\\Repositories\\Frontend\\User\\EloquentUserRepository'\n\t);\n\n\t$this->app->bind(\n\t\t'App\\Repositories\\Backend\\User\\UserContract',\n\t\t'App\\Repositories\\Backend\\User\\EloquentUserRepository'\n\t);\n\n\t$this->app->bind(\n\t\t'App\\Repositories\\Backend\\Role\\RoleRepositoryContract',\n\t\t'App\\Repositories\\Backend\\Role\\EloquentRoleRepository'\n\t);\n\n\t$this->app->bind(\n\t\t'App\\Repositories\\Backend\\Permission\\PermissionRepositoryContract',\n\t\t'App\\Repositories\\Backend\\Permission\\EloquentPermissionRepository'\n\t);\n}\n\u30fb\n\u30fb\n\u30fb\n```\n\nAuthController\u306fApp/Repositories/Frontend/Auth/EloquentAuthenticationRepository.php\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092 $auth \u3068\u3057\u3066\u53d7\u3051\u53d6\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\n\n```php\n//App/Repositories/Frontend/Auth/EloquentAuthenticationRepository.php\n\u30fb\n\u30fb\n\u30fb\nuse App\\Repositories\\Frontend\\User\\UserContract;\n\u30fb\n\u30fb\n\u30fb\npublic function __construct(Socialite $socialite, Guard $auth, UserContract $users) {\n\t$this->socialite = $socialite;\n\t$this->users = $users;\n\t$this->auth = $auth;\n}\n\u30fb\n\u30fb\n\u30fb\npublic function confirmAccount($token) {\n\treturn $this->users->confirmAccount($token);\n}\n\npublic function resendConfirmationEmail($user_id) {\n\treturn $this->users->sendConfirmationEmail($user_id);\n}\n\u30fb\n\u30fb\n\u30fb\n```\n\nEloquentAuthenticationRepository.php\u306f $users \u3068\u3057\u3066App/Repositories/Frontend/User/EloquentUserRepository.php\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d7\u3051\u53d6\u3063\u3066\u3044\u308b\n\n```php\n//App/Repositories/Frontend/User/EloquentUserRepository.php\n\npublic function confirmAccount($token) {\n\t$user = User::where('confirmation_code', $token)->first();\n\n\tif ($user) {\n\t\tif ($user->confirmed == 1)\n\t\t\tthrow new GeneralException(\"Your account is already confirmed.\");\n\n\t\tif ($user->confirmation_code == $token) {\n\t\t\t$user->confirmed = 1;\n\t\t\treturn $user->save();\n\t\t}\n\n\t\tthrow new GeneralException(\"Your confirmation code does not match.\");\n\t}\n\n\tthrow new GeneralException(\"That confirmation code does not exist.\");\n}\n\n\t/**\n\t * @param $user\n\t * @return mixed\n\t */\npublic function sendConfirmationEmail($user) {\n\t//$user can be user instance or id\n\tif (! $user instanceof User)\n\t\t$user = User::findOrFail($user);\n\n\treturn Mail::send('emails.confirm', ['token' => $user->confirmation_code], function($message) use ($user)\n\t{\n\t\t$message->to($user->email, $user->name)->subject(app_name().': Confirm your account!');\n\t});\n}\n```\n\n\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306e\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30c8\u95a2\u9023\u306e\u8a18\u8ff0\u306f\u3053\u3053\u3067\u884c\u3046\u3053\u3068\u3068\u306a\u308b\n\u4ee5\u4e0b\u306b\u95a2\u9023\u3059\u308b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u793a\u3057\u3066\u304a\u304f\n\u305d\u308c\u305e\u308c\u3000user_id\u3000\u307e\u305f\u306f\u3000token\u3000\u3092\u3000URL\u3088\u308a\u53d7\u3051\u53d6\u308a\u51e6\u7406\u3057\u305f\u306e\u3061\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3092\u884c\u3063\u3066\u3044\u308b\n\nGET|HEAD | account/confirm/resend/{user_id} | account.confirm.resend  | App\\Http\\Controllers\\Frontend\\Auth\\AuthController@resendConfirmationEmail\nGET|HEAD | account/confirm/{token}          | account.confirm         | App\\Http\\Controllers\\Frontend\\Auth\\AuthController@confirmAccount\n\n\n\nuse App\\Repositories\\Frontend\\Auth\\AuthenticationContract;\n\u3053\u3053\u3067\u8a2d\u5b9a\n", "tags": ["PHP", "laravel5", "MySQL"]}