{"tags": ["C#", "WPF"], "context": " More than 1 year has passed since last update.\u3044\u308d\u3093\u306a\u30b9\u30ec\u30c3\u30c9\u304b\u3089ObservableCollection\u3092\u64cd\u4f5c\u3059\u308b\u6642\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u3059\u308b\u3068Dispatcher.Invoke\u3068\u304b\u3067\u66f8\u304b\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u306e\u3067\nhttp://okazuki.hatenablog.com/entry/20100112/1263267397\n\u306a\u611f\u3058\u3067\u3084\u3063\u305f\u308a\u3057\u3066\u307e\u3057\u305f\u3002\n\u3051\u3069\u958b\u767a\u3092\u9032\u3081\u3066\u3044\u304f\u3068\u3001\u4e00\u9023\u306e\u51e6\u7406\u3092\u30ed\u30c3\u30af\u3057\u305f\u72b6\u614b\u3067\u884c\u3044\u305f\u3044\u30b1\u30fc\u30b9\u304c\u7d50\u69cb\u3042\u308b\u3093\u3067\u3059\u3088\u306d\u3002\n\u3042\u3068\u306f\u91cd\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u51e6\u7406\u3092Dispathcer\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3044\u305f\u304f\u306a\u3044\u3068\u304d\u3068\u304b\u3002\n\u5909\u66f4\u3068\u524a\u9664\u3068\u8ffd\u52a0\u3092\u4e00\u3064\u306e\u51e6\u7406\u3068\u3057\u3066\u884c\u3044\u305f\u3044\u3068\u304b\u3002\nlock(hogelock)\n{\n   // \u5909\u66f4\u51e6\u7406\n   // \u524a\u9664\u51e6\u7406\n   // \u8ffd\u52a0\u51e6\u7406\n}\n\u3068\u304b\u66f8\u3051\u3070\u3088\u3044\u3093\u3067\u3059\u3051\u3069\u3001\u30ed\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7ba1\u7406\u304c\u30fb\u30fb\u30fb\u30fb\n\u3044\u308d\u3044\u308d\u306a\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u3057\u305f\u3044\u3002\n\u8907\u6570\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u306b\u3066\u30c7\u30fc\u30bf\u306e\u6574\u5408\u6027\u3092\u78ba\u4fdd\u3057\u305f\u3044\u3002\n\u3068\u3044\u3046\u8981\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081\u306e\u4ed8\u3051\u713c\u5203\u3067\u3059\u3002\n\n    public class TransactionDispatchObservableCollection<T> : ObservableCollection<T>\n    {\n        /// <summary>\n        /// \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u30e3\u30fc\n        /// </summary>\n        public Dispatcher Dispatch { get; set; }\n\n        public DispatcherPriority Priority { get; set; } = DispatcherPriority.Background;\n\n        private object TransactLock = new object();\n\n        #region \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n\n        public TransactionDispatchObservableCollection(Dispatcher Dispatch)\n        {\n            this.Dispatch = Dispatch;\n        }\n        public TransactionDispatchObservableCollection(Dispatcher Dispatch, IEnumerable<T> collection) : base(collection)\n        {\n            this.Dispatch = Dispatch;\n        }\n\n        #endregion\n\n        /// <summary>\n        /// \u95a2\u9023\u51e6\u7406\u3092\u6392\u4ed6\u5236\u5fa1\u3057\u306a\u304c\u3089\u5b9f\u884c\u3057\u307e\u3059\u3002\n        /// </summary>\n        /// <param name=\"action\"></param>\n        public void TransactExcution(Action action)\n        {\n            lock (TransactLock)\n            {\n                action();\n            }\n        }\n        /// <summary>\n        /// \u95a2\u9023\u51e6\u7406\u3092\u6392\u4ed6\u5236\u5fa1\u3057\u306a\u304c\u3089\u5b9f\u884c\u3057\u307e\u3059\u3002(\u975e\u540c\u671f)\n        /// </summary>\n        public async Task TransactExcutionAsync(Action action)\n        {\n            await Task.Run(() => {\n                lock (TransactLock)\n                {\n                    action();\n                }\n            });\n        }\n        protected override void ClearItems()\n        {\n            TransactExcution(() => base.ClearItems());\n        }\n        protected override void InsertItem(int index, T item)\n        {\n            TransactExcution(() => base.InsertItem(index, item));\n        }\n        protected override void MoveItem(int oldIndex, int newIndex)\n        {\n            TransactExcution(() => base.MoveItem(oldIndex, newIndex));\n        }\n        protected override void SetItem(int index, T item)\n        {\n            TransactExcution(() => base.SetItem(index, item)); \n        }\n        protected override void RemoveItem(int index)\n        {\n            TransactExcution(() => base.RemoveItem(index));\n        }\n\n        protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e)\n        {\n            if (this.Dispatch.Thread == Thread.CurrentThread)\n            {\n                base.OnCollectionChanged(e);\n            }\n            else\n            {\n                Action<NotifyCollectionChangedEventArgs> changed = OnCollectionChanged;\n                this.Dispatch.Invoke(changed, Priority, e);\n            }\n        }\n    }\n\n\u3053\u3093\u306a\u611f\u3058\u3067\n\nawait list.TransactExcutionAsync(() =>\n                {\n                    if (!list.Any((x => x.Name == \"Test\")))\n                    {\n                        list.Add(model);\n                    }\n                });\n\n\n\u8272\u3005\u30c0\u30e1\u306a\u3093\u3067\u3059\u304c\u9650\u5b9a\u7528\u3068\u3067\u3042\u308c\u3070\u4f7f\u3048\u308b\u304b\u306a\u3041\u3068\u3002\n\u3044\u308d\u3093\u306a\u30b9\u30ec\u30c3\u30c9\u304b\u3089ObservableCollection\u3092\u64cd\u4f5c\u3059\u308b\u6642\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u3059\u308b\u3068Dispatcher.Invoke\u3068\u304b\u3067\u66f8\u304b\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u306e\u3067\nhttp://okazuki.hatenablog.com/entry/20100112/1263267397\n\u306a\u611f\u3058\u3067\u3084\u3063\u305f\u308a\u3057\u3066\u307e\u3057\u305f\u3002\n\n\u3051\u3069\u958b\u767a\u3092\u9032\u3081\u3066\u3044\u304f\u3068\u3001\u4e00\u9023\u306e\u51e6\u7406\u3092\u30ed\u30c3\u30af\u3057\u305f\u72b6\u614b\u3067\u884c\u3044\u305f\u3044\u30b1\u30fc\u30b9\u304c\u7d50\u69cb\u3042\u308b\u3093\u3067\u3059\u3088\u306d\u3002\n\u3042\u3068\u306f\u91cd\u3044\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u51e6\u7406\u3092Dispathcer\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3044\u305f\u304f\u306a\u3044\u3068\u304d\u3068\u304b\u3002\n\u5909\u66f4\u3068\u524a\u9664\u3068\u8ffd\u52a0\u3092\u4e00\u3064\u306e\u51e6\u7406\u3068\u3057\u3066\u884c\u3044\u305f\u3044\u3068\u304b\u3002\nlock(hogelock)\n{\n   // \u5909\u66f4\u51e6\u7406\n   // \u524a\u9664\u51e6\u7406\n   // \u8ffd\u52a0\u51e6\u7406\n}\n\u3068\u304b\u66f8\u3051\u3070\u3088\u3044\u3093\u3067\u3059\u3051\u3069\u3001\u30ed\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7ba1\u7406\u304c\u30fb\u30fb\u30fb\u30fb\n\n\u3044\u308d\u3044\u308d\u306a\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u3057\u305f\u3044\u3002\n\u8907\u6570\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u64cd\u4f5c\u306b\u3066\u30c7\u30fc\u30bf\u306e\u6574\u5408\u6027\u3092\u78ba\u4fdd\u3057\u305f\u3044\u3002\n\u3068\u3044\u3046\u8981\u4ef6\u3092\u6e80\u305f\u3059\u305f\u3081\u306e\u4ed8\u3051\u713c\u5203\u3067\u3059\u3002\n\n```csharp\n\n    public class TransactionDispatchObservableCollection<T> : ObservableCollection<T>\n    {\n        /// <summary>\n        /// \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u30e3\u30fc\n        /// </summary>\n        public Dispatcher Dispatch { get; set; }\n\n        public DispatcherPriority Priority { get; set; } = DispatcherPriority.Background;\n\n        private object TransactLock = new object();\n\n        #region \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n\n        public TransactionDispatchObservableCollection(Dispatcher Dispatch)\n        {\n            this.Dispatch = Dispatch;\n        }\n        public TransactionDispatchObservableCollection(Dispatcher Dispatch, IEnumerable<T> collection) : base(collection)\n        {\n            this.Dispatch = Dispatch;\n        }\n\n        #endregion\n\n        /// <summary>\n        /// \u95a2\u9023\u51e6\u7406\u3092\u6392\u4ed6\u5236\u5fa1\u3057\u306a\u304c\u3089\u5b9f\u884c\u3057\u307e\u3059\u3002\n        /// </summary>\n        /// <param name=\"action\"></param>\n        public void TransactExcution(Action action)\n        {\n            lock (TransactLock)\n            {\n                action();\n            }\n        }\n        /// <summary>\n        /// \u95a2\u9023\u51e6\u7406\u3092\u6392\u4ed6\u5236\u5fa1\u3057\u306a\u304c\u3089\u5b9f\u884c\u3057\u307e\u3059\u3002(\u975e\u540c\u671f)\n        /// </summary>\n        public async Task TransactExcutionAsync(Action action)\n        {\n            await Task.Run(() => {\n                lock (TransactLock)\n                {\n                    action();\n                }\n            });\n        }\n        protected override void ClearItems()\n        {\n            TransactExcution(() => base.ClearItems());\n        }\n        protected override void InsertItem(int index, T item)\n        {\n            TransactExcution(() => base.InsertItem(index, item));\n        }\n        protected override void MoveItem(int oldIndex, int newIndex)\n        {\n            TransactExcution(() => base.MoveItem(oldIndex, newIndex));\n        }\n        protected override void SetItem(int index, T item)\n        {\n            TransactExcution(() => base.SetItem(index, item)); \n        }\n        protected override void RemoveItem(int index)\n        {\n            TransactExcution(() => base.RemoveItem(index));\n        }\n\n        protected override void OnCollectionChanged(NotifyCollectionChangedEventArgs e)\n        {\n            if (this.Dispatch.Thread == Thread.CurrentThread)\n            {\n                base.OnCollectionChanged(e);\n            }\n            else\n            {\n                Action<NotifyCollectionChangedEventArgs> changed = OnCollectionChanged;\n                this.Dispatch.Invoke(changed, Priority, e);\n            }\n        }\n    }\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\n\n```csharp\n\nawait list.TransactExcutionAsync(() =>\n                {\n                    if (!list.Any((x => x.Name == \"Test\")))\n                    {\n                        list.Add(model);\n                    }\n                });\n\n```\n\n\u8272\u3005\u30c0\u30e1\u306a\u3093\u3067\u3059\u304c\u9650\u5b9a\u7528\u3068\u3067\u3042\u308c\u3070\u4f7f\u3048\u308b\u304b\u306a\u3041\u3068\u3002\n"}