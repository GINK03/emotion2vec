{"tags": ["C#", "SQLServer"], "context": " More than 1 year has passed since last update.\n\n\u521d\u3081\u306b\nC#\u3067 Bulk Insert \u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u6210\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u304c\u3001\u30c7\u30fc\u30bf\u306e\u5909\u63db\u304c\u5fc5\u8981\u306a\u5834\u5408\u3001DataSet\u306b\u3044\u308c\u308b\u5fc5\u8981\u304c\u3067\u3066\u30e1\u30e2\u30ea\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\nIEnumerable\u3092\u4f7f\u3048\u3070\u3001yield return \u3067\u30c7\u30fc\u30bf\u3092\u8fd4\u3059\u3068\u30e1\u30e2\u30ea\u3092\u3042\u307e\u308a\u4f7f\u7528\u305b\u305a\u306b\u5b9f\u884c\u304c\u3067\u304d\u308b\u3002\n\u8abf\u3079\u308b\u3068\u30d6\u30ed\u30b0\u300cConverting IEnumerable to IDataReader\u300d\u3092\u898b\u3064\u3051\u305f\u3002\nSqlBulkCopy \u3092\u4f7f\u3046\u305f\u3081\u306e\u6700\u5c0f\u9650\u306eIDataReader\u306e\u5b9f\u88c5\u304c\u8f09\u3063\u3066\u3044\u3066\u5927\u5909\u53c2\u8003\u306b\u306a\u3063\u305f\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Reflection;\nusing System.Threading.Tasks;\nusing SampleIDataReader.Properties;\n\nnamespace SampleIDataReader\n{\n    static class DataReaderExtensions\n    {\n        public static IDataReader AsDataReader<TSource>(this\nIEnumerable<TSource> source)\n        {\n            return EnumerableDataReader.Create(source);\n        }\n    }\n\n    internal static class EnumerableDataReader\n    {\n        public static IDataReader Create<TSource>(IEnumerable<TSource>\nsource)\n        {\n            return new EnumerableDataReader<TSource>(source);\n        }\n\n    }\n\n    internal class EnumerableDataReader<TSource> : IDataReader\n    {\n        private readonly IEnumerator<TSource> _source;\n        private readonly List<PropertyInfo> listProp = new\nList<PropertyInfo>();\n\n        internal EnumerableDataReader(IEnumerable<TSource> source)\n        {\n            _source = source.GetEnumerator();\n            foreach (var prop in typeof(TSource).GetProperties())\n            {\n                listProp.Add(prop);\n            }\n        }\n\n        public bool Read()\n        {\n            return _source.MoveNext();\n        }\n\n        public void Close()\n        {\n        }\n\n        public void Dispose()\n        {\n        }\n\n        public int FieldCount\n        {\n            get { return listProp.Count; }\n        }\n\n        public object GetValue(int i)\n        {\n            return listProp[i].GetValue(_source.Current);\n        }\n\n        public int Depth\n        {\n            get { throw new NotImplementedException(); }\n        }\n\n        // \u6b8b\u308a\u306e\u30e1\u30bd\u30c3\u30c9\u3082Depth\u3068\u540c\u69d8 NotImplementedException \u3092\u767a\u751f\u3055\u305b\u3066\u3044\u308b\n\n    }\n\n    class SampleTable\n    {\n        public int Field1 { get; set; }\n        public string Field2 { get; set; }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var arr = new SampleTable[]\n            {\n                new SampleTable{Field1 = 1, Field2 = \"Field1\"},\n                new SampleTable{Field1 = 2, Field2 = \"Field2\"},\n                new SampleTable{Field1 = 3, Field2 = \"Field3\"},\n            };\n\n            using (var bc = new\nSqlBulkCopy(Settings.Default.xxxConnectionString))\n            {\n                bc.DestinationTableName = \"dbo.SampleTable\";\n                bc.WriteToServer(arr.AsDataReader());\n            }\n\n        }\n    }\n}\n\n\n\n\n\n#\u521d\u3081\u306b\n[C#\u3067 Bulk Insert \u306e\u30b5\u30f3\u30d7\u30eb](http://qiita.com/st450/items/e8453c4a53d1e80b8111)\u3092\u4f5c\u6210\u3057\u3066\u5229\u7528\u3057\u3066\u3044\u308b\u304c\u3001\u30c7\u30fc\u30bf\u306e\u5909\u63db\u304c\u5fc5\u8981\u306a\u5834\u5408\u3001DataSet\u306b\u3044\u308c\u308b\u5fc5\u8981\u304c\u3067\u3066\u30e1\u30e2\u30ea\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\nIEnumerable\u3092\u4f7f\u3048\u3070\u3001yield return \u3067\u30c7\u30fc\u30bf\u3092\u8fd4\u3059\u3068\u30e1\u30e2\u30ea\u3092\u3042\u307e\u308a\u4f7f\u7528\u305b\u305a\u306b\u5b9f\u884c\u304c\u3067\u304d\u308b\u3002\n\u8abf\u3079\u308b\u3068\u30d6\u30ed\u30b0\u300cConverting IEnumerable<T> to IDataReader\u300d\u3092\u898b\u3064\u3051\u305f\u3002\nSqlBulkCopy \u3092\u4f7f\u3046\u305f\u3081\u306e\u6700\u5c0f\u9650\u306eIDataReader\u306e\u5b9f\u88c5\u304c\u8f09\u3063\u3066\u3044\u3066\u5927\u5909\u53c2\u8003\u306b\u306a\u3063\u305f\u3002\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n```csharp\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Reflection;\nusing System.Threading.Tasks;\nusing SampleIDataReader.Properties;\n\nnamespace SampleIDataReader\n{\n    static class DataReaderExtensions\n    {\n        public static IDataReader AsDataReader<TSource>(this\nIEnumerable<TSource> source)\n        {\n            return EnumerableDataReader.Create(source);\n        }\n    }\n\n    internal static class EnumerableDataReader\n    {\n        public static IDataReader Create<TSource>(IEnumerable<TSource>\nsource)\n        {\n            return new EnumerableDataReader<TSource>(source);\n        }\n\n    }\n\n    internal class EnumerableDataReader<TSource> : IDataReader\n    {\n        private readonly IEnumerator<TSource> _source;\n        private readonly List<PropertyInfo> listProp = new\nList<PropertyInfo>();\n\n        internal EnumerableDataReader(IEnumerable<TSource> source)\n        {\n            _source = source.GetEnumerator();\n            foreach (var prop in typeof(TSource).GetProperties())\n            {\n                listProp.Add(prop);\n            }\n        }\n\n        public bool Read()\n        {\n            return _source.MoveNext();\n        }\n\n        public void Close()\n        {\n        }\n\n        public void Dispose()\n        {\n        }\n\n        public int FieldCount\n        {\n            get { return listProp.Count; }\n        }\n\n        public object GetValue(int i)\n        {\n            return listProp[i].GetValue(_source.Current);\n        }\n\n        public int Depth\n        {\n            get { throw new NotImplementedException(); }\n        }\n\n        // \u6b8b\u308a\u306e\u30e1\u30bd\u30c3\u30c9\u3082Depth\u3068\u540c\u69d8 NotImplementedException \u3092\u767a\u751f\u3055\u305b\u3066\u3044\u308b\n\n    }\n\n    class SampleTable\n    {\n        public int Field1 { get; set; }\n        public string Field2 { get; set; }\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var arr = new SampleTable[]\n            {\n                new SampleTable{Field1 = 1, Field2 = \"Field1\"},\n                new SampleTable{Field1 = 2, Field2 = \"Field2\"},\n                new SampleTable{Field1 = 3, Field2 = \"Field3\"},\n            };\n\n            using (var bc = new\nSqlBulkCopy(Settings.Default.xxxConnectionString))\n            {\n                bc.DestinationTableName = \"dbo.SampleTable\";\n                bc.WriteToServer(arr.AsDataReader());\n            }\n\n        }\n    }\n}\n\n\n\n\n```\n"}