{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nJava\u306e\u30c6\u30b9\u30c8\u30e6\u30cb\u30c3\u30c8\u3068\u3057\u3066\u3001Junit\u306f\u5f53\u305f\u308a\u524d\u306b\u4f7f\u7528\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\npublic\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u306f\u5f53\u7136\u3067\u3059\u304c\u3001private,protected\u30e1\u30bd\u30c3\u30c9\u306e\n\u30c6\u30b9\u30c8\u306f\u304a\u308d\u305d\u304b\u306b\u306a\u308a\u304c\u3061\u3067\u3059\u3002\n\u30db\u30ef\u30a4\u30c8\u30c6\u30b9\u30c8\u306e\u5b9f\u65bd\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306e\u7fa9\u52d9\u3092\u601d\u3044\u307e\u3059\u306e\u3067\u3001\n\u30c6\u30b9\u30c8\u306e\u5b9f\u65bd\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u305d\u3053\u3067\u3001\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u5b9f\u65bd\u3092\u884c\u3046\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u7528\u306e\u30b3\u30fc\u30c9\u3092\u7528\u610f\n\u307e\u305a\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u3001\u53c2\u8003\u307e\u3067\u306b\u3002\n\nSample.java\npublic Sample {\n    public int add(int x, int y) {\n        return (x + y);\n    }\n\n    protected int minus(int x, int y) {\n        return (x - y);\n    }\n\n    private int multiplication(int x, int y) {\n        return (x * y);\n    }\n}\n\n\n\npublic\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\n\nSampleTest.java\nimport org.junit.Test;\n\npublic class SampleTest {\n    @Test\n    public void testEqual() {\n        Sample sample = new Sample();\n        int expected = 10;\n        int actual = sample.add(8, 2);\n\n        assertEquals(expected, actual);\n    }\n}\n\n\n\u5358\u7d14\u306a\u8db3\u3057\u7b97\u306e\u30c6\u30b9\u30c8\u3067\u3059\u3002\n\u6210\u529f\u4f8b\u306e\u307f\u3067\u3059\u304c\u3001\u3054\u304f\u666e\u901a\u306a\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\nprotected,private\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u3001protected,private\u30e1\u30bd\u30c3\u30c9\u3067\u304d\u306a\u3044\u305f\u3081\u3001\n\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u547c\u3070\u308c\u308b\u65b9\u6cd5\u3092\u4f7f\u7528\u3057\u3066\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u53c2\u8003\nSample sample = new Sample();\nMethod method = Sample.class.getDeclaredMethod(\"<\u30e1\u30bd\u30c3\u30c9\u540d>\", \u5f15\u6570\u306e\u578b1, \u5f15\u6570\u306e\u578b2...);\nmethod.setAccessible(true);\nint actual = (\u623b\u308a\u5024\u306e\u578b)method.invoke(<\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9>,\u5f15\u65701,\u5f15\u65702...);\n\n\n\u3069\u306e\u30af\u30e9\u30b9\u306b\u3082\u5b58\u5728\u3059\u308bclass\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001getDeclaredMethod()\u30e1\u30bd\u30c3\u30c9\u3067\n\u30e1\u30bd\u30c3\u30c9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u53d6\u5f97\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306esetAccessible(true)\u3068\u3057\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u5916\u90e8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u3092\u8a31\u53ef\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3067\u3059\u3002\n\u305d\u306e\u5f8c\u3001method.invoke()\u30e1\u30bd\u30c3\u30c9\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nSampleTest.java\nimport static org.junit.Assert.*;\n\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\n\nimport org.junit.Test;\n\npublic class SampleTest {\n\n    @Test\n    public void testMinus()\n        throws NoSuchMethodException,\n        SecurityException,\n        IllegalAccessException,\n        IllegalArgumentException,\n        InvocationTargetException\n    {\n        Sample sample = new Sample();\n        int expected = 6;\n\n        Method method = Sample.class.getDeclaredMethod(\"minus\", int.class, int.class);\n        method.setAccessible(true);\n\n        int actual = (int)method.invoke(sample, 8, 2);\n\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void testMultiplication()\n        throws NoSuchMethodException,\n        SecurityException,\n        IllegalAccessException,\n        IllegalArgumentException,\n        InvocationTargetException\n    {\n        Sample sample = new Sample();\n        int expected = 16;\n\n        Method method = Sample.class.getDeclaredMethod(\"multiplication\", int.class, int.class);\n        method.setAccessible(true);\n\n        int actual = (int)method.invoke(sample, 8, 2);\n\n        assertEquals(expected, actual);\n    }\n\n\n\n\u304a\u308f\u308a\u306b\n\u3053\u308c\u3067\u3001\u4f5c\u6210\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306f\u3059\u3079\u3066\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306b\u3068\u3063\u3066\u3001\u30d0\u30b0\u306f\u6700\u5927\u306e\u6575\u3067\u3059\u3002\n\u53ef\u80fd\u306a\u9650\u308a\u30d0\u30b0\u3092\u53d6\u308a\u9664\u304f\u52aa\u529b\u3092\u3057\u307e\u3057\u3087\u3046\u3002\n#\u306f\u3058\u3081\u306b\nJava\u306e\u30c6\u30b9\u30c8\u30e6\u30cb\u30c3\u30c8\u3068\u3057\u3066\u3001Junit\u306f\u5f53\u305f\u308a\u524d\u306b\u4f7f\u7528\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\npublic\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u306f\u5f53\u7136\u3067\u3059\u304c\u3001private,protected\u30e1\u30bd\u30c3\u30c9\u306e\n\u30c6\u30b9\u30c8\u306f\u304a\u308d\u305d\u304b\u306b\u306a\u308a\u304c\u3061\u3067\u3059\u3002\n\n\u30db\u30ef\u30a4\u30c8\u30c6\u30b9\u30c8\u306e\u5b9f\u65bd\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306e\u7fa9\u52d9\u3092\u601d\u3044\u307e\u3059\u306e\u3067\u3001\n\u30c6\u30b9\u30c8\u306e\u5b9f\u65bd\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u305d\u3053\u3067\u3001\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u5b9f\u65bd\u3092\u884c\u3046\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n#\u30c6\u30b9\u30c8\u7528\u306e\u30b3\u30fc\u30c9\u3092\u7528\u610f\n\u307e\u305a\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u3001\u53c2\u8003\u307e\u3067\u306b\u3002\n\n```lang:Sample.java\npublic Sample {\n    public int add(int x, int y) {\n        return (x + y);\n    }\n\n    protected int minus(int x, int y) {\n        return (x - y);\n    }\n\n    private int multiplication(int x, int y) {\n        return (x * y);\n    }\n}\n```\n\n#public\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\n```lang:SampleTest.java\nimport org.junit.Test;\n\npublic class SampleTest {\n    @Test\n    public void testEqual() {\n        Sample sample = new Sample();\n        int expected = 10;\n        int actual = sample.add(8, 2);\n\n        assertEquals(expected, actual);\n    }\n}\n```\n\n\u5358\u7d14\u306a\u8db3\u3057\u7b97\u306e\u30c6\u30b9\u30c8\u3067\u3059\u3002\n\u6210\u529f\u4f8b\u306e\u307f\u3067\u3059\u304c\u3001\u3054\u304f\u666e\u901a\u306a\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n#protected,private\u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u3001protected,private\u30e1\u30bd\u30c3\u30c9\u3067\u304d\u306a\u3044\u305f\u3081\u3001\n\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u547c\u3070\u308c\u308b\u65b9\u6cd5\u3092\u4f7f\u7528\u3057\u3066\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```lang:\u53c2\u8003\nSample sample = new Sample();\nMethod method = Sample.class.getDeclaredMethod(\"<\u30e1\u30bd\u30c3\u30c9\u540d>\", \u5f15\u6570\u306e\u578b1, \u5f15\u6570\u306e\u578b2...);\nmethod.setAccessible(true);\nint actual = (\u623b\u308a\u5024\u306e\u578b)method.invoke(<\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9>,\u5f15\u65701,\u5f15\u65702...);\n```\n\u3069\u306e\u30af\u30e9\u30b9\u306b\u3082\u5b58\u5728\u3059\u308bclass\u5909\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001`getDeclaredMethod()`\u30e1\u30bd\u30c3\u30c9\u3067\n\u30e1\u30bd\u30c3\u30c9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u53d6\u5f97\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306e`setAccessible(true)`\u3068\u3057\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u5916\u90e8\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u3092\u8a31\u53ef\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3067\u3059\u3002\n\u305d\u306e\u5f8c\u3001`method.invoke()`\u30e1\u30bd\u30c3\u30c9\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\u5b9f\u969b\u306b\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```lang:SampleTest.java\nimport static org.junit.Assert.*;\n\nimport java.lang.reflect.InvocationTargetException;\nimport java.lang.reflect.Method;\n\nimport org.junit.Test;\n\npublic class SampleTest {\n\n    @Test\n    public void testMinus()\n        throws NoSuchMethodException,\n        SecurityException,\n        IllegalAccessException,\n        IllegalArgumentException,\n        InvocationTargetException\n    {\n        Sample sample = new Sample();\n        int expected = 6;\n\n        Method method = Sample.class.getDeclaredMethod(\"minus\", int.class, int.class);\n        method.setAccessible(true);\n\n        int actual = (int)method.invoke(sample, 8, 2);\n\n        assertEquals(expected, actual);\n    }\n\n    @Test\n    public void testMultiplication()\n        throws NoSuchMethodException,\n        SecurityException,\n        IllegalAccessException,\n        IllegalArgumentException,\n        InvocationTargetException\n    {\n        Sample sample = new Sample();\n        int expected = 16;\n\n        Method method = Sample.class.getDeclaredMethod(\"multiplication\", int.class, int.class);\n        method.setAccessible(true);\n\n        int actual = (int)method.invoke(sample, 8, 2);\n\n        assertEquals(expected, actual);\n    }\n```\n\n#\u304a\u308f\u308a\u306b\n\u3053\u308c\u3067\u3001\u4f5c\u6210\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u306f\u3059\u3079\u3066\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306b\u3068\u3063\u3066\u3001\u30d0\u30b0\u306f\u6700\u5927\u306e\u6575\u3067\u3059\u3002\n\u53ef\u80fd\u306a\u9650\u308a\u30d0\u30b0\u3092\u53d6\u308a\u9664\u304f\u52aa\u529b\u3092\u3057\u307e\u3057\u3087\u3046\u3002\n\n    \n", "tags": ["Java", "JUnit"]}