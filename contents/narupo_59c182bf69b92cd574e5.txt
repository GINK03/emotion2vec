{"tags": ["\u8a2d\u8a08", "\u30e1\u30e2"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u3000\u606f\u629c\u304d\u306b\u66f8\u3044\u3066\u307e\u3059\u3002\u540d\u79f0\u306f\u9069\u5f53\u3002\u504f\u898b\u591a\u3081\u3002\u30b3\u30fc\u30c9\u306f\u30c6\u30b9\u30c8\u3057\u3066\u307e\u305b\u3093\u3002\n\n\u4f7f\u3044\u3084\u3059\u3044\u8a2d\u8a08\n\nfopen\n\u3000FILE \u306e\u8a73\u7d30\u306f\u96a0\u853d\u3055\u308c\u3066\u304a\u308a\u3001\u95a2\u6570\u306e\u63a5\u982d\u8f9e\u306b\u306f file \u306e f\u3002\u7d50\u679c\u3068\u30a8\u30e9\u30fc\u306f\u623b\u308a\u5024\u3067\u53d6\u5f97\u3059\u308b\u304c\u3001fgets \u306e\u3088\u3046\u306b\u623b\u308a\u5024\u3060\u3051\u3067\u306f\u5224\u65ad\u3067\u304d\u306a\u3044\u95a2\u6570\u3082\u542b\u307e\u308c\u308b\u3002\u5b9f\u5f15\u6570\u306e\u9806\u756a\u304c\u4e0d\u7d71\u4e00\u3067\u3042\u308b\u3053\u3068\u4ee5\u5916\u306f\u4f7f\u3044\u3084\u3059\u3044\u3002\u304b\u306a\u308a\u6614\u304b\u3089\u3042\u308b\u8a2d\u8a08\u3060\u3051\u3069\u3001\u8a2d\u8a08\u8005\u304c\u8ab0\u306a\u306e\u304b\u304c\u6c17\u306b\u306a\u308b\u3002\n\nC\nFILE *fin = fopen(path, mode);\nif (!fin) {\n    // error\n}\n\nif (!fgets(buf, bufsz, fin)) {\n    // error or end of file\n}\n\nif (fclose(fin) != 0) {\n    // error\n}\n\n\n\n\nDefault constructor\n\u3000\u4f55\u3060\u304b\u3093\u3060\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u30fb\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u4e00\u756a\u4f7f\u3044\u52dd\u624b\u304c\u826f\u3044\u6c17\u304c\u3059\u308b\u3057\u3001\u79fb\u690d\u6027\u3082\u9ad8\u3044\u3068\u601d\u3046\u3002\u8a2d\u8a08\u521d\u671f\u306f\u7a4d\u6975\u7684\u306b\u4f7f\u3046\u3002\u4eee\u5f15\u6570\u3092\u4f34\u308f\u305a\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u521d\u671f\u5316\u3059\u308b\u3060\u3051\u306e\u69cb\u7bc9\u3002\n\nPython3\nclass Person():\n    def __init__(self):\n        self._name = ''\n        self._age = 0\n\n\n\nJavaScript\nvar Person = function() {\n    this._name = '';\n    this._age = 0;\n};\n\n\n\nC++\nclass Person {\nprivate:\n    std::string _name;\n    int _age;\n\npublic:\n    Person()\n        : _name()\n        , _age() {\n    }\n};\n\n\n\n\nC\nstruct person *\npersonnew(void) {\n    struct person *self = calloc(1, sizeof(*self));\n    if (!self) {\n        return NULL;\n    }\n\n    self->_name = \"\";\n    self->_age = 0;\n\n    return self;\n}\n\n\n\nAgency constructor\n\u3000\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u4ee3\u7406\u95a2\u6570\u3002\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u5236\u7d04\u304c\u591a\u304f\u3001\u67d4\u8edf\u6027\u304c\u306a\u3044\u3002\u305d\u306e\u305f\u3081\u623b\u308a\u5024\u3084\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u305b\u308b\u4ee3\u7406\u306e\u95a2\u6570\u3092\u7528\u610f\u3057\u3066\u3001\u69cb\u7bc9\u6642\u306b\u4f7f\u7528\u3059\u308b\u3002\u547c\u3073\u51fa\u3057\u5fd8\u308c\u306e\u30d2\u30e5\u30fc\u30de\u30f3\u30a8\u30e9\u30fc\u304c\u4ed8\u3044\u3066\u56de\u308b\u306e\u3068\u3001\u624b\u9593\u304c\u5897\u3048\u308b\u306e\u3067\u4f7f\u7528\u5834\u9762\u3092\u9078\u3076\u3002\n\nPython3\nclass Person():\n    def __init__(self):\n        self._name = ''\n        self._age = 0\n\n    def init(self, name, age):\n        self._name = name\n        self._age = age\n        return self.validate()\n\nclass Parser():\n    def __init__(self):\n        self._toks = []\n\n    def parse(self, srcstr):\n        self._toks = srcstr.split(' ')\n        return True\n\nperson = Person()\nif not person.init('name', 10):\n    # failed to construct\n    pass\n\nparser = Parser()\nif not parser.parse('source'):\n    # failed to parse\n    pass\n\n\n\nTree composition\n\u3000\u30c4\u30ea\u30fc\u69cb\u9020\u72b6\u306e\u5408\u6210\u3002Bomb \u306f 1 \u3064\u3067\u306f\u306a\u304f 2 \u3064\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u5408\u6210\u3055\u308c\u308b\u30023 \u3064\u306b\u306a\u308b\u3068\u591a\u3044\u3002\u4f55\u6545\u304b\u306f\u308f\u304b\u3089\u306a\u3044\u304c\u30d0\u30e9\u30f3\u30b9\u304c\u53d6\u308a\u3084\u3059\u3044\u8a2d\u8a08\u3002\u6614\u304b\u3089\u4e09\u811a\u3068\u304b\u4e09\u3064\u5df4\u3068\u304b\u4e09\u4eba\u5bc4\u308c\u3070\u6587\u6b8a\u306e\u77e5\u6075\u3068\u304b\u3001\u3053\u306e\u69cb\u9020\u306f\u5b89\u5b9a\u611f\u304c\u3042\u308b\u3002\n\nTree\n     Bomb\n    /    \\\n  Plug  Timer\n\n\n\nPython3\nclass Plug():\n    def __init__(self):\n        pass\n\nclass Timer():\n    def __init__(self):\n        pass\n\nclass Bomb():\n    def __init__(self, plug, timer):\n        self._plug = plug\n        self._timer = timer\n\ndef createbomb():\n    plug = Plug()\n    timer = Timer()\n    bomb = Bomb(plug, timer)\n    return bomb\n\n\n\n\nValidate method\n\u3000throw \u3067\u30b8\u30e3\u30f3\u30d7\u3055\u305b\u308b\u3068\u30b9\u30c3\u30ad\u30ea\u66f8\u3051\u305f\u3002\n/**\n * http://qiita.com/Layzie/items/465e715dae14e2f601de\n *\n */\nns.is = function(type, obj) {\n    var clas = Object.prototype.toString.call(obj).slice(8, -1);\n    return obj !== undefined && obj !== null && clas.toLowerCase() === type.toLowerCase();\n};\n\nns.User = function() {\n    this.name = null;\n    this.age = null;\n};\n\nns.User.prototype.validate = function() {\n    try {\n        if (!ns.is('string', this.name)) {\n            throw 'name \"' + this.name + '\"';\n        }\n\n        var age = parseInt(this.age);\n        if (isNaN(age)) {\n            throw 'age \"' + this.age + '\"';\n        }\n        this.age = age;\n\n    } catch (e) {\n        console.error('User: validate error: invalid ' + e);\n        return false;\n    }\n\n    return true;\n};\n\n\n# \u306f\u3058\u3081\u306b\n\n\u3000\u606f\u629c\u304d\u306b\u66f8\u3044\u3066\u307e\u3059\u3002\u540d\u79f0\u306f\u9069\u5f53\u3002\u504f\u898b\u591a\u3081\u3002\u30b3\u30fc\u30c9\u306f\u30c6\u30b9\u30c8\u3057\u3066\u307e\u305b\u3093\u3002\n\n\n## \u4f7f\u3044\u3084\u3059\u3044\u8a2d\u8a08\n\n### fopen\n\n\u3000FILE \u306e\u8a73\u7d30\u306f\u96a0\u853d\u3055\u308c\u3066\u304a\u308a\u3001\u95a2\u6570\u306e\u63a5\u982d\u8f9e\u306b\u306f file \u306e f\u3002\u7d50\u679c\u3068\u30a8\u30e9\u30fc\u306f\u623b\u308a\u5024\u3067\u53d6\u5f97\u3059\u308b\u304c\u3001fgets \u306e\u3088\u3046\u306b\u623b\u308a\u5024\u3060\u3051\u3067\u306f\u5224\u65ad\u3067\u304d\u306a\u3044\u95a2\u6570\u3082\u542b\u307e\u308c\u308b\u3002\u5b9f\u5f15\u6570\u306e\u9806\u756a\u304c\u4e0d\u7d71\u4e00\u3067\u3042\u308b\u3053\u3068\u4ee5\u5916\u306f\u4f7f\u3044\u3084\u3059\u3044\u3002\u304b\u306a\u308a\u6614\u304b\u3089\u3042\u308b\u8a2d\u8a08\u3060\u3051\u3069\u3001\u8a2d\u8a08\u8005\u304c\u8ab0\u306a\u306e\u304b\u304c\u6c17\u306b\u306a\u308b\u3002\n\n```c:C\nFILE *fin = fopen(path, mode);\nif (!fin) {\n    // error\n}\n\nif (!fgets(buf, bufsz, fin)) {\n    // error or end of file\n}\n\nif (fclose(fin) != 0) {\n    // error\n}\n\n```\n\n### Default constructor\n\n\u3000\u4f55\u3060\u304b\u3093\u3060\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u30fb\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u4e00\u756a\u4f7f\u3044\u52dd\u624b\u304c\u826f\u3044\u6c17\u304c\u3059\u308b\u3057\u3001\u79fb\u690d\u6027\u3082\u9ad8\u3044\u3068\u601d\u3046\u3002\u8a2d\u8a08\u521d\u671f\u306f\u7a4d\u6975\u7684\u306b\u4f7f\u3046\u3002\u4eee\u5f15\u6570\u3092\u4f34\u308f\u305a\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u521d\u671f\u5316\u3059\u308b\u3060\u3051\u306e\u69cb\u7bc9\u3002\n\n```py3:Python3\nclass Person():\n    def __init__(self):\n        self._name = ''\n        self._age = 0\n```\n\n```js:JavaScript\nvar Person = function() {\n    this._name = '';\n    this._age = 0;\n};\n```\n\n```c++:C++\nclass Person {\nprivate:\n    std::string _name;\n    int _age;\n\npublic:\n    Person()\n        : _name()\n        , _age() {\n    }\n};\n\n```\n\n```c:C\nstruct person *\npersonnew(void) {\n    struct person *self = calloc(1, sizeof(*self));\n    if (!self) {\n        return NULL;\n    }\n\n    self->_name = \"\";\n    self->_age = 0;\n\n    return self;\n}\n```\n\n### Agency constructor\n\n\u3000\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u4ee3\u7406\u95a2\u6570\u3002\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u5236\u7d04\u304c\u591a\u304f\u3001\u67d4\u8edf\u6027\u304c\u306a\u3044\u3002\u305d\u306e\u305f\u3081\u623b\u308a\u5024\u3084\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u305b\u308b\u4ee3\u7406\u306e\u95a2\u6570\u3092\u7528\u610f\u3057\u3066\u3001\u69cb\u7bc9\u6642\u306b\u4f7f\u7528\u3059\u308b\u3002\u547c\u3073\u51fa\u3057\u5fd8\u308c\u306e\u30d2\u30e5\u30fc\u30de\u30f3\u30a8\u30e9\u30fc\u304c\u4ed8\u3044\u3066\u56de\u308b\u306e\u3068\u3001\u624b\u9593\u304c\u5897\u3048\u308b\u306e\u3067\u4f7f\u7528\u5834\u9762\u3092\u9078\u3076\u3002\n\n```py3:Python3\nclass Person():\n    def __init__(self):\n        self._name = ''\n        self._age = 0\n    \n    def init(self, name, age):\n        self._name = name\n        self._age = age\n        return self.validate()\n\nclass Parser():\n    def __init__(self):\n        self._toks = []\n\n    def parse(self, srcstr):\n        self._toks = srcstr.split(' ')\n        return True\n\nperson = Person()\nif not person.init('name', 10):\n    # failed to construct\n    pass\n\nparser = Parser()\nif not parser.parse('source'):\n    # failed to parse\n    pass\n```\n\n### Tree composition\n\n\u3000\u30c4\u30ea\u30fc\u69cb\u9020\u72b6\u306e\u5408\u6210\u3002Bomb \u306f 1 \u3064\u3067\u306f\u306a\u304f 2 \u3064\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u5408\u6210\u3055\u308c\u308b\u30023 \u3064\u306b\u306a\u308b\u3068\u591a\u3044\u3002\u4f55\u6545\u304b\u306f\u308f\u304b\u3089\u306a\u3044\u304c\u30d0\u30e9\u30f3\u30b9\u304c\u53d6\u308a\u3084\u3059\u3044\u8a2d\u8a08\u3002\u6614\u304b\u3089\u4e09\u811a\u3068\u304b\u4e09\u3064\u5df4\u3068\u304b\u4e09\u4eba\u5bc4\u308c\u3070\u6587\u6b8a\u306e\u77e5\u6075\u3068\u304b\u3001\u3053\u306e\u69cb\u9020\u306f\u5b89\u5b9a\u611f\u304c\u3042\u308b\u3002\n\n```:Tree\n     Bomb\n    /    \\\n  Plug  Timer\n```\n\n```py3:Python3\nclass Plug():\n    def __init__(self):\n        pass\n\nclass Timer():\n    def __init__(self):\n        pass\n\nclass Bomb():\n    def __init__(self, plug, timer):\n        self._plug = plug\n        self._timer = timer\n\ndef createbomb():\n    plug = Plug()\n    timer = Timer()\n    bomb = Bomb(plug, timer)\n    return bomb\n\n```\n\n### Validate method\n\n\u3000throw \u3067\u30b8\u30e3\u30f3\u30d7\u3055\u305b\u308b\u3068\u30b9\u30c3\u30ad\u30ea\u66f8\u3051\u305f\u3002\n\n```js:\n/**\n * http://qiita.com/Layzie/items/465e715dae14e2f601de\n *\n */\nns.is = function(type, obj) {\n\tvar clas = Object.prototype.toString.call(obj).slice(8, -1);\n\treturn obj !== undefined && obj !== null && clas.toLowerCase() === type.toLowerCase();\n};\n\nns.User = function() {\n\tthis.name = null;\n\tthis.age = null;\n};\n\nns.User.prototype.validate = function() {\n\ttry {\n\t\tif (!ns.is('string', this.name)) {\n\t\t\tthrow 'name \"' + this.name + '\"';\n\t\t}\n\n\t\tvar age = parseInt(this.age);\n\t\tif (isNaN(age)) {\n\t\t\tthrow 'age \"' + this.age + '\"';\n\t\t}\n\t\tthis.age = age;\n\n\t} catch (e) {\n\t\tconsole.error('User: validate error: invalid ' + e);\n\t\treturn false;\n\t}\n\n\treturn true;\n};\n\n```\n\n"}