{"tags": ["Swift2.0", "Swift", "iOS"], "context": " More than 1 year has passed since last update.Swift 2.0\u3067\u306f\u3001\u30eb\u30fc\u30d7\u51e6\u7406\u306efor-in\u6587\u306b\u30d5\u30a3\u30eb\u30bf\u3068\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002WWDC 2015\u306e\u30d3\u30c7\u30aa \"What's New in Swift\" \u306e19:20\u3042\u305f\u308a\u304b\u3089\u8aac\u660e\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30d5\u30a3\u30eb\u30bf (for-in-where)\n\nSwift 1.x\nfor value in 0..<10 {\n    if value < 2 {\n        println(value)\n    }\n}\n\n// Prints:\n// \"0\"\n// \"1\"\n\n\nSwift 2.0\nfor value in 0..<10 where value < 2 {\n    print(value)\n}\n\n// Prints:\n// \"0\"\n// \"1\"\n\n\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1 (for-case-let-in)\n\n\u5217\u6319\u578b\n\nSwift 1.x\nenum Exam {\n    case Pass(Int)\n    case Fail(Int)\n}\n\nlet exams: [Exam] = [.Fail(40), .Pass(100), .Pass(80)]\n\nfor exam in exams {\n    switch exam {\n    case .Pass(let score):\n        println(score)\n    default:\n        break\n    }\n}\n\n// Prints:\n// \"100\"\n// \"80\"\n\n\nSwift 2.0\nfor case .Pass(let score) in exams {\n    print(score)\n}\n\n// Prints:\n// \"100\"\n// \"80\"\n\n\n\u30bf\u30d7\u30eb\n\nSwift 1.x\nlet prices = [(\"Mocha\", 430), (\"Latte\", 370), (\"Cappuccino\", 370), (\"Americano\", 340)]\n\nfor (name, price) in prices {\n    if price == 370 {\n        println(name)\n    }\n}\n\n// Prints:\n// \"Latte\"\n// \"Cappuccino\"\n\n\nSwift 2.0\nfor case let (name, 370) in prices {\n    print(name)\n}\n\n// Prints:\n// \"Latte\"\n// \"Cappuccino\"\n\n\n\u30d5\u30a3\u30eb\u30bf\u3068\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u7d44\u307f\u5408\u308f\u305b (for-case-let-in-where)\n\nSwift 1.x\nfor (name, price) in prices {\n    if price == 370 {\n        if name.hasPrefix(\"L\") {\n            println(name)\n        }\n    }\n}\n\n// Prints: \"Latte\"\n\n\nSwift 2.0\nfor case (let name, 370) in prices where name.hasPrefix(\"L\") {\n    print(name)\n}\n\n// Prints: \"Latte\"\n\n\n\u307e\u3068\u3081\nfor-in\u3067\u30d5\u30a3\u30eb\u30bf\u3084\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001if\u6587\u306e\u5165\u308c\u5b50\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002filter, map, flatMap, reduce\u3068\u6bd4\u8f03\u3057\u3001\u308f\u304b\u308a\u3084\u3059\u304f\u66f8\u3051\u308b\u65b9\u3092\u63a1\u7528\u3059\u308c\u3070\u3044\u3044\u3067\u3057\u3087\u3046\u3002\nSwift 2.0\u3067\u306f\u3001\u30eb\u30fc\u30d7\u51e6\u7406\u306efor-in\u6587\u306b\u30d5\u30a3\u30eb\u30bf\u3068\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002[WWDC 2015\u306e\u30d3\u30c7\u30aa \"What's New in Swift\"](https://developer.apple.com/videos/wwdc/2015/?id=106) \u306e19:20\u3042\u305f\u308a\u304b\u3089\u8aac\u660e\u3092\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## \u30d5\u30a3\u30eb\u30bf (for-in-where)\n\n### Swift 1.x\n\n    for value in 0..<10 {\n        if value < 2 {\n            println(value)\n        }\n    }\n    \n    // Prints:\n    // \"0\"\n    // \"1\"\n\n### Swift 2.0\n\n    for value in 0..<10 where value < 2 {\n        print(value)\n    }\n    \n    // Prints:\n    // \"0\"\n    // \"1\"\n\n## \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1 (for-case-let-in)\n\n### \u5217\u6319\u578b\n\n#### Swift 1.x\n\n    enum Exam {\n        case Pass(Int)\n        case Fail(Int)\n    }\n\n    let exams: [Exam] = [.Fail(40), .Pass(100), .Pass(80)]\n\n    for exam in exams {\n        switch exam {\n        case .Pass(let score):\n            println(score)\n        default:\n            break\n        }\n    }\n\n    // Prints:\n    // \"100\"\n    // \"80\"\n\n#### Swift 2.0\n\n    for case .Pass(let score) in exams {\n        print(score)\n    }\n\n    // Prints:\n    // \"100\"\n    // \"80\"\n\n### \u30bf\u30d7\u30eb\n\n#### Swift 1.x\n\n    let prices = [(\"Mocha\", 430), (\"Latte\", 370), (\"Cappuccino\", 370), (\"Americano\", 340)]\n\n    for (name, price) in prices {\n        if price == 370 {\n            println(name)\n        }\n    }\n\n    // Prints:\n    // \"Latte\"\n    // \"Cappuccino\"\n\n#### Swift 2.0\n\n    for case let (name, 370) in prices {\n        print(name)\n    }\n\n    // Prints:\n    // \"Latte\"\n    // \"Cappuccino\"\n\n## \u30d5\u30a3\u30eb\u30bf\u3068\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306e\u7d44\u307f\u5408\u308f\u305b (for-case-let-in-where)\n\n### Swift 1.x\n\n    for (name, price) in prices {\n        if price == 370 {\n            if name.hasPrefix(\"L\") {\n                println(name)\n            }\n        }\n    }\n\n    // Prints: \"Latte\"\n\n### Swift 2.0\n\n    for case (let name, 370) in prices where name.hasPrefix(\"L\") {\n        print(name)\n    }\n\n    // Prints: \"Latte\"\n\n## \u307e\u3068\u3081\n\nfor-in\u3067\u30d5\u30a3\u30eb\u30bf\u3084\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001if\u6587\u306e\u5165\u308c\u5b50\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002[filter, map, flatMap, reduce](http://qiita.com/koher/items/6a95cb8edb04fb81f787)\u3068\u6bd4\u8f03\u3057\u3001\u308f\u304b\u308a\u3084\u3059\u304f\u66f8\u3051\u308b\u65b9\u3092\u63a1\u7528\u3059\u308c\u3070\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n"}