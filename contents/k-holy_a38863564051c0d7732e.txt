{"context": " More than 1 year has passed since last update.\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u305f\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\nWindows 7 (32bit)\nPHP 5.6.9 \u30d3\u30eb\u30c8\u30a4\u30f3Web\u30b5\u30fc\u30d0\nPhalcon 1.3.4\n\n\nPhalcon\\Http\\Response::setFileToSend() \u306e\u4ed5\u69d8\nPhalcon\\Http\\Response \u306b\u306f\u30d5\u30a1\u30a4\u30eb\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u8fd4\u3059\u305f\u3081\u306e setFileToSend() \u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u30e1\u30bd\u30c3\u30c9\u306e\u4ed5\u69d8\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\npublic Phalcon\\Http\\ResponseInterface setFileToSend (string $filePath, [string $attachmentName], [boolean $attachment])\n\n\n\u7b2c1\u5f15\u6570\u2026\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u8fd4\u3059\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\n\u7b2c2\u5f15\u6570\u2026Content-Disposition\u30d8\u30c3\u30c0\u3067\u8fd4\u3059\u30d5\u30a1\u30a4\u30eb\u540d\n\u7b2c3\u5f15\u6570\u2026Content-Disposition\u30d8\u30c3\u30c0\u306battachment\u3092\u4ed8\u3051\u308b\u304b\u3069\u3046\u304b\uff08\u30d6\u30e9\u30a6\u30b6\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u8868\u793a\u3055\u305b\u308b\u304b\u3069\u3046\u304b\uff09\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u304c\u81ea\u52d5\u3067\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\u3002 \uff08\u7b2c3\u5f15\u6570\u3092\u7701\u7565\u307e\u305f\u306ftrue\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306e\u4f8b\uff09\nContent-Description: File Transfer\nContent-Disposition: attachment; filename=\u30d5\u30a1\u30a4\u30eb\u540d\nContent-Transfer-Encoding: binary\n\n\u7b2c2\u5f15\u6570\u3092\u7701\u7565\u3057\u305f\u5834\u5408\u306f\u3001Content-Disposition\u30d8\u30c3\u30c0\u306b\u306f\u7b2c1\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u81ea\u52d5\u3067\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\u3002\n\n\u6ce8\u610f\u4e8b\u9805\n\n\u3010\u91cd\u8981\u3011Content-Type, Content-Length\u30d8\u30c3\u30c0\u306f\u30bb\u30c3\u30c8\u3057\u3066\u304f\u308c\u306a\u3044\n\n\u81ea\u5206\u3067\u30bb\u30c3\u30c8\u3057\u307e\u3057\u3087\u3046\uff01\n\n\u7b2c2\u5f15\u6570\u306b\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3057\u3066\u3082\u7d20\u306e\u307e\u307e\u8fd4\u3055\u308c\u308b\n\nContent-Disposition\u30d8\u30c3\u30c0\u3067\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8fd4\u3059\u969b\u3001\u5404\u30d6\u30e9\u30a6\u30b6\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306e\uff08\u30d0\u30c3\u30c9\uff09\u30ce\u30a6\u30cf\u30a6\u304c\u8272\u3005\u3068\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u3046\u3044\u3046\u306e\u306f\u8003\u616e\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\u3002\nContent-Disposition: attachment; filename=\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n\u7d20\u306e\u307e\u307e\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002UTF-8\u3067\u6307\u5b9a\u3057\u3066\u3082\u3001SJIS\u3067\u6307\u5b9a\u3057\u3066\u3082\u540c\u3058\u3067\u3057\u305f\u2026\u3002\n\u305d\u306e\u305f\u3081\u3001\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8fd4\u3057\u305f\u3044\u5834\u5408\u3001Response::setFileToSend() \u3092\u547c\u3093\u3067\u304b\u3089\u3001\u81ea\u5206\u3067 Response::setHeader('Content-Disposition', ...) \u3068\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u7b2c3\u5f15\u6570 $attachment \u306b false \u3092\u6307\u5b9a\u3059\u308b\u3068\u2026\n\n\u7b2c3\u5f15\u6570\u306bfalse\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u306a\u305c\u304b Content-Description, Content-Disposition, Content-Transfer-Encoding \u3068\u3082\u306b\u30bb\u30c3\u30c8\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u3069\u3046\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u304b\u3002\n\u3044\u305a\u308c\u306b\u305b\u3088\u3001If-None-Match\u3084If-Modified-Since\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u3092\u4f7f\u3063\u305fHTTP\u30ad\u30e3\u30c3\u30b7\u30e5\u5236\u5fa1\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u30ec\u30d9\u30eb\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u9001\u4fe1\u306b\u307e\u3064\u308f\u308b\u51e6\u7406\u306f\u3001 Response::setFileToSend() \u3092\u4f7f\u3063\u3066\u3082\u305d\u308c\u307b\u3069\u624b\u629c\u304d\u3067\u304d\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u30d5\u30a1\u30a4\u30eb\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u4e0a\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\uff08\u3042\u307e\u308aPhalcon\u306b\u306f\u9650\u5b9a\u3057\u306a\u3044\u8a71\uff09\n\u3053\u308c\u3060\u3051\u3060\u3068\u3042\u307e\u308a\u53c2\u8003\u306b\u306a\u308b\u60c5\u5831\u304c\u306a\u3044\u306e\u3067\u3001\u5b9f\u969b\u306b\u3069\u3093\u306a\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u304b\u3092 Phalcon\\Mvc\\Micro \u3092\u7d99\u627f\u3057\u305fApplication\u30af\u30e9\u30b9\u304b\u3089\u629c\u7c8b\u3057\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nApplication::fileResponse()\n/**\n * \u30d5\u30a1\u30a4\u30eb\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30bb\u30c3\u30c8\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\n *\n * @param SplFileInfo \u30d5\u30a1\u30a4\u30eb\n * @param array \u30aa\u30d7\u30b7\u30e7\u30f3\n *              filename: \u30d5\u30a1\u30a4\u30eb\u540d\n *              download: \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u304b\u3069\u3046\u304b\n *              no_cache: \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u7981\u6b62\u3059\u308b\u304b\u3069\u3046\u304b\n * @return \\Phalcon\\Http\\Response\n */\npublic function fileResponse(\\SplFileInfo $file, $options = array())\n{\n    if (!$file->isFile()) {\n        throw new \\InvalidArgumentException('File is not file.');\n    }\n    if (!$file->isReadable()) {\n        throw new \\InvalidArgumentException('File is not readable.');\n    }\n    $this->setFileToSend($file, $options);\n    return $this->response;\n}\n\n\nApplication::setFileToSend()\n\u4e2d\u8eab\u306f\u3053\u308c\u3067\u3059\u3002\u7d99\u304e\u8db3\u3057\u7d99\u304e\u8db3\u3057\u305f\u79d8\u4f1d\u306e\u30bf\u30ec\u7684\u306a\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8981\u4ef6\u6b21\u7b2c\u306a\u90e8\u5206\u3082\u5927\u304d\u3044\u3057\u3001\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u5bfe\u5fdc\u3068\u304b\u4e0d\u8981\u306a\u30e6\u30fc\u30b6\u30fc\u3082\u591a\u3044\u3067\u3057\u3087\u3046\u304b\u3089\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u30ec\u30d9\u30eb\u3067\u306e\u5bfe\u5fdc\u306f\u671f\u5f85\u3057\u306a\u3044\u65b9\u304c\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nprivate function setFileToSend(\\SplFileInfo $file, $options = array())\n{\n    $filename = (isset($options['filename'])) ? $options['filename'] : $file->getBasename();\n    $download = (isset($options['download']) && $options['download']);\n    $no_cache = (isset($options['no_cache']) && $options['no_cache']);\n\n    if ($no_cache) {\n        $this->response->setHeader('Cache-Control', 'must-revalidate, no-cache, no-store, private');\n    } else {\n        $this->response->setHeader('Cache-Control', 'public');\n    }\n\n    $this->response->setHeader('Last-Modified',\n        $this->buildHttpDate(new \\DateTime(sprintf('@%d', $file->getMtime())))\n    );\n\n    $this->response->setHeader('ETag',\n        sprintf('\"%s\"', hash_file('sha256', $file->__toString()))\n    );\n\n    if (!$no_cache && $this->isNotModified()) {\n        $this->notModified();\n        return;\n    }\n\n    $this->response->setFileToSend($file->__toString());\n\n    // \u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u304b\u3089MIME\u30bf\u30a4\u30d7\u3092\u5224\u5b9a\n    $mimeType = new \\finfo(FILEINFO_MIME_TYPE);\n    $contentType = $mimeType->file($file->__toString());\n\n    $this->response->setHeader('Content-Type', ($contentType !== false) ? $contentType : 'application/octet-stream');\n    $this->response->setHeader('Content-Length', $file->getSize());\n\n    // \u30d5\u30a1\u30a4\u30eb\u540d\u306b\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u3092\u542b\u307e\u306a\u3044\u5834\u5408\u306f\u305d\u306e\u307e\u307e\u51fa\u529b\u3001\u542b\u3080\u5834\u5408\u306f\u30d1\u30fc\u30bb\u30f3\u30c8\u30a8\u30f3\u30b3\u30fc\u30c9\n    $disposition = ($download) ? 'attachment' : 'inline';\n    if (mb_strlen($filename, 'UTF-8') === strlen($filename)) {\n        $disposition .= sprintf('; filename=\"%s\"', str_replace('\"', '\\\\\"', $filename));\n    } else {\n        $disposition .= sprintf(\"; filename=%s; filename*=utf-8''%s\", rawurlencode($filename), rawurlencode($filename));\n    }\n    $this->response->setHeader('Content-Disposition', $disposition);\n\n    // IE8+\u7528\n    if ($download) {\n        $this->response->setHeader('X-Download-Options', 'noopen');\n    }\n\n    $currentHttpDate = $this->buildHttpDate(new \\DateTime());\n    $this->response->setHeader('Date', $currentHttpDate);\n\n    if ($no_cache) {\n        $this->response->setHeader('Expires', $currentHttpDate);\n    }\n\n    return $this->response;\n\n}\n\nMIME\u30bf\u30a4\u30d7\u5224\u5b9a\u306b finfo \u3092\u4f7f\u3046\u306e\u306f\u901f\u5ea6\u7684\u306b\u826f\u304f\u306a\u3044\u3088\u3046\u3067\u3059\u304c\u3001\u793e\u5185\u3068\u304b\u7279\u5b9a\u30e6\u30fc\u30b6\u30fc\u5411\u3051\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4e3b\u306a\u305f\u3081\u304b\u3001\u4eca\u306e\u3068\u3053\u308d\u554f\u984c\u306b\u306f\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\u6614\u306fIE\u5bfe\u7b56\u3068\u3057\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u7528\u306e\u51e6\u7406\u304c\u304b\u306a\u308a\u3081\u3093\u3069\u304f\u3055\u3044\u3001\u30e6\u30fc\u30b6\u30fc\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u6bce\u306e\u5206\u5c90\u304c\u5fc5\u8981\u306a\u30ec\u30d9\u30eb\u3067\u3057\u305f\u304c\u3001IE7\u4ee5\u4e0b\u3092\u5207\u308a\u6368\u3066\u3066\u304b\u3089\u306f Content-Disposition \u30d8\u30c3\u30c0\u306f\u5bfe\u8c61\u30d6\u30e9\u30a6\u30b6\u5171\u901a\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30c0\u30a4\u30a2\u30ed\u30b0\u306e\u5236\u5fa1\u306e\u305f\u3081\u306e X-Download-Options: noopen \u306e\u307f\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3042\u3068\u3001\u5168\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u5f37\u5236\u7684\u306b\u30bb\u30c3\u30c8\u3057\u3066\u308b\u306e\u3067\u3053\u306e\u30b3\u30fc\u30c9\u306b\u306f\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306b X-Content-Type-Options: nosniff \u3082\u5fc5\u9808\u3067\u3059\u306d\u3002\n\nApplication::isNotModified()\nsetFileToSend() \u5185\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306b\u30bb\u30c3\u30c8\u3057\u305f Etag, Last-Modified \u306e\u5024\u3068\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u306e If-None-Match, If-Modified-Since \u306e\u5024\u3092\u6bd4\u8f03\u3057\u3066\u3001\u66f4\u65b0\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\u30d5\u30a1\u30a4\u30eb\u3092\u8fd4\u3059\u5834\u5408\u306b\u9650\u3063\u305f\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u95a2\u9023\u3059\u308b\u51e6\u7406\u3067\u306f\u3042\u308b\u306e\u3067\u4f75\u305b\u3066\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\nprivate function isNotModified()\n{\n\n    $notModified = false;\n\n    $etag = $this->response->getHeaders()->get('ETag');\n    $lastModified = $this->response->getHeaders()->get('Last-Modified');\n\n    $ifNoneMatch = $this->request->getHeader('HTTP_IF_NONE_MATCH');\n    $ifModifiedSince = $this->request->getHeader('HTTP_IF_MODIFIED_SINCE');\n\n    $requestEtags = ($ifNoneMatch !== null)\n        ? preg_split('/\\s*,\\s*/', $ifNoneMatch, null, PREG_SPLIT_NO_EMPTY)\n        : null;\n\n    if ($etag !== null && $requestEtags !== null && (in_array($etag, $requestEtags) || in_array('*', $requestEtags))) {\n        $notModified = true;\n    }\n\n    if ($lastModified !== null && $ifModifiedSince !== null) {\n        return ((strtotime($ifModifiedSince) >= strtotime($lastModified)) && ($requestEtags === null || $notModified));\n    }\n\n    return $notModified;\n}\n\n\u6761\u4ef6\u3092\u7c21\u5358\u306b\u307e\u3068\u3081\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n\nIf-None-Match \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308c\u3070\u3001ETag \u306e\u5024\u3068\u6bd4\u8f03\u3057\u3001\u4e00\u81f4\u3059\u308b\u5834\u5408\u306f\u66f4\u65b0\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u3068\u3059\u308b\nIf-Modified-Since \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308c\u3070\u3001Last-Modified \u306e\u65e5\u6642\u3068\u6bd4\u8f03\u3057\u3001\u540c\u4e00\u307e\u305f\u306f If-Modified-Since \u306e\u65b9\u304c\u65b0\u3057\u3044\u5834\u5408\u306f\u66f4\u65b0\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u3068\u3059\u308b\nIf-None-Match \u3068 If-Modified-Since \u306e\u4e21\u65b9\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u4e21\u65b9\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u5834\u5408\u306e\u307f\u66f4\u65b0\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u3068\u3059\u308b\n\n\nApplication::notModified()\n304 NotModified\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u3053\u3061\u3089\u3082\u30d5\u30a1\u30a4\u30eb\u3092\u8fd4\u3059\u5834\u5408\u306b\u9650\u3063\u305f\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u540c\u4e0a\u3067\u3002\n/**\n * NotModified\u30ec\u30b9\u30dd\u30f3\u30b9\n *\n * @return \\Phalcon\\Http\\Response\n */\npublic function notModified()\n{\n    $headers = $this->response->getHeaders();\n    $this->response->setStatusCode(304, $this->reasonPhraseOf(304));\n    $this->response->setContent(null);\n    foreach (self::$entityHeaders as $header) {\n        if (null !== $this->response->getHeaders()->get($header)) {\n            $this->response->getHeaders()->remove($header);\n        }\n    }\n    $this->response->setHeader('Date', $this->buildHttpDate(new \\DateTime()));\n    return $this->response;\n}\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4e0d\u8981\u306a\u30d8\u30c3\u30c0\u3084\u5185\u5bb9\u3092\u7a7a\u306b\u3057\u3066\u8fd4\u3057\u3066\u308b\u3060\u3051\u3067\u3059\u3002\nDate\u30d8\u30c3\u30c0\u3092\u3069\u306e\u6642\u70b9\u3067\u30bb\u30c3\u30c8\u3059\u308b\u3079\u304d\u304b\u306f\u60a9\u307f\u3069\u3053\u308d\u3067\u3059\u304c\u3001\u305d\u306e\u307e\u307e\u30e6\u30fc\u30b6\u30fc\u30b3\u30fc\u30c9\u304b\u3089\u8fd4\u3055\u308c\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u9010\u4e00\u30bb\u30c3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u4ed6\u547c\u3070\u308c\u3066\u3044\u308b\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3084\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001\u3060\u3044\u305f\u3044\u60f3\u50cf\u3067\u304d\u308b\u3068\u601d\u3046\u306e\u3067\u7701\u7565\u3057\u307e\u3059\u3002\n\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u305f\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n* Windows 7 (32bit)\n* PHP 5.6.9 \u30d3\u30eb\u30c8\u30a4\u30f3Web\u30b5\u30fc\u30d0\n* Phalcon 1.3.4\n\n## Phalcon\\Http\\Response::setFileToSend() \u306e\u4ed5\u69d8\n\nPhalcon\\Http\\Response \u306b\u306f\u30d5\u30a1\u30a4\u30eb\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u8fd4\u3059\u305f\u3081\u306e setFileToSend() \u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30e1\u30bd\u30c3\u30c9\u306e\u4ed5\u69d8\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n```\npublic Phalcon\\Http\\ResponseInterface setFileToSend (string $filePath, [string $attachmentName], [boolean $attachment])\n```\n\n* \u7b2c1\u5f15\u6570\u2026\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u8fd4\u3059\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\n* \u7b2c2\u5f15\u6570\u2026Content-Disposition\u30d8\u30c3\u30c0\u3067\u8fd4\u3059\u30d5\u30a1\u30a4\u30eb\u540d\n* \u7b2c3\u5f15\u6570\u2026Content-Disposition\u30d8\u30c3\u30c0\u306battachment\u3092\u4ed8\u3051\u308b\u304b\u3069\u3046\u304b\uff08\u30d6\u30e9\u30a6\u30b6\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u8868\u793a\u3055\u305b\u308b\u304b\u3069\u3046\u304b\uff09\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u304c\u81ea\u52d5\u3067\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\u3002 \uff08\u7b2c3\u5f15\u6570\u3092\u7701\u7565\u307e\u305f\u306ftrue\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306e\u4f8b\uff09\n\n```\nContent-Description: File Transfer\nContent-Disposition: attachment; filename=\u30d5\u30a1\u30a4\u30eb\u540d\nContent-Transfer-Encoding: binary\n```\n\n\u7b2c2\u5f15\u6570\u3092\u7701\u7565\u3057\u305f\u5834\u5408\u306f\u3001Content-Disposition\u30d8\u30c3\u30c0\u306b\u306f\u7b2c1\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u81ea\u52d5\u3067\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\u3002\n\n\n### \u6ce8\u610f\u4e8b\u9805\n\n* \u3010\u91cd\u8981\u3011Content-Type, Content-Length\u30d8\u30c3\u30c0\u306f\u30bb\u30c3\u30c8\u3057\u3066\u304f\u308c\u306a\u3044\n\n\u81ea\u5206\u3067\u30bb\u30c3\u30c8\u3057\u307e\u3057\u3087\u3046\uff01\n\n\n* \u7b2c2\u5f15\u6570\u306b\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u6307\u5b9a\u3057\u3066\u3082\u7d20\u306e\u307e\u307e\u8fd4\u3055\u308c\u308b\n\nContent-Disposition\u30d8\u30c3\u30c0\u3067\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8fd4\u3059\u969b\u3001\u5404\u30d6\u30e9\u30a6\u30b6\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u306e\uff08\u30d0\u30c3\u30c9\uff09\u30ce\u30a6\u30cf\u30a6\u304c\u8272\u3005\u3068\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u3046\u3044\u3046\u306e\u306f\u8003\u616e\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n```\nContent-Disposition: attachment; filename=\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n```\n\n\u7d20\u306e\u307e\u307e\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002UTF-8\u3067\u6307\u5b9a\u3057\u3066\u3082\u3001SJIS\u3067\u6307\u5b9a\u3057\u3066\u3082\u540c\u3058\u3067\u3057\u305f\u2026\u3002\n\n\u305d\u306e\u305f\u3081\u3001\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8fd4\u3057\u305f\u3044\u5834\u5408\u3001``Response::setFileToSend()`` \u3092\u547c\u3093\u3067\u304b\u3089\u3001\u81ea\u5206\u3067 ``Response::setHeader('Content-Disposition', ...)`` \u3068\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n* \u7b2c3\u5f15\u6570 $attachment \u306b false \u3092\u6307\u5b9a\u3059\u308b\u3068\u2026\n\n\u7b2c3\u5f15\u6570\u306bfalse\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u306a\u305c\u304b Content-Description, Content-Disposition, Content-Transfer-Encoding \u3068\u3082\u306b\u30bb\u30c3\u30c8\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u3069\u3046\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u304b\u3002\n\n\n\u3044\u305a\u308c\u306b\u305b\u3088\u3001If-None-Match\u3084If-Modified-Since\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u3092\u4f7f\u3063\u305fHTTP\u30ad\u30e3\u30c3\u30b7\u30e5\u5236\u5fa1\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u30ec\u30d9\u30eb\u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u9001\u4fe1\u306b\u307e\u3064\u308f\u308b\u51e6\u7406\u306f\u3001 ``Response::setFileToSend()`` \u3092\u4f7f\u3063\u3066\u3082\u305d\u308c\u307b\u3069\u624b\u629c\u304d\u3067\u304d\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n\n## \u30d5\u30a1\u30a4\u30eb\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u4e0a\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\uff08\u3042\u307e\u308aPhalcon\u306b\u306f\u9650\u5b9a\u3057\u306a\u3044\u8a71\uff09\n\n\u3053\u308c\u3060\u3051\u3060\u3068\u3042\u307e\u308a\u53c2\u8003\u306b\u306a\u308b\u60c5\u5831\u304c\u306a\u3044\u306e\u3067\u3001\u5b9f\u969b\u306b\u3069\u3093\u306a\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u304b\u3092 Phalcon\\Mvc\\Micro \u3092\u7d99\u627f\u3057\u305fApplication\u30af\u30e9\u30b9\u304b\u3089\u629c\u7c8b\u3057\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n### Application::fileResponse()\n```php\n/**\n * \u30d5\u30a1\u30a4\u30eb\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30bb\u30c3\u30c8\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\n *\n * @param SplFileInfo \u30d5\u30a1\u30a4\u30eb\n * @param array \u30aa\u30d7\u30b7\u30e7\u30f3\n *              filename: \u30d5\u30a1\u30a4\u30eb\u540d\n *              download: \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u304b\u3069\u3046\u304b\n *              no_cache: \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u7981\u6b62\u3059\u308b\u304b\u3069\u3046\u304b\n * @return \\Phalcon\\Http\\Response\n */\npublic function fileResponse(\\SplFileInfo $file, $options = array())\n{\n    if (!$file->isFile()) {\n        throw new \\InvalidArgumentException('File is not file.');\n    }\n    if (!$file->isReadable()) {\n        throw new \\InvalidArgumentException('File is not readable.');\n    }\n    $this->setFileToSend($file, $options);\n    return $this->response;\n}\n```\n\n\n### Application::setFileToSend()\n\n\u4e2d\u8eab\u306f\u3053\u308c\u3067\u3059\u3002\u7d99\u304e\u8db3\u3057\u7d99\u304e\u8db3\u3057\u305f\u79d8\u4f1d\u306e\u30bf\u30ec\u7684\u306a\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8981\u4ef6\u6b21\u7b2c\u306a\u90e8\u5206\u3082\u5927\u304d\u3044\u3057\u3001\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u5bfe\u5fdc\u3068\u304b\u4e0d\u8981\u306a\u30e6\u30fc\u30b6\u30fc\u3082\u591a\u3044\u3067\u3057\u3087\u3046\u304b\u3089\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u30ec\u30d9\u30eb\u3067\u306e\u5bfe\u5fdc\u306f\u671f\u5f85\u3057\u306a\u3044\u65b9\u304c\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n```php\nprivate function setFileToSend(\\SplFileInfo $file, $options = array())\n{\n    $filename = (isset($options['filename'])) ? $options['filename'] : $file->getBasename();\n    $download = (isset($options['download']) && $options['download']);\n    $no_cache = (isset($options['no_cache']) && $options['no_cache']);\n\n    if ($no_cache) {\n        $this->response->setHeader('Cache-Control', 'must-revalidate, no-cache, no-store, private');\n    } else {\n        $this->response->setHeader('Cache-Control', 'public');\n    }\n\n    $this->response->setHeader('Last-Modified',\n        $this->buildHttpDate(new \\DateTime(sprintf('@%d', $file->getMtime())))\n    );\n\n    $this->response->setHeader('ETag',\n        sprintf('\"%s\"', hash_file('sha256', $file->__toString()))\n    );\n\n    if (!$no_cache && $this->isNotModified()) {\n        $this->notModified();\n        return;\n    }\n\n    $this->response->setFileToSend($file->__toString());\n\n    // \u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u304b\u3089MIME\u30bf\u30a4\u30d7\u3092\u5224\u5b9a\n    $mimeType = new \\finfo(FILEINFO_MIME_TYPE);\n    $contentType = $mimeType->file($file->__toString());\n\n    $this->response->setHeader('Content-Type', ($contentType !== false) ? $contentType : 'application/octet-stream');\n    $this->response->setHeader('Content-Length', $file->getSize());\n\n    // \u30d5\u30a1\u30a4\u30eb\u540d\u306b\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u3092\u542b\u307e\u306a\u3044\u5834\u5408\u306f\u305d\u306e\u307e\u307e\u51fa\u529b\u3001\u542b\u3080\u5834\u5408\u306f\u30d1\u30fc\u30bb\u30f3\u30c8\u30a8\u30f3\u30b3\u30fc\u30c9\n    $disposition = ($download) ? 'attachment' : 'inline';\n    if (mb_strlen($filename, 'UTF-8') === strlen($filename)) {\n        $disposition .= sprintf('; filename=\"%s\"', str_replace('\"', '\\\\\"', $filename));\n    } else {\n        $disposition .= sprintf(\"; filename=%s; filename*=utf-8''%s\", rawurlencode($filename), rawurlencode($filename));\n    }\n    $this->response->setHeader('Content-Disposition', $disposition);\n\n    // IE8+\u7528\n    if ($download) {\n        $this->response->setHeader('X-Download-Options', 'noopen');\n    }\n\n    $currentHttpDate = $this->buildHttpDate(new \\DateTime());\n    $this->response->setHeader('Date', $currentHttpDate);\n\n    if ($no_cache) {\n        $this->response->setHeader('Expires', $currentHttpDate);\n    }\n\n    return $this->response;\n\n}\n```\n\nMIME\u30bf\u30a4\u30d7\u5224\u5b9a\u306b finfo \u3092\u4f7f\u3046\u306e\u306f\u901f\u5ea6\u7684\u306b\u826f\u304f\u306a\u3044\u3088\u3046\u3067\u3059\u304c\u3001\u793e\u5185\u3068\u304b\u7279\u5b9a\u30e6\u30fc\u30b6\u30fc\u5411\u3051\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4e3b\u306a\u305f\u3081\u304b\u3001\u4eca\u306e\u3068\u3053\u308d\u554f\u984c\u306b\u306f\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u6614\u306fIE\u5bfe\u7b56\u3068\u3057\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u7528\u306e\u51e6\u7406\u304c\u304b\u306a\u308a\u3081\u3093\u3069\u304f\u3055\u3044\u3001\u30e6\u30fc\u30b6\u30fc\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u6bce\u306e\u5206\u5c90\u304c\u5fc5\u8981\u306a\u30ec\u30d9\u30eb\u3067\u3057\u305f\u304c\u3001IE7\u4ee5\u4e0b\u3092\u5207\u308a\u6368\u3066\u3066\u304b\u3089\u306f Content-Disposition \u30d8\u30c3\u30c0\u306f\u5bfe\u8c61\u30d6\u30e9\u30a6\u30b6\u5171\u901a\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30c0\u30a4\u30a2\u30ed\u30b0\u306e\u5236\u5fa1\u306e\u305f\u3081\u306e ``X-Download-Options: noopen`` \u306e\u307f\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u3042\u3068\u3001\u5168\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u5f37\u5236\u7684\u306b\u30bb\u30c3\u30c8\u3057\u3066\u308b\u306e\u3067\u3053\u306e\u30b3\u30fc\u30c9\u306b\u306f\u542b\u307e\u308c\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306b ``X-Content-Type-Options: nosniff`` \u3082\u5fc5\u9808\u3067\u3059\u306d\u3002\n\n\n### Application::isNotModified()\n\nsetFileToSend() \u5185\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u30d8\u30c3\u30c0\u306b\u30bb\u30c3\u30c8\u3057\u305f Etag, Last-Modified \u306e\u5024\u3068\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u306e If-None-Match, If-Modified-Since \u306e\u5024\u3092\u6bd4\u8f03\u3057\u3066\u3001\u66f4\u65b0\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u8fd4\u3059\u5834\u5408\u306b\u9650\u3063\u305f\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u95a2\u9023\u3059\u308b\u51e6\u7406\u3067\u306f\u3042\u308b\u306e\u3067\u4f75\u305b\u3066\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\u3002\n\n```php\nprivate function isNotModified()\n{\n\n    $notModified = false;\n\n    $etag = $this->response->getHeaders()->get('ETag');\n    $lastModified = $this->response->getHeaders()->get('Last-Modified');\n\n    $ifNoneMatch = $this->request->getHeader('HTTP_IF_NONE_MATCH');\n    $ifModifiedSince = $this->request->getHeader('HTTP_IF_MODIFIED_SINCE');\n\n    $requestEtags = ($ifNoneMatch !== null)\n        ? preg_split('/\\s*,\\s*/', $ifNoneMatch, null, PREG_SPLIT_NO_EMPTY)\n        : null;\n\n    if ($etag !== null && $requestEtags !== null && (in_array($etag, $requestEtags) || in_array('*', $requestEtags))) {\n        $notModified = true;\n    }\n\n    if ($lastModified !== null && $ifModifiedSince !== null) {\n        return ((strtotime($ifModifiedSince) >= strtotime($lastModified)) && ($requestEtags === null || $notModified));\n    }\n\n    return $notModified;\n}\n```\n\n\u6761\u4ef6\u3092\u7c21\u5358\u306b\u307e\u3068\u3081\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n\n* If-None-Match \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308c\u3070\u3001ETag \u306e\u5024\u3068\u6bd4\u8f03\u3057\u3001\u4e00\u81f4\u3059\u308b\u5834\u5408\u306f\u66f4\u65b0\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u3068\u3059\u308b\n* If-Modified-Since \u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308c\u3070\u3001Last-Modified \u306e\u65e5\u6642\u3068\u6bd4\u8f03\u3057\u3001\u540c\u4e00\u307e\u305f\u306f If-Modified-Since \u306e\u65b9\u304c\u65b0\u3057\u3044\u5834\u5408\u306f\u66f4\u65b0\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u3068\u3059\u308b\n* If-None-Match \u3068 If-Modified-Since \u306e\u4e21\u65b9\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308c\u3070\u3001\u4e21\u65b9\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u5834\u5408\u306e\u307f\u66f4\u65b0\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u306e\u3068\u3059\u308b\n\n\n### Application::notModified()\n\n304 NotModified\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u3053\u3061\u3089\u3082\u30d5\u30a1\u30a4\u30eb\u3092\u8fd4\u3059\u5834\u5408\u306b\u9650\u3063\u305f\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u540c\u4e0a\u3067\u3002\n\n```php\n/**\n * NotModified\u30ec\u30b9\u30dd\u30f3\u30b9\n *\n * @return \\Phalcon\\Http\\Response\n */\npublic function notModified()\n{\n    $headers = $this->response->getHeaders();\n    $this->response->setStatusCode(304, $this->reasonPhraseOf(304));\n    $this->response->setContent(null);\n    foreach (self::$entityHeaders as $header) {\n        if (null !== $this->response->getHeaders()->get($header)) {\n            $this->response->getHeaders()->remove($header);\n        }\n    }\n    $this->response->setHeader('Date', $this->buildHttpDate(new \\DateTime()));\n    return $this->response;\n}\n```\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4e0d\u8981\u306a\u30d8\u30c3\u30c0\u3084\u5185\u5bb9\u3092\u7a7a\u306b\u3057\u3066\u8fd4\u3057\u3066\u308b\u3060\u3051\u3067\u3059\u3002\n\nDate\u30d8\u30c3\u30c0\u3092\u3069\u306e\u6642\u70b9\u3067\u30bb\u30c3\u30c8\u3059\u308b\u3079\u304d\u304b\u306f\u60a9\u307f\u3069\u3053\u308d\u3067\u3059\u304c\u3001\u305d\u306e\u307e\u307e\u30e6\u30fc\u30b6\u30fc\u30b3\u30fc\u30c9\u304b\u3089\u8fd4\u3055\u308c\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u9010\u4e00\u30bb\u30c3\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u305d\u306e\u4ed6\u547c\u3070\u308c\u3066\u3044\u308b\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u3084\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001\u3060\u3044\u305f\u3044\u60f3\u50cf\u3067\u304d\u308b\u3068\u601d\u3046\u306e\u3067\u7701\u7565\u3057\u307e\u3059\u3002\n", "tags": ["PHP", "Phalcon1.3.4"]}