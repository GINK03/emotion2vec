{"context": "\u666e\u6bb5Unity\u4f7f\u3063\u3066\u304a\u4ed5\u4e8b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u65b0\u3057\u3044\u8da3\u5473\u304c\u6b32\u3057\u304b\u3063\u305f\u306e\u3067three.js\u3092\u304a\u52c9\u5f37\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u4f5c\u3063\u305f\u3084\u3064\u3002\u6b63\u76f4\u307e\u3060\u4f55\u304c\u4f55\u3060\u304b\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u72b6\u614b\n\u305d\u308c\u3063\u307d\u3044\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u3092\u5909\u3048\u3066\u307f\u305f\u3002\n\n\u53c2\u8003\u306b\u3057\u305f\u30b3\u30fc\u30c9\u306f\u3001\nthree.js\u306e\u30b5\u30f3\u30d7\u30eb\u306e\nwebGL_line_sphere.html\u3063\u3066\u3084\u3064\u3002\n\u6b63\u76f4\u30b5\u30f3\u30d7\u30eb\u306e\u65b9\u304c\u7dba\u9e97\u3002\n\u30b3\u30fc\u30c9\n\nline.js\n\nputs 'The best way to log and share programmers knowledge.'\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <title>three.js webgl - lines - spheres</title>\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\n        <style>\n            body {\n                background-color: #ffffff;\n                margin: 0px;\n                overflow: hidden;\n            }\n\n            a {\n                color:#111111;\n            }\n\n            #info {\n                position: absolute;\n                top: 100px; width: 100%;\n                color: #ffffff;\n                padding: 5px;\n                font-family: Monospace;\n                font-size: 13px;\n                text-align: center;\n                z-index:100;\n            }\n\n            a {\n                color: #ffffff;\n                text-decoration: none;\n            }\n\n            a:hover {\n                color: #ffffff;\n            }\n\n        </style>\n    </head>\n    <body>\n\n\n\n        <script src=\"../build/three.js\"></script>\n\n        <script src=\"js/Detector.js\"></script>\n        <script src=\"js/libs/stats.min.js\"></script>\n\n        <script>\n\n            if ( ! Detector.webgl ) Detector.addGetWebGLMessage();\n\n            var SCREEN_WIDTH = window.innerWidth,\n                SCREEN_HEIGHT = window.innerHeight,\n\n            r = 450,\n\n n =0,\n            mouseX = 0, mouseY = 0,\n\n            windowHalfX = window.innerWidth / 2,\n            windowHalfY = window.innerHeight / 2,\n\n            camera, scene, renderer;\n\n            init();\n        animate();\n\n            function init() {\n\n                var container;\n\n                container = document.createElement( 'div' );\n                document.body.appendChild( container );\n\n                camera = new THREE.PerspectiveCamera( 80, SCREEN_WIDTH / SCREEN_HEIGHT, 1, 3000 );\n                camera.position.z = 1000;\n\n                scene = new THREE.Scene();\n\n                var i, line, vertex1, vertex2, material, p,\n                    parameters = [ [ 0.5, 0xff7700, 1, 2 ], [ 0.5, 0xff9900, 1, 1 ], [ 0.6, 0xffaa00, 0.75, 1 ], [ 1, 0xffaa00, 0.5, 1 ], [ 0.7, 0x000833, 0.8, 1 ],\n                                   [ 0.8, 0xaaaaaa, 0.75, 2 ], [ 0.9, 0xFFD464, 0.5, 1 ], [ 1.0, 0xffffff, 0.25, 100 ], [ 1.1, 0xffffff, 0.125, 100 ] ];\n\n                var geometry = createGeometry();\n\n                for( i = 0; i < parameters.length; ++ i ) {\n\n                    p = parameters[ i ];\n\n                    material = new THREE.LineBasicMaterial( { color: p[ 1 ], opacity: p[ 2 ], linewidth: p[ 3 ] } );\n\n                    line = new THREE.LineSegments( geometry, material );\n                    line.scale.x = line.scale.y = line.scale.z = p[ 0 ];\n                    line.originalScale = p[ 0 ];\n                    //line.rotation.y = Math.random() * Math.PI;\n                    //line.updateMatrix();\n                    scene.add( line );\n\n                }\n\n                renderer = new THREE.WebGLRenderer( { antialias: true } );\n                renderer.setPixelRatio( window.devicePixelRatio );\n                renderer.setSize( SCREEN_WIDTH, SCREEN_HEIGHT );\n                container.appendChild( renderer.domElement );\n\n                document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n                document.addEventListener( 'touchstart', onDocumentTouchStart, false );\n                document.addEventListener( 'touchmove', onDocumentTouchMove, false );\n\n                //\n\n                window.addEventListener( 'resize', onWindowResize, false );\n\n                // test geometry swapability\n\n                setInterval( function () {\n\n                    var geometry = createGeometry();\n\n                    scene.traverse( function ( object ) {\n\n                        if ( object instanceof THREE.Line ) {\n\n                            object.geometry.dispose();\n                            object.geometry = geometry;\n\n                        }\n\n                    } );\n\n                },100 );\n\n            }\n\n            function createGeometry() {\n\nn+= 0.1;\n                var geometry = new THREE.Geometry();\n\n                for ( i = 0; i < 150; i ++ ) {\n\n                    var vertex1 = new THREE.Vector3();\n                    vertex1.x = Math.random() * 10*Math.sin(n) - 1;\n                    vertex1.y = Math.random() * 10*Math.cos(n) - 1;\n                    //vertex1.z = (Math.random() * 10 - 1)*Math.sin(n);\n                    vertex1.normalize();\n                    vertex1.multiplyScalar( r );\n\n                    vertex2 = vertex1.clone();\n                    vertex2.multiplyScalar( Math.random() *2 + 1 );\n\n                    geometry.vertices.push( vertex1 );\n                    geometry.vertices.push( vertex2 );\n\n                }\n\n                return geometry;\n\n            }\n\n            function onWindowResize() {\n\n                windowHalfX = window.innerWidth / 2;\n                windowHalfY = window.innerHeight / 2;\n\n                camera.aspect = window.innerWidth / window.innerHeight;\n                camera.updateProjectionMatrix();\n\n                renderer.setSize( window.innerWidth, window.innerHeight );\n\n            }\n\n            function onDocumentMouseMove( event ) {\n\n                mouseX = event.clientX - windowHalfX;\n                mouseY = event.clientY - windowHalfY;\n\n            }\n\n            function onDocumentTouchStart( event ) {\n\n                if ( event.touches.length > 1 ) {\n\n                    event.preventDefault();\n\n                    mouseX = event.touches[ 0 ].pageX - windowHalfX;\n                    mouseY = event.touches[ 0 ].pageY - windowHalfY;\n\n                }\n\n            }\n\n            function onDocumentTouchMove( event ) {\n\n                if ( event.touches.length == 1 ) {\n\n                    event.preventDefault();\n\n                    mouseX = event.touches[ 0 ].pageX - windowHalfX;\n                    mouseY = event.touches[ 0 ].pageY - windowHalfY;\n\n                }\n\n            }\n\n            //\n\n            function animate() {\n\n                requestAnimationFrame( animate );\n\n                render();\n\n            }\n\n            function render() {\n\n\n                //camera.position.y = ( - mouseY + 200 - camera.position.y ) * .05;\n            //  camera.lookAt( scene.position );\n\n                renderer.render( scene, camera );\n\n                //var time = Date.now() * 0.0001;\n\n                for ( var i = 0; i < scene.children.length; i ++ ) {\n\n                    var object = scene.children[ i ];\n\n//                  if ( object instanceof THREE.Line ) {\n\n                        //object.rotation.y = time * ( i < 4 ? ( i + 1 ) : - ( i + 1 ) );\n\n                        //if ( i < 5 ) object.scale.x = object.scale.y = object.scale.z = object.originalScale * (i/5+1) * (1 + 0.5 * Math.sin( 7*time ) );\n\n                    //}\n\n                }\n\n            }\n\n\n        </script>\n    </body>\n</html>\n\n\n\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3084\u3064\n\nline.js\n\n<script src=\"js/Detector.js\"></script>\n\nif ( ! Detector.webgl ) Detector.addGetWebGLMessage();\n\n\n\n\nDetector.js\u306f\u3001webGL\u672a\u5bfe\u5fdc\u30d6\u30e9\u30a6\u30b6\u3067\u30a8\u30e9\u30fc\u6587\u7ae0\u3092\u8868\u793a\u3055\u305b\u308b\u305f\u3081\u306b\u5fc5\u8981\u3089\u3057\u3044\u3002\n\u30ec\u30f3\u30c0\u30e9\u30fc\u3092\u521d\u671f\u5316\u3059\u308b\u524d\u306b\u3053\u308c\u3092\u8a18\u8ff0\u3059\u308b\u3068\u3061\u3083\u3093\u3068\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u63d0\u51fa\u3057\u3066\u304f\u308c\u308b\u306e\u3060\u3068\u3002\n\u53c2\u8003\u30ea\u30f3\u30af\nhttp://gupuru.hatenablog.jp/entry/2014/01/05/224813\n\nline.js\n\n\n\nparameters = [ [ 0.5, 0xff7700, 1, 2 ], [ 0.5, 0xff9900, 1, 1 ], [ 0.6, 0xffaa00, 0.75, 1 ], [ 1, 0xffaa00, 0.5, 1 ], [ 0.7, 0x000833, 0.8, 1 ],\n                                   [ 0.8, 0xaaaaaa, 0.75, 2 ], [ 0.9, 0xFFD464, 0.5, 1 ], [ 1.0, 0xffffff, 0.25, 100 ], [ 1.1, 0xffffff, 0.125, 100 ] ];\n\n    var geometry = createGeometry();\n\n                for( i = 0; i < parameters.length; ++ i ) {\n\n                    p = parameters[ i ];\n\n                    material = new THREE.LineBasicMaterial( { color: p[ 1 ], opacity: p[ 2 ], linewidth: p[ 3 ] } );\n\n                    line = new THREE.LineSegments( geometry, material );\n                    line.scale.x = line.scale.y = line.scale.z = p[ 0 ];\n                    line.originalScale = p[ 0 ];\n                    //line.rotation.y = Math.random() * Math.PI;\n                    //line.updateMatrix();\n                    scene.add( line );\n\n                }\n\n\n\n\u6b21\u306b\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u306f\u3001\u3053\u3053\u3067\u3057\u305f\u3002\n\u50d5\u306f\u3001\u306f\u3058\u3081\u306b\u914d\u5217\u3092\u4f5c\u3063\u3066\u305d\u306e\u3042\u3068for\u6587\u3092\u7528\u3044\u3066\u3001parameter\u306e\u305d\u308c\u305e\u308c\u306e\u5024\u3092\u3001\u4e00\u6c17\u306b\u30e9\u30a4\u30f3\u306b\u7a81\u3063\u8fbc\u3080\u3068\u3044\u3046\u624b\u6cd5\u3092\u77e5\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u304b\u306a\u308a\u304a\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308cC#\u3067\u3082\u4f7f\u3048\u305d\u3046\u3002\n\u3042\u3068\u3001\nLineBasicMaterial\u306f\u3001\u30e9\u30a4\u30f3\u5c02\u7528\u306b\u30de\u30c6\u30ea\u30a2\u30eb\u3067\u3057\u305f\u3002\u306a\u3093\u3067\u30e9\u30a4\u30f3\u5c02\u7528\u306e\u30de\u30c6\u30ea\u30a2\u30eb\u306a\u3093\u3066\u3042\u308b\u3093\u3060\u308d\u3046\u3002\u3002\u3002\u3002\u5168\u90e8\u4e00\u7dd2\u3067\u3044\u3044\u3058\u3083\u3093\u3002\u3002(\u3058\u3083\u30c0\u30e1\u306a\u306e\u304b\u306a)\n\u53c2\u8003\nhttp://gupuru.hatenablog.jp/entry/2013/11/29/204049\n\u3042\u3068\u3001LineSegments\u3063\u3066\u306a\u3093\u3060\u308d\u3046\u3063\u3066\u306a\u3063\u3066\u898b\u3066\u307f\u305f\u3089\u5b9f\u969b\u306b\u30e9\u30a4\u30f3\u3092\u4f5c\u308b\u3084\u3064\u3063\u307d\u304b\u3063\u305f\u3067\u3059\u3002\ncreatePrimitive\u7684\u306a\u3084\u3064\u304b\u306a\n\u53c2\u8003\u30b5\u30a4\u30c8\nhttps://threejs.org/docs/api/objects/LineSegments.html\n\u3042\u3068\u3001\nscean.traverce\u306b\u3064\u3044\u3066\u3001\u30c8\u30e9\u30d0\u30fc\u30b9\u306e\u5f15\u6570\u306b\u6e21\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u5b50\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u9069\u7528\u3055\u308c\u308b\u3088\u3046\u306a\u95a2\u6570\u3089\u3057\u3044\u3002\u3088\u304f\u308f\u304b\u3089\u3093\u3002\u3061\u306a\u307f\u306b\u7b2c\u4e8c\u5f15\u6570\u306e\u6570\u5024\u3092\u5909\u3048\u308b\u3068\u3001fps\u304c\u5909\u308f\u308a\u307e\u304f\u3063\u305f\u6c17\u304c\u3057\u305f\u3002\nscean\u305d\u306e\u3082\u306e\u306e\u72b6\u614b\u3092\u5909\u5316\u3055\u305b\u308b\u306e\u304b\u306a\n\u53c2\u8003\nhttp://stackoverflow.com/questions/31899398/what-does-object-traverse-mean-in-three-js\n\nline.js\n\nfunction createGeometry() {\n\nn+= 0.1;\n                var geometry = new THREE.Geometry();\n\n                for ( i = 0; i < 150; i ++ ) {\n\n                    var vertex1 = new THREE.Vector3();\n                    vertex1.x = Math.random() * 10*Math.sin(n) - 1;\n                    vertex1.y = Math.random() * 10*Math.cos(n) - 1;\n                    //vertex1.z = (Math.random() * 10 - 1)*Math.sin(n);\n                    vertex1.normalize();\n                    vertex1.multiplyScalar( r );\n\n                    vertex2 = vertex1.clone();\n                    vertex2.multiplyScalar( Math.random() *2 + 1 );\n\n                    geometry.vertices.push( vertex1 );\n                    geometry.vertices.push( vertex2 );\n\n                }\n\n                return geometry;\n\n            }\n\n\n\n\u3053\u308c\u306epush\u306e\u3084\u3064\u3002\n\u5b9f\u969b\u306b\u9802\u70b9\u5ea7\u6a19\u3092\u9802\u70b9\u914d\u5217\u306e\u4e2d\u306b\u5165\u308c\u8fbc\u3080\u3084\u3064\u307f\u305f\u3044\u3002\n2\u3064\u9802\u70b9\u3042\u308b\u306e\u306f\u3001\u30e9\u30a4\u30f3\u3060\u304b\u3089\u3060\u3088\u306d\n\u53c2\u8003\nhttp://matorel.com/archives/894\n\u4ee5\u4e0a\n\u521d\u6295\u7a3f\u3067\u3057\u305f\u3002\n\u666e\u6bb5Unity\u4f7f\u3063\u3066\u304a\u4ed5\u4e8b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u65b0\u3057\u3044\u8da3\u5473\u304c\u6b32\u3057\u304b\u3063\u305f\u306e\u3067three.js\u3092\u304a\u52c9\u5f37\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u4f5c\u3063\u305f\u3084\u3064\u3002\u6b63\u76f4\u307e\u3060\u4f55\u304c\u4f55\u3060\u304b\u308f\u304b\u3063\u3066\u3044\u306a\u3044\u72b6\u614b\n\u305d\u308c\u3063\u307d\u3044\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u3092\u5909\u3048\u3066\u307f\u305f\u3002\n\n\n![0b0c93d49556ba1112fd707be06fd941.gif](https://qiita-image-store.s3.amazonaws.com/0/108368/e9f8ce58-8cbf-0aa4-a266-edef9276d327.gif)\n\n\u53c2\u8003\u306b\u3057\u305f\u30b3\u30fc\u30c9\u306f\u3001\nthree.js\u306e\u30b5\u30f3\u30d7\u30eb\u306e\nwebGL_line_sphere.html\u3063\u3066\u3084\u3064\u3002\n\n\u6b63\u76f4\u30b5\u30f3\u30d7\u30eb\u306e\u65b9\u304c\u7dba\u9e97\u3002\n\n\u30b3\u30fc\u30c9\n\n```html:line.js\n\nputs 'The best way to log and share programmers knowledge.'\n<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<title>three.js webgl - lines - spheres</title>\n\t\t<meta charset=\"utf-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0\">\n\t\t<style>\n\t\t\tbody {\n\t\t\t\tbackground-color: #ffffff;\n\t\t\t\tmargin: 0px;\n\t\t\t\toverflow: hidden;\n\t\t\t}\n\n\t\t\ta {\n\t\t\t\tcolor:#111111;\n\t\t\t}\n\n\t\t\t#info {\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 100px; width: 100%;\n\t\t\t\tcolor: #ffffff;\n\t\t\t\tpadding: 5px;\n\t\t\t\tfont-family: Monospace;\n\t\t\t\tfont-size: 13px;\n\t\t\t\ttext-align: center;\n\t\t\t\tz-index:100;\n\t\t\t}\n\n\t\t\ta {\n\t\t\t\tcolor: #ffffff;\n\t\t\t\ttext-decoration: none;\n\t\t\t}\n\n\t\t\ta:hover {\n\t\t\t\tcolor: #ffffff;\n\t\t\t}\n\n\t\t</style>\n\t</head>\n\t<body>\n\n\t\t\n\n\t\t<script src=\"../build/three.js\"></script>\n\n\t\t<script src=\"js/Detector.js\"></script>\n\t\t<script src=\"js/libs/stats.min.js\"></script>\n\n\t\t<script>\n\n\t\t\tif ( ! Detector.webgl ) Detector.addGetWebGLMessage();\n\n\t\t\tvar SCREEN_WIDTH = window.innerWidth,\n\t\t\t\tSCREEN_HEIGHT = window.innerHeight,\n\n\t\t\tr = 450,\n\n n =0,\n\t\t\tmouseX = 0, mouseY = 0,\n\n\t\t\twindowHalfX = window.innerWidth / 2,\n\t\t\twindowHalfY = window.innerHeight / 2,\n\n\t\t\tcamera, scene, renderer;\n\n\t\t\tinit();\n\t\tanimate();\n\n\t\t\tfunction init() {\n\n\t\t\t\tvar container;\n\n\t\t\t\tcontainer = document.createElement( 'div' );\n\t\t\t\tdocument.body.appendChild( container );\n\n\t\t\t\tcamera = new THREE.PerspectiveCamera( 80, SCREEN_WIDTH / SCREEN_HEIGHT, 1, 3000 );\n\t\t\t\tcamera.position.z = 1000;\n\n\t\t\t\tscene = new THREE.Scene();\n\n\t\t\t\tvar i, line, vertex1, vertex2, material, p,\n\t\t\t\t\tparameters = [ [ 0.5, 0xff7700, 1, 2 ], [ 0.5, 0xff9900, 1, 1 ], [ 0.6, 0xffaa00, 0.75, 1 ], [ 1, 0xffaa00, 0.5, 1 ], [ 0.7, 0x000833, 0.8, 1 ],\n\t\t\t\t\t\t\t       [ 0.8, 0xaaaaaa, 0.75, 2 ], [ 0.9, 0xFFD464, 0.5, 1 ], [ 1.0, 0xffffff, 0.25, 100 ], [ 1.1, 0xffffff, 0.125, 100 ] ];\n\n\t\t\t\tvar geometry = createGeometry();\n\n\t\t\t\tfor( i = 0; i < parameters.length; ++ i ) {\n\n\t\t\t\t\tp = parameters[ i ];\n\n\t\t\t\t\tmaterial = new THREE.LineBasicMaterial( { color: p[ 1 ], opacity: p[ 2 ], linewidth: p[ 3 ] } );\n\n\t\t\t\t\tline = new THREE.LineSegments( geometry, material );\n\t\t\t\t\tline.scale.x = line.scale.y = line.scale.z = p[ 0 ];\n\t\t\t\t\tline.originalScale = p[ 0 ];\n\t\t\t\t\t//line.rotation.y = Math.random() * Math.PI;\n\t\t\t\t\t//line.updateMatrix();\n\t\t\t\t\tscene.add( line );\n\n\t\t\t\t}\n\n\t\t\t\trenderer = new THREE.WebGLRenderer( { antialias: true } );\n\t\t\t\trenderer.setPixelRatio( window.devicePixelRatio );\n\t\t\t\trenderer.setSize( SCREEN_WIDTH, SCREEN_HEIGHT );\n\t\t\t\tcontainer.appendChild( renderer.domElement );\n\n\t\t\t\tdocument.addEventListener( 'mousemove', onDocumentMouseMove, false );\n\t\t\t\tdocument.addEventListener( 'touchstart', onDocumentTouchStart, false );\n\t\t\t\tdocument.addEventListener( 'touchmove', onDocumentTouchMove, false );\n\n\t\t\t\t//\n\n\t\t\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\t\t\t// test geometry swapability\n\n\t\t\t\tsetInterval( function () {\n\n\t\t\t\t\tvar geometry = createGeometry();\n\n\t\t\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\t\t\tif ( object instanceof THREE.Line ) {\n\n\t\t\t\t\t\t\tobject.geometry.dispose();\n\t\t\t\t\t\t\tobject.geometry = geometry;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t},100 );\n\n\t\t\t}\n\n\t\t\tfunction createGeometry() {\n\nn+= 0.1;\n\t\t\t\tvar geometry = new THREE.Geometry();\n\n\t\t\t\tfor ( i = 0; i < 150; i ++ ) {\n\n\t\t\t\t\tvar vertex1 = new THREE.Vector3();\n\t\t\t\t\tvertex1.x = Math.random() * 10*Math.sin(n) - 1;\n\t\t\t\t\tvertex1.y = Math.random() * 10*Math.cos(n) - 1;\n\t\t\t\t\t//vertex1.z = (Math.random() * 10 - 1)*Math.sin(n);\n\t\t\t\t\tvertex1.normalize();\n\t\t\t\t\tvertex1.multiplyScalar( r );\n\n\t\t\t\t\tvertex2 = vertex1.clone();\n\t\t\t\t\tvertex2.multiplyScalar( Math.random() *2 + 1 );\n\n\t\t\t\t\tgeometry.vertices.push( vertex1 );\n\t\t\t\t\tgeometry.vertices.push( vertex2 );\n\n\t\t\t\t}\n\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n\t\t\tfunction onWindowResize() {\n\n\t\t\t\twindowHalfX = window.innerWidth / 2;\n\t\t\t\twindowHalfY = window.innerHeight / 2;\n\n\t\t\t\tcamera.aspect = window.innerWidth / window.innerHeight;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t\trenderer.setSize( window.innerWidth, window.innerHeight );\n\n\t\t\t}\n\n\t\t\tfunction onDocumentMouseMove( event ) {\n\n\t\t\t\tmouseX = event.clientX - windowHalfX;\n\t\t\t\tmouseY = event.clientY - windowHalfY;\n\n\t\t\t}\n\n\t\t\tfunction onDocumentTouchStart( event ) {\n\n\t\t\t\tif ( event.touches.length > 1 ) {\n\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tmouseX = event.touches[ 0 ].pageX - windowHalfX;\n\t\t\t\t\tmouseY = event.touches[ 0 ].pageY - windowHalfY;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction onDocumentTouchMove( event ) {\n\n\t\t\t\tif ( event.touches.length == 1 ) {\n\n\t\t\t\t\tevent.preventDefault();\n\n\t\t\t\t\tmouseX = event.touches[ 0 ].pageX - windowHalfX;\n\t\t\t\t\tmouseY = event.touches[ 0 ].pageY - windowHalfY;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfunction animate() {\n\n\t\t\t\trequestAnimationFrame( animate );\n\n\t\t\t\trender();\n\n\t\t\t}\n\n\t\t\tfunction render() {\n\n\n\t\t\t\t//camera.position.y = ( - mouseY + 200 - camera.position.y ) * .05;\n\t\t\t//\tcamera.lookAt( scene.position );\n\n\t\t\t\trenderer.render( scene, camera );\n\n\t\t\t\t//var time = Date.now() * 0.0001;\n\n\t\t\t\tfor ( var i = 0; i < scene.children.length; i ++ ) {\n\n\t\t\t\t\tvar object = scene.children[ i ];\n\n//\t\t\t\t\tif ( object instanceof THREE.Line ) {\n\n\t\t\t\t\t\t//object.rotation.y = time * ( i < 4 ? ( i + 1 ) : - ( i + 1 ) );\n\n\t\t\t\t\t\t//if ( i < 5 ) object.scale.x = object.scale.y = object.scale.z = object.originalScale * (i/5+1) * (1 + 0.5 * Math.sin( 7*time ) );\n\n\t\t\t\t\t//}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t</script>\n\t</body>\n</html>\n```\n\n\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3084\u3064\n\n```html:line.js\n\n<script src=\"js/Detector.js\"></script>\n\nif ( ! Detector.webgl ) Detector.addGetWebGLMessage();\n\n\n```\n\nDetector.js\u306f\u3001webGL\u672a\u5bfe\u5fdc\u30d6\u30e9\u30a6\u30b6\u3067\u30a8\u30e9\u30fc\u6587\u7ae0\u3092\u8868\u793a\u3055\u305b\u308b\u305f\u3081\u306b\u5fc5\u8981\u3089\u3057\u3044\u3002\n\u30ec\u30f3\u30c0\u30e9\u30fc\u3092\u521d\u671f\u5316\u3059\u308b\u524d\u306b\u3053\u308c\u3092\u8a18\u8ff0\u3059\u308b\u3068\u3061\u3083\u3093\u3068\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u63d0\u51fa\u3057\u3066\u304f\u308c\u308b\u306e\u3060\u3068\u3002\n\n\u53c2\u8003\u30ea\u30f3\u30af\nhttp://gupuru.hatenablog.jp/entry/2014/01/05/224813\n\n\n```js:line.js\n\n\n\nparameters = [ [ 0.5, 0xff7700, 1, 2 ], [ 0.5, 0xff9900, 1, 1 ], [ 0.6, 0xffaa00, 0.75, 1 ], [ 1, 0xffaa00, 0.5, 1 ], [ 0.7, 0x000833, 0.8, 1 ],\n\t\t\t\t\t\t\t       [ 0.8, 0xaaaaaa, 0.75, 2 ], [ 0.9, 0xFFD464, 0.5, 1 ], [ 1.0, 0xffffff, 0.25, 100 ], [ 1.1, 0xffffff, 0.125, 100 ] ];\n\n\tvar geometry = createGeometry();\n\n\t\t\t\tfor( i = 0; i < parameters.length; ++ i ) {\n\n\t\t\t\t\tp = parameters[ i ];\n\n\t\t\t\t\tmaterial = new THREE.LineBasicMaterial( { color: p[ 1 ], opacity: p[ 2 ], linewidth: p[ 3 ] } );\n\n\t\t\t\t\tline = new THREE.LineSegments( geometry, material );\n\t\t\t\t\tline.scale.x = line.scale.y = line.scale.z = p[ 0 ];\n\t\t\t\t\tline.originalScale = p[ 0 ];\n\t\t\t\t\t//line.rotation.y = Math.random() * Math.PI;\n\t\t\t\t\t//line.updateMatrix();\n\t\t\t\t\tscene.add( line );\n\n\t\t\t\t}\n\n```\n\n\u6b21\u306b\u3088\u304f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u306f\u3001\u3053\u3053\u3067\u3057\u305f\u3002\n\n\u50d5\u306f\u3001**\u306f\u3058\u3081\u306b\u914d\u5217\u3092\u4f5c\u3063\u3066\u305d\u306e\u3042\u3068for\u6587\u3092\u7528\u3044\u3066\u3001parameter\u306e\u305d\u308c\u305e\u308c\u306e\u5024\u3092\u3001\u4e00\u6c17\u306b\u30e9\u30a4\u30f3\u306b\u7a81\u3063\u8fbc\u3080\u3068\u3044\u3046\u624b\u6cd5**\u3092\u77e5\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u304b\u306a\u308a\u304a\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308cC#\u3067\u3082\u4f7f\u3048\u305d\u3046\u3002\n\n\u3042\u3068\u3001\n\n**LineBasicMaterial**\u306f\u3001\u30e9\u30a4\u30f3\u5c02\u7528\u306b\u30de\u30c6\u30ea\u30a2\u30eb\u3067\u3057\u305f\u3002\u306a\u3093\u3067\u30e9\u30a4\u30f3\u5c02\u7528\u306e\u30de\u30c6\u30ea\u30a2\u30eb\u306a\u3093\u3066\u3042\u308b\u3093\u3060\u308d\u3046\u3002\u3002\u3002\u3002\u5168\u90e8\u4e00\u7dd2\u3067\u3044\u3044\u3058\u3083\u3093\u3002\u3002(\u3058\u3083\u30c0\u30e1\u306a\u306e\u304b\u306a)\n\n\u53c2\u8003\n\nhttp://gupuru.hatenablog.jp/entry/2013/11/29/204049\n\n\u3042\u3068\u3001**LineSegments**\u3063\u3066\u306a\u3093\u3060\u308d\u3046\u3063\u3066\u306a\u3063\u3066\u898b\u3066\u307f\u305f\u3089\u5b9f\u969b\u306b\u30e9\u30a4\u30f3\u3092\u4f5c\u308b\u3084\u3064\u3063\u307d\u304b\u3063\u305f\u3067\u3059\u3002\ncreatePrimitive\u7684\u306a\u3084\u3064\u304b\u306a\n\n\u53c2\u8003\u30b5\u30a4\u30c8\n\nhttps://threejs.org/docs/api/objects/LineSegments.html\n\n\u3042\u3068\u3001\n\n**scean.traverce**\u306b\u3064\u3044\u3066\u3001\u30c8\u30e9\u30d0\u30fc\u30b9\u306e\u5f15\u6570\u306b\u6e21\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u5b50\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u9069\u7528\u3055\u308c\u308b\u3088\u3046\u306a\u95a2\u6570\u3089\u3057\u3044\u3002\u3088\u304f\u308f\u304b\u3089\u3093\u3002\u3061\u306a\u307f\u306b\u7b2c\u4e8c\u5f15\u6570\u306e\u6570\u5024\u3092\u5909\u3048\u308b\u3068\u3001fps\u304c\u5909\u308f\u308a\u307e\u304f\u3063\u305f\u6c17\u304c\u3057\u305f\u3002\n\nscean\u305d\u306e\u3082\u306e\u306e\u72b6\u614b\u3092\u5909\u5316\u3055\u305b\u308b\u306e\u304b\u306a\n\n\u53c2\u8003\n\nhttp://stackoverflow.com/questions/31899398/what-does-object-traverse-mean-in-three-js\n\n```js:line.js\n\nfunction createGeometry() {\n\nn+= 0.1;\n\t\t\t\tvar geometry = new THREE.Geometry();\n\n\t\t\t\tfor ( i = 0; i < 150; i ++ ) {\n\n\t\t\t\t\tvar vertex1 = new THREE.Vector3();\n\t\t\t\t\tvertex1.x = Math.random() * 10*Math.sin(n) - 1;\n\t\t\t\t\tvertex1.y = Math.random() * 10*Math.cos(n) - 1;\n\t\t\t\t\t//vertex1.z = (Math.random() * 10 - 1)*Math.sin(n);\n\t\t\t\t\tvertex1.normalize();\n\t\t\t\t\tvertex1.multiplyScalar( r );\n\n\t\t\t\t\tvertex2 = vertex1.clone();\n\t\t\t\t\tvertex2.multiplyScalar( Math.random() *2 + 1 );\n\n\t\t\t\t\tgeometry.vertices.push( vertex1 );\n\t\t\t\t\tgeometry.vertices.push( vertex2 );\n\n\t\t\t\t}\n\n\t\t\t\treturn geometry;\n\n\t\t\t}\n\n```\n\n\u3053\u308c\u306epush\u306e\u3084\u3064\u3002\n\u5b9f\u969b\u306b\u9802\u70b9\u5ea7\u6a19\u3092\u9802\u70b9\u914d\u5217\u306e\u4e2d\u306b\u5165\u308c\u8fbc\u3080\u3084\u3064\u307f\u305f\u3044\u3002\n2\u3064\u9802\u70b9\u3042\u308b\u306e\u306f\u3001\u30e9\u30a4\u30f3\u3060\u304b\u3089\u3060\u3088\u306d\n\n\n\u53c2\u8003\n\nhttp://matorel.com/archives/894\n\n\u4ee5\u4e0a\n\n\u521d\u6295\u7a3f\u3067\u3057\u305f\u3002\n\n\n\n\n\n\n", "tags": ["JavaScript", "three.js"]}