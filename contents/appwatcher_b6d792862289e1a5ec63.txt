{"context": " More than 1 year has passed since last update.\u6700\u8fd1\u52d5\u753b\u306e\u52a0\u5de5\u30a2\u30d7\u30ea\u304c\u5f90\u3005\u306b\u76db\u308a\u4e0a\u304c\u308a\u3092\u898b\u305b\u3066\u3044\u307e\u3059\u304c\u3001iOS\u3067\u5199\u771f\u3068\u540c\u3058\u3088\u3046\u306b\u7c21\u5358\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u304b\u3051\u308b\u65b9\u6cd5\u3092\u6559\u3048\u307e\u3059\u3002\n\u305d\u308c\u306f\u307f\u3093\u306a\u5927\u597d\u304dGPUImage\u3092\u5229\u7528\u3059\u308c\u3070\u975e\u5e38\u306b\u7c21\u5358\u3067\u3059\u3002\nhttps://github.com/BradLarson/GPUImage\nGPUImageFilter *filter = xxxxx ;//\u304b\u3051\u305f\u3044\u30d5\u30a3\u30eb\u30bf\nNSURL *url = xxxxxxx; //movie\u306eURL\n GPUImageMovie *movieFile = [[GPUImageMovie alloc] initWithURL:url];\n\n AVURLAsset *asset = [AVURLAsset assetWithURL:url];\n NSArray *videoTracks = [asset tracksWithMediaType:AVMediaTypeVideo];\n AVAssetTrack *videoTrack = [videoTracks objectAtIndex:0];\n\n movieFile.playAtActualSpeed = YES;\n\n [movieFile addTarget:filter];\n\n\n NSURL    *exportUrl = xxxxxxxxxx; //\u51fa\u529b\u5148\n\n\n GPUImageMovieWriter *movieWriter = [[GPUImageMovieWriter alloc] initWithMovieURL:exportUrl size:videoTrack.naturalSize];\n\n\n[filter addTarget:_movieWriter];\nmovieWriter.shouldPassthroughAudio = YES;\nmovieFile.audioEncodingTarget = _movieWriter;\n[movieFile enableSynchronizedEncodingUsingMovieWriter:_movieWriter];\n\nBOOL alreadyRecordComplate = NO;\n\n\nmovieWriter.completionBlock = ^(){\n        if(!alreadyRecordComplate){\n             NSLog(@\"movie writer end\");\n            alreadyRecordComplate = YES;\n            [movieWriter finishRecordingWithCompletionHandler:^{\n                [filter removeTarget:movieWriter];\n\n            }];\n\n    }     \n};\n\nmovieWriter.failureBlock = ^(NSError *error){\n        NSLog(@\"movie writer failure %@\",error.description);\n\n};\n[movieWriter startRecording];\n[movieFile startProcessing];\n\n\nGPUImage\u306b\u306f\u975e\u5e38\u306b\u591a\u6570\u306eFilter\n\u305d\u306e\u4ed6iOS\u306f\u975e\u5e38\u306b\u52d5\u753b\u3092\u6271\u3046API\u304c\u5145\u5b9f\u3057\u3066\u304a\u308a\u3001AVFoundation.framework \u3092\u5229\u7528\u3059\u308b\u3068\u3001\u3082\u3063\u3068\u51dd\u3063\u305f\u7de8\u96c6\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u7686\u3055\u3093\u3082GPUImage\u3092\u4f7f\u3063\u3066\u697d\u3057\u3044\u52d5\u753b\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff01\n\u6700\u8fd1\u52d5\u753b\u306e\u52a0\u5de5\u30a2\u30d7\u30ea\u304c\u5f90\u3005\u306b\u76db\u308a\u4e0a\u304c\u308a\u3092\u898b\u305b\u3066\u3044\u307e\u3059\u304c\u3001iOS\u3067\u5199\u771f\u3068\u540c\u3058\u3088\u3046\u306b\u7c21\u5358\u306b\u30d5\u30a3\u30eb\u30bf\u30fc\u3092\u304b\u3051\u308b\u65b9\u6cd5\u3092\u6559\u3048\u307e\u3059\u3002\n\n\u305d\u308c\u306f\u307f\u3093\u306a\u5927\u597d\u304dGPUImage\u3092\u5229\u7528\u3059\u308c\u3070\u975e\u5e38\u306b\u7c21\u5358\u3067\u3059\u3002\nhttps://github.com/BradLarson/GPUImage\n\n\n```objc \nGPUImageFilter *filter = xxxxx ;//\u304b\u3051\u305f\u3044\u30d5\u30a3\u30eb\u30bf\nNSURL *url = xxxxxxx; //movie\u306eURL\n GPUImageMovie *movieFile = [[GPUImageMovie alloc] initWithURL:url];\n    \n AVURLAsset *asset = [AVURLAsset assetWithURL:url];\n NSArray *videoTracks = [asset tracksWithMediaType:AVMediaTypeVideo];\n AVAssetTrack *videoTrack = [videoTracks objectAtIndex:0];\n    \n movieFile.playAtActualSpeed = YES;\n    \n [movieFile addTarget:filter];\n\n\n NSURL    *exportUrl = xxxxxxxxxx; //\u51fa\u529b\u5148\n \n \n GPUImageMovieWriter *movieWriter = [[GPUImageMovieWriter alloc] initWithMovieURL:exportUrl size:videoTrack.naturalSize];\n\n\n[filter addTarget:_movieWriter];\nmovieWriter.shouldPassthroughAudio = YES;\nmovieFile.audioEncodingTarget = _movieWriter;\n[movieFile enableSynchronizedEncodingUsingMovieWriter:_movieWriter];\n \nBOOL alreadyRecordComplate = NO;\n    \n    \nmovieWriter.completionBlock = ^(){\n        if(!alreadyRecordComplate){\n             NSLog(@\"movie writer end\");\n            alreadyRecordComplate = YES;\n            [movieWriter finishRecordingWithCompletionHandler:^{\n                [filter removeTarget:movieWriter];\n          \n       \t\t}];\n          \n\t}     \n};\n    \nmovieWriter.failureBlock = ^(NSError *error){\n        NSLog(@\"movie writer failure %@\",error.description);\n\n};\n[movieWriter startRecording];\n[movieFile startProcessing];\n\n```\nGPUImage\u306b\u306f\u975e\u5e38\u306b\u591a\u6570\u306eFilter\n\n\u305d\u306e\u4ed6iOS\u306f\u975e\u5e38\u306b\u52d5\u753b\u3092\u6271\u3046API\u304c\u5145\u5b9f\u3057\u3066\u304a\u308a\u3001AVFoundation.framework \u3092\u5229\u7528\u3059\u308b\u3068\u3001\u3082\u3063\u3068\u51dd\u3063\u305f\u7de8\u96c6\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u7686\u3055\u3093\u3082GPUImage\u3092\u4f7f\u3063\u3066\u697d\u3057\u3044\u52d5\u753b\u30a2\u30d7\u30ea\u3092\u4f5c\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff01\n\n\n", "tags": ["iOS", "\u52d5\u753b", "Objective-C"]}