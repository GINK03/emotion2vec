{"tags": ["C++", "Mathematics", "library", "OpenGL", "AdventCalendar2014"], "context": " More than 1 year has passed since last update.\nThis is the article of the C++ Advent Calendar 2014 DAY 24\n\n\nyesterday(23): \u30b3\u30f3\u30d1\u30a4\u30eb\u6642Brainfuck\u30b3\u30f3\u30d1\u30a4\u30e9 \u2015\u2015C++14 constexpr \u306e\u9032\u6b69\u3068\u9650\u754c\u2015\u2015 / \u30dc\u30ec\u30ed\u6751\u4e0a\ntomorrow(25): \u521d\u5fc3\u8005\u5411\u3051\u300e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8d85\u5165\u9580\u300f / \u3061\u3087\u307e\u3069\n\n\n\n\nglm - \u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u305f\u3081\u306eC++\u6570\u5b66\u7cfb\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\n\nglm \u3068\u306f\u4f55\u304b\uff1f\n\u3053\u3053\u3067\u7d39\u4ecb\u3059\u308b glm \u306f C++ \u306e\u5ea7\u6a19\u7cfb\u30d9\u30af\u30bf\u30fc\u306e\u53d6\u308a\u6271\u3044\u3092\u4e2d\u5fc3\u3068\u3057\u305f\u6570\u5b66\u7cfb\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3059\u3002\u57fa\u672c\u7684\u306b\u306f3DCG\u5411\u3051\u306e\u3001\u7279\u306bOpenGL\u3068\u306e\u89aa\u548c\u6027\u306e\u9ad8\u3044\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u7528\u9014\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3059\u304c\u3001\u305d\u306e\u6a5f\u80fd\u306f\u3088\u304f\u6574\u7406\u3055\u308c\u3066\u5b9f\u88c5\u3055\u308c\u3066\u304a\u308a\u3001\u6bd4\u8f03\u7684\u4f4e\u6b21\u306e\u30d9\u30af\u30bf\u30fc\u51e6\u7406\u306b\u6c4e\u7528\u306b\u6271\u3048\u308b\u3082\u306e\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f C++ Advent Calendar 2014 \u3078\u306e\u53c2\u52a0\u8a18\u4e8b\u3068\u3057\u3066\u3001 glm \u306b\u3064\u3044\u3066\u7c21\u5358\u306b\u305d\u306e\u51e1\u305d\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nglm \u306e\u516c\u5f0f\u60c5\u5831\u3068\u5165\u624b\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u306b\u3064\u3044\u3066\nglm \u306e\u516c\u5f0f\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306f\u3053\u3061\u3089:\n\n\nhttp://www.g-truc.net/ - Christophe Riccio \u306b\u3088\u308b OpenGL \u60c5\u5831\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \"g-truc\"\n\n\n\nhttp://glm.g-truc.net/ - g-truc \u306e\u4e3b\u8981\u30b3\u30f3\u30c6\u30f3\u30c8\u3068\u306a\u3063\u305f glm \u306e\u516c\u5f0f\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\n\n\n\n\u5165\u624b\u306f github \u304b\u3089:\n\n\nhttps://github.com/g-truc/glm - git@github.com:g-truc/glm.git\n\n\u30e9\u30a4\u30bb\u30f3\u30b9\u306f The Happy Bunny License \u3068 MIT License \u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u306f readme.txt \u3088\u308a\u5f15\u7528:\n\nGLM is licensed under The Happy Bunny License and MIT License\n\n\nThe Happy Bunny License\nMIT License\n\n\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u8981\u70b9\u306f\u8ecd\u4e8b\u76ee\u7684\u306b\u4f7f\u308f\u306a\u3051\u308c\u3070\u8457\u4f5c\u6a29\u8868\u793a\u3092\u5b88\u3063\u3066\u81ea\u7531\u306b\u4f7f\u3063\u3066\u826f\u3044\u3068\u3044\u3046\u5177\u5408\u3067\u3059\u3002\uff08\u5b9f\u7528\u306b\u3042\u305f\u3063\u3066\u306f\u305d\u306e\u6642\u70b9\u3067\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u6587\u66f8\u3092\u6b63\u78ba\u306b\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\u3002\uff09\n\nglm \u3092\u306f\u3058\u3081\u3066\u4f7f\u3046: Hello, glm!\n\uff08\u203b\u958b\u767a\u74b0\u5883\u304c\u6574\u3063\u3066\u3044\u306a\u3044\u3001\u3042\u308b\u3044\u306f\u3069\u3046\u6574\u3048\u3066\u826f\u3044\u304b\u5206\u304b\u3089\u306a\u3044\u72b6\u614b\u306e\u65b9\u306f\u3001 Cloud9 IDE \u306a\u3069\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3059\u3050\u306b\u4f7f\u3048\u308b\u72b6\u614b\u306e\u958b\u767a\u74b0\u5883\u3092\u8a66\u3057\u3066\u307f\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002Cloud9 IDE\u3092\u4f7f\u3046\u5834\u5408\u306f\u4e2d\u8eab\u306fUbuntu\u3067\u3059\u304b\u3089\u4e0d\u8db3\u304c\u3042\u308c\u3070sudo apt-get\u3067\u74b0\u5883\u3078\u5c0e\u5165\u3067\u304d\u307e\u3059\u3002\uff09\n\u5148\u305a\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u30fc\u3092\u7528\u610f\u3057\u307e\u3057\u3087\u3046\u3002\nmkdir -p ~/repos/hello_glm\ncd ~/repos/hello_glm\ngit init\ngit submodule add git@github.com:g-truc/glm.git submodule/glm\n\n\uff08\u203b\u3053\u306e\u6642\u70b9\u3067\u4f55\u3092\u3057\u3066\u3044\u308b\u306e\u304b\u5206\u304b\u3089\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30b3\u30de\u30f3\u30c9\u3084git\u306e\u4f7f\u7528\u65b9\u6cd5\u306b\u3064\u3044\u3066\u5148\u306b\u5b66\u3073\u307e\u3057\u3087\u3046\u3002\uff09\nglm \u3092\u4f7f\u3063\u305f\u521d\u6b69\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nvim main.cxx\n\n\uff08\u203bvim\u3067\u7de8\u96c6\u3059\u308b\u306e\u306b\u6163\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u304a\u597d\u307f\u306e\u3001\u3042\u308b\u3044\u306f Cloud9 IDE \u306e\u30a8\u30c7\u30a3\u30bf\u30fc\u6a5f\u80fd\u306a\u3069\u4f7f\u3046\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\uff09\n#include <iostream>\n#include <glm/glm.hpp>\n\nauto main()\n  -> int\n{\n  auto a = glm::vec2( 3, 4 );\n  std::cout\n    << \"a: \" << a.x << \" \" << a.y << \"\\n\"\n    << \"length(a): \" << glm::length( a )\n    ;\n}\n\n\u3053\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u306f glm \u306e\u57fa\u790e\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b glm::vec2 \uff082\u6b21\u5143\u30d9\u30af\u30bf\u30fc\uff09\u3092 a \u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3001\u6a19\u6e96\u51fa\u529b\u3078\u5b9a\u7fa9\u3055\u308c\u305f a \u306e\u5024 .x \u3068 .y \u3092\u51fa\u529b\u3001\u3064\u3044\u3067\u306b glm::length \uff08\u30d9\u30af\u30bf\u30fc\u306e\u9577\u3055\u3092\u6c42\u3081\u308b\u95a2\u6570\uff09\u306b\u3088\u308a a \u306e\u9577\u3055\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\u3055\u3063\u305d\u304f\u7ffb\u8a33\u3057\u3066\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3068\u3053\u308d\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u76f4\u63a5c++ -I./submodule/glm main.cxx -o hello_glm && hello_glm\u3068\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e9\u3005\u306b CMakeLists.txt \u3092\u7528\u610f\u3057\u3066\u30e2\u30c0\u30f3\u3067\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306a\u958b\u767a\u30ea\u30dd\u30b8\u30c8\u30ea\u30fc\u306b\u3057\u307e\u3057\u3087\u3046\u3002\nvim CMakeLists.txt\n\ncmake_minimum_required(VERSION 2.8.12)\n\nproject(hello_glm)\n\nif(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_BINARY_DIR}\")\n  message(SEND_ERROR \"In-source builds are not allowed.\")\nendif()\n\nset(CMAKE_DISABLE_IN_SOURCE_BUILD ON)\nset(CMAKE_DISABLE_SOURCE_CHANGES  ON)\n\nset(CMAKE_VERBOSE_MAKEFILE ON)\nset(CMAKE_COLOR_MAKEFILE ON)\n\nif (WIN32)\n  set(CMAKE_SHARED_LIBRARY_PREFIX \"\")\nendif()\n\nif(CMAKE_CXX_COMPILER MATCHES \"/em\\\\+\\\\+(-[a-zA-Z0-9.])?$\")\n  set(CMAKE_CXX_COMPILER_ID \"Emscripten\")\nendif()\n\nif(NOT CMAKE_CXX_COMPILER_ID STREQUAL \"MSVC\")\n  include(CheckCXXCompilerFlag)\n  CHECK_CXX_COMPILER_FLAG(\"-std=c++11\" COMPILER_SUPPORTS_CXX11)\n  CHECK_CXX_COMPILER_FLAG(\"-std=c++0x\" COMPILER_SUPPORTS_CXX0X)\n\n  if(COMPILER_SUPPORTS_CXX11)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n  elseif(COMPILER_SUPPORTS_CXX0X)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\n  else()\n    message(STATUS \"The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.\")\n  endif()\n\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11 -Wall -pedantic-errors\")\nelse()\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /Wall /Za\")\nendif()\n\ninclude_directories(${CMAKE_SOURCE_DIR}/submodule/glm)\n\nfile(GLOB CXX_SOURCE_FILES *.cxx)\n\nif(NOT CMAKE_CXX_COMPILER_ID STREQUAL \"Emscripten\")\n  set(TARGET ${PROJECT_NAME})\nelse()\n  set(TARGET ${PROJECT_NAME}.html)\nendif()\n\nadd_executable(${TARGET} ${CXX_SOURCE_FILES})\n\n\uff08\u203b\u4f46\u3057\u4eca\u56de\u306e\u57f7\u7b46\u524d\u5f8c\u3001\u8457\u8005\u306fMSVC++\u3067\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u8457\u8005\u306e\u4e88\u60f3\u5916\u306e\u4e8b\u304c\u8d77\u304d\u305f\u3089\u3054\u3081\u3093\u306a\u3055\u3044\u3001\u305d\u306e\u6642\u306b\u306f\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u9802\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\uff09\n\u3053\u306eCMakeLists.txt\u306f\u5fc5\u8981\u6700\u5c0f\u9650\u3067\u306f\u306a\u304f\u3001\u6bd4\u8f03\u7684\u306b\u5b9f\u7528\u7684\u306a\u5185\u5bb9\u3067\u8a18\u8ff0\u3057\u3066\u3042\u308a\u307e\u3059\u3002\u3082\u3057\u3001\u308f\u304b\u3089\u306a\u3044\u4e8b\u304c\u3042\u308c\u3070\u8abf\u3079\u3066\u307f\u3066cmake\u3092\u3042\u308b\u7a0b\u5ea6\u4f7f\u3044\u3053\u306a\u305b\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u3067\u306f\u3001\u30d3\u30eb\u30c9\u3057\u307e\u3057\u3087\u3046\u3002\nmkdir build\ncd build\ncmake .. -G Ninja -DCMAKE_BIULD_TYPE=Debug\n\n\uff08\u203b\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3092-D Ninja\u3068\u3057\u3066\u3044\u307e\u3059\u304c\u3001cmake\u306fNinja\u306e\u307b\u304b\u3001Makefile CodeBlocks Eclipse CDT KDevelop Sublime Text \u305d\u308c\u304b\u3089 Xcode \u3084 MSVC++ \u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306f\u305a\u306a\u306e\u3067\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u9078\u629e\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002 \uff09\nninja\n\n\uff08\u203bMakefile\u306a\u3089make\u3001\u4ed6\u306e\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3092\u9078\u629e\u3057\u305f\u5834\u5408\u306f\u305d\u308c\u305e\u308c\u306e\u30d3\u30eb\u30c9\u65b9\u6cd5\u306b\u5f93\u3044\u307e\u3059\u3002\uff09\n\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n./hello_glm\n\n\na: 3 4\nlength(a): 5\n\n\n\u4e8c\u6b21\u5143\u306e\u30ab\u30eb\u30c6\u30b7\u30a2\u30f3\u5ea7\u6a19\u7cfb\u3067 (x,y)=(3,4) \u306e\u30d9\u30af\u30bf\u30fc\u3092 a \u3068\u3057\u307e\u3057\u305f\u306e\u3067\u3001 glm::length(a) \u306f\u76f4\u89d2\u3092\u631f\u30802\u8fba\u306e\u9577\u3055\u304c\u305d\u308c\u305e\u308c 3\u3001 4 \u306e\u76f4\u89d2\u4e09\u89d2\u5f62\u306e\u659c\u8fba\u306e\u9577\u3055\u3068\u3044\u3046\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\u5c0f\u5b66\u6821\u306e\u7b97\u6570\u306e\u6559\u79d1\u66f8\u306b\u3082\u76f4\u89d2\u4e09\u89d2\u5f62\u306e\u8fba\u306e\u9577\u3055\u304c\u6574\u6570\u306b\u306a\u308b\u7d44\u307f\u5408\u308f\u305b\u3068\u3057\u3066\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u56f3\u5f62\u3067\u3059\u3002\n\nglm \u306e\u6a5f\u80fd\u3068\u69cb\u9020\u306e\u6982\u8981\nglm \u306f\u6b21\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3068\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4eee\u60f3\u7684\u306bC++\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u98a8\u306b\u793a\u3057\u307e\u3059\u3002\n// A.1. glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u4e00\u90e8\u6a5f\u80fd\u306f CPP \u3092\u5b9a\u7fa9\u3057\u3066\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n#define GLM_SWIZZLE\n// 1. glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u57fa\u672c\u6a5f\u80fd\u304c\u542b\u307e\u308c\u307e\u3059\u3002\n#include <glm/glm.hpp>\n// 2. glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u62e1\u5f35\u6a5f\u80fd\u306e\u3046\u3061\u65e2\u306b\u4ed5\u69d8\u304c\u5b89\u5b9a\u3057\u305f\u6a5f\u80fd\u304c glm/gtc \u306b\u542b\u307e\u308c\u307e\u3059\u3002\n#include <glm/glc/constants.hpp>\n// 3. glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u62e1\u5f35\u6a5f\u80fd\u306e\u3046\u3061\u8a66\u9a13\u7684\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u6a5f\u80fd\u304c glm/gtx \u306b\u542b\u307e\u308c\u307e\u3059\u3002\n#include <glm/gtx/color_space.hpp>\n// 4. glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u62e1\u5f35\u6a5f\u80fd\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u53d6\u308a\u8fbc\u307f\u305f\u3044\u5834\u5408\u306b\u306f glm/ext.hpp \u3092\u4f7f\u3044\u307e\u3059\u3002\n#include <glm/ext.hpp>\n\nauto main()\n  -> int\n{\n  // glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u6a5f\u80fd\u306f\u57fa\u672c\u7684\u306b\u306f glm \u540d\u524d\u7a7a\u9593\u306b\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\n  glm::vec2 a, b;\n}\n\n// glm \u306f C++ \u30d8\u30c3\u30c0\u30fc\u30aa\u30f3\u30ea\u30fc\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\n// \u7ffb\u8a33\u6642\u306b\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u304c\u53d6\u308a\u8fbc\u307e\u308c\u3066\u3044\u308c\u3070\n// \u30d0\u30a4\u30ca\u30ea\u30fc\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u30ea\u30f3\u30af\u306a\u3069\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n\n\nglm \u306e\u57fa\u790e\u7684\u306a\u6a5f\u80fd: glm::vec, glm::mat \u306e\u4f7f\u3044\u65b9\nglm \u306b\u306f\u57fa\u790e\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066 glm::vec \u3068 glm::mat \u304c\u3042\u308a\u3001\u305d\u308c\u305e\u308c\u4f4e\u6b21\u5143\u306e\u30d9\u30af\u30bf\u30fc\u3068\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306e\u5b9f\u88c5\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3089\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u308a float double long double std::uint32_t \u306a\u3069\u3078\u306e\u7279\u6b8a\u5316\u7248\u3082\u3053\u306e\u5f8c\u3067\u7d39\u4ecb\u3059\u308b\u5404\u7a2e\u306e glm \u306e\u591a\u304f\u306e\u6a5f\u80fd\u3082\u542b\u3081\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3082\u3057\u3001std::uint16\u578b\u306e glm::vec3 \u3092\u4f7f\u3044\u305f\u3044\u6642\u306b\u306f\u3001\nglm::u16vec3 a( 1, 2, 3 );\n\n\u306a\u3069\u660e\u793a\u7684\u306b glm::u16vec3 \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u5177\u4f53\u7684\u306a\u578b\u306b\u306f\u4ed6\u306b\u3001 glm::i32vec3 glm::u64vec3 glm::f64vec3 \u306a\u3069\u306e\u9078\u629e\u80a2\u304c\u3042\u308a\u3001IEEE754/Binery(32|64)\u3001std::u?int(8|16|32|64)_t \u306e\u5185\u90e8\u578b\u306e\u305d\u308c\u305e\u308c\u306e\u5bfe\u5fdc\u7248\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\uff08\u203b\u6b63\u78ba\u306b\u306f OpenGL \u898f\u683c\u306e\u578b\u306b\u6e96\u62e0\u3067\u304d\u308b\u3088\u3046\u306b\u51fa\u6765\u3066\u3044\u307e\u3059\u304c\u3001\u56fa\u5b9a\u5c0f\u6570\u70b9\u306a\u3069\u73fe\u5728\u4e00\u822c\u7684\u306aCPU\u3067\u30cd\u30a4\u30c6\u30a3\u30d6\u306b\u6271\u3048\u306a\u3044\u578b\u306f\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002\uff09\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001glm::vec3( 1, 2, 3 ) \u306f\u30c7\u30d5\u30a9\u30fc\u30eb\u30c8\u3067 glm::f32vec3 \u3068\u306a\u308a\u3001\u6574\u6570\u578b\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u578b\u306e\u660e\u793a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\nglm::vec \u306e\u4f7f\u7528\u4f8b:\n#include <iostream>\n#include <glm/glm.hpp>\n\nauto main()\n  -> int\n{\n  auto p = glm::vec4( 2, 3, 4, 5 );\n  auto q = glm::vec4( 3, 4, 5, 6 );\n\n  // \u56db\u5247\u6f14\u7b97\u306e\u6f14\u7b97\u5b50\u304c\u5b9a\u7fa9\u6e08\u307f\u3067\u4fbf\u5229\u306b\u4f7f\u3048\u307e\u3059\u3002\n  // operator+ \u306e\u4f8b:\n  auto n = p + q;\n\n  // operator* \u306f\u5358\u306a\u308b\u6b21\u5143\u6bce\u306e\u30b9\u30ab\u30e9\u30fc\u7a4d\u3067\u3059:\n  auto m = p * q;\n\n  std::cout\n    << \"n ( operator+ ): \" << n.x << \" \" << n.y << \" \" << n.z << \" \" << n.w << \"\\n\"\n    << \"m ( operator* ): \" << m.x << \" \" << m.y << \" \" << m.z << \" \" << m.w << \"\\n\"\n    ;\n}\n\n\nn ( operator+ ): 5 7 9 11\nm ( operator* ): 6 12 20 30\n\n\nglm \u306e vec \u306e\u5404\u6b21\u5143\u306e\u8981\u7d20\u306e\u5024\u306b\u306f\u3001\u6b21\u5143\u6bce\u306b x y z w \u306e\u9806\u306b\u3001\u3042\u308b\u3044\u306f r g b a \u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n\nglm::mat \u306e\u4f7f\u7528\u4f8b:\n#include <iostream>\n#include <glm/glm.hpp>\n// \u3042\u3068\u3067 gtx \u62e1\u5f35\u306e\u7d39\u4ecb\u3067\u3082\u7c21\u5358\u306b\u89e6\u308c\u307e\u3059\u3002glm::to_string()\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n#include <glm/gtx/string_cast.hpp>\n\nauto main()\n  -> int\n{\n  glm::mat4 m;\n  std::cout << glm::to_string( m ) << \"\\n\";\n  m *= 3.14f;\n  std::cout << glm::to_string( m ) << \"\\n\";\n}\n\n\nmat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))\nmat4x4((3.140000, 0.000000, 0.000000, 0.000000), (0.000000, 3.140000, 0.000000, 0.000000), (0.000000, 0.000000, 3.140000, 0.000000), (0.000000, 0.000000, 0.000000, 3.140000))\n\n\n\u3055\u3059\u304c\u306b 4x4 \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306e\u30c0\u30f3\u30d7\u3092\u3061\u307e\u3061\u307e\u3068\u8868\u793a\u3059\u308b\u306e\u306f\u9762\u5012\u306a\u306e\u3067 #include <glm/gtx/string_cast.hpp> \u3092\u4f7f\u3063\u3066\u305d\u3053\u306f\u624b\u629c\u304d\u3092\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u5f8c\u307b\u3069\u62e1\u5f35\u6a5f\u80fd\u306e\u89e3\u8aac\u3067\u3082\u7c21\u5358\u306b\u89e6\u308c\u307e\u3059\u3002\nglm::mat4 \u306f glm::mat4x4 \u3078\u306e\u5225\u540d\u3067\u3001\u3053\u308c\u3082\u307e\u305f glm::vec4 \u306e\u4f8b\u3068\u540c\u3058\u3088\u3046\u306b glm::f32mat4x4 \u304c\u5b9f\u4f53\u3068\u306a\u308a\u307e\u3059\u3002\u4ed6\u306b\u3001 glm::mat2 glm::mat3 \u3082\u3042\u308a\u3001\u305d\u308c\u305e\u308c 2x2 \u3068 3x3 \u306b\u5bfe\u5fdc\u3057\u3001\u3055\u3089\u306b glm::mat4x3 \u306a\u3069\u884c\u3068\u5217\u304c\u4e00\u81f4\u3057\u306a\u3044\u7d44\u307f\u5408\u308f\u305b\u306b\u3064\u3044\u3066\u3082\u5b9a\u7fa9\u304c\u3042\u308a\u307e\u3059\u3002\n\u6f14\u7b97\u5b50\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306f float \u3092\u5168\u3066\u306e\u8981\u7d20\u306b\u7a4d\u7b97\u3059\u308b\u4f8b\u3092\u793a\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u624b\u306e\u6f14\u7b97\u5b50\u306f glm::vec4 \u3068\u540c\u69d8\u306b\u4f7f\u3048\u307e\u3059\u3002\nvec \u3068\u7570\u306a\u308b\u6027\u8cea\u3068\u3057\u3066\u3001vec \u3067\u306f\u30c7\u30d5\u30a9\u30fc\u30eb\u30c8\u306e\u69cb\u7bc9\u5b50\u3067\u751f\u6210\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c \u96f6\u30d9\u30af\u30bf\u30fc\u3068\u306a\u308a\u307e\u3059\u304c\u3001 mat \u3067\u306f\u5358\u4f4d\u884c\u5217\u306b\u306a\u308b\u70b9\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u3053\u308c\u306f\u5b9f\u7528\u4e0a\u306f\u5be7\u308d\u4fbf\u5229\u3067\u3042\u308a\u304c\u305f\u3044\u4e8b\u304c\u591a\u3044\u3067\u3057\u3087\u3046\u3002\n\u3061\u306a\u307f\u306b\u3001\u500b\u5225\u306e\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u884c\u3044\u307e\u3059\u3002\n#include <iostream>\n#include <glm/glm.hpp>\n#include <glm/gtx/string_cast.hpp>\n#include <type_traits>\n\nauto main()\n  -> int\n{\n  glm::mat4 m;\n\n  m[0][1] = 1.73f;\n\n  for ( auto a = 0; a < 4; ++a )\n    for ( auto b = 0; b < 4; ++b )\n      std::cout << m[a][b] << \" \";\n\n  std::cout\n    << \"\\n\"\n    << glm::to_string( m ) << \"\\n\" \n    << *( reinterpret_cast< float* >( &m ) + 1 )\n    ;\n}\n\n\n1 1.73 0 0 0 1 0 0 0 0 1 0 0 0 0 1 \nmat4x4((1.000000, 1.730000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))\n1.73\n\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001\u3053\u306e\u7d50\u679c\u304b\u3089\u3082\u3055\u308a\u6c17\u306a\u304f\u5206\u304b\u308b\u3088\u3046\u306b\u3001 glm \u306e mat \u306f\u884c\u512a\u5148\uff08Row-Major Order\uff09\u306e\u30e1\u30e2\u30ea\u30fc\u914d\u7f6e\u3092\u53d6\u308a\u307e\u3059\u3002\n\nglm::vec glm::mat \u306e\u30e1\u30e2\u30ea\u30fc\u8868\u73fe\nglm::vec \u3068 glm::mat \u306f\u53b3\u5bc6\u306b\u306f\u3044\u308f\u3086\u308b POD \u578b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u6a19\u6e96\u914d\u7f6e\u578b\uff08standard layout type\uff09\u306a\u306e\u3067\u3001 std::vector<glm::vec4> \u3068\u3057\u3066 OpenGL \u3084 Direct3D \u3067 GPU \u306e\u30d0\u30c3\u30d5\u30a1\u30fc\u3078\u8ee2\u9001\u3059\u308b\u57fa\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3057\u305f\u308a\u3001\u3042\u308b\u3044\u306f struct my_vertex { glm::vec4 position; glm::vec3 normal; glm::vec2 texcoord0; }; std::vector<my_vertex> \u306e\u69d8\u306b\u6271\u3063\u3066\u3082\u901a\u5e38\u306f\u5b89\u5168\u3067\u3059\u3002\n#include <iostream>\n#include <type_traits>\n#include <glm/glm.hpp>\n\nauto main()\n  -> int\n{\n  std::cout\n    << std::boolalpha\n    << \"pod            : \" << std::is_pod<glm::vec4>::value << \"\\n\"\n    << \"standard layout: \" << std::is_standard_layout<glm::vec4>::value << \"\\n\"\n    << \"trivial        : \" << std::is_trivial<glm::vec4>::value\n    ;\n}\n\n\npod            : false\nstandard layout: true\ntrivial        : false\n\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6d3e\u751f\u578b\u306e\u4f7f\u3044\u65b9\u3092\u3059\u308b\u3068\u6a19\u6e96\u914d\u7f6e\u578b\u306e\u6027\u8cea\u306f\u5931\u308f\u308c\u3001\u4eee\u60f3\u95a2\u6570\u30c6\u30fc\u30d6\u30eb\u306e\u70ba\u306b\u30b5\u30a4\u30ba\u3082\u30c7\u30fc\u30bf\u672c\u4f53\u306b\u5fc5\u8981\u306a\u5bb9\u91cf\u304b\u3089\u306f\u7570\u306a\u308b\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u6050\u3089\u304f OpenGL \u3084 Direct3D \u306e\u30d0\u30c3\u30d5\u30a1\u30fc\u3078\u306e\u8ee2\u9001\u3067\u306f\u6271\u3048\u306a\u3044\u304b\u3001\u30c8\u30ea\u30c3\u30af\u304c\u5fc5\u8981\u306b\u306a\u308a\u9762\u5012\u306e\u7a2e\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n  struct vertex { glm::vec3 position; virtual auto f() -> void { }; };\n  struct vertex_ex1: vertex { glm::vec3 normal;  };\n  struct vertex_ex2: vertex_ex1 { glm::vec2 texcoord0; };\n  std::cout\n    << std::boolalpha\n    << \"vertex    : \" << std::is_standard_layout<vertex>::value << \" \" << sizeof(vertex) << \"\\n\"\n    << \"vertex_ex1: \" << std::is_standard_layout<vertex_ex1>::value << \" \" << sizeof(vertex_ex1) << \"\\n\"\n    << \"vertex_ex2: \" << std::is_standard_layout<vertex_ex2>::value << \" \" << sizeof(vertex_ex2) << \"\\n\"\n    ;\n\n\nvertex    : false 24\nvertex_ex1: false 32\nvertex_ex2: false 40\n\n\n\nglm \u306e\u6a19\u6e96\u30fb\u62e1\u5f35\u6a5f\u80fd\u306e\u7d39\u4ecb\nglm \u306b\u306f\u6a19\u6e96\u6a5f\u80fd\u306b\u52a0\u3048 gtc \u3068 gtx \u306e\u4e8c\u6bb5\u968e\u306e\u62e1\u5f35\u6a5f\u80fd\u5b9f\u88c5\u304c\u3042\u308a\u3001\u62e1\u5f35\u6a5f\u80fd\u306f\u305d\u308c\u305e\u308c\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u500b\u5225\u306b #include \u3059\u308b\u304b\u3001\u3042\u308b\u3044\u306f\u307e\u3068\u3081\u3066 glm/ext.hpp \u3092 #include \u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\n\u3053\u3053\u304b\u3089\u306f glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306b\u542b\u307e\u308c\u308b\u4fbf\u5229\u306a\u6a5f\u80fd\u306b\u3064\u3044\u3066\u3001\u5e7e\u3064\u304b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u6a19\u6e96\u6a5f\u80fd\u3067\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u4fbf\u5229\u306a\u8a08\u7b97\u6a5f\u80fd\u305f\u3061\nglm \u306f\u540d\u524d\u306e\u7531\u6765\u3067\u3042\u308b OpenGL Mathematic \u306e\u540d\u524d\u304b\u3089\u3082\u60f3\u50cf\u304c\u4ed8\u3044\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u7279\u306b GLSL \u3067\u8a00\u8a9e\u6a19\u6e96\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u308b\u591a\u304f\u306e\u4fbf\u5229\u6a5f\u80fd\u306e C++ \u5b9f\u88c5\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070 lerp \u3068\u304b clamp \u3068\u304b\u3002\n\u4ee5\u4e0b\u3067\u7d39\u4ecb\u3059\u308b\u6a5f\u80fd\u306f glm/glm.hpp \u3092 #include \u3059\u308c\u3070\u4e00\u901a\u308a\u4f7f\u7528\u53ef\u80fd\u306b\u306a\u308b\u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u65e2\u306b\u30b3\u30a2\u6a5f\u80fd\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u3001\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u9806\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u7d76\u5bfe\u5024: glm::abs(x)\n\nstd::cout << glm::to_string( glm::abs( glm::vec3( 1, -1, -3 ) );\n\n\nvec3(1.000000, 1.000000, 3.000000)\n\n\n<cmath> \u306b\u542b\u307e\u308c\u308b std::abs \u3067\u306f glm::vec3 \u306b\u5bfe\u3057\u3066\u306f\u4f7f\u3048\u307e\u305b\u3093\u304c\u3001 glm::abs \u3092\u4f7f\u3046\u3068\u76ee\u7684\u3092\u7c21\u5358\u306b\u9054\u6210\u3067\u304d\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u5358\u306a\u308b float \u306b\u3082\u6c17\u517c\u306d\u7121\u304f\u4f7f\u3048\u307e\u3059\u3002\nstd::abs \u306b\u5bfe\u3059\u308b glm::abs \u306e\u3088\u3046\u306a\u5b9f\u88c5\u306f\u4ed6\u306e glm \u540d\u524d\u7a7a\u9593\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u95a2\u6570\u3067\u3082\u540c\u69d8\u306b glm::vec3\u7b49\u3078\u9069\u7528\u53ef\u80fd\u306a\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u3066\u4fbf\u5229\u306b\u4f7f\u3048\u307e\u3059\u3002\n\n\u5929\u4e95\u5024: glm::ceil(x)\n\nstd::cout << glm::to_string( glm::ceil( glm::vec2( M_PI, -M_PI ) ) );\n\n\nvec2(4.000000, -3.000000)\n\n\n\n\u6291\u3048\u8fbc\u307f: glm::clamp(x, min, max)\n\nstd::cout << glm::clamp( M_PI * 2, 0.0, M_PI / 2 );\n\n\n1.5708\n\n\n<cmath>\u306b\u306f\u7121\u3044\u304c\u3001\u3057\u3070\u3057\u3070\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u8981\u6c42\u3055\u308c\u308b\u4e8b\u306e\u591a\u3044 clamp \u306f\u5024\u3092 [min-max] \u306e\u7bc4\u56f2\u306b\u6291\u3048\u8fbc\u307f\u307e\u3059\u3002\u4e38\u3081\u8fbc\u307f\uff08rounding\uff09\u3067\u306f\u7121\u304f\u6291\u3048\u8fbc\u307f\uff08clamp\uff09\u3067\u3059\u3002\n\n\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u6574\u6570\u578b\u8868\u73fe\u3092\u53d6\u5f97 : floatBitsToInt( f ) floatBitsToUint( f )\n\nstd::cout << std::hex << glm::floatBitsToUint( 1 );\n\n\n3f800000\n\n\n\u3053\u308c\u306f IEEE754/Binary32 \u7b49\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\u306e\u30e1\u30e2\u30ea\u30fc\u8868\u73fe\u306b\u3064\u3044\u3066\u77e5\u8b58\u304c\u7121\u3044\u3068\u3084\u3084\u8b0e\u3081\u3044\u305f\u6a5f\u80fd\u306b\u898b\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nfloat\u578b\u306e\u5024\u306b\u5bfe\u3057\u3066\u30e1\u30e2\u30ea\u30fc\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u308a*reinterpret_cast<std::int32_t*>\u3068\u3057\u3066\u3082\u540c\u3058\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3067\u3057\u3087\u3046\u3002\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3092\u30d3\u30c3\u30c8\u30ec\u30d9\u30eb\u3067\u5236\u5fa1\u3057\u305f\u3044\u5834\u5408\u306b\u5fc5\u8981\u3068\u306a\u308b\u3001\u7528\u9014\u306e\u3084\u3084\u7279\u6b8a\u306a\u6a5f\u80fd\u3067\u3001 glm::intBitsToFloat glm::uintBitsToFloat \u3068\u5bfe\u306b\u306a\u308b\u6a5f\u80fd\u3067\u3059\u3002\u4e00\u822c\u306b\u306f\u5fc5\u8981\u306b\u306a\u308b\u4e8b\u306f\u7a00\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u5e8a\u5024: floor(x)\n\nstd::cout << glm::to_string( glm::floor( glm::vec2( M_PI, -M_PI ) ) );\n\n\nvec2(3.000000, -4.000000)\n\n\n\u5929\u4e95\u5024\uff08ceil\uff09\u3068\u5bfe\u306b\u306a\u308b\u5e8a\u5024\uff08floor\uff09\u3067\u3059\u3002 ceil \u3067\u306f\u540c\u69d8\u306e\u5f15\u6570\u3067 vec2(4.000000, -3.000000) \u304c\u5f97\u3089\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001 floor \u3067\u306f vec2(3.000000, -4.000000) \u304c\u5f97\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\u540d\u524d\u306e\u901a\u308a\u3001\u3053\u308c\u3089\u306f\u5024\u3092\u6574\u6570\u3078\u4e38\u3081\u8fbc\u3080\u306b\u5f53\u305f\u308a\u5929\u4e95\u5074\u3078\u4e38\u3081\u8fbc\u3080\u304b\u3001\u5e8a\u5074\u3078\u4e38\u3081\u8fbc\u3080\u304b\u3001\u3068\u3044\u3046\u95a2\u6570\u306b\u306a\u308a\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u3053\u3061\u3089\u3082 vec \u3067\u306f\u306a\u304f\u5358\u7d14\u306a float \u306e\u5024\u3078\u9069\u7528\u3059\u308b\u4e8b\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u878d\u5408\u7a4d\u548c\u7b97 : fma(a, b, c)\n\n\u8a00\u8449\u3067\u8868\u9762\u4e0a\u306e\u7d50\u679c\u306b\u3064\u3044\u3066\u8a00\u3048\u3070\u3001 f(b) = a * b + c \u3092\u8a08\u7b97\u3059\u308b\u3060\u3051\u306e\u95a2\u6570\u3067\u3059\u3002\u3053\u306eFMA\uff08Fused Multiply-Add\uff09\u6f14\u7b97\u3068\u308f\u3056\u308f\u3056\u540d\u524d\u304c\u3064\u3044\u3066\u95a2\u6570\u307e\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u7406\u7531\u306f\u3001\u8a08\u7b97\u6a5f\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u8a08\u7b97\u306e\u5b9f\u88c5\u65b9\u6cd5\u306b\u8d77\u56e0\u3057\u307e\u3059\u3002\n\u73fe\u5728\u4e00\u822c\u7684\u306aPC\u3067\u3053\u306e FMA \u6f14\u7b97\u3092\u52b9\u7387\u3088\u304f\u672c\u5f53\u306bCPU\u547d\u4ee4\u30ec\u30d9\u30eb\u3067\u5b9f\u884c\u3067\u304d\u308b\u306e\u306f intel \u306e AVX \u62e1\u5f35\u547d\u4ee4\u30bb\u30c3\u30c8\u306b\u542b\u307e\u308c\u308b FMA \u547d\u4ee4\u3092\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u6bd4\u8f03\u7684\u6700\u8fd1\u306eCPU\u306e\u307f\u3067\u3059\u3002\uff08\u3044\u308f\u3086\u308b\u30b9\u30fc\u30d1\u30fc\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u5411\u3051\u306eCPU\u3067\u306f\u5bfe\u5fdc\u88fd\u54c1\u304c\u3042\u308a\u307e\u3059\u3002\uff09\u4e00\u65b9\u3001GPU \u3067\u306f FMA \u547d\u4ee4\u306f\u983b\u51fa\u3059\u308b\u91cd\u8981\u306a\u547d\u4ee4\u3068\u3057\u3066\u3001 OpenGL GLSL \u3067\u3082 4.0 \u304b\u3089\u7d44\u307f\u8fbc\u307f\u306e\u95a2\u6570\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 Direct3D HLSL \u306b\u3082\u540c\u69d8\u306e\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u3002\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u4eca\u306e\u6240\u306f glm::fma \u3092\u4f7f\u7528\u3057\u305f C++ \u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3057\u3066\u3001 AVX \u547d\u4ee4\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308bCPU\u5411\u3051\u306b\u30d3\u30eb\u30c9\u3057\u305f\u3068\u3057\u3066\u3082\u3001 VFMADDSS \u547d\u4ee4\u3078 intrinsics \u7b49\u3067\u7ffb\u8a33\u3055\u308c\u308b\u4e8b\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nfloat f( const float a, const float b, const float c )\n{ return a * b + c; }\n\n\u3053\u306e\u95a2\u6570\u306f clang++-3.5 -O0 \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u547d\u4ee4\u30b3\u30fc\u30c9\u7fa4\u306b\u7ffb\u8a33\u3055\u308c\u307e\u3057\u305f:\n   0x00000000004008b0 <+0>:     push   %rbp\n   0x00000000004008b1 <+1>:     mov    %rsp,%rbp\n   0x00000000004008b4 <+4>:     movss  %xmm0,-0x4(%rbp)\n   0x00000000004008b9 <+9>:     movss  %xmm1,-0x8(%rbp)\n   0x00000000004008be <+14>:    movss  %xmm2,-0xc(%rbp)\n   0x00000000004008c3 <+19>:    movss  -0x4(%rbp),%xmm0\n   0x00000000004008c8 <+24>:    mulss  -0x8(%rbp),%xmm0\n   0x00000000004008cd <+29>:    addss  -0xc(%rbp),%xmm0\n   0x00000000004008d2 <+34>:    pop    %rbp\n   0x00000000004008d3 <+35>:    retq \n\nXMM\u30ec\u30b8\u30b9\u30bf\u30fc\u3068SSE\u547d\u4ee4\u306b\u306f\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u5358\u7d14\u306b mulss addss \u3092\u884c\u3063\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\u7d9a\u3044\u3066\u3001clang++-3.5 -O3 -march=native \u3067\u7ffb\u8a33\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3057\u305f:\n   0x00000000004008c0 <+0>:     vmulss %xmm1,%xmm0,%xmm0\n   0x00000000004008c4 <+4>:     vaddss %xmm2,%xmm0,%xmm0\n   0x00000000004008c8 <+8>:     retq\n\nXMM\u30ec\u30b8\u30b9\u30bf\u30fc\u3092\u4f7f\u3044\u306a\u304c\u3089\u3082 AVX \u547d\u4ee4\u30bb\u30c3\u30c8\u306e vmulss \u3068 vaddss \u4f7f\u3063\u3066\u304f\u308c\u307e\u3057\u305f\u304c\u3001 vfmaddss \u306f\u4f7f\u3063\u3066\u304f\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u5ff5\u306e\u70ba\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u81ea\u52d5\u30d9\u30af\u30bf\u30fc\u5316\u3092\u671f\u5f85\u3057\u3084\u3059\u3044\u95a2\u6570\u3082\u7ffb\u8a33\u3057\u3066\u307f\u307e\u3057\u305f:\nvoid f( const float* a, const float* b, const float* c, float* r )\n{\n  for( auto n = 0; n < 256; ++n )\n    r[n] = a[n] * b[n] + c[n];\n}\n\n   0x0000000000400800 <+112>:   vmovups (%rdi,%rax,4),%ymm0\n   0x0000000000400805 <+117>:   vmovups 0x20(%rdi,%rax,4),%ymm1\n   0x000000000040080b <+123>:   vmovups 0x40(%rdi,%rax,4),%ymm2\n   0x0000000000400811 <+129>:   vmovups 0x60(%rdi,%rax,4),%ymm3\n   0x0000000000400817 <+135>:   vmulps (%rsi,%rax,4),%ymm0,%ymm0\n   0x000000000040081c <+140>:   vmulps 0x20(%rsi,%rax,4),%ymm1,%ymm1\n   0x0000000000400822 <+146>:   vmulps 0x40(%rsi,%rax,4),%ymm2,%ymm2\n   0x0000000000400828 <+152>:   vmulps 0x60(%rsi,%rax,4),%ymm3,%ymm3\n   0x000000000040082e <+158>:   vaddps (%rdx,%rax,4),%ymm0,%ymm0\n   0x0000000000400833 <+163>:   vaddps 0x20(%rdx,%rax,4),%ymm1,%ymm1\n   0x0000000000400839 <+169>:   vaddps 0x40(%rdx,%rax,4),%ymm2,%ymm2\n   0x000000000040083f <+175>:   vaddps 0x60(%rdx,%rax,4),%ymm3,%ymm3\n   0x0000000000400845 <+181>:   vmovups %ymm0,(%rcx,%rax,4)\n   0x000000000040084a <+186>:   vmovups %ymm1,0x20(%rcx,%rax,4)\n   0x0000000000400850 <+192>:   vmovups %ymm2,0x40(%rcx,%rax,4)\n   0x0000000000400856 <+198>:   vmovups %ymm3,0x60(%rcx,%rax,4)\n\nAVX \u547d\u4ee4\u304c\u5fae\u5999\u306b\u5909\u308f\u3063\u3066\u3044\u307e\u3059\u304c\u3001 vmulps \u3068 vaddps \u3067 -ss \u304c -ps \u306b\u30d9\u30af\u30bf\u30fc\u5316\u3055\u308c\u305f\u3060\u3051\u3067\u3057\u305f\u3002\u3061\u306a\u307f\u306b\u3001 intel \u547d\u4ee4\u30bb\u30c3\u30c8\u306eSIMD\u547d\u4ee4\u7cfb\u306e\u672b\u5c3e\u306e ss \u306f scalar single precision \u3001 ps \u306f packed single precision \u3067\u3001\u304a\u5bdf\u3057\u306e\u901a\u308a\u300164bit\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\u3067\u306f sd \u3068\u304b pd \u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001 V \u3067\u59cb\u307e\u3063\u3066\u3044\u308b\u547d\u4ee4\u306f AVX \u3001 \u547d\u4ee4\u306e\u307e\u3093\u306a\u304b\u306b\u5165\u3063\u3066\u3044\u308b mul add mov \u306a\u3069\u304c \u7a4d\u7b97 \u52a0\u7b97 \u79fb\u52d5\uff08CPU\u30ec\u30b8\u30b9\u30bf\u30fc\u3068\u30e1\u30a4\u30f3\u30e1\u30e2\u30ea\u30fc\u9593\u306e\u3001\u306a\u3069\uff09\u3067\u3059\u3002\n\u4eca\u56de\u306f SIMD \u547d\u4ee4\u306e\u306f\u306a\u3057\u3067\u306f\u306a\u3044\u306e\u3067\u3053\u306e\u304f\u3089\u3044\u306b\u3057\u3066 glm\u306e \u6a5f\u80fd\u306b\u623b\u308a\u307e\u3057\u3087\u3046\u3002\n\n\u4eee\u6570 : fract( f )\n\nstd::cout << glm::fract( M_PI );\n\n\n0.141593\n\n\nfract \u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u4eee\u6570\u90e8\uff08fraction\uff09\u306e\u307f\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002IEEE754\u5f62\u5f0f\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3067\u306f\u3001\u5024\u3092\u7b26\u53f7\u90e8\u3001\u6307\u6570\u90e8\u3001\u4eee\u6570\u90e8\u306b\u5206\u3051\u3001\u305d\u308c\u305e\u308c\u306b\u4e00\u5b9a\u306e\u5bb9\u91cf\u3092\u5272\u308a\u5f53\u3066\u3066\u8a18\u9332\u3057\u307e\u3059\u3002\u3053\u306e\u3046\u3061\u306e\u4eee\u6570\u90e8\u306e\u307f\u3092\u62bd\u51fa\u3057\u305f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u901a\u5e38\u3001\u3088\u308a\u5358\u7d14\u306b\u8a00\u3046\u3068\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u5c0f\u6570\u70b9\u306e\u5f8c\u308d\u306e\u90e8\u5206\u306e\u307f\u3092\u5f97\u3089\u308c\u307e\u3059\u3002\u3069\u3046\u3057\u3066\u305d\u3046\u306a\u308b\u306e\u304b\u7406\u89e3\u3057\u305f\u3044\u65b9\u306f IEEE754/Binary32 \u306e\u300c\u3051\u3061\u8868\u73fe\u300d\u306e\u9805\u306b\u3064\u3044\u3066\u77e5\u8b58\u3092\u88dc\u5145\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u4f8b\u3067\u306f M_PI \u3092\u4e0e\u3048\u305f\u306e\u3067\u3001 .141593 \u304c\u51fa\u529b\u3068\u3057\u3066\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\u3082\u3061\u308d\u3093\u3001\u3053\u308c\u306f std::cout \u3078\u51fa\u529b\u3057\u305f\u969b\u306b\u4e38\u3081\u3089\u308c\u305f\u8868\u793a\u3067\u5b9f\u969b\u306b\u4fdd\u6301\u3057\u3066\u3044\u308b\u5024\u306e\u7cbe\u5ea6\u306f IEEE754/Binary32 \u3067\u3082\u3082\u3046\u5c11\u3057\u3060\u3051\u9ad8\u3044\u3067\u3059\u3002\n\n\u6307\u6570\u90e8\u3068\u4eee\u6570\u90e8\u306e\u5206\u96e2 : glm::frexp( f, e )\n\n\u3053\u308c\u306f\u57f7\u7b46\u6642\u70b9\u3067\u3069\u3046\u3082\u52d5\u4f5c\u3057\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001 \u307b\u307c\u7b49\u4fa1\u306a <cmath> \u7248\u306e\u7d39\u4ecb\u306b\u7559\u3081\u307e\u3059\u3002\nint e;\nauto x = std::frexp( M_PI, &e);\nstd::cout\n  << M_PI << \" = \" << x << \" x std::exp2( \" << e << \")\" << \"\\n\"\n  << \" = \" << ( x * std::exp2( e ) )\n  ;\n\n\n3.14159 = 0.785398 x std::exp2( 2)\n = 3.14159\n\n\n\u4e0e\u3048\u305f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3001\u4f8b\u3067\u306f M_PI \u3092\u3001 x = exp2( e ) \u3092\u6e80\u305f\u3059 x \u3092\u95a2\u6570\u306e\u30ea\u30bf\u30fc\u30f3\u3001 e \u3092\u95a2\u6570\u306e\u7b2c2\u5f15\u6570\u3067\u53d7\u3051\u305f\u5b9f\u4f53\u53c2\u7167\u306b\u5bfe\u3057\u3066\u8a18\u9332\u3057\u307e\u3059\u3002\u4e8b\u5b9f\u4e0a\u306e\u52d5\u4f5c\u3068\u3057\u3066\u306f\u4efb\u610f\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 M_PI \u3092\u4e0e\u3048\u3066\u4e0a\u8a18\u7b49\u5f0f\u3092\u6e80\u305f\u3059 x \u3068 e \u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u3067\u3001IEEE754\u3067\u8a00\u3046\u6307\u6570\u90e8\u3068\u4eee\u6570\u90e8\u3092\u305d\u308c\u305e\u308c\u53d6\u5f97\u3059\u308b\u4e8b\u3068\u7b49\u4fa1\u3067\u3059\u3002\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001 std::frexp \u3067\u306f &e \u3068\u3057\u3066 int* \u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u304c\u3001 glm::frexp \u7248\u306f OpenGL GLSL \u306e frexp \u3068\u306e\u4e92\u63db\u6027\u3092\u91cd\u8996\u3057\u3066\u3044\u308b\u4e8b\u3082\u3042\u308a\u3001 \u7b2c2\u5f15\u6570\u306f int& \u3092\u4e0e\u3048\u308b\u30b7\u30b0\u30cb\u30c1\u30e3\u30fc\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u6574\u6570\u578b\u3092\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3078\u5909\u63db : intBitsToFloat uintBitsToFloat\n\nstd::cout\n  << std::hex << glm::floatBitsToUint( M_PI ) << \"\\n\"\n  << glm::uintBitsToFloat( 0x40490fdbu )\n  ;\n\n\n40490fdb\n3.14159\n\n\n\u524d\u51fa\u306e floatBitsToInt floatBitsToUint \u306e\u9006\u306e\u64cd\u4f5c\u3092\u884c\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u6574\u6570\u578b\u306e\u30e1\u30e2\u30ea\u30fc\u8868\u73fe\u3092\u305d\u306e\u307e\u307e reinterpret_cast<float*> \u3057\u3066\u518d\u89e3\u91c8\u3057\u305f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u3053\u3046\u3057\u305f\u6a5f\u80fd\u306f\u3001\u4f8b\u3048\u3070\u52b9\u7387\u7684\u306b\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3092\u751f\u6210\u3059\u308b\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u306e\u5b9f\u88c5\u306e\u69d8\u306b\u3001\u751f\u6210\u3057\u305f\u4e71\u6570\u30d3\u30c3\u30c8\u5217\u3092\u4e00\u5b9a\u306e\u5024\u306e\u7bc4\u56f2\u3001\u4f8b\u3048\u3070 unorm \u5024\uff08[0.0-1.0]\uff09\u306b\u6574\u3048\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u5fc5\u8981\u3068\u6210\u308a\u5f97\u308b\u3088\u3046\u306a\u3001\u3054\u304f\u4f4e\u30ec\u30d9\u30eb\u306e\u51e6\u7406\u3067\u3059\u3002\u5fc5\u8981\u304c\u7121\u3051\u308c\u3070\u7121\u95c7\u306b\u4f7f\u308f\u306a\u3044\u65b9\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\u307e\u305f\u3001 C++ \u3067\u306f OpenGL GLSL \u3068\u9055\u3044 union \u3092\u4f7f\u3046\u4e8b\u3067\u578b\u306e\u518d\u89e3\u91c8\u30ad\u30e3\u30b9\u30c8\u3092\u907f\u3051\u305f\u5b9f\u88c5\u3082\u53ef\u80fd\u3067\u3057\u3087\u3046\u3002\n\n\u7121\u9650\u5927\u306e\u5224\u5b9a : isinf( f )\n\nstd::cout << std::boolalpha << glm::isinf( M_PI / 0 );\n\n\ntrue\n\n\n\u4e0e\u3048\u3089\u308c\u305f\u5024\u304c\u7121\u9650\u5927\u3067\u3042\u308c\u3070 true \u3092\u8fd4\u3059\u3002\n\n\u975e\u6570\u306e\u5224\u5b9a : isnan( f )\n\nstd::cout << std::boolalpha << glm::isinf( 0. / 0 );\n\n\ntrue\n\n\n\u4e0e\u3048\u3089\u308c\u305f\u5024\u304c\u975e\u6570\u3067\u3042\u308c\u3070 true \u3092\u8fd4\u3059\u3002\n\n\u6307\u6570\u90e8\u3068\u4eee\u6570\u90e8\u304b\u3089\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3092\u751f\u6210 : ldexp( x, e )\n\nfrexp \u306e\u9006\u95a2\u6570\u306b\u76f8\u5f53\u3059\u308b ldexp \u3067\u3059\u304c\u3001\u5bfe\u306b\u306a\u308b frexp \u540c\u69d8\u306b ldexp \u3082 glm \u7248\u306f\u52d5\u4f5c\u78ba\u8a8d\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067 std \u7248\u3067\u5b9f\u88c5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\nstd::cout << std::ldexp( 0.785398f, 2 );\n\n\n3.14159\n\n\n\u5185\u90e8\u7684\u306b\u306f frexp \u3067\u7d39\u4ecb\u3057\u305f\u69d8\u306b float ldexp( float f, int e ) { return x * std::exp2( e ); } \u3068\u7b49\u4fa1\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\n\uff08\u6b21\u5143\u6bce\u306e\uff09\u6700\u5927\u5024 : glm::max( a, b )\n\nglm::vec3 a( 1, 7, -M_PI );\nglm::vec3 b( 2, 3, std::cos(M_PI) );\nstd::cout << glm::to_string( glm::max( a, b ) );\n\n\nvec3(2.000000, 7.000000, -1.000000)\n\n\nstd::max \u306e\u3088\u3046\u306b\u5358\u306b float \u3092\u6bd4\u8f03\u3059\u308b\u4e8b\u3082\u3067\u304d\u307e\u3059\u3002\u4f8b\u306e\u69d8\u306b vec \u3092\u4e0e\u3048\u305f\u5834\u5408\u306b\u306f\u3001\u5404\u6b21\u5143\u6bce\u306b\u6c42\u3081\u305f\u6700\u5927\u5024\u3092\u63a1\u7528\u3057\u305f a b \u3068\u540c\u3058\u6b21\u5143\u6570\u306e vec \u3092\u8fd4\u3057\u307e\u3059\u3002\u5404\u6b21\u5143\u306b\u4f55\u3092\u6271\u3046\u304b\u306f\u30e6\u30fc\u30b6\u30fc\u6b21\u7b2c\u306a\u306e\u3067\u3001\u4f55\u3089\u304b\u306e\u5c5e\u6027\u7fa4\u306e\u7406\u60f3\u7684\u306a\u6700\u5927\u5024\u69cb\u6210\u3092\u8a55\u4fa1\u3059\u308b\u306e\u306b\u4f7f\u3063\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3057\u3001\u8272\u306eRGB\u5024\u306e\u5408\u6210\u51e6\u7406\u306b\u4f7f\u3063\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\uff08\u6b21\u5143\u6bce\u306e\uff09\u6700\u5c0f\u5024 : glm::min( a, b )\n\nglm::vec3 a( 1, 7, -M_PI );\nglm::vec3 b( 2, 3, std::cos(M_PI) );\nstd::cout << glm::to_string( glm::min( a, b ) );\n\n\nvec3(1.000000, 3.000000, -3.141593)\n\n\nglm::max \u3068\u5bfe\u306b\u306a\u308b glm::min \u3067\u3059\u3002\u6b21\u5143\u6bce\u306e\u6700\u5c0f\u5024\u304b\u3089\u306a\u308b\u30b9\u30ab\u30e9\u30fc\u306a\u3044\u3057\u30d9\u30af\u30bf\u30fc\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u7dda\u5f62\u5408\u6210 : glm::mix( x, y, a )\n\nstd::cout\n << glm::to_string( glm::mix( a, b, 4. / 5 ) );\n\n\nvec3(1.800000, 3.800000, -1.428319)\n\n\nx \u3068 y \u306b\u3064\u3044\u3066\u7dda\u5f62\u5408\u6210\u3092\u6df7\u5408\u6bd4 a \u3067\u884c\u3063\u305f\u7d50\u679c\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 a \u304c 0.0 \u306e\u6642 x \u3001 a \u304c 1.0 \u306e\u6642 y \u3092\u5f97\u3089\u308c\u307e\u3059\u3002\n\u3053\u308c\u306f C++ \u6a19\u6e96\u306b\u306f\u7121\u3044\u3051\u308c\u3069\u4e00\u822c\u306b\u4f7f\u3044\u3069\u3053\u308d\u306e\u591a\u3044\u4fbf\u5229\u306a\u6a5f\u80fd\u3067\u3059\u3002\u540c\u7a2e\u306e\u5408\u6210\u7cfb\u306e\u6a5f\u80fd\u5b9f\u88c5\u3068\u3057\u3066 glm::lerp \u3084 glm::slerp \u3082\u4f7f\u3044\u3069\u3053\u308d\u3067\u306f\u3068\u3066\u3082\u4fbf\u5229\u306e\u826f\u3044\u6a5f\u80fd\u3067\u3059\u3002\n\n\uff08\u8ca0\u6570\u3084\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u5bfe\u5fdc\u306e\uff09\u5270\u4f59\u7b97 : glm::mod( x, y )\n\nstd::cout\n  // 480 [degrees] => 120 [degrees]\n  << glm::mod(  M_PI * 8 / 3 , M_PI * 2 ) << \"\\n\"\n  // -270 [degrees] => 90 [degrees]\n  << glm::mod( -M_PI * 3 / 2 , M_PI * 2 )\n  ;\n\n\n2.0944\n1.5708\n\n\n\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 x \u3092 y \u3067\u5270\u4f59\u7b97\u3057\u305f\u7d50\u679c\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001\u3088\u304f\u4f3c\u305f\u6a5f\u80fd\u306e std::fmod \u3068\u3082 std::remainder \u3068\u3082\u52b9\u679c\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\n\n\n\u95a2\u6570\n\u5f97\u3089\u308c\u308b\u7d50\u679c\n\nx/y\u306e\u7d50\u679c\u304b\u3089\u6574\u6570\u3092\u5f97\u308b\u51e6\u7406\u65b9\u6cd5\n\n\n\n\nglm::mod\nx - std::ceil( x / y ) * y\n\u6b63\u306e\u7121\u9650\u5927\u65b9\u5411\u3078\u4e38\u3081\u308b(rounding toward plus infinity; RP)\n\n\nstd::fmod\nx - ( x > 0 ? std::ceil( x / y ) : std::floor( x / y ) ) * y\n0\u306b\u8fd1\u304f\u306a\u308b\u3088\u3046\u306b\u4e38\u3081\u308b\uff08rounding toward zero; RZ\uff09\n\n\nstd::remainder\nx - std::round( x / y ) * y\n\nIEEE754-1985 \u6e96\u62e0\n\n\n\nglm \u306e\u5b9f\u88c5\u3067\u6574\u6570\u90e8\u3092 ceil \u3067\u4e38\u3081\u3066\u3044\u308b\u306e\u306f\u4f8b\u306b\u3088\u3063\u3066 OpenGL GLSL \u306b\u6e96\u62e0\u3057\u3066\u3044\u308b\u4e8b\u306b\u3088\u308a\u307e\u3059\u3002\u3053\u306e ceil \u3067\u4e38\u3081\u308b\u6319\u52d5\u306e\u5834\u5408\u306f\u4f8b\u793a\u3057\u305f\u3088\u3046\u306a\u89d2\u5ea6\u306e\u56de\u8ee2\u3092\u6b63\u898f\u5316\u3057\u305f\u3044\u5834\u5408\u306b\u4fbf\u5229\u304c\u826f\u304f\u306a\u308a\u307e\u3059\u3002\n\u4f8b\u793a\u3067\u306f\u89d2\u5ea6\u306e\u5358\u4f4d\u7cfb\u3092\u30e9\u30b8\u30a2\u30f3\u3068\u3057\u305f\u306e\u3067\u65e5\u5e38\u7684\u306a\u5f27\u5ea6\u6cd5\u306b\u6163\u308c\u3066\u3044\u308b\u3068\u5206\u304b\u308a\u96e3\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4ee5\u4e0b\u306b\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3067\u3042\u308b\u610f\u5473\u306f\u307b\u307c\u7121\u3044\u6574\u6570\u7684\u306b\u3082\u304d\u308a\u306e\u826f\u3044\u5024\u3068\u306f\u306a\u308a\u307e\u3059\u304c\u3001\u5f27\u5ea6\u6cd5\u3067\u306e\u305d\u308c\u305e\u308c\u306e\u6319\u52d5\u306e\u9055\u3044\u3082\u793a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nstd::cout\n  << glm::mod      ( -45.f, 360.f ) << \"\\n\"\n  << glm::fmod     ( -45.f, 360.f ) << \"\\n\"\n  << glm::remainder( -45.f, 360.f ) << \"\\n\"\n  <<               ( -45  % 360   ) <<\n  ;\n\n\n\n315\n-45\n-45\n-45\n\n\n\n\u6574\u6570\u90e8\u3068\u5c11\u6570\u90e8\u306e\u5206\u96e2 : glm::modf( x, i )\n\nglm::vec2 x( M_PI, -M_PI );\nglm::vec2 i;\nstd::cout << glm::to_string( glm::modf( x, i\u3000) ) << \"\\n\";\nstd::cout << glm::to_string( i );\n\n\nvec2(0.141593, -0.141593)\nvec2(3.000000, -3.000000)\n\n\nx \u306e\u6574\u6570\u90e8\u3092\u53c2\u7167\u3067\u53d7\u3051\u305f i \u3078\u3001\u5c0f\u6570\u90e8\u3092\u30ea\u30bf\u30fc\u30f3\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002\nstd \u7248\u3068\u306e\u9055\u3044\u306f OpenGL GLSL \u3068\u540c\u69d8\u306b\u547c\u3073\u51fa\u3057\u30b3\u30fc\u30c9\u3068\u3057\u3066\u306f\u6271\u3048\u308b\u69d8\u306b glm \u7248\u3067\u306f i \u3092\u53c2\u7167\u3067\u53d7\u3051\u307e\u3059\u3002 std \u7248\u306f <cmath> \u306e C \u4e92\u63db\u6a5f\u80fd\u3068\u3044\u3046\u4e8b\u3082\u3042\u308a\u30dd\u30a4\u30f3\u30bf\u30fc\u3092\u6e21\u3059\u4ed5\u69d8\u3067\u3059\u3002\u307e\u305f\u3001 glm \u7248\u3067\u306f vec \u3092\u6e21\u3057\u3066\u4e00\u5ea6\u306b\u307e\u3068\u3081\u3066\u8907\u6570\u306e\u6b21\u5143\u306e modf \u7d50\u679c\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u6700\u8fd1\u508d\u306e\u6574\u6570\u3078\u306e\u4e38\u3081 : glm::round( x )\n\nglm::vec2 x( M_PI, -M_PI );\nstd::cout << glm::to_string( glm::round( x ) ) << \"\\n\";\n\n\nvec2(3.000000, -3.000000)\n\n\n0.5 \u3092\u4e38\u3081\u305f\u969b\u306e\u6319\u52d5\u306f\u5b9f\u88c5\u4f9d\u5b58\u3002\u4e38\u3081\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\u7aef\u6570\u51e6\u7406#\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u306e\u4e38\u3081 \u3092\u3001\u307e\u305f FE_DOWNWARD FE_TONEAREST FE_TOWARDZERO FE_UPWARD \u306f std::round \u306b\u306f\u5bc4\u4e0e\u3057\u306a\u3044\u4e8b\u306b\u3082\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u4e8b\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u6700\u8fd1\u508d\u306e\u6574\u6570\u3078\u306e\u5076\u6570\u4e38\u3081 : glm::roundEven( x )\n\nglm::vec4 x( -1.5, -0.5, 0.5, 1.5 );\nstd::cout << glm::to_string( glm::roundEven( x ) ) << \"\\n\";\n\n\nvec4(-2.000000, 0.000000, 0.000000, 2.000000)\n\n\nround \u3067\u306f\u5b9f\u88c5\u4f9d\u5b58\u306e .5 \u306f\u3069\u3061\u3089\u5074\u3078\u4e38\u3081\u308b\u3079\u304d\u304b\u3092\u5076\u6570\u306b\u5b9a\u3081\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u3002\u74b0\u5883\u306b\u3088\u3089\u305a\u78ba\u5b9f\u306b\u6700\u8fd1\u508d\u306e\u5076\u6570\u5074\u306e\u6574\u6570\u3078\u4e38\u3081\u3089\u308c\u308b\u3002\u74b0\u5883\u4f9d\u5b58\u306b\u3088\u308a\u4e38\u3081\u65b9\u5411\u304c\u7570\u306a\u3063\u3066\u306f\u56f0\u308b\u518d\u73fe\u6027\u306e\u91cd\u8981\u3067\u7e4a\u7d30\u306a\u51e6\u7406\u304c\u5fc5\u8981\u306a\u969b\u306b\u306f round \u3088\u308a\u3082 roundEven \u3092\u4f7f\u3046\u3079\u304d\u72b6\u6cc1\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u7b26\u53f7\u3092\u53d6\u5f97 : glm::sign( x )\n\nglm::vec4 x( -1.5, -0.5, 0.5, 1.5 );\nstd::cout << glm::to_string( glm::sign( x ) ) << \"\\n\";\n\n\nvec4(-1.000000, -1.000000, 1.000000, 1.000000)\n\n\n\u300c\u7b26\u53f7\u90e8\u300d\u3067\u306f\u7121\u304f\u300c\u7b26\u53f7\u300d\u3092\u53d6\u5f97\u3059\u308b\u3002\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001\u3088\u304f\u4f3c\u305f <cmath> \u306e\u6a5f\u80fd std::signbit \u3068\u306f\u6319\u52d5\u304c\u7570\u308a\u307e\u3059\u3002 glm::sign \u306f\u540d\u524d\u901a\u308a\u306b\u300c\u7b26\u53f7\u300d\u3092\u53d6\u5f97\u3059\u308b\u306e\u306b\u5bfe\u3057\u3001 std::signbit \u306f\u3053\u3061\u3089\u3082\u540d\u524d\u901a\u308a\u306b\u300c\u7b26\u53f7\u90e8\uff08\u5024\u306e\u578b\u306b\u5bfe\u5fdc\u3057\u305f\u7b26\u53f7\u90e8\u306e1\u30d3\u30c3\u30c8\uff09\u300d\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u305f\u30a8\u30eb\u30df\u30fc\u30c8\u88dc\u9593\u5024\u306e\u53d6\u5f97 : glm::smoothstep( e1, e2, x )\n\nglm::vec4 e1( 0, 0, 0, 0 );\nglm::vec4 e2( 100, 100, 100, 100 );\nglm::vec4 x( -20, 20, 40, 120 );\nstd::cout << glm::to_string( glm::smoothstep( e1, e2, x ) ) << \"\\n\";\n\n\nvec4(0.000000, 0.104000, 0.352000, 1.000000)\n\n\ne1 \u3092\u59cb\u70b9\u3001 e2 \u3092\u7d42\u70b9\u3068\u3057\u3066\u5165\u529b\u5024 x \u3092\u4e0e\u3048\u305f\u969b\u306e\u30a8\u30eb\u30df\u30fc\u30c8\u88dc\u9593\uff08Hermite interpolation\uff09\u5024\u3092 [0.0-1.0] \u3067\u53d6\u5f97\u3057\u307e\u3059\u3002 x \u304c e1 \u3068 e2 \u306e\u7bc4\u56f2\u5916\u306b\u3042\u308b\u5834\u5408\u306f glm::clamp \u3055\u308c\u3001 0.0 \u307e\u305f\u306f 1.0 \u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\u30a8\u30eb\u30df\u30fc\u30c8\u88dc\u9593\u306f\u5c11\u3057\u3060\u3051\u4e88\u5099\u77e5\u8b58\u304c\u7121\u3044\u3068\u30d4\u30f3\u3068\u6765\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u3001\u5177\u4f53\u7684\u306b e1 = 0 e2 = 100 \u3092\u4e0e\u3048\u305f glm::smoothstep \u306e\u3001\u5165\u529b\u5024 x \u306b\u5bfe\u3059\u308b\u51fa\u529b\u7d50\u679c\u3092\u4ee5\u4e0b\u306b\u56f3\u793a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nsmoothstep \u306e\u540d\u524d\u901a\u308a\u3001\u59cb\u70b9\u304b\u3089\u7d42\u70b9\u3078\u3068\u6ed1\u3089\u304b\u306a\u6bb5\u5dee\u3092\u5b9f\u73fe\u3057\u305f\u3044\u5834\u5408\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u6bb5\u5dee\u3092\u4f5c\u308b\u306e\u304c\u76ee\u7684\u3068\u3044\u3046\u4e8b\u3082\u3042\u308a\u3001\u7bc4\u56f2\u5916\u306e\u5165\u529b\u5024\u306f glm::clamp \u6319\u52d5\u3068\u306a\u308a\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b \"Hermite\" \u304c\u30d8\u30eb\u30df\u30fc\u30c8\u3084\u30cf\u30fc\u30df\u30c3\u30c8\u3067\u306f\u306a\u304f\u3001\u305d\u306e\u7531\u6765\u306e \"Charles Hermite\" \u304c\u30c1\u30e3\u30fc\u30eb\u30ba\u30fb\u30cf\u30fc\u30df\u30c3\u30c8\u3067\u306f\u306a\u304f\u30b7\u30e3\u30eb\u30eb\u30fb\u30a8\u30eb\u30df\u30fc\u30c8\u3068\u7d20\u6575\u306a\u611f\u3058\u306e\u97f3\u306b\u306a\u308b\u306e\u306f\u30d5\u30e9\u30f3\u30b9\u8a9e\u306e\u767a\u97f3\u4f53\u7cfb\u306b\u8d77\u56e0\u3057\u307e\u3059\u3002\n\n\u95be\u5024\u306b\u3088\u308b\u5224\u5b9a : glm::step\n\nglm::vec4 e( 20, 20, 20, 20 );\nglm::vec4 x(  0, 10, 20, 30 );\nstd::cout << glm::to_string( glm::step( e, x ) ) << \"\\n\";\n\n\nvec4(0.000000, 0.000000, 1.000000, 1.000000)\n\n\n\u95be\u5024 e \u306b\u5bfe\u3057\u3066\u3001\u5165\u529b\u5024 x \u306e\u30c7\u30b8\u30bf\u30eb\u306a\u5fdc\u7b54\uff080 \u307e\u305f\u306f 1\uff09\u3092\u5f97\u307e\u3059\u3002\u3088\u308a\u6b63\u78ba\u306b\u306f return x < e; \u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u307e\u3063\u305f\u304f\u88dc\u9593\u305b\u305a\u306b\u3001\u3042\u308b\u95be\u5024\u306b\u5fdc\u3058\u3066\u51e6\u7406\u306eON/OFF\u3084\u5024\u306e\u5207\u308a\u66ff\u3048\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\u96f6\u65b9\u5411\u3078\u306e\u4e38\u3081 : glm::trunc( x )\n\nglm::vec4 x( -1.5, -0.5, 0.5, 1.5 );\nstd::cout << glm::to_string( glm::trunc( x ) ) << \"\\n\";\n\n\nvec4(-1.000000, -0.000000, 0.000000, 1.000000)\n\n\nceil \u3084 floor \u306a\u3069\u4e38\u3081\u95a2\u6570\u306e\u4ef2\u9593\u3067\u3001\u96f6\u65b9\u5411\u306e\u6700\u8fd1\u508d\u306e\u6574\u6570\u306b\u4e38\u3081\u307e\u3059\u3002\n\nCPP\u5b9a\u7fa9\u306b\u3088\u3063\u3066\u767a\u52b9\u3059\u308b\u6a5f\u80fd\n\n\u8981\u7d20\u3078\u306e\u67d4\u8edf\u306a\u30a2\u30af\u30bb\u30b9 : #define GLM_SWIZZLE\n\n\u3053\u308c\u306f CPP \u3092\u5b9a\u7fa9\u3059\u308b\u3068\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u4fbf\u5229\u6a5f\u80fd\u3067\u3001\u3053\u308c\u3092\u5b9a\u7fa9\u3057\u3066\u304b\u3089 glm/glm.hpp \u3092 \"#include\" \u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b .xyzw() .xyz() zzww() .rgb() .bgra() \u306e\u3088\u3046\u306b\u4efb\u610f\u306e\u8981\u7d20\u306e\u9806\u5e8f\uff44\u4e26\u3079\u66ff\u3048\u305f vec \u3092\u624b\u8efd\u306b\u6271\u3048\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n#include <iostream>\n#define GLM_SWIZZLE\n#include <glm/glm.hpp>\n#include <glm/gtx/string_cast.hpp>\n\nauto main()\n  -> int\n{\n  glm::vec4 a( 1, 2, 3, 4 );\n  auto b = a.zwyx();\n  auto c = a.rgb();\n  std::cout\n    << glm::to_string( a ) << \"\\n\"\n    << glm::to_string( b ) << \"\\n\"\n    << glm::to_string( c ) << \"\\n\"\n    ;\n}\n\n\n\u30c7\u30d5\u30a9\u30fc\u30eb\u30c8\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u30e2\u30c7\u30eb\u306e\u5909\u66f4\nOpenGL GLSL \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u30c7\u30d5\u30a9\u30fc\u30eb\u30c8\u306e\u7cbe\u5ea6\u3092\u5909\u66f4\u3067\u304d\u307e\u3059: \nprecision mediump int;\nprecision highp float;\n\nglm \u3067\u306f\u3053\u308c\u3092 CPP \u5b9a\u7fa9\u3067\u884c\u3048\u307e\u3059\u3002\n#define GLM_PRECISION_MEDIUMP_INT;\n#define GLM_PRECISION_HIGHP_FLOAT;\n#include <glm/glm.hpp>\n\n\u7279\u306b\u660e\u793a\u3057\u306a\u3051\u308c\u3070 float \u7cfb\u3001 double \u7cfb\u3001 int \u7cfb\u3001 uint\u7cfb \u306e vec \u3084 mat \u306f\u5168\u3066 GLSL \u3067\u3044\u3046\u3068\u3053\u308d\u306e High precision \u76f8\u5f53\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\n\n\u7ffb\u8a33\u6642\u306e\u304a\u3057\u3083\u3079\u308a\u6a5f\u80fd\n\u3044\u308f\u3086\u308b verbose \u30e2\u30fc\u30c9\u7684\u306b\u7ffb\u8a33\u6642\u306b\u3069\u306e\u30d8\u30c3\u30c0\u30fc\u304c\u8aad\u307e\u308c\u305f\u3068\u304b\u3001\u547d\u4ee4\u30bb\u30c3\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u304b\u306a\u3069\u3092 #pragma message \u306b\u3088\u308a\u51fa\u529b\u3055\u305b\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n#define GLM_MESSAGES\n#include <glm/glm.hpp>\n\n\u4e00\u5ea6\u8a66\u3057\u3066\u307f\u308b\u3068\u5206\u304b\u308a\u307e\u3059\u304c\u3001\u901a\u5e38\u306f\u30c7\u30d5\u30a9\u30fc\u30eb\u30c8\u306e\u51fa\u529b\u7121\u52b9\u72b6\u614b\u306e\u65b9\u304c\u5fc3\u81d3\u306b\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nC++\u8a00\u8a9e\u898f\u683c\u30ec\u30d9\u30eb\u306e\u5f37\u5236\nglm \u306e\u30b3\u30fc\u30c9\u3092\u4f55\u308c\u306eC++\u8a00\u8a9e\u898f\u683c\u5411\u3051\u306b\u8a2d\u5b9a\u3059\u308b\u304b\u5f37\u5236\u3067\u304d\u307e\u3059\u3002\n#define GLM_FORCE_CXX14\n#include <glm/glm.hpp>\n\n\u3053\u306e\u4f8b\u3067\u306f C++14 \u306b\u5f37\u5236\u3057\u307e\u3059\u3002\u4ed6\u306b\u3001 C++11 C++98 \u3078\u306e\u5f37\u5236\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\nSIMD\u30b5\u30dd\u30fc\u30c8\u306e\u5f37\u5236\n\u901a\u5e38 glm \u306f\u6a19\u6e96\u3067\u81ea\u52d5\u7684\u306b\u5224\u65ad\u3057\u3066 SIMD \u547d\u4ee4\u3092\u3042\u308b\u7a0b\u5ea6\u7a4d\u6975\u7684\u306b\u4f7f\u304a\u3046\u3068\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3053\u306e\u81ea\u52d5\u5224\u65ad\u3092\u7121\u52b9\u5316\u3057\u7279\u5b9a\u306eSIMD\u30b5\u30dd\u30fc\u30c8\u3092\u5f37\u5236\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n// vec4 mat4 \u3092 SIMD \u5411\u3051\u306b\u3057\u307e\u3059\u3002\n// \u5185\u90e8\u7684\u306b __mm128 \u306a\u3093\u304b\u3092\u4f7f\u3046\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\n#define GLM_GTX_simd_vec4\n#define GLM_GTX_simd_mat4\n// SIMD\u547d\u4ee4\u30bb\u30c3\u30c8\u3092\u5f37\u5236\u3057\u307e\u3059\u3002\n#define GLM_FORCE_SSE2\n#define GLM_FORCE_SSE3\n#define GLM_FORCE_SSE4\n#define GLM_FORCE_AVX\n#define GLM_FORCE_AVX2\n// SIMD \u547d\u4ee4\u3092\u4f7f\u3044\u305f\u304f\u7121\u3044\u5834\u5408\u306b\u8aa4\u3063\u3066\n// GLM_GTX_simd_vec4 \u306a\u3069\u660e\u793a\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306b\u30a8\u30e9\u30fc\u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n#define GLM_FORCE_PURE\n\n\n\u30a4\u30f3\u30e9\u30a4\u30f3\u5316\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u6700\u5927\u9650\u306b\u512a\u5148\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u30a4\u30f3\u30e9\u30a4\u30f3\u5316\u3092\u660e\u793a\u7684\u306b\u6307\u793a\u3067\u304d\u307e\u3059\u3002\n#define GLM_FORCE_INLNIE\n#include <glm/glm.hpp>\n\n\ngtc \u62e1\u5f35\u6a5f\u80fd\u7fa4\n\n\u7a2e\u3005\u306e\u5b9a\u6570: glm/gtc/constants.hpp\n\n#include <glm/gtc/constatns.hpp>\n\n  std::cout\n    << glm::pi<double>() << \"\\n\"\n    << glm::e<double>() << \"\\n\"\n    << glm::three_over_two_pi<double>() << \"\\n\"\n    ;\n\n\n3.14159\n2.71828\n4.71239\n\n\n\u03c0 e \u03c0 * 3 / 2 \u306a\u3069\u306e\u5b9a\u6570\u5024\u3092\u6307\u5b9a\u306e\u578b\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3001\u3053\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u306f constexpr \u975e\u5bfe\u5fdc\u306a\u4e8b\u3082\u3042\u308a\u3001 Sprout \u306e sprout::math::pi \u306a\u3069\u3092\u4f7f\u3063\u305f\u65b9\u304c\u5b09\u3057\u3044\u4e8b\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u4f7f\u7528\u53ef\u80fd\u306a\u5b9a\u6570\u306e\u4e00\u89a7\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306eGLM_GTC_constants \u3092\u3069\u3046\u305e\u3002\n\n\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306e\u7a4d\u306b\u3088\u308b\u5c04\u5f71\u5909\u63db: glm/gtc/matrix_transform.hpp\n\n\u7279\u306b Computer Graphics \u754c\u9688\u3067\u306f\u304a\u99b4\u67d3\u307f\u306e\u540c\u6b21\u5ea7\u6a19\u306b\u3088\u308b\u5c04\u5f71\u5909\u63db\u3092\u6271\u3048\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n#include <glm/gtc/matrix_transform.hpp>\n\n  glm::vec3 p0;\n  std::cout << glm::to_string( p0 ) << \"\\n\";\n\n  auto translation = glm::translate( glm::mat4(), glm::vec3( 0, 0, 1 ) );\n  std::cout << glm::to_string( ( translation * glm::vec4( p0, 1 ) ).xyz() ) << \"\\n\";\n\n  auto rotation    = glm::rotate( glm::mat4(), float(M_PI) / 4, glm::vec3( 1, 0, 0 ) ); \n  std::cout << glm::to_string( ( rotation * translation * glm::vec4( p0, 1 ) ).xyz() ) << \"\\n\";\n\n\nvec3(0.000000, 0.000000, 0.000000)\nvec3(0.000000, 0.000000, 1.000000)\nvec3(0.000000, -0.707107, 0.707107)\n\n\n\u4f8b\u3067\u7d39\u4ecb\u3057\u305f glm::translate \u3068 glm::rotate \u306e\u4ed6\u306b glm::scale \u3082\u3042\u308a\u307e\u3059\u3002\u4f8b\u3067\u306f\u96f6\u30d9\u30af\u30bf\u30fc p0 \u3092\u3001Z\u8ef8\u65b9\u5411\u306b +1 \u3060\u3051\u79fb\u52d5\u3057\u3001\u305d\u306e\u5f8c\u306b X \u8ef8\u56de\u8ee2\u3092 \u03c0 / 4 \u3060\u3051\u56de\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\nglm \u306f OpenGL \u3068\u306e\u89aa\u548c\u6027\u306e\u5f37\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3001\u5c04\u5f71\u5909\u63db\u306e\u969b\u306b glm::mat4 \u306e\u7a4d\u3092\u884c\u3046\u9806\u5e8f\u3082\u540c\u69d8\u3067\u3059\u3002\u3053\u308c\u306f Direct3D \u3068 OpenGL \u3067\u306f \u884c\u5217\u306b\u5bfe\u3057\u3066\u5ea7\u6a19\u3092\u6271\u3046\u30d9\u30af\u30bf\u30fc\u304c\u300c\u5217\u30d9\u30af\u30bf\u30fc\uff08OpenGL\uff09\u300d\u304b\u300c\u884c\u30d9\u30af\u30bf\u30fc\uff08Direct3D\uff09\u300d\u304b\u306b\u8d77\u56e0\u3057\u3001\u4e21\u65b9\u306e API \u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u3063\u305f\u308a\u3001\u4e00\u65b9\u306e API \u304b\u3089\u4ed6\u65b9\u306e API \u3078\u3068\u978d\u66ff\u3048\u3059\u308b\u969b\u306b\u6df7\u4e71\u3059\u308b\u4e8b\u304c\u3042\u308a\u307e\u3059\u3002\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30ce\u30a4\u30ba\u751f\u6210\u5668 : glm/gtc/noise.hpp\n\n\n\u30b7\u30f3\u30d7\u30ec\u30c3\u30af\u30b9\u30fb\u30ce\u30a4\u30ba \uff08Simplex noise\uff09\n\n#include <fstream>\n#include <glm/glm.hpp>\n#include <glm/gtc/noise.hpp>\n\nauto main()\n  -> int\n{\n  std::ofstream o(\"simplex.pgm\");\n  o << \"P2\\n256 256\\n255\\n\";\n  for ( auto y = 0; y < 256; ++y )\n  {\n    for ( auto x = 0; x < 256; ++x )\n      o << glm::roundEven( ( glm::simplex( glm::vec2( x / 64., y / 64. ) ) + 1.0f) * 255 / 2 ) << \" \";\n    o << \"\\n\";\n  }\n}\n\n\n\u30b7\u30f3\u30d7\u30ec\u30c3\u30af\u30b9\u30fb\u30ce\u30a4\u30ba\u306f 2001 \u5e74\u306b\u6b21\u306b\u7d39\u4ecb\u3059\u308b\u30d1\u30fc\u30ea\u30f3\u30fb\u30ce\u30a4\u30ba\u306e\u30b1\u30f3\u30fb\u30d1\u30fc\u30ea\u30f3\uff08Ken Perlin\uff09\u304c\u30d1\u30fc\u30ea\u30f3\u30fb\u30ce\u30a4\u30ba\u306e\u6b21\u5143\u5897\u52a0\u306b\u4f34\u3046\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306e\u5897\u5927\u3092\u6539\u5584\u3057\u3064\u3064\u540c\u69d8\u306e\u30ce\u30a4\u30ba\u3092\u751f\u6210\u3059\u308b\u76ee\u7684\u3067\u767a\u8868\u3057\u305f\u30ce\u30a4\u30ba\u751f\u6210\u5668\u3067\u3059\u3002\n\u30b7\u30f3\u30d7\u30ec\u30c3\u30af\u30b9\u30fb\u30ce\u30a4\u30ba\u3067\u306f\u305d\u308c\u307e\u3067\u306e\u30d1\u30fc\u30ea\u30f3\u30fb\u30ce\u30a4\u30ba\u3067\u306f\u751f\u6210\u30b3\u30b9\u30c8\u304c\u6b21\u5143 n \u306e\u5897\u52a0\u306b\u4f34\u3044\u3001 \u039f( pow( 2, n ) ) \u3067\u5897\u52a0\u3059\u308b\u70b9\u3092 \u039f( n, 2 ) \u306b\u6539\u5584\u3057\u3066\u3044\u307e\u3059\u3002\u4f8b\u793a\u306f\u7d75\u3068\u3057\u3066\u5206\u304b\u308a\u826f\u3044\u306e\u30672\u6b21\u5143\u3067\u751f\u6210\u3057\u307e\u3057\u305f\u304c\u30014\u6b21\u5143\u4ee5\u4e0a\u306e\u30ce\u30a4\u30ba\u3092\u751f\u6210\u3059\u308b\u969b\u306b\u306f\u30d1\u30fc\u30ea\u30f3\u30fb\u30ce\u30a4\u30ba\u4ee5\u4e0a\u306e\u751f\u6210\u901f\u5ea6\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\u547d\u540d\u306e\u300c\u30b7\u30f3\u30d7\u30ec\u30c3\u30af\u30b9\u300d\u306f\u65e5\u672c\u8a9e\u306b\u3057\u3066\u3057\u307e\u3046\u3068\u610f\u5473\u304c\u66d6\u6627\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3068\u611f\u3058\u305f\u306e\u3067\u79c1\u306e\u7ffb\u8a33\u30dd\u30ea\u30b7\u30fc\u306b\u306f\u73cd\u3057\u304f\u300c\u5358\u4f53\u300d\u3068\u8a33\u8a9e\u3092\u5145\u3066\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u6570\u5b66\u7684\u306a\u65e5\u672c\u8a9e\u306e\u300c\u5358\u4f53\u300d\u306f\u3042\u308b\u6b21\u5143\u306b\u304a\u3051\u308b\u6b21\u5143\u6570+1\u306e\u51f8\u6b63\u591a\u9762\u4f53\u306e\u3088\u3046\u306a\u3082\u306e\u3089\u3057\u3044\u3002\n\u3061\u306a\u307f\u306b\u3001\u4f8b\u793a\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30fc\u30c9\u3067\u306f\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092 PNM \u5f62\u5f0f\u3067\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u3067\u753b\u50cf\u3092\u8868\u73fe\u3059\u308b\u5f62\u5f0f\u306e1\u3064\u3067\u3001\u3061\u3087\u3063\u3068\u3057\u305f\u30c7\u30fc\u30bf\u306e\u30c0\u30f3\u30d7\u3092\u753b\u50cf\u3068\u3057\u3066\u51fa\u3057\u3066\u307f\u305f\u3044\u6642\u306b\u91cd\u5b9d\u3057\u307e\u3059\u3002\u8457\u8005\u306f\u666e\u6bb5 Linux \u306e\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u74b0\u5883\u3068\u3057\u3066\u304a\u99b4\u67d3\u307f\u306e KDE \u3092\u4f7f\u3063\u3066\u3044\u3066\u3001\u753b\u50cf\u306f gweinview \u3068\u3044\u3046\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u8868\u793a\u3057\u3066\u898b\u3066\u3044\u307e\u3059\u3002\u3082\u3057\u304b\u3057\u305f\u3089 Windows \u3084 OSX \u306e\u6a19\u6e96\u7684\u306a\u74b0\u5883\u3067\u306f PNM \u5f62\u5f0f\u3092\u753b\u50cf\u3068\u3057\u3066\u8868\u793a\u3067\u304d\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u305d\u306e\u6642\u306f .pbm .pgm .ppm \u306a\u3069\u306e PNM \u5f62\u5f0f\u306b\u5bfe\u5fdc\u3057\u305f\u753b\u50cf\u30d3\u30e5\u30fc\u30a2\u30fc\u3092\u63a2\u3059\u304b\u3001\u6216\u3044\u306f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f8b\u3092 Magick++ \u306b\u3059\u308b\u306a\u3069\u9069\u5f53\u306b\u6271\u3044\u6613\u3044\u30c7\u30fc\u30bf\u51fa\u529b\u5f62\u5f0f\u306b\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002\u305d\u308c\u307b\u3069\u5927\u304d\u306a\u753b\u50cf\u5206\u89e3\u80fd\u3067\u306a\u3051\u308c\u3070\u6587\u5b57\u5217\u3067\u5024\u3092\u51fa\u529b\u3057\u3066\u8868\u8a08\u7b97\u30bd\u30d5\u30c8\u306e\u53ef\u8996\u5316\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u78ba\u8a8d\u3057\u3066\u307f\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u30d1\u30fc\u30ea\u30f3\u30fb\u30ce\u30a4\u30ba\uff08Perlin noise\uff09\n\n#include <fstream>\n#include <glm/glm.hpp>\n#include <glm/gtc/noise.hpp>\n\nauto main()\n  -> int\n{\n  std::ofstream o(\"perlin.pgm\");\n  o << \"P2\\n256 256\\n255\\n\";\n  for ( auto y = 0; y < 256; ++y )\n  {\n    for ( auto x = 0; x < 256; ++x )\n      o << glm::roundEven( ( glm::perlin( glm::vec2( x / 8., y / 8. ) ) + 1.0f) * 255 / 2 ) << \" \";\n    o << \"\\n\";\n  }\n}\n\n\n\u30d1\u30fc\u30ea\u30f3\u30fb\u30ce\u30a4\u30ba \u306f\u5148\u306b\u7d39\u4ecb\u3057\u305f\u30b7\u30f3\u30d7\u30ec\u30c3\u30af\u30b9\u30fb\u30ce\u30a4\u30ba\u3088\u308a\u6614\u30011983\u5e74\u306b\u30b1\u30f3\u30fb\u30d1\u30fc\u30ea\u30f3\u304c\u767a\u8868\u3057\u305f\u30ce\u30a4\u30ba\u751f\u6210\u5668\u3067\u3001\u305d\u308c\u3068\u77e5\u3089\u306a\u304f\u3068\u3082\u591a\u304f\u306e\u4eba\u304c\u3053\u306e\u30ce\u30a4\u30ba\u751f\u6210\u5668\u306e\u3001\u6216\u3044\u306f\u751f\u6210\u3055\u308c\u305f\u30ce\u30a4\u30ba\u306e\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070\u96f2\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u3068\u3057\u3066\u4f7f\u308f\u308c\u305f\u308a\u3059\u308b\u4f8b\u306f\u6709\u540d\u3067\u3059\u3002\n\n\u56db\u5143\u6570\uff08\u30af\u30a9\u30fc\u30bf\u30cb\u30aa\u30f3\uff09 : glm/gtc/quaternion.hpp\n\n  glm::vec3 p0( 0, 0, 1 );\n  glm::quat q1( glm::vec3( M_PI / 2, 0, 0 ) );\n  glm::quat q2( glm::vec3( 0, M_PI / 2, 0 ) );\n  auto p1 = q1 * p0;\n  auto p2 = q2 * p0;\n  auto p3 = glm::slerp( q1, q2, .5f ) * p0;\n  std::cout\n    << glm::to_string( p1 ) << \"\\n\"\n    << glm::to_string( p2 ) << \"\\n\"\n    << glm::to_string( p3 )\n    ;\n\n\nvec3(0.000000, -1.000000, 0.000000)\nvec3(1.000000, 0.000000, 0.000000)\nvec3(0.666667, -0.666667, 0.333333)\n\n\n\u30b8\u30f3\u30d0\u30eb\u30ed\u30c3\u30af\uff08Gibmal lock\uff09\u30d5\u30ea\u30fc\u306e3\u6b21\u5143\u7a7a\u9593\u3067\u306e\u56de\u8ee2\u5236\u5fa1\u3067\u304a\u99b4\u67d3\u307f\u306e\u56db\u5143\u6570\uff08\u30af\u30a9\u30fc\u30bf\u30cb\u30aa\u30f3; quaternion\uff09\u3067\u3059\u3002\nglm::quat \u306e\u69cb\u7bc9\u5b50\u306b\u76f4\u63a5 x y z w \u30684\u3064\u306e\u56db\u5143\u6570\u306e\u8981\u7d20\u3092\u4e0e\u3048\u3066\u76f4\u63a5\u7684\u306b\u69cb\u7bc9\u3059\u308b\u4e8b\u3082\u51fa\u6765\u307e\u3059\u304c\u3001\u5229\u4fbf\u6027\u304b\u3089 glm::quat( glm::vec3( ) ) \u3068\u3057\u3066\u3001\u30ab\u30eb\u30c6\u30b7\u30a2\u30f3\u5ea7\u6a19\u7cfb\u306b\u304a\u3051\u308bX\u8ef8\u56de\u8ee2\u3001Y\u8ef8\u56de\u8ee2\u3001Z\u8ef8\u56de\u8ee2\u3092\u305d\u308c\u305e\u308c glm::vec3( x, y, z ) \u3067\u4e0e\u3048\u3066\u305d\u308c\u3092\u7d20\u306b glm::quat \u3092\u751f\u6210\u3057\u3066\u6271\u3046\u4e8b\u304c\u6b86\u3069\u3067\u3057\u3087\u3046\u3002\n\u4f8b\u3067\u306f\u3001\u70b9 p0 \u3092 X\u8ef8\u306b \u03c0/2\uff0890\u00b0\uff09\u56de\u8ee2\u3057\u305f p1 \u3001 Y\u8ef8\u306b \u03c0/2 \u56de\u8ee2\u3057\u305f p2 \u3001\u305d\u308c\u304b\u3089\u3001 \u56db\u5143\u6570 q1 \u3068 q2 \u3092\u7403\u9762\u88dc\u9593\u3067\u3061\u3087\u3046\u3069\u4e2d\u9593\u306e\u4f4d\u7f6e\u306b\u5408\u6210\u3057\u305f\u56db\u5143\u6570\u3067\u56de\u8ee2\u3057\u305f p3 \u3092\u751f\u6210\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u30d9\u30af\u30bf\u30fc\u306e\u5404\u6b21\u5143\u306e\u5024\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u3001\u3057\u308c\u3063\u3068 glm::slerp(a,b,x) \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f glm::mix \u306e\u56db\u5143\u6570\u7528\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u4e2d\u8eab\u3068\u3057\u3066\u8ffd\u52a0\u5b9a\u7fa9\u3055\u308c\u3001\u3064\u307e\u308a\u7403\u9762\u88dc\u9593\u306b\u3088\u308a a \u3068 b \u3092\u5408\u6210\u6bd4 x \u3067\u5408\u6210\u3057\u307e\u3059\u3002\u7dda\u5f62\u88dc\u9593\u306e glm::lerp \u306e\u7403\u9762\u88dc\u9593\u7248\u3068\u8a00\u3046\u308f\u3051\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u30d9\u30af\u30bf\u30fc\u306b\u5bfe\u3057\u3066\u4f8b\u306e\u3088\u3046\u306b\u7c21\u5358\u306b\u30af\u30a9\u30fc\u30bf\u30cb\u30aa\u30f3\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u6f14\u7b97\u5b50\u304c\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3057\u3001\u8a08\u7b97\u30b3\u30b9\u30c8\u3082\u5358\u7d14\u306b\u306f\u5897\u52a0\u3059\u308b\u4e8b\u304b\u3089\u4f7f\u3046\u6a5f\u4f1a\u306f\u5fae\u5999\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001glm::mat4_cast( q ) \u3068\u3057\u3066\u56db\u5143\u6570 glm::quat \u3092\u56de\u8ee2\u884c\u5217 glm::mat4 \u3078\u5909\u63db\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u305d\u306e\u9006\u306e\u5909\u63db\u7528\u306b glm::quat_cast( m ) \u3082\u3053\u306e\u62e1\u5f35\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\ngtx \u62e1\u5f35\u6a5f\u80fd\n\n\u8272\u7a7a\u9593\u306e\u5909\u63db : glm/gtx/color_space.hpp\n\n  auto rgb = glm::vec3( 0.5, 0.5, 0.25 );\n  auto hsv = glm::hsvColor( rgb );\n  std::cout << glm::to_string( hsv );\n\n\nvec3(60.000000, 0.500000, 0.500000)\n\n\n\u73fe\u5728\u306e glm \u30b3\u30a2\u5b9f\u88c5\u306e vec \u3067\u306f rgba \u7cfb\u3092\u60f3\u5b9a\u3057\u305f\u30e1\u30f3\u30d0\u30fc\u306e\u5b9a\u7fa9\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u5024\u3068\u3057\u3066\u306f\u540c\u3058\u6b21\u5143\u6570\u3067 HSV \u7cfb\u306e\u8272\u7a7a\u9593\u3082\u6271\u3048\u307e\u3059\u3002 gtx/color_space \u3092\u4f7f\u3046\u3068\u3001glm::hsvColor \u3068 glm::rgbColor \u304c\u8ffd\u52a0\u3055\u308c\u3001RGB\u8272\u7a7a\u9593\u304b\u3089HSV\u8272\u7a7a\u9593\u3001HSV\u8272\u7a7a\u9593\u304b\u3089RGB\u8272\u7a7a\u9593\u3078\u306e\u5909\u63db\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001\u4f8b\u306e\u7d50\u679c\u306e\u3088\u3046\u306b\u3001 glm::hsvColor \u306e\u7d50\u679c\u5f97\u3089\u308c\u308b H \u5024\uff08\u8272\u76f8; Hue\uff09\u306f\u5f27\u5ea6\u6cd5\u306b\u306a\u3063\u3066\u3044\u308b\u70b9\u3067\u3059\u3002\n\n\u6587\u5b57\u5217\u578b\u3078\u5909\u63db : glm/gtx/string_cast.hpp\n\n  std::cout\n    << glm::to_string( glm::vec4() ) << \"\\n\"\n    << glm::to_string( glm::mat4() )\n    ;\n\n\nvec4(0.000000, 0.000000, 0.000000, 0.000000)\nmat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))\n\n\n\u3053\u3053\u307e\u3067\u306b\u3082 vec \u3068 mat \u306e\u5024\u306e\u78ba\u8a8d\u3068\u3057\u3066\u624b\u629c\u304d\u306e\u70ba\u306b\u4f7f\u3063\u3066\u304d\u305f glm::to_string \u3067\u3059\u3002glm::quat \u672a\u5bfe\u5fdc\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u304c\u5c11\u3005\u6b8b\u5ff5\u306a\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u3042\u308b\u3082\u306e\u306f\u4fbf\u5229\u306b\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\nOpenGL \u975e\u63a8\u5968\u4e92\u63db API \u306e\u63d0\u4f9b\nOpenGL \u306f\u7279\u306b\u8fd1\u5e74\u306e\u9032\u5316\u306e\u904e\u7a0b\u3067\u591a\u304f\u306e API \u306e\u4ed5\u69d8\u5909\u66f4\u3001\u305d\u3057\u3066\u975e\u63a8\u5968\u3084\u5ec3\u6b62\u3092\u4f34\u3044\u307e\u3057\u305f\u3002\u7279\u306b\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u7cfb\u306e API \u306f\u6d88\u3048\u53bb\u308b\u904b\u547d\u306b\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070 glPushMatrix \u3068 glPopMatrix \u3001\u305d\u308c\u304b\u3089\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2T/L \u6642\u4ee3\u306e\u540d\u6b8b\u308a\u306e\u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\u3001 glBegin \u3068 glEnd \u306a\u3069\u306a\u3069\u3002\n\u5dfb\u304d\u8fbc\u307e\u308c\u308b\u5f62\u3067\u4e00\u822c\u306b\u6709\u7528\u3067\u3001 Direct3D \u3067\u3082\u5f53\u7136 D3DX \u306b\u5165\u3063\u3066\u3044\u308b\u3088\u3046\u306a\u6a5f\u80fd\u3082\u6d88\u3048\u307e\u3059\u3002\u305d\u3053\u3067\u3001 glm \u3067\u306f\u305d\u308c\u3089\u53e4\u3044 OpenGL \u304c\u63d0\u4f9b\u3057\u3066\u3044\u305f\u6709\u7528\u306a API \u306e\u4e00\u90e8\u3092 glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e vec \u3084 mat \u3092\u4f7f\u3046\u3053\u3068\u3067\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3089\u306f Computer Graphics \u7528\u9014\u3067\u3057\u304b\u4f7f\u3046\u6a5f\u4f1a\u304c\u7121\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u305d\u306e\u7528\u9014\u3067\u306f\u6709\u7528\u3068\u3044\u3046\u304b\u3001\u304a\u3088\u305d\u5fc5\u9808\u3067\u3059\u3002\n\n\u5c04\u5f71\u5909\u63db\u95a2\u9023 \uff08glm/gtc/matrix_transform.hpp\uff09\n\n\n\nglRotate => glm::rotate() // \u56de\u8ee2\n\nglScale => glm::scale() // \u62e1\u5927\u7e2e\u5c0f\n\nglTranslate => glm::translate() // \u5e73\u884c\u79fb\u52d5\n\nglFrustum => glm::frustum // \u900f\u8996\u6295\u5f71\n\nglOrtho => glm::ortho // \u6b63\u5c04\u5f71\n\n\n\u4ed6\u306e\u884c\u5217\u95a2\u9023\u306e\u6a5f\u80fd\n\n\n\nglLoadIdentity => glm::mat4() // \u5358\u4f4d\u884c\u5217\n\nglMultMatrix => glm::mat4::operator*() // \u7a4d\n\nglLoadTransposeMatrix => glm::transpose() // \u8ee2\u7f6e\n\n\n\n\u52a0\u3048\u3066\u3001 GLU \u306e\u6a5f\u80fd\u3082 glm \u306e vec \u3068 mat \u3067\u6271\u3048\u308b\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u5c04\u5f71\u5909\u63db\u95a2\u9023 \uff08glm/gtc/matrix_transform.hpp\uff09\n\n\n\ngluLookAt => glm::lookAt() // \u30d3\u30e5\u30fc\u5909\u63db\n\ngluOrtho2D => glm::ortho() // \u6b63\u5c04\u5f71\n\ngluPerspective => glm::perspective() // \u900f\u8996\u6295\u5f71\n\ngluPickMatrix => glm::pickMatrix() // \u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u304b\u3089\u306e\u30d4\u30c3\u30ad\u30f3\u30b0\n\ngluProject => glm::project() // \u30ef\u30fc\u30eb\u30c9\u5ea7\u6a19\u304b\u3089\u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u3092\u53d6\u5f97\n\ngluUnProject => glm::unProject() // \u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u304b\u3089\u30ef\u30fc\u30eb\u30c9\u5ea7\u6a19\u3092\u53d6\u5f97\n\n\n\n\n\u7ffb\u8a33\u6642\u9593\u3078\u306e\u914d\u616e\nglm \u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u305d\u308c\u306a\u308a\u306b\u4f7f\u3063\u3066\u3044\u308b\u4e8b\u3082\u3042\u308a\u3001\u7ffb\u8a33\u306b\u306f\u5c11\u3057\u3060\u3051\u6642\u9593\u304c\u639b\u304b\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002Boost\u306b\u6bd4\u3079\u308b\u3068\u3069\u3046\u3068\u3044\u3046\u4e8b\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u6c17\u306b\u306a\u308b\u5834\u5408\u306b\u306f\u524d\u65b9\u5ba3\u8a00\u3068\u5b9a\u7fa9\u672c\u4f53\u306e\u5206\u96e2\u6a5f\u69cb\u3092 glm-0.9.5 \u304b\u3089\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n// \u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u524d\u65b9\u5ba3\u8a00\u306e\u307f\u6271\u3046\n#include <glm/fwd.hpp>\n\n// \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u5b9a\u7fa9\u672c\u4f53\u3092\u6271\u3046\n#include <glm/glm.hpp>\n\n\u5c11\u3005\u7ffb\u8a33\u901f\u5ea6\u3092\u6539\u5584\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u307b\u304b\u306b\u306f\uff1f\n\u3068\u308a\u3042\u3048\u305a\u3001 glm \u306e\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u898b\u307e\u3057\u3087\u3046\u3002\u3053\u308c\u3067\u3082 1/3 \u4ee5\u4e0a\u306f\u8aac\u660e\u3092\u3059\u3063\u98db\u3070\u3057\u305f\u308a\u3001gtc/gtx\u306b\u3064\u3044\u3066\u306f\u57fa\u790e\u7684\u3067\u5206\u304b\u308a\u3084\u3059\u3044\u6240\u3084\u6709\u7528\u306a\u3082\u306e\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u3082\u307b\u3093\u306e\u308a\u6982\u8981\u7a0b\u5ea6\u3068\u3001\u305d\u308c\u304b\u3089 gtx \u306e\u4e8b\u306f\u307b\u3068\u3093\u3069\u66f8\u304b\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001 Doxygen \u3068\u3042\u3068\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u76f4\u63a5\u8aad\u3093\u3067\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\u3068\u3082\u3042\u308c\u3001\u305d\u3053\u307e\u3067\u5168\u3066\u4f7f\u3044\u304d\u308d\u3046\u3068\u3057\u306a\u304f\u3066\u3082\u3001 glm \u306f\u3068\u3066\u3082\u6709\u7528\u306a\u6bd4\u8f03\u7684\u306b\u4f4e\u6b21\u306e vec \u3001 mat \u306e\u5b9f\u884c\u6642\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3001\u30dd\u30ea\u30b7\u30fc\u3082\u3057\u3063\u304b\u308a\u3068\u3057\u3066\u5b89\u5fc3\u3067\u304d\u308b\u3082\u306e\u306b\u80b2\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u7d39\u4ecb\u8a18\u4e8b\u304c\u3069\u3053\u304b\u306e\u8da3\u5473\u3067\u30b2\u30fc\u30e0\u3092\u4f5c\u308a\u305f\u3044\u4eba\u3084\u3001\u6216\u3044\u306f\u3069\u3053\u304b\u306e\u7814\u7a76\u5ba4\u306e\u5b66\u751f\u3055\u3093\u306e\u521d\u52d5\u306e\u52a9\u3051\u306a\u3069\u306b\u3067\u3082\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\u8cea\u554f\u304c\u3042\u308c\u3070\n\u8457\u8005\u306f\u3075\u3060\u3093Qiita\u3092\u3042\u307e\u308a\u826f\u304f\u4f7f\u3063\u3066\u306f\u3044\u307e\u305b\u3093\u3057\u3001\u9802\u3044\u305f\u3054\u8cea\u554f\u306b\u7684\u78ba\u306a\u7b54\u3048\u3092\u7d20\u65e9\u304f\u5bfe\u5fdc\u3067\u304d\u308b\u3068\u3082\u9650\u308a\u307e\u305b\u3093\uff08\u6050\u3089\u304f\uff09\u3002\u3082\u3057\u3001\u3053\u306e\u8a18\u4e8b\u306e\u30a8\u30e9\u30c3\u30bf\u306e\u3054\u6307\u6458\u3067\u306f\u7121\u304f\u3001\u6bd4\u8f03\u7684\u306b\u7d14\u7c8b\u306b glm \u3084 C++ \u3084 Computer Graphics \u3042\u308b\u3044\u306f\u4f55\u304b\u3089\u306e\u95a2\u9023\u3057\u305f\u4e8b\u67c4\u306b\u3064\u3044\u3066\u7591\u554f\u304c\u6e67\u304d\u81ea\u5206\u3067\u306f\u7c21\u5358\u306b\u306f\u89e3\u6c7a\u306e\u7cf8\u53e3\u3082\u898b\u3064\u3051\u3089\u308c\u306a\u3044\u3088\u3046\u306a\u3089\u3001\u662f\u975e StackExchange \u30c7\u30d3\u30e5\u30fc\u3059\u308b\u304d\u3063\u304b\u3051\u306b\u3059\u308b\u3068\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u6700\u8fd1\u306f\u65e5\u672c\u8a9e\u7248\u306e StackOverflow(JA) \u3082\u30aa\u30fc\u30d7\u30f3\u30d9\u30fc\u30bf\u3068\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u304c\u59cb\u307e\u308a\u307e\u3057\u305f\u3057\u3001\u82f1\u8a9e\u304c\u82e6\u624b\u3067\u3082\u81c6\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3068\u306f\u8a00\u3048\u3001\u5c11\u306a\u304f\u3068\u3082\u73fe\u72b6\u3067\u306f\u3001\u3067\u304d\u308c\u3070\u82f1\u8a9e\u7248\u306e\u3044\u308f\u3086\u308b\u672c\u5bb6\u3068\u8a00\u308f\u308c\u308b StackExchange \u7cfb\u306e StackOverflow(EN) \u3084 GameDevelopment(EN) \u3092\u983c\u308b\u3068\u3001\u8cea\u554f\u306e\u7b54\u3048\u3084\u30d2\u30f3\u30c8\u304c\u65e2\u306b\u305f\u304f\u3055\u3093\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u305d\u308c\u3067\u3082\u3057\u3082\u82f1\u8a9e\u304c\u308f\u304b\u3089\u305a\u306b\u7b54\u3048\u306e\u610f\u5473\u3092\u63b4\u307f\u304d\u308c\u306a\u3044\u4e8b\u304c\u3042\u308c\u3070\u3001\u65e5\u672c\u8a9e\u7248\u3067\u305d\u306eQA\u306e\u65e5\u672c\u8a9e\u3067\u306e\u7d39\u4ecb\u3092\u4f9d\u983c\u3059\u308b\u306e\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3002\u96c6\u56e3\u7684\u77e5\u6027\uff08Collective wisdom\uff09\u306f\u3042\u306a\u305f\u306e\u5473\u65b9\u3067\u3001\u79c1\u3082\u307e\u305f\u304a\u305d\u3089\u304f\u305d\u306e\u5473\u65b9\u306e\u4e00\u4eba\u3068\u306a\u308b\u3053\u3068\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002\u305d\u3057\u3066\u3042\u306a\u305f\u306e\u8cea\u554f\u3082\u307e\u305f\u3001\u5f8c\u306e\u8ab0\u304b\u306e\u7591\u554f\u3078\u306e\u7b54\u3048\u3068\u306a\u308b\u4e8b\u3067\u3057\u3087\u3046\u3002\n\uff08\u203b\u8a33: \u3059\u305f\u3063\u304f\u304a\u30fc\u3070\u30fc\u3075\u308d\u30fc\u4fbf\u5229\u3060\u306a\uff09\n\n\u3042\u3068\u304c\u304d\n\u4eca\u5e74\u306f\u3061\u3087\u3063\u3068\u3057\u305fMMORPG\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u6700\u8fd1\u306eC++\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u4e8b\u60c5\u3067\u69cb\u7bc9\u3059\u308b\u4e8b\u4f8b\u3092\u7d39\u4ecb\u3057\u3088\u3046\u304b\u3068\u4f01\u3093\u3067\u3044\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u307b\u3069\u6642\u9593\u7684\u306a\u4f59\u88d5\u3082\u53d6\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u306e\u3067 glm \u306e\u7d39\u4ecb\u8a18\u4e8b\u3068\u3057\u307e\u3057\u305f\u3002\nglm \u306fOpenGL\u30673DCG\u3092\u6271\u3046\u969b\u306b\u306f\u5fc5\u9808\u3068\u8a00\u3048\u308b\u512a\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e1\u3064\u3067\u3059\u304c\u3001\u7279\u306b3DCG\u3068\u3044\u3046\u7528\u9014\u306b\u9650\u3089\u305a\u3068\u3082\u5b9f\u88c5\u3001\u6027\u80fd\u3082\u826f\u304f\u3001\u4fbf\u5229\u306b\u6c4e\u7528\u7684\u306b\u6271\u3048\u308b\u30b7\u30fc\u30f3\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u7d39\u4ecb\u304c\u3001\u5e83\u304f\u8ab0\u304b\u3057\u3089\u306e\u52a9\u3051\u3068\u306a\u308b\u4e8b\u304c\u3042\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3092\u3054\u89a7\u9802\u3044\u305f\u65b9\u306f\u3053\u3093\u306a\u6b32\u3057\u3044\u3082\u306e\u30ea\u30b9\u30c8\u3082\u898b\u3066\u304f\u3060\u3055\u3063\u3066\u3044\u307e\u3059\uff08\u305f\u3076\u3093\uff09\n\n\u3069\u3055\u3093\u3053\u514e\u306b\u306a\u308a\u307e\u3057\u305f(\uff89\u03c9\u30fb)\uff83\uff8d\n\n- This is the article of the [C++ Advent Calendar 2014](http://qiita.com/advent-calendar/2014/cpp) DAY 24\n    - [yesterday(23): \u30b3\u30f3\u30d1\u30a4\u30eb\u6642Brainfuck\u30b3\u30f3\u30d1\u30a4\u30e9 \u2015\u2015C++14 constexpr \u306e\u9032\u6b69\u3068\u9650\u754c\u2015\u2015 / \u30dc\u30ec\u30ed\u6751\u4e0a](http://boleros.hateblo.jp/entry/2014/12/24/065155)\n    - [tomorrow(25): \u521d\u5fc3\u8005\u5411\u3051\u300e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8d85\u5165\u9580\u300f / \u3061\u3087\u307e\u3069](http://chomado.com/programming/c-plus-plus/template-meta-programming/)\n \n## glm - \u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u305f\u3081\u306eC++\u6570\u5b66\u7cfb\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\n\n### glm \u3068\u306f\u4f55\u304b\uff1f\n\n\u3053\u3053\u3067\u7d39\u4ecb\u3059\u308b glm \u306f C++ \u306e\u5ea7\u6a19\u7cfb\u30d9\u30af\u30bf\u30fc\u306e\u53d6\u308a\u6271\u3044\u3092\u4e2d\u5fc3\u3068\u3057\u305f\u6570\u5b66\u7cfb\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3059\u3002\u57fa\u672c\u7684\u306b\u306f3DCG\u5411\u3051\u306e\u3001\u7279\u306bOpenGL\u3068\u306e\u89aa\u548c\u6027\u306e\u9ad8\u3044\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u7528\u9014\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3059\u304c\u3001\u305d\u306e\u6a5f\u80fd\u306f\u3088\u304f\u6574\u7406\u3055\u308c\u3066\u5b9f\u88c5\u3055\u308c\u3066\u304a\u308a\u3001\u6bd4\u8f03\u7684\u4f4e\u6b21\u306e\u30d9\u30af\u30bf\u30fc\u51e6\u7406\u306b\u6c4e\u7528\u306b\u6271\u3048\u308b\u3082\u306e\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306f C++ Advent Calendar 2014 \u3078\u306e\u53c2\u52a0\u8a18\u4e8b\u3068\u3057\u3066\u3001 glm \u306b\u3064\u3044\u3066\u7c21\u5358\u306b\u305d\u306e\u51e1\u305d\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n### glm \u306e\u516c\u5f0f\u60c5\u5831\u3068\u5165\u624b\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u306b\u3064\u3044\u3066\n\nglm \u306e\u516c\u5f0f\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u306f\u3053\u3061\u3089:\n\n- http://www.g-truc.net/ - Christophe Riccio \u306b\u3088\u308b OpenGL \u60c5\u5831\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \"g-truc\"\n    - http://glm.g-truc.net/ - g-truc \u306e\u4e3b\u8981\u30b3\u30f3\u30c6\u30f3\u30c8\u3068\u306a\u3063\u305f glm \u306e\u516c\u5f0f\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\n\n\u5165\u624b\u306f github \u304b\u3089:\n\n- https://github.com/g-truc/glm - git@github.com:g-truc/glm.git\n\n\u30e9\u30a4\u30bb\u30f3\u30b9\u306f `The Happy Bunny License` \u3068 `MIT License` \u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u306f `readme.txt` \u3088\u308a\u5f15\u7528:\n\n> GLM is licensed under The Happy Bunny License and MIT License\n\n- The Happy Bunny License\n- MIT License\n\n\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u8981\u70b9\u306f\u8ecd\u4e8b\u76ee\u7684\u306b\u4f7f\u308f\u306a\u3051\u308c\u3070\u8457\u4f5c\u6a29\u8868\u793a\u3092\u5b88\u3063\u3066\u81ea\u7531\u306b\u4f7f\u3063\u3066\u826f\u3044\u3068\u3044\u3046\u5177\u5408\u3067\u3059\u3002\uff08\u5b9f\u7528\u306b\u3042\u305f\u3063\u3066\u306f\u305d\u306e\u6642\u70b9\u3067\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u6587\u66f8\u3092\u6b63\u78ba\u306b\u78ba\u8a8d\u3057\u3066\u4e0b\u3055\u3044\u3002\uff09\n\n### glm \u3092\u306f\u3058\u3081\u3066\u4f7f\u3046: Hello, glm!\n\n\uff08\u203b\u958b\u767a\u74b0\u5883\u304c\u6574\u3063\u3066\u3044\u306a\u3044\u3001\u3042\u308b\u3044\u306f\u3069\u3046\u6574\u3048\u3066\u826f\u3044\u304b\u5206\u304b\u3089\u306a\u3044\u72b6\u614b\u306e\u65b9\u306f\u3001 [Cloud9 IDE](https://c9.io/) \u306a\u3069\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3059\u3050\u306b\u4f7f\u3048\u308b\u72b6\u614b\u306e\u958b\u767a\u74b0\u5883\u3092\u8a66\u3057\u3066\u307f\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002Cloud9 IDE\u3092\u4f7f\u3046\u5834\u5408\u306f\u4e2d\u8eab\u306fUbuntu\u3067\u3059\u304b\u3089\u4e0d\u8db3\u304c\u3042\u308c\u3070`sudo apt-get`\u3067\u74b0\u5883\u3078\u5c0e\u5165\u3067\u304d\u307e\u3059\u3002\uff09\n\n\u5148\u305a\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u30fc\u3092\u7528\u610f\u3057\u307e\u3057\u3087\u3046\u3002\n\n```zsh\nmkdir -p ~/repos/hello_glm\ncd ~/repos/hello_glm\ngit init\ngit submodule add git@github.com:g-truc/glm.git submodule/glm\n```\n\n\uff08\u203b\u3053\u306e\u6642\u70b9\u3067\u4f55\u3092\u3057\u3066\u3044\u308b\u306e\u304b\u5206\u304b\u3089\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30b3\u30de\u30f3\u30c9\u3084git\u306e\u4f7f\u7528\u65b9\u6cd5\u306b\u3064\u3044\u3066\u5148\u306b\u5b66\u3073\u307e\u3057\u3087\u3046\u3002\uff09\n\nglm \u3092\u4f7f\u3063\u305f\u521d\u6b69\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```zsh\nvim main.cxx\n```\n\n\uff08\u203b`vim`\u3067\u7de8\u96c6\u3059\u308b\u306e\u306b\u6163\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u304a\u597d\u307f\u306e\u3001\u3042\u308b\u3044\u306f Cloud9 IDE \u306e\u30a8\u30c7\u30a3\u30bf\u30fc\u6a5f\u80fd\u306a\u3069\u4f7f\u3046\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\uff09\n\n```cpp\n#include <iostream>\n#include <glm/glm.hpp>\n\nauto main()\n  -> int\n{\n  auto a = glm::vec2( 3, 4 );\n  std::cout\n    << \"a: \" << a.x << \" \" << a.y << \"\\n\"\n    << \"length(a): \" << glm::length( a )\n    ;\n}\n```\n\n\u3053\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u306f glm \u306e\u57fa\u790e\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b glm::vec2 \uff082\u6b21\u5143\u30d9\u30af\u30bf\u30fc\uff09\u3092 a \u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3001\u6a19\u6e96\u51fa\u529b\u3078\u5b9a\u7fa9\u3055\u308c\u305f a \u306e\u5024 .x \u3068 .y \u3092\u51fa\u529b\u3001\u3064\u3044\u3067\u306b glm::length \uff08\u30d9\u30af\u30bf\u30fc\u306e\u9577\u3055\u3092\u6c42\u3081\u308b\u95a2\u6570\uff09\u306b\u3088\u308a a \u306e\u9577\u3055\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n\u3055\u3063\u305d\u304f\u7ffb\u8a33\u3057\u3066\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3068\u3053\u308d\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u76f4\u63a5`c++ -I./submodule/glm main.cxx -o hello_glm && hello_glm`\u3068\u3059\u308b\u4ee3\u308f\u308a\u306b\u3001\u65e9\u3005\u306b `CMakeLists.txt` \u3092\u7528\u610f\u3057\u3066\u30e2\u30c0\u30f3\u3067\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306a\u958b\u767a\u30ea\u30dd\u30b8\u30c8\u30ea\u30fc\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n```zsh\nvim CMakeLists.txt\n```\n\n```cmake\ncmake_minimum_required(VERSION 2.8.12)\n\nproject(hello_glm)\n\nif(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_BINARY_DIR}\")\n  message(SEND_ERROR \"In-source builds are not allowed.\")\nendif()\n\nset(CMAKE_DISABLE_IN_SOURCE_BUILD ON)\nset(CMAKE_DISABLE_SOURCE_CHANGES  ON)\n\nset(CMAKE_VERBOSE_MAKEFILE ON)\nset(CMAKE_COLOR_MAKEFILE ON)\n\nif (WIN32)\n  set(CMAKE_SHARED_LIBRARY_PREFIX \"\")\nendif()\n\nif(CMAKE_CXX_COMPILER MATCHES \"/em\\\\+\\\\+(-[a-zA-Z0-9.])?$\")\n  set(CMAKE_CXX_COMPILER_ID \"Emscripten\")\nendif()\n\nif(NOT CMAKE_CXX_COMPILER_ID STREQUAL \"MSVC\")\n  include(CheckCXXCompilerFlag)\n  CHECK_CXX_COMPILER_FLAG(\"-std=c++11\" COMPILER_SUPPORTS_CXX11)\n  CHECK_CXX_COMPILER_FLAG(\"-std=c++0x\" COMPILER_SUPPORTS_CXX0X)\n\n  if(COMPILER_SUPPORTS_CXX11)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n  elseif(COMPILER_SUPPORTS_CXX0X)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++0x\")\n  else()\n    message(STATUS \"The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.\")\n  endif()\n\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11 -Wall -pedantic-errors\")\nelse()\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /Wall /Za\")\nendif()\n\ninclude_directories(${CMAKE_SOURCE_DIR}/submodule/glm)\n\nfile(GLOB CXX_SOURCE_FILES *.cxx)\n\nif(NOT CMAKE_CXX_COMPILER_ID STREQUAL \"Emscripten\")\n  set(TARGET ${PROJECT_NAME})\nelse()\n  set(TARGET ${PROJECT_NAME}.html)\nendif()\n\nadd_executable(${TARGET} ${CXX_SOURCE_FILES})\n```\n\n\uff08\u203b\u4f46\u3057\u4eca\u56de\u306e\u57f7\u7b46\u524d\u5f8c\u3001\u8457\u8005\u306fMSVC++\u3067\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u8457\u8005\u306e\u4e88\u60f3\u5916\u306e\u4e8b\u304c\u8d77\u304d\u305f\u3089\u3054\u3081\u3093\u306a\u3055\u3044\u3001\u305d\u306e\u6642\u306b\u306f\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u9802\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\uff09\n\n\u3053\u306e`CMakeLists.txt`\u306f\u5fc5\u8981\u6700\u5c0f\u9650\u3067\u306f\u306a\u304f\u3001\u6bd4\u8f03\u7684\u306b\u5b9f\u7528\u7684\u306a\u5185\u5bb9\u3067\u8a18\u8ff0\u3057\u3066\u3042\u308a\u307e\u3059\u3002\u3082\u3057\u3001\u308f\u304b\u3089\u306a\u3044\u4e8b\u304c\u3042\u308c\u3070\u8abf\u3079\u3066\u307f\u3066`cmake`\u3092\u3042\u308b\u7a0b\u5ea6\u4f7f\u3044\u3053\u306a\u305b\u308b\u3088\u3046\u306b\u306a\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u3067\u306f\u3001\u30d3\u30eb\u30c9\u3057\u307e\u3057\u3087\u3046\u3002\n\n```zsh\nmkdir build\ncd build\ncmake .. -G Ninja -DCMAKE_BIULD_TYPE=Debug\n```\n\n\uff08\u203b\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3092`-D Ninja`\u3068\u3057\u3066\u3044\u307e\u3059\u304c\u3001`cmake`\u306f[Ninja]()\u306e\u307b\u304b\u3001`Makefile` `CodeBlocks` `Eclipse CDT` `KDevelop` `Sublime Text` \u305d\u308c\u304b\u3089 `Xcode` \u3084 `MSVC++` \u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306f\u305a\u306a\u306e\u3067\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u9078\u629e\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002 \uff09\n\n```zsh\nninja\n```\n\n\uff08\u203b`Makefile`\u306a\u3089`make`\u3001\u4ed6\u306e\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3092\u9078\u629e\u3057\u305f\u5834\u5408\u306f\u305d\u308c\u305e\u308c\u306e\u30d3\u30eb\u30c9\u65b9\u6cd5\u306b\u5f93\u3044\u307e\u3059\u3002\uff09\n\n\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```zsh\n./hello_glm\n```\n\n> ```\na: 3 4\nlength(a): 5\n\n\u4e8c\u6b21\u5143\u306e[\u30ab\u30eb\u30c6\u30b7\u30a2\u30f3\u5ea7\u6a19\u7cfb](http://ja.wikipedia.org/wiki/%E7%9B%B4%E4%BA%A4%E5%BA%A7%E6%A8%99%E7%B3%BB)\u3067 `(x,y)=(3,4)` \u306e\u30d9\u30af\u30bf\u30fc\u3092 `a` \u3068\u3057\u307e\u3057\u305f\u306e\u3067\u3001 `glm::length(a)` \u306f\u76f4\u89d2\u3092\u631f\u30802\u8fba\u306e\u9577\u3055\u304c\u305d\u308c\u305e\u308c `3`\u3001 `4` \u306e[\u76f4\u89d2\u4e09\u89d2\u5f62](http://ja.wikipedia.org/wiki/%E7%9B%B4%E8%A7%92%E4%B8%89%E8%A7%92%E5%BD%A2)\u306e\u659c\u8fba\u306e\u9577\u3055\u3068\u3044\u3046\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\u5c0f\u5b66\u6821\u306e\u7b97\u6570\u306e\u6559\u79d1\u66f8\u306b\u3082\u76f4\u89d2\u4e09\u89d2\u5f62\u306e\u8fba\u306e\u9577\u3055\u304c\u6574\u6570\u306b\u306a\u308b\u7d44\u307f\u5408\u308f\u305b\u3068\u3057\u3066\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u56f3\u5f62\u3067\u3059\u3002\n\n### glm \u306e\u6a5f\u80fd\u3068\u69cb\u9020\u306e\u6982\u8981\n\nglm \u306f\u6b21\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3068\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4eee\u60f3\u7684\u306bC++\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u98a8\u306b\u793a\u3057\u307e\u3059\u3002\n\n```cpp\n// A.1. glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u4e00\u90e8\u6a5f\u80fd\u306f CPP \u3092\u5b9a\u7fa9\u3057\u3066\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n#define GLM_SWIZZLE\n// 1. glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u57fa\u672c\u6a5f\u80fd\u304c\u542b\u307e\u308c\u307e\u3059\u3002\n#include <glm/glm.hpp>\n// 2. glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u62e1\u5f35\u6a5f\u80fd\u306e\u3046\u3061\u65e2\u306b\u4ed5\u69d8\u304c\u5b89\u5b9a\u3057\u305f\u6a5f\u80fd\u304c glm/gtc \u306b\u542b\u307e\u308c\u307e\u3059\u3002\n#include <glm/glc/constants.hpp>\n// 3. glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u62e1\u5f35\u6a5f\u80fd\u306e\u3046\u3061\u8a66\u9a13\u7684\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u6a5f\u80fd\u304c glm/gtx \u306b\u542b\u307e\u308c\u307e\u3059\u3002\n#include <glm/gtx/color_space.hpp>\n// 4. glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u62e1\u5f35\u6a5f\u80fd\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u53d6\u308a\u8fbc\u307f\u305f\u3044\u5834\u5408\u306b\u306f glm/ext.hpp \u3092\u4f7f\u3044\u307e\u3059\u3002\n#include <glm/ext.hpp>\n\nauto main()\n  -> int\n{\n  // glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u6a5f\u80fd\u306f\u57fa\u672c\u7684\u306b\u306f glm \u540d\u524d\u7a7a\u9593\u306b\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\n  glm::vec2 a, b;\n}\n\n// glm \u306f C++ \u30d8\u30c3\u30c0\u30fc\u30aa\u30f3\u30ea\u30fc\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\n// \u7ffb\u8a33\u6642\u306b\u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u304c\u53d6\u308a\u8fbc\u307e\u308c\u3066\u3044\u308c\u3070\n// \u30d0\u30a4\u30ca\u30ea\u30fc\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u30ea\u30f3\u30af\u306a\u3069\u306f\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n```\n\n### glm \u306e\u57fa\u790e\u7684\u306a\u6a5f\u80fd: `glm::vec`, `glm::mat` \u306e\u4f7f\u3044\u65b9\n\nglm \u306b\u306f\u57fa\u790e\u7684\u306a\u6a5f\u80fd\u3068\u3057\u3066 `glm::vec` \u3068 `glm::mat` \u304c\u3042\u308a\u3001\u305d\u308c\u305e\u308c\u4f4e\u6b21\u5143\u306e\u30d9\u30af\u30bf\u30fc\u3068\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306e\u5b9f\u88c5\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3089\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u308a `float` `double` `long double` `std::uint32_t` \u306a\u3069\u3078\u306e\u7279\u6b8a\u5316\u7248\u3082\u3053\u306e\u5f8c\u3067\u7d39\u4ecb\u3059\u308b\u5404\u7a2e\u306e glm \u306e\u591a\u304f\u306e\u6a5f\u80fd\u3082\u542b\u3081\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3082\u3057\u3001`std::uint16`\u578b\u306e `glm::vec3` \u3092\u4f7f\u3044\u305f\u3044\u6642\u306b\u306f\u3001\n\n```cpp\nglm::u16vec3 a( 1, 2, 3 );\n```\n\n\u306a\u3069\u660e\u793a\u7684\u306b `glm::u16vec3` \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u5177\u4f53\u7684\u306a\u578b\u306b\u306f\u4ed6\u306b\u3001 `glm::i32vec3` `glm::u64vec3` `glm::f64vec3` \u306a\u3069\u306e\u9078\u629e\u80a2\u304c\u3042\u308a\u3001`IEEE754/Binery(32|64)`\u3001`std::u?int(8|16|32|64)_t` \u306e\u5185\u90e8\u578b\u306e\u305d\u308c\u305e\u308c\u306e\u5bfe\u5fdc\u7248\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\uff08\u203b\u6b63\u78ba\u306b\u306f OpenGL \u898f\u683c\u306e\u578b\u306b\u6e96\u62e0\u3067\u304d\u308b\u3088\u3046\u306b\u51fa\u6765\u3066\u3044\u307e\u3059\u304c\u3001\u56fa\u5b9a\u5c0f\u6570\u70b9\u306a\u3069\u73fe\u5728\u4e00\u822c\u7684\u306aCPU\u3067\u30cd\u30a4\u30c6\u30a3\u30d6\u306b\u6271\u3048\u306a\u3044\u578b\u306f\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\u3002\uff09\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001`glm::vec3( 1, 2, 3 )` \u306f\u30c7\u30d5\u30a9\u30fc\u30eb\u30c8\u3067 `glm::f32vec3` \u3068\u306a\u308a\u3001\u6574\u6570\u578b\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u578b\u306e\u660e\u793a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n#### glm::vec \u306e\u4f7f\u7528\u4f8b: \n\n```cpp\n#include <iostream>\n#include <glm/glm.hpp>\n\nauto main()\n  -> int\n{\n  auto p = glm::vec4( 2, 3, 4, 5 );\n  auto q = glm::vec4( 3, 4, 5, 6 );\n\n  // \u56db\u5247\u6f14\u7b97\u306e\u6f14\u7b97\u5b50\u304c\u5b9a\u7fa9\u6e08\u307f\u3067\u4fbf\u5229\u306b\u4f7f\u3048\u307e\u3059\u3002\n  // operator+ \u306e\u4f8b:\n  auto n = p + q;\n\n  // operator* \u306f\u5358\u306a\u308b\u6b21\u5143\u6bce\u306e\u30b9\u30ab\u30e9\u30fc\u7a4d\u3067\u3059:\n  auto m = p * q;\n\n  std::cout\n    << \"n ( operator+ ): \" << n.x << \" \" << n.y << \" \" << n.z << \" \" << n.w << \"\\n\"\n    << \"m ( operator* ): \" << m.x << \" \" << m.y << \" \" << m.z << \" \" << m.w << \"\\n\"\n    ;\n}\n```\n\n> ```\nn ( operator+ ): 5 7 9 11\nm ( operator* ): 6 12 20 30\n\nglm \u306e `vec` \u306e\u5404\u6b21\u5143\u306e\u8981\u7d20\u306e\u5024\u306b\u306f\u3001\u6b21\u5143\u6bce\u306b `x` `y` `z` `w` \u306e\u9806\u306b\u3001\u3042\u308b\u3044\u306f `r` `g` `b` `a` \u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n\n#### glm::mat \u306e\u4f7f\u7528\u4f8b: \n\n```cpp\n#include <iostream>\n#include <glm/glm.hpp>\n// \u3042\u3068\u3067 gtx \u62e1\u5f35\u306e\u7d39\u4ecb\u3067\u3082\u7c21\u5358\u306b\u89e6\u308c\u307e\u3059\u3002glm::to_string()\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n#include <glm/gtx/string_cast.hpp>\n\nauto main()\n  -> int\n{\n  glm::mat4 m;\n  std::cout << glm::to_string( m ) << \"\\n\";\n  m *= 3.14f;\n  std::cout << glm::to_string( m ) << \"\\n\";\n}\n```\n\n> ```\nmat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))\nmat4x4((3.140000, 0.000000, 0.000000, 0.000000), (0.000000, 3.140000, 0.000000, 0.000000), (0.000000, 0.000000, 3.140000, 0.000000), (0.000000, 0.000000, 0.000000, 3.140000))\n\n\u3055\u3059\u304c\u306b 4x4 \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306e\u30c0\u30f3\u30d7\u3092\u3061\u307e\u3061\u307e\u3068\u8868\u793a\u3059\u308b\u306e\u306f\u9762\u5012\u306a\u306e\u3067 `#include <glm/gtx/string_cast.hpp>` \u3092\u4f7f\u3063\u3066\u305d\u3053\u306f\u624b\u629c\u304d\u3092\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3064\u3044\u3066\u306f\u5f8c\u307b\u3069\u62e1\u5f35\u6a5f\u80fd\u306e\u89e3\u8aac\u3067\u3082\u7c21\u5358\u306b\u89e6\u308c\u307e\u3059\u3002\n\n`glm::mat4` \u306f `glm::mat4x4` \u3078\u306e\u5225\u540d\u3067\u3001\u3053\u308c\u3082\u307e\u305f `glm::vec4` \u306e\u4f8b\u3068\u540c\u3058\u3088\u3046\u306b `glm::f32mat4x4` \u304c\u5b9f\u4f53\u3068\u306a\u308a\u307e\u3059\u3002\u4ed6\u306b\u3001 `glm::mat2` `glm::mat3` \u3082\u3042\u308a\u3001\u305d\u308c\u305e\u308c 2x2 \u3068 3x3 \u306b\u5bfe\u5fdc\u3057\u3001\u3055\u3089\u306b `glm::mat4x3` \u306a\u3069\u884c\u3068\u5217\u304c\u4e00\u81f4\u3057\u306a\u3044\u7d44\u307f\u5408\u308f\u305b\u306b\u3064\u3044\u3066\u3082\u5b9a\u7fa9\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u6f14\u7b97\u5b50\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306f `float` \u3092\u5168\u3066\u306e\u8981\u7d20\u306b\u7a4d\u7b97\u3059\u308b\u4f8b\u3092\u793a\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u624b\u306e\u6f14\u7b97\u5b50\u306f `glm::vec4` \u3068\u540c\u69d8\u306b\u4f7f\u3048\u307e\u3059\u3002\n\n`vec` \u3068\u7570\u306a\u308b\u6027\u8cea\u3068\u3057\u3066\u3001`vec` \u3067\u306f\u30c7\u30d5\u30a9\u30fc\u30eb\u30c8\u306e\u69cb\u7bc9\u5b50\u3067\u751f\u6210\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c [\u96f6\u30d9\u30af\u30bf\u30fc](http://ja.wikipedia.org/wiki/%E9%9B%B6%E3%83%99%E3%82%AF%E3%83%88%E3%83%AB)\u3068\u306a\u308a\u307e\u3059\u304c\u3001 `mat` \u3067\u306f[\u5358\u4f4d\u884c\u5217](http://ja.wikipedia.org/wiki/%E5%8D%98%E4%BD%8D%E8%A1%8C%E5%88%97)\u306b\u306a\u308b\u70b9\u306b\u6ce8\u610f\u304c\u5fc5\u8981\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u3053\u308c\u306f\u5b9f\u7528\u4e0a\u306f\u5be7\u308d\u4fbf\u5229\u3067\u3042\u308a\u304c\u305f\u3044\u4e8b\u304c\u591a\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u500b\u5225\u306e\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u884c\u3044\u307e\u3059\u3002\n\n```cpp\n#include <iostream>\n#include <glm/glm.hpp>\n#include <glm/gtx/string_cast.hpp>\n#include <type_traits>\n\nauto main()\n  -> int\n{\n  glm::mat4 m;\n  \n  m[0][1] = 1.73f;\n  \n  for ( auto a = 0; a < 4; ++a )\n    for ( auto b = 0; b < 4; ++b )\n      std::cout << m[a][b] << \" \";\n  \n  std::cout\n    << \"\\n\"\n    << glm::to_string( m ) << \"\\n\" \n    << *( reinterpret_cast< float* >( &m ) + 1 )\n    ;\n}\n```\n\n> ```\n1 1.73 0 0 0 1 0 0 0 0 1 0 0 0 0 1 \nmat4x4((1.000000, 1.730000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))\n1.73\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001\u3053\u306e\u7d50\u679c\u304b\u3089\u3082\u3055\u308a\u6c17\u306a\u304f\u5206\u304b\u308b\u3088\u3046\u306b\u3001 glm \u306e `mat` \u306f\u884c\u512a\u5148\uff08[Row-Major Order](http://en.wikipedia.org/wiki/Row-major_order)\uff09\u306e\u30e1\u30e2\u30ea\u30fc\u914d\u7f6e\u3092\u53d6\u308a\u307e\u3059\u3002\n\n#### `glm::vec` `glm::mat` \u306e\u30e1\u30e2\u30ea\u30fc\u8868\u73fe\n\n`glm::vec` \u3068 `glm::mat` \u306f\u53b3\u5bc6\u306b\u306f\u3044\u308f\u3086\u308b POD \u578b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u6a19\u6e96\u914d\u7f6e\u578b\uff08standard layout type\uff09\u306a\u306e\u3067\u3001 `std::vector<glm::vec4>` \u3068\u3057\u3066 OpenGL \u3084 Direct3D \u3067 GPU \u306e\u30d0\u30c3\u30d5\u30a1\u30fc\u3078\u8ee2\u9001\u3059\u308b\u57fa\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3057\u305f\u308a\u3001\u3042\u308b\u3044\u306f `struct my_vertex { glm::vec4 position; glm::vec3 normal; glm::vec2 texcoord0; }; std::vector<my_vertex>` \u306e\u69d8\u306b\u6271\u3063\u3066\u3082\u901a\u5e38\u306f\u5b89\u5168\u3067\u3059\u3002\n\n```cpp\n#include <iostream>\n#include <type_traits>\n#include <glm/glm.hpp>\n\nauto main()\n  -> int\n{\n  std::cout\n    << std::boolalpha\n    << \"pod            : \" << std::is_pod<glm::vec4>::value << \"\\n\"\n    << \"standard layout: \" << std::is_standard_layout<glm::vec4>::value << \"\\n\"\n    << \"trivial        : \" << std::is_trivial<glm::vec4>::value\n    ;\n}\n```\n\n> ```\npod            : false\nstandard layout: true\ntrivial        : false\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6d3e\u751f\u578b\u306e\u4f7f\u3044\u65b9\u3092\u3059\u308b\u3068\u6a19\u6e96\u914d\u7f6e\u578b\u306e\u6027\u8cea\u306f\u5931\u308f\u308c\u3001\u4eee\u60f3\u95a2\u6570\u30c6\u30fc\u30d6\u30eb\u306e\u70ba\u306b\u30b5\u30a4\u30ba\u3082\u30c7\u30fc\u30bf\u672c\u4f53\u306b\u5fc5\u8981\u306a\u5bb9\u91cf\u304b\u3089\u306f\u7570\u306a\u308b\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u6050\u3089\u304f OpenGL \u3084 Direct3D \u306e\u30d0\u30c3\u30d5\u30a1\u30fc\u3078\u306e\u8ee2\u9001\u3067\u306f\u6271\u3048\u306a\u3044\u304b\u3001\u30c8\u30ea\u30c3\u30af\u304c\u5fc5\u8981\u306b\u306a\u308a\u9762\u5012\u306e\u7a2e\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n```\n  struct vertex { glm::vec3 position; virtual auto f() -> void { }; };\n  struct vertex_ex1: vertex { glm::vec3 normal;  };\n  struct vertex_ex2: vertex_ex1 { glm::vec2 texcoord0; };\n  std::cout\n    << std::boolalpha\n    << \"vertex    : \" << std::is_standard_layout<vertex>::value << \" \" << sizeof(vertex) << \"\\n\"\n    << \"vertex_ex1: \" << std::is_standard_layout<vertex_ex1>::value << \" \" << sizeof(vertex_ex1) << \"\\n\"\n    << \"vertex_ex2: \" << std::is_standard_layout<vertex_ex2>::value << \" \" << sizeof(vertex_ex2) << \"\\n\"\n    ;\n```\n\n> ```\nvertex    : false 24\nvertex_ex1: false 32\nvertex_ex2: false 40\n\n### glm \u306e\u6a19\u6e96\u30fb\u62e1\u5f35\u6a5f\u80fd\u306e\u7d39\u4ecb\n\nglm \u306b\u306f\u6a19\u6e96\u6a5f\u80fd\u306b\u52a0\u3048 gtc \u3068 gtx \u306e\u4e8c\u6bb5\u968e\u306e\u62e1\u5f35\u6a5f\u80fd\u5b9f\u88c5\u304c\u3042\u308a\u3001\u62e1\u5f35\u6a5f\u80fd\u306f\u305d\u308c\u305e\u308c\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u500b\u5225\u306b `#include` \u3059\u308b\u304b\u3001\u3042\u308b\u3044\u306f\u307e\u3068\u3081\u3066 `glm/ext.hpp` \u3092 `#include` \u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\n\n\u3053\u3053\u304b\u3089\u306f glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306b\u542b\u307e\u308c\u308b\u4fbf\u5229\u306a\u6a5f\u80fd\u306b\u3064\u3044\u3066\u3001\u5e7e\u3064\u304b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n#### \u6a19\u6e96\u6a5f\u80fd\u3067\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u4fbf\u5229\u306a\u8a08\u7b97\u6a5f\u80fd\u305f\u3061\n\nglm \u306f\u540d\u524d\u306e\u7531\u6765\u3067\u3042\u308b OpenGL Mathematic \u306e\u540d\u524d\u304b\u3089\u3082\u60f3\u50cf\u304c\u4ed8\u3044\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u7279\u306b GLSL \u3067\u8a00\u8a9e\u6a19\u6e96\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u308b\u591a\u304f\u306e\u4fbf\u5229\u6a5f\u80fd\u306e C++ \u5b9f\u88c5\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070 lerp \u3068\u304b clamp \u3068\u304b\u3002\n\n\u4ee5\u4e0b\u3067\u7d39\u4ecb\u3059\u308b\u6a5f\u80fd\u306f `glm/glm.hpp` \u3092 `#include` \u3059\u308c\u3070\u4e00\u901a\u308a\u4f7f\u7528\u53ef\u80fd\u306b\u306a\u308b\u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u65e2\u306b[\u30b3\u30a2\u6a5f\u80fd](http://glm.g-truc.net/api/a00149.html)\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u3001\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u9806\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n##### \u7d76\u5bfe\u5024: `glm::abs(x)`\n\n```cpp\nstd::cout << glm::to_string( glm::abs( glm::vec3( 1, -1, -3 ) );\n```\n\n> ```\nvec3(1.000000, 1.000000, 3.000000)\n\n`<cmath>` \u306b\u542b\u307e\u308c\u308b `std::abs` \u3067\u306f `glm::vec3` \u306b\u5bfe\u3057\u3066\u306f\u4f7f\u3048\u307e\u305b\u3093\u304c\u3001 `glm::abs` \u3092\u4f7f\u3046\u3068\u76ee\u7684\u3092\u7c21\u5358\u306b\u9054\u6210\u3067\u304d\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u5358\u306a\u308b `float` \u306b\u3082\u6c17\u517c\u306d\u7121\u304f\u4f7f\u3048\u307e\u3059\u3002\n\n`std::abs` \u306b\u5bfe\u3059\u308b `glm::abs` \u306e\u3088\u3046\u306a\u5b9f\u88c5\u306f\u4ed6\u306e glm \u540d\u524d\u7a7a\u9593\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u95a2\u6570\u3067\u3082\u540c\u69d8\u306b `glm::vec3`\u7b49\u3078\u9069\u7528\u53ef\u80fd\u306a\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u3066\u4fbf\u5229\u306b\u4f7f\u3048\u307e\u3059\u3002\n\n##### \u5929\u4e95\u5024: `glm::ceil(x)`\n\n```cpp\nstd::cout << glm::to_string( glm::ceil( glm::vec2( M_PI, -M_PI ) ) );\n```\n\n> ```\nvec2(4.000000, -3.000000)\n\n##### \u6291\u3048\u8fbc\u307f: `glm::clamp(x, min, max)`\n\n```cpp\nstd::cout << glm::clamp( M_PI * 2, 0.0, M_PI / 2 );\n```\n\n>```\n1.5708\n\n`<cmath>`\u306b\u306f\u7121\u3044\u304c\u3001\u3057\u3070\u3057\u3070\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u8981\u6c42\u3055\u308c\u308b\u4e8b\u306e\u591a\u3044 `clamp` \u306f\u5024\u3092 [min-max] \u306e\u7bc4\u56f2\u306b\u6291\u3048\u8fbc\u307f\u307e\u3059\u3002\u4e38\u3081\u8fbc\u307f\uff08[rounding](http://eow.alc.co.jp/search?q=rounding)\uff09\u3067\u306f\u7121\u304f\u6291\u3048\u8fbc\u307f\uff08[clamp](http://eow.alc.co.jp/search?q=clamp)\uff09\u3067\u3059\u3002\n\n##### \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u6574\u6570\u578b\u8868\u73fe\u3092\u53d6\u5f97 : `floatBitsToInt( f )` `floatBitsToUint( f )`\n\n```cpp\nstd::cout << std::hex << glm::floatBitsToUint( 1 );\n```\n> ```\n3f800000\n\n\u3053\u308c\u306f [IEEE754/Binary32](http://ja.wikipedia.org/wiki/IEEE_754#32.E3.83.93.E3.83.83.E3.83.88.E5.8D.98.E7.B2.BE.E5.BA.A6) \u7b49\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\u306e\u30e1\u30e2\u30ea\u30fc\u8868\u73fe\u306b\u3064\u3044\u3066\u77e5\u8b58\u304c\u7121\u3044\u3068\u3084\u3084\u8b0e\u3081\u3044\u305f\u6a5f\u80fd\u306b\u898b\u3048\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n`float`\u578b\u306e\u5024\u306b\u5bfe\u3057\u3066\u30e1\u30e2\u30ea\u30fc\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u308a`*reinterpret_cast<std::int32_t*>`\u3068\u3057\u3066\u3082\u540c\u3058\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3067\u3057\u3087\u3046\u3002\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3092\u30d3\u30c3\u30c8\u30ec\u30d9\u30eb\u3067\u5236\u5fa1\u3057\u305f\u3044\u5834\u5408\u306b\u5fc5\u8981\u3068\u306a\u308b\u3001\u7528\u9014\u306e\u3084\u3084\u7279\u6b8a\u306a\u6a5f\u80fd\u3067\u3001 `glm::intBitsToFloat` `glm::uintBitsToFloat` \u3068\u5bfe\u306b\u306a\u308b\u6a5f\u80fd\u3067\u3059\u3002\u4e00\u822c\u306b\u306f\u5fc5\u8981\u306b\u306a\u308b\u4e8b\u306f\u7a00\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n##### \u5e8a\u5024: `floor(x)`\n\n```cpp\nstd::cout << glm::to_string( glm::floor( glm::vec2( M_PI, -M_PI ) ) );\n```\n\n> ```\nvec2(3.000000, -4.000000)\n\n\u5929\u4e95\u5024\uff08`ceil`\uff09\u3068\u5bfe\u306b\u306a\u308b\u5e8a\u5024\uff08`floor`\uff09\u3067\u3059\u3002 `ceil` \u3067\u306f\u540c\u69d8\u306e\u5f15\u6570\u3067 `vec2(4.000000, -3.000000)` \u304c\u5f97\u3089\u308c\u3066\u3044\u307e\u3057\u305f\u304c\u3001 `floor` \u3067\u306f `vec2(3.000000, -4.000000)` \u304c\u5f97\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u540d\u524d\u306e\u901a\u308a\u3001\u3053\u308c\u3089\u306f\u5024\u3092\u6574\u6570\u3078\u4e38\u3081\u8fbc\u3080\u306b\u5f53\u305f\u308a\u5929\u4e95\u5074\u3078\u4e38\u3081\u8fbc\u3080\u304b\u3001\u5e8a\u5074\u3078\u4e38\u3081\u8fbc\u3080\u304b\u3001\u3068\u3044\u3046\u95a2\u6570\u306b\u306a\u308a\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u3053\u3061\u3089\u3082 `vec` \u3067\u306f\u306a\u304f\u5358\u7d14\u306a `float` \u306e\u5024\u3078\u9069\u7528\u3059\u308b\u4e8b\u3082\u3067\u304d\u307e\u3059\u3002\n\n##### \u878d\u5408\u7a4d\u548c\u7b97 : `fma(a, b, c)`\n\n\n\u8a00\u8449\u3067\u8868\u9762\u4e0a\u306e\u7d50\u679c\u306b\u3064\u3044\u3066\u8a00\u3048\u3070\u3001 `f(b) = a * b + c` \u3092\u8a08\u7b97\u3059\u308b\u3060\u3051\u306e\u95a2\u6570\u3067\u3059\u3002\u3053\u306eFMA\uff08Fused Multiply-Add\uff09\u6f14\u7b97\u3068\u308f\u3056\u308f\u3056\u540d\u524d\u304c\u3064\u3044\u3066\u95a2\u6570\u307e\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u7406\u7531\u306f\u3001\u8a08\u7b97\u6a5f\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u8a08\u7b97\u306e\u5b9f\u88c5\u65b9\u6cd5\u306b\u8d77\u56e0\u3057\u307e\u3059\u3002\n\n\u73fe\u5728\u4e00\u822c\u7684\u306aPC\u3067\u3053\u306e FMA \u6f14\u7b97\u3092\u52b9\u7387\u3088\u304f\u672c\u5f53\u306bCPU\u547d\u4ee4\u30ec\u30d9\u30eb\u3067\u5b9f\u884c\u3067\u304d\u308b\u306e\u306f [intel \u306e AVX \u62e1\u5f35\u547d\u4ee4\u30bb\u30c3\u30c8\u306b\u542b\u307e\u308c\u308b FMA \u547d\u4ee4](http://en.wikipedia.org/wiki/X86_instruction_listings#FMA_instructions)\u3092\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u6bd4\u8f03\u7684\u6700\u8fd1\u306eCPU\u306e\u307f\u3067\u3059\u3002\uff08\u3044\u308f\u3086\u308b\u30b9\u30fc\u30d1\u30fc\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u5411\u3051\u306eCPU\u3067\u306f\u5bfe\u5fdc\u88fd\u54c1\u304c\u3042\u308a\u307e\u3059\u3002\uff09\u4e00\u65b9\u3001GPU \u3067\u306f FMA \u547d\u4ee4\u306f\u983b\u51fa\u3059\u308b\u91cd\u8981\u306a\u547d\u4ee4\u3068\u3057\u3066\u3001 [OpenGL GLSL \u3067\u3082 4.0 \u304b\u3089\u7d44\u307f\u8fbc\u307f\u306e\u95a2\u6570\u3068\u3057\u3066](https://www.opengl.org/sdk/docs/man/html/fma.xhtml)\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002 [Direct3D HLSL \u306b\u3082\u540c\u69d8\u306e\u7d44\u307f\u8fbc\u307f\u95a2\u6570](http://msdn.microsoft.com/en-us/library/windows/desktop/hh768893.aspx)\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u4eca\u306e\u6240\u306f `glm::fma` \u3092\u4f7f\u7528\u3057\u305f C++ \u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3057\u3066\u3001 AVX \u547d\u4ee4\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308bCPU\u5411\u3051\u306b\u30d3\u30eb\u30c9\u3057\u305f\u3068\u3057\u3066\u3082\u3001 `VFMADDSS` \u547d\u4ee4\u3078 `intrinsics` \u7b49\u3067\u7ffb\u8a33\u3055\u308c\u308b\u4e8b\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n```cpp\nfloat f( const float a, const float b, const float c )\n{ return a * b + c; }\n```\n\n\u3053\u306e\u95a2\u6570\u306f `clang++-3.5 -O0` \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u547d\u4ee4\u30b3\u30fc\u30c9\u7fa4\u306b\u7ffb\u8a33\u3055\u308c\u307e\u3057\u305f:\n\n```gas\n   0x00000000004008b0 <+0>:     push   %rbp\n   0x00000000004008b1 <+1>:     mov    %rsp,%rbp\n   0x00000000004008b4 <+4>:     movss  %xmm0,-0x4(%rbp)\n   0x00000000004008b9 <+9>:     movss  %xmm1,-0x8(%rbp)\n   0x00000000004008be <+14>:    movss  %xmm2,-0xc(%rbp)\n   0x00000000004008c3 <+19>:    movss  -0x4(%rbp),%xmm0\n   0x00000000004008c8 <+24>:    mulss  -0x8(%rbp),%xmm0\n   0x00000000004008cd <+29>:    addss  -0xc(%rbp),%xmm0\n   0x00000000004008d2 <+34>:    pop    %rbp\n   0x00000000004008d3 <+35>:    retq \n```\n\nXMM\u30ec\u30b8\u30b9\u30bf\u30fc\u3068SSE\u547d\u4ee4\u306b\u306f\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u5358\u7d14\u306b `mulss` `addss` \u3092\u884c\u3063\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u7d9a\u3044\u3066\u3001`clang++-3.5 -O3 -march=native` \u3067\u7ffb\u8a33\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3057\u305f:\n\n```gas\n   0x00000000004008c0 <+0>:     vmulss %xmm1,%xmm0,%xmm0\n   0x00000000004008c4 <+4>:     vaddss %xmm2,%xmm0,%xmm0\n   0x00000000004008c8 <+8>:     retq\n```\n\nXMM\u30ec\u30b8\u30b9\u30bf\u30fc\u3092\u4f7f\u3044\u306a\u304c\u3089\u3082 AVX \u547d\u4ee4\u30bb\u30c3\u30c8\u306e `vmulss` \u3068 `vaddss` \u4f7f\u3063\u3066\u304f\u308c\u307e\u3057\u305f\u304c\u3001 `vfmaddss` \u306f\u4f7f\u3063\u3066\u304f\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u5ff5\u306e\u70ba\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u81ea\u52d5\u30d9\u30af\u30bf\u30fc\u5316\u3092\u671f\u5f85\u3057\u3084\u3059\u3044\u95a2\u6570\u3082\u7ffb\u8a33\u3057\u3066\u307f\u307e\u3057\u305f:\n\n```cpp\nvoid f( const float* a, const float* b, const float* c, float* r )\n{\n  for( auto n = 0; n < 256; ++n )\n    r[n] = a[n] * b[n] + c[n];\n}\n```\n\n```gas\n   0x0000000000400800 <+112>:   vmovups (%rdi,%rax,4),%ymm0\n   0x0000000000400805 <+117>:   vmovups 0x20(%rdi,%rax,4),%ymm1\n   0x000000000040080b <+123>:   vmovups 0x40(%rdi,%rax,4),%ymm2\n   0x0000000000400811 <+129>:   vmovups 0x60(%rdi,%rax,4),%ymm3\n   0x0000000000400817 <+135>:   vmulps (%rsi,%rax,4),%ymm0,%ymm0\n   0x000000000040081c <+140>:   vmulps 0x20(%rsi,%rax,4),%ymm1,%ymm1\n   0x0000000000400822 <+146>:   vmulps 0x40(%rsi,%rax,4),%ymm2,%ymm2\n   0x0000000000400828 <+152>:   vmulps 0x60(%rsi,%rax,4),%ymm3,%ymm3\n   0x000000000040082e <+158>:   vaddps (%rdx,%rax,4),%ymm0,%ymm0\n   0x0000000000400833 <+163>:   vaddps 0x20(%rdx,%rax,4),%ymm1,%ymm1\n   0x0000000000400839 <+169>:   vaddps 0x40(%rdx,%rax,4),%ymm2,%ymm2\n   0x000000000040083f <+175>:   vaddps 0x60(%rdx,%rax,4),%ymm3,%ymm3\n   0x0000000000400845 <+181>:   vmovups %ymm0,(%rcx,%rax,4)\n   0x000000000040084a <+186>:   vmovups %ymm1,0x20(%rcx,%rax,4)\n   0x0000000000400850 <+192>:   vmovups %ymm2,0x40(%rcx,%rax,4)\n   0x0000000000400856 <+198>:   vmovups %ymm3,0x60(%rcx,%rax,4)\n```\n\nAVX \u547d\u4ee4\u304c\u5fae\u5999\u306b\u5909\u308f\u3063\u3066\u3044\u307e\u3059\u304c\u3001 `vmulps` \u3068 `vaddps` \u3067 `-ss` \u304c `-ps` \u306b\u30d9\u30af\u30bf\u30fc\u5316\u3055\u308c\u305f\u3060\u3051\u3067\u3057\u305f\u3002\u3061\u306a\u307f\u306b\u3001 intel \u547d\u4ee4\u30bb\u30c3\u30c8\u306eSIMD\u547d\u4ee4\u7cfb\u306e\u672b\u5c3e\u306e ss \u306f scalar single precision \u3001 ps \u306f packed single precision \u3067\u3001\u304a\u5bdf\u3057\u306e\u901a\u308a\u300164bit\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\u3067\u306f sd \u3068\u304b pd \u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001 V \u3067\u59cb\u307e\u3063\u3066\u3044\u308b\u547d\u4ee4\u306f AVX \u3001 \u547d\u4ee4\u306e\u307e\u3093\u306a\u304b\u306b\u5165\u3063\u3066\u3044\u308b mul add mov \u306a\u3069\u304c \u7a4d\u7b97 \u52a0\u7b97 \u79fb\u52d5\uff08CPU\u30ec\u30b8\u30b9\u30bf\u30fc\u3068\u30e1\u30a4\u30f3\u30e1\u30e2\u30ea\u30fc\u9593\u306e\u3001\u306a\u3069\uff09\u3067\u3059\u3002\n\n\u4eca\u56de\u306f SIMD \u547d\u4ee4\u306e\u306f\u306a\u3057\u3067\u306f\u306a\u3044\u306e\u3067\u3053\u306e\u304f\u3089\u3044\u306b\u3057\u3066 glm\u306e \u6a5f\u80fd\u306b\u623b\u308a\u307e\u3057\u3087\u3046\u3002\n\n##### \u4eee\u6570 : `fract( f )`\n\n```cpp\nstd::cout << glm::fract( M_PI );\n```\n\n> ```\n0.141593\n\n`fract` \u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u4eee\u6570\u90e8\uff08fraction\uff09\u306e\u307f\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002IEEE754\u5f62\u5f0f\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3067\u306f\u3001\u5024\u3092\u7b26\u53f7\u90e8\u3001\u6307\u6570\u90e8\u3001\u4eee\u6570\u90e8\u306b\u5206\u3051\u3001\u305d\u308c\u305e\u308c\u306b\u4e00\u5b9a\u306e\u5bb9\u91cf\u3092\u5272\u308a\u5f53\u3066\u3066\u8a18\u9332\u3057\u307e\u3059\u3002\u3053\u306e\u3046\u3061\u306e\u4eee\u6570\u90e8\u306e\u307f\u3092\u62bd\u51fa\u3057\u305f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u901a\u5e38\u3001\u3088\u308a\u5358\u7d14\u306b\u8a00\u3046\u3068\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u5c0f\u6570\u70b9\u306e\u5f8c\u308d\u306e\u90e8\u5206\u306e\u307f\u3092\u5f97\u3089\u308c\u307e\u3059\u3002\u3069\u3046\u3057\u3066\u305d\u3046\u306a\u308b\u306e\u304b\u7406\u89e3\u3057\u305f\u3044\u65b9\u306f [IEEE754/Binary32](http://ja.wikipedia.org/wiki/IEEE_754#32.E3.83.93.E3.83.83.E3.83.88.E5.8D.98.E7.B2.BE.E5.BA.A6) \u306e\u300c\u3051\u3061\u8868\u73fe\u300d\u306e\u9805\u306b\u3064\u3044\u3066\u77e5\u8b58\u3092\u88dc\u5145\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u4f8b\u3067\u306f `M_PI` \u3092\u4e0e\u3048\u305f\u306e\u3067\u3001 `.141593` \u304c\u51fa\u529b\u3068\u3057\u3066\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\u3082\u3061\u308d\u3093\u3001\u3053\u308c\u306f `std::cout` \u3078\u51fa\u529b\u3057\u305f\u969b\u306b\u4e38\u3081\u3089\u308c\u305f\u8868\u793a\u3067\u5b9f\u969b\u306b\u4fdd\u6301\u3057\u3066\u3044\u308b\u5024\u306e\u7cbe\u5ea6\u306f IEEE754/Binary32 \u3067\u3082\u3082\u3046\u5c11\u3057\u3060\u3051\u9ad8\u3044\u3067\u3059\u3002\n\n##### \u6307\u6570\u90e8\u3068\u4eee\u6570\u90e8\u306e\u5206\u96e2 : `glm::frexp( f, e )`\n\n\u3053\u308c\u306f\u57f7\u7b46\u6642\u70b9\u3067\u3069\u3046\u3082\u52d5\u4f5c\u3057\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001 \u307b\u307c\u7b49\u4fa1\u306a `<cmath>` \u7248\u306e\u7d39\u4ecb\u306b\u7559\u3081\u307e\u3059\u3002\n\n```cpp\nint e;\nauto x = std::frexp( M_PI, &e);\nstd::cout\n  << M_PI << \" = \" << x << \" x std::exp2( \" << e << \")\" << \"\\n\"\n  << \" = \" << ( x * std::exp2( e ) )\n  ;\n```\n\n> ```\n3.14159 = 0.785398 x std::exp2( 2)\n = 3.14159\n\n\u4e0e\u3048\u305f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3001\u4f8b\u3067\u306f `M_PI` \u3092\u3001 `x = exp2( e )` \u3092\u6e80\u305f\u3059 `x` \u3092\u95a2\u6570\u306e\u30ea\u30bf\u30fc\u30f3\u3001 `e` \u3092\u95a2\u6570\u306e\u7b2c2\u5f15\u6570\u3067\u53d7\u3051\u305f\u5b9f\u4f53\u53c2\u7167\u306b\u5bfe\u3057\u3066\u8a18\u9332\u3057\u307e\u3059\u3002\u4e8b\u5b9f\u4e0a\u306e\u52d5\u4f5c\u3068\u3057\u3066\u306f\u4efb\u610f\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 `M_PI` \u3092\u4e0e\u3048\u3066\u4e0a\u8a18\u7b49\u5f0f\u3092\u6e80\u305f\u3059 `x` \u3068 `e` \u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u3067\u3001IEEE754\u3067\u8a00\u3046\u6307\u6570\u90e8\u3068\u4eee\u6570\u90e8\u3092\u305d\u308c\u305e\u308c\u53d6\u5f97\u3059\u308b\u4e8b\u3068\u7b49\u4fa1\u3067\u3059\u3002\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001 `std::frexp` \u3067\u306f `&e` \u3068\u3057\u3066 `int*` \u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u304c\u3001 `glm::frexp` \u7248\u306f [OpenGL GLSL \u306e frexp](https://www.opengl.org/sdk/docs/man/html/frexp.xhtml) \u3068\u306e\u4e92\u63db\u6027\u3092\u91cd\u8996\u3057\u3066\u3044\u308b\u4e8b\u3082\u3042\u308a\u3001 \u7b2c2\u5f15\u6570\u306f `int&` \u3092\u4e0e\u3048\u308b\u30b7\u30b0\u30cb\u30c1\u30e3\u30fc\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n##### \u6574\u6570\u578b\u3092\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3078\u5909\u63db : `intBitsToFloat` `uintBitsToFloat`\n\n```cpp\nstd::cout\n  << std::hex << glm::floatBitsToUint( M_PI ) << \"\\n\"\n  << glm::uintBitsToFloat( 0x40490fdbu )\n  ;\n```\n\n> ```\n40490fdb\n3.14159\n\n\u524d\u51fa\u306e `floatBitsToInt` `floatBitsToUint` \u306e\u9006\u306e\u64cd\u4f5c\u3092\u884c\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u6574\u6570\u578b\u306e\u30e1\u30e2\u30ea\u30fc\u8868\u73fe\u3092\u305d\u306e\u307e\u307e `reinterpret_cast<float*>` \u3057\u3066\u518d\u89e3\u91c8\u3057\u305f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u3053\u3046\u3057\u305f\u6a5f\u80fd\u306f\u3001\u4f8b\u3048\u3070\u52b9\u7387\u7684\u306b\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3092\u751f\u6210\u3059\u308b\u4e71\u6570\u30a8\u30f3\u30b8\u30f3\u306e\u5b9f\u88c5\u306e\u69d8\u306b\u3001\u751f\u6210\u3057\u305f\u4e71\u6570\u30d3\u30c3\u30c8\u5217\u3092\u4e00\u5b9a\u306e\u5024\u306e\u7bc4\u56f2\u3001\u4f8b\u3048\u3070 unorm \u5024\uff08[0.0-1.0]\uff09\u306b\u6574\u3048\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u5fc5\u8981\u3068\u6210\u308a\u5f97\u308b\u3088\u3046\u306a\u3001\u3054\u304f\u4f4e\u30ec\u30d9\u30eb\u306e\u51e6\u7406\u3067\u3059\u3002\u5fc5\u8981\u304c\u7121\u3051\u308c\u3070\u7121\u95c7\u306b\u4f7f\u308f\u306a\u3044\u65b9\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\u307e\u305f\u3001 C++ \u3067\u306f OpenGL GLSL \u3068\u9055\u3044 `union` \u3092\u4f7f\u3046\u4e8b\u3067\u578b\u306e\u518d\u89e3\u91c8\u30ad\u30e3\u30b9\u30c8\u3092\u907f\u3051\u305f\u5b9f\u88c5\u3082\u53ef\u80fd\u3067\u3057\u3087\u3046\u3002\n\n##### \u7121\u9650\u5927\u306e\u5224\u5b9a : `isinf( f )`\n\n```cpp\nstd::cout << std::boolalpha << glm::isinf( M_PI / 0 );\n```\n\n> ```\ntrue\n\n\u4e0e\u3048\u3089\u308c\u305f\u5024\u304c\u7121\u9650\u5927\u3067\u3042\u308c\u3070 `true` \u3092\u8fd4\u3059\u3002\n\n##### \u975e\u6570\u306e\u5224\u5b9a : `isnan( f )`\n\n```cpp\nstd::cout << std::boolalpha << glm::isinf( 0. / 0 );\n```\n\n> ```\ntrue\n\n\u4e0e\u3048\u3089\u308c\u305f\u5024\u304c\u975e\u6570\u3067\u3042\u308c\u3070 `true` \u3092\u8fd4\u3059\u3002\n\n##### \u6307\u6570\u90e8\u3068\u4eee\u6570\u90e8\u304b\u3089\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3092\u751f\u6210 : `ldexp( x, e )`\n\n`frexp` \u306e\u9006\u95a2\u6570\u306b\u76f8\u5f53\u3059\u308b `ldexp` \u3067\u3059\u304c\u3001\u5bfe\u306b\u306a\u308b `frexp` \u540c\u69d8\u306b `ldexp` \u3082 glm \u7248\u306f\u52d5\u4f5c\u78ba\u8a8d\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067 std \u7248\u3067\u5b9f\u88c5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n```cpp\nstd::cout << std::ldexp( 0.785398f, 2 );\n```\n\n> ```\n3.14159\n\n\u5185\u90e8\u7684\u306b\u306f `frexp` \u3067\u7d39\u4ecb\u3057\u305f\u69d8\u306b `float ldexp( float f, int e ) { return x * std::exp2( e ); }` \u3068\u7b49\u4fa1\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\n##### \uff08\u6b21\u5143\u6bce\u306e\uff09\u6700\u5927\u5024 : `glm::max( a, b )`\n\n```c++\nglm::vec3 a( 1, 7, -M_PI );\nglm::vec3 b( 2, 3, std::cos(M_PI) );\nstd::cout << glm::to_string( glm::max( a, b ) );\n```\n\n> ```\nvec3(2.000000, 7.000000, -1.000000)\n\n`std::max` \u306e\u3088\u3046\u306b\u5358\u306b float \u3092\u6bd4\u8f03\u3059\u308b\u4e8b\u3082\u3067\u304d\u307e\u3059\u3002\u4f8b\u306e\u69d8\u306b `vec` \u3092\u4e0e\u3048\u305f\u5834\u5408\u306b\u306f\u3001\u5404\u6b21\u5143\u6bce\u306b\u6c42\u3081\u305f\u6700\u5927\u5024\u3092\u63a1\u7528\u3057\u305f `a` `b` \u3068\u540c\u3058\u6b21\u5143\u6570\u306e `vec` \u3092\u8fd4\u3057\u307e\u3059\u3002\u5404\u6b21\u5143\u306b\u4f55\u3092\u6271\u3046\u304b\u306f\u30e6\u30fc\u30b6\u30fc\u6b21\u7b2c\u306a\u306e\u3067\u3001\u4f55\u3089\u304b\u306e\u5c5e\u6027\u7fa4\u306e\u7406\u60f3\u7684\u306a\u6700\u5927\u5024\u69cb\u6210\u3092\u8a55\u4fa1\u3059\u308b\u306e\u306b\u4f7f\u3063\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3057\u3001\u8272\u306eRGB\u5024\u306e\u5408\u6210\u51e6\u7406\u306b\u4f7f\u3063\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n##### \uff08\u6b21\u5143\u6bce\u306e\uff09\u6700\u5c0f\u5024 : `glm::min( a, b )`\n\n```c++\nglm::vec3 a( 1, 7, -M_PI );\nglm::vec3 b( 2, 3, std::cos(M_PI) );\nstd::cout << glm::to_string( glm::min( a, b ) );\n```\n\n> ```\nvec3(1.000000, 3.000000, -3.141593)\n\n`glm::max` \u3068\u5bfe\u306b\u306a\u308b `glm::min` \u3067\u3059\u3002\u6b21\u5143\u6bce\u306e\u6700\u5c0f\u5024\u304b\u3089\u306a\u308b\u30b9\u30ab\u30e9\u30fc\u306a\u3044\u3057\u30d9\u30af\u30bf\u30fc\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n##### \u7dda\u5f62\u5408\u6210 : `glm::mix( x, y, a )`\n\n```c++\nstd::cout\n << glm::to_string( glm::mix( a, b, 4. / 5 ) );\n```\n\n> ```\nvec3(1.800000, 3.800000, -1.428319)\n\n`x` \u3068 `y` \u306b\u3064\u3044\u3066\u7dda\u5f62\u5408\u6210\u3092\u6df7\u5408\u6bd4 `a` \u3067\u884c\u3063\u305f\u7d50\u679c\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 `a` \u304c 0.0 \u306e\u6642 `x` \u3001 `a` \u304c `1.0` \u306e\u6642 `y` \u3092\u5f97\u3089\u308c\u307e\u3059\u3002\n\n\u3053\u308c\u306f C++ \u6a19\u6e96\u306b\u306f\u7121\u3044\u3051\u308c\u3069\u4e00\u822c\u306b\u4f7f\u3044\u3069\u3053\u308d\u306e\u591a\u3044\u4fbf\u5229\u306a\u6a5f\u80fd\u3067\u3059\u3002\u540c\u7a2e\u306e\u5408\u6210\u7cfb\u306e\u6a5f\u80fd\u5b9f\u88c5\u3068\u3057\u3066 `glm::lerp` \u3084 `glm::slerp` \u3082\u4f7f\u3044\u3069\u3053\u308d\u3067\u306f\u3068\u3066\u3082\u4fbf\u5229\u306e\u826f\u3044\u6a5f\u80fd\u3067\u3059\u3002\n\n##### \uff08\u8ca0\u6570\u3084\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u5bfe\u5fdc\u306e\uff09\u5270\u4f59\u7b97 : `glm::mod( x, y )`\n\n```cpp\nstd::cout\n  // 480 [degrees] => 120 [degrees]\n  << glm::mod(  M_PI * 8 / 3 , M_PI * 2 ) << \"\\n\"\n  // -270 [degrees] => 90 [degrees]\n  << glm::mod( -M_PI * 3 / 2 , M_PI * 2 )\n  ;\n```\n\n> ```\n2.0944\n1.5708\n\n\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570 `x` \u3092 `y` \u3067\u5270\u4f59\u7b97\u3057\u305f\u7d50\u679c\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001\u3088\u304f\u4f3c\u305f\u6a5f\u80fd\u306e `std::fmod` \u3068\u3082 `std::remainder` \u3068\u3082\u52b9\u679c\u304c\u7570\u306a\u308a\u307e\u3059\u3002\n\n\n| \u95a2\u6570           | \u5f97\u3089\u308c\u308b\u7d50\u679c                       | `x/y`\u306e\u7d50\u679c\u304b\u3089\u6574\u6570\u3092\u5f97\u308b\u51e6\u7406\u65b9\u6cd5 |\n|----------------|----------------------------------|---------|\n| `glm::mod`      | `x - std::ceil( x / y ) * y` | [\u6b63\u306e\u7121\u9650\u5927\u65b9\u5411\u3078\u4e38\u3081\u308b(rounding toward plus infinity; RP)](http://ja.wikipedia.org/wiki/%E7%AB%AF%E6%95%B0%E5%87%A6%E7%90%86#.E5.88.87.E3.82.8A.E6.8D.A8.E3.81.A6.E3.83.BB.E5.88.87.E3.82.8A.E4.B8.8A.E3.81.92) |\n| `std::fmod`     | `x - ( x > 0 ? std::ceil( x / y ) : std::floor( x / y ) ) * y`                      | [0\u306b\u8fd1\u304f\u306a\u308b\u3088\u3046\u306b\u4e38\u3081\u308b\uff08rounding toward zero; RZ\uff09](http://ja.wikipedia.org/wiki/%E7%AB%AF%E6%95%B0%E5%87%A6%E7%90%86#.E5.88.87.E3.82.8A.E6.8D.A8.E3.81.A6.E3.83.BB.E5.88.87.E3.82.8A.E4.B8.8A.E3.81.92) |\n| `std::remainder`| `x - std::round( x / y ) * y` | [IEEE754-1985](http://en.wikipedia.org/wiki/IEEE_754-1985#Standard_operations) \u6e96\u62e0 |\n\nglm \u306e\u5b9f\u88c5\u3067\u6574\u6570\u90e8\u3092 `ceil` \u3067\u4e38\u3081\u3066\u3044\u308b\u306e\u306f\u4f8b\u306b\u3088\u3063\u3066 OpenGL GLSL \u306b\u6e96\u62e0\u3057\u3066\u3044\u308b\u4e8b\u306b\u3088\u308a\u307e\u3059\u3002\u3053\u306e `ceil` \u3067\u4e38\u3081\u308b\u6319\u52d5\u306e\u5834\u5408\u306f\u4f8b\u793a\u3057\u305f\u3088\u3046\u306a\u89d2\u5ea6\u306e\u56de\u8ee2\u3092\u6b63\u898f\u5316\u3057\u305f\u3044\u5834\u5408\u306b\u4fbf\u5229\u304c\u826f\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u4f8b\u793a\u3067\u306f\u89d2\u5ea6\u306e\u5358\u4f4d\u7cfb\u3092\u30e9\u30b8\u30a2\u30f3\u3068\u3057\u305f\u306e\u3067\u65e5\u5e38\u7684\u306a\u5f27\u5ea6\u6cd5\u306b\u6163\u308c\u3066\u3044\u308b\u3068\u5206\u304b\u308a\u96e3\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4ee5\u4e0b\u306b\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u3067\u3042\u308b\u610f\u5473\u306f\u307b\u307c\u7121\u3044\u6574\u6570\u7684\u306b\u3082\u304d\u308a\u306e\u826f\u3044\u5024\u3068\u306f\u306a\u308a\u307e\u3059\u304c\u3001\u5f27\u5ea6\u6cd5\u3067\u306e\u305d\u308c\u305e\u308c\u306e\u6319\u52d5\u306e\u9055\u3044\u3082\u793a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```c++\nstd::cout\n  << glm::mod      ( -45.f, 360.f ) << \"\\n\"\n  << glm::fmod     ( -45.f, 360.f ) << \"\\n\"\n  << glm::remainder( -45.f, 360.f ) << \"\\n\"\n  <<               ( -45  % 360   ) <<\n  ;\n\n```\n\n> ```\n315\n-45\n-45\n-45\n\n##### \u6574\u6570\u90e8\u3068\u5c11\u6570\u90e8\u306e\u5206\u96e2 : `glm::modf( x, i )`\n\n```cpp\nglm::vec2 x( M_PI, -M_PI );\nglm::vec2 i;\nstd::cout << glm::to_string( glm::modf( x, i\u3000) ) << \"\\n\";\nstd::cout << glm::to_string( i );\n```\n\n> ```\nvec2(0.141593, -0.141593)\nvec2(3.000000, -3.000000)\n\n`x` \u306e\u6574\u6570\u90e8\u3092\u53c2\u7167\u3067\u53d7\u3051\u305f `i` \u3078\u3001\u5c0f\u6570\u90e8\u3092\u30ea\u30bf\u30fc\u30f3\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n`std` \u7248\u3068\u306e\u9055\u3044\u306f OpenGL GLSL \u3068\u540c\u69d8\u306b\u547c\u3073\u51fa\u3057\u30b3\u30fc\u30c9\u3068\u3057\u3066\u306f\u6271\u3048\u308b\u69d8\u306b glm \u7248\u3067\u306f `i` \u3092\u53c2\u7167\u3067\u53d7\u3051\u307e\u3059\u3002 `std` \u7248\u306f `<cmath>` \u306e C \u4e92\u63db\u6a5f\u80fd\u3068\u3044\u3046\u4e8b\u3082\u3042\u308a\u30dd\u30a4\u30f3\u30bf\u30fc\u3092\u6e21\u3059\u4ed5\u69d8\u3067\u3059\u3002\u307e\u305f\u3001 glm \u7248\u3067\u306f `vec` \u3092\u6e21\u3057\u3066\u4e00\u5ea6\u306b\u307e\u3068\u3081\u3066\u8907\u6570\u306e\u6b21\u5143\u306e `modf` \u7d50\u679c\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n##### \u6700\u8fd1\u508d\u306e\u6574\u6570\u3078\u306e\u4e38\u3081 : `glm::round( x )`\n\n```cpp\nglm::vec2 x( M_PI, -M_PI );\nstd::cout << glm::to_string( glm::round( x ) ) << \"\\n\";\n```\n\n> ```\nvec2(3.000000, -3.000000)\n\n`0.5` \u3092\u4e38\u3081\u305f\u969b\u306e\u6319\u52d5\u306f\u5b9f\u88c5\u4f9d\u5b58\u3002\u4e38\u3081\u51e6\u7406\u306b\u3064\u3044\u3066\u306f[\u7aef\u6570\u51e6\u7406#\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u306e\u4e38\u3081](http://ja.wikipedia.org/wiki/%E7%AB%AF%E6%95%B0%E5%87%A6%E7%90%86#.E3.82.B3.E3.83.B3.E3.83.94.E3.83.A5.E3.83.BC.E3.82.BF.E3.81.A7.E3.81.AE.E4.B8.B8.E3.82.81) \u3092\u3001\u307e\u305f `FE_DOWNWARD` `FE_TONEAREST` `FE_TOWARDZERO` `FE_UPWARD` \u306f `std::round` \u306b\u306f\u5bc4\u4e0e\u3057\u306a\u3044\u4e8b\u306b\u3082\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u4e8b\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n##### \u6700\u8fd1\u508d\u306e\u6574\u6570\u3078\u306e\u5076\u6570\u4e38\u3081 : `glm::roundEven( x )`\n\n```cpp\nglm::vec4 x( -1.5, -0.5, 0.5, 1.5 );\nstd::cout << glm::to_string( glm::roundEven( x ) ) << \"\\n\";\n```\n\n> ```\nvec4(-2.000000, 0.000000, 0.000000, 2.000000)\n\n`round` \u3067\u306f\u5b9f\u88c5\u4f9d\u5b58\u306e `.5` \u306f\u3069\u3061\u3089\u5074\u3078\u4e38\u3081\u308b\u3079\u304d\u304b\u3092\u5076\u6570\u306b\u5b9a\u3081\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u3002\u74b0\u5883\u306b\u3088\u3089\u305a\u78ba\u5b9f\u306b\u6700\u8fd1\u508d\u306e\u5076\u6570\u5074\u306e\u6574\u6570\u3078\u4e38\u3081\u3089\u308c\u308b\u3002\u74b0\u5883\u4f9d\u5b58\u306b\u3088\u308a\u4e38\u3081\u65b9\u5411\u304c\u7570\u306a\u3063\u3066\u306f\u56f0\u308b\u518d\u73fe\u6027\u306e\u91cd\u8981\u3067\u7e4a\u7d30\u306a\u51e6\u7406\u304c\u5fc5\u8981\u306a\u969b\u306b\u306f `round` \u3088\u308a\u3082 `roundEven` \u3092\u4f7f\u3046\u3079\u304d\u72b6\u6cc1\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n##### \u7b26\u53f7\u3092\u53d6\u5f97 : `glm::sign( x )`\n\n```cpp\nglm::vec4 x( -1.5, -0.5, 0.5, 1.5 );\nstd::cout << glm::to_string( glm::sign( x ) ) << \"\\n\";\n```\n\n> ```\nvec4(-1.000000, -1.000000, 1.000000, 1.000000)\n\n\u300c\u7b26\u53f7\u90e8\u300d\u3067\u306f\u7121\u304f\u300c\u7b26\u53f7\u300d\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001\u3088\u304f\u4f3c\u305f `<cmath>` \u306e\u6a5f\u80fd `std::signbit` \u3068\u306f\u6319\u52d5\u304c\u7570\u308a\u307e\u3059\u3002 `glm::sign` \u306f\u540d\u524d\u901a\u308a\u306b\u300c\u7b26\u53f7\u300d\u3092\u53d6\u5f97\u3059\u308b\u306e\u306b\u5bfe\u3057\u3001 `std::signbit` \u306f\u3053\u3061\u3089\u3082\u540d\u524d\u901a\u308a\u306b\u300c\u7b26\u53f7\u90e8\uff08\u5024\u306e\u578b\u306b\u5bfe\u5fdc\u3057\u305f\u7b26\u53f7\u90e8\u306e1\u30d3\u30c3\u30c8\uff09\u300d\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n##### \u30af\u30ea\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u305f\u30a8\u30eb\u30df\u30fc\u30c8\u88dc\u9593\u5024\u306e\u53d6\u5f97 : `glm::smoothstep( e1, e2, x )`\n\n```cpp\nglm::vec4 e1( 0, 0, 0, 0 );\nglm::vec4 e2( 100, 100, 100, 100 );\nglm::vec4 x( -20, 20, 40, 120 );\nstd::cout << glm::to_string( glm::smoothstep( e1, e2, x ) ) << \"\\n\";\n```\n\n>```\nvec4(0.000000, 0.104000, 0.352000, 1.000000)\n\n`e1` \u3092\u59cb\u70b9\u3001 `e2` \u3092\u7d42\u70b9\u3068\u3057\u3066\u5165\u529b\u5024 `x` \u3092\u4e0e\u3048\u305f\u969b\u306e\u30a8\u30eb\u30df\u30fc\u30c8\u88dc\u9593\uff08[Hermite interpolation](http://en.wikipedia.org/wiki/Hermite_interpolation)\uff09\u5024\u3092 `[0.0-1.0]` \u3067\u53d6\u5f97\u3057\u307e\u3059\u3002 `x` \u304c `e1` \u3068 `e2` \u306e\u7bc4\u56f2\u5916\u306b\u3042\u308b\u5834\u5408\u306f `glm::clamp` \u3055\u308c\u3001 `0.0` \u307e\u305f\u306f `1.0` \u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\n\u30a8\u30eb\u30df\u30fc\u30c8\u88dc\u9593\u306f\u5c11\u3057\u3060\u3051\u4e88\u5099\u77e5\u8b58\u304c\u7121\u3044\u3068\u30d4\u30f3\u3068\u6765\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u3001\u5177\u4f53\u7684\u306b `e1 = 0` `e2 = 100` \u3092\u4e0e\u3048\u305f `glm::smoothstep` \u306e\u3001\u5165\u529b\u5024 `x` \u306b\u5bfe\u3059\u308b\u51fa\u529b\u7d50\u679c\u3092\u4ee5\u4e0b\u306b\u56f3\u793a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n![ss89.png](https://qiita-image-store.s3.amazonaws.com/0/33891/6d246e77-dd33-eceb-384b-da9ef372ad1b.png)\n\n`smoothstep` \u306e\u540d\u524d\u901a\u308a\u3001\u59cb\u70b9\u304b\u3089\u7d42\u70b9\u3078\u3068\u6ed1\u3089\u304b\u306a\u6bb5\u5dee\u3092\u5b9f\u73fe\u3057\u305f\u3044\u5834\u5408\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\u6bb5\u5dee\u3092\u4f5c\u308b\u306e\u304c\u76ee\u7684\u3068\u3044\u3046\u4e8b\u3082\u3042\u308a\u3001\u7bc4\u56f2\u5916\u306e\u5165\u529b\u5024\u306f `glm::clamp` \u6319\u52d5\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b \"Hermite\" \u304c\u30d8\u30eb\u30df\u30fc\u30c8\u3084\u30cf\u30fc\u30df\u30c3\u30c8\u3067\u306f\u306a\u304f\u3001\u305d\u306e\u7531\u6765\u306e \"Charles Hermite\" \u304c\u30c1\u30e3\u30fc\u30eb\u30ba\u30fb\u30cf\u30fc\u30df\u30c3\u30c8\u3067\u306f\u306a\u304f[\u30b7\u30e3\u30eb\u30eb\u30fb\u30a8\u30eb\u30df\u30fc\u30c8](http://ja.wikipedia.org/wiki/%E3%82%B7%E3%83%A3%E3%83%AB%E3%83%AB%E3%83%BB%E3%82%A8%E3%83%AB%E3%83%9F%E3%83%BC%E3%83%88)\u3068\u7d20\u6575\u306a\u611f\u3058\u306e\u97f3\u306b\u306a\u308b\u306e\u306f\u30d5\u30e9\u30f3\u30b9\u8a9e\u306e\u767a\u97f3\u4f53\u7cfb\u306b\u8d77\u56e0\u3057\u307e\u3059\u3002\n\n##### \u95be\u5024\u306b\u3088\u308b\u5224\u5b9a : `glm::step`\n\n```cpp\nglm::vec4 e( 20, 20, 20, 20 );\nglm::vec4 x(  0, 10, 20, 30 );\nstd::cout << glm::to_string( glm::step( e, x ) ) << \"\\n\";\n```\n\n> ```\nvec4(0.000000, 0.000000, 1.000000, 1.000000)\n\n\u95be\u5024 `e` \u306b\u5bfe\u3057\u3066\u3001\u5165\u529b\u5024 `x` \u306e\u30c7\u30b8\u30bf\u30eb\u306a\u5fdc\u7b54\uff08`0` \u307e\u305f\u306f `1`\uff09\u3092\u5f97\u307e\u3059\u3002\u3088\u308a\u6b63\u78ba\u306b\u306f `return x < e;` \u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u307e\u3063\u305f\u304f\u88dc\u9593\u305b\u305a\u306b\u3001\u3042\u308b\u95be\u5024\u306b\u5fdc\u3058\u3066\u51e6\u7406\u306eON/OFF\u3084\u5024\u306e\u5207\u308a\u66ff\u3048\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n##### \u96f6\u65b9\u5411\u3078\u306e\u4e38\u3081 : `glm::trunc( x )`\n\n```cpp\nglm::vec4 x( -1.5, -0.5, 0.5, 1.5 );\nstd::cout << glm::to_string( glm::trunc( x ) ) << \"\\n\";\n```\n\n> ```\nvec4(-1.000000, -0.000000, 0.000000, 1.000000)\n\n`ceil` \u3084 `floor` \u306a\u3069\u4e38\u3081\u95a2\u6570\u306e\u4ef2\u9593\u3067\u3001\u96f6\u65b9\u5411\u306e\u6700\u8fd1\u508d\u306e\u6574\u6570\u306b\u4e38\u3081\u307e\u3059\u3002\n\n\n#### CPP\u5b9a\u7fa9\u306b\u3088\u3063\u3066\u767a\u52b9\u3059\u308b\u6a5f\u80fd\n\n##### \u8981\u7d20\u3078\u306e\u67d4\u8edf\u306a\u30a2\u30af\u30bb\u30b9 : `#define GLM_SWIZZLE`\n\n\u3053\u308c\u306f CPP \u3092\u5b9a\u7fa9\u3059\u308b\u3068\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u4fbf\u5229\u6a5f\u80fd\u3067\u3001\u3053\u308c\u3092\u5b9a\u7fa9\u3057\u3066\u304b\u3089 `glm/glm.hpp` \u3092 \"#include\" \u3059\u308b\u3068\u6b21\u306e\u3088\u3046\u306b `.xyzw()` `.xyz()` `zzww()` `.rgb()` `.bgra()` \u306e\u3088\u3046\u306b\u4efb\u610f\u306e\u8981\u7d20\u306e\u9806\u5e8f\uff44\u4e26\u3079\u66ff\u3048\u305f `vec` \u3092\u624b\u8efd\u306b\u6271\u3048\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n#include <iostream>\n#define GLM_SWIZZLE\n#include <glm/glm.hpp>\n#include <glm/gtx/string_cast.hpp>\n\nauto main()\n  -> int\n{\n  glm::vec4 a( 1, 2, 3, 4 );\n  auto b = a.zwyx();\n  auto c = a.rgb();\n  std::cout\n    << glm::to_string( a ) << \"\\n\"\n    << glm::to_string( b ) << \"\\n\"\n    << glm::to_string( c ) << \"\\n\"\n    ;\n}\n```\n\n##### \u30c7\u30d5\u30a9\u30fc\u30eb\u30c8\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u30e2\u30c7\u30eb\u306e\u5909\u66f4\n\nOpenGL GLSL \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u30c7\u30d5\u30a9\u30fc\u30eb\u30c8\u306e\u7cbe\u5ea6\u3092\u5909\u66f4\u3067\u304d\u307e\u3059: \n\n```glsl\nprecision mediump int;\nprecision highp float;\n```\n\nglm \u3067\u306f\u3053\u308c\u3092 CPP \u5b9a\u7fa9\u3067\u884c\u3048\u307e\u3059\u3002\n\n```cpp\n#define GLM_PRECISION_MEDIUMP_INT;\n#define GLM_PRECISION_HIGHP_FLOAT;\n#include <glm/glm.hpp>\n```\n\n\u7279\u306b\u660e\u793a\u3057\u306a\u3051\u308c\u3070 float \u7cfb\u3001 double \u7cfb\u3001 int \u7cfb\u3001 uint\u7cfb \u306e `vec` \u3084 `mat` \u306f\u5168\u3066 GLSL \u3067\u3044\u3046\u3068\u3053\u308d\u306e High precision \u76f8\u5f53\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\n\n##### \u7ffb\u8a33\u6642\u306e\u304a\u3057\u3083\u3079\u308a\u6a5f\u80fd\n\n\u3044\u308f\u3086\u308b verbose \u30e2\u30fc\u30c9\u7684\u306b\u7ffb\u8a33\u6642\u306b\u3069\u306e\u30d8\u30c3\u30c0\u30fc\u304c\u8aad\u307e\u308c\u305f\u3068\u304b\u3001\u547d\u4ee4\u30bb\u30c3\u30c8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u304b\u306a\u3069\u3092 `#pragma message` \u306b\u3088\u308a\u51fa\u529b\u3055\u305b\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\n```cpp\n#define GLM_MESSAGES\n#include <glm/glm.hpp>\n```\n\n\u4e00\u5ea6\u8a66\u3057\u3066\u307f\u308b\u3068\u5206\u304b\u308a\u307e\u3059\u304c\u3001\u901a\u5e38\u306f\u30c7\u30d5\u30a9\u30fc\u30eb\u30c8\u306e\u51fa\u529b\u7121\u52b9\u72b6\u614b\u306e\u65b9\u304c\u5fc3\u81d3\u306b\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n##### C++\u8a00\u8a9e\u898f\u683c\u30ec\u30d9\u30eb\u306e\u5f37\u5236\n\nglm \u306e\u30b3\u30fc\u30c9\u3092\u4f55\u308c\u306eC++\u8a00\u8a9e\u898f\u683c\u5411\u3051\u306b\u8a2d\u5b9a\u3059\u308b\u304b\u5f37\u5236\u3067\u304d\u307e\u3059\u3002\n\n```cpp\n#define GLM_FORCE_CXX14\n#include <glm/glm.hpp>\n```\n\n\u3053\u306e\u4f8b\u3067\u306f C++14 \u306b\u5f37\u5236\u3057\u307e\u3059\u3002\u4ed6\u306b\u3001 C++11 C++98 \u3078\u306e\u5f37\u5236\u3092\u8a2d\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n##### SIMD\u30b5\u30dd\u30fc\u30c8\u306e\u5f37\u5236\n\n\u901a\u5e38 glm \u306f\u6a19\u6e96\u3067\u81ea\u52d5\u7684\u306b\u5224\u65ad\u3057\u3066 SIMD \u547d\u4ee4\u3092\u3042\u308b\u7a0b\u5ea6\u7a4d\u6975\u7684\u306b\u4f7f\u304a\u3046\u3068\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3053\u306e\u81ea\u52d5\u5224\u65ad\u3092\u7121\u52b9\u5316\u3057\u7279\u5b9a\u306eSIMD\u30b5\u30dd\u30fc\u30c8\u3092\u5f37\u5236\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\n```cpp\n// vec4 mat4 \u3092 SIMD \u5411\u3051\u306b\u3057\u307e\u3059\u3002\n// \u5185\u90e8\u7684\u306b __mm128 \u306a\u3093\u304b\u3092\u4f7f\u3046\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\n#define GLM_GTX_simd_vec4\n#define GLM_GTX_simd_mat4\n// SIMD\u547d\u4ee4\u30bb\u30c3\u30c8\u3092\u5f37\u5236\u3057\u307e\u3059\u3002\n#define GLM_FORCE_SSE2\n#define GLM_FORCE_SSE3\n#define GLM_FORCE_SSE4\n#define GLM_FORCE_AVX\n#define GLM_FORCE_AVX2\n// SIMD \u547d\u4ee4\u3092\u4f7f\u3044\u305f\u304f\u7121\u3044\u5834\u5408\u306b\u8aa4\u3063\u3066\n// GLM_GTX_simd_vec4 \u306a\u3069\u660e\u793a\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306b\u30a8\u30e9\u30fc\u3092\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n#define GLM_FORCE_PURE\n```\n##### \u30a4\u30f3\u30e9\u30a4\u30f3\u5316\n\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u6700\u5927\u9650\u306b\u512a\u5148\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u30a4\u30f3\u30e9\u30a4\u30f3\u5316\u3092\u660e\u793a\u7684\u306b\u6307\u793a\u3067\u304d\u307e\u3059\u3002\n\n```cpp\n#define GLM_FORCE_INLNIE\n#include <glm/glm.hpp>\n```\n\n##### \n\n#### gtc \u62e1\u5f35\u6a5f\u80fd\u7fa4\n\n##### \u7a2e\u3005\u306e\u5b9a\u6570: `glm/gtc/constants.hpp`\n\n```\n#include <glm/gtc/constatns.hpp>\n```\n\n```cpp\n  std::cout\n    << glm::pi<double>() << \"\\n\"\n    << glm::e<double>() << \"\\n\"\n    << glm::three_over_two_pi<double>() << \"\\n\"\n    ;\n```\n\n> ```\n3.14159\n2.71828\n4.71239\n\n`\u03c0` `e` `\u03c0 * 3 / 2` \u306a\u3069\u306e\u5b9a\u6570\u5024\u3092\u6307\u5b9a\u306e\u578b\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u305f\u3060\u3001\u3053\u306e\u6a5f\u80fd\u306b\u3064\u3044\u3066\u306f `constexpr` \u975e\u5bfe\u5fdc\u306a\u4e8b\u3082\u3042\u308a\u3001 [Sprout](https://github.com/bolero-MURAKAMI/Sprout) \u306e `sprout::math::pi` \u306a\u3069\u3092\u4f7f\u3063\u305f\u65b9\u304c\u5b09\u3057\u3044\u4e8b\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u4f7f\u7528\u53ef\u80fd\u306a\u5b9a\u6570\u306e\u4e00\u89a7\u306f\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e[GLM_GTC_constants](http://glm.g-truc.net/api/a00165.html) \u3092\u3069\u3046\u305e\u3002\n\n##### \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306e\u7a4d\u306b\u3088\u308b\u5c04\u5f71\u5909\u63db: `glm/gtc/matrix_transform.hpp`\n\n\u7279\u306b Computer Graphics \u754c\u9688\u3067\u306f\u304a\u99b4\u67d3\u307f\u306e\u540c\u6b21\u5ea7\u6a19\u306b\u3088\u308b\u5c04\u5f71\u5909\u63db\u3092\u6271\u3048\u308b\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n#include <glm/gtc/matrix_transform.hpp>\n```\n\n```cpp\n  glm::vec3 p0;\n  std::cout << glm::to_string( p0 ) << \"\\n\";\n\n  auto translation = glm::translate( glm::mat4(), glm::vec3( 0, 0, 1 ) );\n  std::cout << glm::to_string( ( translation * glm::vec4( p0, 1 ) ).xyz() ) << \"\\n\";\n  \n  auto rotation    = glm::rotate( glm::mat4(), float(M_PI) / 4, glm::vec3( 1, 0, 0 ) ); \n  std::cout << glm::to_string( ( rotation * translation * glm::vec4( p0, 1 ) ).xyz() ) << \"\\n\";\n```\n\n> ```\nvec3(0.000000, 0.000000, 0.000000)\nvec3(0.000000, 0.000000, 1.000000)\nvec3(0.000000, -0.707107, 0.707107)\n\n\u4f8b\u3067\u7d39\u4ecb\u3057\u305f `glm::translate` \u3068 `glm::rotate` \u306e\u4ed6\u306b `glm::scale` \u3082\u3042\u308a\u307e\u3059\u3002\u4f8b\u3067\u306f\u96f6\u30d9\u30af\u30bf\u30fc `p0` \u3092\u3001Z\u8ef8\u65b9\u5411\u306b `+1` \u3060\u3051\u79fb\u52d5\u3057\u3001\u305d\u306e\u5f8c\u306b X \u8ef8\u56de\u8ee2\u3092 `\u03c0 / 4` \u3060\u3051\u56de\u8ee2\u3057\u3066\u3044\u307e\u3059\u3002\n\nglm \u306f OpenGL \u3068\u306e\u89aa\u548c\u6027\u306e\u5f37\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3001\u5c04\u5f71\u5909\u63db\u306e\u969b\u306b glm::mat4 \u306e\u7a4d\u3092\u884c\u3046\u9806\u5e8f\u3082\u540c\u69d8\u3067\u3059\u3002\u3053\u308c\u306f Direct3D \u3068 OpenGL \u3067\u306f \u884c\u5217\u306b\u5bfe\u3057\u3066\u5ea7\u6a19\u3092\u6271\u3046\u30d9\u30af\u30bf\u30fc\u304c\u300c\u5217\u30d9\u30af\u30bf\u30fc\uff08OpenGL\uff09\u300d\u304b\u300c\u884c\u30d9\u30af\u30bf\u30fc\uff08Direct3D\uff09\u300d\u304b\u306b\u8d77\u56e0\u3057\u3001\u4e21\u65b9\u306e API \u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u3063\u305f\u308a\u3001\u4e00\u65b9\u306e API \u304b\u3089\u4ed6\u65b9\u306e API \u3078\u3068\u978d\u66ff\u3048\u3059\u308b\u969b\u306b\u6df7\u4e71\u3059\u308b\u4e8b\u304c\u3042\u308a\u307e\u3059\u3002\u6ce8\u610f\u3057\u307e\u3057\u3087\u3046\u3002\n\n##### \u30ce\u30a4\u30ba\u751f\u6210\u5668 : `glm/gtc/noise.hpp`\n\n- \u30b7\u30f3\u30d7\u30ec\u30c3\u30af\u30b9\u30fb\u30ce\u30a4\u30ba \uff08[Simplex noise](http://en.wikipedia.org/wiki/Simplex_noise)\uff09\n\n```cpp\n#include <fstream>\n#include <glm/glm.hpp>\n#include <glm/gtc/noise.hpp>\n\nauto main()\n  -> int\n{\n  std::ofstream o(\"simplex.pgm\");\n  o << \"P2\\n256 256\\n255\\n\";\n  for ( auto y = 0; y < 256; ++y )\n  {\n    for ( auto x = 0; x < 256; ++x )\n      o << glm::roundEven( ( glm::simplex( glm::vec2( x / 64., y / 64. ) ) + 1.0f) * 255 / 2 ) << \" \";\n    o << \"\\n\";\n  }\n}\n```\n\n![simplex.png](https://qiita-image-store.s3.amazonaws.com/0/33891/83a09617-ebb0-82c7-42b7-6d3eea780bb5.png)\n\n\u30b7\u30f3\u30d7\u30ec\u30c3\u30af\u30b9\u30fb\u30ce\u30a4\u30ba\u306f 2001 \u5e74\u306b\u6b21\u306b\u7d39\u4ecb\u3059\u308b\u30d1\u30fc\u30ea\u30f3\u30fb\u30ce\u30a4\u30ba\u306e\u30b1\u30f3\u30fb\u30d1\u30fc\u30ea\u30f3\uff08[Ken Perlin](http://en.wikipedia.org/wiki/Ken_Perlin)\uff09\u304c\u30d1\u30fc\u30ea\u30f3\u30fb\u30ce\u30a4\u30ba\u306e\u6b21\u5143\u5897\u52a0\u306b\u4f34\u3046\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u306e\u5897\u5927\u3092\u6539\u5584\u3057\u3064\u3064\u540c\u69d8\u306e\u30ce\u30a4\u30ba\u3092\u751f\u6210\u3059\u308b\u76ee\u7684\u3067\u767a\u8868\u3057\u305f\u30ce\u30a4\u30ba\u751f\u6210\u5668\u3067\u3059\u3002\n\n\u30b7\u30f3\u30d7\u30ec\u30c3\u30af\u30b9\u30fb\u30ce\u30a4\u30ba\u3067\u306f\u305d\u308c\u307e\u3067\u306e\u30d1\u30fc\u30ea\u30f3\u30fb\u30ce\u30a4\u30ba\u3067\u306f\u751f\u6210\u30b3\u30b9\u30c8\u304c\u6b21\u5143 `n` \u306e\u5897\u52a0\u306b\u4f34\u3044\u3001 `\u039f( pow( 2, n ) )` \u3067\u5897\u52a0\u3059\u308b\u70b9\u3092 `\u039f( n, 2 )` \u306b\u6539\u5584\u3057\u3066\u3044\u307e\u3059\u3002\u4f8b\u793a\u306f\u7d75\u3068\u3057\u3066\u5206\u304b\u308a\u826f\u3044\u306e\u30672\u6b21\u5143\u3067\u751f\u6210\u3057\u307e\u3057\u305f\u304c\u30014\u6b21\u5143\u4ee5\u4e0a\u306e\u30ce\u30a4\u30ba\u3092\u751f\u6210\u3059\u308b\u969b\u306b\u306f\u30d1\u30fc\u30ea\u30f3\u30fb\u30ce\u30a4\u30ba\u4ee5\u4e0a\u306e\u751f\u6210\u901f\u5ea6\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\n\u547d\u540d\u306e\u300c\u30b7\u30f3\u30d7\u30ec\u30c3\u30af\u30b9\u300d\u306f\u65e5\u672c\u8a9e\u306b\u3057\u3066\u3057\u307e\u3046\u3068\u610f\u5473\u304c\u66d6\u6627\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3068\u611f\u3058\u305f\u306e\u3067\u79c1\u306e\u7ffb\u8a33\u30dd\u30ea\u30b7\u30fc\u306b\u306f\u73cd\u3057\u304f\u300c[\u5358\u4f53](http://ja.wikipedia.org/wiki/%E5%8D%98%E4%BD%93_%28%E6%95%B0%E5%AD%A6%29)\u300d\u3068\u8a33\u8a9e\u3092\u5145\u3066\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u6570\u5b66\u7684\u306a\u65e5\u672c\u8a9e\u306e\u300c\u5358\u4f53\u300d\u306f\u3042\u308b\u6b21\u5143\u306b\u304a\u3051\u308b\u6b21\u5143\u6570+1\u306e\u51f8\u6b63\u591a\u9762\u4f53\u306e\u3088\u3046\u306a\u3082\u306e\u3089\u3057\u3044\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u4f8b\u793a\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30b3\u30fc\u30c9\u3067\u306f\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092 [PNM \u5f62\u5f0f](http://ja.wikipedia.org/wiki/PNM_%28%E7%94%BB%E5%83%8F%E3%83%95%E3%82%A9%E3%83%BC%E3%83%9E%E3%83%83%E3%83%88%29)\u3067\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u3067\u753b\u50cf\u3092\u8868\u73fe\u3059\u308b\u5f62\u5f0f\u306e1\u3064\u3067\u3001\u3061\u3087\u3063\u3068\u3057\u305f\u30c7\u30fc\u30bf\u306e\u30c0\u30f3\u30d7\u3092\u753b\u50cf\u3068\u3057\u3066\u51fa\u3057\u3066\u307f\u305f\u3044\u6642\u306b\u91cd\u5b9d\u3057\u307e\u3059\u3002\u8457\u8005\u306f\u666e\u6bb5 Linux \u306e\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u74b0\u5883\u3068\u3057\u3066\u304a\u99b4\u67d3\u307f\u306e KDE \u3092\u4f7f\u3063\u3066\u3044\u3066\u3001\u753b\u50cf\u306f gweinview \u3068\u3044\u3046\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3067\u8868\u793a\u3057\u3066\u898b\u3066\u3044\u307e\u3059\u3002\u3082\u3057\u304b\u3057\u305f\u3089 Windows \u3084 OSX \u306e\u6a19\u6e96\u7684\u306a\u74b0\u5883\u3067\u306f PNM \u5f62\u5f0f\u3092\u753b\u50cf\u3068\u3057\u3066\u8868\u793a\u3067\u304d\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u305d\u306e\u6642\u306f .pbm .pgm .ppm \u306a\u3069\u306e PNM \u5f62\u5f0f\u306b\u5bfe\u5fdc\u3057\u305f\u753b\u50cf\u30d3\u30e5\u30fc\u30a2\u30fc\u3092\u63a2\u3059\u304b\u3001\u6216\u3044\u306f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f8b\u3092 [Magick++](http://www.imagemagick.org/Magick++/) \u306b\u3059\u308b\u306a\u3069\u9069\u5f53\u306b\u6271\u3044\u6613\u3044\u30c7\u30fc\u30bf\u51fa\u529b\u5f62\u5f0f\u306b\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002\u305d\u308c\u307b\u3069\u5927\u304d\u306a\u753b\u50cf\u5206\u89e3\u80fd\u3067\u306a\u3051\u308c\u3070\u6587\u5b57\u5217\u3067\u5024\u3092\u51fa\u529b\u3057\u3066\u8868\u8a08\u7b97\u30bd\u30d5\u30c8\u306e\u53ef\u8996\u5316\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u78ba\u8a8d\u3057\u3066\u307f\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\n- \u30d1\u30fc\u30ea\u30f3\u30fb\u30ce\u30a4\u30ba\uff08Perlin noise\uff09\n\n```cpp\n#include <fstream>\n#include <glm/glm.hpp>\n#include <glm/gtc/noise.hpp>\n\nauto main()\n  -> int\n{\n  std::ofstream o(\"perlin.pgm\");\n  o << \"P2\\n256 256\\n255\\n\";\n  for ( auto y = 0; y < 256; ++y )\n  {\n    for ( auto x = 0; x < 256; ++x )\n      o << glm::roundEven( ( glm::perlin( glm::vec2( x / 8., y / 8. ) ) + 1.0f) * 255 / 2 ) << \" \";\n    o << \"\\n\";\n  }\n}\n```\n\n![perlin.png](https://qiita-image-store.s3.amazonaws.com/0/33891/7413da28-690e-cb80-d65e-3c62064dd92c.png)\n\n\n[\u30d1\u30fc\u30ea\u30f3\u30fb\u30ce\u30a4\u30ba](http://ja.wikipedia.org/wiki/%E3%83%91%E3%83%BC%E3%83%AA%E3%83%B3%E3%83%8E%E3%82%A4%E3%82%BA) \u306f\u5148\u306b\u7d39\u4ecb\u3057\u305f\u30b7\u30f3\u30d7\u30ec\u30c3\u30af\u30b9\u30fb\u30ce\u30a4\u30ba\u3088\u308a\u6614\u30011983\u5e74\u306b\u30b1\u30f3\u30fb\u30d1\u30fc\u30ea\u30f3\u304c\u767a\u8868\u3057\u305f\u30ce\u30a4\u30ba\u751f\u6210\u5668\u3067\u3001\u305d\u308c\u3068\u77e5\u3089\u306a\u304f\u3068\u3082\u591a\u304f\u306e\u4eba\u304c\u3053\u306e\u30ce\u30a4\u30ba\u751f\u6210\u5668\u306e\u3001\u6216\u3044\u306f\u751f\u6210\u3055\u308c\u305f\u30ce\u30a4\u30ba\u306e\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070\u96f2\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u3068\u3057\u3066\u4f7f\u308f\u308c\u305f\u308a\u3059\u308b\u4f8b\u306f\u6709\u540d\u3067\u3059\u3002\n\n##### \u56db\u5143\u6570\uff08\u30af\u30a9\u30fc\u30bf\u30cb\u30aa\u30f3\uff09 : `glm/gtc/quaternion.hpp`\n\n```cpp\n  glm::vec3 p0( 0, 0, 1 );\n  glm::quat q1( glm::vec3( M_PI / 2, 0, 0 ) );\n  glm::quat q2( glm::vec3( 0, M_PI / 2, 0 ) );\n  auto p1 = q1 * p0;\n  auto p2 = q2 * p0;\n  auto p3 = glm::slerp( q1, q2, .5f ) * p0;\n  std::cout\n    << glm::to_string( p1 ) << \"\\n\"\n    << glm::to_string( p2 ) << \"\\n\"\n    << glm::to_string( p3 )\n    ;\n```\n\n> ```\nvec3(0.000000, -1.000000, 0.000000)\nvec3(1.000000, 0.000000, 0.000000)\nvec3(0.666667, -0.666667, 0.333333)\n\n\u30b8\u30f3\u30d0\u30eb\u30ed\u30c3\u30af\uff08[Gibmal lock](http://en.wikipedia.org/wiki/Gimbal_lock)\uff09\u30d5\u30ea\u30fc\u306e3\u6b21\u5143\u7a7a\u9593\u3067\u306e\u56de\u8ee2\u5236\u5fa1\u3067\u304a\u99b4\u67d3\u307f\u306e[\u56db\u5143\u6570](http://ja.wikipedia.org/wiki/%E5%9B%9B%E5%85%83%E6%95%B0)\uff08\u30af\u30a9\u30fc\u30bf\u30cb\u30aa\u30f3; quaternion\uff09\u3067\u3059\u3002\n\n`glm::quat` \u306e\u69cb\u7bc9\u5b50\u306b\u76f4\u63a5 `x` `y` `z` `w` \u30684\u3064\u306e\u56db\u5143\u6570\u306e\u8981\u7d20\u3092\u4e0e\u3048\u3066\u76f4\u63a5\u7684\u306b\u69cb\u7bc9\u3059\u308b\u4e8b\u3082\u51fa\u6765\u307e\u3059\u304c\u3001\u5229\u4fbf\u6027\u304b\u3089 `glm::quat( glm::vec3( ) )` \u3068\u3057\u3066\u3001\u30ab\u30eb\u30c6\u30b7\u30a2\u30f3\u5ea7\u6a19\u7cfb\u306b\u304a\u3051\u308bX\u8ef8\u56de\u8ee2\u3001Y\u8ef8\u56de\u8ee2\u3001Z\u8ef8\u56de\u8ee2\u3092\u305d\u308c\u305e\u308c `glm::vec3( x, y, z )` \u3067\u4e0e\u3048\u3066\u305d\u308c\u3092\u7d20\u306b `glm::quat` \u3092\u751f\u6210\u3057\u3066\u6271\u3046\u4e8b\u304c\u6b86\u3069\u3067\u3057\u3087\u3046\u3002\n\n\u4f8b\u3067\u306f\u3001\u70b9 `p0` \u3092 X\u8ef8\u306b `\u03c0/2`\uff0890\u00b0\uff09\u56de\u8ee2\u3057\u305f `p1` \u3001 Y\u8ef8\u306b `\u03c0/2` \u56de\u8ee2\u3057\u305f `p2` \u3001\u305d\u308c\u304b\u3089\u3001 \u56db\u5143\u6570 `q1` \u3068 `q2` \u3092\u7403\u9762\u88dc\u9593\u3067\u3061\u3087\u3046\u3069\u4e2d\u9593\u306e\u4f4d\u7f6e\u306b\u5408\u6210\u3057\u305f\u56db\u5143\u6570\u3067\u56de\u8ee2\u3057\u305f `p3` \u3092\u751f\u6210\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u30d9\u30af\u30bf\u30fc\u306e\u5404\u6b21\u5143\u306e\u5024\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u3001\u3057\u308c\u3063\u3068 `glm::slerp(a,b,x)` \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f `glm::mix` \u306e\u56db\u5143\u6570\u7528\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u4e2d\u8eab\u3068\u3057\u3066\u8ffd\u52a0\u5b9a\u7fa9\u3055\u308c\u3001\u3064\u307e\u308a\u7403\u9762\u88dc\u9593\u306b\u3088\u308a `a` \u3068 `b` \u3092\u5408\u6210\u6bd4 `x` \u3067\u5408\u6210\u3057\u307e\u3059\u3002\u7dda\u5f62\u88dc\u9593\u306e `glm::lerp` \u306e\u7403\u9762\u88dc\u9593\u7248\u3068\u8a00\u3046\u308f\u3051\u3067\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u30d9\u30af\u30bf\u30fc\u306b\u5bfe\u3057\u3066\u4f8b\u306e\u3088\u3046\u306b\u7c21\u5358\u306b\u30af\u30a9\u30fc\u30bf\u30cb\u30aa\u30f3\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u6f14\u7b97\u5b50\u304c\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3057\u3001\u8a08\u7b97\u30b3\u30b9\u30c8\u3082\u5358\u7d14\u306b\u306f\u5897\u52a0\u3059\u308b\u4e8b\u304b\u3089\u4f7f\u3046\u6a5f\u4f1a\u306f\u5fae\u5999\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001`glm::mat4_cast( q )` \u3068\u3057\u3066\u56db\u5143\u6570 `glm::quat` \u3092\u56de\u8ee2\u884c\u5217 `glm::mat4` \u3078\u5909\u63db\u3067\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u305d\u306e\u9006\u306e\u5909\u63db\u7528\u306b `glm::quat_cast( m )` \u3082\u3053\u306e\u62e1\u5f35\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#### gtx \u62e1\u5f35\u6a5f\u80fd\n\n##### \u8272\u7a7a\u9593\u306e\u5909\u63db : `glm/gtx/color_space.hpp`\n\n```cpp\n  auto rgb = glm::vec3( 0.5, 0.5, 0.25 );\n  auto hsv = glm::hsvColor( rgb );\n  std::cout << glm::to_string( hsv );\n```\n\n> ```\nvec3(60.000000, 0.500000, 0.500000)\n\n\u73fe\u5728\u306e glm \u30b3\u30a2\u5b9f\u88c5\u306e `vec` \u3067\u306f rgba \u7cfb\u3092\u60f3\u5b9a\u3057\u305f\u30e1\u30f3\u30d0\u30fc\u306e\u5b9a\u7fa9\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u5024\u3068\u3057\u3066\u306f\u540c\u3058\u6b21\u5143\u6570\u3067 HSV \u7cfb\u306e\u8272\u7a7a\u9593\u3082\u6271\u3048\u307e\u3059\u3002 gtx/color_space \u3092\u4f7f\u3046\u3068\u3001`glm::hsvColor` \u3068 `glm::rgbColor` \u304c\u8ffd\u52a0\u3055\u308c\u3001RGB\u8272\u7a7a\u9593\u304b\u3089HSV\u8272\u7a7a\u9593\u3001HSV\u8272\u7a7a\u9593\u304b\u3089RGB\u8272\u7a7a\u9593\u3078\u306e\u5909\u63db\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001\u4f8b\u306e\u7d50\u679c\u306e\u3088\u3046\u306b\u3001 `glm::hsvColor` \u306e\u7d50\u679c\u5f97\u3089\u308c\u308b H \u5024\uff08\u8272\u76f8; Hue\uff09\u306f\u5f27\u5ea6\u6cd5\u306b\u306a\u3063\u3066\u3044\u308b\u70b9\u3067\u3059\u3002\n\n##### \u6587\u5b57\u5217\u578b\u3078\u5909\u63db : `glm/gtx/string_cast.hpp`\n\n```cpp\n  std::cout\n    << glm::to_string( glm::vec4() ) << \"\\n\"\n    << glm::to_string( glm::mat4() )\n    ;\n```\n\n> ```\nvec4(0.000000, 0.000000, 0.000000, 0.000000)\nmat4x4((1.000000, 0.000000, 0.000000, 0.000000), (0.000000, 1.000000, 0.000000, 0.000000), (0.000000, 0.000000, 1.000000, 0.000000), (0.000000, 0.000000, 0.000000, 1.000000))\n\n\u3053\u3053\u307e\u3067\u306b\u3082 `vec` \u3068 `mat` \u306e\u5024\u306e\u78ba\u8a8d\u3068\u3057\u3066\u624b\u629c\u304d\u306e\u70ba\u306b\u4f7f\u3063\u3066\u304d\u305f `glm::to_string` \u3067\u3059\u3002`glm::quat` \u672a\u5bfe\u5fdc\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u304c\u5c11\u3005\u6b8b\u5ff5\u306a\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u3042\u308b\u3082\u306e\u306f\u4fbf\u5229\u306b\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\n### OpenGL \u975e\u63a8\u5968\u4e92\u63db API \u306e\u63d0\u4f9b\n\nOpenGL \u306f\u7279\u306b\u8fd1\u5e74\u306e\u9032\u5316\u306e\u904e\u7a0b\u3067\u591a\u304f\u306e API \u306e\u4ed5\u69d8\u5909\u66f4\u3001\u305d\u3057\u3066\u975e\u63a8\u5968\u3084\u5ec3\u6b62\u3092\u4f34\u3044\u307e\u3057\u305f\u3002\u7279\u306b\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u7cfb\u306e API \u306f\u6d88\u3048\u53bb\u308b\u904b\u547d\u306b\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070 glPushMatrix \u3068 glPopMatrix \u3001\u305d\u308c\u304b\u3089\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2T/L \u6642\u4ee3\u306e\u540d\u6b8b\u308a\u306e\u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\u3001 glBegin \u3068 glEnd \u306a\u3069\u306a\u3069\u3002\n\n\u5dfb\u304d\u8fbc\u307e\u308c\u308b\u5f62\u3067\u4e00\u822c\u306b\u6709\u7528\u3067\u3001 Direct3D \u3067\u3082\u5f53\u7136 D3DX \u306b\u5165\u3063\u3066\u3044\u308b\u3088\u3046\u306a\u6a5f\u80fd\u3082\u6d88\u3048\u307e\u3059\u3002\u305d\u3053\u3067\u3001 glm \u3067\u306f\u305d\u308c\u3089\u53e4\u3044 OpenGL \u304c\u63d0\u4f9b\u3057\u3066\u3044\u305f\u6709\u7528\u306a API \u306e\u4e00\u90e8\u3092 glm \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e `vec` \u3084 `mat` \u3092\u4f7f\u3046\u3053\u3068\u3067\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3089\u306f Computer Graphics \u7528\u9014\u3067\u3057\u304b\u4f7f\u3046\u6a5f\u4f1a\u304c\u7121\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u305d\u306e\u7528\u9014\u3067\u306f\u6709\u7528\u3068\u3044\u3046\u304b\u3001\u304a\u3088\u305d\u5fc5\u9808\u3067\u3059\u3002\n\n- \u5c04\u5f71\u5909\u63db\u95a2\u9023 \uff08`glm/gtc/matrix_transform.hpp`\uff09\n   - `glRotate` => `glm::rotate()` // \u56de\u8ee2\n   - `glScale` => `glm::scale()` // \u62e1\u5927\u7e2e\u5c0f\n   - `glTranslate` => `glm::translate()` // \u5e73\u884c\u79fb\u52d5\n   - `glFrustum` => `glm::frustum` // \u900f\u8996\u6295\u5f71\n   - `glOrtho` => `glm::ortho` // \u6b63\u5c04\u5f71\n- \u4ed6\u306e\u884c\u5217\u95a2\u9023\u306e\u6a5f\u80fd\n   - `glLoadIdentity` => `glm::mat4()` // \u5358\u4f4d\u884c\u5217\n   - `glMultMatrix` => `glm::mat4::operator*()` // \u7a4d\n   - `glLoadTransposeMatrix` => `glm::transpose()` // \u8ee2\u7f6e\n\n\u52a0\u3048\u3066\u3001 GLU \u306e\u6a5f\u80fd\u3082 glm \u306e `vec` \u3068 `mat` \u3067\u6271\u3048\u308b\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n- \u5c04\u5f71\u5909\u63db\u95a2\u9023 \uff08`glm/gtc/matrix_transform.hpp`\uff09\n    - `gluLookAt` => `glm::lookAt()` // \u30d3\u30e5\u30fc\u5909\u63db\n    - `gluOrtho2D` => `glm::ortho()` // \u6b63\u5c04\u5f71\n    - `gluPerspective` => `glm::perspective()` // \u900f\u8996\u6295\u5f71\n    - `gluPickMatrix` => `glm::pickMatrix()` // \u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u304b\u3089\u306e\u30d4\u30c3\u30ad\u30f3\u30b0\n    - `gluProject` => `glm::project()` // \u30ef\u30fc\u30eb\u30c9\u5ea7\u6a19\u304b\u3089\u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u3092\u53d6\u5f97\n    - `gluUnProject` => `glm::unProject()` // \u30b9\u30af\u30ea\u30fc\u30f3\u5ea7\u6a19\u304b\u3089\u30ef\u30fc\u30eb\u30c9\u5ea7\u6a19\u3092\u53d6\u5f97\n\n### \u7ffb\u8a33\u6642\u9593\u3078\u306e\u914d\u616e\n\nglm \u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u305d\u308c\u306a\u308a\u306b\u4f7f\u3063\u3066\u3044\u308b\u4e8b\u3082\u3042\u308a\u3001\u7ffb\u8a33\u306b\u306f\u5c11\u3057\u3060\u3051\u6642\u9593\u304c\u639b\u304b\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002Boost\u306b\u6bd4\u3079\u308b\u3068\u3069\u3046\u3068\u3044\u3046\u4e8b\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u6c17\u306b\u306a\u308b\u5834\u5408\u306b\u306f\u524d\u65b9\u5ba3\u8a00\u3068\u5b9a\u7fa9\u672c\u4f53\u306e\u5206\u96e2\u6a5f\u69cb\u3092 glm-0.9.5 \u304b\u3089\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```cpp\n// \u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u524d\u65b9\u5ba3\u8a00\u306e\u307f\u6271\u3046\n#include <glm/fwd.hpp>\n```\n\n```cpp\n// \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3067\u306f\u5b9a\u7fa9\u672c\u4f53\u3092\u6271\u3046\n#include <glm/glm.hpp>\n```\n\u5c11\u3005\u7ffb\u8a33\u901f\u5ea6\u3092\u6539\u5584\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n### \u307b\u304b\u306b\u306f\uff1f\n\n\u3068\u308a\u3042\u3048\u305a\u3001 glm \u306e\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u898b\u307e\u3057\u3087\u3046\u3002\u3053\u308c\u3067\u3082 1/3 \u4ee5\u4e0a\u306f\u8aac\u660e\u3092\u3059\u3063\u98db\u3070\u3057\u305f\u308a\u3001gtc/gtx\u306b\u3064\u3044\u3066\u306f\u57fa\u790e\u7684\u3067\u5206\u304b\u308a\u3084\u3059\u3044\u6240\u3084\u6709\u7528\u306a\u3082\u306e\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\n[\u30de\u30cb\u30e5\u30a2\u30eb](http://glm.g-truc.net/glm.pdf)\u306b\u3082\u307b\u3093\u306e\u308a\u6982\u8981\u7a0b\u5ea6\u3068\u3001\u305d\u308c\u304b\u3089 gtx \u306e\u4e8b\u306f\u307b\u3068\u3093\u3069\u66f8\u304b\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001 [Doxygen](http://glm.g-truc.net/api/index.html) \u3068\u3042\u3068\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u76f4\u63a5\u8aad\u3093\u3067\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\u3068\u3082\u3042\u308c\u3001\u305d\u3053\u307e\u3067\u5168\u3066\u4f7f\u3044\u304d\u308d\u3046\u3068\u3057\u306a\u304f\u3066\u3082\u3001 glm \u306f\u3068\u3066\u3082\u6709\u7528\u306a\u6bd4\u8f03\u7684\u306b\u4f4e\u6b21\u306e vec \u3001 mat \u306e\u5b9f\u884c\u6642\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3001\u30dd\u30ea\u30b7\u30fc\u3082\u3057\u3063\u304b\u308a\u3068\u3057\u3066\u5b89\u5fc3\u3067\u304d\u308b\u3082\u306e\u306b\u80b2\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u7d39\u4ecb\u8a18\u4e8b\u304c\u3069\u3053\u304b\u306e\u8da3\u5473\u3067\u30b2\u30fc\u30e0\u3092\u4f5c\u308a\u305f\u3044\u4eba\u3084\u3001\u6216\u3044\u306f\u3069\u3053\u304b\u306e\u7814\u7a76\u5ba4\u306e\u5b66\u751f\u3055\u3093\u306e\u521d\u52d5\u306e\u52a9\u3051\u306a\u3069\u306b\u3067\u3082\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n## \u8cea\u554f\u304c\u3042\u308c\u3070\n\n\u8457\u8005\u306f\u3075\u3060\u3093Qiita\u3092\u3042\u307e\u308a\u826f\u304f\u4f7f\u3063\u3066\u306f\u3044\u307e\u305b\u3093\u3057\u3001\u9802\u3044\u305f\u3054\u8cea\u554f\u306b\u7684\u78ba\u306a\u7b54\u3048\u3092\u7d20\u65e9\u304f\u5bfe\u5fdc\u3067\u304d\u308b\u3068\u3082\u9650\u308a\u307e\u305b\u3093\uff08\u6050\u3089\u304f\uff09\u3002\u3082\u3057\u3001\u3053\u306e\u8a18\u4e8b\u306e\u30a8\u30e9\u30c3\u30bf\u306e\u3054\u6307\u6458\u3067\u306f\u7121\u304f\u3001\u6bd4\u8f03\u7684\u306b\u7d14\u7c8b\u306b glm \u3084 C++ \u3084 Computer Graphics \u3042\u308b\u3044\u306f\u4f55\u304b\u3089\u306e\u95a2\u9023\u3057\u305f\u4e8b\u67c4\u306b\u3064\u3044\u3066\u7591\u554f\u304c\u6e67\u304d\u81ea\u5206\u3067\u306f\u7c21\u5358\u306b\u306f\u89e3\u6c7a\u306e\u7cf8\u53e3\u3082\u898b\u3064\u3051\u3089\u308c\u306a\u3044\u3088\u3046\u306a\u3089\u3001\u662f\u975e [StackExchange](http://stackexchange.com/) \u30c7\u30d3\u30e5\u30fc\u3059\u308b\u304d\u3063\u304b\u3051\u306b\u3059\u308b\u3068\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u6700\u8fd1\u306f\u65e5\u672c\u8a9e\u7248\u306e [StackOverflow(JA)](http://ja.stackoverflow.com/) \u3082\u30aa\u30fc\u30d7\u30f3\u30d9\u30fc\u30bf\u3068\u3057\u3066\u30b5\u30fc\u30d3\u30b9\u304c\u59cb\u307e\u308a\u307e\u3057\u305f\u3057\u3001\u82f1\u8a9e\u304c\u82e6\u624b\u3067\u3082\u81c6\u3059\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u3068\u306f\u8a00\u3048\u3001\u5c11\u306a\u304f\u3068\u3082\u73fe\u72b6\u3067\u306f\u3001\u3067\u304d\u308c\u3070\u82f1\u8a9e\u7248\u306e\u3044\u308f\u3086\u308b\u672c\u5bb6\u3068\u8a00\u308f\u308c\u308b StackExchange \u7cfb\u306e [StackOverflow(EN)](http://stackoverflow.com/) \u3084 [GameDevelopment(EN)](http://gamedev.stackexchange.com/) \u3092\u983c\u308b\u3068\u3001\u8cea\u554f\u306e\u7b54\u3048\u3084\u30d2\u30f3\u30c8\u304c\u65e2\u306b\u305f\u304f\u3055\u3093\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u305d\u308c\u3067\u3082\u3057\u3082\u82f1\u8a9e\u304c\u308f\u304b\u3089\u305a\u306b\u7b54\u3048\u306e\u610f\u5473\u3092\u63b4\u307f\u304d\u308c\u306a\u3044\u4e8b\u304c\u3042\u308c\u3070\u3001\u65e5\u672c\u8a9e\u7248\u3067\u305d\u306eQA\u306e\u65e5\u672c\u8a9e\u3067\u306e\u7d39\u4ecb\u3092\u4f9d\u983c\u3059\u308b\u306e\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3002\u96c6\u56e3\u7684\u77e5\u6027\uff08[Collective wisdom](http://en.wikipedia.org/wiki/Collective_wisdom)\uff09\u306f\u3042\u306a\u305f\u306e\u5473\u65b9\u3067\u3001\u79c1\u3082\u307e\u305f\u304a\u305d\u3089\u304f\u305d\u306e\u5473\u65b9\u306e\u4e00\u4eba\u3068\u306a\u308b\u3053\u3068\u3082\u3042\u308b\u3067\u3057\u3087\u3046\u3002\u305d\u3057\u3066\u3042\u306a\u305f\u306e\u8cea\u554f\u3082\u307e\u305f\u3001\u5f8c\u306e\u8ab0\u304b\u306e\u7591\u554f\u3078\u306e\u7b54\u3048\u3068\u306a\u308b\u4e8b\u3067\u3057\u3087\u3046\u3002\n\n\uff08\u203b\u8a33: \u3059\u305f\u3063\u304f\u304a\u30fc\u3070\u30fc\u3075\u308d\u30fc\u4fbf\u5229\u3060\u306a\uff09\n\n## \u3042\u3068\u304c\u304d\n\n\u4eca\u5e74\u306f\u3061\u3087\u3063\u3068\u3057\u305fMMORPG\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u6700\u8fd1\u306eC++\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u4e8b\u60c5\u3067\u69cb\u7bc9\u3059\u308b\u4e8b\u4f8b\u3092\u7d39\u4ecb\u3057\u3088\u3046\u304b\u3068\u4f01\u3093\u3067\u3044\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u307b\u3069\u6642\u9593\u7684\u306a\u4f59\u88d5\u3082\u53d6\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u306e\u3067 glm \u306e\u7d39\u4ecb\u8a18\u4e8b\u3068\u3057\u307e\u3057\u305f\u3002\n\nglm \u306fOpenGL\u30673DCG\u3092\u6271\u3046\u969b\u306b\u306f\u5fc5\u9808\u3068\u8a00\u3048\u308b\u512a\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e1\u3064\u3067\u3059\u304c\u3001\u7279\u306b3DCG\u3068\u3044\u3046\u7528\u9014\u306b\u9650\u3089\u305a\u3068\u3082\u5b9f\u88c5\u3001\u6027\u80fd\u3082\u826f\u304f\u3001\u4fbf\u5229\u306b\u6c4e\u7528\u7684\u306b\u6271\u3048\u308b\u30b7\u30fc\u30f3\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u7d39\u4ecb\u304c\u3001\u5e83\u304f\u8ab0\u304b\u3057\u3089\u306e\u52a9\u3051\u3068\u306a\u308b\u4e8b\u304c\u3042\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n### \u3053\u306e\u8a18\u4e8b\u3092\u3054\u89a7\u9802\u3044\u305f\u65b9\u306f\u3053\u3093\u306a\u6b32\u3057\u3044\u3082\u306e\u30ea\u30b9\u30c8\u3082\u898b\u3066\u304f\u3060\u3055\u3063\u3066\u3044\u307e\u3059\uff08\u305f\u3076\u3093\uff09\n\n- [\u3069\u3055\u3093\u3053\u514e\u306b\u306a\u308a\u307e\u3057\u305f(*\uff89\u03c9\u30fb*)\uff83\uff8d](http://www.amazon.co.jp/registry/wishlist/2ZTSIH6FEUAV0)\n"}