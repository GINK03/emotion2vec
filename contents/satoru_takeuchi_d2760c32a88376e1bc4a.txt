{"context": "\n\n\u306f\u3058\u3081\u306b\n\u672c\u8a18\u4e8b\u306f\u7b2c\u4e8c\u56de\u306e\u7d9a\u304d\u3067\u3059\u3002\u524d\u56de\u307e\u3067\u306e\u8a18\u4e8b\u3092\u65e2\u306b\u898b\u3066\u3044\u308b\u3053\u3068\u304c\u524d\u63d0\u3067\u3059\u3002\n\u4eca\u56de\u306f\u3001\u4eca\u5f8c\u51dd\u3063\u305f\u30ab\u30fc\u30cd\u30eb\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u308b\u306b\u3042\u305f\u3063\u3066\u5fc5\u8981\u306b\u306a\u3063\u3066\u304f\u308b\u3001\u30c7\u30d0\u30c3\u30b0\u306b\u6709\u7528\u306adebugfs\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002debugfs\u306f\u30ab\u30fc\u30cd\u30eb\u3068\u30e6\u30fc\u30b6\u3068\u306e\u9593\u3067\u7c21\u5358\u306b\u60c5\u5831\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u305f\u3081\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002linux\u306b\u306fprocfs, sysfs\u3068\u3044\u3046\u3001\u3053\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u304c\u3067\u304d\u308b\u4ed6\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3082\u3042\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u524d\u8005\u306f\u539f\u5247\u3068\u3057\u3066\u30d7\u30ed\u30bb\u30b9\u306b\u95a2\u9023\u3059\u308b\u60c5\u5831\u3060\u3051\u3092\u6271\u3046\u3068\u3044\u3046\u30eb\u30fc\u30eb\u304c\u3042\u308b\u3053\u30681\u3001\u304a\u3088\u3073\u3001\u5f8c\u8005\u306f\u6271\u3044\u304b\u305f\u304c\u5c11\u3005\u96e3\u3057\u3044\u4e0a\u306b1\u30d5\u30a1\u30a4\u30eb\u306b\u3064\u304d1\u3064\u306e\u5024\u3057\u304b\u3084\u308a\u3068\u308a\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u5236\u9650\u304c\u3042\u308b\u3053\u3068\u3088\u308a\u3001\u304a\u3044\u305d\u308c\u3068\u4f7f\u3048\u307e\u305b\u3093\u3002\ndebugfs\u306f\u901a\u5e38/sys/kernel/debug\u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u30de\u30a6\u30f3\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u66f8\u304d\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30ab\u30fc\u30cd\u30eb\u306e\u60c5\u5831\u3092\u30e6\u30fc\u30b6\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u53c2\u7167\u3057\u305f\u308a\u3001\u30e6\u30fc\u30b6\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u30ab\u30fc\u30cd\u30eb\u306b\u60c5\u5831\u3092\u6e21\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u307e\u3067\u306b\u4f7f\u3063\u3066\u304d\u305fprintk()\u3068\u306f\u3001\n\n\u30e6\u30fc\u30b6\u306e\u671b\u3080\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u60c5\u5831\u3092\u3084\u308a\u3068\u308a\u3067\u304d\u308b\n\u30ab\u30fc\u30cd\u30eb\u304b\u3089\u60c5\u5831\u3092\u53d7\u53d6\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u30e6\u30fc\u30b6\u304b\u3089\u60c5\u5831\u3092\u6e21\u305b\u308b\n\n\u3068\u3044\u3046\u9055\u3044\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u524d\u56de\u4f5c\u6210\u3057\u305f\u30bf\u30a4\u30de\u30fc\u51e6\u7406\u3092\u62e1\u5f35\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30d7\u30ed\u30bb\u30b9\u304b\u3089\n\n\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092\u53c2\u7167\u3059\u308b\n\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092\u5909\u66f4\u3059\u308b\n\n\u3068\u3044\u3046\u3053\u3068\u3092\u3084\u308a\u307e\u3059\u3002\n\n\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092\u5909\u66f4\u3059\u308b\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u30ed\u30fc\u30c9\u306e1000\u79d2\u5f8c\u306b1000\u79d2\u7d4c\u904e\u3057\u305f\u3053\u3068\u3092\u793a\u3059\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\n/sys/kernel/debug/mytimer_remain_msecs\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u51fa\u3057\u306b\u3088\u3063\u3066\u3001\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593(\u30df\u30ea\u79d2\u5358\u4f4d)\u3092\u8868\u793a\u3059\u308b\n\u30bf\u30a4\u30de\u30fc\u52d5\u4f5c\u5f8c\u306b\u5f53\u8a72\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u51fa\u3059\u30680\u3092\u8868\u793a\u3059\u308b\n\n\u30bd\u30fc\u30b9\u3092\u793a\u3057\u307e\u3059\u3002\n\ndebugfs1.c\n#include <linux/module.h>\n#include <linux/debugfs.h>\n\nMODULE_LICENSE(\"GPL v2\");\nMODULE_AUTHOR(\"Satoru Takeuchi <satoru.takeuchi@gmail.com>\");\nMODULE_DESCRIPTION(\"A simple example of debugfs\");\n\nstatic struct dentry *testfile;\nstatic char testbuf[128];\n\nstruct timer_list mytimer;\n\n#define MYTIMER_TIMEOUT_SECS    ((unsigned long)1000)\n\nstatic void mytimer_fn(unsigned long arg)\n{\n        printk(KERN_ALERT \"%lu secs passed.\\n\", MYTIMER_TIMEOUT_SECS);\n}\n\nstatic ssize_t mytimer_remain_msecs_read(struct file *f, char __user *buf, size_t len, loff_t *ppos)\n{\n        unsigned long diff_msecs, now = jiffies;\n\n        if (time_after(mytimer.expires, now))\n                diff_msecs = (mytimer.expires - now) * 1000 / HZ;\n        else\n                diff_msecs = 0;\n\n        snprintf(testbuf, sizeof(testbuf), \"%lu\\n\", diff_msecs);\n        return simple_read_from_buffer(buf, len, ppos, testbuf, strlen(testbuf));\n}\n\nstatic struct file_operations test_fops = {\n        .owner = THIS_MODULE,\n        .read = mytimer_remain_msecs_read,\n};\n\nstatic int mymodule_init(void)\n{\n        init_timer(&mytimer);\n        mytimer.expires = jiffies + MYTIMER_TIMEOUT_SECS*HZ;\n        mytimer.data = 0;\n        mytimer.function = mytimer_fn;\n        add_timer(&mytimer);\n\n        testfile = debugfs_create_file(\"mytimer_remain_msecs\", 0400, NULL, NULL, &test_fops);\n        if (!testfile)\n                return -ENOMEM;\n\n        return 0;\n}\n\nstatic void mymodule_exit(void)\n{\n        debugfs_remove(testfile);\n        del_timer(&mytimer);\n}\n\nmodule_init(mymodule_init);\nmodule_exit(mymodule_exit);\n\n\n\u6ce8\u76ee\u3059\u3079\u304d\u70b9\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\nmytimer_remain_msecs_read()\u306b\u3088\u3063\u3066\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092\u8aad\u307f\u51fa\u3059\ntime_after(a,b)\u306f\u3001\u6642\u523ba\u304c\u6642\u523bb\u3088\u308a\u5148\u3067\u3042\u308c\u30701\u3092\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u30700\u3092\u8fd4\u3059\u3002\u3053\u3053\u3067\u306e\u6642\u523b\u306funsigned long\u578b\u306a\u306e\u3067\u3001\u5358\u7d14\u306b\"a - b > 0\"\u3068\u3044\u3046\u6bd4\u8f03\u3092\u3057\u3066\u3082\u5e38\u306b1\u3092\u8fd4\u3057\u3066\u3057\u307e\u3046\nsimple_read_from_buffer()\u306b\u3088\u3063\u3066\u3001testbuf\u306e\u5185\u5bb9\u3092\u30e6\u30fc\u30b6\u7a7a\u9593\u306e\u30d0\u30c3\u30d5\u30a1\u3067\u3042\u308bbuf\u306b\u6e21\u3057\u3066\u3044\u308b2\n\ntest_fops.read\u304c\u3001/sys/kernel/debug/mytimer_remain_msecs\u8aad\u307f\u51fa\u3057\u6642\u306b\u547c\u3070\u308c\u308b\u30cf\u30f3\u30c9\u30e9\ndebugfs_create_file()\u306b\u3088\u3063\u3066/sys/kernel/debug/mytimer_remain_msecs\u3092\u4f5c\u6210\u3059\u308b(\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306f0400)\ndebugfs_remove()\u306b\u3088\u3063\u3066/sys/kernel/debug/mytimer_remain_msecs\u3092\u524a\u9664\u3059\u308b\n\nVM\u4e0a\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u30ed\u30fc\u30c9\u524d\u5f8c\u306b/sys/kernel/debug\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30b9\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n# ls /sys/kernel/debug\nacpi  cleancache  dma_buf  dynamic_debug  fault_around_bytes  gpio     kprobes  pinctrl  pwm  regmap     sched_features  split_huge_pages  suspend_stats  usb           wakeup_sources  zswap\nbdi   clk         dri      extfrag        frontswap           iosf_sb  mce      pm_qos   ras  regulator  sleep_time      sunrpc            tracing        virtio-ports  x86\n# insmod /vagrant/debugfs1.ko \n# ls /sys/kernel/debug\nacpi  cleancache  dma_buf  dynamic_debug  fault_around_bytes  gpio     kprobes  mytimer_remain_msecs  pm_qos  ras     regulator       sleep_time        sunrpc         tracing  virtio-ports    x86\nbdi   clk         dri      extfrag        frontswap           iosf_sb  mce      pinctrl               pwm     regmap  sched_features  split_huge_pages  suspend_stats  usb      wakeup_sources  zswap\n# \n\n\u30ed\u30fc\u30c9\u524d\u306b\u306f\u5b58\u5728\u3057\u306a\u304b\u3063\u305f/sys/kernel/debug/mytimer_remain_msecs\u304c\u30ed\u30fc\u30c9\u5f8c\u306b\u306f\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u3067\u306f\u3001\u5b9a\u671f\u7684\u306b\u3001\u305f\u3068\u3048\u3070\u4e00\u79d2\u3054\u3068\u306b\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n# for ((i=0;i<10;i++)) ; do cat /sys/kernel/debug/mytimer_remain_msecs ; sleep 1; done\n839888\n838888\n837884\n836884\n835884\n834880\n833880\n832880\n831876\n830876\n# \n\n\u4e00\u79d2\u3054\u3068\u306b\u7d04\u4e00\u79d2(1000\u30df\u30ea\u79d2)\u3065\u3064\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u30e2\u30b8\u30e5\u30fc\u30eb\u30a2\u30f3\u30ed\u30fc\u30c9\u6642\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u6d88\u3048\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n# rmmod debugfs1\n# ls /sys/kernel/debug \nacpi  cleancache  dma_buf  dynamic_debug  fault_around_bytes  gpio     kprobes  pinctrl  pwm  regmap     sched_features  split_huge_pages  suspend_stats  usb           wakeup_sources  zswap\nbdi   clk         dri      extfrag        frontswap           iosf_sb  mce      pm_qos   ras  regulator  sleep_time      sunrpc            tracing        virtio-ports  x86\n# \n\n\u6b63\u3057\u304f\u6d88\u3048\u305f\u3088\u3046\u3067\u3059\u3002\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u56fa\u6709\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\n\u3055\u304d\u307b\u3069\u306f\u81ea\u4f5c\u30e2\u30b8\u30e5\u30fc\u30eb\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u3092/sys/kernel/debug\u76f4\u4e0b\u306b\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u5b9f\u306f\u3053\u308c\u306f\u65b0\u898f\u30d5\u30a1\u30a4\u30eb\u3092\u5897\u3084\u3059\u306b\u5f93\u3063\u3066\u4ed6\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u540d\u524d\u304c\u91cd\u306a\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u307e\u308b\u3053\u3068\u3001\u304a\u3088\u3073\u3001\u5f53\u8a72\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u3084\u305f\u3089\u3068\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u6765\u3066\u3057\u307e\u3063\u3066\u898b\u901a\u3057\u304c\u60aa\u304f\u306a\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u3042\u307e\u308a\u8912\u3081\u3089\u308c\u305f\u65b9\u6cd5\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3054\u3068\u306b/sys/kernel/debug\u4ee5\u4e0b\u306b\u5c02\u7528\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u306e\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002\n\u3055\u304d\u307b\u3069\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4e00\u90e8\u5909\u66f4\u3057\u3066\u3001\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092/sys/kernel/debug/mytimer/remain_msecs\u304b\u3089\u5f97\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\ndebugfs2.c\n#include <linux/module.h>\n#include <linux/debugfs.h>\n\nMODULE_LICENSE(\"GPL v2\");\nMODULE_AUTHOR(\"Satoru Takeuchi <satoru.takeuchi@gmail.com>\");\nMODULE_DESCRIPTION(\"A simple example of debugfs\");\n\nstatic struct dentry *topdir;\nstatic struct dentry *testfile;\nstatic char testbuf[128];\n\nstruct timer_list mytimer;\n\n#define MYTIMER_TIMEOUT_SECS    ((unsigned long)1000)\n\nstatic void mytimer_fn(unsigned long arg)\n{\n        printk(KERN_ALERT \"%lu secs passed.\\n\", MYTIMER_TIMEOUT_SECS);\n}\n\nstatic ssize_t mytimer_remain_msecs_read(struct file *f, char __user *buf, size_t len, loff_t *ppos)\n{\n        unsigned long diff_msecs, now = jiffies;\n\n        if (time_after(mytimer.expires, now))\n                diff_msecs = (mytimer.expires - now) * 1000 / HZ;\n        else\n                diff_msecs = 0;\n\n        snprintf(testbuf, sizeof(testbuf), \"%lu\\n\", diff_msecs);\n        return simple_read_from_buffer(buf, len, ppos, testbuf, strlen(testbuf));\n}\n\nstatic struct file_operations test_fops = {\n        .owner = THIS_MODULE,\n        .read = mytimer_remain_msecs_read,\n};\n\nstatic int mymodule_init(void)\n{\n        init_timer(&mytimer);\n        mytimer.expires = jiffies + MYTIMER_TIMEOUT_SECS*HZ;\n        mytimer.data = 0;\n        mytimer.function = mytimer_fn;\n        add_timer(&mytimer);\n\n        topdir = debugfs_create_dir(\"mytimer\", NULL);\n        if (!topdir)\n                return -ENOMEM;\n        testfile = debugfs_create_file(\"remain_msecs\", 0400, topdir, NULL, &test_fops);\n        if (!testfile)\n                return -ENOMEM;\n\n        return 0;\n}\n\nstatic void mymodule_exit(void)\n{\n        debugfs_remove_recursive(topdir);\n        del_timer(&mytimer);\n}\n\nmodule_init(mymodule_init);\nmodule_exit(mymodule_exit);\n\n\n\u3055\u304d\u307b\u3069\u306e\u30bd\u30fc\u30b9\u3068\u306e\u5dee\u5206\u3067\u6ce8\u76ee\u3059\u3079\u304d\u70b9\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\ndebugfs_create_dir()\u306b\u3088\u3063\u3066/sys/kernel/debug\u4ee5\u4e0b\u306bmytimer\u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\ndebugfs_create_file()\u306e\u7b2c3\u5f15\u6570\u306b\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5bfe\u5fdc\u3059\u308bstruct dentry *\u578b\u306e\u30c7\u30fc\u30bf\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u5f53\u8a72\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\u3053\u306e\u5834\u5408\u306f/sys/kernel/debug/mytimer\u4ee5\u4e0b\u306bremain_msecs\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\ndebugfs_remove_recursive()\u306b\u3088\u3063\u3066\u3001\u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u518d\u5e30\u7684\u306b\u524a\u9664\u3059\u308b\n\n\u3055\u304d\u307b\u3069\u3068\u540c\u69d8\u3001\u30ed\u30fc\u30c9\u5f8c\u306b\u6240\u5b9a\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n# insmod /vagrant/debugfs2.ko \n# ls /sys/kernel/debug \nacpi  cleancache  dma_buf  dynamic_debug  fault_around_bytes  gpio     kprobes  mytimer  pm_qos  ras     regulator       sleep_time        sunrpc         tracing  virtio-ports    x86\nbdi   clk         dri      extfrag        frontswap           iosf_sb  mce      pinctrl  pwm     regmap  sched_features  split_huge_pages  suspend_stats  usb      wakeup_sources  zswap\n# ls /sys/kernel/debug/mytimer \nremain_msecs\n# \n\n\u3046\u307e\u304f\u3044\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u307e\u305f\u4e00\u79d2\u3054\u3068\u306b\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n# for ((i=0;i<10;i++)) ; do cat /sys/kernel/debug/mytimer/remain_msecs ; sleep 1; done\n639008\n638004\n637004\n636004\n635000\n634000\n633000\n632000\n630996\n629996\n# \n\n\u6210\u529f\u3067\u3059\u3002\n\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a2\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u4f5c\u6210\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u6d88\u3048\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n# rmmod debugfs2 \n# ls /sys/kernel/debug\nacpi  cleancache  dma_buf  dynamic_debug  fault_around_bytes  gpio     kprobes  pinctrl  pwm  regmap     sched_features  split_huge_pages  suspend_stats  usb           wakeup_sources  zswap\nbdi   clk         dri      extfrag        frontswap           iosf_sb  mce      pm_qos   ras  regulator  sleep_time      sunrpc            tracing        virtio-ports  x86\n# \n\n\u3053\u308c\u3082\u6210\u529f\u3067\u3059\u3002\n\n\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092\u5909\u66f4\u3059\u308b\n\u3053\u308c\u307e\u3067\u306fdebugfs\u3092\u8aad\u307f\u53d6\u308a\u3060\u3051\u306b\u4f7f\u3063\u3066\u304d\u307e\u3057\u305f\u304c\u3001\u4eca\u5ea6\u306f\u66f8\u304d\u8fbc\u307f\u3082\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092/sys/kernel/debug/mytimer/remain_msecs\u306b\u66f8\u304d\u8fbc\u3093\u3060\u5024\u306b\u8a2d\u5b9a\u3057\u76f4\u3057\u307e\u3059\u3002\u30bd\u30fc\u30b9\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\ndebugfs3.c\n#include <linux/module.h>\n#include <linux/debugfs.h>\n\nMODULE_LICENSE(\"GPL v2\");\nMODULE_AUTHOR(\"Satoru Takeuchi <satoru.takeuchi@gmail.com>\");\nMODULE_DESCRIPTION(\"A simple example of debugfs\");\n\nstatic struct dentry *topdir;\nstatic struct dentry *testfile;\nstatic char testbuf[128];\n\nstruct timer_list mytimer;\n\nstatic unsigned long mytimer_timeout_msecs = 1000 * 1000;\n\nstatic void mytimer_fn(unsigned long arg)\n{\n        printk(KERN_ALERT \"%lu secs passed.\\n\", mytimer_timeout_msecs / 1000);\n}\n\nstatic ssize_t mytimer_remain_msecs_read(struct file *f, char __user *buf, size_t len, loff_t *ppos)\n{\n        unsigned long diff_msecs, now = jiffies;\n\n        if (time_after(mytimer.expires, now))\n                diff_msecs = (mytimer.expires - now) * 1000 / HZ;\n        else\n                diff_msecs = 0;\n\n        snprintf(testbuf, sizeof(testbuf), \"%lu\\n\", diff_msecs);\n        return simple_read_from_buffer(buf, len, ppos, testbuf, strlen(testbuf));\n}\n\nstatic ssize_t mytimer_remain_msecs_write(struct file *f, const char __user *buf, size_t len, loff_t *ppos)\n{\n        ssize_t ret;\n\n        ret = simple_write_to_buffer(testbuf, sizeof(testbuf), ppos, buf, len);\n        if (ret < 0)\n                return ret;\n        sscanf(testbuf, \"%20lu\", &mytimer_timeout_msecs);\n        mod_timer(&mytimer, jiffies + mytimer_timeout_msecs * HZ / 1000);\n        return ret;\n}\n\nstatic struct file_operations test_fops = {\n        .owner = THIS_MODULE,\n        .read = mytimer_remain_msecs_read,\n        .write = mytimer_remain_msecs_write,\n};\n\nstatic int mymodule_init(void)\n{\n        init_timer(&mytimer);\n        mytimer.expires = jiffies + mytimer_timeout_msecs * HZ / 1000; \n        mytimer.data = 0;\n        mytimer.function = mytimer_fn;\n        add_timer(&mytimer);\n\n        topdir = debugfs_create_dir(\"mytimer\", NULL);\n        if (!topdir)\n                return -ENOMEM;\n        testfile = debugfs_create_file(\"remain_msecs\", 0600, topdir, NULL, &test_fops);\n        if (!testfile)\n                return -ENOMEM;\n\n        return 0;\n}\n\nstatic void mymodule_exit(void)\n{\n        debugfs_remove_recursive(topdir);\n        del_timer(&mytimer);\n}\n\nmodule_init(mymodule_init);\nmodule_exit(mymodule_exit);\n\n\n\u6b21\u306e\u70b9\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nmytimer_timeout_msecs\u304c\u30bf\u30a4\u30de\u30fc\u306e\u5f85\u3061\u6642\u9593\u3092\u793a\u3059(\u30df\u30ea\u79d2\u5358\u4f4d)\nmytimer_remain_msecs_write()\u306b\u3088\u3063\u3066\u3001\u30e6\u30fc\u30b6\u7a7a\u9593\u306e\u30d0\u30c3\u30d5\u30a1\u3067\u3042\u308bbuf\u304b\u3089\u3001\u30ab\u30fc\u30cd\u30eb\u7a7a\u9593\u306e\u30d0\u30c3\u30d5\u30a1testbuf\u306b\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u8fbc\u3080\n\u4e0a\u8a18\u3067\u66f8\u304d\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u3092\u3082\u3068\u306b\u30bf\u30a4\u30de\u30fc\u306e\u5f85\u3061\u6642\u9593\u3092\u518d\u8a2d\u5b9a\n\n\u6392\u4ed6\u5236\u5fa1\u3068\u3044\u3046\u89b3\u70b9\u304b\u3089\u306f\u672c\u5f53\u306f\u3053\u306e\u30b3\u30fc\u30c9\u306f\u5c11\u3057\u307e\u305a\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u6c17\u306b\u3057\u306a\u3044\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u6392\u4ed6\u5236\u5fa1\u306b\u3064\u3044\u3066\u306f\u5f8c\u306e\u56de\u3067\u6271\u3046\u4e88\u5b9a\u3067\u3059\u3002\n\u3067\u306f\u52d5\u4f5c\u78ba\u8a8d\u3067\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306e\u78ba\u8a8d\u306f\u7701\u7565\u3057\u3066\u3001\u5b9a\u671f\u7684\u306b\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u304c\u6e1b\u5c11\u3057\u3066\u3044\u308b\u304b\u3092\u898b\u307e\u3059\u3002\n# for ((i=0;i<10;i++)) ; do cat /sys/kernel/debug/mytimer/remain_msecs ; sleep 1 ; done\n975616\n974616\n973616\n972612\n971612\n970612\n969612\n968608\n967608\n966608\n# \n\n\u3053\u3053\u307e\u3067\u306fOK\u3002\u3067\u306f\u3001\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u309210\u79d2\u306b\u5909\u66f4\u3057\u305f\u4e0a\u3067\u3001\u307e\u305f\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u306e\u69d8\u5b50\u3092\u773a\u3081\u307e\u3057\u3087\u3046\u3002\n# echo 10000 > /sys/kernel/debug/mytimer/remain_msecs \n# for ((i=0;i<10;i++)) ; do cat /sys/kernel/debug/mytimer/remain_msecs ; sleep 1 ; done\n7832\n6828\n5828\n4828\n3828\n2824\n1824\n824\n0\n0\n# \n\n\u3046\u307e\u304f\u3044\u3063\u305f\u3088\u3046\u3067\u3059\u300210\u79d2\u7d4c\u904e\u3057\u305f\u3053\u3068\u3092\u793a\u3059\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u529b\u3055\u308c\u305f\u304b\u3082\u78ba\u8a8d\u3057\u307e\u3059\u3002\n# dmesg | tail -1\n[39528.736116] 10 secs passed.\n# \n\nOK\u3067\u3059\u3002\u6700\u5f8c\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a2\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\u5b9f\u884c\u4f8b\u306e\u8868\u793a\u306f\u7701\u7565\u3057\u307e\u3059\u3002\n\u3053\u3053\u307e\u3067\u3067\u4eca\u56de\u306f\u304a\u3057\u307e\u3044\u3067\u3059\u3002\n\n\u6f14\u7fd2\u554f\u984c\n\n\u30bf\u30a4\u30de\u30fc\u30922\u3064\u4f5c\u6210\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u6b8b\u308a\u6642\u9593\u3092/sys/kernel/debug/mytimer/{1,2}/remain_msecs\u306b\u3088\u3063\u3066\u8aad\u307f\u66f8\u304d\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\n\n\u304a\u308f\u308a\u306b\n\u4eca\u56de\u4f7f\u3063\u305f\u30bd\u30fc\u30b9\u306fexample/module/debugfs\u4ee5\u4e0b\u306b\u7f6e\u3044\u3066\u3044\u307e\u3059\u3002\u6b21\u56de\u306f\u30ab\u30fc\u30cd\u30eb\u5185\u306e\u4ee3\u8868\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3042\u308b\u30ea\u30b9\u30c8\u306b\u3064\u3044\u3066\u8ff0\u3079\u307e\u3059\u3002\n\n\u53c2\u8003\u8cc7\u6599\n\n\u30ab\u30fc\u30cd\u30eb\u30bd\u30fc\u30b9\u306einclude/linux/debugfs.h: debugfs_create_*\u306b\u3088\u3063\u3066\u69d8\u3005\u306a\u578b\u306e\u5358\u4e00\u306e\u30c7\u30fc\u30bf\u3092\u6271\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u308b\n\u30ab\u30fc\u30cd\u30eb\u30bd\u30fc\u30b9\u306eDocumentation/filesystems/debugfs.txt: debugfs\u306e\u767b\u5834\u80cc\u666f\u3001\u7528\u9014\u3001\u304a\u3088\u3073\u4f7f\u3044\u65b9\u306a\u3069\u306b\u3064\u3044\u3066\u8ff0\u3079\u3089\u308c\u3066\u3044\u308b\n\n\n\n\n\n\u6b74\u53f2\u7684\u306a\u4e8b\u60c5\u306b\u3088\u308a\u30d7\u30ed\u30bb\u30b9\u306b\u95a2\u4fc2\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u3082\u4e00\u90e8\u5b58\u5728\u3057\u307e\u3059\u00a0\u21a9\n\n\n\u5358\u7d14\u306bmemcpy()\u306b\u3088\u3063\u3066\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3057\u307e\u3046\u3068\u3001buf\u306e\u4e00\u90e8\u304c\u7269\u7406\u30e1\u30e2\u30ea\u4e0a\u306b\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u554f\u984c\u3068\u306a\u308b\u3002\u3053\u308c\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u306f\u5f8c\u306e\u56de\u3067\u8ff0\u3079\u308b\u4e88\u5b9a\u00a0\u21a9\n\n\n\n# \u306f\u3058\u3081\u306b\n\n\u672c\u8a18\u4e8b\u306f[\u7b2c\u4e8c\u56de](http://qiita.com/satoru_takeuchi/items/254dbd7bcad392263c85)\u306e\u7d9a\u304d\u3067\u3059\u3002\u524d\u56de\u307e\u3067\u306e\u8a18\u4e8b\u3092\u65e2\u306b\u898b\u3066\u3044\u308b\u3053\u3068\u304c\u524d\u63d0\u3067\u3059\u3002\n\n\u4eca\u56de\u306f\u3001\u4eca\u5f8c\u51dd\u3063\u305f\u30ab\u30fc\u30cd\u30eb\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u308b\u306b\u3042\u305f\u3063\u3066\u5fc5\u8981\u306b\u306a\u3063\u3066\u304f\u308b\u3001\u30c7\u30d0\u30c3\u30b0\u306b\u6709\u7528\u306adebugfs\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002debugfs\u306f\u30ab\u30fc\u30cd\u30eb\u3068\u30e6\u30fc\u30b6\u3068\u306e\u9593\u3067\u7c21\u5358\u306b\u60c5\u5831\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u305f\u3081\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002linux\u306b\u306fprocfs, sysfs\u3068\u3044\u3046\u3001\u3053\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u304c\u3067\u304d\u308b\u4ed6\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3082\u3042\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u524d\u8005\u306f\u539f\u5247\u3068\u3057\u3066\u30d7\u30ed\u30bb\u30b9\u306b\u95a2\u9023\u3059\u308b\u60c5\u5831\u3060\u3051\u3092\u6271\u3046\u3068\u3044\u3046\u30eb\u30fc\u30eb\u304c\u3042\u308b\u3053\u3068[^procfs]\u3001\u304a\u3088\u3073\u3001\u5f8c\u8005\u306f\u6271\u3044\u304b\u305f\u304c\u5c11\u3005\u96e3\u3057\u3044\u4e0a\u306b1\u30d5\u30a1\u30a4\u30eb\u306b\u3064\u304d1\u3064\u306e\u5024\u3057\u304b\u3084\u308a\u3068\u308a\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u5236\u9650\u304c\u3042\u308b\u3053\u3068\u3088\u308a\u3001\u304a\u3044\u305d\u308c\u3068\u4f7f\u3048\u307e\u305b\u3093\u3002\n\n[^procfs]: \u6b74\u53f2\u7684\u306a\u4e8b\u60c5\u306b\u3088\u308a\u30d7\u30ed\u30bb\u30b9\u306b\u95a2\u4fc2\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u3082\u4e00\u90e8\u5b58\u5728\u3057\u307e\u3059\n\ndebugfs\u306f\u901a\u5e38/sys/kernel/debug\u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u30de\u30a6\u30f3\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u66f8\u304d\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30ab\u30fc\u30cd\u30eb\u306e\u60c5\u5831\u3092\u30e6\u30fc\u30b6\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u53c2\u7167\u3057\u305f\u308a\u3001\u30e6\u30fc\u30b6\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u30ab\u30fc\u30cd\u30eb\u306b\u60c5\u5831\u3092\u6e21\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u307e\u3067\u306b\u4f7f\u3063\u3066\u304d\u305fprintk()\u3068\u306f\u3001\n\n- \u30e6\u30fc\u30b6\u306e\u671b\u3080\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u60c5\u5831\u3092\u3084\u308a\u3068\u308a\u3067\u304d\u308b\n- \u30ab\u30fc\u30cd\u30eb\u304b\u3089\u60c5\u5831\u3092\u53d7\u53d6\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u30e6\u30fc\u30b6\u304b\u3089\u60c5\u5831\u3092\u6e21\u305b\u308b\n\n\u3068\u3044\u3046\u9055\u3044\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001\u524d\u56de\u4f5c\u6210\u3057\u305f\u30bf\u30a4\u30de\u30fc\u51e6\u7406\u3092\u62e1\u5f35\u3057\u3066\u3001\u30e6\u30fc\u30b6\u30d7\u30ed\u30bb\u30b9\u304b\u3089\n\n- \u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092\u53c2\u7167\u3059\u308b\n- \u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092\u5909\u66f4\u3059\u308b\n\n\u3068\u3044\u3046\u3053\u3068\u3092\u3084\u308a\u307e\u3059\u3002\n\n# \u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092\u5909\u66f4\u3059\u308b\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n- \u30e2\u30b8\u30e5\u30fc\u30eb\u30ed\u30fc\u30c9\u306e1000\u79d2\u5f8c\u306b1000\u79d2\u7d4c\u904e\u3057\u305f\u3053\u3068\u3092\u793a\u3059\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\n- /sys/kernel/debug/mytimer_remain_msecs\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u51fa\u3057\u306b\u3088\u3063\u3066\u3001\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593(\u30df\u30ea\u79d2\u5358\u4f4d)\u3092\u8868\u793a\u3059\u308b\n- \u30bf\u30a4\u30de\u30fc\u52d5\u4f5c\u5f8c\u306b\u5f53\u8a72\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u51fa\u3059\u30680\u3092\u8868\u793a\u3059\u308b\n\n\u30bd\u30fc\u30b9\u3092\u793a\u3057\u307e\u3059\u3002\n\n```debugfs1.c:\n#include <linux/module.h>\n#include <linux/debugfs.h>\n\nMODULE_LICENSE(\"GPL v2\");\nMODULE_AUTHOR(\"Satoru Takeuchi <satoru.takeuchi@gmail.com>\");\nMODULE_DESCRIPTION(\"A simple example of debugfs\");\n\nstatic struct dentry *testfile;\nstatic char testbuf[128];\n\nstruct timer_list mytimer;\n\n#define MYTIMER_TIMEOUT_SECS    ((unsigned long)1000)\n\nstatic void mytimer_fn(unsigned long arg)\n{\n        printk(KERN_ALERT \"%lu secs passed.\\n\", MYTIMER_TIMEOUT_SECS);\n}\n\nstatic ssize_t mytimer_remain_msecs_read(struct file *f, char __user *buf, size_t len, loff_t *ppos)\n{\n        unsigned long diff_msecs, now = jiffies;\n\n        if (time_after(mytimer.expires, now))\n                diff_msecs = (mytimer.expires - now) * 1000 / HZ;\n        else\n                diff_msecs = 0;\n\n        snprintf(testbuf, sizeof(testbuf), \"%lu\\n\", diff_msecs);\n        return simple_read_from_buffer(buf, len, ppos, testbuf, strlen(testbuf));\n}\n\nstatic struct file_operations test_fops = {\n        .owner = THIS_MODULE,\n        .read = mytimer_remain_msecs_read,\n};\n\nstatic int mymodule_init(void)\n{\n        init_timer(&mytimer);\n        mytimer.expires = jiffies + MYTIMER_TIMEOUT_SECS*HZ;\n        mytimer.data = 0;\n        mytimer.function = mytimer_fn;\n        add_timer(&mytimer);\n\n        testfile = debugfs_create_file(\"mytimer_remain_msecs\", 0400, NULL, NULL, &test_fops);\n        if (!testfile)\n                return -ENOMEM;\n\n        return 0;\n}\n\nstatic void mymodule_exit(void)\n{\n        debugfs_remove(testfile);\n        del_timer(&mytimer);\n}\n\nmodule_init(mymodule_init);\nmodule_exit(mymodule_exit);\n```\n\n\u6ce8\u76ee\u3059\u3079\u304d\u70b9\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\n- mytimer_remain_msecs_read()\u306b\u3088\u3063\u3066\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092\u8aad\u307f\u51fa\u3059\n- time_after(a,b)\u306f\u3001\u6642\u523ba\u304c\u6642\u523bb\u3088\u308a\u5148\u3067\u3042\u308c\u30701\u3092\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u30700\u3092\u8fd4\u3059\u3002\u3053\u3053\u3067\u306e\u6642\u523b\u306funsigned long\u578b\u306a\u306e\u3067\u3001\u5358\u7d14\u306b\"a - b > 0\"\u3068\u3044\u3046\u6bd4\u8f03\u3092\u3057\u3066\u3082\u5e38\u306b1\u3092\u8fd4\u3057\u3066\u3057\u307e\u3046\n- simple_read_from_buffer()\u306b\u3088\u3063\u3066\u3001testbuf\u306e\u5185\u5bb9\u3092\u30e6\u30fc\u30b6\u7a7a\u9593\u306e\u30d0\u30c3\u30d5\u30a1\u3067\u3042\u308bbuf\u306b\u6e21\u3057\u3066\u3044\u308b[^__user]\n- test_fops.read\u304c\u3001/sys/kernel/debug/mytimer_remain_msecs\u8aad\u307f\u51fa\u3057\u6642\u306b\u547c\u3070\u308c\u308b\u30cf\u30f3\u30c9\u30e9\n- debugfs_create_file()\u306b\u3088\u3063\u3066/sys/kernel/debug/mytimer_remain_msecs\u3092\u4f5c\u6210\u3059\u308b(\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u306f0400)\n- debugfs_remove()\u306b\u3088\u3063\u3066/sys/kernel/debug/mytimer_remain_msecs\u3092\u524a\u9664\u3059\u308b\n\n[^__user]: \u5358\u7d14\u306bmemcpy()\u306b\u3088\u3063\u3066\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3057\u307e\u3046\u3068\u3001buf\u306e\u4e00\u90e8\u304c\u7269\u7406\u30e1\u30e2\u30ea\u4e0a\u306b\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306b\u554f\u984c\u3068\u306a\u308b\u3002\u3053\u308c\u306b\u3064\u3044\u3066\u306e\u8a73\u7d30\u306f\u5f8c\u306e\u56de\u3067\u8ff0\u3079\u308b\u4e88\u5b9a\n\nVM\u4e0a\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u30ed\u30fc\u30c9\u524d\u5f8c\u306b/sys/kernel/debug\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30b9\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\n# ls /sys/kernel/debug\nacpi  cleancache  dma_buf  dynamic_debug  fault_around_bytes  gpio     kprobes  pinctrl  pwm  regmap     sched_features  split_huge_pages  suspend_stats  usb           wakeup_sources  zswap\nbdi   clk         dri      extfrag        frontswap           iosf_sb  mce      pm_qos   ras  regulator  sleep_time      sunrpc            tracing        virtio-ports  x86\n# insmod /vagrant/debugfs1.ko \n# ls /sys/kernel/debug\nacpi  cleancache  dma_buf  dynamic_debug  fault_around_bytes  gpio     kprobes  mytimer_remain_msecs  pm_qos  ras     regulator       sleep_time        sunrpc         tracing  virtio-ports    x86\nbdi   clk         dri      extfrag        frontswap           iosf_sb  mce      pinctrl               pwm     regmap  sched_features  split_huge_pages  suspend_stats  usb      wakeup_sources  zswap\n# \n```\n\n\u30ed\u30fc\u30c9\u524d\u306b\u306f\u5b58\u5728\u3057\u306a\u304b\u3063\u305f/sys/kernel/debug/mytimer_remain_msecs\u304c\u30ed\u30fc\u30c9\u5f8c\u306b\u306f\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u3067\u306f\u3001\u5b9a\u671f\u7684\u306b\u3001\u305f\u3068\u3048\u3070\u4e00\u79d2\u3054\u3068\u306b\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\n# for ((i=0;i<10;i++)) ; do cat /sys/kernel/debug/mytimer_remain_msecs ; sleep 1; done\n839888\n838888\n837884\n836884\n835884\n834880\n833880\n832880\n831876\n830876\n# \n```\n\n\u4e00\u79d2\u3054\u3068\u306b\u7d04\u4e00\u79d2(1000\u30df\u30ea\u79d2)\u3065\u3064\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u30a2\u30f3\u30ed\u30fc\u30c9\u6642\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u6d88\u3048\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```\n# rmmod debugfs1\n# ls /sys/kernel/debug \nacpi  cleancache  dma_buf  dynamic_debug  fault_around_bytes  gpio     kprobes  pinctrl  pwm  regmap     sched_features  split_huge_pages  suspend_stats  usb           wakeup_sources  zswap\nbdi   clk         dri      extfrag        frontswap           iosf_sb  mce      pm_qos   ras  regulator  sleep_time      sunrpc            tracing        virtio-ports  x86\n# \n```\n\n\u6b63\u3057\u304f\u6d88\u3048\u305f\u3088\u3046\u3067\u3059\u3002\n\n# \u30e2\u30b8\u30e5\u30fc\u30eb\u56fa\u6709\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\n\n\u3055\u304d\u307b\u3069\u306f\u81ea\u4f5c\u30e2\u30b8\u30e5\u30fc\u30eb\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u3092/sys/kernel/debug\u76f4\u4e0b\u306b\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u5b9f\u306f\u3053\u308c\u306f\u65b0\u898f\u30d5\u30a1\u30a4\u30eb\u3092\u5897\u3084\u3059\u306b\u5f93\u3063\u3066\u4ed6\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u540d\u524d\u304c\u91cd\u306a\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u307e\u308b\u3053\u3068\u3001\u304a\u3088\u3073\u3001\u5f53\u8a72\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u3084\u305f\u3089\u3068\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u6765\u3066\u3057\u307e\u3063\u3066\u898b\u901a\u3057\u304c\u60aa\u304f\u306a\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u3042\u307e\u308a\u8912\u3081\u3089\u308c\u305f\u65b9\u6cd5\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u3088\u3046\u306a\u3053\u3068\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3054\u3068\u306b/sys/kernel/debug\u4ee5\u4e0b\u306b\u5c02\u7528\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\u306e\u304c\u671b\u307e\u3057\u3044\u3067\u3059\u3002\n\n\u3055\u304d\u307b\u3069\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4e00\u90e8\u5909\u66f4\u3057\u3066\u3001\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092/sys/kernel/debug/mytimer/remain_msecs\u304b\u3089\u5f97\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n```debugfs2.c:\n#include <linux/module.h>\n#include <linux/debugfs.h>\n\nMODULE_LICENSE(\"GPL v2\");\nMODULE_AUTHOR(\"Satoru Takeuchi <satoru.takeuchi@gmail.com>\");\nMODULE_DESCRIPTION(\"A simple example of debugfs\");\n\nstatic struct dentry *topdir;\nstatic struct dentry *testfile;\nstatic char testbuf[128];\n\nstruct timer_list mytimer;\n\n#define MYTIMER_TIMEOUT_SECS    ((unsigned long)1000)\n\nstatic void mytimer_fn(unsigned long arg)\n{\n        printk(KERN_ALERT \"%lu secs passed.\\n\", MYTIMER_TIMEOUT_SECS);\n}\n\nstatic ssize_t mytimer_remain_msecs_read(struct file *f, char __user *buf, size_t len, loff_t *ppos)\n{\n        unsigned long diff_msecs, now = jiffies;\n\n        if (time_after(mytimer.expires, now))\n                diff_msecs = (mytimer.expires - now) * 1000 / HZ;\n        else\n                diff_msecs = 0;\n\n        snprintf(testbuf, sizeof(testbuf), \"%lu\\n\", diff_msecs);\n        return simple_read_from_buffer(buf, len, ppos, testbuf, strlen(testbuf));\n}\n\nstatic struct file_operations test_fops = {\n        .owner = THIS_MODULE,\n        .read = mytimer_remain_msecs_read,\n};\n\nstatic int mymodule_init(void)\n{\n        init_timer(&mytimer);\n        mytimer.expires = jiffies + MYTIMER_TIMEOUT_SECS*HZ;\n        mytimer.data = 0;\n        mytimer.function = mytimer_fn;\n        add_timer(&mytimer);\n\n        topdir = debugfs_create_dir(\"mytimer\", NULL);\n        if (!topdir)\n                return -ENOMEM;\n        testfile = debugfs_create_file(\"remain_msecs\", 0400, topdir, NULL, &test_fops);\n        if (!testfile)\n                return -ENOMEM;\n\n        return 0;\n}\n\nstatic void mymodule_exit(void)\n{\n        debugfs_remove_recursive(topdir);\n        del_timer(&mytimer);\n}\n\nmodule_init(mymodule_init);\nmodule_exit(mymodule_exit);\n```\n\n\u3055\u304d\u307b\u3069\u306e\u30bd\u30fc\u30b9\u3068\u306e\u5dee\u5206\u3067\u6ce8\u76ee\u3059\u3079\u304d\u70b9\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\n- debugfs_create_dir()\u306b\u3088\u3063\u3066/sys/kernel/debug\u4ee5\u4e0b\u306bmytimer\u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\n- debugfs_create_file()\u306e\u7b2c3\u5f15\u6570\u306b\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5bfe\u5fdc\u3059\u308bstruct dentry *\u578b\u306e\u30c7\u30fc\u30bf\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u5f53\u8a72\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\u3053\u306e\u5834\u5408\u306f/sys/kernel/debug/mytimer\u4ee5\u4e0b\u306bremain_msecs\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\n- debugfs_remove_recursive()\u306b\u3088\u3063\u3066\u3001\u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u518d\u5e30\u7684\u306b\u524a\u9664\u3059\u308b\n\n\u3055\u304d\u307b\u3069\u3068\u540c\u69d8\u3001\u30ed\u30fc\u30c9\u5f8c\u306b\u6240\u5b9a\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```\n# insmod /vagrant/debugfs2.ko \n# ls /sys/kernel/debug \nacpi  cleancache  dma_buf  dynamic_debug  fault_around_bytes  gpio     kprobes  mytimer  pm_qos  ras     regulator       sleep_time        sunrpc         tracing  virtio-ports    x86\nbdi   clk         dri      extfrag        frontswap           iosf_sb  mce      pinctrl  pwm     regmap  sched_features  split_huge_pages  suspend_stats  usb      wakeup_sources  zswap\n# ls /sys/kernel/debug/mytimer \nremain_msecs\n# \n```\n\n\u3046\u307e\u304f\u3044\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u307e\u305f\u4e00\u79d2\u3054\u3068\u306b\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\n# for ((i=0;i<10;i++)) ; do cat /sys/kernel/debug/mytimer/remain_msecs ; sleep 1; done\n639008\n638004\n637004\n636004\n635000\n634000\n633000\n632000\n630996\n629996\n# \n```\n\n\u6210\u529f\u3067\u3059\u3002\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a2\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u4f5c\u6210\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u6d88\u3048\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```\n# rmmod debugfs2 \n# ls /sys/kernel/debug\nacpi  cleancache  dma_buf  dynamic_debug  fault_around_bytes  gpio     kprobes  pinctrl  pwm  regmap     sched_features  split_huge_pages  suspend_stats  usb           wakeup_sources  zswap\nbdi   clk         dri      extfrag        frontswap           iosf_sb  mce      pm_qos   ras  regulator  sleep_time      sunrpc            tracing        virtio-ports  x86\n# \n```\n\n\u3053\u308c\u3082\u6210\u529f\u3067\u3059\u3002\n\n# \u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092\u5909\u66f4\u3059\u308b\n\n\u3053\u308c\u307e\u3067\u306fdebugfs\u3092\u8aad\u307f\u53d6\u308a\u3060\u3051\u306b\u4f7f\u3063\u3066\u304d\u307e\u3057\u305f\u304c\u3001\u4eca\u5ea6\u306f\u66f8\u304d\u8fbc\u307f\u3082\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u3092/sys/kernel/debug/mytimer/remain_msecs\u306b\u66f8\u304d\u8fbc\u3093\u3060\u5024\u306b\u8a2d\u5b9a\u3057\u76f4\u3057\u307e\u3059\u3002\u30bd\u30fc\u30b9\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\n```debugfs3.c:\n#include <linux/module.h>\n#include <linux/debugfs.h>\n\nMODULE_LICENSE(\"GPL v2\");\nMODULE_AUTHOR(\"Satoru Takeuchi <satoru.takeuchi@gmail.com>\");\nMODULE_DESCRIPTION(\"A simple example of debugfs\");\n\nstatic struct dentry *topdir;\nstatic struct dentry *testfile;\nstatic char testbuf[128];\n\nstruct timer_list mytimer;\n\nstatic unsigned long mytimer_timeout_msecs = 1000 * 1000;\n\nstatic void mytimer_fn(unsigned long arg)\n{\n        printk(KERN_ALERT \"%lu secs passed.\\n\", mytimer_timeout_msecs / 1000);\n}\n\nstatic ssize_t mytimer_remain_msecs_read(struct file *f, char __user *buf, size_t len, loff_t *ppos)\n{\n        unsigned long diff_msecs, now = jiffies;\n\n        if (time_after(mytimer.expires, now))\n                diff_msecs = (mytimer.expires - now) * 1000 / HZ;\n        else\n                diff_msecs = 0;\n\n        snprintf(testbuf, sizeof(testbuf), \"%lu\\n\", diff_msecs);\n        return simple_read_from_buffer(buf, len, ppos, testbuf, strlen(testbuf));\n}\n\nstatic ssize_t mytimer_remain_msecs_write(struct file *f, const char __user *buf, size_t len, loff_t *ppos)\n{\n        ssize_t ret;\n\n        ret = simple_write_to_buffer(testbuf, sizeof(testbuf), ppos, buf, len);\n        if (ret < 0)\n                return ret;\n        sscanf(testbuf, \"%20lu\", &mytimer_timeout_msecs);\n        mod_timer(&mytimer, jiffies + mytimer_timeout_msecs * HZ / 1000);\n        return ret;\n}\n\nstatic struct file_operations test_fops = {\n        .owner = THIS_MODULE,\n        .read = mytimer_remain_msecs_read,\n        .write = mytimer_remain_msecs_write,\n};\n\nstatic int mymodule_init(void)\n{\n        init_timer(&mytimer);\n        mytimer.expires = jiffies + mytimer_timeout_msecs * HZ / 1000; \n        mytimer.data = 0;\n        mytimer.function = mytimer_fn;\n        add_timer(&mytimer);\n\n        topdir = debugfs_create_dir(\"mytimer\", NULL);\n        if (!topdir)\n                return -ENOMEM;\n        testfile = debugfs_create_file(\"remain_msecs\", 0600, topdir, NULL, &test_fops);\n        if (!testfile)\n                return -ENOMEM;\n\n        return 0;\n}\n\nstatic void mymodule_exit(void)\n{\n        debugfs_remove_recursive(topdir);\n        del_timer(&mytimer);\n}\n\nmodule_init(mymodule_init);\nmodule_exit(mymodule_exit);\n```\n\n\u6b21\u306e\u70b9\u306b\u6ce8\u76ee\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n- mytimer_timeout_msecs\u304c\u30bf\u30a4\u30de\u30fc\u306e\u5f85\u3061\u6642\u9593\u3092\u793a\u3059(\u30df\u30ea\u79d2\u5358\u4f4d)\n- mytimer_remain_msecs_write()\u306b\u3088\u3063\u3066\u3001\u30e6\u30fc\u30b6\u7a7a\u9593\u306e\u30d0\u30c3\u30d5\u30a1\u3067\u3042\u308bbuf\u304b\u3089\u3001\u30ab\u30fc\u30cd\u30eb\u7a7a\u9593\u306e\u30d0\u30c3\u30d5\u30a1testbuf\u306b\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u8fbc\u3080\n- \u4e0a\u8a18\u3067\u66f8\u304d\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u3092\u3082\u3068\u306b\u30bf\u30a4\u30de\u30fc\u306e\u5f85\u3061\u6642\u9593\u3092\u518d\u8a2d\u5b9a\n\n\u6392\u4ed6\u5236\u5fa1\u3068\u3044\u3046\u89b3\u70b9\u304b\u3089\u306f\u672c\u5f53\u306f\u3053\u306e\u30b3\u30fc\u30c9\u306f\u5c11\u3057\u307e\u305a\u3044\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u6c17\u306b\u3057\u306a\u3044\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u6392\u4ed6\u5236\u5fa1\u306b\u3064\u3044\u3066\u306f\u5f8c\u306e\u56de\u3067\u6271\u3046\u4e88\u5b9a\u3067\u3059\u3002\n\n\u3067\u306f\u52d5\u4f5c\u78ba\u8a8d\u3067\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306e\u78ba\u8a8d\u306f\u7701\u7565\u3057\u3066\u3001\u5b9a\u671f\u7684\u306b\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u304c\u6e1b\u5c11\u3057\u3066\u3044\u308b\u304b\u3092\u898b\u307e\u3059\u3002\n\n```\n# for ((i=0;i<10;i++)) ; do cat /sys/kernel/debug/mytimer/remain_msecs ; sleep 1 ; done\n975616\n974616\n973616\n972612\n971612\n970612\n969612\n968608\n967608\n966608\n# \n```\n\n\u3053\u3053\u307e\u3067\u306fOK\u3002\u3067\u306f\u3001\u30bf\u30a4\u30de\u30fc\u306e\u6b8b\u308a\u6642\u9593\u309210\u79d2\u306b\u5909\u66f4\u3057\u305f\u4e0a\u3067\u3001\u307e\u305f\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u306e\u69d8\u5b50\u3092\u773a\u3081\u307e\u3057\u3087\u3046\u3002\n\n```\n# echo 10000 > /sys/kernel/debug/mytimer/remain_msecs \n# for ((i=0;i<10;i++)) ; do cat /sys/kernel/debug/mytimer/remain_msecs ; sleep 1 ; done\n7832\n6828\n5828\n4828\n3828\n2824\n1824\n824\n0\n0\n# \n```\n\n\u3046\u307e\u304f\u3044\u3063\u305f\u3088\u3046\u3067\u3059\u300210\u79d2\u7d4c\u904e\u3057\u305f\u3053\u3068\u3092\u793a\u3059\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u529b\u3055\u308c\u305f\u304b\u3082\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```\n# dmesg | tail -1\n[39528.736116] 10 secs passed.\n# \n```\n\nOK\u3067\u3059\u3002\u6700\u5f8c\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a2\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\u5b9f\u884c\u4f8b\u306e\u8868\u793a\u306f\u7701\u7565\u3057\u307e\u3059\u3002\n\n\u3053\u3053\u307e\u3067\u3067\u4eca\u56de\u306f\u304a\u3057\u307e\u3044\u3067\u3059\u3002\n\n# \u6f14\u7fd2\u554f\u984c\n\n- \u30bf\u30a4\u30de\u30fc\u30922\u3064\u4f5c\u6210\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u6b8b\u308a\u6642\u9593\u3092/sys/kernel/debug/mytimer/{1,2}/remain_msecs\u306b\u3088\u3063\u3066\u8aad\u307f\u66f8\u304d\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\n# \u304a\u308f\u308a\u306b\n\n\u4eca\u56de\u4f7f\u3063\u305f\u30bd\u30fc\u30b9\u306fexample/module/debugfs\u4ee5\u4e0b\u306b\u7f6e\u3044\u3066\u3044\u307e\u3059\u3002[\u6b21\u56de](http://qiita.com/satoru_takeuchi/items/40771a2429d3fdd64d19)\u306f\u30ab\u30fc\u30cd\u30eb\u5185\u306e\u4ee3\u8868\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3042\u308b\u30ea\u30b9\u30c8\u306b\u3064\u3044\u3066\u8ff0\u3079\u307e\u3059\u3002\n\n# \u53c2\u8003\u8cc7\u6599\n\n- \u30ab\u30fc\u30cd\u30eb\u30bd\u30fc\u30b9\u306einclude/linux/debugfs.h: debugfs_create_*\u306b\u3088\u3063\u3066\u69d8\u3005\u306a\u578b\u306e\u5358\u4e00\u306e\u30c7\u30fc\u30bf\u3092\u6271\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u308b\n- \u30ab\u30fc\u30cd\u30eb\u30bd\u30fc\u30b9\u306eDocumentation/filesystems/debugfs.txt: debugfs\u306e\u767b\u5834\u80cc\u666f\u3001\u7528\u9014\u3001\u304a\u3088\u3073\u4f7f\u3044\u65b9\u306a\u3069\u306b\u3064\u3044\u3066\u8ff0\u3079\u3089\u308c\u3066\u3044\u308b\n", "tags": ["Linux", "\u5165\u9580", "kernel"]}