{"context": "\n\n\u6982\u8981\n\u30002016\u5e745\u67082\u65e5\u306b\u51fa\u305f\u3053\u306e\u8a18\u4e8b\u3092\u898b\u3066\u9a5a\u304d\u307e\u3057\u305f\u3002\u540c\u3058\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3057\u305f\u7d50\u679c\u3001C++\u304cC# unsafe\u306b\u8ca0\u3051\u308b\u3068\u3044\u3046\u3068\u3093\u3067\u3082\u306a\u3044\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304b\uff01\n\u3000\u6c17\u3065\u3044\u305f\u3089\u3001C# \u304c C++ \u306e\u901f\u5ea6\u3092\u51cc\u99d5\u3057\u3066\u3044\u308b\uff01 - espresso3389\u306e\u65e5\u8a18\n\u3000\u3068\u3044\u3046\u308f\u3051\u3067\u3001C++\u5074\u306b\u3082\u9006\u8ee2\u306e\u76ee\u306f\u306a\u3044\u306e\u304b\u3001\u8abf\u67fb\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u307e\u305a\u306f\u5c0f\u624b\u8abf\u3079\n\u3000\u3053\u306e\u8a18\u4e8b\u306e\u4e3b\u5f35\u3068\u3057\u3066\u306f\u3001\u300c\u6614\u306b\u7d44\u3093\u3060\u753b\u50cf\u51e6\u7406(\u3092\u6a21\u3057\u305f)\u30b3\u30fc\u30c9\u3067\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3057\u305f\u3068\u3053\u308d\u50c5\u5dee\u3060\u3063\u305f\u306e\u3067\u3001\u518d\u5ea6\u30c8\u30e9\u30a4\u3057\u305f\u3089C#\u304c\u52dd\u3063\u3066\u3057\u307e\u3063\u305f\u300d\u3068\u3044\u3046\u3053\u3068\u3002\u5b9f\u9a13\u6761\u4ef6\u306f\u660e\u8a18\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u307e\u305a\u306f\u8ffd\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3000\u3068\u306f\u8a00\u3063\u3066\u3082\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3068\u3082\u304b\u304fCPU\u307e\u3067\u63c3\u3048\u308b\u3053\u3068\u306f\u73fe\u5b9f\u7684\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3057\u305f\u304c\u3063\u3066\u6b21\u306e\u3088\u3046\u306a\u6761\u4ef6\u306b\u306a\u308b\u3053\u3068\u3092\u304a\u8a31\u3057\u4e0b\u3055\u3044\u3002\n\nWindows 10 Pro \u30d0\u30fc\u30b8\u30e7\u30f3 1511(OS\u30d3\u30eb\u30c9 10586.218) 64bit\u7248\n.NET Framework 4.6.1\nVisual Studio 2015 Update 2\nCPU: Intel Core i7-4790K(\u5b9a\u683c\u3001TB\u306f\u5207\u3063\u3066\u306a\u3044)\nMemory: 12GB(DDR3)\ncsc.exe \u30d0\u30fc\u30b8\u30e7\u30f3 1.2.0.60317\ncl.exe \u30d0\u30fc\u30b8\u30e7\u30f3 19.00.23918 for x64\n\n\u3000\u8aac\u660e\u901a\u308a\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30b3\u30f3\u30d1\u30a4\u30eb(64bit)\u3057\u3066\u540410\u56de\u5b9f\u884c\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u306b\u306a\u308a\u307e\u3057\u305f(\u5358\u4f4d\u306f\u30df\u30ea\u79d2)\u3002\n\n\n\n\u8a00\u8a9e\n\u901f\u5ea6(\u6700\u901f)\n\u901f\u5ea6(\u5e73\u5747)\n\u901f\u5ea6(\u6700\u9045)\n\n\n\n\nC#(test1)\n2320\n2346.6\n2382\n\n\nC#(test2)\n1875\n1893\n1913\n\n\nC++\n1594\n1621.9\n1656\n\n\n\n\u3000\u2026\u2026\u3053\u306e\u6642\u70b9\u3067C++\u304c\u52dd\u3063\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u304c\u3001\u8a71\u3092\u9032\u3081\u307e\u3057\u3087\u3046\u3002\n\n\u30b3\u30fc\u30c9\u3092\u30e2\u30c0\u30f3\u306b\u3057\u3066\u307f\u308b\n\u3000\u30b3\u30fc\u30c9\u304c5\u5e74\u524d\u57fa\u6e96\u3060\u304b\u3089\u304b\u3001C++\u5074\u306e\u30b3\u30fc\u30c9\u304c\u51c4\u304f\u602a\u3057\u304f\u898b\u3048\u307e\u3059\u3002Windows\u3079\u3063\u305f\u308a\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3057\u3001\u5c11\u3057\u624b\u76f4\u3057\u3059\u308b\u3060\u3051\u3067C89\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308a\u305d\u3046\u306a\u3050\u3089\u3044\u3067\u3059\u3002\u3068\u3044\u3046\u308f\u3051\u3067\u3001C++11\u57fa\u6e96\u3067\u66f8\u304d\u76f4\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nspeedtest2.cpp\n// Compile: cl speedtest2.cpp /O2 /GL /EHsc\n#include<chrono>\n#include<cstdint>\n#include<iostream>\n\nusing Byte = uint8_t;\n\nvoid test(){\n    //! \u753b\u9762\u30b5\u30a4\u30ba\u3092\u8a2d\u5b9a\u3059\u308b\n    size_t w = 4321, h = 6789;\n    //! \u30b9\u30c8\u30e9\u30a4\u30c9\u306e\u5927\u304d\u3055\u3092\u8a08\u7b97\u3059\u308b\n    //! (\u6a2a\u5e45\u30924\u3067\u5272\u308a\u5207\u308c\u308b\u753b\u7d20\u6570\u306b\u3059\u308b)\n    size_t stride = ( w + 3 ) & ~3;\n    //! \u9818\u57df\u3092\u78ba\u4fdd\u3059\u308b(\u5404\u753b\u7d20\u306f1\u30d0\u30a4\u30c8)\n    auto *a = new Byte[stride * h];\n    //! \u4e8c\u6b21\u5143\u76f4\u4ea4\u5ea7\u6a19\u306eX\u30fbY\u306eXOR\u3092\u753b\u7d20\u306b\u4ee3\u5165\u3059\u308b\n    //! (\u64ec\u4f3c\u7684\u306a\u753b\u50cf\u51e6\u7406\u306e\u30c6\u30b9\u30c8)\n    for(size_t y = 0; y < h; y++){\n        auto p = a + y * stride;\n        for(size_t x = 0; x < w; x++){\n            p[x] = static_cast<Byte>(x ^ y);\n        }\n    }\n    delete[] a;\n}\n\nint main(){\n    //! \u8a08\u6e2c\u958b\u59cb\n    auto start = std::chrono::system_clock::now();\n    //! \u8a08\u6e2c\u7528\u30b3\u30fc\u30c9\n    for(size_t i = 0; i < 100; ++i){\n        test();\n    }\n    //! \u8a08\u6e2c\u7d42\u4e86\u30fb\u96c6\u8a08\n    auto end = std::chrono::system_clock::now();\n    auto msec = std::chrono::duration_cast<std::chrono::milliseconds>(end - start).count();\n    std::cout << msec << \"[ms]\" << std::endl;\n}\n\n\n\u3000\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7d50\u679c\u306f\u6b21\u306e\u901a\u308a\u3002\u5c11\u3057\u9045\u304f\u306a\u3063\u305f\u3088\u3046\u306b\u898b\u3048\u308b\u306e\u306f\u3001XOR\u3059\u308b\u969b\u306e\u6570\u5024\u304cint\u304b\u3089size_t\u306b\u306a\u3063\u305f\u3053\u3068\u304c\u5f71\u97ff\u3057\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u2026\u2026\uff1f\u3000\u305d\u3082\u305d\u3082\u3069\u3046\u3044\u3063\u305f\u51e6\u7406\u306a\u3093\u3060\u3053\u308c\n\n\n\n\u8a00\u8a9e\n\u901f\u5ea6(\u6700\u901f)\n\u901f\u5ea6(\u5e73\u5747)\n\u901f\u5ea6(\u6700\u9045)\n\n\n\n\nC++(\u305d\u306e2)\n1695\n1706.8\n1723\n\n\n\n\nSIMD intrinsic\u3092\u9069\u7528\u3057\u3066\u307f\u308b\n\u3000\u753b\u50cf\u51e6\u7406\u3068\u8a00\u3048\u3070SIMD\u3060\u3068\u3070\u3063\u3061\u3083\u304c\u8a00\u3063\u3066\u307e\u3057\u305f\u306e\u3067\u3001\u66f4\u306a\u308b\u6700\u9069\u5316\u3092\u56f3\u308a\u307e\u3059\u3002\u753b\u7d20\u304cByte\u578b(1byte\uff1d\u4eca\u56de\u306f8bit)\u3067\u3001\u6a2a\u5e45\u304c4\u306e\u500d\u6570\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u57fa\u672c\u7684\u306b\u306f32bit\u5358\u4f4d\u3067\u6271\u3048\u308b\u308f\u3051\u3067\u3059\u306d\u3002\u5b9f\u969b\u306b\u306f\u5143\u30c7\u30fc\u30bf\u304cRGBA\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u3067128bit\u3068\u3057\u3066\u6271\u3044\u3084\u3059\u304f\u306a\u308b\u306e\u3067\u3059\u304c\n\u3000\u5143\u306e\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u306f\u3001SandyBridge\u306eCore i7-3770S\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u6574\u6570\u6f14\u7b97\u3068\u3057\u3066AVX2\u306f\u4f7f\u3048\u305a\u3001SSE\u30ca\u30f3\u30c8\u30ab(128bit)\u3067\u51e6\u7406\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u304a\u304a\u3088\u305d\u3053\u3046\u3044\u3063\u305f\u30b3\u30fc\u30c9\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\nspeedtest3.cpp\n//! Compile: / GS / GL / analyze - / W3 / Gy / Zc:wchar_t / Zi / Gm - / O2 / sdl\n//!          / Fd\"Release\\vc140.pdb\" / Zc : inline / fp : precise / D \"WIN32\"\n//!          / D \"NDEBUG\" / D \"_CONSOLE\" / D \"_UNICODE\" / D \"UNICODE\"\n//!          / errorReport : prompt / WX - / Zc : forScope / arch : AVX / Gd\n//!          / Oy - / Oi / MD / Fa\"Release\\\" /EHsc /nologo /Fo\"Release\\\"\n//!          /Fp\"Release\\sample.pch\" \n\n#include<chrono>\n#include<cstdint>\n#include<iostream>\n#include<immintrin.h>\n\nusing Byte = uint8_t;\n\nvoid test(){\n    //! \u753b\u9762\u30b5\u30a4\u30ba\u3092\u8a2d\u5b9a\u3059\u308b\n    const size_t w = 4321, h = 6789;\n    //! \u30b9\u30c8\u30e9\u30a4\u30c9\u306e\u5927\u304d\u3055\u3092\u8a08\u7b97\u3059\u308b\n    //! (\u6a2a\u5e45\u30924\u3067\u5272\u308a\u5207\u308c\u308b\u753b\u7d20\u6570\u306b\u3059\u308b)\n    const size_t stride = ( w + 3 ) & ~3;\n    //! \u9818\u57df\u3092\u78ba\u4fdd\u3059\u308b(\u5404\u753b\u7d20\u306f1\u30d0\u30a4\u30c8)\n    //! \u672c\u6765\u306a\u3089\u30a2\u30e9\u30a4\u30f3\u30e1\u30f3\u30c8\u3092\u63c3\u3048\u305f\u3044\u3068\u3053\u308d\u3060\u304c\u2026\u2026\n    auto *a = new Byte[stride * h];\n    //! \u4e8c\u6b21\u5143\u76f4\u4ea4\u5ea7\u6a19\u306eX\u30fbY\u306eXOR\u3092\u753b\u7d20\u306b\u4ee3\u5165\u3059\u308b\n    //! (\u64ec\u4f3c\u7684\u306a\u753b\u50cf\u51e6\u7406\u306e\u30c6\u30b9\u30c8)\n    for(size_t y = 0; y < h; y++){\n        auto p = a + y * stride;\n        const auto simd_y = _mm_set1_epi8(y);\n        for(size_t x = 0; x < (w >> 4) << 4; x += 16){\n            const auto simd_x = _mm_set_epi8(\n                x+15,x+14,x+13,x+12,x+11,x+10,x+ 9,x+ 8,\n                x+ 7,x+ 6,x+ 5,x+ 4,x+ 3,x+ 2,x+ 1,x+ 0);\n            const auto simd_xor = _mm_xor_si128(simd_x, simd_y);\n            _mm_storeu_si128((__m128i*)(p + x), simd_xor);\n        }\n        for(size_t x = (w >> 4) << 4; x < w; ++x){\n            p[x] = static_cast<Byte>(x ^ y);\n        }\n    }\n    delete[] a;\n}\n\nint main(){\n    //! \u8a08\u6e2c\u958b\u59cb\n    auto start = std::chrono::system_clock::now();\n    //! \u8a08\u6e2c\u7528\u30b3\u30fc\u30c9\n    for(size_t i = 0; i < 100; ++i){\n        test();\n    }\n    //! \u8a08\u6e2c\u7d42\u4e86\u30fb\u96c6\u8a08\n    auto end = std::chrono::system_clock::now();\n    auto msec = std::chrono::duration_cast<std::chrono::milliseconds>(end - start).count();\n    std::cout << msec << \"[ms]\" << std::endl;\n}\n\n\n\u3000\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7d50\u679c\u306f\u6b21\u306e\u901a\u308a\u3002\u3069\u3046\u3044\u3046\u308f\u3051\u304b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u7d44\u3093\u3067IDE\u304b\u3089\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u65b9\u304c\u901f\u304b\u3063\u305f\u306e\u3067\u3001\u305d\u306e\u969b\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u30b3\u30e1\u30f3\u30c8\u306b\u4ed8\u8a18\u3057\u3066\u3044\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u305d\u306e\u307e\u307eAVX2\u5316(256bit\u6bce\u51e6\u7406\u3059\u308b\u3088\u3046\u306b)\u3059\u308b\u3068\u306a\u305c\u304b\u9045\u304f\u306a\u308a\u307e\u3057\u305f\u2026\u2026\u3002\n\n\n\n\u8a00\u8a9e\n\u901f\u5ea6(\u6700\u901f)\n\u901f\u5ea6(\u5e73\u5747)\n\u901f\u5ea6(\u6700\u9045)\n\n\n\n\nC++(\u305d\u306e3)\n1460\n1474.3\n1489\n\n\n\n\n\u307e\u3068\u3081\n\u3000\u3044\u305a\u308c\u306b\u305b\u3088\u3001C++\u306e\u65b9\u304c\u4e00\u5fdc\u901f\u3044\u3088\u3046\u3067\u3059\u3002\u3088\u308a\u753b\u50cf\u51e6\u7406\u3089\u3057\u3044\u30b3\u30fc\u30c9\u3067\u3082\u5bfe\u6c7a\u3057\u3066\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\n\n\n\u8a00\u8a9e\n\u901f\u5ea6(\u6700\u901f)\n\u901f\u5ea6(\u5e73\u5747)\n\u901f\u5ea6(\u6700\u9045)\n\n\n\n\nC#(test1)\n2320\n2346.6\n2382\n\n\nC#(test2)\n1875\n1893\n1913\n\n\nC++\n1594\n1621.9\n1656\n\n\nC++(\u305d\u306e2)\n1695\n1706.8\n1723\n\n\nC++(\u305d\u306e3)\n1460\n1474.3\n1489\n\n\n\n\n\u304a\u307e\u3051\n\u3000\u5143\u30b3\u30fc\u30c9\u306e\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3092\u691c\u8a3c\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001x\u3068y\u3068\u306eXOR\u7d50\u679c\u3092Byte\u306b\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u90e8\u5206\u304c\u4e00\u756a\u91cd\u3044\u3068\u3044\u3046\u8eab\u3082\u84cb\u3082\u306a\u3044\u7d50\u8ad6\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3054\u67fb\u53ce\u304f\u3060\u3055\u3044\u3002\n(\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u7528\u306b\u3001C++\u5074\u306f\u610f\u5473\u3092\u5909\u3048\u306a\u3044\u7bc4\u56f2\u5185\u3067\u30b3\u30fc\u30c9\u3092\u6539\u5909\u3057\u3066\u3044\u307e\u3059)\n\u203bC++\n\n\u203bC#(test2)\n\n# \u6982\u8981\n\u30002016\u5e745\u67082\u65e5\u306b\u51fa\u305f\u3053\u306e\u8a18\u4e8b\u3092\u898b\u3066\u9a5a\u304d\u307e\u3057\u305f\u3002\u540c\u3058\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3057\u305f\u7d50\u679c\u3001**C++\u304cC# unsafe\u306b\u8ca0\u3051\u308b**\u3068\u3044\u3046\u3068\u3093\u3067\u3082\u306a\u3044\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304b\uff01\n\u3000[\u6c17\u3065\u3044\u305f\u3089\u3001C# \u304c C++ \u306e\u901f\u5ea6\u3092\u51cc\u99d5\u3057\u3066\u3044\u308b\uff01 - espresso3389\u306e\u65e5\u8a18](http://espresso3389.hatenablog.com/entry/2016/05/02/081308\n)\n\u3000\u3068\u3044\u3046\u308f\u3051\u3067\u3001C++\u5074\u306b\u3082\u9006\u8ee2\u306e\u76ee\u306f\u306a\u3044\u306e\u304b\u3001\u8abf\u67fb\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n# \u307e\u305a\u306f\u5c0f\u624b\u8abf\u3079\n\u3000\u3053\u306e\u8a18\u4e8b\u306e\u4e3b\u5f35\u3068\u3057\u3066\u306f\u3001\u300c\u6614\u306b\u7d44\u3093\u3060\u753b\u50cf\u51e6\u7406(\u3092\u6a21\u3057\u305f)\u30b3\u30fc\u30c9\u3067\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3057\u305f\u3068\u3053\u308d\u50c5\u5dee\u3060\u3063\u305f\u306e\u3067\u3001\u518d\u5ea6\u30c8\u30e9\u30a4\u3057\u305f\u3089**C#\u304c\u52dd\u3063\u3066\u3057\u307e\u3063\u305f**\u300d\u3068\u3044\u3046\u3053\u3068\u3002\u5b9f\u9a13\u6761\u4ef6\u306f\u660e\u8a18\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u307e\u305a\u306f\u8ffd\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3000\u3068\u306f\u8a00\u3063\u3066\u3082\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u3068\u3082\u304b\u304fCPU\u307e\u3067\u63c3\u3048\u308b\u3053\u3068\u306f\u73fe\u5b9f\u7684\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3057\u305f\u304c\u3063\u3066\u6b21\u306e\u3088\u3046\u306a\u6761\u4ef6\u306b\u306a\u308b\u3053\u3068\u3092\u304a\u8a31\u3057\u4e0b\u3055\u3044\u3002\n\n> Windows 10 Pro \u30d0\u30fc\u30b8\u30e7\u30f3 1511(OS\u30d3\u30eb\u30c9 10586.218) 64bit\u7248\n> .NET Framework 4.6.1\n> Visual Studio 2015 Update 2\n> CPU: Intel Core i7-4790K(\u5b9a\u683c\u3001TB\u306f\u5207\u3063\u3066\u306a\u3044)\n> Memory: 12GB(DDR3)\n> csc.exe \u30d0\u30fc\u30b8\u30e7\u30f3 1.2.0.60317\n> cl.exe \u30d0\u30fc\u30b8\u30e7\u30f3 19.00.23918 for x64\n\n\u3000\u8aac\u660e\u901a\u308a\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30b3\u30f3\u30d1\u30a4\u30eb(64bit)\u3057\u3066\u540410\u56de\u5b9f\u884c\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u306b\u306a\u308a\u307e\u3057\u305f(\u5358\u4f4d\u306f\u30df\u30ea\u79d2)\u3002\n\n|\u8a00\u8a9e|\u901f\u5ea6(\u6700\u901f)|\u901f\u5ea6(\u5e73\u5747)|\u901f\u5ea6(\u6700\u9045)|\n|----|----------|----------|----------|\n|C#(test1)|2320|2346.6|2382|\n|C#(test2)|1875|1893|1913|\n|C++|**1594**|**1621.9**|**1656**|\n\n\u3000\u2026\u2026\u3053\u306e\u6642\u70b9\u3067**C++\u304c\u52dd\u3063\u3066\u3044\u308b**\u6c17\u304c\u3057\u307e\u3059\u304c\u3001\u8a71\u3092\u9032\u3081\u307e\u3057\u3087\u3046\u3002\n\n# \u30b3\u30fc\u30c9\u3092\u30e2\u30c0\u30f3\u306b\u3057\u3066\u307f\u308b\n\u3000\u30b3\u30fc\u30c9\u304c5\u5e74\u524d\u57fa\u6e96\u3060\u304b\u3089\u304b\u3001C++\u5074\u306e\u30b3\u30fc\u30c9\u304c\u51c4\u304f\u602a\u3057\u304f\u898b\u3048\u307e\u3059\u3002Windows\u3079\u3063\u305f\u308a\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3057\u3001\u5c11\u3057\u624b\u76f4\u3057\u3059\u308b\u3060\u3051\u3067C89\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308a\u305d\u3046\u306a\u3050\u3089\u3044\u3067\u3059\u3002\u3068\u3044\u3046\u308f\u3051\u3067\u3001C++11\u57fa\u6e96\u3067\u66f8\u304d\u76f4\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```speedtest2.cpp\n// Compile: cl speedtest2.cpp /O2 /GL /EHsc\n#include<chrono>\n#include<cstdint>\n#include<iostream>\n\nusing Byte = uint8_t;\n\nvoid test(){\n\t//! \u753b\u9762\u30b5\u30a4\u30ba\u3092\u8a2d\u5b9a\u3059\u308b\n\tsize_t w = 4321, h = 6789;\n\t//! \u30b9\u30c8\u30e9\u30a4\u30c9\u306e\u5927\u304d\u3055\u3092\u8a08\u7b97\u3059\u308b\n\t//! (\u6a2a\u5e45\u30924\u3067\u5272\u308a\u5207\u308c\u308b\u753b\u7d20\u6570\u306b\u3059\u308b)\n\tsize_t stride = ( w + 3 ) & ~3;\n\t//! \u9818\u57df\u3092\u78ba\u4fdd\u3059\u308b(\u5404\u753b\u7d20\u306f1\u30d0\u30a4\u30c8)\n\tauto *a = new Byte[stride * h];\n\t//! \u4e8c\u6b21\u5143\u76f4\u4ea4\u5ea7\u6a19\u306eX\u30fbY\u306eXOR\u3092\u753b\u7d20\u306b\u4ee3\u5165\u3059\u308b\n\t//! (\u64ec\u4f3c\u7684\u306a\u753b\u50cf\u51e6\u7406\u306e\u30c6\u30b9\u30c8)\n\tfor(size_t y = 0; y < h; y++){\n\t\tauto p = a + y * stride;\n\t\tfor(size_t x = 0; x < w; x++){\n\t\t\tp[x] = static_cast<Byte>(x ^ y);\n\t\t}\n\t}\n\tdelete[] a;\n}\n\nint main(){\n\t//! \u8a08\u6e2c\u958b\u59cb\n\tauto start = std::chrono::system_clock::now();\n\t//! \u8a08\u6e2c\u7528\u30b3\u30fc\u30c9\n\tfor(size_t i = 0; i < 100; ++i){\n\t\ttest();\n\t}\n\t//! \u8a08\u6e2c\u7d42\u4e86\u30fb\u96c6\u8a08\n\tauto end = std::chrono::system_clock::now();\n\tauto msec = std::chrono::duration_cast<std::chrono::milliseconds>(end - start).count();\n\tstd::cout << msec << \"[ms]\" << std::endl;\n}\n```\n\n\u3000\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7d50\u679c\u306f\u6b21\u306e\u901a\u308a\u3002\u5c11\u3057\u9045\u304f\u306a\u3063\u305f\u3088\u3046\u306b\u898b\u3048\u308b\u306e\u306f\u3001XOR\u3059\u308b\u969b\u306e\u6570\u5024\u304cint\u304b\u3089size_t\u306b\u306a\u3063\u305f\u3053\u3068\u304c\u5f71\u97ff\u3057\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u2026\u2026\uff1f\u3000~~\u305d\u3082\u305d\u3082\u3069\u3046\u3044\u3063\u305f\u51e6\u7406\u306a\u3093\u3060\u3053\u308c~~\n\n|\u8a00\u8a9e|\u901f\u5ea6(\u6700\u901f)|\u901f\u5ea6(\u5e73\u5747)|\u901f\u5ea6(\u6700\u9045)|\n|----|----------|----------|----------|\n|C++(\u305d\u306e2)|1695|1706.8|1723|\n\n# SIMD intrinsic\u3092\u9069\u7528\u3057\u3066\u307f\u308b\n\u3000\u753b\u50cf\u51e6\u7406\u3068\u8a00\u3048\u3070SIMD\u3060\u3068[\u3070\u3063\u3061\u3083\u304c\u8a00\u3063\u3066\u307e\u3057\u305f](http://moto-neta.com/anime/bacchagaitteta/)\u306e\u3067\u3001\u66f4\u306a\u308b\u6700\u9069\u5316\u3092\u56f3\u308a\u307e\u3059\u3002\u753b\u7d20\u304cByte\u578b(1byte\uff1d\u4eca\u56de\u306f8bit)\u3067\u3001\u6a2a\u5e45\u304c4\u306e\u500d\u6570\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u57fa\u672c\u7684\u306b\u306f32bit\u5358\u4f4d\u3067\u6271\u3048\u308b\u308f\u3051\u3067\u3059\u306d\u3002~~\u5b9f\u969b\u306b\u306f\u5143\u30c7\u30fc\u30bf\u304cRGBA\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u3067128bit\u3068\u3057\u3066\u6271\u3044\u3084\u3059\u304f\u306a\u308b\u306e\u3067\u3059\u304c~~\n\u3000\u5143\u306e\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u306f\u3001SandyBridge\u306e[Core i7-3770S](http://ark.intel.com/ja/products/65524/Intel-Core-i7-3770S-Processor-8M-Cache-up-to-3_90-GHz)\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u6574\u6570\u6f14\u7b97\u3068\u3057\u3066AVX2\u306f\u4f7f\u3048\u305a\u3001SSE\u30ca\u30f3\u30c8\u30ab(128bit)\u3067\u51e6\u7406\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u304a\u304a\u3088\u305d\u3053\u3046\u3044\u3063\u305f\u30b3\u30fc\u30c9\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n```speedtest3.cpp\n//! Compile: / GS / GL / analyze - / W3 / Gy / Zc:wchar_t / Zi / Gm - / O2 / sdl\n//!          / Fd\"Release\\vc140.pdb\" / Zc : inline / fp : precise / D \"WIN32\"\n//!          / D \"NDEBUG\" / D \"_CONSOLE\" / D \"_UNICODE\" / D \"UNICODE\"\n//!          / errorReport : prompt / WX - / Zc : forScope / arch : AVX / Gd\n//!          / Oy - / Oi / MD / Fa\"Release\\\" /EHsc /nologo /Fo\"Release\\\"\n//!          /Fp\"Release\\sample.pch\" \n\n#include<chrono>\n#include<cstdint>\n#include<iostream>\n#include<immintrin.h>\n\nusing Byte = uint8_t;\n\nvoid test(){\n\t//! \u753b\u9762\u30b5\u30a4\u30ba\u3092\u8a2d\u5b9a\u3059\u308b\n\tconst size_t w = 4321, h = 6789;\n\t//! \u30b9\u30c8\u30e9\u30a4\u30c9\u306e\u5927\u304d\u3055\u3092\u8a08\u7b97\u3059\u308b\n\t//! (\u6a2a\u5e45\u30924\u3067\u5272\u308a\u5207\u308c\u308b\u753b\u7d20\u6570\u306b\u3059\u308b)\n\tconst size_t stride = ( w + 3 ) & ~3;\n\t//! \u9818\u57df\u3092\u78ba\u4fdd\u3059\u308b(\u5404\u753b\u7d20\u306f1\u30d0\u30a4\u30c8)\n\t//! \u672c\u6765\u306a\u3089\u30a2\u30e9\u30a4\u30f3\u30e1\u30f3\u30c8\u3092\u63c3\u3048\u305f\u3044\u3068\u3053\u308d\u3060\u304c\u2026\u2026\n\tauto *a = new Byte[stride * h];\n\t//! \u4e8c\u6b21\u5143\u76f4\u4ea4\u5ea7\u6a19\u306eX\u30fbY\u306eXOR\u3092\u753b\u7d20\u306b\u4ee3\u5165\u3059\u308b\n\t//! (\u64ec\u4f3c\u7684\u306a\u753b\u50cf\u51e6\u7406\u306e\u30c6\u30b9\u30c8)\n\tfor(size_t y = 0; y < h; y++){\n\t\tauto p = a + y * stride;\n\t\tconst auto simd_y = _mm_set1_epi8(y);\n\t\tfor(size_t x = 0; x < (w >> 4) << 4; x += 16){\n\t\t\tconst auto simd_x = _mm_set_epi8(\n\t\t\t\tx+15,x+14,x+13,x+12,x+11,x+10,x+ 9,x+ 8,\n\t\t\t\tx+ 7,x+ 6,x+ 5,x+ 4,x+ 3,x+ 2,x+ 1,x+ 0);\n\t\t\tconst auto simd_xor = _mm_xor_si128(simd_x, simd_y);\n\t\t\t_mm_storeu_si128((__m128i*)(p + x), simd_xor);\n\t\t}\n\t\tfor(size_t x = (w >> 4) << 4; x < w; ++x){\n\t\t\tp[x] = static_cast<Byte>(x ^ y);\n\t\t}\n\t}\n\tdelete[] a;\n}\n\nint main(){\n\t//! \u8a08\u6e2c\u958b\u59cb\n\tauto start = std::chrono::system_clock::now();\n\t//! \u8a08\u6e2c\u7528\u30b3\u30fc\u30c9\n\tfor(size_t i = 0; i < 100; ++i){\n\t\ttest();\n\t}\n\t//! \u8a08\u6e2c\u7d42\u4e86\u30fb\u96c6\u8a08\n\tauto end = std::chrono::system_clock::now();\n\tauto msec = std::chrono::duration_cast<std::chrono::milliseconds>(end - start).count();\n\tstd::cout << msec << \"[ms]\" << std::endl;\n}\n```\n\n\u3000\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u7d50\u679c\u306f\u6b21\u306e\u901a\u308a\u3002\u3069\u3046\u3044\u3046\u308f\u3051\u304b**\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u7d44\u3093\u3067IDE\u304b\u3089\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u65b9\u304c\u901f\u304b\u3063\u305f**\u306e\u3067\u3001\u305d\u306e\u969b\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u30b3\u30e1\u30f3\u30c8\u306b\u4ed8\u8a18\u3057\u3066\u3044\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u305d\u306e\u307e\u307eAVX2\u5316(256bit\u6bce\u51e6\u7406\u3059\u308b\u3088\u3046\u306b)\u3059\u308b\u3068\u306a\u305c\u304b\u9045\u304f\u306a\u308a\u307e\u3057\u305f\u2026\u2026\u3002\n\n|\u8a00\u8a9e|\u901f\u5ea6(\u6700\u901f)|\u901f\u5ea6(\u5e73\u5747)|\u901f\u5ea6(\u6700\u9045)|\n|----|----------|----------|----------|\n|C++(\u305d\u306e3)|1460|1474.3|1489|\n\n# \u307e\u3068\u3081\n\u3000\u3044\u305a\u308c\u306b\u305b\u3088\u3001C++\u306e\u65b9\u304c\u4e00\u5fdc\u901f\u3044\u3088\u3046\u3067\u3059\u3002\u3088\u308a\u753b\u50cf\u51e6\u7406\u3089\u3057\u3044\u30b3\u30fc\u30c9\u3067\u3082\u5bfe\u6c7a\u3057\u3066\u307f\u305f\u3044\u3067\u3059\u306d\u3002\n\n|\u8a00\u8a9e|\u901f\u5ea6(\u6700\u901f)|\u901f\u5ea6(\u5e73\u5747)|\u901f\u5ea6(\u6700\u9045)|\n|----|----------|----------|----------|\n|C#(test1)|2320|2346.6|2382|\n|C#(test2)|1875|1893|1913|\n|C++|1594|1621.9|1656|\n|C++(\u305d\u306e2)|1695|1706.8|1723|\n|C++(\u305d\u306e3)|**1460**|**1474.3**|**1489**|\n\n# \u304a\u307e\u3051\n\u3000\u5143\u30b3\u30fc\u30c9\u306e\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3092\u691c\u8a3c\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001**x\u3068y\u3068\u306eXOR\u7d50\u679c\u3092Byte\u306b\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u90e8\u5206\u304c\u4e00\u756a\u91cd\u3044**\u3068\u3044\u3046\u8eab\u3082\u84cb\u3082\u306a\u3044\u7d50\u8ad6\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3054\u67fb\u53ce\u304f\u3060\u3055\u3044\u3002\n(\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u7528\u306b\u3001C++\u5074\u306f\u610f\u5473\u3092\u5909\u3048\u306a\u3044\u7bc4\u56f2\u5185\u3067\u30b3\u30fc\u30c9\u3092\u6539\u5909\u3057\u3066\u3044\u307e\u3059)\n\n**\u203bC++**\n![2016-05-02_213015.png](https://qiita-image-store.s3.amazonaws.com/0/29802/563a3832-4bb8-86f5-3c49-44f361e02e8d.png)\n**\u203bC#(test2)**\n![2016-05-02_213316.png](https://qiita-image-store.s3.amazonaws.com/0/29802/960611e2-37d0-7bc0-6ca5-1aa29ab54a8d.png)\n", "tags": ["C++", "\u6700\u9069\u5316", "SIMD"]}