{"context": "\n\nSTM32CubeMX\u3067 MiddleWare\u3068\u3057\u3066\u3001FreeRTOS\u304c\u3064\u3044\u3066\u304f\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u3001L\u30c1\u30ab\u3002\n\n\u624b\u9806\n\n\n\u305d\u306e\uff12\n\u3067\u306e\u8a2d\u5b9a\u306b\u52a0\u3048\u3066\u3001MiddleWares -> FREERTOS -> [v]Enable\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3001\u30b3\u30fc\u30c9\u751f\u6210\u3002\nMDK-ARM\u8d77\u52d5\nST-Link Debugger\u5468\u308a\u306a\u3069\u306e\u8a2d\u5b9a\u3092\u540c\u69d8\n\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\n\nmain.c\n...\n/* USER CODE BEGIN 0 */\n#define LED_GPIO_PORT           GPIOB\n#define LED_GREEN_GPIO_PIN      GPIO_PIN_7\n#define LED_BLUE_GPIO_PIN       GPIO_PIN_6\n\n// \u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001Task\u3064\u304f\u308b... defaultTask\u3063\u3066\u306e\u304c\u3042\u308b\u3093\u3060\u3051\u3069 .\nosThreadId LedGreenTaskHandle;\nvoid StartLedGreenTask(void const * argument)\n{\n  /* Infinite loop */\n  for(;;)\n  {\n    HAL_GPIO_WritePin(LED_GPIO_PORT,LED_GREEN_GPIO_PIN, GPIO_PIN_SET);\n    osDelay(125);\n    HAL_GPIO_WritePin(LED_GPIO_PORT,LED_GREEN_GPIO_PIN, GPIO_PIN_RESET);\n    osDelay(125);\n  }\n}\n\n/* USER CODE END 0 */\n\nint main(void)\n{\n...\n...\n  /* Create the thread(s) */\n  /* definition and creation of defaultTask */\n  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);\n  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);\n\n  /* USER CODE BEGIN RTOS_THREADS */\n  /* add threads, ... */\n\n  // LedGreenTask\u3092osThreadCreate\u3059\u308b .\n  osThreadDef(LedGreenTask, StartLedGreenTask, osPriorityNormal, 0, 64);\n  LedGreenTaskHandle = osThreadCreate(osThread(LedGreenTask), NULL);\n\n  /* USER CODE END RTOS_THREADS */\n...\n...\n\n\n\u3042\u3068\u306f\u3001 Build(F7), Burn(Flash->Download), Debug Start(Ctrl+F5), Run(F5)\n\nosThreadCreate()\u3084osDelay()\u306f\u3001cmsis_os.c\u3067\u306e\u5b9a\u7fa9\u3002FreeRTOS\u3092\u30e9\u30c3\u30d7\u3057\u3066\u308b\u3002\nCMSIS := The Cortex Microcontroller Software Interface Standard\nhttp://www.keil.com/pack/doc/CMSIS/General/html/index.html \n\nThe Cortex Microcontroller Software Interface Standard (CMSIS) is a vendor-independent hardware abstraction layer for the Cortex-M processor series and defines generic tool interfaces.\n\n\n# STM32CubeMX\u3067 MiddleWare\u3068\u3057\u3066\u3001FreeRTOS\u304c\u3064\u3044\u3066\u304f\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u3001L\u30c1\u30ab\u3002\n\n## \u624b\u9806\n1. [\u305d\u306e\uff12](http://qiita.com/mt08/items/853959f86d1051bbe7b8)\n\u3067\u306e\u8a2d\u5b9a\u306b\u52a0\u3048\u3066\u3001MiddleWares -> FREERTOS -> [v]Enable\u306b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3001\u30b3\u30fc\u30c9\u751f\u6210\u3002\n2. MDK-ARM\u8d77\u52d5\n3. ST-Link Debugger\u5468\u308a\u306a\u3069\u306e\u8a2d\u5b9a\u3092\u540c\u69d8\n4. \u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\n```c:main.c\n...\n/* USER CODE BEGIN 0 */\n#define LED_GPIO_PORT           GPIOB\n#define LED_GREEN_GPIO_PIN      GPIO_PIN_7\n#define LED_BLUE_GPIO_PIN       GPIO_PIN_6\n\n// \u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001Task\u3064\u304f\u308b... defaultTask\u3063\u3066\u306e\u304c\u3042\u308b\u3093\u3060\u3051\u3069 .\nosThreadId LedGreenTaskHandle;\nvoid StartLedGreenTask(void const * argument)\n{\n  /* Infinite loop */\n  for(;;)\n  {\n    HAL_GPIO_WritePin(LED_GPIO_PORT,LED_GREEN_GPIO_PIN, GPIO_PIN_SET);\n    osDelay(125);\n    HAL_GPIO_WritePin(LED_GPIO_PORT,LED_GREEN_GPIO_PIN, GPIO_PIN_RESET);\n    osDelay(125);\n  }\n}\n\n/* USER CODE END 0 */\n\nint main(void)\n{\n...\n...\n  /* Create the thread(s) */\n  /* definition and creation of defaultTask */\n  osThreadDef(defaultTask, StartDefaultTask, osPriorityNormal, 0, 128);\n  defaultTaskHandle = osThreadCreate(osThread(defaultTask), NULL);\n\n  /* USER CODE BEGIN RTOS_THREADS */\n  /* add threads, ... */\n\n  // LedGreenTask\u3092osThreadCreate\u3059\u308b .\n  osThreadDef(LedGreenTask, StartLedGreenTask, osPriorityNormal, 0, 64);\n  LedGreenTaskHandle = osThreadCreate(osThread(LedGreenTask), NULL);\n\n  /* USER CODE END RTOS_THREADS */\n...\n...\n``` \n\n\u3042\u3068\u306f\u3001 `Build(F7), Burn(Flash->Download), Debug Start(Ctrl+F5), Run(F5)`\n\n****\n`osThreadCreate()`\u3084`osDelay()`\u306f\u3001cmsis_os.c\u3067\u306e\u5b9a\u7fa9\u3002FreeRTOS\u3092\u30e9\u30c3\u30d7\u3057\u3066\u308b\u3002\n\n`CMSIS` := The Cortex Microcontroller Software Interface Standard\nhttp://www.keil.com/pack/doc/CMSIS/General/html/index.html \n> The *Cortex Microcontroller Software Interface Standard (CMSIS)* is a vendor-independent hardware abstraction layer for the Cortex-M processor series and defines generic tool interfaces.\n\n", "tags": ["STM32", "STM32CubeMX", "MDK-ARMLite", "FreeRTOS", "L\u30c1\u30ab"]}