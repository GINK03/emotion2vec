{"context": "\n\n\u306f\u3058\u3081\u306b\nVirtual DOM \u306e\u666e\u53ca\u3084 webpack \u306e\u74b0\u5883\u6574\u5099\u306a\u3069\u306b\u4f34\u3044\uff0c\u6700\u8fd1\u3067\u306f Isomorphic \u306a JS \u5b9f\u88c5\u3092\u3088\u304f\u898b\u304b\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\nIsomorphic JavaScript \u3067\u306f\uff0c\u30b5\u30fc\u30d0\uff65\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9593\u306e\u30ed\u30b8\u30c3\u30af\u3092\u540c\u671f\u3067\u304d\u308b\u3068\u3053\u308d\u306b\u5f37\u307f\u304c\u3042\u308a\u307e\u3059\uff0e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u306a\u3069\u304c\u3044\u3044\u4f8b\u3067\u3059\u304c\uff0c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u306e\u5165\u529b\u30c1\u30a7\u30c3\u30af\u3068\uff0c\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3067\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30c1\u30a7\u30c3\u30af\u3067\u540c\u4e00\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\uff0c\u30ed\u30d0\u30b9\u30c8\u306a\u8a2d\u8a08\u3092\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u4eca\u56de\u306f\uff0c\u3053\u308c\u3089\u306e\u5171\u901a\u5316\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306e\u4e00\u90e8\u305d\u306e\u3082\u306e\u3092\uff0c\u3055\u3089\u306b \u4ed5\u69d8\u66f8 \u3068\u3057\u3066\u3082\u5229\u7528\u3059\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u8003\u3048\u3066\u307f\u307e\u3059\uff0e\u3053\u308c\u306b\u3088\u308a\uff0c\u30b5\u30fc\u30d0\uff65\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9593\u306e\u540c\u671f\u3060\u3051\u3067\u306a\u304f\uff0c\u5b9f\u88c5\uff65\u4ed5\u69d8\u9593\u306e\u540c\u671f\u3082\u304a\u3053\u306a\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\u5b9f\u88c5\u4f8b\n\nURL\n1 \u3064\u306e\u4f8b\u3068\u3057\u3066\uff0c\u8907\u6570\u306e URL \u3092 1 \u30d5\u30a1\u30a4\u30eb\u306b\u5207\u308a\u51fa\u3057\uff0c\u4ed5\u69d8\u66f8\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u3066\u307f\u307e\u3059\uff0e\n\n\u5171\u901a\u5316\u3059\u308b\u30b3\u30fc\u30c9\n\u4ee5\u4e0b\u304c\u5171\u901a\u5316\u3059\u308b\u30b3\u30fc\u30c9\u3067\u3059\uff0e\u5927\u304d\u304f\u30b5\u30a4\u30c8\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3068 API \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e 2 \u3064\u306b\u5206\u3051\uff0c\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3054\u3068\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\uff0e\n\nurls.js\nexport const userPageUrl = {\n  site: {\n    /**\n     * \u30e6\u30fc\u30b6\u4e00\u89a7\u30da\u30fc\u30b8\n     */\n    users: '/users',\n    /**\n     * \u7279\u5b9a\u306e\u30e6\u30fc\u30b6\u306e\u30da\u30fc\u30b8\n     * @param {number} id - \u30e6\u30fc\u30b6\u306e id\n     */\n    user: '/user/{id}'\n  },\n  api: {\n    /**\n     * \u7279\u5b9a\u306e\u30e6\u30fc\u30b6\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b API\n     * @param {number} id - \u30e6\u30fc\u30b6\u306e id\n     */\n    user: '/api/user/{id}'\n  }\n}\n\n\n\n\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\n\u4ee5\u4e0b\u304c Node \u30b5\u30fc\u30d0 (Koa) \u306e\u5b9f\u88c5\u4f8b\u3067\u3059\uff0e\u4ee5\u4e0b\u3067\u5229\u7528\u3057\u3066\u3044\u308b koa-router \u3067\u306f\uff0c/user/:id \u306e\u3088\u3046\u306a\u5f62\u3067 URL \u3092\u767b\u9332\u3059\u308b\u3053\u3068\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u308b\u305f\u3081\uff0c{id} \u306e\u90e8\u5206\u306b :id \u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\u307e\u305f\uff0c\u5909\u6570\u5c55\u958b\u306b\u306f string-format \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u304c\uff0cES6 \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30ea\u30c6\u30e9\u30eb\u306a\u3069\u3067\u3082\u540c\u69d8\u306e\u3053\u3068\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\uff0e\nimport format from 'string-format'\nimport Router from 'koa-router'\nimport { userPageUrl } from 'urls'\n\nconst router = new Router()\n\nrouter.get(\n  userPageUrl.site.users,\n  (ctx, next) => { /* ... */ }\n)\n\nrouter.get(\n  format(userPageUrl.site.user, { id: ':id' }),  // '/user/:id'\n  (ctx, next) => {\n    // this.params.id \u3067 id \u3092\u53d6\u5f97\n  }\n) \n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\n\u4ee5\u4e0b\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u306e\u5b9f\u88c5\u4f8b\u3067\u3059\uff0eVirtual DOM \u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3082 API \u30ea\u30af\u30a8\u30b9\u30c8\u3082\uff0c\u5c55\u958b\u306e\u4ed5\u65b9\u306f Node \u3068\u540c\u69d8\u3067\u3059\uff0e\nimport format from 'string-format'\nimport axios from 'axios'\nimport { userPageUrl } from 'urls'\n\n/**\n * Virtual DOM \u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\n */\nexport const UserLink = ({ user }) => (\n  <a href={format(userPageUrl.site.user, { id: user.id })}>\n    {user.name}\n  </a>\n)\n\n/**\n * API \u30ea\u30af\u30a8\u30b9\u30c8\n */\nexport const fetchUserById = id => {\n  return dispatch => {\n    axios.get(format(userPageUrl.api.user, { id }))\n    .then(response => /* ... */)\n    .catch(error => /* ... */)\n  }\n}\n\n\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\uff0c\u4f8b\u3048\u3070 /api/user/{id} \u3092 /api/users/{id} \u306b\u5909\u66f4\u3057\u305f\u3044\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u3063\u305f\u3068\u3057\u3066\u3082\uff0c\u4ed5\u69d8\u66f8\u3068\u306a\u308b urls.js \u3092 1 \u884c\u66f8\u304d\u63db\u3048\u308b\u3060\u3051\u3067\uff0c\u30b5\u30fc\u30d0\uff65\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30b3\u30fc\u30c9\u306f\u4e00\u5207\u5909\u66f4\u3059\u308b\u3053\u3068\u306a\u3057\u306b\uff0c\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u540d\u306e\u5909\u66f4\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\uff0e\nurls.js \u306f\u5358\u306a\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5b9a\u7fa9\u306b\u3059\u304e\u306a\u3044\u306e\u3067\uff0c\u3053\u306e\u307e\u307e\u3067\u3082\u5341\u5206\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u6a5f\u80fd\u3092\u679c\u305f\u3057\u307e\u3059\u304c\uff0c\u5fc5\u8981\u3067\u3042\u308c\u3070 html \u3084 markdown \u306e\u7c21\u5358\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3057\u3066\u3082\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\n\u3082\u3046 1 \u3064\u306e\u4f8b\u3068\u3057\u3066\uff0c\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u5171\u901a\u5316\u3092\u6319\u3052\u3066\u307f\u307e\u3059\uff0eURL \u3068\u540c\u69d8\u306b 1 \u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u5171\u901a\u5316\u3057\u3066\u304a\u304f\u3053\u3068\u3067\uff0c\u30b5\u30fc\u30d0\uff65\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u305d\u308c\u305e\u308c\u3067\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u76f4\u63a5\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308b\u3068\u540c\u6642\u306b\uff0c\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u4ed5\u69d8\u3068\u3057\u3066\u306e\u5f79\u5272\u3082\u679c\u305f\u3057\u307e\u3059\uff0e\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f URL \u3068\u540c\u69d8\u306a\u306e\u3067\uff0c\u7d30\u304b\u3044\u8aac\u660e\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\u5171\u901a\u5316\u3059\u308b\u30b3\u30fc\u30c9\n\nstatus-code.js\nexport const errorCode = {\n  /**\n   * \u30e6\u30fc\u30b6\u306e\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u305f\u5834\u5408\n   */\n  unauthorized: 401,\n  /**\n   * \u30e6\u30fc\u30b6\u306b\u30a2\u30af\u30bb\u30b9\u6a29\u304c\u306a\u3044\u5834\u5408\n   */\n  forbidden: 403,\n  /**\n   * \u30ea\u30bd\u30fc\u30b9\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\n   */\n  notFound: 404\n}\n\n\n\n\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\nimport format from 'string-format'\nimport Router from 'koa-router'\nimport { userPageUrl } from 'urls'\nimport { errorCode } from 'status-code'\n\nconst router = new Router()\n\nrouter.get(\n  format(userPageUrl.api.user, { id: ':id' }),\n  async (ctx, next) => {\n    await userController.fetchUserById(this.params.id)\n    .then(response => this.body = response)\n    .catch(error => {\n      if (error instanceof UserNotFound) {\n        this.status = errorCode.notFound  // 404\n      } else {\n         // ...\n      }\n    })\n  }\n) \n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\nimport format from 'string-format'\nimport axios from 'axios'\nimport { userPageUrl } from 'urls'\nimport { errorCode } from 'status-code'\n\nexport const fetchUserById = id => {\n  return dispatch => {\n    axios.get(format(userPageUrl.api.user, { id }))\n    .then(response => /* ... */)\n    .catch(error => {\n      if (error.status = errorCode.notFound /* 404 */) {\n        // ...\n      } else {\n        // ...\n      }\n    })\n  }\n}\n\n\n\u304a\u308f\u308a\u306b\nIsomorphic \u306a\u74b0\u5883\u306b\u304a\u3044\u3066\uff0c\u30b5\u30fc\u30d0\uff65\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff65\u4ed5\u69d8\u306e 3 \u8005\u9593\u3067\u8db3\u4e26\u307f\u3092\u305d\u308d\u3048\u3066\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3067\u304d\u308b\u4ed5\u7d44\u307f\u3092\u5b9f\u73fe\u3057\u307e\u3057\u305f\uff0e\n\u5b9f\u88c5\u3068\u4ed5\u69d8\u66f8\u306e\u4e56\u96e2\u3092\u306a\u304f\u3057\u305f\u3044\u3068\u3044\u3063\u305f\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u81ea\u4f53\u306f\uff0c JSON Schema \u306a\u3069\u306b\u3082\u898b\u53d7\u3051\u3089\u308c\u307e\u3059\u304c\uff0c\u4eca\u56de\u4f8b\u306b\u6319\u3052\u305f URL \u8a2d\u8a08\u306a\u3069\u306e\u3088\u3046\u306b\uff0c\u3084\u308a\u65b9\u6b21\u7b2c\u3067 JSON API \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u9650\u3089\u305a\u69d8\u3005\u306a JS \u306e\u30b3\u30fc\u30c9\u304c\u4ed5\u69d8\u66f8\u3092\u517c\u306d\u3089\u308c\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n# \u306f\u3058\u3081\u306b\n\nVirtual DOM \u306e\u666e\u53ca\u3084 webpack \u306e\u74b0\u5883\u6574\u5099\u306a\u3069\u306b\u4f34\u3044\uff0c\u6700\u8fd1\u3067\u306f Isomorphic \u306a JS \u5b9f\u88c5\u3092\u3088\u304f\u898b\u304b\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\n\nIsomorphic JavaScript \u3067\u306f\uff0c\u30b5\u30fc\u30d0\uff65\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9593\u306e\u30ed\u30b8\u30c3\u30af\u3092\u540c\u671f\u3067\u304d\u308b\u3068\u3053\u308d\u306b\u5f37\u307f\u304c\u3042\u308a\u307e\u3059\uff0e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u30ed\u30b8\u30c3\u30af\u306a\u3069\u304c\u3044\u3044\u4f8b\u3067\u3059\u304c\uff0c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u306e\u5165\u529b\u30c1\u30a7\u30c3\u30af\u3068\uff0c\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3067\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30c1\u30a7\u30c3\u30af\u3067\u540c\u4e00\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u3067\u304d\uff0c\u30ed\u30d0\u30b9\u30c8\u306a\u8a2d\u8a08\u3092\u5b9f\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\u4eca\u56de\u306f\uff0c\u3053\u308c\u3089\u306e\u5171\u901a\u5316\u3055\u308c\u305f\u30b3\u30fc\u30c9\u306e\u4e00\u90e8\u305d\u306e\u3082\u306e\u3092\uff0c\u3055\u3089\u306b __\u4ed5\u69d8\u66f8__ \u3068\u3057\u3066\u3082\u5229\u7528\u3059\u308b\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u8003\u3048\u3066\u307f\u307e\u3059\uff0e\u3053\u308c\u306b\u3088\u308a\uff0c\u30b5\u30fc\u30d0\uff65\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9593\u306e\u540c\u671f\u3060\u3051\u3067\u306a\u304f\uff0c\u5b9f\u88c5\uff65\u4ed5\u69d8\u9593\u306e\u540c\u671f\u3082\u304a\u3053\u306a\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n# \u5b9f\u88c5\u4f8b\n\n## URL\n\n1 \u3064\u306e\u4f8b\u3068\u3057\u3066\uff0c\u8907\u6570\u306e URL \u3092 1 \u30d5\u30a1\u30a4\u30eb\u306b\u5207\u308a\u51fa\u3057\uff0c\u4ed5\u69d8\u66f8\u3068\u3057\u3066\u5229\u7528\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u3066\u307f\u307e\u3059\uff0e\n\n### \u5171\u901a\u5316\u3059\u308b\u30b3\u30fc\u30c9\n\n\u4ee5\u4e0b\u304c\u5171\u901a\u5316\u3059\u308b\u30b3\u30fc\u30c9\u3067\u3059\uff0e\u5927\u304d\u304f\u30b5\u30a4\u30c8\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3068 API \u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e 2 \u3064\u306b\u5206\u3051\uff0c\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3054\u3068\u306b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\uff0e\n\n```js:urls.js\nexport const userPageUrl = {\n  site: {\n    /**\n     * \u30e6\u30fc\u30b6\u4e00\u89a7\u30da\u30fc\u30b8\n     */\n    users: '/users',\n    /**\n     * \u7279\u5b9a\u306e\u30e6\u30fc\u30b6\u306e\u30da\u30fc\u30b8\n     * @param {number} id - \u30e6\u30fc\u30b6\u306e id\n     */\n    user: '/user/{id}'\n  },\n  api: {\n    /**\n     * \u7279\u5b9a\u306e\u30e6\u30fc\u30b6\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b API\n     * @param {number} id - \u30e6\u30fc\u30b6\u306e id\n     */\n    user: '/api/user/{id}'\n  }\n}\n```\n\n### \u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\n\n\u4ee5\u4e0b\u304c Node \u30b5\u30fc\u30d0 (Koa) \u306e\u5b9f\u88c5\u4f8b\u3067\u3059\uff0e\u4ee5\u4e0b\u3067\u5229\u7528\u3057\u3066\u3044\u308b [koa-router](https://github.com/alexmingoia/koa-router/tree/master/) \u3067\u306f\uff0c`/user/:id` \u306e\u3088\u3046\u306a\u5f62\u3067 URL \u3092\u767b\u9332\u3059\u308b\u3053\u3068\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u308b\u305f\u3081\uff0c`{id}` \u306e\u90e8\u5206\u306b `:id` \u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\u307e\u305f\uff0c\u5909\u6570\u5c55\u958b\u306b\u306f [string-format](https://www.npmjs.com/package/string-format) \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u304c\uff0cES6 \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30ea\u30c6\u30e9\u30eb\u306a\u3069\u3067\u3082\u540c\u69d8\u306e\u3053\u3068\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\uff0e\n\n```js\nimport format from 'string-format'\nimport Router from 'koa-router'\nimport { userPageUrl } from 'urls'\n\nconst router = new Router()\n\nrouter.get(\n  userPageUrl.site.users,\n  (ctx, next) => { /* ... */ }\n)\n\nrouter.get(\n  format(userPageUrl.site.user, { id: ':id' }),  // '/user/:id'\n  (ctx, next) => {\n    // this.params.id \u3067 id \u3092\u53d6\u5f97\n  }\n) \n```\n\n### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\n\n\u4ee5\u4e0b\u304c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u306e\u5b9f\u88c5\u4f8b\u3067\u3059\uff0eVirtual DOM \u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3082 API \u30ea\u30af\u30a8\u30b9\u30c8\u3082\uff0c\u5c55\u958b\u306e\u4ed5\u65b9\u306f Node \u3068\u540c\u69d8\u3067\u3059\uff0e\n\n```js\nimport format from 'string-format'\nimport axios from 'axios'\nimport { userPageUrl } from 'urls'\n\n/**\n * Virtual DOM \u306e\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\n */\nexport const UserLink = ({ user }) => (\n  <a href={format(userPageUrl.site.user, { id: user.id })}>\n    {user.name}\n  </a>\n)\n\n/**\n * API \u30ea\u30af\u30a8\u30b9\u30c8\n */\nexport const fetchUserById = id => {\n  return dispatch => {\n    axios.get(format(userPageUrl.api.user, { id }))\n    .then(response => /* ... */)\n    .catch(error => /* ... */)\n  }\n}\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\uff0c\u4f8b\u3048\u3070 `/api/user/{id}` \u3092 `/api/users/{id}` \u306b\u5909\u66f4\u3057\u305f\u3044\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u3063\u305f\u3068\u3057\u3066\u3082\uff0c\u4ed5\u69d8\u66f8\u3068\u306a\u308b `urls.js` \u3092 1 \u884c\u66f8\u304d\u63db\u3048\u308b\u3060\u3051\u3067\uff0c\u30b5\u30fc\u30d0\uff65\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30b3\u30fc\u30c9\u306f\u4e00\u5207\u5909\u66f4\u3059\u308b\u3053\u3068\u306a\u3057\u306b\uff0c\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u540d\u306e\u5909\u66f4\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\uff0e\n\n`urls.js` \u306f\u5358\u306a\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5b9a\u7fa9\u306b\u3059\u304e\u306a\u3044\u306e\u3067\uff0c\u3053\u306e\u307e\u307e\u3067\u3082\u5341\u5206\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u6a5f\u80fd\u3092\u679c\u305f\u3057\u307e\u3059\u304c\uff0c\u5fc5\u8981\u3067\u3042\u308c\u3070 html \u3084 markdown \u306e\u7c21\u5358\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\u3057\u3066\u3082\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\n## \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\n\n\u3082\u3046 1 \u3064\u306e\u4f8b\u3068\u3057\u3066\uff0c\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u5171\u901a\u5316\u3092\u6319\u3052\u3066\u307f\u307e\u3059\uff0eURL \u3068\u540c\u69d8\u306b 1 \u3064\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u5171\u901a\u5316\u3057\u3066\u304a\u304f\u3053\u3068\u3067\uff0c\u30b5\u30fc\u30d0\uff65\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u305d\u308c\u305e\u308c\u3067\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u76f4\u63a5\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308b\u3068\u540c\u6642\u306b\uff0c\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u4ed5\u69d8\u3068\u3057\u3066\u306e\u5f79\u5272\u3082\u679c\u305f\u3057\u307e\u3059\uff0e\n\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f URL \u3068\u540c\u69d8\u306a\u306e\u3067\uff0c\u7d30\u304b\u3044\u8aac\u660e\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\uff0e\n\n### \u5171\u901a\u5316\u3059\u308b\u30b3\u30fc\u30c9\n\n```js:status-code.js\nexport const errorCode = {\n  /**\n   * \u30e6\u30fc\u30b6\u306e\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u305f\u5834\u5408\n   */\n  unauthorized: 401,\n  /**\n   * \u30e6\u30fc\u30b6\u306b\u30a2\u30af\u30bb\u30b9\u6a29\u304c\u306a\u3044\u5834\u5408\n   */\n  forbidden: 403,\n  /**\n   * \u30ea\u30bd\u30fc\u30b9\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\n   */\n  notFound: 404\n}\n```\n\n### \u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\n\n```js\nimport format from 'string-format'\nimport Router from 'koa-router'\nimport { userPageUrl } from 'urls'\nimport { errorCode } from 'status-code'\n\nconst router = new Router()\n\nrouter.get(\n  format(userPageUrl.api.user, { id: ':id' }),\n  async (ctx, next) => {\n    await userController.fetchUserById(this.params.id)\n    .then(response => this.body = response)\n    .catch(error => {\n      if (error instanceof UserNotFound) {\n        this.status = errorCode.notFound  // 404\n      } else {\n      \t // ...\n      }\n    })\n  }\n) \n```\n\n### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\n\n```\nimport format from 'string-format'\nimport axios from 'axios'\nimport { userPageUrl } from 'urls'\nimport { errorCode } from 'status-code'\n\nexport const fetchUserById = id => {\n  return dispatch => {\n    axios.get(format(userPageUrl.api.user, { id }))\n    .then(response => /* ... */)\n    .catch(error => {\n      if (error.status = errorCode.notFound /* 404 */) {\n        // ...\n      } else {\n      \t// ...\n      }\n    })\n  }\n}\n```\n\n# \u304a\u308f\u308a\u306b\n\nIsomorphic \u306a\u74b0\u5883\u306b\u304a\u3044\u3066\uff0c\u30b5\u30fc\u30d0\uff65\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\uff65\u4ed5\u69d8\u306e 3 \u8005\u9593\u3067\u8db3\u4e26\u307f\u3092\u305d\u308d\u3048\u3066\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3067\u304d\u308b\u4ed5\u7d44\u307f\u3092\u5b9f\u73fe\u3057\u307e\u3057\u305f\uff0e\n\n\u5b9f\u88c5\u3068\u4ed5\u69d8\u66f8\u306e\u4e56\u96e2\u3092\u306a\u304f\u3057\u305f\u3044\u3068\u3044\u3063\u305f\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u81ea\u4f53\u306f\uff0c JSON Schema \u306a\u3069\u306b\u3082\u898b\u53d7\u3051\u3089\u308c\u307e\u3059\u304c\uff0c\u4eca\u56de\u4f8b\u306b\u6319\u3052\u305f URL \u8a2d\u8a08\u306a\u3069\u306e\u3088\u3046\u306b\uff0c\u3084\u308a\u65b9\u6b21\u7b2c\u3067 JSON API \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u9650\u3089\u305a\u69d8\u3005\u306a JS \u306e\u30b3\u30fc\u30c9\u304c\u4ed5\u69d8\u66f8\u3092\u517c\u306d\u3089\u308c\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n", "tags": ["React", "JavaScript", "reactjs", "Node.js", "isomorphic"]}