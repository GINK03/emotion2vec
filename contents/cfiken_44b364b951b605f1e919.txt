{"context": " More than 1 year has passed since last update.\u3053\u3093\u3070\u3093\u308f\u3002mixi\u30b0\u30eb\u30fc\u30d7 Advent Calendar 2015 14\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff01\n\u5b9f\u306f Diverse Advent Calendar 2015 \u306b\u3082\u3061\u3083\u3063\u304b\u308a\u767b\u9332\u3055\u305b\u3066\u3082\u3089\u3063\u3066\u3044\u307e\u3059\u3002 \u91cd\u8907\u767b\u9332\u306f\u51fa\u6765\u306a\u3044\u3088\u3046\u3067\u3057\u305fm(_ _)m\n\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n\u80cc\u666f\n\u7a81\u7136\u3067\u3059\u304c\u3001\u307f\u306a\u3055\u3093\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u306f\u4f7f\u3063\u3066\u3044\u307e\u3059\u304b\uff1f\n\u30df\u30af\u30b7\u30a3\u30b0\u30eb\u30fc\u30d7\u3067\u306f\u3001\u958b\u767a\u624b\u6cd5\u306b\u30b9\u30af\u30e9\u30e0\u3092\u53d6\u308a\u5165\u308c\u3066\u3044\u308b\u90e8\u7f72\u3082\u3042\u308a\u3001\u591a\u304f\u3067\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9+\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u304c\u30bf\u30b9\u30af\u7ba1\u7406\u306e\u4e00\u7aef\u3092\u62c5\u3063\u3066\u3044\u307e\u3059\u3002\nIT\u6642\u4ee3\u306eIT\u4f01\u696d\u3067\u3082\u90e8\u5206\u7684\u3068\u306f\u3044\u3048\u30bf\u30b9\u30af\u7ba1\u7406\u306b\u30a2\u30ca\u30ed\u30b0\u306a\u65b9\u6cd5\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u306f\u559c\u3079\u306a\u3044\u3053\u3068\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u30c7\u30b8\u30bf\u30eb\u3068\u30a2\u30ca\u30ed\u30b0\u3001\u305d\u308c\u305e\u308c\u306e\u826f\u3044\u6240\u3092\u4e0a\u624b\u304f\u4f7f\u3046\u3053\u3068\u304c\u5927\u5207\u3067\u3059\u306d\u3002\n\u3055\u3066\u3001\u79c1\u3082\u305d\u3093\u306aIT\u4f01\u696d\u306b\u52e4\u3081\u308b\u4eba\u9593\u306a\u306e\u3067\u3001\u5f53\u7136\u81ea\u5b85\u306b\u3082\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059(\u2193\u81ea\u5b85\u306e\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u306e\u56f3)\u3002\n\n(\u6c5a\u304b\u3063\u305f\u306e\u3067\u9811\u5f35\u3063\u3066\u6383\u9664\u3057\u307e\u3057\u305f)\n\u305d\u308c\u3063\u307d\u304f\u30bf\u30b9\u30af\u3092\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306b\u66f8\u3044\u3066\u8cbc\u308b\u3053\u3068\u3067\u6bce\u671d\u76ee\u304c\u899a\u3081\u308b\u3068\u540c\u6642\u306b\u8272\u3005\u3068\u78ba\u8a8d\u3067\u304d\u3066\u975e\u5e38\u306b\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u3044\u3056\u5916\u51fa\u3059\u308b\u3068\u4f55\u304c\u30bf\u30b9\u30af\u3060\u3063\u305f\u304b\u5fd8\u308c\u304c\u3061\u3067\u3059\u3002\n\u4eca\u56de\u306f\u3001\u300c\u5916\u51fa\u4e2d\u3067\u3082\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u78ba\u8a8d\u3057\u305f\u3044\uff01\u300d\u3068\u3044\u3046\u601d\u3044\u3092\u5b9f\u73fe\u3055\u305b\u308b\u305f\u3081\u3001\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u306e\u5199\u771f\u3092\u3068\u3063\u3066\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u3092\u30c7\u30b8\u30bf\u30eb\u3067\u7ba1\u7406\u3059\u308b\u3053\u3068\u306b\u8a66\u307f\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u9053\u7b4b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n(\u3082\u3063\u3068\u826f\u3044\u3084\u308a\u65b9\u304c\u3042\u308b\u3088\uff01\u3068\u3044\u3046\u5834\u5408\u306f\u3054\u6307\u6458\u304f\u3060\u3055\u308b\u3068\u5e78\u3044\u3067\u3059\uff01)\n\u74b0\u5883: Python 3.4.3 (pyenv), OpenCV 3.0.0\n\n\u6d41\u308c\n\nOpenCV \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u753b\u50cf\u306e2\u5024\u5316\u304b\u3089\u8f2a\u90ed\u691c\u51fa\n\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u90e8\u5206\u3092\u53d6\u5f97\n\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306e\u8272\u3067\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\n\nOpenCV \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npyenv\u74b0\u5883\u3060\u3068\u3001Anaconda\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308c\u3070\u7c21\u5358\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\nconda install -c https://conda.binstar.org/menpo opencv\n\u4eca\u56de\u306fpyenv\u3067\u65e2\u306b\u3042\u308b\u74b0\u5883\u306e\u4e0a\u3067\u4f7f\u3044\u305f\u304b\u3063\u305f\u306e\u3067\u3001homebrew \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\nbrew tap homebrew/science\nbrew install opencv3 --with-python3\nbrew link opencv3 --force\n\npyenv \u74b0\u5883\u306e Python 3 \u304b\u3089 OpenCV \u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u30ea\u30f3\u30af\u3092\u306f\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nln -s /usr/local/Cellar/opencv3/3.0.0/lib/python3.4/site-packages/cv2.so ~/[pyenv_path]/versions/3.4.3/lib/python3.4/site-packages/cv2.so \n\nipython \u306a\u3069\u306e\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u74b0\u5883\u3067 cv2 \u304c import \u51fa\u6765\u308c\u3070\u5b8c\u4e86\u3067\u3059\u3002\n$ ipython\nIn [1]: import cv2\nIn [2]: cv2.__version__\nOut[2]: '3.0.0'\n\n\n\u753b\u50cf\u306e2\u5024\u5316\u304b\u3089\u8f2a\u90ed\u691c\u51fa\nOpenCV \u3092\u4f7f\u3063\u3066\u753b\u50cf\u306e2\u5024\u5316\u3092\u884c\u3044\u3001\u305d\u3053\u304b\u3089\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u90e8\u5206\u3060\u3051\u53d6\u308a\u51fa\u3059\u305f\u3081\u3001\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306e\u8f2a\u90ed\u90e8\u5206\u306e\u53d6\u5f97\u3092\u884c\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u6211\u304c\u5bb6\u306e\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u306e\u3053\u306e\u5199\u771f\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\uff01\n\n\u307e\u305a\u306f2\u5024\u5316\u307e\u3067\u306e\u90e8\u5206\u3092\u3002\nimage_dir = './image/'\nimage_file = 'xxx.jpg'\nim = cv2.imread(image_dir + image_file, 1) #(A)\nim_gray = cv2.cvtColor(im, cv2.COLOR_BGR2GRAY) #(B)\nim_blur = cv2.GaussianBlur(im_gray, (11, 11), 0) #(C)\n\n(A)\u3067\u753b\u50cf\u30923\u30ab\u30e9\u30fc\u30c1\u30e3\u30cd\u30eb\u3067\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u4e8c\u5024\u5316\u3092\u884c\u3046\u306b\u306f\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306e\u753b\u50cf\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u305d\u308c\u3092\u884c\u3063\u3066\u3044\u308b\u306e\u304c(B)\u306b\u3042\u305f\u308a\u307e\u3059\u3002(B)\u306e\u7b2c\u4e8c\u5f15\u6570\u306f\u5b9a\u6570\u3067\u3001\u4ed6\u306b\u3082BGR2HSV\u7b49\u69d8\u3005\u306a\u5909\u63db\u3092cvtColor\u306b\u3088\u3063\u3066\u884c\u3048\u307e\u3059\u3002\n\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5316\u3057\u305f\u753b\u50cf\u306e\u3057\u304d\u3044\u5024\u3092\u5224\u5225\u3057\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3001(C)\u3067\u30ac\u30a6\u30b7\u30a2\u30f3\u30d6\u30e9\u30fc\u3092\u304b\u3051\u3066\u3044\u307e\u3059\u3002\n\u524d\u51e6\u7406\u306e\u7d42\u308f\u3063\u305f\u753b\u50cf\u306b2\u5024\u5316\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u30022\u5024\u5316\u3068\u3044\u3046\u306e\u306f\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3067\u4e0e\u3048\u3089\u308c\u3066\u3044\u308b\u753b\u50cf\u3092(\u57fa\u672c\u7684\u306b\u306f)0\u3068255\u306e2\u8272\u3067\u7f6e\u304d\u63db\u3048\u308b\u3082\u306e\u3067\u3059\u3002\u3053\u3053\u3067\u4f7f\u7528\u3059\u308b\u306e\u304c threshold \u95a2\u6570\u306a\u306e\u3067\u3059\u304c\u3001\u5168\u4f53\u306b\u5bfe\u3057\u3066\u3057\u304d\u3044\u5024\u3092\u8a2d\u5b9a\u3059\u308b threshold\u95a2\u6570 \u3068\u3001\u90e8\u5206\u306b\u5fdc\u3058\u3066\u9069\u5fdc\u7684\u306b\u3057\u304d\u3044\u5024\u3092\u8a2d\u5b9a\u3059\u308b adaptiveThreshold \u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u3002\nret1, th1 = cv2.threshold(im_blur, 127, 255, cv2.THRESH_BINARY_INV)\nth2 = cv2.adaptiveThreshold(im_blur, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY_INV, 11, 3)\n\nthreshold \u306f\u7b2c\u4e8c\u5f15\u6570\u3092\u3057\u304d\u3044\u5024\u3068\u3057\u3066\u3001\u753b\u50cf\u5168\u4f53\u306e2\u5024\u5316\u3092\u884c\u3044\u307e\u3059\u3002\nadaptiveThreshold \u306e\u7b2c5\u5f15\u6570\u306f\u3001\u3057\u304d\u3044\u5024\u3092\u53d6\u308b\u969b\u306b\u898b\u308b\u7bc4\u56f2\u3067\u3001\u305d\u306e\u7bc4\u56f2\u304b\u3089\u8a08\u7b97\u3057\u305f\u3057\u304d\u3044\u5024\u304b\u3089\u7b2c6\u5f15\u6570\u3092\u5f15\u3044\u305f\u3082\u306e\u304c\u6700\u7d42\u7684\u306a\u3057\u304d\u3044\u5024\u306b\u306a\u308a\u307e\u3059\u3002\n\u7bc4\u56f2\u5185\u306e\u3057\u304d\u3044\u5024\u306e\u8a08\u7b97\u6cd5\u306f\u3001\u5358\u7d14\u306b\u7bc4\u56f2\u5185\u306e\u30d4\u30af\u30bb\u30eb\u306e\u5e73\u5747\u3092\u53d6\u308b cv2.ADAPTIVE_THRESH_MEAN_C \u3068\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\u306e\u91cd\u307f\u3092\u3064\u3051\u3066\u5e73\u5747\u3092\u53d6\u308b cv2.ADAPTIVE_THRESH_GAUSSIAN_C \u306e\u4e8c\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\nthreshold \u306e\u7b2c4\u5f15\u6570\u3001adaptiveThreshold \u306e\u7b2c3\u5f15\u6570\u306f\u4ed6\u306b\u3082\u8272\u3005\u306a\u5b9a\u6570\u3092\u53d6\u308a\u307e\u3059\u3002\n\u8a73\u7d30\u306f\u53c2\u8003\u4e00\u89a7\u304b\u3089\u3069\u3046\u305e\u3002\n\u9069\u5f53\u306a\u753b\u50cf\u306b\u9069\u7528\u3057\u3066\u307f\u305f\u306e\u304c\u4e0b\u56f3\u3067\u3059\u3002\n\n\u4eca\u56de\u306f\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u90e8\u5206\u3092\u691c\u51fa\u3057\u305f\u3044\u305f\u3081\u3001\u5168\u4f53\u3067\u3057\u304d\u3044\u5024\u3092\u6c7a\u3081\u308b threshold \u306b\u3001\u3057\u304d\u3044\u5024\u3092\u4e0a\u624b\u304f\u6c7a\u3081\u3066\u304f\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3042\u308b OTSU \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\u4f7f\u7528\u81ea\u4f53\u306f\u975e\u5e38\u306b\u7c21\u5358\u3067\u3001\u5148\u307b\u3069\u306e\u95a2\u6570\u306b\u5c11\u3057\u8db3\u3059\u3060\u3051\u3067\u3059\u3002\nth = cv2.threshold(blur, 0, 255, cv2.THRESH_BINARY_INV+cv2.THRESH_OTSU)[1]\n\n\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u3001OTSU\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0(\u5927\u6d25\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0)\u3068\u3044\u3046\u306e\u306f\u5225\u6bb5\u3080\u305a\u304b\u3057\u30fc\u3044\u3082\u306e\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u4e00\u822c\u7684\u306b\u306f\u5224\u5225\u5206\u6790\u6cd5\u3001\u30d5\u30a3\u30c3\u30b7\u30e3\u30fc\u306e\u7dda\u5f62\u5224\u5225\u306a\u3069\u3068\u547c\u3070\u308c\u3066\u3044\u308b\u3082\u306e\u3067\u3059\u3002\n2\u3064\u306e\u30af\u30e9\u30b9(\u3053\u3053\u3067\u306f\u753b\u50cf\u306e\u80cc\u666f\u3068\u7269\u4f53\u3001\u7b49)\u304c\u3042\u308b\u3068\u304d\u306b(1)\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u5185\u306e\u5206\u6563\u304c\u5c0f\u3055\u304f\u3001(2)\u30af\u30e9\u30b9\u9593\u306e\u5206\u6563\u304c\u5927\u304d\u304f\u306a\u308b\u3001\u3053\u306e(1)\u3068(2)\u3092\u6e80\u305f\u3059\u3088\u3046\u306a\u3057\u304d\u3044\u5024\u3092\u6c42\u3081\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u3053\u3061\u3089\u304c\u4eba\u51fa\u3067\u3057\u304d\u3044\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u306a\u304f\u3001\u753b\u50cf\u3060\u3051\u6e21\u305b\u3070\u81ea\u52d5\u3067\u6700\u9069\u306a\u3057\u304d\u3044\u5024\u3092\u7b97\u51fa\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306f\"\u5224\u5225\u5206\u6790\u6cd5\"\u306a\u3069\u3067\u8abf\u3079\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u6700\u521d\u306b\u4e0a\u3052\u305f\u5199\u771f\u306b\u3053\u308c\u3092\u9069\u7528\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5168\u7136\u53d6\u308c\u3066\u306a\u3044\uff01\uff01\uff01\uff01\uff01\n\u305f\u3060\u5b57\u306e\u6c5a\u3055\u304c\u969b\u7acb\u3063\u305f\u3060\u3051\u307f\u305f\u3044\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u305d\u306e\u307e\u307e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u3059\u308b\u3060\u3051\u3067\u306f\u53d6\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u4eca\u56de\u306f\u6b21\u306e5\u3064\u306e2\u5024\u5316\u753b\u50cf\u306e\u548c\u3092\u6700\u7d42\u7684\u306a2\u5024\u5316\u753b\u50cf\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n\ncvtColor \u3092\u4f7f\u7528\u3057\u3066\u5143\u753b\u50cf\u30922\u5024\u5316\u3057\u305f\u3082\u306e\n\u5143\u306e3\u3064\u306e\u30ab\u30e9\u30fc\u30c1\u30e3\u30cd\u30eb\u305d\u308c\u305e\u308c\u306e\u5024\u3092\u4e00\u6b21\u5143\u306e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u306b\u3057\u305f\u3082\u306e\n3\u3064\u306e\u30ab\u30e9\u30fc\u30c1\u30e3\u30cd\u30eb\u306e\u8d64\u304b\u3089\u4ed6\u306e\u9752\u3068\u7dd1\u3092\u5f15\u3044\u305f\u3082\u306e\u306e\u548c(\u8d64\u304c\u306a\u304b\u306a\u304b\u53d6\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u7121\u7406\u3084\u308a\u53d6\u308b\u305f\u3081\u306b\u4f5c\u6210\u3001im\u3092\u5143\u753b\u50cf\u3068\u3057\u3066\u3001\u4e0b\u8a18\u306e\u5024)\n\n(np.abs(int_im[:,:,2] - int_im[:,:,1]) + np.abs(int_im[:,:,2] - int_im[:,:,0]))\n\n\u3053\u308c\u3089\u304b\u30895\u7a2e\u985e\u306e2\u5024\u5316\u753b\u50cf\u3092\u4f5c\u6210\u3057\u3001\u5168\u3066\u306e\u548c\u3092\u53d6\u3063\u3066\u4f5c\u6210\u3057\u305f\u753b\u50cf\u304c\u3053\u3061\u3089\uff01\n\n\u305d\u308c\u3063\u307d\u3044\u611f\u3058\u306b\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u6b21\u306b\u8f2a\u90ed\u306e\u5ea7\u6a19\u3092\u53d6\u5f97\u3057\u305f\u3044\u306e\u3067\u3059\u304c\u3001OpenCV\u306b\u306f\u8f2a\u90ed\u62bd\u51fa\u3059\u308b findContours \u95a2\u6570\u304c\u65e2\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u305d\u308c\u3092\u4f7f\u3044\u307e\u3059\u3002\ncontours = cv2.findContours(im_th, cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)[1]\n\n\u3053\u308c\u306b\u3088\u308a\u3001\u8f2a\u90ed\u90e8\u5206\u306e\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u90e8\u5206\u3092\u53d6\u5f97\n\u305d\u306e\u5f8c\u306f\u3001\u53d6\u5f97\u3057\u305f\u8f2a\u90ed\u306e\u9802\u70b9\u3092\u5143\u306b\u9762\u7a4d\u304c\u4e00\u5b9a\u4ee5\u4e0a\u306e\u5927\u304d\u3055\u306e\u3068\u3053\u308d\u3060\u3051\u53d6\u308a\u51fa\u3057\u3001approxPolyDP \u95a2\u6570\u306b\u3088\u308a\u76f4\u7dda\u8fd1\u4f3c\u306b\u884c\u3063\u3066\u3001\u5f97\u3089\u308c\u305f\u56db\u89d2\u5f62\u90e8\u5206\u3092\u5143\u306e\u753b\u50cf\u304b\u3089\u5207\u308a\u629c\u3044\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n# filtered with area over (all area / 100 )\nth_area = im.shape[0] * im.shape[1] / 100\ncontours_large = list(filter(lambda c:cv2.contourArea(c) > th_area, contours))\n\noutputs = []\nrects = []\napproxes = []\n\nfor (i,cnt) in enumerate(contours_large):\n    arclen = cv2.arcLength(cnt, True)\n    approx = cv2.approxPolyDP(cnt, 0.02*arclen, True)\n    if len(approx) < 4:\n        continue\n    approxes.append(approx)\n    rect = getRectByPoints(approx)\n    rects.append(rect)\n    outputs.append(getPartImageByRect(rect))\n    cv2.imwrite('./out/output'+str(i)+'.jpg', getPartImageByRect(rect))\n\n\n\u3053\u3053\u3067\u3001getPartImageByRect, getPartImageByRect \u3068\u3057\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306a\u753b\u50cf\u304b\u3089\u6307\u5b9a\u7bc4\u56f2\u3092\u5207\u308a\u629c\u3044\u305f\u753b\u50cf\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\ndef getRectByPoints(points):\n    # prepare simple array \n    points = list(map(lambda x: x[0], points))\n\n    points = sorted(points, key=lambda x:x[1])\n    top_points = sorted(points[:2], key=lambda x:x[0])\n    bottom_points = sorted(points[2:4], key=lambda x:x[0])\n    points = top_points + bottom_points\n\n    left = min(points[0][0], points[2][0])\n    right = max(points[1][0], points[3][0])\n    top = min(points[0][1], points[1][1])\n    bottom = max(points[2][1], points[3][1])\n    return (top, bottom, left, right)\n\ndef getPartImageByRect(rect):\n    img = cv2.imread(image_dir + image_file, 1)\n    return img[rect[0]:rect[1], rect[2]:rect[3]]\n\n\n\u3053\u308c\u3067\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u90e8\u5206\u3092\u5143\u753b\u50cf\u304b\u3089\u5207\u308a\u629c\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u5143\u753b\u50cf\u306b\u67a0\u3092\u5165\u308c\u3066\u307f\u305f\u306e\u304c\u6b21\u306e\u753b\u50cf\u3067\u3059\u3002\n\n\u7121\u4e8b\u306b\u5168\u3066\u306e\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u304c\u691c\u51fa\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u3042\u3068\u306f\u305d\u308c\u305e\u308c\u306e\u753b\u50cf\u3092\u30a2\u30d7\u30ea\u3067\u6301\u3064\u306a\u308a\u30b5\u30fc\u30d0\u3067\u7ba1\u7406\u3059\u308b\u306a\u308a\u3059\u308c\u3070\u30c7\u30b8\u30bf\u30eb\u7ba1\u7406\u3078\u306e\u9053\u304c\u62d3\u3051\u307e\u3059\u306d\u3002\n\n\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306e\u8272\u3067\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u306f\u3001\u591a\u304f\u306e\u5834\u5408\u8272\u306b\u3088\u3063\u3066\u30bf\u30b9\u30af\u3092\u30ab\u30c6\u30b4\u30e9\u30a4\u30ba\u3057\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001\u305d\u3053\u3082\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\u6b21\u306e\u3088\u3046\u306a\u6d41\u308c\u3067\u8003\u3048\u307e\u3059\u3002\n\n\u4ee3\u8868\u8272\u306e\u53d6\u5f97\n\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\u540c\u3058\u30af\u30e9\u30b9\u30bf\u306e\u5e73\u5747\u8272\u3092\u305d\u306e\u30ab\u30c6\u30b4\u30ea\u306e\u8272\u3068\u3057\u3066\u67a0\u3092\u3064\u3051\u308b\n\n\u307e\u305a\u3001\u305d\u308c\u305e\u308c\u5207\u308a\u629c\u3044\u305f\u753b\u50cf\u306e\u4ee3\u8868\u8272\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u73fe\u5728\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u90e8\u5206\u306e\u307f\u5207\u308a\u629c\u304b\u308c\u305f\u753b\u50cf\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u753b\u50cf\u306f\u3001\u5468\u308a\u306e\u767d\u3001\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306e\u8272\u3001\u6587\u5b57\u8272\u306e\u9ed2\u3001\u306e\u4e09\u8272\u304c\u5165\u3063\u3066\u3044\u308b\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\u3059\u306a\u308f\u3061\u3001\u7c21\u5358\u306b\u5404\u30ab\u30e9\u30fc\u30c1\u30e3\u30cd\u30eb\u306e\u4e2d\u592e\u5024\u3092\u4ee3\u8868\u8272\u3068\u3059\u308c\u3070\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306e\u8272\u304c\u53d6\u308c\u305d\u3046\u3067\u3059\u3002\nt_colors = []\nfor (i,out) in enumerate(outputs):\n    color = np.zeros(3)\n    for j in range(3):\n        color[j] = np.median(out[:,:,j])\n    t_colors.append(color)\nt_colors = np.array(t_colors)\n\n\u6b21\u306b\u3001\u5f97\u3089\u308c\u305f\u305d\u308c\u305e\u308c\u306e\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306e\u4ee3\u8868\u5024\u3092KMeans\u6cd5\u3092\u7528\u3044\u3066\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u884c\u3044\u307e\u3057\u305f\u3002\nKMeans\u6cd5\u306b\u3088\u308b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306b\u3064\u3044\u3066\u306f\u3001Qiita\u3092\u59cb\u3081\u3068\u3057\u305f\u30cd\u30c3\u30c8\u4e0a\u306b\u305f\u304f\u3055\u3093\u306e\u5206\u304b\u308a\u3084\u3059\u3044\u89e3\u8aac\u304c\u3042\u308b\u306e\u3067\u305d\u3061\u3089\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nfrom sklearn.cluster import KMeans\n# KMeans\ncluster_num = 4 # num of colors\nkmeans = KMeans(n_clusters=cluster_num).fit(t_colors)\nlabels = kmeans.labels_\ncenters = np.array(kmeans.cluster_centers_).astype(np.int) # convert into int to express color\n\n\u3055\u3066\u3001\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3055\u308c\u305f\u7d50\u679c\u306e\u8272(\u3068\u6570\u5b57)\u3092\u5143\u306e\u753b\u50cf\u306b\u8db3\u3057\u305f\u3082\u306e\u304c\u3053\u3061\u3089\u3067\u3059\uff01\n\u304b\u306a\u308a\u898b\u3065\u3089\u3044\u3067\u3059\u304c\u30010~3\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u7d50\u679c\u306e\u30e9\u30d9\u30eb\u3092\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u5de6\u4e0a\u306b\u66f8\u304d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u7d50\u679c\u3092\u898b\u308b\u3068\u3001\u9752\u3001\u8d64\u306f\u4e0a\u624b\u304f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u9ec4\u8272\u3068\u9ec4\u7dd1\u3067\u5149\u306e\u5f53\u305f\u308a\u5177\u5408\u306e\u305b\u3044\u304b\u3001\u305d\u308c\u305e\u308c\u304c\u6df7\u3056\u3063\u305f\u30af\u30e9\u30b9\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u3053\u308c\u306f\u3001\u753b\u50cf\u306eRGB\u30c1\u30e3\u30cd\u30eb\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3060\u3051\u3092\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306b\u4f7f\u7528\u3057\u305f\u306e\u3067\u3001HSV\u306b\u5909\u63db\u3057\u3066\u5f69\u5ea6\u306e\u60c5\u5831\u3082\u5165\u308c\u308b\u3068\u307e\u305f\u5909\u308f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u4eca\u56de\u306f\u3053\u3053\u307e\u3067\u3067\u3059\u3002\n\n\u4eca\u5f8c\n\u4eca\u56de\u306e\u4f8b\u306f\u3001\u3042\u304f\u307e\u3067\u79c1\u306e\u81ea\u5b85\u306e\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u3060\u3051\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u3082\u3063\u3068\u5e83\u304f\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306b\u95a2\u3057\u3066\u3082\u4e0d\u5341\u5206\u3067\u3001\u73fe\u72b6\u3067\u306f\u8272\u6570\u304c\u5897\u3048\u305f\u969b\u306b\u5bfe\u5fdc\u51fa\u6765\u3066\u3044\u307e\u305b\u3093\u3002\n\u3042\u3068\u81ea\u5206\u3067\u6bce\u671d\u5199\u771f\u53d6\u308b\u306e\u3082\u99ac\u9e7f\u3089\u3057\u3044\u306e\u3067\u3001\u8a87\u308a\u3092\u304b\u3076\u3063\u3066\u3044\u308bRaspberry Pi\u3055\u3093\u3092\u5f15\u3063\u5f35\u3063\u3066\u305d\u3053\u3089\u3078\u3093\u3082\u81ea\u52d5\u5316\u3057\u3066\u307f\u305f\u3044\u306e\u3067\u3001\u307e\u305f\u7d9a\u304d\u3068\u3057\u3066\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u81ea\u5b85\u5c0e\u5165\u3092\u9032\u3081\u307e\u304f\u308b\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u3057\u3066\u3044\u305f\u3089\u3042\u3093\u307e\u308a\u305d\u3053\u306b\u89e6\u308c\u3089\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u7686\u3055\u3093\u3082\u81ea\u5b85\u306b\u4e00\u53f0\u306f\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u3092\u5c0e\u5165\u3057\u307e\u3057\u3087\u3046\u3002\u30bf\u30b9\u30af\u7ba1\u7406\u3082\u51fa\u6765\u308b\u3001\u8a08\u7b97\u3082\u3067\u304d\u308b\u3001\u30e1\u30e2\u66f8\u304d\u3082\u51fa\u6765\u308b\u3002\u8272\u3005\u6357\u308a\u307e\u3059\u3088\u3002\n\u660e\u65e5\u306f\u3001@isaoshimizu \u3055\u3093\u304c\u306a\u306b\u304b\u66f8\u3044\u3066\u304f\u3060\u3055\u308a\u307e\u3059\u3002\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n\u53c2\u8003\nMac \u306b Python 3.4 + OpenCV 3.0 \u306e\u74b0\u5883\u3092\u3064\u304f\u308b\nhttps://librabuch.jp/2015/07/python-34_opencv-30_mac/\nOpenCV\u3067\u8f2a\u90ed\u62bd\u51fa\nhttp://docs.opencv.org/master/d4/d73/tutorial_py_contours_begin.html#gsc.tab=0\ncv2.threshold (OpenCV 2.1)\nhttp://opencv.jp/opencv-2.1/cpp/miscellaneous_image_transformations.html#cv-threshold\ncv2.adaptiveThreshold (OpenCV 2.1)\nhttp://opencv.jp/opencv-2.1/cpp/miscellaneous_image_transformations.html#cv-adaptivethreshold\ncv2.findContours (OpenCV 2.1)\nhttp://opencv.jp/opencv-2.1/cpp/structural_analysis_and_shape_descriptors.html#cv-findcontours\n\u3053\u3093\u3070\u3093\u308f\u3002[mixi\u30b0\u30eb\u30fc\u30d7 Advent Calendar 2015](http://qiita.com/advent-calendar/2015/mixi) 14\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff01\n~~\u5b9f\u306f [Diverse Advent Calendar 2015](http://qiita.com/advent-calendar/2015/diverse) \u306b\u3082\u3061\u3083\u3063\u304b\u308a\u767b\u9332\u3055\u305b\u3066\u3082\u3089\u3063\u3066\u3044\u307e\u3059\u3002~~ \u91cd\u8907\u767b\u9332\u306f\u51fa\u6765\u306a\u3044\u3088\u3046\u3067\u3057\u305fm(_ _)m\n\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n# \u80cc\u666f\n\n\u7a81\u7136\u3067\u3059\u304c\u3001\u307f\u306a\u3055\u3093\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u306f\u4f7f\u3063\u3066\u3044\u307e\u3059\u304b\uff1f\n\u30df\u30af\u30b7\u30a3\u30b0\u30eb\u30fc\u30d7\u3067\u306f\u3001\u958b\u767a\u624b\u6cd5\u306b\u30b9\u30af\u30e9\u30e0\u3092\u53d6\u308a\u5165\u308c\u3066\u3044\u308b\u90e8\u7f72\u3082\u3042\u308a\u3001\u591a\u304f\u3067\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9+\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u304c\u30bf\u30b9\u30af\u7ba1\u7406\u306e\u4e00\u7aef\u3092\u62c5\u3063\u3066\u3044\u307e\u3059\u3002\nIT\u6642\u4ee3\u306eIT\u4f01\u696d\u3067\u3082\u90e8\u5206\u7684\u3068\u306f\u3044\u3048\u30bf\u30b9\u30af\u7ba1\u7406\u306b\u30a2\u30ca\u30ed\u30b0\u306a\u65b9\u6cd5\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u306f\u559c\u3079\u306a\u3044\u3053\u3068\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u30c7\u30b8\u30bf\u30eb\u3068\u30a2\u30ca\u30ed\u30b0\u3001\u305d\u308c\u305e\u308c\u306e\u826f\u3044\u6240\u3092\u4e0a\u624b\u304f\u4f7f\u3046\u3053\u3068\u304c\u5927\u5207\u3067\u3059\u306d\u3002\n\n\u3055\u3066\u3001\u79c1\u3082\u305d\u3093\u306aIT\u4f01\u696d\u306b\u52e4\u3081\u308b\u4eba\u9593\u306a\u306e\u3067\u3001\u5f53\u7136\u81ea\u5b85\u306b\u3082\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u304c\u3042\u308a\u307e\u3059(\u2193\u81ea\u5b85\u306e\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u306e\u56f3)\u3002\n![\u6211\u304c\u5bb6\u306e\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u306e\u56f3](https://qiita-image-store.s3.amazonaws.com/0/49409/31f62b3e-4082-79d5-439e-fa3561132f33.jpeg)\n(\u6c5a\u304b\u3063\u305f\u306e\u3067\u9811\u5f35\u3063\u3066\u6383\u9664\u3057\u307e\u3057\u305f)\n\n\u305d\u308c\u3063\u307d\u304f\u30bf\u30b9\u30af\u3092\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306b\u66f8\u3044\u3066\u8cbc\u308b\u3053\u3068\u3067\u6bce\u671d\u76ee\u304c\u899a\u3081\u308b\u3068\u540c\u6642\u306b\u8272\u3005\u3068\u78ba\u8a8d\u3067\u304d\u3066\u975e\u5e38\u306b\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u3044\u3056\u5916\u51fa\u3059\u308b\u3068\u4f55\u304c\u30bf\u30b9\u30af\u3060\u3063\u305f\u304b\u5fd8\u308c\u304c\u3061\u3067\u3059\u3002\n\n\u4eca\u56de\u306f\u3001\u300c\u5916\u51fa\u4e2d\u3067\u3082\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u78ba\u8a8d\u3057\u305f\u3044\uff01\u300d\u3068\u3044\u3046\u601d\u3044\u3092\u5b9f\u73fe\u3055\u305b\u308b\u305f\u3081\u3001\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u306e\u5199\u771f\u3092\u3068\u3063\u3066\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u3092\u30c7\u30b8\u30bf\u30eb\u3067\u7ba1\u7406\u3059\u308b\u3053\u3068\u306b\u8a66\u307f\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u9053\u7b4b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n(\u3082\u3063\u3068\u826f\u3044\u3084\u308a\u65b9\u304c\u3042\u308b\u3088\uff01\u3068\u3044\u3046\u5834\u5408\u306f\u3054\u6307\u6458\u304f\u3060\u3055\u308b\u3068\u5e78\u3044\u3067\u3059\uff01)\n\n\u74b0\u5883: Python 3.4.3 (pyenv), OpenCV 3.0.0\n\n# \u6d41\u308c\n\n- OpenCV \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n- \u753b\u50cf\u306e2\u5024\u5316\u304b\u3089\u8f2a\u90ed\u691c\u51fa\n- \u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u90e8\u5206\u3092\u53d6\u5f97\n- \u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306e\u8272\u3067\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\n# OpenCV \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\npyenv\u74b0\u5883\u3060\u3068\u3001Anaconda\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308c\u3070\u7c21\u5358\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\n``conda install -c https://conda.binstar.org/menpo opencv``\n\n\u4eca\u56de\u306fpyenv\u3067\u65e2\u306b\u3042\u308b\u74b0\u5883\u306e\u4e0a\u3067\u4f7f\u3044\u305f\u304b\u3063\u305f\u306e\u3067\u3001homebrew \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\n\n```\nbrew tap homebrew/science\nbrew install opencv3 --with-python3\nbrew link opencv3 --force\n```\npyenv \u74b0\u5883\u306e Python 3 \u304b\u3089 OpenCV \u3092\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u30ea\u30f3\u30af\u3092\u306f\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\nln -s /usr/local/Cellar/opencv3/3.0.0/lib/python3.4/site-packages/cv2.so ~/[pyenv_path]/versions/3.4.3/lib/python3.4/site-packages/cv2.so \n```\nipython \u306a\u3069\u306e\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u74b0\u5883\u3067 cv2 \u304c import \u51fa\u6765\u308c\u3070\u5b8c\u4e86\u3067\u3059\u3002\n\n```\n$ ipython\nIn [1]: import cv2\nIn [2]: cv2.__version__\nOut[2]: '3.0.0'\n```\n\n# \u753b\u50cf\u306e2\u5024\u5316\u304b\u3089\u8f2a\u90ed\u691c\u51fa\n\nOpenCV \u3092\u4f7f\u3063\u3066\u753b\u50cf\u306e2\u5024\u5316\u3092\u884c\u3044\u3001\u305d\u3053\u304b\u3089\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u90e8\u5206\u3060\u3051\u53d6\u308a\u51fa\u3059\u305f\u3081\u3001\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306e\u8f2a\u90ed\u90e8\u5206\u306e\u53d6\u5f97\u3092\u884c\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u6211\u304c\u5bb6\u306e\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u306e\u3053\u306e\u5199\u771f\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\uff01\n\n![Example](https://qiita-image-store.s3.amazonaws.com/0/49409/c47b5b71-2071-03d2-8f89-6741fbc54bfc.jpeg)\n\n\u307e\u305a\u306f2\u5024\u5316\u307e\u3067\u306e\u90e8\u5206\u3092\u3002\n\n```\nimage_dir = './image/'\nimage_file = 'xxx.jpg'\nim = cv2.imread(image_dir + image_file, 1) #(A)\nim_gray = cv2.cvtColor(im, cv2.COLOR_BGR2GRAY) #(B)\nim_blur = cv2.GaussianBlur(im_gray, (11, 11), 0) #(C)\n```\n\n(A)\u3067\u753b\u50cf\u30923\u30ab\u30e9\u30fc\u30c1\u30e3\u30cd\u30eb\u3067\u8aad\u307f\u8fbc\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u4e8c\u5024\u5316\u3092\u884c\u3046\u306b\u306f\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306e\u753b\u50cf\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u305d\u308c\u3092\u884c\u3063\u3066\u3044\u308b\u306e\u304c(B)\u306b\u3042\u305f\u308a\u307e\u3059\u3002(B)\u306e\u7b2c\u4e8c\u5f15\u6570\u306f\u5b9a\u6570\u3067\u3001\u4ed6\u306b\u3082BGR2HSV\u7b49\u69d8\u3005\u306a\u5909\u63db\u3092cvtColor\u306b\u3088\u3063\u3066\u884c\u3048\u307e\u3059\u3002\n\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5316\u3057\u305f\u753b\u50cf\u306e\u3057\u304d\u3044\u5024\u3092\u5224\u5225\u3057\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3001(C)\u3067\u30ac\u30a6\u30b7\u30a2\u30f3\u30d6\u30e9\u30fc\u3092\u304b\u3051\u3066\u3044\u307e\u3059\u3002\n\n\u524d\u51e6\u7406\u306e\u7d42\u308f\u3063\u305f\u753b\u50cf\u306b2\u5024\u5316\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u30022\u5024\u5316\u3068\u3044\u3046\u306e\u306f\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u3067\u4e0e\u3048\u3089\u308c\u3066\u3044\u308b\u753b\u50cf\u3092(\u57fa\u672c\u7684\u306b\u306f)0\u3068255\u306e2\u8272\u3067\u7f6e\u304d\u63db\u3048\u308b\u3082\u306e\u3067\u3059\u3002\u3053\u3053\u3067\u4f7f\u7528\u3059\u308b\u306e\u304c threshold \u95a2\u6570\u306a\u306e\u3067\u3059\u304c\u3001\u5168\u4f53\u306b\u5bfe\u3057\u3066\u3057\u304d\u3044\u5024\u3092\u8a2d\u5b9a\u3059\u308b threshold\u95a2\u6570 \u3068\u3001\u90e8\u5206\u306b\u5fdc\u3058\u3066\u9069\u5fdc\u7684\u306b\u3057\u304d\u3044\u5024\u3092\u8a2d\u5b9a\u3059\u308b adaptiveThreshold \u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\nret1, th1 = cv2.threshold(im_blur, 127, 255, cv2.THRESH_BINARY_INV)\nth2 = cv2.adaptiveThreshold(im_blur, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY_INV, 11, 3)\n```\n\nthreshold \u306f\u7b2c\u4e8c\u5f15\u6570\u3092\u3057\u304d\u3044\u5024\u3068\u3057\u3066\u3001\u753b\u50cf\u5168\u4f53\u306e2\u5024\u5316\u3092\u884c\u3044\u307e\u3059\u3002\nadaptiveThreshold \u306e\u7b2c5\u5f15\u6570\u306f\u3001\u3057\u304d\u3044\u5024\u3092\u53d6\u308b\u969b\u306b\u898b\u308b\u7bc4\u56f2\u3067\u3001\u305d\u306e\u7bc4\u56f2\u304b\u3089\u8a08\u7b97\u3057\u305f\u3057\u304d\u3044\u5024\u304b\u3089\u7b2c6\u5f15\u6570\u3092\u5f15\u3044\u305f\u3082\u306e\u304c\u6700\u7d42\u7684\u306a\u3057\u304d\u3044\u5024\u306b\u306a\u308a\u307e\u3059\u3002\n\u7bc4\u56f2\u5185\u306e\u3057\u304d\u3044\u5024\u306e\u8a08\u7b97\u6cd5\u306f\u3001\u5358\u7d14\u306b\u7bc4\u56f2\u5185\u306e\u30d4\u30af\u30bb\u30eb\u306e\u5e73\u5747\u3092\u53d6\u308b cv2.ADAPTIVE_THRESH_MEAN_C \u3068\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\u306e\u91cd\u307f\u3092\u3064\u3051\u3066\u5e73\u5747\u3092\u53d6\u308b cv2.ADAPTIVE_THRESH_GAUSSIAN_C \u306e\u4e8c\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\n\nthreshold \u306e\u7b2c4\u5f15\u6570\u3001adaptiveThreshold \u306e\u7b2c3\u5f15\u6570\u306f\u4ed6\u306b\u3082\u8272\u3005\u306a\u5b9a\u6570\u3092\u53d6\u308a\u307e\u3059\u3002\n\u8a73\u7d30\u306f\u53c2\u8003\u4e00\u89a7\u304b\u3089\u3069\u3046\u305e\u3002\n\n\u9069\u5f53\u306a\u753b\u50cf\u306b\u9069\u7528\u3057\u3066\u307f\u305f\u306e\u304c\u4e0b\u56f3\u3067\u3059\u3002\n\n![example_threshold](https://qiita-image-store.s3.amazonaws.com/0/49409/3a9f5ac3-d8d5-669e-ae50-14e4a27c994b.png)\n\n\u4eca\u56de\u306f\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u90e8\u5206\u3092\u691c\u51fa\u3057\u305f\u3044\u305f\u3081\u3001\u5168\u4f53\u3067\u3057\u304d\u3044\u5024\u3092\u6c7a\u3081\u308b threshold \u306b\u3001\u3057\u304d\u3044\u5024\u3092\u4e0a\u624b\u304f\u6c7a\u3081\u3066\u304f\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3042\u308b OTSU \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\u4f7f\u7528\u81ea\u4f53\u306f\u975e\u5e38\u306b\u7c21\u5358\u3067\u3001\u5148\u307b\u3069\u306e\u95a2\u6570\u306b\u5c11\u3057\u8db3\u3059\u3060\u3051\u3067\u3059\u3002\n\n```\nth = cv2.threshold(blur, 0, 255, cv2.THRESH_BINARY_INV+cv2.THRESH_OTSU)[1]\n```\n\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u3001OTSU\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0(\u5927\u6d25\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0)\u3068\u3044\u3046\u306e\u306f\u5225\u6bb5\u3080\u305a\u304b\u3057\u30fc\u3044\u3082\u306e\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u4e00\u822c\u7684\u306b\u306f\u5224\u5225\u5206\u6790\u6cd5\u3001\u30d5\u30a3\u30c3\u30b7\u30e3\u30fc\u306e\u7dda\u5f62\u5224\u5225\u306a\u3069\u3068\u547c\u3070\u308c\u3066\u3044\u308b\u3082\u306e\u3067\u3059\u3002\n2\u3064\u306e\u30af\u30e9\u30b9(\u3053\u3053\u3067\u306f\u753b\u50cf\u306e\u80cc\u666f\u3068\u7269\u4f53\u3001\u7b49)\u304c\u3042\u308b\u3068\u304d\u306b(1)\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u5185\u306e\u5206\u6563\u304c\u5c0f\u3055\u304f\u3001(2)\u30af\u30e9\u30b9\u9593\u306e\u5206\u6563\u304c\u5927\u304d\u304f\u306a\u308b\u3001\u3053\u306e(1)\u3068(2)\u3092\u6e80\u305f\u3059\u3088\u3046\u306a\u3057\u304d\u3044\u5024\u3092\u6c42\u3081\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u3053\u3061\u3089\u304c\u4eba\u51fa\u3067\u3057\u304d\u3044\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u306a\u304f\u3001\u753b\u50cf\u3060\u3051\u6e21\u305b\u3070\u81ea\u52d5\u3067\u6700\u9069\u306a\u3057\u304d\u3044\u5024\u3092\u7b97\u51fa\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306f\"\u5224\u5225\u5206\u6790\u6cd5\"\u306a\u3069\u3067\u8abf\u3079\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u6700\u521d\u306b\u4e0a\u3052\u305f\u5199\u771f\u306b\u3053\u308c\u3092\u9069\u7528\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n![example_try](https://qiita-image-store.s3.amazonaws.com/0/49409/1be778ed-7f77-919a-c52c-5539bc326282.jpeg)\n\n**\u5168\u7136\u53d6\u308c\u3066\u306a\u3044\uff01\uff01\uff01\uff01\uff01**\n\u305f\u3060\u5b57\u306e\u6c5a\u3055\u304c\u969b\u7acb\u3063\u305f\u3060\u3051\u307f\u305f\u3044\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u305d\u306e\u307e\u307e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u3059\u308b\u3060\u3051\u3067\u306f\u53d6\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u4eca\u56de\u306f\u6b21\u306e5\u3064\u306e2\u5024\u5316\u753b\u50cf\u306e\u548c\u3092\u6700\u7d42\u7684\u306a2\u5024\u5316\u753b\u50cf\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\n\n1. cvtColor \u3092\u4f7f\u7528\u3057\u3066\u5143\u753b\u50cf\u30922\u5024\u5316\u3057\u305f\u3082\u306e\n2. \u5143\u306e3\u3064\u306e\u30ab\u30e9\u30fc\u30c1\u30e3\u30cd\u30eb\u305d\u308c\u305e\u308c\u306e\u5024\u3092\u4e00\u6b21\u5143\u306e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u306b\u3057\u305f\u3082\u306e\n3. 3\u3064\u306e\u30ab\u30e9\u30fc\u30c1\u30e3\u30cd\u30eb\u306e\u8d64\u304b\u3089\u4ed6\u306e\u9752\u3068\u7dd1\u3092\u5f15\u3044\u305f\u3082\u306e\u306e\u548c(\u8d64\u304c\u306a\u304b\u306a\u304b\u53d6\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u7121\u7406\u3084\u308a\u53d6\u308b\u305f\u3081\u306b\u4f5c\u6210\u3001im\u3092\u5143\u753b\u50cf\u3068\u3057\u3066\u3001\u4e0b\u8a18\u306e\u5024)\n\n```\n(np.abs(int_im[:,:,2] - int_im[:,:,1]) + np.abs(int_im[:,:,2] - int_im[:,:,0]))\n```\n\n\u3053\u308c\u3089\u304b\u30895\u7a2e\u985e\u306e2\u5024\u5316\u753b\u50cf\u3092\u4f5c\u6210\u3057\u3001\u5168\u3066\u306e\u548c\u3092\u53d6\u3063\u3066\u4f5c\u6210\u3057\u305f\u753b\u50cf\u304c\u3053\u3061\u3089\uff01\n\n![example_success](https://qiita-image-store.s3.amazonaws.com/0/49409/66fd278b-15da-5d23-c970-c8bf02481cc3.jpeg)\n\n\u305d\u308c\u3063\u307d\u3044\u611f\u3058\u306b\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u6b21\u306b\u8f2a\u90ed\u306e\u5ea7\u6a19\u3092\u53d6\u5f97\u3057\u305f\u3044\u306e\u3067\u3059\u304c\u3001OpenCV\u306b\u306f\u8f2a\u90ed\u62bd\u51fa\u3059\u308b findContours \u95a2\u6570\u304c\u65e2\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u305d\u308c\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```\ncontours = cv2.findContours(im_th, cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)[1]\n```\n\u3053\u308c\u306b\u3088\u308a\u3001\u8f2a\u90ed\u90e8\u5206\u306e\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n\n\n# \u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u90e8\u5206\u3092\u53d6\u5f97\n\n\u305d\u306e\u5f8c\u306f\u3001\u53d6\u5f97\u3057\u305f\u8f2a\u90ed\u306e\u9802\u70b9\u3092\u5143\u306b\u9762\u7a4d\u304c\u4e00\u5b9a\u4ee5\u4e0a\u306e\u5927\u304d\u3055\u306e\u3068\u3053\u308d\u3060\u3051\u53d6\u308a\u51fa\u3057\u3001approxPolyDP \u95a2\u6570\u306b\u3088\u308a\u76f4\u7dda\u8fd1\u4f3c\u306b\u884c\u3063\u3066\u3001\u5f97\u3089\u308c\u305f\u56db\u89d2\u5f62\u90e8\u5206\u3092\u5143\u306e\u753b\u50cf\u304b\u3089\u5207\u308a\u629c\u3044\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n```\n\n# filtered with area over (all area / 100 )\nth_area = im.shape[0] * im.shape[1] / 100\ncontours_large = list(filter(lambda c:cv2.contourArea(c) > th_area, contours))\n\noutputs = []\nrects = []\napproxes = []\n\nfor (i,cnt) in enumerate(contours_large):\n\tarclen = cv2.arcLength(cnt, True)\n\tapprox = cv2.approxPolyDP(cnt, 0.02*arclen, True)\n\tif len(approx) < 4:\n\t\tcontinue\n\tapproxes.append(approx)\n\trect = getRectByPoints(approx)\n\trects.append(rect)\n\toutputs.append(getPartImageByRect(rect))\n\tcv2.imwrite('./out/output'+str(i)+'.jpg', getPartImageByRect(rect))\n\n```\n\n\u3053\u3053\u3067\u3001getPartImageByRect, getPartImageByRect \u3068\u3057\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306a\u753b\u50cf\u304b\u3089\u6307\u5b9a\u7bc4\u56f2\u3092\u5207\u308a\u629c\u3044\u305f\u753b\u50cf\u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n```\ndef getRectByPoints(points):\n\t# prepare simple array \n\tpoints = list(map(lambda x: x[0], points))\n\n\tpoints = sorted(points, key=lambda x:x[1])\n\ttop_points = sorted(points[:2], key=lambda x:x[0])\n\tbottom_points = sorted(points[2:4], key=lambda x:x[0])\n\tpoints = top_points + bottom_points\n\t\n\tleft = min(points[0][0], points[2][0])\n\tright = max(points[1][0], points[3][0])\n\ttop = min(points[0][1], points[1][1])\n\tbottom = max(points[2][1], points[3][1])\n\treturn (top, bottom, left, right)\n\ndef getPartImageByRect(rect):\n\timg = cv2.imread(image_dir + image_file, 1)\n\treturn img[rect[0]:rect[1], rect[2]:rect[3]]\n\n```\n\n\u3053\u308c\u3067\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u90e8\u5206\u3092\u5143\u753b\u50cf\u304b\u3089\u5207\u308a\u629c\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u5143\u753b\u50cf\u306b\u67a0\u3092\u5165\u308c\u3066\u307f\u305f\u306e\u304c\u6b21\u306e\u753b\u50cf\u3067\u3059\u3002\n\n![\u5143\u753b\u50cfwith\u9ed2\u67a0](https://qiita-image-store.s3.amazonaws.com/0/49409/23792dc8-f34d-0d34-0849-e0e4ba1b0381.png)\n\n\u7121\u4e8b\u306b\u5168\u3066\u306e\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u304c\u691c\u51fa\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u3042\u3068\u306f\u305d\u308c\u305e\u308c\u306e\u753b\u50cf\u3092\u30a2\u30d7\u30ea\u3067\u6301\u3064\u306a\u308a\u30b5\u30fc\u30d0\u3067\u7ba1\u7406\u3059\u308b\u306a\u308a\u3059\u308c\u3070\u30c7\u30b8\u30bf\u30eb\u7ba1\u7406\u3078\u306e\u9053\u304c\u62d3\u3051\u307e\u3059\u306d\u3002\n\n# \u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306e\u8272\u3067\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\n\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u306f\u3001\u591a\u304f\u306e\u5834\u5408\u8272\u306b\u3088\u3063\u3066\u30bf\u30b9\u30af\u3092\u30ab\u30c6\u30b4\u30e9\u30a4\u30ba\u3057\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001\u305d\u3053\u3082\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\u6b21\u306e\u3088\u3046\u306a\u6d41\u308c\u3067\u8003\u3048\u307e\u3059\u3002\n\n1. \u4ee3\u8868\u8272\u306e\u53d6\u5f97\n2. \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n3. \u540c\u3058\u30af\u30e9\u30b9\u30bf\u306e\u5e73\u5747\u8272\u3092\u305d\u306e\u30ab\u30c6\u30b4\u30ea\u306e\u8272\u3068\u3057\u3066\u67a0\u3092\u3064\u3051\u308b\n\n\u307e\u305a\u3001\u305d\u308c\u305e\u308c\u5207\u308a\u629c\u3044\u305f\u753b\u50cf\u306e\u4ee3\u8868\u8272\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u73fe\u5728\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u90e8\u5206\u306e\u307f\u5207\u308a\u629c\u304b\u308c\u305f\u753b\u50cf\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u753b\u50cf\u306f\u3001\u5468\u308a\u306e\u767d\u3001\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306e\u8272\u3001\u6587\u5b57\u8272\u306e\u9ed2\u3001\u306e\u4e09\u8272\u304c\u5165\u3063\u3066\u3044\u308b\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\u3059\u306a\u308f\u3061\u3001\u7c21\u5358\u306b\u5404\u30ab\u30e9\u30fc\u30c1\u30e3\u30cd\u30eb\u306e\u4e2d\u592e\u5024\u3092\u4ee3\u8868\u8272\u3068\u3059\u308c\u3070\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306e\u8272\u304c\u53d6\u308c\u305d\u3046\u3067\u3059\u3002\n\n```\nt_colors = []\nfor (i,out) in enumerate(outputs):\n\tcolor = np.zeros(3)\n\tfor j in range(3):\n\t\tcolor[j] = np.median(out[:,:,j])\n\tt_colors.append(color)\nt_colors = np.array(t_colors)\n```\n\n\u6b21\u306b\u3001\u5f97\u3089\u308c\u305f\u305d\u308c\u305e\u308c\u306e\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u306e\u4ee3\u8868\u5024\u3092KMeans\u6cd5\u3092\u7528\u3044\u3066\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u884c\u3044\u307e\u3057\u305f\u3002\nKMeans\u6cd5\u306b\u3088\u308b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306b\u3064\u3044\u3066\u306f\u3001Qiita\u3092\u59cb\u3081\u3068\u3057\u305f\u30cd\u30c3\u30c8\u4e0a\u306b\u305f\u304f\u3055\u3093\u306e\u5206\u304b\u308a\u3084\u3059\u3044\u89e3\u8aac\u304c\u3042\u308b\u306e\u3067\u305d\u3061\u3089\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n```\nfrom sklearn.cluster import KMeans\n# KMeans\ncluster_num = 4 # num of colors\nkmeans = KMeans(n_clusters=cluster_num).fit(t_colors)\nlabels = kmeans.labels_\ncenters = np.array(kmeans.cluster_centers_).astype(np.int) # convert into int to express color\n```\n\n\u3055\u3066\u3001\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3055\u308c\u305f\u7d50\u679c\u306e\u8272(\u3068\u6570\u5b57)\u3092\u5143\u306e\u753b\u50cf\u306b\u8db3\u3057\u305f\u3082\u306e\u304c\u3053\u3061\u3089\u3067\u3059\uff01\n\u304b\u306a\u308a\u898b\u3065\u3089\u3044\u3067\u3059\u304c\u30010~3\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u7d50\u679c\u306e\u30e9\u30d9\u30eb\u3092\u30dd\u30b9\u30c8\u30a4\u30c3\u30c8\u5de6\u4e0a\u306b\u66f8\u304d\u8db3\u3057\u3066\u3044\u307e\u3059\u3002\n\n![clustering](https://qiita-image-store.s3.amazonaws.com/0/49409/5164412d-cb43-0e7f-4c05-0f1c22cfb830.png)\n\n\u7d50\u679c\u3092\u898b\u308b\u3068\u3001\u9752\u3001\u8d64\u306f\u4e0a\u624b\u304f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u9ec4\u8272\u3068\u9ec4\u7dd1\u3067\u5149\u306e\u5f53\u305f\u308a\u5177\u5408\u306e\u305b\u3044\u304b\u3001\u305d\u308c\u305e\u308c\u304c\u6df7\u3056\u3063\u305f\u30af\u30e9\u30b9\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u3053\u308c\u306f\u3001\u753b\u50cf\u306eRGB\u30c1\u30e3\u30cd\u30eb\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3060\u3051\u3092\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306b\u4f7f\u7528\u3057\u305f\u306e\u3067\u3001HSV\u306b\u5909\u63db\u3057\u3066\u5f69\u5ea6\u306e\u60c5\u5831\u3082\u5165\u308c\u308b\u3068\u307e\u305f\u5909\u308f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u4eca\u56de\u306f\u3053\u3053\u307e\u3067\u3067\u3059\u3002\n\n# \u4eca\u5f8c\n\u4eca\u56de\u306e\u4f8b\u306f\u3001\u3042\u304f\u307e\u3067\u79c1\u306e\u81ea\u5b85\u306e\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u3060\u3051\u52d5\u4f5c\u78ba\u8a8d\u3092\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u3082\u3063\u3068\u5e83\u304f\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306b\u95a2\u3057\u3066\u3082\u4e0d\u5341\u5206\u3067\u3001\u73fe\u72b6\u3067\u306f\u8272\u6570\u304c\u5897\u3048\u305f\u969b\u306b\u5bfe\u5fdc\u51fa\u6765\u3066\u3044\u307e\u305b\u3093\u3002\n\u3042\u3068\u81ea\u5206\u3067\u6bce\u671d\u5199\u771f\u53d6\u308b\u306e\u3082\u99ac\u9e7f\u3089\u3057\u3044\u306e\u3067\u3001\u8a87\u308a\u3092\u304b\u3076\u3063\u3066\u3044\u308bRaspberry Pi\u3055\u3093\u3092\u5f15\u3063\u5f35\u3063\u3066\u305d\u3053\u3089\u3078\u3093\u3082\u81ea\u52d5\u5316\u3057\u3066\u307f\u305f\u3044\u306e\u3067\u3001\u307e\u305f\u7d9a\u304d\u3068\u3057\u3066\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u307e\u3068\u3081\n\n\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u81ea\u5b85\u5c0e\u5165\u3092\u9032\u3081\u307e\u304f\u308b\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u3057\u3066\u3044\u305f\u3089\u3042\u3093\u307e\u308a\u305d\u3053\u306b\u89e6\u308c\u3089\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u7686\u3055\u3093\u3082\u81ea\u5b85\u306b\u4e00\u53f0\u306f\u30db\u30ef\u30a4\u30c8\u30dc\u30fc\u30c9\u3092\u5c0e\u5165\u3057\u307e\u3057\u3087\u3046\u3002\u30bf\u30b9\u30af\u7ba1\u7406\u3082\u51fa\u6765\u308b\u3001\u8a08\u7b97\u3082\u3067\u304d\u308b\u3001\u30e1\u30e2\u66f8\u304d\u3082\u51fa\u6765\u308b\u3002\u8272\u3005\u6357\u308a\u307e\u3059\u3088\u3002\n\n\u660e\u65e5\u306f\u3001@isaoshimizu \u3055\u3093\u304c\u306a\u306b\u304b\u66f8\u3044\u3066\u304f\u3060\u3055\u308a\u307e\u3059\u3002\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n# \u53c2\u8003\nMac \u306b Python 3.4 + OpenCV 3.0 \u306e\u74b0\u5883\u3092\u3064\u304f\u308b\nhttps://librabuch.jp/2015/07/python-34_opencv-30_mac/\n\nOpenCV\u3067\u8f2a\u90ed\u62bd\u51fa\nhttp://docs.opencv.org/master/d4/d73/tutorial_py_contours_begin.html#gsc.tab=0\n\ncv2.threshold (OpenCV 2.1)\nhttp://opencv.jp/opencv-2.1/cpp/miscellaneous_image_transformations.html#cv-threshold\n\ncv2.adaptiveThreshold (OpenCV 2.1)\nhttp://opencv.jp/opencv-2.1/cpp/miscellaneous_image_transformations.html#cv-adaptivethreshold\n\ncv2.findContours (OpenCV 2.1)\nhttp://opencv.jp/opencv-2.1/cpp/structural_analysis_and_shape_descriptors.html#cv-findcontours\n", "tags": ["OpenCV", "Python", "\u753b\u50cf\u51e6\u7406"]}