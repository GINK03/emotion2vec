{"context": "Amazon Elastic File System (\u4ee5\u4e0bEFS)\u306f\u3056\u3063\u304f\u308a\u3044\u3046\u3068\u30de\u30cd\u30fc\u30b8\u30c9\u306eNFS\u3060\u3002\n\u3053\u306eEFS\u3068Docker Swarm\u306e\u65b0\u6a5f\u80fd(1.12\u301c)\u3001ingress\u3068ELB\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u307f\u3088\u3046\u3002\n\u306a\u3093\u304b\u30e6\u30eb\u3044\u30af\u30e9\u30b9\u30bf\u304c\u3064\u304f\u308c\u307e\u3059\u3002\n\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u308b\u6642\u70b9\u3067\u306f\u3001Docker\u306e1.12\u306frc4\u304c\u51fa\u305f\u3068\u3053\u3067\u3059\u306d\u3002\n\u4e8b\u524d\u306b\u5fc5\u8981\u306a\u3082\u306e\u3002\n\nAmazon EFS\u30dc\u30ea\u30e5\u30fc\u30e0\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30de\u30a6\u30f3\u30c8\u53ef\u80fd\u306aSG\u306e\u8a2d\u5b9a\n\n\n\n\nDocker-Machine\u304b\u3089EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3002\nEFS\u3068\u540c\u3058VPC\u306b\u4f5c\u3063\u3066\u306d\u3002EFS\u304c\u3042\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u3088\u308d\u3057\u304f\u3002\uff12\u500b\u4f5c\u308b\u304b\u3002\n\n(local_machine)\n$ docker-machine create --driver amazonec2 \\\n  --amazonec2-region us-west-2 \\\n  --amazonec2-instance-type t2.small \\\n  --amazonec2-vpc-id vpc-xxxxxxxx \\\n  --amazonec2-subnet-id subnet-xxxxxxxx \\\n  aws-efs-sandbox01\n\n....\n\n\n$ docker-machine create --driver amazonec2 \\\n  --amazonec2-region us-west-2 \\\n  --amazonec2-instance-type t2.small \\\n  --amazonec2-vpc-id vpc-xxxxxxxx \\\n  --amazonec2-subnet-id subnet-xxxxxxxx \\\n  aws-efs-sandbox02\n\n...\n\n\namazonec2\u30c9\u30e9\u30a4\u30d0\u306f(\u3053\u306e\u8a18\u4e8b\u6642\u70b9\u3067)Ubuntu\u306e15.10\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n15.10\u306e\u307e\u307e\u3067\u3082\u826f\u3044\u3057\u3001do-release-upgrade\u306716.04\u306b\u3057\u3061\u3083\u3063\u3066\u3082\u52d5\u3044\u3066\u307e\u3057\u305f\u306e\u3067\u304a\u597d\u307f\u3067\u3002\n\nDocker-Engine\u30921.12.RCx\u4ee5\u964d\u306b\u3059\u308b\n\u305d\u308c\u305e\u308c\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306bdocker-machine ssh\u3067\u4fb5\u5165\u3057\u307e\u3059\u3002\n\n(local_machine)\n$ docker-machine ssh aws-efs-sandbox01\n\n\n\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u305f\u3089test.docker.com\u3092\u3076\u3063\u3053\u307f\u307e\u3057\u3087\u3046\u3002\n\n(remote_user)\n$ curl -fsSL https://test.docker.com/ | sh\n\n\nWarning: the \"docker\" command appears to already exist on this system.\n\nIf you already have Docker installed, this script can cause trouble, which is\nwhy we're displaying this warning and provide the opportunity to cancel the\ninstallation.\n\n\n```shell:(remote_user)\nClient:\n Version:      1.12.0-rc4\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   e4a0dbc\n Built:        Wed Jul 13 04:00:11 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0-rc4\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   e4a0dbc\n Built:        Wed Jul 13 04:00:11 2016\n OS/Arch:      linux/amd64\n\nIf you would like to use Docker as a non-root user, you should now consider\nadding your user to the \"docker\" group with something like:\n\n  sudo usermod -aG docker ubuntu\n\nRemember that you will have to log out and back in for this to take effect!\n\n\n\nOK\u3067\u30fc\u3059\u3002\n$ sudo docker -v\nDocker version 1.12.0-rc4, build e4a0dbc\n\n\u3053\u306e\u6642\u70b9\u3067\u591a\u5206\u4e00\u56dereboot\u3057\u3068\u304f\u307b\u3046\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nSwarm\u3092\u7d44\u307f\u307e\u3059\n1.12\u304b\u3089Swarm\u304c\u7d44\u307f\u3084\u3059\u3044\u3001\u7d44\u3082\u3046\u305c\u307f\u3093\u306a\u3002\naws-efs-sandbox01\u304b\u3089init\u3002\n\n(remote_user_and_root)\n$ sudo -s # root\u306e\u307b\u3046\u304c\u88dc\u5b8c\u304c\u5229\u3044\u3066\u697d\u3061\u3093\n\n# (aws-efs-sandbox01) \n$ docker swarm init \nNo --secret provided. Generated random secret:\n    xxxxxxxxxxxxxxxxxxxxxxx\n\nSwarm initialized: current node (xxxxxxxxxxxxxxxxxxxxxxxxxxxx) is now a manager.\n\nTo add a worker to this swarm, run the following command:\n    docker swarm join --secret xxxxxxxxxxxxxxxxxxxxxxxxxxx \\\n    --ca-hash sha256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \\\n   xx.xx.xx.xx:2377\n\n\naws-efs-sandbox02\u304b\u3089\u306fjoin\u3002\n\n(remote_root)\n# (aws-efs-sandbox02)\n$ docker swarm join --secret xxxxxxxxxxxxxxxxxxxxxxxxxxx \\\n    --ca-hash sha256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \\\n   xx.xx.xx.xx:2377\n\nThis node joined a Swarm as a worker.\n\n\nDocker node\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\u3044\u308b\u308f\u306d\u3002\n\n(remote_root)\n# (aws-efs-sandbox01)\n$ docker node ls\nID                           HOSTNAME           MEMBERSHIP  STATUS  AVAILABILITY  MANAGER STATUS\nxxxxxxxxxxxxxxxxxxxxxxxxx *  aws-efs-sandbox01  Accepted    Ready   Active        Leader\nxxxxxxxxxxxxxxxxxxxxxxxxx    aws-efs-sandbox02  Accepted    Ready   Active   \n\n\naws-efs-sandbox02\u3082\u3064\u3044\u3067\u306b\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306b\u3057\u307e\u3059\u3002\n\n(remote_root)\n# (aws-efs-sandbox01)\n$ docker node promote  aws-efs-sandbox02\nNode aws-efs-sandbox02 promoted to a manager in the swarm.\n\n\n\u30d2\u30e9\u306eWorker\u304b\u3089\u3001MANAGER STATUS => Reachable \u306b\u306a\u3063\u305f\u306d\u3002\u3053\u308c\u3067\u3069\u3061\u3089\u304b\u3089\u3067\u3082Swarm\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3067\u304d\u308b\u3002\n\n(remote_root)\n# (aws-efs-sandbox01)\n$ docker node ls\nID                           HOSTNAME           MEMBERSHIP  STATUS  AVAILABILITY  MANAGER STATUS\nxxxxxxxxxxxxxxxxxxxxxxxxx *  aws-efs-sandbox01  Accepted    Ready   Active        Leader\nxxxxxxxxxxxxxxxxxxxxxxxxx    aws-efs-sandbox02  Accepted    Ready   Active        Reachable\n\n\n# (aws-efs-sandbox02)\n$ docker node ls\nID                           HOSTNAME           MEMBERSHIP  STATUS  AVAILABILITY  MANAGER STATUS\nxxxxxxxxxxxxxxxxxxxxxxxxx    aws-efs-sandbox01  Accepted    Ready   Active        Leader\nxxxxxxxxxxxxxxxxxxxxxxxxx *  aws-efs-sandbox02  Accepted    Ready   Active        Reachable\n\n\n\n\u3064\u3044\u3067\u306bELB\u3092\nELB\u3092\u4f5c\u3063\u3066\u3001\u8d77\u52d5\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3076\u3089\u4e0b\u3052\u307e\u3059\u3002\n\n\u3068\u308a\u3042\u3048\u305aTCP\u306e2376\u3092\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3064\u3044\u3067\u306b\u3075\u3063\u3061\u3083\u3048\u3070\u3088\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nSG\u306einbound\u306fDocker\u30b3\u30f3\u30c6\u30ca\u304c\u4f7f\u3046\u7bc4\u56f2\u3092\u8a31\u53ef(\u4f8b\u3048\u307010000-11000\u3068\u304b)\nDocker-Machines\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306fELB\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3002\n\n\nEFS\u3092\u30db\u30b9\u30c8\u3067NFS\u30de\u30a6\u30f3\u30c8\u3057\u3066\u3001Docker\u30b3\u30f3\u30c6\u30ca\u306bmount\u3059\u308b\n\u3055\u3066\u3001EFS\u306b\u3064\u3044\u3066\u3002NFS\u306a\u306e\u3067\u307e\u305a\u306f\u30db\u30b9\u30c8\u304b\u3089\u30de\u30a6\u30f3\u30c8\u3057\u3066\u3001Docker\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\u6642\u306b\u305d\u306e\u30d1\u30b9\u3092\u30de\u30a6\u30f3\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\n\u4e21\u65b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3001\u540c\u3058\u30d1\u30b9\u306b\u30de\u30a6\u30f3\u30c8\u3057\u307e\u3059\u3002\n\n(remote_user)\n$ sudo apt-get -y install nfs-common \n$ sudo mkdir -p /mnt/testefs\n\n\n$ sudo mount -t nfs4 -o nfsvers=4.1,relatime,hard $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).fs-xxxxxxxx.efs.us-west-2.amazonaws.com:/ /mnt/testefs\n\n\n\u3053\u3053\u3067\u30de\u30a6\u30f3\u30c8\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u591a\u5206SG\u3067\u3059\u3002\naws-efs-sandbox01\u3067\u66f8\u3044\u3066\u3001aws-efs-sandbox02\u3067\u8aad\u3093\u3067\u307f\u308b\u3002\n\n(remote_root)\n# (aws-efs-sandbox01)\n$ echo \"hello\" > /mnt/testefs/index.html\n\n\n# (aws-efs-sandbox02)\n$ cat /mnt/testefs/index.html \nhello\n\n\n\u3088\u308d\u3057\u3044\u306d\u3002\n\ndocker run with nfs(from host)\n\u30db\u30b9\u30c8\u306b\u30de\u30a6\u30f3\u30c8\u3057\u3066\u3044\u308b\u306e\u3067\u3001docker run\u306f\u307e\u3042\u666e\u901a\u306b\u3053\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n(remote_root)\n$ docker run -it --rm -v /mnt/testefs:/usr/share/nginx/html nginx  cat /usr/share/nginx/html/index.html\nhello\n\n\n\u307e\u3042\u3053\u308a\u3083\u666e\u901a\u3060\u306d\u3002\u3069\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3082\u540c\u3058\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u306a\u308b\u306e\u306f\u3088\u3044\u3051\u3069\u3082\u3002\n\ndocker service with nfs(from host)\n\u3055\u3066\u3001Swarm\u306eingress\u306b\u3076\u3089\u4e0b\u3052\u308b\u3079\u304fservice create\u3067\u8d77\u52d5\u3002\n\n(remote_root)\n# (aws-efs-sandbox01)\n$ docker service create --name nginx \\\n    -p 10080:80 \\\n    --mount target=/usr/share/nginx/html,source=/mnt/testefs,type=bind,readonly=true \\\n    nginx\n\n> 44fzmwtypbw501rxwo8he54nx\n\n$ docker service tasks nginx\n\nID                         NAME     SERVICE  IMAGE  LAST STATE              DESIRED STATE  NODE\n44fzmwtypbw501rxwo8he54nx  nginx.1  nginx    nginx  Running 14 minutes ago  Running        aws-efs-sandbox02\n\n\naws-efs-sandbox01\u3067create\u3057\u305f\u3051\u3069\u3001aws-efs-sandbox02\u3067Docker\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u305f\u3002\n\u3067\u3001\u4e21\u65b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067TCP/10080\u304cListen\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u304c\u3042\u308c\u3060\u306d\u3001ingress\u3002\n\n(remote_user)\n# (aws-efs-sandbox01)\n$ sudo netstat -tnl\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State      \n...\n\ntcp6       0      0 :::10080                :::*                    LISTEN     \n...\n\n\n$ curl 127.0.0.1:10080\nhello\n\n\n# (aws-efs-sandbox02)\n$ sudo netstat -tnl\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State      \n...\n\ntcp6       0      0 :::10080                :::*                    LISTEN     \n...\n\n\n$ curl 127.0.0.1:10080\nhello\n\n\n\n\u3069\u3061\u3089\u3067\u3082curl 127.0.0.1:10080\u304c\u540c\u3058\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u8fd4\u3057\u3066\u308b\u3002\n\nELB\u306b\u30ea\u30b9\u30ca\u3092\u8ffd\u52a0\u3057\u3066\u3001\u30a2\u30af\u30bb\u30b9\u3092\u632f\u3063\u3066\u307f\u308b\n\u4eca\u56deNginx\u3060\u3057\u3001HTTP\u3067\u30ea\u30b9\u30ca\u8ffd\u52a0\u3057\u3066\u307f\u3088\u3046\u304b\u300210080=>10080\u3067\u3044\u3044\u3084\u3002\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u307f\u307e\u3059\u3002\n\n\u3069\u3063\u3061\u3092\u7d4c\u7531\u3057\u305f\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u3051\u3069\u3001\u307f\u3048\u307e\u3059\u306d\u3002NAT\u306e\u30c6\u30fc\u30d6\u30eb\u3067\u306fdocker_gwbridge\u3063\u3066\u306e\u3092\u901a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u30b9\u30b1\u30fc\u30eb\u3082OK\u3067\u3059\u3002\n\n(remote_root)\n$ docker service scale nginx=2\nnginx scaled to 2\n\n\n\u30b9\u30b1\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u6570\u4ee5\u4e0a(3\u3068\u304b)\u306b\u3057\u3066\u3082\u3001\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3\u3067\u30a2\u30af\u30bb\u30b9\u3092\u632f\u308a\u5206\u3051\u3066\u308b\u306e\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\n(\u304a\u307e\u3051)docker-volume-netshare\u3067\u3001Docker\u30b3\u30f3\u30c6\u30ca\u306b\u76f4\u63a5EFS\u3092NFS\u30de\u30a6\u30f3\u30c8\u3055\u305b\u308b\nDocker\u306eVolume\u30c9\u30e9\u30a4\u30d0netshare\u306fNFS\u306b\u5bfe\u5fdc\u3057\u3066\u307e\u3059\u3002 ContainX/docker-volume-netshare\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n\n(remote_user)\n$ wget https://github.com/ContainX/docker-volume-netshare/releases/download/v0.18/docker-volume-netshare_0.18_amd64.deb\n$ sudo dpkg -i docker-volume-netshare_0.18_amd64.deb\n\n\n\u4e21\u65b9\u306e\u30ce\u30fc\u30c9\u3067NFS\u30e2\u30fc\u30c9\u8d77\u52d5\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u3068\u308a\u3042\u3048\u305a\u30d5\u30a9\u30a2\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u3044\u3044\u3063\u3057\u3087\u3002\n\n(remote_user)\n$ sudo docker-volume-netshare nfs\nINFO[0000] == docker-volume-netshare :: Version: 0.18 - Built: 2016-05-27T20:14:07-07:00 == \nINFO[0000] Starting NFS Version 4 :: options: '' \n\n\n\ndocker run with nfs(via nfs volume-driver)\n\u3053\u306e\u72b6\u614b\u306a\u3089--volume-driver=nfs\u3067Docker\u30b3\u30f3\u30c6\u30ca\u304cNFS\u30de\u30a6\u30f3\u30c8\u3063\u307d\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n(remote_root)\n$ docker run -it --rm --volume-driver=nfs \\\n  -p 10080:80 \\\n  -v $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).fs-xxxxxx.efs.us-west-2.amazonaws.com/:/usr/share/nginx/html \\\n  nginx\n\n\n\u3068\u308a\u3042\u3048\u305aEFS\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\n(remote_user)\n$ curl 127.0.0.1:10080\nhello\n\n\nDocker\u30b3\u30f3\u30c6\u30ca\u5185\u3067mount\u72b6\u6cc1\u3092\u307f\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\n(remote_root)\n$ docker exec 5df1f86f8c64 mount | grep nfs\nus-west-2a.fs-xxxxxx.efs.us-west-2.amazonaws.com:/ on /usr/share/nginx/html type nfs4 (rw,relatime,vers=4.0,rsize=1048576,wsize=1048576,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=10.0.0.212,local_lock=none,addr=10.0.0.135)\n\n\n\u5b9f\u4f53\u306fdocker volume\u3002\n\ndocker service with nfs(via nfs volume-driver)\n\u3067\u3002\n\u3053\u308c\u304c\u3067\u304d\u308b\u4e8b\u3092\u671f\u5f85\u3057\u305f\u3093\u3060\u3051\u3069\u3001\u30c0\u30a4\u30ec\u30af\u30c8\u306b\u30de\u30a6\u30f3\u30c8\u3059\u308b\u306e\u306f\u307e\u3060\u7121\u7406\u3063\u307d\u3044\uff1f\u3053\u306e\u3078\u3093\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u30ab\u30aa\u30b9\u306a\u306e\u3088\u306d\u3002\n\u30db\u30b9\u30c8\u306eNFS\u30de\u30a6\u30f3\u30c8\u304c\u4e0d\u8981\u306b\u306a\u308b\u304b\u3089\u4f7f\u3044\u52dd\u624b\u304c\u3044\u3044\u3093\u3060\u3051\u3069\u306a\u3042\u3002\nIssue\u3067\u76f8\u8ac7\u4e2d\u306e\u3088\u3046\u306a\u306e\u3067\u3001\u306a\u3093\u3068\u304b\u306a\u308b\u3060\u308d\u3046\u3002\nnetshare volume plugin not working in \"swarm mode\" v1.12.0-rc3 with docker volume create, docker service create --mount \u00b7 Issue #48 \u00b7 ContainX/docker-volume-netshare\n\u666e\u901a\u306bdokcer run\u3057\u305f\u6642\u306einspect\u3092\u898b\u308b\u3068\u3001\u306a\u3093\u304b\u8272\u3005\u3068\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5909\u63db\u304c\u5fc5\u8981\u305d\u3046\u3067\u3084\u3084\u3053\u3057\u3044\u3002\u4eca\u56de\u306f\u3061\u3087\u3063\u3068\u30b9\u30eb\u30fc\u3002\n\n\u3053\u306e\u3042\u3068\n\u4e00\u5fdc\u3001\u4ed5\u7d44\u307f\u7684\u306b\u306fListen\u51fa\u6765\u308b\u9650\u308a(IP\u30a2\u30c9\u30ec\u30b9 * 60,000\u7a0b\u5ea6)\u306eSwarm Service\u3092\u516c\u958b\u3067\u304d\u308b\u3063\u3066\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u306d\u3002\n\u305f\u3060\u3001ELB\u306e\u30ea\u30b9\u30ca\u30fc\u306f1\u3064\u3042\u305f\u308a\u540c\u6642\u306b100\u307e\u3067\u3068\u3044\u3046\u5236\u9650\u304c\u3042\u3063\u305f\u308a\u3001\u3064\u3044\u3067\u306b\u3044\u3046\u3068\u540d\u524d\u30d9\u30fc\u30b9\u306b\u3088\u308b\u632f\u308a\u5206\u3051\u3082\u7121\u304b\u3063\u305f\u308a\u3067\u3059\u3002Web\u30a2\u30d7\u30ea\u3092\u4f7f\u3046\u306a\u3089\u3070ngx_mruby\u3068\u304b\u3067\u52d5\u7684\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u4f5c\u308b\u3068\u3088\u3055\u305d\u3046\u3002\nGoogle Cloud Platform\u306eGKE\u306a\u3089\u3070\u3082\u3063\u3068\u7c21\u5358\u306bLB\u3092\u3064\u3051\u3089\u308c\u308b\u3093\u3060\u3051\u3069\u3001Google\u3060\u3068\u4eca\u306a\u3089\u540c\u3058\u3053\u3068\u3059\u308b\u5834\u5408\u3001GlusterFS\u306e\u30b5\u30fc\u30d3\u30b9\u3092GCE\u304bk8s\u4e0a\u306b\u4f5c\u308b\u3053\u3068\u306b\u306a\u308b\u3093\u3060\u3088\u306d\u3002\n\nAmazon Elastic File System (\u4ee5\u4e0bEFS)\u306f\u3056\u3063\u304f\u308a\u3044\u3046\u3068\u30de\u30cd\u30fc\u30b8\u30c9\u306eNFS\u3060\u3002\n\u3053\u306eEFS\u3068Docker Swarm\u306e\u65b0\u6a5f\u80fd(1.12\u301c)\u3001ingress\u3068ELB\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u307f\u3088\u3046\u3002\n\n\u306a\u3093\u304b\u30e6\u30eb\u3044\u30af\u30e9\u30b9\u30bf\u304c\u3064\u304f\u308c\u307e\u3059\u3002\n\n\n\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u308b\u6642\u70b9\u3067\u306f\u3001Docker\u306e1.12\u306frc4\u304c\u51fa\u305f\u3068\u3053\u3067\u3059\u306d\u3002\n\n\n\n\u4e8b\u524d\u306b\u5fc5\u8981\u306a\u3082\u306e\u3002\n\n- Amazon EFS\u30dc\u30ea\u30e5\u30fc\u30e0\n    - \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30de\u30a6\u30f3\u30c8\u53ef\u80fd\u306aSG\u306e\u8a2d\u5b9a\n\n\n## Docker-Machine\u304b\u3089EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3002\n\nEFS\u3068\u540c\u3058VPC\u306b\u4f5c\u3063\u3066\u306d\u3002EFS\u304c\u3042\u308b\u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u3088\u308d\u3057\u304f\u3002\uff12\u500b\u4f5c\u308b\u304b\u3002\n\n```shell:(local_machine)\n$ docker-machine create --driver amazonec2 \\\n  --amazonec2-region us-west-2 \\\n  --amazonec2-instance-type t2.small \\\n  --amazonec2-vpc-id vpc-xxxxxxxx \\\n  --amazonec2-subnet-id subnet-xxxxxxxx \\\n  aws-efs-sandbox01\n\n....\n\n\n$ docker-machine create --driver amazonec2 \\\n  --amazonec2-region us-west-2 \\\n  --amazonec2-instance-type t2.small \\\n  --amazonec2-vpc-id vpc-xxxxxxxx \\\n  --amazonec2-subnet-id subnet-xxxxxxxx \\\n  aws-efs-sandbox02\n\n...\n```\n\namazonec2\u30c9\u30e9\u30a4\u30d0\u306f(\u3053\u306e\u8a18\u4e8b\u6642\u70b9\u3067)Ubuntu\u306e15.10\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n15.10\u306e\u307e\u307e\u3067\u3082\u826f\u3044\u3057\u3001`do-release-upgrade`\u306716.04\u306b\u3057\u3061\u3083\u3063\u3066\u3082\u52d5\u3044\u3066\u307e\u3057\u305f\u306e\u3067\u304a\u597d\u307f\u3067\u3002\n\n### Docker-Engine\u30921.12.RCx\u4ee5\u964d\u306b\u3059\u308b\n\n\u305d\u308c\u305e\u308c\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b`docker-machine ssh`\u3067\u4fb5\u5165\u3057\u307e\u3059\u3002\n\n```shell:(local_machine)\n$ docker-machine ssh aws-efs-sandbox01\n```\n\n\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u305f\u3089`test.docker.com`\u3092\u3076\u3063\u3053\u307f\u307e\u3057\u3087\u3046\u3002\n\n```shell:(remote_user)\n$ curl -fsSL https://test.docker.com/ | sh\n\n\nWarning: the \"docker\" command appears to already exist on this system.\n\nIf you already have Docker installed, this script can cause trouble, which is\nwhy we're displaying this warning and provide the opportunity to cancel the\ninstallation.\n\n\n```shell:(remote_user)\nClient:\n Version:      1.12.0-rc4\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   e4a0dbc\n Built:        Wed Jul 13 04:00:11 2016\n OS/Arch:      linux/amd64\n\nServer:\n Version:      1.12.0-rc4\n API version:  1.24\n Go version:   go1.6.2\n Git commit:   e4a0dbc\n Built:        Wed Jul 13 04:00:11 2016\n OS/Arch:      linux/amd64\n\nIf you would like to use Docker as a non-root user, you should now consider\nadding your user to the \"docker\" group with something like:\n\n  sudo usermod -aG docker ubuntu\n\nRemember that you will have to log out and back in for this to take effect!\n\n```\n\nOK\u3067\u30fc\u3059\u3002\n\n```shell:\n$ sudo docker -v\nDocker version 1.12.0-rc4, build e4a0dbc\n```\n\n\u3053\u306e\u6642\u70b9\u3067\u591a\u5206\u4e00\u56dereboot\u3057\u3068\u304f\u307b\u3046\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n## Swarm\u3092\u7d44\u307f\u307e\u3059\n\n1.12\u304b\u3089Swarm\u304c\u7d44\u307f\u3084\u3059\u3044\u3001\u7d44\u3082\u3046\u305c\u307f\u3093\u306a\u3002\n\naws-efs-sandbox01\u304b\u3089init\u3002\n\n```shell:(remote_user_and_root)\n$ sudo -s # root\u306e\u307b\u3046\u304c\u88dc\u5b8c\u304c\u5229\u3044\u3066\u697d\u3061\u3093\n\n# (aws-efs-sandbox01) \n$ docker swarm init \nNo --secret provided. Generated random secret:\n\txxxxxxxxxxxxxxxxxxxxxxx\n\nSwarm initialized: current node (xxxxxxxxxxxxxxxxxxxxxxxxxxxx) is now a manager.\n\nTo add a worker to this swarm, run the following command:\n\tdocker swarm join --secret xxxxxxxxxxxxxxxxxxxxxxxxxxx \\\n\t--ca-hash sha256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \\\n   xx.xx.xx.xx:2377\n```\n\naws-efs-sandbox02\u304b\u3089\u306fjoin\u3002\n\n```shell:(remote_root)\n# (aws-efs-sandbox02)\n$ docker swarm join --secret xxxxxxxxxxxxxxxxxxxxxxxxxxx \\\n\t--ca-hash sha256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx \\\n   xx.xx.xx.xx:2377\n\nThis node joined a Swarm as a worker.\n```\n\nDocker node\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\u3044\u308b\u308f\u306d\u3002\n\n```shell:(remote_root)\n# (aws-efs-sandbox01)\n$ docker node ls\nID                           HOSTNAME           MEMBERSHIP  STATUS  AVAILABILITY  MANAGER STATUS\nxxxxxxxxxxxxxxxxxxxxxxxxx *  aws-efs-sandbox01  Accepted    Ready   Active        Leader\nxxxxxxxxxxxxxxxxxxxxxxxxx    aws-efs-sandbox02  Accepted    Ready   Active   \n```\n\n`aws-efs-sandbox02`\u3082\u3064\u3044\u3067\u306b\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306b\u3057\u307e\u3059\u3002\n\n```shell:(remote_root)\n# (aws-efs-sandbox01)\n$ docker node promote  aws-efs-sandbox02\nNode aws-efs-sandbox02 promoted to a manager in the swarm.\n```\n\n\u30d2\u30e9\u306eWorker\u304b\u3089\u3001`MANAGER STATUS` => `Reachable` \u306b\u306a\u3063\u305f\u306d\u3002\u3053\u308c\u3067\u3069\u3061\u3089\u304b\u3089\u3067\u3082Swarm\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3067\u304d\u308b\u3002\n\n```shell:(remote_root)\n# (aws-efs-sandbox01)\n$ docker node ls\nID                           HOSTNAME           MEMBERSHIP  STATUS  AVAILABILITY  MANAGER STATUS\nxxxxxxxxxxxxxxxxxxxxxxxxx *  aws-efs-sandbox01  Accepted    Ready   Active        Leader\nxxxxxxxxxxxxxxxxxxxxxxxxx    aws-efs-sandbox02  Accepted    Ready   Active        Reachable\n\n\n# (aws-efs-sandbox02)\n$ docker node ls\nID                           HOSTNAME           MEMBERSHIP  STATUS  AVAILABILITY  MANAGER STATUS\nxxxxxxxxxxxxxxxxxxxxxxxxx    aws-efs-sandbox01  Accepted    Ready   Active        Leader\nxxxxxxxxxxxxxxxxxxxxxxxxx *  aws-efs-sandbox02  Accepted    Ready   Active        Reachable\n```\n\n\n### \u3064\u3044\u3067\u306bELB\u3092\n\nELB\u3092\u4f5c\u3063\u3066\u3001\u8d77\u52d5\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3076\u3089\u4e0b\u3052\u307e\u3059\u3002\n\n- \u3068\u308a\u3042\u3048\u305aTCP\u306e2376\u3092\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3064\u3044\u3067\u306b\u3075\u3063\u3061\u3083\u3048\u3070\u3088\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n- SG\u306einbound\u306fDocker\u30b3\u30f3\u30c6\u30ca\u304c\u4f7f\u3046\u7bc4\u56f2\u3092\u8a31\u53ef(\u4f8b\u3048\u307010000-11000\u3068\u304b)\n- Docker-Machines\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306fELB\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3002\n\n\n\n## EFS\u3092\u30db\u30b9\u30c8\u3067NFS\u30de\u30a6\u30f3\u30c8\u3057\u3066\u3001Docker\u30b3\u30f3\u30c6\u30ca\u306bmount\u3059\u308b\n\n\u3055\u3066\u3001EFS\u306b\u3064\u3044\u3066\u3002NFS\u306a\u306e\u3067\u307e\u305a\u306f\u30db\u30b9\u30c8\u304b\u3089\u30de\u30a6\u30f3\u30c8\u3057\u3066\u3001Docker\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\u6642\u306b\u305d\u306e\u30d1\u30b9\u3092\u30de\u30a6\u30f3\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\n\u4e21\u65b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3001\u540c\u3058\u30d1\u30b9\u306b\u30de\u30a6\u30f3\u30c8\u3057\u307e\u3059\u3002\n\n```shell:(remote_user)\n$ sudo apt-get -y install nfs-common \n$ sudo mkdir -p /mnt/testefs\n\n\n$ sudo mount -t nfs4 -o nfsvers=4.1,relatime,hard $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).fs-xxxxxxxx.efs.us-west-2.amazonaws.com:/ /mnt/testefs\n```\n\n\u3053\u3053\u3067\u30de\u30a6\u30f3\u30c8\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u591a\u5206SG\u3067\u3059\u3002\n\n`aws-efs-sandbox01`\u3067\u66f8\u3044\u3066\u3001`aws-efs-sandbox02`\u3067\u8aad\u3093\u3067\u307f\u308b\u3002\n\n```shell:(remote_root)\n# (aws-efs-sandbox01)\n$ echo \"hello\" > /mnt/testefs/index.html\n\n\n# (aws-efs-sandbox02)\n$ cat /mnt/testefs/index.html \nhello\n```\n\n\u3088\u308d\u3057\u3044\u306d\u3002\n\n\n### docker run with nfs(from host)\n\n\u30db\u30b9\u30c8\u306b\u30de\u30a6\u30f3\u30c8\u3057\u3066\u3044\u308b\u306e\u3067\u3001`docker run`\u306f\u307e\u3042\u666e\u901a\u306b\u3053\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n```shell:(remote_root)\n$ docker run -it --rm -v /mnt/testefs:/usr/share/nginx/html nginx  cat /usr/share/nginx/html/index.html\nhello\n```\n\n\u307e\u3042\u3053\u308a\u3083\u666e\u901a\u3060\u306d\u3002\u3069\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3082\u540c\u3058\u30b3\u30f3\u30c6\u30f3\u30c4\u306b\u306a\u308b\u306e\u306f\u3088\u3044\u3051\u3069\u3082\u3002\n\n### docker service with nfs(from host)\n\n\u3055\u3066\u3001Swarm\u306eingress\u306b\u3076\u3089\u4e0b\u3052\u308b\u3079\u304f`service create`\u3067\u8d77\u52d5\u3002\n\n```shell:(remote_root)\n# (aws-efs-sandbox01)\n$ docker service create --name nginx \\\n    -p 10080:80 \\\n    --mount target=/usr/share/nginx/html,source=/mnt/testefs,type=bind,readonly=true \\\n    nginx\n\n> 44fzmwtypbw501rxwo8he54nx\n\n$ docker service tasks nginx\n\nID                         NAME     SERVICE  IMAGE  LAST STATE              DESIRED STATE  NODE\n44fzmwtypbw501rxwo8he54nx  nginx.1  nginx    nginx  Running 14 minutes ago  Running        aws-efs-sandbox02\n```\n\n`aws-efs-sandbox01`\u3067create\u3057\u305f\u3051\u3069\u3001`aws-efs-sandbox02`\u3067Docker\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u305f\u3002\n\n\u3067\u3001\u4e21\u65b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067`TCP/10080`\u304cListen\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u304c\u3042\u308c\u3060\u306d\u3001ingress\u3002\n\n```shell:(remote_user)\n# (aws-efs-sandbox01)\n$ sudo netstat -tnl\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State      \n...\n\ntcp6       0      0 :::10080                :::*                    LISTEN     \n...\n\n\n$ curl 127.0.0.1:10080\nhello\n\n\n# (aws-efs-sandbox02)\n$ sudo netstat -tnl\nActive Internet connections (only servers)\nProto Recv-Q Send-Q Local Address           Foreign Address         State      \n...\n\ntcp6       0      0 :::10080                :::*                    LISTEN     \n...\n\n\n$ curl 127.0.0.1:10080\nhello\n\n```\n\n\n\u3069\u3061\u3089\u3067\u3082`curl 127.0.0.1:10080`\u304c\u540c\u3058\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u8fd4\u3057\u3066\u308b\u3002\n\n\n## ELB\u306b\u30ea\u30b9\u30ca\u3092\u8ffd\u52a0\u3057\u3066\u3001\u30a2\u30af\u30bb\u30b9\u3092\u632f\u3063\u3066\u307f\u308b\n\n\u4eca\u56deNginx\u3060\u3057\u3001HTTP\u3067\u30ea\u30b9\u30ca\u8ffd\u52a0\u3057\u3066\u307f\u3088\u3046\u304b\u300210080=>10080\u3067\u3044\u3044\u3084\u3002\n\n![EC2_Management_Console.jpg](https://qiita-image-store.s3.amazonaws.com/0/7454/fe16a892-da0f-4582-207a-a5c713a7fb11.jpeg \"EC2_Management_Console.jpg\")\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u307f\u307e\u3059\u3002\n\n![swarm-test-1588239295_us-west-2_elb_amazonaws_com_10080_\u3068_EC2_Management_Console.jpg](https://qiita-image-store.s3.amazonaws.com/0/7454/15a18041-4308-e72e-34ee-5f3eeeda7864.jpeg \"swarm-test-1588239295_us-west-2_elb_amazonaws_com_10080_\u3068_EC2_Management_Console.jpg\")\n\n\u3069\u3063\u3061\u3092\u7d4c\u7531\u3057\u305f\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u3051\u3069\u3001\u307f\u3048\u307e\u3059\u306d\u3002NAT\u306e\u30c6\u30fc\u30d6\u30eb\u3067\u306f`docker_gwbridge`\u3063\u3066\u306e\u3092\u901a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\n\u30b9\u30b1\u30fc\u30eb\u3082OK\u3067\u3059\u3002\n\n```shell:(remote_root)\n$ docker service scale nginx=2\nnginx scaled to 2\n```\n\n\u30b9\u30b1\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u6570\u4ee5\u4e0a(3\u3068\u304b)\u306b\u3057\u3066\u3082\u3001\u30e9\u30a6\u30f3\u30c9\u30ed\u30d3\u30f3\u3067\u30a2\u30af\u30bb\u30b9\u3092\u632f\u308a\u5206\u3051\u3066\u308b\u306e\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n\n## (\u304a\u307e\u3051)docker-volume-netshare\u3067\u3001Docker\u30b3\u30f3\u30c6\u30ca\u306b\u76f4\u63a5EFS\u3092NFS\u30de\u30a6\u30f3\u30c8\u3055\u305b\u308b\n\nDocker\u306eVolume\u30c9\u30e9\u30a4\u30d0netshare\u306fNFS\u306b\u5bfe\u5fdc\u3057\u3066\u307e\u3059\u3002 [ContainX/docker-volume-netshare](https://github.com/ContainX/docker-volume-netshare)\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3002\n\n```shell:(remote_user)\n$ wget https://github.com/ContainX/docker-volume-netshare/releases/download/v0.18/docker-volume-netshare_0.18_amd64.deb\n$ sudo dpkg -i docker-volume-netshare_0.18_amd64.deb\n```\n\n\u4e21\u65b9\u306e\u30ce\u30fc\u30c9\u3067NFS\u30e2\u30fc\u30c9\u8d77\u52d5\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u3068\u308a\u3042\u3048\u305a\u30d5\u30a9\u30a2\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u3044\u3044\u3063\u3057\u3087\u3002\n\n```shell:(remote_user)\n$ sudo docker-volume-netshare nfs\nINFO[0000] == docker-volume-netshare :: Version: 0.18 - Built: 2016-05-27T20:14:07-07:00 == \nINFO[0000] Starting NFS Version 4 :: options: '' \n```\n\n\n\n### docker run with nfs(via nfs volume-driver)\n\n\u3053\u306e\u72b6\u614b\u306a\u3089`--volume-driver=nfs`\u3067Docker\u30b3\u30f3\u30c6\u30ca\u304cNFS\u30de\u30a6\u30f3\u30c8\u3063\u307d\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n```shell:(remote_root)\n$ docker run -it --rm --volume-driver=nfs \\\n  -p 10080:80 \\\n  -v $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).fs-xxxxxx.efs.us-west-2.amazonaws.com/:/usr/share/nginx/html \\\n  nginx\n```\n\n\u3068\u308a\u3042\u3048\u305aEFS\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\n```shell:(remote_user)\n$ curl 127.0.0.1:10080\nhello\n```\n\nDocker\u30b3\u30f3\u30c6\u30ca\u5185\u3067mount\u72b6\u6cc1\u3092\u307f\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\n```shell:(remote_root)\n$ docker exec 5df1f86f8c64 mount | grep nfs\nus-west-2a.fs-xxxxxx.efs.us-west-2.amazonaws.com:/ on /usr/share/nginx/html type nfs4 (rw,relatime,vers=4.0,rsize=1048576,wsize=1048576,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=10.0.0.212,local_lock=none,addr=10.0.0.135)\n```\n\n\u5b9f\u4f53\u306f`docker volume`\u3002\n\n\n### docker service with nfs(via nfs volume-driver)\n\n\u3067\u3002\n\u3053\u308c\u304c\u3067\u304d\u308b\u4e8b\u3092\u671f\u5f85\u3057\u305f\u3093\u3060\u3051\u3069\u3001\u30c0\u30a4\u30ec\u30af\u30c8\u306b\u30de\u30a6\u30f3\u30c8\u3059\u308b\u306e\u306f\u307e\u3060\u7121\u7406\u3063\u307d\u3044\uff1f\u3053\u306e\u3078\u3093\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u30ab\u30aa\u30b9\u306a\u306e\u3088\u306d\u3002\n\u30db\u30b9\u30c8\u306eNFS\u30de\u30a6\u30f3\u30c8\u304c\u4e0d\u8981\u306b\u306a\u308b\u304b\u3089\u4f7f\u3044\u52dd\u624b\u304c\u3044\u3044\u3093\u3060\u3051\u3069\u306a\u3042\u3002\n\nIssue\u3067\u76f8\u8ac7\u4e2d\u306e\u3088\u3046\u306a\u306e\u3067\u3001\u306a\u3093\u3068\u304b\u306a\u308b\u3060\u308d\u3046\u3002\n\n[netshare volume plugin not working in \"swarm mode\" v1.12.0-rc3 with docker volume create, docker service create --mount \u00b7 Issue #48 \u00b7 ContainX/docker-volume-netshare](https://github.com/ContainX/docker-volume-netshare/issues/48)\n\n\u666e\u901a\u306bdokcer run\u3057\u305f\u6642\u306einspect\u3092\u898b\u308b\u3068\u3001\u306a\u3093\u304b\u8272\u3005\u3068\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5909\u63db\u304c\u5fc5\u8981\u305d\u3046\u3067\u3084\u3084\u3053\u3057\u3044\u3002\u4eca\u56de\u306f\u3061\u3087\u3063\u3068\u30b9\u30eb\u30fc\u3002\n\n\n\n## \u3053\u306e\u3042\u3068\n\n\u4e00\u5fdc\u3001\u4ed5\u7d44\u307f\u7684\u306b\u306fListen\u51fa\u6765\u308b\u9650\u308a(IP\u30a2\u30c9\u30ec\u30b9 * 60,000\u7a0b\u5ea6)\u306eSwarm Service\u3092\u516c\u958b\u3067\u304d\u308b\u3063\u3066\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u306d\u3002\n\n\u305f\u3060\u3001ELB\u306e\u30ea\u30b9\u30ca\u30fc\u306f1\u3064\u3042\u305f\u308a\u540c\u6642\u306b100\u307e\u3067\u3068\u3044\u3046\u5236\u9650\u304c\u3042\u3063\u305f\u308a\u3001\u3064\u3044\u3067\u306b\u3044\u3046\u3068\u540d\u524d\u30d9\u30fc\u30b9\u306b\u3088\u308b\u632f\u308a\u5206\u3051\u3082\u7121\u304b\u3063\u305f\u308a\u3067\u3059\u3002Web\u30a2\u30d7\u30ea\u3092\u4f7f\u3046\u306a\u3089\u3070ngx_mruby\u3068\u304b\u3067\u52d5\u7684\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u3092\u4f5c\u308b\u3068\u3088\u3055\u305d\u3046\u3002\n\nGoogle Cloud Platform\u306eGKE\u306a\u3089\u3070\u3082\u3063\u3068\u7c21\u5358\u306bLB\u3092\u3064\u3051\u3089\u308c\u308b\u3093\u3060\u3051\u3069\u3001Google\u3060\u3068\u4eca\u306a\u3089\u540c\u3058\u3053\u3068\u3059\u308b\u5834\u5408\u3001GlusterFS\u306e\u30b5\u30fc\u30d3\u30b9\u3092GCE\u304bk8s\u4e0a\u306b\u4f5c\u308b\u3053\u3068\u306b\u306a\u308b\u3093\u3060\u3088\u306d\u3002\n", "tags": ["AmazonEFS", "elb", "docker"]}