{"context": " More than 1 year has passed since last update.\u3060\u3093\u3060\u3093\u8907\u96d1\u306b\u306a\u3063\u3066\u304d\u305f\u30fb\u30fb\u30fb\u3002\n\u96fb\u8eca\u304c\u901a\u904e\u4e2d\u306b\u906e\u65ad\u6a5f\u304c\u4e0b\u308a\u3066\u3057\u307e\u308f\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3002\n\nDefinitions\n(define-channel t-f (x) '((0) (1)))\n(define-channel t-b (x) '((0) (1)))\n\n(define-channel f-c (x) '((0) (1)))\n(define-channel b-c (x) '((0) (1)))\n(define-channel g-c (x) '((0) (1)))\n\n(define-event gate-open)\n(define-event gate-close)\n\n\n\nSYS\n(define-process Train\n  (! t-f (0) (! t-f (1) (! t-b (0) (! t-b (1) STOP)))))\n\n(define-process Front-Censor\n  (? t-f (x)\n     (if (= x 0)\n         (! f-c (0) SKIP)\n         (! f-c (1) SKIP))))\n\n(define-process Back-Censor\n  (? t-b (x)\n     (if (= x 0)\n         (! b-c (0) SKIP)\n         (! b-c (0) SKIP))))\n\n(define-process Gate-Controller\n  (alt\n    (? f-c (x) (= x 0) (! gate-open Gate-Controller))\n    (? b-c (x) (= x 1) (! gate-close Gate-Controller))))\n\n(define-process SYS\n  (par (list t-f t-b)\n    Train\n    Front-Censor\n    Back-Censor\n    Gate-Controller)) \n\n\n\u3060\u3093\u3060\u3093\u8907\u96d1\u306b\u306a\u3063\u3066\u304d\u305f\u30fb\u30fb\u30fb\u3002\n\u96fb\u8eca\u304c\u901a\u904e\u4e2d\u306b\u906e\u65ad\u6a5f\u304c\u4e0b\u308a\u3066\u3057\u307e\u308f\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3002\n\n```scm:Definitions\n(define-channel t-f (x) '((0) (1)))\n(define-channel t-b (x) '((0) (1)))\n\n(define-channel f-c (x) '((0) (1)))\n(define-channel b-c (x) '((0) (1)))\n(define-channel g-c (x) '((0) (1)))\n\n(define-event gate-open)\n(define-event gate-close)\n```\n\n```scm:SYS\n(define-process Train\n  (! t-f (0) (! t-f (1) (! t-b (0) (! t-b (1) STOP)))))\n\n(define-process Front-Censor\n  (? t-f (x)\n\t (if (= x 0)\n\t\t (! f-c (0) SKIP)\n         (! f-c (1) SKIP))))\n\n(define-process Back-Censor\n  (? t-b (x)\n\t (if (= x 0)\n\t\t (! b-c (0) SKIP)\n\t\t (! b-c (0) SKIP))))\n\n(define-process Gate-Controller\n  (alt\n\t(? f-c (x) (= x 0) (! gate-open Gate-Controller))\n\t(? b-c (x) (= x 1) (! gate-close Gate-Controller))))\n\n(define-process SYS\n  (par (list t-f t-b)\n\tTrain\n\tFront-Censor\n\tBack-Censor\n\tGate-Controller)) \n```", "tags": ["Scheme"]}