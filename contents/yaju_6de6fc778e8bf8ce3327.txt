{"tags": ["WSH", "VBScript"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u4f1a\u793e\u3067\u306f\u904b\u7528\u30c1\u30fc\u30e0\u306b\u5c5e\u3057\u3066\u3044\u3066\u3001\u5404\u770c\u306b\u3042\u308b30\u8fd1\u3044\u5de5\u5834\u306e\u904b\u7528\u4f5c\u696d\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u30b7\u30b9\u30c6\u30e0\u306e\u5c0e\u5165\u4f5c\u696d\u304c\u3042\u308b\u3068\u5de5\u5834\u3054\u3068\u306b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u3066\u5c0e\u5165\u3057\u3066\u304a\u308a\u3001\u73fe\u5728\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\u306f\u624b\u4f5c\u696d\u3067\u884c\u3063\u3066\u3044\u308b\u3002\n\u305d\u306e\u70ba\u3001\u300c\u3010WSH\u3011\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb(xml,ini)\u306e\u7de8\u96c6\u30c4\u30fc\u30eb\u300d(ReplaceConfig.vbs)\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u52b9\u7387\u5316\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u305f\u3002\u3057\u304b\u3057\u3001\u88fd\u54c1\u540d\u3092\u5909\u66f4\u3057\u305f\u3044\u3068\u3044\u3046\u8981\u671b\u3082\u3042\u308a\u3001\u3082\u3046\u4e00\u5de5\u592b\u5fc5\u8981\u306b\u306a\u3063\u305f\u3002\nClickOnce\u306e\u767a\u884c\u7269\u3092\u300cMageUI.exe\u300d\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u88fd\u54c1\u540d\u3084\u30d0\u30fc\u30b8\u30e7\u30f3\u3084Start Location\u306a\u3069\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u304c\u3001\u88fd\u54c1\u540d\u3092\u5909\u66f4\u3057\u3066\u3082\u300cpublish.htm\u300d\u30d5\u30a1\u30a4\u30eb\u307e\u3067\u306f\u66f4\u65b0\u3055\u308c\u307e\u305b\u3093\u3002\n\u88fd\u54c1\u540d\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u300c.application\u300d\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u306fXML\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\u305f\u3081\u3001\u7de8\u96c6\u30c4\u30fc\u30eb(ReplaceConfig.vbs)\u3092\u4f7f\u3046\u3053\u3068\u3067\u5909\u66f4\u3067\u304d\u305f\u304c\u3001\u300cpublish.htm\u300d\u30d5\u30a1\u30a4\u30eb\u306fHTML\u3067\u3042\u308a\u7279\u5b9a\u3067\u304d\u308b\u30ad\u30fc\u304c\u7121\u3044\u305f\u3081\u3001\u5225\u9014\u3001\u6b63\u898f\u8868\u73fe\u3067\u7f6e\u63db\u3059\u308b\u30c4\u30fc\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u901a\u5e38\u4f7f\u308f\u308c\u308b\u6587\u5b57\u30b3\u30fc\u30c9\u3084\u6539\u884c\u30b3\u30fc\u30c9\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n2016/11/16\u8ffd\u8a18\n\u7f6e\u63db\u5bfe\u8c61\u306e\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3068\u3044\u3044\u306a\u3068\u601d\u3063\u305f\u306e\u3067\u3001\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n\u4f7f\u7528\u65b9\u6cd5\n\u300cReplaceRegex.vbs\u300d\u306f\u5f15\u6570\u3092\uff14\u3064\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\nReplaceRegex.vbs FileName Search Value [CharSet]\n\n\nFileName\n\u7f6e\u63db\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nSearch\n\u691c\u7d22\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe\u5bfe\u5fdc)\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b /ab+c/gi\n\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3046\u5834\u5408\u306fJavascript\u306e\u6b63\u898f\u8868\u73fe\u306e\u6307\u5b9a\u65b9\u6cd5\u3068\u540c\u3058\u304f\u300c/\u6b63\u898f\u8868\u73fe\u6587\u5b57\u5217/\u30aa\u30d7\u30b7\u30e7\u30f3\u300d\u3068\u306a\u308a\u307e\u3059\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u306f2\u7a2e\u985e\u3067\u300cg\u300d\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30de\u30c3\u30c1\u3001\u300ci\u300d\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u82f1\u5927\u6587\u5b57\u3068\u5c0f\u6587\u5b57\u3092\u7121\u8996\u3067\u3059\u3002\n\u6b63\u898f\u8868\u73fe\u3092\u66f8\u304f\u969b\u306b\u300c<\u300d\u3084\u300c>\u300d\u3084\u300c|\u300d\u306a\u3069\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306b\u4f7f\u3046\u6587\u5b57\u3084\u7a7a\u767d\u3084\u542b\u3080\u3084\u6587\u5b57\u5217\u306f2\u91cd\u5f15\u7528\u7b26\u3067\u56f2\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u7279\u6b8a\u6587\u5b57\u300c\"\u300d\u3084\u300c%\u300d\u306a\u3069\u3092\u5024\u3068\u3057\u3066\u4f7f\u3046\u5834\u5408\u306f\u3001\u300c#(16\u9032\u6570)\u300d\u3068\u3057\u3066\u304f\u3060\u3055\u3044\u30022\u91cd\u5f15\u7528\u7b26\u306e\u300c\"\u300d\u306f\u300c#22\u300d\u3068\u306a\u308a\u307e\u3059\u3002\nValue\n\u5909\u66f4\u3059\u308b\u5024(\u6b63\u898f\u8868\u73fe\u5bfe\u5fdc)\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b \\$1-\\$2-\\$3\n\u691c\u7d22\u6587\u5b57\u5217\u304c\u6b63\u898f\u8868\u73fe\u3060\u3063\u305f\u5834\u5408\u306b\u5f8c\u65b9\u53c2\u7167\u306a\u3069\u6b63\u898f\u8868\u73fe\u7528\u306e\u7f6e\u63db\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u300c<\u300d\u3084\u300c>\u300d\u3084\u300c|\u300d\u306a\u3069\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306b\u4f7f\u3046\u6587\u5b57\u3084\u7a7a\u767d\u3084\u542b\u3080\u3084\u6587\u5b57\u5217\u306f2\u91cd\u5f15\u7528\u7b26\u3067\u56f2\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u7279\u6b8a\u6587\u5b57\u300c\"\u300d\u3084\u300c%\u300d\u306a\u3069\u3092\u5024\u3068\u3057\u3066\u4f7f\u3046\u5834\u5408\u306f\u3001\u300c#(16\u9032\u6570)\u300d\u3068\u3057\u3066\u304f\u3060\u3055\u3044\u30022\u91cd\u5f15\u7528\u7b26\u306e\u300c\"\u300d\u306f\u300c#22\u300d\u3068\u306a\u308a\u307e\u3059\u3002\n\u56fa\u5b9a\u6587\u5b57\u5217\u300cGETVALUE\u300d\u306b\u3059\u308b\u3068\u3001\u7f6e\u63db\u3067\u306f\u306a\u304f\u7f6e\u63db\u5bfe\u8c61\u306e\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\nCharSet\nBOM\u7121\u3057\u306e\u5834\u5408\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u4e0d\u8981\u306a\u5834\u5408\u306f\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u300cShift-JIS\u300d\u3068\u306a\u308a\u307e\u3059\u3002\n\u203b\u30d5\u30a1\u30a4\u30eb\u5185\u306e5\u884c\u76ee\u4ee5\u5185\u306b\u300cencoding\u300d\u3084\u300ccharset\u300d\u304c\u3042\u308c\u3070\u6307\u5b9a\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u512a\u5148\u3057\u307e\u3059\u3002\n\n\n\u4f7f\u7528\u4f8b\nClickOnce\u306e\u300cpublish.htm\u300d\u30d5\u30a1\u30a4\u30eb\u306e\u88fd\u54c1\u540d\u304c\u300c\u5916\u6ce8\u53d7\u6255\u3044\u30b7\u30b9\u30c6\u30e0(\u30a4\u30f3\u30c8\u30e9\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528)\u300d\u3001\u30bf\u30a4\u30c8\u30eb\u304c\u300c\u5916\u6ce8\u53d7\u6255\u3044\u30b7\u30b9\u30c6\u30e0(\u30a4\u30f3\u30c8\u30e9\u5074\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528)\u300d\u3068\u300c\u5074\u300d\u304c\u4ed8\u3044\u3066\u3044\u308b\u3068\u3044\u3046\u9055\u3044\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u62ec\u5f27\u5185\u3092\u300c\u5de5\u7a0b\u7528\u300d\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n\u6b63\u898f\u8868\u73fe\u4f7f\u7528\nReplaceRegex publish.htm /\u30a4\u30f3\u30c8\u30e9.?\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528/ \u5de5\u7a0b\u7528\n\n\n\n\u6b63\u898f\u8868\u73fe\u4f7f\u7528(\u62ec\u5f27\u3092\u5f8c\u65b9\u53c2\u7167\u3067\u30bb\u30c3\u30c8)\nReplaceRegex publish.htm /(\\()(\u30a4\u30f3\u30c8\u30e9.?\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528)(\\))/ $1\u5de5\u7a0b\u7528$3\n\n\n\u300c\u30a4\u30f3\u30c8\u30e9\u5074\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528\u300d\u3067\u7d71\u4e00\u3055\u308c\u3066\u3044\u305f\u5834\u5408\n\n\u6b63\u898f\u8868\u73fe\u672a\u4f7f\u7528\nReplaceRegex publish.htm \u30a4\u30f3\u30c8\u30e9\u5074\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528 \u5de5\u7a0b\u7528\n\n\n\n\n\n\u5024\u306e\u53d6\u5f97\n\u6700\u521d\u306b\u898b\u3064\u3051\u305f\u300c\u30a4\u30f3\u30c8\u30e9\u5074\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528\u300d\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\nfor /f \"usebackq tokens=*\" %%i IN (`call cscript //nologo ReplaceRegex.vbs publish.htm \"/\u30a4\u30f3\u30c8\u30e9.?\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528/\" GETVALUE`) DO @set result=%%i\n\necho %result%\n\n\u6b63\u898f\u8868\u73fe\u304c\u4f7f\u3048\u308b\u305f\u3081\u62ec\u5f27\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u3068\u30ab\u30f3\u30de\u533a\u5207\u308a\u306b\u3057\u3066\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u4f8b (,\u30a4\u30f3\u30c8\u30e9\u5074\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528,)\n\u203b\u30d0\u30c3\u30c1\u3067\u306f\u62ec\u5f27\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u30012\u91cd\u5f15\u7528\u7b26\u3067\u56f2\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nfor /f \"usebackq tokens=*\" %%i IN (`call cscript //nologo ReplaceRegex.vbs publish.htm \"/(\\()(\u30a4\u30f3\u30c8\u30e9.?\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528)(\\))/\" GETVALUE`) DO @set result=%%i\n\necho %result%\n\n\n\u30bd\u30fc\u30b9\u30ea\u30b9\u30c8\n\nReplaceRegex.vbs\n'--------------------------------------\n'  \u5f15\u65701: \u5909\u66f4\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n'  \u5f15\u65702: \u691c\u7d22\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe)\n'  \u5f15\u65703: \u5909\u66f4\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe)\n'  \u5f15\u65704: \u6587\u5b57\u30b3\u30fc\u30c9(BOM\u4ee5\u5916)\n'--------------------------------------\nOption Explicit\n'On Error Resume Next\n\nConst ForReading = 1, ForWriting = 2, ForAppEnding = 8\nConst adTypeBinary = 1, adTypeText = 2\nConst adReadAll = -1, adReadLine = -2\n\nConst GET_CONFIG = \"GETVALUE\"\n\nDim objArgs, fso\nDim pathName, searchPattern, valuePattern, charSet, strLine\n\n'\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u53d6\u5f97\nSet objArgs = WScript.Arguments\n\n'\u5bfe\u8c61\u30d1\u30b9\u540d\u53d6\u5f97\nIf objArgs.Count >= 1 Then\n    pathName = objArgs(0)\n    Set fso = CreateObject(\"Scripting.FileSystemObject\")\n    If fso.FileExists(pathName) = False Then\n        WScript.Echo pathName & \" \u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\"\n        WScript.Quit(1)\n    End If\n    Set fso = Nothing\nElse\n    WScript.Echo \"\u5bfe\u8c61\u30d1\u30b9\u540d\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n    WScript.Quit(1)\nEnd If\n\n'\u691c\u7d22\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe)\u53d6\u5f97\nIf objArgs.Count >= 2 Then\n    searchPattern = objArgs(1)\nElse\n    WScript.Echo \"\u691c\u7d22\u6587\u5b57\u5217\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n    WScript.Quit(2)\nEnd If\n\n'\u5909\u66f4\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe)\u53d6\u5f97\nIf objArgs.count >= 3 then\n    valuePattern = objArgs(2)\nElse\n    WScript.Echo \"\u5909\u66f4\u6587\u5b57\u5217\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n    WScript.Quit(3)\nEnd If\n\n'\u6587\u5b57\u30b3\u30fc\u30c9(BOM\u4ee5\u5916)\nIf objArgs.count >= 4 then\n    charSet = UCase(objArgs(3))\nEnd If\n\n'\u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\nDim param, result\nSet param = CreateObject(\"Scripting.Dictionary\")\nCall GetInfo(pathName, charSet)\n\n'\u6b63\u898f\u8868\u73fe\u5bfe\u5fdc\u306e\u7f6e\u63db\u51e6\u7406\nresult = Main(pathName, searchPattern, valuePattern)\nSet param = Nothing\n\nWScript.Quit(result)\n\n'------------------------------------------------------------------------\n'  \u6b63\u898f\u8868\u73fe\u5bfe\u5fdc\u306e\u7f6e\u63db\u51e6\u7406\n'  pathName:        \u5bfe\u8c61\u30d1\u30b9\u540d\n'  searchPattern:   \u691c\u7d22\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe)\n'  valuePattern:    \u5909\u66f4\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe)\n'------------------------------------------------------------------------\nFunction Main(pathName, searchPattern, valuePattern)\n\n    Dim reg, matches, match, stream_r, stream_pre, stream_w\n    Dim bin, newtxt, line, lineSave, i, idx, count, regPattern\n    Dim regexFlag, exitFlag, lfType, allLine, aryLine, result\n\n    Main = 0\n\n    Set stream_r = CreateObject(\"ADODB.Stream\")\n    Set stream_pre = CreateObject(\"ADODB.Stream\")\n    Set stream_w = CreateObject(\"ADODB.Stream\")\n    Set reg = CreateObject(\"VBScript.RegExp\")\n    reg.Global = True\n    reg.IgnoreCase = True\n\n    '\u73fe\u884c\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3067\u8aad\u307f\u8fbc\u3080\n    stream_r.Open\n    stream_r.CharSet = param(\"CharSet\")\n    stream_r.LoadFromFile pathName\n    allLine = stream_r.ReadText(adReadAll)\n    stream_r.Close\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\n    lfType = \"\"\n    Select Case param(\"LfType\")\n        Case \"CrLf\": lfType = vbCrLf\n        Case \"Lf\": lfType = vbLf\n        Case \"Cr\": lfType = vbCr\n    End Select\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\u3067\u5206\u5272\n    aryLine = Split(allLine, lfType)\n\n    '\u691c\u7d22\u6587\u5b57\u5217\u306e#(16\u9032\u6570)\u306e\u6587\u5b57\u5909\u63db\n    searchPattern = ReplaceChr(searchPattern)\n\n    '\u5909\u66f4\u6587\u5b57\u5217\u306e#(16\u9032\u6570)\u306e\u6587\u5b57\u5909\u63db\n    valuePattern = ReplaceChr(valuePattern)\n\n    '\u691c\u7d22\u6587\u5b57\u5217\u304c\u6b63\u898f\u8868\u73fe\u304b\u3092\u78ba\u8a8d\n    regexFlag = False\n    reg.Pattern =  \"\\/(.*)\\/([gi]*)$\"\n    reg.Global = False\n    reg.IgnoreCase = False\n    Set matches = reg.Execute(searchPattern)\n    regexFlag = (matches.Count > 0)\n    For Each match In matches\n        regPattern = match.SubMatches(0)\n\n        Select case match.SubMatches(1)\n            Case \"g\"\n                reg.Global = True\n            Case \"i\"\n                reg.IgnoreCase = True\n            Case \"gi\",\"ig\"\n                reg.Global = True\n                reg.IgnoreCase = True\n        End Select\n    Next\n    Set matches = Nothing\n\n    i = 0\n    count = 0\n    exitFlag = False\n    For idx = 0 To UBound(aryLine)\n        line = aryLine(idx)\n        If regexFlag = True Then\n            '\u6b63\u898f\u8868\u73fe\u306b\u3088\u308b\u7f6e\u63db\n            reg.Pattern = regPattern\n            If reg.Test(line) Then\n                '\u7f6e\u63db\n                result = GetValue(reg, valuePattern, line)\n                line = reg.Replace(line, valuePattern)\n                exitFlag = True\n            End If\n        Else\n            '\u901a\u5e38\u306e\u7f6e\u63db\n            result = GetValue(reg, valuePattern, line)\n            lineSave = line\n            line = Replace(line, searchPattern, valuePattern)\n            If line <> lineSave Then exitFlag = True\n        End If\n\n        '\u8aad\u307f\u8fbc\u3093\u3060\u884c\u3092\u518d\u30bb\u30c3\u30c8\n        aryLine(idx) = line\n    Next\n\n    If exitFlag = True Then\n        If UCase(valuePattern) = GET_CONFIG Then\n            '\u5024\u3092\u8fd4\u3059\n            WScript.Echo result\n        Else\n            '\u6539\u884c\u3092\u4ed8\u52a0\n            newtxt = Join(aryLine, lfType)\n\n            '\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\n            If param(\"CharSet\") = \"UTF-8\" And param(\"IsBOM\") = False Then\n                'BOM\u7121\u3057\n                stream_pre.Type = adTypeText\n                stream_pre.CharSet = param(\"CharSet\")\n                stream_pre.Open\n                stream_pre.WriteText newtxt\n\n                stream_pre.Position = 0\n                stream_pre.Type = adTypeBinary\n                stream_pre.Position = 3\n                bin = stream_pre.Read()\n                stream_pre.Close()\n\n                stream_w.Type = adTypeBinary\n                stream_w.Open()\n                stream_w.Write(bin)\n                stream_w.SaveToFile pathName, ForWriting\n                stream_w.Close()\n            Else\n                stream_w.Open()\n                stream_w.Charset = param(\"CharSet\")\n                stream_w.WriteText newtxt\n                stream_w.SaveToFile pathName, ForWriting\n                stream_w.Close()\n            End If\n        End If\n    Else\n        WScript.Echo \"\u691c\u7d22\u6587\u5b57\u5217\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\"\n        Main = 9\n    End If\n\n    Set reg = Nothing\n\nEnd Function\n\n'------------------------------------------------------------------------\n'#(16\u9032\u6570)\u306e\u6587\u5b57\u5909\u63db\n'------------------------------------------------------------------------\nFunction ReplaceChr(target)\n    Dim reg, matches, match, hexvalue\n\n    Set reg = CreateObject(\"VBScript.RegExp\")\n    reg.Global = True\n    reg.IgnoreCase = True\n\n    reg.Pattern =  \"#([0-9A-Fa-f]{2})\"\n    Set matches = reg.Execute(target)\n    For Each match In matches\n        hexvalue = match.SubMatches(0)\n        target = Replace(target, \"#\" & hexvalue, Chr(CInt(\"&H\" & hexvalue)))\n    Next\n    Set matches = Nothing\n\n    ReplaceChr = target\n\n    Set reg = Nothing\nEnd Function\n\n'------------------------------------------------------------------------\n'\u30d5\u30a1\u30a4\u30eb\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u7b49\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n'------------------------------------------------------------------------\nFunction GetInfo(pathName, charSet)\n\n    Dim stream, reg, match, matches, bytCode, allLine, line, endLine, lfType, aryLine\n    Dim i, charcode\n\n    Const FindMaxLine = 5               'BOM\u7121\u3057\u6642\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u63a2\u7d22\u884c\n    GetInfo = False\n\n    '\u521d\u671f\u5024\u30bb\u30c3\u30c8\n    param.Add \"CharSet\", \"SJIS\"         '\u6587\u5b57\u30b3\u30fc\u30c9\n    param.Add \"IsBOM\", False            'BOM\u6709\u7121\n    param.Add \"LfType\", \"CrLf\"          '\u6539\u884c\u30b3\u30fc\u30c9\n    param.Add \"IsEndLf\", False          '\u672b\u5c3e\u6539\u884c\u6709\u7121\n\n    '\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\n    Set stream = CreateObject(\"ADODB.Stream\")\n\n    'BOM\u30c1\u30a7\u30c3\u30af\u7528\u306b\u5148\u982d\u884c\u3092\u8aad\u307f\u8fbc\u3080\n    stream.Type = adTypeBinary\n    stream.Open\n    stream.LoadFromFile pathName\n    bytCode = stream.Read\n    stream.Close\n    Call CheckBOM(bytCode)\n\n    '\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u5224\u5b9a\u3067\u8aad\u307f\u8fbc\u307f\n    stream.Type = adTypeText\n    stream.CharSet = \"_autodetect_all\"\n    If charSet <> \"\" Then stream.CharSet = charSet\n    stream.Open\n    stream.LoadFromFile pathName\n    allLine = stream.ReadText(adReadAll)\n    stream.Close\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\u5224\u5b9a(100\u6587\u5b57\u3067\u5224\u65ad)\n    line = Left(allLine, 100)\n    If Instr(line, vbCrLf) <> 0 Then\n        lfType = \"CrLf\"\n    ElseIf Instr(line, vbLf) <> 0 Then\n        lfType = \"Lf\"\n    ElseIf Instr(line, vbCr) <> 0 Then\n        lfType = \"Cr\"\n    End If\n    param(\"LfType\") = lfType\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\u3067\u5206\u5272\n    Select Case param(\"LfType\")\n        Case \"CrLf\": lfType = vbCrLf\n        Case \"Lf\": lfType = vbLf\n        Case \"Cr\": lfType = vbCr\n    End Select\n    aryLine = Split(allLine, lfType)\n\n    'BOM\u7121\u3057\u306a\u3089\u3001encoding\u3068charset\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u53c2\u7167\n    If param(\"IsBOM\") = False Then\n        Set reg = CreateObject(\"VBScript.RegExp\")\n        'encoding\u307e\u305f\u306fcharset\u306e\u5024\u3092\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u30bb\u30c3\u30c8\n        reg.Pattern = \"(?:encoding|charset).*?=(?:['\"\"](.*?)['\"\"]|(.*))\"\n        reg.IgnoreCase = True\n        For i = 0 To FindMaxLine - 1\n            Set matches = reg.Execute(aryLine(i))\n            For Each match In matches\n                charcode = UCase(match.SubMatches(0) & match.SubMatches(1))\n                param(\"CharSet\") = charcode\n            Next\n            If charcode > \"\" Or i >= UBound(aryLine) Then Exit For\n        Next\n        Set matches = Nothing\n        Set reg = Nothing\n    End If\n\n    '\u6700\u7d42\u884c\u306e\u6539\u884c\u30b3\u30fc\u30c9\u6709\u7121\n    If aryLine(UBound(aryLine)) = \"\" Then\n        param(\"IsEndLf\") = True\n    End If\n\n    GetInfo = True\n\nEnd Function\n\n'------------------------------------------------------------------------\n'BOM\u30c1\u30a7\u30c3\u30af\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n'------------------------------------------------------------------------\nFunction CheckBOM(str)\n    Dim bytes(2), result\n\n    bytes(0) = AscB(MidB(str, 1, 1))\n    bytes(1) = AscB(MidB(str, 2, 1))\n    bytes(2) = AscB(MidB(str, 3, 1))\n\n    If LenB(str) > 1 Then\n        If bytes(0) >= &HFE And bytes(1) >= &HFE Then\n            result = \"unicode\"\n            If bytes(0) = &HFF And bytes(1) = &HFE Then\n                result = \"unicodeFFFE\"\n            End If\n        Else If bytes(0) = &HEF And bytes(1) = &HBB And bytes(2) = &HBF Then\n                result = \"UTF-8\"\n            End If\n        End If\n    End If\n\n    If result <> \"\" Then\n        param(\"CharSet\") = result\n        param(\"IsBOM\") = True\n    End If\n\n    CheckBOM = result\n\nEnd Function\n\n'------------------------------------------------------------------------\n'\u73fe\u5728\u306e\u8a2d\u5b9a\u5024\u3092\u53d6\u5f97\u3059\u308b\n'------------------------------------------------------------------------\nFunction GetValue(reg, valueString, target)\n    Dim matches, match, comma, i\n\n    GetValue = \"\"\n    If UCase(valueString) = GET_CONFIG Then\n        Set matches = reg.Execute(target)\n        For Each match In matches\n            If match.SubMatches.Count > 0 Then\n                comma = \"\"\n                For i=0 To match.SubMatches.Count - 1\n                    GetValue = GetValue & comma & match.SubMatches(i)\n                    comma = \",\"\n                Next\n            Else\n                GetValue = match.Value\n                Exit For\n            End If\n        Next\n    End If\n\nEnd Function\n\n\n\n\u30e9\u30a4\u30bb\u30f3\u30b9\u3063\u307d\u3044\u3053\u3068\n\n\u30b3\u30fc\u30c9\u6539\u5909\u3084\u914d\u5e03\u306f\u81ea\u7531\u3067\u3059\u3002\n\u3053\u306e\u30c4\u30fc\u30eb\u306b\u3088\u308b\u7fa9\u52d9\uff0f\u8cac\u4efb\u3092\u4f55\u3089\u8ca0\u3044\u307e\u305b\u3093\u3002\n\n\n\u6700\u5f8c\u306b\n\u300c\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3 \u6b63\u898f\u8868\u73fe \u7f6e\u63db\u300d\u3067\u691c\u7d22\u3059\u308b\u3068\u3001\u300cmfind\u300d\u3084\u300csakura\u30a8\u30c7\u30a3\u30bf\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30aa\u30d7\u30b7\u30e7\u30f3\u300d\u3050\u3089\u3044\u3057\u304b\u898b\u3064\u304b\u3089\u306a\u3044\u306e\u3067\u3042\u307e\u308a\u9700\u8981\u306f\u306a\u3044\u304b\u306a\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4e0d\u5177\u5408\u304c\u3042\u308c\u3070\u968f\u6642\u4fee\u6b63\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u3053\u306e\u30c4\u30fc\u30eb\u304c\u304a\u5f79\u306b\u7acb\u3066\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n# \u306f\u3058\u3081\u306b\n\u4f1a\u793e\u3067\u306f\u904b\u7528\u30c1\u30fc\u30e0\u306b\u5c5e\u3057\u3066\u3044\u3066\u3001\u5404\u770c\u306b\u3042\u308b30\u8fd1\u3044\u5de5\u5834\u306e\u904b\u7528\u4f5c\u696d\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u30b7\u30b9\u30c6\u30e0\u306e\u5c0e\u5165\u4f5c\u696d\u304c\u3042\u308b\u3068\u5de5\u5834\u3054\u3068\u306b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3057\u3066\u5c0e\u5165\u3057\u3066\u304a\u308a\u3001\u73fe\u5728\u306f\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\u306f\u624b\u4f5c\u696d\u3067\u884c\u3063\u3066\u3044\u308b\u3002\n\u305d\u306e\u70ba\u3001\u300c[\u3010WSH\u3011\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb(xml,ini)\u306e\u7de8\u96c6\u30c4\u30fc\u30eb](http://qiita.com/yaju/items/45799934a516ff4f3504)\u300d(ReplaceConfig.vbs)\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u52b9\u7387\u5316\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u305f\u3002\u3057\u304b\u3057\u3001\u88fd\u54c1\u540d\u3092\u5909\u66f4\u3057\u305f\u3044\u3068\u3044\u3046\u8981\u671b\u3082\u3042\u308a\u3001\u3082\u3046\u4e00\u5de5\u592b\u5fc5\u8981\u306b\u306a\u3063\u305f\u3002\nClickOnce\u306e\u767a\u884c\u7269\u3092\u300cMageUI.exe\u300d\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u88fd\u54c1\u540d\u3084\u30d0\u30fc\u30b8\u30e7\u30f3\u3084Start Location\u306a\u3069\u306e\u8a2d\u5b9a\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u304c\u3001\u88fd\u54c1\u540d\u3092\u5909\u66f4\u3057\u3066\u3082\u300cpublish.htm\u300d\u30d5\u30a1\u30a4\u30eb\u307e\u3067\u306f\u66f4\u65b0\u3055\u308c\u307e\u305b\u3093\u3002\n\u88fd\u54c1\u540d\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u300c.application\u300d\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u306fXML\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\u305f\u3081\u3001\u7de8\u96c6\u30c4\u30fc\u30eb(ReplaceConfig.vbs)\u3092\u4f7f\u3046\u3053\u3068\u3067\u5909\u66f4\u3067\u304d\u305f\u304c\u3001\u300cpublish.htm\u300d\u30d5\u30a1\u30a4\u30eb\u306fHTML\u3067\u3042\u308a\u7279\u5b9a\u3067\u304d\u308b\u30ad\u30fc\u304c\u7121\u3044\u305f\u3081\u3001\u5225\u9014\u3001\u6b63\u898f\u8868\u73fe\u3067\u7f6e\u63db\u3059\u308b\u30c4\u30fc\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u901a\u5e38\u4f7f\u308f\u308c\u308b\u6587\u5b57\u30b3\u30fc\u30c9\u3084\u6539\u884c\u30b3\u30fc\u30c9\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n2016/11/16\u8ffd\u8a18\n\u7f6e\u63db\u5bfe\u8c61\u306e\u5024\u3092\u53d6\u5f97\u3067\u304d\u308b\u3068\u3044\u3044\u306a\u3068\u601d\u3063\u305f\u306e\u3067\u3001\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n# \u4f7f\u7528\u65b9\u6cd5\n\u300cReplaceRegex.vbs\u300d\u306f\u5f15\u6570\u3092\uff14\u3064\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n```\nReplaceRegex.vbs FileName Search Value [CharSet]\n```\n\n* FileName\n\u7f6e\u63db\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n* Search\n\u691c\u7d22\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe\u5bfe\u5fdc)\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b /ab+c/gi\n\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3046\u5834\u5408\u306fJavascript\u306e\u6b63\u898f\u8868\u73fe\u306e\u6307\u5b9a\u65b9\u6cd5\u3068\u540c\u3058\u304f\u300c/\u6b63\u898f\u8868\u73fe\u6587\u5b57\u5217/\u30aa\u30d7\u30b7\u30e7\u30f3\u300d\u3068\u306a\u308a\u307e\u3059\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u306f2\u7a2e\u985e\u3067\u300cg\u300d\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30de\u30c3\u30c1\u3001\u300ci\u300d\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u82f1\u5927\u6587\u5b57\u3068\u5c0f\u6587\u5b57\u3092\u7121\u8996\u3067\u3059\u3002\n\u6b63\u898f\u8868\u73fe\u3092\u66f8\u304f\u969b\u306b\u300c<\u300d\u3084\u300c>\u300d\u3084\u300c|\u300d\u306a\u3069\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306b\u4f7f\u3046\u6587\u5b57\u3084\u7a7a\u767d\u3084\u542b\u3080\u3084\u6587\u5b57\u5217\u306f2\u91cd\u5f15\u7528\u7b26\u3067\u56f2\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u7279\u6b8a\u6587\u5b57\u300c\"\u300d\u3084\u300c%\u300d\u306a\u3069\u3092\u5024\u3068\u3057\u3066\u4f7f\u3046\u5834\u5408\u306f\u3001\u300c#(16\u9032\u6570)\u300d\u3068\u3057\u3066\u304f\u3060\u3055\u3044\u30022\u91cd\u5f15\u7528\u7b26\u306e\u300c\"\u300d\u306f\u300c#22\u300d\u3068\u306a\u308a\u307e\u3059\u3002\n* Value\n\u5909\u66f4\u3059\u308b\u5024(\u6b63\u898f\u8868\u73fe\u5bfe\u5fdc)\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u4f8b \\$1-\\$2-\\$3\n\u691c\u7d22\u6587\u5b57\u5217\u304c\u6b63\u898f\u8868\u73fe\u3060\u3063\u305f\u5834\u5408\u306b\u5f8c\u65b9\u53c2\u7167\u306a\u3069\u6b63\u898f\u8868\u73fe\u7528\u306e\u7f6e\u63db\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u300c<\u300d\u3084\u300c>\u300d\u3084\u300c|\u300d\u306a\u3069\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306b\u4f7f\u3046\u6587\u5b57\u3084\u7a7a\u767d\u3084\u542b\u3080\u3084\u6587\u5b57\u5217\u306f2\u91cd\u5f15\u7528\u7b26\u3067\u56f2\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u7279\u6b8a\u6587\u5b57\u300c\"\u300d\u3084\u300c%\u300d\u306a\u3069\u3092\u5024\u3068\u3057\u3066\u4f7f\u3046\u5834\u5408\u306f\u3001\u300c#(16\u9032\u6570)\u300d\u3068\u3057\u3066\u304f\u3060\u3055\u3044\u30022\u91cd\u5f15\u7528\u7b26\u306e\u300c\"\u300d\u306f\u300c#22\u300d\u3068\u306a\u308a\u307e\u3059\u3002\n\u56fa\u5b9a\u6587\u5b57\u5217\u300cGETVALUE\u300d\u306b\u3059\u308b\u3068\u3001\u7f6e\u63db\u3067\u306f\u306a\u304f\u7f6e\u63db\u5bfe\u8c61\u306e\u5024\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n* CharSet\nBOM\u7121\u3057\u306e\u5834\u5408\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u4e0d\u8981\u306a\u5834\u5408\u306f\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u300cShift-JIS\u300d\u3068\u306a\u308a\u307e\u3059\u3002\n\u203b\u30d5\u30a1\u30a4\u30eb\u5185\u306e5\u884c\u76ee\u4ee5\u5185\u306b\u300cencoding\u300d\u3084\u300ccharset\u300d\u304c\u3042\u308c\u3070\u6307\u5b9a\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u512a\u5148\u3057\u307e\u3059\u3002\n\n# \u4f7f\u7528\u4f8b\n\nClickOnce\u306e\u300cpublish.htm\u300d\u30d5\u30a1\u30a4\u30eb\u306e\u88fd\u54c1\u540d\u304c\u300c\u5916\u6ce8\u53d7\u6255\u3044\u30b7\u30b9\u30c6\u30e0(\u30a4\u30f3\u30c8\u30e9\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528)\u300d\u3001\u30bf\u30a4\u30c8\u30eb\u304c\u300c\u5916\u6ce8\u53d7\u6255\u3044\u30b7\u30b9\u30c6\u30e0(\u30a4\u30f3\u30c8\u30e9\u5074\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528)\u300d\u3068\u300c\u5074\u300d\u304c\u4ed8\u3044\u3066\u3044\u308b\u3068\u3044\u3046\u9055\u3044\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u62ec\u5f27\u5185\u3092\u300c\u5de5\u7a0b\u7528\u300d\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```bat:\u6b63\u898f\u8868\u73fe\u4f7f\u7528\nReplaceRegex publish.htm /\u30a4\u30f3\u30c8\u30e9.?\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528/ \u5de5\u7a0b\u7528\n```\n\n```bat:\u6b63\u898f\u8868\u73fe\u4f7f\u7528(\u62ec\u5f27\u3092\u5f8c\u65b9\u53c2\u7167\u3067\u30bb\u30c3\u30c8)\nReplaceRegex publish.htm /(\\()(\u30a4\u30f3\u30c8\u30e9.?\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528)(\\))/ $1\u5de5\u7a0b\u7528$3\n```\n\n\n\u300c\u30a4\u30f3\u30c8\u30e9\u5074\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528\u300d\u3067\u7d71\u4e00\u3055\u308c\u3066\u3044\u305f\u5834\u5408\n\n```bat:\u6b63\u898f\u8868\u73fe\u672a\u4f7f\u7528\nReplaceRegex publish.htm \u30a4\u30f3\u30c8\u30e9\u5074\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528 \u5de5\u7a0b\u7528\n```\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/14053/8ea32c53-0bdf-7306-35cb-e54917ab5b5c.png)\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/14053/ec14b3e4-38c1-eb8f-3cc6-e66d7775d59c.png)\n\n## \u5024\u306e\u53d6\u5f97\n\u6700\u521d\u306b\u898b\u3064\u3051\u305f\u300c\u30a4\u30f3\u30c8\u30e9\u5074\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528\u300d\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bat\nfor /f \"usebackq tokens=*\" %%i IN (`call cscript //nologo ReplaceRegex.vbs publish.htm \"/\u30a4\u30f3\u30c8\u30e9.?\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528/\" GETVALUE`) DO @set result=%%i\n\necho %result%\n```\n\n\u6b63\u898f\u8868\u73fe\u304c\u4f7f\u3048\u308b\u305f\u3081\u62ec\u5f27\u3067\u30b0\u30eb\u30fc\u30d7\u5316\u3059\u308b\u3068\u30ab\u30f3\u30de\u533a\u5207\u308a\u306b\u3057\u3066\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u4f8b (,\u30a4\u30f3\u30c8\u30e9\u5074\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528,)\n\u203b\u30d0\u30c3\u30c1\u3067\u306f\u62ec\u5f27\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081\u30012\u91cd\u5f15\u7528\u7b26\u3067\u56f2\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```bat\nfor /f \"usebackq tokens=*\" %%i IN (`call cscript //nologo ReplaceRegex.vbs publish.htm \"/(\\()(\u30a4\u30f3\u30c8\u30e9.?\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u4f7f\u7528)(\\))/\" GETVALUE`) DO @set result=%%i\n\necho %result%\n```\n\n# \u30bd\u30fc\u30b9\u30ea\u30b9\u30c8\n```vbnet:ReplaceRegex.vbs\n'--------------------------------------\n'  \u5f15\u65701: \u5909\u66f4\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n'  \u5f15\u65702: \u691c\u7d22\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe)\n'  \u5f15\u65703: \u5909\u66f4\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe)\n'  \u5f15\u65704: \u6587\u5b57\u30b3\u30fc\u30c9(BOM\u4ee5\u5916)\n'--------------------------------------\nOption Explicit\n'On Error Resume Next\n\nConst ForReading = 1, ForWriting = 2, ForAppEnding = 8\nConst adTypeBinary = 1, adTypeText = 2\nConst adReadAll = -1, adReadLine = -2\n\nConst GET_CONFIG = \"GETVALUE\"\n\nDim objArgs, fso\nDim pathName, searchPattern, valuePattern, charSet, strLine\n\n'\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u53d6\u5f97\nSet objArgs = WScript.Arguments\n\n'\u5bfe\u8c61\u30d1\u30b9\u540d\u53d6\u5f97\nIf objArgs.Count >= 1 Then\n    pathName = objArgs(0)\n    Set fso = CreateObject(\"Scripting.FileSystemObject\")\n    If fso.FileExists(pathName) = False Then\n        WScript.Echo pathName & \" \u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\"\n        WScript.Quit(1)\n    End If\n    Set fso = Nothing\nElse\n    WScript.Echo \"\u5bfe\u8c61\u30d1\u30b9\u540d\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n    WScript.Quit(1)\nEnd If\n\n'\u691c\u7d22\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe)\u53d6\u5f97\nIf objArgs.Count >= 2 Then\n    searchPattern = objArgs(1)\nElse\n    WScript.Echo \"\u691c\u7d22\u6587\u5b57\u5217\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n    WScript.Quit(2)\nEnd If\n\n'\u5909\u66f4\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe)\u53d6\u5f97\nIf objArgs.count >= 3 then\n    valuePattern = objArgs(2)\nElse\n    WScript.Echo \"\u5909\u66f4\u6587\u5b57\u5217\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n    WScript.Quit(3)\nEnd If\n\n'\u6587\u5b57\u30b3\u30fc\u30c9(BOM\u4ee5\u5916)\nIf objArgs.count >= 4 then\n    charSet = UCase(objArgs(3))\nEnd If\n\n'\u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\nDim param, result\nSet param = CreateObject(\"Scripting.Dictionary\")\nCall GetInfo(pathName, charSet)\n\n'\u6b63\u898f\u8868\u73fe\u5bfe\u5fdc\u306e\u7f6e\u63db\u51e6\u7406\nresult = Main(pathName, searchPattern, valuePattern)\nSet param = Nothing\n\nWScript.Quit(result)\n\n'------------------------------------------------------------------------\n'  \u6b63\u898f\u8868\u73fe\u5bfe\u5fdc\u306e\u7f6e\u63db\u51e6\u7406\n'  pathName:        \u5bfe\u8c61\u30d1\u30b9\u540d\n'  searchPattern:   \u691c\u7d22\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe)\n'  valuePattern:    \u5909\u66f4\u6587\u5b57\u5217(\u6b63\u898f\u8868\u73fe)\n'------------------------------------------------------------------------\nFunction Main(pathName, searchPattern, valuePattern)\n\n    Dim reg, matches, match, stream_r, stream_pre, stream_w\n    Dim bin, newtxt, line, lineSave, i, idx, count, regPattern\n    Dim regexFlag, exitFlag, lfType, allLine, aryLine, result\n\n    Main = 0\n\n    Set stream_r = CreateObject(\"ADODB.Stream\")\n    Set stream_pre = CreateObject(\"ADODB.Stream\")\n    Set stream_w = CreateObject(\"ADODB.Stream\")\n    Set reg = CreateObject(\"VBScript.RegExp\")\n    reg.Global = True\n    reg.IgnoreCase = True\n\n    '\u73fe\u884c\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3067\u8aad\u307f\u8fbc\u3080\n    stream_r.Open\n    stream_r.CharSet = param(\"CharSet\")\n    stream_r.LoadFromFile pathName\n    allLine = stream_r.ReadText(adReadAll)\n    stream_r.Close\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\n    lfType = \"\"\n    Select Case param(\"LfType\")\n        Case \"CrLf\": lfType = vbCrLf\n        Case \"Lf\": lfType = vbLf\n        Case \"Cr\": lfType = vbCr\n    End Select\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\u3067\u5206\u5272\n    aryLine = Split(allLine, lfType)\n\n    '\u691c\u7d22\u6587\u5b57\u5217\u306e#(16\u9032\u6570)\u306e\u6587\u5b57\u5909\u63db\n    searchPattern = ReplaceChr(searchPattern)\n\n    '\u5909\u66f4\u6587\u5b57\u5217\u306e#(16\u9032\u6570)\u306e\u6587\u5b57\u5909\u63db\n    valuePattern = ReplaceChr(valuePattern)\n\n    '\u691c\u7d22\u6587\u5b57\u5217\u304c\u6b63\u898f\u8868\u73fe\u304b\u3092\u78ba\u8a8d\n    regexFlag = False\n    reg.Pattern =  \"\\/(.*)\\/([gi]*)$\"\n    reg.Global = False\n    reg.IgnoreCase = False\n    Set matches = reg.Execute(searchPattern)\n    regexFlag = (matches.Count > 0)\n    For Each match In matches\n        regPattern = match.SubMatches(0)\n\n        Select case match.SubMatches(1)\n            Case \"g\"\n                reg.Global = True\n            Case \"i\"\n                reg.IgnoreCase = True\n            Case \"gi\",\"ig\"\n                reg.Global = True\n                reg.IgnoreCase = True\n        End Select\n    Next\n    Set matches = Nothing\n\n    i = 0\n    count = 0\n    exitFlag = False\n    For idx = 0 To UBound(aryLine)\n        line = aryLine(idx)\n        If regexFlag = True Then\n            '\u6b63\u898f\u8868\u73fe\u306b\u3088\u308b\u7f6e\u63db\n            reg.Pattern = regPattern\n            If reg.Test(line) Then\n                '\u7f6e\u63db\n                result = GetValue(reg, valuePattern, line)\n                line = reg.Replace(line, valuePattern)\n                exitFlag = True\n            End If\n        Else\n            '\u901a\u5e38\u306e\u7f6e\u63db\n            result = GetValue(reg, valuePattern, line)\n            lineSave = line\n            line = Replace(line, searchPattern, valuePattern)\n            If line <> lineSave Then exitFlag = True\n        End If\n\n        '\u8aad\u307f\u8fbc\u3093\u3060\u884c\u3092\u518d\u30bb\u30c3\u30c8\n        aryLine(idx) = line\n    Next\n\n    If exitFlag = True Then\n        If UCase(valuePattern) = GET_CONFIG Then\n            '\u5024\u3092\u8fd4\u3059\n            WScript.Echo result\n        Else\n            '\u6539\u884c\u3092\u4ed8\u52a0\n            newtxt = Join(aryLine, lfType)\n\n            '\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\n            If param(\"CharSet\") = \"UTF-8\" And param(\"IsBOM\") = False Then\n                'BOM\u7121\u3057\n                stream_pre.Type = adTypeText\n                stream_pre.CharSet = param(\"CharSet\")\n                stream_pre.Open\n                stream_pre.WriteText newtxt\n\n                stream_pre.Position = 0\n                stream_pre.Type = adTypeBinary\n                stream_pre.Position = 3\n                bin = stream_pre.Read()\n                stream_pre.Close()\n\n                stream_w.Type = adTypeBinary\n                stream_w.Open()\n                stream_w.Write(bin)\n                stream_w.SaveToFile pathName, ForWriting\n                stream_w.Close()\n            Else\n                stream_w.Open()\n                stream_w.Charset = param(\"CharSet\")\n                stream_w.WriteText newtxt\n                stream_w.SaveToFile pathName, ForWriting\n                stream_w.Close()\n            End If\n        End If\n    Else\n        WScript.Echo \"\u691c\u7d22\u6587\u5b57\u5217\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\"\n        Main = 9\n    End If\n\n    Set reg = Nothing\n\nEnd Function\n\n'------------------------------------------------------------------------\n'#(16\u9032\u6570)\u306e\u6587\u5b57\u5909\u63db\n'------------------------------------------------------------------------\nFunction ReplaceChr(target)\n    Dim reg, matches, match, hexvalue\n\n    Set reg = CreateObject(\"VBScript.RegExp\")\n    reg.Global = True\n    reg.IgnoreCase = True\n\n    reg.Pattern =  \"#([0-9A-Fa-f]{2})\"\n    Set matches = reg.Execute(target)\n    For Each match In matches\n        hexvalue = match.SubMatches(0)\n        target = Replace(target, \"#\" & hexvalue, Chr(CInt(\"&H\" & hexvalue)))\n    Next\n    Set matches = Nothing\n\n    ReplaceChr = target\n\n    Set reg = Nothing\nEnd Function\n\n'------------------------------------------------------------------------\n'\u30d5\u30a1\u30a4\u30eb\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u7b49\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n'------------------------------------------------------------------------\nFunction GetInfo(pathName, charSet)\n\n    Dim stream, reg, match, matches, bytCode, allLine, line, endLine, lfType, aryLine\n    Dim i, charcode\n\n    Const FindMaxLine = 5               'BOM\u7121\u3057\u6642\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u63a2\u7d22\u884c\n    GetInfo = False\n\n    '\u521d\u671f\u5024\u30bb\u30c3\u30c8\n    param.Add \"CharSet\", \"SJIS\"         '\u6587\u5b57\u30b3\u30fc\u30c9\n    param.Add \"IsBOM\", False            'BOM\u6709\u7121\n    param.Add \"LfType\", \"CrLf\"          '\u6539\u884c\u30b3\u30fc\u30c9\n    param.Add \"IsEndLf\", False          '\u672b\u5c3e\u6539\u884c\u6709\u7121\n\n    '\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\n    Set stream = CreateObject(\"ADODB.Stream\")\n\n    'BOM\u30c1\u30a7\u30c3\u30af\u7528\u306b\u5148\u982d\u884c\u3092\u8aad\u307f\u8fbc\u3080\n    stream.Type = adTypeBinary\n    stream.Open\n    stream.LoadFromFile pathName\n    bytCode = stream.Read\n    stream.Close\n    Call CheckBOM(bytCode)\n\n    '\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u5224\u5b9a\u3067\u8aad\u307f\u8fbc\u307f\n    stream.Type = adTypeText\n    stream.CharSet = \"_autodetect_all\"\n    If charSet <> \"\" Then stream.CharSet = charSet\n    stream.Open\n    stream.LoadFromFile pathName\n    allLine = stream.ReadText(adReadAll)\n    stream.Close\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\u5224\u5b9a(100\u6587\u5b57\u3067\u5224\u65ad)\n    line = Left(allLine, 100)\n    If Instr(line, vbCrLf) <> 0 Then\n        lfType = \"CrLf\"\n    ElseIf Instr(line, vbLf) <> 0 Then\n        lfType = \"Lf\"\n    ElseIf Instr(line, vbCr) <> 0 Then\n        lfType = \"Cr\"\n    End If\n    param(\"LfType\") = lfType\n\n    '\u6539\u884c\u30b3\u30fc\u30c9\u3067\u5206\u5272\n    Select Case param(\"LfType\")\n        Case \"CrLf\": lfType = vbCrLf\n        Case \"Lf\": lfType = vbLf\n        Case \"Cr\": lfType = vbCr\n    End Select\n    aryLine = Split(allLine, lfType)\n\n    'BOM\u7121\u3057\u306a\u3089\u3001encoding\u3068charset\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u53c2\u7167\n    If param(\"IsBOM\") = False Then\n        Set reg = CreateObject(\"VBScript.RegExp\")\n        'encoding\u307e\u305f\u306fcharset\u306e\u5024\u3092\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u30bb\u30c3\u30c8\n        reg.Pattern = \"(?:encoding|charset).*?=(?:['\"\"](.*?)['\"\"]|(.*))\"\n        reg.IgnoreCase = True\n        For i = 0 To FindMaxLine - 1\n            Set matches = reg.Execute(aryLine(i))\n            For Each match In matches\n                charcode = UCase(match.SubMatches(0) & match.SubMatches(1))\n                param(\"CharSet\") = charcode\n            Next\n            If charcode > \"\" Or i >= UBound(aryLine) Then Exit For\n        Next\n        Set matches = Nothing\n        Set reg = Nothing\n    End If\n\n    '\u6700\u7d42\u884c\u306e\u6539\u884c\u30b3\u30fc\u30c9\u6709\u7121\n    If aryLine(UBound(aryLine)) = \"\" Then\n        param(\"IsEndLf\") = True\n    End If\n\n    GetInfo = True\n\nEnd Function\n\n'------------------------------------------------------------------------\n'BOM\u30c1\u30a7\u30c3\u30af\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n'------------------------------------------------------------------------\nFunction CheckBOM(str)\n    Dim bytes(2), result\n\n    bytes(0) = AscB(MidB(str, 1, 1))\n    bytes(1) = AscB(MidB(str, 2, 1))\n    bytes(2) = AscB(MidB(str, 3, 1))\n\n    If LenB(str) > 1 Then\n        If bytes(0) >= &HFE And bytes(1) >= &HFE Then\n            result = \"unicode\"\n            If bytes(0) = &HFF And bytes(1) = &HFE Then\n                result = \"unicodeFFFE\"\n            End If\n        Else If bytes(0) = &HEF And bytes(1) = &HBB And bytes(2) = &HBF Then\n                result = \"UTF-8\"\n            End If\n        End If\n    End If\n\n    If result <> \"\" Then\n        param(\"CharSet\") = result\n        param(\"IsBOM\") = True\n    End If\n\n    CheckBOM = result\n\nEnd Function\n\n'------------------------------------------------------------------------\n'\u73fe\u5728\u306e\u8a2d\u5b9a\u5024\u3092\u53d6\u5f97\u3059\u308b\n'------------------------------------------------------------------------\nFunction GetValue(reg, valueString, target)\n    Dim matches, match, comma, i\n\n    GetValue = \"\"\n    If UCase(valueString) = GET_CONFIG Then\n        Set matches = reg.Execute(target)\n        For Each match In matches\n            If match.SubMatches.Count > 0 Then\n                comma = \"\"\n                For i=0 To match.SubMatches.Count - 1\n                    GetValue = GetValue & comma & match.SubMatches(i)\n                    comma = \",\"\n                Next\n            Else\n                GetValue = match.Value\n                Exit For\n            End If\n        Next\n    End If\n\nEnd Function\n```\n\n# \u30e9\u30a4\u30bb\u30f3\u30b9\u3063\u307d\u3044\u3053\u3068\n* \u30b3\u30fc\u30c9\u6539\u5909\u3084\u914d\u5e03\u306f\u81ea\u7531\u3067\u3059\u3002\n* \u3053\u306e\u30c4\u30fc\u30eb\u306b\u3088\u308b\u7fa9\u52d9\uff0f\u8cac\u4efb\u3092\u4f55\u3089\u8ca0\u3044\u307e\u305b\u3093\u3002\n\n# \u6700\u5f8c\u306b\n\u300c\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3 \u6b63\u898f\u8868\u73fe \u7f6e\u63db\u300d\u3067\u691c\u7d22\u3059\u308b\u3068\u3001\u300c[mfind](http://magicant.github.io/sapps/mfind/)\u300d\u3084\u300c[sakura\u30a8\u30c7\u30a3\u30bf\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30aa\u30d7\u30b7\u30e7\u30f3](http://sakura-editor.sourceforge.net/htmlhelp2/HLP000109.html)\u300d\u3050\u3089\u3044\u3057\u304b\u898b\u3064\u304b\u3089\u306a\u3044\u306e\u3067\u3042\u307e\u308a\u9700\u8981\u306f\u306a\u3044\u304b\u306a\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4e0d\u5177\u5408\u304c\u3042\u308c\u3070\u968f\u6642\u4fee\u6b63\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u3053\u306e\u30c4\u30fc\u30eb\u304c\u304a\u5f79\u306b\u7acb\u3066\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n"}