{"context": " More than 1 year has passed since last update.tee \u30b3\u30de\u30f3\u30c9\u306b\u5f15\u304d\u7d9a\u304d\u8abf\u5b50\u306b\u4e57\u3063\u3066\u4f5c\u3063\u305f\u3002\nbytes \u306f\u30ab\u30a6\u30f3\u30c8\u3057\u306a\u3044\u3088\u3046\u306b\u4f5c\u3063\u305f\u304c lenb \u95a2\u6570\u306e\u5b58\u5728\u3092\u77e5\u3063\u305f\u306e\u306f\u305d\u306e\u5f8c\u3002\u3088\u3063\u3066\u4eca\u5f8c\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u540d\u306e\u5909\u66f4\u306a\u3069\u3059\u308b\u304b\u3082\u77e5\u308c\u306a\u3044\u3002\n\u305d\u306e\u3046\u3061 github \u306b\u4e0a\u3052\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3057\u3001\u4e0a\u3052\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n' \u540d\u524d\n'     wc - \u30d5\u30a1\u30a4\u30eb\u306e\u6587\u5b57\u6570\u30fb\u5358\u8a9e\u6570\u30fb\u884c\u6570\u3092\u8868\u793a\u3059\u308b\n' \n' \u66f8\u5f0f\n'     wc [/c] [/l] [/w] [/L] [/chars] [/lines] [/max-line-length] [/words] [FILE]...\n'     wc [/?] [/help] [/v] [/version]\n' \n' \u8aac\u660e\n'     wc \u306f\u6307\u5b9a\u3055\u308c\u305f\u5404 FILE \u306e\u6587\u5b57\u6570\u30fb\u7a7a\u767d\u3067\u533a\u5207\u3089\u308c\u305f\u5358\u8a9e\u306e\u6570\u30fb\u884c\u6570\u3092\u6570\u3048\u308b\u3002 \n'     FILE \u304c\u4e00\u3064\u3082\u4e0e\u3048\u3089\u308c\u306a\u3044\u3068\u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u3080\u3002\n'     \u307e\u305f FILE \u304c \u2018-\u2019 \u3060\u3063\u305f\u5834\u5408\u306b\u306f\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u6a19\u6e96\u5165\u529b\u304c\u7528\u3044\u3089\u308c\u308b\u3002\n' \n'     \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001 wc \u306f 3 \u3064\u5168\u3066\u3092\u51fa\u529b\u3059\u308b\u3002\n'     \u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u306b\u3088\u308a\u51fa\u529b\u3059\u308b\u9805\u76ee\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n'     \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u5148\u306b\u6307\u5b9a\u3057\u305f\u3082\u306e\u3092\u53d6\u308a\u6d88\u3059\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002\n'     \u3057\u305f\u304c\u3063\u3066 \u2018wc /chars /words\u2019 \u306f\u6587\u5b57\u6570\u3068\u5358\u8a9e\u6570\u306e\u4e21\u65b9\u3092\u51fa\u529b\u3059\u308b\u3002\n' \n'     wc \u306f\u6700\u5f8c\u306e\u884c\u306b\u5404 FILE \u306e\u30ab\u30a6\u30f3\u30c8\u6570\u3092\u5408\u8a08\u3057\u3066\u8868\u793a\u3059\u308b\u3002\n'     \u7d50\u679c\u306f\u3001\u6539\u884c\u6570\u30fb\u5358\u8a9e\u6570\u30fb\u6587\u5b57\u6570\u306e\u9806\u306b\u8868\u793a\u3055\u308c\u308b\u3002\n' \n' \u30aa\u30d7\u30b7\u30e7\u30f3\n'     /l, /lines\n'         \u6539\u884c\u6570\u3060\u3051\u3092\u51fa\u529b\u3059\u308b\u3002\n' \n'     /c, /chars\n'         \u6587\u5b57\u6570\u3060\u3051\u3092\u51fa\u529b\u3059\u308b\u3002\n' \n'     /w, /words\n'         \u5358\u8a9e\u6570\u3060\u3051\u3092\u51fa\u529b\u3059\u308b\u3002\n' \n'     /L, /max-line-length\n'         \u30d5\u30a1\u30a4\u30eb\u4e2d\u306e\u884c\u306e\u6700\u5927\u9577\u3060\u3051\u3092\u8868\u793a\u3059\u308b\u3002\u4e00\u3064\u4ee5\u4e0a\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306f\u3001\n'         \u305d\u308c\u3089\u306e\u3046\u3061\u3067\u306e\u6700\u5927\u9577\u3092\u8868\u793a\u3059\u308b (\u5408\u8a08\u3067\u306f\u306a\u3044)\u3002\n' \n'     /help\n'         \u6a19\u6e96\u51fa\u529b\u306b\u4f7f\u7528\u65b9\u6cd5\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3057\u3066\u6b63\u5e38\u7d42\u4e86\u3059\u308b\u3002\n' \n'     /version\n'         \u6a19\u6e96\u51fa\u529b\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\u3092\u51fa\u529b\u3057\u3066\u6b63\u5e38\u7d42\u4e86\u3059\u308b\u3002\n' \n' \u6ce8\u610f\n'     \u6587\u5b57\u30b3\u30fc\u30c9\u304c Shift-JIS \u4ee5\u5916\u306e\u5834\u5408\u306f\u3046\u307e\u304f\u30ab\u30a6\u30f3\u30c8\u3067\u304d\u306a\u3044\u3002\n'     \u6539\u884c\u6587\u5b57\u30821\u6587\u5b57\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u3002\u4f8b\u3048\u3070 CrLf \u306f 2 \u6587\u5b57\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u3002\n'     \u30aa\u30ea\u30b8\u30ca\u30eb\u306e wc \u30b3\u30de\u30f3\u30c9\u3068\u9055\u3063\u3066\u30d0\u30a4\u30c8\u6570\u306f\u30ab\u30a6\u30f3\u30c8\u3057\u306a\u3044\u3002\n' ======================================================================================================================\n\noption explicit\n\n' =================\n' option parameters\n' =================\ndim words, lines, chars, max_line_length\nwords = true\nlines = true\nchars = true\nmax_line_length = false\n\n\n' ========================\n' parse arguments(options)\n' ========================\ndim arg, i\ni = 0\ndo while i < WScript.Arguments.Count\n    arg = WScript.Arguments.Item(i)\n    if Left(arg, 1) <> \"/\" then exit do\n\n    if i = 0 then\n        chars = false\n        words = false\n        lines = false\n    end if\n\n    select case arg\n    case \"/l\", \"/lines\" lines = true\n    case \"/c\", \"/chars\" chars = true\n    case \"/w\", \"/words\" words = true\n    case \"/L\", \"/max-line-length\" max_line_length = true\n    case \"/?\", \"/help\"\n        call WScript.Echo(\"USAGE: wc [OPTION]... [FILE]...\")\n        call WScript.Echo(\"\u30d5\u30a1\u30a4\u30eb\u306e\u6587\u5b57\u6570\u30fb\u5358\u8a9e\u6570\u30fb\u884c\u6570\u3092\u8868\u793a\u3059\u308b\")\n        call WScript.Quit(0)\n    case \"/v\", \"/version\"\n        call WScript.Echo(\"wc version 0.1\")\n        call WScript.Quit(0)\n    case else\n        call WScript.StdErr.WriteLine(\"\u672a\u77e5\u306e\u30aa\u30d7\u30b7\u30e7\u30f3 '\" & arg & \"' \u304c\u6307\u5b9a\u3055\u308c\u307e\u3057\u305f\u3002\")\n        call WScript.Quit(1)\n    end select\n    i = i + 1\nloop\n\n\n' =======================\n' parse arguments(inputs)\n' =======================\ndim fso, files, file\nset fso = CreateObject(\"Scripting.FileSystemObject\")\nset files = CreateObject(\"Scripting.Dictionary\")\ndo while i < WScript.Arguments.Count\n    arg = WScript.Arguments.Item(i)\n    if arg = \"-\" then\n        call files.Add(arg, WScript.Stdin)\n    else\n        on error resume next\n        set file = fso.OpenTextFile(arg)\n        if err.number <> 0 then\n            call WScript.StdErr.WriteLine( _\n                \"[\" & Err.Number & \"]\" & Err.description & _\n                \"'\" & fso.GetAbsolutePathName(arg) & \"'\")\n        else\n            call files.Add(arg, file)\n        end if\n        on error goto 0\n    end if\n    i = i + 1\nloop\nif files.Count = 0 then call files.Add(\"-\", WScript.Stdin)\n\n\n' =============================================\n' count chars, words, lines and max-line-length\n' =============================================\ndim results, result\nset results = CreateObject(\"Scripting.Dictionary\")\nfor each file in files\n    set result = count(files.Item(file))\n    call results.Add(file, result)\nnext\n\n\n' =============================\n' output results and calc total\n' =============================\ndim total\nset total = new resultset\nfor each file in results\n    set result = results.Item(file)\n    total.add_chars(result.chars)\n    total.add_words(result.words)\n    total.add_lines(result.lines)\n    total.add_max_line_length(result.max_line_length)\n    if chars then call WScript.Stdout.Write(result.chars & Chr(9))\n    if words then call WScript.Stdout.Write(result.words & Chr(9))\n    if lines then call WScript.Stdout.Write(result.lines & Chr(9))\n    if max_line_length then call WScript.Stdout.Write(result.max_line_length & Chr(9))\n    if files.Count > 1 then WScript.Echo(file)\nnext\n\n\n' ============\n' output total\n' ============\nif files.Count > 1 then\n    if chars then call WScript.Stdout.Write(total.chars & Chr(9))\n    if words then call WScript.Stdout.Write(total.words & Chr(9))\n    if lines then call WScript.Stdout.Write(total.lines & Chr(9))\n    if max_line_length then call WScript.Stdout.Write(total.max_line_length & Chr(9))\n    WScript.Echo(\"total\")\nend if\n\n\n' =========================\n' define class and function\n' =========================\nclass resultset\n    public chars\n    public words\n    public lines\n    public max_line_length\n    private sub Class_Initialize\n        chars = 0\n        words = 0\n        lines = 0\n        max_line_length = 0\n    end sub\n    public function init(byval c, byval w, byval l, byval m)\n        chars = c\n        words = w\n        lines = l\n        max_line_length = m\n        set init = me\n    end function\n    public function add_chars(byval num)\n        chars = chars + num\n    end function\n    public function add_words(byval num)\n        words = words + num\n    end function\n    public function add_lines(byval num)\n        lines = lines + num\n    end function\n    public function add_max_line_length(byval num)\n        max_line_length = max_line_length + num\n    end function\nend class\n\nfunction count(byval stream)\n    dim result\n    set result = new resultset\n    call result.init(0, 0, 0, 0)\n\n    dim ch, before, width\n    before = \" \"\n    width = 0\n    do while not stream.AtEndOfStream\n        ch = stream.Read(1)\n        width = width + 1\n\n        ' count chars\n        call result.add_chars(1)\n\n        ' count words\n        if Asc(before) <= 32 and (Asc(ch) < 0 or 32 < Asc(ch)) then\n            call result.add_words(1)\n        end if\n\n        ' count lines, and line-length\n        if before = vbLf then\n            call result.add_lines(1)\n            if result.max_line_length < width then result.max_line_length = width\n            width = 0\n        elseif before = vbCr and ch <> vbLf then\n            call result.add_lines(1)\n            if result.max_line_length < width then result.max_line_length = width\n            width = 0\n        end if\n        before = ch\n    loop\n\n    if width > result.max_line_length then result.max_line_length = width\n    if result.chars > 0 then call result.add_lines(1)\n\n    set count = result\nend function\n\ntee \u30b3\u30de\u30f3\u30c9\u306b\u5f15\u304d\u7d9a\u304d\u8abf\u5b50\u306b\u4e57\u3063\u3066\u4f5c\u3063\u305f\u3002\n\nbytes \u306f\u30ab\u30a6\u30f3\u30c8\u3057\u306a\u3044\u3088\u3046\u306b\u4f5c\u3063\u305f\u304c lenb \u95a2\u6570\u306e\u5b58\u5728\u3092\u77e5\u3063\u305f\u306e\u306f\u305d\u306e\u5f8c\u3002\u3088\u3063\u3066\u4eca\u5f8c\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u540d\u306e\u5909\u66f4\u306a\u3069\u3059\u308b\u304b\u3082\u77e5\u308c\u306a\u3044\u3002\n\n\u305d\u306e\u3046\u3061 github \u306b\u4e0a\u3052\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3057\u3001\u4e0a\u3052\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n```vbnet\n' \u540d\u524d\n'     wc - \u30d5\u30a1\u30a4\u30eb\u306e\u6587\u5b57\u6570\u30fb\u5358\u8a9e\u6570\u30fb\u884c\u6570\u3092\u8868\u793a\u3059\u308b\n' \n' \u66f8\u5f0f\n'     wc [/c] [/l] [/w] [/L] [/chars] [/lines] [/max-line-length] [/words] [FILE]...\n'     wc [/?] [/help] [/v] [/version]\n' \n' \u8aac\u660e\n'     wc \u306f\u6307\u5b9a\u3055\u308c\u305f\u5404 FILE \u306e\u6587\u5b57\u6570\u30fb\u7a7a\u767d\u3067\u533a\u5207\u3089\u308c\u305f\u5358\u8a9e\u306e\u6570\u30fb\u884c\u6570\u3092\u6570\u3048\u308b\u3002 \n'     FILE \u304c\u4e00\u3064\u3082\u4e0e\u3048\u3089\u308c\u306a\u3044\u3068\u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u8fbc\u3080\u3002\n'     \u307e\u305f FILE \u304c \u2018-\u2019 \u3060\u3063\u305f\u5834\u5408\u306b\u306f\u3001\u305d\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u6a19\u6e96\u5165\u529b\u304c\u7528\u3044\u3089\u308c\u308b\u3002\n' \n'     \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001 wc \u306f 3 \u3064\u5168\u3066\u3092\u51fa\u529b\u3059\u308b\u3002\n'     \u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u306b\u3088\u308a\u51fa\u529b\u3059\u308b\u9805\u76ee\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n'     \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u5148\u306b\u6307\u5b9a\u3057\u305f\u3082\u306e\u3092\u53d6\u308a\u6d88\u3059\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002\n'     \u3057\u305f\u304c\u3063\u3066 \u2018wc /chars /words\u2019 \u306f\u6587\u5b57\u6570\u3068\u5358\u8a9e\u6570\u306e\u4e21\u65b9\u3092\u51fa\u529b\u3059\u308b\u3002\n' \n'     wc \u306f\u6700\u5f8c\u306e\u884c\u306b\u5404 FILE \u306e\u30ab\u30a6\u30f3\u30c8\u6570\u3092\u5408\u8a08\u3057\u3066\u8868\u793a\u3059\u308b\u3002\n'     \u7d50\u679c\u306f\u3001\u6539\u884c\u6570\u30fb\u5358\u8a9e\u6570\u30fb\u6587\u5b57\u6570\u306e\u9806\u306b\u8868\u793a\u3055\u308c\u308b\u3002\n' \n' \u30aa\u30d7\u30b7\u30e7\u30f3\n'     /l, /lines\n'         \u6539\u884c\u6570\u3060\u3051\u3092\u51fa\u529b\u3059\u308b\u3002\n' \n'     /c, /chars\n'         \u6587\u5b57\u6570\u3060\u3051\u3092\u51fa\u529b\u3059\u308b\u3002\n' \n'     /w, /words\n'         \u5358\u8a9e\u6570\u3060\u3051\u3092\u51fa\u529b\u3059\u308b\u3002\n' \n'     /L, /max-line-length\n'         \u30d5\u30a1\u30a4\u30eb\u4e2d\u306e\u884c\u306e\u6700\u5927\u9577\u3060\u3051\u3092\u8868\u793a\u3059\u308b\u3002\u4e00\u3064\u4ee5\u4e0a\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306f\u3001\n'         \u305d\u308c\u3089\u306e\u3046\u3061\u3067\u306e\u6700\u5927\u9577\u3092\u8868\u793a\u3059\u308b (\u5408\u8a08\u3067\u306f\u306a\u3044)\u3002\n' \n'     /help\n'         \u6a19\u6e96\u51fa\u529b\u306b\u4f7f\u7528\u65b9\u6cd5\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3057\u3066\u6b63\u5e38\u7d42\u4e86\u3059\u308b\u3002\n' \n'     /version\n'         \u6a19\u6e96\u51fa\u529b\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\u3092\u51fa\u529b\u3057\u3066\u6b63\u5e38\u7d42\u4e86\u3059\u308b\u3002\n' \n' \u6ce8\u610f\n'     \u6587\u5b57\u30b3\u30fc\u30c9\u304c Shift-JIS \u4ee5\u5916\u306e\u5834\u5408\u306f\u3046\u307e\u304f\u30ab\u30a6\u30f3\u30c8\u3067\u304d\u306a\u3044\u3002\n'     \u6539\u884c\u6587\u5b57\u30821\u6587\u5b57\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u3002\u4f8b\u3048\u3070 CrLf \u306f 2 \u6587\u5b57\u3068\u3057\u3066\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u3002\n'     \u30aa\u30ea\u30b8\u30ca\u30eb\u306e wc \u30b3\u30de\u30f3\u30c9\u3068\u9055\u3063\u3066\u30d0\u30a4\u30c8\u6570\u306f\u30ab\u30a6\u30f3\u30c8\u3057\u306a\u3044\u3002\n' ======================================================================================================================\n\noption explicit\n\n' =================\n' option parameters\n' =================\ndim words, lines, chars, max_line_length\nwords = true\nlines = true\nchars = true\nmax_line_length = false\n\n\n' ========================\n' parse arguments(options)\n' ========================\ndim arg, i\ni = 0\ndo while i < WScript.Arguments.Count\n    arg = WScript.Arguments.Item(i)\n    if Left(arg, 1) <> \"/\" then exit do\n    \n    if i = 0 then\n        chars = false\n        words = false\n        lines = false\n    end if\n    \n    select case arg\n    case \"/l\", \"/lines\" lines = true\n    case \"/c\", \"/chars\" chars = true\n    case \"/w\", \"/words\" words = true\n    case \"/L\", \"/max-line-length\" max_line_length = true\n    case \"/?\", \"/help\"\n        call WScript.Echo(\"USAGE: wc [OPTION]... [FILE]...\")\n        call WScript.Echo(\"\u30d5\u30a1\u30a4\u30eb\u306e\u6587\u5b57\u6570\u30fb\u5358\u8a9e\u6570\u30fb\u884c\u6570\u3092\u8868\u793a\u3059\u308b\")\n        call WScript.Quit(0)\n    case \"/v\", \"/version\"\n        call WScript.Echo(\"wc version 0.1\")\n        call WScript.Quit(0)\n    case else\n        call WScript.StdErr.WriteLine(\"\u672a\u77e5\u306e\u30aa\u30d7\u30b7\u30e7\u30f3 '\" & arg & \"' \u304c\u6307\u5b9a\u3055\u308c\u307e\u3057\u305f\u3002\")\n        call WScript.Quit(1)\n    end select\n    i = i + 1\nloop\n\n\n' =======================\n' parse arguments(inputs)\n' =======================\ndim fso, files, file\nset fso = CreateObject(\"Scripting.FileSystemObject\")\nset files = CreateObject(\"Scripting.Dictionary\")\ndo while i < WScript.Arguments.Count\n    arg = WScript.Arguments.Item(i)\n    if arg = \"-\" then\n        call files.Add(arg, WScript.Stdin)\n    else\n        on error resume next\n        set file = fso.OpenTextFile(arg)\n        if err.number <> 0 then\n            call WScript.StdErr.WriteLine( _\n                \"[\" & Err.Number & \"]\" & Err.description & _\n                \"'\" & fso.GetAbsolutePathName(arg) & \"'\")\n        else\n            call files.Add(arg, file)\n        end if\n        on error goto 0\n    end if\n    i = i + 1\nloop\nif files.Count = 0 then call files.Add(\"-\", WScript.Stdin)\n\n\n' =============================================\n' count chars, words, lines and max-line-length\n' =============================================\ndim results, result\nset results = CreateObject(\"Scripting.Dictionary\")\nfor each file in files\n    set result = count(files.Item(file))\n    call results.Add(file, result)\nnext\n\n\n' =============================\n' output results and calc total\n' =============================\ndim total\nset total = new resultset\nfor each file in results\n    set result = results.Item(file)\n    total.add_chars(result.chars)\n    total.add_words(result.words)\n    total.add_lines(result.lines)\n    total.add_max_line_length(result.max_line_length)\n    if chars then call WScript.Stdout.Write(result.chars & Chr(9))\n    if words then call WScript.Stdout.Write(result.words & Chr(9))\n    if lines then call WScript.Stdout.Write(result.lines & Chr(9))\n    if max_line_length then call WScript.Stdout.Write(result.max_line_length & Chr(9))\n    if files.Count > 1 then WScript.Echo(file)\nnext\n\n\n' ============\n' output total\n' ============\nif files.Count > 1 then\n    if chars then call WScript.Stdout.Write(total.chars & Chr(9))\n    if words then call WScript.Stdout.Write(total.words & Chr(9))\n    if lines then call WScript.Stdout.Write(total.lines & Chr(9))\n    if max_line_length then call WScript.Stdout.Write(total.max_line_length & Chr(9))\n    WScript.Echo(\"total\")\nend if\n\n\n' =========================\n' define class and function\n' =========================\nclass resultset\n    public chars\n    public words\n    public lines\n    public max_line_length\n    private sub Class_Initialize\n        chars = 0\n        words = 0\n        lines = 0\n        max_line_length = 0\n    end sub\n    public function init(byval c, byval w, byval l, byval m)\n        chars = c\n        words = w\n        lines = l\n        max_line_length = m\n        set init = me\n    end function\n    public function add_chars(byval num)\n        chars = chars + num\n    end function\n    public function add_words(byval num)\n        words = words + num\n    end function\n    public function add_lines(byval num)\n        lines = lines + num\n    end function\n    public function add_max_line_length(byval num)\n        max_line_length = max_line_length + num\n    end function\nend class\n\nfunction count(byval stream)\n    dim result\n    set result = new resultset\n    call result.init(0, 0, 0, 0)\n    \n    dim ch, before, width\n    before = \" \"\n    width = 0\n    do while not stream.AtEndOfStream\n        ch = stream.Read(1)\n        width = width + 1\n        \n        ' count chars\n        call result.add_chars(1)\n        \n        ' count words\n        if Asc(before) <= 32 and (Asc(ch) < 0 or 32 < Asc(ch)) then\n            call result.add_words(1)\n        end if\n        \n        ' count lines, and line-length\n        if before = vbLf then\n            call result.add_lines(1)\n            if result.max_line_length < width then result.max_line_length = width\n            width = 0\n        elseif before = vbCr and ch <> vbLf then\n            call result.add_lines(1)\n            if result.max_line_length < width then result.max_line_length = width\n            width = 0\n        end if\n        before = ch\n    loop\n    \n    if width > result.max_line_length then result.max_line_length = width\n    if result.chars > 0 then call result.add_lines(1)\n    \n    set count = result\nend function\n```\n", "tags": ["VBScript", "Windows"]}