{"context": "\n\nc++\u3067\u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\nC++\u3067\u4f55\u304b\u30c4\u30fc\u30eb\u4f5c\u308d\u3046\uff01\uff01\n\u307f\u305f\u3044\u306a\u6642\u306b\u4f55\u56de\u3082\u66f8\u3044\u3066\u308b\u306e\u3067\u30e1\u30e2\u3002\u3002\u3002\n\u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u3092\u518d\u5e30\u7684\u306b\u691c\u7d22\u3059\u308b\u5834\u5408\u306f\u3001\u691c\u7d22\u5bfe\u8c61\u304c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3060\u3063\u305f\u3068\u304d\u306b\u518d\u5e30\u3059\u308b\u3002\n\ndir_catcher.cpp\n#include <bits/stdc++.h>\n#include <sys/stat.h>\n#include <dirent.h>\n\nusing namespace std;\n\nvoid search_dir(string path,  vector<string> &fileNames){\n\n  int i, dirElements;\n  string search_path;\n\n  struct stat stat_buf;\n  struct dirent **namelist=NULL;\n\n  // dirElements \u306b\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306e\u8981\u7d20\u6570\u304c\u5165\u308b\n  dirElements = scandir(path.c_str(), &namelist, NULL, NULL);\n\n  if(dirElements == -1) {\n    cout << \"ERROR\" <<  endl;\n  }\n\n  else{\n\n    //\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u30d5\u30a1\u30a4\u30eb\u304b\u3092\u9806\u756a\u306b\u8b58\u5225\n    for (i=0; i<dirElements; i+=1) {\n\n      // \".\" \u3068 \"..\" \u3092\u9664\u304f\n      if( (strcmp(namelist[i]->d_name , \".\\0\") != 0) && (strcmp(namelist[i]->d_name , \"..\\0\") != 0) ){\n\n        //search_path\u306b\u306f\u691c\u7d22\u5bfe\u8c61\u306e\u30d5\u30eb\u30d1\u30b9\u3092\u683c\u7d0d\u3059\u308b\n        search_path = path + string(namelist[i] -> d_name);\n\n        // \u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u306e\u53d6\u5f97\u306e\u6210\u529f\n        if(stat(search_path.c_str(), &stat_buf) == 0){\n\n          // \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3060\u3063\u305f\u5834\u5408\u306e\u51e6\u7406\n          if ((stat_buf.st_mode & S_IFMT) == S_IFDIR){\n            // \u518d\u5e30\u306b\u3088\u308a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3092\u63a2\u7d22\n            search_dir(path + string(namelist[i] -> d_name) + \"/\", fileNames);\n          }\n\n          //\u30d5\u30a1\u30a4\u30eb\u3060\u3063\u305f\u5834\u5408\u306e\u51e6\u7406\n          else {\n            fileNames.push_back(search_path);\n          }\n        }\n\n        // \u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u306e\u53d6\u5f97\u306e\u5931\u6557\n        else{\n          cout << \"ERROR\" <<  endl << endl;\n        }\n      }\n    }\n  }\n\n  free(namelist);\n  return;\n}\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3046\n\u2193\u2193\n\nmain.cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nvoid search_dir( string , vector<string> & );\n\nint main(){\n\n  int i;\n  vector<string> hoge;\n  hoge.clear();\n\n  search_dir(\"./\", hoge);\n\n  for(i=0; i<hoge.size(); i+=1){\n    cout << hoge[i] << endl;\n  }\n\n  return 0;\n}\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\n\u2193\u2193\ng++ -std=c++11 main.cpp dir_catcher.cpp\n\n# c++\u3067\u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\n\nC++\u3067\u4f55\u304b\u30c4\u30fc\u30eb\u4f5c\u308d\u3046\uff01\uff01\n\u307f\u305f\u3044\u306a\u6642\u306b\u4f55\u56de\u3082\u66f8\u3044\u3066\u308b\u306e\u3067\u30e1\u30e2\u3002\u3002\u3002\n \n\u6307\u5b9a\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u3092\u518d\u5e30\u7684\u306b\u691c\u7d22\u3059\u308b\u5834\u5408\u306f\u3001\u691c\u7d22\u5bfe\u8c61\u304c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3060\u3063\u305f\u3068\u304d\u306b\u518d\u5e30\u3059\u308b\u3002\n \n\n``` C++:dir_catcher.cpp\n#include <bits/stdc++.h>\n#include <sys/stat.h>\n#include <dirent.h>\n\nusing namespace std;\n\nvoid search_dir(string path,  vector<string> &fileNames){\n\n  int i, dirElements;\n  string search_path;\n\n  struct stat stat_buf;\n  struct dirent **namelist=NULL;\n\n  // dirElements \u306b\u306f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306e\u8981\u7d20\u6570\u304c\u5165\u308b\n  dirElements = scandir(path.c_str(), &namelist, NULL, NULL);\n\n  if(dirElements == -1) {\n    cout << \"ERROR\" <<  endl;\n  }\n\n  else{\n\n    //\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u30d5\u30a1\u30a4\u30eb\u304b\u3092\u9806\u756a\u306b\u8b58\u5225\n    for (i=0; i<dirElements; i+=1) {\n\n      // \".\" \u3068 \"..\" \u3092\u9664\u304f\n      if( (strcmp(namelist[i]->d_name , \".\\0\") != 0) && (strcmp(namelist[i]->d_name , \"..\\0\") != 0) ){\n\n        //search_path\u306b\u306f\u691c\u7d22\u5bfe\u8c61\u306e\u30d5\u30eb\u30d1\u30b9\u3092\u683c\u7d0d\u3059\u308b\n        search_path = path + string(namelist[i] -> d_name);\n\n        // \u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u306e\u53d6\u5f97\u306e\u6210\u529f\n        if(stat(search_path.c_str(), &stat_buf) == 0){\n\n          // \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3060\u3063\u305f\u5834\u5408\u306e\u51e6\u7406\n          if ((stat_buf.st_mode & S_IFMT) == S_IFDIR){\n            // \u518d\u5e30\u306b\u3088\u308a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u3092\u63a2\u7d22\n            search_dir(path + string(namelist[i] -> d_name) + \"/\", fileNames);\n          }\n\n          //\u30d5\u30a1\u30a4\u30eb\u3060\u3063\u305f\u5834\u5408\u306e\u51e6\u7406\n          else {\n            fileNames.push_back(search_path);\n          }\n        }\n\n        // \u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u306e\u53d6\u5f97\u306e\u5931\u6557\n        else{\n          cout << \"ERROR\" <<  endl << endl;\n        }\n      }\n    }\n  }\n\n  free(namelist);\n  return;\n}\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3046\n\u2193\u2193\n\n``` C++:main.cpp\n#include <bits/stdc++.h>\n\nusing namespace std;\n\nvoid search_dir( string , vector<string> & );\n\nint main(){\n\n  int i;\n  vector<string> hoge;\n  hoge.clear();\n\n  search_dir(\"./\", hoge);\n\n  for(i=0; i<hoge.size(); i+=1){\n    cout << hoge[i] << endl;\n  }\n\n  return 0;\n}\n\n```\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\n\u2193\u2193\n\n```\ng++ -std=c++11 main.cpp dir_catcher.cpp\n```\n", "tags": ["C++11"]}