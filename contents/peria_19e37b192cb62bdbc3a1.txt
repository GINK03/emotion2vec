{"context": " More than 1 year has passed since last update.\n\nSch\u00f6nhage-Strassen\nSch\u00f6nhage-Strassen \u306f\u9577\u3044\u591a\u500d\u9577\u6574\u6570 $A$ \u3068 $B$ \u306e\u4e57\u7b97\nC = AB\n\n\u3092 FFT \u3063\u307d\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3059\u308b\u65b9\u6cd5\u3067\u3042\u308b\u3002\n\u3056\u3063\u304f\u308a\u3068\u624b\u9806\u3092\u8aac\u660e\u3059\u308b\u3068\u3001\u6570\u3092\u77ed\u3044\u591a\u500d\u9577\u6570\u306b\u5206\u5272\u3057\u3001\uff08\u5e83\u7fa9\u306e\uff09\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3057\u3001\u9805\u3054\u3068\u306b\u304b\u3051\u3066\uff08\u5e83\u7fa9\u306e\uff09\u30d5\u30fc\u30ea\u30a8\u9006\u5909\u63db\u3092\u3059\u308b\u3053\u3068\u3067\u7573\u307f\u8fbc\u307f\u4e57\u7b97\u7d50\u679c\u3092\u5f97\u308b\u3002\u4ee5\u4e0b\u3001\u305d\u306e\u8a73\u7d30\u3068\u5171\u306b\u30b5\u30f3\u30d7\u30eb\u3063\u307d\u3044 python \u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u304a\u304f\u3002\u3042\u304f\u307e\u3067\u52d5\u4f5c\u539f\u7406\u306e\u53c2\u7167\u7528\u306a\u306e\u3067\u3001\u901a\u5e38\u306e * \u6f14\u7b97\u5b50\u3092\u4f7f\u3046\u65b9\u304c\u901f\u3044\u3053\u3068\u306f\u65ad\u3063\u3066\u304a\u304f\u3002\ndef SchonhageStrassen(a, b):\n  n, k = SetUp(a, b)\n  m = 1 << (n / 2) + 1\n  a = NTT(Split(a, n, k), m)\n  b = NTT(Split(b, n, k), m)\n  c = MultEach(a, b, m)\n  return Merge(NTTInv(c, m), k)\n\ndef main():\n  a = 123456789012345678901234567890123456789012345678901234567890123456789\n  b = 314159653589793238462643383279502884197169399375105820974944592307816\n  print SchonhageStrassen(a, b)\n  print a * b\n\n\n0. \u8a2d\u5b9a\n\u7a81\u7136\u306e\u8a2d\u5b9a\u306b\u306a\u308b\u304c\u3001\u5f8c\u306e\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3067\u4f7f\u3046\u56de\u8ee2\u5b50\u3092 $w$ \u3068\u3059\u308b\u3002\u3053\u308c\u306e\u5177\u4f53\u7684\u306a\u5024\u3068\u3057\u3066\u306f 2 \u4ee5\u4e0a\u306e\u4efb\u610f\u306e\u6574\u6570\u3092\u53d6\u3063\u3066\u69cb\u308f\u306a\u3044\u306e\u3060\u304c\u3001\u8a08\u7b97\u306e\u5229\u4fbf\u6027\u304b\u3089 $2$\u3001$2^{64}$\u3001$2^{128}$ \u306a\u3069\u304c\u4f7f\u308f\u308c\u3084\u3059\u3044(\u3068\u601d\u3046)\u3002\u3061\u306a\u307f\u306b\u4eba\u306e\u624b\u3067\u5909\u3048\u3089\u308c\u308b\u8a2d\u5b9a\u306f\u5b9f\u8cea\u7684\u306b\u3053\u306e $w$ \u3060\u3051\u3067\u3042\u308b\u3002 \u30b5\u30f3\u30d7\u30eb\u306e python \u30b3\u30fc\u30c9\u3067\u306f $w=2$ \u3068\u3044\u3046\u3053\u3068\u306b\u3057\u3066\u3044\u308b\u3002\n\u3053\u308c\uff08\u306e\u5bfe\u6570\uff09\u3092\u9577\u3055\u306e\u5358\u4f4d\u3068\u3057\u3066\u4f7f\u3063\u3066\u3001\u5143\u3005\u306e\u304b\u3051\u308b\u6570 $A$\u3001$B$ \u306f $N$ \u4ee5\u4e0b\u306e\u9577\u3055\u3067\u3042\u308b\u3068\u3044\u3046\u524d\u63d0\u306b\u3059\u308b\u3002\n\\begin{cases}\nA, B < w^N\\\\\nC < w^{2N}\n\\end{cases}\n\n\n1. \u6570\u306e\u5206\u5272\n$N$ \u5358\u4f4d\u306e\u591a\u500d\u9577\u6574\u6570 $A$ \u3092\u4e0b\u306e\u4f4d\u304b\u3089\u9806\u306b $k$ \u5358\u4f4d\u305a\u3064 $n$ \u9805\u306e\u6570\u5217 $\\{a_i\\}$ \u306b\u5206\u3051\u308b\u3002\u305d\u306e\u969b\u3001\u8db3\u308a\u306a\u3044\u90e8\u5206 $a_i$ $(n/2 \\leq i < n)$ \u306f 0 \u306b\u3059\u308b\u3002\n <- k unit ->       <- k unit -> <- k unit ->\n+------------+-----+------------+------------+\n|   a[n-1]   | ... |    a[1]    |    a[0]    |\n+------------+-----+------------+------------+\n <---- \u8ffd\u52a0\u5206 ---><-------- N units ---------->\n\ndef Split(a, n, k):\n  mask = (1 << k) - 1\n  elements = []\n  for i in xrange(n):\n    elements.append(a & mask)\n    a >>= k\n  return elements\n\n\n2. \u5e83\u7fa9\u30d5\u30fc\u30ea\u30a8\u5909\u63db\n\u9069\u5f53\u306a\u74b0 $\\mathbb{R}_{m}$ \u306b\u304a\u3044\u3066\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3063\u307d\u3044\u5909\u63db\n\\alpha_k \\equiv \\sum_{j=0}^{n-1}a_j w^{jk} \\pmod{m}\n\n\\beta_k \\equiv \\sum_{j=0}^{n-1}b_j w^{jk} \\pmod{m}\n\n\u3092\u8a08\u7b97\u3059\u308b\u3002\u3053\u306e\u3068\u304d\u3001$m=w^{n/2}+1$ \u3068\u3059\u308b\u3053\u3068\u3067 $w$ \u304c\u539f\u59cb $n$ \u4e57\u6839\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u307e\u305f\u3001\"\u5358\u4f4d\"=\"bit\" \u3068\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f $w=2$ \u3067\u3042\u308b\u3057\u3001\"\u5358\u4f4d\"=\"word\" \u3068\u3057\u3066\u3044\u308b\u5834\u5408\u306f $w=2^{64}$ \u3067\u3042\u308b\u3002\ndef NTT(a, m, p=1):\n  n = len(a)\n  q = n / 2\n  while q >= 1:\n    for i in xrange(q):\n      w = pow(2, p * i, m)\n      for j in xrange(i, n, 2 * q):\n        k = j + q\n        a[j], a[k] = (a[j] + a[k]) % m, (a[j] - a[k] + m) * w % m\n    p, q = p * 2, q / 2\n\n  # bit-reverse shuffle\n  i = 0\n  for j in xrange(1, n):\n    k = n / 2\n    i ^= k\n    while i < k:\n      k = k / 2\n      i ^= k\n    if j < i:\n      a[j], a[i] = a[i], a[j]\n\n  return a\n\n\n3. \u9805\u5225\u4e57\u7b97\n\u3053\u308c\u306f\u305d\u306e\u307e\u307e\u9805\u5225\u306b\u304b\u3051\u308b\u3060\u3051\u3067\u3042\u308b\u3002 $0\\leq i < n$ \u306b\u304a\u3044\u3066\n\\gamma_i \\equiv \\alpha_i \\beta_i \\pmod{m}\n\n\u3092\u8a08\u7b97\u3059\u308b\u3060\u3051\u3067\u3042\u308b\u3002\u304c\u3001$\\bmod\\,m$ \u304c\u66f2\u8005\u3067\u3001\u3053\u306e\u4e57\u7b97\u7d50\u679c\u306f\u8ca0\u5de1\u56de\u7573\u307f\u8fbc\u307f\u4e57\u7b97\u3067\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\u3064\u307e\u308a\u518d\u5e30\u7684\u306b $n/2$ \u5358\u4f4d\u306e\u9577\u3055\u3067\uff08\u8ca0\u5de1\u56de\u75281\uff09\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u8a08\u7b97\u91cf\u3092\u6291\u3048\u308b\u3053\u3068\u306b\u306a\u308b\u3002\ndef MultEach(a, b, m):\n  for i in xrange(len(a)):\n    a[i] = a[i] * b[i] % m\n  return a\n\n\n4. \u5e83\u7fa9\u30d5\u30fc\u30ea\u30a8\u9006\u5909\u63db\n\u5b9f\u8cea\u7684\u306b\u5e83\u7fa9\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3068\u540c\u3058\u3088\u3046\u306a\u5909\u63db\nc_j \\equiv n^{-1} \\sum_{k=0}^{n-1}\\gamma_k w^{-jk} \\pmod{m}\n\n\u3092\u3059\u308b\u3060\u3051\u3067\u3042\u308b\u3002\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u306f\u8907\u7d20\u6570\u4f53\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u9806\u65b9\u5411\u306e\u5909\u63db\u3068\u30eb\u30fc\u30c1\u30f3\u3092\u5171\u6709\u5316\u3067\u304d\u306a\u304b\u3063\u305f\u3063\u308a(\u8981\u78ba\u8a8d)\u3001 $w^{-jk}$ \u3092\u6c42\u3081\u308b\u90e8\u5206\u304c\u3061\u3087\u3063\u3068\u9762\u5012\u3060\u3063\u305f\u308a(\u8981\u78ba\u8a8d)\u3059\u308b\u3002\ndef NTTInv(a, m):\n  n = len(a)\n  a = NTT(a, m, n - 1)\n\n  logn = int(math.log(n, 2))\n  inv = pow(2, n - logn, m)  # inv * n % m = 1\n  for i in xrange(n):\n    a[i] = a[i] * inv % m\n  return a\n\n\n5. \u6b63\u898f\u5316\n\u3053\u3053\u307e\u3067\u3067\u7573\u307f\u8fbc\u307f\u4e57\u7b97\u7d50\u679c\u304c\u3082\u3068\u307e\u3063\u305f\u306e\u3067\u3001\u3042\u3068\u306f $k$ \u5358\u4f4d\u305a\u3064\u305a\u3089\u3057\u306a\u304a\u3057\u3066\u3001\u91cd\u8907\u3057\u305f\u90e8\u5206\u3092\u7d20\u76f4\u306b\u8db3\u3057\u3066 ($\\bmod\\,p$ \u306e\u5fc5\u8981\u304c\u306a\u3044) \u3044\u3051\u3070\u7a4d\u304c\u6c42\u307e\u308b\u3002\nC = \\sum_{j=0}^{2n-1} c_jw^{jk}\n\ndef Merge(a, k):\n  val = 0\n  a.reverse()\n  for v in a:\n    val = (val << k) + v\n  return val\n\n\n\u305d\u306e\u4ed6\u306e\u5236\u9650\n\u5206\u5272\u306e\u969b\u3001\u6f0f\u308c\u308b\u90e8\u5206\u304c\u3042\u3063\u3066\u306f\u3044\u3051\u306a\u3044\u306e\u3067\u3001\n2N \\leq kn\n\n\u3068\u3044\u3046\u6761\u4ef6\u304c\u3067\u304d\u308b\u3002$2N$ \u306f\u7a4d\u3068\u3057\u3066\u51fa\u3066\u304f\u308b\u6570\u3082\u30ab\u30d0\u30fc\u3059\u308b\u5927\u304d\u3055\u3067\u3042\u308b\u3002(\u8ca0\u5de1\u56de\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f $N$ \u306b\u306a\u308b\u3002\u8a73\u3057\u304f\u306f\u5f8c\u3067\u3069\u3053\u304b\u306b\u66f8\u304f\u3002) \u4e00\u65b9\u3067 $c_i$ \u306b\u3064\u3044\u3066\u306f\u7573\u307f\u8fbc\u307f\u4e57\u7b97\u7d50\u679c\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u6cd5\u304c\u305d\u308c\u3088\u308a\u5c0f\u3055\u304f\u306a\u3063\u3066\u306f\u3044\u3051\u306a\u3044\u3002\u6570\u5f0f\u306b\u3059\u308b\u3068\nc_i < nw^{2k} < m = w^{n/2} + 1\n\n\u3068\u306a\u308b\u304c\u3001$\\{a_i\\}\\not\\equiv -1$ \u3068\u3044\u3046\u3053\u3068\u3092\u8003\u3048\u3066\u6761\u4ef6\u3092\u7c21\u7565\u5316\u3059\u308b\u3068\n\\lceil\\log_wn\\rceil + 2k \\leq \\frac{n}{2}\n\n\\therefore k \\leq \\frac{1}{2}\\left(\\frac{n}{2} - \\lceil\\log_wn\\rceil\\right)\n\n\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u3002 \u307e\u305f\u3001$n$ \u306f FFT \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u9069\u7528\u3055\u305b\u308b\u305f\u3081\u306b 2 \u306e\u3079\u304d\u4e57\u3092\u9078\u3076\u3068\u3044\u3046\u524d\u63d0\u3092\u5408\u308f\u305b\u308b\u3068\u3001$n$ \u306b\u4f9d\u5b58\u3057\u3066\u9650\u754c\u3068\u306a\u308b $N$ \u3084 $k$ \u3082\u6c7a\u307e\u308b\u3002\n\n$w=2$ \u306e\u5834\u5408(\u5358\u4f4d:bit)\n\n\n\n\n$n$\n32\n64\n128\n256\n512\n1024\n\n\n\n\n$k\\leq$\n5\n13\n28\n60\n123\n251\n\n\n$N\\leq$\n80\n416\n1792\n7680\n31488\n128512\n\n\n\n\n$w=2^{64}$ \u306e\u5834\u5408(\u5358\u4f4d:word)\n\n\n\n\n$n$\n32\n64\n128\n256\n512\n1024\n\n\n\n\n$k\\leq$\n7\n15\n13\n63\n127\n255\n\n\n$N\\leq$\n112\n480\n1984\n8064\n32512\n130560\n\n\n\ndef SetUp(a, b):\n  N = max(a.bit_length(), b.bit_length())\n  for b in xrange(5, 30):\n    n = 2 ** b\n    k = (n / 2 - b) / 2\n    if n * k >= N * 2:\n      return n, k\n  # 2^30 for n is too large\n  assert false\n\n\n\n\n\n\u96e2\u6563\u8377\u91cd\u5909\u63db\u00a0\u21a9\n\n\n\n# Sch\u00f6nhage-Strassen\nSch\u00f6nhage-Strassen \u306f\u9577\u3044\u591a\u500d\u9577\u6574\u6570 $A$ \u3068 $B$ \u306e\u4e57\u7b97\n\n```math\nC = AB\n```\n\n\u3092 FFT \u3063\u307d\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3059\u308b\u65b9\u6cd5\u3067\u3042\u308b\u3002\n\u3056\u3063\u304f\u308a\u3068\u624b\u9806\u3092\u8aac\u660e\u3059\u308b\u3068\u3001\u6570\u3092\u77ed\u3044\u591a\u500d\u9577\u6570\u306b\u5206\u5272\u3057\u3001\uff08\u5e83\u7fa9\u306e\uff09\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3057\u3001\u9805\u3054\u3068\u306b\u304b\u3051\u3066\uff08\u5e83\u7fa9\u306e\uff09\u30d5\u30fc\u30ea\u30a8\u9006\u5909\u63db\u3092\u3059\u308b\u3053\u3068\u3067\u7573\u307f\u8fbc\u307f\u4e57\u7b97\u7d50\u679c\u3092\u5f97\u308b\u3002\u4ee5\u4e0b\u3001\u305d\u306e\u8a73\u7d30\u3068\u5171\u306b\u30b5\u30f3\u30d7\u30eb\u3063\u307d\u3044 python \u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u304a\u304f\u3002\u3042\u304f\u307e\u3067\u52d5\u4f5c\u539f\u7406\u306e\u53c2\u7167\u7528\u306a\u306e\u3067\u3001\u901a\u5e38\u306e `*` \u6f14\u7b97\u5b50\u3092\u4f7f\u3046\u65b9\u304c\u901f\u3044\u3053\u3068\u306f\u65ad\u3063\u3066\u304a\u304f\u3002\n\n```py\ndef SchonhageStrassen(a, b):\n  n, k = SetUp(a, b)\n  m = 1 << (n / 2) + 1\n  a = NTT(Split(a, n, k), m)\n  b = NTT(Split(b, n, k), m)\n  c = MultEach(a, b, m)\n  return Merge(NTTInv(c, m), k)\n\ndef main():\n  a = 123456789012345678901234567890123456789012345678901234567890123456789\n  b = 314159653589793238462643383279502884197169399375105820974944592307816\n  print SchonhageStrassen(a, b)\n  print a * b\n```\n\n## 0. \u8a2d\u5b9a\n\u7a81\u7136\u306e\u8a2d\u5b9a\u306b\u306a\u308b\u304c\u3001\u5f8c\u306e\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3067\u4f7f\u3046\u56de\u8ee2\u5b50\u3092 $w$ \u3068\u3059\u308b\u3002\u3053\u308c\u306e\u5177\u4f53\u7684\u306a\u5024\u3068\u3057\u3066\u306f 2 \u4ee5\u4e0a\u306e\u4efb\u610f\u306e\u6574\u6570\u3092\u53d6\u3063\u3066\u69cb\u308f\u306a\u3044\u306e\u3060\u304c\u3001\u8a08\u7b97\u306e\u5229\u4fbf\u6027\u304b\u3089 $2$\u3001$2^{64}$\u3001$2^{128}$ \u306a\u3069\u304c\u4f7f\u308f\u308c\u3084\u3059\u3044(\u3068\u601d\u3046)\u3002**\u3061\u306a\u307f\u306b\u4eba\u306e\u624b\u3067\u5909\u3048\u3089\u308c\u308b\u8a2d\u5b9a\u306f\u5b9f\u8cea\u7684\u306b\u3053\u306e $w$ \u3060\u3051\u3067\u3042\u308b\u3002** \u30b5\u30f3\u30d7\u30eb\u306e python \u30b3\u30fc\u30c9\u3067\u306f $w=2$ \u3068\u3044\u3046\u3053\u3068\u306b\u3057\u3066\u3044\u308b\u3002\n\n\u3053\u308c\uff08\u306e\u5bfe\u6570\uff09\u3092\u9577\u3055\u306e\u5358\u4f4d\u3068\u3057\u3066\u4f7f\u3063\u3066\u3001\u5143\u3005\u306e\u304b\u3051\u308b\u6570 $A$\u3001$B$ \u306f $N$ \u4ee5\u4e0b\u306e\u9577\u3055\u3067\u3042\u308b\u3068\u3044\u3046\u524d\u63d0\u306b\u3059\u308b\u3002\n\n```math\n\\begin{cases}\nA, B < w^N\\\\\nC < w^{2N}\n\\end{cases}\n```\n\n## 1. \u6570\u306e\u5206\u5272\n$N$ \u5358\u4f4d\u306e\u591a\u500d\u9577\u6574\u6570 $A$ \u3092\u4e0b\u306e\u4f4d\u304b\u3089\u9806\u306b $k$ \u5358\u4f4d\u305a\u3064 $n$ \u9805\u306e\u6570\u5217 $\\\\{a_i\\\\}$ \u306b\u5206\u3051\u308b\u3002\u305d\u306e\u969b\u3001\u8db3\u308a\u306a\u3044\u90e8\u5206 $a_i$ $(n/2 \\leq i < n)$ \u306f 0 \u306b\u3059\u308b\u3002\n\n```\n <- k unit ->       <- k unit -> <- k unit ->\n+------------+-----+------------+------------+\n|   a[n-1]   | ... |    a[1]    |    a[0]    |\n+------------+-----+------------+------------+\n <---- \u8ffd\u52a0\u5206 ---><-------- N units ---------->\n```\n\n```py\ndef Split(a, n, k):\n  mask = (1 << k) - 1\n  elements = []\n  for i in xrange(n):\n    elements.append(a & mask)\n    a >>= k\n  return elements\n```\n\n## 2. \u5e83\u7fa9\u30d5\u30fc\u30ea\u30a8\u5909\u63db\n\n\u9069\u5f53\u306a\u74b0 $\\mathbb{R}_{m}$ \u306b\u304a\u3044\u3066\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3063\u307d\u3044\u5909\u63db\n\n```math\n\\alpha_k \\equiv \\sum_{j=0}^{n-1}a_j w^{jk} \\pmod{m}\n```\n\n```math\n\\beta_k \\equiv \\sum_{j=0}^{n-1}b_j w^{jk} \\pmod{m}\n```\n\n\u3092\u8a08\u7b97\u3059\u308b\u3002\u3053\u306e\u3068\u304d\u3001$m=w^{n/2}+1$ \u3068\u3059\u308b\u3053\u3068\u3067 $w$ \u304c\u539f\u59cb $n$ \u4e57\u6839\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u307e\u305f\u3001\"\u5358\u4f4d\"=\"bit\" \u3068\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f $w=2$ \u3067\u3042\u308b\u3057\u3001\"\u5358\u4f4d\"=\"word\" \u3068\u3057\u3066\u3044\u308b\u5834\u5408\u306f $w=2^{64}$ \u3067\u3042\u308b\u3002\n\n```py\ndef NTT(a, m, p=1):\n  n = len(a)\n  q = n / 2\n  while q >= 1:\n    for i in xrange(q):\n      w = pow(2, p * i, m)\n      for j in xrange(i, n, 2 * q):\n        k = j + q\n        a[j], a[k] = (a[j] + a[k]) % m, (a[j] - a[k] + m) * w % m\n    p, q = p * 2, q / 2\n\n  # bit-reverse shuffle\n  i = 0\n  for j in xrange(1, n):\n    k = n / 2\n    i ^= k\n    while i < k:\n      k = k / 2\n      i ^= k\n    if j < i:\n      a[j], a[i] = a[i], a[j]\n\n  return a\n```\n\n## 3. \u9805\u5225\u4e57\u7b97\n\n\u3053\u308c\u306f\u305d\u306e\u307e\u307e\u9805\u5225\u306b\u304b\u3051\u308b\u3060\u3051\u3067\u3042\u308b\u3002 $0\\leq i < n$ \u306b\u304a\u3044\u3066\n\n```math\n\\gamma_i \\equiv \\alpha_i \\beta_i \\pmod{m}\n```\n\n\u3092\u8a08\u7b97\u3059\u308b\u3060\u3051\u3067\u3042\u308b\u3002\u304c\u3001$\\bmod\\,m$ \u304c\u66f2\u8005\u3067\u3001\u3053\u306e\u4e57\u7b97\u7d50\u679c\u306f\u8ca0\u5de1\u56de\u7573\u307f\u8fbc\u307f\u4e57\u7b97\u3067\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\u3064\u307e\u308a\u518d\u5e30\u7684\u306b $n/2$ \u5358\u4f4d\u306e\u9577\u3055\u3067\uff08\u8ca0\u5de1\u56de\u7528[^1]\uff09\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u3001\u8a08\u7b97\u91cf\u3092\u6291\u3048\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n[^1]: [\u96e2\u6563\u8377\u91cd\u5909\u63db](http://qiita.com/peria/items/cf4c4b72ebbeec7728af#%E9%9B%A2%E6%95%A3%E8%8D%B7%E9%87%8D%E5%A4%89%E6%8F%9B)\n\n```py\ndef MultEach(a, b, m):\n  for i in xrange(len(a)):\n    a[i] = a[i] * b[i] % m\n  return a\n```\n \n## 4. \u5e83\u7fa9\u30d5\u30fc\u30ea\u30a8\u9006\u5909\u63db\n\n\u5b9f\u8cea\u7684\u306b\u5e83\u7fa9\u30d5\u30fc\u30ea\u30a8\u5909\u63db\u3068\u540c\u3058\u3088\u3046\u306a\u5909\u63db\n\n```math\nc_j \\equiv n^{-1} \\sum_{k=0}^{n-1}\\gamma_k w^{-jk} \\pmod{m}\n```\n\n\u3092\u3059\u308b\u3060\u3051\u3067\u3042\u308b\u3002\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u306f\u8907\u7d20\u6570\u4f53\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u9806\u65b9\u5411\u306e\u5909\u63db\u3068\u30eb\u30fc\u30c1\u30f3\u3092\u5171\u6709\u5316\u3067\u304d\u306a\u304b\u3063\u305f\u3063\u308a(\u8981\u78ba\u8a8d)\u3001 $w^{-jk}$ \u3092\u6c42\u3081\u308b\u90e8\u5206\u304c\u3061\u3087\u3063\u3068\u9762\u5012\u3060\u3063\u305f\u308a(\u8981\u78ba\u8a8d)\u3059\u308b\u3002\n\n```py\ndef NTTInv(a, m):\n  n = len(a)\n  a = NTT(a, m, n - 1)\n\n  logn = int(math.log(n, 2))\n  inv = pow(2, n - logn, m)  # inv * n % m = 1\n  for i in xrange(n):\n    a[i] = a[i] * inv % m\n  return a\n```\n\n## 5. \u6b63\u898f\u5316\n\n\u3053\u3053\u307e\u3067\u3067\u7573\u307f\u8fbc\u307f\u4e57\u7b97\u7d50\u679c\u304c\u3082\u3068\u307e\u3063\u305f\u306e\u3067\u3001\u3042\u3068\u306f $k$ \u5358\u4f4d\u305a\u3064\u305a\u3089\u3057\u306a\u304a\u3057\u3066\u3001\u91cd\u8907\u3057\u305f\u90e8\u5206\u3092\u7d20\u76f4\u306b\u8db3\u3057\u3066 ($\\bmod\\,p$ \u306e\u5fc5\u8981\u304c\u306a\u3044) \u3044\u3051\u3070\u7a4d\u304c\u6c42\u307e\u308b\u3002\n\n```math\nC = \\sum_{j=0}^{2n-1} c_jw^{jk}\n```\n\n```py\ndef Merge(a, k):\n  val = 0\n  a.reverse()\n  for v in a:\n    val = (val << k) + v\n  return val\n```\n\n# \u305d\u306e\u4ed6\u306e\u5236\u9650\n\u5206\u5272\u306e\u969b\u3001\u6f0f\u308c\u308b\u90e8\u5206\u304c\u3042\u3063\u3066\u306f\u3044\u3051\u306a\u3044\u306e\u3067\u3001\n\n```math\n2N \\leq kn\n```\n\n\u3068\u3044\u3046\u6761\u4ef6\u304c\u3067\u304d\u308b\u3002$2N$ \u306f\u7a4d\u3068\u3057\u3066\u51fa\u3066\u304f\u308b\u6570\u3082\u30ab\u30d0\u30fc\u3059\u308b\u5927\u304d\u3055\u3067\u3042\u308b\u3002(\u8ca0\u5de1\u56de\u3092\u5229\u7528\u3059\u308b\u5834\u5408\u306f $N$ \u306b\u306a\u308b\u3002\u8a73\u3057\u304f\u306f\u5f8c\u3067\u3069\u3053\u304b\u306b\u66f8\u304f\u3002) \u4e00\u65b9\u3067 $c_i$ \u306b\u3064\u3044\u3066\u306f\u7573\u307f\u8fbc\u307f\u4e57\u7b97\u7d50\u679c\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u6cd5\u304c\u305d\u308c\u3088\u308a\u5c0f\u3055\u304f\u306a\u3063\u3066\u306f\u3044\u3051\u306a\u3044\u3002\u6570\u5f0f\u306b\u3059\u308b\u3068\n\n```math\nc_i < nw^{2k} < m = w^{n/2} + 1\n```\n\n\u3068\u306a\u308b\u304c\u3001$\\\\{a_i\\\\}\\not\\equiv -1$ \u3068\u3044\u3046\u3053\u3068\u3092\u8003\u3048\u3066\u6761\u4ef6\u3092\u7c21\u7565\u5316\u3059\u308b\u3068\n\n```math\n\\lceil\\log_wn\\rceil + 2k \\leq \\frac{n}{2}\n```\n\n```math\n\\therefore k \\leq \\frac{1}{2}\\left(\\frac{n}{2} - \\lceil\\log_wn\\rceil\\right)\n```\n\n\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u3002 \u307e\u305f\u3001$n$ \u306f FFT \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u9069\u7528\u3055\u305b\u308b\u305f\u3081\u306b 2 \u306e\u3079\u304d\u4e57\u3092\u9078\u3076\u3068\u3044\u3046\u524d\u63d0\u3092\u5408\u308f\u305b\u308b\u3068\u3001$n$ \u306b\u4f9d\u5b58\u3057\u3066\u9650\u754c\u3068\u306a\u308b $N$ \u3084 $k$ \u3082\u6c7a\u307e\u308b\u3002\n\n- $w=2$ \u306e\u5834\u5408(\u5358\u4f4d:bit)\n\n|  $n$  | 32| 64| 128| 256|  512|  1024|\n|:-----:|--:|--:|---:|---:|----:|-----:|\n|$k\\leq$|  5| 13|  28|  60|  123|   251|\n|$N\\leq$| 80|416|1792|7680|31488|128512|\n\n- $w=2^{64}$ \u306e\u5834\u5408(\u5358\u4f4d:word)\n\n|  $n$  | 32| 64| 128| 256|  512|  1024|\n|:-----:|--:|--:|---:|---:|----:|-----:|\n|$k\\leq$|  7| 15|  13|  63|  127|   255|\n|$N\\leq$|112|480|1984|8064|32512|130560|\n\n```py\ndef SetUp(a, b):\n  N = max(a.bit_length(), b.bit_length())\n  for b in xrange(5, 30):\n    n = 2 ** b\n    k = (n / 2 - b) / 2\n    if n * k >= N * 2:\n      return n, k\n  # 2^30 for n is too large\n  assert false\n```\n", "tags": ["\u591a\u500d\u9577\u6574\u6570", "FFT", "math", "\u6570\u5b66"]}