{"context": "GIF\u306eLZW\u3092\u5c55\u958b\u3057\u3066\u307f\u307e\u3059\u3002\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u3053\u3068\u3092\u3059\u308b\u305f\u3081\u3001\u5727\u7e2e\u3088\u308a\u3082\u5c55\u958b\u306e\u65b9\u304c\u96e3\u3057\u3044\u3067\u3059\u3002\n\u30b7\u30ea\u30fc\u30ba\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\nGIF\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u8aad\u3093\u3067\u307f\u305f\nGIF\u306eLZW\u5727\u7e2e\u3092\u8abf\u3079\u3066\u307f\u305f\nGIF\u306eLZW\u3092\u5c55\u958b\u3057\u3066\u307f\u305f \u2190 \u3053\u306e\u8a18\u4e8b\n\n\n\u30c6\u30fc\u30d6\u30eb\u306e\u69cb\u7bc9\n\u5c55\u958b\u3057\u306a\u304c\u3089\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\u3053\u308c\u304c\u306a\u304b\u306a\u304b\u30c8\u30ea\u30c3\u30ad\u30fc\u3067\u3001\u5727\u7e2e\u306e\u30ed\u30b0\u3092\u898b\u306a\u304c\u3089\u8003\u3048\u307e\u3059\u3002\n\u5727\u7e2e\u3067\u306e\u5165\u529b\u5024\u304c\u5c55\u958b\u3067\u306e\u51fa\u529b\u5024\u3068\u306a\u308b\u305f\u3081\u3001\u30ed\u30b0\u304b\u3089\u5165\u529b\u5024\u3092\u96a0\u3057\u3066\u3001\u51fa\u529b\u5024\u304b\u3089\u30c6\u30fc\u30d6\u30eb\u306e\u5024\u3092\u518d\u73fe\u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u307e\u3059\u3002\n\n\u30ed\u30b0\u304b\u3089\u629c\u7c8b\nTable   Output  Desc.\n-----   ------  -----\n0x104           - add 'ff ff 28' to table\n        0x103   - output code for previous string\n                '28' initialize local string\n                '28 ff' 0x102 found in table\n                '28 ff ff' not found in table\n0x105           - add '28 ff ff' to table\n        0x102   - output code for previous string\n\n\n0x103: ff ff \u3068 0x102: 28 ff \u304c\u5b9a\u7fa9\u6e08\u307f\u3067\u3059\u30020x104: ff ff 28 \u3092\u6c42\u3081\u308b\u306b\u306f 0x103 \u306b 0x102 \u306e\u6700\u521d\u306e1\u30d0\u30a4\u30c8\u3092\u304f\u3063\u4ed8\u3051\u307e\u3059\u3002\n\u307e\u3068\u3081\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002D\u304c\u78ba\u5b9a\u3057\u3066\u304b\u3089A\u3092\u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0\u3059\u308b\u3068\u3044\u3046\u51e6\u7406\u9806\u3067\u3059\u3002\nA       \u2190 A = B + D[0] \u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0\n    B\n\nC       \u2190 \u7121\u95a2\u4fc2\n    D\n\n\u6b21\u306e\u30b1\u30fc\u30b9\u306f\u3082\u3046\u5c11\u3057\u8907\u96d1\u3067\u3059\u3002\n\n\u30ed\u30b0\u304b\u3089\u629c\u7c8b\nTable   Output  Desc.\n-----   ------  -----\n0x106           - add 'ff ff ff' to table\n        0x103   - output code for previous string\n                'ff' initialize local string\n                'ff ff' 0x103 found in table\n                'ff ff ff' 0x106 found in table\n                'ff ff ff ff' not found in table\n0x107           - add 'ff ff ff ff' to table\n        0x106   - output code for previous string\n\n\n\u76f4\u524d\u306e 0x103 \u3068 \u5f8c\u7d9a\u306e 0x106 \u306e\u6700\u521d\u306e1\u30d0\u30a4\u30c8\u304b\u3089 0x106 \u3092\u4f5c\u308d\u3046\u3068\u3057\u3066\u3082\u3001\u305d\u3082\u305d\u3082 0x106 \u304c\u672a\u5b9a\u7fa9\u3067\u3059\u3002\u3057\u304b\u3057 A = B + D[0] \u306e\u95a2\u4fc2\u304b\u3089 0x106\uff08A\uff09\u3068 0x103\uff08B\uff09\u306e\u524d\u534a\u306f\u4e00\u81f4\u3059\u308b\u305f\u3081\u30010x103 \u306e\u6700\u521d\u306e1\u30d0\u30a4\u30c8\u3067\u4ee3\u7528\u3067\u304d\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u3053\u306e\u3053\u3068\u304cWikipedia\u3067\u306f\u7d50\u679c\u3060\u3051\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nGIF - Wikipedia\n\nIs incoming code found in table?\nYES: add string for local code followed by first byte of string for incoming code\nNO: add string for local code followed by copy of its own first byte\n\n\n\u30b3\u30fc\u30c9\u5217\u304b\u3089\u306e\u5c55\u958b\n\u307e\u305a\u30d3\u30c3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u53d6\u308a\u51fa\u3055\u308c\u305f\u30b3\u30fc\u30c9\u5217\u304b\u3089\u306e\u5c55\u958b\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u8a66\u884c\u932f\u8aa4\u306e\u904e\u7a0b\u3092\u63b2\u8f09\u3057\u3066\u3082\u3042\u307e\u308a\u53c2\u8003\u306b\u306f\u306a\u3089\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u5b8c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\nLZWExtract.fsx\n\n\u524d\u56de\u306e\u51fa\u529b\u7d50\u679c\u3092\u5165\u529b\u3068\u3057\u307e\u3059\u3002\nlet src = [| 0x100; 0x28; 0xff; 0x103; 0x102; 0x103; 0x106; 0x107; 0x101 |]\n\n\u30b3\u30de\u30f3\u30c9\u985e\u306f clr \u306e\u307f\u5b9a\u7fa9\u3057\u3066\u3001\u305d\u306e\u4ed6\u306f\u8a08\u7b97\u3067\u6c42\u3081\u307e\u3059\u3002\nlet clr = 0x100\n\n\u30ed\u30b0\u30924\u5217\u3067\u51fa\u529b\u3057\u307e\u3059\u3002\n\n\u5165\u529b\uff08\u5727\u7e2e\u30c7\u30fc\u30bf\uff09\n\u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u51fa\u529b\u3001\u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0\u3057\u305f\u30c7\u30fc\u30bf\u306f\u8aac\u660e\u306b\u51fa\u529b\n\u5c55\u958b\u7d50\u679c\u304c\u78ba\u5b9a\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30c7\u30fc\u30bf\u3092\u51fa\u529b\n\u8aac\u660e\n\nprintfn \"Input\\tTable\\tOutput\\tDesc.\"\nprintfn \"-----\\t-----\\t------\\t-----\"\n\n\u30ed\u30b0\u8868\u793a\u7528\u306b\u30d0\u30a4\u30ca\u30ea\u309216\u9032\u6570\u5316\u3059\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nlet hex (bin:byte seq) =\n    bin |> Seq.map (sprintf \"%02x\") |> String.concat \" \"\n\n\u5c55\u958b\u7d50\u679c\u306e\u51fa\u529b\u5148\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u51fa\u529b\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u3001\u51fa\u529b\u7528\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nlet data = System.Collections.Generic.List<byte>()\nlet output (vs:byte[]) =\n    printfn \"\\t\\t%s\" (hex vs)\n    data.AddRange vs\n\n\u30c6\u30fc\u30d6\u30eb\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u3001\u30c6\u30fc\u30d6\u30eb\u8ffd\u52a0\u7528\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nlet table = System.Collections.Generic.List<byte[]>()\nlet add codes =\n    let n = clr + 2 + table.Count\n    printfn \"\\t0x%03x\\t\\t%s\" n (hex codes)\n    table.Add codes\n\n\u30eb\u30fc\u30d7\u3067\u5165\u529b\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u307e\u3059\u3002\u7d42\u4e86\u30b3\u30fc\u30c9\u304c\u6765\u308c\u3070\u629c\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001F#\u306b\u306fbreak\u304c\u306a\u3044\u305f\u3081for\u3067\u306f\u66f8\u3051\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081\u518d\u5e30\u95a2\u6570\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002\u30eb\u30fc\u30d7\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\uff08\u73fe\u5728\u4f4d\u7f6e\u3068\u76f4\u524d\u306b\u51fa\u529b\u3057\u305f\u30c7\u30fc\u30bf\uff09\u3092\u5f15\u6570\u3067\u53d7\u3051\u53d6\u308a\u3001\u5148\u982d\u3067\u7d42\u4e86\u6761\u4ef6\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\nlet rec extract i prev =\n    if i >= src.Length then () else\n\n\u73fe\u5728\u306e\u5165\u529b\u5024\u3092\u8aad\u307f\u3001\u30ed\u30b0\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n    let d = src.[i]\n    printf \"0x%03x\" d\n\nclr \u304c\u6765\u308c\u3070\u30c6\u30fc\u30d6\u30eb\u3092\u6d88\u53bb\u3057\u3066\u3001\u518d\u5e30\u547c\u3073\u51fa\u3057\u306b\u3088\u308a\u30eb\u30fc\u30d7\u3092\u6b21\u306b\u9032\u3081\u307e\u3059\u3002\u76f4\u524d\u30c7\u30fc\u30bf\u3082\u30af\u30ea\u30a2\u3057\u307e\u3059\u3002\n    if d = clr then\n        printfn \"\\t\\t\\tClear\"\n        table.Clear()\n        extract (i + 1) [||]\n\n\u7d42\u4e86\u30b3\u30fc\u30c9\u304c\u6765\u308c\u3070\u629c\u3051\u307e\u3059\u3002\u518d\u5e30\u547c\u3073\u51fa\u3057\u3092\u3057\u306a\u3044\u3053\u3068\u304c\u30eb\u30fc\u30d7\u304b\u3089\u629c\u3051\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n    elif d = clr + 1 then\n        printfn \"\\t\\t\\tEnd\"\n\n\u5024\u307e\u305f\u306f\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u306e\u51e6\u7406\u3067\u3059\u3002\u51fa\u529b\u30c7\u30fc\u30bf\u3092 vs \u306b\u675f\u7e1b\u3057\u307e\u3059\u3002\u5024\u3067\u3042\u308c\u3070\u914d\u5217\u3067\u5305\u3093\u3067\uff08[|d|]\uff09\u3001\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u3067\u3042\u308c\u3070\u4e2d\u8eab\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u306b\u524d\u8ff0\u306e\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u30b1\u30fc\u30b9\uff08A = D\uff09\u306b\u8a72\u5f53\u3059\u308b\u6761\u4ef6\u304c table.Count = n \u3067\u3059\u3002\n    else\n        let vs =\n            if d < clr then [|byte d|] else\n                let n = d - clr - 2\n                if n < table.Count then table.[n] else\n                    Array.append prev [|prev.[0]|]\n\n\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3057\u3066\u3001\u76f4\u524d\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308c\u3070\uff08\u306a\u3044\u306e\u306f\u521d\u56de\u6642\u306e\u307f\uff09\u30c6\u30fc\u30d6\u30eb\u306b\u30c7\u30fc\u30bf\uff08B + D[0]\uff09\u3092\u8ffd\u52a0\u3057\u3066\u3001\u30eb\u30fc\u30d7\u3092\u6b21\u306b\u9032\u3081\u307e\u3059\u3002<>\u306f\u4e0d\u7b49\u53f7\u3001[||]\u306f\u7a7a\u306e\u914d\u5217\u3067\u3059\u3002\n        output vs\n        if prev <> [||] then\n            add (Array.append prev [|vs.[0]|])\n        extract (i + 1) vs\n\n\u518d\u5e30\u95a2\u6570\u3067\u5b9a\u7fa9\u3057\u305f\u30eb\u30fc\u30d7\u306f\u3001\u521d\u671f\u5024\u3092\u4e0e\u3048\u3066\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u958b\u59cb\u3057\u307e\u3059\u3002\u5165\u529b\u5024\u306e\u6b63\u5f53\u6027\u306f\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u4f8b\u5916\u30cf\u30f3\u30c9\u30e9\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\uff08\u30a8\u30e9\u30fc\u3092\u51fa\u529b\u3059\u308b\u3060\u3051\u3067\u3059\u304c\uff09\u3002\ntry extract 0 [||] with e -> printfn \"%A\" e\n\n\n\u52d5\u4f5c\u7d50\u679c\n\u5165\u529b\u5024\u304c\u5727\u7e2e\u3055\u308c\u3066\u3044\u3066\u5c0f\u3055\u3044\u305f\u3081\u3001\u5727\u7e2e\u306e\u3068\u304d\u3088\u308a\u3082\u30b9\u30c6\u30c3\u30d7\u6570\u304c\u5c11\u306a\u3044\u3067\u3059\u30020x103\u30680x106\u30680x107\u304c\u524d\u65b9\u53c2\u7167\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u70b9\u3067\u3059\u3002\nInput   Table   Output  Desc.\n-----   -----   ------  -----\n0x100           Clear\n0x028       28\n0x0ff       ff\n    0x102       28 ff\n0x103       ff ff\n    0x103       ff ff\n0x102       28 ff\n    0x104       ff ff 28\n0x103       ff ff\n    0x105       28 ff ff\n0x106       ff ff ff\n    0x106       ff ff ff\n0x107       ff ff ff ff\n    0x107       ff ff ff ff\n0x101           End\n\n\n\u30d3\u30c3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u306e\u5c55\u958b\nGIF\u304b\u3089\u30c7\u30fc\u30bf\u3092\u5c55\u958b\u3059\u308b\u306b\u306f\u30d3\u30c3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u30b3\u30fc\u30c9\u5217\u3092\u53d6\u308a\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u5b8c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\nLZWDecode.fsx\n\n\n\u8aad\u307f\u8fbc\u307f\n\u30d0\u30a4\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u6307\u5b9a\u3057\u305f\u30d3\u30c3\u30c8\u305a\u3064\u8aad\u307f\u8fbc\u3080\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u306f255\u30d0\u30a4\u30c8\u3054\u3068\u306e\u30d6\u30ed\u30c3\u30af\u306b\u5206\u5272\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba\u3092\u5148\u982d\u30d0\u30a4\u30c8\u304b\u3089\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\u305d\u306e\u5f8c\u306e\u30c7\u30fc\u30bf\u306f\u30d3\u30c3\u30c8\u5358\u4f4d\u3067\u306e\u30ea\u30c8\u30eb\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306e\u305f\u3081\u4e0b\u4f4d\u304b\u3089\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\u30d6\u30ed\u30c3\u30af\u306e\u7d42\u308f\u308a\u307e\u3067\u5230\u9054\u3059\u308c\u3070\u6b21\u306e\u30d6\u30ed\u30c3\u30af\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba\u304c0\u3067\u3042\u308c\u3070\u7d42\u4e86\u3057\u307e\u3059\u3002\n\u203b \u30d3\u30c3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u4e2d\u306b\u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba\u304c\u5272\u308a\u8fbc\u3080\u5f62\u3068\u306a\u308a\u307e\u3059\u3002\nopen System.IO\n\ntype BitReader(s:Stream) =\n    let mutable i, max = 0, -1\n    let next() =\n        if max = 0 then -1 else\n        if i >= max then\n            i <- 0\n            max <- s.ReadByte()\n        if max = 0 then -1 else\n        i <- i + 1\n        s.ReadByte()\n    let mutable cur = next()\n    let mutable b = 0\n    let mutable v = -1\n    member x.Value = v\n    member x.Read n =\n        let rec f v sh n =\n            if cur < 0 then -1 else\n            let d = cur >>> b\n            let left = 8 - b\n            if n < left then\n                b <- b + n\n                v ||| ((d &&& ((1 <<< n) - 1)) <<< sh)\n            else\n                b <- 0\n                cur <- next()\n                let v = v ||| (d <<< sh)\n                if n = left then v else f v (sh + left) (n - left)\n        v <- f 0 0 n\n        v >= 0\n\n\n\u30c6\u30b9\u30c8\nWikipedia\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u304b\u3089\u30b3\u30fc\u30c9\u5217\u3092\u53d6\u308a\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\u30b3\u30fc\u30c9\u9577\u306f\u3059\u3079\u30669bit\u3060\u3068\u5206\u304b\u3063\u3066\u3044\u308b\u305f\u3081\u6c7a\u3081\u6253\u3061\u3057\u307e\u3059\u3002\nlet src1 = [|\n    // block size\n    11uy\n    // data bytes\n    0x00uy; 0x51uy; 0xFCuy; 0x1Buy; 0x28uy; 0x70uy; 0xA0uy; 0xC1uy\n    0x83uy; 0x01uy; 0x01uy\n    // Block Terminator\n    0uy |]\n\nseq {\n    use ms = new MemoryStream(src1)\n    let br = BitReader(ms)\n    while br.Read(9) do yield br.Value }\n|> Seq.map (sprintf \"%03x\")\n|> String.concat \" \"\n|> printfn \"%s\"\n\n\n\u5b9f\u884c\u7d50\u679c\n100 028 0ff 103 102 103 106 107 101\n\n\n\u3046\u307e\u304f\u53d6\u308a\u51fa\u305b\u3066\u3044\u307e\u3059\u3002\n\n\u5c55\u958b\n\u30d3\u30c3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u5c55\u958b\u3059\u308b\u969b\u306b\u30b3\u30fc\u30c9\u9577\u306f\u53ef\u5909\u3067\u3059\u3002\u51fa\u73fe\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u30b3\u30fc\u30c9\u3092\u3059\u3079\u3066\u683c\u7d0d\u3067\u304d\u308b\u3060\u3051\u306e\u30b5\u30a4\u30ba\u3068\u306a\u308b\u305f\u3081\u3001\u6700\u5927\u5024\u306f\u4eca\u304b\u3089\u8ffd\u52a0\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u30c6\u30fc\u30d6\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u305712\u30d3\u30c3\u30c8\u306e\u5236\u9650\u304c\u3042\u308b\u305f\u3081\u3001\u6b63\u5e38\u306a\u30c7\u30fc\u30bf\u3067\u3042\u308c\u3070\u5236\u9650\u3092\u8d85\u3048\u305f\u6240\u3067clr\u304c\u6765\u3066\u30c6\u30fc\u30d6\u30eb\u3092\u30af\u30ea\u30a2\u3057\u307e\u3059\u3002\n\u5148\u306b\u5b9f\u88c5\u3057\u305fextract\u3092\u30d9\u30fc\u30b9\u306b\u3001BitReader\u3092\u4f7f\u3046\u3088\u3046\u306b\u624b\u76f4\u3057\u3057\u305fdecode\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u5909\u3048\u306a\u3044\u305f\u3081\u3001\u52d5\u4f5c\u3092\u4fe1\u7528\u3057\u3066\u30ed\u30b0\u51fa\u529b\u306f\u9664\u53bb\u3057\u307e\u3059\u3002\nlet decode (br:BitReader) (data:List<byte>) lzwMin =\n    let table = List<byte[]>()\n    let clr = 1 <<< lzwMin\n    let rec f blen next prev =\n        let i = clr + 2 + table.Count\n        if i >= next then f (blen + 1) (next <<< 1) prev\n        elif not <| br.Read (min 12 blen) then () else\n        let d = br.Value\n        if d = clr then\n            table.Clear()\n            f 1 2 [||]\n        elif d = clr + 1 then () else\n        let vs =\n            if d < clr then [|byte d|] else\n                let n = d - clr - 2\n                if n < table.Count then table.[n] else\n                    Array.append prev [|prev.[0]|]\n        data.AddRange vs\n        if prev <> [||] then\n            table.Add(Array.append prev [|vs.[0]|])\n        f blen next vs\n    f 1 2 [||]\n\n\n\u30c6\u30b9\u30c8\n\u30c6\u30b9\u30c8\u7528\u306b\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3068\u6700\u77ed\u30d3\u30c3\u30c8\u9577\u3068\u5727\u7e2e\u30c7\u30fc\u30bf\u3092\u6e21\u3057\u3066\u5c55\u958b\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nlet test w h lzwMin f (src:byte[]) =\n    use ms = new MemoryStream(src)\n    let data = List<byte>()\n    decode (BitReader(ms)) data lzwMin\n    printfn \"%d * %d = %d (%d)\" w h (w * h) data.Count\n    let mutable en = data.GetEnumerator()\n    for y = 0 to h - 1 do\n        for x = 0 to w - 1 do\n            if en.MoveNext() then\n                printf \"%s\" (f en.Current)\n        printfn \"\"\n\nWikipedia\u306e\u30c7\u30fc\u30bf\u3092\u5c55\u958b\u3059\u308b\u3068\u3001\u3046\u307e\u304f\u753b\u50cf\u306e\u5f62\u304c\u53d6\u308a\u51fa\u305b\u307e\u3057\u305f\u3002\ntest 3 5 8 (sprintf \"%02x \") src1\n\n\n\u5b9f\u884c\u7d50\u679c\n3 * 5 = 15 (15)\n28 ff ff \nff 28 ff \nff ff ff \nff ff ff \nff ff ff \n\n\nGIF\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u8aad\u3093\u3067\u307f\u305f\u3067\u4f7f\u7528\u3057\u305f\u753b\u50cf\u306e\u5727\u7e2e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u307f\u307e\u3059\u3002\ntest 16 16 2 (fun b -> string \"#* ?\".[int b]) [|\n    0x2Buy  // block size\n            // data bytes\n    0x94uy; 0x8Fuy; 0xA9uy; 0x16uy; 0xB0uy; 0x0Buy; 0x42uy; 0x78uy\n    0xC8uy; 0x09uy; 0x4Buy; 0xB1uy; 0xA4uy; 0xFBuy; 0x60uy; 0xF5uy\n    0x5Duy; 0x4Fuy; 0x28uy; 0x74uy; 0x47uy; 0x03uy; 0xA4uy; 0x91uy\n    0x07uy; 0x22uy; 0x92uy; 0x14uy; 0xBDuy; 0xE5uy; 0xB4uy; 0x98uy\n    0x62uy; 0x56uy; 0x51uy; 0xF7uy; 0xACuy; 0xDBuy; 0xFAuy; 0xFEuy\n    0x43uy; 0x14uy; 0x00uy\n    0uy |]  // Block Terminator\n\n\n\u5b9f\u884c\u7d50\u679c\n16 * 16 = 256 (256)\n\n       *#       \n       #**      \n      #  #      \n     #   **     \n    **    #     \n    #     #     \n   #      **    \n *#####*   #    \n  #    ****#****\n **        **   \n #          #   \n #          #   \n**          **  \n             #  \n\n\n\n\u5143\u753b\u50cf \n\u304d\u3061\u3093\u3068\u5f62\u304c\u53d6\u308a\u51fa\u305b\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\nGIF\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306e\u5c55\u958b\n\u30d8\u30c3\u30c0\u3084\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u3081\u3070GIF\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u753b\u50cf\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\u5b8c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\nGIFDecode.fsx\n\n\n\u30d8\u30c3\u30c0\nBinaryReader \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\nlet decodeGIF (s:Stream) =\n    use br = new BinaryReader(s, Encoding.ASCII)\n\n\u30b7\u30b0\u30cd\u30c1\u30e3\u3068\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\n    // 17. Header.\n    'G'B; 'I'B; 'F'B  // Signature\n    '8'B; '7'B; 'a'B  // Version\n\n\n\n\u8aad\u307f\u8fbc\u307f\n    match String(br.ReadChars 6) with\n    | \"GIF87a\" | \"GIF89a\" -> ()\n    | _ -> failwith \"not gif file\"\n\n\n\u30b5\u30a4\u30ba\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\n    // 18. Logical Screen Descriptor.\n    16uy; 0uy  // Logical Screen Width\n    16uy; 0uy  // Logical Screen Height\n\n\n\n\u8aad\u307f\u8fbc\u307f\n    let width  = br.ReadUInt16() |> int\n    let height = br.ReadUInt16() |> int\n\n\n\u30d5\u30e9\u30b0\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\n    0xA1uy     // <Packed Fields>\n               //   Global Color Table Flag\n               //   | Color Resolution\n               //   | |   Sort Flag\n               //   | |   | Size of Global Color Table\n               //   1 010 0 001\n\n\n\n\u8aad\u307f\u8fbc\u307f\n    let b = br.ReadByte() |> int\n    let hasGCT  = (b &&& 0x80) <> 0\n    let colRes  = (b >>> 4) &&& 7\n    let sorted  = (b &&& 8) <> 0\n    let sizeGCT =  b &&& 7\n\n\n\u3053\u306e\u8981\u9818\u3067\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u306a\u3069\u3082\u8aad\u307f\u8fbc\u3093\u3067\u3001\u5c55\u958b\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30c7\u30fc\u30bf\u3092RGB\u5024\u306b\u5909\u63db\u3059\u308c\u3070\u3001\u753b\u50cf\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\n\u6a19\u6e96\u753b\u50cfLenna\u3092256\u8272\u306b\u6e1b\u8272\u3057\u305fGIF\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u4f5c\u3063\u305f\u30c7\u30b3\u30fc\u30c0\u30fc\u3067\u8aad\u307f\u8fbc\u3093\u3067\u8868\u793a\u3057\u307e\u3059\u3002\n[<EntryPoint; STAThread>] do\nlet f = new Form(Text = \"GIF\")\nlet p = new PictureBox(Dock = DockStyle.Fill,\n                       SizeMode = PictureBoxSizeMode.CenterImage)\nf.Controls.Add p\nf.Load.Add <| fun _ ->\n    use fs = new FileStream(\"Lenna.gif\", FileMode.Open)\n    let bmp = decodeGIF fs\n    f.ClientSize <- bmp.Size\n    p.Image <- bmp\nApplication.EnableVisualStyles()\nApplication.Run f\n\n\n\u3046\u307e\u304f\u8868\u793a\u3067\u304d\u307e\u3057\u305f\u3002\n\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u5fdc\u3059\u308b\u306b\u306f\u307e\u3060\u4f5c\u696d\u304c\u5fc5\u8981\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u5b9f\u88c5\u3092\u898b\u9001\u308a\u307e\u3059\u3002\nGIF\u306eLZW\u3092\u5c55\u958b\u3057\u3066\u307f\u307e\u3059\u3002\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u3053\u3068\u3092\u3059\u308b\u305f\u3081\u3001\u5727\u7e2e\u3088\u308a\u3082\u5c55\u958b\u306e\u65b9\u304c\u96e3\u3057\u3044\u3067\u3059\u3002\n\n\u30b7\u30ea\u30fc\u30ba\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n1. [GIF\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u8aad\u3093\u3067\u307f\u305f](http://qiita.com/7shi/items/33117c6c369d37dc6cdd)\n1. [GIF\u306eLZW\u5727\u7e2e\u3092\u8abf\u3079\u3066\u307f\u305f](http://qiita.com/7shi/items/cfe1c6e42aff78c06652)\n1. GIF\u306eLZW\u3092\u5c55\u958b\u3057\u3066\u307f\u305f \u2190 \u3053\u306e\u8a18\u4e8b\n\n# \u30c6\u30fc\u30d6\u30eb\u306e\u69cb\u7bc9\n\n\u5c55\u958b\u3057\u306a\u304c\u3089\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\u3053\u308c\u304c\u306a\u304b\u306a\u304b\u30c8\u30ea\u30c3\u30ad\u30fc\u3067\u3001[\u5727\u7e2e\u306e\u30ed\u30b0](http://qiita.com/7shi/items/cfe1c6e42aff78c06652#%E5%8B%95%E4%BD%9C%E7%B5%90%E6%9E%9C)\u3092\u898b\u306a\u304c\u3089\u8003\u3048\u307e\u3059\u3002\n\n\u5727\u7e2e\u3067\u306e\u5165\u529b\u5024\u304c\u5c55\u958b\u3067\u306e\u51fa\u529b\u5024\u3068\u306a\u308b\u305f\u3081\u3001\u30ed\u30b0\u304b\u3089\u5165\u529b\u5024\u3092\u96a0\u3057\u3066\u3001\u51fa\u529b\u5024\u304b\u3089\u30c6\u30fc\u30d6\u30eb\u306e\u5024\u3092\u518d\u73fe\u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u307e\u3059\u3002\n\n```text:\u30ed\u30b0\u304b\u3089\u629c\u7c8b\nTable   Output  Desc.\n-----   ------  -----\n0x104           - add 'ff ff 28' to table\n        0x103   - output code for previous string\n                '28' initialize local string\n                '28 ff' 0x102 found in table\n                '28 ff ff' not found in table\n0x105           - add '28 ff ff' to table\n        0x102   - output code for previous string\n```\n\n`0x103: ff ff` \u3068 `0x102: 28 ff` \u304c\u5b9a\u7fa9\u6e08\u307f\u3067\u3059\u3002`0x104: ff ff 28` \u3092\u6c42\u3081\u308b\u306b\u306f `0x103` \u306b `0x102` \u306e\u6700\u521d\u306e1\u30d0\u30a4\u30c8\u3092\u304f\u3063\u4ed8\u3051\u307e\u3059\u3002\n\n\u307e\u3068\u3081\u308b\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002D\u304c\u78ba\u5b9a\u3057\u3066\u304b\u3089A\u3092\u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0\u3059\u308b\u3068\u3044\u3046\u51e6\u7406\u9806\u3067\u3059\u3002\n\n```text\nA       \u2190 A = B + D[0] \u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0\n    B\n\nC       \u2190 \u7121\u95a2\u4fc2\n    D\n```\n\n\u6b21\u306e\u30b1\u30fc\u30b9\u306f\u3082\u3046\u5c11\u3057\u8907\u96d1\u3067\u3059\u3002\n\n```text:\u30ed\u30b0\u304b\u3089\u629c\u7c8b\nTable   Output  Desc.\n-----   ------  -----\n0x106           - add 'ff ff ff' to table\n        0x103   - output code for previous string\n                'ff' initialize local string\n                'ff ff' 0x103 found in table\n                'ff ff ff' 0x106 found in table\n                'ff ff ff ff' not found in table\n0x107           - add 'ff ff ff ff' to table\n        0x106   - output code for previous string\n```\n\n\u76f4\u524d\u306e `0x103` \u3068 \u5f8c\u7d9a\u306e `0x106` \u306e\u6700\u521d\u306e1\u30d0\u30a4\u30c8\u304b\u3089 `0x106` \u3092\u4f5c\u308d\u3046\u3068\u3057\u3066\u3082\u3001\u305d\u3082\u305d\u3082 `0x106` \u304c\u672a\u5b9a\u7fa9\u3067\u3059\u3002\u3057\u304b\u3057 `A = B + D[0]` \u306e\u95a2\u4fc2\u304b\u3089 `0x106`\uff08A\uff09\u3068 `0x103`\uff08B\uff09\u306e\u524d\u534a\u306f\u4e00\u81f4\u3059\u308b\u305f\u3081\u3001`0x103` \u306e\u6700\u521d\u306e1\u30d0\u30a4\u30c8\u3067\u4ee3\u7528\u3067\u304d\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u3053\u3068\u304cWikipedia\u3067\u306f\u7d50\u679c\u3060\u3051\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n[GIF - Wikipedia](https://en.wikipedia.org/wiki/GIF)\n\n> Is incoming code found in table?\n> YES: add string for local code followed by first byte of string for incoming code\n> NO: add string for local code followed by copy of its own first byte\n\n# \u30b3\u30fc\u30c9\u5217\u304b\u3089\u306e\u5c55\u958b\n\n\u307e\u305a\u30d3\u30c3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u53d6\u308a\u51fa\u3055\u308c\u305f\u30b3\u30fc\u30c9\u5217\u304b\u3089\u306e\u5c55\u958b\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\u8a66\u884c\u932f\u8aa4\u306e\u904e\u7a0b\u3092\u63b2\u8f09\u3057\u3066\u3082\u3042\u307e\u308a\u53c2\u8003\u306b\u306f\u306a\u3089\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u5b8c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\n* [LZWExtract.fsx](https://bitbucket.org/snippets/7shi/nBxp8)\n\n\u524d\u56de\u306e\u51fa\u529b\u7d50\u679c\u3092\u5165\u529b\u3068\u3057\u307e\u3059\u3002\n\n```fsharp\nlet src = [| 0x100; 0x28; 0xff; 0x103; 0x102; 0x103; 0x106; 0x107; 0x101 |]\n```\n\n\u30b3\u30de\u30f3\u30c9\u985e\u306f clr \u306e\u307f\u5b9a\u7fa9\u3057\u3066\u3001\u305d\u306e\u4ed6\u306f\u8a08\u7b97\u3067\u6c42\u3081\u307e\u3059\u3002\n\n```fsharp\nlet clr = 0x100\n```\n\n\u30ed\u30b0\u30924\u5217\u3067\u51fa\u529b\u3057\u307e\u3059\u3002\n\n1. \u5165\u529b\uff08\u5727\u7e2e\u30c7\u30fc\u30bf\uff09\n1. \u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u51fa\u529b\u3001\u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0\u3057\u305f\u30c7\u30fc\u30bf\u306f\u8aac\u660e\u306b\u51fa\u529b\n1. \u5c55\u958b\u7d50\u679c\u304c\u78ba\u5b9a\u3057\u305f\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30c7\u30fc\u30bf\u3092\u51fa\u529b\n1. \u8aac\u660e\n\n```fsharp\nprintfn \"Input\\tTable\\tOutput\\tDesc.\"\nprintfn \"-----\\t-----\\t------\\t-----\"\n```\n\n\u30ed\u30b0\u8868\u793a\u7528\u306b\u30d0\u30a4\u30ca\u30ea\u309216\u9032\u6570\u5316\u3059\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```fsharp\nlet hex (bin:byte seq) =\n    bin |> Seq.map (sprintf \"%02x\") |> String.concat \" \"\n```\n\n\u5c55\u958b\u7d50\u679c\u306e\u51fa\u529b\u5148\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u51fa\u529b\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u3001\u51fa\u529b\u7528\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```fsharp\nlet data = System.Collections.Generic.List<byte>()\nlet output (vs:byte[]) =\n    printfn \"\\t\\t%s\" (hex vs)\n    data.AddRange vs\n```\n\n\u30c6\u30fc\u30d6\u30eb\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u30c6\u30fc\u30d6\u30eb\u306b\u8ffd\u52a0\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u305f\u3081\u3001\u30c6\u30fc\u30d6\u30eb\u8ffd\u52a0\u7528\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```fsharp\nlet table = System.Collections.Generic.List<byte[]>()\nlet add codes =\n    let n = clr + 2 + table.Count\n    printfn \"\\t0x%03x\\t\\t%s\" n (hex codes)\n    table.Add codes\n```\n\n\u30eb\u30fc\u30d7\u3067\u5165\u529b\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u307e\u3059\u3002\u7d42\u4e86\u30b3\u30fc\u30c9\u304c\u6765\u308c\u3070\u629c\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001F#\u306b\u306f`break`\u304c\u306a\u3044\u305f\u3081`for`\u3067\u306f\u66f8\u3051\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081\u518d\u5e30\u95a2\u6570\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002\u30eb\u30fc\u30d7\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\uff08\u73fe\u5728\u4f4d\u7f6e\u3068\u76f4\u524d\u306b\u51fa\u529b\u3057\u305f\u30c7\u30fc\u30bf\uff09\u3092\u5f15\u6570\u3067\u53d7\u3051\u53d6\u308a\u3001\u5148\u982d\u3067\u7d42\u4e86\u6761\u4ef6\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```fsharp\nlet rec extract i prev =\n    if i >= src.Length then () else\n```\n\n\u73fe\u5728\u306e\u5165\u529b\u5024\u3092\u8aad\u307f\u3001\u30ed\u30b0\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n```fsharp\n    let d = src.[i]\n    printf \"0x%03x\" d\n```\n\nclr \u304c\u6765\u308c\u3070\u30c6\u30fc\u30d6\u30eb\u3092\u6d88\u53bb\u3057\u3066\u3001\u518d\u5e30\u547c\u3073\u51fa\u3057\u306b\u3088\u308a\u30eb\u30fc\u30d7\u3092\u6b21\u306b\u9032\u3081\u307e\u3059\u3002\u76f4\u524d\u30c7\u30fc\u30bf\u3082\u30af\u30ea\u30a2\u3057\u307e\u3059\u3002\n\n```fsharp\n    if d = clr then\n        printfn \"\\t\\t\\tClear\"\n        table.Clear()\n        extract (i + 1) [||]\n```\n\n\u7d42\u4e86\u30b3\u30fc\u30c9\u304c\u6765\u308c\u3070\u629c\u3051\u307e\u3059\u3002\u518d\u5e30\u547c\u3073\u51fa\u3057\u3092\u3057\u306a\u3044\u3053\u3068\u304c\u30eb\u30fc\u30d7\u304b\u3089\u629c\u3051\u308b\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\n```fsharp\n    elif d = clr + 1 then\n        printfn \"\\t\\t\\tEnd\"\n```\n\n\u5024\u307e\u305f\u306f\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u306e\u51e6\u7406\u3067\u3059\u3002\u51fa\u529b\u30c7\u30fc\u30bf\u3092 `vs` \u306b\u675f\u7e1b\u3057\u307e\u3059\u3002\u5024\u3067\u3042\u308c\u3070\u914d\u5217\u3067\u5305\u3093\u3067\uff08`[|d|]`\uff09\u3001\u30c6\u30fc\u30d6\u30eb\u53c2\u7167\u3067\u3042\u308c\u3070\u4e2d\u8eab\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u305d\u306e\u969b\u306b\u524d\u8ff0\u306e\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u30b1\u30fc\u30b9\uff08`A = D`\uff09\u306b\u8a72\u5f53\u3059\u308b\u6761\u4ef6\u304c `table.Count = n` \u3067\u3059\u3002\n\n```fsharp\n    else\n        let vs =\n            if d < clr then [|byte d|] else\n                let n = d - clr - 2\n                if n < table.Count then table.[n] else\n                    Array.append prev [|prev.[0]|]\n```\n\n\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3057\u3066\u3001\u76f4\u524d\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308c\u3070\uff08\u306a\u3044\u306e\u306f\u521d\u56de\u6642\u306e\u307f\uff09\u30c6\u30fc\u30d6\u30eb\u306b\u30c7\u30fc\u30bf\uff08`B + D[0]`\uff09\u3092\u8ffd\u52a0\u3057\u3066\u3001\u30eb\u30fc\u30d7\u3092\u6b21\u306b\u9032\u3081\u307e\u3059\u3002`<>`\u306f\u4e0d\u7b49\u53f7\u3001`[||]`\u306f\u7a7a\u306e\u914d\u5217\u3067\u3059\u3002\n\n```fsharp\n        output vs\n        if prev <> [||] then\n            add (Array.append prev [|vs.[0]|])\n        extract (i + 1) vs\n```\n\n\u518d\u5e30\u95a2\u6570\u3067\u5b9a\u7fa9\u3057\u305f\u30eb\u30fc\u30d7\u306f\u3001\u521d\u671f\u5024\u3092\u4e0e\u3048\u3066\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u958b\u59cb\u3057\u307e\u3059\u3002\u5165\u529b\u5024\u306e\u6b63\u5f53\u6027\u306f\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u4f8b\u5916\u30cf\u30f3\u30c9\u30e9\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\uff08\u30a8\u30e9\u30fc\u3092\u51fa\u529b\u3059\u308b\u3060\u3051\u3067\u3059\u304c\uff09\u3002\n\n```fsharp\ntry extract 0 [||] with e -> printfn \"%A\" e\n```\n\n## \u52d5\u4f5c\u7d50\u679c\n\n\u5165\u529b\u5024\u304c\u5727\u7e2e\u3055\u308c\u3066\u3044\u3066\u5c0f\u3055\u3044\u305f\u3081\u3001\u5727\u7e2e\u306e\u3068\u304d\u3088\u308a\u3082\u30b9\u30c6\u30c3\u30d7\u6570\u304c\u5c11\u306a\u3044\u3067\u3059\u3002`0x103`\u3068`0x106`\u3068`0x107`\u304c\u524d\u65b9\u53c2\u7167\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u70b9\u3067\u3059\u3002\n\n```text\nInput\tTable\tOutput\tDesc.\n-----\t-----\t------\t-----\n0x100\t\t\tClear\n0x028\t\t28\n0x0ff\t\tff\n\t0x102\t\t28 ff\n0x103\t\tff ff\n\t0x103\t\tff ff\n0x102\t\t28 ff\n\t0x104\t\tff ff 28\n0x103\t\tff ff\n\t0x105\t\t28 ff ff\n0x106\t\tff ff ff\n\t0x106\t\tff ff ff\n0x107\t\tff ff ff ff\n\t0x107\t\tff ff ff ff\n0x101\t\t\tEnd\n```\n\n# \u30d3\u30c3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u306e\u5c55\u958b\n\nGIF\u304b\u3089\u30c7\u30fc\u30bf\u3092\u5c55\u958b\u3059\u308b\u306b\u306f\u30d3\u30c3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u30b3\u30fc\u30c9\u5217\u3092\u53d6\u308a\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u5b8c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\n* [LZWDecode.fsx](https://bitbucket.org/snippets/7shi/nBkj9)\n\n## \u8aad\u307f\u8fbc\u307f\n\n\u30d0\u30a4\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u6307\u5b9a\u3057\u305f\u30d3\u30c3\u30c8\u305a\u3064\u8aad\u307f\u8fbc\u3080\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u306f255\u30d0\u30a4\u30c8\u3054\u3068\u306e\u30d6\u30ed\u30c3\u30af\u306b\u5206\u5272\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba\u3092\u5148\u982d\u30d0\u30a4\u30c8\u304b\u3089\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\u305d\u306e\u5f8c\u306e\u30c7\u30fc\u30bf\u306f\u30d3\u30c3\u30c8\u5358\u4f4d\u3067\u306e\u30ea\u30c8\u30eb\u30a8\u30f3\u30c7\u30a3\u30a2\u30f3\u306e\u305f\u3081\u4e0b\u4f4d\u304b\u3089\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\u30d6\u30ed\u30c3\u30af\u306e\u7d42\u308f\u308a\u307e\u3067\u5230\u9054\u3059\u308c\u3070\u6b21\u306e\u30d6\u30ed\u30c3\u30af\u306e\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba\u304c0\u3067\u3042\u308c\u3070\u7d42\u4e86\u3057\u307e\u3059\u3002\n\n\u203b \u30d3\u30c3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u4e2d\u306b\u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba\u304c\u5272\u308a\u8fbc\u3080\u5f62\u3068\u306a\u308a\u307e\u3059\u3002\n\n```fsharp\nopen System.IO\n\ntype BitReader(s:Stream) =\n    let mutable i, max = 0, -1\n    let next() =\n        if max = 0 then -1 else\n        if i >= max then\n            i <- 0\n            max <- s.ReadByte()\n        if max = 0 then -1 else\n        i <- i + 1\n        s.ReadByte()\n    let mutable cur = next()\n    let mutable b = 0\n    let mutable v = -1\n    member x.Value = v\n    member x.Read n =\n        let rec f v sh n =\n            if cur < 0 then -1 else\n            let d = cur >>> b\n            let left = 8 - b\n            if n < left then\n                b <- b + n\n                v ||| ((d &&& ((1 <<< n) - 1)) <<< sh)\n            else\n                b <- 0\n                cur <- next()\n                let v = v ||| (d <<< sh)\n                if n = left then v else f v (sh + left) (n - left)\n        v <- f 0 0 n\n        v >= 0\n```\n\n### \u30c6\u30b9\u30c8\n\nWikipedia\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u304b\u3089\u30b3\u30fc\u30c9\u5217\u3092\u53d6\u308a\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\u30b3\u30fc\u30c9\u9577\u306f\u3059\u3079\u30669bit\u3060\u3068\u5206\u304b\u3063\u3066\u3044\u308b\u305f\u3081\u6c7a\u3081\u6253\u3061\u3057\u307e\u3059\u3002\n\n```fsharp\nlet src1 = [|\n    // block size\n    11uy\n    // data bytes\n    0x00uy; 0x51uy; 0xFCuy; 0x1Buy; 0x28uy; 0x70uy; 0xA0uy; 0xC1uy\n    0x83uy; 0x01uy; 0x01uy\n    // Block Terminator\n    0uy |]\n\nseq {\n    use ms = new MemoryStream(src1)\n    let br = BitReader(ms)\n    while br.Read(9) do yield br.Value }\n|> Seq.map (sprintf \"%03x\")\n|> String.concat \" \"\n|> printfn \"%s\"\n```\n```text:\u5b9f\u884c\u7d50\u679c\n100 028 0ff 103 102 103 106 107 101\n```\n\n\u3046\u307e\u304f\u53d6\u308a\u51fa\u305b\u3066\u3044\u307e\u3059\u3002\n\n## \u5c55\u958b\n\n\u30d3\u30c3\u30c8\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u5c55\u958b\u3059\u308b\u969b\u306b\u30b3\u30fc\u30c9\u9577\u306f\u53ef\u5909\u3067\u3059\u3002\u51fa\u73fe\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u30b3\u30fc\u30c9\u3092\u3059\u3079\u3066\u683c\u7d0d\u3067\u304d\u308b\u3060\u3051\u306e\u30b5\u30a4\u30ba\u3068\u306a\u308b\u305f\u3081\u3001\u6700\u5927\u5024\u306f\u4eca\u304b\u3089\u8ffd\u52a0\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u30c6\u30fc\u30d6\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u305712\u30d3\u30c3\u30c8\u306e\u5236\u9650\u304c\u3042\u308b\u305f\u3081\u3001\u6b63\u5e38\u306a\u30c7\u30fc\u30bf\u3067\u3042\u308c\u3070\u5236\u9650\u3092\u8d85\u3048\u305f\u6240\u3067clr\u304c\u6765\u3066\u30c6\u30fc\u30d6\u30eb\u3092\u30af\u30ea\u30a2\u3057\u307e\u3059\u3002\n\n\u5148\u306b\u5b9f\u88c5\u3057\u305f`extract`\u3092\u30d9\u30fc\u30b9\u306b\u3001`BitReader`\u3092\u4f7f\u3046\u3088\u3046\u306b\u624b\u76f4\u3057\u3057\u305f`decode`\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u5909\u3048\u306a\u3044\u305f\u3081\u3001\u52d5\u4f5c\u3092\u4fe1\u7528\u3057\u3066\u30ed\u30b0\u51fa\u529b\u306f\u9664\u53bb\u3057\u307e\u3059\u3002\n\n```fsharp\nlet decode (br:BitReader) (data:List<byte>) lzwMin =\n    let table = List<byte[]>()\n    let clr = 1 <<< lzwMin\n    let rec f blen next prev =\n        let i = clr + 2 + table.Count\n        if i >= next then f (blen + 1) (next <<< 1) prev\n        elif not <| br.Read (min 12 blen) then () else\n        let d = br.Value\n        if d = clr then\n            table.Clear()\n            f 1 2 [||]\n        elif d = clr + 1 then () else\n        let vs =\n            if d < clr then [|byte d|] else\n                let n = d - clr - 2\n                if n < table.Count then table.[n] else\n                    Array.append prev [|prev.[0]|]\n        data.AddRange vs\n        if prev <> [||] then\n            table.Add(Array.append prev [|vs.[0]|])\n        f blen next vs\n    f 1 2 [||]\n```\n\n### \u30c6\u30b9\u30c8\n\n\u30c6\u30b9\u30c8\u7528\u306b\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u3068\u6700\u77ed\u30d3\u30c3\u30c8\u9577\u3068\u5727\u7e2e\u30c7\u30fc\u30bf\u3092\u6e21\u3057\u3066\u5c55\u958b\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u95a2\u6570\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```fsharp\nlet test w h lzwMin f (src:byte[]) =\n    use ms = new MemoryStream(src)\n    let data = List<byte>()\n    decode (BitReader(ms)) data lzwMin\n    printfn \"%d * %d = %d (%d)\" w h (w * h) data.Count\n    let mutable en = data.GetEnumerator()\n    for y = 0 to h - 1 do\n        for x = 0 to w - 1 do\n            if en.MoveNext() then\n                printf \"%s\" (f en.Current)\n        printfn \"\"\n```\n\nWikipedia\u306e\u30c7\u30fc\u30bf\u3092\u5c55\u958b\u3059\u308b\u3068\u3001\u3046\u307e\u304f\u753b\u50cf\u306e\u5f62\u304c\u53d6\u308a\u51fa\u305b\u307e\u3057\u305f\u3002\n\n```fsharp\ntest 3 5 8 (sprintf \"%02x \") src1\n```\n```text:\u5b9f\u884c\u7d50\u679c\n3 * 5 = 15 (15)\n28 ff ff \nff 28 ff \nff ff ff \nff ff ff \nff ff ff \n```\n\n[GIF\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u8aad\u3093\u3067\u307f\u305f](http://qiita.com/7shi/items/33117c6c369d37dc6cdd)\u3067\u4f7f\u7528\u3057\u305f\u753b\u50cf\u306e\u5727\u7e2e\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u307f\u307e\u3059\u3002\n\n```fsharp\ntest 16 16 2 (fun b -> string \"#* ?\".[int b]) [|\n    0x2Buy  // block size\n            // data bytes\n    0x94uy; 0x8Fuy; 0xA9uy; 0x16uy; 0xB0uy; 0x0Buy; 0x42uy; 0x78uy\n    0xC8uy; 0x09uy; 0x4Buy; 0xB1uy; 0xA4uy; 0xFBuy; 0x60uy; 0xF5uy\n    0x5Duy; 0x4Fuy; 0x28uy; 0x74uy; 0x47uy; 0x03uy; 0xA4uy; 0x91uy\n    0x07uy; 0x22uy; 0x92uy; 0x14uy; 0xBDuy; 0xE5uy; 0xB4uy; 0x98uy\n    0x62uy; 0x56uy; 0x51uy; 0xF7uy; 0xACuy; 0xDBuy; 0xFAuy; 0xFEuy\n    0x43uy; 0x14uy; 0x00uy\n    0uy |]  // Block Terminator\n```\n```text:\u5b9f\u884c\u7d50\u679c\n16 * 16 = 256 (256)\n                \n       *#       \n       #**      \n      #  #      \n     #   **     \n    **    #     \n    #     #     \n   #      **    \n *#####*   #    \n  #    ****#****\n **        **   \n #          #   \n #          #   \n**          **  \n             #  \n                \n```\n\n\u5143\u753b\u50cf ![gif1.gif](https://qiita-image-store.s3.amazonaws.com/0/32057/d6692680-9082-986f-a486-a8e4c2156ce0.gif)\n\n\u304d\u3061\u3093\u3068\u5f62\u304c\u53d6\u308a\u51fa\u305b\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n# GIF\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306e\u5c55\u958b\n\n\u30d8\u30c3\u30c0\u3084\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u3081\u3070GIF\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u753b\u50cf\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\n\u5b8c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\n* [GIFDecode.fsx](https://bitbucket.org/snippets/7shi/M7Eer)\n\n## \u30d8\u30c3\u30c0\n\nBinaryReader \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```fsharp\nlet decodeGIF (s:Stream) =\n    use br = new BinaryReader(s, Encoding.ASCII)\n```\n\n\u30b7\u30b0\u30cd\u30c1\u30e3\u3068\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```fsharp:\u30c7\u30fc\u30bf\n    // 17. Header.\n    'G'B; 'I'B; 'F'B  // Signature\n    '8'B; '7'B; 'a'B  // Version\n```\n```fsharp:\u8aad\u307f\u8fbc\u307f\n    match String(br.ReadChars 6) with\n    | \"GIF87a\" | \"GIF89a\" -> ()\n    | _ -> failwith \"not gif file\"\n```\n\n\u30b5\u30a4\u30ba\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n```fsharp:\u30c7\u30fc\u30bf\n    // 18. Logical Screen Descriptor.\n    16uy; 0uy  // Logical Screen Width\n    16uy; 0uy  // Logical Screen Height\n```\n```fsharp:\u8aad\u307f\u8fbc\u307f\n    let width  = br.ReadUInt16() |> int\n    let height = br.ReadUInt16() |> int\n```\n\n\u30d5\u30e9\u30b0\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n```fsharp:\u30c7\u30fc\u30bf\n    0xA1uy     // <Packed Fields>\n               //   Global Color Table Flag\n               //   | Color Resolution\n               //   | |   Sort Flag\n               //   | |   | Size of Global Color Table\n               //   1 010 0 001\n```\n```fsharp:\u8aad\u307f\u8fbc\u307f\n    let b = br.ReadByte() |> int\n    let hasGCT  = (b &&& 0x80) <> 0\n    let colRes  = (b >>> 4) &&& 7\n    let sorted  = (b &&& 8) <> 0\n    let sizeGCT =  b &&& 7\n```\n\n\u3053\u306e\u8981\u9818\u3067\u30ab\u30e9\u30fc\u30d1\u30ec\u30c3\u30c8\u306a\u3069\u3082\u8aad\u307f\u8fbc\u3093\u3067\u3001\u5c55\u958b\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30c7\u30fc\u30bf\u3092RGB\u5024\u306b\u5909\u63db\u3059\u308c\u3070\u3001\u753b\u50cf\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\n## \u5b9f\u884c\u7d50\u679c\n\n\u6a19\u6e96\u753b\u50cfLenna\u3092256\u8272\u306b\u6e1b\u8272\u3057\u305fGIF\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n![Lenna.gif](https://qiita-image-store.s3.amazonaws.com/0/32057/7e5af99b-232d-196a-feae-aa3259abadbb.gif)\n\n\u3053\u306e\u8a18\u4e8b\u3067\u4f5c\u3063\u305f\u30c7\u30b3\u30fc\u30c0\u30fc\u3067\u8aad\u307f\u8fbc\u3093\u3067\u8868\u793a\u3057\u307e\u3059\u3002\n\n```fsharp\n[<EntryPoint; STAThread>] do\nlet f = new Form(Text = \"GIF\")\nlet p = new PictureBox(Dock = DockStyle.Fill,\n                       SizeMode = PictureBoxSizeMode.CenterImage)\nf.Controls.Add p\nf.Load.Add <| fun _ ->\n    use fs = new FileStream(\"Lenna.gif\", FileMode.Open)\n    let bmp = decodeGIF fs\n    f.ClientSize <- bmp.Size\n    p.Image <- bmp\nApplication.EnableVisualStyles()\nApplication.Run f\n```\n\n![Lenna.png](https://qiita-image-store.s3.amazonaws.com/0/32057/a5f29307-c95e-fd83-afee-ef4be7cab0cd.png)\n\n\u3046\u307e\u304f\u8868\u793a\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u5bfe\u5fdc\u3059\u308b\u306b\u306f\u307e\u3060\u4f5c\u696d\u304c\u5fc5\u8981\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u5b9f\u88c5\u3092\u898b\u9001\u308a\u307e\u3059\u3002\n", "tags": ["gif", "F#"]}