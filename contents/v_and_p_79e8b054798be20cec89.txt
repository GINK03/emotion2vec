{"context": "C++11\u3068\u304b14\u3068\u304b\u96e3\u3057\u3044\u3067\u3059\u3088\u306d\u3002\u3002\nEffective modern c++\u3092\u8aad\u3093\u3067\u81ea\u5206\u306a\u308a\u306b\u7406\u89e3\u3057\u305f\u3053\u3068\u3092\u30e1\u30e2\u3057\u3066\u5909\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3002\n\u76db\u5927\u306a\u30c4\u30c3\u30b3\u30df\u3092\u671f\u5f85\u3057\u3066\u3044\u307e\u3059\u3002\nc++11\u306b\u306fstd::unique_ptr, std::shared_ptr, std::weak_ptr\u3068\u304a\u307e\u3051\u3067std::auto_ptr\u304c\u3042\u308a\u307e\u3059\u3002\n\u6b74\u53f2\u7684\u306b\u898b\u305f\u3089auto_ptr\u306f\u305f\u3057\u304b03\u304f\u3089\u3044\u304b\u3089\u3042\u308a\u307e\u3059\u304c\u3001\u591a\u5206\u3082\u3046\u307b\u3068\u3093\u3069\u4f7f\u308f\u308c\u307e\u305b\u3093\u3002\n\nSmartpointer\nunique_ptr\u3092\u6240\u6709\u3067\u304d\u308b\u306e\u306f\u5ba3\u8a00\u3055\u308c\u305f\u672c\u4eba\u306e\u307f\u3067\u305d\u306e\u53c2\u7167\u304c\u306a\u304f\u306a\u308b\u3068\u7834\u58ca\u3055\u308c\u307e\u3059\u3002unique\u305f\u3093\u304cmove\u3055\u308c\u308b\u3068\u3001\u6240\u6709\u6a29\u304c\u79fb\u308a\u3082\u3068\u3082\u3068\u306esource pointer\u306fnull\u306b\u623b\u308a\u307e\u3059\u3002unique\u306b\u30b3\u30d4\u30fc\u306f\u8a31\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089\u30b3\u30d4\u30fc\u3055\u308c\u308b\u3068source\u3068\u305d\u306e\u3046\u3064\u3057\u305f\u3042\u3068\u306e\u3055\u304d\u306epointer\u306f\u540c\u3058\u3082\u306e\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308aunique\u306eowenership\u306f\u4e00\u3064\u3068\u3044\u3046\u898f\u7d04\u306b\u53cd\u3059\u308b\u304b\u3089\u3067\u3059\u3002shared_ptr\u306fsorce pointer\u3092\u8907\u6570\u306eowner\u304c\u30b7\u30a7\u30a2\u3067\u304d\u307e\u3059\u3002\u30b7\u30a7\u30a2\u30a8\u30b3\u30ce\u30df\u30fcyeah!\n\u3088\u3063\u3066\u3001unique_ptr\u306fmove\u306e\u307f\u3067\u3059\uff01\n\nFactory function\n\u3053\u3053\u3067\u30a4\u30fc\u30d6\u30a4\u30af\u30e9\u30b9\u3092\u30d9\u30fc\u30b9\u306bchild class\u306b\u30b7\u30e3\u30ef\u30fc\u30ba(Vaporean)\u304c\u3042\u308b\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u8003\u3048\u307e\u3059\u3002\n\u306a\u3093\u304b\u3001unique_ptr\u306e\u5178\u578b\u7684\u306a\u4f7f\u7528\u4f8b\u306fHierarchy\u306aobject\u3092\u4f5c\u308b\u95a2\u6570\u3060\u304b\u3089\u307f\u305f\u3044\u3067\u3059\u3002\u3053\u306e\u95a2\u6570(meetEevee)\u306fheap\u306bobject\u3092\u4f5c\u308apointer\u3092\u304b\u3048\u3057\u307e\u3059\u3002\u6761\u4ef6\u5206\u3051\u3092\u3057\u3001\u5fc5\u8981\u306atype\u306eobject\u3092\u8fd4\u3059\u3088\u3046\u306a\u95a2\u6570\u3067\u3059\u3002\ndefault\u3067\u306f\u4f55\u3082\u30ed\u30b0\u3092\u6b8b\u3055\u305a\u6d88\u3048\u3066\u3044\u304funique\u3092lambda expression\u3092\u7528\u3044\u3066\u30ed\u30b0\u3092\u6b8b\u3057\u3066\u6d88\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046c++14\u3067\u306fauto\u3068type\u5ba3\u8a00\u3059\u308b\u3060\u3051\u3067\u3044\u3044\u3067\u3059\u3002\nEevee\u306e\u30af\u30e9\u30b9\u306edestructor\u306fvirtual \u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002custom deleter\u306ftype Eevee*\u3092\u3068\u308a\u307e\u3059\u3002inherited\u306aVaporeon\u304c\u7834\u58ca\u3055\u308c\u308b\u6642\u3082\u30d9\u30fc\u30b9\u3068\u306a\u308bEevee\u306edestructor\u3092\u901a\u3058\u3066\u7834\u58ca\u3055\u308c\u308b\u304b\u3089\u3067\u3059\u3002\n\ncustomDeleter.cpp\n#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Eevee{\nprotected:\n  int level;\n  int attack;\n  int defence;\n  bool evol;\n  std::shared_ptr<string> stoneType;\npublic:\n  explicit Eevee() : level(25), attack(55), defence(50), evol(false){\n    stoneType.reset(new string(\"none\")); \n  };\n  explicit Eevee(int l, int a, int d) : level(l), attack(a), defence(d), evol(false){\n    stoneType.reset(new string(\"none\")); \n  };\n  virtual ~Eevee(){\n    std::cout << \"Your eevee died at level: \" << level << std::endl;\n  }\n  virtual void setStone(string stone) {\n    if(!evol) {\n      stoneType.reset(new string(stone));\n      bool evol = true;\n    }\n  }\n  void showStatus() {\n    std::cout << setw(3)<< level<< setw(3)<< attack << setw(3)<< defence << setw(3) << endl;\n  }\n};\nclass Vaporeon: public Eevee{\npublic:\n  explicit Vaporeon() {\n    std::cout << \"constructor called\" << std::endl;\n    stoneType.reset(new string(\"water\"));\n    evol = true;\n  };\n  explicit Vaporeon(int l, int a, int d){\n    level = l, attack = a, defence = d;\n    std::cout << \"arg constructor called\" << std::endl;\n    stoneType.reset(new string(\"water\"));\n    evol = true;\n    std::cout << setw(3)<< level<< setw(3)<< attack << setw(3)<< defence << setw(3) << endl;\n  };\n  virtual ~Vaporeon() override {\n    std::cout << \"Your vaporeon died at level: \" << level << std::endl;\n  }\n\n};\n\ntemplate<typename Ts>\nauto meetEevee(Ts&& l, Ts&& a, Ts&& d, int type)\n{\n  auto delEevee = [](Eevee* pEevee)\n    {\n      std::cout << \"delEevee called\" << std::endl;\n      pEevee->showStatus();\n      delete pEevee;\n    };\n  std::unique_ptr<Eevee, decltype(delEevee)> pEevee(nullptr, delEevee);\n  if(type == 1) {\n    pEevee.reset(new Vaporeon(std::forward<Ts>(l), std::forward<Ts>(a), std::forward<Ts>(d)));\n  }else {\n    std::cerr << \"unknown type\" << std::endl;\n  }\n  return pEevee;\n}\n\nint main(void)\n{\n  //Vaporeon(31, 89, 29);\n  meetEevee(55, 80, 49, 1);\n  //meetEevee()\n  return 0;\n}\n\n\n\nC++11\u3068\u304b14\u3068\u304b\u96e3\u3057\u3044\u3067\u3059\u3088\u306d\u3002\u3002\nEffective modern c++\u3092\u8aad\u3093\u3067\u81ea\u5206\u306a\u308a\u306b\u7406\u89e3\u3057\u305f\u3053\u3068\u3092\u30e1\u30e2\u3057\u3066\u5909\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3002\n\u76db\u5927\u306a\u30c4\u30c3\u30b3\u30df\u3092\u671f\u5f85\u3057\u3066\u3044\u307e\u3059\u3002\nc++11\u306b\u306fstd::unique_ptr, std::shared_ptr, std::weak_ptr\u3068\u304a\u307e\u3051\u3067std::auto_ptr\u304c\u3042\u308a\u307e\u3059\u3002\n\u6b74\u53f2\u7684\u306b\u898b\u305f\u3089auto_ptr\u306f\u305f\u3057\u304b03\u304f\u3089\u3044\u304b\u3089\u3042\u308a\u307e\u3059\u304c\u3001\u591a\u5206\u3082\u3046\u307b\u3068\u3093\u3069\u4f7f\u308f\u308c\u307e\u305b\u3093\u3002\n#Smartpointer\nunique_ptr\u3092\u6240\u6709\u3067\u304d\u308b\u306e\u306f\u5ba3\u8a00\u3055\u308c\u305f\u672c\u4eba\u306e\u307f\u3067\u305d\u306e\u53c2\u7167\u304c\u306a\u304f\u306a\u308b\u3068\u7834\u58ca\u3055\u308c\u307e\u3059\u3002unique\u305f\u3093\u304cmove\u3055\u308c\u308b\u3068\u3001\u6240\u6709\u6a29\u304c\u79fb\u308a\u3082\u3068\u3082\u3068\u306esource pointer\u306fnull\u306b\u623b\u308a\u307e\u3059\u3002unique\u306b\u30b3\u30d4\u30fc\u306f\u8a31\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\u306a\u305c\u306a\u3089\u30b3\u30d4\u30fc\u3055\u308c\u308b\u3068source\u3068\u305d\u306e\u3046\u3064\u3057\u305f\u3042\u3068\u306e\u3055\u304d\u306epointer\u306f\u540c\u3058\u3082\u306e\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u306a\u308aunique\u306eowenership\u306f\u4e00\u3064\u3068\u3044\u3046\u898f\u7d04\u306b\u53cd\u3059\u308b\u304b\u3089\u3067\u3059\u3002shared_ptr\u306fsorce pointer\u3092\u8907\u6570\u306eowner\u304c\u30b7\u30a7\u30a2\u3067\u304d\u307e\u3059\u3002\u30b7\u30a7\u30a2\u30a8\u30b3\u30ce\u30df\u30fcyeah!\n\u3088\u3063\u3066\u3001unique_ptr\u306fmove\u306e\u307f\u3067\u3059\uff01\n#Factory function\n\u3053\u3053\u3067\u30a4\u30fc\u30d6\u30a4\u30af\u30e9\u30b9\u3092\u30d9\u30fc\u30b9\u306bchild class\u306b\u30b7\u30e3\u30ef\u30fc\u30ba(Vaporean)\u304c\u3042\u308b\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u8003\u3048\u307e\u3059\u3002\n\u306a\u3093\u304b\u3001unique_ptr\u306e\u5178\u578b\u7684\u306a\u4f7f\u7528\u4f8b\u306fHierarchy\u306aobject\u3092\u4f5c\u308b\u95a2\u6570\u3060\u304b\u3089\u307f\u305f\u3044\u3067\u3059\u3002\u3053\u306e\u95a2\u6570(meetEevee)\u306fheap\u306bobject\u3092\u4f5c\u308apointer\u3092\u304b\u3048\u3057\u307e\u3059\u3002\u6761\u4ef6\u5206\u3051\u3092\u3057\u3001\u5fc5\u8981\u306atype\u306eobject\u3092\u8fd4\u3059\u3088\u3046\u306a\u95a2\u6570\u3067\u3059\u3002\n\ndefault\u3067\u306f\u4f55\u3082\u30ed\u30b0\u3092\u6b8b\u3055\u305a\u6d88\u3048\u3066\u3044\u304funique\u3092lambda expression\u3092\u7528\u3044\u3066\u30ed\u30b0\u3092\u6b8b\u3057\u3066\u6d88\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046c++14\u3067\u306fauto\u3068type\u5ba3\u8a00\u3059\u308b\u3060\u3051\u3067\u3044\u3044\u3067\u3059\u3002\nEevee\u306e\u30af\u30e9\u30b9\u306edestructor\u306fvirtual \u3067\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002custom deleter\u306ftype Eevee*\u3092\u3068\u308a\u307e\u3059\u3002inherited\u306aVaporeon\u304c\u7834\u58ca\u3055\u308c\u308b\u6642\u3082\u30d9\u30fc\u30b9\u3068\u306a\u308bEevee\u306edestructor\u3092\u901a\u3058\u3066\u7834\u58ca\u3055\u308c\u308b\u304b\u3089\u3067\u3059\u3002\n\n\n```cpp:customDeleter.cpp\n#include <iostream>\n#include <iomanip>\nusing namespace std;\n\nclass Eevee{\nprotected:\n  int level;\n  int attack;\n  int defence;\n  bool evol;\n  std::shared_ptr<string> stoneType;\npublic:\n  explicit Eevee() : level(25), attack(55), defence(50), evol(false){\n    stoneType.reset(new string(\"none\")); \n  };\n  explicit Eevee(int l, int a, int d) : level(l), attack(a), defence(d), evol(false){\n    stoneType.reset(new string(\"none\")); \n  };\n  virtual ~Eevee(){\n    std::cout << \"Your eevee died at level: \" << level << std::endl;\n  }\n  virtual void setStone(string stone) {\n    if(!evol) {\n      stoneType.reset(new string(stone));\n      bool evol = true;\n    }\n  }\n  void showStatus() {\n    std::cout << setw(3)<< level<< setw(3)<< attack << setw(3)<< defence << setw(3) << endl;\n  }\n};\nclass Vaporeon: public Eevee{\npublic:\n  explicit Vaporeon() {\n    std::cout << \"constructor called\" << std::endl;\n    stoneType.reset(new string(\"water\"));\n    evol = true;\n  };\n  explicit Vaporeon(int l, int a, int d){\n    level = l, attack = a, defence = d;\n    std::cout << \"arg constructor called\" << std::endl;\n    stoneType.reset(new string(\"water\"));\n    evol = true;\n    std::cout << setw(3)<< level<< setw(3)<< attack << setw(3)<< defence << setw(3) << endl;\n  };\n  virtual ~Vaporeon() override {\n    std::cout << \"Your vaporeon died at level: \" << level << std::endl;\n  }\n\n};\n  \ntemplate<typename Ts>\nauto meetEevee(Ts&& l, Ts&& a, Ts&& d, int type)\n{\n  auto delEevee = [](Eevee* pEevee)\n    {\n      std::cout << \"delEevee called\" << std::endl;\n      pEevee->showStatus();\n      delete pEevee;\n    };\n  std::unique_ptr<Eevee, decltype(delEevee)> pEevee(nullptr, delEevee);\n  if(type == 1) {\n    pEevee.reset(new Vaporeon(std::forward<Ts>(l), std::forward<Ts>(a), std::forward<Ts>(d)));\n  }else {\n    std::cerr << \"unknown type\" << std::endl;\n  }\n  return pEevee;\n}\n\nint main(void)\n{\n  //Vaporeon(31, 89, 29);\n  meetEevee(55, 80, 49, 1);\n  //meetEevee()\n  return 0;\n}\n```\n\n\n", "tags": ["c++11,", "C++14"]}