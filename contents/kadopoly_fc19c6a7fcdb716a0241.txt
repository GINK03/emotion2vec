{"context": " More than 1 year has passed since last update.\n\nUnity \u3068\u306f\uff1f\n\u300cUnity \u3063\u3066\u30b2\u30fc\u30e0\u306e\u3084\u3064\u304b\u306a\uff1f \u3067\u3082 C\u8a00\u8a9e\uff1f\u300d\u3068\u304a\u601d\u3044\u3067\u3057\u3087\u3046\u304c\u3001\u3053\u3053\u3067\u306e Unity \u306fC \u8a00\u8a9e\u306e\u305f\u3081\u306e\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u307b\u3046\u3067\u3059\u3002\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u66f8\u3044\u3066\u3001\u8d64\u8272\u3092\u7dd1\u8272\u306b\u3057\u3066\u3044\u304f\u3084\u3064\u3067\u3059\u306d\u3002\n\u5c0f\u3055\u304f\u3066\u624b\u8efd\u3067\u66f8\u304d\u3084\u3059\u3044\u306e\u3067\u3001\u7c21\u5358\u306b\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3082\u5fc5\u8981\u306a\u3082\u306e\u304c\u305d\u308d\u3063\u3066\u3044\u307e\u3059 ( \u306e\u3061\u307b\u3069\u3054\u8aac\u660e )\u3002\n\u4ee5\u4e0b\u3067\u306f Unity \u306e\u5c0e\u5165\u3068\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u4f5c\u6210\u3001\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u306b\u3064\u3044\u3066\u30e1\u30e2\u3057\u307e\u3059\u3002\n\n\u5c0e\u5165\n\nUnity \u3092\u5165\u624b\u3057\u307e\u3059: https://github.com/ThrowTheSwitch/Unity\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e lib \u7b49\u3001\u597d\u304d\u306a\u5834\u6240\u306b\u7f6e\u304d\u307e\u3059\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u66f8\u304d\u307e\u3059\n\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u3092\u66f8\u304d\u307e\u3059\n\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7a7a\u5b9f\u88c5\u3057\u307e\u3059\n\u30d3\u30eb\u30c9\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\n\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u771f\u3063\u8d64\u306b\u3057\u307e\u3059 (\u306a\u308a\u307e\u305b\u3093\u304c\u2026\u2026)\n\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4fee\u6b63\u3057\u307e\u3059\n\u7dd1\u306b\u3057\u307e\u3059\n\n\n\u8a66\u3059\n\u304a\u8a66\u3057\u306b\u9069\u5f53\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u3063\u3066\u3001Unity \u3067\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u6700\u8fd1 2 \u306e n \u4e57\u3092\u3088\u304f\u6c42\u3081\u308b\u306e\u3067 2\u3000\u306e n \u4e57\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308d\u3046 ---( \u6a5f\u80fdA: my_math )\n\u9854\u6587\u5b57\u3067\u3042\u3044\u3055\u3064\u5b9a\u578b\u6587\u3092\u51fa\u3059\u3084\u3064\u3092\u4f5c\u308d\u3046 ---( \u6a5f\u80fdB: my_string )\n\n\u3053\u308c\u3089\u306e\u6a5f\u80fd\u306b\u5bfe\u3057\u3066\u3001\u6b21\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u304b\u9069\u5f53\u306a\u7bc4\u56f2\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u307e\u3059:\n\n\n\u6a5f\u80fdA: my_math\n\n\n0 \u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306f\u5e38\u306b\u5b9a\u6570 1 \u3092\u8fd4\u305d\u3046\n\u8ca0\u306e\u6570\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306f\u308f\u304b\u3093\u306a\u3044\u306e\u3067\u3068\u306b\u304b\u304f -1 \u3092\u8fd4\u305d\u3046\n\n10 \u4ee5\u4e0a\u306f\u30e4\u30d0\u305d\u3046\u306a\u306e\u3067 -100 \u3092\u8fd4\u305d\u3046\n\n\n\n\u6a5f\u80fdB: my_string\n\n\u3042\u3044\u3055\u3064\u306f 3 \u7a2e\u985e\u7528\u610f\n0 \u306e\u3068\u304d\u306f \"(^O^) < \u3053\u3093\u306b\u3061\u306f\"\n\n1 \u306e\u3068\u304d\u306f \"(T_T) < \u3055\u3088\u3046\u306a\u3089\"\n\n\u305d\u308c\u4ee5\u5916\u306f\u3059\u3079\u3066 \"(\u30fbv\u30fb) < \u3054\u304d\u3052\u3093\u3088\u3046\"\n\n\n\n\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u4f5c\u308b\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306f\u30c6\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u6210\u3057\u3001\u305d\u306e\u4e2d\u3067\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u51e6\u7406\u3092\u5b9a\u7fa9\u3057\u3066\u307e\u3068\u3081\u3066\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\n\u5404\u30c6\u30b9\u30c8\u306f TEST_GROUP( group ) \u3067\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u308a\u307e\u3059\u3002group \u306f\u30c6\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u540d\u3067\u3001\u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3059\u308b\u969b\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\nTEST_SETUP( group ) \u30de\u30af\u30ed\u3068 TEST_TEAR_DOWN( group ) \u30de\u30af\u30ed\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u5404\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u958b\u59cb\u3068\u7d42\u4e86\u6642\u306b\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u304c\u3001\u4eca\u56de\u306f\u7a7a\u3067\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\nTEST( group, case ) \u3067 group \u306b\u5c5e\u3057\u305f\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u6a5f\u80fdA \u306e\u30c6\u30b9\u30c8\u3067\u3059\u3002\u3053\u3053\u3067\u306f\u5358\u7d14\u306a\u6574\u6570\u5024\u306e\u4e00\u81f4\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059:\n\nmy_math_test.c\n#include <unity.h>\n#include <unity_fixture.h>\n\n#include \"my_math.h\"\n\n\nTEST_GROUP( MyMath );\n\n\nTEST_SETUP( MyMath )\n{}\n\n\nTEST_TEAR_DOWN( MyMath )\n{}\n\n\n/**\n * 0 \u306e\u3068\u304d\u306f\u5e38\u306b 1 \u3092\u8fd4\u3057\u307e\u3059\n * 0 \u3092\u4e0e\u3048\u3066 1 \u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\n */\nTEST( MyMath, my_math_should_return_1_where_exponent_is_0 )\n{\n    TEST_ASSERT_EQUAL( 1, my_math( 0 ) );\n}\n\n/**\n * \u8ca0\u6570\u3067\u306f -1 \u3092\u8fd4\u3057\u307e\u3059\n * \u9069\u5f53\u306a\u8ca0\u6570\u3092\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3059\n */\nTEST( MyMath, my_math_should_return_minus_1_where_exponent_is_negative )\n{\n    TEST_ASSERT_EQUAL( -1, my_math( -1 ) );\n    TEST_ASSERT_EQUAL( -1, my_math( -2 ) );\n    TEST_ASSERT_EQUAL( -1, my_math( -3 ) );\n    TEST_ASSERT_EQUAL( -1, my_math( -4 ) );\n    TEST_ASSERT_EQUAL( -1, my_math( -5 ) );\n    TEST_ASSERT_EQUAL( -1, my_math( -5928 ) );\n}\n\n/**\n * 10 \u4ee5\u964d\u3067\u306f -100 \u3092\u8fd4\u3057\u307e\u3059\n * \u9069\u5f53\u306a\u5927\u304d\u3044\u6570\u3092\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3059\n */\nTEST( MyMath, my_math_should_return_minus_100_where_exponent_is_larger_than_10 )\n{\n    TEST_ASSERT_EQUAL(  1024, my_math( 10 ) );\n    TEST_ASSERT_EQUAL( -100,  my_math( 11 ) );\n    TEST_ASSERT_EQUAL( -100,  my_math( 15 ) );\n    TEST_ASSERT_EQUAL( -100,  my_math( 400 ) );\n    TEST_ASSERT_EQUAL( -100,  my_math( 59284 ) );\n    TEST_ASSERT_EQUAL( -100,  my_math( 213007 ) );\n}\n\n/**\n * 1 \u301c 10 \u306e\u7bc4\u56f2\u3067\u306f 2^n \u3092\u8fd4\u3057\u307e\u3059\n * \u3059\u3079\u3066\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3059\n */\nTEST( MyMath, my_math_should_return_powered_2_otherwise )\n{\n    TEST_ASSERT_EQUAL( 2,    my_math( 1 ) );\n    TEST_ASSERT_EQUAL( 4,    my_math( 2 ) );\n    TEST_ASSERT_EQUAL( 8,    my_math( 3 ) );\n    TEST_ASSERT_EQUAL( 16,   my_math( 4 ) );\n    TEST_ASSERT_EQUAL( 32,   my_math( 5 ) );\n    TEST_ASSERT_EQUAL( 64,   my_math( 6 ) );\n    TEST_ASSERT_EQUAL( 128,  my_math( 7 ) );\n    TEST_ASSERT_EQUAL( 256,  my_math( 8 ) );\n    TEST_ASSERT_EQUAL( 512,  my_math( 9 ) );\n    TEST_ASSERT_EQUAL( 1024, my_math( 10 ) );\n}\n\n\n\u6b21\u306b\u6a5f\u80fdB \u306e\u30c6\u30b9\u30c8\u3067\u3059\u3002\u3053\u3053\u3067\u306f\u6587\u5b57\u5217\u306e\u51e6\u7406\u306a\u306e\u3067\u3001\u6587\u5b57\u5217\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059:\n\nmy_string.c\n#include <unity.h>\n#include <unity_fixture.h>\n\n#include \"my_string.h\"\n\n\nTEST_GROUP( MyString );\n\n\n/**\n * 0 \u306e\u3068\u304d\u306f \u3053\u3093\u306b\u3061\u306f \u306e\u5b9a\u578b\u6587\u3092\u66f8\u304d\u8fbc\u3080\n * \u4e88\u60f3\u3055\u308c\u308b\u6587\u5b57\u5217\u3067\u3042\u308b\u3053\u3068\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\n */\nTEST( MyString, my_string_should_return_hello_where_0_is_given )\n{\n    char buffer[256] = {};\n\n    my_string( 0, buffer );\n    TEST_ASSERT_EQUAL_STRING( \"(^O^) < \u3053\u3093\u306b\u3061\u306f\", buffer );\n}\n\n/**\n * 1 \u306e\u3068\u304d\u306f \u3055\u3088\u3046\u306a\u3089 \u306e\u5b9a\u578b\u6587\u3092\u66f8\u304d\u8fbc\u3080\n * \u4e88\u60f3\u3055\u308c\u308b\u6587\u5b57\u5217\u3067\u3042\u308b\u3053\u3068\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\n */\nTEST( MyString, my_string_should_return_goodbye_where_1_is_given )\n{\n    char buffer[256] = {};\n\n    my_string( 1, buffer );\n    TEST_ASSERT_EQUAL_STRING( \"(T_T) < \u3055\u3088\u3046\u306a\u3089\", buffer );\n}\n\n/**\n * \u305d\u308c\u4ee5\u5916\u306f \u3054\u304d\u3052\u3093\u3088\u3046 \u306e\u5b9a\u578b\u6587\u3092\u66f8\u304d\u8fbc\u3080\n * \u4e88\u60f3\u3055\u308c\u308b\u6587\u5b57\u5217\u3067\u3042\u308b\u3053\u3068\u3092\u9069\u5f53\u306a\u7bc4\u56f2\u3067\u30c6\u30b9\u30c8\u3057\u307e\u3059\n */\nTEST( MyString, my_string_should_return_greeting_otherwise )\n{\n    char buffer[256] = {};\n\n    my_string( 2, buffer );\n    TEST_ASSERT_EQUAL_STRING( \"(\u30fbv\u30fb) < \u3054\u304d\u3052\u3093\u3088\u3046\", buffer );\n\n    my_string( 10, buffer );\n    TEST_ASSERT_EQUAL_STRING( \"(\u30fbv\u30fb) < \u3054\u304d\u3052\u3093\u3088\u3046\", buffer );\n\n    my_string( -50, buffer );\n    TEST_ASSERT_EQUAL_STRING( \"(\u30fbv\u30fb) < \u3054\u304d\u3052\u3093\u3088\u3046\", buffer );\n\n    my_string( 1000, buffer );\n    TEST_ASSERT_EQUAL_STRING( \"(\u30fbv\u30fb) < \u3054\u304d\u3052\u3093\u3088\u3046\", buffer );\n}\n\n\n\n\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u3092\u4f5c\u308b\n\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u305f\u5f8c\u306f\u3001\u624b\u52d5\u3067\u5404\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u3068\u3059\u3079\u3066\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30e9\u30f3\u30ca\u30fc\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u81ea\u52d5\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u306e\u3067 \u3082\u306e\u3059\u3054\u3044\u5fd8\u308c\u3084\u3059\u3044 \u3067\u3059\u3002\n\u305f\u3060\u3057\u3001Unity \u306b\u6dfb\u4ed8\u3055\u308c\u3066\u3044\u308b examples/ \u30d5\u30a9\u30eb\u30c0\u30fc\u4ee5\u4e0b\u306e example_1 \u3068 example_3 \u3067\u306f ruby \u3067\u81ea\u52d5\u3067\u30e9\u30f3\u30ca\u30fc\u3092\u4f5c\u6210\u3059\u308b\u3084\u308a\u65b9\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u6539\u5909\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059 ( \u3053\u3053\u3067\u306f\u8aac\u660e\u306f\u7701\u304d\u307e\u3059 )\u3002\n\u5404\u30c6\u30b9\u30c8\u306b\u95a2\u3057\u3066\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u3092\u4f5c\u308a\u307e\u3059:\n\nmy_math_test_runner.c\n#include <unity.h>\n#include <unity_fixture.h>\n\nTEST_GROUP_RUNNER( MyMath )\n{\n  RUN_TEST_CASE( MyMath, my_math_should_return_1_where_exponent_is_0 );\n  RUN_TEST_CASE( MyMath, my_math_should_return_minus_1_where_exponent_is_negative );\n  RUN_TEST_CASE( MyMath, my_math_should_return_minus_100_where_exponent_is_larger_than_10 );\n  RUN_TEST_CASE( MyMath, my_math_should_return_powered_2_otherwise );\n}\n\n\n\nmy_string_test_runner.c\n#include <unity.h>\n#include <unity_fixture.h>\n\nTEST_GROUP_RUNNER( MyString )\n{\n  RUN_TEST_CASE( MyString, my_string_should_return_hello_where_0_is_given );\n  RUN_TEST_CASE( MyString, my_string_should_return_goodbye_where_1_is_given );\n  RUN_TEST_CASE( MyString, my_string_should_return_greeting_otherwise );\n}\n\n\n\u3059\u3079\u3066\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30e9\u30f3\u30ca\u30fc\u3092\u4f5c\u308a\u307e\u3059:\n\nall_tests.c\n#include <unity_fixture.h>\n\nstatic void RunAllTests(void)\n{\n  RUN_TEST_GROUP( MyMath );\n  RUN_TEST_GROUP( MyString );\n}\n\nint main( int argc, char const **argv )\n{\n  return UnityMain( argc, argv, RunAllTests );\n}\n\n\n\n\u69cb\u6210\n\u4eca\u56de\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3053\u3093\u306a\u611f\u3058\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u69cb\u6210\u306b\u3057\u307e\u3059\u3002:\n\nproject\nunity_test/\n \u2502\n \u251c lib\n \u2502  \u2514 unity\n \u2502     \u2514 ( \u3082\u308d\u3082\u308d\u306e\u30d5\u30a1\u30a4\u30eb\u2026\u2026 )\n \u2502\n \u251c include: \u30e2\u30b8\u30e5\u30fc\u30eb \u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\n \u2502  \u251c my_math.h\n \u2502  \u2514 my_string.h\n \u2502\n \u251c src: \u30e2\u30b8\u30e5\u30fc\u30eb \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\n \u2502  \u251c my_math.c\n \u2502  \u2514 my_string.c\n \u2502\n \u251c test: \u30c6\u30b9\u30c8\u95a2\u9023\n \u2502  \u251c testcases: \u5404\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\n \u2502  \u2502  \u251c my_math_test.c\n \u2502  \u2502  \u2514 my_string_test.c\n \u2502  \u2502  \n \u2502  \u2514 runner: \u5404\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30e9\u30f3\u30ca\u30fc\n \u2502     \u251c my_math_test_runner.c\n \u2502     \u251c my_string_test_runner.c\n \u2502     \u2514 all_tests.c\n \u2502\n \u2514 CMakeLists.txt  \n\n\n\u3082\u3061\u308d\u3093\u3001\u3053\u308c\u306f\u4e00\u4f8b\u3067\u3059\u3002\u69cb\u6210\u306b\u6307\u5b9a\u304c\u3042\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u3069\u306e\u3088\u3046\u306a\u304b\u305f\u3061\u3067\u3042\u3063\u3066\u3082\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30d3\u30eb\u30c9\u3055\u3048\u3067\u304d\u308c\u3070 OK \u3067\u3059\u3002\nCMakeLists.txt \u306f\u5404\u30d5\u30a9\u30eb\u30c0\u30fc\u306b\u5206\u5272\u3057\u3066\u914d\u7f6e\u3059\u308b\u307b\u3046\u304c\u597d\u307e\u3057\u3044\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u7c21\u5358\u306b\u30eb\u30fc\u30c8\u306b\u3066\u307e\u3068\u3081\u3066\u6307\u5b9a\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nCMakeLists.txt\nUnity \u306e examples/ \u30d5\u30a9\u30eb\u30c0 \u306b\u306f Makefile \u304c\u5165\u3063\u3066\u3044\u3066\u3001\u3053\u308c\u3092\u30de\u30cd\u3059\u308c\u3070\u30d3\u30eb\u30c9\u304c\u3089\u304f\u3061\u3093\u3067\u3059\u3002\u304c\u3001 CMake \u306b\u3066\u30d3\u30eb\u30c9\u3057\u305f\u3044\u306e\u3067\u3001\u30de\u30cd\u3057\u306a\u304c\u3089\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\u7279\u306b CMake \u306e\u6307\u5b9a\u304c\u3042\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u5b8c\u5168\u306b\u8da3\u5473\u3067\u3059\u3002\n\nCMakeLists.txt\ncmake_minimum_required( VERSION 3.2 )\nproject( unity_test )\n\nset( UNITY_ROOT lib/unity )\n\ninclude_directories( ${UNITY_ROOT}/src )\ninclude_directories( ${UNITY_ROOT}/extras/fixture/src )\ninclude_directories( include/ )\nlink_libraries( m )\n\nset(\n    UNITY_FILES\n\n        ${UNITY_ROOT}/src/unity.c\n        ${UNITY_ROOT}/extras/fixture/src/unity_fixture.c\n)\n\nset(\n    TEST_FILES\n\n        test/testcases/my_math_test.c\n        test/testcases/my_string_test.c\n)\n\nset(\n    SOURCE_FILES\n\n        src/my_math.c\n        src/my_string.c\n)\n\nset(\n    TEST_RUNNER_FILES\n\n        test/runner/my_math_test_runner.c\n        test/runner/my_string_test_runner.c\n        test/runner/all_tests.c\n)\n\nadd_executable( unity_test ${SOURCE_FILES} ${TEST_FILES} ${TEST_RUNNER_FILES} ${UNITY_FILES} )\n\n\nTEST_FILES \u306b\u306f \u4eca\u56de\u8ffd\u52a0\u3057\u305f\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u3001TEST_RUNNER_FILES \u306b\u306f\u5404\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30e9\u30f3\u30ca\u30fc\u3068\u30c6\u30b9\u30c8\u306e\u30e9\u30f3\u30ca\u30fc\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002SOURCE_FILES \u306b\u306f\u4eca\u56de\u306e\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u5b9f\u884c\n\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\u5b9f\u88c5\u306f\u7a7a\u76f8\u5f53\u3067\u3001\u307e\u3060\u4f55\u3082\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306f fail \u3057\u3066\u3044\u307e\u3059:\n\nstdout\nUnity test run 1 of 1\n.unity_test/test/testcases/my_math_test.c:24:TEST(MyMath, my_math_should_return_1_where_exponent_is_0):FAIL: Expected 1 Was -999999\n.unity_test/test/testcases/my_math_test.c:33:TEST(MyMath, my_math_should_return_minus_1_where_exponent_is_negative):FAIL: Expected -1 Was -999999\n.unity_test/test/testcases/my_math_test.c:47:TEST(MyMath, my_math_should_return_minus_100_where_exponent_is_larger_than_10):FAIL: Expected 1024 Was -999999\n.unity_test/test/testcases/my_math_test.c:61:TEST(MyMath, my_math_should_return_powered_2_otherwise):FAIL: Expected 2 Was -999999\n.unity_test/test/testcases/my_string_test.c:30:TEST(MyString, my_string_should_return_hello_where_0_is_given):FAIL: Expected '(^O^) < \\0xE3\\0x81\\0x93\\0xE3\\0x82\\0x93\\0xE3\\0x81\\0xAB\\0xE3\\0x81\\0xA1\\0xE3\\0x81\\0xAF' Was ''\n.unity_test/test/testcases/my_string_test.c:42:TEST(MyString, my_string_should_return_goodbye_where_1_is_given):FAIL: Expected '(T_T) < \\0xE3\\0x81\\0x95\\0xE3\\0x82\\0x88\\0xE3\\0x81\\0x86\\0xE3\\0x81\\0xAA\\0xE3\\0x82\\0x89' Was ''\n.unity_test/test/testcases/my_string_test.c:54:TEST(MyString, my_string_should_return_greeting_otherwise):FAIL: Expected '(\\0xE3\\0x83\\0xBBv\\0xE3\\0x83\\0xBB) < \\0xE3\\0x81\\0x94\\0xE3\\0x81\\0x8D\\0xE3\\0x81\\0x92\\0xE3\\0x82\\0x93\\0xE3\\0x82\\0x88\\0xE3\\0x81\\0x86' Was ''\n\n\n-----------------------\n7 Tests 7 Failures 0 Ignored \nFAIL\n\nProcess finished with exit code 7\n\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570 -v \u3092\u6307\u5b9a\u3059\u308b\u3068\u3082\u3046\u5c11\u3057\u8a73\u7d30\u304c\u8868\u793a\u3055\u308c\u307e\u3059:\n\nstdout\nUnity test run 1 of 1\nTEST(MyMath, my_math_should_return_1_where_exponent_is_0)unity_test/test/testcases/my_math_test.c:24:TEST(MyMath, my_math_should_return_1_where_exponent_is_0):FAIL: Expected 1 Was 999999\nTEST(MyMath, my_math_should_return_minus_1_where_exponent_is_negative)unity_test/test/testcases/my_math_test.c:33:TEST(MyMath, my_math_should_return_minus_1_where_exponent_is_negative):FAIL: Expected -1 Was 999999\nTEST(MyMath, my_math_should_return_minus_100_where_exponent_is_larger_than_10)unity_test/test/testcases/my_math_test.c:47:TEST(MyMath, my_math_should_return_minus_100_where_exponent_is_larger_than_10):FAIL: Expected 1024 Was 999999\nTEST(MyMath, my_math_should_return_powered_2_otherwise)unity_test/test/testcases/my_math_test.c:61:TEST(MyMath, my_math_should_return_powered_2_otherwise):FAIL: Expected 2 Was 999999\nTEST(MyString, my_string_should_return_hello_where_0_is_given)unity_test/test/testcases/my_string_test.c:30:TEST(MyString, my_string_should_return_hello_where_0_is_given):FAIL: Expected '(^O^) < \\0xE3\\0x81\\0x93\\0xE3\\0x82\\0x93\\0xE3\\0x81\\0xAB\\0xE3\\0x81\\0xA1\\0xE3\\0x81\\0xAF' Was ''\nTEST(MyString, my_string_should_return_goodbye_where_1_is_given)unity_test/test/testcases/my_string_test.c:42:TEST(MyString, my_string_should_return_goodbye_where_1_is_given):FAIL: Expected '(T_T) < \\0xE3\\0x81\\0x95\\0xE3\\0x82\\0x88\\0xE3\\0x81\\0x86\\0xE3\\0x81\\0xAA\\0xE3\\0x82\\0x89' Was ''\nTEST(MyString, my_string_should_return_greeting_otherwise)unity_test/test/testcases/my_string_test.c:54:TEST(MyString, my_string_should_return_greeting_otherwise):FAIL: Expected '(\\0xE3\\0x83\\0xBBv\\0xE3\\0x83\\0xBB) < \\0xE3\\0x81\\0x94\\0xE3\\0x81\\0x8D\\0xE3\\0x81\\0x92\\0xE3\\0x82\\0x93\\0xE3\\0x82\\0x88\\0xE3\\0x81\\0x86' Was ''\n\n\n-----------------------\n7 Tests 7 Failures 0 Ignored \nFAIL\n\nProcess finished with exit code 7\n\n\n\u9069\u5f53\u306a\u5b9f\u88c5\u3092\u884c\u3044\u3001\u3059\u3079\u3066\u306e\u30c6\u30b9\u30c8\u306b\u30d1\u30b9\u3057\u305f\u3068\u304d\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\u30d1\u30b9\u3057\u305f\u30b1\u30fc\u30b9\u304c . \u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u30b7\u30f3\u30d7\u30eb:\n\nstdout\nUnity test run 1 of 1\n.......\n\n-----------------------\n7 Tests 0 Failures 0 Ignored \nOK\n\nProcess finished with exit code 0\n\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570 -v \u3092\u6307\u5b9a\u3059\u308b\u3068\u30d1\u30b9\u6642\u306b\u3082\u3082\u3046\u5c11\u3057\u8a73\u7d30\u304c\u8868\u793a\u3055\u308c\u307e\u3059:\n\nstdout\nUnity test run 1 of 1\nTEST(MyMath, my_math_should_return_1_where_exponent_is_0) PASS\nTEST(MyMath, my_math_should_return_minus_1_where_exponent_is_negative) PASS\nTEST(MyMath, my_math_should_return_minus_100_where_exponent_is_larger_than_10) PASS\nTEST(MyMath, my_math_should_return_powered_2_otherwise) PASS\nTEST(MyString, my_string_should_return_hello_where_0_is_given) PASS\nTEST(MyString, my_string_should_return_goodbye_where_1_is_given) PASS\nTEST(MyString, my_string_should_return_greeting_otherwise) PASS\n\n\n-----------------------\n7 Tests 0 Failures 0 Ignored \nOK\n\nProcess finished with exit code 0\n\n\n\u3061\u306a\u307f\u306b\u4ed8\u5c5e\u306e ruby \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u3048\u3070\u51fa\u529b\u304c\u8272\u4ed8\u304d\u306b\u306a\u3063\u305f\u308a\u3057\u307e\u3059 ( unity/auto/ \u53c2\u7167 )\u3002\u8a66\u3057\u3066\u307e\u305b\u3093\u304c\u2026\u2026\u3002\n\n\u3088\u304f\u4f7f\u7528\u3059\u308b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u4e00\u89a7\n\u3088\u304f\u4f7f\u7528\u3059\u308b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u4e00\u89a7\u306b\u3057\u307e\u3057\u305f\u3002\u5404\u30b1\u30fc\u30b9\u306f\u95a2\u6570\u306b suffix _MESSAGE \u3092\u3064\u3051\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5f15\u6570\u306b\u4e0e\u3048\u308b\u3068\u3001fail \u6642\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 ( ex.: TEST_ASSERT_EQUAL_MESSAGE( 2, add( 1 + 1 ), \"\u3046\u305d\u3063\" ); )\n\nTEST_IGNORE()\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\n\nTEST_FAIL()\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u5931\u6557\u3055\u305b\u308b\n\nTEST_ASSERT_TRUE( cond )\n\n\u6761\u4ef6 cond \u304c true \u3067\u3042\u308b\u3068\u671f\u5f85\u3059\u308b\n\nTEST_ASSERT_FALSE( cond )\n\n\u6761\u4ef6 cond \u304c false \u3067\u3042\u308b\u3068\u671f\u5f85\u3059\u308b\n\nTEST_ASSERT_EQUAL( expected, actual )\n\nactual \u304c expected \u3068\u540c\u5024\u3067\u3042\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u3002\u6c4e\u7528\u7684\u3002\n\nTEST_ASSERT_EQUAL_MEMORY( expected, actual, length )\n\n\u914d\u5217\u3067\u3042\u308b actual \u3068 \u914d\u5217 expected \u304c length \u500b\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u3002\u4fbf\u5229\u3067\u3059\u304c\u3001\u5f53\u7136\u5883\u754c\u306b\u306f\u6ce8\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nTEST_ASSERT_EQUAL_STRING( expected, actual )\n\n\u6587\u5b57\u5217 actual \u3068 expected \u304c\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u3002\u6587\u5b57\u5217\u306f\u5f53\u7136\u7d42\u7aef\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nTEST_ASSERT_EQUAL_STRING_LEN( expected, actual, len )\n\n\u6587\u5b57\u5217 actual \u3068 expected \u304c len \u6587\u5b57\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u307e\u3059\n\nTEST_ASSERT_FLOAT_WITHIN( delta, expected, actual )\n\n\u5358\u7cbe\u5ea6\u5b9f\u6570\u5024 actual \u3068 expected \u304c\u8aa4\u5dee delta \u306e\u7bc4\u56f2\u5185\u3067\u3042\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u307e\u3059\u3002\u3064\u307e\u308a abs( actual - expected ) <= delta \u3067\u3059\u3002\n\nTEST_ASSERT_NULL( expression )\n\nexpression \u304c NULL \u3067\u3042\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\n\nTEST_ASSERT_NOT_NULL( expression )\n\nexpression \u304c NULL \u3067 \u306a\u3044 \u3053\u3068\u3092\u671f\u5f85\u3059\u308b\n# Unity \u3068\u306f\uff1f\n\n\u300cUnity \u3063\u3066\u30b2\u30fc\u30e0\u306e\u3084\u3064\u304b\u306a\uff1f \u3067\u3082 C\u8a00\u8a9e\uff1f\u300d\u3068\u304a\u601d\u3044\u3067\u3057\u3087\u3046\u304c\u3001\u3053\u3053\u3067\u306e `Unity` \u306f`C \u8a00\u8a9e`\u306e\u305f\u3081\u306e`\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af`\u306e\u307b\u3046\u3067\u3059\u3002\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u66f8\u3044\u3066\u3001\u8d64\u8272\u3092\u7dd1\u8272\u306b\u3057\u3066\u3044\u304f\u3084\u3064\u3067\u3059\u306d\u3002\n\n\u5c0f\u3055\u304f\u3066\u624b\u8efd\u3067\u66f8\u304d\u3084\u3059\u3044\u306e\u3067\u3001\u7c21\u5358\u306b\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3082\u5fc5\u8981\u306a\u3082\u306e\u304c\u305d\u308d\u3063\u3066\u3044\u307e\u3059 ( \u306e\u3061\u307b\u3069\u3054\u8aac\u660e )\u3002\n\n\u4ee5\u4e0b\u3067\u306f Unity \u306e\u5c0e\u5165\u3068\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u4f5c\u6210\u3001\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u306b\u3064\u3044\u3066\u30e1\u30e2\u3057\u307e\u3059\u3002\n\n\n# \u5c0e\u5165\n1. Unity \u3092\u5165\u624b\u3057\u307e\u3059: https://github.com/ThrowTheSwitch/Unity\n2. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e `lib` \u7b49\u3001\u597d\u304d\u306a\u5834\u6240\u306b\u7f6e\u304d\u307e\u3059\n3. \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u66f8\u304d\u307e\u3059\n4. \u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u3092\u66f8\u304d\u307e\u3059\n5. \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7a7a\u5b9f\u88c5\u3057\u307e\u3059\n6. \u30d3\u30eb\u30c9\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\n7. \u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u771f\u3063\u8d64\u306b\u3057\u307e\u3059 (\u306a\u308a\u307e\u305b\u3093\u304c\u2026\u2026)\n8. \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4fee\u6b63\u3057\u307e\u3059\n9. \u7dd1\u306b\u3057\u307e\u3059\n\n\n# \u8a66\u3059\n\n\u304a\u8a66\u3057\u306b\u9069\u5f53\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u3063\u3066\u3001Unity \u3067\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\n\n1. \u6700\u8fd1 2 \u306e n \u4e57\u3092\u3088\u304f\u6c42\u3081\u308b\u306e\u3067 2\u3000\u306e n \u4e57\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308d\u3046 ---( \u6a5f\u80fdA: `my_math` )\n2. \u9854\u6587\u5b57\u3067\u3042\u3044\u3055\u3064\u5b9a\u578b\u6587\u3092\u51fa\u3059\u3084\u3064\u3092\u4f5c\u308d\u3046 ---( \u6a5f\u80fdB: `my_string` )\n\n\u3053\u308c\u3089\u306e\u6a5f\u80fd\u306b\u5bfe\u3057\u3066\u3001\u6b21\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u304b\u9069\u5f53\u306a\u7bc4\u56f2\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u307e\u3059:\n\n- \u6a5f\u80fdA: `my_math`\n  1. `0` \u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306f\u5e38\u306b\u5b9a\u6570 `1` \u3092\u8fd4\u305d\u3046\n  2. \u8ca0\u306e\u6570\u304c\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306f\u308f\u304b\u3093\u306a\u3044\u306e\u3067\u3068\u306b\u304b\u304f `-1` \u3092\u8fd4\u305d\u3046\n  3. `10` \u4ee5\u4e0a\u306f\u30e4\u30d0\u305d\u3046\u306a\u306e\u3067 `-100` \u3092\u8fd4\u305d\u3046\n\n- \u6a5f\u80fdB: `my_string`\n  1. \u3042\u3044\u3055\u3064\u306f 3 \u7a2e\u985e\u7528\u610f\n  2. 0 \u306e\u3068\u304d\u306f `\"(^O^) < \u3053\u3093\u306b\u3061\u306f\"`\n  3. 1 \u306e\u3068\u304d\u306f `\"(T_T) < \u3055\u3088\u3046\u306a\u3089\"`\n  4. \u305d\u308c\u4ee5\u5916\u306f\u3059\u3079\u3066 `\"(\u30fbv\u30fb) < \u3054\u304d\u3052\u3093\u3088\u3046\"`\n\n# \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u4f5c\u308b\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306f\u30c6\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u6210\u3057\u3001\u305d\u306e\u4e2d\u3067\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u51e6\u7406\u3092\u5b9a\u7fa9\u3057\u3066\u307e\u3068\u3081\u3066\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\n\n\u5404\u30c6\u30b9\u30c8\u306f `TEST_GROUP( group )` \u3067\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30b0\u30eb\u30fc\u30d7\u3092\u4f5c\u308a\u307e\u3059\u3002`group` \u306f\u30c6\u30b9\u30c8\u30b0\u30eb\u30fc\u30d7\u540d\u3067\u3001\u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\u3059\u308b\u969b\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n`TEST_SETUP( group )` \u30de\u30af\u30ed\u3068 `TEST_TEAR_DOWN( group )` \u30de\u30af\u30ed\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u5404\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u958b\u59cb\u3068\u7d42\u4e86\u6642\u306b\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u304c\u3001\u4eca\u56de\u306f\u7a7a\u3067\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n`TEST( group, case )` \u3067 `group` \u306b\u5c5e\u3057\u305f\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u6a5f\u80fdA \u306e\u30c6\u30b9\u30c8\u3067\u3059\u3002\u3053\u3053\u3067\u306f\u5358\u7d14\u306a\u6574\u6570\u5024\u306e\u4e00\u81f4\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059:\n\n```c:my_math_test.c\n#include <unity.h>\n#include <unity_fixture.h>\n\n#include \"my_math.h\"\n\n\nTEST_GROUP( MyMath );\n\n\nTEST_SETUP( MyMath )\n{}\n\n\nTEST_TEAR_DOWN( MyMath )\n{}\n\n\n/**\n * 0 \u306e\u3068\u304d\u306f\u5e38\u306b 1 \u3092\u8fd4\u3057\u307e\u3059\n * 0 \u3092\u4e0e\u3048\u3066 1 \u304c\u8fd4\u3063\u3066\u304f\u308b\u3053\u3068\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\n */\nTEST( MyMath, my_math_should_return_1_where_exponent_is_0 )\n{\n    TEST_ASSERT_EQUAL( 1, my_math( 0 ) );\n}\n\n/**\n * \u8ca0\u6570\u3067\u306f -1 \u3092\u8fd4\u3057\u307e\u3059\n * \u9069\u5f53\u306a\u8ca0\u6570\u3092\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3059\n */\nTEST( MyMath, my_math_should_return_minus_1_where_exponent_is_negative )\n{\n    TEST_ASSERT_EQUAL( -1, my_math( -1 ) );\n    TEST_ASSERT_EQUAL( -1, my_math( -2 ) );\n    TEST_ASSERT_EQUAL( -1, my_math( -3 ) );\n    TEST_ASSERT_EQUAL( -1, my_math( -4 ) );\n    TEST_ASSERT_EQUAL( -1, my_math( -5 ) );\n    TEST_ASSERT_EQUAL( -1, my_math( -5928 ) );\n}\n\n/**\n * 10 \u4ee5\u964d\u3067\u306f -100 \u3092\u8fd4\u3057\u307e\u3059\n * \u9069\u5f53\u306a\u5927\u304d\u3044\u6570\u3092\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3059\n */\nTEST( MyMath, my_math_should_return_minus_100_where_exponent_is_larger_than_10 )\n{\n    TEST_ASSERT_EQUAL(  1024, my_math( 10 ) );\n    TEST_ASSERT_EQUAL( -100,  my_math( 11 ) );\n    TEST_ASSERT_EQUAL( -100,  my_math( 15 ) );\n    TEST_ASSERT_EQUAL( -100,  my_math( 400 ) );\n    TEST_ASSERT_EQUAL( -100,  my_math( 59284 ) );\n    TEST_ASSERT_EQUAL( -100,  my_math( 213007 ) );\n}\n\n/**\n * 1 \u301c 10 \u306e\u7bc4\u56f2\u3067\u306f 2^n \u3092\u8fd4\u3057\u307e\u3059\n * \u3059\u3079\u3066\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3059\n */\nTEST( MyMath, my_math_should_return_powered_2_otherwise )\n{\n    TEST_ASSERT_EQUAL( 2,    my_math( 1 ) );\n    TEST_ASSERT_EQUAL( 4,    my_math( 2 ) );\n    TEST_ASSERT_EQUAL( 8,    my_math( 3 ) );\n    TEST_ASSERT_EQUAL( 16,   my_math( 4 ) );\n    TEST_ASSERT_EQUAL( 32,   my_math( 5 ) );\n    TEST_ASSERT_EQUAL( 64,   my_math( 6 ) );\n    TEST_ASSERT_EQUAL( 128,  my_math( 7 ) );\n    TEST_ASSERT_EQUAL( 256,  my_math( 8 ) );\n    TEST_ASSERT_EQUAL( 512,  my_math( 9 ) );\n    TEST_ASSERT_EQUAL( 1024, my_math( 10 ) );\n}\n```\n\n\u6b21\u306b\u6a5f\u80fdB \u306e\u30c6\u30b9\u30c8\u3067\u3059\u3002\u3053\u3053\u3067\u306f\u6587\u5b57\u5217\u306e\u51e6\u7406\u306a\u306e\u3067\u3001\u6587\u5b57\u5217\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059:\n\n```c:my_string.c\n#include <unity.h>\n#include <unity_fixture.h>\n\n#include \"my_string.h\"\n\n\nTEST_GROUP( MyString );\n\n\n/**\n * 0 \u306e\u3068\u304d\u306f \u3053\u3093\u306b\u3061\u306f \u306e\u5b9a\u578b\u6587\u3092\u66f8\u304d\u8fbc\u3080\n * \u4e88\u60f3\u3055\u308c\u308b\u6587\u5b57\u5217\u3067\u3042\u308b\u3053\u3068\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\n */\nTEST( MyString, my_string_should_return_hello_where_0_is_given )\n{\n    char buffer[256] = {};\n\n    my_string( 0, buffer );\n    TEST_ASSERT_EQUAL_STRING( \"(^O^) < \u3053\u3093\u306b\u3061\u306f\", buffer );\n}\n\n/**\n * 1 \u306e\u3068\u304d\u306f \u3055\u3088\u3046\u306a\u3089 \u306e\u5b9a\u578b\u6587\u3092\u66f8\u304d\u8fbc\u3080\n * \u4e88\u60f3\u3055\u308c\u308b\u6587\u5b57\u5217\u3067\u3042\u308b\u3053\u3068\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\n */\nTEST( MyString, my_string_should_return_goodbye_where_1_is_given )\n{\n    char buffer[256] = {};\n\n    my_string( 1, buffer );\n    TEST_ASSERT_EQUAL_STRING( \"(T_T) < \u3055\u3088\u3046\u306a\u3089\", buffer );\n}\n\n/**\n * \u305d\u308c\u4ee5\u5916\u306f \u3054\u304d\u3052\u3093\u3088\u3046 \u306e\u5b9a\u578b\u6587\u3092\u66f8\u304d\u8fbc\u3080\n * \u4e88\u60f3\u3055\u308c\u308b\u6587\u5b57\u5217\u3067\u3042\u308b\u3053\u3068\u3092\u9069\u5f53\u306a\u7bc4\u56f2\u3067\u30c6\u30b9\u30c8\u3057\u307e\u3059\n */\nTEST( MyString, my_string_should_return_greeting_otherwise )\n{\n    char buffer[256] = {};\n\n    my_string( 2, buffer );\n    TEST_ASSERT_EQUAL_STRING( \"(\u30fbv\u30fb) < \u3054\u304d\u3052\u3093\u3088\u3046\", buffer );\n\n    my_string( 10, buffer );\n    TEST_ASSERT_EQUAL_STRING( \"(\u30fbv\u30fb) < \u3054\u304d\u3052\u3093\u3088\u3046\", buffer );\n\n    my_string( -50, buffer );\n    TEST_ASSERT_EQUAL_STRING( \"(\u30fbv\u30fb) < \u3054\u304d\u3052\u3093\u3088\u3046\", buffer );\n\n    my_string( 1000, buffer );\n    TEST_ASSERT_EQUAL_STRING( \"(\u30fbv\u30fb) < \u3054\u304d\u3052\u3093\u3088\u3046\", buffer );\n}\n```\n\n# \u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u3092\u4f5c\u308b\n\n\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u305f\u5f8c\u306f\u3001\u624b\u52d5\u3067\u5404\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u3068\u3059\u3079\u3066\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30e9\u30f3\u30ca\u30fc\u3092\u4f5c\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u81ea\u52d5\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u306e\u3067 **\u3082\u306e\u3059\u3054\u3044\u5fd8\u308c\u3084\u3059\u3044** \u3067\u3059\u3002\n\n\u305f\u3060\u3057\u3001Unity \u306b\u6dfb\u4ed8\u3055\u308c\u3066\u3044\u308b `examples/` \u30d5\u30a9\u30eb\u30c0\u30fc\u4ee5\u4e0b\u306e `example_1` \u3068 `example_3` \u3067\u306f `ruby` \u3067\u81ea\u52d5\u3067\u30e9\u30f3\u30ca\u30fc\u3092\u4f5c\u6210\u3059\u308b\u3084\u308a\u65b9\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u6539\u5909\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059 ( \u3053\u3053\u3067\u306f\u8aac\u660e\u306f\u7701\u304d\u307e\u3059 )\u3002\n\n\u5404\u30c6\u30b9\u30c8\u306b\u95a2\u3057\u3066\u30c6\u30b9\u30c8\u30e9\u30f3\u30ca\u30fc\u3092\u4f5c\u308a\u307e\u3059:\n\n```c:my_math_test_runner.c\n#include <unity.h>\n#include <unity_fixture.h>\n\nTEST_GROUP_RUNNER( MyMath )\n{\n  RUN_TEST_CASE( MyMath, my_math_should_return_1_where_exponent_is_0 );\n  RUN_TEST_CASE( MyMath, my_math_should_return_minus_1_where_exponent_is_negative );\n  RUN_TEST_CASE( MyMath, my_math_should_return_minus_100_where_exponent_is_larger_than_10 );\n  RUN_TEST_CASE( MyMath, my_math_should_return_powered_2_otherwise );\n}\n```\n\n```c:my_string_test_runner.c\n#include <unity.h>\n#include <unity_fixture.h>\n\nTEST_GROUP_RUNNER( MyString )\n{\n  RUN_TEST_CASE( MyString, my_string_should_return_hello_where_0_is_given );\n  RUN_TEST_CASE( MyString, my_string_should_return_goodbye_where_1_is_given );\n  RUN_TEST_CASE( MyString, my_string_should_return_greeting_otherwise );\n}\n```\n\n\u3059\u3079\u3066\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30e9\u30f3\u30ca\u30fc\u3092\u4f5c\u308a\u307e\u3059:\n\n```c:all_tests.c\n#include <unity_fixture.h>\n\nstatic void RunAllTests(void)\n{\n  RUN_TEST_GROUP( MyMath );\n  RUN_TEST_GROUP( MyString );\n}\n\nint main( int argc, char const **argv )\n{\n  return UnityMain( argc, argv, RunAllTests );\n}\n```\n\n\n# \u69cb\u6210\n\u4eca\u56de\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3053\u3093\u306a\u611f\u3058\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u69cb\u6210\u306b\u3057\u307e\u3059\u3002:\n\n```text:project\nunity_test/\n \u2502\n \u251c lib\n \u2502  \u2514 unity\n \u2502     \u2514 ( \u3082\u308d\u3082\u308d\u306e\u30d5\u30a1\u30a4\u30eb\u2026\u2026 )\n \u2502\n \u251c include: \u30e2\u30b8\u30e5\u30fc\u30eb \u30d8\u30c3\u30c0\u30fc\u30d5\u30a1\u30a4\u30eb\n \u2502  \u251c my_math.h\n \u2502  \u2514 my_string.h\n \u2502\n \u251c src: \u30e2\u30b8\u30e5\u30fc\u30eb \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\n \u2502  \u251c my_math.c\n \u2502  \u2514 my_string.c\n \u2502\n \u251c test: \u30c6\u30b9\u30c8\u95a2\u9023\n \u2502  \u251c testcases: \u5404\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\n \u2502  \u2502  \u251c my_math_test.c\n \u2502  \u2502  \u2514 my_string_test.c\n \u2502  \u2502  \n \u2502  \u2514 runner: \u5404\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30e9\u30f3\u30ca\u30fc\n \u2502     \u251c my_math_test_runner.c\n \u2502     \u251c my_string_test_runner.c\n \u2502     \u2514 all_tests.c\n \u2502\n \u2514 CMakeLists.txt  \n```\n\n\u3082\u3061\u308d\u3093\u3001\u3053\u308c\u306f\u4e00\u4f8b\u3067\u3059\u3002\u69cb\u6210\u306b\u6307\u5b9a\u304c\u3042\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u3069\u306e\u3088\u3046\u306a\u304b\u305f\u3061\u3067\u3042\u3063\u3066\u3082\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30d3\u30eb\u30c9\u3055\u3048\u3067\u304d\u308c\u3070 OK \u3067\u3059\u3002\n\nCMakeLists.txt \u306f\u5404\u30d5\u30a9\u30eb\u30c0\u30fc\u306b\u5206\u5272\u3057\u3066\u914d\u7f6e\u3059\u308b\u307b\u3046\u304c\u597d\u307e\u3057\u3044\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u7c21\u5358\u306b\u30eb\u30fc\u30c8\u306b\u3066\u307e\u3068\u3081\u3066\u6307\u5b9a\u3092\u884c\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\n# CMakeLists.txt\nUnity \u306e `examples/` \u30d5\u30a9\u30eb\u30c0 \u306b\u306f `Makefile` \u304c\u5165\u3063\u3066\u3044\u3066\u3001\u3053\u308c\u3092\u30de\u30cd\u3059\u308c\u3070\u30d3\u30eb\u30c9\u304c\u3089\u304f\u3061\u3093\u3067\u3059\u3002\u304c\u3001 CMake \u306b\u3066\u30d3\u30eb\u30c9\u3057\u305f\u3044\u306e\u3067\u3001\u30de\u30cd\u3057\u306a\u304c\u3089\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\u7279\u306b CMake \u306e\u6307\u5b9a\u304c\u3042\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001\u5b8c\u5168\u306b\u8da3\u5473\u3067\u3059\u3002\n\n```cmake:CMakeLists.txt\ncmake_minimum_required( VERSION 3.2 )\nproject( unity_test )\n\nset( UNITY_ROOT lib/unity )\n\ninclude_directories( ${UNITY_ROOT}/src )\ninclude_directories( ${UNITY_ROOT}/extras/fixture/src )\ninclude_directories( include/ )\nlink_libraries( m )\n\nset(\n    UNITY_FILES\n\n        ${UNITY_ROOT}/src/unity.c\n        ${UNITY_ROOT}/extras/fixture/src/unity_fixture.c\n)\n\nset(\n    TEST_FILES\n\n        test/testcases/my_math_test.c\n        test/testcases/my_string_test.c\n)\n\nset(\n    SOURCE_FILES\n\n        src/my_math.c\n        src/my_string.c\n)\n\nset(\n    TEST_RUNNER_FILES\n\n        test/runner/my_math_test_runner.c\n        test/runner/my_string_test_runner.c\n        test/runner/all_tests.c\n)\n\nadd_executable( unity_test ${SOURCE_FILES} ${TEST_FILES} ${TEST_RUNNER_FILES} ${UNITY_FILES} )\n```\n\n`TEST_FILES` \u306b\u306f \u4eca\u56de\u8ffd\u52a0\u3057\u305f\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u3001`TEST_RUNNER_FILES` \u306b\u306f\u5404\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u30e9\u30f3\u30ca\u30fc\u3068\u30c6\u30b9\u30c8\u306e\u30e9\u30f3\u30ca\u30fc\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002`SOURCE_FILES` \u306b\u306f\u4eca\u56de\u306e\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\n# \u5b9f\u884c\n\n\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\u5b9f\u88c5\u306f\u7a7a\u76f8\u5f53\u3067\u3001\u307e\u3060\u4f55\u3082\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306f fail \u3057\u3066\u3044\u307e\u3059:\n\n```text:stdout\nUnity test run 1 of 1\n.unity_test/test/testcases/my_math_test.c:24:TEST(MyMath, my_math_should_return_1_where_exponent_is_0):FAIL: Expected 1 Was -999999\n.unity_test/test/testcases/my_math_test.c:33:TEST(MyMath, my_math_should_return_minus_1_where_exponent_is_negative):FAIL: Expected -1 Was -999999\n.unity_test/test/testcases/my_math_test.c:47:TEST(MyMath, my_math_should_return_minus_100_where_exponent_is_larger_than_10):FAIL: Expected 1024 Was -999999\n.unity_test/test/testcases/my_math_test.c:61:TEST(MyMath, my_math_should_return_powered_2_otherwise):FAIL: Expected 2 Was -999999\n.unity_test/test/testcases/my_string_test.c:30:TEST(MyString, my_string_should_return_hello_where_0_is_given):FAIL: Expected '(^O^) < \\0xE3\\0x81\\0x93\\0xE3\\0x82\\0x93\\0xE3\\0x81\\0xAB\\0xE3\\0x81\\0xA1\\0xE3\\0x81\\0xAF' Was ''\n.unity_test/test/testcases/my_string_test.c:42:TEST(MyString, my_string_should_return_goodbye_where_1_is_given):FAIL: Expected '(T_T) < \\0xE3\\0x81\\0x95\\0xE3\\0x82\\0x88\\0xE3\\0x81\\0x86\\0xE3\\0x81\\0xAA\\0xE3\\0x82\\0x89' Was ''\n.unity_test/test/testcases/my_string_test.c:54:TEST(MyString, my_string_should_return_greeting_otherwise):FAIL: Expected '(\\0xE3\\0x83\\0xBBv\\0xE3\\0x83\\0xBB) < \\0xE3\\0x81\\0x94\\0xE3\\0x81\\0x8D\\0xE3\\0x81\\0x92\\0xE3\\0x82\\0x93\\0xE3\\0x82\\0x88\\0xE3\\0x81\\0x86' Was ''\n\n\n-----------------------\n7 Tests 7 Failures 0 Ignored \nFAIL\n\nProcess finished with exit code 7\n```\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570 `-v` \u3092\u6307\u5b9a\u3059\u308b\u3068\u3082\u3046\u5c11\u3057\u8a73\u7d30\u304c\u8868\u793a\u3055\u308c\u307e\u3059:\n\n```text:stdout\nUnity test run 1 of 1\nTEST(MyMath, my_math_should_return_1_where_exponent_is_0)unity_test/test/testcases/my_math_test.c:24:TEST(MyMath, my_math_should_return_1_where_exponent_is_0):FAIL: Expected 1 Was 999999\nTEST(MyMath, my_math_should_return_minus_1_where_exponent_is_negative)unity_test/test/testcases/my_math_test.c:33:TEST(MyMath, my_math_should_return_minus_1_where_exponent_is_negative):FAIL: Expected -1 Was 999999\nTEST(MyMath, my_math_should_return_minus_100_where_exponent_is_larger_than_10)unity_test/test/testcases/my_math_test.c:47:TEST(MyMath, my_math_should_return_minus_100_where_exponent_is_larger_than_10):FAIL: Expected 1024 Was 999999\nTEST(MyMath, my_math_should_return_powered_2_otherwise)unity_test/test/testcases/my_math_test.c:61:TEST(MyMath, my_math_should_return_powered_2_otherwise):FAIL: Expected 2 Was 999999\nTEST(MyString, my_string_should_return_hello_where_0_is_given)unity_test/test/testcases/my_string_test.c:30:TEST(MyString, my_string_should_return_hello_where_0_is_given):FAIL: Expected '(^O^) < \\0xE3\\0x81\\0x93\\0xE3\\0x82\\0x93\\0xE3\\0x81\\0xAB\\0xE3\\0x81\\0xA1\\0xE3\\0x81\\0xAF' Was ''\nTEST(MyString, my_string_should_return_goodbye_where_1_is_given)unity_test/test/testcases/my_string_test.c:42:TEST(MyString, my_string_should_return_goodbye_where_1_is_given):FAIL: Expected '(T_T) < \\0xE3\\0x81\\0x95\\0xE3\\0x82\\0x88\\0xE3\\0x81\\0x86\\0xE3\\0x81\\0xAA\\0xE3\\0x82\\0x89' Was ''\nTEST(MyString, my_string_should_return_greeting_otherwise)unity_test/test/testcases/my_string_test.c:54:TEST(MyString, my_string_should_return_greeting_otherwise):FAIL: Expected '(\\0xE3\\0x83\\0xBBv\\0xE3\\0x83\\0xBB) < \\0xE3\\0x81\\0x94\\0xE3\\0x81\\0x8D\\0xE3\\0x81\\0x92\\0xE3\\0x82\\0x93\\0xE3\\0x82\\0x88\\0xE3\\0x81\\0x86' Was ''\n\n\n-----------------------\n7 Tests 7 Failures 0 Ignored \nFAIL\n\nProcess finished with exit code 7\n```\n\n\u9069\u5f53\u306a\u5b9f\u88c5\u3092\u884c\u3044\u3001\u3059\u3079\u3066\u306e\u30c6\u30b9\u30c8\u306b\u30d1\u30b9\u3057\u305f\u3068\u304d\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\u30d1\u30b9\u3057\u305f\u30b1\u30fc\u30b9\u304c `.` \u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u30b7\u30f3\u30d7\u30eb:\n\n```text:stdout\nUnity test run 1 of 1\n.......\n\n-----------------------\n7 Tests 0 Failures 0 Ignored \nOK\n\nProcess finished with exit code 0\n```\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570 `-v` \u3092\u6307\u5b9a\u3059\u308b\u3068\u30d1\u30b9\u6642\u306b\u3082\u3082\u3046\u5c11\u3057\u8a73\u7d30\u304c\u8868\u793a\u3055\u308c\u307e\u3059:\n\n```text:stdout\nUnity test run 1 of 1\nTEST(MyMath, my_math_should_return_1_where_exponent_is_0) PASS\nTEST(MyMath, my_math_should_return_minus_1_where_exponent_is_negative) PASS\nTEST(MyMath, my_math_should_return_minus_100_where_exponent_is_larger_than_10) PASS\nTEST(MyMath, my_math_should_return_powered_2_otherwise) PASS\nTEST(MyString, my_string_should_return_hello_where_0_is_given) PASS\nTEST(MyString, my_string_should_return_goodbye_where_1_is_given) PASS\nTEST(MyString, my_string_should_return_greeting_otherwise) PASS\n\n\n-----------------------\n7 Tests 0 Failures 0 Ignored \nOK\n\nProcess finished with exit code 0\n```\n\n\u3061\u306a\u307f\u306b\u4ed8\u5c5e\u306e ruby \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u3048\u3070\u51fa\u529b\u304c\u8272\u4ed8\u304d\u306b\u306a\u3063\u305f\u308a\u3057\u307e\u3059 ( `unity/auto/` \u53c2\u7167 )\u3002\u8a66\u3057\u3066\u307e\u305b\u3093\u304c\u2026\u2026\u3002\n\n\n# \u3088\u304f\u4f7f\u7528\u3059\u308b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u4e00\u89a7\n\n\u3088\u304f\u4f7f\u7528\u3059\u308b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u4e00\u89a7\u306b\u3057\u307e\u3057\u305f\u3002\u5404\u30b1\u30fc\u30b9\u306f\u95a2\u6570\u306b suffix `_MESSAGE` \u3092\u3064\u3051\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5f15\u6570\u306b\u4e0e\u3048\u308b\u3068\u3001fail \u6642\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059 ( ex.: `TEST_ASSERT_EQUAL_MESSAGE( 2, add( 1 + 1 ), \"\u3046\u305d\u3063\" );` )\n\n## `TEST_IGNORE()`\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\n\n## `TEST_FAIL()`\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u5931\u6557\u3055\u305b\u308b\n\n## `TEST_ASSERT_TRUE( cond )`\n\u6761\u4ef6 `cond` \u304c `true` \u3067\u3042\u308b\u3068\u671f\u5f85\u3059\u308b\n\n## `TEST_ASSERT_FALSE( cond )`\n\u6761\u4ef6 `cond` \u304c `false` \u3067\u3042\u308b\u3068\u671f\u5f85\u3059\u308b\n\n## `TEST_ASSERT_EQUAL( expected, actual )`\n`actual` \u304c `expected` \u3068\u540c\u5024\u3067\u3042\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u3002\u6c4e\u7528\u7684\u3002\n\n## `TEST_ASSERT_EQUAL_MEMORY( expected, actual, length )`\n\u914d\u5217\u3067\u3042\u308b `actual` \u3068 \u914d\u5217 `expected` \u304c `length` \u500b\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u3002\u4fbf\u5229\u3067\u3059\u304c\u3001\u5f53\u7136\u5883\u754c\u306b\u306f\u6ce8\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## `TEST_ASSERT_EQUAL_STRING( expected, actual )`\n\u6587\u5b57\u5217 `actual` \u3068 `expected` \u304c\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\u3002\u6587\u5b57\u5217\u306f\u5f53\u7136\u7d42\u7aef\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## `TEST_ASSERT_EQUAL_STRING_LEN( expected, actual, len )`\n\u6587\u5b57\u5217 `actual` \u3068 `expected` \u304c `len` \u6587\u5b57\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u307e\u3059\n\n## `TEST_ASSERT_FLOAT_WITHIN( delta, expected, actual )`\n\u5358\u7cbe\u5ea6\u5b9f\u6570\u5024 `actual` \u3068 `expected` \u304c\u8aa4\u5dee `delta` \u306e\u7bc4\u56f2\u5185\u3067\u3042\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u307e\u3059\u3002\u3064\u307e\u308a `abs( actual - expected ) <= delta` \u3067\u3059\u3002\n\n## `TEST_ASSERT_NULL( expression )`\n`expression` \u304c `NULL` \u3067\u3042\u308b\u3053\u3068\u3092\u671f\u5f85\u3059\u308b\n\n## `TEST_ASSERT_NOT_NULL( expression )`\n`expression` \u304c `NULL` \u3067 **\u306a\u3044** \u3053\u3068\u3092\u671f\u5f85\u3059\u308b\n", "tags": ["\u30c6\u30b9\u30c8", "C"]}