{"tags": ["Rails", "Heroku", "linebot", "LINEmessagingAPI"], "context": "Line Messaging API\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u306e\u3067\u304a\u3046\u3080\u8fd4\u3057Bot\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://devdocs.line.me/ja/\nruby\u306esdk\u3082\u540c\u6642\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u306e\u3067\u3059\u304c\u3001heroku\u3068\u4f75\u7528\u3059\u308b\u969b\u306bfixie\u306eproxy\u8a2d\u5b9a\u304c\u3067\u304d\u306a\u3044\u3088\u3046\u3060\u3063\u305f\u306e\u3067\u5229\u7528\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002\nhttps://github.com/line/line-bot-sdk-ruby\nGithub\u306b\u3082\u30bd\u30fc\u30b9\u516c\u958b\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/YoheiMiyamoto/line-bot-test\n\n\u30a2\u30ab\u30a6\u30f3\u30c8\n\n\u4f5c\u6210\n\u4ee5\u4e0b\u306e\u30ac\u30a4\u30c0\u30f3\u30b9\u306b\u6cbf\u3063\u3066\u3001\nhttps://developers.line.me/messaging-api/overview\n\nLine@\u30a2\u30ab\u30a6\u30f3\u30c8\nMessaging API\u30a2\u30ab\u30a6\u30f3\u30c8\n\n\u3092\u4f5c\u6210\u3002\n\n\u30ad\u30fc\u3092\u30e1\u30e2\nhttps://business.line.me/ja/\n\u304b\u3089\u4f5c\u6210\u3057\u305fMessaging API\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\n\nCHANNEL_SECRET\nCHANNEL_ACCESS_TOKEN\n\n\u3092\u5f8c\u307b\u3069\u8a2d\u5b9a\u306b\u5229\u7528\u3059\u308b\u306e\u3067\u4efb\u610f\u306e\u5834\u6240\u306b\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\nrails\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\ngem\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nGemfile\ngem 'dotenv-rails'\ngem 'faraday'\ngem 'faraday_middleware'\n\n// heroku\u7528\ngroup :production do\n  gem 'rails_12factor'\nend\n\n\n\nline_client \u30af\u30e9\u30b9\u4f5c\u6210\n\nlib/line_client.rb\nclass LineClient\n  END_POINT = \"https://api.line.me\"\n\n  def initialize(channel_access_token, proxy = nil)\n    @channel_access_token = channel_access_token\n    @proxy = proxy\n  end\n\n  def post(path, data)\n    client = Faraday.new(:url => END_POINT) do |conn|\n      conn.request :json\n      conn.response :json, :content_type => /\\bjson$/\n      conn.adapter Faraday.default_adapter\n      conn.proxy @proxy\n    end\n\n    res = client.post do |request|\n      request.url path\n      request.headers = {\n        'Content-type' => 'application/json',\n        'Authorization' => \"Bearer #{@channel_access_token}\"\n      }\n      request.body = data\n    end\n    res\n  end\n\n  def reply(replyToken, text)\n\n    messages = [\n      {\n        \"type\" => \"text\" ,\n        \"text\" => text\n      }\n    ]\n\n    body = {\n      \"replyToken\" => replyToken ,\n      \"messages\" => messages\n    }\n    post('/v2/bot/message/reply', body.to_json)\n  end\n\nend\n\n\n\nconfig/environment.rb\n# Load the Rails application.\nrequire_relative 'application'\n\n# line_client\u3092\u8ffd\u52a0\nrequire 'line_client'\n\n# Initialize the Rails application.\nRails.application.initialize!\n\n\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u4f5c\u6210\n\nwebhook_controller.rb\nclass WebhookController < ApplicationController\n  // Line\u304b\u3089\u306ecallback\u304b\u8a8d\u8a3c\n  protect_from_forgery with: :null_session\n\n  CHANNEL_SECRET = ENV['CHANNEL_SECRET']\n  OUTBOUND_PROXY = ENV['OUTBOUND_PROXY']\n  CHANNEL_ACCESS_TOKEN = ENV['CHANNEL_ACCESS_TOKEN']\n\n  def callback\n    unless is_validate_signature\n      render :nothing => true, status: 470\n    end\n\n    event = params[\"events\"][0]\n    event_type = event[\"type\"]\n    replyToken = event[\"replyToken\"]\n\n    case event_type\n    when \"message\"\n      input_text = event[\"message\"][\"text\"]\n      output_text = input_text\n    end\n\n    client = LineClient.new(CHANNEL_ACCESS_TOKEN, OUTBOUND_PROXY)\n    res = client.reply(replyToken, output_text)\n\n    if res.status == 200\n      logger.info({success: res})\n    else\n      logger.info({fail: res})\n    end\n\n    render :nothing => true, status: :ok\n  end\n\n  private\n  # verify access from LINE\n  def is_validate_signature\n    signature = request.headers[\"X-LINE-Signature\"]\n    http_request_body = request.raw_post\n    hash = OpenSSL::HMAC::digest(OpenSSL::Digest::SHA256.new, CHANNEL_SECRET, http_request_body)\n    signature_answer = Base64.strict_encode64(hash)\n    signature == signature_answer\n  end\nend\n\n\n\n\u30eb\u30fc\u30c8\u8a2d\u5b9a\n\nconfig/routes.rb\nRails.application.routes.draw do\n  post '/callback' => 'webhook#callback'\nend\n\n\n\n\nheroku\n\nfixie\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nheroku\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u6210\u5f8c\u3001fixie\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nheroku addons:create fixie:tricycle\n\n\n\u8a2d\u5b9a\u3092\u78ba\u8a8d\n\nProxy URL\nOutbound IPs\n\n\u3092\u78ba\u8a8d\u3002\n\u3053\u3061\u3089\u3082\u5f8c\u307b\u3069\u8a2d\u5b9a\u3059\u308b\u306e\u3067\u4efb\u610f\u306e\u5834\u6240\u306b\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u203b\u53c2\u8003\nhttp://qiita.com/yuya_takeyama/items/0660a59d13e2cd0b2516\n\n\u30ad\u30fc\u8a2d\u5b9a\uff08Line\u7ba1\u7406\u753b\u9762\uff09\nhttps://business.line.me/ja/\n\u304b\u3089\u4f5c\u6210\u3057\u305fMessaging API\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u9077\u79fb\u3057\u307e\u3059\u3002\n\nOutbound Ips\nServer IP Whitelist\u306b\u30e1\u30e2\u3057\u305fOutboud Ips\u3092\u8a18\u8ff0\u3057\u307e\u3059\n\nWebhook URL\nBasic Infomation > Webhook URL\n\u306b\u3001\u4ee5\u4e0b\u3092\u8a2d\u5b9a\u3002\nhttps://{\u3054\u81ea\u8eab\u306eheroku\u30a2\u30d7\u30ea\u540d}.herokuapp.com:443/callback\n\n\n\u30ad\u30fc\u8a2d\u5b9a\uff08heroku\uff09\nheroku\u306b\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\nheroku config:add OUTBOUND_PROXY = '\u5148\u307b\u3069\u30e1\u30e2\u3057\u305f\u8a2d\u5b9a\u5024'\nheroku config:add CHANNEL_SECRET = '\u5148\u307b\u3069\u30e1\u30e2\u3057\u305f\u8a2d\u5b9a\u5024'\nheroku config:add CHANNEL_ACCESS_TOKEN = '\u5148\u307b\u3069\u30e1\u30e2\u3057\u305f\u8a2d\u5b9a\u5024'\n\n\n\n\u6319\u52d5\u78ba\u8a8d\n\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u304a\u3046\u3080\u8fd4\u3057\u3092\u884c\u3046Bot\u306e\u4f5c\u6210\u304c\u3067\u304d\u307e\u3059\u3002\n\nLine Messaging API\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u306e\u3067\u304a\u3046\u3080\u8fd4\u3057Bot\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://devdocs.line.me/ja/\n\nruby\u306esdk\u3082\u540c\u6642\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u306e\u3067\u3059\u304c\u3001heroku\u3068\u4f75\u7528\u3059\u308b\u969b\u306bfixie\u306eproxy\u8a2d\u5b9a\u304c\u3067\u304d\u306a\u3044\u3088\u3046\u3060\u3063\u305f\u306e\u3067\u5229\u7528\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002\nhttps://github.com/line/line-bot-sdk-ruby\n\nGithub\u306b\u3082\u30bd\u30fc\u30b9\u516c\u958b\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/YoheiMiyamoto/line-bot-test\n\n# \u30a2\u30ab\u30a6\u30f3\u30c8\n## \u4f5c\u6210\n\u4ee5\u4e0b\u306e\u30ac\u30a4\u30c0\u30f3\u30b9\u306b\u6cbf\u3063\u3066\u3001\nhttps://developers.line.me/messaging-api/overview\n\n* Line@\u30a2\u30ab\u30a6\u30f3\u30c8\n* Messaging API\u30a2\u30ab\u30a6\u30f3\u30c8\n\n\u3092\u4f5c\u6210\u3002\n\n## \u30ad\u30fc\u3092\u30e1\u30e2\nhttps://business.line.me/ja/\n\u304b\u3089\u4f5c\u6210\u3057\u305fMessaging API\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\n\n* CHANNEL_SECRET\n* CHANNEL_ACCESS_TOKEN\n\n\u3092\u5f8c\u307b\u3069\u8a2d\u5b9a\u306b\u5229\u7528\u3059\u308b\u306e\u3067\u4efb\u610f\u306e\u5834\u6240\u306b\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n***\n\n# rails\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n## gem\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n```rb:Gemfile\ngem 'dotenv-rails'\ngem 'faraday'\ngem 'faraday_middleware'\n\n// heroku\u7528\ngroup :production do\n  gem 'rails_12factor'\nend\n```\n\n\n## line_client \u30af\u30e9\u30b9\u4f5c\u6210\n\n```rb:lib/line_client.rb\nclass LineClient\n  END_POINT = \"https://api.line.me\"\n\n  def initialize(channel_access_token, proxy = nil)\n    @channel_access_token = channel_access_token\n    @proxy = proxy\n  end\n\n  def post(path, data)\n    client = Faraday.new(:url => END_POINT) do |conn|\n      conn.request :json\n      conn.response :json, :content_type => /\\bjson$/\n      conn.adapter Faraday.default_adapter\n      conn.proxy @proxy\n    end\n\n    res = client.post do |request|\n      request.url path\n      request.headers = {\n        'Content-type' => 'application/json',\n        'Authorization' => \"Bearer #{@channel_access_token}\"\n      }\n      request.body = data\n    end\n    res\n  end\n\n  def reply(replyToken, text)\n\n    messages = [\n      {\n        \"type\" => \"text\" ,\n        \"text\" => text\n      }\n    ]\n\n    body = {\n      \"replyToken\" => replyToken ,\n      \"messages\" => messages\n    }\n    post('/v2/bot/message/reply', body.to_json)\n  end\n\nend\n```\n\n```rb:config/environment.rb\n# Load the Rails application.\nrequire_relative 'application'\n\n# line_client\u3092\u8ffd\u52a0\nrequire 'line_client'\n\n# Initialize the Rails application.\nRails.application.initialize!\n```\n\n## \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u4f5c\u6210\n```rb:webhook_controller.rb\nclass WebhookController < ApplicationController\n  // Line\u304b\u3089\u306ecallback\u304b\u8a8d\u8a3c\n  protect_from_forgery with: :null_session\n\n  CHANNEL_SECRET = ENV['CHANNEL_SECRET']\n  OUTBOUND_PROXY = ENV['OUTBOUND_PROXY']\n  CHANNEL_ACCESS_TOKEN = ENV['CHANNEL_ACCESS_TOKEN']\n\n  def callback\n    unless is_validate_signature\n      render :nothing => true, status: 470\n    end\n\n    event = params[\"events\"][0]\n    event_type = event[\"type\"]\n    replyToken = event[\"replyToken\"]\n\n    case event_type\n    when \"message\"\n      input_text = event[\"message\"][\"text\"]\n      output_text = input_text\n    end\n\n    client = LineClient.new(CHANNEL_ACCESS_TOKEN, OUTBOUND_PROXY)\n    res = client.reply(replyToken, output_text)\n\n    if res.status == 200\n      logger.info({success: res})\n    else\n      logger.info({fail: res})\n    end\n\n    render :nothing => true, status: :ok\n  end\n\n  private\n  # verify access from LINE\n  def is_validate_signature\n    signature = request.headers[\"X-LINE-Signature\"]\n    http_request_body = request.raw_post\n    hash = OpenSSL::HMAC::digest(OpenSSL::Digest::SHA256.new, CHANNEL_SECRET, http_request_body)\n    signature_answer = Base64.strict_encode64(hash)\n    signature == signature_answer\n  end\nend\n```\n\n## \u30eb\u30fc\u30c8\u8a2d\u5b9a\n```rb:config/routes.rb\nRails.application.routes.draw do\n  post '/callback' => 'webhook#callback'\nend\n\n```\n\n## heroku\n### fixie\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nheroku\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u6210\u5f8c\u3001fixie\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n```\nheroku addons:create fixie:tricycle\n```\n\n### \u8a2d\u5b9a\u3092\u78ba\u8a8d\n\n* Proxy URL\n* Outbound IPs\n\n\u3092\u78ba\u8a8d\u3002\n\n\u3053\u3061\u3089\u3082\u5f8c\u307b\u3069\u8a2d\u5b9a\u3059\u308b\u306e\u3067\u4efb\u610f\u306e\u5834\u6240\u306b\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u203b\u53c2\u8003\nhttp://qiita.com/yuya_takeyama/items/0660a59d13e2cd0b2516\n\n## \u30ad\u30fc\u8a2d\u5b9a\uff08Line\u7ba1\u7406\u753b\u9762\uff09\nhttps://business.line.me/ja/\n\u304b\u3089\u4f5c\u6210\u3057\u305fMessaging API\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u306b\u9077\u79fb\u3057\u307e\u3059\u3002\n\n### Outbound Ips\nServer IP Whitelist\u306b\u30e1\u30e2\u3057\u305fOutboud Ips\u3092\u8a18\u8ff0\u3057\u307e\u3059\n\n### Webhook URL\nBasic Infomation > Webhook URL\n\u306b\u3001\u4ee5\u4e0b\u3092\u8a2d\u5b9a\u3002\n\n```\nhttps://{\u3054\u81ea\u8eab\u306eheroku\u30a2\u30d7\u30ea\u540d}.herokuapp.com:443/callback\n```\n\n## \u30ad\u30fc\u8a2d\u5b9a\uff08heroku\uff09\nheroku\u306b\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\n\n```\nheroku config:add OUTBOUND_PROXY = '\u5148\u307b\u3069\u30e1\u30e2\u3057\u305f\u8a2d\u5b9a\u5024'\nheroku config:add CHANNEL_SECRET = '\u5148\u307b\u3069\u30e1\u30e2\u3057\u305f\u8a2d\u5b9a\u5024'\nheroku config:add CHANNEL_ACCESS_TOKEN = '\u5148\u307b\u3069\u30e1\u30e2\u3057\u305f\u8a2d\u5b9a\u5024'\n```\n\n***\n\n# \u6319\u52d5\u78ba\u8a8d\n\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u304a\u3046\u3080\u8fd4\u3057\u3092\u884c\u3046Bot\u306e\u4f5c\u6210\u304c\u3067\u304d\u307e\u3059\u3002\n![Screenshot 2016-10-10 12.19.17.png](https://qiita-image-store.s3.amazonaws.com/0/64769/662cccc8-2b97-6990-2d25-9fdbdc9782c9.png)\n\n\n\n"}