{"context": "\n\nTL;DR\niOS\u6a19\u6e96Mapkit\u306b\u306f\u3001\u5b9f\u306f\u3001\u81ea\u7136\u8a00\u8a9e\uff08\u4f8b\uff1a\u30b3\u30f3\u30d3\u30cb \u65b0\u5bbf\uff09\u3067\u30d7\u30ec\u30a4\u30b9\u691c\u7d22\u304c\u3067\u304d\u308bMKLocalSearch\u304c\u5b58\u5728\u3057\u307e\u3059\uff01\nGoogle Places API\u307b\u3069\u306e\u7cbe\u5ea6\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30af\u30ec\u30ab\u767b\u9332\u306a\u3069\u306e\u9762\u5012\u306a\u624b\u7d9a\u304d\u3092\u8e0f\u307e\u305a\u306b\u5229\u7528\u3067\u304d\u308b\u4fbf\u5229\u306aAPI\u3067\u3059\u3002\n\u305d\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002Swift 3.0\u3067\u3059\u3002\n\n\u6e96\u5099\n\u307e\u305aMKPlacemark\u3092\u62e1\u5f35\u3057\u307e\u3059\u3002\nMKPlacemark\u306f\u3001\u90fd\u9053\u5e9c\u770c\u3001\u5e02\u533a\u753a\u6751\u3001\u756a\u5730\u306a\u3069\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u304c\u3001\n\u300c\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u5343\u99c4\u30f6\u8c371-2-3\u300d\u306e\u3088\u3046\u306a\u51fa\u529b\u3092\u3059\u308b\u306b\u306f\u3001\u3053\u308c\u3089\u3072\u3068\u3064\u3072\u3068\u3064\u9023\u7d50\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n\u305d\u3053\u3067address\u3068\u3044\u3046Computed Property\u3092\u6301\u305f\u305b\u307e\u3059\u3002\nimport MapKit\n\nextension MKPlacemark {\n    var address: String {\n        let components = [self.administrativeArea, self.locality, self.thoroughfare, self.subThoroughfare]       \n        return components.flatMap { $0 }.joined(separator: \"\")\n    }\n}\n\n\u82f1\u8a9e\u306e\u5834\u5408\u306f\u3001\u2193\u306e\u8868\u8a18\u3067\u3059\u306d\u3002\nreturn components.reversed().flatMap{ $0 }.joined(separator: \",\")\n\n\n\u691c\u7d22\u30e1\u30bd\u30c3\u30c9\n\u3053\u3053\u3067\u7528\u610f\u3057\u305f\u5f15\u6570\u306f2\u3064\u3067\u3059\u3002\nquery\u306b\u306f\u81ea\u7136\u8a00\u8a9e\uff08\u4f8b\uff1a\u30b3\u30f3\u30d3\u30cb\u3000\u65b0\u5bbf\uff09\u3092\u6e21\u3057\u3001region\u306b\u306fMKCoordinateRegion\u3092\u6e21\u3059\u3068\u30d2\u30f3\u30c8\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u3001\u691c\u7d22\u7cbe\u5ea6\u306e\u5411\u4e0a\u304c\u898b\u8fbc\u3081\u307e\u3059\uff08\u4efb\u610f\uff09\u3002\nfunc search(query: String, withRegion region: MKCoordinateRegion?){\n    let request = MKLocalSearchRequest()\n    request.naturalLanguageQuery = query\n\n    if let region = region {\n        request.region = region\n    }\n\n    MKLocalSearch(request: request).start(completionHandler: {\n        (response: MKLocalSearchResponse?, error: NSError?) in\n        // Error\n        if error != nil {\n            return\n        }\n\n        // Success\n        guard let data = response?.mapItems where data.isEmpty == false else { return }\n\n        data.forEach {\n            if let name = $0.name {\n                // Name\n                print(\"name : \\(name)\")\n\n                // Coordinate\n                print(\"coordinate : \\($0.placemark.coordinate.latitude), \\($0.placemark.coordinate.longitude)\")\n\n                // Address(Computed)\n                print(\"address : \\($0.placemark.address)\")\n            }\n        }\n    })\n}\n\n\n\u57fa\u6e96\u3068\u306a\u308bRegion\u3092\u6e21\u3057\u3001\u691c\u7d22\u5b9f\u884c\uff01\n\u691c\u7d22\u306b\u306f\u3001\u5ea7\u6a19\u3068\u691c\u7d22\u7bc4\u56f2\u306eregion\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nlet coordinate = CLLocationCoordinate2DMake(35.695978, 139.689340) // \u65b0\u5bbf\u30d5\u30ed\u30f3\u30c8\u30bf\u30ef\u30fc\nlet region = MKCoordinateRegionMakeWithDistance(coordinate, 1000.0, 1000.0) // 1km * 1km\nsearch(query: \"\u30ab\u30d5\u30a7\", withRegion: region)\n\n\n\u7d50\u679c\n[MKMapItem]\u304c\u691c\u7d22\u7d50\u679c\u3068\u3057\u3066\u975e\u540c\u671f\u7684\u306b\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\nname : Fungo\ncoordinate : 35.6914712, 139.687712\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf6\u4e01\u76ee16\u756a7\u53f7\n\nname : PAULBASSETT\u65b0\u5bbf\u5e97\ncoordinate : 35.6930069, 139.6953505\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee26\u756a2\u53f7\n\nname : \u30ab\u30d5\u30a7\u30fb\u30a2\u30de\u30c6\u30a3\u65b0\u5bbf\u30eb\u30df\u30cd1\u5e97\ncoordinate : 35.6892311, 139.6993627\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee1\u756a5\u53f7\n\nname : \u30bb\u30f3\u30bf\u30fc\u30ab\u30d5\u30a7\u65b0\u5bbf\u5e97\ncoordinate : 35.6915733, 139.6996091\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee1\u756a3\u53f7\n\nname : \u30ab\u30d5\u30a7\u30fb\u30b3\u30e0\u30b5\ncoordinate : 35.6914787, 139.7018157\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u65b0\u5bbf3\u4e01\u76ee26\u756a6\u53f7\n\nname : \u9b54\u6cd5\u306e\u56fd\u306e\u30a2\u30ea\u30b9\ncoordinate : 35.6925427, 139.6986577\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee5\u756a1\u53f7\n\nname : \u4f46\u99ac\u5c4b\u73c8\u7432\u5e97 \u672c\u5e97\ncoordinate : 35.6927019, 139.6997026\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee2\u756a6\u53f7\n\nname : \u30ab\u30d5\u30a7&\u30df\u30fc\u30eb \u30e0\u30b8\ncoordinate : 35.6926239, 139.7036408\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u65b0\u5bbf3\u4e01\u76ee15\u756a15\u53f7\n\nname : \u30ab\u30d5\u30a7\u30a4\u30eb\u30e2\u65b0\u5bbf\u30df\u30ed\u30fc\u30c9\u5e97\ncoordinate : 35.6915733, 139.6996091\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee1\u756a3\u53f7\n\nname : cafe89\ncoordinate : 35.6897994, 139.6976566\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee11\u756a11\u53f7\n\n\u3042\u3068\u306f\u3001Map\u306bannotation\u3092\u7acb\u3066\u308b\u306a\u308a\u3001Cell\u306b\u8868\u793a\u3059\u308b\u306a\u308a\u3057\u3066\u304f\u3060\u3055\u3044\uff01\n# TL;DR\niOS\u6a19\u6e96Mapkit\u306b\u306f\u3001\u5b9f\u306f\u3001\u81ea\u7136\u8a00\u8a9e\uff08\u4f8b\uff1a\u30b3\u30f3\u30d3\u30cb \u65b0\u5bbf\uff09\u3067\u30d7\u30ec\u30a4\u30b9\u691c\u7d22\u304c\u3067\u304d\u308bMKLocalSearch\u304c\u5b58\u5728\u3057\u307e\u3059\uff01\nGoogle Places API\u307b\u3069\u306e\u7cbe\u5ea6\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u30af\u30ec\u30ab\u767b\u9332\u306a\u3069\u306e\u9762\u5012\u306a\u624b\u7d9a\u304d\u3092\u8e0f\u307e\u305a\u306b\u5229\u7528\u3067\u304d\u308b\u4fbf\u5229\u306aAPI\u3067\u3059\u3002\n\u305d\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002Swift 3.0\u3067\u3059\u3002\n\n# \u6e96\u5099\n\u307e\u305aMKPlacemark\u3092\u62e1\u5f35\u3057\u307e\u3059\u3002\n\nMKPlacemark\u306f\u3001\u90fd\u9053\u5e9c\u770c\u3001\u5e02\u533a\u753a\u6751\u3001\u756a\u5730\u306a\u3069\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u304c\u3001\n\u300c\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u5343\u99c4\u30f6\u8c371-2-3\u300d\u306e\u3088\u3046\u306a\u51fa\u529b\u3092\u3059\u308b\u306b\u306f\u3001\u3053\u308c\u3089\u3072\u3068\u3064\u3072\u3068\u3064\u9023\u7d50\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n\n\u305d\u3053\u3067address\u3068\u3044\u3046Computed Property\u3092\u6301\u305f\u305b\u307e\u3059\u3002\n\n```swift\nimport MapKit\n```\n\n```swift\nextension MKPlacemark {\n    var address: String {\n        let components = [self.administrativeArea, self.locality, self.thoroughfare, self.subThoroughfare]       \n        return components.flatMap { $0 }.joined(separator: \"\")\n    }\n}\n```\n\n\u82f1\u8a9e\u306e\u5834\u5408\u306f\u3001\u2193\u306e\u8868\u8a18\u3067\u3059\u306d\u3002\n\n```swift\nreturn components.reversed().flatMap{ $0 }.joined(separator: \",\")\n```\n\n\n# \u691c\u7d22\u30e1\u30bd\u30c3\u30c9\n\u3053\u3053\u3067\u7528\u610f\u3057\u305f\u5f15\u6570\u306f2\u3064\u3067\u3059\u3002\nquery\u306b\u306f\u81ea\u7136\u8a00\u8a9e\uff08\u4f8b\uff1a\u30b3\u30f3\u30d3\u30cb\u3000\u65b0\u5bbf\uff09\u3092\u6e21\u3057\u3001region\u306b\u306fMKCoordinateRegion\u3092\u6e21\u3059\u3068\u30d2\u30f3\u30c8\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u3001\u691c\u7d22\u7cbe\u5ea6\u306e\u5411\u4e0a\u304c\u898b\u8fbc\u3081\u307e\u3059\uff08\u4efb\u610f\uff09\u3002\n\n```swift\nfunc search(query: String, withRegion region: MKCoordinateRegion?){\n    let request = MKLocalSearchRequest()\n    request.naturalLanguageQuery = query\n    \n    if let region = region {\n        request.region = region\n    }\n    \n    MKLocalSearch(request: request).start(completionHandler: {\n        (response: MKLocalSearchResponse?, error: NSError?) in\n        // Error\n        if error != nil {\n            return\n        }\n        \n        // Success\n        guard let data = response?.mapItems where data.isEmpty == false else { return }\n\n        data.forEach {\n            if let name = $0.name {\n                // Name\n                print(\"name : \\(name)\")\n                \n                // Coordinate\n                print(\"coordinate : \\($0.placemark.coordinate.latitude), \\($0.placemark.coordinate.longitude)\")\n                \n                // Address(Computed)\n                print(\"address : \\($0.placemark.address)\")\n            }\n        }\n    })\n}\n```\n\n# \u57fa\u6e96\u3068\u306a\u308bRegion\u3092\u6e21\u3057\u3001\u691c\u7d22\u5b9f\u884c\uff01\n\u691c\u7d22\u306b\u306f\u3001\u5ea7\u6a19\u3068\u691c\u7d22\u7bc4\u56f2\u306eregion\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```swift\nlet coordinate = CLLocationCoordinate2DMake(35.695978, 139.689340) // \u65b0\u5bbf\u30d5\u30ed\u30f3\u30c8\u30bf\u30ef\u30fc\nlet region = MKCoordinateRegionMakeWithDistance(coordinate, 1000.0, 1000.0) // 1km * 1km\nsearch(query: \"\u30ab\u30d5\u30a7\", withRegion: region)\n```\n\n# \u7d50\u679c\n[MKMapItem]\u304c\u691c\u7d22\u7d50\u679c\u3068\u3057\u3066\u975e\u540c\u671f\u7684\u306b\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\n```\nname : Fungo\ncoordinate : 35.6914712, 139.687712\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf6\u4e01\u76ee16\u756a7\u53f7\n\nname : PAULBASSETT\u65b0\u5bbf\u5e97\ncoordinate : 35.6930069, 139.6953505\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee26\u756a2\u53f7\n\nname : \u30ab\u30d5\u30a7\u30fb\u30a2\u30de\u30c6\u30a3\u65b0\u5bbf\u30eb\u30df\u30cd1\u5e97\ncoordinate : 35.6892311, 139.6993627\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee1\u756a5\u53f7\n\nname : \u30bb\u30f3\u30bf\u30fc\u30ab\u30d5\u30a7\u65b0\u5bbf\u5e97\ncoordinate : 35.6915733, 139.6996091\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee1\u756a3\u53f7\n\nname : \u30ab\u30d5\u30a7\u30fb\u30b3\u30e0\u30b5\ncoordinate : 35.6914787, 139.7018157\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u65b0\u5bbf3\u4e01\u76ee26\u756a6\u53f7\n\nname : \u9b54\u6cd5\u306e\u56fd\u306e\u30a2\u30ea\u30b9\ncoordinate : 35.6925427, 139.6986577\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee5\u756a1\u53f7\n\nname : \u4f46\u99ac\u5c4b\u73c8\u7432\u5e97 \u672c\u5e97\ncoordinate : 35.6927019, 139.6997026\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee2\u756a6\u53f7\n\nname : \u30ab\u30d5\u30a7&\u30df\u30fc\u30eb \u30e0\u30b8\ncoordinate : 35.6926239, 139.7036408\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u65b0\u5bbf3\u4e01\u76ee15\u756a15\u53f7\n\nname : \u30ab\u30d5\u30a7\u30a4\u30eb\u30e2\u65b0\u5bbf\u30df\u30ed\u30fc\u30c9\u5e97\ncoordinate : 35.6915733, 139.6996091\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee1\u756a3\u53f7\n\nname : cafe89\ncoordinate : 35.6897994, 139.6976566\naddress : \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u897f\u65b0\u5bbf1\u4e01\u76ee11\u756a11\u53f7\n```\n\n\u3042\u3068\u306f\u3001Map\u306bannotation\u3092\u7acb\u3066\u308b\u306a\u308a\u3001Cell\u306b\u8868\u793a\u3059\u308b\u306a\u308a\u3057\u3066\u304f\u3060\u3055\u3044\uff01\n", "tags": ["Swift", "iOS", "Objective-C", "Xcode", "Swift3.0"]}