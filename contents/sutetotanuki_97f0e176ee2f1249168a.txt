{"tags": ["Ruby", "ZooKeeper"], "context": " More than 1 year has passed since last update.\nhttps://github.com/slyphon/zk\n\n\n\u306f\u307e\u308a\u3069\u3053\u308d\n\nget(\"/path\", watch: true)\u3092\u4f55\u56de\u767b\u9332\u3057\u3066\u3082\u4e00\u56de\u3060\u3051\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3002(\u30bd\u30fc\u30b9\u30b3\u30e1\u30f3\u30c8\u3088\u308a)\nWatcher\u306ecallback\u5185\u306f\u3001\u4f8b\u5916\u304c\u3064\u3076\u3055\u308c\u308b\u3002\ncreate\u3059\u308b\u3068\u304d\u306b\u9593\u306epath\u304c\u7121\u3044\u3068Process\u304c\u3068\u307e\u308b\u3002\u3002\n\n\ncreate\nzk.create(\"/test\", \"abc\")\n# \uff12\u756a\u76ee\u306e\u8981\u7d20\u306fznode\u306e\u72b6\u614b\nzk.get(\"/test\") #=> [\"abc\", #<Zookeeper::Stat>]\n\n\n\u30aa\u30d7\u30b7\u30e7\u30f3\n\nignore\n# \u65e2\u306b\u30ce\u30fc\u30c9\u304c\u3042\u3063\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\nzk.create(\"/test\", ignore: :node_exists)\n\n# \u9014\u4e2d\u306e\u30ce\u30fc\u30c9\u304c\u7121\u304f\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\nzk.create(\"/test/abc\", ignore: :no_node)\n\n\nephemeral\n# Ephemeral\u30ce\u30fc\u30c9\u3068\u3057\u3066\u4f5c\u6210\u3059\u308b\nzk.create('/ephe', ephemeral: true)\n\n\nor\n# :set\u3068\u6e21\u3059\u3068\u9014\u4e2d\u306epash\u3092\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u3002\n# sequential\u3068ehemeral\u304c\u3060\u3081\uff1f(\u30bd\u30fc\u30b9\u306e\u30b3\u30e1\u30f3\u30c8\u3088\u308a)\nzk.create('/foo/bar/text', or: :set) #=> /foo/bar \u304c\u7121\u304f\u3066\u3082\u4f5c\u3089\u308c\u308b\u3002\n\n\nStat\nznode\u306e\u5024\u3068\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u53d6\u5f97\u3059\u308b\n# \u914d\u5217\u3067 [value, stat] \u3068\u8fd4\u3055\u308c\u308b\nvalue, stat = zk.get(\"/path\")\n\n# Ephemerarl\u304b\u3069\u3046\u304b\uff1f\nstat.ephemeral? \n\n\nLocker\nLock\u306b\u306f\u4ee5\u4e0b\u306e\u4e8c\u3064\u306etype\u304c\u3042\u308b\ndefault znode\u3092\u304d\u3081\u308c\u308b\u3000\n\ndefault znode\u3092\u5909\u66f4\u3059\u308b\nZK::Locker.default_root_lock_node = \"/abc\"\n\n\nexclusives_locker\n\u666e\u901a\u306e\u30ed\u30c3\u30af\n\n\u4f7f\u3044\u65b9\n# \u6ce8) \u30ed\u30c3\u30af\u3092\u3068\u3063\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3057\u304bunlock\u3067\u304d\u306a\u3044\nlocker = zk.locker('hoge')\nif locker.lock\n  # do something\n  locker.unlock\nend\n\n\n\nshared_locker\n\u3088\u304f\u308f\u304b\u3089\u306a\u3044\n\nevent\u3067\u3068\u308c\u308b\u60c5\u5831\nzk.register(path) do |event|\n  # watch\u5bfe\u8c61\u306enode\u304c\u4f5c\u3089\u308c\u305f\uff1f\n  event.node_created?\n\n  # watch\u5bfe\u8c61\u306enode\u306b\u5909\u66f4?\n  event.node_changed?\nend\n\n\nfind\n\u6307\u5b9a\u3057\u305f\u30ce\u30fc\u30c9\u306b\u5bfe\u3057\u9010\u6b21\u5b9f\u884c\u3057\u3066\u3044\u304f\u3002\nzk.find(\"/root\") do |path|\n  p path # \u3053\u3053\u3067\u51e6\u7406\u3092\u5b9f\u884c\u3057\u3066\u3044\u304f\n\n  # abc\u4ee5\u4e0b\u306f\u30c8\u30e9\u30d0\u30fc\u30b9\u3057\u306a\u3044\u3002\n  ZK::Find.prune if path == \"/root/abc\"\nend\n\n\n\u5b50\u30ce\u30fc\u30c9\u306e\u5909\u66f4\u3092\u5e38\u306b\u76e3\u8996\u3059\u308b\u3002\n\u203b event => \u518d\u5ea6event\u767b\u9332\u307e\u3067\u306eevent\u306f\u62fe\u3048\u306a\u3044\n\u2028zk = ZK.new\n\n# \u5b50\u30ce\u30fc\u30c9\u306b\u8ffd\u52a0\u30fb\u524a\u9664\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u5b9f\u884c\u3055\u308c\u308b\u30d6\u30ed\u30c3\u30af\u3092\u767b\u9332\nzk.register(\"/test1\") do |event|\n  p event\n  # \u4e00\u5ea6\u3088\u3070\u308c\u308b\u3068\u3001Watcher\u306e\u767b\u9332\u304c\u6d88\u3055\u308c\u308b\u306e\u3067\u518d\u5ea6\u767b\u9332\n  zk.children(\"/test1\", watch: true)\nend\n\n# watch\u958b\u59cb\nzk.children(\"/test1\", watch: true)\n\n* https://github.com/slyphon/zk\n\n# \u306f\u307e\u308a\u3069\u3053\u308d\n* get(\"/path\", watch: true)\u3092\u4f55\u56de\u767b\u9332\u3057\u3066\u3082\u4e00\u56de\u3060\u3051\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\u3002(\u30bd\u30fc\u30b9\u30b3\u30e1\u30f3\u30c8\u3088\u308a)\n* Watcher\u306ecallback\u5185\u306f\u3001\u4f8b\u5916\u304c\u3064\u3076\u3055\u308c\u308b\u3002\n* create\u3059\u308b\u3068\u304d\u306b\u9593\u306epath\u304c\u7121\u3044\u3068Process\u304c\u3068\u307e\u308b\u3002\u3002\n\n\n# create\n\n```ruby:\nzk.create(\"/test\", \"abc\")\n# \uff12\u756a\u76ee\u306e\u8981\u7d20\u306fznode\u306e\u72b6\u614b\nzk.get(\"/test\") #=> [\"abc\", #<Zookeeper::Stat>]\n```\n\n## \u30aa\u30d7\u30b7\u30e7\u30f3\n### ignore\n```ruby:\n# \u65e2\u306b\u30ce\u30fc\u30c9\u304c\u3042\u3063\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\nzk.create(\"/test\", ignore: :node_exists)\n\n# \u9014\u4e2d\u306e\u30ce\u30fc\u30c9\u304c\u7121\u304f\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\nzk.create(\"/test/abc\", ignore: :no_node)\n```\n\n### ephemeral\n```ruby:\n# Ephemeral\u30ce\u30fc\u30c9\u3068\u3057\u3066\u4f5c\u6210\u3059\u308b\nzk.create('/ephe', ephemeral: true)\n```\n### or\n```ruby:\n# :set\u3068\u6e21\u3059\u3068\u9014\u4e2d\u306epash\u3092\u751f\u6210\u3057\u3066\u304f\u308c\u308b\u3002\n# sequential\u3068ehemeral\u304c\u3060\u3081\uff1f(\u30bd\u30fc\u30b9\u306e\u30b3\u30e1\u30f3\u30c8\u3088\u308a)\nzk.create('/foo/bar/text', or: :set) #=> /foo/bar \u304c\u7121\u304f\u3066\u3082\u4f5c\u3089\u308c\u308b\u3002\n```\n\n\n# Stat\nznode\u306e\u5024\u3068\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u53d6\u5f97\u3059\u308b\n\n```ruby:\n# \u914d\u5217\u3067 [value, stat] \u3068\u8fd4\u3055\u308c\u308b\nvalue, stat = zk.get(\"/path\")\n\n# Ephemerarl\u304b\u3069\u3046\u304b\uff1f\nstat.ephemeral? \n```\n\n# Locker\nLock\u306b\u306f\u4ee5\u4e0b\u306e\u4e8c\u3064\u306etype\u304c\u3042\u308b\ndefault znode\u3092\u304d\u3081\u308c\u308b\u3000\n\n## default znode\u3092\u5909\u66f4\u3059\u308b\n```ruby:\nZK::Locker.default_root_lock_node = \"/abc\"\n```\n\n\n## exclusives_locker\n\u666e\u901a\u306e\u30ed\u30c3\u30af\n\n### \u4f7f\u3044\u65b9\n```ruby:\n# \u6ce8) \u30ed\u30c3\u30af\u3092\u3068\u3063\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3057\u304bunlock\u3067\u304d\u306a\u3044\nlocker = zk.locker('hoge')\nif locker.lock\n  # do something\n  locker.unlock\nend\n\n```\n\n## shared_locker\n\u3088\u304f\u308f\u304b\u3089\u306a\u3044\n\n# event\u3067\u3068\u308c\u308b\u60c5\u5831\n```ruby:\nzk.register(path) do |event|\n  # watch\u5bfe\u8c61\u306enode\u304c\u4f5c\u3089\u308c\u305f\uff1f\n  event.node_created?\n\n  # watch\u5bfe\u8c61\u306enode\u306b\u5909\u66f4?\n  event.node_changed?\nend\n```\n\n# find\n\u6307\u5b9a\u3057\u305f\u30ce\u30fc\u30c9\u306b\u5bfe\u3057\u9010\u6b21\u5b9f\u884c\u3057\u3066\u3044\u304f\u3002\n\n```ruby:\nzk.find(\"/root\") do |path|\n  p path # \u3053\u3053\u3067\u51e6\u7406\u3092\u5b9f\u884c\u3057\u3066\u3044\u304f\n\n  # abc\u4ee5\u4e0b\u306f\u30c8\u30e9\u30d0\u30fc\u30b9\u3057\u306a\u3044\u3002\n  ZK::Find.prune if path == \"/root/abc\"\nend\n```\n\n\n# \u5b50\u30ce\u30fc\u30c9\u306e\u5909\u66f4\u3092\u5e38\u306b\u76e3\u8996\u3059\u308b\u3002\n\u203b event => \u518d\u5ea6event\u767b\u9332\u307e\u3067\u306eevent\u306f\u62fe\u3048\u306a\u3044\n\n```ruby:\n\u2028zk = ZK.new\n\n# \u5b50\u30ce\u30fc\u30c9\u306b\u8ffd\u52a0\u30fb\u524a\u9664\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u5b9f\u884c\u3055\u308c\u308b\u30d6\u30ed\u30c3\u30af\u3092\u767b\u9332\nzk.register(\"/test1\") do |event|\n  p event\n  # \u4e00\u5ea6\u3088\u3070\u308c\u308b\u3068\u3001Watcher\u306e\u767b\u9332\u304c\u6d88\u3055\u308c\u308b\u306e\u3067\u518d\u5ea6\u767b\u9332\n  zk.children(\"/test1\", watch: true)\nend\n\n# watch\u958b\u59cb\nzk.children(\"/test1\", watch: true)\n```\n"}