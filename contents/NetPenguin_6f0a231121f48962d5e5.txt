{"context": " More than 1 year has passed since last update.TransactionSynchronizationManager \u3092\u4f7f\u3046\u3068\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b(\u3055\u308c\u305f)\u6642\u306b\u5b9f\u884c\u3055\u308c\u308b\u51e6\u7406\u3092\u767b\u9332\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u7d10\u4ed8\u3051\u308b\u30ea\u30bd\u30fc\u30b9\u3092\u4fdd\u6301\u3055\u305b\u3066\u304a\u304f\u3053\u3068\u3082\u53ef\u80fd\u3002\nif (TransactionSynchronizationManager.isSynchronizationActive()) {\n    TransactionSynchronizationManager.registerSynchronization(\n        new TransactionSynchronizationAdapter() {\n            @Override\n            public void afterCommit() {\n                foo();                \n            }\n        }\n    );\n} else {\n    foo();\n}\n\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5185\u304b\u3069\u3046\u304b\u3092 isSynchronizationActive \u3067\u78ba\u8a8d\u3057\u3066\u304b\u3089\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5185\u3060\u3063\u305f\u5834\u5408\u306f registerSynchronization \u3092\u4f7f\u7528\u3057\u3066\u51e6\u7406\u3092\u767b\u9332\u3057\u307e\u3059\u3002\nDB \u306f\u4f7f\u308f\u306a\u304f\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u3082\u7121\u3044\u3051\u3069\u3001@Transactional \u3067\u51e6\u7406\u3092\u533a\u5207\u3063\u3066\u3001TransactionSynchronizationManager \u3092\u4f7f\u7528\u3057\u305f\u3044\u3068\u3044\u3046\u4eba\u306f\u3001\u306a\u306b\u3082\u7ba1\u7406\u3057\u306a\u3044 TransactionManager \u3092\u3064\u304f\u308b\u3068\u826f\u3044\u3067\u3059\u3002\u4ee5\u4e0b\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3059\u3002\n\nNullTransactionManager.java\npublic class NullTransactionManager extends AbstractPlatformTransactionManager {\n    @Override\n    protected Object doGetTransaction() {\n        Thread current = Thread.currentThread();\n        return current.getName() + '-' + current.getId();\n    }\n\n    @Override\n    protected void doBegin(Object transaction, TransactionDefinition definition) {\n        // N/A\n    }\n\n    @Override\n    protected void doCommit(DefaultTransactionStatus status) {\n        // N/A\n    }\n\n    @Override\n    protected void doRollback(DefaultTransactionStatus status) {\n        // N/A\n    }\n}\n\n\n\nTransactionConfiguration.java\n@Configuration\n@EnableTransactionManagement\npublic class TransactionConfiguration {\n    @Bean\n    public PlatformTransactionManager platformTransactionManager() {\n        return new NullTransactionManager();\n    }\n}\n\n\n\nTransactionSynchronizationManager \u3092\u4f7f\u3046\u3068\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u304c\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b(\u3055\u308c\u305f)\u6642\u306b\u5b9f\u884c\u3055\u308c\u308b\u51e6\u7406\u3092\u767b\u9332\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306b\u7d10\u4ed8\u3051\u308b\u30ea\u30bd\u30fc\u30b9\u3092\u4fdd\u6301\u3055\u305b\u3066\u304a\u304f\u3053\u3068\u3082\u53ef\u80fd\u3002\n\n```java\nif (TransactionSynchronizationManager.isSynchronizationActive()) {\n    TransactionSynchronizationManager.registerSynchronization(\n        new TransactionSynchronizationAdapter() {\n            @Override\n            public void afterCommit() {\n                foo();                \n            }\n        }\n    );\n} else {\n    foo();\n}\n\n```\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5185\u304b\u3069\u3046\u304b\u3092 `isSynchronizationActive` \u3067\u78ba\u8a8d\u3057\u3066\u304b\u3089\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5185\u3060\u3063\u305f\u5834\u5408\u306f `registerSynchronization` \u3092\u4f7f\u7528\u3057\u3066\u51e6\u7406\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\nDB \u306f\u4f7f\u308f\u306a\u304f\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30f3\u30c6\u30ca\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u3082\u7121\u3044\u3051\u3069\u3001`@Transactional` \u3067\u51e6\u7406\u3092\u533a\u5207\u3063\u3066\u3001TransactionSynchronizationManager \u3092\u4f7f\u7528\u3057\u305f\u3044\u3068\u3044\u3046\u4eba\u306f\u3001\u306a\u306b\u3082\u7ba1\u7406\u3057\u306a\u3044 TransactionManager \u3092\u3064\u304f\u308b\u3068\u826f\u3044\u3067\u3059\u3002\u4ee5\u4e0b\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3059\u3002\n\n```java:NullTransactionManager.java\npublic class NullTransactionManager extends AbstractPlatformTransactionManager {\n    @Override\n    protected Object doGetTransaction() {\n        Thread current = Thread.currentThread();\n        return current.getName() + '-' + current.getId();\n    }\n\n    @Override\n    protected void doBegin(Object transaction, TransactionDefinition definition) {\n        // N/A\n    }\n\n    @Override\n    protected void doCommit(DefaultTransactionStatus status) {\n        // N/A\n    }\n\n    @Override\n    protected void doRollback(DefaultTransactionStatus status) {\n        // N/A\n    }\n}\n```\n\n```java:TransactionConfiguration.java\n@Configuration\n@EnableTransactionManagement\npublic class TransactionConfiguration {\n    @Bean\n    public PlatformTransactionManager platformTransactionManager() {\n        return new NullTransactionManager();\n    }\n}\n```\n", "tags": ["Transaction", "Java", "spring"]}