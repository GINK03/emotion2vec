{"context": "\n\n\u5b89\u88dd\n\u900f\u904e homebrew \u5b89\u88dd\u5373\u53ef\n$ brew update\n$ brew install carthage\n\n\n\u57fa\u672c\u6307\u4ee4\n\u53ef\u4ee5\u76f4\u63a5\u8f38\u5165 carthage \u57f7\u884c\uff0c\u770b\u57fa\u672c\u7684\u6307\u4ee4\u96c6\n$ carthage\n\n\u5c31\u6703\u5370\u51fa\u9019\u6a23\u7684\u8cc7\u8a0a\nAvailable commands:\n\n   archive           Archives built frameworks into a zip that Carthage can use\n   bootstrap         Check out and build the project's dependencies\n   build             Build the project's dependencies\n   checkout          Check out the project's dependencies\n   copy-frameworks   In a Run Script build phase, copies each framework specified by a SCRIPT_INPUT_FILE environment variable into the built app bundle\n   fetch             Clones or fetches a Git repository ahead of time\n   help              Display general or command-specific help\n   outdated          Check for compatible updates to the project's dependencies\n   update            Update and rebuild the project's dependencies\n   version           Display the current version of Carthage\n\n\nCartfile\n\u5c31\u50cf Podfile \u4e00\u6a23\uff0c\u9019\u500b\u5de5\u5177\u7684\u8a2d\u5b9a\u6a94\u5c31\u662f Cartfile\n\u5148\u5728\u7d42\u7aef\u6a5f\u88e1\u9762\u9032\u5230 Xcode \u5c08\u6848\u7684\u76ee\u9304\u4e4b\u5f8c\uff0c\nvim Cartfile\n\n\u4f86\u900f\u904e vim \u958b\u59cb\u7de8\u8f2f Cartfile\n\u5167\u5bb9\u5c31\u76f8\u5c0d\u7c21\u55ae\u591a\u4e86\uff0c\u5148\u8a66\u8a66\u770b\u52a0\u5165 Alamofire\n\nCartfile\ngithub \"Alamofire/Alamofire\" ~> 4.4\n\n\n\u63a5\u8457\u5132\u5b58\u9000\u51fa - :wq\n\u4e26\u5728 command line \u57f7\u884c\n$ carthage update\n\n\u5c31\u53ef\u4ee5\u751f\u6210\u53ef\u4ee5\u62d6\u66f3\u9032 Xcode \u7684 framework \u6a94\u3002\n\u5982\u679c\u53ea\u8981 build for iOS \uff0c\u53ef\u4ee5\u52a0\u4e0a flag \u52a0\u4e0a\u9650\u5236\n$ carthage update --platform iOS\n\n\u63a5\u8457\u5c31\u6703\u9678\u7e8c\u5370\u51fa\u4ee5\u4e0b\u7684\u8cc7\u8a0a\uff1a\n*** Fetching Alamofire\n*** Checking out Alamofire at \"4.4.0\"\n*** xcodebuild output can be found in /var/folders/xr/_qcc9bwd2016f0ygl69qrvp80000gn/T/carthage-xcodebuild.7tbiKU.log\n*** Building scheme \"Alamofire iOS\" in Alamofire.xcworkspace\n\n\n\u62c9\u5165\u5c08\u6848\n\u9019\u6642\u5019\u5728\u5c08\u6848\u7684\u9019\u500b\u8def\u5f91\nCarthage/Build/iOS/\n\n\u4e0b\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u4e00\u500b\u53eb\u505a Alamofire.framework \u7684\u6a94\u6848\uff0c\u63a5\u8457\u5c31\u53ef\u4ee5\u628a\u9019\u500b framework \u6a94\u6848\u62d6\u66f3\u9032 Xcode \u88e1\u9762\u7684\u9019\u500b\u5730\u65b9\uff1a\nTarget (pick one) > General > Linked Frameworks and Binaries\n\n\u63a5\u8457\u5728\u96a8\u610f\u7684 Swift \u6a94\u6848\u88e1\u9762\uff0c\u8a66\u8a66\u770b\u80fd\u4e0d\u80fd\u900f\u904e\u81ea\u52d5\u5b8c\u6210 Alamofire \u7684\u65b9\u5f0f\u8f09\u5165\nimport Alamofire\n\n\u5c31\u7b97\u5927\u529f\u544a\u6210\u4e86\u3002\n## \u5b89\u88dd\n\n\u900f\u904e homebrew \u5b89\u88dd\u5373\u53ef\n\n```\n$ brew update\n$ brew install carthage\n```\n\n## \u57fa\u672c\u6307\u4ee4\n\n\u53ef\u4ee5\u76f4\u63a5\u8f38\u5165 `carthage` \u57f7\u884c\uff0c\u770b\u57fa\u672c\u7684\u6307\u4ee4\u96c6\n\n```bash\n$ carthage\n```\n\n\u5c31\u6703\u5370\u51fa\u9019\u6a23\u7684\u8cc7\u8a0a\n\n```shell-session\nAvailable commands:\n\n   archive           Archives built frameworks into a zip that Carthage can use\n   bootstrap         Check out and build the project's dependencies\n   build             Build the project's dependencies\n   checkout          Check out the project's dependencies\n   copy-frameworks   In a Run Script build phase, copies each framework specified by a SCRIPT_INPUT_FILE environment variable into the built app bundle\n   fetch             Clones or fetches a Git repository ahead of time\n   help              Display general or command-specific help\n   outdated          Check for compatible updates to the project's dependencies\n   update            Update and rebuild the project's dependencies\n   version           Display the current version of Carthage\n```\n\n## Cartfile\n\n\u5c31\u50cf Podfile \u4e00\u6a23\uff0c\u9019\u500b\u5de5\u5177\u7684\u8a2d\u5b9a\u6a94\u5c31\u662f Cartfile\n\n\u5148\u5728\u7d42\u7aef\u6a5f\u88e1\u9762\u9032\u5230 Xcode \u5c08\u6848\u7684\u76ee\u9304\u4e4b\u5f8c\uff0c\n\n```\nvim Cartfile\n```\n\n\u4f86\u900f\u904e vim \u958b\u59cb\u7de8\u8f2f Cartfile\n\n\u5167\u5bb9\u5c31\u76f8\u5c0d\u7c21\u55ae\u591a\u4e86\uff0c\u5148\u8a66\u8a66\u770b\u52a0\u5165 Alamofire\n\n```text:Cartfile\ngithub \"Alamofire/Alamofire\" ~> 4.4\n```\n\n\u63a5\u8457\u5132\u5b58\u9000\u51fa - `:wq`\n\n\u4e26\u5728 command line \u57f7\u884c\n\n```bash\n$ carthage update\n```\n\n\u5c31\u53ef\u4ee5\u751f\u6210\u53ef\u4ee5\u62d6\u66f3\u9032 Xcode \u7684 framework \u6a94\u3002\n\n\u5982\u679c\u53ea\u8981 build for iOS \uff0c\u53ef\u4ee5\u52a0\u4e0a flag \u52a0\u4e0a\u9650\u5236\n\n```bash\n$ carthage update --platform iOS\n```\n\n\u63a5\u8457\u5c31\u6703\u9678\u7e8c\u5370\u51fa\u4ee5\u4e0b\u7684\u8cc7\u8a0a\uff1a\n\n```shell-session\n*** Fetching Alamofire\n*** Checking out Alamofire at \"4.4.0\"\n*** xcodebuild output can be found in /var/folders/xr/_qcc9bwd2016f0ygl69qrvp80000gn/T/carthage-xcodebuild.7tbiKU.log\n*** Building scheme \"Alamofire iOS\" in Alamofire.xcworkspace\n```\n\n### \u62c9\u5165\u5c08\u6848\n\n\u9019\u6642\u5019\u5728\u5c08\u6848\u7684\u9019\u500b\u8def\u5f91\n\n```\nCarthage/Build/iOS/\n```\n\n\u4e0b\uff0c\u5c31\u53ef\u4ee5\u770b\u5230\u4e00\u500b\u53eb\u505a `Alamofire.framework` \u7684\u6a94\u6848\uff0c\u63a5\u8457\u5c31\u53ef\u4ee5\u628a\u9019\u500b framework \u6a94\u6848\u62d6\u66f3\u9032 Xcode \u88e1\u9762\u7684\u9019\u500b\u5730\u65b9\uff1a\n\n```\nTarget (pick one) > General > Linked Frameworks and Binaries\n```\n\n\u63a5\u8457\u5728\u96a8\u610f\u7684 Swift \u6a94\u6848\u88e1\u9762\uff0c\u8a66\u8a66\u770b\u80fd\u4e0d\u80fd\u900f\u904e\u81ea\u52d5\u5b8c\u6210 `Alamofire` \u7684\u65b9\u5f0f\u8f09\u5165\n\n```\nimport Alamofire\n```\n\n\u5c31\u7b97\u5927\u529f\u544a\u6210\u4e86\u3002\n", "tags": ["Carthage"]}