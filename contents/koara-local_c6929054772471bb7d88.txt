{"tags": ["Linux", "C", "C++", "GCC"], "context": "__attribute__((constructor)) \u306e\u691c\u8a3c\u3068\u4f7f\u7528\u65b9\u6cd5\u307e\u3068\u3081\nGCC\u306e\u62e1\u5f35\u306e\u305f\u3081\u3001\u3069\u3053\u3067\u3067\u3082\u52d5\u4f5c\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u6ce8\u610f\n\n\u30bd\u30fc\u30b9\u5185\u306b\u542b\u3081\u308b\u5834\u5408\n\nmain.c\n#include <stdio.h>\n\n__attribute__((constructor))\nstatic void constructor() {\n    puts(\"constructor\");\n}\n\n__attribute__((destructor))\nstatic void destructor() {\n    puts(\"destructor\");\n}\n\nint main(int argc, char const* argv[])\n{\n    puts(\"call main\");\n    return 0;\n}\n\n\n\n\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ gcc main.c && ./a.out\nconstructor\ncall main\ndestructor\n\n\n\n\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u30ea\u30f3\u30af\u3059\u308b\u5834\u5408\n\nmain.c\n#include <stdio.h>\n\nint main(int argc, char const* argv[])\n{\n    puts(\"call main\");\n    return 0;\n}\n\n\n\nsharedlib.c\n#include <stdio.h>\n\n__attribute__((constructor))\nstatic void constructor() {\n    puts(\"constructor\");\n}\n\n__attribute__((destructor))\nstatic void destructor() {\n    puts(\"destructor\");\n}\n\n\n\n\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ gcc -shared -fPIC sharedlib.c -o libconstructor.so\n$ gcc main.c -L . -lconstructor\n$ LD_LIBRARY_PATH=. ./a.out\nconstructor\ncall main\ndestructor\n\n\n\nLD_PRELOAD\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\nLD_PRELOAD\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u5f8c\u304b\u3089\u4efb\u610f\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u51e6\u7406\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\n\nmain.c\n#include <stdio.h>\n\nint main(int argc, char const* argv[])\n{\n    puts(\"call main\");\n    return 0;\n}\n\n\n\npreload.c\n#include <stdio.h>\n\n__attribute__((constructor))\nstatic void constructor() {\n    puts(\"constructor\");\n}\n\n__attribute__((destructor))\nstatic void destructor() {\n    puts(\"destructor\");\n}\n\n\n\n\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ gcc main.c && ./a.out\ncall main\n\n$ gcc -shared -fPIC preload.c -o preload.so\n$ LD_PRELOAD=./preload.so ./a.out\nconstructor\ncall main\ndestructor\n\n\n\n__attribute__((constructor)) \u304c\u8907\u6570\u3042\u308b\u5834\u5408\n__attribute__((constructor)) \u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u5834\u5408\u3067\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3059\u308b\u3002\n\uff08\u305f\u3060\u3057\u5b9f\u884c\u9806\u306b\u95a2\u3057\u3066\u306f\u4e0d\u660e\u3001\u5b9f\u884c\u9806\u306b\u4f9d\u5b58\u304c\u3042\u308b\u51e6\u7406\u306f\u907f\u3051\u305f\u307b\u3046\u304c\u3088\u3055\u305d\u3046\uff09\n\nmain.c\n#include <stdio.h>\n\n__attribute__((constructor))\nstatic void constructor1() {\n    puts(\"constructor1\");\n}\n\n__attribute__((destructor))\nstatic void destructor1() {\n    puts(\"destructor1\");\n}\n\nint main(int argc, char const* argv[])\n{\n    puts(\"call main\");\n    return 0;\n}\n\n\n\npreload.c\n#include <stdio.h>\n\n__attribute__((constructor))\nstatic void constructor2() {\n    puts(\"constructor2\");\n}\n\n__attribute__((destructor))\nstatic void destructor2() {\n    puts(\"destructor2\");\n}\n\n\n\n\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ gcc main.c && ./a.out\nconstructor1\ncall main\ndestructor1\n\n$ gcc -shared -fPIC preload.c -o preload.so\n$ LD_PRELOAD=./preload.so ./a.out\nconstructor2\nconstructor1\ncall main\ndestructor1\ndestructor2\n\n\n\n\u53c2\u8003\nmain() \u306e\u524d\u306b\u95a2\u6570\u3092\u547c\u3076 - bk\u30d6\u30ed\u30b0\nc++ - How exactly does attribute((constructor)) work? - Stack Overflow\nGCC \u306e attribute((constructor)) \u3092\u4f7f\u3063\u3066\u307f\u308b\uff1aBook of Days\ngcc - C++ static initialization vs attribute((constructor)) - Stack Overflow\n`__attribute__((constructor))` \u306e\u691c\u8a3c\u3068\u4f7f\u7528\u65b9\u6cd5\u307e\u3068\u3081\nGCC\u306e\u62e1\u5f35\u306e\u305f\u3081\u3001\u3069\u3053\u3067\u3067\u3082\u52d5\u4f5c\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u6ce8\u610f\n\n# \u30bd\u30fc\u30b9\u5185\u306b\u542b\u3081\u308b\u5834\u5408\n\n```c:main.c\n#include <stdio.h>\n\n__attribute__((constructor))\nstatic void constructor() {\n\tputs(\"constructor\");\n}\n\n__attribute__((destructor))\nstatic void destructor() {\n\tputs(\"destructor\");\n}\n\nint main(int argc, char const* argv[])\n{\n\tputs(\"call main\");\n\treturn 0;\n}\n```\n\n```shell-session:\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ gcc main.c && ./a.out\nconstructor\ncall main\ndestructor\n```\n\n# \u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u30ea\u30f3\u30af\u3059\u308b\u5834\u5408\n\n```c:main.c\n#include <stdio.h>\n\nint main(int argc, char const* argv[])\n{\n\tputs(\"call main\");\n\treturn 0;\n}\n```\n\n```c:sharedlib.c\n#include <stdio.h>\n\n__attribute__((constructor))\nstatic void constructor() {\n\tputs(\"constructor\");\n}\n\n__attribute__((destructor))\nstatic void destructor() {\n\tputs(\"destructor\");\n}\n```\n\n```shell-session:\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ gcc -shared -fPIC sharedlib.c -o libconstructor.so\n$ gcc main.c -L . -lconstructor\n$ LD_LIBRARY_PATH=. ./a.out\nconstructor\ncall main\ndestructor\n```\n\n# LD_PRELOAD\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\nLD_PRELOAD\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u5f8c\u304b\u3089\u4efb\u610f\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u51e6\u7406\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\n\n```c:main.c\n#include <stdio.h>\n\nint main(int argc, char const* argv[])\n{\n\tputs(\"call main\");\n\treturn 0;\n}\n```\n\n```c:preload.c\n#include <stdio.h>\n\n__attribute__((constructor))\nstatic void constructor() {\n\tputs(\"constructor\");\n}\n\n__attribute__((destructor))\nstatic void destructor() {\n\tputs(\"destructor\");\n}\n```\n\n```shell-session:\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ gcc main.c && ./a.out\ncall main\n\n$ gcc -shared -fPIC preload.c -o preload.so\n$ LD_PRELOAD=./preload.so ./a.out\nconstructor\ncall main\ndestructor\n```\n\n# `__attribute__((constructor))` \u304c\u8907\u6570\u3042\u308b\u5834\u5408\n\n`__attribute__((constructor))` \u304c\u8907\u6570\u5b58\u5728\u3059\u308b\u5834\u5408\u3067\u3082\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3059\u308b\u3002\n\uff08\u305f\u3060\u3057\u5b9f\u884c\u9806\u306b\u95a2\u3057\u3066\u306f\u4e0d\u660e\u3001\u5b9f\u884c\u9806\u306b\u4f9d\u5b58\u304c\u3042\u308b\u51e6\u7406\u306f\u907f\u3051\u305f\u307b\u3046\u304c\u3088\u3055\u305d\u3046\uff09\n\n```c:main.c\n#include <stdio.h>\n\n__attribute__((constructor))\nstatic void constructor1() {\n\tputs(\"constructor1\");\n}\n\n__attribute__((destructor))\nstatic void destructor1() {\n\tputs(\"destructor1\");\n}\n\nint main(int argc, char const* argv[])\n{\n\tputs(\"call main\");\n\treturn 0;\n}\n```\n\n```c:preload.c\n#include <stdio.h>\n\n__attribute__((constructor))\nstatic void constructor2() {\n\tputs(\"constructor2\");\n}\n\n__attribute__((destructor))\nstatic void destructor2() {\n\tputs(\"destructor2\");\n}\n```\n\n```shell-session:\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\u7d50\u679c\n$ gcc main.c && ./a.out\nconstructor1\ncall main\ndestructor1\n\n$ gcc -shared -fPIC preload.c -o preload.so\n$ LD_PRELOAD=./preload.so ./a.out\nconstructor2\nconstructor1\ncall main\ndestructor1\ndestructor2\n```\n\n# \u53c2\u8003\n[main() \u306e\u524d\u306b\u95a2\u6570\u3092\u547c\u3076 - bk\u30d6\u30ed\u30b0](http://0xcc.net/blog/archives/000091.html)\n[c++ - How exactly does __attribute__((constructor)) work? - Stack Overflow](http://stackoverflow.com/questions/2053029/how-exactly-does-attribute-constructor-work)\n[GCC \u306e __attribute__((constructor)) \u3092\u4f7f\u3063\u3066\u307f\u308b\uff1aBook of Days](http://www4.big.or.jp/~kanai/MT/archives/000507.html)\n[gcc - C++ static initialization vs __attribute__((constructor)) - Stack Overflow](http://stackoverflow.com/questions/8433484/c-static-initialization-vs-attribute-constructor)\n"}