{"tags": ["mqtt", "paho", "Python"], "context": "\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ sudo pip install paho-mqtt\n\n\n\u30b5\u30f3\u30d7\u30eb\n\u4e0b\u8a18\u306e\u4f8b\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306b\u3088\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a8d\u8a3c\u3092\u884c\u3046\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u30d1\u30b9\u30ef\u30fc\u30c9\u8a8d\u8a3c\u3092\u3059\u308b\u3068\u304d\u306fusername\u3068password\u304c\u7d61\u3080\u884c\u3092\u6709\u52b9\u306b\u3057\u3066\u3060\u3055\u3044\u3002\n\n\u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\n current directory/\n   + pub.py\n   + sub.py\n   + cert/\n      + ca.crt              # \u8a8d\u8a3c\u5c40\u306e\u8a3c\u660e\u66f8\n      + client.crt          # \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\n      + client_nopass.key   # \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306e\u79d8\u5bc6\u9375\n\n\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u5ea6\u306b\u30d1\u30b9\u30ef\u30fc\u30c9\u5165\u529b\u304c\u9762\u5012\u306a\u306e\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306e\u79d8\u5bc6\u9375\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u89e3\u9664\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u89e3\u9664\u3057\u3066\u3044\u306a\u3044\u79d8\u5bc6\u9375\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30b3\u30fc\u30c9\u5b9f\u884c\u6642\u306b\u79d8\u5bc6\u9375\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u5165\u529b\u3092\u4fc3\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\npub.py\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport paho.mqtt.client as mqtt\nimport ssl\n\nhost = 'Server\u8a3c\u660e\u66f8\u306eFQDN'\nport = 1883\n### \u30d1\u30b9\u30ef\u30fc\u30c9\u8a8d\u8a3c\u3092\u4f7f\u7528\u3059\u308b\u6642\u306b\u4f7f\u7528\u3059\u308b\n#username = 'mqtt'\n#password = 'mqtt'\n### SSL\nport = 8883\ncacert = './cert/ca.crt'\nclientCert = './cert/client.crt'\nclientKey = './cert/client_nopass.key'\n\ntopic = 'paho/mqtt'\nmessage = 'test message'\n\ndef on_connect(client, userdata, flags, respons_code):\n    \"\"\"broker\u63a5\u7d9a\u6642\u306ecallback\u95a2\u6570\n    \"\"\"\n    print('status {0}'.format(respons_code))\n    client.publish(topic, message)\n\ndef on_publish(client, userdata, mid):\n    \"\"\"\u30e1\u30c3\u30bb\u30fc\u30b8\u3092publish\u3057\u305f\u5f8c\u306ecallback\u95a2\u6570\n    \"\"\"\n    client.disconnect()\n\nif __name__ == '__main__':\n    ### \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\u6642\u306bprotocol v3.1.1\u3092\u6307\u5b9a\n    client = mqtt.Client(protocol=mqtt.MQTTv311)\n    ### \u30d1\u30b9\u30ef\u30fc\u30c9\u8a8d\u8a3c\u3092\u4f7f\u7528\u3059\u308b\u6642\u306b\u4f7f\u7528\u3059\u308b\n    #client.username_pw_set(username, password=password)\n    ### SSL\n    client.tls_set(cacert,\n        certfile = clientCert,\n        keyfile = clientKey,\n        tls_version = ssl.PROTOCOL_TLSv1_2)\n    client.tls_insecure_set(True)\n\n    ### callback function\n    client.on_connect = on_connect\n    client.on_publish = on_publish\n\n    client.connect(host, port=port, keepalive=60)\n    client.loop_forever()\n\n\n\nsub.py\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport paho.mqtt.client as mqtt\nimport ssl\n\nhost = 'Server\u8a3c\u660e\u66f8\u306eFQDN'\nport = 1883\n### \u30d1\u30b9\u30ef\u30fc\u30c9\u8a8d\u8a3c\u3092\u4f7f\u7528\u3059\u308b\u6642\u306b\u4f7f\u7528\u3059\u308b\n#username = 'mqtt'\n#password = 'mqtt'\n# SSL\nport = 8883\ncacert = './cert/ca.crt'\nclientCert = './cert/client.crt'\nclientKey = './cert/client_nopass.key'\n\ntopic = 'paho/mqtt'\n\ndef on_connect(client, userdata, flags, respons_code):\n    \"\"\"broker\u63a5\u7d9a\u6642\u306ecallback\u95a2\u6570\n    \"\"\"\n    print('status {0}'.format(respons_code))\n    client.subscribe(topic)\n\ndef on_message(client, userdata, msg):\n    \"\"\"\u30e1\u30c3\u30bb\u30fc\u30b8\u53d7\u4fe1\u6642\u306ecallback\u95a2\u6570\n    \"\"\"\n    print(msg.topic + ' ' + str(msg.payload))\n\nif __name__ == '__main__':\n    ### \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\u6642\u306bprotocol v3.1.1\u3092\u6307\u5b9a\n    client = mqtt.Client(protocol=mqtt.MQTTv311)\n\n    ### \u30d1\u30b9\u30ef\u30fc\u30c9\u8a8d\u8a3c\u3092\u4f7f\u7528\u3059\u308b\u6642\u306b\u4f7f\u7528\u3059\u308b\n    #client.username_pw_set(username, password=password)\n    ### SSL\n    client.tls_set(cacert,\n        certfile = clientCert,\n        keyfile = clientKey,\n        tls_version = ssl.PROTOCOL_TLSv1_2)\n    client.tls_insecure_set(True)\n\n    ### callback function\n    client.on_connect = on_connect\n    client.on_message = on_message\n\n    client.connect(host, port=port, keepalive=60)\n    client.loop_forever()\n\n\n\n\u53c2\u8003\u30b5\u30a4\u30c8\n\nPaho - Open Source messaging for M2M\n17.3. ssl \u2014 \u30bd\u30b1\u30c3\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3059\u308b TLS/SSL \u30e9\u30c3\u30d1\u30fc \u2014 Python 2.7.x \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\n# \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ sudo pip install paho-mqtt\n```\n\n\n# \u30b5\u30f3\u30d7\u30eb\n\n\u4e0b\u8a18\u306e\u4f8b\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306b\u3088\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a8d\u8a3c\u3092\u884c\u3046\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u30d1\u30b9\u30ef\u30fc\u30c9\u8a8d\u8a3c\u3092\u3059\u308b\u3068\u304d\u306f``username``\u3068``password``\u304c\u7d61\u3080\u884c\u3092\u6709\u52b9\u306b\u3057\u3066\u3060\u3055\u3044\u3002\n\n\n## \u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\n\n```\n current directory/\n   + pub.py\n   + sub.py\n   + cert/\n      + ca.crt              # \u8a8d\u8a3c\u5c40\u306e\u8a3c\u660e\u66f8\n      + client.crt          # \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\n      + client_nopass.key   # \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306e\u79d8\u5bc6\u9375\n```\n\n\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u5ea6\u306b\u30d1\u30b9\u30ef\u30fc\u30c9\u5165\u529b\u304c\u9762\u5012\u306a\u306e\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u8a3c\u660e\u66f8\u306e\u79d8\u5bc6\u9375\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u89e3\u9664\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u89e3\u9664\u3057\u3066\u3044\u306a\u3044\u79d8\u5bc6\u9375\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30b3\u30fc\u30c9\u5b9f\u884c\u6642\u306b\u79d8\u5bc6\u9375\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u5165\u529b\u3092\u4fc3\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n```py:pub.py\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport paho.mqtt.client as mqtt\nimport ssl\n\nhost = 'Server\u8a3c\u660e\u66f8\u306eFQDN'\nport = 1883\n### \u30d1\u30b9\u30ef\u30fc\u30c9\u8a8d\u8a3c\u3092\u4f7f\u7528\u3059\u308b\u6642\u306b\u4f7f\u7528\u3059\u308b\n#username = 'mqtt'\n#password = 'mqtt'\n### SSL\nport = 8883\ncacert = './cert/ca.crt'\nclientCert = './cert/client.crt'\nclientKey = './cert/client_nopass.key'\n\ntopic = 'paho/mqtt'\nmessage = 'test message'\n\ndef on_connect(client, userdata, flags, respons_code):\n    \"\"\"broker\u63a5\u7d9a\u6642\u306ecallback\u95a2\u6570\n    \"\"\"\n    print('status {0}'.format(respons_code))\n    client.publish(topic, message)\n\ndef on_publish(client, userdata, mid):\n    \"\"\"\u30e1\u30c3\u30bb\u30fc\u30b8\u3092publish\u3057\u305f\u5f8c\u306ecallback\u95a2\u6570\n    \"\"\"\n    client.disconnect()\n\nif __name__ == '__main__':\n    ### \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\u6642\u306bprotocol v3.1.1\u3092\u6307\u5b9a\n    client = mqtt.Client(protocol=mqtt.MQTTv311)\n    ### \u30d1\u30b9\u30ef\u30fc\u30c9\u8a8d\u8a3c\u3092\u4f7f\u7528\u3059\u308b\u6642\u306b\u4f7f\u7528\u3059\u308b\n    #client.username_pw_set(username, password=password)\n    ### SSL\n    client.tls_set(cacert,\n        certfile = clientCert,\n        keyfile = clientKey,\n        tls_version = ssl.PROTOCOL_TLSv1_2)\n    client.tls_insecure_set(True)\n\n    ### callback function\n    client.on_connect = on_connect\n    client.on_publish = on_publish\n\n    client.connect(host, port=port, keepalive=60)\n    client.loop_forever()\n```\n\n\n```py:sub.py\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport paho.mqtt.client as mqtt\nimport ssl\n\nhost = 'Server\u8a3c\u660e\u66f8\u306eFQDN'\nport = 1883\n### \u30d1\u30b9\u30ef\u30fc\u30c9\u8a8d\u8a3c\u3092\u4f7f\u7528\u3059\u308b\u6642\u306b\u4f7f\u7528\u3059\u308b\n#username = 'mqtt'\n#password = 'mqtt'\n# SSL\nport = 8883\ncacert = './cert/ca.crt'\nclientCert = './cert/client.crt'\nclientKey = './cert/client_nopass.key'\n\ntopic = 'paho/mqtt'\n\ndef on_connect(client, userdata, flags, respons_code):\n    \"\"\"broker\u63a5\u7d9a\u6642\u306ecallback\u95a2\u6570\n    \"\"\"\n    print('status {0}'.format(respons_code))\n    client.subscribe(topic)\n\ndef on_message(client, userdata, msg):\n    \"\"\"\u30e1\u30c3\u30bb\u30fc\u30b8\u53d7\u4fe1\u6642\u306ecallback\u95a2\u6570\n    \"\"\"\n    print(msg.topic + ' ' + str(msg.payload))\n\nif __name__ == '__main__':\n    ### \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\u6642\u306bprotocol v3.1.1\u3092\u6307\u5b9a\n    client = mqtt.Client(protocol=mqtt.MQTTv311)\n\n    ### \u30d1\u30b9\u30ef\u30fc\u30c9\u8a8d\u8a3c\u3092\u4f7f\u7528\u3059\u308b\u6642\u306b\u4f7f\u7528\u3059\u308b\n    #client.username_pw_set(username, password=password)\n    ### SSL\n    client.tls_set(cacert,\n        certfile = clientCert,\n        keyfile = clientKey,\n        tls_version = ssl.PROTOCOL_TLSv1_2)\n    client.tls_insecure_set(True)\n\n    ### callback function\n    client.on_connect = on_connect\n    client.on_message = on_message\n\n    client.connect(host, port=port, keepalive=60)\n    client.loop_forever()\n```\n\n\n# \u53c2\u8003\u30b5\u30a4\u30c8\n\n- [Paho - Open Source messaging for M2M](https://eclipse.org/paho/clients/python/docs/)\n- [17.3. ssl \u2014 \u30bd\u30b1\u30c3\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3059\u308b TLS/SSL \u30e9\u30c3\u30d1\u30fc &mdash; Python 2.7.x \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.python.jp/2/library/ssl.html)\n"}