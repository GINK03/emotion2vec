{"tags": ["processing"], "context": " More than 1 year has passed since last update.\nnoise()\u3092\u4f7f\u3063\u3066\u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u306e\u6ce2\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u767a\u751f\u3055\u305b\u3001\u5b87\u5b99\u7a7a\u9593\u307d\u304f\u3057\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f3\u6b21\u5143\u306a\u306e\u3067\u3001x\u8ef8\u3001y\u8ef8\u3001z\u8ef8\u306b\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306bnoise(x,y,z)\u3068\u3057\u3066\u3001\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3057\u305f\u3002\nnoise()\u3000\u30ce\u30a4\u30ba\u306e\u751f\u6210\n\n\u3000\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b0\u30e9\u30d5\u30a3\u30af\u30b9\u3067\u81ea\u7136\u7269\u3092\u8868\u73fe\u3059\u308b\u3068\u304d\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3084\u5730\u5f62\u63cf\u5199\u306a\u3069\u3067\u4f7f\u308f\u308c\u308b\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u306e\u751f\u6210\u306b\u4f7f\u3044\u307e\u3059\u3002 \n\u3010\u69cb\u6587\u3011 \nnoise(x) \nnoise(x, y) \nnoise(x, y, z) \n\u3010\u30d1\u30e9\u30e1\u30fc\u30bf\u3011 \nx \u30ce\u30a4\u30ba\u7a7a\u9593\u306b\u304a\u3051\u308bx\u5ea7\u6a19(float) \ny \u30ce\u30a4\u30ba\u7a7a\u9593\u306b\u304a\u3051\u308by\u5ea7\u6a19(float) \nz \u30ce\u30a4\u30ba\u7a7a\u9593\u306b\u304a\u3051\u308bz\u5ea7\u6a19(float) \n\u3010\u623b\u308a\u5024\u3011 \n0.0\u304b\u30891.0\u306e\u9593\u306e\u5024(float) \n\n\u307e\u305flerp\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001-speed\u3068speed\u306e\u9593\u306e\u5024\u3092\u53d6\u5f97\u3057\u307e\u3057\u305f\u3002\nlerp(a, b, c)\u30fb\u30fb\u30fba\u3068b\u306e\u9593\u306e\u3001\u6bd4c\u3067\u6307\u5b9a\u3055\u308c\u308b\u5024\u3092\u6c42\u3081\u308b\n\np5.pde\nint nPoints=30000;\nfloat complexity =3;\nfloat maxMass=0.05;\nfloat timeSpeed=0.002;\nfloat phase=PI;\n\nfloat windSpeed=70;\nint step=10;\n\nfloat[] pollenMass;\nfloat[][] points;\n\nvoid setup(){\n  //size(500,400,P3D);\n  size(displayWidth, displayHeight,P3D);\n  background(0);\n  frameRate(30);\n  points=new float[nPoints][2];\n  pollenMass=new float[nPoints];\n\n  for(int i=0;i<nPoints;i++){\n    points[i]=new float[]{\n     random(0,width),random(0,height) \n    };\n    pollenMass[i]=noise(0,maxMass);\n  }\n}\n\nvoid draw(){\n  background(0);\n  stroke(255);\n  smooth();\n\n  //camera(mouseX, mouseY, 220.0, width/2, height/2, height/2, 1, 1, 1);\n\n  for(int i=0; i<nPoints; i++){\n  pushMatrix();\n    float x = points[i][0];\n    float y = points[i][1];\n    float z = points[i][1];\n\n    float normx = norm(x, 0, width);\n    float normy = norm(y, 0, height);\n    float normz = norm(z, 0, -1000);\n    float u = noise(phase, normx * complexity, normy * complexity);\n    float v = noise(phase, normy * complexity, normz * complexity);\n    float w = noise(phase, normz * complexity, normx * complexity);\n    float speed = (1 + noise(u, v, w)) / pollenMass[i];\n    x += lerp(-speed, speed, u);\n    y += lerp(-speed, speed, v);\n    z += lerp(-speed, speed, w);\n\n    strokeWeight(z/random(100, 500));\n    point(x, y, z);\n    //image(particleImg, x, y, 30, 30);\n\n    points[i][0] = x;\n    points[i][1] = y;\n    points[i][1] = z;\n    popMatrix();\n\n  }\n}\n\nvoid mousePressed(){\n  setup();\n}\n\nvoid keyPressed() {\n  if ( key == ' ' ) {\n    save( \"hoge.png\" );\n  }\n}\n\n\n\u307e\u305f\u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u306e\u6570\uff08nPoints\uff09\u306f30000\u3068\u3057\u3066\u3044\u307e\u3059\u304c\u3001\n\u3053\u308c\u4ee5\u4e0a\u5897\u3084\u3059\u3068\u81ea\u5206\u306e\u30de\u30b7\u30f3\u304c\u9045\u304f\u306a\u308b\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a\u3053\u306e\u6570\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3082\u3063\u3068\u5897\u3084\u3059\u3068\u7dba\u9e97\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u51e6\u7406\u843d\u3061\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3053\u306e\u8fba\u308a\u306f\u6570\u3092\u5897\u3084\u3057\u305f\u308a\u6e1b\u3089\u3057\u305f\u308a\u3057\u3066\u3001\u3055\u3058\u52a0\u6e1b\u304c\u5fc5\u8981\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n![111.jpg](https://qiita-image-store.s3.amazonaws.com/0/84973/f8498f6b-8891-9d1a-e340-25133b7add61.jpeg)\n\nnoise()\u3092\u4f7f\u3063\u3066\u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u306e\u6ce2\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u767a\u751f\u3055\u305b\u3001\u5b87\u5b99\u7a7a\u9593\u307d\u304f\u3057\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f3\u6b21\u5143\u306a\u306e\u3067\u3001x\u8ef8\u3001y\u8ef8\u3001z\u8ef8\u306b\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306bnoise(x,y,z)\u3068\u3057\u3066\u3001\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3057\u305f\u3002\n\n[noise()\u3000\u30ce\u30a4\u30ba\u306e\u751f\u6210](http://www.musashinodenpa.com/p5/index.php?pos=476)\n>\u3000\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30b0\u30e9\u30d5\u30a3\u30af\u30b9\u3067\u81ea\u7136\u7269\u3092\u8868\u73fe\u3059\u308b\u3068\u304d\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3084\u5730\u5f62\u63cf\u5199\u306a\u3069\u3067\u4f7f\u308f\u308c\u308b\u30d1\u30fc\u30ea\u30f3\u30ce\u30a4\u30ba\u306e\u751f\u6210\u306b\u4f7f\u3044\u307e\u3059\u3002 \n\n>\u3010\u69cb\u6587\u3011 \nnoise(x) \nnoise(x, y) \nnoise(x, y, z) \n\n>\u3010\u30d1\u30e9\u30e1\u30fc\u30bf\u3011 \nx \u30ce\u30a4\u30ba\u7a7a\u9593\u306b\u304a\u3051\u308bx\u5ea7\u6a19(float) \ny \u30ce\u30a4\u30ba\u7a7a\u9593\u306b\u304a\u3051\u308by\u5ea7\u6a19(float) \nz \u30ce\u30a4\u30ba\u7a7a\u9593\u306b\u304a\u3051\u308bz\u5ea7\u6a19(float) \n\n>\u3010\u623b\u308a\u5024\u3011 \n0.0\u304b\u30891.0\u306e\u9593\u306e\u5024(float) \n\n\u307e\u305flerp\u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001-speed\u3068speed\u306e\u9593\u306e\u5024\u3092\u53d6\u5f97\u3057\u307e\u3057\u305f\u3002\n**lerp(a, b, c)\u30fb\u30fb\u30fba\u3068b\u306e\u9593\u306e\u3001\u6bd4c\u3067\u6307\u5b9a\u3055\u308c\u308b\u5024\u3092\u6c42\u3081\u308b**\n\n\n```lang:p5.pde\nint nPoints=30000;\nfloat complexity =3;\nfloat maxMass=0.05;\nfloat timeSpeed=0.002;\nfloat phase=PI;\n\nfloat windSpeed=70;\nint step=10;\n\nfloat[] pollenMass;\nfloat[][] points;\n\nvoid setup(){\n  //size(500,400,P3D);\n  size(displayWidth, displayHeight,P3D);\n  background(0);\n  frameRate(30);\n  points=new float[nPoints][2];\n  pollenMass=new float[nPoints];\n  \n  for(int i=0;i<nPoints;i++){\n    points[i]=new float[]{\n     random(0,width),random(0,height) \n    };\n    pollenMass[i]=noise(0,maxMass);\n  }\n}\n\nvoid draw(){\n  background(0);\n  stroke(255);\n  smooth();\n  \n  //camera(mouseX, mouseY, 220.0, width/2, height/2, height/2, 1, 1, 1);\n  \n  for(int i=0; i<nPoints; i++){\n  pushMatrix();\n    float x = points[i][0];\n    float y = points[i][1];\n    float z = points[i][1];\n\n    float normx = norm(x, 0, width);\n    float normy = norm(y, 0, height);\n    float normz = norm(z, 0, -1000);\n    float u = noise(phase, normx * complexity, normy * complexity);\n    float v = noise(phase, normy * complexity, normz * complexity);\n    float w = noise(phase, normz * complexity, normx * complexity);\n    float speed = (1 + noise(u, v, w)) / pollenMass[i];\n    x += lerp(-speed, speed, u);\n    y += lerp(-speed, speed, v);\n    z += lerp(-speed, speed, w);\n\n    strokeWeight(z/random(100, 500));\n    point(x, y, z);\n    //image(particleImg, x, y, 30, 30);\n\n    points[i][0] = x;\n    points[i][1] = y;\n    points[i][1] = z;\n    popMatrix();\n  \n  }\n}\n\nvoid mousePressed(){\n  setup();\n}\n\nvoid keyPressed() {\n  if ( key == ' ' ) {\n    save( \"hoge.png\" );\n  }\n}\n```\n\n\u307e\u305f\u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u306e\u6570\uff08nPoints\uff09\u306f30000\u3068\u3057\u3066\u3044\u307e\u3059\u304c\u3001\n\u3053\u308c\u4ee5\u4e0a\u5897\u3084\u3059\u3068\u81ea\u5206\u306e\u30de\u30b7\u30f3\u304c\u9045\u304f\u306a\u308b\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a\u3053\u306e\u6570\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3082\u3063\u3068\u5897\u3084\u3059\u3068\u7dba\u9e97\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u51e6\u7406\u843d\u3061\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3053\u306e\u8fba\u308a\u306f\u6570\u3092\u5897\u3084\u3057\u305f\u308a\u6e1b\u3089\u3057\u305f\u308a\u3057\u3066\u3001\u3055\u3058\u52a0\u6e1b\u304c\u5fc5\u8981\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n"}