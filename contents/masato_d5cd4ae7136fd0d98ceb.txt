{"tags": ["SparkCore", "SparkCloud", "Cylon.js0.22.0", "spark-cli0.4.94", "L\u30c1\u30ab"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002Spark Core\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067Tinker\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u524d\u56de\u306fAndroid\u306a\u3069\u306eTinker\u30a2\u30d7\u30ea\u306a\u3069\u304b\u3089\u64cd\u4f5c\u3059\u308b\u305f\u3081\u306b\u4f7f\u3044\u307e\u3057\u305f\u3002Tinker\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306fArduino\u306eFirmata\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3068\u7570\u306a\u308a\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306eSpark Cloud\u3092\u7d4c\u7531\u3057\u3066\u901a\u4fe1\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u76f4\u63a5\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u3068\u63a5\u7d9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u30ea\u30e2\u30fc\u30c8\u306b\u3042\u308bSpark Core\u3092REST API\u306a\u3069\u304b\u3089\u64cd\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u81ea\u5206\u306e\u30af\u30e9\u30a6\u30c9\u4e0a\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u304b\u3089Node.js\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3068LED\u306e\u6e96\u5099\nSpark-Core-LED\u3092\u53c2\u8003\u306b\u3057\u3066\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u306bLED\u3068\u62b5\u6297\u3092\u914d\u7dda\u3057\u307e\u3059\u3002\n\nD0\u306eGPIO\u3092\u4f7f\u3063\u3066L\u30c1\u30ab\u3057\u307e\u3059\u3002\n\nspark-cli\nspark-cli\u3092\u81ea\u5206\u306e\u30af\u30e9\u30a6\u30c9\u4e0a\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066Spark Core\u3092L\u30c1\u30ab\u3057\u3066\u307f\u307e\u3059\u3002\n\nDocker\u30b3\u30f3\u30c6\u30ca\u306e\u7528\u610f\n\u9069\u5f53\u306a\u30af\u30e9\u30a6\u30c9\u306b\u4eee\u60f3\u30de\u30b7\u30f3\u3068Docker\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4eca\u56de\u306fIDCF\u30af\u30e9\u30a6\u30c9\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\u6700\u521d\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ mkdir ~/docker_apps/spark_apps/my-spark-cli\n$ cd !$\n\nspark-cli\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u3067\u3001package.json\u306b\u306f\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u305b\u3093\u3002\n\npackage.json\n{\n  \"name\": \"my-spark-cli\",\n  \"version\": \"0.0.1\",\n  \"private\": true\n}\n\n\nDockerfile\u3092\u4f5c\u6210\u3057\u3066\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u306b\u306fgoogle/nodejs-runtime\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n$ cat <<EOF > Dockerfile\nFROM google/nodejs-runtime\nRUN npm install -g spark-cli\nENTRYPOINT [\"/bin/bash\"]\nEOF\n$ docker pull google/nodejs-runtime\n$ docker build -t my-spark-cli .\n$ docker run --rm --name spark-cli -it my-spark-cli\n\n\n\u30ed\u30b0\u30a4\u30f3\nCLI\u3092\u4f7f\u3063\u3066Spark Cloud\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3059\u3002\u30c6\u30f3\u30dd\u30e9\u30ea\u306eaccess_token\u3092\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067\u4ee5\u4e0b\u306e\u64cd\u4f5c\u3067\u4f7f\u3044\u307e\u3059\u3002\n$ spark cloud login\nCould I please have an email address?  ma6ato@gmail.com\nand a password?  *********\nGot an access token! xxx\nlogged in!  { '0': 'xxx' }\nUsing the setting \"access_token\" instead\n\n\nCLI\u304b\u3089L\u30c1\u30ab\nspark cloud list\u3092\u5b9f\u884c\u3059\u308b\u3068\u63a5\u7d9a\u3057\u3066\u3044\u308bSpark Core\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002xxx\u306e\u3068\u3053\u308d\u306b\u5b9f\u969b\u306b\u306fdevice_id\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n$ spark cloud list\nChecking with the cloud...\nRetrieving cores... (this might take a few seconds)\nninja_mighty (xxx) is online\n  Functions:\n    int digitalread(String args)\n    int digitalwrite(String args)\n    int analogread(String args)\n    int analogwrite(String args)\n\n\u3053\u306e\u30c7\u30d0\u30a4\u30b9\u3067\u4f7f\u3048\u308b\u95a2\u6570\u306e\u4e00\u89a7\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002digitalwrite\u3092\u4f7f\u3044L\u30c1\u30ab\u3057\u3066\u307f\u307e\u3059\u3002\nD0\u306eLED\u3092\u70b9\u706f(HIGH)\u3057\u307e\u3059\u3002\u6210\u529f\u3059\u308b\u30681\u304c\u8fd4\u308a\u307e\u3059\u3002\n$ spark call ninja_mighty digitalwrite D0,HIGH\n1\n\nD0\u306eLED\u3092\u6d88\u706f(LOW)\u3057\u307e\u3059\u3002\n$ spark call ninja_mighty digitalwrite D0,LOW\n\uff11\n\n\nREST API\u304b\u3089L\u30c1\u30ab\nspark-cli\u3067\u78ba\u8a8d\u3057\u305f{access_token}\u3068{device_id}\u3092\u4f7f\u3063\u3066REST API\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nD0\u306eLED\u3092\u70b9\u706f(HIGH)\u3057\u307e\u3059\u3002\n$ curl https://api.spark.io/v1/devices/{device_id}/digitalwrite \\\n  -d access_token={access_token} \\\n  -d params=D0,HIGH\n{\n  \"id\": \"xxx\",\n  \"name\": \"ninja_mighty\",\n  \"last_app\": null,\n  \"connected\": true,\n  \"return_value\": 1\n}\n\nD0\u306eLED\u3092\u6d88\u706f(LOW)\u3057\u307e\u3059\u3002\n$ curl https://api.spark.io/v1/devices/{device_id}/digitalwrite \\\n  -d access_token={access_token} \\\n  -d params=D0,LOW\n{\n  \"id\": \"53ff6d066667574821362467\",\n  \"name\": \"ninja_mighty\",\n  \"last_app\": null,\n  \"connected\": true,\n  \"return_value\": 1\n}\n\n\nCylon.js\u3067L\u30c1\u30ab\nCylon.js\u306ecylon-spark\u30a2\u30c0\u30d7\u30bf\u3092\u4f7f\u3044\u3001Node.js\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089L\u30c1\u30ab\u3057\u307e\u3059\u3002\n\nDocker\u30b3\u30f3\u30c6\u30ca\u306e\u7528\u610f\nDocker\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u4eee\u60f3\u30de\u30b7\u30f3\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ mkdir ~/docker_apps/spark_apps/led-blinking\n$ cd !$\n\npackage.json\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n~/docker_apps/spark_apps/led-blinking/package.json\n{\n  \"name\": \"spark-led-blinking\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"cylon-spark\": \"0.18.0\"\n  },\n  \"scripts\": {\"start\": \"node app.js\"}\n}\n\n\napp.js\u306e\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u307e\u3059\u3002access_token\u3068device_id\u306fDoker\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\u6642\u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\n\n~/docker_apps/spark_apps/led-blinking/app.js\nvar Cylon = require('cylon');\n\nCylon.robot({\n  connections: {\n    spark: { adaptor: 'spark',\n             accessToken: process.env.ACCESS_TOKEN,\n             deviceId: process.env.DEVICE_ID\n           }\n  },\n  devices: {\n    led: { driver: 'led', pin: 'D0'}\n  },\n\n  work: function(my) {\n    every((1).second(), function() {my.led.toggle()});\n  }\n}).start();\n\n\nDockerfile\u3092\u4f5c\u6210\u3057\u3066\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n$ echo FROM google/nodejs-runtime > Dockerfile\n$ docker pull google/nodejs-runtime\n$ docker build -t spark-led-blinking .\n\n\nL\u30c1\u30ab\u306e\u5b9f\u884c\nDocker\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002{device_id}\u306fspike-cli\u3067\u53d6\u5f97\u3057\u305f\u5024\u3068\u540c\u3058\u3067\u3059\u304c\u3001{access_token}\u306e\u5024\u306f\u30c6\u30f3\u30dd\u30e9\u30ea\u306e\u3088\u3046\u3067\u3059\u3002Spark Build\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001Settings\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n{device_id}\u3082Spark Build\u306eCores\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\ndocker run\u306e-e\u30d5\u30e9\u30b0\u306b{access_token}\u3068{device_id}\u3092\u6307\u5b9a\u3057\u3066\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002package.json\u306escripts\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u306b\u6307\u5b9a\u3057\u305fapp.js\u3092\u5b9f\u884c\u3057\u3066L\u30c1\u30ab\u304c\u59cb\u307e\u308a\u307e\u3059\u3002\n$ docker run --rm  --name led-blinking \\\n  -e ACCESS_TOKEN={access_token} \\\n  -e DEVICE_ID={device_id} \\\n  -it spark-led-blinking \n\n> spark-led-blinking@0.0.1 start /app\n> node app.js\n\nI, [2015-03-02T05:03:37.022Z]  INFO -- : [Robot 57708] - Initializing connections.\nI, [2015-03-02T05:03:37.229Z]  INFO -- : [Robot 57708] - Initializing devices.\nI, [2015-03-02T05:03:37.232Z]  INFO -- : [Robot 57708] - Starting connections.\nI, [2015-03-02T05:03:38.186Z]  INFO -- : [Robot 57708] - Starting devices.\nI, [2015-03-02T05:03:38.186Z]  INFO -- : [Robot 57708] - Working.\n\nSpark Core\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067[Tinker\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2](http://docs.spark.io/tinker/#tinkering-with-tinker-the-tinker-firmware)\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u307e\u3059\u3002[\u524d\u56de](http://qiita.com/masato/items/37ffe9346c352f9b295b)\u306fAndroid\u306a\u3069\u306e[Tinker\u30a2\u30d7\u30ea](https://play.google.com/store/apps/details?id=io.spark.core.android&hl=ja)\u306a\u3069\u304b\u3089\u64cd\u4f5c\u3059\u308b\u305f\u3081\u306b\u4f7f\u3044\u307e\u3057\u305f\u3002Tinker\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u306fArduino\u306e[Firmata](http://arduino.cc/en/reference/firmata)\u30d5\u30a1\u30fc\u30e0\u30a6\u30a7\u30a2\u3068\u7570\u306a\u308a\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306eSpark Cloud\u3092\u7d4c\u7531\u3057\u3066\u901a\u4fe1\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u76f4\u63a5\u30db\u30b9\u30c8\u30de\u30b7\u30f3\u3068\u63a5\u7d9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u30ea\u30e2\u30fc\u30c8\u306b\u3042\u308bSpark Core\u3092REST API\u306a\u3069\u304b\u3089\u64cd\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u81ea\u5206\u306e\u30af\u30e9\u30a6\u30c9\u4e0a\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u304b\u3089Node.js\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n## \u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3068LED\u306e\u6e96\u5099\n\n[Spark-Core-LED](http://mchobby.be/wiki/index.php?title=Spark-Core-LED)\u3092\u53c2\u8003\u306b\u3057\u3066\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u306bLED\u3068\u62b5\u6297\u3092\u914d\u7dda\u3057\u307e\u3059\u3002\n\n![Spark-Core-Led-01.jpg](https://qiita-image-store.s3.amazonaws.com/0/43745/e8aea025-f657-7b99-0ac8-65fc8b84a2fd.jpeg)\n\nD0\u306eGPIO\u3092\u4f7f\u3063\u3066L\u30c1\u30ab\u3057\u307e\u3059\u3002\n\n## spark-cli\n\n[spark-cli](https://github.com/spark/spark-cli)\u3092\u81ea\u5206\u306e\u30af\u30e9\u30a6\u30c9\u4e0a\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u3066Spark Core\u3092L\u30c1\u30ab\u3057\u3066\u307f\u307e\u3059\u3002\n\n### Docker\u30b3\u30f3\u30c6\u30ca\u306e\u7528\u610f\n\n\u9069\u5f53\u306a\u30af\u30e9\u30a6\u30c9\u306b\u4eee\u60f3\u30de\u30b7\u30f3\u3068Docker\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u4eca\u56de\u306fIDCF\u30af\u30e9\u30a6\u30c9\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\u6700\u521d\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n``` bash\n$ mkdir ~/docker_apps/spark_apps/my-spark-cli\n$ cd !$\n```\n\nspark-cli\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u3067\u3001package.json\u306b\u306f\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u305b\u3093\u3002\n\n```json:package.json\n{\n  \"name\": \"my-spark-cli\",\n  \"version\": \"0.0.1\",\n  \"private\": true\n}\n```\n\nDockerfile\u3092\u4f5c\u6210\u3057\u3066\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u306b\u306f[google/nodejs-runtime](https://registry.hub.docker.com/u/google/nodejs-runtime/)\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n``` bash\n$ cat <<EOF > Dockerfile\nFROM google/nodejs-runtime\nRUN npm install -g spark-cli\nENTRYPOINT [\"/bin/bash\"]\nEOF\n$ docker pull google/nodejs-runtime\n$ docker build -t my-spark-cli .\n$ docker run --rm --name spark-cli -it my-spark-cli\n```\n\n### \u30ed\u30b0\u30a4\u30f3\n\nCLI\u3092\u4f7f\u3063\u3066Spark Cloud\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3059\u3002\u30c6\u30f3\u30dd\u30e9\u30ea\u306eaccess_token\u3092\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067\u4ee5\u4e0b\u306e\u64cd\u4f5c\u3067\u4f7f\u3044\u307e\u3059\u3002\n\n``` bash\n$ spark cloud login\nCould I please have an email address?  ma6ato@gmail.com\nand a password?  *********\nGot an access token! xxx\nlogged in!  { '0': 'xxx' }\nUsing the setting \"access_token\" instead\n```\n\n### CLI\u304b\u3089L\u30c1\u30ab\n\n`spark cloud list`\u3092\u5b9f\u884c\u3059\u308b\u3068\u63a5\u7d9a\u3057\u3066\u3044\u308bSpark Core\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002`xxx`\u306e\u3068\u3053\u308d\u306b\u5b9f\u969b\u306b\u306fdevice_id\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n``` bash\n$ spark cloud list\nChecking with the cloud...\nRetrieving cores... (this might take a few seconds)\nninja_mighty (xxx) is online\n  Functions:\n    int digitalread(String args)\n    int digitalwrite(String args)\n    int analogread(String args)\n    int analogwrite(String args)\n```\n\n\u3053\u306e\u30c7\u30d0\u30a4\u30b9\u3067\u4f7f\u3048\u308b\u95a2\u6570\u306e\u4e00\u89a7\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002digitalwrite\u3092\u4f7f\u3044L\u30c1\u30ab\u3057\u3066\u307f\u307e\u3059\u3002\n\nD0\u306eLED\u3092\u70b9\u706f(HIGH)\u3057\u307e\u3059\u3002\u6210\u529f\u3059\u308b\u30681\u304c\u8fd4\u308a\u307e\u3059\u3002\n\n``` bash\n$ spark call ninja_mighty digitalwrite D0,HIGH\n1\n```\n\nD0\u306eLED\u3092\u6d88\u706f(LOW)\u3057\u307e\u3059\u3002\n\n``` bash\n$ spark call ninja_mighty digitalwrite D0,LOW\n\uff11\n```\n\n## REST API\u304b\u3089L\u30c1\u30ab\n\nspark-cli\u3067\u78ba\u8a8d\u3057\u305f{access_token}\u3068{device_id}\u3092\u4f7f\u3063\u3066[REST API](http://docs.spark.io/tinker/#tinkering-with-tinker-the-tinker-api)\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\nD0\u306eLED\u3092\u70b9\u706f(HIGH)\u3057\u307e\u3059\u3002\n\n``` bash\n$ curl https://api.spark.io/v1/devices/{device_id}/digitalwrite \\\n  -d access_token={access_token} \\\n  -d params=D0,HIGH\n{\n  \"id\": \"xxx\",\n  \"name\": \"ninja_mighty\",\n  \"last_app\": null,\n  \"connected\": true,\n  \"return_value\": 1\n}\n```\n\nD0\u306eLED\u3092\u6d88\u706f(LOW)\u3057\u307e\u3059\u3002\n\n``` bash\n$ curl https://api.spark.io/v1/devices/{device_id}/digitalwrite \\\n  -d access_token={access_token} \\\n  -d params=D0,LOW\n{\n  \"id\": \"53ff6d066667574821362467\",\n  \"name\": \"ninja_mighty\",\n  \"last_app\": null,\n  \"connected\": true,\n  \"return_value\": 1\n}\n```\n\n## Cylon.js\u3067L\u30c1\u30ab\n\n[Cylon.js](http://cylonjs.com/documentation/platforms/spark/)\u306e[cylon-spark](https://github.com/hybridgroup/cylon-spark)\u30a2\u30c0\u30d7\u30bf\u3092\u4f7f\u3044\u3001Node.js\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089L\u30c1\u30ab\u3057\u307e\u3059\u3002\n\n### Docker\u30b3\u30f3\u30c6\u30ca\u306e\u7528\u610f\n\nDocker\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u4eee\u60f3\u30de\u30b7\u30f3\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n``` bash\n$ mkdir ~/docker_apps/spark_apps/led-blinking\n$ cd !$\n```\n\npackage.json\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```json:~/docker_apps/spark_apps/led-blinking/package.json\n{\n  \"name\": \"spark-led-blinking\",\n  \"version\": \"0.0.1\",\n  \"private\": true,\n  \"dependencies\": {\n    \"cylon-spark\": \"0.18.0\"\n  },\n  \"scripts\": {\"start\": \"node app.js\"}\n}\n```\n\napp.js\u306e\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u307e\u3059\u3002access_token\u3068device_id\u306fDoker\u30b3\u30f3\u30c6\u30ca\u306e\u8d77\u52d5\u6642\u306b\u74b0\u5883\u5909\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\n\n```js:~/docker_apps/spark_apps/led-blinking/app.js\nvar Cylon = require('cylon');\n\nCylon.robot({\n  connections: {\n    spark: { adaptor: 'spark',\n             accessToken: process.env.ACCESS_TOKEN,\n             deviceId: process.env.DEVICE_ID\n           }\n  },\n  devices: {\n    led: { driver: 'led', pin: 'D0'}\n  },\n\n  work: function(my) {\n    every((1).second(), function() {my.led.toggle()});\n  }\n}).start();\n```\n\nDockerfile\u3092\u4f5c\u6210\u3057\u3066\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\n``` bash\n$ echo FROM google/nodejs-runtime > Dockerfile\n$ docker pull google/nodejs-runtime\n$ docker build -t spark-led-blinking .\n```\n\n### L\u30c1\u30ab\u306e\u5b9f\u884c\n\nDocker\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002{device_id}\u306fspike-cli\u3067\u53d6\u5f97\u3057\u305f\u5024\u3068\u540c\u3058\u3067\u3059\u304c\u3001{access_token}\u306e\u5024\u306f\u30c6\u30f3\u30dd\u30e9\u30ea\u306e\u3088\u3046\u3067\u3059\u3002[Spark Build](https://www.spark.io/build)\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001Settings\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n![spark-ide-access-token.png](https://qiita-image-store.s3.amazonaws.com/0/43745/328db3bf-f40b-e9a1-6154-db3f29ab8734.png)\n\n\n{device_id}\u3082Spark Build\u306eCores\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n![spark-ide-device-id.png](https://qiita-image-store.s3.amazonaws.com/0/43745/c485f7ca-a3ff-2bc2-aa58-4ea400b3c794.png)\n\n\n`docker run`\u306e`-e`\u30d5\u30e9\u30b0\u306b{access_token}\u3068{device_id}\u3092\u6307\u5b9a\u3057\u3066\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002package.json\u306e`scripts`\u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u306b\u6307\u5b9a\u3057\u305fapp.js\u3092\u5b9f\u884c\u3057\u3066L\u30c1\u30ab\u304c\u59cb\u307e\u308a\u307e\u3059\u3002\n\n``` bash\n$ docker run --rm  --name led-blinking \\\n  -e ACCESS_TOKEN={access_token} \\\n  -e DEVICE_ID={device_id} \\\n  -it spark-led-blinking \n\n> spark-led-blinking@0.0.1 start /app\n> node app.js\n\nI, [2015-03-02T05:03:37.022Z]  INFO -- : [Robot 57708] - Initializing connections.\nI, [2015-03-02T05:03:37.229Z]  INFO -- : [Robot 57708] - Initializing devices.\nI, [2015-03-02T05:03:37.232Z]  INFO -- : [Robot 57708] - Starting connections.\nI, [2015-03-02T05:03:38.186Z]  INFO -- : [Robot 57708] - Starting devices.\nI, [2015-03-02T05:03:38.186Z]  INFO -- : [Robot 57708] - Working.\n```\n\n\n"}