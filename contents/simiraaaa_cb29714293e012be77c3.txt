{"context": " More than 1 year has passed since last update.\u9ad8\u901f\u3068\u8a00\u3063\u3066\u3082\u3061\u3087\u3063\u3068\u5de5\u592b\u3057\u305f\u3088\u30fc\u3068\u3044\u3046\u7a0b\u5ea6\u306a\u306e\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3059\u3054\u3044\u3067\u304d\u308b\u4eba\u306f\u3001\u3042\u3093\u307e\u308a\u671f\u5f85\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\u30b0\u30b0\u3063\u305f\u3089\u3088\u304f\u51fa\u3066\u304f\u308b\u3084\u308a\u65b9\u306e\u7d0410\u500d\uff5e20\u500d\u3050\u3089\u3044\u306e\u901f\u3055\u3067\u3059\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001\u89e3\u8aac\u306a\u3057\u3067\u8cbc\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\u3082\u3057\u3001\u89e3\u8aac\u304c\u307b\u3057\u3044\u3068\u304b\u3001\u30a8\u30e9\u30fc\u51fa\u308b\u3068\u304b\u3001Unicode\u306b\u306a\u3089\u306a\u3044\u3068\u304b\u3042\u3063\u305f\u3089\u3001\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u3044\u3002\n\u3053\u3053\u306f\u3053\u3046\u3057\u305f\u65b9\u304c\u3044\u3044\u3088\u30fc\u3068\u304b\u3001\u8aad\u307f\u306b\u304f\u3044\u304b\u3089\u3053\u3046\u3057\u305f\u65b9\u304c\u3044\u3044\u3068\u304b\u306e\u30a2\u30c9\u30d0\u30a4\u30b9\u3082\n\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u3044\u3002\n\u203b\u8ffd\u8a18\n\n\u5143\u306b\u3057\u305f\u30b3\u30fc\u30c9\u306b\u3042\u308b\u5236\u9650\u3068\u601d\u3044\u307e\u3059\u304c\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u5024\u304c0x10000\uff5e0x10FFFF\u306e\u5834\u5408\u306a\u3069\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u30b3\u30e1\u30f3\u30c8\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u305d\u306e\u901a\u308a\u3067\u3059\u306d\u3002\n\u4f8b\u3048\u3070?\u3068\u3044\u3046\u6587\u5b57\u306fString\u306b\u683c\u7d0d\u3059\u308b\u3068length\u306f2\u306b\u306a\u308a\u3001\u4e0b\u8a18\u306etoUnicode\u3067\u5909\u63db\u3057\u305f\u5834\u5408\u306e\u7d50\u679c\u306f\\u28fa6\\udfa6\u3068\u306a\u308a\u3001\u610f\u56f3\u3057\u306a\u3044\u52d5\u4f5c\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\u203b\u8ffd\u8a182\n\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3067\u8868\u8a18\u3055\u308c\u3066\u3044\u308b\u6587\u5b57(String\u3067\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u5024\u304c0x10000\uff5e0x10FFFF\u306b\u306a\u308b\u6587\u5b57)\u304c\u3042\u308b\u5834\u5408\u3067\u3082\u6b63\u5e38\u306b\u52d5\u4f5c\u3059\u308btoUnicode2\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u901f\u5ea6\u306ftoUnicode\u3068\u540c\u3058\u3050\u3089\u3044\u3067\u3059\u3002\u4f7f\u3046\u5834\u5408\u306ftoUnicode2\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u3002\n\n    public static String toUnicode2(final String s,boolean toUpper){\n        final char[] chars = s.toCharArray();\n        final int len = chars.length;\n        StringBuilder sb = new StringBuilder(len * UNICODE_RATE);\n        for(int i = 0; i < len; ++i){\n            final String s16 = Integer.toHexString((int)chars[i]);\n            sb.append(HEAD);\n            for(int j = UNICODE_LENGTH - s16.length(); j > 0; --j){\n                sb.append(C0);\n            }\n            sb.append(s16);\n        }\n        return (toUpper) ? sb.toString().toUpperCase() : sb.toString();\n    }\n\n\n\nimport java.util.Formatter;\n\npublic class Convert {\n\n    private static final char C0 = '0';\n    private static final String\n    HEAD = \"\\\\u\",\n    FORMAT = HEAD + \"%04x\";\n\n    private static final int\n    UNICODE_LENGTH = 4,\n    UNICODE_RATE = 6;\n\n    public static void main(String[] args) {\n\n        {\n            String test =\"\u3042 \u304b_\u3055?\u305f*\u306a\\\\\";\n\n            String a,b,c;\n            //\u3061\u3083\u3093\u3068\u5909\u63db\u3067\u304d\u3066\u308b\u304b\u30c1\u30a7\u30c3\u30af\n            //\\u3042\\u0020\\u304b\\u005f\\u3055\\u003f\\u305f\\u002a\\u306a\\u005c\n            System.out.println(a = toUnicode(test));\n            //\\u3042\\u0020\\u304b\\u005f\\u3055\\u003f\\u305f\\u002a\\u306a\\u005c\n            System.out.println(b = toUnicodeSlow(test));\n            //\\u3042\\u0020\\u304b\\u005f\\u3055\\u003f\\u305f\\u002a\\u306a\\u005c\n            System.out.println(c = toUnicodeVerySlow(test));\n            System.out.println( a.equals(b) && b.equals(c) && c.equals(a) );//true\n        }\n\n        final String test = \" \u3042\u3044\u3046\u3048\u304a \\\\ \u304b\u304d\u304f\u3051\u3053 \";\n\n        long start = System.currentTimeMillis();\n        for (int i = 0; i < 100000; ++i) { toUnicodeVerySlow(test); }\n        System.out.println(System.currentTimeMillis() - start); //5660\n\n        start = System.currentTimeMillis();\n        for (int i = 0; i < 100000; ++i) { toUnicodeSlow(test); }\n        System.out.println(System.currentTimeMillis() - start); //4196\n\n        start = System.currentTimeMillis();\n        for (int i = 0; i < 100000; ++i) { toUnicode(test); }\n        System.out.println(System.currentTimeMillis() - start); //286\n    }\n\n    //\u30b0\u30b0\u3063\u305f\u3089\u51fa\u3066\u304f\u308b\u30d1\u30bf\u30fc\u30f3\n    public static String toUnicodeVerySlow(final String s) {\n        final int len = s.length();\n        StringBuilder sb = new StringBuilder(len * UNICODE_RATE);\n        for(int i = 0; i < len; ++i){\n            sb.append(String.format(FORMAT, Character.codePointAt(s, i)));\n        }\n        return sb.toString();\n    }\n\n    //\u30b0\u30b0\u3063\u305f\u3089\u51fa\u3066\u304f\u308b\u30d1\u30bf\u30fc\u30f3\u3092\u3061\u3087\u3063\u3068\u5909\u3048\u305f\u3060\u3051\n    public static String toUnicodeSlow(final String s) {\n        Formatter f=new Formatter();\n        for(int i = 0, len = s.length(); i < len; ++i){\n            f.format(FORMAT, Character.codePointAt(s, i));\n        }\n        return f.toString();\n    }\n\n\n    //\u3053\u306e\u8a18\u4e8b\u306e\u30e1\u30a4\u30f3 \u7b2c\u4e8c\u5f15\u6570\u306btrue\u3067\u5927\u6587\u5b57\u306b\u3082\u3067\u304d\u308b\n    public static String toUnicode(final String s,boolean toUpper){\n        final int len = s.length();\n        StringBuilder sb = new StringBuilder(len * UNICODE_RATE);\n        for(int i = 0; i < len; ++i){\n            final String s16 = Integer.toHexString(Character.codePointAt(s, i));\n            sb.append(HEAD);\n            for(int j = UNICODE_LENGTH - s16.length(); j > 0; --j){\n                sb.append(C0);\n            }\n            sb.append(s16);\n        }\n        return (toUpper) ? sb.toString().toUpperCase() : sb.toString();\n    }\n\n    //\u3053\u306e\u8a18\u4e8b\u306e\u30e1\u30a4\u30f3\u306e\u7b2c\u4e8c\u5f15\u6570\u7701\u7565\u7528\n    public static String toUnicode(final String s){\n        return toUnicode(s, false);\n    }\n\n}\n\n\n\u9ad8\u901f\u3068\u8a00\u3063\u3066\u3082\u3061\u3087\u3063\u3068\u5de5\u592b\u3057\u305f\u3088\u30fc\u3068\u3044\u3046\u7a0b\u5ea6\u306a\u306e\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3059\u3054\u3044\u3067\u304d\u308b\u4eba\u306f\u3001\u3042\u3093\u307e\u308a\u671f\u5f85\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\u30b0\u30b0\u3063\u305f\u3089\u3088\u304f\u51fa\u3066\u304f\u308b\u3084\u308a\u65b9\u306e\u7d0410\u500d\uff5e20\u500d\u3050\u3089\u3044\u306e\u901f\u3055\u3067\u3059\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001\u89e3\u8aac\u306a\u3057\u3067\u8cbc\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\u3082\u3057\u3001\u89e3\u8aac\u304c\u307b\u3057\u3044\u3068\u304b\u3001\u30a8\u30e9\u30fc\u51fa\u308b\u3068\u304b\u3001Unicode\u306b\u306a\u3089\u306a\u3044\u3068\u304b\u3042\u3063\u305f\u3089\u3001\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u3044\u3002\n\u3053\u3053\u306f\u3053\u3046\u3057\u305f\u65b9\u304c\u3044\u3044\u3088\u30fc\u3068\u304b\u3001\u8aad\u307f\u306b\u304f\u3044\u304b\u3089\u3053\u3046\u3057\u305f\u65b9\u304c\u3044\u3044\u3068\u304b\u306e\u30a2\u30c9\u30d0\u30a4\u30b9\u3082\n\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u3044\u3002\n\n\u203b\u8ffd\u8a18\n>\u5143\u306b\u3057\u305f\u30b3\u30fc\u30c9\u306b\u3042\u308b\u5236\u9650\u3068\u601d\u3044\u307e\u3059\u304c\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u5024\u304c0x10000\uff5e0x10FFFF\u306e\u5834\u5408\u306a\u3069\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u30b3\u30e1\u30f3\u30c8\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u305d\u306e\u901a\u308a\u3067\u3059\u306d\u3002\n\u4f8b\u3048\u3070?\u3068\u3044\u3046\u6587\u5b57\u306f`String`\u306b\u683c\u7d0d\u3059\u308b\u3068`length`\u306f2\u306b\u306a\u308a\u3001\u4e0b\u8a18\u306e`toUnicode`\u3067\u5909\u63db\u3057\u305f\u5834\u5408\u306e\u7d50\u679c\u306f`\\u28fa6\\udfa6`\u3068\u306a\u308a\u3001\u610f\u56f3\u3057\u306a\u3044\u52d5\u4f5c\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u203b\u8ffd\u8a182\n\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3067\u8868\u8a18\u3055\u308c\u3066\u3044\u308b\u6587\u5b57(String\u3067\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u5024\u304c0x10000\uff5e0x10FFFF\u306b\u306a\u308b\u6587\u5b57)\u304c\u3042\u308b\u5834\u5408\u3067\u3082\u6b63\u5e38\u306b\u52d5\u4f5c\u3059\u308b`toUnicode2`\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u901f\u5ea6\u306f`toUnicode`\u3068\u540c\u3058\u3050\u3089\u3044\u3067\u3059\u3002\u4f7f\u3046\u5834\u5408\u306f`toUnicode2`\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u3002\n\n```java\n\n\tpublic static String toUnicode2(final String s,boolean toUpper){\n\t\tfinal char[] chars = s.toCharArray();\n\t\tfinal int len = chars.length;\n\t\tStringBuilder sb = new StringBuilder(len * UNICODE_RATE);\n\t\tfor(int i = 0; i < len; ++i){\n\t\t\tfinal String s16 = Integer.toHexString((int)chars[i]);\n\t\t\tsb.append(HEAD);\n\t\t\tfor(int j = UNICODE_LENGTH - s16.length(); j > 0; --j){\n\t\t\t\tsb.append(C0);\n\t\t\t}\n\t\t\tsb.append(s16);\n\t\t}\n\t\treturn (toUpper) ? sb.toString().toUpperCase() : sb.toString();\n\t}\n\n```\n\n```java\n\nimport java.util.Formatter;\n\npublic class Convert {\n\n\tprivate static final char C0 = '0';\n\tprivate static final String\n\tHEAD = \"\\\\u\",\n\tFORMAT = HEAD + \"%04x\";\n\n\tprivate static final int\n\tUNICODE_LENGTH = 4,\n\tUNICODE_RATE = 6;\n\n\tpublic static void main(String[] args) {\n\n\t\t{\n\t\t\tString test =\"\u3042 \u304b_\u3055?\u305f*\u306a\\\\\";\n\n\t\t\tString a,b,c;\n\t\t\t//\u3061\u3083\u3093\u3068\u5909\u63db\u3067\u304d\u3066\u308b\u304b\u30c1\u30a7\u30c3\u30af\n\t\t\t//\\u3042\\u0020\\u304b\\u005f\\u3055\\u003f\\u305f\\u002a\\u306a\\u005c\n\t\t\tSystem.out.println(a = toUnicode(test));\n\t\t\t//\\u3042\\u0020\\u304b\\u005f\\u3055\\u003f\\u305f\\u002a\\u306a\\u005c\n\t\t\tSystem.out.println(b = toUnicodeSlow(test));\n\t\t\t//\\u3042\\u0020\\u304b\\u005f\\u3055\\u003f\\u305f\\u002a\\u306a\\u005c\n\t\t\tSystem.out.println(c = toUnicodeVerySlow(test));\n\t\t\tSystem.out.println( a.equals(b) && b.equals(c) && c.equals(a) );//true\n\t\t}\n\n\t\tfinal String test = \" \u3042\u3044\u3046\u3048\u304a \\\\ \u304b\u304d\u304f\u3051\u3053 \";\n\n\t\tlong start = System.currentTimeMillis();\n\t\tfor (int i = 0; i < 100000; ++i) { toUnicodeVerySlow(test); }\n\t\tSystem.out.println(System.currentTimeMillis() - start); //5660\n\n\t\tstart = System.currentTimeMillis();\n\t\tfor (int i = 0; i < 100000; ++i) { toUnicodeSlow(test); }\n\t\tSystem.out.println(System.currentTimeMillis() - start); //4196\n\n\t\tstart = System.currentTimeMillis();\n\t\tfor (int i = 0; i < 100000; ++i) { toUnicode(test); }\n\t\tSystem.out.println(System.currentTimeMillis() - start); //286\n\t}\n\n\t//\u30b0\u30b0\u3063\u305f\u3089\u51fa\u3066\u304f\u308b\u30d1\u30bf\u30fc\u30f3\n\tpublic static String toUnicodeVerySlow(final String s) {\n\t\tfinal int len = s.length();\n\t\tStringBuilder sb = new StringBuilder(len * UNICODE_RATE);\n\t    for(int i = 0; i < len; ++i){\n\t      \tsb.append(String.format(FORMAT, Character.codePointAt(s, i)));\n\t    }\n\t    return sb.toString();\n\t}\n\n\t//\u30b0\u30b0\u3063\u305f\u3089\u51fa\u3066\u304f\u308b\u30d1\u30bf\u30fc\u30f3\u3092\u3061\u3087\u3063\u3068\u5909\u3048\u305f\u3060\u3051\n\tpublic static String toUnicodeSlow(final String s) {\n\t\tFormatter f=new Formatter();\n\t    for(int i = 0, len = s.length(); i < len; ++i){\n\t      \tf.format(FORMAT, Character.codePointAt(s, i));\n\t    }\n\t    return f.toString();\n\t}\n\n\n\t//\u3053\u306e\u8a18\u4e8b\u306e\u30e1\u30a4\u30f3 \u7b2c\u4e8c\u5f15\u6570\u306btrue\u3067\u5927\u6587\u5b57\u306b\u3082\u3067\u304d\u308b\n\tpublic static String toUnicode(final String s,boolean toUpper){\n\t\tfinal int len = s.length();\n\t\tStringBuilder sb = new StringBuilder(len * UNICODE_RATE);\n\t\tfor(int i = 0; i < len; ++i){\n\t\t\tfinal String s16 = Integer.toHexString(Character.codePointAt(s, i));\n\t\t\tsb.append(HEAD);\n\t\t\tfor(int j = UNICODE_LENGTH - s16.length(); j > 0; --j){\n\t\t\t\tsb.append(C0);\n\t\t\t}\n\t\t\tsb.append(s16);\n\t\t}\n\t\treturn (toUpper) ? sb.toString().toUpperCase() : sb.toString();\n\t}\n\n\t//\u3053\u306e\u8a18\u4e8b\u306e\u30e1\u30a4\u30f3\u306e\u7b2c\u4e8c\u5f15\u6570\u7701\u7565\u7528\n\tpublic static String toUnicode(final String s){\n\t\treturn toUnicode(s, false);\n\t}\n\n}\n\n```\n", "tags": ["Java", "unicode"]}