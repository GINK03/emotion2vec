{"context": "\n\nOverview\nRaspberry Pi3\u306bOpenVPN server\u3092\u7acb\u3066\u3066\u3001unsecure\u306anetwork\u3067WiFi\u306a\u3069\u3092\u4f7f\u3046\u6642\u306e\u5bfe\u7b56\u3092\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u3001Ubuntu Mate 15.10 on Raspberry Pi3\u3067\u306e\u8a2d\u5b9a\u3067\u3059\u3002\nDynamic DNS\u306e\u8a2d\u5b9a\u306f\u3001\u3053\u3061\u3089 \u3092\u3054\u53c2\u8003\u306b.\n\nSetup OpenVPN server\n# apt-get update\n# apt-get upgrade\n# apt-get install openvpn openssl\n# apt-get install openvpn libssl-dev openssl easy-rsa\n\n\nkey length\u306e\u5909\u66f4\n# cd /etc/openvpn/easy-rsa\n# vim vars\n#export EASY_RSA=\"`pwd`\"\nexport EASY_RSA=\"/etc/openvpn/easy-rsa\"\n#export KEY_SIZE=1024\nexport KEY_SIZE=2048\n# source ./vars  \n\n\nkey\u306e\u751f\u6210\n# cd /etc/openvpn/easy-rsa\n# ./clean-all\n\n# ./build-ca\n..snip..\nCountry Name (2 letter code) [US]:JP\nState or Province Name (full name) [CA]:Tokyo\nLocality Name (eg, city) [SanFrancisco]:XXX-ku\nOrganization Name (eg, company) [Fort-Funston]:hoge company\nOrganizational Unit Name (eg, section) [MyOrganizationalUnit]:VPN\nCommon Name (eg, your name or your server's hostname) [Fort-Funston CA]:raspi\nName [EasyRSA]:Taro Hoge\nEmail Address [me@myhost.mydomain]:taro.hoge@gmail.com\n\n# ./build-key-server raspi\n..snip..\nCountry Name (2 letter code) [US]:JP\nState or Province Name (full name) [CA]:Tokyo\nLocality Name (eg, city) [SanFrancisco]:XXX-ku\nOrganization Name (eg, company) [Fort-Funston]:hoge company\nOrganizational Unit Name (eg, section) [MyOrganizationalUnit]:VPN\nCommon Name (eg, your name or your server's hostname) [Fort-Funston CA]:raspi\nName [EasyRSA]:Taro Hoge\nEmail Address [me@myhost.mydomain]:taro.hoge@gmail.com\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:\nAn optional company name []:\nUsing configuration from /etc/openvpn/easy-rsa/openssl-1.0.0.cnf\nCheck that the request matches the signature\nSignature ok\nThe Subject's Distinguished Name is as follows\ncountryName           :PRINTABLE:'JP'\nstateOrProvinceName   :PRINTABLE:'Tokyo'\nlocalityName          :PRINTABLE:'XXX-ku'\norganizationName      :PRINTABLE:'hoge company'\norganizationalUnitName:PRINTABLE:'VPN'\ncommonName            :PRINTABLE:'raspi'\nname                  :PRINTABLE:'Taro Hoge'\nemailAddress          :IA5STRING:'taro.hoge@gmail.com'\nCertificate is to be certified until Apr  XX XX:XX:XX 2026 GMT (3650 days)\nSign the certificate? [y/n]:y\n\n1 out of 1 certificate requests certified, commit? [y/n]y\nWrite out database with 1 new entries\nData Base Updated\n\n# ./build-key-pass User1\n..snip..\nwriting new private key to 'User1.key'\nEnter PEM pass phrase: \nVerifying - Enter PEM pass phrase: \n..snip..\nCountry Name (2 letter code) [US]:JP\nState or Province Name (full name) [CA]:Tokyo\nLocality Name (eg, city) [SanFrancisco]:XXX-ku\nOrganization Name (eg, company) [Fort-Funston]:hoge company\nOrganizational Unit Name (eg, section) [MyOrganizationalUnit]:VPN\nCommon Name (eg, your name or your server's hostname) [Fort-Funston CA]:raspi\nName [EasyRSA]:Taro Hoge\nEmail Address [me@myhost.mydomain]:taro.hoge@gmail.com\n..snip..\n\n# cd keys\n# openssl rsa -in User1.key -des3 -out User1.3des.key\nEnter pass phrase for User1.key: \nwriting RSA key\nEnter PEM pass phrase: \nVerifying - Enter PEM pass phrase: \n\n# cd ..\n/etc/openvpn/easy-rsa# ./build-dh\n# openvpn --genkey --secret keys/ta.key\n\n\nOpenVPN\u306e\u8a2d\u5b9a\n\n/etc/openvpn/server.conf\ndev tun\nproto udp\nport 1194\nca /etc/openvpn/easy-rsa/keys/ca.crt\ncert /etc/openvpn/easy-rsa/keys/raspi.crt\nkey /etc/openvpn/easy-rsa/keys/raspi.key\ndh /etc/openvpn/easy-rsa/keys/dh2048.pem\nserver 10.8.0.0 255.255.255.0\nifconfig 10.8.0.1 10.8.0.2\npush \"route 10.8.0.1 255.255.255.0\"\npush \"route 10.8.0.0 255.255.255.0\"\npush \"route 192.168.10.XX 255.255.255.0\"\npush \"dhcp-option DNS 192.168.10.1\"\npush \"dhcp-option DNS 8.8.8.8\"\npush \"dhcp-option DNS 8.8.4.4\"\npush \"redirect-gateway def1 bypass-dhcp\"\nclient-to-client\nduplicate-cn\nkeepalive 10 120\ntls-auth /etc/openvpn/easy-rsa/keys/ta.key 0\ncipher AES-128-CBC\ncomp-lzo\nuser nobody\ngroup nogroup\npersist-key\npersist-tun\nstatus /var/log/openvpn-status.log 20\nlog /var/log/openvpn.log\nverb 1\n\n\n\n/etc/openvpn/easy-rsa/keys/default.txt\nclient\ndev tun\nproto udp\nremote example.mydns.jp 1194 # \u3042\u306a\u305f\u306eraspi\u306eDNS\u306e\u540d\u524d\u306b\nresolv-retry infinite\nnobind\npersist-key\npersist-tun\nmute-replay-warnings\nns-cert-type server\nkey-direction 1\ncipher AES-128-CBC\ncomp-lzo\nverb 1\nmute 20\n\n\n\nnetwork\u306e\u8a2d\u5b9a\n# ufw allow 1194\n\n\u30eb\u30fc\u30bf\u306ePort\u958b\u3051\u3082\u5fd8\u308c\u305a\u306b\u3002\n\n192.168.10.xx\u306fraspberry Pi3\u306elocal IP address\nenxb827eb602cea\u306f\u3001$ ifconfig\u3067\u78ba\u8a8d\u3057\u3066\u4f7f\u3044\u307e\u3057\u3087\u3046.\n\n\n/etc/ufw/before.rules\n# rules for NAT Table of iptables\n# required line for ufw\n*nat\n:POSTROUTING ACCEPT [0:0]\n\n# Forward traffic from OpenVPN through eth0.\n-A POSTROUTING -s 10.8.0.0/24 -o enxb827eb602cea -j MASQUERADE\n\nCOMMIT\n\n..snip..\n\n-A ufw-before-input -i tun+ -j ACCEPT\n-A ufw-before-output -i tun+ -j ACCEPT\n-A ufw-before-forward -s 10.8.0.0/24 -j ACCEPT\n-A ufw-before-forward -d 10.8.0.0/24 -j ACCEPT\n\nCOMMIT\n\n\n\n/etc/ufw/sysctrl.conf\n# Uncomment this to allow this host to route packets between interfaces\nnet/ipv4/ip_forward=1\nnet/ipv6/conf/default/forwarding=1\nnet/ipv6/conf/all/forwarding=1\n\n\n\u3067\u3088\u3044\u306f\u305a\u3060\u304c\u3001\u3046\u307e\u304f\u884c\u304b\u306a\u3051\u308c\u3070\u4ee5\u4e0b\u3082\u884c\u3046\u3002\n\n/etc/sysctl.conf\n#net.ipv4.ip_forward=1\nnet.ipv4.ip_forward=1\n\n# sysctl -p\n\n\n\n/etc/rc.local\niptables -t nat -A INPUT -i enxb827eb602cea -p udp --dport 1194 -j ACCEPT\niptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o enxb827eb602cea -j SNAT --to-source 192.168.10.xx\n\n\n\nOpenVPN\u306e\u8d77\u52d5\n# service openvpn start\n# update-rc.d openvpn defaults\n\n\nOVPN\u306e\u751f\u6210\nAndroid\u306eopenvpn client\u306a\u3069\u3067\u306fovpn\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3068\u4fbf\u5229\u306a\u306e\u3067\u3001\n\u305d\u306e\u751f\u6210\u306e\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3002\n\n/etc/openvpn/easy-rsa/keys/MakeOVPN.sh\n#!/bin/bash \n\n# Default Variable Declarations \nDEFAULT=\"Default.txt\" \nFILEEXT=\".ovpn\" \nCRT=\".crt\" \nKEY=\".3des.key\" \nCA=\"ca.crt\" \nTA=\"ta.key\" \n\n#Ask for a Client name \necho \"Please enter an existing Client Name:\"\nread NAME \n\n\n#1st Verify that client\u2019s Public Key Exists \nif [ ! -f $NAME$CRT ]; then \n echo \"[ERROR]: Client Public Key Certificate not found: $NAME$CRT\" \n exit \nfi \necho \"Client\u2019s cert found: $NAME$CR\" \n\n\n#Then, verify that there is a private key for that client \nif [ ! -f $NAME$KEY ]; then \n echo \"[ERROR]: Client 3des Private Key not found: $NAME$KEY\" \n exit \nfi \necho \"Client\u2019s Private Key found: $NAME$KEY\"\n\n#Confirm the CA public key exists \nif [ ! -f $CA ]; then \n echo \"[ERROR]: CA Public Key not found: $CA\" \n exit \nfi \necho \"CA public Key found: $CA\" \n\n#Confirm the tls-auth ta key file exists \nif [ ! -f $TA ]; then \n echo \"[ERROR]: tls-auth Key not found: $TA\" \n exit \nfi \necho \"tls-auth Private Key found: $TA\" \n\n#Ready to make a new .opvn file - Start by populating with the \ndefault file \ncat $DEFAULT > $NAME$FILEEXT \n\n#Now, append the CA Public Cert \necho \"<ca>\" >> $NAME$FILEEXT \ncat $CA >> $NAME$FILEEXT \necho \"</ca>\" >> $NAME$FILEEXT\n\n#Next append the client Public Cert \necho \"<cert>\" >> $NAME$FILEEXT \ncat $NAME$CRT | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' >> $NAME$FILEEXT \necho \"</cert>\" >> $NAME$FILEEXT \n\n#Then, append the client Private Key \necho \"<key>\" >> $NAME$FILEEXT \ncat $NAME$KEY >> $NAME$FILEEXT \necho \"</key>\" >> $NAME$FILEEXT \n\n#Finally, append the TA Private Key \necho \"<tls-auth>\" >> $NAME$FILEEXT \ncat $TA >> $NAME$FILEEXT \necho \"</tls-auth>\" >> $NAME$FILEEXT \n\necho \"Done! $NAME$FILEEXT Successfully Created.\"\n\n\n# chmod 700 MakeOVPN.sh\n# ./MakeOVPN.sh\n\n# Overview\n\nRaspberry Pi3\u306bOpenVPN server\u3092\u7acb\u3066\u3066\u3001unsecure\u306anetwork\u3067WiFi\u306a\u3069\u3092\u4f7f\u3046\u6642\u306e\u5bfe\u7b56\u3092\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306f\u3001Ubuntu Mate 15.10 on Raspberry Pi3\u3067\u306e\u8a2d\u5b9a\u3067\u3059\u3002\n\nDynamic DNS\u306e\u8a2d\u5b9a\u306f\u3001[\u3053\u3061\u3089](http://qiita.com/hidenorly/items/b324bc24b4d15401a824) \u3092\u3054\u53c2\u8003\u306b.\n\n# Setup OpenVPN server\n\n```\n# apt-get update\n# apt-get upgrade\n# apt-get install openvpn openssl\n# apt-get install openvpn libssl-dev openssl easy-rsa\n```\n\n## key length\u306e\u5909\u66f4\n\n```\n# cd /etc/openvpn/easy-rsa\n# vim vars\n#export EASY_RSA=\"`pwd`\"\nexport EASY_RSA=\"/etc/openvpn/easy-rsa\"\n#export KEY_SIZE=1024\nexport KEY_SIZE=2048\n# source ./vars  \n```\n\n## key\u306e\u751f\u6210\n\n```\n# cd /etc/openvpn/easy-rsa\n# ./clean-all\n```\n\n```\n# ./build-ca\n..snip..\nCountry Name (2 letter code) [US]:JP\nState or Province Name (full name) [CA]:Tokyo\nLocality Name (eg, city) [SanFrancisco]:XXX-ku\nOrganization Name (eg, company) [Fort-Funston]:hoge company\nOrganizational Unit Name (eg, section) [MyOrganizationalUnit]:VPN\nCommon Name (eg, your name or your server's hostname) [Fort-Funston CA]:raspi\nName [EasyRSA]:Taro Hoge\nEmail Address [me@myhost.mydomain]:taro.hoge@gmail.com\n```\n\n```\n# ./build-key-server raspi\n..snip..\nCountry Name (2 letter code) [US]:JP\nState or Province Name (full name) [CA]:Tokyo\nLocality Name (eg, city) [SanFrancisco]:XXX-ku\nOrganization Name (eg, company) [Fort-Funston]:hoge company\nOrganizational Unit Name (eg, section) [MyOrganizationalUnit]:VPN\nCommon Name (eg, your name or your server's hostname) [Fort-Funston CA]:raspi\nName [EasyRSA]:Taro Hoge\nEmail Address [me@myhost.mydomain]:taro.hoge@gmail.com\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:\nAn optional company name []:\nUsing configuration from /etc/openvpn/easy-rsa/openssl-1.0.0.cnf\nCheck that the request matches the signature\nSignature ok\nThe Subject's Distinguished Name is as follows\ncountryName           :PRINTABLE:'JP'\nstateOrProvinceName   :PRINTABLE:'Tokyo'\nlocalityName          :PRINTABLE:'XXX-ku'\norganizationName      :PRINTABLE:'hoge company'\norganizationalUnitName:PRINTABLE:'VPN'\ncommonName            :PRINTABLE:'raspi'\nname                  :PRINTABLE:'Taro Hoge'\nemailAddress          :IA5STRING:'taro.hoge@gmail.com'\nCertificate is to be certified until Apr  XX XX:XX:XX 2026 GMT (3650 days)\nSign the certificate? [y/n]:y\n\n1 out of 1 certificate requests certified, commit? [y/n]y\nWrite out database with 1 new entries\nData Base Updated\n```\n\n```\n# ./build-key-pass User1\n..snip..\nwriting new private key to 'User1.key'\nEnter PEM pass phrase: \nVerifying - Enter PEM pass phrase: \n..snip..\nCountry Name (2 letter code) [US]:JP\nState or Province Name (full name) [CA]:Tokyo\nLocality Name (eg, city) [SanFrancisco]:XXX-ku\nOrganization Name (eg, company) [Fort-Funston]:hoge company\nOrganizational Unit Name (eg, section) [MyOrganizationalUnit]:VPN\nCommon Name (eg, your name or your server's hostname) [Fort-Funston CA]:raspi\nName [EasyRSA]:Taro Hoge\nEmail Address [me@myhost.mydomain]:taro.hoge@gmail.com\n..snip..\n```\n\n```\n# cd keys\n# openssl rsa -in User1.key -des3 -out User1.3des.key\nEnter pass phrase for User1.key: \nwriting RSA key\nEnter PEM pass phrase: \nVerifying - Enter PEM pass phrase: \n```\n\n```\n# cd ..\n/etc/openvpn/easy-rsa# ./build-dh\n# openvpn --genkey --secret keys/ta.key\n```\n\n## OpenVPN\u306e\u8a2d\u5b9a\n\n```/etc/openvpn/server.conf\ndev tun\nproto udp\nport 1194\nca /etc/openvpn/easy-rsa/keys/ca.crt\ncert /etc/openvpn/easy-rsa/keys/raspi.crt\nkey /etc/openvpn/easy-rsa/keys/raspi.key\ndh /etc/openvpn/easy-rsa/keys/dh2048.pem\nserver 10.8.0.0 255.255.255.0\nifconfig 10.8.0.1 10.8.0.2\npush \"route 10.8.0.1 255.255.255.0\"\npush \"route 10.8.0.0 255.255.255.0\"\npush \"route 192.168.10.XX 255.255.255.0\"\npush \"dhcp-option DNS 192.168.10.1\"\npush \"dhcp-option DNS 8.8.8.8\"\npush \"dhcp-option DNS 8.8.4.4\"\npush \"redirect-gateway def1 bypass-dhcp\"\nclient-to-client\nduplicate-cn\nkeepalive 10 120\ntls-auth /etc/openvpn/easy-rsa/keys/ta.key 0\ncipher AES-128-CBC\ncomp-lzo\nuser nobody\ngroup nogroup\npersist-key\npersist-tun\nstatus /var/log/openvpn-status.log 20\nlog /var/log/openvpn.log\nverb 1\n```\n\n```/etc/openvpn/easy-rsa/keys/default.txt\nclient\ndev tun\nproto udp\nremote example.mydns.jp 1194 # \u3042\u306a\u305f\u306eraspi\u306eDNS\u306e\u540d\u524d\u306b\nresolv-retry infinite\nnobind\npersist-key\npersist-tun\nmute-replay-warnings\nns-cert-type server\nkey-direction 1\ncipher AES-128-CBC\ncomp-lzo\nverb 1\nmute 20\n```\n\n## network\u306e\u8a2d\u5b9a\n\n```\n# ufw allow 1194\n```\n\u30eb\u30fc\u30bf\u306ePort\u958b\u3051\u3082\u5fd8\u308c\u305a\u306b\u3002\n\n* 192.168.10.xx\u306fraspberry Pi3\u306elocal IP address\n* enxb827eb602cea\u306f\u3001```$ ifconfig```\u3067\u78ba\u8a8d\u3057\u3066\u4f7f\u3044\u307e\u3057\u3087\u3046.\n\n```/etc/ufw/before.rules\n# rules for NAT Table of iptables\n# required line for ufw\n*nat\n:POSTROUTING ACCEPT [0:0]\n\n# Forward traffic from OpenVPN through eth0.\n-A POSTROUTING -s 10.8.0.0/24 -o enxb827eb602cea -j MASQUERADE\n\nCOMMIT\n\n..snip..\n\n-A ufw-before-input -i tun+ -j ACCEPT\n-A ufw-before-output -i tun+ -j ACCEPT\n-A ufw-before-forward -s 10.8.0.0/24 -j ACCEPT\n-A ufw-before-forward -d 10.8.0.0/24 -j ACCEPT\n\nCOMMIT\n```\n\n```/etc/ufw/sysctrl.conf\n# Uncomment this to allow this host to route packets between interfaces\nnet/ipv4/ip_forward=1\nnet/ipv6/conf/default/forwarding=1\nnet/ipv6/conf/all/forwarding=1\n```\n\n\u3067\u3088\u3044\u306f\u305a\u3060\u304c\u3001\u3046\u307e\u304f\u884c\u304b\u306a\u3051\u308c\u3070\u4ee5\u4e0b\u3082\u884c\u3046\u3002\n\n\n```/etc/sysctl.conf\n#net.ipv4.ip_forward=1\nnet.ipv4.ip_forward=1\n\n# sysctl -p\n```\n\n```/etc/rc.local\niptables -t nat -A INPUT -i enxb827eb602cea -p udp --dport 1194 -j ACCEPT\niptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o enxb827eb602cea -j SNAT --to-source 192.168.10.xx\n```\n\n## OpenVPN\u306e\u8d77\u52d5\n\n```\n# service openvpn start\n# update-rc.d openvpn defaults\n```\n\n# OVPN\u306e\u751f\u6210\n\nAndroid\u306eopenvpn client\u306a\u3069\u3067\u306fovpn\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3068\u4fbf\u5229\u306a\u306e\u3067\u3001\n\u305d\u306e\u751f\u6210\u306e\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3002\n\n```/etc/openvpn/easy-rsa/keys/MakeOVPN.sh\n#!/bin/bash \n \n# Default Variable Declarations \nDEFAULT=\"Default.txt\" \nFILEEXT=\".ovpn\" \nCRT=\".crt\" \nKEY=\".3des.key\" \nCA=\"ca.crt\" \nTA=\"ta.key\" \n \n#Ask for a Client name \necho \"Please enter an existing Client Name:\"\nread NAME \n \n \n#1st Verify that client\u2019s Public Key Exists \nif [ ! -f $NAME$CRT ]; then \n echo \"[ERROR]: Client Public Key Certificate not found: $NAME$CRT\" \n exit \nfi \necho \"Client\u2019s cert found: $NAME$CR\" \n \n \n#Then, verify that there is a private key for that client \nif [ ! -f $NAME$KEY ]; then \n echo \"[ERROR]: Client 3des Private Key not found: $NAME$KEY\" \n exit \nfi \necho \"Client\u2019s Private Key found: $NAME$KEY\"\n\n#Confirm the CA public key exists \nif [ ! -f $CA ]; then \n echo \"[ERROR]: CA Public Key not found: $CA\" \n exit \nfi \necho \"CA public Key found: $CA\" \n\n#Confirm the tls-auth ta key file exists \nif [ ! -f $TA ]; then \n echo \"[ERROR]: tls-auth Key not found: $TA\" \n exit \nfi \necho \"tls-auth Private Key found: $TA\" \n \n#Ready to make a new .opvn file - Start by populating with the \ndefault file \ncat $DEFAULT > $NAME$FILEEXT \n \n#Now, append the CA Public Cert \necho \"<ca>\" >> $NAME$FILEEXT \ncat $CA >> $NAME$FILEEXT \necho \"</ca>\" >> $NAME$FILEEXT\n\n#Next append the client Public Cert \necho \"<cert>\" >> $NAME$FILEEXT \ncat $NAME$CRT | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' >> $NAME$FILEEXT \necho \"</cert>\" >> $NAME$FILEEXT \n \n#Then, append the client Private Key \necho \"<key>\" >> $NAME$FILEEXT \ncat $NAME$KEY >> $NAME$FILEEXT \necho \"</key>\" >> $NAME$FILEEXT \n \n#Finally, append the TA Private Key \necho \"<tls-auth>\" >> $NAME$FILEEXT \ncat $TA >> $NAME$FILEEXT \necho \"</tls-auth>\" >> $NAME$FILEEXT \n \necho \"Done! $NAME$FILEEXT Successfully Created.\"\n```\n\n```\n# chmod 700 MakeOVPN.sh\n# ./MakeOVPN.sh\n```\n", "tags": ["OpenVPN", "server", "RaspberryPi", "UbuntuMATE"]}