{"context": " More than 1 year has passed since last update.\n\n\u914d\u5217\u306e\u914d\u5217\u3078\u306e\u683c\u7d0d\n\u65e5\u8db3\u63cf\u753b\u7528\u306eCSV\u30d5\u30a1\u30a4\u30eb\uff08\u30bd\u30fc\u30b9\u3068\u540c\u4e00\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\uff09\u3092\u958b\u3044\u3066\u3001\u4e00\u65e6String\u3092\u8981\u7d20\u3068\u3059\u308b\u914d\u5217\uff081\u65e5\u5206\u306e\u65e5\u4ed8\u3068OHLC\u5024\uff09\u306e\u914d\u5217result\u306b\u683c\u7d0d\u3059\u308b\u3002\u3055\u3089\u306bresult\u3092Double\u3092\u8981\u7d20\u3068\u3059\u308b\u914d\u5217\uff081\u65e5\u5206\u306eOHLC\u5024\uff09\u306e\u914d\u5217ar\u306b\u5909\u63db\u3059\u308b\u3002\u5909\u63db\u306b\u306fC\u306e\u95a2\u6570atof\u3092\u4f7f\u3046\u3002\u6587\u5b57\uff0f\u6570\u5024\u306e\u5909\u63db\u5f8c\u3001CSV\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u306eOHLC\u5024\u304b\u3089\u6700\u5927\u6700\u5c0f\u5024\u306e\u691c\u51fa\u3082\u884c\u3046\u3002 (Xcode7.0 + Swift2.0 + Terminal.App)\n\n\u6b8b\u308a\u8ab2\u984c\n\n\u914d\u5217ar\u3092NSDate\u3068Double\u3092\u683c\u7d0d\u3057\u305f\u914d\u5217\u306e\u914d\u5217\u3078\u3068\u4fee\u6b63\u3002\nresult\u306b1\u65e5\u5206\u306e\u65e5\u4ed8\u3001OHLC\u5024\u306b\u52a0\u3048\u3066Volume\u3082\u683c\u7d0d\u3059\u308b\u3088\u3046\u4fee\u6b63\u3002\n\n\nswift2.0.swift\nimport Foundation\nimport Darwin\nvar result: [[String]] = []\nlet path = \"./TEST_Stock.csv\"\n//let path = \"./stest.csv\" \n//NSString.stringWithContentsOfFile\u3092\u547c\u3076\u3068\u3001ambigous\u3068\u304b\u8a00\u3046\u306e\u3067...\ndo {\n  var data = try String(contentsOfFile: path,\n                    encoding: NSUTF8StringEncoding)\n  data.enumerateLines { (line, stop) -> () in\n    result.append(line.componentsSeparatedByString(\",\"))\n  }\n} catch let e as NSError {print(e.localizedDescription)} \n//print(result)\n// taking last 10 elements\n\nlet limit = 10\nlet r: Range<Int> = 0..<result.count-limit\nresult.removeRange(r)\nfor (idx, e) in result.enumerate() {\n  print(\"\\(idx) : \\(e)\")\n}\nvar ar: [[Double]] = []\nfunc minmax(result: [[String]], inout ar: [[Double]]) -> (Double, Double) {\n//  taking partial part, #1 to #4 of Array -> ArraySlice\n  let result0 = result.map( {Array($0[1...4])} )\n  ar = result0.map({$0.map({atof($0)})})\n  //var max: Double = -1.0, min: Double = Double.infinity//1.0e38\n  var max: Double = -Double.infinity, min: Double = -max\n  for e in ar {\n  // giita:// tag:swift map reduce\n    max = e.reduce(max, combine: {$0>$1 ? $0 : $1})\n    min = e.reduce(min, combine: {$0<$1 ? $0 : $1})\n  }\n  return (min, max)\n}\nlet tap = minmax(result, ar: &ar)\nprint(tap)\n\n\n\nTEST_Stock.csv\nMDATE,OPEN,HIGH,LOW,CLOSE,VOLUME                                                \n1987/8/1,24755,24755,24755,24755,0\n1987/8/3,24483,24483,24483,24483,0\n1987/8/4,24172,24172,24172,24172,0\n1987/8/5,24297,24297,24297,24297,0\n1987/8/6,24658,24658,24658,24658,0 \n1987/8/7,24800,24800,24800,24800,0\n1987/8/10,25119,25119,25119,25119,0\n1987/8/11,25282,25282,25282,25282,0\n1987/8/12,25560,25560,25560,25560,0\n1987/8/13,25575,25575,25575,25575,0\n1987/8/14,25494,25494,25494,25494,0\n1987/8/17,25378,25378,25378,25378,0\n1987/8/18,25344,25344,25344,25344,0\n1987/8/19,25231,25231,25231,25231,0\n1987/8/20,25396,25396,25396,25396,0\n1987/8/21,25559,25559,25559,25559,0\n1987/8/22,25764,25764,25764,25764,0\n1987/8/24,25754,25754,25754,25754,0\n1987/8/25,25643,25643,25643,25643,0\n1987/8/26,25875,25875,25875,25875,0\n1987/8/27,25968,25968,25968,25968,0\n1987/8/28,25974,25974,25974,25974,0\n1987/8/29,26048,26048,26048,26048,0\n1987/8/31,26029,26029,26029,26029,0\n1987/9/1,26118,26118,26118,26118,0\n1987/9/2,25946,25946,25946,25946,0\n1987/9/3,25649,25649,25649,25649,0\n1987/9/4,25744,25744,25744,25744,0\n\n\n#\u914d\u5217\u306e\u914d\u5217\u3078\u306e\u683c\u7d0d\n\n\u65e5\u8db3\u63cf\u753b\u7528\u306eCSV\u30d5\u30a1\u30a4\u30eb\uff08\u30bd\u30fc\u30b9\u3068\u540c\u4e00\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\uff09\u3092\u958b\u3044\u3066\u3001\u4e00\u65e6String\u3092\u8981\u7d20\u3068\u3059\u308b\u914d\u5217\uff081\u65e5\u5206\u306e\u65e5\u4ed8\u3068OHLC\u5024\uff09\u306e\u914d\u5217result\u306b\u683c\u7d0d\u3059\u308b\u3002\u3055\u3089\u306bresult\u3092Double\u3092\u8981\u7d20\u3068\u3059\u308b\u914d\u5217\uff081\u65e5\u5206\u306eOHLC\u5024\uff09\u306e\u914d\u5217ar\u306b\u5909\u63db\u3059\u308b\u3002\u5909\u63db\u306b\u306fC\u306e\u95a2\u6570atof\u3092\u4f7f\u3046\u3002\u6587\u5b57\uff0f\u6570\u5024\u306e\u5909\u63db\u5f8c\u3001CSV\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u306eOHLC\u5024\u304b\u3089\u6700\u5927\u6700\u5c0f\u5024\u306e\u691c\u51fa\u3082\u884c\u3046\u3002 (Xcode7.0 + Swift2.0 + Terminal.App)\n\n#\u6b8b\u308a\u8ab2\u984c\n- \u914d\u5217ar\u3092NSDate\u3068Double\u3092\u683c\u7d0d\u3057\u305f\u914d\u5217\u306e\u914d\u5217\u3078\u3068\u4fee\u6b63\u3002\n- result\u306b1\u65e5\u5206\u306e\u65e5\u4ed8\u3001OHLC\u5024\u306b\u52a0\u3048\u3066Volume\u3082\u683c\u7d0d\u3059\u308b\u3088\u3046\u4fee\u6b63\u3002\n\n```Swift:swift2.0.swift\nimport Foundation\nimport Darwin\nvar result: [[String]] = []\nlet path = \"./TEST_Stock.csv\"\n//let path = \"./stest.csv\" \n//NSString.stringWithContentsOfFile\u3092\u547c\u3076\u3068\u3001ambigous\u3068\u304b\u8a00\u3046\u306e\u3067...\ndo {\n  var data = try String(contentsOfFile: path,\n                    encoding: NSUTF8StringEncoding)\n  data.enumerateLines { (line, stop) -> () in\n    result.append(line.componentsSeparatedByString(\",\"))\n  }\n} catch let e as NSError {print(e.localizedDescription)} \n//print(result)\n// taking last 10 elements\n\nlet limit = 10\nlet r: Range<Int> = 0..<result.count-limit\nresult.removeRange(r)\nfor (idx, e) in result.enumerate() {\n  print(\"\\(idx) : \\(e)\")\n}\nvar ar: [[Double]] = []\nfunc minmax(result: [[String]], inout ar: [[Double]]) -> (Double, Double) {\n//  taking partial part, #1 to #4 of Array -> ArraySlice\n  let result0 = result.map( {Array($0[1...4])} )\n  ar = result0.map({$0.map({atof($0)})})\n  //var max: Double = -1.0, min: Double = Double.infinity//1.0e38\n  var max: Double = -Double.infinity, min: Double = -max\n  for e in ar {\n  // giita:// tag:swift map reduce\n    max = e.reduce(max, combine: {$0>$1 ? $0 : $1})\n    min = e.reduce(min, combine: {$0<$1 ? $0 : $1})\n  }\n  return (min, max)\n}\nlet tap = minmax(result, ar: &ar)\nprint(tap)\n```\n\n```Text:TEST_Stock.csv\nMDATE,OPEN,HIGH,LOW,CLOSE,VOLUME                                                \n1987/8/1,24755,24755,24755,24755,0\n1987/8/3,24483,24483,24483,24483,0\n1987/8/4,24172,24172,24172,24172,0\n1987/8/5,24297,24297,24297,24297,0\n1987/8/6,24658,24658,24658,24658,0 \n1987/8/7,24800,24800,24800,24800,0\n1987/8/10,25119,25119,25119,25119,0\n1987/8/11,25282,25282,25282,25282,0\n1987/8/12,25560,25560,25560,25560,0\n1987/8/13,25575,25575,25575,25575,0\n1987/8/14,25494,25494,25494,25494,0\n1987/8/17,25378,25378,25378,25378,0\n1987/8/18,25344,25344,25344,25344,0\n1987/8/19,25231,25231,25231,25231,0\n1987/8/20,25396,25396,25396,25396,0\n1987/8/21,25559,25559,25559,25559,0\n1987/8/22,25764,25764,25764,25764,0\n1987/8/24,25754,25754,25754,25754,0\n1987/8/25,25643,25643,25643,25643,0\n1987/8/26,25875,25875,25875,25875,0\n1987/8/27,25968,25968,25968,25968,0\n1987/8/28,25974,25974,25974,25974,0\n1987/8/29,26048,26048,26048,26048,0\n1987/8/31,26029,26029,26029,26029,0\n1987/9/1,26118,26118,26118,26118,0\n1987/9/2,25946,25946,25946,25946,0\n1987/9/3,25649,25649,25649,25649,0\n1987/9/4,25744,25744,25744,25744,0\n```\n", "tags": ["Swift2.0", "Swift"]}