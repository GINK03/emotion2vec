{"tags": ["Node.js", "RxJS", "keypress"], "context": " More than 1 year has passed since last update.\n\n\u30b4\u30fc\u30eb\nNode.js \u3067 RxJS \u3068 keypress \u3092\u4f7f\u3044\u3001\u300cfps \u306e 1 \u30d5\u30ec\u30fc\u30e0\u5185\u3067\u5148\u982d\u306e 1 \u30ad\u30fc\u5165\u529b\u306e\u307f\u3092\u53d7\u3051\u4ed8\u3051\u308b\u300d\u3068\u3044\u3046\u51e6\u7406\u3092\u4f5c\u308b\u3053\u3068\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nvar keypress = require('keypress');\nvar Rx = require('rx');\n\nvar FPS = 2;\n\nkeypress(process.stdin);\nprocess.stdin.setRawMode(true);\nprocess.stdin.resume();\n\nvar pauser = new Rx.Subject();\n\nvar timerSource = Rx.Observable\n  .timer(0, 1000 / FPS)\n  .timeInterval()\n  .map(function(data) {\n    pauser.onNext(true);\n    return data;\n  })\n;\n\nvar wrappedHandler;\nvar keypressSource = Rx.Observable\n  .fromEventPattern(\n    function addHandler(handler) {\n      wrappedHandler = function(chr, key) {\n        handler(key);\n      };\n      process.stdin.addListener('keypress', wrappedHandler);\n    },\n    function removeHandelr(handler) {\n      process.stdin.removeListener('keypress', wrappedHandler);\n    }\n  )\n  .pausable(pauser)\n  .filter(function() {\n    var isStopped = pauser.isStopped;\n    pauser.onNext(false);\n    return !isStopped;\n  })\n;\n\ntimerSource.subscribe(\n  function(data) {\n    console.log('Frame count:', data.value);\n  }\n);\n\nkeypressSource.subscribe(\n  function (key) {\n    console.log('Input key:', key.name);\n    if (key && key.ctrl && key.name === \"c\") {\n      process.stdin.pause();\n      process.exit(0);\n    }\n  }\n);\n\nnode \u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u884c\u3057\u3066\u9069\u5f53\u306b\u30ad\u30fc\u3092\u9023\u6253\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u51fa\u529b\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\uff1a\n$node ./filename.js\nFrame count: 0\nInput key: j\nFrame count: 1\nInput key: j\nFrame count: 2\nFrame count: 3\nInput key: n\nFrame count: 4\nInput key: n\nFrame count: 5\nInput key: k\nFrame count: 6\nInput key: k\nFrame count: 7\nInput key: k\nFrame count: 8\nFrame count: 9\nFrame count: 10\nInput key: c\n\n\u540c\u30d5\u30ec\u30fc\u30e0\u5185\u3067\u30012\u56de\u4ee5\u4e0a\u306e\u30ad\u30fc\u53d7\u4ed8\u3092\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001\u629c\u3051\u308b\u306b\u306f Ctrl-C \u3092\u62bc\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u53c2\u8003\u30ea\u30f3\u30af\n\n\u300cRxJS\u300d\u521d\u5fc3\u8005\u5165\u9580 \u2013 JavaScript\u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u5e38\u8b58\u3092\u5909\u3048\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\nBridging to Events\nRx.Observable.fromEvent(element, eventName, [selector])\nRx.Observable.fromEventPattern(addHandler, [removeHandler], [selector])\nRx.Observable.prototype.pausable(pauser)\nRx.Observable.timer(dueTime, [period], [scheduler])\n\n\u304a\u3057\u3083\u308cCLI\u3092\u4f5c\u308b\u305f\u3081\u306enpm\u30e2\u30b8\u30e5\u30fc\u30eb\u9054 \u306e keypress \u306e\u9805\u76ee\n\n\n\u6240\u611f\n\n\u5143\u3005\u306f\u30b2\u30fc\u30e0\u7684\u306a\u5165\u529b\u53d7\u4ed8\u3092\u4f5c\u308a\u305f\u3044\u3068\u3044\u3046\u8da3\u65e8\u3067\u3057\u305f\u304c\u3001\u304a\u305d\u3089\u304f\u5b9f\u969b\u306f\u3001\u4f8b\u3048\u3070\u683c\u95d8\u30b2\u30fc\u30e0\u3067\u3042\u308c\u3070\u5148\u884c\u5165\u529b\u306a\u3069\u306e\u4ed5\u69d8\u3082\u3042\u308b\u305f\u3081\u3001\u3053\u3093\u306a\u306b\u5358\u7d14\u3067\u306f\u306a\u3044\u3068\u306f\u601d\u3044\u307e\u3059\u3002\n\npausable \u306b\u3088\u308b\u30d5\u30e9\u30b0\u7ba1\u7406\u3067\u306f\u306a\u304f\u3066\u3001\u305d\u308c\u3092\u4e00\u767a\u3067\u89e3\u6c7a\u3057\u3066\u304f\u308c\u308b operator \u304c\u3042\u308a\u305d\u3046\u306a\u4e88\u611f\u3082\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u81ea\u5206\u306b\u306f\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n## \u30b4\u30fc\u30eb\n\nNode.js \u3067 [RxJS](https://www.npmjs.com/package/rx) \u3068 [keypress](https://www.npmjs.com/package/keypress) \u3092\u4f7f\u3044\u3001\u300cfps \u306e 1 \u30d5\u30ec\u30fc\u30e0\u5185\u3067\u5148\u982d\u306e 1 \u30ad\u30fc\u5165\u529b\u306e\u307f\u3092\u53d7\u3051\u4ed8\u3051\u308b\u300d\u3068\u3044\u3046\u51e6\u7406\u3092\u4f5c\u308b\u3053\u3068\u3002\n\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n```\nvar keypress = require('keypress');\nvar Rx = require('rx');\n\nvar FPS = 2;\n\nkeypress(process.stdin);\nprocess.stdin.setRawMode(true);\nprocess.stdin.resume();\n\nvar pauser = new Rx.Subject();\n\nvar timerSource = Rx.Observable\n  .timer(0, 1000 / FPS)\n  .timeInterval()\n  .map(function(data) {\n    pauser.onNext(true);\n    return data;\n  })\n;\n\nvar wrappedHandler;\nvar keypressSource = Rx.Observable\n  .fromEventPattern(\n    function addHandler(handler) {\n      wrappedHandler = function(chr, key) {\n        handler(key);\n      };\n      process.stdin.addListener('keypress', wrappedHandler);\n    },\n    function removeHandelr(handler) {\n      process.stdin.removeListener('keypress', wrappedHandler);\n    }\n  )\n  .pausable(pauser)\n  .filter(function() {\n    var isStopped = pauser.isStopped;\n    pauser.onNext(false);\n    return !isStopped;\n  })\n;\n\ntimerSource.subscribe(\n  function(data) {\n    console.log('Frame count:', data.value);\n  }\n);\n\nkeypressSource.subscribe(\n  function (key) {\n    console.log('Input key:', key.name);\n    if (key && key.ctrl && key.name === \"c\") {\n      process.stdin.pause();\n      process.exit(0);\n    }\n  }\n);\n```\n\n`node` \u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u884c\u3057\u3066\u9069\u5f53\u306b\u30ad\u30fc\u3092\u9023\u6253\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u51fa\u529b\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\uff1a\n\n```bash\n$node ./filename.js\nFrame count: 0\nInput key: j\nFrame count: 1\nInput key: j\nFrame count: 2\nFrame count: 3\nInput key: n\nFrame count: 4\nInput key: n\nFrame count: 5\nInput key: k\nFrame count: 6\nInput key: k\nFrame count: 7\nInput key: k\nFrame count: 8\nFrame count: 9\nFrame count: 10\nInput key: c\n```\n\n\u540c\u30d5\u30ec\u30fc\u30e0\u5185\u3067\u30012\u56de\u4ee5\u4e0a\u306e\u30ad\u30fc\u53d7\u4ed8\u3092\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001\u629c\u3051\u308b\u306b\u306f `Ctrl-C` \u3092\u62bc\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\n## \u53c2\u8003\u30ea\u30f3\u30af\n\n- [\u300cRxJS\u300d\u521d\u5fc3\u8005\u5165\u9580 \u2013 JavaScript\u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u5e38\u8b58\u3092\u5909\u3048\u308b\u30e9\u30a4\u30d6\u30e9\u30ea](http://liginc.co.jp/web/js/151272)\n- [Bridging to Events](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/gettingstarted/events.md)\n- [Rx.Observable.fromEvent(element, eventName, [selector])](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/fromevent.md)\n- [Rx.Observable.fromEventPattern(addHandler, [removeHandler], [selector])](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/fromeventpattern.md)\n- [Rx.Observable.prototype.pausable(pauser)](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/pausable.md)\n- [Rx.Observable.timer(dueTime, [period], [scheduler])](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/operators/timer.md)\n- [\u304a\u3057\u3083\u308cCLI\u3092\u4f5c\u308b\u305f\u3081\u306enpm\u30e2\u30b8\u30e5\u30fc\u30eb\u9054](http://yosuke-furukawa.hatenablog.com/entry/2013/12/14/230653) \u306e keypress \u306e\u9805\u76ee\n\n\n## \u6240\u611f\n- \u5143\u3005\u306f\u30b2\u30fc\u30e0\u7684\u306a\u5165\u529b\u53d7\u4ed8\u3092\u4f5c\u308a\u305f\u3044\u3068\u3044\u3046\u8da3\u65e8\u3067\u3057\u305f\u304c\u3001\u304a\u305d\u3089\u304f\u5b9f\u969b\u306f\u3001\u4f8b\u3048\u3070\u683c\u95d8\u30b2\u30fc\u30e0\u3067\u3042\u308c\u3070[\u5148\u884c\u5165\u529b](http://kakuge.com/wiki/pages/%E5%85%88%E8%A1%8C%E5%85%A5%E5%8A%9B)\u306a\u3069\u306e\u4ed5\u69d8\u3082\u3042\u308b\u305f\u3081\u3001\u3053\u3093\u306a\u306b\u5358\u7d14\u3067\u306f\u306a\u3044\u3068\u306f\u601d\u3044\u307e\u3059\u3002\n- `pausable` \u306b\u3088\u308b\u30d5\u30e9\u30b0\u7ba1\u7406\u3067\u306f\u306a\u304f\u3066\u3001\u305d\u308c\u3092\u4e00\u767a\u3067\u89e3\u6c7a\u3057\u3066\u304f\u308c\u308b [operator](https://github.com/Reactive-Extensions/RxJS/tree/master/doc/api/core/operators) \u304c\u3042\u308a\u305d\u3046\u306a\u4e88\u611f\u3082\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u81ea\u5206\u306b\u306f\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n"}