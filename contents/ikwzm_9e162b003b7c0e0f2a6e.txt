{"context": "\n\n\u306f\u3058\u3081\u306b\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Synthesijer\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)\u306e\u7d9a\u304d\u3067\u3059\u3002\n\u4eca\u56de\u306f Java\u3067\u8a18\u8ff0\u3057\u3066Synthesijer\u3092\u4f7f\u3063\u3066\u9ad8\u4f4d\u5408\u6210\u3057\u305fRTL\u3092 Zynq\u4e0a\u306b\u5b9f\u88c5\u3057\u3066 Linux\u304b\u3089 MessagePack-RPC \u3067\u5236\u5fa1\u3059\u308b\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u6b21\u306e\u3088\u3046\u306a\u74b0\u5883\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\nFPGA  : Xilinx Zynq Z-7010 AP SoC\nBoard : Digilent ZYBO\nOS    : Linux 3.18 + Debian 8.2(jessie)\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5168\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\n\n\u30d6\u30ed\u30c3\u30af\u56f3\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308bjava\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u3002kazunori279\u3055\u3093\u306e\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092FPGA\u3067\u66f8\u3044\u3066\u307f\u305f\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\nFib.java\npublic class Fib {\n    public long fib(int n) {\n        long cur  = 0;\n        long next = 1;\n        for (int i = 0; i < n; ++i) {\n            long tmp = cur;\n            cur = next;\n            next += tmp;\n        }\n        return cur;\n    }\n}\n\n\n\n\u30c6\u30b9\u30c8\u7528\u30b9\u30af\u30ea\u30d7\u30c8\n\nfibonacci_server.rb\nrequire 'msgpack'\nrequire 'serialport'\n\nclass FibonacciServer\n\n  def initialize\n    @port     = SerialPort.new(\"/dev/zptty0\", 38400)\n    @port.read_timeout = 1000\n    @port.flow_control = SerialPort::HARD\n    @unpacker = MessagePack::Unpacker.new(@port)\n    @msgid    = 0\n  end\n\n  def call(method, args)\n    @msgid = (@msgid+1) % 256\n    req = [0, @msgid, method, args].to_msgpack\n    @port.write(req)\n    @unpacker.each do |obj|\n      type, resid, error, result = obj\n      if (error == nil) then\n        return result\n      else\n        puts error\n        return nil\n      end\n      break\n    end \n  end\n\n  def fib(arg)\n    return call('fib', [arg])\n  end\nend\n\n\n\ntest.rb\nrequire_relative 'fibonacci_server'\n\nfib = FibonacciServer.new\n\n(0..90).to_a.each do |n|\n  f = fib.fib(n)\n  puts \"#{n} => #{f}\"\nend\n\n\n\n\u5b9f\u884c\u7d50\u679c\nshell% ruby test.rb\n0 => 0\n1 => 1\n2 => 1\n3 => 2\n4 => 3\n5 => 5\n6 => 8\n7 => 13\n8 => 21\n9 => 34\n10 => 55\n11 => 89\n12 => 144\n13 => 233\n14 => 377\n15 => 610\n16 => 987\n17 => 1597\n18 => 2584\n19 => 4181\n20 => 6765\n21 => 10946\n22 => 17711\n23 => 28657\n24 => 46368\n25 => 75025\n26 => 121393\n27 => 196418\n28 => 317811\n29 => 514229\n30 => 832040\n31 => 1346269\n32 => 2178309\n33 => 3524578\n34 => 5702887\n35 => 9227465\n36 => 14930352\n37 => 24157817\n38 => 39088169\n39 => 63245986\n40 => 102334155\n41 => 165580141\n42 => 267914296\n43 => 433494437\n44 => 701408733\n45 => 1134903170\n46 => 1836311903\n47 => 2971215073\n48 => 4807526976\n49 => 7778742049\n50 => 12586269025\n51 => 20365011074\n52 => 32951280099\n53 => 53316291173\n54 => 86267571272\n55 => 139583862445\n56 => 225851433717\n57 => 365435296162\n58 => 591286729879\n59 => 956722026041\n60 => 1548008755920\n61 => 2504730781961\n62 => 4052739537881\n63 => 6557470319842\n64 => 10610209857723\n65 => 17167680177565\n66 => 27777890035288\n67 => 44945570212853\n68 => 72723460248141\n69 => 117669030460994\n70 => 190392490709135\n71 => 308061521170129\n72 => 498454011879264\n73 => 806515533049393\n74 => 1304969544928657\n75 => 2111485077978050\n76 => 3416454622906707\n77 => 5527939700884757\n78 => 8944394323791464\n79 => 14472334024676221\n80 => 23416728348467685\n81 => 37889062373143906\n82 => 61305790721611591\n83 => 99194853094755497\n84 => 160500643816367088\n85 => 259695496911122585\n86 => 420196140727489673\n87 => 679891637638612258\n88 => 1100087778366101931\n89 => 1779979416004714189\n90 => 2880067194370816120\n\n\n\u30c7\u30b6\u30a4\u30f3\u30d5\u30ed\u30fc\n\n\u7528\u610f\u3059\u308b\u3082\u306e\nZYNQ\u7528\u306b\u56de\u8def\u3092\u30a4\u30f3\u30d7\u30ea\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u305f\u3081\u306b\u306f\u6b21\u306e\u958b\u767a\u30c4\u30fc\u30eb\u3092\u4f7f\u3044\u307e\u3059\u3002\n\nXilinx Vivado 2015.3\nXilinx SDK 2015.3\n\n\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u306f\u6b21\u306e ruby \u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u5fc5\u8981\u3067\u3059\u3002\n\nmsgpack-ruby\nserialport\n\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u5404submodule \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nshell% git clone git://github.com/ikwzm/msgpack-vhdl-examples.git\nshell% cd msgpack-vhdl-examples\nshell% git submodule init\nshell% git submodule update\n\n\nFib.java\u3092\u9ad8\u4f4d\u5408\u6210\nshell% export SYNTHESIJER=~/work/synthesijer/synthesijer/bin \nshell% cd examples/fibonacci/src/main/synthesijer\nshell% make\n\n\u306a\u304a\u3001SYNTHESIJER\u3000\u306b\u306fsynthesijer\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u30d1\u30b9\u3092\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nIP-Package\u3092\u4f5c\u308b\n\u5177\u4f53\u7684\u306a\u624b\u9806\u306fSynthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(IP-Package\u7de8)\u3068\u540c\u69d8\u3067\u3059\u3002\u8a73\u7d30\u306f\u305d\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u3053\u3067\u306f\u7c21\u5358\u306b\u6b21\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067IP\u3092\u4f5c\u308a\u307e\u3059\u3002\nshell% cd examples/fibonacci/fpga/xilinx/zybo_test_synthesijer/ip\nshell% vivado -mode batch -source create_ip.tcl\n\n\n\u8ad6\u7406\u5408\u6210\uff5eBOOT.bin\u3092\u4f5c\u308b\u307e\u3067\n\u5177\u4f53\u7684\u306a\u624b\u9806\u306fSynthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(ZYNQ\u8ad6\u7406\u5408\u6210\u7de8)\u3068\u540c\u69d8\u3067\u3059\u3002\u8a73\u7d30\u306f\u305d\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u306e\u624b\u9806\u3067BOOT.bin\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u8ad6\u7406\u5408\u6210\nshell% cd examples/fibonacci/fpga/xilinx/zybo_test_synthesijer/project\nshell% vivado -mode batch -source create_project.tcl\nshell% vivado -mode batch -source implementation.tcl\n\n\nSDK\u306e\u305f\u3081\u306b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u60c5\u5831\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b.\nVivado> File > Export > Export Hardware > Export to: > OK\n\n\u3053\u308c\u3067 project/project.sdk/design_1_wrapper.hdf \u304c\u51fa\u6765\u307e\u3059.\n\nSDK\u3092\u8d77\u52d5\u3059\u308b.\nVivado> File > Launch SDK > Exported location: Workspace: > OK\n\n\nFSBL(First Stage Boot Loader)\u3092\u751f\u6210\u3059\u308b.\nSDK> File > New > Aplication Project\n\n\nu-boot\u3092\u751f\u6210\u3059\u308b.\n\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f u-boot \u306e\u4f5c\u6210\u306f\u884c\u3044\u307e\u305b\u3093. \u3068\u308a\u3042\u3048\u305a\u9069\u5f53\u306b\u4f5c\u3063\u305f u-boot.elf \u3092 ./boot \u306b\u5165\u308c\u3066\u304a\u304d\u307e\u3057\u305f.\n\nBOOT.bin\u3092\u751f\u6210\u3059\u308b.\nshell% cd examples/fibonacci/fpga/xilinx/zybo_test_synthesijer/boot/\nshell% bootgen -image u-boot.bif -w on -o BOOT.bin\n\n\nZPTTY\u30c9\u30e9\u30a4\u30d0\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u5177\u4f53\u7684\u306a\u624b\u9806\u306fSynthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(TTY\u30c9\u30e9\u30a4\u30d0\u7de8)\u3068\u540c\u69d8\u3067\u3059\u3002\n\n\u53c2\u7167\nMessagePack for VHDL (https://github.com/ikwzm/msgpack-vhdl)\nMessagePack for VHDL Examples (https://github.com/ikwzm/msgpack-vhdl-examples)\nMessagePack-RPC\u3092\u4f7f\u3063\u3066FPGA\u3092\u5236\u5fa1\nSynthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u7de8)\nSynthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(IP-Package\u7de8)\nSynthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(ZYNQ\u8ad6\u7406\u5408\u6210\u7de8)\nSynthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(TTY\u30c9\u30e9\u30a4\u30d0\u7de8)\nSynthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(MessagePack-Ruby\u7de8)\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Synthesijer\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)\n#\u306f\u3058\u3081\u306b\n[\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Synthesijer\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)](http://qiita.com/ikwzm/items/6b3e8120cc4ebbdd5a27)\u306e\u7d9a\u304d\u3067\u3059\u3002\n\u4eca\u56de\u306f Java\u3067\u8a18\u8ff0\u3057\u3066Synthesijer\u3092\u4f7f\u3063\u3066\u9ad8\u4f4d\u5408\u6210\u3057\u305fRTL\u3092 Zynq\u4e0a\u306b\u5b9f\u88c5\u3057\u3066 Linux\u304b\u3089 MessagePack-RPC \u3067\u5236\u5fa1\u3059\u308b\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u6b21\u306e\u3088\u3046\u306a\u74b0\u5883\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n - FPGA  : Xilinx Zynq Z-7010 AP SoC\n - Board : Digilent ZYBO\n - OS    : Linux 3.18 + Debian 8.2(jessie)\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u5168\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f[\u3053\u3061\u3089](https://github.com/ikwzm/msgpack-vhdl-examples/tree/master/examples/fibonacci)\u306b\u3042\u308a\u307e\u3059\u3002\n\n#\u30d6\u30ed\u30c3\u30af\u56f3\n\n![akgeo1.jpg](https://qiita-image-store.s3.amazonaws.com/0/24981/27a5a198-6166-ce04-e07a-e92fa95bb9dd.jpeg)\n\n#\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308bjava\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u3002kazunori279\u3055\u3093\u306e[\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092FPGA\u3067\u66f8\u3044\u3066\u307f\u305f](http://qiita.com/kazunori279/items/70030eaa08fe632b6b49)\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n````Java:Fib.java\npublic class Fib {\n    public long fib(int n) {\n        long cur  = 0;\n        long next = 1;\n        for (int i = 0; i < n; ++i) {\n            long tmp = cur;\n            cur = next;\n            next += tmp;\n        }\n        return cur;\n    }\n}\n````\n\n#\u30c6\u30b9\u30c8\u7528\u30b9\u30af\u30ea\u30d7\u30c8\n\n````ruby:fibonacci_server.rb\nrequire 'msgpack'\nrequire 'serialport'\n\nclass FibonacciServer\n\n  def initialize\n    @port     = SerialPort.new(\"/dev/zptty0\", 38400)\n    @port.read_timeout = 1000\n    @port.flow_control = SerialPort::HARD\n    @unpacker = MessagePack::Unpacker.new(@port)\n    @msgid    = 0\n  end\n\n  def call(method, args)\n    @msgid = (@msgid+1) % 256\n    req = [0, @msgid, method, args].to_msgpack\n    @port.write(req)\n    @unpacker.each do |obj|\n      type, resid, error, result = obj\n      if (error == nil) then\n        return result\n      else\n        puts error\n        return nil\n      end\n      break\n    end \n  end\n\n  def fib(arg)\n    return call('fib', [arg])\n  end\nend\n````\n\n````ruby:test.rb\nrequire_relative 'fibonacci_server'\n\nfib = FibonacciServer.new\n\n(0..90).to_a.each do |n|\n  f = fib.fib(n)\n  puts \"#{n} => #{f}\"\nend\n````\n\n#\u5b9f\u884c\u7d50\u679c\n\n````\nshell% ruby test.rb\n0 => 0\n1 => 1\n2 => 1\n3 => 2\n4 => 3\n5 => 5\n6 => 8\n7 => 13\n8 => 21\n9 => 34\n10 => 55\n11 => 89\n12 => 144\n13 => 233\n14 => 377\n15 => 610\n16 => 987\n17 => 1597\n18 => 2584\n19 => 4181\n20 => 6765\n21 => 10946\n22 => 17711\n23 => 28657\n24 => 46368\n25 => 75025\n26 => 121393\n27 => 196418\n28 => 317811\n29 => 514229\n30 => 832040\n31 => 1346269\n32 => 2178309\n33 => 3524578\n34 => 5702887\n35 => 9227465\n36 => 14930352\n37 => 24157817\n38 => 39088169\n39 => 63245986\n40 => 102334155\n41 => 165580141\n42 => 267914296\n43 => 433494437\n44 => 701408733\n45 => 1134903170\n46 => 1836311903\n47 => 2971215073\n48 => 4807526976\n49 => 7778742049\n50 => 12586269025\n51 => 20365011074\n52 => 32951280099\n53 => 53316291173\n54 => 86267571272\n55 => 139583862445\n56 => 225851433717\n57 => 365435296162\n58 => 591286729879\n59 => 956722026041\n60 => 1548008755920\n61 => 2504730781961\n62 => 4052739537881\n63 => 6557470319842\n64 => 10610209857723\n65 => 17167680177565\n66 => 27777890035288\n67 => 44945570212853\n68 => 72723460248141\n69 => 117669030460994\n70 => 190392490709135\n71 => 308061521170129\n72 => 498454011879264\n73 => 806515533049393\n74 => 1304969544928657\n75 => 2111485077978050\n76 => 3416454622906707\n77 => 5527939700884757\n78 => 8944394323791464\n79 => 14472334024676221\n80 => 23416728348467685\n81 => 37889062373143906\n82 => 61305790721611591\n83 => 99194853094755497\n84 => 160500643816367088\n85 => 259695496911122585\n86 => 420196140727489673\n87 => 679891637638612258\n88 => 1100087778366101931\n89 => 1779979416004714189\n90 => 2880067194370816120\n````\n\n#\u30c7\u30b6\u30a4\u30f3\u30d5\u30ed\u30fc\n\n##\u7528\u610f\u3059\u308b\u3082\u306e\n\nZYNQ\u7528\u306b\u56de\u8def\u3092\u30a4\u30f3\u30d7\u30ea\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u305f\u3081\u306b\u306f\u6b21\u306e\u958b\u767a\u30c4\u30fc\u30eb\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n - Xilinx Vivado 2015.3\n - Xilinx SDK 2015.3\n\n\n\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u306f\u6b21\u306e ruby \u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n - msgpack-ruby\n - serialport\n\n\n##\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u5404submodule \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n````\nshell% git clone git://github.com/ikwzm/msgpack-vhdl-examples.git\nshell% cd msgpack-vhdl-examples\nshell% git submodule init\nshell% git submodule update\n````\n\n##Fib.java\u3092\u9ad8\u4f4d\u5408\u6210\n\n````\nshell% export SYNTHESIJER=~/work/synthesijer/synthesijer/bin \nshell% cd examples/fibonacci/src/main/synthesijer\nshell% make\n````\n\n\u306a\u304a\u3001SYNTHESIJER\u3000\u306b\u306fsynthesijer\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u30d1\u30b9\u3092\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n##IP-Package\u3092\u4f5c\u308b\n\n\u5177\u4f53\u7684\u306a\u624b\u9806\u306f[Synthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(IP-Package\u7de8)](http://qiita.com/ikwzm/items/924fc3fd59bdf7da55a2)\u3068\u540c\u69d8\u3067\u3059\u3002\u8a73\u7d30\u306f\u305d\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u3053\u3067\u306f\u7c21\u5358\u306b\u6b21\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067IP\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n````\nshell% cd examples/fibonacci/fpga/xilinx/zybo_test_synthesijer/ip\nshell% vivado -mode batch -source create_ip.tcl\n````\n\n##\u8ad6\u7406\u5408\u6210\uff5eBOOT.bin\u3092\u4f5c\u308b\u307e\u3067\n\n\u5177\u4f53\u7684\u306a\u624b\u9806\u306f[Synthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(ZYNQ\u8ad6\u7406\u5408\u6210\u7de8)](http://qiita.com/ikwzm/items/0254f1d49602095b5cde)\u3068\u540c\u69d8\u3067\u3059\u3002\u8a73\u7d30\u306f\u305d\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u306e\u624b\u9806\u3067BOOT.bin\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n###\u307e\u305a\u306f\u8ad6\u7406\u5408\u6210\n\n````\nshell% cd examples/fibonacci/fpga/xilinx/zybo_test_synthesijer/project\nshell% vivado -mode batch -source create_project.tcl\nshell% vivado -mode batch -source implementation.tcl\n````\n\n###SDK\u306e\u305f\u3081\u306b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u60c5\u5831\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b.\n\n````\nVivado> File > Export > Export Hardware > Export to: > OK\n````\n\n\u3053\u308c\u3067 project/project.sdk/design_1_wrapper.hdf \u304c\u51fa\u6765\u307e\u3059.\n\n###SDK\u3092\u8d77\u52d5\u3059\u308b.\n\n````\nVivado> File > Launch SDK > Exported location: Workspace: > OK\n````\n\n###FSBL(First Stage Boot Loader)\u3092\u751f\u6210\u3059\u308b.\n\n````\nSDK> File > New > Aplication Project\n````\n\n###u-boot\u3092\u751f\u6210\u3059\u308b.\n\n\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f u-boot \u306e\u4f5c\u6210\u306f\u884c\u3044\u307e\u305b\u3093. \u3068\u308a\u3042\u3048\u305a\u9069\u5f53\u306b\u4f5c\u3063\u305f u-boot.elf \u3092 ./boot \u306b\u5165\u308c\u3066\u304a\u304d\u307e\u3057\u305f.\n\n###BOOT.bin\u3092\u751f\u6210\u3059\u308b.\n\n````\nshell% cd examples/fibonacci/fpga/xilinx/zybo_test_synthesijer/boot/\nshell% bootgen -image u-boot.bif -w on -o BOOT.bin\n````\n\n##ZPTTY\u30c9\u30e9\u30a4\u30d0\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u5177\u4f53\u7684\u306a\u624b\u9806\u306f[Synthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(TTY\u30c9\u30e9\u30a4\u30d0\u7de8)](http://qiita.com/ikwzm/items/533b905f7d1eb2e6c4d5)\u3068\u540c\u69d8\u3067\u3059\u3002\n\n#\u53c2\u7167\n\n[MessagePack for VHDL (https://github.com/ikwzm/msgpack-vhdl)](https://github.com/ikwzm/msgpack-vhdl)\n[MessagePack for VHDL Examples (https://github.com/ikwzm/msgpack-vhdl-examples)](https://github.com/ikwzm/msgpack-vhdl-examples)\n[MessagePack-RPC\u3092\u4f7f\u3063\u3066FPGA\u3092\u5236\u5fa1](http://qiita.com/ikwzm/items/2644c6e50a7049c75d49)\n[Synthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u7de8)](http://qiita.com/ikwzm/items/6cb623b057a687ff4a8e)\n[Synthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(IP-Package\u7de8)](http://qiita.com/ikwzm/items/924fc3fd59bdf7da55a2)\n[Synthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(ZYNQ\u8ad6\u7406\u5408\u6210\u7de8)](http://qiita.com/ikwzm/items/0254f1d49602095b5cde)\n[Synthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(TTY\u30c9\u30e9\u30a4\u30d0\u7de8)](http://qiita.com/ikwzm/items/533b905f7d1eb2e6c4d5)\n[Synthesijer\u3067\u4f5c\u3063\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092MessagePack-RPC\u3067\u5236\u5fa1\u3059\u308b(MessagePack-Ruby\u7de8)](http://qiita.com/ikwzm/items/f742e2c9b5d9642d8857)\n[\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Synthesijer\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)](http://qiita.com/ikwzm/items/6b3e8120cc4ebbdd5a27)\n", "tags": ["Synthesijer", "FPGA", "zynq", "Linux", "Vivado"]}