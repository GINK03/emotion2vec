{"tags": ["Objective-C", "Cocoa"], "context": " More than 1 year has passed since last update.NSImage\u3092\u52a0\u5de5\u3057\u3066\u65b0\u3057\u3044\u753b\u50cf\u3092\u4f5c\u308a\u305f\u3044\u3068\u304d\u306a\u3069\u3001\u30aa\u30d5\u30e9\u30a4\u30f3\u3067\u3055\u3063\u3068\u4f7f\u3048\u308bBitmap\u9818\u57df\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u4f7f\u3044\u65b9\u4f8b\n\n// \u4e0b\u8a18\u306e\u30b5\u30f3\u30d7\u30eb\u30af\u30e9\u30b9\u3092\u8aad\u307f\u8fbc\u307f\n#import \"BitmapBuffer.h\"\n\n// \u521d\u671f\u5316\nBitmapBuffer *bitmapBuffer;\nbitmapBuffer = [[BitmapBuffer alloc] initWithSize:NSMakeSize(640, 480)];\n\n// \u63cf\u753b\n// bitmapBuffer.context \u3067\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u304c\u53d6\u308a\u51fa\u305b\u308b\u306e\u3067\u3001CGContextDraw\u306a\u3069\u306b\u6307\u5b9a\u3059\u308b\nCGContextDrawImage(bitmapBuffer.context, NSRect, CGImage);\n\n// \u5909\u63db\nNSImage *image = [bitmapBuffer NSImage];\nCGImageRef cgImage = [bitmapBuffer createCGImage];\n\n// \u4fdd\u5b58\n[bitmapBuffer savePNGImageWithPath:savePath];\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u30af\u30e9\u30b9\nBitmapBuffer.h\n\n#import <Foundation/Foundation.h>\n\n@interface BitmapBuffer : NSObject {\n    unsigned char *bitmap;\n    CGContextRef bitmapContext;\n    CGSize bitmapSize;\n}\n\n@property (readonly) CGContextRef context;\n\n// \u4efb\u610f\u306e\u30b5\u30a4\u30ba\u3067\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u9818\u57df\u3092\u4f5c\u308a\u307e\u3059\n- (id)initWithSize:(NSSize)size;\n\n// \u5185\u5bb9\u3092\u30af\u30ea\u30a2\u3057\u307e\u3059\n- (void)clearBuffer;\n\n// \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u9818\u57df\u306e\u30b5\u30a4\u30ba\u3092\u8fd4\u3057\u307e\u3059\n- (CGSize)size;\n\n// \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u5185\u5bb9\u3092CGImage\u3068\u3057\u3066\u53d6\u308a\u51fa\u3057\u307e\u3059\n- (CGImageRef)createCGImage;\n\n// \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u5185\u5bb9\u3092NSImage\u3068\u3057\u3066\u53d6\u308a\u51fa\u3057\u307e\u3059\n- (NSImage *)NSImage;\n\n// \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u5185\u5bb9\u3092PNG\u306b\u4fdd\u5b58\u3057\u307e\u3059\n- (void)savePNGImageWithPath:(NSString *)filepath;\n@end\n\n\nBitmapBuffer.m\n#import \"BitmapBuffer.h\"\n@implementation BitmapBuffer\n@synthesize context = bitmapContext;\n#pragma mark - init / dealloc\n- (id)initWithSize:(NSSize)size {\n\n    self = [super init];\n    if (self) {\n\n        bitmapSize = NSSizeToCGSize(size);\n        CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\n        bitmap = malloc(bitmapSize.width * bitmapSize.height * sizeof(unsigned char) * 4);\n        bitmapContext = CGBitmapContextCreate(bitmap,\n                                              bitmapSize.width,\n                                              bitmapSize.height,\n                                              8,\n                                              bitmapSize.width * 4,\n                                              colorSpace,\n                                              kCGImageAlphaPremultipliedFirst);\n        CGColorSpaceRelease(colorSpace);\n    }\n    return self;\n}\n- (void)dealloc {\n\n    free(bitmap);\n    CGContextRelease(bitmapContext);\n\n    [super dealloc];\n}\n\n-(void)clearBuffer {\n    CGRect clearRect = CGRectMake(0, 0, bitmapSize.width, bitmapSize.height);\n    CGContextClearRect(bitmapContext, clearRect);\n    CGContextSetFillColorWithColor(bitmapContext, CGColorGetConstantColor(kCGColorBlack));\n    CGContextFillRect(bitmapContext, clearRect);\n}\n\n- (CGSize)size {\n    return bitmapSize;\n}\n\n- (CGImageRef)createCGImage {\n    CGContextFlush(bitmapContext);\n    CGImageRef cgImage = CGBitmapContextCreateImage(bitmapContext);\n    [(id)cgImage autorelease];\n    return cgImage;\n}\n\n- (NSImage *)NSImage {\n    CGImageRef cgImage = [self createCGImage];\n    CGSize size = CGSizeMake(CGImageGetWidth(cgImage), CGImageGetHeight(cgImage));\n    NSImage *image = [[NSImage alloc] initWithCGImage:cgImage size:NSSizeFromCGSize(size)];\n    return [image autorelease];\n}\n\n- (void)savePNGImageWithPath:(NSString *)filepath {\n    CGImageRef cgImage = [self createCGImage];\n    NSBitmapImageRep *bitmapRep = [[NSBitmapImageRep alloc] initWithCGImage:cgImage];\n    NSData *bitmapData = [bitmapRep representationUsingType:NSPNGFileType\n                                                 properties:nil];\n    [bitmapData writeToFile:filepath atomically:YES];\n    [bitmapRep release];\n}\n@end\n\n\nNSImage\u3092\u52a0\u5de5\u3057\u3066\u65b0\u3057\u3044\u753b\u50cf\u3092\u4f5c\u308a\u305f\u3044\u3068\u304d\u306a\u3069\u3001\u30aa\u30d5\u30e9\u30a4\u30f3\u3067\u3055\u3063\u3068\u4f7f\u3048\u308bBitmap\u9818\u57df\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n## \u4f7f\u3044\u65b9\u4f8b\n\n```Objective-C\n\n// \u4e0b\u8a18\u306e\u30b5\u30f3\u30d7\u30eb\u30af\u30e9\u30b9\u3092\u8aad\u307f\u8fbc\u307f\n#import \"BitmapBuffer.h\"\n\n// \u521d\u671f\u5316\nBitmapBuffer *bitmapBuffer;\nbitmapBuffer = [[BitmapBuffer alloc] initWithSize:NSMakeSize(640, 480)];\n\n// \u63cf\u753b\n// bitmapBuffer.context \u3067\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u304c\u53d6\u308a\u51fa\u305b\u308b\u306e\u3067\u3001CGContextDraw\u306a\u3069\u306b\u6307\u5b9a\u3059\u308b\nCGContextDrawImage(bitmapBuffer.context, NSRect, CGImage);\n\n// \u5909\u63db\nNSImage *image = [bitmapBuffer NSImage];\nCGImageRef cgImage = [bitmapBuffer createCGImage];\n\n// \u4fdd\u5b58\n[bitmapBuffer savePNGImageWithPath:savePath];\n\n```\n\n\n\n## \u30b5\u30f3\u30d7\u30eb\u30af\u30e9\u30b9\n\nBitmapBuffer.h\n\n```Objective-C\n\n#import <Foundation/Foundation.h>\n\n@interface BitmapBuffer : NSObject {\n    unsigned char *bitmap;\n    CGContextRef bitmapContext;\n    CGSize bitmapSize;\n}\n\n@property (readonly) CGContextRef context;\n\n// \u4efb\u610f\u306e\u30b5\u30a4\u30ba\u3067\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u9818\u57df\u3092\u4f5c\u308a\u307e\u3059\n- (id)initWithSize:(NSSize)size;\n\n// \u5185\u5bb9\u3092\u30af\u30ea\u30a2\u3057\u307e\u3059\n- (void)clearBuffer;\n\n// \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u9818\u57df\u306e\u30b5\u30a4\u30ba\u3092\u8fd4\u3057\u307e\u3059\n- (CGSize)size;\n\n// \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u5185\u5bb9\u3092CGImage\u3068\u3057\u3066\u53d6\u308a\u51fa\u3057\u307e\u3059\n- (CGImageRef)createCGImage;\n\n// \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u5185\u5bb9\u3092NSImage\u3068\u3057\u3066\u53d6\u308a\u51fa\u3057\u307e\u3059\n- (NSImage *)NSImage;\n\n// \u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u5185\u5bb9\u3092PNG\u306b\u4fdd\u5b58\u3057\u307e\u3059\n- (void)savePNGImageWithPath:(NSString *)filepath;\n@end\n\n```\n\nBitmapBuffer.m\n\n```Objective-C\n#import \"BitmapBuffer.h\"\n@implementation BitmapBuffer\n@synthesize context = bitmapContext;\n#pragma mark - init / dealloc\n- (id)initWithSize:(NSSize)size {\n    \n    self = [super init];\n    if (self) {\n        \n        bitmapSize = NSSizeToCGSize(size);\n        CGColorSpaceRef colorSpace = CGColorSpaceCreateDeviceRGB();\n        bitmap = malloc(bitmapSize.width * bitmapSize.height * sizeof(unsigned char) * 4);\n        bitmapContext = CGBitmapContextCreate(bitmap,\n                                              bitmapSize.width,\n                                              bitmapSize.height,\n                                              8,\n                                              bitmapSize.width * 4,\n                                              colorSpace,\n                                              kCGImageAlphaPremultipliedFirst);\n        CGColorSpaceRelease(colorSpace);\n    }\n    return self;\n}\n- (void)dealloc {\n    \n    free(bitmap);\n    CGContextRelease(bitmapContext);\n    \n    [super dealloc];\n}\n\n-(void)clearBuffer {\n    CGRect clearRect = CGRectMake(0, 0, bitmapSize.width, bitmapSize.height);\n    CGContextClearRect(bitmapContext, clearRect);\n    CGContextSetFillColorWithColor(bitmapContext, CGColorGetConstantColor(kCGColorBlack));\n    CGContextFillRect(bitmapContext, clearRect);\n}\n\n- (CGSize)size {\n    return bitmapSize;\n}\n\n- (CGImageRef)createCGImage {\n    CGContextFlush(bitmapContext);\n    CGImageRef cgImage = CGBitmapContextCreateImage(bitmapContext);\n    [(id)cgImage autorelease];\n    return cgImage;\n}\n\n- (NSImage *)NSImage {\n    CGImageRef cgImage = [self createCGImage];\n    CGSize size = CGSizeMake(CGImageGetWidth(cgImage), CGImageGetHeight(cgImage));\n    NSImage *image = [[NSImage alloc] initWithCGImage:cgImage size:NSSizeFromCGSize(size)];\n    return [image autorelease];\n}\n\n- (void)savePNGImageWithPath:(NSString *)filepath {\n    CGImageRef cgImage = [self createCGImage];\n    NSBitmapImageRep *bitmapRep = [[NSBitmapImageRep alloc] initWithCGImage:cgImage];\n    NSData *bitmapData = [bitmapRep representationUsingType:NSPNGFileType\n                                                 properties:nil];\n    [bitmapData writeToFile:filepath atomically:YES];\n    [bitmapRep release];\n}\n@end\n```\n\n\n\n"}