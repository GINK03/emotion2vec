{"context": "\u554f\u984c:\nGiven two binary strings, return their sum (also a binary string).\nFor example,\na = \"11\"\nb = \"1\"\nReturn \"100\".\nSubscribe to see which companies asked this question\n\u3053\u3061\u3089\u306e\u30af\u30bd\u30b3\u30fc\u30c9:\n\nSolution.java\npublic class Solution {\n    public String addBinary(String a, String b) {\n         int a_length = a.length();\n        int b_length = b.length();\n\n        String[] a_array=new String[a_length];\n        String[] b_array=new String[b_length];\n\n\n        if(a_length==1){\n            a_array[0]=a;\n        } else {\n            for (int i = 0; i < a_length; i++) {\n                a_array[i] = a.substring(i, i + 1);\n            }\n        }\n\n        if(b_length==1){\n            b_array[0]=b;\n        } else {\n            for (int i = 0; i < b_length; i++) {\n                b_array[i] = b.substring(i, i + 1);\n            }\n        }\n        ArrayList<Integer> c_list = new ArrayList<Integer>();\n        ArrayList<Integer> d_list = new ArrayList<Integer>();\n\n        for(int i=a_length-1;i>=0;i--){\n            c_list.add(Integer.parseInt(a_array[i]));\n        }\n        for(int i=b_length-1;i>=0;i--){\n            d_list.add(Integer.parseInt(b_array[i]));\n        }\n\n\n        int i = d_list.size() - c_list.size();\n        if (i > 0) {\n            while (c_list.size() < d_list.size()) {\n                c_list.add(0);\n            }\n        } else {\n            while (d_list.size() < c_list.size()) {\n                d_list.add(0);\n            }\n        }\n\n            int digit = 0;\n\n            ArrayList<Integer> all_list = new ArrayList<>();\n            ArrayList<String> all_list_Str = new ArrayList<>();\n            int s = 0;\n\n            for (i = 0; i < c_list.size(); i++) {\n                if (c_list.get(i) + d_list.get(i) + digit >= 2) {\n\n                    s = c_list.get(i) + d_list.get(i) + digit - 2;\n                    all_list.add(s);\n                    digit = 1;\n                } else {\n                    s = c_list.get(i) + d_list.get(i)+digit;\n                    all_list.add(s);\n                    digit = 0;\n                }\n\n            }\n\n            if(digit==1){\n\n                all_list.add(digit);\n            }\n\n            for(i=0;i<all_list.size();i++){\n                System.out.print(all_list.get(i));\n            }\n            System.out.println();\n\n\n\n            for(i=0;i<all_list.size();i++){\n                all_list_Str.add(all_list.get(i).toString());\n            }\n\n            String sum_str=\"\";\n            for(i=all_list_Str.size()-1;i>=0;i--){\n                sum_str=sum_str+all_list_Str.get(i);\n            }\n            return sum_str;\n\n\n    }\n}\n\n\n\n\u3061\u306a\u307f\u306b\u3001\u4ed6\u4eba\u304c\u66f8\u3044\u305f\u795e\u30b3\u30fc\u30c9\uff1a\n\nqiita.rb\npublic String addBinary(String a, String b) {\n    BigInteger aint = new BigInteger(a,2);\n    BigInteger bint = new BigInteger(b,2);\n    return aint.add(bint).toString(2);\n}\n\n\n\u52c9\u5f37\u4e0d\u8db3\u3067\u672c\u5f53\u306b\u6094\u3057\u3044\u308f\uff01\n\u554f\u984c:\n\nGiven two binary strings, return their sum (also a binary string).\n\nFor example,\na = \"11\"\nb = \"1\"\nReturn \"100\".\n\nSubscribe to see which companies asked this question\n\n\n\u3053\u3061\u3089\u306e\u30af\u30bd\u30b3\u30fc\u30c9:\n\n```Java:Solution.java\npublic class Solution {\n    public String addBinary(String a, String b) {\n         int a_length = a.length();\n        int b_length = b.length();\n\n        String[] a_array=new String[a_length];\n        String[] b_array=new String[b_length];\n\n\n        if(a_length==1){\n            a_array[0]=a;\n        } else {\n            for (int i = 0; i < a_length; i++) {\n                a_array[i] = a.substring(i, i + 1);\n            }\n        }\n\n        if(b_length==1){\n            b_array[0]=b;\n        } else {\n            for (int i = 0; i < b_length; i++) {\n                b_array[i] = b.substring(i, i + 1);\n            }\n        }\n        ArrayList<Integer> c_list = new ArrayList<Integer>();\n        ArrayList<Integer> d_list = new ArrayList<Integer>();\n\n        for(int i=a_length-1;i>=0;i--){\n            c_list.add(Integer.parseInt(a_array[i]));\n        }\n        for(int i=b_length-1;i>=0;i--){\n            d_list.add(Integer.parseInt(b_array[i]));\n        }\n\n\n        int i = d_list.size() - c_list.size();\n        if (i > 0) {\n            while (c_list.size() < d_list.size()) {\n                c_list.add(0);\n            }\n        } else {\n            while (d_list.size() < c_list.size()) {\n                d_list.add(0);\n            }\n        }\n\n            int digit = 0;\n\n            ArrayList<Integer> all_list = new ArrayList<>();\n            ArrayList<String> all_list_Str = new ArrayList<>();\n            int s = 0;\n\n            for (i = 0; i < c_list.size(); i++) {\n                if (c_list.get(i) + d_list.get(i) + digit >= 2) {\n\n                    s = c_list.get(i) + d_list.get(i) + digit - 2;\n                    all_list.add(s);\n                    digit = 1;\n                } else {\n                    s = c_list.get(i) + d_list.get(i)+digit;\n                    all_list.add(s);\n                    digit = 0;\n                }\n\n            }\n\n            if(digit==1){\n\n                all_list.add(digit);\n            }\n\n            for(i=0;i<all_list.size();i++){\n                System.out.print(all_list.get(i));\n            }\n            System.out.println();\n\n\n\n            for(i=0;i<all_list.size();i++){\n                all_list_Str.add(all_list.get(i).toString());\n            }\n\n            String sum_str=\"\";\n            for(i=all_list_Str.size()-1;i>=0;i--){\n                sum_str=sum_str+all_list_Str.get(i);\n            }\n            return sum_str;\n        \n        \n    }\n}\n\n```\n\n\n\u3061\u306a\u307f\u306b\u3001\u4ed6\u4eba\u304c\u66f8\u3044\u305f\u795e\u30b3\u30fc\u30c9\uff1a\n\n```Java:qiita.rb\npublic String addBinary(String a, String b) {\n    BigInteger aint = new BigInteger(a,2);\n    BigInteger bint = new BigInteger(b,2);\n    return aint.add(bint).toString(2);\n}\n```\n\n\n\u52c9\u5f37\u4e0d\u8db3\u3067\u672c\u5f53\u306b\u6094\u3057\u3044\u308f\uff01\n", "tags": ["Java", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"]}