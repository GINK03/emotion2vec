{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30d7\u30ec\u30d3\u30e5\u30fc\u306b\u4f7f\u3046\u30d0\u30c3\u30d5\u30a1\u304c\u66f4\u65b0\u78ba\u8a8d\u306e\u95a2\u6570\u304c\u6b32\u3057\u304b\u3063\u305f\u306e\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u5b9f\u88c5\n\u66f4\u65b0\u304c\u3042\u308c\u3070\u4e00\u6642\u30d0\u30c3\u30d5\u30a1\u306b\u66f8\u304d\u8fbc\u3093\u3067\u4e00\u6642\u30d0\u30c3\u30d5\u30a1\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u3067\u3001\n\u30ab\u30ec\u30f3\u30c8\u30d0\u30c3\u30d5\u30a1\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u691c\u77e5\u3057\u3066\u3044\u307e\u3059\u3002\n\u66f4\u65b0\u304c\u3042\u308c\u3070t\u3001 \u66f4\u65b0\u304c\u306a\u3051\u308c\u3070nil\u3092\u8fd4\u3057\u307e\u3059\u3002\n(defun buffer-update-p ()\n  (let ((current-buffer-string\n         (buffer-substring-no-properties\n          (point-min) (point-max))))\n    (if (not\n         (string=\n          current-buffer-string\n          (progn\n            (set-buffer\n             (get-buffer-create  (concat \"*\" (buffer-name) \"*\")))\n            (buffer-substring-no-properties\n             (point-min) (point-max)))))\n        (progn\n          (erase-buffer)\n          (insert current-buffer-string)\n          t)\n      nil)))\n\n\n\u4f7f\u3044\u65b9\n\u4ee5\u4e0b\u306e\u3088\u3046\u306btimer\u95a2\u6570\u306e\u4e2d\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\u524d\u56de\u5b9f\u884c\u3057\u3066\u304b\u3089\u30d0\u30c3\u30d5\u30a1\u304c\u66f4\u65b0\u3055\u308c\u305f\u3068\u304d\u306b\u51e6\u7406\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n(setq hoge-timer \n      (run-at-time t 1 '(lambda ()\n                          (if\n                              (buffer-update-p)\n                              (message \"buffer update!!\")))))\n\n\n## \u6982\u8981\n\n\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30d7\u30ec\u30d3\u30e5\u30fc\u306b\u4f7f\u3046\u30d0\u30c3\u30d5\u30a1\u304c\u66f4\u65b0\u78ba\u8a8d\u306e\u95a2\u6570\u304c\u6b32\u3057\u304b\u3063\u305f\u306e\u3067\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n## \u5b9f\u88c5\n\n\u66f4\u65b0\u304c\u3042\u308c\u3070\u4e00\u6642\u30d0\u30c3\u30d5\u30a1\u306b\u66f8\u304d\u8fbc\u3093\u3067\u4e00\u6642\u30d0\u30c3\u30d5\u30a1\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u3067\u3001\n\u30ab\u30ec\u30f3\u30c8\u30d0\u30c3\u30d5\u30a1\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u691c\u77e5\u3057\u3066\u3044\u307e\u3059\u3002\n\u66f4\u65b0\u304c\u3042\u308c\u3070```t```\u3001 \u66f4\u65b0\u304c\u306a\u3051\u308c\u3070```nil```\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```el\n(defun buffer-update-p ()\n  (let ((current-buffer-string\n         (buffer-substring-no-properties\n          (point-min) (point-max))))\n    (if (not\n         (string=\n          current-buffer-string\n          (progn\n            (set-buffer\n             (get-buffer-create  (concat \"*\" (buffer-name) \"*\")))\n            (buffer-substring-no-properties\n             (point-min) (point-max)))))\n        (progn\n          (erase-buffer)\n          (insert current-buffer-string)\n          t)\n      nil)))\n```\n\n## \u4f7f\u3044\u65b9\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306btimer\u95a2\u6570\u306e\u4e2d\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\u524d\u56de\u5b9f\u884c\u3057\u3066\u304b\u3089\u30d0\u30c3\u30d5\u30a1\u304c\u66f4\u65b0\u3055\u308c\u305f\u3068\u304d\u306b\u51e6\u7406\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```el\n(setq hoge-timer \n      (run-at-time t 1 '(lambda ()\n                          (if\n                              (buffer-update-p)\n                              (message \"buffer update!!\")))))\n\n```\n", "tags": ["Emacs", "emacs-lisp"]}