{"context": " More than 1 year has passed since last update.\u524d\u56de\u306b\u7d9a\u304d\u3001 reactive4java \u30cd\u30bf\u3002\n\u8abf\u5b50\u306b\u4e57\u3063\u3066 Android \u3067\u4f4d\u7f6e\u3092\u53d6\u5f97\u3057\u7d9a\u3051\u308b\u306e\u3092 reactive4java \u3092\u4f7f\u3063\u3066\u3084\u3063\u3066\u307f\u305f\u3002\n\nLocationFunctions.java\n/**\n * \u4f4d\u7f6e\u3092\u53d6\u5f97\u3057\u7d9a\u3051\u308b(finish \u306f\u547c\u3070\u308c\u306a\u3044)\n */\npublic static Observable<Location> getCurrentLocationAsObservable(          \n        final Context context, final String provider) {\n    return Reactive.createWithCloseable(new Func1<Observer<? super Location>, Closeable>() {\n        private volatile boolean _stop = false;\n\n        @Override\n        public Closeable invoke(final Observer<? super Location> observer) {\n            final LocationManager locMan = (LocationManager)context.getSystemService(Context.LOCATION_SERVICE);\n\n            final LocationListener listener = new LocationListener() {\n\n                @Override\n                public void onStatusChanged(String provider, int status, Bundle extras) { }\n\n                @Override\n                public void onProviderEnabled(String provider) { }\n\n                @Override\n                public void onProviderDisabled(String provider) {\n                    observer.error(\n                        new InvalidParameterException(\"LocationProvider disabled.\"));\n                }\n\n                @Override\n                public void onLocationChanged(Location location) {\n                    if (_stop) {\n                        return;\n                    }\n\n                    // \u767a\u706b\n                    observer.next(location);\n                }\n            };\n\n            // \u4f4d\u7f6e\u53d6\u5f97\u958b\u59cb\n            locMan.requestLocationUpdates(provider, 0, 0, listener, Looper.getMainLooper());\n\n            return new Closeable() {\n                @Override\n                public void close() throws IOException {\n                    if (_stop) {\n                        return;\n                    }\n                    _stop = true;\n                    locMan.removeUpdates(listener);\n                    observer.finish();\n                }\n            };\n        }\n    });\n}\n\n\n\n\u4f7f\u3044\u65b9\u306f\u3001\u65b9\u4f4d\u306e\u6642\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u304c Float \u304b\u3089 Location \u306b\u4ee3\u308f\u3063\u305f\u3060\u3051\u3002\n_stop \u30d5\u30e9\u30b0\u306f\u3001Listener \u3092 unregister \u3057\u3066\u3082\u6e9c\u307e\u3063\u3066\u308b\u30c7\u30fc\u30bf\u306f\u6d41\u3057\u3061\u3083\u3046\u3093\u3058\u3083\u306a\u3044\u304b\u3001\u3068\u3044\u3046\u4e8b\u3067\u7528\u610f\u3057\u305f\u3002\n\u65b9\u4f4d\u306e\u3084\u3064\u306f AtomicBoolean \u3092\u4f7f\u3063\u305f\u3051\u3069\u3053\u3063\u3061\u306f volatile \u3067\u3084\u3063\u3066\u308b\u3002\u78ba\u304b\u3069\u3063\u304b\u3067 'AtomicBoolean \u306e\u65b9\u304c\u78ba\u5b9f\u306b Atomic' \u3063\u3066\u8a00\u3063\u3066\u305f\u6c17\u304c\u3059\u308b\u3051\u3069\u3001\u305d\u3082\u305d\u3082\u305d\u3093\u306a\u306b\u795e\u7d4c\u8cea\u306b\u306a\u308b\u3068\u3053\u308d\u3058\u3083\u306a\u3044\u304b\u3002\nObservable \u306b\u3059\u308b\u3053\u3068\u3067\u3001\u300c\uff4e\u79d2\u9593\u4f4d\u7f6e\u3092\u53d6\u5f97\u3057\u3066\u8caf\u3081\u3066\u3001\u305d\u306e\u4e2d\u3067\u4e00\u756a\u7cbe\u5ea6\u306e\u826f\u3044\u3082\u306e\u3092\u901a\u3059\u300d\u307f\u305f\u3044\u306a\u3053\u3068\u3082\u7c21\u5358\u306b\u3067\u304d\u308b\u3002\nAndroid \u306e\u5834\u5408\u3001\u8cfc\u8aad\u958b\u59cb\u6642\u306b registerXXXListener\u3001Close \u3067 unregisterXXXEventListener \u3066\u306e\u304c\u3072\u3068\u3064\u306e\u30d1\u30bf\u30fc\u30f3\u3002\n\u305f\u3076\u3093 BroadcastReceiver \u306b\u3082\u9069\u7528\u3067\u304d\u308b\u3002\nXXXListener \u3082 BroadcastReceiver \u3082 Observable \u3067\u30e9\u30c3\u30d7\u3057\u3061\u3083\u3048\u3070\u3001\u305d\u306e\u5f8c\u306f\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u308b\u306e\u3067\u4fbf\u5229\u266a\n\n\u8ffd\u8a18 9.27\n\u5b9f\u306f\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3001Cold \u3067\u3057\u305f\u30fc\u3002\u3068\u3044\u3046\u308f\u3051\u3067\u3001Hot \u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n* Cold \u3092 Hot \u306b\u3067\u304d\u308b\u3002\u305d\u3046\u3001Publish \u306a\u3089\u306d\u3002 - Qiita\n\n\u53c2\u8003\n\nreactive4java \u3067\u7aef\u672b\u306e\u65b9\u4f4d\u3092\u53d6\u5f97\u3057\u3064\u3065\u3051\u308b - Qiita\nJava: volatile boolean vs AtomicBoolean - Stack Overflow\n\n[\u524d\u56de](http://qiita.com/items/07762776102dbc84b1c7)\u306b\u7d9a\u304d\u3001 reactive4java \u30cd\u30bf\u3002\n\u8abf\u5b50\u306b\u4e57\u3063\u3066 Android \u3067\u4f4d\u7f6e\u3092\u53d6\u5f97\u3057\u7d9a\u3051\u308b\u306e\u3092 reactive4java \u3092\u4f7f\u3063\u3066\u3084\u3063\u3066\u307f\u305f\u3002\n\n```java:LocationFunctions.java\n/**\n * \u4f4d\u7f6e\u3092\u53d6\u5f97\u3057\u7d9a\u3051\u308b(finish \u306f\u547c\u3070\u308c\u306a\u3044)\n */\npublic static Observable<Location> getCurrentLocationAsObservable(\t\t\t\n\t\tfinal Context context, final String provider) {\n\treturn Reactive.createWithCloseable(new Func1<Observer<? super Location>, Closeable>() {\n\t\tprivate volatile boolean _stop = false;\n\n\t\t@Override\n\t\tpublic Closeable invoke(final Observer<? super Location> observer) {\n\t\t\tfinal LocationManager locMan = (LocationManager)context.getSystemService(Context.LOCATION_SERVICE);\n\t\t\t\n\t\t\tfinal LocationListener listener = new LocationListener() {\n\t\t\t\t\n\t\t\t\t@Override\n\t\t\t\tpublic void onStatusChanged(String provider, int status, Bundle extras) { }\n\t\t\t\t\n\t\t\t\t@Override\n\t\t\t\tpublic void onProviderEnabled(String provider) { }\n\t\t\t\t\n\t\t\t\t@Override\n\t\t\t\tpublic void onProviderDisabled(String provider) {\n\t\t\t\t\tobserver.error(\n\t\t\t\t\t\tnew InvalidParameterException(\"LocationProvider disabled.\"));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@Override\n\t\t\t\tpublic void onLocationChanged(Location location) {\n\t\t\t\t\tif (_stop) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// \u767a\u706b\n\t\t\t\t\tobserver.next(location);\n\t\t\t\t}\n\t\t\t};\n\t\t\t\n\t\t\t// \u4f4d\u7f6e\u53d6\u5f97\u958b\u59cb\n\t\t\tlocMan.requestLocationUpdates(provider, 0, 0, listener, Looper.getMainLooper());\n\n\t\t\treturn new Closeable() {\n\t\t\t\t@Override\n\t\t\t\tpublic void close() throws IOException {\n\t\t\t\t\tif (_stop) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t_stop = true;\n\t\t\t\t\tlocMan.removeUpdates(listener);\n\t\t\t\t\tobserver.finish();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t});\n}\n\n```\n\n\u4f7f\u3044\u65b9\u306f\u3001\u65b9\u4f4d\u306e\u6642\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u304c Float \u304b\u3089 Location \u306b\u4ee3\u308f\u3063\u305f\u3060\u3051\u3002\n\n```_stop``` \u30d5\u30e9\u30b0\u306f\u3001Listener \u3092 unregister \u3057\u3066\u3082\u6e9c\u307e\u3063\u3066\u308b\u30c7\u30fc\u30bf\u306f\u6d41\u3057\u3061\u3083\u3046\u3093\u3058\u3083\u306a\u3044\u304b\u3001\u3068\u3044\u3046\u4e8b\u3067\u7528\u610f\u3057\u305f\u3002\n\u65b9\u4f4d\u306e\u3084\u3064\u306f AtomicBoolean \u3092\u4f7f\u3063\u305f\u3051\u3069\u3053\u3063\u3061\u306f volatile \u3067\u3084\u3063\u3066\u308b\u3002\u78ba\u304b\u3069\u3063\u304b\u3067 'AtomicBoolean \u306e\u65b9\u304c\u78ba\u5b9f\u306b Atomic' \u3063\u3066\u8a00\u3063\u3066\u305f\u6c17\u304c\u3059\u308b\u3051\u3069\u3001\u305d\u3082\u305d\u3082\u305d\u3093\u306a\u306b\u795e\u7d4c\u8cea\u306b\u306a\u308b\u3068\u3053\u308d\u3058\u3083\u306a\u3044\u304b\u3002\n\nObservable \u306b\u3059\u308b\u3053\u3068\u3067\u3001\u300c\uff4e\u79d2\u9593\u4f4d\u7f6e\u3092\u53d6\u5f97\u3057\u3066\u8caf\u3081\u3066\u3001\u305d\u306e\u4e2d\u3067\u4e00\u756a\u7cbe\u5ea6\u306e\u826f\u3044\u3082\u306e\u3092\u901a\u3059\u300d\u307f\u305f\u3044\u306a\u3053\u3068\u3082\u7c21\u5358\u306b\u3067\u304d\u308b\u3002\n\nAndroid \u306e\u5834\u5408\u3001\u8cfc\u8aad\u958b\u59cb\u6642\u306b registerXXXListener\u3001Close \u3067 unregisterXXXEventListener \u3066\u306e\u304c\u3072\u3068\u3064\u306e\u30d1\u30bf\u30fc\u30f3\u3002\n\u305f\u3076\u3093 BroadcastReceiver \u306b\u3082\u9069\u7528\u3067\u304d\u308b\u3002\n\nXXXListener \u3082 BroadcastReceiver \u3082 Observable \u3067\u30e9\u30c3\u30d7\u3057\u3061\u3083\u3048\u3070\u3001\u305d\u306e\u5f8c\u306f\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u308b\u306e\u3067\u4fbf\u5229\u266a\n\n##\u8ffd\u8a18 9.27\n\u5b9f\u306f\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3001Cold \u3067\u3057\u305f\u30fc\u3002\u3068\u3044\u3046\u308f\u3051\u3067\u3001Hot \u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n* [Cold \u3092 Hot \u306b\u3067\u304d\u308b\u3002\u305d\u3046\u3001Publish \u306a\u3089\u306d\u3002 - Qiita](http://qiita.com/items/3a7bda9d0fdcb9248800)\n\n##\u53c2\u8003\n* [reactive4java \u3067\u7aef\u672b\u306e\u65b9\u4f4d\u3092\u53d6\u5f97\u3057\u3064\u3065\u3051\u308b - Qiita](http://qiita.com/items/07762776102dbc84b1c7)\n* [Java: volatile boolean vs AtomicBoolean - Stack Overflow](http://stackoverflow.com/questions/3786825/java-volatile-boolean-vs-atomicboolean)", "tags": ["Android", "reactive4java", "Java", "ReactiveExtensions"]}