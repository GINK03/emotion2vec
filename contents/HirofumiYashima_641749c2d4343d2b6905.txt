{"context": "\n\n\u3010\u30c7\u30fc\u30bf\u4e8b\u4f8b \u3011\n\n\u3042\u308b E-commerce \u4e8b\u696d\u4f1a\u793e \u306e \u58f2\u4e0a\u3052\u30c7\u30fc\u30bf \u306b \u5bfe\u3057\u3066\u3001\n\n\u8ca9\u58f2\u30a8\u30ea\u30a2\u5225\uff08\u4f8b\uff1a\u300c\u9996\u90fd\u570f\u300d\u30fb\u300c\u95a2\u897f\u300d\u30fb\u300c\u8fd1\u757f\u300d\u30fb\u300c\u5317\u9678\u300d\u3001\u306a\u3069\uff09 \n\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u5225\uff08\u300c\u98f2\u6599\u300d\u30fb\u300c\u30c8\u30a4\u30ec\u30bf\u30ea\u30fc\u300d\u306a\u3069\uff09\n\n\u306e \uff12\u8ef8\u3067\u898b\u305f\u5834\u5408 \u306e \uff08\u8a72\u5f53\uff09\u58f2\u4e0a\u30c7\u30fc\u30bf\u4ef6\u6570\u3000\n\u306e \u6570\u5024\u5206\u5e03\uff08\u8a72\u5f53\u4ef6\u6570\u5206\u5e03\uff09 \u3092 \u5ea6\u6570\u5206\u5e03\u8868\uff08\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\uff09\u3067\u30b0\u30e9\u30d5\u53ef\u8996\u5316\u3057\u305f\u3044\u3002\n\uff08\u4f8b\uff09\n\n\u3010\u300c\u9996\u90fd\u570f\u300d\u30a8\u30ea\u30a2 \u4e14\u3064 \u300c\u98f2\u6599\u300d\u3011\u306b \u8a72\u5f53\u3059\u308b \u58f2\u4e0a\u30c7\u30fc\u30bf \u306f\u30015,100\u4ef6\u3042\u308b\n5,100\u4ef6\u3001\u8a72\u5f53\u58f2\u4e0a\u30c7\u30fc\u30bf \u3092 \u6301\u3064 \u3010\u300c\u30a8\u30ea\u30a2\u300d\u30fb\u300c\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u3011\u30b0\u30eb\u30fc\u30d7 \u306f\u30013\u30b0\u30eb\u30fc\u30d7\uff08\u300c\u30a8\u30ea\u30a2\u300d\u3068\u300c\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u306e\u7d44\u307f\u5408\u308f\u305b\uff09\u5b58\u5728\u3059\u308b\n\n\n\uff08\u672c\u8a18\u4e8b\u672b\u5c3e\u306b\u3001\u4ee5\u4e0b\u306e\u30b0\u30e9\u30d5\u3082\u3042\u308f\u305b\u3066\u51fa\u529b\u3059\u308b\uff09\n\u3010 \u6a2a\u8ef8 \u3011 \u300c\u8ca9\u58f2\u30a8\u30ea\u30a2_\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u540d \uff08\u6587\u5b57\u5217\u578b\u30c7\u30fc\u30bf\uff09\n\u3010 \u7e26\u8ef8 \u3011  \u8a72\u5f53\uff08\u58f2\u4e0a\uff09\u30c7\u30fc\u30bf\u4ef6\u6570\n\n\ncsv\u30d5\u30a1\u30a4\u30eb\u306e\u6587\u5b57\u30b3\u30fc\u30c9 \u3092 URF-8 \u306b \u5909\u66f4\n\n\njupyter notebook \u3067\u306f\u3001\uff01\u8a18\u53f7 \u306b \u7d9a\u3051\u3066 UNIX\u30b3\u30de\u30f3\u30c9 \u3092 \u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n\nAnaconda jupyter notebook\n!nkf -g sales_item_name_per_area.csv\n!nkf -w sales_item_name_per_area.csv > sales_item_name_per_area_utf8.csv \n# !ls | grep utf\n# !head  sales_item_name_per_area_utf8.csv\n\n\n\ncsv\u30d5\u30a1\u30a4\u30eb \u3092 DataFrame \u306b \u8aad\u307f\u8fbc\u307f\n\n\nPython3\nimport pandas as pd\nsales_pd = pd.read_csv('sales_item_name_per_area_utf8.csv')\n\n# sales_pd.info()\n# sales_pd.describe()\n# sales_pd.columns\n\n\n\n\u30a8\u30ea\u30a2\u3068\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u306e\uff12\u6761\u4ef6\uff08\u8907\u5408\u6761\u4ef6\uff09 \u3067 group\u3059\u308b\u5834\u5408\u3001\u5404group \u306e \u8a72\u5f53\u30c7\u30fc\u30bf\u4ef6\u6570 \u3092 \u30ab\u30a6\u30f3\u30c8\n\n\nPython3\n# sales_pd['item_id'].head()\n# sales_pd['item_id'].tail()\n\nsales_pd[['item_name','item_id']].head()\nsales_pd[['area_name', 'item_category_name']].head(20)\n\n# sales_pd.ix[25000:25010,['area_name', 'item_category_name']]\n# sales_pd.ix[35000:35010,['area_name', 'item_category_name']]\n\n## \u30a8\u30ea\u30a2\u3068\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u306e\uff12\u6761\u4ef6\uff08\u8907\u5408\u6761\u4ef6\uff09\u3067group\u5206\u3051\u3057\u305f\u5834\u5408\u3001\u5404group\u306b\u8a72\u5f53\u3059\u308b\u58f2\u4e0a\u30c7\u30fc\u30bf\u304c\u4f55\u4ef6\u6709\u308b\u304b\u3092\u30ab\u30a6\u30f3\u30c8\u96c6\u8a08\u5b9f\u884c\n#sales_pd.groupby(['area_name', 'item_category_name']).count()\n\nsales_pd['area_name'].value_counts()\nsales_pd['item_category_name'].value_counts()\n\n\n\n\u30a8\u30ea\u30a2\u5217 \u3068 \u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u5217 \u3092 \u6587\u5b57\u5217\u7d50\u5408\u3057\u3066\u3001\u300c\u30a8\u30ea\u30a2\u30fb\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u5217 \u3092 \u751f\u6210\n\n\nPython3\nsales_pd['area_item_joint_col'] = jd_pd['area_name'] + \"_\" + sales_pd['item_category_name'] \n\n# sales_pd.ix[35000:35010, 'area_item_joint_col']\n\n## \u4ee5\u4e0b\u3060\u3068\u67a0\u7dda\u304c\u8868\u793a\u3055\u308c\u3066\u7dba\u9e97\u306b\u51fa\u529b\u3055\u308c\u308b\n# sales_pd.ix[35000:35010, ['area_item_joint_col']]\n\n\n\n\u300c\u30a8\u30ea\u30a2\u30fb\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u5217 \u306e \u5404\u5024\u5225 \u8a72\u5f53\u30c7\u30fc\u30bf\u4ef6\u6570\uff08\u884c\u6570\uff09\u3092\u30ab\u30a6\u30f3\u30c8\n\n\nPython3\nresult = sales_pd['area_item_joint_col'].value_counts() \n\n\n\n\u300c\u30a8\u30ea\u30a2\u30fb\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u5217 \u306e \u5404\u5024\u5225 \u8a72\u5f53\u30c7\u30fc\u30bf\u4ef6\u6570 \u3092 \u30ea\u30b9\u30c8\u306b\u3057\u3066\u53d6\u5f97\n\n\nPython3\narea_item_name = list(sales_pd['area_item_joint_col'].value_counts().index)\n\n\n\n\u4e0a\u8a18\u30ea\u30b9\u30c8\u4e26\u3073\u9806\u3067\u3001\u51fa\u73fe\u30ab\u30a6\u30f3\u30c8\u6570\u5024\u3092\u30ea\u30b9\u30c8\u306b\u3057\u3066\u53d6\u5f97\n\n\nPython3\narea_item_name_count = [count for count in sales_pd['area_item_joint_col'].value_counts()]\n\n\n\nDataFrame \u3092 \u4f5c\u6210\n\n\nPython3\narea_item_name_count_df = pd.DataFrame({'area_item_name': area_item_name,\\\n                                           'area_item_name_count' : area_item_name_count})\n\n# print(area_item_name_count_df[0:10])\n\n\n\n\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\n\n\u6a2a\u8ef8\uff1a \u300c\u30a8\u30ea\u30a2\u540d_\u5546\u54c1\u30af\u30e9\u30b9\u540d\u300d\u306e\u51fa\u73fe\u56de\u6570\n\u7e26\u8ef8:  \u4e0a\u8a18\uff08\u51fa\u73fe\u56de\u6570\uff09\u306e\u6570\u5024\u5206\u5e03\u3000\uff08\u51fa\u73fe\u56de\u6570\u306e\u51fa\u73fe\u56de\u6570\uff09\u3000\n\u53ef\u8996\u5316\u3055\u308c\u308b\u60c5\u5831\n==>>\u3010 \u6a2a\u8ef8 \u3011100\u884c\u3001\u5b58\u5728\u3057\u305f\u300c\u30a8\u30ea\u30a2\u540d_\u5546\u54c1\u30af\u30e9\u30b9\u540d\u300d\u30e9\u30d9\u30eb\u306f\u3001\u3010 \u7e26\u8ef8 \u3011\uff08\u30e9\u30d9\u30eb\u6570\uff09\u4f55\u4ef6\u3042\u3063\u305f\u304b\n\uff08 \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u63cf\u753b\u30b3\u30fc\u30c9 \u306f \u4ee5\u4e0b \u3092 \u53c2\u8003 \uff09\n\npygo \uff082014/06/10\uff09 \u300cPython \u306e pandas \u3067\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u91cd\u306d\u3066\u63cf\u753b\u3059\u308b\u30e1\u30e2\u300d\n\n\nPython3\narea_item_name_count_df['area_item_name_count'].hist(color=\"#5F9BFF\", alpha=.5, bins=100)\n\nfrom matplotlib import pyplot as plt\nplt.xlabel(\"Frequency_of_area_itemCategory_group\")\nplt.ylabel(\"Numbers\")\nplt.show()\n\n## \u7dcf\u6570\n# area_item_name_count_df.count()\n\n\n\n\u4ee5\u4e0b\u3067\u3082\u3067\u304d\u308b\n\nPython3\nplt.hist(area_item_name_count_df['area_item_name_count'], bins=100)\nplt.xlabel(\"Frequency_of_area_itemCategory_group\")\nplt.ylabel(\"Numbers\")\nplt.show()\n\n\n\n\u4ee5\u4e0b\u3067\u3082\u3067\u304d\u308b\n\nPython3\nplt.hist(area_item_name_count, bins=100)\nplt.xlabel(\"Frequency_of_area_itemCategory_group\")\nplt.ylabel(\"Numbers\")\nplt.show()\n\n\n\n\n\uff08\u6a2a\u8ef8\uff09\u300c\u30a8\u30ea\u30a2\u30fb\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u5225 \u306e\n\n\n\uff08\u7e26\u8ef8\uff09\u8a72\u5f53\u30c7\u30fc\u30bf\u4ef6\u6570 \u3092 \u6298\u308c\u7dda\u30b0\u30e9\u30d5\u3067\u51fa\u529b\u3059\u308b\u5834\u5408\n\n\nPython3\nsales_pd['area_item_joint_col'] = jd_pd['area_name'] + \"_\" + sales_pd['item_category_name'] \n\narea_item_name = list(sales_pd['area_item_joint_col'].value_counts().index)\n\narea_item_name_count = [count for count in sales_pd['area_item_joint_col'].value_counts()]\n\n# len(area_item_name) == len(area_item_name_count)\n# True\n\nimport matplotlib.pyplot as plt\nfig = plt.figure()\n\nax = fig.add_subplot(1,1,1)\nax.plot(area_item_name_count)\n\n#  \u30e9\u30d9\u30eb\u306e\u6570\u304c\u591a\u3044\u5834\u5408\u3001\u30e9\u30d9\u30eb\u3092\u3059\u3079\u3066\u51fa\u529b\u3059\u308b\u3068\u3001\u30e9\u30d9\u30eb\u6587\u5b57\u5217\u304c\u91cd\u306a\u308a\u3042\u3063\u3066\u3001\u5857\u308a\u3064\u3076\u3055\u308c\u3066\u3057\u307e\u3046\n# \u4ee5\u4e0b\u3001\u30e9\u30d9\u30eb\u3092\u5168\u90e8\u51fa\u529b\u3059\u308b\u5834\u5408\nticks = ax.set_xticks(list(range(len(area_item_name))))\nlabels = ax.set_xticklabels(area_item_name, rotation =90,fontsize =\"small\")\n\nplt.show()\n\n\n\n\n\u3010 \u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u3011\n\nPandas DataFrame \u306e value_counts\u30e1\u30bd\u30c3\u30c9\u306e\u5229\u7528\u30b3\u30fc\u30c9\u4e8b\u4f8b \u306b \u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b \u3092 \u53c2\u8003 \u306b\u3057\u307e\u3057\u305f\u3002\n\n\u3069\u3089\u3061\u3083\u3093\u306e\u30dd\u30c3\u30b1 \uff082014/04/09\uff09\u300cpython\u306b\u3088\u308b\u30c7\u30fc\u30bf\u5206\u6790\u5165\u9580\u3092\u5199\u7d4c\u3057\u3066\u3044\u304f\uff08\u305d\u306e\uff12\uff09\u300d\n\n\nSeries\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306fvalue_counts()\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\n\nPython\nIn [117]: tz_counts = frame['tz'].value_counts()\n\n     In [118]: tz_counts\n     Out[118]:\n     America/New_York       1251\n                             521\n     America/Chicago         400\n     America/Los_Angeles     382\n     America/Denver          191\n     Europe/London            74\n     Asia/Tokyo               37\n     Pacific/Honolulu         36\n     Europe/Madrid            35\n     America/Sao_Paulo        33\n     Europe/Berlin            28\n     Europe/Rome              27\n     America/Rainy_River      25\n     Europe/Amsterdam         22\n     America/Phoenix          20\n     ...\n\n\n\n\npandas\u306bsql\u3067\u3088\u304f\u3084\u308b\u51e6\u7406\u3092\u3084\u3089\u305b\u3066\u307f\u308b\n\n\nvalue_counts\u3092\u5229\u7528\u3057\u3066\u7537\u5973\u306e\u4ef6\u6570\u3092\u53d6\u5f97\u3059\u308b\u4f8b\u3002\n>> users['gender'].value_counts()\n\nM    4331\nF    1709\n\n\u5358\u7d14\u306b select count(gender) from users \u3059\u308b\u3060\u3051\u306a\u3089 count\u3002\n>> users['gender'].count()\n\n6040\n\nnan\u3084none\u306fcount\u3055\u308c\u306a\u3044\u3002\u8a66\u3057\u306bgender\u30921\u3064None\u306b\u3057\u3066COUNT\u3057\u3066\u307f\u308b\u3002\n>> users['gender'][0] = None\n>> users['gender'].count()\n\n6039\n\n\u3061\u3083\u3093\u30681\u6e1b\u3063\u305f\u3002\n\u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u305b\u305a\u306b users.count() \u3068\u3059\u308b\u3068\u5404\u30ab\u30e9\u30e0\u306ecount\u304c\u51fa\u308b\u3002\n>> users.count()\n\nuser_id       6040\ngender        6039\nage           6040\noccupation    6040\nzip           6040\n\n\n\n###__\u3010\u30c7\u30fc\u30bf\u4e8b\u4f8b \u3011__\n\n\u3042\u308b E-commerce \u4e8b\u696d\u4f1a\u793e \u306e \u58f2\u4e0a\u3052\u30c7\u30fc\u30bf \u306b \u5bfe\u3057\u3066\u3001\n\n* \u8ca9\u58f2\u30a8\u30ea\u30a2\u5225\uff08\u4f8b\uff1a\u300c\u9996\u90fd\u570f\u300d\u30fb\u300c\u95a2\u897f\u300d\u30fb\u300c\u8fd1\u757f\u300d\u30fb\u300c\u5317\u9678\u300d\u3001\u306a\u3069\uff09 \n* \u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u5225\uff08\u300c\u98f2\u6599\u300d\u30fb\u300c\u30c8\u30a4\u30ec\u30bf\u30ea\u30fc\u300d\u306a\u3069\uff09\n\n\u306e \uff12\u8ef8\u3067\u898b\u305f\u5834\u5408 \u306e \uff08\u8a72\u5f53\uff09\u58f2\u4e0a\u30c7\u30fc\u30bf\u4ef6\u6570\u3000\n\u306e \u6570\u5024\u5206\u5e03\uff08\u8a72\u5f53\u4ef6\u6570\u5206\u5e03\uff09 \u3092 \u5ea6\u6570\u5206\u5e03\u8868\uff08\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\uff09\u3067\u30b0\u30e9\u30d5\u53ef\u8996\u5316\u3057\u305f\u3044\u3002\n\n__\uff08\u4f8b\uff09__\n\n* \u3010\u300c\u9996\u90fd\u570f\u300d\u30a8\u30ea\u30a2 \u4e14\u3064 \u300c\u98f2\u6599\u300d\u3011\u306b \u8a72\u5f53\u3059\u308b \u58f2\u4e0a\u30c7\u30fc\u30bf \u306f\u30015,100\u4ef6\u3042\u308b\n* 5,100\u4ef6\u3001\u8a72\u5f53\u58f2\u4e0a\u30c7\u30fc\u30bf \u3092 \u6301\u3064 \u3010\u300c\u30a8\u30ea\u30a2\u300d\u30fb\u300c\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u3011\u30b0\u30eb\u30fc\u30d7 \u306f\u30013\u30b0\u30eb\u30fc\u30d7\uff08\u300c\u30a8\u30ea\u30a2\u300d\u3068\u300c\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u306e\u7d44\u307f\u5408\u308f\u305b\uff09\u5b58\u5728\u3059\u308b\n\n___\n\n\uff08\u672c\u8a18\u4e8b\u672b\u5c3e\u306b\u3001\u4ee5\u4e0b\u306e\u30b0\u30e9\u30d5\u3082\u3042\u308f\u305b\u3066\u51fa\u529b\u3059\u308b\uff09\n\n\u3010 \u6a2a\u8ef8 \u3011 \u300c\u8ca9\u58f2\u30a8\u30ea\u30a2_\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u540d \uff08\u6587\u5b57\u5217\u578b\u30c7\u30fc\u30bf\uff09\n\u3010 \u7e26\u8ef8 \u3011  \u8a72\u5f53\uff08\u58f2\u4e0a\uff09\u30c7\u30fc\u30bf\u4ef6\u6570\n\n___\n\n####__csv\u30d5\u30a1\u30a4\u30eb\u306e\u6587\u5b57\u30b3\u30fc\u30c9 \u3092 URF-8 \u306b \u5909\u66f4__\n\n* __jupyter notebook \u3067\u306f\u3001\uff01\u8a18\u53f7 \u306b \u7d9a\u3051\u3066 UNIX\u30b3\u30de\u30f3\u30c9 \u3092 \u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b__\n\n```{bash:Anaconda jupyter notebook}\n!nkf -g sales_item_name_per_area.csv\n!nkf -w sales_item_name_per_area.csv > sales_item_name_per_area_utf8.csv \n# !ls | grep utf\n# !head  sales_item_name_per_area_utf8.csv\n```\n\n\n####__csv\u30d5\u30a1\u30a4\u30eb \u3092 DataFrame \u306b \u8aad\u307f\u8fbc\u307f__\n\n```{python:Python3}\nimport pandas as pd\nsales_pd = pd.read_csv('sales_item_name_per_area_utf8.csv')\n\n# sales_pd.info()\n# sales_pd.describe()\n# sales_pd.columns\n```\n\n\n####__\u30a8\u30ea\u30a2\u3068\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u306e\uff12\u6761\u4ef6\uff08\u8907\u5408\u6761\u4ef6\uff09 \u3067 group\u3059\u308b\u5834\u5408\u3001\u5404group \u306e \u8a72\u5f53\u30c7\u30fc\u30bf\u4ef6\u6570 \u3092 \u30ab\u30a6\u30f3\u30c8__\n\n```{python:Python3}\n# sales_pd['item_id'].head()\n# sales_pd['item_id'].tail()\n\nsales_pd[['item_name','item_id']].head()\nsales_pd[['area_name', 'item_category_name']].head(20)\n\n# sales_pd.ix[25000:25010,['area_name', 'item_category_name']]\n# sales_pd.ix[35000:35010,['area_name', 'item_category_name']]\n\n## \u30a8\u30ea\u30a2\u3068\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u306e\uff12\u6761\u4ef6\uff08\u8907\u5408\u6761\u4ef6\uff09\u3067group\u5206\u3051\u3057\u305f\u5834\u5408\u3001\u5404group\u306b\u8a72\u5f53\u3059\u308b\u58f2\u4e0a\u30c7\u30fc\u30bf\u304c\u4f55\u4ef6\u6709\u308b\u304b\u3092\u30ab\u30a6\u30f3\u30c8\u96c6\u8a08\u5b9f\u884c\n#sales_pd.groupby(['area_name', 'item_category_name']).count()\n\nsales_pd['area_name'].value_counts()\nsales_pd['item_category_name'].value_counts()\n```\n\n####__\u30a8\u30ea\u30a2\u5217 \u3068 \u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u5217 \u3092 \u6587\u5b57\u5217\u7d50\u5408\u3057\u3066\u3001\u300c\u30a8\u30ea\u30a2\u30fb\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u5217 \u3092 \u751f\u6210__\n\n```{python:Python3}\nsales_pd['area_item_joint_col'] = jd_pd['area_name'] + \"_\" + sales_pd['item_category_name'] \n\n# sales_pd.ix[35000:35010, 'area_item_joint_col']\n\n## \u4ee5\u4e0b\u3060\u3068\u67a0\u7dda\u304c\u8868\u793a\u3055\u308c\u3066\u7dba\u9e97\u306b\u51fa\u529b\u3055\u308c\u308b\n# sales_pd.ix[35000:35010, ['area_item_joint_col']]\n```\n\n* __\u300c\u30a8\u30ea\u30a2\u30fb\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u5217 \u306e \u5404\u5024\u5225 \u8a72\u5f53\u30c7\u30fc\u30bf\u4ef6\u6570\uff08\u884c\u6570\uff09\u3092\u30ab\u30a6\u30f3\u30c8__\n\n```{python:Python3}\nresult = sales_pd['area_item_joint_col'].value_counts() \n```\n\n* __\u300c\u30a8\u30ea\u30a2\u30fb\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u5217 \u306e \u5404\u5024\u5225 \u8a72\u5f53\u30c7\u30fc\u30bf\u4ef6\u6570 \u3092 \u30ea\u30b9\u30c8\u306b\u3057\u3066\u53d6\u5f97__\n\n```{python:Python3}\narea_item_name = list(sales_pd['area_item_joint_col'].value_counts().index)\n```\n\n* __\u4e0a\u8a18\u30ea\u30b9\u30c8\u4e26\u3073\u9806\u3067\u3001\u51fa\u73fe\u30ab\u30a6\u30f3\u30c8\u6570\u5024\u3092\u30ea\u30b9\u30c8\u306b\u3057\u3066\u53d6\u5f97__\n\n```{python:Python3}\narea_item_name_count = [count for count in sales_pd['area_item_joint_col'].value_counts()]\n```\n\n* __DataFrame \u3092 \u4f5c\u6210__\n\n```{python:Python3}\narea_item_name_count_df = pd.DataFrame({'area_item_name': area_item_name,\\\n                                           'area_item_name_count' : area_item_name_count})\n\n# print(area_item_name_count_df[0:10])\n```\n\n####__\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u4f5c\u6210__\n\n\u6a2a\u8ef8\uff1a \u300c\u30a8\u30ea\u30a2\u540d_\u5546\u54c1\u30af\u30e9\u30b9\u540d\u300d\u306e\u51fa\u73fe\u56de\u6570\n\u7e26\u8ef8:  \u4e0a\u8a18\uff08\u51fa\u73fe\u56de\u6570\uff09\u306e\u6570\u5024\u5206\u5e03\u3000\uff08\u51fa\u73fe\u56de\u6570\u306e\u51fa\u73fe\u56de\u6570\uff09\u3000\n\n__\u53ef\u8996\u5316\u3055\u308c\u308b\u60c5\u5831__\n==>>\u3010 \u6a2a\u8ef8 \u3011100\u884c\u3001\u5b58\u5728\u3057\u305f\u300c\u30a8\u30ea\u30a2\u540d_\u5546\u54c1\u30af\u30e9\u30b9\u540d\u300d\u30e9\u30d9\u30eb\u306f\u3001\u3010 \u7e26\u8ef8 \u3011\uff08\u30e9\u30d9\u30eb\u6570\uff09\u4f55\u4ef6\u3042\u3063\u305f\u304b\n\n__\uff08 \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u63cf\u753b\u30b3\u30fc\u30c9 \u306f \u4ee5\u4e0b \u3092 \u53c2\u8003 \uff09__\n\n* [pygo \uff082014/06/10\uff09 \u300cPython \u306e pandas \u3067\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u91cd\u306d\u3066\u63cf\u753b\u3059\u308b\u30e1\u30e2\u300d](http://cortyuming.hateblo.jp/entry/20140610/p1)\n\n```{python:Python3}\narea_item_name_count_df['area_item_name_count'].hist(color=\"#5F9BFF\", alpha=.5, bins=100)\n\nfrom matplotlib import pyplot as plt\nplt.xlabel(\"Frequency_of_area_itemCategory_group\")\nplt.ylabel(\"Numbers\")\nplt.show()\n\n## \u7dcf\u6570\n# area_item_name_count_df.count()\n```\n___\n\n\u4ee5\u4e0b\u3067\u3082\u3067\u304d\u308b\n\n```{python:Python3}\nplt.hist(area_item_name_count_df['area_item_name_count'], bins=100)\nplt.xlabel(\"Frequency_of_area_itemCategory_group\")\nplt.ylabel(\"Numbers\")\nplt.show()\n```\n___\n\n\u4ee5\u4e0b\u3067\u3082\u3067\u304d\u308b\n\n```{python:Python3}\nplt.hist(area_item_name_count, bins=100)\nplt.xlabel(\"Frequency_of_area_itemCategory_group\")\nplt.ylabel(\"Numbers\")\nplt.show()\n```\n\n___\n\n####__\uff08\u6a2a\u8ef8\uff09\u300c\u30a8\u30ea\u30a2\u30fb\u5546\u54c1\u30ab\u30c6\u30b4\u30ea\u300d\u5225 \u306e__ \n####__\uff08\u7e26\u8ef8\uff09\u8a72\u5f53\u30c7\u30fc\u30bf\u4ef6\u6570 \u3092 \u6298\u308c\u7dda\u30b0\u30e9\u30d5\u3067\u51fa\u529b\u3059\u308b\u5834\u5408__\n\n```{python:Python3}\nsales_pd['area_item_joint_col'] = jd_pd['area_name'] + \"_\" + sales_pd['item_category_name'] \n\narea_item_name = list(sales_pd['area_item_joint_col'].value_counts().index)\n\narea_item_name_count = [count for count in sales_pd['area_item_joint_col'].value_counts()]\n\n# len(area_item_name) == len(area_item_name_count)\n# True\n\nimport matplotlib.pyplot as plt\nfig = plt.figure()\n\nax = fig.add_subplot(1,1,1)\nax.plot(area_item_name_count)\n\n#  \u30e9\u30d9\u30eb\u306e\u6570\u304c\u591a\u3044\u5834\u5408\u3001\u30e9\u30d9\u30eb\u3092\u3059\u3079\u3066\u51fa\u529b\u3059\u308b\u3068\u3001\u30e9\u30d9\u30eb\u6587\u5b57\u5217\u304c\u91cd\u306a\u308a\u3042\u3063\u3066\u3001\u5857\u308a\u3064\u3076\u3055\u308c\u3066\u3057\u307e\u3046\n# \u4ee5\u4e0b\u3001\u30e9\u30d9\u30eb\u3092\u5168\u90e8\u51fa\u529b\u3059\u308b\u5834\u5408\nticks = ax.set_xticks(list(range(len(area_item_name))))\nlabels = ax.set_xticklabels(area_item_name, rotation =90,fontsize =\"small\")\n\nplt.show()\n```\n\n___\n\n###__\u3010 \u53c2\u8003\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \u3011__\n\n__Pandas DataFrame \u306e value_counts\u30e1\u30bd\u30c3\u30c9\u306e\u5229\u7528\u30b3\u30fc\u30c9\u4e8b\u4f8b \u306b \u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b \u3092 \u53c2\u8003 \u306b\u3057\u307e\u3057\u305f\u3002__\n\n* [\u3069\u3089\u3061\u3083\u3093\u306e\u30dd\u30c3\u30b1 \uff082014/04/09\uff09\u300cpython\u306b\u3088\u308b\u30c7\u30fc\u30bf\u5206\u6790\u5165\u9580\u3092\u5199\u7d4c\u3057\u3066\u3044\u304f\uff08\u305d\u306e\uff12\uff09\u300d](http://sleeping-micchi.hatenablog.com/entry/2014/04/09/000004)\n\n>Series\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306fvalue_counts()\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\n>\n>```{python:Python}\n>In [117]: tz_counts = frame['tz'].value_counts()\n>\n>      In [118]: tz_counts\n>      Out[118]:\n>      America/New_York       1251\n>                              521\n>      America/Chicago         400\n>      America/Los_Angeles     382\n>      America/Denver          191\n>      Europe/London            74\n>      Asia/Tokyo               37\n>      Pacific/Honolulu         36\n>      Europe/Madrid            35\n>      America/Sao_Paulo        33\n>      Europe/Berlin            28\n>      Europe/Rome              27\n>      America/Rainy_River      25\n>      Europe/Amsterdam         22\n>      America/Phoenix          20\n>      ...\n>```\n\n\n* [pandas\u306bsql\u3067\u3088\u304f\u3084\u308b\u51e6\u7406\u3092\u3084\u3089\u305b\u3066\u307f\u308b](http://www.mwsoft.jp/programming/numpy/sql_to_pandas.html)\n\n>__value_counts\u3092\u5229\u7528\u3057\u3066\u7537\u5973\u306e\u4ef6\u6570\u3092\u53d6\u5f97\u3059\u308b\u4f8b\u3002__\n>\n>```\n>>> users['gender'].value_counts()\n>\n>M    4331\n>F    1709\n>```\n>\n>\u5358\u7d14\u306b select count(gender) from users \u3059\u308b\u3060\u3051\u306a\u3089 count\u3002\n>\n>```\n>>> users['gender'].count()\n>\n>6040\n>```\n>\n>nan\u3084none\u306fcount\u3055\u308c\u306a\u3044\u3002\u8a66\u3057\u306bgender\u30921\u3064None\u306b\u3057\u3066COUNT\u3057\u3066\u307f\u308b\u3002\n>\n>```\n>>> users['gender'][0] = None\n>>> users['gender'].count()\n>\n>6039\n>```\n>\n>\u3061\u3083\u3093\u30681\u6e1b\u3063\u305f\u3002\n>\n>\u30ab\u30e9\u30e0\u3092\u6307\u5b9a\u305b\u305a\u306b users.count() \u3068\u3059\u308b\u3068\u5404\u30ab\u30e9\u30e0\u306ecount\u304c\u51fa\u308b\u3002\n>\n>```\n>>> users.count()\n>\n>user_id       6040\n>gender        6039\n>age           6040\n>occupation    6040\n>zip           6040\n>```\n", "tags": ["Python", "python3", "pandas", "\u30c7\u30fc\u30bf\u53ef\u8996\u5316", "DataVisualization"]}