{"context": " More than 1 year has passed since last update.XCTest\u3067API\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3068\u304d\u306b\u4fbf\u5229\u3060\u3063\u305f\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\u3092\u30b7\u30a7\u30a2\u3057\u307e\u3059\u3002\n\u305d\u306e\u524d\u306b\u3001\u305d\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u6642\u306b\u3069\u3046\u306a\u308b\u304bbefore/after\u3067\u6bd4\u8f03\u3057\u307e\u3057\u3087\u3046\u3002\nbefore\u306f\u5143\u306e\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u308f\u308c\u305f\u74b0\u5883\u3067\u66f8\u304b\u308c\u3066\u305f\u30c6\u30b9\u30c8\u98a8\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3001after\u304c\u4fbf\u5229TestCase\u30af\u30e9\u30b9\u3092\u5229\u7528\u3057\u305f\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\nbefore\n\u57fa\u672c\u7684\u306b\u306fOHHTTPStubs\u3092\u4f7f\u3063\u3066HTTP\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092stub\u3057\u3066\u3001TRVSMonitor\u3092\u4f7f\u3063\u3066\u975e\u540c\u671f\u51e6\u7406\u306e\u5f85\u3061\u72b6\u614b\u3092\u4f5c\u3063\u3066\u307e\u3057\u305f\u3002\n\u6bce\u56destub\u306e\u5b9a\u7fa9\u3092\u66f8\u3044\u305f\u308amonitor\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u3069\u4f5c\u6210\u3057\u305f\u308a\u3001\u30c6\u30b9\u30c8\u66f8\u304f\u306e\u306b\u5168\u7136\u96c6\u4e2d\u3067\u304d\u306a\u3044\u3057\u3001\u8aad\u3093\u3067\u3066\u3082\u4f59\u8a08\u306a\u30b3\u30fc\u30c9\u5927\u77f3\u30a4\u30e9\u30a4\u30e9\u3057\u307e\u3059\u306d\u3002\n\n#import <XCTest/XCTest.h>\n#import <OHHTTPStubs/OHHTTPStubs.h>\n#import <TRVSMonitor/TRVSMonitor.h>\n#import \"AMEFooBarClient.h\"\n\n@interface AMEFooBarClientTests : XCTestCase\n\n@end\n\n@implementation AMEFooBarClientTests\n\n- (void)setUp\n{\n    [super setUp];\n    // Put setup code here; it will be run once, before the first test case.\n}\n\n- (void)tearDown\n{\n    // Put teardown code here; it will be run once, after the last test case.\n    [OHHTTPStubs removeAllStubs];\n    [super tearDown];\n}\n\n- (void)testExample\n{\n    __block NSURLRequest *lastRequest;\n    [OHHTTPStubs stubRequestsPassingTest:^BOOL(NSURLRequest *request) { return YES; }\n        withStubResponse:^OHHTTPStubsResponse * (NSURLRequest *request) {\n            lastRequest = request;\n            return [OHHTTPStubsResponse responseWithFileAtPath:OHPathForFileInBundle(@\"sampleResponse.json\", nil)\n                                                    statusCode:200\n                                                       headers:@{@\"Content-Type\" : @\"application/json\"}];\n        }];\n\n    TRVSMonitor *monitor = [TRVSMonitor monitor];\n\n    __block NSArray *fooBars;\n    [[AMEFooBarClient new] fetchFooBarWithFooBarId:@1\n                                 completionHandler:^(NSArray *array, NSError *error) {\n                                     fooBars = array;\n                                     [monitor signal];\n                                 }];\n    [monitor wait];\n    XCTAssertTrue([[[lastRequest URL] path] isEqualToString:@\"/api/v1/foo/bar/1\"]);\n    XCTAssertTrue(fooBars[0][@\"id\"]);\n}\n\n\nafter\nstub\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u7c21\u5358\u306ahelper\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002\nTRVSMonitor\u306f\u524d\u6e96\u5099\u304c\u30c0\u30eb\u304b\u3063\u305f\u306e\u3067\u3001\u524d\u6e96\u5099\u306e\u8981\u3089\u306a\u3044TKRGuard\u306b\u4e57\u308a\u63db\u3048\u307e\u3057\u305f\u3002\nhttps://github.com/tokorom/TKRGuard\n#import <XCTest/XCTest.h>\n#import \"AMEHTTPRequestTestCase.h\"\n#import \"AMEFooBarClient.h\"\n\n@interface AMEFooBarClientTests : AMEHTTPRequestTestCase\n\n@end\n\n@implementation AMEFooBarClientTests\n\n- (void)setUp\n{\n    [super setUp];\n}\n\n- (void)tearDown\n{\n    [super tearDown];\n}\n\n- (void)testExample\n{\n    [self stubAllRequestWithResponseFileName:@\"sampleResponse.json\" statuCode:200];\n\n    __block NSArray *fooBars;\n    [[AMEFooBarClient new] fetchFooBarWithFooBarId:@1\n                                 completionHandler:^(NSArray *array, NSError *error) {\n                                     fooBars = array;\n                                     RESUME;\n                                 }];\n    WAIT;\n    XCTAssertTrue([[[self.lastRequest URL] path] isEqualToString:@\"/api/v1/foo/bar/1\"]);\n    XCTAssertTrue(fooBars[0][@\"id\"]);\n}\n\n\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3057\u305f\u3002\n\u2191\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\u4f8b\u306f\u3053\u3061\u3089\u3067\u3059\u3002\nhttps://gist.github.com/ainame/3ca51dde36ea0e9e997e\n\u4ee5\u4e0a\u3001\u7528\u9014\u306b\u5fdc\u3058\u3066TestCase\u4f5c\u308b\u3068\u3059\u3054\u3044\u4fbf\u5229\u3067\u30c6\u30b9\u30c8\u66f8\u304f\u306e\u306b\u96c6\u4e2d\u3067\u304d\u3066\u3044\u3044\u3067\u3059\u306d\u301c\u3063\u3066\u3044\u3046tips\u3067\u3057\u305f\u3002\nXCTest\u3067API\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3068\u304d\u306b\u4fbf\u5229\u3060\u3063\u305f\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\u3092\u30b7\u30a7\u30a2\u3057\u307e\u3059\u3002\n\n\u305d\u306e\u524d\u306b\u3001\u305d\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u6642\u306b\u3069\u3046\u306a\u308b\u304bbefore/after\u3067\u6bd4\u8f03\u3057\u307e\u3057\u3087\u3046\u3002\nbefore\u306f\u5143\u306e\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u308f\u308c\u305f\u74b0\u5883\u3067\u66f8\u304b\u308c\u3066\u305f\u30c6\u30b9\u30c8\u98a8\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3001after\u304c\u4fbf\u5229TestCase\u30af\u30e9\u30b9\u3092\u5229\u7528\u3057\u305f\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n### before\n\n\u57fa\u672c\u7684\u306b\u306fOHHTTPStubs\u3092\u4f7f\u3063\u3066HTTP\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092stub\u3057\u3066\u3001TRVSMonitor\u3092\u4f7f\u3063\u3066\u975e\u540c\u671f\u51e6\u7406\u306e\u5f85\u3061\u72b6\u614b\u3092\u4f5c\u3063\u3066\u307e\u3057\u305f\u3002\n\u6bce\u56destub\u306e\u5b9a\u7fa9\u3092\u66f8\u3044\u305f\u308amonitor\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u3069\u4f5c\u6210\u3057\u305f\u308a\u3001\u30c6\u30b9\u30c8\u66f8\u304f\u306e\u306b\u5168\u7136\u96c6\u4e2d\u3067\u304d\u306a\u3044\u3057\u3001\u8aad\u3093\u3067\u3066\u3082\u4f59\u8a08\u306a\u30b3\u30fc\u30c9\u5927\u77f3\u30a4\u30e9\u30a4\u30e9\u3057\u307e\u3059\u306d\u3002\n\n```objc\n\n#import <XCTest/XCTest.h>\n#import <OHHTTPStubs/OHHTTPStubs.h>\n#import <TRVSMonitor/TRVSMonitor.h>\n#import \"AMEFooBarClient.h\"\n\n@interface AMEFooBarClientTests : XCTestCase\n\n@end\n\n@implementation AMEFooBarClientTests\n\n- (void)setUp\n{\n    [super setUp];\n    // Put setup code here; it will be run once, before the first test case.\n}\n\n- (void)tearDown\n{\n    // Put teardown code here; it will be run once, after the last test case.\n    [OHHTTPStubs removeAllStubs];\n    [super tearDown];\n}\n\n- (void)testExample\n{\n    __block NSURLRequest *lastRequest;\n    [OHHTTPStubs stubRequestsPassingTest:^BOOL(NSURLRequest *request) { return YES; }\n        withStubResponse:^OHHTTPStubsResponse * (NSURLRequest *request) {\n            lastRequest = request;\n            return [OHHTTPStubsResponse responseWithFileAtPath:OHPathForFileInBundle(@\"sampleResponse.json\", nil)\n                                                    statusCode:200\n                                                       headers:@{@\"Content-Type\" : @\"application/json\"}];\n        }];\n\n    TRVSMonitor *monitor = [TRVSMonitor monitor];\n\n    __block NSArray *fooBars;\n    [[AMEFooBarClient new] fetchFooBarWithFooBarId:@1\n                                 completionHandler:^(NSArray *array, NSError *error) {\n                                     fooBars = array;\n                                     [monitor signal];\n                                 }];\n    [monitor wait];\n    XCTAssertTrue([[[lastRequest URL] path] isEqualToString:@\"/api/v1/foo/bar/1\"]);\n    XCTAssertTrue(fooBars[0][@\"id\"]);\n}\n```\n\n### after\nstub\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306e\u7c21\u5358\u306ahelper\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002\nTRVSMonitor\u306f\u524d\u6e96\u5099\u304c\u30c0\u30eb\u304b\u3063\u305f\u306e\u3067\u3001\u524d\u6e96\u5099\u306e\u8981\u3089\u306a\u3044TKRGuard\u306b\u4e57\u308a\u63db\u3048\u307e\u3057\u305f\u3002\nhttps://github.com/tokorom/TKRGuard\n\n```objc\n#import <XCTest/XCTest.h>\n#import \"AMEHTTPRequestTestCase.h\"\n#import \"AMEFooBarClient.h\"\n\n@interface AMEFooBarClientTests : AMEHTTPRequestTestCase\n\n@end\n\n@implementation AMEFooBarClientTests\n\n- (void)setUp\n{\n    [super setUp];\n}\n\n- (void)tearDown\n{\n    [super tearDown];\n}\n\n- (void)testExample\n{\n    [self stubAllRequestWithResponseFileName:@\"sampleResponse.json\" statuCode:200];\n\n    __block NSArray *fooBars;\n    [[AMEFooBarClient new] fetchFooBarWithFooBarId:@1\n                                 completionHandler:^(NSArray *array, NSError *error) {\n                                     fooBars = array;\n                                     RESUME;\n                                 }];\n    WAIT;\n    XCTAssertTrue([[[self.lastRequest URL] path] isEqualToString:@\"/api/v1/foo/bar/1\"]);\n    XCTAssertTrue(fooBars[0][@\"id\"]);\n}\n```\n\n\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3057\u305f\u3002\n\n\u2191\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\u4f8b\u306f\u3053\u3061\u3089\u3067\u3059\u3002\nhttps://gist.github.com/ainame/3ca51dde36ea0e9e997e\n\n\u4ee5\u4e0a\u3001\u7528\u9014\u306b\u5fdc\u3058\u3066TestCase\u4f5c\u308b\u3068\u3059\u3054\u3044\u4fbf\u5229\u3067\u30c6\u30b9\u30c8\u66f8\u304f\u306e\u306b\u96c6\u4e2d\u3067\u304d\u3066\u3044\u3044\u3067\u3059\u306d\u301c\u3063\u3066\u3044\u3046tips\u3067\u3057\u305f\u3002\n", "tags": ["Objective-C", "iOS", "XCTest", "CocoaPods"]}