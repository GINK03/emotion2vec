{"context": "\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3084\u308b\u3002\u74b0\u5883\u306fPython2.7 + Ubuntu15.10\u3067\u3059\u3002\n\u3044\u305f\u3089\u306c\u70b9\u3082\u3042\u308a\u307e\u3059\u304c\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\n\u3082\u3046\u89e3\u3051\u3066\u308b\u3084\u3064\u300000,01,02,03,04,05,06,07,08,10,11,12,13,14,15,17,18,20,21,22,24\n\u307e\u3060\u89e3\u3051\u3066\u306a\u3044\u3084\u3064\u3000\u305f\u304f\u3055\u3093\n\n\u7b2c1\u7ae0: \u6e96\u5099\u904b\u52d5\n\n09. Typoglycemia\n\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3089\u308c\u305f\u5358\u8a9e\u5217\u306b\u5bfe\u3057\u3066\uff0c\u5404\u5358\u8a9e\u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u6587\u5b57\u306f\u6b8b\u3057\uff0c\u305d\u308c\u4ee5\u5916\u306e\u6587\u5b57\u306e\u9806\u5e8f\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u9577\u3055\u304c\uff14\u4ee5\u4e0b\u306e\u5358\u8a9e\u306f\u4e26\u3073\u66ff\u3048\u306a\u3044\u3053\u3068\u3068\u3059\u308b\uff0e\u9069\u5f53\u306a\u82f1\u8a9e\u306e\u6587\uff08\u4f8b\u3048\u3070\"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\uff09\u3092\u4e0e\u3048\uff0c\u305d\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\nnlp09.py\n#coding: UTF-8\nimport random\n\ntext = \"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\n\nans = []\nanslist = []\n\nfor i in text.split():\n  if len(i) <= 4:\n      anslist.append(i)\n  else:\n      naka = list(i[1:-1])\n      random.shuffle(naka)\n      anslist.append(i[0:1] + \"\".join(naka) + i[-1])\n\nprint \" \".join(anslist)\n\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python nlp09.py\nI cnould't bieevle that I colud aauctlly usndtnread what I was reanidg : the pehnoeanml power of the hmuan mind .\n\n\u7b2c2\u7ae0: UNIX\u30b3\u30de\u30f3\u30c9\u306e\u57fa\u790e\nhightemp.txt\u306f\uff0c\u65e5\u672c\u306e\u6700\u9ad8\u6c17\u6e29\u306e\u8a18\u9332\u3092\u300c\u90fd\u9053\u5e9c\u770c\u300d\u300c\u5730\u70b9\u300d\u300c\u2103\u300d\u300c\u65e5\u300d\u306e\u30bf\u30d6\u533a\u5207\u308a\u5f62\u5f0f\u3067\u683c\u7d0d\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\uff0e\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\uff0chightemp.txt\u3092\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u5b9f\u884c\u305b\u3088\uff0e\u3055\u3089\u306b\uff0c\u540c\u69d8\u306e\u51e6\u7406\u3092UNIX\u30b3\u30de\u30f3\u30c9\u3067\u3082\u5b9f\u884c\u3057\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\n19.\u5404\u884c\u306e1\u30b3\u30e9\u30e0\u76ee\u306e\u6587\u5b57\u5217\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u6c42\u3081\uff0c\u51fa\u73fe\u983b\u5ea6\u306e\u9ad8\u3044\u9806\u306b\u4e26\u3079\u308b\n\u5404\u884c\u306e1\u5217\u76ee\u306e\u6587\u5b57\u5217\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u6c42\u3081\uff0c\u305d\u306e\u9ad8\u3044\u9806\u306b\u4e26\u3079\u3066\u8868\u793a\u305b\u3088\uff0e\u78ba\u8a8d\u306b\u306fcut, uniq, sort\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u3088\uff0e\n\nnlp19.py\n#coding: UTF-8\n\nans = []\ndic = {}\nf = open(\"hightemp.txt\",\"r\")\n\nfor line in f:\n  ans.append(unicode(line,\"utf-8\").split()[0])\n  if line in ans:\n    dic[line] += 1\n  else:\n    dic[line] = 1\n\nsorted(dic)\nprint dic\n\nf.close()\n\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python nlp19.py\nnlp19.py:9: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal\n  if line in ans:\n{'\\xe5\\xb1\\xb1\\xe5\\xbd\\xa2\\xe7\\x9c\\x8c\\t\\xe9\\xb6\\xb4\\xe5\\xb2\\xa1\\t39.9\\t1978-08-03\\n': 1, '\\xe5\\xb1\\xb1\\xe6\\xa2\\xa8\\xe7\\x9c\\x8c\\t\\xe5\\x8b\\x9d\\xe6\\xb2\\xbc\\t40.5\\t2013-08-10\\n': 1, '\\xe5\\xb2\\x90\\xe9\\x98\\x9c\\xe7\\x9c\\x8c\\t\\xe5\\xa4\\x9a\\xe6\\xb2\\xbb\\xe8\\xa6\\x8b\\t40.9\\t2007-08-16\\n': 1, '\\xe5\\xb1\\xb1\\xe6\\xa2\\xa8\\xe7\\x9c\\x8c\\t\\xe7\\x94\\xb2\\xe5\\xba\\x9c\\t40.7\\t2013-08-10\\n': 1, '\\xe5\\x92\\x8c\\xe6\\xad\\x8c\\xe5\\xb1\\xb1\\xe7\\x9c\\x8c\\t\\xe3\\x81\\x8b\\xe3\\x81\\xa4\\xe3\\x82\\x89\\xe3\\x81\\x8e\\t40.6\\t1994-08-08\\n': 1, '\\xe6\\x84\\x9b\\xe7\\x9f\\xa5\\xe7\\x9c\\x8c\\t\\xe6\\x84\\x9b\\xe8\\xa5\\xbf\\t40.3\\t1994-08-05\\n': 1, '\\xe5\\xb1\\xb1\\xe6\\xa2\\xa8\\xe7\\x9c\\x8c\\t\\xe5\\xa4\\xa7\\xe6\\x9c\\x88\\t39.9\\t1990-07-19\\n': 1, '\\xe7\\xbe\\xa4\\xe9\\xa6\\xac\\xe7\\x9c\\x8c\\t\\xe9\\xa4\\xa8\\xe6\\x9e\\x97\\t40.3\\t2007-08-16\\n': 1, '\\xe9\\x9d\\x99\\xe5\\xb2\\xa1\\xe7\\x9c\\x8c\\t\\xe4\\xbd\\x90\\xe4\\xb9\\x85\\xe9\\x96\\x93\\t40.2\\t2001-07-24\\n': 1, '\\xe5\\xb1\\xb1\\xe5\\xbd\\xa2\\xe7\\x9c\\x8c\\t\\xe9\\x85\\x92\\xe7\\x94\\xb0\\t40.1\\t1978-08-03\\n': 1, '\\xe5\\xb1\\xb1\\xe5\\xbd\\xa2\\xe7\\x9c\\x8c\\t\\xe5\\xb1\\xb1\\xe5\\xbd\\xa2\\t40.8\\t1933-07-25\\n': 1, '\\xe5\\x9f\\xbc\\xe7\\x8e\\x89\\xe7\\x9c\\x8c\\t\\xe9\\xb3\\xa9\\xe5\\xb1\\xb1\\t39.9\\t1997-07-05\\n': 1, '\\xe9\\x9d\\x99\\xe5\\xb2\\xa1\\xe7\\x9c\\x8c\\t\\xe5\\xa4\\xa9\\xe7\\xab\\x9c\\t40.6\\t1994-08-04\\n': 1, '\\xe5\\x8d\\x83\\xe8\\x91\\x89\\xe7\\x9c\\x8c\\t\\xe7\\x89\\x9b\\xe4\\xb9\\x85\\t40.2\\t2004-07-20\\n': 1, '\\xe5\\xa4\\xa7\\xe9\\x98\\xaa\\xe5\\xba\\x9c\\t\\xe8\\xb1\\x8a\\xe4\\xb8\\xad\\t39.9\\t1994-08-08\\n': 1, '\\xe5\\x9f\\xbc\\xe7\\x8e\\x89\\xe7\\x9c\\x8c\\t\\xe8\\xb6\\x8a\\xe8\\xb0\\xb7\\t40.4\\t2007-08-16\\n': 1, '\\xe6\\x84\\x9b\\xe5\\xaa\\x9b\\xe7\\x9c\\x8c\\t\\xe5\\xae\\x87\\xe5\\x92\\x8c\\xe5\\xb3\\xb6\\t40.2\\t1927-07-22\\n': 1, '\\xe7\\xbe\\xa4\\xe9\\xa6\\xac\\xe7\\x9c\\x8c\\t\\xe4\\xb8\\x8a\\xe9\\x87\\x8c\\xe8\\xa6\\x8b\\t40.3\\t1998-07-04\\n': 1, '\\xe9\\xab\\x98\\xe7\\x9f\\xa5\\xe7\\x9c\\x8c\\t\\xe6\\xb1\\x9f\\xe5\\xb7\\x9d\\xe5\\xb4\\x8e\\t41\\t2013-08-12\\n': 1, '\\xe5\\x9f\\xbc\\xe7\\x8e\\x89\\xe7\\x9c\\x8c\\t\\xe7\\x86\\x8a\\xe8\\xb0\\xb7\\t40.9\\t2007-08-16\\n': 1, '\\xe6\\x84\\x9b\\xe7\\x9f\\xa5\\xe7\\x9c\\x8c\\t\\xe5\\x90\\x8d\\xe5\\x8f\\xa4\\xe5\\xb1\\x8b\\t39.9\\t1942-08-02\\n': 1, '\\xe5\\xb2\\x90\\xe9\\x98\\x9c\\xe7\\x9c\\x8c\\t\\xe7\\xbe\\x8e\\xe6\\xbf\\x83\\t40\\t2007-08-16\\n': 1, '\\xe7\\xbe\\xa4\\xe9\\xa6\\xac\\xe7\\x9c\\x8c\\t\\xe5\\x89\\x8d\\xe6\\xa9\\x8b\\t40\\t2001-07-24\\n': 1, '\\xe5\\x8d\\x83\\xe8\\x91\\x89\\xe7\\x9c\\x8c\\t\\xe8\\x8c\\x82\\xe5\\x8e\\x9f\\t39.9\\t2013-08-11\\n': 1}\n\u30b3\u30de\u30f3\u30c9\u78ba\u8a8d\nharuka@ubuntu:~/NLP100$ cut -f1 \"hightemp.txt\" | sort | uniq -c | sort -r\n      3 \u5c71\u68a8\u770c\n      3 \u5c71\u5f62\u770c\n      3 \u57fc\u7389\u770c\n      3 \u7fa4\u99ac\u770c\n      2 \u5343\u8449\u770c\n      2 \u9759\u5ca1\u770c\n      2 \u5c90\u961c\u770c\n      2 \u611b\u77e5\u770c\n      1 \u548c\u6b4c\u5c71\u770c\n      1 \u5927\u962a\u5e9c\n      1 \u9ad8\u77e5\u770c\n      1 \u611b\u5a9b\u770c\n\n\u7b2c3\u7ae0:\u6b63\u898f\u8868\u73fe\nWikipedia\u306e\u8a18\u4e8b\u3092\u4ee5\u4e0b\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u66f8\u304d\u51fa\u3057\u305f\u30d5\u30a1\u30a4\u30ebjawiki-country.json.gz\u304c\u3042\u308b\uff0e\n1\u884c\u306b1\u8a18\u4e8b\u306e\u60c5\u5831\u304cJSON\u5f62\u5f0f\u3067\u683c\u7d0d\u3055\u308c\u308b\n\u5404\u884c\u306b\u306f\u8a18\u4e8b\u540d\u304c\"title\"\u30ad\u30fc\u306b\uff0c\u8a18\u4e8b\u672c\u6587\u304c\"text\"\u30ad\u30fc\u306e\u8f9e\u66f8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u683c\u7d0d\u3055\u308c\uff0c\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304cJSON\u5f62\u5f0f\u3067\u66f8\u304d\u51fa\u3055\u308c\u308b\n\u30d5\u30a1\u30a4\u30eb\u5168\u4f53\u306fgzip\u3067\u5727\u7e2e\u3055\u308c\u308b\n\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\u203b\"jawiki-country.json\"\u3067\u30a8\u30e9\u30fc\u3092\u3060\u3057\u3059\u304e\u305f\u3042\u307e\u308a\u3044\u3064\u306e\u307e\u306b\u304b\u30b9\u30ef\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u3068\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u305f\u306e\u3067\u4ee5\u4e0b\u3067\u306f\"jawiki-countrys.json\"\u3067\u51e6\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\n23.\u30bb\u30af\u30b7\u30e7\u30f3\u69cb\u9020\n\u8a18\u4e8b\u4e2d\u306b\u542b\u307e\u308c\u308b\u30bb\u30af\u30b7\u30e7\u30f3\u540d\u3068\u305d\u306e\u30ec\u30d9\u30eb\uff08\u4f8b\u3048\u3070\"== \u30bb\u30af\u30b7\u30e7\u30f3\u540d ==\"\u306a\u30891\uff09\u3092\u8868\u793a\u305b\u3088\uff0e\n\nnlp23.py\n#coding: UTF-8\n\nimport re\nimport sys\nprint sys.getdefaultencoding()\n\nwith open(\"jawiki-uks.txt\",\"r\") as f:\n  for line in f.readlines():\n    text = re.match(r\"(?P<number>=*)(?P<section>.*)=+$\",line)\n    if text is not None:\n      print (int(line.count(\"=\")/2),line.encode(\"utf-8\"))\n\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python nlp23.py\nascii\nTraceback (most recent call last):\n  File \"nlp23.py\", line 11, in \n    print (int(line.count(\"=\")/2),line.encode(\"utf-8\"))\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe5 in position 2: ordinal not in range(128)\n\n25.\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u62bd\u51fa\n\u8a18\u4e8b\u4e2d\u306b\u542b\u307e\u308c\u308b\u300c\u57fa\u790e\u60c5\u5831\u300d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u3068\u5024\u3092\u62bd\u51fa\u3057\uff0c\u8f9e\u66f8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u683c\u7d0d\u305b\u3088\uff0e\n\nnlp25.py\n#coding: UTF-8\n\nimport re\n\ndic = {}\nwith open(\"jawiki-uks.txt\",\"r\") as f:\n  for line in f.readlines():\n    text = re.search(\"\\|(?P<field>.*) \\s=\\s (?P<name>.*)\\|\",line)\n  if text:\n    dic[text.group(\"field\")] = text.group(\"name\")\n\n  print dic\n\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python nlp25.py\n{}\n\n\u7b2c4\u7ae0:\u5f62\u614b\u7d20\u89e3\u6790\n\u590f\u76ee\u6f31\u77f3\u306e\u5c0f\u8aac\u300e\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300f\u306e\u6587\u7ae0\uff08neko.txt\uff09\u3092MeCab\u3092\u4f7f\u3063\u3066\u5f62\u614b\u7d20\u89e3\u6790\u3057\uff0c\u305d\u306e\u7d50\u679c\u3092neko.txt.mecab\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u305b\u3088\uff0e\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u3044\u3066\uff0c\u4ee5\u4e0b\u306e\u554f\u306b\u5bfe\u5fdc\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u88c5\u305b\u3088\uff0e\n\u306a\u304a\uff0c\u554f\u984c37, 38, 39\u306fmatplotlib\u3082\u3057\u304f\u306fGnuplot\u3092\u7528\u3044\u308b\u3068\u3088\u3044\uff0e\n\n30.\u5f62\u614b\u7d20\u89e3\u6790\u7d50\u679c\u306e\u8aad\u307f\u8fbc\u307f\n\u5f62\u614b\u7d20\u89e3\u6790\u7d50\u679c\uff08neko.txt.mecab\uff09\u3092\u8aad\u307f\u8fbc\u3080\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u88c5\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u5404\u5f62\u614b\u7d20\u306f\u8868\u5c64\u5f62\uff08surface\uff09\uff0c\u57fa\u672c\u5f62\uff08base\uff09\uff0c\u54c1\u8a5e\uff08pos\uff09\uff0c\u54c1\u8a5e\u7d30\u5206\u985e1\uff08pos1\uff09\u3092\u30ad\u30fc\u3068\u3059\u308b\u30de\u30c3\u30d4\u30f3\u30b0\u578b\u306b\u683c\u7d0d\u3057\uff0c1\u6587\u3092\u5f62\u614b\u7d20\uff08\u30de\u30c3\u30d4\u30f3\u30b0\u578b\uff09\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u8868\u73fe\u305b\u3088\uff0e\u7b2c4\u7ae0\u306e\u6b8b\u308a\u306e\u554f\u984c\u3067\u306f\uff0c\u3053\u3053\u3067\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6d3b\u7528\u305b\u3088\uff0e\n\nnlp30.py\n#coding: UTF-8\n\nres = []\nwith open(\"neko.txt.mecab\",\"r\") as f:\n  for i in f:\n    i.replace(\"\\t\",\",\")\n    i.split(\",\")\n    surface = i[0]\n    base = i[1]\n    pos = i[2]\n    pos1 = i[6]\n\n    res.append({\n    surface,base,pos,pos1\n    })\n\nprint res\n\n\n\n\u4eca\u65e5\u306e\u307e\u3068\u3081\n\u30d5\u30a1\u30a4\u30eb\u540d\u3092\"(\u554f\u984c\u756a\u53f7).py\"\u304b\u3089\"nlp(\u554f\u984c\u756a\u53f7).py\"\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\u4eca\u65e5\u89e3\u3051\u305f\u306e\u306f9,\n\u4eca\u65e5\u306e\u3057\u3093\u3061\u3087\u304f\u306f\u306a\u3057\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u306e\u30ea\u30f3\u30af\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30001\u65e5\u76ee\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30002\u65e5\u76ee\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30003\u65e5\u76ee\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30004\u65e5\u76ee\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30005\u65e5\u76ee\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30006\u65e5\u76ee\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af](http://www.cl.ecei.tohoku.ac.jp/nlp100/)\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3084\u308b\u3002\u74b0\u5883\u306fPython2.7 + Ubuntu15.10\u3067\u3059\u3002\n\u3044\u305f\u3089\u306c\u70b9\u3082\u3042\u308a\u307e\u3059\u304c\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\n\n\u3082\u3046\u89e3\u3051\u3066\u308b\u3084\u3064\u300000,01,02,03,04,05,06,07,08,10,11,12,13,14,15,17,18,20,21,22,24\n\u307e\u3060\u89e3\u3051\u3066\u306a\u3044\u3084\u3064\u3000\u305f\u304f\u3055\u3093\n\n#\u7b2c1\u7ae0: \u6e96\u5099\u904b\u52d5\n\n##09. Typoglycemia\n\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3089\u308c\u305f\u5358\u8a9e\u5217\u306b\u5bfe\u3057\u3066\uff0c\u5404\u5358\u8a9e\u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u6587\u5b57\u306f\u6b8b\u3057\uff0c\u305d\u308c\u4ee5\u5916\u306e\u6587\u5b57\u306e\u9806\u5e8f\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u9577\u3055\u304c\uff14\u4ee5\u4e0b\u306e\u5358\u8a9e\u306f\u4e26\u3073\u66ff\u3048\u306a\u3044\u3053\u3068\u3068\u3059\u308b\uff0e\u9069\u5f53\u306a\u82f1\u8a9e\u306e\u6587\uff08\u4f8b\u3048\u3070\"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\uff09\u3092\u4e0e\u3048\uff0c\u305d\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\n```py:nlp09.py\n#coding: UTF-8\nimport random\n\ntext = \"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\n\nans = []\nanslist = []\n\nfor i in text.split():\n  if len(i) <= 4:\n      anslist.append(i)\n  else:\n      naka = list(i[1:-1])\n      random.shuffle(naka)\n      anslist.append(i[0:1] + \"\".join(naka) + i[-1])\n\nprint \" \".join(anslist)\n```\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python nlp09.py\nI cnould't bieevle that I colud aauctlly usndtnread what I was reanidg : the pehnoeanml power of the hmuan mind .\n\n\n#\u7b2c2\u7ae0: UNIX\u30b3\u30de\u30f3\u30c9\u306e\u57fa\u790e\n\nhightemp.txt\u306f\uff0c\u65e5\u672c\u306e\u6700\u9ad8\u6c17\u6e29\u306e\u8a18\u9332\u3092\u300c\u90fd\u9053\u5e9c\u770c\u300d\u300c\u5730\u70b9\u300d\u300c\u2103\u300d\u300c\u65e5\u300d\u306e\u30bf\u30d6\u533a\u5207\u308a\u5f62\u5f0f\u3067\u683c\u7d0d\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3067\u3042\u308b\uff0e\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\uff0chightemp.txt\u3092\u5165\u529b\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u5b9f\u884c\u305b\u3088\uff0e\u3055\u3089\u306b\uff0c\u540c\u69d8\u306e\u51e6\u7406\u3092UNIX\u30b3\u30de\u30f3\u30c9\u3067\u3082\u5b9f\u884c\u3057\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\n##19.\u5404\u884c\u306e1\u30b3\u30e9\u30e0\u76ee\u306e\u6587\u5b57\u5217\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u6c42\u3081\uff0c\u51fa\u73fe\u983b\u5ea6\u306e\u9ad8\u3044\u9806\u306b\u4e26\u3079\u308b\n\u5404\u884c\u306e1\u5217\u76ee\u306e\u6587\u5b57\u5217\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u6c42\u3081\uff0c\u305d\u306e\u9ad8\u3044\u9806\u306b\u4e26\u3079\u3066\u8868\u793a\u305b\u3088\uff0e\u78ba\u8a8d\u306b\u306fcut, uniq, sort\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u3088\uff0e\n\n```py:nlp19.py\n#coding: UTF-8\n\nans = []\ndic = {}\nf = open(\"hightemp.txt\",\"r\")\n\nfor line in f:\n  ans.append(unicode(line,\"utf-8\").split()[0])\n  if line in ans:\n    dic[line] += 1\n  else:\n    dic[line] = 1\n\nsorted(dic)\nprint dic\n\nf.close()\n```\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python nlp19.py\nnlp19.py:9: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal\n  if line in ans:\n{'\\xe5\\xb1\\xb1\\xe5\\xbd\\xa2\\xe7\\x9c\\x8c\\t\\xe9\\xb6\\xb4\\xe5\\xb2\\xa1\\t39.9\\t1978-08-03\\n': 1, '\\xe5\\xb1\\xb1\\xe6\\xa2\\xa8\\xe7\\x9c\\x8c\\t\\xe5\\x8b\\x9d\\xe6\\xb2\\xbc\\t40.5\\t2013-08-10\\n': 1, '\\xe5\\xb2\\x90\\xe9\\x98\\x9c\\xe7\\x9c\\x8c\\t\\xe5\\xa4\\x9a\\xe6\\xb2\\xbb\\xe8\\xa6\\x8b\\t40.9\\t2007-08-16\\n': 1, '\\xe5\\xb1\\xb1\\xe6\\xa2\\xa8\\xe7\\x9c\\x8c\\t\\xe7\\x94\\xb2\\xe5\\xba\\x9c\\t40.7\\t2013-08-10\\n': 1, '\\xe5\\x92\\x8c\\xe6\\xad\\x8c\\xe5\\xb1\\xb1\\xe7\\x9c\\x8c\\t\\xe3\\x81\\x8b\\xe3\\x81\\xa4\\xe3\\x82\\x89\\xe3\\x81\\x8e\\t40.6\\t1994-08-08\\n': 1, '\\xe6\\x84\\x9b\\xe7\\x9f\\xa5\\xe7\\x9c\\x8c\\t\\xe6\\x84\\x9b\\xe8\\xa5\\xbf\\t40.3\\t1994-08-05\\n': 1, '\\xe5\\xb1\\xb1\\xe6\\xa2\\xa8\\xe7\\x9c\\x8c\\t\\xe5\\xa4\\xa7\\xe6\\x9c\\x88\\t39.9\\t1990-07-19\\n': 1, '\\xe7\\xbe\\xa4\\xe9\\xa6\\xac\\xe7\\x9c\\x8c\\t\\xe9\\xa4\\xa8\\xe6\\x9e\\x97\\t40.3\\t2007-08-16\\n': 1, '\\xe9\\x9d\\x99\\xe5\\xb2\\xa1\\xe7\\x9c\\x8c\\t\\xe4\\xbd\\x90\\xe4\\xb9\\x85\\xe9\\x96\\x93\\t40.2\\t2001-07-24\\n': 1, '\\xe5\\xb1\\xb1\\xe5\\xbd\\xa2\\xe7\\x9c\\x8c\\t\\xe9\\x85\\x92\\xe7\\x94\\xb0\\t40.1\\t1978-08-03\\n': 1, '\\xe5\\xb1\\xb1\\xe5\\xbd\\xa2\\xe7\\x9c\\x8c\\t\\xe5\\xb1\\xb1\\xe5\\xbd\\xa2\\t40.8\\t1933-07-25\\n': 1, '\\xe5\\x9f\\xbc\\xe7\\x8e\\x89\\xe7\\x9c\\x8c\\t\\xe9\\xb3\\xa9\\xe5\\xb1\\xb1\\t39.9\\t1997-07-05\\n': 1, '\\xe9\\x9d\\x99\\xe5\\xb2\\xa1\\xe7\\x9c\\x8c\\t\\xe5\\xa4\\xa9\\xe7\\xab\\x9c\\t40.6\\t1994-08-04\\n': 1, '\\xe5\\x8d\\x83\\xe8\\x91\\x89\\xe7\\x9c\\x8c\\t\\xe7\\x89\\x9b\\xe4\\xb9\\x85\\t40.2\\t2004-07-20\\n': 1, '\\xe5\\xa4\\xa7\\xe9\\x98\\xaa\\xe5\\xba\\x9c\\t\\xe8\\xb1\\x8a\\xe4\\xb8\\xad\\t39.9\\t1994-08-08\\n': 1, '\\xe5\\x9f\\xbc\\xe7\\x8e\\x89\\xe7\\x9c\\x8c\\t\\xe8\\xb6\\x8a\\xe8\\xb0\\xb7\\t40.4\\t2007-08-16\\n': 1, '\\xe6\\x84\\x9b\\xe5\\xaa\\x9b\\xe7\\x9c\\x8c\\t\\xe5\\xae\\x87\\xe5\\x92\\x8c\\xe5\\xb3\\xb6\\t40.2\\t1927-07-22\\n': 1, '\\xe7\\xbe\\xa4\\xe9\\xa6\\xac\\xe7\\x9c\\x8c\\t\\xe4\\xb8\\x8a\\xe9\\x87\\x8c\\xe8\\xa6\\x8b\\t40.3\\t1998-07-04\\n': 1, '\\xe9\\xab\\x98\\xe7\\x9f\\xa5\\xe7\\x9c\\x8c\\t\\xe6\\xb1\\x9f\\xe5\\xb7\\x9d\\xe5\\xb4\\x8e\\t41\\t2013-08-12\\n': 1, '\\xe5\\x9f\\xbc\\xe7\\x8e\\x89\\xe7\\x9c\\x8c\\t\\xe7\\x86\\x8a\\xe8\\xb0\\xb7\\t40.9\\t2007-08-16\\n': 1, '\\xe6\\x84\\x9b\\xe7\\x9f\\xa5\\xe7\\x9c\\x8c\\t\\xe5\\x90\\x8d\\xe5\\x8f\\xa4\\xe5\\xb1\\x8b\\t39.9\\t1942-08-02\\n': 1, '\\xe5\\xb2\\x90\\xe9\\x98\\x9c\\xe7\\x9c\\x8c\\t\\xe7\\xbe\\x8e\\xe6\\xbf\\x83\\t40\\t2007-08-16\\n': 1, '\\xe7\\xbe\\xa4\\xe9\\xa6\\xac\\xe7\\x9c\\x8c\\t\\xe5\\x89\\x8d\\xe6\\xa9\\x8b\\t40\\t2001-07-24\\n': 1, '\\xe5\\x8d\\x83\\xe8\\x91\\x89\\xe7\\x9c\\x8c\\t\\xe8\\x8c\\x82\\xe5\\x8e\\x9f\\t39.9\\t2013-08-11\\n': 1}\n\n\n\u30b3\u30de\u30f3\u30c9\u78ba\u8a8d\nharuka@ubuntu:~/NLP100$ cut -f1 \"hightemp.txt\" | sort | uniq -c | sort -r\n      3 \u5c71\u68a8\u770c\n      3 \u5c71\u5f62\u770c\n      3 \u57fc\u7389\u770c\n      3 \u7fa4\u99ac\u770c\n      2 \u5343\u8449\u770c\n      2 \u9759\u5ca1\u770c\n      2 \u5c90\u961c\u770c\n      2 \u611b\u77e5\u770c\n      1 \u548c\u6b4c\u5c71\u770c\n      1 \u5927\u962a\u5e9c\n      1 \u9ad8\u77e5\u770c\n      1 \u611b\u5a9b\u770c\n\n\n\n#\u7b2c3\u7ae0:\u6b63\u898f\u8868\u73fe\n\nWikipedia\u306e\u8a18\u4e8b\u3092\u4ee5\u4e0b\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u66f8\u304d\u51fa\u3057\u305f\u30d5\u30a1\u30a4\u30ebjawiki-country.json.gz\u304c\u3042\u308b\uff0e\n\n1\u884c\u306b1\u8a18\u4e8b\u306e\u60c5\u5831\u304cJSON\u5f62\u5f0f\u3067\u683c\u7d0d\u3055\u308c\u308b\n\u5404\u884c\u306b\u306f\u8a18\u4e8b\u540d\u304c\"title\"\u30ad\u30fc\u306b\uff0c\u8a18\u4e8b\u672c\u6587\u304c\"text\"\u30ad\u30fc\u306e\u8f9e\u66f8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u683c\u7d0d\u3055\u308c\uff0c\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304cJSON\u5f62\u5f0f\u3067\u66f8\u304d\u51fa\u3055\u308c\u308b\n\u30d5\u30a1\u30a4\u30eb\u5168\u4f53\u306fgzip\u3067\u5727\u7e2e\u3055\u308c\u308b\n\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\u203b\"jawiki-country.json\"\u3067\u30a8\u30e9\u30fc\u3092\u3060\u3057\u3059\u304e\u305f\u3042\u307e\u308a\u3044\u3064\u306e\u307e\u306b\u304b\u30b9\u30ef\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u3068\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u305f\u306e\u3067\u4ee5\u4e0b\u3067\u306f\"jawiki-countrys.json\"\u3067\u51e6\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\n##23.\u30bb\u30af\u30b7\u30e7\u30f3\u69cb\u9020\n\u8a18\u4e8b\u4e2d\u306b\u542b\u307e\u308c\u308b\u30bb\u30af\u30b7\u30e7\u30f3\u540d\u3068\u305d\u306e\u30ec\u30d9\u30eb\uff08\u4f8b\u3048\u3070\"== \u30bb\u30af\u30b7\u30e7\u30f3\u540d ==\"\u306a\u30891\uff09\u3092\u8868\u793a\u305b\u3088\uff0e\n\n```py:nlp23.py\n#coding: UTF-8\n\nimport re\nimport sys\nprint sys.getdefaultencoding()\n\nwith open(\"jawiki-uks.txt\",\"r\") as f:\n  for line in f.readlines():\n    text = re.match(r\"(?P<number>=*)(?P<section>.*)=+$\",line)\n    if text is not None:\n      print (int(line.count(\"=\")/2),line.encode(\"utf-8\"))\n```\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python nlp23.py\nascii\nTraceback (most recent call last):\n  File \"nlp23.py\", line 11, in <module>\n    print (int(line.count(\"=\")/2),line.encode(\"utf-8\"))\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe5 in position 2: ordinal not in range(128)\n\n\n##25.\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u62bd\u51fa\n\u8a18\u4e8b\u4e2d\u306b\u542b\u307e\u308c\u308b\u300c\u57fa\u790e\u60c5\u5831\u300d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u3068\u5024\u3092\u62bd\u51fa\u3057\uff0c\u8f9e\u66f8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u683c\u7d0d\u305b\u3088\uff0e\n\n```py:nlp25.py\n#coding: UTF-8\n\nimport re\n\ndic = {}\nwith open(\"jawiki-uks.txt\",\"r\") as f:\n  for line in f.readlines():\n    text = re.search(\"\\|(?P<field>.*) \\s=\\s (?P<name>.*)\\|\",line)\n  if text:\n    dic[text.group(\"field\")] = text.group(\"name\")\n\n  print dic\n```\n\n\u5b9f\u884c\u7d50\u679c\nharuka@ubuntu:~/NLP100$ python nlp25.py\n{}\n\n\n#\u7b2c4\u7ae0:\u5f62\u614b\u7d20\u89e3\u6790\n\n\u590f\u76ee\u6f31\u77f3\u306e\u5c0f\u8aac\u300e\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u300f\u306e\u6587\u7ae0\uff08neko.txt\uff09\u3092MeCab\u3092\u4f7f\u3063\u3066\u5f62\u614b\u7d20\u89e3\u6790\u3057\uff0c\u305d\u306e\u7d50\u679c\u3092neko.txt.mecab\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u305b\u3088\uff0e\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u3044\u3066\uff0c\u4ee5\u4e0b\u306e\u554f\u306b\u5bfe\u5fdc\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u88c5\u305b\u3088\uff0e\n\n\u306a\u304a\uff0c\u554f\u984c37, 38, 39\u306fmatplotlib\u3082\u3057\u304f\u306fGnuplot\u3092\u7528\u3044\u308b\u3068\u3088\u3044\uff0e\n\n\n##30.\u5f62\u614b\u7d20\u89e3\u6790\u7d50\u679c\u306e\u8aad\u307f\u8fbc\u307f\n\u5f62\u614b\u7d20\u89e3\u6790\u7d50\u679c\uff08neko.txt.mecab\uff09\u3092\u8aad\u307f\u8fbc\u3080\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u88c5\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u5404\u5f62\u614b\u7d20\u306f\u8868\u5c64\u5f62\uff08surface\uff09\uff0c\u57fa\u672c\u5f62\uff08base\uff09\uff0c\u54c1\u8a5e\uff08pos\uff09\uff0c\u54c1\u8a5e\u7d30\u5206\u985e1\uff08pos1\uff09\u3092\u30ad\u30fc\u3068\u3059\u308b\u30de\u30c3\u30d4\u30f3\u30b0\u578b\u306b\u683c\u7d0d\u3057\uff0c1\u6587\u3092\u5f62\u614b\u7d20\uff08\u30de\u30c3\u30d4\u30f3\u30b0\u578b\uff09\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u8868\u73fe\u305b\u3088\uff0e\u7b2c4\u7ae0\u306e\u6b8b\u308a\u306e\u554f\u984c\u3067\u306f\uff0c\u3053\u3053\u3067\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6d3b\u7528\u305b\u3088\uff0e\n\n```py:nlp30.py\n#coding: UTF-8\n\nres = []\nwith open(\"neko.txt.mecab\",\"r\") as f:\n  for i in f:\n    i.replace(\"\\t\",\",\")\n    i.split(\",\")\n    surface = i[0]\n    base = i[1]\n    pos = i[2]\n    pos1 = i[6]\n\n    res.append({\n    surface,base,pos,pos1\n    })\n\nprint res\n\n```\n\n\n\u4eca\u65e5\u306e\u307e\u3068\u3081\n\u30d5\u30a1\u30a4\u30eb\u540d\u3092\"(\u554f\u984c\u756a\u53f7).py\"\u304b\u3089\"nlp(\u554f\u984c\u756a\u53f7).py\"\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\u4eca\u65e5\u89e3\u3051\u305f\u306e\u306f9,\n\u4eca\u65e5\u306e\u3057\u3093\u3061\u3087\u304f\u306f\u306a\u3057\n\n\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u306e\u30ea\u30f3\u30af\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30001\u65e5\u76ee](http://qiita.com/818uuu/items/e96d65b81e9824adaef3)\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30002\u65e5\u76ee](http://qiita.com/818uuu/items/6396c7465a9b7a40fbad)\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30003\u65e5\u76ee](http://qiita.com/818uuu/items/8452848cbef06e9f086c)\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30004\u65e5\u76ee](http://qiita.com/818uuu/items/0adb0fba7229a50b23e3)\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30005\u65e5\u76ee](http://qiita.com/818uuu/items/6fbe4c9de7658ab1ad49)\n[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af 2015\u30006\u65e5\u76ee](http://qiita.com/818uuu/items/37ab965f75cf20b5c19a)\n", "tags": ["Python", "python2.7", "NLP", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406"]}