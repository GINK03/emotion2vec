{"context": " More than 1 year has passed since last update.\n\n\u7b54\u3048\nActiveRecord::SpawnMethods#merge \u3092\u4f7f\u3046\u3089\u3057\u3044\u3002\n\n\u52d5\u4f5c\u78ba\u8a8d\n\n\u524d\u63d0\n\ndb/migrate/20140410025937_create_authors.rb\nclass CreateAuthors < ActiveRecord::Migration\n  def change\n    create_table :authors do |t|\n      t.string :name\n\n      t.timestamps\n    end\n  end\nend\n\n\n\ndb/migrate/20140410030000_create_books.rb\nclass CreateBooks < ActiveRecord::Migration\n  def change\n    create_table :books do |t|\n      t.integer :author_id\n      t.string :title\n      t.datetime :published_at\n\n      t.timestamps\n    end\n  end\nend\n\n\n\napp/models/author.rb\nclass Author < ActiveRecord::Base\n  has_many :books\nend\n\n\n\napp/models/book.rb\nclass Book < ActiveRecord::Base\n  belongs_to :author\n  scope :published, -> { where(arel_table[:published_at].not_eq(nil)) }\nend\n\n\n\n\u5b9f\u884c\n$ bundle exec rails c\nLoading development environment (Rails 4.0.3)\nirb(main):001:0> Author.joins(:books).merge(Book.published)\n  Author Load (0.1ms)  SELECT \"authors\".* FROM \"authors\" INNER JOIN \"books\" ON \"books\".\"author_id\" = \"authors\".\"id\" WHERE (\"books\".\"published_at\" IS NOT NULL)\n=> #<ActiveRecord::Relation []>\n\n\n\u53c2\u8003\u6587\u732e\n\nRails 3 merging scopes with joins - Stack Overflow\n\n## \u7b54\u3048\n\n[ActiveRecord::SpawnMethods#merge](http://api.rubyonrails.org/classes/ActiveRecord/SpawnMethods.html#method-i-merge) \u3092\u4f7f\u3046\u3089\u3057\u3044\u3002\n\n## \u52d5\u4f5c\u78ba\u8a8d\n\n### \u524d\u63d0\n\n```rb:db/migrate/20140410025937_create_authors.rb\nclass CreateAuthors < ActiveRecord::Migration\n  def change\n    create_table :authors do |t|\n      t.string :name\n\n      t.timestamps\n    end\n  end\nend\n```\n\n```rb:db/migrate/20140410030000_create_books.rb\nclass CreateBooks < ActiveRecord::Migration\n  def change\n    create_table :books do |t|\n      t.integer :author_id\n      t.string :title\n      t.datetime :published_at\n\n      t.timestamps\n    end\n  end\nend\n```\n\n```rb:app/models/author.rb\nclass Author < ActiveRecord::Base\n  has_many :books\nend\n```\n\n```rb:app/models/book.rb\nclass Book < ActiveRecord::Base\n  belongs_to :author\n  scope :published, -> { where(arel_table[:published_at].not_eq(nil)) }\nend\n```\n\n### \u5b9f\u884c\n\n```bash\n$ bundle exec rails c\nLoading development environment (Rails 4.0.3)\nirb(main):001:0> Author.joins(:books).merge(Book.published)\n  Author Load (0.1ms)  SELECT \"authors\".* FROM \"authors\" INNER JOIN \"books\" ON \"books\".\"author_id\" = \"authors\".\"id\" WHERE (\"books\".\"published_at\" IS NOT NULL)\n=> #<ActiveRecord::Relation []>\n```\n\n## \u53c2\u8003\u6587\u732e\n\n* [Rails 3 merging scopes with joins - Stack Overflow](http://stackoverflow.com/questions/13036604/rails-3-merging-scopes-with-joins)", "tags": ["Rails4.0.3", "ActiveRecord4.0.3"]}