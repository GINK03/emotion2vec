{"context": " More than 1 year has passed since last update.FRP\u306ajs\u30e9\u30a4\u30d6\u30e9\u30ea\u306eBacon.js\u304c\u63d0\u4f9b\u3059\u308bAPI\u306e1\u3064Bacon.fromArray(values)\u304c\u3042\u307e\u308a\u306b\u3082\u6050\u308d\u3057\u3044\u6319\u52d5\u3092\u3059\u308b\u3002\n\u6050\u308d\u3057\u3044\u6319\u52d5\u306e\u4f8b(CoffeeScript)\u3002\n\nsample.coffee\ninput = Bacon.fromArray([1..4])\ninput.onValue((n) -> console.log('1st onValue: '+n))\ninput.onValue((n) -> console.log('2nd onValue: '+n))\n\n\n\n\u5b9f\u884c\u7d50\u679c\n1st onValue: 1 \n1st onValue: 2 \n1st onValue: 3 \n1st onValue: 4 \n\n\n\u7d20\u77e5\u3089\u306c\u9854\u30672nd onValue\u3092\u7121\u8996\u3059\u308b\u3002\n\u3082\u3063\u3068\u3084\u3063\u304b\u3044\u306a\u4f8b\u3002\n\nsample2.coffee\ninput = Bacon.fromArray([1..4])\ninput2 = input.map((n) -> n+10)\ninput2.onValue((n) -> console.log('input2: '+n))\ninput.onValue((n) -> console.log('input: '+n))\n\n\n\n\u5b9f\u884c\u7d50\u679c\ninput2: 11 \ninput2: 12 \ninput2: 13 \ninput2: 14 \n\n\ninput\u3092\u76f4\u63a5\u3044\u3058\u3063\u3066\u306a\u3044\u306e\u306b\u3001input.onValue()\u304c\u7121\u8996\u3055\u308c\u308b\u3002\n\u3053\u306e\u30ad\u30e2\u3044\u6319\u52d5\u306e\u7406\u7531\u306f\u3001once(value)\u3084fromArray(values)\u306b\u3088\u3063\u3066\u4f5c\u3089\u308c\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u306f\u3001onValue()\u3068\u304blog()\u304c\u547c\u3070\u308c\u305f\u6642\u70b9\u3067\u7834\u58ca\u7684\u4ee3\u5165\u3092\u3055\u308c\u3001\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u6d88\u53bb\u3055\u308c\u308b\u4ed5\u69d8\u3067\u3042\u308b\u305f\u3081\u3002\n\"Functional\" Reactive Programming\u3092\u3059\u308b\u306a\u3089\u4f7f\u308f\u306a\u3044\u307b\u3046\u304c\u3044\u3044\u3002\n\u914d\u5217\u304b\u3089\u65b0\u3057\u3044\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f5c\u308a\u305f\u3051\u308c\u3070Bacon.sequentially(0,values)\u3092\u4f7f\u3048\u3070\u30ad\u30e2\u304f\u306a\u3044\u3002\nFRP\u306ajs\u30e9\u30a4\u30d6\u30e9\u30ea\u306eBacon.js\u304c\u63d0\u4f9b\u3059\u308bAPI\u306e1\u3064`Bacon.fromArray(values)`\u304c\u3042\u307e\u308a\u306b\u3082\u6050\u308d\u3057\u3044\u6319\u52d5\u3092\u3059\u308b\u3002\n\n\u6050\u308d\u3057\u3044\u6319\u52d5\u306e\u4f8b(CoffeeScript)\u3002\n\n```coffeescript:sample.coffee\ninput = Bacon.fromArray([1..4])\ninput.onValue((n) -> console.log('1st onValue: '+n))\ninput.onValue((n) -> console.log('2nd onValue: '+n))\n```\n```text:\u5b9f\u884c\u7d50\u679c\n1st onValue: 1 \n1st onValue: 2 \n1st onValue: 3 \n1st onValue: 4 \n```\n\n\u7d20\u77e5\u3089\u306c\u9854\u3067`2nd onValue`\u3092\u7121\u8996\u3059\u308b\u3002\n\n\u3082\u3063\u3068\u3084\u3063\u304b\u3044\u306a\u4f8b\u3002\n\n\n```coffeescript:sample2.coffee\ninput = Bacon.fromArray([1..4])\ninput2 = input.map((n) -> n+10)\ninput2.onValue((n) -> console.log('input2: '+n))\ninput.onValue((n) -> console.log('input: '+n))\n```\n```text:\u5b9f\u884c\u7d50\u679c\ninput2: 11 \ninput2: 12 \ninput2: 13 \ninput2: 14 \n```\n\n`input`\u3092\u76f4\u63a5\u3044\u3058\u3063\u3066\u306a\u3044\u306e\u306b\u3001`input.onValue()`\u304c\u7121\u8996\u3055\u308c\u308b\u3002\n\n\u3053\u306e\u30ad\u30e2\u3044\u6319\u52d5\u306e\u7406\u7531\u306f\u3001`once(value)`\u3084`fromArray(values)`\u306b\u3088\u3063\u3066\u4f5c\u3089\u308c\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u306f\u3001`onValue()`\u3068\u304b`log()`\u304c\u547c\u3070\u308c\u305f\u6642\u70b9\u3067\u7834\u58ca\u7684\u4ee3\u5165\u3092\u3055\u308c\u3001\u3059\u3079\u3066\u306e\u8981\u7d20\u304c\u6d88\u53bb\u3055\u308c\u308b\u4ed5\u69d8\u3067\u3042\u308b\u305f\u3081\u3002\n\"Functional\" Reactive Programming\u3092\u3059\u308b\u306a\u3089\u4f7f\u308f\u306a\u3044\u307b\u3046\u304c\u3044\u3044\u3002\n\n\u914d\u5217\u304b\u3089\u65b0\u3057\u3044\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f5c\u308a\u305f\u3051\u308c\u3070`Bacon.sequentially(0,values)`\u3092\u4f7f\u3048\u3070\u30ad\u30e2\u304f\u306a\u3044\u3002\n", "tags": ["Bacon.js", "CoffeeScript", "FunctionalProgramming"]}