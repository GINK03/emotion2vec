{"context": "\n\n\u306f\u3058\u3081\u306b\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u578b\u3001\u5c5e\u6027\u306a\u3069\u306e\u5236\u7d04\u306f\u3001Entity\u30af\u30e9\u30b9\u4f5c\u3063\u3066\u305d\u3053\u306b\u30e1\u30bf\u60c5\u5831\u8a18\u8ff0\u3057\u305f\u3044\u3051\u3069\u3001Doctrine ORM\u4f7f\u3063\u3066\u306a\u3044\u3068\u305d\u306e\u3088\u3046\u306a\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3068\u305a\u3063\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u304c\u3001\u8a66\u3057\u305f\u3068\u3053\u308d\u3001Entity\u30af\u30e9\u30b9\u4f5c\u3063\u3066ClassMetadata\u8a2d\u5b9a\u3057\u3066\u3001\u5236\u7d04\u306b\u3088\u308b\u691c\u8a3c\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u81ea\u5206\u306a\u308a\u306b\u611f\u3058\u305f\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u74b0\u5883\n\nPHP 7.0.8\nSilex 2.0.2\nSymfony 3.0.8\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001Silex-Skeleton\u3092\u30d9\u30fc\u30b9\u306b\u4f5c\u6210\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3057\u307e\u3059\u3002\n\u672a\u78ba\u8a8d\u3067\u3059\u304c\u3001\u4e0a\u8a18\u4ee5\u5916\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3082\u5229\u7528\u3067\u304d\u308b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001Form\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u3001Symfony\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u5fae\u5999\u306b\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u304c\u7570\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\nSilex2.0\u3078\u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3061\u3089\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nEntity\u30af\u30e9\u30b9\u306e\u4f5c\u6210\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u5fdc\u3059\u308bEntity\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\nloadValidatorMetadata\u306e\u90e8\u5206\u306f\u5f8c\u307b\u3069\u3001\u8a73\u3057\u304f\u8aac\u660e\u3057\u307e\u3059\u3002\nnamespace App/Entity;\n\nuse Symfony\\Component\\Validator\\Constraints\\Email;\nuse Symfony\\Component\\Validator\\Constraints\\Length;\nuse Symfony\\Component\\Validator\\Constraints\\NotBlank;\nuse Symfony\\Component\\Validator\\Constraints\\Regex;\nuse Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n\nclass Member\n{\n    public $id;\n    public $email;\n    public $nickName;\n\n    public static function loadValidatorMetadata(ClassMetadata $metadata)\n    {\n        $metadata->addPropertyConstraints('email', [\n            new NotBlank(),\n            new Email()\n        ]);\n\n        $metadata->addPropertyConstraints('nickName', [\n            new NotBlank(),\n            new Length(20),\n            new Regex(['pattern' => '/[0-9a-zA-Z\\-_]/'])\n        ]);\n\n    }\n}\n\nid\u306b\u5bfe\u3059\u308b\u5236\u7d04\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u3044\u306e\u306f\u3001autoincrement\u3067\u81ea\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u304c\u3001\u4e07\u304c\u4e00\u306e\u305f\u3081\u306b\u3001Range\u5236\u7d04\u30671\u4ee5\u4e0a\u3092\u8a2d\u5b9a\u3057\u3066\u3082\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nFormType\u306edata_class\u3092\u8a2d\u5b9a\nnamespace App\\Form\\Type;\n\nuse App\\Entity\\Member;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\EmailType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\HiddenType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\n\nclass MemberType extends AbstractType\n{\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder->add('id', HiddenType::class, [\n        ]);\n\n        $builder->add('email', EmailType::class, [\n            'label' => 'E\u30e1\u30fc\u30eb'\n        ]);\n\n        $builder->add('nickName', TextType::class, [\n            'label' => '\u30cb\u30c3\u30af\u30cd\u30fc\u30e0'\n        ]);\n    }\n\n    public function configureOptions(OptionsResolver $resolver)\n    {\n        $resolver->setDefaults([\n            'data_class' => Member::class\n        ]);\n    }    \n}\n\n\n\u3069\u306e\u3088\u3046\u306b\u5165\u529b\u691c\u8a3c\u3055\u308c\u308b\u304b\n\u30b3\u30fc\u30eb\u30b9\u30bf\u30c3\u30af\u3092\u6642\u7cfb\u5217\u306e\u65e9\u3044\u9806\u306b\u4e26\u3079\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nSymfony\\Component\\Form\\Form::handleRequest\nSymfony\\Component\\Form\\Form::submit\nSymfony\\Component\\EventDispatcher\\ImmutableEventDispatcher::dispatch\nSymfony\\Component\\EventDispatcher\\EventDispatcher::dispatch\nSymfony\\Component\\EventDispatcher\\EventDispatcher::doDispatch\ncall_user_func\nSymfony\\Component\\Form\\Extension\\Validator\\EventListener- \\ValidationListener::validateForm\nSymfony\\Component\\Validator\\Validator\\RecursiveValidator::validate\nSymfony\\Component\\Validator\\Validator\\RecursiveContextualValidator::validateObject\nSymfony\\Component\\Validator\\Validator\\RecursiveContextualValidator::validateClassNode\nSymfony\\Component\\Validator\\Validator\\RecursiveContextualValidator::validateInGroup\nSymfony\\Component\\Form\\Extension\\Validator\\Constraints\\FormValidator::validate\nSymfony\\Component\\Validator\\Validator\\RecursiveContextualValidator::validate\nSymfony\\Component\\Validator\\Validator\\RecursiveContextualValidator::validateObject\nSymfony\\Component\\Validator\\Mapping\\Factory\\LazyLoadingMetadataFactory::getMetadataFor\nSymfony\\Component\\Validator\\Mapping\\Loader\\StaticMethodLoader::loadClassMetadata\nReflectionMethod::invoke\nApp\\Entity\\Member::loadValidatorMetadata\n\nStaticMethodLoader\u3092\u898b\u308b\u3068\u3001'loadValidatorMetadata'\u3068\u3044\u3046\u95a2\u6570\u540d\u304c\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3084\u3001ReflectionClass\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u8208\u5473\u6df1\u3044\u3067\u3059\u3002\nStaticMethodLoader\n<?php\nnamespace Symfony\\Component\\Validator\\Mapping\\Loader;\nuse Symfony\\Component\\Validator\\Exception\\MappingException;\nuse Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n\nclass StaticMethodLoader implements LoaderInterface\n{\n    /**\n     * The name of the method to call.\n     *\n     * @var string\n     */\n    protected $methodName;\n    /**\n     * Creates a new loader.\n     *\n     * @param string $methodName The name of the static method to call\n     */\n    public function __construct($methodName = 'loadValidatorMetadata')\n    {\n        $this->methodName = $methodName;\n    }\n    /**\n     * {@inheritdoc}\n     */\n    public function loadClassMetadata(ClassMetadata $metadata)\n    {\n        /** @var \\ReflectionClass $reflClass */\n        $reflClass = $metadata->getReflectionClass();\n        if (!$reflClass->isInterface() && $reflClass->hasMethod($this->methodName)) {\n            $reflMethod = $reflClass->getMethod($this->methodName);\n            if ($reflMethod->isAbstract()) {\n                return false;\n            }\n            if (!$reflMethod->isStatic()) {\n                throw new MappingException(sprintf('The method %s::%s should be static', $reflClass->name, $this->methodName));\n            }\n            if ($reflMethod->getDeclaringClass()->name != $reflClass->name) {\n                return false;\n            }\n            $reflMethod->invoke(null, $metadata);\n            return true;\n        }\n        return false;\n    }\n}\n\n\n\u96d1\u611f\n\u50d5\u304c\u611f\u3058\u305f\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002\n\n\nFormType\u306ebuildForm\u306b\u3066\u3001'constraints'\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u30c0\u30e9\u30c0\u30e9\u3068\u66f8\u304b\u306a\u304f\u3066\u6e08\u3080\n\nDoctrine\\DBAL\u3067\u7d50\u679c\u30bb\u30c3\u30c8\u306bEntity\u3092\u30d5\u30a7\u30c3\u30c1\u3059\u308b\u3068\u3001Form\u306bsubmit\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u305d\u306e\u307e\u307e\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\n\n\u4ee5\u4e0b\u306f\u3001\u500b\u4eba\u7684\u306a\u8a2d\u8a08\u6307\u91dd\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\u3002\n\nEntity\u306e\u8907\u6570\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u307e\u305f\u304c\u3063\u305f\u5236\u7d04\u306f\u3001Callback\u5236\u7d04\u3092\u4f7f\u3048\u3070\u3001Entity\u306b\u3082\u8a18\u8ff0\u3067\u304d\u308b\u304c\u3001Entity\u3078\u306e\u5236\u7d04\u306f\u3001\u3042\u304f\u307e\u3067\u666e\u904d\u7684\u306a\u3082\u306e\u306b\u9650\u5b9a\u3057\u3001FormType\u306b\u8a18\u8ff0\u3057\u305f\u307b\u3046\u304c\u3044\u3044\n\u91cd\u8907\u30c7\u30fc\u30bf\u3092\u4e8b\u524d\u306b\u691c\u8a3c\u3057\u305f\u3044\u5834\u5408\u3001FormType\u3067\u691c\u8a3c\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001DB\u64cd\u4f5c\u30af\u30e9\u30b9\u3092FormType\u306b\u6301\u3061\u8fbc\u3080\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001Form\u3092\u30d3\u30eb\u30c9\u3057\u305f\u5074\u306e\u3069\u3053\u304b\u3067\u691c\u8a3c\u3057\u305f\u307b\u3046\u304c\u3044\u3044\n\n    private function getForm(FormFactoryInterface $formFactory, Member $member = null)\n    {\n        return $formFactory->createBuilder(MemberType::class, $member)\n            ->addEventListener(FormEvents::POST_SUBMIT, [$this, 'onSubmit'])\n            ->getForm();\n    }\n\n    /**\n     * onSubmit\n     * @param FormEvent $formEvent\n     * @param $eventName\n     * @param EventDispatcherInterface $eventDispatcher\n     */\n    public function onSubmit(FormEvent $formEvent, $eventName, EventDispatcherInterface $eventDispatcher)\n    {\n        $form = $formEvent->getForm();\n        $data = $formEvent->getData();\n\n        /** \u7701\u7565 */\n    }\n\n\n\u306a\u308b\u3079\u304f$form->isValid()\u3067\u691c\u8a3c\u306f\u5b8c\u7d50\u3055\u305b\u305f\u3044\n\n\n\u304a\u308f\u308a\u306b\n\u3082\u3046Symfony\u3067\u3044\u3044\u3058\u3083\u3093\u3068\u3044\u3046\u30c4\u30c3\u30b3\u30df\u306f\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001Silex\u306b\u5fc5\u8981\u306a\u6a5f\u80fd\u3092\u5c11\u3057\u305a\u3064\u8db3\u3057\u3066\u3044\u304f\u306e\u306f\u3001Symfony\u305d\u306e\u3082\u306e\u306e\u52c9\u5f37\u3068\u3044\u3046\u304b\u7406\u89e3\u306b\u3064\u306a\u304c\u308b\u6c17\u304c\u3057\u3066\u307e\u3059\u3002\nSilex1.2\u7cfb\uff08Symfony2.6\u307e\u3067\uff09\u3067\u540c\u3058\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3001\u4eca\u56de\u8a66\u305b\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3069\u306a\u305f\u304b\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\n\n## \u306f\u3058\u3081\u306b\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u578b\u3001\u5c5e\u6027\u306a\u3069\u306e\u5236\u7d04\u306f\u3001Entity\u30af\u30e9\u30b9\u4f5c\u3063\u3066\u305d\u3053\u306b\u30e1\u30bf\u60c5\u5831\u8a18\u8ff0\u3057\u305f\u3044\u3051\u3069\u3001[Doctrine ORM](http://docs.doctrine-project.org/projects/doctrine-orm/en/latest/)\u4f7f\u3063\u3066\u306a\u3044\u3068\u305d\u306e\u3088\u3046\u306a\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3068\u305a\u3063\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u304c\u3001\u8a66\u3057\u305f\u3068\u3053\u308d\u3001Entity\u30af\u30e9\u30b9\u4f5c\u3063\u3066ClassMetadata\u8a2d\u5b9a\u3057\u3066\u3001\u5236\u7d04\u306b\u3088\u308b\u691c\u8a3c\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u81ea\u5206\u306a\u308a\u306b\u611f\u3058\u305f\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u74b0\u5883\n- PHP 7.0.8\n- Silex 2.0.2\n- Symfony 3.0.8\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001[Silex-Skeleton](https://github.com/silexphp/Silex-Skeleton)\u3092\u30d9\u30fc\u30b9\u306b\u4f5c\u6210\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3057\u307e\u3059\u3002\n\u672a\u78ba\u8a8d\u3067\u3059\u304c\u3001\u4e0a\u8a18\u4ee5\u5916\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3082\u5229\u7528\u3067\u304d\u308b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001Form\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u3001Symfony\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u5fae\u5999\u306b\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u304c\u7570\u306a\u308a\u307e\u3059\u306e\u3067\u3001\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\nSilex2.0\u3078\u306e\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u306f\u3001[\u3053\u3061\u3089](http://qiita.com/imunew/items/8b426749dd2d0d1eec1e)\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n## Entity\u30af\u30e9\u30b9\u306e\u4f5c\u6210\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u5fdc\u3059\u308bEntity\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n`loadValidatorMetadata`\u306e\u90e8\u5206\u306f\u5f8c\u307b\u3069\u3001\u8a73\u3057\u304f\u8aac\u660e\u3057\u307e\u3059\u3002\n\n```php\nnamespace App/Entity;\n\nuse Symfony\\Component\\Validator\\Constraints\\Email;\nuse Symfony\\Component\\Validator\\Constraints\\Length;\nuse Symfony\\Component\\Validator\\Constraints\\NotBlank;\nuse Symfony\\Component\\Validator\\Constraints\\Regex;\nuse Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n\nclass Member\n{\n    public $id;\n    public $email;\n    public $nickName;\n\n    public static function loadValidatorMetadata(ClassMetadata $metadata)\n    {\n        $metadata->addPropertyConstraints('email', [\n            new NotBlank(),\n            new Email()\n        ]);\n\n        $metadata->addPropertyConstraints('nickName', [\n            new NotBlank(),\n            new Length(20),\n            new Regex(['pattern' => '/[0-9a-zA-Z\\-_]/'])\n        ]);\n\n    }\n}\n```\n\n`id`\u306b\u5bfe\u3059\u308b\u5236\u7d04\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u306a\u3044\u306e\u306f\u3001autoincrement\u3067\u81ea\u52d5\u7684\u306b\u751f\u6210\u3055\u308c\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3067\u3059\u304c\u3001\u4e07\u304c\u4e00\u306e\u305f\u3081\u306b\u3001Range\u5236\u7d04\u30671\u4ee5\u4e0a\u3092\u8a2d\u5b9a\u3057\u3066\u3082\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\n## FormType\u306edata_class\u3092\u8a2d\u5b9a\n\n```php\nnamespace App\\Form\\Type;\n\nuse App\\Entity\\Member;\nuse Symfony\\Component\\Form\\AbstractType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\EmailType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\HiddenType;\nuse Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType;\nuse Symfony\\Component\\Form\\FormBuilderInterface;\nuse Symfony\\Component\\OptionsResolver\\OptionsResolver;\n\nclass MemberType extends AbstractType\n{\n    public function buildForm(FormBuilderInterface $builder, array $options)\n    {\n        $builder->add('id', HiddenType::class, [\n        ]);\n\n        $builder->add('email', EmailType::class, [\n            'label' => 'E\u30e1\u30fc\u30eb'\n        ]);\n\n        $builder->add('nickName', TextType::class, [\n            'label' => '\u30cb\u30c3\u30af\u30cd\u30fc\u30e0'\n        ]);\n    }\n\n    public function configureOptions(OptionsResolver $resolver)\n    {\n        $resolver->setDefaults([\n            'data_class' => Member::class\n        ]);\n    }    \n}\n```\n\n## \u3069\u306e\u3088\u3046\u306b\u5165\u529b\u691c\u8a3c\u3055\u308c\u308b\u304b\n\u30b3\u30fc\u30eb\u30b9\u30bf\u30c3\u30af\u3092\u6642\u7cfb\u5217\u306e\u65e9\u3044\u9806\u306b\u4e26\u3079\u308b\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n- Symfony\\Component\\Form\\Form::handleRequest\n- Symfony\\Component\\Form\\Form::submit\n- Symfony\\Component\\EventDispatcher\\ImmutableEventDispatcher::dispatch\n- Symfony\\Component\\EventDispatcher\\EventDispatcher::dispatch\n- Symfony\\Component\\EventDispatcher\\EventDispatcher::doDispatch\n- call_user_func\n- Symfony\\Component\\Form\\Extension\\Validator\\EventListener- \\ValidationListener::validateForm\n- Symfony\\Component\\Validator\\Validator\\RecursiveValidator::validate\n- Symfony\\Component\\Validator\\Validator\\RecursiveContextualValidator::validateObject\n- Symfony\\Component\\Validator\\Validator\\RecursiveContextualValidator::validateClassNode\n- Symfony\\Component\\Validator\\Validator\\RecursiveContextualValidator::validateInGroup\n- Symfony\\Component\\Form\\Extension\\Validator\\Constraints\\FormValidator::validate\n- Symfony\\Component\\Validator\\Validator\\RecursiveContextualValidator::validate\n- Symfony\\Component\\Validator\\Validator\\RecursiveContextualValidator::validateObject\n- Symfony\\Component\\Validator\\Mapping\\Factory\\LazyLoadingMetadataFactory::getMetadataFor\n- Symfony\\Component\\Validator\\Mapping\\Loader\\StaticMethodLoader::loadClassMetadata\n- ReflectionMethod::invoke\n- App\\Entity\\Member::loadValidatorMetadata\n\n`StaticMethodLoader`\u3092\u898b\u308b\u3068\u3001'loadValidatorMetadata'\u3068\u3044\u3046\u95a2\u6570\u540d\u304c\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3084\u3001`ReflectionClass`\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u8208\u5473\u6df1\u3044\u3067\u3059\u3002\n\n[StaticMethodLoader](https://github.com/symfony/validator/blob/master/Mapping/Loader/StaticMethodLoader.php)\n\n```php\n<?php\nnamespace Symfony\\Component\\Validator\\Mapping\\Loader;\nuse Symfony\\Component\\Validator\\Exception\\MappingException;\nuse Symfony\\Component\\Validator\\Mapping\\ClassMetadata;\n\nclass StaticMethodLoader implements LoaderInterface\n{\n    /**\n     * The name of the method to call.\n     *\n     * @var string\n     */\n    protected $methodName;\n    /**\n     * Creates a new loader.\n     *\n     * @param string $methodName The name of the static method to call\n     */\n    public function __construct($methodName = 'loadValidatorMetadata')\n    {\n        $this->methodName = $methodName;\n    }\n    /**\n     * {@inheritdoc}\n     */\n    public function loadClassMetadata(ClassMetadata $metadata)\n    {\n        /** @var \\ReflectionClass $reflClass */\n        $reflClass = $metadata->getReflectionClass();\n        if (!$reflClass->isInterface() && $reflClass->hasMethod($this->methodName)) {\n            $reflMethod = $reflClass->getMethod($this->methodName);\n            if ($reflMethod->isAbstract()) {\n                return false;\n            }\n            if (!$reflMethod->isStatic()) {\n                throw new MappingException(sprintf('The method %s::%s should be static', $reflClass->name, $this->methodName));\n            }\n            if ($reflMethod->getDeclaringClass()->name != $reflClass->name) {\n                return false;\n            }\n            $reflMethod->invoke(null, $metadata);\n            return true;\n        }\n        return false;\n    }\n}\n```\n\n## \u96d1\u611f\n\u50d5\u304c\u611f\u3058\u305f\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002\n\n- `FormType`\u306e`buildForm`\u306b\u3066\u3001'constraints'\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u30c0\u30e9\u30c0\u30e9\u3068\u66f8\u304b\u306a\u304f\u3066\u6e08\u3080\n- `Doctrine\\DBAL`\u3067\u7d50\u679c\u30bb\u30c3\u30c8\u306b`Entity`\u3092\u30d5\u30a7\u30c3\u30c1\u3059\u308b\u3068\u3001Form\u306bsubmit\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u305d\u306e\u307e\u307e\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\n\n\u4ee5\u4e0b\u306f\u3001\u500b\u4eba\u7684\u306a\u8a2d\u8a08\u6307\u91dd\u307f\u305f\u3044\u306a\u3082\u306e\u3067\u3059\u3002\n\n- Entity\u306e\u8907\u6570\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u307e\u305f\u304c\u3063\u305f\u5236\u7d04\u306f\u3001Callback\u5236\u7d04\u3092\u4f7f\u3048\u3070\u3001Entity\u306b\u3082\u8a18\u8ff0\u3067\u304d\u308b\u304c\u3001Entity\u3078\u306e\u5236\u7d04\u306f\u3001\u3042\u304f\u307e\u3067\u666e\u904d\u7684\u306a\u3082\u306e\u306b\u9650\u5b9a\u3057\u3001FormType\u306b\u8a18\u8ff0\u3057\u305f\u307b\u3046\u304c\u3044\u3044\n- \u91cd\u8907\u30c7\u30fc\u30bf\u3092\u4e8b\u524d\u306b\u691c\u8a3c\u3057\u305f\u3044\u5834\u5408\u3001FormType\u3067\u691c\u8a3c\u30b3\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001DB\u64cd\u4f5c\u30af\u30e9\u30b9\u3092FormType\u306b\u6301\u3061\u8fbc\u3080\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001Form\u3092\u30d3\u30eb\u30c9\u3057\u305f\u5074\u306e\u3069\u3053\u304b\u3067\u691c\u8a3c\u3057\u305f\u307b\u3046\u304c\u3044\u3044\n\n  ```php\n    private function getForm(FormFactoryInterface $formFactory, Member $member = null)\n    {\n        return $formFactory->createBuilder(MemberType::class, $member)\n            ->addEventListener(FormEvents::POST_SUBMIT, [$this, 'onSubmit'])\n            ->getForm();\n    }\n\n    /**\n     * onSubmit\n     * @param FormEvent $formEvent\n     * @param $eventName\n     * @param EventDispatcherInterface $eventDispatcher\n     */\n    public function onSubmit(FormEvent $formEvent, $eventName, EventDispatcherInterface $eventDispatcher)\n    {\n        $form = $formEvent->getForm();\n        $data = $formEvent->getData();\n        \n        /** \u7701\u7565 */\n    }\n  ```\n\n- \u306a\u308b\u3079\u304f`$form->isValid()`\u3067\u691c\u8a3c\u306f\u5b8c\u7d50\u3055\u305b\u305f\u3044\n\n## \u304a\u308f\u308a\u306b\n\u3082\u3046Symfony\u3067\u3044\u3044\u3058\u3083\u3093\u3068\u3044\u3046\u30c4\u30c3\u30b3\u30df\u306f\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001Silex\u306b\u5fc5\u8981\u306a\u6a5f\u80fd\u3092\u5c11\u3057\u305a\u3064\u8db3\u3057\u3066\u3044\u304f\u306e\u306f\u3001Symfony\u305d\u306e\u3082\u306e\u306e\u52c9\u5f37\u3068\u3044\u3046\u304b\u7406\u89e3\u306b\u3064\u306a\u304c\u308b\u6c17\u304c\u3057\u3066\u307e\u3059\u3002\nSilex1.2\u7cfb\uff08Symfony2.6\u307e\u3067\uff09\u3067\u540c\u3058\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3001\u4eca\u56de\u8a66\u305b\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3069\u306a\u305f\u304b\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\n", "tags": ["Silex", "Symfony2", "PHP", "symfony3"]}