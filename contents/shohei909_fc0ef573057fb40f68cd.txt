{"context": " More than 1 year has passed since last update.\u307e\u305f\u307e\u305f\u3001Enum\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u306e\u7d39\u4ecb\u3067\u3059\u3002\n\u524d\u56de\u306f\u3053\u3061\u3089\u2193\nHaxe\u767d\u9b54\u6cd5\u4f7f\u3044\u5165\u9580\u3001\u57fa\u672c\u7de8\u3002Enum\u306e\u5b9f\u7528\u30d1\u30bf\u30fc\u30f3\u96c6\u3002\nhttp://qiita.com/shohei909/items/454ff5d3be46c6064074\n\u4eca\u56de\u306f\u3001Enum\u3092\u4f7f\u3046\u3068\u304d\u306e\u30c6\u30af\u30cb\u30c3\u30af\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3001Enum\u3092\u7d39\u4ecb\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nEnum\u306b\u5f8c\u304b\u3089\u5024\u3092\u5165\u308c\u308b\u3002\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aEnum\u3092\u6271\u3046\u5834\u5408\u3001data\u306e\u6587\u5b57\u5217\u3092\u5f8c\u304b\u3089\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\nenum Sample {\n    HOGE( data:String );\n}\n\n1\u5ea6\u8a2d\u5b9a\u3057\u305fEnum\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5909\u66f4\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u307e\u305b\u3093\u304c\u3001\u914d\u5217\u3084\u69cb\u9020\u4f53\u3092Enum\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u4f7f\u3048\u3070\u305d\u306e\u4e2d\u306e\u5024\u306f\u81ea\u7531\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\u3053\u3093\u306a\u611f\u3058\u306b\nclass Main {\n    static function main() {\n        var sample = HOGE( { data : \"hoge\" } );\n\n        switch( sample ) {\n            case HOGE( obj ):\n                obj.data = \"fuga\";\n        }\n    }\n}\n\nenum Sample {\n    HOGE( obj:{ data:String } );\n}\n\n\u308f\u308a\u3068\u826f\u304f\u4f7f\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u3053\u306e\u30c6\u30af\u30cb\u30c3\u30af\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001Enum\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u81ea\u5206\u81ea\u8eab\u3092\u6301\u305f\u305b\u305f\u308a\u3001\u5faa\u74b0\u304c\u3042\u308b\u30b0\u30e9\u30d5\u3092Enum\u3067\u8868\u73fe\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\nclass Main {\n    static function main() {\n        var data = { graph0 : LEAF( \"hoge\" ), graph1:null };\n        var node = NODE( data );\n        data.graph1 = node;\n    }\n}\n\nenum GRAPH {\n    LEAF( data:String );\n    NODE( data:{ graph0:GRAPH, graph1:GRAPH } );\n}\n\n\n\u5927\u304d\u304f\u306a\u308a\u3059\u304e\u305fEnum\u3092\u6574\u7406\u3059\u308b\u3002\n\u6570\u5f0f\u306a\u3069\u3092\u8868\u73fe\u3059\u308b\u306e\u306bEnum\u3092\u4f7f\u3046\u30681\u3064\u306eenum\u306b\u305f\u304f\u3055\u3093\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u51fa\u6765\u3066\u3057\u307e\u3063\u3066\u3001\u4e00\u56deswitch\u3059\u308b\u306b\u3082\u9762\u5012\u3063\u3066\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3046\u3044\u3046\u5834\u5408\u306b\u4f7f\u3048\u308b\u3061\u3087\u3063\u3068\u3057\u305f\u30c6\u30af\u30cb\u30c3\u30af\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\nenum Expression {\n    INT( int:Int ); //\u6574\u6570\n    PLUS( a:Expression ); // (+ a)\n    MINUS( a:Expression ); // (- a)\n    ADD( a:Expression, b:Expression ); // (a + b)\n    SUBTRACT( a:Expression, b:Expression ); // (a - b)\n    PRODUCT( a:Expression, b:Expression ); // (a * b)\n    DIVIDE( a:Expression, b:Expression ); // (a / b)\n    POWOR( a:Expression, b:Expression ); // (a ^ b)\n    MOD( a:Expression, b:Expression ); // (a % b)\n}\n\n\u3053\u306e\u3088\u3046\u306aEnum\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5206\u5272\u3059\u308b\u3053\u3068\u3067\u4f7f\u3044\u52dd\u624b\u304c\u3088\u304f\u306a\u308a\u307e\u3059\u3002\nenum Expression {\n    INT( int:Int ); //\u6570\u5b57\n    UNARY_OP( op:UnaryOperator, a:Expression ); // (op a)\n    BINARY_OP( op:BinaryOperator, a:Expression, b:Expression ); // (a op b)\n}\n\n//\u4e00\u9805\u6f14\u7b97\nenum UnaryOperator { \n    PLUS; // +\n    MINUS; // -\n}\n\n//\u4e8c\u9805\u6f14\u7b97\nenum BinaryOperator { \n    ADD; // +\n    SUBTRACT; // -\n    PRODUCT; // *\n    DIVIDE; // /\n    POWOR; // ^\n    MOD; // %\n}\n\n\u540c\u3058\u69cb\u9020\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u3059\u3079\u30661\u3064\u306b\u307e\u3068\u3081\u3066\u3057\u307e\u3044\u3002\u5404\u69cb\u9020\u3054\u3068\u306b\u3001enum\u3092\u4f5c\u3063\u305f\u3053\u3068\u3067\u6f14\u7b97\u5b50\u3054\u3068\u306e\u5217\u6319\u3082\u884c\u3048\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u4f7f\u3044\u52dd\u624b\u304c\u5897\u3057\u307e\u3059\u3002\nHaxe3\u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306b1\u3064\u306eenum\u3067\u307e\u3068\u3081\u3066\u3057\u307e\u3063\u3066\u3044\u305f\u5834\u5408\u3088\u308a\u697d\u306b\u5206\u5c90\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u3053\u3093\u306a\u304b\u3093\u3058\u3067\u3059\u3002\nclass Sample {\n    static public function test( expr:Expression ){\n        switch( expr ) {\n            case INT( num ):\n                //\u6574\u6570\u306e\u5834\u5408\u3002\n\n            case UNARY_OP( op, a ): \n                //1\u9805\u6f14\u7b97\u306e\u5834\u5408\u3002\n\n            case BINARY_OP( ADD, a, b ) : \n                //\u8db3\u3057\u7b97\u306e\u5834\u5408\u3002\n\n            case BINARY_OP( op, a, b ) :\n                //\u305d\u306e\u4ed6\u306e2\u9805\u6f14\u7b97\u306e\u5834\u5408\u3002\u3053\u306e\u624b\u306e\u5206\u5c90\u30921\u3064\u306eenum\u3067\u3084\u308d\u3046\u3068\u3059\u308b\u3068\u3081\u3093\u3069\u304f\u3055\u3044\u3002\n        }\n    }\n}\n\n\n\u826f\u304f\u4f7f\u3046Enum\u306f\u95a2\u6570\u5316\u3057\u3066\u304a\u304f\nEnum\u4fbf\u5229\u3067\u3059\u3002\u4e0a\u8a18\u306eEnum\u3092\u5206\u5272\u3059\u308b\u30c6\u30af\u30cb\u30c3\u30af\u3082\u4fbf\u5229\u3067\u3059\u3002\u3067\u3059\u304c\u3001\u3064\u3044\u3064\u3044Enum\u3092\u305f\u304f\u3055\u3093\u5b9a\u7fa9\u3057\u3066\u3057\u307e\u3044\u4f55\u91cd\u306b\u3082\u5165\u308c\u5b50\u306b\u306a\u3063\u305f\u3088\u3046\u306aEnum\u304c\u51fa\u6765\u3066\u3057\u307e\u3046\u3068\u7c21\u5358\u306aenum\u3092\u8868\u73fe\u3059\u308b\u306e\u3082\u9762\u5012\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u4e0a\u8a18\u306e\u6570\u5f0f\u306eEnum\u3067\u3001\"2 + 3 + 4 + 5\"\u3068\u3044\u3046\u3054\u304f\u7c21\u5358\u306a\u6570\u5f0f\u3092\u8868\u73fe\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u9762\u5012\u306a\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\nBINARY_OP( ADD, BINARY_OP( ADD, BINARY_OP( ADD, INT(2), INT(3) ), INT(4) ), INT(5) );\n\n\u826f\u304f\u4f7f\u3046\u5024\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u95a2\u6570\u5316\u3057\u3066\u7c21\u5358\u306b\u5b9a\u7fa9\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002\nclass Main {\n    static function main() {\n        var expr = ExpressionBind.sum( [ INT(2), INT(3), INT(4), INT(5) ] );\n    }\n}\n\nclass ExpressionBind {\n    static public function add( a:Expression, b:Expression ) {\n        return Expression.BINARY_OP( BinaryOperator.ADD, a, b );\n    }\n\n    static public function sum( array:Array<Expression> ) {\n        var length = array.length;\n        if ( length == 1 ) return array[ 0 ];\n        var copy = array.copy();\n        var last = copy.pop();\n\n        return add( sum( copy ), last );\n    }\n}\n\n\u307e\u305f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u4ed8\u304dEnum\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7701\u7565\u3057\u3066\u8a18\u8ff0\u3059\u308b\u3068\u95a2\u6570\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u51fa\u6765\u308b\u306e\u3067\u3001bind\u3092\u4f7f\u3063\u3066\u76ee\u7684\u306e\u30b3\u30fc\u30c9\u3092\u77ed\u304f\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\nclass Main {\n    static function main() {\n        var add = Expression.BINARY_OP.bind( ADD, _, _ );\n        var expr = add( add( add( INT( 2 ), INT( 3 ) ), INT( 4 ) ), INT( 5 ) );\n    }\n}\n\nEnum\u3001\u4f7f\u3044\u3059\u304e\u3066\u3068\u591a\u91cd\u306e\u69cb\u9020\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3068\u5b9a\u7fa9\u304c\u3081\u3093\u3069\u304f\u3055\u304f\u306a\u308a\u307e\u3059\u304c\u3001\u4e00\u5ea6\u95a2\u6570\u5316\u3057\u3066\u3057\u307e\u3048\u3070\u3042\u3068\u306f\u697d\u3061\u3093\u3067\u3059\u3002\u3069\u3093\u3069\u3093Enum\u3092\u4f7f\u3063\u3066\u5feb\u9069\u306a\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u697d\u3057\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u304a\u308f\u308a\n\u660e\u65e5\u306f\u3001@nobkz\u3055\u3093\u3067\u3059\u3002\u3088\u308d\u3057\u304f\u304a\u306d\u304c\u3044\u3057\u307e\u3059\u3002\n\u307e\u305f\u307e\u305f\u3001Enum\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u306e\u7d39\u4ecb\u3067\u3059\u3002\n\n\u524d\u56de\u306f\u3053\u3061\u3089\u2193\n\nHaxe\u767d\u9b54\u6cd5\u4f7f\u3044\u5165\u9580\u3001\u57fa\u672c\u7de8\u3002Enum\u306e\u5b9f\u7528\u30d1\u30bf\u30fc\u30f3\u96c6\u3002\nhttp://qiita.com/shohei909/items/454ff5d3be46c6064074\n\n\u4eca\u56de\u306f\u3001Enum\u3092\u4f7f\u3046\u3068\u304d\u306e\u30c6\u30af\u30cb\u30c3\u30af\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u3001Enum\u3092\u7d39\u4ecb\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n#Enum\u306b\u5f8c\u304b\u3089\u5024\u3092\u5165\u308c\u308b\u3002\n\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aEnum\u3092\u6271\u3046\u5834\u5408\u3001data\u306e\u6587\u5b57\u5217\u3092\u5f8c\u304b\u3089\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\n```hx\nenum Sample {\n\tHOGE( data:String );\n}\n```\n\n1\u5ea6\u8a2d\u5b9a\u3057\u305fEnum\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5909\u66f4\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u307e\u305b\u3093\u304c\u3001\u914d\u5217\u3084\u69cb\u9020\u4f53\u3092Enum\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u4f7f\u3048\u3070\u305d\u306e\u4e2d\u306e\u5024\u306f\u81ea\u7531\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n\u3053\u3093\u306a\u611f\u3058\u306b\n\n```hx\nclass Main {\n\tstatic function main() {\n\t\tvar sample = HOGE( { data : \"hoge\" } );\n\t\t\n\t\tswitch( sample ) {\n\t\t\tcase HOGE( obj ):\n\t\t\t\tobj.data = \"fuga\";\n\t\t}\n\t}\n}\n\nenum Sample {\n\tHOGE( obj:{ data:String } );\n}\n```\n\n\u308f\u308a\u3068\u826f\u304f\u4f7f\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u3053\u306e\u30c6\u30af\u30cb\u30c3\u30af\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001Enum\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u81ea\u5206\u81ea\u8eab\u3092\u6301\u305f\u305b\u305f\u308a\u3001\u5faa\u74b0\u304c\u3042\u308b\u30b0\u30e9\u30d5\u3092Enum\u3067\u8868\u73fe\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```hx\nclass Main {\n\tstatic function main() {\n\t\tvar data = { graph0 : LEAF( \"hoge\" ), graph1:null };\n\t\tvar node = NODE( data );\n\t\tdata.graph1 = node;\n\t}\n}\n\nenum GRAPH {\n\tLEAF( data:String );\n\tNODE( data:{ graph0:GRAPH, graph1:GRAPH } );\n}\n```\n\n#\u5927\u304d\u304f\u306a\u308a\u3059\u304e\u305fEnum\u3092\u6574\u7406\u3059\u308b\u3002\n\n\u6570\u5f0f\u306a\u3069\u3092\u8868\u73fe\u3059\u308b\u306e\u306bEnum\u3092\u4f7f\u3046\u30681\u3064\u306eenum\u306b\u305f\u304f\u3055\u3093\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u51fa\u6765\u3066\u3057\u307e\u3063\u3066\u3001\u4e00\u56deswitch\u3059\u308b\u306b\u3082\u9762\u5012\u3063\u3066\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3046\u3044\u3046\u5834\u5408\u306b\u4f7f\u3048\u308b\u3061\u3087\u3063\u3068\u3057\u305f\u30c6\u30af\u30cb\u30c3\u30af\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n```hx\nenum Expression {\n\tINT( int:Int ); //\u6574\u6570\n\tPLUS( a:Expression ); // (+ a)\n\tMINUS( a:Expression ); // (- a)\n\tADD( a:Expression, b:Expression ); // (a + b)\n\tSUBTRACT( a:Expression, b:Expression ); // (a - b)\n\tPRODUCT( a:Expression, b:Expression ); // (a * b)\n\tDIVIDE( a:Expression, b:Expression ); // (a / b)\n\tPOWOR( a:Expression, b:Expression ); // (a ^ b)\n\tMOD( a:Expression, b:Expression ); // (a % b)\n}\n```\n\n\u3053\u306e\u3088\u3046\u306aEnum\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5206\u5272\u3059\u308b\u3053\u3068\u3067\u4f7f\u3044\u52dd\u624b\u304c\u3088\u304f\u306a\u308a\u307e\u3059\u3002\n\n```hx\nenum Expression {\n\tINT( int:Int ); //\u6570\u5b57\n\tUNARY_OP( op:UnaryOperator, a:Expression ); // (op a)\n\tBINARY_OP( op:BinaryOperator, a:Expression, b:Expression ); // (a op b)\n}\n\n//\u4e00\u9805\u6f14\u7b97\nenum UnaryOperator { \n\tPLUS; // +\n\tMINUS; // -\n}\n\n//\u4e8c\u9805\u6f14\u7b97\nenum BinaryOperator { \n\tADD; // +\n\tSUBTRACT; // -\n\tPRODUCT; // *\n\tDIVIDE; // /\n\tPOWOR; // ^\n\tMOD; // %\n}\n```\n\n\u540c\u3058\u69cb\u9020\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u3059\u3079\u30661\u3064\u306b\u307e\u3068\u3081\u3066\u3057\u307e\u3044\u3002\u5404\u69cb\u9020\u3054\u3068\u306b\u3001enum\u3092\u4f5c\u3063\u305f\u3053\u3068\u3067\u6f14\u7b97\u5b50\u3054\u3068\u306e\u5217\u6319\u3082\u884c\u3048\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u4f7f\u3044\u52dd\u624b\u304c\u5897\u3057\u307e\u3059\u3002\n\nHaxe3\u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306b1\u3064\u306eenum\u3067\u307e\u3068\u3081\u3066\u3057\u307e\u3063\u3066\u3044\u305f\u5834\u5408\u3088\u308a\u697d\u306b\u5206\u5c90\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001\u3053\u3093\u306a\u304b\u3093\u3058\u3067\u3059\u3002\n\n```hx\nclass Sample {\n\tstatic public function test( expr:Expression ){\n\t\tswitch( expr ) {\n\t\t\tcase INT( num ):\n\t\t\t\t//\u6574\u6570\u306e\u5834\u5408\u3002\n\t\t\t\t\n\t\t\tcase UNARY_OP( op, a ): \n\t\t\t\t//1\u9805\u6f14\u7b97\u306e\u5834\u5408\u3002\n\t\t\t\t\n\t\t\tcase BINARY_OP( ADD, a, b ) : \n\t\t\t\t//\u8db3\u3057\u7b97\u306e\u5834\u5408\u3002\n\t\t\t\t\n\t\t\tcase BINARY_OP( op, a, b ) :\n\t\t\t\t//\u305d\u306e\u4ed6\u306e2\u9805\u6f14\u7b97\u306e\u5834\u5408\u3002\u3053\u306e\u624b\u306e\u5206\u5c90\u30921\u3064\u306eenum\u3067\u3084\u308d\u3046\u3068\u3059\u308b\u3068\u3081\u3093\u3069\u304f\u3055\u3044\u3002\n\t\t}\n\t}\n}\n```\n\n#\u826f\u304f\u4f7f\u3046Enum\u306f\u95a2\u6570\u5316\u3057\u3066\u304a\u304f\n\nEnum\u4fbf\u5229\u3067\u3059\u3002\u4e0a\u8a18\u306eEnum\u3092\u5206\u5272\u3059\u308b\u30c6\u30af\u30cb\u30c3\u30af\u3082\u4fbf\u5229\u3067\u3059\u3002\u3067\u3059\u304c\u3001\u3064\u3044\u3064\u3044Enum\u3092\u305f\u304f\u3055\u3093\u5b9a\u7fa9\u3057\u3066\u3057\u307e\u3044\u4f55\u91cd\u306b\u3082\u5165\u308c\u5b50\u306b\u306a\u3063\u305f\u3088\u3046\u306aEnum\u304c\u51fa\u6765\u3066\u3057\u307e\u3046\u3068\u7c21\u5358\u306aenum\u3092\u8868\u73fe\u3059\u308b\u306e\u3082\u9762\u5012\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u4e0a\u8a18\u306e\u6570\u5f0f\u306eEnum\u3067\u3001\"2 + 3 + 4 + 5\"\u3068\u3044\u3046\u3054\u304f\u7c21\u5358\u306a\u6570\u5f0f\u3092\u8868\u73fe\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u9762\u5012\u306a\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n```\nBINARY_OP( ADD, BINARY_OP( ADD, BINARY_OP( ADD, INT(2), INT(3) ), INT(4) ), INT(5) );\n```\n\n\u826f\u304f\u4f7f\u3046\u5024\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u95a2\u6570\u5316\u3057\u3066\u7c21\u5358\u306b\u5b9a\u7fa9\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002\n\n```hx\nclass Main {\n\tstatic function main() {\n\t\tvar expr = ExpressionBind.sum( [ INT(2), INT(3), INT(4), INT(5) ] );\n\t}\n}\n\nclass ExpressionBind {\n\tstatic public function add( a:Expression, b:Expression ) {\n\t\treturn Expression.BINARY_OP( BinaryOperator.ADD, a, b );\n\t}\n\t\n\tstatic public function sum( array:Array<Expression> ) {\n\t\tvar length = array.length;\n\t\tif ( length == 1 ) return array[ 0 ];\n\t\tvar copy = array.copy();\n\t\tvar last = copy.pop();\n\t\t\n\t\treturn add( sum( copy ), last );\n\t}\n}\n```\n\n\u307e\u305f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u4ed8\u304dEnum\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7701\u7565\u3057\u3066\u8a18\u8ff0\u3059\u308b\u3068\u95a2\u6570\u3068\u3057\u3066\u6271\u3046\u3053\u3068\u304c\u51fa\u6765\u308b\u306e\u3067\u3001bind\u3092\u4f7f\u3063\u3066\u76ee\u7684\u306e\u30b3\u30fc\u30c9\u3092\u77ed\u304f\u8a18\u8ff0\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n```hx\nclass Main {\n\tstatic function main() {\n\t\tvar add = Expression.BINARY_OP.bind( ADD, _, _ );\n\t\tvar expr = add( add( add( INT( 2 ), INT( 3 ) ), INT( 4 ) ), INT( 5 ) );\n\t}\n}\n```\n\nEnum\u3001\u4f7f\u3044\u3059\u304e\u3066\u3068\u591a\u91cd\u306e\u69cb\u9020\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3068\u5b9a\u7fa9\u304c\u3081\u3093\u3069\u304f\u3055\u304f\u306a\u308a\u307e\u3059\u304c\u3001\u4e00\u5ea6\u95a2\u6570\u5316\u3057\u3066\u3057\u307e\u3048\u3070\u3042\u3068\u306f\u697d\u3061\u3093\u3067\u3059\u3002\u3069\u3093\u3069\u3093Enum\u3092\u4f7f\u3063\u3066\u5feb\u9069\u306a\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u697d\u3057\u307f\u307e\u3057\u3087\u3046\u3002\n\n#\u304a\u308f\u308a\n\u660e\u65e5\u306f\u3001@nobkz\u3055\u3093\u3067\u3059\u3002\u3088\u308d\u3057\u304f\u304a\u306d\u304c\u3044\u3057\u307e\u3059\u3002", "tags": ["Haxe3.0"]}