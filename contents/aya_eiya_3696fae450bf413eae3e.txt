{"context": " More than 1 year has passed since last update.\u4ed5\u4e8b\u67c4\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u3088\u304f\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001ZSH\u306e\u53f3\u306b\u51fa\u3059\u30d6\u30e9\u30f3\u30c1\u306e\u60c5\u5831\u306b\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u60c5\u5831\u3092\u5408\u308f\u305b\u3066\u51fa\u3059\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u62fe\u3044\u3069\u3053\u308d\u306f\u5fd8\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u62fe\u3063\u3066\u304d\u305f\u3082\u306e\u3092\u52a0\u5de5\u3057\u3066\u3044\u307e\u3059\u3002\n\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u3044\u308b\u74b0\u5883\u306f\u4eca\u306e\u3068\u3053\u308dCygwin\u306e\u307f\u3067\u3059\u3002\n\u6b20\u70b9\uff1a\u7570\u5e38\u306b\u91cd\u3044\u3002\u3002\u3002\n### Git\n#\n# Show branch name in Zsh's right prompt\n#\nautoload -Uz VCS_INFO_get_data_git; VCS_INFO_get_data_git 2> /dev/null\nsetopt prompt_subst\nsetopt re_match_pcre\n\nfunction rprompt-git-submodule-status {\n  local st color subName name treeTop cdir\n  treeTop=\"$1\"\n  cdir=\"$PWD\"\n  cd \"$treeTop\"\n  st=`git submodule foreach git status 2> /dev/null | perl -p -0777 -e 's/^(Entering ([^(Entering)]|.)*?)Entering.++/$1/s' 2> /dev/null`\n  cd \"$cdir\"\n  subName=`echo $st|sed -n \"1p\"|sed -e \"s/^Entering '\\([^']*\\)'/\\1/\"`\n  if [[ -n \"$subName\" ]]; then\n    if [[ \"$st\" =~ \"(?m)^nothing added\" ]]; then\n      color=%B%F{yellow}\n    elif [[ \"$st\" =~ \"(?m)^# Untracked\" ]]; then\n      color=%B%F{red}\n    elif [[ \"$st\" =~ \"(?m)^# .*\\\"git (pull|push)\\\"\" ]]; then\n      color=%B%F{blue}\n    elif [[ \"$st\" =~ \"(?m)^nothing to\" ]]; then\n      color=%F{green}\n    fi\n    echo \" with $color$subName%f%b\"\n  fi\n}\n\nfunction rprompt-git-current-branch {\n  local name st color gitdir action\n  if [[ \"$PWD\" =~ '/\\.git(/.*)?$' ]]; then\n    return\n  fi\n  name=`git rev-parse --abbrev-ref=loose HEAD 2> /dev/null`\n  if [[ -z $name ]]; then\n    return\n  fi\n\n  gitdir=`git rev-parse --git-dir 2> /dev/null`\n  action=`VCS_INFO_git_getaction \"$gitdir\"` && action=\"($action)\"\n  treeTop=`dirname \"$gitdir\"`\n\n  st=`git status 2> /dev/null`\n  if [[ \"$st\" =~ \"(?m)^nothing to\" ]]; then\n    color=%F{green}\n  elif [[ \"$st\" =~ \"(?m)^nothing added\" ]]; then\n    color=%F{yellow}\n  elif [[ \"$st\" =~ \"(?m)^# Untracked\" ]]; then\n    color=%B%F{red}\n  else\n    color=%F{red}\n  fi\n  echo \"$color$name$action%f%b`rprompt-git-submodule-status $treeTop`\"\n}\n\nRPROMPT='[`rprompt-git-current-branch`]'\n\n\u4ed5\u4e8b\u67c4\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u3088\u304f\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001ZSH\u306e\u53f3\u306b\u51fa\u3059\u30d6\u30e9\u30f3\u30c1\u306e\u60c5\u5831\u306b\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u60c5\u5831\u3092\u5408\u308f\u305b\u3066\u51fa\u3059\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u62fe\u3044\u3069\u3053\u308d\u306f\u5fd8\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u62fe\u3063\u3066\u304d\u305f\u3082\u306e\u3092\u52a0\u5de5\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u3044\u308b\u74b0\u5883\u306f\u4eca\u306e\u3068\u3053\u308dCygwin\u306e\u307f\u3067\u3059\u3002\n\n\u6b20\u70b9\uff1a\u7570\u5e38\u306b\u91cd\u3044\u3002\u3002\u3002\n\n```zsh\n### Git\n#\n# Show branch name in Zsh's right prompt\n#\nautoload -Uz VCS_INFO_get_data_git; VCS_INFO_get_data_git 2> /dev/null\nsetopt prompt_subst\nsetopt re_match_pcre\n\nfunction rprompt-git-submodule-status {\n  local st color subName name treeTop cdir\n  treeTop=\"$1\"\n  cdir=\"$PWD\"\n  cd \"$treeTop\"\n  st=`git submodule foreach git status 2> /dev/null | perl -p -0777 -e 's/^(Entering ([^(Entering)]|.)*?)Entering.++/$1/s' 2> /dev/null`\n  cd \"$cdir\"\n  subName=`echo $st|sed -n \"1p\"|sed -e \"s/^Entering '\\([^']*\\)'/\\1/\"`\n  if [[ -n \"$subName\" ]]; then\n    if [[ \"$st\" =~ \"(?m)^nothing added\" ]]; then\n      color=%B%F{yellow}\n    elif [[ \"$st\" =~ \"(?m)^# Untracked\" ]]; then\n      color=%B%F{red}\n    elif [[ \"$st\" =~ \"(?m)^# .*\\\"git (pull|push)\\\"\" ]]; then\n      color=%B%F{blue}\n    elif [[ \"$st\" =~ \"(?m)^nothing to\" ]]; then\n      color=%F{green}\n    fi\n    echo \" with $color$subName%f%b\"\n  fi\n}\n\nfunction rprompt-git-current-branch {\n  local name st color gitdir action\n  if [[ \"$PWD\" =~ '/\\.git(/.*)?$' ]]; then\n    return\n  fi\n  name=`git rev-parse --abbrev-ref=loose HEAD 2> /dev/null`\n  if [[ -z $name ]]; then\n    return\n  fi\n\n  gitdir=`git rev-parse --git-dir 2> /dev/null`\n  action=`VCS_INFO_git_getaction \"$gitdir\"` && action=\"($action)\"\n  treeTop=`dirname \"$gitdir\"`\n\n  st=`git status 2> /dev/null`\n  if [[ \"$st\" =~ \"(?m)^nothing to\" ]]; then\n    color=%F{green}\n  elif [[ \"$st\" =~ \"(?m)^nothing added\" ]]; then\n    color=%F{yellow}\n  elif [[ \"$st\" =~ \"(?m)^# Untracked\" ]]; then\n    color=%B%F{red}\n  else\n    color=%F{red}\n  fi\n  echo \"$color$name$action%f%b`rprompt-git-submodule-status $treeTop`\"\n}\n\nRPROMPT='[`rprompt-git-current-branch`]'\n```", "tags": ["Zsh", "Git1.8.2, 1.8.3, 1.8.4", "Cygwin"]}