{"tags": ["Python>=3", "pip"], "context": " More than 1 year has passed since last update.\n\n\u7d50\u679c\n-> PyPI \u4e0a\u4f4d 100 \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3084\u3063\u3066\u307f\u305f\u7248: http://qiita.com/kitsuyui/items/a7cc56d476b59ff07f54\n\u624b\u5143\u306e\u6a5f\u68b0\u5b66\u7fd2\u7528\u306e virtualenv \u3067\u3053\u3093\u306a\u56f3\u3092\u5f97\u305f\u3002\u4e00\u76ee\u77ad\u7136\u3002\n\nnumpy \u3068 scipy \u306f\u540c\u3058\u304f\u3089\u3044\u4f9d\u5b58\u3055\u308c\u3066\u308b\u3068\u601d\u3063\u3066\u3044\u305f\u3051\u308c\u3069\u3001\nscipy \u306e\u65b9\u306f\u3042\u307e\u308a\u4f9d\u5b58\u3055\u308c\u3066\u3044\u306a\u3044\u2026\u2026\u3002\n\u591a\u304f\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c six \u3092\u4f7f\u3063\u3066 Python 3 \u3068 Python 2 \u3068\u306e\u4e92\u63db\u6027\u3092\u6301\u305f\u305b\u3066\u3044\u308b\u3053\u3068\u306b\u30e1\u30f3\u30c6\u30ca\u306e\u82e6\u52b4\u304c\u6ef2\u307f\u51fa\u3066\u3044\u308b\u3002\n\u6b8b\u308a\u306e\u9805\u3067\u306f pip freeze \u3068 pipdeptree \u3001 \u3053\u306e\u56f3\u3092\u51fa\u529b\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7b87\u6761\u66f8\u304d\u306b\u3059\u308b\u3002\n\npip freeze\n$ pip freeze -l\n\n\u3059\u308b\u3068\u3001\u73fe\u5728\u306e virtualenv \u5185\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u8868\u793a\u3067\u304d\u308b\u3002\n\u3057\u304b\u3057\u3001\u968e\u5c64\u306f\u306a\u304f\u5168\u3066\u30d5\u30e9\u30c3\u30c8\u306b\u8a18\u8f09\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u305a\u3089\u3063\u3068\u51fa\u3066\u304f\u304d\u3066\u4f9d\u5b58\u95a2\u4fc2\u304c\u308f\u304b\u3089\u306a\u3044\u3002\nautoflake==0.6.6\nautopep8==1.1.1\nflake8==2.2.4\ngraphviz==0.4.3\nhacking==0.10.1\nisort==3.9.6\nmatplotlib==1.4.3\nmccabe==0.2.1\nnatsort==3.5.6\nnose==1.3.6\nnumpy==1.9.2\npandas==0.16.0\npbr==0.10.8\npep8==1.5.7\npies==2.6.3\npipdeptree==0.4.2\npy==1.4.26\npyflakes==0.8.1\npyparsing==2.0.3\npytest==2.7.0\npython-dateutil==2.4.2\npytz==2015.2\nscipy==0.15.1\nsix==1.9.0\nTheano==0.7.0\ntox==1.9.2\nvirtualenv==12.1.1\n\n\npipdeptree \u3092\u4f7f\u3046\n\u4e00\u65b9\u3001 pipdeptree \u3092\u4f7f\u3046\u3068\u4f9d\u5b58\u95a2\u4fc2\u306e\u968e\u5c64\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u8868\u793a\u3067\u304d\u308b\u3002\n$ pipdeptree --nowarn --local-only --freeze --all\n\nautoflake==0.6.6\n  - pyflakes==0.8.1\nautopep8==1.1.1\n  - pep8==1.5.7\nflake8==2.2.4\n  - pyflakes==0.8.1\n  - pep8==1.5.7\n  - mccabe==0.2.1\ngraphviz==0.4.3\nhacking==0.10.1\n  - pyflakes==0.8.1\n  - six==1.9.0\n  - flake8==2.2.4\n    - pyflakes==0.8.1\n    - pep8==1.5.7\n    - mccabe==0.2.1\n  - pep8==1.5.7\n  - mccabe==0.2.1\n  - pbr==0.10.8\n    - pip\nisort==3.9.6\n  - pies==2.6.3\n  - natsort==3.5.6\nmatplotlib==1.4.3\n  - nose==1.3.6\n  - python-dateutil==2.4.2\n    - six==1.9.0\n  - pyparsing==2.0.3\n  - six==1.9.0\n  - pytz==2015.2\n  - numpy==1.9.2\nmccabe==0.2.1\nnatsort==3.5.6\nnose==1.3.6\nnumpy==1.9.2\npandas==0.16.0\n  - pytz==2015.2\n  - python-dateutil==2.4.2\n    - six==1.9.0\n  - numpy==1.9.2\npbr==0.10.8\n  - pip\npep8==1.5.7\npies==2.6.3\npy==1.4.26\npyflakes==0.8.1\npyparsing==2.0.3\npytest==2.7.0\n  - py==1.4.26\npython-dateutil==2.4.2\n  - six==1.9.0\npytz==2015.2\nscipy==0.15.1\nsix==1.9.0\nTheano==0.7.0\n  - numpy==1.9.2\n  - scipy==0.15.1\ntox==1.9.2\n  - virtualenv==12.1.1\n  - py==1.4.26\nvirtualenv==12.1.1\n\n\n\u30b0\u30e9\u30d5\u5316\u3057\u3066\u307f\u308b\u3002\ngraphviz \u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u3002\n\u4ee5\u4e0b\u306f pipdeptree \u306e\u51fa\u529b\u3092\u6a19\u6e96\u5165\u529b\u3067\u6e21\u3057\u3001 graphviz \u3067\u30b0\u30e9\u30d5\u5316\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u305f\u3002\n\u4ed6\u306e\u79c1\u306e\u8a18\u4e8b\u3068\u540c\u69d8\u3001 Python 3 \u3092\u4f7f\u7528\u3002\n\ngraphout.py\n# coding: utf-8\nimport re\n\nimport graphviz\n\n\ndef depfile_to_tree(file_like_object):\n    line_pattern = re.compile(r'^(?:(?P<indent>(?:  )*)- )?'\n                              r'(?P<pkg_name>.*?)'\n                              r'(?:==(?P<version>.*?))?\\n$')\n\n    tree = []\n\n    for line in file_like_object:\n        matcher = line_pattern.match(line)\n        indent, pkg_name, version = matcher.group('indent',\n                                                  'pkg_name',\n                                                  'version')\n\n        if indent is None:\n            hierarchy = 0\n        else:\n            hierarchy = int(len(indent) / 2)\n\n        if hierarchy < len(tree):\n            tree = tree[:hierarchy]\n\n        tree.append((pkg_name, version))\n        yield tuple(tree)\n\n\ndef main(pipdeptree_file):\n    packages = set()\n    dependencies = set()\n\n    for package_tree in depfile_to_tree(pipdeptree_file):\n        pkg_name = package_tree[-1][0]\n        packages.add(pkg_name)\n        if len(package_tree) < 2:\n            continue\n        parent, child = package_tree[-2:]\n        dependencies.add((parent[0], child[0], child[1]))\n\n    dot = graphviz.Digraph(comment='My Pip Dependencies')\n    for p in packages:\n        dot.node(p)\n\n    for d in dependencies:\n        dot.edge(*d)\n\n    dot.engine = 'dot'\n    dot.format = 'png'\n    dot.render('dependencies.gv')\n\nif __name__ == '__main__':\n    import sys\n    main(sys.stdin)\n\n\n\n\u4f7f\u3044\u65b9\n$ pipdeptree --nowarn --local-only --freeze --all > dependencies.txt\n$ python graphout.py < dependencies.txt\n\ndependencies.gv \u3068 dependencies.gv.png \u3092\u751f\u6210\u3059\u308b\u3002\n\n\u4f59\u8ac7\npip \u306f\u771f\u306e\u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3092\u3057\u306a\u3044 \u3089\u3057\u3044\u3002\npip-tools (pip-review) \u3084 depsolver \u3092\u4f7f\u3048\u3070\u89e3\u6c7a\u3067\u304d\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n# \u7d50\u679c\n\n-> PyPI \u4e0a\u4f4d 100 \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3084\u3063\u3066\u307f\u305f\u7248: http://qiita.com/kitsuyui/items/a7cc56d476b59ff07f54\n\n\u624b\u5143\u306e\u6a5f\u68b0\u5b66\u7fd2\u7528\u306e virtualenv \u3067\u3053\u3093\u306a\u56f3\u3092\u5f97\u305f\u3002\u4e00\u76ee\u77ad\u7136\u3002\n\n![dependencies.gv.png](https://qiita-image-store.s3.amazonaws.com/0/25886/50b070e8-f6c5-e5df-c122-814deaf10b2a.png)\n\nnumpy \u3068 scipy \u306f\u540c\u3058\u304f\u3089\u3044\u4f9d\u5b58\u3055\u308c\u3066\u308b\u3068\u601d\u3063\u3066\u3044\u305f\u3051\u308c\u3069\u3001\nscipy \u306e\u65b9\u306f\u3042\u307e\u308a\u4f9d\u5b58\u3055\u308c\u3066\u3044\u306a\u3044\u2026\u2026\u3002\n\n\u591a\u304f\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c six \u3092\u4f7f\u3063\u3066 Python 3 \u3068 Python 2 \u3068\u306e\u4e92\u63db\u6027\u3092\u6301\u305f\u305b\u3066\u3044\u308b\u3053\u3068\u306b\u30e1\u30f3\u30c6\u30ca\u306e\u82e6\u52b4\u304c\u6ef2\u307f\u51fa\u3066\u3044\u308b\u3002\n\n\u6b8b\u308a\u306e\u9805\u3067\u306f pip freeze \u3068 pipdeptree \u3001 \u3053\u306e\u56f3\u3092\u51fa\u529b\u3057\u305f\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7b87\u6761\u66f8\u304d\u306b\u3059\u308b\u3002\n\n# pip freeze\n\n```shell-session:\n$ pip freeze -l\n```\n\n\u3059\u308b\u3068\u3001\u73fe\u5728\u306e virtualenv \u5185\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u8868\u793a\u3067\u304d\u308b\u3002\n\u3057\u304b\u3057\u3001\u968e\u5c64\u306f\u306a\u304f\u5168\u3066\u30d5\u30e9\u30c3\u30c8\u306b\u8a18\u8f09\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u305a\u3089\u3063\u3068\u51fa\u3066\u304f\u304d\u3066\u4f9d\u5b58\u95a2\u4fc2\u304c\u308f\u304b\u3089\u306a\u3044\u3002\n\n```\nautoflake==0.6.6\nautopep8==1.1.1\nflake8==2.2.4\ngraphviz==0.4.3\nhacking==0.10.1\nisort==3.9.6\nmatplotlib==1.4.3\nmccabe==0.2.1\nnatsort==3.5.6\nnose==1.3.6\nnumpy==1.9.2\npandas==0.16.0\npbr==0.10.8\npep8==1.5.7\npies==2.6.3\npipdeptree==0.4.2\npy==1.4.26\npyflakes==0.8.1\npyparsing==2.0.3\npytest==2.7.0\npython-dateutil==2.4.2\npytz==2015.2\nscipy==0.15.1\nsix==1.9.0\nTheano==0.7.0\ntox==1.9.2\nvirtualenv==12.1.1\n```\n\n# pipdeptree \u3092\u4f7f\u3046\n\n\u4e00\u65b9\u3001 pipdeptree \u3092\u4f7f\u3046\u3068\u4f9d\u5b58\u95a2\u4fc2\u306e\u968e\u5c64\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u8868\u793a\u3067\u304d\u308b\u3002\n\n```shell-session:\n$ pipdeptree --nowarn --local-only --freeze --all\n```\n\n```\nautoflake==0.6.6\n  - pyflakes==0.8.1\nautopep8==1.1.1\n  - pep8==1.5.7\nflake8==2.2.4\n  - pyflakes==0.8.1\n  - pep8==1.5.7\n  - mccabe==0.2.1\ngraphviz==0.4.3\nhacking==0.10.1\n  - pyflakes==0.8.1\n  - six==1.9.0\n  - flake8==2.2.4\n    - pyflakes==0.8.1\n    - pep8==1.5.7\n    - mccabe==0.2.1\n  - pep8==1.5.7\n  - mccabe==0.2.1\n  - pbr==0.10.8\n    - pip\nisort==3.9.6\n  - pies==2.6.3\n  - natsort==3.5.6\nmatplotlib==1.4.3\n  - nose==1.3.6\n  - python-dateutil==2.4.2\n    - six==1.9.0\n  - pyparsing==2.0.3\n  - six==1.9.0\n  - pytz==2015.2\n  - numpy==1.9.2\nmccabe==0.2.1\nnatsort==3.5.6\nnose==1.3.6\nnumpy==1.9.2\npandas==0.16.0\n  - pytz==2015.2\n  - python-dateutil==2.4.2\n    - six==1.9.0\n  - numpy==1.9.2\npbr==0.10.8\n  - pip\npep8==1.5.7\npies==2.6.3\npy==1.4.26\npyflakes==0.8.1\npyparsing==2.0.3\npytest==2.7.0\n  - py==1.4.26\npython-dateutil==2.4.2\n  - six==1.9.0\npytz==2015.2\nscipy==0.15.1\nsix==1.9.0\nTheano==0.7.0\n  - numpy==1.9.2\n  - scipy==0.15.1\ntox==1.9.2\n  - virtualenv==12.1.1\n  - py==1.4.26\nvirtualenv==12.1.1\n```\n\n# \u30b0\u30e9\u30d5\u5316\u3057\u3066\u307f\u308b\u3002\n\ngraphviz \u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u3002\n\u4ee5\u4e0b\u306f pipdeptree \u306e\u51fa\u529b\u3092\u6a19\u6e96\u5165\u529b\u3067\u6e21\u3057\u3001 graphviz \u3067\u30b0\u30e9\u30d5\u5316\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u305f\u3002\n\u4ed6\u306e\u79c1\u306e\u8a18\u4e8b\u3068\u540c\u69d8\u3001 Python 3 \u3092\u4f7f\u7528\u3002\n\n```py3:graphout.py\n# coding: utf-8\nimport re\n\nimport graphviz\n\n\ndef depfile_to_tree(file_like_object):\n    line_pattern = re.compile(r'^(?:(?P<indent>(?:  )*)- )?'\n                              r'(?P<pkg_name>.*?)'\n                              r'(?:==(?P<version>.*?))?\\n$')\n\n    tree = []\n\n    for line in file_like_object:\n        matcher = line_pattern.match(line)\n        indent, pkg_name, version = matcher.group('indent',\n                                                  'pkg_name',\n                                                  'version')\n\n        if indent is None:\n            hierarchy = 0\n        else:\n            hierarchy = int(len(indent) / 2)\n\n        if hierarchy < len(tree):\n            tree = tree[:hierarchy]\n\n        tree.append((pkg_name, version))\n        yield tuple(tree)\n\n\ndef main(pipdeptree_file):\n    packages = set()\n    dependencies = set()\n\n    for package_tree in depfile_to_tree(pipdeptree_file):\n        pkg_name = package_tree[-1][0]\n        packages.add(pkg_name)\n        if len(package_tree) < 2:\n            continue\n        parent, child = package_tree[-2:]\n        dependencies.add((parent[0], child[0], child[1]))\n\n    dot = graphviz.Digraph(comment='My Pip Dependencies')\n    for p in packages:\n        dot.node(p)\n\n    for d in dependencies:\n        dot.edge(*d)\n\n    dot.engine = 'dot'\n    dot.format = 'png'\n    dot.render('dependencies.gv')\n\nif __name__ == '__main__':\n    import sys\n    main(sys.stdin)\n```\n\n## \u4f7f\u3044\u65b9\n\n```shell-session:\n$ pipdeptree --nowarn --local-only --freeze --all > dependencies.txt\n$ python graphout.py < dependencies.txt\n```\n\ndependencies.gv \u3068 dependencies.gv.png \u3092\u751f\u6210\u3059\u308b\u3002\n\n# \u4f59\u8ac7\n\n[pip \u306f\u771f\u306e\u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3092\u3057\u306a\u3044](https://github.com/pypa/pip/issues/988) \u3089\u3057\u3044\u3002\n[pip-tools](https://github.com/nvie/pip-tools) (pip-review) \u3084 [depsolver](https://github.com/enthought/depsolver) \u3092\u4f7f\u3048\u3070\u89e3\u6c7a\u3067\u304d\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n"}