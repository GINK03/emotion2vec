{"context": " More than 1 year has passed since last update.NetOpsCoding Advent Calendar 2015 \u306e 2015/12/15 \u5206\u30a8\u30f3\u30c8\u30ea\u3067\u3059\u3002\nAnsible Dynamic Inventory \u3067\u691c\u7d22\u3057\u3066\u3053\u308c\u306b\u3076\u3064\u304b\u3063\u305f\u4eba\u3001\u3054\u3081\u3093\u306a\u3055\u3044\u3002\u305d\u3053\u306f\u30aa\u30de\u30b1\u7a0b\u5ea6\u3067\u3059\u3002\n\n\u6982\u8981\n\n\u672c\u9805\u3067\u3084\u308b\u3053\u3068\n\nNmap \u3068 SNMP \u3092 ruby \u3067\u64cd\u4f5c\u3057\u3066\u3001\u624b\u3063\u53d6\u308a\u65e9\u304f NW \u6a5f\u5668\u306e\u69cb\u6210\u60c5\u5831\u3092\u53d6\u5f97\uff5e JSON \u5f62\u5f0f\u3067\u5410\u304d\u51fa\u3059\n\n\n\u6700\u5f8c\u306b\u66f8\u3044\u3066\u3044\u308b\u304c\u3001\u81ea\u524d\u3067\u66f8\u304b\u306a\u304f\u3066\u3082 OSS \u3067\u540c\u3058\u3053\u3068\u306f\u51fa\u6765\u308b\u3082\u306e\u306f\u3042\u308b\nNmap \u306e ruby \u7248\u30e9\u30a4\u30d6\u30e9\u30ea\u7d39\u4ecb\n\n\n\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u3092\u69cb\u6210\u60c5\u5831\u30de\u30b9\u30bf\u3068\u307f\u306a\u3057\u3066\u3001Ansible \u306e dynamic inventory \u3068\u9023\u643a\u3059\u308b\n\n\n\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\n\n\u4eee\u60f3\u30de\u30b7\u30f3\u306e\u69cb\u6210\u7ba1\u7406\u30bd\u30d5\u30c8\u306f\u5272\u3068\u3042\u308b\u3051\u308c\u3069\u3001\u7269\u7406\u542b\u3081\u305f NW \u6a5f\u5668\u3082\u7d71\u5408\u7684\u306b\u2026\u3068\u306a\u308b\u3068\u9078\u629e\u80a2\u306f\u5c11\u306a\u3044\u2026\nNmap \u306e fingerprint (OS\u691c\u51fa)\u307f\u305f\u3044\u306a\u3053\u3068\u3082 NW \u6a5f\u5668\u76f8\u624b\u306b\u9ad8\u7cbe\u5ea6\u3067\u3084\u308a\u305f\u3044\n\u8272\u3005\u306a\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067 hosts \u30d5\u30a1\u30a4\u30eb\u7684\u306a\u7570\u306a\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u6c42\u3081\u3066\u304f\u308b\u304c\u3001\u624b\u3063\u53d6\u308a\u65e9\u304f\u751f\u6210\u3057\u305f\u3044\n\u5927\u8888\u88df\u306a\u4ed5\u7d44\u307f\u306f\u4f7f\u3044\u305f\u304f\u306a\u3044\n2015/11/19 \u306b Nmap 7.0 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u306e\u3067\u4f7f\u308f\u306a\u304d\u3083(\u4f7f\u547d\u611f)\n\n\n\u524d\u6bb5\n\nNmap\n\n\nNmap | \u516c\u5f0f\u30b5\u30a4\u30c8\n\n\n\u8a00\u308f\u305a\u3068\u77e5\u308c\u305f OSS \u30c4\u30fc\u30eb\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\u8d85\u512a\u308c\u3082\u306e\uff01  \n\n\nHost Discovery | \u516c\u5f0f\n\n\u5bfe\u8c61 NW \u3092 ARG \u3067\u98df\u308f\u305b\u305f\u308a\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u7f85\u5217\u3057\u3066\u98df\u308f\u305b\u305f\u308a\n\u51fa\u529b\u306f xml \u30d5\u30a1\u30a4\u30eb\u3084 stdout\n\u3064\u3044\u3067\u306b\u540d\u524d\u89e3\u6c7a(\u9006\u5f15\u304d)\u307e\u3067\u3057\u3066\u304f\u308c\u308b(hosts \u30d5\u30a1\u30a4\u30eb\u3067\u3082 DNS \u30b5\u30fc\u30d0\u3067\u3082 resolve \u8a2d\u5b9a\u306b\u5f93\u3046\u611f\u3058\u3067)\n\n\n\nOS Detection(fingerprint) | \u516c\u5f0f\n\n\u30dd\u30fc\u30c8\u30b9\u30ad\u30e3\u30f3\u306e\u7d50\u679c\u306a\u3069\u304b\u3089\u3001\u5bfe\u8c61\u6a5f\u5668\u306e OS \u3092\u985e\u63a8\u3059\u308b\n\n\netc etc\n\n\u307e\u3042 \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30a4\u30f3\u30c8\u30ed \u3092\u898b\u308c\u3070\u5206\u304b\u308b\u3067\u3057\u3087\u3046\u3002\n\u30a4\u30f3\u30d5\u30e9\u5c4b\u3055\u3093\u3060\u3068\u3001\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3084\u3089 iptables \u3084\u3089\u306e\u30c6\u30b9\u30c8\u3084\u3001\u7c21\u6613\u306a\u8106\u5f31\u6027\u8a3a\u65ad\u3067\u4f7f\u3063\u305f\u308a\u3067\u99b4\u67d3\u307f\u6df1\u3044\u306e\u3067\u306f\u3002\n\u76e3\u8996\u30bd\u30d5\u30c8\u306e Discovery \u6a5f\u80fd\u306a\u3093\u304b\u3067\u3082\u3001\u5185\u90e8\u7684\u306b Nmap \u3092\u547c\u3093\u3067\u3044\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\u3000\u3000\n\u57fa\u672c\u7684\u306b\u306f\u30b7\u30a7\u30eb\u304b\u3089\u6271\u3046\u306e\u3067\u3059\u304c\u3001GUI\u3000\u30c4\u30fc\u30eb\u3067\u3042\u308bZenmap\u3082\u3042\u308a\u307e\u3059\u3002  \n\nruby-nmap\n\nsophsec/ruby-nmap | github\n\n\u4e0a\u8a18\u516c\u5f0f\u304b\u3089\u306e\u629c\u7c8b\u2193\n\nA Rubyful interface to the Nmap exploration tool and security / port scanner.\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b Nmap \u306e ruby \u7248\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002(\u4f5c\u8005\u306f\u7570\u306a\u308b\u3082\u306e\u306e\u3001\u540c\u3058\u3088\u3046\u306a\u6a5f\u80fd\u3092\u6301\u3064 Python \u7248\u3084 Perl \u7248\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u5b58\u5728\u3059\u308b)  \n\nHost Discovery \u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u7fa4\u3092\u5206\u304b\u308a\u3084\u3059\u3044\u8868\u73fe\u3067\u66f8\u3051\u308b\n\n\nCLI \u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306f ruby-nmap/lib/nmap/task.rb \u3092\u898b\u308b\u306e\u304c\u624b\u3063\u53d6\u308a\u65e9\u3044\n\n\nHost Discovery \u3067\u751f\u6210\u3055\u308c\u305f xml \u3092\u30d1\u30fc\u30b9\n\n\nxml \u306e\u30d1\u30fc\u30b9\u3092\u81ea\u524d\u3067\u3084\u3089\u306a\u304f\u3066\u6e08\u3080\u3063\u3066\u3060\u3051\u3067\u3001\u5b09\u3057\u304f\u306a\u3044\u3067\u3059\u304b\u3002\u50d5\u306f\u5b09\u3057\u3044\u3002\n\n\n\n\u516c\u5f0f\u306e Examples \u3092\u898b\u308b\u3068\u4e00\u76ee\u77ad\u7136\u3067\u3057\u3087\u3046\u3002\n\nRuby SNMP\n\nRuby SNMP | \u516c\u5f0f\u30b5\u30a4\u30c8\n\nSNMP \u3092\u6271\u3048\u308b ruby \u7248\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002(\u96d1)\n\u5272\u3068\u65e5\u672c\u8a9e\u8a18\u4e8b\u3082\u591a\u3044\u3057\u3001\u30e1\u30b8\u30e3\u30fc\u306a\u3084\u3064\u3067\u3057\u3087\u3046\u3002\n\nAnsible Dynamic Inventory\n\n\nDynamic Inventory | Ansible Documentation\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\n\n\nansible/contrib/inventory | github\n\nAnsible \u672c\u4f53\u306b\u4ed8\u5c5e\u3057\u3066\u304f\u308b\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u7fa4(\u4ee5\u4e0b\u306f\u4f8b)\n\n\nOpenStack\nZabbix\nProxmox\nAmazon EC2\nVMware\nssh_config\netc etc\n\n\n\n\n\nAnsible meetuptokyo 2015 Dynamic Inventory | SlideShare\n\n\u30d7\u30ed\u306e Ansibler \u306b\u3088\u308b\u5206\u304b\u308a\u6613\u3044\u89e3\u8aac\u8cc7\u6599\n\n\n\n\u4ed6\u306e\u5834\u6240\u306b\u69cb\u6210\u7ba1\u7406\u30de\u30b9\u30bf\u304c\u3042\u308a\u3001Ansible \u306e hosts \u30d5\u30a1\u30a4\u30eb\u3092\u9759\u7684\u306b\u66f8\u304f\u3068\u4e8c\u91cd\u7ba1\u7406\u306b\u306a\u308b\u3088\u3046\u306a\u74b0\u5883\u3067\u3001\u69cb\u6210\u7ba1\u7406\u30de\u30b9\u30bf\u304b\u3089 hosts \u60c5\u5831\u3092\u3068\u3063\u3066\u304f\u308b\u2026\u3068\u3044\u3046\u6a5f\u80fd\u3002  \n\nDiscovery \u74b0\u5883\u6e96\u5099\n\nDiscovery \u30b5\u30fc\u30d0\u74b0\u5883\u60c5\u5831\nDiscovery \u3092\u52d5\u304b\u3059\u30b5\u30fc\u30d0\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n\u69cb\u6210\u60c5\u5831\n\n$ cat /etc/lsb-release\nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=14.04\nDISTRIB_CODENAME=trusty\nDISTRIB_DESCRIPTION=\"Ubuntu 14.04.3 LTS\"\n\n$ ruby -v\nruby 2.2.3p173 (2015-08-18 revision 51636) [x86_64-linux]\n\n$ gem list\n\n*** LOCAL GEMS ***\n\nbigdecimal (1.2.6)\nbundler (1.10.6)\nio-console (0.4.3)\njson (1.8.1)\nminitest (5.4.3)\npower_assert (0.2.2)\npsych (2.0.8)\nrake (10.4.2)\nrdoc (4.2.0)\ntest-unit (3.0.8)\n\n\n\n\u3042\u3068\u3001\u3053\u306e\u30b5\u30fc\u30d0\u304b\u3089 network reachable \u306a NW \u6a5f\u5668\u3092\u3044\u304f\u3089\u304b\u52d5\u304b\u3057\u3066\u304a\u304d\u307e\u3059\u3002(\u672c\u9805\u3067\u306f\u540c\u4e00\u30bb\u30b0\u30e1\u30f3\u30c8)\n\nNmap 7.0 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u4ee5\u4e0b\u516c\u5f0f\u624b\u9806\u306b\u5f93\u3044\u307e\u3059\u3002\n\nLinux/Unix Compilation and Installation from Source Code | nmap\n\nDownload \u306f\u4ee5\u4e0b\u304b\u3089\u3002\n\nDownload page | nmap\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3044\u3051\u308b\u3067\u3057\u3087\u3046\u3002\n\nNmap\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n$ sudo -E apt-get install libssl-dev\n$ cd /var/tmp/\n$ wget https://nmap.org/dist/nmap-7.00.tar.bz2\n$ bzip2 -cd nmap-7.00.tar.bz2 | tar xvf -\n\n$ ls -al\ntotal 8724\ndrwxrwxrwt  3 root  root     4096 Dec  5 14:38 .\ndrwxr-xr-x 11 root  root     4096 Nov  7 17:42 ..\ndrwxr-xr-x 22 kotetsu kotetsu  4096 Nov 20 01:19 nmap-7.00\n-rw-rw-r--  1 kotetsu kotetsu 8918906 Nov 20 05:23 nmap-7.00.tar.bz2\n\n$ cd nmap-7.00/\n$ ./configure\n$ make\n$ sudo -E make install\n\n(\u7565)\n\nNMAP SUCCESSFULLY INSTALLED\n\n$ nmap --version\n\nNmap version 7.00 ( https://nmap.org )\nPlatform: x86_64-unknown-linux-gnu\nCompiled with: nmap-liblua-5.2.3 openssl-1.0.1f nmap-libpcre-7.6 nmap-libpcap-1.7.3 nmap-libdnet-1.12 ipv6\nCompiled without:\nAvailable nsock engines: epoll poll select\n\n\n\n\nruby-nmap / snmp \u306e gem \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u3069\u3061\u3089\u3082 gem install \u4e00\u767a\u3067\u5165\u308a\u307e\u3059\u3002\nruby-nmap \u306f xml \u3092\u6271\u3046\u95a2\u4fc2\u4e0a\u3001\u4f9d\u5b58\u95a2\u4fc2\u306b Nokogiri \u304c\u3042\u308a\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u8e93\u3044\u305f\u3089\u30b0\u30b0\u3063\u3066\u89e3\u6c7a\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u4ee5\u4e0b\u306f bundler \u3092\u4f7f\u3063\u305f\u5834\u5408\u306e\u624b\u9806\u3067\u3059\u3002\n\ngem\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n$ cd\n$ mkdir discovery\n$ cd discovery/\n$ bundle init\nWriting new Gemfile to /home/kotetsu/discovery/Gemfile\n\nGemfile \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\n\n$ cat Gemfile\n# A sample Gemfile\nsource \"https://rubygems.org\"\n\n#\ngem 'ruby-nmap'\ngem `snmp`\n\n\n$ bundle install --path vendor/bundle\n$ cat Gemfile.lock\nGEM\n  remote: https://rubygems.org/\n  specs:\n  mini_portile2 (2.0.0)\n  nokogiri (1.6.7)\n    mini_portile2 (~> 2.0.0.rc2)\n  rprogram (0.3.2)\n  ruby-nmap (0.8.0)\n    nokogiri (~> 1.3)\n    rprogram (~> 0.3)\n  snmp (1.2.0)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  ruby-nmap\n  snmp\n\nBUNDLED WITH\n   1.10.6\n\n\n\n\nNW \u6a5f\u5668\u5074\u306e SNMP \u8a2d\u5b9a\n\u4eca\u56de\u3001OS\u691c\u77e5\u3082\u3069\u304d\u3068\u3057\u3066 SNMP Get \u3067 NW \u6a5f\u5668\u306e sysDescr \u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u6a5f\u7a2e\u4f9d\u5b58\u306a\u304f NW \u6a5f\u5668\u306e OS \u3092\u77e5\u308a\u305f\u3044\u306a\u3089\u3070\u3001\u307e\u3042\u3053\u308c\u3057\u304b\u306a\u3044\u3067\u3057\u3087\u3046\u3001\u3063\u3066\u3053\u3068\u3067\u3002\n\u3042\u3068\u3001\u30e9\u30c3\u30af\u60c5\u5831\u3068\u304b\u3082\u7e8f\u3081\u3066\u53d6\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3068\u826f\u3044\u3088\u306d\u3001\u3063\u3066\u3053\u3068\u3067\u305d\u308c\u306f sysLocation \u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304d\u307e\u3059(\u672c\u9805\u3067\u306f\u5168\u90e8\u4eee\u60f3\u74b0\u5883\u306a\u306e\u3067\u30a2\u30ec\u306a\u611f\u3058\u3067\u3059\u304c)\u3002\n\u4f55\u6a5f\u7a2e\u5206\u304b\u8a2d\u5b9a\u4f8b\u3092\u3002\n\nJUNOS \u4f8b\n\nsnmp description \u3068\u304b\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3068\u3001OS \u60c5\u5831(\u30c7\u30d5\u30a9\u30eb\u30c8\u5024)\u3092\u3068\u308c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u3002\n\nkotetsu@vsrx01> show configuration | display set | match snmp\nset snmp location KotetsuNoteVB\nset snmp community KOTETSU_NW\n\n\n\nArista \u4f8b\n\n\nvEOS-spine001#show run | inc snmp\nsnmp-server location KotetsuNoteVB\nsnmp-server community KOTETSU_NW ro\n\n\n\nVyOS \u4f8b\n\n\nkotetsu@vtep-vyos01:~$ show configuration commands | match snmp\nset service snmp community 'KOTETSU_NW'\nset service snmp location 'KotetsuNoteVB'\n\n\n\nDiscovery \u30b9\u30af\u30ea\u30d7\u30c8\u4f5c\u6210\uff5e\u914d\u7f6e\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u9069\u5f53\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u7528\u610f\u3057\u3066\u3001\n\n$ mkdir scripts\n$ cd scripts/\n\n\n\u5f8c\u8ff0\u306e 3 \u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u672c\u4f53 (discovery_nwdevs.rb)\n\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb(setting_discovery_nwdevs.yml)\nNmap input file (target_nw.txt)\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u672c\u4f53\nruby-nmap \u3068 Ruby SNMP \u3092\u4f7f\u3063\u3066 NW \u6a5f\u5668\u306e\u69cb\u6210\u60c5\u5831\u3092\u53ce\u96c6\u3057\u3066\u3001JSON \u30d5\u30a1\u30a4\u30eb\u306b\u5410\u304d\u51fa\u3059\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\ndiscovery_nwdevs.rb\n\n# encoding: utf-8\n\n#\n# Usage:\n#  bundle exec ruby discovery_nwdevs.rb <setting.yml>\n#\n\nrequire 'nmap/program'\nrequire 'nmap/xml'\nrequire 'snmp'\nrequire 'yaml'\nrequire 'json'\n\n\n#\n# SNMP Get method\n#\ndef snmp_get_system(target_ip, snmp_params)\n  manager = SNMP::Manager.new(\n    :host => target_ip,\n    :port => 161,\n    :version => :SNMPv2c,\n    :community => snmp_params[\"community\"],\n    :timeout => 1,\n    :retries => 1\n  )\n\n  # sysName \u306b\u306f\u30db\u30b9\u30c8\u540d\n  # sysDescr \u306b\u306f\u6a5f\u7a2e\u3084\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\n  # sysLocation \u306f(\u8a2d\u5b9a\u3057\u3066\u3044\u308c\u3070)\u8a2d\u7f6e\u5834\u6240\n  # \u304c\u5165\u3063\u3066\u3044\u308b\u7b48\u306a\u306e\u3067\u3001\u305d\u308c\u3092\u3068\u308b\n  ret = Hash::new\n  ret[:sysname] = manager.get_value(snmp_params[\"oid_sysname\"]).to_s rescue \"\"\n  ret[:sysdesc] = manager.get_value(snmp_params[\"oid_sysdesc\"]).to_s rescue \"\"\n  ret[:syslocation] = manager.get_value(snmp_params[\"oid_syslocation\"]).to_s rescue \"\"\n  manager.close\n\n  return ret\nend\n\n\n\n#\n# main\n#\nbegin\n\n  # \u5916\u51fa\u3057\u3057\u3066\u3044\u308b\u60c5\u5831 YAML \u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30c9\n  params = YAML.load_file(ARGV[0])\n\n  # Nmap \u306e Host Discovery \u3092\u3057\u3066 xml \u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3059\n  # \u30dd\u30fc\u30c8\u30b9\u30ad\u30e3\u30f3\u306f UDP/161 \u306e\u307f\u306b\u9650\u5b9a\u3057\u3066\u3001SNMP Get \u3067\u60c5\u5831\u304c\u53d6\u5f97\u53ef\u80fd\u304b\u3069\u3046\u304b\u3092\u898b\u3066\u304a\u304f\n  # NW \u6a5f\u5668\u306a\u3093\u3066 Nmap \u306e fingerprint \u6a5f\u80fd\u306b\u983c\u308b\u3088\u308a\u306f\u3001SNMP Get \u3067\u898b\u305f\u65b9\u304c\u78ba\u5b9f\u306a\u306e\u3067\u3001fingerprint \u3082\u3057\u306a\u3044\n  Nmap::Program.scan do |nmap|\n    nmap.syn_scan = false\n    nmap.udp_scan = true\n    nmap.service_scan = false\n    nmap.os_fingerprint = false\n\n    nmap.xml = params[\"nmap_params\"][\"xml_file\"]\n    nmap.verbose = true\n\n    nmap.ports = []\n    unless params[\"nmap_params\"][\"scan_udp_ports\"].nil? then\n      params[\"nmap_params\"][\"scan_udp_ports\"].each do |port|\n        nmap.ports << port[\"port\"]\n      end\n    end\n\n    # Discovery \u306e\u5bfe\u8c61\u3068\u3059\u308b NW \u30a2\u30c9\u30ec\u30b9\u3092\u7f85\u5217\u3057\u305f\u30d5\u30a1\u30a4\u30eb\n    nmap.target_file = params[\"nmap_params\"][\"scan_target_files\"][\"targetfile\"]\n  end\n\n\n  #\u3000\u53cd\u5fdc\u304c\u3042\u3063\u305f\u30ce\u30fc\u30c9(up host)\u306e\u60c5\u5831(Hash)\u3092\u683c\u7d0d\n  array_hosts = []\n\n  # Nmap \u306e Host Discovery \u3067\u751f\u6210\u3055\u308c\u305f xml \u30d5\u30a1\u30a4\u30eb\u3092\u8d70\u67fb\n  # \u53cd\u5fdc\u304c\u3042\u3063\u305f\u30ce\u30fc\u30c9(up host)\u3092\u53d6\u5f97\u3057\u3001\n  # UDP/161 \u304c Open \u5224\u5b9a\u3055\u308c\u3066\u3044\u305f\u3089 SNMP \u3067\u8ffd\u52a0\u60c5\u5831\u53d6\u5f97\u3059\u308b\n  Nmap::XML.new(params[\"nmap_params\"][\"xml_file\"]) do |xml|\n    xml.each_up_host do |host|\n      hash_host = {}\n      hash_snmp_info = {}\n\n      hash_host[:ipaddr] = host.ipv4\n      hash_host[:ptr] = host.hostname\n      hash_host[:sysname] = \"\"\n      hash_host[:sysdesc] = \"\"\n      hash_host[:syslocation] = \"\"\n\n      host.each_port do |port|\n        if (port.number == 161) && (port.state == :open) then\n          hash_snmp_info = snmp_get_system(host.ipv4, params[\"snmp_params\"])\n          unless hash_snmp_info.nil? then\n            hash_host[:sysname] = hash_snmp_info[:sysname]\n            hash_host[:sysdesc] = hash_snmp_info[:sysdesc]\n            hash_host[:syslocation] = hash_snmp_info[:syslocation]\n          end\n        end\n      end\n      array_hosts << hash_host\n    end\n  end\n\n\n  #\u3000\u53ce\u96c6\u3057\u305f\u30ce\u30fc\u30c9\u306e\u60c5\u5831\u3092 JSON \u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u3067\u5410\u304d\u51fa\u3059\n  unless array_hosts.nil? then\n    dir_result = File.expand_path(params[\"nmap_params\"][\"output_directory\"])\n\n    json_hosts = JSON.pretty_unparse(array_hosts)\n    File.open(\"#{dir_result}/list_nwdev.json\",\"w\") do |file|\n      file.write(json_hosts)\n    end\n  end\n\n\n# \u306a\u3093\u304b\u9069\u5207\u306b\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u3066\u304f\u3060\u3055\u3044\nrescue SNMP::RequestTimeout => e\n  #\nrescue StandardError => e\n  puts e\n  puts e.backtrace\nensure\n  #\nend\n\n\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\u524d\u8ff0\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u98df\u308f\u305b\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\u5225\u74b0\u5883\u3067\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u624b\u3092\u52a0\u3048\u305a\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u66f8\u304d\u63db\u3048\u3066\u4f7f\u3046\u2026\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u8003\u3048\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u2026\u300c\u6a19\u6e96 MIB \u306e OID \u304c\u5909\u308f\u308b\u3063\u3066\u3044\u3046\u306e\u304b\uff1f\u300d\u306a\u3093\u3066\u7a81\u3063\u8fbc\u307f\u306f\u4e0d\u53ef\u3002\n\nsetting_discovery_nwdevs.yml\n\nnmap_params :\n  # nmap \u306e -iL \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6e21\u3059 discovery \u5bfe\u8c61\u3092\u8a18\u8f09\u3057\u305f\u30d5\u30a1\u30a4\u30eb\n  scan_target_files :\n    targetfile : './target_nw.txt'\n  # nmap \u306e -PU -p \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6e21\u3059 UDP \u30dd\u30fc\u30c8\u30b9\u30ad\u30e3\u30f3\u5bfe\u8c61\n  scan_udp_ports :\n    - port : 161\n  # nmap \u306e -oX \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6e21\u3059\u3001Host Discovery \u306e output \u3067\u3042\u308b xml \u30d5\u30a1\u30a4\u30eb\n  xml_file : './scan.xml'\n  # \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u6700\u7d42 output \u3067\u3042\u308b JSON \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(nmap \u306b\u6e21\u3059\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u306f\u306a\u3044\u306e\u3067\u3001nmap_params \u914d\u4e0b\u306b\u3044\u308b\u306e\u306f\u9055\u548c\u611f\u3042\u308a\u307e\u3059\u306d\u2026)\n  output_directory : './'\nsnmp_params :\n  # \u52d5\u304b\u3059\u74b0\u5883\u306e NW \u6a5f\u5668\u306b\u8a2d\u5b9a\u3057\u3066\u3042\u308b SNMP community\n  # \u540c\u3058\u74b0\u5883\u306e community \u306a\u3089\u304d\u3063\u3068\u7d71\u4e00\u3055\u308c\u3066\u3044\u308b\u3060\u308d\u3046\u3001\u3068\u3044\u3046\u524d\u63d0\u306e\u3082\u3068\u2026\n  community       : 'KOTETSU_NW'\n  # SNMP Get \u5bfe\u8c61\u306e OID \u305f\u3061\n  oid_sysname     : '1.3.6.1.2.1.1.5.0'\n  oid_sysdesc     : '1.3.6.1.2.1.1.1.0'\n  oid_syslocation : '1.3.6.1.2.1.1.6.0'\n\n\n\n\nNmap input file\nNmap \u3067 Host Discovery \u3059\u308b\u5bfe\u8c61\u3092\u7f85\u5217\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3002\nruby-nmap \u306f\u5185\u90e8\u7684\u306b nmap \u306b -iL \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u98df\u308f\u305b\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u8a18\u6cd5\u306f Target Specification | Nmap \u516c\u5f0f \u3092\u53c2\u7167\u3002\n\ntarget_nw.txt\n192.168.101.0/24  # mgmt NW\n\n\n\nDiscovery \u5b9f\u884c\uff5e\u51fa\u529b\u78ba\u8a8d\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\n\u3053\u3093\u306a\u611f\u3058\u3067\u3002\nNmap \u3067\u30dd\u30fc\u30c8\u30b9\u30ad\u30e3\u30f3\u3059\u308b\u306b\u306f\u57fa\u672c\u7684\u306b\u306f root \u6a29\u9650\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001sudo \u3057\u3066\u3044\u307e\u3059\u3002(\u4ee5\u4e0b\u516c\u5f0f\u306e\u53c2\u8003\u8cc7\u6599)\n\nPort Scanning Techniques\nRunning nmap as an unprivileged user\n\n\nDiscovery\u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\n\n$ sudo -E bundle exec ruby discovery_nwdevs.rb setting_discovery_nwdevs.yml\n\nStarting Nmap 7.00 ( https://nmap.org ) at 2015-12-05 14:11 JST\nInitiating ARP Ping Scan at 14:11\nScanning 255 hosts [1 port/host]\nCompleted ARP Ping Scan at 14:11, 1.64s elapsed (255 total hosts)\n\nInitiating Parallel DNS resolution of 255 hosts. at 14:11\nCompleted Parallel DNS resolution of 255 hosts. at 14:11, 0.04s elapsed\n\n(\u7565)\n\nRead data files from: /usr/local/bin/../share/nmap\nNmap done: 256 IP addresses (5 hosts up) scanned in 2.14 seconds\n           Raw packets sent: 513 (14.784KB) | Rcvd: 11 (836B)\n\n\n\n\n\u751f\u6210\u30d5\u30a1\u30a4\u30eb\u78ba\u8a8d\n\n\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\nNmap \u304c\u751f\u6210\u3057\u305f scan.xml \u3068\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u751f\u6210\u3057\u305f list_nwdev.json \u304c root:root \u3067\u5410\u304d\u51fa\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\noutput\n\n$ ls -al\ntotal 60\ndrwxrwxr-x 2 kotetsu kotetsu  4096 Dec  6 14:11 .\ndrwxrwxr-x 5 kotetsu kotetsu  4096 Dec  6 14:08 ..\n-rw-r--r-- 1 kotetsu kotetsu  3129 Dec  6 14:04 discovery_nwdevs.rb\n-rw-r--r-- 1 root    root      643 Dec  6 14:11 list_nwdev.json\n-rw-r--r-- 1 root    root    34690 Dec  6 14:11 scan.xml\n-rw-r--r-- 1 kotetsu kotetsu   281 Dec  6 14:01 setting_discovery_nwdevs.yml\n-rw-rw-r-- 1 kotetsu kotetsu    28 Dec  6 11:07 target_nw.txt\n\n\n\n\nNmap \u304c\u751f\u6210\u3057\u305f xml \u30d5\u30a1\u30a4\u30eb\n\u4e2d\u8eab\u3092\u8efd\u304f\u898b\u3066\u3044\u304d\u307e\u3059\u3002(\u3053\u306e\u8fba\u306f\u3001Nmap \u3092\u4f7f\u3063\u3066\u3044\u308b\u4eba\u306a\u3089\u3088\u304f\u77e5\u3063\u3066\u3044\u308b\u306e\u3067\u306f)\n\n\u6700\u521d\u306e\u307b\u3046\u3067\u3001\u5b9f\u969b\u306b ruby-nmap \u304c\u5b9f\u884c\u3057\u305f\u30b3\u30de\u30f3\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u3084 Nmap \u306e\u5b9f\u884c\u30d0\u30fc\u30b8\u30e7\u30f3\u3001\u5b9f\u884c\u6642\u523b\u306a\u3069\u304c\u5206\u304b\u308b\n\n\nscan.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE nmaprun>\n<?xml-stylesheet href=\"file:///usr/local/bin/../share/nmap/nmap.xsl\" type=\"text/xsl\"?>\n<!-- Nmap 7.00 scan initiated Wed Dec  6 14:11:37 2015 as: /usr/local/bin/nmap -sU -oX ./scan.xml -v -p 161 -iL ./target_nw.txt -->\n<nmaprun scanner=\"nmap\" args=\"/usr/local/bin/nmap -sU -oX ./scan.xml -v -p 161 -iL ./target_nw.txt\" start=\"1449637897\" startstr=\"Sat Dec  6 14:11:37 2015\" version=\"7.00\" xmloutputversion=\"1.04\">\n<scaninfo type=\"udp\" protocol=\"udp\" numservices=\"1\" services=\"161\"/>\n<verbose level=\"1\"/>\n<debugging level=\"0\"/>\n<taskbegin task=\"ARP Ping Scan\" time=\"1449378697\"/>\n<taskend task=\"ARP Ping Scan\" time=\"1449378699\" extrainfo=\"255 total hosts\"/>\n<taskbegin task=\"Parallel DNS resolution of 255 hosts.\" time=\"1449378699\"/>\n<taskend task=\"Parallel DNS resolution of 255 hosts.\" time=\"1449378699\"/>\n\n\n\n\nDown \u3057\u3066\u3044\u308b\u30db\u30b9\u30c8\u306e\u60c5\u5831\u304c\u7d9a\u304f\n\n\nscan.xml\n\n<host><status state=\"down\" reason=\"no-response\" reason_ttl=\"0\"/>\n<address addr=\"192.168.101.3\" addrtype=\"ipv4\"/>\n</host>\n<host><status state=\"down\" reason=\"no-response\" reason_ttl=\"0\"/>\n<address addr=\"192.168.101.4\" addrtype=\"ipv4\"/>\n</host>\n\n\n\n\nUp \u3057\u3066\u3044\u308b\u30db\u30b9\u30c8\u306e\u60c5\u5831\u304c\u7d9a\u304f\n\n\nscan.xml\n\n<host starttime=\"1449378697\" endtime=\"1449378699\"><status state=\"up\" reason=\"arp-response\" reason_ttl=\"0\"/>\n<address addr=\"192.168.101.30\" addrtype=\"ipv4\"/>\n<address addr=\"52:54:00:76:24:2C\" addrtype=\"mac\" vendor=\"QEMU virtual NIC\"/>\n<hostnames>\n<hostname name=\"vsrx01\" type=\"PTR\"/>\n</hostnames>\n<ports><port protocol=\"udp\" portid=\"161\"><state state=\"open\" reason=\"udp-response\" reason_ttl=\"64\"/><service name=\"snmp\" method=\"table\" conf=\"3\"/></port>\n</ports>\n<times srtt=\"24054\" rttvar=\"34787\" to=\"163202\"/>\n</host>\n\n\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u751f\u6210\u3057\u305f JSON \u30d5\u30a1\u30a4\u30eb\n\nNmap \u304c\u540d\u524d\u89e3\u6c7a\u51fa\u6765\u305f\u3082\u306e(\u4ee5\u4e0b\u4f8b\u3067\u306f 192.168.101.30 \u306e\u307f\u540d\u524d\u767b\u9332\u3057\u3066\u3042\u3063\u305f)\u306f xml \u306e hostname \u3092 ptr \u306b\u683c\u7d0d\n\nsysname \u3068 sysdesc \u3068 syslocation \u306f SNMP Get \u3067\u53d6\u5f97\u3057\u305f\u60c5\u5831\nNmap \u3067 UDP 161 \u304c Open \u3057\u3066\u3044\u306a\u3044\u3068\u5224\u65ad\u3057\u305f 192.168.101.172 \u306b\u95a2\u3057\u3066\u306f\u3001\u307b\u3068\u3093\u3069\u60c5\u5831\u306f\u53d6\u5f97\u3067\u304d\u3066\u3044\u306a\u3044\n\n\n\u307e\u3042\u3001\u305d\u306e IP \u30a2\u30c9\u30ec\u30b9\u304c\u4f55\u3089\u304b\u306e\u6a5f\u5668\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u304f\u3089\u3044\n\n\n\n\nlist_nwdev.json\n\n[\n  {\n    \"ipaddr\": \"192.168.101.30\",\n    \"ptr\": \"vsrx01\",\n    \"sysname\": \"vsrx01\",\n    \"sysdesc\": \"Juniper Networks, Inc. vsrx internet router, kernel JUNOS 15.1X49-D15.4, Build date: 2015-07-31 03:30:01 UTC Copyright (c) 1996-2015 Juniper Networks, Inc.\",\n    \"syslocation\": \"KotetsuNoteVB\"\n  },\n  {\n    \"ipaddr\": \"192.168.101.50\",\n    \"ptr\": null,\n    \"sysname\": \"vEOS-spine001\",\n    \"sysdesc\": \"Arista Networks EOS version 4.14.8M running on an Arista Networks vEOS\",\n    \"syslocation\": \"KotetsuNoteVB\"\n  },\n  {\n    \"ipaddr\": \"192.168.101.52\",\n    \"ptr\": null,\n    \"sysname\": \"vEOS-leaf001\",\n    \"sysdesc\": \"Arista Networks EOS version 4.14.8M running on an Arista Networks vEOS\",\n    \"syslocation\": \"KotetsuNoteVB\"\n  },\n  {\n    \"ipaddr\": \"192.168.101.71\",\n    \"ptr\": null,\n    \"sysname\": \"vtep-vyos01\",\n    \"sysdesc\": \"Vyatta VyOS 1.1.1\",\n    \"syslocation\": \"KotetsuNoteVB\"\n  },\n  {\n    \"ipaddr\": \"192.168.101.172\",\n    \"ptr\": null,\n    \"sysname\": \"\",\n    \"sysdesc\": \"\",\n    \"syslocation\": \"\"\n  }\n]\n\n\n\n\n\u9023\u643a\u4f8b \uff5eAnsible \u306e Dynamic Inventory\uff5e\n\n\u3084\u308b\u3053\u3068\n\u5148\u306b\u751f\u6210\u3057\u305f JSON \u30d5\u30a1\u30a4\u30eb\u3092\u300c\u69cb\u6210\u60c5\u5831\u30de\u30b9\u30bf\u300d\u3068\u307f\u306a\u3057\u3066\u9023\u643a\u3059\u308b\u4f8b\u3068\u3057\u3066 Ansible \u306e Dynamic Inventory \u3067\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\nNW \u6a5f\u5668\u306e\u4e2d\u304b\u3089 Arista \u3060\u3051\u3092\u629c\u304d\u51fa\u3057\u3066\u3001Arista \u7528\u306e Role \u3092\u4f7f\u3063\u305f Playbook \u3092\u5b9f\u884c\u3059\u308b\u3067\u3059\u3002\n\n\u74b0\u5883\n\u6a2a\u7740\u3057\u3066\u3001\u6614(2014/12)\u4f5c\u3063\u305f\u4ee5\u4e0b\u74b0\u5883\u3092\u6d41\u7528\u3057\u3066 Arista \u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u4f7f\u3044\u307e\u3059\u3002  \n\n\nArista \u306e REST API \u3092 ruby \u3084 Ansible \u3067\u7a81\u3044\u3066\u307f\u3088\u3046 | Qiita\n\nOS: Ubuntu-14.04.01-server-amd64\nansible: 1.8.2\nansible-eos: v0.1.2\n\n\n\n2015/12 \u73fe\u5728\u3060\u3068\u3001Ansible \u306f 2.1.0 \u3068\u304b\u307e\u3067\u51fa\u3066\u3044\u308b\u3057\u3001ansible-eos (Arista \u7528\u306e Role)\u3082\u304b\u306a\u308a\u66f4\u65b0\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u304c\u2026\u3002\n\nDynamic Inventory \u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\n\u5148\u306b\u4f5c\u3063\u305f JSON \u30d5\u30a1\u30a4\u30eb\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3001\u6700\u4f4e\u9650\u52d5\u304f\u3060\u3051\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\u3000\u3000\n\u8981\u3059\u308b\u306b sysDescr \u3067\u6a5f\u7a2e\u3092\u4ed5\u5206\u3051\u3066\u3044\u308b\u3060\u3051\u3002\n\ndynamic_nwdevs.rb\n\n#! /usr/bin/env ruby\n# encoding: utf-8\n\nrequire 'json'\n\nFILE_INVENTORY = '/home/kotetsu/discovery/scripts/list_nwdev.json'\n\n\nbegin\n\n  if (ARGV[0] && ARGV[0] == '--list') then\n    ret = {}\n\n    list_junos = []\n    list_arista = []\n    list_vyos = []\n\n    JSON.load(File.open(FILE_INVENTORY).read).each do |nwdev|\n      case nwdev[\"sysdesc\"]\n      when /^Juniper.*JUNOS.*/\n        list_junos << nwdev[\"ipaddr\"]\n      when /^Arista Networks EOS.*/\n        list_arista << nwdev[\"ipaddr\"]\n      when /^Vyatta VyOS/\n        list_vyos << nwdev[\"ipaddr\"]\n      else\n        #\n      end\n    end\n\n    ret[\"junos_all\"] = list_junos.dup unless list_junos.size == 0\n    ret[\"arista_all\"] = list_arista.dup unless list_arista.size == 0\n    ret[\"vyos_all\"] = list_vyos.dup unless list_vyos.size == 0\n    puts JSON.pretty_unparse(ret)\n\n  elsif (ARGV[1] && ARGV[0] == \"--host\") then\n    JSON.load(File.open(FILE_INVENTORY).read).each do |nwdev|\n      if (\n        nwdev[\"sysname\"] =~ Regexp.new(ARGV[1]) ||\n        nwdev[\"ipaddr\"] =~ Regexp.new(ARGV[1]) ||\n        nwdev[\"ptr\"] =~ Regexp.new(ARGV[1])\n      ) then\n        puts JSON.pretty_unparse(nwdev)\n      end\n    end\n  end\n\n\nrescue Exception => e\n  puts e\n  puts e.backtrace\nend\n\n\n\u516c\u5f0f\u306e\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306f Python \u304c\u5727\u5012\u7684\u306b\u591a\u3044\u3067\u3059\u304c\u3001\u3088\u304f\u3042\u308b\u300c\u6240\u5b9a\u306e\u5f15\u6570\u3092\u3064\u3051\u3066\u5b9f\u884c\u3057\u305f\u6642\u306b\u3001\u6240\u5b9a\u306eOutput\u3092\u8fd4\u305b\u3070\u826f\u3044\u300d\u7cfb\u306e\u3084\u3064\u306a\u306e\u3067\u3001\u8a00\u8a9e\u306f\u4f55\u3067\u66f8\u3044\u3066\u3082\u826f\u3044\u3067\u3059\u3002(\u3053\u306e\u7a0b\u5ea6\u306a\u3089\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3082)\n\u3067\u3001\u3053\u308c\u3092\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u611f\u3058\u3002\n\ndynamic_nwdevs.rb\u306eOutput\n$ ./dynamic_nwdevs.rb --list\n{\n  \"junos_all\": [\n    \"192.168.101.30\"\n  ],\n  \"arista_all\": [\n    \"192.168.101.50\",\n    \"192.168.101.52\"\n  ],\n  \"vyos_all\": [\n    \"192.168.101.71\"\n  ]\n}\n\n$ ./dynamic_nwdevs.rb --host vEOS-spine001\n{\n  \"ipaddr\": \"192.168.101.50\",\n  \"ptr\": null,\n  \"sysname\": \"vEOS-spine001\",\n  \"sysdesc\": \"Arista Networks EOS version 4.14.8M running on an Arista Networks vEOS\",\n  \"syslocation\": \"KotetsuNoteVB\"\n}\n\n\n\n_meta \u3092\u51fa\u3055\u306a\u3044\u306e\u3067\u3001\u7121\u99c4\u306a\u51e6\u7406\u304c\u8d70\u308b\u306e\u3067\u3059\u304c\u306d\u3002\u307e\u3042\u30ed\u30fc\u30ab\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u8aad\u3093\u3067\u3044\u308b\u30c6\u30b9\u30c8\u74b0\u5883\u306a\u306e\u3067\u2026(\uff93\uff7a\uff9e\uff93\uff7a\uff9e)\n\u305d\u306e\u8fba\u306f Ansible meetuptokyo 2015 Dynamic Inventory | SlideShare \u306e\u30b9\u30e9\u30a4\u30c9 10\uff5e12 \u3092\u898b\u307e\u3057\u3087\u3046\u3002\n\nArista \u7528\u306e\u30b5\u30f3\u30d7\u30eb Playbook\n\n\nrole \u3067 Arista \u516c\u5f0f\u306e Role \u3092\u547c\u3093\u3067\u3044\u308b\u5b8c\u5168\u306b Arista \u5c02\u7528\u306e Playbook\n hosts \u3067\u306f\u5148\u306e ./dynamic_nwdevs.rb --list \u3067\u51fa\u529b\u3055\u308c\u305f arista_all \u3068\u3044\u3046 Arista \u5168\u53f0\u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\n\nshow version \u3057\u3066 stdout \u3059\u308b\u3060\u3051\n\n\nplaybook_sample_arista.yml\n\n- name: eos nodes\n  hosts: arista_all\n  gather_facts: no\n  sudo: true\n\n  vars:\n    eapi_username: kotetsu\n    eapi_password: kotetsu\n    eapi_protocol: http\n\n  roles:\n    - role: arista.eos\n\n  tasks:\n    - name: show version\n      action: eos_command\n      args: {\n         commands: [\n           \"show version\"\n         ],\n         eapi_username: \"{{ eapi_username }}\",\n         eapi_password: \"{{ eapi_password }}\",\n         eapi_protocol: \"{{ eapi_protocol }}\"\n      }\n      register: output_version\n\n    - debug: var=output_version\n\n\n\n\nPlaybook \u5b9f\u884c\n\u30ec\u30c3\u30c4\u30b4\u30fc\n(-i \u3067\u547c\u3093\u3067\u3044\u308b\u306e\u304c hosts \u30d5\u30a1\u30a4\u30eb\u3067\u306f\u306a\u304f\u3066\u3001\u5148\u306e dynamic_nwdevs.rb \u306a\u306e\u304c\u30dd\u30a4\u30f3\u30c8)\n\nDynamicInventory\u3067Playbook\u5b9f\u884c\n\n$ ansible-playbook playbook_sample_arista.yml -f 10 -u ansible -i dynamic_nwdevs.rb\n\nPLAY [eos nodes] **************************************************************\n\nTASK: [arista.eos | check if running on eos node] *****************************\nok: [192.168.101.50]\nok: [192.168.101.52]\n\nTASK: [arista.eos | collect eos facts] ****************************************\nok: [192.168.101.50]\nok: [192.168.101.52]\n\nTASK: [arista.eos | include eos variables] ************************************\nok: [192.168.101.50]\nok: [192.168.101.52]\n\nTASK: [arista.eos | check for working directory] ******************************\nok: [192.168.101.52]\nok: [192.168.101.50]\n\nTASK: [arista.eos | create source] ********************************************\nskipping: [192.168.101.52]\nskipping: [192.168.101.50]\n\nTASK: [arista.eos | check if pip is installed] ********************************\nok: [192.168.101.50]\nok: [192.168.101.52]\n\nTASK: [arista.eos | copy pip extension to node] *******************************\nskipping: [192.168.101.50]\nskipping: [192.168.101.52]\n\nTASK: [arista.eos | create tmp config file to load pip] ***********************\nskipping: [192.168.101.50]\nskipping: [192.168.101.52]\n\nTASK: [arista.eos | load pip eos extension] ***********************************\nskipping: [192.168.101.52]\nskipping: [192.168.101.50]\n\nTASK: [arista.eos | copy required libraries to node] **************************\nok: [192.168.101.50] => (item=eapilib-0.1.0.tar.gz)\nok: [192.168.101.52] => (item=eapilib-0.1.0.tar.gz)\n\nTASK: [arista.eos | install required libraries] *******************************\nok: [192.168.101.50] => (item=eapilib-0.1.0.tar.gz)\nok: [192.168.101.52] => (item=eapilib-0.1.0.tar.gz)\n\nTASK: [arista.eos | install jsonrpclib] ***************************************\nskipping: [192.168.101.50]\nskipping: [192.168.101.52]\n\nTASK: [arista.eos | install required libraries and dependencies] **************\nskipping: [192.168.101.50] => (item=eapilib-0.1.0.tar.gz)\nskipping: [192.168.101.52] => (item=eapilib-0.1.0.tar.gz)\n\nTASK: [show version] **********************************************************\nok: [192.168.101.52]\nok: [192.168.101.50]\n\nTASK: [debug var=output_version] **********************************************\nok: [192.168.101.50] => {\n    \"output_version\": {\n        \"changed\": false,\n        \"invocation\": {\n            \"module_args\": \"\",\n            \"module_name\": \"eos_command\"\n        },\n        \"output\": [\n            {\n                \"command\": \"show version\",\n                \"response\": {\n                    \"architecture\": \"i386\",\n                    \"bootupTimestamp\": 1449902847.6,\n                    \"hardwareRevision\": \"\",\n                    \"internalBuildId\": \"a6bbeeb3-95b7-42bc-9721-266f9bff424e\",\n                    \"internalVersion\": \"4.14.8M-2475814.4148M\",\n                    \"memFree\": 20516,\n                    \"memTotal\": 996140,\n                    \"modelName\": \"vEOS\",\n                    \"serialNumber\": \"\",\n                    \"systemMacAddress\": \"08:00:27:31:60:65\",\n                    \"version\": \"4.14.8M\"\n                }\n            }\n        ]\n    }\n}\nok: [192.168.101.52] => {\n    \"output_version\": {\n        \"changed\": false,\n        \"invocation\": {\n            \"module_args\": \"\",\n            \"module_name\": \"eos_command\"\n        },\n        \"output\": [\n            {\n                \"command\": \"show version\",\n                \"response\": {\n                    \"architecture\": \"i386\",\n                    \"bootupTimestamp\": 1449902847.71,\n                    \"hardwareRevision\": \"\",\n                    \"internalBuildId\": \"a6bbeeb3-95b7-42bc-9721-266f9bff424e\",\n                    \"internalVersion\": \"4.14.8M-2475814.4148M\",\n                    \"memFree\": 46872,\n                    \"memTotal\": 996140,\n                    \"modelName\": \"vEOS\",\n                    \"serialNumber\": \"\",\n                    \"systemMacAddress\": \"08:00:27:e2:d0:f4\",\n                    \"version\": \"4.14.8M\"\n                }\n            }\n        ]\n    }\n}\n\nPLAY RECAP ********************************************************************\n192.168.101.50             : ok=10   changed=0    unreachable=0    failed=0\n192.168.101.52             : ok=10   changed=0    unreachable=0    failed=0\n\n\n\nArista \u3060\u3051\u306b\u51e6\u7406\u304c\u8d70\u308a\u307e\u3057\u305f\u3002\n\n\u304a\u3057\u307e\u3044\n\nplus one\n\u4eca\u56de\u306f Discovery \u3068\u306e\u9023\u643a\u4f8b\u3068\u3057\u3066 Ansible \u306e Dynamic Inventory \u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001Discovery \u306f Nmap/SNMP \u3060\u3051\u306e\u8d85\u5358\u7d14\u306a\u4ed5\u7d44\u307f\u306a\u306e\u3067\u3001\u4ed6\u306e\u4ed5\u7d44\u307f\u3068\u306e\u9023\u643a\u3082\u9762\u5012\u306a\u304f\u3044\u3051\u308b\u3093\u3067\u3059\u3088\u306a\u3002\n\u4f8b\u3048\u3070\u3001\u3053\u3093\u306a\u306e\u306f\u3088\u304f\u3084\u3063\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u3053\u3053\u3067\u751f\u6210\u3057\u305f JSON \u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30c9\u3057\u3066\n\n\n\nsysDescr \u3092 case \u3067\u5206\u3051\u3066\u3001\u6a5f\u7a2e\u306b\u5fdc\u3058\u305f\u51e6\u7406\n\n\n\u8a73\u7d30\u306a inventory \u60c5\u5831\u53d6\u5f97(\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3068\u304b\u30e9\u30a4\u30f3\u30ab\u30fc\u30c9/SFP\u69cb\u6210\u3068\u304b)\n\n\nexpect \u3067 show inventory \u3068\u304b netconf \u306e <get-inventory> \u3068\u304b SNMP Get \u3068\u304b\u72ec\u81ea API \u3068\u304b\n\n\n\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u4e8b\u524d\u306b\u30dd\u30fc\u30c8\u30b9\u30ad\u30e3\u30f3\u3067 TCP/830 \u3068\u304b TCP/22 \u3082\u3057\u3066\u304a\u304f\u3068\u304b\n\u305f\u307e\u306b\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3092 CLI \u3067\u3057\u304b\u53d6\u5f97\u3067\u304d\u306a\u3044\u30dd\u30f3\u30b3\u30c4\u7bb1\u304c\u3042\u308b\u3093\u3060\u3088\u306a\u3041\u2026\n\n\n\n\nconfig \u53d6\u5f97 (\u5f8c\u8ff0\u306e rancid \u65b9\u5f0f\u3067\u3082\u3088\u3044)\n\n\ndiscovery \uff5e config \u53d6\u5f97 \uff5e \u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30b3\u30de\u30f3\u30c9\u3082 cron \u3067\u56de\u3057\u3066\u304a\u304f\u3068\u3001\u5897\u3048\u305f\u6a5f\u5668\u304c\u52dd\u624b\u306b\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30fb\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3055\u308c\u308b\n\n\n\u5404\u7a2e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u751f\u6210(\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3092 JSON \u3067\u306a\u304f\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306b\u3059\u308b\u3067\u3082)\n\n\nrancid\nAnsible\n\n\nhosts \u30d5\u30a1\u30a4\u30eb\nDynamic Inventory \u3068\u9023\u643a\n\n\n\n\n\n\n\n\u76e3\u8996\u30bd\u30d5\u30c8(auto discovery \u7684\u306a\u6a5f\u80fd\u304c\u306a\u3044)\n\n\n\u6a5f\u7a2e\u306b\u5fdc\u3058\u305f\u81ea\u524d\u306e plugin \u3092\u6307\u5b9a\u3057\u3066\u2026\u3068\u304b\u3082\u81ea\u52d5\u3067\u3084\u308c\u308b\n\n\n\n\n\u7279\u5b9a\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5bfe\u8c61\u3068\u3057\u305f\n\n\nOS \u30d5\u30a1\u30a4\u30eb\u8ee2\u9001\n\u8a2d\u5b9a\u6492\u304d\n\n\n\n\n\nptr \u304c\u7a7a\u3067 sysname \u3092\u53d6\u5f97\u3067\u304d\u305f\u3082\u306e\u306b\u95a2\u3057\u3066\u3001\u5185\u90e8 DNS \u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u8a2d\u5b9a\u751f\u6210(\uff5e\u8ffd\u52a0)\n\nsysDesc \u3068 sysname \u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u6761\u4ef6\u4ed8\u3051\u3066\u3001\u5f85\u6a5f\u7cfb\u6a5f\u5668\u306e\u307f\u4e91\u3005\n\n\nJSON \u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u305f\u60c5\u5831\u3092 SQL \u306b\u653e\u308a\u8fbc\u3093\u3067\u3001WebUI \u306a\u308a API \u306a\u308a\u3092\u63d0\u4f9b\n\n\n\u524d\u8ff0\u306e\u5185\u5bb9\u3092\u5b9f\u73fe\u3059\u308b\u306e\u306b\u3001\u8e0f\u307f\u53f0\u30b5\u30fc\u30d0\u3084\u76e3\u8996\u30b5\u30fc\u30d0\u304b\u3089\u3082 inventory \u60c5\u5831\u3092\u53d6\u5f97\u3057\u305f\u3044\u3001\u3063\u3066\u601d\u3063\u305f\u308a\n\n\n\u5225\u306b rsync \u3068\u304b\u3067\u6492\u3044\u3066\u3082\u3088\u3044\u304c\n\n\n\u5b9f\u6a5f\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u60c5\u5831\u306b\u306f\u9650\u754c\u304c\u3042\u308b\u3057\u3001\u4eba\u9593\u304c\u5165\u529b\u30fb\u66f4\u65b0\u3057\u305f\u3044\u60c5\u5831\u3082\u3042\u308b\u306e\u3067\u306f(\u5546\u7528\u74b0\u5883\u3060\u3068\u4fdd\u5b88\u671f\u9650\u3068\u304b) \n\u3042\u308a\u3082\u306e\u88fd\u54c1\u306e WebUI \u306f\u5b9f\u904b\u7528\u8981\u4ef6\u3092\u5145\u305f\u3059\u3088\u3046\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u306a\u3044\u304b\u3089\u3001\u81ea\u524d\u3067\u7c21\u6613\u3067\u904b\u7528\u8981\u4ef6\u3092\u5145\u305f\u3059\u3082\u306e\u3092\u7acb\u3066\u305f\u307b\u3046\u304c\u697d\u3001\u3068\u304b\n\n\n\u305d\u3046\u3044\u3046\u601d\u3044\u304b\u3089\u81ea\u524d\u3067\u4f5c\u308a\u8fbc\u307e\u308c\u305f\u793e\u5185\u30b7\u30b9\u30c6\u30e0\u3068\u304b\u306b\u306f\u3001\u6587\u53e5\u305f\u3089\u305f\u3089\u3067\u300c\u3042\u308a\u3082\u306e\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u4f7f\u3048\u3088\u300d\u3068\u304b\u8a00\u3046\u306e\u306b\u306d\n\n\n\n\n\n\n\u6240\u611f\n\n\u307e\u3042\u3001\u306a\u3093\u3068\u3044\u3046\u304b\u300c\u4f55\u3092\u30de\u30b9\u30bf\u60c5\u5831\u306b\u3057\u3066\u3001\u4ed6\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u3069\u3046\u3044\u3046\u9023\u643a\u3092\u3059\u308b\u304b\u300d\u306f\u74b0\u5883\u6b21\u7b2c\u306a\u306e\u3067\u3001\u3053\u3093\u306a\u65b9\u6cd5\u3082\u3042\u308b\u3088\u3001\u3063\u3066\u3060\u3051\u3067\u3059\u306a\n\u8d85\u30e1\u30b8\u30e3\u30fc\u306a Nmap \u3092\u4f7f\u3063\u305f Inventory \u306e\u751f\u6210\u3001\u306a\u3093\u3066\u306e\u306f\u5272\u3068\u30dd\u30d4\u30e5\u30e9\u30fc\u306a\u624b\u6cd5\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u4f7f\u3048\u3070\u540c\u3058\u3053\u3068+\u30a2\u30eb\u30d5\u30a1\u304c\u51fa\u6765\u307e\u3059(\u3044\u305a\u308c\u3082\u5185\u90e8\u7684\u306b\u306f Nmap \u3092\u4f7f\u3063\u3066\u3044\u308b\u6a21\u69d8)\n\n\n\nOpen-AudIT\n\nJSON, xlsx, pdf \u5f62\u5f0f\u306a\u3069\u3067\u60c5\u5831\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3067\u304d\u308b\u3089\u3057\u3044\n\u672c\u9805\u306e Discovery \u30ec\u30d9\u30eb\u306e\u8a71\u306f\u5168\u90e8\u3067\u304d\u305d\u3046\n\n\n\n\u30ed\u30fc\u30ec\u30d9\u30eb\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea | Zabbix 2.2\n\nSNMP \u9023\u643a\u3067\u304d\u308b\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3063\u3066\u70b9\u3067\u306f\u3001\u7269\u7406 NW \u6a5f\u5668\u3092\u4e00\u5143\u7ba1\u7406\u3059\u308b\u5834\u5408\u306b\u306f\u3001\u3053\u308c\u304c\u30de\u30c3\u30c1\u3059\u308b\u6c17\u304c\u3059\u308b\n\n\n\n\n\u305f\u3060\u307e\u3042\u3001\u3082\u3063\u3068\u624b\u8efd\u306b\u2026\u3068\u304b\u3001\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u306e\u66f8\u5f0f\u3092\u4efb\u610f\u306b\u4f5c\u308a\u305f\u3044(\u4ed6\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067\u4f7f\u3046\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u751f\u6210\u3068\u304b)\u3068\u304b\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3001\u4f7f\u3048\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u306d\n\n\n\u751f\u3067 Nmap \u53e9\u3044\u3066 xml \u3092\u30b5\u30af\u30c3\u3068\u30d1\u30fc\u30b9\u3059\u308c\u3070\u30e9\u30a4\u30d6\u30e9\u30ea\u3055\u3048\u4f7f\u3046\u5fc5\u8981\u306a\u3044\u306e\u3067\u3059\u304c\u2026\n\n\nNmap 7.0 \u306e\u65b0\u6a5f\u80fd\u3092\u4e00\u5207\u89e6\u3063\u3066\u306a\u3044\u3058\u3083\u306d\u3047\u304b\uff01\n\n\n[NetOpsCoding Advent Calendar 2015](http://qiita.com/advent-calendar/2015/netopscoding) \u306e 2015/12/15 \u5206\u30a8\u30f3\u30c8\u30ea\u3067\u3059\u3002\nAnsible Dynamic Inventory \u3067\u691c\u7d22\u3057\u3066\u3053\u308c\u306b\u3076\u3064\u304b\u3063\u305f\u4eba\u3001\u3054\u3081\u3093\u306a\u3055\u3044\u3002\u305d\u3053\u306f\u30aa\u30de\u30b1\u7a0b\u5ea6\u3067\u3059\u3002\n\n\n# \u6982\u8981\n\n## \u672c\u9805\u3067\u3084\u308b\u3053\u3068\n\n- Nmap \u3068 SNMP \u3092 ruby \u3067\u64cd\u4f5c\u3057\u3066\u3001\u624b\u3063\u53d6\u308a\u65e9\u304f NW \u6a5f\u5668\u306e\u69cb\u6210\u60c5\u5831\u3092\u53d6\u5f97\uff5e JSON \u5f62\u5f0f\u3067\u5410\u304d\u51fa\u3059\n    - \u6700\u5f8c\u306b\u66f8\u3044\u3066\u3044\u308b\u304c\u3001\u81ea\u524d\u3067\u66f8\u304b\u306a\u304f\u3066\u3082 OSS \u3067\u540c\u3058\u3053\u3068\u306f\u51fa\u6765\u308b\u3082\u306e\u306f\u3042\u308b\n    - Nmap \u306e ruby \u7248\u30e9\u30a4\u30d6\u30e9\u30ea\u7d39\u4ecb\n- \u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u3092\u69cb\u6210\u60c5\u5831\u30de\u30b9\u30bf\u3068\u307f\u306a\u3057\u3066\u3001Ansible \u306e dynamic inventory \u3068\u9023\u643a\u3059\u308b\n\n\n## \u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\n\n- \u4eee\u60f3\u30de\u30b7\u30f3\u306e\u69cb\u6210\u7ba1\u7406\u30bd\u30d5\u30c8\u306f\u5272\u3068\u3042\u308b\u3051\u308c\u3069\u3001\u7269\u7406\u542b\u3081\u305f NW \u6a5f\u5668\u3082\u7d71\u5408\u7684\u306b\u2026\u3068\u306a\u308b\u3068\u9078\u629e\u80a2\u306f\u5c11\u306a\u3044\u2026\n- Nmap \u306e fingerprint (OS\u691c\u51fa)\u307f\u305f\u3044\u306a\u3053\u3068\u3082 NW \u6a5f\u5668\u76f8\u624b\u306b\u9ad8\u7cbe\u5ea6\u3067\u3084\u308a\u305f\u3044\n- \u8272\u3005\u306a\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067 hosts \u30d5\u30a1\u30a4\u30eb\u7684\u306a\u7570\u306a\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u6c42\u3081\u3066\u304f\u308b\u304c\u3001\u624b\u3063\u53d6\u308a\u65e9\u304f\u751f\u6210\u3057\u305f\u3044\n- \u5927\u8888\u88df\u306a\u4ed5\u7d44\u307f\u306f\u4f7f\u3044\u305f\u304f\u306a\u3044\n- 2015/11/19 \u306b [Nmap 7.0 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f](https://nmap.org/7/)\u306e\u3067\u4f7f\u308f\u306a\u304d\u3083(\u4f7f\u547d\u611f)\n\n\n\n# \u524d\u6bb5\n\n## Nmap\n\n- [Nmap | \u516c\u5f0f\u30b5\u30a4\u30c8](https://nmap.org/)  \n\n\n\u8a00\u308f\u305a\u3068\u77e5\u308c\u305f OSS \u30c4\u30fc\u30eb\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\u8d85\u512a\u308c\u3082\u306e\uff01  \n\n- [Host Discovery | \u516c\u5f0f](https://nmap.org/man/jp/man-host-discovery.html)\n    - \u5bfe\u8c61 NW \u3092 ARG \u3067\u98df\u308f\u305b\u305f\u308a\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u7f85\u5217\u3057\u3066\u98df\u308f\u305b\u305f\u308a\n    - \u51fa\u529b\u306f xml \u30d5\u30a1\u30a4\u30eb\u3084 stdout\n    - \u3064\u3044\u3067\u306b\u540d\u524d\u89e3\u6c7a(\u9006\u5f15\u304d)\u307e\u3067\u3057\u3066\u304f\u308c\u308b(hosts \u30d5\u30a1\u30a4\u30eb\u3067\u3082 DNS \u30b5\u30fc\u30d0\u3067\u3082 resolve \u8a2d\u5b9a\u306b\u5f93\u3046\u611f\u3058\u3067)\n- [OS Detection(fingerprint) | \u516c\u5f0f](https://nmap.org/man/jp/man-os-detection.html)\n    - \u30dd\u30fc\u30c8\u30b9\u30ad\u30e3\u30f3\u306e\u7d50\u679c\u306a\u3069\u304b\u3089\u3001\u5bfe\u8c61\u6a5f\u5668\u306e OS \u3092\u985e\u63a8\u3059\u308b\n- etc etc\n\n\u307e\u3042 [\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30a4\u30f3\u30c8\u30ed](https://nmap.org/man/jp/index.html#man-description) \u3092\u898b\u308c\u3070\u5206\u304b\u308b\u3067\u3057\u3087\u3046\u3002\n\u30a4\u30f3\u30d5\u30e9\u5c4b\u3055\u3093\u3060\u3068\u3001\u30d5\u30a1\u30a4\u30a2\u30a6\u30a9\u30fc\u30eb\u3084\u3089 iptables \u3084\u3089\u306e\u30c6\u30b9\u30c8\u3084\u3001\u7c21\u6613\u306a\u8106\u5f31\u6027\u8a3a\u65ad\u3067\u4f7f\u3063\u305f\u308a\u3067\u99b4\u67d3\u307f\u6df1\u3044\u306e\u3067\u306f\u3002\n\u76e3\u8996\u30bd\u30d5\u30c8\u306e Discovery \u6a5f\u80fd\u306a\u3093\u304b\u3067\u3082\u3001\u5185\u90e8\u7684\u306b Nmap \u3092\u547c\u3093\u3067\u3044\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\u3000\u3000\n\n\u57fa\u672c\u7684\u306b\u306f\u30b7\u30a7\u30eb\u304b\u3089\u6271\u3046\u306e\u3067\u3059\u304c\u3001GUI\u3000\u30c4\u30fc\u30eb\u3067\u3042\u308b[Zenmap](https://nmap.org/zenmap/)\u3082\u3042\u308a\u307e\u3059\u3002  \n\n\n## ruby-nmap\n\n- [sophsec/ruby-nmap | github](https://github.com/sophsec/ruby-nmap)\n\n\u4e0a\u8a18\u516c\u5f0f\u304b\u3089\u306e\u629c\u7c8b\u2193\n\n> A Rubyful interface to the Nmap exploration tool and security / port scanner.\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b Nmap \u306e ruby \u7248\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002(\u4f5c\u8005\u306f\u7570\u306a\u308b\u3082\u306e\u306e\u3001\u540c\u3058\u3088\u3046\u306a\u6a5f\u80fd\u3092\u6301\u3064 Python \u7248\u3084 Perl \u7248\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u5b58\u5728\u3059\u308b)  \n\n- Host Discovery \u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u7fa4\u3092\u5206\u304b\u308a\u3084\u3059\u3044\u8868\u73fe\u3067\u66f8\u3051\u308b\n    - CLI \u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306f [ruby-nmap/lib/nmap/task.rb](https://github.com/sophsec/ruby-nmap/blob/master/lib/nmap/task.rb) \u3092\u898b\u308b\u306e\u304c\u624b\u3063\u53d6\u308a\u65e9\u3044\n- Host Discovery \u3067\u751f\u6210\u3055\u308c\u305f xml \u3092\u30d1\u30fc\u30b9\n    - xml \u306e\u30d1\u30fc\u30b9\u3092\u81ea\u524d\u3067\u3084\u3089\u306a\u304f\u3066\u6e08\u3080\u3063\u3066\u3060\u3051\u3067\u3001\u5b09\u3057\u304f\u306a\u3044\u3067\u3059\u304b\u3002\u50d5\u306f\u5b09\u3057\u3044\u3002\n\n[\u516c\u5f0f\u306e Examples](https://github.com/sophsec/ruby-nmap/blob/master/README.md#examples) \u3092\u898b\u308b\u3068\u4e00\u76ee\u77ad\u7136\u3067\u3057\u3087\u3046\u3002\n\n\n## Ruby SNMP\n\n- [Ruby SNMP | \u516c\u5f0f\u30b5\u30a4\u30c8](http://snmplib.rubyforge.org/)\n\nSNMP \u3092\u6271\u3048\u308b ruby \u7248\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002(\u96d1)\n\u5272\u3068\u65e5\u672c\u8a9e\u8a18\u4e8b\u3082\u591a\u3044\u3057\u3001\u30e1\u30b8\u30e3\u30fc\u306a\u3084\u3064\u3067\u3057\u3087\u3046\u3002\n\n\n## Ansible Dynamic Inventory\n\n- [Dynamic Inventory | Ansible Documentation](http://docs.ansible.com/ansible/intro_dynamic_inventory.html)\n    - \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n- [ansible/contrib/inventory | github](https://github.com/ansible/ansible/tree/devel/contrib/inventory)\n    - Ansible \u672c\u4f53\u306b\u4ed8\u5c5e\u3057\u3066\u304f\u308b\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u7fa4(\u4ee5\u4e0b\u306f\u4f8b)\n        - OpenStack\n        - Zabbix\n        - Proxmox\n        - Amazon EC2\n        - VMware\n        - ssh_config\n        - etc etc\n- [Ansible meetuptokyo 2015 Dynamic Inventory | SlideShare](http://www.slideshare.net/h-saito/ansible-meetuptokyo-2015-dynamic-inventory)\n    - \u30d7\u30ed\u306e Ansibler \u306b\u3088\u308b\u5206\u304b\u308a\u6613\u3044\u89e3\u8aac\u8cc7\u6599\n\n\u4ed6\u306e\u5834\u6240\u306b\u69cb\u6210\u7ba1\u7406\u30de\u30b9\u30bf\u304c\u3042\u308a\u3001Ansible \u306e hosts \u30d5\u30a1\u30a4\u30eb\u3092\u9759\u7684\u306b\u66f8\u304f\u3068\u4e8c\u91cd\u7ba1\u7406\u306b\u306a\u308b\u3088\u3046\u306a\u74b0\u5883\u3067\u3001\u69cb\u6210\u7ba1\u7406\u30de\u30b9\u30bf\u304b\u3089 hosts \u60c5\u5831\u3092\u3068\u3063\u3066\u304f\u308b\u2026\u3068\u3044\u3046\u6a5f\u80fd\u3002  \n\n\n\n# Discovery \u74b0\u5883\u6e96\u5099\n\n## Discovery \u30b5\u30fc\u30d0\u74b0\u5883\u60c5\u5831\n\nDiscovery \u3092\u52d5\u304b\u3059\u30b5\u30fc\u30d0\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n```bash:\u69cb\u6210\u60c5\u5831\n\n$ cat /etc/lsb-release\nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=14.04\nDISTRIB_CODENAME=trusty\nDISTRIB_DESCRIPTION=\"Ubuntu 14.04.3 LTS\"\n\n$ ruby -v\nruby 2.2.3p173 (2015-08-18 revision 51636) [x86_64-linux]\n\n$ gem list\n\n*** LOCAL GEMS ***\n\nbigdecimal (1.2.6)\nbundler (1.10.6)\nio-console (0.4.3)\njson (1.8.1)\nminitest (5.4.3)\npower_assert (0.2.2)\npsych (2.0.8)\nrake (10.4.2)\nrdoc (4.2.0)\ntest-unit (3.0.8)\n\n```\n\n\u3042\u3068\u3001\u3053\u306e\u30b5\u30fc\u30d0\u304b\u3089 network reachable \u306a NW \u6a5f\u5668\u3092\u3044\u304f\u3089\u304b\u52d5\u304b\u3057\u3066\u304a\u304d\u307e\u3059\u3002(\u672c\u9805\u3067\u306f\u540c\u4e00\u30bb\u30b0\u30e1\u30f3\u30c8)\n\n\n## Nmap 7.0 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u4ee5\u4e0b\u516c\u5f0f\u624b\u9806\u306b\u5f93\u3044\u307e\u3059\u3002\n\n- [Linux/Unix Compilation and Installation from Source Code | nmap](https://nmap.org/book/inst-source.html)\n\nDownload \u306f\u4ee5\u4e0b\u304b\u3089\u3002\n\n- [Download page | nmap](https://nmap.org/download.html)\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3044\u3051\u308b\u3067\u3057\u3087\u3046\u3002\n\n```bash:Nmap\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n$ sudo -E apt-get install libssl-dev\n$ cd /var/tmp/\n$ wget https://nmap.org/dist/nmap-7.00.tar.bz2\n$ bzip2 -cd nmap-7.00.tar.bz2 | tar xvf -\n\n$ ls -al\ntotal 8724\ndrwxrwxrwt  3 root  root     4096 Dec  5 14:38 .\ndrwxr-xr-x 11 root  root     4096 Nov  7 17:42 ..\ndrwxr-xr-x 22 kotetsu kotetsu  4096 Nov 20 01:19 nmap-7.00\n-rw-rw-r--  1 kotetsu kotetsu 8918906 Nov 20 05:23 nmap-7.00.tar.bz2\n\n$ cd nmap-7.00/\n$ ./configure\n$ make\n$ sudo -E make install\n\n(\u7565)\n\nNMAP SUCCESSFULLY INSTALLED\n\n$ nmap --version\n\nNmap version 7.00 ( https://nmap.org )\nPlatform: x86_64-unknown-linux-gnu\nCompiled with: nmap-liblua-5.2.3 openssl-1.0.1f nmap-libpcre-7.6 nmap-libpcap-1.7.3 nmap-libdnet-1.12 ipv6\nCompiled without:\nAvailable nsock engines: epoll poll select\n\n```\n\n\n## ruby-nmap / snmp \u306e gem \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u3069\u3061\u3089\u3082 `gem install` \u4e00\u767a\u3067\u5165\u308a\u307e\u3059\u3002\n`ruby-nmap` \u306f xml \u3092\u6271\u3046\u95a2\u4fc2\u4e0a\u3001\u4f9d\u5b58\u95a2\u4fc2\u306b `Nokogiri` \u304c\u3042\u308a\u307e\u3059\u3002\u306a\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u8e93\u3044\u305f\u3089\u30b0\u30b0\u3063\u3066\u89e3\u6c7a\u3057\u3066\u4e0b\u3055\u3044\u3002\n  \n\u4ee5\u4e0b\u306f `bundler` \u3092\u4f7f\u3063\u305f\u5834\u5408\u306e\u624b\u9806\u3067\u3059\u3002\n\n```bash:gem\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n$ cd\n$ mkdir discovery\n$ cd discovery/\n$ bundle init\nWriting new Gemfile to /home/kotetsu/discovery/Gemfile\n\nGemfile \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\n\n$ cat Gemfile\n# A sample Gemfile\nsource \"https://rubygems.org\"\n\n#\ngem 'ruby-nmap'\ngem `snmp`\n\n\n$ bundle install --path vendor/bundle\n$ cat Gemfile.lock\nGEM\n  remote: https://rubygems.org/\n  specs:\n  mini_portile2 (2.0.0)\n  nokogiri (1.6.7)\n    mini_portile2 (~> 2.0.0.rc2)\n  rprogram (0.3.2)\n  ruby-nmap (0.8.0)\n    nokogiri (~> 1.3)\n    rprogram (~> 0.3)\n  snmp (1.2.0)\n\nPLATFORMS\n  ruby\n\nDEPENDENCIES\n  ruby-nmap\n  snmp\n\nBUNDLED WITH\n   1.10.6\n\n```\n\n\n## NW \u6a5f\u5668\u5074\u306e SNMP \u8a2d\u5b9a\n\n\u4eca\u56de\u3001OS\u691c\u77e5\u3082\u3069\u304d\u3068\u3057\u3066 SNMP Get \u3067 NW \u6a5f\u5668\u306e `sysDescr` \u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u6a5f\u7a2e\u4f9d\u5b58\u306a\u304f NW \u6a5f\u5668\u306e OS \u3092\u77e5\u308a\u305f\u3044\u306a\u3089\u3070\u3001\u307e\u3042\u3053\u308c\u3057\u304b\u306a\u3044\u3067\u3057\u3087\u3046\u3001\u3063\u3066\u3053\u3068\u3067\u3002\n\n\u3042\u3068\u3001\u30e9\u30c3\u30af\u60c5\u5831\u3068\u304b\u3082\u7e8f\u3081\u3066\u53d6\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3068\u826f\u3044\u3088\u306d\u3001\u3063\u3066\u3053\u3068\u3067\u305d\u308c\u306f `sysLocation` \u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304d\u307e\u3059(\u672c\u9805\u3067\u306f\u5168\u90e8\u4eee\u60f3\u74b0\u5883\u306a\u306e\u3067\u30a2\u30ec\u306a\u611f\u3058\u3067\u3059\u304c)\u3002\n  \n\n\u4f55\u6a5f\u7a2e\u5206\u304b\u8a2d\u5b9a\u4f8b\u3092\u3002\n\n\n- JUNOS \u4f8b\n\n[snmp description](http://www.juniper.net/techpubs/en_US/junos14.2/topics/reference/configuration-statement/description-edit-snmp.html) \u3068\u304b\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3068\u3001OS \u60c5\u5831(\u30c7\u30d5\u30a9\u30eb\u30c8\u5024)\u3092\u3068\u308c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u3002\n\n```bash\n\nkotetsu@vsrx01> show configuration | display set | match snmp\nset snmp location KotetsuNoteVB\nset snmp community KOTETSU_NW\n\n```\n\n- Arista \u4f8b\n\n```bash\n\nvEOS-spine001#show run | inc snmp\nsnmp-server location KotetsuNoteVB\nsnmp-server community KOTETSU_NW ro\n\n```\n\n- VyOS \u4f8b\n\n```bash\n\nkotetsu@vtep-vyos01:~$ show configuration commands | match snmp\nset service snmp community 'KOTETSU_NW'\nset service snmp location 'KotetsuNoteVB'\n\n```\n\n\n## Discovery \u30b9\u30af\u30ea\u30d7\u30c8\u4f5c\u6210\uff5e\u914d\u7f6e\n\n### \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u9069\u5f53\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u7528\u610f\u3057\u3066\u3001\n\n```bash\n\n$ mkdir scripts\n$ cd scripts/\n\n```\n\n\u5f8c\u8ff0\u306e 3 \u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002\n\n- \u30b9\u30af\u30ea\u30d7\u30c8\u672c\u4f53 (discovery_nwdevs.rb)\n- \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb(setting_discovery_nwdevs.yml)\n- Nmap input file (target_nw.txt)\n\n\n### \u30b9\u30af\u30ea\u30d7\u30c8\u672c\u4f53\n\n`ruby-nmap` \u3068 `Ruby SNMP` \u3092\u4f7f\u3063\u3066 NW \u6a5f\u5668\u306e\u69cb\u6210\u60c5\u5831\u3092\u53ce\u96c6\u3057\u3066\u3001JSON \u30d5\u30a1\u30a4\u30eb\u306b\u5410\u304d\u51fa\u3059\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\n\n```ruby:discovery_nwdevs.rb\n\n# encoding: utf-8\n\n#\n# Usage:\n#  bundle exec ruby discovery_nwdevs.rb <setting.yml>\n#\n\nrequire 'nmap/program'\nrequire 'nmap/xml'\nrequire 'snmp'\nrequire 'yaml'\nrequire 'json'\n\n\n#\n# SNMP Get method\n#\ndef snmp_get_system(target_ip, snmp_params)\n  manager = SNMP::Manager.new(\n    :host => target_ip,\n    :port => 161,\n    :version => :SNMPv2c,\n    :community => snmp_params[\"community\"],\n    :timeout => 1,\n    :retries => 1\n  )\n\n  # sysName \u306b\u306f\u30db\u30b9\u30c8\u540d\n  # sysDescr \u306b\u306f\u6a5f\u7a2e\u3084\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\n  # sysLocation \u306f(\u8a2d\u5b9a\u3057\u3066\u3044\u308c\u3070)\u8a2d\u7f6e\u5834\u6240\n  # \u304c\u5165\u3063\u3066\u3044\u308b\u7b48\u306a\u306e\u3067\u3001\u305d\u308c\u3092\u3068\u308b\n  ret = Hash::new\n  ret[:sysname] = manager.get_value(snmp_params[\"oid_sysname\"]).to_s rescue \"\"\n  ret[:sysdesc] = manager.get_value(snmp_params[\"oid_sysdesc\"]).to_s rescue \"\"\n  ret[:syslocation] = manager.get_value(snmp_params[\"oid_syslocation\"]).to_s rescue \"\"\n  manager.close\n\n  return ret\nend\n\n\n\n#\n# main\n#\nbegin\n\n  # \u5916\u51fa\u3057\u3057\u3066\u3044\u308b\u60c5\u5831 YAML \u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30c9\n  params = YAML.load_file(ARGV[0])\n\n  # Nmap \u306e Host Discovery \u3092\u3057\u3066 xml \u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3059\n  # \u30dd\u30fc\u30c8\u30b9\u30ad\u30e3\u30f3\u306f UDP/161 \u306e\u307f\u306b\u9650\u5b9a\u3057\u3066\u3001SNMP Get \u3067\u60c5\u5831\u304c\u53d6\u5f97\u53ef\u80fd\u304b\u3069\u3046\u304b\u3092\u898b\u3066\u304a\u304f\n  # NW \u6a5f\u5668\u306a\u3093\u3066 Nmap \u306e fingerprint \u6a5f\u80fd\u306b\u983c\u308b\u3088\u308a\u306f\u3001SNMP Get \u3067\u898b\u305f\u65b9\u304c\u78ba\u5b9f\u306a\u306e\u3067\u3001fingerprint \u3082\u3057\u306a\u3044\n  Nmap::Program.scan do |nmap|\n    nmap.syn_scan = false\n    nmap.udp_scan = true\n    nmap.service_scan = false\n    nmap.os_fingerprint = false\n\n    nmap.xml = params[\"nmap_params\"][\"xml_file\"]\n    nmap.verbose = true\n\n    nmap.ports = []\n    unless params[\"nmap_params\"][\"scan_udp_ports\"].nil? then\n      params[\"nmap_params\"][\"scan_udp_ports\"].each do |port|\n        nmap.ports << port[\"port\"]\n      end\n    end\n\n    # Discovery \u306e\u5bfe\u8c61\u3068\u3059\u308b NW \u30a2\u30c9\u30ec\u30b9\u3092\u7f85\u5217\u3057\u305f\u30d5\u30a1\u30a4\u30eb\n    nmap.target_file = params[\"nmap_params\"][\"scan_target_files\"][\"targetfile\"]\n  end\n\n\n  #\u3000\u53cd\u5fdc\u304c\u3042\u3063\u305f\u30ce\u30fc\u30c9(up host)\u306e\u60c5\u5831(Hash)\u3092\u683c\u7d0d\n  array_hosts = []\n\n  # Nmap \u306e Host Discovery \u3067\u751f\u6210\u3055\u308c\u305f xml \u30d5\u30a1\u30a4\u30eb\u3092\u8d70\u67fb\n  # \u53cd\u5fdc\u304c\u3042\u3063\u305f\u30ce\u30fc\u30c9(up host)\u3092\u53d6\u5f97\u3057\u3001\n  # UDP/161 \u304c Open \u5224\u5b9a\u3055\u308c\u3066\u3044\u305f\u3089 SNMP \u3067\u8ffd\u52a0\u60c5\u5831\u53d6\u5f97\u3059\u308b\n  Nmap::XML.new(params[\"nmap_params\"][\"xml_file\"]) do |xml|\n    xml.each_up_host do |host|\n      hash_host = {}\n      hash_snmp_info = {}\n\n      hash_host[:ipaddr] = host.ipv4\n      hash_host[:ptr] = host.hostname\n      hash_host[:sysname] = \"\"\n      hash_host[:sysdesc] = \"\"\n      hash_host[:syslocation] = \"\"\n\n      host.each_port do |port|\n        if (port.number == 161) && (port.state == :open) then\n          hash_snmp_info = snmp_get_system(host.ipv4, params[\"snmp_params\"])\n          unless hash_snmp_info.nil? then\n            hash_host[:sysname] = hash_snmp_info[:sysname]\n            hash_host[:sysdesc] = hash_snmp_info[:sysdesc]\n            hash_host[:syslocation] = hash_snmp_info[:syslocation]\n          end\n        end\n      end\n      array_hosts << hash_host\n    end\n  end\n\n\n  #\u3000\u53ce\u96c6\u3057\u305f\u30ce\u30fc\u30c9\u306e\u60c5\u5831\u3092 JSON \u5f62\u5f0f\u30d5\u30a1\u30a4\u30eb\u3067\u5410\u304d\u51fa\u3059\n  unless array_hosts.nil? then\n    dir_result = File.expand_path(params[\"nmap_params\"][\"output_directory\"])\n\n    json_hosts = JSON.pretty_unparse(array_hosts)\n    File.open(\"#{dir_result}/list_nwdev.json\",\"w\") do |file|\n      file.write(json_hosts)\n    end\n  end\n\n\n# \u306a\u3093\u304b\u9069\u5207\u306b\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u3066\u304f\u3060\u3055\u3044\nrescue SNMP::RequestTimeout => e\n  #\nrescue StandardError => e\n  puts e\n  puts e.backtrace\nensure\n  #\nend\n\n```\n\n### \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\n\u524d\u8ff0\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u98df\u308f\u305b\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\u5225\u74b0\u5883\u3067\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u624b\u3092\u52a0\u3048\u305a\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3060\u3051\u66f8\u304d\u63db\u3048\u3066\u4f7f\u3046\u2026\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u8003\u3048\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u2026\u300c\u6a19\u6e96 MIB \u306e OID \u304c\u5909\u308f\u308b\u3063\u3066\u3044\u3046\u306e\u304b\uff1f\u300d\u306a\u3093\u3066\u7a81\u3063\u8fbc\u307f\u306f\u4e0d\u53ef\u3002\n\n\n```yaml:setting_discovery_nwdevs.yml\n\nnmap_params :\n  # nmap \u306e -iL \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6e21\u3059 discovery \u5bfe\u8c61\u3092\u8a18\u8f09\u3057\u305f\u30d5\u30a1\u30a4\u30eb\n  scan_target_files :\n    targetfile : './target_nw.txt'\n  # nmap \u306e -PU -p \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6e21\u3059 UDP \u30dd\u30fc\u30c8\u30b9\u30ad\u30e3\u30f3\u5bfe\u8c61\n  scan_udp_ports :\n    - port : 161\n  # nmap \u306e -oX \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6e21\u3059\u3001Host Discovery \u306e output \u3067\u3042\u308b xml \u30d5\u30a1\u30a4\u30eb\n  xml_file : './scan.xml'\n  # \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u6700\u7d42 output \u3067\u3042\u308b JSON \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea(nmap \u306b\u6e21\u3059\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u306f\u306a\u3044\u306e\u3067\u3001nmap_params \u914d\u4e0b\u306b\u3044\u308b\u306e\u306f\u9055\u548c\u611f\u3042\u308a\u307e\u3059\u306d\u2026)\n  output_directory : './'\nsnmp_params :\n  # \u52d5\u304b\u3059\u74b0\u5883\u306e NW \u6a5f\u5668\u306b\u8a2d\u5b9a\u3057\u3066\u3042\u308b SNMP community\n  # \u540c\u3058\u74b0\u5883\u306e community \u306a\u3089\u304d\u3063\u3068\u7d71\u4e00\u3055\u308c\u3066\u3044\u308b\u3060\u308d\u3046\u3001\u3068\u3044\u3046\u524d\u63d0\u306e\u3082\u3068\u2026\n  community       : 'KOTETSU_NW'\n  # SNMP Get \u5bfe\u8c61\u306e OID \u305f\u3061\n  oid_sysname     : '1.3.6.1.2.1.1.5.0'\n  oid_sysdesc     : '1.3.6.1.2.1.1.1.0'\n  oid_syslocation : '1.3.6.1.2.1.1.6.0'\n\n```\n\n### Nmap input file\n\nNmap \u3067 Host Discovery \u3059\u308b\u5bfe\u8c61\u3092\u7f85\u5217\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3002\nruby-nmap \u306f\u5185\u90e8\u7684\u306b nmap \u306b `-iL` \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u98df\u308f\u305b\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u8a18\u6cd5\u306f [Target Specification | Nmap \u516c\u5f0f](https://nmap.org/book/man-target-specification.html) \u3092\u53c2\u7167\u3002\n\n```target_nw.txt\n192.168.101.0/24  # mgmt NW\n```\n\n\n# Discovery \u5b9f\u884c\uff5e\u51fa\u529b\u78ba\u8a8d\n\n## \u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3002\nNmap \u3067\u30dd\u30fc\u30c8\u30b9\u30ad\u30e3\u30f3\u3059\u308b\u306b\u306f\u57fa\u672c\u7684\u306b\u306f root \u6a29\u9650\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001`sudo` \u3057\u3066\u3044\u307e\u3059\u3002(\u4ee5\u4e0b\u516c\u5f0f\u306e\u53c2\u8003\u8cc7\u6599)\n\n- [Port Scanning Techniques](https://nmap.org/book/man-port-scanning-techniques.html)\n- [Running nmap as an unprivileged user](https://secwiki.org/w/Running_nmap_as_an_unprivileged_user)\n\n\n```bash:Discovery\u30b9\u30af\u30ea\u30d7\u30c8\u5b9f\u884c\n\n$ sudo -E bundle exec ruby discovery_nwdevs.rb setting_discovery_nwdevs.yml\n\nStarting Nmap 7.00 ( https://nmap.org ) at 2015-12-05 14:11 JST\nInitiating ARP Ping Scan at 14:11\nScanning 255 hosts [1 port/host]\nCompleted ARP Ping Scan at 14:11, 1.64s elapsed (255 total hosts)\n\nInitiating Parallel DNS resolution of 255 hosts. at 14:11\nCompleted Parallel DNS resolution of 255 hosts. at 14:11, 0.04s elapsed\n\n(\u7565)\n\nRead data files from: /usr/local/bin/../share/nmap\nNmap done: 256 IP addresses (5 hosts up) scanned in 2.14 seconds\n           Raw packets sent: 513 (14.784KB) | Rcvd: 11 (836B)\n\n```\n\n## \u751f\u6210\u30d5\u30a1\u30a4\u30eb\u78ba\u8a8d\n\n### \u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\n\nNmap \u304c\u751f\u6210\u3057\u305f `scan.xml` \u3068\u3001\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u751f\u6210\u3057\u305f `list_nwdev.json` \u304c `root:root` \u3067\u5410\u304d\u51fa\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```bash:output\n\n$ ls -al\ntotal 60\ndrwxrwxr-x 2 kotetsu kotetsu  4096 Dec  6 14:11 .\ndrwxrwxr-x 5 kotetsu kotetsu  4096 Dec  6 14:08 ..\n-rw-r--r-- 1 kotetsu kotetsu  3129 Dec  6 14:04 discovery_nwdevs.rb\n-rw-r--r-- 1 root    root      643 Dec  6 14:11 list_nwdev.json\n-rw-r--r-- 1 root    root    34690 Dec  6 14:11 scan.xml\n-rw-r--r-- 1 kotetsu kotetsu   281 Dec  6 14:01 setting_discovery_nwdevs.yml\n-rw-rw-r-- 1 kotetsu kotetsu    28 Dec  6 11:07 target_nw.txt\n\n```\n\n### Nmap \u304c\u751f\u6210\u3057\u305f xml \u30d5\u30a1\u30a4\u30eb\n\n\u4e2d\u8eab\u3092\u8efd\u304f\u898b\u3066\u3044\u304d\u307e\u3059\u3002(\u3053\u306e\u8fba\u306f\u3001Nmap \u3092\u4f7f\u3063\u3066\u3044\u308b\u4eba\u306a\u3089\u3088\u304f\u77e5\u3063\u3066\u3044\u308b\u306e\u3067\u306f)\n\n- \u6700\u521d\u306e\u307b\u3046\u3067\u3001\u5b9f\u969b\u306b `ruby-nmap` \u304c\u5b9f\u884c\u3057\u305f\u30b3\u30de\u30f3\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u3084 Nmap \u306e\u5b9f\u884c\u30d0\u30fc\u30b8\u30e7\u30f3\u3001\u5b9f\u884c\u6642\u523b\u306a\u3069\u304c\u5206\u304b\u308b\n\n```xml:scan.xml\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE nmaprun>\n<?xml-stylesheet href=\"file:///usr/local/bin/../share/nmap/nmap.xsl\" type=\"text/xsl\"?>\n<!-- Nmap 7.00 scan initiated Wed Dec  6 14:11:37 2015 as: /usr/local/bin/nmap -sU -oX ./scan.xml -v -p 161 -iL ./target_nw.txt -->\n<nmaprun scanner=\"nmap\" args=\"/usr/local/bin/nmap -sU -oX ./scan.xml -v -p 161 -iL ./target_nw.txt\" start=\"1449637897\" startstr=\"Sat Dec  6 14:11:37 2015\" version=\"7.00\" xmloutputversion=\"1.04\">\n<scaninfo type=\"udp\" protocol=\"udp\" numservices=\"1\" services=\"161\"/>\n<verbose level=\"1\"/>\n<debugging level=\"0\"/>\n<taskbegin task=\"ARP Ping Scan\" time=\"1449378697\"/>\n<taskend task=\"ARP Ping Scan\" time=\"1449378699\" extrainfo=\"255 total hosts\"/>\n<taskbegin task=\"Parallel DNS resolution of 255 hosts.\" time=\"1449378699\"/>\n<taskend task=\"Parallel DNS resolution of 255 hosts.\" time=\"1449378699\"/>\n\n```\n\n- Down \u3057\u3066\u3044\u308b\u30db\u30b9\u30c8\u306e\u60c5\u5831\u304c\u7d9a\u304f\n\n```xml:scan.xml\n\n<host><status state=\"down\" reason=\"no-response\" reason_ttl=\"0\"/>\n<address addr=\"192.168.101.3\" addrtype=\"ipv4\"/>\n</host>\n<host><status state=\"down\" reason=\"no-response\" reason_ttl=\"0\"/>\n<address addr=\"192.168.101.4\" addrtype=\"ipv4\"/>\n</host>\n\n```\n\n- Up \u3057\u3066\u3044\u308b\u30db\u30b9\u30c8\u306e\u60c5\u5831\u304c\u7d9a\u304f\n\n```xml:scan.xml\n\n<host starttime=\"1449378697\" endtime=\"1449378699\"><status state=\"up\" reason=\"arp-response\" reason_ttl=\"0\"/>\n<address addr=\"192.168.101.30\" addrtype=\"ipv4\"/>\n<address addr=\"52:54:00:76:24:2C\" addrtype=\"mac\" vendor=\"QEMU virtual NIC\"/>\n<hostnames>\n<hostname name=\"vsrx01\" type=\"PTR\"/>\n</hostnames>\n<ports><port protocol=\"udp\" portid=\"161\"><state state=\"open\" reason=\"udp-response\" reason_ttl=\"64\"/><service name=\"snmp\" method=\"table\" conf=\"3\"/></port>\n</ports>\n<times srtt=\"24054\" rttvar=\"34787\" to=\"163202\"/>\n</host>\n\n```\n\n### \u30b9\u30af\u30ea\u30d7\u30c8\u304c\u751f\u6210\u3057\u305f JSON \u30d5\u30a1\u30a4\u30eb\n\n- Nmap \u304c\u540d\u524d\u89e3\u6c7a\u51fa\u6765\u305f\u3082\u306e(\u4ee5\u4e0b\u4f8b\u3067\u306f `192.168.101.30` \u306e\u307f\u540d\u524d\u767b\u9332\u3057\u3066\u3042\u3063\u305f)\u306f xml \u306e `hostname` \u3092 `ptr` \u306b\u683c\u7d0d\n- `sysname` \u3068 `sysdesc` \u3068 `syslocation` \u306f SNMP Get \u3067\u53d6\u5f97\u3057\u305f\u60c5\u5831\n- Nmap \u3067 UDP 161 \u304c Open \u3057\u3066\u3044\u306a\u3044\u3068\u5224\u65ad\u3057\u305f `192.168.101.172` \u306b\u95a2\u3057\u3066\u306f\u3001\u307b\u3068\u3093\u3069\u60c5\u5831\u306f\u53d6\u5f97\u3067\u304d\u3066\u3044\u306a\u3044\n    - \u307e\u3042\u3001\u305d\u306e IP \u30a2\u30c9\u30ec\u30b9\u304c\u4f55\u3089\u304b\u306e\u6a5f\u5668\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u304f\u3089\u3044\n\n\n```json:list_nwdev.json\n\n[\n  {\n    \"ipaddr\": \"192.168.101.30\",\n    \"ptr\": \"vsrx01\",\n    \"sysname\": \"vsrx01\",\n    \"sysdesc\": \"Juniper Networks, Inc. vsrx internet router, kernel JUNOS 15.1X49-D15.4, Build date: 2015-07-31 03:30:01 UTC Copyright (c) 1996-2015 Juniper Networks, Inc.\",\n    \"syslocation\": \"KotetsuNoteVB\"\n  },\n  {\n    \"ipaddr\": \"192.168.101.50\",\n    \"ptr\": null,\n    \"sysname\": \"vEOS-spine001\",\n    \"sysdesc\": \"Arista Networks EOS version 4.14.8M running on an Arista Networks vEOS\",\n    \"syslocation\": \"KotetsuNoteVB\"\n  },\n  {\n    \"ipaddr\": \"192.168.101.52\",\n    \"ptr\": null,\n    \"sysname\": \"vEOS-leaf001\",\n    \"sysdesc\": \"Arista Networks EOS version 4.14.8M running on an Arista Networks vEOS\",\n    \"syslocation\": \"KotetsuNoteVB\"\n  },\n  {\n    \"ipaddr\": \"192.168.101.71\",\n    \"ptr\": null,\n    \"sysname\": \"vtep-vyos01\",\n    \"sysdesc\": \"Vyatta VyOS 1.1.1\",\n    \"syslocation\": \"KotetsuNoteVB\"\n  },\n  {\n    \"ipaddr\": \"192.168.101.172\",\n    \"ptr\": null,\n    \"sysname\": \"\",\n    \"sysdesc\": \"\",\n    \"syslocation\": \"\"\n  }\n]\n\n```\n\n\n# \u9023\u643a\u4f8b \uff5eAnsible \u306e Dynamic Inventory\uff5e\n\n## \u3084\u308b\u3053\u3068\n\n\u5148\u306b\u751f\u6210\u3057\u305f JSON \u30d5\u30a1\u30a4\u30eb\u3092\u300c\u69cb\u6210\u60c5\u5831\u30de\u30b9\u30bf\u300d\u3068\u307f\u306a\u3057\u3066\u9023\u643a\u3059\u308b\u4f8b\u3068\u3057\u3066 Ansible \u306e Dynamic Inventory \u3067\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\nNW \u6a5f\u5668\u306e\u4e2d\u304b\u3089 Arista \u3060\u3051\u3092\u629c\u304d\u51fa\u3057\u3066\u3001Arista \u7528\u306e Role \u3092\u4f7f\u3063\u305f Playbook \u3092\u5b9f\u884c\u3059\u308b\u3067\u3059\u3002\n\n\n## \u74b0\u5883\n\n\u6a2a\u7740\u3057\u3066\u3001\u6614(2014/12)\u4f5c\u3063\u305f\u4ee5\u4e0b\u74b0\u5883\u3092\u6d41\u7528\u3057\u3066 Arista \u3092\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u4f7f\u3044\u307e\u3059\u3002  \n\n- [Arista \u306e REST API \u3092 ruby \u3084 Ansible \u3067\u7a81\u3044\u3066\u307f\u3088\u3046 | Qiita](http://qiita.com/kakkotetsu/items/944c263c1580a230a9c0#ansible-aristaeos-role-%E7%89%88)\n    - OS: Ubuntu-14.04.01-server-amd64\n    - ansible: 1.8.2\n    - ansible-eos: v0.1.2\n\n2015/12 \u73fe\u5728\u3060\u3068\u3001Ansible \u306f 2.1.0 \u3068\u304b\u307e\u3067\u51fa\u3066\u3044\u308b\u3057\u3001ansible-eos (Arista \u7528\u306e Role)\u3082\u304b\u306a\u308a\u66f4\u65b0\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u304c\u2026\u3002\n\n\n## Dynamic Inventory \u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\n\n\u5148\u306b\u4f5c\u3063\u305f JSON \u30d5\u30a1\u30a4\u30eb\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3001\u6700\u4f4e\u9650\u52d5\u304f\u3060\u3051\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\u3000\u3000\n\u8981\u3059\u308b\u306b `sysDescr` \u3067\u6a5f\u7a2e\u3092\u4ed5\u5206\u3051\u3066\u3044\u308b\u3060\u3051\u3002\n\n```ruby:dynamic_nwdevs.rb\n\n#! /usr/bin/env ruby\n# encoding: utf-8\n\nrequire 'json'\n\nFILE_INVENTORY = '/home/kotetsu/discovery/scripts/list_nwdev.json'\n\n\nbegin\n  \n  if (ARGV[0] && ARGV[0] == '--list') then\n    ret = {}\n    \n    list_junos = []\n    list_arista = []\n    list_vyos = []\n\n    JSON.load(File.open(FILE_INVENTORY).read).each do |nwdev|\n      case nwdev[\"sysdesc\"]\n      when /^Juniper.*JUNOS.*/\n        list_junos << nwdev[\"ipaddr\"]\n      when /^Arista Networks EOS.*/\n        list_arista << nwdev[\"ipaddr\"]\n      when /^Vyatta VyOS/\n        list_vyos << nwdev[\"ipaddr\"]\n      else\n        #\n      end\n    end\n\n    ret[\"junos_all\"] = list_junos.dup unless list_junos.size == 0\n    ret[\"arista_all\"] = list_arista.dup unless list_arista.size == 0\n    ret[\"vyos_all\"] = list_vyos.dup unless list_vyos.size == 0\n    puts JSON.pretty_unparse(ret)\n\n  elsif (ARGV[1] && ARGV[0] == \"--host\") then\n    JSON.load(File.open(FILE_INVENTORY).read).each do |nwdev|\n      if (\n        nwdev[\"sysname\"] =~ Regexp.new(ARGV[1]) ||\n        nwdev[\"ipaddr\"] =~ Regexp.new(ARGV[1]) ||\n        nwdev[\"ptr\"] =~ Regexp.new(ARGV[1])\n      ) then\n        puts JSON.pretty_unparse(nwdev)\n      end\n    end\n  end\n\n\nrescue Exception => e\n  puts e\n  puts e.backtrace\nend\n```\n\n\u516c\u5f0f\u306e\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306f Python \u304c\u5727\u5012\u7684\u306b\u591a\u3044\u3067\u3059\u304c\u3001\u3088\u304f\u3042\u308b\u300c\u6240\u5b9a\u306e\u5f15\u6570\u3092\u3064\u3051\u3066\u5b9f\u884c\u3057\u305f\u6642\u306b\u3001\u6240\u5b9a\u306eOutput\u3092\u8fd4\u305b\u3070\u826f\u3044\u300d\u7cfb\u306e\u3084\u3064\u306a\u306e\u3067\u3001\u8a00\u8a9e\u306f\u4f55\u3067\u66f8\u3044\u3066\u3082\u826f\u3044\u3067\u3059\u3002(\u3053\u306e\u7a0b\u5ea6\u306a\u3089\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3082)\n\n\u3067\u3001\u3053\u308c\u3092\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u611f\u3058\u3002\n\n```bash:dynamic_nwdevs.rb\u306eOutput\n$ ./dynamic_nwdevs.rb --list\n{\n  \"junos_all\": [\n    \"192.168.101.30\"\n  ],\n  \"arista_all\": [\n    \"192.168.101.50\",\n    \"192.168.101.52\"\n  ],\n  \"vyos_all\": [\n    \"192.168.101.71\"\n  ]\n}\n\n$ ./dynamic_nwdevs.rb --host vEOS-spine001\n{\n  \"ipaddr\": \"192.168.101.50\",\n  \"ptr\": null,\n  \"sysname\": \"vEOS-spine001\",\n  \"sysdesc\": \"Arista Networks EOS version 4.14.8M running on an Arista Networks vEOS\",\n  \"syslocation\": \"KotetsuNoteVB\"\n}\n\n```\n\n`_meta` \u3092\u51fa\u3055\u306a\u3044\u306e\u3067\u3001\u7121\u99c4\u306a\u51e6\u7406\u304c\u8d70\u308b\u306e\u3067\u3059\u304c\u306d\u3002\u307e\u3042\u30ed\u30fc\u30ab\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u8aad\u3093\u3067\u3044\u308b\u30c6\u30b9\u30c8\u74b0\u5883\u306a\u306e\u3067\u2026(\uff93\uff7a\uff9e\uff93\uff7a\uff9e)\n\u305d\u306e\u8fba\u306f [Ansible meetuptokyo 2015 Dynamic Inventory | SlideShare](http://www.slideshare.net/h-saito/ansible-meetuptokyo-2015-dynamic-inventory) \u306e\u30b9\u30e9\u30a4\u30c9 10\uff5e12 \u3092\u898b\u307e\u3057\u3087\u3046\u3002\n\n\n## Arista \u7528\u306e\u30b5\u30f3\u30d7\u30eb Playbook\n\n- `role` \u3067 Arista \u516c\u5f0f\u306e Role \u3092\u547c\u3093\u3067\u3044\u308b\u5b8c\u5168\u306b Arista \u5c02\u7528\u306e Playbook\n-  `hosts` \u3067\u306f\u5148\u306e `./dynamic_nwdevs.rb --list` \u3067\u51fa\u529b\u3055\u308c\u305f `arista_all` \u3068\u3044\u3046 Arista \u5168\u53f0\u30b0\u30eb\u30fc\u30d7\u3092\u6307\u5b9a\n- `show version` \u3057\u3066 stdout \u3059\u308b\u3060\u3051\n\n```yaml:playbook_sample_arista.yml\n\n- name: eos nodes\n  hosts: arista_all\n  gather_facts: no\n  sudo: true\n\n  vars:\n    eapi_username: kotetsu\n    eapi_password: kotetsu\n    eapi_protocol: http\n\n  roles:\n    - role: arista.eos\n\n  tasks:\n    - name: show version\n      action: eos_command\n      args: {\n         commands: [\n           \"show version\"\n         ],\n         eapi_username: \"{{ eapi_username }}\",\n         eapi_password: \"{{ eapi_password }}\",\n         eapi_protocol: \"{{ eapi_protocol }}\"\n      }\n      register: output_version\n\n    - debug: var=output_version\n\n```\n\n## Playbook \u5b9f\u884c\n\n\u30ec\u30c3\u30c4\u30b4\u30fc\n(`-i` \u3067\u547c\u3093\u3067\u3044\u308b\u306e\u304c `hosts` \u30d5\u30a1\u30a4\u30eb\u3067\u306f\u306a\u304f\u3066\u3001\u5148\u306e `dynamic_nwdevs.rb` \u306a\u306e\u304c\u30dd\u30a4\u30f3\u30c8)\n\n```bash:DynamicInventory\u3067Playbook\u5b9f\u884c\n\n$ ansible-playbook playbook_sample_arista.yml -f 10 -u ansible -i dynamic_nwdevs.rb\n\nPLAY [eos nodes] **************************************************************\n\nTASK: [arista.eos | check if running on eos node] *****************************\nok: [192.168.101.50]\nok: [192.168.101.52]\n\nTASK: [arista.eos | collect eos facts] ****************************************\nok: [192.168.101.50]\nok: [192.168.101.52]\n\nTASK: [arista.eos | include eos variables] ************************************\nok: [192.168.101.50]\nok: [192.168.101.52]\n\nTASK: [arista.eos | check for working directory] ******************************\nok: [192.168.101.52]\nok: [192.168.101.50]\n\nTASK: [arista.eos | create source] ********************************************\nskipping: [192.168.101.52]\nskipping: [192.168.101.50]\n\nTASK: [arista.eos | check if pip is installed] ********************************\nok: [192.168.101.50]\nok: [192.168.101.52]\n\nTASK: [arista.eos | copy pip extension to node] *******************************\nskipping: [192.168.101.50]\nskipping: [192.168.101.52]\n\nTASK: [arista.eos | create tmp config file to load pip] ***********************\nskipping: [192.168.101.50]\nskipping: [192.168.101.52]\n\nTASK: [arista.eos | load pip eos extension] ***********************************\nskipping: [192.168.101.52]\nskipping: [192.168.101.50]\n\nTASK: [arista.eos | copy required libraries to node] **************************\nok: [192.168.101.50] => (item=eapilib-0.1.0.tar.gz)\nok: [192.168.101.52] => (item=eapilib-0.1.0.tar.gz)\n\nTASK: [arista.eos | install required libraries] *******************************\nok: [192.168.101.50] => (item=eapilib-0.1.0.tar.gz)\nok: [192.168.101.52] => (item=eapilib-0.1.0.tar.gz)\n\nTASK: [arista.eos | install jsonrpclib] ***************************************\nskipping: [192.168.101.50]\nskipping: [192.168.101.52]\n\nTASK: [arista.eos | install required libraries and dependencies] **************\nskipping: [192.168.101.50] => (item=eapilib-0.1.0.tar.gz)\nskipping: [192.168.101.52] => (item=eapilib-0.1.0.tar.gz)\n\nTASK: [show version] **********************************************************\nok: [192.168.101.52]\nok: [192.168.101.50]\n\nTASK: [debug var=output_version] **********************************************\nok: [192.168.101.50] => {\n    \"output_version\": {\n        \"changed\": false,\n        \"invocation\": {\n            \"module_args\": \"\",\n            \"module_name\": \"eos_command\"\n        },\n        \"output\": [\n            {\n                \"command\": \"show version\",\n                \"response\": {\n                    \"architecture\": \"i386\",\n                    \"bootupTimestamp\": 1449902847.6,\n                    \"hardwareRevision\": \"\",\n                    \"internalBuildId\": \"a6bbeeb3-95b7-42bc-9721-266f9bff424e\",\n                    \"internalVersion\": \"4.14.8M-2475814.4148M\",\n                    \"memFree\": 20516,\n                    \"memTotal\": 996140,\n                    \"modelName\": \"vEOS\",\n                    \"serialNumber\": \"\",\n                    \"systemMacAddress\": \"08:00:27:31:60:65\",\n                    \"version\": \"4.14.8M\"\n                }\n            }\n        ]\n    }\n}\nok: [192.168.101.52] => {\n    \"output_version\": {\n        \"changed\": false,\n        \"invocation\": {\n            \"module_args\": \"\",\n            \"module_name\": \"eos_command\"\n        },\n        \"output\": [\n            {\n                \"command\": \"show version\",\n                \"response\": {\n                    \"architecture\": \"i386\",\n                    \"bootupTimestamp\": 1449902847.71,\n                    \"hardwareRevision\": \"\",\n                    \"internalBuildId\": \"a6bbeeb3-95b7-42bc-9721-266f9bff424e\",\n                    \"internalVersion\": \"4.14.8M-2475814.4148M\",\n                    \"memFree\": 46872,\n                    \"memTotal\": 996140,\n                    \"modelName\": \"vEOS\",\n                    \"serialNumber\": \"\",\n                    \"systemMacAddress\": \"08:00:27:e2:d0:f4\",\n                    \"version\": \"4.14.8M\"\n                }\n            }\n        ]\n    }\n}\n\nPLAY RECAP ********************************************************************\n192.168.101.50             : ok=10   changed=0    unreachable=0    failed=0\n192.168.101.52             : ok=10   changed=0    unreachable=0    failed=0\n\n```\n\nArista \u3060\u3051\u306b\u51e6\u7406\u304c\u8d70\u308a\u307e\u3057\u305f\u3002\n\n\n\n# \u304a\u3057\u307e\u3044\n\n## plus one\n\n\u4eca\u56de\u306f Discovery \u3068\u306e\u9023\u643a\u4f8b\u3068\u3057\u3066 Ansible \u306e Dynamic Inventory \u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001Discovery \u306f Nmap/SNMP \u3060\u3051\u306e\u8d85\u5358\u7d14\u306a\u4ed5\u7d44\u307f\u306a\u306e\u3067\u3001\u4ed6\u306e\u4ed5\u7d44\u307f\u3068\u306e\u9023\u643a\u3082\u9762\u5012\u306a\u304f\u3044\u3051\u308b\u3093\u3067\u3059\u3088\u306a\u3002  \n\u4f8b\u3048\u3070\u3001\u3053\u3093\u306a\u306e\u306f\u3088\u304f\u3084\u3063\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n\n- \u3053\u3053\u3067\u751f\u6210\u3057\u305f JSON \u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30c9\u3057\u3066\n    - `sysDescr` \u3092 `case` \u3067\u5206\u3051\u3066\u3001\u6a5f\u7a2e\u306b\u5fdc\u3058\u305f\u51e6\u7406\n        - \u8a73\u7d30\u306a inventory \u60c5\u5831\u53d6\u5f97(\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3068\u304b\u30e9\u30a4\u30f3\u30ab\u30fc\u30c9/SFP\u69cb\u6210\u3068\u304b)\n            - expect \u3067 `show inventory` \u3068\u304b netconf \u306e `<get-inventory>` \u3068\u304b SNMP Get \u3068\u304b\u72ec\u81ea API \u3068\u304b\n                - \u5fc5\u8981\u306b\u5fdc\u3058\u3066\u4e8b\u524d\u306b\u30dd\u30fc\u30c8\u30b9\u30ad\u30e3\u30f3\u3067 TCP/830 \u3068\u304b TCP/22 \u3082\u3057\u3066\u304a\u304f\u3068\u304b\n                - \u305f\u307e\u306b\u30b7\u30ea\u30a2\u30eb\u756a\u53f7\u3092 CLI \u3067\u3057\u304b\u53d6\u5f97\u3067\u304d\u306a\u3044\u30dd\u30f3\u30b3\u30c4\u7bb1\u304c\u3042\u308b\u3093\u3060\u3088\u306a\u3041\u2026\n        - config \u53d6\u5f97 (\u5f8c\u8ff0\u306e rancid \u65b9\u5f0f\u3067\u3082\u3088\u3044)\n            - discovery \uff5e config \u53d6\u5f97 \uff5e \u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30b3\u30de\u30f3\u30c9\u3082 cron \u3067\u56de\u3057\u3066\u304a\u304f\u3068\u3001\u5897\u3048\u305f\u6a5f\u5668\u304c\u52dd\u624b\u306b\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30fb\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3055\u308c\u308b\n        - \u5404\u7a2e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u751f\u6210(\u30b5\u30f3\u30d7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3092 JSON \u3067\u306a\u304f\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306b\u3059\u308b\u3067\u3082)\n            - rancid\n            - Ansible\n                - hosts \u30d5\u30a1\u30a4\u30eb\n                - Dynamic Inventory \u3068\u9023\u643a\n                    - \u672c\u9805\u3067\u8efd\u304f\u3084\u3063\u305f\u3084\u3064\n            - \u76e3\u8996\u30bd\u30d5\u30c8(auto discovery \u7684\u306a\u6a5f\u80fd\u304c\u306a\u3044)\n                - \u6a5f\u7a2e\u306b\u5fdc\u3058\u305f\u81ea\u524d\u306e plugin \u3092\u6307\u5b9a\u3057\u3066\u2026\u3068\u304b\u3082\u81ea\u52d5\u3067\u3084\u308c\u308b\n        - \u7279\u5b9a\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5bfe\u8c61\u3068\u3057\u305f\n            - OS \u30d5\u30a1\u30a4\u30eb\u8ee2\u9001\n            - \u8a2d\u5b9a\u6492\u304d\n    - `ptr` \u304c\u7a7a\u3067 `sysname` \u3092\u53d6\u5f97\u3067\u304d\u305f\u3082\u306e\u306b\u95a2\u3057\u3066\u3001\u5185\u90e8 DNS \u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u8a2d\u5b9a\u751f\u6210(\uff5e\u8ffd\u52a0)\n    - `sysDesc` \u3068 `sysname` \u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u6761\u4ef6\u4ed8\u3051\u3066\u3001\u5f85\u6a5f\u7cfb\u6a5f\u5668\u306e\u307f\u4e91\u3005\n- JSON \u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u305f\u60c5\u5831\u3092 SQL \u306b\u653e\u308a\u8fbc\u3093\u3067\u3001WebUI \u306a\u308a API \u306a\u308a\u3092\u63d0\u4f9b\n    - \u524d\u8ff0\u306e\u5185\u5bb9\u3092\u5b9f\u73fe\u3059\u308b\u306e\u306b\u3001\u8e0f\u307f\u53f0\u30b5\u30fc\u30d0\u3084\u76e3\u8996\u30b5\u30fc\u30d0\u304b\u3089\u3082 inventory \u60c5\u5831\u3092\u53d6\u5f97\u3057\u305f\u3044\u3001\u3063\u3066\u601d\u3063\u305f\u308a\n        - \u5225\u306b rsync \u3068\u304b\u3067\u6492\u3044\u3066\u3082\u3088\u3044\u304c\n    - \u5b9f\u6a5f\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u60c5\u5831\u306b\u306f\u9650\u754c\u304c\u3042\u308b\u3057\u3001\u4eba\u9593\u304c\u5165\u529b\u30fb\u66f4\u65b0\u3057\u305f\u3044\u60c5\u5831\u3082\u3042\u308b\u306e\u3067\u306f(\u5546\u7528\u74b0\u5883\u3060\u3068\u4fdd\u5b88\u671f\u9650\u3068\u304b) \n    - \u3042\u308a\u3082\u306e\u88fd\u54c1\u306e WebUI \u306f\u5b9f\u904b\u7528\u8981\u4ef6\u3092\u5145\u305f\u3059\u3088\u3046\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u306a\u3044\u304b\u3089\u3001\u81ea\u524d\u3067\u7c21\u6613\u3067\u904b\u7528\u8981\u4ef6\u3092\u5145\u305f\u3059\u3082\u306e\u3092\u7acb\u3066\u305f\u307b\u3046\u304c\u697d\u3001\u3068\u304b\n        - \u305d\u3046\u3044\u3046\u601d\u3044\u304b\u3089\u81ea\u524d\u3067\u4f5c\u308a\u8fbc\u307e\u308c\u305f\u793e\u5185\u30b7\u30b9\u30c6\u30e0\u3068\u304b\u306b\u306f\u3001\u6587\u53e5\u305f\u3089\u305f\u3089\u3067\u300c\u3042\u308a\u3082\u306e\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u4f7f\u3048\u3088\u300d\u3068\u304b\u8a00\u3046\u306e\u306b\u306d\n\n\n\n## \u6240\u611f\n\n- \u307e\u3042\u3001\u306a\u3093\u3068\u3044\u3046\u304b\u300c\u4f55\u3092\u30de\u30b9\u30bf\u60c5\u5831\u306b\u3057\u3066\u3001\u4ed6\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u3069\u3046\u3044\u3046\u9023\u643a\u3092\u3059\u308b\u304b\u300d\u306f\u74b0\u5883\u6b21\u7b2c\u306a\u306e\u3067\u3001\u3053\u3093\u306a\u65b9\u6cd5\u3082\u3042\u308b\u3088\u3001\u3063\u3066\u3060\u3051\u3067\u3059\u306a\n- \u8d85\u30e1\u30b8\u30e3\u30fc\u306a Nmap \u3092\u4f7f\u3063\u305f Inventory \u306e\u751f\u6210\u3001\u306a\u3093\u3066\u306e\u306f\u5272\u3068\u30dd\u30d4\u30e5\u30e9\u30fc\u306a\u624b\u6cd5\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u4f7f\u3048\u3070\u540c\u3058\u3053\u3068+\u30a2\u30eb\u30d5\u30a1\u304c\u51fa\u6765\u307e\u3059(\u3044\u305a\u308c\u3082\u5185\u90e8\u7684\u306b\u306f Nmap \u3092\u4f7f\u3063\u3066\u3044\u308b\u6a21\u69d8)\n    - [Open-AudIT](http://www.open-audit.org/)\n        - JSON, xlsx, pdf \u5f62\u5f0f\u306a\u3069\u3067\u60c5\u5831\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3067\u304d\u308b\u3089\u3057\u3044\n        - \u672c\u9805\u306e Discovery \u30ec\u30d9\u30eb\u306e\u8a71\u306f\u5168\u90e8\u3067\u304d\u305d\u3046\n    - [\u30ed\u30fc\u30ec\u30d9\u30eb\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea | Zabbix 2.2](https://www.zabbix.com/documentation/2.2/jp/manual/discovery/low_level_discovery)\n        - SNMP \u9023\u643a\u3067\u304d\u308b\u30c7\u30a3\u30b9\u30ab\u30d0\u30ea\u3063\u3066\u70b9\u3067\u306f\u3001\u7269\u7406 NW \u6a5f\u5668\u3092\u4e00\u5143\u7ba1\u7406\u3059\u308b\u5834\u5408\u306b\u306f\u3001\u3053\u308c\u304c\u30de\u30c3\u30c1\u3059\u308b\u6c17\u304c\u3059\u308b\n- \u305f\u3060\u307e\u3042\u3001\u3082\u3063\u3068\u624b\u8efd\u306b\u2026\u3068\u304b\u3001\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u306e\u66f8\u5f0f\u3092\u4efb\u610f\u306b\u4f5c\u308a\u305f\u3044(\u4ed6\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067\u4f7f\u3046\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u751f\u6210\u3068\u304b)\u3068\u304b\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3001\u4f7f\u3048\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u306d\n    - \u751f\u3067 Nmap \u53e9\u3044\u3066 xml \u3092\u30b5\u30af\u30c3\u3068\u30d1\u30fc\u30b9\u3059\u308c\u3070\u30e9\u30a4\u30d6\u30e9\u30ea\u3055\u3048\u4f7f\u3046\u5fc5\u8981\u306a\u3044\u306e\u3067\u3059\u304c\u2026\n- Nmap 7.0 \u306e\u65b0\u6a5f\u80fd\u3092\u4e00\u5207\u89e6\u3063\u3066\u306a\u3044\u3058\u3083\u306d\u3047\u304b\uff01\n", "tags": ["Network", "Ruby", "Ansible"]}