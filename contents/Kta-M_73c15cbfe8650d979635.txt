{"tags": ["AWS", "cognito", "S3", "iOS", "Objective-C"], "context": " More than 1 year has passed since last update.iOS\u30a2\u30d7\u30ea\u306e\u30ed\u30b0\u53ce\u96c6\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u306e\u3067\u307e\u3068\u3081\u3002\n\u30bf\u30a4\u30c8\u30eb\u306e\u901a\u308a\u3001\u30ed\u30b0\u53ce\u96c6\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u30af\u30c3\u30af\u30d1\u30c3\u30c9\u69d8\u306ePuree\u3092\u4f7f\u3044\u3001\nCognito\u3067AWS\u306e\u8a8d\u8a3c\u3092\u884c\u3044\u3064\u3064S3\u306b\u30ed\u30b0\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305f\u3002\nPuree\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u3002\nPuree\u6982\u8981\nPuree iOS\u7248\u306e\u4f7f\u3044\u65b9\nCognito\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u3002\nCognito\u6982\u8981\nCognito\u8a2d\u5b9a\u65b9\u6cd5\n\n\u5b9f\u88c5\nObjective-C\u3067\u30b4\u30e1\u30f3\u30ca\u30b5\u30a4\u3002\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u5c0e\u5165\nCocoaPods\u306b\u3066\u3002\n  pod \"Puree\"\n  pod 'AWSiOSSDKv2'\n  pod 'AWSCognitoSync'\n\n$ pod install\n\n\nCognito\u306e\u8a8d\u8a3c\u90e8\u5206\u5b9f\u88c5\nAWS\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u3001\u3054\u4e01\u5be7\u306b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u8868\u793a\u3057\u3066\u304f\u308c\u308b\u306e\u3060\u3051\u308c\u3069\u3082\u2026\u3002\n\n\u3053\u3053\u306b\u8868\u793a\u3055\u308c\u308b\u30b3\u30fc\u30c9\u3092\u305d\u306e\u307e\u307e\u30b3\u30d4\u30da\u3059\u308b\u3068\u3001S3\u3078\u306e\u30c7\u30fc\u30bf\u8ee2\u9001\u6642\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3046\u307e\u304f\u52d5\u304b\u306a\u304b\u3063\u305f\u3002\nUpload failed: [Error Domain=com.amazonaws.AWSS3ErrorDomain Code=0 \"(null)\" UserInfo={HostId=XXXXXXXXXXXX}, Bucket=XXXXXXXXXXXX, Endpoint=XXXXXXXXXXXX.s3.amazonaws.com, Message=The bucket you are attempting to access must be addressed using the specified endpoint. Please send all future requests to this endpoint., Code=PermanentRedirect, RequestId=XXXXXXXXXXXX}]\n\n\u3044\u308d\u3044\u308d\u8a66\u884c\u932f\u8aa4\u3057\u305f\u7d50\u679c\u3001\u3069\u3046\u3084\u3089\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u5185\u3067AWSCognitoCredentialsProvider\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u3068AWSServiceConfiguration\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u304c\u98df\u3044\u9055\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u539f\u56e0\u3089\u3057\u3044\u3002\nAWSCognitoCredentialsProvider\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u7d71\u4e00\u3059\u308b\u3053\u3068\u3067\u3046\u307e\u304f\u3044\u304f\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n(\u4f55\u304b\u8a2d\u5b9a\u304c\u304a\u304b\u3057\u3044\u306e\u304b\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u30df\u30b9\u3063\u3066\u308b\u306e\u304b\u2026\uff1f)\n\u4eca\u56de\u306fAWSRegionAPNortheast1\u3060\u3063\u305f\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63\u3002\n- AWSServiceConfiguration *configuration = [[AWSServiceConfiguration alloc] initWithRegion:AWSRegionUSEast1 credentialsProvider:credentialsProvider];\n+ AWSServiceConfiguration *configuration = [[AWSServiceConfiguration alloc] initWithRegion:AWSRegionAPNortheast1 credentialsProvider:credentialsProvider];\n\n\nS3\u3078\u306e\u30ed\u30b0\u8ee2\u9001\u30af\u30e9\u30b9\u5b9f\u88c5\nS3\u3078\u306e\u8ee2\u9001\u306b\u306f\u3001AWSS3TransferManager\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3002\u3067\u3082\u3053\u308c\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u304b\u3067\u304d\u306a\u3044\u3002\n\u305d\u3053\u3067NSData\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u76f4\u63a5\u8ee2\u9001\u30c7\u30fc\u30bf\u3068\u3057\u3066\u6307\u5b9a\u3067\u304d\u305f\u308a\u3059\u308bAmazon S3 Transfer Utility\u3068\u3044\u3046\u306e\u304c\u3067\u304d\u3066\u308b\u3002\n\uff08\u30d0\u30a4\u30ca\u30ea\u3092\u76f4\u63a5\u8ee2\u9001\u3057\u3066\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3066\u3001\u88cf\u3067\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u304b\u3089\u8ee2\u9001\u3057\u3066\u308b\u3002\uff09\n\u305f\u3060\u3057\u4eca\u306e\u3068\u3053\u308dBeta\u7248\u3002\n\u4f7f\u3063\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u5148\u306eCognito\u306e\u30a8\u30e9\u30fc\u306b\u3088\u3063\u3066\u8ee2\u9001\u3067\u304d\u3066\u306a\u3044\u306b\u3082\u95a2\u308f\u3089\u305a\u3001\u30a8\u30e9\u30fc\u7121\u3057\u3067\u5b8c\u4e86\u3057\u305f\uff01\u3063\u3066\u306a\u308b\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u898b\u9001\u308a\u3002\u3082\u3061\u308d\u3093\u672c\u5f53\u306b\u30a8\u30e9\u30fc\u304c\u306a\u3051\u308c\u3070\u8ee2\u9001\u81ea\u4f53\u306f\u3067\u304d\u308b\u3051\u308c\u3069\u3082\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u53c2\u8003\u306b\u30c7\u30fc\u30bf\u8ee2\u9001\u90e8\u5206\u3092\u5b9f\u88c5\u3057\u3064\u3064\u3001\nhttps://github.com/awslabs/aws-sdk-ios-samples/blob/master/S3TransferManager-Sample/Objective-C/S3TransferManagerSample/UploadViewController.m\n\u4ee5\u4e0b\u306eAmazon S3 Transfer Utility\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3001\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210\u3001\u524a\u9664\u51e6\u7406\u3092\u304f\u3063\u3064\u3051\u305f\u3002\nhttps://github.com/aws/aws-sdk-ios/blob/master/AWSS3/AWSS3TransferUtility.m\n\u305d\u308c\u3067\u3067\u304d\u305f\u306e\u304c\u30b3\u30c1\u30e9\u3002\n@interface DataUploader: NSObject\n\n-(id)initWithBucket:(NSString*)bucket;\n-(void)uploadWithObjectKey:(NSString*)objectKey dataToUpload:(NSData*)data completion:(void(^)(BOOL))callback;\n-(void)cleanUpTemporaryDirectory;\n\n@property (strong, nonatomic) NSString *temporaryDirectoryPath;\n@property (strong, nonatomic) NSString *bucketName;\n@end\n\n#import <AWSS3/AWSS3.h>\n\nNSString *const DataUploaderIdentifier = @\"DataUploaderIdentifier\";\nNSTimeInterval const TimeoutIntervalForTempLogfile = 60 * 60; // 1hours\n\n@implementation DataUploader\n\n-(id)initWithBucket:(NSString*)bucket\n{\n    if (self = [super init]) {\n\n        // \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u7528\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\n        _temporaryDirectoryPath = [NSTemporaryDirectory() stringByAppendingPathComponent:[DataUploaderIdentifier aws_md5String]];\n        NSURL *directoryURL = [NSURL fileURLWithPath:_temporaryDirectoryPath];\n        NSError *error = nil;\n        BOOL result = [[NSFileManager defaultManager] createDirectoryAtURL:directoryURL\n                                               withIntermediateDirectories:YES\n                                                                attributes:nil\n                                                                     error:&error];\n        if (!result) {\n            AWSLogError(@\"Failed to create a temporary directory: %@\", error);\n        }\n\n        // \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u4e0d\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\n        __weak DataUploader *weakSelf = self;\n        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_BACKGROUND, 0), ^{\n            [weakSelf cleanUpTemporaryDirectory];\n        });\n\n        // \u30d0\u30b1\u30c3\u30c8\u540d\u4fdd\u5b58\n        _bucketName = bucket;\n    }\n    return self;\n}\n\n// S3\u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\n-(void)uploadWithObjectKey:(NSString*)objectKey dataToUpload:(NSData*)data completion:(void(^)(BOOL))callback\n{\n    // \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u751f\u6210\n    NSString *fileName = [NSString stringWithFormat:@\"%@.tmp\", [[NSProcessInfo processInfo] globallyUniqueString]];\n    NSString *filePath = [_temporaryDirectoryPath stringByAppendingPathComponent:fileName];\n    NSFileManager *fileManager = [NSFileManager defaultManager];\n    BOOL result = [fileManager fileExistsAtPath:filePath];\n    if(!result){\n        NSFileManager *fileManager = [NSFileManager defaultManager];\n        result = [fileManager createFileAtPath:filePath contents:[NSData data] attributes:nil];\n        if(!result){\n            NSLog(@\"Failed to create file: %s\", strerror(errno));\n            callback(NO);\n            return;\n        }\n    }\n    NSFileHandle *fileHandle = [NSFileHandle fileHandleForWritingAtPath:filePath];\n    if(!fileHandle){\n        NSLog(@\"Failed to create file handle: %s\", strerror(errno));\n        callback(NO);\n        return;\n    }\n\n    [fileHandle writeData:data];\n    [fileHandle synchronizeFile];\n    [fileHandle closeFile];\n    NSURL *url = [NSURL fileURLWithPath:filePath];\n\n    // S3\u3078\u306e\u8ee2\u9001\u30ea\u30af\u30a8\u30b9\u30c8\u751f\u6210\n    AWSS3TransferManagerUploadRequest *uploadRequest = [AWSS3TransferManagerUploadRequest new];\n    uploadRequest.body = url;\n    uploadRequest.key = objectKey;\n    uploadRequest.bucket = self.bucketName;\n    uploadRequest.contentType = @\"text/plain\";\n\n    // S3\u3078\u306e\u8ee2\u9001\n    AWSS3TransferManager *transferManager = [AWSS3TransferManager defaultS3TransferManager];\n    [[transferManager upload:uploadRequest] continueWithBlock:^id(AWSTask *task) {\n        if (task.error) {\n            NSLog(@\"Failed to upload log data: %@\", task.error);\n            callback(NO);\n        }\n        if (task.result) {\n            dispatch_async(dispatch_get_main_queue(), ^{\n                NSLog(@\"Scucess to upload log data!\");\n                callback(YES);\n            });\n        }\n        return nil;\n    }];\n}\n\n// \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u3066\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u4e0d\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\n- (void)cleanUpTemporaryDirectory {\n    NSError *error = nil;\n    NSArray *contentsOfDirectory = [[NSFileManager defaultManager] contentsOfDirectoryAtPath:self.temporaryDirectoryPath\n                                                                                       error:&error];\n    if (!contentsOfDirectory) {\n        AWSLogError(@\"Failed to retrieve the contents of the tempoprary directory: %@\", error);\n    }\n\n    // \u4e00\u6642\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5168\u3066\u30c1\u30a7\u30c3\u30af\n    __weak DataUploader *weakSelf = self;\n    [contentsOfDirectory enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {\n        NSString *fileName = (NSString *)obj;\n        NSString *filePath = [weakSelf.temporaryDirectoryPath stringByAppendingPathComponent:fileName];\n        NSError *error = nil;\n        NSDictionary *attributes = [[NSFileManager defaultManager] attributesOfItemAtPath:filePath\n                                                                                    error:&error];\n        if (!attributes) {\n            AWSLogError(@\"Failed to load temporary file attributes: %@\", error);\n        }\n        NSDate *fileCreationDate = [attributes objectForKey:NSFileCreationDate];\n\n        // \u4f5c\u6210\u3055\u308c\u3066\u304b\u3089\u4e00\u6642\u9593\u4ee5\u4e0a\u7d4c\u904e\u3057\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\n        if ([fileCreationDate timeIntervalSince1970] < [[NSDate date] timeIntervalSince1970] - TimeoutIntervalForTempLogfile) {\n            BOOL result = [[NSFileManager defaultManager] removeItemAtPath:filePath\n                                                                     error:&error];\n            if (!result) {\n                AWSLogError(@\"Failed to remove a temporary file: %@\", error);\n            }\n        }\n    }];\n}\n\n@end\n\nAmazon S3 Transfer Utility\u3092\u4f7f\u3046\u5834\u5408\u306e\u30b3\u30fc\u30c9\u3082\u4f5c\u3063\u305f\u306e\u3067\u4e00\u5fdc\u4e0a\u3052\u3066\u304a\u304f\u3002\nuploadWithObjectKey:dataToUpload:completion\u3092\u4ee5\u4e0b\u306b\u5dee\u3057\u66ff\u3048\u308b\u3068\u52d5\u304f\u306f\u305a\u3002\n\u307e\u305f\u3053\u306e\u5834\u5408\u3001\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u95a2\u9023\u306e\u51e6\u7406\uff08initWithBucket\u306e\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\u51e6\u7406/\u30d5\u30a1\u30a4\u30eb\u524a\u9664\u51e6\u7406\u3001cleanUpTemporaryDirectory\uff09\u306fAmazon S3 Transfer Utility\u304c\u3084\u3063\u3066\u304f\u308c\u308b\u306e\u3067\u4e0d\u8981\u306b\u306a\u308b\u3002\n-(void)uploadWithObjectKey:(NSString*)objectKey dataToUpload:(NSData*)data completion:(void(^)(BOOL))callback\n{\n    AWSS3TransferUtilityUploadExpression *expression = [AWSS3TransferUtilityUploadExpression new];\n    expression.uploadProgress = ^(AWSS3TransferUtilityTask *task, int64_t bytesSent, int64_t totalBytesSent, int64_t totalBytesExpectedToSend) {\n        dispatch_async(dispatch_get_main_queue(), ^{});\n    };\n\n    AWSS3TransferUtilityUploadCompletionHandlerBlock completionHandler = ^(AWSS3TransferUtilityUploadTask *task, NSError *error) {\n        dispatch_async(dispatch_get_main_queue(), ^{\n            if (error) {\n                NSLog(@\"Failed to upload log data: %@\", error);\n                callback(NO);\n            }\n            else {\n                NSLog(@\"scucess to upload log data!\");\n                callback(YES);\n            }\n        });\n    };\n\n    AWSS3TransferUtility *transferUtility = [AWSS3TransferUtility defaultS3TransferUtility];\n    [[transferUtility uploadData:data\n                          bucket:self.bucketName\n                             key:objectKey\n                     contentType:@\"text/plain\"\n                      expression:expression\n                completionHander:completionHandler] continueWithBlock:^id(AWSTask *task) {\n        if (task.error) {\n            NSLog(@\"Error: %@\", task.error);\n            callback(NO);\n        }\n        if (task.exception) {\n            NSLog(@\"Exception: %@\", task.exception);\n            callback(NO);\n        }\n\n        return nil;\n    }];\n}\n\n\nPuree\u3078\u306e\u5c0e\u5165\nConfiguration\u306e\u8a2d\u5b9a\u3068\u3001Filter, BufferOutput\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u5b9f\u88c5\u306f\u516c\u5f0f\u306e\u8aac\u660e\u901a\u308a\u306b\u3084\u308c\u3070\u554f\u984c\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u5272\u611b\u3002\n\u3053\u3053\u3067\u306f\u4e0a\u306b\u66f8\u3044\u305fDataUploader\u30af\u30e9\u30b9\u306e\u4f7f\u3044\u65b9\u306e\u307f\u3002\n// BufferOutput\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30af\u30e9\u30b9\u306b\u3066\u3002\n- (void)writeChunk:(PURBufferedOutputChunk *)chunk completion:(void (^)(BOOL))completion\n{\n    // S3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30ed\u30b0\u30c7\u30fc\u30bf\u751f\u6210\n    NSData *logData = \u3010\u30ed\u30b0\u30c7\u30fc\u30bf\u751f\u6210\u51e6\u7406\u3011;\n    // S3\u3067\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u30ad\u30fc\u3092\u751f\u6210\n    NSString *objectKey = \u3010\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ad\u30fc\u3011;\n\n    // \u9001\u4fe1\n    DataUploader *dataUploader = [[DataUploader alloc] initWithBucket:\u3010\u30d0\u30b1\u30c3\u30c8\u540d\u3011];\n    [dataUploader uploadWithObjectKey:objectKey dataToUpload:logs completion:^(BOOL result) { completion(result); }];\n}\n\n\niOS\u30a2\u30d7\u30ea\u306e\u30ed\u30b0\u53ce\u96c6\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u306e\u3067\u307e\u3068\u3081\u3002\n\u30bf\u30a4\u30c8\u30eb\u306e\u901a\u308a\u3001\u30ed\u30b0\u53ce\u96c6\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u30af\u30c3\u30af\u30d1\u30c3\u30c9\u69d8\u306ePuree\u3092\u4f7f\u3044\u3001\nCognito\u3067AWS\u306e\u8a8d\u8a3c\u3092\u884c\u3044\u3064\u3064S3\u306b\u30ed\u30b0\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305f\u3002\n\nPuree\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u3002\n[Puree\u6982\u8981](http://techlife.cookpad.com/entry/2014/11/25/132008)\n[Puree iOS\u7248\u306e\u4f7f\u3044\u65b9](http://techlife.cookpad.com/entry/2014/11/25/132008)\n\nCognito\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u3002\n[Cognito\u6982\u8981](https://aws.amazon.com/jp/cognito/)\n[Cognito\u8a2d\u5b9a\u65b9\u6cd5](http://dev.classmethod.jp/cloud/aws/amazon-cognito-update-20150120/)\n\n## \u5b9f\u88c5\nObjective-C\u3067\u30b4\u30e1\u30f3\u30ca\u30b5\u30a4\u3002\n\n### \u30e9\u30a4\u30d6\u30e9\u30ea\u5c0e\u5165\nCocoaPods\u306b\u3066\u3002\n\n``` Podfile\n  pod \"Puree\"\n  pod 'AWSiOSSDKv2'\n  pod 'AWSCognitoSync'\n```\n\n```\n$ pod install\n```\n\n### Cognito\u306e\u8a8d\u8a3c\u90e8\u5206\u5b9f\u88c5\n\nAWS\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u3001\u3054\u4e01\u5be7\u306b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u8868\u793a\u3057\u3066\u304f\u308c\u308b\u306e\u3060\u3051\u308c\u3069\u3082\u2026\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_2015-10-19_9_52_12.png](https://qiita-image-store.s3.amazonaws.com/0/39565/31027d46-5a7b-81d9-4a0f-6c28a9bad4a0.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_2015-10-19_9_52_12.png\")\n\n\n\u3053\u3053\u306b\u8868\u793a\u3055\u308c\u308b\u30b3\u30fc\u30c9\u3092\u305d\u306e\u307e\u307e\u30b3\u30d4\u30da\u3059\u308b\u3068\u3001S3\u3078\u306e\u30c7\u30fc\u30bf\u8ee2\u9001\u6642\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3046\u307e\u304f\u52d5\u304b\u306a\u304b\u3063\u305f\u3002\n\n```\nUpload failed: [Error Domain=com.amazonaws.AWSS3ErrorDomain Code=0 \"(null)\" UserInfo={HostId=XXXXXXXXXXXX}, Bucket=XXXXXXXXXXXX, Endpoint=XXXXXXXXXXXX.s3.amazonaws.com, Message=The bucket you are attempting to access must be addressed using the specified endpoint. Please send all future requests to this endpoint., Code=PermanentRedirect, RequestId=XXXXXXXXXXXX}]\n```\n\n\u3044\u308d\u3044\u308d\u8a66\u884c\u932f\u8aa4\u3057\u305f\u7d50\u679c\u3001\u3069\u3046\u3084\u3089\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u5185\u3067`AWSCognitoCredentialsProvider`\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u3068`AWSServiceConfiguration`\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u304c\u98df\u3044\u9055\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u539f\u56e0\u3089\u3057\u3044\u3002\n`AWSCognitoCredentialsProvider`\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u7d71\u4e00\u3059\u308b\u3053\u3068\u3067\u3046\u307e\u304f\u3044\u304f\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n(\u4f55\u304b\u8a2d\u5b9a\u304c\u304a\u304b\u3057\u3044\u306e\u304b\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u30df\u30b9\u3063\u3066\u308b\u306e\u304b\u2026\uff1f)\n\n\u4eca\u56de\u306fAWSRegionAPNortheast1\u3060\u3063\u305f\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63\u3002\n\n```\n- AWSServiceConfiguration *configuration = [[AWSServiceConfiguration alloc] initWithRegion:AWSRegionUSEast1 credentialsProvider:credentialsProvider];\n+ AWSServiceConfiguration *configuration = [[AWSServiceConfiguration alloc] initWithRegion:AWSRegionAPNortheast1 credentialsProvider:credentialsProvider];\n```\n\n### S3\u3078\u306e\u30ed\u30b0\u8ee2\u9001\u30af\u30e9\u30b9\u5b9f\u88c5\nS3\u3078\u306e\u8ee2\u9001\u306b\u306f\u3001AWSS3TransferManager\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3002\u3067\u3082\u3053\u308c\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u304b\u3067\u304d\u306a\u3044\u3002\n\n\u305d\u3053\u3067`NSData`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u76f4\u63a5\u8ee2\u9001\u30c7\u30fc\u30bf\u3068\u3057\u3066\u6307\u5b9a\u3067\u304d\u305f\u308a\u3059\u308b[Amazon S3 Transfer Utility](http://docs.aws.amazon.com/mobile/sdkforios/developerguide/s3transferutility.html)\u3068\u3044\u3046\u306e\u304c\u3067\u304d\u3066\u308b\u3002\n\uff08\u30d0\u30a4\u30ca\u30ea\u3092\u76f4\u63a5\u8ee2\u9001\u3057\u3066\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3066\u3001\u88cf\u3067\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u304b\u3089\u8ee2\u9001\u3057\u3066\u308b\u3002\uff09\n\u305f\u3060\u3057\u4eca\u306e\u3068\u3053\u308dBeta\u7248\u3002\n\u4f7f\u3063\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u5148\u306eCognito\u306e\u30a8\u30e9\u30fc\u306b\u3088\u3063\u3066\u8ee2\u9001\u3067\u304d\u3066\u306a\u3044\u306b\u3082\u95a2\u308f\u3089\u305a\u3001\u30a8\u30e9\u30fc\u7121\u3057\u3067\u5b8c\u4e86\u3057\u305f\uff01\u3063\u3066\u306a\u308b\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u898b\u9001\u308a\u3002\u3082\u3061\u308d\u3093\u672c\u5f53\u306b\u30a8\u30e9\u30fc\u304c\u306a\u3051\u308c\u3070\u8ee2\u9001\u81ea\u4f53\u306f\u3067\u304d\u308b\u3051\u308c\u3069\u3082\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u53c2\u8003\u306b\u30c7\u30fc\u30bf\u8ee2\u9001\u90e8\u5206\u3092\u5b9f\u88c5\u3057\u3064\u3064\u3001\nhttps://github.com/awslabs/aws-sdk-ios-samples/blob/master/S3TransferManager-Sample/Objective-C/S3TransferManagerSample/UploadViewController.m\n\u4ee5\u4e0b\u306e`Amazon S3 Transfer Utility`\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3001\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210\u3001\u524a\u9664\u51e6\u7406\u3092\u304f\u3063\u3064\u3051\u305f\u3002\nhttps://github.com/aws/aws-sdk-ios/blob/master/AWSS3/AWSS3TransferUtility.m\n\n\u305d\u308c\u3067\u3067\u304d\u305f\u306e\u304c\u30b3\u30c1\u30e9\u3002\n\n```\n@interface DataUploader: NSObject\n\n-(id)initWithBucket:(NSString*)bucket;\n-(void)uploadWithObjectKey:(NSString*)objectKey dataToUpload:(NSData*)data completion:(void(^)(BOOL))callback;\n-(void)cleanUpTemporaryDirectory;\n\n@property (strong, nonatomic) NSString *temporaryDirectoryPath;\n@property (strong, nonatomic) NSString *bucketName;\n@end\n```\n\n```\n#import <AWSS3/AWSS3.h>\n\nNSString *const DataUploaderIdentifier = @\"DataUploaderIdentifier\";\nNSTimeInterval const TimeoutIntervalForTempLogfile = 60 * 60; // 1hours\n\n@implementation DataUploader\n\n-(id)initWithBucket:(NSString*)bucket\n{\n    if (self = [super init]) {\n        \n        // \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u7528\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\n        _temporaryDirectoryPath = [NSTemporaryDirectory() stringByAppendingPathComponent:[DataUploaderIdentifier aws_md5String]];\n        NSURL *directoryURL = [NSURL fileURLWithPath:_temporaryDirectoryPath];\n        NSError *error = nil;\n        BOOL result = [[NSFileManager defaultManager] createDirectoryAtURL:directoryURL\n                                               withIntermediateDirectories:YES\n                                                                attributes:nil\n                                                                     error:&error];\n        if (!result) {\n            AWSLogError(@\"Failed to create a temporary directory: %@\", error);\n        }\n        \n        // \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u4e0d\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\n        __weak DataUploader *weakSelf = self;\n        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_BACKGROUND, 0), ^{\n            [weakSelf cleanUpTemporaryDirectory];\n        });\n        \n        // \u30d0\u30b1\u30c3\u30c8\u540d\u4fdd\u5b58\n        _bucketName = bucket;\n    }\n    return self;\n}\n\n// S3\u3078\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\n-(void)uploadWithObjectKey:(NSString*)objectKey dataToUpload:(NSData*)data completion:(void(^)(BOOL))callback\n{\n    // \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u751f\u6210\n    NSString *fileName = [NSString stringWithFormat:@\"%@.tmp\", [[NSProcessInfo processInfo] globallyUniqueString]];\n    NSString *filePath = [_temporaryDirectoryPath stringByAppendingPathComponent:fileName];\n    NSFileManager *fileManager = [NSFileManager defaultManager];\n    BOOL result = [fileManager fileExistsAtPath:filePath];\n    if(!result){\n        NSFileManager *fileManager = [NSFileManager defaultManager];\n        result = [fileManager createFileAtPath:filePath contents:[NSData data] attributes:nil];\n        if(!result){\n            NSLog(@\"Failed to create file: %s\", strerror(errno));\n            callback(NO);\n            return;\n        }\n    }\n    NSFileHandle *fileHandle = [NSFileHandle fileHandleForWritingAtPath:filePath];\n    if(!fileHandle){\n        NSLog(@\"Failed to create file handle: %s\", strerror(errno));\n        callback(NO);\n        return;\n    }\n    \n    [fileHandle writeData:data];\n    [fileHandle synchronizeFile];\n    [fileHandle closeFile];\n    NSURL *url = [NSURL fileURLWithPath:filePath];\n    \n    // S3\u3078\u306e\u8ee2\u9001\u30ea\u30af\u30a8\u30b9\u30c8\u751f\u6210\n    AWSS3TransferManagerUploadRequest *uploadRequest = [AWSS3TransferManagerUploadRequest new];\n    uploadRequest.body = url;\n    uploadRequest.key = objectKey;\n    uploadRequest.bucket = self.bucketName;\n    uploadRequest.contentType = @\"text/plain\";\n    \n    // S3\u3078\u306e\u8ee2\u9001\n    AWSS3TransferManager *transferManager = [AWSS3TransferManager defaultS3TransferManager];\n    [[transferManager upload:uploadRequest] continueWithBlock:^id(AWSTask *task) {\n        if (task.error) {\n            NSLog(@\"Failed to upload log data: %@\", task.error);\n            callback(NO);\n        }\n        if (task.result) {\n            dispatch_async(dispatch_get_main_queue(), ^{\n                NSLog(@\"Scucess to upload log data!\");\n                callback(YES);\n            });\n        }\n        return nil;\n    }];\n}\n\n// \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u3066\u3044\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u4e0d\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\n- (void)cleanUpTemporaryDirectory {\n    NSError *error = nil;\n    NSArray *contentsOfDirectory = [[NSFileManager defaultManager] contentsOfDirectoryAtPath:self.temporaryDirectoryPath\n                                                                                       error:&error];\n    if (!contentsOfDirectory) {\n        AWSLogError(@\"Failed to retrieve the contents of the tempoprary directory: %@\", error);\n    }\n    \n    // \u4e00\u6642\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5168\u3066\u30c1\u30a7\u30c3\u30af\n    __weak DataUploader *weakSelf = self;\n    [contentsOfDirectory enumerateObjectsUsingBlock:^(id obj, NSUInteger idx, BOOL *stop) {\n        NSString *fileName = (NSString *)obj;\n        NSString *filePath = [weakSelf.temporaryDirectoryPath stringByAppendingPathComponent:fileName];\n        NSError *error = nil;\n        NSDictionary *attributes = [[NSFileManager defaultManager] attributesOfItemAtPath:filePath\n                                                                                    error:&error];\n        if (!attributes) {\n            AWSLogError(@\"Failed to load temporary file attributes: %@\", error);\n        }\n        NSDate *fileCreationDate = [attributes objectForKey:NSFileCreationDate];\n        \n        // \u4f5c\u6210\u3055\u308c\u3066\u304b\u3089\u4e00\u6642\u9593\u4ee5\u4e0a\u7d4c\u904e\u3057\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\n        if ([fileCreationDate timeIntervalSince1970] < [[NSDate date] timeIntervalSince1970] - TimeoutIntervalForTempLogfile) {\n            BOOL result = [[NSFileManager defaultManager] removeItemAtPath:filePath\n                                                                     error:&error];\n            if (!result) {\n                AWSLogError(@\"Failed to remove a temporary file: %@\", error);\n            }\n        }\n    }];\n}\n\n@end\n```\n\nAmazon S3 Transfer Utility\u3092\u4f7f\u3046\u5834\u5408\u306e\u30b3\u30fc\u30c9\u3082\u4f5c\u3063\u305f\u306e\u3067\u4e00\u5fdc\u4e0a\u3052\u3066\u304a\u304f\u3002\n`uploadWithObjectKey:dataToUpload:completion`\u3092\u4ee5\u4e0b\u306b\u5dee\u3057\u66ff\u3048\u308b\u3068\u52d5\u304f\u306f\u305a\u3002\n\u307e\u305f\u3053\u306e\u5834\u5408\u3001\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u95a2\u9023\u306e\u51e6\u7406\uff08`initWithBucket`\u306e\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\u51e6\u7406/\u30d5\u30a1\u30a4\u30eb\u524a\u9664\u51e6\u7406\u3001`cleanUpTemporaryDirectory`\uff09\u306fAmazon S3 Transfer Utility\u304c\u3084\u3063\u3066\u304f\u308c\u308b\u306e\u3067\u4e0d\u8981\u306b\u306a\u308b\u3002\n\n```\n-(void)uploadWithObjectKey:(NSString*)objectKey dataToUpload:(NSData*)data completion:(void(^)(BOOL))callback\n{\n    AWSS3TransferUtilityUploadExpression *expression = [AWSS3TransferUtilityUploadExpression new];\n    expression.uploadProgress = ^(AWSS3TransferUtilityTask *task, int64_t bytesSent, int64_t totalBytesSent, int64_t totalBytesExpectedToSend) {\n        dispatch_async(dispatch_get_main_queue(), ^{});\n    };\n    \n    AWSS3TransferUtilityUploadCompletionHandlerBlock completionHandler = ^(AWSS3TransferUtilityUploadTask *task, NSError *error) {\n        dispatch_async(dispatch_get_main_queue(), ^{\n            if (error) {\n                NSLog(@\"Failed to upload log data: %@\", error);\n                callback(NO);\n            }\n            else {\n                NSLog(@\"scucess to upload log data!\");\n                callback(YES);\n            }\n        });\n    };\n    \n    AWSS3TransferUtility *transferUtility = [AWSS3TransferUtility defaultS3TransferUtility];\n    [[transferUtility uploadData:data\n                          bucket:self.bucketName\n                             key:objectKey\n                     contentType:@\"text/plain\"\n                      expression:expression\n                completionHander:completionHandler] continueWithBlock:^id(AWSTask *task) {\n        if (task.error) {\n            NSLog(@\"Error: %@\", task.error);\n            callback(NO);\n        }\n        if (task.exception) {\n            NSLog(@\"Exception: %@\", task.exception);\n            callback(NO);\n        }\n        \n        return nil;\n    }];\n}\n```\n\n### Puree\u3078\u306e\u5c0e\u5165\nConfiguration\u306e\u8a2d\u5b9a\u3068\u3001Filter, BufferOutput\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u5b9f\u88c5\u306f[\u516c\u5f0f\u306e\u8aac\u660e](http://techlife.cookpad.com/entry/2014/11/25/132008)\u901a\u308a\u306b\u3084\u308c\u3070\u554f\u984c\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u5272\u611b\u3002\n\u3053\u3053\u3067\u306f\u4e0a\u306b\u66f8\u3044\u305f`DataUploader`\u30af\u30e9\u30b9\u306e\u4f7f\u3044\u65b9\u306e\u307f\u3002\n\n```\n// BufferOutput\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30af\u30e9\u30b9\u306b\u3066\u3002\n- (void)writeChunk:(PURBufferedOutputChunk *)chunk completion:(void (^)(BOOL))completion\n{\n\t// S3\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u30ed\u30b0\u30c7\u30fc\u30bf\u751f\u6210\n    NSData *logData = \u3010\u30ed\u30b0\u30c7\u30fc\u30bf\u751f\u6210\u51e6\u7406\u3011;\n    // S3\u3067\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u30ad\u30fc\u3092\u751f\u6210\n    NSString *objectKey = \u3010\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ad\u30fc\u3011;\n    \n    // \u9001\u4fe1\n    DataUploader *dataUploader = [[DataUploader alloc] initWithBucket:\u3010\u30d0\u30b1\u30c3\u30c8\u540d\u3011];\n    [dataUploader uploadWithObjectKey:objectKey dataToUpload:logs completion:^(BOOL result) { completion(result); }];\n}\n```\n"}