{"tags": ["JavaScript", "three.js", "reactjs"], "context": "react-three-renderer\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001Three.js\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092JSX\u306e\u4e2d\u3067\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u3057\u3066\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nExample (w/redux)\nscene, camera, mesh\u306a\u3069Three.js\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304ccomponent\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u3066\u3001\u901a\u5e38\u306eReactComponent\u540c\u69d8\u306bsetState\u3067\u63cf\u753b\u304c\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u51e6\u7406\u306fonAnimate\u5185\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\nexample.jsx\nimport React from 'react';\nimport React3 from 'react-three-renderer';\nimport { connect } from 'react-redux'\nimport * as THREE from 'three';\nimport { fetchTexture } from '../actions/texture';\n\nconst pi = Math.PI;\nconst rad = pi / 180;\nconst width = window.innerWidth;\nconst height = window.innerHeight;\n\nclass Example extends React.Component {\n  state = {\n    dirZ: -1,\n    dirRad: rad,\n    planePosition: new THREE.Vector3(0, 0, 500),\n    planeRotation: new THREE.Euler(0, 0, 0)\n  };\n\n  cameraPosition = new THREE.Vector3(0, 100, 500);\n  lightPosition = new THREE.Vector3(0, 100, 30);\n\n  componentDidMount() {\n    this.props.fetchPhotosWithTexture();\n  }\n\n  onAnimate() {\n    this.setState({\n      planePosition: new THREE.Vector3(\n        this.state.planePosition.x,\n        this.state.planePosition.y,\n        this.state.planePosition.z + this.state.dirZ\n      ),\n      planeRotation: new THREE.Euler(\n        this.state.planeRotation.x + this.state.dirRad,\n        this.state.planeRotation.y,\n        this.state.planeRotation.z + this.state.dirRad\n      )\n    });\n  }\n\n  render() {\n    return (\n      <React3\n        mainCamera=\"camera\"\n        width={width}\n        height={height}\n        clearColor={0x000000}\n        pixelRatio={window.devicePixelRatio}\n        onAnimate={this.onAnimate.bind(this)}\n      >\n        <scene>\n          <directionalLight position={this.lightPosition} />\n          <ambientLight color={0xaaaaaa} />\n          <perspectiveCamera\n            name=\"camera\"\n            fov={45}\n            aspect={width / height}\n            near={1}\n            far={2000}\n            position={this.cameraPosition}\n          />\n          <gridHelper size={200} step={50} />\n          <axisHelper size={1000} />\n\n          {this.props.texture ?\n            <mesh\n              position={this.state.planePosition}\n              rotation={this.state.planeRotation}\n            >\n              <planeGeometry\n                width={this.props.texture.image.width / 2}\n                height={this.props.texture.image.height / 2}\n              />\n              <meshLambertMaterial\n                map={this.props.texture}\n                side={THREE.DoubleSide}\n              />\n            </mesh>\n          : null}\n        </scene>\n      </React3>\n    );\n  }\n}\n\nexport default connect(\n  state => ({ texture: state.texture }),\n  { fetchTexture }\n)(Example)\n\n\n\n\nDebug\n\u4fbf\u5229\u306a\u3053\u3068\u306bReact Developer Tools\u3082\u901a\u5e38\u306eReact.js\u3068\u540c\u3058\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\uff08\u3055\u3059\u304c\u306bprops, state\u306fReadOnly\u306b\u306a\u3063\u3066\u3044\u3066\u3053\u3061\u3089\u304b\u3089\u52d5\u7684\u306b\u5909\u3048\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u3067\u3059\u304c\uff09\n\n\n\u6240\u611f\n\u79c1\u306fReact.js\u88fd\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u306bThree.js\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306b\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001Three.js\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u69cb\u9020\u3092\u3088\u308a\u660e\u793a\u7684\u306b\u8a18\u8ff0\u3067\u304d\u308b\u306e\u306f\u826f\u3044\u3067\u3059\u306d\u3002React.js, Three.js\u3069\u3061\u3089\u3082\u89e6\u3063\u305f\u3053\u3068\u304c\u3042\u308c\u3070API Documentation\u3092\u898b\u308c\u3070\u3059\u3050\u306b\u66f8\u3051\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n[react-three-renderer](https://github.com/toxicFork/react-three-renderer)\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001Three.js\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092JSX\u306e\u4e2d\u3067\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u3057\u3066\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## Example (w/redux)\n\n`scene`, `camera`, `mesh`\u306a\u3069Three.js\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304ccomponent\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u3066\u3001\u901a\u5e38\u306eReactComponent\u540c\u69d8\u306bsetState\u3067\u63cf\u753b\u304c\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u51e6\u7406\u306f`onAnimate`\u5185\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```js:example.jsx\nimport React from 'react';\nimport React3 from 'react-three-renderer';\nimport { connect } from 'react-redux'\nimport * as THREE from 'three';\nimport { fetchTexture } from '../actions/texture';\n\nconst pi = Math.PI;\nconst rad = pi / 180;\nconst width = window.innerWidth;\nconst height = window.innerHeight;\n\nclass Example extends React.Component {\n  state = {\n    dirZ: -1,\n    dirRad: rad,\n    planePosition: new THREE.Vector3(0, 0, 500),\n    planeRotation: new THREE.Euler(0, 0, 0)\n  };\n\n  cameraPosition = new THREE.Vector3(0, 100, 500);\n  lightPosition = new THREE.Vector3(0, 100, 30);\n\n  componentDidMount() {\n    this.props.fetchPhotosWithTexture();\n  }\n\n  onAnimate() {\n    this.setState({\n      planePosition: new THREE.Vector3(\n        this.state.planePosition.x,\n        this.state.planePosition.y,\n        this.state.planePosition.z + this.state.dirZ\n      ),\n      planeRotation: new THREE.Euler(\n        this.state.planeRotation.x + this.state.dirRad,\n        this.state.planeRotation.y,\n        this.state.planeRotation.z + this.state.dirRad\n      )\n    });\n  }\n\n  render() {\n    return (\n      <React3\n        mainCamera=\"camera\"\n        width={width}\n        height={height}\n        clearColor={0x000000}\n        pixelRatio={window.devicePixelRatio}\n        onAnimate={this.onAnimate.bind(this)}\n      >\n        <scene>\n          <directionalLight position={this.lightPosition} />\n          <ambientLight color={0xaaaaaa} />\n          <perspectiveCamera\n            name=\"camera\"\n            fov={45}\n            aspect={width / height}\n            near={1}\n            far={2000}\n            position={this.cameraPosition}\n          />\n          <gridHelper size={200} step={50} />\n          <axisHelper size={1000} />\n\n          {this.props.texture ?\n            <mesh\n              position={this.state.planePosition}\n              rotation={this.state.planeRotation}\n            >\n              <planeGeometry\n                width={this.props.texture.image.width / 2}\n                height={this.props.texture.image.height / 2}\n              />\n              <meshLambertMaterial\n                map={this.props.texture}\n                side={THREE.DoubleSide}\n              />\n            </mesh>\n          : null}\n        </scene>\n      </React3>\n    );\n  }\n}\n\nexport default connect(\n  state => ({ texture: state.texture }),\n  { fetchTexture }\n)(Example)\n```\n\n![\u96d1\u306asample](https://qiita-image-store.s3.amazonaws.com/0/3939/33b7e73b-8f44-f0a7-d513-33c904d7f1fe.gif)\n\n\n## Debug\n\n\u4fbf\u5229\u306a\u3053\u3068\u306bReact Developer Tools\u3082\u901a\u5e38\u306eReact.js\u3068\u540c\u3058\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\uff08\u3055\u3059\u304c\u306bprops, state\u306fReadOnly\u306b\u306a\u3063\u3066\u3044\u3066\u3053\u3061\u3089\u304b\u3089\u52d5\u7684\u306b\u5909\u3048\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u3067\u3059\u304c\uff09\n\n<img width=\"1370\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-25 22.48.43.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/3939/eebac807-04fb-17d7-3e82-dcbe58abe628.png\">\n\n\n## \u6240\u611f\n\n\u79c1\u306fReact.js\u88fd\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u306bThree.js\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306b\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001Three.js\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u69cb\u9020\u3092\u3088\u308a\u660e\u793a\u7684\u306b\u8a18\u8ff0\u3067\u304d\u308b\u306e\u306f\u826f\u3044\u3067\u3059\u306d\u3002React.js, Three.js\u3069\u3061\u3089\u3082\u89e6\u3063\u305f\u3053\u3068\u304c\u3042\u308c\u3070[API Documentation](https://github.com/toxicFork/react-three-renderer/wiki/API-Reference)\u3092\u898b\u308c\u3070\u3059\u3050\u306b\u66f8\u3051\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n"}