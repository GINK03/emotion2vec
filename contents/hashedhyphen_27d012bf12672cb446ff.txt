{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u3067\u306f\u3001\u767a\u751f\u539f\u56e0\u3092\u4e8b\u524d\u306b\u628a\u63e1\u3067\u304d\u3066\u3044\u308b\u300c\u4f8b\u5916\u300d\u3067\u306f\u306a\u304f\u3001\uff08\u7279\u306b\u958b\u767a\u6bb5\u968e\u306b\u304a\u3044\u3066\u767a\u751f\u3059\u308b\uff09\u4e88\u60f3\u5916\u306e\u300c\u30a8\u30e9\u30fc\u300d\u3092\u4e3b\u306b\u53d6\u308a\u6271\u3044\u307e\u3059\u3002\n\n\u74b0\u5883\n\nNode v5.1.0\nbabel-core@6.2.4\nbabel-polyfill@6.2.4\nbabel-preset-stage-3@6.2.4\n\n\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u306e\u6319\u52d5\u306b\u3064\u3044\u3066\u306f\u307e\u3060\u78ba\u8a8d\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3002\n\ntl; dr\n\nasync function \u306e\u5185\u90e8\uff08await \u3092\u542b\u3080\u30d6\u30ed\u30c3\u30af\u5185\u90e8\uff09\u306b\u306f try-catch \u3092\u8a2d\u3051\u308b\u3002\nasync function \u306e\u547c\u3073\u51fa\u3057\u5143\u3078\u30a8\u30e9\u30fc\u3092 throw \u3057\u305f\u3044\u5834\u5408\u3001\u547c\u3073\u51fa\u3057\u5143\u3092 async/await \u306b\u5909\u66f4\u3057\u3066 try-catch \u3092\u8a2d\u3051\u3066\u304a\u304f\u3002\n\n\n\u524d\u63d0\n\u307e\u305a\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f8b\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\nbabel\nconst sub = () => {\n  throw new Error(`hum...`);\n  return `ok`;\n};\n\nconst main = () => {\n  const msg = sub();\n  console.log(msg);\n};\n\ntry {\n  main();\n} catch (err) {\n  console.error(`oops!`);\n}\n\n\n\n\u307e\u305a main \u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u7d9a\u3044\u3066 sub \u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u3001sub \u306e\u4e2d\u3067\u306f return \u3059\u308b\u524d\u306b\u4e88\u60f3\u5916\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u3068\u3057\u307e\u3059\u3002\u4e0a\u306e\u30b3\u30fc\u30c9\u306e\u5834\u5408\u3001\u4e00\u756a\u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u5143\u306b\u8a2d\u3051\u3089\u308c\u305f try-catch \u307e\u3067\u30a8\u30e9\u30fc\u304c\u4f1d\u642c\u3055\u308c\u3001\u5b9f\u884c\u7d50\u679c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\noutput\noops!\n\n\n\nasync/await \u3068\u30a8\u30e9\u30fc\u767a\u751f\u6642\u306e\u6319\u52d5\n\u4f8b\u3068\u3057\u3066\u3001sub \u306e\u51e6\u7406\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u5834\u5408\u3092\u8003\u3048\u307e\u3059\u3002\u6b63\u5e38\u7cfb\u306e\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nbabel\nimport 'babel-polyfill';\n\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(`ok`), 2000);\n  });\n};\n\nconst main = async () => {\n  const msg = await sub();\n  console.log(msg);\n};\n\ntry {\n  main();\n} catch (err) {\n  console.error(`oops!`);\n}\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u304a\u3088\u305d 2 \u79d2\u5f8c\u306b ok \u3068\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\noutput\nok\n\n\n\u3053\u3053\u304b\u3089\u306f\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u3088\u3063\u3066\u3069\u306e\u3088\u3046\u306a\u5dee\u7570\u304c\u73fe\u308c\u308b\u304b\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n1) \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u305f\u5f8c\u306b\u30a8\u30e9\u30fc\u767a\u751f\n\nbabel\nimport 'babel-polyfill';\n\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(`ok`), 2000);\n    throw new Error(`hum...`);\n  });\n};\n\nconst main = async () => {\n  const msg = await sub();\n  console.log(msg);\n};\n\ntry {\n  main();\n} catch (err) {\n  console.error(`oops!`);\n}\n\n\n\u3053\u306e\u5834\u5408\u3001\u304a\u3088\u305d 2 \u79d2\u306e\u30b9\u30ea\u30fc\u30d7\u304c\u3042\u3063\u305f\u306e\u3061\u3001\u4f55\u3082\u8868\u793a\u3055\u308c\u305a\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u7d42\u4e86\u3057\u307e\u3059\u3002\n\noutput\n\n\n\n2) \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9a\u7fa9\u3059\u308b\u524d\u306b\u30a8\u30e9\u30fc\u767a\u751f\n\nbabel\nimport 'babel-polyfill';\n\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    throw new Error(`hum...`);\n    setTimeout(() => resolve(`ok`), 2000);\n  });\n};\n\nconst main = async () => {\n  const msg = await sub();\n  console.log(msg);\n};\n\ntry {\n  main();\n} catch (err) {\n  console.error(`oops!`);\n}\n\n\n\u307e\u305f\u3082\u3084\u4f55\u3082\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u304c\u3001\u3053\u306e\u5834\u5408\u306f\u30b9\u30ea\u30fc\u30d7\u306a\u3057\u306b\u7d42\u4e86\u3057\u307e\u3059\u3002\n\noutput\n\n\n\n3) await \u306e\u5f8c\u306b\u4f8b\u5916\u767a\u751f\nawait \u3067\u53d7\u3051\u53d6\u3063\u305f\u7d50\u679c\u3092\u5143\u306b\u51e6\u7406\u3092\u884c\u3063\u305f\u3068\u304d\u306b\u3001\u4f55\u304b\u3057\u3089\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u30b1\u30fc\u30b9\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\nbabel\nimport 'babel-polyfill';\n\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(`ok`), 2000);\n  });\n};\n\nconst main = async () => {\n  const msg = await sub();\n\n  throw new Error(`hum...`);\n\n  console.log(msg);\n};\n\ntry {\n  main();\n} catch (err) {\n  console.error(`oops!`);\n}\n\n\nawait \u307e\u3067\u306f\u901a\u5e38\u901a\u308a\u306a\u305f\u3081\u3001\u6b63\u5e38\u7cfb\u3068\u540c\u3058\u304f 2 \u79d2\u306e\u5f85\u3061\u304c\u5165\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u3053\u306e\u5834\u5408\u3067\u3082\u30a8\u30e9\u30fc\u306f\u6355\u6349\u3055\u308c\u305a\u7d42\u4e86\u3057\u307e\u3059\u3002\n\noutput\n\n\n\nasync/await - try/catch \u3068 Promise - then/catch\n\u524d\u7bc0\u306e 1) \u3068 2) \u306e\u5834\u5408\u306b\u3064\u3044\u3066\u518d\u8003\u3057\u3066\u307f\u307e\u3059\u3002Promise \u5185\u90e8\u3067\u767a\u751f\u3057\u305f\u30a8\u30e9\u30fc\u306f\u81ea\u52d5\u7684\u306b try-catch \u3055\u308c\u3001Promise \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u72b6\u614b\u306f Rejected \u306b\u306a\u308a\u307e\u3059\uff08\u53c2\u8003: JavaScript Promise \u306e\u672c - 4.3. throw\u3057\u306a\u3044\u3067\u3001reject\u3057\u3088\u3046\uff09\u3002\n\u3059\u306a\u308f\u3061\u3001then/catch \u306e\u8a18\u6cd5\u306b\u304a\u3044\u3066\u306f Promise#catch \u306b\u51e6\u7406\u304c\u79fb\u884c\u3057\u307e\u3059\u3002\u3053\u3053\u3067 async/await \u3068 then/catch \u306e\u76f8\u4f3c\u6027\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u3001\u540c\u3058\u52d5\u4f5c\u7d50\u679c\u3092\u5f97\u308b 2 \u3064\u306e\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u4f75\u8a18\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nasync_await.js\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    // do stuff\n  });\n};\n\nconst main = async () => {\n  try {\n    const result = await sub();\n    console.log(result);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n\n\nthen_catch.js\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    // do stuff\n  });\n};\n\nconst main = () => {\n  return new Promise((resolve, reject) => {\n    sub().then((result) => {\n      console.log(result);\n    }).catch((err) => {\n      console.error(err);\n    });\n  });\n};\n\n\n\u5f93\u3063\u3066\u3001await \u304c\u542b\u307e\u308c\u3066\u3044\u308b\u30d6\u30ed\u30c3\u30af\uff08async \u3092\u4ed8\u4e0e\u3057\u3066\u3044\u308b\u95a2\u6570\u306e\u5185\u90e8\uff09\u306b try-catch \u3092\u8a2d\u3051\u308c\u3070\u30a8\u30e9\u30fc\u3092\u6355\u6349\u3067\u304d\u307e\u3059\u3002\nimport 'babel-polyfill';\n\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(`ok`), 2000);\n    throw new Error(`hum...`);\n  });\n};\n\nconst main = async () => {\n  try {\n    const msg = await sub();\n    console.log(msg);\n  } catch (err) {\n    console.error(`gotcha!`);\n  }\n};\n\ntry {\n  main();\n} catch (err) {\n  console.error(`oops!`);\n}\n\n\u3053\u308c\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u78ba\u304b\u306b\u30a8\u30e9\u30fc\u3092\u88dc\u8db3\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\noutput\ngotcha!\n\n\nasync function \u306e\u4e2d\u3067 try-catch \u3092\u8a2d\u3051\u3066\u304a\u3051\u3070\u3001\u524d\u7bc0\u306e 3) \u306b\u3082\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\u3055\u3066\u3001\u3082\u3057 main \u3092\u56f2\u3093\u3067\u3044\u308b try-catch \u306b\u3082\u30a8\u30e9\u30fc\u3092\u4f1d\u642c\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u305d\u308c\u306b\u306f\u4ee5\u4e0b\u306e 2 \u3064\u304c\u76f8\u4f3c\u3067\u3042\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\nasync_function\nconst func = async () => {\n  // do stuff\n}\n\n\n\npromise_function\nconst func = () => {\n  return new Promise((resolve, reject) => {\n    // do stuff\n  });\n}\n\n\n\u3064\u307e\u308a\u3001async function \u306f Promise \u3092\u8fd4\u3059\u95a2\u6570\u3067\u3042\u308b\u305f\u3081\u3001\u305d\u306e\u5185\u90e8\u3067\u30a8\u30e9\u30fc\u3092 throw \u3057\u3001\u547c\u3073\u51fa\u3057\u5074\u306b\u304a\u3044\u3066\u51e6\u7406\u7d50\u679c\u3092 async/await \u3067\u53d7\u3051\u308c\u3070\u3001\u547c\u3073\u51fa\u3057\u5143\u306e try-catch \u306b\u88dc\u8db3\u3055\u308c\u307e\u3059\uff08\u3053\u3053\u3067\u8003\u3048\u3066\u3044\u308b\u306e\u306f\u4e88\u60f3\u5916\u306b\u767a\u751f\u3059\u308b\u30a8\u30e9\u30fc\u3067\u3059\u3002\u3042\u3089\u304b\u3058\u3081\u628a\u63e1\u3067\u304d\u3066\u3044\u308b\u7570\u5e38\u7cfb\u52d5\u4f5c\u306b\u5bfe\u3059\u308b\u4f8b\u5916\u9001\u51fa\u306f Promise.reject \u3092\u4f7f\u3046\u3079\u304d\u3067\u3059\uff09\u3002\n\nbabel\nimport 'babel-polyfill';\n\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(`ok`), 2000);\n    throw new Error(`hum...`);\n  });\n};\n\nconst main = async () => {\n  try {\n    const msg = await sub();\n    console.log(msg);\n  } catch (err) {\n    console.error(`gotcha!`);\n    reject(err);\n  }\n};\n\n(async () => {\n  try {\n    await main();\n  } catch (err) {\n    console.error(`oops!`);\n  }\n})();\n\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u30012 \u3064\u306e catch \u3067\u30a8\u30e9\u30fc\u304c\u6355\u6349\u3055\u308c\u3066\u3044\u308b\u306e\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\nbash:output\ngotcha!\noops!\n\n\n\u307e\u3068\u3081\n\nasync function \u306f Promise \u3092\u8fd4\u3059\u95a2\u6570\u3068\u76f8\u4f3c\u3067\u3042\u308b\u3002\nasync function \u306e\u5185\u90e8\uff08await \u3092\u542b\u3080\u30d6\u30ed\u30c3\u30af\u5185\u90e8\uff09\u306b\u306f try-catch \u3092\u8a2d\u3051\u308b\u3002\nasync function \u306e\u547c\u3073\u51fa\u3057\u5143\u3078\u30a8\u30e9\u30fc\u3092 throw \u3057\u305f\u3044\u5834\u5408\u3001\u547c\u3073\u51fa\u3057\u5143\u3092 async/await \u306b\u5909\u66f4\u3057\u3066 try-catch \u3092\u8a2d\u3051\u3066\u304a\u304f\u3002\n\n\n\u53c2\u8003\u30b5\u30a4\u30c8\n\n\nAsync Functions\uff08TC39 Stage3 Draft\uff09\nJavaScript Promise \u306e\u672c\nES async/await\u3092\u5168\u529b\u3067\u4f7f\u3063\u3066\u307f\u3066\u767a\u898b\u3057\u305f\u30a4\u30c7\u30a3\u30aa\u30e0\n\n## \u306f\u3058\u3081\u306b\n\n\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u3067\u306f\u3001\u767a\u751f\u539f\u56e0\u3092\u4e8b\u524d\u306b\u628a\u63e1\u3067\u304d\u3066\u3044\u308b\u300c\u4f8b\u5916\u300d\u3067\u306f\u306a\u304f\u3001\uff08\u7279\u306b\u958b\u767a\u6bb5\u968e\u306b\u304a\u3044\u3066\u767a\u751f\u3059\u308b\uff09\u4e88\u60f3\u5916\u306e\u300c\u30a8\u30e9\u30fc\u300d\u3092\u4e3b\u306b\u53d6\u308a\u6271\u3044\u307e\u3059\u3002\n\n## \u74b0\u5883\n\n* Node v5.1.0\n* babel-core@6.2.4\n* babel-polyfill@6.2.4\n* babel-preset-stage-3@6.2.4\n\n\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u306e\u6319\u52d5\u306b\u3064\u3044\u3066\u306f\u307e\u3060\u78ba\u8a8d\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3002\n\n## tl; dr\n\n* async function \u306e\u5185\u90e8\uff08await \u3092\u542b\u3080\u30d6\u30ed\u30c3\u30af\u5185\u90e8\uff09\u306b\u306f try-catch \u3092\u8a2d\u3051\u308b\u3002\n* async function \u306e\u547c\u3073\u51fa\u3057\u5143\u3078\u30a8\u30e9\u30fc\u3092 throw \u3057\u305f\u3044\u5834\u5408\u3001\u547c\u3073\u51fa\u3057\u5143\u3092 async/await \u306b\u5909\u66f4\u3057\u3066 try-catch \u3092\u8a2d\u3051\u3066\u304a\u304f\u3002\n\n## \u524d\u63d0\n\n\u307e\u305a\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f8b\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\n```js:babel\nconst sub = () => {\n  throw new Error(`hum...`);\n  return `ok`;\n};\n\nconst main = () => {\n  const msg = sub();\n  console.log(msg);\n};\n\ntry {\n  main();\n} catch (err) {\n  console.error(`oops!`);\n}\n\n```\n\n\u307e\u305a main \u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u7d9a\u3044\u3066 sub \u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u3001sub \u306e\u4e2d\u3067\u306f return \u3059\u308b\u524d\u306b\u4e88\u60f3\u5916\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u3068\u3057\u307e\u3059\u3002\u4e0a\u306e\u30b3\u30fc\u30c9\u306e\u5834\u5408\u3001\u4e00\u756a\u6700\u521d\u306e\u547c\u3073\u51fa\u3057\u5143\u306b\u8a2d\u3051\u3089\u308c\u305f try-catch \u307e\u3067\u30a8\u30e9\u30fc\u304c\u4f1d\u642c\u3055\u308c\u3001\u5b9f\u884c\u7d50\u679c\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```bash:output\noops!\n```\n\n## async/await \u3068\u30a8\u30e9\u30fc\u767a\u751f\u6642\u306e\u6319\u52d5\n\n\u4f8b\u3068\u3057\u3066\u3001sub \u306e\u51e6\u7406\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u5834\u5408\u3092\u8003\u3048\u307e\u3059\u3002\u6b63\u5e38\u7cfb\u306e\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```js:babel\nimport 'babel-polyfill';\n\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(`ok`), 2000);\n  });\n};\n\nconst main = async () => {\n  const msg = await sub();\n  console.log(msg);\n};\n\ntry {\n  main();\n} catch (err) {\n  console.error(`oops!`);\n}\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u3001\u304a\u3088\u305d 2 \u79d2\u5f8c\u306b ok \u3068\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n```bash:output\nok\n```\n\n\u3053\u3053\u304b\u3089\u306f\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u3088\u3063\u3066\u3069\u306e\u3088\u3046\u306a\u5dee\u7570\u304c\u73fe\u308c\u308b\u304b\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n#### 1) \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u305f\u5f8c\u306b\u30a8\u30e9\u30fc\u767a\u751f\n\n```js:babel\nimport 'babel-polyfill';\n\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(`ok`), 2000);\n    throw new Error(`hum...`);\n  });\n};\n\nconst main = async () => {\n  const msg = await sub();\n  console.log(msg);\n};\n\ntry {\n  main();\n} catch (err) {\n  console.error(`oops!`);\n}\n```\n\n\u3053\u306e\u5834\u5408\u3001\u304a\u3088\u305d 2 \u79d2\u306e\u30b9\u30ea\u30fc\u30d7\u304c\u3042\u3063\u305f\u306e\u3061\u3001\u4f55\u3082\u8868\u793a\u3055\u308c\u305a\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u7d42\u4e86\u3057\u307e\u3059\u3002\n\n```bash:output\n```\n\n#### 2) \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5b9a\u7fa9\u3059\u308b\u524d\u306b\u30a8\u30e9\u30fc\u767a\u751f\n\n```js:babel\nimport 'babel-polyfill';\n\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    throw new Error(`hum...`);\n    setTimeout(() => resolve(`ok`), 2000);\n  });\n};\n\nconst main = async () => {\n  const msg = await sub();\n  console.log(msg);\n};\n\ntry {\n  main();\n} catch (err) {\n  console.error(`oops!`);\n}\n```\n\n\u307e\u305f\u3082\u3084\u4f55\u3082\u8868\u793a\u3055\u308c\u307e\u305b\u3093\u304c\u3001\u3053\u306e\u5834\u5408\u306f\u30b9\u30ea\u30fc\u30d7\u306a\u3057\u306b\u7d42\u4e86\u3057\u307e\u3059\u3002\n\n```bash:output\n```\n\n#### 3) await \u306e\u5f8c\u306b\u4f8b\u5916\u767a\u751f\n\nawait \u3067\u53d7\u3051\u53d6\u3063\u305f\u7d50\u679c\u3092\u5143\u306b\u51e6\u7406\u3092\u884c\u3063\u305f\u3068\u304d\u306b\u3001\u4f55\u304b\u3057\u3089\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u30b1\u30fc\u30b9\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\n```js:babel\nimport 'babel-polyfill';\n\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(`ok`), 2000);\n  });\n};\n\nconst main = async () => {\n  const msg = await sub();\n\n  throw new Error(`hum...`);\n\n  console.log(msg);\n};\n\ntry {\n  main();\n} catch (err) {\n  console.error(`oops!`);\n}\n```\n\nawait \u307e\u3067\u306f\u901a\u5e38\u901a\u308a\u306a\u305f\u3081\u3001\u6b63\u5e38\u7cfb\u3068\u540c\u3058\u304f 2 \u79d2\u306e\u5f85\u3061\u304c\u5165\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u3053\u306e\u5834\u5408\u3067\u3082\u30a8\u30e9\u30fc\u306f\u6355\u6349\u3055\u308c\u305a\u7d42\u4e86\u3057\u307e\u3059\u3002\n\n```bash:output\n```\n\n## async/await - try/catch \u3068 Promise - then/catch\n\n\u524d\u7bc0\u306e 1) \u3068 2) \u306e\u5834\u5408\u306b\u3064\u3044\u3066\u518d\u8003\u3057\u3066\u307f\u307e\u3059\u3002Promise \u5185\u90e8\u3067\u767a\u751f\u3057\u305f\u30a8\u30e9\u30fc\u306f\u81ea\u52d5\u7684\u306b try-catch \u3055\u308c\u3001Promise \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u72b6\u614b\u306f Rejected \u306b\u306a\u308a\u307e\u3059\uff08\u53c2\u8003: [JavaScript Promise \u306e\u672c - 4.3. throw\u3057\u306a\u3044\u3067\u3001reject\u3057\u3088\u3046](http://azu.github.io/promises-book/#not-throw-use-reject)\uff09\u3002\n\n\u3059\u306a\u308f\u3061\u3001then/catch \u306e\u8a18\u6cd5\u306b\u304a\u3044\u3066\u306f Promise#catch \u306b\u51e6\u7406\u304c\u79fb\u884c\u3057\u307e\u3059\u3002\u3053\u3053\u3067 async/await \u3068 then/catch \u306e\u76f8\u4f3c\u6027\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u3001\u540c\u3058\u52d5\u4f5c\u7d50\u679c\u3092\u5f97\u308b 2 \u3064\u306e\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u4f75\u8a18\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```js:async_await.js\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    // do stuff\n  });\n};\n\nconst main = async () => {\n  try {\n    const result = await sub();\n    console.log(result);\n  } catch (err) {\n    console.error(err);\n  }\n};\n```\n\n```js:then_catch.js\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    // do stuff\n  });\n};\n\nconst main = () => {\n  return new Promise((resolve, reject) => {\n    sub().then((result) => {\n      console.log(result);\n    }).catch((err) => {\n      console.error(err);\n    });\n  });\n};\n```\n\n\u5f93\u3063\u3066\u3001await \u304c\u542b\u307e\u308c\u3066\u3044\u308b\u30d6\u30ed\u30c3\u30af\uff08async \u3092\u4ed8\u4e0e\u3057\u3066\u3044\u308b\u95a2\u6570\u306e\u5185\u90e8\uff09\u306b try-catch \u3092\u8a2d\u3051\u308c\u3070\u30a8\u30e9\u30fc\u3092\u6355\u6349\u3067\u304d\u307e\u3059\u3002\n\n```js\nimport 'babel-polyfill';\n\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(`ok`), 2000);\n    throw new Error(`hum...`);\n  });\n};\n\nconst main = async () => {\n  try {\n    const msg = await sub();\n    console.log(msg);\n  } catch (err) {\n    console.error(`gotcha!`);\n  }\n};\n\ntry {\n  main();\n} catch (err) {\n  console.error(`oops!`);\n}\n```\n\n\u3053\u308c\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u78ba\u304b\u306b\u30a8\u30e9\u30fc\u3092\u88dc\u8db3\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```bash:output\ngotcha!\n```\n\nasync function \u306e\u4e2d\u3067 try-catch \u3092\u8a2d\u3051\u3066\u304a\u3051\u3070\u3001\u524d\u7bc0\u306e 3) \u306b\u3082\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\n\u3055\u3066\u3001\u3082\u3057 main \u3092\u56f2\u3093\u3067\u3044\u308b try-catch \u306b\u3082\u30a8\u30e9\u30fc\u3092\u4f1d\u642c\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u305d\u308c\u306b\u306f\u4ee5\u4e0b\u306e 2 \u3064\u304c\u76f8\u4f3c\u3067\u3042\u308b\u3053\u3068\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n```js:async_function\nconst func = async () => {\n  // do stuff\n}\n```\n\n```js:promise_function\nconst func = () => {\n  return new Promise((resolve, reject) => {\n    // do stuff\n  });\n}\n```\n\n\u3064\u307e\u308a\u3001async function \u306f Promise \u3092\u8fd4\u3059\u95a2\u6570\u3067\u3042\u308b\u305f\u3081\u3001\u305d\u306e\u5185\u90e8\u3067\u30a8\u30e9\u30fc\u3092 throw \u3057\u3001\u547c\u3073\u51fa\u3057\u5074\u306b\u304a\u3044\u3066\u51e6\u7406\u7d50\u679c\u3092 async/await \u3067\u53d7\u3051\u308c\u3070\u3001\u547c\u3073\u51fa\u3057\u5143\u306e try-catch \u306b\u88dc\u8db3\u3055\u308c\u307e\u3059\uff08\u3053\u3053\u3067\u8003\u3048\u3066\u3044\u308b\u306e\u306f\u4e88\u60f3\u5916\u306b\u767a\u751f\u3059\u308b\u30a8\u30e9\u30fc\u3067\u3059\u3002\u3042\u3089\u304b\u3058\u3081\u628a\u63e1\u3067\u304d\u3066\u3044\u308b\u7570\u5e38\u7cfb\u52d5\u4f5c\u306b\u5bfe\u3059\u308b\u4f8b\u5916\u9001\u51fa\u306f Promise.reject \u3092\u4f7f\u3046\u3079\u304d\u3067\u3059\uff09\u3002\n\n```js:babel\nimport 'babel-polyfill';\n\nconst sub = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(`ok`), 2000);\n    throw new Error(`hum...`);\n  });\n};\n\nconst main = async () => {\n  try {\n    const msg = await sub();\n    console.log(msg);\n  } catch (err) {\n    console.error(`gotcha!`);\n    reject(err);\n  }\n};\n\n(async () => {\n  try {\n    await main();\n  } catch (err) {\n    console.error(`oops!`);\n  }\n})();\n\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u30012 \u3064\u306e catch \u3067\u30a8\u30e9\u30fc\u304c\u6355\u6349\u3055\u308c\u3066\u3044\u308b\u306e\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n```bash:output\ngotcha!\noops!\n```\n\n## \u307e\u3068\u3081\n\n* async function \u306f Promise \u3092\u8fd4\u3059\u95a2\u6570\u3068\u76f8\u4f3c\u3067\u3042\u308b\u3002\n* async function \u306e\u5185\u90e8\uff08await \u3092\u542b\u3080\u30d6\u30ed\u30c3\u30af\u5185\u90e8\uff09\u306b\u306f try-catch \u3092\u8a2d\u3051\u308b\u3002\n* async function \u306e\u547c\u3073\u51fa\u3057\u5143\u3078\u30a8\u30e9\u30fc\u3092 throw \u3057\u305f\u3044\u5834\u5408\u3001\u547c\u3073\u51fa\u3057\u5143\u3092 async/await \u306b\u5909\u66f4\u3057\u3066 try-catch \u3092\u8a2d\u3051\u3066\u304a\u304f\u3002\n\n## \u53c2\u8003\u30b5\u30a4\u30c8\n\n* [Async Functions](http://tc39.github.io/ecmascript-asyncawait/)\uff08TC39 Stage3 Draft\uff09\n* [JavaScript Promise \u306e\u672c](http://azu.github.io/promises-book/)\n* [ES async/await\u3092\u5168\u529b\u3067\u4f7f\u3063\u3066\u307f\u3066\u767a\u898b\u3057\u305f\u30a4\u30c7\u30a3\u30aa\u30e0](http://qiita.com/mizchi/items/95410f4955d94ed103fa)\n", "tags": ["Node.js5.1.0", "babel6.2.4", "JavaScript"]}