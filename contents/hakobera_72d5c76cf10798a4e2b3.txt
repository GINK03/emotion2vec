{"context": " More than 1 year has passed since last update.\u7c21\u6f54\u306b\u8a00\u3046\u3068\u3001BigQuery \u306e COUNT(DISCTINCT(X)) \u306f\u6b63\u3057\u3044\u5024\u3092\u8fd4\u3055\u306a\u3044\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u4f7f\u308f\u306a\u3044\u65b9\u304c\u826f\u3044\u3002\uff08\u3061\u3083\u3093\u3068\u4ed5\u69d8\u3092\u7406\u89e3\u3057\u3066\u4f7f\u304a\u3046\uff09\n2015/5/28 \u8ffd\u8a18\n\u300cGROUP BY \u3057\u3066 COUNT()\u300d\u304c\u9762\u5012\u3060\u3068\u3044\u3046\u4eba\u306f\u3001EXACT_COUNT_DISTINCT(X) \u3092\u4f7f\u304a\u3046\u3002\nBigQuery \u3067\u306f COUNT(DISTINCT(X)) \u3067\u306f\u306a\u304f EXACT_COUNT_DISTINCT(X) \u3092\u4f7f\u304a\u3046\n\nBigQuery \u306e DISTINCT \u306e\u4ed5\u69d8\nhttps://cloud.google.com/bigquery/query-reference?hl=ja#aggfunctions \u3088\u308a\u5f15\u7528\n\nReturns the total number of non-NULL values in the scope of the function.\nIf you use the DISTINCT keyword, the function returns the number of distinct values for the specified field. Note that the returned value for DISTINCT is a statistical approximation and is not guaranteed to be exact.\nIf you require greater accuracy from COUNT(DISTINCT), you can specify a second parameter, n, which gives the threshold below which exact results are guaranteed. By default, n is 1000, but if you give a larger n, you will get exact results for COUNT(DISTINCT) up to that value of n. However, giving larger values of n will reduce scalability of this operator and may substantially increase query execution time or cause the query to fail.\n\n\u8981\u3059\u308b\u306b\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u305f\u7cbe\u5ea6\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u30671000\uff09\u4ee5\u4e0a\u306e\u6570\u5b57\u306f\u6982\u7b97\u5024\u304c\u8fd4\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3088\u3063\u3066\u6982\u7b97\u5024\u304c\u6b32\u3057\u3044\u3068\u3044\u3046\u30b1\u30fc\u30b9\u4ee5\u5916\u3067 DISTINCT \u3092\u4f7f\u3046\u306e\u306f\u6b63\u78ba\u6027\u3068\u3044\u3046\u610f\u5473\u3067\u826f\u304f\u306a\u3044\u306e\u3067\u3059\u3002\n\n\u4f8b\n\u5b9f\u969b\u306b publicdata:samples.github_timeline \u306b\u30af\u30a8\u30ea\u3092\u6d41\u3057\u3066\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u7cbe\u5ea6\u30c7\u30d5\u30a9\u30eb\u30c8\uff08=1000\uff09\nSELECT COUNT(DISTINCT(repository_owner)) FROM [publicdata:samples.github_timeline]\n/* => 225,105 */\n\n\n\n\u7cbe\u5ea6 100,000\nSELECT COUNT(DISTINCT(repository_owner), 1000000) FROM [publicdata:samples.github_timeline]\n/* => 220,724 */\n\n\n\u3053\u3053\u3067\u306f\u6570\u5b57\u304c100\u4e07\u4ee5\u4e0b\u306a\u306e\u3067\u3001\u5f8c\u8005\u304c\u6b63\u78ba\u306a\u5024\u3002\n\u7cbe\u5ea6\u3092\u4e0a\u3052\u3066\u3044\u3051\u3070\u6b63\u78ba\u306a\u5024\u304c\u5f97\u3089\u308c\u308b\u3068\u306f\u3044\u3048\u3001\u5b9f\u969b\u306b\u5b9f\u884c\u3057\u3066\u307f\u308b\u307e\u3067\u6841\u6570\u306a\u3093\u3066\u308f\u304b\u3089\u306a\u3044\u3057\u3001\u30c7\u30fc\u30bf\u304c\u5897\u3048\u3066\u3044\u304f\u305f\u3073\u306b\u7cbe\u5ea6\u3092\u8abf\u6574\u3057\u3066\u304f\u306a\u3093\u3066\u3084\u308a\u305f\u304f\u306a\u3044\u3002\n\n\u56de\u907f\u7b56\n\u3053\u306e\u554f\u984c\u306b\u5bfe\u3059\u308bBigQuery\u7684\u306a\u6b63\u89e3\u306f\u3001GROUP EACH BY \u3068 COUNT(*) \u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u3053\u3068\u3002\nhttps://cloud.google.com/bigquery/query-reference?hl=ja#aggfunctions \u3088\u308a\u5f15\u7528\n\nTo compute the exact number of distinct values in a scalable fashion, consider using GROUP EACH BY on the relevant field(s) and then applying COUNT(*). This approach is more scalable but might incur a slight up-front performance penalty.\n\nSELECT COUNT(*)\nFROM\n(SELECT repository_owner FROM [publicdata:samples.github_timeline]\n WHERE repository_owner IS NOT NULL\n GROUP EACH BY repository_owner)\n\n\n\u96c6\u8a08\u5bfe\u8c61\u5217\u304c NULLABLE \u306a\u5834\u5408\u3001WHERE X IS NOT NULL \u3092\u5fd8\u308c\u305a\u306b\u3002NULLABLE \u3067\u306f\u306a\u3044\u5834\u5408\u306f\u3001WHERE \u53e5\u306f\u4e0d\u8981\u3067\u3059\u3002\n\n\u307e\u3068\u3081\nBigQuery \u3067 DISTINCT \u3057\u305f\u3044\u6642\u306f\u3001\u300cGROUP EACH BY \u3057\u3066\u3001COUNT \u3092\u53d6\u308b\u300d\u3092\u899a\u3048\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\u7c21\u6f54\u306b\u8a00\u3046\u3068\u3001BigQuery \u306e COUNT(DISCTINCT(X)) \u306f\u6b63\u3057\u3044\u5024\u3092\u8fd4\u3055\u306a\u3044\u3053\u3068\u304c\u3042\u308b\u306e\u3067\u4f7f\u308f\u306a\u3044\u65b9\u304c\u826f\u3044\u3002\uff08\u3061\u3083\u3093\u3068\u4ed5\u69d8\u3092\u7406\u89e3\u3057\u3066\u4f7f\u304a\u3046\uff09\n\n2015/5/28 \u8ffd\u8a18\n\n\u300cGROUP BY \u3057\u3066 COUNT()\u300d\u304c\u9762\u5012\u3060\u3068\u3044\u3046\u4eba\u306f\u3001EXACT_COUNT_DISTINCT(X) \u3092\u4f7f\u304a\u3046\u3002\n\n[BigQuery \u3067\u306f COUNT(DISTINCT(X)) \u3067\u306f\u306a\u304f EXACT_COUNT_DISTINCT(X) \u3092\u4f7f\u304a\u3046](http://qiita.com/hakobera/items/2043f8d1d60db82c8635)\n\n## BigQuery \u306e DISTINCT \u306e\u4ed5\u69d8\n\nhttps://cloud.google.com/bigquery/query-reference?hl=ja#aggfunctions \u3088\u308a\u5f15\u7528\n\n> Returns the total number of non-NULL values in the scope of the function.\nIf you use the DISTINCT keyword, the function returns the number of distinct values for the specified field. Note that the returned value for DISTINCT is a statistical approximation and is not guaranteed to be exact.\n>\nIf you require greater accuracy from COUNT(DISTINCT), you can specify a second parameter, n, which gives the threshold below which exact results are guaranteed. By default, n is 1000, but if you give a larger n, you will get exact results for COUNT(DISTINCT) up to that value of n. However, giving larger values of n will reduce scalability of this operator and may substantially increase query execution time or cause the query to fail.\n\n\u8981\u3059\u308b\u306b\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u305f\u7cbe\u5ea6\uff08\u30c7\u30d5\u30a9\u30eb\u30c8\u30671000\uff09\u4ee5\u4e0a\u306e\u6570\u5b57\u306f\u6982\u7b97\u5024\u304c\u8fd4\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3088\u3063\u3066\u6982\u7b97\u5024\u304c\u6b32\u3057\u3044\u3068\u3044\u3046\u30b1\u30fc\u30b9\u4ee5\u5916\u3067 DISTINCT \u3092\u4f7f\u3046\u306e\u306f\u6b63\u78ba\u6027\u3068\u3044\u3046\u610f\u5473\u3067\u826f\u304f\u306a\u3044\u306e\u3067\u3059\u3002\n\n## \u4f8b\n\n\u5b9f\u969b\u306b publicdata:samples.github_timeline \u306b\u30af\u30a8\u30ea\u3092\u6d41\u3057\u3066\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n### \u7cbe\u5ea6\u30c7\u30d5\u30a9\u30eb\u30c8\uff08=1000\uff09\n\n```sql\nSELECT COUNT(DISTINCT(repository_owner)) FROM [publicdata:samples.github_timeline]\n/* => 225,105 */\n```\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-10-17 17.24.42.png](https://qiita-image-store.s3.amazonaws.com/0/25774/77bb15c3-3a0a-a4b0-6f35-c72f83474102.png)\n\n### \u7cbe\u5ea6 100,000\n\n```sql\nSELECT COUNT(DISTINCT(repository_owner), 1000000) FROM [publicdata:samples.github_timeline]\n/* => 220,724 */\n```\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-10-17 17.25.37.png](https://qiita-image-store.s3.amazonaws.com/0/25774/ba9fb835-84b5-d70b-b4ef-93236ecfa70e.png)\n\n\u3053\u3053\u3067\u306f\u6570\u5b57\u304c100\u4e07\u4ee5\u4e0b\u306a\u306e\u3067\u3001\u5f8c\u8005\u304c\u6b63\u78ba\u306a\u5024\u3002\n\u7cbe\u5ea6\u3092\u4e0a\u3052\u3066\u3044\u3051\u3070\u6b63\u78ba\u306a\u5024\u304c\u5f97\u3089\u308c\u308b\u3068\u306f\u3044\u3048\u3001\u5b9f\u969b\u306b\u5b9f\u884c\u3057\u3066\u307f\u308b\u307e\u3067\u6841\u6570\u306a\u3093\u3066\u308f\u304b\u3089\u306a\u3044\u3057\u3001\u30c7\u30fc\u30bf\u304c\u5897\u3048\u3066\u3044\u304f\u305f\u3073\u306b\u7cbe\u5ea6\u3092\u8abf\u6574\u3057\u3066\u304f\u306a\u3093\u3066\u3084\u308a\u305f\u304f\u306a\u3044\u3002\n\n## \u56de\u907f\u7b56\n\n\u3053\u306e\u554f\u984c\u306b\u5bfe\u3059\u308bBigQuery\u7684\u306a\u6b63\u89e3\u306f\u3001GROUP EACH BY \u3068 COUNT(*) \u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u3053\u3068\u3002\n\nhttps://cloud.google.com/bigquery/query-reference?hl=ja#aggfunctions \u3088\u308a\u5f15\u7528\n\n> To compute the exact number of distinct values in a scalable fashion, consider using GROUP EACH BY on the relevant field(s) and then applying COUNT(*). This approach is more scalable but might incur a slight up-front performance penalty.\n\n```sql\nSELECT COUNT(*)\nFROM\n(SELECT repository_owner FROM [publicdata:samples.github_timeline]\n WHERE repository_owner IS NOT NULL\n GROUP EACH BY repository_owner)\n```\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-10-17 17.41.01.png](https://qiita-image-store.s3.amazonaws.com/0/25774/ba764fc3-05de-338f-71c8-ee95615ce9ba.png)\n\n\u96c6\u8a08\u5bfe\u8c61\u5217\u304c NULLABLE \u306a\u5834\u5408\u3001`WHERE X IS NOT NULL` \u3092\u5fd8\u308c\u305a\u306b\u3002NULLABLE \u3067\u306f\u306a\u3044\u5834\u5408\u306f\u3001WHERE \u53e5\u306f\u4e0d\u8981\u3067\u3059\u3002\n\n## \u307e\u3068\u3081\n\nBigQuery \u3067 DISTINCT \u3057\u305f\u3044\u6642\u306f\u3001\u300cGROUP EACH BY \u3057\u3066\u3001COUNT \u3092\u53d6\u308b\u300d\u3092\u899a\u3048\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n", "tags": ["bigquery"]}