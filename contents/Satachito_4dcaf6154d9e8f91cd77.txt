{"context": " More than 1 year has passed since last update.\n\nGAE \u306e channel API \u3092\u4f7f\u3063\u3066 chat \u3092\u4f5c\u3063\u3066\u307f\u308b\u3002\n\u30bd\u30fc\u30b9\u306f\nhttps://github.com/Satachito/GAEChannel\n\nv0.1 \u307e\u305a\u306f\u30c1\u30e3\u30cd\u30eb\u306e\u751f\u6210\u3068\u4f7f\u7528\u3092\u304a\u3053\u306a\u3046\u6700\u5c0f\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8003\u3048\u308b\u3002\n\nmain.go\npackage main\n\nimport (\n    \"net/http\"\n    \"html/template\"\n\n    \"appengine\"\n    \"appengine/channel\"\n)\n\nfunc\ninit() {\n    http.HandleFunc( \"/\", handle )\n}\n\nfunc\nExecute( tag string, w http.ResponseWriter, p interface{} ) {\n    if err := template.Must( template.ParseFiles( tag + \".html\" ) ).Execute(\n        w,\n        p,\n    ); err != nil { panic( err ) }\n}\n\nfunc\nhandle( w http.ResponseWriter, r *http.Request ) {\n\n    switch r.Method {\n    case \"GET\":\n        Execute( \"get\", w, nil )\n    case \"POST\":\n        wID := r.FormValue( \"ID\" )\n        wToken, err := channel.Create( appengine.NewContext( r ), wID )\n        if err != nil { \n            Execute( \"get\", w, map[ string ]string { \"Error\": err.Error() } )\n        } else {\n            Execute(\n                \"post\",\n                w,\n                map[ string ]string {\n                    \"ID\"        : wID,\n                    \"Token\"     : wToken,\n                },\n            )\n        }\n    case \"PUT\":\n        if err := channel.SendJSON(\n            appengine.NewContext( r ),\n            r.FormValue( \"ID\" ),\n            map[ string ]interface{} { \"message\": r.FormValue( \"Message\" ) },\n        ); err != nil { panic( err ) }\n    }\n}\n\n\n\nget.html\n<!doctype html>\n<html>\n<head></head>\n<body>\n    <p>{{.Error}}</p>\n    <form method='POST'>\n        <input type='text' name='ID' value='TheID' />\n        <input type='submit' value='CONNECT' />\n    </form>\n</body>\n</html>\n\n\n\npost.html\n<!doctype html>\n<html>\n<head></head>\n<body>\n    <script type='text/javascript' src='/_ah/channel/jsapi'></script>\n\n    <script>\n        new goog.appengine.Channel( {{.Token}} ).open(\n            {   onopen      : function() {\n                    document.getElementById( 'Content' ).innerHTML += '{{.Token}}<br />';\u3000\n                }\n            ,   onmessage   : function( p ) {\n                    document.getElementById( 'Content' ).innerHTML += p.data + '<br />';\u3000\n                }\n            ,   onerror     : function( p ) {\n                    alert( 'ERROR:' + p.description );\n                }\n            ,   onclose     : function() {\n                    //  UC\n                }\n            }\n        );\n        function\n        Send() {\n            var wHR = new XMLHttpRequest();\n            wHR.onload = function( e ) {\n                if ( wHR.readyState === 4 ) {\n                    if ( wHR.status === 200 ) {\n                    } else {\n                        alert( wHR.status );\n                    }\n                }\n            }\n            wHR.open(\n                'PUT'\n            ,   '/?Message=' + document.getElementById( 'Message' ).value + '&ID=' + {{.ID}}\n            ,   true\n            );\n            wHR.send();\n        }\n    </script>\n\n    <input type='text' id='Message' />\n    <input type='button' value='OK' onclick='Send()' />\n    <div id='Content'></div>\n</body>\n</html>\n\n\n\napp.yaml\napplication: \nversion: 1\nruntime: go\napi_version: go1\n\nhandlers:\n- url: /.*\n  script: _go_app\n\n\n\u4ee5\u4e0a\u306e\uff14\u30d5\u30a1\u30a4\u30eb\u3092\uff11\u3064\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5165\u308c\u3066\u3001\u305d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u304b\u3089\n\ngoapp serve\n\n\u3068\u3057\u3066\u3001\u30d6\u30e9\u30a6\u30b6\u304b\u3089 localhost:8080 \u306b\u30a2\u30af\u30bb\u30b9\u3002CONNECT\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3002\n\nv0.2 Datastore \u3092\u4f7f\u3063\u3066\u30de\u30eb\u30c1\u30e6\u30fc\u30b6\u30fc\u306b\u3059\u308b\u3002\n\u5909\u66f4\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n- main.go\n- app.yaml\n\nmain.go\npackage main\n\nimport (\n    \"net/http\"\n    \"html/template\"\n\n    \"appengine\"\n    \"appengine/channel\"\n    \"appengine/datastore\"\n)\n\nfunc\ninit() {\n    http.HandleFunc( \"/\", handle )\n    http.HandleFunc( \"/_ah/channel/connected/\", connected )\n    http.HandleFunc( \"/_ah/channel/disconnected/\", disconnected )\n}\n\nfunc\nChannelKey( ctx appengine.Context, id string ) *datastore.Key {\n    return datastore.NewKey( ctx, \"Channels\", id, 0, nil )\n}\n\ntype\nNULL struct {\n}\n\nfunc\nconnected( w http.ResponseWriter, r *http.Request ) {\n    ctx := appengine.NewContext( r )\n\n    if _, err := datastore.Put(\n        ctx,\n        ChannelKey( ctx, r.FormValue( \"from\" ) ),\n        &NULL{},\n    ); err != nil { panic( err ) }\n}\n\nfunc\ndisconnected( w http.ResponseWriter, r *http.Request ) {\n    ctx := appengine.NewContext( r )\n\n    if err := datastore.Delete(\n        ctx,\n        ChannelKey( ctx, r.FormValue( \"from\" ) ),\n    ); err != nil { panic( err ) }\n}\n\nfunc\nExecute( tag string, w http.ResponseWriter, p interface{} ) {\n    if err := template.Must( template.ParseFiles( tag + \".html\" ) ).Execute(\n        w,\n        p,\n    ); err != nil { panic( err ) }\n}\n\nfunc\nhandle( w http.ResponseWriter, r *http.Request ) {\n    switch r.Method {\n    case \"GET\":\n        Execute( \"get\", w, nil )\n    case \"POST\":\n        wID := r.FormValue( \"ID\" )\n        wToken, err := channel.Create( appengine.NewContext( r ), wID )\n        if err != nil { \n            Execute( \"get\", w, map[ string ]string { \"Error\": err.Error() } )\n        } else {\n            Execute(\n                \"post\",\n                w,\n                map[ string ]string {\n                    \"ID\"        : wID,\n                    \"Token\"     : wToken,\n                },\n            )\n        }\n    case \"PUT\":\n        ctx := appengine.NewContext( r )\n\n        keys, err := datastore.NewQuery( \"Channels\" ).KeysOnly().GetAll( ctx, nil )\n        if err != nil { panic( err ) }\n\n        for _, key := range keys {\n            if err := channel.SendJSON(\n                ctx,\n                key.StringID(),\n                map[ string ]interface{} {\n                    \"message\"   : r.FormValue( \"Message\" ),\n                    \"ID\"        : r.FormValue( \"ID\" ),\n                },\n            ); err != nil { panic( err ) }\n        }\n    }\n}\n\n\n\napp.yaml\napplication: \nversion: 1\nruntime: go\napi_version: go1\n\ninbound_services:\n- channel_presence\n\nhandlers:\n- url: /_ah/channel/connected/\n  script: _go_app\n\n- url: /_ah/channel/disconnected/\n  script: _go_app\n\n- url: /.*\n  script: _go_app\n\n\n\u30d6\u30e9\u30a6\u30b6\u3092\uff12\u753b\u9762\u958b\u3044\u3066 localhost:8080 \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001ID \u3092\u5225\u306e\u3082\u306e\u306b\u3059\u308b\u3002\n\n\n\u5236\u7d04\u306a\u3069\n\n\u540c\u4e00 ID \u306e\u30c1\u30e3\u30cd\u30eb\u306f\u751f\u6210\u3067\u304d\u308b\uff08\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\uff09\u304c\u4f7f\u7528\u3067\u304d\u306a\u3044\u3002\uff08\u4ed5\u69d8\uff09\n\u4f8b\u3048\u3070\u30d6\u30e9\u30a6\u30b6\uff12\u753b\u9762\u3067\u540c\u4e00 ID \u3067\u751f\u6210\u3059\u308b\u3068\u4e00\u898b\u3046\u307e\u304f\u884c\u304f\u304c\u3001\u3069\u3061\u3089\u304b\u7247\u65b9\u306b\u3057\u304b\u8868\u793a\u3055\u308c\u306a\u3044\u3002\n\u7121\u6599\u67a0\u3067\u306f 100 \u30c1\u30e3\u30f3\u30cd\u30eb\u307e\u3067\u4f7f\u7528\u53ef\u80fd\u3002\u305d\u308c\u4ee5\u4e0a\u306f\u30c1\u30e3\u30cd\u30eb\u6570\u306b\u5fdc\u3058\u305f\u5f93\u91cf\u8ab2\u91d1\u306b\u306a\u308b\u3002\npost.html \u306e\u4e2d\u306e onmessage \u3067 body \u30bf\u30b0\u306b HTML \u3092\u8ffd\u52a0\u3057\u3088\u3046\u3068\u3057\u305f\u3089\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u306f\u52d5\u304f\u304c\u3001\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u52d5\u304b\u306a\u3044\u3001\u3068\u3044\u3046\u4e0d\u601d\u8b70\u306a\u73fe\u8c61\u304c\u767a\u751f\u3057\u305f\u3002\n\n#GAE \u306e channel API \u3092\u4f7f\u3063\u3066 chat \u3092\u4f5c\u3063\u3066\u307f\u308b\u3002\n\n\u30bd\u30fc\u30b9\u306f\nhttps://github.com/Satachito/GAEChannel\n\n## v0.1 \u307e\u305a\u306f\u30c1\u30e3\u30cd\u30eb\u306e\u751f\u6210\u3068\u4f7f\u7528\u3092\u304a\u3053\u306a\u3046\u6700\u5c0f\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8003\u3048\u308b\u3002\n\n```ruby:main.go\npackage main\n\nimport (\n\t\"net/http\"\n\t\"html/template\"\n\n\t\"appengine\"\n\t\"appengine/channel\"\n)\n\nfunc\ninit() {\n    http.HandleFunc( \"/\", handle )\n}\n\nfunc\nExecute( tag string, w http.ResponseWriter, p interface{} ) {\n\tif err := template.Must( template.ParseFiles( tag + \".html\" ) ).Execute(\n\t\tw,\n\t\tp,\n\t); err != nil { panic( err ) }\n}\n\nfunc\nhandle( w http.ResponseWriter, r *http.Request ) {\n\n\tswitch r.Method {\n\tcase \"GET\":\n\t\tExecute( \"get\", w, nil )\n\tcase \"POST\":\n\t\twID := r.FormValue( \"ID\" )\n\t\twToken, err := channel.Create( appengine.NewContext( r ), wID )\n\t\tif err != nil { \n\t\t\tExecute( \"get\", w, map[ string ]string { \"Error\": err.Error() } )\n\t\t} else {\n\t\t\tExecute(\n\t\t\t\t\"post\",\n\t\t\t\tw,\n\t\t\t\tmap[ string ]string {\n\t\t\t\t\t\"ID\"\t\t: wID,\n\t\t\t\t\t\"Token\"\t\t: wToken,\n\t\t\t\t},\n\t\t\t)\n\t\t}\n\tcase \"PUT\":\n\t\tif err := channel.SendJSON(\n\t\t\tappengine.NewContext( r ),\n\t\t\tr.FormValue( \"ID\" ),\n\t\t\tmap[ string ]interface{} { \"message\": r.FormValue( \"Message\" ) },\n\t\t); err != nil { panic( err ) }\n\t}\n}\n```\n```ruby:get.html\n<!doctype html>\n<html>\n<head></head>\n<body>\n\t<p>{{.Error}}</p>\n\t<form method='POST'>\n\t\t<input type='text' name='ID' value='TheID' />\n\t\t<input type='submit' value='CONNECT' />\n\t</form>\n</body>\n</html>\n```\n```ruby:post.html\n<!doctype html>\n<html>\n<head></head>\n<body>\n\t<script type='text/javascript' src='/_ah/channel/jsapi'></script>\n\n\t<script>\n\t\tnew goog.appengine.Channel( {{.Token}} ).open(\n\t\t\t{\tonopen\t\t: function() {\n\t\t\t\t\tdocument.getElementById( 'Content' ).innerHTML += '{{.Token}}<br />';\u3000\n\t\t\t\t}\n\t\t\t,\tonmessage\t: function( p ) {\n\t\t\t\t\tdocument.getElementById( 'Content' ).innerHTML += p.data + '<br />';\u3000\n\t\t\t\t}\n\t\t\t,\tonerror\t\t: function( p ) {\n\t\t\t\t\talert( 'ERROR:' + p.description );\n\t\t\t\t}\n\t\t\t,\tonclose\t\t: function() {\n\t\t\t\t\t//\tUC\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tfunction\n\t\tSend() {\n\t\t\tvar wHR = new XMLHttpRequest();\n\t\t\twHR.onload = function( e ) {\n\t\t\t\tif ( wHR.readyState === 4 ) {\n\t\t\t\t\tif ( wHR.status === 200 ) {\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert( wHR.status );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twHR.open(\n\t\t\t\t'PUT'\n\t\t\t,\t'/?Message=' + document.getElementById( 'Message' ).value + '&ID=' + {{.ID}}\n\t\t\t,\ttrue\n\t\t\t);\n\t\t\twHR.send();\n\t\t}\n\t</script>\n\n\t<input type='text' id='Message' />\n\t<input type='button' value='OK' onclick='Send()' />\n\t<div id='Content'></div>\n</body>\n</html>\n```\n```ruby:app.yaml\napplication: \nversion: 1\nruntime: go\napi_version: go1\n\nhandlers:\n- url: /.*\n  script: _go_app\n```\n\n\u4ee5\u4e0a\u306e\uff14\u30d5\u30a1\u30a4\u30eb\u3092\uff11\u3064\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5165\u308c\u3066\u3001\u305d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e2d\u304b\u3089\n\n> goapp serve\n\n\u3068\u3057\u3066\u3001\u30d6\u30e9\u30a6\u30b6\u304b\u3089 localhost:8080 \u306b\u30a2\u30af\u30bb\u30b9\u3002CONNECT\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3002\n\n\n\n## v0.2 Datastore \u3092\u4f7f\u3063\u3066\u30de\u30eb\u30c1\u30e6\u30fc\u30b6\u30fc\u306b\u3059\u308b\u3002\n\n\u5909\u66f4\u3059\u308b\u30d5\u30a1\u30a4\u30eb\n- main.go\n- app.yaml\n\n```ruby:main.go\npackage main\n\nimport (\n\t\"net/http\"\n\t\"html/template\"\n\n\t\"appengine\"\n\t\"appengine/channel\"\n\t\"appengine/datastore\"\n)\n\nfunc\ninit() {\n    http.HandleFunc( \"/\", handle )\n\thttp.HandleFunc( \"/_ah/channel/connected/\", connected )\n\thttp.HandleFunc( \"/_ah/channel/disconnected/\", disconnected )\n}\n\nfunc\nChannelKey( ctx appengine.Context, id string ) *datastore.Key {\n\treturn datastore.NewKey( ctx, \"Channels\", id, 0, nil )\n}\n\ntype\nNULL struct {\n}\n\nfunc\nconnected( w http.ResponseWriter, r *http.Request ) {\n\tctx := appengine.NewContext( r )\n\n\tif _, err := datastore.Put(\n\t\tctx,\n\t\tChannelKey( ctx, r.FormValue( \"from\" ) ),\n\t\t&NULL{},\n\t); err != nil { panic( err ) }\n}\n\nfunc\ndisconnected( w http.ResponseWriter, r *http.Request ) {\n\tctx := appengine.NewContext( r )\n\n\tif err := datastore.Delete(\n\t\tctx,\n\t\tChannelKey( ctx, r.FormValue( \"from\" ) ),\n\t); err != nil { panic( err ) }\n}\n\nfunc\nExecute( tag string, w http.ResponseWriter, p interface{} ) {\n\tif err := template.Must( template.ParseFiles( tag + \".html\" ) ).Execute(\n\t\tw,\n\t\tp,\n\t); err != nil { panic( err ) }\n}\n\nfunc\nhandle( w http.ResponseWriter, r *http.Request ) {\n\tswitch r.Method {\n\tcase \"GET\":\n\t\tExecute( \"get\", w, nil )\n\tcase \"POST\":\n\t\twID := r.FormValue( \"ID\" )\n\t\twToken, err := channel.Create( appengine.NewContext( r ), wID )\n\t\tif err != nil { \n\t\t\tExecute( \"get\", w, map[ string ]string { \"Error\": err.Error() } )\n\t\t} else {\n\t\t\tExecute(\n\t\t\t\t\"post\",\n\t\t\t\tw,\n\t\t\t\tmap[ string ]string {\n\t\t\t\t\t\"ID\"\t\t: wID,\n\t\t\t\t\t\"Token\"\t\t: wToken,\n\t\t\t\t},\n\t\t\t)\n\t\t}\n\tcase \"PUT\":\n\t\tctx := appengine.NewContext( r )\n\n\t\tkeys, err := datastore.NewQuery( \"Channels\" ).KeysOnly().GetAll( ctx, nil )\n\t\tif err != nil { panic( err ) }\n\n\t\tfor _, key := range keys {\n\t\t\tif err := channel.SendJSON(\n\t\t\t\tctx,\n\t\t\t\tkey.StringID(),\n\t\t\t\tmap[ string ]interface{} {\n\t\t\t\t\t\"message\"\t: r.FormValue( \"Message\" ),\n\t\t\t\t\t\"ID\"\t\t: r.FormValue( \"ID\" ),\n\t\t\t\t},\n\t\t\t); err != nil { panic( err ) }\n\t\t}\n\t}\n}\n```\n```ruby:app.yaml\napplication: \nversion: 1\nruntime: go\napi_version: go1\n\ninbound_services:\n- channel_presence\n\nhandlers:\n- url: /_ah/channel/connected/\n  script: _go_app\n\n- url: /_ah/channel/disconnected/\n  script: _go_app\n\n- url: /.*\n  script: _go_app\n```\n\n\u30d6\u30e9\u30a6\u30b6\u3092\uff12\u753b\u9762\u958b\u3044\u3066 localhost:8080 \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001ID \u3092\u5225\u306e\u3082\u306e\u306b\u3059\u308b\u3002\n\n<img width=\"705\" alt=\"SS.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/73493/ce054141-3129-73e1-5399-f4273fcacd8c.png\">\n\n## \u5236\u7d04\u306a\u3069\n\n- \u540c\u4e00 ID \u306e\u30c1\u30e3\u30cd\u30eb\u306f\u751f\u6210\u3067\u304d\u308b\uff08\u30a8\u30e9\u30fc\u306b\u306a\u3089\u306a\u3044\uff09\u304c\u4f7f\u7528\u3067\u304d\u306a\u3044\u3002\uff08\u4ed5\u69d8\uff09\n\u4f8b\u3048\u3070\u30d6\u30e9\u30a6\u30b6\uff12\u753b\u9762\u3067\u540c\u4e00 ID \u3067\u751f\u6210\u3059\u308b\u3068\u4e00\u898b\u3046\u307e\u304f\u884c\u304f\u304c\u3001\u3069\u3061\u3089\u304b\u7247\u65b9\u306b\u3057\u304b\u8868\u793a\u3055\u308c\u306a\u3044\u3002\n\n\n- \u7121\u6599\u67a0\u3067\u306f 100 \u30c1\u30e3\u30f3\u30cd\u30eb\u307e\u3067\u4f7f\u7528\u53ef\u80fd\u3002\u305d\u308c\u4ee5\u4e0a\u306f\u30c1\u30e3\u30cd\u30eb\u6570\u306b\u5fdc\u3058\u305f\u5f93\u91cf\u8ab2\u91d1\u306b\u306a\u308b\u3002\n\n\n- post.html \u306e\u4e2d\u306e onmessage \u3067 body \u30bf\u30b0\u306b HTML \u3092\u8ffd\u52a0\u3057\u3088\u3046\u3068\u3057\u305f\u3089\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u306f\u52d5\u304f\u304c\u3001\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u52d5\u304b\u306a\u3044\u3001\u3068\u3044\u3046\u4e0d\u601d\u8b70\u306a\u73fe\u8c61\u304c\u767a\u751f\u3057\u305f\u3002\n", "tags": ["GAE", "channel", "datastore", "template", "Go"]}