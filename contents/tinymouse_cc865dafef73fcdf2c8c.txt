{"context": "Windows \u306e\u30b7\u30a7\u30eb\u62e1\u5f35\uff08Shell Extension\uff09\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001.NET \u3067 Windows \u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc\u3092\u62e1\u5f35 \u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\n\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u306e\u306b\u3001\u3053\u3093\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\uff08\u4e00\u90e8\u7701\u7565\u3057\u3066\u5f15\u7528\u3057\u3066\u3044\u307e\u3059\u3002\uff09\n\nContextMenuExtension.cs\npublic class ContextMenuExtension : IShellExtInit, IContextMenu\n{\n    public void Initialize(IntPtr pidlFolder, IntPtr pDataObj, IntPtr hKeyProgID)\n    {\n        // \u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb/\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\n        if (pDataObj == IntPtr.Zero)\n        {\n            throw new ArgumentException();\n        }\n        FORMATETC fe = new FORMATETC();\n        fe.cfFormat = (short)CLIPFORMAT.CF_HDROP;\n        fe.ptd = IntPtr.Zero;\n        fe.dwAspect = DVASPECT.DVASPECT_CONTENT;\n        fe.lindex = -1;\n        fe.tymed = TYMED.TYMED_HGLOBAL;\n        STGMEDIUM stm = new STGMEDIUM();\n        IDataObject dataObject = (IDataObject)Marshal.GetObjectForIUnknown(pDataObj);\n        dataObject.GetData(ref fe, out stm);\n        try\n        {\n            IntPtr hDrop = stm.unionmember;\n            if (hDrop == IntPtr.Zero)\n            {\n                throw new ArgumentException();\n            }\n            uint nFiles = WinApi.DragQueryFile(hDrop, UInt32.MaxValue, null, 0);\n            if (nFiles == 1)\n            {\n                StringBuilder fileName = new StringBuilder(WinApi.MAX_PATH);\n                if (0 == WinApi.DragQueryFile(hDrop, 0, fileName, fileName.Capacity))\n                {\n                    Marshal.ThrowExceptionForHR(WinError.E_FAIL);\n                }\n                this.selectedFile = fileName.ToString();\n            }\n            else\n            {\n                Marshal.ThrowExceptionForHR(WinError.E_FAIL);\n            }\n        }\n        finally\n        {\n            WinApi.ReleaseStgMedium(ref stm);\n        }\n    }\n\ninternal class WinApi\n{\n    public const int MAX_PATH = 260;\n\n    [DllImport(\"shell32\", CharSet = CharSet.Unicode)]\n    public static extern uint DragQueryFile(IntPtr hDrop, uint iFile, StringBuilder pszFile, int cch);\n\n    [DllImport(\"ole32.dll\", CharSet = CharSet.Unicode)]\n    public static extern void ReleaseStgMedium(ref STGMEDIUM pmedium);\n\n\n\nContextMenuExtension.vb\nPublic Class ContextMenuExtension\n    Implements IShellExtInit, IContextMenu\n\n    Public Sub Initialize(pidlFolder As IntPtr, pDataObj As IntPtr, hKeyProgID As IntPtr) Implements IShellExtInit.Initialize\n\n        '\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb/\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\n        If (pDataObj = IntPtr.Zero) Then\n            Throw New ArgumentException\n        End If\n        Dim fe As New FORMATETC\n        With fe\n            .cfFormat = CLIPFORMAT.CF_HDROP\n            .ptd = IntPtr.Zero\n            .dwAspect = DVASPECT.DVASPECT_CONTENT\n            .lindex = -1\n            .tymed = TYMED.TYMED_HGLOBAL\n        End With\n        Dim stm As New STGMEDIUM\n        Dim dataObject As IDataObject = Marshal.GetObjectForIUnknown(pDataObj)\n        dataObject.GetData(fe, stm)\n        Try\n            Dim hDrop As IntPtr = stm.unionmember\n            If (hDrop = IntPtr.Zero) Then\n                Throw New ArgumentException\n            End If\n            Dim nFiles As UInteger = WinApi.DragQueryFile(hDrop, UInt32.MaxValue, Nothing, 0)\n            If (nFiles = 1) Then\n                Dim fileName As New StringBuilder(WinApi.MAX_PATH)\n                If (0 = WinApi.DragQueryFile(hDrop, 0, fileName, fileName.Capacity)) Then\n                    Marshal.ThrowExceptionForHR(WinError.E_FAIL)\n                End If\n                Me.SelectedFile = fileName.ToString\n            Else\n                Marshal.ThrowExceptionForHR(WinError.E_FAIL)\n            End If\n        Finally\n            WinApi.ReleaseStgMedium((stm))\n        End Try\n    End Sub\n\nFriend Class WinApi\n    <DllImport(\"shell32\", CharSet:=CharSet.Unicode)>\n    Public Shared Function DragQueryFile(ByVal hDrop As IntPtr, ByVal iFile As UInt32, ByVal pszFile As StringBuilder, ByVal cch As Integer) As UInt32\n    End Function\n\n    <DllImport(\"ole32.dll\", CharSet:=CharSet.Unicode)>\n    Public Shared Sub ReleaseStgMedium(ByRef pmedium As STGMEDIUM)\n    End Sub\n\n\n\u9577\u3044\u3067\u3059\u306d\u3002\n\u3053\u3053\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b IDataObject \u306f System.Runtime.InteropServices.ComTypes \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3067\u3059\u3002\u3053\u3061\u3089\u306f\u5143\u3005\u306e COM \u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3002IDataObject \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9 (System.Runtime.InteropServices.ComTypes)\nIDataObject \u306f\u3082\u3046\u4e00\u3064 System.Windows.Forms \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u3061\u3089\u306f .NET Framework \u3067\u7528\u610f\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3002IDataObject \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9 (System.Windows.Forms)\n\u540c\u3058 IDataObject \u3060\u3051\u308c\u3069\u5225\u306e\u3082\u306e\u3067\u3059\u3002\u7d1b\u3089\u308f\u3057\u3044\u3067\u3059\u306d\u3002\n\u8abf\u3079\u3066\u3044\u304f\u3068\u3001\u3053\u3093\u306a\u30af\u30e9\u30b9\u304c\u3042\u308a\u307e\u3057\u305f\u3002\nDataObject \u30af\u30e9\u30b9 (System.Windows.Forms)\n\nC#\n[ClassInterfaceAttribute(ClassInterfaceType.None)]\npublic class DataObject : IDataObject, IDataObject\n\n\n\nVB\nPublic Class DataObject\n    Implements IDataObject, IDataObject\n\n\n\u4fbf\u5229\u305d\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u3001\u524d\u8ff0\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u63db\u3057\u307e\u3059\u3002\n\nContextMenuExtension.cs\n    public void Initialize(IntPtr pidlFolder, IntPtr pDataObj, IntPtr hKeyProgID)\n    {\n        // \u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb/\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\n        if (pDataObj == IntPtr.Zero)\n        {\n            throw new ArgumentException();\n        }\n        DataObject dataObject = new DataObject(Marshal.GetObjectForIUnknown(pDataObj));\n        if (dataObject.ContainsFileDropList())\n        {\n            StringCollection files = dataObject.GetFileDropList();\n        }\n\n\n\nContextMenuExtension.vb\n    Public Sub Initialize(pidlFolder As IntPtr, pDataObj As IntPtr, hKeyProgID As IntPtr) Implements IShellExtInit.Initialize\n\n        '\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb/\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\n        If (pDataObj = IntPtr.Zero) Then\n            Throw New ArgumentException\n        End If\n        Dim dataObject As New DataObject(Marshal.GetObjectForIUnknown(pDataObj))\n        If dataObject.ContainsFileDropList Then\n            Dim files As StringCollection = dataObject.GetFileDropList\n        End If\n\n\n\u77ed\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u3044\u3044\u3067\u3059\u306d\u3002\nWindows \u306e\u30b7\u30a7\u30eb\u62e1\u5f35\uff08Shell Extension\uff09\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001[.NET \u3067 Windows \u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc\u3092\u62e1\u5f35]\n(http://qiita.com/tinymouse/items/26c1bfa0d2a6a2116cff) \u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\n\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u306e\u306b\u3001\u3053\u3093\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\uff08\u4e00\u90e8\u7701\u7565\u3057\u3066\u5f15\u7528\u3057\u3066\u3044\u307e\u3059\u3002\uff09\n\n```csharp:ContextMenuExtension.cs\npublic class ContextMenuExtension : IShellExtInit, IContextMenu\n{\n    public void Initialize(IntPtr pidlFolder, IntPtr pDataObj, IntPtr hKeyProgID)\n    {\n        // \u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb/\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\n        if (pDataObj == IntPtr.Zero)\n        {\n            throw new ArgumentException();\n        }\n        FORMATETC fe = new FORMATETC();\n        fe.cfFormat = (short)CLIPFORMAT.CF_HDROP;\n        fe.ptd = IntPtr.Zero;\n        fe.dwAspect = DVASPECT.DVASPECT_CONTENT;\n        fe.lindex = -1;\n        fe.tymed = TYMED.TYMED_HGLOBAL;\n        STGMEDIUM stm = new STGMEDIUM();\n        IDataObject dataObject = (IDataObject)Marshal.GetObjectForIUnknown(pDataObj);\n        dataObject.GetData(ref fe, out stm);\n        try\n        {\n            IntPtr hDrop = stm.unionmember;\n            if (hDrop == IntPtr.Zero)\n            {\n                throw new ArgumentException();\n            }\n            uint nFiles = WinApi.DragQueryFile(hDrop, UInt32.MaxValue, null, 0);\n            if (nFiles == 1)\n            {\n                StringBuilder fileName = new StringBuilder(WinApi.MAX_PATH);\n                if (0 == WinApi.DragQueryFile(hDrop, 0, fileName, fileName.Capacity))\n                {\n                    Marshal.ThrowExceptionForHR(WinError.E_FAIL);\n                }\n                this.selectedFile = fileName.ToString();\n            }\n            else\n            {\n                Marshal.ThrowExceptionForHR(WinError.E_FAIL);\n            }\n        }\n        finally\n        {\n            WinApi.ReleaseStgMedium(ref stm);\n        }\n    }\n\ninternal class WinApi\n{\n    public const int MAX_PATH = 260;\n\n    [DllImport(\"shell32\", CharSet = CharSet.Unicode)]\n    public static extern uint DragQueryFile(IntPtr hDrop, uint iFile, StringBuilder pszFile, int cch);\n\n    [DllImport(\"ole32.dll\", CharSet = CharSet.Unicode)]\n    public static extern void ReleaseStgMedium(ref STGMEDIUM pmedium);\n```\n\n```vbnet:ContextMenuExtension.vb\nPublic Class ContextMenuExtension\n    Implements IShellExtInit, IContextMenu\n\n    Public Sub Initialize(pidlFolder As IntPtr, pDataObj As IntPtr, hKeyProgID As IntPtr) Implements IShellExtInit.Initialize\n\n        '\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb/\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\n        If (pDataObj = IntPtr.Zero) Then\n            Throw New ArgumentException\n        End If\n        Dim fe As New FORMATETC\n        With fe\n            .cfFormat = CLIPFORMAT.CF_HDROP\n            .ptd = IntPtr.Zero\n            .dwAspect = DVASPECT.DVASPECT_CONTENT\n            .lindex = -1\n            .tymed = TYMED.TYMED_HGLOBAL\n        End With\n        Dim stm As New STGMEDIUM\n        Dim dataObject As IDataObject = Marshal.GetObjectForIUnknown(pDataObj)\n        dataObject.GetData(fe, stm)\n        Try\n            Dim hDrop As IntPtr = stm.unionmember\n            If (hDrop = IntPtr.Zero) Then\n                Throw New ArgumentException\n            End If\n            Dim nFiles As UInteger = WinApi.DragQueryFile(hDrop, UInt32.MaxValue, Nothing, 0)\n            If (nFiles = 1) Then\n                Dim fileName As New StringBuilder(WinApi.MAX_PATH)\n                If (0 = WinApi.DragQueryFile(hDrop, 0, fileName, fileName.Capacity)) Then\n                    Marshal.ThrowExceptionForHR(WinError.E_FAIL)\n                End If\n                Me.SelectedFile = fileName.ToString\n            Else\n                Marshal.ThrowExceptionForHR(WinError.E_FAIL)\n            End If\n        Finally\n            WinApi.ReleaseStgMedium((stm))\n        End Try\n    End Sub\n\nFriend Class WinApi\n    <DllImport(\"shell32\", CharSet:=CharSet.Unicode)>\n    Public Shared Function DragQueryFile(ByVal hDrop As IntPtr, ByVal iFile As UInt32, ByVal pszFile As StringBuilder, ByVal cch As Integer) As UInt32\n    End Function\n\n    <DllImport(\"ole32.dll\", CharSet:=CharSet.Unicode)>\n    Public Shared Sub ReleaseStgMedium(ByRef pmedium As STGMEDIUM)\n    End Sub\n```\n\n\u9577\u3044\u3067\u3059\u306d\u3002\n\u3053\u3053\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b ```IDataObject``` \u306f ```System.Runtime.InteropServices.ComTypes``` \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3067\u3059\u3002\u3053\u3061\u3089\u306f\u5143\u3005\u306e COM \u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3002[IDataObject \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9 (System.Runtime.InteropServices.ComTypes)]\n(https://msdn.microsoft.com/ja-jp/library/system.runtime.interopservices.comtypes.idataobject(v=vs.110).aspx)\n```IDataObject``` \u306f\u3082\u3046\u4e00\u3064 ```System.Windows.Forms``` \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u3061\u3089\u306f .NET Framework \u3067\u7528\u610f\u3055\u308c\u305f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3002[IDataObject \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9 (System.Windows.Forms)]\n(https://msdn.microsoft.com/ja-jp/library/system.windows.forms.idataobject(v=vs.110).aspx)\n\u540c\u3058 ```IDataObject``` \u3060\u3051\u308c\u3069\u5225\u306e\u3082\u306e\u3067\u3059\u3002\u7d1b\u3089\u308f\u3057\u3044\u3067\u3059\u306d\u3002\n\n\u8abf\u3079\u3066\u3044\u304f\u3068\u3001\u3053\u3093\u306a\u30af\u30e9\u30b9\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n[DataObject \u30af\u30e9\u30b9 (System.Windows.Forms)]\n(https://msdn.microsoft.com/ja-jp/library/system.windows.forms.dataobject(v=vs.110).aspx)\n\n```csharp:C#\n[ClassInterfaceAttribute(ClassInterfaceType.None)]\npublic class DataObject : IDataObject, IDataObject\n```\n\n```vbnet:VB<ClassInterfaceAttribute(ClassInterfaceType.None)>\nPublic Class DataObject\n\tImplements IDataObject, IDataObject\n```\n\n\u4fbf\u5229\u305d\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u3001\u524d\u8ff0\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u63db\u3057\u307e\u3059\u3002\n\n```csharp:ContextMenuExtension.cs\n    public void Initialize(IntPtr pidlFolder, IntPtr pDataObj, IntPtr hKeyProgID)\n    {\n        // \u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb/\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\n        if (pDataObj == IntPtr.Zero)\n        {\n            throw new ArgumentException();\n        }\n        DataObject dataObject = new DataObject(Marshal.GetObjectForIUnknown(pDataObj));\n        if (dataObject.ContainsFileDropList())\n        {\n            StringCollection files = dataObject.GetFileDropList();\n        }\n```\n\n```vbnet:ContextMenuExtension.vb\n    Public Sub Initialize(pidlFolder As IntPtr, pDataObj As IntPtr, hKeyProgID As IntPtr) Implements IShellExtInit.Initialize\n\n        '\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb/\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53d6\u5f97\n        If (pDataObj = IntPtr.Zero) Then\n            Throw New ArgumentException\n        End If\n        Dim dataObject As New DataObject(Marshal.GetObjectForIUnknown(pDataObj))\n        If dataObject.ContainsFileDropList Then\n            Dim files As StringCollection = dataObject.GetFileDropList\n        End If\n```\n\n\u77ed\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u3044\u3044\u3067\u3059\u306d\u3002\n\n\n", "tags": [".NET", "C#", "VB.Net"]}