{"context": " More than 1 year has passed since last update.\u3053\u306e\u9031\u672bgolang\u30fbreact.js\u306e\u57fa\u790e\u3092\u52c9\u5f37\u3067\u304d\u5145\u5b9f\uff01 react.js\u306e\u4e8b\u524d\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u8a66\u3057\u3066\u307f\u305f\u7d50\u679c\u3092\u8f09\u305b\u3068\u304d\u307e\u3059\u3002\n\nInstall && Setup\n\nhttps://github.com/reactjs/react-rails\n\u4ee5\u4e0b\u304b\u3089turbolink\u3092\u524a\u9664\n\n\nGemfile\napp/assets/javascripts/application.js\napp/views/layouts/application.html.erb\n\n\n\n# Gemfile\ngem 'react-rails', '~> 1.6.0'\n\n# config/environments/development.rb\nconfig.react.variant = :development\n\n# config/environments/production.rb\nconfig.react.variant = :production\n\nbundle install --vendor/bundle\nrails g react:install\n\n\nGenerate files\nrails g controller home index\nrails g controller comments create\nrails g model comment name:string message:text\nbundle exec rake db:migrate\n\n# config/routes.rb\nRails.application.routes.draw do\n  root 'home#index'\n  resources :comments, only: [:create]\nend\n\n\nControllers\n# app/controllers/home_controller.rb\nclass HomeController < ApplicationController\n  def index\n    @comments = Comment.all\n    props = { comments: @comments, url: '/comments' }\n    render component: 'CommentArea', props: props, tag: 'span', class: 'comment'\n  end\nend\n\n# app/controllers/comments_controller.rb\nclass CommentsController < ApplicationController\n  def create\n    comment = Comment.create(comment_params)\n    render json: comment, status: :created\n  end\n\n  private\n    def comment_params\n      params.permit(:name, :message)\n    end\nend\n\n\nJSX\n# app/assets/javascripts/components/comment_form.js.jsx\nvar CommentForm = React.createClass({\n  handleSubmit: function(e) {\n    e.preventDefault();\n    this.props.onCommentSubmit({ \n      name: this.refs.name.value.trim(), \n      message: this.refs.message.value.trim()\n    });\n\n    this.refs.name.value = '';\n    this.refs.message.value = '';\n  },\n  render: function() {\n    return (\n      <form className=\"commentForm\" onSubmit={this.handleSubmit}>\n        <input type=\"text\" placeholder=\"Your Name\" ref=\"name\" />\n        <input type=\"text\" placeholder=\"Message...\" ref=\"message\" />\n        <input type=\"submit\" value=\"Post\" />\n      </form>\n    );\n  }\n});\n\n# app/assets/javascripts/components/comment_item.js.jsx\nvar CommentItem = React.createClass({\n  render: function() {\n    return (\n      <div className=\"comment\">\n        <h2 className=\"comment-user\">{this.props.comment.name}</h2>\n        <span className=\"comment-message\">{this.props.comment.message}</span>\n      </div>\n    );\n  }\n});\n\n# app/assets/javascripts/components/comment.js.jsx\nvar CommentArea = React.createClass({\n  getInitialState: function() {\n    return { comments: this.props.comments, isLoading: false };\n  },\n\n  handleCommentSubmit: function(message) {\n    message.id = new Date();\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      type: 'POST',\n      data: message,\n      success: function(comment) {\n        this.setState({ comments: this.state.comments.concat(comment) });\n      }.bind(this),\n      error: function(_xhr, status, error) {\n        console.error(this.props.url, status, error.toString());\n      }.bind(this)\n    });\n  },\n\n  render: function() {\n\n    var commentItems = this.state.comments.map(function(comment) {\n      return (\n        <CommentItem key={comment.id} comment={comment} />\n      );\n    });\n\n    return (\n      <div>\n        {commentItems}\n        <CommentForm onCommentSubmit={this.handleCommentSubmit} />\n      </div>\n    );\n  }\n});\n\n\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\nhttps://github.com/mugish/prerendering-react-js-with-rails\n\n\u3053\u306e\u9031\u672b`golang`\u30fb`react.js`\u306e\u57fa\u790e\u3092\u52c9\u5f37\u3067\u304d\u5145\u5b9f\uff01 react.js\u306e\u4e8b\u524d\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3092\u8a66\u3057\u3066\u307f\u305f\u7d50\u679c\u3092\u8f09\u305b\u3068\u304d\u307e\u3059\u3002\n\n## Install && Setup\n\n- https://github.com/reactjs/react-rails\n- \u4ee5\u4e0b\u304b\u3089turbolink\u3092\u524a\u9664\n    - Gemfile\n    - app/assets/javascripts/application.js\n    - app/views/layouts/application.html.erb\n\n\\# Gemfile\n\n```\ngem 'react-rails', '~> 1.6.0'\n```\n\n\\# config/environments/development.rb\n\n```\nconfig.react.variant = :development\n```\n\n\\# config/environments/production.rb\n\n```\nconfig.react.variant = :production\n```\n\n\n```\nbundle install --vendor/bundle\nrails g react:install\n```\n\n## Generate files\n\n```\nrails g controller home index\nrails g controller comments create\nrails g model comment name:string message:text\nbundle exec rake db:migrate\n```\n\n\\# config/routes.rb\n\n```\nRails.application.routes.draw do\n  root 'home#index'\n  resources :comments, only: [:create]\nend\n```\n\n## Controllers\n\n\\# app/controllers/home_controller.rb\n\n```\nclass HomeController < ApplicationController\n  def index\n    @comments = Comment.all\n    props = { comments: @comments, url: '/comments' }\n    render component: 'CommentArea', props: props, tag: 'span', class: 'comment'\n  end\nend\n```\n\n\\# app/controllers/comments_controller.rb\n\n```\nclass CommentsController < ApplicationController\n  def create\n    comment = Comment.create(comment_params)\n    render json: comment, status: :created\n  end\n\n  private\n    def comment_params\n      params.permit(:name, :message)\n    end\nend\n```\n\n## JSX\n\n\\# app/assets/javascripts/components/comment_form.js.jsx\n\n```\nvar CommentForm = React.createClass({\n  handleSubmit: function(e) {\n    e.preventDefault();\n    this.props.onCommentSubmit({ \n      name: this.refs.name.value.trim(), \n      message: this.refs.message.value.trim()\n    });\n\n    this.refs.name.value = '';\n    this.refs.message.value = '';\n  },\n  render: function() {\n    return (\n      <form className=\"commentForm\" onSubmit={this.handleSubmit}>\n        <input type=\"text\" placeholder=\"Your Name\" ref=\"name\" />\n        <input type=\"text\" placeholder=\"Message...\" ref=\"message\" />\n        <input type=\"submit\" value=\"Post\" />\n      </form>\n    );\n  }\n});\n```\n\n\\# app/assets/javascripts/components/comment_item.js.jsx\n\n```\nvar CommentItem = React.createClass({\n  render: function() {\n    return (\n      <div className=\"comment\">\n        <h2 className=\"comment-user\">{this.props.comment.name}</h2>\n        <span className=\"comment-message\">{this.props.comment.message}</span>\n      </div>\n    );\n  }\n});\n```\n\n\\# app/assets/javascripts/components/comment.js.jsx\n\n```\nvar CommentArea = React.createClass({\n  getInitialState: function() {\n    return { comments: this.props.comments, isLoading: false };\n  },\n\n  handleCommentSubmit: function(message) {\n    message.id = new Date();\n    $.ajax({\n      url: this.props.url,\n      dataType: 'json',\n      type: 'POST',\n      data: message,\n      success: function(comment) {\n        this.setState({ comments: this.state.comments.concat(comment) });\n      }.bind(this),\n      error: function(_xhr, status, error) {\n        console.error(this.props.url, status, error.toString());\n      }.bind(this)\n    });\n  },\n\n  render: function() {\n\n    var commentItems = this.state.comments.map(function(comment) {\n      return (\n        <CommentItem key={comment.id} comment={comment} />\n      );\n    });\n\n    return (\n      <div>\n        {commentItems}\n        <CommentForm onCommentSubmit={this.handleCommentSubmit} />\n      </div>\n    );\n  }\n});\n```\n\n## \u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\n- https://github.com/mugish/prerendering-react-js-with-rails\n", "tags": ["react.js", "Rails"]}