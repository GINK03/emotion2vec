{"tags": ["async", "Node.js", "JavaScript"], "context": " More than 1 year has passed since last update.\n\n\u76ee\u6b21\n\nAsync.js\u3068\u306f\nNeo-Async.js\u3068\u306f\n\u4f5c\u3063\u305f\u7d4c\u7def\n\u901f\u5ea6\u6bd4\u8f03\n\u6a5f\u80fd\u4e00\u89a7\n\u4eca\u5f8c\u306e\u4e88\u5b9a\n\n\nAsync.js\u3068\u306f\n\njs\u3067\u975e\u540c\u671f\u7cfb\u306e\u51e6\u7406\u3092\u3059\u308b\u3068\u8a00\u3048\u3070\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\ngithub\u3067\u2605\u304c\uff11\u4e07\u8d85\u3048\n\n\nNeo-Async.js\u3068\u306f\n\nAsync\u3088\u308a\u901f\u3044\nAsync\u306b\u5b8c\u5168\u306b\u4e92\u63db\u6027\u304c\u3042\u308b\n\u307b\u307c\u5168\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u3067iterator\u306b\u5bfe\u3057bind\u3067\u304d\u308b\nObject\u3092\u3044\u3061\u3044\u3061Array\u306b\u5909\u63db\u3057\u3066\u6295\u3052\u308b\u5fc5\u8981\u304c\u306a\u3044\n\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u3067\u843d\u3061\u306a\u3044\n\u4fbf\u5229\u306a\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\nhttps://github.com/suguru03/Neo-Async\n\n$ npm install neo-async\n\n\n\u4f5c\u3063\u305f\u7d4c\u7def\n\nnull\u3067\u672c\u756a\u30b5\u30fc\u30d0\u6b7b\u3093\u3060\nPR\u304c\u53d6\u308a\u8fbc\u307e\u308c\u306a\u3044\n\u3084\u308a\u305f\u3044\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u591a\u3044\n5\u6708\u304b\u3089\u66f4\u65b0\u7121\u304b\u3063\u305f\uff08\u4f5c\u3063\u3066\u308b\u9593\u306b\u5c11\u3057\u66f4\u65b0\u3055\u308c\u305f\uff01\uff09\n\n\n\u901f\u5ea6\u6bd4\u8f03\n\n\u7d50\u679c\n\nseries\n\n\nasync\u3088\u308a2.4\u500d\u901f\u3044\n\n\nparallel\n\n\nasync\u3088\u308a2.8\u500d\u901f\u3044\n\n\nwaterfall\n\n\nasync\u3088\u308a3.7\u500d\u901f\u3044\nasync\u3088\u308a7.7\u500d\u901f\u3044 (v0.2.5)\n\n\n\n\n\u5171\u901a\u51e6\u7406\n#!/usr/bin/env node --expose_gc\nvar _ = require('lodash');\nvar async = require('async');\nvar neo_async = require('neo-async');\nvar start = function() {\n  return process.hrtime();\n};\nvar getDiff = function(start) {\n  var diff = process.hrtime(start);\n  return diff[0] * 1e9 + diff[1];\n};\nvar sample = 1000;\nvar time = {\n  async: 0,\n  neo_async: 0\n};\n\n\n\nstart\u3068getDiff\u306f\u6642\u9593\u6e2c\u5b9a\u306b\u4f7f\u3044\u307e\u3059\u3002\nsample(tasks)\u6570\u306f\u5168\u90e8\u5171\u901a\u30671000\u3067\u3059\u3002\nnode --version v0.10.33\n\n\nseries\n// series\u306e\u30bf\u30b9\u30af\u4f5c\u308a\u307e\u3059\nvar tasks = _.map(_.times(sample), function(item) {\n  return function(callback) {\n    callback(null, item);\n  };\n});\n\nvar timer = start();\nasync.series(tasks, function(err, res1) {\n   time.async = getDiff(timer);\n\n   global.gc();\n   timer = start();\n    neo_async.series(tasks, function(err, res2) {\n      time.neo_async = getDiff(timer);\n\n      // res1\u3068res2\u304c\u5b8c\u5168\u306b\u4e00\u81f4\u3057\u3066\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307e\u3059\n      var check = _.every(res1, function(item, index) {\n        return res2[index] === item;\n      });\n      console.log('check', check);\n      console.log('**** time ****');\n      console.log(time);\n      console.log(time.async / time.neo_async);\n    });\n});\n\n\nasync, neo_async\u306e\u9806\n\n\n{ async: 2632607, neo_async: 1097360 }\n2.4\u500d\n\n\nneo_sync, async\u306e\u9806\n\n\n{ async: 3749187, neo_async: 1615040 }\n3.4\u500d\n\n\n\n\nparallel\nvar tasks = _.map(_.times(sample), function(item) {\n  return function(callback) {\n    callback(null, item);\n  };\n});\n\nvar timer = start();\nneo_async.parallel(tasks, function(err, res1) {\n   time.neo_async = getDiff(timer);\n\n   global.gc();\n   timer = start();\n    async.parallel(tasks, function(err, res2) {\n      time.async = getDiff(timer);\n\n      var check = _.every(res1, function(item, index) {\n        return res2[index] === item;\n      });\n      console.log('check', check);\n      console.log('**** time ****');\n      console.log(time);\n      console.log(time.async / time.neo_async);\n    });\n});\n\n\nasync, neo_async\u306e\u9806\n\n\n{ async: 3291565, neo_async: 1166516 }\n2.8\u500d\n\n\nneo_sync, async\u306e\u9806\n\n\n{ async: 3326372, neo_async: 1174852 }\n2.8\u500d\n\n\n\n\nwaterfall\n// waterfall\u4f5c\u308b\u30bf\u30b9\u30af\u3067\u3059\u3002\nvar tasks = (function createSimpleTasks(num) {\n  var first = true;\n  var tasks = _.transform(_.times(num), function(memo, num, key) {\n    if (first) {\n      first = false;\n      memo[key] = function(done) {\n        done(null, num);\n      };\n    } else {\n      memo[key] = function(sum, done) {\n        done(null, sum + num);\n      };\n    }\n  });\n  return tasks;\n})(sample);\n\nvar timer = start();\nasync.waterfall(tasks, function(err, res1) {\n  time.neo_async = getDiff(timer);\n\n  global.gc();\n  timer = start();\n  async.waterfall(tasks, function(err, res2) {\n    time.async = getDiff(timer);\n\n    console.log('check', res1 === res2);\n    console.log('**** time ****');\n    console.log(time);\n    console.log(time.async / time.neo_async);\n  });\n});\n\n\nv0.1.0\n\nasync, neo_async\u306e\u9806\n\n\n{ async: 11875267, neo_async: 3183565 }\n3.7\u500d\n\n\nneo_sync, async\u306e\u9806\n\n\n{ async: 11667079, neo_async: 2760822 }\n4.2\u500d\n\n\n\n\nv0.2.5\n\nasync, neo_async\u306e\u9806\n\n\n{ async: 10423769, neo_async: 1349466 }\n7.7\u500d\n\n\nneo_sync, async\u306e\u9806\n\n\n{ async: 10460708, neo_async: 1366448 }\n7.7\u500d\n\n\n\n\n\u6a5f\u80fd\u4e00\u89a7\n\nCollections\n\nasync.each [Series, Limit]\nasync.map [Series, Limit]\nasync.filter [Series, Limit]\nasync.reject [Series, Limit]\nasync.detect [Series, Limit]\nasync.pick [Series, Limit]\nasync.transform [Series, Limit]\nasync.reduce\nasync.reduceRight\nasync.sortBy [Series, Limit]\nasync.some [Series, Limit]\nasync.every [Series, Limit]\nasync.concat [Series, Limit]\n\n\nControl Flow\n\nasync.series\nasync.parallel [Limit]\nasync.waterfall\nasync.whilst\nasync.doWhilst\nasync.until\nasync.doUntil\nasync.forever\nasync.seq\nasync.applyEach [Series]\nasync.queue\nasync.priorityQueue\nasync.cargo\nasync.auto\nasync.retry\nasync.iterator\nasync.nextTick\nasync.setImmediate\nasync.times [Series, Limit]\n\n\nUtils\n\nasync.memoize\nasync.unmemoize\nasync.log\nasync.dir\nasync.noConflict\n\n\n\u4eca\u5f8c\u306e\u4e88\u5b9a\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u3046\uff01\n\u30d5\u30ed\u30f3\u30c8\u5bfe\u5fdc\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u8ffd\u52a0\n\u4fbf\u5229\u306a\u6a5f\u80fd\u8ffd\u52a0\n\u5197\u9577\u306a\u306e\u3067\u30ea\u30d5\u30a1\u30af\u30bf\u3059\u308b\n\n\n\u7d42\u308f\u308a\u306b\n\u6700\u5f8c\u307e\u3067\u8aad\u3093\u3067\u3044\u305f\u3060\u304d\u6709\u96e3\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\u307e\u3060\u307e\u3060\u672a\u719f\u3067\u3059\u304c\u3088\u308a\u826f\u3044\u30e2\u30ce\u4f5c\u308a\u304c\u3067\u304d\u308b\u3088\u3046\u9811\u5f35\u3063\u3066\u884c\u304d\u305f\u3044\u3067\u3059\u3002\n\n![NEO_async_3.png](https://qiita-image-store.s3.amazonaws.com/0/17390/5c8b9bf6-b151-41e4-9453-c472b64e5e4e.png \"NEO_async_3.png\")\n\n## \u76ee\u6b21\n\n* Async.js\u3068\u306f\n* Neo-Async.js\u3068\u306f\n* \u4f5c\u3063\u305f\u7d4c\u7def\n* \u901f\u5ea6\u6bd4\u8f03\n* \u6a5f\u80fd\u4e00\u89a7\n* \u4eca\u5f8c\u306e\u4e88\u5b9a\n\n## Async.js\u3068\u306f\n\n* js\u3067\u975e\u540c\u671f\u7cfb\u306e\u51e6\u7406\u3092\u3059\u308b\u3068\u8a00\u3048\u3070\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\n* github\u3067\u2605\u304c\uff11\u4e07\u8d85\u3048\n\n## Neo-Async.js\u3068\u306f\n\n* Async\u3088\u308a\u901f\u3044\n* Async\u306b\u5b8c\u5168\u306b\u4e92\u63db\u6027\u304c\u3042\u308b\n* \u307b\u307c\u5168\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u3067iterator\u306b\u5bfe\u3057bind\u3067\u304d\u308b\n* Object\u3092\u3044\u3061\u3044\u3061Array\u306b\u5909\u63db\u3057\u3066\u6295\u3052\u308b\u5fc5\u8981\u304c\u306a\u3044\n* \u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u3067\u843d\u3061\u306a\u3044\n* \u4fbf\u5229\u306a\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\n* https://github.com/suguru03/Neo-Async\n\n```bash\n$ npm install neo-async\n```\n\n## \u4f5c\u3063\u305f\u7d4c\u7def\n\n* null\u3067\u672c\u756a\u30b5\u30fc\u30d0\u6b7b\u3093\u3060\n* PR\u304c\u53d6\u308a\u8fbc\u307e\u308c\u306a\u3044\n* \u3084\u308a\u305f\u3044\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3053\u3068\u304c\u591a\u3044\n* 5\u6708\u304b\u3089\u66f4\u65b0\u7121\u304b\u3063\u305f\uff08\u4f5c\u3063\u3066\u308b\u9593\u306b\u5c11\u3057\u66f4\u65b0\u3055\u308c\u305f\uff01\uff09\n\n## \u901f\u5ea6\u6bd4\u8f03\n\n### \u7d50\u679c\n\n* series\n    * async\u3088\u308a2.4\u500d\u901f\u3044\n* parallel\n    * async\u3088\u308a2.8\u500d\u901f\u3044\n* waterfall\n    * ~~async\u3088\u308a3.7\u500d\u901f\u3044~~\n    * async\u3088\u308a7.7\u500d\u901f\u3044 (v0.2.5)\n\n### \u5171\u901a\u51e6\u7406\n```js\n#!/usr/bin/env node --expose_gc\nvar _ = require('lodash');\nvar async = require('async');\nvar neo_async = require('neo-async');\nvar start = function() {\n  return process.hrtime();\n};\nvar getDiff = function(start) {\n  var diff = process.hrtime(start);\n  return diff[0] * 1e9 + diff[1];\n};\nvar sample = 1000;\nvar time = {\n  async: 0,\n  neo_async: 0\n};\n\n```\n\n* start\u3068getDiff\u306f\u6642\u9593\u6e2c\u5b9a\u306b\u4f7f\u3044\u307e\u3059\u3002\n* sample(tasks)\u6570\u306f\u5168\u90e8\u5171\u901a\u30671000\u3067\u3059\u3002\n* node --version v0.10.33\n\n### series\n\n```js\n// series\u306e\u30bf\u30b9\u30af\u4f5c\u308a\u307e\u3059\nvar tasks = _.map(_.times(sample), function(item) {\n  return function(callback) {\n    callback(null, item);\n  };\n});\n\nvar timer = start();\nasync.series(tasks, function(err, res1) {\n   time.async = getDiff(timer);\n   \n   global.gc();\n   timer = start();\n    neo_async.series(tasks, function(err, res2) {\n      time.neo_async = getDiff(timer);\n\n      // res1\u3068res2\u304c\u5b8c\u5168\u306b\u4e00\u81f4\u3057\u3066\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307e\u3059\n      var check = _.every(res1, function(item, index) {\n        return res2[index] === item;\n      });\n      console.log('check', check);\n      console.log('**** time ****');\n      console.log(time);\n      console.log(time.async / time.neo_async);\n    });\n});\n```\n\n* async, neo_async\u306e\u9806\n    * { async: 2632607, neo_async: 1097360 }\n    * 2.4\u500d\n* neo_sync, async\u306e\u9806\n    * { async: 3749187, neo_async: 1615040 }\n    * 3.4\u500d\n\n### parallel\n\n```js\nvar tasks = _.map(_.times(sample), function(item) {\n  return function(callback) {\n    callback(null, item);\n  };\n});\n\nvar timer = start();\nneo_async.parallel(tasks, function(err, res1) {\n   time.neo_async = getDiff(timer);\n\n   global.gc();\n   timer = start();\n    async.parallel(tasks, function(err, res2) {\n      time.async = getDiff(timer);\n\n      var check = _.every(res1, function(item, index) {\n        return res2[index] === item;\n      });\n      console.log('check', check);\n      console.log('**** time ****');\n      console.log(time);\n      console.log(time.async / time.neo_async);\n    });\n});\n```\n* async, neo_async\u306e\u9806\n    * { async: 3291565, neo_async: 1166516 }\n    * 2.8\u500d\n* neo_sync, async\u306e\u9806\n    * { async: 3326372, neo_async: 1174852 }\n    * 2.8\u500d\n\n### waterfall\n\n```js\n// waterfall\u4f5c\u308b\u30bf\u30b9\u30af\u3067\u3059\u3002\nvar tasks = (function createSimpleTasks(num) {\n  var first = true;\n  var tasks = _.transform(_.times(num), function(memo, num, key) {\n    if (first) {\n      first = false;\n      memo[key] = function(done) {\n        done(null, num);\n      };\n    } else {\n      memo[key] = function(sum, done) {\n        done(null, sum + num);\n      };\n    }\n  });\n  return tasks;\n})(sample);\n\nvar timer = start();\nasync.waterfall(tasks, function(err, res1) {\n  time.neo_async = getDiff(timer);\n\n  global.gc();\n  timer = start();\n  async.waterfall(tasks, function(err, res2) {\n    time.async = getDiff(timer);\n\n    console.log('check', res1 === res2);\n    console.log('**** time ****');\n    console.log(time);\n    console.log(time.async / time.neo_async);\n  });\n});\n```\n#### v0.1.0\n* async, neo_async\u306e\u9806\n    * { async: 11875267, neo_async: 3183565 }\n    * 3.7\u500d\n* neo_sync, async\u306e\u9806\n    * { async: 11667079, neo_async: 2760822 }\n    * 4.2\u500d\n\n#### v0.2.5\n* async, neo_async\u306e\u9806\n\t* { async: 10423769, neo_async: 1349466 }\n\t* 7.7\u500d\n* neo_sync, async\u306e\u9806\n\t* { async: 10460708, neo_async: 1366448 }\n\t* 7.7\u500d\n\n## \u6a5f\u80fd\u4e00\u89a7\n\n### Collections\n\n* async.each [Series, Limit]\n* async.map [Series, Limit]\n* async.filter [Series, Limit]\n* async.reject [Series, Limit]\n* async.detect [Series, Limit]\n* async.pick [Series, Limit]\n* async.transform [Series, Limit]\n* async.reduce\n* async.reduceRight\n* async.sortBy [Series, Limit]\n* async.some [Series, Limit]\n* async.every [Series, Limit]\n* async.concat [Series, Limit]\n\n### Control Flow\n\n* async.series\n* async.parallel [Limit]\n* async.waterfall\n* async.whilst\n* async.doWhilst\n* async.until\n* async.doUntil\n* async.forever\n* async.seq\n* async.applyEach [Series]\n* async.queue\n* async.priorityQueue\n* async.cargo\n* async.auto\n* async.retry\n* async.iterator\n* async.nextTick\n* async.setImmediate\n* async.times [Series, Limit]\n\n### Utils\n\n* async.memoize\n* async.unmemoize\n* async.log\n* async.dir\n* async.noConflict\n\n## \u4eca\u5f8c\u306e\u4e88\u5b9a\n\n* \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u3046\uff01\n* \u30d5\u30ed\u30f3\u30c8\u5bfe\u5fdc\n* \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u8ffd\u52a0\n* \u4fbf\u5229\u306a\u6a5f\u80fd\u8ffd\u52a0\n* \u5197\u9577\u306a\u306e\u3067\u30ea\u30d5\u30a1\u30af\u30bf\u3059\u308b\n\n## \u7d42\u308f\u308a\u306b\n\n\u6700\u5f8c\u307e\u3067\u8aad\u3093\u3067\u3044\u305f\u3060\u304d\u6709\u96e3\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\u307e\u3060\u307e\u3060\u672a\u719f\u3067\u3059\u304c\u3088\u308a\u826f\u3044\u30e2\u30ce\u4f5c\u308a\u304c\u3067\u304d\u308b\u3088\u3046\u9811\u5f35\u3063\u3066\u884c\u304d\u305f\u3044\u3067\u3059\u3002\n"}