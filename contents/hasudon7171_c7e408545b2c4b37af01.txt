{"tags": ["RaspberryPi", "Slack", "asterisk", "Python"], "context": "Raspberry Pi\u3092\u76e3\u8996\u30ab\u30e1\u30e9\u3068\u3057\u3066\u52d5\u304b\u3059\u306e\u306f\u5b9a\u756a\u3067\u3059\u304c\n\u52d5\u4f53\u691c\u77e5\u6642\u306b\u6307\u5b9a\u3057\u305f\u756a\u53f7\u3078\u96fb\u8a71\u901a\u77e5\u3059\u308b\u3082\u306e\u306f\u306a\u304b\u3063\u305f\u306e\u3067\u3064\u304f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4ed5\u69d8\n\nmotion\u3092\u5229\u7528\u3057\u3066\u52d5\u4f53\u691c\u77e5\u3092\u884c\u3046\n\u52d5\u4f53\u691c\u77e5\u6642\u306b\u64ae\u5f71\u3057\u3066Slack\u3078\u81ea\u52d5\u6295\u7a3f\nSlack\u3078\u6295\u7a3f\u3059\u308b\u3064\u3044\u3067\u306b\u6307\u5b9a\u756a\u53f7\u306b\u96fb\u8a71\u3092\u304b\u3051\u3066\u77e5\u3089\u305b\u308b\nSlack\u306b\u7740\u4fe1ON/OFF\u3068\u306a\u308b\u6295\u7a3f\u3002\u96fb\u8a71\u3067\u901a\u77e5\u3057\u3066\u307b\u3057\u3044\u6642\u306b\u7740\u4fe1\u3055\u305b\u308b\n\n\u7528\u9014\u3068\u3057\u3066\u306f\u30fb\u30fb\n\u81ea\u5b85\u306b\u5b50\u4f9b\u304c\u5e30\u3063\u304d\u305f\u3053\u3068\u3092\u52d5\u4f53\u691c\u77e5\u3057\u3066\u96fb\u8a71\u7740\u4fe1\u3002\n\u2193\n\u300c\u304a\uff1f\u96fb\u8a71\u304c\u304d\u305f\u300d\u3002Slack\u3067\u5b50\u4f9b\u306e\u59ff\u3092\u78ba\u8a8d\n\u2193\n\u7740\u4fe1OFF\u3092Slack\u306b\u6295\u7a3f\u3057\u3066\u52d5\u4f53\u691c\u77e5\u3057\u3066\u3082\u7740\u4fe1\u3055\u305b\u306a\u3044\n\n\u74b0\u5883\n\nRaspberry Pi Model B\nRaspbian (Kernel version 3.18)\nAsterisk 13.5.0\nPython 2.6.6\n\n\u30ab\u30e1\u30e9\u306f LOGICOOL \u30a6\u30a7\u30d6\u30ab\u30e0 HD\u753b\u8cea 120\u4e07\u753b\u7d20 C270(Amazon) \u3092\u4f7f\u7528\u3002\n\n\u624b\u9806\n\nAsterisk\u306e\u8a2d\u5b9a\nAsterisk\u306e\u8a2d\u5b9a\u306f\u4e0b\u8a18\u3092\u53c2\u8003\nRaspberry Pi\u3068Asterisk\u3067IP\u96fb\u8a71\u30b7\u30b9\u30c6\u30e0\u306e\u69cb\u7bc9(\u305d\u306e1)\nRaspberry Pi\u3068Asterisk\u3067IP\u96fb\u8a71\u30b7\u30b9\u30c6\u30e0\u306e\u69cb\u7bc9(\u305d\u306e2)\n\nmotion\u306e\u8a2d\u5b9a\nmotion\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\n\nTerminal\napt-get install -y motion\n\n\nmotion.conf\u3092\u5909\u66f4\u3057\u307e\u3059\n\nTerminal\nvi /etc/motion/motion.conf\n\n\n\nmotion.conf\n# Threshold for number of changed pixels in an image that\n# triggers motion detection (default: 1500)\n#threshold 1500\nthreshold 8000   #\u5199\u771f\u3092\u64ae\u5f71\u3059\u308b\u30c8\u30ea\u30ac\u3068\u306a\u308b\u3057\u304d\u3044\u5024\u3092\u4e0a\u3052\u307e\u3059\n\n\uff1a\n\n# Target base directory for pictures and films\n# Recommended to use absolute path. (Default: current working directory)\ntarget_dir /tmp/motion #\u64ae\u5f71\u3057\u305f\u753b\u50cf\u306e\u4fdd\u5b58\u5148\u3092\u8a2d\u5b9a\u3057\u307e\u3059\n\n\uff1a\n\n#\u64ae\u5f71\u6642\u306bmotion.py\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u306e%f\u306f\u64ae\u5f71\u3057\u305f\u30d5\u30a1\u30a4\u30ebPATH\non_picture_save python /home/hasuo/motion/motion.py %f\n\n\n\nmotion\u3092\u5b9f\u884c\u3057\u3066\u3001\u30ab\u30e1\u30e9\u304c\u52d5\u4f53\u691c\u77e5\u3057\u3066/home/tmp/\u306b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308c\u3070\u6210\u529f\u3067\u3059\n\nTerminal\nmotion -c /etc/motion/motion.conf\n\n\n\nSlack\u306e\u8a2d\u5b9a\nSlack\u3067\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u767a\u884c\u3057\u307e\u3059\u3002\nSlack\u306eAPI\u3092\u5229\u7528\u3057\u3066\u6295\u7a3f\u3059\u308b\u305f\u3081\u3001\u30c8\u30fc\u30af\u30f3\u3068\u30c1\u30e3\u30f3\u30cd\u30ebID\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\nhttps://api.slack.com/methods/channels.list/test\nSign In\u3057\u305f\u72b6\u614b\u3067[Test Mode]\u62bc\u4e0b\u3067\u30c8\u30fc\u30af\u30f3\u3068\u30c1\u30e3\u30f3\u30cd\u30ebID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nURL\nhttps://slack.com/api/channels.list?token=<\u30c8\u30fc\u30af\u30f3>&pretty=1 \n\n\n\nchannels.list\u5b9f\u884c\u7d50\u679c\n{\n    \"ok\": true,\n    \"channels\": [\n        {\n            \"id\": \"<\u30c1\u30e3\u30f3\u30cd\u30ebID>\",\n            \"name\": \"general\",\n            \"is_channel\": true,\n              :\n\n\n\n\u753b\u50cf\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\nSlack\u306eAPI\u3092\u5229\u7528\u3057\u3066\u52d5\u4f53\u691c\u77e5\u6642\u306bSlack\u3078\u81ea\u52d5\u7684\u306b\u753b\u50cf\u6295\u7a3f\u3057\u307e\u3059\u3002\n\u307e\u305a\u306fSlack\u3078\u6295\u7a3f\u3059\u308b\u7b87\u6240\u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\nmotion.py\nTOKEN      = '<\u30c8\u30fc\u30af\u30f3>'\nCHANNEL    = '<\u30c1\u30e3\u30f3\u30cd\u30ebID>'\n\n# slack API : files.upload\n# \u53c2\u8003\uff1ahttps://api.slack.com/methods/files.upload\n####\ndef upload_file(file_path, channel):\n\n    with open(file_path,'rb') as f:\n        param = {'token':TOKEN, 'channels':CHANNEL,}\n        r = requests.post(\"https://slack.com/api/files.upload\", params=param,files={'file':f})\n\n\nif __name__ == \"__main__\":\n\n    arg     = sys.argv\n    file_path = arg[1]\n\n    upload_file(file_path, CHANNEL)\n\n\n\n\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u5b9f\u884c\u6a29\u9650\u3092\u4e0e\u3048\u3066\u9069\u5f53\u306a\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3067\u753b\u50cf\u6295\u7a3f\u3067\u304d\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\nTerminal\nchmod 755 motion.py\npython motion.py <\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306ePATH>\n\n\nSlack\u3067\u78ba\u8a8d\u3059\u308b\u3068\u7121\u4e8b\u753b\u50cf\u304c\u6295\u7a3f\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n\u96fb\u8a71\u901a\u77e5\nAsterisk\u304c\u81ea\u52d5\u767a\u4fe1\u3059\u308b\u3088\u3046\u306b\u81ea\u52d5\u767a\u4fe1\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nmotion.py\nTOKEN                 = '<\u30c8\u30fc\u30af\u30f3>'\nCHANNEL               = '<\u30c1\u30e3\u30f3\u30cd\u30ebID>'\nCALLFILE_DIR          = '<\u81ea\u52d5\u767a\u4fe1\u30d5\u30a1\u30a4\u30eb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea>'\nCALLFILE_NAME         = 'auto_call.call'    # \u81ea\u52d5\u767a\u4fe1\u30d5\u30a1\u30a4\u30eb\u540d\nOUTGOING_DIR          = '/var/spool/asterisk/outgoing/'\n\n# \u81ea\u52d5\u767a\u4fe1\u30d5\u30a1\u30a4\u30eb\u751f\u6210 -> outgoing\n####\ndef outgoing_call():\n\n    file_str = '''#\nChannel: SIP/<\u901a\u77e5\u3057\u305f\u3044\u96fb\u8a71\u756a\u53f7>@<\u5916\u7dda\u767a\u4fe1\u3059\u308b\u30bb\u30af\u30b7\u30e7\u30f3\u540d>\nMaxRetries: 0               # \u30b3\u30fc\u30eb\u56de\u6570\u306f\uff11\u56de\nRetryTime: 60               # \u518d\u5ea6\u30b3\u30fc\u30eb\u3059\u308b\u307e\u3067\u306e\u5f85\u3061\u6642\u9593(\u79d2)\nWaitTime: 30                # 30\u79d2\u9593\u30b3\u30fc\u30eb\u3059\u308b\nContext: <extensions.conf\u306b\u6cbf\u3063\u305fContext\u8a2d\u5b9a>\nExtension: <extensions.conf\u306b\u6cbf\u3063\u305fExten\u8a2d\u5b9a>\nPriority: 1'''\n\n    file = open(CALLFILE_DIR +CALLFILE_NAME, \"w\")\n    file.writelines(file_str);\n    file.close()\n\n    os.chmod(CALLFILE_DIR + CALLFILE_NAME, 0755)\n    shutil.move(CALLFILE_DIR + CALLFILE_NAME, OUTGOING_DIR)\n\nif __name__ == \"__main__\":\n\n    outgoing_call()\n\n\n\n\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u5b9f\u884c\u6a29\u9650\u3001/var/spool/asterisk/outgoing/ \u306b\u66f8\u304d\u8fbc\u307f\u6a29\u9650\u3092\u4e0e\u3048\u3066\u30d5\u30a1\u30a4\u30eb\u5b9f\u884c\u3067\u96fb\u8a71\u7740\u4fe1\u3059\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\nTerminal\nchmod 755 motion.py\npython motion.py\n\n\n\n\u96fb\u8a71\u901a\u77e5ON/OFF\n\u52d5\u4f53\u691c\u77e5\u6642\u306bSlack\u304b\u3089 get_channel_info \u3092\u5229\u7528\u3057\u3066\u6700\u65b0\u306e\u6295\u7a3f\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u6295\u7a3f\u306e\u30c6\u30ad\u30b9\u30c8\u304c\u300ccall\u300d\u3060\u3063\u305f\u3089\u96fb\u8a71\u901a\u77e5ON\u306b\u3057\u307e\u3059\u3002\n\u6295\u7a3f\u306e\u30c6\u30ad\u30b9\u30c8\u304c\u300cnocall\u300d\u3060\u3063\u305f\u3089\u96fb\u8a71\u901a\u77e5OFF\u306b\u3057\u307e\u3059\u3002\n\n\u96fb\u8a71\u901a\u77e5\u306eON/OFF\u72b6\u614b\u306fConfigParser\u3067\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u4fdd\u6301\u3057\u307e\u3059\u3002\n\u3082\u3063\u3068\u30b9\u30de\u30fc\u30c8\u306a\u3084\u308a\u65b9\u304c\u3042\u308b\u3068\u601d\u3046\u306e\u3060\u3051\u3069\u3001\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u4eca\u56de\u306f\u3053\u308c\u3067\u3002\n\nmotion.py\n# coding:utf-8\n\nimport sys\nimport os\nimport shutil\nimport pprint\nimport urllib\nimport urllib2\nimport json\nimport ConfigParser\n\nTOKEN                 = '<\u30c8\u30fc\u30af\u30f3>'\nCHANNEL               = '<\u30c1\u30e3\u30f3\u30cd\u30ebID>'\nCALL_NOTIFY_START_STR = 'call';       # \u96fb\u8a71\u901a\u77e5ON\u5224\u5b9a\u6587\u5b57\u5217\nCALL_NOTIFY_END_STR   = 'nocall';     # \u96fb\u8a71\u901a\u77e5OFF\u5224\u5b9a\u6587\u5b57\u5217\nINIFILE_PATH          = 'config.ini'  # \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\nSECTION               = 'motion notify'\n\n# slack API : channels.info\n# \u53c2\u8003\uff1ahttps://api.slack.com/methods/channels.info\n####\ndef get_channel_info():\n\n    url = \"https://slack.com/api/channels.info\"\n\n    params = {'token'  : TOKEN,\n              'channel': CHANNEL,\n    }\n\n    params = urllib.urlencode(params)\n\n    req    = urllib2.Request(url)\n    req.add_header('Content-Type', 'application/x-www-form-urlencoded')\n\n    req.add_data(params)\n    res     = urllib2.urlopen(req)\n    body    = res.read()\n    result  = json.loads(body)\n\n    return result\n\n# \u96fb\u8a71\u901a\u77e5ON/OFF\u8a2d\u5b9a\n# slack_last_text : slack\u304b\u3089\u53d7\u4fe1\u3057\u305f\u6700\u65b0\u306e\u6295\u7a3f\u306e\u30c6\u30ad\u30b9\u30c8\u90e8\u5206\n####\ndef set_call_notify(slack_last_text):\n\n    config = ConfigParser.SafeConfigParser()\n\n    if not config.has_section(SECTION):\n        config.add_section(SECTION)\n\n    # \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u53d6\u5f97\n    try :\n        config.read(INIFILE_PATH)\n        ini_set = config.get(SECTION,'enable')\n    except Exception as e:\n        ini_set = 'FALSE'\n\n    if slack_last_text == CALL_NOTIFY_START_STR:\n        config.set(SECTION, 'enable', 'TRUE')\n        ini_set = 'TRUE'\n\n    elif slack_last_text == CALL_NOTIFY_END_STR:\n        config.set(SECTION, 'enable', 'FALSE')\n        ini_set = 'FALSE'\n    else:\n        config.set(SECTION, 'enable', ini_set)\n\n    config.write(open(INIFILE_PATH, 'w'))\n\n    return ini_set\n\nif __name__ == \"__main__\":\n\n    channnels_info = get_channel_info()\n\n    is_call = set_call_notify(channnels_info['channel']['latest']['text'])\n\n    print is_call\n\n\n\nSlack\u3067\u300ccallon\u300d\u300ccalloff\u300d\u3092\u6295\u7a3f\u5f8c\u306b\u3001\u64ae\u5f71\u3055\u308c\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306a\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\nconfig.ini\n[motion notify]\nenable = FALSE\n\n\n\u3053\u308c\u3089\u3092\u8e0f\u307e\u3048\u3066\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3002\n\u5b9f\u969b\u306b\u52d5\u4f5c\u3055\u305b\u3066\u307f\u308b\u3068\u30fb\u30fb\u30fb\n\n\u30ab\u30e1\u30e9\u306e\u524d\u3067\u52d5\u304f\u3060\u3051\u3067\u30ac\u30f3\u30ac\u30f3\u6295\u7a3f\u3055\u308c\u3066\u3001\u30ac\u30f3\u30ac\u30f3\u96fb\u8a71\u304c\u304b\u304b\u3063\u3066\u304f\u308b\u3002\n\u3082\u306f\u3084\u8ff7\u60d1(\u7b11)\n\u300cnocall\u300d\u3092\u6295\u7a3f\u3059\u308b\u3068\u3001Slack\u306b\u306f\u5199\u771f\u304c\u6295\u7a3f\u3055\u308c\u3066\u96fb\u8a71\u901a\u77e5\u306f\u3057\u306a\u304f\u306a\u3063\u305f\u306e\u3067\u3053\u308c\u3067\u5b8c\u6210\nmotion\u3084Slack\u306b\u95a2\u3059\u308b\u8a73\u3057\u3044\u8aac\u660e\u306f\u4e0b\u8a18\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\n\u306f\u3058\u3081\u3066\u306eRaspberry PI\u3067\u76e3\u8996\u30ab\u30e1\u30e9\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n\u6240\u611f\n\u97f3\u58f0\u5408\u6210\u30a8\u30f3\u30b8\u30f3Open JTalk\u3092\u5229\u7528\u3057\u3066\u3001\u52d5\u4f53\u691c\u77e5\u3057\u305f\u3089\u4f55\u304b\u3057\u3083\u3079\u3089\u305b\u308b\u3068\u9762\u767d\u305d\u3046\n\n\u53c2\u8003\n\u306f\u3058\u3081\u3066\u306eRaspberry PI\u3067\u76e3\u8996\u30ab\u30e1\u30e9\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\nRaspberry Pi\u3092\u76e3\u8996\u30ab\u30e1\u30e9\u3068\u3057\u3066\u52d5\u304b\u3059\u306e\u306f\u5b9a\u756a\u3067\u3059\u304c\n\u52d5\u4f53\u691c\u77e5\u6642\u306b\u6307\u5b9a\u3057\u305f\u756a\u53f7\u3078\u96fb\u8a71\u901a\u77e5\u3059\u308b\u3082\u306e\u306f\u306a\u304b\u3063\u305f\u306e\u3067\u3064\u304f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n#\u4ed5\u69d8\n* motion\u3092\u5229\u7528\u3057\u3066\u52d5\u4f53\u691c\u77e5\u3092\u884c\u3046\n* \u52d5\u4f53\u691c\u77e5\u6642\u306b\u64ae\u5f71\u3057\u3066Slack\u3078\u81ea\u52d5\u6295\u7a3f\n* Slack\u3078\u6295\u7a3f\u3059\u308b\u3064\u3044\u3067\u306b\u6307\u5b9a\u756a\u53f7\u306b\u96fb\u8a71\u3092\u304b\u3051\u3066\u77e5\u3089\u305b\u308b\n* Slack\u306b\u7740\u4fe1ON/OFF\u3068\u306a\u308b\u6295\u7a3f\u3002\u96fb\u8a71\u3067\u901a\u77e5\u3057\u3066\u307b\u3057\u3044\u6642\u306b\u7740\u4fe1\u3055\u305b\u308b\n\n\n\u7528\u9014\u3068\u3057\u3066\u306f\u30fb\u30fb\n\n\u81ea\u5b85\u306b\u5b50\u4f9b\u304c\u5e30\u3063\u304d\u305f\u3053\u3068\u3092\u52d5\u4f53\u691c\u77e5\u3057\u3066\u96fb\u8a71\u7740\u4fe1\u3002\n\u2193\n\u300c\u304a\uff1f\u96fb\u8a71\u304c\u304d\u305f\u300d\u3002Slack\u3067\u5b50\u4f9b\u306e\u59ff\u3092\u78ba\u8a8d\n\u2193\n\u7740\u4fe1OFF\u3092Slack\u306b\u6295\u7a3f\u3057\u3066\u52d5\u4f53\u691c\u77e5\u3057\u3066\u3082\u7740\u4fe1\u3055\u305b\u306a\u3044\n\n\n#\u74b0\u5883\n* Raspberry Pi Model B\n* Raspbian (Kernel version 3.18)\n* Asterisk 13.5.0\n* Python 2.6.6\n\n\u30ab\u30e1\u30e9\u306f <a href=\"http://www.amazon.co.jp/dp/B003YUB660/\">LOGICOOL \u30a6\u30a7\u30d6\u30ab\u30e0 HD\u753b\u8cea 120\u4e07\u753b\u7d20 C270(Amazon)</a> \u3092\u4f7f\u7528\u3002\n\n\n#\u624b\u9806\n\n##Asterisk\u306e\u8a2d\u5b9a\nAsterisk\u306e\u8a2d\u5b9a\u306f\u4e0b\u8a18\u3092\u53c2\u8003\n<a href=\"http://qiita.com/hasudon7171/items/925b9512f81cee46fbe3\">Raspberry Pi\u3068Asterisk\u3067IP\u96fb\u8a71\u30b7\u30b9\u30c6\u30e0\u306e\u69cb\u7bc9(\u305d\u306e1)</a>\n<a href=\"http://qiita.com/hasudon7171/items/b5338e8a7905fb1ad50d\">Raspberry Pi\u3068Asterisk\u3067IP\u96fb\u8a71\u30b7\u30b9\u30c6\u30e0\u306e\u69cb\u7bc9(\u305d\u306e2)</a>\n\n##motion\u306e\u8a2d\u5b9a\n\nmotion\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\n\n```:Terminal\napt-get install -y motion\n```\n\nmotion.conf\u3092\u5909\u66f4\u3057\u307e\u3059\n\n```:Terminal\nvi /etc/motion/motion.conf\n```\n\n```Ini:motion.conf\n# Threshold for number of changed pixels in an image that\n# triggers motion detection (default: 1500)\n#threshold 1500\nthreshold 8000   #\u5199\u771f\u3092\u64ae\u5f71\u3059\u308b\u30c8\u30ea\u30ac\u3068\u306a\u308b\u3057\u304d\u3044\u5024\u3092\u4e0a\u3052\u307e\u3059\n\n\uff1a\n\n# Target base directory for pictures and films\n# Recommended to use absolute path. (Default: current working directory)\ntarget_dir /tmp/motion #\u64ae\u5f71\u3057\u305f\u753b\u50cf\u306e\u4fdd\u5b58\u5148\u3092\u8a2d\u5b9a\u3057\u307e\u3059\n\n\uff1a\n\n#\u64ae\u5f71\u6642\u306bmotion.py\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf\u306e%f\u306f\u64ae\u5f71\u3057\u305f\u30d5\u30a1\u30a4\u30ebPATH\non_picture_save python /home/hasuo/motion/motion.py %f\n\n```\n\nmotion\u3092\u5b9f\u884c\u3057\u3066\u3001\u30ab\u30e1\u30e9\u304c\u52d5\u4f53\u691c\u77e5\u3057\u3066/home/tmp/\u306b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308c\u3070\u6210\u529f\u3067\u3059\n\n```:Terminal\nmotion -c /etc/motion/motion.conf\n```\n\n##Slack\u306e\u8a2d\u5b9a\n<a href=\"https://slack.com/signin\">Slack\u3067\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u767a\u884c</a>\u3057\u307e\u3059\u3002\n\nSlack\u306eAPI\u3092\u5229\u7528\u3057\u3066\u6295\u7a3f\u3059\u308b\u305f\u3081\u3001\u30c8\u30fc\u30af\u30f3\u3068\u30c1\u30e3\u30f3\u30cd\u30ebID\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n<a href=\"https://api.slack.com/methods/channels.list/test\">https://api.slack.com/methods/channels.list/test</a>\n\nSign In\u3057\u305f\u72b6\u614b\u3067[Test Mode]\u62bc\u4e0b\u3067\u30c8\u30fc\u30af\u30f3\u3068\u30c1\u30e3\u30f3\u30cd\u30ebID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\n```:URL\nhttps://slack.com/api/channels.list?token=<\u30c8\u30fc\u30af\u30f3>&pretty=1 \n```\n\n```:channels.list\u5b9f\u884c\u7d50\u679c\n{\n    \"ok\": true,\n    \"channels\": [\n        {\n            \"id\": \"<\u30c1\u30e3\u30f3\u30cd\u30ebID>\",\n            \"name\": \"general\",\n            \"is_channel\": true,\n              :\n```\n\n##\u753b\u50cf\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\n\nSlack\u306eAPI\u3092\u5229\u7528\u3057\u3066\u52d5\u4f53\u691c\u77e5\u6642\u306bSlack\u3078\u81ea\u52d5\u7684\u306b\u753b\u50cf\u6295\u7a3f\u3057\u307e\u3059\u3002\n\u307e\u305a\u306fSlack\u3078\u6295\u7a3f\u3059\u308b\u7b87\u6240\u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\n```py:motion.py\nTOKEN      = '<\u30c8\u30fc\u30af\u30f3>'\nCHANNEL    = '<\u30c1\u30e3\u30f3\u30cd\u30ebID>'\n\n# slack API : files.upload\n# \u53c2\u8003\uff1ahttps://api.slack.com/methods/files.upload\n####\ndef upload_file(file_path, channel):\n    \n    with open(file_path,'rb') as f:\n        param = {'token':TOKEN, 'channels':CHANNEL,}\n        r = requests.post(\"https://slack.com/api/files.upload\", params=param,files={'file':f})\n    \n\nif __name__ == \"__main__\":\n    \n    arg     = sys.argv\n    file_path = arg[1]\n    \n    upload_file(file_path, CHANNEL)\n    \n```\n\n\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u5b9f\u884c\u6a29\u9650\u3092\u4e0e\u3048\u3066\u9069\u5f53\u306a\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3067\u753b\u50cf\u6295\u7a3f\u3067\u304d\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```:Terminal\nchmod 755 motion.py\npython motion.py <\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306ePATH>\n```\n\nSlack\u3067\u78ba\u8a8d\u3059\u308b\u3068\u7121\u4e8b\u753b\u50cf\u304c\u6295\u7a3f\u3055\u308c\u307e\u3057\u305f\u3002\n\n![\u7121\u984c.png](https://qiita-image-store.s3.amazonaws.com/0/32122/d7b86beb-f073-2bad-5f5f-e857abb95bd5.png)\n\n\n##\u96fb\u8a71\u901a\u77e5\n\nAsterisk\u304c\u81ea\u52d5\u767a\u4fe1\u3059\u308b\u3088\u3046\u306b\u81ea\u52d5\u767a\u4fe1\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```py:motion.py\nTOKEN                 = '<\u30c8\u30fc\u30af\u30f3>'\nCHANNEL               = '<\u30c1\u30e3\u30f3\u30cd\u30ebID>'\nCALLFILE_DIR          = '<\u81ea\u52d5\u767a\u4fe1\u30d5\u30a1\u30a4\u30eb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea>'\nCALLFILE_NAME         = 'auto_call.call'    # \u81ea\u52d5\u767a\u4fe1\u30d5\u30a1\u30a4\u30eb\u540d\nOUTGOING_DIR          = '/var/spool/asterisk/outgoing/'\n\n# \u81ea\u52d5\u767a\u4fe1\u30d5\u30a1\u30a4\u30eb\u751f\u6210 -> outgoing\n####\ndef outgoing_call():\n    \n    file_str = '''#\nChannel: SIP/<\u901a\u77e5\u3057\u305f\u3044\u96fb\u8a71\u756a\u53f7>@<\u5916\u7dda\u767a\u4fe1\u3059\u308b\u30bb\u30af\u30b7\u30e7\u30f3\u540d>\nMaxRetries: 0               # \u30b3\u30fc\u30eb\u56de\u6570\u306f\uff11\u56de\nRetryTime: 60               # \u518d\u5ea6\u30b3\u30fc\u30eb\u3059\u308b\u307e\u3067\u306e\u5f85\u3061\u6642\u9593(\u79d2)\nWaitTime: 30                # 30\u79d2\u9593\u30b3\u30fc\u30eb\u3059\u308b\nContext: <extensions.conf\u306b\u6cbf\u3063\u305fContext\u8a2d\u5b9a>\nExtension: <extensions.conf\u306b\u6cbf\u3063\u305fExten\u8a2d\u5b9a>\nPriority: 1'''\n    \n    file = open(CALLFILE_DIR +CALLFILE_NAME, \"w\")\n    file.writelines(file_str);\n    file.close()\n    \n    os.chmod(CALLFILE_DIR + CALLFILE_NAME, 0755)\n    shutil.move(CALLFILE_DIR + CALLFILE_NAME, OUTGOING_DIR)\n\nif __name__ == \"__main__\":\n    \n    outgoing_call()\n\n```\n\n\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u5b9f\u884c\u6a29\u9650\u3001/var/spool/asterisk/outgoing/ \u306b\u66f8\u304d\u8fbc\u307f\u6a29\u9650\u3092\u4e0e\u3048\u3066\u30d5\u30a1\u30a4\u30eb\u5b9f\u884c\u3067\u96fb\u8a71\u7740\u4fe1\u3059\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```:Terminal\nchmod 755 motion.py\npython motion.py\n```\n\n##\u96fb\u8a71\u901a\u77e5ON/OFF\n\n\u52d5\u4f53\u691c\u77e5\u6642\u306bSlack\u304b\u3089 get_channel_info \u3092\u5229\u7528\u3057\u3066\u6700\u65b0\u306e\u6295\u7a3f\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n* \u6295\u7a3f\u306e\u30c6\u30ad\u30b9\u30c8\u304c\u300ccall\u300d\u3060\u3063\u305f\u3089\u96fb\u8a71\u901a\u77e5ON\u306b\u3057\u307e\u3059\u3002\n* \u6295\u7a3f\u306e\u30c6\u30ad\u30b9\u30c8\u304c\u300cnocall\u300d\u3060\u3063\u305f\u3089\u96fb\u8a71\u901a\u77e5OFF\u306b\u3057\u307e\u3059\u3002\n\n\n\u96fb\u8a71\u901a\u77e5\u306eON/OFF\u72b6\u614b\u306fConfigParser\u3067\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u4fdd\u6301\u3057\u307e\u3059\u3002\n\n\u3082\u3063\u3068\u30b9\u30de\u30fc\u30c8\u306a\u3084\u308a\u65b9\u304c\u3042\u308b\u3068\u601d\u3046\u306e\u3060\u3051\u3069\u3001\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u4eca\u56de\u306f\u3053\u308c\u3067\u3002\n\n```py:motion.py\n# coding:utf-8\n\nimport sys\nimport os\nimport shutil\nimport pprint\nimport urllib\nimport urllib2\nimport json\nimport ConfigParser\n\nTOKEN                 = '<\u30c8\u30fc\u30af\u30f3>'\nCHANNEL               = '<\u30c1\u30e3\u30f3\u30cd\u30ebID>'\nCALL_NOTIFY_START_STR = 'call';       # \u96fb\u8a71\u901a\u77e5ON\u5224\u5b9a\u6587\u5b57\u5217\nCALL_NOTIFY_END_STR   = 'nocall';     # \u96fb\u8a71\u901a\u77e5OFF\u5224\u5b9a\u6587\u5b57\u5217\nINIFILE_PATH          = 'config.ini'  # \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\nSECTION               = 'motion notify'\n\n# slack API : channels.info\n# \u53c2\u8003\uff1ahttps://api.slack.com/methods/channels.info\n####\ndef get_channel_info():\n\n    url = \"https://slack.com/api/channels.info\"\n\n    params = {'token'  : TOKEN,\n              'channel': CHANNEL,\n    }\n\n    params = urllib.urlencode(params)\n\n    req    = urllib2.Request(url)\n    req.add_header('Content-Type', 'application/x-www-form-urlencoded')\n\n    req.add_data(params)\n    res     = urllib2.urlopen(req)\n    body    = res.read()\n    result  = json.loads(body)\n\n    return result\n\n# \u96fb\u8a71\u901a\u77e5ON/OFF\u8a2d\u5b9a\n# slack_last_text : slack\u304b\u3089\u53d7\u4fe1\u3057\u305f\u6700\u65b0\u306e\u6295\u7a3f\u306e\u30c6\u30ad\u30b9\u30c8\u90e8\u5206\n####\ndef set_call_notify(slack_last_text):\n\n    config = ConfigParser.SafeConfigParser()\n\n    if not config.has_section(SECTION):\n        config.add_section(SECTION)\n\n    # \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u53d6\u5f97\n    try :\n        config.read(INIFILE_PATH)\n        ini_set = config.get(SECTION,'enable')\n    except Exception as e:\n        ini_set = 'FALSE'\n\n    if slack_last_text == CALL_NOTIFY_START_STR:\n        config.set(SECTION, 'enable', 'TRUE')\n        ini_set = 'TRUE'\n\n    elif slack_last_text == CALL_NOTIFY_END_STR:\n        config.set(SECTION, 'enable', 'FALSE')\n        ini_set = 'FALSE'\n    else:\n        config.set(SECTION, 'enable', ini_set)\n\n    config.write(open(INIFILE_PATH, 'w'))\n\n    return ini_set\n\nif __name__ == \"__main__\":\n\n    channnels_info = get_channel_info()\n\n    is_call = set_call_notify(channnels_info['channel']['latest']['text'])\n\n    print is_call\n\n```\n\nSlack\u3067\u300ccallon\u300d\u300ccalloff\u300d\u3092\u6295\u7a3f\u5f8c\u306b\u3001\u64ae\u5f71\u3055\u308c\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306a\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n```Ini:config.ini\n[motion notify]\nenable = FALSE\n```\n\n\u3053\u308c\u3089\u3092\u8e0f\u307e\u3048\u3066\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3002\n\n\u5b9f\u969b\u306b\u52d5\u4f5c\u3055\u305b\u3066\u307f\u308b\u3068\u30fb\u30fb\u30fb\n\n![\u7121\u984c2.png](https://qiita-image-store.s3.amazonaws.com/0/32122/0717b2a0-19ed-68a1-8493-311ea43a4255.png)\n\n\u30ab\u30e1\u30e9\u306e\u524d\u3067\u52d5\u304f\u3060\u3051\u3067\u30ac\u30f3\u30ac\u30f3\u6295\u7a3f\u3055\u308c\u3066\u3001\u30ac\u30f3\u30ac\u30f3\u96fb\u8a71\u304c\u304b\u304b\u3063\u3066\u304f\u308b\u3002\n\u3082\u306f\u3084\u8ff7\u60d1(\u7b11)\n\n\u300cnocall\u300d\u3092\u6295\u7a3f\u3059\u308b\u3068\u3001Slack\u306b\u306f\u5199\u771f\u304c\u6295\u7a3f\u3055\u308c\u3066\u96fb\u8a71\u901a\u77e5\u306f\u3057\u306a\u304f\u306a\u3063\u305f\u306e\u3067\u3053\u308c\u3067\u5b8c\u6210\n\n\nmotion\u3084Slack\u306b\u95a2\u3059\u308b\u8a73\u3057\u3044\u8aac\u660e\u306f\u4e0b\u8a18\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\n<a href=\"http://qiita.com/kinpira/items/bf1df2c1983ba79ba455\">\u306f\u3058\u3081\u3066\u306eRaspberry PI\u3067\u76e3\u8996\u30ab\u30e1\u30e9\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002</a>\n\n\n\n#\u6240\u611f\n\u97f3\u58f0\u5408\u6210\u30a8\u30f3\u30b8\u30f3<a href=\"http://open-jtalk.sp.nitech.ac.jp/\">Open JTalk</a>\u3092\u5229\u7528\u3057\u3066\u3001\u52d5\u4f53\u691c\u77e5\u3057\u305f\u3089\u4f55\u304b\u3057\u3083\u3079\u3089\u305b\u308b\u3068\u9762\u767d\u305d\u3046\n\n##\u53c2\u8003\n<a href=\"http://qiita.com/kinpira/items/bf1df2c1983ba79ba455\">\u306f\u3058\u3081\u3066\u306eRaspberry PI\u3067\u76e3\u8996\u30ab\u30e1\u30e9\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002</a>\n"}