{"context": "\n\n\u306f\u3058\u3081\u306b\n2015\u5e74\u306e\u672b\u306bWireshark\u304c\u30d0\u30fc\u30b8\u30e7\u30f32\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u306a\u306e\u3067\u516c\u5f0f\u30b5\u30a4\u30c8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5b8c\u4e86\u5f8c\u306b init.lua \u3092\u5f04\u3063\u3066\u81ea\u4f5c\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8aad\u307f\u8fbc\u307e\u305b\u3066\u307f\u305f\u6240\u3001\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u30a8\u30e9\u30fc\u304c\u7121\u304b\u3063\u305fLua\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\n\nipproto\u304c\u4f7f\u3048\u306a\u3044\n\u8aad\u307f\u8fbc\u307e\u305b\u305f\u306e\u306f\u4ee5\u4e0b\u306eLua\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\u30dd\u30fc\u30c8:6609\u756a\u3078\u306e\u901a\u4fe1\u3092\"ORG_PROT\"\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u3057\u3066\u8868\u793a\u3057\u307e\u3059\u3002\n-- \u30dd\u30fc\u30c8:6609\u756a\u3078\u306e\u901a\u4fe1\u3092\"ORG_PROT\"\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u3057\u3066\u30c7\u30b3\u30fc\u30c9\u3059\u308b\n\n-- Create a new dissector\nORG_PROT = Proto (\"ORGNP\", \"Original Network Protocol\")\n\n-- Tables\nCONSTANT = {\n    -- IP Protocols\n    TCP_PROTOCOL = 6,\n    UDP_PROTOCOL = 17,\n\n    -- Port Number\n    PORT_NUM = 6609,\n}\n\n-- Dissector function\nfunction ORG_PROT.dissector (buffer, pinfo, tree)\n\n    -- Add the protocol to the tree\n    orgnpTree = tree:add (ORG_PROT, buffer())\n\n    -- Check whether packet uses TCP or UDP\n    if ( pinfo.ipproto == CONSTANT.TCP_PROTOCOL) then\n\n        -- TCP Packet\n        debug( \"TCP Packet dissector Function\" )\n\n    elseif ( pinfo.ipproto == CONSTANT.UDP_PROTOCOL) then\n\n        -- UDP Packet\n        debug( \"UDP Packet dissector Function\" )\n\n    end\nend\n\n-- UDP with static port\nudp_table = DissectorTable.get (\"udp.port\")\nudp_table:add (CONSTANT.PORT_NUM, ORG_PROT)\n\n-- TCP with dynamic port assignment\ntcp_table = DissectorTable.get (\"tcp.port\")\ntcp_table:add (CONSTANT.PORT_NUM, ORG_PROT)\n\n\u5b9f\u969b\u306b\u8aad\u307f\u8fbc\u3093\u3067\u307f\u305f\u3068\u3053\u308d\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\nLua Error: C:\\Wireshark\\plugins\\sample.lua:504: No such 'ipproto' getter attribute/field for object type 'Pinfo'\n\n\n\u539f\u56e0\n\u539f\u56e0\u306fWireshark\u304c 2.0 \u306b\u306a\u3063\u3066 ipproto \u304c\u7121\u304f\u306a\u3063\u305f\u70ba\u306b\u3053\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u53c2\u7167: Wireshark\u2019s Lua API Reference Manual\n\u53c2\u8003: Wireshark-bugs: [Wireshark-bugs] [Bug 10882] No such 'ipproto'getter attribute/field for object\n\n\u89e3\u6c7a\u6848\nipproto \u3092\u4f7f\u7528\u3057\u306a\u3044\u3067TCP\u304bUDP\u304b\u3092\u5224\u5b9a\u3059\u308b\u305f\u3081\u306b\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\nipprotof = Field.new(\"ip.proto\")\n\nlocal ipprotostr = tostring( ipprotof() )\nlocal ipproto = tonumber(ipprotostr)\n\nif ( ipproto == CONSTANT.TCP_PROTOCOL ) then\n\n    -- TCP Packet\n    debug( \"TCP Packet dissector Function\" )\n\nelseif( ipproto == CONSTANT.UDP_PROTOCOL ) then\n\n    -- UDP Packet\n    debug( \"UDP Packet dissector Function\" )\n\nend\n\n\u305d\u308c\u306b\u3057\u3066\u3082\u4f55\u3067ipproto\u3092\u7121\u304f\u3057\u305f\u3093\u3067\u3057\u3087\u3046\u304b\u306d\uff1f\n# \u306f\u3058\u3081\u306b\n\n2015\u5e74\u306e\u672b\u306bWireshark\u304c\u30d0\u30fc\u30b8\u30e7\u30f32\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u306a\u306e\u3067\u516c\u5f0f\u30b5\u30a4\u30c8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5b8c\u4e86\u5f8c\u306b init.lua \u3092\u5f04\u3063\u3066\u81ea\u4f5c\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8aad\u307f\u8fbc\u307e\u305b\u3066\u307f\u305f\u6240\u3001\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u30a8\u30e9\u30fc\u304c\u7121\u304b\u3063\u305fLua\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\n\n# ipproto\u304c\u4f7f\u3048\u306a\u3044\n\u8aad\u307f\u8fbc\u307e\u305b\u305f\u306e\u306f\u4ee5\u4e0b\u306eLua\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\u30dd\u30fc\u30c8:6609\u756a\u3078\u306e\u901a\u4fe1\u3092\"ORG_PROT\"\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u3057\u3066\u8868\u793a\u3057\u307e\u3059\u3002\n\n```Lua\n-- \u30dd\u30fc\u30c8:6609\u756a\u3078\u306e\u901a\u4fe1\u3092\"ORG_PROT\"\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u3057\u3066\u30c7\u30b3\u30fc\u30c9\u3059\u308b\n\n-- Create a new dissector\nORG_PROT = Proto (\"ORGNP\", \"Original Network Protocol\")\n\n-- Tables\nCONSTANT = {\n    -- IP Protocols\n    TCP_PROTOCOL = 6,\n    UDP_PROTOCOL = 17,\n\n    -- Port Number\n    PORT_NUM = 6609,\n}\n\n-- Dissector function\nfunction ORG_PROT.dissector (buffer, pinfo, tree)\n\n    -- Add the protocol to the tree\n    orgnpTree = tree:add (ORG_PROT, buffer())\n\n    -- Check whether packet uses TCP or UDP\n    if ( pinfo.ipproto == CONSTANT.TCP_PROTOCOL) then\n\n        -- TCP Packet\n        debug( \"TCP Packet dissector Function\" )\n\n    elseif ( pinfo.ipproto == CONSTANT.UDP_PROTOCOL) then\n\n        -- UDP Packet\n        debug( \"UDP Packet dissector Function\" )\n\n    end\nend\n\n-- UDP with static port\nudp_table = DissectorTable.get (\"udp.port\")\nudp_table:add (CONSTANT.PORT_NUM, ORG_PROT)\n\n-- TCP with dynamic port assignment\ntcp_table = DissectorTable.get (\"tcp.port\")\ntcp_table:add (CONSTANT.PORT_NUM, ORG_PROT)\n```\n\n\u5b9f\u969b\u306b\u8aad\u307f\u8fbc\u3093\u3067\u307f\u305f\u3068\u3053\u308d\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\n\n```\nLua Error: C:\\Wireshark\\plugins\\sample.lua:504: No such 'ipproto' getter attribute/field for object type 'Pinfo'\n```\n\n# \u539f\u56e0\n\u539f\u56e0\u306fWireshark\u304c 2.0 \u306b\u306a\u3063\u3066 ipproto \u304c\u7121\u304f\u306a\u3063\u305f\u70ba\u306b\u3053\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\n[\u53c2\u7167: Wireshark\u2019s Lua API Reference Manual][1]\n[\u53c2\u8003: Wireshark-bugs: [Wireshark-bugs] [Bug 10882] No such 'ipproto'getter attribute/field for object][2]\n\n\n# \u89e3\u6c7a\u6848\n\nipproto \u3092\u4f7f\u7528\u3057\u306a\u3044\u3067TCP\u304bUDP\u304b\u3092\u5224\u5b9a\u3059\u308b\u305f\u3081\u306b\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n```Lua\nipprotof = Field.new(\"ip.proto\")\n\nlocal ipprotostr = tostring( ipprotof() )\nlocal ipproto = tonumber(ipprotostr)\n\nif ( ipproto == CONSTANT.TCP_PROTOCOL ) then\n\n\t-- TCP Packet\n\tdebug( \"TCP Packet dissector Function\" )\n\nelseif( ipproto == CONSTANT.UDP_PROTOCOL ) then\n\n\t-- UDP Packet\n\tdebug( \"UDP Packet dissector Function\" )\n\nend\n```\n\n\u305d\u308c\u306b\u3057\u3066\u3082\u4f55\u3067ipproto\u3092\u7121\u304f\u3057\u305f\u3093\u3067\u3057\u3087\u3046\u304b\u306d\uff1f\n\n[1]: https://www.wireshark.org/docs/wsdg_html_chunked/lua_module_Pinfo.html#lua_class_Pinfo\n[2]: https://www.wireshark.org/lists/wireshark-bugs/201501/msg00534.html\n", "tags": ["Wireshark", "Lua"]}