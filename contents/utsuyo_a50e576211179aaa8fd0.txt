{"tags": ["Node.js", "aws-sdk", "RiakCS"], "context": " More than 1 year has passed since last update.aws-sdk\u3092\u4f7f\u3063\u3066RiakCS\u306b\u30de\u30eb\u30c1\u30d1\u30fc\u30c9\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3068\u304d\u306b403\u30a8\u30e9\u30fc\u3067\u30cf\u30de\u3063\u305f\u6642\u306e\u30e1\u30e2\u3002\n\n\u539f\u56e0\nlib/signers/s3.js\u5185\u3067signature\u3092\u751f\u6210\u3059\u308b\u969b\u306b\u3001uploadId\u306b\u542b\u307e\u308c\u308b=\u304c%3D\u306b\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u3066\u3044\u308b\u305b\u3044\u3067\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u69d8\u5b50\u3002\n\n\u56de\u907f\u7b56\n\u9014\u4e2d\u3067%3D\u3092=\u306b\u623b\u3057\u3066\u3042\u3052\u308b\n\naws-sdk-custom.js\n'use strict';\n\nvar AWS = require('aws-sdk');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.S3 = inherit(AWS.Signers.S3, {\n  canonicalizedResource: function canonicalizedResource() {\n\n    var r = this.request;\n\n    var parts = r.path.split('?');\n    var path = parts[0];\n    var querystring = parts[1];\n\n    var resource = '';\n\n    if (r.virtualHostedBucket)\n      resource += '/' + r.virtualHostedBucket;\n\n    resource += path;\n\n    if (querystring) {\n\n      // collect a list of sub resources and query params that need to be signed\n      var resources = [];\n\n      AWS.util.arrayEach.call(this, querystring.split('&'), function (param) {\n        var name = param.split('=')[0];\n        var value = param.split('=')[1];\n        if (this.subResources[name] || this.responseHeaders[name]) {\n          var subresource = { name: name };\n          if (value !== undefined) {\n            if (this.subResources[name]) {\n              subresource.value = value;\n            } else {\n              subresource.value = decodeURIComponent(value);\n            }\n          }\n          resources.push(subresource);\n        }\n      });\n\n      resources.sort(function (a, b) { return a.name < b.name ? -1 : 1; });\n\n      if (resources.length) {\n\n        querystring = [];\n        AWS.util.arrayEach(resources, function (res) {\n          if (res.value === undefined)\n            querystring.push(res.name);\n          else {\n            // '%3D'\u3092'='\u306b\u7f6e\u63db\n            if (res.name === 'uploadId') {\n              res.value = res.value.replace(/%3D/g, '=');\n            }\n            querystring.push(res.name + '=' + res.value);\n          }\n        });\n\n        resource += '?' + querystring.join('&');\n      }\n\n    }\n\n    return resource;\n\n  },\n});\n\nmodule.exports = AWS;\n\n\n\n\u4f7f\u7528\u4f8b\n\ndemo.js\nvar fs = require('fs');\nvar AWS = require('./aws-sdk-custom');\nvar config = require('./config.json');\nvar s3 = new AWS.S3(config);\n\nvar params = {\n  Bucket: 'bucket',\n  Key: 'key',\n  Body: fs.createReadStream('./bigfile')\n};\n\ns3.upload(params, function(err, data) {\n  if (err) console.log(err, err.stack); // an error occurred\n  else     console.log(data);           // successful response\n});\n\n\n\n\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u304c\u3042\u308b\u6c17\u304c\u3059\u308b\u3002\naws-sdk\u3092\u4f7f\u3063\u3066RiakCS\u306b\u30de\u30eb\u30c1\u30d1\u30fc\u30c9\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3068\u304d\u306b403\u30a8\u30e9\u30fc\u3067\u30cf\u30de\u3063\u305f\u6642\u306e\u30e1\u30e2\u3002\n\n#\u539f\u56e0\nlib/signers/s3.js\u5185\u3067signature\u3092\u751f\u6210\u3059\u308b\u969b\u306b\u3001uploadId\u306b\u542b\u307e\u308c\u308b`=`\u304c`%3D`\u306b\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u3066\u3044\u308b\u305b\u3044\u3067\u8a8d\u8a3c\u306b\u5931\u6557\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u69d8\u5b50\u3002\n\n#\u56de\u907f\u7b56\n\u9014\u4e2d\u3067`%3D`\u3092`=`\u306b\u623b\u3057\u3066\u3042\u3052\u308b\n\n```js:aws-sdk-custom.js\n'use strict';\n\nvar AWS = require('aws-sdk');\nvar inherit = AWS.util.inherit;\n\n/**\n * @api private\n */\nAWS.Signers.S3 = inherit(AWS.Signers.S3, {\n  canonicalizedResource: function canonicalizedResource() {\n\n    var r = this.request;\n\n    var parts = r.path.split('?');\n    var path = parts[0];\n    var querystring = parts[1];\n\n    var resource = '';\n\n    if (r.virtualHostedBucket)\n      resource += '/' + r.virtualHostedBucket;\n\n    resource += path;\n\n    if (querystring) {\n\n      // collect a list of sub resources and query params that need to be signed\n      var resources = [];\n\n      AWS.util.arrayEach.call(this, querystring.split('&'), function (param) {\n        var name = param.split('=')[0];\n        var value = param.split('=')[1];\n        if (this.subResources[name] || this.responseHeaders[name]) {\n          var subresource = { name: name };\n          if (value !== undefined) {\n            if (this.subResources[name]) {\n              subresource.value = value;\n            } else {\n              subresource.value = decodeURIComponent(value);\n            }\n          }\n          resources.push(subresource);\n        }\n      });\n\n      resources.sort(function (a, b) { return a.name < b.name ? -1 : 1; });\n\n      if (resources.length) {\n\n        querystring = [];\n        AWS.util.arrayEach(resources, function (res) {\n          if (res.value === undefined)\n            querystring.push(res.name);\n          else {\n            // '%3D'\u3092'='\u306b\u7f6e\u63db\n            if (res.name === 'uploadId') {\n              res.value = res.value.replace(/%3D/g, '=');\n            }\n            querystring.push(res.name + '=' + res.value);\n          }\n        });\n\n        resource += '?' + querystring.join('&');\n      }\n\n    }\n\n    return resource;\n\n  },\n});\n\nmodule.exports = AWS;\n```\n###\u4f7f\u7528\u4f8b\n\n```js:demo.js\nvar fs = require('fs');\nvar AWS = require('./aws-sdk-custom');\nvar config = require('./config.json');\nvar s3 = new AWS.S3(config);\n\nvar params = {\n  Bucket: 'bucket',\n  Key: 'key',\n  Body: fs.createReadStream('./bigfile')\n};\n\ns3.upload(params, function(err, data) {\n  if (err) console.log(err, err.stack); // an error occurred\n  else     console.log(data);           // successful response\n});\n\n```\n\n\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u304c\u3042\u308b\u6c17\u304c\u3059\u308b\u3002\n"}