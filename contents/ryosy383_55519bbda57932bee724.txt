{"context": " More than 1 year has passed since last update.\u554f\u984c\u306f\u4ee5\u4e0bURL\nhttp://nabetani.sakura.ne.jp/hena/ord24eliseq/\n\u30ed\u30b8\u30c3\u30af\u306f\u4ee5\u4e0b\u3068\u307b\u307c\u540c\u3058\u3067\u3059\u304c\u3001\u5e73\u65b9\u6839\u3001\u7acb\u65b9\u6839\u3092\u6c42\u3081\u308b\u30ed\u30b8\u30c3\u30af\u306e\u307f\u3092\u5909\u3048\u3066\u3044\u307e\u3059\u3002\nhttp://qiita.com/ryosy383/items/00f8a35eee0a1ba9b296\n#include <stdio.h>\n#include <stdlib.h>\n#include <iostream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\n#define MAX 10000\n\nint main() {\n    vector<int> sq;\n    vector<int> cb;\n    string input;\n\n    for (int i = 1; i <= sqrt(MAX)+1; i++) {\n        sq.push_back(i*i);\n        cb.push_back(i*i*i);\n    }\n\n    while (1) {\n        cin >> input;\n        if (cin.fail())\n            return 0;\n        vector<int> ret, tmp;\n        for (int i = 1; i <= MAX; i++) {\n            ret.push_back(i);\n        }\n        for (int i = 0; i < input.length(); i++) {\n            int count = 0, n,j,k;\n            string s;\n            copy(ret.begin(), ret.end(), back_inserter(tmp));\n\n\n            switch (input[i]) {\n            case 'S': {\n                for (j = 0; j < ret.size(); j++) {\n                    for (k = 0; k < sq.size(); k++) {\n                        if (ret[j] == sq[k] && (count + 1) < tmp.size()) {\n                            tmp[count + 1] = -1;\n                        }\n                    }\n                    count++;\n\n                }\n                ret.clear();\n\n                for (j = 0; j < tmp.size(); j++) {\n                    if (tmp[j] != -1) {\n                        ret.push_back(tmp[j]);\n                    }\n                }\n                tmp.clear();\n                break;\n            }\n            case 's': {\n                for (j = 0; j < ret.size(); j++) {\n                    for (k = 0; k < sq.size(); k++) {\n                        if (ret[j] == sq[k] && (count - 1) >= 0) {\n                            tmp[count - 1] = -1;\n                        }\n                    }\n                    count++;\n\n                }\n                ret.clear();\n\n                for (j = 0; j < tmp.size(); j++) {\n                    if (tmp[j] != -1) {\n                        ret.push_back(tmp[j]);\n                    }\n                }\n                tmp.clear();\n                break;\n            }\n            case 'C': {\n                for (j = 0; j < ret.size(); j++) {\n                    for (k = 0; k < cb.size(); k++) {\n                        if (ret[j] == cb[k] && (count + 1) < tmp.size()) {\n                            tmp[count + 1] = -1;\n                        }\n                    }\n                    count++;\n\n                }\n                ret.clear();\n\n                for (j = 0; j < tmp.size(); j++) {\n                    if (tmp[j] != -1) {\n                        ret.push_back(tmp[j]);\n                    }\n                }\n                tmp.clear();\n                break;\n            }\n            case 'c': {\n                for (j = 0; j < ret.size(); j++) {\n                    for (k = 0; k < cb.size(); k++) {\n                        if (ret[j] == cb[k] && (count - 1) >= 0) {\n                            tmp[count - 1] = -1;\n                        }\n                    }\n                    count++;\n\n                }\n                ret.clear();\n\n                for (j = 0; j < tmp.size(); j++) {\n                    if (tmp[j] != -1) {\n                        ret.push_back(tmp[j]);\n                    }\n                }\n\n                tmp.clear();\n                break;\n            }\n            case 'h': {\n                ret.clear();\n                for (j = 100; j < tmp.size(); j++) {\n                    ret.push_back(tmp[j]);\n                }\n                tmp.clear();\n                break;\n            }\n            default:\n                ret.clear();\n                s = input[i];\n                n = atoi(s.c_str());\n                for(j = 0; j < tmp.size(); j++) {\n                    if (((j+1) % n) != 0) {\n                        ret.push_back(tmp[j]);\n                    }\n                }\n                tmp.clear();\n                break;\n\n            }\n        }\n        for (int x = 0; x < 10; x++) {\n            printf(\"%d\", ret[x]);\n            if (x != 9) {\n                printf(\",\");\n            }\n        }\n        printf(\"\\n\");\n\n    }\n    return 0;\n\n}\n\n\n\n\u554f\u984c\u306f\u4ee5\u4e0bURL\nhttp://nabetani.sakura.ne.jp/hena/ord24eliseq/\n\n\u30ed\u30b8\u30c3\u30af\u306f\u4ee5\u4e0b\u3068\u307b\u307c\u540c\u3058\u3067\u3059\u304c\u3001\u5e73\u65b9\u6839\u3001\u7acb\u65b9\u6839\u3092\u6c42\u3081\u308b\u30ed\u30b8\u30c3\u30af\u306e\u307f\u3092\u5909\u3048\u3066\u3044\u307e\u3059\u3002\nhttp://qiita.com/ryosy383/items/00f8a35eee0a1ba9b296\n\n\n```cpp\n#include <stdio.h>\n#include <stdlib.h>\n#include <iostream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\n#define MAX 10000\n\nint main() {\n    vector<int> sq;\n    vector<int> cb;\n    string input;\n\n    for (int i = 1; i <= sqrt(MAX)+1; i++) {\n        sq.push_back(i*i);\n        cb.push_back(i*i*i);\n    }\n\n    while (1) {\n        cin >> input;\n\t\tif (cin.fail())\n\t\t\treturn 0;\n        vector<int> ret, tmp;\n        for (int i = 1; i <= MAX; i++) {\n            ret.push_back(i);\n        }\n        for (int i = 0; i < input.length(); i++) {\n            int count = 0, n,j,k;\n            string s;\n            copy(ret.begin(), ret.end(), back_inserter(tmp));\n\n\n            switch (input[i]) {\n            case 'S': {\n                for (j = 0; j < ret.size(); j++) {\n                    for (k = 0; k < sq.size(); k++) {\n                        if (ret[j] == sq[k] && (count + 1) < tmp.size()) {\n                            tmp[count + 1] = -1;\n                        }\n                    }\n                    count++;\n\n                }\n                ret.clear();\n\n                for (j = 0; j < tmp.size(); j++) {\n                    if (tmp[j] != -1) {\n                        ret.push_back(tmp[j]);\n                    }\n                }\n                tmp.clear();\n                break;\n            }\n            case 's': {\n                for (j = 0; j < ret.size(); j++) {\n                    for (k = 0; k < sq.size(); k++) {\n                        if (ret[j] == sq[k] && (count - 1) >= 0) {\n                            tmp[count - 1] = -1;\n                        }\n                    }\n                    count++;\n\n                }\n                ret.clear();\n\n                for (j = 0; j < tmp.size(); j++) {\n                    if (tmp[j] != -1) {\n                        ret.push_back(tmp[j]);\n                    }\n                }\n                tmp.clear();\n                break;\n            }\n            case 'C': {\n                for (j = 0; j < ret.size(); j++) {\n                    for (k = 0; k < cb.size(); k++) {\n                        if (ret[j] == cb[k] && (count + 1) < tmp.size()) {\n                            tmp[count + 1] = -1;\n                        }\n                    }\n                    count++;\n\n                }\n                ret.clear();\n\n                for (j = 0; j < tmp.size(); j++) {\n                    if (tmp[j] != -1) {\n                        ret.push_back(tmp[j]);\n                    }\n                }\n                tmp.clear();\n                break;\n            }\n            case 'c': {\n                for (j = 0; j < ret.size(); j++) {\n                    for (k = 0; k < cb.size(); k++) {\n                        if (ret[j] == cb[k] && (count - 1) >= 0) {\n                            tmp[count - 1] = -1;\n                        }\n                    }\n                    count++;\n\n                }\n                ret.clear();\n\n                for (j = 0; j < tmp.size(); j++) {\n                    if (tmp[j] != -1) {\n                        ret.push_back(tmp[j]);\n                    }\n                }\n\n                tmp.clear();\n                break;\n            }\n            case 'h': {\n                ret.clear();\n                for (j = 100; j < tmp.size(); j++) {\n                    ret.push_back(tmp[j]);\n                }\n                tmp.clear();\n                break;\n            }\n            default:\n                ret.clear();\n                s = input[i];\n                n = atoi(s.c_str());\n                for(j = 0; j < tmp.size(); j++) {\n                    if (((j+1) % n) != 0) {\n                        ret.push_back(tmp[j]);\n                    }\n                }\n                tmp.clear();\n                break;\n\n            }\n        }\n        for (int x = 0; x < 10; x++) {\n            printf(\"%d\", ret[x]);\n            if (x != 9) {\n                printf(\",\");\n            }\n        }\n        printf(\"\\n\");\n\n    }\n    return 0;\n\n}\n```\n", "tags": ["C++", "\u3069\u3046\u66f8\u304f", "yhpg"]}