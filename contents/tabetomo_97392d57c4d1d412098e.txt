{"context": "\u9023\u7d9a\u6295\u7a3f\u3067\u3059\u3002\u524d\u306e\u8a18\u4e8b\nwebGL\u3067to\u5909\u63db\n\u3067\u306f\u30018bit\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u6642\u4ee3\u306f10bit\u3067\u3059\u3002\u3067\u300110bit\u5316\u3057\u305f\u3068\u3053\u308d\u3001\u30cf\u30de\u308a\u307e\u3057\u305f\u306e\u3067\u8a18\u4e8b\u306b\u3057\u307e\u3059\u3002\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, w, h, 0, gl.LUMINANCE, gl.UNSIGNED_SHORT, bufY);\n\u3068\u3059\u308b\u3068\u3001\nGL ERROR :GL_INVALID_OPERATION : glTexImage2D: invalid internalformat/format/type combination GL_LUMINANCE/GL_LUMINANCE/GL_UNSIGNED_SHORT\n\u3068\u6012\u3089\u308c\u3001gl.LUMINANCE16\u3082dame\nopenGL\u3067\u306a\u304fwebGL\u3060\u304b\u3089\u304b\u3001\nhttp://stackoverflow.com/questions/31808920/displaying-16bit-unsigned-integers-in-opengl\n\u3082\u30c0\u30e1\u3002\n\n\u30dd\u30a4\u30f3\u30c8\n\u7f8e\u3057\u304f\u306a\u3044\u304c\u4ee5\u4e0b\u306e\u901a\u308a\u89e3\u6c7a\u3002\n16bit\u306e\u307e\u307e\u52d5\u4f5c\u3055\u305b\u308b\u65b9\u6cd5\u304c\u306a\u3044\uff01\nhttp://stackoverflow.com/questions/6413744/looking-to-access-16-bit-image-data-in-javascript-webgl\n\u306e\u3067\u30018bit\uff12\u3064\u3068\u3057\u3066\u5f8c\u304b\u3089\u5408\u6210\u3057\u307e\u3059\u3002\u3061\u3087\u3046\u3069\u3001format\u3068\u3057\u3066\uff12\u3064\u306e8\u30d3\u30c3\u30c8\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304b\u3089\u306a\u308b\u300cgl.LUMINANCE_ALPHA\u300d\u304c\u3042\u308b\u306e\u3067\u305d\u308c\u3092\u4f7f\u3046\u3053\u3068\u306b\u3059\u308b\u3002\n\n\u5909\u66f4\n\nUint8Array\u306e\u30d0\u30c3\u30d5\u30a1\u30b5\u30a4\u30ba\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\uff12\u500d\u3067\u78ba\u4fdd\n\nvar dataY = new Uint8Array(w*h*2);\nvar dataU = new Uint8Array(w2*h2*2);\nvar dataV = new Uint8Array(w2*h2*2);\n\n\u2212\u3000\uff11\uff10\u30d3\u30c3\u30c8\u30c7\u30fc\u30bf\u3068\u3057\u3066\u63cf\u753b\uff08\u81ea\u5206\u3067\u5165\u529b\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u306a\u3089\u3001\u8aad\u307f\u51fa\u3059\u306a\u3089\u4e0d\u8981\uff09\n    val = 1023 - parseInt(i * 1023 / w);\n    dataY[i*2 + w*2 * j + 0] = val & 255;\n    dataY[i*2 + w*2 * j + 1] = val >> 8;\n\n\n\ngl.LUMINANCE\u3092gl.LUMINANCE_ALPHA\u306b\n\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, w, h, 0, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE, dataY);\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, w2, h2, 0, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE, dataU);\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, w2, h2, 0, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE, dataV);\n\n\n\n\u4e0a\u4e0b\u30d0\u30a4\u30c8(\u4ee5\u4e0b\u3067\u306f\u3001r\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8)\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u63cf\u753b\n\n      yuv.x = ((texture2D(samplerY, v_texCoord).r + texture2D(samplerY, v_texCoord).a*256.0)/4.0 - (16.0 / 255.0)); \n      yuv.y = ((texture2D(samplerU, v_texCoord).r + texture2D(samplerU, v_texCoord).a*256.0)/4.0 - 0.5);\n      yuv.z = ((texture2D(samplerV, v_texCoord).r + texture2D(samplerV, v_texCoord).a*256.0)/4.0 - 0.5);\n\n\n\u30bd\u30fc\u30b9\u5168\u6587\uff08\uff11\uff10\u30d3\u30c3\u30c8\u7248\uff09\n\u524d\u8a18\u4e8b\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u307b\u307c98%\u4ee5\u4e0b\u306ewebGLtest\u3055\u3093\u306e\u30bd\u30fc\u30b9\u3068\u540c\u3058\u3067\u3059\u3002\nhttp://jsdo.it/webGLtest/Opoi\n\uff18\u30d3\u30c3\u30c8\u7248\u306f\u524d\u8a18\u4e8b\u53c2\u7167\nwebGL\u3067to\u5909\u63db\n\nindex_10b.html;\n<head>\n  <title> YUV2RGB sample </title>\n  <script type=\"x-shader/x-vertex\" id=\"vs\">\n    uniform vec2 u_resolution;\n    attribute vec2 a_position;\n    attribute vec2 a_texCoord;\n    varying vec2 v_texCoord;\n    void main(void) {\n      v_texCoord = a_texCoord;\n      vec2 pos = a_position / u_resolution;\n      gl_Position = vec4(pos, 0, 1);\n  }\n  </script>\n  <script type=\"x-shader/x-fragment\" id=\"fs\">\n    precision mediump float; \n    uniform sampler2D samplerY;\n    uniform sampler2D samplerU;\n    uniform sampler2D samplerV;\n    const mat3 kColorConv = mat3( 1.164, 1.164, 1.164, 0.0, -0.213, 2.112, 1.793, -0.533, 0.0 ); \n    varying vec2 v_texCoord;\n    void main(void) {\n      mediump vec3 yuv;\n      lowp vec3 rgb;\n// 8bit\n//      yuv.x = (texture2D(samplerY, v_texCoord).x - (16.0 / 255.0)); \n//      yuv.y = (texture2D(samplerU, v_texCoord).x - 0.5);\n//      yuv.z = (texture2D(samplerV, v_texCoord).x - 0.5);\n\n//10bit\n      yuv.x = ((texture2D(samplerY, v_texCoord).r + texture2D(samplerY, v_texCoord).a*256.0)/4.0 - (16.0 / 255.0)); \n      yuv.y = ((texture2D(samplerU, v_texCoord).r + texture2D(samplerU, v_texCoord).a*256.0)/4.0 - 0.5);\n      yuv.z = ((texture2D(samplerV, v_texCoord).r + texture2D(samplerV, v_texCoord).a*256.0)/4.0 - 0.5);\n      rgb = kColorConv * yuv;\n      gl_FragColor = vec4(rgb, 1.0);\n    }\n  </script>\n</head>\n\n<body>\n  <canvas id=\"target\" />\n  <script type=\"text/javascript\" src=\"./yuv2rgb_10b.js\"></script>\n</body>\n\n\n\n\nyuv2rgb_10b.js\n// canvas\u30a8\u30ec\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\nlet c = document.getElementById('target');\nc.width = 320;\nc.height = 240;\n// webgl\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u53d6\u5f97\nlet gl = c.getContext('webgl') || c.getContext('experimental-webgl');\n// canvas\u3092\u521d\u671f\u5316\u3059\u308b\u8272\u3092\u8a2d\u5b9a\u3059\u308b\ngl.clearColor(0.0, 1.0, 1.0, 1.0);\n// canvas\u3092\u521d\u671f\u5316\ngl.clear(gl.COLOR_BUFFER_BIT);\n// \u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3068\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u751f\u6210\nconst v_shader = create_shader('vs');\nconst f_shader = create_shader('fs');\n// \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210\u3068\u30ea\u30f3\u30af\nlet prg = create_program(v_shader, f_shader);\n\ngl.viewport(0, 0, c.width, c.height);\nlet resolutionUniformLocation = gl.getUniformLocation(prg, \"u_resolution\");\ngl.uniform2f(resolutionUniformLocation, gl.canvas.width, gl.canvas.height);\n\n// y\u8981\u7d20\u306etexture\nconst w = 320, h = 240;\nvar dataY = new Uint8Array(w*h); // 8bit\nvar dataY = new Uint8Array(w*h*2); // 10bit\nfor (var i = 0; i < w; ++i) {\n  for (var j = 0; j < h; ++j) {\n//8bit\n    //    dataY[i + w * j] = 255 - parseInt(i * 255 / w);\n//10bit\n    val = 1023 - parseInt(i * 1023 / w);\n    dataY[i*2 + w*2 * j + 0] = val & 255;\n    dataY[i*2 + w*2 * j + 1] = val >> 8;\n  }\n}\n// cbcr\u8981\u7d20\u306etexture\nconst w2 = w / 2;\nconst h2 = h / 2;\n//dataU = new Uint8Array(w2*h2); // 8bit\n//dataV = new Uint8Array(w2*h2); // 8bit\ndataU = new Uint8Array(w2*h2*2); // 10bit\ndataV = new Uint8Array(w2*h2*2); // 10bit\nfor (var i = 0; i < w2; ++i) {\n  for (var j = 0; j < h2; ++j) {\n//8bit\n//    dataU[i + w2 * j] = 255 - parseInt(j * 255 / h2);\n//    dataV[i + w2 * j] = parseInt(j * 255 / h2);\n//10bit\n    valu = 1023 - parseInt(j * 1023 / h2);\n    valv = parseInt(j * 1023 / h2);\n    dataU[i*2 + w2*2 * j    ] = valu & 255;\n    dataU[i*2 + w2*2 * j + 1] = valu >> 8;\n    dataV[i*2 + w2*2 * j    ] = valv & 255;\n    dataV[i*2 + w2*2 * j + 1] = valv >> 8;\n  }\n}\n// \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8a2d\u5b9a\ngl.activeTexture(gl.TEXTURE0);\nlet texture = gl.createTexture();\ngl.bindTexture(gl.TEXTURE_2D, texture);\n// gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, w, h, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, dataY); // 8bit\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, w, h, 0, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE, dataY); // 10bit\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\ngl.uniform1i(gl.getUniformLocation(prg, 'samplerY'), 0);\ngl.activeTexture(gl.TEXTURE1);\ntexture = gl.createTexture();\ngl.bindTexture(gl.TEXTURE_2D, texture);\n// gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, w2, h2, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, dataU); // 8bit\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, w2, h2, 0, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE, dataU); // 10bit\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\ngl.uniform1i(gl.getUniformLocation(prg, 'samplerU'), 1);\ngl.activeTexture(gl.TEXTURE2);\ntexture = gl.createTexture();\ngl.bindTexture(gl.TEXTURE_2D, texture);\n// gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, w2, h2, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, dataV); // 8bit\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, w2, h2, 0, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE, dataV); // 10bit\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\ngl.uniform1i(gl.getUniformLocation(prg, 'samplerV'), 2);\n\n// \u9802\u70b9\u60c5\u5831\u306e\u767b\u9332\nlet attLocation = gl.getAttribLocation(prg, 'a_position');\ngl.enableVertexAttribArray(attLocation);\nconst vertex_position = new Float32Array([\n  -w, -h,\n  w, -h,\n  w, h,\n  -w, h,\n]);\ngl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\ngl.bufferData(gl.ARRAY_BUFFER, vertex_position, gl.STATIC_DRAW);\ngl.vertexAttribPointer(attLocation, 2, gl.FLOAT, false, 0, 0);\n\n// \u30c6\u30af\u30b9\u30c1\u30e3\u4e00\u9802\u70b9\u60c5\u5831\u306e\u767b\u9332\nlet uvLocation = gl.getAttribLocation(prg, 'a_texCoord');\ngl.enableVertexAttribArray(uvLocation);\nconst uv_position = new Float32Array([\n  0.0, 1.0,\n  1.0, 1.0,\n  1.0, 0.0,\n  0.0, 0.0\n]);\ngl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\ngl.bufferData(gl.ARRAY_BUFFER, uv_position, gl.STATIC_DRAW);\ngl.vertexAttribPointer(uvLocation, 2, gl.FLOAT, false, 0, 0);\n// \u63cf\u753b\ngl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n// \u8868\u793a\u66f4\u65b0\ngl.flush();\n\n// \u30b7\u30a7\u30fc\u30c0\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\nfunction create_shader(id) {\n  // \u30b7\u30a7\u30fc\u30c0\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570\n  let shader;\n  // HTML\u304b\u3089script\u30bf\u30b0\u3078\u306e\u53c2\u7167\u3092\u53d6\u5f97\n  let scriptElement = document.getElementById(id);\n  // script\u30bf\u30b0\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u629c\u3051\u308b\n  if (!scriptElement) { return; }\n  // script\u30bf\u30b0\u306etype\u5c5e\u6027\u3092\u30c1\u30a7\u30c3\u30af\n  switch (scriptElement.type) {\n    // \u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306e\u5834\u5408\n    case 'x-shader/x-vertex':\n      shader = gl.createShader(gl.VERTEX_SHADER);\n      break;\n    // \u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u5834\u5408\n    case 'x-shader/x-fragment':\n      shader = gl.createShader(gl.FRAGMENT_SHADER);\n      break;\n    default:\n      return;\n  }\n  // \u751f\u6210\u3055\u308c\u305f\u30b7\u30a7\u30fc\u30c0\u306b\u30bd\u30fc\u30b9\u3092\u5272\u308a\u5f53\u3066\u308b\n  gl.shaderSource(shader, scriptElement.text);\n  // \u30b7\u30a7\u30fc\u30c0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n  gl.compileShader(shader);\n  // \u30b7\u30a7\u30fc\u30c0\u304c\u6b63\u3057\u304f\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u304b\u30c1\u30a7\u30c3\u30af\n  if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    // \u6210\u529f\u3057\u3066\u3044\u305f\u3089\u30b7\u30a7\u30fc\u30c0\u3092\u8fd4\u3057\u3066\u7d42\u4e86\n    return shader;\n  } else {\n    // \u5931\u6557\u3057\u3066\u3044\u305f\u3089\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u30a2\u30e9\u30fc\u30c8\u3059\u308b\n    alert(gl.getShaderInfoLog(shader));\n  }\n}\n\n// \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u30b7\u30a7\u30fc\u30c0\u3092\u30ea\u30f3\u30af\u3059\u308b\u95a2\u6570\nfunction create_program(vs, fs) {\n  // \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210\n  var program = gl.createProgram();\n  // \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30b7\u30a7\u30fc\u30c0\u3092\u5272\u308a\u5f53\u3066\u308b\n  gl.attachShader(program, vs);\n  gl.attachShader(program, fs);\n  // \u30b7\u30a7\u30fc\u30c0\u3092\u30ea\u30f3\u30af\n  gl.linkProgram(program);\n  // \u30b7\u30a7\u30fc\u30c0\u306e\u30ea\u30f3\u30af\u304c\u6b63\u3057\u304f\u884c\u306a\u308f\u308c\u305f\u304b\u30c1\u30a7\u30c3\u30af\n  if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    // \u6210\u529f\u3057\u3066\u3044\u305f\u3089\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6709\u52b9\u306b\u3059\u308b\n    gl.useProgram(program);\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u3066\u7d42\u4e86\n    return program;\n  } else {\n    // \u5931\u6557\u3057\u3066\u3044\u305f\u3089\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u30a2\u30e9\u30fc\u30c8\u3059\u308b\n    alert(gl.getProgramInfoLog(program));\n  }\n}\n\n\n\n\u8868\u793a\u4f8b\n\n\u7dba\u9e97\u306a\u306e\u306f\u3001webGLtest\u3055\u3093\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u753b\u50cf\u304c\u7dba\u9e97\u306a\u3060\u3051\u3067\u3002\u3002\u3002\nhttp://jsdo.it/webGLtest/Opoi\n\n\u53c2\u8003\u60c5\u5831\nhttp://jsdo.it/webGLtest/Opoi\nWebgl Fundamentals\nhttps://webglfundamentals.org/webgl/lessons/webgl-fundamentals.html\n\u7b2c\u5341\u4e00\u56de WebGL\u30b9\u30af\u30fc\u30eb\u300c\u30ad\u30e5\u30fc\u30d6\u74b0\u5883\u30de\u30c3\u30d4\u30f3\u30b0\u300d\nhttp://qiita.com/konweb/items/262b107b2ea9a6113776#_reference-c79295fe4df8c81ed4bf\nwgld.org\nhttps://wgld.org/sitemap.html\n\u9023\u7d9a\u6295\u7a3f\u3067\u3059\u3002\u524d\u306e\u8a18\u4e8b\n[webGL\u3067to\u5909\u63db](http://qiita.com/tabetomo/items/d156b7c1c9c1f2e93850)\n\u3067\u306f\u30018bit\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u6642\u4ee3\u306f10bit\u3067\u3059\u3002\u3067\u300110bit\u5316\u3057\u305f\u3068\u3053\u308d\u3001\u30cf\u30de\u308a\u307e\u3057\u305f\u306e\u3067\u8a18\u4e8b\u306b\u3057\u307e\u3059\u3002\n\n\n``gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, w, h, 0, gl.LUMINANCE, gl.UNSIGNED_SHORT, bufY);``\n\u3068\u3059\u308b\u3068\u3001\n``GL ERROR :GL_INVALID_OPERATION : glTexImage2D: invalid internalformat/format/type combination GL_LUMINANCE/GL_LUMINANCE/GL_UNSIGNED_SHORT``\n\u3068\u6012\u3089\u308c\u3001``gl.LUMINANCE16``\u3082dame\nopenGL\u3067\u306a\u304fwebGL\u3060\u304b\u3089\u304b\u3001\nhttp://stackoverflow.com/questions/31808920/displaying-16bit-unsigned-integers-in-opengl\n\u3082\u30c0\u30e1\u3002\n\n# \u30dd\u30a4\u30f3\u30c8\n\u7f8e\u3057\u304f\u306a\u3044\u304c\u4ee5\u4e0b\u306e\u901a\u308a\u89e3\u6c7a\u3002\n\n**16bit\u306e\u307e\u307e\u52d5\u4f5c\u3055\u305b\u308b\u65b9\u6cd5\u304c\u306a\u3044**\uff01\nhttp://stackoverflow.com/questions/6413744/looking-to-access-16-bit-image-data-in-javascript-webgl\n\u306e\u3067\u3001**8bit\uff12\u3064**\u3068\u3057\u3066\u5f8c\u304b\u3089\u5408\u6210\u3057\u307e\u3059\u3002\u3061\u3087\u3046\u3069\u3001format\u3068\u3057\u3066\uff12\u3064\u306e8\u30d3\u30c3\u30c8\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304b\u3089\u306a\u308b\u300c**gl.LUMINANCE_ALPHA**\u300d\u304c\u3042\u308b\u306e\u3067\u305d\u308c\u3092\u4f7f\u3046\u3053\u3068\u306b\u3059\u308b\u3002\n\n## \u5909\u66f4\n- Uint8Array\u306e\u30d0\u30c3\u30d5\u30a1\u30b5\u30a4\u30ba\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\uff12\u500d\u3067\u78ba\u4fdd\n\n```\nvar dataY = new Uint8Array(w*h*2);\nvar dataU = new Uint8Array(w2*h2*2);\nvar dataV = new Uint8Array(w2*h2*2);\n```\n\n\u2212\u3000\uff11\uff10\u30d3\u30c3\u30c8\u30c7\u30fc\u30bf\u3068\u3057\u3066\u63cf\u753b\uff08\u81ea\u5206\u3067\u5165\u529b\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u306a\u3089\u3001\u8aad\u307f\u51fa\u3059\u306a\u3089\u4e0d\u8981\uff09\n\n```\n    val = 1023 - parseInt(i * 1023 / w);\n    dataY[i*2 + w*2 * j + 0] = val & 255;\n    dataY[i*2 + w*2 * j + 1] = val >> 8;\n```\n\n- **gl.LUMINANCE\u3092gl.LUMINANCE_ALPHA**\u306b\n \n```\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, w, h, 0, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE, dataY);\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, w2, h2, 0, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE, dataU);\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, w2, h2, 0, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE, dataV);\n```\n\n- **\u4e0a\u4e0b\u30d0\u30a4\u30c8(\u4ee5\u4e0b\u3067\u306f\u3001r\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8)**\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u63cf\u753b\n\n```\n      yuv.x = ((texture2D(samplerY, v_texCoord).r + texture2D(samplerY, v_texCoord).a*256.0)/4.0 - (16.0 / 255.0)); \n      yuv.y = ((texture2D(samplerU, v_texCoord).r + texture2D(samplerU, v_texCoord).a*256.0)/4.0 - 0.5);\n      yuv.z = ((texture2D(samplerV, v_texCoord).r + texture2D(samplerV, v_texCoord).a*256.0)/4.0 - 0.5);\n```\n\n# \u30bd\u30fc\u30b9\u5168\u6587\uff08\uff11\uff10\u30d3\u30c3\u30c8\u7248\uff09\n\u524d\u8a18\u4e8b\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u307b\u307c98%\u4ee5\u4e0b\u306ewebGLtest\u3055\u3093\u306e\u30bd\u30fc\u30b9\u3068\u540c\u3058\u3067\u3059\u3002\nhttp://jsdo.it/webGLtest/Opoi\n\n\uff18\u30d3\u30c3\u30c8\u7248\u306f\u524d\u8a18\u4e8b\u53c2\u7167\n[webGL\u3067to\u5909\u63db](http://qiita.com/tabetomo/items/d156b7c1c9c1f2e93850)\n\n```html:index_10b.html;\n<head>\n  <title> YUV2RGB sample </title>\n  <script type=\"x-shader/x-vertex\" id=\"vs\">\n    uniform vec2 u_resolution;\n    attribute vec2 a_position;\n    attribute vec2 a_texCoord;\n    varying vec2 v_texCoord;\n    void main(void) {\n      v_texCoord = a_texCoord;\n      vec2 pos = a_position / u_resolution;\n      gl_Position = vec4(pos, 0, 1);\n  }\n  </script>\n  <script type=\"x-shader/x-fragment\" id=\"fs\">\n    precision mediump float; \n    uniform sampler2D samplerY;\n    uniform sampler2D samplerU;\n    uniform sampler2D samplerV;\n    const mat3 kColorConv = mat3( 1.164, 1.164, 1.164, 0.0, -0.213, 2.112, 1.793, -0.533, 0.0 ); \n    varying vec2 v_texCoord;\n    void main(void) {\n      mediump vec3 yuv;\n      lowp vec3 rgb;\n// 8bit\n//      yuv.x = (texture2D(samplerY, v_texCoord).x - (16.0 / 255.0)); \n//      yuv.y = (texture2D(samplerU, v_texCoord).x - 0.5);\n//      yuv.z = (texture2D(samplerV, v_texCoord).x - 0.5);\n\n//10bit\n      yuv.x = ((texture2D(samplerY, v_texCoord).r + texture2D(samplerY, v_texCoord).a*256.0)/4.0 - (16.0 / 255.0)); \n      yuv.y = ((texture2D(samplerU, v_texCoord).r + texture2D(samplerU, v_texCoord).a*256.0)/4.0 - 0.5);\n      yuv.z = ((texture2D(samplerV, v_texCoord).r + texture2D(samplerV, v_texCoord).a*256.0)/4.0 - 0.5);\n      rgb = kColorConv * yuv;\n      gl_FragColor = vec4(rgb, 1.0);\n    }\n  </script>\n</head>\n\n<body>\n  <canvas id=\"target\" />\n  <script type=\"text/javascript\" src=\"./yuv2rgb_10b.js\"></script>\n</body>\n\n```\n\n```javascript:yuv2rgb_10b.js\n// canvas\u30a8\u30ec\u30e1\u30f3\u30c8\u3092\u53d6\u5f97\nlet c = document.getElementById('target');\nc.width = 320;\nc.height = 240;\n// webgl\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u53d6\u5f97\nlet gl = c.getContext('webgl') || c.getContext('experimental-webgl');\n// canvas\u3092\u521d\u671f\u5316\u3059\u308b\u8272\u3092\u8a2d\u5b9a\u3059\u308b\ngl.clearColor(0.0, 1.0, 1.0, 1.0);\n// canvas\u3092\u521d\u671f\u5316\ngl.clear(gl.COLOR_BUFFER_BIT);\n// \u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3068\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u751f\u6210\nconst v_shader = create_shader('vs');\nconst f_shader = create_shader('fs');\n// \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210\u3068\u30ea\u30f3\u30af\nlet prg = create_program(v_shader, f_shader);\n\ngl.viewport(0, 0, c.width, c.height);\nlet resolutionUniformLocation = gl.getUniformLocation(prg, \"u_resolution\");\ngl.uniform2f(resolutionUniformLocation, gl.canvas.width, gl.canvas.height);\n\n// y\u8981\u7d20\u306etexture\nconst w = 320, h = 240;\nvar dataY = new Uint8Array(w*h); // 8bit\nvar dataY = new Uint8Array(w*h*2); // 10bit\nfor (var i = 0; i < w; ++i) {\n  for (var j = 0; j < h; ++j) {\n//8bit\n    //    dataY[i + w * j] = 255 - parseInt(i * 255 / w);\n//10bit\n    val = 1023 - parseInt(i * 1023 / w);\n    dataY[i*2 + w*2 * j + 0] = val & 255;\n    dataY[i*2 + w*2 * j + 1] = val >> 8;\n  }\n}\n// cbcr\u8981\u7d20\u306etexture\nconst w2 = w / 2;\nconst h2 = h / 2;\n//dataU = new Uint8Array(w2*h2); // 8bit\n//dataV = new Uint8Array(w2*h2); // 8bit\ndataU = new Uint8Array(w2*h2*2); // 10bit\ndataV = new Uint8Array(w2*h2*2); // 10bit\nfor (var i = 0; i < w2; ++i) {\n  for (var j = 0; j < h2; ++j) {\n//8bit\n//    dataU[i + w2 * j] = 255 - parseInt(j * 255 / h2);\n//    dataV[i + w2 * j] = parseInt(j * 255 / h2);\n//10bit\n    valu = 1023 - parseInt(j * 1023 / h2);\n    valv = parseInt(j * 1023 / h2);\n    dataU[i*2 + w2*2 * j    ] = valu & 255;\n    dataU[i*2 + w2*2 * j + 1] = valu >> 8;\n    dataV[i*2 + w2*2 * j    ] = valv & 255;\n    dataV[i*2 + w2*2 * j + 1] = valv >> 8;\n  }\n}\n// \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u8a2d\u5b9a\ngl.activeTexture(gl.TEXTURE0);\nlet texture = gl.createTexture();\ngl.bindTexture(gl.TEXTURE_2D, texture);\n// gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, w, h, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, dataY); // 8bit\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, w, h, 0, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE, dataY); // 10bit\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\ngl.uniform1i(gl.getUniformLocation(prg, 'samplerY'), 0);\ngl.activeTexture(gl.TEXTURE1);\ntexture = gl.createTexture();\ngl.bindTexture(gl.TEXTURE_2D, texture);\n// gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, w2, h2, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, dataU); // 8bit\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, w2, h2, 0, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE, dataU); // 10bit\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\ngl.uniform1i(gl.getUniformLocation(prg, 'samplerU'), 1);\ngl.activeTexture(gl.TEXTURE2);\ntexture = gl.createTexture();\ngl.bindTexture(gl.TEXTURE_2D, texture);\n// gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, w2, h2, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, dataV); // 8bit\ngl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE_ALPHA, w2, h2, 0, gl.LUMINANCE_ALPHA, gl.UNSIGNED_BYTE, dataV); // 10bit\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\ngl.uniform1i(gl.getUniformLocation(prg, 'samplerV'), 2);\n\n// \u9802\u70b9\u60c5\u5831\u306e\u767b\u9332\nlet attLocation = gl.getAttribLocation(prg, 'a_position');\ngl.enableVertexAttribArray(attLocation);\nconst vertex_position = new Float32Array([\n  -w, -h,\n  w, -h,\n  w, h,\n  -w, h,\n]);\ngl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\ngl.bufferData(gl.ARRAY_BUFFER, vertex_position, gl.STATIC_DRAW);\ngl.vertexAttribPointer(attLocation, 2, gl.FLOAT, false, 0, 0);\n\n// \u30c6\u30af\u30b9\u30c1\u30e3\u4e00\u9802\u70b9\u60c5\u5831\u306e\u767b\u9332\nlet uvLocation = gl.getAttribLocation(prg, 'a_texCoord');\ngl.enableVertexAttribArray(uvLocation);\nconst uv_position = new Float32Array([\n  0.0, 1.0,\n  1.0, 1.0,\n  1.0, 0.0,\n  0.0, 0.0\n]);\ngl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\ngl.bufferData(gl.ARRAY_BUFFER, uv_position, gl.STATIC_DRAW);\ngl.vertexAttribPointer(uvLocation, 2, gl.FLOAT, false, 0, 0);\n// \u63cf\u753b\ngl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n// \u8868\u793a\u66f4\u65b0\ngl.flush();\n\n// \u30b7\u30a7\u30fc\u30c0\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\nfunction create_shader(id) {\n  // \u30b7\u30a7\u30fc\u30c0\u3092\u683c\u7d0d\u3059\u308b\u5909\u6570\n  let shader;\n  // HTML\u304b\u3089script\u30bf\u30b0\u3078\u306e\u53c2\u7167\u3092\u53d6\u5f97\n  let scriptElement = document.getElementById(id);\n  // script\u30bf\u30b0\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u629c\u3051\u308b\n  if (!scriptElement) { return; }\n  // script\u30bf\u30b0\u306etype\u5c5e\u6027\u3092\u30c1\u30a7\u30c3\u30af\n  switch (scriptElement.type) {\n    // \u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306e\u5834\u5408\n    case 'x-shader/x-vertex':\n      shader = gl.createShader(gl.VERTEX_SHADER);\n      break;\n    // \u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u5834\u5408\n    case 'x-shader/x-fragment':\n      shader = gl.createShader(gl.FRAGMENT_SHADER);\n      break;\n    default:\n      return;\n  }\n  // \u751f\u6210\u3055\u308c\u305f\u30b7\u30a7\u30fc\u30c0\u306b\u30bd\u30fc\u30b9\u3092\u5272\u308a\u5f53\u3066\u308b\n  gl.shaderSource(shader, scriptElement.text);\n  // \u30b7\u30a7\u30fc\u30c0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n  gl.compileShader(shader);\n  // \u30b7\u30a7\u30fc\u30c0\u304c\u6b63\u3057\u304f\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u304b\u30c1\u30a7\u30c3\u30af\n  if (gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    // \u6210\u529f\u3057\u3066\u3044\u305f\u3089\u30b7\u30a7\u30fc\u30c0\u3092\u8fd4\u3057\u3066\u7d42\u4e86\n    return shader;\n  } else {\n    // \u5931\u6557\u3057\u3066\u3044\u305f\u3089\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u30a2\u30e9\u30fc\u30c8\u3059\u308b\n    alert(gl.getShaderInfoLog(shader));\n  }\n}\n\n// \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u30b7\u30a7\u30fc\u30c0\u3092\u30ea\u30f3\u30af\u3059\u308b\u95a2\u6570\nfunction create_program(vs, fs) {\n  // \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210\n  var program = gl.createProgram();\n  // \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30b7\u30a7\u30fc\u30c0\u3092\u5272\u308a\u5f53\u3066\u308b\n  gl.attachShader(program, vs);\n  gl.attachShader(program, fs);\n  // \u30b7\u30a7\u30fc\u30c0\u3092\u30ea\u30f3\u30af\n  gl.linkProgram(program);\n  // \u30b7\u30a7\u30fc\u30c0\u306e\u30ea\u30f3\u30af\u304c\u6b63\u3057\u304f\u884c\u306a\u308f\u308c\u305f\u304b\u30c1\u30a7\u30c3\u30af\n  if (gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    // \u6210\u529f\u3057\u3066\u3044\u305f\u3089\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6709\u52b9\u306b\u3059\u308b\n    gl.useProgram(program);\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u3066\u7d42\u4e86\n    return program;\n  } else {\n    // \u5931\u6557\u3057\u3066\u3044\u305f\u3089\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u30a2\u30e9\u30fc\u30c8\u3059\u308b\n    alert(gl.getProgramInfoLog(program));\n  }\n}\n```\n\n# \u8868\u793a\u4f8b\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-25 15.35.41.png](https://qiita-image-store.s3.amazonaws.com/0/93734/b5541f3a-bd65-b18d-d614-86f2a8789e1e.png)\n\n\u7dba\u9e97\u306a\u306e\u306f\u3001webGLtest\u3055\u3093\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u753b\u50cf\u304c\u7dba\u9e97\u306a\u3060\u3051\u3067\u3002\u3002\u3002\nhttp://jsdo.it/webGLtest/Opoi\n\n\n\n# \u53c2\u8003\u60c5\u5831\nhttp://jsdo.it/webGLtest/Opoi\n\nWebgl Fundamentals\nhttps://webglfundamentals.org/webgl/lessons/webgl-fundamentals.html\n\n\u7b2c\u5341\u4e00\u56de WebGL\u30b9\u30af\u30fc\u30eb\u300c\u30ad\u30e5\u30fc\u30d6\u74b0\u5883\u30de\u30c3\u30d4\u30f3\u30b0\u300d\nhttp://qiita.com/konweb/items/262b107b2ea9a6113776#_reference-c79295fe4df8c81ed4bf\n\nwgld.org\nhttps://wgld.org/sitemap.html\n\n\n\n\n\n\n\n\n\n", "tags": ["WebGL", "canvas", "JavaScript"]}