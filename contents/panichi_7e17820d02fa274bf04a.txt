{"context": "\n\n\u306f\u3058\u3081\u306b\n\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306fAngular\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306fSpring Boot\u3068\u3044\u3046\u69cb\u6210\u3067Angular\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nAngular\u306eHTTP\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306fmock\u3092\u4f7f\u3063\u3066json\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u5b9f\u969b\u306bREST API\u30b5\u30fc\u30d0\u3068\u901a\u4fe1\u3057\u3066json\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\n\nFront/Back\nframework\nversion\nURL\nmemo\n\n\n\n\n\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\nAngular\n2.4\nhttp://localhost:3000\n\n\n\n\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\nSpring Boot\n1.4.3\nhttp://localhost:8080\njava 1.8\n\n\n\n\u5c1a\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fgithub\u306b\u30a2\u30c3\u30d7\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n\n\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u5074\n\n\u30d2\u30fc\u30ed\u30fc\u30e2\u30c7\u30eb\n\u307e\u305a\u3001\u6700\u521d\u306b\u30d2\u30fc\u30ed\u30fcclass\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nLombok\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001setter,getter\u4e0d\u8981\u3067\u3059\u3002\n\nHero.java\npackage com.example.model;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\nimport lombok.ToString;\n\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\n@ToString\npublic class Hero {\n    private Integer id;\n    private String name;\n}\n\n\n\n\u30d2\u30fc\u30ed\u30fc\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\n\u6b21\u306fREST API\u3067\u3059\u3002\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u5408\u308f\u305b\u3066\u3001\u4ee5\u4e0b5\u3064\u306eAPI\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n\u30d2\u30fc\u30ed\u30fc\u306e\u914d\u5217\u3092\u8fd4\u3059\"getHeroes\"\nid\u3092\u6307\u5b9a\u3057\u3066\u30d2\u30fc\u30ed\u30fc\u3092\u8fd4\u3059\"getHero\"\n\u65b0\u3057\u3044\u30d2\u30fc\u30ed\u30fc\u3092\u4f5c\u6210\u3059\u308b\"create\"\n\u30d2\u30fc\u30ed\u30fc\u3092\u524a\u9664\u3059\u308b\"delete\"\n\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3059\u308b\u30d2\u30fc\u30ed\u30fc\u3092\u691c\u7d22\u3059\u308b\"search\"\n\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3068\u540c\u3058\u304f\u3001\u30d2\u30fc\u30ed\u30fc\u9054\u306e\u30c7\u30fc\u30bf\u3092\u5909\u6570\u306b\u683c\u7d0d\u3057\u307e\u3057\u305f\u3002\n\nHeroController.java\npackage com.example.controller;\n\nimport com.example.model.Hero;\nimport org.springframework.http.MediaType;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.*;\nimport java.util.function.Function;\nimport java.util.stream.Collectors;\n\n@RestController\npublic class HeroController {\n\n    /**\n     * hero list\n     */\n    private  List<Hero> heroes;\n\n    /**\n     *  angular tutorial\n     *  reference app/in-memory-data.services.ts\n     */\n    public HeroController() {\n        this.heroes = new ArrayList<>();\n        heroes.add(new Hero(11, \"Mr. Nice\"));\n        heroes.add(new Hero(12, \"Narco\"));\n        heroes.add(new Hero(13, \"Bombasto\"));\n        heroes.add(new Hero(14, \"Celeritas\"));\n        heroes.add(new Hero(15, \"Magneta\"));\n        heroes.add(new Hero(16, \"RubberMan\"));\n        heroes.add(new Hero(17, \"Dynama\"));\n        heroes.add(new Hero(18, \"Dr IQ\"));\n        heroes.add(new Hero(19, \"Magma\"));\n        heroes.add(new Hero(20, \"Tornado\"));\n    }\n\n    /**\n     * angular tutorial\n     * reference app/hero.service.ts\n     * @param id\n     * @return Hero\n     */\n    @GetMapping(\"/{id}\")\n    public Hero getHero(@PathVariable Integer id) {\n        Map<Integer, Hero> heroMap = heroes.stream().collect(Collectors.toMap(Hero::getId, Function.identity()));\n        Hero hero = heroMap.get(id);\n        return hero;\n    }\n\n    /**\n     * angular tutorial\n     *  reference app/hero.service.ts\n     * @return hero array\n     */\n    @GetMapping(\"/\")\n    public List<Hero> getHeroes() {\n        return heroes;\n    }\n\n    /**\n     * angular tutorial\n     * reference app/hero.service.ts\n     * @param newHero\n     * @return Hero\n     */\n    @PostMapping(value = \"/\", consumes = MediaType.APPLICATION_JSON_VALUE)\n    public Hero create(@RequestBody  Hero newHero) {\n        Optional<Integer> max = heroes.stream().map(hero -> hero.getId()).max(Comparator.naturalOrder());\n        Integer id = max.get() + 1;\n        newHero.setId(id);\n        heroes.add(newHero);\n        return newHero;\n    }\n\n    /**\n     * angular tutorial\n     * reference app/hero.service.ts\n     * @param id\n     */\n    @DeleteMapping(\"/{id}\")\n    public void delete(@PathVariable Integer id) {\n        heroes.remove(heroes.stream().filter(hero -> hero.getId() == id).findFirst().get());\n    }\n\n    /**\n     * angular tutorial\n     * reference app/hero-search.service.ts\n     * @param name\n     * @return selected heroes\n     */\n    @GetMapping(\"/app/heroes\")\n    public List<Hero> search(@RequestParam  String name) {\n        List<Hero> selectedHeroes = heroes.stream()\n                .filter(hero -> hero.getName().toLowerCase().contains(name.toLowerCase()))\n                .collect(Collectors.toList());\n        return selectedHeroes;\n    }\n}\n\n\n\nCORS\u30b5\u30dd\u30fc\u30c8\n\u30d6\u30e9\u30a6\u30b6\u3067Ajax\u901a\u4fe1\u3092\u884c\u3046\u969b\u306b\u306f\u3001\u540c\u4e00\u751f\u6210\u5143\u30dd\u30ea\u30b7\u30fc(Same Origin Policy)\u306b\u3088\u3063\u3066\u81ea\u8eab\u306e\u30ea\u30bd\u30fc\u30b9\u304b\u3089\u4ed6\u306e\u30ea\u30bd\u30fc\u30b9\u3078\u306eHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3068\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3067\u30dd\u30fc\u30c8\u756a\u53f7\u304c\u7570\u306a\u308b\u306e\u3067\u3001\u30d6\u30e9\u30a6\u30b6\u306f\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u304b\u3089REST API\u3092\u516c\u958b\u3059\u308b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u3067\u3042\u308b\u3068\u5224\u65ad\u3057\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5931\u6557\u3057\u307e\u3059\u3002\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306fSpring Framework\u306eCORS Support\u3092\u4f7f\u7528\u3057\u3066\u3001\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\nWebConfig.java\npackage com.example.config;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.CorsRegistry;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;\n\n@Configuration\n@EnableWebMvc\npublic class WebConfig extends WebMvcConfigurerAdapter {\n    @Override\n    public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n                .allowedOrigins(\"http://localhost:3000\")\n                .allowedMethods(\"GET\",\"POST\",\"PUT\", \"DELETE\",\"OPTIONS\")\n                .allowedHeaders(\"Origin\", \"X-Requested-With\", \"Content-Type\", \"Accept\")\n                .allowCredentials(false).maxAge(3600);\n    }\n}\n\n\n\n\u30ed\u30b0\u51fa\u529b\nAPI\u30b3\u30fc\u30eb\u78ba\u8a8d\u7528\u306e\u30ed\u30b0\u51fa\u529b\u30af\u30e9\u30b9\u3082\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089REST API\u304c\u547c\u3070\u308c\u308b\u3068\u3001[\u30e1\u30bd\u30c3\u30c9\u540d] called.\u3068\u3044\u3046\u30ed\u30b0\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\nLogInterceptor.java\npackage com.example.aop;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.springframework.stereotype.Component;\n\n@Aspect\n@Component\n@Slf4j\npublic class LogInterceptor {\n\n    @Around(\"execution(public * com.example.*.HeroController.*(..))\")\n    public Object itemReaderAround(ProceedingJoinPoint joinPoint) throws Throwable {\n        String methodName = joinPoint.getSignature().getName();\n        log.info(\"[{}] called.\", methodName);\n        Object object = joinPoint.proceed();\n        return object;\n    }\n}\n\n\n\n\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u5074\n\u6b21\u306fAngular\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u30bd\u30fc\u30b9\u306eheroesUrl\u3092REST API\u306eURL\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\nhero.service.ts\nimport { Injectable }    from '@angular/core';\nimport { Headers, Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { Hero } from './hero';\n@Injectable()\nexport class HeroService {\n  private headers = new Headers({'Content-Type': 'application/json'});\n//  private heroesUrl = 'api/heroes';  // URL to web api <=\u3053\u3053\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n  private heroesUrl = 'http://localhost:8080';  // <=\u3053\u3053\u3092\u8ffd\u52a0\n  constructor(private http: Http) { }\n  getHeroes(): Promise<Hero[]> {\n    return this.http.get(this.heroesUrl)\n      .toPromise()\n      .then(response => response.json() as Hero[])\n\n      .catch(this.handleError);\n  }\n  getHero(id: number): Promise<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get(url)\n      .toPromise()\n      .then(response => response.json() as Hero)\n      .catch(this.handleError);\n  }\n\n\nmock\u304c\u52d5\u4f5c\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001InMemoryWebApiModule.forRoot(InMemoryDataService)\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u307e\u3059\u3002\n\napp_module.ts\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n//    InMemoryWebApiModule.forRoot(InMemoryDataService),\u3000<=\u3053\u3053\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n    AppRoutingModule\n  ],\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HeroDetailComponent,\n    HeroesComponent,\n    HeroSearchComponent\n  ],\n  providers: [ HeroService ],\n  bootstrap: [ AppComponent ]\n})\n\n\nHero Search\u306e\u65b9\u3082REST API\u306eURL\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\nhero-search.service.ts\nimport { Injectable }     from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { Hero }           from './hero';\n@Injectable()\nexport class HeroSearchService {\n  constructor(private http: Http) {}\n  search(term: string): Observable<Hero[]> {\n    return this.http\n      //.get(`app/heroes/?name=${term}`)\u3000<=\u3053\u3053\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n      .get(`http://localhost:8080/app/heroes/?name=${term}`)\u3000// <=\u3053\u3053\u3092\u8ffd\u52a0\n      .map((r: Response) => r.json() as Hero[]);\n  }\n}\n\n\n\n\n\u5b9f\u884c\u3057\u3066\u307f\u308b\nnpm start\u3057\u3066\u3001Angular\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30a2\u30d7\u30ea\u3092\u64cd\u4f5c\u3057\u3066\u307f\u307e\u3059\u3002\nSpring Boot\u306eAPI\u304c\u547c\u3070\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n\u307e\u3068\u3081\n\u666e\u6bb5\u3001\u4f7f\u7528\u3057\u3066\u3044\u308b\u958b\u767a\u74b0\u5883\u306fSTS(Spring Tool Suite)\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001Angular\u3068Spring\u3092\u9023\u643a\u3059\u308b\u5834\u5408\u306fIntelliJ\u306e\u307b\u3046\u304c\u958b\u767a\u3057\u3084\u3059\u3044\u3067\u3059\u306d\u3002\nAngular\u306eHTTP\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u73fe\u6642\u70b9\u3067\u306f\u307e\u3060EXPERIMENTAL\u306a\u306e\u3067\u3001\u4ed5\u4e8b\u3067\u306fSTABLE\u306b\u306a\u3063\u3066\u304b\u3089\u4f7f\u7528\u3059\u308b\u3068\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n#\u306f\u3058\u3081\u306b\n\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306fAngular\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306fSpring Boot\u3068\u3044\u3046\u69cb\u6210\u3067[Angular\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](https://angular.io/docs/ts/latest/tutorial/)\u3092\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\nAngular\u306e[HTTP\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](https://angular.io/docs/ts/latest/tutorial/toh-pt6.html)\u3067\u306fmock\u3092\u4f7f\u3063\u3066json\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u5b9f\u969b\u306bREST API\u30b5\u30fc\u30d0\u3068\u901a\u4fe1\u3057\u3066json\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n|Front/Back|framework  |version | URL |memo|\n|:-:|:-:|:-:|:-:|:-:|\n|\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9|Angular  |2.4   |http://localhost:3000   ||\n|\u30d0\u30c3\u30af\u30a8\u30f3\u30c9|Spring Boot   |1.4.3   |http://localhost:8080   |java 1.8|\n\n\u5c1a\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u5074\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f[github](https://github.com/panichi/spring-boot-angular)\u306b\u30a2\u30c3\u30d7\u3057\u3066\u304a\u308a\u307e\u3059\u3002\n#\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u5074\n##\u30d2\u30fc\u30ed\u30fc\u30e2\u30c7\u30eb\n\u307e\u305a\u3001\u6700\u521d\u306b\u30d2\u30fc\u30ed\u30fcclass\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nLombok\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001setter,getter\u4e0d\u8981\u3067\u3059\u3002\n\n```java:Hero.java\npackage com.example.model;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\nimport lombok.ToString;\n\n@Data\n@AllArgsConstructor\n@NoArgsConstructor\n@ToString\npublic class Hero {\n    private Integer id;\n    private String name;\n}\n```\n\n##\u30d2\u30fc\u30ed\u30fc\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\n\u6b21\u306fREST API\u3067\u3059\u3002\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u5408\u308f\u305b\u3066\u3001\u4ee5\u4e0b5\u3064\u306eAPI\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n- \u30d2\u30fc\u30ed\u30fc\u306e\u914d\u5217\u3092\u8fd4\u3059\"getHeroes\"\n- id\u3092\u6307\u5b9a\u3057\u3066\u30d2\u30fc\u30ed\u30fc\u3092\u8fd4\u3059\"getHero\"\n- \u65b0\u3057\u3044\u30d2\u30fc\u30ed\u30fc\u3092\u4f5c\u6210\u3059\u308b\"create\"\n- \u30d2\u30fc\u30ed\u30fc\u3092\u524a\u9664\u3059\u308b\"delete\"\n- \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3059\u308b\u30d2\u30fc\u30ed\u30fc\u3092\u691c\u7d22\u3059\u308b\"search\"\n\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3068\u540c\u3058\u304f\u3001\u30d2\u30fc\u30ed\u30fc\u9054\u306e\u30c7\u30fc\u30bf\u3092\u5909\u6570\u306b\u683c\u7d0d\u3057\u307e\u3057\u305f\u3002\n\n```java:HeroController.java\npackage com.example.controller;\n\nimport com.example.model.Hero;\nimport org.springframework.http.MediaType;\nimport org.springframework.web.bind.annotation.*;\n\nimport java.util.*;\nimport java.util.function.Function;\nimport java.util.stream.Collectors;\n\n@RestController\npublic class HeroController {\n\n    /**\n     * hero list\n     */\n    private  List<Hero> heroes;\n\n    /**\n     *  angular tutorial\n     *  reference app/in-memory-data.services.ts\n     */\n    public HeroController() {\n        this.heroes = new ArrayList<>();\n        heroes.add(new Hero(11, \"Mr. Nice\"));\n        heroes.add(new Hero(12, \"Narco\"));\n        heroes.add(new Hero(13, \"Bombasto\"));\n        heroes.add(new Hero(14, \"Celeritas\"));\n        heroes.add(new Hero(15, \"Magneta\"));\n        heroes.add(new Hero(16, \"RubberMan\"));\n        heroes.add(new Hero(17, \"Dynama\"));\n        heroes.add(new Hero(18, \"Dr IQ\"));\n        heroes.add(new Hero(19, \"Magma\"));\n        heroes.add(new Hero(20, \"Tornado\"));\n    }\n\n    /**\n     * angular tutorial\n     * reference app/hero.service.ts\n     * @param id\n     * @return Hero\n     */\n    @GetMapping(\"/{id}\")\n    public Hero getHero(@PathVariable Integer id) {\n        Map<Integer, Hero> heroMap = heroes.stream().collect(Collectors.toMap(Hero::getId, Function.identity()));\n        Hero hero = heroMap.get(id);\n        return hero;\n    }\n\n    /**\n     * angular tutorial\n     *  reference app/hero.service.ts\n     * @return hero array\n     */\n    @GetMapping(\"/\")\n    public List<Hero> getHeroes() {\n        return heroes;\n    }\n\n    /**\n     * angular tutorial\n     * reference app/hero.service.ts\n     * @param newHero\n     * @return Hero\n     */\n    @PostMapping(value = \"/\", consumes = MediaType.APPLICATION_JSON_VALUE)\n    public Hero create(@RequestBody  Hero newHero) {\n        Optional<Integer> max = heroes.stream().map(hero -> hero.getId()).max(Comparator.naturalOrder());\n        Integer id = max.get() + 1;\n        newHero.setId(id);\n        heroes.add(newHero);\n        return newHero;\n    }\n\n    /**\n     * angular tutorial\n     * reference app/hero.service.ts\n     * @param id\n     */\n    @DeleteMapping(\"/{id}\")\n    public void delete(@PathVariable Integer id) {\n        heroes.remove(heroes.stream().filter(hero -> hero.getId() == id).findFirst().get());\n    }\n\n    /**\n     * angular tutorial\n     * reference app/hero-search.service.ts\n     * @param name\n     * @return selected heroes\n     */\n    @GetMapping(\"/app/heroes\")\n    public List<Hero> search(@RequestParam  String name) {\n        List<Hero> selectedHeroes = heroes.stream()\n                .filter(hero -> hero.getName().toLowerCase().contains(name.toLowerCase()))\n                .collect(Collectors.toList());\n        return selectedHeroes;\n    }\n}\n```\n\n##CORS\u30b5\u30dd\u30fc\u30c8\n\u30d6\u30e9\u30a6\u30b6\u3067Ajax\u901a\u4fe1\u3092\u884c\u3046\u969b\u306b\u306f\u3001\u540c\u4e00\u751f\u6210\u5143\u30dd\u30ea\u30b7\u30fc(Same Origin Policy)\u306b\u3088\u3063\u3066\u81ea\u8eab\u306e\u30ea\u30bd\u30fc\u30b9\u304b\u3089\u4ed6\u306e\u30ea\u30bd\u30fc\u30b9\u3078\u306eHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3068\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3067\u30dd\u30fc\u30c8\u756a\u53f7\u304c\u7570\u306a\u308b\u306e\u3067\u3001\u30d6\u30e9\u30a6\u30b6\u306f\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u304b\u3089REST API\u3092\u516c\u958b\u3059\u308b\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u3067\u3042\u308b\u3068\u5224\u65ad\u3057\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5931\u6557\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306fSpring Framework\u306eCORS Support\u3092\u4f7f\u7528\u3057\u3066\u3001\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n\n```java:WebConfig.java\npackage com.example.config;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.CorsRegistry;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;\n\n@Configuration\n@EnableWebMvc\npublic class WebConfig extends WebMvcConfigurerAdapter {\n    @Override\n    public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(\"/**\")\n                .allowedOrigins(\"http://localhost:3000\")\n                .allowedMethods(\"GET\",\"POST\",\"PUT\", \"DELETE\",\"OPTIONS\")\n                .allowedHeaders(\"Origin\", \"X-Requested-With\", \"Content-Type\", \"Accept\")\n                .allowCredentials(false).maxAge(3600);\n    }\n}\n```\n##\u30ed\u30b0\u51fa\u529b\nAPI\u30b3\u30fc\u30eb\u78ba\u8a8d\u7528\u306e\u30ed\u30b0\u51fa\u529b\u30af\u30e9\u30b9\u3082\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089REST API\u304c\u547c\u3070\u308c\u308b\u3068\u3001[\u30e1\u30bd\u30c3\u30c9\u540d] called.\u3068\u3044\u3046\u30ed\u30b0\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n```java:LogInterceptor.java\npackage com.example.aop;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.springframework.stereotype.Component;\n\n@Aspect\n@Component\n@Slf4j\npublic class LogInterceptor {\n\n    @Around(\"execution(public * com.example.*.HeroController.*(..))\")\n\tpublic Object itemReaderAround(ProceedingJoinPoint joinPoint) throws Throwable {\n\t\tString methodName = joinPoint.getSignature().getName();\n\t\tlog.info(\"[{}] called.\", methodName);\n\t\tObject object = joinPoint.proceed();\n\t\treturn object;\n\t}\n}\n```\n#\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u5074\n\u6b21\u306fAngular\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u30bd\u30fc\u30b9\u306eheroesUrl\u3092REST API\u306eURL\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```ts:hero.service.ts\nimport { Injectable }    from '@angular/core';\nimport { Headers, Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { Hero } from './hero';\n@Injectable()\nexport class HeroService {\n  private headers = new Headers({'Content-Type': 'application/json'});\n//  private heroesUrl = 'api/heroes';  // URL to web api <=\u3053\u3053\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n  private heroesUrl = 'http://localhost:8080';  // <=\u3053\u3053\u3092\u8ffd\u52a0\n  constructor(private http: Http) { }\n  getHeroes(): Promise<Hero[]> {\n    return this.http.get(this.heroesUrl)\n      .toPromise()\n      .then(response => response.json() as Hero[])\n\n      .catch(this.handleError);\n  }\n  getHero(id: number): Promise<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get(url)\n      .toPromise()\n      .then(response => response.json() as Hero)\n      .catch(this.handleError);\n  }\n```\n\nmock\u304c\u52d5\u4f5c\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001InMemoryWebApiModule.forRoot(InMemoryDataService)\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u307e\u3059\u3002\n\n```ts:app_module.ts\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n//    InMemoryWebApiModule.forRoot(InMemoryDataService),\u3000<=\u3053\u3053\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n    AppRoutingModule\n  ],\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    HeroDetailComponent,\n    HeroesComponent,\n    HeroSearchComponent\n  ],\n  providers: [ HeroService ],\n  bootstrap: [ AppComponent ]\n})\n```\n\nHero Search\u306e\u65b9\u3082REST API\u306eURL\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n```ts:hero-search.service.ts\nimport { Injectable }     from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { Hero }           from './hero';\n@Injectable()\nexport class HeroSearchService {\n  constructor(private http: Http) {}\n  search(term: string): Observable<Hero[]> {\n    return this.http\n      //.get(`app/heroes/?name=${term}`)\u3000<=\u3053\u3053\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n      .get(`http://localhost:8080/app/heroes/?name=${term}`)\u3000// <=\u3053\u3053\u3092\u8ffd\u52a0\n      .map((r: Response) => r.json() as Hero[]);\n  }\n}\n\n```\n\n#\u5b9f\u884c\u3057\u3066\u307f\u308b\nnpm start\u3057\u3066\u3001Angular\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30a2\u30d7\u30ea\u3092\u64cd\u4f5c\u3057\u3066\u307f\u307e\u3059\u3002\nSpring Boot\u306eAPI\u304c\u547c\u3070\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\n![test.gif](https://qiita-image-store.s3.amazonaws.com/0/143712/c25cae27-fc00-612e-efdd-3e4259fac023.gif)\n\n#\u307e\u3068\u3081\n\u666e\u6bb5\u3001\u4f7f\u7528\u3057\u3066\u3044\u308b\u958b\u767a\u74b0\u5883\u306fSTS(Spring Tool Suite)\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001Angular\u3068Spring\u3092\u9023\u643a\u3059\u308b\u5834\u5408\u306fIntelliJ\u306e\u307b\u3046\u304c\u958b\u767a\u3057\u3084\u3059\u3044\u3067\u3059\u306d\u3002\nAngular\u306eHTTP\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u73fe\u6642\u70b9\u3067\u306f\u307e\u3060EXPERIMENTAL\u306a\u306e\u3067\u3001\u4ed5\u4e8b\u3067\u306fSTABLE\u306b\u306a\u3063\u3066\u304b\u3089\u4f7f\u7528\u3059\u308b\u3068\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n", "tags": ["Angular2", "Java", "spring", "spring-boot", "JavaScript"]}