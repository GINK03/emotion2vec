{"context": "\u5b9f\u88c5\u306b\u969b\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\u30b3\u30f3\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u306f\uff1f\u3068\u8a00\u3046\u65b9\u306f\u3001\u3053\u3061\u3089\u3092\u898b\u3066\u304b\u3089\u304c\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nhttp://qiita.com/HIkaruSato/items/66e7857435bbcd4f75f9\n\nComplication\u3068\u306f\nAppleWatch\u3067\u6642\u9593\u3092\u8868\u793a\u3057\u3066\u308b\u6642\u3001\u53f3\u4e0b\u3068\u304b\u306b\u8868\u793a\u3055\u308c\u3066\u3001\u76f4\u3050\u306b\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3067\u304d\u308b\u3042\u308c\u3067\u3059\u3002\u3053\u3053\u304b\u3089\u81ea\u5206\u306e\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u3088\u3046\u3082\u306e\u306a\u3089\u3001\u304d\u3063\u3068\u5973\u5b50\u306b\u3082\u30e2\u30c6\u30e2\u30c6\u3067\u3059\u3002\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u261d\ufe0e\u3053\u308c\u306d\n\n\u76ee\u7684\uff1aComplicationController\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u5897\u3084\u3057\u305f\u3044\n\u6d77\u5916\u306e\u30b5\u30a4\u30c8\u3082\u542b\u3081\u3066\u30b5\u30f3\u30d7\u30eb\u304c\u5c11\u306a\u304b\u3063\u305f\uff08\u30b3\u30f3\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5f04\u3063\u3066\u3044\u308b\u4eba\u304c\u305d\u3082\u305d\u3082\u5c11\u306a\u3044\uff09\u306e\u3067\u3001\u5c11\u3057\u30bd\u30fc\u30b9\u3092\u516c\u958b\u3002\u30b3\u30e1\u30f3\u30c8\u3067\u89e3\u8aac\u3057\u3066\u3044\u304f\u30b9\u30bf\u30a4\u30eb\u3067\n\u4ee5\u4e0b\u30b5\u30f3\u30d7\u30eb\n\nComplicationController.swift\n\nimport Foundation\nimport ClockKit\n\nclass ComplicationController: NSObject, CLKComplicationDataSource {\n\n    //complication.family\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u304c\u843d\u3061\u3066\u304f\u308b\n    //TARGET -> WatchKit Extension -> General -> Conplications Configuration\u3067\u30c1\u30a7\u30c3\u30af\u3064\u3051\u305f\u5974\u304c\u843d\u3061\u3066\u304f\u308b\n    //\u4eca\u56de\u306fConfiguration\u3067\u30c1\u30a7\u30c3\u30af\u3092\u4ed8\u3051\u3066\u3044\u306a\u3044\u3082\u306e\u306fnil\u3067\u8fd4\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u308b\n    func getCurrentTimelineEntryForComplication(complication: CLKComplication, withHandler handler: (CLKComplicationTimelineEntry?) -> Void) {\n\n        //Complication\u306eTemplate \u3053\u308c\u3092\u95a2\u6570\u306e\u6700\u5f8c\u306ehandler\u306b\u63b4\u307e\u305b\u308b\n        var template: CLKComplicationTemplate?\n\n        //\u4ed6\u306e\u4f8b\u306b\u306a\u3089\u3063\u3066switch\u306b\n        switch complication.family {\n        case .ModularSmall:\n            //\u3053\u3063\u3061\u306f\u5c0f\u6587\u5b57\u304c\u30a4\u30b1\u308b\n            let modularSmallTemp = CLKComplicationTemplateModularSmallSimpleText()\n            modularSmallTemp.textProvider = CLKSimpleTextProvider(text: \"Test\")\n            template = modularSmallTemp\n        case .UtilitarianSmall:\n            //\u3053\u3063\u3061\u306f\u5927\u6587\u5b57\u306b\u7d71\u4e00\u3055\u308c\u308b\u3063\u307d\u3044\n            let modularSmallTempFlat = CLKComplicationTemplateUtilitarianSmallFlat()\n            modularSmallTempFlat.textProvider = CLKSimpleTextProvider(text: \"Test\")\n            template = modularSmallTempFlat\n        case .CircularSmall:\n            //\u753b\u50cf\u3092\u51fa\u3059\u3068\u304d\u306f\u3053\u3093\u306a\u611f\u3058\n            let modularTemplate = CLKComplicationTemplateCircularSmallRingImage()\n            modularTemplate.imageProvider = CLKImageProvider(onePieceImage: UIImage(named: \"32pxImage\")!)\n            //\u30d1\u30fc\u30bb\u30f3\u30c8\u8868\u793a\u3092\u5916\u6bbb\u306e\u5186\u3067\u8868\u793a\u3057\u305f\u3044\u6642\n            //modularTemplate.fillFraction = 0.0\n            //modularTemplate.ringStyle = .Closed\n            template = modularTemplate\n        case .ModularLarge:\n            template = nil\n        case .UtilitarianLarge:\n            template = nil\n        }\n        //\u30bf\u30a4\u30e0\u30c8\u30e9\u30d9\u30eb\u6a5f\u80fd\uff08\u3044\u3089\u306a\u3044\uff09\u3092\u4f7f\u3046\u6642\u306a\u3069\u306fdate\u3092\u4f7f\u3046\u3088\u3046\u3067\u3059\u304c\u4eca\u56de\u306fNSDate()\u3067\u5927\u4e08\u592b\u305d\u3046\u3067\u3059\n        let timelineEntry = CLKComplicationTimelineEntry(date: NSDate(), complicationTemplate: template!)\n        handler(timelineEntry)\n\n    }\n    //\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u753b\u9762\u306e\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u306e\u8a2d\u5b9a\n    //\u307b\u3068\u3093\u3069\u672c\u756a\u3068\u4e00\u7dd2\n    func getPlaceholderTemplateForComplication(complication: CLKComplication, withHandler handler: (CLKComplicationTemplate?) -> Void) {\n        var template: CLKComplicationTemplate?\n\n        switch complication.family {\n        case .ModularSmall:\n            let modularSmallTemp = CLKComplicationTemplateModularSmallSimpleText()\n            modularSmallTemp.textProvider = CLKSimpleTextProvider(text: \"Test\")\n            template = modularSmallTemp\n        case .UtilitarianSmall:\n            let modularSmallTempFlat = CLKComplicationTemplateUtilitarianSmallFlat()\n            modularSmallTempFlat.textProvider = CLKSimpleTextProvider(text: \"Test\")\n            template = modularSmallTempFlat\n        case .CircularSmall:\n            let modularTemplate = CLKComplicationTemplateCircularSmallRingImage()\n            modularTemplate.imageProvider = CLKImageProvider(onePieceImage: UIImage(named: \"32pxImage\")!)\n            template = modularTemplate\n        case .ModularLarge:\n            template = nil\n        case .UtilitarianLarge:\n            template = nil\n        }\n\n        //\u6700\u5f8c\u306bhandler\u306b\u6301\u305f\u305b\u308b\u306e\u306ftemplate\u306b\u306a\u308b\n        handler(template)\n    }\n}\n\n\n\u4e0a\u8a18\u306e\u4f8b\u3060\u3068\u3001\u6642\u9593\u306e\u8868\u793a\u3068\u304b\u5168\u304f\u3057\u306a\u3044\u306e\u3067\u3001\u3076\u3063\u3061\u3083\u3051\u5be9\u67fb\u901a\u308b\u304b\u306f\u77e5\u308a\u307e\u305b\u3093\uff08\u304a\u3044\n\u4ed6\u306b\u3082\u30bf\u30a4\u30e0\u30c8\u30e9\u30d9\u30eb\u6a5f\u80fd\uff08\u3044\u3089\u306a\u3044\uff09\u3084\u3001\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u3078\u914d\u616e\u3057\u305f\u60c5\u5831\u306e\u8868\u793a\u306e\u6709\u7121\u306e\u8a2d\u5b9a\u306a\u3069\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u4e0a\u8a18\u306e\u3042\u305f\u308a\u3092\u66f8\u3044\u3066\u304a\u3051\u3070\u3001\u30b3\u30f3\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u753b\u9762\u306b\u81ea\u5206\u304c\u8a2d\u5b9a\u3057\u305f\u5024\u304c\u3068\u308a\u3042\u3048\u305a\u51fa\u3066\u304d\u307e\u3059\u306e\u3067\u3001\u30c6\u30f3\u30b7\u30e7\u30f3\u304c\u4e0a\u304c\u308b\u3053\u3068\u8acb\u3051\u5408\u3044\u3067\u3059\u3002\n\u5b9f\u88c5\u306b\u969b\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\u30b3\u30f3\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3068\u306f\uff1f\u3068\u8a00\u3046\u65b9\u306f\u3001\u3053\u3061\u3089\u3092\u898b\u3066\u304b\u3089\u304c\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nhttp://qiita.com/HIkaruSato/items/66e7857435bbcd4f75f9\n\n# Complication\u3068\u306f\n\nAppleWatch\u3067\u6642\u9593\u3092\u8868\u793a\u3057\u3066\u308b\u6642\u3001\u53f3\u4e0b\u3068\u304b\u306b\u8868\u793a\u3055\u308c\u3066\u3001\u76f4\u3050\u306b\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3067\u304d\u308b\u3042\u308c\u3067\u3059\u3002\u3053\u3053\u304b\u3089\u81ea\u5206\u306e\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u3088\u3046\u3082\u306e\u306a\u3089\u3001\u304d\u3063\u3068\u5973\u5b50\u306b\u3082\u30e2\u30c6\u30e2\u30c6\u3067\u3059\u3002\n\n![Simulator Screen Shot 21 Jun 2015, 2.35.41 PM.png](https://qiita-image-store.s3.amazonaws.com/0/78088/d25ed6e2-0f4b-630b-a942-b40c7dd79d7a.png)\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u261d\ufe0e\u3053\u308c\u306d\n# \u76ee\u7684\uff1aComplicationController\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u5897\u3084\u3057\u305f\u3044\n\u6d77\u5916\u306e\u30b5\u30a4\u30c8\u3082\u542b\u3081\u3066\u30b5\u30f3\u30d7\u30eb\u304c\u5c11\u306a\u304b\u3063\u305f\uff08\u30b3\u30f3\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5f04\u3063\u3066\u3044\u308b\u4eba\u304c\u305d\u3082\u305d\u3082\u5c11\u306a\u3044\uff09\u306e\u3067\u3001\u5c11\u3057\u30bd\u30fc\u30b9\u3092\u516c\u958b\u3002\u30b3\u30e1\u30f3\u30c8\u3067\u89e3\u8aac\u3057\u3066\u3044\u304f\u30b9\u30bf\u30a4\u30eb\u3067\n\n\u4ee5\u4e0b\u30b5\u30f3\u30d7\u30eb\n\n```swift:ComplicationController.swift\n\nimport Foundation\nimport ClockKit\n\nclass ComplicationController: NSObject, CLKComplicationDataSource {\n\n\t//complication.family\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u8a2d\u5b9a\u3057\u305f\u3082\u306e\u304c\u843d\u3061\u3066\u304f\u308b\n\t//TARGET -> WatchKit Extension -> General -> Conplications Configuration\u3067\u30c1\u30a7\u30c3\u30af\u3064\u3051\u305f\u5974\u304c\u843d\u3061\u3066\u304f\u308b\n\t//\u4eca\u56de\u306fConfiguration\u3067\u30c1\u30a7\u30c3\u30af\u3092\u4ed8\u3051\u3066\u3044\u306a\u3044\u3082\u306e\u306fnil\u3067\u8fd4\u3059\u3088\u3046\u306b\u3057\u3066\u3044\u308b\n\tfunc getCurrentTimelineEntryForComplication(complication: CLKComplication, withHandler handler: (CLKComplicationTimelineEntry?) -> Void) {\n\t\t\n\t\t//Complication\u306eTemplate \u3053\u308c\u3092\u95a2\u6570\u306e\u6700\u5f8c\u306ehandler\u306b\u63b4\u307e\u305b\u308b\n\t\tvar template: CLKComplicationTemplate?\n\t\t\n\t\t//\u4ed6\u306e\u4f8b\u306b\u306a\u3089\u3063\u3066switch\u306b\n\t\tswitch complication.family {\n\t\tcase .ModularSmall:\n\t\t\t//\u3053\u3063\u3061\u306f\u5c0f\u6587\u5b57\u304c\u30a4\u30b1\u308b\n\t\t\tlet modularSmallTemp = CLKComplicationTemplateModularSmallSimpleText()\n\t\t\tmodularSmallTemp.textProvider = CLKSimpleTextProvider(text: \"Test\")\n\t\t\ttemplate = modularSmallTemp\n\t\tcase .UtilitarianSmall:\n\t\t\t//\u3053\u3063\u3061\u306f\u5927\u6587\u5b57\u306b\u7d71\u4e00\u3055\u308c\u308b\u3063\u307d\u3044\n\t\t\tlet modularSmallTempFlat = CLKComplicationTemplateUtilitarianSmallFlat()\n\t\t\tmodularSmallTempFlat.textProvider = CLKSimpleTextProvider(text: \"Test\")\n\t\t\ttemplate = modularSmallTempFlat\n\t\tcase .CircularSmall:\n\t\t\t//\u753b\u50cf\u3092\u51fa\u3059\u3068\u304d\u306f\u3053\u3093\u306a\u611f\u3058\n\t\t\tlet modularTemplate = CLKComplicationTemplateCircularSmallRingImage()\n\t\t\tmodularTemplate.imageProvider = CLKImageProvider(onePieceImage: UIImage(named: \"32pxImage\")!)\n\t\t\t//\u30d1\u30fc\u30bb\u30f3\u30c8\u8868\u793a\u3092\u5916\u6bbb\u306e\u5186\u3067\u8868\u793a\u3057\u305f\u3044\u6642\n\t\t\t//modularTemplate.fillFraction = 0.0\n\t\t\t//modularTemplate.ringStyle = .Closed\n\t\t\ttemplate = modularTemplate\n\t\tcase .ModularLarge:\n\t\t\ttemplate = nil\n\t\tcase .UtilitarianLarge:\n\t\t\ttemplate = nil\n\t\t}\n\t\t//\u30bf\u30a4\u30e0\u30c8\u30e9\u30d9\u30eb\u6a5f\u80fd\uff08\u3044\u3089\u306a\u3044\uff09\u3092\u4f7f\u3046\u6642\u306a\u3069\u306fdate\u3092\u4f7f\u3046\u3088\u3046\u3067\u3059\u304c\u4eca\u56de\u306fNSDate()\u3067\u5927\u4e08\u592b\u305d\u3046\u3067\u3059\n\t\tlet timelineEntry = CLKComplicationTimelineEntry(date: NSDate(), complicationTemplate: template!)\n\t\thandler(timelineEntry)\n\t\t\n\t}\n\t//\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u753b\u9762\u306e\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u306e\u8a2d\u5b9a\n\t//\u307b\u3068\u3093\u3069\u672c\u756a\u3068\u4e00\u7dd2\n\tfunc getPlaceholderTemplateForComplication(complication: CLKComplication, withHandler handler: (CLKComplicationTemplate?) -> Void) {\n\t\tvar template: CLKComplicationTemplate?\n\t\t\n\t\tswitch complication.family {\n\t\tcase .ModularSmall:\n\t\t\tlet modularSmallTemp = CLKComplicationTemplateModularSmallSimpleText()\n\t\t\tmodularSmallTemp.textProvider = CLKSimpleTextProvider(text: \"Test\")\n\t\t\ttemplate = modularSmallTemp\n\t\tcase .UtilitarianSmall:\n\t\t\tlet modularSmallTempFlat = CLKComplicationTemplateUtilitarianSmallFlat()\n\t\t\tmodularSmallTempFlat.textProvider = CLKSimpleTextProvider(text: \"Test\")\n\t\t\ttemplate = modularSmallTempFlat\n\t\tcase .CircularSmall:\n\t\t\tlet modularTemplate = CLKComplicationTemplateCircularSmallRingImage()\n\t\t\tmodularTemplate.imageProvider = CLKImageProvider(onePieceImage: UIImage(named: \"32pxImage\")!)\n\t\t\ttemplate = modularTemplate\n\t\tcase .ModularLarge:\n\t\t\ttemplate = nil\n\t\tcase .UtilitarianLarge:\n\t\t\ttemplate = nil\n\t\t}\n\n\t\t//\u6700\u5f8c\u306bhandler\u306b\u6301\u305f\u305b\u308b\u306e\u306ftemplate\u306b\u306a\u308b\n\t\thandler(template)\n\t}\n}\n```\n\n\n\u4e0a\u8a18\u306e\u4f8b\u3060\u3068\u3001\u6642\u9593\u306e\u8868\u793a\u3068\u304b\u5168\u304f\u3057\u306a\u3044\u306e\u3067\u3001\u3076\u3063\u3061\u3083\u3051\u5be9\u67fb\u901a\u308b\u304b\u306f\u77e5\u308a\u307e\u305b\u3093\uff08\u304a\u3044\n\u4ed6\u306b\u3082\u30bf\u30a4\u30e0\u30c8\u30e9\u30d9\u30eb\u6a5f\u80fd~~\uff08\u3044\u3089\u306a\u3044\uff09~~\u3084\u3001\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u3078\u914d\u616e\u3057\u305f\u60c5\u5831\u306e\u8868\u793a\u306e\u6709\u7121\u306e\u8a2d\u5b9a\u306a\u3069\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u4e0a\u8a18\u306e\u3042\u305f\u308a\u3092\u66f8\u3044\u3066\u304a\u3051\u3070\u3001\u30b3\u30f3\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u753b\u9762\u306b\u81ea\u5206\u304c\u8a2d\u5b9a\u3057\u305f\u5024\u304c\u3068\u308a\u3042\u3048\u305a\u51fa\u3066\u304d\u307e\u3059\u306e\u3067\u3001\u30c6\u30f3\u30b7\u30e7\u30f3\u304c\u4e0a\u304c\u308b\u3053\u3068\u8acb\u3051\u5408\u3044\u3067\u3059\u3002\n", "tags": ["Swift2.0", "AppleWatch", "Swift", "iOS", "WatchKit"]}