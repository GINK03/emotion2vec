{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\n\u7d4c\u7def\n\u524d\u56de\u306e\u8a18\u4e8b\u300cTypeScript, React, Sass, webpack, gulp\u5c0e\u5165\u8a18 - \u30e2\u30c0\u30f3\u306a\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9Web\u958b\u767a\u306b\u6311\u6226\u3057\u305f\u8a71\u300d\u3067\u3001\u30d3\u30e5\u30fc\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066React\u3092\u7528\u3044\u307e\u3057\u305f\u304c\u3001Vue.js\u306b\u3064\u3044\u3066\u3082\u691c\u8a3c\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u3001TypeScript\u4e0a\u3067Vue.js\u3092\u5229\u7528\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u7b46\u8005\u306e\u74b0\u5883\n\nWindows 10 Pro 64\u30d3\u30c3\u30c8\nIntelliJ IDEA 15.0 \uff08\u7121\u304f\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\uff09\n\n\n\u5404\u7a2e\u30c4\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u524d\u56de\u306e\u8a18\u4e8b\u3068\u540c\u3058\u3067\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\n\u524d\u56de\u306e\u8a18\u4e8b\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u307f\u7570\u306a\u308a\u307e\u3059\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u306fhello-vuejs\u3068\u306a\u308a\u307e\u3059\u3002\n\npackage.json\u306e\u4f5c\u6210\n\u524d\u56de\u306e\u8a18\u4e8b\u3068\u540c\u3058\u3067\u3059\u3002\n\n\u30d3\u30eb\u30c9\u7528\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u524d\u56de\u306e\u8a18\u4e8b\u3068\u540c\u3058\u3067\u3059\u3002\n\nIntellJ IDEA\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\u524d\u56de\u306e\u8a18\u4e8b\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u307f\u7570\u306a\u308a\u307e\u3059\u3002\n\n[File]-[Settings]\u3067\u8a2d\u5b9a\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u958b\u304d\u307e\u3059\u3002\n\n\n[Language & Frameworks > TypeScript]\u3092\u958b\u304d\u307e\u3059\u3002\n\n\n[Command line options]\u306b--module commonjs --experimentalDecorators\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\n\n\n\n\n\n\u6700\u4f4e\u9650\u5fc5\u8981\u306a\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n\nsrc/index.html\n<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link href=\"css/common.css\" rel=\"stylesheet\" type=\"text/css\">\n    <script src=\"js/bundle.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n<div id=\"content\">\n    <router-view></router-view>\n</div>\n</body>\n</html>\n\n\n\nsrc/js/main.ts\n// \u3068\u308a\u3042\u3048\u305a\u7a7a\u3067\u826f\u3044\n\n\n\ntslint.json\u306e\u4f5c\u6210\n\u524d\u56de\u306e\u8a18\u4e8b\u3068\u540c\u3058\u3067\u3059\u3002\n\ngulpfile.js\u306e\u4f5c\u6210\u3068gulp\u306e\u5b9f\u884c\n\u524d\u56de\u306e\u8a18\u4e8b\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u307f\u7570\u306a\u308a\u307e\u3059\u3002\ngulpfile.js\u306e\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\ngulpfile.js\nvar gulp = require('gulp');\nvar ts = require('gulp-typescript');\nvar sass = require('gulp-sass');\nvar del = require('del');\nvar webpack = require('gulp-webpack');\n\ngulp.task('clean', function() {\n    del(['dist']);\n    del(['build']);\n});\n\ngulp.task('copy', function() {\n    gulp.src(\n        [ 'src/**/*', '!src/js/*', '!src/css/*' ],\n        { base: 'src' }\n    ).pipe(gulp.dest('dist'));\n});\n\ngulp.task('ts', function() {\n    return gulp.src(['src/js/*.{ts,tsx}'])\n        .pipe(ts({\n            target: \"ES5\",\n            module: \"commonjs\",\n            experimentalDecorators: true\n        }))\n        .js\n        .pipe(gulp.dest('build/js'));\n});\n\ngulp.task('bundle', ['ts'], function() {\n    gulp.src('./build/js/*.js')\n        .pipe(webpack({\n            entry: ['./build/js/main.js'],\n            output: {\n                filename: 'bundle.js',\n                library: 'app'\n            },\n            devtool: 'source-map',\n            resolve: {\n                extensions: ['', '.js']\n            },\n        }))\n        .pipe(gulp.dest('dist/js'));\n});\n\ngulp.task('scss', function() {\n    gulp.src(['src/css/*.scss'])\n        .pipe(sass())\n        .pipe(gulp.dest('dist/css'));\n});\n\ngulp.task('watch', function() {\n    gulp.watch(['src/**/*', '!src/js/*', '!src/css/*'], ['copy']);\n    gulp.watch('src/js/*.{ts,tsx}', ['bundle']);\n    gulp.watch('src/css/*.scss', ['scss']);\n});\n\ngulp.task('default', ['copy', 'bundle', 'scss', 'watch']);\n\n\n\n\u5b9f\u88c5\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u6982\u8981\n\u30c0\u30df\u30fc\u306eRESTful API\u3067\u3042\u308bJSONPlaceholder\u306e/posts\u306b\u63a5\u7d9a\u3057\u3001CRUD\u64cd\u4f5c\u3092\u884c\u3044\u307e\u3059\u3002\n\u5b9f\u88c5\u3059\u308b\u30af\u30e9\u30b9\u306e\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u53d6\u5f97\n>npm install jquery vue vue-class-component vue-router --save\n\n--save\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308a\u3001\u914d\u5099\u3059\u308bNode\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3001package.json\u306b\u8a18\u9332\u3055\u308c\u307e\u3059\u3002\n\n\u578b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\n>typings init\n>typings install jquery --ambient --save\n>typings install vue --ambient --save\n>typings install vue-router --ambient --save\n\n--ambient\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308aDefinitelyTyped\u304b\u3089\u3001\u578b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u304c\u691c\u7d22\u3055\u308c\u307e\u3059\u3002\n--save\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308a\u3001\u53d6\u5f97\u3057\u305f\u578b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u304c\u3001typings.json\u306b\u8a18\u8f09\u3055\u308c\u307e\u3059\u3002\n\u306a\u304a\u3001typings.json\u306b\u8a18\u9332\u3055\u308c\u305f\u578b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u3092\u6539\u3081\u3066\u53d6\u5f97\u3057\u305f\u3044\u3068\u304d\u306f\u3001\u4ee5\u4e0b\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n>typings install\n\n\n\u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5b9f\u88c5\n\nsrc/js/typebone.ts\n/// <reference path=\"../../typings/browser.d.ts\" />\n\nimport * as $ from 'jquery';\n\nexport interface ICollectionListener<T> {\n    onUpdateCollection: (sender: Collection<T>) => void;\n}\n\nexport class Collection<T> {\n    private models: T[];\n    private url: string;\n    private idAttribute: string;\n    private listeners: ICollectionListener<T>[];\n    constructor(url: string) {\n        this.url = url;\n        this.idAttribute = 'id';\n        this.listeners = [];\n    }\n    public addListener(listener: ICollectionListener<T>): void {\n        this.listeners.push(listener);\n    }\n    public removeListener(listener: ICollectionListener<T>): void {\n        let index: number = this.listeners.indexOf(listener);\n        if (index >= 0) {\n            this.listeners.splice(index, 1);\n        }\n    }\n    public get(): T[] {\n        return this.models;\n    }\n    public add(item: T): JQueryPromise<any> {\n        let d: JQueryDeferred<any> = $.Deferred();\n        $.ajax({\n            url: this.url,\n            dataType: 'json',\n            type: 'post',\n            data: item,\n            success: (data: any): void => {\n                if (!(this.idAttribute in data)) {\n                    console.log('response body must contain id attribute.');\n                }\n                this.models.push(data);\n                d.resolve();\n                for (let i: number = 0; i < this.listeners.length; ++i) {\n                    this.listeners[i].onUpdateCollection(this);\n                }\n            },\n            error: (xhr: JQueryXHR, status: string, err: string): void => {\n                d.reject(xhr, status, err);\n            },\n        });\n        return d.promise();\n    }\n    public fetch(): JQueryPromise<any> {\n        let d: JQueryDeferred<any> = $.Deferred();\n        $.ajax({\n            url: this.url,\n            dataType: 'json',\n            cache: false,\n            success: function(data: any): void {\n                this.models = data;\n                d.resolve();\n                for (let i: number = 0; i < this.listeners.length; ++i) {\n                    this.listeners[i].onUpdateCollection(this);\n                }\n            }.bind(this),\n            error: function(xhr: JQueryXHR, status: string, err: string): void {\n                d.reject(xhr, status, err);\n            }.bind(this),\n        });\n        return d.promise();\n    }\n    public set(item: T): JQueryPromise<any> {\n        let d: JQueryDeferred<any> = $.Deferred();\n        let id: string = item[this.idAttribute];\n        $.ajax({\n            url: this.url + '/' + id,\n            dataType: 'json',\n            type: 'put',\n            data: item,\n            success: (data: any): void => {\n                for (let i: number = 0; i < this.models.length; ++i) {\n                    if (this.models[i][this.idAttribute].toString() === id) {\n                        this.models[i] = item;\n                        break;\n                    }\n                }\n                d.resolve();\n                for (let i: number = 0; i < this.listeners.length; ++i) {\n                    this.listeners[i].onUpdateCollection(this);\n                }\n            },\n            error: (xhr: JQueryXHR, status: string, err: string): void => {\n                d.reject(xhr, status, err);\n            },\n        });\n        return d.promise();\n    }\n    public remove(id: string): JQueryPromise<any> {\n        let d: JQueryDeferred<any> = $.Deferred();\n        $.ajax({\n            url: this.url + '/' + id,\n            dataType: 'json',\n            type: 'delete',\n            success: (data: any): void => {\n                for (let i: number = 0; i < this.models.length; ++i) {\n                    if (this.models[i][this.idAttribute].toString() === id) {\n                        this.models.splice(i, 1);\n                        break;\n                    }\n                }\n                d.resolve();\n                for (let i: number = 0; i < this.listeners.length; ++i) {\n                    this.listeners[i].onUpdateCollection(this);\n                }\n            },\n            error: (xhr: JQueryXHR, status: string, err: string): void => {\n                d.reject(xhr, status, err);\n            },\n        });\n        return d.promise();\n    }\n}\n\n\n\n\u30e1\u30a4\u30f3\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5b9f\u88c5\n\nsrc/js/main.ts\n/// <reference path=\"../../typings/browser.d.ts\" />\n/// <reference path=\"../../node_modules/vue-class-component/index.d.ts\" />\n/// <reference path=\"typebone.ts\" />\n\nimport * as Vue from 'vue';\nimport * as VueRouter from 'vue-router';\nimport VueComponent from 'vue-class-component';\nimport * as $ from 'jquery';\nimport * as Typebone from './typebone';\n\nclass AppModel {\n    public collection: Typebone.Collection<IPostItem> = new Typebone.Collection<IPostItem>('http://jsonplaceholder.typicode.com/posts');\n}\n\nlet appModel: AppModel = new AppModel();\n\ninterface IPostItem {\n    userId: number;\n    id: number;\n    title: string;\n    body: string;\n}\n\n@VueComponent({\n    template: `\n        <div class=\"post\">\n            <input type=\"text\" v-model=\"item.title\"/>\n            <input type=\"text\" v-model=\"item.body\"/>\n            <input class=\"update\" type=\"button\" value=\"Update\" v-on:click=\"updatePost(item)\"/>\n            <input class=\"delete\" type=\"button\" value=\"Delete\" v-on:click=\"deletePost(item)\"/>\n        </div>\n    `,\n    props: ['item'],\n})\nclass Post extends Vue {\n    public updatePost(post: IPostItem): void {\n        appModel.collection.set(post).fail(\n            (xhr: JQueryXHR, status: string, err: string) => {\n                console.error(xhr.statusText, status, err);\n            }\n        );\n    }\n    public deletePost(post: IPostItem): void {\n        appModel.collection.remove(post.id.toString()).fail(\n            (xhr: JQueryXHR, status: string, err: string) => {\n                console.error(xhr.statusText, status, err);\n            }\n        );\n    }\n}\n\n@VueComponent({\n    template: `\n        <div class=\"postList\" v-for=\"post in posts\">\n            <post :item=\"post\"></post>\n        </div>\n    `,\n    props: ['posts'],\n})\nclass PostList extends Vue {\n}\n\n@VueComponent({\n    template: `\n        <form class=\"postForm\" v-on:submit.prevent=\"onPostSubmit\">\n            <input type=\"text\" placeholder=\"title\" v-model=\"title\"/>\n            <input type=\"text\" placeholder=\"body\" v-model=\"body\"/>\n            <input type=\"submit\" value=\"Post\"/>\n        </form>\n    `,\n})\nclass PostForm extends Vue {\n    private title: string;\n    private body: string;\n    public data(): any {\n        return {\n            title: '',\n            body: '',\n        };\n    }\n    public onPostSubmit(): void {\n        if (this.title === '' || this.body === '') {\n            return;\n        }\n        this.$dispatch('post-submit', {\n            title: this.title,\n            body: this.body,\n        });\n        this.title = '';\n        this.body = '';\n    }\n}\n\n@VueComponent({\n    template: `\n        <div class=\"postBox\">\n            <h1>Posts</h1>\n            <post-list :posts=\"posts\"></post-list>\n            <post-form v-on:post-submit=\"addPost\"></post-form>\n        </div>\n    `,\n})\nclass PostBox extends Vue implements Typebone.ICollectionListener<IPostItem> {\n    private posts: IPostItem[];\n    public data(): any {\n        return {\n            posts: [],\n        };\n    }\n    public attached(): void {\n        appModel.collection.addListener(this);\n        appModel.collection.fetch().fail(\n            (xhr: JQueryXHR, status: string, err: string) => {\n                console.error(xhr.statusText, status, err);\n            }\n        );\n    }\n    public detached(): void {\n        appModel.collection.removeListener(this);\n    }\n    public addPost(item: IPostItem): void {\n        appModel.collection.add(item).fail(\n            (xhr: JQueryXHR, status: string, err: string) => {\n                console.error(xhr.statusText, status, err);\n            }\n        );\n    }\n    public onUpdateCollection(sender: Typebone.Collection<IPostItem>): void {\n        this.posts = appModel.collection.get();\n    }\n}\n\n@VueComponent({})\nclass App extends Vue {\n}\n\nVue.component('post', Post);\nVue.component('post-list', PostList);\nVue.component('post-form', PostForm);\nVue.use(VueRouter);\nlet router: any = new VueRouter();\nrouter.map({\n    '/': {\n        component: PostBox,\n    },\n});\n\n$(function() {\n    router.start(App, '#content');\n});\n\n\n\nSCSS\u306e\u5b9f\u88c5\n\ncss/common.scss\n$primary-color: #111188;\n$background-color: #eeeeee;\n\nbody {\n    color: $primary-color;\n    background-color: $background-color;\n}\n\n\n\n\u6539\u3081\u3066\u30d3\u30eb\u30c9\n>gulp clean\n>gulp\n\n\u4ee5\u4e0a\u3067\u3001dist/index.html\u3092\u95b2\u89a7\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u306a\u304a\u3001\u30c0\u30df\u30fc\u306eRESTful API\u3092\u7528\u3044\u3066\u3044\u308b\u305f\u3081\u3001\u671f\u5f85\u901a\u308a\u306b\u52d5\u4f5c\u3057\u306a\u3044\u6a5f\u80fd\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u3068\u3081\nReact\u306e\u6642\u3068\u540c\u69d8\u3001Vue.js\u3092TypeScript\u304b\u3089\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u306f\u5404\u7a2e\u60c5\u5831\u3092\u8abf\u67fb\u305b\u306d\u3070\u306a\u3089\u305a\u3001\u30cf\u30fc\u30c9\u30eb\u304c\u9ad8\u304f\u601d\u308f\u308c\u307e\u3057\u305f\u3002\u305f\u3060\u3001\u4e00\u5ea6\u5c0e\u5165\u3092\u3057\u3066\u3057\u307e\u3048\u308c\u3070\u3001\u5f8c\u306f\u5feb\u9069\u306bTypeScript\u306b\u3088\u308b\u9759\u7684\u578b\u4ed8\u3051\u3092\u6d3b\u304b\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n# \u306f\u3058\u3081\u306b\n\n## \u7d4c\u7def\n\n[\u524d\u56de\u306e\u8a18\u4e8b\u300cTypeScript, React, Sass, webpack, gulp\u5c0e\u5165\u8a18 - \u30e2\u30c0\u30f3\u306a\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9Web\u958b\u767a\u306b\u6311\u6226\u3057\u305f\u8a71\u300d](http://qiita.com/data9824/items/9c943049f78ab707d974)\u3067\u3001\u30d3\u30e5\u30fc\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066React\u3092\u7528\u3044\u307e\u3057\u305f\u304c\u3001Vue.js\u306b\u3064\u3044\u3066\u3082\u691c\u8a3c\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u3001TypeScript\u4e0a\u3067Vue.js\u3092\u5229\u7528\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u7b46\u8005\u306e\u74b0\u5883\n\n* Windows 10 Pro 64\u30d3\u30c3\u30c8\n* IntelliJ IDEA 15.0 \uff08\u7121\u304f\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\uff09\n\n# \u5404\u7a2e\u30c4\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/data9824/items/9c943049f78ab707d974)\u3068\u540c\u3058\u3067\u3059\u3002\n\n# \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\n\n[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/data9824/items/9c943049f78ab707d974)\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u307f\u7570\u306a\u308a\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u306f`hello-vuejs`\u3068\u306a\u308a\u307e\u3059\u3002\n\n## package.json\u306e\u4f5c\u6210\n\n[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/data9824/items/9c943049f78ab707d974)\u3068\u540c\u3058\u3067\u3059\u3002\n\n## \u30d3\u30eb\u30c9\u7528\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/data9824/items/9c943049f78ab707d974)\u3068\u540c\u3058\u3067\u3059\u3002\n\n## IntellJ IDEA\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\n[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/data9824/items/9c943049f78ab707d974)\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u307f\u7570\u306a\u308a\u307e\u3059\u3002\n\n* [File]-[Settings]\u3067\u8a2d\u5b9a\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u958b\u304d\u307e\u3059\u3002\n    * [Language & Frameworks > TypeScript]\u3092\u958b\u304d\u307e\u3059\u3002\n        * [Command line options]\u306b`--module commonjs --experimentalDecorators`\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\n## \u6700\u4f4e\u9650\u5fc5\u8981\u306a\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n\n```html:src/index.html\n<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link href=\"css/common.css\" rel=\"stylesheet\" type=\"text/css\">\n    <script src=\"js/bundle.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n<div id=\"content\">\n    <router-view></router-view>\n</div>\n</body>\n</html>\n```\n\n```ts:src/js/main.ts\n// \u3068\u308a\u3042\u3048\u305a\u7a7a\u3067\u826f\u3044\n```\n\n## tslint.json\u306e\u4f5c\u6210\n\n[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/data9824/items/9c943049f78ab707d974)\u3068\u540c\u3058\u3067\u3059\u3002\n\n## gulpfile.js\u306e\u4f5c\u6210\u3068gulp\u306e\u5b9f\u884c\n\n[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/data9824/items/9c943049f78ab707d974)\u304b\u3089\u3001\u4ee5\u4e0b\u306e\u307f\u7570\u306a\u308a\u307e\u3059\u3002\n\n`gulpfile.js`\u306e\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```js:gulpfile.js\nvar gulp = require('gulp');\nvar ts = require('gulp-typescript');\nvar sass = require('gulp-sass');\nvar del = require('del');\nvar webpack = require('gulp-webpack');\n\ngulp.task('clean', function() {\n\tdel(['dist']);\n\tdel(['build']);\n});\n\ngulp.task('copy', function() {\n\tgulp.src(\n\t\t[ 'src/**/*', '!src/js/*', '!src/css/*' ],\n\t\t{ base: 'src' }\n\t).pipe(gulp.dest('dist'));\n});\n\ngulp.task('ts', function() {\n\treturn gulp.src(['src/js/*.{ts,tsx}'])\n\t\t.pipe(ts({\n\t\t\ttarget: \"ES5\",\n\t\t\tmodule: \"commonjs\",\n\t\t\texperimentalDecorators: true\n\t\t}))\n\t\t.js\n\t\t.pipe(gulp.dest('build/js'));\n});\n\ngulp.task('bundle', ['ts'], function() {\n\tgulp.src('./build/js/*.js')\n\t\t.pipe(webpack({\n\t\t\tentry: ['./build/js/main.js'],\n\t\t\toutput: {\n\t\t\t\tfilename: 'bundle.js',\n\t\t\t\tlibrary: 'app'\n\t\t\t},\n\t\t\tdevtool: 'source-map',\n\t\t\tresolve: {\n\t\t\t\textensions: ['', '.js']\n\t\t\t},\n\t\t}))\n\t\t.pipe(gulp.dest('dist/js'));\n});\n\ngulp.task('scss', function() {\n\tgulp.src(['src/css/*.scss'])\n\t\t.pipe(sass())\n\t\t.pipe(gulp.dest('dist/css'));\n});\n\ngulp.task('watch', function() {\n\tgulp.watch(['src/**/*', '!src/js/*', '!src/css/*'], ['copy']);\n\tgulp.watch('src/js/*.{ts,tsx}', ['bundle']);\n\tgulp.watch('src/css/*.scss', ['scss']);\n});\n\ngulp.task('default', ['copy', 'bundle', 'scss', 'watch']);\n```\n\n# \u5b9f\u88c5\n\n\n## \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u6982\u8981\n\n\u30c0\u30df\u30fc\u306eRESTful API\u3067\u3042\u308b[JSONPlaceholder](http://jsonplaceholder.typicode.com/)\u306e`/posts`\u306b\u63a5\u7d9a\u3057\u3001CRUD\u64cd\u4f5c\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u5b9f\u88c5\u3059\u308b\u30af\u30e9\u30b9\u306e\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n![hello-vuejs.png](https://qiita-image-store.s3.amazonaws.com/0/12670/93ab5758-ba9c-1e75-ec84-b3ef185a6c4b.png)\n\n## \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u53d6\u5f97\n\n```\n>npm install jquery vue vue-class-component vue-router --save\n```\n\n`--save`\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308a\u3001\u914d\u5099\u3059\u308bNode\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3001`package.json`\u306b\u8a18\u9332\u3055\u308c\u307e\u3059\u3002\n\n## \u578b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u306e\u53d6\u5f97\n\n```\n>typings init\n>typings install jquery --ambient --save\n>typings install vue --ambient --save\n>typings install vue-router --ambient --save\n```\n\n`--ambient`\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308a[DefinitelyTyped](http://definitelytyped.org/)\u304b\u3089\u3001\u578b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u304c\u691c\u7d22\u3055\u308c\u307e\u3059\u3002\n\n`--save`\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308a\u3001\u53d6\u5f97\u3057\u305f\u578b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u304c\u3001`typings.json`\u306b\u8a18\u8f09\u3055\u308c\u307e\u3059\u3002\n\n\u306a\u304a\u3001`typings.json`\u306b\u8a18\u9332\u3055\u308c\u305f\u578b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u3092\u6539\u3081\u3066\u53d6\u5f97\u3057\u305f\u3044\u3068\u304d\u306f\u3001\u4ee5\u4e0b\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n```\n>typings install\n```\n\n## \u30b5\u30d6\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5b9f\u88c5\n\n```ts:src/js/typebone.ts\n/// <reference path=\"../../typings/browser.d.ts\" />\n\nimport * as $ from 'jquery';\n\nexport interface ICollectionListener<T> {\n\tonUpdateCollection: (sender: Collection<T>) => void;\n}\n\nexport class Collection<T> {\n\tprivate models: T[];\n\tprivate url: string;\n\tprivate idAttribute: string;\n\tprivate listeners: ICollectionListener<T>[];\n\tconstructor(url: string) {\n\t\tthis.url = url;\n\t\tthis.idAttribute = 'id';\n\t\tthis.listeners = [];\n\t}\n\tpublic addListener(listener: ICollectionListener<T>): void {\n\t\tthis.listeners.push(listener);\n\t}\n\tpublic removeListener(listener: ICollectionListener<T>): void {\n\t\tlet index: number = this.listeners.indexOf(listener);\n\t\tif (index >= 0) {\n\t\t\tthis.listeners.splice(index, 1);\n\t\t}\n\t}\n\tpublic get(): T[] {\n\t\treturn this.models;\n\t}\n\tpublic add(item: T): JQueryPromise<any> {\n\t\tlet d: JQueryDeferred<any> = $.Deferred();\n\t\t$.ajax({\n\t\t\turl: this.url,\n\t\t\tdataType: 'json',\n\t\t\ttype: 'post',\n\t\t\tdata: item,\n\t\t\tsuccess: (data: any): void => {\n\t\t\t\tif (!(this.idAttribute in data)) {\n\t\t\t\t\tconsole.log('response body must contain id attribute.');\n\t\t\t\t}\n\t\t\t\tthis.models.push(data);\n\t\t\t\td.resolve();\n\t\t\t\tfor (let i: number = 0; i < this.listeners.length; ++i) {\n\t\t\t\t\tthis.listeners[i].onUpdateCollection(this);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: (xhr: JQueryXHR, status: string, err: string): void => {\n\t\t\t\td.reject(xhr, status, err);\n\t\t\t},\n\t\t});\n\t\treturn d.promise();\n\t}\n\tpublic fetch(): JQueryPromise<any> {\n\t\tlet d: JQueryDeferred<any> = $.Deferred();\n\t\t$.ajax({\n\t\t\turl: this.url,\n\t\t\tdataType: 'json',\n\t\t\tcache: false,\n\t\t\tsuccess: function(data: any): void {\n\t\t\t\tthis.models = data;\n\t\t\t\td.resolve();\n\t\t\t\tfor (let i: number = 0; i < this.listeners.length; ++i) {\n\t\t\t\t\tthis.listeners[i].onUpdateCollection(this);\n\t\t\t\t}\n\t\t\t}.bind(this),\n\t\t\terror: function(xhr: JQueryXHR, status: string, err: string): void {\n\t\t\t\td.reject(xhr, status, err);\n\t\t\t}.bind(this),\n\t\t});\n\t\treturn d.promise();\n\t}\n\tpublic set(item: T): JQueryPromise<any> {\n\t\tlet d: JQueryDeferred<any> = $.Deferred();\n\t\tlet id: string = item[this.idAttribute];\n\t\t$.ajax({\n\t\t\turl: this.url + '/' + id,\n\t\t\tdataType: 'json',\n\t\t\ttype: 'put',\n\t\t\tdata: item,\n\t\t\tsuccess: (data: any): void => {\n\t\t\t\tfor (let i: number = 0; i < this.models.length; ++i) {\n\t\t\t\t\tif (this.models[i][this.idAttribute].toString() === id) {\n\t\t\t\t\t\tthis.models[i] = item;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\td.resolve();\n\t\t\t\tfor (let i: number = 0; i < this.listeners.length; ++i) {\n\t\t\t\t\tthis.listeners[i].onUpdateCollection(this);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: (xhr: JQueryXHR, status: string, err: string): void => {\n\t\t\t\td.reject(xhr, status, err);\n\t\t\t},\n\t\t});\n\t\treturn d.promise();\n\t}\n\tpublic remove(id: string): JQueryPromise<any> {\n\t\tlet d: JQueryDeferred<any> = $.Deferred();\n\t\t$.ajax({\n\t\t\turl: this.url + '/' + id,\n\t\t\tdataType: 'json',\n\t\t\ttype: 'delete',\n\t\t\tsuccess: (data: any): void => {\n\t\t\t\tfor (let i: number = 0; i < this.models.length; ++i) {\n\t\t\t\t\tif (this.models[i][this.idAttribute].toString() === id) {\n\t\t\t\t\t\tthis.models.splice(i, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\td.resolve();\n\t\t\t\tfor (let i: number = 0; i < this.listeners.length; ++i) {\n\t\t\t\t\tthis.listeners[i].onUpdateCollection(this);\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: (xhr: JQueryXHR, status: string, err: string): void => {\n\t\t\t\td.reject(xhr, status, err);\n\t\t\t},\n\t\t});\n\t\treturn d.promise();\n\t}\n}\n```\n\n## \u30e1\u30a4\u30f3\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5b9f\u88c5\n\n```ts:src/js/main.ts\n/// <reference path=\"../../typings/browser.d.ts\" />\n/// <reference path=\"../../node_modules/vue-class-component/index.d.ts\" />\n/// <reference path=\"typebone.ts\" />\n\nimport * as Vue from 'vue';\nimport * as VueRouter from 'vue-router';\nimport VueComponent from 'vue-class-component';\nimport * as $ from 'jquery';\nimport * as Typebone from './typebone';\n\nclass AppModel {\n\tpublic collection: Typebone.Collection<IPostItem> = new Typebone.Collection<IPostItem>('http://jsonplaceholder.typicode.com/posts');\n}\n\nlet appModel: AppModel = new AppModel();\n\ninterface IPostItem {\n\tuserId: number;\n\tid: number;\n\ttitle: string;\n\tbody: string;\n}\n\n@VueComponent({\n\ttemplate: `\n\t\t<div class=\"post\">\n\t\t\t<input type=\"text\" v-model=\"item.title\"/>\n\t\t\t<input type=\"text\" v-model=\"item.body\"/>\n\t\t\t<input class=\"update\" type=\"button\" value=\"Update\" v-on:click=\"updatePost(item)\"/>\n\t\t\t<input class=\"delete\" type=\"button\" value=\"Delete\" v-on:click=\"deletePost(item)\"/>\n\t\t</div>\n\t`,\n\tprops: ['item'],\n})\nclass Post extends Vue {\n\tpublic updatePost(post: IPostItem): void {\n\t\tappModel.collection.set(post).fail(\n\t\t\t(xhr: JQueryXHR, status: string, err: string) => {\n\t\t\t\tconsole.error(xhr.statusText, status, err);\n\t\t\t}\n\t\t);\n\t}\n\tpublic deletePost(post: IPostItem): void {\n\t\tappModel.collection.remove(post.id.toString()).fail(\n\t\t\t(xhr: JQueryXHR, status: string, err: string) => {\n\t\t\t\tconsole.error(xhr.statusText, status, err);\n\t\t\t}\n\t\t);\n\t}\n}\n\n@VueComponent({\n\ttemplate: `\n\t\t<div class=\"postList\" v-for=\"post in posts\">\n\t\t\t<post :item=\"post\"></post>\n\t\t</div>\n\t`,\n\tprops: ['posts'],\n})\nclass PostList extends Vue {\n}\n\n@VueComponent({\n\ttemplate: `\n\t\t<form class=\"postForm\" v-on:submit.prevent=\"onPostSubmit\">\n\t\t\t<input type=\"text\" placeholder=\"title\" v-model=\"title\"/>\n\t\t\t<input type=\"text\" placeholder=\"body\" v-model=\"body\"/>\n\t\t\t<input type=\"submit\" value=\"Post\"/>\n\t\t</form>\n\t`,\n})\nclass PostForm extends Vue {\n\tprivate title: string;\n\tprivate body: string;\n\tpublic data(): any {\n\t\treturn {\n\t\t\ttitle: '',\n\t\t\tbody: '',\n\t\t};\n\t}\n\tpublic onPostSubmit(): void {\n\t\tif (this.title === '' || this.body === '') {\n\t\t\treturn;\n\t\t}\n\t\tthis.$dispatch('post-submit', {\n\t\t\ttitle: this.title,\n\t\t\tbody: this.body,\n\t\t});\n\t\tthis.title = '';\n\t\tthis.body = '';\n\t}\n}\n\n@VueComponent({\n\ttemplate: `\n\t\t<div class=\"postBox\">\n\t\t\t<h1>Posts</h1>\n\t\t\t<post-list :posts=\"posts\"></post-list>\n\t\t\t<post-form v-on:post-submit=\"addPost\"></post-form>\n\t\t</div>\n\t`,\n})\nclass PostBox extends Vue implements Typebone.ICollectionListener<IPostItem> {\n\tprivate posts: IPostItem[];\n\tpublic data(): any {\n\t\treturn {\n\t\t\tposts: [],\n\t\t};\n\t}\n\tpublic attached(): void {\n\t\tappModel.collection.addListener(this);\n\t\tappModel.collection.fetch().fail(\n\t\t\t(xhr: JQueryXHR, status: string, err: string) => {\n\t\t\t\tconsole.error(xhr.statusText, status, err);\n\t\t\t}\n\t\t);\n\t}\n\tpublic detached(): void {\n\t\tappModel.collection.removeListener(this);\n\t}\n\tpublic addPost(item: IPostItem): void {\n\t\tappModel.collection.add(item).fail(\n\t\t\t(xhr: JQueryXHR, status: string, err: string) => {\n\t\t\t\tconsole.error(xhr.statusText, status, err);\n\t\t\t}\n\t\t);\n\t}\n\tpublic onUpdateCollection(sender: Typebone.Collection<IPostItem>): void {\n\t\tthis.posts = appModel.collection.get();\n\t}\n}\n\n@VueComponent({})\nclass App extends Vue {\n}\n\nVue.component('post', Post);\nVue.component('post-list', PostList);\nVue.component('post-form', PostForm);\nVue.use(VueRouter);\nlet router: any = new VueRouter();\nrouter.map({\n\t'/': {\n\t\tcomponent: PostBox,\n\t},\n});\n\n$(function() {\n\trouter.start(App, '#content');\n});\n```\n\n## SCSS\u306e\u5b9f\u88c5\n\n```scss:css/common.scss\n$primary-color: #111188;\n$background-color: #eeeeee;\n\nbody {\n\tcolor: $primary-color;\n\tbackground-color: $background-color;\n}\n```\n\n## \u6539\u3081\u3066\u30d3\u30eb\u30c9\n\n```\n>gulp clean\n>gulp\n```\n\n\u4ee5\u4e0a\u3067\u3001`dist/index.html`\u3092\u95b2\u89a7\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u306a\u304a\u3001\u30c0\u30df\u30fc\u306eRESTful API\u3092\u7528\u3044\u3066\u3044\u308b\u305f\u3081\u3001\u671f\u5f85\u901a\u308a\u306b\u52d5\u4f5c\u3057\u306a\u3044\u6a5f\u80fd\u3082\u3042\u308a\u307e\u3059\u3002\n\n# \u307e\u3068\u3081\n\nReact\u306e\u6642\u3068\u540c\u69d8\u3001Vue.js\u3092TypeScript\u304b\u3089\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u306f\u5404\u7a2e\u60c5\u5831\u3092\u8abf\u67fb\u305b\u306d\u3070\u306a\u3089\u305a\u3001\u30cf\u30fc\u30c9\u30eb\u304c\u9ad8\u304f\u601d\u308f\u308c\u307e\u3057\u305f\u3002\u305f\u3060\u3001\u4e00\u5ea6\u5c0e\u5165\u3092\u3057\u3066\u3057\u307e\u3048\u308c\u3070\u3001\u5f8c\u306f\u5feb\u9069\u306bTypeScript\u306b\u3088\u308b\u9759\u7684\u578b\u4ed8\u3051\u3092\u6d3b\u304b\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n", "tags": ["TypeScript", "vue.js"]}