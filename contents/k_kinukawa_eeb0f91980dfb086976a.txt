{"context": " More than 1 year has passed since last update.UItextView\u3067\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u65b9\u6cd5\u3002\n\u6614\u304b\u3089\u3084\u308a\u3064\u304f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u5fc5\u8981\u306b\u8feb\u3089\u308c\u305f\u306e\u3067 @himara2 \u5148\u8f29\u304c\u904e\u53bb\u306b\u66f8\u3044\u305f\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3001Swift\u304b\u3064IBInspectable\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\nimport UIKit\n\nclass UIPlaceHolderTextView: UITextView {\n\n    lazy var placeHolderLabel: UILabel = UILabel()\n    @IBInspectable var placeHolderColor: UIColor = UIColor.lightGrayColor()\n    @IBInspectable var placeHolder: String = \"\"\n\n    required init?(coder aDecoder: NSCoder) {\n        super.init(coder: aDecoder)\n    }\n\n    override init(frame: CGRect, textContainer: NSTextContainer?) {\n        super.init(frame: frame, textContainer: textContainer)\n        NSNotificationCenter.defaultCenter().addObserver(self, selector: \"textChanged:\", name: UITextViewTextDidChangeNotification, object: self)\n    }\n\n    override func awakeFromNib() {\n        super.awakeFromNib()\n        NSNotificationCenter.defaultCenter().addObserver(self, selector: \"textChanged:\", name: UITextViewTextDidChangeNotification, object: self)\n    }\n\n    deinit {\n        NSNotificationCenter.defaultCenter().removeObserver(self)\n    }\n\n    override func drawRect(rect: CGRect) {\n\n        if(self.placeHolder.characters.count > 0) {\n            self.placeHolderLabel.frame           = CGRectMake(4,8,self.bounds.size.width - 16,0)\n            self.placeHolderLabel.lineBreakMode   = NSLineBreakMode.ByWordWrapping\n            self.placeHolderLabel.numberOfLines   = 0\n            self.placeHolderLabel.font            = self.font\n            self.placeHolderLabel.backgroundColor = UIColor.clearColor()\n            self.placeHolderLabel.textColor       = self.placeHolderColor\n            self.placeHolderLabel.alpha           = 0\n            self.placeHolderLabel.tag             = 999\n\n            self.placeHolderLabel.text = self.placeHolder\n            self.placeHolderLabel.sizeToFit()\n            self.addSubview(placeHolderLabel)\n        }\n\n        self.sendSubviewToBack(placeHolderLabel)\n\n        if self.text.characters.count == 0 && self.placeHolder.characters.count > 0 {\n            self.viewWithTag(999)?.alpha = 1\n        }\n\n        super.drawRect(rect)\n    }\n\n    func textChanged(notification: NSNotification?) {\n        if self.placeHolder.characters.count == 0 {\n            return\n        }\n\n        if self.text.characters.count == 0 {\n            self.viewWithTag(999)?.alpha = 1.0\n        } else {\n            self.viewWithTag(999)?.alpha = 0.0\n        }\n    }\n}\n\nStoryboard\u4e0a\u3067UITextView\u3092\u914d\u7f6e\u3057\u3001\u30af\u30e9\u30b9\u3092UIPlaceHolderTextView\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n\u5909\u66f4\u3059\u308b\u3068\u3001Place HolderColor\u3068PlaceHolder\u306e\u5024\u3092InterfaceBuilder\u304b\u3089\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4fbf\u5229\u3067\u3059\u306d\u3002\n\n\u4e00\u70b9\u3001\u81ea\u5206\u306e\u74b0\u5883\u3067\u306fBackgroundColor\u3092Clear\u306b\u3057\u306a\u3044\u3068TextView\u306e\u80cc\u666f\u304c\u9ed2\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u3001IB\u4e0a\u3067ClearColor\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\nUItextView\u3067\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u65b9\u6cd5\u3002\n\u6614\u304b\u3089\u3084\u308a\u3064\u304f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u5fc5\u8981\u306b\u8feb\u3089\u308c\u305f\u306e\u3067 @himara2 \u5148\u8f29\u304c\u904e\u53bb\u306b\u66f8\u3044\u305f[\u8a18\u4e8b](http://himaratsu.hatenablog.com/entry/objc/placeholderview)\u3092\u53c2\u8003\u306b\u3001Swift\u304b\u3064IBInspectable\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```swift\nimport UIKit\n\nclass UIPlaceHolderTextView: UITextView {\n    \n    lazy var placeHolderLabel: UILabel = UILabel()\n    @IBInspectable var placeHolderColor: UIColor = UIColor.lightGrayColor()\n    @IBInspectable var placeHolder: String = \"\"\n    \n    required init?(coder aDecoder: NSCoder) {\n        super.init(coder: aDecoder)\n    }\n    \n    override init(frame: CGRect, textContainer: NSTextContainer?) {\n        super.init(frame: frame, textContainer: textContainer)\n        NSNotificationCenter.defaultCenter().addObserver(self, selector: \"textChanged:\", name: UITextViewTextDidChangeNotification, object: self)\n    }\n    \n    override func awakeFromNib() {\n        super.awakeFromNib()\n        NSNotificationCenter.defaultCenter().addObserver(self, selector: \"textChanged:\", name: UITextViewTextDidChangeNotification, object: self)\n    }\n    \n    deinit {\n        NSNotificationCenter.defaultCenter().removeObserver(self)\n    }\n\n    override func drawRect(rect: CGRect) {\n        \n        if(self.placeHolder.characters.count > 0) {\n            self.placeHolderLabel.frame           = CGRectMake(4,8,self.bounds.size.width - 16,0)\n            self.placeHolderLabel.lineBreakMode   = NSLineBreakMode.ByWordWrapping\n            self.placeHolderLabel.numberOfLines   = 0\n            self.placeHolderLabel.font            = self.font\n            self.placeHolderLabel.backgroundColor = UIColor.clearColor()\n            self.placeHolderLabel.textColor       = self.placeHolderColor\n            self.placeHolderLabel.alpha           = 0\n            self.placeHolderLabel.tag             = 999\n            \n            self.placeHolderLabel.text = self.placeHolder\n            self.placeHolderLabel.sizeToFit()\n            self.addSubview(placeHolderLabel)\n        }\n        \n        self.sendSubviewToBack(placeHolderLabel)\n        \n        if self.text.characters.count == 0 && self.placeHolder.characters.count > 0 {\n            self.viewWithTag(999)?.alpha = 1\n        }\n        \n        super.drawRect(rect)\n    }\n    \n    func textChanged(notification: NSNotification?) {\n        if self.placeHolder.characters.count == 0 {\n            return\n        }\n        \n        if self.text.characters.count == 0 {\n            self.viewWithTag(999)?.alpha = 1.0\n        } else {\n            self.viewWithTag(999)?.alpha = 0.0\n        }\n    }\n}\n```\n\nStoryboard\u4e0a\u3067UITextView\u3092\u914d\u7f6e\u3057\u3001\u30af\u30e9\u30b9\u3092UIPlaceHolderTextView\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n<img width=\"890\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-28 15.01.01.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/8748/bfed93a7-b69c-f4c9-560a-9f3c3544ea65.png\">\n\n\u5909\u66f4\u3059\u308b\u3068\u3001Place HolderColor\u3068PlaceHolder\u306e\u5024\u3092InterfaceBuilder\u304b\u3089\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4fbf\u5229\u3067\u3059\u306d\u3002\n<img width=\"899\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-28 15.01.36.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/8748/33271eb8-a811-2de7-ecaf-780961416401.png\">\n\n\u4e00\u70b9\u3001\u81ea\u5206\u306e\u74b0\u5883\u3067\u306fBackgroundColor\u3092Clear\u306b\u3057\u306a\u3044\u3068TextView\u306e\u80cc\u666f\u304c\u9ed2\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u3001IB\u4e0a\u3067ClearColor\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n", "tags": ["Swift2.0", "IBInspectable"]}