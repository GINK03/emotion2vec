{"context": " More than 1 year has passed since last update.\u524d\u56de boost::numeric::interval<int>(0): C++ Boost \u533a\u9593\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea \u6982\u8981 \u306e\u7d9a\u304d\u3067\u3059\u3002\u4eca\u65e5\u306f\u533a\u9593\u306e\u56db\u5247\u6f14\u7b97\u3068\u3001\u3088\u304f\u4f7f\u3046\u4fbf\u5229\u306a\u95a2\u6570\u306b\u3064\u3044\u3066\u7c21\u5358\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u533a\u9593\u540c\u58eb\u306e\u56db\u5247\u6f14\u7b97\n\u524d\u56de\u3001\u533a\u9593\u6f14\u7b97\u306b\u304a\u3051\u308b\u91cd\u8981\u306a\u30b3\u30f3\u30bb\u30d7\u30c8\u3068\u52a0\u6cd5\u306e\u4f8b\u3092\u65e2\u306b\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u4ed6\u306e\u56db\u5247\u6f14\u7b97\u306b\u3064\u3044\u3066\u3082\u57fa\u672c\u7684\u306b\u540c\u69d8\u3067\u3059\u3002\u6d6e\u52d5\u5c0f\u6570\u70b9\u8aa4\u5dee\u307e\u3067\u8003\u616e\u3057\u305f\u4e0a\u3067\u533a\u9593\u306e\u6570\u5168\u3066\u306b\u5bfe\u3059\u308b\u6f14\u7b97\u7d50\u679c\u3092\u5168\u3066\u542b\u3080\u3088\u3046\u306a\u533a\u9593\u3092\u8a08\u7b97\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\n\ntest-interval-arith-IRxIR.cpp\n#include <iostream>\n#include <boost/numeric/interval.hpp>\n#include <boost/numeric/interval/io.hpp>\n\nint main () {\n    typedef double R;\n    typedef boost::numeric::interval<R> IR;\n    using std::cout;\n    using std::endl;\n    const IR a(1.0, 2.0);\n    const IR b(3.0, 4.0);\n    cout << \"a = \" << a << endl;\n    cout << \"b = \" << b << endl;\n    cout << \"a + b = \" << a + b << endl;\n    cout << \"a - b = \" << a - b << endl;\n    cout << \"a * b = \" << a * b << endl;\n    cout << \"a / b = \" << a / b << endl;\n    return 0;\n}\n\n\n\u307e\u305f\u3001\u5de6\u8fba\u5024\u306b\u5bfe\u3057\u3066\u56db\u5247\u6f14\u7b97\u3092\u76f4\u63a5\u884c\u3046\u6f14\u7b97\u5b50 +=, -=, *=, /= \u3082\u3042\u308a\u307e\u3059\u3002\nRemark. \u4e00\u822c\u306b\u3001\u533a\u9593\u306e\u4e8c\u9805\u6f14\u7b97 + \u3068 - \u306f\u3001\u4e92\u3044\u306b\u9006\u6f14\u7b97\u306e\u95a2\u4fc2\u306b\u306f \u306a\u3063\u3066\u3044\u307e\u305b\u3093 \u3002\u3053\u308c\u306f\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\u306e\u5834\u5408\u306b\u9650\u308a\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001\u5143\u3005\u8aa4\u5dee\u304c\u306a\u304f\u3001+ \u3068 - \u304c\u4e92\u3044\u306b\u9006\u6f14\u7b97\u306e\u95a2\u4fc2\u306b\u3042\u308b int \u3092\u30d9\u30fc\u30b9\u306e\u578b\u3068\u3059\u308b\u533a\u9593\u578b interval<int> \u306e\u5834\u5408\u3092\u8003\u3048\u3066\u3082\u3001[1, 2] - [1, 2] \u306f [0, 0] \u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002* \u3068 / \u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3001\u4e00\u822c\u306b\u306f\u533a\u9593\u6f14\u7b97\u3092\u7e70\u308a\u8fd4\u3059\u3053\u3067\u533a\u9593\u306f\u3069\u3093\u3069\u3093\u5927\u304d\u304f\u306a\u3063\u3066\u3044\u304d\u307e\u3059\u3002\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\u306e\u5834\u5408\u306b\u306f\u3001\u533a\u9593\u578b\u3092\u8003\u3048\u308b\u3053\u3068\u3067\u3001\u5143\u3005\u9006\u6f14\u7b97\u306e\u95a2\u4fc2\u306b\u306a\u304b\u3063\u305f\u56db\u5247\u6f14\u7b97\u306e\u3082\u3064\u300c\u8aa4\u5dee\u300d\u3068\u3044\u3046\u6027\u8cea\u304c\u3088\u308a\u9855\u8457\u306b\u306a\u3063\u305f\u3068\u3082\u3044\u3048\u308b\u3067\u3057\u3087\u3046\u3002\n\n\u533a\u9593\u3068\u6570\u306e\u56db\u5247\u6f14\u7b97\n\u56db\u5247\u6f14\u7b97\u306e\u5f15\u6570\u306e\u7247\u65b9\u306f\u3001\u30d9\u30fc\u30b9\u306e\u578b T \u306e\u5024\u3067\u4e0e\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u305d\u3046\u3057\u305f\u5834\u5408\u3001\u307e\u305a\u5f15\u6570\u3092 interval<T> \u306b\u5909\u63db\u3057\u3066\u6f14\u7b97\u3092\u884c\u3063\u305f\u306e\u3068\u540c\u3058\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\uff08\u3053\u308c\u306f\u4ee5\u964d\u51fa\u3066\u304f\u308b\u4ed6\u306e\u95a2\u6570\u306b\u3064\u3044\u3066\u3082\u304a\u3088\u305d\u540c\u69d8\u3067\u3059\uff09\u3002\nRemark. interval<T> \u306b\u306f\u3001\u4e0b\u7aef\u3068\u4e0a\u7aef\u306e 2 \u5f15\u6570\u3092\u3068\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u4ee5\u5916\u306b\u3082\u3001\u30d9\u30fc\u30b9\u306e\u578b T \u306e\u5024 x \u3092\u3068\u3063\u3066\u4e00\u70b9\u533a\u9593 [x, x] \u3092\u4f5c\u308b 1 \u5f15\u6570\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u3042\u308a\u307e\u3059\u3002\n\ntest-interval-arith-IRxR.cpp\n#include <iostream>\n#include <boost/numeric/interval.hpp>\n#include <boost/numeric/interval/io.hpp>\n\nint main () {\n    typedef double R;\n    typedef boost::numeric::interval<R> IR;\n    using std::cout;\n    using std::endl;\n    const IR a(1.0, 2.0);\n    const R b = 3.0;\n    cout << \"a = \" << a << endl;\n    cout << \"b = \" << b << endl;\n    cout << \"a + b = \" << a + b << endl;\n    cout << \"a - b = \" << a - b << endl;\n    cout << \"a * b = \" << a * b << endl;\n    cout << \"a / b = \" << a / b << endl;\n    return 0;\n}\n\n\n\n\u6570\u540c\u58eb\u306e\u56db\u5247\u6f14\u7b97\n\u3067\u306f\u3001\u4e21\u65b9\u306e\u5f15\u6570\u3092\u30d9\u30fc\u30b9\u306e\u578b\u3067\u4e0e\u3048\u3066\u56db\u5247\u3092\u884c\u3046\u306b\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u3048\uff1f\uff1f\u305d\u306e\u307e\u307e float \u3084 double \u306e built-in operator \u3092\u4f7f\u3048\u3070\u3044\u3044\u3058\u3083\u306a\u3044\uff1f\uff1f\u30c0\u30e1\u30c0\u30e1\uff01\u30c0\u30e1\u3067\u3059\u3088\uff01\uff01\u305d\u308c\u3067\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u8aa4\u5dee\u304c\u751f\u3058\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u3093\u306a\u6642\u306b\u306f boost::numeric::interval_lib \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u95a2\u6570 add, sub, mul, div \u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3001\u30d9\u30fc\u30b9\u306e\u578b T \u306e\u5024\u3092 2 \u3064\u5f15\u6570\u306b\u3068\u3063\u3066\u3001\u56db\u5247\u6f14\u7b97\u306e\u5207\u308a\u6368\u3066\u30fb\u5207\u308a\u4e0a\u3052\u3092\u305d\u308c\u305e\u308c\u4e0b\u7aef\u30fb\u4e0a\u7aef\u3068\u3059\u308b\u3088\u3046\u306a interval<T> \u578b\u306e\u533a\u9593\u3092\u8a08\u7b97\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\n\ntest-interval-arith-RxR.cpp\n#include <iostream>\n#include <boost/numeric/interval.hpp>\n#include <boost/numeric/interval/io.hpp>\n\nint main () {\n    typedef double R;\n    typedef boost::numeric::interval<R> IR;\n    using std::cout;\n    using std::endl;\n    const R a = 1.7;\n    const R b = 3.3;\n    cout << \"a = \" << a << endl;\n    cout << \"b = \" << b << endl;\n    {\n        using namespace boost::numeric::interval_lib;\n        cout << \"a + b = \" << add<IR>(a, b) << \"w(\" << width(add<IR>(a, b)) << \")\" << endl;\n        cout << \"a - b = \" << sub<IR>(a, b) << \"w(\" << width(sub<IR>(a, b)) << \")\" << endl;\n        cout << \"a * b = \" << mul<IR>(a, b) << \"w(\" << width(mul<IR>(a, b)) << \")\" << endl;\n        cout << \"a / b = \" << div<IR>(a, b) << \"w(\" << width(div<IR>(a, b)) << \")\" << endl;\n    }\n    return 0;\n}\n\n\n\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u6b63\u3057\u304f\u533a\u9593\u6f14\u7b97\u304c\u884c\u308f\u308c\u308c\u3070\u3001\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u3001 width \u306f\u533a\u9593\u306e\u5e45\u3001\u3064\u307e\u308a\u4e0a\u7aef\u3068\u4e0b\u7aef\u306e\u5dee\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\u6d6e\u52d5\u5c0f\u6570\u70b9\u6f14\u7b97\u306b\u3088\u308b\u6d6e\u52d5\u5c0f\u6570\u70b9\u8aa4\u5dee\u304c\u975e\u96f6\u306e\u533a\u9593\u5e45\u3068\u3057\u3066\u8868\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u898b\u3066\u3068\u308c\u307e\u3059\u3002\n\noutput-for-test-interval-arith-RxR.txt\na = 1.7\nb = 3.3\na + b = [5,5]w(8.88178e-16)\na - b = [-1.6,-1.6]w(0)\na * b = [5.61,5.61]w(8.88178e-16)\na / b = [0.515152,0.515152]w(1.11022e-16)\n\n\nRemark. \u3082\u3061\u308d\u3093\u30011 \u5f15\u6570\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u7528\u3044\u3066 IR(1) / IR(9) \u306a\u3069\u3068\u66f8\u3044\u3066\u3082\u540c\u69d8\u306e\u3053\u3068\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u4e00\u70b9\u533a\u9593\u540c\u58eb\u306e\u6f14\u7b97\u3060\u3068\u540c\u3058\u8a08\u7b97\u304c\u4f59\u5206\u306b\u884c\u308f\u308c\u3066\u3057\u307e\u3046\u5206 div<IR>(1, 9) \u306e\u65b9\u304c\u82e5\u5e72\u52b9\u7387\u304c\u3088\u3044\u3067\u3059\u3002\n\n\u4e0b\u7aef\u30fb\u4e0a\u7aef\u30fb\u4e2d\u70b9\u30fb\u30ce\u30eb\u30e0\n\u533a\u9593\u306e\u5e45\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570 width \u306e\u3088\u3046\u306b\u3001interval<T> \u578b\u3067\u4e0e\u3048\u3089\u308c\u305f\u533a\u9593\u306b\u5bfe\u3057\u3066\u306a\u3093\u3089\u304b\u306e\u30d9\u30fc\u30b9\u306e\u578b T \u306e\u5024\u3092\u8fd4\u3059\u95a2\u6570\u3068\u3057\u3066 lower, upper, median, norm \u304c\u3042\u308a\u307e\u3059\u3002\u6700\u521d 3 \u3064\u306f\u6587\u5b57\u901a\u308a\u306e\u610f\u5473\u3067\u3001\u305d\u308c\u305e\u308c\u533a\u9593\u306e\u4e0b\u7aef\u30fb\u4e0a\u7aef\u30fb\u4e2d\u70b9\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002norm \u306f\u3001\u533a\u9593\u304c\u542b\u3080\u6570\u306e\u6700\u5927\u7d76\u5bfe\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u8a33\u8a3b(?). \u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\u300c\u3053\u308c\u306f\u3001\u5b9f\u6570\u306b\u5bfe\u3059\u308b\u7d76\u5bfe\u5024\u306e\u3088\u3046\u306b\u3001\u6570\u5b66\u3067\u3044\u3046\u6240\u306e\u30ce\u30eb\u30e0\u306b\u306a\u3063\u3066\u3044\u308b\u300d\u3068\u3044\u3046\u98a8\u306a\u3053\u3068\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u5148\u306b\u6ce8\u610f\u3057\u305f\u3088\u3046\u306b\u3001\u305d\u3082\u305d\u3082\u533a\u9593\u5168\u4f53\u306e\u70ba\u3059\u7a7a\u9593\u304c\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u533a\u9593\u5168\u4f53\u306e\u96c6\u5408\u304c norm \u306b\u3088\u3063\u3066\u30ce\u30eb\u30e0\u7a7a\u9593\u3092\u70ba\u3059\u8a33\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u307e\u3041\u305d\u3046\u306f\u8a00\u3063\u3066\u3082\u3042\u306a\u304c\u3061\u9593\u9055\u3044\u3067\u3082\u306a\u304f\u3066\u3001\u5b9f\u969b\u3001\u30ce\u30eb\u30e0\u306e\u6e80\u305f\u3059\u3079\u304d\u6027\u8cea\uff08\u4f8b\u3048\u3070\u4e09\u89d2\u4e0d\u7b49\u5f0f\uff09\u306f\u304a\u3088\u305d\u6e80\u305f\u3057\u3066\u3044\u307e\u3059\u3002\u79c1\u306f\u3053\u308c\u3092\u30ce\u30eb\u30e0\u3068\u547c\u3093\u3067\u3044\u308b\u306e\u3092\u4ed6\u3067\u898b\u305f\u3053\u3068\u304c\u306a\u304f\u3066\u3001\u666e\u901a\u306f magnitude \u306a\u3069\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u6700\u5c0f\u7d76\u5bfe\u5024\u306e\u65b9\u306f mignitude \u3068\u547c\u3073\u307e\u3059\u304c\u3001Boost \u306e\u533a\u9593\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u7279\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\n\u4eca\u65e5\u3082\u3053\u3053\u307e\u3067\u3002\u3042\u307e\u308a\u9032\u307e\u306a\u304b\u3063\u305f\u2026 \u6b21\u306f\u533a\u9593\u7279\u6709\u306e\u95a2\u6570\u306b\u89e6\u308c\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3067\u306f\u3067\u306f\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u51fa\u529b\u4f8b: https://gist.github.com/2941941\n\u6b21: http://qiita.com/items/abcf31a7b1787604a4f4\n\u524d\u56de [boost::numeric::interval\\<int\\>(0): C++ Boost \u533a\u9593\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea \u6982\u8981](http://qiita.com/items/7712671389e016d24df6) \u306e\u7d9a\u304d\u3067\u3059\u3002\u4eca\u65e5\u306f\u533a\u9593\u306e\u56db\u5247\u6f14\u7b97\u3068\u3001\u3088\u304f\u4f7f\u3046\u4fbf\u5229\u306a\u95a2\u6570\u306b\u3064\u3044\u3066\u7c21\u5358\u306b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n### \u533a\u9593\u540c\u58eb\u306e\u56db\u5247\u6f14\u7b97\n\n\u524d\u56de\u3001\u533a\u9593\u6f14\u7b97\u306b\u304a\u3051\u308b\u91cd\u8981\u306a\u30b3\u30f3\u30bb\u30d7\u30c8\u3068\u52a0\u6cd5\u306e\u4f8b\u3092\u65e2\u306b\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u4ed6\u306e\u56db\u5247\u6f14\u7b97\u306b\u3064\u3044\u3066\u3082\u57fa\u672c\u7684\u306b\u540c\u69d8\u3067\u3059\u3002\u6d6e\u52d5\u5c0f\u6570\u70b9\u8aa4\u5dee\u307e\u3067\u8003\u616e\u3057\u305f\u4e0a\u3067\u533a\u9593\u306e\u6570\u5168\u3066\u306b\u5bfe\u3059\u308b\u6f14\u7b97\u7d50\u679c\u3092\u5168\u3066\u542b\u3080\u3088\u3046\u306a\u533a\u9593\u3092\u8a08\u7b97\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\n\n```c++:test-interval-arith-IRxIR.cpp\n#include <iostream>\n#include <boost/numeric/interval.hpp>\n#include <boost/numeric/interval/io.hpp>\n\nint main () {\n\ttypedef double R;\n\ttypedef boost::numeric::interval<R> IR;\n\tusing std::cout;\n\tusing std::endl;\n\tconst IR a(1.0, 2.0);\n\tconst IR b(3.0, 4.0);\n\tcout << \"a = \" << a << endl;\n\tcout << \"b = \" << b << endl;\n\tcout << \"a + b = \" << a + b << endl;\n\tcout << \"a - b = \" << a - b << endl;\n\tcout << \"a * b = \" << a * b << endl;\n\tcout << \"a / b = \" << a / b << endl;\n\treturn 0;\n}\n```\n\n\u307e\u305f\u3001\u5de6\u8fba\u5024\u306b\u5bfe\u3057\u3066\u56db\u5247\u6f14\u7b97\u3092\u76f4\u63a5\u884c\u3046\u6f14\u7b97\u5b50 `+=`, `-=`, `*=`, `/=` \u3082\u3042\u308a\u307e\u3059\u3002\n\n__Remark__. \u4e00\u822c\u306b\u3001\u533a\u9593\u306e\u4e8c\u9805\u6f14\u7b97 `+` \u3068 `-` \u306f\u3001\u4e92\u3044\u306b\u9006\u6f14\u7b97\u306e\u95a2\u4fc2\u306b\u306f **\u306a\u3063\u3066\u3044\u307e\u305b\u3093** \u3002\u3053\u308c\u306f\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\u306e\u5834\u5408\u306b\u9650\u308a\u307e\u305b\u3093\u3002\u4f8b\u3048\u3070\u3001\u5143\u3005\u8aa4\u5dee\u304c\u306a\u304f\u3001`+` \u3068 `-` \u304c\u4e92\u3044\u306b\u9006\u6f14\u7b97\u306e\u95a2\u4fc2\u306b\u3042\u308b `int` \u3092\u30d9\u30fc\u30b9\u306e\u578b\u3068\u3059\u308b\u533a\u9593\u578b `interval<int>` \u306e\u5834\u5408\u3092\u8003\u3048\u3066\u3082\u3001[1, 2] - [1, 2] \u306f [0, 0] \u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3002`*` \u3068 `/` \u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3001\u4e00\u822c\u306b\u306f\u533a\u9593\u6f14\u7b97\u3092\u7e70\u308a\u8fd4\u3059\u3053\u3067\u533a\u9593\u306f\u3069\u3093\u3069\u3093\u5927\u304d\u304f\u306a\u3063\u3066\u3044\u304d\u307e\u3059\u3002\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u578b\u306e\u5834\u5408\u306b\u306f\u3001\u533a\u9593\u578b\u3092\u8003\u3048\u308b\u3053\u3068\u3067\u3001\u5143\u3005\u9006\u6f14\u7b97\u306e\u95a2\u4fc2\u306b\u306a\u304b\u3063\u305f\u56db\u5247\u6f14\u7b97\u306e\u3082\u3064\u300c\u8aa4\u5dee\u300d\u3068\u3044\u3046\u6027\u8cea\u304c\u3088\u308a\u9855\u8457\u306b\u306a\u3063\u305f\u3068\u3082\u3044\u3048\u308b\u3067\u3057\u3087\u3046\u3002\n\n### \u533a\u9593\u3068\u6570\u306e\u56db\u5247\u6f14\u7b97\n\n\u56db\u5247\u6f14\u7b97\u306e\u5f15\u6570\u306e\u7247\u65b9\u306f\u3001\u30d9\u30fc\u30b9\u306e\u578b T \u306e\u5024\u3067\u4e0e\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u305d\u3046\u3057\u305f\u5834\u5408\u3001\u307e\u305a\u5f15\u6570\u3092 `interval<T>` \u306b\u5909\u63db\u3057\u3066\u6f14\u7b97\u3092\u884c\u3063\u305f\u306e\u3068\u540c\u3058\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\uff08\u3053\u308c\u306f\u4ee5\u964d\u51fa\u3066\u304f\u308b\u4ed6\u306e\u95a2\u6570\u306b\u3064\u3044\u3066\u3082\u304a\u3088\u305d\u540c\u69d8\u3067\u3059\uff09\u3002\n\n__Remark__. `interval<T>` \u306b\u306f\u3001\u4e0b\u7aef\u3068\u4e0a\u7aef\u306e 2 \u5f15\u6570\u3092\u3068\u308b\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u4ee5\u5916\u306b\u3082\u3001\u30d9\u30fc\u30b9\u306e\u578b T \u306e\u5024 x \u3092\u3068\u3063\u3066\u4e00\u70b9\u533a\u9593 [x, x] \u3092\u4f5c\u308b 1 \u5f15\u6570\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u304c\u3042\u308a\u307e\u3059\u3002\n\n```c++:test-interval-arith-IRxR.cpp\n#include <iostream>\n#include <boost/numeric/interval.hpp>\n#include <boost/numeric/interval/io.hpp>\n\nint main () {\n\ttypedef double R;\n\ttypedef boost::numeric::interval<R> IR;\n\tusing std::cout;\n\tusing std::endl;\n\tconst IR a(1.0, 2.0);\n\tconst R b = 3.0;\n\tcout << \"a = \" << a << endl;\n\tcout << \"b = \" << b << endl;\n\tcout << \"a + b = \" << a + b << endl;\n\tcout << \"a - b = \" << a - b << endl;\n\tcout << \"a * b = \" << a * b << endl;\n\tcout << \"a / b = \" << a / b << endl;\n\treturn 0;\n}\n```\n\n### \u6570\u540c\u58eb\u306e\u56db\u5247\u6f14\u7b97\n\n\u3067\u306f\u3001\u4e21\u65b9\u306e\u5f15\u6570\u3092\u30d9\u30fc\u30b9\u306e\u578b\u3067\u4e0e\u3048\u3066\u56db\u5247\u3092\u884c\u3046\u306b\u306f\u3069\u3046\u3059\u308c\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u3048\uff1f\uff1f\u305d\u306e\u307e\u307e float \u3084 double \u306e built-in operator \u3092\u4f7f\u3048\u3070\u3044\u3044\u3058\u3083\u306a\u3044\uff1f\uff1f\u30c0\u30e1\u30c0\u30e1\uff01\u30c0\u30e1\u3067\u3059\u3088\uff01\uff01\u305d\u308c\u3067\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u8aa4\u5dee\u304c\u751f\u3058\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u3093\u306a\u6642\u306b\u306f `boost::numeric::interval_lib` \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u95a2\u6570 `add`, `sub`, `mul`, `div` \u3092\u4f7f\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u306f\u3001\u30d9\u30fc\u30b9\u306e\u578b T \u306e\u5024\u3092 2 \u3064\u5f15\u6570\u306b\u3068\u3063\u3066\u3001\u56db\u5247\u6f14\u7b97\u306e\u5207\u308a\u6368\u3066\u30fb\u5207\u308a\u4e0a\u3052\u3092\u305d\u308c\u305e\u308c\u4e0b\u7aef\u30fb\u4e0a\u7aef\u3068\u3059\u308b\u3088\u3046\u306a `interval<T>` \u578b\u306e\u533a\u9593\u3092\u8a08\u7b97\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\n\n```c++:test-interval-arith-RxR.cpp\n#include <iostream>\n#include <boost/numeric/interval.hpp>\n#include <boost/numeric/interval/io.hpp>\n\nint main () {\n\ttypedef double R;\n\ttypedef boost::numeric::interval<R> IR;\n\tusing std::cout;\n\tusing std::endl;\n\tconst R a = 1.7;\n\tconst R b = 3.3;\n\tcout << \"a = \" << a << endl;\n\tcout << \"b = \" << b << endl;\n\t{\n\t\tusing namespace boost::numeric::interval_lib;\n\t \tcout << \"a + b = \" << add<IR>(a, b) << \"w(\" << width(add<IR>(a, b)) << \")\" << endl;\n\t\tcout << \"a - b = \" << sub<IR>(a, b) << \"w(\" << width(sub<IR>(a, b)) << \")\" << endl;\n\t\tcout << \"a * b = \" << mul<IR>(a, b) << \"w(\" << width(mul<IR>(a, b)) << \")\" << endl;\n\t\tcout << \"a / b = \" << div<IR>(a, b) << \"w(\" << width(div<IR>(a, b)) << \")\" << endl;\n\t}\n\treturn 0;\n}\n```\n\n\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u6b63\u3057\u304f\u533a\u9593\u6f14\u7b97\u304c\u884c\u308f\u308c\u308c\u3070\u3001\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u3001 `width` \u306f\u533a\u9593\u306e\u5e45\u3001\u3064\u307e\u308a\u4e0a\u7aef\u3068\u4e0b\u7aef\u306e\u5dee\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\u6d6e\u52d5\u5c0f\u6570\u70b9\u6f14\u7b97\u306b\u3088\u308b\u6d6e\u52d5\u5c0f\u6570\u70b9\u8aa4\u5dee\u304c\u975e\u96f6\u306e\u533a\u9593\u5e45\u3068\u3057\u3066\u8868\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u898b\u3066\u3068\u308c\u307e\u3059\u3002\n\n```txt:output-for-test-interval-arith-RxR.txt\na = 1.7\nb = 3.3\na + b = [5,5]w(8.88178e-16)\na - b = [-1.6,-1.6]w(0)\na * b = [5.61,5.61]w(8.88178e-16)\na / b = [0.515152,0.515152]w(1.11022e-16)\n```\n\n__Remark__. \u3082\u3061\u308d\u3093\u30011 \u5f15\u6570\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u7528\u3044\u3066 `IR(1) / IR(9)` \u306a\u3069\u3068\u66f8\u3044\u3066\u3082\u540c\u69d8\u306e\u3053\u3068\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u4e00\u70b9\u533a\u9593\u540c\u58eb\u306e\u6f14\u7b97\u3060\u3068\u540c\u3058\u8a08\u7b97\u304c\u4f59\u5206\u306b\u884c\u308f\u308c\u3066\u3057\u307e\u3046\u5206 `div<IR>(1, 9)` \u306e\u65b9\u304c\u82e5\u5e72\u52b9\u7387\u304c\u3088\u3044\u3067\u3059\u3002\n\n### \u4e0b\u7aef\u30fb\u4e0a\u7aef\u30fb\u4e2d\u70b9\u30fb\u30ce\u30eb\u30e0\n\n\u533a\u9593\u306e\u5e45\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570 `width` \u306e\u3088\u3046\u306b\u3001`interval<T>` \u578b\u3067\u4e0e\u3048\u3089\u308c\u305f\u533a\u9593\u306b\u5bfe\u3057\u3066\u306a\u3093\u3089\u304b\u306e\u30d9\u30fc\u30b9\u306e\u578b T \u306e\u5024\u3092\u8fd4\u3059\u95a2\u6570\u3068\u3057\u3066 `lower`, `upper`, `median`, `norm` \u304c\u3042\u308a\u307e\u3059\u3002\u6700\u521d 3 \u3064\u306f\u6587\u5b57\u901a\u308a\u306e\u610f\u5473\u3067\u3001\u305d\u308c\u305e\u308c\u533a\u9593\u306e\u4e0b\u7aef\u30fb\u4e0a\u7aef\u30fb\u4e2d\u70b9\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002`norm` \u306f\u3001\u533a\u9593\u304c\u542b\u3080\u6570\u306e\u6700\u5927\u7d76\u5bfe\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n__\u8a33\u8a3b__(?). \u672c\u5bb6\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\u300c\u3053\u308c\u306f\u3001\u5b9f\u6570\u306b\u5bfe\u3059\u308b\u7d76\u5bfe\u5024\u306e\u3088\u3046\u306b\u3001\u6570\u5b66\u3067\u3044\u3046\u6240\u306e\u30ce\u30eb\u30e0\u306b\u306a\u3063\u3066\u3044\u308b\u300d\u3068\u3044\u3046\u98a8\u306a\u3053\u3068\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u5148\u306b\u6ce8\u610f\u3057\u305f\u3088\u3046\u306b\u3001\u305d\u3082\u305d\u3082\u533a\u9593\u5168\u4f53\u306e\u70ba\u3059\u7a7a\u9593\u304c\u30d9\u30af\u30c8\u30eb\u7a7a\u9593\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u533a\u9593\u5168\u4f53\u306e\u96c6\u5408\u304c `norm` \u306b\u3088\u3063\u3066\u30ce\u30eb\u30e0\u7a7a\u9593\u3092\u70ba\u3059\u8a33\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u307e\u3041\u305d\u3046\u306f\u8a00\u3063\u3066\u3082\u3042\u306a\u304c\u3061\u9593\u9055\u3044\u3067\u3082\u306a\u304f\u3066\u3001\u5b9f\u969b\u3001\u30ce\u30eb\u30e0\u306e\u6e80\u305f\u3059\u3079\u304d\u6027\u8cea\uff08\u4f8b\u3048\u3070\u4e09\u89d2\u4e0d\u7b49\u5f0f\uff09\u306f\u304a\u3088\u305d\u6e80\u305f\u3057\u3066\u3044\u307e\u3059\u3002\u79c1\u306f\u3053\u308c\u3092\u30ce\u30eb\u30e0\u3068\u547c\u3093\u3067\u3044\u308b\u306e\u3092\u4ed6\u3067\u898b\u305f\u3053\u3068\u304c\u306a\u304f\u3066\u3001\u666e\u901a\u306f magnitude \u306a\u3069\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u6700\u5c0f\u7d76\u5bfe\u5024\u306e\u65b9\u306f mignitude \u3068\u547c\u3073\u307e\u3059\u304c\u3001Boost \u306e\u533a\u9593\u6f14\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u7279\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\n---\n\n\u4eca\u65e5\u3082\u3053\u3053\u307e\u3067\u3002\u3042\u307e\u308a\u9032\u307e\u306a\u304b\u3063\u305f\u2026 \u6b21\u306f\u533a\u9593\u7279\u6709\u306e\u95a2\u6570\u306b\u89e6\u308c\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3067\u306f\u3067\u306f\u3002\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u51fa\u529b\u4f8b: https://gist.github.com/2941941\n\u6b21: http://qiita.com/items/abcf31a7b1787604a4f4", "tags": ["C++", "boost", "\u6570\u5024\u8a08\u7b97", "\u533a\u9593\u6f14\u7b97"]}