{"context": "\n\n\u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068\u3068\u5b9f\u969b\u3084\u3063\u305f\u3053\u3068\npepper\u3067\u64ae\u5f71\u3057\u305f\u753b\u50cf\u3092slack\u306bUP\u3057\u305f\u304b\u3063\u305f\u3002\n\u3057\u304b\u3057\u3001bot\u306ffileupload\u306eAPI\u3092\u53e9\u3051\u306a\u3044\u3063\u307d\u304b\u3063\u305f\u306e\u3067\u3001\u4e00\u56deS3\u306b\u753b\u50cf\u3092UP\u3057\u3066\u3001\u305d\u306eURL\u3092attachments\u306b\u6307\u5b9a\u3059\u308b\u3068\u3044\u3046\u5f62\u3067\u3084\u3063\u3066\u307f\u305f\u3002\nslackAPI\u3092\u89e6\u308b\u306e\u306f\u521d\u3081\u3066\u306a\u306e\u3067\u3001\u3082\u3057\u304b\u3057\u305f\u3089\u3082\u3063\u3068\u30b9\u30c6\u30ad\u306a\u3084\u308a\u65b9\u304c\u3042\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u4f7f\u3063\u305f\u3082\u306e\n\nboto\nslack_client\nwebsocket\n\n\u30a2\u30d7\u30ea\u306e\u30eb\u30fc\u30c8\u306b\u300clib\u300d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u3001\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f\u3002\n\n\u30dc\u30c3\u30af\u30b9\u5185\u5bb9\n\nTake Picture\u30dc\u30c3\u30af\u30b9\n\u65e2\u5b58\u306e\u30dc\u30c3\u30af\u30b9\u306b\u5c11\u3057\u624b\u3092\u5165\u308c\u308b\u3060\u3051\n\u3053\u3053\u306e\u51e6\u7406\u306f\u30a2\u30eb\u30c7\u30d0\u30e9\u30f3\u30a2\u30c8\u30ea\u30a8\u3055\u3093\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u3066\uff08http://qiita.com/Atelier-Akihabara/items/833e49a079788af55afb\uff09\n\u30a2\u30d7\u30ea\u306e\u30eb\u30fc\u30c8\u306b\u300chtml\u300d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u30c0\u30df\u30fc\u306eimage.jpg\u3092\u8a2d\u7f6e\u3059\u308b\u3002\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self, False)\n        self.resolutionMap = {\n            '160 x 120': 0,\n            '320 x 240': 1,\n            '640 x 480': 2,\n            '1280 x 960': 3\n        }\n        self.cameraMap = {\n            'Top': 0,\n            'Bottom': 1\n        }\n\n        self.recordFolder = \"/home/nao/recordings/cameras/\"\n\n    def onLoad(self):\n        self.framemanager = ALProxy(\"ALFrameManager\")\n        self.bIsRunning = False\n        try:\n            self.photoCapture = ALProxy( \"ALPhotoCapture\" )\n        except Exception as e:\n            self.photoCapture = None\n            self.logger.error(e)\n\n    def onUnload(self):\n        pass\n\n    def onInput_onStart(self):\n         # \u30a2\u30d7\u30ea\u306e\u30eb\u30fc\u30c8/html/\u306b\u753b\u50cf\u3092\u4fdd\u5b58\u3057\u305f\u3044\u306e\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\n        import os\n        self.recordFolder = os.path.join(self.framemanager.getBehaviorPath(self.behaviorId), \"../html\")\n\n        if( self.bIsRunning ):\n            return\n        self.bIsRunning = True\n        resolution = self.resolutionMap[self.getParameter(\"Resolution\")]\n        cameraID = self.cameraMap[self.getParameter(\"Camera\")]\n        fileName = self.getParameter(\"File Name\")\n        if self.photoCapture:\n            self.photoCapture.setResolution(resolution)\n            self.photoCapture.setCameraID(cameraID)\n            self.photoCapture.setPictureFormat(\"jpg\")\n            self.photoCapture.takePicture( self.recordFolder, fileName )\n        self.bIsRunning = False\n        self.onStopped()\n\n\nS3post\u30dc\u30c3\u30af\u30b9\uff08python\u30dc\u30c3\u30af\u30b9\uff09\n\u65b0\u898fpython\u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3001Access Key\u3068Secret Access Key\u7528\u306e\u65b0\u898f\u5909\u6570\u3092\u8ffd\u52a0\u3002\uff08type\u306f\u6587\u5b57\u5217\uff09\n\u4e2d\u9014\u534a\u7aef\u306b\u3053\u3053\u3060\u3051\u5909\u6570\u306b\u3057\u305f\u3051\u3069\u3001bucket\u3068\u304b\u3082\u3053\u3053\u3067\u5909\u6570\u306b\u3059\u308b\u3068\u5f8c\u3005\u6c4e\u7528\u6027\u304c\u3042\u3063\u3066\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u3057\u3089\u3002\n\n\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308b\u306e\u3067IAM\u3067\u4f5c\u3063\u305fS3\u30a2\u30af\u30bb\u30b9\u7528\u30e6\u30fc\u30b6\u30fc\u306e\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u5165\u529b\u3059\u308b\u3002\n\n\u4fdd\u5b58\u5f8c\u306bS3\u306eURL\u3092\u6b21\u306e\u30dc\u30c3\u30af\u30b9\u306b\u304a\u4f1d\u3048\u3057\u305f\u3044\u306e\u3067\u3001onStopped\u306eType\u3092\u6587\u5b57\u5217\u306b\u3057\u3066\u304a\u304f\u3002\nbox\u306eonStopped\u306e\u51fa\u529b\u7aef\u5b50\uff08\u3063\u3066\u547c\u3073\u65b9\u3067\u3044\u3044\u306e\u304b\u306a\uff09\u304c\u9752\u8272\u306b\u306a\u3063\u3066\u6587\u5b57\u5217\u3092\u51fa\u529b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\u30d1\u30bf\u30fc\u30f3\u9752\u3001\u6587\u5b57\u5217\u3067\u3059\u3002\n\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        self.framemanager = ALProxy(\"ALFrameManager\")\n        self.folderName = None\n\n    def onUnload(self):\n        import sys\n        if self.folderName and self.folderName in sys.path:\n            sys.path.remove(self.folderName)\n        self.folderName = None\n\n    def onInput_onStart(self, p):\n        # \u30a2\u30d7\u30ea\u30eb\u30fc\u30c8\u4ee5\u4e0b\u306blib\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u3063\u3066\u5165\u308c\u308b\n        import sys, os, time\n        self.folderName = os.path.join(\n                    self.framemanager.getBehaviorPath(self.behaviorId), \"../lib\")\n        if self.folderName not in sys.path:\n            sys.path.append(self.folderName)\n        for moduleName in os.listdir(self.folderName):\n            if moduleName in sys.modules:\n                self.logger.info(\"Loaded: %s, %s\" % (moduleName, sys.modules[moduleName].__file__))\n                reload(sys.modules[moduleName])\n\n        rootdir = os.path.join(self.framemanager.getBehaviorPath(self.behaviorId), \"../html\")\n        # \u8aad\u307f\u8fbc\u3080\u30d5\u30a1\u30a4\u30eb\u540d\uff08take photo\u3067\u64ae\u5f71\u3057\u3066\u30a2\u30d7\u30ea\u30eb\u30fc\u30c8\u306ehtml\u4ee5\u4e0b\u306b\u4fdd\u5b58\u3057\u305f\u304a\u5199\u771f\uff09\n        load_filename = \"image.jpg\"\n        # \u4fdd\u5b58\u3059\u308b\u969b\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u63a5\u982d\u8a9e\uff0b\u6642\u9593\u306b\u3057\u3066\u304a\u3044\u305f\n        save_filename = \"image_\"+str(time.time())+\".jpg\"\n\n        from boto.s3 import connection\n        from boto.s3.key import Key\n\n        # \u30dc\u30c3\u30af\u30b9\u306b\u8ffd\u52a0\u3057\u305f\u5909\u6570\u3092\u53d6\u5f97\u3059\u308b\n        ACCESS_KEY_ID = self.getParameter(\"AccessKey\")\n        SECRET_ACCESS_KEY = self.getParameter(\"SecretAccessKey\")\n        BUCKET_NAME = \"<\u4f7f\u7528\u3059\u308bBUCKET>\"\n\n        conn = connection.S3Connection(ACCESS_KEY_ID, SECRET_ACCESS_KEY)\n        bucket = conn.get_bucket(BUCKET_NAME)\n\n        k = Key(bucket)\n        k.key = save_filename\n        k.set_contents_from_filename(rootdir + \"/\" + load_filename)\n\n        # UP\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304cslack\u304b\u3089\u95b2\u89a7\u3067\u304d\u308b\u3088\u3046\u306b\u516c\u958b\u306b\u3057\u3066\u304a\u304f\n        k.make_public()\n\n        s3Url = k.generate_url(expires_in=0, query_auth=False)\n        # \u7d42\u4e86\u306e\u901a\u77e5\u3092\u4fdd\u5b58\u3057\u305fS3\u30d5\u30a1\u30a4\u30eb\u306eURL\u306b\u3059\u308b\n        self.onStopped(s3Url)\n\n    def onInput_onStop(self):\n        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped\n        self.onStopped() #activate the output of the box\n\n\nSlack\u30dc\u30c3\u30af\u30b9\uff08python\u30dc\u30c3\u30af\u30b9\uff09\nslack\u30dc\u30c3\u30af\u30b9\u306eonStart\u3082\u6587\u5b57\u5217\u3092\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u304a\u304f\n\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        self.framemanager = ALProxy(\"ALFrameManager\")\n        self.folderName = None\n\n    def onUnload(self):\n        import sys\n        if self.folderName and self.folderName in sys.path:\n            sys.path.remove(self.folderName)\n        self.folderName = None\n\n    def onInput_onStart(self, s3Url):\n        import sys, os\n        self.folderName = os.path.join(\n                    self.framemanager.getBehaviorPath(self.behaviorId), \"../lib\")\n        if self.folderName not in sys.path:\n            sys.path.append(self.folderName)\n        for moduleName in os.listdir(self.folderName):\n            # \u30e2\u30b8\u30e5\u30fc\u30eb\u306ereload\n            if moduleName in sys.modules:\n                self.logger.info(\"Loaded: %s, %s\" % (moduleName, sys.modules[moduleName].__file__))\n                reload(sys.modules[moduleName])\n\n        post_text = \"pepper\u3067\u3059\u3088\u301c\"\n        self.logger.info(\"Slack\u9001\u4fe1\u4e2d\uff01... File: %s\" % s3Url)\n\n        import json\n        from slackclient import SlackClient\n\n        token = \"<slack\u306etoken>\"\n        channel = \"<slack\u306e\u30c1\u30e3\u30f3\u30cd\u30eb>\"\n        user = \"<bot\u306e\u30e6\u30fc\u30b6\u30fc\u540d>\"\n        sc = SlackClient(token)\n\n        att = [{\n            \"color\": \"#36a64f\",\n            \"title\": \"\u5199\u771f\u3067\u3059\",\n            \"title_link\": s3Url,\n            \"text\": \"pepper\u304b\u3089\u611b\u3092\u3053\u3081\u3066\",\n            \"image_url\": s3Url\n        }]\n\n        self.logger.info(sc.api_call(\"chat.postMessage\", attachments=json.dumps(att), channel=channel, username=user, as_user=user, text=post_text))\n\n        self.onStopped()\n\n    def onInput_onStop(self):\n        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped\n        self.onStopped() #activate the output of the box\n\n\n\n\u6700\u7d42\u7684\u306achoregraphe\u753b\u9762\n\n\u3068\u3044\u3046\u8a33\u3067\u7121\u4e8b\u306bpepper\u3067\u64ae\u5f71\u3057\u305f\u753b\u50cf\u304cS3\u306bUP\u3055\u308c\u3001UP\u3057\u305f\u753b\u50cf\u306eURL\u3092\u6dfb\u4ed8\u3057\u305fslack post\u304c\u5b9f\u884c\u3055\u308c\u305f\u3002\n\n\u3084\u3063\u3066\u307f\u3066\u60a9\u3093\u3060\u3053\u3068\n\n\u5b9f\u6a5f\u30c6\u30b9\u30c8\u6642\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u3084\u308a\u3068\u308a\n\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7\u306b\u53c2\u52a0\u3057\u305f\u6642\u306b\u30a2\u30eb\u30c7\u30d0\u30e9\u30f3\u30a2\u30c8\u30ea\u30a8\u306e\u30b9\u30bf\u30c3\u30d5\u3055\u3093\u3082\u300c\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u3068\u304b\u30c6\u30b9\u30c8\u3059\u308b\u6642\u306f\u5927\u5909\u3067\u3059\u300d\u3068\u8a00\u3063\u3066\u3044\u305f\u3051\u3069\n\u5168\u30d5\u30a1\u30a4\u30eb\u3092\u4f8b\u306elastUploadedChoregrapheBehavior\u304b\u3089\u524a\u9664\u2192\u518d\u5ea6\u5168\u30d5\u30a1\u30a4\u30ebUP\u3068\u3044\u3046\u611f\u3058\u306a\u306e\u3067\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u304b\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u305f\u3044\u3078\u3093\u306b\u91cd\u305f\u3044\u3002\n\n\u30c7\u30d0\u30c3\u30b0\uff0f\u30ed\u30b0\u51fa\u529b\nself.logger.info() \u3067\u30d0\u30fc\u30c1\u30e3\u30eb\u30ed\u30dc\u30c3\u30c8\u306f\u30ed\u30b0\u3092\u78ba\u8a8d\u3067\u304d\u305f\u3051\u3069\u3001pepper\u5b9f\u6a5f\u3067\u306f\u5168\u7136\u51fa\u529b\u3055\u308c\u306a\u304b\u3063\u305f\u3002\n\u91cd\u5927\u306a\u30a8\u30e9\u30fc\u306e\u5834\u5408box\u304c\u8d64\u304f\u306a\u3063\u3066\u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u3059\u308b\u3068\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u898b\u3089\u308c\u305f\u3051\u3069\u3001\u305d\u3046\u3067\u3082\u306a\u3044\u6642\u306f\u3046\u3093\u3068\u3082\u3059\u3093\u3068\u3082\u8a00\u308f\u306a\u3044pepper\u3092\u30c9\u30ad\u30c9\u30ad\u3057\u306a\u304c\u3089\u898b\u3064\u3081\u3066\u306f\u30b3\u30fc\u30c9\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u305f\u3002\n\u30a2\u30c8\u30ea\u30a8\u306e\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7\u3067\u3001\u30bf\u30d6\u30ec\u30c3\u30c8\u306e\u30ed\u30b0\u306e\u51fa\u3057\u65b9\u306f\u6559\u308f\u3063\u305f\u3051\u3069\u3001\u4ed6\u306f\u3069\u3046\u51fa\u3057\u305f\u3089\u3044\u3044\u306e\u304b\u306a\u301c\u3002\n\u30d0\u30fc\u30c1\u30e3\u30eb\u30ed\u30dc\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3002\n\n\u3053\u308c\u304b\u3089\u3084\u308a\u305f\u3044\u3053\u3068\n\n\u64ae\u5f71\u6642\u306e\u76d7\u64ae\u611f\u304c\u3059\u3054\u3044\u306e\u3067\u6539\u826f\u3057\u305f\u3044\u3002\u3068\u308a\u307e\u3059\u3088\u30fc\uff013,2,1\uff01\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u64ae\u5f71\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u3002\u30b7\u30e3\u30c3\u30bf\u30fc\u97f3\u3082\u3042\u3063\u305f\u307b\u3046\u304c\u3044\u3044\u304b\u306a\u3002\n\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\uff1f\u3068\u3044\u3046\u306e\u304b\u3001\u3042\u306e\u30bf\u30d6\u30ec\u30c3\u30c8\u304b\u3089\u30bf\u30c3\u30d7\u3057\u3066\u8d77\u52d5\u3067\u304d\u308b\u5f62\u306e\u30a2\u30d7\u30ea\u3092\u4f5c\u308a\u305f\u3044\u3002\n\n## \u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068\u3068\u5b9f\u969b\u3084\u3063\u305f\u3053\u3068\npepper\u3067\u64ae\u5f71\u3057\u305f\u753b\u50cf\u3092slack\u306bUP\u3057\u305f\u304b\u3063\u305f\u3002\n\u3057\u304b\u3057\u3001bot\u306ffileupload\u306eAPI\u3092\u53e9\u3051\u306a\u3044\u3063\u307d\u304b\u3063\u305f\u306e\u3067\u3001\u4e00\u56deS3\u306b\u753b\u50cf\u3092UP\u3057\u3066\u3001\u305d\u306eURL\u3092attachments\u306b\u6307\u5b9a\u3059\u308b\u3068\u3044\u3046\u5f62\u3067\u3084\u3063\u3066\u307f\u305f\u3002\nslackAPI\u3092\u89e6\u308b\u306e\u306f\u521d\u3081\u3066\u306a\u306e\u3067\u3001\u3082\u3057\u304b\u3057\u305f\u3089\u3082\u3063\u3068\u30b9\u30c6\u30ad\u306a\u3084\u308a\u65b9\u304c\u3042\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n## \u4f7f\u3063\u305f\u3082\u306e\n\n* boto\n* slack_client\n* websocket\n\n\u30a2\u30d7\u30ea\u306e\u30eb\u30fc\u30c8\u306b\u300clib\u300d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u3001\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305f\u3002\n\n## \u30dc\u30c3\u30af\u30b9\u5185\u5bb9\n\n### Take Picture\u30dc\u30c3\u30af\u30b9\n\n\u65e2\u5b58\u306e\u30dc\u30c3\u30af\u30b9\u306b\u5c11\u3057\u624b\u3092\u5165\u308c\u308b\u3060\u3051\n\u3053\u3053\u306e\u51e6\u7406\u306f\u30a2\u30eb\u30c7\u30d0\u30e9\u30f3\u30a2\u30c8\u30ea\u30a8\u3055\u3093\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u3066\uff08http://qiita.com/Atelier-Akihabara/items/833e49a079788af55afb\uff09\n\u30a2\u30d7\u30ea\u306e\u30eb\u30fc\u30c8\u306b\u300chtml\u300d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u30c0\u30df\u30fc\u306eimage.jpg\u3092\u8a2d\u7f6e\u3059\u308b\u3002\n\n```py3\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self, False)\n        self.resolutionMap = {\n            '160 x 120': 0,\n            '320 x 240': 1,\n            '640 x 480': 2,\n            '1280 x 960': 3\n        }\n        self.cameraMap = {\n            'Top': 0,\n            'Bottom': 1\n        }\n\n        self.recordFolder = \"/home/nao/recordings/cameras/\"\n\n    def onLoad(self):\n        self.framemanager = ALProxy(\"ALFrameManager\")\n        self.bIsRunning = False\n        try:\n            self.photoCapture = ALProxy( \"ALPhotoCapture\" )\n        except Exception as e:\n            self.photoCapture = None\n            self.logger.error(e)\n\n    def onUnload(self):\n        pass\n\n    def onInput_onStart(self):\n    \t # \u30a2\u30d7\u30ea\u306e\u30eb\u30fc\u30c8/html/\u306b\u753b\u50cf\u3092\u4fdd\u5b58\u3057\u305f\u3044\u306e\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\n        import os\n        self.recordFolder = os.path.join(self.framemanager.getBehaviorPath(self.behaviorId), \"../html\")\n\n        if( self.bIsRunning ):\n            return\n        self.bIsRunning = True\n        resolution = self.resolutionMap[self.getParameter(\"Resolution\")]\n        cameraID = self.cameraMap[self.getParameter(\"Camera\")]\n        fileName = self.getParameter(\"File Name\")\n        if self.photoCapture:\n            self.photoCapture.setResolution(resolution)\n            self.photoCapture.setCameraID(cameraID)\n            self.photoCapture.setPictureFormat(\"jpg\")\n            self.photoCapture.takePicture( self.recordFolder, fileName )\n        self.bIsRunning = False\n        self.onStopped()\n```\n\n### S3post\u30dc\u30c3\u30af\u30b9\uff08python\u30dc\u30c3\u30af\u30b9\uff09\n\n\u65b0\u898fpython\u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3057\u3066\u3001Access Key\u3068Secret Access Key\u7528\u306e\u65b0\u898f\u5909\u6570\u3092\u8ffd\u52a0\u3002\uff08type\u306f\u6587\u5b57\u5217\uff09\n\u4e2d\u9014\u534a\u7aef\u306b\u3053\u3053\u3060\u3051\u5909\u6570\u306b\u3057\u305f\u3051\u3069\u3001bucket\u3068\u304b\u3082\u3053\u3053\u3067\u5909\u6570\u306b\u3059\u308b\u3068\u5f8c\u3005\u6c4e\u7528\u6027\u304c\u3042\u3063\u3066\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u3057\u3089\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-10-22 10.46.51.png](https://qiita-image-store.s3.amazonaws.com/0/45035/dee68fd9-38f5-4d00-ffa1-062a6bcab6f8.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-10-22 10.46.51.png\")\n\n\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308b\u306e\u3067IAM\u3067\u4f5c\u3063\u305fS3\u30a2\u30af\u30bb\u30b9\u7528\u30e6\u30fc\u30b6\u30fc\u306e\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u5165\u529b\u3059\u308b\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-10-22 10.46.28.png](https://qiita-image-store.s3.amazonaws.com/0/45035/6e13b939-ead5-3cbe-68a8-94062445ce32.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-10-22 10.46.28.png\")\n\n\u4fdd\u5b58\u5f8c\u306bS3\u306eURL\u3092\u6b21\u306e\u30dc\u30c3\u30af\u30b9\u306b\u304a\u4f1d\u3048\u3057\u305f\u3044\u306e\u3067\u3001onStopped\u306eType\u3092\u6587\u5b57\u5217\u306b\u3057\u3066\u304a\u304f\u3002\nbox\u306eonStopped\u306e\u51fa\u529b\u7aef\u5b50\uff08\u3063\u3066\u547c\u3073\u65b9\u3067\u3044\u3044\u306e\u304b\u306a\uff09\u304c\u9752\u8272\u306b\u306a\u3063\u3066\u6587\u5b57\u5217\u3092\u51fa\u529b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\u30d1\u30bf\u30fc\u30f3\u9752\u3001\u6587\u5b57\u5217\u3067\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-10-22 10.58.21.png](https://qiita-image-store.s3.amazonaws.com/0/45035/4eb38e39-4848-85bd-458b-4c736a51b5ab.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-10-22 10.58.21.png\")\n\n\n```py3\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        self.framemanager = ALProxy(\"ALFrameManager\")\n        self.folderName = None\n\n    def onUnload(self):\n        import sys\n        if self.folderName and self.folderName in sys.path:\n            sys.path.remove(self.folderName)\n        self.folderName = None\n\n    def onInput_onStart(self, p):\n    \t# \u30a2\u30d7\u30ea\u30eb\u30fc\u30c8\u4ee5\u4e0b\u306blib\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u3063\u3066\u5165\u308c\u308b\n        import sys, os, time\n        self.folderName = os.path.join(\n                    self.framemanager.getBehaviorPath(self.behaviorId), \"../lib\")\n        if self.folderName not in sys.path:\n            sys.path.append(self.folderName)\n        for moduleName in os.listdir(self.folderName):\n            if moduleName in sys.modules:\n                self.logger.info(\"Loaded: %s, %s\" % (moduleName, sys.modules[moduleName].__file__))\n                reload(sys.modules[moduleName])\n\n        rootdir = os.path.join(self.framemanager.getBehaviorPath(self.behaviorId), \"../html\")\n        # \u8aad\u307f\u8fbc\u3080\u30d5\u30a1\u30a4\u30eb\u540d\uff08take photo\u3067\u64ae\u5f71\u3057\u3066\u30a2\u30d7\u30ea\u30eb\u30fc\u30c8\u306ehtml\u4ee5\u4e0b\u306b\u4fdd\u5b58\u3057\u305f\u304a\u5199\u771f\uff09\n        load_filename = \"image.jpg\"\n        # \u4fdd\u5b58\u3059\u308b\u969b\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u63a5\u982d\u8a9e\uff0b\u6642\u9593\u306b\u3057\u3066\u304a\u3044\u305f\n        save_filename = \"image_\"+str(time.time())+\".jpg\"\n\n        from boto.s3 import connection\n        from boto.s3.key import Key\n\n\t\t# \u30dc\u30c3\u30af\u30b9\u306b\u8ffd\u52a0\u3057\u305f\u5909\u6570\u3092\u53d6\u5f97\u3059\u308b\n        ACCESS_KEY_ID = self.getParameter(\"AccessKey\")\n        SECRET_ACCESS_KEY = self.getParameter(\"SecretAccessKey\")\n        BUCKET_NAME = \"<\u4f7f\u7528\u3059\u308bBUCKET>\"\n\n        conn = connection.S3Connection(ACCESS_KEY_ID, SECRET_ACCESS_KEY)\n        bucket = conn.get_bucket(BUCKET_NAME)\n\n        k = Key(bucket)\n        k.key = save_filename\n        k.set_contents_from_filename(rootdir + \"/\" + load_filename)\n        \n        # UP\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304cslack\u304b\u3089\u95b2\u89a7\u3067\u304d\u308b\u3088\u3046\u306b\u516c\u958b\u306b\u3057\u3066\u304a\u304f\n        k.make_public()\n        \n        s3Url = k.generate_url(expires_in=0, query_auth=False)\n        # \u7d42\u4e86\u306e\u901a\u77e5\u3092\u4fdd\u5b58\u3057\u305fS3\u30d5\u30a1\u30a4\u30eb\u306eURL\u306b\u3059\u308b\n        self.onStopped(s3Url)\n\n    def onInput_onStop(self):\n        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped\n        self.onStopped() #activate the output of the box\n```\n\n\n### Slack\u30dc\u30c3\u30af\u30b9\uff08python\u30dc\u30c3\u30af\u30b9\uff09\n\nslack\u30dc\u30c3\u30af\u30b9\u306eonStart\u3082\u6587\u5b57\u5217\u3092\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u5909\u66f4\u3057\u3066\u304a\u304f\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-10-22 11.03.05.png](https://qiita-image-store.s3.amazonaws.com/0/45035/c4a0bcba-4942-bbc3-3d19-fff08ef20729.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-10-22 11.03.05.png\")\n\n\n```py3\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        self.framemanager = ALProxy(\"ALFrameManager\")\n        self.folderName = None\n\n    def onUnload(self):\n        import sys\n        if self.folderName and self.folderName in sys.path:\n            sys.path.remove(self.folderName)\n        self.folderName = None\n\n    def onInput_onStart(self, s3Url):\n        import sys, os\n        self.folderName = os.path.join(\n                    self.framemanager.getBehaviorPath(self.behaviorId), \"../lib\")\n        if self.folderName not in sys.path:\n            sys.path.append(self.folderName)\n        for moduleName in os.listdir(self.folderName):\n            # \u30e2\u30b8\u30e5\u30fc\u30eb\u306ereload\n            if moduleName in sys.modules:\n                self.logger.info(\"Loaded: %s, %s\" % (moduleName, sys.modules[moduleName].__file__))\n                reload(sys.modules[moduleName])\n\n        post_text = \"pepper\u3067\u3059\u3088\u301c\"\n        self.logger.info(\"Slack\u9001\u4fe1\u4e2d\uff01... File: %s\" % s3Url)\n\n        import json\n        from slackclient import SlackClient\n\n        token = \"<slack\u306etoken>\"\n        channel = \"<slack\u306e\u30c1\u30e3\u30f3\u30cd\u30eb>\"\n        user = \"<bot\u306e\u30e6\u30fc\u30b6\u30fc\u540d>\"\n        sc = SlackClient(token)\n\n        att = [{\n            \"color\": \"#36a64f\",\n            \"title\": \"\u5199\u771f\u3067\u3059\",\n            \"title_link\": s3Url,\n            \"text\": \"pepper\u304b\u3089\u611b\u3092\u3053\u3081\u3066\",\n            \"image_url\": s3Url\n        }]\n\n        self.logger.info(sc.api_call(\"chat.postMessage\", attachments=json.dumps(att), channel=channel, username=user, as_user=user, text=post_text))\n\n        self.onStopped()\n\n    def onInput_onStop(self):\n        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped\n        self.onStopped() #activate the output of the box\n        \n```\n\n## \u6700\u7d42\u7684\u306achoregraphe\u753b\u9762\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-10-21 18.51.49.png](https://qiita-image-store.s3.amazonaws.com/0/45035/7c051209-b202-f0dd-80fa-6489f9a39df7.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-10-21 18.51.49.png\")\n\n\u3068\u3044\u3046\u8a33\u3067\u7121\u4e8b\u306bpepper\u3067\u64ae\u5f71\u3057\u305f\u753b\u50cf\u304cS3\u306bUP\u3055\u308c\u3001UP\u3057\u305f\u753b\u50cf\u306eURL\u3092\u6dfb\u4ed8\u3057\u305fslack post\u304c\u5b9f\u884c\u3055\u308c\u305f\u3002\n\n## \u3084\u3063\u3066\u307f\u3066\u60a9\u3093\u3060\u3053\u3068\n\n### \u5b9f\u6a5f\u30c6\u30b9\u30c8\u6642\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u3084\u308a\u3068\u308a\n\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7\u306b\u53c2\u52a0\u3057\u305f\u6642\u306b\u30a2\u30eb\u30c7\u30d0\u30e9\u30f3\u30a2\u30c8\u30ea\u30a8\u306e\u30b9\u30bf\u30c3\u30d5\u3055\u3093\u3082\u300c\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u3068\u304b\u30c6\u30b9\u30c8\u3059\u308b\u6642\u306f\u5927\u5909\u3067\u3059\u300d\u3068\u8a00\u3063\u3066\u3044\u305f\u3051\u3069\n\u5168\u30d5\u30a1\u30a4\u30eb\u3092\u4f8b\u306elastUploadedChoregrapheBehavior\u304b\u3089\u524a\u9664\u2192\u518d\u5ea6\u5168\u30d5\u30a1\u30a4\u30ebUP\u3068\u3044\u3046\u611f\u3058\u306a\u306e\u3067\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u304b\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u305f\u3044\u3078\u3093\u306b\u91cd\u305f\u3044\u3002\n\n### \u30c7\u30d0\u30c3\u30b0\uff0f\u30ed\u30b0\u51fa\u529b\n```self.logger.info()``` \u3067\u30d0\u30fc\u30c1\u30e3\u30eb\u30ed\u30dc\u30c3\u30c8\u306f\u30ed\u30b0\u3092\u78ba\u8a8d\u3067\u304d\u305f\u3051\u3069\u3001pepper\u5b9f\u6a5f\u3067\u306f\u5168\u7136\u51fa\u529b\u3055\u308c\u306a\u304b\u3063\u305f\u3002\n\u91cd\u5927\u306a\u30a8\u30e9\u30fc\u306e\u5834\u5408box\u304c\u8d64\u304f\u306a\u3063\u3066\u30de\u30a6\u30b9\u30aa\u30fc\u30d0\u30fc\u3059\u308b\u3068\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u898b\u3089\u308c\u305f\u3051\u3069\u3001\u305d\u3046\u3067\u3082\u306a\u3044\u6642\u306f\u3046\u3093\u3068\u3082\u3059\u3093\u3068\u3082\u8a00\u308f\u306a\u3044pepper\u3092\u30c9\u30ad\u30c9\u30ad\u3057\u306a\u304c\u3089\u898b\u3064\u3081\u3066\u306f\u30b3\u30fc\u30c9\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u305f\u3002\n\u30a2\u30c8\u30ea\u30a8\u306e\u30ef\u30fc\u30af\u30b7\u30e7\u30c3\u30d7\u3067\u3001\u30bf\u30d6\u30ec\u30c3\u30c8\u306e\u30ed\u30b0\u306e\u51fa\u3057\u65b9\u306f\u6559\u308f\u3063\u305f\u3051\u3069\u3001\u4ed6\u306f\u3069\u3046\u51fa\u3057\u305f\u3089\u3044\u3044\u306e\u304b\u306a\u301c\u3002\n\u30d0\u30fc\u30c1\u30e3\u30eb\u30ed\u30dc\u30c3\u30c8\u3068\u540c\u3058\u3088\u3046\u306b\u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3002\n\n## \u3053\u308c\u304b\u3089\u3084\u308a\u305f\u3044\u3053\u3068\n\n* \u64ae\u5f71\u6642\u306e\u76d7\u64ae\u611f\u304c\u3059\u3054\u3044\u306e\u3067\u6539\u826f\u3057\u305f\u3044\u3002\u3068\u308a\u307e\u3059\u3088\u30fc\uff013,2,1\uff01\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u64ae\u5f71\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u3002\u30b7\u30e3\u30c3\u30bf\u30fc\u97f3\u3082\u3042\u3063\u305f\u307b\u3046\u304c\u3044\u3044\u304b\u306a\u3002\n* \u30d1\u30c3\u30b1\u30fc\u30b8\u5316\uff1f\u3068\u3044\u3046\u306e\u304b\u3001\u3042\u306e\u30bf\u30d6\u30ec\u30c3\u30c8\u304b\u3089\u30bf\u30c3\u30d7\u3057\u3066\u8d77\u52d5\u3067\u304d\u308b\u5f62\u306e\u30a2\u30d7\u30ea\u3092\u4f5c\u308a\u305f\u3044\u3002\n", "tags": ["Pepper", "Choregraphe", "Slack"]}