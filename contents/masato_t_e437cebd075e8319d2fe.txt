{"context": " More than 1 year has passed since last update.\u30bf\u30a4\u30c8\u30eb\u306e\u901a\u308a\u306a\u3093\u3067\u3059\u3051\u3069\u3082\u3001\nshiny\u3092\u4f7f\u3063\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\n\u3069\u308c\u3082id\u304c\u632f\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001id\u540d\u306fouptut$hogehoge\u3068\u3044\u3046\u98a8\u306b\u6307\u5b9a\u3057\u305f\n\u30ea\u30b9\u30c8\u306eattribute\u540d\u304cid\u3068\u3057\u3066\u632f\u3089\u308c\u307e\u3059\u3002\n\u8a66\u3057\u306b\u3001shiny\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30b3\u30fc\u30c9\u3092\u8d70\u3089\u305b\u3066\u307f\u307e\u3057\u3087\u3046\n# \u3053\u3063\u3061\u304cserver.R\nlibrary(shiny)\n\n# Define server logic required to draw a histogram\nshinyServer(function(input, output) {\n\n  # Expression that generates a histogram. The expression is\n  # wrapped in a call to renderPlot to indicate that:\n  #\n  #  1) It is \"reactive\" and therefore should re-execute automatically\n  #     when inputs change\n  #  2) Its output type is a plot\n\n  output$distPlot <- renderPlot({\n    x    <- faithful[, 2]  # Old Faithful Geyser data\n    bins <- seq(min(x), max(x), length.out = input$bins + 1)\n\n    # draw the histogram with the specified number of bins\n    hist(x, breaks = bins, col = 'darkgray', border = 'white')\n  })\n})\n\n# \u3053\u3063\u3061\u304cUI.R\nlibrary(shiny)\n\n# Define UI for application that draws a histogram\nshinyUI(fluidPage(\n\n  # Application title\n  titlePanel(\"Hello Shiny!\"),\n\n  # Sidebar with a slider input for the number of bins\n  sidebarLayout(\n    sidebarPanel(\n      sliderInput(\"bins\",\n                  \"Number of bins:\",\n                  min = 1,\n                  max = 50,\n                  value = 30)\n    ),\n\n    # Show a plot of the generated distribution\n    mainPanel(\n      plotOutput(\"distPlot\")\n    )\n  )\n))\n\n\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d70\u3089\u305b\u3066\u3001\u30d7\u30ed\u30c3\u30c8\u306e\u8981\u7d20\u3092\u898b\u3066\u307f\u308b\u3068\n<div id=\"distPlot\" class=\"shiny-plot-output shiny-bound-output\" style=\"width: 100% ; height: 400px\"><img src=\"data:image/png.....\" width=\"610\" height=\"400\"></div>\n\n\u307f\u305f\u3044\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\nshiny\u3067\u6307\u5b9a\u3057\u305f\u51fa\u529boutput$distPlot\u304c\u3001div\u306eid\u306b\u540c\u3058\u540d\u524d\u3067\u3064\u3044\u3066\u307e\u3059\u306d\u3002\n\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u3053\u306eid\u306b\u5bfe\u3057\u3066CSS\u3067\u304a\u5316\u7ca7\u3092\u3055\u305b\u308b\u4e8b\u306a\u3093\u304b\u304c\u3067\u304d\u307e\u3059\u306d\uff01\n\u3042\u3001\u52ff\u8ad6 class\u304cshiny-plot-output\u3068\u304b\u3067\u51fa\u3066\u304f\u308b\u306e\u3067\u3001\n\u30d7\u30ed\u30c3\u30c8\u306f\u3053\u3046\u3044\u3046\u304a\u5316\u7ca7\u3001\u30c6\u30fc\u30d6\u30eb\u306f\u3053\u3046\u2026\u3068\u3044\u3046\u6307\u5b9a\u3082\u3067\u304d\u307e\u3059\u304c\u2026\nbootstrap\u306e\u307e\u3093\u307e\u306aUI\u3058\u3083\u30e4\u30c0\uff01\u30ab\u30b9\u30bf\u30e0\u958b\u767a\u3057\u305fBI\u3063\u307d\u304f\u9b45\u305b\u305f\u3044\uff01\u3068\u3044\u3046\u6642\u306b\u52b9\u679c\u7684\u3067\u3059\u306d\u3002\n\u3061\u306a\u307f\u306b\u3001css\u306a\u3093\u304b\u306f\u5fc5\u305aserver.R\u3068UI.R\u304c\u7f6e\u3044\u3066\u3042\u308b\u968e\u5c64\u306b\nwww\u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u3064\u304f\u3063\u3066\u304a\u3044\u3066\u3001\u305d\u3053\u3078\u653e\u308a\u8fbc\u3081\u3070OK\u3067\u3059\u3002\n\u306a\u304a\u3001\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u306fshiny\u306e\u4ed5\u69d8\u4e0a\u3001\u5fc5\u305a\u3053\u306e\u540d\u524d\u3058\u3083\u306a\u304d\u3083\u30c0\u30e1\u3089\u3057\u3044\u3067\u3059\u3002\n\u30bf\u30a4\u30c8\u30eb\u306e\u901a\u308a\u306a\u3093\u3067\u3059\u3051\u3069\u3082\u3001\nshiny\u3092\u4f7f\u3063\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306f\n\u3069\u308c\u3082id\u304c\u632f\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001id\u540d\u306fouptut$hogehoge\u3068\u3044\u3046\u98a8\u306b\u6307\u5b9a\u3057\u305f\n\u30ea\u30b9\u30c8\u306eattribute\u540d\u304cid\u3068\u3057\u3066\u632f\u3089\u308c\u307e\u3059\u3002\n\n\u8a66\u3057\u306b\u3001shiny\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30b3\u30fc\u30c9\u3092\u8d70\u3089\u305b\u3066\u307f\u307e\u3057\u3087\u3046\n\n```r\n# \u3053\u3063\u3061\u304cserver.R\nlibrary(shiny)\n\n# Define server logic required to draw a histogram\nshinyServer(function(input, output) {\n\n  # Expression that generates a histogram. The expression is\n  # wrapped in a call to renderPlot to indicate that:\n  #\n  #  1) It is \"reactive\" and therefore should re-execute automatically\n  #     when inputs change\n  #  2) Its output type is a plot\n\n  output$distPlot <- renderPlot({\n    x    <- faithful[, 2]  # Old Faithful Geyser data\n    bins <- seq(min(x), max(x), length.out = input$bins + 1)\n\n    # draw the histogram with the specified number of bins\n    hist(x, breaks = bins, col = 'darkgray', border = 'white')\n  })\n})\n```\n\n\n```r\n# \u3053\u3063\u3061\u304cUI.R\nlibrary(shiny)\n\n# Define UI for application that draws a histogram\nshinyUI(fluidPage(\n\n  # Application title\n  titlePanel(\"Hello Shiny!\"),\n\n  # Sidebar with a slider input for the number of bins\n  sidebarLayout(\n    sidebarPanel(\n      sliderInput(\"bins\",\n                  \"Number of bins:\",\n                  min = 1,\n                  max = 50,\n                  value = 30)\n    ),\n\n    # Show a plot of the generated distribution\n    mainPanel(\n      plotOutput(\"distPlot\")\n    )\n  )\n))\n```\n\n\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d70\u3089\u305b\u3066\u3001\u30d7\u30ed\u30c3\u30c8\u306e\u8981\u7d20\u3092\u898b\u3066\u307f\u308b\u3068\n\n```html\n<div id=\"distPlot\" class=\"shiny-plot-output shiny-bound-output\" style=\"width: 100% ; height: 400px\"><img src=\"data:image/png.....\" width=\"610\" height=\"400\"></div>\n```\n\n\u307f\u305f\u3044\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\nshiny\u3067\u6307\u5b9a\u3057\u305f\u51fa\u529b**output$distPlot**\u304c\u3001div\u306eid\u306b\u540c\u3058\u540d\u524d\u3067\u3064\u3044\u3066\u307e\u3059\u306d\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u3053\u306eid\u306b\u5bfe\u3057\u3066CSS\u3067\u304a\u5316\u7ca7\u3092\u3055\u305b\u308b\u4e8b\u306a\u3093\u304b\u304c\u3067\u304d\u307e\u3059\u306d\uff01\n\u3042\u3001\u52ff\u8ad6 class\u304cshiny-plot-output\u3068\u304b\u3067\u51fa\u3066\u304f\u308b\u306e\u3067\u3001\n\u30d7\u30ed\u30c3\u30c8\u306f\u3053\u3046\u3044\u3046\u304a\u5316\u7ca7\u3001\u30c6\u30fc\u30d6\u30eb\u306f\u3053\u3046\u2026\u3068\u3044\u3046\u6307\u5b9a\u3082\u3067\u304d\u307e\u3059\u304c\u2026\n\nbootstrap\u306e\u307e\u3093\u307e\u306aUI\u3058\u3083\u30e4\u30c0\uff01\u30ab\u30b9\u30bf\u30e0\u958b\u767a\u3057\u305fBI\u3063\u307d\u304f\u9b45\u305b\u305f\u3044\uff01\u3068\u3044\u3046\u6642\u306b\u52b9\u679c\u7684\u3067\u3059\u306d\u3002\n\n\n\u3061\u306a\u307f\u306b\u3001css\u306a\u3093\u304b\u306f\u5fc5\u305aserver.R\u3068UI.R\u304c\u7f6e\u3044\u3066\u3042\u308b\u968e\u5c64\u306b\nwww\u3068\u3044\u3046\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u3064\u304f\u3063\u3066\u304a\u3044\u3066\u3001\u305d\u3053\u3078\u653e\u308a\u8fbc\u3081\u3070OK\u3067\u3059\u3002\n\u306a\u304a\u3001\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u306fshiny\u306e\u4ed5\u69d8\u4e0a\u3001\u5fc5\u305a\u3053\u306e\u540d\u524d\u3058\u3083\u306a\u304d\u3083\u30c0\u30e1\u3089\u3057\u3044\u3067\u3059\u3002\n", "tags": ["R", "Shiny", "CSS"]}