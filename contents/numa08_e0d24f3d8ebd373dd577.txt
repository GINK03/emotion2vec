{"context": " More than 1 year has passed since last update.\n\nPlay2 + pac4j\u3067\u7c21\u5358\u306bOAuth\u8a8d\u53ef\u3092\u3059\u308b\n\n\u306f\u3058\u3081\u306b\n\u6700\u8fd1\u306eWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u3084\u308cTwitter\u9023\u643a\u3060\u3084\u308cFacebook\u9023\u643a\u3060\u3068OAuth\u3092\u5229\u7528\u3057\u305f\u8a8d\u53ef\u6a5f\u80fd\u3092\u76db\u308a\u8fbc\u3080\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u9023\u643a\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u306b\u3088\u3063\u3066API\u306e\u547c\u3073\u51fa\u3057\u65b9\u304c\u7570\u306a\u3063\u3066\u3044\u305f\u308a\u3068\u3001\u81ea\u5206\u3067\u5b9f\u88c5\u3092\u3059\u308b\u3068\u30b3\u30fc\u30c9\u306e\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u5316\u304c\u6fc0\u3057\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\npac4j\u306f\u3001\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u8a8d\u8a3c\u3001\u8a8d\u53ef\u306b\u95a2\u3059\u308b\u51e6\u7406\u306e\u5171\u901a\u5316\u3092\u884c\u3046\u3001Java\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u8a73\u7d30\u306f\u516c\u5f0f\u30b5\u30a4\u30c8\u3092\u898b\u308b\u306e\u304c\u65e9\u3044\u306e\u3067\u3059\u304c\u3001\n\n\nOAuth1.0,2.0\n\nDropBox\nFacebook\nGithub\nGoogle\nTwitter...\n\n\nCAS\n\nHTTP\n\nform\nbasic\n\n\nOpenID\nSAML2.0\n\n\u3068\u3001\u5e45\u5e83\u3044Protocol\u3001\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u5fdc\u3092\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u3044\u304f\u3064\u304b\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5411\u3051\u306b\u30d7\u30e9\u30b0\u30a4\u30f3\u3001\u30e9\u30c3\u30d1\u30fc\u3082\u63d0\u4f9b\u3055\u308c\u3066\u3044\u3066\u7d44\u307f\u8fbc\u307f\u3082\u7c21\u5358\u3067\u3059\u3002\u4eca\u56de\u306f\u3001Play2.2x\u3068Scala\u3092\u5229\u7528\u3057\u3066\u3001Twitter\u306e\u8a8d\u53ef\u3092\u884c\u3044\u307e\u3059\u3002\n\nTwitter\u30a2\u30d7\u30ea\u3092\u767b\u9332\u3059\u308b\nhttp://dev.twitter.com/\u304b\u3089\u30a2\u30d7\u30ea\u306e\u767b\u9332\u3092\u884c\u3063\u3066\u3001Api Key,Api Secret\u3092\u53d6\u5f97\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30afURL\u306e\u6307\u5b9a\u306f${FQDN}/callback\u3068\u3057\u307e\u3059\u3002\n\n\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3059\u308b\nbuild.sbt\u306b\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nlibraryDependencies += \"org.twitter4j\" % \"twitter4j-core\" % \"4.0.1\"\n\nresolvers ++= Seq(\n  \"Sonatype snapshots repository\" at \"https://oss.sonatype.org/content/repositories/snapshots/\"\n)\n\nlibraryDependencies ++= Seq(\n  \"org.pac4j\"   % \"play-pac4j_scala\" % \"1.2.0\",\n  \"org.pac4j\" % \"pac4j-oauth\" % \"1.5.1\"\n)\n\n\u4eca\u56de\u3001TwitterAPI\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u3001Twitter4J\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\nPlay\u306econf\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bpac4j.conf\u30d5\u30a1\u30a4\u30eb\u3092\u4ee5\u4e0b\u306e\u5185\u5bb9\u3067\u4f5c\u308a\u307e\u3059\u3002\n{\n    \"twitter\": {\n        \"api\": {\n            \"key\": \"\u5148\u307b\u3069\u53d6\u5f97\u3057\u305fapi key\",\n            \"secret\": \"\u5148\u307b\u3069\u53d6\u5f97\u3057\u305fsecret\",\n            \"callback\": \"Twitter\u30a2\u30d7\u30ea\u4f5c\u6210\u6642\u306b\u8a2d\u5b9a\u3057\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306eURL\"\n        }\n    }\n}\n\n\u306a\u304a\u3001\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u30a2\u30d7\u30ea\u56fa\u6709\u60c5\u5831\u3092\u542b\u307f\u307e\u3059\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306a\u3069\u3092\u5229\u7528\u3059\u308b\u969b\u306b\u306f\u3001\u9069\u5207\u306b\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u7ba1\u7406\u3092\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3080\u90e8\u5206\u3092\u4f5c\u308b\n\u6b21\u306e\u3088\u3046\u306atrait\u3092\u7528\u610f\u3057\u307e\u3059\u3002\npackage models\n\nimport play.api.Configuration\nimport com.typesafe.config.ConfigFactory\nimport java.io.File\nimport models.TwitterAuthConfig.ConfigurationError\n\ntrait TwitterAuthConfig {\n\n  lazy val consumer : TwitterConsumer = {\n    val config = Configuration(ConfigFactory.parseFileAnySyntax(new File(\"conf/pac4j.conf\")))\n    (for {\n      key <- config.getString(\"twitter.api.key\")\n      secret <- config.getString(\"twitter.api.secret\")\n    } yield {\n      TwitterConsumer(key, secret)\n    }).getOrElse(throw new ConfigurationError(\"conf/pac4j.conf is not define or format is invalid\"))\n  }\n\n  lazy val callback = {\n    val config = Configuration(ConfigFactory.parseFileAnySyntax(new File(\"conf/pac4j.conf\")))\n    (for {\n      callback <- config.getString(\"twitter.api.callback\")\n    } yield {\n      callback\n    }).getOrElse(throw new ConfigurationError(\"conf/pac4j.conf is not define or format is invalid\"))\n  }\n}\n\nobject TwitterAuthConfig {\n  class ConfigurationError(m: String) extends RuntimeException(m)\n}\ncase class TwitterConsumer(key: String, secret: String)\n\n\n\u30a2\u30d7\u30ea\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\nPlay\u306e\u30a2\u30d7\u30ea\u304c\u7acb\u3061\u4e0a\u304c\u3063\u305f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092Override\u3057\u307e\u3059\u3002Global.scala\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u3001\u4ee5\u4e0b\u306e\u5185\u5bb9\u3068\u3057\u307e\u3059\u3002\npackage controllers\n\nimport play.api.GlobalSettings\nimport play.api.mvc.{ Results, SimpleResult, RequestHeader }\nimport scala.concurrent.Future\nimport org.pac4j.oauth.client.TwitterClient\nimport org.pac4j.core.client.Clients\nimport org.pac4j.play.Config\nimport models.twiter.TwitterAuthConfig\n\nobject Global extends GlobalSettings with TwitterAuthConfig {\n\n  override def onError(request: RequestHeader, ex: Throwable): Future[SimpleResult] = {\n    Future.successful(Results.InternalServerError)\n  }\n\n  override def onStart(app: play.api.Application): Unit = {\n    val ti = consumer\n    val tc = new TwitterClient(ti.key, ti.secret)\n    val cl = new Clients(callback, tc)\n    Config.setClients(cl)\n  }\n}\n\n\u307e\u305f\u3001\u3053\u306e\u30af\u30e9\u30b9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3088\u3046\u306b\u3001application.conf\u306b\u66f8\u304d\u8db3\u3057\u307e\u3059\u3002\napplication.global=controllers.Global\n\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u8a2d\u5b9a\u3059\u308b\nroutes\u306b\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n# Authorication\nGET     /callback                   org.pac4j.play.CallbackController.callback()\nPOST    /callback                   org.pac4j.play.CallbackController.callback()\nGET     /casProxyCallback           org.pac4j.play.CallbackController.callback()\nPOST    /casProxyCallback           org.pac4j.play.CallbackController.callback()\nGET     /logout                     org.pac4j.play.CallbackController.logoutAndRedirect()\n\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5b9f\u88c5\u3059\u308b\n\u6700\u671f\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3001\n\nTwitter\u306e\u8a8d\u53ef\u304c\u3055\u308c\u3066\u306a\u3044\u306a\u3089\u3001\u8a8d\u53efURL\u3092\u8868\u793a\nTwitter\u306e\u8a8d\u53ef\u304c\u3042\u308b\u306a\u3089\u3001\u4e0a\u4f4d\u306e\u30c4\u30a4\u30fc\u30c8\u3092\u8868\u793a\n\n\u3059\u308b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nApplication..scala\u3092\u4ee5\u4e0b\u306e\u5185\u5bb9\u3068\u3057\u307e\u3059\u3002\npackage controllers\n\nimport play.api.mvc._\nimport org.pac4j.play.scala.ScalaController\nimport org.pac4j.oauth.profile.twitter.TwitterProfile\nimport models.TwitterAuthConfig\nimport twitter4j.auth.AccessToken\nimport twitter4j.TwitterFactory\nimport scala.collection.JavaConversions._\n\nobject Application extends ScalaController with TwitterAuthConfig {\n\n  lazy val twitter = {\n    val tw = TwitterFactory.getSingleton\n    tw.setOAuthConsumer(consumer.key, consumer.secret)\n    tw\n  }\n\n  def index = Action { request =>\n    val newSession = getOrCreateSessionId(request)\n    val content = Option(getUserProfile(request)).fold(getRedirectAction(request, newSession, \"TwitterClient\", \"/\").getLocation) { p =>\n      val tp = p.asInstanceOf[TwitterProfile]\n      val ac = new AccessToken(tp.getAccessToken, tp.getAccessSecret)\n\n      twitter.setOAuthAccessToken(ac)\n      twitter.getUserTimeline.map(_.getText).mkString(\"\\n\")\n    }\n    Ok(content)\n  }\n}\n\n\n\u52d5\u304b\u3059\n\u3068\u308a\u3042\u3048\u305a/\u306b\u30a2\u30af\u30bb\u30b9\u3092\u3059\u308b\u3068\u8a8d\u53ef\u7528\u306eURL\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u306e\u30da\u30fc\u30b8\u3078\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002Twitter\u306e\u8a8d\u53ef\u3092\u4e86\u627f\u3059\u308c\u3070\u3001\u753b\u9762\u306b\u6700\u8fd1\u306e\u30c4\u30a4\u30fc\u30c8\u304c\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\u4ee5\u4e0a\u3067\u3059\u3002\u304a\u75b2\u308c\u69d8\u3067\u3057\u305f\u3002\n\n\u304a\u308f\u308a\u306b\n\u4eca\u56de\u306e\u5b9f\u88c5\u306f\u3042\u304f\u307e\u3067\u30b5\u30f3\u30d7\u30eb\u306a\u306e\u3067\u3001\u30a8\u30e9\u30fc\u51e6\u7406\u3068\u304b\u304c\u66d6\u6627\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u30e6\u30fc\u30b6\u306b\u3088\u3063\u3066\u8a8d\u53ef\u304c\u62d2\u5426\u3055\u308c\u305f\u5834\u5408\u306e\u51e6\u7406\u3068\u304b\u304c\u307e\u3060\u5fae\u5999\u3067\u3059\u3002\u307e\u305f\u3001pac4j\u3084playframework\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306f\u975e\u5e38\u306b\u65e9\u3044\u3067\u3059\u3002\u81ea\u5206\u304c\u5229\u7528\u3057\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u6ce8\u610f\u3092\u6255\u3044\u3001\u516c\u5f0f\u30b5\u30a4\u30c8\u3084\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u307e\u3057\u3087\u3046\u3002\n# Play2 + pac4j\u3067\u7c21\u5358\u306bOAuth\u8a8d\u53ef\u3092\u3059\u308b\n\n## \u306f\u3058\u3081\u306b\n\n\u6700\u8fd1\u306eWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001\u3084\u308cTwitter\u9023\u643a\u3060\u3084\u308cFacebook\u9023\u643a\u3060\u3068OAuth\u3092\u5229\u7528\u3057\u305f\u8a8d\u53ef\u6a5f\u80fd\u3092\u76db\u308a\u8fbc\u3080\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u9023\u643a\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u306b\u3088\u3063\u3066API\u306e\u547c\u3073\u51fa\u3057\u65b9\u304c\u7570\u306a\u3063\u3066\u3044\u305f\u308a\u3068\u3001\u81ea\u5206\u3067\u5b9f\u88c5\u3092\u3059\u308b\u3068\u30b3\u30fc\u30c9\u306e\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u5316\u304c\u6fc0\u3057\u3044\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n[pac4j](http://www.pac4j.org/#1)\u306f\u3001\u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u8a8d\u8a3c\u3001\u8a8d\u53ef\u306b\u95a2\u3059\u308b\u51e6\u7406\u306e\u5171\u901a\u5316\u3092\u884c\u3046\u3001Java\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u8a73\u7d30\u306f\u516c\u5f0f\u30b5\u30a4\u30c8\u3092\u898b\u308b\u306e\u304c\u65e9\u3044\u306e\u3067\u3059\u304c\u3001\n\n - OAuth1.0,2.0\n     - DropBox\n     - Facebook\n     - Github\n     - Google\n     - Twitter...\n\n - CAS\n - HTTP\n     - form\n     - basic\n - OpenID\n - SAML2.0\n\n\u3068\u3001\u5e45\u5e83\u3044Protocol\u3001\u30b5\u30fc\u30d3\u30b9\u306b\u5bfe\u5fdc\u3092\u3057\u3066\u3044\u307e\u3059\u3002\u307e\u305f\u3001\u3044\u304f\u3064\u304b\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u5411\u3051\u306b\u30d7\u30e9\u30b0\u30a4\u30f3\u3001\u30e9\u30c3\u30d1\u30fc\u3082\u63d0\u4f9b\u3055\u308c\u3066\u3044\u3066\u7d44\u307f\u8fbc\u307f\u3082\u7c21\u5358\u3067\u3059\u3002\u4eca\u56de\u306f\u3001Play2.2x\u3068Scala\u3092\u5229\u7528\u3057\u3066\u3001Twitter\u306e\u8a8d\u53ef\u3092\u884c\u3044\u307e\u3059\u3002\n\n## Twitter\u30a2\u30d7\u30ea\u3092\u767b\u9332\u3059\u308b\n\n[http://dev.twitter.com/](http://dev.twitter.com/)\u304b\u3089\u30a2\u30d7\u30ea\u306e\u767b\u9332\u3092\u884c\u3063\u3066\u3001`Api Key`,`Api Secret`\u3092\u53d6\u5f97\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u307e\u305f\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30afURL\u306e\u6307\u5b9a\u306f`${FQDN}/callback`\u3068\u3057\u307e\u3059\u3002\n\n## \u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3059\u308b\n\n`build.sbt`\u306b\u4f9d\u5b58\u95a2\u4fc2\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\n```scala\nlibraryDependencies += \"org.twitter4j\" % \"twitter4j-core\" % \"4.0.1\"\n\nresolvers ++= Seq(\n  \"Sonatype snapshots repository\" at \"https://oss.sonatype.org/content/repositories/snapshots/\"\n)\n\nlibraryDependencies ++= Seq(\n  \"org.pac4j\"   % \"play-pac4j_scala\" % \"1.2.0\",\n  \"org.pac4j\" % \"pac4j-oauth\" % \"1.5.1\"\n)\n```\n\n\u4eca\u56de\u3001TwitterAPI\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u3001[Twitter4J](http://twitter4j.org/ja/index.html)\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\n\nPlay\u306e`conf`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b`pac4j.conf`\u30d5\u30a1\u30a4\u30eb\u3092\u4ee5\u4e0b\u306e\u5185\u5bb9\u3067\u4f5c\u308a\u307e\u3059\u3002\n\n\n```json\n{\n    \"twitter\": {\n        \"api\": {\n            \"key\": \"\u5148\u307b\u3069\u53d6\u5f97\u3057\u305fapi key\",\n            \"secret\": \"\u5148\u307b\u3069\u53d6\u5f97\u3057\u305fsecret\",\n            \"callback\": \"Twitter\u30a2\u30d7\u30ea\u4f5c\u6210\u6642\u306b\u8a2d\u5b9a\u3057\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306eURL\"\n        }\n    }\n}\n```\n\n\u306a\u304a\u3001\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u30a2\u30d7\u30ea\u56fa\u6709\u60c5\u5831\u3092\u542b\u307f\u307e\u3059\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306a\u3069\u3092\u5229\u7528\u3059\u308b\u969b\u306b\u306f\u3001\u9069\u5207\u306b\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u7ba1\u7406\u3092\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3080\u90e8\u5206\u3092\u4f5c\u308b\n\n\u6b21\u306e\u3088\u3046\u306a`trait`\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n\n```scala\npackage models\n\nimport play.api.Configuration\nimport com.typesafe.config.ConfigFactory\nimport java.io.File\nimport models.TwitterAuthConfig.ConfigurationError\n\ntrait TwitterAuthConfig {\n\n  lazy val consumer : TwitterConsumer = {\n    val config = Configuration(ConfigFactory.parseFileAnySyntax(new File(\"conf/pac4j.conf\")))\n    (for {\n      key <- config.getString(\"twitter.api.key\")\n      secret <- config.getString(\"twitter.api.secret\")\n    } yield {\n      TwitterConsumer(key, secret)\n    }).getOrElse(throw new ConfigurationError(\"conf/pac4j.conf is not define or format is invalid\"))\n  }\n\n  lazy val callback = {\n    val config = Configuration(ConfigFactory.parseFileAnySyntax(new File(\"conf/pac4j.conf\")))\n    (for {\n      callback <- config.getString(\"twitter.api.callback\")\n    } yield {\n      callback\n    }).getOrElse(throw new ConfigurationError(\"conf/pac4j.conf is not define or format is invalid\"))\n  }\n}\n\nobject TwitterAuthConfig {\n  class ConfigurationError(m: String) extends RuntimeException(m)\n}\ncase class TwitterConsumer(key: String, secret: String)\n```\n\n## \u30a2\u30d7\u30ea\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\n\nPlay\u306e\u30a2\u30d7\u30ea\u304c\u7acb\u3061\u4e0a\u304c\u3063\u305f\u969b\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092Override\u3057\u307e\u3059\u3002`Global.scala`\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u3001\u4ee5\u4e0b\u306e\u5185\u5bb9\u3068\u3057\u307e\u3059\u3002\n\n\n```scala\npackage controllers\n\nimport play.api.GlobalSettings\nimport play.api.mvc.{ Results, SimpleResult, RequestHeader }\nimport scala.concurrent.Future\nimport org.pac4j.oauth.client.TwitterClient\nimport org.pac4j.core.client.Clients\nimport org.pac4j.play.Config\nimport models.twiter.TwitterAuthConfig\n\nobject Global extends GlobalSettings with TwitterAuthConfig {\n\n  override def onError(request: RequestHeader, ex: Throwable): Future[SimpleResult] = {\n    Future.successful(Results.InternalServerError)\n  }\n\n  override def onStart(app: play.api.Application): Unit = {\n    val ti = consumer\n    val tc = new TwitterClient(ti.key, ti.secret)\n    val cl = new Clients(callback, tc)\n    Config.setClients(cl)\n  }\n}\n```\n\n\u307e\u305f\u3001\u3053\u306e\u30af\u30e9\u30b9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u3088\u3046\u306b\u3001`application.conf`\u306b\u66f8\u304d\u8db3\u3057\u307e\u3059\u3002\n\n\n```scala\napplication.global=controllers.Global\n```\n\n## \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u8a2d\u5b9a\u3059\u308b\n\n`routes`\u306b\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n\n```\n# Authorication\nGET     /callback                   org.pac4j.play.CallbackController.callback()\nPOST    /callback                   org.pac4j.play.CallbackController.callback()\nGET     /casProxyCallback           org.pac4j.play.CallbackController.callback()\nPOST    /casProxyCallback           org.pac4j.play.CallbackController.callback()\nGET     /logout                     org.pac4j.play.CallbackController.logoutAndRedirect()\n```\n\n## \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5b9f\u88c5\u3059\u308b\n\n\u6700\u671f\u306b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u3001\n\n\n - Twitter\u306e\u8a8d\u53ef\u304c\u3055\u308c\u3066\u306a\u3044\u306a\u3089\u3001\u8a8d\u53efURL\u3092\u8868\u793a\n - Twitter\u306e\u8a8d\u53ef\u304c\u3042\u308b\u306a\u3089\u3001\u4e0a\u4f4d\u306e\u30c4\u30a4\u30fc\u30c8\u3092\u8868\u793a\n\n\u3059\u308b\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n`Application..scala`\u3092\u4ee5\u4e0b\u306e\u5185\u5bb9\u3068\u3057\u307e\u3059\u3002\n\n\n```scala\npackage controllers\n\nimport play.api.mvc._\nimport org.pac4j.play.scala.ScalaController\nimport org.pac4j.oauth.profile.twitter.TwitterProfile\nimport models.TwitterAuthConfig\nimport twitter4j.auth.AccessToken\nimport twitter4j.TwitterFactory\nimport scala.collection.JavaConversions._\n\nobject Application extends ScalaController with TwitterAuthConfig {\n\n  lazy val twitter = {\n    val tw = TwitterFactory.getSingleton\n    tw.setOAuthConsumer(consumer.key, consumer.secret)\n    tw\n  }\n\n  def index = Action { request =>\n    val newSession = getOrCreateSessionId(request)\n    val content = Option(getUserProfile(request)).fold(getRedirectAction(request, newSession, \"TwitterClient\", \"/\").getLocation) { p =>\n      val tp = p.asInstanceOf[TwitterProfile]\n      val ac = new AccessToken(tp.getAccessToken, tp.getAccessSecret)\n\n      twitter.setOAuthAccessToken(ac)\n      twitter.getUserTimeline.map(_.getText).mkString(\"\\n\")\n    }\n    Ok(content)\n  }\n}\n```\n\n## \u52d5\u304b\u3059\n\n\u3068\u308a\u3042\u3048\u305a`/`\u306b\u30a2\u30af\u30bb\u30b9\u3092\u3059\u308b\u3068\u8a8d\u53ef\u7528\u306eURL\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u306e\u30da\u30fc\u30b8\u3078\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002Twitter\u306e\u8a8d\u53ef\u3092\u4e86\u627f\u3059\u308c\u3070\u3001\u753b\u9762\u306b\u6700\u8fd1\u306e\u30c4\u30a4\u30fc\u30c8\u304c\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n\n\u4ee5\u4e0a\u3067\u3059\u3002\u304a\u75b2\u308c\u69d8\u3067\u3057\u305f\u3002\n\n## \u304a\u308f\u308a\u306b\n\n\u4eca\u56de\u306e\u5b9f\u88c5\u306f\u3042\u304f\u307e\u3067\u30b5\u30f3\u30d7\u30eb\u306a\u306e\u3067\u3001\u30a8\u30e9\u30fc\u51e6\u7406\u3068\u304b\u304c\u66d6\u6627\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u30e6\u30fc\u30b6\u306b\u3088\u3063\u3066\u8a8d\u53ef\u304c\u62d2\u5426\u3055\u308c\u305f\u5834\u5408\u306e\u51e6\u7406\u3068\u304b\u304c\u307e\u3060\u5fae\u5999\u3067\u3059\u3002\u307e\u305f\u3001pac4j\u3084playframework\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u306f\u975e\u5e38\u306b\u65e9\u3044\u3067\u3059\u3002\u81ea\u5206\u304c\u5229\u7528\u3057\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u6ce8\u610f\u3092\u6255\u3044\u3001\u516c\u5f0f\u30b5\u30a4\u30c8\u3084\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u307e\u3057\u3087\u3046\u3002\n", "tags": ["PlayFramework2.2", "pac4j1.5.1"]}