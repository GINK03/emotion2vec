{"tags": ["Swift", "DependencyInjection", "DI"], "context": "\n\n\u306f\u3058\u3081\u306b\nMinimal Cake Pattern1\u3068\u306f\u3001\u682a\u5f0f\u4f1a\u793e\u30c9\u30ef\u30f3\u30b4\u306e\u4e00\u90e8\u3067\u63a1\u7528\u3055\u308c\u3066\u3044\u308bDI\uff08Dependency Injection\uff09\u306e\u624b\u6cd5\u3067\u3042\u308b\u3002\u3053\u306eMinimal Cake Pattern\u306f\u4e3b\u306bScala\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u624b\u6cd5\u3067\u3042\u308b\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3053\u306e\u624b\u6cd5\u3092Swift\u306b\u79fb\u690d\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u7f6e\u304b\u308c\u3066\u3044\u308b\u3002\nhttps://github.com/y-yu/MinimalCakePatternInSwift\n\u3082\u3057\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u3001\u7591\u554f\u3084\u6539\u5584\u3059\u308b\u3079\u304d\u70b9\u3092\u898b\u3064\u3051\u305f\u5834\u5408\u306f\u3001\u6c17\u8efd\u306b\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u3067\u6307\u6458\u3057\u3066\u6b32\u3057\u3044\u3002\n\nMinimal Cake Pattern\u3068\u306f\uff1f\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306b\u8a73\u7d30\u306a\u89e3\u8aac\u304c\u3042\u308b\u306e\u3067\u3001\u307e\u305a\u306f\u3053\u3061\u3089\u3092\u8aad\u3093\u3067\u3044\u305f\u3060\u304d\u305f\u3044\u304c\u3001DI\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u304c\u3042\u308b\u5834\u5408\u306f\u98db\u3070\u3057\u3066\u3082\u3088\u3044\u3002\nScala\u306b\u304a\u3051\u308b\u6700\u9069\u306aDependency Injection\u306e\u65b9\u6cd5\u3092\u8003\u5bdf\u3059\u308b \u301c\u306a\u305c\u30c9\u30ef\u30f3\u30b4\u30a2\u30ab\u30a6\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0\u306e\u751f\u7523\u6027\u306f\u9ad8\u3044\u306e\u304b\u301c\n\nSwift\u306b\u3088\u308bMinimal Cake Pattern\n\u4f8b\u3068\u3057\u3066\u300c\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u305d\u306e\u5185\u5bb9\u3068\u8aad\u307f\u8fbc\u3093\u3060\u6642\u523b\u3092\u5408\u305b\u3066\u8fd4\u3059\u30b5\u30fc\u30d3\u30b9\u300d\u306e\u4f5c\u6210\u3092\u4f8b\u306b\u8aac\u660e\u3057\u3066\u3044\u304f\u3002\u307e\u305f\u3001\u3082\u3057\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306f\u3001\u9069\u5207\u306a\u30ed\u30b0\u3092\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308b\u3082\u306e\u3068\u3059\u308b\u3002\n\n\u6642\u523b\u3092\u8fd4\u3059\n\u73fe\u5728\u306e\u6642\u523b\u3092\u5358\u7d14\u306b\u53d6\u5f97\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u305d\u306e\u90e8\u5206\u306e\u30c6\u30b9\u30c8\u3092\u4f5c\u308b\u6642\u306b\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u6642\u9593\u306b\u3088\u3063\u3066\u306f\u6210\u529f\u3057\u305f\u308a\u5931\u6557\u3057\u305f\u308a\u3059\u308b\u4e0d\u5473\u3044\u30c6\u30b9\u30c8\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\u305d\u3053\u3067\u3001\u6642\u9593\u3092\u53d6\u5f97\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u308a\u3001DI\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\nClock.swift\nprotocol Clock {\n    func now() -> NSDate\n}\n\n\n\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306fnow\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3061\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u6642\u9593\u3092\u8fd4\u3059\u3082\u306e\u3068\u306a\u3063\u3066\u3044\u308b\u3002\u3053\u308c\u3092\u7528\u3044\u3066\u3001\u73fe\u5728\u306e\u6642\u523b\u3092\u8fd4\u3059\u5b9f\u88c5\u3068\u3001\u30c6\u30b9\u30c8\u7528\u306e\u5b9f\u88c5\u3092\u6b21\u306e\u3088\u3046\u306b\u305d\u308c\u305e\u308c\u5b9a\u7fa9\u3059\u308b\u3002\n\nClock.swift\nclass MixInSystemClock: Clock {\n    func now() -> NSDate {\n        return NSDate()\n    }\n}\n\nclass MixInMockClock: Clock {\n    let date: NSDate\n\n    init(_ str: String) {\n        let inputFormatter = NSDateFormatter()\n        inputFormatter.dateFormat = \"yyyy-MM-dd\"\n        date = inputFormatter.dateFromString(str)!\n    }\n\n    func now() -> NSDate {\n        return date\n    }\n}\n\n\nSystemClock\u306f\u73fe\u5728\u306e\u6642\u523b\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u304c\u3001MockClock\u306f\u5f15\u6570\u3067\u6642\u523b\u3092\u53d7\u3051\u53d6\u308a\u3001now\u30e1\u30bd\u30c3\u30c9\u306f\u5fc5\u305a\u305d\u308c\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u6b21\u306b\u3001\u3053\u306eClock\u3092\u7528\u3044\u308b\u3053\u3068\u3092\u793a\u3059\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3002\n\nClock.swift\nprotocol UsesClock {\n    var clock: Clock { get }\n}\n\n\n\n\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\n\u30ed\u30b0\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\u3079\u304d\u6642\u3082\u3042\u308b\u4e00\u65b9\u3067\u3001\u30c6\u30b9\u30c8\u306e\u969b\u306f\u30d5\u30a1\u30a4\u30ebIO\u306e\u5931\u6557\u306b\u3088\u308a\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3059\u308b\u3053\u3068\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u30ed\u30ac\u30fc\u304c\u547c\u3070\u308c\u305f\u3053\u3068\u3060\u3051\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3001\u30ed\u30b0\u306f\u6a19\u6e96\u51fa\u529b\u306b\u51fa\u305b\u3070\u5341\u5206\u3067\u3042\u308b\u3053\u3068\u304c\u3042\u308b\u3002\u3053\u306e\u3088\u3046\u306b\u3001\u3044\u308d\u3044\u308d\u306a\u5b9f\u88c5\u304c\u8003\u3048\u3089\u308c\u308b\u3053\u3068\u304b\u3089\u3001\u30ed\u30ac\u30fc\u306b\u3064\u3044\u3066\u3082DI\u3067\u304d\u305f\u65b9\u304c\u3088\u3044\u3002Clock\u3068\u540c\u69d8\u306b\u3001\u307e\u305a\u306f\u30ed\u30ac\u30fc\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3002\n\nLogger.swift\nprotocol Logger {\n    func info(m: String) -> Void\n\n    func error(m: String) -> Void\n}\n\n\n\u305d\u3057\u3066\u3001\u4eca\u56de\u306f\u6a19\u6e96\u51fa\u529b\u306b\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u5b9f\u88c5\u3060\u3051\u3092\u7528\u610f\u3059\u308b\u3002\n\nLogger.swift\nclass MixInPrintLogger: Logger {\n    func info(m: String) -> Void {\n        print(\"Info: \" + m)\n    }\n\n    func error(m: String) -> Void {\n        print(\"Error: \" + m)\n    }\n}\n\n\n\u6700\u5f8c\u306b\u3001\u3053\u306e\u30ed\u30ac\u30fc\u3092\u4f7f\u3046\u3053\u3068\u3092\u8868\u3059\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\nLogger.swift\nprotocol UsesLogger {\n    var logger: Logger { get }\n}\n\n\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u30b5\u30fc\u30d3\u30b9\n\u3055\u3066\u3001\u6642\u523b\u3092\u53d6\u5f97\u3059\u308b\u90e8\u5206\u3068\u30ed\u30b0\u3092\u51fa\u3059\u90e8\u5206\u304c\u5b8c\u6210\u3057\u305f\u306e\u3067\u3001\u6b21\u306f\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u3002\u307e\u305a\u3001\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u5185\u5bb9\u3068\u6642\u523b\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9readWithDate\u3092\u6301\u3064\u3053\u3068\u3092\u793a\u3059\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b2\u3002\n\nReadFileService.swift\nprotocol ReadFileService: UsesClock, UsesLogger {\n    func readWithDate(fileName: String) -> Optional<(NSDate, String)>\n}\n\n\n\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306fUsesClock\u3068UsesLogger\u3092\u5b9f\u88c5\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u3001\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u306b\u3082\u3057DI\u304c\u884c\u308f\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u5931\u6557\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002Minimal Cake Pattern\u306e\u3088\u3046\u306a\u9759\u7684\u306aDI\u306f\u3001\u3053\u306e\u3088\u3046\u306bDI\u306b\u5931\u6557\u3057\u305f\u3053\u3068\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u30bf\u30a4\u30e0\u306b\u6559\u3048\u3066\u304f\u308c\u308b\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308b\u3002\u305d\u3057\u3066\u3001readWithDate\u30e1\u30bd\u30c3\u30c9\u306e\u5185\u5bb9\u3092\u6b21\u306e\u3088\u3046\u306b\u4e0e\u3048\u308b\u3002\n\nReadFileService.swift\nextension ReadFileService {\n    func readWithDate(fileName: String) -> Optional<(NSDate, String)> {\n        if let dir : NSString = NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory.DocumentDirectory, NSSearchPathDomainMask.AllDomainsMask, true).first {\n\n            let pathFileName = dir.stringByAppendingPathComponent(fileName)\n            logger.info(pathFileName)\n\n            do {\n                let text = try NSString(contentsOfFile: pathFileName, encoding: NSUTF8StringEncoding)\n                return (clock.now(), text as String)\n            } catch {\n                logger.error(\"fail to read the file!\")\n                return Optional.None\n            }\n        } else {\n            logger.error(\"fail to search directory to read the file!\")\n            return Optional.None\n        }\n    }\n}\n\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u306f\u3001UsesClock\u3068UsesLogger\u306b\u3088\u308a\u3001\u6642\u523b\u306e\u53d6\u5f97\u3068\u30ed\u30b0\u306e\u51fa\u529b\u304c\u62bd\u8c61\u7684\u306b\u884c\u3048\u308b\u3002\u3055\u3066\u3001\u3053\u308c\u306b\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u3092DI\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\nReadFileService.swift\nclass MixInReadFileService: ReadFileService {\n    var clock: Clock = MixInSystemClock()\n    var logger: Logger = MixInPrintLogger()\n}\n\nclass MixInReadFileServiceTest: ReadFileService {\n    var clock: Clock = MixInMockClock(\"2016-06-18\")\n    var logger: Logger = MixInPrintLogger()\n}\n\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\u3067\u3042\u308bMixInReadFileService\u3067\u306f\u73fe\u5728\u306e\u6642\u523b\u3092\u8fd4\u3059MixInSystemClock\u304cDI\u3055\u308c\u3066\u3044\u308b\u3002\u4e00\u65b9\u3067\u3001\u30c6\u30b9\u30c8\u3067\u4f7f\u3046MixInReadFileServiceTest\u306fMixInMockClock\u3067\u5e38\u306b\u73fe\u5728\u6642\u523b\u304c2016\u5e746\u670818\u65e5\u3068\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u3067\u3001\u30c6\u30b9\u30c8\u304c\u6642\u9593\u306b\u3088\u3063\u3066\u6210\u529f\u3057\u305f\u308a\u5931\u6557\u3057\u305f\u308a\u3059\u308b\u3068\u3044\u3046\u4e8b\u614b\u3092\u56de\u907f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nReadFileService\u3092\u4f7f\u3046MainService\n\n\u3055\u3066\u3001ReadFileService\u3092\u4f7f\u3063\u3066test.txt\u306e\u4e2d\u8eab\u3092\u8868\u793aMainService\u3092\u8003\u3048\u308b\u3002\u6b21\u306e\u3088\u3046\u306b\u3001\u307e\u305a\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\nmain.swift\nprotocol MainService: UsesReadFileService {\n    func main() -> Void\n}\n\n\n\u305d\u3057\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5185\u5bb9\u3092\u4e0e\u3048\u308b\u3002\n\nmain.swift\nextension MainService {\n    func main() -> Void {\n        let opt = readFileService.readWithDate(\"test.txt\")\n        _ = opt.map({(f: (NSDate, String)) -> Void in\n            print(f.0)\n            print(f.1)\n        })\n    }\n}\n\n\n\u305d\u3057\u3066\u3001\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u3092DI\u3057\u3066\u7d42\u4e86\u3067\u3042\u308b\u3002\n\nmain.swift\nclass MixInMainService: MainService {\n    var readFileService: ReadFileService = MixInReadFileService()\n}\n\n\n\nMainService\u3092\u4f7f\u3046\nMainService\u306e\u5b9f\u88c5\u3067\u3042\u308bMixInMainService\u3092\u6b21\u306e\u3088\u3046\u306b\u4f7f\u3046\u3002\n\nmain.swift\nMixInMainService().main()\n\n\n\u3082\u3057test.txt\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u51fa\u529b\u304c\u5f97\u3089\u308c\u308b\u3002\nInfo: /Users/hikaru_yoshimura/Documents/test.txt\n2016-06-18 10:24:20 +0000\nfoobar\nhogehoge\n\n\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b\u30a8\u30e9\u30fc\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u308b\u3002\nInfo: /Users/hikaru_yoshimura/Documents/test.txt\nError: fail to read the file!\n\n\n\u307e\u3068\u3081\n\u3053\u306e\u3088\u3046\u306b\u3001Minimal Cake Pattern\u3092Swift\u3067\u3082\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002DI\u306b\u3064\u3044\u3066\u3001Swift\u754c\u9688\u3067\u3082\u8b70\u8ad6\u304c\u8d77\u304d\u308c\u3070\u3088\u3044\u3068\u601d\u3046\u3002\n\n\u53c2\u8003\u6587\u732e\n\nScala\u306b\u304a\u3051\u308b\u6700\u9069\u306aDependency Injection\u306e\u65b9\u6cd5\u3092\u8003\u5bdf\u3059\u308b \u301c\u306a\u305c\u30c9\u30ef\u30f3\u30b4\u30a2\u30ab\u30a6\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0\u306e\u751f\u7523\u6027\u306f\u9ad8\u3044\u306e\u304b\u301c\nMix-in injection \u306b\u304a\u3051\u308b\u6700\u5f37\u306e\u30c6\u30b9\u30c8\u7528\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u69cb\u7bc9\u30d1\u30bf\u30fc\u30f3\nMinimal Cake Pattern \u306e\u304a\u4f5c\u6cd5\nSwift2\u3067\u9759\u7684\u306aDI\u3092\u5b9f\u73fe\u3059\u308b\u8b0e\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\n\n\n\n\u3053\u306e\u624b\u6cd5\u306f\u3001\u201cmix-in injection\u201d\u3068\u3082\u547c\u3070\u308c\u3066\u3044\u308b\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306fMinimal Cake Pattern\u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3059\u308b\u3002\u00a0\u21a9\n\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u3082\u3057\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u305f\u3089None\u3092\u8fd4\u3059\u3002\u00a0\u21a9\n\n\n\n# \u306f\u3058\u3081\u306b\n\nMinimal Cake Pattern[^mcp]\u3068\u306f\u3001\u682a\u5f0f\u4f1a\u793e\u30c9\u30ef\u30f3\u30b4\u306e\u4e00\u90e8\u3067\u63a1\u7528\u3055\u308c\u3066\u3044\u308bDI\uff08Dependency Injection\uff09\u306e\u624b\u6cd5\u3067\u3042\u308b\u3002\u3053\u306eMinimal Cake Pattern\u306f\u4e3b\u306bScala\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u624b\u6cd5\u3067\u3042\u308b\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3053\u306e\u624b\u6cd5\u3092Swift\u306b\u79fb\u690d\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u7f6e\u304b\u308c\u3066\u3044\u308b\u3002\n\nhttps://github.com/y-yu/MinimalCakePatternInSwift\n\n\u3082\u3057\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u3001\u7591\u554f\u3084\u6539\u5584\u3059\u308b\u3079\u304d\u70b9\u3092\u898b\u3064\u3051\u305f\u5834\u5408\u306f\u3001\u6c17\u8efd\u306b\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u3067\u6307\u6458\u3057\u3066\u6b32\u3057\u3044\u3002\n\n[^mcp]: \u3053\u306e\u624b\u6cd5\u306f\u3001\u201cmix-in injection\u201d\u3068\u3082\u547c\u3070\u308c\u3066\u3044\u308b\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306fMinimal Cake Pattern\u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\n# Minimal Cake Pattern\u3068\u306f\uff1f\n\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306b\u8a73\u7d30\u306a\u89e3\u8aac\u304c\u3042\u308b\u306e\u3067\u3001\u307e\u305a\u306f\u3053\u3061\u3089\u3092\u8aad\u3093\u3067\u3044\u305f\u3060\u304d\u305f\u3044\u304c\u3001DI\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u304c\u3042\u308b\u5834\u5408\u306f\u98db\u3070\u3057\u3066\u3082\u3088\u3044\u3002\n\n[Scala\u306b\u304a\u3051\u308b\u6700\u9069\u306aDependency Injection\u306e\u65b9\u6cd5\u3092\u8003\u5bdf\u3059\u308b \u301c\u306a\u305c\u30c9\u30ef\u30f3\u30b4\u30a2\u30ab\u30a6\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0\u306e\u751f\u7523\u6027\u306f\u9ad8\u3044\u306e\u304b\u301c](http://qiita.com/pab_tech/items/1c0bdbc8a61949891f1f)\n\n# Swift\u306b\u3088\u308bMinimal Cake Pattern\n\n\u4f8b\u3068\u3057\u3066\u300c\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u305d\u306e\u5185\u5bb9\u3068\u8aad\u307f\u8fbc\u3093\u3060\u6642\u523b\u3092\u5408\u305b\u3066\u8fd4\u3059\u30b5\u30fc\u30d3\u30b9\u300d\u306e\u4f5c\u6210\u3092\u4f8b\u306b\u8aac\u660e\u3057\u3066\u3044\u304f\u3002\u307e\u305f\u3001\u3082\u3057\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u305f\u5834\u5408\u306f\u3001\u9069\u5207\u306a\u30ed\u30b0\u3092\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308b\u3082\u306e\u3068\u3059\u308b\u3002\n\n## \u6642\u523b\u3092\u8fd4\u3059\n\n\u73fe\u5728\u306e\u6642\u523b\u3092\u5358\u7d14\u306b\u53d6\u5f97\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u305d\u306e\u90e8\u5206\u306e\u30c6\u30b9\u30c8\u3092\u4f5c\u308b\u6642\u306b\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u6642\u9593\u306b\u3088\u3063\u3066\u306f\u6210\u529f\u3057\u305f\u308a\u5931\u6557\u3057\u305f\u308a\u3059\u308b\u4e0d\u5473\u3044\u30c6\u30b9\u30c8\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\u305d\u3053\u3067\u3001\u6642\u9593\u3092\u53d6\u5f97\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u308a\u3001DI\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n```swift:Clock.swift\nprotocol Clock {\n    func now() -> NSDate\n}\n```\n\n\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f`now`\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3061\u3001\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u6642\u9593\u3092\u8fd4\u3059\u3082\u306e\u3068\u306a\u3063\u3066\u3044\u308b\u3002\u3053\u308c\u3092\u7528\u3044\u3066\u3001\u73fe\u5728\u306e\u6642\u523b\u3092\u8fd4\u3059\u5b9f\u88c5\u3068\u3001\u30c6\u30b9\u30c8\u7528\u306e\u5b9f\u88c5\u3092\u6b21\u306e\u3088\u3046\u306b\u305d\u308c\u305e\u308c\u5b9a\u7fa9\u3059\u308b\u3002\n\n```swift:Clock.swift\nclass MixInSystemClock: Clock {\n    func now() -> NSDate {\n        return NSDate()\n    }\n}\n\nclass MixInMockClock: Clock {\n    let date: NSDate\n    \n    init(_ str: String) {\n        let inputFormatter = NSDateFormatter()\n        inputFormatter.dateFormat = \"yyyy-MM-dd\"\n        date = inputFormatter.dateFromString(str)!\n    }\n    \n    func now() -> NSDate {\n        return date\n    }\n}\n```\n\n`SystemClock`\u306f\u73fe\u5728\u306e\u6642\u523b\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u304c\u3001`MockClock`\u306f\u5f15\u6570\u3067\u6642\u523b\u3092\u53d7\u3051\u53d6\u308a\u3001`now`\u30e1\u30bd\u30c3\u30c9\u306f\u5fc5\u305a\u305d\u308c\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\u6b21\u306b\u3001\u3053\u306e`Clock`\u3092\u7528\u3044\u308b\u3053\u3068\u3092\u793a\u3059\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3002\n\n```swift:Clock.swift\nprotocol UsesClock {\n    var clock: Clock { get }\n}\n```\n\n## \u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\n\n\u30ed\u30b0\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3059\u308b\u3079\u304d\u6642\u3082\u3042\u308b\u4e00\u65b9\u3067\u3001\u30c6\u30b9\u30c8\u306e\u969b\u306f\u30d5\u30a1\u30a4\u30ebIO\u306e\u5931\u6557\u306b\u3088\u308a\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3059\u308b\u3053\u3068\u3092\u9632\u3050\u305f\u3081\u306b\u3001\u30ed\u30ac\u30fc\u304c\u547c\u3070\u308c\u305f\u3053\u3068\u3060\u3051\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3001\u30ed\u30b0\u306f\u6a19\u6e96\u51fa\u529b\u306b\u51fa\u305b\u3070\u5341\u5206\u3067\u3042\u308b\u3053\u3068\u304c\u3042\u308b\u3002\u3053\u306e\u3088\u3046\u306b\u3001\u3044\u308d\u3044\u308d\u306a\u5b9f\u88c5\u304c\u8003\u3048\u3089\u308c\u308b\u3053\u3068\u304b\u3089\u3001\u30ed\u30ac\u30fc\u306b\u3064\u3044\u3066\u3082DI\u3067\u304d\u305f\u65b9\u304c\u3088\u3044\u3002`Clock`\u3068\u540c\u69d8\u306b\u3001\u307e\u305a\u306f\u30ed\u30ac\u30fc\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3002\n\n```swift:Logger.swift\nprotocol Logger {\n    func info(m: String) -> Void\n    \n    func error(m: String) -> Void\n}\n```\n\n\u305d\u3057\u3066\u3001\u4eca\u56de\u306f\u6a19\u6e96\u51fa\u529b\u306b\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u5b9f\u88c5\u3060\u3051\u3092\u7528\u610f\u3059\u308b\u3002\n\n```swift:Logger.swift\nclass MixInPrintLogger: Logger {\n    func info(m: String) -> Void {\n        print(\"Info: \" + m)\n    }\n    \n    func error(m: String) -> Void {\n        print(\"Error: \" + m)\n    }\n}\n```\n\n\u6700\u5f8c\u306b\u3001\u3053\u306e\u30ed\u30ac\u30fc\u3092\u4f7f\u3046\u3053\u3068\u3092\u8868\u3059\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```swift:Logger.swift\nprotocol UsesLogger {\n    var logger: Logger { get }\n}\n```\n\n## \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u30b5\u30fc\u30d3\u30b9\n\n\u3055\u3066\u3001\u6642\u523b\u3092\u53d6\u5f97\u3059\u308b\u90e8\u5206\u3068\u30ed\u30b0\u3092\u51fa\u3059\u90e8\u5206\u304c\u5b8c\u6210\u3057\u305f\u306e\u3067\u3001\u6b21\u306f\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u3002\u307e\u305a\u3001\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306f\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u5185\u5bb9\u3068\u6642\u523b\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9`readWithDate`\u3092\u6301\u3064\u3053\u3068\u3092\u793a\u3059\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b[^option]\u3002\n\n```swift:ReadFileService.swift\nprotocol ReadFileService: UsesClock, UsesLogger {\n    func readWithDate(fileName: String) -> Optional<(NSDate, String)>\n}\n```\n\n[^option]: \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u3082\u3057\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u305f\u3089`None`\u3092\u8fd4\u3059\u3002\n\n\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f`UsesClock`\u3068`UsesLogger`\u3092\u5b9f\u88c5\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u3001\u3053\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u306b\u3082\u3057DI\u304c\u884c\u308f\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u5931\u6557\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002Minimal Cake Pattern\u306e\u3088\u3046\u306a\u9759\u7684\u306aDI\u306f\u3001\u3053\u306e\u3088\u3046\u306bDI\u306b\u5931\u6557\u3057\u305f\u3053\u3068\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u30bf\u30a4\u30e0\u306b\u6559\u3048\u3066\u304f\u308c\u308b\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308b\u3002\u305d\u3057\u3066\u3001`readWithDate`\u30e1\u30bd\u30c3\u30c9\u306e\u5185\u5bb9\u3092\u6b21\u306e\u3088\u3046\u306b\u4e0e\u3048\u308b\u3002\n\n```swift:ReadFileService.swift\nextension ReadFileService {\n    func readWithDate(fileName: String) -> Optional<(NSDate, String)> {\n        if let dir : NSString = NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory.DocumentDirectory, NSSearchPathDomainMask.AllDomainsMask, true).first {\n            \n            let pathFileName = dir.stringByAppendingPathComponent(fileName)\n            logger.info(pathFileName)\n            \n            do {\n                let text = try NSString(contentsOfFile: pathFileName, encoding: NSUTF8StringEncoding)\n                return (clock.now(), text as String)\n            } catch {\n                logger.error(\"fail to read the file!\")\n                return Optional.None\n            }\n        } else {\n            logger.error(\"fail to search directory to read the file!\")\n            return Optional.None\n        }\n    }\n}\n```\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u306f\u3001`UsesClock`\u3068`UsesLogger`\u306b\u3088\u308a\u3001\u6642\u523b\u306e\u53d6\u5f97\u3068\u30ed\u30b0\u306e\u51fa\u529b\u304c\u62bd\u8c61\u7684\u306b\u884c\u3048\u308b\u3002\u3055\u3066\u3001\u3053\u308c\u306b\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u3092DI\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n```swift:ReadFileService.swift\nclass MixInReadFileService: ReadFileService {\n    var clock: Clock = MixInSystemClock()\n    var logger: Logger = MixInPrintLogger()\n}\n\nclass MixInReadFileServiceTest: ReadFileService {\n    var clock: Clock = MixInMockClock(\"2016-06-18\")\n    var logger: Logger = MixInPrintLogger()\n}\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5b9f\u88c5\u3067\u3042\u308b`MixInReadFileService`\u3067\u306f\u73fe\u5728\u306e\u6642\u523b\u3092\u8fd4\u3059`MixInSystemClock`\u304cDI\u3055\u308c\u3066\u3044\u308b\u3002\u4e00\u65b9\u3067\u3001\u30c6\u30b9\u30c8\u3067\u4f7f\u3046`MixInReadFileServiceTest`\u306f`MixInMockClock`\u3067\u5e38\u306b\u73fe\u5728\u6642\u523b\u304c2016\u5e746\u670818\u65e5\u3068\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u3067\u3001\u30c6\u30b9\u30c8\u304c\u6642\u9593\u306b\u3088\u3063\u3066\u6210\u529f\u3057\u305f\u308a\u5931\u6557\u3057\u305f\u308a\u3059\u308b\u3068\u3044\u3046\u4e8b\u614b\u3092\u56de\u907f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n## `ReadFileService`\u3092\u4f7f\u3046`MainService`\n\n\u3055\u3066\u3001`ReadFileService`\u3092\u4f7f\u3063\u3066`test.txt`\u306e\u4e2d\u8eab\u3092\u8868\u793a`MainService`\u3092\u8003\u3048\u308b\u3002\u6b21\u306e\u3088\u3046\u306b\u3001\u307e\u305a\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```swift:main.swift\nprotocol MainService: UsesReadFileService {\n    func main() -> Void\n}\n```\n\n\u305d\u3057\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u5185\u5bb9\u3092\u4e0e\u3048\u308b\u3002\n\n```swift:main.swift\nextension MainService {\n    func main() -> Void {\n        let opt = readFileService.readWithDate(\"test.txt\")\n        _ = opt.map({(f: (NSDate, String)) -> Void in\n            print(f.0)\n            print(f.1)\n        })\n    }\n}\n```\n\n\u305d\u3057\u3066\u3001\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u3092DI\u3057\u3066\u7d42\u4e86\u3067\u3042\u308b\u3002\n\n```swift:main.swift\nclass MixInMainService: MainService {\n    var readFileService: ReadFileService = MixInReadFileService()\n}\n```\n\n## `MainService`\u3092\u4f7f\u3046\n\n`MainService`\u306e\u5b9f\u88c5\u3067\u3042\u308b`MixInMainService`\u3092\u6b21\u306e\u3088\u3046\u306b\u4f7f\u3046\u3002\n\n```swift:main.swift\nMixInMainService().main()\n```\n\n\u3082\u3057`test.txt`\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u51fa\u529b\u304c\u5f97\u3089\u308c\u308b\u3002\n\n```\nInfo: /Users/hikaru_yoshimura/Documents/test.txt\n2016-06-18 10:24:20 +0000\nfoobar\nhogehoge\n```\n\n\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b\u30a8\u30e9\u30fc\u30ed\u30b0\u304c\u51fa\u529b\u3055\u308c\u308b\u3002\n\n```\nInfo: /Users/hikaru_yoshimura/Documents/test.txt\nError: fail to read the file!\n```\n\n# \u307e\u3068\u3081\n\n\u3053\u306e\u3088\u3046\u306b\u3001Minimal Cake Pattern\u3092Swift\u3067\u3082\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002DI\u306b\u3064\u3044\u3066\u3001Swift\u754c\u9688\u3067\u3082\u8b70\u8ad6\u304c\u8d77\u304d\u308c\u3070\u3088\u3044\u3068\u601d\u3046\u3002\n\n# \u53c2\u8003\u6587\u732e\n\n- [Scala\u306b\u304a\u3051\u308b\u6700\u9069\u306aDependency Injection\u306e\u65b9\u6cd5\u3092\u8003\u5bdf\u3059\u308b \u301c\u306a\u305c\u30c9\u30ef\u30f3\u30b4\u30a2\u30ab\u30a6\u30f3\u30c8\u30b7\u30b9\u30c6\u30e0\u306e\u751f\u7523\u6027\u306f\u9ad8\u3044\u306e\u304b\u301c](http://qiita.com/pab_tech/items/1c0bdbc8a61949891f1f)\n- [Mix-in injection \u306b\u304a\u3051\u308b\u6700\u5f37\u306e\u30c6\u30b9\u30c8\u7528\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u69cb\u7bc9\u30d1\u30bf\u30fc\u30f3](http://qiita.com/tayama0324/items/6ff7cb937a4283789ed8)\n- [Minimal Cake Pattern \u306e\u304a\u4f5c\u6cd5](http://qiita.com/tayama0324/items/7f87ee3672b15dd68016)\n- [Swift2\u3067\u9759\u7684\u306aDI\u3092\u5b9f\u73fe\u3059\u308b\u8b0e\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9](http://qiita.com/gomi_ningen/items/3b977fbc83bcac2fc6f2)\n"}