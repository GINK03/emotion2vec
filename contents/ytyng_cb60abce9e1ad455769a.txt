{"context": " More than 1 year has passed since last update.\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nhttp://qiita.com/uemura/items/a3a0937f77494e62213c\nimport \u3057\u3066\u4f7f\u3046\u3053\u3068\u3092\u60f3\u5b9a\n\u30b3\u30de\u30f3\u30c9\u304b\u3089\u4f7f\u3046\u3068\n$ ./cert_expires.py example.com google.com\nexample.com: 1093 days\ngoogle.com: 76 days\n\n\nsert_expires.py\n#!/usr/bin/env python\n\n\nimport sys\nimport re\nimport subprocess\nimport datetime\n\n\ndef parse_result_date_string(date_string):\n    \"\"\"\n    convert date string to datetime\n    >>> date_string = \"Feb  2 05:47:50 2015 GMT\"\n    >>> d = parse_result_date_string(date_string)\n    >>> d\n    datetime.datetime(2015, 2, 2, 5, 47, 50)\n    \"\"\"\n    d = datetime.datetime.strptime(date_string, '%b %d %H:%M:%S %Y %Z')\n    return d\n\n\nre_start = re.compile(r'Not Before: (.+)')\nre_end = re.compile(r'Not After : (.+)')\n\n\ndef get_date_strings_from_result(result):\n    \"\"\"\n    :return: cert start date, cert expire date\n    >>> text = \"Not Before: Feb  2 05:47:47 2015 GMT\\\\n\" \\\\\n    ...        \"Not After : Feb  4 16:03:29 2016 GMT\"\n    >>> get_date_strings_from_result(text)\n    ('Feb  2 05:47:47 2015 GMT', 'Feb  4 16:03:29 2016 GMT')\n    \"\"\"\n    rr_start = re_start.search(result)\n    rr_end = re_end.search(result)\n    return rr_start.group(1) if rr_start else None, \\\n           rr_end.group(1) if rr_end else None\n\n\ndef get_cert_start_expire_date(domain):\n    \"\"\"\n    :return: cert start date, cert expire date\n    \"\"\"\n    command = \"openssl s_client -connect {}:443 < /dev/null \" \\\n              \"2> /dev/null | openssl x509 -text | grep Not\"\n\n    command = command.format(domain)\n    out = subprocess.check_output(command, shell=True)\n    ss, es = get_date_strings_from_result(out)\n    return parse_result_date_string(ss), parse_result_date_string(es)\n\n\ndef get_cert_expire_delta(domain):\n    \"\"\"\n    time delta cert expire date and now\n    \"\"\"\n    start_date, expire_date = get_cert_start_expire_date(domain)\n    return expire_date - datetime.datetime.now()\n\n\ndef main():\n    for domain in sys.argv[1:]:\n        delta = get_cert_expire_delta(domain)\n        print('{}: {} days'.format(domain, delta.days))\n\n\nif __name__ == '__main__':\n    main()\n\n\n\n\n\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nhttp://qiita.com/uemura/items/a3a0937f77494e62213c\n\nimport \u3057\u3066\u4f7f\u3046\u3053\u3068\u3092\u60f3\u5b9a\n\n\u30b3\u30de\u30f3\u30c9\u304b\u3089\u4f7f\u3046\u3068\n\n```shell-session\n$ ./cert_expires.py example.com google.com\nexample.com: 1093 days\ngoogle.com: 76 days\n```\n\n```python:sert_expires.py \n#!/usr/bin/env python\n\n\nimport sys\nimport re\nimport subprocess\nimport datetime\n\n\ndef parse_result_date_string(date_string):\n    \"\"\"\n    convert date string to datetime\n    >>> date_string = \"Feb  2 05:47:50 2015 GMT\"\n    >>> d = parse_result_date_string(date_string)\n    >>> d\n    datetime.datetime(2015, 2, 2, 5, 47, 50)\n    \"\"\"\n    d = datetime.datetime.strptime(date_string, '%b %d %H:%M:%S %Y %Z')\n    return d\n\n\nre_start = re.compile(r'Not Before: (.+)')\nre_end = re.compile(r'Not After : (.+)')\n\n\ndef get_date_strings_from_result(result):\n    \"\"\"\n    :return: cert start date, cert expire date\n    >>> text = \"Not Before: Feb  2 05:47:47 2015 GMT\\\\n\" \\\\\n    ...        \"Not After : Feb  4 16:03:29 2016 GMT\"\n    >>> get_date_strings_from_result(text)\n    ('Feb  2 05:47:47 2015 GMT', 'Feb  4 16:03:29 2016 GMT')\n    \"\"\"\n    rr_start = re_start.search(result)\n    rr_end = re_end.search(result)\n    return rr_start.group(1) if rr_start else None, \\\n           rr_end.group(1) if rr_end else None\n\n\ndef get_cert_start_expire_date(domain):\n    \"\"\"\n    :return: cert start date, cert expire date\n    \"\"\"\n    command = \"openssl s_client -connect {}:443 < /dev/null \" \\\n              \"2> /dev/null | openssl x509 -text | grep Not\"\n\n    command = command.format(domain)\n    out = subprocess.check_output(command, shell=True)\n    ss, es = get_date_strings_from_result(out)\n    return parse_result_date_string(ss), parse_result_date_string(es)\n\n\ndef get_cert_expire_delta(domain):\n    \"\"\"\n    time delta cert expire date and now\n    \"\"\"\n    start_date, expire_date = get_cert_start_expire_date(domain)\n    return expire_date - datetime.datetime.now()\n\n\ndef main():\n    for domain in sys.argv[1:]:\n        delta = get_cert_expire_delta(domain)\n        print('{}: {} days'.format(domain, delta.days))\n\n\nif __name__ == '__main__':\n    main()\n```\n", "tags": ["Python", "openssl"]}