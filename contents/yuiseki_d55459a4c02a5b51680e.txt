{"context": " More than 1 year has passed since last update.\nsushi.pde\nimport org.jbox2d.p5.*;\nimport org.jbox2d.common.*;\nimport org.jbox2d.collision.*;\nimport org.jbox2d.dynamics.*;\nimport org.jbox2d.dynamics.Body;\nimport org.jbox2d.dynamics.BodyDef;\nimport org.jbox2d.dynamics.joints.*;\nimport org.jbox2d.dynamics.contacts.*;\n\nPhysics physics;\nBody circle;\nclass UserData {\n  PImage img;\n}\nUserData data;\nPImage toro_img, engawa_img, kappa_img, anago_img;\n\nvoid setup() {\n  size(800, 500);\n  imageMode(CENTER);\n  toro_img = loadImage(\"sushi2.png\");\n  engawa_img = loadImage(\"engawas.png\");\n  kappa_img = loadImage(\"kappa.png\");\n  anago_img = loadImage(\"anago.png\");\n  frameRate(60);\n  InitScene();\n}\nvoid draw() {\n  background(255);\n  if(frameCount < 300) {\n  if (frameCount % 30 == 0) {\n    createSushi(300, 50, toro_img);\n    createSushi(370, 50, kappa_img);\n    createSushi(450, 50, engawa_img);\n  } else if (frameCount % 20 == 0) {\n    createSushi(310, 50, anago_img);\n  } else if (frameCount % 10 == 0) {\n    createSushi(320, 50, toro_img);\n    createSushi(450, 50, engawa_img);\n  } else if (frameCount % 5 == 0) {\n    createSushi(320, 50, toro_img);\n  }\n  }\n  physics.setRestitution(random(0,0.9)); \n}\n\nvoid mousePressed() {\n  createSushi(mouseX, mouseY, toro_img);\n}\nvoid createSushi(int X, int Y, PImage img) {\n  circle=physics.createCircle(X, Y,20);\n  data = new UserData();\n  data.img = img;\n  circle.setUserData(data);\n  circle.setAngularVelocity(random(-10,10));\n}\n\nvoid keyPressed() {\n  physics.destroy();\n  physics = null;\n  InitScene();\n}\n\n\n\nvoid InitScene() {\n  float gravX = 0.0;                 \n  float gravY = -100.0;\n  float AABBWidth = 2*width;   \n  float AABBHeight = 2*height;\n  float borderBoxWidth = width;      \n  float borderBoxHeight = height;\n  float pixelsPerMeter = 30;\n  physics = new Physics(this, width, height,\n                      gravX, gravY,\n                  AABBWidth, AABBHeight,\n                  borderBoxWidth, borderBoxHeight,\n                  pixelsPerMeter);\n\n  //physics = new Physics(this, 800, 500);\n\n  physics.setDensity(1.0f);\n  physics.setCustomRenderingMethod(this, \"custom\");\n\n}\n\nvoid custom (World w) {\n  smooth();\n  for (Body circle = physics.getWorld().getBodyList(); circle != null; circle = circle.getNext())\n  {\n    org.jbox2d.collision.Shape shape;\n    for (shape = circle.getShapeList(); shape != null; shape = shape.getNext())\n    {\n      if (shape.getType() == ShapeType.CIRCLE_SHAPE)\n      {\n        fill(0,0,0,0);\n        stroke(0,0,0,0);\n        sushiDraw(circle, shape);\n      }\n    }\n  }\n}\n\nvoid sushiDraw(Body body, org.jbox2d.collision.Shape shape) {\n  CircleShape circle = (CircleShape) shape;\n  Vec2 center = circle.getLocalPosition();\n  Vec2 wpoint = physics.worldToScreen(body.getWorldPoint(center));\n  float radius = physics.worldToScreen(circle.getRadius());\n  ellipse(wpoint.x,wpoint.y,radius*2,radius*2);\n  if(radius == 20)\n  {\n    pushMatrix();\n    translate(wpoint.x+1,wpoint.y+1);\n    //rotate(random(-10,10));\n    UserData data = (UserData) body.getUserData();\n    image(data.img,0,0);\n    popMatrix();\n  }\n}\n\n\n```java:sushi.pde\nimport org.jbox2d.p5.*;\nimport org.jbox2d.common.*;\nimport org.jbox2d.collision.*;\nimport org.jbox2d.dynamics.*;\nimport org.jbox2d.dynamics.Body;\nimport org.jbox2d.dynamics.BodyDef;\nimport org.jbox2d.dynamics.joints.*;\nimport org.jbox2d.dynamics.contacts.*;\n\nPhysics physics;\nBody circle;\nclass UserData {\n  PImage img;\n}\nUserData data;\nPImage toro_img, engawa_img, kappa_img, anago_img;\n\nvoid setup() {\n  size(800, 500);\n  imageMode(CENTER);\n  toro_img = loadImage(\"sushi2.png\");\n  engawa_img = loadImage(\"engawas.png\");\n  kappa_img = loadImage(\"kappa.png\");\n  anago_img = loadImage(\"anago.png\");\n  frameRate(60);\n  InitScene();\n}\nvoid draw() {\n  background(255);\n  if(frameCount < 300) {\n  if (frameCount % 30 == 0) {\n    createSushi(300, 50, toro_img);\n    createSushi(370, 50, kappa_img);\n    createSushi(450, 50, engawa_img);\n  } else if (frameCount % 20 == 0) {\n    createSushi(310, 50, anago_img);\n  } else if (frameCount % 10 == 0) {\n    createSushi(320, 50, toro_img);\n    createSushi(450, 50, engawa_img);\n  } else if (frameCount % 5 == 0) {\n    createSushi(320, 50, toro_img);\n  }\n  }\n  physics.setRestitution(random(0,0.9)); \n}\n\nvoid mousePressed() {\n  createSushi(mouseX, mouseY, toro_img);\n}\nvoid createSushi(int X, int Y, PImage img) {\n  circle=physics.createCircle(X, Y,20);\n  data = new UserData();\n  data.img = img;\n  circle.setUserData(data);\n  circle.setAngularVelocity(random(-10,10));\n}\n\nvoid keyPressed() {\n  physics.destroy();\n  physics = null;\n  InitScene();\n}\n\n\n\nvoid InitScene() {\n  float gravX = 0.0;                 \n  float gravY = -100.0;\n  float AABBWidth = 2*width;   \n  float AABBHeight = 2*height;\n  float borderBoxWidth = width;      \n  float borderBoxHeight = height;\n  float pixelsPerMeter = 30;\n  physics = new Physics(this, width, height,\n\t\t              gravX, gravY,\n\t\t\t      AABBWidth, AABBHeight,\n\t\t\t      borderBoxWidth, borderBoxHeight,\n\t\t\t      pixelsPerMeter);\n\n  //physics = new Physics(this, 800, 500);\n  \n  physics.setDensity(1.0f);\n  physics.setCustomRenderingMethod(this, \"custom\");\n  \n}\n\nvoid custom (World w) {\n  smooth();\n  for (Body circle = physics.getWorld().getBodyList(); circle != null; circle = circle.getNext())\n  {\n    org.jbox2d.collision.Shape shape;\n    for (shape = circle.getShapeList(); shape != null; shape = shape.getNext())\n    {\n      if (shape.getType() == ShapeType.CIRCLE_SHAPE)\n      {\n        fill(0,0,0,0);\n        stroke(0,0,0,0);\n        sushiDraw(circle, shape);\n      }\n    }\n  }\n}\n\nvoid sushiDraw(Body body, org.jbox2d.collision.Shape shape) {\n  CircleShape circle = (CircleShape) shape;\n  Vec2 center = circle.getLocalPosition();\n  Vec2 wpoint = physics.worldToScreen(body.getWorldPoint(center));\n  float radius = physics.worldToScreen(circle.getRadius());\n  ellipse(wpoint.x,wpoint.y,radius*2,radius*2);\n  if(radius == 20)\n  {\n    pushMatrix();\n    translate(wpoint.x+1,wpoint.y+1);\n    //rotate(random(-10,10));\n    UserData data = (UserData) body.getUserData();\n    image(data.img,0,0);\n    popMatrix();\n  }\n}\n```", "tags": ["processing", "Java"]}