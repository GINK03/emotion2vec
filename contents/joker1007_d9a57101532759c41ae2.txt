{"context": " More than 1 year has passed since last update.\u3084\u308a\u305f\u304b\u3063\u305f\u306e\u306fMySQL\u4e0a\u306b\u3042\u308b\u30c6\u30fc\u30d6\u30eb\u30921:n\u306e\u95a2\u9023\u30c6\u30fc\u30d6\u30eb\u3068JOIN\u3057\u3066\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3001\u5165\u308c\u5b50\u306b\u306a\u3063\u305fRECORD\u578b\u3092\u4f5c\u3063\u3066BigQuery\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3002\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u30c6\u30fc\u30d6\u30eb\u304c\u3042\u308b\u3068\u3059\u308b\u3002\n\nusers\n\n\n\nname\ntype\n\n\n\n\nid\nINT\n\n\nnickname\nVARCHAR\n\n\n\n\ncomments\n\n\n\nname\ntype\n\n\n\n\nid\nINT\n\n\nbody\nVARCHAR\n\n\nuser_id\nINT\n\n\n\n\u3053\u308c\u3092JOIN\u3057\u3066\u3001\u6700\u7d42\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u69d8\u306aJSON\u3092\u6e96\u5099\u3057\u3066BigQuery\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305f\u3044\u3002\n{\"id\": 1, \"nickname\": \"joker1007\", \"comments\": [{\"id\": 1, \"body\": \"comment body\"}, {\"id\": 2, \"body\": \"next comment\"}] \n\n\u3053\u308c\u3092embulk\u3067\u5b9f\u73fe\u3059\u308b\u306b\u306f\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u304b\u3092\u8003\u3048\u305f\u3002\n\u307e\u305a\u3001SQL\u3067\u7121\u7406\u3084\u308aJSON\u6587\u5b57\u5217\u3092\u4f5c\u308b\u3002\nSELECT\n  CONCAT(\n    '{',\n    '\"id\":',users.id,\n    ',\"nickname\":',IF(users.nickname, CONCAT('\"', users.nickname, '\"'), \"null\"),\n    ',\"comments\":',CONCAT('[', GROUP_CONCAT((CONCAT('{\"id\":', comments.id), CONCAT(',\"body\":\"',comments.body,'\"}')), ']'),\n    '}'\n  ) AS payload\nFROM users\nINNER JOIN comments ON comments.user_id = users.id\nGROUP BY\n  users.id,\n  users.nickname\n\n\u7570\u69d8\u306b\u8aad\u307f\u8f9b\u3044\u306e\u3067\u5408\u3063\u3066\u308b\u306e\u304b\u5206\u304b\u3089\u3093\u3051\u3069\u3001GROUP_CONCAT\u3068\u6587\u5b57\u5217\u52a0\u5de5\u3092\u99c6\u4f7f\u3057\u3066\u9811\u5f35\u3063\u3066\u4f5c\u308b\u3002\n\u3061\u306a\u307f\u306b\u4e0a\u306e\u30af\u30a8\u30ea\u3067\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3068\u304b\u306f\u8003\u616e\u3057\u3066\u306a\u3044\u3002\n\u305d\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u30b3\u30f3\u30d5\u30a3\u30b0\u3092\u66f8\u304f\nin:\n  # \u7701\u7565\n\nout:\n  type: bigquery\n  auth_method: json_key\n  json_keyfile: \"./google-key.json\"\n  project: project_id\n  dataset: dataset_id\n  auto_create_table: true\n  file_ext: json.gz\n  source_format: NEWLINE_DELIMITED_JSON\n  formatter:\n    type: csv\n    delimiter: \"\\0\"\n    quote:\n    quote_policy: NONE\n    header_line: false\n  encoders:\n  - type: gzip\n  table: users\n  schema_file: \"./users_schema.json\"\n  path_prefix: \"./users_load\"\n\ncsv formatter\u306e\u8a2d\u5b9a\u3092\u8abf\u7bc0\u3057\u30c6\u30ad\u30b9\u30c8\u304c\u305d\u306e\u307e\u307e\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\nembulk-output-bigquery\u306f\u57fa\u672c\u7684\u306a\u51e6\u7406\u306f\u307b\u3068\u3093\u3069FileOutput\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u540c\u3058\u3067\u3001\u3053\u3046\u3057\u3066\u304a\u304f\u3068\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b\u30c6\u30ad\u30b9\u30c8\u306f\u3044\u3044\u611f\u3058\u306b1\u884c\u6bce\u306eJSON\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u308b\u3002\n\u5f8c\u306fembulk-output-bigquery\u304c\u666e\u901a\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066Load Job\u3092\u5b9f\u884c\u3057\u3066\u304f\u308c\u308b\u3002\nSQL\u3067JSON\u6587\u5b57\u5217\u3092\u6b63\u3057\u304f\u751f\u6210\u3059\u308b\u3053\u3068\u3055\u3048\u51fa\u6765\u308c\u3070\u3001\u5f8c\u306fembulk\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u8a2d\u5b9a\u306e\u66f8\u304d\u65b9\u3067\u4f55\u3068\u304b\u306a\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002\u307e\u3042\u3001\u305d\u308c\u304c\u8f9b\u3044\u3093\u3060\u3051\u3069\u2026\u2026\u3002\nMySQL-5.7\u7cfb\u3068\u304bPostgreSQL\u306eJSON\u95a2\u6570\u304c\u4f7f\u3048\u308c\u3070\u3001\u3082\u3046\u3061\u3087\u3063\u3068\u697d\u306b\u30c7\u30fc\u30bf\u751f\u6210\u304c\u51fa\u6765\u308b\u6c17\u304c\u3059\u308b\u3051\u3069\u3001MySQL-5.6\u7cfb\u3067\u306f\u8f9b\u3044\u3002\n2016/2/3 \u8ffd\u8a18\n\u62d9\u4f5c\u306eembulk-filter-ruby_proc\u306b\u3088\u308a\u3001\u3082\u3046\u3061\u3087\u3063\u3068\u697d\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\nSELECT\n  users.id,\n  users.nickname\n  CONCAT('[', GROUP_CONCAT((CONCAT('{\"id\":', comments.id), CONCAT(',\"body\":\"',comments.body,'\"}')), ']') AS comments,\n  \"\" AS payload\nFROM users\nINNER JOIN comments ON comments.user_id = users.id\nGROUP BY\n  users.id,\n  users.nickname\n\nin:\n  # \u7701\u7565\n\nfilter:\n  - type: ruby_proc\n    columns:\n      - name: payload\n        proc: |\n          ->(_payload, record) do\n            comments = JSON.parse(record[\"comments\"])\n            record.reject { |k, v| k == \"payload\" }.tap { |r|\n              r[\"comments\"] = comments\n            }\n          end\n        type: json\n\n  - type: column\n    columns:\n      - {name: payload}\n\nout:\n  type: bigquery\n  auth_method: json_key\n  json_keyfile: \"./google-key.json\"\n  project: project_id\n  dataset: dataset_id\n  auto_create_table: true\n  file_ext: json.gz\n  source_format: NEWLINE_DELIMITED_JSON\n  formatter:\n    type: csv\n    delimiter: \"\\0\"\n    quote:\n    quote_policy: NONE\n    header_line: false\n  encoders:\n  - type: gzip\n  table: users\n  schema_file: \"./users_schema.json\"\n  path_prefix: \"./users_load\"\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3001SQL\u306e\u51fa\u529b\u304b\u3089JSON\u578b\u3092\u76f4\u63a5\u4f5c\u3063\u3066\u5f8c\u308d\u306b\u56de\u305b\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u5f8c\u306ffilter-column\u3067JSON\u578b\u306e\u30ab\u30e9\u30e0\u3060\u3051\u306b\u3057\u3066\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\u3002\n\u307e\u3042\u3001\u3084\u308a\u305f\u3044\u4e8b\u6b21\u7b2c\u3067\u306f\u4e00\u90e8\u306e\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u306f\u9811\u5f35\u3063\u3066JSON\u3092SQL\u3067\u751f\u6210\u3059\u308b\u5fc5\u8981\u306f\u3042\u308b\u3002\nCASE\u6587\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u30ab\u30e9\u30e0\u3092\u5897\u3084\u3057\u3066\u8abf\u6574\u3067\u304d\u308b\u306a\u3089\u3001filter\u5074\u3067\u4f55\u3068\u304b\u3059\u308b\u4f59\u5730\u3082\u3042\u308b\u3002\n\u3084\u3063\u3071\u3001PostgreSQL\u306a\u3089\u3001\u3082\u3046\u3061\u3087\u3044\u697d\u306b\u306a\u308b\u304b\u3082\u2026\u2026\u3002\n\u3084\u308a\u305f\u304b\u3063\u305f\u306e\u306fMySQL\u4e0a\u306b\u3042\u308b\u30c6\u30fc\u30d6\u30eb\u30921:n\u306e\u95a2\u9023\u30c6\u30fc\u30d6\u30eb\u3068JOIN\u3057\u3066\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3001\u5165\u308c\u5b50\u306b\u306a\u3063\u305fRECORD\u578b\u3092\u4f5c\u3063\u3066BigQuery\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3002\n\n\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u30c6\u30fc\u30d6\u30eb\u304c\u3042\u308b\u3068\u3059\u308b\u3002\n\n#### users\n| name | type |\n| --- | --- |\n| id | INT |\n| nickname | VARCHAR |\n\n#### comments\n| name | type |\n| --- | --- |\n| id | INT |\n| body | VARCHAR |\n| user_id | INT |\n\n\n\u3053\u308c\u3092JOIN\u3057\u3066\u3001\u6700\u7d42\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u69d8\u306aJSON\u3092\u6e96\u5099\u3057\u3066BigQuery\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u305f\u3044\u3002\n\n```json\n{\"id\": 1, \"nickname\": \"joker1007\", \"comments\": [{\"id\": 1, \"body\": \"comment body\"}, {\"id\": 2, \"body\": \"next comment\"}] \n```\n\n\u3053\u308c\u3092embulk\u3067\u5b9f\u73fe\u3059\u308b\u306b\u306f\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u304b\u3092\u8003\u3048\u305f\u3002\n\u307e\u305a\u3001SQL\u3067\u7121\u7406\u3084\u308aJSON\u6587\u5b57\u5217\u3092\u4f5c\u308b\u3002\n\n```sql\nSELECT\n  CONCAT(\n    '{',\n    '\"id\":',users.id,\n    ',\"nickname\":',IF(users.nickname, CONCAT('\"', users.nickname, '\"'), \"null\"),\n    ',\"comments\":',CONCAT('[', GROUP_CONCAT((CONCAT('{\"id\":', comments.id), CONCAT(',\"body\":\"',comments.body,'\"}')), ']'),\n    '}'\n  ) AS payload\nFROM users\nINNER JOIN comments ON comments.user_id = users.id\nGROUP BY\n  users.id,\n  users.nickname\n```\n\n\u7570\u69d8\u306b\u8aad\u307f\u8f9b\u3044\u306e\u3067\u5408\u3063\u3066\u308b\u306e\u304b\u5206\u304b\u3089\u3093\u3051\u3069\u3001GROUP_CONCAT\u3068\u6587\u5b57\u5217\u52a0\u5de5\u3092\u99c6\u4f7f\u3057\u3066\u9811\u5f35\u3063\u3066\u4f5c\u308b\u3002\n\u3061\u306a\u307f\u306b\u4e0a\u306e\u30af\u30a8\u30ea\u3067\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3068\u304b\u306f\u8003\u616e\u3057\u3066\u306a\u3044\u3002\n\n\u305d\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u30b3\u30f3\u30d5\u30a3\u30b0\u3092\u66f8\u304f\n\n```yaml\nin:\n  # \u7701\u7565\n\nout:\n  type: bigquery\n  auth_method: json_key\n  json_keyfile: \"./google-key.json\"\n  project: project_id\n  dataset: dataset_id\n  auto_create_table: true\n  file_ext: json.gz\n  source_format: NEWLINE_DELIMITED_JSON\n  formatter:\n    type: csv\n    delimiter: \"\\0\"\n    quote:\n    quote_policy: NONE\n    header_line: false\n  encoders:\n  - type: gzip\n  table: users\n  schema_file: \"./users_schema.json\"\n  path_prefix: \"./users_load\"\n```\n\ncsv formatter\u306e\u8a2d\u5b9a\u3092\u8abf\u7bc0\u3057\u30c6\u30ad\u30b9\u30c8\u304c\u305d\u306e\u307e\u307e\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\nembulk-output-bigquery\u306f\u57fa\u672c\u7684\u306a\u51e6\u7406\u306f\u307b\u3068\u3093\u3069FileOutput\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u540c\u3058\u3067\u3001\u3053\u3046\u3057\u3066\u304a\u304f\u3068\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b\u30c6\u30ad\u30b9\u30c8\u306f\u3044\u3044\u611f\u3058\u306b1\u884c\u6bce\u306eJSON\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u308b\u3002\n\u5f8c\u306fembulk-output-bigquery\u304c\u666e\u901a\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066Load Job\u3092\u5b9f\u884c\u3057\u3066\u304f\u308c\u308b\u3002\n\nSQL\u3067JSON\u6587\u5b57\u5217\u3092\u6b63\u3057\u304f\u751f\u6210\u3059\u308b\u3053\u3068\u3055\u3048\u51fa\u6765\u308c\u3070\u3001\u5f8c\u306fembulk\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u8a2d\u5b9a\u306e\u66f8\u304d\u65b9\u3067\u4f55\u3068\u304b\u306a\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u3002\u307e\u3042\u3001\u305d\u308c\u304c\u8f9b\u3044\u3093\u3060\u3051\u3069\u2026\u2026\u3002\nMySQL-5.7\u7cfb\u3068\u304bPostgreSQL\u306eJSON\u95a2\u6570\u304c\u4f7f\u3048\u308c\u3070\u3001\u3082\u3046\u3061\u3087\u3063\u3068\u697d\u306b\u30c7\u30fc\u30bf\u751f\u6210\u304c\u51fa\u6765\u308b\u6c17\u304c\u3059\u308b\u3051\u3069\u3001MySQL-5.6\u7cfb\u3067\u306f\u8f9b\u3044\u3002\n\n\n__2016/2/3 \u8ffd\u8a18__\n\u62d9\u4f5c\u306e[embulk-filter-ruby_proc](https://github.com/joker1007/embulk-filter-ruby_proc \"joker1007/embulk-filter-ruby_proc\")\u306b\u3088\u308a\u3001\u3082\u3046\u3061\u3087\u3063\u3068\u697d\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n\n```sql\nSELECT\n  users.id,\n  users.nickname\n  CONCAT('[', GROUP_CONCAT((CONCAT('{\"id\":', comments.id), CONCAT(',\"body\":\"',comments.body,'\"}')), ']') AS comments,\n  \"\" AS payload\nFROM users\nINNER JOIN comments ON comments.user_id = users.id\nGROUP BY\n  users.id,\n  users.nickname\n```\n\n```yaml\nin:\n  # \u7701\u7565\n\nfilter:\n  - type: ruby_proc\n    columns:\n      - name: payload\n        proc: |\n          ->(_payload, record) do\n            comments = JSON.parse(record[\"comments\"])\n            record.reject { |k, v| k == \"payload\" }.tap { |r|\n              r[\"comments\"] = comments\n            }\n          end\n        type: json\n\n  - type: column\n    columns:\n      - {name: payload}\n\nout:\n  type: bigquery\n  auth_method: json_key\n  json_keyfile: \"./google-key.json\"\n  project: project_id\n  dataset: dataset_id\n  auto_create_table: true\n  file_ext: json.gz\n  source_format: NEWLINE_DELIMITED_JSON\n  formatter:\n    type: csv\n    delimiter: \"\\0\"\n    quote:\n    quote_policy: NONE\n    header_line: false\n  encoders:\n  - type: gzip\n  table: users\n  schema_file: \"./users_schema.json\"\n  path_prefix: \"./users_load\"\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3001SQL\u306e\u51fa\u529b\u304b\u3089JSON\u578b\u3092\u76f4\u63a5\u4f5c\u3063\u3066\u5f8c\u308d\u306b\u56de\u305b\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u5f8c\u306ffilter-column\u3067JSON\u578b\u306e\u30ab\u30e9\u30e0\u3060\u3051\u306b\u3057\u3066\u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\u3002\n\u307e\u3042\u3001\u3084\u308a\u305f\u3044\u4e8b\u6b21\u7b2c\u3067\u306f\u4e00\u90e8\u306e\u30c7\u30fc\u30bf\u306b\u3064\u3044\u3066\u306f\u9811\u5f35\u3063\u3066JSON\u3092SQL\u3067\u751f\u6210\u3059\u308b\u5fc5\u8981\u306f\u3042\u308b\u3002\nCASE\u6587\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u30ab\u30e9\u30e0\u3092\u5897\u3084\u3057\u3066\u8abf\u6574\u3067\u304d\u308b\u306a\u3089\u3001filter\u5074\u3067\u4f55\u3068\u304b\u3059\u308b\u4f59\u5730\u3082\u3042\u308b\u3002\n\u3084\u3063\u3071\u3001PostgreSQL\u306a\u3089\u3001\u3082\u3046\u3061\u3087\u3044\u697d\u306b\u306a\u308b\u304b\u3082\u2026\u2026\u3002\n", "tags": ["Embulk", "bigquery"]}