{"tags": ["\u95a2\u6570\u578b\u8a00\u8a9e", "\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "F#"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\nF#\u306b\u304a\u3051\u308b\u9045\u5ef6\u8a55\u4fa1\nPFDS\u306e\u4ee5\u964d\u306e\u7ae0\u306b\u304a\u3044\u3066\uff0c\u307f\u3093\u306a\u5927\u597d\u304d\u9045\u5ef6\u8a55\u4fa1\u304c\u91cd\u8981\u306a\u610f\u5473\u3092\u6301\u3063\u3066\u304d\u307e\u3059\uff0eF#\u306b\u3082\u9045\u5ef6\u8a55\u4fa1\u306e\u6a5f\u69cb\u306f\u3042\u308a\uff0cLazy\u578b\u3068\u3044\u3046\u306e\u304c\u3042\u308a\u307e\u3059\uff0e\u3053\u308c\u306f\u30b5\u30f3\u30af\u3092\u4f5c\u308b\u578b\u306e\u3088\u3046\u3067\uff0cForce\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u30b5\u30f3\u30af\u3092\u8a55\u4fa1\u3057\uff0c\u5024\u3092\u8fd4\u3057\u307e\u3059\uff0e\u306a\u304a\uff0cLazy\u578b\u306e\u5024\u306f\uff0clazy\u95a2\u6570\u3092\u7528\u3044\u3066\u3059\u3063\u304d\u308a\u4f5c\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\uff0e\n[<EntryPoint>]\nlet main argv = \n    let x = lazy 1\n    printfn \"%A\" x\n    printfn \"%A\" (x.Force())\n    0 // return an integer exit code\n\n\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\uff0e\n\u5024\u306f\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n1\n\n\u307e\u305f\uff0clazy\u3092\u30cd\u30b9\u30c8\u3055\u305b\u308b\u3053\u3068\u3082\u51fa\u6765\u307e\u3059\uff0e\n[<EntryPoint>]\nlet main argv = \n    let x = lazy (lazy 1)\n    printfn \"%A\" x\n    printfn \"%A\" (x.Force())\n    printfn \"%A\" (x.Force().Force())\n    0 // return an integer exit code\n\n\u5024\u306f\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u5024\u306f\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n1\n\n\u307e\u305f\uff0clazy\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u30e1\u30e2\u5316\u304c\uff08\u305f\u3076\u3093\uff09\u884c\u308f\u308c\uff0c\u4e00\u5ea6\u8a08\u7b97\u3092\u884c\u3063\u305f\u30b5\u30f3\u30af\u304b\u3089\u306f\uff0cForce\u306b\u3088\u308a\u4e00\u77ac\u3067\u5024\u304c\u5f97\u3089\u308c\u308b\u2026\u306f\u305a\u3067\u3059\uff0e \u305d\u3046\u671f\u5f85\u3057\u307e\u3057\u3087\u3046\uff01\uff08\u3067\u306a\u3044\u3068PFDS\u3067\u9045\u5ef6\u8a55\u4fa1\u3092\u4f7f\u3046\u5834\u5408\u306e\u8b70\u8ad6\u304c\u307e\u3063\u305f\u304f\u6210\u308a\u7acb\u305f\u306a\u3044\u306e\u3067\u2026\uff09\n\u306a\u304a\uff0cLazy\u578b\u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3055\u305b\u308b\u3053\u3068\u3082\u3067\u304d\uff0c\u30d1\u30bf\u30fc\u30f3\u4e2d\u3067\u306fLazy(x)\u306e\u3088\u3046\u306bLazy\u578b\u306e\u8981\u7d20\u3068\u3057\u3066\u30de\u30c3\u30c1\u3055\u305b\u3066\u3084\u308a\u307e\u3059\uff0e\u3053\u308c\u306b\u3088\u308ax\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\nStream\n\u3044\u308f\u3086\u308b\u9045\u5ef6\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u3042\u308a\uff0c\u9045\u5ef6\u30ea\u30b9\u30c8\u3067\u3082\u3042\u308b\u3082\u306e\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff0e\u5b9f\u306fFSharpx Collections\u3068\u3044\u3046\u3082\u306e\u306bLazyList\u306f\u3042\u308b\u3067\u3059\u304c\uff0c\u3044\u307e\u3044\u3061PFDS\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u5b9f\u88c5\u7528\u306b\u306f\u76f8\u6027\u304c\u60aa\u3044\u306e\u3067\u81ea\u524d\u5b9f\u88c5\u3057\u307e\u3059\uff0e\nStream\u306f\u30b3\u30f3\u30b9\u30bb\u30eb\u306a\u69cb\u9020\u3068\u306a\u3063\u3066\u304a\u308a\uff0ccdr\u306e\u90e8\u5206\u3092\u30b5\u30f3\u30af\u3068\u3057\u3066\u6301\u3064\u3053\u3068\u3067\u9045\u5ef6\u8a55\u4fa1\u3092\u884c\u3044\u307e\u3059\uff0e\u578b\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\uff0e\ntype StreamCell<'a> = NIL | CONS of 'a * Stream<'a>\nand  Stream<'a> = Lazy<StreamCell<'a>>\n\n\u3044\u308f\u3086\u308bcar, cdr\u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u3067\u884c\u3046\u306e\u3067\u5b9a\u7fa9\u306e\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\u4ed6\u306e\u57fa\u672c\u6f14\u7b97\u3067\u3042\u308b++, take, drop, reverse\u306e\u5b9f\u88c5\u3092\u66f8\u304d\u307e\u3059\uff0e\nlet rec (++) (x : Stream<'a>) (y : Stream<'a>) : Stream<'a> =\n    match x, y with\n    | Lazy(NIL), t -> t\n    | Lazy(CONS(x, s)), t -> lazy (CONS(x, s ++ t))\n\nlet rec take (n : int) (s : Stream<'a>) : Stream<'a> =\n    match n, s with\n    | 0, _ -> lazy NIL\n    | n, Lazy(NIL) -> lazy NIL\n    | n, Lazy(CONS(x, s')) -> lazy CONS(x, take (n-1) s')\n\nlet rec drop (n: int) (s : Stream<'a>) : Stream<'a> =\n    match n, s with\n    | 0, _ -> s\n    | n, Lazy(NIL) -> lazy NIL\n    | n, Lazy(CONS(x, s)) -> drop (n-1) s\n\nlet reverse (s : Stream<'a>) : Stream<'a> = \n    let rec reverse' = function\n        | Lazy(NIL), r -> r\n        | Lazy(CONS(x, s)), r -> reverse' (s, lazy CONS(x, r))\n    reverse' (s, lazy NIL)\n\nStream\u7528\u306e\u95a2\u6570\u306a\u306e\u304b\uff0cStreamCell\u7528\u306e\u95a2\u6570\u306a\u306e\u304b\u975e\u5e38\u306b\u6df7\u4e71\u3057\u3084\u3059\u3044\u305f\u3081\uff0c\u578b\u3092\u9010\u4e00\u4ed8\u3051\u3066\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\uff0e\u76ee\u65b0\u3057\u3044\u3068\u3053\u308d\u306f\uff0c\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u306e\u969b\u306bLazy\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3050\u3089\u3044\u3067\u3057\u3087\u3046\u304b\uff0e\n\n\u307e\u3068\u3081\n\nF#\u3067\u306flazy\u3068Force\u3067\u9045\u5ef6\u8a55\u4fa1\u306e\u6a5f\u69cb\u3092\u5b9f\u73fe\nStream\u3092\u5b9a\u7fa9\n\n\n\u4f59\u8ac7\n\u6b63\u76f4\uff0c\u9045\u5ef6\u8a55\u4fa1\u306e\u73fe\u5b9f\u7684\u306a\u7528\u9014\u306f\u4eca\u307e\u3067\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\uff0cPFDS\u3092\u8aad\u3093\u3067\u3088\u3046\u3084\u304f\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\u305d\u308c\u3092\u304a\u4f1d\u3048\u3057\u305f\u3044\u306e\u3067\u3059\u304c\uff0c\u5f53\u5206\u306f\u9045\u5ef6\u8a55\u4fa1\u304b\u3089\u96e2\u308c\uff0c\u511f\u5374\u6642\u9593\u3092\u610f\u8b58\u3057\u305f\u30c7\u30fc\u30bf\u69cb\u9020\u306a\u8a71\u304c\u7d9a\u304d\u307e\u3059\u2026\n# F#\u306b\u304a\u3051\u308b\u9045\u5ef6\u8a55\u4fa1\n\nPFDS\u306e\u4ee5\u964d\u306e\u7ae0\u306b\u304a\u3044\u3066\uff0c\u307f\u3093\u306a\u5927\u597d\u304d\u9045\u5ef6\u8a55\u4fa1\u304c\u91cd\u8981\u306a\u610f\u5473\u3092\u6301\u3063\u3066\u304d\u307e\u3059\uff0eF#\u306b\u3082\u9045\u5ef6\u8a55\u4fa1\u306e\u6a5f\u69cb\u306f\u3042\u308a\uff0cLazy\u578b\u3068\u3044\u3046\u306e\u304c\u3042\u308a\u307e\u3059\uff0e\u3053\u308c\u306f\u30b5\u30f3\u30af\u3092\u4f5c\u308b\u578b\u306e\u3088\u3046\u3067\uff0cForce\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\u30b5\u30f3\u30af\u3092\u8a55\u4fa1\u3057\uff0c\u5024\u3092\u8fd4\u3057\u307e\u3059\uff0e\u306a\u304a\uff0cLazy\u578b\u306e\u5024\u306f\uff0clazy\u95a2\u6570\u3092\u7528\u3044\u3066\u3059\u3063\u304d\u308a\u4f5c\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\uff0e\n\n```fsharp\n[<EntryPoint>]\nlet main argv = \n    let x = lazy 1\n    printfn \"%A\" x\n    printfn \"%A\" (x.Force())\n    0 // return an integer exit code\n```\n\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\uff0e\n\n```shell-session\n\u5024\u306f\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n1\n```\n\n\u307e\u305f\uff0clazy\u3092\u30cd\u30b9\u30c8\u3055\u305b\u308b\u3053\u3068\u3082\u51fa\u6765\u307e\u3059\uff0e\n\n```fsharp\n[<EntryPoint>]\nlet main argv = \n    let x = lazy (lazy 1)\n    printfn \"%A\" x\n    printfn \"%A\" (x.Force())\n    printfn \"%A\" (x.Force().Force())\n    0 // return an integer exit code\n```\n\n```shell-session\n\u5024\u306f\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u5024\u306f\u4f5c\u6210\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n1\n```\n\n\u307e\u305f\uff0clazy\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u30e1\u30e2\u5316\u304c\uff08\u305f\u3076\u3093\uff09\u884c\u308f\u308c\uff0c\u4e00\u5ea6\u8a08\u7b97\u3092\u884c\u3063\u305f\u30b5\u30f3\u30af\u304b\u3089\u306f\uff0cForce\u306b\u3088\u308a\u4e00\u77ac\u3067\u5024\u304c\u5f97\u3089\u308c\u308b\u2026\u306f\u305a\u3067\u3059\uff0e \u305d\u3046\u671f\u5f85\u3057\u307e\u3057\u3087\u3046\uff01\uff08\u3067\u306a\u3044\u3068PFDS\u3067\u9045\u5ef6\u8a55\u4fa1\u3092\u4f7f\u3046\u5834\u5408\u306e\u8b70\u8ad6\u304c\u307e\u3063\u305f\u304f\u6210\u308a\u7acb\u305f\u306a\u3044\u306e\u3067\u2026\uff09\n\n\u306a\u304a\uff0cLazy\u578b\u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3055\u305b\u308b\u3053\u3068\u3082\u3067\u304d\uff0c\u30d1\u30bf\u30fc\u30f3\u4e2d\u3067\u306f`Lazy(x)`\u306e\u3088\u3046\u306bLazy\u578b\u306e\u8981\u7d20\u3068\u3057\u3066\u30de\u30c3\u30c1\u3055\u305b\u3066\u3084\u308a\u307e\u3059\uff0e\u3053\u308c\u306b\u3088\u308ax\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n# Stream\n\n\u3044\u308f\u3086\u308b\u9045\u5ef6\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u3042\u308a\uff0c\u9045\u5ef6\u30ea\u30b9\u30c8\u3067\u3082\u3042\u308b\u3082\u306e\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff0e\u5b9f\u306fFSharpx Collections\u3068\u3044\u3046\u3082\u306e\u306bLazyList\u306f\u3042\u308b\u3067\u3059\u304c\uff0c\u3044\u307e\u3044\u3061PFDS\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u5b9f\u88c5\u7528\u306b\u306f\u76f8\u6027\u304c\u60aa\u3044\u306e\u3067\u81ea\u524d\u5b9f\u88c5\u3057\u307e\u3059\uff0e\n\nStream\u306f\u30b3\u30f3\u30b9\u30bb\u30eb\u306a\u69cb\u9020\u3068\u306a\u3063\u3066\u304a\u308a\uff0ccdr\u306e\u90e8\u5206\u3092\u30b5\u30f3\u30af\u3068\u3057\u3066\u6301\u3064\u3053\u3068\u3067\u9045\u5ef6\u8a55\u4fa1\u3092\u884c\u3044\u307e\u3059\uff0e\u578b\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\uff0e\n\n```fsharp\ntype StreamCell<'a> = NIL | CONS of 'a * Stream<'a>\nand  Stream<'a> = Lazy<StreamCell<'a>>\n```\n\n\u3044\u308f\u3086\u308bcar, cdr\u306f\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u3067\u884c\u3046\u306e\u3067\u5b9a\u7fa9\u306e\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\uff0e\u4ed6\u306e\u57fa\u672c\u6f14\u7b97\u3067\u3042\u308b++, take, drop, reverse\u306e\u5b9f\u88c5\u3092\u66f8\u304d\u307e\u3059\uff0e\n\n```fsharp\nlet rec (++) (x : Stream<'a>) (y : Stream<'a>) : Stream<'a> =\n    match x, y with\n    | Lazy(NIL), t -> t\n    | Lazy(CONS(x, s)), t -> lazy (CONS(x, s ++ t))\n\nlet rec take (n : int) (s : Stream<'a>) : Stream<'a> =\n    match n, s with\n    | 0, _ -> lazy NIL\n    | n, Lazy(NIL) -> lazy NIL\n    | n, Lazy(CONS(x, s')) -> lazy CONS(x, take (n-1) s')\n\nlet rec drop (n: int) (s : Stream<'a>) : Stream<'a> =\n    match n, s with\n    | 0, _ -> s\n    | n, Lazy(NIL) -> lazy NIL\n    | n, Lazy(CONS(x, s)) -> drop (n-1) s\n\nlet reverse (s : Stream<'a>) : Stream<'a> = \n    let rec reverse' = function\n        | Lazy(NIL), r -> r\n        | Lazy(CONS(x, s)), r -> reverse' (s, lazy CONS(x, r))\n    reverse' (s, lazy NIL)\n```\n\nStream\u7528\u306e\u95a2\u6570\u306a\u306e\u304b\uff0cStreamCell\u7528\u306e\u95a2\u6570\u306a\u306e\u304b\u975e\u5e38\u306b\u6df7\u4e71\u3057\u3084\u3059\u3044\u305f\u3081\uff0c\u578b\u3092\u9010\u4e00\u4ed8\u3051\u3066\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\uff0e\u76ee\u65b0\u3057\u3044\u3068\u3053\u308d\u306f\uff0c\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u306e\u969b\u306bLazy\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3050\u3089\u3044\u3067\u3057\u3087\u3046\u304b\uff0e\n\n# \u307e\u3068\u3081\n* F#\u3067\u306flazy\u3068Force\u3067\u9045\u5ef6\u8a55\u4fa1\u306e\u6a5f\u69cb\u3092\u5b9f\u73fe\n* Stream\u3092\u5b9a\u7fa9\n\n# \u4f59\u8ac7\n\u6b63\u76f4\uff0c\u9045\u5ef6\u8a55\u4fa1\u306e\u73fe\u5b9f\u7684\u306a\u7528\u9014\u306f\u4eca\u307e\u3067\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\uff0cPFDS\u3092\u8aad\u3093\u3067\u3088\u3046\u3084\u304f\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\u305d\u308c\u3092\u304a\u4f1d\u3048\u3057\u305f\u3044\u306e\u3067\u3059\u304c\uff0c\u5f53\u5206\u306f\u9045\u5ef6\u8a55\u4fa1\u304b\u3089\u96e2\u308c\uff0c\u511f\u5374\u6642\u9593\u3092\u610f\u8b58\u3057\u305f\u30c7\u30fc\u30bf\u69cb\u9020\u306a\u8a71\u304c\u7d9a\u304d\u307e\u3059\u2026\n"}