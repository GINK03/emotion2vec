{"context": " More than 1 year has passed since last update.\u7121\u6599\u3067\u4f7f\u3048\u308b\u3057\u3001\u6700\u8fd1Google Compute Engine\u3092\u4f7f\u3063\u3066\u9762\u767d\u304b\u3063\u305f\u306e\u3067\u3001Google App Engine\u3092\u4f7f\u3063\u3066\u3001\u5c11\u3057\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u305f\u3002\nGoogle App Engine\u306eSDK\u304c\u3057\u3063\u304b\u308a\u3067\u304d\u3066\u3044\u3066\u3001memcache\u306e\u958b\u767a\u3082\u30c7\u30d0\u30c3\u30af\u3082\u3084\u308a\u3084\u3059\u304b\u3063\u305f\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u3092\u3046\u3064\u3068\u3001post\u306e\u5185\u5bb9\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30da\u30fc\u30b9\u30c8\u3067\u304d\u308b\necho \"test\" | curl --data-binary @- --url http://toolbox-1080.appspot.com/copy/#{your key}\ncat main.go | curl --data-binary @- --url http://toolbox-1080.appspot.com/copy/#{your key}\n\ncurl -s http://toolbox-1080.appspot.com/paste/#{your key}\n\n\u66f8\u3044\u305f\u30b3\u30fc\u30c9\npackage gaesample\n\nimport (\n  \"fmt\"\n  \"strings\"\n  \"bytes\"\n  \"net/http\"\n  \"github.com/zenazn/goji\"\n  \"github.com/zenazn/goji/web\"\n  \"appengine\"\n  \"appengine/memcache\"\n)\n\nfunc init() {\n  http.Handle(\"/\", goji.DefaultMux)\n\n  goji.Get(\"/\", handler)\n  goji.Post(\"/copy/:key\", handler2)\n  goji.Get(\"/paste/:key\", handler3)\n\n}\n\nfunc handler(c web.C, w http.ResponseWriter, r *http.Request) {\n  fmt.Fprintf(w, \"%s\", \"Hello World\")\n}\n\nfunc handler2(c web.C, w http.ResponseWriter, r *http.Request) {\n  ac := appengine.NewContext(r)\n\n  bufbody := new(bytes.Buffer)\n  bufbody.ReadFrom(r.Body)\n  body := bufbody.String()\n\n  set_key(ac, c.URLParams[\"key\"], body)\n}\n\nfunc handler3(c web.C, w http.ResponseWriter, r *http.Request) {\n  ac := appengine.NewContext(r)\n  fmt.Fprintf(w, \"%s\", get_key(ac, c.URLParams[\"key\"]))\n}\n\nfunc key(k string) string {\n  s := []string{k, \"clipboard\"}\n  return strings.Join(s, \"_\")\n}\n\nfunc set_key(c appengine.Context, k string, v string) {\n\n  item := &memcache.Item{\n    Key:   key(k),\n    Value: []byte(v),\n  }\n\n  if err := memcache.Add(c, item); err == memcache.ErrNotStored {\n    if err := memcache.Set(c, item); err != nil {\n      c.Errorf(\"error setting item: %v\", err)\n    }\n  } else if err != nil {\n    c.Errorf(\"error adding item: %v\", err)\n  }\n\n  c.Infof(\"the value is %q\", item.Value)\n}\n\nfunc get_key(c appengine.Context, k string) string {\n  if item, err := memcache.Get(c, key(k)); err == memcache.ErrCacheMiss {\n    c.Infof(\"item not in the cache\")\n    return \"\"\n  } else if err != nil {\n    c.Errorf(\"error getting item: %v\", err)\n    return \"\"\n  } else {\n    c.Infof(\"the value is %q\", item.Value)\n    return string(item.Value)\n  }\n}\n\n\nmemcache\u306e\u4fdd\u5b58\u671f\u9593\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u3067\u304d\u308b\u3060\u3051\u9577\u3044\u671f\u9593\u30ad\u30fc\u3092\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\n\u3082\u3057\u30e1\u30e2\u30ea\u304c\u5727\u8feb\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u65b0\u3057\u3044\u5024\u304c\u8ffd\u52a0\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u6700\u3082\u6700\u8fd1\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u5024\u304b\u3089\u524a\u9664\u3055\u308c\u308b\u3002\n\u6642\u9593\u3067\u3082\u65e5\u4ed8\u3067\u3082\u4fdd\u5b58\u671f\u9593\u3092\u8a2d\u5b9a\u3067\u304d\u308b\n\n\n\u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8\n\u300cGoogle App Engine\u3067Go\u306e\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u307e\u305a\u52d5\u304b\u3057\u3066\u307f\u308b\u300d\u3092\u898b\u306a\u304c\u3089\u3001App Engine\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u8a2d\u5b9a\u3092\u884c\u3063\u305f\nhttp://qiita.com/taizo/items/845fcfc58cfd0b30020a\n\u300cgolang\u74b0\u5883\u8a2d\u5b9a\u300d\u3092\u898b\u3066go\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nhttp://qiita.com/yanap/items/536b94425b20b1bfc46e\n\u300cMemcache Go API\u300d\nhttps://cloud.google.com/appengine/docs/go/memcache/\n\u300cUsing Users Service\u300d\u3092\u898b\u3066\u3001 App Engine Context\u3092\u7406\u89e3\nhttps://cloud.google.com/appengine/docs/go/gettingstarted/usingusers\n\n\u30e1\u30e2\nGolang\u306e\u5909\u6570\u3068\u304b\u95a2\u6570\u3068\u304b[\u57fa\u790e]\nhttp://qiita.com/mackiso/items/e435e154e3376a68dcca\n\u300cgolang cast byte to string\u300d\nhttp://stackoverflow.com/questions/14230145/what-is-the-best-way-to-convert-byte-array-to-string\ngolang \u3067\u6700\u8fd1\u304a\u6c17\u306b\u5165\u308a\u306e WAF\u300cGoji\u300dAdd Starmkt - Goji\u306e\u5b9f\u88c5\u306e\u53c2\u8003\u306b\nhttp://mattn.kaoriya.net/software/lang/go/20141021134209.htm\n\u7121\u6599\u3067\u4f7f\u3048\u308b\u3057\u3001\u6700\u8fd1Google Compute Engine\u3092\u4f7f\u3063\u3066\u9762\u767d\u304b\u3063\u305f\u306e\u3067\u3001Google App Engine\u3092\u4f7f\u3063\u3066\u3001\u5c11\u3057\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u305f\u3002\nGoogle App Engine\u306eSDK\u304c\u3057\u3063\u304b\u308a\u3067\u304d\u3066\u3044\u3066\u3001memcache\u306e\u958b\u767a\u3082\u30c7\u30d0\u30c3\u30af\u3082\u3084\u308a\u3084\u3059\u304b\u3063\u305f\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u3092\u3046\u3064\u3068\u3001post\u306e\u5185\u5bb9\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30da\u30fc\u30b9\u30c8\u3067\u304d\u308b\n\n```\necho \"test\" | curl --data-binary @- --url http://toolbox-1080.appspot.com/copy/#{your key}\ncat main.go | curl --data-binary @- --url http://toolbox-1080.appspot.com/copy/#{your key}\n\ncurl -s http://toolbox-1080.appspot.com/paste/#{your key}\n```\n\n\u66f8\u3044\u305f\u30b3\u30fc\u30c9\n\n```\npackage gaesample\n\nimport (\n  \"fmt\"\n  \"strings\"\n  \"bytes\"\n  \"net/http\"\n  \"github.com/zenazn/goji\"\n  \"github.com/zenazn/goji/web\"\n  \"appengine\"\n  \"appengine/memcache\"\n)\n\nfunc init() {\n  http.Handle(\"/\", goji.DefaultMux)\n\n  goji.Get(\"/\", handler)\n  goji.Post(\"/copy/:key\", handler2)\n  goji.Get(\"/paste/:key\", handler3)\n\n}\n\nfunc handler(c web.C, w http.ResponseWriter, r *http.Request) {\n  fmt.Fprintf(w, \"%s\", \"Hello World\")\n}\n\nfunc handler2(c web.C, w http.ResponseWriter, r *http.Request) {\n  ac := appengine.NewContext(r)\n\n  bufbody := new(bytes.Buffer)\n  bufbody.ReadFrom(r.Body)\n  body := bufbody.String()\n\n  set_key(ac, c.URLParams[\"key\"], body)\n}\n\nfunc handler3(c web.C, w http.ResponseWriter, r *http.Request) {\n  ac := appengine.NewContext(r)\n  fmt.Fprintf(w, \"%s\", get_key(ac, c.URLParams[\"key\"]))\n}\n\nfunc key(k string) string {\n  s := []string{k, \"clipboard\"}\n  return strings.Join(s, \"_\")\n}\n\nfunc set_key(c appengine.Context, k string, v string) {\n\n  item := &memcache.Item{\n    Key:   key(k),\n    Value: []byte(v),\n  }\n\n  if err := memcache.Add(c, item); err == memcache.ErrNotStored {\n    if err := memcache.Set(c, item); err != nil {\n      c.Errorf(\"error setting item: %v\", err)\n    }\n  } else if err != nil {\n    c.Errorf(\"error adding item: %v\", err)\n  }\n\n  c.Infof(\"the value is %q\", item.Value)\n}\n\nfunc get_key(c appengine.Context, k string) string {\n  if item, err := memcache.Get(c, key(k)); err == memcache.ErrCacheMiss {\n    c.Infof(\"item not in the cache\")\n    return \"\"\n  } else if err != nil {\n    c.Errorf(\"error getting item: %v\", err)\n    return \"\"\n  } else {\n    c.Infof(\"the value is %q\", item.Value)\n    return string(item.Value)\n  }\n}\n```\n\n\n### memcache\u306e\u4fdd\u5b58\u671f\u9593\n* \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001\u3067\u304d\u308b\u3060\u3051\u9577\u3044\u671f\u9593\u30ad\u30fc\u3092\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\n* \u3082\u3057\u30e1\u30e2\u30ea\u304c\u5727\u8feb\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u65b0\u3057\u3044\u5024\u304c\u8ffd\u52a0\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u6700\u3082\u6700\u8fd1\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u5024\u304b\u3089\u524a\u9664\u3055\u308c\u308b\u3002\n* \u6642\u9593\u3067\u3082\u65e5\u4ed8\u3067\u3082\u4fdd\u5b58\u671f\u9593\u3092\u8a2d\u5b9a\u3067\u304d\u308b\n\n### \u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8\n\n\u300cGoogle App Engine\u3067Go\u306e\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u307e\u305a\u52d5\u304b\u3057\u3066\u307f\u308b\u300d\u3092\u898b\u306a\u304c\u3089\u3001App Engine\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u8a2d\u5b9a\u3092\u884c\u3063\u305f\nhttp://qiita.com/taizo/items/845fcfc58cfd0b30020a\n\n\u300cgolang\u74b0\u5883\u8a2d\u5b9a\u300d\u3092\u898b\u3066go\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nhttp://qiita.com/yanap/items/536b94425b20b1bfc46e\n\n\u300cMemcache Go API\u300d\nhttps://cloud.google.com/appengine/docs/go/memcache/\n\n\u300cUsing Users Service\u300d\u3092\u898b\u3066\u3001 App Engine Context\u3092\u7406\u89e3\nhttps://cloud.google.com/appengine/docs/go/gettingstarted/usingusers\n\n### \u30e1\u30e2\n\nGolang\u306e\u5909\u6570\u3068\u304b\u95a2\u6570\u3068\u304b[\u57fa\u790e]\nhttp://qiita.com/mackiso/items/e435e154e3376a68dcca\n\n\u300cgolang cast byte to string\u300d\nhttp://stackoverflow.com/questions/14230145/what-is-the-best-way-to-convert-byte-array-to-string\n\ngolang \u3067\u6700\u8fd1\u304a\u6c17\u306b\u5165\u308a\u306e WAF\u300cGoji\u300dAdd Starmkt - Goji\u306e\u5b9f\u88c5\u306e\u53c2\u8003\u306b\nhttp://mattn.kaoriya.net/software/lang/go/20141021134209.htm\n", "tags": ["GoogleAppEngine", "golang"]}