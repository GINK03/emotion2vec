{"context": "\n\n\u306f\u3058\u3081\u306b\n\u6700\u8fd1\u6d41\u884c\u308a\u306eAWS\u3092\u89e6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\njs\u306f\u3001\u521d\u3081\u3066\u3067\u3059\u306e\u3067\u6587\u6cd5\u30df\u30b9\u7b49\u6709\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u898b\u3064\u3051\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u3067\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\n\n\u30e1\u30e2\n\u4ee5\u4e0b\u306e\u3088\u3046\u306ajson\u3092\u6e21\u3055\u308c\u305f\u3068\u304d\n\nJSON\n\n{\n    \"userid\" : \"peta727\",\n    \"count\" : \"1\"\n}\n\nuserid \u306eDynamoDB\u4e0a\u306ecount\u3092 count \u5206\u3060\u3051\u6570\u5024\u3092\u52a0\u7b97\u3057\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u306f\u3001 userid \u304cDynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u3067\u3059\u3002\n\nlambda\n\n'use strict';\nconsole.log('Loading function');\nvar aws = require('aws-sdk');\nvar dynamo = new aws.DynamoDB({region: 'ap-northeast-1'});\n\nexports.handler = (event, context, callback) => {\n    dynamo.updateItem(\n        {\n            \"TableName\":\"peta727-dynamodb-table\",\n            \"Key\" : {\n                \"userid\" : {\"S\": event.userid}\n            },\n            \"ExpressionAttributeNames\" : {\n                \"#count\" : \"count\"\n            },\n            \"ExpressionAttributeValues\" : {\n                        \":i\" : {\"N\" : event.count},\n                        \":default\": {\"N\" : \"0\"}\n            },\n            \"UpdateExpression\" :  \"set #count = if_not_exists(#count, :default) + :i\",\n            \"ReturnValues\":\"ALL_NEW\"\n        }, function(err, data) {\n            if (err) {\n                console.log(\"error: \" + err);\n                context.fail();\n            } else {\n                console.log(\"data uploaded successfulle.\" + JSON.stringify(data));\n                context.succeed();\n            }\n        });\n};\n\n\n\u5b9f\u969b\u3001\u89e6\u3063\u3066\u306f\u3044\u307e\u305b\u3093\u304c ALL_NEW \u3067\u66f4\u65b0\u5f8c\u306e\u5024\u3092\u8fd4\u3057\u3066\u3044\u308b\u306e\u3067\u518d\u3073DB\u3092\u53e9\u304f\u3053\u3068\u306a\u304f\u66f4\u65b0\u5f8c\u306e\u5024\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u8fd4\u308a\u5024\n\n\n//\u8fd4\u308a\u5024\n{\n    \"Attributes\":{\n        \"count\":{\"N\":\"5\"},\n        \"userid\":{\"S\":\"peta727\"}\n    }\n}\n\n# \u306f\u3058\u3081\u306b\n\u6700\u8fd1\u6d41\u884c\u308a\u306eAWS\u3092\u89e6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\njs\u306f\u3001\u521d\u3081\u3066\u3067\u3059\u306e\u3067\u6587\u6cd5\u30df\u30b9\u7b49\u6709\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u898b\u3064\u3051\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u3067\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\n\n# \u30e1\u30e2\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306ajson\u3092\u6e21\u3055\u308c\u305f\u3068\u304d\n\n- JSON\n\n```json\n{\n    \"userid\" : \"peta727\",\n    \"count\" : \"1\"\n}\n```\n `userid` \u306eDynamoDB\u4e0a\u306ecount\u3092 `count` \u5206\u3060\u3051\u6570\u5024\u3092\u52a0\u7b97\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u5834\u5408\u306f\u3001 `userid` \u304cDynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u3067\u3059\u3002\n\n- lambda\n\n```js\n'use strict';\nconsole.log('Loading function');\nvar aws = require('aws-sdk');\nvar dynamo = new aws.DynamoDB({region: 'ap-northeast-1'});\n\nexports.handler = (event, context, callback) => {\n\tdynamo.updateItem(\n\t\t{\n\t\t\t\"TableName\":\"peta727-dynamodb-table\",\n\t\t\t\"Key\" : {\n\t\t\t\t\"userid\" : {\"S\": event.userid}\n      \t\t},\n\t\t\t\"ExpressionAttributeNames\" : {\n\t\t\t\t\"#count\" : \"count\"\n\t\t\t},\n            \"ExpressionAttributeValues\" : {\n                        \":i\" : {\"N\" : event.count},\n                        \":default\": {\"N\" : \"0\"}\n            },\n            \"UpdateExpression\" :  \"set #count = if_not_exists(#count, :default) + :i\",\n\t\t\t\"ReturnValues\":\"ALL_NEW\"\n\t\t}, function(err, data) {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(\"error: \" + err);\n\t\t\t\tcontext.fail();\n\t\t\t} else {\n\t\t\t\tconsole.log(\"data uploaded successfulle.\" + JSON.stringify(data));\n\t\t\t\tcontext.succeed();\n\t\t\t}\n\t\t});\n};\n\n```\n\n\u5b9f\u969b\u3001\u89e6\u3063\u3066\u306f\u3044\u307e\u305b\u3093\u304c `ALL_NEW` \u3067\u66f4\u65b0\u5f8c\u306e\u5024\u3092\u8fd4\u3057\u3066\u3044\u308b\u306e\u3067\u518d\u3073DB\u3092\u53e9\u304f\u3053\u3068\u306a\u304f**\u66f4\u65b0\u5f8c\u306e\u5024**\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n- \u8fd4\u308a\u5024\n\n```json\n\n//\u8fd4\u308a\u5024\n{\n\t\"Attributes\":{\n\t\t\"count\":{\"N\":\"5\"},\n\t\t\"userid\":{\"S\":\"peta727\"}\n\t}\n}\n```\n", "tags": ["AWS", "lambda", "JavaScript", "DynamoDB"]}