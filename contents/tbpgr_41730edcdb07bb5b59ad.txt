{"context": "\n\n Aruba \u3068\u306f\uff1f\nAruba\u306fCucumber\u3001RSpec\u3001Minitest\u306e\u3088\u3046\u306a\u4eba\u6c17\u306e\u3042\u308bTDD/BDD\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u3092\u7c21\u5358\u3067\u697d\u3057\u3044\u3082\u306e\u306b\u3059\u308b\u62e1\u5f35\u3067\u3059\u3002\n\ncucumber/aruba - GitHub\n\n\n \u7279\u5fb4\n\n\u3069\u3093\u306a\u8a00\u8a9e\u3067\u5b9f\u88c5\u3055\u308c\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3067\u3082\u30c6\u30b9\u30c8\u53ef\u80fd\n\n\n\u30c6\u30b9\u30c8\u81ea\u4f53\u306fRuby\u3067\u66f8\u304f\u304c\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306f Python \u306e CLI \u30c4\u30fc\u30eb\u3067\u3082 Golang \u306e CLI \u30c4\u30fc\u30eb\u3067\u3082\u3088\u3044\n\n\n\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3084\u30d7\u30ed\u30bb\u30b9\u74b0\u5883\u3092\u30d8\u30eb\u30d1\u30fc\u306b\u3088\u3063\u3066\u64cd\u4f5c\u3067\u304d\u308b\n\n\n\u4f8b\u3048\u3070 read \u3067\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3067\u304d\u308b\n\u4f8b\u3048\u3070 run \u3067\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001\u305d\u306e\u7d50\u679c\u3092 have_output matcher \u306a\u3069\u3067\u691c\u8a3c\u3067\u304d\u308b\n\n\n\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3084\u30d7\u30ed\u30bb\u30b9\u74b0\u5883\u306f\u30c6\u30b9\u30c8\u306e\u305f\u3073\u306b\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\u306e\u3067\u3001 leaking state \u304c\u306a\u3044\n\n\n\u4f8b\u3048\u3070\u30c6\u30b9\u30c8\u4e2d\u306b\u4f5c\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u30c6\u30b9\u30c8\u7d42\u4e86\u5f8c\u306b\u306f\u6d88\u3048\u3066\u3044\u308b\n\n\n\u30b3\u30df\u30e5\u4e8c\u30c6\u30a3\u30fc\u30b5\u30dd\u30fc\u30c8\u304c\u624b\u539a\u3044\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u306b\u3042\u308b\u3068\u304a\u308a\u306b\u52d5\u4f5c\u3059\u308b\u3053\u3068\u304c\u671f\u5f85\u3067\u304d\u308b\n\n\n \u30d5\u30a9\u30fc\u30ab\u30b9\ngem install <your-gem> \u306e\u3088\u3046\u306a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3084\u3001\u30c4\u30fc\u30eb\u306e\u30c7\u30d7\u30ed\u30a4\u81ea\u4f53\u306b\u3064\u3044\u3066\u306f\nAruba\u306e\u30d5\u30a9\u30fc\u30ab\u30b9\u5916\u3068\u3059\u308b\u3002\n\n \u30b5\u30f3\u30d7\u30eb\nfizzbuzz \u3092\u5b9f\u884c\u3059\u308b CLI \u30c4\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n \u6e96\u5099\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u6e96\u5099\u3057\u307e\u3059\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n\n$ bundle gem -t rspec --exe fizzbuzz\n\n\ngemspec \u306b thor \u3068 aruba \u3092\u8ffd\u52a0\u3059\u308b\n\n\nfizzbuzz.gemspec\n# \u7565\n  spec.add_runtime_dependency 'thor'\n\n  spec.add_development_dependency \"aruba\"\n# \u7565\n\n\n\n\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n$ bundle install --path vendor/bundle\n\n\nFizzBuzz\u306e\u5b9f\u88c5 lib/fizzbuzz.rb\n\n\nlib/fizzbuzz.rb\nrequire 'fizzbuzz/version'\nrequire 'cli'\n\n# FizzBuzz\n#\n# FizzBuzz\u306e\u8a08\u7b97\u3092\u884c\u3046\nmodule Fizzbuzz\n  module_function\n\n  def fizzbuzz(limit)\n    limit_number = Integer(limit)\n    (0..limit_number).map do |num|\n      if (num % 15).zero? then 'FizzBuzz'\n      elsif (num % 5).zero? then 'Buzz'\n      elsif (num % 3).zero? then 'Fizz'\n      else num.to_s\n      end\n    end\n  end\nend\n\n\n\nFizzBuzz\u306e\u5b9f\u88c5 lib/cli.rb\n\n\nlib/cli.rb\nrequire 'thor'\n\n# Fizzbuzz::Models\nmodule Fizzbuzz\n  # CLI\n  #\n  # FizzBuzz\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\n  class CLI < Thor\n    class_option :help, type: :boolean, aliases: '-h', desc: 'help message.'\n    class_option :version, type: :boolean, desc: 'version'\n    class_option :debug, type: :boolean, aliases: '-d', desc: 'debug mode'\n\n    desc 'fizzbuzz', 'Get fizzbuzz result from limit number'\n    def fizzbuzz(limit)\n      print Fizzbuzz.fizzbuzz(limit).join(',')\n      exit\n    rescue => e\n      output_error_if_debug_mode(e)\n      exit(false)\n    end\n\n    desc 'version', 'version'\n    def version\n      puts Fizzbuzz::VERSION\n    end\n\n    private\n\n    def output_error_if_debug_mode(e)\n      return unless options[:debug]\n      STDERR.puts(e.message)\n      STDERR.puts(e.backtrace)\n    end\n  end\nend\n\n\n\nFizzBuzz\u306e\u5b9f\u88c5 exe/fizzbuzz\n\n\nexe/fizzbuzz\n#!/usr/bin/env ruby\n\nrequire \"fizzbuzz\"\n\nFizzbuzz::CLI.start(ARGV)\n\n\n\nFizzBuzz\u306e\u30c6\u30b9\u30c8\u306e\u5b9f\u88c5 spec/fizzbuzz_spec.rb\n\n\nspec/fizzbuzz_spec.rb\nrequire 'spec_helper'\n\ndescribe Fizzbuzz do\n  it 'has a version number' do\n    expect(Fizzbuzz::VERSION).not_to be nil\n  end\n\n  context '.fizzbuzz' do\n    it \"\u6b63\u5e38\u7cfb\" do\n      expect(%w(FizzBuzz 1 2 Fizz 4 Buzz Fizz 7 8 Fizz Buzz 11 Fizz 13 14 FizzBuzz)).to eq(Fizzbuzz.fizzbuzz(\"15\"))\n    end\n\n    it \"\u6570\u5024\u4ee5\u5916\u306e\u5165\u529b\" do\n      expect { Fizzbuzz.fizzbuzz(\"a\") }.to raise_error(ArgumentError)\n    end\n  end\nend\n\n\n\n Aruba RSpec\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nAruba\u306fCucumber, RSpec, Minitest \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306fRSpec\u7248\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n$ bundle exec aruba init --test-framework rspec\n      append  spec/spec_helper.rb\n   identical  spec/support/aruba.rb\n      append  Gemfile\n\n\nGemfile \u306b aruba \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\n\n\nGemfile\nsource 'https://rubygems.org'\n\ngemspec\ngem 'aruba', '~> 0.14.2'\n\n\n\nspec/support/aruba.rb \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\n\n\nspec/support/aruba.rb\nrequire 'aruba/rspec'\n\n\n\nspec/spec_helper.rb \u306b\u4ee5\u4e0b\u304c\u8ffd\u8a18\u3055\u308c\u307e\u3059\n\n(require 'fizzbuzz'\u3060\u3051\u624b\u52d5\u3067\u8ffd\u8a18\u3057\u307e\u3057\u305f)\n\nspec/spec_helper.rb\n$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)\nrequire 'fizzbuzz'\n\nif RUBY_VERSION < '1.9.3'\n  ::Dir.glob(::File.expand_path('../support/*.rb', __FILE__)).each { |f| require File.join(File.dirname(f), File.basename(f, '.rb')) }\n  ::Dir.glob(::File.expand_path('../support/**/*.rb', __FILE__)).each { |f| require File.join(File.dirname(f), File.basename(f, '.rb')) }\nelse\n  ::Dir.glob(::File.expand_path('../support/*.rb', __FILE__)).each { |f| require_relative f }\n  ::Dir.glob(::File.expand_path('../support/**/*.rb', __FILE__)).each { |f| require_relative f }\nend\n\n\n\nspec/cli_spec.rb\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c Aruba \u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u3059\n\nspec/cli_spec.rb\nrequire 'spec_helper'\n\nRSpec.describe 'fizzbuzz command', type: :aruba do\n  context 'version option' do\n    before(:each) { run('fizzbuzz v') }\n    it { expect(last_command_started).to be_successfully_executed }\n    it { expect(last_command_started).to have_output(\"0.1.0\") }\n  end\n\n  context 'help option' do\n    expected = <<~EXPECTED\n    Commands:\n      fizzbuzz fizzbuzz        # Get fizzbuzz result from limit number\n      fizzbuzz help [COMMAND]  # Describe available commands or one specific command\n      fizzbuzz version         # version\n\n    Options:\n      -h, [--help], [--no-help]        # help message.\n          [--version], [--no-version]  # version\n      -d, [--debug], [--no-debug]      # debug mode\nEXPECTED\n\n    before(:each) { run('fizzbuzz help') }\n    it { expect(last_command_started).to be_successfully_executed }\n    it { expect(last_command_started).to have_output(expected) }\n  end\n\n  context 'fizzbuzz subcommand' do\n    expected = %w(FizzBuzz 1 2 Fizz 4 Buzz Fizz 7 8 Fizz Buzz 11 Fizz 13 14 FizzBuzz).join(',')\n    before(:each) { run('fizzbuzz fizzbuzz 15') }\n    it { expect(last_command_started).to be_successfully_executed }\n    it { expect(last_command_started).to have_output(expected) }\n  end\n\n  context 'fizzbuzz subcommand invalid args' do\n    before(:each) { run('fizzbuzz fizzbuzz a') }\n    it { expect(last_command_started).not_to be_successfully_executed }\n  end\nend\n\n\n\n\nto be_successfully_executed\n\nstatus 0 \u3067\u7d42\u4e86\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\n\n\nnot_to be_successfully_executed\n\nstatus 0 \u4ee5\u5916\u3067\u7d42\u4e86\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\n\n\nto have_output(contents)\n\n\u51fa\u529b\u304c contents \u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\u6b63\u898f\u8868\u73fe\u3082\u4f7f\u7528\u53ef\u80fd\n\n\n\n\n \u5b9f\u884c\n$ bundle exec rspec spec/cli_spec.rb\n\nfizzbuzz command\n  version option\n    should be successfully executed\n    should have output: \"0.1.0\"\n  help option\n    should be successfully executed\n    should have output: \"Commands:\\n  fizzbuzz fizzbuzz        # Get fizzbuzz result from limit number\\n  fizzbuzz help [COMM...e.\\n      [--version], [--no-version]  # version\\n  -d, [--debug], [--no-debug]      # debug mode\\n\"\n  fizzbuzz subcommand\n    should be successfully executed\n    should have output: \"FizzBuzz,1,2,Fizz,4,Buzz,Fizz,7,8,Fizz,Buzz,11,Fizz,13,14,FizzBuzz\"\n  fizzbuzz subcommand invalid args\n    should not be successfully executed\n\nFinished in 3.1 seconds (files took 0.2151 seconds to load)\n7 examples, 0 failures\n\n\n \u53c2\u8003\nRuby\u306e\u9759\u7684\u89e3\u6790\u30c4\u30fc\u30eb RubyCritic \u3067 Aruba + Cucumber \u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\nwhitesmith/rubycritic - GitHub\n\n\n tbpgr/fizzbuzz\n\u4eca\u56de\u5b9f\u88c5\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0b\u306bup\u3057\u3066\u3042\u308a\u307e\u3059\n\ntbpgr/fizzbuzz - GitHub\n\n\n \u5916\u90e8\u8cc7\u6599\n\naruba docs - relish\ncucumber/aruba - GitHub\n\n## <i class='fa fa-question-circle'></i> Aruba \u3068\u306f\uff1f\nAruba\u306fCucumber\u3001RSpec\u3001Minitest\u306e\u3088\u3046\u306a\u4eba\u6c17\u306e\u3042\u308bTDD/BDD\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u3092\u7c21\u5358\u3067\u697d\u3057\u3044\u3082\u306e\u306b\u3059\u308b\u62e1\u5f35\u3067\u3059\u3002\n\n* [cucumber/aruba - GitHub](https://github.com/cucumber/aruba)\n\n## <i class='fa fa-smile-o'></i> \u7279\u5fb4\n* \u3069\u3093\u306a\u8a00\u8a9e\u3067\u5b9f\u88c5\u3055\u308c\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3067\u3082\u30c6\u30b9\u30c8\u53ef\u80fd\n    * \u30c6\u30b9\u30c8\u81ea\u4f53\u306fRuby\u3067\u66f8\u304f\u304c\u3001\u30c6\u30b9\u30c8\u5bfe\u8c61\u306f Python \u306e CLI \u30c4\u30fc\u30eb\u3067\u3082 Golang \u306e CLI \u30c4\u30fc\u30eb\u3067\u3082\u3088\u3044\n* \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3084\u30d7\u30ed\u30bb\u30b9\u74b0\u5883\u3092\u30d8\u30eb\u30d1\u30fc\u306b\u3088\u3063\u3066\u64cd\u4f5c\u3067\u304d\u308b\n    * \u4f8b\u3048\u3070 read \u3067\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3067\u304d\u308b\n    * \u4f8b\u3048\u3070 run \u3067\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001\u305d\u306e\u7d50\u679c\u3092 have_output matcher \u306a\u3069\u3067\u691c\u8a3c\u3067\u304d\u308b\n* \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3084\u30d7\u30ed\u30bb\u30b9\u74b0\u5883\u306f\u30c6\u30b9\u30c8\u306e\u305f\u3073\u306b\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\u306e\u3067\u3001 leaking state \u304c\u306a\u3044\n    * \u4f8b\u3048\u3070\u30c6\u30b9\u30c8\u4e2d\u306b\u4f5c\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u30c6\u30b9\u30c8\u7d42\u4e86\u5f8c\u306b\u306f\u6d88\u3048\u3066\u3044\u308b\n* \u30b3\u30df\u30e5\u4e8c\u30c6\u30a3\u30fc\u30b5\u30dd\u30fc\u30c8\u304c\u624b\u539a\u3044\n* [\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/cucumber/aruba/tree/master/features) \u306b\u3042\u308b\u3068\u304a\u308a\u306b\u52d5\u4f5c\u3059\u308b\u3053\u3068\u304c\u671f\u5f85\u3067\u304d\u308b\n\n## <i class='fa fa-search-minus'></i> \u30d5\u30a9\u30fc\u30ab\u30b9\n`gem install <your-gem>` \u306e\u3088\u3046\u306a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3084\u3001\u30c4\u30fc\u30eb\u306e\u30c7\u30d7\u30ed\u30a4\u81ea\u4f53\u306b\u3064\u3044\u3066\u306f\nAruba\u306e\u30d5\u30a9\u30fc\u30ab\u30b9\u5916\u3068\u3059\u308b\u3002\n\n## <i class='fa fa-flask'></i> \u30b5\u30f3\u30d7\u30eb\nfizzbuzz \u3092\u5b9f\u884c\u3059\u308b CLI \u30c4\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n### <i class='fa fa-check'></i> \u6e96\u5099\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u6e96\u5099\u3057\u307e\u3059\n\n* \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n\n```sh\n$ bundle gem -t rspec --exe fizzbuzz\n```\n\n* gemspec \u306b thor \u3068 aruba \u3092\u8ffd\u52a0\u3059\u308b\n\n```ruby:fizzbuzz.gemspec\n# \u7565\n  spec.add_runtime_dependency 'thor'\n\n  spec.add_development_dependency \"aruba\"\n# \u7565\n```\n\n* \u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n```sh\n$ bundle install --path vendor/bundle\n```\n\n* FizzBuzz\u306e\u5b9f\u88c5 lib/fizzbuzz.rb\n\n```ruby:lib/fizzbuzz.rb\nrequire 'fizzbuzz/version'\nrequire 'cli'\n\n# FizzBuzz\n#\n# FizzBuzz\u306e\u8a08\u7b97\u3092\u884c\u3046\nmodule Fizzbuzz\n  module_function\n\n  def fizzbuzz(limit)\n    limit_number = Integer(limit)\n    (0..limit_number).map do |num|\n      if (num % 15).zero? then 'FizzBuzz'\n      elsif (num % 5).zero? then 'Buzz'\n      elsif (num % 3).zero? then 'Fizz'\n      else num.to_s\n      end\n    end\n  end\nend\n```\n\n* FizzBuzz\u306e\u5b9f\u88c5 lib/cli.rb\n\n```ruby:lib/cli.rb\nrequire 'thor'\n\n# Fizzbuzz::Models\nmodule Fizzbuzz\n  # CLI\n  #\n  # FizzBuzz\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\n  class CLI < Thor\n    class_option :help, type: :boolean, aliases: '-h', desc: 'help message.'\n    class_option :version, type: :boolean, desc: 'version'\n    class_option :debug, type: :boolean, aliases: '-d', desc: 'debug mode'\n\n    desc 'fizzbuzz', 'Get fizzbuzz result from limit number'\n    def fizzbuzz(limit)\n      print Fizzbuzz.fizzbuzz(limit).join(',')\n      exit\n    rescue => e\n      output_error_if_debug_mode(e)\n      exit(false)\n    end\n\n    desc 'version', 'version'\n    def version\n      puts Fizzbuzz::VERSION\n    end\n\n    private\n\n    def output_error_if_debug_mode(e)\n      return unless options[:debug]\n      STDERR.puts(e.message)\n      STDERR.puts(e.backtrace)\n    end\n  end\nend\n```\n\n* FizzBuzz\u306e\u5b9f\u88c5 exe/fizzbuzz\n\n```ruby:exe/fizzbuzz\n#!/usr/bin/env ruby\n\nrequire \"fizzbuzz\"\n\nFizzbuzz::CLI.start(ARGV)\n```\n\n* FizzBuzz\u306e\u30c6\u30b9\u30c8\u306e\u5b9f\u88c5 spec/fizzbuzz_spec.rb\n\n```ruby:spec/fizzbuzz_spec.rb\nrequire 'spec_helper'\n\ndescribe Fizzbuzz do\n  it 'has a version number' do\n    expect(Fizzbuzz::VERSION).not_to be nil\n  end\n\n  context '.fizzbuzz' do\n    it \"\u6b63\u5e38\u7cfb\" do\n      expect(%w(FizzBuzz 1 2 Fizz 4 Buzz Fizz 7 8 Fizz Buzz 11 Fizz 13 14 FizzBuzz)).to eq(Fizzbuzz.fizzbuzz(\"15\"))\n    end\n\n    it \"\u6570\u5024\u4ee5\u5916\u306e\u5165\u529b\" do\n      expect { Fizzbuzz.fizzbuzz(\"a\") }.to raise_error(ArgumentError)\n    end\n  end\nend\n```\n\n### <i class='fa fa-wrench'></i> Aruba RSpec\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nAruba\u306fCucumber, RSpec, Minitest \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002  \n\u4eca\u56de\u306fRSpec\u7248\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n```sh\n$ bundle exec aruba init --test-framework rspec\n      append  spec/spec_helper.rb\n   identical  spec/support/aruba.rb\n      append  Gemfile\n```\n\n* Gemfile \u306b aruba \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\n\n```ruby:Gemfile\nsource 'https://rubygems.org'\n\ngemspec\ngem 'aruba', '~> 0.14.2'\n```\n\n* spec/support/aruba.rb \u304c\u8ffd\u52a0\u3055\u308c\u307e\u3059\n\n```ruby:spec/support/aruba.rb\nrequire 'aruba/rspec'\n```\n\n* spec/spec_helper.rb \u306b\u4ee5\u4e0b\u304c\u8ffd\u8a18\u3055\u308c\u307e\u3059\n\n(require 'fizzbuzz'\u3060\u3051\u624b\u52d5\u3067\u8ffd\u8a18\u3057\u307e\u3057\u305f)\n\n```ruby:spec/spec_helper.rb\n$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)\nrequire 'fizzbuzz'\n\nif RUBY_VERSION < '1.9.3'\n  ::Dir.glob(::File.expand_path('../support/*.rb', __FILE__)).each { |f| require File.join(File.dirname(f), File.basename(f, '.rb')) }\n  ::Dir.glob(::File.expand_path('../support/**/*.rb', __FILE__)).each { |f| require File.join(File.dirname(f), File.basename(f, '.rb')) }\nelse\n  ::Dir.glob(::File.expand_path('../support/*.rb', __FILE__)).each { |f| require_relative f }\n  ::Dir.glob(::File.expand_path('../support/**/*.rb', __FILE__)).each { |f| require_relative f }\nend\n```\n\n* spec/cli_spec.rb\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u304c Aruba \u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u3059\n\n```ruby:spec/cli_spec.rb\nrequire 'spec_helper'\n\nRSpec.describe 'fizzbuzz command', type: :aruba do\n  context 'version option' do\n    before(:each) { run('fizzbuzz v') }\n    it { expect(last_command_started).to be_successfully_executed }\n    it { expect(last_command_started).to have_output(\"0.1.0\") }\n  end\n\n  context 'help option' do\n    expected = <<~EXPECTED\n    Commands:\n      fizzbuzz fizzbuzz        # Get fizzbuzz result from limit number\n      fizzbuzz help [COMMAND]  # Describe available commands or one specific command\n      fizzbuzz version         # version\n\n    Options:\n      -h, [--help], [--no-help]        # help message.\n          [--version], [--no-version]  # version\n      -d, [--debug], [--no-debug]      # debug mode\nEXPECTED\n\n    before(:each) { run('fizzbuzz help') }\n    it { expect(last_command_started).to be_successfully_executed }\n    it { expect(last_command_started).to have_output(expected) }\n  end\n\n  context 'fizzbuzz subcommand' do\n    expected = %w(FizzBuzz 1 2 Fizz 4 Buzz Fizz 7 8 Fizz Buzz 11 Fizz 13 14 FizzBuzz).join(',')\n    before(:each) { run('fizzbuzz fizzbuzz 15') }\n    it { expect(last_command_started).to be_successfully_executed }\n    it { expect(last_command_started).to have_output(expected) }\n  end\n\n  context 'fizzbuzz subcommand invalid args' do\n    before(:each) { run('fizzbuzz fizzbuzz a') }\n    it { expect(last_command_started).not_to be_successfully_executed }\n  end\nend\n```\n\n* `to be_successfully_executed`\n    * status 0 \u3067\u7d42\u4e86\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n* `not_to be_successfully_executed`\n    * status 0 \u4ee5\u5916\u3067\u7d42\u4e86\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n* `to have_output(contents)`\n    * \u51fa\u529b\u304c contents \u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\u6b63\u898f\u8868\u73fe\u3082\u4f7f\u7528\u53ef\u80fd\n\n### <i class='fa fa-terminal'></i> \u5b9f\u884c\n```sh\n$ bundle exec rspec spec/cli_spec.rb\n\nfizzbuzz command\n  version option\n    should be successfully executed\n    should have output: \"0.1.0\"\n  help option\n    should be successfully executed\n    should have output: \"Commands:\\n  fizzbuzz fizzbuzz        # Get fizzbuzz result from limit number\\n  fizzbuzz help [COMM...e.\\n      [--version], [--no-version]  # version\\n  -d, [--debug], [--no-debug]      # debug mode\\n\"\n  fizzbuzz subcommand\n    should be successfully executed\n    should have output: \"FizzBuzz,1,2,Fizz,4,Buzz,Fizz,7,8,Fizz,Buzz,11,Fizz,13,14,FizzBuzz\"\n  fizzbuzz subcommand invalid args\n    should not be successfully executed\n\nFinished in 3.1 seconds (files took 0.2151 seconds to load)\n7 examples, 0 failures\n```\n\n## <i class='fa fa-book'></i> \u53c2\u8003\nRuby\u306e\u9759\u7684\u89e3\u6790\u30c4\u30fc\u30eb RubyCritic \u3067 Aruba + Cucumber \u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n* [whitesmith/rubycritic - GitHub](https://github.com/whitesmith/rubycritic)\n\n## <i class='fa fa-github'></i> tbpgr/fizzbuzz\n\u4eca\u56de\u5b9f\u88c5\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4ee5\u4e0b\u306bup\u3057\u3066\u3042\u308a\u307e\u3059\n\n* [tbpgr/fizzbuzz - GitHub](https://github.com/tbpgr/fizzbuzz)\n\n## <i class=\"fa fa-book\" style=\"font-size:1em;\"></i> \u5916\u90e8\u8cc7\u6599\n* [aruba docs - relish](http://www.relishapp.com/cucumber/aruba/docs)\n* [cucumber/aruba - GitHub](https://github.com/cucumber/aruba)\n", "tags": ["Ruby", "RSpec", "minitest", "Cucumber", "cucumber-aruba"]}