{"context": "\n\n\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3068\u6587\u5b57\u5217\u30af\u30e9\u30b9\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u3067\u6587\u5b57\u5217\u3092\u6271\u3046\u969b\u3001\u30ea\u30c6\u30e9\u30eb\u3084C\u8a00\u8a9e\u6587\u5b57\u5217\u3092\u5225\u306b\u51e6\u7406\u3057\u305f\u3044\u6b32\u6c42\u304c\u751f\u3058\u305f\u3002\u305d\u306e\u65b9\u304c\u5b9f\u884c\u304c\u901f\u3044\u304b\u306a\u3063\u3066\u601d\u3063\u305f\n\u305d\u3053\u3067\u3001\u521d\u3081\u306b\u5358\u7d14\u306b\u6b21\u306e\u3088\u3046\u306btemplate\u95a2\u6570\u3092\u7528\u610f\u3057\u305f\u3002\ntemplate<typename String, typename Delimiter>\ninline std::vector<String> split(const String&, Delimiter&&); // (1)\n\ntemplate<typename CharT, size_t N, typename Delimiter>\ninline std::vector<typename std::basic_string<CharT>> split(const CharT (&)[N], Delimiter&&); // (2)\n\ntemplate<typename CharT, typename Delimiter>\ninline std::vector<typename std::basic_string<CharT>> split(const CharT*, Delimiter&&); // (3)\n\n\u3053\u308c\u3089\u306e\u95a2\u6570\u306f const char [N] \u578b\u4ee5\u5916\u306e\u578b\u306b\u5bfe\u3057\u3066\u306f\u671f\u5f85\u901a\u308a\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3055\u308c\u308b\u3002\u306a\u304aN\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u6574\u6570\u3068\u3059\u308b\u3002\nchar (&)[N]\u578b\u306a\u3089(2)\u304c\u9078\u3070\u308c\u3001const char* const\u578b\u306a\u3089(3)\u304c\u9078\u3070\u308c\u3001std::string\u578b\u306a\u3089(1)\u304c\u9078\u3070\u308c\u308b\u3002\n\nconst char [N] \u306e\u4e00\u81f4\u5ea6\n\u524d\u8ff0\u306etemplate\u95a2\u6570\u306bconst char [N]\u3092\u6e21\u3059\u3068\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306b\u5931\u6557\u3057\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\u539f\u56e0\u306f\u4e00\u81f4\u5ea6\u304c\u540c\u3058\u95a2\u6570\u304c2\u3064\u3042\u308b\u304b\u3089\u3067\u3042\u308b\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u5019\u88dc\u304c3\u3064\u3042\u308b\u3068\u3057\u304b\u6559\u3048\u3066\u304f\u308c\u306a\u3044\u306e\u3067\u4e00\u81f4\u5ea6\u306e\u6bd4\u8f03\u306b\u82e6\u52b4\u3057\u305f\u3002\n\u306a\u304a\u30b3\u30f3\u30d1\u30a4\u30e9\u306fg++ 5.4.0\u3092\u7528\u3044\u305f\u3002\n\u624b\u3067\u78ba\u8a8d\u3057\u3066\u3086\u304f\u3068\n(1)\u306fString = char [N]\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u308b\u306e\u3067 split(const char (&)[N], Delimiter&&) \u306esplit\u95a2\u6570\u304c\u3067\u304d\u308b\u3002\n(2)\u306fCharT = char\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u308b\u306e\u3067 split(const char (&)[N], Delimiter&&) \u306esplit\u95a2\u6570\u304c\u3067\u304d\u308b\u3002\n(3)\u306fCharT = char\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u308b\u306e\u3067 split(const char*, Delimiter&&) \u306esplit\u95a2\u6570\u304c\u3067\u304d\u308b\u3002\n\u6b21\u306b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u89e3\u91c8\u306b\u5165\u308b\u3002\nconst char[]\u306f\u30ad\u30e3\u30b9\u30c8\u7121\u304f(1), (2)\u3078\u9001\u308c\u308b\u304c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u6307\u5b9a\u306e\u5dee\u306b\u3088\u3063\u3066(2)\u306e\u65b9\u304c\u4e00\u81f4\u5ea6\u304c\u9ad8\u304f\u306a\u308b\u3002\n(3)\u306f\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u3057\u3066\u3044\u308b\u304c\u3001\u4eee\u5f15\u6570\u304c\u30dd\u30a4\u30f3\u30bf\u306e\u5024\u6e21\u3057\u3067\u3042\u308b\u305f\u3081\u914d\u5217\u304c\u30dd\u30a4\u30f3\u30bf\u3068\u540c\u7b49\u306e\u6271\u3044\u3092\u53d7\u3051\u308b\u3002\u3053\u306e\u305f\u3081\u5b8c\u5168\u4e00\u81f4\u3068\u307f\u306a\u3055\u308c(2)\u3068\u540c\u7b49\u306e\u4e00\u81f4\u5ea6\u3068\u306a\u308b\u3002\n\n\u89e3\u6c7a\u6cd5\n(3)\u306e\u30dd\u30a4\u30f3\u30bf\u304c\u5024\u6e21\u3057\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u914d\u5217\u3068\u30dd\u30a4\u30f3\u30bf\u306e\u533a\u5225\u304c\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5148\u307b\u3069\u306e\u5206\u6790\u3067\u5206\u304b\u3063\u305f\u3002\u914d\u5217\u306e\u30dd\u30a4\u30f3\u30bf\u6e21\u3057\u3092\u6291\u5236\u3059\u308b\u305f\u3081\u306b\u30dd\u30a4\u30f3\u30bf\u3092\u53c2\u7167\u6e21\u3057\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3002\ntemplate<typename CharT, typename Delimiter>\ninline std::vector<typename std::basic_string<CharT>> split(const CharT*&, Delimiter&&); // (3')\n\n\u3053\u308c\u3067const char[]\u3092\u6e21\u3057\u305f\u3068\u304d\u306f CharT \u3092 const CharT* \u3078\u89e3\u91c8\u3067\u304d\u306a\u304f\u306a\u308a\u3001\u3081\u3067\u305f\u304f\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306f(2)\u3092\u9078\u3093\u3067\u304f\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n\u914d\u5217\u3068\u30dd\u30a4\u30f3\u30bf\u53c2\u7167\u4eee\u5f15\u6570\n\u306a\u305c\u3001\u30dd\u30a4\u30f3\u30bf\u53c2\u7167\u306e\u4eee\u5f15\u6570\u306f\u914d\u5217\u3092\u53d7\u3051\u53d6\u308c\u306a\u3044\u306e\u304b\u3002\u7591\u554f\u306b\u601d\u3063\u305f\u65b9\u306f\u3044\u308b\u3060\u308d\u3046\u304b\u3002\n\u3053\u308c\u306b\u306f\u53c2\u7167\u6e21\u3057\u3067\u306f\u914d\u5217\u306e\u578b\u304c\u7dad\u6301\u3055\u308c\u308b\u3068\u3044\u3046\u7279\u6027\u304c\u95a2\u4fc2\u3057\u3066\u3044\u308b\u3002\u3064\u307e\u308a(2)\u3067\u4f7f\u3063\u3066\u3044\u308b\u30c6\u30af\u30cb\u30c3\u30af\u304c\u7b54\u3048\u3060\u3002\ntemplate<typename CharT, size_t N, typename Delimiter>\ninline std::vector<typename std::basic_string<CharT>> split(const CharT (&)[N], Delimiter&&); // (2)\n\n\u914d\u5217\u3092\u53c2\u7167\u6e21\u3057\u3059\u308b\u3068\u3001\u6b63\u78ba\u306b const char [] \u304c\u6e21\u3055\u308c\u3001const CharT (&)[N]\u306b\u5f53\u3066\u306f\u3081\u3066\u3001CharT\u3068N\u3092\u63a8\u8ad6\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\u540c\u69d8\u306b(3')\u3082\u5f15\u6570\u304c\u53c2\u7167\u3067\u3042\u308b\u304b\u3089\u3001const char[] \u578b\u304c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u89e3\u91c8\u5019\u88dc\u306b\u5165\u308b\u3002\u3060\u304c\u3053\u308c\u306f const CharT* \u3068\u3057\u3066\u307f\u3088\u3046\u3068\u3057\u3066\u3082*\u304c\u3069\u3053\u306b\u3082\u306a\u3044\u306e\u3067CharT\u3092\u63a8\u8ad6\u3067\u304d\u306a\u3044\u3002\n\u3053\u3046\u3057\u3066(3')\u306f\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u5019\u88dc\u304b\u3089\u5916\u308c\u307e\u3057\u305f\u3002\n\n\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u30c6\u30b9\u30c8\u306b\u4f7f\u7528\u3057\u305f\u30ea\u30dd\u30b8\u30c8\u30ea(\u30b3\u30fc\u30c9\u3068\u30c6\u30b9\u30c8)\nrepository: forno/xmaho\nsource code: include/xmaho/string/split.hpp\ntest code: test/string/split.cpp\ntravis log: Pull Request #29\n\n\u8ffd\u8a18\n\u306a\u304a\u3001\u771f\u306b\u6b63\u78ba\u306b\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u306b\u306f\u3001(3')\u306b\u3082\u8aa4\u308a\u304c\u3042\u308aconst\u306a\u53c2\u7167\u3067\u53d7\u3051\u53d6\u3089\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\nconst lvalue reference\u3067\u306a\u3051\u308c\u3070\u53f3\u8fba\u5024\u3092\u53d7\u3051\u53d6\u308b\u969b\u306b\u30a8\u30e9\u30fc\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u5b8c\u6210\u3057\u305f\u95a2\u6570\u306f\u3053\u3061\u3089\u3068\u306a\u308b\u3002 \ntemplate<typename String, typename Delimiter>\ninline std::vector<String> split(const String&, Delimiter&&); // (1)\n\ntemplate<typename CharT, size_t N, typename Delimiter>\ninline std::vector<typename std::basic_string<CharT>> split(const CharT (&)[N], Delimiter&&); // (2)\n\ntemplate<typename CharT, typename Delimiter>\ninline std::vector<typename std::basic_string<CharT>> split(const CharT* const&, Delimiter&&); // (3'')\n\n# \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3068\u6587\u5b57\u5217\u30af\u30e9\u30b9\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u3067\u6587\u5b57\u5217\u3092\u6271\u3046\u969b\u3001\u30ea\u30c6\u30e9\u30eb\u3084C\u8a00\u8a9e\u6587\u5b57\u5217\u3092\u5225\u306b\u51e6\u7406\u3057\u305f\u3044\u6b32\u6c42\u304c\u751f\u3058\u305f\u3002~~\u305d\u306e\u65b9\u304c\u5b9f\u884c\u304c\u901f\u3044\u304b\u306a\u3063\u3066\u601d\u3063\u305f~~\n\u305d\u3053\u3067\u3001\u521d\u3081\u306b\u5358\u7d14\u306b\u6b21\u306e\u3088\u3046\u306btemplate\u95a2\u6570\u3092\u7528\u610f\u3057\u305f\u3002\n\n```cpp\ntemplate<typename String, typename Delimiter>\ninline std::vector<String> split(const String&, Delimiter&&); // (1)\n\ntemplate<typename CharT, size_t N, typename Delimiter>\ninline std::vector<typename std::basic_string<CharT>> split(const CharT (&)[N], Delimiter&&); // (2)\n\ntemplate<typename CharT, typename Delimiter>\ninline std::vector<typename std::basic_string<CharT>> split(const CharT*, Delimiter&&); // (3)\n```\n\n\u3053\u308c\u3089\u306e\u95a2\u6570\u306f `const char [N]` \u578b\u4ee5\u5916\u306e\u578b\u306b\u5bfe\u3057\u3066\u306f\u671f\u5f85\u901a\u308a\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3055\u308c\u308b\u3002\u306a\u304a`N`\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u6574\u6570\u3068\u3059\u308b\u3002\n`char (&)[N]`\u578b\u306a\u3089(2)\u304c\u9078\u3070\u308c\u3001`const char* const`\u578b\u306a\u3089(3)\u304c\u9078\u3070\u308c\u3001`std::string`\u578b\u306a\u3089(1)\u304c\u9078\u3070\u308c\u308b\u3002\n\n## `const char [N]` \u306e\u4e00\u81f4\u5ea6\n\u524d\u8ff0\u306etemplate\u95a2\u6570\u306b`const char [N]`\u3092\u6e21\u3059\u3068\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306b\u5931\u6557\u3057\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\u539f\u56e0\u306f\u4e00\u81f4\u5ea6\u304c\u540c\u3058\u95a2\u6570\u304c2\u3064\u3042\u308b\u304b\u3089\u3067\u3042\u308b\u3002\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u5019\u88dc\u304c3\u3064\u3042\u308b\u3068\u3057\u304b\u6559\u3048\u3066\u304f\u308c\u306a\u3044\u306e\u3067\u4e00\u81f4\u5ea6\u306e\u6bd4\u8f03\u306b\u82e6\u52b4\u3057\u305f\u3002\n\u306a\u304a\u30b3\u30f3\u30d1\u30a4\u30e9\u306fg++ 5.4.0\u3092\u7528\u3044\u305f\u3002\n\n\u624b\u3067\u78ba\u8a8d\u3057\u3066\u3086\u304f\u3068\n\n(1)\u306f`String = char [N]`\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u308b\u306e\u3067 `split(const char (&)[N], Delimiter&&)` \u306esplit\u95a2\u6570\u304c\u3067\u304d\u308b\u3002\n(2)\u306f`CharT = char`\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u308b\u306e\u3067 `split(const char (&)[N], Delimiter&&)` \u306esplit\u95a2\u6570\u304c\u3067\u304d\u308b\u3002\n(3)\u306f`CharT = char`\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u308b\u306e\u3067 `split(const char*, Delimiter&&)` \u306esplit\u95a2\u6570\u304c\u3067\u304d\u308b\u3002\n\n\u6b21\u306b\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u89e3\u91c8\u306b\u5165\u308b\u3002\n`const char[]`\u306f\u30ad\u30e3\u30b9\u30c8\u7121\u304f(1), (2)\u3078\u9001\u308c\u308b\u304c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u6307\u5b9a\u306e\u5dee\u306b\u3088\u3063\u3066(2)\u306e\u65b9\u304c\u4e00\u81f4\u5ea6\u304c\u9ad8\u304f\u306a\u308b\u3002\n(3)\u306f\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u3057\u3066\u3044\u308b\u304c\u3001\u4eee\u5f15\u6570\u304c\u30dd\u30a4\u30f3\u30bf\u306e\u5024\u6e21\u3057\u3067\u3042\u308b\u305f\u3081\u914d\u5217\u304c\u30dd\u30a4\u30f3\u30bf\u3068\u540c\u7b49\u306e\u6271\u3044\u3092\u53d7\u3051\u308b\u3002\u3053\u306e\u305f\u3081\u5b8c\u5168\u4e00\u81f4\u3068\u307f\u306a\u3055\u308c(2)\u3068\u540c\u7b49\u306e\u4e00\u81f4\u5ea6\u3068\u306a\u308b\u3002\n\n## \u89e3\u6c7a\u6cd5\n(3)\u306e\u30dd\u30a4\u30f3\u30bf\u304c\u5024\u6e21\u3057\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u914d\u5217\u3068\u30dd\u30a4\u30f3\u30bf\u306e\u533a\u5225\u304c\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5148\u307b\u3069\u306e\u5206\u6790\u3067\u5206\u304b\u3063\u305f\u3002\u914d\u5217\u306e\u30dd\u30a4\u30f3\u30bf\u6e21\u3057\u3092\u6291\u5236\u3059\u308b\u305f\u3081\u306b\u30dd\u30a4\u30f3\u30bf\u3092\u53c2\u7167\u6e21\u3057\u3059\u308b\u3088\u3046\u306b\u5909\u66f4\u3059\u308b\u3002\n\n```cpp\ntemplate<typename CharT, typename Delimiter>\ninline std::vector<typename std::basic_string<CharT>> split(const CharT*&, Delimiter&&); // (3')\n```\n\n\u3053\u308c\u3067`const char[]`\u3092\u6e21\u3057\u305f\u3068\u304d\u306f CharT \u3092 `const CharT*` \u3078\u89e3\u91c8\u3067\u304d\u306a\u304f\u306a\u308a\u3001\u3081\u3067\u305f\u304f\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306f(2)\u3092\u9078\u3093\u3067\u304f\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n# \u914d\u5217\u3068\u30dd\u30a4\u30f3\u30bf\u53c2\u7167\u4eee\u5f15\u6570\n\u306a\u305c\u3001\u30dd\u30a4\u30f3\u30bf\u53c2\u7167\u306e\u4eee\u5f15\u6570\u306f\u914d\u5217\u3092\u53d7\u3051\u53d6\u308c\u306a\u3044\u306e\u304b\u3002\u7591\u554f\u306b\u601d\u3063\u305f\u65b9\u306f\u3044\u308b\u3060\u308d\u3046\u304b\u3002\n\u3053\u308c\u306b\u306f\u53c2\u7167\u6e21\u3057\u3067\u306f\u914d\u5217\u306e\u578b\u304c\u7dad\u6301\u3055\u308c\u308b\u3068\u3044\u3046\u7279\u6027\u304c\u95a2\u4fc2\u3057\u3066\u3044\u308b\u3002\u3064\u307e\u308a(2)\u3067\u4f7f\u3063\u3066\u3044\u308b\u30c6\u30af\u30cb\u30c3\u30af\u304c\u7b54\u3048\u3060\u3002\n\n```cpp\ntemplate<typename CharT, size_t N, typename Delimiter>\ninline std::vector<typename std::basic_string<CharT>> split(const CharT (&)[N], Delimiter&&); // (2)\n```\n\n\u914d\u5217\u3092\u53c2\u7167\u6e21\u3057\u3059\u308b\u3068\u3001\u6b63\u78ba\u306b `const char []` \u304c\u6e21\u3055\u308c\u3001`const CharT (&)[N]`\u306b\u5f53\u3066\u306f\u3081\u3066\u3001`CharT`\u3068`N`\u3092\u63a8\u8ad6\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\u540c\u69d8\u306b(3')\u3082\u5f15\u6570\u304c\u53c2\u7167\u3067\u3042\u308b\u304b\u3089\u3001`const char[]` \u578b\u304c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u89e3\u91c8\u5019\u88dc\u306b\u5165\u308b\u3002\u3060\u304c\u3053\u308c\u306f `const CharT*` \u3068\u3057\u3066\u307f\u3088\u3046\u3068\u3057\u3066\u3082`*`\u304c\u3069\u3053\u306b\u3082\u306a\u3044\u306e\u3067`CharT`\u3092\u63a8\u8ad6\u3067\u304d\u306a\u3044\u3002\n\u3053\u3046\u3057\u3066(3')\u306f\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u5019\u88dc\u304b\u3089\u5916\u308c\u307e\u3057\u305f\u3002\n\n# \u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306e\u30c6\u30b9\u30c8\u306b\u4f7f\u7528\u3057\u305f\u30ea\u30dd\u30b8\u30c8\u30ea(\u30b3\u30fc\u30c9\u3068\u30c6\u30b9\u30c8)\n[repository: forno/xmaho](https://github.com/forno/xmaho)\n[source code: include/xmaho/string/split.hpp](https://github.com/forno/xmaho/blob/master/include/xmaho/string/split.hpp)\n[test code: test/string/split.cpp](https://github.com/forno/xmaho/blob/master/test/string/split.cpp)\n[travis log: Pull Request #29](https://travis-ci.org/forno/xmaho/builds/202990649)\n\n# \u8ffd\u8a18\n\u306a\u304a\u3001\u771f\u306b\u6b63\u78ba\u306b\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u306b\u306f\u3001(3')\u306b\u3082\u8aa4\u308a\u304c\u3042\u308aconst\u306a\u53c2\u7167\u3067\u53d7\u3051\u53d6\u3089\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\nconst lvalue reference\u3067\u306a\u3051\u308c\u3070\u53f3\u8fba\u5024\u3092\u53d7\u3051\u53d6\u308b\u969b\u306b\u30a8\u30e9\u30fc\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u5b8c\u6210\u3057\u305f\u95a2\u6570\u306f\u3053\u3061\u3089\u3068\u306a\u308b\u3002 \n\n```cpp\ntemplate<typename String, typename Delimiter>\ninline std::vector<String> split(const String&, Delimiter&&); // (1)\n\ntemplate<typename CharT, size_t N, typename Delimiter>\ninline std::vector<typename std::basic_string<CharT>> split(const CharT (&)[N], Delimiter&&); // (2)\n\ntemplate<typename CharT, typename Delimiter>\ninline std::vector<typename std::basic_string<CharT>> split(const CharT* const&, Delimiter&&); // (3'')\n```\n", "tags": ["C++", "template", "C++11", "\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9", "\u6587\u5b57\u5217"]}