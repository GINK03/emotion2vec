{"context": " More than 1 year has passed since last update.\u30ad\u30e2\u3044std::functional\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306e\u6e21\u3057\u65b9\u3092\u4f7f\u3046\n\u3053\u308c\u306e\u5b9f\u969b\u7684\u306a\u4f7f\u3044\u3069\u3053\u308d\u3060\u3063\u305f\u308a\u3068\u3044\u3046\u304a\u8a71\u3067\u3059\n\u4eca\u56de\u3001\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u898f\u7d04\u306e\u554f\u984c\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u4f9d\u5b58\u306e\u3082\u306e\u304c\u591a\u304f\u51fa\u3066\u304d\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\u4ecaVisualStudio2014CTP\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067VS\u306e\u66f8\u304d\u65b9\u3092\u3057\u3066\u3044\u307e\u3059\u304c\u3001gcc\u3084clang\u3092\u304a\u4f7f\u3044\u306e\u65b9\u306f\u898f\u7d04\u306e\u6307\u5b9a\u3092\u90e8\u5206\u3092\u8aad\u307f\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\u307e\u305a\u306f\u304a\u99b4\u67d3\u307f\u3002\n\u3053\u306e\u5b50\u3092\u7279\u6b8a\u5316\u3055\u305b\u3066\u3044\u304d\u307e\u3059\u3002\ntemplate < class >\nfunction_element\n{ // Type must be function-type!\n};\n\ncdecl\u7528\u3067\u3059\u3002\ngcc\u3001clang\u306e\u69cb\u6587\u3067\u306f\u3001[[cdecl]] Ret( Args... )\u3000\u3068\u306a\u308a\u307e\u3059\u3002\ntemplate < class Ret, class... Args >\nstruct func_element < Ret( __cdecl )( Args... ) >\n{\n  using type = Ret( __cdecl )( Args... );\n  using ret = Ret;\n  using args = std::tuple < Args... >;\n};\n\nstdcall\u7528\u3067\u3059\u3002\ncdecl\u3068\u5168\u304f\u5909\u308f\u308a\u307e\u305b\u3093\u3002\ngcc\u3001clang\u306e\u69cb\u6587\u3067\u306f\u3001[[stdcall]] Ret( Args... )\u3000\u3068\u306a\u308a\u307e\u3059\u3002\ntemplate < class Ret, class... Args >\nstruct func_element < Ret ( __stdcall ) ( Args... ) >\n{\n  using type = Ret( __stdcall )( Args... );\n  using ret = Ret;\n  using args = std::tuple < Args... >;\n};\n\n\u305d\u306e\u4ed6\u306e\u547c\u3073\u51fa\u3057\u898f\u7d04\u306b\u3064\u3044\u3066\u3082\u540c\u3058\u306a\u306e\u3067\u5272\u611b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\n\u3055\u3066\u3001\u5f15\u6570\u306b\u3064\u3044\u3066\u3067\u3059\u3002\n\u5b9f\u306f\u3001\u5f15\u6570\u306fstd::tuple\u306b\u304f\u308b\u3093\u3067\u3057\u307e\u3044\u307e\u3057\u305f\u306e\u3067\u3001\u7c21\u5358\u306b\u5f15\u6570\u306e\u60c5\u5831\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u5f15\u6570\u306e\u6570\u306f\u3001std::tuple_size\u3067\u3002\n// how many arguments\nstd::tuple_size < typename func_element < Func_type >::args >::value\n\nstd::tuple_element\u3067\u5f15\u6570\u306e\u578b\u3092\u30b2\u30c3\u30c8\u3002\n// the first argument\ntypename std::tuple_element < 0, typename func_element < Func_type >::args >::type;\n\nstd::tuple\u3067\u306f\u306a\u3044\u3082\u306e\u306b\u5305\u3093\u3060\u308a\u3059\u308b\u5834\u5408\u306f\u3001\u62e1\u5f35tuple_element\u306a\u3069\u304c\u53c2\u8003\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u601d\u3063\u305f\u3088\u308a\u77ed\u304f\u3066\u7c21\u5358\u306b\u6e08\u307f\u307e\u3057\u305f\u3002\n\u30e1\u30f3\u30d0\u95a2\u6570\u306b\u5fdc\u7528\u3059\u308c\u3070\u7279\u5b9a\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6301\u3064\u304b\u3069\u3046\u304b\u3067\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3067\u304d\u305f\u308a\u3057\u305d\u3046\u3067\u3059\u306d\u3002\n\u3067\u306f\u3067\u306f\u3002\n[\u30ad\u30e2\u3044std::functional\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306e\u6e21\u3057\u65b9\u3092\u4f7f\u3046](http://qiita.com/rinse_/items/2bb11ee08c38c135f85c)\n\u3053\u308c\u306e\u5b9f\u969b\u7684\u306a\u4f7f\u3044\u3069\u3053\u308d\u3060\u3063\u305f\u308a\u3068\u3044\u3046\u304a\u8a71\u3067\u3059\n\n\u4eca\u56de\u3001\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u898f\u7d04\u306e\u554f\u984c\u3067\u30b3\u30f3\u30d1\u30a4\u30e9\u4f9d\u5b58\u306e\u3082\u306e\u304c\u591a\u304f\u51fa\u3066\u304d\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\u4ecaVisualStudio2014CTP\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067VS\u306e\u66f8\u304d\u65b9\u3092\u3057\u3066\u3044\u307e\u3059\u304c\u3001gcc\u3084clang\u3092\u304a\u4f7f\u3044\u306e\u65b9\u306f\u898f\u7d04\u306e\u6307\u5b9a\u3092\u90e8\u5206\u3092\u8aad\u307f\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u307e\u305a\u306f\u304a\u99b4\u67d3\u307f\u3002\n\u3053\u306e\u5b50\u3092\u7279\u6b8a\u5316\u3055\u305b\u3066\u3044\u304d\u307e\u3059\u3002\n\n```\ntemplate < class >\nfunction_element\n{ // Type must be function-type!\n};\n```\n\ncdecl\u7528\u3067\u3059\u3002\ngcc\u3001clang\u306e\u69cb\u6587\u3067\u306f\u3001`[[cdecl]] Ret( Args... )`\u3000\u3068\u306a\u308a\u307e\u3059\u3002\n\n```\ntemplate < class Ret, class... Args >\nstruct func_element < Ret( __cdecl )( Args... ) >\n{\n  using type = Ret( __cdecl )( Args... );\n  using ret = Ret;\n  using args = std::tuple < Args... >;\n};\n```\n\nstdcall\u7528\u3067\u3059\u3002\ncdecl\u3068\u5168\u304f\u5909\u308f\u308a\u307e\u305b\u3093\u3002\ngcc\u3001clang\u306e\u69cb\u6587\u3067\u306f\u3001`[[stdcall]] Ret( Args... )`\u3000\u3068\u306a\u308a\u307e\u3059\u3002\n\n```\ntemplate < class Ret, class... Args >\nstruct func_element < Ret ( __stdcall ) ( Args... ) >\n{\n  using type = Ret( __stdcall )( Args... );\n  using ret = Ret;\n  using args = std::tuple < Args... >;\n};\n```\n\n\u305d\u306e\u4ed6\u306e\u547c\u3073\u51fa\u3057\u898f\u7d04\u306b\u3064\u3044\u3066\u3082\u540c\u3058\u306a\u306e\u3067\u5272\u611b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\n\u3055\u3066\u3001\u5f15\u6570\u306b\u3064\u3044\u3066\u3067\u3059\u3002\n\u5b9f\u306f\u3001\u5f15\u6570\u306fstd::tuple\u306b\u304f\u308b\u3093\u3067\u3057\u307e\u3044\u307e\u3057\u305f\u306e\u3067\u3001\u7c21\u5358\u306b\u5f15\u6570\u306e\u60c5\u5831\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u5f15\u6570\u306e\u6570\u306f\u3001std::tuple_size\u3067\u3002\n\n```\n// how many arguments\nstd::tuple_size < typename func_element < Func_type >::args >::value\n```\n\nstd::tuple_element\u3067\u5f15\u6570\u306e\u578b\u3092\u30b2\u30c3\u30c8\u3002\n\n```\n// the first argument\ntypename std::tuple_element < 0, typename func_element < Func_type >::args >::type;\n```\n\nstd::tuple\u3067\u306f\u306a\u3044\u3082\u306e\u306b\u5305\u3093\u3060\u308a\u3059\u308b\u5834\u5408\u306f\u3001[\u62e1\u5f35tuple_element](http://qiita.com/rinse_/items/3cbe2eab54e7c4537a8c)\u306a\u3069\u304c\u53c2\u8003\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u601d\u3063\u305f\u3088\u308a\u77ed\u304f\u3066\u7c21\u5358\u306b\u6e08\u307f\u307e\u3057\u305f\u3002\n\u30e1\u30f3\u30d0\u95a2\u6570\u306b\u5fdc\u7528\u3059\u308c\u3070\u7279\u5b9a\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u6301\u3064\u304b\u3069\u3046\u304b\u3067\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3067\u304d\u305f\u308a\u3057\u305d\u3046\u3067\u3059\u306d\u3002\n\n\u3067\u306f\u3067\u306f\u3002\n", "tags": ["C++11", "C++"]}