{"tags": ["Elixir", "Phoenix", "ecto", "statemachine"], "context": "phoenix\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067state_mc\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nstate_mc\u3068\u306felixir\u306eEcto\u7528\u306estatemachine\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\nEcto\u306estate_mc\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u307e\u305a\u3001phoenix\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306emix.exs\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n  def deps do\n    [{:state_mc, \"~> 0.1.0\"}]\n  end\n\n\u305d\u3057\u3066\u3001mix deps.get\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n\u4f7f\u3044\u65b9\n\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4e00\u7dd2\u306b\u898b\u307e\u3057\u3087\u3046\u3002\ndefmodule Example.User do\n  use Example.Web, :model\n\n  # StateMc.EctoSM\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\n  import StateMc.EctoSm\n\n  schema \"users\" do\n    # state\u30ab\u30e9\u30e0\n    field :state, :string, default: \"waiting\"\n  end\n\n  # statemc\u3068\u306fmacro\u3067\u3059\u3002\u7b2c\u4e00\u5f15\u6570\u306f\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u683c\u7d0d\u3059\u308b\u30ab\u30e9\u30e0\u540d\u3067\u3059\u3002\n  statemc :state do\n\n    # defstate\u30de\u30af\u30ed\u3067\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u914d\u5217\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n    defstate [:waiting, :approved, :rejected] \n\n    # defevent\u30de\u30af\u30ed\u3067\u3001\u30a4\u30d9\u30f3\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n    # \u30b9\u30c6\u30fc\u30bf\u30b9\u3092:waiting\u3042\u308b\u3044\u306f:rejected\u304b\u3089:approved\u306b\u5909\u66f4\u3059\u308b\u30a4\u30d9\u30f3\u30c8\n    defevent :approve, %{from: [:waiting, :rejected], to: :approved}, fn(changeset) ->\n      # \u3053\u3053\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u3059\u3002changeset\u5f15\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001DB\u306b\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u683c\u7d0d\u3059\u308b\u306a\u3069\u3001\u81ea\u7531\u306b\u51e6\u7406\u3067\u304d\u307e\u3059\u3002\n      changeset\n      |> Example.Repo.update()\n    end\n\n    # \u30b9\u30c6\u30fc\u30bf\u30b9\u3092:waiting\u304b\u3089:rejected\u306b\u5909\u66f4\u3059\u308b\u30a4\u30d9\u30f3\u30c8\n    defevent :reject, %{from: [:waiting], to: :rejected}, fn(changeset) ->\n      changeset\n      |> Example.Repo.update()\n    end\n  end\nend\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f:waiting, :approved, :rejected\u3068\u3044\u3046\u4e09\u3064\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3068approve\u3068reject\u3068\u3044\u3046\u4e8c\u3064\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002approve\u30a4\u30d9\u30f3\u30c8\u3067\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u3092:waiting\u3042\u308b\u3044\u306f:rejected\u304b\u3089:approved\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001reject\u30a4\u30d9\u30f3\u30c8\u3067\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u3092:waiting\u304b\u3089:rejected\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u5909\u66f4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nuser = Example.Repo.get(Example.User, 1)\nExample.User.current_state(user) # => \u73fe\u5728\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u53d6\u5f97\nExample.User.can_approve?(user)  # => :approved\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u5909\u66f4\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\nExample.User.can_reject?(user)   # => :rejected\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u5909\u66f4\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\nExample.User.approve(user)       # => :approved\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u5909\u66f4\u3059\u308b\nExample.User.reject(user)        # => \uff1arejected\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u5909\u66f4\u3059\u308b\n\n\n\u53c2\u8003\u30ea\u30f3\u30af\nhttps://github.com/leogi/state_mc\nphoenix\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067state_mc\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n[state_mc](https://github.com/leogi/state_mc)\u3068\u306felixir\u306eEcto\u7528\u306estatemachine\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\n\n# Ecto\u306estate_mc\u30e9\u30a4\u30d6\u30e9\u30ea\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u307e\u305a\u3001phoenix\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306emix.exs\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n ```elixir\n  def deps do\n    [{:state_mc, \"~> 0.1.0\"}]\n  end\n ```\n\u305d\u3057\u3066\u3001`mix deps.get`\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n## \u4f7f\u3044\u65b9\n\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4e00\u7dd2\u306b\u898b\u307e\u3057\u3087\u3046\u3002\n \n```elixir\ndefmodule Example.User do\n  use Example.Web, :model\n\n  # StateMc.EctoSM\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\n  import StateMc.EctoSm\n\n  schema \"users\" do\n    # state\u30ab\u30e9\u30e0\n    field :state, :string, default: \"waiting\"\n  end\n\n  # statemc\u3068\u306fmacro\u3067\u3059\u3002\u7b2c\u4e00\u5f15\u6570\u306f\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u683c\u7d0d\u3059\u308b\u30ab\u30e9\u30e0\u540d\u3067\u3059\u3002\n  statemc :state do\n\n    # defstate\u30de\u30af\u30ed\u3067\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u914d\u5217\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n    defstate [:waiting, :approved, :rejected] \n\n    # defevent\u30de\u30af\u30ed\u3067\u3001\u30a4\u30d9\u30f3\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n    # \u30b9\u30c6\u30fc\u30bf\u30b9\u3092:waiting\u3042\u308b\u3044\u306f:rejected\u304b\u3089:approved\u306b\u5909\u66f4\u3059\u308b\u30a4\u30d9\u30f3\u30c8\n    defevent :approve, %{from: [:waiting, :rejected], to: :approved}, fn(changeset) ->\n      # \u3053\u3053\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u3059\u3002changeset\u5f15\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001DB\u306b\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u683c\u7d0d\u3059\u308b\u306a\u3069\u3001\u81ea\u7531\u306b\u51e6\u7406\u3067\u304d\u307e\u3059\u3002\n      changeset\n      |> Example.Repo.update()\n    end\n\n    # \u30b9\u30c6\u30fc\u30bf\u30b9\u3092:waiting\u304b\u3089:rejected\u306b\u5909\u66f4\u3059\u308b\u30a4\u30d9\u30f3\u30c8\n    defevent :reject, %{from: [:waiting], to: :rejected}, fn(changeset) ->\n      changeset\n      |> Example.Repo.update()\n    end\n  end\nend\n```\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f:waiting, :approved, :rejected\u3068\u3044\u3046\u4e09\u3064\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3068approve\u3068reject\u3068\u3044\u3046\u4e8c\u3064\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3057\u305f\u3002approve\u30a4\u30d9\u30f3\u30c8\u3067\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u3092:waiting\u3042\u308b\u3044\u306f:rejected\u304b\u3089:approved\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001reject\u30a4\u30d9\u30f3\u30c8\u3067\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u3092:waiting\u304b\u3089:rejected\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u5909\u66f4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```elixir\nuser = Example.Repo.get(Example.User, 1)\nExample.User.current_state(user) # => \u73fe\u5728\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u53d6\u5f97\nExample.User.can_approve?(user)  # => :approved\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u5909\u66f4\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\nExample.User.can_reject?(user)   # => :rejected\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u5909\u66f4\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\nExample.User.approve(user)       # => :approved\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u5909\u66f4\u3059\u308b\nExample.User.reject(user)        # => \uff1arejected\u30b9\u30c6\u30fc\u30bf\u30b9\u306b\u5909\u66f4\u3059\u308b\n```\n\n# \u53c2\u8003\u30ea\u30f3\u30af\nhttps://github.com/leogi/state_mc\n"}