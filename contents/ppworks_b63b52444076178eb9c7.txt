{"tags": ["vps", "SSH", "server", "Linux", "Ubuntu"], "context": " More than 1 year has passed since last update.Cloud Core VPS\u306b\u4f5c\u696d\u7528\u74b0\u5883\u69cb\u7bc9\u3057\u305f\u6642\u306e\u30e1\u30e2\n\nzsh\nsudo aptitude install zsh\nchsh\n\n Changing the login shell for koshikawa\n Enter the new value, or press ENTER for the default\n        Login Shell [/bin/bash]: /usr/bin/zsh\n\n\nvim\nsudo aptitude install vim-nox\n\n\nsshd\nsudo vim /etc/ssh/sshd_config\n\nPort 2222\nPermitRootLogin no\nPasswordAuthentication no\n\nsudo /etc/init.d/ssh restart\n\n\nupdate\nsudo aptitude update && sudo aptitude safe-upgrade\nsudo aptitude install git-core\nsudo aptitude install zsh\n\n\nrvm\nsudo aptitude install curl\nsudo bash -s stable < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer )\n\nsudo aptitude install gcc\nsudo aptitude install automake\nsudo aptitude install zlib1g-dev\n\nrvmsudo rvm install 1.9.3-p125\nrvm install ruby1.9.3-p125\nrvmsudo rvm use ruby-1.9.3-p125\nrvmsudo rvm gemset create work\nrvmsudo rvm use ruby-1.9.3-p125@work\nrvmsudo rvm alias create default ruby-1.9.3-p125@work\nrvm --default use ruby-1.9.3-p125@work\n\nsudo aptitude install build-essential bison openssl libreadline5 libreadline5-dev curl zlib1g zlib1g-dev libssl-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev\n\ndefault\u306e\u4f5c\u696d\u7528ruby gemset \u306bheroku\u5165\u308c\u3066\u304a\u304f\ngem install heroku --no-ri --no-rdoc\n\n\nperlbrew\ncurl -kL http://install.perlbrew.pl | bash\nsource ~/perl5/perlbrew/etc/bashrc\nperlbrew install perl-5.14.2\nperlbrew switch perl-5.14.2\n\n\n\u8a00\u8a9e\u8a2d\u5b9a\nsudo aptitude install locale\nsudo aptitude install language-pack-ja-base\n\n\nnginx\nsudo aptitude install python-software-properties pkg-config\nsudo add-apt-repository \"deb http://ppa.launchpad.net/nginx/stable/ubuntu lucid main\"\nsudo aptitude update\nsudo aptitude install nginx\nsudo cp /etc/nginx/nginx.conf .\nsudo mkdir /tmp/nginx\nsudo chown www-data /tmp/nginx\n\n\nsysv-rc-conf\n\u518d\u8d77\u52d5\u6642\u306b\u3082\u30b5\u30fc\u30d3\u30b9\u8d77\u52d5\u3055\u305b\u308b\u8a2d\u5b9a\nsudo aptitude install sysv-rc-conf\nsudo sysv-rc-conf nginx on\n\n\nusage\nsysv-rc-conf --list\nsysv-rc-conf [\u30b5\u30fc\u30d3\u30b9\u540d] on\nsysv-rc-conf [\u30b5\u30fc\u30d3\u30b9\u540d] off\n\n\nmysql\nsudo aptitude install mysql-server-5.1\nsudo sysv-rc-conf mysql on\n\n\nmy.cnf\nsudo vim /etc/mysql/my.cnf\n\n[client]\ndefault-character-set   = utf8\n\n[mysqld]\nskip-name-resolve\ndefault-character-set   = utf8\nlog-bin=/var/log/mysql/mysql-slow.log\nlog-bin-index=bin.index\nlog_slow_queries        = /var/log/mysql/mysql-slow.log\nlong-query-time=1\nlog-queries-not-using-indexes\nlog-slow-admin-statements\n\n[mysqldump]\ndefault-character-set   = utf8\n\n[mysql]\ndefault-character-set   = utf8\n\n\ndaemontools\nsudo aptitude install svtools daemontools-run \nsudo reboot\n\n\njava\nsudo aptitude install python-software-properties\nsudo add-apt-repository ppa:sun-java-community-team/sun-java6\nsudo aptitude update\nsudo aptitude install sun-java6-jdk=6.21dlj-0ubuntu1~lucid1~ppa1\n\n\nunion platform server\ncd /usr/local/src\nsudo mkdir union\ncd union\nsudo wget http://unionplatform.com/releases/union/union_1.1.0.tar.gz\nsudo tar zxvf union_1.1.0.tar.gz\nsudo mv union /usr/local/union1.1.0\ncd /usr/local\nsudo ln -s union1.1.0 union\ncd union\nsudo chmod 755 *.sh\nsudo mkdir /etc/service/union\nsudo vim /etc/service/union/run\n\n#!/bin/sh\nexec 2>&1\ncd /usr/local/union || exit 1\nexec \\\njava -cp lib/union.jar:lib/stax-api-1.0.1.jar:lib/wstx-asl-3.2.6.jar net.user1.union.core.UnionMain start\n\nsudo chmod +x /etc/service/union/run\n\n\nunion server\u306e\u8d77\u52d5\u30fb\u518d\u8d77\u52d5\nsudo svc -u /etc/service/union/run\nsudo svc -d /etc/service/union/run\n\n\niptables\nsudo ufw status\nsudo ufw enable\n\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\n\nsudo ufw reload\nsudo ufw status verbose\nsudo ufw status numbered\n\nsudo ufw limit in 2222/tcp\nsudo ufw allow in http/tcp\nsudo ufw allow in 9110/tcp\nsudo ufw allow in 9100/tcp\n\n\nCloud Core VPS\u306b\u4f5c\u696d\u7528\u74b0\u5883\u69cb\u7bc9\u3057\u305f\u6642\u306e\u30e1\u30e2\n\n# zsh\n\n```\nsudo aptitude install zsh\nchsh\n```\n\n```\n Changing the login shell for koshikawa\n Enter the new value, or press ENTER for the default\n        Login Shell [/bin/bash]: /usr/bin/zsh\n```\n\n\n# vim\n\n```\nsudo aptitude install vim-nox\n```\n\n# sshd\n\n```\nsudo vim /etc/ssh/sshd_config\n```\n\n```\nPort 2222\nPermitRootLogin no\nPasswordAuthentication no\n```\n\n```\nsudo /etc/init.d/ssh restart\n```\n\n# update\n\n```\nsudo aptitude update && sudo aptitude safe-upgrade\nsudo aptitude install git-core\nsudo aptitude install zsh\n```\n\n# rvm\n\n```\nsudo aptitude install curl\nsudo bash -s stable < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer )\n```\n\n```\nsudo aptitude install gcc\nsudo aptitude install automake\nsudo aptitude install zlib1g-dev\n```\n\n```\nrvmsudo rvm install 1.9.3-p125\nrvm install ruby1.9.3-p125\nrvmsudo rvm use ruby-1.9.3-p125\nrvmsudo rvm gemset create work\nrvmsudo rvm use ruby-1.9.3-p125@work\nrvmsudo rvm alias create default ruby-1.9.3-p125@work\nrvm --default use ruby-1.9.3-p125@work\n```\n\n```\nsudo aptitude install build-essential bison openssl libreadline5 libreadline5-dev curl zlib1g zlib1g-dev libssl-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev\n```\n\ndefault\u306e\u4f5c\u696d\u7528ruby gemset \u306bheroku\u5165\u308c\u3066\u304a\u304f\n\n```\ngem install heroku --no-ri --no-rdoc\n```\n\n# perlbrew\n\n```\ncurl -kL http://install.perlbrew.pl | bash\nsource ~/perl5/perlbrew/etc/bashrc\nperlbrew install perl-5.14.2\nperlbrew switch perl-5.14.2\n```\n\n# \u8a00\u8a9e\u8a2d\u5b9a\n\n```\nsudo aptitude install locale\nsudo aptitude install language-pack-ja-base\n```\n\n# nginx\n\n```\nsudo aptitude install python-software-properties pkg-config\nsudo add-apt-repository \"deb http://ppa.launchpad.net/nginx/stable/ubuntu lucid main\"\nsudo aptitude update\nsudo aptitude install nginx\nsudo cp /etc/nginx/nginx.conf .\nsudo mkdir /tmp/nginx\nsudo chown www-data /tmp/nginx\n```\n\n# sysv-rc-conf\n\n\u518d\u8d77\u52d5\u6642\u306b\u3082\u30b5\u30fc\u30d3\u30b9\u8d77\u52d5\u3055\u305b\u308b\u8a2d\u5b9a\n\n```\nsudo aptitude install sysv-rc-conf\nsudo sysv-rc-conf nginx on\n```\n\n## usage\n\n```\nsysv-rc-conf --list\nsysv-rc-conf [\u30b5\u30fc\u30d3\u30b9\u540d] on\nsysv-rc-conf [\u30b5\u30fc\u30d3\u30b9\u540d] off\n```\n\n# mysql\n\n```\nsudo aptitude install mysql-server-5.1\nsudo sysv-rc-conf mysql on\n```\n\n## my.cnf\n\n\n```\nsudo vim /etc/mysql/my.cnf\n```\n\n```\n[client]\ndefault-character-set   = utf8\n\n[mysqld]\nskip-name-resolve\ndefault-character-set   = utf8\nlog-bin=/var/log/mysql/mysql-slow.log\nlog-bin-index=bin.index\nlog_slow_queries        = /var/log/mysql/mysql-slow.log\nlong-query-time=1\nlog-queries-not-using-indexes\nlog-slow-admin-statements\n\n[mysqldump]\ndefault-character-set   = utf8\n\n[mysql]\ndefault-character-set   = utf8\n```\n\n# daemontools\n\n```\nsudo aptitude install svtools daemontools-run \nsudo reboot\n```\n\n# java\n\n```\nsudo aptitude install python-software-properties\nsudo add-apt-repository ppa:sun-java-community-team/sun-java6\nsudo aptitude update\nsudo aptitude install sun-java6-jdk=6.21dlj-0ubuntu1~lucid1~ppa1\n```\n\n# union platform server\n\n```\ncd /usr/local/src\nsudo mkdir union\ncd union\nsudo wget http://unionplatform.com/releases/union/union_1.1.0.tar.gz\nsudo tar zxvf union_1.1.0.tar.gz\nsudo mv union /usr/local/union1.1.0\ncd /usr/local\nsudo ln -s union1.1.0 union\ncd union\nsudo chmod 755 *.sh\nsudo mkdir /etc/service/union\nsudo vim /etc/service/union/run\n```\n\n```\n#!/bin/sh\nexec 2>&1\ncd /usr/local/union || exit 1\nexec \\\njava -cp lib/union.jar:lib/stax-api-1.0.1.jar:lib/wstx-asl-3.2.6.jar net.user1.union.core.UnionMain start\n```\n\n```\nsudo chmod +x /etc/service/union/run\n```\n\n## union server\u306e\u8d77\u52d5\u30fb\u518d\u8d77\u52d5\n\n```\nsudo svc -u /etc/service/union/run\nsudo svc -d /etc/service/union/run\n```\n\n# iptables\n\n```\nsudo ufw status\nsudo ufw enable\n\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\n\nsudo ufw reload\nsudo ufw status verbose\nsudo ufw status numbered\n\nsudo ufw limit in 2222/tcp\nsudo ufw allow in http/tcp\nsudo ufw allow in 9110/tcp\nsudo ufw allow in 9100/tcp\n```\n\n\n\n"}