{"context": "\n\n\u76ee\u7684\n\u30a4\u30f3\u30d5\u30e9\u3092\u30b3\u30fc\u30c9\u3067\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30c4\u30fc\u30eb\u306eTerraform\u3092\u4f7f\u7528\u3057\u3001Ansible\u3068\u9023\u643a\u3057\u3066\u3044\u304f\n\n\u65b9\u6cd5\nDL\u3057\u3066PATH\u304c\u901a\u3063\u3066\u3044\u308b\u5834\u6240\u3078\u7f6e\u304f\u3060\u3051\u3002\n\n\u8a2d\u5b9a\n$ mkdir terraform-install\n$ wget https://releases.hashicorp.com/terraform/0.7.10/terraform_0.7.10_linux_amd64.zip\n$ unzip -d terraform-install terraform_0.7.10_linux_amd64.zip\n$ sudo  mv terraform /usr/bin/\n$ terraform -v\nTerraform v0.7.10\n\nYour version of Terraform is out of date! The latest version\nis 0.7.11. You can update by downloading from www.terraform.io\n\n\nTERRAFORM COMMANDS (CLI)\n$ terraform\nUsage: terraform [--version] [--help] <command> [args]\n\nThe available commands for execution are listed below.\nThe most common, useful commands are shown first, followed by\nless common or more advanced commands. If you're just getting\nstarted with Terraform, stick with the common commands. For the\nother commands, please read the help and docs before usage.\n\nCommon commands:\n    apply              Builds or changes infrastructure\n    destroy            Destroy Terraform-managed infrastructure\n    fmt                Rewrites config files to canonical format\n    get                Download and install modules for the configuration\n    graph              Create a visual graph of Terraform resources\n    import             Import existing infrastructure into Terraform\n    init               Initializes Terraform configuration from a module\n    output             Read an output from a state file\n    plan               Generate and show an execution plan\n    push               Upload this Terraform module to Atlas to run\n    refresh            Update local state file against real resources\n    remote             Configure remote state storage\n    show               Inspect Terraform state or plan\n    taint              Manually mark a resource for recreation\n    untaint            Manually unmark a resource as tainted\n    validate           Validates the Terraform files\n    version            Prints the Terraform version\n\nAll other commands:\n    state              Advanced state management\n\n# \u76ee\u7684\n\u30a4\u30f3\u30d5\u30e9\u3092\u30b3\u30fc\u30c9\u3067\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30c4\u30fc\u30eb\u306e[Terraform](https://www.terraform.io/)\u3092\u4f7f\u7528\u3057\u3001Ansible\u3068\u9023\u643a\u3057\u3066\u3044\u304f\n\n# \u65b9\u6cd5\nDL\u3057\u3066PATH\u304c\u901a\u3063\u3066\u3044\u308b\u5834\u6240\u3078\u7f6e\u304f\u3060\u3051\u3002\n\n# \u8a2d\u5b9a\n```bash\n$ mkdir terraform-install\n$ wget https://releases.hashicorp.com/terraform/0.7.10/terraform_0.7.10_linux_amd64.zip\n$ unzip -d terraform-install terraform_0.7.10_linux_amd64.zip\n$ sudo  mv terraform /usr/bin/\n$ terraform -v\nTerraform v0.7.10\n\nYour version of Terraform is out of date! The latest version\nis 0.7.11. You can update by downloading from www.terraform.io\n```\n\n# TERRAFORM COMMANDS (CLI)\n```bash\n$ terraform\nUsage: terraform [--version] [--help] <command> [args]\n\nThe available commands for execution are listed below.\nThe most common, useful commands are shown first, followed by\nless common or more advanced commands. If you're just getting\nstarted with Terraform, stick with the common commands. For the\nother commands, please read the help and docs before usage.\n\nCommon commands:\n    apply              Builds or changes infrastructure\n    destroy            Destroy Terraform-managed infrastructure\n    fmt                Rewrites config files to canonical format\n    get                Download and install modules for the configuration\n    graph              Create a visual graph of Terraform resources\n    import             Import existing infrastructure into Terraform\n    init               Initializes Terraform configuration from a module\n    output             Read an output from a state file\n    plan               Generate and show an execution plan\n    push               Upload this Terraform module to Atlas to run\n    refresh            Update local state file against real resources\n    remote             Configure remote state storage\n    show               Inspect Terraform state or plan\n    taint              Manually mark a resource for recreation\n    untaint            Manually unmark a resource as tainted\n    validate           Validates the Terraform files\n    version            Prints the Terraform version\n\nAll other commands:\n    state              Advanced state management\n```\n", "tags": ["Terraform"]}