{"context": " More than 1 year has passed since last update.Xamarin.Forms\u3084\u3063\u3066\u3044\u3066\u3061\u3087\u3063\u3068(-_-;)\u3063\u3066\u306a\u3063\u3066\u3057\u307e\u3046\u6240\u306bIsBusy\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5fae\u5999\u306a\u611f\u3058\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u4ed6\u306e\u64cd\u4f5c\u3067\u304d\u3061\u3083\u3046\u3057\u3002\n\u3053\u3046\u3044\u3046\u306e\u304c\u3084\u308a\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u3002\n\nDisplayAlert\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u4f7f\u3048\u308b\u30af\u30eb\u30af\u30eb\u56de\u308b\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u753b\u9762\u3092\u7c21\u5358\u306b\u4f5c\u308c\u306a\u3044\u304b\u306a\u3041\u3068\u601d\u3063\u3066\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u307e\u305aPCL\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u307f\u3067\u5b9f\u88c5\u3057\u3088\u3046\u3068\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u753b\u9762\u3092\u30de\u30b9\u30af\u3057\u3066\u80cc\u666f\u3092\u900f\u904e\u3055\u305b\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\u70ba\u306b\u306f\u3001\u4eca\u8868\u793a\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\u306eContent\u3092\u4f7f\u7528\u3057\u3066\u5225\u30da\u30fc\u30b8\u3092\u8868\u793a\u3057\u3066\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u306eContent\u3068\u5143\u3005\u306eContent\u3092\u91cd\u306d\u308b\u3068\u3044\u3046\u624b\u6cd5\u3067\u5b9f\u88c5\u3059\u308b\u4e8b\u304c\u51fa\u6765\u305f\u306e\u3067\u3059\u304c\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u9045\u3044\u3002\nXAML\u3092\u63cf\u753b\u3057\u76f4\u3057\u3001\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u3084\u308a\u76f4\u3057\u3068\u306a\u308b\u306e\u3067\u5927\u5909\u52d5\u4f5c\u304c\u9045\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u306a\u306e\u3067\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u6bce\u306b\u5b9f\u88c5\u3059\u308b\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n\u7c21\u5358\u306b\u4f5c\u308a\u305f\u304b\u3063\u305f\u306e\u3067DependencyService\u306b\u3066\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\u3068\u308a\u3042\u3048\u305aPCL\u5074\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n    public interface ILoadingMessage\n    {\n        /// <summary>\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u958b\u59cb\u3059\u308b</summary>\n        /// <param name=\"message\"></param>\n        void Show(string message);\n\n        /// <summary>\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u7d42\u4e86\u3059\u308b</summary>\n        void Hide();\n\n        /// <summary>\u72b6\u614b</summary>\n        bool IsShow { get; }\n    }\n\nAndroid\u306fProgressDialog\u3092\u8868\u793a\u3059\u308b\u3060\u3051\n    public class LoadingMessage : ILoadingMessage\n    {\n        private ProgressDialog progress;\n        /// <summary>\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u958b\u59cb\u3059\u308b</summary>\n        /// <param name=\"message\"></param>\n        public void Show(string message)\n        {\n            progress = new ProgressDialog(Forms.Context);\n            progress.Indeterminate = true;\n            progress.SetProgressStyle(ProgressDialogStyle.Spinner);\n            progress.SetCancelable(false);\n            progress.SetMessage(message);           \n            progress.Show();\n            ishow = true;\n        }\n\n        /// <summary>\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u7d42\u4e86\u3059\u308b</summary>\n        public void Hide()\n        {\n            progress?.Dismiss();\n            ishow = false;\n        }\n\n        /// <summary>\u72b6\u614b</summary>\n        public bool IsShow => ishow;\n\n        private bool ishow = false;\n    }\n\niOS\u306f\u3053\u3053\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nhttps://developer.xamarin.com/recipes/ios/standard_controls/popovers/display_a_loading_message/\n    public class LoadingMessage : ILoadingMessage\n    {\n        private LoadingOverlay loadpop;\n        /// <summary>\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u958b\u59cb\u3059\u308b</summary>\n        /// <param name=\"message\"></param>\n        public void Show(string message)\n        {            \n            var window = UIApplication.SharedApplication.KeyWindow;\n            var vc = window.RootViewController;\n            while (vc.PresentedViewController != null)\n            {\n                vc = vc.PresentedViewController;                \n            }\n\n            var bounds = UIScreen.MainScreen.Bounds;\n            loadpop = new LoadingOverlay(bounds, message);\n            vc.Add(loadpop);\n            ishow = true;\n        }\n\n        /// <summary>\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u7d42\u4e86\u3059\u308b</summary>\n        public void Hide()\n        {\n            loadpop.Hide();\n            ishow = false;\n        }\n\n        /// <summary>\u72b6\u614b</summary>\n        public bool IsShow => ishow;\n\n        private bool ishow = false;\n    }\n\n    public class LoadingOverlay : UIView\n    {\n        // control declarations\n        UIActivityIndicatorView activitySpinner;\n        UILabel loadingLabel;\n\n        public LoadingOverlay(CGRect frame, string message) : base(frame)\n        {\n            // configurable bits\n            BackgroundColor = UIColor.Black;\n            Alpha = 0.75f;\n            AutoresizingMask = UIViewAutoresizing.All;\n\n            nfloat labelHeight = 22;\n            nfloat labelWidth = Frame.Width - 20;\n\n            // derive the center x and y\n            nfloat centerX = Frame.Width / 2;\n            nfloat centerY = Frame.Height / 2;\n\n            // create the activity spinner, center it horizontall and put it 5 points above center x\n            activitySpinner = new UIActivityIndicatorView(UIActivityIndicatorViewStyle.WhiteLarge);\n            activitySpinner.Frame = new CGRect(\n                centerX - (activitySpinner.Frame.Width / 2),\n                centerY - activitySpinner.Frame.Height - 20,\n                activitySpinner.Frame.Width,\n                activitySpinner.Frame.Height);\n            activitySpinner.AutoresizingMask = UIViewAutoresizing.All;\n            AddSubview(activitySpinner);\n            activitySpinner.StartAnimating();\n\n            // create and configure the \"Loading Data\" label\n            loadingLabel = new UILabel(new CGRect(\n                centerX - (labelWidth / 2),\n                centerY + 20,\n                labelWidth,\n                labelHeight\n                ));\n            loadingLabel.BackgroundColor = UIColor.Clear;\n            loadingLabel.TextColor = UIColor.White;\n            loadingLabel.Text = message;\n            loadingLabel.TextAlignment = UITextAlignment.Center;\n            loadingLabel.AutoresizingMask = UIViewAutoresizing.All;\n            AddSubview(loadingLabel);\n\n        }\n\n        /// <summary>\n        /// Fades out the control and then removes it from the super view\n        /// </summary>\n        public void Hide()\n        {\n            UIView.Animate(\n                0.5, // duration\n                () => { Alpha = 0; },\n                () => { RemoveFromSuperview(); }\n            );\n        }\n    }\n\n\u7d50\u69cb\u5feb\u9069\u306b\u52d5\u4f5c\u3057\u3066\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u3053\u308c\u3060\u3051\u3067\u306f\u30dc\u30bf\u30f3\u4e8c\u5ea6\u62bc\u3057\u5bfe\u7b56\u306b\u306f\u306a\u3089\u306a\u3044\u306e\u3067\n\u305d\u3053\u3089\u8fba\u306f\u3001\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u826f\u3044\u6848\u304c\u306a\u3044\u304b\u8003\u3048\u4e2d\u3067\u3059\u3002\n\u3042\u3068\u3001\u52d5\u4f5c\u30b9\u30ec\u30c3\u30c9\u306b\u95a2\u3057\u3066\u8003\u616e\u305b\u305a\u306b\u4f5c\u3063\u3066\u3044\u308b\u306e\u3067\u547c\u3073\u51fa\u3057\u5143\u304cUIThread\u51fa\u306a\u3044\u5834\u5408\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\nXamarin.Forms\u3084\u3063\u3066\u3044\u3066\u3061\u3087\u3063\u3068(-_-;)\u3063\u3066\u306a\u3063\u3066\u3057\u307e\u3046\u6240\u306bIsBusy\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5fae\u5999\u306a\u611f\u3058\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u4ed6\u306e\u64cd\u4f5c\u3067\u304d\u3061\u3083\u3046\u3057\u3002\n\n\u3053\u3046\u3044\u3046\u306e\u304c\u3084\u308a\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u3002\n![alt](http://cdn-ak.f.st-hatena.com/images/fotolife/k/kojikoji75/20140320/20140320223129.png)\n\nDisplayAlert\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u4f7f\u3048\u308b\u30af\u30eb\u30af\u30eb\u56de\u308b\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u753b\u9762\u3092\u7c21\u5358\u306b\u4f5c\u308c\u306a\u3044\u304b\u306a\u3041\u3068\u601d\u3063\u3066\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u307e\u305aPCL\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u307f\u3067\u5b9f\u88c5\u3057\u3088\u3046\u3068\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u753b\u9762\u3092\u30de\u30b9\u30af\u3057\u3066\u80cc\u666f\u3092\u900f\u904e\u3055\u305b\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\u70ba\u306b\u306f\u3001\u4eca\u8868\u793a\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\u306eContent\u3092\u4f7f\u7528\u3057\u3066\u5225\u30da\u30fc\u30b8\u3092\u8868\u793a\u3057\u3066\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u306eContent\u3068\u5143\u3005\u306eContent\u3092\u91cd\u306d\u308b\u3068\u3044\u3046\u624b\u6cd5\u3067\u5b9f\u88c5\u3059\u308b\u4e8b\u304c\u51fa\u6765\u305f\u306e\u3067\u3059\u304c\u30fb\u30fb\u30fb\u30fb\u30fb\u30fb\u9045\u3044\u3002\n\nXAML\u3092\u63cf\u753b\u3057\u76f4\u3057\u3001\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u3084\u308a\u76f4\u3057\u3068\u306a\u308b\u306e\u3067\u5927\u5909\u52d5\u4f5c\u304c\u9045\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n\u306a\u306e\u3067\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u6bce\u306b\u5b9f\u88c5\u3059\u308b\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n\u7c21\u5358\u306b\u4f5c\u308a\u305f\u304b\u3063\u305f\u306e\u3067DependencyService\u306b\u3066\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n\u3068\u308a\u3042\u3048\u305aPCL\u5074\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\n```csharp\n    public interface ILoadingMessage\n    {\n        /// <summary>\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u958b\u59cb\u3059\u308b</summary>\n        /// <param name=\"message\"></param>\n        void Show(string message);\n\n        /// <summary>\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u7d42\u4e86\u3059\u308b</summary>\n        void Hide();\n\n        /// <summary>\u72b6\u614b</summary>\n        bool IsShow { get; }\n    }\n```\n\nAndroid\u306fProgressDialog\u3092\u8868\u793a\u3059\u308b\u3060\u3051\n\n```csharp\n    public class LoadingMessage : ILoadingMessage\n    {\n        private ProgressDialog progress;\n        /// <summary>\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u958b\u59cb\u3059\u308b</summary>\n        /// <param name=\"message\"></param>\n        public void Show(string message)\n        {\n            progress = new ProgressDialog(Forms.Context);\n            progress.Indeterminate = true;\n            progress.SetProgressStyle(ProgressDialogStyle.Spinner);\n            progress.SetCancelable(false);\n            progress.SetMessage(message);           \n            progress.Show();\n            ishow = true;\n        }\n\n        /// <summary>\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u7d42\u4e86\u3059\u308b</summary>\n        public void Hide()\n        {\n            progress?.Dismiss();\n            ishow = false;\n        }\n\n        /// <summary>\u72b6\u614b</summary>\n        public bool IsShow => ishow;\n\n        private bool ishow = false;\n    }\n```\n\niOS\u306f\u3053\u3053\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\nhttps://developer.xamarin.com/recipes/ios/standard_controls/popovers/display_a_loading_message/\n\n```csharp\n    public class LoadingMessage : ILoadingMessage\n    {\n        private LoadingOverlay loadpop;\n        /// <summary>\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u958b\u59cb\u3059\u308b</summary>\n        /// <param name=\"message\"></param>\n        public void Show(string message)\n        {            \n            var window = UIApplication.SharedApplication.KeyWindow;\n            var vc = window.RootViewController;\n            while (vc.PresentedViewController != null)\n            {\n                vc = vc.PresentedViewController;                \n            }\n\n            var bounds = UIScreen.MainScreen.Bounds;\n            loadpop = new LoadingOverlay(bounds, message);\n            vc.Add(loadpop);\n            ishow = true;\n        }\n\n        /// <summary>\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u7d42\u4e86\u3059\u308b</summary>\n        public void Hide()\n        {\n            loadpop.Hide();\n            ishow = false;\n        }\n\n        /// <summary>\u72b6\u614b</summary>\n        public bool IsShow => ishow;\n\n        private bool ishow = false;\n    }\n\n    public class LoadingOverlay : UIView\n    {\n        // control declarations\n        UIActivityIndicatorView activitySpinner;\n        UILabel loadingLabel;\n\n        public LoadingOverlay(CGRect frame, string message) : base(frame)\n        {\n            // configurable bits\n            BackgroundColor = UIColor.Black;\n            Alpha = 0.75f;\n            AutoresizingMask = UIViewAutoresizing.All;\n\n            nfloat labelHeight = 22;\n            nfloat labelWidth = Frame.Width - 20;\n\n            // derive the center x and y\n            nfloat centerX = Frame.Width / 2;\n            nfloat centerY = Frame.Height / 2;\n\n            // create the activity spinner, center it horizontall and put it 5 points above center x\n            activitySpinner = new UIActivityIndicatorView(UIActivityIndicatorViewStyle.WhiteLarge);\n            activitySpinner.Frame = new CGRect(\n                centerX - (activitySpinner.Frame.Width / 2),\n                centerY - activitySpinner.Frame.Height - 20,\n                activitySpinner.Frame.Width,\n                activitySpinner.Frame.Height);\n            activitySpinner.AutoresizingMask = UIViewAutoresizing.All;\n            AddSubview(activitySpinner);\n            activitySpinner.StartAnimating();\n\n            // create and configure the \"Loading Data\" label\n            loadingLabel = new UILabel(new CGRect(\n                centerX - (labelWidth / 2),\n                centerY + 20,\n                labelWidth,\n                labelHeight\n                ));\n            loadingLabel.BackgroundColor = UIColor.Clear;\n            loadingLabel.TextColor = UIColor.White;\n            loadingLabel.Text = message;\n            loadingLabel.TextAlignment = UITextAlignment.Center;\n            loadingLabel.AutoresizingMask = UIViewAutoresizing.All;\n            AddSubview(loadingLabel);\n\n        }\n\n        /// <summary>\n        /// Fades out the control and then removes it from the super view\n        /// </summary>\n        public void Hide()\n        {\n            UIView.Animate(\n                0.5, // duration\n                () => { Alpha = 0; },\n                () => { RemoveFromSuperview(); }\n            );\n        }\n    }\n```\n\n\u7d50\u69cb\u5feb\u9069\u306b\u52d5\u4f5c\u3057\u3066\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u6b8b\u5ff5\u306a\u304c\u3089\u3053\u308c\u3060\u3051\u3067\u306f\u30dc\u30bf\u30f3\u4e8c\u5ea6\u62bc\u3057\u5bfe\u7b56\u306b\u306f\u306a\u3089\u306a\u3044\u306e\u3067\n\u305d\u3053\u3089\u8fba\u306f\u3001\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u826f\u3044\u6848\u304c\u306a\u3044\u304b\u8003\u3048\u4e2d\u3067\u3059\u3002\n\n\u3042\u3068\u3001\u52d5\u4f5c\u30b9\u30ec\u30c3\u30c9\u306b\u95a2\u3057\u3066\u8003\u616e\u305b\u305a\u306b\u4f5c\u3063\u3066\u3044\u308b\u306e\u3067\u547c\u3073\u51fa\u3057\u5143\u304cUIThread\u51fa\u306a\u3044\u5834\u5408\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n", "tags": ["Xamarin", "Xamarin.Forms", "C#"]}