{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u3000OCaml\u3067\u97f3\u58f0\u30c7\u30fc\u30bf\u306b\u30d5\u30a3\u30eb\u30bf\u3092\u639b\u3051\u3066\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u518d\u751f\u3059\u308b\u306e\u3092\u8a66\u3057\u307e\u3059\uff08\u591a\u5206\u3053\u3046\u3044\u3046\u306e\u306fC\u304bC++\u3042\u305f\u308a\u3067\u3084\u308b\u306e\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u304c\uff09\u3002\n\n\u30b9\u30da\u30c3\u30af\n\u3000\u30b9\u30da\u30c3\u30af\u304c\u9ad8\u304f\u306a\u3044\u30de\u30b7\u30f3\u3067\u3082\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u518d\u751f\u51fa\u6765\u308b\u306e\u3092\u78ba\u8a8d\u3057\u305f\u3044\u306e\u3067Raspberry Pi\u3067\u8a66\u3057\u307e\u3059\u3002\n\n\u30de\u30b7\u30f3: Raspberry Pi (Model B)\nOS: RASPBIAN Debian Wheezy (September 2014)\nUSB Audio I/F: BEHRINGER UCA202\n\n\n\n\u4f7f\u7528\u3059\u308b\u30d5\u30a3\u30eb\u30bf\n\u3000\u4eca\u56de\u306fReaktor\u3067\u4f5c\u3063\u305f\u6b21\u306e\u30ed\u30fc\u30d1\u30b9\u30d5\u30a3\u30eb\u30bf\u3092OCaml\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002Reaktor\u306f\u534a\u984d\u30bb\u30fc\u30eb\u306e\u3068\u304d\u306b\u8cb7\u3046\u306e\u304c\u304a\u3059\u3059\u3081\u3067\u3059\u3002\n\n\u3000\u5404\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5165\u51fa\u529b\u306b\u6570\u5024\u4ee5\u5916\u306e\u6587\u5b57\u5217\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u6587\u5b57\u5217\u304c\u4e00\u81f4\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u306f\u7dda\u3067\u7e4b\u304c\u3063\u3066\u3044\u308b\u3068\u8003\u3048\u3066\u826f\u3044\u3067\u3059\u3002\u6587\u5b57\u5217\u3067\u63a5\u7d9a\u3092\u8868\u73fe\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u30b9\u30d1\u30b2\u30c3\u30c6\u30a3\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\"SR.R\"\u306f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8(44100\u308448000)\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4fe1\u53f7\u306e\u7a2e\u985e\u306b\u3064\u3044\u3066\n\u3000\u4fe1\u53f7\u306e\u7a2e\u985e\u306f\u5927\u304d\u304f\u5206\u3051\u30663\u3064\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\n\u7a2e\u985e\n\u8aac\u660e\n\n\n\n\n\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\n\u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u30b5\u30f3\u30d7\u30eb\u6bce\u306b\u66f4\u65b0\u3055\u308c\u308b\u4fe1\u53f7\n\n\n\u30a4\u30d9\u30f3\u30c8\u4fe1\u53f7\n\u30d1\u30e9\u30e1\u30fc\u30bf\u5024\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b\u66f4\u65b0\u3055\u308c\u308b\u4fe1\u53f7\n\n\n\u5b9a\u6570\u4fe1\u53f7\n\u63a5\u7d9a\u3092\u5909\u66f4\u3057\u306a\u3044\u9650\u308a\u306f\u4e00\u5b9a\u306e\u5024\u3092\u3068\u308b\u4fe1\u53f7\n\n\n\n\u3000\u4fe1\u53f7\u306e\u7a2e\u985e\u3067\u7d50\u7dda\u306b\u8272\u4ed8\u3051\u3057\u3066\u307f\u307e\u3059\u3002\u8d64:\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u3001\u7d2b:\u30a4\u30d9\u30f3\u30c8\u4fe1\u53f7\u3001\u9752:\u5b9a\u6570\u4fe1\u53f7\u3068\u3057\u307e\u3059\u3002\n\n\u3000\u4eca\u56de\u306f\u518d\u751f\u9014\u4e2d\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5909\u66f4\u306f\u7121\u3057\u3068\u3057\u305f\u3044\u306e\u3067\u6b21\u306e\u3088\u3046\u306b\u30a4\u30d9\u30f3\u30c8\u4fe1\u53f7\u3082\u5b9a\u6570\u4fe1\u53f7\u3068\u3057\u3066\u8003\u3048\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\n\u5b9f\u88c5\u306e\u65b9\u91dd\n\u3000\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6bce\u306b\u30ab\u30ec\u30f3\u30c8\u5024\u3092\u6301\u305f\u305b\u3001AudioIn\u304b\u3089\u958b\u59cb\u3057\u3066\u7e4b\u304c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6b21\u3005\u3068\u66f4\u65b0\u3059\u308b\u3053\u3068\u306b\u3088\u308aAudioOut\u306e\u5024\u3092\u7b97\u51fa\u3059\u308b\u65b9\u6cd5\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u304c\u3001\u305d\u306e\u5834\u5408\u306f\u30ab\u30ec\u30f3\u30c8\u5024\u3092mutable(\u7834\u58ca\u7684\u4ee3\u5165\u304c\u53ef\u80fd)\u306a\u5909\u6570\u306b\u3059\u308b\u65b9\u6cd5\u3057\u304b\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3042\u307e\u308a\u3084\u308a\u305f\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u4eca\u56de\u306fAudioOut\u3092\u958b\u59cb\u3068\u3057\u3066\u5024\u7b97\u51fa\u306b\u5fc5\u8981\u306a\u7d4c\u8def\u3092\u63a2\u7d22\u3057\u3066\u307f\u307e\u3059\u3002\n\nAuidoOut\u3092\u89aa\u3068\u3059\u308b\u30c4\u30ea\u30fc\u69cb\u9020\n\u3000\u7d4c\u8def\u306fAuidoOut\u3092\u89aa\u3068\u3059\u308b\u30c4\u30ea\u30fc\u69cb\u9020\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\u63a2\u7d22\u6642\u306e\u6ce8\u610f\u3067\u3059\u304cz^-1\uff08\u5358\u4f4d\u9045\u5ef6\u6f14\u7b97\u5b50\uff09\u304c\u898b\u3064\u304b\u3063\u305f\u3089\u305d\u306e\u5148\u306f\u63a2\u7d22\u305b\u305a\u306b\u6b62\u3081\u307e\u3059\u3002z^-1\u306f\u524d\u56de\u5024\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u306e\u3067AuidoOut\u5024\u306e\u7b97\u51fa\u306b\u306f\u305d\u308c\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\nz^-1\u3092\u89aa\u3068\u3059\u308b\u30c4\u30ea\u30fc\u69cb\u9020\n\u3000AuidoOut\u5024\u3092\u7b97\u51fa\u3059\u308b\u305f\u3081\u306b\u306f\u3001z^-1\u3082\u30b5\u30f3\u30d7\u30eb\u6bce\u306b\u6f0f\u308c\u306a\u304f\u66f4\u65b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u306e\u3067z^-1\u3092\u89aa\u3068\u3059\u308b\u30c4\u30ea\u30fc\u69cb\u9020\u3082\u8003\u3048\u307e\u3059\u3002\u63a2\u7d22\u3057\u305f\u7d50\u679c\u3001\u81ea\u5206\u81ea\u8eab\u306b\u5230\u9054\u3059\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\u30c4\u30ea\u30fc\u69cb\u9020\u3068\u8a00\u3063\u3066\u304a\u304d\u306a\u304c\u3089\u9014\u4e2d\u3067\u5408\u6d41\u3057\u3066\u308b\u3088\u3046\u306b\u3082\u898b\u3048\u307e\u3059\u306d\u3002\u3042\u307e\u308a\u6c17\u306b\u3057\u306a\u3044\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\n\n\u30c4\u30ea\u30fc\u3092\u8868\u73fe\u3059\u308b\n\u3000\u6b21\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u4ed8\u306e\u518d\u5e30\u30f4\u30a1\u30ea\u30a2\u30f3\u30c8\u3067\u30c4\u30ea\u30fc\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\n\n\u629c\u7c8b\n(* \u30c4\u30ea\u30fc\u69cb\u9020 *)\ntype tree =\n| AudioIn            (* \u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u5165\u529b *)\n| ZIn of int         (* \u9045\u5ef6\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u5165\u529b *)\n| Const of float     (* \u5b9a\u6570 *)\n| SampleRate         (* \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8 *)\n| Add of tree * tree (* \u52a0\u7b97 *)\n| Sub of tree * tree (* \u6e1b\u7b97 *)\n| Mul of tree * tree (* \u4e57\u7b97 *)\n| Div of tree * tree (* \u9664\u7b97 *)\n| Tan of tree        (* \u4e09\u89d2\u95a2\u6570\u306etan *)\n| AudioOut of tree   (* \u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u51fa\u529b *)\n| ZOut of tree       (* \u9045\u5ef6\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u51fa\u529b *)\n\n\n\u3000AudioOut\u3068ZOut\u3092\u89aa\u3068\u3057\u3066\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\u5358\u4f4d\u9045\u5ef6\u6f14\u7b97\u5b50\u306f\u5165\u529b\u306eZIn\u3068\u51fa\u529b\u306eZOut\u306e2\u3064\u306b\u5206\u3051\u307e\u3059\u3002ZIn\u306b\u306f\u8b58\u5225\u306e\u305f\u3081\u306eindex\u3092\u4fdd\u6301\u3057\uff08index\u306f\u9069\u5f53\u306bid\u3067\u30bd\u30fc\u30c8\u3057\u3066\u6607\u9806\u3067\u4ed8\u3051\u307e\u3059\uff09\u3001Const\u306b\u306f\u5b9a\u6570\u3092\u4fdd\u6301\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u6570\u5b66\u95a2\u6570\u306f\u4eca\u56de\u4f7f\u7528\u3059\u308bTan\u306e\u307f\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u63a5\u7d9a\u60c5\u5831\u306e\u4f5c\u6210\n\u3000\u518d\u5e30\u30f4\u30a1\u30ea\u30a2\u30f3\u30c8\u3067\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u8868\u73fe\u3059\u308b\u524d\u306b\u5143\u3068\u306a\u308b\u63a5\u7d9a\u60c5\u5831\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u5404\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8b58\u5225\u3059\u308b\u305f\u3081\u306b\u9069\u5f53\u306b\u756a\u53f7\u3092\u4ed8\u3051\u307e\u3059\u3002\n\n\nJSON\u3067\u63a5\u7d9a\u60c5\u5831\u3092\u8a18\u8ff0\u3059\u308b\n\u3000\u63a5\u7d9a\u60c5\u5831\u3092\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3059\u308b\u306e\u3082\u30a2\u30ec\u306a\u306e\u3067JSON\u30d5\u30a1\u30a4\u30eb\u3092\u624b\u4f5c\u308a\u3057\u307e\u3059\u3002\u5404\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6f14\u7b97\u3068\u63a5\u7d9a\u3092\u8a18\u8ff0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\ntest.json\n{\n  \"objects\": [\n    {\"id\": \"obj1\", \"operator\": \"audioin\"},\n    {\"id\": \"obj2\", \"operator\": \"const\", \"value\": 400.0},\n    {\"id\": \"obj3\", \"operator\": \"const\", \"value\": 0.707107},\n    {\"id\": \"obj4\", \"operator\": \"audioout\", \"inputs\": [\"obj26\"]},\n    {\"id\": \"obj5\", \"operator\": \"z^-1\", \"inputs\": [\"obj24\"]},\n    {\"id\": \"obj6\", \"operator\": \"z^-1\", \"inputs\": [\"obj27\"]},\n    {\"id\": \"obj7\", \"operator\": \"const\", \"value\": 3.14159},\n    {\"id\": \"obj8\", \"operator\": \"samplerate\"},\n    {\"id\": \"obj9\", \"operator\": \"div\", \"inputs\": [\"obj7\", \"obj8\"]},\n    {\"id\": \"obj10\", \"operator\": \"mul\", \"inputs\": [\"obj2\", \"obj9\"]},\n    {\"id\": \"obj11\", \"operator\": \"tan\", \"inputs\": [\"obj10\"]},\n    {\"id\": \"obj12\", \"operator\": \"const\", \"value\": 1.0},\n    {\"id\": \"obj13\", \"operator\": \"div\", \"inputs\": [\"obj12\", \"obj3\"]},\n    {\"id\": \"obj14\", \"operator\": \"add\", \"inputs\": [\"obj11\", \"obj13\"]},\n    {\"id\": \"obj15\", \"operator\": \"mul\", \"inputs\": [\"obj11\", \"obj14\"]},\n    {\"id\": \"obj16\", \"operator\": \"const\", \"value\": 1.0},\n    {\"id\": \"obj17\", \"operator\": \"add\", \"inputs\": [\"obj16\", \"obj15\"]},\n    {\"id\": \"obj18\", \"operator\": \"div\", \"inputs\": [\"obj11\", \"obj17\"]},\n    {\"id\": \"obj19\", \"operator\": \"mul\", \"inputs\": [\"obj5\", \"obj14\"]},\n    {\"id\": \"obj20\", \"operator\": \"add\", \"inputs\": [\"obj6\", \"obj19\"]},\n    {\"id\": \"obj21\", \"operator\": \"sub\", \"inputs\": [\"obj1\", \"obj20\"]},\n    {\"id\": \"obj22\", \"operator\": \"mul\", \"inputs\": [\"obj21\", \"obj18\"]},\n    {\"id\": \"obj23\", \"operator\": \"add\", \"inputs\": [\"obj5\", \"obj22\"]},\n    {\"id\": \"obj24\", \"operator\": \"add\", \"inputs\": [\"obj23\", \"obj22\"]},\n    {\"id\": \"obj25\", \"operator\": \"mul\", \"inputs\": [\"obj23\", \"obj11\"]},\n    {\"id\": \"obj26\", \"operator\": \"add\", \"inputs\": [\"obj25\", \"obj6\"]},\n    {\"id\": \"obj27\", \"operator\": \"add\", \"inputs\": [\"obj26\", \"obj25\"]}\n  ]\n}\n\n\n\n\u3000\u53ef\u8aad\u6027\u306f\u826f\u304f\u306a\u3044\u3067\u3059\u304c\u6211\u6162\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u30a4\u30d9\u30f3\u30c8\u4fe1\u53f7\u306f\u5b9a\u6570\u4fe1\u53f7\u3068\u3057\u3066\u8003\u3048\u307e\u3059\u306e\u3067\"obj2\"\u3068\"obj3\"\u306f\u5b9a\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3001\u9069\u5f53\u306a\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\u307e\u305f\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u5165\u529b\u3068\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u51fa\u529b\u306e\u6570\u306f1\u500b\u305a\u3064\u306b\u5236\u9650\u3057\u307e\u3059\u3002\n\n\n\noperator\n\u8aac\u660e\n\n\n\n\n\"audioin\"\n\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u5165\u529b\n\n\n\"delay\"\n\u9045\u5ef6\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u5165\u529b\n\n\n\"const\"\n\u5b9a\u6570\n\n\n\"samplerate\"\n\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\n\n\n\"add\"\n\u52a0\u7b97\n\n\n\"sub\"\n\u6e1b\u7b97\n\n\n\"mul\"\n\u4e57\u7b97\n\n\n\"div\"\n\u9664\u7b97\n\n\n\"tan\"\n\u4e09\u89d2\u95a2\u6570\u306etan\n\n\n\"audioout\"\n\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u51fa\u529b\n\n\n\"z^-1\"\n\u5358\u4f4d\u9045\u5ef6\u6f14\u7b97\u5b50\n\n\n\n\nJSON\u3092\u8aad\u307f\u8fbc\u3080\n\u3000JSON\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u629c\u7c8b\n(* \u30c4\u30ea\u30fc\u4f5c\u6210 *)\nlet create_tree ~j:json terminal_id = (\n    let rec create_tree2 id = (\n        let obj = find_object_by_id ~j:json id in\n        match (get_operator obj) with\n        | \"audioin\"     -> AudioIn\n        | \"const\"       -> Const(get_value obj)\n        | \"z^-1\"        -> ZIn(z_index_of ~j:json obj)\n        | \"samplerate\"  -> SampleRate\n        | _ as operator ->\n            (match (operator, get_inputs obj) with\n            | (\"add\", x::y::[]) -> Add(create_tree2 x, create_tree2 y)\n            | (\"sub\", x::y::[]) -> Sub(create_tree2 x, create_tree2 y)\n            | (\"mul\", x::y::[]) -> Mul(create_tree2 x, create_tree2 y)\n            | (\"div\", x::y::[]) -> Div(create_tree2 x, create_tree2 y)\n            | (\"tan\", x::[])    -> Tan(create_tree2 x)\n            | _                 -> raise NotSupportedJSONFormat\n            )\n    ) in match (get_operator terminal_id, get_inputs terminal_id) with\n         | (\"audioout\", x::[]) -> AudioOut(create_tree2 x)\n         | (\"z^-1\", x::[])     -> ZOut(create_tree2 x)\n         | _                   -> raise NotSupportedJSONFormat\n)\n\n\n\u3000\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u4fbf\u5229\u3067\u3059\u306d\u3002\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306b\u306f\u76f4\u63a5\u767b\u5834\u3057\u307e\u305b\u3093\u304cJSON\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u306byojson\u3068core\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u4f5c\u6210\u3059\u308b\u524d\u306b\u7121\u9650\u30eb\u30fc\u30d7\u306b\u306a\u3089\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u9811\u5f35\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u51fa\u529b\u4fe1\u53f7\u306e\u7b97\u51fa\n\u3000AudioOut\u3068ZOut\u3092\u66f4\u65b0\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u5b9a\u6570\u4fe1\u53f7\u3068\u6f14\u7b97\u306f\u56fa\u5b9a\u3067\u3059\u306e\u3067\u30aa\u30fc\u30c7\u30a3\u30aa\u5165\u529b\u4fe1\u53f7a_in\u3068\u9045\u5ef6\u4fe1\u53f7z_in1, z_in2,...\u3092\u5f15\u6570\u3068\u3059\u308b\u95a2\u6570\u304c\u4f5c\u6210\u51fa\u6765\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u6bce\u306e\u51e6\u7406\u30a4\u30e1\u30fc\u30b8\na_out  = f_a (a_in, z_in1, z_in2, ...);\nz_out1 = f_z1(a_in, z_in1, z_in2, ...);\nz_out2 = f_z2(a_in, z_in1, z_in2, ...);\n...\n\n\n\u3000\u5b9a\u6570\u4fe1\u53f7\u3092\u9069\u7528\u3057\u306a\u304c\u3089\u6f14\u7b97\u3092\u5408\u6210\u3057\u305f\u95a2\u6570f_a, f_z1, f_z2,...\u3092\u4f5c\u6210\u3057\u3066\u30b5\u30f3\u30d7\u30eb\u6bce\u306b\u30aa\u30fc\u30c7\u30a3\u30aa\u5165\u529b\u4fe1\u53f7\u30fb\u9045\u5ef6\u4fe1\u53f7\u3092\u9069\u7528\u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u305f\u306e\u3067\u3059\u304c\u3001\u4e0a\u624b\u304f\u51fa\u6765\u308b\u6c17\u304c\u3057\u306a\u304b\u3063\u305f\u306e\u3067\u6b21\u306e\u3088\u3046\u306a\u5236\u9650\u3092\u4ed8\u3051\u52a0\u3048\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u3000\u3000\u95a2\u6570 f_a, f_z1, f_z2,... \u306f\u305d\u308c\u305e\u308c a_in, z_in1, z_in2,... \u306e\u7dda\u5f62\u7d50\u5408\u3067\u8868\u73fe\u51fa\u6765\u308b\u3082\u306e\u306b\u5236\u9650\u3059\u308b\n\u3000\u3053\u306e\u5236\u9650\u3092\u4ed8\u3051\u52a0\u3048\u308c\u3070\u3001\u95a2\u6570 f_a, f_z1, f_z2,... \u306f\u30d9\u30af\u30c8\u30eb(a_in, z_in1, z_in2,...)\u3068\u9069\u5f53\u306a\u30d9\u30af\u30c8\u30eb\u3068\u306e\u5185\u7a4d\u3067\u8868\u73fe\u51fa\u6765\u307e\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u6f14\u7b97\u306e\u5408\u6210\u306fRnRn\\mathbb{R}^n\uff08nn\u306f\u30aa\u30fc\u30c7\u30a3\u30aa\u5165\u529b\u4fe1\u53f7\u6570\uff0b\u9045\u5ef6\u4fe1\u53f7\u6570\uff09\u4e0a\u306e\u30d9\u30af\u30c8\u30eb\u306e\u5408\u6210\u3068\u7b49\u4fa1\u3068\u898b\u306a\u3059\u3053\u3068\u304c\u51fa\u6765\u305d\u3046\u3067\u3059\u3002\n\n\u4fe1\u53f7\u306e\u8868\u73fe\n\u3000\u30aa\u30fc\u30c7\u30a3\u30aa\u5165\u529b\u4fe1\u53f7\u30fb\u9045\u5ef6\u4fe1\u53f7\u306f\u5358\u4f4d\u30d9\u30af\u30c8\u30eb\u3060\u3068\u601d\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\u3000\u4fe1\u53f7\u30bf\u30a4\u30d7\u306f\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\u629c\u7c8b\n(* \u4fe1\u53f7\u30bf\u30a4\u30d7 *)\ntype signal =\n| AudioSignal of (float list) (* \u30aa\u30fc\u30c7\u30a3\u30aa\u5165\u529b\u4fe1\u53f7\u30fb\u9045\u5ef6\u4fe1\u53f7 *)\n| ConstSignal of float        (* \u5b9a\u6570\u4fe1\u53f7 *)\n\n\n\n\u6f14\u7b97\u306e\u5408\u6210\n\u3000\u518d\u5e30\u51e6\u7406\u3067\u4fe1\u53f7\u30d9\u30af\u30c8\u30eb\u3092\u5408\u6210\u3057\u307e\u3059\u3002\u7dda\u5f62\u7d50\u5408\u3067\u8868\u73fe\u51fa\u6765\u308b\u3082\u306e\u306b\u5236\u9650\u3057\u307e\u3059\u306e\u3067\u3001\u975e\u7dda\u5f62\u306a\u6f14\u7b97\u7b49\u306f\u5bfe\u8c61\u5916\u3068\u3057\u307e\u3059\u3002\n\n\u629c\u7c8b\n(* \u30d9\u30af\u30c8\u30eb\u4f5c\u6210 *)\nlet create_vector ~z_count:z_count terminal_obj = (\n    let rec create_vector2 out = (\n        match out with\n        | AudioIn      -> AudioSignal(1.0::(zero_vector z_count))\n        | ZIn(index)   -> AudioSignal(0.0::(unit_vector z_count index))\n        | Const(value) -> ConstSignal(value)\n        | SampleRate   -> ConstSignal(44100.0)\n        | Add(x, y)    ->\n            (match (create_vector2 x, create_vector2 y) with\n            | (AudioSignal(a), AudioSignal(b)) -> AudioSignal(List.map2_exn ~f:(+.) a b)\n            | (ConstSignal(a), ConstSignal(b)) -> ConstSignal(a +. b)\n            | (AudioSignal(_), ConstSignal(_)) -> raise NotSupportedJSONFormat\n            | (ConstSignal(_), AudioSignal(_)) -> raise NotSupportedJSONFormat\n            )\n        | Sub(x, y) ->\n            (match (create_vector2 x, create_vector2 y) with\n            | (AudioSignal(a), AudioSignal(b)) -> AudioSignal(List.map2_exn ~f:(-.) a b)\n            | (ConstSignal(a), ConstSignal(b)) -> ConstSignal(a -. b)\n            | (AudioSignal(_), ConstSignal(_)) -> raise NotSupportedJSONFormat\n            | (ConstSignal(_), AudioSignal(_)) -> raise NotSupportedJSONFormat\n            )\n        | Mul(x, y) ->\n            (match (create_vector2 x, create_vector2 y) with\n            | (AudioSignal(_), AudioSignal(_)) -> raise NotSupportedJSONFormat\n            | (ConstSignal(a), ConstSignal(b)) -> ConstSignal(a *. b)\n            | (AudioSignal(a), ConstSignal(b)) -> AudioSignal(List.map ~f:(fun x->x*.b) a)\n            | (ConstSignal(a), AudioSignal(b)) -> AudioSignal(List.map ~f:(fun x->a*.x) b)\n            )\n        | Div(x, y) ->\n            (match (create_vector2 x, create_vector2 y) with\n            | (AudioSignal(_), AudioSignal(_)) -> raise NotSupportedJSONFormat\n            | (ConstSignal(a), ConstSignal(b)) -> ConstSignal(a /. b)\n            | (AudioSignal(a), ConstSignal(b)) -> AudioSignal(List.map ~f:(fun x->x/.b) a)\n            | (ConstSignal(_), AudioSignal(_)) -> raise NotSupportedJSONFormat\n            )\n        | Tan(x) ->\n            (match (create_vector2 x) with\n            | AudioSignal(_) -> raise NotSupportedJSONFormat\n            | ConstSignal(a) -> ConstSignal(tan a)\n            )\n        | AudioOut(x) -> create_vector2 x\n        | ZOut(x)     -> create_vector2 x\n    ) in match (create_vector2 terminal_obj) with\n         | AudioSignal(a) -> a\n         | ConstSignal(_) -> raise NotSupportedJSONFormat\n)\n\n\n\n\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u518d\u751f\n\u3000\u6700\u5f8c\u306bWAV\u30d5\u30a1\u30a4\u30eb\u306e\u97f3\u58f0\u30c7\u30fc\u30bf\u306b\u30d5\u30a3\u30eb\u30bf\u3092\u639b\u3051\u3066\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u518d\u751f\u3057\u307e\u3059\u3002WAV\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u306f\u81ea\u524d\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u304c\u3001\u904b\u826f\u304fALSA\u306eAPI\u304c\u53e9\u3051\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u3067\u306f\u518d\u5e30\u3067\u56de\u3057\u3066\u304d\u307e\u3059\u3002\n\n\u629c\u7c8b\nlet a_vector, z_matrix = get_matrix \"test.json\"\nand wav_handle = In_channel.create ~binary:true \"test.wav\" in\nlet wav_frames = get_frames wav_handle     (* \u30d5\u30ec\u30fc\u30e0\u6570\u53d6\u5f97 *)\nand alsa_pcm = open_default_pcm            (* \u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u3092\u958b\u304f *)\nand alsa_buffer = String.create (2*2*1024) (* PCM\u30c7\u30fc\u30bf\u8ee2\u9001\u7528\u30d0\u30c3\u30d5\u30a1 *)\nand wav_buffer = Buffer.create (2*2*1024)  (* WAV\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u7528\u30d0\u30c3\u30d5\u30a1 *) in\n\nlet rec audio_process remain_frames z_in_ch1 z_in_ch2 = (\n    (* WAV\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u30921\u30d6\u30ed\u30c3\u30af\u8aad\u307f\u8fbc\u307f *)\n    Buffer.clear wav_buffer;\n    let block_size = if remain_frames > 1024 then 1024 else remain_frames in\n    Buffer.add_channel wav_buffer wav_handle (block_size*4);\n\n    (* \u30d6\u30ed\u30c3\u30af\u51e6\u7406 *)\n    let rec audio_process_block alsa_frame z_in_ch1 z_in_ch2 = (\n        if alsa_frame < block_size then (\n            (* 1\u30d5\u30ec\u30fc\u30e0\u53d6\u5f97 *)\n            let a_in_ch1, a_in_ch2 = read_wav_data wav_buffer alsa_frame in\n            let in_ch1 = a_in_ch1::z_in_ch1\n            and in_ch2 = a_in_ch2::z_in_ch2 in\n\n            (* ch1\u66f4\u65b0 *)\n            let a_out_ch1\n                = List.fold2_exn ~f:(fun a x y->a+.x*.y) ~init:0.0 in_ch1 a_vector\n            and z_out_ch1\n                = List.map ~f:(List.fold2_exn ~f:(fun a x y->a+.x*.y) ~init:1.0e-100 in_ch1) z_matrix\n\n            (* ch2\u66f4\u65b0 *)\n            and a_out_ch2\n                = List.fold2_exn ~f:(fun a x y->a+.x*.y) ~init:0.0 in_ch2 a_vector\n            and z_out_ch2\n                = List.map ~f:(List.fold2_exn ~f:(fun a x y->a+.x*.y) ~init:1.0e-100 in_ch2) z_matrix in\n\n            (* PCM\u30c7\u30fc\u30bf\u8ee2\u9001\u7528\u30d0\u30c3\u30d5\u30a1\u66f8\u304d\u8fbc\u307f *)\n            write_alsa_buffer alsa_buffer alsa_frame a_out_ch1 a_out_ch2;\n\n            (* next frame *)\n            audio_process_block (alsa_frame + 1) z_out_ch1 z_out_ch2\n        )\n        else z_in_ch1, z_in_ch2 (* end block *)\n    ) in\n    let z_out_ch1, z_out_ch2 = audio_process_block 0 z_in_ch1 z_in_ch2 in (* start block *)\n\n    (* PCM\u30c7\u30fc\u30bf\u8ee2\u9001 *)\n    ignore (Alsa.Pcm.writei alsa_pcm alsa_buffer 0 block_size);\n\n    if remain_frames > 1024 then audio_process (remain_frames - 1024) z_out_ch1 z_out_ch2 (* next block *)\n) in\nlet z_in_init = zero_vector (List.length z_matrix) in\naudio_process wav_frames z_in_init z_in_init; (* start *)\n\n\n\u30001\u30d6\u30ed\u30c3\u30af\u3042\u305f\u308a1024\u30d5\u30ec\u30fc\u30e0\u3068\u3057\u3066\u30d6\u30ed\u30c3\u30af\u5358\u4f4d\u3067ALSA\u306bPCM\u30c7\u30fc\u30bf\u3092\u8ee2\u9001\u3057\u307e\u3059\u30021.0e-100\u3068\u3044\u3046\u6570\u304c\u767b\u5834\u3057\u307e\u3059\u304c\u975e\u6b63\u898f\u5316\u6570\u304c\u767a\u751f\u3059\u308b\u306e\u3092\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u5074\u3067\u9632\u6b62\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3059\u3002\u3042\u3068PCM\u30c7\u30fc\u30bf\u8ee2\u9001\u3067\u6e21\u3057\u3066\u3044\u308b\u30d0\u30c3\u30d5\u30a1\u306f\u521d\u56de\u306b\u4f5c\u6210\u3057\u305f\u3082\u306e\u306b\u7834\u58ca\u7684\u4ee3\u5165\u3092\u884c\u3063\u3066\u4f7f\u3044\u56de\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u3053\u306f\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n# \u306f\u3058\u3081\u306b\n\n\u3000OCaml\u3067\u97f3\u58f0\u30c7\u30fc\u30bf\u306b\u30d5\u30a3\u30eb\u30bf\u3092\u639b\u3051\u3066\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u518d\u751f\u3059\u308b\u306e\u3092\u8a66\u3057\u307e\u3059\uff08\u591a\u5206\u3053\u3046\u3044\u3046\u306e\u306fC\u304bC++\u3042\u305f\u308a\u3067\u3084\u308b\u306e\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u304c\uff09\u3002\n\n## \u30b9\u30da\u30c3\u30af\n\n\u3000\u30b9\u30da\u30c3\u30af\u304c\u9ad8\u304f\u306a\u3044\u30de\u30b7\u30f3\u3067\u3082\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u518d\u751f\u51fa\u6765\u308b\u306e\u3092\u78ba\u8a8d\u3057\u305f\u3044\u306e\u3067Raspberry Pi\u3067\u8a66\u3057\u307e\u3059\u3002\n\n* \u30de\u30b7\u30f3: Raspberry Pi (Model B)\n* OS: RASPBIAN Debian Wheezy (September 2014)\n* USB Audio I/F: [BEHRINGER UCA202](http://www.behringer.com/EN/Products/UCA202.aspx)\n\n## \u4f7f\u7528\u3059\u308b\u30d5\u30a3\u30eb\u30bf\n\n\u3000\u4eca\u56de\u306f[Reaktor](http://www.native-instruments.com/jp/products/komplete/synths/reaktor-5/)\u3067\u4f5c\u3063\u305f\u6b21\u306e\u30ed\u30fc\u30d1\u30b9\u30d5\u30a3\u30eb\u30bf\u3092OCaml\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002Reaktor\u306f\u534a\u984d\u30bb\u30fc\u30eb\u306e\u3068\u304d\u306b\u8cb7\u3046\u306e\u304c\u304a\u3059\u3059\u3081\u3067\u3059\u3002\n\n![f1.png](https://qiita-image-store.s3.amazonaws.com/0/42791/51a29c36-cae1-e18a-7e63-20a9afe0209a.png)\n\n\u3000\u5404\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5165\u51fa\u529b\u306b\u6570\u5024\u4ee5\u5916\u306e\u6587\u5b57\u5217\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u6587\u5b57\u5217\u304c\u4e00\u81f4\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u306f\u7dda\u3067\u7e4b\u304c\u3063\u3066\u3044\u308b\u3068\u8003\u3048\u3066\u826f\u3044\u3067\u3059\u3002\u6587\u5b57\u5217\u3067\u63a5\u7d9a\u3092\u8868\u73fe\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u30b9\u30d1\u30b2\u30c3\u30c6\u30a3\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\"SR.R\"\u306f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8(44100\u308448000)\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u4fe1\u53f7\u306e\u7a2e\u985e\u306b\u3064\u3044\u3066\n\n\u3000\u4fe1\u53f7\u306e\u7a2e\u985e\u306f\u5927\u304d\u304f\u5206\u3051\u30663\u3064\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n| \u7a2e\u985e | \u8aac\u660e | \n|---|---|\n| \u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7 | \u30aa\u30fc\u30c7\u30a3\u30aa\u306e\u30b5\u30f3\u30d7\u30eb\u6bce\u306b\u66f4\u65b0\u3055\u308c\u308b\u4fe1\u53f7 | \n| \u30a4\u30d9\u30f3\u30c8\u4fe1\u53f7 | \u30d1\u30e9\u30e1\u30fc\u30bf\u5024\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b\u66f4\u65b0\u3055\u308c\u308b\u4fe1\u53f7 |\n| \u5b9a\u6570\u4fe1\u53f7 | \u63a5\u7d9a\u3092\u5909\u66f4\u3057\u306a\u3044\u9650\u308a\u306f\u4e00\u5b9a\u306e\u5024\u3092\u3068\u308b\u4fe1\u53f7 | \n\n\u3000\u4fe1\u53f7\u306e\u7a2e\u985e\u3067\u7d50\u7dda\u306b\u8272\u4ed8\u3051\u3057\u3066\u307f\u307e\u3059\u3002\u8d64:\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u3001\u7d2b:\u30a4\u30d9\u30f3\u30c8\u4fe1\u53f7\u3001\u9752:\u5b9a\u6570\u4fe1\u53f7\u3068\u3057\u307e\u3059\u3002\n\n![f3.png](https://qiita-image-store.s3.amazonaws.com/0/42791/423f0193-51cd-0efe-7326-bacd7dac5213.png)\n\n\u3000\u4eca\u56de\u306f\u518d\u751f\u9014\u4e2d\u3067\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u5909\u66f4\u306f\u7121\u3057\u3068\u3057\u305f\u3044\u306e\u3067\u6b21\u306e\u3088\u3046\u306b\u30a4\u30d9\u30f3\u30c8\u4fe1\u53f7\u3082\u5b9a\u6570\u4fe1\u53f7\u3068\u3057\u3066\u8003\u3048\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n![f4.png](https://qiita-image-store.s3.amazonaws.com/0/42791/27c5e7ee-f631-cea5-7bcc-763073d0e105.png)\n\n# \u5b9f\u88c5\u306e\u65b9\u91dd\n\n\u3000\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6bce\u306b\u30ab\u30ec\u30f3\u30c8\u5024\u3092\u6301\u305f\u305b\u3001AudioIn\u304b\u3089\u958b\u59cb\u3057\u3066\u7e4b\u304c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6b21\u3005\u3068\u66f4\u65b0\u3059\u308b\u3053\u3068\u306b\u3088\u308aAudioOut\u306e\u5024\u3092\u7b97\u51fa\u3059\u308b\u65b9\u6cd5\u304c\u8003\u3048\u3089\u308c\u307e\u3059\u304c\u3001\u305d\u306e\u5834\u5408\u306f\u30ab\u30ec\u30f3\u30c8\u5024\u3092mutable(\u7834\u58ca\u7684\u4ee3\u5165\u304c\u53ef\u80fd)\u306a\u5909\u6570\u306b\u3059\u308b\u65b9\u6cd5\u3057\u304b\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3042\u307e\u308a\u3084\u308a\u305f\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u4eca\u56de\u306fAudioOut\u3092\u958b\u59cb\u3068\u3057\u3066\u5024\u7b97\u51fa\u306b\u5fc5\u8981\u306a\u7d4c\u8def\u3092\u63a2\u7d22\u3057\u3066\u307f\u307e\u3059\u3002\n\n## AuidoOut\u3092\u89aa\u3068\u3059\u308b\u30c4\u30ea\u30fc\u69cb\u9020\n\n\u3000\u7d4c\u8def\u306fAuidoOut\u3092\u89aa\u3068\u3059\u308b\u30c4\u30ea\u30fc\u69cb\u9020\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\u63a2\u7d22\u6642\u306e\u6ce8\u610f\u3067\u3059\u304c**z^-1\uff08\u5358\u4f4d\u9045\u5ef6\u6f14\u7b97\u5b50\uff09**\u304c\u898b\u3064\u304b\u3063\u305f\u3089\u305d\u306e\u5148\u306f\u63a2\u7d22\u305b\u305a\u306b\u6b62\u3081\u307e\u3059\u3002z^-1\u306f\u524d\u56de\u5024\u3092\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u306e\u3067AuidoOut\u5024\u306e\u7b97\u51fa\u306b\u306f\u305d\u308c\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n![f5.png](https://qiita-image-store.s3.amazonaws.com/0/42791/ad518721-38da-74e1-3991-8155d77d1646.png)\n\n## z^-1\u3092\u89aa\u3068\u3059\u308b\u30c4\u30ea\u30fc\u69cb\u9020\n\u3000AuidoOut\u5024\u3092\u7b97\u51fa\u3059\u308b\u305f\u3081\u306b\u306f\u3001z^-1\u3082\u30b5\u30f3\u30d7\u30eb\u6bce\u306b\u6f0f\u308c\u306a\u304f\u66f4\u65b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u306e\u3067z^-1\u3092\u89aa\u3068\u3059\u308b\u30c4\u30ea\u30fc\u69cb\u9020\u3082\u8003\u3048\u307e\u3059\u3002\u63a2\u7d22\u3057\u305f\u7d50\u679c\u3001\u81ea\u5206\u81ea\u8eab\u306b\u5230\u9054\u3059\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\u30c4\u30ea\u30fc\u69cb\u9020\u3068\u8a00\u3063\u3066\u304a\u304d\u306a\u304c\u3089\u9014\u4e2d\u3067\u5408\u6d41\u3057\u3066\u308b\u3088\u3046\u306b\u3082\u898b\u3048\u307e\u3059\u306d\u3002\u3042\u307e\u308a\u6c17\u306b\u3057\u306a\u3044\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n![f7.png](https://qiita-image-store.s3.amazonaws.com/0/42791/da104722-94d3-f7e2-bead-dfc0d2ab356a.png)\n\n![f6.png](https://qiita-image-store.s3.amazonaws.com/0/42791/18176c75-61f3-37eb-ea1e-2ad4dbd70b3b.png)\n\n## \u30c4\u30ea\u30fc\u3092\u8868\u73fe\u3059\u308b\n\n\u3000\u6b21\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u4ed8\u306e\u518d\u5e30\u30f4\u30a1\u30ea\u30a2\u30f3\u30c8\u3067\u30c4\u30ea\u30fc\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\n\n```ocaml:\u629c\u7c8b\n(* \u30c4\u30ea\u30fc\u69cb\u9020 *)\ntype tree =\n| AudioIn            (* \u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u5165\u529b *)\n| ZIn of int         (* \u9045\u5ef6\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u5165\u529b *)\n| Const of float     (* \u5b9a\u6570 *)\n| SampleRate         (* \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8 *)\n| Add of tree * tree (* \u52a0\u7b97 *)\n| Sub of tree * tree (* \u6e1b\u7b97 *)\n| Mul of tree * tree (* \u4e57\u7b97 *)\n| Div of tree * tree (* \u9664\u7b97 *)\n| Tan of tree        (* \u4e09\u89d2\u95a2\u6570\u306etan *)\n| AudioOut of tree   (* \u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u51fa\u529b *)\n| ZOut of tree       (* \u9045\u5ef6\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u51fa\u529b *)\n```\n\n\u3000`AudioOut`\u3068`ZOut`\u3092\u89aa\u3068\u3057\u3066\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\u5358\u4f4d\u9045\u5ef6\u6f14\u7b97\u5b50\u306f\u5165\u529b\u306e`ZIn`\u3068\u51fa\u529b\u306e`ZOut`\u306e2\u3064\u306b\u5206\u3051\u307e\u3059\u3002`ZIn`\u306b\u306f\u8b58\u5225\u306e\u305f\u3081\u306eindex\u3092\u4fdd\u6301\u3057\uff08index\u306f\u9069\u5f53\u306bid\u3067\u30bd\u30fc\u30c8\u3057\u3066\u6607\u9806\u3067\u4ed8\u3051\u307e\u3059\uff09\u3001`Const`\u306b\u306f\u5b9a\u6570\u3092\u4fdd\u6301\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u6570\u5b66\u95a2\u6570\u306f\u4eca\u56de\u4f7f\u7528\u3059\u308b`Tan`\u306e\u307f\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u63a5\u7d9a\u60c5\u5831\u306e\u4f5c\u6210\n\n\u3000\u518d\u5e30\u30f4\u30a1\u30ea\u30a2\u30f3\u30c8\u3067\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u8868\u73fe\u3059\u308b\u524d\u306b\u5143\u3068\u306a\u308b\u63a5\u7d9a\u60c5\u5831\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u5404\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8b58\u5225\u3059\u308b\u305f\u3081\u306b\u9069\u5f53\u306b\u756a\u53f7\u3092\u4ed8\u3051\u307e\u3059\u3002\n\n![f2.png](https://qiita-image-store.s3.amazonaws.com/0/42791/a42728ac-578f-f3d2-7542-97eb56d41b1e.png)\n\n## JSON\u3067\u63a5\u7d9a\u60c5\u5831\u3092\u8a18\u8ff0\u3059\u308b\n\n\u3000\u63a5\u7d9a\u60c5\u5831\u3092\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3059\u308b\u306e\u3082\u30a2\u30ec\u306a\u306e\u3067JSON\u30d5\u30a1\u30a4\u30eb\u3092\u624b\u4f5c\u308a\u3057\u307e\u3059\u3002\u5404\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6f14\u7b97\u3068\u63a5\u7d9a\u3092\u8a18\u8ff0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n```json:test.json\n{\n  \"objects\": [\n    {\"id\": \"obj1\", \"operator\": \"audioin\"},\n    {\"id\": \"obj2\", \"operator\": \"const\", \"value\": 400.0},\n    {\"id\": \"obj3\", \"operator\": \"const\", \"value\": 0.707107},\n    {\"id\": \"obj4\", \"operator\": \"audioout\", \"inputs\": [\"obj26\"]},\n    {\"id\": \"obj5\", \"operator\": \"z^-1\", \"inputs\": [\"obj24\"]},\n    {\"id\": \"obj6\", \"operator\": \"z^-1\", \"inputs\": [\"obj27\"]},\n    {\"id\": \"obj7\", \"operator\": \"const\", \"value\": 3.14159},\n    {\"id\": \"obj8\", \"operator\": \"samplerate\"},\n    {\"id\": \"obj9\", \"operator\": \"div\", \"inputs\": [\"obj7\", \"obj8\"]},\n    {\"id\": \"obj10\", \"operator\": \"mul\", \"inputs\": [\"obj2\", \"obj9\"]},\n    {\"id\": \"obj11\", \"operator\": \"tan\", \"inputs\": [\"obj10\"]},\n    {\"id\": \"obj12\", \"operator\": \"const\", \"value\": 1.0},\n    {\"id\": \"obj13\", \"operator\": \"div\", \"inputs\": [\"obj12\", \"obj3\"]},\n    {\"id\": \"obj14\", \"operator\": \"add\", \"inputs\": [\"obj11\", \"obj13\"]},\n    {\"id\": \"obj15\", \"operator\": \"mul\", \"inputs\": [\"obj11\", \"obj14\"]},\n    {\"id\": \"obj16\", \"operator\": \"const\", \"value\": 1.0},\n    {\"id\": \"obj17\", \"operator\": \"add\", \"inputs\": [\"obj16\", \"obj15\"]},\n    {\"id\": \"obj18\", \"operator\": \"div\", \"inputs\": [\"obj11\", \"obj17\"]},\n    {\"id\": \"obj19\", \"operator\": \"mul\", \"inputs\": [\"obj5\", \"obj14\"]},\n    {\"id\": \"obj20\", \"operator\": \"add\", \"inputs\": [\"obj6\", \"obj19\"]},\n    {\"id\": \"obj21\", \"operator\": \"sub\", \"inputs\": [\"obj1\", \"obj20\"]},\n    {\"id\": \"obj22\", \"operator\": \"mul\", \"inputs\": [\"obj21\", \"obj18\"]},\n    {\"id\": \"obj23\", \"operator\": \"add\", \"inputs\": [\"obj5\", \"obj22\"]},\n    {\"id\": \"obj24\", \"operator\": \"add\", \"inputs\": [\"obj23\", \"obj22\"]},\n    {\"id\": \"obj25\", \"operator\": \"mul\", \"inputs\": [\"obj23\", \"obj11\"]},\n    {\"id\": \"obj26\", \"operator\": \"add\", \"inputs\": [\"obj25\", \"obj6\"]},\n    {\"id\": \"obj27\", \"operator\": \"add\", \"inputs\": [\"obj26\", \"obj25\"]}\n  ]\n}\n\n```\n\n\u3000\u53ef\u8aad\u6027\u306f\u826f\u304f\u306a\u3044\u3067\u3059\u304c\u6211\u6162\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u30a4\u30d9\u30f3\u30c8\u4fe1\u53f7\u306f\u5b9a\u6570\u4fe1\u53f7\u3068\u3057\u3066\u8003\u3048\u307e\u3059\u306e\u3067\"obj2\"\u3068\"obj3\"\u306f\u5b9a\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3001\u9069\u5f53\u306a\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u305f\u3002\u307e\u305f\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u5165\u529b\u3068\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u51fa\u529b\u306e\u6570\u306f1\u500b\u305a\u3064\u306b\u5236\u9650\u3057\u307e\u3059\u3002\n\n| operator     | \u8aac\u660e |\n|--------------|------|\n| \"audioin\"    | \u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u5165\u529b |\n| \"delay\"      | \u9045\u5ef6\u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u5165\u529b |\n| \"const\"      | \u5b9a\u6570 |\n| \"samplerate\" | \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8 |\n| \"add\"        | \u52a0\u7b97 |\n| \"sub\"        | \u6e1b\u7b97 |\n| \"mul\"        | \u4e57\u7b97 |\n| \"div\"        | \u9664\u7b97 |\n| \"tan\"        | \u4e09\u89d2\u95a2\u6570\u306etan |\n| \"audioout\"   | \u30aa\u30fc\u30c7\u30a3\u30aa\u4fe1\u53f7\u51fa\u529b |\n| \"z^-1\"       | \u5358\u4f4d\u9045\u5ef6\u6f14\u7b97\u5b50 |\n\n## JSON\u3092\u8aad\u307f\u8fbc\u3080\n\u3000JSON\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n```ocaml:\u629c\u7c8b\n(* \u30c4\u30ea\u30fc\u4f5c\u6210 *)\nlet create_tree ~j:json terminal_id = (\n    let rec create_tree2 id = (\n        let obj = find_object_by_id ~j:json id in\n        match (get_operator obj) with\n        | \"audioin\"     -> AudioIn\n        | \"const\"       -> Const(get_value obj)\n        | \"z^-1\"        -> ZIn(z_index_of ~j:json obj)\n        | \"samplerate\"  -> SampleRate\n        | _ as operator ->\n            (match (operator, get_inputs obj) with\n            | (\"add\", x::y::[]) -> Add(create_tree2 x, create_tree2 y)\n            | (\"sub\", x::y::[]) -> Sub(create_tree2 x, create_tree2 y)\n            | (\"mul\", x::y::[]) -> Mul(create_tree2 x, create_tree2 y)\n            | (\"div\", x::y::[]) -> Div(create_tree2 x, create_tree2 y)\n            | (\"tan\", x::[])    -> Tan(create_tree2 x)\n            | _                 -> raise NotSupportedJSONFormat\n            )\n    ) in match (get_operator terminal_id, get_inputs terminal_id) with\n         | (\"audioout\", x::[]) -> AudioOut(create_tree2 x)\n         | (\"z^-1\", x::[])     -> ZOut(create_tree2 x)\n         | _                   -> raise NotSupportedJSONFormat\n)\n```\n\n\u3000\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u4fbf\u5229\u3067\u3059\u306d\u3002\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306b\u306f\u76f4\u63a5\u767b\u5834\u3057\u307e\u305b\u3093\u304cJSON\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u306b[yojson](https://github.com/mjambon/yojson)\u3068[core](https://github.com/janestreet/core)\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u30c4\u30ea\u30fc\u69cb\u9020\u3092\u4f5c\u6210\u3059\u308b\u524d\u306b\u7121\u9650\u30eb\u30fc\u30d7\u306b\u306a\u3089\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u9811\u5f35\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n# \u51fa\u529b\u4fe1\u53f7\u306e\u7b97\u51fa\n\n\u3000AudioOut\u3068ZOut\u3092\u66f4\u65b0\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u5b9a\u6570\u4fe1\u53f7\u3068\u6f14\u7b97\u306f\u56fa\u5b9a\u3067\u3059\u306e\u3067\u30aa\u30fc\u30c7\u30a3\u30aa\u5165\u529b\u4fe1\u53f7`a_in`\u3068\u9045\u5ef6\u4fe1\u53f7`z_in1, z_in2,...`\u3092\u5f15\u6570\u3068\u3059\u308b\u95a2\u6570\u304c\u4f5c\u6210\u51fa\u6765\u308c\u3070\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n```text:\u30b5\u30f3\u30d7\u30eb\u6bce\u306e\u51e6\u7406\u30a4\u30e1\u30fc\u30b8\na_out  = f_a (a_in, z_in1, z_in2, ...);\nz_out1 = f_z1(a_in, z_in1, z_in2, ...);\nz_out2 = f_z2(a_in, z_in1, z_in2, ...);\n...\n```\n\n\u3000\u5b9a\u6570\u4fe1\u53f7\u3092\u9069\u7528\u3057\u306a\u304c\u3089\u6f14\u7b97\u3092\u5408\u6210\u3057\u305f\u95a2\u6570`f_a, f_z1, f_z2,...`\u3092\u4f5c\u6210\u3057\u3066\u30b5\u30f3\u30d7\u30eb\u6bce\u306b\u30aa\u30fc\u30c7\u30a3\u30aa\u5165\u529b\u4fe1\u53f7\u30fb\u9045\u5ef6\u4fe1\u53f7\u3092\u9069\u7528\u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u305f\u306e\u3067\u3059\u304c\u3001\u4e0a\u624b\u304f\u51fa\u6765\u308b\u6c17\u304c\u3057\u306a\u304b\u3063\u305f\u306e\u3067\u6b21\u306e\u3088\u3046\u306a\u5236\u9650\u3092\u4ed8\u3051\u52a0\u3048\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n *\u3000\u3000\u95a2\u6570 f_a, f_z1, f_z2,... \u306f\u305d\u308c\u305e\u308c a_in, z_in1, z_in2,... \u306e\u7dda\u5f62\u7d50\u5408\u3067\u8868\u73fe\u51fa\u6765\u308b\u3082\u306e\u306b\u5236\u9650\u3059\u308b*\n\n\u3000\u3053\u306e\u5236\u9650\u3092\u4ed8\u3051\u52a0\u3048\u308c\u3070\u3001\u95a2\u6570 `f_a, f_z1, f_z2,...` \u306f\u30d9\u30af\u30c8\u30eb`(a_in, z_in1, z_in2,...)`\u3068\u9069\u5f53\u306a\u30d9\u30af\u30c8\u30eb\u3068\u306e\u5185\u7a4d\u3067\u8868\u73fe\u51fa\u6765\u307e\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u6f14\u7b97\u306e\u5408\u6210\u306f$\\mathbb{R}^n$\uff08$n$\u306f\u30aa\u30fc\u30c7\u30a3\u30aa\u5165\u529b\u4fe1\u53f7\u6570\uff0b\u9045\u5ef6\u4fe1\u53f7\u6570\uff09\u4e0a\u306e\u30d9\u30af\u30c8\u30eb\u306e\u5408\u6210\u3068\u7b49\u4fa1\u3068\u898b\u306a\u3059\u3053\u3068\u304c\u51fa\u6765\u305d\u3046\u3067\u3059\u3002\n\n## \u4fe1\u53f7\u306e\u8868\u73fe\n\n\u3000\u30aa\u30fc\u30c7\u30a3\u30aa\u5165\u529b\u4fe1\u53f7\u30fb\u9045\u5ef6\u4fe1\u53f7\u306f\u5358\u4f4d\u30d9\u30af\u30c8\u30eb\u3060\u3068\u601d\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n![f8.png](https://qiita-image-store.s3.amazonaws.com/0/42791/bd56c92e-208f-4c39-59a2-d9f46e3ff7a7.png)\n\n\u3000\u4fe1\u53f7\u30bf\u30a4\u30d7\u306f\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```ocaml:\u629c\u7c8b\n(* \u4fe1\u53f7\u30bf\u30a4\u30d7 *)\ntype signal =\n| AudioSignal of (float list) (* \u30aa\u30fc\u30c7\u30a3\u30aa\u5165\u529b\u4fe1\u53f7\u30fb\u9045\u5ef6\u4fe1\u53f7 *)\n| ConstSignal of float        (* \u5b9a\u6570\u4fe1\u53f7 *)\n```\n\n## \u6f14\u7b97\u306e\u5408\u6210\n\n\u3000\u518d\u5e30\u51e6\u7406\u3067\u4fe1\u53f7\u30d9\u30af\u30c8\u30eb\u3092\u5408\u6210\u3057\u307e\u3059\u3002\u7dda\u5f62\u7d50\u5408\u3067\u8868\u73fe\u51fa\u6765\u308b\u3082\u306e\u306b\u5236\u9650\u3057\u307e\u3059\u306e\u3067\u3001\u975e\u7dda\u5f62\u306a\u6f14\u7b97\u7b49\u306f\u5bfe\u8c61\u5916\u3068\u3057\u307e\u3059\u3002\n\n```ocaml:\u629c\u7c8b\n(* \u30d9\u30af\u30c8\u30eb\u4f5c\u6210 *)\nlet create_vector ~z_count:z_count terminal_obj = (\n    let rec create_vector2 out = (\n        match out with\n        | AudioIn      -> AudioSignal(1.0::(zero_vector z_count))\n        | ZIn(index)   -> AudioSignal(0.0::(unit_vector z_count index))\n        | Const(value) -> ConstSignal(value)\n        | SampleRate   -> ConstSignal(44100.0)\n        | Add(x, y)    ->\n            (match (create_vector2 x, create_vector2 y) with\n            | (AudioSignal(a), AudioSignal(b)) -> AudioSignal(List.map2_exn ~f:(+.) a b)\n            | (ConstSignal(a), ConstSignal(b)) -> ConstSignal(a +. b)\n            | (AudioSignal(_), ConstSignal(_)) -> raise NotSupportedJSONFormat\n            | (ConstSignal(_), AudioSignal(_)) -> raise NotSupportedJSONFormat\n            )\n        | Sub(x, y) ->\n            (match (create_vector2 x, create_vector2 y) with\n            | (AudioSignal(a), AudioSignal(b)) -> AudioSignal(List.map2_exn ~f:(-.) a b)\n            | (ConstSignal(a), ConstSignal(b)) -> ConstSignal(a -. b)\n            | (AudioSignal(_), ConstSignal(_)) -> raise NotSupportedJSONFormat\n            | (ConstSignal(_), AudioSignal(_)) -> raise NotSupportedJSONFormat\n            )\n        | Mul(x, y) ->\n            (match (create_vector2 x, create_vector2 y) with\n            | (AudioSignal(_), AudioSignal(_)) -> raise NotSupportedJSONFormat\n            | (ConstSignal(a), ConstSignal(b)) -> ConstSignal(a *. b)\n            | (AudioSignal(a), ConstSignal(b)) -> AudioSignal(List.map ~f:(fun x->x*.b) a)\n            | (ConstSignal(a), AudioSignal(b)) -> AudioSignal(List.map ~f:(fun x->a*.x) b)\n            )\n        | Div(x, y) ->\n            (match (create_vector2 x, create_vector2 y) with\n            | (AudioSignal(_), AudioSignal(_)) -> raise NotSupportedJSONFormat\n            | (ConstSignal(a), ConstSignal(b)) -> ConstSignal(a /. b)\n            | (AudioSignal(a), ConstSignal(b)) -> AudioSignal(List.map ~f:(fun x->x/.b) a)\n            | (ConstSignal(_), AudioSignal(_)) -> raise NotSupportedJSONFormat\n            )\n        | Tan(x) ->\n            (match (create_vector2 x) with\n            | AudioSignal(_) -> raise NotSupportedJSONFormat\n            | ConstSignal(a) -> ConstSignal(tan a)\n            )\n        | AudioOut(x) -> create_vector2 x\n        | ZOut(x)     -> create_vector2 x\n    ) in match (create_vector2 terminal_obj) with\n         | AudioSignal(a) -> a\n         | ConstSignal(_) -> raise NotSupportedJSONFormat\n)\n```\n\n# \u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u518d\u751f\n\u3000\u6700\u5f8c\u306bWAV\u30d5\u30a1\u30a4\u30eb\u306e\u97f3\u58f0\u30c7\u30fc\u30bf\u306b\u30d5\u30a3\u30eb\u30bf\u3092\u639b\u3051\u3066\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u518d\u751f\u3057\u307e\u3059\u3002WAV\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u306f\u81ea\u524d\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u304c\u3001\u904b\u826f\u304f[ALSA](https://github.com/savonet/ocaml-alsa)\u306eAPI\u304c\u53e9\u3051\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308a\u307e\u3057\u305f\u3002\u3067\u306f\u518d\u5e30\u3067\u56de\u3057\u3066\u304d\u307e\u3059\u3002\n\n```ocaml:\u629c\u7c8b\nlet a_vector, z_matrix = get_matrix \"test.json\"\nand wav_handle = In_channel.create ~binary:true \"test.wav\" in\nlet wav_frames = get_frames wav_handle     (* \u30d5\u30ec\u30fc\u30e0\u6570\u53d6\u5f97 *)\nand alsa_pcm = open_default_pcm            (* \u30aa\u30fc\u30c7\u30a3\u30aa\u30c7\u30d0\u30a4\u30b9\u3092\u958b\u304f *)\nand alsa_buffer = String.create (2*2*1024) (* PCM\u30c7\u30fc\u30bf\u8ee2\u9001\u7528\u30d0\u30c3\u30d5\u30a1 *)\nand wav_buffer = Buffer.create (2*2*1024)  (* WAV\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u7528\u30d0\u30c3\u30d5\u30a1 *) in\n\nlet rec audio_process remain_frames z_in_ch1 z_in_ch2 = (\n    (* WAV\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u30921\u30d6\u30ed\u30c3\u30af\u8aad\u307f\u8fbc\u307f *)\n    Buffer.clear wav_buffer;\n    let block_size = if remain_frames > 1024 then 1024 else remain_frames in\n    Buffer.add_channel wav_buffer wav_handle (block_size*4);\n\n    (* \u30d6\u30ed\u30c3\u30af\u51e6\u7406 *)\n    let rec audio_process_block alsa_frame z_in_ch1 z_in_ch2 = (\n        if alsa_frame < block_size then (\n            (* 1\u30d5\u30ec\u30fc\u30e0\u53d6\u5f97 *)\n            let a_in_ch1, a_in_ch2 = read_wav_data wav_buffer alsa_frame in\n            let in_ch1 = a_in_ch1::z_in_ch1\n            and in_ch2 = a_in_ch2::z_in_ch2 in\n\n            (* ch1\u66f4\u65b0 *)\n            let a_out_ch1\n                = List.fold2_exn ~f:(fun a x y->a+.x*.y) ~init:0.0 in_ch1 a_vector\n            and z_out_ch1\n                = List.map ~f:(List.fold2_exn ~f:(fun a x y->a+.x*.y) ~init:1.0e-100 in_ch1) z_matrix\n\n            (* ch2\u66f4\u65b0 *)\n            and a_out_ch2\n                = List.fold2_exn ~f:(fun a x y->a+.x*.y) ~init:0.0 in_ch2 a_vector\n            and z_out_ch2\n                = List.map ~f:(List.fold2_exn ~f:(fun a x y->a+.x*.y) ~init:1.0e-100 in_ch2) z_matrix in\n\n            (* PCM\u30c7\u30fc\u30bf\u8ee2\u9001\u7528\u30d0\u30c3\u30d5\u30a1\u66f8\u304d\u8fbc\u307f *)\n            write_alsa_buffer alsa_buffer alsa_frame a_out_ch1 a_out_ch2;\n\n            (* next frame *)\n            audio_process_block (alsa_frame + 1) z_out_ch1 z_out_ch2\n        )\n        else z_in_ch1, z_in_ch2 (* end block *)\n    ) in\n    let z_out_ch1, z_out_ch2 = audio_process_block 0 z_in_ch1 z_in_ch2 in (* start block *)\n\n    (* PCM\u30c7\u30fc\u30bf\u8ee2\u9001 *)\n    ignore (Alsa.Pcm.writei alsa_pcm alsa_buffer 0 block_size);\n\n    if remain_frames > 1024 then audio_process (remain_frames - 1024) z_out_ch1 z_out_ch2 (* next block *)\n) in\nlet z_in_init = zero_vector (List.length z_matrix) in\naudio_process wav_frames z_in_init z_in_init; (* start *)\n```\n\n\u30001\u30d6\u30ed\u30c3\u30af\u3042\u305f\u308a1024\u30d5\u30ec\u30fc\u30e0\u3068\u3057\u3066\u30d6\u30ed\u30c3\u30af\u5358\u4f4d\u3067ALSA\u306bPCM\u30c7\u30fc\u30bf\u3092\u8ee2\u9001\u3057\u307e\u3059\u3002`1.0e-100`\u3068\u3044\u3046\u6570\u304c\u767b\u5834\u3057\u307e\u3059\u304c\u975e\u6b63\u898f\u5316\u6570\u304c\u767a\u751f\u3059\u308b\u306e\u3092\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u5074\u3067\u9632\u6b62\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3059\u3002\u3042\u3068PCM\u30c7\u30fc\u30bf\u8ee2\u9001\u3067\u6e21\u3057\u3066\u3044\u308b\u30d0\u30c3\u30d5\u30a1\u306f\u521d\u56de\u306b\u4f5c\u6210\u3057\u305f\u3082\u306e\u306b\u7834\u58ca\u7684\u4ee3\u5165\u3092\u884c\u3063\u3066\u4f7f\u3044\u56de\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u3053\u306f\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n\n* [\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9](https://github.com/fukuroder/ocaml_dsp_test)\n", "tags": ["OCaml4.01.0", "\u4fe1\u53f7\u51e6\u7406"]}