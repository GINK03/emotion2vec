{"context": " More than 1 year has passed since last update.\u3076\u3063\u3061\u3083\u3051\u306a\u3093\u3067\u4f5c\u3063\u305f\u306e\u304b\u601d\u3044\u51fa\u305b\u306a\u3044\u3051\u3069\u3001\u306a\u3093\u304b\u4fbf\u5229\u305d\u3046\u3060\u304b\u3089\u7f6e\u3044\u3066\u304a\u304f\n\u78ba\u304b\u3001terminal\u30e2\u30fc\u30c9\u3067\u30de\u30c3\u30d7\u3059\u308b\u3068\u5165\u529b\u304c\u3081\u3093\u3069\u3044\u304b\u3089\u4e00\u77ac\u3060\u3051\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u623b\u3059\u304b\u307f\u305f\u3044\u306a\u601d\u60d1\u3067\u4f5c\u3063\u305f\u6c17\u304c\u3059\u308b.\n\" Copy and modify from mapping source in unite.vim\nfunction! s:get_mapping_list(map_cmd) abort\n    redir => mapping_str\n    silent! execute a:map_cmd\n    redir END\n\n    let mapping_list = []\n    let mapping_lines = split(mapping_str, '\\n')\n    let mapping_lines = filter(copy(mapping_lines), \"v:val =~ '\\\\s\\\\+\\\\*\\\\?@'\") + filter(copy(mapping_lines), \"v:val !~ '\\\\s\\\\+\\\\*\\\\?@'\")\n    for line in map(mapping_lines, \"substitute(v:val, '<NL>', '<C-J>', 'g')\")\n        \" attribute\n        let attr = ''\n\n        \" right\n        let map_rhs = matchstr(line, '^\\a*\\s*\\S\\+\\s*\\zs.*\\ze\\s*')\n        if map_rhs =~ '^\\*\\s.*'\n            let map_rhs = map_rhs[2:]\n            let attr = '*'\n        endif\n\n        \" left\n        let map_lhs = matchstr(line, '^\\a*\\s*\\zs\\S\\+')\n        if map_lhs =~ '^<SNR>' || map_lhs =~ '^<Plug>'\n            continue\n        endif\n        let map_lhs = substitute(map_lhs, '<NL>', '<C-j>', 'g')\n        let map_lhs = substitute(map_lhs, '\\(<.*>\\)', '\\1', 'g')\n\n        call add(mapping_list, [map_lhs, map_rhs, attr])\n    endfor\n\n    return mapping_list\nendfunction\n\nlet s:is_term_map_enable = 1\nfunction! s:toggle_terminal_map() abort\n    if s:is_term_map_enable == 1\n        let g:toggle_mapinfo_list = <SID>get_mapping_list('tmap')\n        \" Disable\n        for mapinfo in g:toggle_mapinfo_list\n            echo mapinfo[0]\n            execute 'tunmap' mapinfo[0]\n        endfor\n        let s:is_term_map_enable = 0\n    else\n        \" Enable\n        for mapinfo in g:toggle_mapinfo_list\n            let map_cmd = (mapinfo[2] == '*') ? ('tnoremap') : ('tmap')\n            execute map_cmd mapinfo[0] mapinfo[1]\n        endfor\n        let s:is_term_map_enable = 1\n    endif\nendfunction\n\ncommand! -nargs=0 ToggleTerminaMap call <SID>toggle_terminal_map()\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u6709\u52b9/\u7121\u52b9\u3092\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\u306f\u305a\ntnoremap <ESC> <C-\\><C-n>\ntnoremap <C-w>h <C-\\><C-n><C-w>h\ntnoremap <C-w>j <C-\\><C-n><C-w>j\ntnoremap <C-w>k <C-\\><C-n><C-w>k\ntnoremap <C-w>l <C-\\><C-n><C-w>l\n\n\u3082\u3063\u3068\u7c21\u5358\u306a\u65b9\u6cd5\u304c\u3042\u308c\u3070\u305c\u3072\u6559\u3048\u3066\u304f\u3060\u3055\u3044.\n\u3076\u3063\u3061\u3083\u3051\u306a\u3093\u3067\u4f5c\u3063\u305f\u306e\u304b\u601d\u3044\u51fa\u305b\u306a\u3044\u3051\u3069\u3001\u306a\u3093\u304b\u4fbf\u5229\u305d\u3046\u3060\u304b\u3089\u7f6e\u3044\u3066\u304a\u304f\n\u78ba\u304b\u3001terminal\u30e2\u30fc\u30c9\u3067\u30de\u30c3\u30d7\u3059\u308b\u3068\u5165\u529b\u304c\u3081\u3093\u3069\u3044\u304b\u3089\u4e00\u77ac\u3060\u3051\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u623b\u3059\u304b\u307f\u305f\u3044\u306a\u601d\u60d1\u3067\u4f5c\u3063\u305f\u6c17\u304c\u3059\u308b.\n\n```vim\n\" Copy and modify from mapping source in unite.vim\nfunction! s:get_mapping_list(map_cmd) abort\n    redir => mapping_str\n    silent! execute a:map_cmd\n    redir END\n\n    let mapping_list = []\n    let mapping_lines = split(mapping_str, '\\n')\n    let mapping_lines = filter(copy(mapping_lines), \"v:val =~ '\\\\s\\\\+\\\\*\\\\?@'\") + filter(copy(mapping_lines), \"v:val !~ '\\\\s\\\\+\\\\*\\\\?@'\")\n    for line in map(mapping_lines, \"substitute(v:val, '<NL>', '<C-J>', 'g')\")\n        \" attribute\n        let attr = ''\n\n        \" right\n        let map_rhs = matchstr(line, '^\\a*\\s*\\S\\+\\s*\\zs.*\\ze\\s*')\n        if map_rhs =~ '^\\*\\s.*'\n            let map_rhs = map_rhs[2:]\n            let attr = '*'\n        endif\n\n        \" left\n        let map_lhs = matchstr(line, '^\\a*\\s*\\zs\\S\\+')\n        if map_lhs =~ '^<SNR>' || map_lhs =~ '^<Plug>'\n            continue\n        endif\n        let map_lhs = substitute(map_lhs, '<NL>', '<C-j>', 'g')\n        let map_lhs = substitute(map_lhs, '\\(<.*>\\)', '\\1', 'g')\n\n        call add(mapping_list, [map_lhs, map_rhs, attr])\n    endfor\n\n    return mapping_list\nendfunction\n\nlet s:is_term_map_enable = 1\nfunction! s:toggle_terminal_map() abort\n    if s:is_term_map_enable == 1\n        let g:toggle_mapinfo_list = <SID>get_mapping_list('tmap')\n        \" Disable\n        for mapinfo in g:toggle_mapinfo_list\n            echo mapinfo[0]\n            execute 'tunmap' mapinfo[0]\n        endfor\n        let s:is_term_map_enable = 0\n    else\n        \" Enable\n        for mapinfo in g:toggle_mapinfo_list\n            let map_cmd = (mapinfo[2] == '*') ? ('tnoremap') : ('tmap')\n            execute map_cmd mapinfo[0] mapinfo[1]\n        endfor\n        let s:is_term_map_enable = 1\n    endif\nendfunction\n\ncommand! -nargs=0 ToggleTerminaMap call <SID>toggle_terminal_map()\n```\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306e\u6709\u52b9/\u7121\u52b9\u3092\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\u306f\u305a\n\n```vim\ntnoremap <ESC> <C-\\><C-n>\ntnoremap <C-w>h <C-\\><C-n><C-w>h\ntnoremap <C-w>j <C-\\><C-n><C-w>j\ntnoremap <C-w>k <C-\\><C-n><C-w>k\ntnoremap <C-w>l <C-\\><C-n><C-w>l\n```\n\n\u3082\u3063\u3068\u7c21\u5358\u306a\u65b9\u6cd5\u304c\u3042\u308c\u3070\u305c\u3072\u6559\u3048\u3066\u304f\u3060\u3055\u3044.\n", "tags": ["neovim"]}