{"context": "\n\n\u306f\u3058\u3081\u306b\niOS10\u304b\u3089\u5199\u771f\u30c7\u30fc\u30bf\u53d6\u5f97\u306b\u7528\u3044\u3066\u3044\u305fAVCaptureStillImageOutput\u304cdeprecated\u306b\u306a\u308a\u3001\u4ee3\u308f\u308a\u306b\u8ffd\u52a0\u3055\u308c\u305fAVCapturePhotoOutput\u3092\u4f7f\u3046\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3067\u3059\u304c\u3001\u65e2\u5b58\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u898b\u3066\u3082\u672a\u3060AVCaptureStillImageOutput\u3092\u4f7f\u3063\u3066\u308b\u3082\u306e\u304c\u307b\u3068\u3093\u3069\u3067\u3059\u3002\n\u3053\u308c\u3089\u3092\u66f8\u304d\u76f4\u305d\u3046\u3068\u601d\u3044\u3050\u3050\u3063\u305f\u3068\u3053\u308d\u3001AVCapturePhotoOutput\u306b\u3064\u3044\u3066\u306f\u73fe\u72b6\u3042\u307e\u308a\u77e5\u898b\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\uff0810/27\u73fe\u5728\uff09\u3002\n\u305d\u3053\u3067\u3001\n\"\u77e5\u898b\u304c\u306a\u3044\u306a\u3089\u4f5c\u308c\u3070\u3044\u3044\u3093\u3084\u3067\ud83e\udd14\"\n\u3068\u3044\u3046\u6c17\u6301\u3061\u3067\u3001AVCapturePhotoOutput\u3092\u7528\u3044\u305f\u5b9f\u88c5\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff01\n\n\u73fe\u72b6\u8003\u3048\u3089\u308c\u308b\u30ab\u30e1\u30e9\u306e\u5b9f\u88c5\u65b9\u6cd5\u3068\u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8\n\n(1)AVCaptureStillImageOutput\uff08iOS10\u304b\u3089deprecated\uff09\n\nAPI Reference - AVCaptureStillImageOutput\n\u753b\u50cf\u51e6\u7406\u7b49\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u7528\u3044\u3089\u308c\u308b\nUIImagePickerController\u3068\u6bd4\u3079\u308b\u3068\u5b9f\u88c5\u304c\u8907\u96d1\n\n\n(2) AVCapturePhotoOutput\n\nAPI Reference - AVCapturePhotoOutput\nLivePhoto\u306a\u3069\u306e\u64ae\u5f71\u304c\u53ef\u80fd\nAVCaptureStillImageOutput\u306e\u5f8c\u7d99\u3068\u8003\u3048\u3089\u308c\u308b\u304c\u3001\u30bb\u30c3\u30c6\u30a3\u30f3\u30b0\u5468\u308a\u306fAVCapturePhotoSettings\u306b\u5206\u3051\u3089\u308c\u3066\u3044\u308b\u306a\u3069\u3001AVCaptureStillImageOutput\u3068\u306f\u52dd\u624b\u304c\u7570\u306a\u308b\u3002\n\u77e5\u898b\u304c\u3042\u307e\u308a\u7121\u3044\nUIImagePickerController\u3068\u6bd4\u3079\u308b\u3068\u5b9f\u88c5\u304c\u8907\u96d1\n\n\n(3) UIImagePickerController\n\n\nAPI Reference - UIImagePickerController \n\u5c0e\u5165\u304c\u7c21\u5358 \n\u6700\u4f4e\u9650\u306e\u5b9f\u88c5\u306f\u3053\u308c\u3067\u5341\u5206\n\u8907\u96d1\u306a\u3053\u3068\u306f\u51fa\u6765\u306a\u3044\n\n\u4ee5\u4e0a\u306e3\u3064\u304c\u73fe\u72b6\u8003\u3048\u3089\u308c\u308b\u30ab\u30e1\u30e9\u306e\u5b9f\u88c5\u65b9\u6cd5\u3068\u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8\u3067\u3059\u3002\n\u3067\u306f\u3001\u4e0a\u8a183\u7a2e\u985e\u306e\u5b9f\u88c5\u30fb\u6bd4\u8f03\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u74b0\u5883\nmacOS Sierra 10.12.1\nXcode8.1\nSwift3.0\niOS10.1.1 (iPhoneSE)\n\n\u5b9f\u88c5\n\u307e\u305a3\u3064\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5171\u901a\u3067\u3001Storyboard\u306bUIImageView\u3001UIButton\u3092\u914d\u7f6e\u3059\u308b\u3002\n\n\u6b21\u306b\uff08\u5fd8\u308c\u308b\u524d\u306b\uff09Info.plist\u306b\u4ee5\u4e0b\u306e2\u3064\u306e\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n\u53c2\u7167\ufe30[iOS 10] \u30e6\u30fc\u30b6\u30fc\u306e\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u304d\u306f\u7406\u7531\u3092\u66f8\u3053\u3046\n\n\u3053\u3053\u304b\u30893\u7a2e\u985e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u2193\n\n(1)AVCaptureStillImageOutput\u306e\u5834\u5408\n\nAVCaptureStillImageOutput.swift\nimport UIKit\nimport AVFoundation\n\nclass ViewController: UIViewController {\n    @IBOutlet weak var imageView: UIView!\n\n    var captureSession: AVCaptureSession!\n    var cameraDevices: AVCaptureDevice!\n    var imageOutput: AVCaptureStillImageOutput!\n\n    @IBAction func takePhoto(_ sender: Any) {\n        let captureVideoConnection = imageOutput.connection(withMediaType: AVMediaTypeVideo)\n        self.imageOutput.captureStillImageAsynchronously(from: captureVideoConnection) { (imageDataBuffer, error) -> Void in\n            let capturedImageData: NSData = AVCaptureStillImageOutput.jpegStillImageNSDataRepresentation(imageDataBuffer) as NSData\n            let Image: UIImage = UIImage(data: capturedImageData as Data)!\n            UIImageWriteToSavedPhotosAlbum(Image, self, nil, nil)\n        }\n    }\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        captureSession = AVCaptureSession()\n\n        let devices = AVCaptureDevice.devices()\n        for device in devices! {\n            if (device as AnyObject).position == AVCaptureDevicePosition.back {\n                cameraDevices = device as! AVCaptureDevice\n            }\n        }\n\n        let videoInput: AVCaptureInput!\n        do {\n            videoInput = try AVCaptureDeviceInput.init(device: cameraDevices)\n        } catch {\n            videoInput = nil\n        }\n\n        captureSession.addInput(videoInput)\n        imageOutput = AVCaptureStillImageOutput()\n        captureSession.addOutput(imageOutput)\n        let captureVideoLayer: AVCaptureVideoPreviewLayer = AVCaptureVideoPreviewLayer.init(session: captureSession)\n        captureVideoLayer.frame = self.imageView.bounds\n        captureVideoLayer.videoGravity = AVLayerVideoGravityResizeAspectFill\n        self.imageView.layer.addSublayer(captureVideoLayer)\n        captureSession.startRunning()\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n}\n\n\n\u4eca\u307e\u3067\u306e\u30b3\u30fc\u30c9\u306e\u66f8\u304d\u65b9\u3060\u3068\u3053\u3093\u306a\u611f\u3058\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u5927\u62b5\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u307e\u3060\u3053\u306e\u66f8\u304d\u65b9\u304c\u591a\u3044\u30a4\u30e1\u30fc\u30b8\ud83e\udd14\nAVCaptureStillImageOutput\u306e\u30b5\u30f3\u30d7\u30eb\n\n(2) AVCapturePhotoOutput\u306e\u5834\u5408\n\nAVCapturePhotoOutput.swift\n\nimport UIKit\nimport AVFoundation\n\nclass ViewController: UIViewController,AVCapturePhotoCaptureDelegate {\n    @IBOutlet weak var imageView: UIImageView!\n\n    var captureSesssion: AVCaptureSession!\n    var stillImageOutput: AVCapturePhotoOutput!\n    //    \u2191 \u66f8\u304d\u63db\u3048 AVCaptureStillImageOutput \u2192 AVCapturePhotoOutput\n\n    @IBAction func takePhoto(_ sender: Any){\n        let settingsForMonitoring = AVCapturePhotoSettings()\n        settingsForMonitoring.flashMode = .auto\n        settingsForMonitoring.isAutoStillImageStabilizationEnabled = true\n        settingsForMonitoring.isHighResolutionPhotoEnabled = false\n        stillImageOutput?.capturePhoto(with: settingsForMonitoring, delegate: self)\n    }\n    //    AVCapturePhotoSettings\u3068\u3044\u3046\u65b0\u3057\u3044Class\u304cAVCapturePhotoOutput\u3068\u4e00\u7dd2\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3002\n    //    \u30d5\u30e9\u30c3\u30b7\u30e5\u306a\u3069\u306e\u7d30\u304b\u3044\u8a2d\u5b9a\u306fAVCapturePhotoSettings\u3067\u884c\u3046\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        captureSesssion = AVCaptureSession()\n        captureSesssion.sessionPreset = AVCaptureSessionPreset1920x1080\n        stillImageOutput = AVCapturePhotoOutput()\n\n        let device = AVCaptureDevice.defaultDevice(withMediaType: AVMediaTypeVideo)\n\n//        \u4eca\u56de\u306f\ud83d\udcf7\u306eFront\u3001Back\u3001Dual\u306e\u6307\u5b9a\u306f\u3057\u3066\u3044\u306a\u3044\u304c\u3001\u3059\u308b\u3068\u3057\u305f\u3089\u3053\u3093\u306a\u611f\u3058\n//        do {\n//            var defaultVideoDevice: AVCaptureDevice?\n//            defaultVideoDevice = dualCameraDevice\n//        }\n//            else if let backCameraDevice = AVCaptureDevice.defaultDevice(withDeviceType: .builtInWideAngleCamera, mediaType: AVMediaTypeVideo, position: .back) {\n//                defaultVideoDevice = backCameraDevice\n//            }\n//            else if let frontCameraDevice = AVCaptureDevice.defaultDevice(withDeviceType: .builtInWideAngleCamera, mediaType: AVMediaTypeVideo, position: .front) {\n//               defaultVideoDevice = frontCameraDevice\n//            }\n//            \n//            let videoDeviceInput = try AVCaptureDeviceInput(device: defaultVideoDevice)\n//            \n//            if session.canAddInput(videoDeviceInput) {\n//                session.addInput(videoDeviceInput)\n//                self.videoDeviceInput = videoDeviceInput\n//                \n//                DispatchQueue.main.async {\n//                    let statusBarOrientation = UIApplication.shared.statusBarOrientation\n//                    var initialVideoOrientation: AVCaptureVideoOrientation = .portrait\n//                    if statusBarOrientation != .unknown {\n//                        if let videoOrientation = statusBarOrientation.videoOrientation {\n//                            initialVideoOrientation = videoOrientation\n//                        }\n//                    }\n//                    \n//                    self.previewView.videoPreviewLayer.connection.videoOrientation = initialVideoOrientation\n//                }\n//            }\n//            else {\n//                setupResult = .configurationFailed\n//                session.commitConfiguration()\n//                return\n//            }\n//        }\n\n        do {\n            let input = try AVCaptureDeviceInput(device: device)\n            if (captureSesssion.canAddInput(input)) {\n                captureSesssion.addInput(input)\n                if (captureSesssion.canAddOutput(stillImageOutput)) {\n                    captureSesssion.addOutput(stillImageOutput)\n                    captureSesssion.startRunning()\n                    let captureVideoLayer: AVCaptureVideoPreviewLayer = AVCaptureVideoPreviewLayer.init(session: captureSesssion)\n                    captureVideoLayer.frame = self.imageView.bounds\n                    captureVideoLayer.videoGravity = AVLayerVideoGravityResizeAspectFill\n                    self.imageView.layer.addSublayer(captureVideoLayer)\n                }\n            }\n        }\n        catch {\n            print(error)\n        }\n    }\n\n    func capture(_ captureOutput: AVCapturePhotoOutput, didFinishProcessingPhotoSampleBuffer photoSampleBuffer: CMSampleBuffer?, previewPhotoSampleBuffer: CMSampleBuffer?, resolvedSettings: AVCaptureResolvedPhotoSettings, bracketSettings: AVCaptureBracketedStillImageSettings?, error: Error?) {\n        if let photoSampleBuffer = photoSampleBuffer {\n            let photoData = AVCapturePhotoOutput.jpegPhotoDataRepresentation(forJPEGSampleBuffer: photoSampleBuffer, previewPhotoSampleBuffer: previewPhotoSampleBuffer)\n            let image = UIImage(data: photoData!)\n            UIImageWriteToSavedPhotosAlbum(image!, nil, nil, nil)\n        }\n    }\n}\n\n\n\n\u3053\u308c\u304ciOS10\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u306a\u308b\u66f8\u304d\u65b9\u3002\nSwift3.0\u3067\u30b9\u30c3\u30ad\u30ea\u304b\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u306bAVCapturePhotoOutput\u3068AVCapturePhotoSettings\u306b\u5225\u308c\u305f\u308a\u3061\u3068\u3081\u3093\u3069\u304f\u3055\u3055\u304c\u5897\u3057\u3066\u308b\u2026\ud83d\udc7f\uff08\u6163\u308c\u305f\u3089\u3053\u3063\u3061\u306e\u307b\u3046\u304c\u5225\u308c\u3066\u308b\u5206\u66f8\u304d\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u306a\u3044)\nAVCapturePhotoOutput\u306e\u30b5\u30f3\u30d7\u30eb\n\n(3) UIImagePickerController\u306e\u5834\u5408\n\u203bUIImagePickerController\u306e\u307f\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3059 \u2192 \u5199\u771f\u3092\u64ae\u308b \u2192 \u53d6\u3063\u305f\u5199\u771f\u3092ImageView\u306b\u8868\u793a\u3068\u3044\u3046\u6d41\u308c\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nUIImagePickerController.swift\nimport UIKit\n\nclass ViewController: UIViewController, UIImagePickerControllerDelegate, UINavigationControllerDelegate {\n\n    @IBOutlet weak var imageView: UIImageView!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n\n    @IBAction func Btn(_ sender: Any) {\n        //\u30ab\u30e1\u30e9\u304c\u4f7f\u3048\u308b\u304b\u8abf\u3079\u308b\n        if UIImagePickerController.isSourceTypeAvailable(UIImagePickerControllerSourceType.camera) {\n\n            //UIImagePickerController\u578b\u306e\u5909\u6570\u3092\u4f5c\u6210\n            let picker = UIImagePickerController()\n\n            //sourceType\u3067\u30ab\u30e1\u30e9\u3092\u6307\u5b9a\n            picker.sourceType = UIImagePickerControllerSourceType.camera\n            //picker.sourceType = UIImagePickerControllerSourceType.photoLibrary\n\n            picker.delegate = self\n\n            //\u30ab\u30e1\u30e9\u8d77\u52d5\n            present(picker, animated: true, completion: nil)\n\n        }\n\n    }\n\n    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : Any]) {\n\n        let image = info[UIImagePickerControllerOriginalImage] as! UIImage\n        imageView.image = image \n        //\u64ae\u5f71\u753b\u50cf\u4fdd\u6301\n\n        //\u30ab\u30e1\u30e9\u30ed\u30fc\u30eb\u306b\u4fdd\u5b58\n        UIGraphicsBeginImageContext(imageView.bounds.size)\n        imageView.layer.render(in: UIGraphicsGetCurrentContext()!)\n        UIImageWriteToSavedPhotosAlbum(UIGraphicsGetImageFromCurrentImageContext()!, self, nil, nil)\n        UIGraphicsEndImageContext()\n        dismiss(animated: true, completion: nil)\n    }\n}\n\n\n\u3067\u3001\u304a\u306a\u3058\u307fUIPickerController\u3002\n\u3084\u306f\u308a\u3001\u30df\u30cb\u30de\u30e0\u306e\u5b9f\u88c5\u3060\u3068UIImagePickerController\u304c\u4e00\u756a\u30e9\u30af\u3002\nUIPickerController\u306e\u30b5\u30f3\u30d7\u30eb\n\n\u6240\u611f\n\u30fbAVCaptureStillImageOutput\u3092\u7528\u3044\u305f\u6642\u3068AVCapturePhotoOutput\u3092\u7528\u3044\u305f\u3068\u304d\u3068\u3067\u306f\u52dd\u624b\u304c\u5927\u3044\u306b\u7570\u306a\u308b\u3068(\u500b\u4eba\u7684\u306b)\u611f\u3058\u305f\u3002\n\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u66f8\u304d\u76f4\u3059\u3068\u306a\u308b\u3068\u3001\u9aa8\u304c\u6298\u308c\u308b\uff08\u9aa8\u304c\u6298\u308c\u305f\n\u30fb\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u5f8c\u306bApple\u306e\u3068\u3066\u3082\u3044\u3044\u30b5\u30f3\u30d7\u30eb\u3092\u767a\u898b\u3057\u305f\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u898b\u3066\u3044\u305f\u3060\u304f\u3068\u3088\u308a\u53c2\u8003\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\uff08\u53c2\u7167\u306b\u6dfb\u4ed8\uff09\n\n\u53c2\u8003\nAVCam-iOS: Using AVFoundation to Capture Images and Movies\niOS10\u30ab\u30b9\u30bf\u30e0\u30ab\u30e1\u30e9 - Swift 3\niOS 10\u306e\u65b0\u6a5f\u80fd\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u96c6\u300ciOS 10 Sampler\u300d\n(\u9806\u4e0d\u540c)\n# \u306f\u3058\u3081\u306b\niOS10\u304b\u3089\u5199\u771f\u30c7\u30fc\u30bf\u53d6\u5f97\u306b\u7528\u3044\u3066\u3044\u305fAVCaptureStillImageOutput\u304cdeprecated\u306b\u306a\u308a\u3001\u4ee3\u308f\u308a\u306b\u8ffd\u52a0\u3055\u308c\u305fAVCapturePhotoOutput\u3092\u4f7f\u3046\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3067\u3059\u304c\u3001\u65e2\u5b58\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u898b\u3066\u3082\u672a\u3060AVCaptureStillImageOutput\u3092\u4f7f\u3063\u3066\u308b\u3082\u306e\u304c\u307b\u3068\u3093\u3069\u3067\u3059\u3002\n\u3053\u308c\u3089\u3092\u66f8\u304d\u76f4\u305d\u3046\u3068\u601d\u3044\u3050\u3050\u3063\u305f\u3068\u3053\u308d\u3001AVCapturePhotoOutput\u306b\u3064\u3044\u3066\u306f\u73fe\u72b6\u3042\u307e\u308a\u77e5\u898b\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\uff0810/27\u73fe\u5728\uff09\u3002\n\n\u305d\u3053\u3067\u3001\n\"\u77e5\u898b\u304c\u306a\u3044\u306a\u3089\u4f5c\u308c\u3070\u3044\u3044\u3093\u3084\u3067\ud83e\udd14\"\n\u3068\u3044\u3046\u6c17\u6301\u3061\u3067\u3001AVCapturePhotoOutput\u3092\u7528\u3044\u305f\u5b9f\u88c5\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff01\n\n## \u73fe\u72b6\u8003\u3048\u3089\u308c\u308b\u30ab\u30e1\u30e9\u306e\u5b9f\u88c5\u65b9\u6cd5\u3068\u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8\n\n\n\n### (1)AVCaptureStillImageOutput\uff08iOS10\u304b\u3089deprecated\uff09\n - [API Reference - AVCaptureStillImageOutput](https://developer.apple.com/reference/avfoundation/avcapturestillimageoutput)\n - \u753b\u50cf\u51e6\u7406\u7b49\u3092\u884c\u3044\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u7528\u3044\u3089\u308c\u308b\n - UIImagePickerController\u3068\u6bd4\u3079\u308b\u3068\u5b9f\u88c5\u304c\u8907\u96d1\n\n### (2) AVCapturePhotoOutput \n- [API Reference - AVCapturePhotoOutput](https://developer.apple.com/reference/avfoundation/avcapturephotooutput)\n- LivePhoto\u306a\u3069\u306e\u64ae\u5f71\u304c\u53ef\u80fd\n- AVCaptureStillImageOutput\u306e\u5f8c\u7d99\u3068\u8003\u3048\u3089\u308c\u308b\u304c\u3001\u30bb\u30c3\u30c6\u30a3\u30f3\u30b0\u5468\u308a\u306fAVCapturePhotoSettings\u306b\u5206\u3051\u3089\u308c\u3066\u3044\u308b\u306a\u3069\u3001AVCaptureStillImageOutput\u3068\u306f\u52dd\u624b\u304c\u7570\u306a\u308b\u3002\n- \u77e5\u898b\u304c\u3042\u307e\u308a\u7121\u3044\n- UIImagePickerController\u3068\u6bd4\u3079\u308b\u3068\u5b9f\u88c5\u304c\u8907\u96d1\n\n### (3) UIImagePickerController\n - [API Reference - UIImagePickerController](https://developer.apple.com/reference/uikit/uiimagepickercontroller) \n - \u5c0e\u5165\u304c\u7c21\u5358 \n - \u6700\u4f4e\u9650\u306e\u5b9f\u88c5\u306f\u3053\u308c\u3067\u5341\u5206\n - \u8907\u96d1\u306a\u3053\u3068\u306f\u51fa\u6765\u306a\u3044\n\n\u4ee5\u4e0a\u306e3\u3064\u304c\u73fe\u72b6\u8003\u3048\u3089\u308c\u308b\u30ab\u30e1\u30e9\u306e\u5b9f\u88c5\u65b9\u6cd5\u3068\u30e1\u30ea\u30c3\u30c8\u30fb\u30c7\u30e1\u30ea\u30c3\u30c8\u3067\u3059\u3002\n\n\u3067\u306f\u3001\u4e0a\u8a183\u7a2e\u985e\u306e\u5b9f\u88c5\u30fb\u6bd4\u8f03\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u74b0\u5883\nmacOS Sierra 10.12.1\nXcode8.1\nSwift3.0\niOS10.1.1 (iPhoneSE)\n\n## \u5b9f\u88c5\n\n\u307e\u305a3\u3064\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5171\u901a\u3067\u3001Storyboard\u306bUIImageView\u3001UIButton\u3092\u914d\u7f6e\u3059\u308b\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/53633/1c66fd9a-83c6-488c-ec95-4a2aae5fc49f.png)\n\n\u6b21\u306b\uff08\u5fd8\u308c\u308b\u524d\u306b\uff09Info.plist\u306b\u4ee5\u4e0b\u306e2\u3064\u306e\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/53633/f1b2189b-fd55-f01b-75bd-3e92d006d842.png)\n\n[\u53c2\u7167\ufe30[iOS 10] \u30e6\u30fc\u30b6\u30fc\u306e\u30d7\u30e9\u30a4\u30d0\u30b7\u30fc\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u304d\u306f\u7406\u7531\u3092\u66f8\u3053\u3046](http://dev.classmethod.jp/smartphone/write-description-for-privacy-data-access/)\n\n##### \u3053\u3053\u304b\u30893\u7a2e\u985e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u2193\n\n\n#### (1)AVCaptureStillImageOutput\u306e\u5834\u5408\n\n```Swift:AVCaptureStillImageOutput.swift\nimport UIKit\nimport AVFoundation\n\nclass ViewController: UIViewController {\n    @IBOutlet weak var imageView: UIView!\n    \n    var captureSession: AVCaptureSession!\n    var cameraDevices: AVCaptureDevice!\n    var imageOutput: AVCaptureStillImageOutput!\n    \n    @IBAction func takePhoto(_ sender: Any) {\n        let captureVideoConnection = imageOutput.connection(withMediaType: AVMediaTypeVideo)\n        self.imageOutput.captureStillImageAsynchronously(from: captureVideoConnection) { (imageDataBuffer, error) -> Void in\n            let capturedImageData: NSData = AVCaptureStillImageOutput.jpegStillImageNSDataRepresentation(imageDataBuffer) as NSData\n            let Image: UIImage = UIImage(data: capturedImageData as Data)!\n            UIImageWriteToSavedPhotosAlbum(Image, self, nil, nil)\n        }\n    }\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        captureSession = AVCaptureSession()\n\n        let devices = AVCaptureDevice.devices()\n        for device in devices! {\n            if (device as AnyObject).position == AVCaptureDevicePosition.back {\n                cameraDevices = device as! AVCaptureDevice\n            }\n        }\n        \n        let videoInput: AVCaptureInput!\n        do {\n            videoInput = try AVCaptureDeviceInput.init(device: cameraDevices)\n        } catch {\n            videoInput = nil\n        }\n        \n        captureSession.addInput(videoInput)\n        imageOutput = AVCaptureStillImageOutput()\n        captureSession.addOutput(imageOutput)\n        let captureVideoLayer: AVCaptureVideoPreviewLayer = AVCaptureVideoPreviewLayer.init(session: captureSession)\n        captureVideoLayer.frame = self.imageView.bounds\n        captureVideoLayer.videoGravity = AVLayerVideoGravityResizeAspectFill\n        self.imageView.layer.addSublayer(captureVideoLayer)\n        captureSession.startRunning()\n    }\n    \n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n}\n```\n\u4eca\u307e\u3067\u306e\u30b3\u30fc\u30c9\u306e\u66f8\u304d\u65b9\u3060\u3068\u3053\u3093\u306a\u611f\u3058\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u5927\u62b5\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u307e\u3060\u3053\u306e\u66f8\u304d\u65b9\u304c\u591a\u3044\u30a4\u30e1\u30fc\u30b8\ud83e\udd14\n\n[AVCaptureStillImageOutput\u306e\u30b5\u30f3\u30d7\u30eb](https://github.com/inoue0426/AVCaptureStillImageOutput_test)\n\n\n\n#### (2) AVCapturePhotoOutput\u306e\u5834\u5408\n\n```Swift:AVCapturePhotoOutput.swift\n\nimport UIKit\nimport AVFoundation\n\nclass ViewController: UIViewController,AVCapturePhotoCaptureDelegate {\n    @IBOutlet weak var imageView: UIImageView!\n    \n    var captureSesssion: AVCaptureSession!\n    var stillImageOutput: AVCapturePhotoOutput!\n    //    \u2191 \u66f8\u304d\u63db\u3048 AVCaptureStillImageOutput \u2192 AVCapturePhotoOutput\n    \n    @IBAction func takePhoto(_ sender: Any){\n        let settingsForMonitoring = AVCapturePhotoSettings()\n        settingsForMonitoring.flashMode = .auto\n        settingsForMonitoring.isAutoStillImageStabilizationEnabled = true\n        settingsForMonitoring.isHighResolutionPhotoEnabled = false\n        stillImageOutput?.capturePhoto(with: settingsForMonitoring, delegate: self)\n    }\n    //    AVCapturePhotoSettings\u3068\u3044\u3046\u65b0\u3057\u3044Class\u304cAVCapturePhotoOutput\u3068\u4e00\u7dd2\u306b\u8ffd\u52a0\u3055\u308c\u305f\u3002\n    //    \u30d5\u30e9\u30c3\u30b7\u30e5\u306a\u3069\u306e\u7d30\u304b\u3044\u8a2d\u5b9a\u306fAVCapturePhotoSettings\u3067\u884c\u3046\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        captureSesssion = AVCaptureSession()\n        captureSesssion.sessionPreset = AVCaptureSessionPreset1920x1080\n        stillImageOutput = AVCapturePhotoOutput()\n        \n        let device = AVCaptureDevice.defaultDevice(withMediaType: AVMediaTypeVideo)\n\n//        \u4eca\u56de\u306f\ud83d\udcf7\u306eFront\u3001Back\u3001Dual\u306e\u6307\u5b9a\u306f\u3057\u3066\u3044\u306a\u3044\u304c\u3001\u3059\u308b\u3068\u3057\u305f\u3089\u3053\u3093\u306a\u611f\u3058\n//        do {\n//            var defaultVideoDevice: AVCaptureDevice?\n//            defaultVideoDevice = dualCameraDevice\n//        }\n//            else if let backCameraDevice = AVCaptureDevice.defaultDevice(withDeviceType: .builtInWideAngleCamera, mediaType: AVMediaTypeVideo, position: .back) {\n//                defaultVideoDevice = backCameraDevice\n//            }\n//            else if let frontCameraDevice = AVCaptureDevice.defaultDevice(withDeviceType: .builtInWideAngleCamera, mediaType: AVMediaTypeVideo, position: .front) {\n//               defaultVideoDevice = frontCameraDevice\n//            }\n//            \n//            let videoDeviceInput = try AVCaptureDeviceInput(device: defaultVideoDevice)\n//            \n//            if session.canAddInput(videoDeviceInput) {\n//                session.addInput(videoDeviceInput)\n//                self.videoDeviceInput = videoDeviceInput\n//                \n//                DispatchQueue.main.async {\n//                    let statusBarOrientation = UIApplication.shared.statusBarOrientation\n//                    var initialVideoOrientation: AVCaptureVideoOrientation = .portrait\n//                    if statusBarOrientation != .unknown {\n//                        if let videoOrientation = statusBarOrientation.videoOrientation {\n//                            initialVideoOrientation = videoOrientation\n//                        }\n//                    }\n//                    \n//                    self.previewView.videoPreviewLayer.connection.videoOrientation = initialVideoOrientation\n//                }\n//            }\n//            else {\n//                setupResult = .configurationFailed\n//                session.commitConfiguration()\n//                return\n//            }\n//        }\n\n        do {\n            let input = try AVCaptureDeviceInput(device: device)\n            if (captureSesssion.canAddInput(input)) {\n                captureSesssion.addInput(input)\n                if (captureSesssion.canAddOutput(stillImageOutput)) {\n                    captureSesssion.addOutput(stillImageOutput)\n                    captureSesssion.startRunning()\n                    let captureVideoLayer: AVCaptureVideoPreviewLayer = AVCaptureVideoPreviewLayer.init(session: captureSesssion)\n                    captureVideoLayer.frame = self.imageView.bounds\n                    captureVideoLayer.videoGravity = AVLayerVideoGravityResizeAspectFill\n                    self.imageView.layer.addSublayer(captureVideoLayer)\n                }\n            }\n        }\n        catch {\n            print(error)\n        }\n    }\n    \n    func capture(_ captureOutput: AVCapturePhotoOutput, didFinishProcessingPhotoSampleBuffer photoSampleBuffer: CMSampleBuffer?, previewPhotoSampleBuffer: CMSampleBuffer?, resolvedSettings: AVCaptureResolvedPhotoSettings, bracketSettings: AVCaptureBracketedStillImageSettings?, error: Error?) {\n        if let photoSampleBuffer = photoSampleBuffer {\n            let photoData = AVCapturePhotoOutput.jpegPhotoDataRepresentation(forJPEGSampleBuffer: photoSampleBuffer, previewPhotoSampleBuffer: previewPhotoSampleBuffer)\n            let image = UIImage(data: photoData!)\n            UIImageWriteToSavedPhotosAlbum(image!, nil, nil, nil)\n        }\n    }\n}\n\n```\n\n\u3053\u308c\u304ciOS10\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u306a\u308b\u66f8\u304d\u65b9\u3002\nSwift3.0\u3067\u30b9\u30c3\u30ad\u30ea\u304b\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u306bAVCapturePhotoOutput\u3068AVCapturePhotoSettings\u306b\u5225\u308c\u305f\u308a\u3061\u3068\u3081\u3093\u3069\u304f\u3055\u3055\u304c\u5897\u3057\u3066\u308b\u2026\ud83d\udc7f\uff08\u6163\u308c\u305f\u3089\u3053\u3063\u3061\u306e\u307b\u3046\u304c\u5225\u308c\u3066\u308b\u5206\u66f8\u304d\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u306a\u3044)\n\n\n[AVCapturePhotoOutput\u306e\u30b5\u30f3\u30d7\u30eb](https://github.com/inoue0426/AVCapturePhotoOutput_test)\n\n\n\n#### (3) UIImagePickerController\u306e\u5834\u5408\n\u203bUIImagePickerController\u306e\u307f\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3059 \u2192 \u5199\u771f\u3092\u64ae\u308b \u2192 \u53d6\u3063\u305f\u5199\u771f\u3092ImageView\u306b\u8868\u793a\u3068\u3044\u3046\u6d41\u308c\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```swift:UIImagePickerController.swift\nimport UIKit\n\nclass ViewController: UIViewController, UIImagePickerControllerDelegate, UINavigationControllerDelegate {\n\n    @IBOutlet weak var imageView: UIImageView!\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n    }\n    \n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n    \n    @IBAction func Btn(_ sender: Any) {\n        //\u30ab\u30e1\u30e9\u304c\u4f7f\u3048\u308b\u304b\u8abf\u3079\u308b\n        if UIImagePickerController.isSourceTypeAvailable(UIImagePickerControllerSourceType.camera) {\n            \n            //UIImagePickerController\u578b\u306e\u5909\u6570\u3092\u4f5c\u6210\n            let picker = UIImagePickerController()\n            \n            //sourceType\u3067\u30ab\u30e1\u30e9\u3092\u6307\u5b9a\n            picker.sourceType = UIImagePickerControllerSourceType.camera\n            //picker.sourceType = UIImagePickerControllerSourceType.photoLibrary\n            \n            picker.delegate = self\n            \n            //\u30ab\u30e1\u30e9\u8d77\u52d5\n            present(picker, animated: true, completion: nil)\n            \n        }\n\n    }\n    \n    func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : Any]) {\n        \n        let image = info[UIImagePickerControllerOriginalImage] as! UIImage\n        imageView.image = image \n        //\u64ae\u5f71\u753b\u50cf\u4fdd\u6301\n        \n        //\u30ab\u30e1\u30e9\u30ed\u30fc\u30eb\u306b\u4fdd\u5b58\n        UIGraphicsBeginImageContext(imageView.bounds.size)\n        imageView.layer.render(in: UIGraphicsGetCurrentContext()!)\n        UIImageWriteToSavedPhotosAlbum(UIGraphicsGetImageFromCurrentImageContext()!, self, nil, nil)\n        UIGraphicsEndImageContext()\n        dismiss(animated: true, completion: nil)\n    }\n}\n```\n\n\u3067\u3001\u304a\u306a\u3058\u307fUIPickerController\u3002\n\u3084\u306f\u308a\u3001\u30df\u30cb\u30de\u30e0\u306e\u5b9f\u88c5\u3060\u3068UIImagePickerController\u304c\u4e00\u756a\u30e9\u30af\u3002\n\n[UIPickerController\u306e\u30b5\u30f3\u30d7\u30eb](https://github.com/inoue0426/UIImagePickerController)\n\n\n## \u6240\u611f\n\u30fbAVCaptureStillImageOutput\u3092\u7528\u3044\u305f\u6642\u3068AVCapturePhotoOutput\u3092\u7528\u3044\u305f\u3068\u304d\u3068\u3067\u306f\u52dd\u624b\u304c\u5927\u3044\u306b\u7570\u306a\u308b\u3068(\u500b\u4eba\u7684\u306b)\u611f\u3058\u305f\u3002\n\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u66f8\u304d\u76f4\u3059\u3068\u306a\u308b\u3068\u3001\u9aa8\u304c\u6298\u308c\u308b\uff08\u9aa8\u304c\u6298\u308c\u305f\n\u30fb\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u5f8c\u306bApple\u306e\u3068\u3066\u3082\u3044\u3044\u30b5\u30f3\u30d7\u30eb\u3092\u767a\u898b\u3057\u305f\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u898b\u3066\u3044\u305f\u3060\u304f\u3068\u3088\u308a\u53c2\u8003\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\uff08\u53c2\u7167\u306b\u6dfb\u4ed8\uff09\n\n\n## \u53c2\u8003\n[AVCam-iOS: Using AVFoundation to Capture Images and Movies](https://developer.apple.com/library/content/samplecode/AVCam/Listings/Swift_AVCam_CameraViewController_swift.html#//apple_ref/doc/uid/DTS40010112-Swift_AVCam_CameraViewController_swift-DontLinkElementID_15)\n[iOS10\u30ab\u30b9\u30bf\u30e0\u30ab\u30e1\u30e9 - Swift 3](http://qiita.com/tfutada/items/3e415cbe176d6f801b1d)\n[iOS 10\u306e\u65b0\u6a5f\u80fd\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u96c6\u300ciOS 10 Sampler\u300d](http://qiita.com/shu223/items/f371655c2b101f1b0218)\n(\u9806\u4e0d\u540c)\n", "tags": ["Swift", "iOS", "avfoundation", "UIKit", "\u30ab\u30e1\u30e9"]}