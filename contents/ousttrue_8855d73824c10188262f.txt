{"tags": ["C#", "WPF", "MVVM"], "context": " More than 1 year has passed since last update.AvalonDock\u3092\u4f7f\u3063\u3066\u307f\u308b(\u975eMVVM)\u3067\nDockingManager.DocumentsSource\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u3001DockingManager\u306b\u30d3\u30e5\u30fc\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092Bind\u3057\u307e\u3059\u304c\u30b3\u30fc\u30c9\u91cf\u304c\u4e00\u6319\u306b\u5897\u3048\u307e\u3059\u3002\n\u88dc\u52a9\u7684\u306a\u30b3\u30fc\u30c9\u304c\u305f\u304f\u3055\u3093\u8981\u308b\u306e\u3067\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\nAvalonDock\u306e\u69cb\u9020\n\nWPF\u3067\u30c9\u30c3\u30ad\u30f3\u30b0\u30a6\u30a3\u30f3\u30c9\u30a6(AvalonDock) \u4f7f\u3044\u65b9 \u305d\u306e2 - AvalonDock\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\nAvalonDock 2.0 getting started guide PART 1\nhttps://avalondock.codeplex.com/SourceControl/latest#Version2.0/AvalonDock.MVVMTestApp/\n\n\u3042\u308b\u7a0b\u5ea6\u306f\u69cb\u9020\u3092\u628a\u63e1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\nAvalonDock\u306fLayoutContent\u3092\u30ec\u30a4\u30a2\u30a6\u30c8\u3059\u308b\u306e\u304c\u76ee\u7684\u3067\u3042\u308a\u3001LayoutContent\u306b\u306fLayoutDocument(\u7de8\u96c6\u5bfe\u8c61\u306e\u30e1\u30a4\u30f3\u30a6\u30a4\u30f3\u30c9\u30a6)\u3068LayoutAnchorable(\u60c5\u5831\u8868\u793a\u306e\u30b5\u30d6\u30a6\u30a4\u30f3\u30c9\u30a6)\u306e2\u7a2e\u985e\u304c\u3042\u308b\u3002\n\u5404LayoutContent\u306bContentId\u3092\u624b\u304c\u304b\u308a\u306b\u3057\u3066ViewModel\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3089\u308c\u308b\u3002\nViewModel\u306fDockingManager\u306eDocumentSource(IEnumerable)\u3068AnchorableSource(IEnumerable)\u304b\u3089\u4f9b\u7d66\u3055\u308c\u308b\u3002\n\u30b3\u30f3\u30c6\u30f3\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b9\u30d7\u30ea\u30c3\u30bf\u30fc\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u9818\u57df\u3092\u5206\u5272\u3057\u305f\u672b\u7aef\u306b\u30bf\u30d6\u30d1\u30cd\u30eb\u306b\u306f\u3081\u8fbc\u3080\u65b9\u5f0f\u3067\u30ec\u30a4\u30a2\u30a6\u30c8\u3059\u308b\u3002\n\nDockingManager\n  RootPanel\n    LayoutPanel(\u7e26) \u30b9\u30d7\u30ea\u30c3\u30bf\u30fc\n      LayoutPanel(\u6a2a) \u30b9\u30d7\u30ea\u30c3\u30bf\u30fc\n        LayoutAnchorablePane \u30bf\u30d6\u30d1\u30cd\u30eb\n          (LayoutAnchorable ContentId)\n        LayoutDocumentPane \u6700\u4f4e\u3072\u3068\u3064\u306f\u5fc5\u8981\u3002LayoutDocument\u5c02\u7528\u306e\u30bf\u30d6\u30d1\u30cd\u30eb\n          [LayoutDocument ContentId]\n      LayoutAnchorablePane \u30bf\u30d6\u30d1\u30cd\u30eb\n        (LayoutAnchorable ContentId)\n\n\u3068\u3044\u3046\u3053\u3068\u3067AvalonDock(MVVM)\u3092\u4f7f\u3046\u306b\u306f\u4ee5\u4e0b\u306e\u8981\u7d20\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n\nDockingManager\nLayoutItem\u3068ViewModel(\u30b3\u30f3\u30c6\u30f3\u30c8)\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30d0\u30a4\u30f3\u30c9\u3059\u308bStyleSelector\nDocumentSource\u3068AnchorableSource\u3092\u63d0\u4f9b\u3059\u308bViewModel\u305f\u308bWorkspace(\u672c\u5bb6\u306e\u30b5\u30f3\u30d7\u30ebMVVMTestApp\u306b\u6e96\u62e0\u3057\u305f\u540d\u524d)\n\u975e\u8868\u793a\u306b\u3057\u305fAnchorable\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u30e1\u30cb\u30e5\u30fc(\u7121\u304f\u3066\u3082\u52d5\u304f\u304c\u5fc5\u9808\u3067\u3042\u308d\u3046)\n\u521d\u671f\u30ec\u30a4\u30a2\u30a6\u30c8\u3002\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u30bb\u30fc\u30d6\u30fb\u30ed\u30fc\u30c9\n\u500b\u3005\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u898b\u305f\u76ee\u3092\u5b9a\u7fa9\u3059\u308bDataTemplate\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u307e\u3044\u308a\u307e\u3059\u3002\n\n\u88dc\u52a9\u30e9\u30a4\u30d6\u30e9\u30ea\nAvalonDock\u3092\u7d20\u3067MVVM\u3067\u4f7f\u3046\u306b\u306f\u8ca0\u62c5\u304c\u91cd\u3044\u306e\u3067\u88dc\u52a9\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u3063\u305f\u3002\n\u88dc\u52a9\u30e9\u30a4\u30d6\u30e9\u30ea\u3067WorkSpace\u3001AnchorableContent\u3001DocumentContent\u306e\u304a\u6c7a\u307e\u308a\u306e\u30b3\u30fc\u30c9\u3068LayoutItem\u3068AnchorableContent\n\u3084DocumentContent\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u5236\u5fa1\u3059\u308bContentPropertyAttribute, ContentPropertyStyleSelector\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3002\nhttps://github.com/ousttrue/WpfSample/tree/master/AvalonDockUtil\n\n\u30c4\u30fc\u30eb(Anchorable)\u306e\u5b9f\u88c5\n\nxaml\n\u6700\u521d\u306f\u3001DockingManager\u3068AvalonDock\u306eAnchorable\u306e\u8868\u793a\u30fb\u975e\u8868\u793a\u5207\u308a\u66ff\u3048\u7528\u306e\u30e1\u30cb\u30e5\u30fc\u306e\u307f\u3002\n<Window x:Class=\"AvalonDockMVVMSample.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\nxmlns:i=\"http://schemas.microsoft.com/expression/2010/interactivity\" \nxmlns:ei=\"http://schemas.microsoft.com/expression/2010/interactions\"         \nxmlns:l=\"http://schemas.livet-mvvm.net/2011/wpf\"        \nxmlns:avalonDock=\"http://schemas.xceed.com/wpf/xaml/avalondock\"        \n        xmlns:vm=\"clr-namespace:UriListViewModel;assembly=UriListViewModel\"\n        xmlns:local=\"clr-namespace:AvalonDockMVVMSample\"\nxmlns:util=\"clr-namespace:AvalonDockUtil;assembly=AvalonDockUtil\"\n        Title=\"MainWindow\" Height=\"350\" Width=\"525\"\n        AllowDrop=\"True\"\n        >\n    <Window.Resources>\n        <util:ActiveDocumentConverter x:Key=\"ActiveDocumentConverter\"/>\n        <avalonDock:BoolToVisibilityConverter x:Key=\"BoolToVisibilityConverter\"/>\n    </Window.Resources>\n    <Window.DataContext>\n        <local:MainWindowViewModel />\n    </Window.DataContext>\n\n    <DockPanel>\n        <!-- itemssource\u3067\u8907\u6570\u306eToolContent\u306e\u30e1\u30cb\u30e5\u30fc\u5316 -->\n        <Menu DockPanel.Dock=\"Top\">\n            <MenuItem Header=\"\u8868\u793a\" ItemsSource=\"{Binding Tools}\">\n                <MenuItem.ItemTemplate>\n                    <DataTemplate>\n                        <MenuItem \n                            Header=\"{Binding Title}\"\n                            IsCheckable=\"True\"\n                            IsChecked=\"{Binding IsVisible, Mode=TwoWay}\" />\n                    </DataTemplate>\n                </MenuItem.ItemTemplate>\n            </MenuItem>           \n        </Menu>\n\n        <avalonDock:DockingManager x:Name=\"_dockingManager\"\n                                   DocumentsSource=\"{Binding Documents}\"\n                                   ActiveContent=\"{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}\"                              \n                                   AnchorablesSource=\"{Binding Tools}\"                                    \n                                   >\n            <avalonDock:DockingManager.LayoutItemContainerStyleSelector>\n                <!-- style setter\u3092\u751f\u6210\u3059\u308b\u30af\u30e9\u30b9 -->\n                <util:ContentPropertyStyleSelector />\n            </avalonDock:DockingManager.LayoutItemContainerStyleSelector>\n\n            <!-- \u521d\u671f\u30ec\u30a4\u30a2\u30a6\u30c8\u4e88\u5b9a\u5730 -->           \n            <avalonDock:LayoutRoot />\n\n        </avalonDock:DockingManager>\n    </DockPanel>\n</Window>\n\n\nAnchorable\n\u3068\u308a\u3042\u3048\u305a2\u7a2e\u985e\u306eAnchorable\u3092\u7528\u610f\u3002\n\nAnchorable\u95a2\u9023\n\n    public class StatusToolContent: ToolContent\n    {\n        public StatusToolContent()\n            : base(\"Status\")\n        { }\n    }\n\n    public class MessageToolContent : ToolContent\n    {\n        public MessageToolContent()\n            : base(\"Message\")\n        { }\n    }\n\n\n\n\nworkspace\n\u521d\u671f\u5316\u6642\u306bTools\u3092\u4f5c\u308b\u3002\n\nworkspace\n    public class MainWindowViewModel: AvalonDockUtil.WorkspaceBase\n    {\n        protected override void InitializeTools()\n        {\n            Tools.Add(new MessageToolContent());\n            Tools.Add(new StatusToolContent());\n        }\n    }\n\n\n\nAnchorable\u306ex\u30dc\u30bf\u30f3\u3067\u975e\u8868\u793a\u3068\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u306e\u518d\u8868\u793a\u304c\u3067\u304d\u308b\u3002\n\n\u30ec\u30a4\u30a2\u30a6\u30c8\u306eSave\u30fbLoad\u3068\u521d\u671f\u4f4d\u7f6e\u3078\u306e\u914d\u7f6e\n\u4f5c\u3089\u308c\u305f\u3075\u305f\u3064\u306eTools\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u65b9\u6cd5(\u9069\u5f53\u306aLayoutAnchorablePane\u3001\u7121\u3051\u308c\u3070\u52dd\u624b\u306b\u4f5c\u3089\u308c\u308b)\u3067\u914d\u7f6e\u3055\u308c\u3066\u3044\u305f\u3002\u3053\u308c\u3092LayoutRoot\u4e0b\u306b\u521d\u671f\u914d\u7f6e\u3092\u4f5c\u3063\u3066ContentId\u304c\u4e00\u81f4\u3059\u308b\u3068\u3053\u308d\u306b\u79fb\u52d5\u3055\u305b\u308b\u30b3\u30fc\u30c9\u3092\u4f5c\u308b\u3002\u3064\u3044\u3067\u306b\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u30fb\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306e\u547c\u3073\u51fa\u3057\u3082\u8ffd\u52a0\u3002\n\nxaml\n<!-- Window\u306e\u30a4\u30d9\u30f3\u30c8 -->\n        <i:EventTrigger EventName=\"Loaded\">\n            <l:LivetCallMethodAction MethodTarget=\"{Binding}\" MethodName=\"LoadLayout\" MethodParameter=\"{Binding ElementName=_dockingManager}\" />\n        </i:EventTrigger>\n        <i:EventTrigger EventName=\"Unloaded\">\n            <l:LivetCallMethodAction MethodTarget=\"{Binding}\" MethodName=\"SaveLayout\" MethodParameter=\"{Binding ElementName=_dockingManager}\" />\n        </i:EventTrigger>\n\n<!-- \u30e1\u30cb\u30e5\u30fc\u306b\u8ffd\u52a0 -->\n            <MenuItem Header=\"\u30ec\u30a4\u30a2\u30a6\u30c8\" >\n                <MenuItem Header=\"\u914d\u7f6e\u3092\u521d\u671f\u5316\u3059\u308b\">\n                    <i:Interaction.Triggers>\n                        <i:EventTrigger EventName=\"Click\">\n                            <l:LivetCallMethodAction MethodTarget=\"{Binding}\" MethodName=\"DefaultLayout\" MethodParameter=\"{Binding ElementName=_dockingManager}\" />\n                        </i:EventTrigger>\n                    </i:Interaction.Triggers>\n                </MenuItem>\n            </MenuItem>\n\n<!-- LayoutRoot\u3078\u306e\u521d\u671f\u914d\u7f6e\u8a2d\u5b9a -->\n            <avalonDock:LayoutRoot>\n                <avalonDock:LayoutPanel Orientation=\"Vertical\">\n                    <avalonDock:LayoutPanel Orientation=\"Horizontal\">\n                        <avalonDock:LayoutDocumentPane />\n\n                        <avalonDock:LayoutAnchorablePane DockWidth=\"150\">\n                            <avalonDock:LayoutAnchorable ContentId=\"Status\" />\n                        </avalonDock:LayoutAnchorablePane>\n                    </avalonDock:LayoutPanel>\n                    <avalonDock:LayoutAnchorablePane DockHeight=\"70\">\n                        <avalonDock:LayoutAnchorable ContentId=\"Message\" />\n                    </avalonDock:LayoutAnchorablePane>\n                </avalonDock:LayoutPanel>\n            </avalonDock:LayoutRoot>\n\n\n\n\u5b9f\u88c5\u306e\u89e3\u8aac\n\u30b3\u30fc\u30c9\u304c\u95a2\u4e0e\u3057\u306a\u3044\u65b9\u6cd5\u3067\u521d\u671f\u914d\u7f6e\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306b\u4ecb\u5165\u3059\u308b\u3053\u3068\u3067ToolContent\u304c\u76ee\u7684\u306eLayoutAnchorable\u306b\u5272\u308a\u5f53\u3066\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\u307e\u305a\u3001\u4e00\u756a\u6700\u521d\u306bavalonDock:LayoutRoot\u306e\u8a18\u8ff0\u304b\u3089\u751f\u6210\u3055\u308c\u308b\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067\u4fdd\u5b58\u3057\u3066\u3044\u308b\u3002\n\nWorkspaceBase.LoadLayout\n\n            // backup default layout\n            using (var ms = new MemoryStream())\n            {\n                var serializer = new XmlLayoutSerializer(dockManager);\n                serializer.Serialize(ms);\n                m_defaultLayout = ms.ToArray();\n            }\n\n\n\u3053\u3044\u3064\u306b\u5bfe\u3057\u3066ToolContent\u3092\u5272\u308a\u5f53\u3066\u308b\u306e\u306b\u3001\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u3002\n\nWorkspaceBase.LoadLayoutFromBytes\n\n var serializer = new XmlLayoutSerializer(dockManager);\n\n// \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\nserializer.LayoutSerializationCallback += MatchLayoutContent;\n\n    /// xml\u306e\u30ce\u30fc\u30c9\u3054\u3068\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\n    void MatchLayoutContent(object o, LayoutSerializationCallbackEventArgs e)\n        {\n            var contentId = e.Model.ContentId;\n\n            if (e.Model is LayoutAnchorable)\n            {\n                // Tool Windows\n                foreach (var tool in Tools)\n                {\n                    if (tool.ContentId == contentId)\n                    {\n// \u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u305fLayoutAnchorable\u3068ConentId\u3068\u304c\u4e00\u81f4\u3057\u305fToolContent\u3092\u5272\u308a\u5f53\u3066\u3066\u3044\u308b\n                        e.Content = tool;\n                        return;\n                    }\n                }\n\n                // Unknown\n                ErrorMessage(new Exception(\"unknown ContentID: \" + contentId));\n                return;\n            }\n\n\n\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8ffd\u52a0\n            <MenuItem Header=\"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\">\n                <MenuItem Header=\"\u65b0\u898f\"  Command=\"{Binding NewDocumentCommand}\" />\n                <MenuItem Header=\"\u958b\u304f\" Command=\"{Binding OpenDocumentCommand}\" />\n            </MenuItem>\n\n\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e2d\u8eab\u3068\u3057\u3066\u30d3\u30e5\u30fc\u30e2\u30c7\u30eb\u3092\u4e57\u305b\u308b\nAvalonDock\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30d3\u30e5\u30fc\u30e2\u30c7\u30ebDocumentContent\u306e\u4e0a\u306b\u3001\u8868\u793a\u7528DataTemplate\u7528\u306e\u30d3\u30e5\u30fc\u30e2\u30c7\u30eb\u304c\u4e57\u3063\u3066\u3044\u308b2\u968e\u5efa\u3066\u306b\u3057\u305f\u3002\u8868\u793a\u7528\u306e\u30d3\u30e5\u30fc\u30e2\u30c7\u30eb\u306fAvalonDock\u3092\u95a2\u77e5\u3057\u306a\u3044\u3002\n\nUriDocument\n\u65b0\u3057\u304fUriListDocument\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3002\n    // AvalonDock\u306eDocument\u7528\u306e\u30d3\u30e5\u30fc\u30e2\u30c7\u30eb\n    public class UriListDocument : AvalonDockUtil.DocumentContent\n    {\n        // DataTemplate\u7528\u306e\u30d3\u30e5\u30fc\u30e2\u30c7\u30eb\n        UriListViewModel.UriListViewModel m_viewModel;\n        public UriListViewModel.UriListViewModel ViewModel\n        {\n            get{\n                return m_viewModel;\n            }\n        }\n\n        // Messenger\u304c\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u308b\u524d\u306b\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u51fa\u3057\u305f\u3044\u306e\u3067workspace\u306emessenger\u3092\u5171\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u305f\n        public UriListDocument(InteractionMessenger messenger)\n        {\n            m_viewModel = new UriListViewModel.UriListViewModel(messenger);\n            m_viewModel.PropertyChanged += (o, e) =>\n            {\n                if (e.PropertyName == \"Path\")\n                {\n                    Title = System.IO.Path.GetFileName(m_viewModel.Path);\n                }\n            };\n        }\n    }\n\n    public class MainWindowViewModel : AvalonDockUtil.WorkspaceBase\n    {\n        public override AvalonDockUtil.DocumentContent NewDocument()\n        {\n            return new UriListDocument(this.Messenger);\n        }\n\n        RelayCommand m_openDocumentCommand;\n        public ICommand OpenDocumentCommand\n        {\n            get\n            {\n                if (m_openDocumentCommand == null)\n                {\n                    m_openDocumentCommand = new RelayCommand(() =>\n                    {\n                        var document = NewDocument() as UriListDocument;\n                        if (!document.ViewModel.Open())\n                        {\n                            return;\n                        }\n                        Documents.Add(document);\n                    });\n                }\n                return m_openDocumentCommand;\n            }\n        }\n     }\n\n\nDocument\u306eFilePath\u3092\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u30fb\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306b\u8ffd\u52a0\u3059\u308b\n        protected override void ModifySerializedXml(System.Xml.XmlDocument doc)\n        {\n            var nodes = doc.GetElementsByTagName(\"LayoutDocument\");\n            for (int i = 0; i < nodes.Count; ++i)\n            {\n                var node = nodes[i];\n                var contentId = node.Attributes[\"ContentId\"].Value;\n                var document = GetDocumentByContentId(contentId) as UriListDocument;\n                if (document != null && !String.IsNullOrEmpty(document.ViewModel.Path))\n                {\n                    // document\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u8ffd\u8a18\u3059\u308b\n                    var attrib = doc.CreateAttribute(\"FilePath\");\n                    attrib.Value = document.ViewModel.Path;\n                    node.Attributes.Append(attrib);\n                }\n            }\n        }\n\n        protected override void RestoreDocumentsFromBytes(Byte[] bytes)\n        {\n            // \u72ec\u81ea\u306bxml\u3092\u89e3\u6790\u3059\u308b\n            using (var stream = new MemoryStream(bytes))\n            {\n                var doc = new XmlDocument();\n                doc.Load(stream);\n                // ContentID\u304c\"Document\"\u306eID\u3092\u63a2\u3059\n                var nodes = doc.GetElementsByTagName(\"LayoutDocument\");\n                for (int i = 0; i < nodes.Count; ++i)\n                {\n                    var node = nodes[i];\n\n                    var document = GetDocumentByContentId(node.Attributes[\"ContentId\"].Value) as UriListDocument;\n                    if (document != null)\n                    {\n                        var viewModel = document.ViewModel;\n                        foreach (XmlAttribute attrib in node.Attributes)\n                        {\n                            if (attrib.Name == \"FilePath\")\n                            {\n                                viewModel.Path = attrib.Value;\n                                viewModel.Load();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n\nDocument\u5411\u3051\u306bDataTemplate\u3092\u5b9a\u7fa9\u3059\u308b\n\u30e6\u30fc\u30b6\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u306b\u5206\u3051\u305f\u3002DataContext\u306bUriDocument.ViewModel\u3092\u30bb\u30c3\u30c8\u3057\u3066AvalonDock\u306b\u4e57\u305b\u308b\u524d\u306e\u30c7\u30fc\u30bf\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u6d41\u7528\u3002\n        <DataTemplate DataType=\"{x:Type local:UriListDocument}\">\n            <local:UriList DataContext=\"{Binding ViewModel}\"/>\n        </DataTemplate>\n\n\n\n\u30c4\u30fc\u30eb\u306e\u30c7\u30fc\u30bf\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8(\u5f8c\u3067\u66f8\u304f)\n\nStatus\nManager\u306eDocuments, ActiveDocument, Tools\u3092\u30c7\u30d0\u30c3\u30b0\u8868\u793a\u3059\u308b\n\nMessage\nActive\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u3001\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u306e\u30dc\u30bf\u30f3\u3092\u5b9f\u88c5\u3059\u308b\n\n\u4e00\u5fdc\u5b8c\u6210\u3002\n\u9577\u3044\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u6210\nAvalonDockMVVMSample(exe)\n  AvalonDockUtil(WorkspaceBase, DocumentContent, ToolContent\u306a\u3069\u306e\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u3001ContentPropertyStyleSelector\u306a\u3069\u306e\u88dc\u52a9\u30af\u30e9\u30b9\u304c\u5b9a\u7fa9\u3057\u3066\u3042\u308b)\n  UriListViewModel(UriDocument\u306eViewModel\u3068\u3057\u3066\u6d41\u7528\u3057\u305f)\n\n\nAvalonDockUtil\u306f\u305d\u308c\u306a\u308a\u306b\u6c4e\u7528\u306b\u4f5c\u3063\u305f\u306e\u3067\u3053\u3044\u3064\u3092\u4f7f\u3048\u3070\u304b\u306a\u308a\u52b4\u529b\u3092\u6e1b\u3089\u305b\u308b\u3068\u601d\u3046\u3002\n\u60c5\u5831\u6e90\u3068\u3057\u3066\u306f\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u30d9\u30fc\u30b9\u306b\u3057\u305f\u672c\u5bb6\u306e\u30bd\u30fc\u30b9\u306b\u4ed8\u5c5e\u3059\u308bMVVMTestApp\u304c\u4e00\u756a\u3067\u3042\u308b\u3002\n\u5927\u304d\u304f\u5909\u3048\u305f\u3068\u3053\u308d\u306f\u3001\n\nDocument\u306eContentId\u306bFilePath\u3067\u306f\u306a\u304fGuid\u3092\u4ed8\u4e0e\u3002FilePath\u306f\u30ec\u30a4\u30a2\u30a6\u30c8\u60c5\u5831\u306b\u624b\u4f5c\u696d\u3067\u57cb\u3081\u8fbc\u3080\u65b9\u5f0f\nPanesStyleSelector\u3092ContentPropertyStyleSelector\u306b\u63db\u88c5\nPanesTemplateSelector\u3092\u3084\u3081\u3066\u5358\u306a\u308bDataTemlate\n\nhttp://www.codeproject.com/Articles/483507/AvalonDock-Tutorial-Part-Adding-a-Tool-Windo\n\u3068\u3044\u3046\u8a18\u4e8b\u3082\u3042\u3063\u305f\u304c\u9577\u3059\u304e\u308b(\u3053\u306e\u8a18\u4e8b\u3082\u9577\u3044\u304c)\u306e\u3067\u8aad\u3093\u3067\u304a\u308a\u307e\u305b\u3093(\u7d42\u76e4\u30d1\u30fc\u30c85?\u3067MVVM\u306b\u8a00\u53ca\u3057\u3066\u3044\u305f\u3088\u3046\u306a)\u3002\n[AvalonDock\u3092\u4f7f\u3063\u3066\u307f\u308b(\u975eMVVM)](http://qiita.com/ousttrue/items/823f2d3d756c1c433ce8)\u3067\nDockingManager.DocumentsSource\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\u4eca\u56de\u306f\u3001DockingManager\u306b\u30d3\u30e5\u30fc\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092Bind\u3057\u307e\u3059\u304c\u30b3\u30fc\u30c9\u91cf\u304c\u4e00\u6319\u306b\u5897\u3048\u307e\u3059\u3002\n\u88dc\u52a9\u7684\u306a\u30b3\u30fc\u30c9\u304c\u305f\u304f\u3055\u3093\u8981\u308b\u306e\u3067\u3059\u3002\n\n[\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9](https://github.com/ousttrue/WpfSample)\n\n#AvalonDock\u306e\u69cb\u9020\n* [WPF\u3067\u30c9\u30c3\u30ad\u30f3\u30b0\u30a6\u30a3\u30f3\u30c9\u30a6(AvalonDock) \u4f7f\u3044\u65b9 \u305d\u306e2 - AvalonDock\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3](http://lriki.hatenablog.com/entry/2014/12/23/215723)\n* [AvalonDock 2.0 getting started guide PART 1](https://avalondock.codeplex.com/wikipage?title=AvalonDock%202.0%20Getting%20Start%20Guide&referringTitle=Documentation)\n* <https://avalondock.codeplex.com/SourceControl/latest#Version2.0/AvalonDock.MVVMTestApp/>\n\n\u3042\u308b\u7a0b\u5ea6\u306f\u69cb\u9020\u3092\u628a\u63e1\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\nAvalonDock\u306fLayoutContent\u3092\u30ec\u30a4\u30a2\u30a6\u30c8\u3059\u308b\u306e\u304c\u76ee\u7684\u3067\u3042\u308a\u3001LayoutContent\u306b\u306fLayoutDocument(\u7de8\u96c6\u5bfe\u8c61\u306e\u30e1\u30a4\u30f3\u30a6\u30a4\u30f3\u30c9\u30a6)\u3068LayoutAnchorable(\u60c5\u5831\u8868\u793a\u306e\u30b5\u30d6\u30a6\u30a4\u30f3\u30c9\u30a6)\u306e2\u7a2e\u985e\u304c\u3042\u308b\u3002\n\u5404LayoutContent\u306bContentId\u3092\u624b\u304c\u304b\u308a\u306b\u3057\u3066ViewModel\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3089\u308c\u308b\u3002\nViewModel\u306fDockingManager\u306eDocumentSource(IEnumerable)\u3068AnchorableSource(IEnumerable)\u304b\u3089\u4f9b\u7d66\u3055\u308c\u308b\u3002\n\u30b3\u30f3\u30c6\u30f3\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30b9\u30d7\u30ea\u30c3\u30bf\u30fc\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u9818\u57df\u3092\u5206\u5272\u3057\u305f\u672b\u7aef\u306b\u30bf\u30d6\u30d1\u30cd\u30eb\u306b\u306f\u3081\u8fbc\u3080\u65b9\u5f0f\u3067\u30ec\u30a4\u30a2\u30a6\u30c8\u3059\u308b\u3002\n\n```txt\n\nDockingManager\n  RootPanel\n    LayoutPanel(\u7e26) \u30b9\u30d7\u30ea\u30c3\u30bf\u30fc\n      LayoutPanel(\u6a2a) \u30b9\u30d7\u30ea\u30c3\u30bf\u30fc\n        LayoutAnchorablePane \u30bf\u30d6\u30d1\u30cd\u30eb\n          (LayoutAnchorable ContentId)\n        LayoutDocumentPane \u6700\u4f4e\u3072\u3068\u3064\u306f\u5fc5\u8981\u3002LayoutDocument\u5c02\u7528\u306e\u30bf\u30d6\u30d1\u30cd\u30eb\n          [LayoutDocument ContentId]\n      LayoutAnchorablePane \u30bf\u30d6\u30d1\u30cd\u30eb\n        (LayoutAnchorable ContentId)\n```\n\u3068\u3044\u3046\u3053\u3068\u3067AvalonDock(MVVM)\u3092\u4f7f\u3046\u306b\u306f\u4ee5\u4e0b\u306e\u8981\u7d20\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\n\n* DockingManager\n* LayoutItem\u3068ViewModel(\u30b3\u30f3\u30c6\u30f3\u30c8)\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30d0\u30a4\u30f3\u30c9\u3059\u308bStyleSelector\n* DocumentSource\u3068AnchorableSource\u3092\u63d0\u4f9b\u3059\u308bViewModel\u305f\u308bWorkspace(\u672c\u5bb6\u306e\u30b5\u30f3\u30d7\u30ebMVVMTestApp\u306b\u6e96\u62e0\u3057\u305f\u540d\u524d)\n* \u975e\u8868\u793a\u306b\u3057\u305fAnchorable\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u30e1\u30cb\u30e5\u30fc(\u7121\u304f\u3066\u3082\u52d5\u304f\u304c\u5fc5\u9808\u3067\u3042\u308d\u3046)\n* \u521d\u671f\u30ec\u30a4\u30a2\u30a6\u30c8\u3002\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u30bb\u30fc\u30d6\u30fb\u30ed\u30fc\u30c9\n* \u500b\u3005\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u306e\u898b\u305f\u76ee\u3092\u5b9a\u7fa9\u3059\u308bDataTemplate\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u307e\u3044\u308a\u307e\u3059\u3002\n\n# \u88dc\u52a9\u30e9\u30a4\u30d6\u30e9\u30ea\nAvalonDock\u3092\u7d20\u3067MVVM\u3067\u4f7f\u3046\u306b\u306f\u8ca0\u62c5\u304c\u91cd\u3044\u306e\u3067\u88dc\u52a9\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u3063\u305f\u3002\n\u88dc\u52a9\u30e9\u30a4\u30d6\u30e9\u30ea\u3067WorkSpace\u3001AnchorableContent\u3001DocumentContent\u306e\u304a\u6c7a\u307e\u308a\u306e\u30b3\u30fc\u30c9\u3068LayoutItem\u3068AnchorableContent\n\u3084DocumentContent\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3092\u5236\u5fa1\u3059\u308bContentPropertyAttribute, ContentPropertyStyleSelector\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3002\n\nhttps://github.com/ousttrue/WpfSample/tree/master/AvalonDockUtil\n\n# \u30c4\u30fc\u30eb(Anchorable)\u306e\u5b9f\u88c5\n\n## xaml\n\u6700\u521d\u306f\u3001DockingManager\u3068AvalonDock\u306eAnchorable\u306e\u8868\u793a\u30fb\u975e\u8868\u793a\u5207\u308a\u66ff\u3048\u7528\u306e\u30e1\u30cb\u30e5\u30fc\u306e\u307f\u3002\n\n```xml\n<Window x:Class=\"AvalonDockMVVMSample.MainWindow\"\n        xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\nxmlns:i=\"http://schemas.microsoft.com/expression/2010/interactivity\" \nxmlns:ei=\"http://schemas.microsoft.com/expression/2010/interactions\"         \nxmlns:l=\"http://schemas.livet-mvvm.net/2011/wpf\"        \nxmlns:avalonDock=\"http://schemas.xceed.com/wpf/xaml/avalondock\"        \n        xmlns:vm=\"clr-namespace:UriListViewModel;assembly=UriListViewModel\"\n        xmlns:local=\"clr-namespace:AvalonDockMVVMSample\"\nxmlns:util=\"clr-namespace:AvalonDockUtil;assembly=AvalonDockUtil\"\n        Title=\"MainWindow\" Height=\"350\" Width=\"525\"\n        AllowDrop=\"True\"\n        >\n    <Window.Resources>\n        <util:ActiveDocumentConverter x:Key=\"ActiveDocumentConverter\"/>\n        <avalonDock:BoolToVisibilityConverter x:Key=\"BoolToVisibilityConverter\"/>\n    </Window.Resources>\n    <Window.DataContext>\n        <local:MainWindowViewModel />\n    </Window.DataContext>\n\n    <DockPanel>\n        <!-- itemssource\u3067\u8907\u6570\u306eToolContent\u306e\u30e1\u30cb\u30e5\u30fc\u5316 -->\n        <Menu DockPanel.Dock=\"Top\">\n            <MenuItem Header=\"\u8868\u793a\" ItemsSource=\"{Binding Tools}\">\n                <MenuItem.ItemTemplate>\n                    <DataTemplate>\n                        <MenuItem \n                            Header=\"{Binding Title}\"\n                            IsCheckable=\"True\"\n                            IsChecked=\"{Binding IsVisible, Mode=TwoWay}\" />\n                    </DataTemplate>\n                </MenuItem.ItemTemplate>\n            </MenuItem>           \n        </Menu>\n\n        <avalonDock:DockingManager x:Name=\"_dockingManager\"\n                                   DocumentsSource=\"{Binding Documents}\"\n                                   ActiveContent=\"{Binding ActiveDocument, Mode=TwoWay, Converter={StaticResource ActiveDocumentConverter}}\"                              \n                                   AnchorablesSource=\"{Binding Tools}\"                                    \n                                   >\n            <avalonDock:DockingManager.LayoutItemContainerStyleSelector>\n                <!-- style setter\u3092\u751f\u6210\u3059\u308b\u30af\u30e9\u30b9 -->\n                <util:ContentPropertyStyleSelector />\n            </avalonDock:DockingManager.LayoutItemContainerStyleSelector>\n\n            <!-- \u521d\u671f\u30ec\u30a4\u30a2\u30a6\u30c8\u4e88\u5b9a\u5730 -->           \n            <avalonDock:LayoutRoot />\n\n        </avalonDock:DockingManager>\n    </DockPanel>\n</Window>\n```\n\n## Anchorable\n\u3068\u308a\u3042\u3048\u305a2\u7a2e\u985e\u306eAnchorable\u3092\u7528\u610f\u3002\n\n```csharp:Anchorable\u95a2\u9023\n\n    public class StatusToolContent: ToolContent\n    {\n        public StatusToolContent()\n            : base(\"Status\")\n        { }\n    }\n\n    public class MessageToolContent : ToolContent\n    {\n        public MessageToolContent()\n            : base(\"Message\")\n        { }\n    }\n\n```\n\n## workspace\n\u521d\u671f\u5316\u6642\u306bTools\u3092\u4f5c\u308b\u3002\n\n```csharp:workspace\n    public class MainWindowViewModel: AvalonDockUtil.WorkspaceBase\n    {\n        protected override void InitializeTools()\n        {\n            Tools.Add(new MessageToolContent());\n            Tools.Add(new StatusToolContent());\n        }\n    }\n```\n\n![ss01.png](https://qiita-image-store.s3.amazonaws.com/0/59664/23fbe725-7484-fcb9-7bbb-3ba72cb2f24a.png)\n\nAnchorable\u306ex\u30dc\u30bf\u30f3\u3067\u975e\u8868\u793a\u3068\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u306e\u518d\u8868\u793a\u304c\u3067\u304d\u308b\u3002\n\n# \u30ec\u30a4\u30a2\u30a6\u30c8\u306eSave\u30fbLoad\u3068\u521d\u671f\u4f4d\u7f6e\u3078\u306e\u914d\u7f6e\n\n\u4f5c\u3089\u308c\u305f\u3075\u305f\u3064\u306eTools\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u65b9\u6cd5(\u9069\u5f53\u306aLayoutAnchorablePane\u3001\u7121\u3051\u308c\u3070\u52dd\u624b\u306b\u4f5c\u3089\u308c\u308b)\u3067\u914d\u7f6e\u3055\u308c\u3066\u3044\u305f\u3002\u3053\u308c\u3092LayoutRoot\u4e0b\u306b\u521d\u671f\u914d\u7f6e\u3092\u4f5c\u3063\u3066ContentId\u304c\u4e00\u81f4\u3059\u308b\u3068\u3053\u308d\u306b\u79fb\u52d5\u3055\u305b\u308b\u30b3\u30fc\u30c9\u3092\u4f5c\u308b\u3002\u3064\u3044\u3067\u306b\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u30fb\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306e\u547c\u3073\u51fa\u3057\u3082\u8ffd\u52a0\u3002\n\n```xml:xaml\n<!-- Window\u306e\u30a4\u30d9\u30f3\u30c8 -->\n        <i:EventTrigger EventName=\"Loaded\">\n            <l:LivetCallMethodAction MethodTarget=\"{Binding}\" MethodName=\"LoadLayout\" MethodParameter=\"{Binding ElementName=_dockingManager}\" />\n        </i:EventTrigger>\n        <i:EventTrigger EventName=\"Unloaded\">\n            <l:LivetCallMethodAction MethodTarget=\"{Binding}\" MethodName=\"SaveLayout\" MethodParameter=\"{Binding ElementName=_dockingManager}\" />\n        </i:EventTrigger>\n\n<!-- \u30e1\u30cb\u30e5\u30fc\u306b\u8ffd\u52a0 -->\n            <MenuItem Header=\"\u30ec\u30a4\u30a2\u30a6\u30c8\" >\n                <MenuItem Header=\"\u914d\u7f6e\u3092\u521d\u671f\u5316\u3059\u308b\">\n                    <i:Interaction.Triggers>\n                        <i:EventTrigger EventName=\"Click\">\n                            <l:LivetCallMethodAction MethodTarget=\"{Binding}\" MethodName=\"DefaultLayout\" MethodParameter=\"{Binding ElementName=_dockingManager}\" />\n                        </i:EventTrigger>\n                    </i:Interaction.Triggers>\n                </MenuItem>\n            </MenuItem>\n\n<!-- LayoutRoot\u3078\u306e\u521d\u671f\u914d\u7f6e\u8a2d\u5b9a -->\n            <avalonDock:LayoutRoot>\n                <avalonDock:LayoutPanel Orientation=\"Vertical\">\n                    <avalonDock:LayoutPanel Orientation=\"Horizontal\">\n                        <avalonDock:LayoutDocumentPane />\n                        \n                        <avalonDock:LayoutAnchorablePane DockWidth=\"150\">\n                            <avalonDock:LayoutAnchorable ContentId=\"Status\" />\n                        </avalonDock:LayoutAnchorablePane>\n                    </avalonDock:LayoutPanel>\n                    <avalonDock:LayoutAnchorablePane DockHeight=\"70\">\n                        <avalonDock:LayoutAnchorable ContentId=\"Message\" />\n                    </avalonDock:LayoutAnchorablePane>\n                </avalonDock:LayoutPanel>\n            </avalonDock:LayoutRoot>\n```\n\n## \u5b9f\u88c5\u306e\u89e3\u8aac\n\u30b3\u30fc\u30c9\u304c\u95a2\u4e0e\u3057\u306a\u3044\u65b9\u6cd5\u3067\u521d\u671f\u914d\u7f6e\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306b\u4ecb\u5165\u3059\u308b\u3053\u3068\u3067ToolContent\u304c\u76ee\u7684\u306eLayoutAnchorable\u306b\u5272\u308a\u5f53\u3066\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\u307e\u305a\u3001\u4e00\u756a\u6700\u521d\u306bavalonDock:LayoutRoot\u306e\u8a18\u8ff0\u304b\u3089\u751f\u6210\u3055\u308c\u308b\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067\u4fdd\u5b58\u3057\u3066\u3044\u308b\u3002\n\n```csharp:WorkspaceBase.LoadLayout\n\n            // backup default layout\n            using (var ms = new MemoryStream())\n            {\n                var serializer = new XmlLayoutSerializer(dockManager);\n                serializer.Serialize(ms);\n                m_defaultLayout = ms.ToArray();\n            }\n```\n\n\u3053\u3044\u3064\u306b\u5bfe\u3057\u3066ToolContent\u3092\u5272\u308a\u5f53\u3066\u308b\u306e\u306b\u3001\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u6642\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u3002\n\n```csharp:WorkspaceBase.LoadLayoutFromBytes\n\n var serializer = new XmlLayoutSerializer(dockManager);\n\n// \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\nserializer.LayoutSerializationCallback += MatchLayoutContent;\n\n    /// xml\u306e\u30ce\u30fc\u30c9\u3054\u3068\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\n    void MatchLayoutContent(object o, LayoutSerializationCallbackEventArgs e)\n        {\n            var contentId = e.Model.ContentId;\n\n            if (e.Model is LayoutAnchorable)\n            {\n                // Tool Windows\n                foreach (var tool in Tools)\n                {\n                    if (tool.ContentId == contentId)\n                    {\n// \u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3055\u308c\u305fLayoutAnchorable\u3068ConentId\u3068\u304c\u4e00\u81f4\u3057\u305fToolContent\u3092\u5272\u308a\u5f53\u3066\u3066\u3044\u308b\n                        e.Content = tool;\n                        return;\n                    }\n                }\n\n                // Unknown\n                ErrorMessage(new Exception(\"unknown ContentID: \" + contentId));\n                return;\n            }\n\n```\n\n#\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8ffd\u52a0\n\n```xml\n            <MenuItem Header=\"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\">\n                <MenuItem Header=\"\u65b0\u898f\"  Command=\"{Binding NewDocumentCommand}\" />\n                <MenuItem Header=\"\u958b\u304f\" Command=\"{Binding OpenDocumentCommand}\" />\n            </MenuItem>\n```\n\n![ss02.png](https://qiita-image-store.s3.amazonaws.com/0/59664/be732f16-a4af-6cbc-84c4-e13287e3fe5c.png)\n\n\n#\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4e2d\u8eab\u3068\u3057\u3066\u30d3\u30e5\u30fc\u30e2\u30c7\u30eb\u3092\u4e57\u305b\u308b\nAvalonDock\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u30d3\u30e5\u30fc\u30e2\u30c7\u30ebDocumentContent\u306e\u4e0a\u306b\u3001\u8868\u793a\u7528DataTemplate\u7528\u306e\u30d3\u30e5\u30fc\u30e2\u30c7\u30eb\u304c\u4e57\u3063\u3066\u3044\u308b2\u968e\u5efa\u3066\u306b\u3057\u305f\u3002\u8868\u793a\u7528\u306e\u30d3\u30e5\u30fc\u30e2\u30c7\u30eb\u306fAvalonDock\u3092\u95a2\u77e5\u3057\u306a\u3044\u3002\n\n##UriDocument\n\u65b0\u3057\u304fUriListDocument\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3002\n\n```csharp\n    // AvalonDock\u306eDocument\u7528\u306e\u30d3\u30e5\u30fc\u30e2\u30c7\u30eb\n    public class UriListDocument : AvalonDockUtil.DocumentContent\n    {\n        // DataTemplate\u7528\u306e\u30d3\u30e5\u30fc\u30e2\u30c7\u30eb\n        UriListViewModel.UriListViewModel m_viewModel;\n        public UriListViewModel.UriListViewModel ViewModel\n        {\n            get{\n                return m_viewModel;\n            }\n        }\n\n        // Messenger\u304c\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u308b\u524d\u306b\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u51fa\u3057\u305f\u3044\u306e\u3067workspace\u306emessenger\u3092\u5171\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u305f\n        public UriListDocument(InteractionMessenger messenger)\n        {\n            m_viewModel = new UriListViewModel.UriListViewModel(messenger);\n            m_viewModel.PropertyChanged += (o, e) =>\n            {\n                if (e.PropertyName == \"Path\")\n                {\n                    Title = System.IO.Path.GetFileName(m_viewModel.Path);\n                }\n            };\n        }\n    }\n\n    public class MainWindowViewModel : AvalonDockUtil.WorkspaceBase\n    {\n        public override AvalonDockUtil.DocumentContent NewDocument()\n        {\n            return new UriListDocument(this.Messenger);\n        }\n\n        RelayCommand m_openDocumentCommand;\n        public ICommand OpenDocumentCommand\n        {\n            get\n            {\n                if (m_openDocumentCommand == null)\n                {\n                    m_openDocumentCommand = new RelayCommand(() =>\n                    {\n                        var document = NewDocument() as UriListDocument;\n                        if (!document.ViewModel.Open())\n                        {\n                            return;\n                        }\n                        Documents.Add(document);\n                    });\n                }\n                return m_openDocumentCommand;\n            }\n        }\n     }\n```\n\n## Document\u306eFilePath\u3092\u30ec\u30a4\u30a2\u30a6\u30c8\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u30fb\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306b\u8ffd\u52a0\u3059\u308b\n\n```csharp\n        protected override void ModifySerializedXml(System.Xml.XmlDocument doc)\n        {\n            var nodes = doc.GetElementsByTagName(\"LayoutDocument\");\n            for (int i = 0; i < nodes.Count; ++i)\n            {\n                var node = nodes[i];\n                var contentId = node.Attributes[\"ContentId\"].Value;\n                var document = GetDocumentByContentId(contentId) as UriListDocument;\n                if (document != null && !String.IsNullOrEmpty(document.ViewModel.Path))\n                {\n                    // document\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u8ffd\u8a18\u3059\u308b\n                    var attrib = doc.CreateAttribute(\"FilePath\");\n                    attrib.Value = document.ViewModel.Path;\n                    node.Attributes.Append(attrib);\n                }\n            }\n        }\n\n        protected override void RestoreDocumentsFromBytes(Byte[] bytes)\n        {\n            // \u72ec\u81ea\u306bxml\u3092\u89e3\u6790\u3059\u308b\n            using (var stream = new MemoryStream(bytes))\n            {\n                var doc = new XmlDocument();\n                doc.Load(stream);\n                // ContentID\u304c\"Document\"\u306eID\u3092\u63a2\u3059\n                var nodes = doc.GetElementsByTagName(\"LayoutDocument\");\n                for (int i = 0; i < nodes.Count; ++i)\n                {\n                    var node = nodes[i];\n\n                    var document = GetDocumentByContentId(node.Attributes[\"ContentId\"].Value) as UriListDocument;\n                    if (document != null)\n                    {\n                        var viewModel = document.ViewModel;\n                        foreach (XmlAttribute attrib in node.Attributes)\n                        {\n                            if (attrib.Name == \"FilePath\")\n                            {\n                                viewModel.Path = attrib.Value;\n                                viewModel.Load();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n```\n\n## Document\u5411\u3051\u306bDataTemplate\u3092\u5b9a\u7fa9\u3059\u308b\n\n\u30e6\u30fc\u30b6\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u306b\u5206\u3051\u305f\u3002DataContext\u306bUriDocument.ViewModel\u3092\u30bb\u30c3\u30c8\u3057\u3066AvalonDock\u306b\u4e57\u305b\u308b\u524d\u306e\u30c7\u30fc\u30bf\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u6d41\u7528\u3002\n\n```xml\n        <DataTemplate DataType=\"{x:Type local:UriListDocument}\">\n            <local:UriList DataContext=\"{Binding ViewModel}\"/>\n        </DataTemplate>\n```\n![ss03.png](https://qiita-image-store.s3.amazonaws.com/0/59664/fc3852f1-4e03-2f3e-2fcf-595bd7a0c781.png)\n\n#\u30c4\u30fc\u30eb\u306e\u30c7\u30fc\u30bf\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8(\u5f8c\u3067\u66f8\u304f)\n\n## Status\nManager\u306eDocuments, ActiveDocument, Tools\u3092\u30c7\u30d0\u30c3\u30b0\u8868\u793a\u3059\u308b\n\n## Message\nActive\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u3001\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u306e\u30dc\u30bf\u30f3\u3092\u5b9f\u88c5\u3059\u308b\n\n# \u4e00\u5fdc\u5b8c\u6210\u3002\n\u9577\u3044\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n```txt:\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u6210\nAvalonDockMVVMSample(exe)\n  AvalonDockUtil(WorkspaceBase, DocumentContent, ToolContent\u306a\u3069\u306e\u30d9\u30fc\u30b9\u30af\u30e9\u30b9\u3001ContentPropertyStyleSelector\u306a\u3069\u306e\u88dc\u52a9\u30af\u30e9\u30b9\u304c\u5b9a\u7fa9\u3057\u3066\u3042\u308b)\n  UriListViewModel(UriDocument\u306eViewModel\u3068\u3057\u3066\u6d41\u7528\u3057\u305f)\n```\n\nAvalonDockUtil\u306f\u305d\u308c\u306a\u308a\u306b\u6c4e\u7528\u306b\u4f5c\u3063\u305f\u306e\u3067\u3053\u3044\u3064\u3092\u4f7f\u3048\u3070\u304b\u306a\u308a\u52b4\u529b\u3092\u6e1b\u3089\u305b\u308b\u3068\u601d\u3046\u3002\n\u60c5\u5831\u6e90\u3068\u3057\u3066\u306f\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u30d9\u30fc\u30b9\u306b\u3057\u305f\u672c\u5bb6\u306e\u30bd\u30fc\u30b9\u306b\u4ed8\u5c5e\u3059\u308bMVVMTestApp\u304c\u4e00\u756a\u3067\u3042\u308b\u3002\n\u5927\u304d\u304f\u5909\u3048\u305f\u3068\u3053\u308d\u306f\u3001\n\n* Document\u306eContentId\u306bFilePath\u3067\u306f\u306a\u304fGuid\u3092\u4ed8\u4e0e\u3002FilePath\u306f\u30ec\u30a4\u30a2\u30a6\u30c8\u60c5\u5831\u306b\u624b\u4f5c\u696d\u3067\u57cb\u3081\u8fbc\u3080\u65b9\u5f0f\n* PanesStyleSelector\u3092ContentPropertyStyleSelector\u306b\u63db\u88c5\n* PanesTemplateSelector\u3092\u3084\u3081\u3066\u5358\u306a\u308bDataTemlate\n\n<http://www.codeproject.com/Articles/483507/AvalonDock-Tutorial-Part-Adding-a-Tool-Windo>\n\u3068\u3044\u3046\u8a18\u4e8b\u3082\u3042\u3063\u305f\u304c\u9577\u3059\u304e\u308b(\u3053\u306e\u8a18\u4e8b\u3082\u9577\u3044\u304c)\u306e\u3067\u8aad\u3093\u3067\u304a\u308a\u307e\u305b\u3093(\u7d42\u76e4\u30d1\u30fc\u30c85?\u3067MVVM\u306b\u8a00\u53ca\u3057\u3066\u3044\u305f\u3088\u3046\u306a)\u3002\n"}