{"context": "\n\n\u76ee\u6b21\nSwift\u3067Realm\u3092\u4f7f\u3046\u6642\u306eTips \u307e\u3048\u304c\u304d\nSwift\u3067Realm\u3092\u4f7f\u3046\u6642\u306eTips(1) \u30a2\u30af\u30bb\u30b5\u3068\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u7de8\nSwift\u3067Realm\u3092\u4f7f\u3046\u6642\u306eTips(2) \u751f\u6210\u3068\u30aa\u30fc\u30c8\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u7de8\nSwift\u3067Realm\u3092\u4f7f\u3046\u6642\u306eTips(3) NSPredicate\u7de8\n\nNSPredicate\u306b\u3064\u3044\u3066\nswift\u3092\u4f7f\u3063\u305fiOS\u958b\u767a\u306b\u3066 Realm \u3092\u6271\u3046\u6642\u306b\u3088\u304f\u4f7f\u7528\u3059\u308b\u306e\u304c\nNSPredicate \u30af\u30e9\u30b9\u3067\u3059\n\u82f1\u8a9e\u3067\u300cpredicate\u300d\u3068\u306f\u300c\u8ff0\u8a9e\u300d\u3068\u3044\u3046\u610f\u5473\u3089\u3057\u3044\u3067\u3059\u304c\nSQL\u69cb\u6587\u3067\u3044\u3046\u3068\u3053\u308d\u306e WHERE\u6587 \u3068\u30cb\u30a2\u30ea\u30fc\u30a4\u30b3\u30fc\u30eb\u3068\u8003\u3048\u3066\u76f8\u9055\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\n\u3067\u3059\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u300cNSPredicate = \u6761\u4ef6\u300d\u3068\u3044\u3046\u8a00\u8449\u3092\u4f7f\u3063\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\n\u3053\u306e\u300c\u6761\u4ef6\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001Realm \u306b\u554f\u3044\u5408\u308f\u305b\u3092\u884c\u3046\u611f\u3058\u3067\u3059\u306d\n\nNSPredicate\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u62e1\u5f35\u3059\u308b\nNSPredicate \u306f\u6a19\u6e96\u3067\u3044\u304f\u3064\u304b\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u6301\u3063\u3066\u3044\u307e\u3059\nRealm\u306eNSPredicate\u30c1\u30fc\u30c8\u30b7\u30fc\u30c8\u3092\u5143\u306b\n\u4e0b\u8a18\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u306b\u6761\u4ef6\u6587\u3092\u7a81\u3063\u8fbc\u3080\u3068\u3044\u3046\u3084\u308a\u65b9\u304c\u4e00\u822c\u7684\u3067\u3059\npublic /*not inherited*/ init(format predicateFormat: String, argumentArray arguments: [AnyObject]?)\n\n\u305f\u3068\u3048\u3070\u3053\u3093\u306a\u611f\u3058\nlet predicate = NSPredicate(format: \"name = %@\", argumentArray: [\"Tom\"])\n\n\u3053\u308c\u3092\u3001\u3082\u3057SQL\u6587\u3067\u8868\u73fe\u3059\u308b\u3068\u3059\u308c\u3070\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u306d\nWHERE name = 'Tom'\n\n\u305f\u3060\u3001\u300c\u6587\u5b57\u5217\u3092\u5e73\u6587\u3067\u6253\u3064\u306e?\u300d\u3063\u3066\u611f\u3058\u304c\u3042\u308a\u307e\u3059\n\u306a\u3093\u3068\u306a\u304f\u30a4\u30b1\u3066\u306a\u3044\u611f\u3058\u304c\u3057\u3066\u3057\u307e\u3044\u307e\u3059\n\u306a\u306e\u3067\u3001\u81ea\u5206\u306f NSPredicate \u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u62e1\u5f35\u3059\u308b\u624b\u3092\u3088\u304f\u4f7f\u3044\u307e\u3059\n\nNSPredicate+Initializers.swift\npublic extension NSPredicate {\n\n    private convenience init(expression property: String, _ operation: String, _ value: AnyObject) {\n        self.init(format: \"\\(property) \\(operation) %@\", argumentArray: [value])\n    }\n}\n\n\n\u307e\u305a private \u306a\u30b3\u30f3\u30d3\u30cb\u30a8\u30f3\u30b9\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u7528\u610f\u3057\u307e\u3057\u305f\n\u3067\u3001\u3053\u308c\u3092\u5143\u306b\u3055\u3089\u306b\u62e1\u5f35\u3057\u307e\u3059\n\nNSPredicate+Initializers.swift\npublic extension NSPredicate {\n\n    public convenience init(_ property: String, equal value: AnyObject) {\n        self.init(expression: property, \"=\", value)\n    }\n\n    public convenience init(_ property: String, notEqual value: AnyObject) {\n        self.init(expression: property, \"!=\", value)\n    }\n\n    public convenience init(_ property: String, equalOrGreaterThan value: AnyObject) {\n        self.init(expression: property, \">=\", value)\n    }\n\n    public convenience init(_ property: String, equalOrLessThan value: AnyObject) {\n        self.init(expression: property, \"<=\", value)\n    }\n\n    public convenience init(_ property: String, greaterThan value: AnyObject) {\n        self.init(expression: property, \">\", value)\n    }\n\n    public convenience init(_ property: String, lessThan value: AnyObject) {\n        self.init(expression: property, \"<\", value)\n    }\n}\n\n\n\u3053\u308c\u3060\u3051\u7528\u610f\u3059\u308b\u306e\u306f\u9762\u5012\u304f\u3055\u3044\u3082\u3093\u3067\u3059\u304c\n\u3053\u308c\u306b\u3066\u4f7f\u3046\u3068\u304d\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u308a\u307e\u3059\n// Tom\u3067\u3042\u308b\nlet predicate = NSPredicate(\"name\", equal: \"Tom\")\n\n// Tom\u3058\u3083\u306a\u3041\u301c\u3044\nlet predicate = NSPredicate(\"name\", notEqual: \"Tom\")\n\n\n\u6587\u5b57\u5217\u691c\u7d22\nRealm \u306f\u5f53\u7136\u6587\u5b57\u5217\u3092\u691c\u7d22\u3059\u308b\u80fd\u529b\u3082\u3042\u308a\u307e\u3059\n\u4e00\u822c\u7684\u306aSQL\u3067\u306f\u305d\u3093\u306a\u6642\u306f LIKE\u53e5 \u3092\u4f7f\u3046\u308f\u3051\u3067\u3059\u304c\nRealm \u3067\u306f LIKE \u306f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u307e\u305b\u3093 (\u306a\u3093\u3067?)\n\u4ee3\u308f\u308a\u306b\u4f55\u7a2e\u985e\u304b\u306e\u4e88\u7d04\u8a9e\u304c\u3042\u308a\u307e\u3059\n\nNSPredicate+Initializers.swift\npublic extension NSPredicate {\n    // \u524d\u5f8c\u65b9\u4e00\u81f4\u691c\u7d22(\u3044\u308f\u3086\u308b\u3001\u3042\u3044\u307e\u3044\u691c\u7d22)\n    public convenience init(_ property: String, contains q: String) {\n        self.init(format: \"\\(property) CONTAINS '\\(q)'\")\n    }\n\n    // \u524d\u65b9\u4e00\u81f4\u691c\u7d22\n    public convenience init(_ property: String, beginsWith q: String) {\n        self.init(format: \"\\(property) BEGINSWITH '\\(q)'\")\n    }\n\n    // \u5f8c\u65b9\u4e00\u81f4\u691c\u7d22\n    public convenience init(_ property: String, endsWith q: String) {\n        self.init(format: \"\\(property) ENDSWITH '\\(q)'\")\n    }\n}\n\n\n\u3053\u3053\u307e\u3067\u7528\u610f\u3057\u3066\u3001\u3044\u3056\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u554f\u984c\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3044\u307e\u3059\n\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3068\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\u3092\u542b\u3093\u3060\u6587\u5b57\u5217\u3092\u6e21\u3059\u3068\n\u30a2\u30d7\u30ea\u304c\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u306e\u3067\u3059\n\u306a\u3093\u3060\u304b \"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3042\u308b\u3042\u308b\" \u3067\u3059\u306d\n\u3061\u3083\u3093\u3068\u30a8\u30b9\u30b1\u30fc\u30d7\u3092\u3057\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u61f8\u547d\u306a\u3088\u3046\u3067\u3059\n\u306a\u306e\u3067\u3001\u4eca\u5ea6\u306f\u6587\u5b57\u5217\u306b\u5bfe\u3057\u3066\u62e1\u5f35\u3092\u884c\u3044\u307e\u3059\n\nString+Realm.swift\npublic extension String {\n\n    /// Realm\u7528\u306b\u30a8\u30b9\u30b1\u30fc\u30d7\u3057\u305f\u6587\u5b57\u5217\n    public var realmEscaped: String {\n        let reps = [\n            \"\\\\\" : \"\\\\\\\\\",\n            \"'\"  : \"\\\\'\",\n            ]\n        var ret = self\n        for rep in reps {\n            ret = self.stringByReplacingOccurrencesOfString(rep.0, withString: rep.1)\n        }\n        return ret\n    }\n}\n\n\n\u3053\u308c\u3067\n// Tom\u3063\u3066\u6587\u5b57\u304c\u3069\u3053\u304b\u306b\u3042\u308b\u304b\u306a\u3041\u30fc?\nlet predicate = NSPredicate(\"name\", contains: \"Tom\")\n\n// Tom's Shop\u3063\u3066\u6587\u5b57\u304c\u3069\u3053\u304b\u306b\u3042\u308b\u304b\u306a\u3041\u30fc?\nlet predicate = NSPredicate(\"name\", contains: \"Tom's Shop\".realmEscaped)\n\n\u6587\u5b57\u5217\u691c\u7d22\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\n\n\u305d\u306e\u4ed6\u306e\u691c\u7d22\n\nIN\u53e5\nSQL\u3067\u3088\u304f\u3042\u308b IN\u53e5 \u3082 Realm \u306b\u306f\u3042\u308a\u307e\u3059\nIN\u53e5 \u306e\u5834\u5408\u306f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u914d\u5217\u3092\u914d\u5217\u306b\u3057\u3066\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\u5f53\u305f\u308a\u524d\u3068\u3044\u3048\u3070\u5f53\u305f\u308a\u524d\u306a\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u304c\u610f\u5916\u3068\u30df\u30b9\u308a\u3084\u3059\u3044\u3067\u3059\n\u306a\u306e\u3067\u3001\u3053\u308c\u3082\u5206\u304b\u308a\u3084\u3059\u304f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30e9\u30c3\u30d7\u3057\u3066\u304a\u304f\u306e\u304c\u3088\u3044\u304b\u3068\u601d\u3044\u307e\u3059\n\nNSPredicate+Initializers.swift\n    public convenience init(_ property: String, valuesIn values: [AnyObject]) {\n        self.init(format: \"\\(property) IN %@\", argumentArray: [values])\n    }\n\n\n\u3053\u3046\u3057\u3066\u304a\u3051\u3070\nlet cities = [\"Tokyo\", \"Osaka\", \"Nagoya\"]\nlet predicate = NSPredicate(\"city\", valuesIn: cities)\n\n\u3053\u306e\u3088\u3046\u306b\u76f4\u611f\u7684\u306b\n\nBETWEEN\u53e5\nBETWEEN\u53e5 \u3082 Realm \u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u307e\u3059\nRealm \u306e BETWEEN\u53e5 \u306e\u4f5c\u6cd5\u306f\u300c\u30d6\u30ec\u30b9\u3067\u56f2\u3080\u300d\u3068\u3044\u3046\u3053\u3068\u306e\u3088\u3046\u3067\u3059\u304c\n\u3053\u308c\u3082\u5fd8\u308c\u304c\u3061\u3068\u3044\u3046\u304b\u9593\u9055\u3044\u3084\u3059\u3044\u306e\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30e9\u30c3\u30d7\u3057\u3066\u304a\u304f\u306e\u304c\u3088\u3044\u304b\u3068\u601d\u3044\u307e\u3059\n\nNSPredicate+Initializers.swift\n    public convenience init(_ property: String, between min: AnyObject, to max: AnyObject) {\n        self.init(format: \"\\(property) BETWEEN {%@, %@}\", argumentArray: [min, max])\n    }\n\n\nInt \u3082 Float \u3082\u305d\u306e\u4ed6\u3082\u5438\u53ce\u3067\u304d\u308b\u3088\u3046\u306b\u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u3092 AnyObject \u306b\u3057\u3066\u3044\u307e\u3059\u304c\n\u300c\u6574\u6570\u3057\u304b\u4f7f\u308f\u306d\u30fc\u3088\u300d\u3063\u3066\u65b9\u306a\u3089\u5f15\u6570\u306e\u578b\u3092 Int \u3068\u304b\u306b\u3057\u3066\u3082\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u6587\u6cd5\u4f5c\u6cd5\u3092\u899a\u3048\u306a\u304f\u3066\u3082\u76f4\u611f\u7684\u306b\u306a\u308a\u307e\u3057\u305f\n// \u5e74\u9f62\u304c18\u6b73\u304b\u308940\u6b73\u307e\u3067\nlet predicate = NSPredicate(\"age\", between: 18, to: 40)\n\n\n\u65e5\u4ed8\u306eFromTo\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u3046\u30a2\u30d7\u30ea\u3067\u3088\u304f\u51fa\u3066\u304f\u308b\u306e\u306f\u3001\n\u300c\u3044\u3064\u304b\u3089\u3044\u3064\u307e\u3067\u300d\u3068\u3044\u3046\u65e5\u4ed8\u7bc4\u56f2\u3092\u6307\u5b9a\u3057\u3066\u306e\u691c\u7d22\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\n\u300c\u3044\u3064\u304b\u3089\u300d\u3060\u3051\u306e\u691c\u7d22\u3082\u3001\u300c\u3044\u3064\u307e\u3067\u300d\u3060\u3051\u306e\u691c\u7d22\u3082\u3001\u305d\u306e\u4e21\u65b9\u3082\n\u3072\u3068\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3067\u304d\u308b\u3068\u3042\u308a\u304c\u305f\u3044\u306a\u3041\u3068\u3044\u3046\u3053\u3068\u3067\u3001\nBETWEEN \u306b\u306f\u305b\u305a\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3001\u3061\u3087\u3063\u3068\u9577\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u3042\u3044\u306a\u308a\u307e\u3057\u305f\n\nNSPredicate+Initializers.swift\n    public convenience init(_ property: String, fromDate: NSDate?, toDate: NSDate?) {\n        var format = \"\", args = [AnyObject]()\n        if let from = fromDate {\n            format += \"\\(property) >= %@\"\n            args.append(from)\n        }\n        if let to = toDate {\n            if !format.isEmpty {\n                format += \" AND \"\n            }\n            format += \"\\(property) <= %@\"\n            args.append(to)\n        }\n        if !args.isEmpty {\n            self.init(format: format, argumentArray: args)\n        } else {\n            self.init(value: true)\n        }\n    }\n\n\n// \u671f\u9650\u65e5\u304c\u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u307e\u3067\u306e\u30c7\u30fc\u30bf\u3092\u691c\u7d22\nlet date: NSDate = /* NSDate\u3092\u4f5c\u308b\u51e6\u7406(\u5272\u611b) */\nlet predicate = NSPredicate(\"expiredDate\", fromDate: nil, toDate: date)\n\n// \u8cfc\u5165\u65e5\u304c\u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u691c\u7d22\nlet date: NSDate = /* NSDate\u3092\u4f5c\u308b\u51e6\u7406(\u5272\u611b) */\nlet predicate = NSPredicate(\"purchasedDate\", fromDate: date, toDate: nil)\n\n// \u4e88\u7d04\u65e5\u304c\u6307\u5b9a\u3057\u305f\u65e5\u4ed81\u304b\u3089\u65e5\u4ed82\u307e\u3067\u306e\u30c7\u30fc\u30bf\u3092\u691c\u7d22\nlet date1: NSDate = /* NSDate\u3092\u4f5c\u308b\u51e6\u7406(\u5272\u611b) */\nlet date2: NSDate = /* NSDate\u3092\u4f5c\u308b\u51e6\u7406(\u5272\u611b) */\nlet predicate = NSPredicate(\"reservedDate\", fromDate: date1, toDate: date2)\n\n\nID\u691c\u7d22\n\u3053\u3053\u307e\u3067\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u306f\u3001\u30c1\u30fc\u30c8\u30c1\u30e3\u30fc\u30c8\u3092\u5143\u306b\n\u6a19\u6e96\u7684\u306a\u65b9\u6cd5\u3092\u30e9\u30c3\u30d7\u3059\u308b\u3082\u306e\u3067\u3057\u305f\n\u3053\u3053\u3067\u306f\u524d\u56de\u307e\u3067\u306b\u4f5c\u3063\u305f NBRealmEntity \u30af\u30e9\u30b9\u306b\u7279\u5316\u3057\u305f\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u7528\u610f\u3057\u307e\u3059\n\u4e3b\u30ad\u30fc\u3067\u3042\u308bid\u3092\u691c\u7d22\u6761\u4ef6\u306b\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u8272\u3005\u3068\u4fbf\u5229\u3067\u3059\n\nNSPredicate+Initializers.swift\npublic extension NSPredicate {\n\n    public convenience init(ids: [Int64]) {\n        let arr = ids.map { NSNumber(longLong: $0) }\n        self.init(format: \"\\(NBRealmEntity.IDKey) IN %@\", argumentArray: [arr])\n    }\n\n    public convenience init(id: Int64) {\n        self.init(format: \"\\(NBRealmEntity.IDKey) = %@\", argumentArray: [NSNumber(longLong: id)])\n    }\n}\n\n\nAnyObject \u306b\u306f Int64 \u3092\u305d\u306e\u307e\u307e\u3064\u3063\u3053\u3081\u306a\u3044\u306e\u3067\nNSNumber \u306b\u5909\u63db\u3057\u3066\u6271\u3044\u307e\u3059\n\u305d\u3093\u306a\u5909\u63db\u51e6\u7406\u3092\u6bce\u56de\u3084\u3063\u3066\u3089\u308c\u306a\u3044\u306e\u3067\n\u3053\u306e\u3088\u3046\u306a\u30b3\u30f3\u30d3\u30cb\u30a8\u30f3\u30b9\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u306e\u304c\u3044\u3044\u3067\u3059\u306d\n// ID=32\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\nlet predicate = NSPredicate(id: 32)\n\nlet predicate = NSPredicate(ids: [12, 23, 27, 39])\n\n\n\u6761\u4ef6\u3092\u7d50\u5408\u3059\u308b\nSQL\u306e WHERE\u6587 \u306f\u3001\u3072\u3068\u3064\u306e\u6761\u4ef6\u3060\u3051\u3067\u53ce\u307e\u308b\u3053\u3068\u306f\u3001\u306a\u304b\u306a\u304b\u7121\u3044\u3053\u3068\u3067\u3059\n\u305f\u3044\u3066\u3044\u306f\u8907\u6570\u306e\u6761\u4ef6\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3057\u307e\u3059\n/* \u4f8b) \u6771\u4eac\u4ee5\u5916\u306e\u51fa\u8eab\u306720\u6b73\u306e\u7537\u6027\u3092\u30e6\u30fc\u30b6\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u691c\u7d22 */\nSELECT\n    *\nFROM\n    users\nWHERE\n    gender = \"man\" AND\n    age = 20 AND\n    birth_place != \"tokyo\"\n\n\u3053\u308c\u3092 NSPredicate \u3067\u306f\nNSCompoundPredicate \u3068\u3044\u3046 NSPredicate \u306e\u7d99\u627f\u30af\u30e9\u30b9\u3092\u7528\u3044\u3066\u5b9f\u73fe\u3055\u305b\u307e\u3059\nlet predicates = [\n    NSPredicate(format: \"gender = %@\", argumentArray: [\"man\"]),\n    NSPredicate(format: \"age = %@\", argumentArray: [20]),\n    NSPredicate(format: \"birthPlace != %@\", argumentArray: [\"tokyo\"]),\n]\nlet compoundedPredicate = NSCompoundPredicate(andPredicateWithSubpredicates: predicates)\n\n\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u5206\u304b\u308a\u307e\u3059\u304c\u3001\u306a\u304b\u306a\u304b\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u306d\nAND \u3067\u7e4b\u3050\u3060\u3051\u306a\u3089\u307e\u3060\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u304c\u3001OR \u306a\u3069\u304c\u5165\u308b\u3068\u3055\u3089\u306b\u3084\u3084\u3053\u3057\u3044\u3067\u3059\n\u3053\u3053\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3046\u306b\u6539\u9020\u3057\u307e\u3057\u305f\n\nNSPredicate+Compound.swift\npublic extension NSPredicate {\n\n    public func compound(predicates: [NSPredicate], type: NSCompoundPredicateType = .AndPredicateType) -> NSPredicate {\n        var p = predicates; p.insert(self, atIndex: 0)\n        switch type {\n        case .AndPredicateType: return NSCompoundPredicate(andPredicateWithSubpredicates: p)\n        case .OrPredicateType:  return NSCompoundPredicate(orPredicateWithSubpredicates:  p)\n        case .NotPredicateType: return NSCompoundPredicate(notPredicateWithSubpredicate:  self.compound(p))\n        }\n    }\n}\n\n\n\u307e\u305a\u3053\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u3092 NSPredicate \u306b\u8db3\u3059\u3053\u3068\u3067\nNSCompoundPredicate \u306e\u9577\u3063\u305f\u3089\u3057\u3044\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3057\u307e\u3059\n\u3067\u3001\u3055\u3089\u306b\u3053\u3044\u3064\u3092\u30e9\u30c3\u30d7\u3059\u308b\u3082\u306e\u3092\u4f5c\u308a\u307e\u3057\u305f\n\nNSPredicate+Compound.swift\npublic extension NSPredicate {\n\n    public func and(predicate: NSPredicate) -> NSPredicate {\n        return self.compound([predicate], type: .AndPredicateType)\n    }\n\n    public func or(predicate: NSPredicate) -> NSPredicate {\n        return self.compound([predicate], type: .OrPredicateType)\n    }\n\n    public func not(predicate: NSPredicate) -> NSPredicate {\n        return self.compound([predicate], type: .NotPredicateType)\n    }\n}\n\n\ncompound() \u30e1\u30bd\u30c3\u30c9\u304c\u7d50\u5408\u3055\u305b\u305f NSPredicate \u3092\u8fd4\u3057\u3066\u3044\u308b\u3053\u3068\u304b\u3089\n\u3053\u308c\u3089\u306f\u30c1\u30a7\u30fc\u30f3\u3057\u3066\u7e4b\u3044\u3067\u3044\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\u305d\u306e\u524d\u306b\u4e00\u500b\u3001\u500b\u4eba\u7684\u306a\u597d\u307f\u306a\u306e\u3067\u3059\u304c\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u3053\u3057\u3089\u3048\u3066\u304a\u304d\u307e\u3057\u305f\n\nNSPredicate+Compound.swift\npublic extension NSPredicate {\n\n    public static var empty: NSPredicate {\n        return NSPredicate(value: true)\n    }\n}\n\n\n\u3053\u308c\u306f\u7d76\u5bfe\u306b\u6761\u4ef6\u304c true \u306b\u306a\u308b NSPredicate \u3092\u8fd4\u3057\u307e\u3059\n\u3067\u3001\u4eca\u307e\u3067\u4f5c\u3063\u305f\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3068\u3001\u5148\u307b\u3069\u306e\u3082\u306e\u3068\u7d44\u307f\u5408\u308f\u3066\u307f\u308b\u3068\n// After\nlet predicates = NSPredicate.empty\n    .and(NSPredicate(\"gender\",     equal:    \"man\"))\n    .and(NSPredicate(\"age\",        equal:    20))\n    .and(NSPredicate(\"birthPlace\", notEqual: \"tokyo\"))\n\n\u306a\u3093\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u30fb\u30fb\u30fb\u30fb\u30fb\n\u884c\u6570\u3053\u305d\u3042\u307e\u308a\u5909\u308f\u308a\u307e\u305b\u3093\u304c\u3001SQL\u30e9\u30a4\u30af\u306a\u611f\u3058\u3067\u5206\u304b\u308a\u3084\u3059\u304f\u306a\u3063\u305f\u304b\u3068\u601d\u3044\u307e\u3059\n#\u76ee\u6b21\n\n[Swift\u3067Realm\u3092\u4f7f\u3046\u6642\u306eTips \u307e\u3048\u304c\u304d](http://qiita.com/nakau1/items/a591d9cc34e5b575ceb5)\n[Swift\u3067Realm\u3092\u4f7f\u3046\u6642\u306eTips(1) \u30a2\u30af\u30bb\u30b5\u3068\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u7de8](http://qiita.com/nakau1/items/21ed81e7f38c104f760e)\n[Swift\u3067Realm\u3092\u4f7f\u3046\u6642\u306eTips(2) \u751f\u6210\u3068\u30aa\u30fc\u30c8\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u7de8](http://qiita.com/nakau1/items/0323807abed795a43393)\n[Swift\u3067Realm\u3092\u4f7f\u3046\u6642\u306eTips(3) NSPredicate\u7de8](http://qiita.com/nakau1/items/40865299dacc50d71604)\n\n#NSPredicate\u306b\u3064\u3044\u3066\nswift\u3092\u4f7f\u3063\u305fiOS\u958b\u767a\u306b\u3066 `Realm` \u3092\u6271\u3046\u6642\u306b\u3088\u304f\u4f7f\u7528\u3059\u308b\u306e\u304c\n`NSPredicate` \u30af\u30e9\u30b9\u3067\u3059\n\n\u82f1\u8a9e\u3067\u300cpredicate\u300d\u3068\u306f\u300c\u8ff0\u8a9e\u300d\u3068\u3044\u3046\u610f\u5473\u3089\u3057\u3044\u3067\u3059\u304c\nSQL\u69cb\u6587\u3067\u3044\u3046\u3068\u3053\u308d\u306e `WHERE\u6587` \u3068\u30cb\u30a2\u30ea\u30fc\u30a4\u30b3\u30fc\u30eb\u3068\u8003\u3048\u3066\u76f8\u9055\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\n\n\u3067\u3059\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u300c`NSPredicate` = \u6761\u4ef6\u300d\u3068\u3044\u3046\u8a00\u8449\u3092\u4f7f\u3063\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\n\u3053\u306e\u300c\u6761\u4ef6\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001`Realm` \u306b\u554f\u3044\u5408\u308f\u305b\u3092\u884c\u3046\u611f\u3058\u3067\u3059\u306d\n\n#NSPredicate\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u62e1\u5f35\u3059\u308b\n\n`NSPredicate` \u306f\u6a19\u6e96\u3067\u3044\u304f\u3064\u304b\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u6301\u3063\u3066\u3044\u307e\u3059\n[Realm\u306eNSPredicate\u30c1\u30fc\u30c8\u30b7\u30fc\u30c8](https://realm.io/news/nspredicate-cheatsheet/)\u3092\u5143\u306b\n\u4e0b\u8a18\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u306b\u6761\u4ef6\u6587\u3092\u7a81\u3063\u8fbc\u3080\u3068\u3044\u3046\u3084\u308a\u65b9\u304c\u4e00\u822c\u7684\u3067\u3059\n\n```swift\npublic /*not inherited*/ init(format predicateFormat: String, argumentArray arguments: [AnyObject]?)\n```\n\n\u305f\u3068\u3048\u3070\u3053\u3093\u306a\u611f\u3058\n\n```swift\nlet predicate = NSPredicate(format: \"name = %@\", argumentArray: [\"Tom\"])\n```\n\u3053\u308c\u3092\u3001\u3082\u3057SQL\u6587\u3067\u8868\u73fe\u3059\u308b\u3068\u3059\u308c\u3070\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u306d\n\n```sql\nWHERE name = 'Tom'\n```\n\n\u305f\u3060\u3001\u300c\u6587\u5b57\u5217\u3092\u5e73\u6587\u3067\u6253\u3064\u306e?\u300d\u3063\u3066\u611f\u3058\u304c\u3042\u308a\u307e\u3059\n\u306a\u3093\u3068\u306a\u304f\u30a4\u30b1\u3066\u306a\u3044\u611f\u3058\u304c\u3057\u3066\u3057\u307e\u3044\u307e\u3059\n\n\u306a\u306e\u3067\u3001\u81ea\u5206\u306f `NSPredicate` \u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u62e1\u5f35\u3059\u308b\u624b\u3092\u3088\u304f\u4f7f\u3044\u307e\u3059\n\n```NSPredicate+Initializers.swift\npublic extension NSPredicate {\n    \n    private convenience init(expression property: String, _ operation: String, _ value: AnyObject) {\n        self.init(format: \"\\(property) \\(operation) %@\", argumentArray: [value])\n    }\n}\n```\n\u307e\u305a `private` \u306a\u30b3\u30f3\u30d3\u30cb\u30a8\u30f3\u30b9\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u7528\u610f\u3057\u307e\u3057\u305f\n\n\u3067\u3001\u3053\u308c\u3092\u5143\u306b\u3055\u3089\u306b\u62e1\u5f35\u3057\u307e\u3059\n\n```NSPredicate+Initializers.swift\npublic extension NSPredicate {\n    \n    public convenience init(_ property: String, equal value: AnyObject) {\n        self.init(expression: property, \"=\", value)\n    }\n    \n    public convenience init(_ property: String, notEqual value: AnyObject) {\n        self.init(expression: property, \"!=\", value)\n    }\n    \n    public convenience init(_ property: String, equalOrGreaterThan value: AnyObject) {\n        self.init(expression: property, \">=\", value)\n    }\n    \n    public convenience init(_ property: String, equalOrLessThan value: AnyObject) {\n        self.init(expression: property, \"<=\", value)\n    }\n    \n    public convenience init(_ property: String, greaterThan value: AnyObject) {\n        self.init(expression: property, \">\", value)\n    }\n    \n    public convenience init(_ property: String, lessThan value: AnyObject) {\n        self.init(expression: property, \"<\", value)\n    }\n}\n```\n\u3053\u308c\u3060\u3051\u7528\u610f\u3059\u308b\u306e\u306f\u9762\u5012\u304f\u3055\u3044\u3082\u3093\u3067\u3059\u304c\n\u3053\u308c\u306b\u3066\u4f7f\u3046\u3068\u304d\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u308a\u307e\u3059\n\n```swift\n// Tom\u3067\u3042\u308b\nlet predicate = NSPredicate(\"name\", equal: \"Tom\")\n\n// Tom\u3058\u3083\u306a\u3041\u301c\u3044\nlet predicate = NSPredicate(\"name\", notEqual: \"Tom\")\n```\n\n##\u6587\u5b57\u5217\u691c\u7d22\n\n`Realm` \u306f\u5f53\u7136\u6587\u5b57\u5217\u3092\u691c\u7d22\u3059\u308b\u80fd\u529b\u3082\u3042\u308a\u307e\u3059\n\u4e00\u822c\u7684\u306aSQL\u3067\u306f\u305d\u3093\u306a\u6642\u306f `LIKE\u53e5` \u3092\u4f7f\u3046\u308f\u3051\u3067\u3059\u304c\n`Realm` \u3067\u306f `LIKE` \u306f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u307e\u305b\u3093 (\u306a\u3093\u3067?)\n\u4ee3\u308f\u308a\u306b\u4f55\u7a2e\u985e\u304b\u306e\u4e88\u7d04\u8a9e\u304c\u3042\u308a\u307e\u3059\n\n```NSPredicate+Initializers.swift\npublic extension NSPredicate {\n    // \u524d\u5f8c\u65b9\u4e00\u81f4\u691c\u7d22(\u3044\u308f\u3086\u308b\u3001\u3042\u3044\u307e\u3044\u691c\u7d22)\n    public convenience init(_ property: String, contains q: String) {\n        self.init(format: \"\\(property) CONTAINS '\\(q)'\")\n    }\n\n    // \u524d\u65b9\u4e00\u81f4\u691c\u7d22\n    public convenience init(_ property: String, beginsWith q: String) {\n        self.init(format: \"\\(property) BEGINSWITH '\\(q)'\")\n    }\n\n    // \u5f8c\u65b9\u4e00\u81f4\u691c\u7d22\n    public convenience init(_ property: String, endsWith q: String) {\n        self.init(format: \"\\(property) ENDSWITH '\\(q)'\")\n    }\n}\n```\n\n\u3053\u3053\u307e\u3067\u7528\u610f\u3057\u3066\u3001\u3044\u3056\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u554f\u984c\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3044\u307e\u3059\n\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3068\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\u3092\u542b\u3093\u3060\u6587\u5b57\u5217\u3092\u6e21\u3059\u3068\n\u30a2\u30d7\u30ea\u304c\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u306e\u3067\u3059\n\n\u306a\u3093\u3060\u304b \"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3042\u308b\u3042\u308b\" \u3067\u3059\u306d\n\u3061\u3083\u3093\u3068\u30a8\u30b9\u30b1\u30fc\u30d7\u3092\u3057\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u61f8\u547d\u306a\u3088\u3046\u3067\u3059\n\n\u306a\u306e\u3067\u3001\u4eca\u5ea6\u306f\u6587\u5b57\u5217\u306b\u5bfe\u3057\u3066\u62e1\u5f35\u3092\u884c\u3044\u307e\u3059\n\n```String+Realm.swift\npublic extension String {\n    \n    /// Realm\u7528\u306b\u30a8\u30b9\u30b1\u30fc\u30d7\u3057\u305f\u6587\u5b57\u5217\n    public var realmEscaped: String {\n        let reps = [\n            \"\\\\\" : \"\\\\\\\\\",\n            \"'\"  : \"\\\\'\",\n            ]\n        var ret = self\n        for rep in reps {\n            ret = self.stringByReplacingOccurrencesOfString(rep.0, withString: rep.1)\n        }\n        return ret\n    }\n}\n```\n\n\u3053\u308c\u3067\n\n```swift\n// Tom\u3063\u3066\u6587\u5b57\u304c\u3069\u3053\u304b\u306b\u3042\u308b\u304b\u306a\u3041\u30fc?\nlet predicate = NSPredicate(\"name\", contains: \"Tom\")\n\n// Tom's Shop\u3063\u3066\u6587\u5b57\u304c\u3069\u3053\u304b\u306b\u3042\u308b\u304b\u306a\u3041\u30fc?\nlet predicate = NSPredicate(\"name\", contains: \"Tom's Shop\".realmEscaped)\n```\n\n\u6587\u5b57\u5217\u691c\u7d22\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\n\n##\u305d\u306e\u4ed6\u306e\u691c\u7d22\n###IN\u53e5\n\nSQL\u3067\u3088\u304f\u3042\u308b `IN\u53e5` \u3082 `Realm` \u306b\u306f\u3042\u308a\u307e\u3059\n`IN\u53e5` \u306e\u5834\u5408\u306f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u914d\u5217\u3092\u914d\u5217\u306b\u3057\u3066\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\n\n\u5f53\u305f\u308a\u524d\u3068\u3044\u3048\u3070\u5f53\u305f\u308a\u524d\u306a\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u304c\u610f\u5916\u3068\u30df\u30b9\u308a\u3084\u3059\u3044\u3067\u3059\n\u306a\u306e\u3067\u3001\u3053\u308c\u3082\u5206\u304b\u308a\u3084\u3059\u304f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30e9\u30c3\u30d7\u3057\u3066\u304a\u304f\u306e\u304c\u3088\u3044\u304b\u3068\u601d\u3044\u307e\u3059\n\n```NSPredicate+Initializers.swift\n    public convenience init(_ property: String, valuesIn values: [AnyObject]) {\n        self.init(format: \"\\(property) IN %@\", argumentArray: [values])\n    }\n```\n\u3053\u3046\u3057\u3066\u304a\u3051\u3070\n\n```swift\nlet cities = [\"Tokyo\", \"Osaka\", \"Nagoya\"]\nlet predicate = NSPredicate(\"city\", valuesIn: cities)\n```\n\u3053\u306e\u3088\u3046\u306b\u76f4\u611f\u7684\u306b\n\n###BETWEEN\u53e5\n\n`BETWEEN\u53e5` \u3082 `Realm` \u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u307e\u3059\n`Realm` \u306e `BETWEEN\u53e5` \u306e\u4f5c\u6cd5\u306f\u300c\u30d6\u30ec\u30b9\u3067\u56f2\u3080\u300d\u3068\u3044\u3046\u3053\u3068\u306e\u3088\u3046\u3067\u3059\u304c\n\u3053\u308c\u3082\u5fd8\u308c\u304c\u3061\u3068\u3044\u3046\u304b\u9593\u9055\u3044\u3084\u3059\u3044\u306e\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30e9\u30c3\u30d7\u3057\u3066\u304a\u304f\u306e\u304c\u3088\u3044\u304b\u3068\u601d\u3044\u307e\u3059\n\n```NSPredicate+Initializers.swift\n    public convenience init(_ property: String, between min: AnyObject, to max: AnyObject) {\n        self.init(format: \"\\(property) BETWEEN {%@, %@}\", argumentArray: [min, max])\n    }\n```\n`Int` \u3082 `Float` \u3082\u305d\u306e\u4ed6\u3082\u5438\u53ce\u3067\u304d\u308b\u3088\u3046\u306b\u6700\u5c0f\u5024\u3068\u6700\u5927\u5024\u3092 `AnyObject` \u306b\u3057\u3066\u3044\u307e\u3059\u304c\n\u300c\u6574\u6570\u3057\u304b\u4f7f\u308f\u306d\u30fc\u3088\u300d\u3063\u3066\u65b9\u306a\u3089\u5f15\u6570\u306e\u578b\u3092 `Int` \u3068\u304b\u306b\u3057\u3066\u3082\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u6587\u6cd5\u4f5c\u6cd5\u3092\u899a\u3048\u306a\u304f\u3066\u3082\u76f4\u611f\u7684\u306b\u306a\u308a\u307e\u3057\u305f\n\n```swift\n// \u5e74\u9f62\u304c18\u6b73\u304b\u308940\u6b73\u307e\u3067\nlet predicate = NSPredicate(\"age\", between: 18, to: 40)\n```\n\n###\u65e5\u4ed8\u306eFromTo\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u3046\u30a2\u30d7\u30ea\u3067\u3088\u304f\u51fa\u3066\u304f\u308b\u306e\u306f\u3001\n\u300c\u3044\u3064\u304b\u3089\u3044\u3064\u307e\u3067\u300d\u3068\u3044\u3046\u65e5\u4ed8\u7bc4\u56f2\u3092\u6307\u5b9a\u3057\u3066\u306e\u691c\u7d22\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\n\n\u300c\u3044\u3064\u304b\u3089\u300d\u3060\u3051\u306e\u691c\u7d22\u3082\u3001\u300c\u3044\u3064\u307e\u3067\u300d\u3060\u3051\u306e\u691c\u7d22\u3082\u3001\u305d\u306e\u4e21\u65b9\u3082\n\u3072\u3068\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3067\u304d\u308b\u3068\u3042\u308a\u304c\u305f\u3044\u306a\u3041\u3068\u3044\u3046\u3053\u3068\u3067\u3001\n`BETWEEN` \u306b\u306f\u305b\u305a\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3001\u3061\u3087\u3063\u3068\u9577\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u3042\u3044\u306a\u308a\u307e\u3057\u305f\n\n```NSPredicate+Initializers.swift\n    public convenience init(_ property: String, fromDate: NSDate?, toDate: NSDate?) {\n        var format = \"\", args = [AnyObject]()\n        if let from = fromDate {\n            format += \"\\(property) >= %@\"\n            args.append(from)\n        }\n        if let to = toDate {\n            if !format.isEmpty {\n                format += \" AND \"\n            }\n            format += \"\\(property) <= %@\"\n            args.append(to)\n        }\n        if !args.isEmpty {\n            self.init(format: format, argumentArray: args)\n        } else {\n            self.init(value: true)\n        }\n    }\n```\n\n```swift\n// \u671f\u9650\u65e5\u304c\u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u307e\u3067\u306e\u30c7\u30fc\u30bf\u3092\u691c\u7d22\nlet date: NSDate = /* NSDate\u3092\u4f5c\u308b\u51e6\u7406(\u5272\u611b) */\nlet predicate = NSPredicate(\"expiredDate\", fromDate: nil, toDate: date)\n\n// \u8cfc\u5165\u65e5\u304c\u6307\u5b9a\u3057\u305f\u65e5\u4ed8\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u691c\u7d22\nlet date: NSDate = /* NSDate\u3092\u4f5c\u308b\u51e6\u7406(\u5272\u611b) */\nlet predicate = NSPredicate(\"purchasedDate\", fromDate: date, toDate: nil)\n\n// \u4e88\u7d04\u65e5\u304c\u6307\u5b9a\u3057\u305f\u65e5\u4ed81\u304b\u3089\u65e5\u4ed82\u307e\u3067\u306e\u30c7\u30fc\u30bf\u3092\u691c\u7d22\nlet date1: NSDate = /* NSDate\u3092\u4f5c\u308b\u51e6\u7406(\u5272\u611b) */\nlet date2: NSDate = /* NSDate\u3092\u4f5c\u308b\u51e6\u7406(\u5272\u611b) */\nlet predicate = NSPredicate(\"reservedDate\", fromDate: date1, toDate: date2)\n```\n\n###ID\u691c\u7d22\n\n\u3053\u3053\u307e\u3067\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u306f\u3001\u30c1\u30fc\u30c8\u30c1\u30e3\u30fc\u30c8\u3092\u5143\u306b\n\u6a19\u6e96\u7684\u306a\u65b9\u6cd5\u3092\u30e9\u30c3\u30d7\u3059\u308b\u3082\u306e\u3067\u3057\u305f\n\n\u3053\u3053\u3067\u306f\u524d\u56de\u307e\u3067\u306b\u4f5c\u3063\u305f `NBRealmEntity` \u30af\u30e9\u30b9\u306b\u7279\u5316\u3057\u305f\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u7528\u610f\u3057\u307e\u3059\n\n\u4e3b\u30ad\u30fc\u3067\u3042\u308bid\u3092\u691c\u7d22\u6761\u4ef6\u306b\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u8272\u3005\u3068\u4fbf\u5229\u3067\u3059\n\n```NSPredicate+Initializers.swift\npublic extension NSPredicate {\n    \n    public convenience init(ids: [Int64]) {\n        let arr = ids.map { NSNumber(longLong: $0) }\n        self.init(format: \"\\(NBRealmEntity.IDKey) IN %@\", argumentArray: [arr])\n    }\n    \n    public convenience init(id: Int64) {\n        self.init(format: \"\\(NBRealmEntity.IDKey) = %@\", argumentArray: [NSNumber(longLong: id)])\n    }\n}\n```\n\n `AnyObject` \u306b\u306f `Int64` \u3092\u305d\u306e\u307e\u307e\u3064\u3063\u3053\u3081\u306a\u3044\u306e\u3067\n `NSNumber` \u306b\u5909\u63db\u3057\u3066\u6271\u3044\u307e\u3059\n\n\u305d\u3093\u306a\u5909\u63db\u51e6\u7406\u3092\u6bce\u56de\u3084\u3063\u3066\u3089\u308c\u306a\u3044\u306e\u3067\n\u3053\u306e\u3088\u3046\u306a\u30b3\u30f3\u30d3\u30cb\u30a8\u30f3\u30b9\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u306e\u304c\u3044\u3044\u3067\u3059\u306d\n\n```swift\n// ID=32\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\nlet predicate = NSPredicate(id: 32)\n\nlet predicate = NSPredicate(ids: [12, 23, 27, 39])\n```\n\n#\u6761\u4ef6\u3092\u7d50\u5408\u3059\u308b\n\nSQL\u306e `WHERE\u6587` \u306f\u3001\u3072\u3068\u3064\u306e\u6761\u4ef6\u3060\u3051\u3067\u53ce\u307e\u308b\u3053\u3068\u306f\u3001\u306a\u304b\u306a\u304b\u7121\u3044\u3053\u3068\u3067\u3059\n\u305f\u3044\u3066\u3044\u306f\u8907\u6570\u306e\u6761\u4ef6\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3057\u307e\u3059\n\n```sql\n/* \u4f8b) \u6771\u4eac\u4ee5\u5916\u306e\u51fa\u8eab\u306720\u6b73\u306e\u7537\u6027\u3092\u30e6\u30fc\u30b6\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u691c\u7d22 */\nSELECT\n    *\nFROM\n    users\nWHERE\n    gender = \"man\" AND\n    age = 20 AND\n    birth_place != \"tokyo\"\n```\n\n\u3053\u308c\u3092 `NSPredicate` \u3067\u306f\n`NSCompoundPredicate` \u3068\u3044\u3046 `NSPredicate` \u306e\u7d99\u627f\u30af\u30e9\u30b9\u3092\u7528\u3044\u3066\u5b9f\u73fe\u3055\u305b\u307e\u3059\n\n```swift\nlet predicates = [\n    NSPredicate(format: \"gender = %@\", argumentArray: [\"man\"]),\n    NSPredicate(format: \"age = %@\", argumentArray: [20]),\n    NSPredicate(format: \"birthPlace != %@\", argumentArray: [\"tokyo\"]),\n]\nlet compoundedPredicate = NSCompoundPredicate(andPredicateWithSubpredicates: predicates)\n```\n\n\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u5206\u304b\u308a\u307e\u3059\u304c\u3001\u306a\u304b\u306a\u304b\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u306d\n`AND` \u3067\u7e4b\u3050\u3060\u3051\u306a\u3089\u307e\u3060\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u304c\u3001`OR` \u306a\u3069\u304c\u5165\u308b\u3068\u3055\u3089\u306b\u3084\u3084\u3053\u3057\u3044\u3067\u3059\n\n\u3053\u3053\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3088\u3046\u306b\u6539\u9020\u3057\u307e\u3057\u305f\n\n```NSPredicate+Compound.swift\npublic extension NSPredicate {\n\n    public func compound(predicates: [NSPredicate], type: NSCompoundPredicateType = .AndPredicateType) -> NSPredicate {\n        var p = predicates; p.insert(self, atIndex: 0)\n        switch type {\n        case .AndPredicateType: return NSCompoundPredicate(andPredicateWithSubpredicates: p)\n        case .OrPredicateType:  return NSCompoundPredicate(orPredicateWithSubpredicates:  p)\n        case .NotPredicateType: return NSCompoundPredicate(notPredicateWithSubpredicate:  self.compound(p))\n        }\n    }\n}\n```\n\n\u307e\u305a\u3053\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u3092 `NSPredicate` \u306b\u8db3\u3059\u3053\u3068\u3067\n`NSCompoundPredicate` \u306e\u9577\u3063\u305f\u3089\u3057\u3044\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3057\u307e\u3059\n\n\u3067\u3001\u3055\u3089\u306b\u3053\u3044\u3064\u3092\u30e9\u30c3\u30d7\u3059\u308b\u3082\u306e\u3092\u4f5c\u308a\u307e\u3057\u305f\n\n```NSPredicate+Compound.swift\npublic extension NSPredicate {\n    \n    public func and(predicate: NSPredicate) -> NSPredicate {\n        return self.compound([predicate], type: .AndPredicateType)\n    }\n    \n    public func or(predicate: NSPredicate) -> NSPredicate {\n        return self.compound([predicate], type: .OrPredicateType)\n    }\n    \n    public func not(predicate: NSPredicate) -> NSPredicate {\n        return self.compound([predicate], type: .NotPredicateType)\n    }\n}\n```\n\n`compound()` \u30e1\u30bd\u30c3\u30c9\u304c\u7d50\u5408\u3055\u305b\u305f `NSPredicate` \u3092\u8fd4\u3057\u3066\u3044\u308b\u3053\u3068\u304b\u3089\n\u3053\u308c\u3089\u306f\u30c1\u30a7\u30fc\u30f3\u3057\u3066\u7e4b\u3044\u3067\u3044\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\n\u305d\u306e\u524d\u306b\u4e00\u500b\u3001\u500b\u4eba\u7684\u306a\u597d\u307f\u306a\u306e\u3067\u3059\u304c\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u3053\u3057\u3089\u3048\u3066\u304a\u304d\u307e\u3057\u305f\n\n```NSPredicate+Compound.swift\npublic extension NSPredicate {\n    \n    public static var empty: NSPredicate {\n        return NSPredicate(value: true)\n    }\n}\n```\n\n\u3053\u308c\u306f\u7d76\u5bfe\u306b\u6761\u4ef6\u304c `true` \u306b\u306a\u308b `NSPredicate` \u3092\u8fd4\u3057\u307e\u3059\n\n\u3067\u3001\u4eca\u307e\u3067\u4f5c\u3063\u305f\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3068\u3001\u5148\u307b\u3069\u306e\u3082\u306e\u3068\u7d44\u307f\u5408\u308f\u3066\u307f\u308b\u3068\n\n```swift\n// After\nlet predicates = NSPredicate.empty\n    .and(NSPredicate(\"gender\",     equal:    \"man\"))\n    .and(NSPredicate(\"age\",        equal:    20))\n    .and(NSPredicate(\"birthPlace\", notEqual: \"tokyo\"))\n```\n\n\u306a\u3093\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u30fb\u30fb\u30fb\u30fb\u30fb\n\n\u884c\u6570\u3053\u305d\u3042\u307e\u308a\u5909\u308f\u308a\u307e\u305b\u3093\u304c\u3001SQL\u30e9\u30a4\u30af\u306a\u611f\u3058\u3067\u5206\u304b\u308a\u3084\u3059\u304f\u306a\u3063\u305f\u304b\u3068\u601d\u3044\u307e\u3059\n", "tags": ["Swift", "iOS", "RealmSwift", "Realm"]}