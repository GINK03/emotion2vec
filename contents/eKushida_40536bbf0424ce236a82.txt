{"tags": ["iOS", "Swift", "UIKit"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u30e1\u30cb\u30e5\u30fc\u3092\u4f5c\u308b\u6a5f\u4f1a\u304c\u3042\u308a\u307e\u3057\u305f\u306e\u3067\u3001\n\u30e1\u30e2\u3092\u5171\u6709\u3057\u307e\u3059\u3002\n\n\n\u8a2d\u8a08\u65b9\u91dd\n\nTableView\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u306e\u89aaView\u3068\u3059\u308b\nTableView\u306e\u30ed\u30fc\u3092\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u306e\u5b50View\u3068\u3059\u308b\n\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u306f\u30011\u3064\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u307f\u958b\u304f\u3082\u306e\u3068\u3059\u308b\n\n\n\u65e9\u901f\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\uff01\n\n(1) \u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u691c\u8a0e\u3059\u308b\n\u30fb\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u3092\u958b\u304f\n\u30fb\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u3092\u9589\u3058\u308b\n\nHeaderView.swift\nimport UIKit\n\nprotocol HeaderViewDelegate {\n    func openedView(section: Int)\n    func closedView(section: Int)\n}\n\n\n\n(2) \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u30bf\u30c3\u30d7\u3055\u308c\u305f\u3068\u304d\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u691c\u8a0e\u3059\u308b\n\u30fb\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u30bf\u30c3\u30d7\u30a4\u30d9\u30f3\u30c8\u3092\u4ed8\u52a0\u3059\u308b\n\u30fb\u8a72\u5f53\u30bb\u30af\u30b7\u30e7\u30f3\u304c\u958b\u3044\u3066\u3044\u308c\u3070\u3001\u9589\u3058\u308b\n\u30fb\u8a72\u5f53\u30bb\u30af\u30b7\u30e7\u30f3\u304c\u9589\u3058\u3066\u3044\u308c\u3070\u3001\u958b\u304f\n\nHeaderView.swift\nclass HeaderView: UIView {\n\n    var tableView:ExpandableTableView!\n    var delegate:HeaderViewDelegate?\n    var section = 0\n\n    required init(tableView:ExpandableTableView, section:Int){\n\n        guard let height = tableView.delegate?.tableView!(tableView, heightForHeaderInSection: section) else{\n            fatalError(\"heightForHeaderInSection\u3092\u547c\u3093\u3067\u306d\u3002\")\n        }\n\n        let frame = CGRectMake(0, 0, CGRectGetWidth(tableView.frame), height)\n        super.init(frame: frame)\n\n        self.tableView = tableView\n        self.delegate = tableView\n        self.section = section\n    }\n\n    required init?(coder aDecoder: NSCoder) {\n        fatalError(\"init(coder:) \u306f\u4f7f\u308f\u306a\u3044\u3067\u306d\u3002\")\n    }\n\n    override func layoutSubviews() {\n\n        let toggleButton = UIButton()\n        toggleButton.addTarget(self, action: #selector(self.toggle(_:)), forControlEvents: UIControlEvents.TouchUpInside)\n        toggleButton.backgroundColor = UIColor.clearColor()\n        toggleButton.frame = CGRectMake(0, 0, self.frame.width, self.frame.height)\n        self.addSubview(toggleButton)\n    }\n\n    func toggle(sender:AnyObject){\n\n        if tableView.sectionOpen != section {\n            delegate?.openedView(section)\n        } else if tableView.sectionOpen != NSNotFound {\n            delegate?.closedView(self.tableView!.sectionOpen)\n        }\n    }\n}\n\n\n\n(3) \u73fe\u5728\u958b\u3044\u3066\u3044\u308b\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u756a\u53f7\u3092\u4fdd\u6301\u3059\u308b\n\nExpandableTableView.swift\nimport UIKit\n\nclass ExpandableTableView : UITableView {\n    var sectionOpen = NSNotFound\n}\n\n\n\n(4) TableView\u306b\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9f\u88c5\u3059\u308b\n\nExpandableTableView.swift\nextension ExpandableTableView: HeaderViewDelegate {\n\n    func openedView(section: Int) {\n\n        if self.sectionOpen != NSNotFound {\n            closedView(self.sectionOpen)\n        }\n\n        self.sectionOpen = section\n\n        if let numberOfRows = self.dataSource?.tableView(self, numberOfRowsInSection: section) {\n\n            var indexesPathToInsert:[NSIndexPath] = []\n\n            for i in 0 ..< numberOfRows {\n                indexesPathToInsert.append(NSIndexPath(forRow: i, inSection: section))\n            }\n\n            if indexesPathToInsert.count > 0 {\n                self.beginUpdates()\n                self.insertRowsAtIndexPaths(indexesPathToInsert, withRowAnimation: UITableViewRowAnimation.Automatic)\n                self.endUpdates()\n            }\n        }\n    }\n\n    func closedView(section: Int) {\n\n        if let numberOfRows = self.dataSource?.tableView(self, numberOfRowsInSection: section) {\n            var indexesPathToDelete:[NSIndexPath] = []\n            self.sectionOpen = NSNotFound\n\n            for i in 0 ..< numberOfRows {\n                indexesPathToDelete.append(NSIndexPath(forRow: i, inSection: section))\n            }\n\n            if indexesPathToDelete.count > 0 {\n                self.beginUpdates()\n                self.deleteRowsAtIndexPaths(indexesPathToDelete, withRowAnimation: UITableViewRowAnimation.Top)\n                self.endUpdates()\n            }\n        }\n    }\n}\n\n\n\n(5) Custom Class\u306bExpandableTableView\u3092\u6307\u5b9a\u3059\u308b\n\n\n(6) \u8868\u793a\u3059\u308b\u30c7\u30fc\u30bf\u3092\u4e8c\u6b21\u5143\u914d\u5217\u3067\u7528\u610f\u3059\u308b\n\nViewController.swift\nimport UIKit\n\nclass ViewController: UIViewController  {\n\n    @IBOutlet weak var tableView: ExpandableTableView!\n    var items:[[Int]] = []\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        // \u30c0\u30df\u30fc\u30c7\u30fc\u30bf\n        for i in 0 ..< 20 {\n            items.append([])\n            for j in 0 ..< 10 {\n                items[i].append(j)\n            }\n        }\n    }\n}\n\nextension ViewController: UITableViewDataSource {\n\n    func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        return CGFloat(44.0)\n    }\n\n    func numberOfSectionsInTableView(tableView: UITableView) -> Int {\n        return items.count\n    }\n\n    func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n\n        if self.tableView.sectionOpen != NSNotFound && section == self.tableView.sectionOpen {\n            return items[section].count\n        }\n        return 0\n    }\n\n    func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {\n\n        let cell = tableView.dequeueReusableCellWithIdentifier(\"cell\", forIndexPath: indexPath)\n        cell.textLabel?.text = \"section \\(indexPath.section) row \\(indexPath.row)\"\n        cell.textLabel?.backgroundColor = UIColor.clearColor()\n        return cell\n    }\n}\n\nextension ViewController: UITableViewDelegate {\n\n    func tableView(tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\n\n        let headerView = HeaderView(tableView: self.tableView, section: section)\n        headerView.backgroundColor = UIColor.lightGrayColor()\n        let label = UILabel(frame: headerView.frame)\n        label.text = \"Section \\(section)\"\n        label.textColor = UIColor.whiteColor()\n        headerView.addSubview(label)\n        return headerView\n    }\n\n    func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {\n        tableView.deselectRowAtIndexPath(indexPath, animated: true)\n    }\n}\n\n\n\n\u6700\u5f8c\u306b\n\u30b5\u30f3\u30d7\u30eb\u306f\u3001Github\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n(Swift3\u5bfe\u5fdc\u3057\u307e\u3057\u305f\u3002\uff09\n\u4ee5\u4e0a\u3067\u3059\u3002\n# \u306f\u3058\u3081\u306b\n\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u30e1\u30cb\u30e5\u30fc\u3092\u4f5c\u308b\u6a5f\u4f1a\u304c\u3042\u308a\u307e\u3057\u305f\u306e\u3067\u3001\n\u30e1\u30e2\u3092\u5171\u6709\u3057\u307e\u3059\u3002\n\n<img width=\"332\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-01 12.26.01.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71694/373c867d-862c-b2fc-2a46-9dbae1a35dc9.png\">\n\n## \u8a2d\u8a08\u65b9\u91dd\n1. TableView\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u306e\u89aaView\u3068\u3059\u308b\n2. TableView\u306e\u30ed\u30fc\u3092\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u306e\u5b50View\u3068\u3059\u308b\n3. \u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u306f\u30011\u3064\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u307f\u958b\u304f\u3082\u306e\u3068\u3059\u308b\n\n# \u65e9\u901f\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\uff01\n\n## (1) \u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u691c\u8a0e\u3059\u308b\n\u30fb\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u3092\u958b\u304f\n\u30fb\u30a2\u30b3\u30fc\u30c7\u30a3\u30aa\u30f3\u3092\u9589\u3058\u308b\n\n```swift:HeaderView.swift\nimport UIKit\n\nprotocol HeaderViewDelegate {\n    func openedView(section: Int)\n    func closedView(section: Int)\n}\n```\n\n## (2) \u30bb\u30af\u30b7\u30e7\u30f3\u3092\u30bf\u30c3\u30d7\u3055\u308c\u305f\u3068\u304d\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u691c\u8a0e\u3059\u308b\n\u30fb\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u30bf\u30c3\u30d7\u30a4\u30d9\u30f3\u30c8\u3092\u4ed8\u52a0\u3059\u308b\n\u30fb\u8a72\u5f53\u30bb\u30af\u30b7\u30e7\u30f3\u304c\u958b\u3044\u3066\u3044\u308c\u3070\u3001\u9589\u3058\u308b\n\u30fb\u8a72\u5f53\u30bb\u30af\u30b7\u30e7\u30f3\u304c\u9589\u3058\u3066\u3044\u308c\u3070\u3001\u958b\u304f\n\n```swift:HeaderView.swift\nclass HeaderView: UIView {\n\n    var tableView:ExpandableTableView!\n    var delegate:HeaderViewDelegate?\n    var section = 0\n\n    required init(tableView:ExpandableTableView, section:Int){\n\n        guard let height = tableView.delegate?.tableView!(tableView, heightForHeaderInSection: section) else{\n            fatalError(\"heightForHeaderInSection\u3092\u547c\u3093\u3067\u306d\u3002\")\n        }\n\n        let frame = CGRectMake(0, 0, CGRectGetWidth(tableView.frame), height)\n        super.init(frame: frame)\n        \n        self.tableView = tableView\n        self.delegate = tableView\n        self.section = section\n    }\n    \n    required init?(coder aDecoder: NSCoder) {\n        fatalError(\"init(coder:) \u306f\u4f7f\u308f\u306a\u3044\u3067\u306d\u3002\")\n    }\n    \n    override func layoutSubviews() {\n\n        let toggleButton = UIButton()\n        toggleButton.addTarget(self, action: #selector(self.toggle(_:)), forControlEvents: UIControlEvents.TouchUpInside)\n        toggleButton.backgroundColor = UIColor.clearColor()\n        toggleButton.frame = CGRectMake(0, 0, self.frame.width, self.frame.height)\n        self.addSubview(toggleButton)\n    }\n    \n    func toggle(sender:AnyObject){\n        \n        if tableView.sectionOpen != section {\n            delegate?.openedView(section)\n        } else if tableView.sectionOpen != NSNotFound {\n            delegate?.closedView(self.tableView!.sectionOpen)\n        }\n    }\n}\n```\n\n## (3) \u73fe\u5728\u958b\u3044\u3066\u3044\u308b\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u756a\u53f7\u3092\u4fdd\u6301\u3059\u308b\n\n```swift:ExpandableTableView.swift\nimport UIKit\n\nclass ExpandableTableView : UITableView {\n    var sectionOpen = NSNotFound\n}\n```\n\n## (4) TableView\u306b\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9f\u88c5\u3059\u308b\n\n```swift:ExpandableTableView.swift\nextension ExpandableTableView: HeaderViewDelegate {\n\n    func openedView(section: Int) {\n\n        if self.sectionOpen != NSNotFound {\n            closedView(self.sectionOpen)\n        }\n\n        self.sectionOpen = section\n\n        if let numberOfRows = self.dataSource?.tableView(self, numberOfRowsInSection: section) {\n\n            var indexesPathToInsert:[NSIndexPath] = []\n\n            for i in 0 ..< numberOfRows {\n                indexesPathToInsert.append(NSIndexPath(forRow: i, inSection: section))\n            }\n\n            if indexesPathToInsert.count > 0 {\n                self.beginUpdates()\n                self.insertRowsAtIndexPaths(indexesPathToInsert, withRowAnimation: UITableViewRowAnimation.Automatic)\n                self.endUpdates()\n            }\n        }\n    }\n\n    func closedView(section: Int) {\n\n        if let numberOfRows = self.dataSource?.tableView(self, numberOfRowsInSection: section) {\n            var indexesPathToDelete:[NSIndexPath] = []\n            self.sectionOpen = NSNotFound\n\n            for i in 0 ..< numberOfRows {\n                indexesPathToDelete.append(NSIndexPath(forRow: i, inSection: section))\n            }\n\n            if indexesPathToDelete.count > 0 {\n                self.beginUpdates()\n                self.deleteRowsAtIndexPaths(indexesPathToDelete, withRowAnimation: UITableViewRowAnimation.Top)\n                self.endUpdates()\n            }\n        }\n    }\n}\n```\n\n## (5) Custom Class\u306bExpandableTableView\u3092\u6307\u5b9a\u3059\u308b\n\n<img width=\"684\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-01 12.05.23.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71694/978cbae1-54d1-e7ba-b33c-eb78039070f2.png\">\n\n## (6) \u8868\u793a\u3059\u308b\u30c7\u30fc\u30bf\u3092\u4e8c\u6b21\u5143\u914d\u5217\u3067\u7528\u610f\u3059\u308b\n\n```swift:ViewController.swift\nimport UIKit\n\nclass ViewController: UIViewController  {\n    \n    @IBOutlet weak var tableView: ExpandableTableView!\n    var items:[[Int]] = []\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        \n        // \u30c0\u30df\u30fc\u30c7\u30fc\u30bf\n        for i in 0 ..< 20 {\n            items.append([])\n            for j in 0 ..< 10 {\n                items[i].append(j)\n            }\n        }\n    }\n}\n\nextension ViewController: UITableViewDataSource {\n\n    func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {\n        return CGFloat(44.0)\n    }\n\n    func numberOfSectionsInTableView(tableView: UITableView) -> Int {\n        return items.count\n    }\n\n    func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n\n        if self.tableView.sectionOpen != NSNotFound && section == self.tableView.sectionOpen {\n            return items[section].count\n        }\n        return 0\n    }\n\n    func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {\n\n        let cell = tableView.dequeueReusableCellWithIdentifier(\"cell\", forIndexPath: indexPath)\n        cell.textLabel?.text = \"section \\(indexPath.section) row \\(indexPath.row)\"\n        cell.textLabel?.backgroundColor = UIColor.clearColor()\n        return cell\n    }\n}\n\nextension ViewController: UITableViewDelegate {\n\n    func tableView(tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {\n\n        let headerView = HeaderView(tableView: self.tableView, section: section)\n        headerView.backgroundColor = UIColor.lightGrayColor()\n        let label = UILabel(frame: headerView.frame)\n        label.text = \"Section \\(section)\"\n        label.textColor = UIColor.whiteColor()\n        headerView.addSubview(label)\n        return headerView\n    }\n\n    func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {\n        tableView.deselectRowAtIndexPath(indexPath, animated: true)\n    }\n}\n```\n\n# \u6700\u5f8c\u306b\n\u30b5\u30f3\u30d7\u30eb\u306f\u3001[Github](https://github.com/stv-ekushida/ios-expandable-list)\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n(Swift3\u5bfe\u5fdc\u3057\u307e\u3057\u305f\u3002\uff09\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\n\n\n"}