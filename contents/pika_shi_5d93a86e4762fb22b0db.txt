{"context": "\u30b7\u30f3\u30b4\u30b8\u30e9\uff0c\u3059\u3054\u3044\u8feb\u529b\u3067\u3059\u306d\uff0e118.5m \u3082\u3042\u308b\u305d\u3046\u3067\u3059\uff0e\u305f\u3060\u4e00\u65b9\u3067\uff0c\u9ad8\u5c64\u30d3\u30eb\u304c\u7acb\u3061\u4e26\u3076\u6771\u4eac\u306b\u304a\u3044\u3066\u306f\uff0c\u305d\u308c\u3092\u8d85\u3048\u308b\u9ad8\u3055\u306e\u30d3\u30eb\u306f\u6ca2\u5c71\u3042\u308a\u307e\u3059\uff0e\u6771\u4eac\u30df\u30c3\u30c9\u30bf\u30a6\u30f3\u306a\u3093\u304b\u306f 248m \u3042\u308b\u3088\u3046\u3067\uff0c\u3082\u306f\u3084\u30b7\u30f3\u30b4\u30b8\u30e9\u306f\u305d\u306e\u534a\u5206\u306e\u5927\u304d\u3055\u3059\u3089\u3042\u308a\u307e\u305b\u3093\uff0e\n\u30b7\u30f3\u30b4\u30b8\u30e9\u306f\u679c\u305f\u3057\u3066\u5927\u304d\u3044\u306e\u304b\u5c0f\u3055\u3044\u306e\u304b\uff0e\u4f55\u3060\u304b\u3088\u304f\u5206\u304b\u3089\u306a\u304f\u306a\u3063\u3066\u304d\u305f\u306e\u3067\uff0c\u3069\u308c\u304f\u3089\u3044\u5927\u304d\u3044\u306e\u304b\u30a4\u30e1\u30fc\u30b8\u3092\u308f\u304b\u305b\u308b\u305f\u3081\u306b\uff0cGoogle Earth API \u3068 Selenium \u3092\u7528\u3044\u3066\u6771\u4eac 23 \u533a\u5185\u3067\u540c\u3058\u9ad8\u3055\u306e\u30d3\u30eb\u3092\u63a2\u3057\u3066\u307f\u307e\u3057\u305f\uff0e\n\nGoogle Earth\n\n\u4e0a\u306e\u753b\u50cf\u306f Google Earth \u306b\u3066\uff0c\u6771\u4eac\u30df\u30c3\u30c9\u30bf\u30a6\u30f3\u306b\u30ab\u30fc\u30bd\u30eb\u3092\u3042\u308f\u305b\u305f\u969b\u306e\u3082\u306e\u3067\u3059\uff0e\u4e0b\u90e8\u306b\uff0c\u7def\u5ea6\u7d4c\u5ea6\u306b\u52a0\u3048\u3066\u6a19\u9ad8 (269m) \u304c\u8868\u793a\u3055\u308c\u3066\u304a\u308a\uff0c\u3053\u308c\u304b\u3089\u6d77\u9762\u9ad8\u5ea6\u3092\u5f15\u3044\u305f\u3082\u306e\u304c\uff0c\u305d\u306e\u5efa\u7269\u306e\u9ad8\u3055\u306b\u306a\u308a\u307e\u3059\uff0eGoogle Earth \u3067\u306f\uff0c\u822a\u7a7a\u5199\u771f\u6e2c\u91cf\u3068\u3044\u3046\u6280\u8853\u3092\u7528\u3044\u3066\u4e16\u754c\u4e2d\u306e\u5efa\u7269\u306e\u9ad8\u5ea6\u3092\u6c42\u3081\u3066\u3044\u307e\u3059\uff0e\nGoogle Earth \u306b\u306f Web API \u306f\u3042\u308a\u307e\u305b\u3093\u304c Javascript API \u304c\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\uff0c\u30a4\u30d9\u30f3\u30c8\u7d4c\u7531\u3067\u305d\u306e\u5730\u70b9\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u672c API \u306f\u73fe\u5728 Depricated \u3067\u3042\u308a\uff0c2016 \u5e74\u672b\u3067\u63d0\u4f9b\u7d42\u4e86\u3055\u308c\u308b\u306e\u3067\uff0c\u30c7\u30fc\u30bf\u3092\u5229\u7528\u3055\u308c\u308b\u65b9\u306f\u65e9\u3081\u306b\u53d6\u5f97\u3057\u305f\u65b9\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\u5efa\u7269\u306e\u9ad8\u5ea6\u306e\u60c5\u5831\u306a\u3093\u304b\u306f\u30aa\u30fc\u30d7\u30f3\u30c7\u30fc\u30bf\u304c\u5b58\u5728\u305b\u305a\uff0cGoogle Earth \u4ee5\u5916\u3067\u53d6\u5f97\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u3088\u3046\u306b\u601d\u3044\u307e\u3059\uff0e\n\nJavascript API \u3067\u30af\u30ea\u30c3\u30af\u3057\u305f\u5730\u70b9\u306e\u9ad8\u5ea6\u3092\u53d6\u5f97\n\u307e\u305a\u306f\u3058\u3081\u306b Javascript API \u3092\u7528\u3044\u3066\uff0c\u30d6\u30e9\u30a6\u30b6\u306b Google Earth \u3092\u8868\u793a\u3057\uff0c\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\u305d\u306e\u5730\u70b9\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\u4eca\u56de\u306f\uff0c/path/to/index.html?lat=35.820&lon=139.555 \u306e\u3088\u3046\u306b\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u7def\u5ea6\u7d4c\u5ea6\u3092\u6307\u5b9a\u3059\u308b\u3068\uff0c\u305d\u306e\u5730\u70b9\u3092\u5de6\u4e0a\u3068\u3057\u305f 5km \u00d7 5km \u306e\u5730\u56f3\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\uff0e\u3053\u308c\u304c 1,000px \u00d7 1,000px \u4e0a\u306b\u306e\u308b\u3088\u3046\u306b\u3057\u305f\u306e\u3067\uff0c1px \u3042\u305f\u308a 5m \u3068\u306a\u308a\u307e\u3059\uff0e\n\nindex.html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Google Earth API</title>\n    <style>\n      body { width: 1000px; height: 1000px; margin: 0; }\n      #map3d { height: 100%; }\n    </style>\n  </head>\n  <body>\n    <div id=\"map3d\" />\n    <script src=\"https://www.google.com/jsapi\"></script>\n    <script src=\"map.js\"></script>\n  </body>\n</html>\n\n\n\n\nmap.js\ngoogle.load('earth', '1', { other_params: 'sensor=false' })\n\nconst results = []\n\ngoogle.setOnLoadCallback(() => {\n  google.earth.createInstance('map3d', earth => {\n    earth.getWindow().setVisibility(true)\n    earth.getLayerRoot().enableLayerById(earth.LAYER_BUILDINGS, true)\n\n    // query string \u3092 parse  e.g., /path/to/index.html?lat=35.820&lon=139.555\n    const params = location.search.split('?')[1].split('&')\n    const [lat, lng] = params.map(param => parseFloat(param.split('=')[1]))\n\n    const globe = earth.getGlobe()\n    const lookAt = earth.createLookAt('')\n\n    // \u753b\u9762\u8868\u793a\u7bc4\u56f2 (m)\n    lookAt.setRange(5000)\n\n    // lat, lng \u304c\u753b\u9762\u5de6\u4e0a\u306b\u4f4d\u7f6e\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63 (\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u30bb\u30f3\u30bf\u30fc)\n    lookAt.setLatitude(lat - 0.025844962203145)\n    lookAt.setLongitude(lng + 0.03188911376511783)\n\n    earth.getView().setAbstractView(lookAt)\n\n    // \u30af\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u3092\u8a2d\u5b9a\n    google.earth.addEventListener(globe, 'click', event => {\n      const info = {\n        latitude: event.getLatitude(),\n        longitude: event.getLongitude(),\n        altitude: event.getAltitude()  // \u9ad8\u5ea6\n      }\n      info.groundAltitude = globe.getGroundAltitude(info.latitude, info.longitude)  // \u6d77\u9762\u9ad8\u5ea6\n      console.log(info)\n      results.push(info)\n    })\n  }, () => {\n    console.error('fail!')\n  })\n})\n\n\nGoogle Earth \u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30d6\u30e9\u30a6\u30b6\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u4e0a\u3067\u8868\u793a\u3055\u305b\u3066\u307f\u308b\u3068\uff0c\u4e0b\u56f3\u306e\u3088\u3046\u306b\uff0c\u6307\u5b9a\u3057\u305f\u7def\u5ea6\u7d4c\u5ea6\u3092\u8d77\u70b9\u3068\u3057\u305f\u5730\u56f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff0e\u307e\u305f\uff0c\u5730\u56f3\u306e\u3069\u3053\u304b\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u307f\u308b\u3068\uff0c\u305d\u306e\u5730\u70b9\u306e\u60c5\u5831\u304c\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\nSelenium \u306b\u3088\u308b\u30af\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u306e\u81ea\u52d5\u5316\n\u30af\u30ea\u30c3\u30af\u306b\u3088\u308a\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\uff0c\u6b21\u306f Selenium \u306b 1px \u305a\u3064\u30dd\u30c1\u30dd\u30c1\u3055\u305b\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\u4eca\u56de\u3060\u3068 5m \u3054\u3068\u306b\u9ad8\u5ea6\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u306b\u306a\u308a\uff0c1,000px \u00d7 1,000px \u306a\u306e\u3067 100 \u4e07\u30af\u30ea\u30c3\u30af\u3068\u306a\u308a\u307e\u3059\uff0e\n\ngetAltitude.py\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\nfrom selenium import webdriver\nimport argparse\nimport time\n\ndef main():\n    url = parse_args()\n    browser = webdriver.Firefox()\n    browser.get(url)\n    map_element = browser.find_element_by_id('map3d')\n\n    time.sleep(20)  # Allow google earth plugin while this time\n\n    for x in xrange(1000):\n        for y in xrange(1000):\n            print x, y\n            action = webdriver.common.action_chains.ActionChains(browser)\n            action.move_to_element_with_offset(map_element, x, y).click().perform()\n        results = browser.execute_script(\"return results;\")\n        with open('{}.csv'.format(url.split('?')[1]), 'a') as f:\n            for d in results:\n                f.write('{latitude},{longitude},{altitude},{groundAltitude}\\n'.format(**d))\n        browser.execute_script(\"results = [];\")\n\ndef parse_args():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-u', '--url', type=str, required=True, help='url path')\n    args = parser.parse_args()\n    return args.url\n\nif __name__ == '__main__':\n    main()\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u884c\u3059\u308b\u3068\uff0cFirefox \u304c\u7acb\u3061\u4e0a\u304c\u308a\uff0c20 \u79d2\u5f8c\u306b Selenium \u304c\u30af\u30ea\u30c3\u30af\u3092\u958b\u59cb\u3057\u307e\u3059\uff0e\u3053\u306e 20 \u79d2\u306e\u9593\u306b\uff0cGoogle Earth \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u8a31\u53ef\u3092\u6e08\u307e\u305b\u3066\u4e0b\u3055\u3044\uff0e\u672c\u5f53\u306f PhantomJS \u306a\u3069\u306e\u30d8\u30c3\u30c9\u30ec\u30b9\u306a\u30d6\u30e9\u30a6\u30b6\u7528\u3044\u3066\u30b5\u30fc\u30d0\u4e0a\u3067\u5b9f\u884c\u3055\u305b\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u304c\uff0c\u305d\u308c\u3089\u306b\u306f Google Earth \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u305f\u3081\uff0c\u30ed\u30fc\u30ab\u30eb\u3067\u9811\u5f35\u308a\u307e\u3057\u305f\uff0e\npython getAltitude.py --url /path/to/index.html?lat=35.820\\&lon=139.555\n\n\u5b9f\u884c\u304c\u5b8c\u4e86\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a csv \u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\uff0c\u7def\u5ea6\uff0c\u7d4c\u5ea6\uff0c\u9ad8\u5ea6\uff0c\u6d77\u9762\u9ad8\u5ea6\u306e\u5217\u304c 100 \u4e07\u884c\u305a\u3089\u3063\u3068\u4e26\u3093\u3067\u3044\u307e\u3059\uff0e\n35.8201681437,139.554803147,11.4957876807,11.4957887253\n35.8201160743,139.55480317,11.495894997,11.4958948098\n35.8200640214,139.554803208,11.4960015882,11.4960015454\n35.8200119787,139.55480324,11.4961081794,11.4961079175\n35.8199599214,139.554803282,11.4962147706,11.4962156907\n...\n\n\u6771\u4eac 23 \u533a\u306f 5km \u00d7 5km \u306e\u6b63\u65b9\u5f62 36 \u500b (30km \u00d7 30km \u306e\u6b63\u65b9\u5f62) \u3067\u30ab\u30d0\u30fc\u3067\u304d\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u306e\u3067\uff0c\u3053\u306e\u624b\u9806\u3092\u5404\u533a\u753b\u3067\u304a\u3053\u306a\u3044\uff0c\u8a08 3,600 \u4e07\u306e\u5730\u70b9\u60c5\u5831 (\u7d042GB) \u3092\u5f97\u307e\u3057\u305f\uff0e\n\n\n\u30b7\u30f3\u30b4\u30b8\u30e9\u3068\u540c\u3058\u9ad8\u3055\u306e\u30d3\u30eb\u3092\u53d6\u5f97\n\u6700\u5f8c\u306b\uff0c\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u304b\u3089\u30b7\u30f3\u30b4\u30b8\u30e9\u3068\u540c\u3058\u9ad8\u3055 (118m ~ 119m) \u306e\u30d3\u30eb\u306e\u7def\u5ea6\u7d4c\u5ea6\u3092\u53d6\u5f97\u3057\u307e\u3057\u305f\uff0e\nIn [1]: import csv\n\nIn [2]: for l in csv.reader(open('/path/to/csv')):\n   ...:     if 118 < float(l[2]) - float(l[3]) < 119:\n   ...:         print l[0], l[1]\n\n\u7d04 1,000 \u884c\u306e\u51fa\u529b\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\uff0e5m \u9593\u9694\u3067\u30af\u30ea\u30c3\u30af\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\u540c\u3058\u30d3\u30eb\u3092\u4f55\u56de\u3082\u30dd\u30c1\u30dd\u30c1\u3057\u3066\u3044\u308b\u3082\u306e\u3082\u591a\u304f\uff0c\u30d3\u30eb\u306e\u6570\u306f\u884c\u6570\u3088\u308a\u3082\u305a\u3063\u3068\u5c11\u306a\u3044\u3067\u3059\uff0e\n35.5497718126 139.67314824\n35.5499246984 139.673900422\n35.5498233084 139.673962201\n35.549719274 139.676315323\n35.5498629383 139.676696309\n...\n\n\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u3092\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\uff0c\u3044\u304f\u3064\u304b Google Map \u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u305f\uff0e\n35.6704993 139.7551047: \u5bcc\u56fd\u751f\u547d\u30d3\u30eb\u3068\u3044\u3046\uff0c\u65e5\u6bd4\u8c37\u306b\u3042\u308b 29 \u968e\u5efa\u306e\u5efa\u7269\u3092\u6307\u3057\u3066\u3044\u307e\u3057\u305f\uff0eWikipedia \u306b\u3088\u308b\u3068\u9ad8\u3055 120m \u3068\u66f8\u304b\u308c\u3066\u3044\u305f\u306e\u3067\uff0c\u3060\u3044\u305f\u3044\u30b7\u30f3\u30b4\u30b8\u30e9\u3068\u540c\u3058\u9ad8\u3055\u3067\u3059\u306d\uff0e\n35.6884934,139.6947538: \u30e2\u30ce\u30ea\u30b9\u30d3\u30eb\u3068\u3044\u3046\uff0c\u65b0\u5bbf\u306b\u3042\u308b 30 \u968e\u5efa\u306e\u5efa\u7269\u3067\u3057\u305f\uff0eWikipedia \u306b\u306f 123.35m \u3068\u66f8\u304b\u308c\u3066\u304a\u308a\uff0c\u30b7\u30f3\u30b4\u30b8\u30e9\u3088\u308a\u5c11\u3057\u5927\u304d\u3081\u3067\u3057\u305f\uff0e\u307e\u305f Wikipedia \u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a18\u8ff0\u3082\u3042\u308a\uff0c\u3059\u3067\u306b\u30b4\u30b8\u30e9\u306b\u7834\u58ca\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\uff0e\n\n1991\u5e74\u306b\u516c\u958b\u3055\u308c\u305f\u300e\u30b4\u30b8\u30e9vs\u30ad\u30f3\u30b0\u30ae\u30c9\u30e9\u300f\u3067\u306f\u3001\u30b4\u30b8\u30e9\u306b\u3088\u3063\u3066\u7834\u58ca\u3055\u308c\u308b\u30b7\u30fc\u30f3\u304c\u63cf\u304b\u308c\u305f\u3002\n\n\u6771\u4eac\u306b\u6765\u3066\u307e\u3060\u65e5\u304c\u6d45\u304f\uff0c\u77e5\u3089\u306a\u3044\u5efa\u7269\u304c\u591a\u304b\u3063\u305f\u305f\u3081\uff0c\u7d50\u679c\u3092\u898b\u3066\u3082\u3042\u307e\u308a\u30a4\u30e1\u30fc\u30b8\u306f\u6df1\u307e\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u304c\uff0c\u3060\u3044\u305f\u3044 30 \u968e\u5efa\u306e\u30d3\u30eb\u3068\u540c\u3058\u9ad8\u3055\u3067\u3042\u308b\u3053\u3068\u306f\u5206\u304b\u308a\uff0c\u30b7\u30f3\u30b4\u30b8\u30e9\u306f\u300c\u305d\u3053\u305d\u3053\u3067\u304b\u3044\u300d\u3068\u3044\u3046\u77e5\u898b\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\uff0e\n\n\u30b7\u30f3\u30b4\u30b8\u30e9\uff0c\u3059\u3054\u3044\u8feb\u529b\u3067\u3059\u306d\uff0e118.5m \u3082\u3042\u308b\u305d\u3046\u3067\u3059\uff0e\u305f\u3060\u4e00\u65b9\u3067\uff0c\u9ad8\u5c64\u30d3\u30eb\u304c\u7acb\u3061\u4e26\u3076\u6771\u4eac\u306b\u304a\u3044\u3066\u306f\uff0c\u305d\u308c\u3092\u8d85\u3048\u308b\u9ad8\u3055\u306e\u30d3\u30eb\u306f\u6ca2\u5c71\u3042\u308a\u307e\u3059\uff0e\u6771\u4eac\u30df\u30c3\u30c9\u30bf\u30a6\u30f3\u306a\u3093\u304b\u306f 248m \u3042\u308b\u3088\u3046\u3067\uff0c\u3082\u306f\u3084\u30b7\u30f3\u30b4\u30b8\u30e9\u306f\u305d\u306e\u534a\u5206\u306e\u5927\u304d\u3055\u3059\u3089\u3042\u308a\u307e\u305b\u3093\uff0e\n\n\u30b7\u30f3\u30b4\u30b8\u30e9\u306f\u679c\u305f\u3057\u3066\u5927\u304d\u3044\u306e\u304b\u5c0f\u3055\u3044\u306e\u304b\uff0e\u4f55\u3060\u304b\u3088\u304f\u5206\u304b\u3089\u306a\u304f\u306a\u3063\u3066\u304d\u305f\u306e\u3067\uff0c\u3069\u308c\u304f\u3089\u3044\u5927\u304d\u3044\u306e\u304b\u30a4\u30e1\u30fc\u30b8\u3092\u308f\u304b\u305b\u308b\u305f\u3081\u306b\uff0cGoogle Earth API \u3068 Selenium \u3092\u7528\u3044\u3066\u6771\u4eac 23 \u533a\u5185\u3067\u540c\u3058\u9ad8\u3055\u306e\u30d3\u30eb\u3092\u63a2\u3057\u3066\u307f\u307e\u3057\u305f\uff0e\n\n## Google Earth \n\n![midtown.png](https://qiita-image-store.s3.amazonaws.com/0/7113/d6fc0a51-ee1d-8354-ab99-c73a82cdc72f.png \"midtown.png\")\n\n\n\u4e0a\u306e\u753b\u50cf\u306f Google Earth \u306b\u3066\uff0c\u6771\u4eac\u30df\u30c3\u30c9\u30bf\u30a6\u30f3\u306b\u30ab\u30fc\u30bd\u30eb\u3092\u3042\u308f\u305b\u305f\u969b\u306e\u3082\u306e\u3067\u3059\uff0e\u4e0b\u90e8\u306b\uff0c\u7def\u5ea6\u7d4c\u5ea6\u306b\u52a0\u3048\u3066\u6a19\u9ad8 (269m) \u304c\u8868\u793a\u3055\u308c\u3066\u304a\u308a\uff0c\u3053\u308c\u304b\u3089\u6d77\u9762\u9ad8\u5ea6\u3092\u5f15\u3044\u305f\u3082\u306e\u304c\uff0c\u305d\u306e\u5efa\u7269\u306e\u9ad8\u3055\u306b\u306a\u308a\u307e\u3059\uff0eGoogle Earth \u3067\u306f\uff0c\u822a\u7a7a\u5199\u771f\u6e2c\u91cf\u3068\u3044\u3046\u6280\u8853\u3092\u7528\u3044\u3066\u4e16\u754c\u4e2d\u306e\u5efa\u7269\u306e\u9ad8\u5ea6\u3092\u6c42\u3081\u3066\u3044\u307e\u3059\uff0e\n\nGoogle Earth \u306b\u306f Web API \u306f\u3042\u308a\u307e\u305b\u3093\u304c [Javascript API](https://developers.google.com/earth/) \u304c\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\uff0c\u30a4\u30d9\u30f3\u30c8\u7d4c\u7531\u3067\u305d\u306e\u5730\u70b9\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u672c API \u306f\u73fe\u5728 Depricated \u3067\u3042\u308a\uff0c2016 \u5e74\u672b\u3067\u63d0\u4f9b\u7d42\u4e86\u3055\u308c\u308b\u306e\u3067\uff0c\u30c7\u30fc\u30bf\u3092\u5229\u7528\u3055\u308c\u308b\u65b9\u306f\u65e9\u3081\u306b\u53d6\u5f97\u3057\u305f\u65b9\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\u5efa\u7269\u306e\u9ad8\u5ea6\u306e\u60c5\u5831\u306a\u3093\u304b\u306f\u30aa\u30fc\u30d7\u30f3\u30c7\u30fc\u30bf\u304c\u5b58\u5728\u305b\u305a\uff0cGoogle Earth \u4ee5\u5916\u3067\u53d6\u5f97\u3059\u308b\u306e\u306f\u96e3\u3057\u3044\u3088\u3046\u306b\u601d\u3044\u307e\u3059\uff0e\n\n## Javascript API \u3067\u30af\u30ea\u30c3\u30af\u3057\u305f\u5730\u70b9\u306e\u9ad8\u5ea6\u3092\u53d6\u5f97\n\n\u307e\u305a\u306f\u3058\u3081\u306b Javascript API \u3092\u7528\u3044\u3066\uff0c\u30d6\u30e9\u30a6\u30b6\u306b Google Earth \u3092\u8868\u793a\u3057\uff0c\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\u305d\u306e\u5730\u70b9\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\u4eca\u56de\u306f\uff0c```/path/to/index.html?lat=35.820&lon=139.555``` \u306e\u3088\u3046\u306b\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u7def\u5ea6\u7d4c\u5ea6\u3092\u6307\u5b9a\u3059\u308b\u3068\uff0c\u305d\u306e\u5730\u70b9\u3092\u5de6\u4e0a\u3068\u3057\u305f 5km \u00d7 5km \u306e\u5730\u56f3\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\uff0e\u3053\u308c\u304c 1,000px \u00d7 1,000px \u4e0a\u306b\u306e\u308b\u3088\u3046\u306b\u3057\u305f\u306e\u3067\uff0c1px \u3042\u305f\u308a 5m \u3068\u306a\u308a\u307e\u3059\uff0e\n\n```html:index.html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Google Earth API</title>\n    <style>\n      body { width: 1000px; height: 1000px; margin: 0; }\n      #map3d { height: 100%; }\n    </style>\n  </head>\n  <body>\n    <div id=\"map3d\" />\n    <script src=\"https://www.google.com/jsapi\"></script>\n    <script src=\"map.js\"></script>\n  </body>\n</html>\n\n```\n\n```javascript:map.js\ngoogle.load('earth', '1', { other_params: 'sensor=false' })\n\nconst results = []\n\ngoogle.setOnLoadCallback(() => {\n  google.earth.createInstance('map3d', earth => {\n    earth.getWindow().setVisibility(true)\n    earth.getLayerRoot().enableLayerById(earth.LAYER_BUILDINGS, true)\n\n    // query string \u3092 parse  e.g., /path/to/index.html?lat=35.820&lon=139.555\n    const params = location.search.split('?')[1].split('&')\n    const [lat, lng] = params.map(param => parseFloat(param.split('=')[1]))\n    \n    const globe = earth.getGlobe()\n    const lookAt = earth.createLookAt('')\n\n    // \u753b\u9762\u8868\u793a\u7bc4\u56f2 (m)\n    lookAt.setRange(5000)\n\n    // lat, lng \u304c\u753b\u9762\u5de6\u4e0a\u306b\u4f4d\u7f6e\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63 (\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u30bb\u30f3\u30bf\u30fc)\n    lookAt.setLatitude(lat - 0.025844962203145)\n    lookAt.setLongitude(lng + 0.03188911376511783)\n\n    earth.getView().setAbstractView(lookAt)\n\n    // \u30af\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u3092\u8a2d\u5b9a\n    google.earth.addEventListener(globe, 'click', event => {\n      const info = {\n        latitude: event.getLatitude(),\n        longitude: event.getLongitude(),\n        altitude: event.getAltitude()  // \u9ad8\u5ea6\n      }\n      info.groundAltitude = globe.getGroundAltitude(info.latitude, info.longitude)  // \u6d77\u9762\u9ad8\u5ea6\n      console.log(info)\n      results.push(info)\n    })\n  }, () => {\n    console.error('fail!')\n  })\n})\n```\n\nGoogle Earth \u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30d6\u30e9\u30a6\u30b6\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u4e0a\u3067\u8868\u793a\u3055\u305b\u3066\u307f\u308b\u3068\uff0c\u4e0b\u56f3\u306e\u3088\u3046\u306b\uff0c\u6307\u5b9a\u3057\u305f\u7def\u5ea6\u7d4c\u5ea6\u3092\u8d77\u70b9\u3068\u3057\u305f\u5730\u56f3\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff0e\u307e\u305f\uff0c\u5730\u56f3\u306e\u3069\u3053\u304b\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u307f\u308b\u3068\uff0c\u305d\u306e\u5730\u70b9\u306e\u60c5\u5831\u304c\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-08-21 0.30.27.png](https://qiita-image-store.s3.amazonaws.com/0/7113/b7ea9ac9-8e0d-e10d-5dd9-efd2acd3f4ab.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-08-21 0.30.27.png\")\n\n## Selenium \u306b\u3088\u308b\u30af\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u306e\u81ea\u52d5\u5316\n\n\u30af\u30ea\u30c3\u30af\u306b\u3088\u308a\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\uff0c\u6b21\u306f Selenium \u306b 1px \u305a\u3064\u30dd\u30c1\u30dd\u30c1\u3055\u305b\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\u4eca\u56de\u3060\u3068 5m \u3054\u3068\u306b\u9ad8\u5ea6\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u306b\u306a\u308a\uff0c1,000px \u00d7 1,000px \u306a\u306e\u3067 100 \u4e07\u30af\u30ea\u30c3\u30af\u3068\u306a\u308a\u307e\u3059\uff0e\n\n```py:getAltitude.py\n#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\nfrom selenium import webdriver\nimport argparse\nimport time\n\ndef main():\n    url = parse_args()\n    browser = webdriver.Firefox()\n    browser.get(url)\n    map_element = browser.find_element_by_id('map3d')\n\n    time.sleep(20)  # Allow google earth plugin while this time\n\n    for x in xrange(1000):\n        for y in xrange(1000):\n            print x, y\n            action = webdriver.common.action_chains.ActionChains(browser)\n            action.move_to_element_with_offset(map_element, x, y).click().perform()\n        results = browser.execute_script(\"return results;\")\n        with open('{}.csv'.format(url.split('?')[1]), 'a') as f:\n            for d in results:\n                f.write('{latitude},{longitude},{altitude},{groundAltitude}\\n'.format(**d))\n        browser.execute_script(\"results = [];\")\n\ndef parse_args():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('-u', '--url', type=str, required=True, help='url path')\n    args = parser.parse_args()\n    return args.url\n\nif __name__ == '__main__':\n    main()\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u884c\u3059\u308b\u3068\uff0cFirefox \u304c\u7acb\u3061\u4e0a\u304c\u308a\uff0c20 \u79d2\u5f8c\u306b Selenium \u304c\u30af\u30ea\u30c3\u30af\u3092\u958b\u59cb\u3057\u307e\u3059\uff0e\u3053\u306e 20 \u79d2\u306e\u9593\u306b\uff0cGoogle Earth \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u8a31\u53ef\u3092\u6e08\u307e\u305b\u3066\u4e0b\u3055\u3044\uff0e\u672c\u5f53\u306f PhantomJS \u306a\u3069\u306e\u30d8\u30c3\u30c9\u30ec\u30b9\u306a\u30d6\u30e9\u30a6\u30b6\u7528\u3044\u3066\u30b5\u30fc\u30d0\u4e0a\u3067\u5b9f\u884c\u3055\u305b\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u304c\uff0c\u305d\u308c\u3089\u306b\u306f Google Earth \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u305f\u3081\uff0c\u30ed\u30fc\u30ab\u30eb\u3067\u9811\u5f35\u308a\u307e\u3057\u305f\uff0e\n\n```\npython getAltitude.py --url /path/to/index.html?lat=35.820\\&lon=139.555\n```\n\n\u5b9f\u884c\u304c\u5b8c\u4e86\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a csv \u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\uff0c\u7def\u5ea6\uff0c\u7d4c\u5ea6\uff0c\u9ad8\u5ea6\uff0c\u6d77\u9762\u9ad8\u5ea6\u306e\u5217\u304c 100 \u4e07\u884c\u305a\u3089\u3063\u3068\u4e26\u3093\u3067\u3044\u307e\u3059\uff0e\n\n```\n35.8201681437,139.554803147,11.4957876807,11.4957887253\n35.8201160743,139.55480317,11.495894997,11.4958948098\n35.8200640214,139.554803208,11.4960015882,11.4960015454\n35.8200119787,139.55480324,11.4961081794,11.4961079175\n35.8199599214,139.554803282,11.4962147706,11.4962156907\n...\n```\n\n\u6771\u4eac 23 \u533a\u306f 5km \u00d7 5km \u306e\u6b63\u65b9\u5f62 36 \u500b (30km \u00d7 30km \u306e\u6b63\u65b9\u5f62) \u3067\u30ab\u30d0\u30fc\u3067\u304d\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u306e\u3067\uff0c\u3053\u306e\u624b\u9806\u3092\u5404\u533a\u753b\u3067\u304a\u3053\u306a\u3044\uff0c\u8a08 3,600 \u4e07\u306e\u5730\u70b9\u60c5\u5831 (\u7d042GB) \u3092\u5f97\u307e\u3057\u305f\uff0e\n\n![23wards.png](https://qiita-image-store.s3.amazonaws.com/0/7113/6320a316-ea82-f555-5e08-f5ad8599348a.png \"23wards.png\")\n\n## \u30b7\u30f3\u30b4\u30b8\u30e9\u3068\u540c\u3058\u9ad8\u3055\u306e\u30d3\u30eb\u3092\u53d6\u5f97\n\n\u6700\u5f8c\u306b\uff0c\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u304b\u3089\u30b7\u30f3\u30b4\u30b8\u30e9\u3068\u540c\u3058\u9ad8\u3055 (118m ~ 119m) \u306e\u30d3\u30eb\u306e\u7def\u5ea6\u7d4c\u5ea6\u3092\u53d6\u5f97\u3057\u307e\u3057\u305f\uff0e\n\n```py\nIn [1]: import csv\n\nIn [2]: for l in csv.reader(open('/path/to/csv')):\n   ...:     if 118 < float(l[2]) - float(l[3]) < 119:\n   ...:         print l[0], l[1]\n```\n\n\u7d04 1,000 \u884c\u306e\u51fa\u529b\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\uff0e5m \u9593\u9694\u3067\u30af\u30ea\u30c3\u30af\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\u540c\u3058\u30d3\u30eb\u3092\u4f55\u56de\u3082\u30dd\u30c1\u30dd\u30c1\u3057\u3066\u3044\u308b\u3082\u306e\u3082\u591a\u304f\uff0c\u30d3\u30eb\u306e\u6570\u306f\u884c\u6570\u3088\u308a\u3082\u305a\u3063\u3068\u5c11\u306a\u3044\u3067\u3059\uff0e\n\n```\n35.5497718126 139.67314824\n35.5499246984 139.673900422\n35.5498233084 139.673962201\n35.549719274 139.676315323\n35.5498629383 139.676696309\n...\n```\n\n\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u3092\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\uff0c\u3044\u304f\u3064\u304b Google Map \u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u305f\uff0e\n\n```35.6704993 139.7551047```: \u5bcc\u56fd\u751f\u547d\u30d3\u30eb\u3068\u3044\u3046\uff0c\u65e5\u6bd4\u8c37\u306b\u3042\u308b 29 \u968e\u5efa\u306e\u5efa\u7269\u3092\u6307\u3057\u3066\u3044\u307e\u3057\u305f\uff0eWikipedia \u306b\u3088\u308b\u3068\u9ad8\u3055 120m \u3068\u66f8\u304b\u308c\u3066\u3044\u305f\u306e\u3067\uff0c\u3060\u3044\u305f\u3044\u30b7\u30f3\u30b4\u30b8\u30e9\u3068\u540c\u3058\u9ad8\u3055\u3067\u3059\u306d\uff0e\n\n```35.6884934,139.6947538```: \u30e2\u30ce\u30ea\u30b9\u30d3\u30eb\u3068\u3044\u3046\uff0c\u65b0\u5bbf\u306b\u3042\u308b 30 \u968e\u5efa\u306e\u5efa\u7269\u3067\u3057\u305f\uff0eWikipedia \u306b\u306f 123.35m \u3068\u66f8\u304b\u308c\u3066\u304a\u308a\uff0c\u30b7\u30f3\u30b4\u30b8\u30e9\u3088\u308a\u5c11\u3057\u5927\u304d\u3081\u3067\u3057\u305f\uff0e\u307e\u305f Wikipedia \u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a18\u8ff0\u3082\u3042\u308a\uff0c\u3059\u3067\u306b\u30b4\u30b8\u30e9\u306b\u7834\u58ca\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\uff0e\n\n>1991\u5e74\u306b\u516c\u958b\u3055\u308c\u305f\u300e\u30b4\u30b8\u30e9vs\u30ad\u30f3\u30b0\u30ae\u30c9\u30e9\u300f\u3067\u306f\u3001\u30b4\u30b8\u30e9\u306b\u3088\u3063\u3066\u7834\u58ca\u3055\u308c\u308b\u30b7\u30fc\u30f3\u304c\u63cf\u304b\u308c\u305f\u3002\n\n\u6771\u4eac\u306b\u6765\u3066\u307e\u3060\u65e5\u304c\u6d45\u304f\uff0c\u77e5\u3089\u306a\u3044\u5efa\u7269\u304c\u591a\u304b\u3063\u305f\u305f\u3081\uff0c\u7d50\u679c\u3092\u898b\u3066\u3082\u3042\u307e\u308a\u30a4\u30e1\u30fc\u30b8\u306f\u6df1\u307e\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u304c\uff0c\u3060\u3044\u305f\u3044 30 \u968e\u5efa\u306e\u30d3\u30eb\u3068\u540c\u3058\u9ad8\u3055\u3067\u3042\u308b\u3053\u3068\u306f\u5206\u304b\u308a\uff0c\u30b7\u30f3\u30b4\u30b8\u30e9\u306f\u300c\u305d\u3053\u305d\u3053\u3067\u304b\u3044\u300d\u3068\u3044\u3046\u77e5\u898b\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\uff0e\n", "tags": ["GoogleMapsAPI", "Python", "Selenium", "JavaScript"]}