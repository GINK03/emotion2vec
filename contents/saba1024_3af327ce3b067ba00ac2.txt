{"context": "\n\n\u6982\u8981\nGroovy\u306fJava\u306a\u306e\u3067\u3001\u5f53\u7136Java8\u304b\u3089\u5c0e\u5165\u3055\u308c\u305fOptional\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\nJava8\u306e\u65b0\u6a5f\u80fd\u3092\u3042\u307e\u308a\u52c9\u5f37\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u4eca\u56deOptional\u3092Groovy\u304b\u3089\u4f7f\u3063\u3066\u52c9\u5f37\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001Groovy\u304b\u3089Java8\u306eOptional\u3068\u304bStream\u3092\u4f7f\u3046\u65e8\u5473\u306f\u3042\u307e\u308a\u306a\u3044\u304b\u306a\u3001\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u3002\n\u307e\u305f\u3001\u6050\u3089\u304f\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u306e\u7d61\u307f\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001Groovy\u304b\u3089\u3067\u306f\u5229\u7528\u3067\u304d\u306a\u3044\u7d44\u307f\u5408\u308f\u305b\u306a\u3069\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\u307e\u305f\u3001\u307e\u3060\u3061\u3083\u3093\u3068Java8\u306eOptional\u3092\u52c9\u5f37\u3057\u305f\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u3082\u3063\u3068\u52b9\u7387\u7684\u306a\u66f8\u304d\u65b9\u306a\u3069\u3042\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u3002\n\u3082\u3057\u4f55\u304b\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u3067\u6559\u3048\u3066\u3044\u3066\u3060\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n\u30e1\u30e2\uff1aOptional\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001\u8981\u7d20\u304c0\u500b\u304b1\u500b\u3057\u304b\u7121\u3044\u30b5\u30a4\u30ba\u304c\u56fa\u5b9a\u3055\u308c\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3060\u3068\u8003\u3048\u308b\u3068\u7406\u89e3\u3057\u3084\u3059\u3044\u3002\n\n\u57fa\u672c\n// Optional\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\nOptional<String> hogeOpt = Optional.ofNullable(\"a\")\n\n// \u5024\u306e\u53d6\u308a\u51fa\u3057\u65b9\u6cd5\nassert \"aaa\" == Optional.ofNullable(\"aaa\").orElse(\"bbb\")\nassert \"bbb\" == Optional.ofNullable(null).orElse(\"bbb\")\nassert \"bbb\" == Optional.ofNullable(null).orElseGet({-> \"bbb\"})\n\n// Optional\u304cnull\u3058\u3083\u306a\u3044\u5834\u5408\u306b\u306e\u307f\u51e6\u7406\u3092\u3059\u308b\nhogeOpt.ifPresent{hoge-> println hoge.length()}\n\n//Optional\u304cnull\u3058\u3083\u306a\u3044\u5834\u5408\u306b\u51e6\u7406\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u8fd4\u3059\uff08\u7d50\u679c\u306f\u81ea\u52d5\u7684\u306bOptional\u578b\u306b\u30e9\u30c3\u30d7\u3055\u308c\u308b\uff09\nOptional<Integer> lengthOpt = hogeOpt.map{hoge -> hoge.length()}\nprintln lengthOpt\n\n// map\u3092\u4f7f\u3046\u3068\u3001Optional\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5024\u304c\u5909\u5316\u3059\u308b\u3002Optional\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5024\u304c\u3001\u3042\u308b\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u305d\u306eOptional\u81ea\u4f53\u304c\u305d\u306e\u307e\u307e\u6b32\u3057\u3044\u5834\u5408\u306ffilter\u3092\u5229\u7528\u3059\u308b\u3002\n// \u901a\u5e38\u306a\u3089 if(obj.length()>10)\u307f\u305f\u3044\u306a\u51e6\u7406\u304cif\u306e\u6761\u4ef6\u306b\u5165\u308b\u304c\u3001obj\u304cNull\u306a\u5834\u5408\u304c\u3042\u308b\u3002\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306bfilter\u3092\u5229\u7528\u3059\u308b\u3002\n// \u306a\u304a\u3001\u6761\u4ef6\u306b\u5408\u81f4\u3057\u306a\u3044\u5834\u5408\u306f\u623b\u308a\u5024\u306fOptional.empty()\u306b\u306a\u308b\nassert Optional.empty() == Optional.ofNullable(null).filter{it.length() > 2}\nassert Optional.empty() == Optional.ofNullable(\"ab\").filter{it.length() > 2}\nassert Optional.empty() != Optional.ofNullable(\"abc\").filter{it.length() > 2}\nassert Optional.ofNullable(\"abc\") == Optional.ofNullable(\"abc\").filter{it.length() > 2} // map\u3068\u9055\u3044\u3001\u623b\u308a\u5024\u306f\u540c\u3058\u306b\u306a\u308b\u3053\u3068\u304c\u89e3\u308b\u3002\n\n// \u5177\u4f53\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u306b\u306a\u308b\u306e\u3067\u306f\uff1f\n// \u6210\u4eba\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3059\u308b\u3002DB\u304b\u3089\u30e6\u30fc\u30b6\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3001\u305d\u306eage\u30d7\u30ed\u30d1\u30c6\u30a3\u306fnull\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\ndef userObject = [age:null, \"name\":\"koji\"]\nOptional<Integer> age = Optional.ofNullable(userObject.age)\nif (age.filter({it >= 20}) != Optional.empty()) {\n    println \"adult!\"\n} else {\n    println \"child or null!\"\n}\n\n\n\n// Scala\u306ecase\u306e\u3088\u3046\u306b\u7c21\u6f54\u3067\u306f\u306a\u3044\u3051\u3069\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bempty\u304c\u305d\u308c\u4ee5\u5916\u3067\u51e6\u7406\u3092\u5207\u308a\u5206\u3051\u308b\u3053\u3068\u3082\u51fa\u6765\u308b\u3002\n\nswitch(lengthOpt) {\n    case Optional.empty():\n        println \"ng\"\n        break\n    case Optional:\n        println \"ok\"\n        break        \n}\n\n\n\n\u3082\u3063\u3068\u5177\u4f53\u7684\u306a\u30b5\u30f3\u30d7\u30eb\n// \u5076\u6570\u3060\u3051\u62bd\u51fa\u3057\u3066\u3001\u3055\u3089\u306b\u305d\u308c\u305e\u308c\u306e\u5024\u30922\u500d\u3057\u3066\u3001\u305d\u306e\u5408\u8a08\u3092\u6c42\u3081\u308b\u3002\u307e\u305f\u3001\u6570\u5b57\u306fString\u3068\u3057\u3066\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3002\n// \u30ea\u30b9\u30c8\u306e\u6271\u3044\u306fGroovy\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u305f\u3002\nassert [\"10\", \"-1\", \"2\", \"3\", \"-3\", null, \"-10\", \"2\"].collect {\n    Optional.ofNullable(it) // Optional\u306b\u5305\u3080\n}.collect { // \u5909\u63db\n    it.map {it.toInteger()} // String\u304b\u3089Integer\u306b\u5909\u63db\u3002null\u304c\u3042\u308b\u306e\u306bNullPointerException\u304c\u767a\u751f\u3057\u306a\u3044\uff01\n}.collect { // \u5909\u63db\u3068\u62bd\u51fa\n    it.filter{ it % 2 == 0 && it > 0}\n}.collect {\n    it.map{it*2}\n}.collect{\n    it.orElse(0)\n}.sum() == 28\n\n// \u540c\u3058\u6761\u4ef6\u3067\u3001Java8\u306eStream\u3092\u4f7f\u3063\u3066\u307f\u308b\n// \u305f\u3060\u3057\u3001Groovy\u304b\u3089\u3060\u3068\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u306e\u554f\u984c\u3067reduce\u304c\u4f7f\u3048\u306a\u3044\u3063\u307d\u3044\nassert [\"10\", \"-1\", \"2\", \"3\", \"-3\", null, \"-10\", \"2\"].stream().map {\n    Optional.ofNullable(it) // Optional\u306b\u5305\u3080\n}.map { // \u5909\u63db\n    it.map {it.toInteger()} // String\u304b\u3089Integer\u306b\u5909\u63db\u3002null\u304c\u3042\u308b\u306e\u306bNullPointerException\u304c\u767a\u751f\u3057\u306a\u3044\uff01\n}.filter { // \u5909\u63db\u3068\u62bd\u51fa\u3002Optional.empty()\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3082\u500b\u6642\u70b9\u3067\u9664\u5916\u3055\u308c\u308b\n    it.filter{ it % 2 == 0 && it > 0}.isPresent()\n}.map {\n    it.map{it*2}\n}.collect {\n    it.orElse(0)\n}.sum() == 28\n\n// \u540c\u3058\u6761\u4ef6\u3092\u666e\u6bb5\u306e\u81ea\u5206\u304cGroovy\u3067\u66f8\u3044\u3066\u3044\u308b\u30b9\u30bf\u30a4\u30eb\u3067\u3002\n[\"10\", \"-1\", \"2\", \"3\", \"-3\", null, \"-10\", \"2\"].collect {\n    it?.toInteger()\n}.findAll {\n    (it?:0) % 2 == 0 && it > 0\n}.collect {\n    it * 2\n}.sum()\n\n# \u6982\u8981\n\nGroovy\u306fJava\u306a\u306e\u3067\u3001\u5f53\u7136Java8\u304b\u3089\u5c0e\u5165\u3055\u308c\u305fOptional\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\nJava8\u306e\u65b0\u6a5f\u80fd\u3092\u3042\u307e\u308a\u52c9\u5f37\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u4eca\u56deOptional\u3092Groovy\u304b\u3089\u4f7f\u3063\u3066\u52c9\u5f37\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001Groovy\u304b\u3089Java8\u306eOptional\u3068\u304bStream\u3092\u4f7f\u3046\u65e8\u5473\u306f\u3042\u307e\u308a\u306a\u3044\u304b\u306a\u3001\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u3002\n\u307e\u305f\u3001\u6050\u3089\u304f\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u306e\u7d61\u307f\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001Groovy\u304b\u3089\u3067\u306f\u5229\u7528\u3067\u304d\u306a\u3044\u7d44\u307f\u5408\u308f\u305b\u306a\u3069\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u307e\u3060\u3061\u3083\u3093\u3068Java8\u306eOptional\u3092\u52c9\u5f37\u3057\u305f\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u3082\u3063\u3068\u52b9\u7387\u7684\u306a\u66f8\u304d\u65b9\u306a\u3069\u3042\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u3002\n\u3082\u3057\u4f55\u304b\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u3067\u6559\u3048\u3066\u3044\u3066\u3060\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n\n\u30e1\u30e2\uff1a**Optional\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001\u8981\u7d20\u304c0\u500b\u304b1\u500b\u3057\u304b\u7121\u3044\u30b5\u30a4\u30ba\u304c\u56fa\u5b9a\u3055\u308c\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3060\u3068\u8003\u3048\u308b\u3068\u7406\u89e3\u3057\u3084\u3059\u3044\u3002**\n\n# \u57fa\u672c\n```groovy\n// Optional\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\nOptional<String> hogeOpt = Optional.ofNullable(\"a\")\n\n// \u5024\u306e\u53d6\u308a\u51fa\u3057\u65b9\u6cd5\nassert \"aaa\" == Optional.ofNullable(\"aaa\").orElse(\"bbb\")\nassert \"bbb\" == Optional.ofNullable(null).orElse(\"bbb\")\nassert \"bbb\" == Optional.ofNullable(null).orElseGet({-> \"bbb\"})\n\n// Optional\u304cnull\u3058\u3083\u306a\u3044\u5834\u5408\u306b\u306e\u307f\u51e6\u7406\u3092\u3059\u308b\nhogeOpt.ifPresent{hoge-> println hoge.length()}\n\n//Optional\u304cnull\u3058\u3083\u306a\u3044\u5834\u5408\u306b\u51e6\u7406\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u8fd4\u3059\uff08\u7d50\u679c\u306f\u81ea\u52d5\u7684\u306bOptional\u578b\u306b\u30e9\u30c3\u30d7\u3055\u308c\u308b\uff09\nOptional<Integer> lengthOpt = hogeOpt.map{hoge -> hoge.length()}\nprintln lengthOpt\n\n// map\u3092\u4f7f\u3046\u3068\u3001Optional\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5024\u304c\u5909\u5316\u3059\u308b\u3002Optional\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u5024\u304c\u3001\u3042\u308b\u6761\u4ef6\u3092\u6e80\u305f\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u305d\u306eOptional\u81ea\u4f53\u304c\u305d\u306e\u307e\u307e\u6b32\u3057\u3044\u5834\u5408\u306ffilter\u3092\u5229\u7528\u3059\u308b\u3002\n// \u901a\u5e38\u306a\u3089 if(obj.length()>10)\u307f\u305f\u3044\u306a\u51e6\u7406\u304cif\u306e\u6761\u4ef6\u306b\u5165\u308b\u304c\u3001obj\u304cNull\u306a\u5834\u5408\u304c\u3042\u308b\u3002\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306bfilter\u3092\u5229\u7528\u3059\u308b\u3002\n// \u306a\u304a\u3001\u6761\u4ef6\u306b\u5408\u81f4\u3057\u306a\u3044\u5834\u5408\u306f\u623b\u308a\u5024\u306fOptional.empty()\u306b\u306a\u308b\nassert Optional.empty() == Optional.ofNullable(null).filter{it.length() > 2}\nassert Optional.empty() == Optional.ofNullable(\"ab\").filter{it.length() > 2}\nassert Optional.empty() != Optional.ofNullable(\"abc\").filter{it.length() > 2}\nassert Optional.ofNullable(\"abc\") == Optional.ofNullable(\"abc\").filter{it.length() > 2} // map\u3068\u9055\u3044\u3001\u623b\u308a\u5024\u306f\u540c\u3058\u306b\u306a\u308b\u3053\u3068\u304c\u89e3\u308b\u3002\n\n// \u5177\u4f53\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u306b\u306a\u308b\u306e\u3067\u306f\uff1f\n// \u6210\u4eba\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3059\u308b\u3002DB\u304b\u3089\u30e6\u30fc\u30b6\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3001\u305d\u306eage\u30d7\u30ed\u30d1\u30c6\u30a3\u306fnull\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\ndef userObject = [age:null, \"name\":\"koji\"]\nOptional<Integer> age = Optional.ofNullable(userObject.age)\nif (age.filter({it >= 20}) != Optional.empty()) {\n    println \"adult!\"\n} else {\n    println \"child or null!\"\n}\n\n\n\n// Scala\u306ecase\u306e\u3088\u3046\u306b\u7c21\u6f54\u3067\u306f\u306a\u3044\u3051\u3069\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bempty\u304c\u305d\u308c\u4ee5\u5916\u3067\u51e6\u7406\u3092\u5207\u308a\u5206\u3051\u308b\u3053\u3068\u3082\u51fa\u6765\u308b\u3002\n\nswitch(lengthOpt) {\n    case Optional.empty():\n        println \"ng\"\n        break\n    case Optional:\n        println \"ok\"\n        break        \n}\n\n```\n\n# \u3082\u3063\u3068\u5177\u4f53\u7684\u306a\u30b5\u30f3\u30d7\u30eb\n\n```groovy\n// \u5076\u6570\u3060\u3051\u62bd\u51fa\u3057\u3066\u3001\u3055\u3089\u306b\u305d\u308c\u305e\u308c\u306e\u5024\u30922\u500d\u3057\u3066\u3001\u305d\u306e\u5408\u8a08\u3092\u6c42\u3081\u308b\u3002\u307e\u305f\u3001\u6570\u5b57\u306fString\u3068\u3057\u3066\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u3002\n// \u30ea\u30b9\u30c8\u306e\u6271\u3044\u306fGroovy\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u305f\u3002\nassert [\"10\", \"-1\", \"2\", \"3\", \"-3\", null, \"-10\", \"2\"].collect {\n    Optional.ofNullable(it) // Optional\u306b\u5305\u3080\n}.collect { // \u5909\u63db\n    it.map {it.toInteger()} // String\u304b\u3089Integer\u306b\u5909\u63db\u3002null\u304c\u3042\u308b\u306e\u306bNullPointerException\u304c\u767a\u751f\u3057\u306a\u3044\uff01\n}.collect { // \u5909\u63db\u3068\u62bd\u51fa\n    it.filter{ it % 2 == 0 && it > 0}\n}.collect {\n    it.map{it*2}\n}.collect{\n    it.orElse(0)\n}.sum() == 28\n\n// \u540c\u3058\u6761\u4ef6\u3067\u3001Java8\u306eStream\u3092\u4f7f\u3063\u3066\u307f\u308b\n// \u305f\u3060\u3057\u3001Groovy\u304b\u3089\u3060\u3068\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u306e\u554f\u984c\u3067reduce\u304c\u4f7f\u3048\u306a\u3044\u3063\u307d\u3044\nassert [\"10\", \"-1\", \"2\", \"3\", \"-3\", null, \"-10\", \"2\"].stream().map {\n    Optional.ofNullable(it) // Optional\u306b\u5305\u3080\n}.map { // \u5909\u63db\n    it.map {it.toInteger()} // String\u304b\u3089Integer\u306b\u5909\u63db\u3002null\u304c\u3042\u308b\u306e\u306bNullPointerException\u304c\u767a\u751f\u3057\u306a\u3044\uff01\n}.filter { // \u5909\u63db\u3068\u62bd\u51fa\u3002Optional.empty()\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3082\u500b\u6642\u70b9\u3067\u9664\u5916\u3055\u308c\u308b\n    it.filter{ it % 2 == 0 && it > 0}.isPresent()\n}.map {\n    it.map{it*2}\n}.collect {\n    it.orElse(0)\n}.sum() == 28\n\n// \u540c\u3058\u6761\u4ef6\u3092\u666e\u6bb5\u306e\u81ea\u5206\u304cGroovy\u3067\u66f8\u3044\u3066\u3044\u308b\u30b9\u30bf\u30a4\u30eb\u3067\u3002\n[\"10\", \"-1\", \"2\", \"3\", \"-3\", null, \"-10\", \"2\"].collect {\n    it?.toInteger()\n}.findAll {\n    (it?:0) % 2 == 0 && it > 0\n}.collect {\n    it * 2\n}.sum()\n```\n", "tags": ["Groovy2.4.0", "java8"]}