{"context": "\n\n\u3053\u306e\u8a18\u4e8b\u306f Mackerel Advent Calendar 2016 \u306e 12/13 \u65e5\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\n\u7686\u3055\u3093\u306f golang \u3067\u66f8\u304b\u308c\u305f\u30d7\u30ed\u30bb\u30b9\u306e\u76e3\u8996\u306f\u3069\u306e\u69d8\u306b\u884c\u308f\u308c\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\u3002builderscon 2016 \u3067\u3082\u767b\u58c7\u3055\u308c\u305f Dave Cheney \u5fa1\u5927\u306e gcvis \u3092\u304a\u4f7f\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\nhttps://github.com/davecheney/gcvis\n\u78ba\u304b\u306b gcvis \u306f\u4fbf\u5229\u306a\u306e\u3067\u3059\u304c\u4e00\u3064\u60a9\u307e\u3057\u3044\u70b9\u304c\u3042\u308a\u3001gcvis \u81ea\u4fe1\u304c\u30d7\u30ed\u30bb\u30b9\u3092\u8d77\u52d5\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3068\u3044\u3046\u70b9\u306b\u3042\u308a\u307e\u3059\u3002\u4f5c\u308a\u4e0a\u81f4\u3057\u304b\u305f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u306b\u3066\u8d77\u52d5\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3092\u6307\u5b9a\u3059\u308b\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u8d77\u52d5\u306b\u306f gcvis \u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3059\u3002\u76e3\u8996\u306e\u969b\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6b62\u3081\u3089\u308c\u308b\u306e\u306a\u3089\u3070\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u3046\u3067\u306a\u3044\u3068\u304d\u306f\u4f7f\u3048\u306a\u3044\u4e8b\u3082\u3042\u308a\u307e\u3059\u3002\n\u3068\u3053\u308d\u3067\u6628\u65e5 golang \u3067\u66f8\u304b\u308c\u305f\u30d7\u30ed\u30bb\u30b9\u3092\u76e3\u8996/\u64cd\u4f5c\u3059\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u300cgops\u300d\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\nhttp://qiita.com/mattn/items/a92f69ff18eb5cbcdd59\n\u3053\u306e gops \u3067\u898b\u308b\u4e8b\u304c\u51fa\u6765\u308b\u30d2\u30fc\u30d7\u306e\u72b6\u614b\u306f\u3001\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u3067\u3042\u308c\u3070 mackerel-agent-plugins \u306b\u542b\u307e\u308c\u308b mackerel-plugin-gostats \u3092\u8a2d\u5b9a\u306b\u3066\u6709\u52b9\u306b\u3059\u308b\u4e8b\u3067 mackerel \u4e0a\u306b\u30b0\u30e9\u30d5\u8868\u793a\u304c\u3067\u304d\u307e\u3059\u3002\n\nmackerel-plugin-gostats \u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u3057\u307e\u3059\u3002\n[plugin.metrics.gostats]\ncommand = \"/path/to/mackerel-plugin-gostats -port=8000 -path=/api/stats\"\n\n\u3053\u306e\u8a2d\u5b9a\u5185\u5bb9\u304b\u3089\u304a\u5206\u304b\u308a\u9802\u3051\u308b\u901a\u308a\u3001mackerel-plugin-gostats \u3092\u4f7f\u3046\u5834\u5408\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f golang-stats-api-handler \u3092\u4f7f\u3063\u3066 stats \u5c02\u7528\u306e http \u30cf\u30f3\u30c9\u30e9\u3092\u516c\u958b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\npackage main\n\nimport (\n    \"net/http\"\n    \"log\"\n    \"github.com/fukata/golang-stats-api-handler\" // \u3053\u308c\n)\n\nfunc main() {\n    http.HandleFunc(\"/api/stats\", stats_api.Handler)\n    log.Fatal( http.ListenAndServe(\":8080\", nil) )\n}\n\n\u3082\u3057\u5916\u90e8\u306b\u3053\u306e\u60c5\u5831\u3092\u516c\u958b\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u898b\u4ed8\u304b\u308a\u3065\u3089\u3044\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u3057\u3066\u3057\u307e\u3046\u304b\u3001\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306e\u5185\u5074\u3067\u7a3c\u50cd\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u30d0\u30c3\u30c1\u7cfb\u30b7\u30b9\u30c6\u30e0\u306e\u5834\u5408\u3001\u30bd\u30fc\u30b9\u5185\u3067\u65b0\u305f\u306b http \u30b5\u30fc\u30d0\u3092\u7acb\u3066\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u793e\u5185\u30c4\u30fc\u30eb\u7a0b\u5ea6\u3067\u3042\u308c\u3070\u30dd\u30fc\u30c8\u3082\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3055\u308c\u3066\u3044\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u958b\u767a\u8005\u306a\u3089\u3069\u3093\u3069\u3093\u6b32\u304c\u751f\u307e\u308c\u3066 http \u30b5\u30fc\u30d0\u306e\u30a2\u30c9\u30ec\u30b9\u3084\u30dd\u30fc\u30c8\u3082\u5236\u9650\u3057\u305f\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u3002\u4f55\u304b\u671f\u5f85\u3057\u3066\u3044\u306a\u3044\u4f5c\u696d\u3092\u81ea\u3089\u751f\u3093\u3067\u3057\u307e\u3063\u305f\u6c17\u304c\u3057\u3066\u304d\u307e\u3059\u306d\u3002\u305d\u3053\u3067\u6628\u65e5\u3054\u7d39\u4ecb\u3057\u305f gops \u306e\u51fa\u756a\u3067\u3059\u3002gops \u306e agent \u3092\u8d77\u52d5\u3055\u305b\u3066\u304a\u304d\u3001\u5916\u90e8\u304b\u3089 gops memstats \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\nalloc: 19267968 bytes\ntotal-alloc: 19393560 bytes\nsys: 23939320 bytes\nlookups: 11\nmallocs: 2518\nfrees: 104\nheap-alloc: 19267968 bytes\nheap-sys: 20578304 bytes\nheap-idle: 983040 bytes\nheap-in-use: 19595264 bytes\nheap-released: 0 bytes\nheap-objects: 2414\nstack-in-use: 393216 bytes\nstack-sys: 393216 bytes\nnext-gc: when heap-alloc >= 28678953 bytes\nlast-gc: 1481194106621190296 ns\ngc-pause: 455534 ns\nnum-gc: 2\nenable-gc: true\ndebug-gc: false\n\n\u3053\u306e gops \u306e\u51fa\u529b\u3092\u30d1\u30fc\u30b9\u3057\u3066 Mackerel Custom Metrics \u3068\u3057\u3066\u30dd\u30b9\u30c8\u3059\u308c\u3070...\n\nhttp \u306b\u4f9d\u5b58\u305b\u305a\n\u65e2\u306b\u8d77\u52d5\u4e2d\u306e\u30d7\u30ed\u30bb\u30b9\u3067\u3042\u3063\u305f\u3068\u3057\u3066\u3082\n\u306a\u3093\u306a\u3089 mackerel-agent \u3092\u52d5\u304b\u3055\u305a\u3068\u3082\n\n\u7c21\u5358\u306b\u30b0\u30e9\u30d5\u304c\u8868\u793a\u3067\u304d\u308b\uff01\uff01\uff01\uff01\uff11\n\nmackerel-gops \u4f5c\u3063\u305f\n\u3068\u3044\u3046\u4e8b\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u3068\u3066\u3082\u5c0f\u3055\u3044\u30c4\u30fc\u30eb\u306a\u306e\u3067\u30bd\u30fc\u30b9\u307e\u308b\u3054\u3068\u4e57\u305b\u3066\u3057\u307e\u3044\u307e\u3059\u3002\npackage main\n\nimport (\n    \"bytes\"\n    \"encoding/json\"\n    \"flag\"\n    \"log\"\n    \"net/http\"\n    \"os\"\n    \"os/exec\"\n    \"strconv\"\n    \"strings\"\n    \"time\"\n)\n\nvar (\n    names = map[string]string{\n        \"alloc\":         \"bytes\",\n        \"sys\":           \"bytes\",\n        \"lookups\":       \"integer\",\n        \"mallocs\":       \"integer\",\n        \"frees\":         \"integer\",\n        \"heap_alloc\":    \"bytes\",\n        \"heap_sys\":      \"bytes\",\n        \"heap_idle\":     \"bytes\",\n        \"heap_in_use\":   \"bytes\",\n        \"heap_released\": \"bytes\",\n        \"heap_objects\":  \"integer\",\n        \"stack_in_use\":  \"bytes\",\n        \"stack_sys\":     \"bytes\",\n    }\n    prefix  = flag.String(\"name\", \"\", \"prefix of keys for metrics\")\n    service = flag.String(\"service\", \"\", \"service name\")\n    sleep   = flag.Duration(\"sleep\", 5*time.Second, \"sleep\")\n)\n\ntype metric struct {\n    Name  string  `json:\"name\"`\n    Time  int64   `json:\"time\"`\n    Value float64 `json:\"value\"`\n    Unit  string  `json:\"unit\"`\n}\n\nfunc main() {\n    flag.Parse()\n\n    if *prefix == \"\" || *service == \"\" {\n        flag.Usage()\n        os.Exit(2)\n    }\n\n    os.Setenv(\"GODEBUG\", \"http2client=0\")\n\n    for {\n        time.Sleep(*sleep)\n\n        b, err := exec.Command(\"gops\", \"memstats\", flag.Arg(0)).CombinedOutput()\n        if err != nil {\n            log.Fatal(err)\n        }\n        var metrics []metric\n        for _, line := range strings.Split(string(b), \"\\n\") {\n            tokens := strings.SplitN(line, \":\", 2)\n            if len(tokens) != 2 {\n                continue\n            }\n            name := strings.Replace(tokens[0], \"-\", \"_\", -1)\n            unit, ok := names[name]\n            if !ok {\n                continue\n            }\n            val, _ := strconv.ParseFloat(strings.Split(strings.TrimSpace(tokens[1]), \" \")[0], 64)\n            metrics = append(metrics, metric{Name: *prefix + \".\" + name, Time: time.Now().Unix(), Value: val, Unit: unit})\n        }\n\n        var buf bytes.Buffer\n        err = json.NewEncoder(&buf).Encode(metrics)\n        if err != nil {\n            log.Print(err)\n            continue\n        }\n        log.Print(buf.String())\n        req, err := http.NewRequest(\"POST\", \"https://mackerel.io/api/v0/services/\"+*service+\"/tsdb\", &buf)\n        if err != nil {\n            log.Print(err)\n            continue\n        }\n        req.Header.Set(\"X-Api-Key\", os.Getenv(\"MACKEREL_API_KEY\"))\n        req.Header.Set(\"content-type\", \"application/json\")\n        resp, err := http.DefaultClient.Do(req)\n        if err != nil {\n            log.Print(err)\n        }\n        resp.Body.Close()\n    }\n}\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u4ee5\u4e0b\u306e URL \u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/mattn/mackerel-gops\n\u4f7f\u3044\u65b9\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u8d77\u52d5\u3057\u307e\u3059\u3002-p \u3067\u6307\u5b9a\u3059\u308b\u30d7\u30ed\u30bb\u30b9ID\u306f gops \u30b3\u30de\u30f3\u30c9\u3067\u5f97\u3089\u308c\u308b * \u306e\u4ed8\u3044\u3066\u3044\u308b\u7269\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n$ mackerel-gops -p 12345 -name myserver -service ore-no-service\n\n\u3064\u307e\u308a Mackerel \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u3053\u306e\u30c4\u30fc\u30eb\u304c1\u3064\u3042\u308c\u3070\u3001\u3059\u3050\u306b\u3067\u3082\u76e3\u8996\u304c\u884c\u3048\u307e\u3059\u3002\u76e3\u8996\u306e\u5fc5\u8981\u304c\u306a\u304f\u306a\u3063\u305f\u306e\u3067\u3042\u308c\u3070\u3001\u30d7\u30ed\u30bb\u30b9\u306f\u7d42\u4e86\u3057\u306a\u3044\u307e\u307e mackerel-gops \u3092\u6b62\u3081\u3066\u3057\u307e\u3048\u3070\u3044\u3044\u306e\u3067\u3059\u3002\n\n\u30e1\u30c8\u30ea\u30af\u30b9\u306e\u53d6\u5f97\u65b9\u6cd5\n\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u3060\u3051\u3067\u3059\u3002\n\n\n\u3042\u3068\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u4e0a\u8a18\u306e\u624b\u9806\u3067 mackerel-gops \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3002name \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001\u30d7\u30ed\u30bb\u30b9\u540d\u306a\u3069\u3092\u6307\u5b9a\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002\n\u8d77\u52d5\u306e\u969b\u306b\u306f\u74b0\u5883\u5909\u6570 MACKEREL_API_KEY \u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u4e8b\u3060\u3051\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002API KEY \u306f Mackerel \u306e\u53f3\u4e0a\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u300c\u30a2\u30ab\u30a6\u30f3\u30c8\u8a2d\u5b9a\u300d\u300c\u30aa\u30fc\u30ac\u30cb\u30bc\u30fc\u30b7\u30e7\u30f3\u300d\u3001\u305d\u3057\u3066\u4f55\u308c\u304b\u306e\u6240\u5c5e\u306e\u300c\u8a2d\u5b9a\u300d\u3001\u300cAPI \u30ad\u30fc\u300d\u306e\u30bf\u30d6\u304b\u3089\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\n\n\n\n\u3042\u3068\u306f\u5f85\u3064\u3060\u3051\n\u7c21\u5358\u3059\u304e\u308b\uff01\u5b9f\u969b\u306f tmux \u7b49\u3067\u5e38\u99d0\u3055\u305b\u3066\u304a\u3051\u3070\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u307b\u3089\u3001\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3044\u308b\u9593\u306b\u3082\u3046\u30e1\u30c8\u30ea\u30af\u30b9\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n\u307e\u3068\u3081\n\u958b\u767a\u4e2d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4e88\u3081 gops \u5bfe\u5fdc\u3057\u3066\u304a\u304f\u3068\u3001\u3044\u3056\u8d77\u52d5\u4e2d\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u76e3\u8996\u3057\u305f\u304f\u306a\u3063\u305f\u5834\u5408\u3067\u3082\u7c21\u5358\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\u305d\u3057\u3066 Mackerel Custom Metrics \u306b\u30822\uff5e3\u56de\u306e\u624b\u9806\u3067\u7c21\u5358\u306b\u30b0\u30e9\u30d5\u304c\u8868\u793a\u3055\u308c\u3066 \u30a6\u30de\u30fc\uff01 \u30ad\u30e3\u30fc\u7d20\u6575\uff5e\uff01 \u76e3\u8996\u5927\u597d\u304d\uff01 \u3068\u306a\u308b\u4e8b\u9593\u9055\u3044\u306a\u3057\u3067\u3059\u3002\n\u3068\u3044\u3046\u4e8b\u3067\u3001\u4eca\u5e74\u3082\u3042\u3068\u5c11\u3057\u306b\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30a8\u30f3\u30b8\u30cb\u30a2\u3084\u30a4\u30f3\u30d5\u30e9\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u3068\u3063\u3066\u306f\u30d3\u30af\u30d3\u30af\u305b\u3056\u308b\u3092\u5f97\u306a\u3044\u6642\u671f\u3067\u3082\u3042\u308a\u307e\u3059\u3002\u30a2\u30e9\u30fc\u30e0\u304c\u9cf4\u3089\u306a\u3044\u4e8b\u3092\u7948\u308a\u306a\u304c\u3089\u3001\u305c\u3072\u51fa\u6765\u308b\u3068\u3053\u308d\u304b\u3089\u306e\u76e3\u8996\u3092\u59cb\u3081\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [Mackerel Advent Calendar 2016](http://qiita.com/advent-calendar/2016/mackerel) \u306e 12/13 \u65e5\u306e\u8a18\u4e8b\u3067\u3059\u3002\n---\n# \u306f\u3058\u3081\u306b\n\n![\u76e3\u8996](https://qiita-image-store.s3.amazonaws.com/0/665/cf4a5604-e103-6cd7-dea0-3b29c5f6c5ad.png)\n\n\u7686\u3055\u3093\u306f golang \u3067\u66f8\u304b\u308c\u305f\u30d7\u30ed\u30bb\u30b9\u306e\u76e3\u8996\u306f\u3069\u306e\u69d8\u306b\u884c\u308f\u308c\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\u3002[builderscon 2016](https://builderscon.io/builderscon/tokyo/2016) \u3067\u3082\u767b\u58c7\u3055\u308c\u305f [Dave Cheney](https://github.com/davecheney) \u5fa1\u5927\u306e gcvis \u3092\u304a\u4f7f\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n![Dave Cheney \u5fa1\u5927](https://qiita-image-store.s3.amazonaws.com/0/665/6a0de0bf-6a42-b93c-3d52-1d058684eb4c.png)\n\nhttps://github.com/davecheney/gcvis\n\n\u78ba\u304b\u306b gcvis \u306f\u4fbf\u5229\u306a\u306e\u3067\u3059\u304c\u4e00\u3064\u60a9\u307e\u3057\u3044\u70b9\u304c\u3042\u308a\u3001gcvis \u81ea\u4fe1\u304c\u30d7\u30ed\u30bb\u30b9\u3092\u8d77\u52d5\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3068\u3044\u3046\u70b9\u306b\u3042\u308a\u307e\u3059\u3002\u4f5c\u308a\u4e0a\u81f4\u3057\u304b\u305f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u30b3\u30de\u30f3\u30c9\u5f15\u6570\u306b\u3066\u8d77\u52d5\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3092\u6307\u5b9a\u3059\u308b\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u8d77\u52d5\u306b\u306f gcvis \u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3059\u3002\u76e3\u8996\u306e\u969b\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6b62\u3081\u3089\u308c\u308b\u306e\u306a\u3089\u3070\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u3046\u3067\u306a\u3044\u3068\u304d\u306f\u4f7f\u3048\u306a\u3044\u4e8b\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u3068\u3053\u308d\u3067\u6628\u65e5 golang \u3067\u66f8\u304b\u308c\u305f\u30d7\u30ed\u30bb\u30b9\u3092\u76e3\u8996/\u64cd\u4f5c\u3059\u308b\u305f\u3081\u306e\u30c4\u30fc\u30eb\u300cgops\u300d\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\nhttp://qiita.com/mattn/items/a92f69ff18eb5cbcdd59\n\n\u3053\u306e gops \u3067\u898b\u308b\u4e8b\u304c\u51fa\u6765\u308b\u30d2\u30fc\u30d7\u306e\u72b6\u614b\u306f\u3001\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u3067\u3042\u308c\u3070 mackerel-agent-plugins \u306b\u542b\u307e\u308c\u308b [mackerel-plugin-gostats](https://github.com/mackerelio/mackerel-agent-plugins/tree/master/mackerel-plugin-gostats) \u3092\u8a2d\u5b9a\u306b\u3066\u6709\u52b9\u306b\u3059\u308b\u4e8b\u3067 mackerel \u4e0a\u306b\u30b0\u30e9\u30d5\u8868\u793a\u304c\u3067\u304d\u307e\u3059\u3002\n\n![mackerel-plugin-gostats](https://qiita-image-store.s3.amazonaws.com/0/665/8e58f08e-a69b-0448-5ff6-997f351a36a3.png)\n\nmackerel-plugin-gostats \u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u3057\u307e\u3059\u3002\n\n```toml\n[plugin.metrics.gostats]\ncommand = \"/path/to/mackerel-plugin-gostats -port=8000 -path=/api/stats\"\n```\n\n\u3053\u306e\u8a2d\u5b9a\u5185\u5bb9\u304b\u3089\u304a\u5206\u304b\u308a\u9802\u3051\u308b\u901a\u308a\u3001mackerel-plugin-gostats \u3092\u4f7f\u3046\u5834\u5408\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f `golang-stats-api-handler` \u3092\u4f7f\u3063\u3066 stats \u5c02\u7528\u306e http \u30cf\u30f3\u30c9\u30e9\u3092\u516c\u958b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```go\npackage main\n\nimport (\n    \"net/http\"\n    \"log\"\n    \"github.com/fukata/golang-stats-api-handler\" // \u3053\u308c\n)\n\nfunc main() {\n    http.HandleFunc(\"/api/stats\", stats_api.Handler)\n    log.Fatal( http.ListenAndServe(\":8080\", nil) )\n}\n```\n\n\u3082\u3057\u5916\u90e8\u306b\u3053\u306e\u60c5\u5831\u3092\u516c\u958b\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306b\u306f\u3001\u898b\u4ed8\u304b\u308a\u3065\u3089\u3044\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u3057\u3066\u3057\u307e\u3046\u304b\u3001\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u30ea\u30d0\u30fc\u30b9\u30d7\u30ed\u30ad\u30b7\u306e\u5185\u5074\u3067\u7a3c\u50cd\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305f\u30d0\u30c3\u30c1\u7cfb\u30b7\u30b9\u30c6\u30e0\u306e\u5834\u5408\u3001\u30bd\u30fc\u30b9\u5185\u3067\u65b0\u305f\u306b http \u30b5\u30fc\u30d0\u3092\u7acb\u3066\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u793e\u5185\u30c4\u30fc\u30eb\u7a0b\u5ea6\u3067\u3042\u308c\u3070\u30dd\u30fc\u30c8\u3082\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3055\u308c\u3066\u3044\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u958b\u767a\u8005\u306a\u3089\u3069\u3093\u3069\u3093\u6b32\u304c\u751f\u307e\u308c\u3066 http \u30b5\u30fc\u30d0\u306e\u30a2\u30c9\u30ec\u30b9\u3084\u30dd\u30fc\u30c8\u3082\u5236\u9650\u3057\u305f\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u3002\u4f55\u304b\u671f\u5f85\u3057\u3066\u3044\u306a\u3044\u4f5c\u696d\u3092\u81ea\u3089\u751f\u3093\u3067\u3057\u307e\u3063\u305f\u6c17\u304c\u3057\u3066\u304d\u307e\u3059\u306d\u3002\u305d\u3053\u3067\u6628\u65e5\u3054\u7d39\u4ecb\u3057\u305f gops \u306e\u51fa\u756a\u3067\u3059\u3002gops \u306e agent \u3092\u8d77\u52d5\u3055\u305b\u3066\u304a\u304d\u3001\u5916\u90e8\u304b\u3089 `gops memstats` \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n```\nalloc: 19267968 bytes\ntotal-alloc: 19393560 bytes\nsys: 23939320 bytes\nlookups: 11\nmallocs: 2518\nfrees: 104\nheap-alloc: 19267968 bytes\nheap-sys: 20578304 bytes\nheap-idle: 983040 bytes\nheap-in-use: 19595264 bytes\nheap-released: 0 bytes\nheap-objects: 2414\nstack-in-use: 393216 bytes\nstack-sys: 393216 bytes\nnext-gc: when heap-alloc >= 28678953 bytes\nlast-gc: 1481194106621190296 ns\ngc-pause: 455534 ns\nnum-gc: 2\nenable-gc: true\ndebug-gc: false\n```\n\n\u3053\u306e gops \u306e\u51fa\u529b\u3092\u30d1\u30fc\u30b9\u3057\u3066 Mackerel Custom Metrics \u3068\u3057\u3066\u30dd\u30b9\u30c8\u3059\u308c\u3070...\n\n* http \u306b\u4f9d\u5b58\u305b\u305a\n* \u65e2\u306b\u8d77\u52d5\u4e2d\u306e\u30d7\u30ed\u30bb\u30b9\u3067\u3042\u3063\u305f\u3068\u3057\u3066\u3082\n* \u306a\u3093\u306a\u3089 mackerel-agent \u3092\u52d5\u304b\u3055\u305a\u3068\u3082\n\n\u7c21\u5358\u306b\u30b0\u30e9\u30d5\u304c\u8868\u793a\u3067\u304d\u308b\uff01\uff01\uff01\uff01\uff11\n\n# mackerel-gops \u4f5c\u3063\u305f\n\n\u3068\u3044\u3046\u4e8b\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u3068\u3066\u3082\u5c0f\u3055\u3044\u30c4\u30fc\u30eb\u306a\u306e\u3067\u30bd\u30fc\u30b9\u307e\u308b\u3054\u3068\u4e57\u305b\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n```go\npackage main\n\nimport (\n\t\"bytes\"\n\t\"encoding/json\"\n\t\"flag\"\n\t\"log\"\n\t\"net/http\"\n\t\"os\"\n\t\"os/exec\"\n\t\"strconv\"\n\t\"strings\"\n\t\"time\"\n)\n\nvar (\n\tnames = map[string]string{\n\t\t\"alloc\":         \"bytes\",\n\t\t\"sys\":           \"bytes\",\n\t\t\"lookups\":       \"integer\",\n\t\t\"mallocs\":       \"integer\",\n\t\t\"frees\":         \"integer\",\n\t\t\"heap_alloc\":    \"bytes\",\n\t\t\"heap_sys\":      \"bytes\",\n\t\t\"heap_idle\":     \"bytes\",\n\t\t\"heap_in_use\":   \"bytes\",\n\t\t\"heap_released\": \"bytes\",\n\t\t\"heap_objects\":  \"integer\",\n\t\t\"stack_in_use\":  \"bytes\",\n\t\t\"stack_sys\":     \"bytes\",\n\t}\n\tprefix  = flag.String(\"name\", \"\", \"prefix of keys for metrics\")\n\tservice = flag.String(\"service\", \"\", \"service name\")\n\tsleep   = flag.Duration(\"sleep\", 5*time.Second, \"sleep\")\n)\n\ntype metric struct {\n\tName  string  `json:\"name\"`\n\tTime  int64   `json:\"time\"`\n\tValue float64 `json:\"value\"`\n\tUnit  string  `json:\"unit\"`\n}\n\nfunc main() {\n\tflag.Parse()\n\n\tif *prefix == \"\" || *service == \"\" {\n\t\tflag.Usage()\n\t\tos.Exit(2)\n\t}\n\n\tos.Setenv(\"GODEBUG\", \"http2client=0\")\n\n\tfor {\n\t\ttime.Sleep(*sleep)\n\n\t\tb, err := exec.Command(\"gops\", \"memstats\", flag.Arg(0)).CombinedOutput()\n\t\tif err != nil {\n\t\t\tlog.Fatal(err)\n\t\t}\n\t\tvar metrics []metric\n\t\tfor _, line := range strings.Split(string(b), \"\\n\") {\n\t\t\ttokens := strings.SplitN(line, \":\", 2)\n\t\t\tif len(tokens) != 2 {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tname := strings.Replace(tokens[0], \"-\", \"_\", -1)\n\t\t\tunit, ok := names[name]\n\t\t\tif !ok {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tval, _ := strconv.ParseFloat(strings.Split(strings.TrimSpace(tokens[1]), \" \")[0], 64)\n\t\t\tmetrics = append(metrics, metric{Name: *prefix + \".\" + name, Time: time.Now().Unix(), Value: val, Unit: unit})\n\t\t}\n\n\t\tvar buf bytes.Buffer\n\t\terr = json.NewEncoder(&buf).Encode(metrics)\n\t\tif err != nil {\n\t\t\tlog.Print(err)\n\t\t\tcontinue\n\t\t}\n\t\tlog.Print(buf.String())\n\t\treq, err := http.NewRequest(\"POST\", \"https://mackerel.io/api/v0/services/\"+*service+\"/tsdb\", &buf)\n\t\tif err != nil {\n\t\t\tlog.Print(err)\n\t\t\tcontinue\n\t\t}\n\t\treq.Header.Set(\"X-Api-Key\", os.Getenv(\"MACKEREL_API_KEY\"))\n\t\treq.Header.Set(\"content-type\", \"application/json\")\n\t\tresp, err := http.DefaultClient.Do(req)\n\t\tif err != nil {\n\t\t\tlog.Print(err)\n\t\t}\n\t\tresp.Body.Close()\n\t}\n}\n```\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u4ee5\u4e0b\u306e URL \u306b\u3042\u308a\u307e\u3059\u3002\n\nhttps://github.com/mattn/mackerel-gops\n\n\u4f7f\u3044\u65b9\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u8d77\u52d5\u3057\u307e\u3059\u3002`-p` \u3067\u6307\u5b9a\u3059\u308b\u30d7\u30ed\u30bb\u30b9ID\u306f gops \u30b3\u30de\u30f3\u30c9\u3067\u5f97\u3089\u308c\u308b `*` \u306e\u4ed8\u3044\u3066\u3044\u308b\u7269\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```\n$ mackerel-gops -p 12345 -name myserver -service ore-no-service\n```\n\n\u3064\u307e\u308a Mackerel \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3068\u3053\u306e\u30c4\u30fc\u30eb\u304c1\u3064\u3042\u308c\u3070\u3001\u3059\u3050\u306b\u3067\u3082\u76e3\u8996\u304c\u884c\u3048\u307e\u3059\u3002\u76e3\u8996\u306e\u5fc5\u8981\u304c\u306a\u304f\u306a\u3063\u305f\u306e\u3067\u3042\u308c\u3070\u3001\u30d7\u30ed\u30bb\u30b9\u306f\u7d42\u4e86\u3057\u306a\u3044\u307e\u307e mackerel-gops \u3092\u6b62\u3081\u3066\u3057\u307e\u3048\u3070\u3044\u3044\u306e\u3067\u3059\u3002\n\n# \u30e1\u30c8\u30ea\u30af\u30b9\u306e\u53d6\u5f97\u65b9\u6cd5\n\n\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u3060\u3051\u3067\u3059\u3002\n\n![\u30b5\u30fc\u30d3\u30b9\u4f5c\u6210](https://qiita-image-store.s3.amazonaws.com/0/665/4292e948-d633-36ae-b824-47994c6297fb.png)\n\n![\u30b5\u30fc\u30d3\u30b9\u30e1\u30c8\u30ea\u30af\u30b9](https://qiita-image-store.s3.amazonaws.com/0/665/70668b9b-865e-7af5-59fa-f5beb240d909.png)\n\n\u3042\u3068\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u4e0a\u8a18\u306e\u624b\u9806\u3067 mackerel-gops \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3002`name` \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001\u30d7\u30ed\u30bb\u30b9\u540d\u306a\u3069\u3092\u6307\u5b9a\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002\n\n\u8d77\u52d5\u306e\u969b\u306b\u306f\u74b0\u5883\u5909\u6570 `MACKEREL_API_KEY` \u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u4e8b\u3060\u3051\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002API KEY \u306f Mackerel \u306e\u53f3\u4e0a\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089\u300c\u30a2\u30ab\u30a6\u30f3\u30c8\u8a2d\u5b9a\u300d\u300c\u30aa\u30fc\u30ac\u30cb\u30bc\u30fc\u30b7\u30e7\u30f3\u300d\u3001\u305d\u3057\u3066\u4f55\u308c\u304b\u306e\u6240\u5c5e\u306e\u300c\u8a2d\u5b9a\u300d\u3001\u300cAPI \u30ad\u30fc\u300d\u306e\u30bf\u30d6\u304b\u3089\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\n\n![API KEY \u306e\u53d6\u5f97\u65b9\u6cd5](https://qiita-image-store.s3.amazonaws.com/0/665/227453c0-8422-8b4c-6394-b81d2f06638c.png)\n\n![API KEY \u306e\u5834\u6240](https://qiita-image-store.s3.amazonaws.com/0/665/650edf3b-c961-cdba-2811-b919a850f6c8.png)\n\n# \u3042\u3068\u306f\u5f85\u3064\u3060\u3051\n\n\u7c21\u5358\u3059\u304e\u308b\uff01\u5b9f\u969b\u306f tmux \u7b49\u3067\u5e38\u99d0\u3055\u305b\u3066\u304a\u3051\u3070\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u307b\u3089\u3001\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3044\u308b\u9593\u306b\u3082\u3046\u30e1\u30c8\u30ea\u30af\u30b9\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\n![\u30ab\u30b9\u30bf\u30e0\u30e1\u30c8\u30ea\u30af\u30b9](https://qiita-image-store.s3.amazonaws.com/0/665/6f50ca3e-7b55-4781-3fda-92ef34e53ee7.png)\n\n# \u307e\u3068\u3081\n\n\u958b\u767a\u4e2d\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4e88\u3081 gops \u5bfe\u5fdc\u3057\u3066\u304a\u304f\u3068\u3001\u3044\u3056\u8d77\u52d5\u4e2d\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u76e3\u8996\u3057\u305f\u304f\u306a\u3063\u305f\u5834\u5408\u3067\u3082\u7c21\u5358\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\u305d\u3057\u3066 Mackerel Custom Metrics \u306b\u30822\uff5e3\u56de\u306e\u624b\u9806\u3067\u7c21\u5358\u306b\u30b0\u30e9\u30d5\u304c\u8868\u793a\u3055\u308c\u3066 **\u30a6\u30de\u30fc\uff01** **\u30ad\u30e3\u30fc\u7d20\u6575\uff5e\uff01** **\u76e3\u8996\u5927\u597d\u304d\uff01** \u3068\u306a\u308b\u4e8b\u9593\u9055\u3044\u306a\u3057\u3067\u3059\u3002\n\n\u3068\u3044\u3046\u4e8b\u3067\u3001\u4eca\u5e74\u3082\u3042\u3068\u5c11\u3057\u306b\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30a8\u30f3\u30b8\u30cb\u30a2\u3084\u30a4\u30f3\u30d5\u30e9\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u3068\u3063\u3066\u306f\u30d3\u30af\u30d3\u30af\u305b\u3056\u308b\u3092\u5f97\u306a\u3044\u6642\u671f\u3067\u3082\u3042\u308a\u307e\u3059\u3002\u30a2\u30e9\u30fc\u30e0\u304c\u9cf4\u3089\u306a\u3044\u4e8b\u3092\u7948\u308a\u306a\u304c\u3089\u3001\u305c\u3072\u51fa\u6765\u308b\u3068\u3053\u308d\u304b\u3089\u306e\u76e3\u8996\u3092\u59cb\u3081\u307e\u3057\u3087\u3046\u3002\n\n", "tags": ["Mackerel", "Go"]}