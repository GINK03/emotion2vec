{"context": " More than 1 year has passed since last update.\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u639b\u3051\u308b\u3068\u5199\u771f\u7e2e\u5c0f\u6642\u306e\u30b8\u30e3\u30ae\u30b8\u30e3\u30ae\u304c\u8efd\u6e1b\u3057\u307e\u3059\u3002\u30d5\u30a9\u30eb\u30c0\u5185\u306e\u5199\u771f\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\uff08\u7e26\u6a2a\u6bd4\u7387\uff09\u3092\u4fdd\u3063\u305f\u307e\u307e\u4e00\u62ec\u3067\u7e2e\u5c0f\u3057\u3066\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u639b\u3051\u4fdd\u5b58\u3059\u308bPython\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n\u30a2\u30f3\u30c1\u30a8\u30ea\u30a2\u30b9\u3042\u308a/\u306a\u3057\u6bd4\u8f03\n4000px\u304f\u3089\u3044\u306e\u5199\u771f\u3092300px\u306b\u7e2e\u5c0f\u3057\u3066\u6bd4\u8f03\u3057\u307e\u3057\u305f\u3002AA\u6709\u308a\u306e\u9ce5\u753b\u50cf\u306f\u5730\u9762\u306e\u5c0f\u3055\u306a\u7802\u304c\u3001\u5730\u9762\u3068\u8272\u304c\u4e00\u4f53\u5316\u3057\u3066\u898b\u3048\u306b\u304f\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# PIL\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npip install PIL --allow-external PIL --allow-unverified PIL\n\n\n\u62e1\u5927\u3068\u7e2e\u5c0f\u306e\u30b3\u30fc\u30c9\nmac\u306epython2.7\u74b0\u5883\u3067\u306e\u307f\u52d5\u4f5c\u78ba\u8a8d\u6e08\u307f\n\nresize.py\n\n# -*- coding: utf-8 -*-\nimport commands\nimport Image\nimport re\n\n# \u7e2e\u5c0f\u3059\u308b\u969b\u306e\u753b\u50cf\u306e\u9ad8\u3055\u30d4\u30af\u30bb\u30eb\nPHOTO_HEIGHT = 300\n\n# \u753b\u50cf\u304c\u3042\u308b\u30d5\u30a9\u30eb\u30c0\u306e\u30d5\u30eb\u30d1\u30b9\nBASE_DIR = \"/Users/XXXXX/Desktop/Photos\"\n\n# \u753b\u50cf\u306e\u6b63\u898f\u8868\u73fe\u540d\nPHOTO_REGEX = r\"P.*.[jpg|JPG]\"\n\n# \u30ea\u30b5\u30a4\u30ba\u5f8c\u306e\u753b\u50cf\u306e\u63a5\u982d\u8a9e\nPHOTO_RESIZE_PREFIX = \"r_\"\n\n\ndef main():\n    # \u753b\u50cf\u30d5\u30eb\u30d1\u30b9\u3092\u53d6\u5f97\n    _cmd = \"cd {} && ls\".format(BASE_DIR)\n    l = commands.getoutput(_cmd)\n    l = l.split(\"\\n\")\n    l = [_l for _l in l if re.match(PHOTO_REGEX, _l)]\n\n    # \u51fa\u529b\u7528\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u751f\u6210\n    commands.getoutput(\"mkdir {}/output\".format(BASE_DIR))\n\n    # \u65e2\u5b58\u30d5\u30a1\u30a4\u30eb\u3092 read\u30e2\u30fc\u30c9\u3067\u8aad\u307f\u8fbc\u307f\n    for _l in l:\n        before_path = '{}/{}'.format(BASE_DIR, _l)\n        filename = '{}{}'.format(PHOTO_RESIZE_PREFIX, _l)\n        after_path = '{}/output/{}'.format(BASE_DIR, filename)\n        resize(before_path, after_path, filename=_l)  # \u7e2e\u5c0f\n\n\ndef resize(before, after, height=PHOTO_HEIGHT, filename=\"\", aa_enable=True):\n    \"\"\"\n    \u753b\u50cf\u3092\u30ea\u30b5\u30a4\u30ba\u3059\u308b\n    :param str before: \u5143\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\n    :param str after: \u30ea\u30b5\u30a4\u30ba\u5f8c\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\n    :param int height: \u30ea\u30b5\u30a4\u30ba\u5f8c\u306e\u753b\u50cf\u306e\u9ad8\u3055\n    :param bool aa_enable: \u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6709\u52b9\u306b\u3059\u308b\u304b\n    :return:\n    \"\"\"\n    # \u753b\u50cf\u3092readonly\u3067\u958b\u304f\n    img = Image.open(before, 'r')\n    # \u30ea\u30b5\u30a4\u30ba\u5f8c\u306e\u753b\u50cf\u30d4\u30af\u30bb\u30eb\u3092\u8a08\u7b97\n    before_x, before_y = img.size[0], img.size[1]\n    x = int(round(float(height / float(before_y) * float(before_x))))\n    y = height\n    resize_img = img\n    if aa_enable:\n        # \u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u3042\u308a\u3067\u7e2e\u5c0f\n        resize_img.thumbnail((x, y), Image.ANTIALIAS)\n    else:\n        # \u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u306a\u3057\u3067\u7e2e\u5c0f\n        resize_img = resize_img.resize((x, y))\n\n    # \u30ea\u30b5\u30a4\u30ba\u5f8c\u306e\u753b\u50cf\u3092\u4fdd\u5b58\n    resize_img.save(after, 'jpeg', quality=100)\n    print \"RESIZED!:{}[{}x{}] --> {}x{}\".format(filename, before_x, before_y, x, y)\n\n# \u5b9f\u884c\nmain()\n\n\n\n\n\u5b9f\u884c\u7d50\u679c\n>>> python resize.py\nRESIZED!:P1040673.jpg[4592x3448] --> 400x300\nRESIZED!:P1050388.JPG[4592x3448] --> 400x300\nRESIZED!:P1050389.JPG[4592x3448] --> 400x300\nRESIZED!:P1050390.JPG[4592x3448] --> 400x300\nRESIZED!:P1050391.JPG[4592x3448] --> 400x300\nRESIZED!:P1050392.JPG[4592x3448] --> 400x300\nRESIZED!:P1050393.JPG[4592x3448] --> 400x300\nRESIZED!:P1050394.JPG[4592x3448] --> 400x300\n\n\n\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u639b\u3051\u308b\u3068\u5199\u771f\u7e2e\u5c0f\u6642\u306e\u30b8\u30e3\u30ae\u30b8\u30e3\u30ae\u304c\u8efd\u6e1b\u3057\u307e\u3059\u3002\u30d5\u30a9\u30eb\u30c0\u5185\u306e\u5199\u771f\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30b9\u30da\u30af\u30c8\u6bd4\uff08\u7e26\u6a2a\u6bd4\u7387\uff09\u3092\u4fdd\u3063\u305f\u307e\u307e\u4e00\u62ec\u3067\u7e2e\u5c0f\u3057\u3066\u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u639b\u3051\u4fdd\u5b58\u3059\u308bPython\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n# \u30a2\u30f3\u30c1\u30a8\u30ea\u30a2\u30b9\u3042\u308a/\u306a\u3057\u6bd4\u8f03\n4000px\u304f\u3089\u3044\u306e\u5199\u771f\u3092300px\u306b\u7e2e\u5c0f\u3057\u3066\u6bd4\u8f03\u3057\u307e\u3057\u305f\u3002AA\u6709\u308a\u306e\u9ce5\u753b\u50cf\u306f\u5730\u9762\u306e\u5c0f\u3055\u306a\u7802\u304c\u3001\u5730\u9762\u3068\u8272\u304c\u4e00\u4f53\u5316\u3057\u3066\u898b\u3048\u306b\u304f\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-19 21.03.02.png](https://qiita-image-store.s3.amazonaws.com/0/65312/f45a21ad-2202-5b0f-16c9-cff81a3cbf7e.png)\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-19 21.03.06.png](https://qiita-image-store.s3.amazonaws.com/0/65312/624a308f-d4ca-8c64-d2d1-94a5678af751.png)\n\n\n\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```shell-session\n# PIL\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npip install PIL --allow-external PIL --allow-unverified PIL\n```\n\n# \u62e1\u5927\u3068\u7e2e\u5c0f\u306e\u30b3\u30fc\u30c9\nmac\u306epython2.7\u74b0\u5883\u3067\u306e\u307f\u52d5\u4f5c\u78ba\u8a8d\u6e08\u307f\n\n```py:resize.py\n\n# -*- coding: utf-8 -*-\nimport commands\nimport Image\nimport re\n\n# \u7e2e\u5c0f\u3059\u308b\u969b\u306e\u753b\u50cf\u306e\u9ad8\u3055\u30d4\u30af\u30bb\u30eb\nPHOTO_HEIGHT = 300\n\n# \u753b\u50cf\u304c\u3042\u308b\u30d5\u30a9\u30eb\u30c0\u306e\u30d5\u30eb\u30d1\u30b9\nBASE_DIR = \"/Users/XXXXX/Desktop/Photos\"\n\n# \u753b\u50cf\u306e\u6b63\u898f\u8868\u73fe\u540d\nPHOTO_REGEX = r\"P.*.[jpg|JPG]\"\n\n# \u30ea\u30b5\u30a4\u30ba\u5f8c\u306e\u753b\u50cf\u306e\u63a5\u982d\u8a9e\nPHOTO_RESIZE_PREFIX = \"r_\"\n\n\ndef main():\n    # \u753b\u50cf\u30d5\u30eb\u30d1\u30b9\u3092\u53d6\u5f97\n    _cmd = \"cd {} && ls\".format(BASE_DIR)\n    l = commands.getoutput(_cmd)\n    l = l.split(\"\\n\")\n    l = [_l for _l in l if re.match(PHOTO_REGEX, _l)]\n\n    # \u51fa\u529b\u7528\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u751f\u6210\n    commands.getoutput(\"mkdir {}/output\".format(BASE_DIR))\n\n    # \u65e2\u5b58\u30d5\u30a1\u30a4\u30eb\u3092 read\u30e2\u30fc\u30c9\u3067\u8aad\u307f\u8fbc\u307f\n    for _l in l:\n        before_path = '{}/{}'.format(BASE_DIR, _l)\n        filename = '{}{}'.format(PHOTO_RESIZE_PREFIX, _l)\n        after_path = '{}/output/{}'.format(BASE_DIR, filename)\n        resize(before_path, after_path, filename=_l)  # \u7e2e\u5c0f\n\n\ndef resize(before, after, height=PHOTO_HEIGHT, filename=\"\", aa_enable=True):\n    \"\"\"\n    \u753b\u50cf\u3092\u30ea\u30b5\u30a4\u30ba\u3059\u308b\n    :param str before: \u5143\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\n    :param str after: \u30ea\u30b5\u30a4\u30ba\u5f8c\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\n    :param int height: \u30ea\u30b5\u30a4\u30ba\u5f8c\u306e\u753b\u50cf\u306e\u9ad8\u3055\n    :param bool aa_enable: \u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u6709\u52b9\u306b\u3059\u308b\u304b\n    :return:\n    \"\"\"\n    # \u753b\u50cf\u3092readonly\u3067\u958b\u304f\n    img = Image.open(before, 'r')\n    # \u30ea\u30b5\u30a4\u30ba\u5f8c\u306e\u753b\u50cf\u30d4\u30af\u30bb\u30eb\u3092\u8a08\u7b97\n    before_x, before_y = img.size[0], img.size[1]\n    x = int(round(float(height / float(before_y) * float(before_x))))\n    y = height\n    resize_img = img\n    if aa_enable:\n        # \u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u3042\u308a\u3067\u7e2e\u5c0f\n        resize_img.thumbnail((x, y), Image.ANTIALIAS)\n    else:\n        # \u30a2\u30f3\u30c1\u30a8\u30a4\u30ea\u30a2\u30b9\u306a\u3057\u3067\u7e2e\u5c0f\n        resize_img = resize_img.resize((x, y))\n\n    # \u30ea\u30b5\u30a4\u30ba\u5f8c\u306e\u753b\u50cf\u3092\u4fdd\u5b58\n    resize_img.save(after, 'jpeg', quality=100)\n    print \"RESIZED!:{}[{}x{}] --> {}x{}\".format(filename, before_x, before_y, x, y)\n\n# \u5b9f\u884c\nmain()\n\n```\n\n```shell-session:\u5b9f\u884c\u7d50\u679c\n>>> python resize.py\nRESIZED!:P1040673.jpg[4592x3448] --> 400x300\nRESIZED!:P1050388.JPG[4592x3448] --> 400x300\nRESIZED!:P1050389.JPG[4592x3448] --> 400x300\nRESIZED!:P1050390.JPG[4592x3448] --> 400x300\nRESIZED!:P1050391.JPG[4592x3448] --> 400x300\nRESIZED!:P1050392.JPG[4592x3448] --> 400x300\nRESIZED!:P1050393.JPG[4592x3448] --> 400x300\nRESIZED!:P1050394.JPG[4592x3448] --> 400x300\n```\n", "tags": ["Python", "PIL"]}