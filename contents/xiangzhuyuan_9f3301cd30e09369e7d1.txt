{"context": " More than 1 year has passed since last update.copy from: How to Stub External Services in Tests\n\n\u5982\u679c\u6211\u4eec\u5728\u6d4b\u8bd5\u4e2d\u4f1a\u8bbf\u95ee\u5230\u5916\u90e8\u7684\u670d\u52a1,\u5f80\u5f80\u4f1a\u6709\u4e0b\u9762\u7684\u95ee\u9898:\n1. \u5982\u679c\u6709\u7f51\u7edc\u8fde\u63a5\u95ee\u9898\u5c31\u4f1a\u8ba9\u6d4b\u8bd5\u5931\u8d25\n2. \u62d6\u6162\u6d4b\u8bd5\n3. \u4e00\u822c\u5916\u90e8\u7684\u7b2c\u4e09\u65b9 API \u8fd8\u6709\u8bbf\u95ee\u6570\u9650\u5236, \u5982 twitter\n4. \u53ef\u80fd\u4f60\u4f1a\u548c\u961f\u53cb\u5408\u4f5c,\u4e00\u8d77\u5f00\u53d1,\u4ed6\u4eec\u7684API \u8fd8\u6ca1\u6709\u5f00\u53d1\u5b8c\u6210\u5462,\u53ea\u6709\u4e00\u4e2a\u5f0f\u6837\u7684\u89c4\u8303\n5. \u6211\u4eec\u5728\u6d4b\u8bd5,\u800c\u7b2c\u4e09\u65b9\u7684 API \u4e0d\u63d0\u4f9b\u6d4b\u8bd5\u73af\u5883\u554a,\u4f60\u600e\u4e48\u6d4b\u8bd5.\n\u5f53\u6211\u4eec\u7684\u7a0b\u5e8f\u548c\u5916\u90e8\u4ea4\u4e92\u7684\u65f6\u5019,\u6211\u4eec\u9700\u8981\u786e\u4fdd\u6211\u4eec\u7684\u6d4b\u8bd5 case \u6ca1\u6709\u8bbf\u95ee\u5230\u7b2c\u4e09\u65b9\u7684\u670d\u52a1.\u6211\u4eec\u7684\u6d4b\u8bd5\u5e94\u8be5\u662f\u9694\u79bb\u7684.\n\n\u65ad\u4e86\u7f51\u7edc\u8fde\u63a5\n\u6211\u4eec\u8981\u4f7f\u7528Webmock,\u53ef\u4ee5\u7528\u6765stub\u5916\u90e8http request \u7684 gem, \u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc,\u6211\u4eec\u9700\u8981\u901a\u8fc7Github API\u6765\u641c\u7d22FactoryGirl \u7684\u8d21\u732e\u8005!\n\u9996\u5148,\u6211\u4eec\u8981\u5728spec_helper.rb\u91cc\u7981\u7528\u5916\u90e8\u8fde\u63a5. \u8fd9\u6837\u7684:\n# spec/spec_helper.rb\nrequire 'webmock/rspec'\nWebMock.disable_net_connect!(allow_localhost: true)\n\n\n\u73b0\u5728\u6765\u770b\u770b\u662f\u5426\u4f1a\u6709\u5f02\u5e38:\n# spec/features/external_request_spec.rb\nrequire 'spec_helper'\n\nfeature 'External request' do\n  it 'queries FactoryGirl contributors on GitHub' do\n    uri = URI('https://api.github.com/repos/thoughtbot/factory_girl/contributors')\n\n    response = Net::HTTP.get(uri)\n\n    expect(response).to be_an_instance_of(String)\n  end\nend\n\n\u8fd9\u4e2a\u7684\u60c5\u51b5\u4e0b,\u6211\u4eec\u5e94\u8be5\u770b\u89c1\u8fd9\u4e9b\u9884\u671f\u7684\u5f02\u5e38:\n\n$ rspec spec/features/external_request_spec.rb\nF\n\nFailures:\n\n  1) External request queries FactoryGirl contributors on GitHub\n     Failure/Error: response = Net::HTTP.get(uri)\n     WebMock::NetConnectNotAllowedError:\n       Real HTTP connections are disabled.\n       Unregistered request: GET https://api.github.com/repos/thoughtbot/factory_girl/contributors\n       with headers {\n         'Accept'=>'*/*',\n         'Accept-Encoding'=>'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',\n         'Host'=>'api.github.com',\n         'User-Agent'=>'Ruby'\n       }\n\n       You can stub this request with the following snippet:\n\n       stub_request(:get,     \"https://api.github.com/repos/thoughtbot/factory_girl/contributors\").\n     with(:headers => {'Accept'=>'*/*', 'Accept-Encoding'=>'gzip;q=1.0,deflate;q=0.6,identity;q=0.3', 'Host'=>'api.github.com', 'User-Agent'=>'Ruby'}).\n     to_return(:status => 200, :body => \"\", :headers => {})\n\n       ============================================================\n     # ./spec/features/external_request_spec.rb:8:in `block (2 levels) in <top (required)>'\n\nFinished in 0.00499 seconds\n1 example, 1 failure\n\n\n\u6211\u4eec\u600e\u4e48\u5904\u7406\u8fd9\u4e2a\u60c5\u51b5\u5462,\u53ef\u4ee5\u901a\u8fc7 stub \u8fd9\u4e2a api \u7684\u8bf7\u6c42,\u770b\u770b:\n# spec/spec_helper.rb\nRSpec.configure do |config|\n  config.before(:each) do\n    stub_request(:get, /api.github.com/).\n      with(headers: {'Accept'=>'*/*', 'User-Agent'=>'Ruby'}).\n      to_return(status: 200, body: \"stubbed response\", headers: {})\n  end\nend\n\n\n\u73b0\u5728\u518d\u6b21\u8dd1\u8fd9\u4e2a\u6d4b\u8bd5\u770b\u770b:\n$ rspec spec/features/external_request_spec.rb\n.\n\nFinished in 0.01116 seconds\n1 example, 0 failures\n\n\nVCR\n\u53e6\u5916\u4e00\u4e2a\u65b9\u5f0f\u5c31\u662f\u4e3a\u4e86\u9632\u6b62\u5916\u90e8\u7684\u8bf7\u6c42,\u53ef\u4ee5\u901a\u8fc7\u5f55\u5236\u4e00\u4e2aAPI \u7684\u8bbf\u95ee,\u7136\u540e\u5f53\u518d\u6b21\u6709 API \u7684\u8bf7\u6c42\u65f6\u5c31\u628a\u7ed3\u6784\u56de\u653e\u7ed9\u8c03\u7528\u65b9, \u8fd9\u4e2aVCR gem \u6709\u4e00\u4e2acassettes \u7684\u6982\u5ff5,\u4ed6\u80fd\u591f\u5f55\u5236\u6d4b\u8bd5 case\u8bbf\u95ee\u5916\u90e8\u7684http \u8bf7\u6c42,\u7136\u540e\u4ee5\u4f9b\u540e\u9700.\n\u5f53\u4f60\u7684\u4f7f\u7528 VCR \u7684\u65f6\u5019\u4f60\u9700\u8981\u6ce8\u610f\u4e0b\u9762\u7684\u65b9\u5f0f:\n\n\u548c\u5176\u4ed6\u4eba\u6c9f\u901a\u600e\u4e48\u5171\u4eab\u8fd9\u4e2a cassette\n\u7b2c\u4e00\u6b21\u8bbf\u95ee\u8fd9\u4e2a\u5916\u90e8\u8bf7\u6c42\u9700\u6210\u529f\n\u5f88\u96be\u6a21\u62df\u5931\u8d25\n\n\u63a5\u4e0b\u6765,\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a\u5047\u7248\u672c\u7684Github \u670d\u52a1.\n\n\u521b\u5efa\u4e00\u4e2a\u5047\u7684\u670d\u52a1(\u7528 sinatra)\n\u5f53\u4f60\u7684\u7a0b\u5e8f\u4e25\u91cd\u4f9d\u8d56\u7b2c\u4e09\u65b9\u670d\u52a1\u7684\u65f6\u5019,\u9700\u8981\u8003\u8651\u901a\u8fc7sinatra \u6765\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u521b\u5efa\u4e00\u4e2a\u5047\u7684\u670d\u52a1.\u5b83\u4f1a\u8ba9\u4f60\u7684\u6d4b\u8bd5\u5b8c\u5168\u9694\u79bb\u8d77\u6765.\u800c\u4e14\u53ef\u4ee5\u5f88\u5bb9\u6613\u63a7\u5236\u6d4b\u8bd5\u7684\u54cd\u5e94\u65f6\u95f4.\n\u9996\u5148,\u6211\u4eec\u901a\u8fc7Webmock \u6765\u628a\u6240\u6709\u7684\u8bf7\u6c42\u8def\u7531\u5230\u8fd9\u4e2a\u6211\u4eec\u65b0\u5efa\u7684Sinatra \u7a0b\u5e8f\u91cc-- FakeGithub.\n# spec/spec_helper.rb\nRSpec.configure do |config|\n  config.before(:each) do\n    stub_request(:any, /api.github.com/).to_rack(FakeGitHub)\n  end\nend\n\n\n\u6211\u4eec\u6765\u521b\u5efa\u8fd9\u4e2a\u5047\u7684\u670d\u52a1;\n\n# spec/support/fake_github.rb\nrequire 'sinatra/base'\n\nclass FakeGitHub < Sinatra::Base\n  get '/repos/:organization/:project/contributors' do\n    json_response 200, 'contributors.json'\n  end\n\n  private\n\n  def json_response(response_code, file_name)\n    content_type :json\n    status response_code\n    File.open(File.dirname(__FILE__) + '/fixtures/' + file_name, 'rb').read\n  end\nend\n\n\n\u4e0b\u8f7d\u8fd9\u4e2a\u4f8b\u5b50\u7684json \u54cd\u5e94.\u7136\u540e\u4fdd\u5b58\u5728\u672c\u5730\u6587\u4ef6\u4e2d\n# spec/support/fixtures/contributors.json\n[\n  {\n    \"login\": \"joshuaclayton\",\n    \"id\": 1574,\n    \"avatar_url\": \"https://2.gravatar.com/avatar/786f05409ca8d18bae8d59200156272c?d=https%3A%2F%2Fidenticons.github.com%2F0d4f4805c36dc6853edfa4c7e1638b48.png\",\n    \"gravatar_id\": \"786f05409ca8d18bae8d59200156272c\",\n    \"url\": \"https://api.github.com/users/joshuaclayton\",\n    \"html_url\": \"https://github.com/joshuaclayton\",\n    \"followers_url\": \"https://api.github.com/users/joshuaclayton/followers\",\n    \"following_url\": \"https://api.github.com/users/joshuaclayton/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/joshuaclayton/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/joshuaclayton/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/joshuaclayton/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/joshuaclayton/orgs\",\n    \"repos_url\": \"https://api.github.com/users/joshuaclayton/repos\",\n    \"events_url\": \"https://api.github.com/users/joshuaclayton/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/joshuaclayton/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false,\n    \"contributions\": 377\n  }\n]\n\n\u66f4\u65b0\u6d4b\u8bd5,\u9a8c\u8bc1\u662f\u4e0d\u662f\u8fd4\u56de\u4e86\u9884\u671f stub \u7684\u54cd\u5e94.\nrequire 'spec_helper'\n\nfeature 'External request' do\n  it 'queries FactoryGirl contributors on GitHub' do\n    uri = URI('https://api.github.com/repos/thoughtbot/factory_girl/contributors')\n    # \u770b\u597d,\u8fd9\u91cc\u662f JSON.load \u5751\u7239!!!\n    response = JSON.load(Net::HTTP.get(uri))\n\n    expect(response.first['login']).to eq 'joshuaclayton'\n  end\nend\n\n\n\u8dd1\u8fd9\u4e2aspecs\n$ rspec spec/features/external_request_spec.rb\n.\n\nFinished in 0.04713 seconds\n1 example, 0 failures\n\n\u270c\ufe0f\u6210\u529f\u4e86!\n\u8fd9\u4e2a\u53ef\u4ee5\u8ba9\u6211\u4eec\u5b8c\u5168\u63a8\u7406\u5916\u90e8 api \u7684\u4f9d\u8d56.\n\u4f46\u662f\u5728\u521b\u5efa\u4e00\u4e2a\u5047\u7684\u670d\u52a1\u7684\u65f6\u5019,\u9700\u8981\u6ce8\u610f\u4e0b\u9762\u7684\u51e0\u4ef6\u4e8b\u60c5:\n1. \u5982\u679c\u6709\u4e86\u8fd9\u4e2a\u989d\u989d\u5916\u7684\u670d\u52a1,\u5c31\u9700\u8981\u989d\u5916\u7684\u7ef4\u62a4\u54e6\n2. \u53ef\u80fd\u4f60\u7684\u8fd9\u4e2a\u670d\u52a1\u8fd4\u56de\u7684\u5185\u5bb9\u8fc7\u671f\u4e86\u54e6!\n-EOF-\n\ncopy from: [How to Stub External Services in Tests\n](http://robots.thoughtbot.com/how-to-stub-external-services-in-tests)\n\u5982\u679c\u6211\u4eec\u5728\u6d4b\u8bd5\u4e2d\u4f1a\u8bbf\u95ee\u5230\u5916\u90e8\u7684\u670d\u52a1,\u5f80\u5f80\u4f1a\u6709\u4e0b\u9762\u7684\u95ee\u9898:\n1. \u5982\u679c\u6709\u7f51\u7edc\u8fde\u63a5\u95ee\u9898\u5c31\u4f1a\u8ba9\u6d4b\u8bd5\u5931\u8d25\n2. \u62d6\u6162\u6d4b\u8bd5\n3. \u4e00\u822c\u5916\u90e8\u7684\u7b2c\u4e09\u65b9 API \u8fd8\u6709\u8bbf\u95ee\u6570\u9650\u5236, \u5982 twitter\n4. \u53ef\u80fd\u4f60\u4f1a\u548c\u961f\u53cb\u5408\u4f5c,\u4e00\u8d77\u5f00\u53d1,\u4ed6\u4eec\u7684API \u8fd8\u6ca1\u6709\u5f00\u53d1\u5b8c\u6210\u5462,\u53ea\u6709\u4e00\u4e2a\u5f0f\u6837\u7684\u89c4\u8303\n5. \u6211\u4eec\u5728\u6d4b\u8bd5,\u800c\u7b2c\u4e09\u65b9\u7684 API \u4e0d\u63d0\u4f9b\u6d4b\u8bd5\u73af\u5883\u554a,\u4f60\u600e\u4e48\u6d4b\u8bd5.\n\n\u5f53\u6211\u4eec\u7684\u7a0b\u5e8f\u548c\u5916\u90e8\u4ea4\u4e92\u7684\u65f6\u5019,\u6211\u4eec\u9700\u8981\u786e\u4fdd\u6211\u4eec\u7684\u6d4b\u8bd5 case \u6ca1\u6709\u8bbf\u95ee\u5230\u7b2c\u4e09\u65b9\u7684\u670d\u52a1.\u6211\u4eec\u7684\u6d4b\u8bd5\u5e94\u8be5\u662f\u9694\u79bb\u7684.\n\n#\u65ad\u4e86\u7f51\u7edc\u8fde\u63a5\n\n\u6211\u4eec\u8981\u4f7f\u7528`Webmock`,\u53ef\u4ee5\u7528\u6765stub\u5916\u90e8` http request` \u7684 `gem`, \u5728\u8fd9\u4e2a\u4f8b\u5b50\u91cc,\u6211\u4eec\u9700\u8981\u901a\u8fc7` Github API`\u6765\u641c\u7d22` FactoryGirl` \u7684\u8d21\u732e\u8005!\n\n\u9996\u5148,\u6211\u4eec\u8981\u5728`spec_helper.rb`\u91cc\u7981\u7528\u5916\u90e8\u8fde\u63a5. \u8fd9\u6837\u7684:\n\n```ruby\n# spec/spec_helper.rb\nrequire 'webmock/rspec'\nWebMock.disable_net_connect!(allow_localhost: true)\n\n```\n\n\u73b0\u5728\u6765\u770b\u770b\u662f\u5426\u4f1a\u6709\u5f02\u5e38:\n\n```ruby\n# spec/features/external_request_spec.rb\nrequire 'spec_helper'\n\nfeature 'External request' do\n  it 'queries FactoryGirl contributors on GitHub' do\n    uri = URI('https://api.github.com/repos/thoughtbot/factory_girl/contributors')\n\n    response = Net::HTTP.get(uri)\n\n    expect(response).to be_an_instance_of(String)\n  end\nend\n```\n\n\u8fd9\u4e2a\u7684\u60c5\u51b5\u4e0b,\u6211\u4eec\u5e94\u8be5\u770b\u89c1\u8fd9\u4e9b\u9884\u671f\u7684\u5f02\u5e38:\n\n```ruby\n\n$ rspec spec/features/external_request_spec.rb\nF\n\nFailures:\n\n  1) External request queries FactoryGirl contributors on GitHub\n     Failure/Error: response = Net::HTTP.get(uri)\n     WebMock::NetConnectNotAllowedError:\n       Real HTTP connections are disabled.\n       Unregistered request: GET https://api.github.com/repos/thoughtbot/factory_girl/contributors\n       with headers {\n         'Accept'=>'*/*',\n         'Accept-Encoding'=>'gzip;q=1.0,deflate;q=0.6,identity;q=0.3',\n         'Host'=>'api.github.com',\n         'User-Agent'=>'Ruby'\n       }\n\n       You can stub this request with the following snippet:\n\n       stub_request(:get,     \"https://api.github.com/repos/thoughtbot/factory_girl/contributors\").\n     with(:headers => {'Accept'=>'*/*', 'Accept-Encoding'=>'gzip;q=1.0,deflate;q=0.6,identity;q=0.3', 'Host'=>'api.github.com', 'User-Agent'=>'Ruby'}).\n     to_return(:status => 200, :body => \"\", :headers => {})\n\n       ============================================================\n     # ./spec/features/external_request_spec.rb:8:in `block (2 levels) in <top (required)>'\n\nFinished in 0.00499 seconds\n1 example, 1 failure\n\n```\n\n\u6211\u4eec\u600e\u4e48\u5904\u7406\u8fd9\u4e2a\u60c5\u51b5\u5462,\u53ef\u4ee5\u901a\u8fc7 stub \u8fd9\u4e2a api \u7684\u8bf7\u6c42,\u770b\u770b:\n\n\n```ruby\n# spec/spec_helper.rb\nRSpec.configure do |config|\n  config.before(:each) do\n    stub_request(:get, /api.github.com/).\n      with(headers: {'Accept'=>'*/*', 'User-Agent'=>'Ruby'}).\n      to_return(status: 200, body: \"stubbed response\", headers: {})\n  end\nend\n\n```\n\n\u73b0\u5728\u518d\u6b21\u8dd1\u8fd9\u4e2a\u6d4b\u8bd5\u770b\u770b:\n\n```ruby\n$ rspec spec/features/external_request_spec.rb\n.\n\nFinished in 0.01116 seconds\n1 example, 0 failures\n```\n\n#VCR\n\n\u53e6\u5916\u4e00\u4e2a\u65b9\u5f0f\u5c31\u662f\u4e3a\u4e86\u9632\u6b62\u5916\u90e8\u7684\u8bf7\u6c42,\u53ef\u4ee5\u901a\u8fc7\u5f55\u5236\u4e00\u4e2aAPI \u7684\u8bbf\u95ee,\u7136\u540e\u5f53\u518d\u6b21\u6709 API \u7684\u8bf7\u6c42\u65f6\u5c31\u628a\u7ed3\u6784`\u56de\u653e`\u7ed9\u8c03\u7528\u65b9, \u8fd9\u4e2a` VCR` gem \u6709\u4e00\u4e2a` cassettes` \u7684\u6982\u5ff5,\u4ed6\u80fd\u591f\u5f55\u5236\u6d4b\u8bd5 case\u8bbf\u95ee\u5916\u90e8\u7684` http` \u8bf7\u6c42,\u7136\u540e\u4ee5\u4f9b\u540e\u9700.\n\n\u5f53\u4f60\u7684\u4f7f\u7528 VCR \u7684\u65f6\u5019\u4f60\u9700\u8981\u6ce8\u610f\u4e0b\u9762\u7684\u65b9\u5f0f:\n\n1. \u548c\u5176\u4ed6\u4eba\u6c9f\u901a\u600e\u4e48\u5171\u4eab\u8fd9\u4e2a cassette\n2. \u7b2c\u4e00\u6b21\u8bbf\u95ee\u8fd9\u4e2a\u5916\u90e8\u8bf7\u6c42\u9700\u6210\u529f\n3. \u5f88\u96be\u6a21\u62df\u5931\u8d25\n\n\u63a5\u4e0b\u6765,\u6211\u4eec\u8981\u521b\u5efa\u4e00\u4e2a\u5047\u7248\u672c\u7684` Github` \u670d\u52a1.\n\n#\u521b\u5efa\u4e00\u4e2a\u5047\u7684\u670d\u52a1(\u7528 sinatra)\n\n\u5f53\u4f60\u7684\u7a0b\u5e8f\u4e25\u91cd\u4f9d\u8d56\u7b2c\u4e09\u65b9\u670d\u52a1\u7684\u65f6\u5019,\u9700\u8981\u8003\u8651\u901a\u8fc7` sinatra` \u6765\u5728\u4f60\u7684\u7a0b\u5e8f\u4e2d\u521b\u5efa\u4e00\u4e2a\u5047\u7684\u670d\u52a1.\u5b83\u4f1a\u8ba9\u4f60\u7684\u6d4b\u8bd5\u5b8c\u5168\u9694\u79bb\u8d77\u6765.\u800c\u4e14\u53ef\u4ee5\u5f88\u5bb9\u6613\u63a7\u5236\u6d4b\u8bd5\u7684\u54cd\u5e94\u65f6\u95f4.\n\n\u9996\u5148,\u6211\u4eec\u901a\u8fc7` Webmock` \u6765\u628a\u6240\u6709\u7684\u8bf7\u6c42\u8def\u7531\u5230\u8fd9\u4e2a\u6211\u4eec\u65b0\u5efa\u7684` Sinatra` \u7a0b\u5e8f\u91cc-- `FakeGithub`.\n\n```ruby\n# spec/spec_helper.rb\nRSpec.configure do |config|\n  config.before(:each) do\n    stub_request(:any, /api.github.com/).to_rack(FakeGitHub)\n  end\nend\n\n```\n\u6211\u4eec\u6765\u521b\u5efa\u8fd9\u4e2a\u5047\u7684\u670d\u52a1;\n\n```ruby\n\n# spec/support/fake_github.rb\nrequire 'sinatra/base'\n\nclass FakeGitHub < Sinatra::Base\n  get '/repos/:organization/:project/contributors' do\n    json_response 200, 'contributors.json'\n  end\n\n  private\n\n  def json_response(response_code, file_name)\n    content_type :json\n    status response_code\n    File.open(File.dirname(__FILE__) + '/fixtures/' + file_name, 'rb').read\n  end\nend\n\n```\n\n\u4e0b\u8f7d\u8fd9\u4e2a\u4f8b\u5b50\u7684` json` \u54cd\u5e94.\u7136\u540e\u4fdd\u5b58\u5728\u672c\u5730\u6587\u4ef6\u4e2d\n\n```ruby\n# spec/support/fixtures/contributors.json\n[\n  {\n    \"login\": \"joshuaclayton\",\n    \"id\": 1574,\n    \"avatar_url\": \"https://2.gravatar.com/avatar/786f05409ca8d18bae8d59200156272c?d=https%3A%2F%2Fidenticons.github.com%2F0d4f4805c36dc6853edfa4c7e1638b48.png\",\n    \"gravatar_id\": \"786f05409ca8d18bae8d59200156272c\",\n    \"url\": \"https://api.github.com/users/joshuaclayton\",\n    \"html_url\": \"https://github.com/joshuaclayton\",\n    \"followers_url\": \"https://api.github.com/users/joshuaclayton/followers\",\n    \"following_url\": \"https://api.github.com/users/joshuaclayton/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/joshuaclayton/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/joshuaclayton/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/joshuaclayton/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/joshuaclayton/orgs\",\n    \"repos_url\": \"https://api.github.com/users/joshuaclayton/repos\",\n    \"events_url\": \"https://api.github.com/users/joshuaclayton/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/joshuaclayton/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false,\n    \"contributions\": 377\n  }\n]\n```\n\n\u66f4\u65b0\u6d4b\u8bd5,\u9a8c\u8bc1\u662f\u4e0d\u662f\u8fd4\u56de\u4e86\u9884\u671f stub \u7684\u54cd\u5e94.\n\n\n```ruby\nrequire 'spec_helper'\n\nfeature 'External request' do\n  it 'queries FactoryGirl contributors on GitHub' do\n    uri = URI('https://api.github.com/repos/thoughtbot/factory_girl/contributors')\n    # \u770b\u597d,\u8fd9\u91cc\u662f JSON.load \u5751\u7239!!!\n    response = JSON.load(Net::HTTP.get(uri))\n\n    expect(response.first['login']).to eq 'joshuaclayton'\n  end\nend\n\n```\n\n\u8dd1\u8fd9\u4e2a` specs`\n\n```ruby\n$ rspec spec/features/external_request_spec.rb\n.\n\nFinished in 0.04713 seconds\n1 example, 0 failures\n```\n\u270c\ufe0f\u6210\u529f\u4e86!\n\u8fd9\u4e2a\u53ef\u4ee5\u8ba9\u6211\u4eec\u5b8c\u5168\u63a8\u7406\u5916\u90e8 api \u7684\u4f9d\u8d56.\n\u4f46\u662f\u5728\u521b\u5efa\u4e00\u4e2a\u5047\u7684\u670d\u52a1\u7684\u65f6\u5019,\u9700\u8981\u6ce8\u610f\u4e0b\u9762\u7684\u51e0\u4ef6\u4e8b\u60c5:\n1. \u5982\u679c\u6709\u4e86\u8fd9\u4e2a\u989d\u989d\u5916\u7684\u670d\u52a1,\u5c31\u9700\u8981\u989d\u5916\u7684\u7ef4\u62a4\u54e6\n2. \u53ef\u80fd\u4f60\u7684\u8fd9\u4e2a\u670d\u52a1\u8fd4\u56de\u7684\u5185\u5bb9\u8fc7\u671f\u4e86\u54e6!\n\n-EOF-\n\n", "tags": ["RSpec", "TDD", "Mock", "stub"]}