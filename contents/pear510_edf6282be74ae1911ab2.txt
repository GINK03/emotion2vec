{"context": "\u3053\u306e\u8a18\u4e8b\u306f RxJava Advent Calendar 2016 \u306e\uff11\uff10\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u52e2\u3044\u3067RxJava Advent Calendar\u306b\u7a81\u3063\u8fbc\u3093\u3060\u3093\u3067\u3059\u304c\u3001\u4f55\u66f8\u3053\u3046\u304b\u8ff7\u3063\u3066\u3066\u3001\n\u305d\u3046\u3044\u3048\u3070\u81ea\u5206\u306f\u306b\u308f\u304b\u3060\u306a\u3001\u3068\u601d\u3063\u3066Operators\u3092\u3082\u3046\u4e00\u56de\u52c9\u5f37\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u6b21\u7b2c\u3067\u3059\u3002\n\u305d\u306e\uff11\u3063\u3066\u306a\u3063\u3066\u308b\u306e\u306f\u591a\u3044\u306e\u3067\u5206\u5272\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u304b\u3089\u3067\u3001\u5168\u90e8\u30675\u56de\u306b\u308f\u3051\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\u305d\u308c\u3067\u306f1\u56de\u76ee\u306f ReactiveX Introduction \u306b\u66f8\u3044\u3066\u3042\u308b Creating Observables, Transforming Observables \u306e\uff12\u3064\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\nCreating\n\u4e3b\u306b\u65b0\u3057\u3044 Observable \u3092\u751f\u307f\u51fa\u3059\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u9054\n\nCreate\n\u30b9\u30af\u30e9\u30c3\u30c1\u3067 Observable \u3092\u4f5c\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3067\u3059\u3002\nAndroid\u3060\u3068\u975e\u540c\u671f\u901a\u4fe1\u306a\u3093\u304b\u3067\u3088\u304f\u307f\u308b\u3084\u3064\u3067\u3059\u306d\u3002\n\u4f7f\u3044\u65b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\npublic class Create {\n    public static void main(String[] args) {\n        Observable.create(e -> {\n            Person person = new Person();\n            person.age = 100;\n            person.name = \"nshiba\";\n            e.onNext(person);\n            e.onComplete();\n        }).subscribe(System.out::println);\n    }\n\n    private static class Person {\n        int age;\n        String name;\n\n        @Override\n        public String toString() {\n            return name + \":\" + String.valueOf(age);\n        }\n    }\n}\n\n\u51fa\u529b\nnshiba:100\n\nonNext \u3067\u5024\u3092\u6e21\u3057\u3066\u3042\u3052\u3066\u3001\u7d42\u4e86\u6642\u306b onComplete \u3092\u547c\u3076\u611f\u3058\u3067\u3059\u3002\n\u307e\u305f\u3001\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306b\u306f onError \u3092\u547c\u3073\u307e\u3059\u3002\n\nDefer\ndefer \u306f\u5b9f\u884c\u3055\u305b\u308b Observable \u3092 subscribe \u3057\u305f\u3068\u304d\u306b\u4f5c\u6210\u3059\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3067\u3059\u3002\n\u901a\u5e38\u306e create \u306f\u305d\u306e\u5834\u3067\u5b9f\u884c\u3059\u308b Observable \u3092\u4f5c\u6210\u3057\u307e\u3059\u304c\u3001 defer \u306f Observable \u306e\u4f5c\u6210\u81ea\u4f53\u3092\u9045\u5ef6\u3055\u305b\u307e\u3059\u3002\nObservable observable = Observable.defer(() -> observer -> {\n    observer.onNext(\"test\");\n    observer.onComplete();\n});\n\n// \u3053\u306e\u77ac\u9593\u306bdefer\u306e\u4e2d\u3067\u65b0\u3057\u304f Observable \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\nobservable.subscribe(System.out::println);\n\n\nEmpty/Never/Throw\n\u3053\u308c\u3089\u306eOperator\u305f\u3061\u306f\u9650\u3089\u308c\u305f\u7528\u9014\u3067\u4e3b\u306b\u30c6\u30b9\u30c8\u7528\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nEmpty\n\u4f55\u3082\u5024\u306f\u306a\u3044\u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3059\u308b Observable \u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a onComplete \u3057\u304b\u547c\u3070\u308c\u307e\u305b\u3093\u3002\n\nNever\n\u4f55\u3082\u5024\u304c\u306a\u304f\u3001\u7d42\u4e86\u3082\u3057\u306a\u3044 Observable \u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\nThrow\n\u4f55\u3082\u5024\u306f\u306a\u3044\u304c\u3001\u6307\u5b9a\u3057\u305f\u30a8\u30e9\u30fc\u3092\u306f\u3044\u3066\u7d42\u4e86\u3059\u308b Observable \u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\nFrom\n\u69d8\u3005\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092Observable\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u304a\u305d\u3089\u304f\u30ea\u30b9\u30c8\u3092\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3046\u306e\u3067\u30b5\u30f3\u30d7\u30eb\u306f fromArray \u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nint[] nums = new int[] {1, 2, 3, 4, 5};\nObservable\n        .fromArray(nums)\n        .subscribe(ints -> {\n            System.out.println(\"onNext\");\n            System.out.println(Arrays.toString(ints));\n        },\n        throwable -> {\n            System.out.println(\"onError\");\n        },\n        () -> {\n            System.out.println(\"onComplete\");\n        });\n\n\u51fa\u529b\nonNext\n[1, 2, 3, 4, 5]\nonComplete\n\n\nInterval\n\u6307\u5b9a\u3057\u305f\u4e00\u5b9a\u9593\u9694\u3067\u6574\u6570\u306e\u5024\u3092\u51fa\u529b\u3059\u308b Observable \u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u6700\u521d\u306b\u3069\u308c\u304f\u3089\u3044\u9045\u5ef6\u3055\u305b\u308b\u304b\u306e\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002\nObservable\n        .interval(1, TimeUnit.SECONDS)\n        .subscribe(System.out::print);\n\n\u51fa\u529b\n01234567789...\n\n\nJust\n\u76f4\u63a5\u5f15\u6570\u306b\u6e21\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067 Observable \u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u8907\u6570\u6e21\u3057\u305f\u5834\u5408\u306f\u305d\u306e\u5206 onNext \u304c\u547c\u3070\u308c\u3001\u8907\u6570\u6e21\u3059\u5834\u5408\u306f\u578b\u304c\u7d71\u4e00\u3055\u308c\u3066\u306a\u304f\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u305b\u3093\u3002\nObservable.just(3, 1, 5, 4, \"test\")\n        .subscribe(num -> {\n            System.out.println(\"onNext: \" + num);\n        }, throwable -> {\n            System.out.println(\"onError\");\n        }, () -> {\n            System.out.println(\"onComplete\");\n        });\n\n\u51fa\u529b\nonNext: 3\nonNext: 1\nonNext: 5\nonNext: 4\nonNext: test\nonComplete\n\n\nRange\n\u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u306e\u6574\u6570\u3092\u51fa\u529b\u3059\u308b Observable \u3092\u751f\u6210\u3057\u307e\u3059\u3002\nObservable.range(0, 10)\n        .subscribe(i -> {\n            System.out.println(\"onNext: \" + i);\n        }, throwable -> {\n            System.out.println(\"onError\");\n        }, () -> {\n            System.out.println(\"onComplete\");\n        });\n\n\u51fa\u529b\nonNext: 0\nonNext: 1\nonNext: 2\nonNext: 3\nonNext: 4\nonNext: 5\nonNext: 6\nonNext: 7\nonNext: 8\nonNext: 9\nonComplete\n\n\nRepeat\n\u6307\u5b9a\u56de\u6570\u7e70\u308a\u8fd4\u3059 Observable \u3092\u751f\u6210\u3057\u307e\u3059\u3002\nObservable.just(1, 2, 3, 4, 5)\n        .repeat(3)\n        .subscribe(i -> {\n            System.out.println(\"onNext: \" + i);\n        }, throwable -> {\n            System.out.println(\"onError\");\n        }, () -> {\n            System.out.println(\"onComplete\");\n        });\n\n\u51fa\u529b\nonNext: 1\nonNext: 2\nonNext: 3\nonNext: 1\nonNext: 2\nonNext: 3\nonNext: 1\nonNext: 2\nonNext: 3\nonComplete\n\n\nStart\n\u306a\u3093\u304b\u8a08\u7b97\u3057\u305f\u5024\u306a\u3069\u3092\u8fd4\u305b\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u3092\u51fa\u529b\u3059\u308b Observable \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nCreate \u306b\u3061\u3087\u3063\u3068\u4f3c\u3066\u308b\u90e8\u5206\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u623b\u308a\u5024\u304c\u4efb\u610f\u306e\u5024\u3067\u3042\u3063\u3066\u3001 onNext , onComplete \u306f\u547c\u3070\u306a\u3044\u3082\u306e\u3067\u3059\u3002\nObservable.fromCallable(() -> {\n    String str = \"java\";\n    str += \":\" + \"RxJava\";\n    return str;\n}).subscribe(System.out::println);\n\n\u51fa\u529b\njava:RxJava\n\n\nTimer\n\u6307\u5b9a\u3057\u305f\u6642\u9593\u5206\u306e\u9045\u5ef6\u5f8c\u306b\u5024\u304c\u51fa\u529b\u3059\u308b Observable \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nSystem.out.println(System.currentTimeMillis());\nObservable.timer(3, TimeUnit.SECONDS)\n        .subscribe(aLong -> {\n            System.out.println(System.currentTimeMillis());\n        });\n\n\u51fa\u529b\n1480975677330\n1480975680651\n\n\nTransforming\n\nBuffer\n\u6307\u5b9a\u3057\u305f\u9593\u9694\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u5206\u5272\u3057\u3066\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3002\nObservable.range(1, 5)\n        .buffer(3)\n        .subscribe(System.out::println);\n\n\u51fa\u529b\n[1, 2, 3]\n[4, 5]\n\n\nFlatMap\n\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u6d41\u308c\u3066\u304d\u305f\u3082\u306e\u3092\u51e6\u7406\u3057\u3066\u304b\u3089\u3001\u65b0\u3057\u3044 Observable \u306b\u5408\u6210\u3059\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3002\nObservable.just(1, 2, 3)\n        .flatMap(i -> Observable.range(i, i * 2))\n        .subscribe(System.out::print);\n\n\u51fa\u529b\n122345345678\n\n\nGroupBy\n\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u6761\u4ef6\u306b\u5f93\u3063\u3066\u30b0\u30eb\u30fc\u30d7\u306b\u5206\u3051\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3002\n\u540c\u3058\u30b0\u30eb\u30fc\u30d7\u306b\u3057\u305f\u3044\u3082\u306e\u306b\u540c\u3058\u5024\u3092\u8fd4\u3059\u3068\u540c\u3058\u30b0\u30eb\u30fc\u30d7\u306b\u306a\u308a\u307e\u3059\u3002\nObservable.range(1, 10)\n        .groupBy(integer -> integer % 3)\n        .subscribe(integerIntegerGroupedObservable -> {\n            integerIntegerGroupedObservable.toList().subscribe(System.out::println);\n        });\n\n\u51fa\u529b\n[3, 6, 9]\n[1, 4, 7, 10]\n[2, 5, 8]\n\n\nMap\n\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u6d41\u308c\u3066\u304d\u305f\u5024\u3092\u5909\u5316\u3055\u305b\u308b\u4e8b\u304c\u3067\u304d\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3002\n\u524d\u8ff0\u306e FlatMap \u3068\u306e\u9055\u3044\u306f\u3001 FlatMap \u306f Observable \u3092\u8fd4\u3057\u3066\u3001 Map \u306f\u5024\u305d\u306e\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002\nObservable.just(1,2,3)\n        .map(i -> i * 10)\n        .subscribe(System.out::println);\n\n\u51fa\u529b\n10\n20\n30\n\n\nScan\n\u30ea\u30b9\u30c8\u306b\u9806\u6b21\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u304fOperator\u3002\uff12\u3064\u305a\u3064\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u304f\u3002\n\u6700\u521d\u306f1\u3064\u76ee\u30682\u3064\u76ee\u304c\u5f15\u6570\u306b\u6e21\u3055\u308c\u3001\u305d\u308c\u4ee5\u964d\u306f\u524d\u56de\u306e\u51e6\u7406\u3067\u623b\u308a\u5024\u306b\u6e21\u3055\u308c\u305f\u5024\u304c\u7b2c\u4e00\u5f15\u6570\u3001\u6b21\u306e\u5024\u304c\u7b2c\uff12\u5f15\u6570\u306b\u6e21\u3055\u308c\u308b\u3002\nsubscribe \u6642\u306b\u6e21\u3055\u308c\u308b\u5024\u306f\u8981\u7d20\u306e\uff11\u3064\u76ee + \u623b\u308a\u5024\u306b\u6e21\u3055\u308c\u305f\u5024\u3002\nObservable.range(1, 5)\n        .scan((sum, item) -> sum + item)\n        .subscribe(System.out::println);\n\n\u51fa\u529b\n1\n3\n6\n10\n15\n\n\nWindow\n\u6307\u5b9a\u3057\u305f\u9593\u9694\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u5206\u5272\u3057\u3066\u3001\u5206\u5272\u3057\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u65b0\u305f\u306a Observable \u3092\u4f5c\u6210\u3059\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3002\n\u524d\u8ff0\u306e Buffer \u3068\u4f3c\u3066\u3044\u308b\u304c\u3001 Buffer \u306f List<Integer> \u3092\u51fa\u529b\u3059\u308b\u306e\u306b\u5bfe\u3057\u3001 Window \u306f Observable<Integer> \u3092\u51fa\u529b\u3059\u308b\u3002\nObservable.range(1,5)\n        .window(3)\n        .subscribe(integerObservable -> {\n            integerObservable.toList().subscribe(System.out::println);\n        });\n\n\u51fa\u529b\n[1, 2, 3]\n[4, 5]\n\n\n\u6700\u5f8c\u306b\n\u3053\u3093\u306a\u611f\u3058\u3067\u4ed6\u306e\u3082\u3084\u3063\u3066\u3044\u3051\u305f\u3089\u3068\u601d\u3063\u3066\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u516c\u958b\u3057\u3066\u3044\u307e\u3059 -> nshiba/rx-samples\n\u307e\u305f\u3001\u306a\u306b\u304b\u9593\u9055\u3063\u3066\u3044\u308b\u70b9\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u30b3\u30e1\u30f3\u30c8\u3084github\u306eissue\u306a\u3069\u306b\u66f8\u3044\u3066\u3082\u3089\u3048\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [RxJava Advent Calendar 2016](http://qiita.com/advent-calendar/2016/rxjava) \u306e\uff11\uff10\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u52e2\u3044\u3067RxJava Advent Calendar\u306b\u7a81\u3063\u8fbc\u3093\u3060\u3093\u3067\u3059\u304c\u3001\u4f55\u66f8\u3053\u3046\u304b\u8ff7\u3063\u3066\u3066\u3001\n\u305d\u3046\u3044\u3048\u3070\u81ea\u5206\u306f\u306b\u308f\u304b\u3060\u306a\u3001\u3068\u601d\u3063\u3066Operators\u3092\u3082\u3046\u4e00\u56de\u52c9\u5f37\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u6b21\u7b2c\u3067\u3059\u3002\n\n\u305d\u306e\uff11\u3063\u3066\u306a\u3063\u3066\u308b\u306e\u306f\u591a\u3044\u306e\u3067\u5206\u5272\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u304b\u3089\u3067\u3001\u5168\u90e8\u30675\u56de\u306b\u308f\u3051\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\n\u305d\u308c\u3067\u306f1\u56de\u76ee\u306f [ReactiveX Introduction](http://reactivex.io/documentation/operators.html) \u306b\u66f8\u3044\u3066\u3042\u308b Creating Observables, Transforming Observables \u306e\uff12\u3064\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n# Creating\n\u4e3b\u306b\u65b0\u3057\u3044 `Observable` \u3092\u751f\u307f\u51fa\u3059\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u9054\n\n## Create\n\u30b9\u30af\u30e9\u30c3\u30c1\u3067 `Observable` \u3092\u4f5c\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3067\u3059\u3002\nAndroid\u3060\u3068\u975e\u540c\u671f\u901a\u4fe1\u306a\u3093\u304b\u3067\u3088\u304f\u307f\u308b\u3084\u3064\u3067\u3059\u306d\u3002\n\n\u4f7f\u3044\u65b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n```Java\npublic class Create {\n    public static void main(String[] args) {\n        Observable.create(e -> {\n            Person person = new Person();\n            person.age = 100;\n            person.name = \"nshiba\";\n            e.onNext(person);\n            e.onComplete();\n        }).subscribe(System.out::println);\n    }\n\n    private static class Person {\n        int age;\n        String name;\n\n        @Override\n        public String toString() {\n            return name + \":\" + String.valueOf(age);\n        }\n    }\n}\n```\n\n\u51fa\u529b\n\n```\nnshiba:100\n```\n\n`onNext` \u3067\u5024\u3092\u6e21\u3057\u3066\u3042\u3052\u3066\u3001\u7d42\u4e86\u6642\u306b `onComplete` \u3092\u547c\u3076\u611f\u3058\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306b\u306f `onError` \u3092\u547c\u3073\u307e\u3059\u3002\n\n## Defer\n`defer` \u306f\u5b9f\u884c\u3055\u305b\u308b `Observable` \u3092 `subscribe` \u3057\u305f\u3068\u304d\u306b\u4f5c\u6210\u3059\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3067\u3059\u3002\n\n\u901a\u5e38\u306e `create` \u306f\u305d\u306e\u5834\u3067\u5b9f\u884c\u3059\u308b `Observable` \u3092\u4f5c\u6210\u3057\u307e\u3059\u304c\u3001 `defer` \u306f `Observable` \u306e\u4f5c\u6210\u81ea\u4f53\u3092\u9045\u5ef6\u3055\u305b\u307e\u3059\u3002\n\n```Java\nObservable observable = Observable.defer(() -> observer -> {\n    observer.onNext(\"test\");\n    observer.onComplete();\n});\n\n// \u3053\u306e\u77ac\u9593\u306bdefer\u306e\u4e2d\u3067\u65b0\u3057\u304f Observable \u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\nobservable.subscribe(System.out::println);\n```\n\n## Empty/Never/Throw\n\u3053\u308c\u3089\u306eOperator\u305f\u3061\u306f\u9650\u3089\u308c\u305f\u7528\u9014\u3067\u4e3b\u306b\u30c6\u30b9\u30c8\u7528\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n### Empty\n\u4f55\u3082\u5024\u306f\u306a\u3044\u304c\u6b63\u5e38\u306b\u7d42\u4e86\u3059\u308b `Observable` \u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a `onComplete` \u3057\u304b\u547c\u3070\u308c\u307e\u305b\u3093\u3002\n\n### Never\n\u4f55\u3082\u5024\u304c\u306a\u304f\u3001\u7d42\u4e86\u3082\u3057\u306a\u3044 `Observable` \u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\n### Throw\n\u4f55\u3082\u5024\u306f\u306a\u3044\u304c\u3001\u6307\u5b9a\u3057\u305f\u30a8\u30e9\u30fc\u3092\u306f\u3044\u3066\u7d42\u4e86\u3059\u308b `Observable` \u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\n## From\n\u69d8\u3005\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092Observable\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u304a\u305d\u3089\u304f\u30ea\u30b9\u30c8\u3092\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3046\u306e\u3067\u30b5\u30f3\u30d7\u30eb\u306f `fromArray` \u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n```Java\nint[] nums = new int[] {1, 2, 3, 4, 5};\nObservable\n        .fromArray(nums)\n        .subscribe(ints -> {\n            System.out.println(\"onNext\");\n            System.out.println(Arrays.toString(ints));\n        },\n        throwable -> {\n            System.out.println(\"onError\");\n        },\n        () -> {\n            System.out.println(\"onComplete\");\n        });\n```\n\n\u51fa\u529b\n\n```\nonNext\n[1, 2, 3, 4, 5]\nonComplete\n```\n\n## Interval\n\u6307\u5b9a\u3057\u305f\u4e00\u5b9a\u9593\u9694\u3067\u6574\u6570\u306e\u5024\u3092\u51fa\u529b\u3059\u308b `Observable` \u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u6700\u521d\u306b\u3069\u308c\u304f\u3089\u3044\u9045\u5ef6\u3055\u305b\u308b\u304b\u306e\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n```Java\nObservable\n        .interval(1, TimeUnit.SECONDS)\n        .subscribe(System.out::print);\n```\n\n\u51fa\u529b\n\n```\n01234567789...\n```\n\n## Just\n\u76f4\u63a5\u5f15\u6570\u306b\u6e21\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067 `Observable` \u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u8907\u6570\u6e21\u3057\u305f\u5834\u5408\u306f\u305d\u306e\u5206 `onNext` \u304c\u547c\u3070\u308c\u3001\u8907\u6570\u6e21\u3059\u5834\u5408\u306f\u578b\u304c\u7d71\u4e00\u3055\u308c\u3066\u306a\u304f\u3066\u3082\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u305b\u3093\u3002\n\n```Java\nObservable.just(3, 1, 5, 4, \"test\")\n        .subscribe(num -> {\n            System.out.println(\"onNext: \" + num);\n        }, throwable -> {\n            System.out.println(\"onError\");\n        }, () -> {\n            System.out.println(\"onComplete\");\n        });\n```\n\n\u51fa\u529b\n\n```\nonNext: 3\nonNext: 1\nonNext: 5\nonNext: 4\nonNext: test\nonComplete\n```\n\n## Range\n\u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u306e\u6574\u6570\u3092\u51fa\u529b\u3059\u308b `Observable` \u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```Java\nObservable.range(0, 10)\n        .subscribe(i -> {\n            System.out.println(\"onNext: \" + i);\n        }, throwable -> {\n            System.out.println(\"onError\");\n        }, () -> {\n            System.out.println(\"onComplete\");\n        });\n```\n\n\u51fa\u529b\n\n```\nonNext: 0\nonNext: 1\nonNext: 2\nonNext: 3\nonNext: 4\nonNext: 5\nonNext: 6\nonNext: 7\nonNext: 8\nonNext: 9\nonComplete\n```\n\n## Repeat\n\u6307\u5b9a\u56de\u6570\u7e70\u308a\u8fd4\u3059 `Observable` \u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```Java\nObservable.just(1, 2, 3, 4, 5)\n        .repeat(3)\n        .subscribe(i -> {\n            System.out.println(\"onNext: \" + i);\n        }, throwable -> {\n            System.out.println(\"onError\");\n        }, () -> {\n            System.out.println(\"onComplete\");\n        });\n```\n\n\u51fa\u529b\n\n```\nonNext: 1\nonNext: 2\nonNext: 3\nonNext: 1\nonNext: 2\nonNext: 3\nonNext: 1\nonNext: 2\nonNext: 3\nonComplete\n```\n\n## Start\n\u306a\u3093\u304b\u8a08\u7b97\u3057\u305f\u5024\u306a\u3069\u3092\u8fd4\u305b\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u3092\u51fa\u529b\u3059\u308b `Observable` \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n`Create` \u306b\u3061\u3087\u3063\u3068\u4f3c\u3066\u308b\u90e8\u5206\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u623b\u308a\u5024\u304c\u4efb\u610f\u306e\u5024\u3067\u3042\u3063\u3066\u3001 `onNext` , `onComplete` \u306f\u547c\u3070\u306a\u3044\u3082\u306e\u3067\u3059\u3002\n\n```Java\nObservable.fromCallable(() -> {\n    String str = \"java\";\n    str += \":\" + \"RxJava\";\n    return str;\n}).subscribe(System.out::println);\n```\n\n\u51fa\u529b\n\n```\njava:RxJava\n```\n\n## Timer\n\u6307\u5b9a\u3057\u305f\u6642\u9593\u5206\u306e\u9045\u5ef6\u5f8c\u306b\u5024\u304c\u51fa\u529b\u3059\u308b `Observable` \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```Java\nSystem.out.println(System.currentTimeMillis());\nObservable.timer(3, TimeUnit.SECONDS)\n        .subscribe(aLong -> {\n            System.out.println(System.currentTimeMillis());\n        });\n```\n\n\u51fa\u529b\n\n```\n1480975677330\n1480975680651\n```\n\n# Transforming\n## Buffer\n\u6307\u5b9a\u3057\u305f\u9593\u9694\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u5206\u5272\u3057\u3066\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3002\n\n```Java\nObservable.range(1, 5)\n        .buffer(3)\n        .subscribe(System.out::println);\n```\n\n\u51fa\u529b\n\n```\n[1, 2, 3]\n[4, 5]\n```\n\n## FlatMap\n\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u6d41\u308c\u3066\u304d\u305f\u3082\u306e\u3092\u51e6\u7406\u3057\u3066\u304b\u3089\u3001\u65b0\u3057\u3044 `Observable` \u306b\u5408\u6210\u3059\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3002\n\n```Java\nObservable.just(1, 2, 3)\n        .flatMap(i -> Observable.range(i, i * 2))\n        .subscribe(System.out::print);\n```\n\n\u51fa\u529b\n\n```\n122345345678\n```\n\n## GroupBy\n\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u6761\u4ef6\u306b\u5f93\u3063\u3066\u30b0\u30eb\u30fc\u30d7\u306b\u5206\u3051\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3002\n\u540c\u3058\u30b0\u30eb\u30fc\u30d7\u306b\u3057\u305f\u3044\u3082\u306e\u306b\u540c\u3058\u5024\u3092\u8fd4\u3059\u3068\u540c\u3058\u30b0\u30eb\u30fc\u30d7\u306b\u306a\u308a\u307e\u3059\u3002\n\n```Java\nObservable.range(1, 10)\n        .groupBy(integer -> integer % 3)\n        .subscribe(integerIntegerGroupedObservable -> {\n            integerIntegerGroupedObservable.toList().subscribe(System.out::println);\n        });\n```\n\n\u51fa\u529b\n\n```\n[3, 6, 9]\n[1, 4, 7, 10]\n[2, 5, 8]\n```\n\n## Map\n\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u6d41\u308c\u3066\u304d\u305f\u5024\u3092\u5909\u5316\u3055\u305b\u308b\u4e8b\u304c\u3067\u304d\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3002\n\u524d\u8ff0\u306e `FlatMap` \u3068\u306e\u9055\u3044\u306f\u3001 `FlatMap` \u306f `Observable` \u3092\u8fd4\u3057\u3066\u3001 `Map` \u306f\u5024\u305d\u306e\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```Java\nObservable.just(1,2,3)\n        .map(i -> i * 10)\n        .subscribe(System.out::println);\n```\n\n\u51fa\u529b\n\n```\n10\n20\n30\n```\n\n## Scan\n\u30ea\u30b9\u30c8\u306b\u9806\u6b21\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u304fOperator\u3002\uff12\u3064\u305a\u3064\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u304f\u3002\n\u6700\u521d\u306f1\u3064\u76ee\u30682\u3064\u76ee\u304c\u5f15\u6570\u306b\u6e21\u3055\u308c\u3001\u305d\u308c\u4ee5\u964d\u306f\u524d\u56de\u306e\u51e6\u7406\u3067\u623b\u308a\u5024\u306b\u6e21\u3055\u308c\u305f\u5024\u304c\u7b2c\u4e00\u5f15\u6570\u3001\u6b21\u306e\u5024\u304c\u7b2c\uff12\u5f15\u6570\u306b\u6e21\u3055\u308c\u308b\u3002\n`subscribe` \u6642\u306b\u6e21\u3055\u308c\u308b\u5024\u306f\u8981\u7d20\u306e\uff11\u3064\u76ee + \u623b\u308a\u5024\u306b\u6e21\u3055\u308c\u305f\u5024\u3002\n\n```Java\nObservable.range(1, 5)\n        .scan((sum, item) -> sum + item)\n        .subscribe(System.out::println);\n```\n\n\u51fa\u529b\n\n```\n1\n3\n6\n10\n15\n```\n\n## Window\n\u6307\u5b9a\u3057\u305f\u9593\u9694\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u5206\u5272\u3057\u3066\u3001\u5206\u5272\u3057\u305f\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u65b0\u305f\u306a `Observable` \u3092\u4f5c\u6210\u3059\u308b\u30aa\u30da\u30ec\u30fc\u30bf\u30fc\u3002\n\u524d\u8ff0\u306e `Buffer` \u3068\u4f3c\u3066\u3044\u308b\u304c\u3001 `Buffer` \u306f `List<Integer>` \u3092\u51fa\u529b\u3059\u308b\u306e\u306b\u5bfe\u3057\u3001 `Window` \u306f `Observable<Integer>` \u3092\u51fa\u529b\u3059\u308b\u3002\n\n```Java\nObservable.range(1,5)\n        .window(3)\n        .subscribe(integerObservable -> {\n            integerObservable.toList().subscribe(System.out::println);\n        });\n```\n\n\u51fa\u529b\n\n```\n[1, 2, 3]\n[4, 5]\n```\n\n# \u6700\u5f8c\u306b\n\u3053\u3093\u306a\u611f\u3058\u3067\u4ed6\u306e\u3082\u3084\u3063\u3066\u3044\u3051\u305f\u3089\u3068\u601d\u3063\u3066\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u516c\u958b\u3057\u3066\u3044\u307e\u3059 -> [nshiba/rx-samples](https://github.com/nshiba/rx-samples)\n\n\u307e\u305f\u3001\u306a\u306b\u304b\u9593\u9055\u3063\u3066\u3044\u308b\u70b9\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u30b3\u30e1\u30f3\u30c8\u3084github\u306eissue\u306a\u3069\u306b\u66f8\u3044\u3066\u3082\u3089\u3048\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n", "tags": ["RxJava", "Java"]}