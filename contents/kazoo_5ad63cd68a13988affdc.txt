{"context": " More than 1 year has passed since last update.\n\n\u524d\u63d0\n\u300e\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u305f\u3081\u306eOpenGL ES\u5165\u9580 \u57fa\u790e\u7de8\u2015Android/iOS\u5bfe\u5fdc\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u300f\n\u306e\u629c\u7c8b\u30e1\u30e2\u3067\u3059\u30025\u7ae0\u30016\u7ae0\u3042\u305f\u308a\u3002\n1\u301c4 \u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u306f\u65ad\u7247\u306e\u307f\u306a\u306e\u3067\u3001\u672c\u66f8\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\n5\u7ae0\n\nglClearColor\nvoid glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)\n\nclamp \u306f 0.0f - 1.0f\u306e\u7bc4\u56f2\u306b\u30af\u30e9\u30f3\u30d7\u3055\u308c\u308b\u3068\u3044\u3046\u610f\u5473\n\nglClear\nvoid glClear (GLbitfield mask)\n\nmask\u306f\u5857\u308a\u3064\u3076\u3059\u30d0\u30c3\u30d5\u30a1\u306e\u7a2e\u985e\n\nGL_COLOR_BUFFER_BIT\nGL_DEPTH_BUFFER_BIT\nGL_STENCIL_BUFFER_BIT\n\nOpenGL ES \u306f\u3001\u7528\u9014\u306e\u9055\u30463\u679a\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u63cf\u753b\u3092\u884c\u3046\u3002\u305d\u308c\u305e\u308c\u4fdd\u5b58\u3059\u308b\u5185\u5bb9\u3084\u30e1\u30e2\u30ea\u306e\u4f7f\u7528\u91cf\u304c\u7570\u306a\u308b\u3002\n\u30ab\u30e9\u30fc\u30d0\u30c3\u30d5\u30a1\u306f\u3001\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u3072\u3068\u3064\u3072\u3068\u3064\u306e\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u306e\u96c6\u5408\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3060\u306e\u30e1\u30e2\u30ea\u306e\u584a\u3002\nGLbitfield mask \u306e\u5f15\u6570\u306b\u306f\u3001\u8907\u6570\u306e\u30d0\u30c3\u30d5\u30a1\u3092 OR \u3067\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u300c1\u56de\u306e\u30b3\u30de\u30f3\u30c9\u547c\u3073\u51fa\u3057\u3067\u8907\u6570\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u540c\u6642\u306b\u5857\u308a\u3064\u3076\u3059\u300d\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u88dc\u52a9\u95a2\u6570\uff1aES20_postFrontBuffer\n\u672c\u8a8c\u30b5\u30f3\u30d7\u30eb\u72ec\u81ea\u306e\u30e1\u30bd\u30c3\u30c9\u3002\u753b\u9762\u3092\u66f4\u65b0\u3059\u308b\u3002\u3053\u308c\u3092\u547c\u3073\u51fa\u3055\u306a\u3044\u9650\u308a\u3001\u63cf\u753b\u7d50\u679c\u304c\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306b\u53cd\u6620\u3055\u308c\u308b\u3053\u3068\u306f\u306a\u3044\u3002\u4e2d\u8eab\u306f\u5404\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u4f9d\u5b58\u3057\u305f\u51e6\u7406\u3067\u3001\u30ec\u30f3\u30c0\u30fc\u30d0\u30c3\u30d5\u30a1\u306e\u30d0\u30a4\u30f3\u30c9\u3084\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3078\u306e\u547d\u4ee4\u304c\u542b\u307e\u308c\u308b\u304c\u3001\u300c\u63cf\u753b\u7d50\u679c\u3092\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306b\u53cd\u6620\u3055\u305b\u308b\u300d\u51e6\u7406\u306f\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3078\u306e\u4f9d\u5b58\u6027\u304c\u5927\u304d\u3044\u306e\u3067\u3001\u672c\u6765\u306e OpenGL ES \u306e\u6a5f\u80fd\u306b\u306f\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u3002\nOpenGL ES \u306f\u3001 \u30b5\u30fc\u30d5\u30a7\u30a4\u30b9\u306b\u5bfe\u3057\u3066\u63cf\u753b\u3059\u308b\u306e\u3067\u3042\u3063\u3066\u3001\u753b\u9762\u306b\u5bfe\u3057\u3066\u63cf\u753b\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3002\n\u203bOS \u3068 Surface \u306e\u9023\u643a\u3092\u62c5\u5f53\u3059\u308b\u306e\u304c\u3001EGL(Android)\u3067\u3042\u308a\u3001EAGL(iOS)\u3068\u306a\u308b\u3002\nOpenGL ES \u306b\u304a\u3051\u308b\u300c\u30c0\u30d6\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u300d\u306f\u3001\u30b5\u30fc\u30d5\u30a7\u30a4\u30b9\u306b\u5bfe\u3059\u308b\u63cf\u753b\u30d0\u30c3\u30d5\u30a1\uff08 \u30d0\u30c3\u30af\u30d0\u30c3\u30d5\u30a1 \uff09\u3068\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306b\u5bfe\u3059\u308b\u63cf\u753b\u30d0\u30c3\u30d5\u30a1\uff08 \u30d5\u30ed\u30f3\u30c8\u30d0\u30c3\u30d5\u30a1 \uff09\u3092\u8a00\u3046\u3002\n\u203bAndroid4.1\u4ee5\u964d\u3067\u306f\u3001\u3055\u3089\u306b\u300c\u4e88\u5099\u306e\u30d0\u30c3\u30d5\u30a1\u300d\u3092\u5132\u3051\u305f\u300c\u30c8\u30ea\u30d7\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u300d\u306e\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u63cf\u753b\u30d5\u30ec\u30fc\u30e0\nAndroid/iOS\u3068\u3082\u306b\u3001View\u306f\u57fa\u672c\u7684\u306b\u300c\u66f4\u65b0\u304c\u5fc5\u8981\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u300d\u3060\u3051\u3092\u63cf\u753b\u3057\u3066\u3044\u308b\u3002\u305d\u308c\u306b\u5bfe\u3057\u3001OpenGL ES \u306f\u3001\n\nView\u3068\u540c\u3058\u304f\u5fc5\u8981\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u307f\u63cf\u753b\n\u6c7a\u307e\u3063\u305ffps\u3067\u5e38\u306b\u63cf\u753b\n\n\u3068\u3044\u30462\u7a2e\u985e\u306e\u4f7f\u3044\u65b9\u304c\u3055\u308c\u308b\u3002\n\nOpenGL ES \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u4fdd\u5b58\u5148\nglClearColor\u3067\u6307\u5b9a\u3055\u308c\u305f\u300c\u5857\u308a\u3064\u3076\u3057\u306e\u8272\u300d\u306f\u3001\u3069\u3053\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u304b\uff1f\nOpenGL ES\u306e\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001OpenGL ES \u304c\u7ba1\u7406\u3057\u3066\u3044\u308b Context \u3068\u547c\u3070\u308c\u308b\u9818\u57df\u306b\u5024\u304c\u4fdd\u6301\u3055\u308c\u308b\u3002OpenGL ES \u306f Context \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u60c5\u5831\u306b\u57fa\u3065\u3044\u3066\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b \u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3 \u306b\u306a\u3063\u3066\u3044\u308b\u3002\nContext \u306b\u306f\u3001OpenGL ES \u306e\u72b6\u614b\uff08\u30b9\u30c6\u30fc\u30c8\uff09\u3001\u753b\u50cf\u3084\u30b7\u30a7\u30fc\u30c0\u30fc\u7b49\u306e\u7ba1\u7406\u30fb\u4fdd\u6301\u9818\u57df\u3082\u542b\u307e\u308c\u308b\u3002\u57fa\u672c\u7684\u306b\u96c6\u4e2d\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u3002\n\u300cOpenGL ES \u304c\u7ba1\u7406\u3059\u308b\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u4fdd\u5b58\u3055\u308c\u308b\u300d\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u3067OK\n\n6\u7ae0\n\n\u9802\u70b9(vertex)\nOpenGL ES \u306f\u3001n\u500b\u306e\u9802\u70b9\u3092\u7a7a\u9593\u4e0a\u306b\u6d6e\u304b\u3079\uff08\u5ea7\u6a19\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\uff09\u3001\u3053\u308c\u3089\u3092\u7d50\u3093\u3067\u5857\u308a\u3064\u3076\u3059\u3053\u3068\u3067\u56f3\u5f62\u3092\u63cf\u304f\u3002\nOpenGL ES \u304c\u63cf\u753b\u53ef\u80fd\u306a\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\uff08\u56f3\u5f62\uff09\u306f\u3001\u70b9/\u7dda/\u4e09\u89d2\u5f62\u306e3\u7a2e\u985e\u3002\n\n\u30b7\u30a7\u30fc\u30c0\u30fc\nOpenGL ES 1.x \u4e16\u4ee3\u306b\u306f\u5b58\u5728\u3057\u306a\u304b\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\u65b0\u3057\u3044\u63cf\u753b\u80fd\u529b\u3068\u67d4\u8edf\u6027\u3092\u624b\u306b\u5165\u308c\u305f\u5909\u308f\u308a\u306b\u3001\u300c\u3068\u3063\u3064\u304d\u3084\u3059\u3055\u300d\u304c\u5931\u308f\u308c\u305f\u3002\u3064\u307e\u308a\u3001\u300c\u30b7\u30a7\u30fc\u30c0\u30fc\u3092\u8a18\u8ff0\u3057\u306a\u3051\u308c\u3070\u4f55\u3082\u3067\u304d\u306a\u3044\u300d\u3068\u3044\u3046\u4e16\u754c\u89b3\u306b\u306a\u3063\u305f\u3002\u30b3\u30fc\u30c9\u91cf\u3082\u5897\u3048\u305f\u3002\n\u30b7\u30a7\u30fc\u30c0\u30fc\u306f\u300c\u7279\u6b8a\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u300d\u3067\u3042\u308a\u3001C\u306b\u4f3c\u305f\u5c02\u7528\u306e\u8a00\u8a9e\u3067\u8a18\u8ff0\u3059\u308b\u3002\n\nsample_rendaring_triangle.c\n\n\u5171\u901a\u69cb\u9020\n\ninitialize \u3067 extention \u69cb\u9020\u4f53\u7528\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3057\u3066\u3001\u5fc5\u8981\u306a\u7b87\u6240\u3067\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u4f7f\u7528\n\u30b5\u30f3\u30d7\u30eb\u3067\u5fc5\u8981\u306a\u5024\u306f\u3059\u3079\u3066\"Extension_\u30b5\u30f3\u30d7\u30eb\u540d\"\u3067\u7ba1\u7406\u3001extension\u30e1\u30f3\u30d0\u30fc\u306b\u5bfe\u3057\u3001OpenGL ES \u304c\u751f\u6210\u3057\u305f\u5024\u3084\u30a2\u30d7\u30ea\u304c\u5fc5\u8981\u306a\u5909\u6570\u7b49\u3092\u4fdd\u5b58\u30fb\u30a2\u30af\u30bb\u30b9\u3059\u308b\n\u305d\u308c\u3089\u306f destroy \u3067\u5ec3\u68c4\u3055\u308c\u308b\n\n\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306e\u751f\u6210\n\u30b7\u30a7\u30fc\u30c0\u306f\u3001\u63cf\u753b\u51e6\u7406\u306e\u524d\u534a\u3092\u62c5\u3046 \u9802\u70b9\u30b7\u30a7\u30fc\u30c0 \u3068\u5f8c\u534a\u90e8\u5206\u306e \u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0 \u306b\u5206\u3051\u3089\u308c\u308b\u3002\n\u300c\u9802\u70b9\u306e\u6700\u7d42\u7684\u306a\u5ea7\u6a19\u3092\u6c7a\u3081\u308b\u300d\u3053\u3068\u304c\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306e\u5f79\u5272\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3092 GLchar* \u306e\u30dd\u30a4\u30f3\u30bf\u306b\u6587\u5b57\u5217\uff08\u306e\u3088\u3046\u306a\u578b\uff09\u3068\u3057\u3066\u683c\u7d0d\u3057\u3066\u3044\u308b\u3002\nconst GLchar *vertex_shader_source = \n    \"attribute mediump vec4 attr_pos;\"\n    \"void main() {\"\n    \"    gl_Position = attr_pos;\"\n    \"}\";\n\n\u898b\u3066\u308f\u304b\u308b\u3088\u3046\u306b\u3001\u53b3\u5bc6\u306a C\u8a00\u8a9e\u3068\u306f\u7570\u306a\u308b\u66f8\u5f0f\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u3053\u306e\u8a00\u8a9e\u3092 GLSL ES(OpenGL Shader Language ES) \u3068\u547c\u3076\u3002\n\nGLSL\u6587\u6cd5\uff1aattribute\u30ad\u30fc\u30ef\u30fc\u30c9\n[attribute] [mediump vec4] [attr_pos];\n[\u30ad\u30fc\u30ef\u30fc\u30c9\u5ba3\u8a00] [\u5909\u6570\u578b] [\u5909\u6570\u540d]\nattribute \u30ad\u30fc\u30ef\u30fc\u30c9\u306f\u3001\u9802\u70b9\u306e\u5c5e\u6027\u3092\u5ba3\u8a00\u3059\u308b\u3002attribute \u5909\u6570\u306f\u8aad\u8fbc\u307f\u5c02\u7528\u3067\u3001\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u304d\u306b OpenGL \u304c\u81ea\u52d5\u7684\u306b\u5024\u3092\u4ee3\u5165\u3059\u308b\u3002\uff08\u4ee3\u5165\u3059\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\uff09\nvec4 \u306f\u304a\u306a\u3058\u307f\u306e\ntypedef struct vec4 {\n    GLfloat x;\n    GLfloat y;\n    GLfloat z;\n    GLfloat w;\n}\n\n2D \u3092\u6271\u3046\u9650\u308a\u306f\u3001\u300c\u3068\u308a\u3042\u3048\u305a w \u306b\u306f 1.0 \u3092\u5165\u308c\u3066\u304a\u304f\u300d\u3067\u3001\u307e\u305a\u306f OK\u3002\n\nGLSL\u6587\u6cd5\uff1amediump\u30ad\u30fc\u30ef\u30fc\u30c9\nfloat \u306f 4byte \u3060\u304c\u3001\u6bce\u79d2\u6570\u767e\u4e07\u3068\u3044\u3046\u9802\u70b9\u6570\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u306b\u3082\u306a\u308b OpenGL \u3067\u306f\u3001\u307b\u3093\u306e\u50c5\u304b\u306a\u8a08\u7b97\u91cf\u306e\u5897\u52a0\u304c\u30af\u30ea\u30c6\u30a3\u30ab\u30eb\u306b\u306a\u308b\u3002\n\u305d\u3053\u3067\u3001GLSL ES \u3067\u306f\u3001\u51e6\u7406\u7cbe\u5ea6\u306e\u6307\u5b9a\u3092\u5f37\u5236\u3057\u3066\u3044\u308b\u3002\n\n\n\n\u8b58\u5225\u5b50\n\u7cbe\u5ea6\n\u30b9\u30d4\u30fc\u30c9\n\u76ee\u5b89\n\n\n\n\nhighp\n\u9ad8\n\u4f4e\u901f\n\u7d76\u5bfe\u5024\u304c1.0\u4ee5\u4e0a\n\n\nmediump\n\u4e2d\n\u4e2d\u901f\n\u7d76\u5bfe\u5024\u304c1.0\u4ee5\u4e0b\n\n\nlowp\n\u4f4e\n\u9ad8\u901f\n\u7d76\u5bfe\u5024\u304c1.0\u4ee5\u4e0b\u3067\u3001\u5206\u89e3\u80fd\u304c\u4f4e\u304f\u3066\u3082\u554f\u984c\u7121\u3044\n\n\n\n\u305f\u3060\u3057\u74b0\u5883\u306b\u3082\u3088\u308b\u306e\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u6642\u306f\u3053\u306e\u8a2d\u5b9a\u3082\u7591\u3063\u3066\u307f\u308b\u3053\u3068\u3002\n\nGLSL\u6587\u6cd5\uff1amain\nGLSL\u306f\u3001\"void main()\"\u95a2\u6570\u304b\u3089\u958b\u59cb\u3055\u308c\u308b\u3002\uff08\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\uff09\nmain() \u306f\u5f15\u6570\u3092\u53d7\u3051\u53d6\u3089\u305a\u3001\u6b32\u3057\u3044\u60c5\u5831\u306f attribute \u7b49\u306b\u3088\u3063\u3066\u53d7\u3051\u53d6\u308b\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f attr_pos \u3067\u53d7\u3051\u53d6\u3063\u305f\u9802\u70b9\u306e\u4f4d\u7f6e\u60c5\u5831\u3092 gl_Position \u306b\u4ee3\u5165\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u306f\u7d44\u8fbc\u307f\u5909\u6570\u3067\u3001\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u304b\u3089\u4f4d\u7f6e\u60c5\u5831\u3092\u53d7\u3051\u53d6\u308b\u3068\u3044\u3046\u5f79\u5272\u3092\u6301\u3064\u3002\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u304b\u3089\u53d7\u3051\u53d6\u3063\u305f gl_Position \u306f\u3001OpenGL \u306b\u898f\u5b9a\u3055\u308c\u305f\u51e6\u7406\u304c\u52a0\u3048\u3089\u308c\u3001\u5f8c\u534a\u306e\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u51e6\u7406\u304c\u59cb\u307e\u308b\u3002\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306f\u9802\u70b9\u306e\u6570\u3060\u3051\u5b9f\u884c\u3055\u308c\u308b\u3002\u307e\u305f gl_Position \u306f main() \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u305f\u3073\u306b\u521d\u671f\u5316\u3055\u308c\u308b\u3002\u306a\u306e\u3067\u3001\u524d\u56de\u306e\u63cf\u753b\u7d50\u679c\u304c\u6b21\u306e\u63cf\u753b\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u4e00\u5207\u306a\u3044\u3002\u305d\u3057\u3066\u3001\u547c\u3073\u51fa\u3057\u306fGPU\u306e\u8907\u6570\u30b3\u30a2\u30fb\u8907\u6570\u30b9\u30ec\u30c3\u30c9\u306b\u3088\u3063\u3066 \u4e26\u5217\u7684\u306b\u547c\u3073\u51fa\u3055\u308c\u308b \u3002GLSL ES \u306e\u72ec\u7279\u306a\u8a18\u6cd5\u3068\u5236\u7d04\u306f\u3001\u4e26\u5217\u5b9f\u884c\u3092\u52b9\u7387\u3088\u304f\u884c\u3046\u305f\u3081\u3067\u3082\u3042\u308b\u3002\n\nGLSL\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\n// \u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nextension->vert_shader = glCleateShader(GL_VERTEX_SHADER);\nassert(glGetError() == GL_NO_ERROR);\nassert(extension->vert_shader != 0);\n\n    glShaderSource(extension->vert_shader, 1, &vertex_shader_source, NULL);\n    glCompileShader(extension->vert_shader);\n\n        // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n        {\n            GLint compileSuccess = 0;\n            glGetShaderiv(extension->vert_shader, GL_COMPILE_STATUS, &compileSuccess);\n            if (compileSuccess == GL_FALSE) {\n                // \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\n                GLint infoLen = 0;\n                // \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\n                glGetShaderiv(extension->vert_shader, GL_INFO_LOG_LENGTH, &infoLen);\n                if (infoLen > 1) {\n                    GLchar *message = (GLchar*) calloc(infoLen, sizeof(GLchar));\n                    glGetShaderInfoLog(extension->vert_shader, infoLen, NULL, message);\n                    __log(message);\n                    free((void*) message);\n                } else {\n                    __log(\"comple error not info...\");\n                }\n            }\n            assert(compileSuccess == GL_TRUE);\n        }\n    // ....\n\n\nglCreateShader\nGLuint glCreateShader(GLenum type)\n\ntype\u306f\u4f5c\u6210\u3059\u308b\u30b7\u30a7\u30fc\u30c0\u306e\u7a2e\u985e\u3002\u623b\u308a\u5024\u306f\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\u7ba1\u7406\u7528\u306eID\uff09\u3002\u6210\u529f\u3059\u308b\u3068 0 \u4ee5\u5916\u304c\u8fd4\u308b\u3002\n\nglGetError\nGLenum glGetError ()\n\n\u30a8\u30e9\u30fc\u53d6\u308a\u51fa\u3057\u547d\u4ee4\u3002\u6ce8\u610f\u70b9\u306f\uff13\u3064\uff1a\n\nglGetError\u30b3\u30de\u30f3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u70b9\u3067\u3001\u4fdd\u6301\u3057\u3066\u3044\u308b\u30a8\u30e9\u30fc\u306f GL_NO_ERROR \u306b\u4e0a\u66f8\u304d\u3055\u308c\u308b\n\u300c\u3069\u306e\u30b3\u30de\u30f3\u30c9\u306e\u30a8\u30e9\u30fc\u304b\u300d\u3092\u7ba1\u7406\u3057\u3066\u3044\u306a\u3044\u3002\u307e\u305f\u65e2\u306b\u30a8\u30e9\u30fc\u304c\u767a\u58f0\u3057\u3066\u3044\u308b\u72b6\u614b\u3067\u306f\u30a8\u30e9\u30fc\u5185\u5bb9\u306e\u4e0a\u66f8\u304d\u3082\u884c\u308f\u306a\u3044\u3002\n\u547c\u3073\u51fa\u3057\u306e\u30b3\u30b9\u30c8\uff08\u6642\u9593\uff09\u306f\u9ad8\u3044\n\n\u306a\u306e\u3067\u3001assert \u3067\u30c7\u30d0\u30c3\u30b0\u30d3\u30eb\u30c9\u6642\u306e\u307f\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306e\u304c\u304a\u3059\u3059\u3081\u3002\n\nglShaderSource\n\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u6e21\u3059\u3002\nvoid glShaderSource(GLuint shader, GLsizei count, const GLchar** string, const GLint* length);\n\n\nshader:\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\ncount: \u30b7\u30a7\u30fc\u30c0\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u6587\u5b57\u5217\u914d\u5217\u306e\u6570\uff08\u3053\u3053\u3067\u306f\uff11\uff09\nstring: \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u6587\u5b57\u5217\u914d\u5217\uff08\u4e88\u7d04\u8a9e\u3058\u3083\u306a\u3044\u306e\u304b\u3053\u308c\u3002\u3002\nlength: \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u6587\u5b57\u5217\u9577\uff08NULL\u3092\u6e21\u3059\u3068\u3001\\0\u3067\u7d42\u308f\u308b\u6587\u5b57\u5217\u3068\u898b\u306a\u3059\n\n\nglCompileShader\nvoid glCompileShader(GLuint shader);\n\n\u6e21\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u521d\u3081\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u3002\n\nglGetShaederiv\n\u5b9f\u969b\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u6210\u529f\u3057\u305f\u304b\u3069\u3046\u304b\u306f\u5224\u5225\u3067\u304d\u306a\u3044\uff08\u623b\u308a\u5024\u306fvoid\uff09\u3002\u306a\u306e\u3067\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3088\u3063\u3066\u60c5\u5831\u3092\u554f\u3044\u5408\u308f\u305b\u308b\u3002\nvoid glGetShaderiv(GLuint shader, GLenum pname, GLint *params);\n\n\u5f15\u6570\u306f\u672c\u8a8c p.88 \u53c2\u7167\u3002\u30b5\u30f3\u30d7\u30eb\u3067\u306f COMPILE_STATUS \u3092\u53d6\u5f97\u3057\u3001GL_TRUE / GL_FALSE \u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u308b\u3002\n\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u8a18\u8ff0\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306f\u3001\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u3068\u3082\u547c\u3070\u308c\u3001\u6700\u7d42\u7684\u306a\u300c\u30d4\u30af\u30bb\u30eb\u306e\u8272\u300d\u3092\u78ba\u5b9a\u3055\u305b\u308b\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u5358\u8272\u306e\u8d64\u3092\u51fa\u529b\u3059\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u30b7\u30a7\u30fc\u30c0\u3092\u8a18\u8ff0\u3057\u3066\u3044\u308b\u3002\nconst GLchar *fragment_shader_source = \n    \"void main() {\"\n    \"    gl_FlagColor = vec4(1.0, 0.0, 0.0, 1.0);\"\n    \"}\";\n\n\u203bGLSL ES \u3067\u306f\u3001\u6d6e\u52d5\u5c0f\u6570\u3092\u8a18\u8ff0\u3059\u308b\u969b\u306b\u3001\u672b\u5c3e\u306b\"f\"\u3092\u4ed8\u3051\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u3002\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u304b\u3089\u6e21\u3055\u308c\u305f\u9802\u70b9\u306f GPU \u306b\u3088\u3063\u3066\u4e09\u89d2\u5f62\u306b\u7d50\u3070\u308c\u3001\u4e2d\u8eab\u306e\u5857\u308a\u3064\u3076\u3057\u304c\u59cb\u307e\u308b\u3002\u305d\u306e\u3068\u304d\u306b\u30d4\u30af\u30bb\u30eb\u3092\u5857\u308b\u8272\u3092\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u306b\u3088\u3063\u3066\u5224\u65ad\u3059\u308b\u3002\ngl_FlagColor \u3082 OpenGL \u306e\u7d44\u8fbc\u307f\u5909\u6570\u3067\u3042\u308a\u3001GLSL ES \u306f\u3001\u305d\u3053\u306b\u66f8\u304b\u308c\u305f\u8272\u3092\u300c\u6700\u7d42\u7684\u306b\u51fa\u529b\u3057\u305f\u3044\u8272\u300d\u3060\u3068\u5224\u65ad\u3059\u308b\u3002\n\u9802\u70b9\u81ea\u8eab\u306e\u60c5\u5831\u3067\u3042\u308b attribute \u5909\u6570\u306f\u3001\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u306b\u306f\u5ba3\u8a00\u3067\u304d\u306a\u3044\u3002\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306f\u6700\u7d42\u7684\u306b\u5857\u308a\u3064\u3076\u3055\u308c\u308b\u30d4\u30af\u30bb\u30eb\u306e\u6570\u3060\u3051\u547c\u3073\u51fa\u3055\u308c\u308b\u3002FullHD\u30b5\u30a4\u30ba\u3067\u306f2,073,600\u56de\u306e\u547c\u3073\u51fa\u3057\u304c\u884c\u308f\u308c\u3001\u305d\u306e 60fps \u3092\u7dad\u6301\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u6bce\u79d21\u51042400\u4e07\u56de\u4ee5\u4e0a\u306e\u547c\u3073\u51fa\u3057\u306b\u5fdc\u3048\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u3002\n\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u8aad\u8fbc\u307f\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\n\u57fa\u672c\u7684\u306b\u306f\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3068\u540c\u3058\u6d41\u308c\u3002glCreateShader\u306e\u5f15\u6570\u306b\u6ce8\u610f\u3002\n        // \u30b7\u30a7\u30fc\u30c0\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\n        extension->frag_shader = glCreateShader(GL_FRAGMENT_SHADER);\n        assert(extension->frag_shader != 0);\n        glShaderSource(extension->frag_shader, 1, &fragment_shader_source, NULL);\n        glCompileShader(extension->frag_shader);\n\n        // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n        {\n            GLint compileSuccess = 0;\n            glGetShaderiv(extension->frag_shader, GL_COMPILE_STATUS, &compileSuccess);\n            if (compileSuccess == GL_FALSE) {\n                // \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\n                GLint infoLen = 0;\n                // \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\n                glGetShaderiv(extension->frag_shader, GL_INFO_LOG_LENGTH, &infoLen);\n                if (infoLen > 1) {\n                    GLchar *message = (GLchar*) calloc(infoLen, sizeof(GLchar));\n                    glGetShaderInfoLog(extension->frag_shader, infoLen, NULL, message);\n                    __log(message);\n                    free((void*) message);\n                } else {\n                    __log(\"comple error not info...\");\n                }\n            }\n            assert(compileSuccess == GL_TRUE);\n        }\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210\n2\u3064\u306e\u30b7\u30a7\u30fc\u30c0\u3092\u7528\u610f\u3067\u304d\u305f\u3068\u3053\u308d\u3067\u3001\u305d\u308c\u3089\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u30ea\u30f3\u30af\u3059\u308b\u3053\u3068\u3067\u521d\u3081\u3066\u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u6a5f\u80fd\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u3002OpenGLES \u3067\u306f\u3001\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3068\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u3092\u30ea\u30f3\u30af\u3055\u305b\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3068\u547c\u3076\u3002\n\nglCreateProgram\nGLenum glCreateProgram\n\n\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u540c\u3058\u304f\u5c02\u7528\u306e\u30e1\u30e2\u30ea\u9818\u57df\u306b\u4fdd\u5b58\u30fb\u7ba1\u7406\u3055\u308c\u3001GLuint \u578b\u306e ID \u304c\u5272\u308a\u632f\u3089\u308c\u308b\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306e\u751f\u6210\u3068\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\uff1a\n    extension->shader_program = glCreateProgram();\n    assert(extension->shader_program != 0);\n\n\u751f\u6210\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u30010\u4ee5\u5916\u304c\u8fd4\u308b\u3002\n\nglAttachShader\n\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u305f\u3089\u3001\u30ea\u30f3\u30af\u3057\u305f\u3044\u30b7\u30a7\u30fc\u30c0\u3092\u63a5\u7d9a\uff08\u30a2\u30bf\u30c3\u30c1\uff09\u3059\u308b\u3002\nvoid glAttachShader(GLuint program, GLuint shader)\n\n\nglLinkProgram\n2\u3064\u306e\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u95a2\u9023\u4ed8\u3051\u305f\u3089\u3001\u305d\u308c\u3089\u3092\u30ea\u30f3\u30af\u3055\u305b\u3066\u4f7f\u7528\u53ef\u80fd\u306a\u72b6\u614b\u306b\u306a\u308b\u3002\nvoid glLinkProgram(GLuint program)\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\uff1a\n//\n        // \u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u30fc\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u95a2\u9023\u4ed8\u3051\u308b\n        glAttachShader(extension->shader_program, extension->vert_shader);\n        assert(glGetError() == GL_NO_ERROR);\n        // \u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u30fc\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u95a2\u9023\u4ed8\u3051\u308b\n        glAttachShader(extension->shader_program, extension->frag_shader);\n        assert(glGetError() == GL_NO_ERROR);\n\n        // \u30ea\u30f3\u30af\u51e6\u7406\u3092\u884c\u3046\n        glLinkProgram(extension->shader_program);\n\n        // \u30ea\u30f3\u30af\u30a8\u30e9\u30fc\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n        {\n            GLint linkSuccess = 0;\n            glGetProgramiv(extension->shader_program, GL_LINK_STATUS, &linkSuccess);\n\n            if (linkSuccess == GL_FALSE) {\n                // \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u305f\u3081\u3001\u72b6\u614b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n                GLint infoLen = 0;\n                // \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\n                glGetProgramiv(extension->shader_program, GL_INFO_LOG_LENGTH, &infoLen);\n                if (infoLen > 1) {\n                    GLchar *message = (GLchar*) calloc(infoLen, sizeof(GLchar));\n                    glGetProgramInfoLog(extension->shader_program, infoLen, NULL, message);\n                    __log(message);\n                    free((void*) message);\n                }\n            }\n\n            // GL_NO_ERROR\u3067\u3042\u308b\u3053\u3068\u3092\u691c\u8a3c\u3059\u308b\n            assert(linkSuccess == GL_TRUE);\n        }\n\n\nglGetProgramiv\nvoid glGetProgramiv(GLuint program, GLenum pname, GLint* param)\n\n\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u540c\u69d8\u306b\u30ea\u30f3\u30af\u30a8\u30e9\u30fc\u306e\u30ed\u30b0\u60c5\u5831\u3092\u53d6\u5f97\n\nglGetProgramInfoLog\nvoid glGetProgramInfoLog(GLuint program, GLsizei bufsize, GLsize* length, GLchar* infolog)\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u53d6\u5f97\u3059\u308b\u3002\n\nglGetAttribLocation\n\u30b7\u30a7\u30fc\u30c0\u81ea\u4f53\u306e\u6e96\u5099\u304c\u7d42\u308f\u3063\u305f\u3089\u3001\u30b7\u30a7\u30fc\u30c0\u306b\u30c7\u30fc\u30bf\u3092\u6e21\u3059\u6e96\u5099\u3092\u3059\u308b\u3002\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306b\u8a18\u8ff0\u3057\u305fattribute\u5909\u6570\uff08attr_pos\uff09\u306f\u30a2\u30d7\u30ea\u5074\u304b\u3089\u64cd\u4f5c\u3092\u884c\u3046\u969b\u306b\u3001\u300c\u5909\u6570\u540d\u300d\u3092\u76f4\u63a5\u5229\u7528\u305b\u305a\u3001 attribute location \u3068\u3044\u3046 ID \u3092\u5229\u7528\u3059\u308b\u3002\u53d6\u5f97\u306b\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\uff1a\nGLint glGetAttribLocation(GLuint program, const GLchar* name)\n\nattribute location \u306f\u57fa\u672c\u7684\u306b\u5909\u66f4\u3055\u308c\u305a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30ea\u30f3\u30af\u3057\u305f\u969b\u306b\u78ba\u5b9a\u3055\u308c\u308b\uff08\u306e\u3067\u3001Extension \u69cb\u9020\u4f53\u306b\u4fdd\u5b58\u3057\u3066\u3044\u308b\uff09\u3002\n    extension->attr_pos = glGetAttribLocation(extension->shader_program, *attr_pos);\n    assert(extension->attr_pos >= 0);\n\n\u5931\u6557\u3057\u305f\u3068\u304d\u306f -1\n\nglUseProgram\n\u6700\u5f8c\u306b\u300c\u3053\u306e\u30b7\u30a7\u30fc\u30c0\u3067\u63cf\u753b\u3057\u307e\u3059\u300d\u3068\u3044\u3046\u5ba3\u8a00\u3092\u884c\u3046\u3002glUserProgram() \u3067\u3001\u63cf\u753b\u306b\u4f7f\u7528\u3059\u308b\u30b7\u30a7\u30fc\u30c0\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\nvoid glUseProgram(GLuint program)\n\n\u901a\u5e38\u306f\u30b7\u30a7\u30fc\u30c0\u306f\u8907\u6570\u5229\u7528\u3059\u308b\u304c\u3001glUseProgram() \u306f\u63cf\u753b\u3054\u3068\u3067\u306f\u306a\u304f\u3001\u300c\u30b7\u30a7\u30fc\u30c0\u3092\u5207\u308a\u66ff\u3048\u305f\u3044\u30bf\u30a4\u30df\u30f3\u30b0\u300d\u306e\u307f\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u308b\u3002\n\n\u63cf\u753b\u3092\u884c\u3046\nvoid sample_RenderingTriangle_rendering(GLApplication *app) {\n    // \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\n    Extension_RenderingTriangle *extension = (Extension_RenderingTriangle*) app->extension;\n\n    glClearColor(0.0f, 1.0f, 1.0f, 1.0f);\n    glClear(GL_COLOR_BUFFER_BIT);\n\n    // attr_pos \u3092\u6709\u52b9\u306b\u3059\u308b\n    glEnableVertexAttribArray(extension->attr_pos);\n\n    // \u753b\u9762\u4e2d\u592e\u3078\u63cf\u753b\n    const GLfloat position[] = {\n        0.0f, 1.0f,   // v0\n        1.0f, -1.0f,  // v1\n        -1.0f, -1.0f  // v2\n    };\n\n    glVertexAttribPointer(extension->attr_pos, 2, GL_FLOAT, GL_FALSE, 0, (GLvoid*)position);\n    glDrawArrays(GL_TRIANGLES, 0, 3);\n\n    // \u30d0\u30c3\u30af\u30d0\u30c3\u30d5\u30a1\u3092\u30d5\u30ed\u30f3\u30c8\u30d0\u30c3\u30d5\u30a1\u3078\u8ee2\u9001\uff08\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3054\u3068\u306b\u72ec\u81ea\u306e\u51e6\u7406\uff09\n    ES20_postFrontBuffer(app);\n}\n\n\nglEnableVertexAttribArray\nattribute\u5909\u6570\u306b\u306f\u6709\u52b9\u30fb\u7121\u52b9\u72b6\u614b\u304c\u3042\u308a\u3001\u6709\u52b9\u3067\u306a\u3051\u308c\u3070\u9802\u70b9\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002\nvoid glEnableVertexAttribArray(GLuint index)\n\n\u300c\u3069\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eattribute\u5909\u6570\u304b\u300d\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001\u6700\u5f8c\u306b glUseProgram \u30b3\u30de\u30f3\u30c9\u3067\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e attribute \u5909\u6570\u306b\u5bfe\u3057\u3066\u52b9\u679c\u3092\u4e0e\u3048\u308b\uff08\u306e\u3067\u3001\u8907\u6570\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308b\u5834\u5408\u306f\u6ce8\u610f\u304c\u5fc5\u8981\uff09\u3002\n\nglVertexAttribPointer\n\u9802\u70b9\u30c7\u30fc\u30bf\u306f\u5358\u306a\u308b\u30e1\u30e2\u30ea\u306e\u584a\u3067\u3042\u308a\u3001\u5c02\u7528\u306e\u578b\u3084\u69cb\u9020\u306f\u306a\u3044\u3002\u306a\u306e\u3067\u30011\u3064\u306e\u9802\u70b9\u306b\u3069\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u304c\u3042\u3063\u3066\u3001\u3069\u3093\u306a\u578b\u3067\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u3001\u4e0b\u8a18\u3067\u4f1d\u3048\u308b\u3002\nvoid glVertexAttribPointer(GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* ptr)\n\n\nindex : \u9802\u70b9\u30c7\u30fc\u30bf\u3092\u95a2\u9023\u4ed8\u3051\u308b attribute location\nsize : \u9802\u70b9\u30c7\u30fc\u30bf\u306e\u8981\u7d20\u6570\ntype : \u9802\u70b9\u30c7\u30fc\u30bf\u306e\u578b\u3002GL_BYTE, GL_FLOAT \u306a\u3069\nnormalized : \u6b63\u898f\u5316\u3057\u3066\u6e21\u3059\u5834\u5408\u306f GL_TRUE, \u305d\u306e\u307e\u307e\u6e21\u3059\u5834\u5408\u306f GL_FALSE\nstride : \u9802\u70b9\u306e\u5148\u982d\u4f4d\u7f6e\u3054\u3068\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u30010\u6307\u5b9a\u53ef\u80fd\nptr : \u95a2\u9023\u4ed8\u3051\u308b\u9802\u70b9\u306e\u5148\u982d\u30dd\u30a4\u30f3\u30bf\n\nOpenGLES 2.0 \u3067\u306f\u3001\u300c\u9802\u70b9\u30c7\u30fc\u30bf\u300d\u3068\u300c\u30b7\u30a7\u30fc\u30c0\u306b\u6e21\u3055\u308c\u308b\u30c7\u30fc\u30bf\u300d\u306f\u5206\u96e2\u3057\u3066\u8003\u3048\u308b\u3002GPU\u306f\u9802\u70b9\u30c7\u30fc\u30bf\u3092\u30bd\u30fc\u30b9\u3068\u3057\u3066\u3001\u30b7\u30a7\u30fc\u30c0\u304c\u6307\u5b9a\u3059\u308b\u90fd\u5408\u306e\u3044\u3044\u578b\u306b\u5909\u63db\u3057\u3066\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306b\u6e21\u3057\u3066\u3044\u308b\u3002\n\nglDrawArrays\nvoid glDrawArrays(GLenum mode, GLint first, GLsizei count)\n\n\nmode : \u63cf\u753b\u30e2\u30fc\u30c9\u3092\u6307\u5b9a\u3001GL_LINES, GL_TRIANGLES,,, \u306a\u3069\nfirst : \u958b\u59cb\u3059\u308b\u9802\u70b9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6307\u5b9a\ncount : \u63cf\u753b\u3059\u308b\u9802\u70b9\u6570\u3092\u6307\u5b9a\n\n\u3053\u3053\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u306e position[] \u306e\u30b5\u30a4\u30ba\u3092 first + count \u304c\u8d85\u3048\u308b\u3068\u5f53\u7136\u60b2\u60e8\u306a\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u3059\u3079\u3057\u3002\n\nViewport\n\u30ea\u30b5\u30a4\u30ba\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\uff1a\nvoid sample_RenderingTriangle_resized(GLApplication *app) {\n    glViewport(0, 0, app->surface_width, app->surface_height);\n}\n\n\n2\u3064\u306e\u5ea7\u6a19\u7cfb\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306f\u3001X\u8ef8Y\u8ef8\u304c\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u3067\u7ba1\u7406\u3055\u308c\u308b \u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u7cfb \u3067\u51e6\u7406\u304c\u884c\u308f\u308c\u308b\u3002\nViewport\u3067\u6307\u5b9a\u3059\u308b\u306e\u306f\u3053\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u7cfb\u3002\n\u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u7cfb\u306f \u5de6\u4e0b \u3092\u539f\u70b9\u3068\u3059\u308b\u3002\uff08\u4e00\u822c\u7684\u306a 2D\u5ea7\u6a19\u7cfb\u306f\u5de6\u4e0a\u304c\u57fa\u6e96\u306b\u306a\u308b\uff09\n\u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u306e\u5bfe\u89d2\u3001\u53f3\u4e0a\u306e\u5ea7\u6a19\u306f\u30b5\u30fc\u30d5\u30a7\u30a4\u30b9\u306e\u5927\u304d\u3055\u3068\u30ea\u30f3\u30af\u3057\u3066\u3044\u308b\u3002\u305d\u308c\u4ee5\u5916\u306e\u300c\u753b\u9762\u5916\u300d\u306e\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u306f\u7269\u7406\u7684\u306b\u306f\u5b58\u5728\u3057\u306a\u3044\u3002\n\u3057\u304b\u3057\u3001\n    const GLfloat position[] = {\n        0.0f, 1.0f,   // v0\n        1.0f, -1.0f,  // v1\n        -1.0f, -1.0f  // v2\n    };\n\n\u306f\u30010-1\u306e\u6d6e\u52d5\u5c0f\u6570\u3067\u3042\u308b\u3002\nOpenGLES \u304c\u9802\u70b9\u306e\u6f14\u7b97\u306b\u5229\u7528\u3059\u308b\u5ea7\u6a19\u7cfb\u306f\u3001X\u8ef8\u3001Y\u8ef8\u3001Z\u8ef8\u3092\u6301\u3064 \u6b63\u898f\u5316\u3055\u308c\u305f\u30c7\u30d0\u30a4\u30b9\u5ea7\u6a19\u7cfb \u3067\u3042\u308b\u3002\n\u5ea7\u6a19\u7cfb\u306e\u5de6\u4e0b\u624b\u524d\u304c(-1, -1, -1)\u3067\u3042\u308a\u3001\u53f3\u4e0a\u5965\u304c(1, 1, 1)\u3068\u306a\u308b\u3002\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306b\u3088\u3063\u3066 gl_Position \u306b\u66f8\u304d\u8fbc\u307e\u308c\u305f\u9802\u70b9\u5ea7\u6a19\u306f\u3001\u5e38\u306b\u6b63\u898f\u5316\u3055\u308c\u305f\u30c7\u30d0\u30a4\u30b9\u5ea7\u6a19\u7cfb\u306e\u5ea7\u6a19\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3002\n\u6b63\u898f\u5316\u30c7\u30d0\u30a4\u30b9\u5ea7\u6a19\u7cfb\u306e\u6d6e\u52d5\u5c0f\u6570\u7a7a\u9593\u3068\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u7cfb\u306e\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u7a7a\u9593\u3092\u7d50\u3073\u3064\u3051\u308b\u306e\u304c Viewport \u306e\u8a2d\u5b9a\u3002\nViewport \u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u7cfb\u3067\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3001\u591a\u304f\u306e\u5834\u5408\u30b5\u30fc\u30d5\u30a7\u30a4\u30b9\u306e\u5927\u304d\u3055\u3068\u540c\u3058\u8a2d\u5b9a\u306b\u3059\u308b\u3002\nOpenGLES \u306f\u6b63\u898f\u5316\u30c7\u30d0\u30a4\u30b9\u5ea7\u6a19\u7cfb\u3092 Viewport \u306e\u5024\u306b\u3057\u305f\u304c\u3063\u3066\u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u7cfb\u306b\u5909\u63db\u3059\u308b\u3002\nViewport \u306e\u5de6\u4e0b\u304c\u6b63\u898f\u5316\u5ea7\u6a19\u7cfb\u306eXY(-1, -1)\u306b\u5bfe\u5fdc\u3057\u3001\u53f3\u4e0a\u304cXY(1, 1)\u306b\u306a\u308b\u3088\u3046\u306b\u5168\u4f53\u304c\u5f15\u304d\u4f38\u3070\u3055\u308c\u305f\u308a\u7e2e\u3081\u3089\u308c\u305f\u308a\u3059\u308b\u3002\n\nglViewport\nViewport\u3092\u5909\u66f4\u3059\u308b\u3002\nvoid glViewport(GLint x, GLint y, GLsizei width, GLsizei height)\n\n\nx : \u753b\u9762\u5de6\u4e0b\u304b\u3089\u6570\u3048\u305fX\u30d4\u30af\u30bb\u30eb\u5ea7\u6a19\ny : \u753b\u9762\u5de6\u4e0b\u304b\u3089\u6570\u3048\u305fY\u30d4\u30af\u30bb\u30eb\u5ea7\u6a19\nwidth : Viewport \u306e\u5e45\u30d4\u30af\u30bb\u30eb\u6570\nheight : Viewport \u306e\u9ad8\u3055\u30d4\u30af\u30bb\u30eb\u6570\n\n\u30ea\u30b5\u30a4\u30ba\u6642\u306b\u306f\u5fc5\u305a glViewport \u3092\u547c\u3073\u51fa\u3059\u306e\u304c\u304a\u7d04\u675f\uff08\u5f37\u304f\u63a8\u5968\n\n\u203bAndroid\u306e\u30b5\u30fc\u30d5\u30a7\u30a4\u30b9\u304c\u30ea\u30b5\u30a4\u30ba\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\nAndroid \u306e Activity \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6319\u52d5\u3067\u306f\u3001\u7e26\u6a2a\u304c\u5207\u308a\u66ff\u308f\u308b\u3068 Activity \u3092\u5ec3\u68c4\u30fb\u518d\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u30a4\u30b3\u30fc\u30eb View \u304c\u5ec3\u68c4\u3055\u308c\u308b\u3001\u30a4\u30b3\u30fc\u30eb OpenGLES\u81ea\u4f53\u304c\u5b8c\u5168\u5ec3\u68c4\u3055\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3002\n\u306a\u306e\u3067\u5b9f\u969b\u306b\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u306f\u3001\n\n- \u753b\u50cf\u3084\u30b7\u30a7\u30fc\u30c0\u7b49\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u518d\u8aad\u307f\u8fbc\u307f\u3059\u308b\n\u30a2\u30d7\u30ea\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3057\u3066\u304a\u304f\n\n\u306a\u3069\u306e\u30b3\u30fc\u30c9\u304c\u5fc5\u8981\u306b\u306a\u308b\u304c\u3001\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u7e26\u6a2a\u3092\u5207\u308a\u66ff\u3048\u3066\u3082 Activity \u304c\u5ec3\u68c4\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u6539\u9020\u3055\u308c\u3066\u3044\u308b\u3002Manifest\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u3070\u304a\uff4b\n\nAndroidManifest.xml\n    <activity\n        android:name=\"com.xxx...\"\n        android:configChanges=\"orientation|screenSize\"\n        android:xxx=....\n        ....\n    </activity>\n\n\n\n\u5f8c\u51e6\u7406\n\nglDeleteProgram\n\u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u524a\u9664\u3002glCreateProgram \u3068\u306e\u5bfe\u306b\u306a\u308b\u3002\nvoid glDeleteProgram(GLuint program)\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\n    // \u30b7\u30a7\u30fc\u30c0\u306e\u5229\u7528\u3092\u7d42\u4e86\u3059\u308b\n    glUseProgram(0);\n    asset(glGetError() == GL_NO_ERROR);\n\n    // \u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5ec3\u68c4\u3059\u308b\n    glDeleteProgram(extension->shader_program);\n    asset(glGetError() == GL_NO_ERROR);\n\n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n    asset(glIsProgram(extension->shader_program) == GL_FALSE);\n\n\n\u3068\u3001UseProgram \u306b 0 \u3092\u5165\u308c\u3066\u4f7f\u7528\u4e2d\u306e\u30b7\u30a7\u30fc\u30c0\u304c\u306a\u3044\u72b6\u614b\u306b\u623b\u3057\u3066\u304b\u3089\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u524a\u9664\u3057\u3066\u3044\u308b\u3002\nglIsProgram() \u306e\u610f\u5473\u3084\u4f7f\u3044\u65b9\u306f\u30b5\u30f3\u30d7\u30eb\u306b\u3042\u308b\u901a\u308a\u3002\n\nglDeleteShader\n\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u540c\u69d8\u306b\u3001\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u524a\u9664\u3002\nvoid glDelteShader(GLuint shader)\n\n\n## \u524d\u63d0\n\n\u300e<a href=\"http://www.amazon.co.jp/gp/product/4877833013/ref=as_li_qf_sp_asin_tl?ie=UTF8&camp=247&creative=1211&creativeASIN=4877833013&linkCode=as2&tag=tinynoises-22\">\u30de\u30eb\u30c1\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306e\u305f\u3081\u306eOpenGL ES\u5165\u9580 \u57fa\u790e\u7de8\u2015Android/iOS\u5bfe\u5fdc\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u30b9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0</a>\u300f\n\n\u306e\u629c\u7c8b\u30e1\u30e2\u3067\u3059\u30025\u7ae0\u30016\u7ae0\u3042\u305f\u308a\u3002\n1\u301c4 \u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u306f\u65ad\u7247\u306e\u307f\u306a\u306e\u3067\u3001\u672c\u66f8\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\n\n# 5\u7ae0\n### glClearColor\n```\nvoid glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)\n```\nclamp \u306f 0.0f - 1.0f\u306e\u7bc4\u56f2\u306b\u30af\u30e9\u30f3\u30d7\u3055\u308c\u308b\u3068\u3044\u3046\u610f\u5473\n\n### glClear\n```\nvoid glClear (GLbitfield mask)\n```\nmask\u306f\u5857\u308a\u3064\u3076\u3059\u30d0\u30c3\u30d5\u30a1\u306e\u7a2e\u985e\n\n- GL_COLOR_BUFFER_BIT\n- GL_DEPTH_BUFFER_BIT\n- GL_STENCIL_BUFFER_BIT\n\nOpenGL ES \u306f\u3001\u7528\u9014\u306e\u9055\u30463\u679a\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u63cf\u753b\u3092\u884c\u3046\u3002\u305d\u308c\u305e\u308c\u4fdd\u5b58\u3059\u308b\u5185\u5bb9\u3084\u30e1\u30e2\u30ea\u306e\u4f7f\u7528\u91cf\u304c\u7570\u306a\u308b\u3002\n\u30ab\u30e9\u30fc\u30d0\u30c3\u30d5\u30a1\u306f\u3001\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u3072\u3068\u3064\u3072\u3068\u3064\u306e\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u306e\u96c6\u5408\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3060\u306e\u30e1\u30e2\u30ea\u306e\u584a\u3002\n\nGLbitfield mask \u306e\u5f15\u6570\u306b\u306f\u3001\u8907\u6570\u306e\u30d0\u30c3\u30d5\u30a1\u3092 OR \u3067\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u300c1\u56de\u306e\u30b3\u30de\u30f3\u30c9\u547c\u3073\u51fa\u3057\u3067\u8907\u6570\u306e\u30d0\u30c3\u30d5\u30a1\u3092\u540c\u6642\u306b\u5857\u308a\u3064\u3076\u3059\u300d\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n### \u88dc\u52a9\u95a2\u6570\uff1aES20_postFrontBuffer\n\u672c\u8a8c\u30b5\u30f3\u30d7\u30eb\u72ec\u81ea\u306e\u30e1\u30bd\u30c3\u30c9\u3002\u753b\u9762\u3092\u66f4\u65b0\u3059\u308b\u3002\u3053\u308c\u3092\u547c\u3073\u51fa\u3055\u306a\u3044\u9650\u308a\u3001\u63cf\u753b\u7d50\u679c\u304c\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306b\u53cd\u6620\u3055\u308c\u308b\u3053\u3068\u306f\u306a\u3044\u3002\u4e2d\u8eab\u306f\u5404\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u4f9d\u5b58\u3057\u305f\u51e6\u7406\u3067\u3001\u30ec\u30f3\u30c0\u30fc\u30d0\u30c3\u30d5\u30a1\u306e\u30d0\u30a4\u30f3\u30c9\u3084\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3078\u306e\u547d\u4ee4\u304c\u542b\u307e\u308c\u308b\u304c\u3001\u300c\u63cf\u753b\u7d50\u679c\u3092\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306b\u53cd\u6620\u3055\u305b\u308b\u300d\u51e6\u7406\u306f\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3078\u306e\u4f9d\u5b58\u6027\u304c\u5927\u304d\u3044\u306e\u3067\u3001\u672c\u6765\u306e OpenGL ES \u306e\u6a5f\u80fd\u306b\u306f\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u3002\n\nOpenGL ES \u306f\u3001 **\u30b5\u30fc\u30d5\u30a7\u30a4\u30b9\u306b\u5bfe\u3057\u3066\u63cf\u753b\u3059\u308b**\u306e\u3067\u3042\u3063\u3066\u3001\u753b\u9762\u306b\u5bfe\u3057\u3066\u63cf\u753b\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3002\n\n\u203bOS \u3068 Surface \u306e\u9023\u643a\u3092\u62c5\u5f53\u3059\u308b\u306e\u304c\u3001EGL(Android)\u3067\u3042\u308a\u3001EAGL(iOS)\u3068\u306a\u308b\u3002\n\nOpenGL ES \u306b\u304a\u3051\u308b\u300c\u30c0\u30d6\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u300d\u306f\u3001\u30b5\u30fc\u30d5\u30a7\u30a4\u30b9\u306b\u5bfe\u3059\u308b\u63cf\u753b\u30d0\u30c3\u30d5\u30a1\uff08 **\u30d0\u30c3\u30af\u30d0\u30c3\u30d5\u30a1** \uff09\u3068\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306b\u5bfe\u3059\u308b\u63cf\u753b\u30d0\u30c3\u30d5\u30a1\uff08 **\u30d5\u30ed\u30f3\u30c8\u30d0\u30c3\u30d5\u30a1** \uff09\u3092\u8a00\u3046\u3002\n\n\u203bAndroid4.1\u4ee5\u964d\u3067\u306f\u3001\u3055\u3089\u306b\u300c\u4e88\u5099\u306e\u30d0\u30c3\u30d5\u30a1\u300d\u3092\u5132\u3051\u305f\u300c\u30c8\u30ea\u30d7\u30eb\u30d0\u30c3\u30d5\u30a1\u30ea\u30f3\u30b0\u300d\u306e\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n### \u63cf\u753b\u30d5\u30ec\u30fc\u30e0\nAndroid/iOS\u3068\u3082\u306b\u3001View\u306f\u57fa\u672c\u7684\u306b\u300c\u66f4\u65b0\u304c\u5fc5\u8981\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u300d\u3060\u3051\u3092\u63cf\u753b\u3057\u3066\u3044\u308b\u3002\u305d\u308c\u306b\u5bfe\u3057\u3001OpenGL ES \u306f\u3001\n\n- View\u3068\u540c\u3058\u304f\u5fc5\u8981\u306a\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u307f\u63cf\u753b\n- \u6c7a\u307e\u3063\u305ffps\u3067\u5e38\u306b\u63cf\u753b\n\n\u3068\u3044\u30462\u7a2e\u985e\u306e\u4f7f\u3044\u65b9\u304c\u3055\u308c\u308b\u3002\n\n### OpenGL ES \u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u4fdd\u5b58\u5148\nglClearColor\u3067\u6307\u5b9a\u3055\u308c\u305f\u300c\u5857\u308a\u3064\u3076\u3057\u306e\u8272\u300d\u306f\u3001\u3069\u3053\u306b\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u304b\uff1f\n\nOpenGL ES\u306e\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3001OpenGL ES \u304c\u7ba1\u7406\u3057\u3066\u3044\u308b **Context** \u3068\u547c\u3070\u308c\u308b\u9818\u57df\u306b\u5024\u304c\u4fdd\u6301\u3055\u308c\u308b\u3002OpenGL ES \u306f Context \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u60c5\u5831\u306b\u57fa\u3065\u3044\u3066\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b **\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3** \u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\nContext \u306b\u306f\u3001OpenGL ES \u306e\u72b6\u614b\uff08\u30b9\u30c6\u30fc\u30c8\uff09\u3001\u753b\u50cf\u3084\u30b7\u30a7\u30fc\u30c0\u30fc\u7b49\u306e\u7ba1\u7406\u30fb\u4fdd\u6301\u9818\u57df\u3082\u542b\u307e\u308c\u308b\u3002\u57fa\u672c\u7684\u306b\u96c6\u4e2d\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u300cOpenGL ES \u304c\u7ba1\u7406\u3059\u308b\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u4fdd\u5b58\u3055\u308c\u308b\u300d\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u3067OK\n\n# 6\u7ae0\n### \u9802\u70b9(vertex)\nOpenGL ES \u306f\u3001n\u500b\u306e\u9802\u70b9\u3092\u7a7a\u9593\u4e0a\u306b\u6d6e\u304b\u3079\uff08\u5ea7\u6a19\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\uff09\u3001\u3053\u308c\u3089\u3092\u7d50\u3093\u3067\u5857\u308a\u3064\u3076\u3059\u3053\u3068\u3067\u56f3\u5f62\u3092\u63cf\u304f\u3002\n\nOpenGL ES \u304c\u63cf\u753b\u53ef\u80fd\u306a\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\uff08\u56f3\u5f62\uff09\u306f\u3001\u70b9/\u7dda/\u4e09\u89d2\u5f62\u306e3\u7a2e\u985e\u3002\n\n### \u30b7\u30a7\u30fc\u30c0\u30fc\nOpenGL ES 1.x \u4e16\u4ee3\u306b\u306f\u5b58\u5728\u3057\u306a\u304b\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\u65b0\u3057\u3044\u63cf\u753b\u80fd\u529b\u3068\u67d4\u8edf\u6027\u3092\u624b\u306b\u5165\u308c\u305f\u5909\u308f\u308a\u306b\u3001\u300c\u3068\u3063\u3064\u304d\u3084\u3059\u3055\u300d\u304c\u5931\u308f\u308c\u305f\u3002\u3064\u307e\u308a\u3001\u300c\u30b7\u30a7\u30fc\u30c0\u30fc\u3092\u8a18\u8ff0\u3057\u306a\u3051\u308c\u3070\u4f55\u3082\u3067\u304d\u306a\u3044\u300d\u3068\u3044\u3046\u4e16\u754c\u89b3\u306b\u306a\u3063\u305f\u3002\u30b3\u30fc\u30c9\u91cf\u3082\u5897\u3048\u305f\u3002\n\n\u30b7\u30a7\u30fc\u30c0\u30fc\u306f\u300c\u7279\u6b8a\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u300d\u3067\u3042\u308a\u3001C\u306b\u4f3c\u305f\u5c02\u7528\u306e\u8a00\u8a9e\u3067\u8a18\u8ff0\u3059\u308b\u3002\n\n## sample_rendaring_triangle.c\n###\u5171\u901a\u69cb\u9020\n- initialize \u3067 extention \u69cb\u9020\u4f53\u7528\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3057\u3066\u3001\u5fc5\u8981\u306a\u7b87\u6240\u3067\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u4f7f\u7528\n- \u30b5\u30f3\u30d7\u30eb\u3067\u5fc5\u8981\u306a\u5024\u306f\u3059\u3079\u3066\"Extension_\u30b5\u30f3\u30d7\u30eb\u540d\"\u3067\u7ba1\u7406\u3001extension\u30e1\u30f3\u30d0\u30fc\u306b\u5bfe\u3057\u3001OpenGL ES \u304c\u751f\u6210\u3057\u305f\u5024\u3084\u30a2\u30d7\u30ea\u304c\u5fc5\u8981\u306a\u5909\u6570\u7b49\u3092\u4fdd\u5b58\u30fb\u30a2\u30af\u30bb\u30b9\u3059\u308b\n- \u305d\u308c\u3089\u306f destroy \u3067\u5ec3\u68c4\u3055\u308c\u308b\n\n### \u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306e\u751f\u6210\n\u30b7\u30a7\u30fc\u30c0\u306f\u3001\u63cf\u753b\u51e6\u7406\u306e\u524d\u534a\u3092\u62c5\u3046 **\u9802\u70b9\u30b7\u30a7\u30fc\u30c0** \u3068\u5f8c\u534a\u90e8\u5206\u306e **\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0** \u306b\u5206\u3051\u3089\u308c\u308b\u3002\n\n\u300c\u9802\u70b9\u306e\u6700\u7d42\u7684\u306a\u5ea7\u6a19\u3092\u6c7a\u3081\u308b\u300d\u3053\u3068\u304c\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306e\u5f79\u5272\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3092 GLchar* \u306e\u30dd\u30a4\u30f3\u30bf\u306b\u6587\u5b57\u5217\uff08\u306e\u3088\u3046\u306a\u578b\uff09\u3068\u3057\u3066\u683c\u7d0d\u3057\u3066\u3044\u308b\u3002\n\n```\nconst GLchar *vertex_shader_source = \n    \"attribute mediump vec4 attr_pos;\"\n    \"void main() {\"\n    \"    gl_Position = attr_pos;\"\n    \"}\";\n```\n\n\u898b\u3066\u308f\u304b\u308b\u3088\u3046\u306b\u3001\u53b3\u5bc6\u306a C\u8a00\u8a9e\u3068\u306f\u7570\u306a\u308b\u66f8\u5f0f\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u3053\u306e\u8a00\u8a9e\u3092 **GLSL ES(OpenGL Shader Language ES)** \u3068\u547c\u3076\u3002\n\n### GLSL\u6587\u6cd5\uff1aattribute\u30ad\u30fc\u30ef\u30fc\u30c9\n\n[attribute] [mediump vec4] [attr_pos];\n[\u30ad\u30fc\u30ef\u30fc\u30c9\u5ba3\u8a00] [\u5909\u6570\u578b] [\u5909\u6570\u540d]\n\n\nattribute \u30ad\u30fc\u30ef\u30fc\u30c9\u306f\u3001\u9802\u70b9\u306e\u5c5e\u6027\u3092\u5ba3\u8a00\u3059\u308b\u3002attribute \u5909\u6570\u306f\u8aad\u8fbc\u307f\u5c02\u7528\u3067\u3001\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u304d\u306b OpenGL \u304c\u81ea\u52d5\u7684\u306b\u5024\u3092\u4ee3\u5165\u3059\u308b\u3002\uff08\u4ee3\u5165\u3059\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\uff09\n\nvec4 \u306f\u304a\u306a\u3058\u307f\u306e\n\n```\ntypedef struct vec4 {\n    GLfloat x;\n    GLfloat y;\n    GLfloat z;\n    GLfloat w;\n}\n```\n\n**2D \u3092\u6271\u3046\u9650\u308a\u306f\u3001\u300c\u3068\u308a\u3042\u3048\u305a w \u306b\u306f 1.0 \u3092\u5165\u308c\u3066\u304a\u304f\u300d**\u3067\u3001\u307e\u305a\u306f OK\u3002\n\n### GLSL\u6587\u6cd5\uff1amediump\u30ad\u30fc\u30ef\u30fc\u30c9\nfloat \u306f 4byte \u3060\u304c\u3001\u6bce\u79d2\u6570\u767e\u4e07\u3068\u3044\u3046\u9802\u70b9\u6570\u3092\u51e6\u7406\u3059\u308b\u3053\u3068\u306b\u3082\u306a\u308b OpenGL \u3067\u306f\u3001\u307b\u3093\u306e\u50c5\u304b\u306a\u8a08\u7b97\u91cf\u306e\u5897\u52a0\u304c\u30af\u30ea\u30c6\u30a3\u30ab\u30eb\u306b\u306a\u308b\u3002\n\n\u305d\u3053\u3067\u3001GLSL ES \u3067\u306f\u3001\u51e6\u7406\u7cbe\u5ea6\u306e\u6307\u5b9a\u3092\u5f37\u5236\u3057\u3066\u3044\u308b\u3002\n\n\n| \u8b58\u5225\u5b50 | \u7cbe\u5ea6 | \u30b9\u30d4\u30fc\u30c9 |\u76ee\u5b89 |\n|:------|-----|---------|----:|\n| highp | \u9ad8 | \u4f4e\u901f | \u7d76\u5bfe\u5024\u304c1.0\u4ee5\u4e0a |\n| mediump | \u4e2d | \u4e2d\u901f | \u7d76\u5bfe\u5024\u304c1.0\u4ee5\u4e0b |\n| lowp | \u4f4e | \u9ad8\u901f | \u7d76\u5bfe\u5024\u304c1.0\u4ee5\u4e0b\u3067\u3001\u5206\u89e3\u80fd\u304c\u4f4e\u304f\u3066\u3082\u554f\u984c\u7121\u3044 |\n\n\u305f\u3060\u3057\u74b0\u5883\u306b\u3082\u3088\u308b\u306e\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u6642\u306f\u3053\u306e\u8a2d\u5b9a\u3082\u7591\u3063\u3066\u307f\u308b\u3053\u3068\u3002\n\n### GLSL\u6587\u6cd5\uff1amain\nGLSL\u306f\u3001\"void main()\"\u95a2\u6570\u304b\u3089\u958b\u59cb\u3055\u308c\u308b\u3002\uff08\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\uff09\n\nmain() \u306f\u5f15\u6570\u3092\u53d7\u3051\u53d6\u3089\u305a\u3001\u6b32\u3057\u3044\u60c5\u5831\u306f attribute \u7b49\u306b\u3088\u3063\u3066\u53d7\u3051\u53d6\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f attr_pos \u3067\u53d7\u3051\u53d6\u3063\u305f\u9802\u70b9\u306e\u4f4d\u7f6e\u60c5\u5831\u3092 **gl_Position** \u306b\u4ee3\u5165\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u306f\u7d44\u8fbc\u307f\u5909\u6570\u3067\u3001\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u304b\u3089\u4f4d\u7f6e\u60c5\u5831\u3092\u53d7\u3051\u53d6\u308b\u3068\u3044\u3046\u5f79\u5272\u3092\u6301\u3064\u3002\n\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u304b\u3089\u53d7\u3051\u53d6\u3063\u305f gl_Position \u306f\u3001OpenGL \u306b\u898f\u5b9a\u3055\u308c\u305f\u51e6\u7406\u304c\u52a0\u3048\u3089\u308c\u3001\u5f8c\u534a\u306e\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u51e6\u7406\u304c\u59cb\u307e\u308b\u3002\n\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306f\u9802\u70b9\u306e\u6570\u3060\u3051\u5b9f\u884c\u3055\u308c\u308b\u3002\u307e\u305f gl_Position \u306f main() \u304c\u547c\u3073\u51fa\u3055\u308c\u308b\u305f\u3073\u306b\u521d\u671f\u5316\u3055\u308c\u308b\u3002\u306a\u306e\u3067\u3001\u524d\u56de\u306e\u63cf\u753b\u7d50\u679c\u304c\u6b21\u306e\u63cf\u753b\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u4e00\u5207\u306a\u3044\u3002\u305d\u3057\u3066\u3001\u547c\u3073\u51fa\u3057\u306fGPU\u306e\u8907\u6570\u30b3\u30a2\u30fb\u8907\u6570\u30b9\u30ec\u30c3\u30c9\u306b\u3088\u3063\u3066 **\u4e26\u5217\u7684\u306b\u547c\u3073\u51fa\u3055\u308c\u308b** \u3002GLSL ES \u306e\u72ec\u7279\u306a\u8a18\u6cd5\u3068\u5236\u7d04\u306f\u3001\u4e26\u5217\u5b9f\u884c\u3092\u52b9\u7387\u3088\u304f\u884c\u3046\u305f\u3081\u3067\u3082\u3042\u308b\u3002\n\n### GLSL\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\n\n```\n// \u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nextension->vert_shader = glCleateShader(GL_VERTEX_SHADER);\nassert(glGetError() == GL_NO_ERROR);\nassert(extension->vert_shader != 0);\n\n    glShaderSource(extension->vert_shader, 1, &vertex_shader_source, NULL);\n    glCompileShader(extension->vert_shader);\n\n        // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n        {\n            GLint compileSuccess = 0;\n            glGetShaderiv(extension->vert_shader, GL_COMPILE_STATUS, &compileSuccess);\n            if (compileSuccess == GL_FALSE) {\n                // \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\n                GLint infoLen = 0;\n                // \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\n                glGetShaderiv(extension->vert_shader, GL_INFO_LOG_LENGTH, &infoLen);\n                if (infoLen > 1) {\n                    GLchar *message = (GLchar*) calloc(infoLen, sizeof(GLchar));\n                    glGetShaderInfoLog(extension->vert_shader, infoLen, NULL, message);\n                    __log(message);\n                    free((void*) message);\n                } else {\n                    __log(\"comple error not info...\");\n                }\n            }\n            assert(compileSuccess == GL_TRUE);\n        }\n    // ....\n```\n\n### glCreateShader\n\n```\nGLuint glCreateShader(GLenum type)\n```\ntype\u306f\u4f5c\u6210\u3059\u308b\u30b7\u30a7\u30fc\u30c0\u306e\u7a2e\u985e\u3002\u623b\u308a\u5024\u306f\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08\u7ba1\u7406\u7528\u306eID\uff09\u3002\u6210\u529f\u3059\u308b\u3068 0 \u4ee5\u5916\u304c\u8fd4\u308b\u3002\n\n### glGetError\n\n```\nGLenum glGetError ()\n```\n\n\u30a8\u30e9\u30fc\u53d6\u308a\u51fa\u3057\u547d\u4ee4\u3002\u6ce8\u610f\u70b9\u306f\uff13\u3064\uff1a\n\n- glGetError\u30b3\u30de\u30f3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u70b9\u3067\u3001\u4fdd\u6301\u3057\u3066\u3044\u308b\u30a8\u30e9\u30fc\u306f GL_NO_ERROR \u306b\u4e0a\u66f8\u304d\u3055\u308c\u308b\n- \u300c\u3069\u306e\u30b3\u30de\u30f3\u30c9\u306e\u30a8\u30e9\u30fc\u304b\u300d\u3092\u7ba1\u7406\u3057\u3066\u3044\u306a\u3044\u3002\u307e\u305f\u65e2\u306b\u30a8\u30e9\u30fc\u304c\u767a\u58f0\u3057\u3066\u3044\u308b\u72b6\u614b\u3067\u306f\u30a8\u30e9\u30fc\u5185\u5bb9\u306e\u4e0a\u66f8\u304d\u3082\u884c\u308f\u306a\u3044\u3002\n- \u547c\u3073\u51fa\u3057\u306e\u30b3\u30b9\u30c8\uff08\u6642\u9593\uff09\u306f\u9ad8\u3044\n\n\u306a\u306e\u3067\u3001assert \u3067\u30c7\u30d0\u30c3\u30b0\u30d3\u30eb\u30c9\u6642\u306e\u307f\u30c1\u30a7\u30c3\u30af\u3059\u308b\u306e\u304c\u304a\u3059\u3059\u3081\u3002\n\n### glShaderSource\n\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u6e21\u3059\u3002\n\n```\nvoid glShaderSource(GLuint shader, GLsizei count, const GLchar** string, const GLint* length);\n```\n\n- shader:\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n- count: \u30b7\u30a7\u30fc\u30c0\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u6587\u5b57\u5217\u914d\u5217\u306e\u6570\uff08\u3053\u3053\u3067\u306f\uff11\uff09\n- string: \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u6587\u5b57\u5217\u914d\u5217\uff08\u4e88\u7d04\u8a9e\u3058\u3083\u306a\u3044\u306e\u304b\u3053\u308c\u3002\u3002\n- length: \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u6587\u5b57\u5217\u9577\uff08NULL\u3092\u6e21\u3059\u3068\u3001\\0\u3067\u7d42\u308f\u308b\u6587\u5b57\u5217\u3068\u898b\u306a\u3059\n\n\n### glCompileShader\n```\nvoid glCompileShader(GLuint shader);\n```\n\n\u6e21\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u521d\u3081\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u3002\n\n### glGetShaederiv\n\u5b9f\u969b\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u6210\u529f\u3057\u305f\u304b\u3069\u3046\u304b\u306f\u5224\u5225\u3067\u304d\u306a\u3044\uff08\u623b\u308a\u5024\u306fvoid\uff09\u3002\u306a\u306e\u3067\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306b\u3088\u3063\u3066\u60c5\u5831\u3092\u554f\u3044\u5408\u308f\u305b\u308b\u3002\n\n```\nvoid glGetShaderiv(GLuint shader, GLenum pname, GLint *params);\n```\n\n\u5f15\u6570\u306f\u672c\u8a8c p.88 \u53c2\u7167\u3002\u30b5\u30f3\u30d7\u30eb\u3067\u306f COMPILE_STATUS \u3092\u53d6\u5f97\u3057\u3001GL_TRUE / GL_FALSE \u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u308b\u3002\n\n## \u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u8a18\u8ff0\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306f\u3001\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u3068\u3082\u547c\u3070\u308c\u3001\u6700\u7d42\u7684\u306a\u300c\u30d4\u30af\u30bb\u30eb\u306e\u8272\u300d\u3092\u78ba\u5b9a\u3055\u305b\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u5358\u8272\u306e\u8d64\u3092\u51fa\u529b\u3059\u308b\u30b7\u30f3\u30d7\u30eb\u306a\u30b7\u30a7\u30fc\u30c0\u3092\u8a18\u8ff0\u3057\u3066\u3044\u308b\u3002\n\n```\nconst GLchar *fragment_shader_source = \n    \"void main() {\"\n    \"    gl_FlagColor = vec4(1.0, 0.0, 0.0, 1.0);\"\n    \"}\";\n```\n\n\u203bGLSL ES \u3067\u306f\u3001\u6d6e\u52d5\u5c0f\u6570\u3092\u8a18\u8ff0\u3059\u308b\u969b\u306b\u3001\u672b\u5c3e\u306b\"f\"\u3092\u4ed8\u3051\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u3002\n\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u304b\u3089\u6e21\u3055\u308c\u305f\u9802\u70b9\u306f GPU \u306b\u3088\u3063\u3066\u4e09\u89d2\u5f62\u306b\u7d50\u3070\u308c\u3001\u4e2d\u8eab\u306e\u5857\u308a\u3064\u3076\u3057\u304c\u59cb\u307e\u308b\u3002\u305d\u306e\u3068\u304d\u306b\u30d4\u30af\u30bb\u30eb\u3092\u5857\u308b\u8272\u3092\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u306b\u3088\u3063\u3066\u5224\u65ad\u3059\u308b\u3002\n\ngl_FlagColor \u3082 OpenGL \u306e\u7d44\u8fbc\u307f\u5909\u6570\u3067\u3042\u308a\u3001GLSL ES \u306f\u3001\u305d\u3053\u306b\u66f8\u304b\u308c\u305f\u8272\u3092\u300c\u6700\u7d42\u7684\u306b\u51fa\u529b\u3057\u305f\u3044\u8272\u300d\u3060\u3068\u5224\u65ad\u3059\u308b\u3002\n\n\u9802\u70b9\u81ea\u8eab\u306e\u60c5\u5831\u3067\u3042\u308b attribute \u5909\u6570\u306f\u3001\u30d4\u30af\u30bb\u30eb\u30b7\u30a7\u30fc\u30c0\u306b\u306f\u5ba3\u8a00\u3067\u304d\u306a\u3044\u3002\n\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306f\u6700\u7d42\u7684\u306b\u5857\u308a\u3064\u3076\u3055\u308c\u308b\u30d4\u30af\u30bb\u30eb\u306e\u6570\u3060\u3051\u547c\u3073\u51fa\u3055\u308c\u308b\u3002FullHD\u30b5\u30a4\u30ba\u3067\u306f2,073,600\u56de\u306e\u547c\u3073\u51fa\u3057\u304c\u884c\u308f\u308c\u3001\u305d\u306e 60fps \u3092\u7dad\u6301\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u6bce\u79d21\u51042400\u4e07\u56de\u4ee5\u4e0a\u306e\u547c\u3073\u51fa\u3057\u306b\u5fdc\u3048\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u3002\n\n### \u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u8aad\u8fbc\u307f\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\n\u57fa\u672c\u7684\u306b\u306f\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3068\u540c\u3058\u6d41\u308c\u3002glCreateShader\u306e\u5f15\u6570\u306b\u6ce8\u610f\u3002\n\n```\n        // \u30b7\u30a7\u30fc\u30c0\u30fc\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\n        extension->frag_shader = glCreateShader(GL_FRAGMENT_SHADER);\n        assert(extension->frag_shader != 0);\n        glShaderSource(extension->frag_shader, 1, &fragment_shader_source, NULL);\n        glCompileShader(extension->frag_shader);\n\n        // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n        {\n            GLint compileSuccess = 0;\n            glGetShaderiv(extension->frag_shader, GL_COMPILE_STATUS, &compileSuccess);\n            if (compileSuccess == GL_FALSE) {\n                // \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\n                GLint infoLen = 0;\n                // \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\n                glGetShaderiv(extension->frag_shader, GL_INFO_LOG_LENGTH, &infoLen);\n                if (infoLen > 1) {\n                    GLchar *message = (GLchar*) calloc(infoLen, sizeof(GLchar));\n                    glGetShaderInfoLog(extension->frag_shader, infoLen, NULL, message);\n                    __log(message);\n                    free((void*) message);\n                } else {\n                    __log(\"comple error not info...\");\n                }\n            }\n            assert(compileSuccess == GL_TRUE);\n        }\n```\n\n## \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210\n2\u3064\u306e\u30b7\u30a7\u30fc\u30c0\u3092\u7528\u610f\u3067\u304d\u305f\u3068\u3053\u308d\u3067\u3001\u305d\u308c\u3089\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u30ea\u30f3\u30af\u3059\u308b\u3053\u3068\u3067\u521d\u3081\u3066\u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u6a5f\u80fd\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u3002OpenGLES \u3067\u306f\u3001\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3068\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u3092\u30ea\u30f3\u30af\u3055\u305b\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092 **\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8** \u3068\u547c\u3076\u3002\n\n### glCreateProgram\n```\nGLenum glCreateProgram\n```\n\n\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u540c\u3058\u304f\u5c02\u7528\u306e\u30e1\u30e2\u30ea\u9818\u57df\u306b\u4fdd\u5b58\u30fb\u7ba1\u7406\u3055\u308c\u3001GLuint \u578b\u306e ID \u304c\u5272\u308a\u632f\u3089\u308c\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306e\u751f\u6210\u3068\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\uff1a\n\n```\n    extension->shader_program = glCreateProgram();\n    assert(extension->shader_program != 0);\n```\n\n\u751f\u6210\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u30010\u4ee5\u5916\u304c\u8fd4\u308b\u3002\n\n### glAttachShader\n\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u305f\u3089\u3001\u30ea\u30f3\u30af\u3057\u305f\u3044\u30b7\u30a7\u30fc\u30c0\u3092\u63a5\u7d9a\uff08\u30a2\u30bf\u30c3\u30c1\uff09\u3059\u308b\u3002\n\n```\nvoid glAttachShader(GLuint program, GLuint shader)\n```\n\n### glLinkProgram\n2\u3064\u306e\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u95a2\u9023\u4ed8\u3051\u305f\u3089\u3001\u305d\u308c\u3089\u3092\u30ea\u30f3\u30af\u3055\u305b\u3066\u4f7f\u7528\u53ef\u80fd\u306a\u72b6\u614b\u306b\u306a\u308b\u3002\n\n```\nvoid glLinkProgram(GLuint program)\n```\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\uff1a\n\n```\n//\n        // \u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u30fc\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u95a2\u9023\u4ed8\u3051\u308b\n        glAttachShader(extension->shader_program, extension->vert_shader);\n        assert(glGetError() == GL_NO_ERROR);\n        // \u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u30fc\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u95a2\u9023\u4ed8\u3051\u308b\n        glAttachShader(extension->shader_program, extension->frag_shader);\n        assert(glGetError() == GL_NO_ERROR);\n\n        // \u30ea\u30f3\u30af\u51e6\u7406\u3092\u884c\u3046\n        glLinkProgram(extension->shader_program);\n\n        // \u30ea\u30f3\u30af\u30a8\u30e9\u30fc\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n        {\n            GLint linkSuccess = 0;\n            glGetProgramiv(extension->shader_program, GL_LINK_STATUS, &linkSuccess);\n\n            if (linkSuccess == GL_FALSE) {\n                // \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u305f\u3081\u3001\u72b6\u614b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n                GLint infoLen = 0;\n                // \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\n                glGetProgramiv(extension->shader_program, GL_INFO_LOG_LENGTH, &infoLen);\n                if (infoLen > 1) {\n                    GLchar *message = (GLchar*) calloc(infoLen, sizeof(GLchar));\n                    glGetProgramInfoLog(extension->shader_program, infoLen, NULL, message);\n                    __log(message);\n                    free((void*) message);\n                }\n            }\n\n            // GL_NO_ERROR\u3067\u3042\u308b\u3053\u3068\u3092\u691c\u8a3c\u3059\u308b\n            assert(linkSuccess == GL_TRUE);\n        }\n```\n\n### glGetProgramiv\n```\nvoid glGetProgramiv(GLuint program, GLenum pname, GLint* param)\n```\n\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u540c\u69d8\u306b\u30ea\u30f3\u30af\u30a8\u30e9\u30fc\u306e\u30ed\u30b0\u60c5\u5831\u3092\u53d6\u5f97\n\n### glGetProgramInfoLog\n```\nvoid glGetProgramInfoLog(GLuint program, GLsizei bufsize, GLsize* length, GLchar* infolog)\n```\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n### glGetAttribLocation\n\u30b7\u30a7\u30fc\u30c0\u81ea\u4f53\u306e\u6e96\u5099\u304c\u7d42\u308f\u3063\u305f\u3089\u3001\u30b7\u30a7\u30fc\u30c0\u306b\u30c7\u30fc\u30bf\u3092\u6e21\u3059\u6e96\u5099\u3092\u3059\u308b\u3002\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306b\u8a18\u8ff0\u3057\u305fattribute\u5909\u6570\uff08attr_pos\uff09\u306f\u30a2\u30d7\u30ea\u5074\u304b\u3089\u64cd\u4f5c\u3092\u884c\u3046\u969b\u306b\u3001\u300c\u5909\u6570\u540d\u300d\u3092\u76f4\u63a5\u5229\u7528\u305b\u305a\u3001 **attribute location** \u3068\u3044\u3046 ID \u3092\u5229\u7528\u3059\u308b\u3002\u53d6\u5f97\u306b\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\uff1a\n\n```\nGLint glGetAttribLocation(GLuint program, const GLchar* name)\n```\n\nattribute location \u306f\u57fa\u672c\u7684\u306b\u5909\u66f4\u3055\u308c\u305a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u30ea\u30f3\u30af\u3057\u305f\u969b\u306b\u78ba\u5b9a\u3055\u308c\u308b\uff08\u306e\u3067\u3001Extension \u69cb\u9020\u4f53\u306b\u4fdd\u5b58\u3057\u3066\u3044\u308b\uff09\u3002\n\n```\n    extension->attr_pos = glGetAttribLocation(extension->shader_program, *attr_pos);\n    assert(extension->attr_pos >= 0);\n```\n\n\u5931\u6557\u3057\u305f\u3068\u304d\u306f -1\n\n### glUseProgram\n\u6700\u5f8c\u306b\u300c\u3053\u306e\u30b7\u30a7\u30fc\u30c0\u3067\u63cf\u753b\u3057\u307e\u3059\u300d\u3068\u3044\u3046\u5ba3\u8a00\u3092\u884c\u3046\u3002glUserProgram() \u3067\u3001\u63cf\u753b\u306b\u4f7f\u7528\u3059\u308b\u30b7\u30a7\u30fc\u30c0\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\n\n```\nvoid glUseProgram(GLuint program)\n```\n\n\u901a\u5e38\u306f\u30b7\u30a7\u30fc\u30c0\u306f\u8907\u6570\u5229\u7528\u3059\u308b\u304c\u3001glUseProgram() \u306f\u63cf\u753b\u3054\u3068\u3067\u306f\u306a\u304f\u3001\u300c\u30b7\u30a7\u30fc\u30c0\u3092\u5207\u308a\u66ff\u3048\u305f\u3044\u30bf\u30a4\u30df\u30f3\u30b0\u300d\u306e\u307f\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u308b\u3002\n\n## \u63cf\u753b\u3092\u884c\u3046\n```\nvoid sample_RenderingTriangle_rendering(GLApplication *app) {\n    // \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\n    Extension_RenderingTriangle *extension = (Extension_RenderingTriangle*) app->extension;\n    \n    glClearColor(0.0f, 1.0f, 1.0f, 1.0f);\n    glClear(GL_COLOR_BUFFER_BIT);\n    \n    // attr_pos \u3092\u6709\u52b9\u306b\u3059\u308b\n    glEnableVertexAttribArray(extension->attr_pos);\n    \n    // \u753b\u9762\u4e2d\u592e\u3078\u63cf\u753b\n    const GLfloat position[] = {\n        0.0f, 1.0f,   // v0\n        1.0f, -1.0f,  // v1\n        -1.0f, -1.0f  // v2\n    };\n    \n    glVertexAttribPointer(extension->attr_pos, 2, GL_FLOAT, GL_FALSE, 0, (GLvoid*)position);\n    glDrawArrays(GL_TRIANGLES, 0, 3);\n    \n    // \u30d0\u30c3\u30af\u30d0\u30c3\u30d5\u30a1\u3092\u30d5\u30ed\u30f3\u30c8\u30d0\u30c3\u30d5\u30a1\u3078\u8ee2\u9001\uff08\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3054\u3068\u306b\u72ec\u81ea\u306e\u51e6\u7406\uff09\n    ES20_postFrontBuffer(app);\n}\n```\n\n### glEnableVertexAttribArray\nattribute\u5909\u6570\u306b\u306f\u6709\u52b9\u30fb\u7121\u52b9\u72b6\u614b\u304c\u3042\u308a\u3001\u6709\u52b9\u3067\u306a\u3051\u308c\u3070\u9802\u70b9\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002\n\n```\nvoid glEnableVertexAttribArray(GLuint index)\n```\n\n\u300c\u3069\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eattribute\u5909\u6570\u304b\u300d\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001\u6700\u5f8c\u306b glUseProgram \u30b3\u30de\u30f3\u30c9\u3067\u6307\u5b9a\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e attribute \u5909\u6570\u306b\u5bfe\u3057\u3066\u52b9\u679c\u3092\u4e0e\u3048\u308b\uff08\u306e\u3067\u3001\u8907\u6570\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308b\u5834\u5408\u306f\u6ce8\u610f\u304c\u5fc5\u8981\uff09\u3002\n\n### glVertexAttribPointer\n\u9802\u70b9\u30c7\u30fc\u30bf\u306f\u5358\u306a\u308b\u30e1\u30e2\u30ea\u306e\u584a\u3067\u3042\u308a\u3001\u5c02\u7528\u306e\u578b\u3084\u69cb\u9020\u306f\u306a\u3044\u3002\u306a\u306e\u3067\u30011\u3064\u306e\u9802\u70b9\u306b\u3069\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u304c\u3042\u3063\u3066\u3001\u3069\u3093\u306a\u578b\u3067\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u3001\u4e0b\u8a18\u3067\u4f1d\u3048\u308b\u3002\n\n```\nvoid glVertexAttribPointer(GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* ptr)\n```\n\n- index : \u9802\u70b9\u30c7\u30fc\u30bf\u3092\u95a2\u9023\u4ed8\u3051\u308b attribute location\n- size : \u9802\u70b9\u30c7\u30fc\u30bf\u306e\u8981\u7d20\u6570\n- type : \u9802\u70b9\u30c7\u30fc\u30bf\u306e\u578b\u3002GL_BYTE, GL_FLOAT \u306a\u3069\n- normalized : \u6b63\u898f\u5316\u3057\u3066\u6e21\u3059\u5834\u5408\u306f GL_TRUE, \u305d\u306e\u307e\u307e\u6e21\u3059\u5834\u5408\u306f GL_FALSE\n- stride : \u9802\u70b9\u306e\u5148\u982d\u4f4d\u7f6e\u3054\u3068\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u30010\u6307\u5b9a\u53ef\u80fd\n- ptr : \u95a2\u9023\u4ed8\u3051\u308b\u9802\u70b9\u306e\u5148\u982d\u30dd\u30a4\u30f3\u30bf\n\nOpenGLES 2.0 \u3067\u306f\u3001\u300c\u9802\u70b9\u30c7\u30fc\u30bf\u300d\u3068\u300c\u30b7\u30a7\u30fc\u30c0\u306b\u6e21\u3055\u308c\u308b\u30c7\u30fc\u30bf\u300d\u306f\u5206\u96e2\u3057\u3066\u8003\u3048\u308b\u3002GPU\u306f\u9802\u70b9\u30c7\u30fc\u30bf\u3092\u30bd\u30fc\u30b9\u3068\u3057\u3066\u3001\u30b7\u30a7\u30fc\u30c0\u304c\u6307\u5b9a\u3059\u308b\u90fd\u5408\u306e\u3044\u3044\u578b\u306b\u5909\u63db\u3057\u3066\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306b\u6e21\u3057\u3066\u3044\u308b\u3002\n\n### glDrawArrays\n```\nvoid glDrawArrays(GLenum mode, GLint first, GLsizei count)\n```\n\n- mode : \u63cf\u753b\u30e2\u30fc\u30c9\u3092\u6307\u5b9a\u3001GL_LINES, GL_TRIANGLES,,, \u306a\u3069\n- first : \u958b\u59cb\u3059\u308b\u9802\u70b9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6307\u5b9a\n- count : \u63cf\u753b\u3059\u308b\u9802\u70b9\u6570\u3092\u6307\u5b9a\n\n\u3053\u3053\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u306e position[] \u306e\u30b5\u30a4\u30ba\u3092 first + count \u304c\u8d85\u3048\u308b\u3068\u5f53\u7136\u60b2\u60e8\u306a\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u3059\u3079\u3057\u3002\n\n## Viewport\n\u30ea\u30b5\u30a4\u30ba\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\uff1a\n\n```\nvoid sample_RenderingTriangle_resized(GLApplication *app) {\n    glViewport(0, 0, app->surface_width, app->surface_height);\n}\n```\n\n### 2\u3064\u306e\u5ea7\u6a19\u7cfb\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306f\u3001X\u8ef8Y\u8ef8\u304c\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u3067\u7ba1\u7406\u3055\u308c\u308b **\u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u7cfb** \u3067\u51e6\u7406\u304c\u884c\u308f\u308c\u308b\u3002\nViewport\u3067\u6307\u5b9a\u3059\u308b\u306e\u306f\u3053\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u7cfb\u3002\n\u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u7cfb\u306f **\u5de6\u4e0b** \u3092\u539f\u70b9\u3068\u3059\u308b\u3002\uff08\u4e00\u822c\u7684\u306a 2D\u5ea7\u6a19\u7cfb\u306f\u5de6\u4e0a\u304c\u57fa\u6e96\u306b\u306a\u308b\uff09\n\u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u306e\u5bfe\u89d2\u3001\u53f3\u4e0a\u306e\u5ea7\u6a19\u306f\u30b5\u30fc\u30d5\u30a7\u30a4\u30b9\u306e\u5927\u304d\u3055\u3068\u30ea\u30f3\u30af\u3057\u3066\u3044\u308b\u3002\u305d\u308c\u4ee5\u5916\u306e\u300c\u753b\u9762\u5916\u300d\u306e\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u306f\u7269\u7406\u7684\u306b\u306f\u5b58\u5728\u3057\u306a\u3044\u3002\n\n\u3057\u304b\u3057\u3001\n\n```\u9802\u70b9\u30c7\u30fc\u30bf\n    const GLfloat position[] = {\n        0.0f, 1.0f,   // v0\n        1.0f, -1.0f,  // v1\n        -1.0f, -1.0f  // v2\n    };\n```\n\u306f\u30010-1\u306e\u6d6e\u52d5\u5c0f\u6570\u3067\u3042\u308b\u3002\n\nOpenGLES \u304c\u9802\u70b9\u306e\u6f14\u7b97\u306b\u5229\u7528\u3059\u308b\u5ea7\u6a19\u7cfb\u306f\u3001X\u8ef8\u3001Y\u8ef8\u3001Z\u8ef8\u3092\u6301\u3064 **\u6b63\u898f\u5316\u3055\u308c\u305f\u30c7\u30d0\u30a4\u30b9\u5ea7\u6a19\u7cfb** \u3067\u3042\u308b\u3002\n\u5ea7\u6a19\u7cfb\u306e\u5de6\u4e0b\u624b\u524d\u304c(-1, -1, -1)\u3067\u3042\u308a\u3001\u53f3\u4e0a\u5965\u304c(1, 1, 1)\u3068\u306a\u308b\u3002\n**\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306b\u3088\u3063\u3066 gl_Position \u306b\u66f8\u304d\u8fbc\u307e\u308c\u305f\u9802\u70b9\u5ea7\u6a19\u306f\u3001\u5e38\u306b\u6b63\u898f\u5316\u3055\u308c\u305f\u30c7\u30d0\u30a4\u30b9\u5ea7\u6a19\u7cfb\u306e\u5ea7\u6a19\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3002**\n\n\u6b63\u898f\u5316\u30c7\u30d0\u30a4\u30b9\u5ea7\u6a19\u7cfb\u306e\u6d6e\u52d5\u5c0f\u6570\u7a7a\u9593\u3068\u3001\u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u7cfb\u306e\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\u7a7a\u9593\u3092\u7d50\u3073\u3064\u3051\u308b\u306e\u304c **Viewport** \u306e\u8a2d\u5b9a\u3002\nViewport \u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u7cfb\u3067\u5ea7\u6a19\u3092\u6307\u5b9a\u3057\u3001\u591a\u304f\u306e\u5834\u5408\u30b5\u30fc\u30d5\u30a7\u30a4\u30b9\u306e\u5927\u304d\u3055\u3068\u540c\u3058\u8a2d\u5b9a\u306b\u3059\u308b\u3002\nOpenGLES \u306f\u6b63\u898f\u5316\u30c7\u30d0\u30a4\u30b9\u5ea7\u6a19\u7cfb\u3092 Viewport \u306e\u5024\u306b\u3057\u305f\u304c\u3063\u3066\u30a6\u30a3\u30f3\u30c9\u30a6\u5ea7\u6a19\u7cfb\u306b\u5909\u63db\u3059\u308b\u3002\nViewport \u306e\u5de6\u4e0b\u304c\u6b63\u898f\u5316\u5ea7\u6a19\u7cfb\u306eXY(-1, -1)\u306b\u5bfe\u5fdc\u3057\u3001\u53f3\u4e0a\u304cXY(1, 1)\u306b\u306a\u308b\u3088\u3046\u306b\u5168\u4f53\u304c\u5f15\u304d\u4f38\u3070\u3055\u308c\u305f\u308a\u7e2e\u3081\u3089\u308c\u305f\u308a\u3059\u308b\u3002\n\n### glViewport\nViewport\u3092\u5909\u66f4\u3059\u308b\u3002\n\n```\nvoid glViewport(GLint x, GLint y, GLsizei width, GLsizei height)\n```\n- x : \u753b\u9762\u5de6\u4e0b\u304b\u3089\u6570\u3048\u305fX\u30d4\u30af\u30bb\u30eb\u5ea7\u6a19\n- y : \u753b\u9762\u5de6\u4e0b\u304b\u3089\u6570\u3048\u305fY\u30d4\u30af\u30bb\u30eb\u5ea7\u6a19\n- width : Viewport \u306e\u5e45\u30d4\u30af\u30bb\u30eb\u6570\n- height : Viewport \u306e\u9ad8\u3055\u30d4\u30af\u30bb\u30eb\u6570\n\n\u30ea\u30b5\u30a4\u30ba\u6642\u306b\u306f\u5fc5\u305a glViewport \u3092\u547c\u3073\u51fa\u3059\u306e\u304c\u304a\u7d04\u675f\uff08\u5f37\u304f\u63a8\u5968\n\n#### \u203bAndroid\u306e\u30b5\u30fc\u30d5\u30a7\u30a4\u30b9\u304c\u30ea\u30b5\u30a4\u30ba\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\nAndroid \u306e Activity \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6319\u52d5\u3067\u306f\u3001\u7e26\u6a2a\u304c\u5207\u308a\u66ff\u308f\u308b\u3068 Activity \u3092\u5ec3\u68c4\u30fb\u518d\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u30a4\u30b3\u30fc\u30eb View \u304c\u5ec3\u68c4\u3055\u308c\u308b\u3001\u30a4\u30b3\u30fc\u30eb OpenGLES\u81ea\u4f53\u304c\u5b8c\u5168\u5ec3\u68c4\u3055\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3002\n\u306a\u306e\u3067\u5b9f\u969b\u306b\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u306f\u3001\n\n- - \u753b\u50cf\u3084\u30b7\u30a7\u30fc\u30c0\u7b49\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u518d\u8aad\u307f\u8fbc\u307f\u3059\u308b\n- \u30a2\u30d7\u30ea\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3057\u3066\u304a\u304f\n\n\u306a\u3069\u306e\u30b3\u30fc\u30c9\u304c\u5fc5\u8981\u306b\u306a\u308b\u304c\u3001\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u7e26\u6a2a\u3092\u5207\u308a\u66ff\u3048\u3066\u3082 Activity \u304c\u5ec3\u68c4\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u6539\u9020\u3055\u308c\u3066\u3044\u308b\u3002Manifest\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u3070\u304a\uff4b\n\n```AndroidManifest.xml\n    <activity\n        android:name=\"com.xxx...\"\n        android:configChanges=\"orientation|screenSize\"\n        android:xxx=....\n        ....\n    </activity>\n```\n\n## \u5f8c\u51e6\u7406\n### glDeleteProgram\n\u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u524a\u9664\u3002glCreateProgram \u3068\u306e\u5bfe\u306b\u306a\u308b\u3002\n\n```\nvoid glDeleteProgram(GLuint program)\n```\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\n\n```\n\t// \u30b7\u30a7\u30fc\u30c0\u306e\u5229\u7528\u3092\u7d42\u4e86\u3059\u308b\n    glUseProgram(0);\n    asset(glGetError() == GL_NO_ERROR);\n    \n    // \u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5ec3\u68c4\u3059\u308b\n    glDeleteProgram(extension->shader_program);\n    asset(glGetError() == GL_NO_ERROR);\n    \n    // \u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\n    asset(glIsProgram(extension->shader_program) == GL_FALSE);\n    \n```\n\n\u3068\u3001UseProgram \u306b 0 \u3092\u5165\u308c\u3066\u4f7f\u7528\u4e2d\u306e\u30b7\u30a7\u30fc\u30c0\u304c\u306a\u3044\u72b6\u614b\u306b\u623b\u3057\u3066\u304b\u3089\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u524a\u9664\u3057\u3066\u3044\u308b\u3002\nglIsProgram() \u306e\u610f\u5473\u3084\u4f7f\u3044\u65b9\u306f\u30b5\u30f3\u30d7\u30eb\u306b\u3042\u308b\u901a\u308a\u3002\n\n### glDeleteShader\n\u30d7\u30ed\u30b0\u30e9\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u540c\u69d8\u306b\u3001\u30b7\u30a7\u30fc\u30c0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u524a\u9664\u3002\n\n```\nvoid glDelteShader(GLuint shader)\n```\n\n", "tags": ["study", "memo", "OpenGL"]}