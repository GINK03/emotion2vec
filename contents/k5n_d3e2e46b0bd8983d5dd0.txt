{"context": "\n\n\u306f\u3058\u3081\u306b\nRxSwift Advent Calendar \u304c\u7a7a\u3044\u3066\u3044\u305f\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u601d\u3044\u3064\u3044\u305f\u3053\u3068\u3092\u8a18\u4e8b\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u308c\u306f\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3067\u3082\u5b09\u3057\u3044\u3063\u3066\u4eba\u306f\u591a\u3044\u306f\u305a\uff01\n\n\u3084\u308a\u305f\u3044\u3053\u3068\nRxSwift \u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u3088\u304f\u51fa\u3066\u304d\u307e\u3059\u3002\npresenter.buttonTitle.bindTo(button.rx.title)\n  .addDisposableTo(disposeBag)\npresenter.labelText.bindTo(label.rx.text)\n  .addDisposableTo(disposeBag)\n\n\u3053\u306e bindTo \u3068\u304b\u3001\u7279\u306b addDisposableTo \u3068\u304b\u3092\u6f14\u7b97\u5b50\u306b\u7f6e\u304d\u63db\u3048\u3066\npresenter.buttonTitle |> button.rx.title +> disposeBag\npresenter.labelText |> label.rx.text +> disposeBag\n\n\u3063\u3066\u66f8\u3051\u305f\u3089\u697d\u3060\u3057\u898b\u3084\u3059\u304f\u306a\u3044\uff1f\u3068\u3044\u3046\u601d\u3044\u3064\u304d\u3067\u3059\u3002\n\u3053\u308c\u306f\u3061\u3087\u3063\u3068\u3084\u308a\u904e\u304e\u3063\u3066\u8a00\u3046\u306a\u3089\u3001\u305b\u3081\u3066 addDisposableTo \u3092\u307e\u3068\u3081\u3066\u66f8\u3051\u308b\u3088\u3046\u306b\u3057\u305f\u3044\uff01\ndisposeBag.addDisposables(\n  presenter.buttonTitle.bindTo(button.rx.title),\n  presenter.labelText.bindTo(label.rx.text)\n)\n\n\n\u5b9f\u88c5\n\u624b\u5143\u306e\u74b0\u5883\u304c\u307e\u3060 Xcode 7.3 \u3067 Swift 3 \u304c\u4f7f\u3048\u307e\u305b\u3093\u3002\u306a\u306e\u3067 Swift 2.2 \u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u3092\u3069\u3053\u304b\u306b\u66f8\u3044\u3066\u304a\u304f\u3060\u3051\u3067\u3059\u3002\ninfix operator |> {associativity left precedence 140}\ninfix operator +> {associativity left precedence 140}\n\nfunc |> <L: ObservableType, R: ObserverType where R.E == L.E>(lhs: L, rhs: R) -> Disposable {\n  return lhs.bindTo(rhs)\n}\n\nfunc |> <L: ObservableType>(lhs: L, rhs: Variable<L.E>) -> Disposable {\n  return lhs.bindTo(rhs)\n}\n\nfunc +> (lhs: Disposable, rhs: DisposeBag) {\n  lhs.addDisposableTo(rhs)\n}\n\n\u6f14\u7b97\u5b50\u306f\u5b58\u5728\u3057\u306a\u3044\u3082\u306e\u3092\u65b0\u305f\u306b\u5b9a\u7fa9\u3057\u3066\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u65e2\u306b\u5b58\u5728\u3059\u308b\u3082\u306e\u306f\u300c\u671f\u5f85\u3059\u308b\u52d5\u4f5c\u300d\u304c\u3042\u308b\u308f\u3051\u306a\u306e\u3067\u3001\u305d\u308c\u3068\u306f\u9055\u3046\u610f\u5473\u3092\u6301\u3064\u6f14\u7b97\u5b50\u306f\u65b0\u305f\u306a\u3082\u306e\u3092\u7528\u610f\u3057\u305f\u65b9\u304c\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u306f\u5168\u304f\u4f55\u3082\u8003\u3048\u305a\u306b\u9069\u5f53\u306b140\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f Swift\u6f14\u7b97\u5b50\u307e\u3068\u3081 \u306b\u3088\u308b\u3068 + \u3084 - \u3068\u540c\u3058\u306b\u306a\u308b\u307f\u305f\u3044\u3067\u3059\u3002\nSwift 3.0 \u3067\u306f\u6f14\u7b97\u5b50\u306e\u5b9a\u7fa9\u306f\u578b\u306b\u6240\u5c5e\u3055\u305b\u308b\u306e\u3067\u3001\u62e1\u5f35\u3059\u308b\u5834\u5408\u306f extension \u306e\u4e2d\u306b\u66f8\u304f\u307f\u305f\u3044\u3067\u3059\u3002\u307e\u305f\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306e where \u3092\u5f8c\u308d\u306b\u6301\u3063\u3066\u3044\u3051\u307e\u3059\u3002\ninfix operator |>: AdditionPrecedence\ninfix operator +>: AdditionPrecedence\n\nextension ObservableType {\n  static func |> <L: ObservableType, R: ObserverType>(lhs: L, rhs: R) -> Disposable\n      where R.E == L.E {\n    return lhs.bindTo(rhs)\n  }\n\n  static func |> <L: ObservableType, R: ObserverType>(lhs: L, rhs: R) -> Disposable\n      where R.E == L.E? {\n    return lhs.bindTo(rhs)\n  }\n\n  static func |> <L: ObservableType>(lhs: L, rhs: Variable<L.E>) -> Disposable {\n    return lhs.bindTo(rhs)\n  }\n}\n\nextension Disposable {\n  static func +> (lhs: Disposable, rhs: DisposeBag) {\n    lhs.addDisposableTo(rhs)\n  }\n}\n\n\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u306f + \u3084 - \u3068\u540c\u3058\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u3082\u4f55\u3082\u8003\u3048\u305a\u306b Swift \u516c\u5f0f\u306e\u89e3\u8aac \u306e\u30b3\u30fc\u30c9\u3092\u771f\u4f3c\u3057\u305f\u3060\u3051\u3067\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308b\u304b\u3059\u3089\u78ba\u8a8d\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u9593\u9055\u3044\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u5229\u70b9\u30fb\u6b20\u70b9\nbindTo \u3084 addDisposableTo \u306f\uff08RxSwift \u77e5\u3089\u306a\u3044\u3068\u53b3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff09\u521d\u898b\u3067\u4f55\u3092\u3084\u3063\u3066\u3044\u308b\u304b\u8a00\u8449\u304b\u3089\u63a8\u6e2c\u3067\u304d\u307e\u3059\u3057\u3001RxSwift\u3092\u77e5\u3063\u3066\u3044\u308b\u4eba\u306b\u306f\u7406\u89e3\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u8a18\u53f7\u306b\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u8a18\u53f7\u306e\u610f\u5473\u3092\u77e5\u3063\u3066\u3044\u308b\u4eba\u306b\u3057\u304b\u5206\u304b\u308a\u307e\u305b\u3093\u3002\n\u307e\u305f Swift \u306b\u306f\u8a18\u8ff0\u6642\u306e\u6587\u5b57\u6570\u306e\u5c11\u306a\u3055\u3088\u308a\u3082\u8a00\u8449\u304c\u660e\u78ba\u306a\u3053\u3068\u3092\u597d\u3080\u6587\u5316\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u306e\u3067\u6700\u521d\u306b\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3068\u66f8\u304d\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u66f8\u304d\u3092\u3059\u308b\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc\u5168\u54e1\u304c\u308f\u304b\u3063\u3066\u3044\u308b\u306e\u306a\u3089\u3001\u3080\u3057\u308d\u533a\u5207\u308a\u304c\u660e\u78ba\u306b\u306a\u308a\u5927\u4e8b\u306a\u90e8\u5206\u3060\u3051\u304c\u76ee\u7acb\u3064\u306e\u3067\u3001\u8aad\u307f\u3084\u3059\u304f\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u611f\u3058\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\naddDisposables\u7248\n\u3055\u3059\u304c\u306b\u6f14\u7b97\u5b50\u306b\u3059\u308b\u306e\u306f\u3061\u3087\u3063\u3068\u3084\u308a\u3059\u304e\u3060\u3068\u601d\u3046\u306a\u3041\u3068\u3044\u3046\u4eba\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u62e1\u5f35\u304c\u4fbf\u5229\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nextension DisposeBag {\n  func addDisposables(disposables: Disposable...) {\n    for disposable in disposables {\n      disposable.addDisposableTo(self)\n    }\n  }\n}\n\n\nDriver\u306edrive\u3082\n\u6f14\u7b97\u5b50\u5316\u3059\u308b\u306a\u3089 Driver \u306e drive \u306b\u3082\u540c\u3058\u3088\u3046\u306b\u6f14\u7b97\u5b50\u3092\u7528\u610f\u3057\u305f\u3044\u3067\u3059\u306d\u3002bindTo \u3068\u306f\u5225\u306e\u6f14\u7b97\u5b50\u306b\u3059\u308b\u3053\u3068\u3067\u3001Presenter \u306b\u5bfe\u3057\u3066 Driver \u3067\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3092\u5f37\u5236\u3067\u304d\u307e\u3059\u3002Swift 2.2, RxSwift 2.6 \u306e\u5834\u5408\u306f\u4ee5\u4e0b\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308a\u307e\u3057\u305f\u3002\ninfix operator *> {associativity left precedence 140}\n\nfunc *> <L: DriverConvertibleType, R: ObserverType where R.E == L.E>(lhs: L, rhs: R) -> Disposable {\n  return lhs.drive(rhs)\n}\n\nfunc *> <L: DriverConvertibleType>(lhs: L, rhs: Variable<L.E>) -> Disposable {\n  return lhs.drive(rhs)\n}\n\nSwift 3.0, RxSwift 3.0 \u306e\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u304c\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u78ba\u8a8d\u3059\u3089\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3002\ninfix operator *>: AdditionPrecedence\n\nextension SharedSequenceConvertibleType where SharingStrategy == DriverSharingStrategy {\n  static func *> <L: SharedSequenceConvertibleType, R: ObserverType>(lhs: L, rhs: R) -> Disposable\n      where L.SharingStrategy == L.DriverSharingStrategy, R.E == L.E {\n    return lhs.drive(rhs)\n  }\n\n  static func *> <L: SharedSequenceConvertibleType, R: ObserverType>(lhs: L, rhs: R) -> Disposable\n      where L.SharingStrategy == L.DriverSharingStrategy, R.E == L.E? {\n    return lhs.drive(rhs)\n  }\n\n  static func *> <L: SharedSequenceConvertibleType>(lhs: L, rhs: Variable<L.E>) -> Disposable {\n      where L.SharingStrategy == L.DriverSharingStrategy {\n    return lhs.drive(rhs)\n  }\n}\n\n\n\u6f14\u7b97\u5b50\u306f\u304a\u597d\u304d\u306a\u3082\u306e\u3092\n\u6f14\u7b97\u5b50\u306f\u30c1\u30fc\u30e0\u306e\u307f\u3093\u306a\u304c\u8aad\u307f\u3084\u3059\u304f\u899a\u3048\u3084\u3059\u3044\u3082\u306e\u3092\u9078\u3079\u3070\u3044\u3044\u3067\u3059\u3002\u4eca\u56de\u601d\u3044\u3064\u304d\u3067\u4f7f\u3063\u305f\u6f14\u7b97\u5b50\u306f\u3001\n\nbindTo \u306f F#, Elixir \u306a\u3069\u306e\u30d0\u30a4\u30d7\u30e9\u30a4\u30f3\u6f14\u7b97\u5b50\u3063\u307d\u3044\u611f\u3058\u3067\naddDisposableTo \u306f add \u304c\u4ed8\u3044\u3066\u308b\u306e\u3067 + \u3092\u4f7f\u3063\u3066\u8868\u73fe\ndrive \u306f * \u304c\u30cf\u30f3\u30c9\u30eb\u3068\u304b\u8239\u306e\u8235\u3092\u601d\u308f\u305b\u308b\u306e\u3067\n\n\u3068\u3044\u3046\u7406\u7531\u3067\u9078\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n# \u306f\u3058\u3081\u306b\n\nRxSwift Advent Calendar \u304c\u7a7a\u3044\u3066\u3044\u305f\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u601d\u3044\u3064\u3044\u305f\u3053\u3068\u3092\u8a18\u4e8b\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u3053\u308c\u306f\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3067\u3082\u5b09\u3057\u3044\u3063\u3066\u4eba\u306f\u591a\u3044\u306f\u305a\uff01\n\n# \u3084\u308a\u305f\u3044\u3053\u3068\n\nRxSwift \u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u3088\u304f\u51fa\u3066\u304d\u307e\u3059\u3002\n\n```swift\npresenter.buttonTitle.bindTo(button.rx.title)\n  .addDisposableTo(disposeBag)\npresenter.labelText.bindTo(label.rx.text)\n  .addDisposableTo(disposeBag)\n```\n\n\u3053\u306e bindTo \u3068\u304b\u3001\u7279\u306b addDisposableTo \u3068\u304b\u3092\u6f14\u7b97\u5b50\u306b\u7f6e\u304d\u63db\u3048\u3066\n\n```swift\npresenter.buttonTitle |> button.rx.title +> disposeBag\npresenter.labelText |> label.rx.text +> disposeBag\n```\n\n\u3063\u3066\u66f8\u3051\u305f\u3089\u697d\u3060\u3057\u898b\u3084\u3059\u304f\u306a\u3044\uff1f\u3068\u3044\u3046\u601d\u3044\u3064\u304d\u3067\u3059\u3002\n\n\u3053\u308c\u306f\u3061\u3087\u3063\u3068\u3084\u308a\u904e\u304e\u3063\u3066\u8a00\u3046\u306a\u3089\u3001\u305b\u3081\u3066 addDisposableTo \u3092\u307e\u3068\u3081\u3066\u66f8\u3051\u308b\u3088\u3046\u306b\u3057\u305f\u3044\uff01\n\n```swift\ndisposeBag.addDisposables(\n  presenter.buttonTitle.bindTo(button.rx.title),\n  presenter.labelText.bindTo(label.rx.text)\n)\n```\n\n# \u5b9f\u88c5\n\n\u624b\u5143\u306e\u74b0\u5883\u304c\u307e\u3060 Xcode 7.3 \u3067 Swift 3 \u304c\u4f7f\u3048\u307e\u305b\u3093\u3002\u306a\u306e\u3067 Swift 2.2 \u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\u4ee5\u4e0b\u3092\u3069\u3053\u304b\u306b\u66f8\u3044\u3066\u304a\u304f\u3060\u3051\u3067\u3059\u3002\n\n```swift\ninfix operator |> {associativity left precedence 140}\ninfix operator +> {associativity left precedence 140}\n\nfunc |> <L: ObservableType, R: ObserverType where R.E == L.E>(lhs: L, rhs: R) -> Disposable {\n  return lhs.bindTo(rhs)\n}\n\nfunc |> <L: ObservableType>(lhs: L, rhs: Variable<L.E>) -> Disposable {\n  return lhs.bindTo(rhs)\n}\n\nfunc +> (lhs: Disposable, rhs: DisposeBag) {\n  lhs.addDisposableTo(rhs)\n}\n```\n\n\u6f14\u7b97\u5b50\u306f\u5b58\u5728\u3057\u306a\u3044\u3082\u306e\u3092\u65b0\u305f\u306b\u5b9a\u7fa9\u3057\u3066\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u65e2\u306b\u5b58\u5728\u3059\u308b\u3082\u306e\u306f\u300c\u671f\u5f85\u3059\u308b\u52d5\u4f5c\u300d\u304c\u3042\u308b\u308f\u3051\u306a\u306e\u3067\u3001\u305d\u308c\u3068\u306f\u9055\u3046\u610f\u5473\u3092\u6301\u3064\u6f14\u7b97\u5b50\u306f\u65b0\u305f\u306a\u3082\u306e\u3092\u7528\u610f\u3057\u305f\u65b9\u304c\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u306f\u5168\u304f\u4f55\u3082\u8003\u3048\u305a\u306b\u9069\u5f53\u306b140\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f [Swift\u6f14\u7b97\u5b50\u307e\u3068\u3081](http://qiita.com/KentaKudo/items/a1dd2eb0bf37302c1c81) \u306b\u3088\u308b\u3068 + \u3084 - \u3068\u540c\u3058\u306b\u306a\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\nSwift 3.0 \u3067\u306f\u6f14\u7b97\u5b50\u306e\u5b9a\u7fa9\u306f\u578b\u306b\u6240\u5c5e\u3055\u305b\u308b\u306e\u3067\u3001\u62e1\u5f35\u3059\u308b\u5834\u5408\u306f extension \u306e\u4e2d\u306b\u66f8\u304f\u307f\u305f\u3044\u3067\u3059\u3002\u307e\u305f\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306e where \u3092\u5f8c\u308d\u306b\u6301\u3063\u3066\u3044\u3051\u307e\u3059\u3002\n\n```swift\ninfix operator |>: AdditionPrecedence\ninfix operator +>: AdditionPrecedence\n\nextension ObservableType {\n  static func |> <L: ObservableType, R: ObserverType>(lhs: L, rhs: R) -> Disposable\n      where R.E == L.E {\n    return lhs.bindTo(rhs)\n  }\n\n  static func |> <L: ObservableType, R: ObserverType>(lhs: L, rhs: R) -> Disposable\n      where R.E == L.E? {\n    return lhs.bindTo(rhs)\n  }\n\n  static func |> <L: ObservableType>(lhs: L, rhs: Variable<L.E>) -> Disposable {\n    return lhs.bindTo(rhs)\n  }\n}\n\nextension Disposable {\n  static func +> (lhs: Disposable, rhs: DisposeBag) {\n    lhs.addDisposableTo(rhs)\n  }\n}\n```\n\n\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u306f + \u3084 - \u3068\u540c\u3058\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u3082\u4f55\u3082\u8003\u3048\u305a\u306b [Swift \u516c\u5f0f\u306e\u89e3\u8aac](https://developer.apple.com/library/content/documentation/Swift/Conceptual/Swift_Programming_Language/AdvancedOperators.html#//apple_ref/doc/uid/TP40014097-CH27-ID28) \u306e\u30b3\u30fc\u30c9\u3092\u771f\u4f3c\u3057\u305f\u3060\u3051\u3067\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308b\u304b\u3059\u3089\u78ba\u8a8d\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u9593\u9055\u3044\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n# \u5229\u70b9\u30fb\u6b20\u70b9\n\nbindTo \u3084 addDisposableTo \u306f\uff08RxSwift \u77e5\u3089\u306a\u3044\u3068\u53b3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\uff09\u521d\u898b\u3067\u4f55\u3092\u3084\u3063\u3066\u3044\u308b\u304b\u8a00\u8449\u304b\u3089\u63a8\u6e2c\u3067\u304d\u307e\u3059\u3057\u3001RxSwift\u3092\u77e5\u3063\u3066\u3044\u308b\u4eba\u306b\u306f\u7406\u89e3\u3067\u304d\u307e\u3059\u3002\u3057\u304b\u3057\u8a18\u53f7\u306b\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u8a18\u53f7\u306e\u610f\u5473\u3092\u77e5\u3063\u3066\u3044\u308b\u4eba\u306b\u3057\u304b\u5206\u304b\u308a\u307e\u305b\u3093\u3002\n\n\u307e\u305f Swift \u306b\u306f\u8a18\u8ff0\u6642\u306e\u6587\u5b57\u6570\u306e\u5c11\u306a\u3055\u3088\u308a\u3082\u8a00\u8449\u304c\u660e\u78ba\u306a\u3053\u3068\u3092\u597d\u3080\u6587\u5316\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u306e\u3067\u6700\u521d\u306b\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3068\u66f8\u304d\u307e\u3057\u305f\u3002\n\n\u3057\u304b\u3057\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u66f8\u304d\u3092\u3059\u308b\u30c1\u30fc\u30e0\u30e1\u30f3\u30d0\u30fc\u5168\u54e1\u304c\u308f\u304b\u3063\u3066\u3044\u308b\u306e\u306a\u3089\u3001\u3080\u3057\u308d\u533a\u5207\u308a\u304c\u660e\u78ba\u306b\u306a\u308a\u5927\u4e8b\u306a\u90e8\u5206\u3060\u3051\u304c\u76ee\u7acb\u3064\u306e\u3067\u3001\u8aad\u307f\u3084\u3059\u304f\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u611f\u3058\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\n# addDisposables\u7248\n\n\u3055\u3059\u304c\u306b\u6f14\u7b97\u5b50\u306b\u3059\u308b\u306e\u306f\u3061\u3087\u3063\u3068\u3084\u308a\u3059\u304e\u3060\u3068\u601d\u3046\u306a\u3041\u3068\u3044\u3046\u4eba\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u62e1\u5f35\u304c\u4fbf\u5229\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```swift\nextension DisposeBag {\n  func addDisposables(disposables: Disposable...) {\n    for disposable in disposables {\n      disposable.addDisposableTo(self)\n    }\n  }\n}\n```\n\n# Driver\u306edrive\u3082\n\n\u6f14\u7b97\u5b50\u5316\u3059\u308b\u306a\u3089 Driver \u306e drive \u306b\u3082\u540c\u3058\u3088\u3046\u306b\u6f14\u7b97\u5b50\u3092\u7528\u610f\u3057\u305f\u3044\u3067\u3059\u306d\u3002bindTo \u3068\u306f\u5225\u306e\u6f14\u7b97\u5b50\u306b\u3059\u308b\u3053\u3068\u3067\u3001Presenter \u306b\u5bfe\u3057\u3066 Driver \u3067\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3092\u5f37\u5236\u3067\u304d\u307e\u3059\u3002Swift 2.2, RxSwift 2.6 \u306e\u5834\u5408\u306f\u4ee5\u4e0b\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308a\u307e\u3057\u305f\u3002\n\n```swift\ninfix operator *> {associativity left precedence 140}\n\nfunc *> <L: DriverConvertibleType, R: ObserverType where R.E == L.E>(lhs: L, rhs: R) -> Disposable {\n  return lhs.drive(rhs)\n}\n\nfunc *> <L: DriverConvertibleType>(lhs: L, rhs: Variable<L.E>) -> Disposable {\n  return lhs.drive(rhs)\n}\n```\n\nSwift 3.0, RxSwift 3.0 \u306e\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u305d\u3046\u3067\u3059\u304c\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u78ba\u8a8d\u3059\u3089\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3002\n\n```swift\ninfix operator *>: AdditionPrecedence\n\nextension SharedSequenceConvertibleType where SharingStrategy == DriverSharingStrategy {\n  static func *> <L: SharedSequenceConvertibleType, R: ObserverType>(lhs: L, rhs: R) -> Disposable\n      where L.SharingStrategy == L.DriverSharingStrategy, R.E == L.E {\n    return lhs.drive(rhs)\n  }\n\n  static func *> <L: SharedSequenceConvertibleType, R: ObserverType>(lhs: L, rhs: R) -> Disposable\n      where L.SharingStrategy == L.DriverSharingStrategy, R.E == L.E? {\n    return lhs.drive(rhs)\n  }\n\n  static func *> <L: SharedSequenceConvertibleType>(lhs: L, rhs: Variable<L.E>) -> Disposable {\n      where L.SharingStrategy == L.DriverSharingStrategy {\n    return lhs.drive(rhs)\n  }\n}\n```\n\n# \u6f14\u7b97\u5b50\u306f\u304a\u597d\u304d\u306a\u3082\u306e\u3092\n\n\u6f14\u7b97\u5b50\u306f\u30c1\u30fc\u30e0\u306e\u307f\u3093\u306a\u304c\u8aad\u307f\u3084\u3059\u304f\u899a\u3048\u3084\u3059\u3044\u3082\u306e\u3092\u9078\u3079\u3070\u3044\u3044\u3067\u3059\u3002\u4eca\u56de\u601d\u3044\u3064\u304d\u3067\u4f7f\u3063\u305f\u6f14\u7b97\u5b50\u306f\u3001\n\n - bindTo \u306f F#, Elixir \u306a\u3069\u306e\u30d0\u30a4\u30d7\u30e9\u30a4\u30f3\u6f14\u7b97\u5b50\u3063\u307d\u3044\u611f\u3058\u3067\n - addDisposableTo \u306f add \u304c\u4ed8\u3044\u3066\u308b\u306e\u3067 + \u3092\u4f7f\u3063\u3066\u8868\u73fe\n - drive \u306f * \u304c\u30cf\u30f3\u30c9\u30eb\u3068\u304b\u8239\u306e\u8235\u3092\u601d\u308f\u305b\u308b\u306e\u3067\n\n\u3068\u3044\u3046\u7406\u7531\u3067\u9078\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n", "tags": ["RxSwift", "Swift", "iOS"]}