{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nJAX-RS\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092RolesAllowed\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u5236\u9650\u3057\u305f\u3044\u306a\u3041\u3068\u3044\u3046\u304a\u8a71\u3067\u3059\u3002\n   \n2014/12/23 \u8ffd\u8a18 \n\u4e0b\u8a18\u624b\u9806\u3060\u3068\u3001SecurityContext\u3092\u4e0a\u66f8\u304d\u3067\u304d\u3066\u3044\u306a\u3044\u306e\u3067\u307e\u3068\u3082\u306b\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\n\u307e\u305f\u8abf\u3079\u3066\u66f8\u304d\u76f4\u3057\u307e\u3059\u3002\n  \n\n\u74b0\u5883\n\nJava 1.8.0 u25\nGlassfish 4.1\n\n\n\u4ed5\u69d8\nhttp://example.com/ \u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u8ab0\u306b\u3067\u3082\u8a31\u3057\u3001http://example.com/secure \u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u5236\u9650\u3057\u307e\u3059\uff08403 Forbidden\u3092\u8fd4\u3057\u307e\u3059\uff09 \u3002\n403 Forbidden\u306e\u3068\u304d\u306b\u306f\u3001\u81ea\u524d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nJAX-RS\u30d5\u30a3\u30eb\u30bf\u30d7\u30ed\u30d0\u30a4\u30c0\u30af\u30e9\u30b9\nContainerRequestFilter\u3092\u7d99\u627f\u3057\u3066\u4f5c\u308a\u307e\u3059\u3002ContainerRequestFilter\u306f\u5168\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u524d\u3001\u30ea\u30bd\u30fc\u30b9\u304c\u4f5c\u6210\u3055\u308c\u308b\u524d\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n@PreMatching\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b\u3068\u3001\u3069\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u5b9f\u884c\u3059\u308b\u306e\u304b\u6c7a\u5b9a\u3059\u308b\u524d\u306b\u30d5\u30a3\u30eb\u30bf\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n@Priority\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u30d5\u30a3\u30eb\u30bf\u3092\u5b9f\u884c\u3059\u308b\u9806\u756a\u3092\u6c7a\u3081\u307e\u3059\u3002\n\u809d\u306ffilter\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u3053\u3053\u3067setSecurityContext\u3092\u547c\u3093\u3067\u3001\u81ea\u524d\u306eSecurityContext\u3092\u3076\u3063\u3053\u3093\u3067\u3044\u307e\u3059\u3002\n\nSecurityContextFilter.java\nimport com.sun.security.auth.UserPrincipal;\nimport java.security.Principal;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.annotation.Priority;\nimport javax.ws.rs.Priorities;\nimport javax.ws.rs.container.ContainerRequestContext;\nimport javax.ws.rs.container.ContainerRequestFilter;\nimport javax.ws.rs.container.PreMatching;\nimport javax.ws.rs.core.SecurityContext;\nimport javax.ws.rs.ext.Provider;\n\n@PreMatching\n@Provider\n@Priority(Priorities.AUTHENTICATION)\npublic class SecurityContextFilter implements ContainerRequestFilter {\n\n    private static final Logger LOG = Logger.getLogger(SecurityContextFilter.class.getName());\n\n    UserPrincipal userPrincipal = new UserPrincipal(\"My name\");\n\n    SecurityContext secuityContext = new SecurityContext() {\n\n        @Override\n        public Principal getUserPrincipal() {\n            LOG.log(Level.INFO, \"*** getUserPrincipal\");\n            return userPrincipal;\n        }\n\n        @Override\n        public boolean isUserInRole(String role) {\n            LOG.log(Level.INFO, \"*** isUserInRole: {0}\", role);\n            return false;\n        }\n\n        @Override\n        public boolean isSecure() {\n            LOG.log(Level.INFO, \"*** isSecure\");\n            return false;\n        }\n\n        @Override\n        public String getAuthenticationScheme() {\n            LOG.log(Level.INFO, \"*** getAuthenticationScheme\");\n            return null;\n        }\n    };\n\n    @Override\n    public void filter(ContainerRequestContext requestContext) {\n        LOG.log(Level.INFO, \"*** Filter invoked\");\n\n        requestContext.setSecurityContext(secuityContext);\n    }\n}\n\n\n\nSecurityContext\u30af\u30e9\u30b9\n\u3053\u306e\u30af\u30e9\u30b9\u3067\u8a8d\u8a3c\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u304c\u30ed\u30fc\u30eb\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3057\u307e\u3059\u3002\n\nisUserInRole\u30e1\u30bd\u30c3\u30c9\n\u672c\u6765\u3067\u3042\u308c\u3070\u3001\u4e0b\u8a18\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u3001\u5f15\u6570role\u304c\u8a8d\u8a3c\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u306b\u30de\u30c3\u30c1\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u8fd4\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u304a\u8a66\u3057\u306a\u306e\u3067false\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u8ab0\u3082\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\u3002\n        @Override\n        public boolean isUserInRole(String role) {\n            LOG.log(Level.INFO, \"*** isUserInRole: {0}\", role);\n            return false;\n        }\n\n\ngetUserPrincipal\n\u30e6\u30fc\u30b6\u30fc\u540d\u3068\u304b\u3092\u4fdd\u6301\u3057\u3066\u3044\u308bUserPrincipal\u3092\u8fd4\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n        @Override\n        public Principal getUserPrincipal() {\n            LOG.log(Level.INFO, \"*** getUserPrincipal\");\n            return userPrincipal;\n        }\n\n\nisSecure\n\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u30bb\u30ad\u30e5\u30a2\u304b\u3069\u3046\u304b\uff08\u4f8b\u3048\u3070https\uff09\u3092\u8fd4\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n        @Override\n        public boolean isSecure() {\n            LOG.log(Level.INFO, \"*** isSecure\");\n            return false;\n        }\n\n\ngetAuthenticationScheme\n\u8a8d\u8a3c\u6e08\u307f\u306e\u5834\u5408\u306f\u3001\u3069\u3046\u3084\u3063\u3066\u8a8d\u8a3c\u3057\u305f\u304b\uff08BASIC\u8a8d\u8a3c\u3001DIGEST\u8a8d\u8a3c\u3001\u30d5\u30a9\u30fc\u30e0\u8a8d\u8a3c\uff09\u3092\u8fd4\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u3068\u308a\u3042\u3048\u305aNull\u3067\u304a\uff4b\uff08\uff1f\uff09\n        @Override\n        public String getAuthenticationScheme() {\n            LOG.log(Level.INFO, \"*** getAuthenticationScheme\");\n            return null;\n        }\n\n\n\u30ea\u30bd\u30fc\u30b9\u30af\u30e9\u30b9\n\n\u8ab0\u3067\u3082\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30ea\u30bd\u30fc\u30b9\n\nGenericResource.java\nimport javax.annotation.security.PermitAll;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"/\")\n@PermitAll\npublic class GenericResource {\n\n    @GET\n    @Produces(MediaType.TEXT_PLAIN)\n    public String getXml() {\n        return \"Hello JAX-RS\";\n    }\n}\n\n\n\n\u79d8\u5bc6\u306e\u30ea\u30bd\u30fc\u30b9\n\u300cuser\u300d\u30ed\u30fc\u30eb\u306e\u3072\u3068\u3057\u304b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\uff08\u3068\u3044\u3046\u3053\u3068\u306b\u3057\u3066\u3044\u307e\u3059\uff09\u3002\n\nSecureResource.java\nimport javax.annotation.security.RolesAllowed;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"secure\")\n@RolesAllowed(\"user\")\npublic class SecureResource {\n\n    @GET\n    @Produces(MediaType.TEXT_PLAIN)\n    public String getXml() {\n        return \"Hello Secret\";\n    }\n}\n\n\nRolesAllowed\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u3001\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u30e6\u30fc\u30b6\u306e\u30ed\u30fc\u30eb\u3092\u6587\u5b57\u5217\u3067\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n403 Forbidden\u4f8b\u5916\u3092\u6355\u307e\u3048\u308b\u30d7\u30ed\u30d0\u30a4\u30c0\u30af\u30e9\u30b9\nForbiddenException\u304c\u8d77\u3053\u3063\u305f\u3089\u3001\u3053\u306e\u30af\u30e9\u30b9\u3067\u6355\u307e\u3048\u3055\u305b\u307e\u3059\u3002\n\u300cmembers only\u300d\u3068\u3044\u3046\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\u3002\n\nForbiddenMapper.java\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.ws.rs.ForbiddenException;\nimport javax.ws.rs.core.MediaType;\nimport javax.ws.rs.core.Response;\nimport javax.ws.rs.ext.ExceptionMapper;\nimport javax.ws.rs.ext.Provider;\n\n@Provider\npublic class ForbiddenMapper implements ExceptionMapper<javax.ws.rs.ForbiddenException> {\n    private static final Logger LOG = Logger.getLogger(ForbiddenMapper.class.getName());\n\n    @Override\n    public Response toResponse(ForbiddenException e) {\n        LOG.log(Level.INFO, \"Forbbidden catched.\");\n\n        return Response.status(Response.Status.FORBIDDEN)\n                .entity(\"Members only\")\n                .type(MediaType.TEXT_PLAIN)\n                .build();\n    }\n}\n\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\n\u4f5c\u6210\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3068\u30d7\u30ed\u30d0\u30a4\u30c0\u3092\u767b\u9332\u3057\u3066\u3044\u307e\u3059\u3002\n\u809d\u306fRolesAllowedDynamicFeature\u3067\u3059\u3002\u3053\u308c\u304c\u306a\u3044\u3068RolesAllowd\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u52d5\u304d\u307e\u305b\u3093\u3002\n\nApplicationConfig.java\nimport java.util.Set;\nimport org.glassfish.jersey.server.ResourceConfig;\nimport org.glassfish.jersey.server.filter.RolesAllowedDynamicFeature;\n\n@javax.ws.rs.ApplicationPath(\"/\")\npublic class ApplicationConfig extends ResourceConfig {\n\n    public ApplicationConfig() {\n        register(RolesAllowedDynamicFeature.class);\n        registerClasses(getMyClasses());\n    }\n\n    private Set<Class<?>> getMyClasses() {\n        Set<Class<?>> resources = new java.util.HashSet<>();\n        addRestResourceClasses(resources);\n\n        resources.add(RolesAllowedDynamicFeature.class);\n\n        return resources;\n    }\n\n    private void addRestResourceClasses(Set<Class<?>> resources) {\n        resources.add(ForbiddenMapper.class);\n        resources.add(GenericResource.class);\n        resources.add(SecureResource.class);\n        resources.add(SecurityContextFilter.class);\n    }\n}\n\n\n\n\npom.xml\npom.xml\u306edependencies\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n        <dependency>\n            <groupId>org.glassfish.jersey.core</groupId>\n            <artifactId>jersey-server</artifactId>\n            <version>2.10.4</version>\n            <scope>provided</scope>\n        </dependency>\n\n# \u6982\u8981\n\nJAX-RS\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092`RolesAllowed`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u5236\u9650\u3057\u305f\u3044\u306a\u3041\u3068\u3044\u3046\u304a\u8a71\u3067\u3059\u3002\n\n:fearful: :fearful: :fearful: \n\n2014/12/23 \u8ffd\u8a18 \n\u4e0b\u8a18\u624b\u9806\u3060\u3068\u3001SecurityContext\u3092\u4e0a\u66f8\u304d\u3067\u304d\u3066\u3044\u306a\u3044\u306e\u3067\u307e\u3068\u3082\u306b\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\n\u307e\u305f\u8abf\u3079\u3066\u66f8\u304d\u76f4\u3057\u307e\u3059\u3002\n\n:fearful: :fearful: :fearful:\n\n# \u74b0\u5883\n\n - Java 1.8.0 u25\n - Glassfish 4.1\n\n\n# \u4ed5\u69d8\n\nhttp://example.com/ \u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u8ab0\u306b\u3067\u3082\u8a31\u3057\u3001http://example.com/secure \u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u5236\u9650\u3057\u307e\u3059\uff08403 Forbidden\u3092\u8fd4\u3057\u307e\u3059\uff09 \u3002\n\n403 Forbidden\u306e\u3068\u304d\u306b\u306f\u3001\u81ea\u524d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n## JAX-RS\u30d5\u30a3\u30eb\u30bf\u30d7\u30ed\u30d0\u30a4\u30c0\u30af\u30e9\u30b9\n\n`ContainerRequestFilter`\u3092\u7d99\u627f\u3057\u3066\u4f5c\u308a\u307e\u3059\u3002`ContainerRequestFilter`\u306f\u5168\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u524d\u3001\u30ea\u30bd\u30fc\u30b9\u304c\u4f5c\u6210\u3055\u308c\u308b\u524d\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n`@PreMatching`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u308b\u3068\u3001\u3069\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u5b9f\u884c\u3059\u308b\u306e\u304b\u6c7a\u5b9a\u3059\u308b\u524d\u306b\u30d5\u30a3\u30eb\u30bf\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\n`@Priority`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306f\u30d5\u30a3\u30eb\u30bf\u3092\u5b9f\u884c\u3059\u308b\u9806\u756a\u3092\u6c7a\u3081\u307e\u3059\u3002\n\n\u809d\u306f`filter`\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\u3053\u3053\u3067`setSecurityContext`\u3092\u547c\u3093\u3067\u3001\u81ea\u524d\u306e`SecurityContext`\u3092\u3076\u3063\u3053\u3093\u3067\u3044\u307e\u3059\u3002\n\n```java:SecurityContextFilter.java\nimport com.sun.security.auth.UserPrincipal;\nimport java.security.Principal;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.annotation.Priority;\nimport javax.ws.rs.Priorities;\nimport javax.ws.rs.container.ContainerRequestContext;\nimport javax.ws.rs.container.ContainerRequestFilter;\nimport javax.ws.rs.container.PreMatching;\nimport javax.ws.rs.core.SecurityContext;\nimport javax.ws.rs.ext.Provider;\n\n@PreMatching\n@Provider\n@Priority(Priorities.AUTHENTICATION)\npublic class SecurityContextFilter implements ContainerRequestFilter {\n\n    private static final Logger LOG = Logger.getLogger(SecurityContextFilter.class.getName());\n\n    UserPrincipal userPrincipal = new UserPrincipal(\"My name\");\n\n    SecurityContext secuityContext = new SecurityContext() {\n\n        @Override\n        public Principal getUserPrincipal() {\n            LOG.log(Level.INFO, \"*** getUserPrincipal\");\n            return userPrincipal;\n        }\n\n        @Override\n        public boolean isUserInRole(String role) {\n            LOG.log(Level.INFO, \"*** isUserInRole: {0}\", role);\n            return false;\n        }\n\n        @Override\n        public boolean isSecure() {\n            LOG.log(Level.INFO, \"*** isSecure\");\n            return false;\n        }\n\n        @Override\n        public String getAuthenticationScheme() {\n            LOG.log(Level.INFO, \"*** getAuthenticationScheme\");\n            return null;\n        }\n    };\n\n    @Override\n    public void filter(ContainerRequestContext requestContext) {\n        LOG.log(Level.INFO, \"*** Filter invoked\");\n\n        requestContext.setSecurityContext(secuityContext);\n    }\n}\n```\n\n## SecurityContext\u30af\u30e9\u30b9\n\n\u3053\u306e\u30af\u30e9\u30b9\u3067\u8a8d\u8a3c\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u304c\u30ed\u30fc\u30eb\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3057\u307e\u3059\u3002\n\n### isUserInRole\u30e1\u30bd\u30c3\u30c9\n\n\u672c\u6765\u3067\u3042\u308c\u3070\u3001\u4e0b\u8a18\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u3001\u5f15\u6570`role`\u304c\u8a8d\u8a3c\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b6\u306b\u30de\u30c3\u30c1\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u8fd4\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u304a\u8a66\u3057\u306a\u306e\u3067`false`\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u8ab0\u3082\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\u3002\n\n```java:\n        @Override\n        public boolean isUserInRole(String role) {\n            LOG.log(Level.INFO, \"*** isUserInRole: {0}\", role);\n            return false;\n        }\n```\n\n### getUserPrincipal\n\n\u30e6\u30fc\u30b6\u30fc\u540d\u3068\u304b\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b`UserPrincipal`\u3092\u8fd4\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\n```java:\n        @Override\n        public Principal getUserPrincipal() {\n            LOG.log(Level.INFO, \"*** getUserPrincipal\");\n            return userPrincipal;\n        }\n```\n\n### isSecure\n\n\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u30bb\u30ad\u30e5\u30a2\u304b\u3069\u3046\u304b\uff08\u4f8b\u3048\u3070https\uff09\u3092\u8fd4\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\n```java:\n        @Override\n        public boolean isSecure() {\n            LOG.log(Level.INFO, \"*** isSecure\");\n            return false;\n        }\n```\n\n### getAuthenticationScheme\n\n\u8a8d\u8a3c\u6e08\u307f\u306e\u5834\u5408\u306f\u3001\u3069\u3046\u3084\u3063\u3066\u8a8d\u8a3c\u3057\u305f\u304b\uff08BASIC\u8a8d\u8a3c\u3001DIGEST\u8a8d\u8a3c\u3001\u30d5\u30a9\u30fc\u30e0\u8a8d\u8a3c\uff09\u3092\u8fd4\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\n\u3068\u308a\u3042\u3048\u305a`Null`\u3067\u304a\uff4b\uff08\uff1f\uff09\n\n```java:\n        @Override\n        public String getAuthenticationScheme() {\n            LOG.log(Level.INFO, \"*** getAuthenticationScheme\");\n            return null;\n        }\n```\n\n## \u30ea\u30bd\u30fc\u30b9\u30af\u30e9\u30b9\n\n### \u8ab0\u3067\u3082\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30ea\u30bd\u30fc\u30b9\n\n```java:GenericResource.java\nimport javax.annotation.security.PermitAll;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"/\")\n@PermitAll\npublic class GenericResource {\n\n    @GET\n    @Produces(MediaType.TEXT_PLAIN)\n    public String getXml() {\n        return \"Hello JAX-RS\";\n    }\n}\n```\n\n### \u79d8\u5bc6\u306e\u30ea\u30bd\u30fc\u30b9\n\n\u300cuser\u300d\u30ed\u30fc\u30eb\u306e\u3072\u3068\u3057\u304b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u305b\u3093\uff08\u3068\u3044\u3046\u3053\u3068\u306b\u3057\u3066\u3044\u307e\u3059\uff09\u3002\n\n```java:SecureResource.java\nimport javax.annotation.security.RolesAllowed;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.core.MediaType;\n\n@Path(\"secure\")\n@RolesAllowed(\"user\")\npublic class SecureResource {\n\n    @GET\n    @Produces(MediaType.TEXT_PLAIN)\n    public String getXml() {\n        return \"Hello Secret\";\n    }\n}\n```\n\n`RolesAllowed`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u3001\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3059\u308b\u30e6\u30fc\u30b6\u306e\u30ed\u30fc\u30eb\u3092\u6587\u5b57\u5217\u3067\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n## 403 Forbidden\u4f8b\u5916\u3092\u6355\u307e\u3048\u308b\u30d7\u30ed\u30d0\u30a4\u30c0\u30af\u30e9\u30b9\n\n`ForbiddenException`\u304c\u8d77\u3053\u3063\u305f\u3089\u3001\u3053\u306e\u30af\u30e9\u30b9\u3067\u6355\u307e\u3048\u3055\u305b\u307e\u3059\u3002\n\n\u300cmembers only\u300d\u3068\u3044\u3046\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```java:ForbiddenMapper.java\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.ws.rs.ForbiddenException;\nimport javax.ws.rs.core.MediaType;\nimport javax.ws.rs.core.Response;\nimport javax.ws.rs.ext.ExceptionMapper;\nimport javax.ws.rs.ext.Provider;\n\n@Provider\npublic class ForbiddenMapper implements ExceptionMapper<javax.ws.rs.ForbiddenException> {\n    private static final Logger LOG = Logger.getLogger(ForbiddenMapper.class.getName());\n    \n    @Override\n    public Response toResponse(ForbiddenException e) {\n        LOG.log(Level.INFO, \"Forbbidden catched.\");\n        \n        return Response.status(Response.Status.FORBIDDEN)\n                .entity(\"Members only\")\n                .type(MediaType.TEXT_PLAIN)\n                .build();\n    }\n}\n```\n\n\n## \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\n\n\u4f5c\u6210\u3057\u305f\u30ea\u30bd\u30fc\u30b9\u3068\u30d7\u30ed\u30d0\u30a4\u30c0\u3092\u767b\u9332\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u809d\u306f`RolesAllowedDynamicFeature`\u3067\u3059\u3002\u3053\u308c\u304c\u306a\u3044\u3068`RolesAllowd`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u52d5\u304d\u307e\u305b\u3093\u3002\n\n```java:ApplicationConfig.java\nimport java.util.Set;\nimport org.glassfish.jersey.server.ResourceConfig;\nimport org.glassfish.jersey.server.filter.RolesAllowedDynamicFeature;\n\n@javax.ws.rs.ApplicationPath(\"/\")\npublic class ApplicationConfig extends ResourceConfig {\n\n    public ApplicationConfig() {\n        register(RolesAllowedDynamicFeature.class);\n        registerClasses(getMyClasses());\n    }\n    \n    private Set<Class<?>> getMyClasses() {\n        Set<Class<?>> resources = new java.util.HashSet<>();\n        addRestResourceClasses(resources);\n        \n        resources.add(RolesAllowedDynamicFeature.class);\n        \n        return resources;\n    }\n\n    private void addRestResourceClasses(Set<Class<?>> resources) {\n        resources.add(ForbiddenMapper.class);\n        resources.add(GenericResource.class);\n        resources.add(SecureResource.class);\n        resources.add(SecurityContextFilter.class);\n    }\n}\n\n```\n\n## pom.xml\n\n`pom.xml`\u306e`dependencies`\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```xml:\n        <dependency>\n            <groupId>org.glassfish.jersey.core</groupId>\n            <artifactId>jersey-server</artifactId>\n            <version>2.10.4</version>\n            <scope>provided</scope>\n        </dependency>\n```\n", "tags": ["jersey", "glassfish", "JavaEE", "JAX-RS"]}