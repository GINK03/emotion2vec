{"context": " More than 1 year has passed since last update.\u305d\u306e1\n\u305d\u306e2\n\u524d\u56deRedis\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u304c\u3001Session\u306e\u90e8\u5206\u3060\u3051\u4f7f\u3063\u3066\u307f\u305f\u304c\u3001\u672c\u4f53\u306e\u65b9\u306eMySQL\u306b\u4f9d\u5b58\u3059\u308b\u90e8\u5206\u3082Redis\u5316\u3059\u3079\u304d\u306a\u306e\u3067\u305d\u3061\u3089\u3082\u5909\u66f4\u3059\u308b\u3002\n\nRedis\u5229\u7528\u306b\u304a\u3051\u308b\u4ed5\u69d8\n\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u306e\u7ba1\u7406\u3092Redis\u3067\u7ba1\u7406\u3059\u308b\n\nkey\u3092 user_[userid] \u3068\u3057\u3066value\u306f\u5931\u6557\u6bce\u306b\u6570\u5024\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n\u30ed\u30b0\u30a4\u30f3\u6210\u529f\u6642\u306bkey\u3092\u524a\u9664\u3059\u308b\n\n\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u6642\u306eIP\u306e\u7ba1\u7406\u3092Redis\u3067\u7ba1\u7406\u3059\u308b\n\nkey\u3092 ip_[ip] \u3068\u3057\u3066value\u306f\u5931\u6557\u6bce\u306b\u6570\u5024\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n\u30ed\u30b0\u30a4\u30f3\u6210\u529f\u6642\u306bkey\u3092\u524a\u9664\u3059\u308b\n\n\u3082\u3068\u3082\u3068MySQL\u7ba1\u7406\u306elogin_log\u306f\u6210\u529f\u6642\u306e\u307f\u306e\u30ed\u30b0\u3092\u8a18\u9332\u3059\u308b\n(\u30ed\u30b0\u30a4\u30f3\u5f8c\u306e\u30da\u30fc\u30b8\u306e\u524d\u56de\u30ed\u30b0\u30a4\u30f3\u6210\u529f\u306e\u8868\u793a\u3092\u53d6\u308a\u51fa\u3059\u306e\u306b\u306fMySQL\u304c\u90fd\u5408\u304c\u3044\u3044\u306e\u3067)\n\n\u8ffd\u52a0\u3067\u8981\u5b9f\u65bd\u306e\u4f5c\u696d\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30b9\u30bf\u30fc\u30c8\u6642\u306b init.sh \u3092\u8d77\u52d5\u3057MySQL\u306e\u521d\u671f\u5316\u304a\u3088\u3073\u521d\u671f\u30c7\u30fc\u30bf\u306e\u6295\u5165\u304c\u884c\u308f\u308c\u308b\u304c\u3001\u305d\u3053\u3067\u30ed\u30fc\u30c9\u3055\u308c\u308blogin_log (dummy_log.sql) \u3082Redis\u306b\u4e0a\u8a18\u306e\u4ed5\u69d8\u901a\u308a\u72b6\u614b\u3067\u3042\u3089\u304b\u3058\u3081\u4fdd\u5b58\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b. \nlogin_log\u306b\u6295\u5165\u3055\u308c\u305f\u521d\u671f\u72b6\u614b\u306e\u30c7\u30fc\u30bf\u3092TSV\u306b\u5410\u304d\u51fa\u3057\u3066\u3053\u308c\u3092\u4ee5\u4e0b\u306eperl\u306b\u8aad\u307f\u8fbc\u307e\u305b\u3066redis\u306e\u521d\u671f\u72b6\u614b\u3092\u4f5c\u308b\n# sql/set_initlog_to_redis.pl\nuse strict;\nuse warnings;\nuse Data::Dumper;\nuse Redis;\n\nmy $redis = Redis->new();\n\nwhile(<STDIN>) {\n    chomp;\n    my @item = split \"\\t\";\n\n    if ($item[5] eq 1) {\n        $redis->del(\"user_\". $item[3]);\n        $redis->del(\"ip_\". $item[4]);\n    } else {\n        $redis->incr(\"user_\". $item[3]);\n        $redis->incr(\"ip_\". $item[4]);\n    }\n}\n\ninit.sh\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3066\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30b9\u30bf\u30fc\u30c8\u6642\u306b\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n# init.sh\n...\nredis-cli KEYS \"*\" | xargs redis-cli DEL\ncat sql/dump_login_log.tsv | perl sql/set_initlog_to_redis.pl\n\n\nweb.pm\u306e\u5909\u66f4\n\nredis\u3092\u521d\u671f\u5316\nsub redis {\n  my ($self) = @_;\n\n  $self->{_redis} ||= do {\n    Redis->new();\n  };\n};\n\n\nMySQL\u306elogin_log\u3092\u8a18\u9332\u3057\u3066\u305f\u3068\u3053\u308d\u3092Redis\u5316\nlogin_log\u306f\u6210\u529f\u6642\u306e\u307f\u66f8\u304d\u8fbc\u3080\u3088\u3046\u306b\u4fee\u6b63\nsub login_log {\n  my ($self, $succeeded, $login, $ip, $user_id) = @_;\n\n  if($succeeded) {\n    $self->redis->del(\"user_\". $login);\n    $self->redis->del(\"ip_\". $ip);\n  } else {\n    $self->redis->incr(\"user_\". $login);\n    $self->redis->incr(\"ip_\". $ip);\n  }\n\n  if ($succeeded) {\n    $self->db->query(\n      'INSERT INTO login_log (`created_at`, `user_id`, `login`, `ip`, `succeeded`) VALUES (NOW(),?,?,?,?)',\n      $user_id, $login, $ip, 1)\n    );\n  }\n};\n\n\nban\u306e\u30c1\u30a7\u30c3\u30af\u306e\u6240\u3092Redis\u3067\u3084\u308b\n\u9577\u3063\u305f\u3089\u3057\u3044SQL\u3067\u30c1\u30a7\u30c3\u30af\u3057\u3066\u305f\u306e\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u308b\nsub user_locked {\n  my ($self, $user) = @_;\n\n  my $fauluers = $self->redis->get(\"user_\".$user->{login});\n  $fauluers ? $self->config->{user_lock_threshold} <= $fauluers : 0\n};\n\nsub ip_banned {\n  my ($self, $ip) = @_;\n\n  my $fauluers = $self->redis->get(\"ip_\".$ip);\n  $fauluers ? $self->config->{ip_ban_threshold} <= $fauluers : 0\n};\n\n\nban\u3055\u308c\u305fIP\u30ea\u30b9\u30c8 User\u30ea\u30b9\u30c8\u3092\u53d6\u308b\u90e8\u5206\u3082Redis\u3067\n\u3053\u3061\u3089\u3082\u8907\u96d1\u306aSQL\u304b\u3089\u30b7\u30f3\u30d7\u30eb\u306b redis\u306ekeys\u3092\u4f7f\u3046\nsub banned_ips {\n  my ($self) = @_;\n  my @ips;\n  my $threshold = $self->config->{ip_ban_threshold};\n\n  for my $key ($self->redis->keys(\"ip_*\")) {\n    if($self->redis->get($key) >= $threshold) {\n       push @ips, substr($key, 3)\n    }\n  }\n\n  \\@ips;\n};\n\nsub locked_users {\n  my ($self) = @_;\n  my @user_ids;\n\n  my $threshold = $self->config->{user_lock_threshold};\n\n  for my $key ($self->redis->keys(\"user_*\")) {\n    if($self->redis->get($key) >= $threshold) {\n       push @user_ids, substr($key, 5)\n    }\n  }\n\n  \\@user_ids;\n}\n\n\nbenchmark\u8d70\u3089\u305b\u308b\n$ ./benchmarker bench --workload 10\n15:27:05 type:info      message:launch benchmarker\n15:27:05 type:warning   message:Result not sent to server because API key is not set\n15:27:05 type:info      message:init environment\n15:27:22 type:info      message:run benchmark workload: 10\n15:28:22 type:info      message:finish benchmark workload: 10\n15:28:27 type:info      message:check banned ips and locked users report\n15:28:29 type:report    count:banned ips        value:638\n15:28:29 type:report    count:locked users      value:4083\n15:28:30 type:info      message:Result not sent to server because API key is not set\n15:28:30 type:score     success:155490  fail:0  score:33591\n\nReverseProxy\u5074 \u3067\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u5410\u3044\u3066\u3044\u305f\u90e8\u5206\u3092\u6d88\u3057\u3066\u3082\u3046\u4e00\u5ea6\n$ ./benchmarker bench --workload 10\n15:31:47 type:info      message:launch benchmarker\n15:31:47 type:warning   message:Result not sent to server because API key is not set\n15:31:47 type:info      message:init environment\n15:32:04 type:info      message:run benchmark workload: 10\n15:33:04 type:info      message:finish benchmark workload: 10\n15:33:09 type:info      message:check banned ips and locked users report\n15:33:11 type:report    count:banned ips        value:645\n15:33:11 type:report    count:locked users      value:4124\n15:33:12 type:info      message:Result not sent to server because API key is not set\n15:33:12 type:score     success:165440  fail:0  score:35739\n\n35739\u70b9. \u30d2\u30ab\u30ea\u30a8\u307e\u3067\u3042\u30682000\u70b9\u8db3\u308a\u306a\u3044\u3002\u3002\u3002\n\u3042\u3068\u4f55\u304c\u3067\u304d\u308b\u304b\u3082\u3046\u3061\u3087\u3063\u3068\u8003\u3048\u3066\u898b\u308b\u3002\n\u7d9a\u304d\u306f\u3053\u3061\u3089\n\n[\u305d\u306e1](http://qiita.com/hiyuzawa/items/dfeb4362916732f4d067)\n[\u305d\u306e2](http://qiita.com/hiyuzawa/items/f67711458887a1b7137c)\n\n\u524d\u56deRedis\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u304c\u3001Session\u306e\u90e8\u5206\u3060\u3051\u4f7f\u3063\u3066\u307f\u305f\u304c\u3001\u672c\u4f53\u306e\u65b9\u306eMySQL\u306b\u4f9d\u5b58\u3059\u308b\u90e8\u5206\u3082Redis\u5316\u3059\u3079\u304d\u306a\u306e\u3067\u305d\u3061\u3089\u3082\u5909\u66f4\u3059\u308b\u3002\n\n## Redis\u5229\u7528\u306b\u304a\u3051\u308b\u4ed5\u69d8\n\n\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u306e\u7ba1\u7406\u3092Redis\u3067\u7ba1\u7406\u3059\u308b\n\n* key\u3092 user_[userid] \u3068\u3057\u3066value\u306f\u5931\u6557\u6bce\u306b\u6570\u5024\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n* \u30ed\u30b0\u30a4\u30f3\u6210\u529f\u6642\u306bkey\u3092\u524a\u9664\u3059\u308b\n\n\u30ed\u30b0\u30a4\u30f3\u5931\u6557\u6642\u306eIP\u306e\u7ba1\u7406\u3092Redis\u3067\u7ba1\u7406\u3059\u308b\n\n* key\u3092 ip_[ip] \u3068\u3057\u3066value\u306f\u5931\u6557\u6bce\u306b\u6570\u5024\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n* \u30ed\u30b0\u30a4\u30f3\u6210\u529f\u6642\u306bkey\u3092\u524a\u9664\u3059\u308b\n\n\u3082\u3068\u3082\u3068MySQL\u7ba1\u7406\u306elogin_log\u306f\u6210\u529f\u6642\u306e\u307f\u306e\u30ed\u30b0\u3092\u8a18\u9332\u3059\u308b\n(\u30ed\u30b0\u30a4\u30f3\u5f8c\u306e\u30da\u30fc\u30b8\u306e\u524d\u56de\u30ed\u30b0\u30a4\u30f3\u6210\u529f\u306e\u8868\u793a\u3092\u53d6\u308a\u51fa\u3059\u306e\u306b\u306fMySQL\u304c\u90fd\u5408\u304c\u3044\u3044\u306e\u3067)\n\n## \u8ffd\u52a0\u3067\u8981\u5b9f\u65bd\u306e\u4f5c\u696d\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30b9\u30bf\u30fc\u30c8\u6642\u306b init.sh \u3092\u8d77\u52d5\u3057MySQL\u306e\u521d\u671f\u5316\u304a\u3088\u3073\u521d\u671f\u30c7\u30fc\u30bf\u306e\u6295\u5165\u304c\u884c\u308f\u308c\u308b\u304c\u3001\u305d\u3053\u3067\u30ed\u30fc\u30c9\u3055\u308c\u308blogin_log (dummy_log.sql) \u3082Redis\u306b\u4e0a\u8a18\u306e\u4ed5\u69d8\u901a\u308a\u72b6\u614b\u3067\u3042\u3089\u304b\u3058\u3081\u4fdd\u5b58\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b. \nlogin_log\u306b\u6295\u5165\u3055\u308c\u305f\u521d\u671f\u72b6\u614b\u306e\u30c7\u30fc\u30bf\u3092TSV\u306b\u5410\u304d\u51fa\u3057\u3066\u3053\u308c\u3092\u4ee5\u4e0b\u306eperl\u306b\u8aad\u307f\u8fbc\u307e\u305b\u3066redis\u306e\u521d\u671f\u72b6\u614b\u3092\u4f5c\u308b\n\n```perl\n# sql/set_initlog_to_redis.pl\nuse strict;\nuse warnings;\nuse Data::Dumper;\nuse Redis;\n\nmy $redis = Redis->new();\n\nwhile(<STDIN>) {\n    chomp;\n    my @item = split \"\\t\";\n\n    if ($item[5] eq 1) {\n        $redis->del(\"user_\". $item[3]);\n        $redis->del(\"ip_\". $item[4]);\n    } else {\n        $redis->incr(\"user_\". $item[3]);\n        $redis->incr(\"ip_\". $item[4]);\n    }\n}\n```\n\ninit.sh\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3066\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30b9\u30bf\u30fc\u30c8\u6642\u306b\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\n```bash\n# init.sh\n...\nredis-cli KEYS \"*\" | xargs redis-cli DEL\ncat sql/dump_login_log.tsv | perl sql/set_initlog_to_redis.pl\n```\n\n## web.pm\u306e\u5909\u66f4\n\n#### redis\u3092\u521d\u671f\u5316\n\n```perl\nsub redis {\n  my ($self) = @_;\n\n  $self->{_redis} ||= do {\n    Redis->new();\n  };\n};\n```\n\n#### MySQL\u306elogin_log\u3092\u8a18\u9332\u3057\u3066\u305f\u3068\u3053\u308d\u3092Redis\u5316\n\nlogin_log\u306f\u6210\u529f\u6642\u306e\u307f\u66f8\u304d\u8fbc\u3080\u3088\u3046\u306b\u4fee\u6b63\n\n```perl\nsub login_log {\n  my ($self, $succeeded, $login, $ip, $user_id) = @_;\n\n  if($succeeded) {\n    $self->redis->del(\"user_\". $login);\n    $self->redis->del(\"ip_\". $ip);\n  } else {\n    $self->redis->incr(\"user_\". $login);\n    $self->redis->incr(\"ip_\". $ip);\n  }\n\n  if ($succeeded) {\n    $self->db->query(\n      'INSERT INTO login_log (`created_at`, `user_id`, `login`, `ip`, `succeeded`) VALUES (NOW(),?,?,?,?)',\n      $user_id, $login, $ip, 1)\n    );\n  }\n};\n```\n\n### ban\u306e\u30c1\u30a7\u30c3\u30af\u306e\u6240\u3092Redis\u3067\u3084\u308b\n\n\u9577\u3063\u305f\u3089\u3057\u3044SQL\u3067\u30c1\u30a7\u30c3\u30af\u3057\u3066\u305f\u306e\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u308b\n\n```perl\nsub user_locked {\n  my ($self, $user) = @_;\n\n  my $fauluers = $self->redis->get(\"user_\".$user->{login});\n  $fauluers ? $self->config->{user_lock_threshold} <= $fauluers : 0\n};\n\nsub ip_banned {\n  my ($self, $ip) = @_;\n\n  my $fauluers = $self->redis->get(\"ip_\".$ip);\n  $fauluers ? $self->config->{ip_ban_threshold} <= $fauluers : 0\n};\n```\n\n### ban\u3055\u308c\u305fIP\u30ea\u30b9\u30c8 User\u30ea\u30b9\u30c8\u3092\u53d6\u308b\u90e8\u5206\u3082Redis\u3067\n\n\u3053\u3061\u3089\u3082\u8907\u96d1\u306aSQL\u304b\u3089\u30b7\u30f3\u30d7\u30eb\u306b redis\u306ekeys\u3092\u4f7f\u3046\n\n```perl\nsub banned_ips {\n  my ($self) = @_;\n  my @ips;\n  my $threshold = $self->config->{ip_ban_threshold};\n\n  for my $key ($self->redis->keys(\"ip_*\")) {\n    if($self->redis->get($key) >= $threshold) {\n       push @ips, substr($key, 3)\n    }\n  }\n\n  \\@ips;\n};\n\nsub locked_users {\n  my ($self) = @_;\n  my @user_ids;\n\n  my $threshold = $self->config->{user_lock_threshold};\n\n  for my $key ($self->redis->keys(\"user_*\")) {\n    if($self->redis->get($key) >= $threshold) {\n       push @user_ids, substr($key, 5)\n    }\n  }\n\n  \\@user_ids;\n}\n```\n\n## benchmark\u8d70\u3089\u305b\u308b\n\n```\n$ ./benchmarker bench --workload 10\n15:27:05 type:info      message:launch benchmarker\n15:27:05 type:warning   message:Result not sent to server because API key is not set\n15:27:05 type:info      message:init environment\n15:27:22 type:info      message:run benchmark workload: 10\n15:28:22 type:info      message:finish benchmark workload: 10\n15:28:27 type:info      message:check banned ips and locked users report\n15:28:29 type:report    count:banned ips        value:638\n15:28:29 type:report    count:locked users      value:4083\n15:28:30 type:info      message:Result not sent to server because API key is not set\n15:28:30 type:score     success:155490  fail:0  score:33591\n```\n\nReverseProxy\u5074 \u3067\u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u3092\u5410\u3044\u3066\u3044\u305f\u90e8\u5206\u3092\u6d88\u3057\u3066\u3082\u3046\u4e00\u5ea6\n\n```\n$ ./benchmarker bench --workload 10\n15:31:47 type:info      message:launch benchmarker\n15:31:47 type:warning   message:Result not sent to server because API key is not set\n15:31:47 type:info      message:init environment\n15:32:04 type:info      message:run benchmark workload: 10\n15:33:04 type:info      message:finish benchmark workload: 10\n15:33:09 type:info      message:check banned ips and locked users report\n15:33:11 type:report    count:banned ips        value:645\n15:33:11 type:report    count:locked users      value:4124\n15:33:12 type:info      message:Result not sent to server because API key is not set\n15:33:12 type:score     success:165440  fail:0  score:35739\n```\n\n35739\u70b9. \u30d2\u30ab\u30ea\u30a8\u307e\u3067\u3042\u30682000\u70b9\u8db3\u308a\u306a\u3044\u3002\u3002\u3002\n\n\u3042\u3068\u4f55\u304c\u3067\u304d\u308b\u304b\u3082\u3046\u3061\u3087\u3063\u3068\u8003\u3048\u3066\u898b\u308b\u3002\n\n[\u7d9a\u304d\u306f\u3053\u3061\u3089](http://qiita.com/hiyuzawa/items/986dcda2aa0c5ca0cf08)\n\n", "tags": ["isucon"]}