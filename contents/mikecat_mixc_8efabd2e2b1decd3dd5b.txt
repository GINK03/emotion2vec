{"tags": ["C++", "2D", "DX\u30e9\u30a4\u30d6\u30e9\u30ea", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"], "context": " More than 1 year has passed since last update.\u30d6\u30ec\u30bc\u30f3\u30cf\u30e0\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u7dda\u5206\u3092\u30c9\u30c3\u30c8\u306e\u96c6\u307e\u308a\u3067\u8fd1\u4f3c\u3059\u308b\u305f\u3081\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3042\u308a\u3001\u8a08\u7b97\u6a5f\u306b\u3068\u3063\u3066\u6bd4\u8f03\u7684\u91cd\u3044\u51e6\u7406\u3067\u3042\u308b\u4e57\u7b97\u3084\u9664\u7b97\u3092\u7528\u3044\u305a\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\n\n\u5b9f\u88c5\u4f8b\n\u4ee5\u4e0b\u306bC++\u306e\u30b3\u30fc\u30c9\u3092\u793a\u3059\u3002\u3053\u306e\u30b3\u30fc\u30c9\u306b\u306f\uff24\uff38\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u7528\u3044\u3089\u308c\u3066\u304a\u308a\u3001GCC 4.8.1\u304a\u3088\u3073\uff24\uff38\u30e9\u30a4\u30d6\u30e9\u30ea Ver3.16\u3067\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3063\u305f\u3002\n\u7dda\u5206\u306e\u4e21\u7aef\u306e\u4e38\u3092\u30de\u30a6\u30b9\u3067\u30c9\u30e9\u30c3\u30b0\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u59cb\u70b9\u3084\u7d42\u70b9\u306e\u4f4d\u7f6e\u3092\u79fb\u52d5\u3067\u304d\u308b\u3002\n\u307e\u305f\u3001\u30c6\u30f3\u30ad\u30fc\u3067\u306f\u306a\u3044\u65b9\u306e1, 2, 3\u30ad\u30fc\u3092\u62bc\u3059\u3053\u3068\u3067\u3001\u63cf\u753b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nsenbun_byouga.cpp\n#include <DxLib.h>\n\n// \u6a19\u6e96\u95a2\u6570\u3067\u7dda\u5206\u3092\u63cf\u753b\u3059\u308b\nvoid drawline(int sx, int sy, int dx, int dy) {\n    DrawLine(sx, sy, dx, dy, GetColor(255, 128, 128));\n}\n\n// \u30d7\u30ec\u30bc\u30f3\u30cf\u30e0\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3063\u307d\u3044\u611f\u3058\u3067\u7dda\u5206\u3092\u63cf\u753b\u3059\u308b\nvoid bresenham(int sx, int sy, int dx, int dy) {\n    int color = GetColor(128, 255, 128);\n    int x = sx, y = sy; // \u73fe\u5728\u4f4d\u7f6e\n    int wx = (sx >= dx ? sx - dx : dx - sx); // x\u5ea7\u6a19\u306e\u5dee\u306e\u7d76\u5bfe\u5024\n    int wy = (sy >= dy ? sy - dy : dy - sy); // y\u5ea7\u6a19\u306e\u5dee\u306e\u7d76\u5bfe\u5024\n    int xmode = (wx >= wy); // x\u65b9\u5411\u306e\u5909\u4f4d\u304cy\u65b9\u5411\u306e\u5909\u4f4d\u4ee5\u4e0a\u304b\n    int gosa = 0;\n    while (x != dx || y != dy) {\n        DrawPixel(x, y, color); // \u3068\u308a\u3042\u3048\u305a \u73fe\u5728\u4f4d\u7f6e\u306b \u70b9\u3092\u6253\u3064 (\u5ddd\u67f3)\n        if (xmode) { // x\u65b9\u5411\u306e\u5909\u4f4d\u306e\u65b9\u304c\u5c0f\u3055\u304f\u306a\u3044\u306e\u3067\u3001\u4e3b\u306bx\u65b9\u5411\u306b\u79fb\u52d5\u3059\u308b\n            if (sx < dx) x++; else x--; // x\u65b9\u5411\u306b\u9032\u3080\n            // y\u65b9\u5411\u306b\u9032\u3080\u3079\u304d\u5909\u4f4d\u3092\u9032\u3093\u3067\u3044\u306a\u3044\u306e\u3067\u3001\u8aa4\u5dee\u3068\u3057\u3066\u52a0\u3048\u308b\n            // \u8aa4\u5dee\u306f\u6574\u6570\u306b\u3059\u308b\u305f\u3081\u306b(wx * 2)\u500d\u3067\u6271\u3046\n            gosa += ((dy - sy) << 1);\n            if (gosa > wx) { // y\u306e\u6b63\u306e\u65b9\u5411\u306b\u9032\u3080\u3079\u304d\u306a\u306e\u306b\u9032\u3093\u3067\u3044\u306a\u3044\u8aa4\u5dee\u304c0.5\u3092\u8d85\u3048\u305f\n                y++; // y\u306e\u6b63\u306e\u65b9\u5411\u306b\u9032\u3080\n                gosa -= (wx << 1); // \u9032\u3093\u3060\u5206\u3092\u8aa4\u5dee\u306b\u53cd\u6620\u3055\u305b\u308b\n            } else if (gosa < -wx) { // y\u306e\u8ca0\u306e\u65b9\u5411(ry\n                y--; // y\u306e\u8ca0(ry\n                gosa += (wx << 1); // \u9032\u3093\u3060(ry\n            }\n        } else { // y\u65b9\u5411\u306e\u5909\u4f4d\u306e\u65b9\u304c\u5927\u304d\u3044\u306e\u3067\u3001\u4e3b\u306by\u65b9\u5411\u306b\u79fb\u52d5\u3059\u308b\n            // x\u306e\u6642\u3068\u540c\u69d8\n            if (sy < dy) y++; else y--;\n            gosa += ((dx - sx) << 1);\n            if (gosa > wy) {\n                x++;\n                gosa -= (wy << 1);\n            } else if (gosa < -wy) {\n                x--;\n                gosa += (wy << 1);\n            }\n        }\n    }\n}\n\n// 8\u65b9\u5411\u306e\u3046\u3061\u4e00\u756a\u7d42\u70b9\u306b\u8fd1\u3065\u304f\u65b9\u5411\u306b\u79fb\u52d5\u3059\u308b(\u5931\u6557)\nvoid donyoku(int sx, int sy, int dx, int dy) {\n    int color = GetColor(128, 128, 255);\n    int x = sx, y = sy;\n    while (x != dx || y != dy) {\n        DrawPixel(x, y, color);\n        int nx = sx, ny = sy, score = -1;\n        for (int deltay = -1; deltay <= 1; deltay++) {\n            for (int deltax = -1; deltax <= 1; deltax++) {\n                int cx = x + deltax, cy = y + deltay;\n                int cscore = (dx - cx) * (dx - cx) + (dy - cy) * (dy - cy);\n                if (score < 0 || cscore < score) {\n                    score = cscore;\n                    nx = cx;\n                    ny = cy;\n                }\n            }\n        }\n        x = nx;\n        y = ny;\n    }\n}\n\nint WINAPI WinMain(HINSTANCE, HINSTANCE, LPSTR, int) {\n    if (ChangeWindowMode(TRUE) != DX_CHANGESCREEN_OK || DxLib_Init() != 0) return -1;\n    SetDrawScreen(DX_SCREEN_BACK);\n\n    void (*func[3])(int, int, int, int) = {\n        drawline, bresenham, donyoku\n    };\n    const char *name[3] = {\"DrawLine\", \"\u30d7\u30ec\u30bc\u30f3\u30cf\u30e0\", \"\u8caa\u6b32\"};\n    int method = 0;\n\n    int msx = 0, msy = 0, mox = 0, moy = 0, mflag = 0;\n\n    int sx = 100, sy = 100, dx = 400, dy = 300;\n\n    while (ProcessMessage() == 0 && ClearDrawScreen() == 0) {\n        char key[256];\n        int mx, my;\n        GetHitKeyStateAll(key);\n        GetMousePoint(&mx, &my);\n        if (key[KEY_INPUT_1]) method = 0;\n        if (key[KEY_INPUT_2]) method = 1;\n        if (key[KEY_INPUT_3]) method = 2;\n\n        if (GetMouseInput() & MOUSE_INPUT_LEFT) {\n            if (mflag == 0) {\n                msx = mx;\n                msy = my;\n                if ((mx - sx) * (mx - sx) + (my - sy) * (my - sy) <= 9) {\n                    mox = sx;\n                    moy = sy;\n                    mflag = 1;\n                } else if ((mx - dx) * (mx - dx) + (my - dy) * (my - dy) <= 9) {\n                    mox = dx;\n                    moy = dy;\n                    mflag = 2;\n                } else {\n                    mflag = 3;\n                }\n            }\n            if (mflag == 1) {\n                sx = mox + mx - msx;\n                sy = moy + my - msy;\n            } else if (mflag == 2) {\n                dx = mox + mx - msx;\n                dy = moy + my - msy;\n            }\n        } else {\n            mflag = 0;\n        }\n\n        DrawString(10, 10, name[method], GetColor(255, 255, 255));\n        DrawCircle(sx, sy, 3, GetColor(255, 255, 255), FALSE);\n        DrawCircle(dx, dy, 3, GetColor(255, 255, 255), FALSE);\n        func[method](sx, sy, dx, dy);\n\n        ScreenFlip();\n    }\n\n    DxLib_End();\n    return 0;\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\u5404\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306e\u63cf\u753b\u7d50\u679c\u306b\u3001\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306e\u62e1\u5927\u93e1 MeGaZoom\u3067\u63cf\u753b\u3055\u308c\u305f\u7dda\u306e\u4e00\u90e8\u3092\u62e1\u5927\u3057\u305f\u753b\u50cf\u3092\u5408\u6210\u3057\u305f\u3002\n(\u3053\u306e\u74b0\u5883\u306e?) \u6a19\u6e96DrawLine\u3067\u306f\u3001\u62e1\u5927\u3059\u308b\u3068\u7dda\u306b\u304b\u3076\u308a\u304c\u3042\u308a\u3001\u592a\u3081\u306b\u63cf\u753b\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\u307e\u305f\u3001\u3053\u306e\u8caa\u6b32\u3067\u306f\u306a\u306a\u308145\u5ea6\u306b\u884c\u3063\u3066\u3057\u307e\u3044\u30011\u672c\u306e\u7dda\u5206\u3067\u7d50\u3076\u3053\u3068\u306f\u3067\u304d\u306a\u304b\u3063\u305f\u3002\n\n\n\n[\u30d6\u30ec\u30bc\u30f3\u30cf\u30e0\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0](https://ja.wikipedia.org/wiki/%E3%83%96%E3%83%AC%E3%82%BC%E3%83%B3%E3%83%8F%E3%83%A0%E3%81%AE%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0)\u306f\u3001\u7dda\u5206\u3092\u30c9\u30c3\u30c8\u306e\u96c6\u307e\u308a\u3067\u8fd1\u4f3c\u3059\u308b\u305f\u3081\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3042\u308a\u3001\u8a08\u7b97\u6a5f\u306b\u3068\u3063\u3066\u6bd4\u8f03\u7684\u91cd\u3044\u51e6\u7406\u3067\u3042\u308b\u4e57\u7b97\u3084\u9664\u7b97\u3092\u7528\u3044\u305a\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\n\n## \u5b9f\u88c5\u4f8b\n\n\u4ee5\u4e0b\u306bC++\u306e\u30b3\u30fc\u30c9\u3092\u793a\u3059\u3002\u3053\u306e\u30b3\u30fc\u30c9\u306b\u306f[\uff24\uff38\u30e9\u30a4\u30d6\u30e9\u30ea](http://homepage2.nifty.com/natupaji/DxLib/)\u304c\u7528\u3044\u3089\u308c\u3066\u304a\u308a\u3001GCC 4.8.1\u304a\u3088\u3073\uff24\uff38\u30e9\u30a4\u30d6\u30e9\u30ea Ver3.16\u3067\u52d5\u4f5c\u78ba\u8a8d\u3092\u884c\u3063\u305f\u3002\n\n\u7dda\u5206\u306e\u4e21\u7aef\u306e\u4e38\u3092\u30de\u30a6\u30b9\u3067\u30c9\u30e9\u30c3\u30b0\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u59cb\u70b9\u3084\u7d42\u70b9\u306e\u4f4d\u7f6e\u3092\u79fb\u52d5\u3067\u304d\u308b\u3002\n\u307e\u305f\u3001\u30c6\u30f3\u30ad\u30fc\u3067\u306f\u306a\u3044\u65b9\u306e1, 2, 3\u30ad\u30fc\u3092\u62bc\u3059\u3053\u3068\u3067\u3001\u63cf\u753b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```senbun_byouga.cpp\n#include <DxLib.h>\n\n// \u6a19\u6e96\u95a2\u6570\u3067\u7dda\u5206\u3092\u63cf\u753b\u3059\u308b\nvoid drawline(int sx, int sy, int dx, int dy) {\n\tDrawLine(sx, sy, dx, dy, GetColor(255, 128, 128));\n}\n\n// \u30d7\u30ec\u30bc\u30f3\u30cf\u30e0\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3063\u307d\u3044\u611f\u3058\u3067\u7dda\u5206\u3092\u63cf\u753b\u3059\u308b\nvoid bresenham(int sx, int sy, int dx, int dy) {\n\tint color = GetColor(128, 255, 128);\n\tint x = sx, y = sy; // \u73fe\u5728\u4f4d\u7f6e\n\tint wx = (sx >= dx ? sx - dx : dx - sx); // x\u5ea7\u6a19\u306e\u5dee\u306e\u7d76\u5bfe\u5024\n\tint wy = (sy >= dy ? sy - dy : dy - sy); // y\u5ea7\u6a19\u306e\u5dee\u306e\u7d76\u5bfe\u5024\n\tint xmode = (wx >= wy); // x\u65b9\u5411\u306e\u5909\u4f4d\u304cy\u65b9\u5411\u306e\u5909\u4f4d\u4ee5\u4e0a\u304b\n\tint gosa = 0;\n\twhile (x != dx || y != dy) {\n\t\tDrawPixel(x, y, color); // \u3068\u308a\u3042\u3048\u305a \u73fe\u5728\u4f4d\u7f6e\u306b \u70b9\u3092\u6253\u3064 (\u5ddd\u67f3)\n\t\tif (xmode) { // x\u65b9\u5411\u306e\u5909\u4f4d\u306e\u65b9\u304c\u5c0f\u3055\u304f\u306a\u3044\u306e\u3067\u3001\u4e3b\u306bx\u65b9\u5411\u306b\u79fb\u52d5\u3059\u308b\n\t\t\tif (sx < dx) x++; else x--; // x\u65b9\u5411\u306b\u9032\u3080\n\t\t\t// y\u65b9\u5411\u306b\u9032\u3080\u3079\u304d\u5909\u4f4d\u3092\u9032\u3093\u3067\u3044\u306a\u3044\u306e\u3067\u3001\u8aa4\u5dee\u3068\u3057\u3066\u52a0\u3048\u308b\n\t\t\t// \u8aa4\u5dee\u306f\u6574\u6570\u306b\u3059\u308b\u305f\u3081\u306b(wx * 2)\u500d\u3067\u6271\u3046\n\t\t\tgosa += ((dy - sy) << 1);\n\t\t\tif (gosa > wx) { // y\u306e\u6b63\u306e\u65b9\u5411\u306b\u9032\u3080\u3079\u304d\u306a\u306e\u306b\u9032\u3093\u3067\u3044\u306a\u3044\u8aa4\u5dee\u304c0.5\u3092\u8d85\u3048\u305f\n\t\t\t\ty++; // y\u306e\u6b63\u306e\u65b9\u5411\u306b\u9032\u3080\n\t\t\t\tgosa -= (wx << 1); // \u9032\u3093\u3060\u5206\u3092\u8aa4\u5dee\u306b\u53cd\u6620\u3055\u305b\u308b\n\t\t\t} else if (gosa < -wx) { // y\u306e\u8ca0\u306e\u65b9\u5411(ry\n\t\t\t\ty--; // y\u306e\u8ca0(ry\n\t\t\t\tgosa += (wx << 1); // \u9032\u3093\u3060(ry\n\t\t\t}\n\t\t} else { // y\u65b9\u5411\u306e\u5909\u4f4d\u306e\u65b9\u304c\u5927\u304d\u3044\u306e\u3067\u3001\u4e3b\u306by\u65b9\u5411\u306b\u79fb\u52d5\u3059\u308b\n\t\t\t// x\u306e\u6642\u3068\u540c\u69d8\n\t\t\tif (sy < dy) y++; else y--;\n\t\t\tgosa += ((dx - sx) << 1);\n\t\t\tif (gosa > wy) {\n\t\t\t\tx++;\n\t\t\t\tgosa -= (wy << 1);\n\t\t\t} else if (gosa < -wy) {\n\t\t\t\tx--;\n\t\t\t\tgosa += (wy << 1);\n\t\t\t}\n\t\t}\n\t}\n}\n\n// 8\u65b9\u5411\u306e\u3046\u3061\u4e00\u756a\u7d42\u70b9\u306b\u8fd1\u3065\u304f\u65b9\u5411\u306b\u79fb\u52d5\u3059\u308b(\u5931\u6557)\nvoid donyoku(int sx, int sy, int dx, int dy) {\n\tint color = GetColor(128, 128, 255);\n\tint x = sx, y = sy;\n\twhile (x != dx || y != dy) {\n\t\tDrawPixel(x, y, color);\n\t\tint nx = sx, ny = sy, score = -1;\n\t\tfor (int deltay = -1; deltay <= 1; deltay++) {\n\t\t\tfor (int deltax = -1; deltax <= 1; deltax++) {\n\t\t\t\tint cx = x + deltax, cy = y + deltay;\n\t\t\t\tint cscore = (dx - cx) * (dx - cx) + (dy - cy) * (dy - cy);\n\t\t\t\tif (score < 0 || cscore < score) {\n\t\t\t\t\tscore = cscore;\n\t\t\t\t\tnx = cx;\n\t\t\t\t\tny = cy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tx = nx;\n\t\ty = ny;\n\t}\n}\n\nint WINAPI WinMain(HINSTANCE, HINSTANCE, LPSTR, int) {\n\tif (ChangeWindowMode(TRUE) != DX_CHANGESCREEN_OK || DxLib_Init() != 0) return -1;\n\tSetDrawScreen(DX_SCREEN_BACK);\n\n\tvoid (*func[3])(int, int, int, int) = {\n\t\tdrawline, bresenham, donyoku\n\t};\n\tconst char *name[3] = {\"DrawLine\", \"\u30d7\u30ec\u30bc\u30f3\u30cf\u30e0\", \"\u8caa\u6b32\"};\n\tint method = 0;\n\n\tint msx = 0, msy = 0, mox = 0, moy = 0, mflag = 0;\n\n\tint sx = 100, sy = 100, dx = 400, dy = 300;\n\n\twhile (ProcessMessage() == 0 && ClearDrawScreen() == 0) {\n\t\tchar key[256];\n\t\tint mx, my;\n\t\tGetHitKeyStateAll(key);\n\t\tGetMousePoint(&mx, &my);\n\t\tif (key[KEY_INPUT_1]) method = 0;\n\t\tif (key[KEY_INPUT_2]) method = 1;\n\t\tif (key[KEY_INPUT_3]) method = 2;\n\n\t\tif (GetMouseInput() & MOUSE_INPUT_LEFT) {\n\t\t\tif (mflag == 0) {\n\t\t\t\tmsx = mx;\n\t\t\t\tmsy = my;\n\t\t\t\tif ((mx - sx) * (mx - sx) + (my - sy) * (my - sy) <= 9) {\n\t\t\t\t\tmox = sx;\n\t\t\t\t\tmoy = sy;\n\t\t\t\t\tmflag = 1;\n\t\t\t\t} else if ((mx - dx) * (mx - dx) + (my - dy) * (my - dy) <= 9) {\n\t\t\t\t\tmox = dx;\n\t\t\t\t\tmoy = dy;\n\t\t\t\t\tmflag = 2;\n\t\t\t\t} else {\n\t\t\t\t\tmflag = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (mflag == 1) {\n\t\t\t\tsx = mox + mx - msx;\n\t\t\t\tsy = moy + my - msy;\n\t\t\t} else if (mflag == 2) {\n\t\t\t\tdx = mox + mx - msx;\n\t\t\t\tdy = moy + my - msy;\n\t\t\t}\n\t\t} else {\n\t\t\tmflag = 0;\n\t\t}\n\n\t\tDrawString(10, 10, name[method], GetColor(255, 255, 255));\n\t\tDrawCircle(sx, sy, 3, GetColor(255, 255, 255), FALSE);\n\t\tDrawCircle(dx, dy, 3, GetColor(255, 255, 255), FALSE);\n\t\tfunc[method](sx, sy, dx, dy);\n\n\t\tScreenFlip();\n\t}\n\n\tDxLib_End();\n\treturn 0;\n}\n```\n\n## \u5b9f\u884c\u7d50\u679c\n\n\u5404\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306e\u63cf\u753b\u7d50\u679c\u306b\u3001[\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306e\u62e1\u5927\u93e1 MeGaZoom](http://www.geocities.co.jp/SiliconValley/2489/software.html)\u3067\u63cf\u753b\u3055\u308c\u305f\u7dda\u306e\u4e00\u90e8\u3092\u62e1\u5927\u3057\u305f\u753b\u50cf\u3092\u5408\u6210\u3057\u305f\u3002\n\n(\u3053\u306e\u74b0\u5883\u306e?) \u6a19\u6e96`DrawLine`\u3067\u306f\u3001\u62e1\u5927\u3059\u308b\u3068\u7dda\u306b\u304b\u3076\u308a\u304c\u3042\u308a\u3001\u592a\u3081\u306b\u63cf\u753b\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\u307e\u305f\u3001\u3053\u306e\u8caa\u6b32\u3067\u306f\u306a\u306a\u308145\u5ea6\u306b\u884c\u3063\u3066\u3057\u307e\u3044\u30011\u672c\u306e\u7dda\u5206\u3067\u7d50\u3076\u3053\u3068\u306f\u3067\u304d\u306a\u304b\u3063\u305f\u3002\n\n![drawline_kakudai.png](https://qiita-image-store.s3.amazonaws.com/0/99656/329a7c02-8354-9008-3330-a29c6da2e18d.png)\n\n![bresenham_kakudai.png](https://qiita-image-store.s3.amazonaws.com/0/99656/b5b0ee81-f3a2-1846-beb9-88a32089ad1f.png)\n\n![donyoku_kakudai.png](https://qiita-image-store.s3.amazonaws.com/0/99656/37aa473d-1ce7-fcd6-f8f6-62664659b876.png)\n"}