{"context": " More than 1 year has passed since last update.ZBar \u3068Python\u30e2\u30b8\u30e5\u30fc\u30eb https://pypi.python.org/pypi/zbar/ \u3092\u5229\u7528\u3057\u307e\u3059\u3002\nQR\u30b3\u30fc\u30c9\u4ee5\u5916\u306e\u30d0\u30fc\u30b3\u30fc\u30c9\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\u7d19\u306e\u30ab\u30fc\u30c9\u3092\u4f7f\u3063\u305f\u5b9f\u9a13\u7d50\u679c\u306e\u96c6\u8a08\u3092\u52b9\u7387\u5316\u3059\u308b\u305f\u3081\u306b\u3001\u3042\u3089\u304b\u3058\u3081\u30ab\u30fc\u30c9\u306bQR\u30b3\u30fc\u30c9\u3092\u4ed5\u8fbc\u3093\u3067\u304a\u304d\u3001\u30b9\u30ad\u30e3\u30f3\u5f8c\u306bPython\u3067\u81ea\u52d5\u51e6\u7406\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u3084\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n\u74b0\u5883\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\n\nMac OS X (10.9 Mavericks) & Homebrew\nZBar 0.10 http://zbar.sourceforge.net/\n\nPython zbar 0.10 \nPython Pillow (Python Imaging Library) 2.7.0\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nZBar\nHomebrew\u3067\u4e00\u767a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n$ brew install zbar\n\n\nPython zbar\u30e2\u30b8\u30e5\u30fc\u30eb\n\u3053\u308c\u3082PyPI\u3067\u4e00\u767a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3001\u3068\u884c\u304d\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u307e\u307e\u5165\u308c\u3066\u3057\u307e\u3046\u3068\u30a4\u30f3\u30dd\u30fc\u30c8\u6642\u306bSegmentation fault\u3067Python\u304c\u6b7b\u306b\u307e\u3059\u3002\n$ pip install zbar\n\n$ python\nPython 2.7.9 (default, Jan  7 2015, 11:50:42) \n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.56)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import zbar\nSegmentation fault: 11\n\n$ pip uninstall zbar\n\n\nStack Overflow: Zbar + python, crashes on import (OSX 10.9.1)\n\n\u305d\u3053\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u30d1\u30c3\u30c1\u3092\u3042\u3066\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u3053\u306e\u30d1\u30c3\u30c1\u3067\u306f\u3001\u914d\u5217\u306bsentinel\u3092\u8ffd\u52a0\u3057\u3066\u3042\u3052\u308b\u3053\u3068\u3067\u3001Segmantation fault\u306e\u767a\u751f\u3092\u9632\u3044\u3067\u3044\u307e\u3059\u3002\n$ wget https://pypi.python.org/packages/source/z/zbar/zbar-0.10.tar.bz2\n$ wget https://github.com/npinchot/zbar/commit/d3c1611ad2411fbdc3e79eb96ca704a63d30ae69.diff\n$ tar jxvf zbar-0.10.tar.bz2\n$ cd zbar-0.10\n$ patch -p1 < ../d3c1611ad2411fbdc3e79eb96ca704a63d30ae69.diff\npatching file imagescanner.c\n$ python setup.py install\n\n$ python\nPython 2.7.9 (default, Jan  7 2015, 11:50:42) \n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.56)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import zlib\n>>>\n\n\u4eca\u5ea6\u306f\u5927\u4e08\u592b\u3067\u3057\u305f\u3002\n\nPython Pillow\u30e2\u30b8\u30e5\u30fc\u30eb\nPyPI\u4e00\u767a\u3067\u5165\u308a\u307e\u3059\u3002\n$ pip install Pillow\n\n\n\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089QR\u30b3\u30fc\u30c9\u3092\u62bd\u51fa\u3059\u308b\nPython\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u3059\u3002\nzbar_test.py\n\nzbar_test.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n### cf. http://99blues.dyndns.org/blog/2010/12/zbar/\n\nimport sys\nimport zbar\nimport PIL.Image\n\nif len(sys.argv) < 2: exit(1)\n\n# create a reader\nscanner = zbar.ImageScanner()\n\n# configure the reader\nscanner.parse_config('enable')\n\n# obtain image data\npil = PIL.Image.open(sys.argv[1]).convert('L')\n(width, height) = pil.size\nraw = pil.tostring()\n\n# wrap image data\nimage = zbar.Image(width, height, 'Y800', raw)\n\n# scan the image for barcodes\nscanner.scan(image)\n\n# extract results\nfor symbol in image:\n    # do something useful with results\n    print 'decoded', symbol.type, 'symbol', '\"%s\"' % symbol.data\n\n# clean up\ndel(image)\n\n\n$ ./zbar_test.py /path/to/image.jpg\ndecoded QRCODE symbol \"http://www.example.com/\"\n\n\n\u53c2\u8003\n\nQiita: zbar \u3067\u753b\u50cf\u304b\u3089\u30d0\u30fc\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u53d6\u308b\nStop Making Sense: ZBar \u3067\u30d0\u30fc\u30b3\u30fc\u30c9\u8aad\u307f\u53d6\u308a\n\n[ZBar](http://zbar.sourceforge.net/) \u3068Python\u30e2\u30b8\u30e5\u30fc\u30eb https://pypi.python.org/pypi/zbar/ \u3092\u5229\u7528\u3057\u307e\u3059\u3002\nQR\u30b3\u30fc\u30c9\u4ee5\u5916\u306e\u30d0\u30fc\u30b3\u30fc\u30c9\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u7d19\u306e\u30ab\u30fc\u30c9\u3092\u4f7f\u3063\u305f\u5b9f\u9a13\u7d50\u679c\u306e\u96c6\u8a08\u3092\u52b9\u7387\u5316\u3059\u308b\u305f\u3081\u306b\u3001\u3042\u3089\u304b\u3058\u3081\u30ab\u30fc\u30c9\u306bQR\u30b3\u30fc\u30c9\u3092\u4ed5\u8fbc\u3093\u3067\u304a\u304d\u3001\u30b9\u30ad\u30e3\u30f3\u5f8c\u306bPython\u3067\u81ea\u52d5\u51e6\u7406\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u3084\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n## \u74b0\u5883\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\n\n* Mac OS X (10.9 Mavericks) & Homebrew\n* ZBar 0.10 http://zbar.sourceforge.net/\n* Python zbar 0.10 \n* Python Pillow (Python Imaging Library) 2.7.0\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n### ZBar\n\nHomebrew\u3067\u4e00\u767a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n```bash\n$ brew install zbar\n```\n\n### Python zbar\u30e2\u30b8\u30e5\u30fc\u30eb\n\n\u3053\u308c\u3082PyPI\u3067\u4e00\u767a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3001\u3068\u884c\u304d\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u307e\u307e\u5165\u308c\u3066\u3057\u307e\u3046\u3068\u30a4\u30f3\u30dd\u30fc\u30c8\u6642\u306bSegmentation fault\u3067Python\u304c\u6b7b\u306b\u307e\u3059\u3002\n\n```bash\n$ pip install zbar\n\n$ python\nPython 2.7.9 (default, Jan  7 2015, 11:50:42) \n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.56)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import zbar\nSegmentation fault: 11\n\n$ pip uninstall zbar\n```\n\n* [Stack Overflow: Zbar + python, crashes on import (OSX 10.9.1)](http://stackoverflow.com/questions/21612908/zbar-python-crashes-on-import-osx-10-9-1)\n\n\u305d\u3053\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b[\u30d1\u30c3\u30c1](https://github.com/npinchot/zbar/commit/d3c1611ad2411fbdc3e79eb96ca704a63d30ae69)\u3092\u3042\u3066\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u3053\u306e\u30d1\u30c3\u30c1\u3067\u306f\u3001\u914d\u5217\u306bsentinel\u3092\u8ffd\u52a0\u3057\u3066\u3042\u3052\u308b\u3053\u3068\u3067\u3001Segmantation fault\u306e\u767a\u751f\u3092\u9632\u3044\u3067\u3044\u307e\u3059\u3002\n\n```bash\n$ wget https://pypi.python.org/packages/source/z/zbar/zbar-0.10.tar.bz2\n$ wget https://github.com/npinchot/zbar/commit/d3c1611ad2411fbdc3e79eb96ca704a63d30ae69.diff\n$ tar jxvf zbar-0.10.tar.bz2\n$ cd zbar-0.10\n$ patch -p1 < ../d3c1611ad2411fbdc3e79eb96ca704a63d30ae69.diff\npatching file imagescanner.c\n$ python setup.py install\n\n$ python\nPython 2.7.9 (default, Jan  7 2015, 11:50:42) \n[GCC 4.2.1 Compatible Apple LLVM 6.0 (clang-600.0.56)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import zlib\n>>>\n```\n\n\u4eca\u5ea6\u306f\u5927\u4e08\u592b\u3067\u3057\u305f\u3002\n\n### Python Pillow\u30e2\u30b8\u30e5\u30fc\u30eb\n\nPyPI\u4e00\u767a\u3067\u5165\u308a\u307e\u3059\u3002\n\n```bash\n$ pip install Pillow\n```\n\n## \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089QR\u30b3\u30fc\u30c9\u3092\u62bd\u51fa\u3059\u308b\n\nPython\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\nzbar_test.py\n\n```py:zbar_test.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\n### cf. http://99blues.dyndns.org/blog/2010/12/zbar/\n\nimport sys\nimport zbar\nimport PIL.Image\n \nif len(sys.argv) < 2: exit(1)\n \n# create a reader\nscanner = zbar.ImageScanner()\n \n# configure the reader\nscanner.parse_config('enable')\n \n# obtain image data\npil = PIL.Image.open(sys.argv[1]).convert('L')\n(width, height) = pil.size\nraw = pil.tostring()\n \n# wrap image data\nimage = zbar.Image(width, height, 'Y800', raw)\n \n# scan the image for barcodes\nscanner.scan(image)\n \n# extract results\nfor symbol in image:\n    # do something useful with results\n    print 'decoded', symbol.type, 'symbol', '\"%s\"' % symbol.data\n \n# clean up\ndel(image)\n```\n\n```bash\n$ ./zbar_test.py /path/to/image.jpg\ndecoded QRCODE symbol \"http://www.example.com/\"\n```\n\n## \u53c2\u8003\n\n* [Qiita: zbar \u3067\u753b\u50cf\u304b\u3089\u30d0\u30fc\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u53d6\u308b](http://qiita.com/labocho/items/11985fa376b867b8e9ff)\n* [Stop Making Sense: ZBar \u3067\u30d0\u30fc\u30b3\u30fc\u30c9\u8aad\u307f\u53d6\u308a](http://99blues.dyndns.org/blog/2010/12/zbar/)\n", "tags": ["Python", "zbar", "QRcode", "MacOSX"]}