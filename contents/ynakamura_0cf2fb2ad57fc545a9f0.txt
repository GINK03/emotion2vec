{"context": "6.38 \u5165\u529b\u6587\u5b57\u5217\u306e\u9006\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\u95a2\u6570(\u518d\u5e30\u69cb\u9020)\n#include <stdio.h>\n#include <conio.h>\n#include <stdlib.h>\n#include <time.h>\n#include <signal.h>\n#include <string.h>\n#include <ctype.h>\n\nvoid stringReverse(const char []);\nvoid printArray(const char [], int);\n\nint main()\n{\n    stringReverse(\"ABCDEF\");\n    getch();\n    return 0;\n}\n\nvoid stringReverse(const char d[])\n{\n    if (d[0] == '\\0')\n    {\n        return;\n    }\n    else\n    {\n        stringReverse(d + 1);\n        printf(\"%c\", d[0]); \n        return;\n    }\n}\n\nvoid printArray(const char d[], int size)\n{\n    if (size == 0)\n    {\n        return;\n    }\n    else\n    {\n        printf(\"%c\", d[0]);\n        printArray(d + 1, size - 1);\n        return;\n    }\n}\n\n6.39 \u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\u95a2\u6570(\u518d\u5e30\u69cb\u9020)\n#include <stdio.h>\n#include <conio.h>\n#include <stdlib.h>\n#include <time.h>\n#include <signal.h>\n#include <string.h>\n#include <ctype.h>\n\nint recursiveMinimum(int [], int);\n\nint main()\n{\n   int data[4] = {3, 6, 6, 9};\n\n   printf(\"\u6700\u5c0f\u5024\u306f %d\\n\", recursiveMinimum(data, 4));\n   getch();\n   return 0;\n}\n\nint recursiveMinimum(int a[], int size)\n{\n   int tmp;\n\n   if (size == 1)\n   {\n       return a[0];\n   }\n\n   if (a[0] < a[1])\n   {\n       tmp = a[1];\n       a[1] = a[0];\n       a[0] = tmp;\n   }\n\n   return recursiveMinimum(a + 1, size - 1);\n}\n\n\u30dd\u30fc\u30bf\u30eb\u30da\u30fc\u30b8\u3078\u306e\u30ea\u30f3\u30af\nhttp://qiita.com/ynakamura/items/84efeab3c6267ce7ac67\n6.38 \u5165\u529b\u6587\u5b57\u5217\u306e\u9006\u6587\u5b57\u5217\u3092\u8868\u793a\u3059\u308b\u95a2\u6570(\u518d\u5e30\u69cb\u9020)\n\n```c\n#include <stdio.h>\n#include <conio.h>\n#include <stdlib.h>\n#include <time.h>\n#include <signal.h>\n#include <string.h>\n#include <ctype.h>\n\nvoid stringReverse(const char []);\nvoid printArray(const char [], int);\n\nint main()\n{\n    stringReverse(\"ABCDEF\");\n    getch();\n    return 0;\n}\n\nvoid stringReverse(const char d[])\n{\n    if (d[0] == '\\0')\n    {\n        return;\n    }\n    else\n    {\n        stringReverse(d + 1);\n        printf(\"%c\", d[0]); \n        return;\n    }\n}\n\nvoid printArray(const char d[], int size)\n{\n    if (size == 0)\n    {\n        return;\n    }\n    else\n    {\n        printf(\"%c\", d[0]);\n        printArray(d + 1, size - 1);\n        return;\n    }\n}\n```\n\n6.39 \u6700\u5c0f\u5024\u3092\u6c42\u3081\u308b\u95a2\u6570(\u518d\u5e30\u69cb\u9020)\n\n```C\n#include <stdio.h>\n#include <conio.h>\n#include <stdlib.h>\n#include <time.h>\n#include <signal.h>\n#include <string.h>\n#include <ctype.h>\n\nint recursiveMinimum(int [], int);\n\nint main()\n{\n   int data[4] = {3, 6, 6, 9};\n \n   printf(\"\u6700\u5c0f\u5024\u306f %d\\n\", recursiveMinimum(data, 4));\n   getch();\n   return 0;\n}\n\nint recursiveMinimum(int a[], int size)\n{\n   int tmp;\n\n   if (size == 1)\n   {\n       return a[0];\n   }\n\n   if (a[0] < a[1])\n   {\n       tmp = a[1];\n       a[1] = a[0];\n       a[0] = tmp;\n   }\n\n   return recursiveMinimum(a + 1, size - 1);\n}\n```\n\n\u30dd\u30fc\u30bf\u30eb\u30da\u30fc\u30b8\u3078\u306e\u30ea\u30f3\u30af\nhttp://qiita.com/ynakamura/items/84efeab3c6267ce7ac67\n", "tags": ["C\u8a00\u8a9e", "\u30c0\u30a4\u30c6\u30ebC", "\u6587\u5b57\u5217", "\u518d\u5e30"]}