{"context": "\n\n\u6982\u8981\n\nGoogle Cloud Platform \u304b\u3089\u30ed\u30b0\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\uff0e\nlogadmin \u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u63d0\u4f9b\u3059\u308b\uff0cStackdriver \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u4f7f\u3044\u3084\u3059\u3044\u306e\u3060\u304c\uff0c\n\u624b\u306b\u5165\u308b\u5404\u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u30fc\u306f logging.Entry\u578b\u3067\uff0c\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u53d6\u5f97\u304c\u624b\u9593\u3067\u3042\u308b\uff0e\n\u672c\u7a3f\u3067\u306f\uff0c\u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u30fc\u53ca\u3073\u305d\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u53d6\u5f97\u65b9\u6cd5\u3092\u307e\u3068\u3081\u308b\uff0e\n\nlogadmin \u30d1\u30c3\u30b1\u30fc\u30b8\nlogadmin \u306f\uff0c\u6bd4\u8f03\u7684\u65b0\u3057\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\uff0c \u30ed\u30b0\u306e\u53d6\u5f97\u306b\u95a2\u308f\u308b\u64cd\u4f5c\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\uff0e \n\u5909\u6570filter\u306b\u5165\u3063\u3066\u3044\u308b\u30af\u30a8\u30ea\u306b\u30de\u30c3\u30c1\u3059\u308b\u30ed\u30b0\u30c7\u30fc\u30bf\u306e\u307f\u3092\u53d6\u5f97\u3059\u308b\u306a\u3089\u3070\uff0c\n\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3088\u3044\uff0e\nimport (\n    \"cloud.google.com/go/logging/logadmin\"\n    \"golang.org/x/net/context\"\n    \"google.golang.org/api/iterator\"\n)\n\nfunc GetLogEntries(filter string) error{\n    ctx := context.Background()\n    client, err := logadmin.NewClient(ctx, \"your-project-id\")\n    if err != nil {\n        return err\n    }\n    defer client.Close()\n\n    iter := client.Entries(ctx, logadmin.Filter(filter))\n    for {\n        e, err := iter.Next()\n        if err == iterator.Done {\n            return nil\n        } else if err != nil {\n            return err\n        }\n        // logging.Entry\u578b\u306e\u30ed\u30b0\u30c7\u30fc\u30bf e \u306b\u5bfe\u3059\u308b\u64cd\u4f5c\n    }\n}\n\n\nlogging.Entry\n\u4e0a\u8a18\u306e\u64cd\u4f5c\u3067\u624b\u306b\u5165\u308b\u30ed\u30b0\u30c7\u30fc\u30bf\u306f\uff0clogging.Entry\u69cb\u9020\u4f53\u306b\u306a\u3063\u3066\u3044\u308b\uff0e\n\u3053\u306e\u69cb\u9020\u4f53\u3067\u306f\uff0c\u30da\u30a4\u30ed\u30fc\u30c9\u306f interface{}\u578b\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\uff0c\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u306f\u30ad\u30e3\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\uff0e\n\u306a\u304a\uff0cGoogle Cloud Platform \u3067\u306f\u3053\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u306f\u307b\u3068\u3093\u3069\u306e\u5834\u5408 JSON \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b\uff0e\n\u307e\u305f\uff0c\u5b9f\u969b\u306b\u5229\u7528\u3059\u308b\u5834\u5408\u306f\uff0c\u30d5\u30a3\u30eb\u30bf\u306e\u5024\u304b\u3089\u30b9\u30ad\u30fc\u30de\u304c\u3042\u308b\u7a0b\u5ea6\u5206\u304b\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3046\uff0e\n\u3055\u3066\uff0c\u624b\u5143\u3067\u8abf\u3079\u305f\u3068\u3053\u308d\uff0c\u3053\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u306f structpb.Struct\u578b\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u306b\u306a\u3063\u3066\u3044\u308b\uff0e\n\u3053\u306estructpb.Struct\u578b\u304b\u3089\u76ee\u7684\u306e\u30ed\u30b0\u30c7\u30fc\u30bf\u3092\u8868\u3059\u69cb\u9020\u4f53\u3078\u5909\u63db\u3059\u308b\u306e\u3060\u304c\uff0c\n\u7c21\u5358\u306a\u65b9\u6cd5\u304c\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\uff0c\u81ea\u4f5c\u306e\u95a2\u6570 structpbconv.Convert \u3067\u5909\u63db\u3059\u308b\u3053\u3068\u306b\u3057\u305f\uff0e\n\uff08\u305d\u306e\u30b3\u30fc\u30c9\u306f\u3053\u3053\u3067\u516c\u958b\u3057\u3066\u3044\u308b\uff09\n\n\u578b\u5909\u63db\n\u4f8b\u3048\u3070\u6b21\u306e\u30b3\u30fc\u30c9\u306f\uff0c\u3053\u306estructpbconv\u3092\u4f7f\u3063\u3066\uff0cstructpb.Struct\u304b\u3089Compute Engine VM \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\nactivity_log \u3092\u53d6\u5f97\u3057\u3066\u3044\u308b\uff0e\nimport (\n    \"github.com/golang/protobuf/ptypes/struct\"\n    \"github.com/jkawamoto/structpbconv\"\n)\n\n\ntype ActivityPayload struct {\n    EventTimestampUs string `structpb:\"event_timestamp_us\"`\n    EventType        string `structpb:\"event_type\"`\n    TraceID          string `structpb:\"trace_id\"`\n    Actor            struct {\n        User string\n    }\n    Resource struct {\n        Zone string\n        Type string\n        ID   string\n        Name string\n    }\n    Version      string\n    EventSubtype string `structpb:\"event_subtype\"`\n    Operation    struct {\n        Zone string\n        Type string\n        ID   string\n        Name string\n    }\n}\n\nfunc NewActivityPayload(payload *structpb.Struct) *ActivityPayload {\n    var res ActivityPayload\n    structpbconv.Convert(payload, &res)\n    return &res\n}\n\nActivityPayload\u69cb\u9020\u4f53\u306f\uff0c activity_log \u306e\u30da\u30a4\u30ed\u30fc\u30c9\u306b\u5408\u308f\u305b\u3066\u4f5c\u6210\u3059\u308b\uff0e\n\u5b9f\u969b\u306f JSON \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u3067\uff0c\u5c0f\u6587\u5b57+\u30a2\u30f3\u30c0\u30fc\u30d0\u30fc\u306a\u3069\u547d\u540d\u898f\u5247\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u5bfe\u5fdc\u4ed8\u3051\u306b\u306f\uff0c\nstructpb \u30bf\u30b0\u3092\u7528\u3044\u308b\uff0e\n\u5148\u307b\u3069\u306e\u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u30fc\u53d6\u5f97\u3068\u5408\u308f\u305b\u308b\u3068\uff0c\n// \u30a4\u30d9\u30f3\u30c8\u30bf\u30a4\u30d7\u304c GCE_OPERATION_DONE \u306e\u30ed\u30b0\u3060\u3051\u3092\u53d6\u5f97\u3059\u308b\niter := client.Entries(ctx, logadmin.Filter(\"jsonPayload.event_type = \\\"GCE_OPERATION_DONE\\\"\"))\nfor {\n    e, err := iter.Next()\n    if err == iterator.Done {\n        return nil\n    } else if err != nil {\n        return err\n    }\n\n    // logging.Entry\u578b\u306e\u30ed\u30b0\u30c7\u30fc\u30bf e \u306b\u5bfe\u3059\u308b\u64cd\u4f5c\n    if s, ok := e.Payload.(*structpb.Struct); ok {\n        payload := NewActivityPayload(s)\n\n        fmt.Println(payload.TraceID) // trace_id \u3092\u51fa\u529b\n    }\n\n}\n\n\u306a\u3069\u306e\u3088\u3046\u306b\u30ed\u30b0\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3067\u304d\u308b\uff0e\n# \u6982\u8981\n[![English](https://img.shields.io/badge/English-here-lightgrey.svg?style=flat)](https://www.jkawamoto.info/blogs/get-logs-from-stackdriver-logging/)\n[Google Cloud Platform](https://cloud.google.com/) \u304b\u3089\u30ed\u30b0\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\uff0e\n[logadmin](https://godoc.org/cloud.google.com/go/logging/logadmin) \u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u63d0\u4f9b\u3059\u308b\uff0c[Stackdriver](https://cloud.google.com/stackdriver/) \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u4f7f\u3044\u3084\u3059\u3044\u306e\u3060\u304c\uff0c\n\u624b\u306b\u5165\u308b\u5404\u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u30fc\u306f [logging.Entry](https://godoc.org/cloud.google.com/go/logging#Entry)\u578b\u3067\uff0c\u30da\u30a4\u30ed\u30fc\u30c9\u306e\u53d6\u5f97\u304c\u624b\u9593\u3067\u3042\u308b\uff0e\n\u672c\u7a3f\u3067\u306f\uff0c\u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u30fc\u53ca\u3073\u305d\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u53d6\u5f97\u65b9\u6cd5\u3092\u307e\u3068\u3081\u308b\uff0e\n\n# logadmin \u30d1\u30c3\u30b1\u30fc\u30b8\n[logadmin](https://godoc.org/cloud.google.com/go/logging/logadmin) \u306f\uff0c\u6bd4\u8f03\u7684\u65b0\u3057\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\uff0c \u30ed\u30b0\u306e\u53d6\u5f97\u306b\u95a2\u308f\u308b\u64cd\u4f5c\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\uff0e \n\u5909\u6570`filter`\u306b\u5165\u3063\u3066\u3044\u308b\u30af\u30a8\u30ea\u306b\u30de\u30c3\u30c1\u3059\u308b\u30ed\u30b0\u30c7\u30fc\u30bf\u306e\u307f\u3092\u53d6\u5f97\u3059\u308b\u306a\u3089\u3070\uff0c\n\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3088\u3044\uff0e\n\n```go\nimport (\n    \"cloud.google.com/go/logging/logadmin\"\n    \"golang.org/x/net/context\"\n    \"google.golang.org/api/iterator\"\n)\n\nfunc GetLogEntries(filter string) error{\n    ctx := context.Background()\n    client, err := logadmin.NewClient(ctx, \"your-project-id\")\n    if err != nil {\n        return err\n    }\n    defer client.Close()\n\n    iter := client.Entries(ctx, logadmin.Filter(filter))\n    for {\n        e, err := iter.Next()\n        if err == iterator.Done {\n            return nil\n        } else if err != nil {\n            return err\n        }\n        // logging.Entry\u578b\u306e\u30ed\u30b0\u30c7\u30fc\u30bf e \u306b\u5bfe\u3059\u308b\u64cd\u4f5c\n    }\n}\n```\n\n# logging.Entry\n\u4e0a\u8a18\u306e\u64cd\u4f5c\u3067\u624b\u306b\u5165\u308b\u30ed\u30b0\u30c7\u30fc\u30bf\u306f\uff0c[logging.Entry](https://godoc.org/cloud.google.com/go/logging#Entry)\u69cb\u9020\u4f53\u306b\u306a\u3063\u3066\u3044\u308b\uff0e\n\u3053\u306e\u69cb\u9020\u4f53\u3067\u306f\uff0c\u30da\u30a4\u30ed\u30fc\u30c9\u306f `interface{}`\u578b\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\uff0c\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u306f\u30ad\u30e3\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\uff0e\n\u306a\u304a\uff0cGoogle Cloud Platform \u3067\u306f\u3053\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u306f\u307b\u3068\u3093\u3069\u306e\u5834\u5408 JSON \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b\uff0e\n\u307e\u305f\uff0c\u5b9f\u969b\u306b\u5229\u7528\u3059\u308b\u5834\u5408\u306f\uff0c\u30d5\u30a3\u30eb\u30bf\u306e\u5024\u304b\u3089\u30b9\u30ad\u30fc\u30de\u304c\u3042\u308b\u7a0b\u5ea6\u5206\u304b\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3046\uff0e\n\n\u3055\u3066\uff0c\u624b\u5143\u3067\u8abf\u3079\u305f\u3068\u3053\u308d\uff0c\u3053\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u306f [`structpb.Struct`\u578b](https://godoc.org/github.com/golang/protobuf/ptypes/struct#Struct)\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u306b\u306a\u3063\u3066\u3044\u308b\uff0e\n\u3053\u306e`structpb.Struct`\u578b\u304b\u3089\u76ee\u7684\u306e\u30ed\u30b0\u30c7\u30fc\u30bf\u3092\u8868\u3059\u69cb\u9020\u4f53\u3078\u5909\u63db\u3059\u308b\u306e\u3060\u304c\uff0c\n\u7c21\u5358\u306a\u65b9\u6cd5\u304c\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\uff0c\u81ea\u4f5c\u306e\u95a2\u6570 `structpbconv.Convert` \u3067\u5909\u63db\u3059\u308b\u3053\u3068\u306b\u3057\u305f\uff0e\n\uff08\u305d\u306e\u30b3\u30fc\u30c9\u306f[\u3053\u3053](https://github.com/jkawamoto/structpbconv)\u3067\u516c\u958b\u3057\u3066\u3044\u308b\uff09\n\n# \u578b\u5909\u63db\n\u4f8b\u3048\u3070\u6b21\u306e\u30b3\u30fc\u30c9\u306f\uff0c\u3053\u306e[structpbconv](https://github.com/jkawamoto/structpbconv)\u3092\u4f7f\u3063\u3066\uff0cstructpb.Struct\u304b\u3089[Compute Engine](https://cloud.google.com/compute/) VM \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\nactivity_log \u3092\u53d6\u5f97\u3057\u3066\u3044\u308b\uff0e\n\n```go\nimport (\n    \"github.com/golang/protobuf/ptypes/struct\"\n    \"github.com/jkawamoto/structpbconv\"\n)\n\n\ntype ActivityPayload struct {\n    EventTimestampUs string `structpb:\"event_timestamp_us\"`\n    EventType        string `structpb:\"event_type\"`\n    TraceID          string `structpb:\"trace_id\"`\n    Actor            struct {\n        User string\n    }\n    Resource struct {\n        Zone string\n        Type string\n        ID   string\n        Name string\n    }\n    Version      string\n    EventSubtype string `structpb:\"event_subtype\"`\n    Operation    struct {\n        Zone string\n        Type string\n        ID   string\n        Name string\n    }\n}\n\nfunc NewActivityPayload(payload *structpb.Struct) *ActivityPayload {\n    var res ActivityPayload\n    structpbconv.Convert(payload, &res)\n    return &res\n}\n```\n\n`ActivityPayload`\u69cb\u9020\u4f53\u306f\uff0c activity_log \u306e\u30da\u30a4\u30ed\u30fc\u30c9\u306b\u5408\u308f\u305b\u3066\u4f5c\u6210\u3059\u308b\uff0e\n\u5b9f\u969b\u306f JSON \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u3067\uff0c\u5c0f\u6587\u5b57+\u30a2\u30f3\u30c0\u30fc\u30d0\u30fc\u306a\u3069\u547d\u540d\u898f\u5247\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u306e\u5bfe\u5fdc\u4ed8\u3051\u306b\u306f\uff0c\n`structpb` \u30bf\u30b0\u3092\u7528\u3044\u308b\uff0e\n\n\u5148\u307b\u3069\u306e\u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u30fc\u53d6\u5f97\u3068\u5408\u308f\u305b\u308b\u3068\uff0c\n\n```go\n// \u30a4\u30d9\u30f3\u30c8\u30bf\u30a4\u30d7\u304c GCE_OPERATION_DONE \u306e\u30ed\u30b0\u3060\u3051\u3092\u53d6\u5f97\u3059\u308b\niter := client.Entries(ctx, logadmin.Filter(\"jsonPayload.event_type = \\\"GCE_OPERATION_DONE\\\"\"))\nfor {\n    e, err := iter.Next()\n    if err == iterator.Done {\n        return nil\n    } else if err != nil {\n        return err\n    }\n\n    // logging.Entry\u578b\u306e\u30ed\u30b0\u30c7\u30fc\u30bf e \u306b\u5bfe\u3059\u308b\u64cd\u4f5c\n    if s, ok := e.Payload.(*structpb.Struct); ok {\n        payload := NewActivityPayload(s)\n\n        fmt.Println(payload.TraceID) // trace_id \u3092\u51fa\u529b\n    }\n\n}\n```\n\n\u306a\u3069\u306e\u3088\u3046\u306b\u30ed\u30b0\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\u3067\u304d\u308b\uff0e\n", "tags": ["Go", "golang", "GoogleCloudPlatform"]}