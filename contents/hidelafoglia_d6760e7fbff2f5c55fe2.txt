{"context": " More than 1 year has passed since last update.Ubuntu/Debian\u3067Kerberos\u95a2\u4fc2\u30d1\u30c3\u30b1\u30fc\u30b8\u3044\u308c\u308b(libapache2-mod-auth-kerb\u3044\u308c\u305f\u3089\u3044\u308d\u3044\u308d\u5165\u308b):\n$ sudo apt-get install krb5-user libkrb5-dev -y\n\npython-gssapi \u3092pip\u3067\u5165\u308c\u308b\n$ pip install python-gssapi\n\nDjango\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b app/middleware.py\u3092\u4f5c\u308b:\n\n    from django.contrib import auth\n    from django.contrib.auth.models import User\n    from django.conf import settings\n    from django.http import HttpResponse\n    import uuid\n    import gssapi\n    import base64\n\n    def create_user_from(peer_name):\n        ''' peer_name \u304cKerberos\u3067\u5e30\u3063\u3066\u6765\u305f\u6642\u306b\u30e6\u30fc\u30b6\u30fc\u3092\u30ed\u30fc\u30c9\n        \u3082\u3057\u304f\u306f\u4f5c\u6210\u3059\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3 '''\n\n        try:\n            return User.objects.get(username=peer_name)\n\n        except User.DoesNotExist:\n            user = User.objects.create_user(\n                username=peer_name,\n                password=uuid.uuid1().hex,    # \u30d1\u30b9\u30ef\u30fc\u30c9\u9069\u5f53\u30e9\u30f3\u30c0\u30e0\n                email=peer_name,)             \n            return user\n        return None\n\n\n    class AuthMiddleware(object):\n        ''' \u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a8\u30a2\u672c\u4f53 '''\n\n        def process_request(self, request):\n            out_token = None\n\n            if request.META.get('HTTP_AUTHORIZATION','').startswith('Negotiate '):\n\n                # KDC/Domain Controller\u3068SPN\u3067\u63a5\u7d9a\n                service_name = gssapi.Name(settings.SPN, gssapi.C_NT_HOSTBASED_SERVICE)\n                server_cred = gssapi.Credential(service_name, usage=gssapi.C_ACCEPT)\n                ctx = gssapi.AcceptContext(server_cred)\n\n        \u3000\u3000\u3000\u3000\u3000# Negotiate\u30c8\u30fc\u30af\u30f3\u3092\u691c\u8a3c\n                in_token = base64.b64decode(request.META['HTTP_AUTHORIZATION'][10:])\n                out_token = ctx.step(in_token)\n\n                if ctx.established:     # Negotiated\u3055\u308c\u305f\n\n                    user = create_user_from(str(ctx.peer_name))    #:Django\u306e\u30ed\u30fc\u30ab\u30eb\u30e6\u30fc\u30b6\u30fc\u53d6\u5f97\n\n                    if user:\n                        user.backend = 'django.contrib.auth.backends.ModelBackend' \n                        auth.login(request, user)                      # \u8a8d\u8a3c\n                        setattr(request, \"spnego_token\", out_token)    # Response\u3067\u4f7f\u3046\n                        return None                                  \u3000# \u51e6\u7406\u7d99\u7d9a\n\n            # \u30d6\u30e9\u30a6\u30b6\u306bKDC/Domain Controller\u306bNegatiate\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3057\u3066\u3082\u3089\u3046\n            response = HttpResponse(status = 401)\n            response['WWW-Authenticate'] = 'Negotiate %s' % (\n                out_token and base64.b64encode(out_token) or ''\n            )\n            return response\n\n\n        def process_response(self, request, response):\n            ''' \u30c8\u30fc\u30af\u30f3\u304c\u3042\u3063\u305f\u3089\u307e\u305f\u30d6\u30e9\u30a6\u30b6\u306b\u904b\u3093\u3067\u3082\u3089\u3046 '''\n            out_token = getattr(request, \"spnego_token\", None)\n            if out_token:\n                response['WWW-Authenticate'] = 'Negotiate %s' % base64.b64encode(out_token)\n\n            return response\n\n\nsettings.py:\n\n    import os\n\n    INSTALLED_APPS += (\n        'todo',\n    )\n\n    MIDDLEWARE_CLASSES += (\n        'app.middleware.AuthMiddleware',\n    )\n    os.environ['KRB5_KTNAME'] = '/etc/hdknr.krb5.http.keytab'    #Keytab\u30d5\u30a1\u30a4\u30eb\u3092 $KRB5_KTNAME\u306b\u8a2d\u5b9a\n    SPN = 'HTTP@ubuntu.openid.local'                        \u3000\u3000\u3000#\u30b5\u30fc\u30d3\u30b9\u30d7\u30ea\u30f3\u30b7\u30d1\u30eb\u540d\n\nActive Directory\u3067SPN\u3068Keytab\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u308a\u65b9\u3068\u30d6\u30e9\u30a6\u30b6\u306e\u8a2d\u5b9a\u306f\u3053\u3061\u3089\u3068\u540c\u3058 \n\nUbuntu/Debian\u3067Kerberos\u95a2\u4fc2\u30d1\u30c3\u30b1\u30fc\u30b8\u3044\u308c\u308b(libapache2-mod-auth-kerb\u3044\u308c\u305f\u3089\u3044\u308d\u3044\u308d\u5165\u308b):\n\n    $ sudo apt-get install krb5-user libkrb5-dev -y\n    \npython-gssapi \u3092pip\u3067\u5165\u308c\u308b\n\n    $ pip install python-gssapi\n    \n    \nDjango\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b app/middleware.py\u3092\u4f5c\u308b:\n\n```py\n\n    from django.contrib import auth\n    from django.contrib.auth.models import User\n    from django.conf import settings\n    from django.http import HttpResponse\n    import uuid\n    import gssapi\n    import base64\n\n    def create_user_from(peer_name):\n        ''' peer_name \u304cKerberos\u3067\u5e30\u3063\u3066\u6765\u305f\u6642\u306b\u30e6\u30fc\u30b6\u30fc\u3092\u30ed\u30fc\u30c9\n        \u3082\u3057\u304f\u306f\u4f5c\u6210\u3059\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3 '''\n        \n        try:\n            return User.objects.get(username=peer_name)\n\n        except User.DoesNotExist:\n            user = User.objects.create_user(\n                username=peer_name,\n                password=uuid.uuid1().hex,    # \u30d1\u30b9\u30ef\u30fc\u30c9\u9069\u5f53\u30e9\u30f3\u30c0\u30e0\n                email=peer_name,)             \n            return user\n        return None\n                \n\n    class AuthMiddleware(object):\n        ''' \u8a8d\u8a3c\u30df\u30c9\u30eb\u30a6\u30a8\u30a2\u672c\u4f53 '''\n        \n        def process_request(self, request):\n            out_token = None\n\n            if request.META.get('HTTP_AUTHORIZATION','').startswith('Negotiate '):\n               \n                # KDC/Domain Controller\u3068SPN\u3067\u63a5\u7d9a\n                service_name = gssapi.Name(settings.SPN, gssapi.C_NT_HOSTBASED_SERVICE)\n                server_cred = gssapi.Credential(service_name, usage=gssapi.C_ACCEPT)\n                ctx = gssapi.AcceptContext(server_cred)\n\n        \u3000\u3000\u3000\u3000\u3000# Negotiate\u30c8\u30fc\u30af\u30f3\u3092\u691c\u8a3c\n                in_token = base64.b64decode(request.META['HTTP_AUTHORIZATION'][10:])\n                out_token = ctx.step(in_token)\n\n                if ctx.established:     # Negotiated\u3055\u308c\u305f\n                    \n                    user = create_user_from(str(ctx.peer_name))    #:Django\u306e\u30ed\u30fc\u30ab\u30eb\u30e6\u30fc\u30b6\u30fc\u53d6\u5f97\n                    \n                    if user:\n                        user.backend = 'django.contrib.auth.backends.ModelBackend' \n                        auth.login(request, user)                      # \u8a8d\u8a3c\n                        setattr(request, \"spnego_token\", out_token)    # Response\u3067\u4f7f\u3046\n                        return None                                  \u3000# \u51e6\u7406\u7d99\u7d9a\n\n            # \u30d6\u30e9\u30a6\u30b6\u306bKDC/Domain Controller\u306bNegatiate\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3057\u3066\u3082\u3089\u3046\n            response = HttpResponse(status = 401)\n            response['WWW-Authenticate'] = 'Negotiate %s' % (\n                out_token and base64.b64encode(out_token) or ''\n            )\n            return response\n                \n\n        def process_response(self, request, response):\n            ''' \u30c8\u30fc\u30af\u30f3\u304c\u3042\u3063\u305f\u3089\u307e\u305f\u30d6\u30e9\u30a6\u30b6\u306b\u904b\u3093\u3067\u3082\u3089\u3046 '''\n            out_token = getattr(request, \"spnego_token\", None)\n            if out_token:\n                response['WWW-Authenticate'] = 'Negotiate %s' % base64.b64encode(out_token)\n\n            return response\n                \n```\n\nsettings.py:\n\n```py\n\n    import os\n    \n    INSTALLED_APPS += (\n        'todo',\n    )\n\n    MIDDLEWARE_CLASSES += (\n        'app.middleware.AuthMiddleware',\n    )\n    os.environ['KRB5_KTNAME'] = '/etc/hdknr.krb5.http.keytab'    #Keytab\u30d5\u30a1\u30a4\u30eb\u3092 $KRB5_KTNAME\u306b\u8a2d\u5b9a\n    SPN = 'HTTP@ubuntu.openid.local'                        \u3000\u3000\u3000#\u30b5\u30fc\u30d3\u30b9\u30d7\u30ea\u30f3\u30b7\u30d1\u30eb\u540d\n```\n\n    \nActive Directory\u3067SPN\u3068Keytab\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u308a\u65b9\u3068\u30d6\u30e9\u30a6\u30b6\u306e\u8a2d\u5b9a\u306f[\u3053\u3061\u3089\u3068\u540c\u3058](http://qiita.com/hidelafoglia/items/00916344b6f314ae07b2)   \n\n\n                \n", "tags": ["ActiveDirectory", "Django", "SPNEGO"]}