{"context": "\u3053\u306e\u8a18\u4e8b\u306f\u3001Milkcocoa Advent Calendar 2016 17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\u67a0\u304c\u7a7a\u3044\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001\u9045\u308c\u3070\u305b\u306a\u304c\u3089\u66f8\u304b\u305b\u3066\u9802\u304d\u307e\u3059\u3002\ud83d\ude47\n\nESPr \u00d7 Milkcocoa for Arduino SDK\n11\u6708\u306b\u660e\u661f\u548c\u697d\u3068\u3044\u3046IT\u30d5\u30a7\u30b9\u30c6\u30a3\u30d0\u30eb\u3067\u3001\u30a2\u30fc\u30c8\u3092\u30c6\u30fc\u30de\u306b\u3057\u305fIoT\u306e\u5c55\u793a\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n\n\u4eca\u5e74\u306eMashupAwards\u306b\u3082\u30a8\u30f3\u30c8\u30ea\u30fc\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\nhttp://hacklog.jp/works/49919\n\u5c55\u793a\u7269\u306b\u306f\u3001ESPr Developer\uff08ESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c9\uff09\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001ESPr\u306b\u306fArduino\u306e\u30b9\u30b1\u30c3\u30c1\u3092\u76f4\u63a5\u66f8\u304d\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001Milkcocoa\u306eArduinoSDK\u3092\u4f7f\u3063\u305f\u30b9\u30b1\u30c3\u30c1\u3092\u305d\u306e\u307e\u307e\u6d41\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u52d5\u4f5c\u3068\u3057\u3066\u306f\u3001\n\nESPr\u3067WiFi\u306b\u63a5\u7d9a\u3059\u308b\nMilkcocoa\u3078\u306e\u30c7\u30fc\u30bfpush\u3092onpush()\u3067\u76e3\u8996\u3057\u3066\u3001\u51e6\u7406\u3092\u884c\u3046\n\n\u3068\u3044\u3046\u7c21\u5358\u306a\u3082\u306e\u3067\u3059\u3002\nsetColor\u5468\u308a\u306f\u3001\u4f5c\u6210\u3057\u305fIoT\u30c7\u30d0\u30a4\u30b9\u306eLED\u8272\u3092\u5909\u3048\u308b\u51e6\u7406\u3067\u3059\u3002\uff08\u4eca\u56de\u306f\u8a73\u7d30\u5272\u611b\u3057\u307e\u3059\u3002\uff09\n\u5b9f\u969b\u306fArduinoIDE\u3067\u4f5c\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306a\u306e\u3067\u62e1\u5f35\u5b50\u304c.ino\u3067\u3059\u304c\u3001\u30b3\u30fc\u30c9\u30cf\u30a4\u30e9\u30a4\u30c8\u6709\u52b9\u5316\u306e\u305f\u3081.c\u3067\u8a18\u8f09\u3057\u3066\u3044\u307e\u3059\u3002\n\nsample.c\n#include <Milkcocoa.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266HTTPClient.h>\n#include <Adafruit_NeoPixel.h>\n\n#define MILKCOCOA_APP_ID    \"<your-milkcocoa-app-id>\"\n#define MILKCOCOA_DATASTORE_NETWORK \"network_status\"\n#define MILKCOCOA_DATASTORE_COLOR \"color\"\n#define MILKCOCOA_SERVERPORT    1883\n#define MAX_VAL 64 // 0 to 255 for brightness\n\nconst char* ssid = \"<your-wifi-ssid>\";\nconst char* password = \"<your-wifi-password>\";\nconst char MQTT_SERVER[] PROGMEM    = MILKCOCOA_APP_ID \".mlkcca.com\";\nconst char MQTT_CLIENTID[] PROGMEM  = __TIME__ MILKCOCOA_APP_ID;\nboolean connectedStatus = false;\nint colorCode = 1;\n\nWiFiServer server(80);\nWiFiClient client;\nMilkcocoa milkcocoa = Milkcocoa(&client, MQTT_SERVER, MILKCOCOA_SERVERPORT, MILKCOCOA_APP_ID, MQTT_CLIENTID);\nAdafruit_NeoPixel pixel = Adafruit_NeoPixel(60, 12, NEO_GRB + NEO_KHZ800);\n\nextern \"C\" {\n    #include \"user_interface.h\"\n}\n\nvoid onpush(DataElement *elem);\nvoid setup() {\n    Serial.begin(115200);\n\n    // Connect to WiFi network\n    Serial.println();\n    Serial.print(\"Connecting to \");\n    Serial.println(ssid);\n\n    WiFi.begin(ssid, password);\n    while (WiFi.status() != WL_CONNECTED) {\n        delay(500);\n        Serial.print(\".\");\n    }\n    Serial.println(\"\");\n    Serial.println(\"WiFi connected\");\n\n    // Start the server\n    server.begin();\n    Serial.println(\"Server started\");\n\n    // Print the IP address\n    Serial.println(WiFi.localIP());\n\n    pixel.begin();\n    pixel.show(); // Initialize all pixels to 'off'\n\n    // Milkcocoa\n    milkcocoa.on(MILKCOCOA_DATASTORE_COLOR, \"push\", onpush);\n}\n\nvoid loop() {\n    if (!connectedStatus) {\n        milkcocoa.loop();\n        DataElement elem = DataElement();\n        elem.setValue(\"status\", \"connected\");\n        milkcocoa.push(MILKCOCOA_DATASTORE_NETWORK, &elem);\n        connectedStatus = true;\n    }\n    milkcocoa.loop();\n}\n\nvoid onpush(DataElement *elem) {\n    Serial.println(elem->getInt(\"colorCode\"));\n    colorCode = elem->getInt(\"colorCode\");\n    setColor(colorCode);\n}\n\nvoid setColor(uint16_t colorCode) {\n    uint16_t i;\n    switch (colorCode) {\n        case 1:\n            // red\n            for (i=0; i<pixel.numPixels(); i++) {\n                pixel.setPixelColor(i, pixel.Color(MAX_VAL, 0, 0));\n                pixel.show();\n            }\n            break;\n        case 2:\n            // green\n            for (i=0; i<pixel.numPixels(); i++) {\n                pixel.setPixelColor(i, pixel.Color(0, MAX_VAL, 0));\n                pixel.show();\n            }\n            break;\n        case 3:\n            // blue\n            for (i=0; i<pixel.numPixels(); i++) {\n                pixel.setPixelColor(i, pixel.Color(0, 0, MAX_VAL));\n                pixel.show();\n            }\n            break;\n    }\n}\n\n\n\n\u307e\u3068\u3081\nArduino\u7cfb\u306eIoT\u30dc\u30fc\u30c9\u3067\u306f\u3001SDK\u306e\u304a\u304b\u3052\u3067\u7c21\u5358\u306bMilkcocoa\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002ESPr\u306fWiFi\u3055\u3048\u3042\u308c\u3070\u305d\u308c\u5358\u4f53\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u63a5\u7d9a\u53ef\u80fd\u306a\u306e\u3067\u3001Milkcocoa\u3068\u306e\u76f8\u6027\u306f\u629c\u7fa4\u3067\u3059\u3002\n\u3053\u3061\u3089\u306e\u767a\u8868\u8cc7\u6599\u306b\u3082\u6982\u8981\u3092\u8f09\u305b\u3066\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u8208\u5473\u3042\u308b\u65b9\u306f\u305c\u3072\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n#\u660e\u661f\u548c\u697d2016 \u3067 #Milkcocoa \u306b\u7e4b\u304c\u308b LED\u30c7\u30d0\u30a4\u30b9\u3092\u5c55\u793a\u3057\u307e\u3057\u305f\u3002\nhttps://speakerdeck.com/shanonim/art-iot-in-myojyo-waraku-2016\n\n\n\u3053\u306e\u8a18\u4e8b\u306f\u3001[Milkcocoa Advent Calendar 2016](http://qiita.com/advent-calendar/2016/milkcocoa) 17\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\u67a0\u304c\u7a7a\u3044\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001\u9045\u308c\u3070\u305b\u306a\u304c\u3089\u66f8\u304b\u305b\u3066\u9802\u304d\u307e\u3059\u3002\ud83d\ude47\n\n## ESPr \u00d7 Milkcocoa for Arduino SDK\n\n11\u6708\u306b[\u660e\u661f\u548c\u697d](http://2016.myojowaraku.net/)\u3068\u3044\u3046IT\u30d5\u30a7\u30b9\u30c6\u30a3\u30d0\u30eb\u3067\u3001\u30a2\u30fc\u30c8\u3092\u30c6\u30fc\u30de\u306b\u3057\u305fIoT\u306e\u5c55\u793a\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n<img width=\"768\" alt=\"IMG_1957.JPG\" src=\"https://qiita-image-store.s3.amazonaws.com/0/38442/5a1d1f4f-a083-341b-7bb4-6e3aee720487.jpeg\">\n\n\u4eca\u5e74\u306eMashupAwards\u306b\u3082\u30a8\u30f3\u30c8\u30ea\u30fc\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\nhttp://hacklog.jp/works/49919\n\n\u5c55\u793a\u7269\u306b\u306f\u3001[ESPr Developer\uff08ESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c9\uff09](https://www.switch-science.com/catalog/2500/)\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001ESPr\u306b\u306fArduino\u306e\u30b9\u30b1\u30c3\u30c1\u3092\u76f4\u63a5\u66f8\u304d\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001<b>Milkcocoa\u306eArduinoSDK\u3092\u4f7f\u3063\u305f\u30b9\u30b1\u30c3\u30c1\u3092\u305d\u306e\u307e\u307e\u6d41\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd</b>\u3067\u3059\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u52d5\u4f5c\u3068\u3057\u3066\u306f\u3001\n\n- ESPr\u3067WiFi\u306b\u63a5\u7d9a\u3059\u308b\n- Milkcocoa\u3078\u306e\u30c7\u30fc\u30bfpush\u3092`onpush()`\u3067\u76e3\u8996\u3057\u3066\u3001\u51e6\u7406\u3092\u884c\u3046\n\n\u3068\u3044\u3046\u7c21\u5358\u306a\u3082\u306e\u3067\u3059\u3002\n`setColor`\u5468\u308a\u306f\u3001\u4f5c\u6210\u3057\u305fIoT\u30c7\u30d0\u30a4\u30b9\u306eLED\u8272\u3092\u5909\u3048\u308b\u51e6\u7406\u3067\u3059\u3002\uff08\u4eca\u56de\u306f\u8a73\u7d30\u5272\u611b\u3057\u307e\u3059\u3002\uff09\n\n\u5b9f\u969b\u306fArduinoIDE\u3067\u4f5c\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306a\u306e\u3067\u62e1\u5f35\u5b50\u304c`.ino`\u3067\u3059\u304c\u3001\u30b3\u30fc\u30c9\u30cf\u30a4\u30e9\u30a4\u30c8\u6709\u52b9\u5316\u306e\u305f\u3081`.c`\u3067\u8a18\u8f09\u3057\u3066\u3044\u307e\u3059\u3002\n\n```sample.c\n#include <Milkcocoa.h>\n#include <ESP8266WiFi.h>\n#include <ESP8266HTTPClient.h>\n#include <Adafruit_NeoPixel.h>\n\n#define MILKCOCOA_APP_ID    \"<your-milkcocoa-app-id>\"\n#define MILKCOCOA_DATASTORE_NETWORK \"network_status\"\n#define MILKCOCOA_DATASTORE_COLOR \"color\"\n#define MILKCOCOA_SERVERPORT    1883\n#define MAX_VAL 64 // 0 to 255 for brightness\n\nconst char* ssid = \"<your-wifi-ssid>\";\nconst char* password = \"<your-wifi-password>\";\nconst char MQTT_SERVER[] PROGMEM    = MILKCOCOA_APP_ID \".mlkcca.com\";\nconst char MQTT_CLIENTID[] PROGMEM  = __TIME__ MILKCOCOA_APP_ID;\nboolean connectedStatus = false;\nint colorCode = 1;\n\nWiFiServer server(80);\nWiFiClient client;\nMilkcocoa milkcocoa = Milkcocoa(&client, MQTT_SERVER, MILKCOCOA_SERVERPORT, MILKCOCOA_APP_ID, MQTT_CLIENTID);\nAdafruit_NeoPixel pixel = Adafruit_NeoPixel(60, 12, NEO_GRB + NEO_KHZ800);\n\nextern \"C\" {\n    #include \"user_interface.h\"\n}\n\nvoid onpush(DataElement *elem);\nvoid setup() {\n    Serial.begin(115200);\n\n    // Connect to WiFi network\n    Serial.println();\n    Serial.print(\"Connecting to \");\n    Serial.println(ssid);\n\n    WiFi.begin(ssid, password);\n    while (WiFi.status() != WL_CONNECTED) {\n        delay(500);\n        Serial.print(\".\");\n    }\n    Serial.println(\"\");\n    Serial.println(\"WiFi connected\");\n\n    // Start the server\n    server.begin();\n    Serial.println(\"Server started\");\n\n    // Print the IP address\n    Serial.println(WiFi.localIP());\n\n    pixel.begin();\n    pixel.show(); // Initialize all pixels to 'off'\n\n    // Milkcocoa\n    milkcocoa.on(MILKCOCOA_DATASTORE_COLOR, \"push\", onpush);\n}\n\nvoid loop() {\n    if (!connectedStatus) {\n        milkcocoa.loop();\n        DataElement elem = DataElement();\n        elem.setValue(\"status\", \"connected\");\n        milkcocoa.push(MILKCOCOA_DATASTORE_NETWORK, &elem);\n        connectedStatus = true;\n    }\n    milkcocoa.loop();\n}\n\nvoid onpush(DataElement *elem) {\n    Serial.println(elem->getInt(\"colorCode\"));\n    colorCode = elem->getInt(\"colorCode\");\n    setColor(colorCode);\n}\n\nvoid setColor(uint16_t colorCode) {\n    uint16_t i;\n    switch (colorCode) {\n        case 1:\n            // red\n            for (i=0; i<pixel.numPixels(); i++) {\n                pixel.setPixelColor(i, pixel.Color(MAX_VAL, 0, 0));\n                pixel.show();\n            }\n            break;\n        case 2:\n            // green\n            for (i=0; i<pixel.numPixels(); i++) {\n                pixel.setPixelColor(i, pixel.Color(0, MAX_VAL, 0));\n                pixel.show();\n            }\n            break;\n        case 3:\n            // blue\n            for (i=0; i<pixel.numPixels(); i++) {\n                pixel.setPixelColor(i, pixel.Color(0, 0, MAX_VAL));\n                pixel.show();\n            }\n            break;\n    }\n}\n```\n\n## \u307e\u3068\u3081\nArduino\u7cfb\u306eIoT\u30dc\u30fc\u30c9\u3067\u306f\u3001SDK\u306e\u304a\u304b\u3052\u3067\u7c21\u5358\u306bMilkcocoa\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002ESPr\u306fWiFi\u3055\u3048\u3042\u308c\u3070\u305d\u308c\u5358\u4f53\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u63a5\u7d9a\u53ef\u80fd\u306a\u306e\u3067\u3001Milkcocoa\u3068\u306e\u76f8\u6027\u306f\u629c\u7fa4\u3067\u3059\u3002\n\n\u3053\u3061\u3089\u306e\u767a\u8868\u8cc7\u6599\u306b\u3082\u6982\u8981\u3092\u8f09\u305b\u3066\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u8208\u5473\u3042\u308b\u65b9\u306f\u305c\u3072\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n- #\u660e\u661f\u548c\u697d2016 \u3067 #Milkcocoa \u306b\u7e4b\u304c\u308b LED\u30c7\u30d0\u30a4\u30b9\u3092\u5c55\u793a\u3057\u307e\u3057\u305f\u3002\nhttps://speakerdeck.com/shanonim/art-iot-in-myojyo-waraku-2016\n", "tags": ["Arduino", "milkcocoa", "ESP8266", "ESP-WROOM-02", "ESPr_Developer"]}