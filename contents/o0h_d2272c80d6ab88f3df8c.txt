{"context": "@todo \u3061\u3083\u3093\u3068\u52d5\u4f5c\u691c\u8a3c\n@todo \u5404\u30af\u30e9\u30b9\u306e\u8a73\u7d30\u30fb\u5f79\u5272\u5206\u62c5\u306b\u3064\u3044\u3066\u66f8\u304f\n\u73fe\u5728\u3001\u696d\u52d9\u3067API\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u3057\u3066\u3044\u307e\u3059\u3002\nAPI\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u300c\u30a8\u30e9\u30fc\u306e\u5f62\u5f0f\u304c\u6c7a\u307e\u3063\u3066\u300d\u3044\u307e\u3059\u3002\n\u305d\u306e\u6642\u306b\u3001 _view\u306b\u5165\u3063\u3066\u3044\u308b\u5909\u6570\u3092\u3068\u3063\u3066\u305d\u306e\u4e2d\u306e $code\u304cXXX $sub_code\u304cYYY $message\u304cZZZ \u307f\u305f\u3044\u306a\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u3001\u6bce\u56de\u66f8\u304f\uff1f3\u3064\u3082\uff1f\u305d\u308c\u3063\u3066\u30fb\u30fb\u30fb\n\u3042\u307e\u308a\u7a4f\u3084\u304b\u3058\u3083\u306a\u3044\u306d\u3001\u3068\u611f\u3058\u305f\u6b21\u7b2c\u3067\u3059\u3002\n\u203b\u5b9f\u969b\u306b\u306f\u3082\u3046\u5c11\u3057\u8907\u96d1\u3002\u7aef\u6298\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u5927\u4f53\u3053\u3093\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\u300c\u540c\u3058\u3088\u3046\u306a\u51e6\u7406\u306a\u3089\u300d\u300c\u540c\u3058\u66f8\u304d\u65b9\u3092\u300d\u300c\u3057\u304b\u3082\u3001\u306a\u308b\u3079\u304f\u7c21\u6f54\u30fb\u4e00\u76ee\u77ad\u7136\u306b\u300d\u3084\u308b\u306e\u304c\u7f8e\u3057\u304f\u306a\u3044\u3067\u3059\u304b\uff1f\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u300c\u30a8\u30e9\u30fc\u6642\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u300d\u3092\u4e38\u3063\u3068\u307e\u3068\u3081\u3066\u3057\u307e\u3048\u3070\u697d\u3058\u3083\u306a\u3044\u3067\u3059\u304b\uff01\uff01\u3068\u601d\u3063\u305f\u308f\u3051\u3067\u3059\u3002\n\n\u4f5c\u308a\u305f\u3044\u30e2\u30ce\n\u4f8b\u3048\u3070\u3001Twitter\u306eREST API\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3001\u305d\u306e\u5185\u5bb9\u3092\u691c\u67fb\u3059\u308b\u30e2\u30ce\uff01\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3068\u3044\u3046\u60f3\u5b9a\u3067\u30b9\u30b9\u30e1\u307e\u3059\u3002\n{\n    \"errors\":   [\n        {\"message\":\"Sorry, that page does not exist\",\"code\":34},\n        {\"message\":\"User not found.\",\"code\":50},\n        {\"message\":\"Sorry, you are not authorized to see this status\",\"code\": 179}\n    ]\n}\n\n\u203b\u3042\u304f\u307e\u3067\u300c\u4f8b\u300d\u3067\u3059\u3088\uff01\u5b9f\u969b\u306b\u306f\u30b3\u30ec\u3089\u306e\u30a8\u30e9\u30fc\u304c\u3001\u307e\u3057\u3066\u540c\u6642\u306b\u8907\u6570\u500b\u8fd4\u3063\u3066\u304f\u308b\u3063\u3051\uff1f\u3068\u304b\u7a81\u3063\u8fbc\u3080\u306e\u306f\u91ce\u66ae\u3067\u3059\u3002\ncf: Error Codes & Responses \u2014 Twitter Developers\n\u30b3\u30ec\u306b\u5bfe\u3057\u3066\u3001\n$this->assertErrorCode(34, $errors, '\u5b58\u5728\u3057\u306a\u3044\u306f\u305a\u306e\u30da\u30fc\u30b8\u306e\u72b6\u614b\u3092\u691c\u77e5\u3067\u304d\u3066\u3044\u306a\u3044');\n$this->assertErrorCode(50, $errors, '\u5b58\u5728\u3057\u306a\u3044\u306f\u305a\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u72b6\u614b\u3092\u691c\u77e5\u3067\u304d\u3066\u3044\u306a\u3044');\n$this->assertErrorCode(179, $errors, '\u30a2\u30af\u30bb\u30b9\u8cc7\u683c\u306e\u306a\u3044\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u3066\u3057\u307e\u3063\u3066\u3044\u308b');\n\n\u3068\u304b\u3084\u308c\u308b\u3068 = \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u3044\u3061\u3044\u3061\u30c7\u30b3\u30fc\u30c9\u3057\u3066key/value\u30c1\u30a7\u30c3\u30af\u3092\u3057\u3066\u30fb\u30fb\u3063\u3066\u66f8\u304f\u3088\u308a\u30b7\u30e5\u30c3\u3068\u3059\u308b\u306e\u3067\u300c\u30c6\u30b9\u30c8\u3057\u305f\u3044\u5185\u5bb9\u3092\u3001\u30b3\u30fc\u30c9\u306b\u660e\u77ad\u306b\u843d\u3068\u3057\u8fbc\u3081\u308b\u300d\u3067\u3059\u3002\n\n\u5b9f\u88c5\u6982\u8981(PHPUnit\u306eAPI)\n\u516c\u5f0fdoc\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\u3057\u3063\u304b\u308a\u8a00\u53ca\u3055\u308c\u3066\u3044\u307e\u3059\u306d\n->  \u30ab\u30b9\u30bf\u30e0\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\u306a\u308b\u307b\u3069\u3001\u3069\u3046\u3084\u3089 Constraint matcher \u53ca\u3073 TestCase \u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3068\u3044\u3046\u306e\u304c\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u306a\u308a\u305d\u3046\u3067\u3059\u306d\u3002\n\u30fb\u30fb\u3068\u306f\u3044\u3048\u3001\u500b\u4eba\u7684\u306b\u306f\u300c\u3061\u3087\u3063\u3068\u99c6\u3051\u8db3\u6c17\u5473\u300d\u3042\u308b\u3044\u306f\u300c\u3084\u3084\u30aa\u30e9\u3064\u3044\u305f\u300d\u8a18\u8ff0\u3067\u306f\u30fb\u30fb\u30fb\u3068\u3044\u3046\u5370\u8c61\u3092\u53d7\u3051\u307e\u3057\u305f\u3002\n\u5177\u4f53\u4f8b\u304c\u6b32\u3057\u3044\u3067\u3059\u306d\u3002\u751f\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\nConstraint\n\n\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30b8\u30c3\u30af\u3092\u3001\u305d\u308c\u305e\u308c\u72ec\u7acb\u3057\u305f\u30af\u30e9\u30b9\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3044\u304d\u307e\u3059\n\n\n\nassertXxx() \u306e\u5b9f\u4f53\n\n\u3053\u308c\u304c\u5f79\u5272\u7684\u306b\u300cTestCase\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u300d\u306e\u4ee3\u308f\u308a\u3092\u3057\u3066\u3044\u308b\u30a4\u30e1\u30fc\u30b8\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\n\u30aa\u30de\u30b1:\n\u79c1\u306fCakePHP\u3092\u666e\u6bb5\u4f7f\u3063\u3066\u3044\u308b\u3082\u306e\u3067\u3059\u304b\u3089\u3001Cake\u3067\u306e\u5b9f\u88c5\u4f8b\u3082\u4f75\u305b\u3066\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\n\nclass EventFired extends PHPUnit_Framework_Constraint\nassertEventFired()\n\n\n\u5b9f\u88c5\u3092\u3057\u3066\u307f\u3088\u3046\n\n\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3068\u30ed\u30b8\u30c3\u30af\n\u3069\u3093\u306a\u3082\u306e\u304c\u3042\u308c\u3070\u826f\u3044\u3067\u3057\u3087\u3046\uff1f\n\u300c\u691c\u67fb\u5bfe\u8c61(json\u6587\u5b57\u5217)\u300d\u306b\u5bfe\u3057\u3066\u300ccode message \u306e\u305d\u308c\u305e\u308c\u306e\u30ad\u30fc\u304c\u5b58\u5728\u3057\u300d\u300c\u304b\u3064\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306b\u6e21\u3055\u308c\u305f\u5185\u5bb9\u3068\u5408\u81f4\u3059\u308b\u300d\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u3001\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u5982\u4f55\u3067\u3057\u3087\u3046\u3002\n\u611a\u76f4\u306b\u66f8\u304d\u4e0b\u3059\u306a\u3089\u3053\u3093\u306a\u611f\u3058\u306b\u3002\n$data = json_decode($json);\nif (! $json) {\n  return false;\n}\nif (! (property_exists($json, 'code') && property_exists($json, 'message'))) {\n  return false;\n}\n\nreturn ($json->code === $expected_code, && $json->message === $expected_message);\n\n\u3053\u308c\u3092\u300c\u30ed\u30b8\u30c3\u30af\u300d\u3068\u3057\u3066\u3001\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30e1\u30bd\u30c3\u30c9\u306e\u30ed\u30b8\u30c3\u30af\u306fconstraint\u306b\u7d44\u307f\u8fbc\u3080\u3068\u3044\u3046\u304a\u4f5c\u6cd5\u306b\u5f93\u3063\u3066\u3001\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001 (__construct()\u3068)matches()toString()\u3068\u3044\u3046public\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u304a\u3051\u3070  \u307d\u3044\u3067\u3059\u3002\nclass ApiResponse extends PHPUnit_Framework_Constraint\n{\n    // \u691c\u67fb\u5bfe\u8c61\u3068\u306a\u308b\u5185\u5bb9\u3092\u683c\u7d0d\u3059\u308b\n    private $data;\n\n    // expected\u3068\u306e\u6bd4\u8f03\u3092\u884c\u3046\u524d\u306e\u30d5\u30a7\u30fc\u30ba\u3067\u300c\u5931\u6557\u300d\u3055\u305b\u308b\u4e8b\u3082\u53ef\u80fd\n    public function __constuct(string $json)\n    {\n        $data = json_decode($json);\n        if (! $data) {\n            // FailedError\u3092\u6295\u3052\u308b\u3053\u3068\u3067\u3001\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u5931\u6557\u3055\u305b\u3089\u308c\u308b\n            throw new PHPUnit_Framework_AssertionFailedError('Failed to parse json.');\n        }\n        if (! (is_object($json) && property_exists($json, 'code') && property_exists($json, 'message')) {\n            return false;\n        }\n\n        $this->data = $data;\n    }\n\n    public function matches($expected)\n    {\n        // \u5931\u6557\u306a\u3089false\u3001\u6210\u529f\u306a\u3089true\u3092\u8fd4\u3059\u3060\u3051\u3067OK\n        return (\n            $this->data->code === $expected['code']) &&\n            $this->data->message = $expected['message']\n        );\n    }\n\n    public toString()\n    {\n        return sprintf('%s has not valid code and message.', json_encode($this->data));\n    }\n}\n\n\u30ed\u30b8\u30c3\u30af\u306f\u3067\u304d\u307e\u3057\u305f\u3002\u3042\u3068\u306f\u300c\u547c\u3073\u51fa\u3057\u5143\u300d\u3067\u3059\u3002\n\u3053\u308c\u304c\u300cTestCase\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u300d\u3068\u3044\u3046\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\nclass AssertApiResponse extends  PHPUnit_Framework_TestCase\n{\n    public funciton assertApiResponse($code, $messsage, $content, $message = '')\n    {\n        $this->assertThat(compact('code', 'message'), new ApiResponse($content), $message);\n    }\n}\n\n\u3042\u3068\u306f\u3001\u3053\u3093\u306a\u5f62\u3067\u53d6\u5f97\u3057\u305f\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u5bfe\u3059\u308b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n$error = $response['errors'][0];\n$this->assertApiResponse(34, 'Sorry, that page does not exist', $error, '\u5b58\u5728\u3057\u306a\u3044\u306f\u305a\u306e\u30da\u30fc\u30b8\u306e\u72b6\u614b\u3092\u691c\u77e5\u3067\u304d\u3066\u3044\u306a\u3044');\n\n@todo \u3061\u3083\u3093\u3068\u52d5\u4f5c\u691c\u8a3c\n@todo \u5404\u30af\u30e9\u30b9\u306e\u8a73\u7d30\u30fb\u5f79\u5272\u5206\u62c5\u306b\u3064\u3044\u3066\u66f8\u304f\n\n\u73fe\u5728\u3001\u696d\u52d9\u3067API\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u3057\u3066\u3044\u307e\u3059\u3002\nAPI\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u300c\u30a8\u30e9\u30fc\u306e\u5f62\u5f0f\u304c\u6c7a\u307e\u3063\u3066\u300d\u3044\u307e\u3059\u3002\n\u305d\u306e\u6642\u306b\u3001 _view\u306b\u5165\u3063\u3066\u3044\u308b\u5909\u6570\u3092\u3068\u3063\u3066\u305d\u306e\u4e2d\u306e `$code\u304cXXX` `$sub_code\u304cYYY` `$message\u304cZZZ` \u307f\u305f\u3044\u306a\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u3001\u6bce\u56de\u66f8\u304f\uff1f3\u3064\u3082\uff1f\u305d\u308c\u3063\u3066\u30fb\u30fb\u30fb\n\u3042\u307e\u308a\u7a4f\u3084\u304b\u3058\u3083\u306a\u3044\u306d\u3001\u3068\u611f\u3058\u305f\u6b21\u7b2c\u3067\u3059\u3002\n\u203b\u5b9f\u969b\u306b\u306f\u3082\u3046\u5c11\u3057\u8907\u96d1\u3002\u7aef\u6298\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u5927\u4f53\u3053\u3093\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\n\u300c\u540c\u3058\u3088\u3046\u306a\u51e6\u7406\u306a\u3089\u300d\u300c\u540c\u3058\u66f8\u304d\u65b9\u3092\u300d\u300c\u3057\u304b\u3082\u3001\u306a\u308b\u3079\u304f\u7c21\u6f54\u30fb\u4e00\u76ee\u77ad\u7136\u306b\u300d\u3084\u308b\u306e\u304c\u7f8e\u3057\u304f\u306a\u3044\u3067\u3059\u304b\uff1f\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u300c\u30a8\u30e9\u30fc\u6642\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u300d\u3092\u4e38\u3063\u3068\u307e\u3068\u3081\u3066\u3057\u307e\u3048\u3070\u697d\u3058\u3083\u306a\u3044\u3067\u3059\u304b\uff01\uff01\u3068\u601d\u3063\u305f\u308f\u3051\u3067\u3059\u3002\n\n## \u4f5c\u308a\u305f\u3044\u30e2\u30ce\n\u4f8b\u3048\u3070\u3001Twitter\u306eREST API\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3001\u305d\u306e\u5185\u5bb9\u3092\u691c\u67fb\u3059\u308b\u30e2\u30ce\uff01\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u3068\u3044\u3046\u60f3\u5b9a\u3067\u30b9\u30b9\u30e1\u307e\u3059\u3002\n\n```json\n{\n\t\"errors\": \t[\n\t\t{\"message\":\"Sorry, that page does not exist\",\"code\":34},\n\t\t{\"message\":\"User not found.\",\"code\":50},\n\t\t{\"message\":\"Sorry, you are not authorized to see this status\",\"code\": 179}\n\t]\n}\n```\n\u203b\u3042\u304f\u307e\u3067\u300c\u4f8b\u300d\u3067\u3059\u3088\uff01\u5b9f\u969b\u306b\u306f\u30b3\u30ec\u3089\u306e\u30a8\u30e9\u30fc\u304c\u3001\u307e\u3057\u3066\u540c\u6642\u306b\u8907\u6570\u500b\u8fd4\u3063\u3066\u304f\u308b\u3063\u3051\uff1f\u3068\u304b\u7a81\u3063\u8fbc\u3080\u306e\u306f\u91ce\u66ae\u3067\u3059\u3002\ncf: [Error Codes & Responses \u2014 Twitter Developers](https://dev.twitter.com/overview/api/response-codes)\n\n\n\u30b3\u30ec\u306b\u5bfe\u3057\u3066\u3001\n\n```php\n$this->assertErrorCode(34, $errors, '\u5b58\u5728\u3057\u306a\u3044\u306f\u305a\u306e\u30da\u30fc\u30b8\u306e\u72b6\u614b\u3092\u691c\u77e5\u3067\u304d\u3066\u3044\u306a\u3044');\n$this->assertErrorCode(50, $errors, '\u5b58\u5728\u3057\u306a\u3044\u306f\u305a\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u72b6\u614b\u3092\u691c\u77e5\u3067\u304d\u3066\u3044\u306a\u3044');\n$this->assertErrorCode(179, $errors, '\u30a2\u30af\u30bb\u30b9\u8cc7\u683c\u306e\u306a\u3044\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u3066\u3057\u307e\u3063\u3066\u3044\u308b');\n```\n\u3068\u304b\u3084\u308c\u308b\u3068 = \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u3044\u3061\u3044\u3061\u30c7\u30b3\u30fc\u30c9\u3057\u3066key/value\u30c1\u30a7\u30c3\u30af\u3092\u3057\u3066\u30fb\u30fb\u3063\u3066\u66f8\u304f\u3088\u308a\u30b7\u30e5\u30c3\u3068\u3059\u308b\u306e\u3067\u300c\u30c6\u30b9\u30c8\u3057\u305f\u3044\u5185\u5bb9\u3092\u3001\u30b3\u30fc\u30c9\u306b\u660e\u77ad\u306b\u843d\u3068\u3057\u8fbc\u3081\u308b\u300d\u3067\u3059\u3002\n\n## \u5b9f\u88c5\u6982\u8981(PHPUnit\u306eAPI)\n\u516c\u5f0fdoc\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u3002\u3057\u3063\u304b\u308a\u8a00\u53ca\u3055\u308c\u3066\u3044\u307e\u3059\u306d\n->  [\u30ab\u30b9\u30bf\u30e0\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210](https://phpunit.de/manual/current/ja/extending-phpunit.html#extending-phpunit.custom-assertions)\n\u306a\u308b\u307b\u3069\u3001\u3069\u3046\u3084\u3089 `Constraint` `matcher` \u53ca\u3073 `TestCase \u306e\u30b5\u30d6\u30af\u30e9\u30b9`\u3068\u3044\u3046\u306e\u304c\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u306a\u308a\u305d\u3046\u3067\u3059\u306d\u3002\n\u30fb\u30fb\u3068\u306f\u3044\u3048\u3001\u500b\u4eba\u7684\u306b\u306f\u300c\u3061\u3087\u3063\u3068\u99c6\u3051\u8db3\u6c17\u5473\u300d\u3042\u308b\u3044\u306f\u300c\u3084\u3084\u30aa\u30e9\u3064\u3044\u305f\u300d\u8a18\u8ff0\u3067\u306f\u30fb\u30fb\u30fb\u3068\u3044\u3046\u5370\u8c61\u3092\u53d7\u3051\u307e\u3057\u305f\u3002\n\u5177\u4f53\u4f8b\u304c\u6b32\u3057\u3044\u3067\u3059\u306d\u3002\u751f\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n* [Constraint](https://github.com/sebastianbergmann/phpunit/tree/9758eee6421efd997a42fe850f74292a490e9c70/src/Framework/Constraint)\n\t* \u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30b8\u30c3\u30af\u3092\u3001\u305d\u308c\u305e\u308c\u72ec\u7acb\u3057\u305f\u30af\u30e9\u30b9\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3044\u304d\u307e\u3059\n* [`assertXxx()` \u306e\u5b9f\u4f53](https://github.com/sebastianbergmann/phpunit/blob/master/src/Framework/Assert/Functions.php)\n  * \u3053\u308c\u304c\u5f79\u5272\u7684\u306b\u300cTestCase\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u300d\u306e\u4ee3\u308f\u308a\u3092\u3057\u3066\u3044\u308b\u30a4\u30e1\u30fc\u30b8\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\u30aa\u30de\u30b1:\n\u79c1\u306fCakePHP\u3092\u666e\u6bb5\u4f7f\u3063\u3066\u3044\u308b\u3082\u306e\u3067\u3059\u304b\u3089\u3001Cake\u3067\u306e\u5b9f\u88c5\u4f8b\u3082\u4f75\u305b\u3066\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\n\n* [class EventFired extends PHPUnit_Framework_Constraint](https://github.com/cakephp/cakephp/blob/master/src/TestSuite/Constraint/EventFired.php)\n* [assertEventFired()](https://github.com/cakephp/cakephp/blob/b1acd2d40ca22e05ec3c98ca96d0678a5b24af39/src/TestSuite/TestCase.php#L154)\n\n## \u5b9f\u88c5\u3092\u3057\u3066\u307f\u3088\u3046\n### \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3068\u30ed\u30b8\u30c3\u30af\n\u3069\u3093\u306a\u3082\u306e\u304c\u3042\u308c\u3070\u826f\u3044\u3067\u3057\u3087\u3046\uff1f\n\u300c\u691c\u67fb\u5bfe\u8c61(json\u6587\u5b57\u5217)\u300d\u306b\u5bfe\u3057\u3066\u300c`code` `message` \u306e\u305d\u308c\u305e\u308c\u306e\u30ad\u30fc\u304c\u5b58\u5728\u3057\u300d\u300c\u304b\u3064\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306b\u6e21\u3055\u308c\u305f\u5185\u5bb9\u3068\u5408\u81f4\u3059\u308b\u300d\u3053\u3068\u3092\u4fdd\u8a3c\u3059\u308b\u3001\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u5982\u4f55\u3067\u3057\u3087\u3046\u3002\n\u611a\u76f4\u306b\u66f8\u304d\u4e0b\u3059\u306a\u3089\u3053\u3093\u306a\u611f\u3058\u306b\u3002\n\n```php\n$data = json_decode($json);\nif (! $json) {\n  return false;\n}\nif (! (property_exists($json, 'code') && property_exists($json, 'message'))) {\n  return false;\n}\n\nreturn ($json->code === $expected_code, && $json->message === $expected_message);\n```\n\n\u3053\u308c\u3092\u300c\u30ed\u30b8\u30c3\u30af\u300d\u3068\u3057\u3066\u3001\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30e1\u30bd\u30c3\u30c9\u306e\u30ed\u30b8\u30c3\u30af\u306fconstraint\u306b\u7d44\u307f\u8fbc\u3080\u3068\u3044\u3046\u304a\u4f5c\u6cd5\u306b\u5f93\u3063\u3066\u3001\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001 (`__construct()`\u3068)`matches()``toString()`\u3068\u3044\u3046public\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u304a\u3051\u3070 :ok: \u307d\u3044\u3067\u3059\u3002\n\n```php\nclass ApiResponse extends PHPUnit_Framework_Constraint\n{\n\t// \u691c\u67fb\u5bfe\u8c61\u3068\u306a\u308b\u5185\u5bb9\u3092\u683c\u7d0d\u3059\u308b\n\tprivate $data;\n\t\n    // expected\u3068\u306e\u6bd4\u8f03\u3092\u884c\u3046\u524d\u306e\u30d5\u30a7\u30fc\u30ba\u3067\u300c\u5931\u6557\u300d\u3055\u305b\u308b\u4e8b\u3082\u53ef\u80fd\n    public function __constuct(string $json)\n    {\n    \t$data = json_decode($json);\n    \tif (! $data) {\n    \t\t// FailedError\u3092\u6295\u3052\u308b\u3053\u3068\u3067\u3001\u4efb\u610f\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3092\u5931\u6557\u3055\u305b\u3089\u308c\u308b\n    \t\tthrow new PHPUnit_Framework_AssertionFailedError('Failed to parse json.');\n   \t\t}\n\t\tif (! (is_object($json) && property_exists($json, 'code') && property_exists($json, 'message')) {\n  \t\t\treturn false;\n\t\t}\n\t\t\n\t\t$this->data = $data;\n    }\n    \n    public function matches($expected)\n    {\n    \t// \u5931\u6557\u306a\u3089false\u3001\u6210\u529f\u306a\u3089true\u3092\u8fd4\u3059\u3060\u3051\u3067OK\n    \treturn (\n    \t\t$this->data->code === $expected['code']) &&\n    \t\t$this->data->message = $expected['message']\n    \t);\n    }\n    \n    public toString()\n    {\n    \treturn sprintf('%s has not valid code and message.', json_encode($this->data));\n    }\n}\n```\n\n\u30ed\u30b8\u30c3\u30af\u306f\u3067\u304d\u307e\u3057\u305f\u3002\u3042\u3068\u306f\u300c\u547c\u3073\u51fa\u3057\u5143\u300d\u3067\u3059\u3002\n\u3053\u308c\u304c\u300cTestCase\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u300d\u3068\u3044\u3046\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\n\n```php\nclass AssertApiResponse extends  PHPUnit_Framework_TestCase\n{\n\tpublic funciton assertApiResponse($code, $messsage, $content, $message = '')\n\t{\n\t\t$this->assertThat(compact('code', 'message'), new ApiResponse($content), $message);\n\t}\n}\n```\n\n\u3042\u3068\u306f\u3001\u3053\u3093\u306a\u5f62\u3067\u53d6\u5f97\u3057\u305f\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u5bfe\u3059\u308b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n```php\n$error = $response['errors'][0];\n$this->assertApiResponse(34, 'Sorry, that page does not exist', $error, '\u5b58\u5728\u3057\u306a\u3044\u306f\u305a\u306e\u30da\u30fc\u30b8\u306e\u72b6\u614b\u3092\u691c\u77e5\u3067\u304d\u3066\u3044\u306a\u3044');\n```\n", "tags": ["PHPUnit"]}