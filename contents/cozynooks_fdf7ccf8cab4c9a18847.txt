{"context": " More than 1 year has passed since last update.\u524d\u56de\u3067View\u3092\u5206\u5272\u3067\u304d\u305f\u306e\u3067\u3001\u4eca\u56de\u306f\u632f\u308b\u821e\u3044\u90e8\u5206\u3092\u5206\u5272\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u300c\u632f\u308b\u821e\u3044\u300d\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u3044\u3046\u3068\u300c\u30a4\u30d9\u30f3\u30c8\u3092\u6355\u6349\u3057\u3066\u3001\u4ed6\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u6307\u793a\u3092\u4e0e\u3048\u308b\u300d\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\u4eca\u56de\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u632f\u308b\u821e\u3044\u90e8\u5206\u3068\u3044\u3046\u3068\n- \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u521d\u671f\u5316\u6642\u306e\u30ea\u30b9\u30c8\u306e\u63cf\u753b\n- Tweet\u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u306e\u6355\u6349\u3068Collection\u306b\u8ffd\u52a0\u306e\u6307\u793a\n\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n_.extend({}, Backbone.Events);\u306b\u632f\u308b\u821e\u3044\u3092\u6271\u3046\u90e8\u5206\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\nFormView.post\u30e1\u30bd\u30c3\u30c9\u304c\u3084\u3063\u3066\u3044\u305fModel\u306e\u8ffd\u52a0\u3092Collection\u304c\u6271\u3046\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\u306a\u306e\u3067\u3068\u3066\u3082\u5197\u9577\u306a\u66f8\u304d\u65b9\u306b\u306a\u308a\u307e\u3059\u306d\u3002\nTweet\u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\u3067FormView.post\u30e1\u30bd\u30c3\u30c9\u304ctweet\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u706b\u3057\u3066App.addTweet\u3067Collection\u306eModel\u306e\u8ffd\u52a0\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3001\u3001\u3001\n\u3053\u306e\u898f\u6a21\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3060\u3068\u3042\u307e\u308a\u30e1\u30ea\u30c3\u30c8\u306f\u611f\u3058\u3089\u308c\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u4f7f\u3044\u305f\u3044\u3068\u304d\u306b\u4f7f\u3044\u305f\u3044\u3060\u3051\u4f7f\u3048\u308bBackbone.js\u306e\u826f\u3055\u304b\u60aa\u3055\u304b\u3001\u898f\u6a21\u306b\u5fdc\u3058\u3066\u4f7f\u3046\u4f7f\u308f\u306a\u3044\u306f\u6c7a\u3081\u3066\u3044\u3051\u308b\u308f\u3051\u3067\u3059\u306d\u3002\u4ed6\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u3093\u3067\u3057\u3087\u3046\u304b\u3002\nTweetListView.initialize\u304c\u62c5\u3063\u3066\u3044\u305f\u521d\u671f\u5316\u6642\u306b\u5168\u4f53\u3092\u63cf\u753b\u3059\u308b\u90e8\u5206\u3068\u4e00\u5b9a\u9593\u9694\u3067\u5dee\u5206\u306e\u6570\u3092\u8868\u793a\u3059\u308b\u30b3\u30fc\u30c9\u3092App.initialize\u306b\u79fb\u52d5\u3057\u3066\u5b8c\u4e86\u3002\n\u30d5\u30a1\u30a4\u30eb\u5168\u4f53\u3092\u8f09\u305b\u3066\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u6700\u5f8c\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nRouter\u3068History\u3068\u3044\u3046\u3055\u3089\u306b\u4fbf\u5229\u306a\u6a5f\u80fd\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u5225\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u8b72\u308a\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n<!doctype html>\n<!-- paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ -->\n<!--[if lt IE 7]> <html class=\"no-js lt-ie9 lt-ie8 lt-ie7\" lang=\"ja\"> <![endif]-->\n<!--[if IE 7]>    <html class=\"no-js lt-ie9 lt-ie8\" lang=\"ja\"> <![endif]-->\n<!--[if IE 8]>    <html class=\"no-js lt-ie9\" lang=\"ja\"> <![endif]-->\n<!--[if gt IE 8]><!--> <html class=\"no-js\" lang=\"ja\"> <!--<![endif]-->\n    <head>\n        <meta charset=\"utf-8\">\n        <meta charset=utf-8>\n        <title>myTwitter</title>\n\n         <!-- Loading Bootstrap -->\n        <link href=\"css/bootstrap.css\" rel=\"stylesheet\">\n\n        <!-- Loading Flat UI -->\n        <link href=\"css/flat-ui.css\" rel=\"stylesheet\">\n\n       <!--[if lt IE 9]> HTML5Shiv\n            <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>\n        <![endif]-->\n    </head>\n    <body>\n        <div class=\"container\">\n            <h1>myTwitter</h1>\n            <div id=\"mytwitterapp\">\n                <form action=\"\" method=\"post\" accept-charset=\"utf-8\" class=\"form-horizontal form\">\n                    <input type=\"text\" name=\"\" value=\"\" placeholder=\"\">\n                    <a href=\"#\" class=\"btn btn-large\" id=\"tweet\">Tweet</a>\n                </form>\n                <p id=\"difference\" style=\"display: none;\">\n                    \u65b0\u3057\u3044Tweet\u304c <span id=\"number\"></span> \u4ef6\u3042\u308a\u307e\u3059\u3002 <a href=\"#\" id=\"showDifference\">\u8868\u793a</a>\n                </p>\n                <ul id=\"tweet-list\" style=\"list-style: none;\">\n                    <li></li>\n                </ul>\n            </div>\n        </div>\n\n\n<script type=\"text/template\" id=\"li-template\">\n- <%- tweet %>\n</script>\n        <script src=\"http://code.jquery.com/jquery-1.9.1.min.js\"></script>\n        <script src=\"js/underscore-min.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n        <script src=\"js/backbone-min.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n        <script type=\"text/javascript\">\n        $(function() {\n            var Tweet = Backbone.Model.extend({\n                defaults: {\n                    id: '',\n                    tweet: ''\n                },\n                validate: function(attrs) {\n                    if ( _.isEmpty(attrs.tweet) ) {\n                        return 'tweet must not be empty';\n                    }\n                },\n                initialize: function() {\n                    this.on('invalid', function(model, error) {\n                        alert(error);\n                    })\n                }\n            });\n\n\n            var Tweets = Backbone.Collection.extend({\n                url: '/myTwitter/cakeapi/tweets',\n                model: Tweet,\n\n                parse: function(response) {\n                    return response.tweets;\n                },\n                addTweet: function(data) {\n                    var model = new Tweet();\n                    if (model.set(data, {validate: true})) {\n                        this.create(data);\n                    }\n                }\n            });\n            tweets = new Tweets();\n\n\n            var TweetView = Backbone.View.extend({\n\n                tagName: 'li',\n                template: _.template($('#li-template').html()),\n\n                render: function() {\n                        var template = this.template(this.model.toJSON());\n                        this.$el.html(template);\n                        return this;\n                }\n            });\n\n\n            var TweetListView = Backbone.View.extend({\n\n                events: {\n                    \"click #showDifference\": \"reload\"\n                },\n\n                initialize: function() {\n                    this.listenTo(tweets, 'add', this.addLi);\n                    this.listenTo(tweets, 'reset', this.render);\n                },\n\n                render: function() {\n                    $('ul').html('<li></li>');\n                    tweets.each(this.addLi, this);\n                },\n\n                addLi: function(tweet) {\n                    var view = new TweetView({model: tweet});\n                    this.$('li:first').before(view.render().el);\n                },\n\n                fetchNewTweet: function() {\n                    self = this;\n                    lastTweet = tweets.length;\n                    tweets.fetch({\n                        silent: true,\n                        success: function(collection) {\n                            self.showDifference(collection);\n                        }\n                    });\n                },\n\n                showDifference: function(collection) {\n                    number = collection.models.length - lastTweet;\n                    if (number) {\n                        $('#number').html(number);\n                        $('#difference').show();\n                    }\n                },\n\n                reload: function() {\n                    tweets.fetch();\n                    $('#difference').hide();\n                }\n            });\n            ListView = new TweetListView({el: '#mytwitterapp'});\n\n\n            var TweetFormView = Backbone.View.extend({\n\n                el: '.form',\n\n                events: {\n                    \"click #tweet\": \"post\"\n                },\n\n                post: function() {\n                    var input = this.$('input');\n                    this.trigger('tweet', {tweet: input.val()});\n                    input.val('');\n                }\n            });\n            FormView = new TweetFormView();\n\n\n            App = _.extend({\n                initialize: function() {\n                    this.listenTo(FormView, 'tweet', this.addTweet);\n                    tweets.fetch();\n                    setInterval(function() {\n                        ListView.fetchNewTweet()\n                    }, 10000 * 2);\n                },\n\n                addTweet: function(data) {\n                    tweets.addTweet(data);\n                }\n\n            }, Backbone.Events);\n            App.initialize();\n\n        });\n        </script>\n    </body>\n</html>\n\n[\u524d\u56de](http://qiita.com/items/d100e3c2b95bac76dae5)\u3067View\u3092\u5206\u5272\u3067\u304d\u305f\u306e\u3067\u3001\u4eca\u56de\u306f\u632f\u308b\u821e\u3044\u90e8\u5206\u3092\u5206\u5272\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u300c\u632f\u308b\u821e\u3044\u300d\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u3044\u3046\u3068\u300c\u30a4\u30d9\u30f3\u30c8\u3092\u6355\u6349\u3057\u3066\u3001\u4ed6\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u6307\u793a\u3092\u4e0e\u3048\u308b\u300d\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u4eca\u56de\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u632f\u308b\u821e\u3044\u90e8\u5206\u3068\u3044\u3046\u3068\n- \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u521d\u671f\u5316\u6642\u306e\u30ea\u30b9\u30c8\u306e\u63cf\u753b\n- Tweet\u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\u30a4\u30d9\u30f3\u30c8\u306e\u6355\u6349\u3068Collection\u306b\u8ffd\u52a0\u306e\u6307\u793a\n\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\n_.extend({}, Backbone.Events);\u306b\u632f\u308b\u821e\u3044\u3092\u6271\u3046\u90e8\u5206\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\nFormView.post\u30e1\u30bd\u30c3\u30c9\u304c\u3084\u3063\u3066\u3044\u305fModel\u306e\u8ffd\u52a0\u3092Collection\u304c\u6271\u3046\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\u306a\u306e\u3067\u3068\u3066\u3082\u5197\u9577\u306a\u66f8\u304d\u65b9\u306b\u306a\u308a\u307e\u3059\u306d\u3002\nTweet\u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\u3067FormView.post\u30e1\u30bd\u30c3\u30c9\u304ctweet\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u706b\u3057\u3066App.addTweet\u3067Collection\u306eModel\u306e\u8ffd\u52a0\u3092\u884c\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3001\u3001\u3001\n\n\u3053\u306e\u898f\u6a21\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3060\u3068\u3042\u307e\u308a\u30e1\u30ea\u30c3\u30c8\u306f\u611f\u3058\u3089\u308c\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u4f7f\u3044\u305f\u3044\u3068\u304d\u306b\u4f7f\u3044\u305f\u3044\u3060\u3051\u4f7f\u3048\u308bBackbone.js\u306e\u826f\u3055\u304b\u60aa\u3055\u304b\u3001\u898f\u6a21\u306b\u5fdc\u3058\u3066\u4f7f\u3046\u4f7f\u308f\u306a\u3044\u306f\u6c7a\u3081\u3066\u3044\u3051\u308b\u308f\u3051\u3067\u3059\u306d\u3002\u4ed6\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u3093\u3067\u3057\u3087\u3046\u304b\u3002\n\nTweetListView.initialize\u304c\u62c5\u3063\u3066\u3044\u305f\u521d\u671f\u5316\u6642\u306b\u5168\u4f53\u3092\u63cf\u753b\u3059\u308b\u90e8\u5206\u3068\u4e00\u5b9a\u9593\u9694\u3067\u5dee\u5206\u306e\u6570\u3092\u8868\u793a\u3059\u308b\u30b3\u30fc\u30c9\u3092App.initialize\u306b\u79fb\u52d5\u3057\u3066\u5b8c\u4e86\u3002\n\n\u30d5\u30a1\u30a4\u30eb\u5168\u4f53\u3092\u8f09\u305b\u3066\u3053\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u6700\u5f8c\u306b\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nRouter\u3068History\u3068\u3044\u3046\u3055\u3089\u306b\u4fbf\u5229\u306a\u6a5f\u80fd\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u5225\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u8b72\u308a\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```html\n<!doctype html>\n<!-- paulirish.com/2008/conditional-stylesheets-vs-css-hacks-answer-neither/ -->\n<!--[if lt IE 7]> <html class=\"no-js lt-ie9 lt-ie8 lt-ie7\" lang=\"ja\"> <![endif]-->\n<!--[if IE 7]>    <html class=\"no-js lt-ie9 lt-ie8\" lang=\"ja\"> <![endif]-->\n<!--[if IE 8]>    <html class=\"no-js lt-ie9\" lang=\"ja\"> <![endif]-->\n<!--[if gt IE 8]><!--> <html class=\"no-js\" lang=\"ja\"> <!--<![endif]-->\n    <head>\n        <meta charset=\"utf-8\">\n        <meta charset=utf-8>\n        <title>myTwitter</title>\n\n         <!-- Loading Bootstrap -->\n        <link href=\"css/bootstrap.css\" rel=\"stylesheet\">\n\n        <!-- Loading Flat UI -->\n        <link href=\"css/flat-ui.css\" rel=\"stylesheet\">\n\n       <!--[if lt IE 9]> HTML5Shiv\n            <script src=\"//html5shiv.googlecode.com/svn/trunk/html5.js\"></script>\n        <![endif]-->\n    </head>\n    <body>\n        <div class=\"container\">\n            <h1>myTwitter</h1>\n            <div id=\"mytwitterapp\">\n                <form action=\"\" method=\"post\" accept-charset=\"utf-8\" class=\"form-horizontal form\">\n                    <input type=\"text\" name=\"\" value=\"\" placeholder=\"\">\n                    <a href=\"#\" class=\"btn btn-large\" id=\"tweet\">Tweet</a>\n                </form>\n                <p id=\"difference\" style=\"display: none;\">\n                    \u65b0\u3057\u3044Tweet\u304c <span id=\"number\"></span> \u4ef6\u3042\u308a\u307e\u3059\u3002 <a href=\"#\" id=\"showDifference\">\u8868\u793a</a>\n                </p>\n                <ul id=\"tweet-list\" style=\"list-style: none;\">\n                    <li></li>\n                </ul>\n            </div>\n        </div>\n\n\n<script type=\"text/template\" id=\"li-template\">\n- <%- tweet %>\n</script>\n        <script src=\"http://code.jquery.com/jquery-1.9.1.min.js\"></script>\n        <script src=\"js/underscore-min.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n        <script src=\"js/backbone-min.js\" type=\"text/javascript\" charset=\"utf-8\"></script>\n        <script type=\"text/javascript\">\n        $(function() {\n            var Tweet = Backbone.Model.extend({\n                defaults: {\n                    id: '',\n                    tweet: ''\n                },\n                validate: function(attrs) {\n                    if ( _.isEmpty(attrs.tweet) ) {\n                        return 'tweet must not be empty';\n                    }\n                },\n                initialize: function() {\n                    this.on('invalid', function(model, error) {\n                        alert(error);\n                    })\n                }\n            });\n\n\n            var Tweets = Backbone.Collection.extend({\n                url: '/myTwitter/cakeapi/tweets',\n                model: Tweet,\n\n                parse: function(response) {\n                    return response.tweets;\n                },\n                addTweet: function(data) {\n                    var model = new Tweet();\n                    if (model.set(data, {validate: true})) {\n                        this.create(data);\n                    }\n                }\n            });\n            tweets = new Tweets();\n\n\n            var TweetView = Backbone.View.extend({\n\n                tagName: 'li',\n                template: _.template($('#li-template').html()),\n\n                render: function() {\n                        var template = this.template(this.model.toJSON());\n                        this.$el.html(template);\n                        return this;\n                }\n            });\n\n\n            var TweetListView = Backbone.View.extend({\n\n                events: {\n                    \"click #showDifference\": \"reload\"\n                },\n\n                initialize: function() {\n                    this.listenTo(tweets, 'add', this.addLi);\n                    this.listenTo(tweets, 'reset', this.render);\n                },\n\n                render: function() {\n                    $('ul').html('<li></li>');\n                    tweets.each(this.addLi, this);\n                },\n\n                addLi: function(tweet) {\n                    var view = new TweetView({model: tweet});\n                    this.$('li:first').before(view.render().el);\n                },\n\n                fetchNewTweet: function() {\n                    self = this;\n                    lastTweet = tweets.length;\n                    tweets.fetch({\n                        silent: true,\n                        success: function(collection) {\n                            self.showDifference(collection);\n                        }\n                    });\n                },\n\n                showDifference: function(collection) {\n                    number = collection.models.length - lastTweet;\n                    if (number) {\n                        $('#number').html(number);\n                        $('#difference').show();\n                    }\n                },\n\n                reload: function() {\n                    tweets.fetch();\n                    $('#difference').hide();\n                }\n            });\n            ListView = new TweetListView({el: '#mytwitterapp'});\n\n\n            var TweetFormView = Backbone.View.extend({\n                \n                el: '.form',\n\n                events: {\n                    \"click #tweet\": \"post\"\n                },\n\n                post: function() {\n                    var input = this.$('input');\n                    this.trigger('tweet', {tweet: input.val()});\n                    input.val('');\n                }\n            });\n            FormView = new TweetFormView();\n\n\n            App = _.extend({\n                initialize: function() {\n                    this.listenTo(FormView, 'tweet', this.addTweet);\n                    tweets.fetch();\n                    setInterval(function() {\n                        ListView.fetchNewTweet()\n                    }, 10000 * 2);\n                },\n\n                addTweet: function(data) {\n                    tweets.addTweet(data);\n                }\n\n            }, Backbone.Events);\n            App.initialize();\n\n        });\n        </script>\n    </body>\n</html>\n```", "tags": ["Backbone.js"]}