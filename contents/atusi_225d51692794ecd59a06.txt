{"context": "LINEbot\u3063\u30661on1\u3067\u3059\u3088\u306d\u3002\u3088\u304f\u3042\u308b\u30dc\u30c3\u30c8\u307f\u305f\u3044\u306b\u30b0\u30eb\u30fc\u30d7\u306b\u52a0\u3048\u308b\u3063\u3066\u51fa\u6765\u306a\u3044\u3067\u3059\u304b\u306d\uff1f\n\u3055\u3066\u3001LINE bot\u3067\u3059\u304cSSL\u306a\u30b5\u30fc\u30d0\u304c\u5fc5\u8981\u306a\u3068\u3053\u308d\u304c\u30cf\u30fc\u30c9\u30eb\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u306fhttps\u30ec\u30c7\u30a3\u30fc\u306aGAE\u3067\u3055\u304f\u3063\u3068\u4f5c\u3063\u3061\u3083\u3044\u307e\u3057\u3087\u3046\u3002\n\u554f\u984c\u306f\u3001meg send\u6642\u306bIP\u3092\u56fa\u5b9a\u3059\u308b\u65b9\u6cd5\u3067\u3059\u304c\u3053\u3053\u306f\u6ce5\u81ed\u304f\u3084\u308a\u307e\u3059\u3002\u5f8c\u307b\u3069\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\nPython\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\nflask\u4f7f\u3044\u307e\u3059\u306e\u3067\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u30fc\u5185\u306blib\u6398\u3063\u3066pip\u3057\u3061\u3083\u3044\u307e\u3057\u3087\u3046\n\nsh\n$ pip install -t lib flask\n\n\n\nGAE\u30bd\u30fc\u30b9\n\npython\n\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport logging\nimport urllib\nimport json\nfrom google.appengine.ext import vendor\nvendor.add('lib')\nfrom google.appengine.api import urlfetch\n\nfrom flask import Flask\nfrom flask import request\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n  return 'hello my line bot'\n\n@app.route('/callback', methods=[\"POST\"])\ndef linebot():\n  args = json.loads(request.get_data().decode('utf-8'))\n  logging.debug('kick from line server,\\n %s'%(args['result']))\n  for msg in args['result']:\n    kickBot( msg[\"content\"][\"from\"], msg[\"eventType\"], msg[\"content\"][\"text\"] )\n  return \"{}\"\n\ndef kickBot(tgt_id, event_type, msg_data):\n  url = \"https://trialbot-api.line.me/v1/events\"\n  form_fields = {\n      \"to\": [str(tgt_id)],\n      \"toChannel\": 1383378250,\n      \"eventType\": 138311608800106203,\n      \"content\":{\n        \"contentType\":1,\n        \"toType\":1,\n        \"text\":u\"\u5168\u88f8\u3067 %s !\"%(msg_data)\n        }\n      }\n  logging.debug(form_fields)\n  form_data = urllib.urlencode(form_fields)\n  result = urlfetch.fetch(\n    url=url,\n    payload=json.dumps(form_fields,ensure_ascii=False),\n    method=urlfetch.POST,\n    headers={\n                'Content-type':'application/json; charset=UTF-8',\n                'X-Line-ChannelID':'<YOUR-ID>',\n                'X-Line-ChannelSecret':'<YOUR-SECRET>',\n                'X-Line-Trusted-User-With-ACL':'<YOUR-ACL>?',\n            }\n    )\n  if result.status_code == 200:\n    logging.debug(result.content)\n  else:\n    logging.debug(result.content)\n\n\n\n\nyaml\napplication: <YOUR-GAE-NAME>\nversion: 1\nruntime: python27\napi_version: 1\nthreadsafe: yes\n\nhandlers:\n- url: /favicon\\.ico\n  static_files: favicon.ico\n  upload: favicon\\.ico\n\n- url: .*\n  script: main.app\n\n\n\nLINE bot\u306e\u8a2d\u5b9a\n\nCallBack\u306e\u8a2d\u5b9a\n/callback \u306bLINE\u30b5\u30fc\u30d0\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u3063\u3066\u3082\u3089\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nhttps://developers.line.me/channels/<YOUR-CHANNEL-ID> \nLINE\u306eDev\u30b3\u30f3\u30bd\u30fc\u30eb\u3067Callback URL\u306b\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nhttps://your-gae.appspot.com:443/callback\n\nWhitelist IP\u306e\u767b\u9332\u65b9\u6cd5\n\u4e0a\u8a18GAE\u30a2\u30d7\u30ea\u3092\u30ea\u30ea\u30fc\u30b9\u3057\u3066\u3001bot\u306b\u3064\u3076\u3084\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u6642\u70b9\u3067\u306f\u8fd4\u4fe1\u304c\u6765\u307e\u305b\u3093\u3002LINEbot\u30b5\u30fc\u30d0\u306b\u3001IP\u3092\u767b\u9332\u3057\u3066\u306a\u3044\u304b\u3089\u3067\u3059\u3002\nGAE\u3067\u3001\u516c\u958b\u3057\u305f\u30a2\u30d7\u30ea\u540d\u306b\u7d10\u4ed8\u3044\u3066\u3044\u308bIP\u3068\u3001urlfetch\u304c\u5b9f\u884c\u3055\u308c\u308b\u30b5\u30fc\u30d0\u306eIP\u306f\n\u540c\u4e00\u3058\u3083\u306a\u3044\u305f\u3081\u3001\u5b9f\u969b\u306bGAE\u304b\u3089LINEbot\u3092\u53e9\u3044\u3066IP\u3092\u8abf\u67fb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nGCP\u306eLogging\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u3001\u305d\u3093\u306aIP\u3057\u3089\u3093\u304c\u306a\uff01 \u307f\u305f\u3044\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u3093\u306a\u3084\u3064\u3067\u3059\u3002\n{\"statusCode\":\"427\",\"statusMessage\":\"Your ip address [\u4eca\u56de\u306e\u30a2\u30c9\u30ec\u30b9] is not allowed to access this API.\"}\n\n\u3053\u306e \u4eca\u56de\u306e\u30a2\u30c9\u30ec\u30b9 \u306b\u51fa\u3066\u3044\u308bIP\u3092\u3001LINE\u306eDev\u30b3\u30f3\u30bd\u30fc\u30eb\u306eWhiteList\u306b\u767b\u9332\u3057\u3061\u3083\u3044\u307e\u3059\u3002\u4f55\u56de\u304b\u3084\u3063\u305f\u3089\u3044\u304f\u3064\u304b\u9055\u3046\u306e\u304c\u51fa\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u90fd\u5ea6\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u79c1\u306e\u5834\u5408\uff13\u3064\u307b\u3069\u767b\u9332\u3057\u305f\u3068\u3053\u308d\u3067\u3001\u305d\u308c\u4ee5\u4e0a\u5897\u3048\u307e\u305b\u3093\u3067\u3057\u305f\u3002\uff08GAE\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u5909\u3048\u305f\u308a\u3001\u30c7\u30d7\u30ed\u30a4\u3082\u3057\u3066\u3044\u307e\u3059\uff09\n\u3053\u308c\u3067\u3001bot\u304b\u3089\u8fd4\u4e8b\u304c\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\u6ce8\u610f\n\u3053\u306e\u5b9f\u88c5\u306f\u3042\u304f\u307e\u3067\u30c1\u30a7\u30c3\u30af\u7528\u306e\u5b9f\u88c5\u3067\u3059\u3002\n\u30b7\u30f3\u30d7\u30eb\u306a\u30c6\u30ad\u30b9\u30c8\u306e\u307f\u306a\u306e\u3067\u3001\u30d3\u30c7\u30aa\u3060\u3063\u305f\u308a\u753b\u50cf\u3060\u3063\u305f\u308atype\u3092\u5909\u3048\u3066\u307f\u3066\u3069\u3046\u306a\u308b\u304b\uff1f\u30c1\u30a7\u30c3\u30af\u3059\u308b\u7a0b\u5ea6\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u7406\u7531\u306f\u3001\u3042\u308b\u7a0b\u5ea6\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3055\u3048\u634c\u3051\u306a\u3044\u305f\u3081\u3067\u3059\u3002 \u8a73\u7d30\u306f\u30b3\u30c1\u30e9\u3092\u30c1\u30a7\u30c3\u30af\n\u4eca\u5f8cTQ\u4f7f\u3063\u3066\u975e\u540c\u671f\u306b\u53d7\u3051\u6d41\u3059\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002\nLINEbot\u3063\u30661on1\u3067\u3059\u3088\u306d\u3002\u3088\u304f\u3042\u308b\u30dc\u30c3\u30c8\u307f\u305f\u3044\u306b\u30b0\u30eb\u30fc\u30d7\u306b\u52a0\u3048\u308b\u3063\u3066\u51fa\u6765\u306a\u3044\u3067\u3059\u304b\u306d\uff1f\n\n\u3055\u3066\u3001LINE bot\u3067\u3059\u304cSSL\u306a\u30b5\u30fc\u30d0\u304c\u5fc5\u8981\u306a\u3068\u3053\u308d\u304c\u30cf\u30fc\u30c9\u30eb\u4e0a\u3052\u3066\u3044\u307e\u3059\u3002\n\u3053\u3053\u306fhttps\u30ec\u30c7\u30a3\u30fc\u306aGAE\u3067\u3055\u304f\u3063\u3068\u4f5c\u3063\u3061\u3083\u3044\u307e\u3057\u3087\u3046\u3002\n\u554f\u984c\u306f\u3001meg send\u6642\u306bIP\u3092\u56fa\u5b9a\u3059\u308b\u65b9\u6cd5\u3067\u3059\u304c\u3053\u3053\u306f\u6ce5\u81ed\u304f\u3084\u308a\u307e\u3059\u3002\u5f8c\u307b\u3069\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n\n# Python\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\nflask\u4f7f\u3044\u307e\u3059\u306e\u3067\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\u30fc\u5185\u306blib\u6398\u3063\u3066pip\u3057\u3061\u3083\u3044\u307e\u3057\u3087\u3046\n\n```:sh\n$ pip install -t lib flask\n```\n\n# GAE\u30bd\u30fc\u30b9\n\n```:python \n\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport logging\nimport urllib\nimport json\nfrom google.appengine.ext import vendor\nvendor.add('lib')\nfrom google.appengine.api import urlfetch\n\nfrom flask import Flask\nfrom flask import request\n\napp = Flask(__name__)\n\n@app.route('/')\ndef index():\n  return 'hello my line bot'\n\n@app.route('/callback', methods=[\"POST\"])\ndef linebot():\n  args = json.loads(request.get_data().decode('utf-8'))\n  logging.debug('kick from line server,\\n %s'%(args['result']))\n  for msg in args['result']:\n    kickBot( msg[\"content\"][\"from\"], msg[\"eventType\"], msg[\"content\"][\"text\"] )\n  return \"{}\"\n\ndef kickBot(tgt_id, event_type, msg_data):\n  url = \"https://trialbot-api.line.me/v1/events\"\n  form_fields = {\n      \"to\": [str(tgt_id)],\n      \"toChannel\": 1383378250,\n      \"eventType\": 138311608800106203,\n      \"content\":{\n        \"contentType\":1,\n        \"toType\":1,\n        \"text\":u\"\u5168\u88f8\u3067 %s !\"%(msg_data)\n        }\n      }\n  logging.debug(form_fields)\n  form_data = urllib.urlencode(form_fields)\n  result = urlfetch.fetch(\n    url=url,\n    payload=json.dumps(form_fields,ensure_ascii=False),\n    method=urlfetch.POST,\n    headers={\n                'Content-type':'application/json; charset=UTF-8',\n                'X-Line-ChannelID':'<YOUR-ID>',\n                'X-Line-ChannelSecret':'<YOUR-SECRET>',\n                'X-Line-Trusted-User-With-ACL':'<YOUR-ACL>?',\n            }\n    )\n  if result.status_code == 200:\n    logging.debug(result.content)\n  else:\n    logging.debug(result.content)\n\n```\n\n```:yaml\napplication: <YOUR-GAE-NAME>\nversion: 1\nruntime: python27\napi_version: 1\nthreadsafe: yes\n\nhandlers:\n- url: /favicon\\.ico\n  static_files: favicon.ico\n  upload: favicon\\.ico\n\n- url: .*\n  script: main.app\n```\n\n# LINE bot\u306e\u8a2d\u5b9a\n\n## CallBack\u306e\u8a2d\u5b9a\n\n`/callback` \u306bLINE\u30b5\u30fc\u30d0\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u3063\u3066\u3082\u3089\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n`https://developers.line.me/channels/<YOUR-CHANNEL-ID>` \nLINE\u306eDev\u30b3\u30f3\u30bd\u30fc\u30eb\u3067Callback URL\u306b\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n`https://your-gae.appspot.com:443/callback`\n\n\n## Whitelist IP\u306e\u767b\u9332\u65b9\u6cd5\n\n\u4e0a\u8a18GAE\u30a2\u30d7\u30ea\u3092\u30ea\u30ea\u30fc\u30b9\u3057\u3066\u3001bot\u306b\u3064\u3076\u3084\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u6642\u70b9\u3067\u306f\u8fd4\u4fe1\u304c\u6765\u307e\u305b\u3093\u3002LINEbot\u30b5\u30fc\u30d0\u306b\u3001IP\u3092\u767b\u9332\u3057\u3066\u306a\u3044\u304b\u3089\u3067\u3059\u3002\nGAE\u3067\u3001\u516c\u958b\u3057\u305f\u30a2\u30d7\u30ea\u540d\u306b\u7d10\u4ed8\u3044\u3066\u3044\u308bIP\u3068\u3001urlfetch\u304c\u5b9f\u884c\u3055\u308c\u308b\u30b5\u30fc\u30d0\u306eIP\u306f\n\u540c\u4e00\u3058\u3083\u306a\u3044\u305f\u3081\u3001\u5b9f\u969b\u306bGAE\u304b\u3089LINEbot\u3092\u53e9\u3044\u3066IP\u3092\u8abf\u67fb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nGCP\u306eLogging\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u3001`\u305d\u3093\u306aIP\u3057\u3089\u3093\u304c\u306a\uff01` \u307f\u305f\u3044\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u3093\u306a\u3084\u3064\u3067\u3059\u3002\n\n```\n{\"statusCode\":\"427\",\"statusMessage\":\"Your ip address [\u4eca\u56de\u306e\u30a2\u30c9\u30ec\u30b9] is not allowed to access this API.\"}\n```\n\n\u3053\u306e `\u4eca\u56de\u306e\u30a2\u30c9\u30ec\u30b9` \u306b\u51fa\u3066\u3044\u308bIP\u3092\u3001LINE\u306eDev\u30b3\u30f3\u30bd\u30fc\u30eb\u306eWhiteList\u306b\u767b\u9332\u3057\u3061\u3083\u3044\u307e\u3059\u3002\u4f55\u56de\u304b\u3084\u3063\u305f\u3089\u3044\u304f\u3064\u304b\u9055\u3046\u306e\u304c\u51fa\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u90fd\u5ea6\u767b\u9332\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u79c1\u306e\u5834\u5408\uff13\u3064\u307b\u3069\u767b\u9332\u3057\u305f\u3068\u3053\u308d\u3067\u3001\u305d\u308c\u4ee5\u4e0a\u5897\u3048\u307e\u305b\u3093\u3067\u3057\u305f\u3002\uff08GAE\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u5909\u3048\u305f\u308a\u3001\u30c7\u30d7\u30ed\u30a4\u3082\u3057\u3066\u3044\u307e\u3059\uff09\n\n\u3053\u308c\u3067\u3001bot\u304b\u3089\u8fd4\u4e8b\u304c\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n<img width=\"297\" alt=\"\u30b9\u30af\u30b7\u30e7.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/4036/b865f59e-02d4-d26f-309a-1363c1778002.png\">\n\n\n# \u6ce8\u610f\n\n\u3053\u306e\u5b9f\u88c5\u306f\u3042\u304f\u307e\u3067\u30c1\u30a7\u30c3\u30af\u7528\u306e\u5b9f\u88c5\u3067\u3059\u3002\n\u30b7\u30f3\u30d7\u30eb\u306a\u30c6\u30ad\u30b9\u30c8\u306e\u307f\u306a\u306e\u3067\u3001\u30d3\u30c7\u30aa\u3060\u3063\u305f\u308a\u753b\u50cf\u3060\u3063\u305f\u308atype\u3092\u5909\u3048\u3066\u307f\u3066\u3069\u3046\u306a\u308b\u304b\uff1f\u30c1\u30a7\u30c3\u30af\u3059\u308b\u7a0b\u5ea6\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u7406\u7531\u306f\u3001\u3042\u308b\u7a0b\u5ea6\u306e\u30c8\u30e9\u30d5\u30a3\u30c3\u30af\u3055\u3048\u634c\u3051\u306a\u3044\u305f\u3081\u3067\u3059\u3002 [\u8a73\u7d30\u306f\u30b3\u30c1\u30e9\u3092\u30c1\u30a7\u30c3\u30af](http://qiita.com/yoichiro@github/items/6d4c7309210af20a5c8f)\n\n\u4eca\u5f8cTQ\u4f7f\u3063\u3066\u975e\u540c\u671f\u306b\u53d7\u3051\u6d41\u3059\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\n\n", "tags": ["GAE", "Python", "linebot", "GoogleAppEngine", "Flask"]}