{"tags": ["mindwave", "processing"], "context": " More than 1 year has passed since last update.mindwave mobile\uff08\u9ed2\u3044\u3084\u3064\uff09\u3092processing for mac\n\n\u53c2\u8003URL\n\u30c9\u30e9\u30a4\u30d0\nhttp://store.neurosky.com/products/mindwave-mac-drivers\nThinkGear\u3068\u3044\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\uff1f\u30c9\u30e9\u30a4\u30d0\u3082\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u3082\uff1f\uff1f\nhttp://developer.neurosky.com/docs/doku.php?id=thinkgear_connector_tgc\nprocessing\u30e9\u30a4\u30d6\u30e9\u30eagit\nhttps://github.com/ericblue/Processing-Brain-Grapher\n\u30b5\u30f3\u30d7\u30eb\u3068\u52d5\u753b\nhttp://www.magicandlove.com/blog/2012/03/15/neurosky-mindwave-and-processing/\n\u65e5\u672c\u8a9e\u8aac\u660e\u66f8\uff1fPEF\nhttp://developer.neurosky.com/docs/lib/exe/fetch.php?media=qsg_japanese_version.pdf\n\n\u624b\u9806\n1.\u53c2\u8003URL\u304b\u3089\u30c9\u30e9\u30a4\u30d0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nURL\u5148\u306e\u30da\u30fc\u30b8\u5148\u306f\u767d\u3044\u3084\u3064\u7528\u3063\u3066\u51fa\u3066\u308b\u3002\u6700\u521d\u9593\u9055\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3051\u3069\u30c9\u30e9\u30a4\u30d0\u306f\u5171\u901a\u304b\u306a\uff1f\n2.ThinkGear\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n3.PC\u3068mindwave\u3067\u30da\u30a2\u30ea\u30f3\u30b0\nmindwave\u306e\u3064\u307e\u307f\u3092on\u306e\u65b9\u5411\u306b3\u79d2\u307b\u3069\u30b9\u30e9\u30a4\u30c9\u3059\u308b\nLED\u304c2\u9023\u7d9a\u70b9\u706f\u3057\u305f\u3089\u30da\u30a2\u30ea\u30f3\u30b0\u958b\u59cb\u3089\u3057\u3044\n(\u53c2\u8003\u306ePDF\u304b\u3089)\n4.processing\u8d77\u52d5\u3001\u30b5\u30f3\u30d7\u30eb\u8d77\u52d5\uff08\u3069\u308c\u3067\u3082\uff09\n5.\u52d5\u3044\u3066\u305f\u3089\u52d5\u3044\u305f\n\n\u81ea\u5206\u306e\u4f7f\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\n\u3055\u3089\u306b\u8a66\u3057\u3067HashMap\u4f7f\u3063\u3066\u305f\u304f\u3055\u3093\u3042\u308b\u5909\u6570\u3092\u307e\u3068\u3081\u3066\u307f\u305f\n\nsample.pde\nimport java.net.*;\nimport java.util.Map;\nimport neurosky.*;\nimport org.json.*;\nThinkGearSocket neuroSocket;\n\nHashMap<String, Integer> mess;\n\nvoid setup() {\n  size(600, 600);\n\n  mess = new HashMap<String, Integer>();\n\n  ThinkGearSocket neuroSocket = new ThinkGearSocket(this);\n  try {\n    neuroSocket.start();\n  } \n  catch (ConnectException e) {\n    println(\"Is ThinkGear running??\");\n    println(e.getMessage());\n  }\n}\n\nvoid draw() {\n  background(255);\n\n  //println(mess.entrySet());\n  String txt = \"values list\\n\";\n  for (Map.Entry m : mess.entrySet ()) {\n    print(m.getKey() + \" : \");\n    println(m.getValue());\n\n    txt += m.getKey()+\" : \"+m.getValue()+\"\\n\";\n  }\n  fill(0);\n  text(txt, 20, 20);\n}\n\n\nvoid poorSignalEvent(int sig) {\n  println(\"SignalEvent \"+sig);\n  mess.put(\"sig\", sig);\n}\n\npublic void attentionEvent(int attentionLevel) {\n  println(\"Attention Level: \" + attentionLevel);\n  mess.put(\"attentionLevel\", attentionLevel);\n}\n\n\nvoid meditationEvent(int meditationLevel) {\n  println(\"Meditation Level: \" + meditationLevel);\n  mess.put(\"meditationLevel\", meditationLevel);\n}\n\nvoid blinkEvent(int blinkStrength) {\n  println(\"blinkStrength: \" + blinkStrength);\n  mess.put(\"blinkStrength\", blinkStrength);\n}\n\npublic void eegEvent(int delta, int theta, int low_alpha, int high_alpha, int low_beta, int high_beta, int low_gamma, int mid_gamma) {\n  println(\"delta Level: \" + delta);\n  println(\"theta Level: \" + theta);\n  println(\"low_alpha Level: \" + low_alpha);\n  println(\"high_alpha Level: \" + high_alpha);\n  println(\"low_beta Level: \" + low_beta);\n  println(\"high_beta Level: \" + high_beta);\n  println(\"low_gamma Level: \" + low_gamma);\n  println(\"mid_gamma Level: \" + mid_gamma);\n\n  mess.put(\"delta\", delta);\n  mess.put(\"theta\", theta);\n  mess.put(\"low_alpha\", low_alpha);\n  mess.put(\"high_alpha\", high_alpha);\n  mess.put(\"low_beta\", low_beta);\n  mess.put(\"high_beta\", high_beta);\n  mess.put(\"low_gamma\", low_gamma);\n  mess.put(\"mid_gamma\", mid_gamma);\n}\n\nvoid rawEvent(int[] raw) {\n  //println(\"rawEvent Level: \" + raw);\n}\n\nvoid stop() {\n  neuroSocket.stop();\n  super.stop();\n}\n\n\n\u7d50\u679c\n\nmindwave mobile\uff08\u9ed2\u3044\u3084\u3064\uff09\u3092processing for mac\n\n#\u53c2\u8003URL\n\u30c9\u30e9\u30a4\u30d0\nhttp://store.neurosky.com/products/mindwave-mac-drivers\n\nThinkGear\u3068\u3044\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\uff1f\u30c9\u30e9\u30a4\u30d0\u3082\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u3082\uff1f\uff1f\nhttp://developer.neurosky.com/docs/doku.php?id=thinkgear_connector_tgc\n\nprocessing\u30e9\u30a4\u30d6\u30e9\u30eagit\nhttps://github.com/ericblue/Processing-Brain-Grapher\n\n\u30b5\u30f3\u30d7\u30eb\u3068\u52d5\u753b\nhttp://www.magicandlove.com/blog/2012/03/15/neurosky-mindwave-and-processing/\n\n\u65e5\u672c\u8a9e\u8aac\u660e\u66f8\uff1fPEF\nhttp://developer.neurosky.com/docs/lib/exe/fetch.php?media=qsg_japanese_version.pdf\n\n\n#\u624b\u9806\n1.\u53c2\u8003URL\u304b\u3089\u30c9\u30e9\u30a4\u30d0\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nURL\u5148\u306e\u30da\u30fc\u30b8\u5148\u306f\u767d\u3044\u3084\u3064\u7528\u3063\u3066\u51fa\u3066\u308b\u3002\u6700\u521d\u9593\u9055\u3063\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3051\u3069\u30c9\u30e9\u30a4\u30d0\u306f\u5171\u901a\u304b\u306a\uff1f\n2.ThinkGear\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n3.PC\u3068mindwave\u3067\u30da\u30a2\u30ea\u30f3\u30b0\nmindwave\u306e\u3064\u307e\u307f\u3092on\u306e\u65b9\u5411\u306b3\u79d2\u307b\u3069\u30b9\u30e9\u30a4\u30c9\u3059\u308b\nLED\u304c2\u9023\u7d9a\u70b9\u706f\u3057\u305f\u3089\u30da\u30a2\u30ea\u30f3\u30b0\u958b\u59cb\u3089\u3057\u3044\n(\u53c2\u8003\u306ePDF\u304b\u3089)\n4.processing\u8d77\u52d5\u3001\u30b5\u30f3\u30d7\u30eb\u8d77\u52d5\uff08\u3069\u308c\u3067\u3082\uff09\n5.\u52d5\u3044\u3066\u305f\u3089\u52d5\u3044\u305f\n\n\n#\u81ea\u5206\u306e\u4f7f\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\n\u3055\u3089\u306b\u8a66\u3057\u3067HashMap\u4f7f\u3063\u3066\u305f\u304f\u3055\u3093\u3042\u308b\u5909\u6570\u3092\u307e\u3068\u3081\u3066\u307f\u305f\n\n```processing:sample.pde\nimport java.net.*;\nimport java.util.Map;\nimport neurosky.*;\nimport org.json.*;\nThinkGearSocket neuroSocket;\n\nHashMap<String, Integer> mess;\n\nvoid setup() {\n  size(600, 600);\n\n  mess = new HashMap<String, Integer>();\n\n  ThinkGearSocket neuroSocket = new ThinkGearSocket(this);\n  try {\n    neuroSocket.start();\n  } \n  catch (ConnectException e) {\n    println(\"Is ThinkGear running??\");\n    println(e.getMessage());\n  }\n}\n\nvoid draw() {\n  background(255);\n\n  //println(mess.entrySet());\n  String txt = \"values list\\n\";\n  for (Map.Entry m : mess.entrySet ()) {\n    print(m.getKey() + \" : \");\n    println(m.getValue());\n    \n    txt += m.getKey()+\" : \"+m.getValue()+\"\\n\";\n  }\n  fill(0);\n  text(txt, 20, 20);\n}\n\n\nvoid poorSignalEvent(int sig) {\n  println(\"SignalEvent \"+sig);\n  mess.put(\"sig\", sig);\n}\n\npublic void attentionEvent(int attentionLevel) {\n  println(\"Attention Level: \" + attentionLevel);\n  mess.put(\"attentionLevel\", attentionLevel);\n}\n\n\nvoid meditationEvent(int meditationLevel) {\n  println(\"Meditation Level: \" + meditationLevel);\n  mess.put(\"meditationLevel\", meditationLevel);\n}\n\nvoid blinkEvent(int blinkStrength) {\n  println(\"blinkStrength: \" + blinkStrength);\n  mess.put(\"blinkStrength\", blinkStrength);\n}\n\npublic void eegEvent(int delta, int theta, int low_alpha, int high_alpha, int low_beta, int high_beta, int low_gamma, int mid_gamma) {\n  println(\"delta Level: \" + delta);\n  println(\"theta Level: \" + theta);\n  println(\"low_alpha Level: \" + low_alpha);\n  println(\"high_alpha Level: \" + high_alpha);\n  println(\"low_beta Level: \" + low_beta);\n  println(\"high_beta Level: \" + high_beta);\n  println(\"low_gamma Level: \" + low_gamma);\n  println(\"mid_gamma Level: \" + mid_gamma);\n\n  mess.put(\"delta\", delta);\n  mess.put(\"theta\", theta);\n  mess.put(\"low_alpha\", low_alpha);\n  mess.put(\"high_alpha\", high_alpha);\n  mess.put(\"low_beta\", low_beta);\n  mess.put(\"high_beta\", high_beta);\n  mess.put(\"low_gamma\", low_gamma);\n  mess.put(\"mid_gamma\", mid_gamma);\n}\n\nvoid rawEvent(int[] raw) {\n  //println(\"rawEvent Level: \" + raw);\n}\n\nvoid stop() {\n  neuroSocket.stop();\n  super.stop();\n}\n```\n\n\u7d50\u679c\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-05-27 18.17.29.png](https://qiita-image-store.s3.amazonaws.com/0/76572/d4ba0698-f45e-7372-6264-0e98b9c91725.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-05-27 18.17.29.png\")\n"}