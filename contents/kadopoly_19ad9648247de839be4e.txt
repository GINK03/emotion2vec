{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nuClibc \u306f\u7d44\u307f\u8fbc\u307f Linux \u958b\u767a\u306b\u5f93\u4e8b\u3057\u3066\u3044\u308b\u65b9\u306f\u3054\u5b58\u77e5\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30ea\u30bd\u30fc\u30b9\u7b49\u5236\u9650\u3055\u308c\u305f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e Linux \u74b0\u5883\u306b\u6700\u9069\u306a\u6a19\u6e96 C \u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u901a\u5e38\u306e PC Linux \u3067\u306f glibc \u7b49\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u304c\u3001\u3044\u308d\u3044\u308d\u6c17\u306b\u3059\u308b\u74b0\u5883\u3067\u306f\u3053\u3046\u3044\u3063\u305f\u8efd\u91cf\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\u3055\u3066\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3068\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u306f\u6df7\u305c\u308b\u3068\u5371\u967a\u306a\u5302\u3044\u304c\u3059\u308b\u306e\u3067\u8b66\u6212\u3059\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u6cb9\u65ad\u3057\u3066\u5358\u7d14\u306b\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306a\u5b9f\u88c5\u306b\u5bfe\u3057\u3066\u30c7\u30fc\u30e2\u30f3\u3092\u4f5c\u308d\u3046\u3068\u3059\u308b\u3068\u3001\u7f60\u306b\u30cf\u30de\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u3067\u3054\u8aac\u660e\u3059\u308b\u30b1\u30fc\u30b9\u306f uClibc \u306b\u898b\u3089\u308c\u308b\u3082\u306e\u3067\u3001\u524d\u8ff0\u3057\u305f PC Linux \u4e0a\u3067\u306f\u304a\u305d\u3089\u304f\u898b\u3089\u308c\u307e\u305b\u3093\u306e\u3067\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u73fe\u8c61\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u3054\u89a7\u304f\u3060\u3055\u3044:\n\nthread_test.c\n#include <stdio.h>\n#include <stdlib.h>\n\n#include <unistd.h>\n#include <pthread.h>\n#include <sys/types.h>\n\n\nvoid* do_something( void *object )\n{\n    size_t i;\n\n    for ( i = 0; i < 5; ++i )\n    {\n        printf(\n            \"Hello, this is another thread! \"\n            \"( times = %zd, tid = %p )\\n\",\n\n            i,\n            ( void * ) pthread_self()\n        );\n        sleep( 2 );\n    }\n\n    return NULL;\n}\n\n\nint main()\n{\n    size_t    i;\n    pthread_t thread;\n\n    printf( \"New thread will be created. ( tid = %p )\\n\", ( void * ) pthread_self() );\n    pthread_create( &thread, NULL, do_something, NULL );\n\n    for ( i = 0; i < 10; ++i )\n    {\n        printf( \"The old thread keeps going on... ( tid = %p )\\n\", ( void * ) pthread_self() );\n        sleep( 1 );\n    }\n\n    pthread_join( thread, NULL );\n    printf( \"threads are joined.\\n\" );\n\n    return 0;\n}\n\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067 10 \u56de \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u306a\u304c\u3089\u3001do_something \u95a2\u6570\u3092\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3057\u30015 \u56de\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u3088\u304f\u3042\u308b\u4f8b\u3067\u3059\u3002\u6700\u7d42\u7684\u306b 2 \u3064\u306e\u30b9\u30ec\u30c3\u30c9\u306f pthread_join \u3057\u3066\u7d42\u4e86\u3057\u307e\u3059\u3002\n\u51fa\u529b\u7d50\u679c\u306f\u60f3\u50cf\u901a\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059:\n\nstdout\nNew thread will be created. ( tid = 0x1111 )\nThe old thread keeps going on... ( tid = 0x1111 )          \nHello, this is another thread! ( times = 0, tid = 0x1234 )\nThe old thread keeps going on... ( tid = 0x1111 )\nThe old thread keeps going on... ( tid = 0x1111 )\nHello, this is another thread! ( times = 1, tid = 0x1234 )\nThe old thread keeps going on... ( tid = 0x1111 )\nHello, this is another thread! ( times = 2, tid = 0x1234 )\nThe old thread keeps going on... ( tid = 0x1111 )\nThe old thread keeps going on... ( tid = 0x1111 )\nHello, this is another thread! ( times = 3, tid = 0x1234 )\nThe old thread keeps going on... ( tid = 0x1111 )\nThe old thread keeps going on... ( tid = 0x1111 )\nHello, this is another thread! ( times = 4, tid = 0x1234 )\nThe old thread keeps going on... ( tid = 0x1111 )\nThe old thread keeps going on... ( tid = 0x1111 )\nthreads are joined.\n\n(\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3057\u3066\u3044\u308b)\n\n\n\u3053\u3053\u3067\u3001\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u30c7\u30fc\u30e2\u30f3\u3068\u3057\u3066\u5b9f\u884c\u3057\u305f\u304f\u306a\u3063\u305f\u306e\u3067\u3001\u3057\u3087\u3063\u3071\u306a\u3067\u4fbf\u5229\u306a daemon() ( http://linuxjm.osdn.jp/html/LDP_man-pages/man3/daemon.3.html ) \u3092\u547c\u3093\u3067\u3088\u3057\u306a\u306b deamonize \u3057\u3066\u3082\u3089\u3044\u307e\u3059\u3002\n\ndaemonized_thread.c\nint main()\n{\n    size_t    i;\n    pthread_t thread;\n\n    // process should be daemonized here!\n    if ( daemon( 1, 1 ) )\n    {\n        fprintf( stderr, \"daemonization failed.\" );\n        exit( 1 );\n    }\n\n    printf( \"New thread will be created. ( tid = %p )\\n\", ( void * ) pthread_self() );\n    pthread_create( &thread, NULL, do_something, NULL );\n\n    for ( i = 0; i < 10; ++i )\n    {\n        printf( \"The old thread keeps going on... ( tid = %p )\\n\", ( void * ) pthread_self() );\n        sleep( 1 );\n    }\n\n    pthread_join( thread, NULL );\n    printf( \"threads are joined.\\n\" );\n\n    return 0;\n}\n\n\n\u3059\u308b\u3068\u3069\u3046\u3067\u3057\u3087\u3046\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3001\u7d42\u4e86\u3057\u306a\u304f\u306a\u308a\u307e\u3057\u305f:\n\nstdout\nNew thread will be created. ( tid = 0x1111 )\nHello, this is another thread! ( times = 0, tid = 0x1234 )\nHello, this is another thread! ( times = 1, tid = 0x1234 )\nHello, this is another thread! ( times = 2, tid = 0x1234 )\nHello, this is another thread! ( times = 3, tid = 0x1234 )\nHello, this is another thread! ( times = 4, tid = 0x1234 )\n(\u30d7\u30ed\u30bb\u30b9\u306f\u7d42\u4e86\u3057\u306a\u3044)\n\n\n\u3069\u3046\u3084\u3089\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u304c pthread_create() \u3042\u305f\u308a\u3067\u30ed\u30c3\u30af\u3057\u3066\u3057\u307e\u3063\u3066\u52d5\u304b\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u4f55\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u306e\n\"uClibc pthread daemon\" \u3067\u691c\u7d22\u3059\u308b\u3068\u3001\u7d50\u69cb\u554f\u984c\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u30d5\u30a9\u30fc\u30e9\u30e0\u3084\u30e1\u30fc\u30ea\u30f3\u30b0\u30ea\u30b9\u30c8\u306e\u60c5\u5831\u304c\u51fa\u3066\u304d\u307e\u3059:\n\nhttps://dev.openwrt.org/ticket/4809\nhttp://lists.uclibc.org/pipermail/uclibc/2007-June/038904.html\n\n\u4ee5\u4e0b\u306e\u30e1\u30fc\u30ea\u30f3\u30b0\u30ea\u30b9\u30c8\u306e\u60c5\u5831\u306b\u3088\u308b\u3068\u3001\u554f\u984c\u306e\u539f\u56e0\u306f daemon() \u5185\u3067\u547c\u3070\u308c\u308b fork() \u306f libpthread \u306e fork() \u3067\u306f\u306a\u304f\u3001\u5185\u90e8\u30b7\u30f3\u30dc\u30eb\u306e fork() \u3092\u547c\u3073\u51fa\u3057\u3066\u3057\u307e\u3046\u305f\u3081\u306b pthread \u306e\u30b9\u30ec\u30c3\u30c9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u304c fork() \u5f8c\u306e\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306e PID \u3092\u5931\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u8d77\u3053\u308b\u3088\u3046\u3067\u3059 ( \u305d\u3093\u306a\u98a8\u306b\u306a\u3063\u3066\u3044\u308b\u3093\u3067\u3059\u306d )\u3002\n\nhttp://lists.uclibc.org/pipermail/uclibc/2007-December/039647.html\nhttp://lists.busybox.net/pipermail/uclibc/2009-July/042805.html\nhttp://toolchain-devel.blackfin.uclinux.narkive.com/jV2uDpR8/uclibc-nommu-daemon-does-not-work-with-pthreads\n\n\u3053\u308c\u306e\u89e3\u6c7a\u7b56\u3068\u3057\u3066\u63d0\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u306f\u3001pthread \u306e fork() \u3092\u4f7f\u3046\u3088\u3046\u306b\u3001\u81ea\u524d\u3067\u540c\u69d8\u306a daemon() \u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u3059:\nhttps://dev.openwrt.org/browser/trunk/package/fuse/patches/300-workaround-uclibc-pthread-breakage.patch?rev=13312\n\n\u89e3\u6c7a\u7b56\u3092\u53d6\u308a\u5165\u308c\u305f\u5168\u4f53\n\ndaemonized_thread_fixed.c\n#include <stdio.h>\n#include <stdlib.h>\n\n#include <unistd.h>\n#include <pthread.h>\n#include <fcntl.h>\n\n\nint my_daemon( int nochdir, int noclose )\n{\n    int res;\n    int fd;\n\n    switch ( res = fork() )\n    {\n        case -1:\n            return 1;\n\n        case 0:\n            break;\n\n        default:\n            exit( 0 );\n    }\n\n    if ( ( res = setsid() ) == -1 )\n    {\n        return 1;\n    }\n\n    if ( !nochdir )\n    {\n        chdir( \"/\" );\n    }\n\n    if ( !noclose && ( fd = open( \"/dev/null\", O_RDWR, 0 ) ) != -1 )\n    {\n        dup2( fd, STDIN_FILENO );\n        dup2( fd, STDOUT_FILENO );\n        dup2( fd, STDERR_FILENO );\n\n        if ( fd > 2 )\n        {\n            close( fd );\n        }\n    }\n\n    return 0;\n}\n\n\nvoid* do_something( void *object )\n{\n    size_t i;\n\n    for ( i = 0; i < 5; ++i )\n    {\n        printf(\n            \"Hello, this is another thread! \"\n            \"( times = %zd, tid = %p )\\n\",\n\n            i,\n            ( void * ) pthread_self()\n        );\n        sleep( 2 );\n    }\n\n    return NULL;\n}\n\n\nint main()\n{\n    size_t    i;\n    pthread_t thread;\n\n    if ( my_daemon( 1, 1 ) )\n    {\n        fprintf( stderr, \"daemonization failed.\" );\n        exit( 1 );\n    }\n\n    printf( \"New thread will be created. ( tid = %p )\\n\", ( void * ) pthread_self() );\n    pthread_create( &thread, NULL, do_something, NULL );\n\n    for ( i = 0; i < 10; ++i )\n    {\n        printf( \"The old thread keeps going on... ( tid = %p )\\n\", ( void * ) pthread_self() );\n        sleep( 1 );\n    }\n\n    pthread_join( thread, NULL );\n    printf( \"threads are joined.\\n\" );\n\n    return 0;\n}\n\n\n\n\u3069\u3046\u3084\u3089\u3001\u3053\u308c\u3067\u52d5\u304d\u307e\u3057\u305f\u3002\u3081\u3067\u305f\u3057\u3067\u3059\u3002\n# \u6982\u8981\n\n[`uClibc`](http://www.uclibc.org/) \u306f\u7d44\u307f\u8fbc\u307f Linux \u958b\u767a\u306b\u5f93\u4e8b\u3057\u3066\u3044\u308b\u65b9\u306f\u3054\u5b58\u77e5\u3060\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30ea\u30bd\u30fc\u30b9\u7b49\u5236\u9650\u3055\u308c\u305f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e Linux \u74b0\u5883\u306b\u6700\u9069\u306a\u6a19\u6e96 C \u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u901a\u5e38\u306e PC Linux \u3067\u306f `glibc` \u7b49\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u7528\u3044\u3089\u308c\u307e\u3059\u304c\u3001\u3044\u308d\u3044\u308d\u6c17\u306b\u3059\u308b\u74b0\u5883\u3067\u306f\u3053\u3046\u3044\u3063\u305f\u8efd\u91cf\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u3055\u3066\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3068\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u306f\u6df7\u305c\u308b\u3068\u5371\u967a\u306a\u5302\u3044\u304c\u3059\u308b\u306e\u3067\u8b66\u6212\u3059\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u6cb9\u65ad\u3057\u3066\u5358\u7d14\u306b\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306a\u5b9f\u88c5\u306b\u5bfe\u3057\u3066\u30c7\u30fc\u30e2\u30f3\u3092\u4f5c\u308d\u3046\u3068\u3059\u308b\u3068\u3001\u7f60\u306b\u30cf\u30de\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u3067\u3054\u8aac\u660e\u3059\u308b\u30b1\u30fc\u30b9\u306f `uClibc` \u306b\u898b\u3089\u308c\u308b\u3082\u306e\u3067\u3001\u524d\u8ff0\u3057\u305f PC Linux \u4e0a\u3067\u306f\u304a\u305d\u3089\u304f\u898b\u3089\u308c\u307e\u305b\u3093\u306e\u3067\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3060\u3051\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\n# \u73fe\u8c61\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u3054\u89a7\u304f\u3060\u3055\u3044:\n\n```c:thread_test.c\n#include <stdio.h>\n#include <stdlib.h>\n\n#include <unistd.h>\n#include <pthread.h>\n#include <sys/types.h>\n\n\nvoid* do_something( void *object )\n{\n    size_t i;\n\n    for ( i = 0; i < 5; ++i )\n    {\n        printf(\n            \"Hello, this is another thread! \"\n            \"( times = %zd, tid = %p )\\n\",\n\n            i,\n            ( void * ) pthread_self()\n        );\n        sleep( 2 );\n    }\n\n    return NULL;\n}\n\n\nint main()\n{\n    size_t    i;\n    pthread_t thread;\n\n    printf( \"New thread will be created. ( tid = %p )\\n\", ( void * ) pthread_self() );\n    pthread_create( &thread, NULL, do_something, NULL );\n\n    for ( i = 0; i < 10; ++i )\n    {\n        printf( \"The old thread keeps going on... ( tid = %p )\\n\", ( void * ) pthread_self() );\n        sleep( 1 );\n    }\n\n    pthread_join( thread, NULL );\n    printf( \"threads are joined.\\n\" );\n\n    return 0;\n}\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067 10 \u56de \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u306a\u304c\u3089\u3001`do_something` \u95a2\u6570\u3092\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3057\u30015 \u56de\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u306e\u3088\u304f\u3042\u308b\u4f8b\u3067\u3059\u3002\u6700\u7d42\u7684\u306b 2 \u3064\u306e\u30b9\u30ec\u30c3\u30c9\u306f `pthread_join` \u3057\u3066\u7d42\u4e86\u3057\u307e\u3059\u3002\n\n\u51fa\u529b\u7d50\u679c\u306f\u60f3\u50cf\u901a\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059:\n\n```text:stdout\nNew thread will be created. ( tid = 0x1111 )\nThe old thread keeps going on... ( tid = 0x1111 )          \nHello, this is another thread! ( times = 0, tid = 0x1234 )\nThe old thread keeps going on... ( tid = 0x1111 )\nThe old thread keeps going on... ( tid = 0x1111 )\nHello, this is another thread! ( times = 1, tid = 0x1234 )\nThe old thread keeps going on... ( tid = 0x1111 )\nHello, this is another thread! ( times = 2, tid = 0x1234 )\nThe old thread keeps going on... ( tid = 0x1111 )\nThe old thread keeps going on... ( tid = 0x1111 )\nHello, this is another thread! ( times = 3, tid = 0x1234 )\nThe old thread keeps going on... ( tid = 0x1111 )\nThe old thread keeps going on... ( tid = 0x1111 )\nHello, this is another thread! ( times = 4, tid = 0x1234 )\nThe old thread keeps going on... ( tid = 0x1111 )\nThe old thread keeps going on... ( tid = 0x1111 )\nthreads are joined.\n\n(\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3057\u3066\u3044\u308b)\n```\n\n\u3053\u3053\u3067\u3001\u3053\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u30c7\u30fc\u30e2\u30f3\u3068\u3057\u3066\u5b9f\u884c\u3057\u305f\u304f\u306a\u3063\u305f\u306e\u3067\u3001\u3057\u3087\u3063\u3071\u306a\u3067\u4fbf\u5229\u306a `daemon()` ( http://linuxjm.osdn.jp/html/LDP_man-pages/man3/daemon.3.html ) \u3092\u547c\u3093\u3067\u3088\u3057\u306a\u306b deamonize \u3057\u3066\u3082\u3089\u3044\u307e\u3059\u3002\n\n```c:daemonized_thread.c\nint main()\n{\n    size_t    i;\n    pthread_t thread;\n\n    // process should be daemonized here!\n    if ( daemon( 1, 1 ) )\n    {\n        fprintf( stderr, \"daemonization failed.\" );\n        exit( 1 );\n    }\n\n    printf( \"New thread will be created. ( tid = %p )\\n\", ( void * ) pthread_self() );\n    pthread_create( &thread, NULL, do_something, NULL );\n\n    for ( i = 0; i < 10; ++i )\n    {\n        printf( \"The old thread keeps going on... ( tid = %p )\\n\", ( void * ) pthread_self() );\n        sleep( 1 );\n    }\n\n    pthread_join( thread, NULL );\n    printf( \"threads are joined.\\n\" );\n\n    return 0;\n}\n```\n\n\u3059\u308b\u3068\u3069\u3046\u3067\u3057\u3087\u3046\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3001\u7d42\u4e86\u3057\u306a\u304f\u306a\u308a\u307e\u3057\u305f:\n\n```text:stdout\nNew thread will be created. ( tid = 0x1111 )\nHello, this is another thread! ( times = 0, tid = 0x1234 )\nHello, this is another thread! ( times = 1, tid = 0x1234 )\nHello, this is another thread! ( times = 2, tid = 0x1234 )\nHello, this is another thread! ( times = 3, tid = 0x1234 )\nHello, this is another thread! ( times = 4, tid = 0x1234 )\n(\u30d7\u30ed\u30bb\u30b9\u306f\u7d42\u4e86\u3057\u306a\u3044)\n```\n\n\u3069\u3046\u3084\u3089\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u304c `pthread_create()` \u3042\u305f\u308a\u3067\u30ed\u30c3\u30af\u3057\u3066\u3057\u307e\u3063\u3066\u52d5\u304b\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n# \u4f55\u304c\u8d77\u3053\u3063\u3066\u3044\u308b\u306e\n\n\"uClibc pthread daemon\" \u3067\u691c\u7d22\u3059\u308b\u3068\u3001\u7d50\u69cb\u554f\u984c\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u30d5\u30a9\u30fc\u30e9\u30e0\u3084\u30e1\u30fc\u30ea\u30f3\u30b0\u30ea\u30b9\u30c8\u306e\u60c5\u5831\u304c\u51fa\u3066\u304d\u307e\u3059:\n\n- https://dev.openwrt.org/ticket/4809\n- http://lists.uclibc.org/pipermail/uclibc/2007-June/038904.html\n\n\u4ee5\u4e0b\u306e\u30e1\u30fc\u30ea\u30f3\u30b0\u30ea\u30b9\u30c8\u306e\u60c5\u5831\u306b\u3088\u308b\u3068\u3001\u554f\u984c\u306e\u539f\u56e0\u306f `daemon()` \u5185\u3067\u547c\u3070\u308c\u308b `fork()` \u306f `libpthread` \u306e `fork()` \u3067\u306f\u306a\u304f\u3001\u5185\u90e8\u30b7\u30f3\u30dc\u30eb\u306e `fork()` \u3092\u547c\u3073\u51fa\u3057\u3066\u3057\u307e\u3046\u305f\u3081\u306b `pthread` \u306e\u30b9\u30ec\u30c3\u30c9\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u304c `fork()` \u5f8c\u306e\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306e PID \u3092\u5931\u3063\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u3088\u3063\u3066\u8d77\u3053\u308b\u3088\u3046\u3067\u3059 ( \u305d\u3093\u306a\u98a8\u306b\u306a\u3063\u3066\u3044\u308b\u3093\u3067\u3059\u306d )\u3002\n\n- http://lists.uclibc.org/pipermail/uclibc/2007-December/039647.html\n- http://lists.busybox.net/pipermail/uclibc/2009-July/042805.html\n- http://toolchain-devel.blackfin.uclinux.narkive.com/jV2uDpR8/uclibc-nommu-daemon-does-not-work-with-pthreads\n\n\u3053\u308c\u306e\u89e3\u6c7a\u7b56\u3068\u3057\u3066\u63d0\u793a\u3055\u308c\u3066\u3044\u308b\u306e\u306f\u3001`pthread` \u306e `fork()` \u3092\u4f7f\u3046\u3088\u3046\u306b\u3001\u81ea\u524d\u3067\u540c\u69d8\u306a `daemon()` \u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u3059:\nhttps://dev.openwrt.org/browser/trunk/package/fuse/patches/300-workaround-uclibc-pthread-breakage.patch?rev=13312\n\n\n# \u89e3\u6c7a\u7b56\u3092\u53d6\u308a\u5165\u308c\u305f\u5168\u4f53\n\n```c:daemonized_thread_fixed.c\n#include <stdio.h>\n#include <stdlib.h>\n\n#include <unistd.h>\n#include <pthread.h>\n#include <fcntl.h>\n\n\nint my_daemon( int nochdir, int noclose )\n{\n    int res;\n    int fd;\n\n    switch ( res = fork() )\n    {\n        case -1:\n            return 1;\n\n        case 0:\n            break;\n\n        default:\n            exit( 0 );\n    }\n\n    if ( ( res = setsid() ) == -1 )\n    {\n        return 1;\n    }\n\n    if ( !nochdir )\n    {\n        chdir( \"/\" );\n    }\n\n    if ( !noclose && ( fd = open( \"/dev/null\", O_RDWR, 0 ) ) != -1 )\n    {\n        dup2( fd, STDIN_FILENO );\n        dup2( fd, STDOUT_FILENO );\n        dup2( fd, STDERR_FILENO );\n\n        if ( fd > 2 )\n        {\n            close( fd );\n        }\n    }\n\n    return 0;\n}\n\n\nvoid* do_something( void *object )\n{\n    size_t i;\n\n    for ( i = 0; i < 5; ++i )\n    {\n        printf(\n            \"Hello, this is another thread! \"\n            \"( times = %zd, tid = %p )\\n\",\n\n            i,\n            ( void * ) pthread_self()\n        );\n        sleep( 2 );\n    }\n\n    return NULL;\n}\n\n\nint main()\n{\n    size_t    i;\n    pthread_t thread;\n\n    if ( my_daemon( 1, 1 ) )\n    {\n        fprintf( stderr, \"daemonization failed.\" );\n        exit( 1 );\n    }\n\n    printf( \"New thread will be created. ( tid = %p )\\n\", ( void * ) pthread_self() );\n    pthread_create( &thread, NULL, do_something, NULL );\n\n    for ( i = 0; i < 10; ++i )\n    {\n        printf( \"The old thread keeps going on... ( tid = %p )\\n\", ( void * ) pthread_self() );\n        sleep( 1 );\n    }\n\n    pthread_join( thread, NULL );\n    printf( \"threads are joined.\\n\" );\n\n    return 0;\n}\n\n```\n\n\u3069\u3046\u3084\u3089\u3001\u3053\u308c\u3067\u52d5\u304d\u307e\u3057\u305f\u3002\u3081\u3067\u305f\u3057\u3067\u3059\u3002\n", "tags": ["C", "Linux", "\u7d44\u307f\u8fbc\u307f"]}