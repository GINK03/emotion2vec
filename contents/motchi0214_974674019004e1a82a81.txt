{"context": "\u6d41\u308c\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\nCloudFront\u306e\u73fe\u5728\u306e\u8a2d\u5b9a\u60c5\u5831\u3092\u53d6\u5f97\uff08getDistributionConfig\uff09\nCacheBehaviors\u306e\u5168\u30a2\u30a4\u30c6\u30e0\u3067\u3001ViewerProtocolPolicy\u3092\u300credirect-to-https\u300d\u306b\u5909\u66f4\n\u5909\u66f4\u3057\u305fDistributionConfig\u3092\u4f7f\u3063\u3066CloudFront\u3092\u66f4\u65b0\uff08updateDistribution\uff09\n\n//params\nvar cfDistributionId = 'CLOUDFRONT_DISTRIBUTION_ID';\n\n//module\nvar AWS = require('aws-sdk');\nvar cloudfront = new AWS.CloudFront({\n    apiVersion: '2016-01-28',\n    accessKeyId: \"ACCESS_KEY_ID\",\n    secretAccessKey: \"SECRET_ACCESS_KEY\"\n});\n\nvar params = {\n  Id: cfDistributionId\n};\ncloudfront.getDistributionConfig(params).promise().then(\n    (data) => {\n        data.DistributionConfig.CacheBehaviors.Items.map(\n            (Item) => {\n                Item.ViewerProtocolPolicy = 'redirect-to-https';\n                return Item;\n            }\n        );\n        var updateParams = {\n            DistributionConfig: data.DistributionConfig,\n            Id: cfDistributionId,\n            IfMatch:  data.ETag\n        }\n        return cloudfront.updateDistribution(updateParams).promise();\n    }\n).then(\n    (data) => {\n        console.log(data);\n    }\n).catch(\n    (err) => {\n        console.log(err, err.stack);\n    }\n);\n\n\u540c\u3058\u8981\u9818\u3067\u8a2d\u5b9a\u306e\u8ffd\u52a0\u3068\u304b\u5909\u66f4\u3082\u3067\u304d\u308b\u306e\u3067\u305c\u3072\u3002\n\n\u6d41\u308c\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n- CloudFront\u306e\u73fe\u5728\u306e\u8a2d\u5b9a\u60c5\u5831\u3092\u53d6\u5f97\uff08getDistributionConfig\uff09\n- CacheBehaviors\u306e\u5168\u30a2\u30a4\u30c6\u30e0\u3067\u3001ViewerProtocolPolicy\u3092\u300credirect-to-https\u300d\u306b\u5909\u66f4\n- \u5909\u66f4\u3057\u305fDistributionConfig\u3092\u4f7f\u3063\u3066CloudFront\u3092\u66f4\u65b0\uff08updateDistribution\uff09\n\n\n```\n//params\nvar cfDistributionId = 'CLOUDFRONT_DISTRIBUTION_ID';\n\n//module\nvar AWS = require('aws-sdk');\nvar cloudfront = new AWS.CloudFront({\n\tapiVersion: '2016-01-28',\n    accessKeyId: \"ACCESS_KEY_ID\",\n    secretAccessKey: \"SECRET_ACCESS_KEY\"\n});\n\nvar params = {\n  Id: cfDistributionId\n};\ncloudfront.getDistributionConfig(params).promise().then(\n\t(data) => {\n\t\tdata.DistributionConfig.CacheBehaviors.Items.map(\n\t\t\t(Item) => {\n\t\t\t\tItem.ViewerProtocolPolicy = 'redirect-to-https';\n\t\t\t\treturn Item;\n\t\t\t}\n\t\t);\n\t\tvar updateParams = {\n\t\t\tDistributionConfig: data.DistributionConfig,\n\t\t\tId: cfDistributionId,\n\t\t\tIfMatch:  data.ETag\n\t\t}\n\t\treturn cloudfront.updateDistribution(updateParams).promise();\n\t}\n).then(\n\t(data) => {\n\t\tconsole.log(data);\n\t}\n).catch(\n\t(err) => {\n\t\tconsole.log(err, err.stack);\n\t}\n);\n```\n\n\u540c\u3058\u8981\u9818\u3067\u8a2d\u5b9a\u306e\u8ffd\u52a0\u3068\u304b\u5909\u66f4\u3082\u3067\u304d\u308b\u306e\u3067\u305c\u3072\u3002\n", "tags": ["aws-sdk", "CloudFront", "JavaScript"]}