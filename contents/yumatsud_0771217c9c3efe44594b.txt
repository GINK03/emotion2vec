{"tags": ["myThingsDevelopers", "IoT", "lambda", "DynamoDB", "APIGateway"], "context": "\n\n\u3084\u3063\u3066\u307f\u308b\u3053\u3068\n\u300cmyThings\u3067\u52e4\u6020\u9023\u7d61\u30dc\u30bf\u30f3\u3092\u4f5c\u3063\u3066\u307f\u305f\u300d\u3092\u53c2\u8003\u306b\u3001Amazon Dash Button\u3092\u62bc\u3057\u305f\u3089AWS\u7d4c\u7531\u306emyThings Developers\u3067\u9023\u7d61\u3092\u9001\u308c\u308b\u7684\u306a\u3053\u3068\u3092\u3084\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff01\n\n\u7528\u610f\u3059\u308b\u3082\u306e\n\nAmazon Dash Button\nAWS API Gateway\nAWS DynamoDB\nAWS Lambda\nmyThings Developers\n\n\nmyThings Developers\u306e\u6e96\u5099\n\u3053\u3061\u3089\u306f\u300cmyThings\u3067\u52e4\u6020\u9023\u7d61\u30dc\u30bf\u30f3\u3092\u4f5c\u3063\u3066\u307f\u305f\u300d\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\nSlack\u306e\u8a2d\u5b9a\u306a\u3069\u306f\u4e38\u3005\u540c\u3058\u3082\u306e\u3092\u5229\u7528\u3059\u308b\u3067\u554f\u984c\u3054\u3056\u3044\u307e\u305b\u3093\u3002\n\n\u624b\u9806\n1.Amazon Dash Button\u306e\u8a2d\u5b9a\n\n\u57fa\u672c\u7684\u306b\u306f\u516c\u5f0f\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u65b9\u6cd5\u306b\u5f93\u3063\u3066\u8a2d\u5b9a\u3059\u308b\u3002\u305f\u3060\u3057\u3001\u6700\u5f8c\u307e\u3067\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u3057\u306a\u3044\u3053\u3068\uff01\u4e0b\u8a18\u306e\u3088\u3046\u306a\u753b\u9762\u3067\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u9014\u4e2d\u3067\u3084\u3081\u308b\n\n2.dasher\u306e\u8a2d\u5b9a\ndasher\u3068\u3044\u3046\u3001libpcap\u3092\u5229\u7528\u3057\u3066\u30dc\u30bf\u30f3\u306eMAC\u30a2\u30c9\u30ec\u30b9\u304b\u3089\u306e\u30d1\u30b1\u30c3\u30c8\u9001\u4fe1\u3092\u6349\u3048\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304b\u308c\u305fURL\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u6295\u3052\u308b\u3082\u306e\u304c\u3042\u308b\u306e\u3067\u3001\u4eca\u56de\u306f\u305d\u3061\u3089\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n2-a. dasher\u306e\u6e96\u5099 (\u74b0\u5883\u306b\u3088\u3063\u3066\u306f\u3001npm\u3068libpcap-dev\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5fc5\u8981\u3067\u3059)\n$ git clone https://github.com/maddox/dasher.git\n$ cd dasher\n$ npm install\n\n2-b. Amazon Dash Button\u306eMAC\u30a2\u30c9\u30ec\u30b9\u306e\u8aad\u307f\u53d6\u308a\u3002\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001Amazon Dash Button\u3092\u62bc\u3059\u3002\n$ ./script/find_button \nWatching for arp & udp requests on your local network, please try to press your dash now\nDash buttons should appear as manufactured by 'Amazon Technologies Inc.' \nPossible dash hardware address detected: XX:XX:XX:XX:XX:XX Manufacturer: unknown Protocol: arp\nPossible dash hardware address detected: XX:XX:XX:XX:XX:XX Manufacturer: unknown Protocol: udp\n\n\u203b\u671f\u5f85\u5024\u306f\u300cAmazon Technologies Inc.\u300d\u306e\u3088\u3046\u3067\u3059\u304c\u3001\u5b9f\u969b\u306f\u300cunknown\u300d\u306e\u3082\u306e\u304c\u51fa\u3066\u304f\u308b\u3068\u601d\u3044\u307e\u3059\n\n2-c. HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u5148\u306e\u8a2d\u5b9a\n\nconfig/config.json\n{\"buttons\":[\n  {\n    \"name\": \"Morning rest button\",\n    \"address\": \"XX:XX:XX:XX:XX:XX\",\n    \"timeout\": \"5000\",\n    \"url\": \"<<\u306e\u3061\u306b\u7528\u610f\u3059\u308bAWS API Gateway\u306eURL>>\",\n    \"method\": \"POST\",\n    \"headers\": {\"x-api-key\": \"<<AWS API Gateway\u3067\u53d6\u5f97\u3059\u308bAPI\u30ad\u30fc>>\"},\n    \"json\": true,\n    \"body\": {\"macAddress\": \"XX:XX:XX:XX:XX:XX\"}\n  }\n]}\n\n\n2-d. dasher\u306e\u8d77\u52d5\u3002\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u30b3\u30de\u30f3\u30c9\u306b\u6d41\u308c\u308c\u3070\u5b8c\u4e86\n$ sudo npm run start\n\n> dasher@1.1.1 start /Users/yumatsud/git/dasher\n> node app.js\n\n[2016-12-10T15:33:38.687Z] Morning rest button added.\n[2016-12-10T15:33:49.339Z] Morning rest button pressed.\n\n3.AWS DynamoDB\u306e\u6e96\u5099\n\u5358\u7d14\u306bmyThings Developers\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\u3060\u3051\u3067\u3042\u308c\u3070\u3001\u4e0a\u8a18\u306edasher\u306e\u30ea\u30af\u30a8\u30b9\u30c8URL\u306b\u5148\u306b\u8a2d\u5b9a\u3057\u305fwebscript.io\u306eURL\u3092\u6307\u5b9a\u3059\u308b\u3060\u3051\u3067\u826f\u3044\u306e\u3067\u3001\u4eca\u56de\u306f\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u30ed\u30b0\u3082\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\n\n\u203blogId\u3001createdAt\u3001macAddress\u3092json\u5f62\u5f0f\u3067\u6301\u3064\u30a4\u30e1\u30fc\u30b8\n4.AWS API Gateway\u306e\u6e96\u5099\n\u8a73\u7d30\u306a\u8aac\u660e\u306f\u7701\u304d\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u30dc\u30bf\u30f3\u3092\u62bc\u3055\u308c\u305f\u3068\u304d\u306bPOST\u3092\u53d7\u3051\u308b\u53e3\u3092\u7528\u610f\u3057\u3066\u3001\u53d7\u3051\u305f\u5148\u3092Lambda\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u306f\u3001\u4e0b\u8a18\u306e3\u3064\n\n\u8ab0\u3067\u3082API\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u304d\u308b\u306e\u3082\u826f\u304f\u306a\u3044\u306e\u3067\u3001\u6700\u4f4e\u9650API\u30ad\u30fc\u306e\u8a2d\u5b9a\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u304a\u304b\u3057\u304b\u3063\u305f\u3068\u304d\u306a\u3069\u3088\u3046\u306b400\u30a8\u30e9\u30fc\u3082\u8a2d\u5b9a\nGET\u3067\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u30ed\u30b0\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3067\u304d\u3001\u3055\u3089\u306bmacAddress\u3092\u6307\u5b9a\u3059\u308b\u3068MacAddress\u306b\u7d10\u3065\u304f\u30ed\u30b0\u3082\u53d6\u308c\u308b\u90e8\u5206\u3082\u4f5c\u6210\n\n5.AWS Lambda\u306e\u6e96\u5099\nAWS API Gateway\u3068Lambda\u95a2\u6570\u306e\u5bfe\u5fdc\u8868\u306f\u4e0b\u8a18\n\n\n\n\u30ea\u30bd\u30fc\u30b9\n\u30e1\u30c9\u30c3\u30c9\nLambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\n\u8aac\u660e\n\n\n\n\n/v1/logs\nGET\nlist_logs\n\u5168\u3066\u306e\u30ed\u30b0\u4e00\u89a7\u53d6\u5f97\n\n\n/v1/logs\nPOST\ncreated_log\n\u30ed\u30b0\u767b\u9332\n\n\n/v1/logs/{macAddress}\nGET\nget_logs\nMAC\u30a2\u30c9\u30ec\u30b9\u3054\u3068\u306e\u30ed\u30b0\u4e00\u89a7\u53d6\u5f97\n\n\n\n\u305d\u306e\u4e2d\u3067\u3082\u3001created_log\u95a2\u6570\u90e8\u5206\u3067\u3001DynamoDB\u3078\u306e\u4fdd\u5b58\u3068myThings Developers\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5b9f\u65bd (\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u4e0b\u8a18)\n\ncreated_log.js\n'use strict';\n\n//var uuid = require('node-uuid');\nconst qs = require(\"querystring\");\nvar https = require(\"https\");\nvar date = new Date();\nvar dateString = createPostTimeString();\n\nvar AWS = require(\"aws-sdk\");\nvar dynamo = new AWS.DynamoDB.DocumentClient();\n\n// myThings Developers\u306b\u5fc5\u8981\u306a\u30ea\u30af\u30a8\u30b9\u30c8\u9805\u76ee\nvar appid = \"<<appid>>\";\nvar secret = \"<<secret>>\";\nvar accessToken = \"<<access token>>\";\nvar refreshToken = \"<<refresh token>>\";\n\nexports.handler = (event, context, callback) => {\n    //console.log(\"handler start. event:\", JSON.stringify(event, null, 2));\n    // \u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30a7\u30c3\u30af\n    if (!event.macAddress) {\n        context.fail('macAddress is not specified')\n    }\n\n    // uuid\u3092\u751f\u6210\n    //var uuid = uuid.v4();\n    var uuid = createUuid();\n\n    // \u66f4\u65b0\u5185\u5bb9\u3092\u30bb\u30c3\u30c8\n    var item = {\n        \"logId\": uuid,\n        \"createdAt\":  Math.floor(date.getTime() / 1000),\n        \"macAddress\": event.macAddress\n    };\n\n    var param = {\n        TableName: 'Button',\n        Item: item\n    }\n    dynamo.put(param, function(err, data) {\n        if (err) {\n            context.fail(err);\n        } else {\n            //context.succeed(item)\n            // myThings Developers\u3078\u30ea\u30af\u30a8\u30b9\u30c8\n            requestDevelopers(context);\n        }\n    });\n};\n\n/**\n * UUID(\u30e9\u30f3\u30c0\u30e0\u6587\u5b57\u5217)\u306e\u751f\u6210\n * @return string UUID\n */\nfunction createUuid() {\n    var S4 = function() {\n        return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n    }   \n    return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4() +S4());\n}\n\n/**\n * \"2016/12/21(\u6c34)\"\u306e\u5f62\u5f0f\u306e\u6587\u5b57\u5217\u3092\u8fd4\u3059\n * @return string \u65e5\u4ed8\u6587\u5b57\u5217\n */\nfunction createPostTimeString() {\n    // \u5e74\n    var year = date.getFullYear();\n    // \u6708\n    var month = date.getMonth() + 1;\n    if (month < 10) {\n        month = '0' + month;\n    }\n    // \u65e5\n    var day = date.getDate();\n    if (day < 10) {\n        day = '0' + day;\n    }\n    // \u66dc\u65e5\n    var weekDayList = [ \"\u65e5\", \"\u6708\", \"\u706b\", \"\u6c34\", \"\u6728\", \"\u91d1\", \"\u571f\" ];\n    var weekDay = weekDayList[ date.getDay() ];\n\n    return year+\"/\"+month+\"/\"+day+\"(\"+weekDay+\")\";\n}\n\n/**\n * myThings Developers\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\n * @return void\n */\nfunction requestDevelopers(context) {\n    // \u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u751f\u6210\n    var postArgs = {\n        date: dateString\n    }\n    var postData = qs.stringify({\n        \"entry\": JSON.stringify(postArgs),\n    });\n\n    // \u30ea\u30af\u30a8\u30b9\u30c8\u8a2d\u5b9a\n    var options = {\n        hostname: \"mythings-developers.yahooapis.jp\",\n        path: \"/v2/services/<<\u8981\u8a2d\u5b9a>>/mythings/<<\u8981\u8a2d\u5b9a>>/run\",\n        port: 443,\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n            \"Authorization\": \"Bearer \" + accessToken,\n        },\n    };\n\n    // \u30ea\u30af\u30a8\u30b9\u30c8\n    var req = https.request(options, function(res){\n        // 401\u306e\u3068\u304d\n        if (res.statusCode == 401) {\n            // \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u4ed8\u304d\u306erefreshAccessToken\u3092\u547c\u3076\n            refreshAccessToken(context);\n        }\n\n        // \u30ec\u30b9\u30dd\u30f3\u30b9\u51e6\u7406\n        res.on(\"data\", function(body){\n            var parseData = JSON.parse(body);\n            if(typeof( parseData[\"flag\"] ) != \"undefined\") {\n                context.succeed(\"\u30ab\u30b9\u30bf\u30e0\u30c8\u30ea\u30ac\u30fc\u306e\u5b9f\u884c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u4ed8\u3051\u307e\u3057\u305f\u3002\")\n            } else {\n                console.log(\"\u30ab\u30b9\u30bf\u30e0\u30c8\u30ea\u30ac\u30fc\u306e\u5b9f\u884c\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u53d7\u4ed8\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002:\"+body);\n                //context.fail(\"\u30ab\u30b9\u30bf\u30e0\u30c8\u30ea\u30ac\u30fc\u306e\u5b9f\u884c\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u53d7\u4ed8\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002:\"+body);\n            }\n        });\n    })\n    .on(\"error\", function(res){\n        context.fail(\"\u30ab\u30b9\u30bf\u30e0\u30c8\u30ea\u30ac\u30fc\u306e\u5b9f\u884c\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u53d7\u4ed8\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002:\"+res.content);\n    });\n    req.end(postData)\n}\n\n/**\n * \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\n */\nfunction refreshAccessToken(context) {\n    console.log(\"refreshAccessToken\u306b\u304d\u305f\u3088\");\n    // \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u7528\u30c7\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\n    var reqData = qs.stringify({\n        \"grant_type\": \"refresh_token\",\n        \"refresh_token\": refreshToken\n    });\n    // \u30ea\u30af\u30a8\u30b9\u30c8\u8a2d\u5b9a\n    var buffer = new Buffer(appid + \":\" + secret, \"ascii\");\n    var options = {\n        hostname: \"auth.login.yahoo.co.jp\",\n        path: \"/yconnect/v1/token\",\n        port: 443,\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n            \"Authorization\": \"Basic \" + buffer.toString(\"base64\"),\n        }\n    };\n\n    // \u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\n    var req = https.request(options, function(res) {\n        console.log(\"refreshAccessToken\u306erequest\u306e\u306a\u304b\u306b\u304d\u305f\u3088\");\n        // 401\u306e\u5834\u5408\n        if(res.statusCode == 401) {\n            context.fail(\"\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u306e\u6709\u52b9\u671f\u9650\u304c\u5207\u308c\u307e\u3057\u305f\u3002myThings Developers\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304b\u3089\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u3092\u518d\u53d6\u5f97\u3057\u3066\u4e0b\u3055\u3044\u3002\");\n        } else if(res.statusCode != 200) {\n            context.fail(\"\u30ab\u30b9\u30bf\u30e0\u30c8\u30ea\u30ac\u30fc\u306e\u5b9f\u884c\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u53d7\u4ed8\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002:\"+res.content);\n        }\n\n        // \u30ec\u30b9\u30dd\u30f3\u30b9\u51e6\u7406\n        res.on('data', function(body){\n            var parseData = JSON.parse(body);\n            accessToken = parseData['access_token'];\n            requestDevelopers(context);\n        }); \n    });\n\n    // POST\u30c7\u30fc\u30bf\u306e\u30ea\u30af\u30a8\u30b9\u30c8\n    req.end(reqData);\n}\n\n\n6.\u5b9f\u884c\u7d50\u679c\n\n\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\uff01\uff01\n\n\u3084\u3063\u3066\u307f\u3066\u611f\u3058\u305f\u3053\u3068\n\nAmazon Dash Button\u3068dasher\u3092\u52d5\u304b\u3059\u30de\u30b7\u30f3\u304c\u540c\u4e00\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5185\u306b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\ndasher\u3092\u52d5\u304b\u3059\u30de\u30b7\u30f3\u304c\u5225\u9014\u5fc5\u8981\uff08PC\u3067\u3082\u53ef\u80fd\uff09\n\n\u8ab2\u984c\u306f\u3042\u308b\u3082\u306e\u306e\u3001\u30de\u30b7\u30f3\u3082\u30e9\u30ba\u30d1\u30a4\u3068\u304b\u3092\u7528\u610f\u3057\u3066\u304a\u3044\u3066\u304a\u3051\u3070\u826f\u3044\u306e\u3068\u3001\u624b\u8efd\u306b\u30cf\u30fc\u30c9(\u30dc\u30bf\u30f3)\u3092\u6e96\u5099\u3067\u304d\u308b\u306e\u306f\u826f\u3044\u3067\u3059\u306d\u3002\n\u4f55\u3088\u308a\u96fb\u6e90\u304c\u4e0d\u8981\u3067\u3001\u6795\u5143\u306b\u7f6e\u3044\u3066\u304a\u3051\u3070\u624b\u8efd\u306b\u62bc\u305b\u308b\u306e\u3067\u3001\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u3082\u826f\u3044\u3068\u601d\u3048\u308b\u3082\u306e\u3067\u3057\u305f\uff01\uff01\n\n\u3061\u306a\u307f\u306b\n\u4eca\u56de\u306fAPI Gateway -> Lambda -> DynamoDB\u3068\u3044\u3046\u69cb\u6210\u3067\u3057\u305f\u304c\u3001DynamoDB\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u3044\u3046\u6a5f\u80fd\u3092\u4f7f\u3048\u3070\u3001\n\nAPI Gateway -> DynamoDB -> Lambda -> myThings Developers\n\n\u3068\u304b\u3001DynamoDB\u3078\u306einsert\u6642\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\u5834\u5408\u306f\u3001\n\nAPI Gateway -> Lambda -> DynamoDB -> Lambda -> myThings Developers\n\n\u3068\u3044\u3046\u3088\u3046\u306a\u69cb\u6210\u306b\u3057\u3066\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nAWS\u3092\u4f7f\u3048\u3070\u3001\u300c\u30b5\u30fc\u30d0\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30fc\u300d\u3092\u3088\u308a\u624b\u8efd\u306b\u5b9f\u73fe\u3067\u304d\u308b\u306e\u304c\u7d20\u6674\u3089\u3057\u3044\u3068\u611f\u3058\u307e\u3057\u305f\u3002\n\n\u53c2\u8003\n\nmyThings\u3067\u52e4\u6020\u9023\u7d61\u30dc\u30bf\u30f3\u3092\u4f5c\u3063\u3066\u307f\u305f\nAmazon Dash Button\u3092\u305f\u3060\u306eIoT\u30dc\u30bf\u30f3\u3068\u3057\u3066\u4f7f\u3046\n\n# \u3084\u3063\u3066\u307f\u308b\u3053\u3068\n\u300c[myThings\u3067\u52e4\u6020\u9023\u7d61\u30dc\u30bf\u30f3\u3092\u4f5c\u3063\u3066\u307f\u305f](https://techblog.yahoo.co.jp/advent-calendar-2016/mythings-attendance-contact-button/)\u300d\u3092\u53c2\u8003\u306b\u3001Amazon Dash Button\u3092\u62bc\u3057\u305f\u3089AWS\u7d4c\u7531\u306emyThings Developers\u3067\u9023\u7d61\u3092\u9001\u308c\u308b\u7684\u306a\u3053\u3068\u3092\u3084\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff01\n\n## \u7528\u610f\u3059\u308b\u3082\u306e\n* Amazon Dash Button\n* AWS API Gateway\n* AWS DynamoDB\n* AWS Lambda\n* myThings Developers\n\n## myThings Developers\u306e\u6e96\u5099\n\u3053\u3061\u3089\u306f\u300c[myThings\u3067\u52e4\u6020\u9023\u7d61\u30dc\u30bf\u30f3\u3092\u4f5c\u3063\u3066\u307f\u305f](https://techblog.yahoo.co.jp/advent-calendar-2016/mythings-attendance-contact-button/)\u300d\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\nSlack\u306e\u8a2d\u5b9a\u306a\u3069\u306f\u4e38\u3005\u540c\u3058\u3082\u306e\u3092\u5229\u7528\u3059\u308b\u3067\u554f\u984c\u3054\u3056\u3044\u307e\u305b\u3093\u3002\n\n## \u624b\u9806\n1.Amazon Dash Button\u306e\u8a2d\u5b9a\n![AmazonDashButton](http://blogs.c.yimg.jp/res/blog-b2-2e/hcksx908/folder/943905/24/37371424/img_32_m)\n\u57fa\u672c\u7684\u306b\u306f**[\u516c\u5f0f\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u65b9\u6cd5](https://www.amazon.co.jp/gp/help/customer/display.html/ref=amb_link_1?ie=UTF8&nodeId=201746340&pf_rd_m=AN1VRQENFRJN5&pf_rd_s=merchandised-search-leftnav&pf_rd_r=TSXWXYC79BGFWDKJCQD3&pf_rd_r=TSXWXYC79BGFWDKJCQD3&pf_rd_t=101&pf_rd_p=cf13d39a-e3f0-4ff4-a61f-037a02d68c1d&pf_rd_p=cf13d39a-e3f0-4ff4-a61f-037a02d68c1d&pf_rd_i=4752863051)**\u306b\u5f93\u3063\u3066\u8a2d\u5b9a\u3059\u308b\u3002\u305f\u3060\u3057\u3001\u6700\u5f8c\u307e\u3067\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u3057\u306a\u3044\u3053\u3068\uff01\u4e0b\u8a18\u306e\u3088\u3046\u306a\u753b\u9762\u3067\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u9014\u4e2d\u3067\u3084\u3081\u308b\n\n<img src=\"http://blogs.c.yimg.jp/res/blog-b2-2e/hcksx908/folder/943905/24/37371424/img_33_m\" alt=\"\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u753b\u9762\" title=\"\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u753b\u9762\" width=\"200\" height=\"400\" />\n\n2.dasher\u306e\u8a2d\u5b9a\n[dasher](https://github.com/maddox/dasher)\u3068\u3044\u3046\u3001libpcap\u3092\u5229\u7528\u3057\u3066\u30dc\u30bf\u30f3\u306eMAC\u30a2\u30c9\u30ec\u30b9\u304b\u3089\u306e\u30d1\u30b1\u30c3\u30c8\u9001\u4fe1\u3092\u6349\u3048\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304b\u308c\u305fURL\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u6295\u3052\u308b\u3082\u306e\u304c\u3042\u308b\u306e\u3067\u3001\u4eca\u56de\u306f\u305d\u3061\u3089\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n2-a. dasher\u306e\u6e96\u5099 (\u74b0\u5883\u306b\u3088\u3063\u3066\u306f\u3001npm\u3068libpcap-dev\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5fc5\u8981\u3067\u3059)\n\n```\n$ git clone https://github.com/maddox/dasher.git\n$ cd dasher\n$ npm install\n```\n\n2-b. Amazon Dash Button\u306eMAC\u30a2\u30c9\u30ec\u30b9\u306e\u8aad\u307f\u53d6\u308a\u3002\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3001Amazon Dash Button\u3092\u62bc\u3059\u3002\n\n```\n$ ./script/find_button \nWatching for arp & udp requests on your local network, please try to press your dash now\nDash buttons should appear as manufactured by 'Amazon Technologies Inc.' \nPossible dash hardware address detected: XX:XX:XX:XX:XX:XX Manufacturer: unknown Protocol: arp\nPossible dash hardware address detected: XX:XX:XX:XX:XX:XX Manufacturer: unknown Protocol: udp\n\n\u203b\u671f\u5f85\u5024\u306f\u300cAmazon Technologies Inc.\u300d\u306e\u3088\u3046\u3067\u3059\u304c\u3001\u5b9f\u969b\u306f\u300cunknown\u300d\u306e\u3082\u306e\u304c\u51fa\u3066\u304f\u308b\u3068\u601d\u3044\u307e\u3059\n```\n\n2-c. HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u5148\u306e\u8a2d\u5b9a\n\n```config/config.json\n{\"buttons\":[\n  {\n    \"name\": \"Morning rest button\",\n    \"address\": \"XX:XX:XX:XX:XX:XX\",\n    \"timeout\": \"5000\",\n    \"url\": \"<<\u306e\u3061\u306b\u7528\u610f\u3059\u308bAWS API Gateway\u306eURL>>\",\n    \"method\": \"POST\",\n    \"headers\": {\"x-api-key\": \"<<AWS API Gateway\u3067\u53d6\u5f97\u3059\u308bAPI\u30ad\u30fc>>\"},\n    \"json\": true,\n    \"body\": {\"macAddress\": \"XX:XX:XX:XX:XX:XX\"}\n  }\n]}\n```\n\n2-d. dasher\u306e\u8d77\u52d5\u3002\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u30b3\u30de\u30f3\u30c9\u306b\u6d41\u308c\u308c\u3070\u5b8c\u4e86\n\n```\n$ sudo npm run start\n\n> dasher@1.1.1 start /Users/yumatsud/git/dasher\n> node app.js\n\n[2016-12-10T15:33:38.687Z] Morning rest button added.\n[2016-12-10T15:33:49.339Z] Morning rest button pressed.\n```\n\n3.AWS DynamoDB\u306e\u6e96\u5099\n\u5358\u7d14\u306bmyThings Developers\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\u3060\u3051\u3067\u3042\u308c\u3070\u3001\u4e0a\u8a18\u306edasher\u306e\u30ea\u30af\u30a8\u30b9\u30c8URL\u306b\u5148\u306b\u8a2d\u5b9a\u3057\u305fwebscript.io\u306eURL\u3092\u6307\u5b9a\u3059\u308b\u3060\u3051\u3067\u826f\u3044\u306e\u3067\u3001\u4eca\u56de\u306f\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u30ed\u30b0\u3082\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\n![API Gateway](http://blogs.c.yimg.jp/res/blog-b2-2e/hcksx908/folder/943905/24/37371424/img_35_m)\n\u203blogId\u3001createdAt\u3001macAddress\u3092json\u5f62\u5f0f\u3067\u6301\u3064\u30a4\u30e1\u30fc\u30b8\n\n4.AWS API Gateway\u306e\u6e96\u5099\n\u8a73\u7d30\u306a\u8aac\u660e\u306f\u7701\u304d\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u30dc\u30bf\u30f3\u3092\u62bc\u3055\u308c\u305f\u3068\u304d\u306bPOST\u3092\u53d7\u3051\u308b\u53e3\u3092\u7528\u610f\u3057\u3066\u3001\u53d7\u3051\u305f\u5148\u3092Lambda\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n![API Gateway](http://blogs.c.yimg.jp/res/blog-b2-2e/hcksx908/folder/943905/24/37371424/img_34_m)\n\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u306f\u3001\u4e0b\u8a18\u306e3\u3064\n\n* \u8ab0\u3067\u3082API\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u304d\u308b\u306e\u3082\u826f\u304f\u306a\u3044\u306e\u3067\u3001\u6700\u4f4e\u9650API\u30ad\u30fc\u306e\u8a2d\u5b9a\n* \u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u306f\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u304a\u304b\u3057\u304b\u3063\u305f\u3068\u304d\u306a\u3069\u3088\u3046\u306b400\u30a8\u30e9\u30fc\u3082\u8a2d\u5b9a\n* GET\u3067\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u30ed\u30b0\u306e\u4e00\u89a7\u3092\u53d6\u5f97\u3067\u304d\u3001\u3055\u3089\u306bmacAddress\u3092\u6307\u5b9a\u3059\u308b\u3068MacAddress\u306b\u7d10\u3065\u304f\u30ed\u30b0\u3082\u53d6\u308c\u308b\u90e8\u5206\u3082\u4f5c\u6210\n\n5.AWS Lambda\u306e\u6e96\u5099\nAWS API Gateway\u3068Lambda\u95a2\u6570\u306e\u5bfe\u5fdc\u8868\u306f\u4e0b\u8a18\n\n| \u30ea\u30bd\u30fc\u30b9 | \u30e1\u30c9\u30c3\u30c9 | Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3 | \u8aac\u660e |\n|:-----------------|:------------------|:------------------|:------------------|\n| /v1/logs | GET | list_logs | \u5168\u3066\u306e\u30ed\u30b0\u4e00\u89a7\u53d6\u5f97 |\n| /v1/logs | POST | created_log | \u30ed\u30b0\u767b\u9332 |\n| /v1/logs/{macAddress} | GET | get_logs | MAC\u30a2\u30c9\u30ec\u30b9\u3054\u3068\u306e\u30ed\u30b0\u4e00\u89a7\u53d6\u5f97 |\n\u305d\u306e\u4e2d\u3067\u3082\u3001created_log\u95a2\u6570\u90e8\u5206\u3067\u3001DynamoDB\u3078\u306e\u4fdd\u5b58\u3068myThings Developers\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5b9f\u65bd (\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u4e0b\u8a18)\n\n```created_log.js\n'use strict';\n\n//var uuid = require('node-uuid');\nconst qs = require(\"querystring\");\nvar https = require(\"https\");\nvar date = new Date();\nvar dateString = createPostTimeString();\n\nvar AWS = require(\"aws-sdk\");\nvar dynamo = new AWS.DynamoDB.DocumentClient();\n\n// myThings Developers\u306b\u5fc5\u8981\u306a\u30ea\u30af\u30a8\u30b9\u30c8\u9805\u76ee\nvar appid = \"<<appid>>\";\nvar secret = \"<<secret>>\";\nvar accessToken = \"<<access token>>\";\nvar refreshToken = \"<<refresh token>>\";\n\nexports.handler = (event, context, callback) => {\n    //console.log(\"handler start. event:\", JSON.stringify(event, null, 2));\n    // \u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30a7\u30c3\u30af\n    if (!event.macAddress) {\n        context.fail('macAddress is not specified')\n    }\n    \n    // uuid\u3092\u751f\u6210\n    //var uuid = uuid.v4();\n    var uuid = createUuid();\n    \n    // \u66f4\u65b0\u5185\u5bb9\u3092\u30bb\u30c3\u30c8\n    var item = {\n        \"logId\": uuid,\n        \"createdAt\":  Math.floor(date.getTime() / 1000),\n        \"macAddress\": event.macAddress\n    };\n    \n    var param = {\n        TableName: 'Button',\n        Item: item\n    }\n    dynamo.put(param, function(err, data) {\n        if (err) {\n            context.fail(err);\n        } else {\n            //context.succeed(item)\n            // myThings Developers\u3078\u30ea\u30af\u30a8\u30b9\u30c8\n            requestDevelopers(context);\n        }\n    });\n};\n\n/**\n * UUID(\u30e9\u30f3\u30c0\u30e0\u6587\u5b57\u5217)\u306e\u751f\u6210\n * @return string UUID\n */\nfunction createUuid() {\n    var S4 = function() {\n        return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n    }   \n    return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4() +S4());\n}\n\n/**\n * \"2016/12/21(\u6c34)\"\u306e\u5f62\u5f0f\u306e\u6587\u5b57\u5217\u3092\u8fd4\u3059\n * @return string \u65e5\u4ed8\u6587\u5b57\u5217\n */\nfunction createPostTimeString() {\n    // \u5e74\n    var year = date.getFullYear();\n    // \u6708\n    var month = date.getMonth() + 1;\n    if (month < 10) {\n        month = '0' + month;\n    }\n    // \u65e5\n    var day = date.getDate();\n    if (day < 10) {\n        day = '0' + day;\n    }\n    // \u66dc\u65e5\n    var weekDayList = [ \"\u65e5\", \"\u6708\", \"\u706b\", \"\u6c34\", \"\u6728\", \"\u91d1\", \"\u571f\" ];\n    var weekDay = weekDayList[ date.getDay() ];\n    \n    return year+\"/\"+month+\"/\"+day+\"(\"+weekDay+\")\";\n}\n\n/**\n * myThings Developers\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\n * @return void\n */\nfunction requestDevelopers(context) {\n    // \u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u751f\u6210\n    var postArgs = {\n        date: dateString\n    }\n    var postData = qs.stringify({\n        \"entry\": JSON.stringify(postArgs),\n    });\n    \n    // \u30ea\u30af\u30a8\u30b9\u30c8\u8a2d\u5b9a\n    var options = {\n        hostname: \"mythings-developers.yahooapis.jp\",\n        path: \"/v2/services/<<\u8981\u8a2d\u5b9a>>/mythings/<<\u8981\u8a2d\u5b9a>>/run\",\n        port: 443,\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n            \"Authorization\": \"Bearer \" + accessToken,\n        },\n    };\n    \n    // \u30ea\u30af\u30a8\u30b9\u30c8\n    var req = https.request(options, function(res){\n        // 401\u306e\u3068\u304d\n        if (res.statusCode == 401) {\n            // \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u4ed8\u304d\u306erefreshAccessToken\u3092\u547c\u3076\n            refreshAccessToken(context);\n        }\n\n        // \u30ec\u30b9\u30dd\u30f3\u30b9\u51e6\u7406\n        res.on(\"data\", function(body){\n            var parseData = JSON.parse(body);\n            if(typeof( parseData[\"flag\"] ) != \"undefined\") {\n                context.succeed(\"\u30ab\u30b9\u30bf\u30e0\u30c8\u30ea\u30ac\u30fc\u306e\u5b9f\u884c\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u4ed8\u3051\u307e\u3057\u305f\u3002\")\n            } else {\n                console.log(\"\u30ab\u30b9\u30bf\u30e0\u30c8\u30ea\u30ac\u30fc\u306e\u5b9f\u884c\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u53d7\u4ed8\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002:\"+body);\n                //context.fail(\"\u30ab\u30b9\u30bf\u30e0\u30c8\u30ea\u30ac\u30fc\u306e\u5b9f\u884c\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u53d7\u4ed8\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002:\"+body);\n            }\n        });\n    })\n    .on(\"error\", function(res){\n        context.fail(\"\u30ab\u30b9\u30bf\u30e0\u30c8\u30ea\u30ac\u30fc\u306e\u5b9f\u884c\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u53d7\u4ed8\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002:\"+res.content);\n    });\n    req.end(postData)\n}\n\n/**\n * \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\n */\nfunction refreshAccessToken(context) {\n    console.log(\"refreshAccessToken\u306b\u304d\u305f\u3088\");\n    // \u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u7528\u30c7\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\n    var reqData = qs.stringify({\n        \"grant_type\": \"refresh_token\",\n        \"refresh_token\": refreshToken\n    });\n    // \u30ea\u30af\u30a8\u30b9\u30c8\u8a2d\u5b9a\n    var buffer = new Buffer(appid + \":\" + secret, \"ascii\");\n    var options = {\n        hostname: \"auth.login.yahoo.co.jp\",\n        path: \"/yconnect/v1/token\",\n        port: 443,\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded; charset=utf-8\",\n            \"Authorization\": \"Basic \" + buffer.toString(\"base64\"),\n        }\n    };\n\n    // \u30ea\u30af\u30a8\u30b9\u30c8\u5b9f\u884c\n    var req = https.request(options, function(res) {\n        console.log(\"refreshAccessToken\u306erequest\u306e\u306a\u304b\u306b\u304d\u305f\u3088\");\n        // 401\u306e\u5834\u5408\n        if(res.statusCode == 401) {\n            context.fail(\"\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u306e\u6709\u52b9\u671f\u9650\u304c\u5207\u308c\u307e\u3057\u305f\u3002myThings Developers\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304b\u3089\u30ea\u30d5\u30ec\u30c3\u30b7\u30e5\u30c8\u30fc\u30af\u30f3\u3092\u518d\u53d6\u5f97\u3057\u3066\u4e0b\u3055\u3044\u3002\");\n        } else if(res.statusCode != 200) {\n            context.fail(\"\u30ab\u30b9\u30bf\u30e0\u30c8\u30ea\u30ac\u30fc\u306e\u5b9f\u884c\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u53d7\u4ed8\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002:\"+res.content);\n        }\n\n        // \u30ec\u30b9\u30dd\u30f3\u30b9\u51e6\u7406\n        res.on('data', function(body){\n            var parseData = JSON.parse(body);\n            accessToken = parseData['access_token'];\n            requestDevelopers(context);\n        }); \n    });\n\n    // POST\u30c7\u30fc\u30bf\u306e\u30ea\u30af\u30a8\u30b9\u30c8\n    req.end(reqData);\n}\n```\n\n6.\u5b9f\u884c\u7d50\u679c\n![IMG_4081.GIF](https://qiita-image-store.s3.amazonaws.com/0/71637/efa7fe92-afdb-abc6-a90d-951b691b5fa9.gif)\n\u3046\u307e\u304f\u3044\u304d\u307e\u3057\u305f\uff01\uff01\n\n# \u3084\u3063\u3066\u307f\u3066\u611f\u3058\u305f\u3053\u3068\n* Amazon Dash Button\u3068dasher\u3092\u52d5\u304b\u3059\u30de\u30b7\u30f3\u304c\u540c\u4e00\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5185\u306b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\n* dasher\u3092\u52d5\u304b\u3059\u30de\u30b7\u30f3\u304c\u5225\u9014\u5fc5\u8981\uff08PC\u3067\u3082\u53ef\u80fd\uff09\n\n\u8ab2\u984c\u306f\u3042\u308b\u3082\u306e\u306e\u3001\u30de\u30b7\u30f3\u3082\u30e9\u30ba\u30d1\u30a4\u3068\u304b\u3092\u7528\u610f\u3057\u3066\u304a\u3044\u3066\u304a\u3051\u3070\u826f\u3044\u306e\u3068\u3001\u624b\u8efd\u306b\u30cf\u30fc\u30c9(\u30dc\u30bf\u30f3)\u3092\u6e96\u5099\u3067\u304d\u308b\u306e\u306f\u826f\u3044\u3067\u3059\u306d\u3002\n\u4f55\u3088\u308a\u96fb\u6e90\u304c\u4e0d\u8981\u3067\u3001\u6795\u5143\u306b\u7f6e\u3044\u3066\u304a\u3051\u3070\u624b\u8efd\u306b\u62bc\u305b\u308b\u306e\u3067\u3001\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u3082\u826f\u3044\u3068\u601d\u3048\u308b\u3082\u306e\u3067\u3057\u305f\uff01\uff01\n\n# \u3061\u306a\u307f\u306b\n\u4eca\u56de\u306fAPI Gateway -> Lambda -> DynamoDB\u3068\u3044\u3046\u69cb\u6210\u3067\u3057\u305f\u304c\u3001DynamoDB\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3068\u3044\u3046\u6a5f\u80fd\u3092\u4f7f\u3048\u3070\u3001\n\n* API Gateway -> DynamoDB -> Lambda -> myThings Developers\n\n\u3068\u304b\u3001DynamoDB\u3078\u306einsert\u6642\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044\u5834\u5408\u306f\u3001\n\n* API Gateway -> Lambda -> DynamoDB -> Lambda -> myThings Developers\n\n\u3068\u3044\u3046\u3088\u3046\u306a\u69cb\u6210\u306b\u3057\u3066\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nAWS\u3092\u4f7f\u3048\u3070\u3001\u300c\u30b5\u30fc\u30d0\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30fc\u300d\u3092\u3088\u308a\u624b\u8efd\u306b\u5b9f\u73fe\u3067\u304d\u308b\u306e\u304c\u7d20\u6674\u3089\u3057\u3044\u3068\u611f\u3058\u307e\u3057\u305f\u3002\n\n# \u53c2\u8003\n* [myThings\u3067\u52e4\u6020\u9023\u7d61\u30dc\u30bf\u30f3\u3092\u4f5c\u3063\u3066\u307f\u305f](https://techblog.yahoo.co.jp/advent-calendar-2016/mythings-attendance-contact-button/)\n* [Amazon Dash Button\u3092\u305f\u3060\u306eIoT\u30dc\u30bf\u30f3\u3068\u3057\u3066\u4f7f\u3046](http://qiita.com/jsoizo/items/3b8bba4160f41aef20f4)\n"}