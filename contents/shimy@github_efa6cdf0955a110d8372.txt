{"context": " More than 1 year has passed since last update.\n\nAbstract\nLambda \u3068 Kinesis \u3092\u4f7f\u3063\u3066\u3001LED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3092\u642d\u8f09\u3057\u305f\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u306aT\u30b7\u30e3\u30c4\u3092\u4f5c\u308a\u307e\u3059\u3002\u524d\u7de8\u3067\u306f T\u30b7\u30e3\u30c4\u306e\u4f5c\u308a\u65b9\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\nT\u30b7\u30e3\u30c4\u306f\u3001MQTT\u7d4c\u7531\u3067AWS\u4e0a\u306b\u69cb\u7bc9\u3057\u305f\u30b5\u30fc\u30d3\u30b9\u3068\u9023\u52d5\u3057\u3066\u304a\u308a\u3001\u6e29\u5ea6\uff0f\u6e7f\u5ea6\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u53ce\u96c6\u3057\u305f\u30c7\u30fc\u30bf\u3092\u5143\u306b\u4e0d\u5feb\u6307\u6570\u3092\u8a08\u7b97\u3057\u3001\u3042\u308b\u6761\u4ef6\u306b\u5408\u81f4\u3059\u308b\u3068 LED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u8868\u793a\u3057\u307e\u3059\u3002\n\n\u4e0d\u5feb\u6307\u6570\u304c85\u4ee5\u4e0a\u306e\u5834\u5408\u306b\u306f\u3001T\u30b7\u30e3\u30c4\u304c\u6691\u304f\u84b8\u3057\u3066\u3044\u308b\u72b6\u614b\u3067\u3059\u306e\u3067\u3001\u300c\u304f\u305b\u3047\u300d\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u305d\u308c\u3067\u306f\u3001T\u30b7\u30e3\u30c4\u306e\u4f5c\u308a\u65b9\u3092\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nRaspberry Pi Type B+\nLED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3068 \u6e29\u5ea6\uff0f\u6e7f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306e\u5236\u5fa1\u306b\u306f Raspberry Pi \u3092\u5229\u7528\u3057\u307e\u3059\u3002Raspberry Pi Type B+ \u3067\u306f 40 pin \u306e IO \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002LED \u306f GPIO \u7d4c\u7531\u3067\u3001\u6e29\u5ea6\uff0f\u6e7f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306f USB \u7d4c\u7531\u3067\u63a5\u7d9a\u3057\u307e\u3057\u305f\u3002Raspberry Pi \u306f 5000 \u5186\u7a0b\u5ea6\u3067\u58f2\u3063\u3066\u3044\u307e\u3059\u3002\u4e00\u5bb6\u306b\u4e00\u53f0\u3042\u308b\u3068\u4fbf\u5229\u3067\u3059\u306d(*\u00b4\u0414`)\nRaspberry Pi\n\n\nLED Matrix \u30d1\u30fc\u30c4\nLED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306f 64 \u500b( 8x8 )\u306e LED \u304c\u63a5\u7d9a\u3055\u308c\u3066\u304a\u308a GPIO \u7d4c\u7531\u3067 Raspberry Pi \u304b\u3089\u5236\u5fa1\u3057\u307e\u3059\u3002Dynamic \u70b9\u706f\u3068\u3044\u3046\u624b\u6cd5\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001GPIO 16 pin \u3067 64 \u500b\u306e LED \u3092\u7c21\u5358\u306b\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001LED 64 \u500b\u3092\u3072\u3068\u3064\u305a\u3064\u57fa\u677f\u306b\u30cf\u30f3\u30c0\u4ed8\u3051\u3057\u307e\u3057\u305f\u3002\u30d5\u30ec\u30ad\u30b7\u30d6\u30eb\u57fa\u677f\u3092\u5229\u7528\u3059\u308b\u3068T\u30b7\u30e3\u30c4\u306b\u8a2d\u7f6e\u3057\u305f\u6642\u306b\u3082\u9055\u548c\u611f\u304c\u5c11\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u305f\u7c21\u5358\u306b\u30cf\u30b5\u30df\u3067\u30ab\u30c3\u30c8\u3067\u304d\u308b\u306e\u3082\u826f\u3044\u70b9\u3067\u3059\u3002\n\u30d5\u30ec\u30ad\u30b7\u30d6\u30eb\u57fa\u677f\n\n\u914d\u7dda\u81ea\u4f53\u306f\u79cb\u6708\u96fb\u5b50\u3067\u8ca9\u58f2\u3055\u308c\u3066\u3044\u308b\u30c7\u30d0\u30a4\u30b9\u3068\u540c\u69d8\u3067\u3059\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u56de\u8def\u56f3\u3092\u53c2\u8003\u306b\u3057\u3066\u30cf\u30f3\u30c0\u4ed8\u3051\u3059\u308c\u3070\u96e3\u306a\u304f\u5b9f\u88c5\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u975e\u5e38\u306b\u624b\u9593\u3068\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u306e\u3067\u5fcd\u8010\u3042\u308b\u306e\u307f\u3067\u3059\u3002\n\u79cb\u6708\u96fb\u5b50 LED Matrix\n\n\u4e0a\u8a18\u306e\u56de\u8def\u56f3\u3092\u53c2\u8003\u306b\u3059\u308b\u3068\u3001LED \u306e\u30a2\u30ce\u30fc\u30c9\uff08\u56de\u8def\u56f3\u4e0a 13,3,4,10,6,11,15,16\uff09\u3068\u30ab\u30bd\u30fc\u30c9(\u56de\u8def\u56f3\u5de6 9,14,8,12,1,7,2,5)\u306e\u8a08 16 pin \u3092 Raspberry pi \u306e GPIO \u306b\u63a5\u7d9a\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002GPIO \u306f 3.3 V \u306e\u51fa\u529b\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001LED \u306e\u96fb\u6d41\u3092\u63db\u7b97\u3057\u3066\u3060\u3044\u305f\u3044 300 \u03a9 \u306e\u62b5\u6297\u3092\u76f4\u63a5\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\nGPIO (19, 13, 16, 5, 22, 27, 17, 4) \u2192 R(300\u03a9)x8 \u2192 \u30a2\u30ce\u30fc\u30c9(\u56de\u8def\u56f3\u4e0a 13, 3, 4, 10, 6, 11, 15, 16) \u2192 LEDx64 \u2192 \u30ab\u30bd\u30fc\u30c9(\u56de\u8def\u56f3\u5de6 9, 14, 8, 12, 1, 7, 2, 5) \u2192 GPIO (18, 23, 24, 25, 12, 16, 20, 21)\n\u3061\u306a\u307f\u306b\u3001 Raspberry pi \u3068 LED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306e\u9593\u306f\u30d5\u30e9\u30c3\u30c8\u30b1\u30fc\u30d6\u30eb\u3067\u63a5\u7d9a\u3057\u307e\u3057\u305f\u3002\u30d5\u30e9\u30c3\u30c8\u30b1\u30fc\u30d6\u30eb\u306f\u3001\u30d1\u30fc\u30c4\u30b7\u30e7\u30c3\u30d7\u3067\u30e1\u30fc\u30c8\u30eb\u5358\u4f4d\u3067\u8ca9\u58f2\u3055\u308c\u3066\u3044\u307e\u3059\u3002Raspberry pi \u306e GPIO \u30b3\u30cd\u30af\u30bf\u304c 40 pin \u306a\u306e\u3067\u300140 \u82af\u306e\u30d5\u30e9\u30c3\u30c8\u30b1\u30fc\u30d6\u30eb\u3067\u63a5\u7d9a\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\n\u30d5\u30e9\u30c3\u30c8\u30b1\u30fc\u30d6\u30eb\u672c\u4f53\n\u30b3\u30cd\u30af\u30bf\u3068\u30d5\u30e9\u30c3\u30c8\u30b1\u30fc\u30d6\u30eb\u306e\u5727\u7740\u306f\u5c02\u7528\u6a5f\u6750\u304c\u3042\u308a\u9ad8\u4fa1\u3067\u3059\u304c\u3001\u4e07\u529b\u306a\u3069\u3092\u4f7f\u3046\u3068\u610f\u5916\u306b\u7c21\u5358\u306b\u5727\u7740\u3067\u304d\u307e\u3059\u3002\u79c1\u306f\u5272\u308a\u7bb8\u3067\u4e0a\u304b\u3089\u4f53\u91cd\u3092\u304b\u3051\u3066\u5727\u7740\u3057\u307e\u3057\u305f\u3002\n\u30d5\u30e9\u30c3\u30c8\u30b1\u30fc\u30d6\u30eb\u30b3\u30cd\u30af\u30bf\n\nLED Matrix \u30d5\u30a9\u30f3\u30c8\nLED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306b\u8868\u793a\u3059\u308b\u6587\u5b57\u306f\u30018x8 \u306e\u30c9\u30c3\u30c8\u3067\u306e\u8868\u793a\u306b\u306a\u308a\u307e\u3059\u3002\u81ea\u529b\u3067\u6587\u5b57\u3092\u8868\u3059\u884c\u5217\u3092\u4f5c\u3063\u3066\u30c9\u30c3\u30c8\u8868\u793a\u3055\u305b\u308b\u306e\u3082\u3072\u3068\u3064\u306e\u624b\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u7f8e\u54b2\u30d5\u30a9\u30f3\u30c8\u3068\u3044\u30468\u30c9\u30c3\u30c8\u30d5\u30a9\u30f3\u30c8\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u7f8e\u54b2\u30d5\u30a9\u30f3\u30c8\n\nBDF\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9 \u3057\u3066Python\u30b3\u30fc\u30c9\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b BDF \u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u5909\u63db\u3057\u307e\u3059\u3002\n\nfont_converter.py\nimport sys\nprint 'codes = {'\ndata = u''\nfor line in sys.stdin:\n    items = line[0:-1].split(' ')\n    if items[0] == 'STARTCHAR':\n        code_char = items[1]\n    if items[0] == 'ENCODING':\n        code = items[1]\n        data = u''\n#\u30fb\u30fb\u30fb\u30fb\u30fb\u3064\u3065\u304f\n\n\n\u3067\u3001\u3053\u306e\u3042\u305f\u308a\u3067\u6c17\u3065\u3044\u305f\u3093\u3067\u3059\u304c\u3001\u3053\u306e\u307e\u307e\u3060\u3068 JIS \u914d\u5217\u306e\u30b3\u30fc\u30c9\u4e00\u89a7\u304c\u51fa\u529b\u3055\u308c\u308b\u306e\u3067\u3001UTF8 \u914d\u5217\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u304c\u3001\u6642\u9593\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u82f1\u6570\u5b57\u3001\u3072\u3089\u304c\u306a\u3001\u30ab\u30bf\u30ab\u30ca\u306e\u307f\u306b\u5bfe\u5fdc\uff08\u6f22\u5b57\u306f\u975e\u5bfe\u5fdc\uff09\u3059\u308b\u3053\u3068\u306b\u3057\u3066\u3001\u30a8\u30f3\u30b8\u30cb\u30a2\u306e\u6700\u7d42\u5965\u7fa9 Excel \u3092\u4f7f\u3063\u3066 UTF8 \u914d\u5217\u306b\u5909\u63db\u3057\u307e\u3057\u305f\u3002\u5909\u63db\u9014\u4e2d\u306f\u30b0\u30c0\u30b0\u30c0\u3060\u3063\u305f\u306e\u3067\u3001\u51fa\u529b\u7d50\u679c\u306e\u30d5\u30a9\u30f3\u30c8\u5909\u63db\u30b3\u30fc\u30c9\u3060\u3051\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\nfont.py\ncodes = {\n        32: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  ],\n        33: [ 0x40, 0x40, 0x40, 0x40, 0x00, 0x40, 0x00, 0x00,  ],\n        34: [ 0xa0, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  ],\n        35: [ 0xa0, 0xe0, 0xa0, 0xa0, 0xe0, 0xa0, 0x00, 0x00,  ],\n        36: [ 0x40, 0xe0, 0xc0, 0x60, 0xe0, 0x40, 0x00, 0x00,  ],\n        37: [ 0x00, 0x80, 0x20, 0x40, 0x80, 0x20, 0x00, 0x00,  ],\n#\u301c\u301c\u301c\u301c\u301c\n        8736: [ 0x00, 0x02, 0x04, 0x08, 0x10, 0x20, 0x7e, 0x00,  ],\n        8735: [ 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7e, 0x00,  ],\n        8895: [ 0x00, 0x02, 0x06, 0x0a, 0x12, 0x22, 0x7e, 0x00,  ],\n        8757: [ 0x00, 0x44, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,  ],\n        8745: [ 0x00, 0x3c, 0x42, 0x42, 0x42, 0x42, 0x42, 0x00,  ],\n        8746: [ 0x42, 0x42, 0x42, 0x42, 0x42, 0x3c, 0x00, 0x00,  ],\n}\n\n\nhttps://gist.github.com/shimy/f23b54c0f57d7b325e23\n\nLED Matrix \u8868\u793a\u30d7\u30ed\u30b0\u30e9\u30e0\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067 GPIO \u3067 LED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3067\u304d\u307e\u3059\u3002LED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306e\u539f\u7406\u306f\u4ee5\u4e0b\u306e\u52d5\u753b\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002Python \u304b\u3089\u306e GPIO \u5236\u5fa1\u3082\u7406\u89e3\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nRaspberry Pi Project: The LED Matrix\n\ncontrol.py\n# -*- coding: utf-8 -*-\nimport RPi.GPIO as GPIO\nimport time\nimport font as font\nimport os\nimport sys\n\n###### GPIO Initialization #####\nGPIO.cleanup()\nGPIO.setmode(GPIO.BCM)\n\ncathodes = [4,17,27,22,5,6,13,19]\nanodes = [18,23,24,25,12,16,20,21]\n\nfor cathode in cathodes:\n    GPIO.setup(cathode, GPIO.OUT)\n    GPIO.output(cathode, 0)\n\nfor anode in anodes:\n    GPIO.setup(anode, GPIO.OUT)\n    GPIO.output(anode, 0)\n\n###### Display message #####\ndef display_message(str):\n    sleeptime = 0.001\n    speed = 8\n    half = 4\n    full = 8\n    matrix_height = 8\n    matrix_width = 0\n\n    for idx in range(len(str)):\n        char_code = ord(str[idx])\n        if char_code < 1000:\n            matrix_width += half\n        else:\n            matrix_width += full\n\n    matrixes = matrix_height*['']\n\n    for idx in range(len(str)):\n        char_code = ord(str[idx])\n        if font.codes.has_key(char_code):\n            hex_pattern = font.codes[char_code]\n        else:\n            hex_pattern = font.codes[9632]\n\n        for n in range(matrix_height):\n            if char_code < 1000:\n                bits_str = format(hex_pattern[n]>>4, '04b')\n            else:\n                bits_str = '{0:08b}'.format(hex_pattern[n])\n            bits_str = bits_str.replace('0', '.').replace('1', 'o')\n            bits_str = bits_str.replace('.', '1').replace('o', '0')\n            matrixes[n] += bits_str\n\n    try:\n        pattern = matrix_height*['']\n        for cnt in range(len(matrixes[0])-matrix_height):\n\n            for row_no in range(matrix_height):\n                pattern[row_no] = matrixes[row_no][cnt:cnt+matrix_height]\n\n            os.system('clear')\n            print '\\n'.join(pattern).replace('0', 'o').replace('1', ' ')\n\n            for pause in range(speed):\n                for i in range(8):\n                    for j in range(8):\n                        GPIO.output(cathodes[j], int(pattern[i][j]))\n\n                    GPIO.output(anodes[i],1)\n                    time.sleep(sleeptime)\n                    GPIO.output(anodes[i],0)\n\n    except KeyboardInterrupt:\n        GPIO.cleanup()\n\n##### main #####\nstr = u\"\u3000\u30cf\u30ed\u30fc\u30bb\u30ab\u30a4\u3000\"\ndisplay_message(str)\n\n\n\n\u6e29\u5ea6\uff0f\u6e7f\u5ea6\u30bb\u30f3\u30b5\u30fc\n\u6e29\u5ea6\uff0f\u6e7f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306b\u306f USBRH \u3068\u3044\u3046 Straberry Linux Co, Ltd. \u3067\u8ca9\u58f2\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\nhttps://strawberry-linux.com/catalog/items?code=52002\n\nusbrh \u3092\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u6e29\u5ea6\u3068\u6e7f\u5ea6\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n$ sudo usbrh\n$ 29.68 41.41\n\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3059\u308b\u3068\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3084\u5229\u7528\u65b9\u6cd5\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nhttp://hitoriblog.com/?p=9835\nhttp://www.infiniteloop.co.jp/blog/2013/02/raspberrypitem/\n\nT\u30b7\u30e3\u30c4\u306e\u30c6\u30b9\u30c8\n\nhttps://www.youtube.com/watch?v=YxEnnobXkWY\n\n\u307e\u3068\u3081\nLambda \u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u7528\u306e\u8a18\u4e8b\u306a\u3093\u3067\u3059\u304c\u3001\u307e\u3060 Lambda \u306e\u8a71\u304c\u3067\u3066\u304d\u3066\u307e\u305b\u3093\u306d\u30fb\u30fb\u30fb\u529b\u5c3d\u304d\u305f\u306e\u3067\u5f8c\u7de8\u3067\u304a\u4f1a\u3044\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u514d\u8cac\n\u3053\u3061\u3089\u306f\u500b\u4eba\u306e\u610f\u898b\u3067\u4f1a\u793e\u3068\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u3002\n# Abstract\nLambda \u3068 Kinesis \u3092\u4f7f\u3063\u3066\u3001LED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3092\u642d\u8f09\u3057\u305f\u30a4\u30f3\u30c6\u30ea\u30b8\u30a7\u30f3\u30c8\u306aT\u30b7\u30e3\u30c4\u3092\u4f5c\u308a\u307e\u3059\u3002\u524d\u7de8\u3067\u306f T\u30b7\u30e3\u30c4\u306e\u4f5c\u308a\u65b9\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\nT\u30b7\u30e3\u30c4\u306f\u3001MQTT\u7d4c\u7531\u3067AWS\u4e0a\u306b\u69cb\u7bc9\u3057\u305f\u30b5\u30fc\u30d3\u30b9\u3068\u9023\u52d5\u3057\u3066\u304a\u308a\u3001\u6e29\u5ea6\uff0f\u6e7f\u5ea6\u30bb\u30f3\u30b5\u30fc\u304b\u3089\u53ce\u96c6\u3057\u305f\u30c7\u30fc\u30bf\u3092\u5143\u306b\u4e0d\u5feb\u6307\u6570\u3092\u8a08\u7b97\u3057\u3001\u3042\u308b\u6761\u4ef6\u306b\u5408\u81f4\u3059\u308b\u3068 LED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u8868\u793a\u3057\u307e\u3059\u3002\n\n![Slide022.png](https://qiita-image-store.s3.amazonaws.com/0/19485/d32a1fc8-2737-3245-2098-4b8028cab99a.png)\n\n\u4e0d\u5feb\u6307\u6570\u304c85\u4ee5\u4e0a\u306e\u5834\u5408\u306b\u306f\u3001T\u30b7\u30e3\u30c4\u304c\u6691\u304f\u84b8\u3057\u3066\u3044\u308b\u72b6\u614b\u3067\u3059\u306e\u3067\u3001\u300c\u304f\u305b\u3047\u300d\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n![Slide047.png](https://qiita-image-store.s3.amazonaws.com/0/19485/b805f7c1-43c6-1212-e90b-916fd0685e17.png)\n\n\u305d\u308c\u3067\u306f\u3001T\u30b7\u30e3\u30c4\u306e\u4f5c\u308a\u65b9\u3092\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n# Raspberry Pi Type B+\nLED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3068 \u6e29\u5ea6\uff0f\u6e7f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306e\u5236\u5fa1\u306b\u306f Raspberry Pi \u3092\u5229\u7528\u3057\u307e\u3059\u3002Raspberry Pi Type B+ \u3067\u306f 40 pin \u306e IO \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002LED \u306f GPIO \u7d4c\u7531\u3067\u3001\u6e29\u5ea6\uff0f\u6e7f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306f USB \u7d4c\u7531\u3067\u63a5\u7d9a\u3057\u307e\u3057\u305f\u3002Raspberry Pi \u306f 5000 \u5186\u7a0b\u5ea6\u3067\u58f2\u3063\u3066\u3044\u307e\u3059\u3002\u4e00\u5bb6\u306b\u4e00\u53f0\u3042\u308b\u3068\u4fbf\u5229\u3067\u3059\u306d(*\u00b4\u0414`)\n[Raspberry Pi](http://www.raspberrypi.org/products/model-b-plus/)\n\n![Slide024.png](https://qiita-image-store.s3.amazonaws.com/0/19485/ed27f9ba-3f7e-c5ea-303d-0f30ac6432d5.png)\n\n# LED Matrix \u30d1\u30fc\u30c4\nLED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306f 64 \u500b( 8x8 )\u306e LED \u304c\u63a5\u7d9a\u3055\u308c\u3066\u304a\u308a GPIO \u7d4c\u7531\u3067 Raspberry Pi \u304b\u3089\u5236\u5fa1\u3057\u307e\u3059\u3002Dynamic \u70b9\u706f\u3068\u3044\u3046\u624b\u6cd5\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001GPIO 16 pin \u3067 64 \u500b\u306e LED \u3092\u7c21\u5358\u306b\u5236\u5fa1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001LED 64 \u500b\u3092\u3072\u3068\u3064\u305a\u3064\u57fa\u677f\u306b\u30cf\u30f3\u30c0\u4ed8\u3051\u3057\u307e\u3057\u305f\u3002\u30d5\u30ec\u30ad\u30b7\u30d6\u30eb\u57fa\u677f\u3092\u5229\u7528\u3059\u308b\u3068T\u30b7\u30e3\u30c4\u306b\u8a2d\u7f6e\u3057\u305f\u6642\u306b\u3082\u9055\u548c\u611f\u304c\u5c11\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u305f\u7c21\u5358\u306b\u30cf\u30b5\u30df\u3067\u30ab\u30c3\u30c8\u3067\u304d\u308b\u306e\u3082\u826f\u3044\u70b9\u3067\u3059\u3002\n[\u30d5\u30ec\u30ad\u30b7\u30d6\u30eb\u57fa\u677f](http://www.amazon.co.jp/dp/B00LPI4LJM)\n\n![Slide027.png](https://qiita-image-store.s3.amazonaws.com/0/19485/706a2b24-9c39-f4fb-2ce7-4ff623ce3589.png)\n\n\u914d\u7dda\u81ea\u4f53\u306f\u79cb\u6708\u96fb\u5b50\u3067\u8ca9\u58f2\u3055\u308c\u3066\u3044\u308b\u30c7\u30d0\u30a4\u30b9\u3068\u540c\u69d8\u3067\u3059\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u56de\u8def\u56f3\u3092\u53c2\u8003\u306b\u3057\u3066\u30cf\u30f3\u30c0\u4ed8\u3051\u3059\u308c\u3070\u96e3\u306a\u304f\u5b9f\u88c5\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u975e\u5e38\u306b\u624b\u9593\u3068\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u306e\u3067\u5fcd\u8010\u3042\u308b\u306e\u307f\u3067\u3059\u3002\n[\u79cb\u6708\u96fb\u5b50 LED Matrix](http://akizukidenshi.com/catalog/g/gI-05163/)\n![alt](http://akizukidenshi.com/download/img/osl641501-ara_kairo.png)\n\n\u4e0a\u8a18\u306e\u56de\u8def\u56f3\u3092\u53c2\u8003\u306b\u3059\u308b\u3068\u3001LED \u306e\u30a2\u30ce\u30fc\u30c9\uff08\u56de\u8def\u56f3\u4e0a 13,3,4,10,6,11,15,16\uff09\u3068\u30ab\u30bd\u30fc\u30c9(\u56de\u8def\u56f3\u5de6 9,14,8,12,1,7,2,5)\u306e\u8a08 16 pin \u3092 Raspberry pi \u306e GPIO \u306b\u63a5\u7d9a\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002GPIO \u306f 3.3 V \u306e\u51fa\u529b\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001LED \u306e\u96fb\u6d41\u3092\u63db\u7b97\u3057\u3066\u3060\u3044\u305f\u3044 300 \u03a9 \u306e\u62b5\u6297\u3092\u76f4\u63a5\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\nGPIO (19, 13, 16, 5, 22, 27, 17, 4) \u2192 R(300\u03a9)x8 \u2192 \u30a2\u30ce\u30fc\u30c9(\u56de\u8def\u56f3\u4e0a 13, 3, 4, 10, 6, 11, 15, 16) \u2192 LEDx64 \u2192 \u30ab\u30bd\u30fc\u30c9(\u56de\u8def\u56f3\u5de6 9, 14, 8, 12, 1, 7, 2, 5) \u2192 GPIO (18, 23, 24, 25, 12, 16, 20, 21)\n\n\u3061\u306a\u307f\u306b\u3001 Raspberry pi \u3068 LED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306e\u9593\u306f\u30d5\u30e9\u30c3\u30c8\u30b1\u30fc\u30d6\u30eb\u3067\u63a5\u7d9a\u3057\u307e\u3057\u305f\u3002\u30d5\u30e9\u30c3\u30c8\u30b1\u30fc\u30d6\u30eb\u306f\u3001\u30d1\u30fc\u30c4\u30b7\u30e7\u30c3\u30d7\u3067\u30e1\u30fc\u30c8\u30eb\u5358\u4f4d\u3067\u8ca9\u58f2\u3055\u308c\u3066\u3044\u307e\u3059\u3002Raspberry pi \u306e GPIO \u30b3\u30cd\u30af\u30bf\u304c 40 pin \u306a\u306e\u3067\u300140 \u82af\u306e\u30d5\u30e9\u30c3\u30c8\u30b1\u30fc\u30d6\u30eb\u3067\u63a5\u7d9a\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\n[\u30d5\u30e9\u30c3\u30c8\u30b1\u30fc\u30d6\u30eb\u672c\u4f53](http://jp.rs-online.com/web/p/flat-ribbon-cable/5208489/)\n\n\u30b3\u30cd\u30af\u30bf\u3068\u30d5\u30e9\u30c3\u30c8\u30b1\u30fc\u30d6\u30eb\u306e\u5727\u7740\u306f\u5c02\u7528\u6a5f\u6750\u304c\u3042\u308a\u9ad8\u4fa1\u3067\u3059\u304c\u3001\u4e07\u529b\u306a\u3069\u3092\u4f7f\u3046\u3068\u610f\u5916\u306b\u7c21\u5358\u306b\u5727\u7740\u3067\u304d\u307e\u3059\u3002\u79c1\u306f\u5272\u308a\u7bb8\u3067\u4e0a\u304b\u3089\u4f53\u91cd\u3092\u304b\u3051\u3066\u5727\u7740\u3057\u307e\u3057\u305f\u3002\n[\u30d5\u30e9\u30c3\u30c8\u30b1\u30fc\u30d6\u30eb\u30b3\u30cd\u30af\u30bf](http://www.sengoku.co.jp/mod/sgk_cart/detail.php?code=G857-N54C#)\n\n# LED Matrix \u30d5\u30a9\u30f3\u30c8\nLED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306b\u8868\u793a\u3059\u308b\u6587\u5b57\u306f\u30018x8 \u306e\u30c9\u30c3\u30c8\u3067\u306e\u8868\u793a\u306b\u306a\u308a\u307e\u3059\u3002\u81ea\u529b\u3067\u6587\u5b57\u3092\u8868\u3059\u884c\u5217\u3092\u4f5c\u3063\u3066\u30c9\u30c3\u30c8\u8868\u793a\u3055\u305b\u308b\u306e\u3082\u3072\u3068\u3064\u306e\u624b\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u7f8e\u54b2\u30d5\u30a9\u30f3\u30c8\u3068\u3044\u30468\u30c9\u30c3\u30c8\u30d5\u30a9\u30f3\u30c8\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n[\u7f8e\u54b2\u30d5\u30a9\u30f3\u30c8](http://www.geocities.jp/littlimi/misaki.htm)\n\n![Slide028.png](https://qiita-image-store.s3.amazonaws.com/0/19485/8eed2fb2-5314-3f2a-2a5b-8eb59e18d1dc.png)\n\n[BDF\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9](http://www.geocities.jp/littlimi/arc/misaki/misaki_bdf_2012-06-03.tar.gz) \u3057\u3066Python\u30b3\u30fc\u30c9\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b BDF \u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u5909\u63db\u3057\u307e\u3059\u3002\n\n```py:font_converter.py\nimport sys\nprint 'codes = {'\ndata = u''\nfor line in sys.stdin:\n\titems = line[0:-1].split(' ')\n\tif items[0] == 'STARTCHAR':\n\t\tcode_char = items[1]\n\tif items[0] == 'ENCODING':\n\t\tcode = items[1]\n\t\tdata = u''\n#\u30fb\u30fb\u30fb\u30fb\u30fb\u3064\u3065\u304f\n```\n\n\u3067\u3001\u3053\u306e\u3042\u305f\u308a\u3067\u6c17\u3065\u3044\u305f\u3093\u3067\u3059\u304c\u3001\u3053\u306e\u307e\u307e\u3060\u3068 JIS \u914d\u5217\u306e\u30b3\u30fc\u30c9\u4e00\u89a7\u304c\u51fa\u529b\u3055\u308c\u308b\u306e\u3067\u3001UTF8 \u914d\u5217\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u304c\u3001\u6642\u9593\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u82f1\u6570\u5b57\u3001\u3072\u3089\u304c\u306a\u3001\u30ab\u30bf\u30ab\u30ca\u306e\u307f\u306b\u5bfe\u5fdc\uff08\u6f22\u5b57\u306f\u975e\u5bfe\u5fdc\uff09\u3059\u308b\u3053\u3068\u306b\u3057\u3066\u3001\u30a8\u30f3\u30b8\u30cb\u30a2\u306e\u6700\u7d42\u5965\u7fa9 Excel \u3092\u4f7f\u3063\u3066 UTF8 \u914d\u5217\u306b\u5909\u63db\u3057\u307e\u3057\u305f\u3002\u5909\u63db\u9014\u4e2d\u306f\u30b0\u30c0\u30b0\u30c0\u3060\u3063\u305f\u306e\u3067\u3001\u51fa\u529b\u7d50\u679c\u306e\u30d5\u30a9\u30f3\u30c8\u5909\u63db\u30b3\u30fc\u30c9\u3060\u3051\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\n```py:font.py\ncodes = {\n        32: [ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  ],\n        33: [ 0x40, 0x40, 0x40, 0x40, 0x00, 0x40, 0x00, 0x00,  ],\n        34: [ 0xa0, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  ],\n        35: [ 0xa0, 0xe0, 0xa0, 0xa0, 0xe0, 0xa0, 0x00, 0x00,  ],\n        36: [ 0x40, 0xe0, 0xc0, 0x60, 0xe0, 0x40, 0x00, 0x00,  ],\n        37: [ 0x00, 0x80, 0x20, 0x40, 0x80, 0x20, 0x00, 0x00,  ],\n#\u301c\u301c\u301c\u301c\u301c\n        8736: [ 0x00, 0x02, 0x04, 0x08, 0x10, 0x20, 0x7e, 0x00,  ],\n        8735: [ 0x00, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7e, 0x00,  ],\n        8895: [ 0x00, 0x02, 0x06, 0x0a, 0x12, 0x22, 0x7e, 0x00,  ],\n        8757: [ 0x00, 0x44, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,  ],\n        8745: [ 0x00, 0x3c, 0x42, 0x42, 0x42, 0x42, 0x42, 0x00,  ],\n        8746: [ 0x42, 0x42, 0x42, 0x42, 0x42, 0x3c, 0x00, 0x00,  ],\n}\n```\nhttps://gist.github.com/shimy/f23b54c0f57d7b325e23\n\n# LED Matrix \u8868\u793a\u30d7\u30ed\u30b0\u30e9\u30e0\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067 GPIO \u3067 LED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3067\u304d\u307e\u3059\u3002LED \u30de\u30c8\u30ea\u30c3\u30af\u30b9\u306e\u539f\u7406\u306f\u4ee5\u4e0b\u306e\u52d5\u753b\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002Python \u304b\u3089\u306e GPIO \u5236\u5fa1\u3082\u7406\u89e3\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n[Raspberry Pi Project: The LED Matrix](https://www.youtube.com/watch?v=jk7JHHbryGg)\n\n```py:control.py\n# -*- coding: utf-8 -*-\nimport RPi.GPIO as GPIO\nimport time\nimport font as font\nimport os\nimport sys\n\n###### GPIO Initialization #####\nGPIO.cleanup()\nGPIO.setmode(GPIO.BCM)\n\ncathodes = [4,17,27,22,5,6,13,19]\nanodes = [18,23,24,25,12,16,20,21]\n\nfor cathode in cathodes:\n    GPIO.setup(cathode, GPIO.OUT)\n    GPIO.output(cathode, 0)\n\nfor anode in anodes:\n    GPIO.setup(anode, GPIO.OUT)\n    GPIO.output(anode, 0)\n\n###### Display message #####\ndef display_message(str):\n    sleeptime = 0.001\n    speed = 8\n    half = 4\n    full = 8\n    matrix_height = 8\n    matrix_width = 0\n\n    for idx in range(len(str)):\n        char_code = ord(str[idx])\n        if char_code < 1000:\n            matrix_width += half\n        else:\n            matrix_width += full\n\n    matrixes = matrix_height*['']\n\n    for idx in range(len(str)):\n        char_code = ord(str[idx])\n        if font.codes.has_key(char_code):\n            hex_pattern = font.codes[char_code]\n        else:\n            hex_pattern = font.codes[9632]\n\n        for n in range(matrix_height):\n            if char_code < 1000:\n                bits_str = format(hex_pattern[n]>>4, '04b')\n            else:\n                bits_str = '{0:08b}'.format(hex_pattern[n])\n            bits_str = bits_str.replace('0', '.').replace('1', 'o')\n            bits_str = bits_str.replace('.', '1').replace('o', '0')\n            matrixes[n] += bits_str\n\n    try:\n        pattern = matrix_height*['']\n        for cnt in range(len(matrixes[0])-matrix_height):\n            \n            for row_no in range(matrix_height):\n                pattern[row_no] = matrixes[row_no][cnt:cnt+matrix_height]\n\n            os.system('clear')\n            print '\\n'.join(pattern).replace('0', 'o').replace('1', ' ')\n\n            for pause in range(speed):\n                for i in range(8):\n                    for j in range(8):\n                        GPIO.output(cathodes[j], int(pattern[i][j]))\n                    \n                    GPIO.output(anodes[i],1)\n                    time.sleep(sleeptime)\n                    GPIO.output(anodes[i],0)\n\n    except KeyboardInterrupt:\n        GPIO.cleanup()\n\n##### main #####\nstr = u\"\u3000\u30cf\u30ed\u30fc\u30bb\u30ab\u30a4\u3000\"\ndisplay_message(str)\n```\n\n# \u6e29\u5ea6\uff0f\u6e7f\u5ea6\u30bb\u30f3\u30b5\u30fc\n\u6e29\u5ea6\uff0f\u6e7f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306b\u306f USBRH \u3068\u3044\u3046 Straberry Linux Co, Ltd. \u3067\u8ca9\u58f2\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\nhttps://strawberry-linux.com/catalog/items?code=52002\n\n![Slide025.png](https://qiita-image-store.s3.amazonaws.com/0/19485/a6a57367-227f-8cec-3bff-6fd9591a3a34.png)\n\nusbrh \u3092\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u6e29\u5ea6\u3068\u6e7f\u5ea6\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n```shell-session\n$ sudo usbrh\n$ 29.68 41.41\n```\n\n\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3059\u308b\u3068\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3084\u5229\u7528\u65b9\u6cd5\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nhttp://hitoriblog.com/?p=9835\nhttp://www.infiniteloop.co.jp/blog/2013/02/raspberrypitem/\n\n# T\u30b7\u30e3\u30c4\u306e\u30c6\u30b9\u30c8\n![Screen Shot 2014-12-22 at 12.19.21 AM.png](https://qiita-image-store.s3.amazonaws.com/0/19485/4fcf1759-330f-8305-abf4-be7aaf734de4.png)\nhttps://www.youtube.com/watch?v=YxEnnobXkWY\n\n# \u307e\u3068\u3081\nLambda \u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u7528\u306e\u8a18\u4e8b\u306a\u3093\u3067\u3059\u304c\u3001\u307e\u3060 Lambda \u306e\u8a71\u304c\u3067\u3066\u304d\u3066\u307e\u305b\u3093\u306d\u30fb\u30fb\u30fb\u529b\u5c3d\u304d\u305f\u306e\u3067\u5f8c\u7de8\u3067\u304a\u4f1a\u3044\u3057\u307e\u3057\u3087\u3046\u3002\n\n# \u514d\u8cac\n\u3053\u3061\u3089\u306f\u500b\u4eba\u306e\u610f\u898b\u3067\u4f1a\u793e\u3068\u306f\u95a2\u4fc2\u3042\u308a\u307e\u305b\u3093\u3002\n", "tags": ["RaspberryPi", "Kinesis", "lambda", "mqtt", "Python"]}