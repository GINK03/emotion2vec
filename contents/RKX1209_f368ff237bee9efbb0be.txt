{"context": "\u3053\u306e\u8a18\u4e8b\u306fBitVisor Advent Calendar 12\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e(\u9045\u523b\u3059\u307f\u307e\u305b\u3093\nBitVisor\u306b\u30d7\u30e9\u30b0\u30a4\u30f3\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3066\u3001\u5404\u30a4\u30d9\u30f3\u30c8\u306b\u5bfe\u5fdc\u3057\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u547c\u3079\u308b\u4ed5\u7d44\u307f\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u6a5f\u80fd\n\u3053\u3053\u3067\u8a00\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u6a5f\u80fd\u3068\u306f\u3001\u3044\u308f\u3086\u308bdlopen\u3068\u304b\u3067\u52d5\u7684\u306b\u30ed\u30fc\u30c9/\u30a2\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u7269\u3067\u306f\u306a\u304f(type1\u306ebitvisor\u3067\u305d\u308c\u3092\u3084\u308b\u306e\u306f\u5c11\u3057\u9aa8\u304c\u6298\u308c\u305d\u3046\u3067\u3059\u306d...) \u9759\u7684\u306b\u30ea\u30f3\u30af\u3057\u3066\u3057\u307e\u3046\u5f62\u3067\u3059\u3002\n\u30d7\u30e9\u30b0\u30a4\u30f3\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u306fC++\u3067\u66f8\u3051\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u5b9f\u88c5\u624b\u9806\u3068\u3057\u3066\u306f\u3001Plugin\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u81ea\u5206\u306e\u30aa\u30ea\u30b8\u30ca\u30eb\u306a\u30d7\u30e9\u30b0\u30a4\u30f3\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3001\u8af8\u3005\u306e\u30de\u30af\u30ed\u3092\u66f8\u3044\u3066\u3084\u308b\u3060\u3051\u3067\u3059\u3002\u5f8c\u306fSignal/Slots\u30e2\u30c7\u30eb\u98a8\u306b\u3001connect\u3067\u5404\u7a2e\u30a4\u30d9\u30f3\u30c8\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u5b9f\u88c5\u4f8b(Annotation\u30d7\u30e9\u30b0\u30a4\u30f3)\n\u5b9f\u969b\u306bAnnotation\u3068\u3044\u3046\u540d\u524d\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\nk2e/Plugins/Annotation.hpp\n#ifndef ANNOTATION_HPP\n#define ANNOTATION_HPP\n\n#include <k2e/Plugin.hpp>\n#include \"CorePlugin.hpp\"\n\nnamespace k2e {\n\nclass Annotation : public Plugin {\n  K2E_PLUGIN\npublic:\n  Annotation(K2E *k2e): Plugin(k2e) {}\n  void initialize();\n  void onModuleLoad(K2ECallbackParams *params);\n};\n\n}\n#endif\n\n\n\nPlugin\u3092\u7d99\u627f\u3057\u305fAnnotation\u30af\u30e9\u30b9\u3067\u3059\u3002K2E_PLUGIN\u30de\u30af\u30ed\u306b\u3088\u308a\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u5fc5\u8981\u306a\u3082\u308d\u3082\u308d\u306e\u5185\u90e8\u5909\u6570\u304c\u5c55\u958b\u3055\u308c\u307e\u3059\u304c\u3001\u958b\u767a\u8005\u306f\u6c17\u306b\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\nk2e/Plugins/Annotation.cpp\n#include \"Annotation.hpp\"\nextern \"C\" {\n#include \"core/printf.h\"\n}\n#include <k2e/K2E.hpp>\n#include <k2e/ModuleDescriptor.h>\n\nnamespace k2e {\n\nK2E_DEFINE_PLUGIN(Annotation, \"Plugin for monitoring module and bypasses functions\", \"Annotation\");\n\nvoid Annotation::initialize()\n{\n  k2e()->getCorePlugin()->onModuleLoad.connect(\n                static_cast<Plugin*>(this),\n                static_cast<K2ECallbackFunc_t>(&Annotation::onModuleLoad));\n}\n\nvoid Annotation::onModuleLoad(K2ECallbackParams *params)\n{\n  ModuleDescriptor *md = params->ml.md;\n  printf(\"k2e: driver has loaded at 0x%llx(0x%llx): size=%llu\\n\",\n        md->LoadVBase, md->LoadPBase, md->Size);\n}\n\n}\n\n\nAnnotation::onModuleLoad\u3068\u3044\u3046\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u30b3\u30a2\u30d7\u30e9\u30b0\u30a4\u30f3\u306eonModuleLoad\u306bconnect\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u30ab\u30fc\u30cd\u30eb\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30ed\u30fc\u30c9\u3055\u308c\u305f\u6642\u306bAnnotation::onModuleLoad\u304c\u547c\u3070\u308c\u3001\u60c5\u5831\u304cprintf\u3067\u8868\u793a\u3055\u308c\u308b\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30ed\u30fc\u30c9\u691c\u77e5\u81ea\u4f53\u306f\u72ec\u81ea\u306eVMCALL\u3068\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\n[\u53c2\u7167]\n- BitVisor\u306bVMCALL\u3092\u8ffd\u52a0\u3057\u3066\u30c9\u30e9\u30a4\u30d0\u3092\u691c\u77e5\u3057\u3066\u307f\u308b \nhttp://qiita.com/RKX1209/items/91e45c5f1b9b9c7211f8 \n\n\u5b9f\u884c\n\u5b9f\u969b\u306b\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\u30c9\u30e9\u30a4\u30d0\u306e\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9,\u7269\u7406\u30a2\u30c9\u30ec\u30b9,\u30b5\u30a4\u30ba\u304c\u8868\u793a\u3067\u304d\u3066\u3044\u308b\u4e8b\u304c\u308f\u304b\u308a\u307e\u3059\u3002\nk2e: driver has loaded at 0xffffffffc092b000(0x4192b000) size=16384\n\nC++\u3068\u306e\u9023\u643a\n\u3068\u3053\u308d\u3067\u3053\u306e\u30d7\u30e9\u30b0\u30a4\u30f3C++\u3067\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u304c\u3001BitVisor\u306e\u3088\u3046\u306a\u30ab\u30fc\u30cd\u30eb\u7a7a\u9593\u3067\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092C++\u3067\u8a18\u8ff0\u3059\u308b\u306b\u306f\u5c11\u3057\u5de5\u592b(\u3068\u5236\u7d04)\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\u5f53\u7136\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3088\u3046\u306b\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001\u6700\u4f4e\u9650\u306e\u6a5f\u80fd\u304c\u4f7f\u3048\u308b\u3088\u3046ABI\u3092\u5b9f\u88c5\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b\u308f\u3051\u3067\u3059\u3002\n[\u53c2\u8003]\nOSDev.org C++\nhttp://wiki.osdev.org/C%2B%2B\n\u7279\u306boperator new/delete\u306f\u5fc5\u9808\u3067\u3059\u304c\u3001\u3053\u308c\u3089\u306fBitVisor\u306emm.c\u306b\u3042\u308balloc/free\u306e\u30e9\u30c3\u30d1\u3068\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\u305d\u308c\u304b\u3089Makefile\u3082C++\u30b3\u30fc\u30c9\u3092\u30d3\u30eb\u30c9\u3067\u304d\u308b\u3088\u3046\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\ndiff --git a/Makefile.build b/../k2e/bitvisor/Makefile.build\nindex 5c9e4e2..c61d65c 100644\n--- a/Makefile.build\n+++ b/../k2e/bitvisor/Makefile.build\n@@ -12,6 +12,9 @@ bits-1 = 64\n CFLAGS = -m$(bits-$(CONFIG_64)) -mno-red-zone -mno-sse -nostdinc -g -O \\\n -ffreestanding -fno-builtin -fno-stack-protector $(backtrace) \\\n -fno-strict-aliasing -Wall $(CONSTANTS-1) -I$(DIR) -Iinclude\n+CXXFLAGS = -m$(bits-$(CONFIG_64)) -mno-red-zone -mno-sse -nostdinc -g -O \\\n+-ffreestanding -fno-builtin -fno-rtti -fno-exceptions -fno-stack-protector $(backtrace) \\\n+-fno-strict-aliasing -Wall $(CONSTANTS-1) -I$(DIR) -Iinclude\n ASFLAGS = -m$(bits-$(CONFIG_64)) -g -Wa,-I,$(DIR) -Wa,--divide\n LDFLAGS = -m$(bits-$(CONFIG_64)) -g -nostdlib -Wl,--build-id=none\n outo_p = $(outo)_p\n@@ -47,7 +50,8 @@ bstacksize-1-b := $(bstacksize-1-name:%=$(%).)\n bstacksize-1-g := $(foreach i,$(bstacksize-1-name),$($(i)).)\n bstacksize-1 := $(bstacksize-1-$(m))\n bobjs = $(bobjs-1:%=$(dir)%)\n-objs = $(objs-1:%=$(dir)%) $(subouto) $(subouta) $(suboutp)\n+k2e-objs = $(k2eobjs-1:%=$(dir)%)\n+objs = $(objs-1:%=$(dir)%) $(k2e-objs) $(subouto) $(subouta) $(suboutp)\n deps = $(objs-1:%.o=$(dir)%.d) $(bobjs-1:%.o=$(dir)%.d)\n bins = $(bins-1:%=$(dir)%.bin)\n flags-data := CFLAGS=$(CFLAGS) ASFLAGS=$(ASFLAGS) LDFLAGS=$(LDFLAGS)\n@@ -135,7 +139,7 @@ $(subouto_p) $(subouta_p) $(suboutp_p) :\n\n # Suffix rules\n .SUFFIXES :\n-.SUFFIXES : .c .s .o .bin\n+.SUFFIXES : .c .cpp .s .o .bin\n\n .c.o :\n    $(V-info) CC $@\n@@ -152,5 +156,9 @@ $(SED) -n -e '1{x' -e 's=^=$@ :>=' -e x -e '}' -e 's/#.*//' \\\n -e '$${x' -e 's/>.</ /g' -e 's/>$$//p' -e 's/.*: *//' \\\n -e 's/$$/ :/p' -e '}' $< > $(@:.o=).d || { $(RM) $@; false; }\n\n+.cpp.o :\n+   $(V-info) CXX $@\n+   $(CXX) $(CXXFLAGS) -c -o $@ $<\n+\n # include\n include $(dir)$(depends)\n\n\n\u305d\u306e\u4ed6\n\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u3068\u5b9f\u88c5\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u3046\u3061\u5168\u3066\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u516c\u958b\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306fBitVisor Advent Calendar 12\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e(\u9045\u523b\u3059\u307f\u307e\u305b\u3093\n\nBitVisor\u306b\u30d7\u30e9\u30b0\u30a4\u30f3\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3066\u3001\u5404\u30a4\u30d9\u30f3\u30c8\u306b\u5bfe\u5fdc\u3057\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u547c\u3079\u308b\u4ed5\u7d44\u307f\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n#\u30d7\u30e9\u30b0\u30a4\u30f3\u6a5f\u80fd\n\u3053\u3053\u3067\u8a00\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u6a5f\u80fd\u3068\u306f\u3001\u3044\u308f\u3086\u308bdlopen\u3068\u304b\u3067\u52d5\u7684\u306b\u30ed\u30fc\u30c9/\u30a2\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u7269\u3067\u306f\u306a\u304f(type1\u306ebitvisor\u3067\u305d\u308c\u3092\u3084\u308b\u306e\u306f\u5c11\u3057\u9aa8\u304c\u6298\u308c\u305d\u3046\u3067\u3059\u306d...) \u9759\u7684\u306b\u30ea\u30f3\u30af\u3057\u3066\u3057\u307e\u3046\u5f62\u3067\u3059\u3002\n\u30d7\u30e9\u30b0\u30a4\u30f3\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u306fC++\u3067\u66f8\u3051\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u5b9f\u88c5\u624b\u9806\u3068\u3057\u3066\u306f\u3001Plugin\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u81ea\u5206\u306e\u30aa\u30ea\u30b8\u30ca\u30eb\u306a\u30d7\u30e9\u30b0\u30a4\u30f3\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3001\u8af8\u3005\u306e\u30de\u30af\u30ed\u3092\u66f8\u3044\u3066\u3084\u308b\u3060\u3051\u3067\u3059\u3002\u5f8c\u306fSignal/Slots\u30e2\u30c7\u30eb\u98a8\u306b\u3001connect\u3067\u5404\u7a2e\u30a4\u30d9\u30f3\u30c8\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n#\u30d7\u30e9\u30b0\u30a4\u30f3\u5b9f\u88c5\u4f8b(Annotation\u30d7\u30e9\u30b0\u30a4\u30f3)\n\u5b9f\u969b\u306bAnnotation\u3068\u3044\u3046\u540d\u524d\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\n```k2e/Plugins/Annotation.hpp\n#ifndef ANNOTATION_HPP\n#define ANNOTATION_HPP\n\n#include <k2e/Plugin.hpp>\n#include \"CorePlugin.hpp\"\n\nnamespace k2e {\n\nclass Annotation : public Plugin {\n  K2E_PLUGIN\npublic:\n  Annotation(K2E *k2e): Plugin(k2e) {}\n  void initialize();\n  void onModuleLoad(K2ECallbackParams *params);\n};\n\n}\n#endif\n\n```\n\nPlugin\u3092\u7d99\u627f\u3057\u305fAnnotation\u30af\u30e9\u30b9\u3067\u3059\u3002K2E_PLUGIN\u30de\u30af\u30ed\u306b\u3088\u308a\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u5fc5\u8981\u306a\u3082\u308d\u3082\u308d\u306e\u5185\u90e8\u5909\u6570\u304c\u5c55\u958b\u3055\u308c\u307e\u3059\u304c\u3001\u958b\u767a\u8005\u306f\u6c17\u306b\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\n```k2e/Plugins/Annotation.cpp\n#include \"Annotation.hpp\"\nextern \"C\" {\n#include \"core/printf.h\"\n}\n#include <k2e/K2E.hpp>\n#include <k2e/ModuleDescriptor.h>\n\nnamespace k2e {\n\nK2E_DEFINE_PLUGIN(Annotation, \"Plugin for monitoring module and bypasses functions\", \"Annotation\");\n\nvoid Annotation::initialize()\n{\n  k2e()->getCorePlugin()->onModuleLoad.connect(\n                static_cast<Plugin*>(this),\n                static_cast<K2ECallbackFunc_t>(&Annotation::onModuleLoad));\n}\n\nvoid Annotation::onModuleLoad(K2ECallbackParams *params)\n{\n  ModuleDescriptor *md = params->ml.md;\n  printf(\"k2e: driver has loaded at 0x%llx(0x%llx): size=%llu\\n\",\n        md->LoadVBase, md->LoadPBase, md->Size);\n}\n\n}\n```\n\nAnnotation::onModuleLoad\u3068\u3044\u3046\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u30b3\u30a2\u30d7\u30e9\u30b0\u30a4\u30f3\u306eonModuleLoad\u306bconnect\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u30ab\u30fc\u30cd\u30eb\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u30ed\u30fc\u30c9\u3055\u308c\u305f\u6642\u306bAnnotation::onModuleLoad\u304c\u547c\u3070\u308c\u3001\u60c5\u5831\u304cprintf\u3067\u8868\u793a\u3055\u308c\u308b\u4e8b\u306b\u306a\u308a\u307e\u3059\u3002\n\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30ed\u30fc\u30c9\u691c\u77e5\u81ea\u4f53\u306f\u72ec\u81ea\u306eVMCALL\u3068\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\n[\u53c2\u7167]\n- BitVisor\u306bVMCALL\u3092\u8ffd\u52a0\u3057\u3066\u30c9\u30e9\u30a4\u30d0\u3092\u691c\u77e5\u3057\u3066\u307f\u308b \nhttp://qiita.com/RKX1209/items/91e45c5f1b9b9c7211f8 \n\n#\u5b9f\u884c\n\u5b9f\u969b\u306b\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\u30c9\u30e9\u30a4\u30d0\u306e\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9,\u7269\u7406\u30a2\u30c9\u30ec\u30b9,\u30b5\u30a4\u30ba\u304c\u8868\u793a\u3067\u304d\u3066\u3044\u308b\u4e8b\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n`k2e: driver has loaded at 0xffffffffc092b000(0x4192b000) size=16384`\n\n#C++\u3068\u306e\u9023\u643a\n\u3068\u3053\u308d\u3067\u3053\u306e\u30d7\u30e9\u30b0\u30a4\u30f3C++\u3067\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u304c\u3001BitVisor\u306e\u3088\u3046\u306a\u30ab\u30fc\u30cd\u30eb\u7a7a\u9593\u3067\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092C++\u3067\u8a18\u8ff0\u3059\u308b\u306b\u306f\u5c11\u3057\u5de5\u592b(\u3068\u5236\u7d04)\u304c\u51fa\u3066\u304d\u307e\u3059\u3002\u5f53\u7136\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3088\u3046\u306b\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\u4f7f\u3048\u306a\u3044\u306e\u3067\u3001\u6700\u4f4e\u9650\u306e\u6a5f\u80fd\u304c\u4f7f\u3048\u308b\u3088\u3046ABI\u3092\u5b9f\u88c5\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b\u308f\u3051\u3067\u3059\u3002\n[\u53c2\u8003]\nOSDev\\.org C++\nhttp://wiki.osdev.org/C%2B%2B\n\n\u7279\u306boperator new/delete\u306f\u5fc5\u9808\u3067\u3059\u304c\u3001\u3053\u308c\u3089\u306fBitVisor\u306emm.c\u306b\u3042\u308balloc/free\u306e\u30e9\u30c3\u30d1\u3068\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\u305d\u308c\u304b\u3089Makefile\u3082C++\u30b3\u30fc\u30c9\u3092\u30d3\u30eb\u30c9\u3067\u304d\u308b\u3088\u3046\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\n\n```diff\ndiff --git a/Makefile.build b/../k2e/bitvisor/Makefile.build\nindex 5c9e4e2..c61d65c 100644\n--- a/Makefile.build\n+++ b/../k2e/bitvisor/Makefile.build\n@@ -12,6 +12,9 @@ bits-1 = 64\n CFLAGS = -m$(bits-$(CONFIG_64)) -mno-red-zone -mno-sse -nostdinc -g -O \\\n -ffreestanding -fno-builtin -fno-stack-protector $(backtrace) \\\n -fno-strict-aliasing -Wall $(CONSTANTS-1) -I$(DIR) -Iinclude\n+CXXFLAGS = -m$(bits-$(CONFIG_64)) -mno-red-zone -mno-sse -nostdinc -g -O \\\n+-ffreestanding -fno-builtin -fno-rtti -fno-exceptions -fno-stack-protector $(backtrace) \\\n+-fno-strict-aliasing -Wall $(CONSTANTS-1) -I$(DIR) -Iinclude\n ASFLAGS = -m$(bits-$(CONFIG_64)) -g -Wa,-I,$(DIR) -Wa,--divide\n LDFLAGS = -m$(bits-$(CONFIG_64)) -g -nostdlib -Wl,--build-id=none\n outo_p = $(outo)_p\n@@ -47,7 +50,8 @@ bstacksize-1-b := $(bstacksize-1-name:%=$(%).)\n bstacksize-1-g := $(foreach i,$(bstacksize-1-name),$($(i)).)\n bstacksize-1 := $(bstacksize-1-$(m))\n bobjs = $(bobjs-1:%=$(dir)%)\n-objs = $(objs-1:%=$(dir)%) $(subouto) $(subouta) $(suboutp)\n+k2e-objs = $(k2eobjs-1:%=$(dir)%)\n+objs = $(objs-1:%=$(dir)%) $(k2e-objs) $(subouto) $(subouta) $(suboutp)\n deps = $(objs-1:%.o=$(dir)%.d) $(bobjs-1:%.o=$(dir)%.d)\n bins = $(bins-1:%=$(dir)%.bin)\n flags-data := CFLAGS=$(CFLAGS) ASFLAGS=$(ASFLAGS) LDFLAGS=$(LDFLAGS)\n@@ -135,7 +139,7 @@ $(subouto_p) $(subouta_p) $(suboutp_p) :\n \n # Suffix rules\n .SUFFIXES :\n-.SUFFIXES : .c .s .o .bin\n+.SUFFIXES : .c .cpp .s .o .bin\n \n .c.o :\n \t$(V-info) CC $@\n@@ -152,5 +156,9 @@ $(SED) -n -e '1{x' -e 's=^=$@ :>=' -e x -e '}' -e 's/#.*//' \\\n -e '$${x' -e 's/>.</ /g' -e 's/>$$//p' -e 's/.*: *//' \\\n -e 's/$$/ :/p' -e '}' $< > $(@:.o=).d || { $(RM) $@; false; }\n \n+.cpp.o :\n+\t$(V-info) CXX $@\n+\t$(CXX) $(CXXFLAGS) -c -o $@ $<\n+\n # include\n include $(dir)$(depends)\n```\n\n#\u305d\u306e\u4ed6\n\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u3068\u5b9f\u88c5\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u3046\u3061\u5168\u3066\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u516c\u958b\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n", "tags": ["BitVisor"]}