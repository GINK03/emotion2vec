{"context": "\n\n\u70ba\u66ffAPI\u3092\u4f7f\u3063\u3066Retrofit2+RxAndroid\u3067\u901a\u4fe1\u3092\u8a66\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u5185\u5bb9\u3068\u3057\u3066\u306fUSD\u304b\u3089JPY\u306b\u5909\u63db\u3057\u305f\u30ec\u30fc\u30c8\u3092\u53d7\u3051\u53d6\u308aTextView\u306b\u8868\u793a\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u4f7f\u3046API: http://fixer.io/ \u306a\u304b\u306a\u304b\u4fbf\u5229\u305d\u3046\u3067\u3059\u306d\u3002\n\u4eca\u56de\u306e\u5b9f\u969b\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3059\u3002http://api.fixer.io/latest?base=USD&symbols=JPY\n\u4e0b\u8a18\u306e\u3088\u3046\u306b1\u4ef6JPY\u306e\u30ec\u30fc\u30c8\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u4f8b\n{\n    base: \"USD\",\n    date: \"2016-11-01\",\n    rates: {\n    JPY: 104.83\n    }\n}\n\n\n\u307e\u305a\u306fapp\u306ebuild.gradle\u306e\u8a2d\u5b9a\u304b\u3089\n\nbuild.gradle\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {\n        exclude group: 'com.android.support', module: 'support-annotations'\n    })\n    compile 'com.android.support:appcompat-v7:24.2.1'\n    testCompile 'junit:junit:4.12'\n\n    // \u8ffd\u52a0\n    compile 'io.reactivex:rxjava:1.1.0'\n    compile 'io.reactivex:rxandroid:1.1.0'\n    compile 'com.google.code.gson:gson:2.6.2'\n    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'\n    compile 'com.squareup.retrofit2:converter-gson:2.0.2'\n    compile 'com.squareup.retrofit2:retrofit:2.0.2'\n}\n\n\n\nAndroidManifest.xml\u306b\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30921\u884c\u8ffd\u52a0\n\nAndroidManifest.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"kojimation.com.retrofitsample\">\n\n    <!-- \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u8ffd\u52a0 -->\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\">\n        <activity android:name=\".MainActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n    </application>\n\n</manifest>\n\n\n\u70ba\u66ff\u30ec\u30fc\u30c8\u3092\u53d6\u5f97\u3059\u308bAPI\u306e\u4f5c\u6210\nrx\u3058\u3083\u306a\u3044Observable\u3092import\u3057\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f\n\nExchangeRateApi.java\n\npublic interface ExchangeRateApi {\n    String URL = \"/latest\";\n\n    @GET(URL)\n    Observable<ExchangeRateResponse> getExchangeRate(@Query(\"base\") String base,\n                                                     @Query(\"symbols\") String symbols);\n}\n\n\nAPI\u304b\u3089\u8fd4\u3063\u3066\u6765\u308b\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n\nExchangeRateResponse.java\n\npublic class ExchangeRateResponse {\n    private String base;\n    private String date;\n    private CountryCode rates;\n\n    public String getBase() {\n        return base;\n    }\n\n    public String getDate() {\n        return date;\n    }\n\n    public CountryCode getRates() {\n        return rates;\n    }\n}\n\n\n\nCountryCode.java\n\npublic class CountryCode {\n    private float JPY;\n\n    public float getJPY() {\n        return JPY;\n    }\n}\n\n\nMainActivity\u306exml\u306bTextView\u30921\u3064\u8ffd\u52a0\n\nactivity_main.xml\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/activity_main\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:paddingBottom=\"@dimen/activity_vertical_margin\"\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n    android:paddingTop=\"@dimen/activity_vertical_margin\"\n    tools:context=\"kojimation.com.retrofitsample.MainActivity\">\n\n    <TextView\n        android:id=\"@+id/txt_jpy\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\" />\n</RelativeLayout>\n\n\n\nMainActivity\u304b\u3089\u4f7f\u3063\u3066\u307f\u308b\n\nMainActivity.java\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        Retrofit retrofit = new Retrofit.Builder()\n                // \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u8a2d\u5b9a\n                .baseUrl(\"http://api.fixer.io\")\n                .addConverterFactory(GsonConverterFactory.create())\n                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n                .build();\n\n        retrofit.create(ExchangeRateApi.class)\n                // US\u30c9\u30eb\u304b\u3089JPY\u306b\u7d5e\u308a\u8fbc\u3080\u30af\u30a8\u30ea\n                .getExchangeRate(\"USD\", \"JPY\")\n                .subscribeOn(Schedulers.newThread())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Observer<ExchangeRateResponse>() {\n                    @Override\n                    public void onCompleted() {\n\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        Log.d(\"\u901a\u4fe1 -> \", \"\u5931\u6557\" + e.toString());\n                    }\n\n                    @Override\n                    public void onNext(ExchangeRateResponse exchangeRateResponse) {\n                        Log.d(\"\u901a\u4fe1 -> \", \"\u6210\u529f\");\n                        TextView textView = (TextView) findViewById(R.id.txt_jpy);\n                        textView.setText(\"JPY: \" + String.valueOf(exchangeRateResponse.getRates().getJPY()));\n                    }\n                });\n    }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\n\n\u3082\u3046\u5c11\u3057\u4fbf\u5229\u306b\u3057\u3066\u307f\u308b\n\u5148\u307b\u3069\u306ebuild.gradle\u306b2\u884c\u8ffd\u52a0\n\nbuild.gradle\n\ndependencies {\n\n    // \u8ffd\u52a0\n    compile 'io.reactivex:rxjava:1.1.0'\n    compile 'io.reactivex:rxandroid:1.1.0'\n    compile 'com.google.code.gson:gson:2.6.2'\n    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'\n    compile 'com.squareup.retrofit2:converter-gson:2.0.2'\n    compile 'com.squareup.retrofit2:retrofit:2.0.2'\n\n    // \u3055\u3089\u306b\u8ffd\u52a0\n    compile 'com.squareup.okhttp3:okhttp:3.2.0'\n    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'\n}\n\n\n\nOkhttp\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u3001\u8ffd\u52a0\u3002\n\u4eca\u56de\u306f\u30ed\u30b0\u3092\u8ffd\u52a0\u3057\u3066\u307f\u308b\u3002\n\u4ed6\u306b\u3082\u30d8\u30c3\u30c0\u30fc\u306e\u8a2d\u5b9a\u7b49\u3001\u8272\u3005\u8ffd\u52a0\u3067\u304d\u308b\u3002\n\nMainActivity.java\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();\n        loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\n\n         // okhttp\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u6210\n        OkHttpClient okHttpclient = new OkHttpClient.Builder()\n                  // \u30d8\u30c3\u30c0\u30fc\u3092\u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n                .addInterceptor(new RequestHeaderInterceptor())\n                // \u30ed\u30b0\u3092\u51fa\u3059\n                .addInterceptor(loggingInterceptor)\n                .build();\n\n        Retrofit retrofit = new Retrofit.Builder()\n                // \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u8a2d\u5b9a\n                .baseUrl(\"http://api.fixer.io\")\n                // okhttp\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u8ffd\u52a0\n                .client(okHttpclient)\n                .addConverterFactory(GsonConverterFactory.create())\n                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n                .build();\n\n        retrofit.create(ExchangeRateApi.class)\n                // US\u30c9\u30eb\u304b\u3089JPY\u306b\u7d5e\u308a\u8fbc\u3080\u30af\u30a8\u30ea\n                .getExchangeRate(\"USD\", \"JPY\")\n                .subscribeOn(Schedulers.newThread())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Observer<ExchangeRateResponse>() {\n                    @Override\n                    public void onCompleted() {\n\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        Log.d(\"\u901a\u4fe1 -> \", \"\u5931\u6557\" + e.toString());\n                    }\n\n                    @Override\n                    public void onNext(ExchangeRateResponse exchangeRateResponse) {\n                        Log.d(\"\u901a\u4fe1 -> \", \"\u6210\u529f\");\n                        TextView textView = (TextView) findViewById(R.id.txt_jpy);\n                        textView.setText(\"JPY: \" + String.valueOf(exchangeRateResponse.getRates().getJPY()));\n                    }\n                });\n    }\n\n    // \u30d8\u30c3\u30c0\u30fc\u306e\u30af\u30e9\u30b9\n    public class RequestHeaderInterceptor implements Interceptor {\n\n        @Override\n        public okhttp3.Response intercept(Chain chain) throws IOException {\n            final Request.Builder builder = chain.request().newBuilder();\n            builder.addHeader(\"HEADER\", \"VALUE\");\n            return chain.proceed(builder.build());\n        }\n    }\n}\n\n\n\u4ee5\u4e0a\u3067\u7d42\u308f\u308a\u3067\u3059\u304c\u3001\u3055\u3089\u306b\u306bDagger2\u3092\u52a0\u3048\u305f\u306e\u3082\u8ffd\u8a18\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nDagger2 + Retrofit2 + RxAndroid\u3067\u901a\u4fe1\u3057\u3066\u307f\u308b\nhttp://qiita.com/MuuKojima/items/8088b43876dc8d3d1745\nDagger2\u5c0e\u5165\nhttp://qiita.com/MuuKojima/items/51cd6c1e59479cdcc2f4\n\n### \u70ba\u66ffAPI\u3092\u4f7f\u3063\u3066Retrofit2+RxAndroid\u3067\u901a\u4fe1\u3092\u8a66\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u5185\u5bb9\u3068\u3057\u3066\u306fUSD\u304b\u3089JPY\u306b\u5909\u63db\u3057\u305f\u30ec\u30fc\u30c8\u3092\u53d7\u3051\u53d6\u308aTextView\u306b\u8868\u793a\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u4f7f\u3046API: http://fixer.io/ \u306a\u304b\u306a\u304b\u4fbf\u5229\u305d\u3046\u3067\u3059\u306d\u3002\n\n\u4eca\u56de\u306e\u5b9f\u969b\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u3059\u3002http://api.fixer.io/latest?base=USD&symbols=JPY\n\u4e0b\u8a18\u306e\u3088\u3046\u306b1\u4ef6JPY\u306e\u30ec\u30fc\u30c8\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n```Json:\u4eca\u56de\u306e\u4f8b\n{\n\tbase: \"USD\",\n\tdate: \"2016-11-01\",\n\trates: {\n\tJPY: 104.83\n\t}\n}\n```\n\n\u307e\u305a\u306fapp\u306ebuild.gradle\u306e\u8a2d\u5b9a\u304b\u3089\n\n```gradle:build.gradle\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {\n        exclude group: 'com.android.support', module: 'support-annotations'\n    })\n    compile 'com.android.support:appcompat-v7:24.2.1'\n    testCompile 'junit:junit:4.12'\n\n    // \u8ffd\u52a0\n    compile 'io.reactivex:rxjava:1.1.0'\n    compile 'io.reactivex:rxandroid:1.1.0'\n    compile 'com.google.code.gson:gson:2.6.2'\n    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'\n    compile 'com.squareup.retrofit2:converter-gson:2.0.2'\n    compile 'com.squareup.retrofit2:retrofit:2.0.2'\n}\n\n```\n\nAndroidManifest.xml\u306b\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u30921\u884c\u8ffd\u52a0\n\n```xml:AndroidManifest.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"kojimation.com.retrofitsample\">\n    \n    <!-- \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u8ffd\u52a0 -->\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n    \n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme\">\n        <activity android:name=\".MainActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n    </application>\n\n</manifest>\n```\n\n\u70ba\u66ff\u30ec\u30fc\u30c8\u3092\u53d6\u5f97\u3059\u308bAPI\u306e\u4f5c\u6210\nrx\u3058\u3083\u306a\u3044Observable\u3092import\u3057\u306a\u3044\u3088\u3046\u306b\u6ce8\u610f\n\n```java:ExchangeRateApi.java\n\npublic interface ExchangeRateApi {\n    String URL = \"/latest\";\n\n    @GET(URL)\n    Observable<ExchangeRateResponse> getExchangeRate(@Query(\"base\") String base,\n                                                     @Query(\"symbols\") String symbols);\n}\n```\n\nAPI\u304b\u3089\u8fd4\u3063\u3066\u6765\u308b\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n\n```java:ExchangeRateResponse.java\n\npublic class ExchangeRateResponse {\n    private String base;\n    private String date;\n    private CountryCode rates;\n\n    public String getBase() {\n        return base;\n    }\n\n    public String getDate() {\n        return date;\n    }\n\n    public CountryCode getRates() {\n        return rates;\n    }\n}\n```\n\n```java:CountryCode.java\n\npublic class CountryCode {\n    private float JPY;\n\n    public float getJPY() {\n        return JPY;\n    }\n}\n```\n\nMainActivity\u306exml\u306bTextView\u30921\u3064\u8ffd\u52a0\n\n```xml:activity_main.xml\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:id=\"@+id/activity_main\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:paddingBottom=\"@dimen/activity_vertical_margin\"\n    android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n    android:paddingRight=\"@dimen/activity_horizontal_margin\"\n    android:paddingTop=\"@dimen/activity_vertical_margin\"\n    tools:context=\"kojimation.com.retrofitsample.MainActivity\">\n\n    <TextView\n        android:id=\"@+id/txt_jpy\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\" />\n</RelativeLayout>\n\n```\n\nMainActivity\u304b\u3089\u4f7f\u3063\u3066\u307f\u308b\n\n```java:MainActivity.java\n\t\t\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        Retrofit retrofit = new Retrofit.Builder()\n                // \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u8a2d\u5b9a\n                .baseUrl(\"http://api.fixer.io\")\n                .addConverterFactory(GsonConverterFactory.create())\n                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n                .build();\n\n        retrofit.create(ExchangeRateApi.class)\n                // US\u30c9\u30eb\u304b\u3089JPY\u306b\u7d5e\u308a\u8fbc\u3080\u30af\u30a8\u30ea\n                .getExchangeRate(\"USD\", \"JPY\")\n                .subscribeOn(Schedulers.newThread())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Observer<ExchangeRateResponse>() {\n                    @Override\n                    public void onCompleted() {\n\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        Log.d(\"\u901a\u4fe1 -> \", \"\u5931\u6557\" + e.toString());\n                    }\n\n                    @Override\n                    public void onNext(ExchangeRateResponse exchangeRateResponse) {\n                        Log.d(\"\u901a\u4fe1 -> \", \"\u6210\u529f\");\n                        TextView textView = (TextView) findViewById(R.id.txt_jpy);\n                        textView.setText(\"JPY: \" + String.valueOf(exchangeRateResponse.getRates().getJPY()));\n                    }\n                });\n    }\n}\n\n```\n\n\u5b9f\u884c\u7d50\u679c\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-14 \u5348\u5f8c5.10.02.png](https://qiita-image-store.s3.amazonaws.com/0/33553/608a79e7-b9c5-94d0-4fd9-3c62f693b137.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-14 \u5348\u5f8c5.10.02.png\")\n\n### \u3082\u3046\u5c11\u3057\u4fbf\u5229\u306b\u3057\u3066\u307f\u308b\n\u5148\u307b\u3069\u306ebuild.gradle\u306b2\u884c\u8ffd\u52a0\n\n```gradle:build.gradle\n\ndependencies {\n\n    // \u8ffd\u52a0\n    compile 'io.reactivex:rxjava:1.1.0'\n    compile 'io.reactivex:rxandroid:1.1.0'\n    compile 'com.google.code.gson:gson:2.6.2'\n    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'\n    compile 'com.squareup.retrofit2:converter-gson:2.0.2'\n    compile 'com.squareup.retrofit2:retrofit:2.0.2'\n    \n    // \u3055\u3089\u306b\u8ffd\u52a0\n    compile 'com.squareup.okhttp3:okhttp:3.2.0'\n    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'\n}\n\n```\nOkhttp\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u3001\u8ffd\u52a0\u3002\n\u4eca\u56de\u306f\u30ed\u30b0\u3092\u8ffd\u52a0\u3057\u3066\u307f\u308b\u3002\n\u4ed6\u306b\u3082\u30d8\u30c3\u30c0\u30fc\u306e\u8a2d\u5b9a\u7b49\u3001\u8272\u3005\u8ffd\u52a0\u3067\u304d\u308b\u3002\n\n```java:MainActivity.java\n\npublic class MainActivity extends AppCompatActivity {\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();\n        loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);\n\t\t\n\t\t // okhttp\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u6210\n        OkHttpClient okHttpclient = new OkHttpClient.Builder()\n        \t\t  // \u30d8\u30c3\u30c0\u30fc\u3092\u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n                .addInterceptor(new RequestHeaderInterceptor())\n                // \u30ed\u30b0\u3092\u51fa\u3059\n                .addInterceptor(loggingInterceptor)\n                .build();\n\n        Retrofit retrofit = new Retrofit.Builder()\n                // \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u8a2d\u5b9a\n                .baseUrl(\"http://api.fixer.io\")\n                // okhttp\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u8ffd\u52a0\n                .client(okHttpclient)\n                .addConverterFactory(GsonConverterFactory.create())\n                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())\n                .build();\n\n        retrofit.create(ExchangeRateApi.class)\n                // US\u30c9\u30eb\u304b\u3089JPY\u306b\u7d5e\u308a\u8fbc\u3080\u30af\u30a8\u30ea\n                .getExchangeRate(\"USD\", \"JPY\")\n                .subscribeOn(Schedulers.newThread())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(new Observer<ExchangeRateResponse>() {\n                    @Override\n                    public void onCompleted() {\n\n                    }\n\n                    @Override\n                    public void onError(Throwable e) {\n                        Log.d(\"\u901a\u4fe1 -> \", \"\u5931\u6557\" + e.toString());\n                    }\n\n                    @Override\n                    public void onNext(ExchangeRateResponse exchangeRateResponse) {\n                        Log.d(\"\u901a\u4fe1 -> \", \"\u6210\u529f\");\n                        TextView textView = (TextView) findViewById(R.id.txt_jpy);\n                        textView.setText(\"JPY: \" + String.valueOf(exchangeRateResponse.getRates().getJPY()));\n                    }\n                });\n    }\n\t\n\t// \u30d8\u30c3\u30c0\u30fc\u306e\u30af\u30e9\u30b9\n    public class RequestHeaderInterceptor implements Interceptor {\n\n        @Override\n        public okhttp3.Response intercept(Chain chain) throws IOException {\n            final Request.Builder builder = chain.request().newBuilder();\n            builder.addHeader(\"HEADER\", \"VALUE\");\n            return chain.proceed(builder.build());\n        }\n    }\n}\n```\n\n\n\n\n\u4ee5\u4e0a\u3067\u7d42\u308f\u308a\u3067\u3059\u304c\u3001\u3055\u3089\u306b\u306bDagger2\u3092\u52a0\u3048\u305f\u306e\u3082\u8ffd\u8a18\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nDagger2 + Retrofit2 + RxAndroid\u3067\u901a\u4fe1\u3057\u3066\u307f\u308b\nhttp://qiita.com/MuuKojima/items/8088b43876dc8d3d1745\nDagger2\u5c0e\u5165\nhttp://qiita.com/MuuKojima/items/51cd6c1e59479cdcc2f4\n\n\n\n\n\n\n\n", "tags": ["RxAndroid", "Retrofit2", "Java", "Android"]}