{"context": " More than 1 year has passed since last update.markdown\u8a18\u6cd5\u306b\u5bfe\u3059\u308b\u69cb\u6587\u89e3\u6790\u5468\u308a\u3092\u89e6\u308b\u5fc5\u8981\u304c\u751f\u3058\u305f\u306e\u3067\u3001\u69cb\u6587\u89e3\u6790\u5468\u308a\u306e\u5fa9\u7fd2\u3092\u304b\u306d\u3066\u7c21\u6613\u306a\u30d1\u30fc\u30b5\u3092\u4f5c\u3063\u3066\u307f\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n\u76ee\u6a19\n\u753b\u50cf\u30ea\u30f3\u30af\u3092\u5b9f\u73fe\u3055\u305b\u3066\u307f\u308b. \u3064\u307e\u308a\u3001\n#input.md\n[![AltTitle](http://example.com/example.jpg)](http://example.com)\n\n\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\n# output.html\n<a href=\"http://example.com\" > \n    <img src=\"http://example.com/example.jpg\" alt=\"AltTitle\"></img> \n</a>\n\n\u307f\u305f\u3044\u306aHTML\u30b3\u30fc\u30c9\u3092\u51fa\u529b\u3055\u305b\u3089\u308c\u308c\u3070O.K.\n\u30b5\u30dd\u30fc\u30c8\u3059\u3079\u304d\u30de\u30fc\u30af\u30c0\u30a6\u30f3\u8a18\u6cd5\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u306f2\u7a2e\u985e\u3002\n# \u753b\u50cf\u57cb\u3081\u8fbc\u307f\n![\u4ee3\u66ff\u30c6\u30ad\u30b9\u30c8](http://img.example.com/100)\n\n# \u30ea\u30f3\u30af(\u30bf\u30a4\u30c8\u30eb\u306a\u3057).\n[\u30ea\u30f3\u30af\u30c6\u30ad\u30b9\u30c8](http://example.com)\n\n\n\u3053\u306e\u7a0b\u5ea6\u306a\u3089\u6b63\u898f\u8868\u73fe\u3067\u3067\u304d\u308b\u306e\u3060\u304c\u3001\u3053\u306e\u5f8c\u3044\u308d\u3044\u308d\u3068\u6a5f\u80fd\u8ffd\u52a0\u3059\u308b\u3001\u3068\u3044\u3046\u60f3\u5b9a\u3067\u3061\u3083\u3093\u3068\u69cb\u6587\u89e3\u6790\u3057\u3066\u51fa\u529b\u3092\u751f\u6210\u3059\u308b\u3002\n\nBNF\u8868\u73fe\n\u30d0\u30c3\u30ab\u30b9\u30fb\u30ca\u30a6\u30a2\u8a18\u6cd5\u3092\u7528\u3044\u3066\u3001\u307e\u305a\u306f\u5c0e\u51fa\u5247\u3092\u8a18\u8ff0\u3059\u308b\u3002\n\n<Line>    ::= <Blocks> <CR> \n<Blocks>  ::= <Block>   | <Block> <Blocks>\n<Block>   ::= <Element> | <Video> | <Link>\n<Link>    ::= \"[\" <Element> \"]\" \"(\" <url> \")\"\n<Element> ::= <Image>     | <literal> \n<Image>   ::= \"![\" <literal>  \"]\" \"(\" <url> \")\"\n\n\n\u3053\u3053\u3067\u3001\n<Line>, <Blocks>, <Block>, <Link>, <Element>, <Image>\n\n\u306e\uff17\u500b\u304c\u3044\u308f\u3086\u308b\u975e\u7d42\u7aef\u8a18\u53f7\u3067\u3001\n\"[\", \"]\", \"![\", \"(\", \")\",  <literal>, <url>, <CR>\n\n\u306e7\u500b\u304c\u3044\u308f\u3086\u308b\u7d42\u7aef\u8a18\u53f7(token)\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\nyacc, lex \u3067\u306e\u5b9f\u88c5\n\u3053\u3053\u307e\u3067\u3067\u304d\u308c\u3070\u3042\u3068\u306f\u4e0a\u8a18\u306eBNF\u8868\u8a18\u3092\u3001yacc\u3001lex\u306e\u304a\u4f5c\u6cd5\u306b\u5f93\u3063\u3066\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u3066\u884c\u3051\u3070\u826f\u3044\u3002\nmy_markdown_parser\nToken\u5b9a\u7fa9\n%{\n#include <stdio.h>\n#include \"string.h\"\n#include \"y.tab.h\"\n\nint\nyywrap(void)\n{\n    return 1;\n}\n%}\n%%\n\"[\"      return LINK_OPEN;\n\"![\"     return IMAGE_OPEN;\n\"]\"      return CLOSE;\n\"(\"      return LEFT_PAR;\n\")\"      return RIGHT_PAR;\n\"\\n\"     return CR;\n[0-9A-Za-z_,\\-\\.:/]+ {\n    char* temp;\n    int len = strlen(yytext);\n    temp = calloc(sizeof(char), len + 1);\n    sscanf(yytext, \"%s\", temp);\n    yylval.literal_value = temp;\n    return LITERAL;\n}\n%%\n\n\n\u6587\u6cd5\u3068\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u5b9a\u7fa9\n%{\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define YYDEBUG 1\n%}\n%union {\nchar*        literal_value;\nchar*        string_value;\n}\n%token <literal_value>  LITERAL\n%token LINK_OPEN IMAGE_OPEN CLOSE LEFT_PAR RIGHT_PAR CR\n%type <string_value> blocks block link element image\n%%\nline_list\n    : line\n    | line_list line\n    ;\nline\n    : blocks CR\n    {\n        printf(\"%s\\n\", $1);\n        free($1);\n    }\nblocks\n    : block\n    | block blocks\n    {\n        char* buf;\n        int lengths[2];\n        lengths[0] = strlen($1);\n        lengths[1] = strlen($2);\n        int len = 0;\n        for (int i=0; i < 2; i++) {\n            len += lengths[i];\n        }\n        buf = calloc(sizeof(char), len + 2);\n        sprintf(buf, \"%s %s\", $1, $2);\n        free($1);\n        free($2);\n        $$ = buf;\n    }\n    ;\nblock\n    : element\n    | link \n    ;\nlink \n    : LINK_OPEN element CLOSE LEFT_PAR LITERAL RIGHT_PAR\n    {\n        char* buf;\n        int lengths[2];\n        lengths[0] = strlen($2);\n        lengths[1] = strlen($5);\n        int len = 0;\n        for (int i=0; i < 2; i++) {\n            len += lengths[i];\n        }\n        buf = calloc(len + 19, sizeof(char));\n        sprintf(buf, \"<a href=\\\"%s\\\" > %s </a>\", $5, $2);\n        free($2);\n        free($5);\n        $$ = buf;\n    }\n    ;\nelement \n    : image\n    | LITERAL\n    ;\nimage\n    : IMAGE_OPEN LITERAL CLOSE LEFT_PAR LITERAL RIGHT_PAR\n    {\n        char* buf;\n        int lengths[2];\n        lengths[0] = strlen($2);\n        lengths[1] = strlen($5);\n\n        int len = 0;\n        for (int i = 0; i < 2; i++) {\n            len += lengths[i];\n        }\n        buf = calloc(len + 38, sizeof(char));\n        sprintf(buf, \"<img src=\\\"%s\\\" alt=\\\"%s\\\" width=\\\"320\\\" ></img>\", $5, $2);\n        free($2);\n        free($5);\n        $$ = buf;\n    }\n    ;\n%%\nint\nyyerror(char const *str)\n{\n    extern char *yytext;\n    fprintf(stderr, \"parser error near %s\\n\", yytext);\n    return 0;\n}\n\nint main(void)\n{\n    extern int yyparse(void);\n    extern FILE *yyin;\n\n    //yydebug = 1;\n    yyin = stdin;\n    if (yyparse()) {\n        fprintf(stderr, \"Error ! Error ! Error !\\n\");\n        exit(1);\n    }\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nOSX Marverics \u3067\u52d5\u4f5c\u78ba\u8a8d\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\nyacc -dv my_markdown.y \nlex token.l\nclang -o my_markdown_parser y.tab.c lex.yy.c\n# or \n# gcc -o my_markdown_parser y.tab.c lex.yy.c\n\n\u5b9f\u884c\u7d50\u679c\n# input.md \n# [![DragonBook](http://upload.wikimedia.org/wikipedia/en/a/a3/Purple_dragon_book_b.jpg)](http://www.amazon.com/Compilers-Principles-Techniques-Tools-Edition/dp/0321486811)\n\ncat input.md | ./my_markdown_parser\n\n\n\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u50cf\u30ea\u30f3\u30af\u304c\u751f\u6210\u3055\u308c\u308b\u3002(\u4ee5\u4e0b\u306f\u751f\u6210\u3057\u305fHTML\u3092inline\u3067\u8868\u793a.)\n<a href=\"http://www.amazon.com/Compilers-Principles-Techniques-Tools-Edition/dp/0321486811\" > \n    <img src=\"http://upload.wikimedia.org/wikipedia/en/a/a3/Purple_dragon_book_b.jpg\" alt=\"DragonBook\" width=\"320\" ></img> \n</a>\n\n \n \n\n\n\u53c2\u8003\u8cc7\u6599\nMakrdown\u8a18\u6cd5 \u30c1\u30fc\u30c8\u30b7\u30fc\u30c8\n\u30c6\u30fc\u30d6\u30eb\u8868\u8a18\u3084\u7a7a\u884c\u306e\u53d6\u308a\u6271\u3044\u304c\u5fc5\u8981\u306b\u306a\u308b\u8a18\u6cd5\u3092\u5b9f\u73fe\u3055\u305b\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u3082\u3046\u3061\u3087\u3063\u3068\u8907\u96d1\u306b\u306a\u308a\u305d\u3046\u3060\u304c\u3001\u30c6\u30ad\u30b9\u30c8\u306e\u4fee\u98fe\u3001\u6c34\u5e73\u7dda\u3001\u5f15\u7528\u306a\u3069\u306f\u753b\u50cf\u3084\u30ea\u30f3\u30af\u3068\u540c\u69d8\u306e\u5b9f\u88c5\u3067\u5b9f\u73fe\u3067\u304d\u305d\u3046\u3002\nyacc\u3068lex\n\u5927\u5b66\u306e\u8b1b\u7fa9\u30da\u30fc\u30b8\u3060\u3068\u601d\u3046\u3002\u53e4\u3044\u8a18\u4e8b\u3060\u304c\u3068\u3066\u3082\u5206\u304b\u308a\u3084\u3059\u3044\u3002yacc\u306e\u52d5\u4f5c\u306f\u3001\u30c6\u30c8\u30ea\u30b9\u3060\u3068\u601d\u3048\u3070\u826f\u3044\u3001\u3068\u3044\u3046\u8aac\u660e\u304c\u81ea\u5206\u7684\u306b\u306f\u3059\u3054\u304f\u3057\u3063\u304f\u308a\u6765\u305f\u3002\n\nmarkdown\u8a18\u6cd5\u306b\u5bfe\u3059\u308b\u69cb\u6587\u89e3\u6790\u5468\u308a\u3092\u89e6\u308b\u5fc5\u8981\u304c\u751f\u3058\u305f\u306e\u3067\u3001\u69cb\u6587\u89e3\u6790\u5468\u308a\u306e\u5fa9\u7fd2\u3092\u304b\u306d\u3066\u7c21\u6613\u306a\u30d1\u30fc\u30b5\u3092\u4f5c\u3063\u3066\u307f\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n## \u76ee\u6a19\n\n\u753b\u50cf\u30ea\u30f3\u30af\u3092\u5b9f\u73fe\u3055\u305b\u3066\u307f\u308b. \u3064\u307e\u308a\u3001\n\n```\n#input.md\n[![AltTitle](http://example.com/example.jpg)](http://example.com)\n```\n\n\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\n\n```\n# output.html\n<a href=\"http://example.com\" > \n\t<img src=\"http://example.com/example.jpg\" alt=\"AltTitle\"></img> \n</a>\n```\n\n\u307f\u305f\u3044\u306aHTML\u30b3\u30fc\u30c9\u3092\u51fa\u529b\u3055\u305b\u3089\u308c\u308c\u3070O.K.\n\n\n\u30b5\u30dd\u30fc\u30c8\u3059\u3079\u304d\u30de\u30fc\u30af\u30c0\u30a6\u30f3\u8a18\u6cd5\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u306f2\u7a2e\u985e\u3002\n \n```\n# \u753b\u50cf\u57cb\u3081\u8fbc\u307f\n![\u4ee3\u66ff\u30c6\u30ad\u30b9\u30c8](http://img.example.com/100)\n\n# \u30ea\u30f3\u30af(\u30bf\u30a4\u30c8\u30eb\u306a\u3057).\n[\u30ea\u30f3\u30af\u30c6\u30ad\u30b9\u30c8](http://example.com)\n\n```\n\n\n\u3053\u306e\u7a0b\u5ea6\u306a\u3089\u6b63\u898f\u8868\u73fe\u3067\u3067\u304d\u308b\u306e\u3060\u304c\u3001\u3053\u306e\u5f8c\u3044\u308d\u3044\u308d\u3068\u6a5f\u80fd\u8ffd\u52a0\u3059\u308b\u3001\u3068\u3044\u3046\u60f3\u5b9a\u3067\u3061\u3083\u3093\u3068\u69cb\u6587\u89e3\u6790\u3057\u3066\u51fa\u529b\u3092\u751f\u6210\u3059\u308b\u3002\n\n## BNF\u8868\u73fe\n\n[\u30d0\u30c3\u30ab\u30b9\u30fb\u30ca\u30a6\u30a2\u8a18\u6cd5](http://ja.wikipedia.org/wiki/%E3%83%90%E3%83%83%E3%82%AB%E3%82%B9%E3%83%BB%E3%83%8A%E3%82%A6%E3%82%A2%E8%A8%98%E6%B3%95)\u3092\u7528\u3044\u3066\u3001\u307e\u305a\u306f\u5c0e\u51fa\u5247\u3092\u8a18\u8ff0\u3059\u308b\u3002\n\n```\n\n<Line>    ::= <Blocks> <CR> \n<Blocks>  ::= <Block>   | <Block> <Blocks>\n<Block>   ::= <Element> | <Video> | <Link>\n<Link>    ::= \"[\" <Element> \"]\" \"(\" <url> \")\"\n<Element> ::= <Image>     | <literal> \n<Image>   ::= \"![\" <literal>  \"]\" \"(\" <url> \")\"\n\n```\n\n\n\u3053\u3053\u3067\u3001\n\n```\n<Line>, <Blocks>, <Block>, <Link>, <Element>, <Image>\n```\n\n\u306e\uff17\u500b\u304c\u3044\u308f\u3086\u308b\u975e\u7d42\u7aef\u8a18\u53f7\u3067\u3001\n\n```\n\"[\", \"]\", \"![\", \"(\", \")\",  <literal>, <url>, <CR>\n```\n\n\u306e7\u500b\u304c\u3044\u308f\u3086\u308b\u7d42\u7aef\u8a18\u53f7(token)\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\n\n## yacc, lex \u3067\u306e\u5b9f\u88c5\n\n\u3053\u3053\u307e\u3067\u3067\u304d\u308c\u3070\u3042\u3068\u306f\u4e0a\u8a18\u306eBNF\u8868\u8a18\u3092\u3001yacc\u3001lex\u306e\u304a\u4f5c\u6cd5\u306b\u5f93\u3063\u3066\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u3066\u884c\u3051\u3070\u826f\u3044\u3002\n\n[my_markdown_parser](https://github.com/toshiya/my-markdown-parser)\n\n\nToken\u5b9a\u7fa9\n\n```\n%{\n#include <stdio.h>\n#include \"string.h\"\n#include \"y.tab.h\"\n\nint\nyywrap(void)\n{\n    return 1;\n}\n%}\n%%\n\"[\"      return LINK_OPEN;\n\"![\"     return IMAGE_OPEN;\n\"]\"      return CLOSE;\n\"(\"      return LEFT_PAR;\n\")\"      return RIGHT_PAR;\n\"\\n\"     return CR;\n[0-9A-Za-z_,\\-\\.:/]+ {\n    char* temp;\n    int len = strlen(yytext);\n    temp = calloc(sizeof(char), len + 1);\n    sscanf(yytext, \"%s\", temp);\n    yylval.literal_value = temp;\n    return LITERAL;\n}\n%%\n\n```\n\n\u6587\u6cd5\u3068\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u5b9a\u7fa9\n\n```\n%{\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define YYDEBUG 1\n%}\n%union {\nchar*        literal_value;\nchar*        string_value;\n}\n%token <literal_value>  LITERAL\n%token LINK_OPEN IMAGE_OPEN CLOSE LEFT_PAR RIGHT_PAR CR\n%type <string_value> blocks block link element image\n%%\nline_list\n    : line\n    | line_list line\n    ;\nline\n    : blocks CR\n    {\n        printf(\"%s\\n\", $1);\n        free($1);\n    }\nblocks\n    : block\n    | block blocks\n    {\n        char* buf;\n        int lengths[2];\n        lengths[0] = strlen($1);\n        lengths[1] = strlen($2);\n        int len = 0;\n        for (int i=0; i < 2; i++) {\n            len += lengths[i];\n        }\n        buf = calloc(sizeof(char), len + 2);\n        sprintf(buf, \"%s %s\", $1, $2);\n        free($1);\n        free($2);\n        $$ = buf;\n    }\n    ;\nblock\n    : element\n    | link \n    ;\nlink \n    : LINK_OPEN element CLOSE LEFT_PAR LITERAL RIGHT_PAR\n    {\n        char* buf;\n        int lengths[2];\n        lengths[0] = strlen($2);\n        lengths[1] = strlen($5);\n        int len = 0;\n        for (int i=0; i < 2; i++) {\n            len += lengths[i];\n        }\n        buf = calloc(len + 19, sizeof(char));\n        sprintf(buf, \"<a href=\\\"%s\\\" > %s </a>\", $5, $2);\n        free($2);\n        free($5);\n        $$ = buf;\n    }\n    ;\nelement \n    : image\n    | LITERAL\n    ;\nimage\n    : IMAGE_OPEN LITERAL CLOSE LEFT_PAR LITERAL RIGHT_PAR\n    {\n        char* buf;\n        int lengths[2];\n        lengths[0] = strlen($2);\n        lengths[1] = strlen($5);\n\n        int len = 0;\n        for (int i = 0; i < 2; i++) {\n            len += lengths[i];\n        }\n        buf = calloc(len + 38, sizeof(char));\n        sprintf(buf, \"<img src=\\\"%s\\\" alt=\\\"%s\\\" width=\\\"320\\\" ></img>\", $5, $2);\n        free($2);\n        free($5);\n        $$ = buf;\n    }\n    ;\n%%\nint\nyyerror(char const *str)\n{\n    extern char *yytext;\n    fprintf(stderr, \"parser error near %s\\n\", yytext);\n    return 0;\n}\n\nint main(void)\n{\n    extern int yyparse(void);\n    extern FILE *yyin;\n\n    //yydebug = 1;\n    yyin = stdin;\n    if (yyparse()) {\n        fprintf(stderr, \"Error ! Error ! Error !\\n\");\n        exit(1);\n    }\n}\n```\n\n## \u5b9f\u884c\u7d50\u679c\n\nOSX Marverics \u3067\u52d5\u4f5c\u78ba\u8a8d\u3002\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\n\n```bash\nyacc -dv my_markdown.y \nlex token.l\nclang -o my_markdown_parser y.tab.c lex.yy.c\n# or \n# gcc -o my_markdown_parser y.tab.c lex.yy.c\n```\n\n\u5b9f\u884c\u7d50\u679c\n\n```bash\n# input.md \n# [![DragonBook](http://upload.wikimedia.org/wikipedia/en/a/a3/Purple_dragon_book_b.jpg)](http://www.amazon.com/Compilers-Principles-Techniques-Tools-Edition/dp/0321486811)\n\ncat input.md | ./my_markdown_parser\n\n```\n\n\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u50cf\u30ea\u30f3\u30af\u304c\u751f\u6210\u3055\u308c\u308b\u3002(\u4ee5\u4e0b\u306f\u751f\u6210\u3057\u305fHTML\u3092inline\u3067\u8868\u793a.)\n\n```\n<a href=\"http://www.amazon.com/Compilers-Principles-Techniques-Tools-Edition/dp/0321486811\" > \n\t<img src=\"http://upload.wikimedia.org/wikipedia/en/a/a3/Purple_dragon_book_b.jpg\" alt=\"DragonBook\" width=\"320\" ></img> \n</a>\n```\n\n\n\n<a href=\"http://www.amazon.com/Compilers-Principles-Techniques-Tools-Edition/dp/0321486811\" > \n\t<img src=\"http://upload.wikimedia.org/wikipedia/en/a/a3/Purple_dragon_book_b.jpg\" alt=\"DragonBook\" width=\"320\" ></img> \n</a>\n\n\n\n# \u53c2\u8003\u8cc7\u6599\n\n[Makrdown\u8a18\u6cd5 \u30c1\u30fc\u30c8\u30b7\u30fc\u30c8](http://qiita.com/Qiita/items/c686397e4a0f4f11683d)\n\n\u30c6\u30fc\u30d6\u30eb\u8868\u8a18\u3084\u7a7a\u884c\u306e\u53d6\u308a\u6271\u3044\u304c\u5fc5\u8981\u306b\u306a\u308b\u8a18\u6cd5\u3092\u5b9f\u73fe\u3055\u305b\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u3082\u3046\u3061\u3087\u3063\u3068\u8907\u96d1\u306b\u306a\u308a\u305d\u3046\u3060\u304c\u3001\u30c6\u30ad\u30b9\u30c8\u306e\u4fee\u98fe\u3001\u6c34\u5e73\u7dda\u3001\u5f15\u7528\u306a\u3069\u306f\u753b\u50cf\u3084\u30ea\u30f3\u30af\u3068\u540c\u69d8\u306e\u5b9f\u88c5\u3067\u5b9f\u73fe\u3067\u304d\u305d\u3046\u3002\n\n[yacc\u3068lex](http://kmaebashi.com/programmer/devlang/yacclex.html)\n\n\u5927\u5b66\u306e\u8b1b\u7fa9\u30da\u30fc\u30b8\u3060\u3068\u601d\u3046\u3002\u53e4\u3044\u8a18\u4e8b\u3060\u304c\u3068\u3066\u3082\u5206\u304b\u308a\u3084\u3059\u3044\u3002yacc\u306e\u52d5\u4f5c\u306f\u3001\u30c6\u30c8\u30ea\u30b9\u3060\u3068\u601d\u3048\u3070\u826f\u3044\u3001\u3068\u3044\u3046\u8aac\u660e\u304c\u81ea\u5206\u7684\u306b\u306f\u3059\u3054\u304f\u3057\u3063\u304f\u308a\u6765\u305f\u3002\n\n\n", "tags": ["\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0", "Markdown"]}