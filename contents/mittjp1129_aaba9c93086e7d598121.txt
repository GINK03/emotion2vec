{"tags": ["kubernetes", "\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9", "\u30d3\u30eb\u30c9", "\u69cb\u7bc9"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u4ee5\u4e0b\u306e\u624b\u9806\u306f\u3001CentOS7\u4e0a\u3067\u3001Kubernetes\u3092\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u30d3\u30eb\u30c9\u3057\u3066\u3001\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u306b\u30af\u30e9\u30b9\u30bf\u3092\u69cb\u7bc9\u3059\u308b\u624b\u9806\u3067\u3059\u3002\n\n\u4e8b\u524d\u6e96\u5099\n\nGo\u8a00\u8a9e\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30921.7\u4ee5\u4e0a\u306b\u3059\u308b\ncontext\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u304c\u3001\u30d0\u30fc\u30b8\u30e7\u30f31.7\u4ee5\u4e0a\u3067\u306f\u306a\u3044\u5834\u5408\u540c\u68b1\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3001Go\u8a00\u8a9e\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u307e\u3059\u3002\n\u5165\u624b\u5143: https://golang.org/doc/install\n# tar -C /usr/local -xzf go1.8.linux-amd64.tar.gz\n# export PATH=$PATH:/usr/local/go/bin\n\n\u306a\u304a\u3001\u6b21\u3067\u8aac\u660e\u3059\u308b\u65b9\u6cd5\u3068\u540c\u3058\u3088\u3046\u306b\u3001Go\u81ea\u4f53\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4e0a\u3052\u308b\u306e\u3067\u306f\u306a\u304f\u3001context\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u307f\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304d\u3066PATH\u3092\u8a2d\u5b9a\u3059\u308b\u65b9\u6cd5\u3067\u3082\u5927\u4e08\u592b\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\ncfssl, cfssljson\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\n\u30ed\u30fc\u30ab\u30eb\u30af\u30e9\u30b9\u30bf\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3068\u306a\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3059\u3002\n\u3053\u308c\u3089\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u3001\u30af\u30e9\u30b9\u30bf\u8d77\u52d5\u6642\u306b\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\nHint\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u3001PATH\u306eexport\u3068\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5165\u624b\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nhttps://github.com/cloudflare/cfssl\nFailed to successfully run 'cfssl', please verify that cfssl and cfssljson are in $PATH.\nHint: export PATH=$PATH:$GOPATH/bin; go get -u github.com/cloudflare/cfssl/cmd/...\n\n\u306a\u304a\u3001Go\u8a00\u8a9e\u306e\u74b0\u5883\u5909\u6570\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n# go env \nGOARCH=\"amd64\"\nGOBIN=\"\"\nGOEXE=\"\"\nGOHOSTARCH=\"amd64\"\nGOHOSTOS=\"linux\"\nGOOS=\"linux\"\nGOPATH=\"/root/go\"\nGORACE=\"\"\nGOROOT=\"/usr/local/go\"\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\nGCCGO=\"gccgo\"\nCC=\"gcc\"\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build134608843=/tmp/go-build -gno-record-gcc-switches\"\nCXX=\"g++\"\nCGO_ENABLED=\"1\"\nPKG_CONFIG=\"pkg-config\"\nCGO_CFLAGS=\"-g -O2\"\nCGO_CPPFLAGS=\"\"\nCGO_CXXFLAGS=\"-g -O2\"\nCGO_FFLAGS=\"-g -O2\"\nCGO_LDFLAGS=\"-g -O2\"\n\n\n\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\u79fb\u884c\u306e\u4f5c\u696d\u306f\u3001\u5168\u3066kubernetes\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30d5\u30a9\u30eb\u30c0\u914d\u4e0b\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001/opt/git/kubernetes\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002\n# pwd\n/opt/git/kubernetes\n\n\n\u74b0\u5883\u69cb\u7bc9\n\netcd\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\n\u30ed\u30fc\u30ab\u30eb\u30af\u30e9\u30b9\u30bf\u3092\u5b9f\u884c\u3059\u308b\u524d\u63d0\u3068\u3057\u3066\u3001etcd\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3057\u3066\u3001etcd\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001PATH\u3092export\u3057\u307e\u3059\u3002\n# ./hack/install-etcd.sh \nDownloading https://github.com/coreos/etcd/releases/download/v3.0.14/etcd-v3.0.14-linux-amd64.tar.gz succeed\netcd v3.0.14 installed. To use:\nexport PATH=/opt/git/kubernetes/third_party/etcd:${PATH}.\n# export PATH=/opt/git/kubernetes/third_party/etcd:${PATH}\n\n\n\u30ed\u30fc\u30ab\u30eb\u30af\u30e9\u30b9\u30bf\u3092\u8d77\u52d5\u3059\u308b\nlocal-up-cluster.sh\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ed\u30fc\u30ab\u30eb\u30af\u30e9\u30b9\u30bf\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u306a\u304a\u8d77\u52d5\u306b\u5fc5\u8981\u306a\u30b3\u30de\u30f3\u30c9\u7fa4\u306f\u3001\u81ea\u52d5\u7684\u306b\u30d3\u30eb\u30c9\u3055\u308c\u307e\u3059\u3002\n# ./hack/local-up-cluster.sh \nmake: Entering directory `/opt/git/kubernetes'\nmake[1]: Entering directory `/opt/git/kubernetes'\nmake[1]: Leaving directory `/opt/git/kubernetes'\nmake[1]: Entering directory `/opt/git/kubernetes'\nmake[1]: Leaving directory `/opt/git/kubernetes'\n+++ [0221 20:09:36] Building the toolchain targets:\n    k8s.io/kubernetes/hack/cmd/teststale\n    k8s.io/kubernetes/vendor/github.com/jteeuwen/go-bindata/go-bindata\n+++ [0221 20:09:37] Generating bindata:\n    test/e2e/generated/gobindata_util.go\n/opt/git/kubernetes /opt/git/kubernetes/test/e2e/generated\n/opt/git/kubernetes/test/e2e/generated\n+++ [0221 20:09:38] Building go targets for linux/amd64:\n    cmd/kubectl\n    cmd/hyperkube\n    vendor/k8s.io/kube-aggregator\nmake: Leaving directory `/opt/git/kubernetes'\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\nKubelet cgroup driver defaulted to use: systemd\nAPI SERVER insecure port is free, proceeding...\nAPI SERVER secure port is free, proceeding...\nDetected host and ready to start services.  Doing some housekeeping first...\nUsing GO_OUT /opt/git/kubernetes/_output/local/bin/linux/amd64\nStarting services now!\nStarting etcd\netcd --advertise-client-urls http://127.0.0.1:2379 --data-dir /tmp/tmp.BCTwiX1Q3Y --listen-client-urls http://127.0.0.1:2379 --debug > \"/dev/null\" 2>/dev/null\nWaiting for etcd to come up.\n+++ [0221 20:09:49] On try 2, etcd: : http://127.0.0.1:2379\n{\"action\":\"set\",\"node\":{\"key\":\"/_test\",\"value\":\"\",\"modifiedIndex\":4,\"createdIndex\":4}}\nGenerating a 2048 bit RSA private key\n...........+++\n..+++\nwriting new private key to '/var/run/kubernetes/server-ca.key'\n-----\nGenerating a 2048 bit RSA private key\n....................................................+++\n............+++\nwriting new private key to '/var/run/kubernetes/client-ca.key'\n-----\nGenerating a 2048 bit RSA private key\n.......................................................................+++\n.......................................................................+++\nwriting new private key to '/var/run/kubernetes/request-header-ca.key'\n-----\n2017/02/21 20:09:50 [INFO] generate received request\n2017/02/21 20:09:50 [INFO] received CSR\n2017/02/21 20:09:50 [INFO] generating key: rsa-2048\n2017/02/21 20:09:52 [INFO] encoded CSR\n2017/02/21 20:09:52 [INFO] signed certificate with serial number 124466083292368969753878751531462897150884477228\n2017/02/21 20:09:52 [INFO] generate received request\n2017/02/21 20:09:52 [INFO] received CSR\n2017/02/21 20:09:52 [INFO] generating key: rsa-2048\n2017/02/21 20:09:52 [INFO] encoded CSR\n2017/02/21 20:09:52 [INFO] signed certificate with serial number 631329441025824396392927159183757173624650656295\n2017/02/21 20:09:52 [INFO] generate received request\n2017/02/21 20:09:52 [INFO] received CSR\n2017/02/21 20:09:52 [INFO] generating key: rsa-2048\n2017/02/21 20:09:52 [INFO] encoded CSR\n2017/02/21 20:09:52 [INFO] signed certificate with serial number 701426569215378577074384681992288543339367856691\n2017/02/21 20:09:52 [INFO] generate received request\n2017/02/21 20:09:52 [INFO] received CSR\n2017/02/21 20:09:52 [INFO] generating key: rsa-2048\n2017/02/21 20:09:53 [INFO] encoded CSR\n2017/02/21 20:09:53 [INFO] signed certificate with serial number 229862793080566960970445958651876853638005750287\n2017/02/21 20:09:53 [INFO] generate received request\n2017/02/21 20:09:53 [INFO] received CSR\n2017/02/21 20:09:53 [INFO] generating key: rsa-2048\n2017/02/21 20:09:54 [INFO] encoded CSR\n2017/02/21 20:09:54 [INFO] signed certificate with serial number 36416734191975628719770341690511488840046660423\n2017/02/21 20:09:54 [INFO] generate received request\n2017/02/21 20:09:54 [INFO] received CSR\n2017/02/21 20:09:54 [INFO] generating key: rsa-2048\n2017/02/21 20:09:54 [INFO] encoded CSR\n2017/02/21 20:09:54 [INFO] signed certificate with serial number 553207743375559129377582195944191786742425990488\n2017/02/21 20:09:54 [INFO] generate received request\n2017/02/21 20:09:54 [INFO] received CSR\n2017/02/21 20:09:54 [INFO] generating key: rsa-2048\n2017/02/21 20:09:56 [INFO] encoded CSR\n2017/02/21 20:09:56 [INFO] signed certificate with serial number 117212563773423357457144032620109324825346970515\n2017/02/21 20:09:56 [INFO] generate received request\n2017/02/21 20:09:56 [INFO] received CSR\n2017/02/21 20:09:56 [INFO] generating key: rsa-2048\n2017/02/21 20:09:57 [INFO] encoded CSR\n2017/02/21 20:09:57 [INFO] signed certificate with serial number 66524454669338354068916931456157096264836067124\n2017/02/21 20:09:57 [INFO] generate received request\n2017/02/21 20:09:57 [INFO] received CSR\n2017/02/21 20:09:57 [INFO] generating key: rsa-2048\n2017/02/21 20:09:58 [INFO] encoded CSR\n2017/02/21 20:09:58 [INFO] signed certificate with serial number 472293545949172374356825841988836525612842141668\nWaiting for apiserver to come up\n+++ [0221 20:09:59] On try 2, apiserver: : {\n  \"major\": \"1\",\n  \"minor\": \"6+\",\n  \"gitVersion\": \"v1.6.0-alpha.3.346+b201ac2f8f8328-dirty\",\n  \"gitCommit\": \"b201ac2f8f8328d9c828f36358b106d0ea21a14a\",\n  \"gitTreeState\": \"dirty\",\n  \"buildDate\": \"2017-02-22T00:50:02Z\",\n  \"goVersion\": \"go1.8\",\n  \"compiler\": \"gc\",\n  \"platform\": \"linux/amd64\"\n}\nError from server (AlreadyExists): namespaces \"kube-public\" already exists\nCluster \"local-up-cluster\" set.\nuse 'kubectl --kubeconfig=/var/run/kubernetes/admin-kube-aggregator.kubeconfig' to use the aggregated API server\nkubelet ( 13513 ) is running.\nLocal Kubernetes cluster is running. Press Ctrl-C to shut it down.\n\nLogs:\n  /tmp/kube-apiserver.log\n  /tmp/kube-controller-manager.log\n  /tmp/kube-proxy.log\n  /tmp/kube-scheduler.log\n  /tmp/kubelet.log\n\nTo start using your cluster, you can open up another terminal/tab and run:\n\n  export KUBECONFIG=/var/run/kubernetes/admin.kubeconfig\n  cluster/kubectl.sh\n\nAlternatively, you can write to the default kubeconfig:\n\n  export KUBERNETES_PROVIDER=local\n\n  cluster/kubectl.sh config set-cluster local --server=https://localhost:6443 --certificate-authority=/var/run/kubernetes/server-ca.crt\n  cluster/kubectl.sh config set-credentials myself --client-key=/var/run/kubernetes/client-admin.key --client-certificate=/var/run/kubernetes/client-admin.crt\n  cluster/kubectl.sh config set-context local --cluster=local --user=myself\n  cluster/kubectl.sh config use-context local\n  cluster/kubectl.sh\n\n\n\u30d3\u30eb\u30c9\u6e08\u307f\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u4f7f\u7528\u3057\u3066\u30af\u30e9\u30b9\u30bf\u3092\u8d77\u52d5\u3059\u308b\n\u4e8b\u524d\u306b\u30b3\u30de\u30f3\u30c9\u7fa4\u3092\u30d3\u30eb\u30c9\u3057\u3066\u304a\u304d\u3001\u305d\u308c\u3089\u3092\u4f7f\u7528\u3057\u3066\u30af\u30e9\u30b9\u30bf\u3092\u8d77\u52d5\u3059\u308b\u3053\u3068\u3082\u51fa\u6765\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001\u5fc5\u8981\u306a\u30b3\u30de\u30f3\u30c9\u7fa4\u3092make\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002\n# make WHAT='cmd/kubectl cmd/hyperkube test/e2e/e2e.test';\n\n\u6b21\u306b\u3001\u4f5c\u6210\u3057\u305f\u30b3\u30de\u30f3\u30c9\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u3092\u5f15\u6570\u306b\u3068\u3063\u3066\u3001local-up-cluster.sh\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n# ./hack/local-up-cluster.sh -o _output/bin/\nskipping build\nusing source _output/bin/\nskipped the build.\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\nKubelet cgroup driver defaulted to use: systemd\nAPI SERVER insecure port is free, proceeding...\nAPI SERVER secure port is free, proceeding...\nDetected host and ready to start services.  Doing some housekeeping first...\nUsing GO_OUT _output/bin/\nStarting services now!\nStarting etcd\netcd --advertise-client-urls http://127.0.0.1:2379 --data-dir /tmp/tmp.GVYitifLmI --listen-client-urls http://127.0.0.1:2379 --debug > \"/dev/null\" 2>/dev/null\nWaiting for etcd to come up.\n+++ [0221 20:24:34] On try 2, etcd: : http://127.0.0.1:2379\n{\"action\":\"set\",\"node\":{\"key\":\"/_test\",\"value\":\"\",\"modifiedIndex\":4,\"createdIndex\":4}}\nGenerating a 2048 bit RSA private key\n...+++\n.....+++\nwriting new private key to '/var/run/kubernetes/server-ca.key'\n-----\nGenerating a 2048 bit RSA private key\n............................+++\n................................+++\nwriting new private key to '/var/run/kubernetes/client-ca.key'\n-----\nGenerating a 2048 bit RSA private key\n..................+++\n..........................................+++\nwriting new private key to '/var/run/kubernetes/request-header-ca.key'\n-----\n2017/02/21 20:24:34 [INFO] generate received request\n2017/02/21 20:24:34 [INFO] received CSR\n2017/02/21 20:24:34 [INFO] generating key: rsa-2048\n2017/02/21 20:24:35 [INFO] encoded CSR\n2017/02/21 20:24:35 [INFO] signed certificate with serial number 447052118705216540313463589978670235143017346168\n2017/02/21 20:24:35 [INFO] generate received request\n2017/02/21 20:24:35 [INFO] received CSR\n2017/02/21 20:24:35 [INFO] generating key: rsa-2048\n2017/02/21 20:24:35 [INFO] encoded CSR\n2017/02/21 20:24:35 [INFO] signed certificate with serial number 453147652717934396244790326985575891492885267463\n2017/02/21 20:24:35 [INFO] generate received request\n2017/02/21 20:24:35 [INFO] received CSR\n2017/02/21 20:24:35 [INFO] generating key: rsa-2048\n2017/02/21 20:24:35 [INFO] encoded CSR\n2017/02/21 20:24:35 [INFO] signed certificate with serial number 272097984252071207959056508542467462400256844015\n2017/02/21 20:24:35 [INFO] generate received request\n2017/02/21 20:24:35 [INFO] received CSR\n2017/02/21 20:24:35 [INFO] generating key: rsa-2048\n2017/02/21 20:24:36 [INFO] encoded CSR\n2017/02/21 20:24:36 [INFO] signed certificate with serial number 89416123288674897438978570927840403417394925806\n2017/02/21 20:24:36 [INFO] generate received request\n2017/02/21 20:24:36 [INFO] received CSR\n2017/02/21 20:24:36 [INFO] generating key: rsa-2048\n2017/02/21 20:24:36 [INFO] encoded CSR\n2017/02/21 20:24:36 [INFO] signed certificate with serial number 463788683463756580938211377131316447800974180111\n2017/02/21 20:24:36 [INFO] generate received request\n2017/02/21 20:24:36 [INFO] received CSR\n2017/02/21 20:24:36 [INFO] generating key: rsa-2048\n2017/02/21 20:24:36 [INFO] encoded CSR\n2017/02/21 20:24:36 [INFO] signed certificate with serial number 686663176438254195071220868931395298199838761704\n2017/02/21 20:24:37 [INFO] generate received request\n2017/02/21 20:24:37 [INFO] received CSR\n2017/02/21 20:24:37 [INFO] generating key: rsa-2048\n2017/02/21 20:24:37 [INFO] encoded CSR\n2017/02/21 20:24:37 [INFO] signed certificate with serial number 46503830313797068101462792228458221275331011435\n2017/02/21 20:24:37 [INFO] generate received request\n2017/02/21 20:24:37 [INFO] received CSR\n2017/02/21 20:24:37 [INFO] generating key: rsa-2048\n2017/02/21 20:24:38 [INFO] encoded CSR\n2017/02/21 20:24:38 [INFO] signed certificate with serial number 581841164489590118531163072166076612807454584041\n2017/02/21 20:24:38 [INFO] generate received request\n2017/02/21 20:24:38 [INFO] received CSR\n2017/02/21 20:24:38 [INFO] generating key: rsa-2048\n2017/02/21 20:24:38 [INFO] encoded CSR\n2017/02/21 20:24:38 [INFO] signed certificate with serial number 2683591120418327848777775490762990201349172159\nWaiting for apiserver to come up\n+++ [0221 20:24:39] On try 2, apiserver: : {\n  \"major\": \"1\",\n  \"minor\": \"6+\",\n  \"gitVersion\": \"v1.6.0-alpha.3.346+b201ac2f8f8328-dirty\",\n  \"gitCommit\": \"b201ac2f8f8328d9c828f36358b106d0ea21a14a\",\n  \"gitTreeState\": \"dirty\",\n  \"buildDate\": \"2017-02-22T00:50:02Z\",\n  \"goVersion\": \"go1.8\",\n  \"compiler\": \"gc\",\n  \"platform\": \"linux/amd64\"\n}\nError from server (AlreadyExists): namespaces \"kube-public\" already exists\nCluster \"local-up-cluster\" set.\nuse 'kubectl --kubeconfig=/var/run/kubernetes/admin-kube-aggregator.kubeconfig' to use the aggregated API server\nkubelet ( 16937 ) is running.\nLocal Kubernetes cluster is running. Press Ctrl-C to shut it down.\n\nLogs:\n  /tmp/kube-apiserver.log\n  /tmp/kube-controller-manager.log\n  /tmp/kube-proxy.log\n  /tmp/kube-scheduler.log\n  /tmp/kubelet.log\n\nTo start using your cluster, you can open up another terminal/tab and run:\n\n  export KUBECONFIG=/var/run/kubernetes/admin.kubeconfig\n  cluster/kubectl.sh\n\nAlternatively, you can write to the default kubeconfig:\n\n  export KUBERNETES_PROVIDER=local\n\n  cluster/kubectl.sh config set-cluster local --server=https://localhost:6443 --certificate-authority=/var/run/kubernetes/server-ca.crt\n  cluster/kubectl.sh config set-credentials myself --client-key=/var/run/kubernetes/client-admin.key --client-certificate=/var/run/kubernetes/client-admin.crt\n  cluster/kubectl.sh config set-context local --cluster=local --user=myself\n  cluster/kubectl.sh config use-context local\n  cluster/kubectl.sh\n\n\n\u30ce\u30fc\u30c9\u306e\u8d77\u52d5\u3092\u78ba\u8a8d\u3059\u308b\n\u69cb\u7bc9\u3057\u305fKubernetes\u74b0\u5883\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001cluster/kubectl.sh\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n# cluster/kubectl.sh get node\nNAME        STATUS    AGE       VERSION\n127.0.0.1   Ready     2s        v1.6.0-alpha.3.346+b201ac2f8f8328-dirty\n\n\nPOD\u3092\u4f5c\u6210\u3059\u308b\n# cluster/kubectl.sh create -f test.yaml\n\n## \u306f\u3058\u3081\u306b\n\n\u4ee5\u4e0b\u306e\u624b\u9806\u306f\u3001CentOS7\u4e0a\u3067\u3001Kubernetes\u3092\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u30d3\u30eb\u30c9\u3057\u3066\u3001\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u306b\u30af\u30e9\u30b9\u30bf\u3092\u69cb\u7bc9\u3059\u308b\u624b\u9806\u3067\u3059\u3002\n\n\n## \u4e8b\u524d\u6e96\u5099\n\n### Go\u8a00\u8a9e\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30921.7\u4ee5\u4e0a\u306b\u3059\u308b\ncontext\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u304c\u3001\u30d0\u30fc\u30b8\u30e7\u30f31.7\u4ee5\u4e0a\u3067\u306f\u306a\u3044\u5834\u5408\u540c\u68b1\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3001Go\u8a00\u8a9e\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u307e\u3059\u3002\n\u5165\u624b\u5143: https://golang.org/doc/install\n\n```bash\n# tar -C /usr/local -xzf go1.8.linux-amd64.tar.gz\n# export PATH=$PATH:/usr/local/go/bin\n```\n\n\u306a\u304a\u3001\u6b21\u3067\u8aac\u660e\u3059\u308b\u65b9\u6cd5\u3068\u540c\u3058\u3088\u3046\u306b\u3001Go\u81ea\u4f53\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4e0a\u3052\u308b\u306e\u3067\u306f\u306a\u304f\u3001context\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u307f\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304d\u3066PATH\u3092\u8a2d\u5b9a\u3059\u308b\u65b9\u6cd5\u3067\u3082\u5927\u4e08\u592b\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n### cfssl, cfssljson\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\n\u30ed\u30fc\u30ab\u30eb\u30af\u30e9\u30b9\u30bf\u3092\u8d77\u52d5\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3068\u306a\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3059\u3002\n\u3053\u308c\u3089\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u3001\u30af\u30e9\u30b9\u30bf\u8d77\u52d5\u6642\u306b\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\nHint\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u3001PATH\u306eexport\u3068\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5165\u624b\u3092\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nhttps://github.com/cloudflare/cfssl\n\n```bash\nFailed to successfully run 'cfssl', please verify that cfssl and cfssljson are in $PATH.\nHint: export PATH=$PATH:$GOPATH/bin; go get -u github.com/cloudflare/cfssl/cmd/...\n```\n\n\n\u306a\u304a\u3001Go\u8a00\u8a9e\u306e\u74b0\u5883\u5909\u6570\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```bash\n# go env \nGOARCH=\"amd64\"\nGOBIN=\"\"\nGOEXE=\"\"\nGOHOSTARCH=\"amd64\"\nGOHOSTOS=\"linux\"\nGOOS=\"linux\"\nGOPATH=\"/root/go\"\nGORACE=\"\"\nGOROOT=\"/usr/local/go\"\nGOTOOLDIR=\"/usr/local/go/pkg/tool/linux_amd64\"\nGCCGO=\"gccgo\"\nCC=\"gcc\"\nGOGCCFLAGS=\"-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build134608843=/tmp/go-build -gno-record-gcc-switches\"\nCXX=\"g++\"\nCGO_ENABLED=\"1\"\nPKG_CONFIG=\"pkg-config\"\nCGO_CFLAGS=\"-g -O2\"\nCGO_CPPFLAGS=\"\"\nCGO_CXXFLAGS=\"-g -O2\"\nCGO_FFLAGS=\"-g -O2\"\nCGO_LDFLAGS=\"-g -O2\"\n```\n\n### \u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\n\u79fb\u884c\u306e\u4f5c\u696d\u306f\u3001\u5168\u3066kubernetes\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30d5\u30a9\u30eb\u30c0\u914d\u4e0b\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001/opt/git/kubernetes\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002\n\n```bash\n# pwd\n/opt/git/kubernetes\n```\n\n## \u74b0\u5883\u69cb\u7bc9\n\n### etcd\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\n\u30ed\u30fc\u30ab\u30eb\u30af\u30e9\u30b9\u30bf\u3092\u5b9f\u884c\u3059\u308b\u524d\u63d0\u3068\u3057\u3066\u3001etcd\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3057\u3066\u3001etcd\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001PATH\u3092export\u3057\u307e\u3059\u3002\n\n```bash\n# ./hack/install-etcd.sh \nDownloading https://github.com/coreos/etcd/releases/download/v3.0.14/etcd-v3.0.14-linux-amd64.tar.gz succeed\netcd v3.0.14 installed. To use:\nexport PATH=/opt/git/kubernetes/third_party/etcd:${PATH}.\n# export PATH=/opt/git/kubernetes/third_party/etcd:${PATH}\n```\n\n### \u30ed\u30fc\u30ab\u30eb\u30af\u30e9\u30b9\u30bf\u3092\u8d77\u52d5\u3059\u308b\nlocal-up-cluster.sh\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ed\u30fc\u30ab\u30eb\u30af\u30e9\u30b9\u30bf\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\u306a\u304a\u8d77\u52d5\u306b\u5fc5\u8981\u306a\u30b3\u30de\u30f3\u30c9\u7fa4\u306f\u3001\u81ea\u52d5\u7684\u306b\u30d3\u30eb\u30c9\u3055\u308c\u307e\u3059\u3002\n\n```bash\n# ./hack/local-up-cluster.sh \nmake: Entering directory `/opt/git/kubernetes'\nmake[1]: Entering directory `/opt/git/kubernetes'\nmake[1]: Leaving directory `/opt/git/kubernetes'\nmake[1]: Entering directory `/opt/git/kubernetes'\nmake[1]: Leaving directory `/opt/git/kubernetes'\n+++ [0221 20:09:36] Building the toolchain targets:\n    k8s.io/kubernetes/hack/cmd/teststale\n    k8s.io/kubernetes/vendor/github.com/jteeuwen/go-bindata/go-bindata\n+++ [0221 20:09:37] Generating bindata:\n    test/e2e/generated/gobindata_util.go\n/opt/git/kubernetes /opt/git/kubernetes/test/e2e/generated\n/opt/git/kubernetes/test/e2e/generated\n+++ [0221 20:09:38] Building go targets for linux/amd64:\n    cmd/kubectl\n    cmd/hyperkube\n    vendor/k8s.io/kube-aggregator\nmake: Leaving directory `/opt/git/kubernetes'\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\nKubelet cgroup driver defaulted to use: systemd\nAPI SERVER insecure port is free, proceeding...\nAPI SERVER secure port is free, proceeding...\nDetected host and ready to start services.  Doing some housekeeping first...\nUsing GO_OUT /opt/git/kubernetes/_output/local/bin/linux/amd64\nStarting services now!\nStarting etcd\netcd --advertise-client-urls http://127.0.0.1:2379 --data-dir /tmp/tmp.BCTwiX1Q3Y --listen-client-urls http://127.0.0.1:2379 --debug > \"/dev/null\" 2>/dev/null\nWaiting for etcd to come up.\n+++ [0221 20:09:49] On try 2, etcd: : http://127.0.0.1:2379\n{\"action\":\"set\",\"node\":{\"key\":\"/_test\",\"value\":\"\",\"modifiedIndex\":4,\"createdIndex\":4}}\nGenerating a 2048 bit RSA private key\n...........+++\n..+++\nwriting new private key to '/var/run/kubernetes/server-ca.key'\n-----\nGenerating a 2048 bit RSA private key\n....................................................+++\n............+++\nwriting new private key to '/var/run/kubernetes/client-ca.key'\n-----\nGenerating a 2048 bit RSA private key\n.......................................................................+++\n.......................................................................+++\nwriting new private key to '/var/run/kubernetes/request-header-ca.key'\n-----\n2017/02/21 20:09:50 [INFO] generate received request\n2017/02/21 20:09:50 [INFO] received CSR\n2017/02/21 20:09:50 [INFO] generating key: rsa-2048\n2017/02/21 20:09:52 [INFO] encoded CSR\n2017/02/21 20:09:52 [INFO] signed certificate with serial number 124466083292368969753878751531462897150884477228\n2017/02/21 20:09:52 [INFO] generate received request\n2017/02/21 20:09:52 [INFO] received CSR\n2017/02/21 20:09:52 [INFO] generating key: rsa-2048\n2017/02/21 20:09:52 [INFO] encoded CSR\n2017/02/21 20:09:52 [INFO] signed certificate with serial number 631329441025824396392927159183757173624650656295\n2017/02/21 20:09:52 [INFO] generate received request\n2017/02/21 20:09:52 [INFO] received CSR\n2017/02/21 20:09:52 [INFO] generating key: rsa-2048\n2017/02/21 20:09:52 [INFO] encoded CSR\n2017/02/21 20:09:52 [INFO] signed certificate with serial number 701426569215378577074384681992288543339367856691\n2017/02/21 20:09:52 [INFO] generate received request\n2017/02/21 20:09:52 [INFO] received CSR\n2017/02/21 20:09:52 [INFO] generating key: rsa-2048\n2017/02/21 20:09:53 [INFO] encoded CSR\n2017/02/21 20:09:53 [INFO] signed certificate with serial number 229862793080566960970445958651876853638005750287\n2017/02/21 20:09:53 [INFO] generate received request\n2017/02/21 20:09:53 [INFO] received CSR\n2017/02/21 20:09:53 [INFO] generating key: rsa-2048\n2017/02/21 20:09:54 [INFO] encoded CSR\n2017/02/21 20:09:54 [INFO] signed certificate with serial number 36416734191975628719770341690511488840046660423\n2017/02/21 20:09:54 [INFO] generate received request\n2017/02/21 20:09:54 [INFO] received CSR\n2017/02/21 20:09:54 [INFO] generating key: rsa-2048\n2017/02/21 20:09:54 [INFO] encoded CSR\n2017/02/21 20:09:54 [INFO] signed certificate with serial number 553207743375559129377582195944191786742425990488\n2017/02/21 20:09:54 [INFO] generate received request\n2017/02/21 20:09:54 [INFO] received CSR\n2017/02/21 20:09:54 [INFO] generating key: rsa-2048\n2017/02/21 20:09:56 [INFO] encoded CSR\n2017/02/21 20:09:56 [INFO] signed certificate with serial number 117212563773423357457144032620109324825346970515\n2017/02/21 20:09:56 [INFO] generate received request\n2017/02/21 20:09:56 [INFO] received CSR\n2017/02/21 20:09:56 [INFO] generating key: rsa-2048\n2017/02/21 20:09:57 [INFO] encoded CSR\n2017/02/21 20:09:57 [INFO] signed certificate with serial number 66524454669338354068916931456157096264836067124\n2017/02/21 20:09:57 [INFO] generate received request\n2017/02/21 20:09:57 [INFO] received CSR\n2017/02/21 20:09:57 [INFO] generating key: rsa-2048\n2017/02/21 20:09:58 [INFO] encoded CSR\n2017/02/21 20:09:58 [INFO] signed certificate with serial number 472293545949172374356825841988836525612842141668\nWaiting for apiserver to come up\n+++ [0221 20:09:59] On try 2, apiserver: : {\n  \"major\": \"1\",\n  \"minor\": \"6+\",\n  \"gitVersion\": \"v1.6.0-alpha.3.346+b201ac2f8f8328-dirty\",\n  \"gitCommit\": \"b201ac2f8f8328d9c828f36358b106d0ea21a14a\",\n  \"gitTreeState\": \"dirty\",\n  \"buildDate\": \"2017-02-22T00:50:02Z\",\n  \"goVersion\": \"go1.8\",\n  \"compiler\": \"gc\",\n  \"platform\": \"linux/amd64\"\n}\nError from server (AlreadyExists): namespaces \"kube-public\" already exists\nCluster \"local-up-cluster\" set.\nuse 'kubectl --kubeconfig=/var/run/kubernetes/admin-kube-aggregator.kubeconfig' to use the aggregated API server\nkubelet ( 13513 ) is running.\nLocal Kubernetes cluster is running. Press Ctrl-C to shut it down.\n\nLogs:\n  /tmp/kube-apiserver.log\n  /tmp/kube-controller-manager.log\n  /tmp/kube-proxy.log\n  /tmp/kube-scheduler.log\n  /tmp/kubelet.log\n\nTo start using your cluster, you can open up another terminal/tab and run:\n\n  export KUBECONFIG=/var/run/kubernetes/admin.kubeconfig\n  cluster/kubectl.sh\n\nAlternatively, you can write to the default kubeconfig:\n\n  export KUBERNETES_PROVIDER=local\n\n  cluster/kubectl.sh config set-cluster local --server=https://localhost:6443 --certificate-authority=/var/run/kubernetes/server-ca.crt\n  cluster/kubectl.sh config set-credentials myself --client-key=/var/run/kubernetes/client-admin.key --client-certificate=/var/run/kubernetes/client-admin.crt\n  cluster/kubectl.sh config set-context local --cluster=local --user=myself\n  cluster/kubectl.sh config use-context local\n  cluster/kubectl.sh\n```\n\n\n\n### \u30d3\u30eb\u30c9\u6e08\u307f\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u4f7f\u7528\u3057\u3066\u30af\u30e9\u30b9\u30bf\u3092\u8d77\u52d5\u3059\u308b\n\u4e8b\u524d\u306b\u30b3\u30de\u30f3\u30c9\u7fa4\u3092\u30d3\u30eb\u30c9\u3057\u3066\u304a\u304d\u3001\u305d\u308c\u3089\u3092\u4f7f\u7528\u3057\u3066\u30af\u30e9\u30b9\u30bf\u3092\u8d77\u52d5\u3059\u308b\u3053\u3068\u3082\u51fa\u6765\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001\u5fc5\u8981\u306a\u30b3\u30de\u30f3\u30c9\u7fa4\u3092make\u3067\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n# make WHAT='cmd/kubectl cmd/hyperkube test/e2e/e2e.test';\n```\n\n\u6b21\u306b\u3001\u4f5c\u6210\u3057\u305f\u30b3\u30de\u30f3\u30c9\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u3092\u5f15\u6570\u306b\u3068\u3063\u3066\u3001local-up-cluster.sh\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```bash\n# ./hack/local-up-cluster.sh -o _output/bin/\nskipping build\nusing source _output/bin/\nskipped the build.\n WARNING: Usage of loopback devices is strongly discouraged for production use. Use `--storage-opt dm.thinpooldev` to specify a custom block storage device.\nKubelet cgroup driver defaulted to use: systemd\nAPI SERVER insecure port is free, proceeding...\nAPI SERVER secure port is free, proceeding...\nDetected host and ready to start services.  Doing some housekeeping first...\nUsing GO_OUT _output/bin/\nStarting services now!\nStarting etcd\netcd --advertise-client-urls http://127.0.0.1:2379 --data-dir /tmp/tmp.GVYitifLmI --listen-client-urls http://127.0.0.1:2379 --debug > \"/dev/null\" 2>/dev/null\nWaiting for etcd to come up.\n+++ [0221 20:24:34] On try 2, etcd: : http://127.0.0.1:2379\n{\"action\":\"set\",\"node\":{\"key\":\"/_test\",\"value\":\"\",\"modifiedIndex\":4,\"createdIndex\":4}}\nGenerating a 2048 bit RSA private key\n...+++\n.....+++\nwriting new private key to '/var/run/kubernetes/server-ca.key'\n-----\nGenerating a 2048 bit RSA private key\n............................+++\n................................+++\nwriting new private key to '/var/run/kubernetes/client-ca.key'\n-----\nGenerating a 2048 bit RSA private key\n..................+++\n..........................................+++\nwriting new private key to '/var/run/kubernetes/request-header-ca.key'\n-----\n2017/02/21 20:24:34 [INFO] generate received request\n2017/02/21 20:24:34 [INFO] received CSR\n2017/02/21 20:24:34 [INFO] generating key: rsa-2048\n2017/02/21 20:24:35 [INFO] encoded CSR\n2017/02/21 20:24:35 [INFO] signed certificate with serial number 447052118705216540313463589978670235143017346168\n2017/02/21 20:24:35 [INFO] generate received request\n2017/02/21 20:24:35 [INFO] received CSR\n2017/02/21 20:24:35 [INFO] generating key: rsa-2048\n2017/02/21 20:24:35 [INFO] encoded CSR\n2017/02/21 20:24:35 [INFO] signed certificate with serial number 453147652717934396244790326985575891492885267463\n2017/02/21 20:24:35 [INFO] generate received request\n2017/02/21 20:24:35 [INFO] received CSR\n2017/02/21 20:24:35 [INFO] generating key: rsa-2048\n2017/02/21 20:24:35 [INFO] encoded CSR\n2017/02/21 20:24:35 [INFO] signed certificate with serial number 272097984252071207959056508542467462400256844015\n2017/02/21 20:24:35 [INFO] generate received request\n2017/02/21 20:24:35 [INFO] received CSR\n2017/02/21 20:24:35 [INFO] generating key: rsa-2048\n2017/02/21 20:24:36 [INFO] encoded CSR\n2017/02/21 20:24:36 [INFO] signed certificate with serial number 89416123288674897438978570927840403417394925806\n2017/02/21 20:24:36 [INFO] generate received request\n2017/02/21 20:24:36 [INFO] received CSR\n2017/02/21 20:24:36 [INFO] generating key: rsa-2048\n2017/02/21 20:24:36 [INFO] encoded CSR\n2017/02/21 20:24:36 [INFO] signed certificate with serial number 463788683463756580938211377131316447800974180111\n2017/02/21 20:24:36 [INFO] generate received request\n2017/02/21 20:24:36 [INFO] received CSR\n2017/02/21 20:24:36 [INFO] generating key: rsa-2048\n2017/02/21 20:24:36 [INFO] encoded CSR\n2017/02/21 20:24:36 [INFO] signed certificate with serial number 686663176438254195071220868931395298199838761704\n2017/02/21 20:24:37 [INFO] generate received request\n2017/02/21 20:24:37 [INFO] received CSR\n2017/02/21 20:24:37 [INFO] generating key: rsa-2048\n2017/02/21 20:24:37 [INFO] encoded CSR\n2017/02/21 20:24:37 [INFO] signed certificate with serial number 46503830313797068101462792228458221275331011435\n2017/02/21 20:24:37 [INFO] generate received request\n2017/02/21 20:24:37 [INFO] received CSR\n2017/02/21 20:24:37 [INFO] generating key: rsa-2048\n2017/02/21 20:24:38 [INFO] encoded CSR\n2017/02/21 20:24:38 [INFO] signed certificate with serial number 581841164489590118531163072166076612807454584041\n2017/02/21 20:24:38 [INFO] generate received request\n2017/02/21 20:24:38 [INFO] received CSR\n2017/02/21 20:24:38 [INFO] generating key: rsa-2048\n2017/02/21 20:24:38 [INFO] encoded CSR\n2017/02/21 20:24:38 [INFO] signed certificate with serial number 2683591120418327848777775490762990201349172159\nWaiting for apiserver to come up\n+++ [0221 20:24:39] On try 2, apiserver: : {\n  \"major\": \"1\",\n  \"minor\": \"6+\",\n  \"gitVersion\": \"v1.6.0-alpha.3.346+b201ac2f8f8328-dirty\",\n  \"gitCommit\": \"b201ac2f8f8328d9c828f36358b106d0ea21a14a\",\n  \"gitTreeState\": \"dirty\",\n  \"buildDate\": \"2017-02-22T00:50:02Z\",\n  \"goVersion\": \"go1.8\",\n  \"compiler\": \"gc\",\n  \"platform\": \"linux/amd64\"\n}\nError from server (AlreadyExists): namespaces \"kube-public\" already exists\nCluster \"local-up-cluster\" set.\nuse 'kubectl --kubeconfig=/var/run/kubernetes/admin-kube-aggregator.kubeconfig' to use the aggregated API server\nkubelet ( 16937 ) is running.\nLocal Kubernetes cluster is running. Press Ctrl-C to shut it down.\n\nLogs:\n  /tmp/kube-apiserver.log\n  /tmp/kube-controller-manager.log\n  /tmp/kube-proxy.log\n  /tmp/kube-scheduler.log\n  /tmp/kubelet.log\n\nTo start using your cluster, you can open up another terminal/tab and run:\n\n  export KUBECONFIG=/var/run/kubernetes/admin.kubeconfig\n  cluster/kubectl.sh\n\nAlternatively, you can write to the default kubeconfig:\n\n  export KUBERNETES_PROVIDER=local\n\n  cluster/kubectl.sh config set-cluster local --server=https://localhost:6443 --certificate-authority=/var/run/kubernetes/server-ca.crt\n  cluster/kubectl.sh config set-credentials myself --client-key=/var/run/kubernetes/client-admin.key --client-certificate=/var/run/kubernetes/client-admin.crt\n  cluster/kubectl.sh config set-context local --cluster=local --user=myself\n  cluster/kubectl.sh config use-context local\n  cluster/kubectl.sh\n```\n\n### \u30ce\u30fc\u30c9\u306e\u8d77\u52d5\u3092\u78ba\u8a8d\u3059\u308b\n\u69cb\u7bc9\u3057\u305fKubernetes\u74b0\u5883\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001cluster/kubectl.sh\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```bash\n# cluster/kubectl.sh get node\nNAME        STATUS    AGE       VERSION\n127.0.0.1   Ready     2s        v1.6.0-alpha.3.346+b201ac2f8f8328-dirty\n```\n\n### POD\u3092\u4f5c\u6210\u3059\u308b\n\n```bash\n# cluster/kubectl.sh create -f test.yaml\n```\n"}