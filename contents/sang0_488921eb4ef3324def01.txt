{"context": "\u30ed\u30fc\u30ab\u30eb\u3067\u904b\u7528\u3057\u3066\u3044\u308bnginx\u30b5\u30fc\u30d0\u30fc\u4e0a\u306emp4\u30d5\u30a1\u30a4\u30eb\u3092chrome\u7d4c\u7531\u3067\u95b2\u89a7\u3057\u305f\u3068\u304d\u306b\u3001\n\u30b7\u30fc\u30af\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001HTTP\u306eRange Requests\u3092lua\u3067\u5b9f\u88c5\u3057\u305f\u3002\n\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u904b\u7528\u3092\u8003\u3048\u3066\u3044\u308b\u305f\u3081\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56\u306a\u3069\u8003\u3048\u3089\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u6d41\u7528\u306e\u969b\u306f\u5341\u5206\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\u8a18\u4e8b\u5185\u306esample.com\u306f\u5404\u81ea\u306e\u74b0\u5883\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u74b0\u5883\n\nUbuntu server 16.04.1\nkernel: 4.4.0-57-generic\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ sudo apt-get install nginx nginx-extras\n$ dpkg -l | grep nginx\nii  nginx                              1.10.0-0ubuntu0.16.04.4                   all          small, powerful, scalable web/proxy server\nii  nginx-common                       1.10.0-0ubuntu0.16.04.4                   all          small, powerful, scalable web/proxy server - common files\nii  nginx-extras                       1.10.0-0ubuntu0.16.04.4                   amd64        nginx web/proxy server (extended version)\n\n\nnginx-lua-module\u306e\u52d5\u4f5c\u78ba\u8a8d\n\u307e\u305a\u306f\u3001hello\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u88c5\u3002\n\nnginx\u306esite\u8a2d\u5b9a\n$ sudo vim /etc/nginx/sites-available/dl.sample.com\nserver {\n  listen  443 ssl;\n  server_name dl.sample.com;\n  location / {\n    root  /var/www/html;\n  }\n\n  location /hello {\n    content_by_lua \"\n      ngx.say('Hello, from inline lua')\n    \";\n  }\n\n  location /hellofile {\n    content_by_lua_file /etc/nginx/lua/hello.lua;\n  }\n}\n\n$ sudo ln -s /etc/nginx/sites-available/dl.sample.com /etc/nginx/sites-enable/\n\nlua\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210(location /hellofile\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u3082\u306e)\n$ sudo mkdir /etc/nginx/lua\n$ sudo vim /etc/nginx/lua/hello.lua\n\nngx.say(\"hello by file\")\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n$ sudo service nginx restart\n$ curl https://dl.sample.com/hello\nHello, from inline lua\n$ curl https://dl.sample.com/hellofile\nhello by file\n\n\nRange Requests\u306e\u5b9f\u88c5\n\nnginx\u306esite\u8a2d\u5b9a\n$ sudo vim /etc/nginx/sites-available/dl.sample.com\nserver {\n  listen  443 ssl;\n  server_name dl.sample.com;\n  location / {\n    root  /var/www/html;\n  }\n\n  location ~ /v0/(.*\\.mp4) {\n    set $video_path $1;\n    content_by_lua_file /etc/nginx/lua/v0/anymp4.lua;\n  }\n\n}\n\n\u4efb\u610f\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b(.*.mp4)\u8a2d\u5b9a\u3002\n\nlua\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210(location /v0/(.*.mp4) \u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u3082\u306e)\n$ sudo mkdir /etc/nginx/lua/v0\n$ sudo vim /etc/nginx/lua/v0/anymp4.lua\n\nfunction io.file_size(filename)\n  local fh = assert(io.open(filename, \"rb\"))\n  local len = assert(fh:seek(\"end\"))\n  fh.close()\n  return len\nend\n\nfunction table.in_key(tbl, key)\n  for k, v in pairs(tbl) do\n    if k==key then return true end\n  end\nend\n\nlocal video_path = ngx.unescape_uri(ngx.var.video_path)\nlocal video_dir = \"/mnt/mp4/\"\nlocal filename = video_dir..video_path\n\nlocal h = ngx.req.get_headers()\n\nlocal instance_length = io.file_size(filename)\nif table.in_key(h, \"range\") then\n  -- Range requests\n  local reqRange = h[\"range\"]\n  local first_byte_pos = 0\n  local last_byte_pos = instance_length - 1\n\n  local reqFirst, reqLast = string.match(reqRange, \"(%d*)-(%d*)\")\n  first_byte_pos = reqFirst\n\n  if reqLast == \"\" then\n    -- nothing to do\n  else\n    last_byte_pos = tonumber(reqLast)\n  end\n\n  -- Status code\n  ngx.status = ngx.HTTP_PARTIAL_CONTENT\n\n  -- Response headers\n  contentLength = last_byte_pos - first_byte_pos + 1\n  ngx.header[\"Content-Length\"] = contentLength\n  ngx.header[\"Content-Range\"] = \"bytes \"..first_byte_pos..\"-\"..last_byte_pos..\"/\"..instance_length\n\n  -- output stream\n  local file = io.open(filename)\n  file:seek(\"set\", tonumber(reqFirst))\n  local f = file:read(contentLength)\n  ngx.print(f)\nelse\n  -- Normal requests\n  ngx.header[\"Content-Length\"] = instance_length\n\n  -- Status code\n  ngx.status = ngx.HTTP_OK\n\n  -- output stream\n  local file = io.open(filename)\n  local f = file:read(\"*all\")\n  ngx.print(f)\n  ngx.flush(true)\nend\n\nRFC7233\u306b\u5f93\u3044\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306bHTTP\u30d8\u30c3\u30c0\u5185\u306brange\u304c\u3042\u308c\u3070\u3001\n206(HTTP_PARTIAL_CONTENT)\u3068\u6307\u5b9a\u3055\u308c\u305f\u7bc4\u56f2\u306e\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n\u52d5\u4f5c\u78ba\u8a8d\n$ sudo service nginx restart\n$ ls /mnt/mp4/\n1.mp4\n\n\u4efb\u610f\u306emp4\u30d5\u30a1\u30a4\u30eb(\u3053\u306e\u4f8b\u3067\u306f1.mp4)\u3092anymp4.lua\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30eb\u30c0(\u3053\u306e\u4f8b\u3067\u306f/mnt/mp4/)\u306b\u683c\u7d0d\u3057\u3066\u304a\u304f\u3002\nchrome\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30a2\u30c9\u30ec\u30b9\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001mp4\u95b2\u89a7\u6642\u306b\u30b7\u30fc\u30af\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002\nhttps://dl.sample.com/v0/1.mp4\n\n\u53c2\u8003\nhttp://techhey.hatenablog.com/entry/2014/04/17/200831\nhttps://triple-underscore.github.io/RFC7233-ja.html\n\u30ed\u30fc\u30ab\u30eb\u3067\u904b\u7528\u3057\u3066\u3044\u308bnginx\u30b5\u30fc\u30d0\u30fc\u4e0a\u306emp4\u30d5\u30a1\u30a4\u30eb\u3092chrome\u7d4c\u7531\u3067\u95b2\u89a7\u3057\u305f\u3068\u304d\u306b\u3001\n\u30b7\u30fc\u30af\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001HTTP\u306eRange Requests\u3092lua\u3067\u5b9f\u88c5\u3057\u305f\u3002\n\n\u30ed\u30fc\u30ab\u30eb\u3067\u306e\u904b\u7528\u3092\u8003\u3048\u3066\u3044\u308b\u305f\u3081\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56\u306a\u3069\u8003\u3048\u3089\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u6d41\u7528\u306e\u969b\u306f\u5341\u5206\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\u8a18\u4e8b\u5185\u306esample.com\u306f\u5404\u81ea\u306e\u74b0\u5883\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u74b0\u5883\n* [Ubuntu server 16.04.1](https://www.ubuntu.com/download/server)\n* kernel: 4.4.0-57-generic\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n```\n$ sudo apt-get install nginx nginx-extras\n$ dpkg -l | grep nginx\nii  nginx                              1.10.0-0ubuntu0.16.04.4                   all          small, powerful, scalable web/proxy server\nii  nginx-common                       1.10.0-0ubuntu0.16.04.4                   all          small, powerful, scalable web/proxy server - common files\nii  nginx-extras                       1.10.0-0ubuntu0.16.04.4                   amd64        nginx web/proxy server (extended version)\n```\n\n# nginx-lua-module\u306e\u52d5\u4f5c\u78ba\u8a8d\n\u307e\u305a\u306f\u3001hello\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u88c5\u3002\n## nginx\u306esite\u8a2d\u5b9a\n`$ sudo vim /etc/nginx/sites-available/dl.sample.com`\n\n```\nserver {\n  listen  443 ssl;\n  server_name dl.sample.com;\n  location / {\n    root  /var/www/html;\n  }\n\n  location /hello {\n    content_by_lua \"\n      ngx.say('Hello, from inline lua')\n    \";\n  }\n\n  location /hellofile {\n    content_by_lua_file /etc/nginx/lua/hello.lua;\n  }\n}\n```\n\n`$ sudo ln -s /etc/nginx/sites-available/dl.sample.com /etc/nginx/sites-enable/`\n\n\n## lua\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210(location /hellofile\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u3082\u306e)\n```\n$ sudo mkdir /etc/nginx/lua\n$ sudo vim /etc/nginx/lua/hello.lua\n```\n\n```\nngx.say(\"hello by file\")\n```\n\n## \u52d5\u4f5c\u78ba\u8a8d\n\n```\n$ sudo service nginx restart\n$ curl https://dl.sample.com/hello\nHello, from inline lua\n$ curl https://dl.sample.com/hellofile\nhello by file\n```\n\n# Range Requests\u306e\u5b9f\u88c5\n## nginx\u306esite\u8a2d\u5b9a\n`$ sudo vim /etc/nginx/sites-available/dl.sample.com`\n\n```\nserver {\n  listen  443 ssl;\n  server_name dl.sample.com;\n  location / {\n    root  /var/www/html;\n  }\n\n  location ~ /v0/(.*\\.mp4) {\n    set $video_path $1;\n    content_by_lua_file /etc/nginx/lua/v0/anymp4.lua;\n  }\n\n}\n```\n\u4efb\u610f\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b(.*\\.mp4)\u8a2d\u5b9a\u3002\n\n## lua\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210(location /v0/(.*\\.mp4) \u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u3082\u306e)\n```\n$ sudo mkdir /etc/nginx/lua/v0\n$ sudo vim /etc/nginx/lua/v0/anymp4.lua\n```\n\n```\nfunction io.file_size(filename)\n  local fh = assert(io.open(filename, \"rb\"))\n  local len = assert(fh:seek(\"end\"))\n  fh.close()\n  return len\nend\n\nfunction table.in_key(tbl, key)\n  for k, v in pairs(tbl) do\n    if k==key then return true end\n  end\nend\n\nlocal video_path = ngx.unescape_uri(ngx.var.video_path)\nlocal video_dir = \"/mnt/mp4/\"\nlocal filename = video_dir..video_path\n\nlocal h = ngx.req.get_headers()\n\nlocal instance_length = io.file_size(filename)\nif table.in_key(h, \"range\") then\n  -- Range requests\n  local reqRange = h[\"range\"]\n  local first_byte_pos = 0\n  local last_byte_pos = instance_length - 1\n\n  local reqFirst, reqLast = string.match(reqRange, \"(%d*)-(%d*)\")\n  first_byte_pos = reqFirst\n\n  if reqLast == \"\" then\n    -- nothing to do\n  else\n    last_byte_pos = tonumber(reqLast)\n  end\n\n  -- Status code\n  ngx.status = ngx.HTTP_PARTIAL_CONTENT\n\n  -- Response headers\n  contentLength = last_byte_pos - first_byte_pos + 1\n  ngx.header[\"Content-Length\"] = contentLength\n  ngx.header[\"Content-Range\"] = \"bytes \"..first_byte_pos..\"-\"..last_byte_pos..\"/\"..instance_length\n\n  -- output stream\n  local file = io.open(filename)\n  file:seek(\"set\", tonumber(reqFirst))\n  local f = file:read(contentLength)\n  ngx.print(f)\nelse\n  -- Normal requests\n  ngx.header[\"Content-Length\"] = instance_length\n\n  -- Status code\n  ngx.status = ngx.HTTP_OK\n\n  -- output stream\n  local file = io.open(filename)\n  local f = file:read(\"*all\")\n  ngx.print(f)\n  ngx.flush(true)\nend\n```\nRFC7233\u306b\u5f93\u3044\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306bHTTP\u30d8\u30c3\u30c0\u5185\u306brange\u304c\u3042\u308c\u3070\u3001\n206(HTTP_PARTIAL_CONTENT)\u3068\u6307\u5b9a\u3055\u308c\u305f\u7bc4\u56f2\u306e\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u3002\n\n## \u52d5\u4f5c\u78ba\u8a8d\n\n```\n$ sudo service nginx restart\n$ ls /mnt/mp4/\n1.mp4\n```\n\u4efb\u610f\u306emp4\u30d5\u30a1\u30a4\u30eb(\u3053\u306e\u4f8b\u3067\u306f1.mp4)\u3092anymp4.lua\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a9\u30eb\u30c0(\u3053\u306e\u4f8b\u3067\u306f/mnt/mp4/)\u306b\u683c\u7d0d\u3057\u3066\u304a\u304f\u3002\n\nchrome\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30a2\u30c9\u30ec\u30b9\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001mp4\u95b2\u89a7\u6642\u306b\u30b7\u30fc\u30af\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002\n`https://dl.sample.com/v0/1.mp4`\n\n# \u53c2\u8003\nhttp://techhey.hatenablog.com/entry/2014/04/17/200831\nhttps://triple-underscore.github.io/RFC7233-ja.html\n", "tags": ["nginx", "nginx-lua-module", "Lua", "ubuntu16.04", "RangeReqests"]}