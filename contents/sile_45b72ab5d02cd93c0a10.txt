{"context": " More than 1 year has passed since last update.Erlang\u3067\u306f\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u3092\u901a\u3057\u3066\u884c\u3046\u306e\u304c\u57fa\u672c\u3060\u304c\u3001\u305d\u308c\u3060\u3068\u3084\u308a\u3068\u308a\u3092\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u540c\u58eb\u304c\u4e00\u5bfe\u591a\u306e\u95a2\u4fc2(\u4fbf\u5b9c\u4e0a\u3001\u524d\u8005\u3092\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u3001\u5f8c\u8005\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30d7\u30ed\u30bb\u30b9(\u7fa4)\u3068\u547c\u3076\u3053\u3068\u306b\u3059\u308b)\u306b\u3042\u308b\u5834\u5408\u306b\u3001\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u304c\u8a70\u307e\u3063\u3066\u3057\u307e\u3044\u3001\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306e\u963b\u5bb3\u8981\u56e0\u3068\u306a\u308b\u3053\u3068\u304c\u3042\u308b\u3002\n\u305d\u3046\u3044\u3063\u305f\u6642\u306b\u306f\u4ee5\u524d\u306e\u8a18\u4e8b\u3067\u66f8\u3044\u305f\u3088\u3046\u306b\u3001protected\u306a\u3044\u3057public\u306a\u30a2\u30af\u30bb\u30b9\u6a29\u9650\u306eETS\u3092\u4f7f\u3063\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306b\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u3068\u306e\u9593\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u304c\u884c\u308f\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3001\u306e\u304c\u5b9a\u756a\u306e\u5bfe\u7b56\u3060\u3068\u601d\u3063\u3066\u3044\u308b\u3002\n\u305d\u3057\u3066\u81ea\u5206\u306e\u3053\u308c\u307e\u3067\u306e\u7528\u9014\u3067\u306f\u3001ETS\u3092\u4f7f\u3046\u5834\u5408\u3001\u8aad\u307f\u8fbc\u307f\u64cd\u4f5c\u304c(\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\u306b\u5bfe\u3057\u3066)\u5727\u5012\u7684\u306b\u591a\u3044\u3053\u3068\u304c\u307b\u3068\u3093\u3069\u3060\u3063\u305f\u306e\u3067\u3001\u7279\u306b\u6df1\u304f\u8003\u3048\u305a\u306bets:new(Id, [protected, {read_concurrency, true}])\u3068\u3044\u3063\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u591a\u304b\u3063\u305f\u3002\n\u305f\u3060\u6700\u8fd1\u3001\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\u304c\u8aad\u307f\u8fbc\u307f\u64cd\u4f5c\u3068\u540c\u7a0b\u5ea6\u306b\u767a\u751f\u3059\u308b\u3088\u3046\u306a\u30b1\u30fc\u30b9\u306b\u906d\u9047\u3057{write_concurrency, true}\u3092\u6307\u5b9a\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u691c\u8a0e\u3059\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3060\u304c\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3060\u3060\u3051\u3067\u306f\u3001\u4eca\u4e00\u3064\u305d\u306e\u52b9\u679c\u304c(\u7279\u306bread_concurrency\u3068\u4f75\u7528\u3057\u305f\u5834\u5408)\u4e0d\u660e\u77ad\u3060\u3063\u305f\u306e\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8ffd\u3044\u3064\u3064\u8efd\u304f\u8abf\u3079\u3066\u307f\u305f\u3002\n\u203b \u306a\u304a\u3001\u305d\u3053\u307e\u3067\u8a73\u7d30\u306b\u8abf\u3079\u305f\u8a33\u3067\u3082\u306a\u3044\u306e\u3067\u9593\u9055\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u66f8\u3044\u3066\u3044\u308b\u53ef\u80fd\u6027\u3082\u3042\u308b\u305f\u3081\u3001\u53c2\u8003\u7a0b\u5ea6\u3068\u3057\u3066\u8aad\u3093\u3067\u8cb0\u3048\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\u3002\n\u203b \u305d\u3057\u3066\u7121\u8a08\u753b\u306b\u66f8\u3044\u3066\u3044\u305f\u3089\u7570\u69d8\u306b\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f...\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\u6700\u521d\u306bets\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089read_concurrency\u304a\u3088\u3073write_concurrency\u306b\u3064\u3044\u3066\u306e\u8a18\u8ff0\u3092\u5f15\u7528\u3057\u3066\u304a\u304f\u3002\n\nread_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\n\nPerformance tuning. Default is false. When set to true, the table is optimized for concurrent read operations. When this option is enabled on a runtime system with SMP support, read operations become much cheaper; especially on systems with multiple physical processors. However, switching between read and write operations becomes more expensive. You typically want to enable this option when concurrent read operations are much more frequent than write operations, or when concurrent reads and writes comes in large read and write bursts (i.e., lots of reads not interrupted by writes, and lots of writes not interrupted by reads). You typically do not want to enable this option when the common access pattern is a few read operations interleaved with a few write operations repeatedly. In this case you will get a performance degradation by enabling this option. The read_concurrency option can be combined with the write_concurrency option. You typically want to combine these when large concurrent read bursts and large concurrent write bursts are common.\n\n\u7d50\u69cb\u9577\u3044\u306e\u3067\u91cd\u8981\u305d\u3046\u306a\u3068\u3053\u308d\u3060\u3051\u3092\u610f\u8a33:\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306ffalse\n\n\ntrue\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306f\u3001\u4f5c\u6210\u3055\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u306f\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u64cd\u4f5c\u306b\u6700\u9069\u5316\u3055\u308c\u308b\n\u300c\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u64cd\u4f5c\u304c\u3001\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\u3088\u308a\u3082\u983b\u7e41\u306b\u884c\u308f\u308c\u308b\u300d\u30b1\u30fc\u30b9\u3067\u6709\u52b9\n\u300c\u5c11\u6570\u306e\u8aad\u307f\u8fbc\u307f\u64cd\u4f5c\u3068\u5c11\u6570\u306e\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\u304c\u7e70\u308a\u8fd4\u3057\u767a\u751f\u3059\u308b\u300d\u30b1\u30fc\u30b9\u3067\u306f\u9006\u306b\u6027\u6027\u80fd\u304c\u52a3\u5316\u3059\u308b\n\n\n\u8aad\u307f\u8fbc\u307f\u64cd\u4f5c\u3068\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\u306e\u5207\u308a\u66ff\u3048\u306e\u30b3\u30b9\u30c8\u304cfalse\u306e\u5834\u5408\u3088\u308a\u9ad8\u304f\u306a\u308b\u305f\u3081\n\n\n\nwrite_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u306e\u4f75\u7528\u3082\u53ef\n\n\n\n\u5927\u91cf\u306e\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u64cd\u4f5c\u306e\u30d0\u30fc\u30b9\u30c8\u3068\u5927\u91cf\u306e\u4e26\u5217\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\u306e\u30d0\u30fc\u30b9\u30c8\u306e\u4e21\u65b9\u304c\u767a\u751f\u3059\u308b\u5834\u5408\u306b\u6709\u7528\n\n\n\n\nwrite_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\n\nPerformance tuning. Default is false, in which case an operation that mutates (writes to) the table will obtain exclusive access, blocking any concurrent access of the same table until finished. If set to true, the table is optimized towards concurrent write access. Different objects of the same table can be mutated (and read) by concurrent processes. This is achieved to some degree at the expense of memory consumption and the performance of sequential access and concurrent reading. The write_concurrency option can be combined with the read_concurrency option. You typically want to combine these when large concurrent read bursts and large concurrent write bursts are common (see the documentation of the read_concurrency option for more information). Note that this option does not change any guarantees about atomicy and isolation. Functions that makes such promises over several objects (like insert/2) will gain less (or nothing) from this option.\nIn current implementation, table type ordered_set is not affected by this option. Also, the memory consumption inflicted by both write_concurrency and read_concurrency is a constant overhead per table. This overhead can be especially large when both options are combined\n\n\u3053\u3061\u3089\u3082\u91cd\u8981\u305d\u3046\u306a\u3068\u3053\u308d\u3060\u3051\u3092\u610f\u8a33:\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306ffalse\n\n\u66f8\u304d\u8fbc\u307f(\u66f4\u65b0)\u64cd\u4f5c\u6642\u306b\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u304c\u5bfe\u8c61\u306e\u6392\u4ed6\u30ed\u30c3\u30af\u304c\u53d6\u5f97\u3055\u308c\u308b\n\u305d\u306e\u9593\u3001\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u3088\u308b\u4e26\u5217\u30a2\u30af\u30bb\u30b9(read or write)\u306f\u30d6\u30ed\u30c3\u30af\u3059\u308b\n\n\n\ntrue\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306f\u3001\u4f5c\u6210\u3055\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u306f\u4e26\u5217\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\u306b\u6700\u9069\u5316\u3055\u308c\u308b\n\n\n\u540c\u3058\u30c6\u30fc\u30d6\u30eb\u5185\u306e\u7570\u306a\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e26\u5217\u64cd\u4f5c(\u8aad\u307f\u66f8\u304d)\u304c\u53ef\u80fd\u3068\u306a\u308b\n\u4ee3\u511f: \u30e1\u30e2\u30ea\u6d88\u8cbb\u91cf\u306e\u5897\u52a0\u3001\u9010\u6b21\u30a2\u30af\u30bb\u30b9\u304a\u3088\u3073\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306e\u6027\u80fd\u52a3\u5316\n\n\n\nread_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u4f75\u7528\u53ef\n\nwrite_concurrency=true\u304c\u7121\u610f\u5473\u306a\u30b1\u30fc\u30b9:\n\n\n\ninsert/2\u7b49\u3067\u8907\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u540c\u6642\u306b\u66f8\u304d\u8fbc\u3082\u3046\u3068\u3057\u305f\u5834\u5408\u306f\u52b9\u679c\u304c\u8584\u3044(or \u7121\u3044)\n\nordered_set\u306e\u5834\u5408\u306f\u52b9\u679c\u304c\u7121\u3044 (\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u7cfb\u306e\u307f\u304c\u30b5\u30dd\u30fc\u30c8)\n\n\n\u30e1\u30e2\u30ea\u6d88\u8cbb\u91cf(\u306e\u5897\u52a0)\u306b\u3064\u3044\u3066:\n\n\n\nread_concurrency\u304a\u3088\u3073write_concurrency\u306e\u6307\u5b9a\u306b\u3088\u308b\u5897\u52a0\u5206\u306f\u30c6\u30fc\u30d6\u30eb\u6bce\u306b\u4e00\u5b9a\n\u4e21\u65b9\u3092\u540c\u6642\u306b\u3057\u3066\u3044\u305f\u3089\u3001\u304b\u306a\u308a\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u304c\u5927\u304d\u304f\u306a\u308a\u5f97\u308b\n\n\n\n\n\u3053\u308c\u3089\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\u3001\u305d\u308c\u305e\u308c\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u52b9\u679c\u304c\u4f55\u3068\u306a\u304f\u306f\u308f\u304b\u308b\u3051\u3069\u3001\u3084\u306f\u308a\u3044\u307e\u3044\u3061\u91c8\u7136\u3068\u3057\u306a\u3044\u3002\n\n\u5185\u90e8\u5b9f\u88c5\n\u7d9a\u3044\u3066ETS\u306e\u5185\u90e8\u5b9f\u88c5\u3092\u8efd\u304f(?)\u8ffd\u3063\u3066\u307f\u308b\u3002\n(\u304b\u306a\u308a\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3053\u3068\u3082\u3042\u308a\u3001\u5185\u90e8\u5b9f\u88c5\u306b\u8208\u5473\u306e\u306a\u3044\u4eba\u306f\u3001\u3053\u306e\u7bc0\u3092\u4e38\u3054\u3068\u98db\u3070\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u554f\u984c\u306f\u306a\u3044\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fOTP-18.1\u306e\u3082\u306e\u3092\u53c2\u7167\u3059\u308b\u3002\n\u307e\u305fErlang/OTP\u306fSMP\u3092\u6709\u52b9\u306b\u3057\u3066\u30d3\u30eb\u30c9\u3055\u308c\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3059\u308b\u3002\n(\u975eSMP\u306e\u5834\u5408\u306f\u3001\u305d\u3082\u305d\u3082\u4e26\u5217\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u306a\u304f\u306a\u308b\u306e\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e2d\u3067\u3082\u4e26\u5217\u7cfb\u306e\u51e6\u7406\u3084\u95a2\u6570\u306e\u5927\u534a\u304c#ifdef\u7b49\u306b\u3088\u3063\u3066\u7121\u52b9\u5316\u3055\u308c\u3066\u3044\u308b)\n\n\u95a2\u9023\u30d5\u30a1\u30a4\u30eb\u7fa4\n\u4eca\u56de\u3001\u4e3b\u306b\u53c2\u7167\u3057\u305f\u306e\u306f\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u7fa4:\n\nlib/stdlib/src/ets.erl\nerts/emulator/beam/erl_db.c\nerts/emulator/beam/erl_db_hash.c\nerts/lib_src/common/ethr_mutex.c\n\nets.erl\u306f\u3001(\u4eca\u56de\u306e\u8a71\u306b\u95a2\u4fc2\u3059\u308b\u95a2\u6570\u7fa4\u306b\u3064\u3044\u3066\u306f)\u5358\u306bErlang\u7528\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3001\u95a2\u6570\u306e\u5b9f\u88c5\u306e\u307b\u3068\u3093\u3069\u306ferlang:nif_error(undef)\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u5b9f\u969b\u306e\u51e6\u7406\u306fC\u3067\u66f8\u304b\u308c\u305fBIF(built-in function)\u306b\u59d4\u8b72\u3055\u308c\u3066\u3044\u308b\u3002\nerl_db.c\u306f\u3001ETS\u306eBIF\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u63d0\u4f9b\u3001\u30c6\u30fc\u30d6\u30eb\u306b\u95a2\u3059\u308b\u5171\u901a\u51e6\u7406\u306e\u5b9f\u88c5\u3001\u5168\u4f53\u7684\u306a\u8abf\u6574\u51e6\u7406\u3001\u7b49\u3092\u62c5\u5f53\u3057\u3066\u3044\u308b\u3002\nerl_db_hash.c\u306f\u3001erl_db_util.h\u3067\u5b9a\u7fa9\u3055\u308c\u305fDbTableMethod\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9(\u69cb\u9020\u4f53)\u3092\u5099\u3048\u3066\u304a\u308a\u3001\u30cf\u30c3\u30b7\u30e5\u30fc\u30c6\u30fc\u30d6\u30eb\u306b\u57fa\u3065\u3044\u305f\u30c6\u30fc\u30d6\u30eb\u306e\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\uff08\u4ed6\u306b\u30c4\u30ea\u30fc\u3092\u7528\u3044\u305f\u5b9f\u88c5\u3092\u63d0\u4f9b\u3059\u308berl_db_tree.c\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3082\u3042\u308b\u304c\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a18\u8f09\u306e\u901a\u308a\u3001\u3053\u3061\u3089\u306fwrite_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u306f\u975e\u5bfe\u5fdc\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u5272\u611b\u3059\u308b)\u3002\nethr_mutex.c\u306f\u3001\u76f8\u4e92\u6392\u4ed6\u7528\u306e\u5404\u7a2e\u95a2\u6570\u3092\u63d0\u4f9b\u3057\u3066\u304a\u308a\u3001erl_db\u7cfb\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u3002\n\u4ee5\u964d\u3067\u306ferl_db.c\u3001erl_db_hash.c\u3001ethr_mutex.c\u3092\u4e2d\u5fc3\u3068\u3057\u3066\u3001\u30dc\u30c8\u30e0\u30a2\u30c3\u30d7\u306b(read|write)_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f7f\u308f\u308c\u65b9\u3092\u898b\u3066\u3044\u304f\u3053\u3068\u306b\u3059\u308b\u3002\n\nethr_mutex.c\nETS\u3068\u306f\u72ec\u7acb\u3057\u305f\u5404\u7a2e\u76f8\u4e92\u6392\u4ed6\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b9f\u88c5\u95a2\u6570\u7fa4\u3092\u63d0\u4f9b\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3002\n(\u4eca\u56de\u306e\u8a71\u306b\u95a2\u4fc2\u3059\u308b\u7bc4\u56f2\u3067\u306f)erl_db.*c\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306f\u3001\u30ea\u30fc\u30c0\u30fc/\u30e9\u30a4\u30bf\u30fc\u30fb\u30ed\u30c3\u30af(\u4ee5\u964d\u306fRW\u30ed\u30c3\u30af\u3068\u8868\u8a18)\u7cfb\u306e\u95a2\u6570\u304c\u4f7f\u7528\u3055\u308c\u308b\u3002\n\u203b \u88dc\u8db3: RW\u30ed\u30c3\u30af\u3067\u306f\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u304c\u8a31\u5bb9\u3055\u308c\u308b (\u66f8\u304d\u8fbc\u307f\u306f\u76f4\u5217\u306e\u307f)\n\u3053\u306e\u30ec\u30a4\u30e4\u30fc\u3067\u306fread_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u306e\u307f\u304c\u5f71\u97ff\u3059\u308b\u3002\n\nread_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f7f\u308f\u308c\u65b9\n\n\u521d\u671f\u5316\u6642\n\nethr_rwmutex_opt\u69cb\u9020\u4f53\nread_concurrency\u3068\u3044\u3046\u540d\u524d\u304c\u76f4\u63a5ethr_mutex.c\u5185\u3067\u51fa\u73fe\u3059\u308b\u3053\u3068\u306f\u306a\u304f\u3001\u4e0a\u4f4d\u5c64(erl_db.c\u5185)\u3067\u3001\u4ee5\u4e0b\u306eethr_rwmutex_opt\u69cb\u9020\u4f53\u306etype\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u3066\u304b\u3089\u6e21\u3055\u308c\u3066\u3044\u308b\u3002\n\nethr_mutex.h\ntypedef enum {\n    ETHR_RWMUTEX_TYPE_NORMAL,  // read_concurrency=false\u3001\u306b\u5bfe\u5fdc\n    ETHR_RWMUTEX_TYPE_FREQUENT_READ,  // read_concurrency=true\u3001\u306b\u5bfe\u5fdc\n    ETHR_RWMUTEX_TYPE_EXTREMELY_FREQUENT_READ // ethr_mutex.c\u5185\u90e8\u5229\u7528\u7528\n} ethr_rwmutex_type;\n\ntypedef struct {\n    ethr_rwmutex_type type; \n    ethr_rwmutex_lived lived;\n    int main_spincount;\n    int aux_spincount;\n} ethr_rwmutex_opt;\n\n\n\nethr_rwmutex\u69cb\u9020\u4f53\nethr_rwmutex_opt.type\u306e\u5024\u306f\u3001\u6700\u7d42\u7684\u306b\u306fethr_rwmutex.tdata\u306e\u5024\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\u3002\n\nethr_mutex.h\n#ifdef ETHR_USE_OWN_RWMTX_IMPL__\n\n// RW\u30ed\u30c3\u30af\u5b9f\u88c5\u7528\u306e\u69cb\u9020\u4f53\ntypedef struct ethr_rwmutex_ ethr_rwmutex;\nstruct ethr_rwmutex_ {\n    struct ethr_mutex_base_ mtxb;\n    ethr_rwmutex_type type;\n    ethr_ts_event *rq_end;\n\n    // ethr_rwmutex_opt.type\u306e\u5024\u306b\u5fdc\u3058\u3066\u3001\u4ee5\u4e0b\u306e\u3069\u3061\u3089\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u4f7f\u308f\u308c\u308b\u304b\u304c\u6c7a\u5b9a\u3059\u308b:\n    // - ETHR_RWMUTEX_TYPE_NORMAL\u306e\u5834\u5408:\n    //    - `rs`\u304c\u4f7f\u308f\u308c\u308b\n    //    - \u30ed\u30c3\u30af\u7372\u5f97\u5f85\u6a5f\u4e2d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\n    //      - \u3064\u307e\u308a`ethr_rwmtx_readers_array__.waiting_readers`\u306b\u5bfe\u5fdc\u3059\u308b\n    // - \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408(\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u6700\u9069\u5316\u3055\u308c\u308b):\n    //    - `ra`\u304c\u4f7f\u308f\u308c\u308b\n    //    - \u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u7fa4\u306f`ethr_rwmtx_readers_array__`\u3068\u3044\u3046\u914d\u5217\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u308b(\u8a73\u7d30\u306f\u5f8c\u8ff0)\n    union {\n        ethr_rwmtx_readers_array__ *ra;\n        int rs;\n    } tdata;\n};\n\n// \u30ea\u30fc\u30c0\u30fc\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30c7\u30fc\u30bf\u69cb\u9020\ntypedef union {\n    struct {\n        ethr_atomic32_t readers;\n        int waiting_readers;\n        int byte_offset;\n        ethr_rwmutex_lived lived;\n    } data;\n    char align__[ETHR_CACHE_LINE_SIZE];\n} ethr_rwmtx_readers_array__;\n\n#else /* pthread_rwlock */\n/***\n * NOTE:\n * \u30d3\u30eb\u30c9\u6642\u306b\u4ee5\u4e0b\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001pthread\u306e\u5b9f\u88c5\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \n * (\u305d\u306e\u5834\u5408\u3001\u304a\u305d\u3089\u304f`read_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u7121\u52b9\u3068\u306a\u308b(\u7121\u8996\u3055\u308c\u308b))\n * $ ./configure force_pthread_rwlocks=yes\n ***/\n\n\n\nethr_rwmutex_init_opt\u95a2\u6570\nethr_rwmutex.tdata\u306e\u521d\u671f\u5316\u306fethr_rwmutex_init_opt\u95a2\u6570\u306e\u4e2d\u3067\u884c\u308f\u308c\u308b\u3002\n\u7d30\u304b\u3044\u8abf\u6574\u51e6\u7406\u306f\u3044\u308d\u3044\u308d\u3042\u308b\u304c\u3001\u57fa\u672c\u7684\u306b\u306ftype\u306e\u5024\u306b\u5fdc\u3058\u3066\u300c\u5358\u4e00\u306e\u30ab\u30a6\u30f3\u30bf\u3067\u30ea\u30fc\u30c0\u7fa4\u3092\u7ba1\u7406\u3059\u308b\u300d\u3042\u308b\u3044\u306f\u300c\u5229\u7528\u53ef\u80fd\u306a\u30b9\u30ec\u30c3\u30c9\u6570\u306b\u5fdc\u3058\u305f\u914d\u5217(tdata.ra)\u3067\u30ea\u30fc\u30c0\u30fc\u7fa4\u3092\u7ba1\u7406\u3059\u308b\u300d\u306e\u3069\u3061\u3089\u306b\u306a\u308b\u304b\u304c\u6c7a\u5b9a\u3055\u308c\u308b\u3002\n\nethr_mutex.c\nint\nethr_rwmutex_init_opt(ethr_rwmutex *rwmtx, ethr_rwmutex_opt *opt)\n{\n    int res;\n    ethr_rwmtx_readers_array__ *ra = NULL;\n    rwmtx->rq_end = NULL;\n    rwmtx->type = opt ? opt->type : ETHR_RWMUTEX_TYPE_NORMAL;\n\n    /***\n      * NOTE: `type`\u306e\u5024\u306b\u5fdc\u3058\u3066\u3001\u30ea\u30fc\u30c0\u30fc\u7fa4\u7ba1\u7406\u7528\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u521d\u671f\u5316\u65b9\u6cd5\u304c\u5206\u5c90\n      ***/\n    switch (rwmtx->type) {\n    case ETHR_RWMUTEX_TYPE_FREQUENT_READ:\n        if (main_threads_array_size <= reader_groups_array_size) {\n            /* No point using reader groups... */\n\n          rwmtx->type = ETHR_RWMUTEX_TYPE_EXTREMELY_FREQUENT_READ;\n        }\n        /* Fall through */\n    case ETHR_RWMUTEX_TYPE_EXTREMELY_FREQUENT_READ: {\n        int length;\n\n        length = (rwmtx->type == ETHR_RWMUTEX_TYPE_EXTREMELY_FREQUENT_READ\n                  ? main_threads_array_size\n                  : reader_groups_array_size);\n\n        if (length == 1) {\n            /* No point using a frequent reader type... */\n            rwmtx->type = ETHR_RWMUTEX_TYPE_NORMAL;\n        }\n        else {\n            /***\n             * NOTE: \u4e26\u5217\u8aad\u307f\u8fbc\u307f\u3092\u6700\u9069\u5316\u3059\u308b\u5834\u5408(read_concurrency=true)\u306f\u3001\u3053\u3053\u306b\u6765\u308b\n             ***/\n            int ix;\n\n            // `ethr_rwmtx_readers_array__`\u3092`length`\u5206\u3060\u3051\u78ba\u4fdd\u3002\n            // `length`\u306e\u5024\u306f\u3001`main_threads_array_size`\u304b`reader_groups_array_size`\u306e\u3069\u3061\u3089\u304b\u3067\u3001\n            // \u305d\u308c\u3089\u306e\u5024\u306f`erl_init.c:early_init`\u95a2\u6570\u5185\u3067\u5b9a\u307e\u308b\u3002\n            ra = alloc_readers_array(length,\n                                     (opt\n                                      ? opt->lived\n                                      : ETHR_RWMUTEX_UNKNOWN_LIVED));\n\n            rwmtx->tdata.ra = ra;\n\n            for (ix = 0; ix < length; ix++) {\n                // \u6700\u521d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306f0\n                ethr_atomic32_init(&rwmtx->tdata.ra[ix].data.readers, 0);\n                rwmtx->tdata.ra[ix].data.waiting_readers = 0;\n            }\n            break;\n        }\n    }\n    case ETHR_RWMUTEX_TYPE_NORMAL:\n        /***\n          * NOTE: \u4e26\u5217\u8aad\u307f\u8fbc\u307f\u3092\u6700\u9069\u5316\u3057\u306a\u3044\u5834\u5408(read_concurrency=false)\u306f\u3001\u3053\u3053\u306b\u6765\u308b\n          ***/\n        rwmtx->tdata.rs = 0; // \u6700\u521d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306f0\n        break;\n    }\n    // \u5185\u90e8\u3067\u4f7f\u7528\u3059\u308b\u30ed\u30c3\u30af\u3092\u521d\u671f\u5316\n    res = mtxb_init(&rwmtx->mtxb,\n                    default_rwmtx_main_spincount,\n                    opt ? opt->main_spincount : -1,\n                    default_rwmtx_aux_spincount,\n                    opt ? opt->aux_spincount : -1);\n\n    return res;\n}    \n\n\n\n\u30ed\u30c3\u30af\u64cd\u4f5c\u6642\nerl_db.c\u7b49\u304b\u3089(\u4e3b\u306b)\u5229\u7528\u3055\u308c\u308bRW\u30ed\u30c3\u30af\u7cfb\u306e\u95a2\u6570\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u56db\u3064\u304c\u3042\u308b:\n\n\u30e9\u30a4\u30bf\u30fc(\u66f8\u304d\u8fbc\u307f)\u7528\u30ed\u30c3\u30af\u64cd\u4f5c:\n\n\n\u30ed\u30c3\u30af\u7372\u5f97: ethr_rwmutex_rwlock \n\u30ed\u30c3\u30af\u89e3\u653e: ethr_rwmutex_rwunlock\n\n\n\n\u30ea\u30fc\u30c0\u30fc(\u8aad\u307f\u8fbc\u307f)\u7528\u30ed\u30c3\u30af\u64cd\u4f5c:\n\n\n\u30ed\u30c3\u30af\u7372\u5f97: ethr_rwmutex_rlock\n\n\u30ed\u30c3\u30af\u89e3\u653e: ethr_rwmutex_runlock\n\n\n\n\n\u5168\u3066\u53d6\u308a\u4e0a\u3052\u308b\u3068\u5206\u91cf\u304c\u591a\u304f\u306a\u308a\u3059\u304e\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u4eca\u56de\u306f\u3088\u308a\u7279\u5fb4\u7684\u306a\u30ea\u30fc\u30c0\u30fc\u7528\u306e\u95a2\u6570\u306e\u307f\u3092\u898b\u3066\u3044\u304f\u3053\u3068\u306b\u3059\u308b\u3002\n\n\u30b9\u30c6\u30fc\u30c8\u3084\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u30ea\u30fc\u30c0\u30fc\u6570\u306e\u7ba1\u7406\u65b9\u6cd5\n\u5404\u95a2\u6570\u306e\u5b9f\u88c5\u306b\u5165\u308b\u524d\u306b\u3001\u307e\u305a\u306f\u30ed\u30c3\u30af\u306e\u30b9\u30c6\u30fc\u30c8\u3084\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306e\u7ba1\u7406\u65b9\u6cd5\u3092\u898b\u3066\u307f\u308b(\u7d50\u69cb\u7279\u6b8a\u306a\u306e\u3067)\u3002\n\u57fa\u672c\u7684\u306b\u3053\u308c\u3089\u306e\u60c5\u5831\u306fethr_rwmutex.mtxb.flgs\u3068\u3044\u304632bit\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u306e\u3060\u304c\u3001\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u6271\u3044\u65b9\u304c\u5909\u308f\u3063\u3066\u304f\u308b\u3002 \n\u307e\u305aread_concurrency=false\u306e\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u89e3\u91c8\u3055\u308c\u308b:\n\n\u4e0a\u4f4d3bit\u306f\u3001\u30ed\u30c3\u30af\u306e\u30b9\u30c6\u30fc\u30c8\u7ba1\u7406\u7528\u306e\u30d5\u30e9\u30b0\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u308b:\n\n\n31bit\u76ee: \u30ed\u30c3\u30af\u7372\u5f97\u30e9\u30a4\u30bf\u30fc\u306e\u5b58\u5728\u3092\u793a\u3059\u30d5\u30e9\u30b0 (\u30de\u30af\u30ed\u540d\u306fETHR_RWMTX_W_FLG__)\n30bit\u76ee: \u30ed\u30c3\u30af\u5f85\u6a5f\u30e9\u30a4\u30bf\u30fc\u306e\u5b58\u5728\u3092\u793a\u3059\u30d5\u30e9\u30b0 (\u30de\u30af\u30ed\u540d\u306fETHR_RWMTX_W_WAIT_FLG__)\n29bit\u76ee: \u30ed\u30c3\u30af\u5f85\u6a5f\u30ea\u30fc\u30c0\u30fc\u306e\u5b58\u5728\u3092\u793a\u3059\u30d5\u30e9\u30b0 (\u30de\u30af\u30ed\u540d\u306fETHR_RWMTX_R_WAIT_FLG__)\n\n\n\u305d\u308c\u4ee5\u4e0b\u306ebit\u7fa4\u306f\u3001\u30ed\u30c3\u30af\u7372\u5f97\u30ea\u30fc\u30c0\u30fc\u6570\u3092\u4fdd\u6301\u3059\u308b\u305f\u3081\u306e\u30ab\u30a6\u30f3\u30bf\u7528\u306b\u4f7f\u308f\u308c\u308b\n\n\u6b21\u306bread_concurrency=true\u306e\u5834\u5408:\n\n\u4e0a\u4f4d3bit\u306b\u95a2\u3057\u3066\u306fread_concurrency=false\u306e\u5834\u5408\u3068\u540c\u69d8\n\u52a0\u3048\u3066\u3001\u305d\u306e\u6b21\u306e2bit\u304c\u3001\u4ee5\u4e0b\u306e\u30d5\u30e9\u30b0\u7528\u306b\u4f7f\u7528\u3055\u308c\u308b:\n\n\n28bit\u76ee: \u30ed\u30c3\u30af\u7372\u5f97\u30ea\u30fc\u30c0\u30fc\u306e\u5b58\u5728(\u306e\u53ef\u80fd\u6027)\u3092\u793a\u3059\u30d5\u30e9\u30b0 (\u30de\u30af\u30ed\u540d\u306fETHR_RWMTX_R_FLG__)\n27bit\u76ee: \u30a2\u30f3\u30ed\u30c3\u30af\u51e6\u7406\u304c\u30a2\u30dc\u30fc\u30c8\u3057\u305f\u3053\u3068\u3092\u793a\u3059\u30d5\u30e9\u30b0 (\u30de\u30af\u30ed\u540d\u306fETHR_RWMTX_R_ABRT_UNLOCK_FLG__)\n\n\n\u305d\u308c\u4ee5\u4e0b\u306ebit\u7fa4\u306f\u3001\u4fdd\u7559\u4e2d\u306e\u30a2\u30f3\u30ed\u30c3\u30af\u51e6\u7406\u306e\u6570\u3092\u4fdd\u6301\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b (\u4e0d\u78ba\u304b)\n\nread_concurrency=true\u306e\u5834\u5408\u306f\u3001\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306f\u3001(\u30ed\u30c3\u30af\u5185\u3067)\u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u30ab\u30a6\u30f3\u30bf\u3067\u306f\u306a\u304f\u3001\u30b9\u30ec\u30c3\u30c9(or \u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7)\u306b\u30ed\u30fc\u30ab\u30eb\u306aethr_rwmutex.tdata.ra[i].readers\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u3063\u3066\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u3002\n\nethr_rwmutex_rlock\u95a2\u6570\n\u4ee5\u4e0b\u306f\u3001\u8aad\u307f\u8fbc\u307f\u7528\u30ed\u30c3\u30af\u95a2\u6570\u3092\u5b9f\u88c5\u3002\n\nethr_mutex.c\nvoid\nethr_rwmutex_rlock(ethr_rwmutex *rwmtx)\n{\n    ethr_sint32_t act;\n    switch (rwmtx->type) {\n    case ETHR_RWMUTEX_TYPE_NORMAL: {\n        /***\n         * NOTE: read_concurrency=false\u3001\u306e\u5834\u5408\n         ***/\n        ethr_sint32_t exp = 0;  // \u6700\u521d\u306f\u73fe\u5728\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306f0\u3068\u4eee\u5b9a (\u8907\u6570\u3044\u308b\u5834\u5408\u306f\u4e00\u56de\u7121\u99c4\u306a\u30eb\u30fc\u30d7\u304c\u8d70\u308b)\n        while (1) {\n            // CAS\u3092\u4f7f\u3063\u3066\u3001\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u53d6\u5f97(\u30ea\u30fc\u30c0\u30fc\u30ab\u30a6\u30f3\u30c8\u306e\u5897\u52a0)\u3092\u8a66\u307f\u308b\n            act = ethr_atomic32_cmpxchg_acqb(&rwmtx->mtxb.flgs, exp+1, exp);\n            if (act == exp)\n                break;  // \u7121\u4e8b\u306b\u30ab\u30a6\u30f3\u30c8\u3092\u5897\u3084\u305b\u305f\u306e\u3067\u3001\u30ed\u30c3\u30af\u7372\u5f97\n\n            // \u30e9\u30a4\u30bf\u30fc\u304c\u30ed\u30c3\u30af\u7372\u5f97\u4e2d(or \u7372\u5f97\u5f85\u6a5f\u4e2d)\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\n            if (act & (ETHR_RWMTX_W_FLG__|ETHR_RWMTX_W_WAIT_FLG__)) {\n                // \u7af6\u5408\u3059\u308b\u30e9\u30a4\u30bf\u30fc\u304c\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u30e9\u30a4\u30bf\u30fc\u304c\u30ed\u30c3\u30af\u3092\u89e3\u653e\u3059\u308b\u307e\u3067\u5f85\u6a5f\u3059\u308b\u3002\n                //\n                // `rwmutex_normal_rlock_wait`\u5185\u3067\u306f\u3001\u5927\u96d1\u628a\u306b\u8a00\u3048\u3070\u4ee5\u4e0b\u306e\u51e6\u7406\u304c\u884c\u308f\u308c\u3066\u3044\u308b:\n                //   - \u4e00\u5b9a\u56de\u6570\u3060\u3051\u30b9\u30d4\u30f3(\u30d3\u30b8\u30fc\u30eb\u30fc\u30d7)\u3057\u3066\u3001\u30ed\u30c3\u30af\u89e3\u653e\u3092\u30c1\u30a7\u30c3\u30af\n                //   - \u898f\u5b9a\u56de\u6570\u3092\u8d85\u3048\u305f\u5834\u5408\u306f`event_wait`\u95a2\u6570\u3092\u7528\u3044\u3066\u3001\u30ed\u30c3\u30af\u89e3\u653e\u307e\u3067\u5f85\u6a5f\u3059\u308b\n                rwmutex_normal_rlock_wait(rwmtx, act);\n                break;\n            }\n\n            // \u4ed6\u306e\u30ea\u30fc\u30c0\u30fc\u3068CAS\u304c\u7af6\u5408\u3057\u305f\u306e\u3067\u3001\u30ea\u30c8\u30e9\u30a4\u3059\u308b\n            // NOTE: \u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306e\u7af6\u5408\u5ea6\u304c\u9ad8\u3044\u3068\u3001\u3053\u3053\u306b\u6765\u308b(= \u6027\u80fd\u304c\u52a3\u5316\u3059\u308b)\u53ef\u80fd\u6027\u304c\u9ad8\u304f\u306a\u308b\n            exp = act;\n        }\n        break;\n    }\n\n    case ETHR_RWMUTEX_TYPE_FREQUENT_READ:\n    case ETHR_RWMUTEX_TYPE_EXTREMELY_FREQUENT_READ: {\n        /***\n          * NOTE: read_concurrency=true\u3001\u306e\u5834\u5408\n          ***/\n        ethr_ts_event *tse = ethr_get_ts_event();  // \u30b9\u30ec\u30c3\u30c9\u56fa\u6709\u30c7\u30fc\u30bf(?)\u3092\u53d6\u5f97\n        rwmutex_freqread_rlock(rwmtx, tse, 0); // \u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u53d6\u5f97\u3092\u8a66\u307f\u308b\n        ethr_leave_ts_event(tse);\n        break;\n    }\n    }\n}\n\n\ntype\u304cETHR_RWMUTEX_TYPE_NORMAL\u306e\u5834\u5408\u306f\u3001(\u30e9\u30a4\u30bf\u30fc\u3068\u306e\u7af6\u5408\u3092\u8003\u3048\u306a\u3051\u308c\u3070)\u5358\u306bmtxb.flgs\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u30ea\u30fc\u30c0\u30fc\u6570\u3092CAS\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u3060\u3051\u3002\n\u305f\u3060\u3057mtxb.flgs\u306f\u5358\u4e00\u306e\u5909\u6570\u306a\u306e\u3067\u3001\u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u304c\u6570\u304c\u591a\u3044\u5834\u5408\u306b\u306f\u3001CAS\u306e\u5b9f\u884c\u304c\u7af6\u5408\u3057\u3066\u3057\u307e\u3044\u3001(\u30ea\u30c8\u30e9\u30a4\u304c\u591a\u304f\u306a\u308a)\u6027\u80fd\u304c\u52a3\u5316\u3057\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u6700\u9069\u5316\u7248\u3067\u3001\u305d\u306e\u554f\u984c\u306b\u3069\u3046\u5bfe\u51e6\u3057\u3066\u3044\u308b\u304b\u306frwmutex_freqread_rlock\u95a2\u6570\u306e\u5b9f\u88c5\u3092\u8aad\u3081\u3070\u5206\u304b\u308b\u3002\n\nrwmutex_freqread_rlock\u95a2\u6570\n\nethr_mutex.c\nstatic int\nrwmutex_freqread_rlock(ethr_rwmutex *rwmtx, ethr_ts_event *tse, int trylock)\n{\n    // NOTE: \n    // `tse`\u306f\u3001(\u304a\u305d\u3089\u304f)\u30b9\u30ec\u30c3\u30c9\u56fa\u6709\u306e\u30c7\u30fc\u30bf\u306a\u306e\u3067\u3001\u3053\u308c\u306b\u5bfe\u3059\u308b\u8aad\u307f\u66f8\u304d\u306f\u4ed6\u306e\u30b9\u30ec\u30c3\u30c9\u306b\u306f\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u3002\n    //  => CPU\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30d5\u30e9\u30c3\u30b7\u30e5\u7b49\u306b\u7e4b\u304c\u308b\u30b9\u30ec\u30c3\u30c9\u9593\u540c\u671f\u304c\u4e0d\u8981\u3068\u306a\u308b\u306e\u3067\u3001\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3092\u963b\u5bb3\u3057\u306a\u3044\n    int res = 0;\n    ethr_sint32_t act;\n\n    // 1. \u81ea\u30b9\u30ec\u30c3\u30c9(\u306b\u5bfe\u5fdc\u3059\u308b\u6dfb\u3048\u5b57)\u304c\u7ba1\u7406\u3059\u308b\u30ea\u30fc\u30c0\u30fc\u6570\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u3002\n    // \u6982\u306d\u53f3\u306e\u901a\u308a: ethr_atomic32_inc(rwmtx->tdata.ra[\u81ea\u30b9\u30ec\u30c3\u30c9\u7528\u306e\u6dfb\u3048\u5b57].data.readers)\n    rwmutex_freqread_rdrs_inc(rwmtx, tse);\n\n    ETHR_MEMORY_BARRIER; // ethr_atomics.h:#define ETHR_MEMORY_BARRIER ETHR_MEMBAR(ETHR_LoadLoad|ETHR_LoadStore|ETHR_StoreLoad|ETHR_StoreStore)\n\n    // 2. \u73fe\u5728\u306e\u30d5\u30e9\u30b0\u3092\u53d6\u5f97\u3059\u308b\n    act = ethr_atomic32_read_acqb(&rwmtx->mtxb.flgs);\n\n    // 3. \u5225\u306e\u30ea\u30fc\u30c0\u30fc\u304c\u3044\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af (\u3082\u3057\u5b58\u5728\u3059\u308b\u306a\u3089\u3001\u3053\u3053\u3067\u7372\u5f97\u51e6\u7406\u304c\u5b8c\u4e86)\n    if (act != ETHR_RWMTX_R_FLG__) {\n        // \u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u306e\u30ea\u30fc\u30c0\u30fc\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u304c\u8af8\u3005\u306e\u521d\u671f\u51e6\u7406\u3092\u62c5\u5f53\u3059\u308b\n        int wake_other_readers;\n\n        while (1) {\n            ethr_sint32_t exp, new;\n\n            wake_other_readers = 0;\n\n            if (act == 0)\n                // 4-a. \u30e9\u30a4\u30bf\u30fc\u3082\u3044\u306a\u3044 => \u672b\u5c3e\u306eCAS\u306b\u6210\u529f\u3059\u308c\u3070\u3001\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u7372\u5f97\u6210\u529f\n                new = act | ETHR_RWMTX_R_FLG__;\n            else if (act == ETHR_RWMTX_R_FLG__)\n                // 4-b. \u5225\u306e\u65b0\u898f\u30ea\u30fc\u30c0\u30fc\u3068\u7af6\u5408\u3057\u305f => \u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u306f\u8a31\u53ef\u3055\u308c\u308b\u306e\u3067\u30ed\u30c3\u30af\u7372\u5f97\u6210\u529f\n                break; /* Got it */\n            else if (act & (ETHR_RWMTX_W_FLG__|ETHR_RWMTX_W_WAIT_FLG__)) {\n                // 4-c. \u30e9\u30a4\u30bf\u30fc\u3068\u7af6\u5408\u3057\u305f\n                rwmutex_freqread_restore_failed_tryrlock(rwmtx, tse);\n                if (trylock)\n                    res = EBUSY; // trylock(= wait\u3057\u306a\u3044\u30e2\u30fc\u30c9)\u306a\u3089\u5931\u6557(\u7af6\u5408)\u30b9\u30c6\u30fc\u30bf\u30b9\u3067\u7d42\u4e86\n                else\n                    rwmutex_freqread_rlock_wait(rwmtx, tse); // \u30e9\u30a4\u30bf\u30fc\u306e\u7d42\u4e86\u3092\u5f85\u6a5f\n                break;\n            }\n            else if (act & ETHR_RWMTX_R_ABRT_UNLCK_FLG__) {\n                // 4-d. \u30a2\u30dc\u30fc\u30c8\u3057\u305f\u30a2\u30f3\u30ed\u30c3\u30af\u304c\u3042\u308b\u3089\u3057\u3044 (\u672a\u8abf\u67fb\u306a\u306e\u3067\u8a73\u7d30\u4e0d\u660e)\n                if ((act & ETHR_RWMTX_R_FLG__) == 0)\n                    ETHR_FATAL_ERROR__(EFAULT);\n                /*\n                 * An aborted runlock, not write locked, and no write\n                 * waiters, i.e., we got it...\n                 */\n                if (act & ETHR_RWMTX_R_WAIT_FLG__)\n                    wake_other_readers = 1;\n                break;\n            }\n            else {\n                // 4-e. \u305d\u308c\u4ee5\u5916\u306e\u30b1\u30fc\u30b9 (\u672a\u8abf\u67fb\u306a\u306e\u3067\u8a73\u7d30\u4e0d\u660e)\n                new = act | ETHR_RWMTX_R_FLG__;\n                if (act & ETHR_RWMTX_R_PEND_UNLCK_MASK__) {\n                    /*\n                     * Someone is doing tryrwlock (no writer and no\n                     * write waiters); we will try to abort that...\n                     */\n                    new |= ETHR_RWMTX_R_ABRT_UNLCK_FLG__;\n                }\n\n                if (act & ETHR_RWMTX_R_WAIT_FLG__)\n                    wake_other_readers = 1;\n            }\n\n            exp = act;\n            act = ethr_atomic32_cmpxchg_acqb(&rwmtx->mtxb.flgs, new, exp);\n            if (act == exp)\n                break;\n        }\n\n        if (wake_other_readers) // \u4ed6\u306e\u30ea\u30fc\u30c0\u30fc\u304c\u30ed\u30c3\u30af\u7372\u5f97\u3092\u5f85\u6a5f(wait)\u4e2d\u306a\u3089\u8d77\u3053\u3059\n            rwmutex_transfer_read_lock(rwmtx, act, 0);\n    }\n\n    return res;\n}\n\n\n\u3053\u306e\u95a2\u6570\u3092\u898b\u308b\u3068\u3001\u30ed\u30c3\u30af\u7372\u5f97\u30ea\u30fc\u30c0\u30fc\u6570\u3092\u7ba1\u7406\u3059\u308b\u5834\u6240\u304c\u3001\u30ed\u30c3\u30af\u3067\u5171\u901a\u306erwmtx.flgs\u304b\u3089\u3001\u30b9\u30ec\u30c3\u30c9(or \u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7)\u306b\u30ed\u30fc\u30ab\u30eb\u306arwmtx.tdata.ra[i].data.readers\u306b\u79fb\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n(rwmtx.flgs\u306f\u3001\u300c\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u30ea\u30fc\u30c0\u30fc\u304c\u3044\u308b\u304b\u300d\u3084\u300c\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u30e9\u30a4\u30bf\u30fc\u304c\u3044\u308b\u304b\u300d\u3068\u3044\u3063\u305f\u30b9\u30c6\u30fc\u30c8\u7ba1\u7406\u306e\u307f\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u308b)\n\u3053\u306e\u5b9f\u88c5\u3067\u306f\u3001\u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u306e\u7af6\u5408\u5ea6\u304c\u9ad8\u3044\u5834\u5408\u304c\u4e00\u756a\u30b3\u30b9\u30c8\u304c\u5b89\u304f\u3001\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u30ed\u30c3\u30af\u304c\u7372\u5f97\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u308b:\n\n\u30b9\u30ec\u30c3\u30c9(\u30b0\u30eb\u30fc\u30d7)\u30ed\u30fc\u30ab\u30eb\u306a\u30ea\u30fc\u30c0\u30fc\u6570\u30ab\u30a6\u30f3\u30bf\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n\u30e1\u30e2\u30ea\u30d0\u30ea\u30a2\n\nrwmtx.flgs\u306e\u5024\u3092\u30a2\u30c8\u30df\u30c3\u30af\u306b\u8aad\u307f\u8fbc\u3080\n\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u7528\u306e\u30d5\u30e9\u30b0\u304c\u7acb\u3063\u3066\u3044\u308c\u3070\u3001\u305d\u3053\u3067\u7372\u5f97\u5b8c\u4e86\n\n\n\u65e2\u306b\u5225\u306e\u30ea\u30fc\u30c0\u30fc\u304c\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u306a\u3089\u3001\u3053\u306e\u30d5\u30e9\u30b0\u304c\u7acb\u3064\n\u305d\u306e\u3088\u3046\u306a\u30ea\u30fc\u30c0\u30fc\u304c\u3044\u306a\u3044\u5834\u5408\u306frwmtx.flgs\u306b\u5bfe\u3059\u308bCAS\u306e\u767a\u884c\u304c\u4e00\u56de\u4f59\u5206\u3067\u5fc5\u8981\u3068\u306a\u308b\n\n\n\nread_concurrency=false\u306e\u5834\u5408\u3068\u7570\u306a\u308a\u3001\u30e9\u30a4\u30bf\u30fc\u3068\u7af6\u5408\u3057\u306a\u3044\u9650\u308a\u306f\u3001\u5e38\u306b\u5b9a\u6570\u30b9\u30c6\u30c3\u30d7\u3067\u30ed\u30c3\u30af\u304c\u7372\u5f97\u3067\u304d\u308b\u306e\u3067\u3001\u304b\u306a\u308a\u52b9\u7387\u304c\u826f\u3044\u3002\n\nethr_rwmutex_runlock\u95a2\u6570\n\u6700\u5f8c\u306f\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u89e3\u653e\u51e6\u7406\u3002\nread_concurrency=true\u306e\u5834\u5408\u3001\u81ea\u30b9\u30ec\u30c3\u30c9(or \u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7)\u304c\u7ba1\u7406\u3059\u308b\u30ea\u30fc\u30c0\u30fc\u6570\u306f\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u304c\u300c\u5168\u4f53\u3067\u30ed\u30c3\u30af\u7372\u5f97\u30ea\u30fc\u30c0\u30fc\u6570\u304c0\u306b\u306a\u3063\u305f\u304b\u3069\u3046\u304b\u300d\u306f\u78ba\u8a8d\u3057\u3066\u3044\u306a\u3044\u306e\u304c\u7279\u5fb4\u7684 \u3002\n\u3064\u307e\u308a\u5168\u4f53\u3067\u30ea\u30fc\u30c0\u30fc\u304c\u4e00\u4eba\u3082\u3044\u306a\u304f\u306a\u3063\u305f\u5834\u5408\u3067\u3082ETHR_RWMTX_R_FLAG__\u30d5\u30e9\u30b0\u304c\u7acb\u3063\u305f\u307e\u307e\u3068\u306a\u308a\u3001\u305d\u306e\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u30b3\u30b9\u30c8\u306f\u3001\u4eca\u56de\u306f\u5272\u611b\u3055\u308c\u305f\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u7372\u5f97\u95a2\u6570(ethr_rwmutex_rwlock)\u306b\u62bc\u3057\u4ed8\u3051\u3089\u308c\u308b\u5f62\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n(ETHR_RWMTX_R_FLAG__\u30d5\u30e9\u30b0\u304c\u7acb\u3063\u3066\u3044\u308b\u5834\u5408\u3001check_readers_array\u95a2\u6570\u5185\u3067tdata.ra\u914d\u5217\u306e\u5168\u8981\u7d20\u304c\u8d70\u67fb\u3055\u308c\u3001\u30ea\u30fc\u30c0\u30fc\u306e\u5b58\u5728\u5224\u5b9a\u304c\u884c\u308f\u308c\u3066\u3044\u308b)\n\nethr_mutex.c\nvoid\nethr_rwmutex_runlock(ethr_rwmutex *rwmtx)\n{\n    ethr_sint32_t act;\n\n    switch (rwmtx->type) {\n    case ETHR_RWMUTEX_TYPE_NORMAL:\n        // NOTE: read_concurrency=false\u3001\u306e\u5834\u5408\n        act = ethr_atomic32_dec_read_relb(&rwmtx->mtxb.flgs); // \u30ea\u30fc\u30c0\u30fc\u6570\u3092\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\n        if ((act & ETHR_RWMTX_WAIT_FLGS__)\n            && (act & ~ETHR_RWMTX_WAIT_FLGS__) == 0) {\n            // \u5f85\u6a5f\u4e2d\u306e\u30e9\u30a4\u30bf\u30fc\u304c\u3044\u308b\u306a\u3089\u8d77\u3053\u3059\n            rwmutex_unlock_wake(rwmtx, 0, act, 0);\n        }\n        break;\n\n    case ETHR_RWMUTEX_TYPE_FREQUENT_READ:\n    case ETHR_RWMUTEX_TYPE_EXTREMELY_FREQUENT_READ: {\n        // NOTE: read_concurrency=true\u3001\u306e\u5834\u5408\n        ethr_ts_event *tse = ethr_get_ts_event();\n\n        // \u30b9\u30ec\u30c3\u30c9(or \u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7)\u6bce\u306b\u7ba1\u7406\u3057\u3066\u3044\u308b\u30ea\u30fc\u30c0\u30fc\u6570\u3092\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\n        act = rwmutex_freqread_rdrs_dec_read_relb(rwmtx, tse);\n\n        ETHR_MEMORY_BARRIER;\n\n        if (act == 0) {\n            // \u81ea\u30b9\u30ec\u30c3\u30c9(or \u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7)\u304c\u7ba1\u7406\u3059\u308b\u30ea\u30fc\u30c0\u30fc\u6570\u304c0\u306b\u306a\u3063\u305f\n            act = ethr_atomic32_read(&rwmtx->mtxb.flgs);\n            if (act != ETHR_RWMTX_R_FLG__)\n                // \u89e3\u653e\u4e2d\u306b\u30d5\u30e9\u30b0\u306e\u5024\u304c\u5909\u308f\u3063\u305f\u5834\u5408\u306f\u3001\u4ed6\u306e\u5f85\u6a5f\u8005(\u7af6\u5408\u8005)\u304c\u3044\u308b\u306e\u3067\u3001\u5f8c\u51e6\u7406\u3092\u3059\u308b\n                rwmutex_freqread_rdrs_dec_chk_wakeup(rwmtx, tse, act);\n        }\n\n        ethr_leave_ts_event(tse);\n        break;\n    }\n    }\n}\n\n\n\n\u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\n\u4eca\u56de\u8abf\u3079\u305f\u7bc4\u56f2\u3067\u306eethr_mutex.c\u306b\u5bfe\u3059\u308bread_concurrency\u304a\u3088\u3073write_concurrency\u306e\u5f71\u97ff\u306e\u307e\u3068\u3081(\u9577\u3044...):\n\n\nerl_db.c\u7b49\u306f\u3001(\u4e3b\u306b)ethr_mutex.c\u304c\u63d0\u4f9b\u3059\u308bRW\u30ed\u30c3\u30af\u7cfb\u306e\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\n\n\n\u4e21\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u304c\u3001\u4f7f\u7528\u3059\u308b\u30ed\u30c3\u30af\u306e\u7a2e\u985e\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u3053\u3068\u306f\u306a\u3044\n\n\ni.e. read_concurrency=false\u306e\u5834\u5408\u3067\u3082\u3001\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u4e26\u5217\u7372\u5f97\u81ea\u4f53\u306f\u8a31\u53ef\u3055\u308c\u308b\n\n\nRW\u30ed\u30c3\u30af\u306a\u306e\u3067\u3001\u30ed\u30c3\u30af\u306f\u5e38\u306b\u4ee5\u4e0b\u306e\u6027\u8cea\u3092\u6301\u3064:\n\n\n\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u4e26\u5217(\u8907\u6570)\u7372\u5f97\u306f\u8a31\u53ef\u3055\u308c\u308b\n\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u306e\u4e26\u5217(\u8907\u6570)\u7372\u5f97\u306f\u7981\u6b62\u3055\u308c\u308b\n\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3068\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u540c\u6642\u7372\u5f97\u306f\u7981\u6b62\u3055\u308c\u308b\n\n\n\n\n\nwrite_concurrency\u306e\u5024\u306f\u3001\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u5185\u306e\u95a2\u6570\u7fa4\u306b\u5bfe\u3057\u3066\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\n\nread_concurrency\u306e\u5024\u306b\u5fdc\u3058\u3066\u3001\u4f7f\u7528\u3055\u308c\u308b\u5185\u90e8\u5b9f\u88c5\u304c\u300c\u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u300d\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u3082\u306e\u306b\u306a\u308b\u304b\u3069\u3046\u304b\u304c\u5909\u308f\u308b:\n\n\n\nfalse\u306e\u5834\u5408 (\u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u306b\u6700\u9069\u5316\u3055\u308c\u306a\u3044):\n\n\n\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306e\u30ab\u30a6\u30f3\u30c8\u304c\u3001\u30ed\u30c3\u30af\u5185\u3067\u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u5358\u4e00\u5909\u6570\u3067\u7ba1\u7406\u3055\u308c\u308b\n\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u7372\u5f97\u6642\u306b\u306f\u3001\u305d\u306e\u5909\u6570\u306b\u5bfe\u3059\u308bCAS(\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8)\u304c\u767a\u884c\u3055\u308c\u308b\n\u7af6\u5408\u5ea6\u304c\u9ad8\u304f\u306a\u308b\u307b\u3069\u3001CAS\u306b\u5931\u6557\u3057\u3066\u3001\u30ea\u30c8\u30e9\u30a4\u304c\u8d70\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u304f\u306a\u308b\n\n\n\u6b20\u70b9: \u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u7372\u5f97\u7af6\u5408\u5ea6\u304c\u9ad8\u304f\u306a\u308b\u307b\u3069\u3001\u6027\u80fd\u304c\u52a3\u5316\u3059\u308b\n\n\n\n\n\ntrue\u306e\u5834\u5408 (\u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u306b\u6700\u9069\u5316\u3055\u308c\u308b):\n\n\n\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u3001\u30b9\u30ec\u30c3\u30c9\u30ed\u30fc\u30ab\u30eb\u306a\u5909\u6570\u306b\u5206\u6563\u3057\u3066\u3044\u308b\n\n\n\u4ed6\u30b9\u30ec\u30c3\u30c9\u3068\u306eCAS\u306e\u7af6\u5408(and \u30ea\u30c8\u30e9\u30a4)\u304c\u306a\u304f\u306a\u308a\u3001\u5b9a\u6570\u30b9\u30c6\u30c3\u30d7\u3067\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u304c\u7372\u5f97\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u308b\n\u203b \u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3068\u7af6\u5408\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u9664\u304f\n\u5229\u70b9: \u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u7372\u5f97\u7af6\u5408\u5ea6\u304c\u9ad8\u304f\u306a\u3063\u3066\u3082\u3001\u6027\u80fd\u304c\u307b\u3068\u3093\u3069\u52a3\u5316\u3057\u306a\u3044\n\n\n\u305f\u3060\u3057\u3001\u305d\u306e\u4ee3\u511f\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u4e8c\u3064\u306e\u6b20\u70b9\u304c\u3042\u308b:\n\n\n\n\u6b20\u70b9: \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u5897\u52a0\u3059\u308b\n\n(\u82e5\u5e72\u4e0d\u6b63\u78ba\u3060\u304c\u5927\u96d1\u628a\u306b\u8a00\u3048\u3070)\u8ad6\u7406\u30b3\u30a2\u6570 * \u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u30b5\u30a4\u30ba\u7a0b\u5ea6\u306e\u30e1\u30e2\u30ea\u304c\u8ffd\u52a0\u3067\u5fc5\u8981\u3068\u306a\u308b\n\u4f8b: \u30b3\u30a2\u6570=8\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u30b5\u30a4\u30ba=64byte\u306a\u3089\u3001512byte\u304c\u8ffd\u52a0\u3067\u5fc5\u8981\n\n\n\n\u6b20\u70b9: \u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u304b\u3089\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3078\u306e\u5207\u308a\u66ff\u308f\u308a\u306e\u30b3\u30b9\u30c8\u304c\u5897\u3048\u308b\n\n\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u7372\u5f97\u6642\u306b\u300c\u672c\u5f53\u306b\u30ea\u30fc\u30c0\u30fc\u304c\u4e00\u4eba\u3082\u3044\u306a\u3044\u304b\u300d\u3092\u8abf\u3079\u308b\u305f\u3081\u306b\u3001\u5168\u3066\u306e\u30b9\u30ec\u30c3\u30c9\u306e\u56fa\u6709\u30c7\u30fc\u30bf\u3092\u64cd\u4f5c\u3057\u3066\u3001\u30ea\u30fc\u30c0\u30fc\u6570\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b(\u5834\u5408\u304c\u3042\u308b)\n\nread_concurrency=false\u306e\u5834\u5408\u306f\u3001\u5358\u4e00\u306e\u5909\u6570\u3092\u53c2\u7167\u3059\u308c\u3070\u3001\u30ea\u30fc\u30c0\u30fc\u6570\u304c\u628a\u63e1\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u8d70\u67fb\u306f\u4e0d\u8981\n\n\n\n\n\n\n\n\n\n\nerl_db_hash.c\n\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u3092\u7528\u3044\u305fETS\u30c6\u30fc\u30d6\u30eb\u306e\u5b9f\u88c5\u3002\n\u3053\u306e\u30c6\u30fc\u30d6\u30eb\u5b9f\u88c5\u306ferl_db_util.h\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bDbTableMethod\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9(\u69cb\u9020\u4f53)\u3092\u5099\u3048\u3066\u304a\u308a\u3001\u305d\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u901a\u3057\u3066erl_db.c\u304b\u3089\u4f7f\u7528\u3055\u308c\u308b\u3002\n\u307e\u305ferl_db_hash.c\u306f\u3001\u5185\u90e8\u30ed\u30c3\u30af\u7528\u306bethr_mutex.c\u304c\u63d0\u4f9b\u3059\u308bRW\u30ed\u30c3\u30af\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3002\n\n\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af\u3068\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\n\u307e\u305a\u6700\u521d\u306berl_db_hash.c\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8(\u30b3\u30e1\u30f3\u30c8)\u306eSMP\u306e\u90e8\u5206\u3092\u5f15\u7528\u3059\u308b\u3002\n\nerl_db_hash.c\n/* SMP:\n** The hash table supports two different locking \"modes\",\n** coarse grained and fine grained locking.\n**\n** Coarse grained locking relies entirely on the caller (erl_db.c) to obtain\n** the right kind of lock on the entire table depending on operation (reading\n** or writing). No further locking is then done by the table itself.\n**\n** Fine grained locking is supported by this code to allow concurrent updates\n** (and reading) to different parts of the table. This works by keeping one\n** rw-mtx for every N'th bucket. Even dynamic growing and shrinking by\n** rehashing buckets can be done without exclusive table lock.\n**\n** A table will support fine grained locking if it is created with flag\n** DB_FINE_LOCKED set. The table variable is_thread_safe will then indicate\n** if operations need to obtain fine grained locks or not. Some operations\n** will for example always use exclusive table lock to guarantee\n** a higher level of atomicy.\n*/\n\n\n\u3053\u308c\u3092\u8aad\u3080\u3068erl_db_hash.c\u306f\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306e\u5b9f\u88c5\u3068\u3057\u3066\u3001\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af(Coarse grained lock)\u3068\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af(Fine grained lock)\u3001\u306e\u4e8c\u3064\u306b\u57fa\u3065\u304f\u3082\u306e\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n\u305d\u3057\u3066\u300cDB_FINE_LOCKED\u30d5\u30e9\u30b0\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u304c\u4f7f\u7528\u3055\u308c\u308b\u300d\u3068\u3042\u308b\u304c\u3001\u3053\u308c\u306fwrite_concurrency=true\u306e\u30b1\u30fc\u30b9\u306b\u5bfe\u5fdc\u3059\u308b\u3002 \n\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af\u306e\u5834\u5408(\u3064\u307e\u308awrite_concurrency=false)\u306f\u3001\u3053\u306e\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u81ea\u4f53\u306f\u30ed\u30c3\u30af\u306e\u7ba1\u7406\u3092\u4e00\u5207\u884c\u308f\u305a\u306b\u3001\u305d\u306e\u5229\u7528\u5074(erl_db.c)\u304c\u8aad\u307f\u8fbc\u307f/\u66f8\u304d\u8fbc\u307f\u6642\u306b\u9069\u5207\u306b\u30ed\u30c3\u30af\u3092\u78ba\u4fdd\u3057\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u3066\u52d5\u4f5c\u3059\u308b\u3002\n(\u305d\u3057\u3066erl_db.c\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u6bce\u306b\u5358\u4e00\u306eRW\u30ed\u30c3\u30af\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u3001\u66f8\u304d\u8fbc\u307f\u7af6\u5408\u306b\u5f31\u3044)\n\u305d\u308c\u306b\u5bfe\u3057\u3066\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u306e\u5834\u5408\u306f\u3001ethr_mutex.c\u304c\u63d0\u4f9b\u3059\u308bRW\u30ed\u30c3\u30af\u3092\u4f7f\u3063\u3066\u3001\u8981\u7d20\u306e\u66f4\u65b0\u3084\u691c\u7d22\u6642\u306b\u81ea\u524d\u3067\u30ed\u30c3\u30af\u3092\u7ba1\u7406\u3059\u308b (\u3053\u3061\u3089\u306f\u9006\u306berl_db.c\u5074\u3067\u306f\u4e0d\u8981\u306a\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3057\u306a\u3044\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u308b\u3002erl_db.c\u3068erl_db_hash.c\u306e\u5354\u8abf\u65b9\u6cd5\u306e\u8a73\u7d30\u306b\u95a2\u3057\u3066\u306f\u5f8c\u8ff0)\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u52d5\u4f5c\u3068\u306a\u308b:\n\n\u30c6\u30fc\u30d6\u30eb\u304cDB_HASH_LOCK_CNT\u500b\u306e\u9818\u57df\u306b(\u8ad6\u7406\u7684\u306b)\u5206\u5272\u3055\u308c\u308b\n\n\n\nDB_HASH_LOCK_CNT\u306e\u5024\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f64\n\nconfigure\u6642\u306bwith_ets_write_concurrency_locks\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u5909\u66f4\u53ef\u80fd\n\n\n\u305d\u308c\u305e\u308c\u306e\u9818\u57df\u306b\u5bfe\u3057\u3066\u4e00\u3064\u306eRW\u30ed\u30c3\u30af\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\n\u305d\u306e\u9818\u57df\u306b\u5c5e\u3059\u308b\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5834\u5408\u306f\u3001\u4e8b\u524d\u306b\u5bfe\u5fdc\u3059\u308bRW\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\n\n\n\u66f4\u65b0\u7cfb\u306a\u3089\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3001\u53c2\u7167\u7cfb\u306a\u3089\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\n\n\n\n\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u3067\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u3078\u306e\u66f4\u65b0\u30a2\u30af\u30bb\u30b9\u304c\u7af6\u5408\u3057\u305f\u5834\u5408\u3067\u3082\u3001\u9818\u57df\u304c\u88ab\u3089\u306a\u3051\u308c\u3070\u5225\u3005\u306e\u30ed\u30c3\u30af\u304c\u4f7f\u7528\u3055\u308c\u308b\u306e\u3067\u3001\u4e92\u3044\u3092\u90aa\u9b54\u3059\u308b\u3053\u3068\u304c\u306a\u304f\u3001\u4e26\u5217\u5ea6\u304c\u9ad8\u307e\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u308b\u3002\n\u3064\u307e\u308awrite_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306etrue\u3068false\u304c\u3001\u305d\u308c\u305e\u308c\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u3068\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af\u306b\u5bfe\u5fdc\u3057\u3001\u524d\u8005\u3067\u3042\u308c\u3070\u66f8\u304d\u8fbc\u307f\u7af6\u5408\u306b\u3082\u5f37\u3044\u3067\u3042\u308d\u3046\u3001\u3068\u3044\u3046\u306e\u304cerl_db_hash.c\u306e\u57fa\u672c\u65b9\u91dd\u3068\u306a\u308b\u3002\n\u306a\u304aread_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u306b\u95a2\u3057\u3066\u306f\u3001write_concurrency=true\u306e\u30b1\u30fc\u30b9\u3067\u3060\u3051\u53c2\u7167\u3055\u308c\u308b(\u8a73\u7d30\u306f\u5f8c\u8ff0)\u3002\n\n\u5b9f\u88c5\n\u4ee5\u964d\u3067\u306ferl_db_hash.c\u306e\u5b9f\u88c5\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u304f(\u30aa\u30d7\u30b7\u30e7\u30f3\u95a2\u9023\u90e8\u5206\u306e\u307f)\u3002\n\n\u5909\u6570\u3084\u30d5\u30e9\u30b0\n\u307e\u305a\u306f(read|write)_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u95a2\u9023\u3059\u308b\u3001erl_db_hash.c\u5185\u3067\u53c2\u7167\u3055\u308c\u308b\u5909\u6570\u3084\u30d5\u30e9\u30b0\u306b\u3064\u3044\u3066\u306e\u8aac\u660e\u3002\n\u306a\u304a\u3001\u4ee5\u4e0b\u306e\u5909\u6570\u3084\u30d5\u30e9\u30b0\u306e\u8a2d\u5b9a\u304a\u3088\u3073\u66f4\u65b0\u81ea\u4f53\u306ferl_db.c\u5185\u3067\u884c\u308f\u308c\u308b\u3002erl_db_hash.c\u306f\u6e21\u3055\u308c\u305f\u5024\u3092\u53c2\u7167\u3059\u308b\u306e\u307f\u3067\"(read|write)_concurrency\"\u3068\u3044\u3063\u305f\u6587\u8a00\u304c\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u5185\u306b\u76f4\u63a5\u51fa\u3066\u304f\u308b\u3053\u3068\u3082\u306a\u3044\u3002\n\n\u5909\u6570: DbTable.common.type\n\n\u30c6\u30fc\u30d6\u30eb\u306e\u30bf\u30a4\u30d7\u3092\u8868\u3059\u5909\u6570\n\n(read|write)_concurrency\u306e\u5024\u306b\u5fdc\u3058\u3066\u3001\u4ee5\u4e0b\u306e\u30d5\u30e9\u30b0\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b\n\n\n\nread_concurrency=true\u306e\u5834\u5408: DB_FREQ_READ\u30d5\u30e9\u30b0\n\nwrite_concurrency=true\u306e\u5834\u5408: DB_FINE_LOCKED\u30d5\u30e9\u30b0\n\n\n\n\n\u5909\u6570: DbTable.common.is_thread_safe\n\n\nerl_db_hash.c\u304c\u3001\u81ea\u524d\u30ed\u30c3\u30af\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u305f\u3081\u306e\u5909\u6570\n\n\n\u5024\u304ctrue\u306e\u5834\u5408\u306f\u3001\u524d\u6bb5\u3067\u5b89\u5168\u6027\u304c\u4fdd\u969c\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u81ea\u524d\u30ed\u30c3\u30af\u306f\u4e0d\u8981\n\n\n\nwrite_concurrency=false\u306e\u5834\u5408\u306f\u3001\u5e38\u306btrue\u3068\u306a\u308b\n\nwrite_concurrency=true\u306e\u5834\u5408\u3067\u3082\u3001erl_db.c\u304c\u9069\u5207\u306a\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3057\u3066\u3044\u308b\u5834\u5408\u306ftrue\u306b\u306a\u308b\n\n\n\u4f8b\u3048\u3070erl_db.c\u5185\u3067\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u30ed\u30c3\u30af\u304c\u7372\u5f97\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u3067\u3001\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306e\u5404\u7a2e\u64cd\u4f5c\u304c\u884c\u308f\u308c\u308b\u5834\u5408\n\n\n\nDbTable.common.type\u3068\u7570\u306a\u308a\u3001\u5b9f\u884c\u4e2d\u306b\u5024\u304c\u5909\u52d5\u3059\u308b\n\n\n\n\u4e0a\u8a18\u3092\u8e0f\u307e\u3048\u305f\u4e0a\u3067\u3001\u6b21\u306b\u95a2\u9023\u3059\u308b\u5404\u95a2\u6570\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u304f\u3002\n\u57fa\u672c\u7684\u306b(read|write)_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306e\u751f\u6210\u3068\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6642\u306e\u524d\u51e6\u7406\u3001\u304f\u3089\u3044\u306b\u3057\u304b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u306e\u3067\u3001\u898b\u308b\u3079\u304d\u30b3\u30fc\u30c9\u306e\u91cf\u306f\u5c11\u306a\u3044\u3002\n\n\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u751f\u6210: db_create_hash\u95a2\u6570\n\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306e\u751f\u6210\u6642\u306b(read|write)_concurrency\u306e\u5024\u306b(\u9593\u63a5\u7684\u306b)\u5fdc\u3058\u3066\u3001\u81ea\u524d\u30ed\u30c3\u30af\u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u304c\u6c7a\u5b9a\u3055\u308c\u308b\u3002\n\nerl_db_hash.c\nint db_create_hash(Process *p, DbTable *tbl)\n{\n    DbTableHash *tb = &tbl->hash;\n\n    erts_smp_atomic_init_nob(&tb->szm, SEGSZ_MASK);\n    erts_smp_atomic_init_nob(&tb->nactive, SEGSZ);\n    erts_smp_atomic_init_nob(&tb->fixdel, (erts_aint_t)NULL);\n    erts_smp_atomic_init_nob(&tb->segtab, (erts_aint_t)NULL);\n    SET_SEGTAB(tb, alloc_ext_seg(tb,0,NULL)->segtab);\n    tb->nsegs = NSEG_1;\n    tb->nslots = SEGSZ;\n\n    erts_smp_atomic_init_nob(&tb->is_resizing, 0);\n\n    // `(write|read)_concurrency`\u304c\u95a2\u4fc2\u3057\u3066\u304f\u308b\u306e\u306f\u3001\u3053\u306e\u4e2d\n    if (tb->common.type & DB_FINE_LOCKED) {\n        /***\n          * NOTE: write_concurrency=true\u3001\u306e\u5834\u5408\n          ***/\n        erts_smp_rwmtx_opt_t rwmtx_opt = ERTS_SMP_RWMTX_OPT_DEFAULT_INITER;\n        int i;\n        if (tb->common.type & DB_FREQ_READ)\n            /***\n              * NOTE: read_concurrency=true\u3001\u306e\u5834\u5408\n              * \u5404\u9818\u57df\u3092\u7528\u306eRW\u30ed\u30c3\u30af\u304c\u3001\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u6642\u306b\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3088\u3046\u306b\u3059\u308b(\u8a73\u7d30\u306f\u300cethr_mutex.c\u300d\u3092\u53c2\u7167)\n              ***/\n            rwmtx_opt.type = ERTS_SMP_RWMTX_TYPE_FREQUENT_READ;\n        if (erts_ets_rwmtx_spin_count >= 0)\n            rwmtx_opt.main_spincount = erts_ets_rwmtx_spin_count;\n\n        // \u5404\u9818\u57df\u7528\u306eRW\u30ed\u30c3\u30af\u3092`DB_HASH_LOCK_CNT`\u5206\u3060\u3051\u78ba\u4fdd(and \u521d\u671f\u5316)\u3059\u308b\n        tb->locks = (DbTableHashFineLocks*) erts_db_alloc_fnf(ERTS_ALC_T_DB_SEG, /* Other type maybe? */\n                                                              (DbTable *) tb,\n                                                              sizeof(DbTableHashFineLocks));\n        for (i=0; i<DB_HASH_LOCK_CNT; ++i) {\n            erts_smp_rwmtx_init_opt_x(&tb->locks->lck_vec[i].lck, &rwmtx_opt,\n                                      \"db_hash_slot\", make_small(i));\n        }\n    }\n    else { /* coarse locking */\n        /***\n          * NOTE: write_concurrency=false\u3001\u306e\u5834\u5408\n          ***/\n        tb->locks = NULL;  // \u5185\u90e8\u30ed\u30c3\u30af\u306f\u4f7f\u7528\u3057\u306a\u3044\n    }\n    ERTS_THR_MEMORY_BARRIER;\n    return DB_ERROR_NONE;\n}\n\n\n\u81ea\u524d\u30ed\u30c3\u30af\u3092\u7ba1\u7406\u3059\u308b\u5834\u5408\u306f\u3001read_concurrency\u306e\u5024\u304ctrue\u306a\u3089\u3001\u305d\u306e\u5404RW\u30ed\u30c3\u30af\u304c\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u3082\u306e\u3068\u306a\u308b\u3002\n\u300cethr_mutex.c\u300d\u306e\u7bc0\u306e\u6700\u5f8c\u306b\u300c(\u5927\u96d1\u628a\u306b\u8a00\u3048\u3070)\u8ad6\u7406\u516b\u30b3\u30a2\u306a\u3089\u3001\u8aad\u307f\u8fbc\u307f\u6700\u9069\u5316RW\u30ed\u30c3\u30af\u306e\u6240\u8981\u30e1\u30e2\u30ea\u306f\u304a\u3088\u305d512KB\u300d\u3068\u66f8\u3044\u305f\u304c\u3001\u305d\u308c\u304c\u5168\u9818\u57df\u5206(DB_HASH_LOCK_CNT\u500b)\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3001\u5408\u8a08\u306732MB\u3001\u3068\u610f\u5916\u3068\u99ac\u9e7f\u306b\u306a\u3089\u306a\u3044\u30e1\u30e2\u30ea\u9818\u57df\u3092\u6d88\u8cbb\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u4e21\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f75\u7528\u306b\u306f\u82e5\u5e72\u6ce8\u610f\u304c\u5fc5\u8981\u305d\u3046\u3002\n\n\u8981\u7d20\u30a2\u30af\u30bb\u30b9\u6642\u306b\u547c\u3070\u308c\u308b\u95a2\u6570\u7fa4\n\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u5185\u306e\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u969b\u306e\u30ed\u30c3\u30af\u306e\u4f7f\u3044\u65b9\u306e\u4e00\u4f8b\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306b\u8981\u7d20\u691c\u7d22\u7528\u306e\u95a2\u6570\u306e\u5b9f\u88c5\u30b3\u30fc\u30c9\u3092\u63b2\u8f09\u3059\u308b\u3002\n\nerl_db_hash.c\nstatic int db_member_hash(DbTable *tbl, Eterm key, Eterm *ret)\n{\n    DbTableHash *tb = &tbl->hash;\n    HashValue hval;\n    int ix;\n    HashDbTerm* b1;\n    erts_smp_rwmtx_t* lck;\n\n    hval = MAKE_HASH(key);  // 1. \u30cf\u30c3\u30b7\u30e5\u5024\u3092\u6c42\u3081\u308b\n    ix = hash_to_ix(tb, hval);\n    lck = RLOCK_HASH(tb, hval);  // 2. \u8981\u7d20\u30a2\u30af\u30bb\u30b9\u524d\u306b\u5bfe\u5fdc\u3059\u308b\u30ed\u30c3\u30af\u3092\u78ba\u4fdd\n\n    // 3. \u8981\u7d20\u30a2\u30af\u30bb\u30b9 (\u30d0\u30b1\u30c3\u30c8\u306e\u691c\u7d22\u304a\u3088\u3073\u30d0\u30b1\u30c3\u30c8\u5185\u306e\u8981\u7d20\u306e\u8d70\u67fb)\n    b1 = BUCKET(tb, ix);\n    while(b1 != 0) {\n        if (has_live_key(tb,b1,key,hval)) {\n            *ret = am_true;\n            goto done;\n        }\n        b1 = b1->next;\n    }\n    *ret = am_false;\ndone:\n    RUNLOCK_HASH(lck);  // 4. \u30ed\u30c3\u30af\u3092\u89e3\u653e\n    return DB_ERROR_NONE;\n}\n\n\n\u6d41\u308c\u3068\u3057\u3066\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u4ed6\u306e\u8981\u7d20\u30a2\u30af\u30bb\u30b9\u95a2\u6570\u3067\u3082\u540c\u69d8\u3068\u306a\u308b:\n\n\u6700\u521d\u306e\u30ad\u30fc\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u8a08\u7b97 (MAKE_HASH)\n\u305d\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u306b\u5bfe\u5fdc\u3059\u308b\u30ed\u30c3\u30af\u3092\u7372\u5f97\n\n\n\u66f4\u65b0\u7cfb\u306a\u3089WLOCK_HASH\u95a2\u6570\u3092\u4f7f\u7528\n\u53c2\u7167\u7cfb\u306a\u3089RLOCK_HASH\u95a2\u6570\u3092\u4f7f\u7528\n\n\n\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u305d\u306e\u95a2\u6570\u56fa\u6709\u306e\u51e6\u7406\u3092\u5b9f\u884c \n\u30a2\u30af\u30bb\u30b9\u304c\u7d42\u308f\u3063\u305f\u3089\u3001\u30ed\u30c3\u30af\u3092\u89e3\u653e\n\n\n\nWUNLOCK_HASH or RUNLOCK_HASH\n\n\n\n\n\u8981\u306f\u30a2\u30af\u30bb\u30b9\u306e\u524d\u5f8c\u3067\u3001\u5bfe\u5fdc\u3059\u308b\u30ed\u30c3\u30af\u306e\u7372\u5f97\u3068\u89e3\u653e\u3092\u884c\u3063\u3066\u3044\u308b\u3060\u3051\u3002\n\u6b21\u306fWLOCK_HASH\u7b49\u306e\u30ed\u30c3\u30af\u7cfb\u306e\u95a2\u6570\u306e\u5b9f\u88c5:\n\nerl_db_hash.c\n#  define DB_HASH_LOCK_MASK (DB_HASH_LOCK_CNT-1)\n#  define GET_LOCK(tb,hval) (&(tb)->locks->lck_vec[(hval) & DB_HASH_LOCK_MASK].lck)\n\n/* Fine grained read lock */\nstatic ERTS_INLINE erts_smp_rwmtx_t* RLOCK_HASH(DbTableHash* tb, HashValue hval)\n{\n    if (tb->common.is_thread_safe) {\n        // erl_db.c\u5185\u3067\u3001\u65e2\u306b\u30ed\u30c3\u30af\u304c\u7372\u5f97\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u3053\u3053\u3067\u306e\u51e6\u7406\u306f\u4e0d\u8981\n        return NULL;\n    } else {\n        // \u30cf\u30c3\u30b7\u30e5\u5024\u306b\u5bfe\u5fdc\u3059\u308b\u9818\u57df\u7528\u306e\u30ed\u30c3\u30af\u3092\u53d6\u5f97\n        erts_smp_rwmtx_t* lck = GET_LOCK(tb,hval);\n        erts_smp_rwmtx_rlock(lck);\n        return lck;\n    }\n}\n/* Fine grained write lock */\nstatic ERTS_INLINE erts_smp_rwmtx_t* WLOCK_HASH(DbTableHash* tb, HashValue hval)\n{\n    if (tb->common.is_thread_safe) {\n        return NULL;\n    } else {\n        erts_smp_rwmtx_t* lck = GET_LOCK(tb,hval);\n        erts_smp_rwmtx_rwlock(lck);\n        return lck;\n    }\n}\n\nstatic ERTS_INLINE void RUNLOCK_HASH(erts_smp_rwmtx_t* lck)\n{\n    if (lck != NULL) {\n        erts_smp_rwmtx_runlock(lck);\n    }\n}\n\nstatic ERTS_INLINE void WUNLOCK_HASH(erts_smp_rwmtx_t* lck)\n{\n    if (lck != NULL) {\n        erts_smp_rwmtx_rwunlock(lck);\n    }\n}\n\n\n\u7279\u306b\u96e3\u3057\u3044\u3068\u3053\u308d\u3082\u306a\u304f\u7d20\u76f4\u306a\u5b9f\u88c5\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u305d\u306e\u4ed6\n(read|write)_concurrency\u306b\u95a2\u9023\u3059\u308b\u8a71\u984c\u3068\u3057\u3066\u306f\u3001\u3053\u3053\u307e\u3067\u53d6\u308a\u4e0a\u3052\u305f\u3082\u306e\u4ee5\u5916\u306b\u3082\u300c\u30a2\u30c8\u30df\u30c3\u30af\u64cd\u4f5c\u306e\u5b9f\u884c\u6642\u306e\u30e1\u30e2\u30ea\u30d0\u30ea\u30a2\u3092\u8981\u4e0d\u8981\u3092\u5224\u5b9a\u3059\u308b\u305f\u3081\u306eDB_USING_FINE_LOCKING\u30de\u30af\u30ed\u300d\u3068\u304b\u300c\u30c6\u30fc\u30d6\u30eb\u30ea\u30b5\u30a4\u30ba\u3092\u5168\u4f53\u30ed\u30c3\u30af\u3092\u4f7f\u308f\u305a\u306b\u5b9f\u884c\u3059\u308b\u5de5\u592b\u300d\u3068\u304b\u306e\u8a71\u304c\u6319\u3052\u3089\u308c\u308b\u304c\u3001\u5168\u4f53\u306e\u8ad6\u65e8\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u3082\u306e\u3067\u3082\u306a\u3044\u306e\u3067\u3001\u4eca\u56de\u306f\u5272\u611b\u3059\u308b\u3002\n\n\u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\n\u4eca\u56de\u8abf\u3079\u305f\u7bc4\u56f2\u3067\u306eerl_db_hash.c\u306b\u5bfe\u3059\u308b(read|write)_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f71\u97ff\u306e\u307e\u3068\u3081(\u9577\u3044...):\n\n\nerl_db_hash.c\u306f\u3001\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u3092\u7528\u3044\u305fETS\u30c6\u30fc\u30d6\u30eb\u306e\u5b9f\u88c5\u3092\u3001erl_db.c\u306b\u63d0\u4f9b\u3057\u3066\u3044\u308b\n\n\n\nerl_db.c\u3068\u306e\u5354\u8abf\u304c\u524d\u63d0\u306e\u30b3\u30fc\u30c9\n\n\n\nwrite_concurrency\u306e\u5024\u306b\u5fdc\u3058\u3066\u3001\u8981\u7d20\u30a2\u30af\u30bb\u30b9\u6642\u306b\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af\u3068\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u306e\u3069\u3061\u3089\u3092\u4f7f\u3046\u304b\u304c\u6c7a\u5b9a\u3055\u308c\u308b\n\n\n\nwrite_concurrency=false\u306a\u3089\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af\u304c\u4f7f\u308f\u308c\u308b:\n\n\n\u3053\u306e\u5834\u5408\u3001\u5168\u3066\u306e\u30ed\u30c3\u30af\u95a2\u9023\u51e6\u7406\u306ferl_db.c\u306b\u4e00\u4efb\u3055\u308c\u308b\n\nerl_db.c\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u3067\u4e00\u3064\u306eRW\u30ed\u30c3\u30af\u3092\u4f7f\u7528\u3059\u308b\n\n\n\u66f4\u65b0\u7cfb\u64cd\u4f5c\u306f\u76f4\u5217\u5316\u3055\u308c\u3001\u53c2\u7167\u7cfb\u64cd\u4f5c\u306e\u30b9\u30b1\u30fc\u30eb\u6027\u306fread_concurrency\u306e\u5024\u306b\u4f9d\u5b58\n\u6b20\u70b9: \u4e26\u5217\u66f8\u304d\u8fbc\u307f\u304c\u591a\u3044\u5834\u5408\u306b(\u76f4\u5217\u5316\u3055\u308c\u3066)\u6027\u80fd\u304c\u52a3\u5316\u3059\u308b\n\n\n\n\n\nwrite_concurrency=true\u306a\u3089\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u304c\u4f7f\u308f\u308c\u308b:\n\n\n\nerl_db_hash.c\u304c\u81ea\u524d\u306e\u30ed\u30c3\u30af\u3092\u7ba1\u7406\n\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u3092DB_HASH_LOCK_CNT\u500b\u306e\u9818\u57df\u306b(\u8ad6\u7406\u7684\u306b)\u5206\u5272\u3057\u3001\u305d\u308c\u305e\u308c\u306b\u4e00\u3064\u306eRW\u30ed\u30c3\u30af\u3092\u5272\u308a\u5f53\u3066\u308b\n\u7570\u306a\u308b\u9818\u57df\u306b\u5c5e\u3059\u308b\u8981\u7d20\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u3067\u306f\u3001\u30ed\u30c3\u30af\u304c\u7af6\u5408\u3059\u308b\u3053\u3068\u306f\u306a\u3044\n\n\n\u5229\u70b9: \u4e26\u5217\u66f8\u304d\u8fbc\u307f\u304c\u591a\u3044\u5834\u5408\u3067\u3082\u3001\u3042\u308b\u7a0b\u5ea6\u307e\u3067\u306f\u30b9\u30b1\u30fc\u30eb\u3057\u3084\u3059\u3044\n\n\n\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u306e\u5834\u5408\u3067\u3082erl_db.c\u306e\u5c64\u3067\u306e\u30ed\u30c3\u30af\u7372\u5f97\u306f\u884c\u308f\u308c\u308b (\u8a73\u7d30\u306f\u5f8c\u8ff0)\n\n\n\u6b20\u70b9: \u8981\u7d20\u30a2\u30af\u30bb\u30b9\u6642\u306e\u30ed\u30c3\u30af\u7372\u5f97\u56de\u6570\u304c\u4e00\u56de\u5897\u3048\u308b\u306e\u3067\u3001\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u306f\u5897\u3059\n\n\n\u6b20\u70b9: DB_HASH_LOCK_CNT\u500b\u3060\u3051RW\u30ed\u30c3\u30af\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3001\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u5897\u3059\n\n\n\n\n\n\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u3067\u4f7f\u308f\u308c\u308bRW\u30ed\u30c3\u30af\u306f\u3001read_concurrency=true\u306a\u3089\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u3082\u306e\u306b\u306a\u308b\n\n\nRW\u30ed\u30c3\u30af\u3067\u306eread_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u52b9\u679c\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306f\u300cethr_mutex.c\u300d\u3092\u53c2\u7167\u306e\u3053\u3068\n\n\u5229\u70b9: \u5927\u91cf\u306e\u66f4\u65b0\u3068\u53c2\u7167\u304c\u4ea4\u4e92\u306b\u884c\u308f\u308c\u308b\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u3001\u6027\u80fd\u304c\u5411\u4e0a\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\n\n\u540c\u3058\u9818\u57df\u306eRW\u30ed\u30c3\u30af\u306b\u5bfe\u3059\u308b\u4e26\u5217\u53c2\u7167\u304c\u5927\u91cf\u306b\u8d70\u3063\u305f\u5834\u5408\u306b\u6709\u52b9\n\u305f\u3060\u3057\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u306e\u6642\u70b9\u3067\u3001\u3059\u3067\u306b\u3042\u308b\u7a0b\u5ea6\u30a2\u30af\u30bb\u30b9\u304c\u5206\u6563\u3057\u3066\u3044\u308b\u306f\u305a\u306a\u306e\u3067\u300c\u540c\u3058\u8981\u7d20\u306b\u5bfe\u3057\u3066\u5927\u91cf\u306e\u4e26\u5217\u53c2\u7167\u304c\u5b9f\u884c\u3055\u308c\u308b\u300d\u3068\u3044\u3063\u305f\u3088\u3046\u306a\u72b6\u6cc1\u3067\u3082\u306a\u3051\u308c\u3070\u52b9\u679c\u306f\u8584\u305d\u3046\n\nets:select/2\u306e\u3088\u3046\u306a\u5168\u4f53\u53c2\u7167\u304c\u983b\u7e41\u306b\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306a\u30b1\u30fc\u30b9\u306a\u3089\u3082\u3057\u304b\u3057\u305f\u3089\u6709\u52b9\uff1f\n\n\n\u6b20\u70b9: \u5c11\u6570\u306e\u66f4\u65b0\u3068\u53c2\u7167\u304c\u4ea4\u4e92\u306b\u884c\u308f\u308c\u308b\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u3001\u6027\u80fd\u304c\u52a3\u5316\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\n\n\u6b20\u70b9: \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u3055\u3089\u306b(\u5927\u5e45\u306b)\u5897\u3059\n\n\u6982\u306d\u8ad6\u7406\u30b3\u30a2\u6570  * \u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u30b5\u30a4\u30ba(e.g. 64B) * DB_HASH_LOCK_CNT\u3060\u3051\u5fc5\u8981\n\u30b3\u30a2\u6570\u306b\u3088\u3063\u3066\u306f\u3001\u4e00\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u3067100MB\u7a0b\u5ea6\u306e\u30e1\u30e2\u30ea\u3092\u6d88\u8cbb\u3057\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u3082\u3042\u308b\n\n\n\n\n\nerl_db.c\u306f\u5168\u4f53\u7684\u306a\u8abf\u6574\u51e6\u7406\u304c\u4e3b\u306a\u306e\u3067\u3001(read|write)_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u304c\u6027\u80fd\u306b\u4e0e\u3048\u308b\u5f71\u97ff\u306b\u95a2\u3057\u3066\u306f\u3001\u3053\u306e\u6642\u70b9\u3067\u307b\u307c\u60c5\u5831\u304c\u51fa\u63c3\u3063\u305f\u3053\u3068\u306b\u306a\u308b\u3002\n\nerl_db.c\n\u6700\u5f8c\u306ferl_db.c\u3002\n\u3053\u3053\u307e\u3067\u3067\u53d6\u308a\u4e0a\u3052\u305fethr_mutex.c\u304a\u3088\u3073erl_db_hash.c\u304c\u63d0\u4f9b\u3059\u308b\u69cb\u6210\u8981\u7d20\u3092\u3001\u3069\u306e\u3088\u3046\u306b\u5229\u7528\u3057\u3066\u3044\u308b\u304b\u3001\u3092\u4e2d\u5fc3\u306b\u898b\u3066\u3044\u304f\u3002\n\n\u95a2\u9023\u3059\u308b\u5909\u6570\n(read|write)_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u95a2\u9023\u3059\u308b\u5909\u6570\u306f(\u4e3b\u306b)\u4ee5\u4e0b\u306e\u56db\u3064\u3002\n\u524d\u8005\u4e8c\u3064\u306ferl_db_hash.c\u3067\u65e2\u51fa\u306a\u306e\u3067\u3001\u8aac\u660e\u306f\u5272\u611b\u3059\u308b\u3002\n\nDbTable.common.type\nDbTable.common.is_thread_safe\n\nDbTable.common.rwlock\n\n\u30c6\u30fc\u30d6\u30eb\u3067\u30b0\u30ed\u30fc\u30d0\u30eb\u306a(\u5168\u4f53\u30ed\u30c3\u30af\u7528\u306e)RW\u30ed\u30c3\u30af\n\n\n\nDbTable.common.meth\n\n\nDbTableMethod\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30c7\u30fc\u30bf\u304c\u4fdd\u6301\u3055\u308c\u308b\n\u4eca\u56de\u3067\u3044\u3048\u3070erl_db_hash.c\u306e\u30c7\u30fc\u30bf\u3068\u306a\u308b\n\n\n\n\n\u521d\u671f\u5316\u51e6\u7406\n\nets_new_2\u95a2\u6570\nets:new/2\u306b\u5bfe\u5fdc\u3059\u308bBIF\u3002\n(read|write)_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u76f4\u63a5\u53c2\u7167\u3055\u308c\u308b\u306e\u306f\u3053\u3053\u3060\u3051\u3002\n\u5185\u5bb9\u7684\u306b\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u306b\u5fdc\u3058\u305f\u30d5\u30e9\u30b0\u306e\u8abf\u6574\u51e6\u7406\u304c\u4e3b\u3002\n\nerl_db.c\nBIF_RETTYPE ets_new_2(BIF_ALIST_2)\n{\n/*** \u7701\u7565 ***/\n                else if (tp[1] == am_write_concurrency) {\n                    // `write_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n                    if (tp[2] == am_true) {\n                        is_fine_locked = 1;  // \u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u3092\u4f7f\u7528\u3059\u308b\n                    } else if (tp[2] == am_false) {\n                        is_fine_locked = 0;\n                    } else break;\n                }\n                else if (tp[1] == am_read_concurrency) {\n                    // `read_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n                    if (tp[2] == am_true) {\n                        frequent_read = 1; // \u4e26\u5217\u8aad\u307f\u8fbc\u307f\u6700\u9069\u5316\u3092\u6709\u52b9\u306b\u3059\u308b\n                    } else if (tp[2] == am_false) {\n                        frequent_read = 0;\n                    } else break;\n                }\n/*** \u7701\u7565 ***/\n    if (IS_HASH_TABLE(status)) {\n        meth = &db_hash;\n        if (is_fine_locked && !(status & DB_PRIVATE)) {\n            // \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb and \u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u3001\u306a\u3089`DB_FINE_LOCKED`\u30d5\u30e9\u30b0\u3092\u30bb\u30c3\u30c8\n            status |= DB_FINE_LOCKED;\n        }\n    }\n/*** \u7701\u7565 ***/\n    if (frequent_read && !(status & DB_PRIVATE))\n        status |= DB_FREQ_READ;  // `DB_FREQ_READ`\u30d5\u30e9\u30b0\u3092\u30bb\u30c3\u30c8\n/*** \u7701\u7565 ***/\n    tb->common.type = status & ERTS_ETS_TABLE_TYPES;\n    /* Note, 'type' is *read only* from now on... */\n/*** \u7701\u7565 ***/\n    // db_init_lock\u95a2\u6570\u3067\u3001\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u30ed\u30c3\u30af\u3092\u521d\u671f\u5316\n    db_init_lock(tb, status & (DB_FINE_LOCKED|DB_FREQ_READ),\n                 \"db_tab\", \"db_tab_fix\");\n/*** \u7701\u7565 ***/\n}\n\n\n\ndb_init_lock\u95a2\u6570\n\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u7528\u306eRW\u30ed\u30c3\u30af\u3067\u3042\u308bDbTable.common.rwlock\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u95a2\u6570\u3002\n\nerl_db.c\nstatic ERTS_INLINE void db_init_lock(DbTable* tb, int use_frequent_read_lock,\n                                     char *rwname, char* fixname)\n{\n    erts_smp_rwmtx_opt_t rwmtx_opt = ERTS_SMP_RWMTX_OPT_DEFAULT_INITER;\n\n   // NOTE: \n   // use_frequent_read_lock = status & (DB_FINE_LOCKED|DB_FREQ_READ)\n   // => `(read|write)_concurrency`\u306e\u3069\u3061\u3089\u304b\u304c`true`\u306a\u3089\u3001\u5168\u4f53RW\u30ed\u30c3\u30af\u306f\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u6700\u9069\u5316\u3055\u308c\u308b (\u7406\u7531\u306f\u5f8c\u8ff0)\n    if (use_frequent_read_lock)\n        rwmtx_opt.type = ERTS_SMP_RWMTX_TYPE_FREQUENT_READ;\n    if (erts_ets_rwmtx_spin_count >= 0)\n        rwmtx_opt.main_spincount = erts_ets_rwmtx_spin_count;\n    // \u5168\u4f53RW\u30ed\u30c3\u30af\u3092\u521d\u671f\u5316\n    erts_smp_rwmtx_init_opt_x(&tb->common.rwlock, &rwmtx_opt,\n                              rwname, tb->common.the_name);\n    erts_smp_mtx_init_x(&tb->common.fixlock, fixname, tb->common.the_name);\n\n    // is_thread_safe\u5909\u6570\u3082\u521d\u671f\u5316:\n    // - DB_FINE_LOCKED\u30d5\u30e9\u30b0\u304c\u7acb\u3063\u3066\u3044\u308b\u306a\u3089`false`\u306b\u306a\u308b\n    //   => \u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb(ex. erl_db_hash.c)\u5074\u3067\u306e\u30ed\u30c3\u30af\u7ba1\u7406\u304c\u5fc5\u8981\u306a\u3053\u3068\u3092\u793a\u3059\n    tb->common.is_thread_safe = !(tb->common.status & DB_FINE_LOCKED);\n}\n\n\n(read_concurrency\u306e\u5834\u5408\u3060\u3051\u3067\u306a\u304f)write_concurrency\u304ctrue\u306e\u5834\u5408\u3067\u3082\u3001\u5168\u4f53RW\u30ed\u30c3\u30af(common.rwlock)\u3092\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u6700\u9069\u5316\u3059\u308b\u7406\u7531\u306f\u4ee5\u4e0b\u306e\u901a\u308a:\n\n\u307e\u305a\u306fwrite_concurrency=false\u306e\u5834\u5408\u3092\u8003\u3048\u308b:\n\n\n\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u30ed\u30c3\u30af\u7ba1\u7406\u3092\u884c\u308f\u305aerl_db.c\u304c\u30ed\u30c3\u30af\u5468\u308a\u306e\u4e00\u5207\u306e\u8cac\u4efb\u3092\u6301\u3064\n\nerl_db.c\u306fcommon.rwlock\u3092\u7528\u3044\u3066\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af\u3092\u5b9f\u73fe\u3059\u308b\n\n\n\u8981\u7d20\u66f4\u65b0\u6642\u306b\u306f\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97 (\u4e26\u5217\u30a2\u30af\u30bb\u30b9\u4e0d\u53ef)\n\u8981\u7d20\u53c2\u7167\u6642\u306b\u306f\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97 (\u4e26\u5217\u30a2\u30af\u30bb\u30b9\u53ef\u80fd)\n\n\n\n\n\u6b21\u306bwrite_concurrency=true\u306e\u5834\u5408\u3092\u8003\u3048\u308b:\n\n\n\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af\u3092\u5b9f\u73fe\u3059\u308b\n\u4e26\u5217\u66f4\u65b0(\u66f8\u304d\u8fbc\u307f)\u3092\u5b9f\u73fe\u3059\u308b\u306e\u304c\u4e3b\u76ee\u7684\n\u305f\u3060\u3057\u3001\u3053\u306e\u5834\u5408\u3067\u3082erl_db.c\u304c\u8981\u7d20\u30a2\u30af\u30bb\u30b9\u6642\u306bcommon.rwlock\u3092\u4f7f\u3046\u306e\u306f\u5909\u308f\u3089\u306a\u3044\n\u300c\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u306b\u5bfe\u5fdc\u3057\u3066\u3082\u3001\u305d\u306e\u524d\u6bb5\u306eerl_db.c\u304c\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af\u3092\u4f7f\u3046\u306e\u3067\u306f\u610f\u5473\u304c\u306a\u3044\u306e\u3067\u306f\uff1f\u300d\u3068\u3044\u3046\u7591\u554f\u304c\u51fa\u3066\u304f\u308b\u3002\n\u89e3\u6c7a\u7b56:\n\n\n\nerl_db.c\u30ec\u30a4\u30e4\u30fc\u3067\u306f\u3001\u8981\u7d20\u66f4\u65b0\u306e\u5834\u5408\u3067\u3082\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\u3088\u3046\u306b\u3059\u308b(\u4f8b\u5916\u306f\u5f8c\u8ff0)\n\n\n\nerl_db.c\u30ec\u30a4\u30e4\u30fc\u3067\u306e\u66f8\u304d\u8fbc\u307f\u76f4\u5217\u5316\u304c\u9632\u3052\u308b\n\u9069\u5207\u306a\u30ed\u30c3\u30af\u3092\u7ba1\u7406\u3059\u308b\u8cac\u4efb\u306f\u3001\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u79fb\u308b \n\n\n\u8981\u7d20\u306e\u66f4\u65b0\u30fb\u53c2\u7167\u306e\u4e21\u65b9\u3067\u3001\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u304c\u4f7f\u308f\u308c\u308b\u306e\u3067\u3001\u305d\u308c\u304c\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3088\u3046\u306b\u8aad\u307f\u8fbc\u307f\u6700\u9069\u5316\u3092\u5e38\u306b\u6709\u52b9\u306b\u3059\u308b\n=> \u3053\u308c\u304cwrite_concurrency=true\u306e\u5834\u5408\u3067\u3082\u5168\u4f53\u30ed\u30c3\u30af\u306e\u8aad\u307f\u8fbc\u307f\u6700\u9069\u5316\u3092\u6709\u52b9\u306b\u3057\u3066\u3044\u308b\u7406\u7531\n\n\n\n\n\n\u3064\u307e\u308awrite_concurrency=true\u306e\u5834\u5408\u306f\u3001\u66f4\u65b0\u304b\u53c2\u7167\u304b\u306b\u95a2\u308f\u3089\u305acommon.rwlock\u3067\u306f\u3001\u5e38\u306b\u30ea\u30fc\u30c9\u30ed\u30c3\u30af\u304c\u7372\u5f97\u3055\u308c\u3001\u5b9f\u969b\u306e\u6574\u5408\u6027\u4fdd\u8a3c\u306e\u8cac\u4efb\u306f\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u59d4\u8b72\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u3053\u306e\u3088\u3046\u306a\u6319\u52d5\u3067\u3042\u308b\u306a\u3089\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u306e\u5834\u5408\u306f\u3001\u305d\u3082\u305d\u3082common.rwlock\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u826f\u3044\u3088\u3046\u306b\u601d\u3048\u308b\u304c\u3001\u4f8b\u3048\u3070\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u304c\u64cd\u4f5c\u5bfe\u8c61\u306b\u306a\u308b\u5834\u5408(ex. ets:delete/1)\u3084\u8907\u6570\u8981\u7d20\u3092\u30a2\u30c8\u30df\u30c3\u30af\u306b\u51e6\u7406\u3057\u305f\u5834\u5408(ex. ets:insert/2\u306e\u7b2c\u4e8c\u5f15\u6570\u304c\u30ea\u30b9\u30c8)\u306f\u3001\u6574\u5408\u6027\u3092\u62c5\u4fdd\u3059\u308b\u305f\u3081\u306bcommon.rwlock\u3092\u4f7f\u3063\u3066\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u306e\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u5b8c\u5168\u306b\u4e0d\u4f7f\u7528\u3068\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3002\n\n\u8981\u7d20\u30a2\u30af\u30bb\u30b9\u6642\u306e\u30ed\u30c3\u30af\u7372\u5f97\u304a\u3088\u3073\u89e3\u653e\n\u30c6\u30fc\u30d6\u30eb\u5185\u306e\u8981\u7d20\u3092\u64cd\u4f5c\u3059\u308b\u5834\u5408\u306fdb_lock(); tb->common.meth->\u64cd\u4f5c\u95a2\u6570(); db_unlock();\u3068\u3044\u3063\u305f\u30d1\u30bf\u30fc\u30f3\u304c\u5b9a\u756a\u3068\u306a\u308b\u3002\ndb_lock\u304a\u3088\u3073db_unlock\u306f\u3001\u5168\u4f53RW\u30ed\u30c3\u30af(tb->common.rwlock)\u306e\u7372\u5f97\u30fb\u89e3\u653e\u3092\u884c\u3046\u305f\u3081\u306e\u95a2\u6570\u3067\u3001\u5b9f\u88c5\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\nerl_db.c\ntypedef enum {\n    LCK_READ=1,     /* read only access */\n    LCK_WRITE=2,    /* exclusive table write access */\n    LCK_WRITE_REC=3, /* record write access */\n    LCK_NONE=4\n} db_lock_kind_t;\n\nstatic ERTS_INLINE void db_lock(DbTable* tb, db_lock_kind_t kind)\n{\n    if (tb->common.type & DB_FINE_LOCKED) {\n       /***\n         * NOTE: write_concurrency=true\u3001\u306e\u5834\u5408 (\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af)\n         ***/\n        if (kind == LCK_WRITE) {\n            // \u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u306e\u6392\u4ed6\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u306e\u307f\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\n            erts_smp_rwmtx_rwlock(&tb->common.rwlock);\n            tb->common.is_thread_safe = 1;\n        } else {\n            // \u53c2\u7167(kind=LOCK_READ) or \u5358\u4e00\u8981\u7d20\u66f4\u65b0(kind=LOCK_WRITE_REC)\u306e\u5834\u5408\u306f\u3001\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\n            erts_smp_rwmtx_rlock(&tb->common.rwlock);\n            ASSERT(!tb->common.is_thread_safe);\n        }\n    }\n    else\n    {\n        /***\n         * NOTE: write_concurrency=false\u3001\u306e\u5834\u5408 (\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af)\n         ***/\n        switch (kind) {\n        case LCK_WRITE:\n        case LCK_WRITE_REC:\n            // \u66f4\u65b0\u7cfb\u306e\u5834\u5408\u306f\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\n            erts_smp_rwmtx_rwlock(&tb->common.rwlock);\n            break;\n        default:\n            // \u53c2\u7167\u7cfb\u306e\u5834\u5408\u306f\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\n            erts_smp_rwmtx_rlock(&tb->common.rwlock);\n        }\n        ASSERT(tb->common.is_thread_safe);\n    }\n}\n\nstatic ERTS_INLINE void db_unlock(DbTable* tb, db_lock_kind_t kind)\n{\n    // NOTE: \u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3068\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u306e\u4f7f\u3044\u5206\u3051\u306f\u3001db_lock\u95a2\u6570\u3068\u540c\u69d8\n    if (tb->common.type & DB_FINE_LOCKED) {\n        if (kind == LCK_WRITE) {\n            ASSERT(tb->common.is_thread_safe);\n            tb->common.is_thread_safe = 0;\n            erts_smp_rwmtx_rwunlock(&tb->common.rwlock);\n        }\n        else {\n            ASSERT(!tb->common.is_thread_safe);\n            erts_smp_rwmtx_runlock(&tb->common.rwlock);\n        }\n    }\n    else {\n        ASSERT(tb->common.is_thread_safe);\n        switch (kind) {\n        case LCK_WRITE:\n        case LCK_WRITE_REC:\n            erts_smp_rwmtx_rwunlock(&tb->common.rwlock);\n            break;\n        default:\n            erts_smp_rwmtx_runlock(&tb->common.rwlock);\n        }\n    }\n}\n\n\n\u6700\u5f8c\u306bdb_lock\u3068do_unlock\u306e\u5b9f\u969b\u306e\u4f7f\u7528\u4f8b\u3068\u3057\u3066ets:member/2\u3068ets:insert/2\u306eBIF\u95a2\u6570\u3092\u8f09\u305b\u3066\u304a\u304f\u3002\n\nerl_db.c\nBIF_RETTYPE ets_member_2(BIF_ALIST_2)\n{\n    DbTable* tb;\n    int cret;\n    Eterm ret;\n\n    CHECK_TABLES();\n\n    // \u8981\u7d20\u30a2\u30af\u30bb\u30b9\u524d\u306b\u30ed\u30c3\u30af\u3092\u7372\u5f97\n    // NOTE: gb_get_table\u306e\u4e2d\u3067`db_lock(tb, LCK_READ)`\u304c\u547c\u3070\u308c\u308b\n    if ((tb = db_get_table(BIF_P, BIF_ARG_1, DB_READ, LCK_READ)) == NULL) {\n        BIF_ERROR(BIF_P, BADARG);\n    }\n\n    // \u30e1\u30f3\u30d0\u30fc\u5224\u5b9a\u306e\u5b9f\u969b\u306e\u51e6\u7406\u306f\u3001DbTableMeth\u306e\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u59d4\u8b72\n    cret = tb->common.meth->db_member(tb, BIF_ARG_2, &ret);\n\n    // \u30a2\u30af\u30bb\u30b9\u304c\u7d42\u308f\u3063\u305f\u306e\u3067\u30ed\u30c3\u30af\u3092\u89e3\u653e\n    db_unlock(tb, LCK_READ);\n\n    switch (cret) {\n    case DB_ERROR_NONE:\n        BIF_RET(ret);\n    case DB_ERROR_SYSRES:\n        BIF_ERROR(BIF_P, SYSTEM_LIMIT);\n    default:\n        BIF_ERROR(BIF_P, BADARG);\n    }\n}\n\nBIF_RETTYPE ets_insert_2(BIF_ALIST_2)\n{\n    DbTable* tb;\n    int cret = DB_ERROR_NONE;\n    Eterm lst;\n    DbTableMethod* meth;\n    db_lock_kind_t kind;\n\n    CHECK_TABLES();\n\n    // \u4f7f\u7528\u3059\u308b\u30ed\u30c3\u30af\u306e\u7a2e\u985e\u3092\u6c7a\u5b9a:\n    // - \u633f\u5165\u8981\u7d20\u304c\u5358\u4e00\u306a\u3089`LCK_WRITE_REC` (\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u6642\u306b\u306f\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3068\u306a\u308b)\n    // - \u633f\u5165\u8981\u7d20\u304c\u8907\u6570\u306a\u3089`LCK_WRITE` (\u5e38\u306b\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3068\u306a\u308b)\n    /* Write lock table if more than one object to keep atomicy */\n    kind = ((is_list(BIF_ARG_2) && CDR(list_val(BIF_ARG_2)) != NIL)\n            ? LCK_WRITE : LCK_WRITE_REC);\n\n   // \u8981\u7d20\u30a2\u30af\u30bb\u30b9\u524d\u306b\u30ed\u30c3\u30af\u3092\u7372\u5f97\n   // NOTE: gb_get_table\u306e\u4e2d\u3067`db_lock(tb, kind)`\u304c\u547c\u3070\u308c\u308b\n    if ((tb = db_get_table(BIF_P, BIF_ARG_1, DB_WRITE, kind)) == NULL) {\n        BIF_ERROR(BIF_P, BADARG);\n    }\n\n    // \u5b9f\u969b\u306e\u8981\u7d20\u633f\u5165\u51e6\u7406\u306f\u3001DbTableMeth\u306e\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u59d4\u8b72\n    meth = tb->common.meth;\n    if (is_list(BIF_ARG_2)) {\n        for (lst = BIF_ARG_2; is_list(lst); lst = CDR(list_val(lst))) {\n            cret = meth->db_put(tb, CAR(list_val(lst)), 0);\n            if (cret != DB_ERROR_NONE)\n                break;\n        }\n    } else {\n        cret = meth->db_put(tb, BIF_ARG_2, 0);\n    }\n\n    // \u30a2\u30af\u30bb\u30b9\u304c\u7d42\u308f\u3063\u305f\u306e\u3067\u30ed\u30c3\u30af\u3092\u89e3\u653e\n    db_unlock(tb, kind);\n\n    switch (cret) {\n    case DB_ERROR_NONE:\n        BIF_RET(am_true);\n    case DB_ERROR_SYSRES:\n        BIF_ERROR(BIF_P, SYSTEM_LIMIT);\n    default:\n        BIF_ERROR(BIF_P, BADARG);\n    }\n}\n\n\n\n\u305d\u306e\u4ed6\nets:select/2\u306e\u3088\u3046\u306a\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u3092\u8d70\u67fb\u3059\u308b\u95a2\u6570\u306e\u5834\u5408\u306f\u3001DB_FINE_LOCKED\u30d5\u30e9\u30b0\u306e\u6709\u7121\u3084is_thread_safe\u306e\u5024\u306b\u5fdc\u3058\u3066\u3001\u82e5\u5e72\u51e6\u7406\u304c\u5909\u308f\u3063\u3066\u304f\u308b\u306e\u3060\u304c\u672c\u7b4b\u306e\u8a71\u306b\u306f\u5f71\u97ff\u304c\u306a\u3044(\u3068\u601d\u3046)\u306e\u3067\u5272\u611b\u3059\u308b\u3002\n\n\u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\n\u4eca\u56de\u8abf\u3079\u305f\u7bc4\u56f2\u3067\u306eerl_db.c\u306b\u5bfe\u3059\u308b(read|write)_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f71\u97ff\u306e\u307e\u3068\u3081:\n\n\nerl_db.c\u306f\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u304c\u5bfe\u8c61\u306eRW\u30ed\u30c3\u30af\u3068\u4fdd\u6301\u3057\u3066\u3044\u308b\n\n(read|write)_concurrency\u306e\u3044\u305a\u308c\u304b\u304ctrue\u306e\u5834\u5408\u306f\u3001\u3053\u306eRW\u30ed\u30c3\u30af\u306f\u8aad\u307f\u8fbc\u307f\u6027\u80fd\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u3082\u306e\u304c\u4f7f\u7528\u3055\u308c\u308b\n\u8981\u7d20\u30a2\u30af\u30bb\u30b9\u6642\u306b\u306f\u3001\u3053\u306eRW\u30ed\u30c3\u30af\u304c\u7372\u5f97\u3055\u308c\u308b\u304c\u3001write_concurrency\u306e\u5024\u306b\u3088\u3063\u3066\u7372\u5f97\u3059\u308b\u30ed\u30c3\u30af\u306e\u7a2e\u985e\u304c\u5909\u308f\u3063\u3066\u304f\u308b:\n\n\n\nwrite_concurrency=false\u306e\u5834\u5408 (\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af):\n\u3000 - \u9069\u5207\u306a\u30ed\u30c3\u30af\u7ba1\u7406\u306e\u8cac\u4efb\u306ferl_db.c\u306b\u3042\u308b\n\n\n\u66f4\u65b0\u7cfb\u306e\u64cd\u4f5c\u306e\u5834\u5408\u306b\u306f\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3092\u3001\u53c2\u7167\u7cfb\u64cd\u4f5c\u306e\u5834\u5408\u306f\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3092\u3001\u7372\u5f97\u3059\u308b\n\n\n\nwrite_concurrency=true\u306e\u5834\u5408 (\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af):\n\n\n\u9069\u5207\u306a\u30ed\u30c3\u30af\u7ba1\u7406\u306e\u8cac\u4efb\u306f(\u307b\u307c)\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb(ex. erl_db_hash.c)\u306b\u3042\u308b\n\u53c2\u7167\u7cfb\u304a\u3088\u3073\u5358\u4e00\u8981\u7d20\u304c\u5bfe\u8c61\u306e\u66f4\u65b0\u7cfb\u306e\u5834\u5408\u306f\u3001\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\n\n\n\u66f4\u65b0\u7cfb\u64cd\u4f5c\u306e\u5834\u5408\u306b\u3001\u9069\u5207\u306a\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\u306e\u306f\u3001\u305d\u306e\u5148\u306e\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8cac\u4efb\n\n\n\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u3084\u8907\u6570\u8981\u7d20\u306e\u30a2\u30c8\u30df\u30c3\u30af\u66f4\u65b0\u304c\u95a2\u308f\u308b\u64cd\u4f5c\u306e\u5834\u5408\u306f\u3001\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\n\n\n\n\n\n\n\u4ee5\u4e0a\u3067(read|write)_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u95a2\u308f\u308b\u4e3b\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u306e\u30b3\u30fc\u30c9\u306f\u4e00\u901a\u308a\u8aad\u307f\u7d42\u308f\u3063\u305f\u3002\n\n\u307e\u3068\u3081\n\n\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u52b9\u679c\n\u3053\u308c\u307e\u3067\u306e\u8a71\u3092\u8e0f\u307e\u3048\u3066(read|write)_concurrency\u306e\u5024\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u3088\u308b\u52b9\u679c\u3092\u307e\u3068\u3081\u3066\u307f\u305f\u3002\n(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8aac\u660e\u3068\u7d50\u69cb\u5185\u5bb9\u304c\u88ab\u3063\u3066\u3044\u308b\u6c17\u304c\u3059\u308b)\n\n\u4e21\u65b9\u304cfalse (\u30c7\u30d5\u30a9\u30eb\u30c8)\n\n\u4e26\u5217\u66f8\u304d\u8fbc\u307f\u306b\u306f\u975e\u5bfe\u5fdc (\u30a2\u30af\u30bb\u30b9\u304c\u76f4\u5217\u5316\u3055\u308c\u308b)\n\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u5bfe\u5fdc\n\n\n \u305f\u3060\u3057\u7af6\u5408\u5ea6\u304c\u9ad8\u3044\u5834\u5408\u306b\u306f\u3001\u6027\u80fd\u304c\u52a3\u5316\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\n\n\n\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u306e\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u306f\u4e00\u756a\u5c0f\u3055\u3044\n\n\nread_concurrency=true\n\n\u4e26\u5217\u66f8\u304d\u8fbc\u307f\u306b\u306f\u975e\u5bfe\u5fdc (\u30a2\u30af\u30bb\u30b9\u304c\u76f4\u5217\u5316\u3055\u308c\u308b)\n\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u5bfe\u5fdc\n\n\n\u7af6\u5408\u5ea6\u304c\u9ad8\u3044\u5834\u5408\u3067\u3082\u3001\u6027\u80fd\u304c\u52a3\u5316\u3057\u306a\u3044(\u3057\u306b\u304f\u3044)\n\n\n\u66f8\u304d\u8fbc\u307f\u3068\u8aad\u307f\u8fbc\u307f\u304c\u4ea4\u4e92\u306b\u767a\u751f\u3059\u308b\u5834\u5408\u306f\u3001\u6027\u80fd\u304c\u52a3\u5316\u3057\u3084\u3059\u3044\n\n\n\u4e21\u8005\u306e\u5207\u308a\u66ff\u3048\u30b3\u30b9\u30c8\u304cread_concurrency=false\u306b\u6bd4\u3079\u3066\u9ad8\u3044\u305f\u3081\n\n\n\n\u8ad6\u7406\u30b3\u30a2\u6570 * \u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u30b5\u30a4\u30ba\u7a0b\u5ea6\u306e\u30e1\u30e2\u30ea\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u304c\u3042\u308b\n\n\nwrite_concurrency=true\n\n\u4e26\u5217\u66f8\u304d\u8fbc\u307f\u306b\u5bfe\u5fdc\n\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u5bfe\u5fdc\n\u30c6\u30fc\u30d6\u30eb\u306f64\u500b\u306e\u9818\u57df\u306b(\u8ad6\u7406\u7684\u306b)\u5206\u5272\u3055\u308c\u308b:\n\n\n\u7570\u306a\u308b\u9818\u57df\u306b\u5c5e\u3059\u308b\u8981\u7d20\u7fa4\u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u306f\u3001\u4e26\u5217\u5b9f\u884c\u304c\u53ef\u80fd\u3068\u306a\u308b\n\n\n\u66f8\u304d\u8fbc\u307f\u540c\u58eb or \u66f8\u304d\u8fbc\u307f\u3068\u8aad\u307f\u8fbc\u307f\u3001\u304c\u540c\u6642\u306b\u5b9f\u884c\u3067\u304d\u308b\n\u7af6\u5408\u5ea6\u304c\u9ad8\u3044\u5834\u5408\u306e\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306e\u6027\u80fd\u52a3\u5316\u3082\u5c11\u306a\u3044 (\u9818\u57df\u5206\u5272\u306b\u3088\u308a)\n\n\n\nread_concurency=false < write_concurrency=true < read_concurrency=true\u3068\u3044\u3063\u305f\u611f\u3058 \n\n\n\n\n\u540c\u3058\u9818\u57df\u306b\u5c5e\u3059\u308b\u8981\u7d20\u7fa4\u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u306fread_concurrency=false\u306e\u5834\u5408\u3068\u540c\u3058\u6027\u80fd\u7279\u6027\u3068\u306a\u308b\n\n\n\u66f8\u304d\u8fbc\u307f\u306f\u76f4\u5217\u5316\u3055\u308c\u3001\u9ad8\u3044\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u7af6\u5408\u306b\u306f\u5f31\u3044\n\n\n\n\n\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u5c11\u306a\u3044\u5206\u3001\u76f4\u5217\u30a2\u30af\u30bb\u30b9\u6642\u306e\u6027\u80fd\u306fwrite_concurrency=false\u306e\u65b9\u304c\u826f\u3044\n\n64 * RW\u30ed\u30c3\u30af\u306e\u30b5\u30a4\u30ba\u7a0b\u5ea6\u306e\u30e1\u30e2\u30ea\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u304c\u3042\u308b\n\n\n\u4e21\u65b9\u304ctrue\n\n\u4e26\u5217\u66f8\u304d\u8fbc\u307f\u306b\u5bfe\u5fdc\n\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u5bfe\u5fdc\n\u57fa\u672c\u7684\u306b\u306fwrite_concurrency=true\u306e\u307f\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3068\u540c\u3058\u7279\u6027\u3092\u5099\u3048\u308b\u306e\u3067\u3001\u4ee5\u964d\u306f\u5dee\u5206\u306e\u307f\u3092\u8a18\u8ff0\u3059\u308b\n\u30c6\u30fc\u30d6\u30eb\u306f64\u500b\u306e\u9818\u57df\u306b(\u8ad6\u7406\u7684\u306b)\u5206\u5272\u3055\u308c\u308b:\n\n\n\u7570\u306a\u308b\u9818\u57df\u306b\u5c5e\u3059\u308b\u8981\u7d20\u7fa4\u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u306f\u3001\u4e26\u5217\u5b9f\u884c\u304c\u53ef\u80fd\u3068\u306a\u308b\n\u540c\u3058\u9818\u57df\u306b\u5c5e\u3059\u308b\u8981\u7d20\u7fa4\u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u306fread_concurrency=true\u306e\u5834\u5408\u3068\u540c\u3058\u6027\u80fd\u7279\u6027\u3068\u306a\u308b\n\n\n\u9ad8\u3044\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u7af6\u5408\u306b\u306f\u5f37\u3044\u304c\u3001\u8aad\u307f\u8fbc\u307f\u3068\u66f8\u304d\u8fbc\u307f\u306e\u5207\u308a\u66ff\u308f\u308a\u306b\u5f31\u3044\n\n\n\nwrite_concurrency=true\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u4ee5\u4e0a\u3001\u4e00\u5b9a\u6570\u306e\u66f8\u304d\u8fbc\u307f\u306f\u3042\u308b\u3068\u4e88\u60f3\u3055\u308c\u308b\u306e\u3067\u3001\u5f8c\u8005\u306e\u7279\u6027\u306f\u7d50\u69cb\u75db\u3044\n\n\n\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u3068\u4e26\u5217\u66f8\u304d\u8fbc\u307f\u306e\u30d0\u30fc\u30b9\u30c8\u304c\u4ea4\u4e92\u306b\u3042\u308b\u3088\u3046\u306a\u72b6\u6cc1\u306b\u5411\u3044\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\n\n\n\n\n\n64 * \u8ad6\u7406\u30b3\u30a2\u6570 * \u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u30b5\u30a4\u30ba\u7a0b\u5ea6\u306e\u30e1\u30e2\u30ea\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u304c\u3042\u308b\n\n\n\u30b3\u30a2\u6570\u304c\u591a\u3044\u74b0\u5883\u3067\u306f\u3001\u666e\u901a\u306b\u6570\u5341MB\u3068\u304b\u884c\u304d\u305d\u3046\n\n\n\n\n\u500b\u4eba\u7684\u306a\u7d50\u8ad6\n\u57fa\u672c\u7684\u306b\u306f\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u9650\u306b\u5fdc\u3058\u3066\u300cprivate\u306a\u3089\u6307\u5b9a\u306a\u3057\u300d\u3001\u300cprotected\u306a\u3089read_concurrency=true\u300d\u3001\u300cpublic\u306a\u3089write_concurrency=true\u300d\u3092\u30d9\u30fc\u30b9\u3068\u3059\u308b\u306e\u304c\u826f\u3055\u305d\u3046\u306b\u601d\u3046\u3002\n\u5f8c\u306f\u3001\u5b9f\u969b\u306e\u4f7f\u7528\u7528\u9014\u306b\u5fdc\u3058\u3066\u8abf\u6574\u3092\u3059\u308b\u3002\n\u4f8b\u3048\u3070protected\u3067\u3082\u3001\u81ea\u30d7\u30ed\u30bb\u30b9\u306b\u3088\u308b\u66f8\u304d\u8fbc\u307f\u304c\u5e38\u6642\u767a\u751f\u3059\u308b\u3088\u3046\u306a\u3089write_concurrency=true\u306b\u3057\u3066\u307f\u308b\u3068\u304b\u3002\nread_concurrency\u3068write_concurrency\u306e\u4e21\u65b9\u3092true\u306b\u8a2d\u5b9a\u3059\u308b\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u6709\u52b9\u306b\u50cd\u304f\u5834\u9762\u304c\u304b\u306a\u308a\u9650\u3089\u308c\u3066\u304a\u308a\u3001\u304b\u3064\u30e1\u30e2\u30ea\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u3082\u5927\u304d\u3044\u306e\u3067\u3001\u57fa\u672c\u7684\u306b\u306f\u4f7f\u308f\u306a\u3044\u65b9\u91dd\u3068\u306a\u308a\u305d\u3046\u3002\nErlang\u3067\u306f\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u3092\u901a\u3057\u3066\u884c\u3046\u306e\u304c\u57fa\u672c\u3060\u304c\u3001\u305d\u308c\u3060\u3068\u3084\u308a\u3068\u308a\u3092\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u540c\u58eb\u304c\u4e00\u5bfe\u591a\u306e\u95a2\u4fc2(\u4fbf\u5b9c\u4e0a\u3001\u524d\u8005\u3092__\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9__\u3001\u5f8c\u8005\u3092__\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30d7\u30ed\u30bb\u30b9(\u7fa4)__\u3068\u547c\u3076\u3053\u3068\u306b\u3059\u308b)\u306b\u3042\u308b\u5834\u5408\u306b\u3001\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u304c\u8a70\u307e\u3063\u3066\u3057\u307e\u3044\u3001\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306e\u963b\u5bb3\u8981\u56e0\u3068\u306a\u308b\u3053\u3068\u304c\u3042\u308b\u3002\n\n\u305d\u3046\u3044\u3063\u305f\u6642\u306b\u306f[\u4ee5\u524d\u306e\u8a18\u4e8b](http://qiita.com/sile/items/f3a2d2bea0135847523d)\u3067\u66f8\u3044\u305f\u3088\u3046\u306b\u3001__protected__\u306a\u3044\u3057__public__\u306a\u30a2\u30af\u30bb\u30b9\u6a29\u9650\u306e[ETS](http://www.erlang.org/doc/man/ets.html)\u3092\u4f7f\u3063\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306b\u30b5\u30fc\u30d0\u30d7\u30ed\u30bb\u30b9\u3068\u306e\u9593\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u30d1\u30c3\u30b7\u30f3\u30b0\u304c\u884c\u308f\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u3001\u306e\u304c\u5b9a\u756a\u306e\u5bfe\u7b56\u3060\u3068\u601d\u3063\u3066\u3044\u308b\u3002\n\n\u305d\u3057\u3066\u81ea\u5206\u306e\u3053\u308c\u307e\u3067\u306e\u7528\u9014\u3067\u306f\u3001ETS\u3092\u4f7f\u3046\u5834\u5408\u3001\u8aad\u307f\u8fbc\u307f\u64cd\u4f5c\u304c(\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\u306b\u5bfe\u3057\u3066)\u5727\u5012\u7684\u306b\u591a\u3044\u3053\u3068\u304c\u307b\u3068\u3093\u3069\u3060\u3063\u305f\u306e\u3067\u3001\u7279\u306b\u6df1\u304f\u8003\u3048\u305a\u306b`ets:new(Id, [protected, {read_concurrency, true}])`\u3068\u3044\u3063\u305f\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u591a\u304b\u3063\u305f\u3002\n\n\u305f\u3060\u6700\u8fd1\u3001\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\u304c\u8aad\u307f\u8fbc\u307f\u64cd\u4f5c\u3068\u540c\u7a0b\u5ea6\u306b\u767a\u751f\u3059\u308b\u3088\u3046\u306a\u30b1\u30fc\u30b9\u306b\u906d\u9047\u3057`{write_concurrency, true}`\u3092\u6307\u5b9a\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u691c\u8a0e\u3059\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3060\u304c\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3060\u3060\u3051\u3067\u306f\u3001\u4eca\u4e00\u3064\u305d\u306e\u52b9\u679c\u304c(\u7279\u306b`read_concurrency`\u3068\u4f75\u7528\u3057\u305f\u5834\u5408)\u4e0d\u660e\u77ad\u3060\u3063\u305f\u306e\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8ffd\u3044\u3064\u3064\u8efd\u304f\u8abf\u3079\u3066\u307f\u305f\u3002\n\n\u203b \u306a\u304a\u3001\u305d\u3053\u307e\u3067\u8a73\u7d30\u306b\u8abf\u3079\u305f\u8a33\u3067\u3082\u306a\u3044\u306e\u3067\u9593\u9055\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u66f8\u3044\u3066\u3044\u308b\u53ef\u80fd\u6027\u3082\u3042\u308b\u305f\u3081\u3001\u53c2\u8003\u7a0b\u5ea6\u3068\u3057\u3066\u8aad\u3093\u3067\u8cb0\u3048\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\u3002\n\u203b \u305d\u3057\u3066\u7121\u8a08\u753b\u306b\u66f8\u3044\u3066\u3044\u305f\u3089\u7570\u69d8\u306b\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f...\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n===========\n\n\u6700\u521d\u306b[ets\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://www.erlang.org/doc/man/ets.html)\u304b\u3089`read_concurrency`\u304a\u3088\u3073`write_concurrency`\u306b\u3064\u3044\u3066\u306e\u8a18\u8ff0\u3092\u5f15\u7528\u3057\u3066\u304a\u304f\u3002\n\nread_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\n------------------------------\n\n>  Performance tuning. Default is `false`. When set to `true`, the table is optimized for concurrent read operations. When this option is enabled on a runtime system with SMP support, read operations become much cheaper; especially on systems with multiple physical processors. However, switching between read and write operations becomes more expensive. You typically want to enable this option when concurrent read operations are much more frequent than write operations, or when concurrent reads and writes comes in large read and write bursts (i.e., lots of reads not interrupted by writes, and lots of writes not interrupted by reads). You typically do not want to enable this option when the common access pattern is a few read operations interleaved with a few write operations repeatedly. In this case you will get a performance degradation by enabling this option. The `read_concurrency` option can be combined with the [write_concurrency](http://www.erlang.org/doc/man/ets.html#new_2_write_concurrency) option. You typically want to combine these when large concurrent read bursts and large concurrent write bursts are common.\n\n\u7d50\u69cb\u9577\u3044\u306e\u3067\u91cd\u8981\u305d\u3046\u306a\u3068\u3053\u308d\u3060\u3051\u3092\u610f\u8a33:\n\n- \u30c7\u30d5\u30a9\u30eb\u30c8\u306f`false`\n- `true`\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306f\u3001\u4f5c\u6210\u3055\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u306f__\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u64cd\u4f5c__\u306b\u6700\u9069\u5316\u3055\u308c\u308b\n- \u300c__\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u64cd\u4f5c__\u304c\u3001__\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c__\u3088\u308a\u3082\u983b\u7e41\u306b\u884c\u308f\u308c\u308b\u300d\u30b1\u30fc\u30b9\u3067\u6709\u52b9\n- \u300c__\u5c11\u6570\u306e\u8aad\u307f\u8fbc\u307f\u64cd\u4f5c__\u3068__\u5c11\u6570\u306e\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c__\u304c\u7e70\u308a\u8fd4\u3057\u767a\u751f\u3059\u308b\u300d\u30b1\u30fc\u30b9\u3067\u306f\u9006\u306b\u6027\u6027\u80fd\u304c\u52a3\u5316\u3059\u308b\n  - \u8aad\u307f\u8fbc\u307f\u64cd\u4f5c\u3068\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\u306e\u5207\u308a\u66ff\u3048\u306e\u30b3\u30b9\u30c8\u304c`false`\u306e\u5834\u5408\u3088\u308a\u9ad8\u304f\u306a\u308b\u305f\u3081\n- `write_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u306e\u4f75\u7528\u3082\u53ef\n  - __\u5927\u91cf\u306e\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u64cd\u4f5c\u306e\u30d0\u30fc\u30b9\u30c8__\u3068__\u5927\u91cf\u306e\u4e26\u5217\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c\u306e\u30d0\u30fc\u30b9\u30c8__\u306e\u4e21\u65b9\u304c\u767a\u751f\u3059\u308b\u5834\u5408\u306b\u6709\u7528\n\nwrite_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\n--------------------------------\n\n> Performance tuning. Default is `false`, in which case an operation that mutates (writes to) the table will obtain exclusive access, blocking any concurrent access of the same table until finished. If set to `true`, the table is optimized towards concurrent write access. Different objects of the same table can be mutated (and read) by concurrent processes. This is achieved to some degree at the expense of memory consumption and the performance of sequential access and concurrent reading. The `write_concurrency` option can be combined with the [read_concurrency](http://www.erlang.org/doc/man/ets.html#new_2_read_concurrency) option. You typically want to combine these when large concurrent read bursts and large concurrent write bursts are common (see the documentation of the [read_concurrency](http://www.erlang.org/doc/man/ets.html#new_2_read_concurrency) option for more information). Note that this option does not change any guarantees about [atomicy and isolation](http://www.erlang.org/doc/man/ets.html#concurrency). Functions that makes such promises over several objects (like `insert/2`) will gain less (or nothing) from this option.\n\n> In current implementation, table type `ordered_set` is not affected by this option. Also, the memory consumption inflicted by both `write_concurrency` and `read_concurrency` is a constant overhead per table. This overhead can be especially large when both options are combined\n\n\u3053\u3061\u3089\u3082\u91cd\u8981\u305d\u3046\u306a\u3068\u3053\u308d\u3060\u3051\u3092\u610f\u8a33:\n\n- \u30c7\u30d5\u30a9\u30eb\u30c8\u306f`false`\n  - \u66f8\u304d\u8fbc\u307f(\u66f4\u65b0)\u64cd\u4f5c\u6642\u306b\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u304c\u5bfe\u8c61\u306e\u6392\u4ed6\u30ed\u30c3\u30af\u304c\u53d6\u5f97\u3055\u308c\u308b\n  - \u305d\u306e\u9593\u3001\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u3088\u308b\u4e26\u5217\u30a2\u30af\u30bb\u30b9(read or write)\u306f\u30d6\u30ed\u30c3\u30af\u3059\u308b\n- `true`\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306f\u3001\u4f5c\u6210\u3055\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u306f__\u4e26\u5217\u66f8\u304d\u8fbc\u307f\u64cd\u4f5c__\u306b\u6700\u9069\u5316\u3055\u308c\u308b\n  - \u540c\u3058\u30c6\u30fc\u30d6\u30eb\u5185\u306e\u7570\u306a\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4e26\u5217\u64cd\u4f5c(\u8aad\u307f\u66f8\u304d)\u304c\u53ef\u80fd\u3068\u306a\u308b\n  - \u4ee3\u511f: \u30e1\u30e2\u30ea\u6d88\u8cbb\u91cf\u306e\u5897\u52a0\u3001\u9010\u6b21\u30a2\u30af\u30bb\u30b9\u304a\u3088\u3073\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306e\u6027\u80fd\u52a3\u5316\n- `read_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u4f75\u7528\u53ef\n- `write_concurrency=true`\u304c\u7121\u610f\u5473\u306a\u30b1\u30fc\u30b9:\n  - `insert/2`\u7b49\u3067\u8907\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u540c\u6642\u306b\u66f8\u304d\u8fbc\u3082\u3046\u3068\u3057\u305f\u5834\u5408\u306f\u52b9\u679c\u304c\u8584\u3044(or \u7121\u3044)\n  - `ordered_set`\u306e\u5834\u5408\u306f\u52b9\u679c\u304c\u7121\u3044 (\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u7cfb\u306e\u307f\u304c\u30b5\u30dd\u30fc\u30c8)\n- \u30e1\u30e2\u30ea\u6d88\u8cbb\u91cf(\u306e\u5897\u52a0)\u306b\u3064\u3044\u3066:\n  - `read_concurrency`\u304a\u3088\u3073`write_concurrency`\u306e\u6307\u5b9a\u306b\u3088\u308b\u5897\u52a0\u5206\u306f\u30c6\u30fc\u30d6\u30eb\u6bce\u306b\u4e00\u5b9a\n  - \u4e21\u65b9\u3092\u540c\u6642\u306b\u3057\u3066\u3044\u305f\u3089\u3001\u304b\u306a\u308a\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u304c\u5927\u304d\u304f\u306a\u308a\u5f97\u308b\n\n------\n\n\u3053\u308c\u3089\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\u3001\u305d\u308c\u305e\u308c\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u52b9\u679c\u304c\u4f55\u3068\u306a\u304f\u306f\u308f\u304b\u308b\u3051\u3069\u3001\u3084\u306f\u308a\u3044\u307e\u3044\u3061\u91c8\u7136\u3068\u3057\u306a\u3044\u3002\n\n\u5185\u90e8\u5b9f\u88c5\n======\n\n\u7d9a\u3044\u3066ETS\u306e\u5185\u90e8\u5b9f\u88c5\u3092\u8efd\u304f(?)\u8ffd\u3063\u3066\u307f\u308b\u3002\n(\u304b\u306a\u308a\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3053\u3068\u3082\u3042\u308a\u3001\u5185\u90e8\u5b9f\u88c5\u306b\u8208\u5473\u306e\u306a\u3044\u4eba\u306f\u3001\u3053\u306e\u7bc0\u3092\u4e38\u3054\u3068\u98db\u3070\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u554f\u984c\u306f\u306a\u3044\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f[OTP-18.1](https://github.com/erlang/otp/tree/OTP-18.1)\u306e\u3082\u306e\u3092\u53c2\u7167\u3059\u308b\u3002\n\n\u307e\u305fErlang/OTP\u306fSMP\u3092\u6709\u52b9\u306b\u3057\u3066\u30d3\u30eb\u30c9\u3055\u308c\u308b\u3053\u3068\u3092\u524d\u63d0\u3068\u3059\u308b\u3002\n(\u975eSMP\u306e\u5834\u5408\u306f\u3001\u305d\u3082\u305d\u3082\u4e26\u5217\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u306a\u304f\u306a\u308b\u306e\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e2d\u3067\u3082\u4e26\u5217\u7cfb\u306e\u51e6\u7406\u3084\u95a2\u6570\u306e\u5927\u534a\u304c`#ifdef`\u7b49\u306b\u3088\u3063\u3066\u7121\u52b9\u5316\u3055\u308c\u3066\u3044\u308b)\n\n\u95a2\u9023\u30d5\u30a1\u30a4\u30eb\u7fa4\n-----------------\n\n\u4eca\u56de\u3001\u4e3b\u306b\u53c2\u7167\u3057\u305f\u306e\u306f\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u7fa4:\n\n- lib/stdlib/src/ets.erl\n- erts/emulator/beam/erl_db.c\n- erts/emulator/beam/erl_db_hash.c\n- erts/lib_src/common/ethr_mutex.c\n\n__ets.erl__\u306f\u3001(\u4eca\u56de\u306e\u8a71\u306b\u95a2\u4fc2\u3059\u308b\u95a2\u6570\u7fa4\u306b\u3064\u3044\u3066\u306f)\u5358\u306bErlang\u7528\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3001\u95a2\u6570\u306e\u5b9f\u88c5\u306e\u307b\u3068\u3093\u3069\u306f`erlang:nif_error(undef)`\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u5b9f\u969b\u306e\u51e6\u7406\u306fC\u3067\u66f8\u304b\u308c\u305fBIF(built-in function)\u306b\u59d4\u8b72\u3055\u308c\u3066\u3044\u308b\u3002\n__erl_db.c__\u306f\u3001ETS\u306eBIF\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u63d0\u4f9b\u3001\u30c6\u30fc\u30d6\u30eb\u306b\u95a2\u3059\u308b\u5171\u901a\u51e6\u7406\u306e\u5b9f\u88c5\u3001\u5168\u4f53\u7684\u306a\u8abf\u6574\u51e6\u7406\u3001\u7b49\u3092\u62c5\u5f53\u3057\u3066\u3044\u308b\u3002\n__erl_db_hash.c__\u306f\u3001__erl_db_util.h__\u3067\u5b9a\u7fa9\u3055\u308c\u305f`DbTableMethod`\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9(\u69cb\u9020\u4f53)\u3092\u5099\u3048\u3066\u304a\u308a\u3001\u30cf\u30c3\u30b7\u30e5\u30fc\u30c6\u30fc\u30d6\u30eb\u306b\u57fa\u3065\u3044\u305f\u30c6\u30fc\u30d6\u30eb\u306e\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\uff08\u4ed6\u306b\u30c4\u30ea\u30fc\u3092\u7528\u3044\u305f\u5b9f\u88c5\u3092\u63d0\u4f9b\u3059\u308b__erl_db_tree.c__\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3082\u3042\u308b\u304c\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a18\u8f09\u306e\u901a\u308a\u3001\u3053\u3061\u3089\u306f`write_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u306f\u975e\u5bfe\u5fdc\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u5272\u611b\u3059\u308b)\u3002\n__ethr_mutex.c__\u306f\u3001\u76f8\u4e92\u6392\u4ed6\u7528\u306e\u5404\u7a2e\u95a2\u6570\u3092\u63d0\u4f9b\u3057\u3066\u304a\u308a\u3001erl_db\u7cfb\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u4ee5\u964d\u3067\u306f__erl_db.c__\u3001__erl_db_hash.c__\u3001__ethr_mutex.c__\u3092\u4e2d\u5fc3\u3068\u3057\u3066\u3001\u30dc\u30c8\u30e0\u30a2\u30c3\u30d7\u306b`(read|write)_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f7f\u308f\u308c\u65b9\u3092\u898b\u3066\u3044\u304f\u3053\u3068\u306b\u3059\u308b\u3002\n\nethr_mutex.c\n--------------\n\nETS\u3068\u306f\u72ec\u7acb\u3057\u305f\u5404\u7a2e\u76f8\u4e92\u6392\u4ed6\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b9f\u88c5\u95a2\u6570\u7fa4\u3092\u63d0\u4f9b\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u3002\n\n(\u4eca\u56de\u306e\u8a71\u306b\u95a2\u4fc2\u3059\u308b\u7bc4\u56f2\u3067\u306f)__erl_db.*c__\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306f\u3001\u30ea\u30fc\u30c0\u30fc/\u30e9\u30a4\u30bf\u30fc\u30fb\u30ed\u30c3\u30af(\u4ee5\u964d\u306f__RW\u30ed\u30c3\u30af__\u3068\u8868\u8a18)\u7cfb\u306e\u95a2\u6570\u304c\u4f7f\u7528\u3055\u308c\u308b\u3002\n\u203b \u88dc\u8db3: RW\u30ed\u30c3\u30af\u3067\u306f__\u4e26\u5217\u8aad\u307f\u8fbc\u307f__\u304c\u8a31\u5bb9\u3055\u308c\u308b (\u66f8\u304d\u8fbc\u307f\u306f\u76f4\u5217\u306e\u307f)\n\n\u3053\u306e\u30ec\u30a4\u30e4\u30fc\u3067\u306f`read_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u306e\u307f\u304c\u5f71\u97ff\u3059\u308b\u3002\n\n### read_concurrency\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f7f\u308f\u308c\u65b9\n\n#### \u521d\u671f\u5316\u6642\n\n##### ethr_rwmutex_opt\u69cb\u9020\u4f53\n\n`read_concurrency`\u3068\u3044\u3046\u540d\u524d\u304c\u76f4\u63a5__ethr_mutex.c__\u5185\u3067\u51fa\u73fe\u3059\u308b\u3053\u3068\u306f\u306a\u304f\u3001\u4e0a\u4f4d\u5c64(__erl_db.c__\u5185)\u3067\u3001\u4ee5\u4e0b\u306e`ethr_rwmutex_opt`\u69cb\u9020\u4f53\u306e`type`\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u3066\u304b\u3089\u6e21\u3055\u308c\u3066\u3044\u308b\u3002\n\n```c:ethr_mutex.h\ntypedef enum {\n    ETHR_RWMUTEX_TYPE_NORMAL,  // read_concurrency=false\u3001\u306b\u5bfe\u5fdc\n    ETHR_RWMUTEX_TYPE_FREQUENT_READ,  // read_concurrency=true\u3001\u306b\u5bfe\u5fdc\n    ETHR_RWMUTEX_TYPE_EXTREMELY_FREQUENT_READ // ethr_mutex.c\u5185\u90e8\u5229\u7528\u7528\n} ethr_rwmutex_type;\n\ntypedef struct {\n    ethr_rwmutex_type type; \n    ethr_rwmutex_lived lived;\n    int main_spincount;\n    int aux_spincount;\n} ethr_rwmutex_opt;\n```\n\n##### ethr_rwmutex\u69cb\u9020\u4f53\n\n`ethr_rwmutex_opt.type`\u306e\u5024\u306f\u3001\u6700\u7d42\u7684\u306b\u306f`ethr_rwmutex.tdata`\u306e\u5024\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\u3002\n\n```c:ethr_mutex.h\n#ifdef ETHR_USE_OWN_RWMTX_IMPL__\n\n// RW\u30ed\u30c3\u30af\u5b9f\u88c5\u7528\u306e\u69cb\u9020\u4f53\ntypedef struct ethr_rwmutex_ ethr_rwmutex;\nstruct ethr_rwmutex_ {\n    struct ethr_mutex_base_ mtxb;\n    ethr_rwmutex_type type;\n    ethr_ts_event *rq_end;\n    \n    // ethr_rwmutex_opt.type\u306e\u5024\u306b\u5fdc\u3058\u3066\u3001\u4ee5\u4e0b\u306e\u3069\u3061\u3089\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u4f7f\u308f\u308c\u308b\u304b\u304c\u6c7a\u5b9a\u3059\u308b:\n    // - ETHR_RWMUTEX_TYPE_NORMAL\u306e\u5834\u5408:\n    //    - `rs`\u304c\u4f7f\u308f\u308c\u308b\n    //    - \u30ed\u30c3\u30af\u7372\u5f97\u5f85\u6a5f\u4e2d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\n    //      - \u3064\u307e\u308a`ethr_rwmtx_readers_array__.waiting_readers`\u306b\u5bfe\u5fdc\u3059\u308b\n    // - \u305d\u308c\u4ee5\u5916\u306e\u5834\u5408(\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u6700\u9069\u5316\u3055\u308c\u308b):\n    //    - `ra`\u304c\u4f7f\u308f\u308c\u308b\n    //    - \u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u7fa4\u306f`ethr_rwmtx_readers_array__`\u3068\u3044\u3046\u914d\u5217\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u308b(\u8a73\u7d30\u306f\u5f8c\u8ff0)\n    union {\n        ethr_rwmtx_readers_array__ *ra;\n        int rs;\n    } tdata;\n};\n\n// \u30ea\u30fc\u30c0\u30fc\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30c7\u30fc\u30bf\u69cb\u9020\ntypedef union {\n    struct {\n        ethr_atomic32_t readers;\n        int waiting_readers;\n        int byte_offset;\n        ethr_rwmutex_lived lived;\n    } data;\n    char align__[ETHR_CACHE_LINE_SIZE];\n} ethr_rwmtx_readers_array__;\n\n#else /* pthread_rwlock */\n/***\n * NOTE:\n * \u30d3\u30eb\u30c9\u6642\u306b\u4ee5\u4e0b\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001pthread\u306e\u5b9f\u88c5\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \n * (\u305d\u306e\u5834\u5408\u3001\u304a\u305d\u3089\u304f`read_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u7121\u52b9\u3068\u306a\u308b(\u7121\u8996\u3055\u308c\u308b))\n * $ ./configure force_pthread_rwlocks=yes\n ***/\n````\n\n##### ethr_rwmutex_init_opt\u95a2\u6570\n\n`ethr_rwmutex.tdata`\u306e\u521d\u671f\u5316\u306f`ethr_rwmutex_init_opt`\u95a2\u6570\u306e\u4e2d\u3067\u884c\u308f\u308c\u308b\u3002\n\n\u7d30\u304b\u3044\u8abf\u6574\u51e6\u7406\u306f\u3044\u308d\u3044\u308d\u3042\u308b\u304c\u3001\u57fa\u672c\u7684\u306b\u306f`type`\u306e\u5024\u306b\u5fdc\u3058\u3066\u300c\u5358\u4e00\u306e\u30ab\u30a6\u30f3\u30bf\u3067\u30ea\u30fc\u30c0\u7fa4\u3092\u7ba1\u7406\u3059\u308b\u300d\u3042\u308b\u3044\u306f\u300c\u5229\u7528\u53ef\u80fd\u306a\u30b9\u30ec\u30c3\u30c9\u6570\u306b\u5fdc\u3058\u305f\u914d\u5217(`tdata.ra`)\u3067\u30ea\u30fc\u30c0\u30fc\u7fa4\u3092\u7ba1\u7406\u3059\u308b\u300d\u306e\u3069\u3061\u3089\u306b\u306a\u308b\u304b\u304c\u6c7a\u5b9a\u3055\u308c\u308b\u3002\n\n```c:ethr_mutex.c\nint\nethr_rwmutex_init_opt(ethr_rwmutex *rwmtx, ethr_rwmutex_opt *opt)\n{\n    int res;\n    ethr_rwmtx_readers_array__ *ra = NULL;\n    rwmtx->rq_end = NULL;\n    rwmtx->type = opt ? opt->type : ETHR_RWMUTEX_TYPE_NORMAL;\n    \n    /***\n      * NOTE: `type`\u306e\u5024\u306b\u5fdc\u3058\u3066\u3001\u30ea\u30fc\u30c0\u30fc\u7fa4\u7ba1\u7406\u7528\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u521d\u671f\u5316\u65b9\u6cd5\u304c\u5206\u5c90\n      ***/\n    switch (rwmtx->type) {\n    case ETHR_RWMUTEX_TYPE_FREQUENT_READ:\n        if (main_threads_array_size <= reader_groups_array_size) {\n            /* No point using reader groups... */\n\n          rwmtx->type = ETHR_RWMUTEX_TYPE_EXTREMELY_FREQUENT_READ;\n        }\n        /* Fall through */\n    case ETHR_RWMUTEX_TYPE_EXTREMELY_FREQUENT_READ: {\n        int length;\n\n        length = (rwmtx->type == ETHR_RWMUTEX_TYPE_EXTREMELY_FREQUENT_READ\n                  ? main_threads_array_size\n                  : reader_groups_array_size);\n\n        if (length == 1) {\n            /* No point using a frequent reader type... */\n            rwmtx->type = ETHR_RWMUTEX_TYPE_NORMAL;\n        }\n        else {\n            /***\n             * NOTE: \u4e26\u5217\u8aad\u307f\u8fbc\u307f\u3092\u6700\u9069\u5316\u3059\u308b\u5834\u5408(read_concurrency=true)\u306f\u3001\u3053\u3053\u306b\u6765\u308b\n             ***/\n            int ix;\n            \n            // `ethr_rwmtx_readers_array__`\u3092`length`\u5206\u3060\u3051\u78ba\u4fdd\u3002\n            // `length`\u306e\u5024\u306f\u3001`main_threads_array_size`\u304b`reader_groups_array_size`\u306e\u3069\u3061\u3089\u304b\u3067\u3001\n            // \u305d\u308c\u3089\u306e\u5024\u306f`erl_init.c:early_init`\u95a2\u6570\u5185\u3067\u5b9a\u307e\u308b\u3002\n            ra = alloc_readers_array(length,\n                                     (opt\n                                      ? opt->lived\n                                      : ETHR_RWMUTEX_UNKNOWN_LIVED));\n\n            rwmtx->tdata.ra = ra;\n\n            for (ix = 0; ix < length; ix++) {\n                // \u6700\u521d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306f0\n                ethr_atomic32_init(&rwmtx->tdata.ra[ix].data.readers, 0);\n                rwmtx->tdata.ra[ix].data.waiting_readers = 0;\n            }\n            break;\n        }\n    }\n    case ETHR_RWMUTEX_TYPE_NORMAL:\n        /***\n          * NOTE: \u4e26\u5217\u8aad\u307f\u8fbc\u307f\u3092\u6700\u9069\u5316\u3057\u306a\u3044\u5834\u5408(read_concurrency=false)\u306f\u3001\u3053\u3053\u306b\u6765\u308b\n          ***/\n        rwmtx->tdata.rs = 0; // \u6700\u521d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306f0\n        break;\n    }\n    // \u5185\u90e8\u3067\u4f7f\u7528\u3059\u308b\u30ed\u30c3\u30af\u3092\u521d\u671f\u5316\n    res = mtxb_init(&rwmtx->mtxb,\n                    default_rwmtx_main_spincount,\n                    opt ? opt->main_spincount : -1,\n                    default_rwmtx_aux_spincount,\n                    opt ? opt->aux_spincount : -1);\n\n    return res;\n}    \n```\n\n#### \u30ed\u30c3\u30af\u64cd\u4f5c\u6642\n\n__erl_db.c__\u7b49\u304b\u3089(\u4e3b\u306b)\u5229\u7528\u3055\u308c\u308bRW\u30ed\u30c3\u30af\u7cfb\u306e\u95a2\u6570\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u56db\u3064\u304c\u3042\u308b:\n\n- \u30e9\u30a4\u30bf\u30fc(\u66f8\u304d\u8fbc\u307f)\u7528\u30ed\u30c3\u30af\u64cd\u4f5c:\n  - \u30ed\u30c3\u30af\u7372\u5f97: `ethr_rwmutex_rwlock` \n  - \u30ed\u30c3\u30af\u89e3\u653e: `ethr_rwmutex_rwunlock`\n- \u30ea\u30fc\u30c0\u30fc(\u8aad\u307f\u8fbc\u307f)\u7528\u30ed\u30c3\u30af\u64cd\u4f5c:\n  - \u30ed\u30c3\u30af\u7372\u5f97: `ethr_rwmutex_rlock`\n  - \u30ed\u30c3\u30af\u89e3\u653e: `ethr_rwmutex_runlock`\n\n\u5168\u3066\u53d6\u308a\u4e0a\u3052\u308b\u3068\u5206\u91cf\u304c\u591a\u304f\u306a\u308a\u3059\u304e\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u4eca\u56de\u306f\u3088\u308a\u7279\u5fb4\u7684\u306a\u30ea\u30fc\u30c0\u30fc\u7528\u306e\u95a2\u6570\u306e\u307f\u3092\u898b\u3066\u3044\u304f\u3053\u3068\u306b\u3059\u308b\u3002\n\n##### \u30b9\u30c6\u30fc\u30c8\u3084\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u30ea\u30fc\u30c0\u30fc\u6570\u306e\u7ba1\u7406\u65b9\u6cd5\n\n\u5404\u95a2\u6570\u306e\u5b9f\u88c5\u306b\u5165\u308b\u524d\u306b\u3001\u307e\u305a\u306f\u30ed\u30c3\u30af\u306e\u30b9\u30c6\u30fc\u30c8\u3084\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306e\u7ba1\u7406\u65b9\u6cd5\u3092\u898b\u3066\u307f\u308b(\u7d50\u69cb\u7279\u6b8a\u306a\u306e\u3067)\u3002\n\n\u57fa\u672c\u7684\u306b\u3053\u308c\u3089\u306e\u60c5\u5831\u306f`ethr_rwmutex.mtxb.flgs`\u3068\u3044\u304632bit\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u306e\u3060\u304c\u3001\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3067\u3001\u3053\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u6271\u3044\u65b9\u304c\u5909\u308f\u3063\u3066\u304f\u308b\u3002 \n\n\u307e\u305a`read_concurrency=false`\u306e\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u89e3\u91c8\u3055\u308c\u308b:\n\n- \u4e0a\u4f4d3bit\u306f\u3001\u30ed\u30c3\u30af\u306e\u30b9\u30c6\u30fc\u30c8\u7ba1\u7406\u7528\u306e\u30d5\u30e9\u30b0\u3068\u3057\u3066\u4f7f\u7528\u3055\u308c\u308b:\n  - 31bit\u76ee: \u30ed\u30c3\u30af\u7372\u5f97\u30e9\u30a4\u30bf\u30fc\u306e\u5b58\u5728\u3092\u793a\u3059\u30d5\u30e9\u30b0 (\u30de\u30af\u30ed\u540d\u306f`ETHR_RWMTX_W_FLG__`)\n  - 30bit\u76ee: \u30ed\u30c3\u30af\u5f85\u6a5f\u30e9\u30a4\u30bf\u30fc\u306e\u5b58\u5728\u3092\u793a\u3059\u30d5\u30e9\u30b0 (\u30de\u30af\u30ed\u540d\u306f`ETHR_RWMTX_W_WAIT_FLG__`)\n  - 29bit\u76ee: \u30ed\u30c3\u30af\u5f85\u6a5f\u30ea\u30fc\u30c0\u30fc\u306e\u5b58\u5728\u3092\u793a\u3059\u30d5\u30e9\u30b0 (\u30de\u30af\u30ed\u540d\u306f`ETHR_RWMTX_R_WAIT_FLG__`)\n- \u305d\u308c\u4ee5\u4e0b\u306ebit\u7fa4\u306f\u3001\u30ed\u30c3\u30af\u7372\u5f97\u30ea\u30fc\u30c0\u30fc\u6570\u3092\u4fdd\u6301\u3059\u308b\u305f\u3081\u306e\u30ab\u30a6\u30f3\u30bf\u7528\u306b\u4f7f\u308f\u308c\u308b\n\n\u6b21\u306b`read_concurrency=true`\u306e\u5834\u5408:\n\n- \u4e0a\u4f4d3bit\u306b\u95a2\u3057\u3066\u306f`read_concurrency=false`\u306e\u5834\u5408\u3068\u540c\u69d8\n- \u52a0\u3048\u3066\u3001\u305d\u306e\u6b21\u306e2bit\u304c\u3001\u4ee5\u4e0b\u306e\u30d5\u30e9\u30b0\u7528\u306b\u4f7f\u7528\u3055\u308c\u308b:\n  - 28bit\u76ee: \u30ed\u30c3\u30af\u7372\u5f97\u30ea\u30fc\u30c0\u30fc\u306e\u5b58\u5728(\u306e\u53ef\u80fd\u6027)\u3092\u793a\u3059\u30d5\u30e9\u30b0 (\u30de\u30af\u30ed\u540d\u306f`ETHR_RWMTX_R_FLG__`)\n  - 27bit\u76ee: \u30a2\u30f3\u30ed\u30c3\u30af\u51e6\u7406\u304c\u30a2\u30dc\u30fc\u30c8\u3057\u305f\u3053\u3068\u3092\u793a\u3059\u30d5\u30e9\u30b0 (\u30de\u30af\u30ed\u540d\u306f`ETHR_RWMTX_R_ABRT_UNLOCK_FLG__`)\n- \u305d\u308c\u4ee5\u4e0b\u306ebit\u7fa4\u306f\u3001\u4fdd\u7559\u4e2d\u306e\u30a2\u30f3\u30ed\u30c3\u30af\u51e6\u7406\u306e\u6570\u3092\u4fdd\u6301\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b (\u4e0d\u78ba\u304b)\n\n`read_concurrency=true`\u306e\u5834\u5408\u306f\u3001\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306f\u3001(\u30ed\u30c3\u30af\u5185\u3067)\u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u30ab\u30a6\u30f3\u30bf\u3067\u306f\u306a\u304f\u3001\u30b9\u30ec\u30c3\u30c9(or \u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7)\u306b\u30ed\u30fc\u30ab\u30eb\u306a`ethr_rwmutex.tdata.ra[i].readers`\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4f7f\u3063\u3066\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u3002\n\n##### ethr_rwmutex_rlock\u95a2\u6570\n\n\u4ee5\u4e0b\u306f\u3001\u8aad\u307f\u8fbc\u307f\u7528\u30ed\u30c3\u30af\u95a2\u6570\u3092\u5b9f\u88c5\u3002\n\n```c:ethr_mutex.c\nvoid\nethr_rwmutex_rlock(ethr_rwmutex *rwmtx)\n{\n    ethr_sint32_t act;\n    switch (rwmtx->type) {\n    case ETHR_RWMUTEX_TYPE_NORMAL: {\n        /***\n         * NOTE: read_concurrency=false\u3001\u306e\u5834\u5408\n         ***/\n        ethr_sint32_t exp = 0;  // \u6700\u521d\u306f\u73fe\u5728\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306f0\u3068\u4eee\u5b9a (\u8907\u6570\u3044\u308b\u5834\u5408\u306f\u4e00\u56de\u7121\u99c4\u306a\u30eb\u30fc\u30d7\u304c\u8d70\u308b)\n        while (1) {\n            // CAS\u3092\u4f7f\u3063\u3066\u3001\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u53d6\u5f97(\u30ea\u30fc\u30c0\u30fc\u30ab\u30a6\u30f3\u30c8\u306e\u5897\u52a0)\u3092\u8a66\u307f\u308b\n            act = ethr_atomic32_cmpxchg_acqb(&rwmtx->mtxb.flgs, exp+1, exp);\n            if (act == exp)\n                break;  // \u7121\u4e8b\u306b\u30ab\u30a6\u30f3\u30c8\u3092\u5897\u3084\u305b\u305f\u306e\u3067\u3001\u30ed\u30c3\u30af\u7372\u5f97\n\n            // \u30e9\u30a4\u30bf\u30fc\u304c\u30ed\u30c3\u30af\u7372\u5f97\u4e2d(or \u7372\u5f97\u5f85\u6a5f\u4e2d)\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\n            if (act & (ETHR_RWMTX_W_FLG__|ETHR_RWMTX_W_WAIT_FLG__)) {\n                // \u7af6\u5408\u3059\u308b\u30e9\u30a4\u30bf\u30fc\u304c\u3044\u308b\u5834\u5408\u306f\u3001\u305d\u306e\u30e9\u30a4\u30bf\u30fc\u304c\u30ed\u30c3\u30af\u3092\u89e3\u653e\u3059\u308b\u307e\u3067\u5f85\u6a5f\u3059\u308b\u3002\n                //\n                // `rwmutex_normal_rlock_wait`\u5185\u3067\u306f\u3001\u5927\u96d1\u628a\u306b\u8a00\u3048\u3070\u4ee5\u4e0b\u306e\u51e6\u7406\u304c\u884c\u308f\u308c\u3066\u3044\u308b:\n                //   - \u4e00\u5b9a\u56de\u6570\u3060\u3051\u30b9\u30d4\u30f3(\u30d3\u30b8\u30fc\u30eb\u30fc\u30d7)\u3057\u3066\u3001\u30ed\u30c3\u30af\u89e3\u653e\u3092\u30c1\u30a7\u30c3\u30af\n                //   - \u898f\u5b9a\u56de\u6570\u3092\u8d85\u3048\u305f\u5834\u5408\u306f`event_wait`\u95a2\u6570\u3092\u7528\u3044\u3066\u3001\u30ed\u30c3\u30af\u89e3\u653e\u307e\u3067\u5f85\u6a5f\u3059\u308b\n                rwmutex_normal_rlock_wait(rwmtx, act);\n                break;\n            }\n            \n            // \u4ed6\u306e\u30ea\u30fc\u30c0\u30fc\u3068CAS\u304c\u7af6\u5408\u3057\u305f\u306e\u3067\u3001\u30ea\u30c8\u30e9\u30a4\u3059\u308b\n            // NOTE: \u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306e\u7af6\u5408\u5ea6\u304c\u9ad8\u3044\u3068\u3001\u3053\u3053\u306b\u6765\u308b(= \u6027\u80fd\u304c\u52a3\u5316\u3059\u308b)\u53ef\u80fd\u6027\u304c\u9ad8\u304f\u306a\u308b\n            exp = act;\n        }\n        break;\n    }\n\n    case ETHR_RWMUTEX_TYPE_FREQUENT_READ:\n    case ETHR_RWMUTEX_TYPE_EXTREMELY_FREQUENT_READ: {\n        /***\n          * NOTE: read_concurrency=true\u3001\u306e\u5834\u5408\n          ***/\n        ethr_ts_event *tse = ethr_get_ts_event();  // \u30b9\u30ec\u30c3\u30c9\u56fa\u6709\u30c7\u30fc\u30bf(?)\u3092\u53d6\u5f97\n        rwmutex_freqread_rlock(rwmtx, tse, 0); // \u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u53d6\u5f97\u3092\u8a66\u307f\u308b\n        ethr_leave_ts_event(tse);\n        break;\n    }\n    }\n}\n```\n\n`type`\u304c`ETHR_RWMUTEX_TYPE_NORMAL`\u306e\u5834\u5408\u306f\u3001(\u30e9\u30a4\u30bf\u30fc\u3068\u306e\u7af6\u5408\u3092\u8003\u3048\u306a\u3051\u308c\u3070)\u5358\u306b`mtxb.flgs`\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u30ea\u30fc\u30c0\u30fc\u6570\u3092CAS\u3092\u4f7f\u3063\u3066\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u3060\u3051\u3002\n\u305f\u3060\u3057`mtxb.flgs`\u306f\u5358\u4e00\u306e\u5909\u6570\u306a\u306e\u3067\u3001\u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u304c\u6570\u304c\u591a\u3044\u5834\u5408\u306b\u306f\u3001CAS\u306e\u5b9f\u884c\u304c\u7af6\u5408\u3057\u3066\u3057\u307e\u3044\u3001(\u30ea\u30c8\u30e9\u30a4\u304c\u591a\u304f\u306a\u308a)\u6027\u80fd\u304c\u52a3\u5316\u3057\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\n\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u6700\u9069\u5316\u7248\u3067\u3001\u305d\u306e\u554f\u984c\u306b\u3069\u3046\u5bfe\u51e6\u3057\u3066\u3044\u308b\u304b\u306f`rwmutex_freqread_rlock`\u95a2\u6570\u306e\u5b9f\u88c5\u3092\u8aad\u3081\u3070\u5206\u304b\u308b\u3002\n\n##### rwmutex_freqread_rlock\u95a2\u6570\n\n```c:ethr_mutex.c\nstatic int\nrwmutex_freqread_rlock(ethr_rwmutex *rwmtx, ethr_ts_event *tse, int trylock)\n{\n    // NOTE: \n    // `tse`\u306f\u3001(\u304a\u305d\u3089\u304f)\u30b9\u30ec\u30c3\u30c9\u56fa\u6709\u306e\u30c7\u30fc\u30bf\u306a\u306e\u3067\u3001\u3053\u308c\u306b\u5bfe\u3059\u308b\u8aad\u307f\u66f8\u304d\u306f\u4ed6\u306e\u30b9\u30ec\u30c3\u30c9\u306b\u306f\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u3002\n    //  => CPU\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30d5\u30e9\u30c3\u30b7\u30e5\u7b49\u306b\u7e4b\u304c\u308b\u30b9\u30ec\u30c3\u30c9\u9593\u540c\u671f\u304c\u4e0d\u8981\u3068\u306a\u308b\u306e\u3067\u3001\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u3092\u963b\u5bb3\u3057\u306a\u3044\n    int res = 0;\n    ethr_sint32_t act;\n\n    // 1. \u81ea\u30b9\u30ec\u30c3\u30c9(\u306b\u5bfe\u5fdc\u3059\u308b\u6dfb\u3048\u5b57)\u304c\u7ba1\u7406\u3059\u308b\u30ea\u30fc\u30c0\u30fc\u6570\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u3002\n    // \u6982\u306d\u53f3\u306e\u901a\u308a: ethr_atomic32_inc(rwmtx->tdata.ra[\u81ea\u30b9\u30ec\u30c3\u30c9\u7528\u306e\u6dfb\u3048\u5b57].data.readers)\n    rwmutex_freqread_rdrs_inc(rwmtx, tse);\n\n    ETHR_MEMORY_BARRIER; // ethr_atomics.h:#define ETHR_MEMORY_BARRIER ETHR_MEMBAR(ETHR_LoadLoad|ETHR_LoadStore|ETHR_StoreLoad|ETHR_StoreStore)\n\n    // 2. \u73fe\u5728\u306e\u30d5\u30e9\u30b0\u3092\u53d6\u5f97\u3059\u308b\n    act = ethr_atomic32_read_acqb(&rwmtx->mtxb.flgs);\n\n    // 3. \u5225\u306e\u30ea\u30fc\u30c0\u30fc\u304c\u3044\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af (\u3082\u3057\u5b58\u5728\u3059\u308b\u306a\u3089\u3001\u3053\u3053\u3067\u7372\u5f97\u51e6\u7406\u304c\u5b8c\u4e86)\n    if (act != ETHR_RWMTX_R_FLG__) {\n        // \u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u306e\u30ea\u30fc\u30c0\u30fc\u306f\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u304c\u8af8\u3005\u306e\u521d\u671f\u51e6\u7406\u3092\u62c5\u5f53\u3059\u308b\n        int wake_other_readers;\n\n        while (1) {\n            ethr_sint32_t exp, new;\n\n            wake_other_readers = 0;\n\n            if (act == 0)\n                // 4-a. \u30e9\u30a4\u30bf\u30fc\u3082\u3044\u306a\u3044 => \u672b\u5c3e\u306eCAS\u306b\u6210\u529f\u3059\u308c\u3070\u3001\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u7372\u5f97\u6210\u529f\n                new = act | ETHR_RWMTX_R_FLG__;\n            else if (act == ETHR_RWMTX_R_FLG__)\n                // 4-b. \u5225\u306e\u65b0\u898f\u30ea\u30fc\u30c0\u30fc\u3068\u7af6\u5408\u3057\u305f => \u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u306f\u8a31\u53ef\u3055\u308c\u308b\u306e\u3067\u30ed\u30c3\u30af\u7372\u5f97\u6210\u529f\n                break; /* Got it */\n            else if (act & (ETHR_RWMTX_W_FLG__|ETHR_RWMTX_W_WAIT_FLG__)) {\n                // 4-c. \u30e9\u30a4\u30bf\u30fc\u3068\u7af6\u5408\u3057\u305f\n                rwmutex_freqread_restore_failed_tryrlock(rwmtx, tse);\n                if (trylock)\n                    res = EBUSY; // trylock(= wait\u3057\u306a\u3044\u30e2\u30fc\u30c9)\u306a\u3089\u5931\u6557(\u7af6\u5408)\u30b9\u30c6\u30fc\u30bf\u30b9\u3067\u7d42\u4e86\n                else\n                    rwmutex_freqread_rlock_wait(rwmtx, tse); // \u30e9\u30a4\u30bf\u30fc\u306e\u7d42\u4e86\u3092\u5f85\u6a5f\n                break;\n            }\n            else if (act & ETHR_RWMTX_R_ABRT_UNLCK_FLG__) {\n                // 4-d. \u30a2\u30dc\u30fc\u30c8\u3057\u305f\u30a2\u30f3\u30ed\u30c3\u30af\u304c\u3042\u308b\u3089\u3057\u3044 (\u672a\u8abf\u67fb\u306a\u306e\u3067\u8a73\u7d30\u4e0d\u660e)\n                if ((act & ETHR_RWMTX_R_FLG__) == 0)\n                    ETHR_FATAL_ERROR__(EFAULT);\n                /*\n                 * An aborted runlock, not write locked, and no write\n                 * waiters, i.e., we got it...\n                 */\n                if (act & ETHR_RWMTX_R_WAIT_FLG__)\n                    wake_other_readers = 1;\n                break;\n            }\n            else {\n                // 4-e. \u305d\u308c\u4ee5\u5916\u306e\u30b1\u30fc\u30b9 (\u672a\u8abf\u67fb\u306a\u306e\u3067\u8a73\u7d30\u4e0d\u660e)\n                new = act | ETHR_RWMTX_R_FLG__;\n                if (act & ETHR_RWMTX_R_PEND_UNLCK_MASK__) {\n                    /*\n                     * Someone is doing tryrwlock (no writer and no\n                     * write waiters); we will try to abort that...\n                     */\n                    new |= ETHR_RWMTX_R_ABRT_UNLCK_FLG__;\n                }\n\n                if (act & ETHR_RWMTX_R_WAIT_FLG__)\n                    wake_other_readers = 1;\n            }\n\n            exp = act;\n            act = ethr_atomic32_cmpxchg_acqb(&rwmtx->mtxb.flgs, new, exp);\n            if (act == exp)\n                break;\n        }\n\n        if (wake_other_readers) // \u4ed6\u306e\u30ea\u30fc\u30c0\u30fc\u304c\u30ed\u30c3\u30af\u7372\u5f97\u3092\u5f85\u6a5f(wait)\u4e2d\u306a\u3089\u8d77\u3053\u3059\n            rwmutex_transfer_read_lock(rwmtx, act, 0);\n    }\n\n    return res;\n}\n```\n\n\u3053\u306e\u95a2\u6570\u3092\u898b\u308b\u3068\u3001\u30ed\u30c3\u30af\u7372\u5f97\u30ea\u30fc\u30c0\u30fc\u6570\u3092\u7ba1\u7406\u3059\u308b\u5834\u6240\u304c\u3001\u30ed\u30c3\u30af\u3067\u5171\u901a\u306e`rwmtx.flgs`\u304b\u3089\u3001\u30b9\u30ec\u30c3\u30c9(or \u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7)\u306b\u30ed\u30fc\u30ab\u30eb\u306a`rwmtx.tdata.ra[i].data.readers`\u306b\u79fb\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n(`rwmtx.flgs`\u306f\u3001\u300c\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u30ea\u30fc\u30c0\u30fc\u304c\u3044\u308b\u304b\u300d\u3084\u300c\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u30e9\u30a4\u30bf\u30fc\u304c\u3044\u308b\u304b\u300d\u3068\u3044\u3063\u305f\u30b9\u30c6\u30fc\u30c8\u7ba1\u7406\u306e\u307f\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u308b)\n\n\u3053\u306e\u5b9f\u88c5\u3067\u306f\u3001\u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u306e\u7af6\u5408\u5ea6\u304c\u9ad8\u3044\u5834\u5408\u304c\u4e00\u756a\u30b3\u30b9\u30c8\u304c\u5b89\u304f\u3001\u4ee5\u4e0b\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u30ed\u30c3\u30af\u304c\u7372\u5f97\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u308b:\n\n1. \u30b9\u30ec\u30c3\u30c9(\u30b0\u30eb\u30fc\u30d7)\u30ed\u30fc\u30ab\u30eb\u306a\u30ea\u30fc\u30c0\u30fc\u6570\u30ab\u30a6\u30f3\u30bf\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n2. \u30e1\u30e2\u30ea\u30d0\u30ea\u30a2\n3. `rwmtx.flgs`\u306e\u5024\u3092\u30a2\u30c8\u30df\u30c3\u30af\u306b\u8aad\u307f\u8fbc\u3080\n4. \u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u7528\u306e\u30d5\u30e9\u30b0\u304c\u7acb\u3063\u3066\u3044\u308c\u3070\u3001\u305d\u3053\u3067\u7372\u5f97\u5b8c\u4e86\n  - \u65e2\u306b\u5225\u306e\u30ea\u30fc\u30c0\u30fc\u304c\u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u306a\u3089\u3001\u3053\u306e\u30d5\u30e9\u30b0\u304c\u7acb\u3064\n  - \u305d\u306e\u3088\u3046\u306a\u30ea\u30fc\u30c0\u30fc\u304c\u3044\u306a\u3044\u5834\u5408\u306f`rwmtx.flgs`\u306b\u5bfe\u3059\u308bCAS\u306e\u767a\u884c\u304c\u4e00\u56de\u4f59\u5206\u3067\u5fc5\u8981\u3068\u306a\u308b\n\n`read_concurrency=false`\u306e\u5834\u5408\u3068\u7570\u306a\u308a\u3001\u30e9\u30a4\u30bf\u30fc\u3068\u7af6\u5408\u3057\u306a\u3044\u9650\u308a\u306f\u3001\u5e38\u306b\u5b9a\u6570\u30b9\u30c6\u30c3\u30d7\u3067\u30ed\u30c3\u30af\u304c\u7372\u5f97\u3067\u304d\u308b\u306e\u3067\u3001\u304b\u306a\u308a\u52b9\u7387\u304c\u826f\u3044\u3002\n\n##### ethr_rwmutex_runlock\u95a2\u6570\n\n\u6700\u5f8c\u306f\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u89e3\u653e\u51e6\u7406\u3002\n\n`read_concurrency=true`\u306e\u5834\u5408\u3001\u81ea\u30b9\u30ec\u30c3\u30c9(or \u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7)\u304c\u7ba1\u7406\u3059\u308b\u30ea\u30fc\u30c0\u30fc\u6570\u306f\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u304c\u300c\u5168\u4f53\u3067\u30ed\u30c3\u30af\u7372\u5f97\u30ea\u30fc\u30c0\u30fc\u6570\u304c0\u306b\u306a\u3063\u305f\u304b\u3069\u3046\u304b\u300d\u306f\u78ba\u8a8d\u3057\u3066\u3044\u306a\u3044\u306e\u304c\u7279\u5fb4\u7684 \u3002\n\u3064\u307e\u308a\u5168\u4f53\u3067\u30ea\u30fc\u30c0\u30fc\u304c\u4e00\u4eba\u3082\u3044\u306a\u304f\u306a\u3063\u305f\u5834\u5408\u3067\u3082`ETHR_RWMTX_R_FLAG__`\u30d5\u30e9\u30b0\u304c\u7acb\u3063\u305f\u307e\u307e\u3068\u306a\u308a\u3001\u305d\u306e\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u30b3\u30b9\u30c8\u306f\u3001\u4eca\u56de\u306f\u5272\u611b\u3055\u308c\u305f\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u7372\u5f97\u95a2\u6570(`ethr_rwmutex_rwlock`)\u306b\u62bc\u3057\u4ed8\u3051\u3089\u308c\u308b\u5f62\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n(`ETHR_RWMTX_R_FLAG__`\u30d5\u30e9\u30b0\u304c\u7acb\u3063\u3066\u3044\u308b\u5834\u5408\u3001`check_readers_array`\u95a2\u6570\u5185\u3067`tdata.ra`\u914d\u5217\u306e\u5168\u8981\u7d20\u304c\u8d70\u67fb\u3055\u308c\u3001\u30ea\u30fc\u30c0\u30fc\u306e\u5b58\u5728\u5224\u5b9a\u304c\u884c\u308f\u308c\u3066\u3044\u308b)\n\n```c:ethr_mutex.c\nvoid\nethr_rwmutex_runlock(ethr_rwmutex *rwmtx)\n{\n    ethr_sint32_t act;\n\n    switch (rwmtx->type) {\n    case ETHR_RWMUTEX_TYPE_NORMAL:\n        // NOTE: read_concurrency=false\u3001\u306e\u5834\u5408\n        act = ethr_atomic32_dec_read_relb(&rwmtx->mtxb.flgs); // \u30ea\u30fc\u30c0\u30fc\u6570\u3092\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\n        if ((act & ETHR_RWMTX_WAIT_FLGS__)\n            && (act & ~ETHR_RWMTX_WAIT_FLGS__) == 0) {\n            // \u5f85\u6a5f\u4e2d\u306e\u30e9\u30a4\u30bf\u30fc\u304c\u3044\u308b\u306a\u3089\u8d77\u3053\u3059\n            rwmutex_unlock_wake(rwmtx, 0, act, 0);\n        }\n        break;\n\n    case ETHR_RWMUTEX_TYPE_FREQUENT_READ:\n    case ETHR_RWMUTEX_TYPE_EXTREMELY_FREQUENT_READ: {\n        // NOTE: read_concurrency=true\u3001\u306e\u5834\u5408\n        ethr_ts_event *tse = ethr_get_ts_event();\n \n        // \u30b9\u30ec\u30c3\u30c9(or \u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7)\u6bce\u306b\u7ba1\u7406\u3057\u3066\u3044\u308b\u30ea\u30fc\u30c0\u30fc\u6570\u3092\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\n        act = rwmutex_freqread_rdrs_dec_read_relb(rwmtx, tse);\n\n        ETHR_MEMORY_BARRIER;\n\n        if (act == 0) {\n            // \u81ea\u30b9\u30ec\u30c3\u30c9(or \u30b9\u30ec\u30c3\u30c9\u30b0\u30eb\u30fc\u30d7)\u304c\u7ba1\u7406\u3059\u308b\u30ea\u30fc\u30c0\u30fc\u6570\u304c0\u306b\u306a\u3063\u305f\n            act = ethr_atomic32_read(&rwmtx->mtxb.flgs);\n            if (act != ETHR_RWMTX_R_FLG__)\n                // \u89e3\u653e\u4e2d\u306b\u30d5\u30e9\u30b0\u306e\u5024\u304c\u5909\u308f\u3063\u305f\u5834\u5408\u306f\u3001\u4ed6\u306e\u5f85\u6a5f\u8005(\u7af6\u5408\u8005)\u304c\u3044\u308b\u306e\u3067\u3001\u5f8c\u51e6\u7406\u3092\u3059\u308b\n                rwmutex_freqread_rdrs_dec_chk_wakeup(rwmtx, tse, act);\n        }\n\n        ethr_leave_ts_event(tse);\n        break;\n    }\n    }\n}\n```\n\n### \u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\n\n\u4eca\u56de\u8abf\u3079\u305f\u7bc4\u56f2\u3067\u306e__ethr_mutex.c__\u306b\u5bfe\u3059\u308b`read_concurrency`\u304a\u3088\u3073`write_concurrency`\u306e\u5f71\u97ff\u306e\u307e\u3068\u3081(\u9577\u3044...):\n\n- __erl_db.c__\u7b49\u306f\u3001(\u4e3b\u306b)__ethr_mutex.c__\u304c\u63d0\u4f9b\u3059\u308bRW\u30ed\u30c3\u30af\u7cfb\u306e\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\n  - \u4e21\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u304c\u3001\u4f7f\u7528\u3059\u308b\u30ed\u30c3\u30af\u306e\u7a2e\u985e\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u3053\u3068\u306f\u306a\u3044\n     - i.e. `read_concurrency=false`\u306e\u5834\u5408\u3067\u3082\u3001\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u4e26\u5217\u7372\u5f97\u81ea\u4f53\u306f\u8a31\u53ef\u3055\u308c\u308b\n  - RW\u30ed\u30c3\u30af\u306a\u306e\u3067\u3001\u30ed\u30c3\u30af\u306f\u5e38\u306b\u4ee5\u4e0b\u306e\u6027\u8cea\u3092\u6301\u3064:\n     - \u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u4e26\u5217(\u8907\u6570)\u7372\u5f97\u306f\u8a31\u53ef\u3055\u308c\u308b\n     - \u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u306e\u4e26\u5217(\u8907\u6570)\u7372\u5f97\u306f\u7981\u6b62\u3055\u308c\u308b\n     - \u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3068\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u540c\u6642\u7372\u5f97\u306f\u7981\u6b62\u3055\u308c\u308b\n- `write_concurrency`\u306e\u5024\u306f\u3001\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u5185\u306e\u95a2\u6570\u7fa4\u306b\u5bfe\u3057\u3066\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\n- `read_concurrency`\u306e\u5024\u306b\u5fdc\u3058\u3066\u3001\u4f7f\u7528\u3055\u308c\u308b\u5185\u90e8\u5b9f\u88c5\u304c\u300c\u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u300d\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u3082\u306e\u306b\u306a\u308b\u304b\u3069\u3046\u304b\u304c\u5909\u308f\u308b:\n    - `false`\u306e\u5834\u5408 (\u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u306b\u6700\u9069\u5316\u3055\u308c\u306a\u3044):\n       - \u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306e\u30ab\u30a6\u30f3\u30c8\u304c\u3001\u30ed\u30c3\u30af\u5185\u3067\u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u5358\u4e00\u5909\u6570\u3067\u7ba1\u7406\u3055\u308c\u308b\n       - \u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u7372\u5f97\u6642\u306b\u306f\u3001\u305d\u306e\u5909\u6570\u306b\u5bfe\u3059\u308bCAS(\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8)\u304c\u767a\u884c\u3055\u308c\u308b\n       - \u7af6\u5408\u5ea6\u304c\u9ad8\u304f\u306a\u308b\u307b\u3069\u3001CAS\u306b\u5931\u6557\u3057\u3066\u3001\u30ea\u30c8\u30e9\u30a4\u304c\u8d70\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u304f\u306a\u308b\n         - __\u6b20\u70b9: \u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u7372\u5f97\u7af6\u5408\u5ea6\u304c\u9ad8\u304f\u306a\u308b\u307b\u3069\u3001\u6027\u80fd\u304c\u52a3\u5316\u3059\u308b__\n    - `true`\u306e\u5834\u5408 (\u4e26\u5217\u30ea\u30fc\u30c0\u30fc\u306b\u6700\u9069\u5316\u3055\u308c\u308b):\n       - \u30ed\u30c3\u30af\u7372\u5f97\u4e2d\u306e\u30ea\u30fc\u30c0\u30fc\u6570\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u3001\u30b9\u30ec\u30c3\u30c9\u30ed\u30fc\u30ab\u30eb\u306a\u5909\u6570\u306b\u5206\u6563\u3057\u3066\u3044\u308b\n          - \u4ed6\u30b9\u30ec\u30c3\u30c9\u3068\u306eCAS\u306e\u7af6\u5408(and \u30ea\u30c8\u30e9\u30a4)\u304c\u306a\u304f\u306a\u308a\u3001\u5b9a\u6570\u30b9\u30c6\u30c3\u30d7\u3067\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u304c\u7372\u5f97\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u308b\n            - \u203b \u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3068\u7af6\u5408\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u9664\u304f\n          - __\u5229\u70b9: \u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u306e\u7372\u5f97\u7af6\u5408\u5ea6\u304c\u9ad8\u304f\u306a\u3063\u3066\u3082\u3001\u6027\u80fd\u304c\u307b\u3068\u3093\u3069\u52a3\u5316\u3057\u306a\u3044__\n       - \u305f\u3060\u3057\u3001\u305d\u306e\u4ee3\u511f\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u4e8c\u3064\u306e\u6b20\u70b9\u304c\u3042\u308b:\n          - __\u6b20\u70b9: \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u5897\u52a0\u3059\u308b__\n             - (\u82e5\u5e72\u4e0d\u6b63\u78ba\u3060\u304c\u5927\u96d1\u628a\u306b\u8a00\u3048\u3070)`\u8ad6\u7406\u30b3\u30a2\u6570 * \u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u30b5\u30a4\u30ba`\u7a0b\u5ea6\u306e\u30e1\u30e2\u30ea\u304c\u8ffd\u52a0\u3067\u5fc5\u8981\u3068\u306a\u308b\n             - \u4f8b: \u30b3\u30a2\u6570=8\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u30b5\u30a4\u30ba=64byte\u306a\u3089\u3001__512byte__\u304c\u8ffd\u52a0\u3067\u5fc5\u8981\n          - __\u6b20\u70b9: \u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u304b\u3089\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3078\u306e\u5207\u308a\u66ff\u308f\u308a\u306e\u30b3\u30b9\u30c8\u304c\u5897\u3048\u308b__\n             - \u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u7372\u5f97\u6642\u306b\u300c\u672c\u5f53\u306b\u30ea\u30fc\u30c0\u30fc\u304c\u4e00\u4eba\u3082\u3044\u306a\u3044\u304b\u300d\u3092\u8abf\u3079\u308b\u305f\u3081\u306b\u3001\u5168\u3066\u306e\u30b9\u30ec\u30c3\u30c9\u306e\u56fa\u6709\u30c7\u30fc\u30bf\u3092\u64cd\u4f5c\u3057\u3066\u3001\u30ea\u30fc\u30c0\u30fc\u6570\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b(\u5834\u5408\u304c\u3042\u308b)\n             - `read_concurrency=false`\u306e\u5834\u5408\u306f\u3001\u5358\u4e00\u306e\u5909\u6570\u3092\u53c2\u7167\u3059\u308c\u3070\u3001\u30ea\u30fc\u30c0\u30fc\u6570\u304c\u628a\u63e1\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u8d70\u67fb\u306f\u4e0d\u8981\n\nerl_db_hash.c\n---------------\n\n\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u3092\u7528\u3044\u305fETS\u30c6\u30fc\u30d6\u30eb\u306e\u5b9f\u88c5\u3002\n\n\u3053\u306e\u30c6\u30fc\u30d6\u30eb\u5b9f\u88c5\u306f__erl_db_util.h__\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b`DbTableMethod`\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9(\u69cb\u9020\u4f53)\u3092\u5099\u3048\u3066\u304a\u308a\u3001\u305d\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u901a\u3057\u3066__erl_db.c__\u304b\u3089\u4f7f\u7528\u3055\u308c\u308b\u3002\n\n\u307e\u305f__erl_db_hash.c__\u306f\u3001\u5185\u90e8\u30ed\u30c3\u30af\u7528\u306b`ethr_mutex.c`\u304c\u63d0\u4f9b\u3059\u308bRW\u30ed\u30c3\u30af\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3002\n\n### \u7c97\u7c92\u5ea6\u30ed\u30c3\u30af\u3068\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\n\n\u307e\u305a\u6700\u521d\u306b__erl_db_hash.c__\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8(\u30b3\u30e1\u30f3\u30c8)\u306e__SMP__\u306e\u90e8\u5206\u3092\u5f15\u7528\u3059\u308b\u3002\n\n```c:erl_db_hash.c\n/* SMP:\n** The hash table supports two different locking \"modes\",\n** coarse grained and fine grained locking.\n**\n** Coarse grained locking relies entirely on the caller (erl_db.c) to obtain\n** the right kind of lock on the entire table depending on operation (reading\n** or writing). No further locking is then done by the table itself.\n**\n** Fine grained locking is supported by this code to allow concurrent updates\n** (and reading) to different parts of the table. This works by keeping one\n** rw-mtx for every N'th bucket. Even dynamic growing and shrinking by\n** rehashing buckets can be done without exclusive table lock.\n**\n** A table will support fine grained locking if it is created with flag\n** DB_FINE_LOCKED set. The table variable is_thread_safe will then indicate\n** if operations need to obtain fine grained locks or not. Some operations\n** will for example always use exclusive table lock to guarantee\n** a higher level of atomicy.\n*/\n```\n\n\u3053\u308c\u3092\u8aad\u3080\u3068__erl_db_hash.c__\u306f\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306e\u5b9f\u88c5\u3068\u3057\u3066\u3001\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af(Coarse grained lock)\u3068\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af(Fine grained lock)\u3001\u306e\u4e8c\u3064\u306b\u57fa\u3065\u304f\u3082\u306e\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n\n\u305d\u3057\u3066\u300c`DB_FINE_LOCKED`\u30d5\u30e9\u30b0\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u304c\u4f7f\u7528\u3055\u308c\u308b\u300d\u3068\u3042\u308b\u304c\u3001\u3053\u308c\u306f`write_concurrency=true`\u306e\u30b1\u30fc\u30b9\u306b\u5bfe\u5fdc\u3059\u308b\u3002 \n\n\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af\u306e\u5834\u5408(\u3064\u307e\u308a`write_concurrency=false`)\u306f\u3001\u3053\u306e\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u81ea\u4f53\u306f\u30ed\u30c3\u30af\u306e\u7ba1\u7406\u3092\u4e00\u5207\u884c\u308f\u305a\u306b\u3001\u305d\u306e\u5229\u7528\u5074(__erl_db.c__)\u304c\u8aad\u307f\u8fbc\u307f/\u66f8\u304d\u8fbc\u307f\u6642\u306b\u9069\u5207\u306b\u30ed\u30c3\u30af\u3092\u78ba\u4fdd\u3057\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u3066\u52d5\u4f5c\u3059\u308b\u3002\n(\u305d\u3057\u3066__erl_db.c__\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u6bce\u306b\u5358\u4e00\u306eRW\u30ed\u30c3\u30af\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u3001\u66f8\u304d\u8fbc\u307f\u7af6\u5408\u306b\u5f31\u3044)\n\n\u305d\u308c\u306b\u5bfe\u3057\u3066\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u306e\u5834\u5408\u306f\u3001`ethr_mutex.c`\u304c\u63d0\u4f9b\u3059\u308bRW\u30ed\u30c3\u30af\u3092\u4f7f\u3063\u3066\u3001\u8981\u7d20\u306e\u66f4\u65b0\u3084\u691c\u7d22\u6642\u306b\u81ea\u524d\u3067\u30ed\u30c3\u30af\u3092\u7ba1\u7406\u3059\u308b (\u3053\u3061\u3089\u306f\u9006\u306b__erl_db.c__\u5074\u3067\u306f\u4e0d\u8981\u306a\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3057\u306a\u3044\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u308b\u3002__erl_db.c__\u3068__erl_db_hash.c__\u306e\u5354\u8abf\u65b9\u6cd5\u306e\u8a73\u7d30\u306b\u95a2\u3057\u3066\u306f\u5f8c\u8ff0)\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u52d5\u4f5c\u3068\u306a\u308b:\n\n- \u30c6\u30fc\u30d6\u30eb\u304c`DB_HASH_LOCK_CNT`\u500b\u306e\u9818\u57df\u306b(\u8ad6\u7406\u7684\u306b)\u5206\u5272\u3055\u308c\u308b\n  - `DB_HASH_LOCK_CNT`\u306e\u5024\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f`64`\n  - configure\u6642\u306b`with_ets_write_concurrency_locks`\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u5909\u66f4\u53ef\u80fd\n- \u305d\u308c\u305e\u308c\u306e\u9818\u57df\u306b\u5bfe\u3057\u3066\u4e00\u3064\u306eRW\u30ed\u30c3\u30af\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\n- \u305d\u306e\u9818\u57df\u306b\u5c5e\u3059\u308b\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5834\u5408\u306f\u3001\u4e8b\u524d\u306b\u5bfe\u5fdc\u3059\u308bRW\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\n  - \u66f4\u65b0\u7cfb\u306a\u3089\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3001\u53c2\u7167\u7cfb\u306a\u3089\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\n\n\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u3067\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u3078\u306e\u66f4\u65b0\u30a2\u30af\u30bb\u30b9\u304c\u7af6\u5408\u3057\u305f\u5834\u5408\u3067\u3082\u3001\u9818\u57df\u304c\u88ab\u3089\u306a\u3051\u308c\u3070\u5225\u3005\u306e\u30ed\u30c3\u30af\u304c\u4f7f\u7528\u3055\u308c\u308b\u306e\u3067\u3001\u4e92\u3044\u3092\u90aa\u9b54\u3059\u308b\u3053\u3068\u304c\u306a\u304f\u3001\u4e26\u5217\u5ea6\u304c\u9ad8\u307e\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u308b\u3002\n\n\u3064\u307e\u308a`write_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306e`true`\u3068`false`\u304c\u3001\u305d\u308c\u305e\u308c__\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af__\u3068__\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af__\u306b\u5bfe\u5fdc\u3057\u3001\u524d\u8005\u3067\u3042\u308c\u3070\u66f8\u304d\u8fbc\u307f\u7af6\u5408\u306b\u3082\u5f37\u3044\u3067\u3042\u308d\u3046\u3001\u3068\u3044\u3046\u306e\u304c__erl_db_hash.c__\u306e\u57fa\u672c\u65b9\u91dd\u3068\u306a\u308b\u3002\n\n\u306a\u304a`read_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u306b\u95a2\u3057\u3066\u306f\u3001`write_concurrency=true`\u306e\u30b1\u30fc\u30b9\u3067\u3060\u3051\u53c2\u7167\u3055\u308c\u308b(\u8a73\u7d30\u306f\u5f8c\u8ff0)\u3002\n\n### \u5b9f\u88c5\n\n\u4ee5\u964d\u3067\u306f__erl_db_hash.c__\u306e\u5b9f\u88c5\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u304f(\u30aa\u30d7\u30b7\u30e7\u30f3\u95a2\u9023\u90e8\u5206\u306e\u307f)\u3002\n\n#### \u5909\u6570\u3084\u30d5\u30e9\u30b0\n\n\u307e\u305a\u306f`(read|write)_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u95a2\u9023\u3059\u308b\u3001__erl_db_hash.c__\u5185\u3067\u53c2\u7167\u3055\u308c\u308b\u5909\u6570\u3084\u30d5\u30e9\u30b0\u306b\u3064\u3044\u3066\u306e\u8aac\u660e\u3002\n\u306a\u304a\u3001\u4ee5\u4e0b\u306e\u5909\u6570\u3084\u30d5\u30e9\u30b0\u306e\u8a2d\u5b9a\u304a\u3088\u3073\u66f4\u65b0\u81ea\u4f53\u306f__erl_db.c__\u5185\u3067\u884c\u308f\u308c\u308b\u3002__erl_db_hash.c__\u306f\u6e21\u3055\u308c\u305f\u5024\u3092\u53c2\u7167\u3059\u308b\u306e\u307f\u3067\"(read|write)_concurrency\"\u3068\u3044\u3063\u305f\u6587\u8a00\u304c\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u5185\u306b\u76f4\u63a5\u51fa\u3066\u304f\u308b\u3053\u3068\u3082\u306a\u3044\u3002\n\n- \u5909\u6570: `DbTable.common.type`\n  - \u30c6\u30fc\u30d6\u30eb\u306e\u30bf\u30a4\u30d7\u3092\u8868\u3059\u5909\u6570\n  - `(read|write)_concurrency`\u306e\u5024\u306b\u5fdc\u3058\u3066\u3001\u4ee5\u4e0b\u306e\u30d5\u30e9\u30b0\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b\n     - `read_concurrency=true`\u306e\u5834\u5408: `DB_FREQ_READ`\u30d5\u30e9\u30b0\n     - `write_concurrency=true`\u306e\u5834\u5408: `DB_FINE_LOCKED`\u30d5\u30e9\u30b0\n- \u5909\u6570: `DbTable.common.is_thread_safe`\n  - __erl_db_hash.c__\u304c\u3001\u81ea\u524d\u30ed\u30c3\u30af\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u305f\u3081\u306e\u5909\u6570\n     - \u5024\u304c`true`\u306e\u5834\u5408\u306f\u3001\u524d\u6bb5\u3067\u5b89\u5168\u6027\u304c\u4fdd\u969c\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u81ea\u524d\u30ed\u30c3\u30af\u306f\u4e0d\u8981\n  - `write_concurrency=false`\u306e\u5834\u5408\u306f\u3001\u5e38\u306b`true`\u3068\u306a\u308b\n  - `write_concurrency=true`\u306e\u5834\u5408\u3067\u3082\u3001__erl_db.c__\u304c\u9069\u5207\u306a\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3057\u3066\u3044\u308b\u5834\u5408\u306f`true`\u306b\u306a\u308b\n     - \u4f8b\u3048\u3070__erl_db.c__\u5185\u3067\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u30ed\u30c3\u30af\u304c\u7372\u5f97\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u3067\u3001\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306e\u5404\u7a2e\u64cd\u4f5c\u304c\u884c\u308f\u308c\u308b\u5834\u5408\n  - `DbTable.common.type`\u3068\u7570\u306a\u308a\u3001\u5b9f\u884c\u4e2d\u306b\u5024\u304c\u5909\u52d5\u3059\u308b\n\n\u4e0a\u8a18\u3092\u8e0f\u307e\u3048\u305f\u4e0a\u3067\u3001\u6b21\u306b\u95a2\u9023\u3059\u308b\u5404\u95a2\u6570\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u304f\u3002\n\n\u57fa\u672c\u7684\u306b`(read|write)_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306e\u751f\u6210\u3068\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6642\u306e\u524d\u51e6\u7406\u3001\u304f\u3089\u3044\u306b\u3057\u304b\u5f71\u97ff\u3092\u4e0e\u3048\u306a\u3044\u306e\u3067\u3001\u898b\u308b\u3079\u304d\u30b3\u30fc\u30c9\u306e\u91cf\u306f\u5c11\u306a\u3044\u3002\n\n#### \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u751f\u6210: db_create_hash\u95a2\u6570\n\n\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306e\u751f\u6210\u6642\u306b`(read|write)_concurrency`\u306e\u5024\u306b(\u9593\u63a5\u7684\u306b)\u5fdc\u3058\u3066\u3001\u81ea\u524d\u30ed\u30c3\u30af\u3092\u4f7f\u7528\u3059\u308b\u304b\u3069\u3046\u304b\u304c\u6c7a\u5b9a\u3055\u308c\u308b\u3002\n\n```c:erl_db_hash.c\nint db_create_hash(Process *p, DbTable *tbl)\n{\n    DbTableHash *tb = &tbl->hash;\n\n    erts_smp_atomic_init_nob(&tb->szm, SEGSZ_MASK);\n    erts_smp_atomic_init_nob(&tb->nactive, SEGSZ);\n    erts_smp_atomic_init_nob(&tb->fixdel, (erts_aint_t)NULL);\n    erts_smp_atomic_init_nob(&tb->segtab, (erts_aint_t)NULL);\n    SET_SEGTAB(tb, alloc_ext_seg(tb,0,NULL)->segtab);\n    tb->nsegs = NSEG_1;\n    tb->nslots = SEGSZ;\n\n    erts_smp_atomic_init_nob(&tb->is_resizing, 0);\n    \n    // `(write|read)_concurrency`\u304c\u95a2\u4fc2\u3057\u3066\u304f\u308b\u306e\u306f\u3001\u3053\u306e\u4e2d\n    if (tb->common.type & DB_FINE_LOCKED) {\n        /***\n          * NOTE: write_concurrency=true\u3001\u306e\u5834\u5408\n          ***/\n        erts_smp_rwmtx_opt_t rwmtx_opt = ERTS_SMP_RWMTX_OPT_DEFAULT_INITER;\n        int i;\n        if (tb->common.type & DB_FREQ_READ)\n            /***\n              * NOTE: read_concurrency=true\u3001\u306e\u5834\u5408\n              * \u5404\u9818\u57df\u3092\u7528\u306eRW\u30ed\u30c3\u30af\u304c\u3001\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u6642\u306b\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3088\u3046\u306b\u3059\u308b(\u8a73\u7d30\u306f\u300cethr_mutex.c\u300d\u3092\u53c2\u7167)\n              ***/\n            rwmtx_opt.type = ERTS_SMP_RWMTX_TYPE_FREQUENT_READ;\n        if (erts_ets_rwmtx_spin_count >= 0)\n            rwmtx_opt.main_spincount = erts_ets_rwmtx_spin_count;\n\n        // \u5404\u9818\u57df\u7528\u306eRW\u30ed\u30c3\u30af\u3092`DB_HASH_LOCK_CNT`\u5206\u3060\u3051\u78ba\u4fdd(and \u521d\u671f\u5316)\u3059\u308b\n        tb->locks = (DbTableHashFineLocks*) erts_db_alloc_fnf(ERTS_ALC_T_DB_SEG, /* Other type maybe? */\n                                                              (DbTable *) tb,\n                                                              sizeof(DbTableHashFineLocks));\n        for (i=0; i<DB_HASH_LOCK_CNT; ++i) {\n            erts_smp_rwmtx_init_opt_x(&tb->locks->lck_vec[i].lck, &rwmtx_opt,\n                                      \"db_hash_slot\", make_small(i));\n        }\n    }\n    else { /* coarse locking */\n        /***\n          * NOTE: write_concurrency=false\u3001\u306e\u5834\u5408\n          ***/\n        tb->locks = NULL;  // \u5185\u90e8\u30ed\u30c3\u30af\u306f\u4f7f\u7528\u3057\u306a\u3044\n    }\n    ERTS_THR_MEMORY_BARRIER;\n    return DB_ERROR_NONE;\n}\n```\n\n\u81ea\u524d\u30ed\u30c3\u30af\u3092\u7ba1\u7406\u3059\u308b\u5834\u5408\u306f\u3001`read_concurrency`\u306e\u5024\u304c`true`\u306a\u3089\u3001\u305d\u306e\u5404RW\u30ed\u30c3\u30af\u304c\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u3082\u306e\u3068\u306a\u308b\u3002\n\u300cethr_mutex.c\u300d\u306e\u7bc0\u306e\u6700\u5f8c\u306b\u300c(\u5927\u96d1\u628a\u306b\u8a00\u3048\u3070)\u8ad6\u7406\u516b\u30b3\u30a2\u306a\u3089\u3001\u8aad\u307f\u8fbc\u307f\u6700\u9069\u5316RW\u30ed\u30c3\u30af\u306e\u6240\u8981\u30e1\u30e2\u30ea\u306f\u304a\u3088\u305d512KB\u300d\u3068\u66f8\u3044\u305f\u304c\u3001\u305d\u308c\u304c\u5168\u9818\u57df\u5206(`DB_HASH_LOCK_CNT`\u500b)\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3001\u5408\u8a08\u306732MB\u3001\u3068\u610f\u5916\u3068\u99ac\u9e7f\u306b\u306a\u3089\u306a\u3044\u30e1\u30e2\u30ea\u9818\u57df\u3092\u6d88\u8cbb\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u4e21\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f75\u7528\u306b\u306f\u82e5\u5e72\u6ce8\u610f\u304c\u5fc5\u8981\u305d\u3046\u3002\n\n#### \u8981\u7d20\u30a2\u30af\u30bb\u30b9\u6642\u306b\u547c\u3070\u308c\u308b\u95a2\u6570\u7fa4\n\n\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u5185\u306e\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u969b\u306e\u30ed\u30c3\u30af\u306e\u4f7f\u3044\u65b9\u306e\u4e00\u4f8b\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306b\u8981\u7d20\u691c\u7d22\u7528\u306e\u95a2\u6570\u306e\u5b9f\u88c5\u30b3\u30fc\u30c9\u3092\u63b2\u8f09\u3059\u308b\u3002\n\n```c:erl_db_hash.c\nstatic int db_member_hash(DbTable *tbl, Eterm key, Eterm *ret)\n{\n    DbTableHash *tb = &tbl->hash;\n    HashValue hval;\n    int ix;\n    HashDbTerm* b1;\n    erts_smp_rwmtx_t* lck;\n\n    hval = MAKE_HASH(key);  // 1. \u30cf\u30c3\u30b7\u30e5\u5024\u3092\u6c42\u3081\u308b\n    ix = hash_to_ix(tb, hval);\n    lck = RLOCK_HASH(tb, hval);  // 2. \u8981\u7d20\u30a2\u30af\u30bb\u30b9\u524d\u306b\u5bfe\u5fdc\u3059\u308b\u30ed\u30c3\u30af\u3092\u78ba\u4fdd\n    \n    // 3. \u8981\u7d20\u30a2\u30af\u30bb\u30b9 (\u30d0\u30b1\u30c3\u30c8\u306e\u691c\u7d22\u304a\u3088\u3073\u30d0\u30b1\u30c3\u30c8\u5185\u306e\u8981\u7d20\u306e\u8d70\u67fb)\n    b1 = BUCKET(tb, ix);\n    while(b1 != 0) {\n        if (has_live_key(tb,b1,key,hval)) {\n            *ret = am_true;\n            goto done;\n        }\n        b1 = b1->next;\n    }\n    *ret = am_false;\ndone:\n    RUNLOCK_HASH(lck);  // 4. \u30ed\u30c3\u30af\u3092\u89e3\u653e\n    return DB_ERROR_NONE;\n}\n```\n\n\u6d41\u308c\u3068\u3057\u3066\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u3053\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u4ed6\u306e\u8981\u7d20\u30a2\u30af\u30bb\u30b9\u95a2\u6570\u3067\u3082\u540c\u69d8\u3068\u306a\u308b:\n\n1. \u6700\u521d\u306e\u30ad\u30fc\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u8a08\u7b97 (`MAKE_HASH`)\n2. \u305d\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u306b\u5bfe\u5fdc\u3059\u308b\u30ed\u30c3\u30af\u3092\u7372\u5f97\n  - \u66f4\u65b0\u7cfb\u306a\u3089`WLOCK_HASH`\u95a2\u6570\u3092\u4f7f\u7528\n  - \u53c2\u7167\u7cfb\u306a\u3089`RLOCK_HASH`\u95a2\u6570\u3092\u4f7f\u7528\n3. \u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u305d\u306e\u95a2\u6570\u56fa\u6709\u306e\u51e6\u7406\u3092\u5b9f\u884c \n4. \u30a2\u30af\u30bb\u30b9\u304c\u7d42\u308f\u3063\u305f\u3089\u3001\u30ed\u30c3\u30af\u3092\u89e3\u653e\n  - `WUNLOCK_HASH` or `RUNLOCK_HASH`\n\n\u8981\u306f\u30a2\u30af\u30bb\u30b9\u306e\u524d\u5f8c\u3067\u3001\u5bfe\u5fdc\u3059\u308b\u30ed\u30c3\u30af\u306e\u7372\u5f97\u3068\u89e3\u653e\u3092\u884c\u3063\u3066\u3044\u308b\u3060\u3051\u3002\n\n\u6b21\u306f`WLOCK_HASH`\u7b49\u306e\u30ed\u30c3\u30af\u7cfb\u306e\u95a2\u6570\u306e\u5b9f\u88c5:\n\n```c:erl_db_hash.c\n#  define DB_HASH_LOCK_MASK (DB_HASH_LOCK_CNT-1)\n#  define GET_LOCK(tb,hval) (&(tb)->locks->lck_vec[(hval) & DB_HASH_LOCK_MASK].lck)\n\n/* Fine grained read lock */\nstatic ERTS_INLINE erts_smp_rwmtx_t* RLOCK_HASH(DbTableHash* tb, HashValue hval)\n{\n    if (tb->common.is_thread_safe) {\n        // erl_db.c\u5185\u3067\u3001\u65e2\u306b\u30ed\u30c3\u30af\u304c\u7372\u5f97\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u3053\u3053\u3067\u306e\u51e6\u7406\u306f\u4e0d\u8981\n        return NULL;\n    } else {\n        // \u30cf\u30c3\u30b7\u30e5\u5024\u306b\u5bfe\u5fdc\u3059\u308b\u9818\u57df\u7528\u306e\u30ed\u30c3\u30af\u3092\u53d6\u5f97\n        erts_smp_rwmtx_t* lck = GET_LOCK(tb,hval);\n        erts_smp_rwmtx_rlock(lck);\n        return lck;\n    }\n}\n/* Fine grained write lock */\nstatic ERTS_INLINE erts_smp_rwmtx_t* WLOCK_HASH(DbTableHash* tb, HashValue hval)\n{\n    if (tb->common.is_thread_safe) {\n        return NULL;\n    } else {\n        erts_smp_rwmtx_t* lck = GET_LOCK(tb,hval);\n        erts_smp_rwmtx_rwlock(lck);\n        return lck;\n    }\n}\n\nstatic ERTS_INLINE void RUNLOCK_HASH(erts_smp_rwmtx_t* lck)\n{\n    if (lck != NULL) {\n        erts_smp_rwmtx_runlock(lck);\n    }\n}\n\nstatic ERTS_INLINE void WUNLOCK_HASH(erts_smp_rwmtx_t* lck)\n{\n    if (lck != NULL) {\n        erts_smp_rwmtx_rwunlock(lck);\n    }\n}\n```\n\n\u7279\u306b\u96e3\u3057\u3044\u3068\u3053\u308d\u3082\u306a\u304f\u7d20\u76f4\u306a\u5b9f\u88c5\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\n#### \u305d\u306e\u4ed6\n\n`(read|write)_concurrency`\u306b\u95a2\u9023\u3059\u308b\u8a71\u984c\u3068\u3057\u3066\u306f\u3001\u3053\u3053\u307e\u3067\u53d6\u308a\u4e0a\u3052\u305f\u3082\u306e\u4ee5\u5916\u306b\u3082\u300c\u30a2\u30c8\u30df\u30c3\u30af\u64cd\u4f5c\u306e\u5b9f\u884c\u6642\u306e\u30e1\u30e2\u30ea\u30d0\u30ea\u30a2\u3092\u8981\u4e0d\u8981\u3092\u5224\u5b9a\u3059\u308b\u305f\u3081\u306e`DB_USING_FINE_LOCKING`\u30de\u30af\u30ed\u300d\u3068\u304b\u300c\u30c6\u30fc\u30d6\u30eb\u30ea\u30b5\u30a4\u30ba\u3092\u5168\u4f53\u30ed\u30c3\u30af\u3092\u4f7f\u308f\u305a\u306b\u5b9f\u884c\u3059\u308b\u5de5\u592b\u300d\u3068\u304b\u306e\u8a71\u304c\u6319\u3052\u3089\u308c\u308b\u304c\u3001\u5168\u4f53\u306e\u8ad6\u65e8\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u3082\u306e\u3067\u3082\u306a\u3044\u306e\u3067\u3001\u4eca\u56de\u306f\u5272\u611b\u3059\u308b\u3002\n\n### \u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\n\n\u4eca\u56de\u8abf\u3079\u305f\u7bc4\u56f2\u3067\u306e__erl_db_hash.c__\u306b\u5bfe\u3059\u308b`(read|write)_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f71\u97ff\u306e\u307e\u3068\u3081(\u9577\u3044...):\n\n- __erl_db_hash.c__\u306f\u3001\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u3092\u7528\u3044\u305fETS\u30c6\u30fc\u30d6\u30eb\u306e\u5b9f\u88c5\u3092\u3001__erl_db.c__\u306b\u63d0\u4f9b\u3057\u3066\u3044\u308b\n   - __erl_db.c__\u3068\u306e\u5354\u8abf\u304c\u524d\u63d0\u306e\u30b3\u30fc\u30c9\n- `write_concurrency`\u306e\u5024\u306b\u5fdc\u3058\u3066\u3001\u8981\u7d20\u30a2\u30af\u30bb\u30b9\u6642\u306b__\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af__\u3068__\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af__\u306e\u3069\u3061\u3089\u3092\u4f7f\u3046\u304b\u304c\u6c7a\u5b9a\u3055\u308c\u308b\n   - `write_concurrency=false`\u306a\u3089__\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af__\u304c\u4f7f\u308f\u308c\u308b:\n      - \u3053\u306e\u5834\u5408\u3001\u5168\u3066\u306e\u30ed\u30c3\u30af\u95a2\u9023\u51e6\u7406\u306f__erl_db.c__\u306b\u4e00\u4efb\u3055\u308c\u308b\n      - __erl_db.c__\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u3067\u4e00\u3064\u306eRW\u30ed\u30c3\u30af\u3092\u4f7f\u7528\u3059\u308b\n         - \u66f4\u65b0\u7cfb\u64cd\u4f5c\u306f\u76f4\u5217\u5316\u3055\u308c\u3001\u53c2\u7167\u7cfb\u64cd\u4f5c\u306e\u30b9\u30b1\u30fc\u30eb\u6027\u306f`read_concurrency`\u306e\u5024\u306b\u4f9d\u5b58\n         - __\u6b20\u70b9: \u4e26\u5217\u66f8\u304d\u8fbc\u307f\u304c\u591a\u3044\u5834\u5408\u306b(\u76f4\u5217\u5316\u3055\u308c\u3066)\u6027\u80fd\u304c\u52a3\u5316\u3059\u308b__\n   - `write_concurrency=true`\u306a\u3089__\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af__\u304c\u4f7f\u308f\u308c\u308b:\n      - __erl_db_hash.c__\u304c\u81ea\u524d\u306e\u30ed\u30c3\u30af\u3092\u7ba1\u7406\n      - \u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u3092`DB_HASH_LOCK_CNT`\u500b\u306e\u9818\u57df\u306b(\u8ad6\u7406\u7684\u306b)\u5206\u5272\u3057\u3001\u305d\u308c\u305e\u308c\u306b\u4e00\u3064\u306eRW\u30ed\u30c3\u30af\u3092\u5272\u308a\u5f53\u3066\u308b\n      - \u7570\u306a\u308b\u9818\u57df\u306b\u5c5e\u3059\u308b\u8981\u7d20\u306b\u5bfe\u3059\u308b\u30a2\u30af\u30bb\u30b9\u3067\u306f\u3001\u30ed\u30c3\u30af\u304c\u7af6\u5408\u3059\u308b\u3053\u3068\u306f\u306a\u3044\n         - __\u5229\u70b9: \u4e26\u5217\u66f8\u304d\u8fbc\u307f\u304c\u591a\u3044\u5834\u5408\u3067\u3082\u3001\u3042\u308b\u7a0b\u5ea6\u307e\u3067\u306f\u30b9\u30b1\u30fc\u30eb\u3057\u3084\u3059\u3044__\n      - \u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u306e\u5834\u5408\u3067\u3082__erl_db.c__\u306e\u5c64\u3067\u306e\u30ed\u30c3\u30af\u7372\u5f97\u306f\u884c\u308f\u308c\u308b (\u8a73\u7d30\u306f\u5f8c\u8ff0)\n         - __\u6b20\u70b9: \u8981\u7d20\u30a2\u30af\u30bb\u30b9\u6642\u306e\u30ed\u30c3\u30af\u7372\u5f97\u56de\u6570\u304c\u4e00\u56de\u5897\u3048\u308b\u306e\u3067\u3001\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u306f\u5897\u3059__\n      - __\u6b20\u70b9: DB_HASH_LOCK_CNT\u500b\u3060\u3051RW\u30ed\u30c3\u30af\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3001\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u5897\u3059__\n- __\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af__\u3067\u4f7f\u308f\u308c\u308bRW\u30ed\u30c3\u30af\u306f\u3001`read_concurrency=true`\u306a\u3089\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u3082\u306e\u306b\u306a\u308b\n  - RW\u30ed\u30c3\u30af\u3067\u306e`read_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u52b9\u679c\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306f\u300cethr_mutex.c\u300d\u3092\u53c2\u7167\u306e\u3053\u3068\n  - __\u5229\u70b9: \u5927\u91cf\u306e\u66f4\u65b0\u3068\u53c2\u7167\u304c\u4ea4\u4e92\u306b\u884c\u308f\u308c\u308b\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u3001\u6027\u80fd\u304c\u5411\u4e0a\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b__\n      - \u540c\u3058\u9818\u57df\u306eRW\u30ed\u30c3\u30af\u306b\u5bfe\u3059\u308b\u4e26\u5217\u53c2\u7167\u304c\u5927\u91cf\u306b\u8d70\u3063\u305f\u5834\u5408\u306b\u6709\u52b9\n      - \u305f\u3060\u3057\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u306e\u6642\u70b9\u3067\u3001\u3059\u3067\u306b\u3042\u308b\u7a0b\u5ea6\u30a2\u30af\u30bb\u30b9\u304c\u5206\u6563\u3057\u3066\u3044\u308b\u306f\u305a\u306a\u306e\u3067\u300c\u540c\u3058\u8981\u7d20\u306b\u5bfe\u3057\u3066\u5927\u91cf\u306e\u4e26\u5217\u53c2\u7167\u304c\u5b9f\u884c\u3055\u308c\u308b\u300d\u3068\u3044\u3063\u305f\u3088\u3046\u306a\u72b6\u6cc1\u3067\u3082\u306a\u3051\u308c\u3070\u52b9\u679c\u306f\u8584\u305d\u3046\n      - `ets:select/2`\u306e\u3088\u3046\u306a\u5168\u4f53\u53c2\u7167\u304c\u983b\u7e41\u306b\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306a\u30b1\u30fc\u30b9\u306a\u3089\u3082\u3057\u304b\u3057\u305f\u3089\u6709\u52b9\uff1f\n  - __\u6b20\u70b9: \u5c11\u6570\u306e\u66f4\u65b0\u3068\u53c2\u7167\u304c\u4ea4\u4e92\u306b\u884c\u308f\u308c\u308b\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u3001\u6027\u80fd\u304c\u52a3\u5316\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b__\n  - __\u6b20\u70b9: \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u3055\u3089\u306b(\u5927\u5e45\u306b)\u5897\u3059__\n      - \u6982\u306d`\u8ad6\u7406\u30b3\u30a2\u6570  * \u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u30b5\u30a4\u30ba(e.g. 64B) * DB_HASH_LOCK_CNT`\u3060\u3051\u5fc5\u8981\n      - \u30b3\u30a2\u6570\u306b\u3088\u3063\u3066\u306f\u3001\u4e00\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u3067100MB\u7a0b\u5ea6\u306e\u30e1\u30e2\u30ea\u3092\u6d88\u8cbb\u3057\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u3082\u3042\u308b\n\n__erl_db.c__\u306f\u5168\u4f53\u7684\u306a\u8abf\u6574\u51e6\u7406\u304c\u4e3b\u306a\u306e\u3067\u3001`(read|write)_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u304c\u6027\u80fd\u306b\u4e0e\u3048\u308b\u5f71\u97ff\u306b\u95a2\u3057\u3066\u306f\u3001\u3053\u306e\u6642\u70b9\u3067\u307b\u307c\u60c5\u5831\u304c\u51fa\u63c3\u3063\u305f\u3053\u3068\u306b\u306a\u308b\u3002\n\nerl_db.c\n---------\n\n\u6700\u5f8c\u306f__erl_db.c__\u3002\n\n\u3053\u3053\u307e\u3067\u3067\u53d6\u308a\u4e0a\u3052\u305f__ethr_mutex.c__\u304a\u3088\u3073__erl_db_hash.c__\u304c\u63d0\u4f9b\u3059\u308b\u69cb\u6210\u8981\u7d20\u3092\u3001\u3069\u306e\u3088\u3046\u306b\u5229\u7528\u3057\u3066\u3044\u308b\u304b\u3001\u3092\u4e2d\u5fc3\u306b\u898b\u3066\u3044\u304f\u3002\n\n### \u95a2\u9023\u3059\u308b\u5909\u6570\n\n`(read|write)_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u95a2\u9023\u3059\u308b\u5909\u6570\u306f(\u4e3b\u306b)\u4ee5\u4e0b\u306e\u56db\u3064\u3002\n\u524d\u8005\u4e8c\u3064\u306f__erl_db_hash.c__\u3067\u65e2\u51fa\u306a\u306e\u3067\u3001\u8aac\u660e\u306f\u5272\u611b\u3059\u308b\u3002\n\n- `DbTable.common.type`\n- `DbTable.common.is_thread_safe`\n- `DbTable.common.rwlock`\n  - \u30c6\u30fc\u30d6\u30eb\u3067\u30b0\u30ed\u30fc\u30d0\u30eb\u306a(\u5168\u4f53\u30ed\u30c3\u30af\u7528\u306e)RW\u30ed\u30c3\u30af\n- `DbTable.common.meth`\n  - `DbTableMethod`\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30c7\u30fc\u30bf\u304c\u4fdd\u6301\u3055\u308c\u308b\n  - \u4eca\u56de\u3067\u3044\u3048\u3070__erl_db_hash.c__\u306e\u30c7\u30fc\u30bf\u3068\u306a\u308b\n\n### \u521d\u671f\u5316\u51e6\u7406\n\n#### ets_new_2\u95a2\u6570\n\n`ets:new/2`\u306b\u5bfe\u5fdc\u3059\u308bBIF\u3002\n`(read|write)_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u76f4\u63a5\u53c2\u7167\u3055\u308c\u308b\u306e\u306f\u3053\u3053\u3060\u3051\u3002\n\u5185\u5bb9\u7684\u306b\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5024\u306b\u5fdc\u3058\u305f\u30d5\u30e9\u30b0\u306e\u8abf\u6574\u51e6\u7406\u304c\u4e3b\u3002\n\n```c:erl_db.c\nBIF_RETTYPE ets_new_2(BIF_ALIST_2)\n{\n/*** \u7701\u7565 ***/\n                else if (tp[1] == am_write_concurrency) {\n                    // `write_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n                    if (tp[2] == am_true) {\n                        is_fine_locked = 1;  // \u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u3092\u4f7f\u7528\u3059\u308b\n                    } else if (tp[2] == am_false) {\n                        is_fine_locked = 0;\n                    } else break;\n                }\n                else if (tp[1] == am_read_concurrency) {\n                    // `read_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\n                    if (tp[2] == am_true) {\n                        frequent_read = 1; // \u4e26\u5217\u8aad\u307f\u8fbc\u307f\u6700\u9069\u5316\u3092\u6709\u52b9\u306b\u3059\u308b\n                    } else if (tp[2] == am_false) {\n                        frequent_read = 0;\n                    } else break;\n                }\n/*** \u7701\u7565 ***/\n    if (IS_HASH_TABLE(status)) {\n        meth = &db_hash;\n        if (is_fine_locked && !(status & DB_PRIVATE)) {\n            // \u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb and \u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u3001\u306a\u3089`DB_FINE_LOCKED`\u30d5\u30e9\u30b0\u3092\u30bb\u30c3\u30c8\n            status |= DB_FINE_LOCKED;\n        }\n    }\n/*** \u7701\u7565 ***/\n    if (frequent_read && !(status & DB_PRIVATE))\n        status |= DB_FREQ_READ;  // `DB_FREQ_READ`\u30d5\u30e9\u30b0\u3092\u30bb\u30c3\u30c8\n/*** \u7701\u7565 ***/\n    tb->common.type = status & ERTS_ETS_TABLE_TYPES;\n    /* Note, 'type' is *read only* from now on... */\n/*** \u7701\u7565 ***/\n    // db_init_lock\u95a2\u6570\u3067\u3001\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u30ed\u30c3\u30af\u3092\u521d\u671f\u5316\n    db_init_lock(tb, status & (DB_FINE_LOCKED|DB_FREQ_READ),\n                 \"db_tab\", \"db_tab_fix\");\n/*** \u7701\u7565 ***/\n}\n```\n\n#### db_init_lock\u95a2\u6570\n\n\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u7528\u306eRW\u30ed\u30c3\u30af\u3067\u3042\u308b`DbTable.common.rwlock`\u306e\u521d\u671f\u5316\u3092\u884c\u3046\u95a2\u6570\u3002\n\n```c:erl_db.c\nstatic ERTS_INLINE void db_init_lock(DbTable* tb, int use_frequent_read_lock,\n                                     char *rwname, char* fixname)\n{\n    erts_smp_rwmtx_opt_t rwmtx_opt = ERTS_SMP_RWMTX_OPT_DEFAULT_INITER;\n    \n   // NOTE: \n   // use_frequent_read_lock = status & (DB_FINE_LOCKED|DB_FREQ_READ)\n   // => `(read|write)_concurrency`\u306e\u3069\u3061\u3089\u304b\u304c`true`\u306a\u3089\u3001\u5168\u4f53RW\u30ed\u30c3\u30af\u306f\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u6700\u9069\u5316\u3055\u308c\u308b (\u7406\u7531\u306f\u5f8c\u8ff0)\n    if (use_frequent_read_lock)\n        rwmtx_opt.type = ERTS_SMP_RWMTX_TYPE_FREQUENT_READ;\n    if (erts_ets_rwmtx_spin_count >= 0)\n        rwmtx_opt.main_spincount = erts_ets_rwmtx_spin_count;\n    // \u5168\u4f53RW\u30ed\u30c3\u30af\u3092\u521d\u671f\u5316\n    erts_smp_rwmtx_init_opt_x(&tb->common.rwlock, &rwmtx_opt,\n                              rwname, tb->common.the_name);\n    erts_smp_mtx_init_x(&tb->common.fixlock, fixname, tb->common.the_name);\n    \n    // is_thread_safe\u5909\u6570\u3082\u521d\u671f\u5316:\n    // - DB_FINE_LOCKED\u30d5\u30e9\u30b0\u304c\u7acb\u3063\u3066\u3044\u308b\u306a\u3089`false`\u306b\u306a\u308b\n    //   => \u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb(ex. erl_db_hash.c)\u5074\u3067\u306e\u30ed\u30c3\u30af\u7ba1\u7406\u304c\u5fc5\u8981\u306a\u3053\u3068\u3092\u793a\u3059\n    tb->common.is_thread_safe = !(tb->common.status & DB_FINE_LOCKED);\n}\n```\n\n(`read_concurrency`\u306e\u5834\u5408\u3060\u3051\u3067\u306a\u304f)`write_concurrency`\u304c`true`\u306e\u5834\u5408\u3067\u3082\u3001\u5168\u4f53RW\u30ed\u30c3\u30af(`common.rwlock`)\u3092\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u6700\u9069\u5316\u3059\u308b\u7406\u7531\u306f\u4ee5\u4e0b\u306e\u901a\u308a:\n\n- \u307e\u305a\u306f`write_concurrency=false`\u306e\u5834\u5408\u3092\u8003\u3048\u308b:\n  - \u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u30ed\u30c3\u30af\u7ba1\u7406\u3092\u884c\u308f\u305a__erl_db.c__\u304c\u30ed\u30c3\u30af\u5468\u308a\u306e\u4e00\u5207\u306e\u8cac\u4efb\u3092\u6301\u3064\n  - __erl_db.c__\u306f`common.rwlock`\u3092\u7528\u3044\u3066\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af\u3092\u5b9f\u73fe\u3059\u308b\n     - \u8981\u7d20\u66f4\u65b0\u6642\u306b\u306f\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97 (\u4e26\u5217\u30a2\u30af\u30bb\u30b9\u4e0d\u53ef)\n     - \u8981\u7d20\u53c2\u7167\u6642\u306b\u306f\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97 (\u4e26\u5217\u30a2\u30af\u30bb\u30b9\u53ef\u80fd)\n- \u6b21\u306b`write_concurrency=true`\u306e\u5834\u5408\u3092\u8003\u3048\u308b:\n  - \u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af\u3092\u5b9f\u73fe\u3059\u308b\n  - \u4e26\u5217\u66f4\u65b0(\u66f8\u304d\u8fbc\u307f)\u3092\u5b9f\u73fe\u3059\u308b\u306e\u304c\u4e3b\u76ee\u7684\n  - \u305f\u3060\u3057\u3001\u3053\u306e\u5834\u5408\u3067\u3082__erl_db.c__\u304c\u8981\u7d20\u30a2\u30af\u30bb\u30b9\u6642\u306b`common.rwlock`\u3092\u4f7f\u3046\u306e\u306f\u5909\u308f\u3089\u306a\u3044\n  - \u300c\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u306b\u5bfe\u5fdc\u3057\u3066\u3082\u3001\u305d\u306e\u524d\u6bb5\u306e__erl_db.c__\u304c\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af\u3092\u4f7f\u3046\u306e\u3067\u306f\u610f\u5473\u304c\u306a\u3044\u306e\u3067\u306f\uff1f\u300d\u3068\u3044\u3046\u7591\u554f\u304c\u51fa\u3066\u304f\u308b\u3002\n  - \u89e3\u6c7a\u7b56:\n     - __erl_db.c__\u30ec\u30a4\u30e4\u30fc\u3067\u306f\u3001\u8981\u7d20\u66f4\u65b0\u306e\u5834\u5408\u3067\u3082\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\u3088\u3046\u306b\u3059\u308b(\u4f8b\u5916\u306f\u5f8c\u8ff0)\n         - __erl_db.c__\u30ec\u30a4\u30e4\u30fc\u3067\u306e\u66f8\u304d\u8fbc\u307f\u76f4\u5217\u5316\u304c\u9632\u3052\u308b\n         - \u9069\u5207\u306a\u30ed\u30c3\u30af\u3092\u7ba1\u7406\u3059\u308b\u8cac\u4efb\u306f\u3001\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u79fb\u308b \n     - \u8981\u7d20\u306e\u66f4\u65b0\u30fb\u53c2\u7167\u306e\u4e21\u65b9\u3067\u3001\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u304c\u4f7f\u308f\u308c\u308b\u306e\u3067\u3001\u305d\u308c\u304c\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3088\u3046\u306b\u8aad\u307f\u8fbc\u307f\u6700\u9069\u5316\u3092\u5e38\u306b\u6709\u52b9\u306b\u3059\u308b\n     - => \u3053\u308c\u304c`write_concurrency=true`\u306e\u5834\u5408\u3067\u3082\u5168\u4f53\u30ed\u30c3\u30af\u306e\u8aad\u307f\u8fbc\u307f\u6700\u9069\u5316\u3092\u6709\u52b9\u306b\u3057\u3066\u3044\u308b\u7406\u7531\n\n\u3064\u307e\u308a`write_concurrency=true`\u306e\u5834\u5408\u306f\u3001\u66f4\u65b0\u304b\u53c2\u7167\u304b\u306b\u95a2\u308f\u3089\u305a`common.rwlock`\u3067\u306f\u3001\u5e38\u306b\u30ea\u30fc\u30c9\u30ed\u30c3\u30af\u304c\u7372\u5f97\u3055\u308c\u3001\u5b9f\u969b\u306e\u6574\u5408\u6027\u4fdd\u8a3c\u306e\u8cac\u4efb\u306f\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u59d4\u8b72\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n\u3053\u306e\u3088\u3046\u306a\u6319\u52d5\u3067\u3042\u308b\u306a\u3089\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u306e\u5834\u5408\u306f\u3001\u305d\u3082\u305d\u3082`common.rwlock`\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u826f\u3044\u3088\u3046\u306b\u601d\u3048\u308b\u304c\u3001\u4f8b\u3048\u3070\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u304c\u64cd\u4f5c\u5bfe\u8c61\u306b\u306a\u308b\u5834\u5408(ex. `ets:delete/1`)\u3084\u8907\u6570\u8981\u7d20\u3092\u30a2\u30c8\u30df\u30c3\u30af\u306b\u51e6\u7406\u3057\u305f\u5834\u5408(ex. `ets:insert/2`\u306e\u7b2c\u4e8c\u5f15\u6570\u304c\u30ea\u30b9\u30c8)\u306f\u3001\u6574\u5408\u6027\u3092\u62c5\u4fdd\u3059\u308b\u305f\u3081\u306b`common.rwlock`\u3092\u4f7f\u3063\u3066\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u306e\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3001\u5b8c\u5168\u306b\u4e0d\u4f7f\u7528\u3068\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3002\n\n### \u8981\u7d20\u30a2\u30af\u30bb\u30b9\u6642\u306e\u30ed\u30c3\u30af\u7372\u5f97\u304a\u3088\u3073\u89e3\u653e\n\n\u30c6\u30fc\u30d6\u30eb\u5185\u306e\u8981\u7d20\u3092\u64cd\u4f5c\u3059\u308b\u5834\u5408\u306f`db_lock(); tb->common.meth->\u64cd\u4f5c\u95a2\u6570(); db_unlock();`\u3068\u3044\u3063\u305f\u30d1\u30bf\u30fc\u30f3\u304c\u5b9a\u756a\u3068\u306a\u308b\u3002\n\n`db_lock`\u304a\u3088\u3073`db_unlock`\u306f\u3001\u5168\u4f53RW\u30ed\u30c3\u30af(`tb->common.rwlock`)\u306e\u7372\u5f97\u30fb\u89e3\u653e\u3092\u884c\u3046\u305f\u3081\u306e\u95a2\u6570\u3067\u3001\u5b9f\u88c5\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n```c:erl_db.c\ntypedef enum {\n    LCK_READ=1,     /* read only access */\n    LCK_WRITE=2,    /* exclusive table write access */\n    LCK_WRITE_REC=3, /* record write access */\n    LCK_NONE=4\n} db_lock_kind_t;\n\nstatic ERTS_INLINE void db_lock(DbTable* tb, db_lock_kind_t kind)\n{\n    if (tb->common.type & DB_FINE_LOCKED) {\n       /***\n         * NOTE: write_concurrency=true\u3001\u306e\u5834\u5408 (\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af)\n         ***/\n        if (kind == LCK_WRITE) {\n            // \u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u306e\u6392\u4ed6\u304c\u5fc5\u8981\u306a\u5834\u5408\u306b\u306e\u307f\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\n            erts_smp_rwmtx_rwlock(&tb->common.rwlock);\n            tb->common.is_thread_safe = 1;\n        } else {\n            // \u53c2\u7167(kind=LOCK_READ) or \u5358\u4e00\u8981\u7d20\u66f4\u65b0(kind=LOCK_WRITE_REC)\u306e\u5834\u5408\u306f\u3001\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\n            erts_smp_rwmtx_rlock(&tb->common.rwlock);\n            ASSERT(!tb->common.is_thread_safe);\n        }\n    }\n    else\n    {\n        /***\n         * NOTE: write_concurrency=false\u3001\u306e\u5834\u5408 (\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af)\n         ***/\n        switch (kind) {\n        case LCK_WRITE:\n        case LCK_WRITE_REC:\n            // \u66f4\u65b0\u7cfb\u306e\u5834\u5408\u306f\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\n            erts_smp_rwmtx_rwlock(&tb->common.rwlock);\n            break;\n        default:\n            // \u53c2\u7167\u7cfb\u306e\u5834\u5408\u306f\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\n            erts_smp_rwmtx_rlock(&tb->common.rwlock);\n        }\n        ASSERT(tb->common.is_thread_safe);\n    }\n}\n\nstatic ERTS_INLINE void db_unlock(DbTable* tb, db_lock_kind_t kind)\n{\n    // NOTE: \u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3068\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u306e\u4f7f\u3044\u5206\u3051\u306f\u3001db_lock\u95a2\u6570\u3068\u540c\u69d8\n    if (tb->common.type & DB_FINE_LOCKED) {\n        if (kind == LCK_WRITE) {\n            ASSERT(tb->common.is_thread_safe);\n            tb->common.is_thread_safe = 0;\n            erts_smp_rwmtx_rwunlock(&tb->common.rwlock);\n        }\n        else {\n            ASSERT(!tb->common.is_thread_safe);\n            erts_smp_rwmtx_runlock(&tb->common.rwlock);\n        }\n    }\n    else {\n        ASSERT(tb->common.is_thread_safe);\n        switch (kind) {\n        case LCK_WRITE:\n        case LCK_WRITE_REC:\n            erts_smp_rwmtx_rwunlock(&tb->common.rwlock);\n            break;\n        default:\n            erts_smp_rwmtx_runlock(&tb->common.rwlock);\n        }\n    }\n}\n```\n\n\u6700\u5f8c\u306b`db_lock`\u3068`do_unlock`\u306e\u5b9f\u969b\u306e\u4f7f\u7528\u4f8b\u3068\u3057\u3066`ets:member/2`\u3068`ets:insert/2`\u306eBIF\u95a2\u6570\u3092\u8f09\u305b\u3066\u304a\u304f\u3002\n\n```c:erl_db.c\nBIF_RETTYPE ets_member_2(BIF_ALIST_2)\n{\n    DbTable* tb;\n    int cret;\n    Eterm ret;\n\n    CHECK_TABLES();\n\n    // \u8981\u7d20\u30a2\u30af\u30bb\u30b9\u524d\u306b\u30ed\u30c3\u30af\u3092\u7372\u5f97\n    // NOTE: gb_get_table\u306e\u4e2d\u3067`db_lock(tb, LCK_READ)`\u304c\u547c\u3070\u308c\u308b\n    if ((tb = db_get_table(BIF_P, BIF_ARG_1, DB_READ, LCK_READ)) == NULL) {\n        BIF_ERROR(BIF_P, BADARG);\n    }\n\n    // \u30e1\u30f3\u30d0\u30fc\u5224\u5b9a\u306e\u5b9f\u969b\u306e\u51e6\u7406\u306f\u3001DbTableMeth\u306e\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u59d4\u8b72\n    cret = tb->common.meth->db_member(tb, BIF_ARG_2, &ret);\n\n    // \u30a2\u30af\u30bb\u30b9\u304c\u7d42\u308f\u3063\u305f\u306e\u3067\u30ed\u30c3\u30af\u3092\u89e3\u653e\n    db_unlock(tb, LCK_READ);\n\n    switch (cret) {\n    case DB_ERROR_NONE:\n        BIF_RET(ret);\n    case DB_ERROR_SYSRES:\n        BIF_ERROR(BIF_P, SYSTEM_LIMIT);\n    default:\n        BIF_ERROR(BIF_P, BADARG);\n    }\n}\n\nBIF_RETTYPE ets_insert_2(BIF_ALIST_2)\n{\n    DbTable* tb;\n    int cret = DB_ERROR_NONE;\n    Eterm lst;\n    DbTableMethod* meth;\n    db_lock_kind_t kind;\n\n    CHECK_TABLES();\n \n    // \u4f7f\u7528\u3059\u308b\u30ed\u30c3\u30af\u306e\u7a2e\u985e\u3092\u6c7a\u5b9a:\n    // - \u633f\u5165\u8981\u7d20\u304c\u5358\u4e00\u306a\u3089`LCK_WRITE_REC` (\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af\u6642\u306b\u306f\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3068\u306a\u308b)\n    // - \u633f\u5165\u8981\u7d20\u304c\u8907\u6570\u306a\u3089`LCK_WRITE` (\u5e38\u306b\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3068\u306a\u308b)\n    /* Write lock table if more than one object to keep atomicy */\n    kind = ((is_list(BIF_ARG_2) && CDR(list_val(BIF_ARG_2)) != NIL)\n            ? LCK_WRITE : LCK_WRITE_REC);\n\n   // \u8981\u7d20\u30a2\u30af\u30bb\u30b9\u524d\u306b\u30ed\u30c3\u30af\u3092\u7372\u5f97\n   // NOTE: gb_get_table\u306e\u4e2d\u3067`db_lock(tb, kind)`\u304c\u547c\u3070\u308c\u308b\n    if ((tb = db_get_table(BIF_P, BIF_ARG_1, DB_WRITE, kind)) == NULL) {\n        BIF_ERROR(BIF_P, BADARG);\n    }\n\n    // \u5b9f\u969b\u306e\u8981\u7d20\u633f\u5165\u51e6\u7406\u306f\u3001DbTableMeth\u306e\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u59d4\u8b72\n    meth = tb->common.meth;\n    if (is_list(BIF_ARG_2)) {\n        for (lst = BIF_ARG_2; is_list(lst); lst = CDR(list_val(lst))) {\n            cret = meth->db_put(tb, CAR(list_val(lst)), 0);\n            if (cret != DB_ERROR_NONE)\n                break;\n        }\n    } else {\n        cret = meth->db_put(tb, BIF_ARG_2, 0);\n    }\n\n    // \u30a2\u30af\u30bb\u30b9\u304c\u7d42\u308f\u3063\u305f\u306e\u3067\u30ed\u30c3\u30af\u3092\u89e3\u653e\n    db_unlock(tb, kind);\n\n    switch (cret) {\n    case DB_ERROR_NONE:\n        BIF_RET(am_true);\n    case DB_ERROR_SYSRES:\n        BIF_ERROR(BIF_P, SYSTEM_LIMIT);\n    default:\n        BIF_ERROR(BIF_P, BADARG);\n    }\n}\n```\n### \u305d\u306e\u4ed6\n\n`ets:select/2`\u306e\u3088\u3046\u306a\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u3092\u8d70\u67fb\u3059\u308b\u95a2\u6570\u306e\u5834\u5408\u306f\u3001`DB_FINE_LOCKED`\u30d5\u30e9\u30b0\u306e\u6709\u7121\u3084`is_thread_safe`\u306e\u5024\u306b\u5fdc\u3058\u3066\u3001\u82e5\u5e72\u51e6\u7406\u304c\u5909\u308f\u3063\u3066\u304f\u308b\u306e\u3060\u304c\u672c\u7b4b\u306e\u8a71\u306b\u306f\u5f71\u97ff\u304c\u306a\u3044(\u3068\u601d\u3046)\u306e\u3067\u5272\u611b\u3059\u308b\u3002\n\n### \u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\n\n\u4eca\u56de\u8abf\u3079\u305f\u7bc4\u56f2\u3067\u306e__erl_db.c__\u306b\u5bfe\u3059\u308b`(read|write)_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u5f71\u97ff\u306e\u307e\u3068\u3081:\n\n- __erl_db.c__\u306f__\u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u304c\u5bfe\u8c61\u306eRW\u30ed\u30c3\u30af__\u3068\u4fdd\u6301\u3057\u3066\u3044\u308b\n- `(read|write)_concurrency`\u306e\u3044\u305a\u308c\u304b\u304c`true`\u306e\u5834\u5408\u306f\u3001\u3053\u306eRW\u30ed\u30c3\u30af\u306f\u8aad\u307f\u8fbc\u307f\u6027\u80fd\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u3082\u306e\u304c\u4f7f\u7528\u3055\u308c\u308b\n- \u8981\u7d20\u30a2\u30af\u30bb\u30b9\u6642\u306b\u306f\u3001\u3053\u306eRW\u30ed\u30c3\u30af\u304c\u7372\u5f97\u3055\u308c\u308b\u304c\u3001`write_concurrency`\u306e\u5024\u306b\u3088\u3063\u3066\u7372\u5f97\u3059\u308b\u30ed\u30c3\u30af\u306e\u7a2e\u985e\u304c\u5909\u308f\u3063\u3066\u304f\u308b:\n  - `write_concurrency=false`\u306e\u5834\u5408 (\u7c97\u7c92\u5ea6\u30ed\u30c3\u30af):\n  \u3000 - \u9069\u5207\u306a\u30ed\u30c3\u30af\u7ba1\u7406\u306e\u8cac\u4efb\u306f__erl_db.c__\u306b\u3042\u308b\n     - \u66f4\u65b0\u7cfb\u306e\u64cd\u4f5c\u306e\u5834\u5408\u306b\u306f\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3092\u3001\u53c2\u7167\u7cfb\u64cd\u4f5c\u306e\u5834\u5408\u306f\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3092\u3001\u7372\u5f97\u3059\u308b\n  - `write_concurrency=true`\u306e\u5834\u5408 (\u7d30\u7c92\u5ea6\u30ed\u30c3\u30af):\n     - \u9069\u5207\u306a\u30ed\u30c3\u30af\u7ba1\u7406\u306e\u8cac\u4efb\u306f(\u307b\u307c)\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb(ex. __erl_db_hash.c__)\u306b\u3042\u308b\n     - \u53c2\u7167\u7cfb\u304a\u3088\u3073\u5358\u4e00\u8981\u7d20\u304c\u5bfe\u8c61\u306e\u66f4\u65b0\u7cfb\u306e\u5834\u5408\u306f\u3001\u30ea\u30fc\u30c0\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\n         - \u66f4\u65b0\u7cfb\u64cd\u4f5c\u306e\u5834\u5408\u306b\u3001\u9069\u5207\u306a\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\u306e\u306f\u3001\u305d\u306e\u5148\u306e\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u8cac\u4efb\n     - \u30c6\u30fc\u30d6\u30eb\u5168\u4f53\u3084\u8907\u6570\u8981\u7d20\u306e\u30a2\u30c8\u30df\u30c3\u30af\u66f4\u65b0\u304c\u95a2\u308f\u308b\u64cd\u4f5c\u306e\u5834\u5408\u306f\u3001\u30e9\u30a4\u30bf\u30fc\u30ed\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\n\n------\n\n\u4ee5\u4e0a\u3067`(read|write)_concurrency`\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u95a2\u308f\u308b\u4e3b\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u306e\u30b3\u30fc\u30c9\u306f\u4e00\u901a\u308a\u8aad\u307f\u7d42\u308f\u3063\u305f\u3002\n\n\u307e\u3068\u3081\n====\n\n\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u52b9\u679c\n-------------------\n\n\u3053\u308c\u307e\u3067\u306e\u8a71\u3092\u8e0f\u307e\u3048\u3066`(read|write)_concurrency`\u306e\u5024\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u3088\u308b\u52b9\u679c\u3092\u307e\u3068\u3081\u3066\u307f\u305f\u3002\n(\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u8aac\u660e\u3068\u7d50\u69cb\u5185\u5bb9\u304c\u88ab\u3063\u3066\u3044\u308b\u6c17\u304c\u3059\u308b)\n\n#### \u4e21\u65b9\u304cfalse (\u30c7\u30d5\u30a9\u30eb\u30c8)\n\n- \u4e26\u5217\u66f8\u304d\u8fbc\u307f\u306b\u306f\u975e\u5bfe\u5fdc (\u30a2\u30af\u30bb\u30b9\u304c\u76f4\u5217\u5316\u3055\u308c\u308b)\n- \u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u5bfe\u5fdc\n  -  \u305f\u3060\u3057\u7af6\u5408\u5ea6\u304c\u9ad8\u3044\u5834\u5408\u306b\u306f\u3001\u6027\u80fd\u304c\u52a3\u5316\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\n- \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u306e\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u306f\u4e00\u756a\u5c0f\u3055\u3044\n\n#### read_concurrency=true\n\n- \u4e26\u5217\u66f8\u304d\u8fbc\u307f\u306b\u306f\u975e\u5bfe\u5fdc (\u30a2\u30af\u30bb\u30b9\u304c\u76f4\u5217\u5316\u3055\u308c\u308b)\n- \u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u5bfe\u5fdc\n  - \u7af6\u5408\u5ea6\u304c\u9ad8\u3044\u5834\u5408\u3067\u3082\u3001\u6027\u80fd\u304c\u52a3\u5316\u3057\u306a\u3044(\u3057\u306b\u304f\u3044)\n- \u66f8\u304d\u8fbc\u307f\u3068\u8aad\u307f\u8fbc\u307f\u304c\u4ea4\u4e92\u306b\u767a\u751f\u3059\u308b\u5834\u5408\u306f\u3001\u6027\u80fd\u304c\u52a3\u5316\u3057\u3084\u3059\u3044\n  - \u4e21\u8005\u306e\u5207\u308a\u66ff\u3048\u30b3\u30b9\u30c8\u304c`read_concurrency=false`\u306b\u6bd4\u3079\u3066\u9ad8\u3044\u305f\u3081\n- `\u8ad6\u7406\u30b3\u30a2\u6570 * \u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u30b5\u30a4\u30ba`\u7a0b\u5ea6\u306e\u30e1\u30e2\u30ea\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u304c\u3042\u308b\n\n#### write_concurrency=true\n\n- \u4e26\u5217\u66f8\u304d\u8fbc\u307f\u306b\u5bfe\u5fdc\n- \u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u5bfe\u5fdc\n- \u30c6\u30fc\u30d6\u30eb\u306f64\u500b\u306e\u9818\u57df\u306b(\u8ad6\u7406\u7684\u306b)\u5206\u5272\u3055\u308c\u308b:\n  - \u7570\u306a\u308b\u9818\u57df\u306b\u5c5e\u3059\u308b\u8981\u7d20\u7fa4\u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u306f\u3001\u4e26\u5217\u5b9f\u884c\u304c\u53ef\u80fd\u3068\u306a\u308b\n     - \u66f8\u304d\u8fbc\u307f\u540c\u58eb or \u66f8\u304d\u8fbc\u307f\u3068\u8aad\u307f\u8fbc\u307f\u3001\u304c\u540c\u6642\u306b\u5b9f\u884c\u3067\u304d\u308b\n     - \u7af6\u5408\u5ea6\u304c\u9ad8\u3044\u5834\u5408\u306e\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306e\u6027\u80fd\u52a3\u5316\u3082\u5c11\u306a\u3044 (\u9818\u57df\u5206\u5272\u306b\u3088\u308a)\n         - `read_concurency=false < write_concurrency=true < read_concurrency=true`\u3068\u3044\u3063\u305f\u611f\u3058 \n  - \u540c\u3058\u9818\u57df\u306b\u5c5e\u3059\u308b\u8981\u7d20\u7fa4\u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u306f`read_concurrency=false`\u306e\u5834\u5408\u3068\u540c\u3058\u6027\u80fd\u7279\u6027\u3068\u306a\u308b\n     - \u66f8\u304d\u8fbc\u307f\u306f\u76f4\u5217\u5316\u3055\u308c\u3001\u9ad8\u3044\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u7af6\u5408\u306b\u306f\u5f31\u3044\n- \u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u5c11\u306a\u3044\u5206\u3001\u76f4\u5217\u30a2\u30af\u30bb\u30b9\u6642\u306e\u6027\u80fd\u306f`write_concurrency=false`\u306e\u65b9\u304c\u826f\u3044\n- `64 * RW\u30ed\u30c3\u30af\u306e\u30b5\u30a4\u30ba`\u7a0b\u5ea6\u306e\u30e1\u30e2\u30ea\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u304c\u3042\u308b\n\n#### \u4e21\u65b9\u304ctrue\n\n- \u4e26\u5217\u66f8\u304d\u8fbc\u307f\u306b\u5bfe\u5fdc\n- \u4e26\u5217\u8aad\u307f\u8fbc\u307f\u306b\u5bfe\u5fdc\n- \u57fa\u672c\u7684\u306b\u306f`write_concurrency=true`\u306e\u307f\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3068\u540c\u3058\u7279\u6027\u3092\u5099\u3048\u308b\u306e\u3067\u3001\u4ee5\u964d\u306f\u5dee\u5206\u306e\u307f\u3092\u8a18\u8ff0\u3059\u308b\n- \u30c6\u30fc\u30d6\u30eb\u306f64\u500b\u306e\u9818\u57df\u306b(\u8ad6\u7406\u7684\u306b)\u5206\u5272\u3055\u308c\u308b:\n  - \u7570\u306a\u308b\u9818\u57df\u306b\u5c5e\u3059\u308b\u8981\u7d20\u7fa4\u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u306f\u3001\u4e26\u5217\u5b9f\u884c\u304c\u53ef\u80fd\u3068\u306a\u308b\n  - \u540c\u3058\u9818\u57df\u306b\u5c5e\u3059\u308b\u8981\u7d20\u7fa4\u306b\u5bfe\u3059\u308b\u64cd\u4f5c\u306f`read_concurrency=true`\u306e\u5834\u5408\u3068\u540c\u3058\u6027\u80fd\u7279\u6027\u3068\u306a\u308b\n     - \u9ad8\u3044\u4e26\u5217\u8aad\u307f\u8fbc\u307f\u7af6\u5408\u306b\u306f\u5f37\u3044\u304c\u3001\u8aad\u307f\u8fbc\u307f\u3068\u66f8\u304d\u8fbc\u307f\u306e\u5207\u308a\u66ff\u308f\u308a\u306b\u5f31\u3044\n         - `write_concurrency=true`\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u4ee5\u4e0a\u3001\u4e00\u5b9a\u6570\u306e\u66f8\u304d\u8fbc\u307f\u306f\u3042\u308b\u3068\u4e88\u60f3\u3055\u308c\u308b\u306e\u3067\u3001\u5f8c\u8005\u306e\u7279\u6027\u306f\u7d50\u69cb\u75db\u3044\n     - \u4e26\u5217\u8aad\u307f\u8fbc\u307f\u3068\u4e26\u5217\u66f8\u304d\u8fbc\u307f\u306e\u30d0\u30fc\u30b9\u30c8\u304c\u4ea4\u4e92\u306b\u3042\u308b\u3088\u3046\u306a\u72b6\u6cc1\u306b\u5411\u3044\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\n- `64 * \u8ad6\u7406\u30b3\u30a2\u6570 * \u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u30b5\u30a4\u30ba`\u7a0b\u5ea6\u306e\u30e1\u30e2\u30ea\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u304c\u3042\u308b\n  - \u30b3\u30a2\u6570\u304c\u591a\u3044\u74b0\u5883\u3067\u306f\u3001\u666e\u901a\u306b\u6570\u5341MB\u3068\u304b\u884c\u304d\u305d\u3046\n\n\u500b\u4eba\u7684\u306a\u7d50\u8ad6\n----------------\n\n\u57fa\u672c\u7684\u306b\u306f\u30c6\u30fc\u30d6\u30eb\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u9650\u306b\u5fdc\u3058\u3066\u300c`private`\u306a\u3089\u6307\u5b9a\u306a\u3057\u300d\u3001\u300c`protected`\u306a\u3089`read_concurrency=true`\u300d\u3001\u300c`public`\u306a\u3089`write_concurrency=true`\u300d\u3092\u30d9\u30fc\u30b9\u3068\u3059\u308b\u306e\u304c\u826f\u3055\u305d\u3046\u306b\u601d\u3046\u3002\n\n\u5f8c\u306f\u3001\u5b9f\u969b\u306e\u4f7f\u7528\u7528\u9014\u306b\u5fdc\u3058\u3066\u8abf\u6574\u3092\u3059\u308b\u3002\n\u4f8b\u3048\u3070`protected`\u3067\u3082\u3001\u81ea\u30d7\u30ed\u30bb\u30b9\u306b\u3088\u308b\u66f8\u304d\u8fbc\u307f\u304c\u5e38\u6642\u767a\u751f\u3059\u308b\u3088\u3046\u306a\u3089`write_concurrency=true`\u306b\u3057\u3066\u307f\u308b\u3068\u304b\u3002\n\n`read_concurrency`\u3068`write_concurrency`\u306e\u4e21\u65b9\u3092`true`\u306b\u8a2d\u5b9a\u3059\u308b\u7d44\u307f\u5408\u308f\u305b\u306f\u3001\u6709\u52b9\u306b\u50cd\u304f\u5834\u9762\u304c\u304b\u306a\u308a\u9650\u3089\u308c\u3066\u304a\u308a\u3001\u304b\u3064\u30e1\u30e2\u30ea\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u3082\u5927\u304d\u3044\u306e\u3067\u3001\u57fa\u672c\u7684\u306b\u306f\u4f7f\u308f\u306a\u3044\u65b9\u91dd\u3068\u306a\u308a\u305d\u3046\u3002\n", "tags": ["ErlangOTP-18.1"]}