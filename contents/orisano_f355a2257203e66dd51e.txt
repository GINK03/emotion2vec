{"context": " More than 1 year has passed since last update.\u30bf\u30a4\u30c8\u30eb\u306e\u901a\u308aPOH7\u3092Erlang\u3067\u5168\u90e8\u89e3\u3044\u305f\u306e\u3067\u30b3\u30fc\u30c9\u3092\u516c\u958b\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u6b21\u7b2c\u3067\u3059\u3002\nErlang\u3067\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3063\u307d\u3044\u3053\u3068\u3092\u3059\u308b\u3053\u3068\u304c\u521d\u3081\u3066\u3067\u3044\u308d\u3044\u308d\u6238\u60d1\u3044\u307e\u3057\u305f\u304c\n\u306a\u3093\u3068\u304b\u554f\u984c\u3092\u3059\u3079\u3066\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\npaiza\u306e\u74b0\u5883\u3067\u306fErlang\u306f\u8d77\u52d5\u306b1.4\u79d2\u7a0b\u5ea6\u304b\u304b\u308b\u3088\u3046\u3067\u5e73\u5747\u5b9f\u884c\u6642\u9593\u304c1.5\u79d2\u7a0b\u5ea6\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u8ffd\u8a18(12\u670821\u65e5 01:45)\n\u8ffd\u52a0\u3055\u308c\u3066\u3044\u305fando16, ando17\u3092\u8ffd\u52a0\n\u30b3\u30fc\u30c9\u4e0a\u3067\u306fmodule\u540d\u304cando*\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001paiza\u306b\u63d0\u51fa\u3059\u308b\u6642\u306fmain\u306b\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\n\n\u30b3\u30fc\u30c9\n\nAndo2\n\nando2.erl\n-module(ando2).\n-export([main/1]).\n\nmain([_]) ->\n  N = to_i(io:get_line(\"\")),\n  io:format(\"~p~n\", [string:copies(\"Ann\", N)]),\n  init:stop().\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n\n\n\"Ann\"\u3068\u3044\u3046\u6587\u5b57\u5217\u3092N\u56de\u7e70\u308a\u8fd4\u3059\u3060\u3051\u306a\u306e\u3067string:copies\u3092\u4f7f\u3046\u3060\u3051\u3067\u304a\u7d42\u3044\u3067\u3059\u3002\n\nAndo4\n\nando4.erl\n-module(ando4).\n-export([main/1]).\n\nmain([_]) ->\n  A = to_i(io:get_line(\"\")), \n  B = to_i(io:get_line(\"\")), \n  io:format(\"~p~n\", [A + B]),\n  init:stop().\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n\n\n\u3053\u308c\u306fA + B\u3059\u308b\u3060\u3051\u3067\u3059\u306d\u3002\n\nAndo5\n\nando5.erl\n-module(ando5).\n-export([main/1]).\n\nmain([_]) ->\n  NS = [io:get_line(\"\") || _ <- lists:seq(1, 5)],\n  YC = count(NS, \"yes\\n\"),\n  if\n    YC > 2 -> io:format(\"yes~n\");\n    true -> io:format(\"no~n\")\n  end,\n  init:stop().\n\ncount([], _) -> 0;\ncount([H|T], X) when H == X -> count(T, X) + 1;\ncount([_|T], X) -> count(T, X).\n\n\n\u3053\u308c\u306fyes\u304bno\u3068\u3044\u3046\u6587\u5b57\u5217\u304c5\u56de\u4e0e\u3048\u3089\u308c\u3066\u591a\u3044\u65b9\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\n\u305d\u308c\u3068\u5b9a\u6570\u56de\u51e6\u7406\u3092\u56de\u3057\u305f\u3044\u3068\u304d\u306f\u3069\u3046\u3059\u308b\u306e\u304c\u30d9\u30b9\u30c8\u306a\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n(lists:seq\u3092\u4f7f\u3063\u3066\u5bfe\u51e6\u3057\u3066\u308b\uff09\ncount\u306a\u3093\u3066\u81ea\u4f5c\u3057\u3066\u307e\u3059\u304c\u4f55\u304b\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n(\u66f8\u3044\u3066\u3066\u6c17\u3065\u3044\u305f\u306e\u3067\u3059\u304c\u3001length(lists:filter(\u307b\u3052))\u3067\u7d42\u308f\u308a\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\u3002\u3002)\n(\u305d\u3082\u305d\u3082count([X|T], X) -> count(T, X) + 1\u306e\u307b\u3046\u304c\u7c21\u6f54\u3067\u3059\u306d)\n\nAndo6\n\nando6.erl\n-module(ando6).\n-export([main/1]).\n\nmain([_]) ->\n  N = to_i(io:get_line(\"\")),\n  S = string:join([to_s(X) || X <- lists:seq(N, 0, -1)], \"\\n\"),\n  io:format(\"~s!!~n\", [S]),\n  init:stop().\n\nto_s(T) -> io_lib:format(\"~p\", [T]).\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n\n\n\u3053\u308c\u306f\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u3057\u3066\u6700\u5f8c\u306b!!\u3092\u3064\u3051\u308b\u554f\u984c\u3067\u3059\u3002\nto_s\u306a\u3093\u3066\u3044\u3046\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3057\u305f\u304cinteger_to_list\u304c\u3053\u308c\u3068\u540c\u3058\u52d5\u304d\u3092\u3057\u305d\u3046\u3067\u3059\u306d\u3002\n\u3042\u307e\u308a\u306b\u3082\u7121\u77e5\u3002\n\nAndo7\n\nando7.erl\n-module(ando7).\n-export([main/1]).\n\nmain([_]) ->\n  [C1, P1] = [to_i(X) || X <- string:tokens(io:get_line(\"\"), \" \")],\n  [C2, P2] = [to_i(X) || X <- string:tokens(io:get_line(\"\"), \" \")],\n  if\n    C1 * P2 > C2 * P1 -> io:format(\"1~n\");\n    true -> io:format(\"2~n\")\n  end,\n  init:stop().\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n\n\n\u30b3\u30b9\u30c8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u9ad8\u3044\u307b\u3046\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\nsplit\u306f\u306a\u3044\u306e\u304b\u3068\u7d76\u671b\u3057\u3066\u3044\u307e\u3057\u305f\u304cErlang\u3067\u306fstring:tokens\u306a\u3093\u3067\u3059\u306d\u3002\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u7b2c3\u5f15\u6570\u306f\u8907\u6570\u306e\u30c7\u30ea\u30df\u30bf\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067chars()\u3067\u30de\u30c3\u30c1\u3057\u3066\u3044\u3066\u3001\n\u6587\u5b57\u30ea\u30c6\u30e9\u30eb(? $\u304b\u3089\u59cb\u307e\u308b\u4e00\u6587\u5b57\u306eatom)\u306f\u4f7f\u3048\u306a\u3044\u3068\u3044\u3046\u3068\u3053\u308d\u306b\u30cf\u30de\u308a\u307e\u3057\u305f\u3002\n\nAndo9\n\nando9.erl\n-module(ando9).\n-export([main/1]).\n\nmain([_]) ->\n  N = to_i(io:get_line(\"\")),\n  SS = [string:strip(io:get_line(\"\"), right, $\\n) || _ <- lists:seq(1, N)],\n  io:format(\"~p~n\", [string:join(SS, \"_\")]),\n  init:stop().\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n\n\n\u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u5217\u3092_\u3067\u7d50\u5408\u3057\u3066\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\nstring:join\n\u4ee5\u4e0a\n\nAndo10\n\nando10.erl\n-module(ando10).\n-export([main/1]).\n\nmain([_]) ->\n  io:format(\"~p~n\", [fact(to_i(io:get_line(\"\")))]),\n  init:stop().\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n\nfact(0) -> 1;\nfact(N) -> fact(N - 1) * N.\n\n\n\u968e\u4e57\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\nfact\u3092\u81ea\u5206\u3067\u5b9a\u7fa9\u3059\u308b\u304b\u3001lists:foldl(fun(X,Acc) -> X * Acc end, 1, lists:seq(1, N))\u3059\u308b\u304b\u306e\u3069\u3061\u3089\u304b\u3067\u3059\u306d\u3002\n\u524d\u8005\u306e\u65b9\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u6c17\u304c\u3057\u305f\u306e\u3067\u3053\u3061\u3089\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\n\nAndo11\n\nando11.erl\n-module(ando11).\n-export([main/1]).\n\nmain([_]) ->\n  N = to_i(io:get_line(\"\")),\n  NG = in_grid(N),\n  M = to_i(io:get_line(\"\")),\n  MG = in_grid(M),\n  {Y, X} = search(NG, MG),\n  io:format(\"~p ~p~n\", [Y, X]),\n  init:stop().\n\nin_grid(N) ->\n  [[to_i(T) || T <- string:tokens(io:get_line(\"\"), \" \")] || _ <- lists:seq(1, N)].\n\nsearch(NG, MG) ->\n  N = length(NG),\n  M = length(MG),\n  [{X, Y}|_] = lists:dropwhile(fun({BX, BY}) -> not match(NG, MG, BX, BY) end, [{X + 1, Y + 1} || X <- lists:seq(0, N - M), Y <- lists:seq(0, N - M)]),\n  {Y - 1, X - 1}.\n\nmatch(NG, MG, X, Y) ->\n  M = length(MG),\n  MG == [lists:sublist(S, X, M) || S <- lists:sublist(NG, Y, M)].\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n\n\n\u6a21\u69d8\u4ed8\u304d\u306e\u6b63\u65b9\u5f62\u306e\u4e2d\u304b\u3089\u3001\u5225\u306e\u6a21\u69d8\u4ed8\u304d\u306e\u6b63\u65b9\u5f62\u3092\u898b\u3064\u3051\u3066\u51fa\u73fe\u5ea7\u6a19\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\n\u53d6\u308a\u3046\u308b\u5ea7\u6a19\u3092\u3059\u3079\u3066\u5217\u6319\u3057\u3066\u3001lists:dropwhile\u3067\u5148\u982d\u8981\u7d20\u3092\u53d6\u5f97\u3059\u308b\u5f62\u3067\u3059\u3002\n\u4e00\u81f4\u3057\u3066\u3044\u308b\u304b\u306flists:sublist\u3092\u7528\u3044\u3066\u63a2\u3059\u5bfe\u8c61\u306e\u6b63\u65b9\u5f62\u3092\u5207\u308a\u51fa\u3057\u3001list\u306e\u307e\u307e\u6bd4\u8f03\u3057\u307e\u3057\u305f\u3002\nlists:sublist\u304c1-indexed\u306a\u3068\u3053\u308d\u306b\u30cf\u30de\u308a\u307e\u3057\u305f\u3002\n\nAndo12\n\nando12.erl\n-module(ando12).\n-export([main/1]).\n\nmain([_]) ->\n  [X, Y, Z, N] = [to_i(T) || T <- string:tokens(io:get_line(\"\"), \" \")],\n  {XS, YS} = readCutting(N, [X], [Y]),\n  io:format(\"~p~n\", [lists:min([AX * AY || AX <- diffList(XS), AY <- diffList(YS)]) * Z]),\n  init:stop().\n\ndiffList(L) ->\n  {X, _} = lists:mapfoldl(fun(T, Acc) -> {T - Acc, T} end, 0, L),\n  X.\n\nreadCutting(0, XS, YS) -> {lists:sort(XS), lists:sort(YS)};\nreadCutting(N, XS, YS) ->\n  [D, A] = [to_i(T) || T <- string:tokens(io:get_line(\"\"), \" \")],\n  if\n    D == 0 -> readCutting(N - 1, [A|XS], YS);\n    true -> readCutting(N - 1, XS, [A|YS])\n  end.\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n\n\nX * Y * Z\u306e\u76f4\u65b9\u4f53\u306b\u5bfe\u3057\u3066Y\u8ef8\u3068X\u8ef8\u306b\u5bfe\u3057\u3066\u4e26\u884c\u306b\u5207\u65ad\u3059\u308b\u30af\u30a8\u30ea\u304c\u98db\u3093\u3067\u6765\u308b\u306e\u3067\u3001\n\u30af\u30a8\u30ea\u3092\u51e6\u7406\u3057\u7d42\u308f\u3063\u305f\u3042\u3068\u306e\u76f4\u65b9\u4f53\u306e\u6700\u5c0f\u306e\u4f53\u7a4d\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\n\u3053\u306e\u554f\u984c\u306fZ\u306b\u95a2\u3057\u3066\u306f\u307b\u3068\u3093\u3069\u8003\u3048\u306a\u304f\u3066\u69cb\u3044\u307e\u305b\u3093\u3002X\u8ef8\u3068Y\u8ef8\u306e\u5207\u3089\u308c\u305f\u5834\u6240\u3092\u30bd\u30fc\u30c8\u3057\u3066\n\u5dee\u5206\u3092\u307f\u3066\u3059\u3079\u3066\u306e\u7d44\u307f\u5408\u308f\u305b\u304b\u3089\u6700\u5c0f\u3092\u6c42\u3081\u308b\u3068\u7d42\u308f\u308a\u3067\u3059\u3002\n\uff08\u5dee\u5206\u306e\u6700\u5c0f\u540c\u58eb\u3092\u639b\u3051\u5408\u308f\u305b\u308b\u3060\u3051\u3067\u826f\u3055\u305d\u3046\u306a\u6c17\u304c\u3057\u3066\u304d\u307e\u3057\u305f\uff09\n\u30bd\u30fc\u30c8\u3055\u308c\u305f\u30ea\u30b9\u30c8\u304b\u3089\u5dee\u5206\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308b\u4e0a\u3067lists:mapfoldl\u304c\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3057\u305f\u3002\n\nAndo13\n\nando13\n-module(ando13).\n-export([main/1]).\n\nmain([_]) ->\n  N = to_i(io:get_line(\"\")),\n  MOD = pow(10, 9),\n  {A, Two, Five} = lists:foldl(fun(X, {Prod, T2, T5}) ->\n                                   {Y, C2} = divo(X, 2),\n                                   {Z, C5} = divo(Y, 5),\n                                   {(Prod * Z) rem MOD, T2 + C2, T5 + C5}\n                               end, {1, 0, 0}, lists:seq(1, N)),\n  io:format(\"~p~n\", [lists:foldl(fun(X,Acc) -> (X * Acc) rem MOD end, A, lists:duplicate(Two - Five, 2))]),\n  init:stop().\n\ndivo(X, N) -> divo(X, N, 0).\ndivo(X, N, C) when X rem N == 0 -> divo(X div N, N, C + 1);\ndivo(X, _, C) -> {X, C}.\n\npow(_, 0) -> 1;\npow(X, N) -> X * pow(X, N - 1).\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n\n\nN\u306e\u968e\u4e57\u306e\u4e0b\u306e\u6841\u304b\u3089\u9023\u7d9a\u3059\u308b0\u3092\u53d6\u308a\u9664\u3044\u305f\u4e0b8\u6841\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\nN\u304c\u5927\u304d\u3044\u305f\u3081\u307e\u3068\u3082\u306b\u968e\u4e57\u3092\u8a08\u7b97\u3059\u308b\u3068\u5236\u9650\u6642\u9593\u306b\u9593\u306b\u5408\u3044\u307e\u305b\u3093\u3002\n\u305d\u3053\u3067\u4e0b\u306e\u6841\u304b\u3089\u9023\u7d9a\u3059\u308b0\u3092\u53d6\u308a\u9664\u304f\u3068\u3044\u3046\u70b9\u3068\u4e0b8\u6841\u3068\u3044\u3046\u70b9\u306b\u6ce8\u76ee\u3057\u307e\u3059\u3002\n\u4e0b\u306e\u6841\u304b\u3089\u9023\u7d9a\u3059\u308b0\u3092\u53d6\u308a\u9664\u304f\u3068\u3044\u3046\u306e\u306f10\u3067\u5272\u308a\u5207\u308c\u308b\u3046\u3061\u306f10\u3067\u5272\u308a\u7d9a\u3051\u308b\u3068\u540c\u7fa9\u3067\u3059\u3002\n10\u3067\u5272\u308a\u7d9a\u3051\u306a\u304c\u3089\u968e\u4e57\u3092\u8a08\u7b97\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u8a08\u7b97\u9014\u4e2d\u3067\u3082\u4e0b8\u6841\u4ee5\u4e0a\u306f\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u306e\u3067\n10^9\u3067\u5270\u4f59\u3092\u53d6\u308b\u3053\u3068\u3067\u4e0b8\u6841\u306e\u307f\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n10^9*10^9\u7a0b\u5ea6\u306e\u5c0f\u3055\u3044\u6570\u5b57\u3060\u3068N\u304c\u5927\u304d\u304f\u3066\u306a\u308a\u8a08\u7b97\u56de\u6570\u304c\u5897\u3048\u3066\u3082\u9ad8\u901f\u306b\u89e3\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nAndo16\n\nando16.erl\n-module(ando16).\n-export([main/1]).\n\nmain([_]) ->\n  N = read_int(),\n  _ = read_int(),\n  X = [to_i(Token) || Token <- string:tokens(io:get_line(\"\"), \" \")],\n  _ = read_int(),\n  Y = [to_i(Token) || Token <- string:tokens(io:get_line(\"\"), \" \")],\n  All = sets:from_list(lists:seq(1, N)),\n  Have = sets:from_list(X),\n  Sell = sets:from_list(Y),\n  Need = sets:subtract(All, Have),\n  Buy = sets:intersection(Sell, Need),\n  BuySize = sets:size(Buy),\n  if\n    BuySize == 0 ->\n      io:format(\"None~n\");\n    true ->\n      io:format(\"~s~n\", [string:join([integer_to_list(V) || V <- lists:sort(sets:to_list(Buy))], \" \")])\n  end,\n  init:stop().\n\nread_int() -> to_i(io:get_line(\"\")).\nto_i(S) -> element(1, string:to_integer(S)).\n\n\n\u6301\u3063\u3066\u3044\u308b\u672c\u3068\u4e2d\u53e4\u3067\u58f2\u3063\u3066\u3044\u308b\u672c\u304c\u4e0e\u3048\u3089\u308c\u3066\u3001\u8cb7\u3046\u3079\u304d\u672c\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\n\u96c6\u5408\u306e\u6f14\u7b97\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3059\u3079\u3066\u306e\u672c\u306e\u96c6\u5408\u304b\u3089\u6301\u3063\u3066\u3044\u308b\u672c\u306e\u96c6\u5408\u3092\u5f15\u304d\u307e\u3059\u3002\u3053\u308c\u3067\u6301\u3063\u3066\u3044\u306a\u3044\u672c\u306e\u96c6\u5408\u3092\u6c42\u3081\u307e\u3057\u305f\u3002\n\u58f2\u3063\u3066\u3044\u308b\u672c\u3068\u6301\u3063\u3066\u3044\u306a\u3044\u672c\u306e\u96c6\u5408\u304c\u8cb7\u3046\u3079\u304d\u672c\u306e\u96c6\u5408\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u306e\u3067\u305d\u308c\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u30cf\u30de\u3063\u305f\u306e\u304csets:to_list(Set)\u304c\u8fd4\u3059\u30ea\u30b9\u30c8\u304c\u6607\u9806\u3058\u3083\u306a\u3044\u70b9\u3067\u3059\u3002\u8f9b\u3044\u3002\n\nAndo17\n\nando17.erl\n-module(ando17).\n-import(string, [copies/2]).\n-export([main/1]).\n\nmain([_]) ->\n  N = to_i(io:get_line(\"\")),\n  M = to_i(io:get_line(\"\")),\n  io:format(\"~s~n\", [string:substr(copies(string:concat(copies(\"R\", N), copies(\"W\", N)), 10), 1, M)]),\n  init:stop().\n\nto_i(S) -> element(1, string:to_integer(S)).\n\n\nR\u3092N\u500b\u3001W\u3092N\u500b\u4ea4\u4e92\u306b\u4e26\u3079\u3066\u5408\u8a08\u306e\u9577\u3055\u304cM\u306b\u306a\u3063\u305f\u6587\u5b57\u5217\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\n\u554f\u984c\u306e\u5236\u7d04\u304c\u5c0f\u3055\u3044\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3001R\u3092N\u500b\u3001W\u3092N\u500b\u7e70\u308a\u8fd4\u3057\u305f\u6587\u5b57\u5217\u309210\u56de\u7e70\u308a\u8fd4\u3057\u5207\u308a\u51fa\u3059\u3053\u3068\u3067\n\u3053\u306e\u5236\u7d04\u4e0b\u3067\u306f\u6b63\u3057\u3044\u7b54\u3048\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u521d\u3081\u3066\u4f7f\u3046\u3079\u304d\u3067\u306f\u306a\u3044\u3068\u8a00\u308f\u308c\u3066\u3044\u308b-import\u3092\u4f7f\u3063\u305f\u306e\u3067\u3059\u304c\u3001\n\u5c0f\u3055\u3044\u4f7f\u3044\u6368\u3066\u306e\u30b3\u30fc\u30c9\u3067\u3042\u308c\u3070\u4f7f\u3063\u3066\u3082\u826f\u3044\u306e\u304b\u306a\u3068\u611f\u3058\u307e\u3057\u305f\u3002\n\n\u7d42\u308f\u308a\u306b\nErlang\u521d\u5fc3\u8005\u304c\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u306a\u306e\u3067\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3060\u3063\u305f\u308a\u30a2\u30c9\u30d0\u30a4\u30b9\u304c\u6709\u308c\u3070\u305c\u3072\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\u30bf\u30a4\u30c8\u30eb\u306e\u901a\u308a[POH7](https://paiza.jp/poh/ando?read=true)\u3092Erlang\u3067\u5168\u90e8\u89e3\u3044\u305f\u306e\u3067\u30b3\u30fc\u30c9\u3092\u516c\u958b\u3057\u3088\u3046\u3068\u601d\u3063\u305f\u6b21\u7b2c\u3067\u3059\u3002\n\nErlang\u3067\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3063\u307d\u3044\u3053\u3068\u3092\u3059\u308b\u3053\u3068\u304c\u521d\u3081\u3066\u3067\u3044\u308d\u3044\u308d\u6238\u60d1\u3044\u307e\u3057\u305f\u304c\n\u306a\u3093\u3068\u304b\u554f\u984c\u3092\u3059\u3079\u3066\u89e3\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\npaiza\u306e\u74b0\u5883\u3067\u306fErlang\u306f\u8d77\u52d5\u306b1.4\u79d2\u7a0b\u5ea6\u304b\u304b\u308b\u3088\u3046\u3067\u5e73\u5747\u5b9f\u884c\u6642\u9593\u304c1.5\u79d2\u7a0b\u5ea6\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u8ffd\u8a18(12\u670821\u65e5 01:45)\n\u8ffd\u52a0\u3055\u308c\u3066\u3044\u305fando16, ando17\u3092\u8ffd\u52a0\n\n\u30b3\u30fc\u30c9\u4e0a\u3067\u306fmodule\u540d\u304cando*\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001paiza\u306b\u63d0\u51fa\u3059\u308b\u6642\u306fmain\u306b\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u3002\n\n## \u30b3\u30fc\u30c9\n### Ando2\n```erlang:ando2.erl\n-module(ando2).\n-export([main/1]).\n\nmain([_]) ->\n  N = to_i(io:get_line(\"\")),\n  io:format(\"~p~n\", [string:copies(\"Ann\", N)]),\n  init:stop().\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n```\n\"Ann\"\u3068\u3044\u3046\u6587\u5b57\u5217\u3092N\u56de\u7e70\u308a\u8fd4\u3059\u3060\u3051\u306a\u306e\u3067string:copies\u3092\u4f7f\u3046\u3060\u3051\u3067\u304a\u7d42\u3044\u3067\u3059\u3002\n\n### Ando4\n```erlang:ando4.erl\n-module(ando4).\n-export([main/1]).\n\nmain([_]) ->\n  A = to_i(io:get_line(\"\")), \n  B = to_i(io:get_line(\"\")), \n  io:format(\"~p~n\", [A + B]),\n  init:stop().\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n```\n\u3053\u308c\u306fA + B\u3059\u308b\u3060\u3051\u3067\u3059\u306d\u3002\n\n### Ando5\n```erlang:ando5.erl\n-module(ando5).\n-export([main/1]).\n\nmain([_]) ->\n  NS = [io:get_line(\"\") || _ <- lists:seq(1, 5)],\n  YC = count(NS, \"yes\\n\"),\n  if\n    YC > 2 -> io:format(\"yes~n\");\n    true -> io:format(\"no~n\")\n  end,\n  init:stop().\n\ncount([], _) -> 0;\ncount([H|T], X) when H == X -> count(T, X) + 1;\ncount([_|T], X) -> count(T, X).\n```\n\u3053\u308c\u306fyes\u304bno\u3068\u3044\u3046\u6587\u5b57\u5217\u304c5\u56de\u4e0e\u3048\u3089\u308c\u3066\u591a\u3044\u65b9\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\n\u305d\u308c\u3068\u5b9a\u6570\u56de\u51e6\u7406\u3092\u56de\u3057\u305f\u3044\u3068\u304d\u306f\u3069\u3046\u3059\u308b\u306e\u304c\u30d9\u30b9\u30c8\u306a\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n(lists:seq\u3092\u4f7f\u3063\u3066\u5bfe\u51e6\u3057\u3066\u308b\uff09\ncount\u306a\u3093\u3066\u81ea\u4f5c\u3057\u3066\u307e\u3059\u304c\u4f55\u304b\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n(\u66f8\u3044\u3066\u3066\u6c17\u3065\u3044\u305f\u306e\u3067\u3059\u304c\u3001```length(lists:filter(\u307b\u3052))```\u3067\u7d42\u308f\u308a\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\u3002\u3002)\n(\u305d\u3082\u305d\u3082```count([X|T], X) -> count(T, X) + 1```\u306e\u307b\u3046\u304c\u7c21\u6f54\u3067\u3059\u306d)\n\n### Ando6\n```erlang:ando6.erl\n-module(ando6).\n-export([main/1]).\n\nmain([_]) ->\n  N = to_i(io:get_line(\"\")),\n  S = string:join([to_s(X) || X <- lists:seq(N, 0, -1)], \"\\n\"),\n  io:format(\"~s!!~n\", [S]),\n  init:stop().\n\nto_s(T) -> io_lib:format(\"~p\", [T]).\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n```\n\u3053\u308c\u306f\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u3057\u3066\u6700\u5f8c\u306b!!\u3092\u3064\u3051\u308b\u554f\u984c\u3067\u3059\u3002\nto_s\u306a\u3093\u3066\u3044\u3046\u95a2\u6570\u3092\u4f5c\u308a\u307e\u3057\u305f\u304cinteger_to_list\u304c\u3053\u308c\u3068\u540c\u3058\u52d5\u304d\u3092\u3057\u305d\u3046\u3067\u3059\u306d\u3002\n\u3042\u307e\u308a\u306b\u3082\u7121\u77e5\u3002\n\n### Ando7\n```erlang:ando7.erl\n-module(ando7).\n-export([main/1]).\n\nmain([_]) ->\n  [C1, P1] = [to_i(X) || X <- string:tokens(io:get_line(\"\"), \" \")],\n  [C2, P2] = [to_i(X) || X <- string:tokens(io:get_line(\"\"), \" \")],\n  if\n    C1 * P2 > C2 * P1 -> io:format(\"1~n\");\n    true -> io:format(\"2~n\")\n  end,\n  init:stop().\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n```\n\u30b3\u30b9\u30c8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u9ad8\u3044\u307b\u3046\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\nsplit\u306f\u306a\u3044\u306e\u304b\u3068\u7d76\u671b\u3057\u3066\u3044\u307e\u3057\u305f\u304cErlang\u3067\u306fstring:tokens\u306a\u3093\u3067\u3059\u306d\u3002\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u7b2c3\u5f15\u6570\u306f\u8907\u6570\u306e\u30c7\u30ea\u30df\u30bf\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067chars()\u3067\u30de\u30c3\u30c1\u3057\u3066\u3044\u3066\u3001\n\u6587\u5b57\u30ea\u30c6\u30e9\u30eb(? $\u304b\u3089\u59cb\u307e\u308b\u4e00\u6587\u5b57\u306eatom)\u306f\u4f7f\u3048\u306a\u3044\u3068\u3044\u3046\u3068\u3053\u308d\u306b\u30cf\u30de\u308a\u307e\u3057\u305f\u3002\n\n### Ando9\n```erlang:ando9.erl\n-module(ando9).\n-export([main/1]).\n\nmain([_]) ->\n  N = to_i(io:get_line(\"\")),\n  SS = [string:strip(io:get_line(\"\"), right, $\\n) || _ <- lists:seq(1, N)],\n  io:format(\"~p~n\", [string:join(SS, \"_\")]),\n  init:stop().\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n```\n\u5165\u529b\u3055\u308c\u305f\u6587\u5b57\u5217\u3092```_```\u3067\u7d50\u5408\u3057\u3066\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\nstring:join\n\u4ee5\u4e0a\n\n### Ando10\n```erlang:ando10.erl\n-module(ando10).\n-export([main/1]).\n\nmain([_]) ->\n  io:format(\"~p~n\", [fact(to_i(io:get_line(\"\")))]),\n  init:stop().\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n\nfact(0) -> 1;\nfact(N) -> fact(N - 1) * N.\n```\n\u968e\u4e57\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\nfact\u3092\u81ea\u5206\u3067\u5b9a\u7fa9\u3059\u308b\u304b\u3001```lists:foldl(fun(X,Acc) -> X * Acc end, 1, lists:seq(1, N))```\u3059\u308b\u304b\u306e\u3069\u3061\u3089\u304b\u3067\u3059\u306d\u3002\n\u524d\u8005\u306e\u65b9\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u6c17\u304c\u3057\u305f\u306e\u3067\u3053\u3061\u3089\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\n\n### Ando11\n```erlang:ando11.erl\n-module(ando11).\n-export([main/1]).\n\nmain([_]) ->\n  N = to_i(io:get_line(\"\")),\n  NG = in_grid(N),\n  M = to_i(io:get_line(\"\")),\n  MG = in_grid(M),\n  {Y, X} = search(NG, MG),\n  io:format(\"~p ~p~n\", [Y, X]),\n  init:stop().\n\nin_grid(N) ->\n  [[to_i(T) || T <- string:tokens(io:get_line(\"\"), \" \")] || _ <- lists:seq(1, N)].\n\nsearch(NG, MG) ->\n  N = length(NG),\n  M = length(MG),\n  [{X, Y}|_] = lists:dropwhile(fun({BX, BY}) -> not match(NG, MG, BX, BY) end, [{X + 1, Y + 1} || X <- lists:seq(0, N - M), Y <- lists:seq(0, N - M)]),\n  {Y - 1, X - 1}.\n\nmatch(NG, MG, X, Y) ->\n  M = length(MG),\n  MG == [lists:sublist(S, X, M) || S <- lists:sublist(NG, Y, M)].\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n```\n\u6a21\u69d8\u4ed8\u304d\u306e\u6b63\u65b9\u5f62\u306e\u4e2d\u304b\u3089\u3001\u5225\u306e\u6a21\u69d8\u4ed8\u304d\u306e\u6b63\u65b9\u5f62\u3092\u898b\u3064\u3051\u3066\u51fa\u73fe\u5ea7\u6a19\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\n\u53d6\u308a\u3046\u308b\u5ea7\u6a19\u3092\u3059\u3079\u3066\u5217\u6319\u3057\u3066\u3001```lists:dropwhile```\u3067\u5148\u982d\u8981\u7d20\u3092\u53d6\u5f97\u3059\u308b\u5f62\u3067\u3059\u3002\n\u4e00\u81f4\u3057\u3066\u3044\u308b\u304b\u306f```lists:sublist```\u3092\u7528\u3044\u3066\u63a2\u3059\u5bfe\u8c61\u306e\u6b63\u65b9\u5f62\u3092\u5207\u308a\u51fa\u3057\u3001list\u306e\u307e\u307e\u6bd4\u8f03\u3057\u307e\u3057\u305f\u3002\n```lists:sublist```\u304c1-indexed\u306a\u3068\u3053\u308d\u306b\u30cf\u30de\u308a\u307e\u3057\u305f\u3002\n\n### Ando12\n```erlang:ando12.erl\n-module(ando12).\n-export([main/1]).\n\nmain([_]) ->\n  [X, Y, Z, N] = [to_i(T) || T <- string:tokens(io:get_line(\"\"), \" \")],\n  {XS, YS} = readCutting(N, [X], [Y]),\n  io:format(\"~p~n\", [lists:min([AX * AY || AX <- diffList(XS), AY <- diffList(YS)]) * Z]),\n  init:stop().\n\ndiffList(L) ->\n  {X, _} = lists:mapfoldl(fun(T, Acc) -> {T - Acc, T} end, 0, L),\n  X.\n\nreadCutting(0, XS, YS) -> {lists:sort(XS), lists:sort(YS)};\nreadCutting(N, XS, YS) ->\n  [D, A] = [to_i(T) || T <- string:tokens(io:get_line(\"\"), \" \")],\n  if\n    D == 0 -> readCutting(N - 1, [A|XS], YS);\n    true -> readCutting(N - 1, XS, [A|YS])\n  end.\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n```\nX * Y * Z\u306e\u76f4\u65b9\u4f53\u306b\u5bfe\u3057\u3066Y\u8ef8\u3068X\u8ef8\u306b\u5bfe\u3057\u3066\u4e26\u884c\u306b\u5207\u65ad\u3059\u308b\u30af\u30a8\u30ea\u304c\u98db\u3093\u3067\u6765\u308b\u306e\u3067\u3001\n\u30af\u30a8\u30ea\u3092\u51e6\u7406\u3057\u7d42\u308f\u3063\u305f\u3042\u3068\u306e\u76f4\u65b9\u4f53\u306e\u6700\u5c0f\u306e\u4f53\u7a4d\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\n\u3053\u306e\u554f\u984c\u306fZ\u306b\u95a2\u3057\u3066\u306f\u307b\u3068\u3093\u3069\u8003\u3048\u306a\u304f\u3066\u69cb\u3044\u307e\u305b\u3093\u3002X\u8ef8\u3068Y\u8ef8\u306e\u5207\u3089\u308c\u305f\u5834\u6240\u3092\u30bd\u30fc\u30c8\u3057\u3066\n\u5dee\u5206\u3092\u307f\u3066\u3059\u3079\u3066\u306e\u7d44\u307f\u5408\u308f\u305b\u304b\u3089\u6700\u5c0f\u3092\u6c42\u3081\u308b\u3068\u7d42\u308f\u308a\u3067\u3059\u3002\n\uff08\u5dee\u5206\u306e\u6700\u5c0f\u540c\u58eb\u3092\u639b\u3051\u5408\u308f\u305b\u308b\u3060\u3051\u3067\u826f\u3055\u305d\u3046\u306a\u6c17\u304c\u3057\u3066\u304d\u307e\u3057\u305f\uff09\n\u30bd\u30fc\u30c8\u3055\u308c\u305f\u30ea\u30b9\u30c8\u304b\u3089\u5dee\u5206\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308b\u4e0a\u3067```lists:mapfoldl```\u304c\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3057\u305f\u3002\n\n### Ando13\n```erlang:ando13\n-module(ando13).\n-export([main/1]).\n\nmain([_]) ->\n  N = to_i(io:get_line(\"\")),\n  MOD = pow(10, 9),\n  {A, Two, Five} = lists:foldl(fun(X, {Prod, T2, T5}) ->\n                                   {Y, C2} = divo(X, 2),\n                                   {Z, C5} = divo(Y, 5),\n                                   {(Prod * Z) rem MOD, T2 + C2, T5 + C5}\n                               end, {1, 0, 0}, lists:seq(1, N)),\n  io:format(\"~p~n\", [lists:foldl(fun(X,Acc) -> (X * Acc) rem MOD end, A, lists:duplicate(Two - Five, 2))]),\n  init:stop().\n\ndivo(X, N) -> divo(X, N, 0).\ndivo(X, N, C) when X rem N == 0 -> divo(X div N, N, C + 1);\ndivo(X, _, C) -> {X, C}.\n\npow(_, 0) -> 1;\npow(X, N) -> X * pow(X, N - 1).\n\nto_i(S) ->\n  {I, _} = string:to_integer(S),\n  I.\n```\nN\u306e\u968e\u4e57\u306e\u4e0b\u306e\u6841\u304b\u3089\u9023\u7d9a\u3059\u308b0\u3092\u53d6\u308a\u9664\u3044\u305f\u4e0b8\u6841\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\nN\u304c\u5927\u304d\u3044\u305f\u3081\u307e\u3068\u3082\u306b\u968e\u4e57\u3092\u8a08\u7b97\u3059\u308b\u3068\u5236\u9650\u6642\u9593\u306b\u9593\u306b\u5408\u3044\u307e\u305b\u3093\u3002\n\u305d\u3053\u3067\u4e0b\u306e\u6841\u304b\u3089\u9023\u7d9a\u3059\u308b0\u3092\u53d6\u308a\u9664\u304f\u3068\u3044\u3046\u70b9\u3068\u4e0b8\u6841\u3068\u3044\u3046\u70b9\u306b\u6ce8\u76ee\u3057\u307e\u3059\u3002\n\u4e0b\u306e\u6841\u304b\u3089\u9023\u7d9a\u3059\u308b0\u3092\u53d6\u308a\u9664\u304f\u3068\u3044\u3046\u306e\u306f10\u3067\u5272\u308a\u5207\u308c\u308b\u3046\u3061\u306f10\u3067\u5272\u308a\u7d9a\u3051\u308b\u3068\u540c\u7fa9\u3067\u3059\u3002\n10\u3067\u5272\u308a\u7d9a\u3051\u306a\u304c\u3089\u968e\u4e57\u3092\u8a08\u7b97\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u8a08\u7b97\u9014\u4e2d\u3067\u3082\u4e0b8\u6841\u4ee5\u4e0a\u306f\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u306e\u3067\n10^9\u3067\u5270\u4f59\u3092\u53d6\u308b\u3053\u3068\u3067\u4e0b8\u6841\u306e\u307f\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n10^9*10^9\u7a0b\u5ea6\u306e\u5c0f\u3055\u3044\u6570\u5b57\u3060\u3068N\u304c\u5927\u304d\u304f\u3066\u306a\u308a\u8a08\u7b97\u56de\u6570\u304c\u5897\u3048\u3066\u3082\u9ad8\u901f\u306b\u89e3\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### Ando16\n```erlang:ando16.erl\n-module(ando16).\n-export([main/1]).\n\nmain([_]) ->\n  N = read_int(),\n  _ = read_int(),\n  X = [to_i(Token) || Token <- string:tokens(io:get_line(\"\"), \" \")],\n  _ = read_int(),\n  Y = [to_i(Token) || Token <- string:tokens(io:get_line(\"\"), \" \")],\n  All = sets:from_list(lists:seq(1, N)),\n  Have = sets:from_list(X),\n  Sell = sets:from_list(Y),\n  Need = sets:subtract(All, Have),\n  Buy = sets:intersection(Sell, Need),\n  BuySize = sets:size(Buy),\n  if\n    BuySize == 0 ->\n      io:format(\"None~n\");\n    true ->\n      io:format(\"~s~n\", [string:join([integer_to_list(V) || V <- lists:sort(sets:to_list(Buy))], \" \")])\n  end,\n  init:stop().\n\nread_int() -> to_i(io:get_line(\"\")).\nto_i(S) -> element(1, string:to_integer(S)).\n```\n\u6301\u3063\u3066\u3044\u308b\u672c\u3068\u4e2d\u53e4\u3067\u58f2\u3063\u3066\u3044\u308b\u672c\u304c\u4e0e\u3048\u3089\u308c\u3066\u3001\u8cb7\u3046\u3079\u304d\u672c\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\n\u96c6\u5408\u306e\u6f14\u7b97\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3059\u3079\u3066\u306e\u672c\u306e\u96c6\u5408\u304b\u3089\u6301\u3063\u3066\u3044\u308b\u672c\u306e\u96c6\u5408\u3092\u5f15\u304d\u307e\u3059\u3002\u3053\u308c\u3067\u6301\u3063\u3066\u3044\u306a\u3044\u672c\u306e\u96c6\u5408\u3092\u6c42\u3081\u307e\u3057\u305f\u3002\n\u58f2\u3063\u3066\u3044\u308b\u672c\u3068\u6301\u3063\u3066\u3044\u306a\u3044\u672c\u306e\u96c6\u5408\u304c\u8cb7\u3046\u3079\u304d\u672c\u306e\u96c6\u5408\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u306e\u3067\u305d\u308c\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u30cf\u30de\u3063\u305f\u306e\u304c```sets:to_list(Set)```\u304c\u8fd4\u3059\u30ea\u30b9\u30c8\u304c\u6607\u9806\u3058\u3083\u306a\u3044\u70b9\u3067\u3059\u3002\u8f9b\u3044\u3002\n\n### Ando17\n```erlang:ando17.erl\n-module(ando17).\n-import(string, [copies/2]).\n-export([main/1]).\n\nmain([_]) ->\n  N = to_i(io:get_line(\"\")),\n  M = to_i(io:get_line(\"\")),\n  io:format(\"~s~n\", [string:substr(copies(string:concat(copies(\"R\", N), copies(\"W\", N)), 10), 1, M)]),\n  init:stop().\n\nto_i(S) -> element(1, string:to_integer(S)).\n```\nR\u3092N\u500b\u3001W\u3092N\u500b\u4ea4\u4e92\u306b\u4e26\u3079\u3066\u5408\u8a08\u306e\u9577\u3055\u304cM\u306b\u306a\u3063\u305f\u6587\u5b57\u5217\u3092\u51fa\u529b\u3059\u308b\u554f\u984c\u3067\u3059\u3002\n\u554f\u984c\u306e\u5236\u7d04\u304c\u5c0f\u3055\u3044\u3053\u3068\u3092\u5229\u7528\u3057\u3066\u3001R\u3092N\u500b\u3001W\u3092N\u500b\u7e70\u308a\u8fd4\u3057\u305f\u6587\u5b57\u5217\u309210\u56de\u7e70\u308a\u8fd4\u3057\u5207\u308a\u51fa\u3059\u3053\u3068\u3067\n\u3053\u306e\u5236\u7d04\u4e0b\u3067\u306f\u6b63\u3057\u3044\u7b54\u3048\u3092\u8fd4\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u521d\u3081\u3066\u4f7f\u3046\u3079\u304d\u3067\u306f\u306a\u3044\u3068\u8a00\u308f\u308c\u3066\u3044\u308b```-import```\u3092\u4f7f\u3063\u305f\u306e\u3067\u3059\u304c\u3001\n\u5c0f\u3055\u3044\u4f7f\u3044\u6368\u3066\u306e\u30b3\u30fc\u30c9\u3067\u3042\u308c\u3070\u4f7f\u3063\u3066\u3082\u826f\u3044\u306e\u304b\u306a\u3068\u611f\u3058\u307e\u3057\u305f\u3002\n\n### \u7d42\u308f\u308a\u306b\nErlang\u521d\u5fc3\u8005\u304c\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u306a\u306e\u3067\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3060\u3063\u305f\u308a\u30a2\u30c9\u30d0\u30a4\u30b9\u304c\u6709\u308c\u3070\u305c\u3072\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n", "tags": ["Erlang", "POH"]}