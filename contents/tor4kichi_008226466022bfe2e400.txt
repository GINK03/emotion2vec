{"context": "\n\n\u8981\u4ef6\n\u52d5\u753b\u518d\u751f\u3068\u4e00\u7dd2\u306b\u8868\u793a\u3059\u308b\u30b3\u30f3\u30c8\u30ed\u30fc\u30ebUI\u3092\u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u306e\u79fb\u52d5\u3084\u30bf\u30c3\u30c1\u64cd\u4f5c\u304c\u4e00\u5b9a\u6642\u9593\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u304d\u306b\u81ea\u52d5\u3067\u975e\u8868\u793a\u306b\u3057\u305f\u3044\u3002\n\u3064\u3044\u3067\u306b\u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u3082\u6d88\u305b\u308b\u3068\u5c1a\u826f\u3057\u3002\n\n\u30d3\u30d8\u30a4\u30d3\u30a2\u3067\u5b9f\u88c5\n\nAutoHideBehavior.cs\n\nusing Microsoft.Xaml.Interactivity;\nusing System;\nusing System.Threading;\nusing Windows.UI.Core;\nusing Windows.UI.Xaml;\n\nnamespace MyApp.Views.Behaviors\n{\n    public class AutoHide : Behavior<FrameworkElement>\n    {\n\n\n        #region IsEnable Property\n\n        public static readonly DependencyProperty IsEnableProperty =\n            DependencyProperty.Register(\"IsEnable\"\n                    , typeof(bool)\n                    , typeof(AutoHide)\n                    , new PropertyMetadata(default(bool), OnIsEnablePropertyChanged)\n                );\n\n        public bool IsEnable\n        {\n            get { return (bool)GetValue(IsEnableProperty); }\n            set { SetValue(IsEnableProperty, value); }\n        }\n\n\n        public static void OnIsEnablePropertyChanged(object sender, DependencyPropertyChangedEventArgs args)\n        {\n            AutoHide source = (AutoHide)sender;\n\n            var isActive = (bool)args.NewValue;\n\n            if (isActive)\n            {\n                source.EnableAutoHide();\n            }\n            else\n            {\n                source.DisableteAutoHide();\n            }\n        }\n\n        #endregion\n\n\n\n\n\n\n        #region Delay Property\n\n        public static readonly DependencyProperty DelayProperty =\n            DependencyProperty.Register(\"Delay\"\n                    , typeof(TimeSpan)\n                    , typeof(AutoHide)\n                    , new PropertyMetadata(default(double))\n                );\n\n        public TimeSpan Delay\n        {\n            get { return (TimeSpan)GetValue(DelayProperty); }\n            set { SetValue(DelayProperty, value); }\n        }\n\n\n        public static void OnDelayPropertyChanged(object sender, DependencyPropertyChangedEventArgs args)\n        {\n            AutoHide source = (AutoHide)sender;\n\n            source._NextHideTime = source._PrevPreventTime + source.Delay;\n        }\n\n        #endregion\n\n\n\n\n\n        #region WithCursor Property \n\n        public static readonly DependencyProperty WithCursorProperty =\n            DependencyProperty.Register(\"WithCursor\"\n                , typeof(bool)\n                , typeof(AutoHide)\n                , new PropertyMetadata(true)\n            );\n\n        public bool WithCursor\n        {\n            get { return (bool)GetValue(WithCursorProperty); }\n            set { SetValue(WithCursorProperty, value); }\n        }\n\n        #endregion\n\n\n\n\n\n\n\n        public void PreventAutoHide()\n        {\n            _PrevPreventTime = DateTime.Now;\n            _NextHideTime = _PrevPreventTime + Delay;\n\n            this.AssociatedObject.Visibility = Visibility.Visible;\n\n            CoreWindow.GetForCurrentThread().PointerCursor = _CoreCursor;\n        }\n\n\n\n\n\n\n\n\n        protected override void OnAttached()\n        {\n            base.OnAttached();\n\n            _CoreCursor = CoreWindow.GetForCurrentThread().PointerCursor;\n\n        }\n\n        protected override void OnDetaching()\n        {\n            base.OnDetaching();\n\n            _Timer?.Dispose();\n            _Timer = null;\n\n            CoreWindow.GetForCurrentThread().PointerCursor = _CoreCursor;\n        }\n\n\n\n\n        private void EnableAutoHide()\n        {\n            _NextHideTime = DateTime.Now + Delay;\n\n            _Timer = new Timer(async (state) => \n            {\n                await Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =>\n                {\n                    if (this.AssociatedObject.Visibility == Visibility.Visible && \n                        _NextHideTime < DateTime.Now)\n                    {\n                        this.AssociatedObject.Visibility = Visibility.Collapsed;\n\n                        if (WithCursor)\n                        {\n                            CoreWindow.GetForCurrentThread().PointerCursor = null;\n                        }\n                    }\n                });\n            }\n            , this, Delay, TimeSpan.FromMilliseconds(100));\n\n\n        }\n\n        private void DisableteAutoHide()\n        {\n            _Timer?.Dispose();\n            _Timer = null;\n\n            this.AssociatedObject.Visibility = Visibility.Visible;\n            CoreWindow.GetForCurrentThread().PointerCursor = _CoreCursor;\n        }\n\n\n\n        CoreCursor _CoreCursor;\n        DateTime _PrevPreventTime;\n        DateTime _NextHideTime;\n        Timer _Timer;\n    }\n}\n\n\n\n\n\nXAML\u3067\u5229\u7528\n\nUsingAutoHide.xaml\n<!--\nxmlns:mybehavior=\"using:MyApp.Views.Behaviors\"\nxmlns:i=\"using:Microsoft.Xaml.Interactivity\"\nxmlns:core=\"using:Microsoft.Xaml.Interactions.Core\"\n-->\n<i:Interaction.Behaviors>\n    <mybehavior:AutoHide x:Name=\"AutoHideBehavior\"\n                            IsEnable=\"{Binding IsAutoHideEnable}\"\n                            Delay=\"00:00:03\" \n                            WithCursol=\"True\"\n                            >\n        <i:Interaction.Behaviors>\n            <core:EventTriggerBehavior SourceObject=\"{Binding ElementName=MediaControl}\" EventName=\"Tapped\">\n                <core:CallMethodAction TargetObject=\"{Binding ElementName=AutoHideBehavior}\" MethodName=\"PreventAutoHide\" />\n            </core:EventTriggerBehavior>\n            <core:EventTriggerBehavior SourceObject=\"{Binding ElementName=MediaControl}\" EventName=\"PointerMoved\">\n                <core:CallMethodAction TargetObject=\"{Binding ElementName=AutoHideBehavior}\" MethodName=\"PreventAutoHide\" />\n            </core:EventTriggerBehavior>\n\n        </i:Interaction.Behaviors>\n    </mybehavior:AutoHide>\n</i:Interaction.Behaviors>\n\n\n\n\u81ea\u52d5\u975e\u8868\u793a\u306b\u3057\u305f\u3044UI\u306e\u30d3\u30d8\u30a4\u30d3\u30a2\u306bAutoHideBehavior\u3092\u304f\u3063\u3064\u3051\u307e\u3059\u3002\nViewModel\u5074\u3067\u4e88\u3081bool\u578b\u306eIsAutoHideEnable\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\"MediaControl\"\u3068\u3042\u308b\u3068\u3053\u308d\u306f\u3001\u30de\u30a6\u30b9\u64cd\u4f5c\u3084\u30bf\u30c3\u30d7\u64cd\u4f5c\u3092\u53d7\u3051\u3066UI\u975e\u8868\u793a\u3092\u89e3\u9664\u3057\u305f\u3044Panel\u8981\u7d20\u7b49\u306ex:Name\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u30d3\u30d8\u30a4\u30d3\u30a2\u52d5\u4f5c\u306e\u88dc\u8db3\u8aac\u660e\n\u524d\u63d0\u3068\u3057\u3066\u3001FrameworkElement\u304cVisibilityChanged\u30a4\u30d9\u30f3\u30c8\u3092\u6301\u305f\u306a\u3044\u305f\u3081\u3001Timer\u3068NextHideTime\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u975e\u8868\u793a\u6642\u9593\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u65b9\u6cd5\u3092\u3068\u3063\u3066\u3044\u307e\u3059\u3002\nTimer\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u5185\u306fTimer\u30b9\u30ec\u30c3\u30c9\u306e\u305f\u3081\u3001UI\u30b9\u30ec\u30c3\u30c9\u3078\u306e\u5207\u308a\u66ff\u3048\u306e\u305f\u3081Dispatcher.RunAsync\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\nWithCursor\u3092True\u306b\u3059\u308b\u3068\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30ab\u30fc\u30bd\u30eb\u3092\u307e\u308b\u3054\u3068\u8868\u793a\u30fb\u975e\u8868\u793a\u3092\u5207\u308a\u66ff\u3048\u3066\u307e\u3059\u3002FrameworkElement\u3054\u3068\u306b\u30ab\u30fc\u30bd\u30eb\u3092\u5909\u3048\u308b\u65b9\u6cd5\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u306e\u3067\u3053\u306e\u5f62\u3092\u3068\u3063\u3066\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001WithCursor\u3092True\u306b\u3059\u308b\u3068\u4e0a\u8a18\u306e\u4f8b\u3067\u306fMediaControl\u4ee5\u5916\u306e\u8981\u7d20\u4e0a\u3067\u3082\u30ab\u30fc\u30bd\u30eb\u304c\u6d88\u3048\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u65e2\u5b9a\u306e\u30ab\u30fc\u30bd\u30eb\u8868\u793a\u304c\u5b58\u5728\u3057\u306a\u304f\u306a\u308b\u305f\u3081\u3067\u3059\u3002\n\u3053\u306e\u554f\u984c\u3092\u56de\u907f\u3059\u308b\u306b\u306fMediaControl\u4ee5\u5916\u306e\u8981\u7d20\u306bCursor\u3092\u6307\u5b9a\u3059\u308b\u304b\u3001\u307e\u305f\u306f\u3001\u4f55\u3082\u8868\u793a\u3057\u306a\u3044Cursor\u3092\u30ea\u30bd\u30fc\u30b9\u3068\u3057\u3066\u8ffd\u52a0\u3057\u3066\u3001MediaControl\u8981\u7d20\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\uff08\u524d\u8005\u306f\u691c\u8a3c\u6e08\u307f\u3067\u3059\u304c\u3001\u5f8c\u8005\u306f\u672a\u691c\u8a3c\u3067\u3059\u3002\uff09\n\n\u30b3\u30fc\u30c9\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\nPD/\u30d1\u30d6\u30ea\u30c3\u30af\u30c9\u30e1\u30a4\u30f3\n\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u306f\u3001\u81ea\u5206\u306e\u8cac\u4efb\u3067\u81ea\u7531\u306b\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n## \u8981\u4ef6\n\u52d5\u753b\u518d\u751f\u3068\u4e00\u7dd2\u306b\u8868\u793a\u3059\u308b\u30b3\u30f3\u30c8\u30ed\u30fc\u30ebUI\u3092\u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u306e\u79fb\u52d5\u3084\u30bf\u30c3\u30c1\u64cd\u4f5c\u304c\u4e00\u5b9a\u6642\u9593\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u304d\u306b\u81ea\u52d5\u3067\u975e\u8868\u793a\u306b\u3057\u305f\u3044\u3002\n\n\u3064\u3044\u3067\u306b\u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u3082\u6d88\u305b\u308b\u3068\u5c1a\u826f\u3057\u3002\n\n\n\n## \u30d3\u30d8\u30a4\u30d3\u30a2\u3067\u5b9f\u88c5\n\n```csharp:AutoHideBehavior.cs\n\nusing Microsoft.Xaml.Interactivity;\nusing System;\nusing System.Threading;\nusing Windows.UI.Core;\nusing Windows.UI.Xaml;\n\nnamespace MyApp.Views.Behaviors\n{\n\tpublic class AutoHide : Behavior<FrameworkElement>\n\t{\n\n\n\t\t#region IsEnable Property\n\n\t\tpublic static readonly DependencyProperty IsEnableProperty =\n\t\t\tDependencyProperty.Register(\"IsEnable\"\n\t\t\t\t\t, typeof(bool)\n\t\t\t\t\t, typeof(AutoHide)\n\t\t\t\t\t, new PropertyMetadata(default(bool), OnIsEnablePropertyChanged)\n\t\t\t\t);\n\n\t\tpublic bool IsEnable\n\t\t{\n\t\t\tget { return (bool)GetValue(IsEnableProperty); }\n\t\t\tset { SetValue(IsEnableProperty, value); }\n\t\t}\n\n\n\t\tpublic static void OnIsEnablePropertyChanged(object sender, DependencyPropertyChangedEventArgs args)\n\t\t{\n\t\t\tAutoHide source = (AutoHide)sender;\n\n\t\t\tvar isActive = (bool)args.NewValue;\n\n\t\t\tif (isActive)\n\t\t\t{\n\t\t\t\tsource.EnableAutoHide();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tsource.DisableteAutoHide();\n\t\t\t}\n\t\t}\n\n\t\t#endregion\n\n\n\n\t\t\n\n\n\t\t#region Delay Property\n\n\t\tpublic static readonly DependencyProperty DelayProperty =\n\t\t\tDependencyProperty.Register(\"Delay\"\n\t\t\t\t\t, typeof(TimeSpan)\n\t\t\t\t\t, typeof(AutoHide)\n\t\t\t\t\t, new PropertyMetadata(default(double))\n\t\t\t\t);\n\n\t\tpublic TimeSpan Delay\n\t\t{\n\t\t\tget { return (TimeSpan)GetValue(DelayProperty); }\n\t\t\tset { SetValue(DelayProperty, value); }\n\t\t}\n\n\n\t\tpublic static void OnDelayPropertyChanged(object sender, DependencyPropertyChangedEventArgs args)\n\t\t{\n\t\t\tAutoHide source = (AutoHide)sender;\n\n\t\t\tsource._NextHideTime = source._PrevPreventTime + source.Delay;\n\t\t}\n\n\t\t#endregion\n\n\n\n\n\n\t\t#region WithCursor Property \n\n\t\tpublic static readonly DependencyProperty WithCursorProperty =\n\t\t\tDependencyProperty.Register(\"WithCursor\"\n\t\t\t\t, typeof(bool)\n\t\t\t\t, typeof(AutoHide)\n\t\t\t\t, new PropertyMetadata(true)\n\t\t\t);\n\n\t\tpublic bool WithCursor\n\t\t{\n\t\t\tget { return (bool)GetValue(WithCursorProperty); }\n\t\t\tset { SetValue(WithCursorProperty, value); }\n\t\t}\n\n\t\t#endregion\n\n\n\n\n\n\n\n\t\tpublic void PreventAutoHide()\n\t\t{\n\t\t\t_PrevPreventTime = DateTime.Now;\n\t\t\t_NextHideTime = _PrevPreventTime + Delay;\n\n\t\t\tthis.AssociatedObject.Visibility = Visibility.Visible;\n\n\t\t\tCoreWindow.GetForCurrentThread().PointerCursor = _CoreCursor;\n\t\t}\n\n\n\n\n\n\n\n\n\t\tprotected override void OnAttached()\n\t\t{\n\t\t\tbase.OnAttached();\n\n\t\t\t_CoreCursor = CoreWindow.GetForCurrentThread().PointerCursor;\n\n\t\t}\n\n\t\tprotected override void OnDetaching()\n\t\t{\n\t\t\tbase.OnDetaching();\n\n\t\t\t_Timer?.Dispose();\n\t\t\t_Timer = null;\n\n\t\t\tCoreWindow.GetForCurrentThread().PointerCursor = _CoreCursor;\n\t\t}\n\n\n\n\n\t\tprivate void EnableAutoHide()\n\t\t{\n\t\t\t_NextHideTime = DateTime.Now + Delay;\n\n\t\t\t_Timer = new Timer(async (state) => \n\t\t\t{\n\t\t\t\tawait Dispatcher.RunAsync(Windows.UI.Core.CoreDispatcherPriority.Normal, () =>\n\t\t\t\t{\n\t\t\t\t\tif (this.AssociatedObject.Visibility == Visibility.Visible && \n\t\t\t\t\t\t_NextHideTime < DateTime.Now)\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.AssociatedObject.Visibility = Visibility.Collapsed;\n\n\t\t\t\t\t\tif (WithCursor)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tCoreWindow.GetForCurrentThread().PointerCursor = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t, this, Delay, TimeSpan.FromMilliseconds(100));\n\n\t\t\t\n\t\t}\n\n\t\tprivate void DisableteAutoHide()\n\t\t{\n\t\t\t_Timer?.Dispose();\n\t\t\t_Timer = null;\n\n\t\t\tthis.AssociatedObject.Visibility = Visibility.Visible;\n\t\t\tCoreWindow.GetForCurrentThread().PointerCursor = _CoreCursor;\n\t\t}\n\n\n\n\t\tCoreCursor _CoreCursor;\n\t\tDateTime _PrevPreventTime;\n\t\tDateTime _NextHideTime;\n\t\tTimer _Timer;\n\t}\n}\n\n\n```\n\n## XAML\u3067\u5229\u7528\n\n```xml:UsingAutoHide.xaml\n<!--\nxmlns:mybehavior=\"using:MyApp.Views.Behaviors\"\nxmlns:i=\"using:Microsoft.Xaml.Interactivity\"\nxmlns:core=\"using:Microsoft.Xaml.Interactions.Core\"\n-->\n<i:Interaction.Behaviors>\n    <mybehavior:AutoHide x:Name=\"AutoHideBehavior\"\n                            IsEnable=\"{Binding IsAutoHideEnable}\"\n                            Delay=\"00:00:03\" \n                            WithCursol=\"True\"\n                            >\n        <i:Interaction.Behaviors>\n            <core:EventTriggerBehavior SourceObject=\"{Binding ElementName=MediaControl}\" EventName=\"Tapped\">\n                <core:CallMethodAction TargetObject=\"{Binding ElementName=AutoHideBehavior}\" MethodName=\"PreventAutoHide\" />\n            </core:EventTriggerBehavior>\n            <core:EventTriggerBehavior SourceObject=\"{Binding ElementName=MediaControl}\" EventName=\"PointerMoved\">\n                <core:CallMethodAction TargetObject=\"{Binding ElementName=AutoHideBehavior}\" MethodName=\"PreventAutoHide\" />\n            </core:EventTriggerBehavior>\n\n        </i:Interaction.Behaviors>\n    </mybehavior:AutoHide>\n</i:Interaction.Behaviors>\n                \n```\n\n\u81ea\u52d5\u975e\u8868\u793a\u306b\u3057\u305f\u3044UI\u306e\u30d3\u30d8\u30a4\u30d3\u30a2\u306bAutoHideBehavior\u3092\u304f\u3063\u3064\u3051\u307e\u3059\u3002\nViewModel\u5074\u3067\u4e88\u3081bool\u578b\u306eIsAutoHideEnable\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\"MediaControl\"\u3068\u3042\u308b\u3068\u3053\u308d\u306f\u3001\u30de\u30a6\u30b9\u64cd\u4f5c\u3084\u30bf\u30c3\u30d7\u64cd\u4f5c\u3092\u53d7\u3051\u3066UI\u975e\u8868\u793a\u3092\u89e3\u9664\u3057\u305f\u3044Panel\u8981\u7d20\u7b49\u306ex:Name\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\n## \u30d3\u30d8\u30a4\u30d3\u30a2\u52d5\u4f5c\u306e\u88dc\u8db3\u8aac\u660e\n\n\u524d\u63d0\u3068\u3057\u3066\u3001FrameworkElement\u304cVisibilityChanged\u30a4\u30d9\u30f3\u30c8\u3092\u6301\u305f\u306a\u3044\u305f\u3081\u3001Timer\u3068NextHideTime\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u975e\u8868\u793a\u6642\u9593\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u65b9\u6cd5\u3092\u3068\u3063\u3066\u3044\u307e\u3059\u3002\n\nTimer\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u5185\u306fTimer\u30b9\u30ec\u30c3\u30c9\u306e\u305f\u3081\u3001UI\u30b9\u30ec\u30c3\u30c9\u3078\u306e\u5207\u308a\u66ff\u3048\u306e\u305f\u3081Dispatcher.RunAsync\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\nWithCursor\u3092True\u306b\u3059\u308b\u3068\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u30ab\u30fc\u30bd\u30eb\u3092\u307e\u308b\u3054\u3068\u8868\u793a\u30fb\u975e\u8868\u793a\u3092\u5207\u308a\u66ff\u3048\u3066\u307e\u3059\u3002FrameworkElement\u3054\u3068\u306b\u30ab\u30fc\u30bd\u30eb\u3092\u5909\u3048\u308b\u65b9\u6cd5\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u308b\u306e\u3067\u3053\u306e\u5f62\u3092\u3068\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u306a\u304a\u3001WithCursor\u3092True\u306b\u3059\u308b\u3068\u4e0a\u8a18\u306e\u4f8b\u3067\u306fMediaControl\u4ee5\u5916\u306e\u8981\u7d20\u4e0a\u3067\u3082\u30ab\u30fc\u30bd\u30eb\u304c\u6d88\u3048\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u65e2\u5b9a\u306e\u30ab\u30fc\u30bd\u30eb\u8868\u793a\u304c\u5b58\u5728\u3057\u306a\u304f\u306a\u308b\u305f\u3081\u3067\u3059\u3002\n\n\u3053\u306e\u554f\u984c\u3092\u56de\u907f\u3059\u308b\u306b\u306fMediaControl\u4ee5\u5916\u306e\u8981\u7d20\u306bCursor\u3092\u6307\u5b9a\u3059\u308b\u304b\u3001\u307e\u305f\u306f\u3001\u4f55\u3082\u8868\u793a\u3057\u306a\u3044Cursor\u3092\u30ea\u30bd\u30fc\u30b9\u3068\u3057\u3066\u8ffd\u52a0\u3057\u3066\u3001MediaControl\u8981\u7d20\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\uff08\u524d\u8005\u306f\u691c\u8a3c\u6e08\u307f\u3067\u3059\u304c\u3001\u5f8c\u8005\u306f\u672a\u691c\u8a3c\u3067\u3059\u3002\uff09\n\n\n\n\n\n## \u30b3\u30fc\u30c9\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\nPD/\u30d1\u30d6\u30ea\u30c3\u30af\u30c9\u30e1\u30a4\u30f3\n\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u306f\u3001\u81ea\u5206\u306e\u8cac\u4efb\u3067\u81ea\u7531\u306b\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["UWP", "C#"]}