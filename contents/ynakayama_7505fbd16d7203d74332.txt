{"context": " More than 1 year has passed since last update.\n\n\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\nPython \u306b\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066 random \u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5099\u308f\u3063\u3066\u304a\u308a\u3001\u3055\u307e\u3056\u307e\u306a\u5206\u5e03\u306e\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u306f\u4e3b\u306b\u6b21\u306e\u3088\u3046\u306a\u7279\u9577\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3088\u304f\u4f7f\u3046\u30e1\u30b8\u30e3\u30fc\u306a\u5206\u5e03\u3067\u3042\u308b\u4e00\u69d8\u5206\u5e03\u3001\u6b63\u898f\u5206\u5e03\u3001\u5bfe\u6570\u6b63\u898f\u5206\u5e03\u3001\u8ca0\u306e\u6307\u6570\u5206\u5e03\u3001\u30ac\u30f3\u30de\u304a\u3088\u3073\u30d9\u30fc\u30bf\u5206\u5e03\u3092\u5229\u7528\u3067\u304d\u308b\u3002\n\u4e71\u6570\u751f\u6210\u5668\u3068\u3057\u3066 C \u3067\u5b9f\u88c5\u3055\u308c\u305f\u30e1\u30eb\u30bb\u30f3\u30cc\u30c4\u30a4\u30b9\u30bf (MT) \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3002\nRandom \u3092\u30b5\u30d6\u30af\u30e9\u30b9\u5316\u3057\u3066\u4e71\u6570\u751f\u6210\u5668\u3092\u81ea\u4f5c\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n\n\u4e71\u6570\u751f\u6210\u4f8b\nNumPy \u306e\u30e9\u30f3\u30c0\u30e0\u30b5\u30f3\u30d7\u30eb\u95a2\u6570\u3067\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u307e\u305f\u306f\u6574\u6570\u306a\u3069\u3067\u306e\u4e71\u6570\u751f\u6210\u304c\u3067\u304d\u307e\u3059\u3002\nnp.random.random_sample((5,))\n#=> array([ 0.80055457,  0.19615444,  0.50532311,  0.48243283,  0.56227889])\n\nnp.random.random_sample((5,2))\n#=>\n# array([[ 0.59495428,  0.56194628],\n#        [ 0.93675326,  0.88873404],\n#        [ 0.98967746,  0.2319963 ],\n#        [ 0.20625308,  0.76956028],\n#        [ 0.7870824 ,  0.30181687]])\n\n\n\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u4e26\u3073\u66ff\u3048\npermutation \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u4e26\u3073\u66ff\u3048\u304c\u3067\u304d\u307e\u3059\u3002\ndf = pd.DataFrame(np.arange(10*4).reshape(10,4))\nsampler = np.random.permutation(5)\n#=> array([0, 2, 1, 3, 4])\n\ndf.take(sampler)\n#=>\n#     0   1   2   3\n# 0   0   1   2   3\n# 2   8   9  10  11\n# 1   4   5   6   7\n# 3  12  13  14  15\n#4  16  17  18  19\n\nnp.random.permutation(len(df))\n#=> array([6, 7, 8, 3, 9, 4, 2, 1, 0, 5])\n\n\n\u30c8\u30e9\u30f3\u30d7\u3092\u5f15\u304f\n52 \u679a\u306e\u30c8\u30e9\u30f3\u30d7\u306e\u5c71\u304b\u3089 10 \u679a\u5f15\u304f\u30b3\u30fc\u30c9\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002 random.shuffle \u3092\u4f7f\u3048\u3070\u30b7\u30e3\u30c3\u30d5\u30eb\u3067\u304d\u307e\u3059\u304b\u3089\u3001\u3053\u3053\u304b\u3089\u4efb\u610f\u306e\u679a\u6570\u3092\u5f15\u3051\u3070\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n# \u30c8\u30e9\u30f3\u30d7\u306e\u5c71\u3092\u7528\u610f\u3059\u308b\ndeck = list(\n    itertools.product(list(range(1, 14)),\n                      ['\u30b9\u30da\u30fc\u30c9', '\u30cf\u30fc\u30c8', '\u30c0\u30a4\u30e4', '\u30af\u30e9\u30d6']))\n\nrandom.shuffle(deck) # \u30c7\u30c3\u30ad\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\u3059\u308b\n\nprint(\"\u5f15\u3044\u305f\u30ab\u30fc\u30c9:\")\nfor i in range(10): # 10 \u679a\u306e\u30ab\u30fc\u30c9\u3092\u5f15\u304f\n    print(deck[i][1] + \"\u306e \" + str(deck[i][0]))\n\n#=> \u5f15\u3044\u305f\u30ab\u30fc\u30c9:\n# \u30c0\u30a4\u30e4\u306e 6\n# \u30af\u30e9\u30d6\u306e 3\n# \u30cf\u30fc\u30c8\u306e 10\n# \u30c0\u30a4\u30e4\u306e 12\n# \u30b9\u30da\u30fc\u30c9\u306e 8\n# \u30af\u30e9\u30d6\u306e 13\n# \u30c0\u30a4\u30e4\u306e 13\n# \u30b9\u30da\u30fc\u30c9\u306e 5\n# \u30cf\u30fc\u30c8\u306e 12\n# \u30c0\u30a4\u30e4\u306e 7\n\n\u30c8\u30e9\u30f3\u30d7\u306f 52 \u679a\u3057\u304b\u7121\u3044\u306e\u3067 random.shuffle(53) \u3068\u3059\u308b\u3068 IndexError \u306b\u306a\u308a\u307e\u3059\u3002\n## \u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\n\nPython \u306b\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066 [random](http://docs.python.jp/3.4/library/random.html) \u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5099\u308f\u3063\u3066\u304a\u308a\u3001\u3055\u307e\u3056\u307e\u306a\u5206\u5e03\u306e\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u306f\u4e3b\u306b\u6b21\u306e\u3088\u3046\u306a\u7279\u9577\u304c\u3042\u308a\u307e\u3059\u3002\n\n* \u3088\u304f\u4f7f\u3046\u30e1\u30b8\u30e3\u30fc\u306a\u5206\u5e03\u3067\u3042\u308b\u4e00\u69d8\u5206\u5e03\u3001\u6b63\u898f\u5206\u5e03\u3001\u5bfe\u6570\u6b63\u898f\u5206\u5e03\u3001\u8ca0\u306e\u6307\u6570\u5206\u5e03\u3001\u30ac\u30f3\u30de\u304a\u3088\u3073\u30d9\u30fc\u30bf\u5206\u5e03\u3092\u5229\u7528\u3067\u304d\u308b\u3002\n* \u4e71\u6570\u751f\u6210\u5668\u3068\u3057\u3066 C \u3067\u5b9f\u88c5\u3055\u308c\u305f[\u30e1\u30eb\u30bb\u30f3\u30cc\u30c4\u30a4\u30b9\u30bf (MT)](http://ja.wikipedia.org/wiki/%E3%83%A1%E3%83%AB%E3%82%BB%E3%83%B3%E3%83%8C%E3%83%BB%E3%83%84%E3%82%A4%E3%82%B9%E3%82%BF) \u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3002\n* Random \u3092\u30b5\u30d6\u30af\u30e9\u30b9\u5316\u3057\u3066\u4e71\u6570\u751f\u6210\u5668\u3092\u81ea\u4f5c\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n### \u4e71\u6570\u751f\u6210\u4f8b\n\nNumPy \u306e[\u30e9\u30f3\u30c0\u30e0\u30b5\u30f3\u30d7\u30eb\u95a2\u6570](http://docs.scipy.org/doc/numpy/reference/generated/numpy.random.random_sample.html#numpy.random.random_sample)\u3067\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u307e\u305f\u306f[\u6574\u6570](http://docs.scipy.org/doc/numpy/reference/generated/numpy.random.random_integers.html#numpy.random.random_integers)\u306a\u3069\u3067\u306e\u4e71\u6570\u751f\u6210\u304c\u3067\u304d\u307e\u3059\u3002\n\n```py3\nnp.random.random_sample((5,))\n#=> array([ 0.80055457,  0.19615444,  0.50532311,  0.48243283,  0.56227889])\n\nnp.random.random_sample((5,2))\n#=>\n# array([[ 0.59495428,  0.56194628],\n#        [ 0.93675326,  0.88873404],\n#        [ 0.98967746,  0.2319963 ],\n#        [ 0.20625308,  0.76956028],\n#        [ 0.7870824 ,  0.30181687]])\n```\n\n## \u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u4e26\u3073\u66ff\u3048\n\n[permutation](http://docs.scipy.org/doc/numpy/reference/generated/numpy.random.permutation.html#numpy.random.permutation) \u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u4e26\u3073\u66ff\u3048\u304c\u3067\u304d\u307e\u3059\u3002\n\n```py\ndf = pd.DataFrame(np.arange(10*4).reshape(10,4))\nsampler = np.random.permutation(5)\n#=> array([0, 2, 1, 3, 4])\n\ndf.take(sampler)\n#=>\n#     0   1   2   3\n# 0   0   1   2   3\n# 2   8   9  10  11\n# 1   4   5   6   7\n# 3  12  13  14  15\n#4  16  17  18  19\n\nnp.random.permutation(len(df))\n#=> array([6, 7, 8, 3, 9, 4, 2, 1, 0, 5])\n```\n\n## \u30c8\u30e9\u30f3\u30d7\u3092\u5f15\u304f\n\n52 \u679a\u306e\u30c8\u30e9\u30f3\u30d7\u306e\u5c71\u304b\u3089 10 \u679a\u5f15\u304f\u30b3\u30fc\u30c9\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002 [random.shuffle](https://docs.python.org/3.3/library/random.html#random.shuffle) \u3092\u4f7f\u3048\u3070\u30b7\u30e3\u30c3\u30d5\u30eb\u3067\u304d\u307e\u3059\u304b\u3089\u3001\u3053\u3053\u304b\u3089\u4efb\u610f\u306e\u679a\u6570\u3092\u5f15\u3051\u3070\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n```py3\n# \u30c8\u30e9\u30f3\u30d7\u306e\u5c71\u3092\u7528\u610f\u3059\u308b\ndeck = list(\n    itertools.product(list(range(1, 14)),\n                      ['\u30b9\u30da\u30fc\u30c9', '\u30cf\u30fc\u30c8', '\u30c0\u30a4\u30e4', '\u30af\u30e9\u30d6']))\n\nrandom.shuffle(deck) # \u30c7\u30c3\u30ad\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\u3059\u308b\n\nprint(\"\u5f15\u3044\u305f\u30ab\u30fc\u30c9:\")\nfor i in range(10): # 10 \u679a\u306e\u30ab\u30fc\u30c9\u3092\u5f15\u304f\n    print(deck[i][1] + \"\u306e \" + str(deck[i][0]))\n\n#=> \u5f15\u3044\u305f\u30ab\u30fc\u30c9:\n# \u30c0\u30a4\u30e4\u306e 6\n# \u30af\u30e9\u30d6\u306e 3\n# \u30cf\u30fc\u30c8\u306e 10\n# \u30c0\u30a4\u30e4\u306e 12\n# \u30b9\u30da\u30fc\u30c9\u306e 8\n# \u30af\u30e9\u30d6\u306e 13\n# \u30c0\u30a4\u30e4\u306e 13\n# \u30b9\u30da\u30fc\u30c9\u306e 5\n# \u30cf\u30fc\u30c8\u306e 12\n# \u30c0\u30a4\u30e4\u306e 7\n```\n\n\u30c8\u30e9\u30f3\u30d7\u306f 52 \u679a\u3057\u304b\u7121\u3044\u306e\u3067 random.shuffle(53) \u3068\u3059\u308b\u3068 IndexError \u306b\u306a\u308a\u307e\u3059\u3002\n\n", "tags": ["Python", "numpy", "pandas"]}