{"context": "\n\n\u306f\u3058\u3081\u306b\nAndroid\u306eUI\u30c6\u30b9\u30c8\u3067Drawable\u3092\u30c1\u30a7\u30c3\u30af\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fDrawable\u306eMatcher\u304c\u7121\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306bMatcher\u3092\u4f5c\u6210\u3057\u3066\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nAndroid UI Test\u200a\u2014\u200aEspresso Matcher for ImageView\nhttps://medium.com/@dbottillo/android-ui-test-espresso-matcher-for-imageview-1a28c832626f#.qv4pjg197\n\n\u307e\u305f\u3001\u4e0a\u8a18\u306e\u8a18\u4e8b\u3067\u306fBitmapDrawable\u3057\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001ColorDrawable\u3082\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u306aMatcher\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\nBitmapDrawableMatcher\n\nMatcher\u306e\u4f5c\u6210\n\u307e\u305a\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306e\u4e00\u756a\u4e0b\u306b\u3042\u308bDrawableMatcher\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059(ColorDrawable\u306eMatcher\u3068\u5206\u3051\u308b\u305f\u3081\u306b\u30af\u30e9\u30b9\u540d\u3092BitmapDrawableMatcher\u306b\u5909\u3048\u307e\u3057\u305f)\u3002\n\nAndroid UI Test\u200a\u2014\u200aEspresso Matcher for ImageView\nhttps://medium.com/@dbottillo/android-ui-test-espresso-matcher-for-imageview-1a28c832626f#.qv4pjg197\n\n\u6b21\u306b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\npublic class DrawableMatcher {\n    public static Matcher<View> withBitmapDrawable(final int resourceId) {\n        return new BitmapDrawableMatcher(resourceId);\n    }\n}\n\n\n\u4f7f\u3044\u65b9\n\u5f15\u6570\u306bDrawable\u306eResourceId\u3092\u6e21\u3057\u3066\u3001check\u3059\u308b\u3060\u3051\u3067\u3059\u3002\nimport static <\u30d1\u30c3\u30b1\u30fc\u30b8\u540d>.DrawableMatcher.withBitmapDrawable;\n\nonView(withId(R.id.image_view)).check(matches(withBitmapDrawable(R.drawable.ic_image_view)));\n\n\nColorDrawableMatcher\n\u8a18\u4e8b\u306eDrawableMatcher\u3092\u53c2\u8003\u306b\u3001ColorDrawableMatcher\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u3068\u3057\u3066\u306f\u3001target\u306eView\u304b\u3089Background\u3092\u53d6\u5f97\u3057\u3066\u3001\u305d\u306eBackground\u306eColor\u3068\u4e00\u81f4\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u898b\u3066\u3044\u307e\u3059\u3002\n\nMatcher\u306e\u4f5c\u6210\npublic class ColorDrawableMatcher extends TypeSafeMatcher<View> {\n    private final int expectedId;\n    private String resourceName;\n\n    public ColorDrawableMatcher(int expectedId) {\n        super(View.class);\n        this.expectedId = expectedId;\n    }\n\n    @Override\n    protected boolean matchesSafely(View target) {\n        if (expectedId < 0){\n            return false;\n        }\n        Resources resources = target.getContext().getResources();\n        Drawable expectedDrawable = ContextCompat.getDrawable(target.getContext(), expectedId);\n        resourceName = resources.getResourceEntryName(expectedId);\n\n        if (expectedDrawable == null) {\n            return false;\n        }\n\n        int color = ((ColorDrawable) target.getBackground()).getColor();\n        int otherColor = ((ColorDrawable) expectedDrawable).getColor();\n        return color == otherColor;\n    }\n\n    @Override\n    public void describeTo(Description description) {\n        description.appendText(\"with drawable from resource id: \");\n        description.appendValue(expectedId);\n        if (resourceName != null) {\n            description.appendText(\"[\");\n            description.appendText(resourceName);\n            description.appendText(\"]\");\n        }\n    }\n}\n\npublic class DrawableMatcher {\n\n    /** \u7701\u7565 */\n\n    public static Matcher<View> withColorDrawable(final int resourceId) {\n        return new ColorDrawableMatcher(resourceId);\n    }\n}\n\n\n\u4f7f\u3044\u65b9\n\u5f15\u6570\u306bcolor\u306eResourceId\u3092\u6e21\u3057\u3066\u3001check\u3059\u308b\u3060\u3051\u3067\u3059\u3002\nimport static <\u30d1\u30c3\u30b1\u30fc\u30b8\u540d>.DrawableMatcher.withColorDrawable;\n\n\n\nonView(withId(R.id.view)).check(matches(withColorDrawable(android.R.color.white)));\n\n\n\u304a\u308f\u308a\u306b\nMatcher\u3092\u4f5c\u308b\u306e\u306f\u59cb\u3081\u3066\u3067\u3057\u305f\u304c\u3001\u7121\u4e8b\u306b\u76ee\u7684\u306e\u30c6\u30b9\u30c8\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u826f\u304b\u3063\u305f\u3067\u3059\u3002\n\u4ee5\u4e0a\u3001\u304a\u3064\u304b\u308c\u3055\u307e\u3067\u3057\u305f\u3002\n# \u306f\u3058\u3081\u306b\nAndroid\u306eUI\u30c6\u30b9\u30c8\u3067Drawable\u3092\u30c1\u30a7\u30c3\u30af\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306fDrawable\u306eMatcher\u304c\u7121\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306bMatcher\u3092\u4f5c\u6210\u3057\u3066\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n> **Android UI Test\u200a\u2014\u200aEspresso Matcher for ImageView**\n> https://medium.com/@dbottillo/android-ui-test-espresso-matcher-for-imageview-1a28c832626f#.qv4pjg197\n\n\u307e\u305f\u3001\u4e0a\u8a18\u306e\u8a18\u4e8b\u3067\u306fBitmapDrawable\u3057\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001ColorDrawable\u3082\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u306aMatcher\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n# BitmapDrawableMatcher\n## Matcher\u306e\u4f5c\u6210\n\u307e\u305a\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306e\u4e00\u756a\u4e0b\u306b\u3042\u308bDrawableMatcher\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059(ColorDrawable\u306eMatcher\u3068\u5206\u3051\u308b\u305f\u3081\u306b\u30af\u30e9\u30b9\u540d\u3092BitmapDrawableMatcher\u306b\u5909\u3048\u307e\u3057\u305f)\u3002\n\n> **Android UI Test\u200a\u2014\u200aEspresso Matcher for ImageView**\n> https://medium.com/@dbottillo/android-ui-test-espresso-matcher-for-imageview-1a28c832626f#.qv4pjg197\n\n\u6b21\u306b\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```java\npublic class DrawableMatcher {\n    public static Matcher<View> withBitmapDrawable(final int resourceId) {\n        return new BitmapDrawableMatcher(resourceId);\n    }\n}\n```\n\n## \u4f7f\u3044\u65b9\n\u5f15\u6570\u306bDrawable\u306eResourceId\u3092\u6e21\u3057\u3066\u3001check\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n```java\nimport static <\u30d1\u30c3\u30b1\u30fc\u30b8\u540d>.DrawableMatcher.withBitmapDrawable;\n\nonView(withId(R.id.image_view)).check(matches(withBitmapDrawable(R.drawable.ic_image_view)));\n```\n\n# ColorDrawableMatcher\n\u8a18\u4e8b\u306eDrawableMatcher\u3092\u53c2\u8003\u306b\u3001ColorDrawableMatcher\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u3068\u3057\u3066\u306f\u3001target\u306eView\u304b\u3089Background\u3092\u53d6\u5f97\u3057\u3066\u3001\u305d\u306eBackground\u306eColor\u3068\u4e00\u81f4\u3059\u308b\u304b\u3069\u3046\u304b\u3092\u898b\u3066\u3044\u307e\u3059\u3002\n\n## Matcher\u306e\u4f5c\u6210\n\n```java\npublic class ColorDrawableMatcher extends TypeSafeMatcher<View> {\n    private final int expectedId;\n    private String resourceName;\n\n    public ColorDrawableMatcher(int expectedId) {\n        super(View.class);\n        this.expectedId = expectedId;\n    }\n\n    @Override\n    protected boolean matchesSafely(View target) {\n        if (expectedId < 0){\n            return false;\n        }\n        Resources resources = target.getContext().getResources();\n        Drawable expectedDrawable = ContextCompat.getDrawable(target.getContext(), expectedId);\n        resourceName = resources.getResourceEntryName(expectedId);\n\n        if (expectedDrawable == null) {\n            return false;\n        }\n\n        int color = ((ColorDrawable) target.getBackground()).getColor();\n        int otherColor = ((ColorDrawable) expectedDrawable).getColor();\n        return color == otherColor;\n    }\n\n    @Override\n    public void describeTo(Description description) {\n        description.appendText(\"with drawable from resource id: \");\n        description.appendValue(expectedId);\n        if (resourceName != null) {\n            description.appendText(\"[\");\n            description.appendText(resourceName);\n            description.appendText(\"]\");\n        }\n    }\n}\n```\n\n\n\n```java\npublic class DrawableMatcher {\n\n    /** \u7701\u7565 */\n\n    public static Matcher<View> withColorDrawable(final int resourceId) {\n        return new ColorDrawableMatcher(resourceId);\n    }\n}\n```\n\n## \u4f7f\u3044\u65b9\n\u5f15\u6570\u306bcolor\u306eResourceId\u3092\u6e21\u3057\u3066\u3001check\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n```java\nimport static <\u30d1\u30c3\u30b1\u30fc\u30b8\u540d>.DrawableMatcher.withColorDrawable;\n\n\n\nonView(withId(R.id.view)).check(matches(withColorDrawable(android.R.color.white)));\n```\n\n# \u304a\u308f\u308a\u306b\nMatcher\u3092\u4f5c\u308b\u306e\u306f\u59cb\u3081\u3066\u3067\u3057\u305f\u304c\u3001\u7121\u4e8b\u306b\u76ee\u7684\u306e\u30c6\u30b9\u30c8\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u305f\u306e\u3067\u826f\u304b\u3063\u305f\u3067\u3059\u3002\n\u4ee5\u4e0a\u3001\u304a\u3064\u304b\u308c\u3055\u307e\u3067\u3057\u305f\u3002\n", "tags": ["Android", "Espresso", "\u30c6\u30b9\u30c8"]}