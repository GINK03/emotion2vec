{"tags": ["ActionScript"], "context": " More than 1 year has passed since last update.\nClothMotion.as\n/**\n * copyright (c) 2012 www.romatica.com\n * @auther itoz\n */\npackage\n{\n    import away3d.containers.View3D;\n    import away3d.core.base.SubGeometry;\n    import away3d.debug.AwayStats;\n    import away3d.entities.Mesh;\n    import away3d.materials.ColorMaterial;\n    import away3d.primitives.PlaneGeometry;\n\n    import flash.events.Event;\n    import flash.geom.Vector3D;\n    import flash.utils.getTimer;\n\n    [SWF(backgroundColor=\"#FFFFFF\", frameRate=\"60\", width=\"800\", height=\"600\")]\n    /**\n     * Away3D 4.0 beta PlaneGeometry\u306e\u9802\u70b9\u3092\u79fb\u52d5\u3057\u3001\u5e03\u306e\u3086\u3089\u304e\u3092\u8868\u73fe\n     * \u52d5\u4f5c\u30b5\u30f3\u30d7\u30eb\n     * @see http://dl.dropbox.com/u/958512/sample/away3d4/clothMotion/index.html\n     */\n    public class ClothMotion extends View3D\n    {\n        private static const ZERO : Vector3D = new Vector3D(0, 0, 0);\n        private static const FLOW_RANGE : int = 100;\n        private static const FLOW_SPEED : Number = 3;\n        private static const  RAD_VAR : Number = (Math.PI / 180);\n        private var _clothMat : ColorMaterial;\n        private var _clothGeo : PlaneGeometry;\n        private var _cloth : Mesh;\n        private var _defs : Vector.<Number>;\n        private var _angs : Vector.<Number>;\n\n        public function ClothMotion()\n        {\n            antiAlias = 4;\n            backgroundColor = 0xa1c3c0;\n\n            // ----------------------------------\n            // \u5e03\n            // ----------------------------------\n            _clothMat = new ColorMaterial(0x408aa8);\n            _clothMat.bothSides = true;\n            _clothGeo = new PlaneGeometry(1024, 1024, 32, 32);\n            _cloth = new Mesh(_clothGeo, _clothMat);\n            _cloth.showBounds = true;\n            scene.addChild(_cloth);\n\n            // ----------------------------------\n            // \u63fa\u3089\u304e\u7528\u30d1\u30e9\u30e1\u30fc\u30bf\n            // ----------------------------------\n            var max : int = _cloth.geometry.subGeometries[0].vertexData.length;\n            _defs = new Vector.<Number>(max);\n            _angs = new Vector.<Number>(max);\n            for (var i : int = 0; i < _defs.length; i++) {\n                _defs[i] = _cloth.geometry.subGeometries[0].vertexData[i];\n                _angs[i] = (360 / _defs.length * i );\n            }\n\n            camera.y = -1000;\n            addChild(new AwayStats());\n            addEventListener(Event.ENTER_FRAME, update);\n        }\n\n        /**\n         * \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\n         */\n        private function update(event : Event) : void\n        {\n            clothMotion();\n            cameraMotion();\n            // \u63cf\u753b\n            render();\n        }\n\n        /**\n         * \u5e03\u9802\u70b9\u3086\u3089\u304e\n         */\n        private function clothMotion() : void\n        {\n            var geo : SubGeometry = _clothGeo.subGeometries[0] as SubGeometry;\n            var vlen : int = geo.vertexData.length;\n            for (var i : int = 0; i < vlen;i++ ) {\n                _angs[i] += (_angs[i] + FLOW_SPEED >= 360) ? FLOW_SPEED - 360 : FLOW_SPEED;\n                var rad : Number = _angs[i] * RAD_VAR;\n                var flow : int = Math.cos(rad) * FLOW_RANGE;\n                geo.vertexData[i] = _defs[i] + flow;\n            }\n            geo.updateVertexData(geo.vertexData);\n        }\n\n        /**\n         * \u30ab\u30e1\u30e9\u79fb\u52d5\n         */\n        private function cameraMotion() : void\n        {\n            var range : int = 1500;\n            var t : Number = getTimer() / range;\n            camera.x = Math.sin(t) * range;\n            camera.y = Math.cos(t) * range;\n            camera.z = Math.cos(t) * range;\n            camera.lookAt(ZERO);\n        }\n    }\n}\n\n\n```actionscript3:ClothMotion.as\n/**\n * copyright (c) 2012 www.romatica.com\n * @auther itoz\n */\npackage\n{\n    import away3d.containers.View3D;\n    import away3d.core.base.SubGeometry;\n    import away3d.debug.AwayStats;\n    import away3d.entities.Mesh;\n    import away3d.materials.ColorMaterial;\n    import away3d.primitives.PlaneGeometry;\n\n    import flash.events.Event;\n    import flash.geom.Vector3D;\n    import flash.utils.getTimer;\n\n    [SWF(backgroundColor=\"#FFFFFF\", frameRate=\"60\", width=\"800\", height=\"600\")]\n    /**\n     * Away3D 4.0 beta PlaneGeometry\u306e\u9802\u70b9\u3092\u79fb\u52d5\u3057\u3001\u5e03\u306e\u3086\u3089\u304e\u3092\u8868\u73fe\n     * \u52d5\u4f5c\u30b5\u30f3\u30d7\u30eb\n     * @see http://dl.dropbox.com/u/958512/sample/away3d4/clothMotion/index.html\n     */\n    public class ClothMotion extends View3D\n    {\n        private static const ZERO : Vector3D = new Vector3D(0, 0, 0);\n        private static const FLOW_RANGE : int = 100;\n        private static const FLOW_SPEED : Number = 3;\n        private static const  RAD_VAR : Number = (Math.PI / 180);\n        private var _clothMat : ColorMaterial;\n        private var _clothGeo : PlaneGeometry;\n        private var _cloth : Mesh;\n        private var _defs : Vector.<Number>;\n        private var _angs : Vector.<Number>;\n\n        public function ClothMotion()\n        {\n            antiAlias = 4;\n            backgroundColor = 0xa1c3c0;\n\n            // ----------------------------------\n            // \u5e03\n            // ----------------------------------\n            _clothMat = new ColorMaterial(0x408aa8);\n            _clothMat.bothSides = true;\n            _clothGeo = new PlaneGeometry(1024, 1024, 32, 32);\n            _cloth = new Mesh(_clothGeo, _clothMat);\n            _cloth.showBounds = true;\n            scene.addChild(_cloth);\n\n            // ----------------------------------\n            // \u63fa\u3089\u304e\u7528\u30d1\u30e9\u30e1\u30fc\u30bf\n            // ----------------------------------\n            var max : int = _cloth.geometry.subGeometries[0].vertexData.length;\n            _defs = new Vector.<Number>(max);\n            _angs = new Vector.<Number>(max);\n            for (var i : int = 0; i < _defs.length; i++) {\n                _defs[i] = _cloth.geometry.subGeometries[0].vertexData[i];\n                _angs[i] = (360 / _defs.length * i );\n            }\n\n            camera.y = -1000;\n            addChild(new AwayStats());\n            addEventListener(Event.ENTER_FRAME, update);\n        }\n\n        /**\n         * \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\n         */\n        private function update(event : Event) : void\n        {\n            clothMotion();\n            cameraMotion();\n            // \u63cf\u753b\n            render();\n        }\n\n        /**\n         * \u5e03\u9802\u70b9\u3086\u3089\u304e\n         */\n        private function clothMotion() : void\n        {\n            var geo : SubGeometry = _clothGeo.subGeometries[0] as SubGeometry;\n            var vlen : int = geo.vertexData.length;\n            for (var i : int = 0; i < vlen;i++ ) {\n                _angs[i] += (_angs[i] + FLOW_SPEED >= 360) ? FLOW_SPEED - 360 : FLOW_SPEED;\n                var rad : Number = _angs[i] * RAD_VAR;\n                var flow : int = Math.cos(rad) * FLOW_RANGE;\n                geo.vertexData[i] = _defs[i] + flow;\n            }\n            geo.updateVertexData(geo.vertexData);\n        }\n\n        /**\n         * \u30ab\u30e1\u30e9\u79fb\u52d5\n         */\n        private function cameraMotion() : void\n        {\n            var range : int = 1500;\n            var t : Number = getTimer() / range;\n            camera.x = Math.sin(t) * range;\n            camera.y = Math.cos(t) * range;\n            camera.z = Math.cos(t) * range;\n            camera.lookAt(ZERO);\n        }\n    }\n}\n```\n"}