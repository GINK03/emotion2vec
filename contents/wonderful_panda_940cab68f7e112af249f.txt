{"context": " More than 1 year has passed since last update.\n[2012/12/07\u8ffd\u8a18] master\u306edefault\u30d6\u30e9\u30f3\u30c1\u306b\u3053\u306e\u4fee\u6b63\u3092\u30de\u30fc\u30b8\u3057\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\n\n\n\u3084\u308a\u305f\u3044\u3053\u3068\nTortoiseHg\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u306eDiff\u3084Blame\u3092\u8868\u793a\u3059\u308b\u3068\u3001\u5909\u66f4\u7b87\u6240\u3092\u8868\u793a\u3059\u308b\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u304c\u4e00\u7dd2\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3088\u306d\uff1f\n\n\u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u3068\u305d\u308c\u306b\u3042\u308f\u305b\u3066\u7070\u8272\u306e\u7bb1\u304c\u52d5\u3044\u305f\u308a\u3059\u308b\u3093\u3067\u3059\u304c\u3001\u3053\u3053\u3001\u30af\u30ea\u30c3\u30af\u3057\u305f\u304f\u306a\u308a\u307e\u305b\u3093\u304b\uff1f\n\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\u305d\u306e\u4f4d\u7f6e\u306b\u30b8\u30e3\u30f3\u30d7\u3057\u3066\u304f\u308c\u308b\u3068\u3068\u3066\u3082\u3046\u308c\u3057\u3044\u3093\u3067\u3059\u304c\u3002\u50d5\u306f\u3002\n\n\u3084\u3063\u305f\u3053\u3068\n\u3068\u3044\u3046\u8a33\u3067\u5c11\u3057\u624b\u3092\u5165\u308c\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://bitbucket.org/iwata0303/thg/commits/bbb613be1df57a43c4e3f6c20aa10ad45fe26c93\ntortoisehg/hgqt/blockmatcher.py\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3063\u3066\u3001\u305d\u3053\u306b\u3042\u308bBlockList\u3068\u3044\u3046\u30af\u30e9\u30b9\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u307e\u3059\u3002\n\nblockmatcher.py\n    def scrollToPos(self, y):\n        # Scroll to the position which specified by Y coodinate.\n        if not isinstance(self._sbar, QScrollBar):\n            return\n        ratio = float(y) / self.height()\n        minimum, maximum, step = self._minimum, self._maximum, self._pagestep\n        value = minimum + (maximum + step - minimum) * ratio - (step * 0.5)\n        value = min(maximum, max(minimum, value))  # round to valid range.\n        self.setValue(value)\n\n    def mousePressEvent(self, event):\n        super(BlockList, self).mousePressEvent(event)\n        self.scrollToPos(event.y())\n\n    def mouseMoveEvent(self, event):\n        super(BlockList, self).mouseMoveEvent(event)\n        self.scrollToPos(event.y())\n\n\n\u3053\u308c\u3067\u3001\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u4e0a\u3092\u30af\u30ea\u30c3\u30af\u3059\u308c\u3070\u305d\u306e\u4f4d\u7f6e\u307e\u3067\u30b8\u30e3\u30f3\u30d7\u3057\u307e\u3059\u3057\u3001\u305d\u306e\u307e\u307e\u4e0a\u4e0b\u306b\u30c9\u30e9\u30c3\u30b0\u3059\u308c\u3070\u30b9\u30af\u30ed\u30fc\u30eb\u3082\u9023\u52d5\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u3057\u3066\u307f\u308b\n\u3055\u3066\u3001\u3068\u306f\u3044\u3048\u3001\u3053\u308c\u3060\u3051\u306e\u305f\u3081\u306bTortoiseHg\u306e\u30bd\u30fc\u30b9\u3092\u5165\u624b\u3057\u3066\u30d3\u30eb\u30c9\u3057\u3066\u3001\u3068\u3044\u3046\u306e\u3082\u9762\u5012\u306a\u8a71\u3067\u3059\u306d\u3002\n\u3061\u3087\u3063\u3068\u826f\u3044\u5b50\u306b\u306f\u304a\u52e7\u3081\u3067\u304d\u306a\u3044\u7cfb\u306b\u306a\u308a\u307e\u3059\u304c \u3001\u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u30e2\u30f3\u30ad\u30fc\u30d1\u30c3\u30c1\u3042\u3066\u3066\u307f\u307e\u3059\u3002\n\nthg_blocklist_patch.py\n# -*- coding:utf-8 -*-\ndef extsetup():\n    import sys\n    import os\n    # thg.exe\u3084thgw.exe\u304b\u3089\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u3060\u3051\u51e6\u7406\u3092\u3059\u308b\u3088\u3046\u306b\u3059\u308b\n    if not os.path.basename(sys.argv[0]).startswith('thg'):\n        return\n\n    from PyQt4.QtGui import QScrollBar\n\n    from tortoisehg.hgqt.blockmatcher import BlockList\n    from types import MethodType\n\n    mousePressEvent_org = BlockList.mousePressEvent\n    mouseMoveEvent_org = BlockList.mouseMoveEvent\n\n    def scrollToPos(bl, y):\n        # Scroll to the position which specified by Y coodinate.\n        if not isinstance(bl._sbar, QScrollBar):\n            return\n        ratio = float(y) / bl.height()\n        minimum, maximum, step = bl._minimum, bl._maximum, bl._pagestep\n        value = minimum + (maximum + step - minimum) * ratio - (step * 0.5)\n        value = min(maximum, max(minimum, value))  # round to valid range.\n        bl.setValue(value)\n\n    def mousePressEvent(self, event):\n        mousePressEvent_org(self, event)\n        scrollToPos(self, event.y())\n\n    def mouseMoveEvent(self, event):\n        mouseMoveEvent_org(self, event)\n        scrollToPos(self, event.y())\n\n    BlockList.mousePressEvent = MethodType(mousePressEvent, None, BlockList)\n    BlockList.mouseMoveEvent = MethodType(mouseMoveEvent, None, BlockList)\n\n\n\u3075\u3064\u3046\u306bhg\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u3044\u305f\u6642\u306b\u60aa\u3055\u3055\u308c\u3066\u3082\u56f0\u308b\u306e\u3067\u3001thg*.exe\u3068\u304b\u304b\u3089\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u3060\u3051\u51e6\u7406\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u78ba\u8a8d\u3057\u3066\u307e\u305b\u3093\u304cLinux\u3068\u304b\u3060\u3068 sys.arg[0] \u306fpython\u306e\u30d1\u30b9\u304c\u5165\u3063\u3066\u304f\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u305d\u306e\u5834\u5408\u306f sys.arg[1] \u3067\u30c1\u30a7\u30c3\u30af\u3059\u308b\u611f\u3058\u3067\u3002\n\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u9069\u5f53\u306b\u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u3068\u3057\u3066\u767b\u9332\u3059\u308c\u3070\u3001\u672c\u4f53\u306e\u30bd\u30fc\u30b9\u306b\u624b\u3092\u5165\u308c\u306a\u304f\u3066\u3082\u3044\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3042\u304f\u307e\u3067\u30e2\u30f3\u30ad\u30fc\u30d1\u30c3\u30c1\u306a\u306e\u3067\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u306a\u3069\u306e\u969b\u306b\u306f\u3054\u6ce8\u610f\u3092\u3002\n* [2012/12/07\u8ffd\u8a18] master\u306edefault\u30d6\u30e9\u30f3\u30c1\u306b\u3053\u306e\u4fee\u6b63\u3092\u30de\u30fc\u30b8\u3057\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\n\n##\u3084\u308a\u305f\u3044\u3053\u3068\nTortoiseHg\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u306eDiff\u3084Blame\u3092\u8868\u793a\u3059\u308b\u3068\u3001\u5909\u66f4\u7b87\u6240\u3092\u8868\u793a\u3059\u308b\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u304c\u4e00\u7dd2\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3088\u306d\uff1f\n![thg-fileview](http://gyazo.com/614f06f44fa90c302292b02d56086c36.png)\n\n\u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u3068\u305d\u308c\u306b\u3042\u308f\u305b\u3066\u7070\u8272\u306e\u7bb1\u304c\u52d5\u3044\u305f\u308a\u3059\u308b\u3093\u3067\u3059\u304c\u3001\u3053\u3053\u3001\u30af\u30ea\u30c3\u30af\u3057\u305f\u304f\u306a\u308a\u307e\u305b\u3093\u304b\uff1f\n\u30af\u30ea\u30c3\u30af\u3057\u305f\u3089\u305d\u306e\u4f4d\u7f6e\u306b\u30b8\u30e3\u30f3\u30d7\u3057\u3066\u304f\u308c\u308b\u3068\u3068\u3066\u3082\u3046\u308c\u3057\u3044\u3093\u3067\u3059\u304c\u3002\u50d5\u306f\u3002\n\n##\u3084\u3063\u305f\u3053\u3068\n\u3068\u3044\u3046\u8a33\u3067\u5c11\u3057\u624b\u3092\u5165\u308c\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://bitbucket.org/iwata0303/thg/commits/bbb613be1df57a43c4e3f6c20aa10ad45fe26c93\n\ntortoisehg/hgqt/blockmatcher.py\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u3063\u3066\u3001\u305d\u3053\u306b\u3042\u308bBlockList\u3068\u3044\u3046\u30af\u30e9\u30b9\u306b\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u307e\u3059\u3002\n\n```python:blockmatcher.py\n    def scrollToPos(self, y):\n        # Scroll to the position which specified by Y coodinate.\n        if not isinstance(self._sbar, QScrollBar):\n            return\n        ratio = float(y) / self.height()\n        minimum, maximum, step = self._minimum, self._maximum, self._pagestep\n        value = minimum + (maximum + step - minimum) * ratio - (step * 0.5)\n        value = min(maximum, max(minimum, value))  # round to valid range.\n        self.setValue(value)\n\n    def mousePressEvent(self, event):\n        super(BlockList, self).mousePressEvent(event)\n        self.scrollToPos(event.y())\n\n    def mouseMoveEvent(self, event):\n        super(BlockList, self).mouseMoveEvent(event)\n        self.scrollToPos(event.y())\n```\n\u3053\u308c\u3067\u3001\u30a4\u30f3\u30b8\u30b1\u30fc\u30bf\u4e0a\u3092\u30af\u30ea\u30c3\u30af\u3059\u308c\u3070\u305d\u306e\u4f4d\u7f6e\u307e\u3067\u30b8\u30e3\u30f3\u30d7\u3057\u307e\u3059\u3057\u3001\u305d\u306e\u307e\u307e\u4e0a\u4e0b\u306b\u30c9\u30e9\u30c3\u30b0\u3059\u308c\u3070\u30b9\u30af\u30ed\u30fc\u30eb\u3082\u9023\u52d5\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n##\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u3057\u3066\u307f\u308b\n\u3055\u3066\u3001\u3068\u306f\u3044\u3048\u3001\u3053\u308c\u3060\u3051\u306e\u305f\u3081\u306bTortoiseHg\u306e\u30bd\u30fc\u30b9\u3092\u5165\u624b\u3057\u3066\u30d3\u30eb\u30c9\u3057\u3066\u3001\u3068\u3044\u3046\u306e\u3082\u9762\u5012\u306a\u8a71\u3067\u3059\u306d\u3002\n\n**\u3061\u3087\u3063\u3068\u826f\u3044\u5b50\u306b\u306f\u304a\u52e7\u3081\u3067\u304d\u306a\u3044\u7cfb\u306b\u306a\u308a\u307e\u3059\u304c** \u3001\u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u30e2\u30f3\u30ad\u30fc\u30d1\u30c3\u30c1\u3042\u3066\u3066\u307f\u307e\u3059\u3002\n\n```python:thg_blocklist_patch.py\n# -*- coding:utf-8 -*-\ndef extsetup():\n    import sys\n    import os\n    # thg.exe\u3084thgw.exe\u304b\u3089\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u3060\u3051\u51e6\u7406\u3092\u3059\u308b\u3088\u3046\u306b\u3059\u308b\n    if not os.path.basename(sys.argv[0]).startswith('thg'):\n        return\n\n    from PyQt4.QtGui import QScrollBar\n\n    from tortoisehg.hgqt.blockmatcher import BlockList\n    from types import MethodType\n\n    mousePressEvent_org = BlockList.mousePressEvent\n    mouseMoveEvent_org = BlockList.mouseMoveEvent\n\n    def scrollToPos(bl, y):\n        # Scroll to the position which specified by Y coodinate.\n        if not isinstance(bl._sbar, QScrollBar):\n            return\n        ratio = float(y) / bl.height()\n        minimum, maximum, step = bl._minimum, bl._maximum, bl._pagestep\n        value = minimum + (maximum + step - minimum) * ratio - (step * 0.5)\n        value = min(maximum, max(minimum, value))  # round to valid range.\n        bl.setValue(value)\n\n    def mousePressEvent(self, event):\n        mousePressEvent_org(self, event)\n        scrollToPos(self, event.y())\n\n    def mouseMoveEvent(self, event):\n        mouseMoveEvent_org(self, event)\n        scrollToPos(self, event.y())\n\n    BlockList.mousePressEvent = MethodType(mousePressEvent, None, BlockList)\n    BlockList.mouseMoveEvent = MethodType(mouseMoveEvent, None, BlockList)\n```\n\n\u3075\u3064\u3046\u306bhg\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u3044\u305f\u6642\u306b\u60aa\u3055\u3055\u308c\u3066\u3082\u56f0\u308b\u306e\u3067\u3001thg*.exe\u3068\u304b\u304b\u3089\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u3060\u3051\u51e6\u7406\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u78ba\u8a8d\u3057\u3066\u307e\u305b\u3093\u304cLinux\u3068\u304b\u3060\u3068 `sys.arg[0]` \u306fpython\u306e\u30d1\u30b9\u304c\u5165\u3063\u3066\u304f\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u305d\u306e\u5834\u5408\u306f `sys.arg[1]` \u3067\u30c1\u30a7\u30c3\u30af\u3059\u308b\u611f\u3058\u3067\u3002\n\n\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u9069\u5f53\u306b\u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u3068\u3057\u3066\u767b\u9332\u3059\u308c\u3070\u3001\u672c\u4f53\u306e\u30bd\u30fc\u30b9\u306b\u624b\u3092\u5165\u308c\u306a\u304f\u3066\u3082\u3044\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n**\u3042\u304f\u307e\u3067\u30e2\u30f3\u30ad\u30fc\u30d1\u30c3\u30c1\u306a\u306e\u3067\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u306a\u3069\u306e\u969b\u306b\u306f\u3054\u6ce8\u610f\u3092\u3002**", "tags": ["Python", "Mercurial", "TortoiseHg"]}