{"context": "syakesaba.com\nLet'sEncrypt\u8a66\u3057\u305f\u30e1\u30e2\u3002\u304a\u3088\u305d2\u6642\u9593\u3002\n\n\u30c9\u30e1\u30a4\u30f3\u5165\u624b\n\u304a\u540d\u524d.com\u3067\u30c9\u30e1\u30a4\u30f3\u3092\u8cb7\u3046\u3002DNS\u30b5\u30fc\u30d3\u30b9\u3082\u4f7f\u3046\u3002\u8a2d\u5b9a\u306f\u4ee5\u4e0b\n$ORIGIN syakesaba.com.\n$TTL 86400\nsyakesaba.com. 86400 IN SOA 01.dnsv.jp. hostmaster.dnsv.jp. 1486869463 3600 900 604800 300\nsyakesaba.com. 86400 IN NS 01.dnsv.jp.\nsyakesaba.com. 86400 IN NS 02.dnsv.jp.\nsyakesaba.com. 86400 IN NS 03.dnsv.jp.\nsyakesaba.com. 86400 IN NS 04.dnsv.jp.\nsyakesaba.com. 3600 IN A 153.120.17.24\nmail.syakesaba.com. 3600 IN A 153.120.17.24\nwww.syakesaba.com. 3600 IN A 153.120.17.24\nsyakesaba.com. 3600 IN MX 10 mail.syakesaba.com.\nsyakesaba.com. 3600 IN TXT \"v=spf1 +ip4:153.120.17.24 ~all\"\n\n\u521d\u5e74 1,123\u5186 \u6b21\u5e74\u5ea6\u304b\u3089\u5e74\u5ea6\u3054\u3068\u306b\u3069\u3093\u3069\u3093\u5897\u984d\u3055\u308c\u308b\u3060\u308d\u3046\n\n\u30b5\u30fc\u30d0\u5165\u624b\n\u3055\u304f\u3089\u306eVPS\u3067\u56fa\u5b9aIP: 153.120.17.24\u3092GET\u3002\n\u30b9\u30da\u30c3\u30af\u306fdebian8 jessie 1CORE 20GB 1GB\u306b\u3057\u305f\u3002\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u8d85\u9069\u5f53\u3002\n1\u30f6\u67082000\u5186\u4ee5\u4e0b\u306b\u306a\u308b\u3068\u601d\u3046\u3002\n\u30db\u30b9\u30c8\u540d\u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\n#vi /etc/hostname\nsyakesaba.com\n\n#vi /etc/hosts\n127.0.0.1       localhost syakesaba.com www.syakesaba.com\n153.120.17.24 syakesaba.com www.syakesaba.com\n# The following lines are desirable for IPv6 capable hosts\n::1     ip6-localhost ip6-loopback\nfe00::0 localhost ip6-localnet ip6-loopback\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n\n\nnginx\u306e\u5165\u624b\u30fb\u8a2d\u5b9a\nhttps://www.nginx.com/resources/wiki/start/topics/tutorials/install/\nwget \"http://nginx.org/keys/nginx_signing.key\"\nsudo apt-key add nginx_signing.key\nsudo echo \"\ndeb http://nginx.org/packages/debian/ jessie nginx\ndeb-src http://nginx.org/packages/debian/ jessie nginx\n\" >> /etc/apt/sources.list\nsudo apt-get update\nsudo apt-get install nginx\n\nhttps://www.nginx.com/resources/wiki/start/topics/examples/systemd/\necho \"\n[Unit]\nDescription=The NGINX HTTP and reverse proxy server\nAfter=syslog.target network.target remote-fs.target nss-lookup.target\n\n[Service]\nType=forking\nPIDFile=/run/nginx.pid\nExecStartPre=/usr/sbin/nginx -t -c /etc/nginx/nginx.conf\nExecStart=/usr/sbin/nginx -c /etc/nginx/nginx.conf\nExecReload=/bin/kill -s HUP $MAINPID\nExecStop=/bin/kill -s QUIT $MAINPID\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n\" > /lib/systemd/system/nginx.service\n\n\nsystemctl\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u4fee\u6b63\nsystemctl unmask nginx\nsystemctl enable nginx\n\n\nnginx\u306edefault\u306e\u30de\u30b9\u30bf\u30fcConfig\u306f\u4ee5\u4e0b\ncat /etc/nginx/nginx.conf\n########################\nuser  nginx;\nworker_processes  1;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    include /etc/nginx/conf.d/*.conf;\n}\n######################\n\n\nTweek\u306e\u5b9f\u65bd\n\u30d5\u30a1\u30a4\u30eb\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\u3068\u304b\u3002\nhttp://www.mk-mode.com/octopress/2014/04/13/nginx-file-discriptor-limit/\necho 'fs.file-max=200000' >> /etc/sysctl.conf\n\n# http://qiita.com/iwai/items/1e29adbdd269380167d2\necho 'net.ipv4.ip_local_port_range=18000 65535' >> /etc/sysctl.conf\necho 'net.ipv4.tcp_tw_reuse=1' >> /etc/sysctl.conf\necho 'net.ipv4.ip_dynaddr=1' >> /etc/sysctl.conf\necho 'net.ipv4.tcp_rfc1337=1' >> /etc/sysctl.conf\necho 'net.ipv4.tcp_fin_timeout=10' >> /etc/sysctl.conf\necho 'net.ipv4.tcp_keepalive_probes=5' >> /etc/sysctl.conf\necho 'net.ipv4.tcp_slow_start_after_idle=0' >> /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog=1024' >> /etc/sysctl.conf\necho 'net.core.somaxconn=65535' >> /etc/sysctl.conf\n\nsysctl -p\n\n\nTweek\u306e\u5b9f\u65bd\uff08nginx\u5074\uff09\nhttp://raichel.hatenablog.com/entry/2015/11/20/%E3%83%9E%E3%82%B7%E3%83%B3%E3%82%B9%E3%83%9A%E3%83%83%E3%82%AF%E5%88%A5%E3%81%AEnginx_conf%E6%8E%A8%E5%A5%A8%E8%A8%AD%E5%AE%9A(%E7%B0%A1%E6%98%93ver)\nvi /etc/nginx/nginx.conf\n# XXX:APPEND\nworker_processes auto; #XXX num of core\nworker_rlimit_nofile 640; #XXX calc: con128 * worker5 = 640\nworker_priority -5; #XXX MGMT\n#worker_cpu_affinity 01 10; #XXX i have no core\n#XXX:APPEND\nevents {\n    multi_accept on; #XXX better as it is\n    worker_connections 128; #XXX num core *128?\n}\n\n\u52d5\u304f\u304b\u8a66\u3059\nsystemctl restart nginx\n\n\nMore Tweek\nhttp://qiita.com/white_aspara25/items/bc9d9b9b2dc0a673169a\nchmod 755 /var/log/nginx\n\nvi /etc/nginx/nginx.conf\n#XXX:APPEND\nhttp {\n    server_tokens off;\n}\n\n\u52d5\u304f\u304b\u8a66\u3059\nsystemctl restart nginx\n\n\ncertbot\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nhttps://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-debian-8\necho 'deb http://ftp.debian.org/debian jessie-backports main' | sudo tee /etc/apt/sources.list.d/backports.list\nsudo apt-get update\nsudo apt-get install certbot -t jessie-backports\n\n\n\u30b3\u30f3\u30c6\u30f3\u30c4\u30d5\u30a9\u30eb\u30c0\u306e\u5909\u66f4\nvi /etc/nginx/conf.d/default.conf\n#REPLACE\nserver {\n        server_name localhost syakesaba.com www.syakesaba.com #XXX\n        #XXX\n        location / {\n                root /var/www/html\n        }\n}\n#APPEND\nserver {\n        #XXX\n        location ~ /.well-known {\n                root /var/www/html\n                allow all;\n        }\n}\n\nmkdir -p /var/www/html\nchown -R nginx:nginx /var/www/html\n\n\n\u52d5\u304f\u304b\u8a66\u3059\nsudo systemctl restart nginx\n\n\ncertbot\u306e\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30b7\u30e7\u30f3\nsudo certbot certonly -a webroot --webroot-path=/var/www/html  -d syakesaba.com -d www.syakesaba.com\n\n#IMPORTANT NOTES:\n# - Congratulations! Your certificate and chain have been saved at\n#   /etc/letsencrypt/live/syakesaba.com/fullchain.pem. Your cert will\n#  expire on 2017-05-13. To obtain a new or tweaked version of this\n# certificate in the future, simply run certbot again. To\n# non-interactively renew *all* of your certificates, run \"certbot\n#  renew\"\n# - If you like Certbot, please consider supporting our work by:\n#\n#   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n#   Donating to EFF:                    https://eff.org/donate-le\n\nls -la /etc/letsencrypt/live/syakesaba.com/\n#\u5408\u8a08 8\n#drwxr-xr-x 2 root root 4096  2\u6708 12 13:17 .\n#drwx------ 3 root root 4096  2\u6708 12 13:17 ..\n#lrwxrwxrwx 1 root root   37  2\u6708 12 13:17 cert.pem -> ../../archive/syakesaba.com/cert1.pem\n#lrwxrwxrwx 1 root root   38  2\u6708 12 13:17 chain.pem -> ../../archive/syakesaba.com/chain1.pem\n#lrwxrwxrwx 1 root root   42  2\u6708 12 13:17 fullchain.pem -> ../../archive/syakesaba.com/fullchain1.pem\n#lrwxrwxrwx 1 root root   40  2\u6708 12 13:17 privkey.pem -> ../../archive/syakesaba.com/privkey1.pem\n\n\nSSL\u306eDH\u5024\u751f\u6210\nopenssl dhparam -out /etc/ssl/certs/dhparam.pem 2048\n\n\nnginx\u3078SSL\u306e\u6709\u52b9\u5316\nvi /etc/nginx/conf.d/ssl-syakesaba.com.conf\n###\nssl_certificate /etc/letsencrypt/live/syakesaba.com/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/syakesaba.com/privkey.pem;\n###\n\nvi /etc/nginx/conf.d/ssl.conf\n###\n# from https://cipherli.st/ and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html\n\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;\nssl_ciphers \"EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH\";\nssl_ecdh_curve secp384r1;\nssl_session_cache shared:SSL:10m;\nssl_session_tickets off;\nssl_stapling on;\nssl_stapling_verify on;\nresolver 8.8.8.8 8.8.4.4 valid=300s;\nresolver_timeout 5s;\n# Disable preloading HSTS for now.  You can use the commented out header line that includes\n# the \"preload\" directive if you understand the implications.\n#add_header Strict-Transport-Security \"max-age=63072000; includeSubdomains; preload\";\nadd_header Strict-Transport-Security \"max-age=63072000; includeSubdomains\";\nadd_header X-Frame-Options DENY;\nadd_header X-Content-Type-Options nosniff;\n\nssl_dhparam /etc/ssl/certs/dhparam.pem;\n###\n\nvi /etc/nginx/conf.d/default.conf\n#APPEND\nserver {\n    listen 443 ssl default_server; #XXX\n    listen [::]:443 ssl default_server; #XXX\n    include conf.d/ssl-syakesaba.com.conf; #XXX\n    include conf.d/ssl.conf; #XXX\n}\n\n\n\u52d5\u304f\u304b\u8a66\u3059\nsystemctl restart nginx\n\n\n\u5b9f\u969b\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\nhttp://www.syakesaba.com/\nhttps://www.syakesaba.com/\n\n# https://www.ssllabs.com/ssltest/analyze.html?d=www.syakesaba.com&latest\n\n\n\uff11\u30f6\u6708\u306b\u4e00\u56de\u5b9a\u671f\u7684\u306b\u66f4\u65b0\u3055\u305b\u308b\ncat /etc/cron.d/certbot\n###\n# /etc/cron.d/certbot: crontab entries for the certbot package\n#\n# Upstream recommends attempting renewal twice a day\n#\n# Eventually, this will be an opportunity to validate certificates\n# haven't been revoked, etc.  Renewal will only occur if expiration\n# is within 30 days.\nSHELL=/bin/sh\nPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n\n0 */12 * * * root test -x /usr/bin/certbot -a \\! -d /run/systemd/system && perl -e 'sleep int(rand(3600))' && certbot -q renew\n###\n\nvi  /etc/cron.d/certbot\n#REPLACE\n0 */12 * * * root test -x /usr/bin/certbot -a \\! -d /run/systemd/system && perl -e 'sleep int(rand(3600))' && certbot -q renew && perl -e 'sleep int(rand(3600))'  && /bin/systemctl restart nginx\n\n\n\u7d50\u679c\n\n\u904b\u7528\u9762\u306f\u77e5\u3089\u3093\n***syakesaba.com***\nLet'sEncrypt\u8a66\u3057\u305f\u30e1\u30e2\u3002\u304a\u3088\u305d2\u6642\u9593\u3002\n\n#\u30c9\u30e1\u30a4\u30f3\u5165\u624b\n\u304a\u540d\u524d.com\u3067\u30c9\u30e1\u30a4\u30f3\u3092\u8cb7\u3046\u3002DNS\u30b5\u30fc\u30d3\u30b9\u3082\u4f7f\u3046\u3002\u8a2d\u5b9a\u306f\u4ee5\u4e0b\n\n```\n$ORIGIN syakesaba.com.\n$TTL 86400\nsyakesaba.com. 86400 IN SOA 01.dnsv.jp. hostmaster.dnsv.jp. 1486869463 3600 900 604800 300\nsyakesaba.com. 86400 IN NS 01.dnsv.jp.\nsyakesaba.com. 86400 IN NS 02.dnsv.jp.\nsyakesaba.com. 86400 IN NS 03.dnsv.jp.\nsyakesaba.com. 86400 IN NS 04.dnsv.jp.\nsyakesaba.com. 3600 IN A 153.120.17.24\nmail.syakesaba.com. 3600 IN A 153.120.17.24\nwww.syakesaba.com. 3600 IN A 153.120.17.24\nsyakesaba.com. 3600 IN MX 10 mail.syakesaba.com.\nsyakesaba.com. 3600 IN TXT \"v=spf1 +ip4:153.120.17.24 ~all\"\n```\n\u521d\u5e74 1,123\u5186 \u6b21\u5e74\u5ea6\u304b\u3089\u5e74\u5ea6\u3054\u3068\u306b\u3069\u3093\u3069\u3093\u5897\u984d\u3055\u308c\u308b\u3060\u308d\u3046\n\n# \u30b5\u30fc\u30d0\u5165\u624b\n\u3055\u304f\u3089\u306eVPS\u3067\u56fa\u5b9aIP: 153.120.17.24\u3092GET\u3002\n\u30b9\u30da\u30c3\u30af\u306fdebian8 jessie 1CORE 20GB 1GB\u306b\u3057\u305f\u3002\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u8d85\u9069\u5f53\u3002\n1\u30f6\u67082000\u5186\u4ee5\u4e0b\u306b\u306a\u308b\u3068\u601d\u3046\u3002\n\n\u30db\u30b9\u30c8\u540d\u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0b\n\n```\n#vi /etc/hostname\nsyakesaba.com\n\n#vi /etc/hosts\n127.0.0.1       localhost syakesaba.com www.syakesaba.com\n153.120.17.24 syakesaba.com www.syakesaba.com\n# The following lines are desirable for IPv6 capable hosts\n::1     ip6-localhost ip6-loopback\nfe00::0 localhost ip6-localnet ip6-loopback\nff02::1 ip6-allnodes\nff02::2 ip6-allrouters\n```\n\n# nginx\u306e\u5165\u624b\u30fb\u8a2d\u5b9a\n<https://www.nginx.com/resources/wiki/start/topics/tutorials/install/>\n\n```\nwget \"http://nginx.org/keys/nginx_signing.key\"\nsudo apt-key add nginx_signing.key\nsudo echo \"\ndeb http://nginx.org/packages/debian/ jessie nginx\ndeb-src http://nginx.org/packages/debian/ jessie nginx\n\" >> /etc/apt/sources.list\nsudo apt-get update\nsudo apt-get install nginx\n```\n\n<https://www.nginx.com/resources/wiki/start/topics/examples/systemd/>\n\n```\necho \"\n[Unit]\nDescription=The NGINX HTTP and reverse proxy server\nAfter=syslog.target network.target remote-fs.target nss-lookup.target\n\n[Service]\nType=forking\nPIDFile=/run/nginx.pid\nExecStartPre=/usr/sbin/nginx -t -c /etc/nginx/nginx.conf\nExecStart=/usr/sbin/nginx -c /etc/nginx/nginx.conf\nExecReload=/bin/kill -s HUP $MAINPID\nExecStop=/bin/kill -s QUIT $MAINPID\nPrivateTmp=true\n\n[Install]\nWantedBy=multi-user.target\n\" > /lib/systemd/system/nginx.service\n\n```\n\nsystemctl\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u4fee\u6b63\n\n```\nsystemctl unmask nginx\nsystemctl enable nginx\n```\n\n# nginx\u306edefault\u306e\u30de\u30b9\u30bf\u30fcConfig\u306f\u4ee5\u4e0b\n\n```\ncat /etc/nginx/nginx.conf\n########################\nuser  nginx;\nworker_processes  1;\n\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n\n\nevents {\n    worker_connections  1024;\n}\n\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile        on;\n    #tcp_nopush     on;\n\n    keepalive_timeout  65;\n\n    #gzip  on;\n\n    include /etc/nginx/conf.d/*.conf;\n}\n######################\n```\n\n## Tweek\u306e\u5b9f\u65bd\n\u30d5\u30a1\u30a4\u30eb\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\u3068\u304b\u3002\n<http://www.mk-mode.com/octopress/2014/04/13/nginx-file-discriptor-limit/>\n\n```\necho 'fs.file-max=200000' >> /etc/sysctl.conf\n\n# http://qiita.com/iwai/items/1e29adbdd269380167d2\necho 'net.ipv4.ip_local_port_range=18000 65535' >> /etc/sysctl.conf\necho 'net.ipv4.tcp_tw_reuse=1' >> /etc/sysctl.conf\necho 'net.ipv4.ip_dynaddr=1' >> /etc/sysctl.conf\necho 'net.ipv4.tcp_rfc1337=1' >> /etc/sysctl.conf\necho 'net.ipv4.tcp_fin_timeout=10' >> /etc/sysctl.conf\necho 'net.ipv4.tcp_keepalive_probes=5' >> /etc/sysctl.conf\necho 'net.ipv4.tcp_slow_start_after_idle=0' >> /etc/sysctl.conf\necho 'net.ipv4.tcp_max_syn_backlog=1024' >> /etc/sysctl.conf\necho 'net.core.somaxconn=65535' >> /etc/sysctl.conf\n\nsysctl -p\n```\n\n## Tweek\u306e\u5b9f\u65bd\uff08nginx\u5074\uff09\n<http://raichel.hatenablog.com/entry/2015/11/20/%E3%83%9E%E3%82%B7%E3%83%B3%E3%82%B9%E3%83%9A%E3%83%83%E3%82%AF%E5%88%A5%E3%81%AEnginx_conf%E6%8E%A8%E5%A5%A8%E8%A8%AD%E5%AE%9A(%E7%B0%A1%E6%98%93ver)>\n\n```\nvi /etc/nginx/nginx.conf\n# XXX:APPEND\nworker_processes auto; #XXX num of core\nworker_rlimit_nofile 640; #XXX calc: con128 * worker5 = 640\nworker_priority -5; #XXX MGMT\n#worker_cpu_affinity 01 10; #XXX i have no core\n#XXX:APPEND\nevents {\n    multi_accept on; #XXX better as it is\n    worker_connections 128; #XXX num core *128?\n}\n```\n\n\u52d5\u304f\u304b\u8a66\u3059\n\n```\nsystemctl restart nginx\n```\n\n## More Tweek\n<http://qiita.com/white_aspara25/items/bc9d9b9b2dc0a673169a>\n\n```\nchmod 755 /var/log/nginx\n\nvi /etc/nginx/nginx.conf\n#XXX:APPEND\nhttp {\n\tserver_tokens off;\n}\n```\n\n\u52d5\u304f\u304b\u8a66\u3059\n\n```\nsystemctl restart nginx\n```\n\n# certbot\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n<https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-debian-8>\n\n```\necho 'deb http://ftp.debian.org/debian jessie-backports main' | sudo tee /etc/apt/sources.list.d/backports.list\nsudo apt-get update\nsudo apt-get install certbot -t jessie-backports\n```\n\n## \u30b3\u30f3\u30c6\u30f3\u30c4\u30d5\u30a9\u30eb\u30c0\u306e\u5909\u66f4\n\n```\nvi /etc/nginx/conf.d/default.conf\n#REPLACE\nserver {\n        server_name localhost syakesaba.com www.syakesaba.com #XXX\n        #XXX\n        location / {\n                root /var/www/html\n        }\n}\n#APPEND\nserver {\n        #XXX\n        location ~ /.well-known {\n                root /var/www/html\n                allow all;\n        }\n}\n\nmkdir -p /var/www/html\nchown -R nginx:nginx /var/www/html\n```\n\n###\u52d5\u304f\u304b\u8a66\u3059\n\n```\nsudo systemctl restart nginx\n```\n\n## certbot\u306e\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30b7\u30e7\u30f3\n```\nsudo certbot certonly -a webroot --webroot-path=/var/www/html  -d syakesaba.com -d www.syakesaba.com\n\n#IMPORTANT NOTES:\n# - Congratulations! Your certificate and chain have been saved at\n#   /etc/letsencrypt/live/syakesaba.com/fullchain.pem. Your cert will\n#  expire on 2017-05-13. To obtain a new or tweaked version of this\n# certificate in the future, simply run certbot again. To\n# non-interactively renew *all* of your certificates, run \"certbot\n#  renew\"\n# - If you like Certbot, please consider supporting our work by:\n#\n#   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n#   Donating to EFF:                    https://eff.org/donate-le\n\nls -la /etc/letsencrypt/live/syakesaba.com/\n#\u5408\u8a08 8\n#drwxr-xr-x 2 root root 4096  2\u6708 12 13:17 .\n#drwx------ 3 root root 4096  2\u6708 12 13:17 ..\n#lrwxrwxrwx 1 root root   37  2\u6708 12 13:17 cert.pem -> ../../archive/syakesaba.com/cert1.pem\n#lrwxrwxrwx 1 root root   38  2\u6708 12 13:17 chain.pem -> ../../archive/syakesaba.com/chain1.pem\n#lrwxrwxrwx 1 root root   42  2\u6708 12 13:17 fullchain.pem -> ../../archive/syakesaba.com/fullchain1.pem\n#lrwxrwxrwx 1 root root   40  2\u6708 12 13:17 privkey.pem -> ../../archive/syakesaba.com/privkey1.pem\n```\n\n## SSL\u306eDH\u5024\u751f\u6210\n```\nopenssl dhparam -out /etc/ssl/certs/dhparam.pem 2048\n```\n\n## nginx\u3078SSL\u306e\u6709\u52b9\u5316\n\n```\nvi /etc/nginx/conf.d/ssl-syakesaba.com.conf\n###\nssl_certificate /etc/letsencrypt/live/syakesaba.com/fullchain.pem;\nssl_certificate_key /etc/letsencrypt/live/syakesaba.com/privkey.pem;\n###\n\nvi /etc/nginx/conf.d/ssl.conf\n###\n# from https://cipherli.st/ and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html\n\nssl_protocols TLSv1 TLSv1.1 TLSv1.2;\nssl_prefer_server_ciphers on;\nssl_ciphers \"EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH\";\nssl_ecdh_curve secp384r1;\nssl_session_cache shared:SSL:10m;\nssl_session_tickets off;\nssl_stapling on;\nssl_stapling_verify on;\nresolver 8.8.8.8 8.8.4.4 valid=300s;\nresolver_timeout 5s;\n# Disable preloading HSTS for now.  You can use the commented out header line that includes\n# the \"preload\" directive if you understand the implications.\n#add_header Strict-Transport-Security \"max-age=63072000; includeSubdomains; preload\";\nadd_header Strict-Transport-Security \"max-age=63072000; includeSubdomains\";\nadd_header X-Frame-Options DENY;\nadd_header X-Content-Type-Options nosniff;\n\nssl_dhparam /etc/ssl/certs/dhparam.pem;\n###\n\nvi /etc/nginx/conf.d/default.conf\n#APPEND\nserver {\n    listen 443 ssl default_server; #XXX\n    listen [::]:443 ssl default_server; #XXX\n    include conf.d/ssl-syakesaba.com.conf; #XXX\n    include conf.d/ssl.conf; #XXX\n}\n```\n\n### \u52d5\u304f\u304b\u8a66\u3059\n\n```\nsystemctl restart nginx\n```\n\n### \u5b9f\u969b\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\n\n```\nhttp://www.syakesaba.com/\nhttps://www.syakesaba.com/\n\n# https://www.ssllabs.com/ssltest/analyze.html?d=www.syakesaba.com&latest\n```\n\n# \uff11\u30f6\u6708\u306b\u4e00\u56de\u5b9a\u671f\u7684\u306b\u66f4\u65b0\u3055\u305b\u308b\n\n```\ncat /etc/cron.d/certbot\n###\n# /etc/cron.d/certbot: crontab entries for the certbot package\n#\n# Upstream recommends attempting renewal twice a day\n#\n# Eventually, this will be an opportunity to validate certificates\n# haven't been revoked, etc.  Renewal will only occur if expiration\n# is within 30 days.\nSHELL=/bin/sh\nPATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin\n\n0 */12 * * * root test -x /usr/bin/certbot -a \\! -d /run/systemd/system && perl -e 'sleep int(rand(3600))' && certbot -q renew\n###\n\nvi  /etc/cron.d/certbot\n#REPLACE\n0 */12 * * * root test -x /usr/bin/certbot -a \\! -d /run/systemd/system && perl -e 'sleep int(rand(3600))' && certbot -q renew && perl -e 'sleep int(rand(3600))'  && /bin/systemctl restart nginx\n```\n\n# \u7d50\u679c\n<img width=\"1007\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-12 13.40.59.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/123740/f99b514f-b2fa-7060-a0a0-0590b2772ec9.png\">\n\n\u904b\u7528\u9762\u306f\u77e5\u3089\u3093\n", "tags": ["nginx", "Debian8", "Jessie", "letsencrypt", "\u304a\u540d\u524d.com"]}