{"tags": ["cocos2d-x"], "context": " More than 1 year has passed since last update.cocos2d-x\u306b\u306fCCDirector\u306bconfig\u30d5\u30a1\u30a4\u30eb\u3067\u8a2d\u5b9a\u3067\u304d\u308b\u6a5f\u69cb\u304c\u3042\u308a\u3001\n\u8d77\u52d5\u6642\u306b\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nCCConfiguration::sharedConfiguration()->loadConfigFile(\"configs/config.plist\");\nconfing\u30d5\u30a1\u30a4\u30eb\u306fplist\u3067\u3001\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a2d\u5b9a\u304c\u3067\u304d\u307e\u3059\u3002\n\nFPS\nFPS\u306e\u8868\u793a\nGL projection(2d\u30013d\u3001custom\uff09\nDefault pixel format for PNG images with alpha\nPVR v2 has alpha premultiplied ?\n\n2.2.2\u3067\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u4fbf\u5229\u306a\u306e\u3067\u4f7f\u3063\u3066\u898b\u3066\u4e0b\u3055\u3044\u3002\n\nCCDirector.cpp\nvoid CCDirector::setDefaultValues(void)\n{\n    CCConfiguration *conf = CCConfiguration::sharedConfiguration();\n\n    // default FPS\n    double fps = conf->getNumber(\"cocos2d.x.fps\", kDefaultFPS);\n    m_dOldAnimationInterval = m_dAnimationInterval = 1.0 / fps;\n\n    // Display FPS\n    m_bDisplayStats = conf->getBool(\"cocos2d.x.display_fps\", false);\n\n    // GL projection\n    const char *projection = conf->getCString(\"cocos2d.x.gl.projection\", \"3d\");\n    if( strcmp(projection, \"3d\") == 0 )\n        m_eProjection = kCCDirectorProjection3D;\n    else if (strcmp(projection, \"2d\") == 0)\n        m_eProjection = kCCDirectorProjection2D;\n    else if (strcmp(projection, \"custom\") == 0)\n        m_eProjection = kCCDirectorProjectionCustom;\n    else\n        CCAssert(false, \"Invalid projection value\");\n\n    // Default pixel format for PNG images with alpha\n    const char *pixel_format = conf->getCString(\"cocos2d.x.texture.pixel_format_for_png\", \"rgba8888\");\n    if( strcmp(pixel_format, \"rgba8888\") == 0 )\n        CCTexture2D::setDefaultAlphaPixelFormat(kCCTexture2DPixelFormat_RGBA8888);\n    else if( strcmp(pixel_format, \"rgba4444\") == 0 )\n        CCTexture2D::setDefaultAlphaPixelFormat(kCCTexture2DPixelFormat_RGBA4444);\n    else if( strcmp(pixel_format, \"rgba5551\") == 0 )\n        CCTexture2D::setDefaultAlphaPixelFormat(kCCTexture2DPixelFormat_RGB5A1);\n\n    // PVR v2 has alpha premultiplied ?\n    bool pvr_alpha_premultipled = conf->getBool(\"cocos2d.x.texture.pvrv2_has_alpha_premultiplied\", false);\n    CCTexture2D::PVRImagesHavePremultipliedAlpha(pvr_alpha_premultipled);\n}\n\n\ncocos2d-x\u306b\u306fCCDirector\u306bconfig\u30d5\u30a1\u30a4\u30eb\u3067\u8a2d\u5b9a\u3067\u304d\u308b\u6a5f\u69cb\u304c\u3042\u308a\u3001\n\n\u8d77\u52d5\u6642\u306b\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n`CCConfiguration::sharedConfiguration()->loadConfigFile(\"configs/config.plist\");`\nconfing\u30d5\u30a1\u30a4\u30eb\u306fplist\u3067\u3001\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a2d\u5b9a\u304c\u3067\u304d\u307e\u3059\u3002\n\n* FPS\n* FPS\u306e\u8868\u793a\n* GL projection(2d\u30013d\u3001custom\uff09\n* Default pixel format for PNG images with alpha\n* PVR v2 has alpha premultiplied ?\n\n2.2.2\u3067\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u4fbf\u5229\u306a\u306e\u3067\u4f7f\u3063\u3066\u898b\u3066\u4e0b\u3055\u3044\u3002\n\n```cpp:CCDirector.cpp\nvoid CCDirector::setDefaultValues(void)\n{\n\tCCConfiguration *conf = CCConfiguration::sharedConfiguration();\n\n\t// default FPS\n\tdouble fps = conf->getNumber(\"cocos2d.x.fps\", kDefaultFPS);\n\tm_dOldAnimationInterval = m_dAnimationInterval = 1.0 / fps;\n\n\t// Display FPS\n\tm_bDisplayStats = conf->getBool(\"cocos2d.x.display_fps\", false);\n\n\t// GL projection\n\tconst char *projection = conf->getCString(\"cocos2d.x.gl.projection\", \"3d\");\n\tif( strcmp(projection, \"3d\") == 0 )\n\t\tm_eProjection = kCCDirectorProjection3D;\n\telse if (strcmp(projection, \"2d\") == 0)\n\t\tm_eProjection = kCCDirectorProjection2D;\n\telse if (strcmp(projection, \"custom\") == 0)\n\t\tm_eProjection = kCCDirectorProjectionCustom;\n\telse\n\t\tCCAssert(false, \"Invalid projection value\");\n\n\t// Default pixel format for PNG images with alpha\n\tconst char *pixel_format = conf->getCString(\"cocos2d.x.texture.pixel_format_for_png\", \"rgba8888\");\n\tif( strcmp(pixel_format, \"rgba8888\") == 0 )\n\t\tCCTexture2D::setDefaultAlphaPixelFormat(kCCTexture2DPixelFormat_RGBA8888);\n\telse if( strcmp(pixel_format, \"rgba4444\") == 0 )\n\t\tCCTexture2D::setDefaultAlphaPixelFormat(kCCTexture2DPixelFormat_RGBA4444);\n\telse if( strcmp(pixel_format, \"rgba5551\") == 0 )\n\t\tCCTexture2D::setDefaultAlphaPixelFormat(kCCTexture2DPixelFormat_RGB5A1);\n\n\t// PVR v2 has alpha premultiplied ?\n\tbool pvr_alpha_premultipled = conf->getBool(\"cocos2d.x.texture.pvrv2_has_alpha_premultiplied\", false);\n\tCCTexture2D::PVRImagesHavePremultipliedAlpha(pvr_alpha_premultipled);\n}\n```"}