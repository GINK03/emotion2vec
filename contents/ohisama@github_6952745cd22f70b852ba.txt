{"context": " More than 1 year has passed since last update.go-statemachine\u3092\u4f7f\u3063\u3066\u898b\u307e\u3057\u305f\u3002\npackage main\nimport (\n    \"fmt\"\n    \"time\"\n    \"github.com/dpapathanasiou/go-statemachine\"\n)\nfunc A(val0 interface{}) (nextState string, nextVal interface{}) {\n    val := val0\n    nextState = \"yellow\"\n    nextVal = val\n    time.Sleep(500 * time.Millisecond)\n    fmt.Println(\"green on\")\n    time.Sleep(500 * time.Millisecond)\n    fmt.Println(\"green off\")\n    return\n}\nfunc B(val0 interface{}) (nextState string, nextVal interface{}) {\n    val := val0\n    nextState = \"red\"\n    nextVal = val\n    time.Sleep(500 * time.Millisecond)\n    fmt.Println(\"yellow on\")\n    time.Sleep(500 * time.Millisecond)\n    fmt.Println(\"yellow off\")\n    return\n}\nfunc C(val0 interface{}) (nextState string, nextVal interface{}) {\n    val := val0\n    nextState = \"green\"\n    nextVal = val\n    time.Sleep(500 * time.Millisecond)\n    fmt.Println(\"red on\")\n    time.Sleep(500 * time.Millisecond)\n    fmt.Println(\"red off\")\n    return\n}\nfunc main() {\n    m := statemachine.Machine{map[string] statemachine.Handler {}, \"green\", map[string] bool {}}\n    m.AddState(\"green\", A)\n    m.AddState(\"yellow\", B)\n    m.AddState(\"red\", C)\n    m.AddEndState(\"out\")\n    m.Execute(1.0)\n    fmt.Println(\"ok\")\n}\n\ngo-statemachine\u3092\u4f7f\u3063\u3066\u898b\u307e\u3057\u305f\u3002\n\n```\npackage main\nimport (\n\t\"fmt\"\n\t\"time\"\n\t\"github.com/dpapathanasiou/go-statemachine\"\n)\nfunc A(val0 interface{}) (nextState string, nextVal interface{}) {\n\tval := val0\n\tnextState = \"yellow\"\n\tnextVal = val\n\ttime.Sleep(500 * time.Millisecond)\n\tfmt.Println(\"green on\")\n\ttime.Sleep(500 * time.Millisecond)\n\tfmt.Println(\"green off\")\n\treturn\n}\nfunc B(val0 interface{}) (nextState string, nextVal interface{}) {\n\tval := val0\n\tnextState = \"red\"\n\tnextVal = val\n\ttime.Sleep(500 * time.Millisecond)\n\tfmt.Println(\"yellow on\")\n\ttime.Sleep(500 * time.Millisecond)\n\tfmt.Println(\"yellow off\")\n\treturn\n}\nfunc C(val0 interface{}) (nextState string, nextVal interface{}) {\n\tval := val0\n\tnextState = \"green\"\n\tnextVal = val\n\ttime.Sleep(500 * time.Millisecond)\n\tfmt.Println(\"red on\")\n\ttime.Sleep(500 * time.Millisecond)\n\tfmt.Println(\"red off\")\n\treturn\n}\nfunc main() {\n\tm := statemachine.Machine{map[string] statemachine.Handler {}, \"green\", map[string] bool {}}\n\tm.AddState(\"green\", A)\n\tm.AddState(\"yellow\", B)\n\tm.AddState(\"red\", C)\n\tm.AddEndState(\"out\")\n\tm.Execute(1.0)\n\tfmt.Println(\"ok\")\n}\n```\n", "tags": ["Go", "L\u30c1\u30ab", "statemachine"]}