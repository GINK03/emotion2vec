{"context": " More than 1 year has passed since last update.AndroidStudio \u3067 APK \u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u5909\u66f4\u3059\u308b Gradle \u306e\u8a2d\u5b9a | DevAchieve\u3067\nAPK \u3092\u30ea\u30cd\u30fc\u30e0\u3057\u307e\u3057\u305f\u304c\u3001\n\u51fa\u529b\u3055\u308c\u308b\u30d5\u30a9\u30eb\u30c0\u304c build/outputs/apk/ \u306a\u306e\u3067\n\u5909\u66f4\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nGradle \u306e Task \u3092\u5b9a\u7fa9\u3057\u3066\u3042\u3052\u308c\u3070\n\u4efb\u610f\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u30b3\u30d4\u30fc\u3059\u308b\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3064\u3044\u3067\u306b ProGuard \u304c\u6709\u52b9\u306a\u3089 ProGuard \u95a2\u9023\u30d5\u30a1\u30a4\u30eb\u3082\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\nGradle \u3067 Signed APK \u3068ProGuard \u95a2\u9023\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30d4\u30fc\u3059\u308b\u30bf\u30b9\u30af\u3092\u8a2d\u5b9a\u3059\u308b\n\napp/build.gradle\napplicationVariants.all { variant ->\n    if (variant.buildType.name.equals(\"release\")) {\n        variant.outputs.each { output ->\n            if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {\n                // Rename APK\n                def applicationId = defaultConfig.applicationId\n                def versionCode = defaultConfig.versionCode\n                def versionName = defaultConfig.versionName\n                def date = new java.text.SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date())\n                def newName = \"${applicationId}_r${versionCode}_v${versionName}_${date}.apk\"\n\n                def publish = project.tasks.create(\"publishAll\")\n\n                // Move and Rename APK\n                def task = project.tasks.create(\"publish${variant.name.capitalize()}Apk\", Copy)\n                task.from(output.outputFile)\n                task.rename(output.outputFile.name, newName)\n                task.into(file(\"${variant.name}/apk\").getAbsolutePath())\n\n                task.dependsOn variant.assemble\n                publish.dependsOn task\n\n                // Move ProGuard\n                if (variant.buildType.runProguard) {\n                    def copyTask = project.tasks.create(\"copy${variant.name.capitalize()}MappingText\", Copy)\n                    def buildTypeName = variant.buildType.name\n                    copyTask.from(file(\"build/outputs/proguard/${buildTypeName}\").path)\n                    copyTask.into(file(\"${variant.name}/proguard\").getAbsolutePath())\n\n                    copyTask.dependsOn variant.assemble\n                    task.dependsOn copyTask\n                }\n            }\n        }\n    }\n}\n\n\n\n\u5b9f\u884c\n./gradlew publishAll \u3067\napp/release/apk/ \u306b Signed APK \u304c\u3001\napp/release/proguard/ \u306b ProGuard \u95a2\u9023\u30d5\u30a1\u30a4\u30eb\u304c\u30b3\u30d4\u30fc\u3055\u308c\u307e\u3059\u3002\n\n\u53c2\u8003\nAndroidStudio\u3067APK\u3092\u4f5c\u3063\u305f\u3042\u3068\u306b\u7279\u5b9a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bAPK\u3092\u30b3\u30d4\u30fc\u3059\u308b - Qiita\n[AndroidStudio \u3067 APK \u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u5909\u66f4\u3059\u308b Gradle \u306e\u8a2d\u5b9a | DevAchieve](http://wada811.blogspot.com/2014/10/generate-signed-APK-has-been-named-by-gradle.html)\u3067\nAPK \u3092\u30ea\u30cd\u30fc\u30e0\u3057\u307e\u3057\u305f\u304c\u3001\n\u51fa\u529b\u3055\u308c\u308b\u30d5\u30a9\u30eb\u30c0\u304c build/outputs/apk/ \u306a\u306e\u3067\n\u5909\u66f4\u3057\u305f\u3044\u3053\u3068\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nGradle \u306e Task \u3092\u5b9a\u7fa9\u3057\u3066\u3042\u3052\u308c\u3070\n\u4efb\u610f\u306e\u30d5\u30a9\u30eb\u30c0\u306b\u30b3\u30d4\u30fc\u3059\u308b\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3064\u3044\u3067\u306b ProGuard \u304c\u6709\u52b9\u306a\u3089 ProGuard \u95a2\u9023\u30d5\u30a1\u30a4\u30eb\u3082\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\n# Gradle \u3067 Signed APK \u3068ProGuard \u95a2\u9023\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30d4\u30fc\u3059\u308b\u30bf\u30b9\u30af\u3092\u8a2d\u5b9a\u3059\u308b\n\n```groovy:app/build.gradle\napplicationVariants.all { variant ->\n    if (variant.buildType.name.equals(\"release\")) {\n        variant.outputs.each { output ->\n            if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {\n                // Rename APK\n                def applicationId = defaultConfig.applicationId\n                def versionCode = defaultConfig.versionCode\n                def versionName = defaultConfig.versionName\n                def date = new java.text.SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date())\n                def newName = \"${applicationId}_r${versionCode}_v${versionName}_${date}.apk\"\n \n                def publish = project.tasks.create(\"publishAll\")\n \n                // Move and Rename APK\n                def task = project.tasks.create(\"publish${variant.name.capitalize()}Apk\", Copy)\n                task.from(output.outputFile)\n                task.rename(output.outputFile.name, newName)\n                task.into(file(\"${variant.name}/apk\").getAbsolutePath())\n \n                task.dependsOn variant.assemble\n                publish.dependsOn task\n \n                // Move ProGuard\n                if (variant.buildType.runProguard) {\n                    def copyTask = project.tasks.create(\"copy${variant.name.capitalize()}MappingText\", Copy)\n                    def buildTypeName = variant.buildType.name\n                    copyTask.from(file(\"build/outputs/proguard/${buildTypeName}\").path)\n                    copyTask.into(file(\"${variant.name}/proguard\").getAbsolutePath())\n \n                    copyTask.dependsOn variant.assemble\n                    task.dependsOn copyTask\n                }\n            }\n        }\n    }\n}\n```\n\n## \u5b9f\u884c\n**./gradlew publishAll** \u3067\napp/release/apk/ \u306b Signed APK \u304c\u3001\napp/release/proguard/ \u306b ProGuard \u95a2\u9023\u30d5\u30a1\u30a4\u30eb\u304c\u30b3\u30d4\u30fc\u3055\u308c\u307e\u3059\u3002\n\n## \u53c2\u8003\n[AndroidStudio\u3067APK\u3092\u4f5c\u3063\u305f\u3042\u3068\u306b\u7279\u5b9a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bAPK\u3092\u30b3\u30d4\u30fc\u3059\u308b - Qiita](http://qiita.com/takke/items/015c79f8be67f5d72ed6)\n", "tags": ["AndroidStudio0.8.14", "AndroidGradlePlugin0.13", "gradle2.1", "Android"]}