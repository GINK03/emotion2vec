{"context": "http://scikit-learn.org/0.18/modules/svm.html \u3092 google \u7ffb\u8a33\u3057\u305f\n\u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u76ee\u6b21\n\n\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\uff08SVM\uff09\u306f\u3001\u300c\u5206\u985e\u300d\u3001\u300c\u56de\u5e30\u300d\u304a\u3088\u3073\u300c\u7570\u5e38\u5024\u691c\u51fa\u300d\u306b\u4f7f\u7528\u3055\u308c\u308b\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u65b9\u6cd5\u306e\u30bb\u30c3\u30c8\u3067\u3059\u3002\n\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306e\u5229\u70b9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n\u9ad8\u6b21\u5143\u7a7a\u9593\u3067\u52b9\u679c\u7684\u3067\u3059\u3002\n\u6b21\u5143\u306e\u6570\u304c\u6a19\u672c\u306e\u6570\u3088\u308a\u3082\u591a\u3044\u5834\u5408\u3067\u3082\u52b9\u679c\u7684\u3067\u3059\u3002\n\u610f\u601d\u6c7a\u5b9a\u95a2\u6570\uff08\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u3068\u547c\u3070\u308c\u308b\uff09\u3067\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30dd\u30a4\u30f3\u30c8\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u30e1\u30e2\u30ea\u52b9\u7387\u3082\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002\n\u6c4e\u7528\uff1a\u6c7a\u5b9a\u95a2\u6570\u306b\u306f\u7570\u306a\u308b\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 \u5171\u901a\u306e\u30ab\u30fc\u30cd\u30eb\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30ab\u30b9\u30bf\u30e0\u30ab\u30fc\u30cd\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306e\u6b20\u70b9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n\u30d5\u30a3\u30fc\u30c1\u30e3\u306e\u6570\u304c\u30b5\u30f3\u30d7\u30eb\u306e\u6570\u3088\u308a\u3082\u306f\u308b\u304b\u306b\u591a\u3044\u5834\u5408\u3001\u3053\u306e\u65b9\u6cd5\u306f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u4f4e\u4e0b\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\nSVM\u306f\u78ba\u7387\u63a8\u5b9a\u5024\u3092\u76f4\u63a5\u63d0\u4f9b\u3059\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u9ad8\u4fa1\u306a5\u500d\u4ea4\u5dee\u691c\u5b9a\u3092\u4f7f\u7528\u3057\u3066\u8a08\u7b97\u3055\u308c\u307e\u3059\uff08\u4e0b\u8a18\u306e\u53c2\u7167\uff1a \u30b9\u30b3\u30a2\u3068\u78ba\u7387\uff09\u3002\n\nscikit-learn\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306f\u3001\u9ad8\u5bc6\u5ea6\uff08 numpy.ndarray\u3068numpy.asarray\u306e\u305d\u308c\u306b\u5909\u63db\u53ef\u80fd\uff09\u3068\u30b9\u30d1\u30fc\u30b9\uff08\u4efb\u610f\u306e scipy.sparse\uff09\u306e\u30b5\u30f3\u30d7\u30eb\u30d9\u30af\u30c8\u30eb\u3092\u5165\u529b\u3068\u3057\u3066\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u758e\u306a\u30c7\u30fc\u30bf\u306e\u4e88\u6e2c\u3092\u884c\u3046\u305f\u3081\u306bSVM\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u305d\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306b\u9069\u5408\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 \u6700\u9069\u306a\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5f97\u308b\u306b\u306f\u3001 dtype = float64\u3092\u4f7f\u7528\u3057\u3066C\u9806\u5e8f\u4ed8\u3051\u3055\u308c\u305fnumpy.ndarray\uff08\u5bc6\uff09\u307e\u305f\u306f scipy.sparse.csr_matrix\uff08\u758e\uff09\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n1.4.1. \u5206\u985e\nSVC\u3001NuSVC\u3001\u304a\u3088\u3073 LinearSVC \u306f\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u591a\u30af\u30e9\u30b9\u5206\u985e\u3092\u5b9f\u884c\u3067\u304d\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\nSVC\u3068NuSVC\u306f\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u3059\u304c\u3001\u308f\u305a\u304b\u306b\u7570\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u53d7\u3051\u5165\u308c\u3001\u7570\u306a\u308b\u6570\u5b66\u7684\u5b9a\u5f0f\u5316\u3092\u3057\u307e\u3059\uff08see section\u6570\u5b66\u7684\u5b9a\u5f0f\u5316\uff09\u3002 \u4e00\u65b9\u3001LinearSVC \u306f\u3001\u7dda\u5f62\u30ab\u30fc\u30cd\u30eb\u306e\u5834\u5408\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u5206\u985e\u5668\u306e\u5225\u306e\u5b9f\u88c5\u3067\u3059\u3002 LinearSVC\u306f\u30ad\u30fc\u30ef\u30fc\u30c9 kernel \u3092\u53d7\u3051\u5165\u308c\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u7dda\u5f62\u3067\u3042\u308b\u3068\u307f\u306a\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u3001SVC\u3084NuSVC\u306e\u30e1\u30f3\u30d0\u30fc\u306e\u4e00\u90e8\u306b\u306f support_ \u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u305b\u3093\u3002\nSVC\u3001NuSVC\u3001\u304a\u3088\u3073LinearSVC\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30b5\u30f3\u30d7\u30eb\u3092\u4fdd\u6301\u3059\u308b\u30b5\u30a4\u30ba [n_samples\u3001n_features] \u306e\u914d\u5217X\u3001\u30af\u30e9\u30b9\u30e9\u30d9\u30eb\uff08\u6587\u5b57\u5217\u307e\u305f\u306f\u6574\u6570\uff09\u306e\u914d\u5217y\u3001\u30b5\u30a4\u30ba [n_samples] \u306e2\u3064\u306e\u914d\u5217\u3092\u5165\u529b\u3068\u3057\u3066\u53d6\u308a\u307e\u3059\u3002\n>>> from sklearn import svm\n>>> X = [[0, 0], [1, 1]]\n>>> y = [0, 1]\n>>> clf = svm.SVC()\n>>> clf.fit(X, y)  \nSVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,\n    decision_function_shape=None, degree=3, gamma='auto', kernel='rbf',\n    max_iter=-1, probability=False, random_state=None, shrinking=True,\n    tol=0.001, verbose=False)\n\n\u9069\u5408\u5f8c\u3001\u30e2\u30c7\u30eb\u3092\u4f7f\u7528\u3057\u3066\u65b0\u3057\u3044\u5024\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n>>> clf.predict([[2., 2.]])\narray([1])\n\nSVM\u306e\u6c7a\u5b9a\u95a2\u6570\u306f\u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u3068\u547c\u3070\u308c\u308b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u3044\u304f\u3064\u304b\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u3044\u304f\u3064\u304b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001\u30e1\u30f3\u30d0 support_vectors_\u3001 support_ \u304a\u3088\u3073n_support \u306b\u3042\u308a\u307e\u3059\u3002\n>>> # get support vectors\n>>> clf.support_vectors_\narray([[ 0.,  0.],\n       [ 1.,  1.]])\n>>> # get indices of support vectors\n>>> clf.support_ \narray([0, 1]...)\n>>> # get number of support vectors for each class\n>>> clf.n_support_ \narray([1, 1]...)\n\n\n1.4.1.1. \u591a\u30af\u30e9\u30b9\u5206\u985e\nSVC\u3068NuSVC\u306f\u3001\u591a\u30af\u30e9\u30b9\u5206\u985e\u306e\u305f\u3081\u306b\"one-against-one\"\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\uff08Knerr\u3089\u30011990\uff09\u3002 n_class \u304c\u30af\u30e9\u30b9\u6570\u3067\u3042\u308b\u5834\u5408\u3001n_class *\uff08n_class - 1\uff09/ 2 \u306e\u5206\u985e\u5668\u304c\u69cb\u7bc9\u3055\u308c\u3001\u305d\u308c\u305e\u308c\u304c2\u3064\u306e\u30af\u30e9\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u8a13\u7df4\u3057\u307e\u3059\u3002 \u4ed6\u306e\u5206\u985e\u5668\u3068\u306e\u4e00\u8cab\u6027\u306e\u3042\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u3001 decision_function_shape \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001 \"one-against-one\"\u5206\u985e\u5668\u306e\u7d50\u679c\u3092shape \uff08n_samples\u3001n_classes\uff09 \u306e\u6c7a\u5b9a\u95a2\u6570\u306b\u96c6\u7d04\u3059\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002\n>>> X = [[0], [1], [2], [3]]\n>>> Y = [0, 1, 2, 3]\n>>> clf = svm.SVC(decision_function_shape='ovo')\n>>> clf.fit(X, Y) \nSVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,\n    decision_function_shape='ovo', degree=3, gamma='auto', kernel='rbf',\n    max_iter=-1, probability=False, random_state=None, shrinking=True,\n    tol=0.001, verbose=False)\n>>> dec = clf.decision_function([[1]])\n>>> dec.shape[1] # 4 classes: 4*3/2 = 6\n6\n>>> clf.decision_function_shape = \"ovr\"\n>>> dec = clf.decision_function([[1]])\n>>> dec.shape[1] # 4 classes\n4\n\n\u4e00\u65b9\u3001LinearSVC\u306f \"one-vs-rest\" \u30de\u30eb\u30c1\u30af\u30e9\u30b9\u6226\u7565\u3092\u5b9f\u88c5\u3057\u3001n_class\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3057\u307e\u3059\u3002 \u30af\u30e9\u30b9\u304c2\u3064\u3057\u304b\u306a\u3044\u5834\u5408\u306f\u30011\u3064\u306e\u30e2\u30c7\u30eb\u306e\u307f\u304c\u8a13\u7df4\u3055\u308c\u307e\u3059\u3002\n>>>\n>>> lin_clf = svm.LinearSVC()\n>>> lin_clf.fit(X, Y) \nLinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,\n     intercept_scaling=1, loss='squared_hinge', max_iter=1000,\n     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,\n     verbose=0)\n>>> dec = lin_clf.decision_function([[1]])\n>>> dec.shape[1]\n4\n\n\u6c7a\u5b9a\u95a2\u6570\u306e\u5b8c\u5168\u306a\u8aac\u660e\u306b\u3064\u3044\u3066\u306f\u3001\u6570\u5f0f \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nLinearSVC\u306f multi_class='crammer_singer' \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066Crammer\u3068Singer\u306b\u3088\u3063\u3066\u7b56\u5b9a\u3055\u308c\u305f\u3001\u3044\u308f\u3086\u308b\u30de\u30eb\u30c1\u30af\u30e9\u30b9SVM\u3067\u3042\u308b\u4ee3\u66ff\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u6226\u7565\u3082\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u65b9\u6cd5\u306f\u4e00\u8cab\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\"one-vs-rest\" \u5206\u985e\u306b\u306f\u5f53\u3066\u306f\u307e\u308a\u307e\u305b\u3093\u3002\u5b9f\u969b\u306b\u306f\u3001\u7d50\u679c\u306f\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059\u304c\u3001\u5b9f\u884c\u6642\u9593\u306f\u5927\u5e45\u306b\u5c11\u306a\u304f\u306a\u308b\u305f\u3081\u3001\u901a\u5e38\u306f\"one-vs-rest\"\u5206\u985e\u304c\u597d\u307e\u308c\u307e\u3059\u3002\n\"one-vs-rest\" LinearSVC\u306e\u5834\u5408\u3001coef_ \u3068 intercept_ \u306e\u5c5e\u6027\u306f\u305d\u308c\u305e\u308c [n_class, n_features] \u3068 [n_class] \u3068\u3044\u3046\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\u4fc2\u6570\u306e\u5404\u884c\u306f\u3001n_class \u591a\u304f\u306e \"one-vs-rest\" \u5206\u985e\u5668\u306e\u3046\u3061\u306e1\u3064\u306b\u5bfe\u5fdc\u3057\u3001\"one\" \u30af\u30e9\u30b9\u306e\u9806\u306b\u3001\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30c8\u306b\u5bfe\u3057\u3066\u985e\u4f3c\u3057\u3066\u3044\u308b\u3002\n\"one-vs-one\" SVC\u306e\u5834\u5408\u3001\u5c5e\u6027\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u306f\u3082\u3046\u5c11\u3057\u8907\u96d1\u3067\u3059\u3002\u7dda\u5f62\u30ab\u30fc\u30cd\u30eb\u306e\u5834\u5408\u3001 coef_ \u3068intercept_ \u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u306f\u3001 coef_ \u306e\u5f62\u72b6\u304c [n_class * (n_class - 1) / 2, n_features] \u3067\u3042\u308b\u3053\u3068\u3092\u9664\u3044\u3066\u3001\u4e0a\u8a18LinearSVC\u3067\u8aac\u660e\u3057\u305f\u3082\u306e\u3068\u540c\u69d8\u3067\u3059\u3002\u591a\u304f\u306e\u30d0\u30a4\u30ca\u30ea\u5206\u985e\u5b50\u3002\u30af\u30e9\u30b90\u304b\u3089\u30af\u30e9\u30b9n\u307e\u3067\u306e\u9806\u5e8f\u306f\u3001\u300c0\u5bfe1\u300d\u3001\u300c0\u5bfe2\u300d\u3001...\u300c0\u5bfen\u300d\u3001\u300c1\u5bfe2\u300d\u3001\u300c1\u5bfe3\u300d\u3001\u300c1\u5bfen\u300d\u3002 \u3002 \u3002 \"n-1\u5bfen\"\u3002\ndual_coef_ \u306e\u5f62\u72b6\u306f [n_class-1\u3001n_SV] \u3067\u3042\u308a\u3001\u3084\u3084\u96e3\u3057\u3044\u30ec\u30a4\u30a2\u30a6\u30c8\u3067\u3059\u3002\u5217\u306f\u3001 n_class *\uff08n_class - 1\uff09/ 2 \"one-vs-one\"\u5206\u985e\u5b50\u306e\u3044\u305a\u308c\u304b\u306b\u542b\u307e\u308c\u308b\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002\u5404\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u306f\u3001 n_class - 1 \u5206\u985e\u5b50\u3067\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u5404\u884c\u306e n_class - 1 \u30a8\u30f3\u30c8\u30ea\u306f\u3001\u3053\u308c\u3089\u306e\u5206\u985e\u5b50\u306e\u4e8c\u91cd\u4fc2\u6570\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002\n\u3053\u308c\u306f\u4f8b\u3067\u3088\u308a\u660e\u78ba\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff1a\n3\u3064\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb v00\u3001v10\u3001v20v00\u3001v10\u3001v20v^{0}_0\u3001v^{1}_0\u3001v^{2}_0 \u3092\u6709\u3059\u308b\u30af\u30e9\u30b90\u3001\u304a\u3088\u3073\u3001\u305d\u308c\u305e\u308c2\u3064\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb v01,v11v ^{0}_1, v^{1}_1 \u3001v02,v12v^{0}_2, v^{1}_2 \u3092\u6301\u3064\u30af\u30e9\u30b91\u3068\u30af\u30e9\u30b92\u30013\u3064\u306e\u30af\u30e9\u30b9\u554f\u984c\u3092\u8003\u3048\u308b\u3002\u5404\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb vjiv^{j}_i \u306b\u306f\u30012\u3064\u306e\u4e8c\u91cd\u4fc2\u6570\u304c\u3042\u308b\u3002\u30af\u30e9\u30b9 ii \u3068 kk \u03b1ji,k\\alpha^{j}_{i,k} \u3068\u306e\u9593\u306e\u5206\u985e\u5668\u306b\u304a\u3051\u308b\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u4fc2\u6570 vjiv^{j}_i \u3092\u30b3\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\u3002\u3059\u308b\u3068 dual_coef_ \u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n \u03b100,1\\alpha^{0}_{0,1} \n \u03b100,2\\alpha^{0}_{0,2} \n\u30af\u30e9\u30b90\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u4fc2\u6570\n\n\n \u03b110,1\\alpha^{1}_{0,1} \n \u03b110,2\\alpha^{1}_{0,2} \n\n\n \u03b120,1\\alpha^{2}_{0,1}  \n \u03b120,2\\alpha^{2}_{0,2} \n\n\n \u03b101,0\\alpha^{0}_{1,0} \n \u03b101,2\\alpha^{0}_{1,2} \n\u30af\u30e9\u30b91\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u4fc2\u6570\n\n\n \u03b111,0\\alpha^{1}_{1,0} \n \u03b111,2\\alpha^{1}_{1,2} \n\n\n \u03b102,0\\alpha^{0}_{2,0} \n \u03b102,1\\alpha^{0}_{2,1} \n\u30af\u30e9\u30b92\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u4fc2\u6570\n\n\n \u03b112,0\\alpha^{1}_{2,0} \n \u03b112,1\\alpha^{1}_{2,1} \n\n\n\n1.4.1.2. \u30b9\u30b3\u30a2\u3068\u78ba\u7387\nSVC\u30e1\u30bd\u30c3\u30c9 decision_function \u306f\u3001\u5404\u30b5\u30f3\u30d7\u30eb\uff08\u307e\u305f\u306f\u30d0\u30a4\u30ca\u30ea\u306e\u30b1\u30fc\u30b9\u3067\u306f1\u3064\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u3064\u304d1\u3064\u306e\u30b9\u30b3\u30a2\uff09\u3054\u3068\u306b\u30af\u30e9\u30b9\u3054\u3068\u306e\u30b9\u30b3\u30a2\u3092\u4e0e\u3048\u307e\u3059\u3002\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30aa\u30d7\u30b7\u30e7\u30f3\u306eprobability\u304cTrue\u306b\u8a2d\u5b9a\u3055\u308c\u308b\u3068\u3001\uff08predict_proba\u3068predict_log_proba\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u306e\uff09\u30af\u30e9\u30b9\u30e1\u30f3\u30d0\u30fc\u30b7\u30c3\u30d7\u78ba\u7387\u306e\u898b\u7a4d\u3082\u308a\u304c\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002\u30d0\u30a4\u30ca\u30ea\u306e\u5834\u5408\u3001\u78ba\u7387\u306fPlatt\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u4f7f\u7528\u3057\u3066\u8f03\u6b63\u3055\u308c\u307e\u3059\uff1aSVM\u306e\u30b9\u30b3\u30a2\u306b\u5bfe\u3059\u308b\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u8ffd\u52a0\u306e\u76f8\u4e92\u691c\u8a3c\u306b\u3088\u308b\u9069\u5408\u3002\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u306e\u5834\u5408\u3001\u3053\u308c\u306f Wu\u3089\uff082004\uff09 \u306e\u3088\u3046\u306b\u62e1\u5f35\u3055\u308c\u3066\u3044\u308b\u3002\n\u8a00\u3046\u307e\u3067\u3082\u306a\u304f\u3001Platt\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u542b\u307e\u308c\u308b\u76f8\u4e92\u691c\u8a3c\u306f\u3001\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u306f\u9ad8\u4fa1\u306a\u64cd\u4f5c\u3067\u3059\u3002\u3055\u3089\u306b\u3001\u78ba\u7387\u63a8\u5b9a\u5024\u306f\u3001\u30b9\u30b3\u30a2\u306e\u300cargmax\u300d\u304c\u78ba\u7387\u306eargmax\u3067\u306a\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u3001\u30b9\u30b3\u30a2\u3068\u77db\u76fe\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002 \uff08\u4f8b\u3048\u3070\u3001\u30d0\u30a4\u30ca\u30ea\u5206\u985e\u3067\u306f\u3001predict_proba\u306b\u5f93\u3063\u3066\u78ba\u7387\u304c<\u00bd\u3067\u3042\u308b\u30af\u30e9\u30b9\u306b\u5c5e\u3059\u308b\u3068predict\u306b\u3088\u3063\u3066\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u30e9\u30d9\u30eb\u4ed8\u3051\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff09\u3002Platt\u306e\u65b9\u6cd5\u306f\u3001\u7406\u8ad6\u7684\u306a\u554f\u984c\u3082\u6709\u3059\u308b\u3053\u3068\u304c\u77e5\u3089\u308c\u3066\u3044\u308b\u3002\u4fe1\u983c\u30b9\u30b3\u30a2\u304c\u5fc5\u8981\u3060\u304c\u3001\u3053\u308c\u3089\u304c\u78ba\u7387\u3067\u3042\u308b\u5fc5\u8981\u304c\u306a\u3044\u5834\u5408\u306f\u3001probability = False\u3092\u8a2d\u5b9a\u3057\u3001predict_proba\u306e\u4ee3\u308f\u308a\u306bdecision_function \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\n\u53c2\u8003\u6587\u732e\uff1a\nWu\u3001Lin and Weng\u3001 \"\u30da\u30a2\u30ef\u30a4\u30ba\u7d50\u5408\u306b\u3088\u308b\u591a\u30af\u30e9\u30b9\u5206\u985e\u306e\u78ba\u7387\u63a8\u5b9a\"\u3001JMLR 5\uff1a975-1005\u30012004\u3002\n\n\n1.4.1.3\u3002\u4e0d\u5747\u8861\u554f\u984c\n\u7279\u5b9a\u306e\u30af\u30e9\u30b9\u307e\u305f\u306f\u7279\u5b9a\u306e\u500b\u3005\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u3088\u308a\u91cd\u8981\u8996\u3059\u308b\u3053\u3068\u304c\u671b\u307e\u308c\u308b\u554f\u984c\u3067\u306f\u3001\u30ad\u30fc\u30ef\u30fc\u30c9 class_weight \u304a\u3088\u3073 sample_weight \u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\nSVC\uff08NuSVC\u3067\u306f\u306a\u304f\uff09\u306f fit \u30e1\u30bd\u30c3\u30c9\u3067\u30ad\u30fc\u30ef\u30fc\u30c9 class_weight \u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u3053\u308c\u306f {class_label\uff1avalue} \u3068\u3044\u3046\u5f62\u5f0f\u306e\u8f9e\u66f8\u3067\u3001value\u306f class_label \u306e\u30d1\u30e9\u30e1\u30fc\u30bf C \u3092 C * value \u306b\u8a2d\u5b9a\u3059\u308b\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570> 0\u3067\u3059\u3002\n\nSVC\u3001NuSVC\u3001SVR\u3001NuSVR\u3001\u304a\u3088\u3073OneClassSVM\u306f\u3001\u30ad\u30fc\u30ef\u30fc\u30c9 sample_weight \u3092\u4f7f\u7528\u3057\u305f\u30e1\u30bd\u30c3\u30c9 fit \u306e\u500b\u3005\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u3064\u3044\u3066\u3082\u30a6\u30a7\u30a4\u30c8\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002 class_weight \u3068\u540c\u69d8\u306b\u3001\u3053\u308c\u3089\u306f\u3001i\u756a\u76ee\u306e\u4f8b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf C \u3092 C * sample_weight[i] \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\n\u4f8b\uff1a\n\n\niris\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u5185\u306e\u7570\u306a\u308bSVM\u5206\u985e\u5668\u3092\u30d7\u30ed\u30c3\u30c8\nSVM\uff1a\u8d85\u5e73\u9762\u3092\u5206\u96e2\u3059\u308b\u6700\u5927\u30de\u30fc\u30b8\u30f3\nSVM\uff1a\u30a2\u30f3\u30d0\u30e9\u30f3\u30b9\u306a\u30af\u30e9\u30b9\u306e\u305f\u3081\u306e\u8d85\u5e73\u9762\u306e\u5206\u96e2\nSVM-Anova\uff1a\u4e00\u5909\u91cf\u306e\u7279\u5fb4\u9078\u629e\u3092\u4f34\u3046SVM\n\u975e\u7dda\u5f62SVM\nSVM\uff1a\u52a0\u91cd\u30b5\u30f3\u30d7\u30eb\n\n\n\n\n1.4.2. \u56de\u5e30\nSupport Vector Classification\u306e\u65b9\u6cd5\u306f\u3001\u56de\u5e30\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u62e1\u5f35\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u65b9\u6cd5\u306f\u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u56de\u5e30\u3068\u547c\u3070\u308c\u307e\u3059\u3002\n\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u30b3\u30b9\u30c8\u95a2\u6570\u306f\u30de\u30fc\u30b8\u30f3\u3092\u8d8a\u3048\u308b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30dd\u30a4\u30f3\u30c8\u3092\u6c17\u306b\u3057\u306a\u3044\u306e\u3067\u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u5206\u985e\uff08\u4e0a\u8a18\u306e\u3088\u3046\u306b\uff09\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u308b\u30e2\u30c7\u30eb\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u306e\u307f\u306b\u4f9d\u5b58\u3059\u308b\u3002\u540c\u69d8\u306b\u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u56de\u5e30\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u308b\u30e2\u30c7\u30eb\u306f\u3001\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u30b3\u30b9\u30c8\u95a2\u6570\u304c\u30e2\u30c7\u30eb\u4e88\u6e2c\u306b\u8fd1\u3044\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3092\u7121\u8996\u3059\u308b\u305f\u3081\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u306e\u307f\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002\nSVR\u3001NuSVR\u3001LinearSVR\u306e3\u7a2e\u985e\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u56de\u5e30\u306e\u5b9f\u88c5\u304c\u3042\u308a\u307e\u3059\u3002 LinearSVR\u306fSVR\u3088\u308a\u3082\u9ad8\u901f\u306a\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u304c\u3001NuSVR\u306fSVR\u3084LinearSVR\u3068\u306f\u308f\u305a\u304b\u306b\u7570\u306a\u308b\u5f62\u5f0f\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u7dda\u5f62\u30ab\u30fc\u30cd\u30eb\u306e\u307f\u3092\u8003\u616e\u3057\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u5b9f\u88c5\u306e\u8a73\u7d30\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u5206\u985e\u30af\u30e9\u30b9\u3068\u540c\u69d8\u306b\u3001\u30d5\u30a3\u30c3\u30c8\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u5f15\u6570\u30d9\u30af\u30c8\u30ebX\u3001y\u3068\u3057\u3066\u53d6\u3089\u308c\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001y\u306f\u6574\u6570\u5024\u3067\u306f\u306a\u304f\u6d6e\u52d5\u5c0f\u6570\u70b9\u5024\u3092\u6301\u3064\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u307e\u3059\u3002\n>>>\n>>> from sklearn import svm\n>>> X = [[0, 0], [2, 2]]\n>>> y = [0.5, 2.5]\n>>> clf = svm.SVR()\n>>> clf.fit(X, y) \nSVR(C=1.0, cache_size=200, coef0=0.0, degree=3, epsilon=0.1, gamma='auto',\nkernel='rbf', max_iter=-1, shrinking=True, tol=0.001, verbose=False)\n>>> clf.predict([[1, 1]])\narray([ 1.5])\n\n\n\u4f8b\uff1a\n\n\n\u7dda\u5f62\u304a\u3088\u3073\u975e\u7dda\u5f62\u306e\u30ab\u30fc\u30cd\u30eb\u3092\u4f7f\u7528\u3057\u305f\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u56de\u5e30\uff08SVR\uff09\n\n\n\n\n1.4.3. \u5bc6\u5ea6\u63a8\u5b9a\u3001\u65b0\u898f\u6027\u691c\u51fa\n1\u3064\u306e\u30af\u30e9\u30b9\u306eSVM\u304c\u65b0\u898f\u6027\u691c\u51fa\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u4e00\u9023\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u4e0e\u3048\u3089\u308c\u305f\u5834\u5408\u3001\u65b0\u3057\u3044\u30bb\u30c3\u30c8\u3092\u305d\u306e\u30bb\u30c3\u30c8\u306b\u5c5e\u3059\u308b\u3082\u306e\u3068\u3057\u3066\u5206\u985e\u3059\u308b\u3088\u3046\u306b\u3001\u305d\u306e\u30bb\u30c3\u30c8\u306e\u30bd\u30d5\u30c8\u5883\u754c\u3092\u691c\u51fa\u3057\u307e\u3059\u3002 \u3053\u308c\u3092\u5b9f\u88c5\u3059\u308b\u30af\u30e9\u30b9\u306fOneClassSVM \u3067\u3059\u3002\n\u3053\u306e\u5834\u5408\u3001\u305d\u308c\u306f\u6559\u5e2b\u306a\u3057\u5b66\u7fd2\u306e\u4e00\u7a2e\u3067\u3042\u308b\u305f\u3081\u3001 fit \u30e1\u30bd\u30c3\u30c9\u306b\u306f\u30af\u30e9\u30b9\u30e9\u30d9\u30eb\u304c\u306a\u304f\u3001\u914d\u5217X\u3092\u5165\u529b\u3068\u3057\u3066\u53d6\u308a\u307e\u3059\u3002\n\u3053\u306e\u4f7f\u7528\u6cd5\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u30bb\u30af\u30b7\u30e7\u30f3\u300c\u65b0\u898f\u6027\u3068\u7570\u5e38\u5024\u691c\u51fa\u300d\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u4f8b\uff1a\n\n\n\u975e\u7dda\u5f62\u30ab\u30fc\u30cd\u30eb\uff08RBF\uff09\u3092\u6301\u30641\u30af\u30e9\u30b9SVM\n\u7a2e\u5206\u5e03\u30e2\u30c7\u30eb\n\n\n\n\n1.4.4. \u8907\u96d1\n\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306f\u5f37\u529b\u306a\u30c4\u30fc\u30eb\u3067\u3059\u304c\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d9\u30af\u30bf\u306e\u6570\u304c\u5897\u3048\u308b\u306b\u3064\u308c\u3066\u3001\u305d\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u3068\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u8981\u4ef6\u306f\u6025\u901f\u306b\u5897\u52a0\u3057\u307e\u3059\u3002 SVM\u306e\u30b3\u30a2\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d9\u30af\u30c8\u30eb\u306e\u6b8b\u308a\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u3092\u5206\u96e2\u3059\u308b2\u6b21\u8a08\u753b\u554f\u984c\uff08QP\uff09\u3067\u3059\u3002\u3053\u306elibsvm \u30d9\u30fc\u30b9\u306e\u5b9f\u88c5\u3067\u4f7f\u7528\u3055\u308c\u308bQP\u30bd\u30eb\u30d0\u30fc\u306f\u3001libsvm\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u52b9\u7387\u6027\u306b\u5fdc\u3058\u3066\u3001 O(nfeatures\u00d7n2samples)O(n_{features} \\times n_{samples}^2) \u3068 O(nfeatures\u00d7n3samples)O(n_{features} \\times n_{samples}^3) \u5b9f\u969b\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff08\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u4f9d\u5b58\uff09\u3002\u30c7\u30fc\u30bf\u304c\u975e\u5e38\u306b\u758e\u3067\u3042\u308b\u5834\u5408\u3001 nfeaturesn_ {features} \u306f\u3001\u30b5\u30f3\u30d7\u30eb\u30d9\u30af\u30c8\u30eb\u5185\u306e\u975e\u30bc\u30ed\u30d5\u30a3\u30fc\u30c1\u30e3\u306e\u5e73\u5747\u6570\u3067\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\u307e\u305f\u3001\u7dda\u5f62\u306e\u5834\u5408\u3001LinearSVC\u3067liblinear \u5b9f\u88c5\u3067\u4f7f\u7528\u3055\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001libsvm\u30d9\u30fc\u30b9\u306eSVC\u30b3\u30f3\u30d1\u30a4\u30e9\u3088\u308a\u3082\u306f\u308b\u304b\u306b\u52b9\u7387\u7684\u3067\u3001\u6570\u767e\u4e07\u306e\u30b5\u30f3\u30d7\u30eb\u3084\u30d5\u30a3\u30fc\u30c1\u30e3\u306b\u307b\u307c\u7dda\u5f62\u306b\u62e1\u5927\u7e2e\u5c0f\u3067\u304d\u307e\u3059\u3002\n\n1.4.5. \u5b9f\u7528\u4e0a\u306e\u30d2\u30f3\u30c8\n\n\n\u30c7\u30fc\u30bf\u30b3\u30d4\u30fc\u306e\u56de\u907f \uff1aSVC\u3001SVR\u3001NuSVC\u3001NuSVR\u306e\u5834\u5408\u3001\u7279\u5b9a\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3055\u308c\u308b\u30c7\u30fc\u30bf\u304c\u9023\u7d9a\u3057\u305fC\u9806\u5e8f\u3067\u306f\u306a\u304f\u3001\u500d\u7cbe\u5ea6\u306e\u5834\u5408\u3001\u5143\u306eC\u5b9f\u88c5\u3092\u547c\u3073\u51fa\u3059\u524d\u306b\u30b3\u30d4\u30fc\u3055\u308c\u307e\u3059\u3002\u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u304cC\u9023\u7d9a\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u306f\u3001\u305d\u306e flags \u5c5e\u6027\u3092\u8abf\u3079\u308b\u3053\u3068\u3067\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\nLinearSVC\uff08\u304a\u3088\u3073 LogisticRegression \uff09\u306e\u5834\u5408\u3001numpy\u914d\u5217\u3068\u3057\u3066\u6e21\u3055\u308c\u305f\u5165\u529b\u306f\u30b3\u30d4\u30fc\u3055\u308c\u3001liblinear\u306e\u5185\u90e8\u758e\u30c7\u30fc\u30bf\u8868\u73fe\uff08\u975e\u30bc\u30ed\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u500d\u7cbe\u5ea6\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u304a\u3088\u3073int32\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff09\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002\u9ad8\u5bc6\u5ea6\u306eC\u9023\u7d9a\u500d\u7cbe\u5ea6\u914d\u5217\u3092\u5165\u529b\u3068\u3057\u3066\u30b3\u30d4\u30fc\u305b\u305a\u306b\u5927\u898f\u6a21\u306a\u7dda\u5f62\u5206\u985e\u5668\u306b\u9069\u5408\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u3001\u4ee3\u308f\u308a\u306b SGDClassifier \u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\u76ee\u7684\u95a2\u6570\u306f\u3001LinearSVC\u30e2\u30c7\u30eb\u3068\u307b\u307c\u540c\u3058\u306b\u69cb\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\n\u30ab\u30fc\u30cd\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u30b5\u30a4\u30ba \uff1aSVC\u3001SVR\u3001nuSVC\u3001\u304a\u3088\u3073NuSVR\u306e\u5834\u5408\u3001\u30ab\u30fc\u30cd\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30b5\u30a4\u30ba\u306f\u3001\u3088\u308a\u5927\u304d\u306a\u554f\u984c\u306e\u5b9f\u884c\u6642\u9593\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u307e\u3059\u3002\u5341\u5206\u306aRAM\u304c\u3042\u308b\u5834\u5408\u306f\u3001cache_size \u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u306e200\uff08MB\uff09\u3088\u308a\u5927\u304d\u3044\u5024\u3001\u305f\u3068\u3048\u3070500\uff08MB\uff09\u307e\u305f\u306f1000\uff08MB\uff09\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\nC\u306e\u8a2d\u5b9a\uff1a C\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u30671\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u9078\u629e\u3067\u3059\u3002\u9a12\u3005\u3057\u3044\u89b3\u6e2c\u304c\u591a\u3044\u5834\u5408\u306f\u3001\u305d\u308c\u3092\u6e1b\u3089\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u306f\u3088\u308a\u591a\u304f\u306e\u63a8\u5b9a\u3092\u6b63\u898f\u5316\u3059\u308b\u3053\u3068\u306b\u5bfe\u5fdc\u3059\u308b\u3002\n\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u30b9\u30b1\u30fc\u30eb\u4e0d\u5909\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u306e\u3067\u3001 \u30c7\u30fc\u30bf\u3092\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u5165\u529b\u30d9\u30af\u30c8\u30ebX\u306e\u5404\u5c5e\u6027\u3092[0,1]\u307e\u305f\u306f[-1\u3001+1]\u306b\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u304b\u3001\u5e73\u57470\u3068\u5206\u65631\u306b\u306a\u308b\u3088\u3046\u306b\u6a19\u6e96\u5316\u3057\u307e\u3059\u3002\u30c6\u30b9\u30c8\u30d9\u30af\u30c8\u30eb\u306b\u306f\u540c\u3058\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u9069\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u610f\u5473\u306e\u3042\u308b\u7d50\u679c\u3092\u5f97\u308b\u3002\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3068\u6b63\u898f\u5316\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u300c\u524d\u51e6\u7406\u3059\u308b\u300d\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nNuSVC / OneClassSVM / NuSVR\u306e\u30d1\u30e9\u30e1\u30fc\u30bfnu\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30a8\u30e9\u30fc\u306e\u5272\u5408\u3068\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u3092\u8fd1\u4f3c\u3057\u307e\u3059\u3002\nSVC\u306b\u304a\u3044\u3066\u3001\u5206\u985e\u306e\u305f\u3081\u306e\u30c7\u30fc\u30bf\u304c\u4e0d\u5747\u8861\u3067\u3042\u308b\uff08\u4f8b\u3048\u3070\u3001\u591a\u304f\u306e\u6b63\u304a\u3088\u3073\u8ca0\u306e\u6570\u3067\u3042\u308b\uff09\u5834\u5408\u3001class_weight = 'balanced'\u3092\u8a2d\u5b9a\u3057\u3001\u304a\u3088\u3073/\u307e\u305f\u306f\u7570\u306a\u308b\u30da\u30ca\u30eb\u30c6\u30a3\u30d1\u30e9\u30e1\u30fc\u30bfC\u3092\u8a66\u307f\u308b\u3002\n\u57fa\u672c\u3068\u306a\u308bLinearSVC\u306e\u5b9f\u88c5\u3067\u306f\u3001\u30e2\u30c7\u30eb\u3092\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u969b\u306b\u3001\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u30d5\u30a3\u30fc\u30c1\u30e3\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u540c\u3058\u5165\u529b\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u308f\u305a\u304b\u306b\u7570\u306a\u308b\u7d50\u679c\u3092\u51fa\u3059\u3053\u3068\u306f\u73cd\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u308c\u304c\u8d77\u3053\u308b\u306a\u3089\u3001\u3088\u308a\u5c0f\u3055\u3044tol\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nLinearSVC\uff08loss = 'l2'\u3001penalty = 'l1'\u3001dual = False\uff09 \u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u308b\u3088\u3046\u306aL1\u30da\u30ca\u30eb\u30c6\u30a3\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u758e\u306a\u89e3\u304c\u5f97\u3089\u308c\u308b\u3002\u3059\u306a\u308f\u3061\u3001\u30d5\u30a3\u30fc\u30c1\u30e3\u30a6\u30a7\u30a4\u30c8\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u306e\u307f\u304c\u30bc\u30ed\u3068\u7570\u306a\u308a\u3001\u6c7a\u5b9a\u95a2\u6570\u306b\u5bc4\u4e0e\u3059\u308b\u3002 C\u3092\u5897\u3084\u3059\u3068\u3001\u3088\u308a\u8907\u96d1\u306a\u30e2\u30c7\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\uff08\u3088\u308a\u591a\u304f\u306e\u6a5f\u80fd\u304c\u9078\u629e\u3055\u308c\u307e\u3059\uff09\u3002 \u300c\u30cc\u30eb\u300d\u30e2\u30c7\u30eb\uff08\u3059\u3079\u3066\u306e\u91cd\u307f\u304c\u30bc\u30ed\u306b\u7b49\u3057\u3044\uff09\u3092\u751f\u6210\u3059\u308bC\u5024\u306f\u3001l1_min_c \u3092\u4f7f\u7528\u3057\u3066\u8a08\u7b97\u3067\u304d\u307e\u3059\u3002\n\n\n1.4.6. \u30ab\u30fc\u30cd\u30eb\u95a2\u6570\n\n\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306f\u3001\u6b21\u306e\u3044\u305a\u308c\u304b\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u7dda\u5f62\uff1a \u27e8x,x\u2032\u27e9 \\langle x, x'\\rangle .\n\u591a\u9805\u5f0f\uff1a (\u03b3\u27e8x,x\u2032\u27e9+r)d (\\gamma \\langle x, x'\\rangle + r)^d . dd \u306f\u30ad\u30fc\u30ef\u30fc\u30c9degree\u3001 rr \u3092coef0 \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\nrbf\uff1a exp(\u2212\u03b3|x\u2212x\u2032|2)\\exp(-\\gamma |x-x'|^2). \u03b3\\gamma \u306f\u30ad\u30fc\u30ef\u30fc\u30c9 gamma \u306b\u3088\u3063\u3066\u6307\u5b9a\u3055\u308c\u30010\u3088\u308a\u5927\u304d\u304f\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\nsigmoid\uff08 tanh(\u03b3\u27e8x,x\u2032\u27e9+r)\\tanh(\\gamma \\langle x,x'\\rangle + r)\uff09\u3002\u3053\u3053\u3067 rr \u306f coef0 \u3067\u6307\u5b9a\u3055\u308c\u307e\u3059\u3002\n\n\u7570\u306a\u308b\u30ab\u30fc\u30cd\u30eb\u306f\u30ad\u30fc\u30ef\u30fc\u30c9 kernel \u306b\u3088\u3063\u3066\u521d\u671f\u5316\u6642\u306b\u6307\u5b9a\u3055\u308c\u307e\u3059\uff1a\n>>> linear_svc = svm.SVC(kernel='linear')\n>>> linear_svc.kernel\n'linear'\n>>> rbf_svc = svm.SVC(kernel='rbf')\n>>> rbf_svc.kernel\n'rbf'\n\n\n1.4.6.1. \u30ab\u30b9\u30bf\u30e0\u30ab\u30fc\u30cd\u30eb\n\u30ab\u30fc\u30cd\u30eb\u306bPython\u95a2\u6570\u3092\u4e0e\u3048\u308b\u304b\u3001\u307e\u305f\u306f\u30b0\u30e9\u30e0\u884c\u5217\u3092\u3042\u3089\u304b\u3058\u3081\u8a08\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u72ec\u81ea\u306e\u30ab\u30fc\u30cd\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30ab\u30b9\u30bf\u30e0\u30ab\u30fc\u30cd\u30eb\u3092\u6301\u3064\u5206\u985e\u5668\u306f\u3001\u4ee5\u4e0b\u306e\u70b9\u3092\u9664\u3044\u3066\u4ed6\u306e\u5206\u985e\u5668\u3068\u540c\u3058\u3088\u3046\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\n\u30d5\u30a3\u30fc\u30eb\u30c9 support_vectors_ \u306f\u7a7a\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u307f\u304csupport_ \u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\n\nfit\uff08\uff09\u30e1\u30bd\u30c3\u30c9\u306e\u6700\u521d\u306e\u5f15\u6570\u306e\u53c2\u7167\uff08\u304a\u3088\u3073\u30b3\u30d4\u30fc\u3067\u306f\u306a\u3044\uff09\u306f\u3001\u5f8c\u3067\u53c2\u7167\u3059\u308b\u305f\u3081\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002 \u305d\u306e\u914d\u5217\u304cfit\uff08\uff09\u3068predict\uff08\uff09\u306e\u4f7f\u7528\u306e\u9593\u3067\u5909\u66f4\u3055\u308c\u305f\u5834\u5408\u3001\u4e88\u671f\u3057\u306a\u3044\u7d50\u679c\u304c\u751f\u3058\u308b\u3067\u3057\u3087\u3046\u3002\n\n\n1.4.6.1.1. Python\u95a2\u6570\u3092\u30ab\u30fc\u30cd\u30eb\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\n\u307e\u305f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u306e\u30ad\u30fc\u30ef\u30fc\u30c9kernel \u306b\u95a2\u6570\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u72ec\u81ea\u306e\u5b9a\u7fa9\u6e08\u307f\u30ab\u30fc\u30cd\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u30ab\u30fc\u30cd\u30eb\u306f\u3001\u30b7\u30a7\u30a4\u30d7\u306e2\u3064\u306e\u884c\u5217 \uff08n_samples_1\u3001n_features\uff09 \u3001 \uff08n_samples_2\u3001n_features\uff09 \u3092\u5f15\u6570\u3068\u3057\u3066\u53d6\u308a\u3001\u30b7\u30a7\u30a4\u30d7 \uff08n_samples_1\u3001n_samples_2\uff09 \u306e\u30ab\u30fc\u30cd\u30eb\u884c\u5217\u3092\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30ea\u30cb\u30a2\u30ab\u30fc\u30cd\u30eb\u3092\u5b9a\u7fa9\u3057\u3001\u305d\u306e\u30ab\u30fc\u30cd\u30eb\u3092\u4f7f\u7528\u3059\u308b\u5206\u985e\u5668\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n>>> import numpy as np\n>>> from sklearn import svm\n>>> def my_kernel(X, Y):\n...     return np.dot(X, Y.T)\n...\n>>> clf = svm.SVC(kernel=my_kernel)\n\n\n\u4f8b\uff1a\n\n\n\u30ab\u30b9\u30bf\u30e0\u30ab\u30fc\u30cd\u30eb\u3092\u6301\u3064SVM\u3002\n\n\n\n\n1.4.6.1.2. \u30b0\u30e9\u30e0\u884c\u5217\u306e\u4f7f\u7528\nkernel = 'precomputed' \u3092\u8a2d\u5b9a\u3057\u3001fit\u30e1\u30bd\u30c3\u30c9\u3067X\u306e\u4ee3\u308f\u308a\u306b\u30b0\u30e9\u30e0\u884c\u5217\u3092\u6e21\u3057\u307e\u3059\u3002 \u73fe\u6642\u70b9\u3067\u306f\u3001\u3059\u3079\u3066\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d9\u30af\u30c8\u30eb\u3068\u30c6\u30b9\u30c8\u30d9\u30af\u30c8\u30eb\u3068\u306e\u9593\u306e\u30ab\u30fc\u30cd\u30eb\u5024\u304c\u63d0\u4f9b\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n>>> import numpy as np\n>>> from sklearn import svm\n>>> X = np.array([[0, 0], [1, 1]])\n>>> y = [0, 1]\n>>> clf = svm.SVC(kernel='precomputed')\n>>> # linear kernel computation\n>>> gram = np.dot(X, X.T)\n>>> clf.fit(gram, y) \nSVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,\n    decision_function_shape=None, degree=3, gamma='auto',\n    kernel='precomputed', max_iter=-1, probability=False,\n    random_state=None, shrinking=True, tol=0.001, verbose=False)\n>>> # predict on training examples\n>>> clf.predict(gram)\narray([0, 1])\n\n\n1.4.6.1.3. RBF\u30ab\u30fc\u30cd\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\nRadial Basis Function\uff08RBF\uff09 \u30ab\u30fc\u30cd\u30eb\u3067SVM\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u5834\u5408\u306f\u3001C \u3068gamma\u306e2\u3064\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3059\u3079\u3066\u306eSVM\u30ab\u30fc\u30cd\u30eb\u306b\u5171\u901a\u306e\u30d1\u30e9\u30e1\u30fc\u30bfC\u306f\u3001\u6c7a\u5b9a\u8868\u306e\u5358\u7d14\u3055\u306b\u5bfe\u3057\u3066\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u4f8b\u306e\u8aa4\u5206\u985e\u3092\u6392\u9664\u3057\u307e\u3059\u3002\u4f4e\u3044C\u306f\u6c7a\u5b9a\u8868\u3092\u6ed1\u3089\u304b\u306b\u3057\u3001\u9ad8\u3044C\u306f\u3059\u3079\u3066\u306e\u8a13\u7df4\u4f8b\u3092\u6b63\u3057\u304f\u5206\u985e\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002gamma\u306f\u30011\u3064\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u4f8b\u306b\u3069\u308c\u3060\u3051\u306e\u5f71\u97ff\u304c\u3042\u308b\u304b\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002gamma\u304c\u5927\u304d\u3051\u308c\u3070\u5927\u304d\u3044\u307b\u3069\u3001\u4ed6\u306e\u4f8b\u304c\u5f71\u97ff\u3092\u53d7\u3051\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\nC\u3068gamma\u306e\u9069\u5207\u306a\u9078\u629e\u306f\u3001SVM\u306e\u6027\u80fd\u306b\u3068\u3063\u3066\u91cd\u8981\u3067\u3059\u3002 1\u3064\u306f\u3001sklearn.model_selection.GridSearchCV \u3092C\u3068\u4f7f\u7528\u3057\u3001gamma\u3092\u6307\u6570\u95a2\u6570\u7684\u306b\u9060\u304f\u96e2\u308c\u3066\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\n\u4f8b\uff1a\n\n\nRBF SVM\u30d1\u30e9\u30e1\u30fc\u30bf\n\n\n\n\n1.4.7. \u6570\u5b66\u7684\u51e6\u65b9\n\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306f\u3001\u5206\u985e\u3001\u56de\u5e30\u307e\u305f\u306f\u4ed6\u306e\u30bf\u30b9\u30af\u306e\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\u3001\u9ad8\u6b21\u5143\u307e\u305f\u306f\u7121\u9650\u6b21\u5143\u306e\u7a7a\u9593\u306b\u304a\u3051\u308b\u8d85\u5e73\u9762\u307e\u305f\u306f\u8d85\u5e73\u9762\u306e\u7d44\u3092\u69cb\u7bc9\u3059\u308b\u3002\u76f4\u611f\u7684\u306b\u306f\u3001\u4e00\u822c\u306b\u3001\u30de\u30fc\u30b8\u30f3\u304c\u5927\u304d\u3051\u308c\u3070\u5927\u304d\u3044\u307b\u3069\u5206\u985e\u5668\u306e\u4e00\u822c\u5316\u8aa4\u5dee\u304c\u5c0f\u3055\u304f\u306a\u308b\u306e\u3067\u3001\u3069\u306e\u30af\u30e9\u30b9\u306e\u6700\u3082\u8fd1\u3044\u8a13\u7df4\u30c7\u30fc\u30bf\u70b9\uff08\u3044\u308f\u3086\u308b\u95a2\u6570\u30de\u30fc\u30b8\u30f3\uff09\u3068\u306e\u8ddd\u96e2\u304c\u6700\u3082\u5927\u304d\u3044\u8d85\u5e73\u9762\u306b\u3088\u3063\u3066\u826f\u597d\u306a\u5206\u96e2\u304c\u9054\u6210\u3055\u308c\u308b\u3002\n\n\n1.4.7.1. SVC\n2\u3064\u306e\u30af\u30e9\u30b9\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d9\u30af\u30c8\u30eb xi\u2208Rp x_i \\in \\mathbb{R}^p \u3001 i=1...ni = 1...n \u3068 y\u2208Rn y \\in \\mathbb{R}^n \u03b5\\varepsilon \u306e\u30d9\u30af\u30c8\u30eby\u3092\u4e0e\u3048\u3089\u308c\u305fSVC\u306f\u3001\u554f\u984c\uff1a\n\\min_ {w, b, \\zeta} \\frac{1}{2} w^T w + C \\sum_{i=1}^{n} \\zeta_i\nminw,b,\u03b612wTw+Cn\u2211i=1\u03b6i{\\min_ {w, b, \\zeta} \\frac{1}{2} w^T w + C \\sum_{i=1}^{n} \\zeta_i\n}\n\\begin{align}\n\\textrm {subject to } & y_i (w^T \\phi (x_i) + b) \\geq 1 - \\zeta_i,\\\\\n & \\zeta_i \\geq 0, i=1, ..., n\n\\end{align}\nsubject to\u00a0yi(wT\u03d5(xi)+b)\u22651\u2212\u03b6i,\u03b6i\u22650,i=1,...,n{\\begin{align}\n\\textrm {subject to } & y_i (w^T \\phi (x_i) + b) \\geq 1 - \\zeta_i,\\\\\n & \\zeta_i \\geq 0, i=1, ..., n\n\\end{align}\n}\n\u305d\u306e\u4e8c\u91cd\n\\min_{\\alpha} \\frac{1}{2} \\alpha^T Q \\alpha - e^T \\alpha\nmin\u03b112\u03b1TQ\u03b1\u2212eT\u03b1{\\min_{\\alpha} \\frac{1}{2} \\alpha^T Q \\alpha - e^T \\alpha\n}\n\\begin{align}\n\\textrm {subject to } & y^T \\alpha = 0\\\\\n& 0 \\leq \\alpha_i \\leq C, i=1, ..., n\n\\end{align}\nsubject to\u00a0yT\u03b1=00\u2264\u03b1i\u2264C,i=1,...,n{\\begin{align}\n\\textrm {subject to } & y^T \\alpha = 0\\\\\n& 0 \\leq \\alpha_i \\leq C, i=1, ..., n\n\\end{align}\n}\n\u3053\u3053\u3067\u3001 ee \u306f\u3059\u3079\u3066\u306e1\u306e\u30d9\u30af\u30c8\u30eb\u3001 C>0C> 0 \u306f\u4e0a\u9650\u3001 QQ \u306f n\u00d7n \u6b63\u306e\u534a\u6b63\u5b9a\u5024\u884c\u5217\u3001 Qij\u2261yiyjK(xi,xj)Q_{ij} \\equiv y_i y_j K(x_i, x_j) \u3002\u3053\u3053\u3067\u3001 K(xi,xj)=\u03d5(xi)T\u03d5(xj)K(x_i, x_j) = \\phi (x_i)^T \\phi (x_j) \u306f\u30ab\u30fc\u30cd\u30eb\u3067\u3059\u3002\u3053\u3053\u3067\u3001\u8a13\u7df4\u30d9\u30af\u30c8\u30eb\u306f\u95a2\u6570 \u03d5\\phi \u306b\u3088\u3063\u3066\u9ad8\u6b21\u5143\uff08\u591a\u5206\u7121\u9650\u6b21\u5143\uff09\u306e\u7a7a\u9593\u306b\u6697\u9ed9\u7684\u306b\u5199\u50cf\u3055\u308c\u307e\u3059\u3002\n\u6c7a\u5b9a\u95a2\u6570\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\\operatorname{sgn}(\\sum_{i=1}^n y_i \\alpha_i K(x_i, x) + \\rho)\nsgn(n\u2211i=1yi\u03b1iK(xi,x)+\u03c1){\\operatorname{sgn}(\\sum_{i=1}^n y_i \\alpha_i K(x_i, x) + \\rho)\n}\n\u6ce8\u610f: libsvm\u304a\u3088\u3073liblinear\u304b\u3089\u6d3e\u751f\u3057\u305fSVM\u30e2\u30c7\u30eb\u306fC\u3092\u6b63\u5247\u5316\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\u4ed6\u306e\u307b\u3068\u3093\u3069\u306e\u63a8\u5b9a\u5b50\u3067\u306f\u30a2\u30eb\u30d5\u30a1\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u4e21\u65b9\u306e\u95a2\u4fc2\u306f C=nsamplesalpha.C = \\frac{n_samples}{alpha}. \u3067\u3059\u3002\n\u3053\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u306f\u3001\u88fd\u54c1 yi\u03b1iy_i \\alpha_i \u3092\u4fdd\u6301\u3059\u308b\u30e1\u30f3\u30d0\u30fc dual_coef_ \u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u3092\u4fdd\u6301\u3059\u308b support_vectors_ \u3001\u304a\u3088\u3073\u72ec\u7acb\u9805 \u03c1\\rho \u3092\u4fdd\u6301\u3059\u308b intercept_ \u3092\u4ecb\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n\n\u53c2\u8003\u6587\u732e\uff1a\n\n\n\"\u975e\u5e38\u306b\u5927\u304d\u306aVC\u6b21\u5143\u5206\u985e\u5668\u306e\u81ea\u52d5\u5bb9\u91cf\u8abf\u6574\"\u3001I. Guyon\u3001B. Boser\u3001V. Vapnik - \u795e\u7d4c\u60c5\u5831\u51e6\u7406\u306e\u9032\u6b691993\u3002\n\"Support-vector networks\"\u3001C. Cortes\u3001V. Vapnik - Machine Learning\u300120,273-297\uff081995\uff09\u3002\n\n\n\n\n1.4.7.2. NuSVC\n\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u6570\u3068\u8a13\u7df4\u30a8\u30e9\u30fc\u3092\u5236\u5fa1\u3059\u308b\u65b0\u3057\u3044\u30d1\u30e9\u30e1\u30fc\u30bf \u03bd\\nu \u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf \u03bd\u2208\uff080\u30011]\\nu \\in\uff080\u3001 \n1] \u306f\u3001\u8a13\u7df4\u8aa4\u5dee\u306e\u5272\u5408\u306e\u4e0a\u9650\u304a\u3088\u3073\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u5272\u5408\u306e\u4e0b\u9650\u3067\u3042\u308b\u3002\n\u03bd\\nu-SVC\u306e\u5b9a\u5f0f\u5316\u306fC-SVC\u306e\u518d\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3067\u3042\u308a\u3001\u3057\u305f\u304c\u3063\u3066\u6570\u5b66\u7684\u306b\u540c\u7b49\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n1.4.7.3. SVR\n\u4e0e\u3048\u3089\u308c\u305f\u8a13\u7df4\u30d9\u30af\u30c8\u30eb xiRpx_i \\mathbb {R} ^ p \u3001i = 1\u3001...\u3001n \u3068\u3001\u30d9\u30af\u30c8\u30eb Rn\u03b5\\mathbb {R} ^ n \\varepsilon-SVR\u3000\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u554f\u984c\u3092\u89e3\u6c7a\u3057\u307e\u3059\u3002\n    \\min_ {w, b, \\zeta, \\zeta^*} \\frac{1}{2} w^T w + C \\sum_{i=1}^{n} (\\zeta_i + \\zeta_i^*)\nminw,b,\u03b6,\u03b6\u221712wTw+Cn\u2211i=1(\u03b6i+\u03b6\u2217i){    \\min_ {w, b, \\zeta, \\zeta^*} \\frac{1}{2} w^T w + C \\sum_{i=1}^{n} (\\zeta_i + \\zeta_i^*)\n}\n\\begin{align}\n    \\textrm {subject to } & y_i - w^T \\phi (x_i) - b \\leq \\varepsilon + \\zeta_i,\\\\\n                          & w^T \\phi (x_i) + b - y_i \\leq \\varepsilon + \\zeta_i^*,\\\\\n                          & \\zeta_i, \\zeta_i^* \\geq 0, i=1, ..., n\n\n\\end{align}\nsubject to\u00a0yi\u2212wT\u03d5(xi)\u2212b\u2264\u03b5+\u03b6i,wT\u03d5(xi)+b\u2212yi\u2264\u03b5+\u03b6\u2217i,\u03b6i,\u03b6\u2217i\u22650,i=1,...,n{\\begin{align}\n    \\textrm {subject to } & y_i - w^T \\phi (x_i) - b \\leq \\varepsilon + \\zeta_i,\\\\\n                          & w^T \\phi (x_i) + b - y_i \\leq \\varepsilon + \\zeta_i^*,\\\\\n                          & \\zeta_i, \\zeta_i^* \\geq 0, i=1, ..., n\n\n\\end{align}\n}\n\u305d\u306e\u4e8c\u91cd\n   \\min_{\\alpha, \\alpha^*} \\frac{1}{2} (\\alpha - \\alpha^*)^T Q (\\alpha - \\alpha^*) + \\varepsilon e^T (\\alpha + \\alpha^*) - y^T (\\alpha - \\alpha^*)\nmin\u03b1,\u03b1\u221712(\u03b1\u2212\u03b1\u2217)TQ(\u03b1\u2212\u03b1\u2217)+\u03b5eT(\u03b1+\u03b1\u2217)\u2212yT(\u03b1\u2212\u03b1\u2217){   \\min_{\\alpha, \\alpha^*} \\frac{1}{2} (\\alpha - \\alpha^*)^T Q (\\alpha - \\alpha^*) + \\varepsilon e^T (\\alpha + \\alpha^*) - y^T (\\alpha - \\alpha^*)\n}\n\\begin{align}\n   \\textrm {subject to } & e^T (\\alpha - \\alpha^*) = 0\\\\\n   & 0 \\leq \\alpha_i, \\alpha_i^* \\leq C, i=1, ..., n\n\\end{align}\nsubject to\u00a0eT(\u03b1\u2212\u03b1\u2217)=00\u2264\u03b1i,\u03b1\u2217i\u2264C,i=1,...,n{\\begin{align}\n   \\textrm {subject to } & e^T (\\alpha - \\alpha^*) = 0\\\\\n   & 0 \\leq \\alpha_i, \\alpha_i^* \\leq C, i=1, ..., n\n\\end{align}\n}\n\u3053\u3053\u3067\u3001 ee \u306f\u3059\u3079\u3066\u306e1\u306e\u30d9\u30af\u30c8\u30eb\u3001 C>0C> 0 \u306f\u4e0a\u9650\u3001QQ\u306f nn by nn \u6b63\u306e\u534a\u6b63\u5b9a\u5024\u884c\u5217\u3001 Qij\u2261K(xi,xj)=\u03d5(xi)T\u03d5(xj)Q_{ij} \\equiv K(x_i, x_j) = \\phi (x_i)^T \\phi (x_j) \u306f\u30ab\u30fc\u30cd\u30eb\u3067\u3059\u3002\u3053\u3053\u3067\u3001\u8a13\u7df4\u30d9\u30af\u30c8\u30eb\u306f\u95a2\u6570 \u03d5\\phi \u306b\u3088\u3063\u3066\u9ad8\u6b21\u5143\uff08\u591a\u5206\u7121\u9650\u6b21\u5143\uff09\u306e\u7a7a\u9593\u306b\u6697\u9ed9\u7684\u306b\u5199\u50cf\u3055\u308c\u307e\u3059\u3002\n\u6c7a\u5b9a\u95a2\u6570\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n \\sum_{i=1}^n (\\alpha_i - \\alpha_i^*) K(x_i, x) + \\rho\nn\u2211i=1(\u03b1i\u2212\u03b1\u2217i)K(xi,x)+\u03c1{ \\sum_{i=1}^n (\\alpha_i - \\alpha_i^*) K(x_i, x) + \\rho\n}\n\u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u306f\u3001\u5dee\u5206 \u03b1i\u2212\u03b1\u2217i\\alpha_i - \\alpha_i ^ * \u3092\u4fdd\u6301\u3059\u308b\u30e1\u30f3\u30d0\u30fcdual_coef_\u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u3092\u4fdd\u6301\u3059\u308b support_vectors_\u3001\u304a\u3088\u3073\u72ec\u7acb\u9805 \\\u03c1\\\u03c1 \u3092\u4fdd\u6301\u3059\u308b intercept_ \u3092\u901a\u3058\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002\n\n\u53c2\u8003\u6587\u732e\uff1a\n\n\n\"\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u56de\u5e30\u306b\u95a2\u3059\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\"\u3001Alex J. Smola\u3001BernhardSch\u00f6lkopf - \u7d71\u8a08\u3068\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30a2\u30fc\u30ab\u30a4\u30d6\u7b2c14\u5dfb\u7b2c3\u53f7\u30012004\u5e748\u6708\u3001p\u3002 199-222\u3002\n\n\n\n\n1.4.8. \u5b9f\u88c5\u306e\u8a73\u7d30\n\n\u5185\u90e8\u7684\u306b\u306f\u3001\u3059\u3079\u3066\u306e\u8a08\u7b97\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b libsvm \u3068 liblinear \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001C\u304a\u3088\u3073Cython\u3092\u4f7f\u7528\u3057\u3066\u30e9\u30c3\u30d7\u3055\u308c\u307e\u3059\u3002\n\n\u53c2\u8003\u6587\u732e\uff1a\n\u4f7f\u7528\u3055\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b9f\u88c5\u3068\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u6b21\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\nLIBSVM\uff1a\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306e\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\nLIBLINEAR - \u5927\u898f\u6a21\u306a\u7dda\u5f62\u5206\u985e\u306e\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\n\n\n\n\u00a92010 - 2016\u3001scikit-learn developers\uff08BSD\u30e9\u30a4\u30bb\u30f3\u30b9\uff09\u3002\nhttp://scikit-learn.org/0.18/modules/svm.html \u3092 google \u7ffb\u8a33\u3057\u305f\n[\u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u76ee\u6b21](http://qiita.com/nazoking@github/items/267f2371757516f8c168)\n\n\n----\n\n\n**\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\uff08SVM\uff09**\u306f\u3001\u300c[\u5206\u985e](#141-%E5%88%86%E9%A1%9E)\u300d\u3001\u300c[\u56de\u5e30](#142%E5%9B%9E%E5%B8%B0)\u300d\u304a\u3088\u3073\u300c[\u7570\u5e38\u5024\u691c\u51fa](#143-%E5%AF%86%E5%BA%A6%E6%8E%A8%E5%AE%9A%E6%96%B0%E8%A6%8F%E6%80%A7%E6%A4%9C%E5%87%BA)\u300d\u306b\u4f7f\u7528\u3055\u308c\u308b\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u65b9\u6cd5\u306e\u30bb\u30c3\u30c8\u3067\u3059\u3002\n\n\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306e\u5229\u70b9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n  * \u9ad8\u6b21\u5143\u7a7a\u9593\u3067\u52b9\u679c\u7684\u3067\u3059\u3002\n  * \u6b21\u5143\u306e\u6570\u304c\u6a19\u672c\u306e\u6570\u3088\u308a\u3082\u591a\u3044\u5834\u5408\u3067\u3082\u52b9\u679c\u7684\u3067\u3059\u3002\n  * \u610f\u601d\u6c7a\u5b9a\u95a2\u6570\uff08\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u3068\u547c\u3070\u308c\u308b\uff09\u3067\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30dd\u30a4\u30f3\u30c8\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001\u30e1\u30e2\u30ea\u52b9\u7387\u3082\u9ad8\u304f\u306a\u308a\u307e\u3059\u3002\n  * \u6c4e\u7528\uff1a\u6c7a\u5b9a\u95a2\u6570\u306b\u306f\u7570\u306a\u308b[\u30ab\u30fc\u30cd\u30eb\u95a2\u6570](#146-%E3%82%AB%E3%83%BC%E3%83%8D%E3%83%AB%E9%96%A2%E6%95%B0)\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 \u5171\u901a\u306e\u30ab\u30fc\u30cd\u30eb\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30ab\u30b9\u30bf\u30e0\u30ab\u30fc\u30cd\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306e\u6b20\u70b9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n  * \u30d5\u30a3\u30fc\u30c1\u30e3\u306e\u6570\u304c\u30b5\u30f3\u30d7\u30eb\u306e\u6570\u3088\u308a\u3082\u306f\u308b\u304b\u306b\u591a\u3044\u5834\u5408\u3001\u3053\u306e\u65b9\u6cd5\u306f\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u4f4e\u4e0b\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n  * SVM\u306f\u78ba\u7387\u63a8\u5b9a\u5024\u3092\u76f4\u63a5\u63d0\u4f9b\u3059\u308b\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u9ad8\u4fa1\u306a5\u500d\u4ea4\u5dee\u691c\u5b9a\u3092\u4f7f\u7528\u3057\u3066\u8a08\u7b97\u3055\u308c\u307e\u3059\uff08\u4e0b\u8a18\u306e\u53c2\u7167\uff1a [\u30b9\u30b3\u30a2\u3068\u78ba\u7387](#1412%E3%82%B9%E3%82%B3%E3%82%A2%E3%81%A8%E7%A2%BA%E7%8E%87)\uff09\u3002\n\nscikit-learn\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306f\u3001\u9ad8\u5bc6\u5ea6\uff08 `numpy.ndarray`\u3068` numpy.asarray`\u306e\u305d\u308c\u306b\u5909\u63db\u53ef\u80fd\uff09\u3068\u30b9\u30d1\u30fc\u30b9\uff08\u4efb\u610f\u306e `scipy.sparse`\uff09\u306e\u30b5\u30f3\u30d7\u30eb\u30d9\u30af\u30c8\u30eb\u3092\u5165\u529b\u3068\u3057\u3066\u30b5\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002 \u3057\u304b\u3057\u3001\u758e\u306a\u30c7\u30fc\u30bf\u306e\u4e88\u6e2c\u3092\u884c\u3046\u305f\u3081\u306bSVM\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001\u305d\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306b\u9069\u5408\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002 \u6700\u9069\u306a\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5f97\u308b\u306b\u306f\u3001 `dtype = float64`\u3092\u4f7f\u7528\u3057\u3066C\u9806\u5e8f\u4ed8\u3051\u3055\u308c\u305f` numpy.ndarray`\uff08\u5bc6\uff09\u307e\u305f\u306f `scipy.sparse.csr_matrix`\uff08\u758e\uff09\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## 1.4.1. \u5206\u985e\n\n[SVC](http://scikit-learn.org/stable/modules/generated/sklearn.svm.SVC.html#sklearn.svm.SVC)\u3001[NuSVC](http://scikit-learn.org/stable/modules/generated/sklearn.svm.NuSVC.html#sklearn.svm.NuSVC)\u3001\u304a\u3088\u3073 [LinearSVC](http://scikit-learn.org/stable/modules/generated/sklearn.svm.LinearSVC.html#sklearn.svm.LinearSVC) \u306f\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u591a\u30af\u30e9\u30b9\u5206\u985e\u3092\u5b9f\u884c\u3067\u304d\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n![](http://scikit-learn.org/stable/_images/sphx_glr_plot_iris_0012.png)\n\nSVC\u3068NuSVC\u306f\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u3059\u304c\u3001\u308f\u305a\u304b\u306b\u7570\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u53d7\u3051\u5165\u308c\u3001\u7570\u306a\u308b\u6570\u5b66\u7684\u5b9a\u5f0f\u5316\u3092\u3057\u307e\u3059\uff08see section[\u6570\u5b66\u7684\u5b9a\u5f0f\u5316](#147%E6%95%B0%E5%AD%A6%E7%9A%84%E5%87%A6%E6%96%B9)\uff09\u3002 \u4e00\u65b9\u3001[LinearSVC](http://scikit-learn.org/stable/modules/generated/sklearn.svm.LinearSVC.html#sklearn.svm.LinearSVC) \u306f\u3001\u7dda\u5f62\u30ab\u30fc\u30cd\u30eb\u306e\u5834\u5408\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u5206\u985e\u5668\u306e\u5225\u306e\u5b9f\u88c5\u3067\u3059\u3002 LinearSVC\u306f\u30ad\u30fc\u30ef\u30fc\u30c9 `kernel` \u3092\u53d7\u3051\u5165\u308c\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u7dda\u5f62\u3067\u3042\u308b\u3068\u307f\u306a\u3055\u308c\u307e\u3059\u3002 \u307e\u305f\u3001SVC\u3084NuSVC\u306e\u30e1\u30f3\u30d0\u30fc\u306e\u4e00\u90e8\u306b\u306f `support_` \u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u305b\u3093\u3002\nSVC\u3001NuSVC\u3001\u304a\u3088\u3073LinearSVC\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30b5\u30f3\u30d7\u30eb\u3092\u4fdd\u6301\u3059\u308b\u30b5\u30a4\u30ba `[n_samples\u3001n_features]` \u306e\u914d\u5217X\u3001\u30af\u30e9\u30b9\u30e9\u30d9\u30eb\uff08\u6587\u5b57\u5217\u307e\u305f\u306f\u6574\u6570\uff09\u306e\u914d\u5217y\u3001\u30b5\u30a4\u30ba `[n_samples]` \u306e2\u3064\u306e\u914d\u5217\u3092\u5165\u529b\u3068\u3057\u3066\u53d6\u308a\u307e\u3059\u3002\n\n```py\n>>> from sklearn import svm\n>>> X = [[0, 0], [1, 1]]\n>>> y = [0, 1]\n>>> clf = svm.SVC()\n>>> clf.fit(X, y)  \nSVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,\n    decision_function_shape=None, degree=3, gamma='auto', kernel='rbf',\n    max_iter=-1, probability=False, random_state=None, shrinking=True,\n    tol=0.001, verbose=False)\n```\n\n\u9069\u5408\u5f8c\u3001\u30e2\u30c7\u30eb\u3092\u4f7f\u7528\u3057\u3066\u65b0\u3057\u3044\u5024\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```py\n>>> clf.predict([[2., 2.]])\narray([1])\n```\n\nSVM\u306e\u6c7a\u5b9a\u95a2\u6570\u306f\u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u3068\u547c\u3070\u308c\u308b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u3044\u304f\u3064\u304b\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002 \u3053\u308c\u3089\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u3044\u304f\u3064\u304b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001\u30e1\u30f3\u30d0 `support_vectors_`\u3001 `support_` \u304a\u3088\u3073`n_support` \u306b\u3042\u308a\u307e\u3059\u3002\n\n```py\n>>> # get support vectors\n>>> clf.support_vectors_\narray([[ 0.,  0.],\n       [ 1.,  1.]])\n>>> # get indices of support vectors\n>>> clf.support_ \narray([0, 1]...)\n>>> # get number of support vectors for each class\n>>> clf.n_support_ \narray([1, 1]...)\n```\n\n### 1.4.1.1. \u591a\u30af\u30e9\u30b9\u5206\u985e\n\nSVC\u3068NuSVC\u306f\u3001\u591a\u30af\u30e9\u30b9\u5206\u985e\u306e\u305f\u3081\u306b\"one-against-one\"\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\uff08Knerr\u3089\u30011990\uff09\u3002 `n_class` \u304c\u30af\u30e9\u30b9\u6570\u3067\u3042\u308b\u5834\u5408\u3001`n_class *\uff08n_class - 1\uff09/ 2` \u306e\u5206\u985e\u5668\u304c\u69cb\u7bc9\u3055\u308c\u3001\u305d\u308c\u305e\u308c\u304c2\u3064\u306e\u30af\u30e9\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u8a13\u7df4\u3057\u307e\u3059\u3002 \u4ed6\u306e\u5206\u985e\u5668\u3068\u306e\u4e00\u8cab\u6027\u306e\u3042\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u3001 `decision_function_shape` \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001 \"one-against-one\"\u5206\u985e\u5668\u306e\u7d50\u679c\u3092shape `\uff08n_samples\u3001n_classes\uff09` \u306e\u6c7a\u5b9a\u95a2\u6570\u306b\u96c6\u7d04\u3059\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\u3002\n\n```py\n>>> X = [[0], [1], [2], [3]]\n>>> Y = [0, 1, 2, 3]\n>>> clf = svm.SVC(decision_function_shape='ovo')\n>>> clf.fit(X, Y) \nSVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,\n    decision_function_shape='ovo', degree=3, gamma='auto', kernel='rbf',\n    max_iter=-1, probability=False, random_state=None, shrinking=True,\n    tol=0.001, verbose=False)\n>>> dec = clf.decision_function([[1]])\n>>> dec.shape[1] # 4 classes: 4*3/2 = 6\n6\n>>> clf.decision_function_shape = \"ovr\"\n>>> dec = clf.decision_function([[1]])\n>>> dec.shape[1] # 4 classes\n4\n```\n\n\u4e00\u65b9\u3001LinearSVC\u306f \"one-vs-rest\" \u30de\u30eb\u30c1\u30af\u30e9\u30b9\u6226\u7565\u3092\u5b9f\u88c5\u3057\u3001n_class\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3057\u307e\u3059\u3002 \u30af\u30e9\u30b9\u304c2\u3064\u3057\u304b\u306a\u3044\u5834\u5408\u306f\u30011\u3064\u306e\u30e2\u30c7\u30eb\u306e\u307f\u304c\u8a13\u7df4\u3055\u308c\u307e\u3059\u3002\n\n```py\n>>>\n>>> lin_clf = svm.LinearSVC()\n>>> lin_clf.fit(X, Y) \nLinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,\n     intercept_scaling=1, loss='squared_hinge', max_iter=1000,\n     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,\n     verbose=0)\n>>> dec = lin_clf.decision_function([[1]])\n>>> dec.shape[1]\n4\n```\n\n\u6c7a\u5b9a\u95a2\u6570\u306e\u5b8c\u5168\u306a\u8aac\u660e\u306b\u3064\u3044\u3066\u306f\u3001[\u6570\u5f0f](#svm-mathematical-formulation) \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nLinearSVC\u306f `multi_class='crammer_singer'` \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u7528\u3057\u3066Crammer\u3068Singer\u306b\u3088\u3063\u3066\u7b56\u5b9a\u3055\u308c\u305f\u3001\u3044\u308f\u3086\u308b\u30de\u30eb\u30c1\u30af\u30e9\u30b9SVM\u3067\u3042\u308b\u4ee3\u66ff\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u6226\u7565\u3082\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u65b9\u6cd5\u306f\u4e00\u8cab\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\"one-vs-rest\" \u5206\u985e\u306b\u306f\u5f53\u3066\u306f\u307e\u308a\u307e\u305b\u3093\u3002\u5b9f\u969b\u306b\u306f\u3001\u7d50\u679c\u306f\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059\u304c\u3001\u5b9f\u884c\u6642\u9593\u306f\u5927\u5e45\u306b\u5c11\u306a\u304f\u306a\u308b\u305f\u3081\u3001\u901a\u5e38\u306f\"one-vs-rest\"\u5206\u985e\u304c\u597d\u307e\u308c\u307e\u3059\u3002\n\"one-vs-rest\" LinearSVC\u306e\u5834\u5408\u3001`coef_` \u3068 `intercept_` \u306e\u5c5e\u6027\u306f\u305d\u308c\u305e\u308c `[n_class, n_features]` \u3068 `[n_class]` \u3068\u3044\u3046\u5f62\u306b\u306a\u308a\u307e\u3059\u3002\u4fc2\u6570\u306e\u5404\u884c\u306f\u3001`n_class` \u591a\u304f\u306e \"one-vs-rest\" \u5206\u985e\u5668\u306e\u3046\u3061\u306e1\u3064\u306b\u5bfe\u5fdc\u3057\u3001\"one\" \u30af\u30e9\u30b9\u306e\u9806\u306b\u3001\u30a4\u30f3\u30bf\u30fc\u30bb\u30d7\u30c8\u306b\u5bfe\u3057\u3066\u985e\u4f3c\u3057\u3066\u3044\u308b\u3002\n\"one-vs-one\" SVC\u306e\u5834\u5408\u3001\u5c5e\u6027\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u306f\u3082\u3046\u5c11\u3057\u8907\u96d1\u3067\u3059\u3002\u7dda\u5f62\u30ab\u30fc\u30cd\u30eb\u306e\u5834\u5408\u3001 `coef_` \u3068`intercept_` \u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u306f\u3001 `coef_` \u306e\u5f62\u72b6\u304c `[n_class * (n_class - 1) / 2, n_features]` \u3067\u3042\u308b\u3053\u3068\u3092\u9664\u3044\u3066\u3001\u4e0a\u8a18LinearSVC\u3067\u8aac\u660e\u3057\u305f\u3082\u306e\u3068\u540c\u69d8\u3067\u3059\u3002\u591a\u304f\u306e\u30d0\u30a4\u30ca\u30ea\u5206\u985e\u5b50\u3002\u30af\u30e9\u30b90\u304b\u3089\u30af\u30e9\u30b9n\u307e\u3067\u306e\u9806\u5e8f\u306f\u3001\u300c0\u5bfe1\u300d\u3001\u300c0\u5bfe2\u300d\u3001...\u300c0\u5bfen\u300d\u3001\u300c1\u5bfe2\u300d\u3001\u300c1\u5bfe3\u300d\u3001\u300c1\u5bfen\u300d\u3002 \u3002 \u3002 \"n-1\u5bfen\"\u3002\n`dual_coef_` \u306e\u5f62\u72b6\u306f `[n_class-1\u3001n_SV]` \u3067\u3042\u308a\u3001\u3084\u3084\u96e3\u3057\u3044\u30ec\u30a4\u30a2\u30a6\u30c8\u3067\u3059\u3002\u5217\u306f\u3001 `n_class *\uff08n_class - 1\uff09/ 2` \"one-vs-one\"\u5206\u985e\u5b50\u306e\u3044\u305a\u308c\u304b\u306b\u542b\u307e\u308c\u308b\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002\u5404\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u306f\u3001 `n_class - 1` \u5206\u985e\u5b50\u3067\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u5404\u884c\u306e `n_class - 1` \u30a8\u30f3\u30c8\u30ea\u306f\u3001\u3053\u308c\u3089\u306e\u5206\u985e\u5b50\u306e\u4e8c\u91cd\u4fc2\u6570\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002\n\u3053\u308c\u306f\u4f8b\u3067\u3088\u308a\u660e\u78ba\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff1a\n3\u3064\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb $v^{0}\\_0\u3001v^{1}\\_0\u3001v^{2}\\_0$ \u3092\u6709\u3059\u308b\u30af\u30e9\u30b90\u3001\u304a\u3088\u3073\u3001\u305d\u308c\u305e\u308c2\u3064\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb $v ^{0}\\_1, v^{1}\\_1$ \u3001$v^{0}\\_2, v^{1}\\_2$ \u3092\u6301\u3064\u30af\u30e9\u30b91\u3068\u30af\u30e9\u30b92\u30013\u3064\u306e\u30af\u30e9\u30b9\u554f\u984c\u3092\u8003\u3048\u308b\u3002\u5404\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb $v^{j}\\_i$ \u306b\u306f\u30012\u3064\u306e\u4e8c\u91cd\u4fc2\u6570\u304c\u3042\u308b\u3002\u30af\u30e9\u30b9 $i$ \u3068 $k$ $\\alpha^{j}\\_{i,k}$ \u3068\u306e\u9593\u306e\u5206\u985e\u5668\u306b\u304a\u3051\u308b\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u4fc2\u6570 $v^{j}\\_i$ \u3092\u30b3\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\u3002\u3059\u308b\u3068 `dual_coef_` \u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n<table>\n<tr><td> $\\alpha^{0}_{0,1}$ </td>\n<td> $\\alpha^{0}_{0,2}$ </td>\n<td rowspan=\"3\">\u30af\u30e9\u30b90\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u4fc2\u6570</td></tr>\n<tr><td> $\\alpha^{1}_{0,1}$ </td>\n<td> $\\alpha^{1}_{0,2}$ </td></tr>\n<tr><td> $\\alpha^{2}_{0,1} $ </td>\n<td> $\\alpha^{2}_{0,2}$ </td>\n</tr>\n<tr><td> $\\alpha^{0}_{1,0}$ </td>\n<td> $\\alpha^{0}_{1,2}$ </td>\n<td rowspan=\"2\">\u30af\u30e9\u30b91\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u4fc2\u6570</td>\n</tr>\n<tr><td> $\\alpha^{1}_{1,0}$ </td>\n<td> $\\alpha^{1}_{1,2}$ </td></tr>\n<tr><td> $\\alpha^{0}_{2,0}$ </td>\n<td> $\\alpha^{0}_{2,1}$ </td>\n<td rowspan=\"2\">\u30af\u30e9\u30b92\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u4fc2\u6570</td></tr>\n<tr class=\"row-odd\"><td> $\\alpha^{1}_{2,0}$ </td>\n<td> $\\alpha^{1}_{2,1}$ </td></tr>\n</table>\n\n### 1.4.1.2. \u30b9\u30b3\u30a2\u3068\u78ba\u7387\n\nSVC\u30e1\u30bd\u30c3\u30c9 `decision_function` \u306f\u3001\u5404\u30b5\u30f3\u30d7\u30eb\uff08\u307e\u305f\u306f\u30d0\u30a4\u30ca\u30ea\u306e\u30b1\u30fc\u30b9\u3067\u306f1\u3064\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u3064\u304d1\u3064\u306e\u30b9\u30b3\u30a2\uff09\u3054\u3068\u306b\u30af\u30e9\u30b9\u3054\u3068\u306e\u30b9\u30b3\u30a2\u3092\u4e0e\u3048\u307e\u3059\u3002\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30aa\u30d7\u30b7\u30e7\u30f3\u306e`probability`\u304c`True`\u306b\u8a2d\u5b9a\u3055\u308c\u308b\u3068\u3001\uff08`predict_proba`\u3068`predict_log_proba`\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u306e\uff09\u30af\u30e9\u30b9\u30e1\u30f3\u30d0\u30fc\u30b7\u30c3\u30d7\u78ba\u7387\u306e\u898b\u7a4d\u3082\u308a\u304c\u6709\u52b9\u306b\u306a\u308a\u307e\u3059\u3002\u30d0\u30a4\u30ca\u30ea\u306e\u5834\u5408\u3001\u78ba\u7387\u306fPlatt\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u4f7f\u7528\u3057\u3066\u8f03\u6b63\u3055\u308c\u307e\u3059\uff1aSVM\u306e\u30b9\u30b3\u30a2\u306b\u5bfe\u3059\u308b\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u8ffd\u52a0\u306e\u76f8\u4e92\u691c\u8a3c\u306b\u3088\u308b\u9069\u5408\u3002\u30de\u30eb\u30c1\u30af\u30e9\u30b9\u306e\u5834\u5408\u3001\u3053\u308c\u306f Wu\u3089\uff082004\uff09 \u306e\u3088\u3046\u306b\u62e1\u5f35\u3055\u308c\u3066\u3044\u308b\u3002\n\u8a00\u3046\u307e\u3067\u3082\u306a\u304f\u3001Platt\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u306b\u542b\u307e\u308c\u308b\u76f8\u4e92\u691c\u8a3c\u306f\u3001\u5927\u898f\u6a21\u306a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u306f\u9ad8\u4fa1\u306a\u64cd\u4f5c\u3067\u3059\u3002\u3055\u3089\u306b\u3001\u78ba\u7387\u63a8\u5b9a\u5024\u306f\u3001\u30b9\u30b3\u30a2\u306e\u300cargmax\u300d\u304c\u78ba\u7387\u306eargmax\u3067\u306a\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u3001\u30b9\u30b3\u30a2\u3068\u77db\u76fe\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002 \uff08\u4f8b\u3048\u3070\u3001\u30d0\u30a4\u30ca\u30ea\u5206\u985e\u3067\u306f\u3001`predict_proba`\u306b\u5f93\u3063\u3066\u78ba\u7387\u304c<\u00bd\u3067\u3042\u308b\u30af\u30e9\u30b9\u306b\u5c5e\u3059\u308b\u3068`predict`\u306b\u3088\u3063\u3066\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u30e9\u30d9\u30eb\u4ed8\u3051\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff09\u3002Platt\u306e\u65b9\u6cd5\u306f\u3001\u7406\u8ad6\u7684\u306a\u554f\u984c\u3082\u6709\u3059\u308b\u3053\u3068\u304c\u77e5\u3089\u308c\u3066\u3044\u308b\u3002\u4fe1\u983c\u30b9\u30b3\u30a2\u304c\u5fc5\u8981\u3060\u304c\u3001\u3053\u308c\u3089\u304c\u78ba\u7387\u3067\u3042\u308b\u5fc5\u8981\u304c\u306a\u3044\u5834\u5408\u306f\u3001`probability = False`\u3092\u8a2d\u5b9a\u3057\u3001`predict_proba`\u306e\u4ee3\u308f\u308a\u306b`decision_function` \u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\n  - \u53c2\u8003\u6587\u732e\uff1a\n    Wu\u3001Lin and Weng\u3001 \"[\u30da\u30a2\u30ef\u30a4\u30ba\u7d50\u5408\u306b\u3088\u308b\u591a\u30af\u30e9\u30b9\u5206\u985e\u306e\u78ba\u7387\u63a8\u5b9a](http://www.csie.ntu.edu.tw/~cjlin/papers/svmprob/svmprob.pdf)\"\u3001JMLR 5\uff1a975-1005\u30012004\u3002\n\n### 1.4.1.3\u3002\u4e0d\u5747\u8861\u554f\u984c\n\n\u7279\u5b9a\u306e\u30af\u30e9\u30b9\u307e\u305f\u306f\u7279\u5b9a\u306e\u500b\u3005\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u3088\u308a\u91cd\u8981\u8996\u3059\u308b\u3053\u3068\u304c\u671b\u307e\u308c\u308b\u554f\u984c\u3067\u306f\u3001\u30ad\u30fc\u30ef\u30fc\u30c9 `class_weight` \u304a\u3088\u3073 `sample_weight` \u3092\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\nSVC\uff08NuSVC\u3067\u306f\u306a\u304f\uff09\u306f `fit` \u30e1\u30bd\u30c3\u30c9\u3067\u30ad\u30fc\u30ef\u30fc\u30c9 `class_weight` \u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u3053\u308c\u306f `{class_label\uff1avalue}` \u3068\u3044\u3046\u5f62\u5f0f\u306e\u8f9e\u66f8\u3067\u3001value\u306f `class_label` \u306e\u30d1\u30e9\u30e1\u30fc\u30bf `C` \u3092 `C * value` \u306b\u8a2d\u5b9a\u3059\u308b\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570> 0\u3067\u3059\u3002\n\n![](http://scikit-learn.org/stable/_images/sphx_glr_plot_separating_hyperplane_unbalanced_0011.png)\n\nSVC\u3001NuSVC\u3001SVR\u3001NuSVR\u3001\u304a\u3088\u3073OneClassSVM\u306f\u3001\u30ad\u30fc\u30ef\u30fc\u30c9 `sample_weight` \u3092\u4f7f\u7528\u3057\u305f\u30e1\u30bd\u30c3\u30c9 `fit` \u306e\u500b\u3005\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u3064\u3044\u3066\u3082\u30a6\u30a7\u30a4\u30c8\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002 `class_weight` \u3068\u540c\u69d8\u306b\u3001\u3053\u308c\u3089\u306f\u3001i\u756a\u76ee\u306e\u4f8b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf `C` \u3092 `C * sample_weight[i]` \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n![](http://scikit-learn.org/stable/_images/sphx_glr_plot_weighted_samples_0011.png)\n\n  - \u4f8b\uff1a\n    - [iris\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u5185\u306e\u7570\u306a\u308bSVM\u5206\u985e\u5668\u3092\u30d7\u30ed\u30c3\u30c8](http://scikit-learn.org/stable/auto_examples/svm/plot_iris.html#sphx-glr-auto-examples-svm-plot-iris-py)\n    - [SVM\uff1a\u8d85\u5e73\u9762\u3092\u5206\u96e2\u3059\u308b\u6700\u5927\u30de\u30fc\u30b8\u30f3](http://scikit-learn.org/stable/auto_examples/svm/plot_separating_hyperplane.html#sphx-glr-auto-examples-svm-plot-separating-hyperplane-py)\n    - [SVM\uff1a\u30a2\u30f3\u30d0\u30e9\u30f3\u30b9\u306a\u30af\u30e9\u30b9\u306e\u305f\u3081\u306e\u8d85\u5e73\u9762\u306e\u5206\u96e2](http://scikit-learn.org/stable/auto_examples/svm/plot_separating_hyperplane_unbalanced.html#sphx-glr-auto-examples-svm-plot-separating-hyperplane-unbalanced-py)\n    - [SVM-Anova\uff1a\u4e00\u5909\u91cf\u306e\u7279\u5fb4\u9078\u629e\u3092\u4f34\u3046SVM](http://scikit-learn.org/stable/auto_examples/svm/plot_svm_anova.html#sphx-glr-auto-examples-svm-plot-svm-anova-py)\n    - [\u975e\u7dda\u5f62SVM](http://scikit-learn.org/stable/auto_examples/svm/plot_svm_nonlinear.html#sphx-glr-auto-examples-svm-plot-svm-nonlinear-py)\n    - [SVM\uff1a\u52a0\u91cd\u30b5\u30f3\u30d7\u30eb](http://scikit-learn.org/stable/auto_examples/svm/plot_weighted_samples.html#sphx-glr-auto-examples-svm-plot-weighted-samples-py)\n\n## 1.4.2. \u56de\u5e30\n\nSupport Vector Classification\u306e\u65b9\u6cd5\u306f\u3001\u56de\u5e30\u554f\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u62e1\u5f35\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u65b9\u6cd5\u306f\u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u56de\u5e30\u3068\u547c\u3070\u308c\u307e\u3059\u3002\n\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u30b3\u30b9\u30c8\u95a2\u6570\u306f\u30de\u30fc\u30b8\u30f3\u3092\u8d8a\u3048\u308b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30dd\u30a4\u30f3\u30c8\u3092\u6c17\u306b\u3057\u306a\u3044\u306e\u3067\u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u5206\u985e\uff08\u4e0a\u8a18\u306e\u3088\u3046\u306b\uff09\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u308b\u30e2\u30c7\u30eb\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u306e\u307f\u306b\u4f9d\u5b58\u3059\u308b\u3002\u540c\u69d8\u306b\u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u56de\u5e30\u306b\u3088\u3063\u3066\u751f\u6210\u3055\u308c\u308b\u30e2\u30c7\u30eb\u306f\u3001\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3059\u308b\u30b3\u30b9\u30c8\u95a2\u6570\u304c\u30e2\u30c7\u30eb\u4e88\u6e2c\u306b\u8fd1\u3044\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3092\u7121\u8996\u3059\u308b\u305f\u3081\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u306e\u307f\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002\nSVR\u3001NuSVR\u3001LinearSVR\u306e3\u7a2e\u985e\u306e\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u56de\u5e30\u306e\u5b9f\u88c5\u304c\u3042\u308a\u307e\u3059\u3002 LinearSVR\u306fSVR\u3088\u308a\u3082\u9ad8\u901f\u306a\u5b9f\u88c5\u3092\u63d0\u4f9b\u3057\u307e\u3059\u304c\u3001NuSVR\u306fSVR\u3084LinearSVR\u3068\u306f\u308f\u305a\u304b\u306b\u7570\u306a\u308b\u5f62\u5f0f\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u7dda\u5f62\u30ab\u30fc\u30cd\u30eb\u306e\u307f\u3092\u8003\u616e\u3057\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001[\u5b9f\u88c5\u306e\u8a73\u7d30](#svm-implementation-details)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u5206\u985e\u30af\u30e9\u30b9\u3068\u540c\u69d8\u306b\u3001\u30d5\u30a3\u30c3\u30c8\u30e1\u30bd\u30c3\u30c9\u306f\u3001\u5f15\u6570\u30d9\u30af\u30c8\u30ebX\u3001y\u3068\u3057\u3066\u53d6\u3089\u308c\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001y\u306f\u6574\u6570\u5024\u3067\u306f\u306a\u304f\u6d6e\u52d5\u5c0f\u6570\u70b9\u5024\u3092\u6301\u3064\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u307e\u3059\u3002\n\n```py\n>>>\n>>> from sklearn import svm\n>>> X = [[0, 0], [2, 2]]\n>>> y = [0.5, 2.5]\n>>> clf = svm.SVR()\n>>> clf.fit(X, y) \nSVR(C=1.0, cache_size=200, coef0=0.0, degree=3, epsilon=0.1, gamma='auto',\nkernel='rbf', max_iter=-1, shrinking=True, tol=0.001, verbose=False)\n>>> clf.predict([[1, 1]])\narray([ 1.5])\n```\n\n  - \u4f8b\uff1a\n    - [\u7dda\u5f62\u304a\u3088\u3073\u975e\u7dda\u5f62\u306e\u30ab\u30fc\u30cd\u30eb\u3092\u4f7f\u7528\u3057\u305f\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u56de\u5e30\uff08SVR\uff09](http://scikit-learn.org/stable/auto_examples/svm/plot_svm_regression.html#sphx-glr-auto-examples-svm-plot-svm-regression-py)\n\n##1.4.3. \u5bc6\u5ea6\u63a8\u5b9a\u3001\u65b0\u898f\u6027\u691c\u51fa\n\n1\u3064\u306e\u30af\u30e9\u30b9\u306eSVM\u304c\u65b0\u898f\u6027\u691c\u51fa\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u4e00\u9023\u306e\u30b5\u30f3\u30d7\u30eb\u304c\u4e0e\u3048\u3089\u308c\u305f\u5834\u5408\u3001\u65b0\u3057\u3044\u30bb\u30c3\u30c8\u3092\u305d\u306e\u30bb\u30c3\u30c8\u306b\u5c5e\u3059\u308b\u3082\u306e\u3068\u3057\u3066\u5206\u985e\u3059\u308b\u3088\u3046\u306b\u3001\u305d\u306e\u30bb\u30c3\u30c8\u306e\u30bd\u30d5\u30c8\u5883\u754c\u3092\u691c\u51fa\u3057\u307e\u3059\u3002 \u3053\u308c\u3092\u5b9f\u88c5\u3059\u308b\u30af\u30e9\u30b9\u306f[OneClassSVM](http://scikit-learn.org/stable/modules/generated/sklearn.svm.OneClassSVM.html#sklearn.svm.OneClassSVM) \u3067\u3059\u3002\n\u3053\u306e\u5834\u5408\u3001\u305d\u308c\u306f\u6559\u5e2b\u306a\u3057\u5b66\u7fd2\u306e\u4e00\u7a2e\u3067\u3042\u308b\u305f\u3081\u3001 `fit` \u30e1\u30bd\u30c3\u30c9\u306b\u306f\u30af\u30e9\u30b9\u30e9\u30d9\u30eb\u304c\u306a\u304f\u3001\u914d\u5217X\u3092\u5165\u529b\u3068\u3057\u3066\u53d6\u308a\u307e\u3059\u3002\n\u3053\u306e\u4f7f\u7528\u6cd5\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u30bb\u30af\u30b7\u30e7\u30f3\u300c[\u65b0\u898f\u6027\u3068\u7570\u5e38\u5024\u691c\u51fa](http://scikit-learn.org/stable/modules/outlier_detection.html#outlier-detection)\u300d\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n![](http://scikit-learn.org/stable/_images/sphx_glr_plot_oneclass_0011.png)\n\n  - \u4f8b\uff1a\n    - [\u975e\u7dda\u5f62\u30ab\u30fc\u30cd\u30eb\uff08RBF\uff09\u3092\u6301\u30641\u30af\u30e9\u30b9SVM](http://scikit-learn.org/stable/auto_examples/svm/plot_oneclass.html#sphx-glr-auto-examples-svm-plot-oneclass-py)\n    - [\u7a2e\u5206\u5e03\u30e2\u30c7\u30eb](http://scikit-learn.org/stable/auto_examples/applications/plot_species_distribution_modeling.html#sphx-glr-auto-examples-applications-plot-species-distribution-modeling-py)\n\n## 1.4.4. \u8907\u96d1\n\n\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306f\u5f37\u529b\u306a\u30c4\u30fc\u30eb\u3067\u3059\u304c\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d9\u30af\u30bf\u306e\u6570\u304c\u5897\u3048\u308b\u306b\u3064\u308c\u3066\u3001\u305d\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u3068\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u8981\u4ef6\u306f\u6025\u901f\u306b\u5897\u52a0\u3057\u307e\u3059\u3002 SVM\u306e\u30b3\u30a2\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d9\u30af\u30c8\u30eb\u306e\u6b8b\u308a\u304b\u3089\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u3092\u5206\u96e2\u3059\u308b2\u6b21\u8a08\u753b\u554f\u984c\uff08QP\uff09\u3067\u3059\u3002\u3053\u306e[libsvm](http://www.csie.ntu.edu.tw/~cjlin/libsvm/) \u30d9\u30fc\u30b9\u306e\u5b9f\u88c5\u3067\u4f7f\u7528\u3055\u308c\u308bQP\u30bd\u30eb\u30d0\u30fc\u306f\u3001libsvm\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u52b9\u7387\u6027\u306b\u5fdc\u3058\u3066\u3001 $O(n\\_{features} \\times n\\_{samples}^2)$ \u3068 $O(n\\_{features} \\times n\\_{samples}^3)$ \u5b9f\u969b\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\uff08\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u4f9d\u5b58\uff09\u3002\u30c7\u30fc\u30bf\u304c\u975e\u5e38\u306b\u758e\u3067\u3042\u308b\u5834\u5408\u3001 $n_ {features}$ \u306f\u3001\u30b5\u30f3\u30d7\u30eb\u30d9\u30af\u30c8\u30eb\u5185\u306e\u975e\u30bc\u30ed\u30d5\u30a3\u30fc\u30c1\u30e3\u306e\u5e73\u5747\u6570\u3067\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\u307e\u305f\u3001\u7dda\u5f62\u306e\u5834\u5408\u3001LinearSVC\u3067[liblinear](http://www.csie.ntu.edu.tw/~cjlin/liblinear/) \u5b9f\u88c5\u3067\u4f7f\u7528\u3055\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001libsvm\u30d9\u30fc\u30b9\u306eSVC\u30b3\u30f3\u30d1\u30a4\u30e9\u3088\u308a\u3082\u306f\u308b\u304b\u306b\u52b9\u7387\u7684\u3067\u3001\u6570\u767e\u4e07\u306e\u30b5\u30f3\u30d7\u30eb\u3084\u30d5\u30a3\u30fc\u30c1\u30e3\u306b\u307b\u307c\u7dda\u5f62\u306b\u62e1\u5927\u7e2e\u5c0f\u3067\u304d\u307e\u3059\u3002\n\n## 1.4.5. \u5b9f\u7528\u4e0a\u306e\u30d2\u30f3\u30c8\n\n  - **\u30c7\u30fc\u30bf\u30b3\u30d4\u30fc\u306e\u56de\u907f** \uff1aSVC\u3001SVR\u3001NuSVC\u3001NuSVR\u306e\u5834\u5408\u3001\u7279\u5b9a\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3055\u308c\u308b\u30c7\u30fc\u30bf\u304c\u9023\u7d9a\u3057\u305fC\u9806\u5e8f\u3067\u306f\u306a\u304f\u3001\u500d\u7cbe\u5ea6\u306e\u5834\u5408\u3001\u5143\u306eC\u5b9f\u88c5\u3092\u547c\u3073\u51fa\u3059\u524d\u306b\u30b3\u30d4\u30fc\u3055\u308c\u307e\u3059\u3002\u4e0e\u3048\u3089\u308c\u305f\u914d\u5217\u304cC\u9023\u7d9a\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u306f\u3001\u305d\u306e `flags` \u5c5e\u6027\u3092\u8abf\u3079\u308b\u3053\u3068\u3067\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n    - [LinearSVC](http://scikit-learn.org/0.18/modules/generated/sklearn.svm.LinearSVC.html#sklearn.svm.LinearSVC)\uff08\u304a\u3088\u3073 [LogisticRegression](http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html#sklearn.linear_model.LogisticRegression) \uff09\u306e\u5834\u5408\u3001numpy\u914d\u5217\u3068\u3057\u3066\u6e21\u3055\u308c\u305f\u5165\u529b\u306f\u30b3\u30d4\u30fc\u3055\u308c\u3001liblinear\u306e\u5185\u90e8\u758e\u30c7\u30fc\u30bf\u8868\u73fe\uff08\u975e\u30bc\u30ed\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u500d\u7cbe\u5ea6\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u304a\u3088\u3073int32\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff09\u306b\u5909\u63db\u3055\u308c\u307e\u3059\u3002\u9ad8\u5bc6\u5ea6\u306eC\u9023\u7d9a\u500d\u7cbe\u5ea6\u914d\u5217\u3092\u5165\u529b\u3068\u3057\u3066\u30b3\u30d4\u30fc\u305b\u305a\u306b\u5927\u898f\u6a21\u306a\u7dda\u5f62\u5206\u985e\u5668\u306b\u9069\u5408\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u3001\u4ee3\u308f\u308a\u306b [SGDClassifier](http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.SGDClassifier.html#sklearn.linear_model.SGDClassifier) \u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\u76ee\u7684\u95a2\u6570\u306f\u3001LinearSVC\u30e2\u30c7\u30eb\u3068\u307b\u307c\u540c\u3058\u306b\u69cb\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n  - **\u30ab\u30fc\u30cd\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u30b5\u30a4\u30ba** \uff1aSVC\u3001SVR\u3001nuSVC\u3001\u304a\u3088\u3073NuSVR\u306e\u5834\u5408\u3001\u30ab\u30fc\u30cd\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30b5\u30a4\u30ba\u306f\u3001\u3088\u308a\u5927\u304d\u306a\u554f\u984c\u306e\u5b9f\u884c\u6642\u9593\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u307e\u3059\u3002\u5341\u5206\u306aRAM\u304c\u3042\u308b\u5834\u5408\u306f\u3001`cache_size` \u3092\u30c7\u30d5\u30a9\u30eb\u30c8\u306e200\uff08MB\uff09\u3088\u308a\u5927\u304d\u3044\u5024\u3001\u305f\u3068\u3048\u3070500\uff08MB\uff09\u307e\u305f\u306f1000\uff08MB\uff09\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n  - **C\u306e\u8a2d\u5b9a**\uff1a `C`\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067`1`\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u9078\u629e\u3067\u3059\u3002\u9a12\u3005\u3057\u3044\u89b3\u6e2c\u304c\u591a\u3044\u5834\u5408\u306f\u3001\u305d\u308c\u3092\u6e1b\u3089\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u308c\u306f\u3088\u308a\u591a\u304f\u306e\u63a8\u5b9a\u3092\u6b63\u898f\u5316\u3059\u308b\u3053\u3068\u306b\u5bfe\u5fdc\u3059\u308b\u3002\n  - \u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u30b9\u30b1\u30fc\u30eb\u4e0d\u5909\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u306e\u3067\u3001 **\u30c7\u30fc\u30bf\u3092\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u3053\u3068\u3092\u5f37\u304f\u304a\u52e7\u3081\u3057\u307e\u3059**\u3002\u305f\u3068\u3048\u3070\u3001\u5165\u529b\u30d9\u30af\u30c8\u30ebX\u306e\u5404\u5c5e\u6027\u3092[0,1]\u307e\u305f\u306f[-1\u3001+1]\u306b\u30b9\u30b1\u30fc\u30eb\u3059\u308b\u304b\u3001\u5e73\u57470\u3068\u5206\u65631\u306b\u306a\u308b\u3088\u3046\u306b\u6a19\u6e96\u5316\u3057\u307e\u3059\u3002\u30c6\u30b9\u30c8\u30d9\u30af\u30c8\u30eb\u306b\u306f\u540c\u3058\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3092\u9069\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u610f\u5473\u306e\u3042\u308b\u7d50\u679c\u3092\u5f97\u308b\u3002\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u3068\u6b63\u898f\u5316\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u300c[\u524d\u51e6\u7406\u3059\u308b](http://scikit-learn.org/stable/modules/preprocessing.html#preprocessing)\u300d\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n  - NuSVC / OneClassSVM / NuSVR\u306e\u30d1\u30e9\u30e1\u30fc\u30bfnu\u306f\u3001\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30a8\u30e9\u30fc\u306e\u5272\u5408\u3068\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u3092\u8fd1\u4f3c\u3057\u307e\u3059\u3002\n  - SVC\u306b\u304a\u3044\u3066\u3001\u5206\u985e\u306e\u305f\u3081\u306e\u30c7\u30fc\u30bf\u304c\u4e0d\u5747\u8861\u3067\u3042\u308b\uff08\u4f8b\u3048\u3070\u3001\u591a\u304f\u306e\u6b63\u304a\u3088\u3073\u8ca0\u306e\u6570\u3067\u3042\u308b\uff09\u5834\u5408\u3001class_weight = 'balanced'\u3092\u8a2d\u5b9a\u3057\u3001\u304a\u3088\u3073/\u307e\u305f\u306f\u7570\u306a\u308b\u30da\u30ca\u30eb\u30c6\u30a3\u30d1\u30e9\u30e1\u30fc\u30bfC\u3092\u8a66\u307f\u308b\u3002\n  - \u57fa\u672c\u3068\u306a\u308bLinearSVC\u306e\u5b9f\u88c5\u3067\u306f\u3001\u30e2\u30c7\u30eb\u3092\u30d5\u30a3\u30c3\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u969b\u306b\u3001\u4e71\u6570\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u3066\u30d5\u30a3\u30fc\u30c1\u30e3\u3092\u9078\u629e\u3057\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u540c\u3058\u5165\u529b\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u308f\u305a\u304b\u306b\u7570\u306a\u308b\u7d50\u679c\u3092\u51fa\u3059\u3053\u3068\u306f\u73cd\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u308c\u304c\u8d77\u3053\u308b\u306a\u3089\u3001\u3088\u308a\u5c0f\u3055\u3044tol\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u8a66\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n  - `LinearSVC\uff08loss = 'l2'\u3001penalty = 'l1'\u3001dual = False\uff09` \u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u308b\u3088\u3046\u306aL1\u30da\u30ca\u30eb\u30c6\u30a3\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u758e\u306a\u89e3\u304c\u5f97\u3089\u308c\u308b\u3002\u3059\u306a\u308f\u3061\u3001\u30d5\u30a3\u30fc\u30c1\u30e3\u30a6\u30a7\u30a4\u30c8\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u306e\u307f\u304c\u30bc\u30ed\u3068\u7570\u306a\u308a\u3001\u6c7a\u5b9a\u95a2\u6570\u306b\u5bc4\u4e0e\u3059\u308b\u3002 `C`\u3092\u5897\u3084\u3059\u3068\u3001\u3088\u308a\u8907\u96d1\u306a\u30e2\u30c7\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\uff08\u3088\u308a\u591a\u304f\u306e\u6a5f\u80fd\u304c\u9078\u629e\u3055\u308c\u307e\u3059\uff09\u3002 \u300c\u30cc\u30eb\u300d\u30e2\u30c7\u30eb\uff08\u3059\u3079\u3066\u306e\u91cd\u307f\u304c\u30bc\u30ed\u306b\u7b49\u3057\u3044\uff09\u3092\u751f\u6210\u3059\u308b`C`\u5024\u306f\u3001[l1_min_c](http://scikit-learn.org/stable/modules/generated/sklearn.svm.l1_min_c.html#sklearn.svm.l1_min_c) \u3092\u4f7f\u7528\u3057\u3066\u8a08\u7b97\u3067\u304d\u307e\u3059\u3002\n\n## 1.4.6. \u30ab\u30fc\u30cd\u30eb\u95a2\u6570<a name=\"kernels\"></a>\n\n\u30ab\u30fc\u30cd\u30eb\u95a2\u6570\u306f\u3001\u6b21\u306e\u3044\u305a\u308c\u304b\u306b\u306a\u308a\u307e\u3059\u3002\n\n  - \u7dda\u5f62\uff1a $ \\langle x, x'\\rangle$ .\n  - \u591a\u9805\u5f0f\uff1a $ (\\gamma \\langle x, x'\\rangle + r)^d$ . $d$ \u306f\u30ad\u30fc\u30ef\u30fc\u30c9`degree`\u3001 $r$ \u3092`coef0` \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n  - rbf\uff1a $\\exp(-\\gamma |x-x'|^2)$. $\\gamma $\u306f\u30ad\u30fc\u30ef\u30fc\u30c9 `gamma` \u306b\u3088\u3063\u3066\u6307\u5b9a\u3055\u308c\u30010\u3088\u308a\u5927\u304d\u304f\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n  - sigmoid\uff08 $\\tanh(\\gamma \\langle x,x'\\rangle + r)$\uff09\u3002\u3053\u3053\u3067 $r$ \u306f `coef0` \u3067\u6307\u5b9a\u3055\u308c\u307e\u3059\u3002\n\n\u7570\u306a\u308b\u30ab\u30fc\u30cd\u30eb\u306f\u30ad\u30fc\u30ef\u30fc\u30c9 `kernel` \u306b\u3088\u3063\u3066\u521d\u671f\u5316\u6642\u306b\u6307\u5b9a\u3055\u308c\u307e\u3059\uff1a\n\n```py\n>>> linear_svc = svm.SVC(kernel='linear')\n>>> linear_svc.kernel\n'linear'\n>>> rbf_svc = svm.SVC(kernel='rbf')\n>>> rbf_svc.kernel\n'rbf'\n```\n\n### 1.4.6.1. \u30ab\u30b9\u30bf\u30e0\u30ab\u30fc\u30cd\u30eb\n\n\u30ab\u30fc\u30cd\u30eb\u306bPython\u95a2\u6570\u3092\u4e0e\u3048\u308b\u304b\u3001\u307e\u305f\u306f\u30b0\u30e9\u30e0\u884c\u5217\u3092\u3042\u3089\u304b\u3058\u3081\u8a08\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u72ec\u81ea\u306e\u30ab\u30fc\u30cd\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30ab\u30b9\u30bf\u30e0\u30ab\u30fc\u30cd\u30eb\u3092\u6301\u3064\u5206\u985e\u5668\u306f\u3001\u4ee5\u4e0b\u306e\u70b9\u3092\u9664\u3044\u3066\u4ed6\u306e\u5206\u985e\u5668\u3068\u540c\u3058\u3088\u3046\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\n  - \u30d5\u30a3\u30fc\u30eb\u30c9 `support_vectors_` \u306f\u7a7a\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u307f\u304c`support_` \u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\n  - `fit\uff08\uff09`\u30e1\u30bd\u30c3\u30c9\u306e\u6700\u521d\u306e\u5f15\u6570\u306e\u53c2\u7167\uff08\u304a\u3088\u3073\u30b3\u30d4\u30fc\u3067\u306f\u306a\u3044\uff09\u306f\u3001\u5f8c\u3067\u53c2\u7167\u3059\u308b\u305f\u3081\u306b\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002 \u305d\u306e\u914d\u5217\u304c`fit\uff08\uff09`\u3068`predict\uff08\uff09`\u306e\u4f7f\u7528\u306e\u9593\u3067\u5909\u66f4\u3055\u308c\u305f\u5834\u5408\u3001\u4e88\u671f\u3057\u306a\u3044\u7d50\u679c\u304c\u751f\u3058\u308b\u3067\u3057\u3087\u3046\u3002\n\n#### 1.4.6.1.1. Python\u95a2\u6570\u3092\u30ab\u30fc\u30cd\u30eb\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\n\n\u307e\u305f\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u306e\u30ad\u30fc\u30ef\u30fc\u30c9`kernel` \u306b\u95a2\u6570\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u72ec\u81ea\u306e\u5b9a\u7fa9\u6e08\u307f\u30ab\u30fc\u30cd\u30eb\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u30ab\u30fc\u30cd\u30eb\u306f\u3001\u30b7\u30a7\u30a4\u30d7\u306e2\u3064\u306e\u884c\u5217 `\uff08n_samples_1\u3001n_features\uff09` \u3001 `\uff08n_samples_2\u3001n_features\uff09` \u3092\u5f15\u6570\u3068\u3057\u3066\u53d6\u308a\u3001\u30b7\u30a7\u30a4\u30d7 `\uff08n_samples_1\u3001n_samples_2\uff09` \u306e\u30ab\u30fc\u30cd\u30eb\u884c\u5217\u3092\u8fd4\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30ea\u30cb\u30a2\u30ab\u30fc\u30cd\u30eb\u3092\u5b9a\u7fa9\u3057\u3001\u305d\u306e\u30ab\u30fc\u30cd\u30eb\u3092\u4f7f\u7528\u3059\u308b\u5206\u985e\u5668\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```py\n>>> import numpy as np\n>>> from sklearn import svm\n>>> def my_kernel(X, Y):\n...     return np.dot(X, Y.T)\n...\n>>> clf = svm.SVC(kernel=my_kernel)\n```\n\n  - \u4f8b\uff1a\n    - [\u30ab\u30b9\u30bf\u30e0\u30ab\u30fc\u30cd\u30eb\u3092\u6301\u3064SVM\u3002](http://scikit-learn.org/stable/auto_examples/svm/plot_custom_kernel.html#sphx-glr-auto-examples-svm-plot-custom-kernel-py)\n\n#### 1.4.6.1.2. \u30b0\u30e9\u30e0\u884c\u5217\u306e\u4f7f\u7528\n\n`kernel = 'precomputed'` \u3092\u8a2d\u5b9a\u3057\u3001fit\u30e1\u30bd\u30c3\u30c9\u3067X\u306e\u4ee3\u308f\u308a\u306b\u30b0\u30e9\u30e0\u884c\u5217\u3092\u6e21\u3057\u307e\u3059\u3002 \u73fe\u6642\u70b9\u3067\u306f\u3001\u3059\u3079\u3066\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d9\u30af\u30c8\u30eb\u3068\u30c6\u30b9\u30c8\u30d9\u30af\u30c8\u30eb\u3068\u306e\u9593\u306e\u30ab\u30fc\u30cd\u30eb\u5024\u304c\u63d0\u4f9b\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\n```py\n>>> import numpy as np\n>>> from sklearn import svm\n>>> X = np.array([[0, 0], [1, 1]])\n>>> y = [0, 1]\n>>> clf = svm.SVC(kernel='precomputed')\n>>> # linear kernel computation\n>>> gram = np.dot(X, X.T)\n>>> clf.fit(gram, y) \nSVC(C=1.0, cache_size=200, class_weight=None, coef0=0.0,\n    decision_function_shape=None, degree=3, gamma='auto',\n    kernel='precomputed', max_iter=-1, probability=False,\n    random_state=None, shrinking=True, tol=0.001, verbose=False)\n>>> # predict on training examples\n>>> clf.predict(gram)\narray([0, 1])\n```\n\n#### 1.4.6.1.3. RBF\u30ab\u30fc\u30cd\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\n\nRadial Basis Function\uff08RBF\uff09 \u30ab\u30fc\u30cd\u30eb\u3067SVM\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u5834\u5408\u306f\u3001`C` \u3068`gamma`\u306e2\u3064\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3059\u3079\u3066\u306eSVM\u30ab\u30fc\u30cd\u30eb\u306b\u5171\u901a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf`C`\u306f\u3001\u6c7a\u5b9a\u8868\u306e\u5358\u7d14\u3055\u306b\u5bfe\u3057\u3066\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u4f8b\u306e\u8aa4\u5206\u985e\u3092\u6392\u9664\u3057\u307e\u3059\u3002\u4f4e\u3044C\u306f\u6c7a\u5b9a\u8868\u3092\u6ed1\u3089\u304b\u306b\u3057\u3001\u9ad8\u3044`C`\u306f\u3059\u3079\u3066\u306e\u8a13\u7df4\u4f8b\u3092\u6b63\u3057\u304f\u5206\u985e\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002`gamma`\u306f\u30011\u3064\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u4f8b\u306b\u3069\u308c\u3060\u3051\u306e\u5f71\u97ff\u304c\u3042\u308b\u304b\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002`gamma`\u304c\u5927\u304d\u3051\u308c\u3070\u5927\u304d\u3044\u307b\u3069\u3001\u4ed6\u306e\u4f8b\u304c\u5f71\u97ff\u3092\u53d7\u3051\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n`C`\u3068`gamma`\u306e\u9069\u5207\u306a\u9078\u629e\u306f\u3001SVM\u306e\u6027\u80fd\u306b\u3068\u3063\u3066\u91cd\u8981\u3067\u3059\u3002 1\u3064\u306f\u3001[sklearn.model_selection.GridSearchCV](http://scikit-learn.org/stable/modules/generated/sklearn.model_selection.GridSearchCV.html#sklearn.model_selection.GridSearchCV) \u3092C\u3068\u4f7f\u7528\u3057\u3001`gamma`\u3092\u6307\u6570\u95a2\u6570\u7684\u306b\u9060\u304f\u96e2\u308c\u3066\u4f7f\u7528\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\n  - \u4f8b\uff1a\n    - [RBF SVM\u30d1\u30e9\u30e1\u30fc\u30bf](http://scikit-learn.org/stable/auto_examples/svm/plot_rbf_parameters.html#sphx-glr-auto-examples-svm-plot-rbf-parameters-py)\n\n\n## 1.4.7. \u6570\u5b66\u7684\u51e6\u65b9\n\n\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306f\u3001\u5206\u985e\u3001\u56de\u5e30\u307e\u305f\u306f\u4ed6\u306e\u30bf\u30b9\u30af\u306e\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u308b\u3001\u9ad8\u6b21\u5143\u307e\u305f\u306f\u7121\u9650\u6b21\u5143\u306e\u7a7a\u9593\u306b\u304a\u3051\u308b\u8d85\u5e73\u9762\u307e\u305f\u306f\u8d85\u5e73\u9762\u306e\u7d44\u3092\u69cb\u7bc9\u3059\u308b\u3002\u76f4\u611f\u7684\u306b\u306f\u3001\u4e00\u822c\u306b\u3001\u30de\u30fc\u30b8\u30f3\u304c\u5927\u304d\u3051\u308c\u3070\u5927\u304d\u3044\u307b\u3069\u5206\u985e\u5668\u306e\u4e00\u822c\u5316\u8aa4\u5dee\u304c\u5c0f\u3055\u304f\u306a\u308b\u306e\u3067\u3001\u3069\u306e\u30af\u30e9\u30b9\u306e\u6700\u3082\u8fd1\u3044\u8a13\u7df4\u30c7\u30fc\u30bf\u70b9\uff08\u3044\u308f\u3086\u308b\u95a2\u6570\u30de\u30fc\u30b8\u30f3\uff09\u3068\u306e\u8ddd\u96e2\u304c\u6700\u3082\u5927\u304d\u3044\u8d85\u5e73\u9762\u306b\u3088\u3063\u3066\u826f\u597d\u306a\u5206\u96e2\u304c\u9054\u6210\u3055\u308c\u308b\u3002\n\n![](http://scikit-learn.org/stable/_images/sphx_glr_plot_separating_hyperplane_0011.png)\n\n### 1.4.7.1. SVC\n\n2\u3064\u306e\u30af\u30e9\u30b9\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30d9\u30af\u30c8\u30eb $ x_i \\in \\mathbb{R}^p$ \u3001 $i = 1...n$ \u3068 $ y \\in \\mathbb{R}^n$ $\\varepsilon$ \u306e\u30d9\u30af\u30c8\u30eby\u3092\u4e0e\u3048\u3089\u308c\u305fSVC\u306f\u3001\u554f\u984c\uff1a\n\n```math\n\\min_ {w, b, \\zeta} \\frac{1}{2} w^T w + C \\sum_{i=1}^{n} \\zeta_i\n```\n\n\n```math\n\\begin{align}\n\\textrm {subject to } & y_i (w^T \\phi (x_i) + b) \\geq 1 - \\zeta_i,\\\\\n & \\zeta_i \\geq 0, i=1, ..., n\n\\end{align}\n```\n\n\n\n\u305d\u306e\u4e8c\u91cd\n\n```math\n\\min_{\\alpha} \\frac{1}{2} \\alpha^T Q \\alpha - e^T \\alpha\n```\n\n```math\n\\begin{align}\n\\textrm {subject to } & y^T \\alpha = 0\\\\\n& 0 \\leq \\alpha_i \\leq C, i=1, ..., n\n\\end{align}\n```\n\n\u3053\u3053\u3067\u3001 $e$ \u306f\u3059\u3079\u3066\u306e1\u306e\u30d9\u30af\u30c8\u30eb\u3001 $C> 0$ \u306f\u4e0a\u9650\u3001 $Q$ \u306f n\u00d7n \u6b63\u306e\u534a\u6b63\u5b9a\u5024\u884c\u5217\u3001 $Q_{ij} \\equiv y_i y_j K(x_i, x_j)$ \u3002\u3053\u3053\u3067\u3001 $K(x_i, x_j) = \\phi (x_i)^T \\phi (x_j)$ \u306f\u30ab\u30fc\u30cd\u30eb\u3067\u3059\u3002\u3053\u3053\u3067\u3001\u8a13\u7df4\u30d9\u30af\u30c8\u30eb\u306f\u95a2\u6570 $\\phi$ \u306b\u3088\u3063\u3066\u9ad8\u6b21\u5143\uff08\u591a\u5206\u7121\u9650\u6b21\u5143\uff09\u306e\u7a7a\u9593\u306b\u6697\u9ed9\u7684\u306b\u5199\u50cf\u3055\u308c\u307e\u3059\u3002\n\u6c7a\u5b9a\u95a2\u6570\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n```math\n\\operatorname{sgn}(\\sum_{i=1}^n y_i \\alpha_i K(x_i, x) + \\rho)\n```\n\n**\u6ce8\u610f**: libsvm\u304a\u3088\u3073liblinear\u304b\u3089\u6d3e\u751f\u3057\u305fSVM\u30e2\u30c7\u30eb\u306fC\u3092\u6b63\u5247\u5316\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\u4ed6\u306e\u307b\u3068\u3093\u3069\u306e\u63a8\u5b9a\u5b50\u3067\u306f\u30a2\u30eb\u30d5\u30a1\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u4e21\u65b9\u306e\u95a2\u4fc2\u306f $C = \\frac{n\\_samples}{alpha}.$ \u3067\u3059\u3002\n\u3053\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u306f\u3001\u88fd\u54c1 $y_i \\alpha_i$ \u3092\u4fdd\u6301\u3059\u308b\u30e1\u30f3\u30d0\u30fc `dual_coef_` \u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u3092\u4fdd\u6301\u3059\u308b `support_vectors_` \u3001\u304a\u3088\u3073\u72ec\u7acb\u9805 $\\rho$ \u3092\u4fdd\u6301\u3059\u308b `intercept_` \u3092\u4ecb\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\n\n  - \u53c2\u8003\u6587\u732e\uff1a\n    - \"[\u975e\u5e38\u306b\u5927\u304d\u306aVC\u6b21\u5143\u5206\u985e\u5668\u306e\u81ea\u52d5\u5bb9\u91cf\u8abf\u6574](http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.17.7215)\"\u3001I. Guyon\u3001B. Boser\u3001V. Vapnik - \u795e\u7d4c\u60c5\u5831\u51e6\u7406\u306e\u9032\u6b691993\u3002\n    - \"[Support-vector networks](http://link.springer.com/article/10.1007%2FBF00994018)\"\u3001C. Cortes\u3001V. Vapnik - Machine Learning\u300120,273-297\uff081995\uff09\u3002\n\n### 1.4.7.2. NuSVC\n\n\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u6570\u3068\u8a13\u7df4\u30a8\u30e9\u30fc\u3092\u5236\u5fa1\u3059\u308b\u65b0\u3057\u3044\u30d1\u30e9\u30e1\u30fc\u30bf $\\nu$ \u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u30d1\u30e9\u30e1\u30fc\u30bf $\\nu \\in\uff080\u3001\n1]$ \u306f\u3001\u8a13\u7df4\u8aa4\u5dee\u306e\u5272\u5408\u306e\u4e0a\u9650\u304a\u3088\u3073\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u306e\u5272\u5408\u306e\u4e0b\u9650\u3067\u3042\u308b\u3002\n$\\nu$-SVC\u306e\u5b9a\u5f0f\u5316\u306fC-SVC\u306e\u518d\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3067\u3042\u308a\u3001\u3057\u305f\u304c\u3063\u3066\u6570\u5b66\u7684\u306b\u540c\u7b49\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n### 1.4.7.3. SVR\n\n\u4e0e\u3048\u3089\u308c\u305f\u8a13\u7df4\u30d9\u30af\u30c8\u30eb $x_i \\mathbb {R} ^ p$ \u3001i = 1\u3001...\u3001n \u3068\u3001\u30d9\u30af\u30c8\u30eb $\\mathbb {R} ^ n \\varepsilon$-SVR\u3000\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u554f\u984c\u3092\u89e3\u6c7a\u3057\u307e\u3059\u3002\n\n```math\n    \\min_ {w, b, \\zeta, \\zeta^*} \\frac{1}{2} w^T w + C \\sum_{i=1}^{n} (\\zeta_i + \\zeta_i^*)\n```\n\n\n```math\n\\begin{align}\n    \\textrm {subject to } & y_i - w^T \\phi (x_i) - b \\leq \\varepsilon + \\zeta_i,\\\\\n                          & w^T \\phi (x_i) + b - y_i \\leq \\varepsilon + \\zeta_i^*,\\\\\n                          & \\zeta_i, \\zeta_i^* \\geq 0, i=1, ..., n\n\n\\end{align}\n```\n\n\n\u305d\u306e\u4e8c\u91cd\n\n```math\n   \\min_{\\alpha, \\alpha^*} \\frac{1}{2} (\\alpha - \\alpha^*)^T Q (\\alpha - \\alpha^*) + \\varepsilon e^T (\\alpha + \\alpha^*) - y^T (\\alpha - \\alpha^*)\n```\n\n```math\n\\begin{align}\n   \\textrm {subject to } & e^T (\\alpha - \\alpha^*) = 0\\\\\n   & 0 \\leq \\alpha_i, \\alpha_i^* \\leq C, i=1, ..., n\n\\end{align}\n```\n\n\u3053\u3053\u3067\u3001 $e$ \u306f\u3059\u3079\u3066\u306e1\u306e\u30d9\u30af\u30c8\u30eb\u3001 $C> 0$ \u306f\u4e0a\u9650\u3001$Q$\u306f $n$ by $n$ \u6b63\u306e\u534a\u6b63\u5b9a\u5024\u884c\u5217\u3001 $Q_{ij} \\equiv K(x_i, x_j) = \\phi (x_i)^T \\phi (x_j)$ \u306f\u30ab\u30fc\u30cd\u30eb\u3067\u3059\u3002\u3053\u3053\u3067\u3001\u8a13\u7df4\u30d9\u30af\u30c8\u30eb\u306f\u95a2\u6570 $\\phi$ \u306b\u3088\u3063\u3066\u9ad8\u6b21\u5143\uff08\u591a\u5206\u7121\u9650\u6b21\u5143\uff09\u306e\u7a7a\u9593\u306b\u6697\u9ed9\u7684\u306b\u5199\u50cf\u3055\u308c\u307e\u3059\u3002\n\u6c7a\u5b9a\u95a2\u6570\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n```math\n \\sum_{i=1}^n (\\alpha_i - \\alpha_i^*) K(x_i, x) + \\rho\n```\n\n\u3053\u308c\u3089\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u306f\u3001\u5dee\u5206 $\\alpha_i - \\alpha_i ^ *$ \u3092\u4fdd\u6301\u3059\u308b\u30e1\u30f3\u30d0\u30fc`dual_coef_`\u3001\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u3092\u4fdd\u6301\u3059\u308b `support_vectors_`\u3001\u304a\u3088\u3073\u72ec\u7acb\u9805 $\\\u03c1$ \u3092\u4fdd\u6301\u3059\u308b `intercept_` \u3092\u901a\u3058\u3066\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002\n\n  - \u53c2\u8003\u6587\u732e\uff1a\n    - \"[\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u56de\u5e30\u306b\u95a2\u3059\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.114.4288)\"\u3001Alex J. Smola\u3001BernhardSch\u00f6lkopf - \u7d71\u8a08\u3068\u30b3\u30f3\u30d4\u30e5\u30fc\u30c6\u30a3\u30f3\u30b0\u30a2\u30fc\u30ab\u30a4\u30d6\u7b2c14\u5dfb\u7b2c3\u53f7\u30012004\u5e748\u6708\u3001p\u3002 199-222\u3002\n\n\n## 1.4.8. \u5b9f\u88c5\u306e\u8a73\u7d30<a name=\"svm-implementation-details\"></a>\n\n\u5185\u90e8\u7684\u306b\u306f\u3001\u3059\u3079\u3066\u306e\u8a08\u7b97\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306b [libsvm](http://www.csie.ntu.edu.tw/~cjlin/libsvm/) \u3068 [liblinear](http://www.csie.ntu.edu.tw/~cjlin/liblinear/) \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3001C\u304a\u3088\u3073Cython\u3092\u4f7f\u7528\u3057\u3066\u30e9\u30c3\u30d7\u3055\u308c\u307e\u3059\u3002\n\n  - \u53c2\u8003\u6587\u732e\uff1a\n   \u4f7f\u7528\u3055\u308c\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5b9f\u88c5\u3068\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3001\u6b21\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n    - [LIBSVM\uff1a\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30bf\u30fc\u30de\u30b7\u30f3\u306e\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea](http://www.csie.ntu.edu.tw/~cjlin/papers/libsvm.pdf)\u3002\n    - [LIBLINEAR - \u5927\u898f\u6a21\u306a\u7dda\u5f62\u5206\u985e\u306e\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea](http://www.csie.ntu.edu.tw/~cjlin/liblinear/)\u3002\n\n\u00a92010 - 2016\u3001scikit-learn developers\uff08BSD\u30e9\u30a4\u30bb\u30f3\u30b9\uff09\u3002\n", "tags": ["scikit-learn", "Python", "\u6a5f\u68b0\u5b66\u7fd2", "MachineLearning", "svm"]}