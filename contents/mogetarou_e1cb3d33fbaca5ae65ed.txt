{"context": "\n\n\u306f\u3058\u3081\u306b\nDocker\u3092\u4f7f\u7528\u3057\u3066AmazonLinux\u306e\u958b\u767a\u74b0\u5883\uff08Nginx+PHP56+PHP-fpm-5.6\uff09\u3092\u4f5c\u308d\u3046\u3068\u3057\u305f\u969b\u306e\u81ea\u5206\u306e\u30e1\u30e2\u306b\u306a\u308a\u307e\u3059\u3002\n\u6700\u7d42\u7684\u306b\u306fEc2 Container Service\u3067\u30ec\u30dd\u30b8\u30c8\u30ea\u306e\u767b\u9332\u307e\u3067\u884c\u3044\u307e\u3059\u3002\n\u203b\u4eca\u56de\u306e\u76ee\u6a19\u306fvagrant\u3068\u540c\u3058\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u3092\u60f3\u5b9a\u3057\u307e\u3059\u3002\n\u74b0\u5883\n MAC 10.10.5\n Docker V 1.12.3-beta30\n\u524d\u63d0\n AWS CLI\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n Ec2 Container Service\u3067\u30ec\u30dd\u30b8\u30c8\u30ea\u306e\u4f5c\u6210\n\n\u6982\u8981\n\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\u308f\u304b\u308a\u3084\u3059\u304f\u3066\u611f\u8b1d\u3067\u3059\u3002\n\u53c2\u8003\u30ea\u30f3\u30af\uff1aAmazon Linux\u304c\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u306e\u3067\u3001Mac\u3067\u52d5\u304b\u3057\u3066\u307f\u305f\u3002\n\n\nStep1 \u30ed\u30b0\u30a4\u30f3\n\u3068\u308a\u3042\u3048\u305aAmazonLinux\u306e\u30a4\u30e1\u30fc\u30b8\u3092Pull\u3059\u308b\u70ba\u306b\u30ed\u30b0\u30a4\u30f3\u3092\u3057\u307e\u3059\u3002\n$ aws ecr get-login --region ap-northeast-1 --registry-ids 137112412989\n\ndocker login -u AWS -p XXXXXXXXXX\uff08\u7701\u7565\uff01\uff09 -e none https://137112412989.dkr.ecr.ap-northeast-1.amazonaws.com\n\n\n\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u70ba\u306e\u60c5\u5831\u304c\u3067\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u5185\u5bb9\u3092\u30b3\u30d4\u30da\u3057\u5b9f\u884c\u3057\u307e\u3059\u3002\n$docker login -u AWS -p XXXXXXXXXX\uff08\u7701\u7565\uff01\uff09 -e none https://137112412989.dkr.ecr.ap-northeast-1.amazonaws.com\nFlag --email has been deprecated, will be removed in 1.13.\nLogin Succeeded\n\n\u3053\u308c\u3067\u30ed\u30b0\u30a4\u30f3\u5b8c\u4e86\u3067\u3059\u3002\n\n\nStep2 Docker\u306e\u30a4\u30e1\u30fc\u30b8\u3092pull\nDocker \u306e\u30a4\u30e1\u30fc\u30b8\u3092Pull\u3057\u307e\u3059\u3002\n$ docker pull 137112412989.dkr.ecr.ap-northeast-1.amazonaws.com/amazonlinux:latest  \nlatest: Pulling from amazonlinux\ne2daa1633485: Pull complete \nDigest: sha256:939657b06a824c58f1532b104ba423c0c5efc16552c01427d96e9da20f8b2680\nStatus: Downloaded newer image for 137112412989.dkr.ecr.ap-northeast-1.amazonaws.com/amazonlinux:latest\n$ docker images   \nREPOSITORY                                                      TAG                 IMAGE ID            CREATED             SIZE\n137112412989.dkr.ecr.ap-northeast-1.amazonaws.com/amazonlinux   latest              feee9aea7094        11 days ago         328.3 MB\n\n\n\nStep3 Docker\u306e\u30a4\u30e1\u30fc\u30b8\u306e\u8d77\u52d5\nDocker\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n$ docker run -it 137112412989.dkr.ecr.ap-northeast-1.amazonaws.com/amazonlinux:latest /bin/bash\nbash-4.2# \n\n\n\nStep4 SSH\u7b49\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nDockerfile\u3067build\u3059\u308c\u3070\u3044\u3044\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u624b\u52d5\u3067\u3084\u308a\u307e\u3059\u3002\n\u306a\u3093\u3068\u306a\u304f\u3088\u304f\u4f7f\u3063\u3066\u3044\u308b\u306e\u3092\u5165\u308c\u3068\u304d\u307e\u3059\u3002\n$ yum -y install openssh-server openssh vim wget\n\n\u3064\u3044\u3067\u306bec2-user\u3068\u540c\u3058\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306a\u30e6\u30fc\u30b6\u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nbash-4.2# useradd -g nginx -s /bin/bash devel\nbash-4.2# yum -y install sudo\nLoaded plugins: priorities, update-motd, upgrade-helper\namzn-main/latest                                                                                           | 2.1 kB     00:00     \namzn-updates/latest                                                                                        | 2.3 kB     00:00     \nResolving Dependencies\n--> Running transaction check\n\uff1a\nDependency Installed:\n  vim-minimal.x86_64 2:7.4.1967-1.42.amzn1                                                                                        \n\nComplete!\nbash-4.2# echo \"# devel \" > /etc/sudoers.d/devel\nbash-4.2# echo \"devel ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/devel\nbash-4.2# su - devel\nLast login: Fri Nov 11 02:17:54 UTC 2016 on console\n[devel@e17d83813adc ~]$ sudo su -\n-bash-4.2# \n\n\nPEM\u3067\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n[devel@e17d83813adc ~]$ ssh-keygen -t rsa\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/home/devel/.ssh/id_rsa): \nCreated directory '/home/devel/.ssh'.\nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in /home/devel/.ssh/id_rsa.\nYour public key has been saved in /home/devel/.ssh/id_rsa.pub.\nThe key fingerprint is:\ndf:f9:aa:9a:d8:bc:14:b5:03:8f:3f:eb:bc:f8:c8:f2 devel@e17d83813adc\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|                 |\n|                 |\n|        . .      |\n|         = .     |\n|        S +      |\n|         + o .   |\n|        . + o    |\n|      .* = o .   |\n|      .oE=Bo...  |\n+-----------------+\n[devel@e17d83813adc .ssh]$ ls\nid_rsa  id_rsa.pub\n[devel@e17d83813adc .ssh]$ mv id_rsa.pub authorized_keys\n\n\n\u203bid_rsa\u304cpem\u306b\u306a\u308a\u307e\u3059\u3002\n\n\nStep5 PHP\u30fbnginx\u30fbmysql\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nDockerfile\u3067build\u3059\u308c\u3070\u3044\u3044\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u624b\u52d5\u3067\u3084\u308a\u307e\u3059\u3002\nbash-4.2# yum install php56 php56-mbstring php56-pdo php56-ldap php56-xml php56-mcrypt php56-gd php56-imap php56-pecl-imagick php56-pecl-apc php56-jsonc php56-fpm php56-mysqlnd curl-devel mysql-server mysql nginx\n\n\u3061\u306a\u307f\u306bnginx\u306f\u3053\u306e\u307e\u307e\u3060\u3068\u8d77\u52d5\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u4ee5\u4e0b\u306e\u8ffd\u52a0\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u53c2\u8003\n/etc/sysconfig/network: No such file or directory\n-bash-4.2# echo \"NETWORKING=yes\" >/etc/sysconfig/network\n\n\n\nStep6 monit \u8a2d\u5b9a\n\u3053\u306e\u307e\u307e\u8d77\u52d5\u3057\u3066\u3082chkconfig\u306e\u8a2d\u5b9a\u306f\u7121\u52b9\u306a\u306e\u3067monit\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30e2\u30f3\u306e\u5e38\u99d0\u3055\u305b\u307e\u3059\u3002\nbash-4.2# yum install monit\n\nnginx,mysqld,sshd,php-fpm-5.6\u3092\u76e3\u8996\u3055\u305b\u8d77\u52d5\u3055\u305b\u308b\u3088\u3046\u306b\u3059\u308b\u3002\nbash-4.2# cat /etc/monit.d/sshd.conf\ncheck process sshd\n    with pidfile \"/var/run/sshd.pid\"\n    start program \"/etc/init.d/sshd start\"\n    stop program \"/etc/init.d/sshd stop\"\n    if failed port 22 protocol ssh then restart\n    if 5 restart within 5 cycles then alert\nbash-4.2# cat /etc/monit.d/nginx.conf\ncheck process nginx\n    with pidfile \"/var/run/nginx.pid\"\n    start program \"/etc/init.d/nginx start\"\n    stop program \"/etc/init.d/nginx stop\"\n    if failed port 80 protocol http\n       then restart\n    group nginx \nbash-4.2# cat /etc/monit.d/mysqld.conf\ncheck process mysqld\n    with pidfile \"/var/run/mysqld/mysqld.pid\"\n    start program \"/etc/init.d/mysqld start\"\n    stop program \"/etc/init.d/mysqld stop\"\n    if failed unixsocket /var/lib/mysql/mysql.sock then restart\n    if 5 restarts within 5 cycles then timeout\nbash-4.2# cat /etc/monit.d/php-fpm-5.6.conf\ncheck process php-fpm-5.6\n    with pidfile /var/run/php-fpm/php-fpm-5.6.pid\n    start program = \"/etc/init.d/php-fpm-5.6 start\" with timeout 60 seconds\n    stop program  = \"/etc/init.d/php-fpm-5.6 stop\"\n    if failed unixsocket /var/run/php-fpm/php-fpm.sock then restart\n    if 5 restarts within 5 cycles then timeout\n\n\u8d77\u52d5\u7528\u306e\u30b7\u30a7\u30eb\u3092\u66f8\u304d\u3001docker\u8d77\u52d5\u6642\u306b\u305d\u308c\u3092\u8aad\u307e\u305b\u308b\u3002\n\u203brm\u306f\u3057\u306a\u304f\u3066\u3082OK\u3002\u30a4\u30e1\u30fc\u30b8\u4fdd\u5b58\u3057\u305f\u6642\u306b\u8d77\u52d5\u3057\u3066\u305f\u306e\u3067\u5b58\u5728\u3057\u3066\u305f\u3060\u3051\u3067\u3059\u30fb\u30fb\u30fb\nbash-4.2# cat /bin/init \n#!/bin/bash\nrm -fr /var/run/php-fpm/php-fpm-5.6.pid\nrm -fr /var/run/php-fpm/php-fpm.sock \n/sbin/service monit start\n/bin/bash\nbash-4.2# chmod 755 /bin/init \n\n\u53c2\u8003\nMonit\u3067SSH,Nginx,MySQL\u306e\u30b5\u30fc\u30d3\u30b9\u6b7b\u6d3b\u76e3\u8996\u3092\u884c\u3046Chef Cookbook\nDocker\u3067monit\u3092\u52d5\u304b\u3059(Nginx\u3068PHP(hhvm)\u3068MySQL)\n\n\nStep7 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u306e\u8a2d\u5b9a\n\u3053\u308c\u3067\u3060\u3044\u305f\u3044\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7269\u306f\u5165\u3063\u305f\u306f\u305a\u306a\u306e\u3067\u3042\u3068\u306f\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3002\n\u3053\u3061\u3089\u306f\u305d\u308c\u305e\u308c\u3060\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\uff08\u305d\u306e\u3046\u3061\u66f8\u304f\u304b\u3082\uff1f\uff09\n\n\nStep8 \u6700\u5f8c\u306b\u30b3\u30df\u30c3\u30c8\n\u307e\u305a\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u629c\u3051\u308b\u306e\u3067ctrl+q\u3092\u3057\u307e\u3059\u3002\ndocker ps \u3092\u4f7f\u7528\u3057\u30b3\u30f3\u30c6\u30caID\u3092\u8abf\u3079\u307e\u3059\u3002\nbash-4.2#\n(ctrl + q)\n\n$ docker ps -a\n\n\u30b3\u30df\u30c3\u30c8\u3092\u884c\u3044\u30bf\u30b0\u3092\u3064\u3051\u307e\u3059\u3002containerName,imageName\u306f\u9069\u5f53\u306b\u3064\u3051\u3066\u304f\u3060\u3055\u3044\u3002\n$ docker commit \u30b3\u30f3\u30c6\u30caID containerName\n$ docker tag containerName [\u81ea\u5206\u306eEc2 Container Service\u306e\u30ec\u30dd\u30b8\u30c8\u30ea]:imageName\n\nPush\u3057\u307e\u3059\u3002\n$ docker push [\u81ea\u5206\u306eEc2 Container Service\u306e\u30ec\u30dd\u30b8\u30c8\u30ea]:imageName\nThe push refers to a repository [\u81ea\u5206\u306eEc2 Container Service\u306e\u30ec\u30dd\u30b8\u30c8\u30ea]\na9a8a5248aca: Pushed \nb7f26e1ed260: Layer already exists \nfcce637aae97: Layer already exists \nimageName: digest: sha256:XXXXXXXXXXX size: 5314\n\n\n\u3042\u3068\u304c\u304d\n\u6b21\u56de\u8d77\u52d5\u3059\u308b\u6642\u306f\u4ee5\u4e0b\u3067\u8d77\u52d5\u3057\u3066\u4e0b\u3055\u3044\u3002\n$ docker run -i -d -p 8080:80 -p 10022:22 -t [\u81ea\u5206\u306eEc2 Container Service\u306e\u30ec\u30dd\u30b8\u30c8\u30ea]/test/repo:base-set1\n\npull\u3057\u3066\u3068\u3063\u3066\u304d\u305f\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u304b\u306a\u3002\n$ docker run -i -d -p 8080:80 -p 10022:22 -t [\u81ea\u5206\u306eEc2 Container Service\u306e\u30ec\u30dd\u30b8\u30c8\u30ea]:imageName\n\nWeb\u306f\u4ee5\u4e0b\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\nhttps://localhost:8080 \n\u307e\u305fSSH\u30a2\u30af\u30bb\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3068\u306a\u308a\u307e\u3059\u3002\n$ ssh -p 10022 -i id_rsa devel@localhost\n\n\n\u305d\u306e\u4ed6\n\u53c2\u8003\nAmazon Linux\u304c\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u306e\u3067\u3001Mac\u3067\u52d5\u304b\u3057\u3066\u307f\u305f\u3002\n/etc/sysconfig/network: No such file or directory\nMonit\u3067SSH,Nginx,MySQL\u306e\u30b5\u30fc\u30d3\u30b9\u6b7b\u6d3b\u76e3\u8996\u3092\u884c\u3046Chef Cookbook\nDocker\u3067monit\u3092\u52d5\u304b\u3059(Nginx\u3068PHP(hhvm)\u3068MySQL)\n\n\u4fee\u6b63\u5c65\u6b74\n2016/12/01 \u898b\u8fd4\u3057\u3066\u5c11\u3057\u308f\u304b\u308a\u305a\u3089\u304b\u3063\u305f\u306e\u3067\u4fee\u6b63\u3002\n## \u306f\u3058\u3081\u306b\nDocker\u3092\u4f7f\u7528\u3057\u3066AmazonLinux\u306e\u958b\u767a\u74b0\u5883\uff08Nginx+PHP56+PHP-fpm-5.6\uff09\u3092\u4f5c\u308d\u3046\u3068\u3057\u305f\u969b\u306e\u81ea\u5206\u306e\u30e1\u30e2\u306b\u306a\u308a\u307e\u3059\u3002\n\u6700\u7d42\u7684\u306b\u306fEc2 Container Service\u3067\u30ec\u30dd\u30b8\u30c8\u30ea\u306e\u767b\u9332\u307e\u3067\u884c\u3044\u307e\u3059\u3002\n\u203b\u4eca\u56de\u306e\u76ee\u6a19\u306fvagrant\u3068\u540c\u3058\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u3092\u60f3\u5b9a\u3057\u307e\u3059\u3002\n\n\u74b0\u5883\n MAC 10.10.5\n Docker V 1.12.3-beta30\n\n\u524d\u63d0\n AWS CLI\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n Ec2 Container Service\u3067\u30ec\u30dd\u30b8\u30c8\u30ea\u306e\u4f5c\u6210\n\n## \u6982\u8981\n\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\u308f\u304b\u308a\u3084\u3059\u304f\u3066\u611f\u8b1d\u3067\u3059\u3002\n[\u53c2\u8003\u30ea\u30f3\u30af\uff1aAmazon Linux\u304c\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u306e\u3067\u3001Mac\u3067\u52d5\u304b\u3057\u3066\u307f\u305f\u3002](http://qiita.com/taishin/items/1305d4f97ffe08e24bb0)\n\n----\n#### Step1 \u30ed\u30b0\u30a4\u30f3\n\u3068\u308a\u3042\u3048\u305aAmazonLinux\u306e\u30a4\u30e1\u30fc\u30b8\u3092Pull\u3059\u308b\u70ba\u306b\u30ed\u30b0\u30a4\u30f3\u3092\u3057\u307e\u3059\u3002\n\n```\n$ aws ecr get-login --region ap-northeast-1 --registry-ids 137112412989\n\ndocker login -u AWS -p XXXXXXXXXX\uff08\u7701\u7565\uff01\uff09 -e none https://137112412989.dkr.ecr.ap-northeast-1.amazonaws.com\n\n```\n\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u70ba\u306e\u60c5\u5831\u304c\u3067\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u5185\u5bb9\u3092\u30b3\u30d4\u30da\u3057\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\n$docker login -u AWS -p XXXXXXXXXX\uff08\u7701\u7565\uff01\uff09 -e none https://137112412989.dkr.ecr.ap-northeast-1.amazonaws.com\nFlag --email has been deprecated, will be removed in 1.13.\nLogin Succeeded\n```\n\u3053\u308c\u3067\u30ed\u30b0\u30a4\u30f3\u5b8c\u4e86\u3067\u3059\u3002\n\n----\n#### Step2 Docker\u306e\u30a4\u30e1\u30fc\u30b8\u3092pull\nDocker \u306e\u30a4\u30e1\u30fc\u30b8\u3092Pull\u3057\u307e\u3059\u3002\n\n```\n$ docker pull 137112412989.dkr.ecr.ap-northeast-1.amazonaws.com/amazonlinux:latest  \nlatest: Pulling from amazonlinux\ne2daa1633485: Pull complete \nDigest: sha256:939657b06a824c58f1532b104ba423c0c5efc16552c01427d96e9da20f8b2680\nStatus: Downloaded newer image for 137112412989.dkr.ecr.ap-northeast-1.amazonaws.com/amazonlinux:latest\n$ docker images   \nREPOSITORY                                                      TAG                 IMAGE ID            CREATED             SIZE\n137112412989.dkr.ecr.ap-northeast-1.amazonaws.com/amazonlinux   latest              feee9aea7094        11 days ago         328.3 MB\n```\n\n\n----\n#### Step3 Docker\u306e\u30a4\u30e1\u30fc\u30b8\u306e\u8d77\u52d5\nDocker\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```\n$ docker run -it 137112412989.dkr.ecr.ap-northeast-1.amazonaws.com/amazonlinux:latest /bin/bash\nbash-4.2# \n```\n\n----\n#### Step4 SSH\u7b49\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nDockerfile\u3067build\u3059\u308c\u3070\u3044\u3044\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u624b\u52d5\u3067\u3084\u308a\u307e\u3059\u3002\n\u306a\u3093\u3068\u306a\u304f\u3088\u304f\u4f7f\u3063\u3066\u3044\u308b\u306e\u3092\u5165\u308c\u3068\u304d\u307e\u3059\u3002\n\n```\n$ yum -y install openssh-server openssh vim wget\n```\n\n\u3064\u3044\u3067\u306bec2-user\u3068\u540c\u3058\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306a\u30e6\u30fc\u30b6\u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```\nbash-4.2# useradd -g nginx -s /bin/bash devel\nbash-4.2# yum -y install sudo\nLoaded plugins: priorities, update-motd, upgrade-helper\namzn-main/latest                                                                                           | 2.1 kB     00:00     \namzn-updates/latest                                                                                        | 2.3 kB     00:00     \nResolving Dependencies\n--> Running transaction check\n\uff1a\nDependency Installed:\n  vim-minimal.x86_64 2:7.4.1967-1.42.amzn1                                                                                        \n\nComplete!\nbash-4.2# echo \"# devel \" > /etc/sudoers.d/devel\nbash-4.2# echo \"devel ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/devel\nbash-4.2# su - devel\nLast login: Fri Nov 11 02:17:54 UTC 2016 on console\n[devel@e17d83813adc ~]$ sudo su -\n-bash-4.2# \n\n```\n\nPEM\u3067\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```\n[devel@e17d83813adc ~]$ ssh-keygen -t rsa\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/home/devel/.ssh/id_rsa): \nCreated directory '/home/devel/.ssh'.\nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in /home/devel/.ssh/id_rsa.\nYour public key has been saved in /home/devel/.ssh/id_rsa.pub.\nThe key fingerprint is:\ndf:f9:aa:9a:d8:bc:14:b5:03:8f:3f:eb:bc:f8:c8:f2 devel@e17d83813adc\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|                 |\n|                 |\n|        . .      |\n|         = .     |\n|        S +      |\n|         + o .   |\n|        . + o    |\n|      .* = o .   |\n|      .oE=Bo...  |\n+-----------------+\n[devel@e17d83813adc .ssh]$ ls\nid_rsa  id_rsa.pub\n[devel@e17d83813adc .ssh]$ mv id_rsa.pub authorized_keys\n\n```\n\n\u203bid_rsa\u304cpem\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n----\n#### Step5 PHP\u30fbnginx\u30fbmysql\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nDockerfile\u3067build\u3059\u308c\u3070\u3044\u3044\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u624b\u52d5\u3067\u3084\u308a\u307e\u3059\u3002\n\n```\nbash-4.2# yum install php56 php56-mbstring php56-pdo php56-ldap php56-xml php56-mcrypt php56-gd php56-imap php56-pecl-imagick php56-pecl-apc php56-jsonc php56-fpm php56-mysqlnd curl-devel mysql-server mysql nginx\n```\n\n\u3061\u306a\u307f\u306bnginx\u306f\u3053\u306e\u307e\u307e\u3060\u3068\u8d77\u52d5\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u4ee5\u4e0b\u306e\u8ffd\u52a0\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u53c2\u8003\n[/etc/sysconfig/network: No such file or directory](http://qiita.com/mats116/items/59615a169a45884c2548)\n\n```\n-bash-4.2# echo \"NETWORKING=yes\" >/etc/sysconfig/network\n```\n\n----\n#### Step6 monit \u8a2d\u5b9a\n\u3053\u306e\u307e\u307e\u8d77\u52d5\u3057\u3066\u3082chkconfig\u306e\u8a2d\u5b9a\u306f\u7121\u52b9\u306a\u306e\u3067monit\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30e2\u30f3\u306e\u5e38\u99d0\u3055\u305b\u307e\u3059\u3002\n\n```\nbash-4.2# yum install monit\n```\n\nnginx,mysqld,sshd,php-fpm-5.6\u3092\u76e3\u8996\u3055\u305b\u8d77\u52d5\u3055\u305b\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n```\nbash-4.2# cat /etc/monit.d/sshd.conf\ncheck process sshd\n    with pidfile \"/var/run/sshd.pid\"\n    start program \"/etc/init.d/sshd start\"\n    stop program \"/etc/init.d/sshd stop\"\n    if failed port 22 protocol ssh then restart\n    if 5 restart within 5 cycles then alert\nbash-4.2# cat /etc/monit.d/nginx.conf\ncheck process nginx\n    with pidfile \"/var/run/nginx.pid\"\n    start program \"/etc/init.d/nginx start\"\n    stop program \"/etc/init.d/nginx stop\"\n    if failed port 80 protocol http\n       then restart\n    group nginx \nbash-4.2# cat /etc/monit.d/mysqld.conf\ncheck process mysqld\n    with pidfile \"/var/run/mysqld/mysqld.pid\"\n    start program \"/etc/init.d/mysqld start\"\n    stop program \"/etc/init.d/mysqld stop\"\n    if failed unixsocket /var/lib/mysql/mysql.sock then restart\n    if 5 restarts within 5 cycles then timeout\nbash-4.2# cat /etc/monit.d/php-fpm-5.6.conf\ncheck process php-fpm-5.6\n    with pidfile /var/run/php-fpm/php-fpm-5.6.pid\n    start program = \"/etc/init.d/php-fpm-5.6 start\" with timeout 60 seconds\n    stop program  = \"/etc/init.d/php-fpm-5.6 stop\"\n    if failed unixsocket /var/run/php-fpm/php-fpm.sock then restart\n    if 5 restarts within 5 cycles then timeout\n```\n\n\u8d77\u52d5\u7528\u306e\u30b7\u30a7\u30eb\u3092\u66f8\u304d\u3001docker\u8d77\u52d5\u6642\u306b\u305d\u308c\u3092\u8aad\u307e\u305b\u308b\u3002\n\u203brm\u306f\u3057\u306a\u304f\u3066\u3082OK\u3002\u30a4\u30e1\u30fc\u30b8\u4fdd\u5b58\u3057\u305f\u6642\u306b\u8d77\u52d5\u3057\u3066\u305f\u306e\u3067\u5b58\u5728\u3057\u3066\u305f\u3060\u3051\u3067\u3059\u30fb\u30fb\u30fb\n\n```\nbash-4.2# cat /bin/init \n#!/bin/bash\nrm -fr /var/run/php-fpm/php-fpm-5.6.pid\nrm -fr /var/run/php-fpm/php-fpm.sock \n/sbin/service monit start\n/bin/bash\nbash-4.2# chmod 755 /bin/init \n```\n\n\n\u53c2\u8003\n[Monit\u3067SSH,Nginx,MySQL\u306e\u30b5\u30fc\u30d3\u30b9\u6b7b\u6d3b\u76e3\u8996\u3092\u884c\u3046Chef Cookbook](http://easyramble.com/chef-monit-ssh-nginx-mysql.html)\n[Docker\u3067monit\u3092\u52d5\u304b\u3059(Nginx\u3068PHP(hhvm)\u3068MySQL)](http://easyramble.com/chef-monit-ssh-nginx-mysql.html)\n\n----\n#### Step7 \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u306e\u8a2d\u5b9a\n\u3053\u308c\u3067\u3060\u3044\u305f\u3044\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7269\u306f\u5165\u3063\u305f\u306f\u305a\u306a\u306e\u3067\u3042\u3068\u306f\u8a2d\u5b9a\u3059\u308b\u3060\u3051\u3002\n\u3053\u3061\u3089\u306f\u305d\u308c\u305e\u308c\u3060\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\uff08\u305d\u306e\u3046\u3061\u66f8\u304f\u304b\u3082\uff1f\uff09\n\n----\n#### Step8 \u6700\u5f8c\u306b\u30b3\u30df\u30c3\u30c8\n\n\u307e\u305a\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u629c\u3051\u308b\u306e\u3067ctrl+q\u3092\u3057\u307e\u3059\u3002\ndocker ps \u3092\u4f7f\u7528\u3057\u30b3\u30f3\u30c6\u30caID\u3092\u8abf\u3079\u307e\u3059\u3002\n\n```\nbash-4.2#\n(ctrl + q)\n\n$ docker ps -a\n```\n\n\u30b3\u30df\u30c3\u30c8\u3092\u884c\u3044\u30bf\u30b0\u3092\u3064\u3051\u307e\u3059\u3002containerName,imageName\u306f\u9069\u5f53\u306b\u3064\u3051\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\n$ docker commit \u30b3\u30f3\u30c6\u30caID containerName\n$ docker tag containerName [\u81ea\u5206\u306eEc2 Container Service\u306e\u30ec\u30dd\u30b8\u30c8\u30ea]:imageName\n```\n\nPush\u3057\u307e\u3059\u3002\n\n```\n$ docker push [\u81ea\u5206\u306eEc2 Container Service\u306e\u30ec\u30dd\u30b8\u30c8\u30ea]:imageName\nThe push refers to a repository [\u81ea\u5206\u306eEc2 Container Service\u306e\u30ec\u30dd\u30b8\u30c8\u30ea]\na9a8a5248aca: Pushed \nb7f26e1ed260: Layer already exists \nfcce637aae97: Layer already exists \nimageName: digest: sha256:XXXXXXXXXXX size: 5314\n```\n\n\n## \u3042\u3068\u304c\u304d\n\u6b21\u56de\u8d77\u52d5\u3059\u308b\u6642\u306f\u4ee5\u4e0b\u3067\u8d77\u52d5\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n```\n$ docker run -i -d -p 8080:80 -p 10022:22 -t [\u81ea\u5206\u306eEc2 Container Service\u306e\u30ec\u30dd\u30b8\u30c8\u30ea]/test/repo:base-set1\n```\n\npull\u3057\u3066\u3068\u3063\u3066\u304d\u305f\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u304b\u306a\u3002\n\n```\n$ docker run -i -d -p 8080:80 -p 10022:22 -t [\u81ea\u5206\u306eEc2 Container Service\u306e\u30ec\u30dd\u30b8\u30c8\u30ea]:imageName\n```\n\nWeb\u306f\u4ee5\u4e0b\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002\nhttps://localhost:8080 \n\n\u307e\u305fSSH\u30a2\u30af\u30bb\u30b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3068\u306a\u308a\u307e\u3059\u3002\n\n```\n$ ssh -p 10022 -i id_rsa devel@localhost\n```\n\n## \u305d\u306e\u4ed6\n\u53c2\u8003\n[Amazon Linux\u304c\u30b3\u30f3\u30c6\u30ca\u5316\u3055\u308c\u305f\u306e\u3067\u3001Mac\u3067\u52d5\u304b\u3057\u3066\u307f\u305f\u3002](http://qiita.com/taishin/items/1305d4f97ffe08e24bb0)\n[/etc/sysconfig/network: No such file or directory](http://qiita.com/mats116/items/59615a169a45884c2548)\n[Monit\u3067SSH,Nginx,MySQL\u306e\u30b5\u30fc\u30d3\u30b9\u6b7b\u6d3b\u76e3\u8996\u3092\u884c\u3046Chef Cookbook](http://easyramble.com/chef-monit-ssh-nginx-mysql.html)\n[Docker\u3067monit\u3092\u52d5\u304b\u3059(Nginx\u3068PHP(hhvm)\u3068MySQL)](http://easyramble.com/chef-monit-ssh-nginx-mysql.html)\n\n#### \u4fee\u6b63\u5c65\u6b74\n2016/12/01 \u898b\u8fd4\u3057\u3066\u5c11\u3057\u308f\u304b\u308a\u305a\u3089\u304b\u3063\u305f\u306e\u3067\u4fee\u6b63\u3002\n", "tags": ["AWS", "docker", "ECS"]}