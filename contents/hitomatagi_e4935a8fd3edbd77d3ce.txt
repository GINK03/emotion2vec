{"context": "\n\n\u6982\u8981\nAWS\u306eDynamoDB\u306eNode.js\u306e API\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u306b\u306f\u3001\u8907\u96d1\u306a\u69cb\u9020\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u95a2\u3059\u308b\u660e\u5feb\u306a\u30b5\u30f3\u30d7\u30eb\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u4ee5\u4e0b\u3001\u66f8\u304d\u65b9\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n\u4e8b\u524d\u6e96\u5099\n\n\u25a0 \u30c7\u30fc\u30bf\u69cb\u9020\nWeightManagement\u30c6\u30fc\u30d6\u30eb\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u69cb\u9020\u3067\u3059\u3002\nData\u306eMap\u3068Meal\u306eList\u3092\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\u25a0 \u30c6\u30fc\u30d6\u30eb\u306e\u30b9\u30ad\u30fc\u30de\u3092\u5b9a\u7fa9\u3059\u308bLambda\n\ncreateTableLambda.js\nexports.handler = (event, context, callback) => {\n    \"use strict\";\n\n    const AWS = require('aws-sdk');\n    let dynamodb = new AWS.DynamoDB();\n\n    let params = {\n        TableName : \"WeightManagement\",\n        KeySchema: [       \n            { AttributeName: \"Name\", KeyType: \"HASH\" },  //Partition key\n            { AttributeName: \"Season\", KeyType: \"RANGE\" }  //Sort key\n        ],\n        AttributeDefinitions: [       \n            { AttributeName: \"Name\", AttributeType: \"S\" },\n            { AttributeName: \"Season\", AttributeType: \"S\" }\n        ],\n        ProvisionedThroughput: {       \n            ReadCapacityUnits: 1, \n            WriteCapacityUnits: 1\n        }\n    };\n\n    dynamodb.createTable(params, function(err, data) {\n        if (err) {\n            callback(err, null);\n        }\n        else {\n            callback(null, data);\n        }\n    });\n};\n\n\n\n\u25a0 \u30ed\u30fc\u30eb\u3092\u5b9a\u7fa9\n\uff1c\u30a2\u30ab\u30a6\u30f3\u30c8\uff29\uff24\uff1e\u306f\u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4e0b\u8a18\u3067\u306f\u3001DynamoDB\u306b\u5bfe\u3059\u308b\u3059\u3079\u3066\u306e\u64cd\u4f5c\u3092\u8a31\u53ef\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u9650\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\ndynamodb-full-access.policy\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1486281528000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"dynamodb:*\"\n            ],\n            \"Resource\": [\n                \"arn:aws:dynamodb:ap-northeast-1:\uff1c\u30a2\u30ab\u30a6\u30f3\u30c8\uff29\uff24\uff1e:table/*\"\n            ]\n        }\n    ]\n}\n\n\n\nDynamoDB\u3067putItem()\u3059\u308b\u65b9\u6cd5\n\n\u25a0 Lambda\u3092\u5b9a\u7fa9\n\nputItem.js\nexports.handler = (event, context, callback) => {\n    \"use strict\";\n\n    const AWS = require('aws-sdk');\n    let dynamodb = new AWS.DynamoDB();\n\n    let params = {\n        TableName: \"WeightManagement\",\n        Item: {\n            \"Name\": {\n                S: \"Yamada Taro\"\n            }, \n            \"Season\": {\n                S: \"Winter\"\n            },\n            \"Data\" : {\n                M: {\n                    \"Period\": {\n                        S: \"Morning\"\n                    },\n                    \"Weight\": {\n                        N: \"62.3\"\n                    },\n                    \"Note\": {\n                        S: \"Before breakfast.\"\n                    }\n                }\n            },\n            \"Meal\": {\n                L: [\n                    {\n                        M: {\n                            \"Food\": {\n                                S: \"Cookies\"\n                            },\n                            \"Drink\": {\n                                S: \"Caffee\"\n                            },\n                            \"Calorie\": {\n                                N: \"350\"\n                            }\n                        }\n                    },\n                    {\n                        M: {\n                            \"Food\": {\n                                S: \"Cake\"\n                            },\n                            \"Drink\": {\n                                S: \"Tea\"\n                            },\n                            \"Calorie\": {\n                                N: \"520\"\n                            }\n                        }\n                    }\n                ]\n            }\n        }, \n        ReturnConsumedCapacity: \"TOTAL\"\n    };\n\n    dynamodb.putItem(params, function(err, data) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, data);\n        }\n    });\n};\n\n\n\n\u25a0 \u7d50\u679c\nDynamoDB\u306eWeightManagement\u30c6\u30fc\u30d6\u30eb\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bItem\u304c\u683c\u7d0d\u3055\u308c\u307e\u3057\u305f\u3002\n\n\nDocumentClient\u3067put()\u3059\u308b\u65b9\u6cd5\n\n\u25a0 Lambda\u3092\u5b9a\u7fa9\n\u3053\u3061\u3089\u306e\u307b\u3046\u304c\u7c21\u5358\u3067\u3059\u3002\n\ndocClientPut.js\nexports.handler = (event, context, callback) => {\n    \"use strict\";\n\n    const AWS = require('aws-sdk');\n    let docClient = new AWS.DynamoDB.DocumentClient();\n\n    let params = {\n        TableName: \"WeightManagement\",\n        Item: {\n            Name: \"Sato Hanako\", \n            Season: \"Summer\",\n            Data : {\n                Period: \"Morning\",\n                Weight: 52.3,\n                Note: \"Before breakfast.\"\n            },\n            Meal: [\n                {\n                    Food: \"Cookies\",\n                    Drink: \"Caffee\",\n                    Calorie: 350\n                },\n                {\n                    Food: \"Cake\",\n                    Drink: \"Tea\",\n                    Calorie: 520\n                }\n            ]\n        }, \n        ReturnConsumedCapacity: \"TOTAL\"\n    };\n\n    docClient.put(params, function(err, data) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, data);\n        }\n    });\n};\n\n\n\n\u25a0 \u7d50\u679c\n\u5148\u307b\u3069\u3068\u540c\u69d8\u306e\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n# \u6982\u8981\nAWS\u306eDynamoDB\u306eNode.js\u306e [API\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](http://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/DynamoDB.html) \u306b\u306f\u3001\u8907\u96d1\u306a\u69cb\u9020\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u95a2\u3059\u308b\u660e\u5feb\u306a\u30b5\u30f3\u30d7\u30eb\u304c\u63b2\u8f09\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u4ee5\u4e0b\u3001\u66f8\u304d\u65b9\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n# \u4e8b\u524d\u6e96\u5099\n#### \u25a0 \u30c7\u30fc\u30bf\u69cb\u9020\nWeightManagement\u30c6\u30fc\u30d6\u30eb\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u69cb\u9020\u3067\u3059\u3002\nData\u306eMap\u3068Meal\u306eList\u3092\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002\n![WeightManagement.png](https://qiita-image-store.s3.amazonaws.com/0/107056/266e14df-6416-945c-f275-5663026ee268.png)\n\n#### \u25a0 \u30c6\u30fc\u30d6\u30eb\u306e\u30b9\u30ad\u30fc\u30de\u3092\u5b9a\u7fa9\u3059\u308bLambda\n\n```createTableLambda.js\nexports.handler = (event, context, callback) => {\n    \"use strict\";\n    \n    const AWS = require('aws-sdk');\n    let dynamodb = new AWS.DynamoDB();\n    \n    let params = {\n        TableName : \"WeightManagement\",\n        KeySchema: [       \n            { AttributeName: \"Name\", KeyType: \"HASH\" },  //Partition key\n            { AttributeName: \"Season\", KeyType: \"RANGE\" }  //Sort key\n        ],\n        AttributeDefinitions: [       \n            { AttributeName: \"Name\", AttributeType: \"S\" },\n            { AttributeName: \"Season\", AttributeType: \"S\" }\n        ],\n        ProvisionedThroughput: {       \n            ReadCapacityUnits: 1, \n            WriteCapacityUnits: 1\n        }\n    };\n    \n    dynamodb.createTable(params, function(err, data) {\n        if (err) {\n            callback(err, null);\n        }\n        else {\n            callback(null, data);\n        }\n    });\n};\n```\n\n#### \u25a0 \u30ed\u30fc\u30eb\u3092\u5b9a\u7fa9\n\uff1c\u30a2\u30ab\u30a6\u30f3\u30c8\uff29\uff24\uff1e\u306f\u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4e0b\u8a18\u3067\u306f\u3001DynamoDB\u306b\u5bfe\u3059\u308b\u3059\u3079\u3066\u306e\u64cd\u4f5c\u3092\u8a31\u53ef\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u9650\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```dynamodb-full-access.policy\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1486281528000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"dynamodb:*\"\n            ],\n            \"Resource\": [\n                \"arn:aws:dynamodb:ap-northeast-1:\uff1c\u30a2\u30ab\u30a6\u30f3\u30c8\uff29\uff24\uff1e:table/*\"\n            ]\n        }\n    ]\n}\n```\n\n# DynamoDB\u3067putItem()\u3059\u308b\u65b9\u6cd5\n#### \u25a0 Lambda\u3092\u5b9a\u7fa9\n\n```putItem.js\nexports.handler = (event, context, callback) => {\n    \"use strict\";\n    \n    const AWS = require('aws-sdk');\n    let dynamodb = new AWS.DynamoDB();\n\n    let params = {\n        TableName: \"WeightManagement\",\n        Item: {\n            \"Name\": {\n                S: \"Yamada Taro\"\n            }, \n            \"Season\": {\n                S: \"Winter\"\n            },\n            \"Data\" : {\n                M: {\n                    \"Period\": {\n                        S: \"Morning\"\n                    },\n                    \"Weight\": {\n                        N: \"62.3\"\n                    },\n                    \"Note\": {\n                        S: \"Before breakfast.\"\n                    }\n                }\n            },\n            \"Meal\": {\n                L: [\n                    {\n                        M: {\n                            \"Food\": {\n                                S: \"Cookies\"\n                            },\n                            \"Drink\": {\n                                S: \"Caffee\"\n                            },\n                            \"Calorie\": {\n                                N: \"350\"\n                            }\n                        }\n                    },\n                    {\n                        M: {\n                            \"Food\": {\n                                S: \"Cake\"\n                            },\n                            \"Drink\": {\n                                S: \"Tea\"\n                            },\n                            \"Calorie\": {\n                                N: \"520\"\n                            }\n                        }\n                    }\n                ]\n            }\n        }, \n        ReturnConsumedCapacity: \"TOTAL\"\n    };\n     \n    dynamodb.putItem(params, function(err, data) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, data);\n        }\n    });\n};\n```\n\n#### \u25a0 \u7d50\u679c\nDynamoDB\u306eWeightManagement\u30c6\u30fc\u30d6\u30eb\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bItem\u304c\u683c\u7d0d\u3055\u308c\u307e\u3057\u305f\u3002\n\n![ComplexSchema.png](https://qiita-image-store.s3.amazonaws.com/0/107056/64749a4d-b443-17ec-36b8-5cd60036626c.png)\n\n# DocumentClient\u3067put()\u3059\u308b\u65b9\u6cd5\n#### \u25a0 Lambda\u3092\u5b9a\u7fa9\n\u3053\u3061\u3089\u306e\u307b\u3046\u304c\u7c21\u5358\u3067\u3059\u3002\n\n```docClientPut.js\nexports.handler = (event, context, callback) => {\n    \"use strict\";\n    \n    const AWS = require('aws-sdk');\n    let docClient = new AWS.DynamoDB.DocumentClient();\n\n    let params = {\n        TableName: \"WeightManagement\",\n        Item: {\n            Name: \"Sato Hanako\", \n            Season: \"Summer\",\n            Data : {\n                Period: \"Morning\",\n                Weight: 52.3,\n                Note: \"Before breakfast.\"\n            },\n            Meal: [\n                {\n                    Food: \"Cookies\",\n                    Drink: \"Caffee\",\n                    Calorie: 350\n                },\n                {\n                    Food: \"Cake\",\n                    Drink: \"Tea\",\n                    Calorie: 520\n                }\n            ]\n        }, \n        ReturnConsumedCapacity: \"TOTAL\"\n    };\n     \n    docClient.put(params, function(err, data) {\n        if (err) {\n            callback(err);\n        } else {\n            callback(null, data);\n        }\n    });\n};\n```\n\n#### \u25a0 \u7d50\u679c\n\u5148\u307b\u3069\u3068\u540c\u69d8\u306e\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n![ComplexSchema_2.png](https://qiita-image-store.s3.amazonaws.com/0/107056/465a33ec-f674-31e6-0e82-6f36d172b6af.png)\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n", "tags": ["AWS", "DynamoDB", "Node.js", "lambda"]}