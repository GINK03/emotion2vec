{"context": "\n\n1.\u3000\u306f\u3058\u3081\u306b\n\u3000Python\u306e\u914d\u5217\u306e\u672b\u5c3e\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u306f\uff0c\u3044\u304f\u3064\u304b\u3042\u308a\uff0clist\u578b\u3084numpy\u306endarray\u578b\u306e\u3069\u3061\u3089\u3092\u4f7f\u3046\u304b\u3067\u65b9\u6cd5\u306f\u7570\u306a\u308b\uff0e\n\u3000\u3053\u308c\u3089\u306e\u65b9\u6cd5\u3067\uff0c\u5b9f\u884c\u901f\u5ea6\u306b\u3069\u308c\u3060\u3051\u9055\u3044\u304c\u3067\u308b\u306e\u304b\u7591\u554f\u306b\u601d\u3063\u305f\u306e\u3067\uff0c\u304b\u308b\u30fc\u304f\u3060\u304c\u8abf\u3079\u3066\u307f\u305f\u3089\uff0clist\u578b\u306b\u5bfe\u3059\u308bappend\u306e\u6bd4\u8f03\u306e\u307f\u898b\u3064\u304b\u3063\u305f\uff08\u30ea\u30b5\u30fc\u30c1\u4e0d\u8db3\u3060\u3063\u305f\u3089\u3054\u3081\u3093\u306a\u3055\u3044\uff09\uff0e\n \u3000\u305d\u3053\u3067\uff0c\u6b21\u7bc0\u306b\u793a\u30593\u3064\u306e\u914d\u5217\u306b\u5bfe\u3059\u308b\u8981\u7d20\u8ffd\u52a0\u306e\u65b9\u6cd5\u306e\u5b9f\u884c\u901f\u5ea6\u3092\u7c21\u5358\u306a\u5b9f\u9a13\u3067\u8abf\u3079\u3066\u307f\u308b\uff0e\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u56de\u6570\u306f\uff0c10\u4e07\u56de\u3068\u3057\uff0c\u6642\u9593\u8a08\u6e2c\u306b\u306f\uff0ctime\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u305f\uff0e\u5b9f\u9a13\u306b\u4f7f\u7528\u3057\u305f\u30b3\u30fc\u30c9\u306f\uff0c\u3044\u3061\u3070\u3093\u6700\u5f8c\u306b\u306e\u305b\u3066\u304a\u304f\uff0e\n\n2.\u3000\u914d\u5217\u306b\u5bfe\u3059\u308b\u8981\u7d20\u8ffd\u52a0\u306e\u65b9\u6cd5\n\n2.1\u3000list\u578b\u306b\u5bfe\u3059\u308b\u65b9\u6cd5\nlist.append\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\uff0e\n\u3053\u308c\u306f\uff0cPython\u306b\u6a19\u6e96\u3067\u7d44\u307f\u8fbc\u307e\u308c\u308b\u65b9\u6cd5\u3067\uff0cPython\u306e\u521d\u5fc3\u8005\u3067\u3082\u3088\u304f\u4f7f\u3046\u65b9\u6cd5\u306e\u306f\u305a\uff0e\nx = []\nfor i in range( 10 ):\n    x.append( i )\n\n\n2.2\u3000ndarray\u306b\u5bfe\u3059\u308b\u65b9\u6cd5\uff11\nnumpy.append\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\uff0e\nimport numpy as np\nx = np.array( [] )\nfor i in range( 10 ):\n    x = np.append( x, i )\n\n\n2.3 ndarray\u306b\u5bfe\u3059\u308b\u65b9\u6cd5\uff12\nnumpy.hstack\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\uff0e\nimport numpy as np\nx = np.array( [] )\nfor i in range( 10 ):\n    x = np.hstack( (x,i) )\n\n\n3\u3000\u7d50\u679c\n\n\n\n\n\u5b9f\u884c\u6642\u9593\uff08\u79d2\uff09\n\n\n\n\nlist.append\n0.0149400234222\n\n\nnumpy.append\n4.47969698906\n\n\nnumpy.hstack\n4.75327301025\n\n\n\n\u82e5\u5e72\u4e88\u60f3\u306f\u3057\u3066\u3044\u305f\u304c\uff0clist.append\u304c\u5727\u5012\u7684\u306b\u65e9\u3044\uff0e\n\u305d\u3057\u3066\uff0cnumpy.append\u3068numpy.hstack\u306f\u901f\u5ea6\u5dee\u304c\u51fa\u3066\u3044\u306a\u3044\uff0e\n\u3084\u306f\u308a\uff0c\u4e88\u3081\u5fc5\u8981\u306a\u914d\u5217\u306e\u5927\u304d\u3055\u304c\u5206\u304b\u3063\u3066\u3044\u308b\u306e\u306a\u3089\uff0cndarray\u3092\uff0c\u305d\u3046\u3067\u306a\u3051\u308c\u3070list\u3092\u4f7f\u3046\u3068\u3044\u3046\u306e\u304c\u6b63\u89e3\u3067\u3088\u3044\u307f\u305f\u3044\uff0e\n\n4\u3000\u5b9f\u9a13\u306b\u4f7f\u7528\u3057\u305f\u30b3\u30fc\u30c9\nimport numpy as np\n\ndef stdAppend(n):\n    x = []\n    for i in range(n):\n        x.append(i)\n    return\n\ndef npAppend(n):\n    x = np.array( [] )\n    for i in range(n):\n        x = np.append(x,i)\n    return\n\ndef npHstack(n):\n    x = np.array( [] )\n    for i in range(n):\n        x = np.hstack( (x,i) )\n    return\n\nif __name__ == '__main__':\n    import time\n\n    n = 100000\n\n    start = time.time()\n    stdAppend(n)\n    ttime = time.time() - start\n    print( \"stdAppend: %s\" % ttime )\n\n    start = time.time()\n    npAppend(n)\n    ttime = time.time() - start\n    print( \"npAppend : %s\" % ttime )\n\n    start = time.time()\n    npHstack(n)\n    ttime = time.time() - start\n    print( \"npHstack : %s\" % ttime )\n\n\n# 1.\u3000\u306f\u3058\u3081\u306b\n\n\u3000Python\u306e\u914d\u5217\u306e\u672b\u5c3e\u306b\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u306f\uff0c\u3044\u304f\u3064\u304b\u3042\u308a\uff0clist\u578b\u3084numpy\u306endarray\u578b\u306e\u3069\u3061\u3089\u3092\u4f7f\u3046\u304b\u3067\u65b9\u6cd5\u306f\u7570\u306a\u308b\uff0e\n\u3000\u3053\u308c\u3089\u306e\u65b9\u6cd5\u3067\uff0c\u5b9f\u884c\u901f\u5ea6\u306b\u3069\u308c\u3060\u3051\u9055\u3044\u304c\u3067\u308b\u306e\u304b\u7591\u554f\u306b\u601d\u3063\u305f\u306e\u3067\uff0c\u304b\u308b\u30fc\u304f\u3060\u304c\u8abf\u3079\u3066\u307f\u305f\u3089\uff0c[list\u578b\u306b\u5bfe\u3059\u308bappend\u306e\u6bd4\u8f03](http://nonbiri-tereka.hatenablog.com/entry/2014/10/20/110304)\u306e\u307f\u898b\u3064\u304b\u3063\u305f\uff08\u30ea\u30b5\u30fc\u30c1\u4e0d\u8db3\u3060\u3063\u305f\u3089\u3054\u3081\u3093\u306a\u3055\u3044\uff09\uff0e\n \u3000\u305d\u3053\u3067\uff0c\u6b21\u7bc0\u306b\u793a\u30593\u3064\u306e\u914d\u5217\u306b\u5bfe\u3059\u308b\u8981\u7d20\u8ffd\u52a0\u306e\u65b9\u6cd5\u306e\u5b9f\u884c\u901f\u5ea6\u3092\u7c21\u5358\u306a\u5b9f\u9a13\u3067\u8abf\u3079\u3066\u307f\u308b\uff0e\u8981\u7d20\u3092\u8ffd\u52a0\u3059\u308b\u56de\u6570\u306f\uff0c10\u4e07\u56de\u3068\u3057\uff0c\u6642\u9593\u8a08\u6e2c\u306b\u306f\uff0ctime\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u305f\uff0e\u5b9f\u9a13\u306b\u4f7f\u7528\u3057\u305f\u30b3\u30fc\u30c9\u306f\uff0c\u3044\u3061\u3070\u3093\u6700\u5f8c\u306b\u306e\u305b\u3066\u304a\u304f\uff0e\n\n# 2.\u3000\u914d\u5217\u306b\u5bfe\u3059\u308b\u8981\u7d20\u8ffd\u52a0\u306e\u65b9\u6cd5\n\n## 2.1\u3000list\u578b\u306b\u5bfe\u3059\u308b\u65b9\u6cd5\n\nlist.append\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\uff0e\n\u3053\u308c\u306f\uff0cPython\u306b\u6a19\u6e96\u3067\u7d44\u307f\u8fbc\u307e\u308c\u308b\u65b9\u6cd5\u3067\uff0cPython\u306e\u521d\u5fc3\u8005\u3067\u3082\u3088\u304f\u4f7f\u3046\u65b9\u6cd5\u306e\u306f\u305a\uff0e\n\n```py\nx = []\nfor i in range( 10 ):\n    x.append( i )\n```\n\n## 2.2\u3000ndarray\u306b\u5bfe\u3059\u308b\u65b9\u6cd5\uff11\n\nnumpy.append\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\uff0e\n\n```py\nimport numpy as np\nx = np.array( [] )\nfor i in range( 10 ):\n    x = np.append( x, i )\n```\n\n## 2.3 ndarray\u306b\u5bfe\u3059\u308b\u65b9\u6cd5\uff12\nnumpy.hstack\u3092\u4f7f\u7528\u3059\u308b\u65b9\u6cd5\uff0e\n\n```py\nimport numpy as np\nx = np.array( [] )\nfor i in range( 10 ):\n    x = np.hstack( (x,i) )\n```\n\n# 3\u3000\u7d50\u679c\n\n|                         | \u5b9f\u884c\u6642\u9593\uff08\u79d2\uff09     |\n|:----------------|-------------------:|\n| list.append       | 0.0149400234222 |\n| numpy.append | 4.47969698906     |\n| numpy.hstack  | 4.75327301025     |\n\n\u82e5\u5e72\u4e88\u60f3\u306f\u3057\u3066\u3044\u305f\u304c\uff0clist.append\u304c\u5727\u5012\u7684\u306b\u65e9\u3044\uff0e\n\u305d\u3057\u3066\uff0cnumpy.append\u3068numpy.hstack\u306f\u901f\u5ea6\u5dee\u304c\u51fa\u3066\u3044\u306a\u3044\uff0e\n\u3084\u306f\u308a\uff0c\u4e88\u3081\u5fc5\u8981\u306a\u914d\u5217\u306e\u5927\u304d\u3055\u304c\u5206\u304b\u3063\u3066\u3044\u308b\u306e\u306a\u3089\uff0cndarray\u3092\uff0c\u305d\u3046\u3067\u306a\u3051\u308c\u3070list\u3092\u4f7f\u3046\u3068\u3044\u3046\u306e\u304c\u6b63\u89e3\u3067\u3088\u3044\u307f\u305f\u3044\uff0e\n\n# 4\u3000\u5b9f\u9a13\u306b\u4f7f\u7528\u3057\u305f\u30b3\u30fc\u30c9\n\n```py\nimport numpy as np\n\ndef stdAppend(n):\n    x = []\n    for i in range(n):\n        x.append(i)\n    return\n\ndef npAppend(n):\n    x = np.array( [] )\n    for i in range(n):\n        x = np.append(x,i)\n    return\n\ndef npHstack(n):\n    x = np.array( [] )\n    for i in range(n):\n        x = np.hstack( (x,i) )\n    return\n\nif __name__ == '__main__':\n    import time\n\n    n = 100000\n    \n    start = time.time()\n    stdAppend(n)\n    ttime = time.time() - start\n    print( \"stdAppend: %s\" % ttime )\n\n    start = time.time()\n    npAppend(n)\n    ttime = time.time() - start\n    print( \"npAppend : %s\" % ttime )\n\n    start = time.time()\n    npHstack(n)\n    ttime = time.time() - start\n    print( \"npHstack : %s\" % ttime )\n```\n", "tags": ["Python", "numpy"]}