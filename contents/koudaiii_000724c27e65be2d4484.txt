{"context": "\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u306f Kubernetes Advent Calendar 2016\u306e4\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\nCronJobs \u306b\u3064\u3044\u3066\u3001\u30ad\u30e3\u30c3\u30c1\u30a2\u30c3\u30d7\u3057\u305f\u3053\u3068\u3092\u66f8\u3044\u3066\u884c\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nfrom. http://kubernetes.io/docs/user-guide/cron-jobs/\n\nCronJob(ScheduledJob) \u3068\u306f?\n\u6642\u9593\u30d9\u30fc\u30b9\u306e\u30b8\u30e7\u30d6\u3092\u7ba1\u7406\u3059\u308b\u3082\u306e\u3002\n\u6240\u8b02Cron\u307f\u305f\u3044\u306b\u7279\u5b9a\u306e\u4e00\u56de\u3060\u3063\u305f\u308a\u3001\u7e70\u308a\u8fd4\u3057\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3082\u306e\u3067\u3059\u3002\n\n\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\n\n\u30e1\u30fc\u30eb\u9001\u4fe1\n\u30d0\u30c3\u30c1\u51e6\u7406\n\u5b9a\u671f\u7684\u306b\u89e3\u6790\n\u591c\u9593\u306b\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u51e6\u7406\n\n\nKubernetes \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u540d\u524d\u304c\u9055\u3046\n\n1.4 Scheduledjob\n1.5 CronJob\n\n\n\u5229\u7528\u3059\u308b\u305f\u3081\u306e\u524d\u63d0\u6761\u4ef6\n\nYou need a working Kubernetes cluster at version >= 1.4 (for ScheduledJob), >= 1.5 (for CronJobs), with batch/v2alpha1 API turned on by passing --runtime-config=batch/v2alpha1 while bringing up the API server (see Turn on or off an API version for your cluster for more). You cannot use Cron Jobs on a hosted Kubernetes provider that has disabled alpha resources.\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u540d\u524d\u304c\u9055\u3046\u306e\u306f\u524d\u8ff0\u3068\u304a\u308a\u3067\u3059\u3002\n\u3053\u3053\u3067\u306f\u66f4\u306bkubernetes \u306e API Server \u3092\u7acb\u3061\u4e0a\u3052\u308b\u969b\u306b --runtime-config=batch/v2alpha1 \u3092\u4ed8\u3051\u308b\u3053\u3068\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u4f8b: launch-k8s-on-aws.sh\n\n#!/bin/bash\n\n# Turned on v2aplpha1\n\nexport KUBE_RUNTIME_CONFIG=\"batch/v2alpha1=true\"\n\n# Target aws config\n\nexport KUBERNETES_PROVIDER=aws\nexport AWS_DEFAULT_PROFILE=default\n\nexport KUBE_AWS_ZONE=ap-northeast-1c\nexport AWS_S3_REGION=ap-northeast-1\n\nexport NODE_SIZE=c4.large\nexport MASTER_SIZE=c4.large\nexport AWS_S3_BUCKET=kubernetes-145\n\n# Kubernetes config\n\nexport NUM_NODES=5\nexport KUBE_AWS_INSTANCE_PREFIX=k8s-145\n\n# Disk size\n\nexport MASTER_DISK_SIZE=50\nexport MASTER_ROOT_DISK_SIZE=50\nexport NODE_ROOT_DISK_SIZE=50\n\n# Download Kubernetes and automatically set up a default cluster\n\nwget -q -O - https://get.k8s.io | bash\n\n\n\u5b9f\u969b\u306b manifest file \u3092\u66f8\u3044\u3066\u5b9f\u884c\u3057\u3066\u307f\u3088\u3046\n\nhello world \u7684\u306a\u7269\n\napiVersion: batch/v2alpha1\nkind: CronJob\nmetadata:\n  name: hello\nspec:\n  schedule: \"*/1 * * * *\"\n  jobTemplate:\n    spec:\n      activeDeadlineSeconds: 10\n      template:\n        spec:\n          containers:\n          - name: hello\n            image: busybox\n            args:\n            - /bin/sh\n            - -c\n            - date; echo Hello from the Kubernetes cluster\n          restartPolicy: OnFailure\n\n\ncronjob \u4f5c\u6210\n\n$ kubectl create -f examples/cronjob.yaml \ncronjob \"hello\" created\n\n\ncronjob \u78ba\u8a8d\n\n$ kubectl get cronjob hello\nNAME      SCHEDULE      SUSPEND   ACTIVE    LAST-SCHEDULE\nhello     */1 * * * *   False     0         Mon, 29 Aug 2016 14:34:00 -0700\n\n\njob \u78ba\u8a8d\n\n$ kubectl get job\nNAME                         DESIRED   SUCCESSFUL   AGE\nhello-1705740100             1         1            32d\n\n\n\nkubectl describe job \u3059\u308b\u3068\u3055\u3089\u306b\u60c5\u5831\u304c\u308f\u304b\u308b\u3002\n\n$ kubectl describe job hello-1705740100 \nName:       hello-1705740100\nNamespace:  default\nImage(s):   busybox\nSelector:   controller-uid=93a273e1-9fdf-11e6-b40b-06daaf3c2469\nParallelism:    1\nCompletions:    1\nStart Time: Tue, 01 Nov 2016 12:02:08 +0900\nLabels:     <none>\nPods Statuses:  0 Running / 1 Succeeded / 0 Failed\nNo volumes.\nNo events.\n\n\n\nSelector \u304c\u308f\u304b\u308b\u306e\u3067\u3001 Pod \u304c\u308f\u304b\u308b\n\n$ kubectl get po -l controller-uid=93a273e1-9fdf-11e6-b40b-06daaf3c2469 --show-all\nNAME                               READY     STATUS    RESTARTS   AGE\njob-task-latest-1553958718-mg5r8   0/1       Error     0          45s\njob-task-latest-1553958718-r65iv   0/1       Error     0          41s\n\n\ncronjob \u524a\u9664\n\n$ kubectl delete cronjob hello\ncronjob \"hello\" deleted\n\n\njob \u524a\u9664\n\n$ kubectl get jobs\nNAME               DESIRED   SUCCESSFUL   AGE\nhello-1201907962   1         1            11m\nhello-1202039034   1         1            8m\n...\n\n$ kubectl delete jobs hello-1201907962 hello-1202039034 ...\njob \"hello-1201907962\" deleted\njob \"hello-1202039034\" deleted\n...\n\nref. https://github.com/kubernetes/kubernetes/blob/master/docs/proposals/scheduledjob.md\n\n\u30aa\u30d7\u30b7\u30e7\u30f3\n\nCronjob\n\n\n.spec.schedule: cron format \u3067\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u6307\u5b9a\u3059\u308b\n\n.spec.jobTemplate: Job \u3092\u5b9a\u7fa9\u3059\u308b\n\n.spec.startingDeadlineSeconds: CronJob \u3067\u4f55\u304b\u3057\u3089\u5b9f\u884c\u3055\u308c\u306a\u304b\u3063\u305f\u6642\u306b\u3044\u3064\u307e\u3067\u5b9f\u884c\u53ef\u80fd\u304b\u671f\u9650\u3092\u6c7a\u3081\u308b\u3002\n\n.spec.concurrencyPolicy: \u4e26\u5217\u3057\u3066\u5b9f\u884c\u3059\u308b\u30dd\u30ea\u30b7\u30fc\u3092\u6c7a\u3081\u308b\u3082\u306e\u3002\u524d\u306e job \u3068\u88ab\u3063\u3066\u5b9f\u884c\u3055\u308c\u3066\u3082\u3044\u3044\u306e\u304b\u6c17\u3092\u4ed8\u3051\u308b\u3002\n\n\n\nAllow(default): \u4e26\u5217\u3057\u3066\u5b9f\u884c\u3092\u8a31\u53ef\n\nForbid: \u524d\u56de\u304c\u307e\u3060\u7d42\u4e86\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u6b21\u56de\u306e\u5b9f\u884c\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\n\nReplace: \u73fe\u5728\u5b9f\u884c\u4e2d\u306e\u30b8\u30e7\u30d6\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u3001\u65b0\u3057\u3044\u30b8\u30e7\u30d6\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\n\n\n\n.spec.suspend: true\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u6b21\u56de\u4ee5\u964d\u306b\u4e2d\u65ad\u3055\u308c\u5b9f\u884c\u3055\u308c\u306a\u3044\u3002\u65e2\u306b\u958b\u59cb\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u306f\u305d\u306e\u307e\u307e\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n\njob\n\n\n.spec.jobTemplate.spec.activeDeadlineSeconds: \u5931\u6557\u3059\u308b\u969b\u306b\u30c7\u30c3\u30c9\u30e9\u30a4\u30f3\u3092\u6c7a\u3081\u308b(\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7121\u671f\u9650\u3060\u304b\u3089\u5931\u6557\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u3092\u66f8\u304f\u3068\u3001\u305a\u3063\u3068restart\u3055\u308c\u308b)\n\n\njob \u306e\u8003\u3048\u65b9\nref. Handling Pod and Container Failures\n\nA Container in a Pod may fail for a number of reasons, such as because the process in it exited with a non-zero exit code, or the Container was killed for exceeding a memory limit, etc. If this happens, and the .spec.template.containers[].restartPolicy = \"OnFailure\", then the Pod stays on the node, but the Container is re-run. Therefore, your program needs to handle the case when it is restarted locally, or else specify .spec.template.containers[].restartPolicy = \"Never\". See pods-states for more information on restartPolicy.\nAn entire Pod can also fail, for a number of reasons, such as when the pod is kicked off the node (node is upgraded, rebooted, deleted, etc.), or if a container of the Pod fails and the .spec.template.containers[].restartPolicy = \"Never\". When a Pod fails, then the Job controller starts a new Pod. Therefore, your program needs to handle the case when it is restarted in a new pod. In particular, it needs to handle temporary files, locks, incomplete output and the like caused by previous runs.\nNote that even if you specify .spec.parallelism = 1 and .spec.completions = 1 and .spec.template.containers[].restartPolicy = \"Never\", the same program may sometimes be started twice.\nIf you do specify .spec.parallelism and .spec.completions both greater than 1, then there may be multiple pods running at once. Therefore, your pods must also be tolerant of concurrency.\n\n\n\u57fa\u672c\u7684\u306b\u3001Job\u306f\u4f55\u56de\u5b9f\u884c\u3057\u3066\u3082\u7d50\u679c\u304c\u540c\u3058\u306b\u306a\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u3044\u308b\u8a2d\u8a08\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n.spec.template.containers[].restartPolicy = \"Never\" \u306f\u3042\u304f\u307e\u3067\u3082 Pod \u5185\u306e\u8a71\u3067\u3042\u308a\u3001Job \u4e8b\u614b\u304c\u5b8c\u4e86\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u65b0\u3057\u304f Pod \u3092\u4f5c\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\n\n.spec.parallelism = 1 \u3068 .spec.completions = 1 \u3068 .spec.template.containers[].restartPolicy = \"Never\" \u3092\u6307\u5b9a\u3057\u3066\u3082\u3001\u540c\u3058\u30d7\u30ed\u30b0\u30e9\u30e0\u304c2\u56de\u8d77\u52d5\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\n\n\n\u3053\u3093\u306a\u4f7f\u3044\u65b9\u304c\u51fa\u6765\u308b\n\nkubectl \u3092\u30af\u30e9\u30b9\u30bf\u5185\u90e8\u3067\u5b9f\u884c\n\u4f8b\u3048\u3070 kubectl set \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u66ff\u3048\u308b\napiVersion: batch/v2alpha1\nkind: CronJob\nmetadata:\n  name: replace-task-latest\n  labels:\n    name: app-server-scheduledjob\n    role: kubectl\n  namespace: app-server\nspec:\n  schedule: \"0 2,6,10,14,18,22 * * *\" # every 4 hours (shifted by 2 hours)\n  startingDeadlineSeconds: 30\n  concurrencyPolicy: \"Forbid\"\n  suspend: false\n  jobTemplate:\n    metadata:\n      name: app-server-scheduledjob\n      labels:\n        name: app-server-scheduledjob\n        role: kubectl\n    spec:\n      template:\n        spec:\n          containers:\n          - name: app-server-scheduledjob\n            image: koudaiii/kubectl\n            command:\n              - \"sh\"\n              - \"-c\"\n              - >\n                echo \"kubectl set image deployment/app-server app-server=app-server:latest --namespace=app-server --record\";\n                kubectl set image deployment/app-server app-server=app-server:latest --namespace=app-server --record\n          restartPolicy: Never\n\n\nmanifest file \u3092\u66f4\u65b0\u3059\u308b\n\nkubernetes/app-server.yaml\n\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: pi\nspec:\n  template:\n    metadata:\n      name: pi\n    spec:\n      containers:\n      - name: pi\n        image: perl\n        command: [\"perl\",  \"-Mbignum=bpi\", \"-wle\", \"print bpi(2000)\"]\n      restartPolicy: Never\n\n\n\u66f8\u3044\u305f manifest file \u3092 configmap \u306b\u7f6e\u304f\n\nkubectl create configmap app-server --from-file=kubernetes/app-server.yaml\n\n\n\u5b9a\u671f\u7684\u306b\u5b9f\u884c\u3055\u305b\u308b\n\napiVersion: batch/v2alpha1\nkind: CronJob\nmetadata:\n  name: job-task-latest\n  labels:\n    name: app-server-scheduledjob\n    role: kubectl\nspec:\n  schedule: \"*/5 * * * *\"\n  startingDeadlineSeconds: 30\n  concurrencyPolicy: \"Forbid\"\n  suspend: false\n  jobTemplate:\n    metadata:\n      name: app-server-scheduledjob\n      labels:\n        name: app-server-scheduledjob\n        role: kubectl\n    spec:\n      template:\n        spec:\n          containers:\n          - name: app-server-scheduledjob\n            image: koudaiii/kubectl\n            command: [\"kubectl\",\"replace\",\"-f\",\"tmp/app-server.yaml\"]\n            volumeMounts:\n              - name: deployment\n                mountPath: /tmp\n                readOnly: true\n          restartPolicy: Never\n          volumes:\n            - name: deployment\n              configMap:\n                name: app-server\n\n\n\u6c17\u3092\u3064\u3051\u308b\u70b9\n\u3053\u3053\u304b\u3089\u306f\u3001\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u3066\u30cf\u30de\u3063\u305f\u3082\u306e\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\u5b9f\u884c\u306f\u3042\u304f\u307e\u3067\u3082 UTC?\nNAME                                 SCHEDULE     SUSPEND   ACTIVE    LAST-SCHEDULE\npeople--ios-event-appsflyer-screen   0 16 * * *   False     0         Sat, 03 Dec 2016 01:00:00 +0900\n\nLAST\u3092\u307f\u308b\u3068\u65e5\u672c\u6642\u9593\u3067\u8868\u793a\u3055\u308c\u308b\u304c Scheduler \u304c\u5b9f\u884c\u3055\u308c\u308b\u306e\u306fUTC\u306b\u306a\u3063\u3066\u308b\u3002\n\u3082\u3057\u304b\u3059\u308b\u3068\u3001 get.k8s.io \u3067\u4f5c\u308b\u5834\u5408\u306fUTC\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002get.k8s.io\u3067\u7279\u306b\u6307\u5b9a\u3059\u308b\u3068\u3053\u308d\u304c GitHub \u306e kubernetes/cluster/* \u304b\u3089\u306f\u306a\u304f\u3001\u3053\u3053\u306f\u81ea\u5206\u3067 Cluster \u3092\u4f5c\u3063\u3066\u307f\u306a\u3044\u3068\u308f\u304b\u3089\u306a\u3044\u611f\u3058\u3067\u3059\u3002\n\n\u4e8c\u56de\u76ee\u306e kubectl apply \u3067\u5931\u6557\u3059\u308b\n\nref https://github.com/kubernetes/kubernetes/issues/35149\n\n\n# scheduledjob.yaml\n# From http://kubernetes.io/docs/user-guide/scheduled-jobs/#creating-a-scheduled-job\napiVersion: batch/v2alpha1\nkind: ScheduledJob\nmetadata:\n  name: hello\nspec:\n  schedule: 0/1 * * * ?\n  jobTemplate:\n    spec:\n      template:\n        spec:\n          containers:\n          - name: hello\n            image: busybox\n            args:\n            - /bin/sh\n            - -c\n            - date; echo Hello from the Kubernetes cluster\n          restartPolicy: OnFailure\n\n\n1\u56de\u76ee\u306f\u6210\u529f\n\n$ kubectl apply -f scheduledjob.yaml \nscheduledjob \"hello\" created\n\n\n2\u56de\u76ee\u306b\u5931\u6557\u3059\u308b\u3002 \n\n$ kubectl apply -f scheduledjob.yaml\nerror: error when applying patch:\n\nto:\n&{0xc8200bd740 0xc8202f8ee0 sandbox hello manifests.yaml XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nTravis CI \u7d4c\u7531\u3067 Job \u3092\u307e\u3068\u3081\u3066 kubectl apply -f ./dir/ \u3068\u304b\u3084\u308d\u3046\u3068\u3057\u305f\u969b\u306b\u3053\u306e\u4e0d\u5177\u5408\u306b\u3042\u305f\u3063\u305f\u3002\n\nJob \u304c already exists \u3067\u6642\u3005\u5b9f\u884c\u3055\u308c\u306a\u3044\n\nref. https://github.com/kubernetes/kubernetes/pull/36883\n\n\nError creating job: jobs.batch \"es-cleanup-1629652801\" already exists\n\ngetTimeHash \u306e\u5b9f\u88c5\u304c\u539f\u56e0\u3067 hourly \u3068\u304b\u8a2d\u5b9a\u3059\u308b\u3068\u6642\u3005\u540d\u524d\u304c\u88ab\u3063\u3066Job\u304c\u5931\u6557\u3059\u308b\ngetTimeHash(scheduledTime)\n\n\n\nDate\nEpoch\nHash\nHits\n\n\n\n\nNov 14 00:00:00\n1479081600\n4175643772\n1\n\n\nNov 14 00:05:00\n1479081900\n4209853567\n1\n\n\nNov 14 00:10:00\n1479082200\n4141499513\n1\n\n\nNov 14 00:15:00\n1479082500\n4175709308\n1\n\n\nNov 14 00:20:00\n1479082800\n4209919103\n1\n\n\nNov 14 00:25:00\n1479083100\n4244128898\n1\n\n\nNov 14 00:30:00\n1479083400\n4072621171\n1\n\n\nNov 14 00:35:00\n1479083700\n4106830966\n1\n\n\nNov 14 00:40:00\n1479084000\n4141040761\n1\n\n\nNov 14 00:45:00\n1479084300\n4072686707\n1\n\n\nNov 14 00:50:00\n1479084600\n4106896502\n1\n\n\nNov 14 00:55:00\n1479084900\n4141106297\n1\n\n\nNov 14 01:00:00\n1479085200\n4072752243\n1\n\n\nNov 14 01:05:00\n1479085500\n4106962038\n1\n\n\nNov 14 01:10:00\n1479085800\n4141171833\n1\n\n\nNov 14 01:15:00\n1479086100\n4175381628\n1\n\n\nNov 14 01:20:00\n1479086400\n4107027574\n1\n\n\nNov 14 01:25:00\n1479086700\n4141237369\n1\n\n\nNov 14 01:30:00\n1479087000\n4175447164\n1\n\n\nNov 14 01:35:00\n1479087300\n4107093110\n1\n\n\nNov 14 01:40:00\n1479087600\n4141302905\n1\n\n\nNov 14 01:45:00\n1479087900\n4175512700\n1\n\n\nNov 14 01:50:00\n1479088200\n4107158646\n1\n\n\nNov 14 01:55:00\n1479088500\n4141368441\n1\n\n\nNov 14 02:00:00\n1479088800\n4175578236\n1\n\n\nNov 14 02:05:00\n1479089100\n4209788031\n1\n\n\nNov 14 02:10:00\n1479089400\n4141433977\n1\n\n\nNov 14 02:15:00\n1479089700\n4175643772\n2\n\n\nNov 14 02:20:00\n1479090000\n4209853567\n2\n\n\nNov 14 02:25:00\n1479090300\n4141499513\n2\n\n\n\n\nhttps://github.com/kubernetes/kubernetes/blob/539165d899021064ceb98ef508756d7482f30035/pkg/controller/scheduledjob/utils.go#L188\n\n    // We want job names for a given nominal start time to have a deterministic name to avoid the same job being created twice\n    name := fmt.Sprintf(\"%s-%d\", sj.Name, getTimeHash(scheduledTime))\n\n\nhttps://github.com/kubernetes/kubernetes/pull/36812\n\nUnix Epoch Time \u3092\u8fd4\u3059\u3088\u3046\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u308b\u3002\u6b21\u306e\u30ea\u30ea\u30fc\u30b9\u3067\u6cbb\u308a\u305d\u3046\u3002\n\n\u307e\u3068\u3081\n\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u3066\u3001\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u4e0a\u3067 job \u304c\u5b9f\u884c\u3055\u308c\u308b\u30e1\u30ea\u30c3\u30c8\u306f\u5927\u304d\u3044\u3067\u3059\u3002\n\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u5c02\u7528\u306e\u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u3063\u305f\u308a\u3057\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u3088\u308a\u52b9\u7387\u7684\u306b\u5168\u4f53\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u304b\u3089\u3067\u3059\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a8\u30f3\u30b8\u30cb\u30a2\u306e\u6280\u8853\u9078\u5b9a\u306e\u5e45\u304c\u3088\u308a\u5e83\u304c\u308b\u306e\u3067\u3001Cronjob\u306f\u4eca\u5f8c\u3082\u8ffd\u3063\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u306f Kubernetes Advent Calendar 2016\u306e4\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\nCronJobs \u306b\u3064\u3044\u3066\u3001\u30ad\u30e3\u30c3\u30c1\u30a2\u30c3\u30d7\u3057\u305f\u3053\u3068\u3092\u66f8\u3044\u3066\u884c\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nfrom. http://kubernetes.io/docs/user-guide/cron-jobs/\n\n## CronJob(ScheduledJob) \u3068\u306f?\n\n\u6642\u9593\u30d9\u30fc\u30b9\u306e\u30b8\u30e7\u30d6\u3092\u7ba1\u7406\u3059\u308b\u3082\u306e\u3002\n\u6240\u8b02Cron\u307f\u305f\u3044\u306b\u7279\u5b9a\u306e\u4e00\u56de\u3060\u3063\u305f\u308a\u3001\u7e70\u308a\u8fd4\u3057\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3082\u306e\u3067\u3059\u3002\n\n## \u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\n\n- \u30e1\u30fc\u30eb\u9001\u4fe1\n- \u30d0\u30c3\u30c1\u51e6\u7406\n- \u5b9a\u671f\u7684\u306b\u89e3\u6790\n- \u591c\u9593\u306b\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u51e6\u7406\n\n\n## Kubernetes \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u540d\u524d\u304c\u9055\u3046\n\n- 1.4 Scheduledjob\n- 1.5 CronJob\n\n\n## \u5229\u7528\u3059\u308b\u305f\u3081\u306e\u524d\u63d0\u6761\u4ef6\n\n> You need a working Kubernetes cluster at version >= 1.4 (for ScheduledJob), >= 1.5 (for CronJobs), with batch/v2alpha1 API turned on by passing --runtime-config=batch/v2alpha1 while bringing up the API server (see Turn on or off an API version for your cluster for more). You cannot use Cron Jobs on a hosted Kubernetes provider that has disabled alpha resources.\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u540d\u524d\u304c\u9055\u3046\u306e\u306f\u524d\u8ff0\u3068\u304a\u308a\u3067\u3059\u3002\n\u3053\u3053\u3067\u306f\u66f4\u306bkubernetes \u306e API Server \u3092\u7acb\u3061\u4e0a\u3052\u308b\u969b\u306b `--runtime-config=batch/v2alpha1` \u3092\u4ed8\u3051\u308b\u3053\u3068\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\n- \u4f8b: launch-k8s-on-aws.sh\n\n```bash\n#!/bin/bash\n\n# Turned on v2aplpha1\n\nexport KUBE_RUNTIME_CONFIG=\"batch/v2alpha1=true\"\n\n# Target aws config\n\nexport KUBERNETES_PROVIDER=aws\nexport AWS_DEFAULT_PROFILE=default\n\nexport KUBE_AWS_ZONE=ap-northeast-1c\nexport AWS_S3_REGION=ap-northeast-1\n\nexport NODE_SIZE=c4.large\nexport MASTER_SIZE=c4.large\nexport AWS_S3_BUCKET=kubernetes-145\n\n# Kubernetes config\n\nexport NUM_NODES=5\nexport KUBE_AWS_INSTANCE_PREFIX=k8s-145\n\n# Disk size\n\nexport MASTER_DISK_SIZE=50\nexport MASTER_ROOT_DISK_SIZE=50\nexport NODE_ROOT_DISK_SIZE=50\n\n# Download Kubernetes and automatically set up a default cluster\n\nwget -q -O - https://get.k8s.io | bash\n```\n\n## \u5b9f\u969b\u306b manifest file \u3092\u66f8\u3044\u3066\u5b9f\u884c\u3057\u3066\u307f\u3088\u3046\n\n- hello world \u7684\u306a\u7269\n\n```yaml\napiVersion: batch/v2alpha1\nkind: CronJob\nmetadata:\n  name: hello\nspec:\n  schedule: \"*/1 * * * *\"\n  jobTemplate:\n    spec:\n      activeDeadlineSeconds: 10\n      template:\n        spec:\n          containers:\n          - name: hello\n            image: busybox\n            args:\n            - /bin/sh\n            - -c\n            - date; echo Hello from the Kubernetes cluster\n          restartPolicy: OnFailure\n```\n\n- cronjob \u4f5c\u6210\n\n```bash\n$ kubectl create -f examples/cronjob.yaml \ncronjob \"hello\" created\n```\n\n- cronjob \u78ba\u8a8d\n\n```bash\n$ kubectl get cronjob hello\nNAME      SCHEDULE      SUSPEND   ACTIVE    LAST-SCHEDULE\nhello     */1 * * * *   False     0         Mon, 29 Aug 2016 14:34:00 -0700\n```\n\n- job \u78ba\u8a8d\n\n```bash\n$ kubectl get job\nNAME                         DESIRED   SUCCESSFUL   AGE\nhello-1705740100             1         1            32d\n```\n\n- `kubectl describe job` \u3059\u308b\u3068\u3055\u3089\u306b\u60c5\u5831\u304c\u308f\u304b\u308b\u3002\n\n```bash\n$ kubectl describe job hello-1705740100 \nName:\t\thello-1705740100\nNamespace:\tdefault\nImage(s):\tbusybox\nSelector:\tcontroller-uid=93a273e1-9fdf-11e6-b40b-06daaf3c2469\nParallelism:\t1\nCompletions:\t1\nStart Time:\tTue, 01 Nov 2016 12:02:08 +0900\nLabels:\t\t<none>\nPods Statuses:\t0 Running / 1 Succeeded / 0 Failed\nNo volumes.\nNo events.\n```\n\n- `Selector` \u304c\u308f\u304b\u308b\u306e\u3067\u3001 Pod \u304c\u308f\u304b\u308b\n\n\n```bash\n$ kubectl get po -l controller-uid=93a273e1-9fdf-11e6-b40b-06daaf3c2469 --show-all\nNAME                               READY     STATUS    RESTARTS   AGE\njob-task-latest-1553958718-mg5r8   0/1       Error     0          45s\njob-task-latest-1553958718-r65iv   0/1       Error     0          41s\n```\n\n\n- cronjob \u524a\u9664\n\n```bash\n$ kubectl delete cronjob hello\ncronjob \"hello\" deleted\n```\n\n- job \u524a\u9664\n\n```bash\n$ kubectl get jobs\nNAME               DESIRED   SUCCESSFUL   AGE\nhello-1201907962   1         1            11m\nhello-1202039034   1         1            8m\n...\n\n$ kubectl delete jobs hello-1201907962 hello-1202039034 ...\njob \"hello-1201907962\" deleted\njob \"hello-1202039034\" deleted\n...\n```\n\nref. https://github.com/kubernetes/kubernetes/blob/master/docs/proposals/scheduledjob.md\n\n\n## \u30aa\u30d7\u30b7\u30e7\u30f3\n\n### Cronjob\n\n- `.spec.schedule`: cron format \u3067\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u6307\u5b9a\u3059\u308b\n- `.spec.jobTemplate`: Job \u3092\u5b9a\u7fa9\u3059\u308b\n- `.spec.startingDeadlineSeconds`: CronJob \u3067\u4f55\u304b\u3057\u3089\u5b9f\u884c\u3055\u308c\u306a\u304b\u3063\u305f\u6642\u306b\u3044\u3064\u307e\u3067\u5b9f\u884c\u53ef\u80fd\u304b\u671f\u9650\u3092\u6c7a\u3081\u308b\u3002\n- `.spec.concurrencyPolicy`: \u4e26\u5217\u3057\u3066\u5b9f\u884c\u3059\u308b\u30dd\u30ea\u30b7\u30fc\u3092\u6c7a\u3081\u308b\u3082\u306e\u3002\u524d\u306e job \u3068\u88ab\u3063\u3066\u5b9f\u884c\u3055\u308c\u3066\u3082\u3044\u3044\u306e\u304b\u6c17\u3092\u4ed8\u3051\u308b\u3002\n\t- `Allow`(default): \u4e26\u5217\u3057\u3066\u5b9f\u884c\u3092\u8a31\u53ef\n\t- `Forbid`: \u524d\u56de\u304c\u307e\u3060\u7d42\u4e86\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u3001\u6b21\u56de\u306e\u5b9f\u884c\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\n\t- `Replace`: \u73fe\u5728\u5b9f\u884c\u4e2d\u306e\u30b8\u30e7\u30d6\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u3001\u65b0\u3057\u3044\u30b8\u30e7\u30d6\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\n- `.spec.suspend`: true\u306b\u8a2d\u5b9a\u3059\u308b\u3068\u3001\u6b21\u56de\u4ee5\u964d\u306b\u4e2d\u65ad\u3055\u308c\u5b9f\u884c\u3055\u308c\u306a\u3044\u3002\u65e2\u306b\u958b\u59cb\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u306f\u305d\u306e\u307e\u307e\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n### job\n\n- `.spec.jobTemplate.spec.activeDeadlineSeconds`: \u5931\u6557\u3059\u308b\u969b\u306b\u30c7\u30c3\u30c9\u30e9\u30a4\u30f3\u3092\u6c7a\u3081\u308b(\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u7121\u671f\u9650\u3060\u304b\u3089\u5931\u6557\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u3092\u66f8\u304f\u3068\u3001\u305a\u3063\u3068restart\u3055\u308c\u308b)\n\n## job \u306e\u8003\u3048\u65b9\n\nref. [Handling Pod and Container Failures](http://kubernetes.io/docs/user-guide/jobs/)\n\n> A Container in a Pod may fail for a number of reasons, such as because the process in it exited with a non-zero exit code, or the Container was killed for exceeding a memory limit, etc. If this happens, and the .spec.template.containers[].restartPolicy = \"OnFailure\", then the Pod stays on the node, but the Container is re-run. Therefore, your program needs to handle the case when it is restarted locally, or else specify .spec.template.containers[].restartPolicy = \"Never\". See pods-states for more information on restartPolicy.\n\n> An entire Pod can also fail, for a number of reasons, such as when the pod is kicked off the node (node is upgraded, rebooted, deleted, etc.), or if a container of the Pod fails and the .spec.template.containers[].restartPolicy = \"Never\". When a Pod fails, then the Job controller starts a new Pod. Therefore, your program needs to handle the case when it is restarted in a new pod. In particular, it needs to handle temporary files, locks, incomplete output and the like caused by previous runs.\n\n> Note that even if you specify .spec.parallelism = 1 and .spec.completions = 1 and .spec.template.containers[].restartPolicy = \"Never\", the same program may sometimes be started twice.\n\n> If you do specify .spec.parallelism and .spec.completions both greater than 1, then there may be multiple pods running at once. Therefore, your pods must also be tolerant of concurrency.\n\n\n\n- \u57fa\u672c\u7684\u306b\u3001Job\u306f\u4f55\u56de\u5b9f\u884c\u3057\u3066\u3082\u7d50\u679c\u304c\u540c\u3058\u306b\u306a\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u3044\u308b\u8a2d\u8a08\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n- `.spec.template.containers[].restartPolicy = \"Never\"` \u306f\u3042\u304f\u307e\u3067\u3082 Pod \u5185\u306e\u8a71\u3067\u3042\u308a\u3001Job \u4e8b\u614b\u304c\u5b8c\u4e86\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001\u65b0\u3057\u304f Pod \u3092\u4f5c\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\n- `.spec.parallelism = 1` \u3068 `.spec.completions = 1` \u3068 `.spec.template.containers[].restartPolicy = \"Never\"` \u3092\u6307\u5b9a\u3057\u3066\u3082\u3001\u540c\u3058\u30d7\u30ed\u30b0\u30e9\u30e0\u304c2\u56de\u8d77\u52d5\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\n\n\n## \u3053\u3093\u306a\u4f7f\u3044\u65b9\u304c\u51fa\u6765\u308b\n\n### kubectl \u3092\u30af\u30e9\u30b9\u30bf\u5185\u90e8\u3067\u5b9f\u884c\n\n\u4f8b\u3048\u3070 `kubectl set` \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u66ff\u3048\u308b\n\n```yaml\napiVersion: batch/v2alpha1\nkind: CronJob\nmetadata:\n  name: replace-task-latest\n  labels:\n    name: app-server-scheduledjob\n    role: kubectl\n  namespace: app-server\nspec:\n  schedule: \"0 2,6,10,14,18,22 * * *\" # every 4 hours (shifted by 2 hours)\n  startingDeadlineSeconds: 30\n  concurrencyPolicy: \"Forbid\"\n  suspend: false\n  jobTemplate:\n    metadata:\n      name: app-server-scheduledjob\n      labels:\n        name: app-server-scheduledjob\n        role: kubectl\n    spec:\n      template:\n        spec:\n          containers:\n          - name: app-server-scheduledjob\n            image: koudaiii/kubectl\n            command:\n              - \"sh\"\n              - \"-c\"\n              - >\n                echo \"kubectl set image deployment/app-server app-server=app-server:latest --namespace=app-server --record\";\n                kubectl set image deployment/app-server app-server=app-server:latest --namespace=app-server --record\n          restartPolicy: Never\n```\n\n### manifest file \u3092\u66f4\u65b0\u3059\u308b\n\n- kubernetes/app-server.yaml\n\n```yaml\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: pi\nspec:\n  template:\n    metadata:\n      name: pi\n    spec:\n      containers:\n      - name: pi\n        image: perl\n        command: [\"perl\",  \"-Mbignum=bpi\", \"-wle\", \"print bpi(2000)\"]\n      restartPolicy: Never\n```\n\n- \u66f8\u3044\u305f manifest file \u3092 configmap \u306b\u7f6e\u304f\n\n```bash\nkubectl create configmap app-server --from-file=kubernetes/app-server.yaml\n```\n\n- \u5b9a\u671f\u7684\u306b\u5b9f\u884c\u3055\u305b\u308b\n\n```yaml\napiVersion: batch/v2alpha1\nkind: CronJob\nmetadata:\n  name: job-task-latest\n  labels:\n    name: app-server-scheduledjob\n    role: kubectl\nspec:\n  schedule: \"*/5 * * * *\"\n  startingDeadlineSeconds: 30\n  concurrencyPolicy: \"Forbid\"\n  suspend: false\n  jobTemplate:\n    metadata:\n      name: app-server-scheduledjob\n      labels:\n        name: app-server-scheduledjob\n        role: kubectl\n    spec:\n      template:\n        spec:\n          containers:\n          - name: app-server-scheduledjob\n            image: koudaiii/kubectl\n            command: [\"kubectl\",\"replace\",\"-f\",\"tmp/app-server.yaml\"]\n            volumeMounts:\n              - name: deployment\n                mountPath: /tmp\n                readOnly: true\n          restartPolicy: Never\n          volumes:\n            - name: deployment\n              configMap:\n                name: app-server\n```\n\n\n## \u6c17\u3092\u3064\u3051\u308b\u70b9\n\n\u3053\u3053\u304b\u3089\u306f\u3001\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u3066\u30cf\u30de\u3063\u305f\u3082\u306e\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n### \u5b9f\u884c\u306f\u3042\u304f\u307e\u3067\u3082 UTC?\n\n```\nNAME                                 SCHEDULE     SUSPEND   ACTIVE    LAST-SCHEDULE\npeople--ios-event-appsflyer-screen   0 16 * * *   False     0         Sat, 03 Dec 2016 01:00:00 +0900\n```\n\nLAST\u3092\u307f\u308b\u3068\u65e5\u672c\u6642\u9593\u3067\u8868\u793a\u3055\u308c\u308b\u304c Scheduler \u304c\u5b9f\u884c\u3055\u308c\u308b\u306e\u306fUTC\u306b\u306a\u3063\u3066\u308b\u3002\n\n\u3082\u3057\u304b\u3059\u308b\u3068\u3001 get.k8s.io \u3067\u4f5c\u308b\u5834\u5408\u306fUTC\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002get.k8s.io\u3067\u7279\u306b\u6307\u5b9a\u3059\u308b\u3068\u3053\u308d\u304c GitHub \u306e kubernetes/cluster/* \u304b\u3089\u306f\u306a\u304f\u3001\u3053\u3053\u306f\u81ea\u5206\u3067 Cluster \u3092\u4f5c\u3063\u3066\u307f\u306a\u3044\u3068\u308f\u304b\u3089\u306a\u3044\u611f\u3058\u3067\u3059\u3002\n\n\n### \u4e8c\u56de\u76ee\u306e `kubectl apply` \u3067\u5931\u6557\u3059\u308b\n\n- ref https://github.com/kubernetes/kubernetes/issues/35149\n\n```\n# scheduledjob.yaml\n# From http://kubernetes.io/docs/user-guide/scheduled-jobs/#creating-a-scheduled-job\napiVersion: batch/v2alpha1\nkind: ScheduledJob\nmetadata:\n  name: hello\nspec:\n  schedule: 0/1 * * * ?\n  jobTemplate:\n    spec:\n      template:\n        spec:\n          containers:\n          - name: hello\n            image: busybox\n            args:\n            - /bin/sh\n            - -c\n            - date; echo Hello from the Kubernetes cluster\n          restartPolicy: OnFailure\n```\n\n- 1\u56de\u76ee\u306f\u6210\u529f\n\n```\n$ kubectl apply -f scheduledjob.yaml \nscheduledjob \"hello\" created\n```\n\n- 2\u56de\u76ee\u306b\u5931\u6557\u3059\u308b\u3002 \n\n```\n$ kubectl apply -f scheduledjob.yaml\nerror: error when applying patch:\n\nto:\n&{0xc8200bd740 0xc8202f8ee0 sandbox hello manifests.yaml XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n```\n\nTravis CI \u7d4c\u7531\u3067 Job \u3092\u307e\u3068\u3081\u3066 `kubectl apply -f ./dir/` \u3068\u304b\u3084\u308d\u3046\u3068\u3057\u305f\u969b\u306b\u3053\u306e\u4e0d\u5177\u5408\u306b\u3042\u305f\u3063\u305f\u3002\n\n### Job \u304c already exists \u3067\u6642\u3005\u5b9f\u884c\u3055\u308c\u306a\u3044\n\n- ref. https://github.com/kubernetes/kubernetes/pull/36883\n\n```\nError creating job: jobs.batch \"es-cleanup-1629652801\" already exists\n```\n\ngetTimeHash \u306e\u5b9f\u88c5\u304c\u539f\u56e0\u3067 hourly \u3068\u304b\u8a2d\u5b9a\u3059\u308b\u3068\u6642\u3005\u540d\u524d\u304c\u88ab\u3063\u3066Job\u304c\u5931\u6557\u3059\u308b\ngetTimeHash(scheduledTime)\n\n| Date | Epoch | Hash | Hits |\n|-----------------|------------|------------|---|\n| Nov 14 00:00:00 | 1479081600 | **4175643772** | 1 |\n| Nov 14 00:05:00 | 1479081900 | **4209853567** | 1 |\n| Nov 14 00:10:00 | 1479082200 | **4141499513** | 1 |\n| Nov 14 00:15:00 | 1479082500 | 4175709308 | 1 |\n| Nov 14 00:20:00 | 1479082800 | 4209919103 | 1 |\n| Nov 14 00:25:00 | 1479083100 | 4244128898 | 1 |\n| Nov 14 00:30:00 | 1479083400 | 4072621171 | 1 |\n| Nov 14 00:35:00 | 1479083700 | 4106830966 | 1 |\n| Nov 14 00:40:00 | 1479084000 | 4141040761 | 1 |\n| Nov 14 00:45:00 | 1479084300 | 4072686707 | 1 |\n| Nov 14 00:50:00 | 1479084600 | 4106896502 | 1 |\n| Nov 14 00:55:00 | 1479084900 | 4141106297 | 1 |\n| Nov 14 01:00:00 | 1479085200 | 4072752243 | 1 |\n| Nov 14 01:05:00 | 1479085500 | 4106962038 | 1 |\n| Nov 14 01:10:00 | 1479085800 | 4141171833 | 1 |\n| Nov 14 01:15:00 | 1479086100 | 4175381628 | 1 |\n| Nov 14 01:20:00 | 1479086400 | 4107027574 | 1 |\n| Nov 14 01:25:00 | 1479086700 | 4141237369 | 1 |\n| Nov 14 01:30:00 | 1479087000 | 4175447164 | 1 |\n| Nov 14 01:35:00 | 1479087300 | 4107093110 | 1 |\n| Nov 14 01:40:00 | 1479087600 | 4141302905 | 1 |\n| Nov 14 01:45:00 | 1479087900 | 4175512700 | 1 |\n| Nov 14 01:50:00 | 1479088200 | 4107158646 | 1 |\n| Nov 14 01:55:00 | 1479088500 | 4141368441 | 1 |\n| Nov 14 02:00:00 | 1479088800 | 4175578236 | 1 |\n| Nov 14 02:05:00 | 1479089100 | 4209788031 | 1 |\n| Nov 14 02:10:00 | 1479089400 | 4141433977 | 1 |\n| Nov 14 02:15:00 | 1479089700 | **4175643772** | 2 |\n| Nov 14 02:20:00 | 1479090000 | **4209853567** | 2 |\n| Nov 14 02:25:00 | 1479090300 | **4141499513** | 2 |\n\n\n- https://github.com/kubernetes/kubernetes/blob/539165d899021064ceb98ef508756d7482f30035/pkg/controller/scheduledjob/utils.go#L188\n\n```go\n\t// We want job names for a given nominal start time to have a deterministic name to avoid the same job being created twice\n\tname := fmt.Sprintf(\"%s-%d\", sj.Name, getTimeHash(scheduledTime))\n```\n\n\n- https://github.com/kubernetes/kubernetes/pull/36812\n\nUnix Epoch Time \u3092\u8fd4\u3059\u3088\u3046\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u308b\u3002\u6b21\u306e\u30ea\u30ea\u30fc\u30b9\u3067\u6cbb\u308a\u305d\u3046\u3002\n\n## \u307e\u3068\u3081\n\t\n\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u3066\u3001\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u4e0a\u3067 job \u304c\u5b9f\u884c\u3055\u308c\u308b\u30e1\u30ea\u30c3\u30c8\u306f\u5927\u304d\u3044\u3067\u3059\u3002\n\n\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u5c02\u7528\u306e\u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u3063\u305f\u308a\u3057\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u5fc5\u8981\u304c\u306a\u304f\u306a\u308a\u3088\u308a\u52b9\u7387\u7684\u306b\u5168\u4f53\u306e\u30ea\u30bd\u30fc\u30b9\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30a8\u30f3\u30b8\u30cb\u30a2\u306e\u6280\u8853\u9078\u5b9a\u306e\u5e45\u304c\u3088\u308a\u5e83\u304c\u308b\u306e\u3067\u3001Cronjob\u306f\u4eca\u5f8c\u3082\u8ffd\u3063\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["ScheduledJob", "CronJob", "kubernetes"]}