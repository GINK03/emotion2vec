{"context": " More than 1 year has passed since last update.See also\n\nWhat are some useful, undocumented Mathematica functions?\nIs using undocumented functionality a Bad Idea\u2122?\nMathematica tricks\n\nCaution! There is no guarantee for the following information. They are obtained by guessing. In the future, the company may change them in an incompatible way.\nSystem`\n\n\nDuplicateFreeQ[list] (>= v9.0)\n\nDuplicateFreeQ[{1, 2, 3}] // Print;  (* True*)\nDuplicateFreeQ[{1, 2, 1}] // Print;  (* False *)\n\n\nTensorQ[expr]\nOptional arguments of Return[expr, func] and Break[func]\n(http://mathematica.stackexchange.com/a/6757)\n\nf[x_] := Module[{},\n  Do[If[x > 5, Return[a]], {3}]; x\n];\nf[6] // Print;  (* 6 *)\n\nf[x_] := Module[{},\n  Do[If[x > 5, Return[a, Module]], {3}]; x\n];\nf[6] // Print;  (* a *)\n\nSystem`Private`\n\n\nInternalSeries[f, {x, x0, n}] (>= v5.1)\n\nFunc /: System`Private`InternalSeries[Func[x_], {x_, 0, n_Integer}] :=\n  Sum[x^i, {i, 0, n}] + x^n * O[x];\n\nSeries[Func[x] / x, {x, 0, 2}] // Print;  (* 1/x + 1 + x + x^2 + O[x]^3 *)\n\nSpecialFunctions`\n\n\nHarmonicPolyLog[{m1, ..., mk}, x] (>= v9.0)\n\nFunctionExpandHarmonicPolyLog[expr] (>= v9.0)\n\nMultipleFiniteHarmonicSumS[{m1, ..., mk}, n] (>= v9.0)\n\nMultiplePolyLog[{m1, ..., mk}, {z1, ..., zk}] (>= v9.0)\n\nMultipleZetaValue[{m1, ..., mk}] (>= v9.0)\n\nShuffleProductExpand[expr] (>= v9.0)\n\nStuffleProductExpand[expr] (>= v9.0)\n\nIt seems that the definitions of harmonic polylogarithms and multipolylogarithms are the same as Remiddi and Vermaseren and Vollinga and Weinzierl, respectively:\n(* HPL 2.0, Mathematica 10.1.0 *)\n<<HPL`;\nHPL[{1, -2, 3, 0}, 0.7] // Print;\nSpecialFunctions`HarmonicPolyLog[{1, -2, 3, 0}, 0.7] // Print;\nSpecialFunctions`MultiplePolyLog[{1, -2, 3, 0}, {0.7, 1, 1, 1}] // Print;\n\n-0.25112\n-0.25112\n-0.25112\n\nStill the implementation is mysterious...\n(* Mathematica 10.1.0 *)\nSeries[PolyLog[2, 1 - x], {x, 0, 1}] // Print;\nSeries[SpecialFunctions`HarmonicPolyLog[{2}, 1 - x] // FunctionExpand, {x, 0, 1}] // Print;\nSeries[SpecialFunctions`HarmonicPolyLog[{2}, 1 - x], {x, 0, 1}, Assumptions -> 0 < x < 1] // Print;\n\nPi^2/6 + (-1+Log[x]) x + O[x]^2\nPi^2/6 + (-1+Log[x]) x + O[x]^2\nPi^2/6 + (-1-2*I*Pi+Log[x]) x + O[x]^2\n\nLess known functions\nOnly usage messages by ?Command are available.\n\nArgumentCountQ[head, len, min, max]\n\nArgumentCountQ[head, len, {m1, m2, ..., mi}] (>= v8.0)\n\nTwoArgFunc[a___] := Null /; ArgumentCountQ[TwoArgFunc, Length[{a}], 2, 2] && False;\n\nTwoArgFunc[1, 2] // Print;  (* TwoArgFunc[1, 2] *)\nTwoArgFunc[1, 2, 3] // Print;  (* TwoArgFunc[1, 2, 3] with an error message \"TwoArgFunc::argrx: TwoArgFunc called with 3 arguments; 2 arguments are expected.\" *)\n\n\nListQ[expr]\nOptionQ[e]\n\nIn >= v6.0, one can use OptionsPattern and OptionValue for manipulating options.\n\nStringQ[expr]\n\nSee also\n\n* [What are some useful, undocumented Mathematica functions?](http://mathematica.stackexchange.com/questions/805/what-are-some-useful-undocumented-mathematica-functions)\n\n* [Is using undocumented functionality a Bad Idea\u2122?](http://mathematica.stackexchange.com/questions/5940/is-using-undocumented-functionality-a-bad-idea%E2%84%A2)\n\n* [Mathematica tricks](http://web.ift.uib.no/~szhorvat/mmatricks.php)\n\n**Caution!** There is no guarantee for the following information. They are obtained by guessing. In the future, the company may change them in an incompatible way.\n\n**System`**\n\n* `DuplicateFreeQ[list]` (>= v9.0)\n\n```mma\nDuplicateFreeQ[{1, 2, 3}] // Print;  (* True*)\nDuplicateFreeQ[{1, 2, 1}] // Print;  (* False *)\n```\n\n* `TensorQ[expr]`\n\n* Optional arguments of `Return[expr, func]` and `Break[func]`\n(http://mathematica.stackexchange.com/a/6757)\n\n```mma\nf[x_] := Module[{},\n  Do[If[x > 5, Return[a]], {3}]; x\n];\nf[6] // Print;  (* 6 *)\n\nf[x_] := Module[{},\n  Do[If[x > 5, Return[a, Module]], {3}]; x\n];\nf[6] // Print;  (* a *)\n```\n \n**System\\`Private\\`**\n\n* `InternalSeries[f, {x, x0, n}]` (>= v5.1)\n\n```mma\nFunc /: System`Private`InternalSeries[Func[x_], {x_, 0, n_Integer}] :=\n  Sum[x^i, {i, 0, n}] + x^n * O[x];\n\nSeries[Func[x] / x, {x, 0, 2}] // Print;  (* 1/x + 1 + x + x^2 + O[x]^3 *)\n```\n\n**SpecialFunctions`**\n\n* `HarmonicPolyLog[{m1, ..., mk}, x]` (>= v9.0)\n* `FunctionExpandHarmonicPolyLog[expr]` (>= v9.0)\n* `MultipleFiniteHarmonicSumS[{m1, ..., mk}, n]` (>= v9.0)\n* `MultiplePolyLog[{m1, ..., mk}, {z1, ..., zk}]` (>= v9.0)\n* `MultipleZetaValue[{m1, ..., mk}]` (>= v9.0)\n* `ShuffleProductExpand[expr]` (>= v9.0)\n* `StuffleProductExpand[expr]` (>= v9.0)\n\nIt seems that the definitions of harmonic polylogarithms and multipolylogarithms are the same as [Remiddi and Vermaseren](http://arxiv.org/abs/hep-ph/9905237) and [Vollinga and Weinzierl](http://arxiv.org/abs/hep-ph/0410259), respectively:\n\n```mma\n(* HPL 2.0, Mathematica 10.1.0 *)\n<<HPL`;\nHPL[{1, -2, 3, 0}, 0.7] // Print;\nSpecialFunctions`HarmonicPolyLog[{1, -2, 3, 0}, 0.7] // Print;\nSpecialFunctions`MultiplePolyLog[{1, -2, 3, 0}, {0.7, 1, 1, 1}] // Print;\n```\n```\n-0.25112\n-0.25112\n-0.25112\n```\nStill the implementation is mysterious...\n\n```mma\n(* Mathematica 10.1.0 *)\nSeries[PolyLog[2, 1 - x], {x, 0, 1}] // Print;\nSeries[SpecialFunctions`HarmonicPolyLog[{2}, 1 - x] // FunctionExpand, {x, 0, 1}] // Print;\nSeries[SpecialFunctions`HarmonicPolyLog[{2}, 1 - x], {x, 0, 1}, Assumptions -> 0 < x < 1] // Print;\n```\n```mma\nPi^2/6 + (-1+Log[x]) x + O[x]^2\nPi^2/6 + (-1+Log[x]) x + O[x]^2\nPi^2/6 + (-1-2*I*Pi+Log[x]) x + O[x]^2\n```\n\n**Less known functions**\n\nOnly usage messages by `?Command` are available.\n\n* `ArgumentCountQ[head, len, min, max]`\n* `ArgumentCountQ[head, len, {m1, m2, ..., mi}]` (>= v8.0)\n\n```mma\nTwoArgFunc[a___] := Null /; ArgumentCountQ[TwoArgFunc, Length[{a}], 2, 2] && False;\n\nTwoArgFunc[1, 2] // Print;  (* TwoArgFunc[1, 2] *)\nTwoArgFunc[1, 2, 3] // Print;  (* TwoArgFunc[1, 2, 3] with an error message \"TwoArgFunc::argrx: TwoArgFunc called with 3 arguments; 2 arguments are expected.\" *)\n```\n\n* `ListQ[expr]`\n\n* `OptionQ[e]`\n\nIn >= v6.0, one can use `OptionsPattern` and `OptionValue` for manipulating options.\n\n* `StringQ[expr]`\n", "tags": ["Mathematica10.1.0, 9.0.1"]}