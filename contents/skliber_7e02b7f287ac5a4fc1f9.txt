{"context": "\n\nPlay + pac4j\u30a8\u30f3\u30c8\u30ea\u30fc\u4e00\u89a7\nPlayFramework + pac4j\u3067OAuth\u3092\u4f7f\u3046\u3000\u2460Twitter\u8a8d\u53ef\nPlayFramework + pac4j\u3067OAuth\u3092\u4f7f\u3046\u3000\u2461DB\u9023\u643a\n\n\u672c\u8a18\u4e8b\u306e\u30b4\u30fc\u30eb\n\u53d6\u5f97\u3057\u305f\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u3092DB\u306b\u683c\u7d0d\u3057\u3001\u7a81\u5408\u305b\u306b\u3088\u308b\u30ed\u30b0\u30a4\u30f3\u30ed\u30b0\u30a2\u30a6\u30c8\u3092\u5b9f\u88c5\n\n\u5168\u30b3\u30fc\u30c9\nhttps://github.com/skliber/pac4j-test/tree/db_link\n\n\u5b9f\u88c5\n\n\u65b9\u91dd\n\n\u30e6\u30fc\u30b6\u30fc\u306fSNSID\u3067DB\u5185\u306e\u4e00\u610f\u6027\u3092\u78ba\u4fdd\n\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u306f\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u60c5\u5831\u3092\u5165\u308c\u306a\u3044\n\n\nEbean\u306e\u6e96\u5099\n\napp/build.sbt\nlazy val root = (project in file(\".\")).enablePlugins(PlayJava, PlayEbean)\n\n\napp/project/plugins.sbt\n\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n// Play Ebean support, to enable, uncomment this line, and enable in your build.sbt using\n// enablePlugins(PlayEbean).\naddSbtPlugin(\"com.typesafe.sbt\" % \"sbt-play-ebean\" % \"3.0.2\")\n\n\napp/conf/application.conf\ndefault.driver\u3068default.url\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\nebean.default = [\"models.entity.*\"]\u3092\u8ffd\u8a18\n...\ndb {\n  # You can declare as many datasources as you want.\n  # By convention, the default datasource is named `default`\n\n  # https://www.playframework.com/documentation/latest/Developing-with-the-H2-Database\n  default.driver = org.h2.Driver\n  default.url = \"jdbc:h2:mem:play\"\n  #default.username = sa\n  #default.password = \"\"\n\n  # You can turn on SQL logging for any datasource\n  # https://www.playframework.com/documentation/latest/Highlights25#Logging-SQL-statements\n  #default.logSql=true\n}\nebean.default = [\"models.entity.*\"]\n...\n\n\nDB\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n\napp/models/entity/BaseEntity.java\n\u5168\u3066\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u89aa\u30af\u30e9\u30b9\nID\u306b\u3088\u308b\u30d7\u30e9\u30a4\u30de\u30ea\u30fc\u30ad\u30fc\u3068\u4f5c\u6210\u65e5\u6642\u3068\u66f4\u65b0\u65e5\u6642\u3092\u8a2d\u5b9a\n\nBaseEntity.java\npackage models.entity;\n\nimport java.time.LocalDateTime;\n\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.MappedSuperclass;\n\nimport com.avaje.ebean.Model;\nimport com.avaje.ebean.annotation.CreatedTimestamp;\nimport com.avaje.ebean.annotation.UpdatedTimestamp;\n\n@MappedSuperclass\npublic class BaseEntity extends Model {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    public Long id;\n\n    @CreatedTimestamp\n    public LocalDateTime create_date;\n\n    @UpdatedTimestamp\n    public LocalDateTime update_date;\n\n}\n\n\n\napp/models/entity/User.java\nSNS\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u7ba1\u7406\u3059\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\nSNSID\u306f@Column(unique = true)\u3067\u4e00\u610f\u6027\u3092\u4fdd\u8a3c\u3059\u308b\n\nUser.java\npackage models.entity;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\n\n@Entity\npublic class User extends BaseEntity {\n\n    /* SNS\u304c\u63d0\u4f9b\u3059\u308b\u4e00\u610f\u306aID */\n    @Column(unique = true)\n    public String sns_id;\n\n    /* \u30e6\u30fc\u30b6\u30fc\u30cd\u30fc\u30e0 */\n    public String name;\n\n    /* \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9 */\n    public String mail;\n\n    /* \u30d1\u30b9\u30ef\u30fc\u30c9 */\n    public String password;\n\n    public static Finder<Long, User> finder = new Finder<Long, User>(User.class);\n\n}\n\n\n\n\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\n\napp/models/service/user/UserService.java\nCommonProfile#getId()\u3067\u8a8d\u53ef\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306eSNSID\u304c\u53d6\u5f97\u3067\u304d\u308b\n\nUserService.java\n...\n\n    /**\n     * SNS\u7d4c\u7531\u306e\u767b\u9332or\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\n     *\n     * @param profile\n     * @return\n     */\n    public Optional<User> createOrLogin(CommonProfile profile) {\n\n        // DB\u306b\u540c\u3058SNSID\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u5b58\u5728\u3057\u305f\u3089\u767b\u9332\u305b\u305a\u30ed\u30b0\u30a4\u30f3\n        Optional<User> userOps = userModelService.findBySnsId(profile.getId());\n        if(userOps.isPresent()){\n            return userOps;\n        }\n\n        // \u65b0\u898f\u4f5c\u6210\u51e6\u7406\n        User user = new User();\n        user.sns_id = profile.getId();\n        user.name = profile.getDisplayName();\n\n        return userModelService.save(user);\n    }\n\n...\n\n\n\napp/models/service/user/UserModelService.java\nSNSID\u3067DB\u3092\u691c\u7d22\n\u30ec\u30b3\u30fc\u30c9\u304c\u5b58\u5728\u3059\u308c\u3070\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u8fd4\u3057\u3001\u5b58\u5728\u3057\u306a\u3051\u308c\u3070empty\u3092\u8fd4\u3059\n\nUserModelService.java\n...\n\n    public Optional<User> findBySnsId(String snsId) {\n        return Optional.ofNullable(snsId).map(sns_id -> User.finder.where().eq(\"sns_id\", sns_id).findUnique());\n    }\n\n...\n\n\n\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\n\napp/controller/LoginController.java\n\nLoginController.java\npublic class LoginController extends Controller {\n\n    @Inject\n    UserService userService;\n\n    @Inject\n    protected PlayCacheStore playCacheStore;\n\n    @Inject\n    protected PlaySessionStore playSessionStore;\n\n    private List<CommonProfile> getProfiles() {\n        final PlayWebContext context = new PlayWebContext(ctx(), playSessionStore);\n        final ProfileManager<CommonProfile> profileManager = new ProfileManager<>(context);\n        return profileManager.getAll(true);\n    }\n\n    private void storeUserId(String sessionId, String userId) {\n        final PlayWebContext context = new PlayWebContext(ctx(), playSessionStore);\n        playCacheStore.set(context, sessionId, userId);\n    }\n\n    @Secure(clients = \"TwitterClient\")\n    public Result twitterLogin() {\n        Optional<User> userOps = userService.createOrLogin(getProfiles().get(0));\n        if (!userOps.isPresent()) {\n            return badRequest(\"FAILURE\");\n        }\n        storeUserId(session(org.pac4j.core.context.Pac4jConstants.SESSION_ID), String.valueOf(userOps.get().id));\n        return ok(protectedIndex.render(getProfiles()));\n    }\n\n}\n\n\n\n@Inject protected PlayCacheStore playCacheStore;\nCache\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\n\nprivate void storeUserId(String sessionId, String userId)\nCache\u306bUser\u306eID\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\n\nstoreUserId(session(org.pac4j.core.context.Pac4jConstants.SESSION_ID), String.valueOf(userOps.get().id));\n\u30bb\u30c3\u30b7\u30e7\u30f3ID\u306e\u5024\u3092\u30ad\u30fc\u306b\u3057\u3066User\u306eID\u3092Cache\u306b\u4fdd\u5b58\n\u3053\u308c\u3067\u7279\u5b9a\u306e\u30bb\u30c3\u30b7\u30e7\u30f3ID\u3092\u6301\u3064\u30e6\u30fc\u30b6\u30fc\u304cDB\u5185\u306e\u3069\u306eUser\u304b\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u308b\n\n\u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u56f3\u89e3\n\n\n\u30d6\u30e9\u30a6\u30b6\n\u8a8d\u53ef\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u30d6\u30e9\u30a6\u30b6\u306b\u306f\u3001pac4jSessionId\u3092\u30ad\u30fc\u3068\u3057\u3066\u30e9\u30f3\u30c0\u30e0\u306aUUID\u304c\u7d10\u4ed8\u304f\u30af\u30c3\u30ad\u30fc\u304c\u4f5c\u3089\u308c\u308b\n\n\u30b5\u30fc\u30d0\u30fc\n\u30b5\u30fc\u30d0\u30fc\u5185\u306eCache\u306b\u306f\u3001UUID\u3092\u30ad\u30fc\u3068\u3057\u3066\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u306eID\u304c\u7d10\u4ed8\u304f\n\n\u52d5\u4f5c\u78ba\u8a8d\nSkip...\n\nNext\n\npac4j\u3092\u7d4c\u7531\u3057\u305f\u30d5\u30a9\u30fc\u30e0\u304b\u3089\u306e\u767b\u9332\nor\n\u30ed\u30fc\u30eb\u306b\u3088\u308b\u6a29\u9650\u306e\u7ba1\u7406\nor\nauthorizers\u306e\u5fdc\u7528\n\n# Play + pac4j\u30a8\u30f3\u30c8\u30ea\u30fc\u4e00\u89a7\n[PlayFramework + pac4j\u3067OAuth\u3092\u4f7f\u3046\u3000\u2460Twitter\u8a8d\u53ef](http://qiita.com/skliber/items/ca640e7eaa737ef9246b)\n[PlayFramework + pac4j\u3067OAuth\u3092\u4f7f\u3046\u3000\u2461DB\u9023\u643a](http://qiita.com/skliber/items/7e02b7f287ac5a4fc1f9)\n\n# \u672c\u8a18\u4e8b\u306e\u30b4\u30fc\u30eb\n\u53d6\u5f97\u3057\u305f\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u3092DB\u306b\u683c\u7d0d\u3057\u3001\u7a81\u5408\u305b\u306b\u3088\u308b\u30ed\u30b0\u30a4\u30f3\u30ed\u30b0\u30a2\u30a6\u30c8\u3092\u5b9f\u88c5\n\n# \u5168\u30b3\u30fc\u30c9\nhttps://github.com/skliber/pac4j-test/tree/db_link\n\n\n# \u5b9f\u88c5\n\n## \u65b9\u91dd\n\n- \u30e6\u30fc\u30b6\u30fc\u306fSNSID\u3067DB\u5185\u306e\u4e00\u610f\u6027\u3092\u78ba\u4fdd\n\n- \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u306f\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u60c5\u5831\u3092\u5165\u308c\u306a\u3044\n\n## Ebean\u306e\u6e96\u5099\n### app/build.sbt\n\n```\nlazy val root = (project in file(\".\")).enablePlugins(PlayJava, PlayEbean)\n```\n\n### app/project/plugins.sbt\n\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n\n```\n// Play Ebean support, to enable, uncomment this line, and enable in your build.sbt using\n// enablePlugins(PlayEbean).\naddSbtPlugin(\"com.typesafe.sbt\" % \"sbt-play-ebean\" % \"3.0.2\")\n```\n\n#### app/conf/application.conf\ndefault.driver\u3068default.url\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\nebean.default = [\"models.entity.*\"]\u3092\u8ffd\u8a18\n\n```\n...\ndb {\n  # You can declare as many datasources as you want.\n  # By convention, the default datasource is named `default`\n\n  # https://www.playframework.com/documentation/latest/Developing-with-the-H2-Database\n  default.driver = org.h2.Driver\n  default.url = \"jdbc:h2:mem:play\"\n  #default.username = sa\n  #default.password = \"\"\n\n  # You can turn on SQL logging for any datasource\n  # https://www.playframework.com/documentation/latest/Highlights25#Logging-SQL-statements\n  #default.logSql=true\n}\nebean.default = [\"models.entity.*\"]\n...\n```\n\n## DB\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n\n### app/models/entity/BaseEntity.java\n\u5168\u3066\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u89aa\u30af\u30e9\u30b9\nID\u306b\u3088\u308b\u30d7\u30e9\u30a4\u30de\u30ea\u30fc\u30ad\u30fc\u3068\u4f5c\u6210\u65e5\u6642\u3068\u66f4\u65b0\u65e5\u6642\u3092\u8a2d\u5b9a\n\n```java:BaseEntity.java\npackage models.entity;\n\nimport java.time.LocalDateTime;\n\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.MappedSuperclass;\n\nimport com.avaje.ebean.Model;\nimport com.avaje.ebean.annotation.CreatedTimestamp;\nimport com.avaje.ebean.annotation.UpdatedTimestamp;\n\n@MappedSuperclass\npublic class BaseEntity extends Model {\n\n\t@Id\n\t@GeneratedValue(strategy = GenerationType.IDENTITY)\n\tpublic Long id;\n\n\t@CreatedTimestamp\n\tpublic LocalDateTime create_date;\n\n\t@UpdatedTimestamp\n\tpublic LocalDateTime update_date;\n\n}\n```\n\n### app/models/entity/User.java\nSNS\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u7ba1\u7406\u3059\u308b\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\nSNSID\u306f@Column(unique = true)\u3067\u4e00\u610f\u6027\u3092\u4fdd\u8a3c\u3059\u308b\n\n```java:User.java\npackage models.entity;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\n\n@Entity\npublic class User extends BaseEntity {\n\n\t/* SNS\u304c\u63d0\u4f9b\u3059\u308b\u4e00\u610f\u306aID */\n\t@Column(unique = true)\n\tpublic String sns_id;\n\n\t/* \u30e6\u30fc\u30b6\u30fc\u30cd\u30fc\u30e0 */\n\tpublic String name;\n\n\t/* \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9 */\n\tpublic String mail;\n\n\t/* \u30d1\u30b9\u30ef\u30fc\u30c9 */\n\tpublic String password;\n\n\tpublic static Finder<Long, User> finder = new Finder<Long, User>(User.class);\n\n}\n```\n\n## \u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\n### app/models/service/user/UserService.java\nCommonProfile#getId()\u3067\u8a8d\u53ef\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306eSNSID\u304c\u53d6\u5f97\u3067\u304d\u308b\n\n```java:UserService.java\n...\n\n\t/**\n\t * SNS\u7d4c\u7531\u306e\u767b\u9332or\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\n\t *\n\t * @param profile\n\t * @return\n\t */\n\tpublic Optional<User> createOrLogin(CommonProfile profile) {\n\n\t\t// DB\u306b\u540c\u3058SNSID\u306e\u30e6\u30fc\u30b6\u30fc\u304c\u5b58\u5728\u3057\u305f\u3089\u767b\u9332\u305b\u305a\u30ed\u30b0\u30a4\u30f3\n\t\tOptional<User> userOps = userModelService.findBySnsId(profile.getId());\n\t\tif(userOps.isPresent()){\n\t\t\treturn userOps;\n\t\t}\n\n\t\t// \u65b0\u898f\u4f5c\u6210\u51e6\u7406\n\t\tUser user = new User();\n\t\tuser.sns_id = profile.getId();\n\t\tuser.name = profile.getDisplayName();\n\n\t\treturn userModelService.save(user);\n\t}\n\n...\n```\n\n### app/models/service/user/UserModelService.java\n\nSNSID\u3067DB\u3092\u691c\u7d22\n\u30ec\u30b3\u30fc\u30c9\u304c\u5b58\u5728\u3059\u308c\u3070\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u8fd4\u3057\u3001\u5b58\u5728\u3057\u306a\u3051\u308c\u3070empty\u3092\u8fd4\u3059\n\n```java:UserModelService.java\n...\n\n\tpublic Optional<User> findBySnsId(String snsId) {\n\t\treturn Optional.ofNullable(snsId).map(sns_id -> User.finder.where().eq(\"sns_id\", sns_id).findUnique());\n\t}\n\n...\n\n```\n\n## \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\n\n### app/controller/LoginController.java\n\n```java:LoginController.java\npublic class LoginController extends Controller {\n\n\t@Inject\n\tUserService userService;\n\n\t@Inject\n\tprotected PlayCacheStore playCacheStore;\n\n\t@Inject\n\tprotected PlaySessionStore playSessionStore;\n\n\tprivate List<CommonProfile> getProfiles() {\n\t\tfinal PlayWebContext context = new PlayWebContext(ctx(), playSessionStore);\n\t\tfinal ProfileManager<CommonProfile> profileManager = new ProfileManager<>(context);\n\t\treturn profileManager.getAll(true);\n\t}\n\n\tprivate void storeUserId(String sessionId, String userId) {\n\t\tfinal PlayWebContext context = new PlayWebContext(ctx(), playSessionStore);\n\t\tplayCacheStore.set(context, sessionId, userId);\n\t}\n\n\t@Secure(clients = \"TwitterClient\")\n\tpublic Result twitterLogin() {\n\t\tOptional<User> userOps = userService.createOrLogin(getProfiles().get(0));\n\t\tif (!userOps.isPresent()) {\n\t\t\treturn badRequest(\"FAILURE\");\n\t\t}\n\t\tstoreUserId(session(org.pac4j.core.context.Pac4jConstants.SESSION_ID), String.valueOf(userOps.get().id));\n\t\treturn ok(protectedIndex.render(getProfiles()));\n\t}\n\n}\n```\n####  @Inject protected PlayCacheStore playCacheStore;\nCache\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\n\n#### private void storeUserId(String sessionId, String userId) \nCache\u306bUser\u306eID\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\n\n#### storeUserId(session(org.pac4j.core.context.Pac4jConstants.SESSION_ID), String.valueOf(userOps.get().id));\n\n\u30bb\u30c3\u30b7\u30e7\u30f3ID\u306e\u5024\u3092\u30ad\u30fc\u306b\u3057\u3066User\u306eID\u3092Cache\u306b\u4fdd\u5b58\n\u3053\u308c\u3067\u7279\u5b9a\u306e\u30bb\u30c3\u30b7\u30e7\u30f3ID\u3092\u6301\u3064\u30e6\u30fc\u30b6\u30fc\u304cDB\u5185\u306e\u3069\u306eUser\u304b\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u308b\n\n## \u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u56f3\u89e3\n\n![playsessioncache.png](https://qiita-image-store.s3.amazonaws.com/0/77685/d2bd0265-a41e-762f-e7cc-026d1f1c0dbf.png)\n\n### \u30d6\u30e9\u30a6\u30b6\n\u8a8d\u53ef\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u306e\u30d6\u30e9\u30a6\u30b6\u306b\u306f\u3001pac4jSessionId\u3092\u30ad\u30fc\u3068\u3057\u3066\u30e9\u30f3\u30c0\u30e0\u306aUUID\u304c\u7d10\u4ed8\u304f\u30af\u30c3\u30ad\u30fc\u304c\u4f5c\u3089\u308c\u308b\n\n### \u30b5\u30fc\u30d0\u30fc\n\u30b5\u30fc\u30d0\u30fc\u5185\u306eCache\u306b\u306f\u3001UUID\u3092\u30ad\u30fc\u3068\u3057\u3066\u305d\u306e\u30e6\u30fc\u30b6\u30fc\u306eID\u304c\u7d10\u4ed8\u304f\n\n## \u52d5\u4f5c\u78ba\u8a8d\nSkip...\n\n## Next\n- pac4j\u3092\u7d4c\u7531\u3057\u305f\u30d5\u30a9\u30fc\u30e0\u304b\u3089\u306e\u767b\u9332\nor\n- \u30ed\u30fc\u30eb\u306b\u3088\u308b\u6a29\u9650\u306e\u7ba1\u7406\nor\n- authorizers\u306e\u5fdc\u7528\n", "tags": ["PlayFramework2.5", "pac4j1.9.2", "Java8", "Ebean"]}