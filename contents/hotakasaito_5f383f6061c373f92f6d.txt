{"context": " More than 1 year has passed since last update.\u4f8b\u3048\u3070\u30ab\u30b9\u30bf\u30de\u30fc\u30b5\u30dd\u30fc\u30c8\u304b\u3089\u30e1\u30fc\u30eb\u914d\u4fe1\u505c\u6b62\u3092\u4f9d\u983c\u3055\u308c\u305f\u3068\u304d\u3001WEB UI\u3068\u3057\u3066\u6e96\u5099\u3057\u3066\u306a\u3044\u3068\u624b\u4f5c\u696d\u3067\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u305f\u308a\u3068\u4f55\u304b\u3068\u65e5\u3005\u306e\u904b\u7528\u3067\u9762\u5012\u306a\u3053\u3068\u304c\u3042\u308b\u3002\nslack\u306b\u300c\u3053\u306e\u30a2\u30c9\u30ec\u30b9\u3067\u3059\u304c\u30e1\u30fc\u30eb\u914d\u4fe1\u505c\u6b62\u51e6\u7406\u304a\u9858\u3044\u3057\u307e\u3059\u30fc\u300d\u306a\u3093\u3066\u8a00\u3046\u8a00\u8449\u3092\u62fe\u3063\u3066\u30e1\u30fc\u30eb\u914d\u4fe1\u505c\u6b62\u3067\u304d\u305f\u3089\u7d20\u6575\u304b\u3082\u3068\u601d\u3044hubot\u306b\u9811\u5f35\u3063\u3066\u3082\u3089\u3046\u3053\u3068\u306b\u3057\u305f\u3002\nAWS\u306eSQS\u306b\u30ad\u30e5\u30fc\u3092\u3076\u3061\u8fbc\u3093\u3067\u5f8c\u306f\u30d0\u30c3\u30c1\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\n\u5148\u305a\u306faws-sdk\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304b\u3089\nnpm install aws-sdk --save\n\n\nscripts/unsubscriber.coffee\n\ncoffeescript\u306f\u7d20\u4eba\u306a\u306e\u3067\u6c5a\u3044\u3067\u3059\nAWS_ACCESS_KEY_ID \u3068 AWS_SECRET_ACCESS_KEY \u306f\u74b0\u5883\u5909\u6570\u3067\u8a2d\u5b9a\u3059\u308b\nslack\u4e0a\u3067\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u6253\u3064\u3068\u300cmailto:xxx@xxx.jp|xxx@xxx.jp\u300d\u3068\u3044\u3046\u5f62\u5f0f\u3067\u6e21\u3063\u3066\u304f\u308b\u306e\u3067\u305d\u3053\u306f\u3088\u3057\u306a\u306b\u3059\u308b\n\nAWS = require('aws-sdk');\nAWS.config.region = 'ap-northeast-1'\nsqs = new AWS.SQS();\nqueue_name = 'queue-xxx'\n\nmodule.exports = (robot) ->\n  enqueue = (queue_url, email, code, room) ->\n    params = {MessageBody: \"{\\\"email\\\":\\\"#{email}\\\",\\\"code\\\":\\\"#{code}\\\"}\", QueueUrl: queue_url, DelaySeconds: 30}\n    sqs.sendMessage(params, (err, data) ->\n      if err\n        robot.send {room: room}, \"error!\"\n      else\n        robot.send {room: room}, \"#{email} \u306e\u30e1\u30fc\u30eb\u914d\u4fe1\u505c\u6b62\u3057\u307e\u3059\"\n    )\n\n  robot.respond /\u505c\u6b62\u3088\u308d\u3057\u304f (.+)/i, (msg) ->\n    email = msg.match[1]\n    if not /([a-zA-Z0-9])+([a-zA-Z0-9\\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+/.test(email)\n      msg.send(\"[syntax error] #{msg.message}\")\n      return\n    sqs.listQueues({QueueNamePrefix: queue_name}, (err, data) ->\n      if err\n        msg.send(\"error!\")\n        return\n      if data.QueueUrls\n        enqueue(data.QueueUrls[0], email, 9, msg.message.user.room)\n      else\n        sqs.createQueue({QueueName: queue_name}, (err, data) ->\n          if err or not data.QueueUrl\n            msg.send(\"error!\")\n            return\n          else\n            enqueue(data.QueueUrl, email, 9, msg.message.user.room)\n        )\n    )\n\n\nslack\n\u4ee5\u4e0b\u3092\u6253\u3066\u3070SQS\u306b\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u304c\u6e9c\u307e\u308b\n\u30dc\u30c3\u30c8\u540d \u505c\u6b62\u3088\u308d\u3057\u304f xxx@xxx.jp\n\n\u4f8b\u3048\u3070\u30ab\u30b9\u30bf\u30de\u30fc\u30b5\u30dd\u30fc\u30c8\u304b\u3089\u30e1\u30fc\u30eb\u914d\u4fe1\u505c\u6b62\u3092\u4f9d\u983c\u3055\u308c\u305f\u3068\u304d\u3001WEB UI\u3068\u3057\u3066\u6e96\u5099\u3057\u3066\u306a\u3044\u3068\u624b\u4f5c\u696d\u3067\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u305f\u308a\u3068\u4f55\u304b\u3068\u65e5\u3005\u306e\u904b\u7528\u3067\u9762\u5012\u306a\u3053\u3068\u304c\u3042\u308b\u3002\nslack\u306b\u300c\u3053\u306e\u30a2\u30c9\u30ec\u30b9\u3067\u3059\u304c\u30e1\u30fc\u30eb\u914d\u4fe1\u505c\u6b62\u51e6\u7406\u304a\u9858\u3044\u3057\u307e\u3059\u30fc\u300d\u306a\u3093\u3066\u8a00\u3046\u8a00\u8449\u3092\u62fe\u3063\u3066\u30e1\u30fc\u30eb\u914d\u4fe1\u505c\u6b62\u3067\u304d\u305f\u3089\u7d20\u6575\u304b\u3082\u3068\u601d\u3044hubot\u306b\u9811\u5f35\u3063\u3066\u3082\u3089\u3046\u3053\u3068\u306b\u3057\u305f\u3002\nAWS\u306eSQS\u306b\u30ad\u30e5\u30fc\u3092\u3076\u3061\u8fbc\u3093\u3067\u5f8c\u306f\u30d0\u30c3\u30c1\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u3066\u304f\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\n### \u5148\u305a\u306faws-sdk\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304b\u3089\n\n```bash\nnpm install aws-sdk --save\n```\n\n### scripts/unsubscriber.coffee\n* coffeescript\u306f\u7d20\u4eba\u306a\u306e\u3067\u6c5a\u3044\u3067\u3059\n* AWS_ACCESS_KEY_ID \u3068 AWS_SECRET_ACCESS_KEY \u306f\u74b0\u5883\u5909\u6570\u3067\u8a2d\u5b9a\u3059\u308b\n* slack\u4e0a\u3067\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u6253\u3064\u3068\u300cmailto:xxx@xxx.jp|xxx@xxx.jp\u300d\u3068\u3044\u3046\u5f62\u5f0f\u3067\u6e21\u3063\u3066\u304f\u308b\u306e\u3067\u305d\u3053\u306f\u3088\u3057\u306a\u306b\u3059\u308b\n\n```js\nAWS = require('aws-sdk');\nAWS.config.region = 'ap-northeast-1'\nsqs = new AWS.SQS();\nqueue_name = 'queue-xxx'\n\nmodule.exports = (robot) ->\n  enqueue = (queue_url, email, code, room) ->\n    params = {MessageBody: \"{\\\"email\\\":\\\"#{email}\\\",\\\"code\\\":\\\"#{code}\\\"}\", QueueUrl: queue_url, DelaySeconds: 30}\n    sqs.sendMessage(params, (err, data) ->\n      if err\n        robot.send {room: room}, \"error!\"\n      else\n        robot.send {room: room}, \"#{email} \u306e\u30e1\u30fc\u30eb\u914d\u4fe1\u505c\u6b62\u3057\u307e\u3059\"\n    )\n\n  robot.respond /\u505c\u6b62\u3088\u308d\u3057\u304f (.+)/i, (msg) ->\n    email = msg.match[1]\n    if not /([a-zA-Z0-9])+([a-zA-Z0-9\\._-])*@([a-zA-Z0-9_-])+([a-zA-Z0-9\\._-]+)+/.test(email)\n      msg.send(\"[syntax error] #{msg.message}\")\n      return\n    sqs.listQueues({QueueNamePrefix: queue_name}, (err, data) ->\n      if err\n        msg.send(\"error!\")\n        return\n      if data.QueueUrls\n        enqueue(data.QueueUrls[0], email, 9, msg.message.user.room)\n      else\n        sqs.createQueue({QueueName: queue_name}, (err, data) ->\n          if err or not data.QueueUrl\n            msg.send(\"error!\")\n            return\n          else\n            enqueue(data.QueueUrl, email, 9, msg.message.user.room)\n        )\n    )\n```\n\n### slack\n\u4ee5\u4e0b\u3092\u6253\u3066\u3070SQS\u306b\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u304c\u6e9c\u307e\u308b\n\n```\n\u30dc\u30c3\u30c8\u540d \u505c\u6b62\u3088\u308d\u3057\u304f xxx@xxx.jp\n```\n", "tags": ["Slack", "Hubot", "sqs"]}