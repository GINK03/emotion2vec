{"context": " More than 1 year has passed since last update.\n\n\u514d\u8cac\u4e8b\u9805\n3D\u3084\u6570\u5b66\u306e\u5c02\u9580\u5bb6\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u6240\u3005\u304a\u304b\u306a\u3057\u306a\u8a18\u8ff0\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u4e88\u3081\u3001\u3054\u627f\u77e5\u304a\u304d\u304f\u3060\u3055\u3044\u3002\n\n\u6982\u8981\n\u4eca\u56de\u5b66\u7fd2\u3057\u305f\u5185\u5bb9\u306f\u4e0b\u8a182\u70b9\u3067\u3059\u3002\n\n\u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\n\u30c6\u30af\u30b9\u30c1\u30e3\n\n\n\u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\n\u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\u306e\u5b9f\u88c5\u3092\u884c\u3046\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u57fa\u790e\u77e5\u8b58\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u6cd5\u7dda\n\u5149\u6e90\u306e\u7a2e\u985e\n\n\n\u6cd5\u7dda\n\u6cd5\u7dda\u306f\u7c21\u5358\u306b\u8a00\u3048\u3070\u3001\u9802\u70b9\u3084\u9762\u306e\u5411\u304d\u3092\u8868\u3059\u3082\u306e\u3067\u3059\u3002\nWebGL\u3067\u306f\u3053\u306e\u6cd5\u7dda\u3092\u3001\u30d9\u30af\u30c8\u30eb\u3092\u5229\u7528\u3057\u3066\u8868\u73fe\u3057\u307e\u3059\u3002\n\u4f8b\u3092\u6319\u3052\u308b\u3068\u3001\n// \u914d\u5217\u306e\u5de6\u304b\u3089\u9806\u306b\u3001x, y, z3\u3064\u306e\u9802\u70b9\u304b\u3089\u306a\u308b\u30d9\u30af\u30c8\u30eb\u3092\u8868\u3057\u3066\u3044\u308b\nvar normal = [ 1, 0, 0 ];\n\n\n\u5149\u6e90\u306e\u7a2e\u985e\n\u5149\u6e90\u306b\u306f\u5927\u304d\u304f\u4e0b\u8a183\u3064\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u62e1\u6563\u5149( Diffuse Light )\n\n\n\u5149\u304c\u7269\u4f53\u306b\u885d\u7a81\u3057\u3066\u62e1\u6563\u3057\u3066\u3044\u304f\u69d8\u5b50\u3092\u518d\u73fe\n\n\n\u53cd\u5c04\u5149( Specular Light )\n\n\n\u5149\u304c\u7269\u4f53\u306b\u885d\u7a81\u3057\u3066\u53cd\u5c04\u3057\u305f\u69d8\u5b50\u3092\u518d\u73fe\n\n\n\u74b0\u5883\u5149( Ambient Light )\n\n\n\u30e2\u30c7\u30eb\u306e\u5468\u308a\u306b\u3069\u306e\u3088\u3046\u306a\u5149\u304c\u3042\u308b\u304b\u3092\u518d\u73fe\n\n\n\n\n\u62e1\u6563\u5149\n\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\u6700\u521d\u306f\u62e1\u6563\u5149\u304b\u3089\u3001\u30bd\u30fc\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n006/public/js/app.js\n// \u4e2d\u7565\n// \u6cd5\u7dda\u306e\u5b9a\u7fa9\nvar normals = [\n -1.0, 0.0, 0.0,// 0\n  0.0, 1.0, 0.0,// 1\n  0.0, 0.0, 1.0,// 2\n  0.0,-1.0, 0.0,// 3\n  1.0, 0.0, 0.0,// 4\n\n  1.0, 0.0, 0.0,// 5\n  0.0, 1.0, 0.0,// 6\n  0.0, 0.0,-1.0,// 7\n  0.0,-1.0, 0.0,// 8\n -1.0, 0.0, 0.0,// 9\n];\n\n// \u4e2d\u7565\n// \u6cd5\u7dda\u306e\u9802\u70b9\u60c5\u5831\u3092VBO\u306b\u30d0\u30a4\u30f3\u30c9\nvar normalVbo = createVbo( normals );\ngl.bindBuffer( gl.ARRAY_BUFFER, normalVbo );\ngl.enableVertexAttribArray( locations[2] );\ngl.vertexAttribPointer( locations[2], strides[2], gl.FLOAT, false, 0, 0 );\n\n// \u4e2d\u7565\n// \u30e2\u30c7\u30eb\u306e\u9006\u884c\u5217\u3092GLSL\u306b\u6e21\u3059\nvar invMatrix = mat4.identity( mat4.create() );\nmat4.invert( invMatrix, mMatrix );\n\n\n\nJS\u306e\u5b9f\u88c5\u304b\u3089\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\nJS\u5074\u3067\u306f\u3001\u4e0b\u8a183\u3064\u306e\u5b9f\u88c5\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u6cd5\u7dda\u306e\u5b9a\u7fa9\n\u6cd5\u7dda\u3092VBO\u306b\u767b\u9332\n\u30e2\u30c7\u30eb\u306e\u9006\u884c\u5217\u3092GLSL\u306b\u767b\u9332\n\n\u3053\u3053\u3067\u5510\u7a81\u306b\u3067\u3066\u304d\u305f\u9006\u884c\u5217\u3067\u3059\u304c\u3001\u3053\u308c\u306f\u7c21\u5358\u306b\u8a00\u3048\u3070\u56de\u8ee2\u3092\u6253\u3061\u6d88\u3059\u884c\u5217\u3067\u3059\u3002\n\u3067\u306f\u3001\u306a\u305c\u9006\u884c\u5217\u304c\u5fc5\u8981\u306a\u306e\u304b\u3068\u3044\u3046\u3068\u5149\u6e90\u306e\u30d9\u30af\u30c8\u30eb\u3092\u30e2\u30c7\u30eb\u306e\u56de\u8ee2\u306b\u5408\u308f\u305b\u3066\u65b9\u5411\u3092\u5909\u3048\u308b\u305f\u3081\u3067\u3059\u3002\n\u65b9\u5411\u3092\u5909\u3048\u308b\u306e\u306f\u3001\u5149\u6e90\u3068\u6cd5\u7dda\u306e\u5411\u304d\u306b\u3088\u3063\u3066\u5149\u306e\u5f53\u305f\u308a\u65b9\u304c\u5909\u5316\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\u6587\u7ae0\u3060\u3068\u30a4\u30e1\u30fc\u30b8\u3057\u305a\u3089\u3044\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u8a08\u7b97\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u5149\u306e\u5f53\u305f\u308a\u65b9\u306f\u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3067\u8a08\u7b97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3088\u304f\u3001dot\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\nvar normal = [ 0, 1, 0 ];// \u6cd5\u7dda\nvar light  = [ 0, 1, 0 ];// \u5149\u6e90\n\ndot(normal, light);// -> 1\n\n\n// \u5149\u6e90\u306e\u65b9\u5411\u3092\u771f\u9006\u306b\u3057\u3066\u307f\u308b\nlight[1] = -1;\n\ndot(normal, light);// -> -1\n\n\n// \u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3092\u8a08\u7b97\nfunction dot( normal, light) { \n  var x = normal[0] * light[0];\n  var y = normal[1] * light[1];\n  var z = normal[2] * light[2];\n  return x + y + z;\n}\n\n\n\u4e0a\u306e\u4f8b\u306e\u3088\u3046\u306b\u3001\u5149\u6e90\u306e\u5411\u304d\u3092\u6cd5\u7dda\u3068\u9006\u65b9\u5411\u306b\u3057\u3066\u3084\u308b\u3068\u7d50\u679c\u304c\u304b\u308f\u308a\u307e\u3059\u306d\u3002\n\u5149\u6e90\u3068\u6cd5\u7dda\u304c\u540c\u3058\u5411\u304d\u306e\u5834\u5408\u306f1\u3001\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f-1\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nGLSL\u3067\u306f\u5149\u306e\u5f37\u3055\u306f0~1\u306b\u4e38\u3081\u3066\u4f7f\u3046\u306e\u3067\u3001\u524d\u8005\u306f\u5149\u304c\u5b8c\u5168\u306b\u3042\u305f\u3063\u3066\u3044\u308b\u72b6\u614b\u3001\u5f8c\u8005\u306f\u5149\u304c\u5168\u304f\u3042\u305f\u3063\u3066\u3044\u306a\u3044\u72b6\u614b\u3068\u8a00\u3048\u307e\u3059\u3002\n\u6b21\u306bGLSL\u306e\u5b9f\u88c5\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n006/public/index.html\n<script id=\"vs\" type=\"x-shader/x-vertex\">\n  attribute vec3 positions;\n  attribute vec4 colors;\n  attribute vec3 normals;\n\n  uniform   mat4 mvpMatrix;\n\n  varying   vec4 vColor;\n  varying   vec3 vNormal;\n\n  void main( void ){\n    vColor        = colors;\n    vNormal       = normals;\n    gl_Position   = mvpMatrix * vec4( positions, 1.0 );\n  }\n</script>\n<script id=\"fs\" type=\"x-shader/x-fragment\">\n  precision mediump float;\n  uniform   mat4    invMatrix;\n  varying   vec3    vNormal;\n  varying   vec4    vColor;\n\n  void main( void ){\n    vec3 light    = vec3( 0.0, 0.5, 0.5 );\n    vec3 invLight = normalize( invMatrix * vec4( light, 1.0 ) ).xyz;\n    float diff    = clamp( dot( invLight, vNormal ), 0.0, 1.0 );\n    gl_FragColor  = vec4( vec3( diff ), 1.0 ) * vColor;\n  }\n</script>\n\n\n\nlight\u5909\u6570\u3067\u5149\u6e90\u306e\u4f4d\u7f6e\u3092\u8a08\u7b97\u3002\n\u6b21\u306b\u3001\u30e2\u30c7\u30eb\u306e\u9006\u884c\u5217\u3067\u5149\u6e90\u306e\u4f4d\u7f6e\u3092\u30e2\u30c7\u30eb\u3068\u306f\u9006\u65b9\u5411\u306b\u56de\u8ee2\u3055\u305b\u307e\u3059\u3002\nnormalize\u306f\u5149\u6e90\u3092\u5358\u4f4d\u30d9\u30af\u30c8\u30eb\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306b\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u203b\u5358\u4f4d\u30d9\u30af\u30c8\u30eb\u306f\u3001\u30d9\u30af\u30c8\u30eb\u4e16\u754c\u306e1\u306e\u3053\u3068\u3060\u3068\u601d\u3063\u3066\u3082\u3089\u3048\u308c\u3070OK\u3067\u3059\u3002\nvec3 invLight = normalize( invMatrix * vec4( light, 1.0 ) ).xyz;\n\n\n\u8a08\u7b97\u3057\u305f\u5149\u6e90\u3068\u6cd5\u7dda\u306e\u5185\u7a4d\u3092\u8a08\u7b97\u3057\u3066\u3001\u305d\u306e\u7d50\u679c\u30920~1\u306e\u7bc4\u56f2\u306b\u307e\u3068\u3081\u307e\u3059\u3002\nfloat diff = clamp( dot( invLight, vNormal ), 0.0, 1.0 );\n\n\u6700\u5f8c\u306b\u8a08\u7b97\u3057\u305f\u3001\u62e1\u6563\u5149\u3092vColor\u306b\u639b\u3051\u5408\u308f\u305b\u3066\u5168\u884c\u7a0b\u306f\u5b8c\u4e86\u3067\u3059\u3002\ngl_FragColor = vec4( vec3( diff ), 1.0 ) * vColor;\n\n\n\n\u53cd\u5c04\u5149\n\u6b21\u306f\u53cd\u5c04\u5149\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n007/public/js/app.js\n// \u4e2d\u7565\n\nvar eyePosition    = [ cx, 0.0, cz ];\nvar centerPosition = [ 0.0, 0.0, 0.0 ];\n\n// \u4e2d\u7565\n\nuLocations[3] = gl.getUniformLocation( program, 'eyePosition' );\nuLocations[4] = gl.getUniformLocation( program, 'centerPoint' );\n\n\n\n\u307e\u305a\u306f\u3001JS\u5074\u304b\u3089\u3002\nuniform\u306b\u65b0\u3057\u304f\u3001eyePosition\u3068centerPosition\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u53cd\u5c04\u5149\u3067\u306f\u3001\u7269\u4f53\u306b\u885d\u7a81\u3057\u3066\u53cd\u5c04\u3057\u305f\u5149\u3092\u30ab\u30e1\u30e9\u304c\u6349\u3048\u305f\u3089\u3069\u3046\u3044\u3046\u898b\u3048\u65b9\u3092\u3059\u308b\u304b\u3092\u518d\u73fe\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3067\u3059\u3002\n\u6b21\u306b\u3001GLSL\u5074\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n007/public/index.html\n<script id=\"vs\" type=\"x-shader/x-vertex\">\n  attribute vec3 positions;\n  attribute vec4 colors;\n  attribute vec3 normals;\n\n  uniform   mat4 mvpMatrix;\n\n  varying   vec4 vColor;\n  varying   vec3 vNormal;\n\n  void main( void ){\n    vColor        = colors;\n    vNormal       = normals;\n    gl_Position   = mvpMatrix * vec4( positions, 1.0 );\n  }\n</script>\n<script id=\"fs\" type=\"x-shader/x-fragment\">\n  precision mediump float;\n  uniform   mat4    invMatrix;\n  varying   vec3    vNormal;\n  varying   vec4    vColor;\n  uniform   vec3    lightDirection;\n  uniform   vec3    eyePosition;\n  uniform   vec3    centerPoint;\n\n  void main( void ){\n    vec3 invLight = normalize( invMatrix * vec4( lightDirection, 1.0 ) ).xyz;\n    vec3 invEye   = normalize( invMatrix * vec4( eyePosition - centerPoint, 1.0 ) ).xyz;\n    vec3 halfVec  = normalize( invLight + invEye );\n    float diff    = clamp( dot( invLight, vNormal ), 0.0, 1.0 );\n    float spec    = clamp( dot( halfVec, vNormal ), 0.0, 1.0 );\n    spec          = pow( spec, 10.0 );\n    gl_FragColor  = vec4( vec3( diff ), 1.0 ) * vColor + vec4( vec3( spec ), 0.0 );\n  }\n</script>\n\n\n\n007/public/index.html\nvec3 invEye   = normalize( invMatrix * vec4( eyePosition - centerPoint, 1.0 ) ).xyz;\n\n\n\u62e1\u6563\u5149\u306e\u6642\u3068\u540c\u3058\u3067\u3001\u30e2\u30c7\u30eb\u306e\u9006\u884c\u5217\u3092\u5229\u7528\u3057\u3066\u5149\u6e90\u306e\u4f4d\u7f6e\u3092\u8abf\u6574\u3057\u3066\u3044\u307e\u3059\u306d\u3002\neyePosition - centerPoint\u306e\u90e8\u5206\u3067\u306f\u8996\u7dda(\u30d9\u30af\u30c8\u30eb)\u3092\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\n007/public/index.html\nvec3 halfVec  = normalize( invLight + invEye );\nfloat spec    = clamp( dot( halfVec, vNormal ), 0.0, 1.0 );\nspec          = pow( spec, 10.0 );\n\n\n\u3053\u3053\u3067\u5510\u7a81\u306bhalfVec\u306a\u308b\u3082\u306e\u304c\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\n\u3053\u308c\u306f\u5149\u6e90\u306e\u5411\u304d\u3068\u3001\u8996\u7dda\u3092\u8db3\u3057\u5408\u308f\u305b\u305f\u3082\u306e\u306a\u306e\u3067\u3059\u304c\u5149\u6e90\u306e\u53cd\u5c04\u89d2\u5ea6\u3068\u8fd1\u3044\u5024\u306b\u306a\u308b\u305f\u3081\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\u203b\u306a\u305c\u53cd\u5c04\u306e\u89d2\u5ea6\u3092\u8a08\u7b97\u305b\u305a\u3001\u3053\u3061\u3089\u3092\u5229\u7528\u3059\u308b\u306e\u304b\u5206\u304b\u3063\u3066\u3044\u306a\u3044\u3067\u3059\u3002\n\u62e1\u6563\u5149\u3068\u540c\u3058\u8981\u9818\u3067\u3001\u30cf\u30fc\u30d5\u30d9\u30af\u30c8\u30eb\u3068\u6cd5\u7dda\u306e\u5185\u7a4d\u3092\u51fa\u305b\u3070\u7121\u4e8b\u53cd\u5c04\u5149\u3092\u8a08\u7b97\u3067\u304d\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u8a08\u7b97\u3057\u305f\u53cd\u5c04\u5149\u309210\u4e57\u3057\u3066\u3044\u308b\u306e\u306f\u660e\u6697\u3092\u81ea\u7136\u306b\u3055\u305b\u308b\u305f\u3081\u3067\u3059\u3002\n\u3053\u308c\u3092\u5fd8\u308c\u308b\u3068\u6975\u7aef\u306a\u660e\u6697\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6c17\u3092\u3064\u3051\u307e\u3057\u3087\u3046\u3002\n\n\n\u74b0\u5883\u5149\n\u6700\u5f8c\u306b\u74b0\u5883\u5149\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u74b0\u5883\u5149\u306f\u53b3\u5bc6\u306b\u3084\u308b\u3068\u3001\u3082\u306e\u3059\u3054\u3044\u6f14\u7b97\u91cf\u3068\u306a\u308b\u306e\u3067\u4eca\u56de\u306f\u8272\u5473\u3092\u8db3\u3059\u3060\u3051\u3068\u3057\u307e\u3059\u3002\n\u307e\u305a\u306fJS\u5074\u304b\u3089\u3002\n\n008/public/js/app.js\n// \u4e2d\u7565\n\nvar ambientColor = [ 0.5, 0.1, 0.1, 0.0 ];\nuLocations[5] = gl.getUniformLocation( program, 'ambientColor' );\n\n// \u4e2d\u7565\n\n\n\u8db3\u3057\u305f\u3044\u8272\u5473\u306e\u5b9a\u7fa9\u3057\u3001uniform\u306b\u5024\u3092\u6e21\u3059\u3060\u3051\u3067\u3059\u3002\n\u6b21\u306bGLSL\u5074\u3067\u3059\u304c\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n008/public/index.html\n// \u4e2d\u7565\n\ngl_FragColor  = vec4( vec3( diff ), 1.0 ) * vColor + ambientColor + vec4( vec3( spec ), 0.0 );\n\n\n\u306f\u3044\u3001\u30b3\u30ec\u3060\u3051\u3067\u3059\u3002\nvColor\u306b\u8db3\u3059\u3060\u3051\u3067\u3059\u306d\u3002\n\u3053\u3053\u3067\u306e\u30dd\u30a4\u30f3\u30c8\u306f\u304b\u3051\u7b97\u3067\u306f\u306a\u304f\u305f\u3057\u7b97\u3060\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u304b\u3002\n\u639b\u3051\u3066\u3057\u307e\u3046\u3068\u3001\u7d50\u679c\u304c\u5168\u304f\u7570\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u3053\u308c\u3067\u826f\u3044\u611f\u3058\u306b\u5915\u713c\u3051\u306b\u67d3\u307e\u3063\u305f?\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u306d!\n\n\n\u30c6\u30af\u30b9\u30c1\u30e3\n\u3082\u3046\u4e00\u3064\u306e\u30c6\u30fc\u30de\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u3064\u3044\u3066\u3082\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u3044\u3046\u306e\u306f\u3001\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u30e2\u30c7\u30eb\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u753b\u50cf\u306e\u3053\u3068\u3067\u3059\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n009/public/js/app.js\n/* global mat4 */\n( function() {\n  function main() {\n    var c  = document.getElementById( 'canvas' );\n    var gl = c.getContext( 'webgl' ) || c.getContext( 'experimental-webgl' );\n\n    var canvasSize = Math.min( this.innerWidth, this.innerHeight );\n\n    c.width  = canvasSize;\n    c.height = canvasSize;\n\n    var tex = gl.createTexture();\n\n    initTexture( '../img/dorayaki.png', tex, renderOctahedron );\n\n    function initTexture( path, texture, fn ) {\n      var img = new Image();\n      img.onload = function(){\n        gl.bindTexture( gl.TEXTURE_2D, texture );\n        gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img );\n        gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR );\n        gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT );\n        gl.generateMipmap( gl.TEXTURE_2D );\n        gl.bindTexture( gl.TEXTURE_2D, null );\n        if( fn !== null ){\n          fn( texture );\n        }\n      };\n      img.src = path;\n    }\n\n    function renderOctahedron( texture ) {\n      var vs = createShader( 'vs' );\n      var fs = createShader( 'fs' );\n\n      if ( !vs || !fs ) {\n        return;\n      }\n\n      var program = createProgram( [ vs, fs ] );\n\n      var locations = new Array( 4 );\n      locations[0]  = gl.getAttribLocation( program, 'positions' );\n      locations[1]  = gl.getAttribLocation( program, 'colors' );\n      locations[2]  = gl.getAttribLocation( program, 'normals' );\n      locations[3]  = gl.getAttribLocation( program, 'textureCoords' );\n\n      var strides = [ 3, 4, 3, 2 ];\n\n      var positions = [\n        -0.5,  0.5,  0.0,// 0 left\n         0.5,  0.5,  0.0,// 1 top\n        -0.5, -0.5,  0.0,// 2 center\n         0.5, -0.5,  0.0,// 3 bottom\n      ];\n\n      // \u8272\u60c5\u5831\u3001\u5de6\u304b\u3089\u9806\u306bRGBA\n      var colors = [\n        1.0, 0.0, 0.0, 1.0,// 0\n        0.0, 1.0, 0.0, 1.0,// 1\n        0.0, 0.0, 1.0, 1.0,// 2\n        1.0, 1.0, 1.0, 1.0,// 3\n      ];\n\n      var normals = [\n        0.0, 0.0, 1.0,// 0\n        0.0, 0.0, 1.0,// 1\n        0.0, 0.0, 1.0,// 2\n        0.0, 0.0, 1.0,// 3\n      ];\n\n      var textureCoords = [\n        0.0, 0.0,\n        1.0, 0.0,\n        0.0, 1.0,\n        1.0, 1.0\n      ];\n\n      // vbo\u306e\u4f5c\u6210\n      var positionVbo  = createVbo( positions );\n      gl.bindBuffer( gl.ARRAY_BUFFER, positionVbo );\n      gl.enableVertexAttribArray( locations[0] );\n      gl.vertexAttribPointer( locations[0], strides[0], gl.FLOAT, false, 0, 0 );\n\n      var colorVbo = createVbo( colors );\n      gl.bindBuffer( gl.ARRAY_BUFFER, colorVbo );\n      gl.enableVertexAttribArray( locations[1] );\n      gl.vertexAttribPointer( locations[1], strides[1], gl.FLOAT, false, 0, 0 );\n\n      var normalVbo = createVbo( normals );\n      gl.bindBuffer( gl.ARRAY_BUFFER, normalVbo );\n      gl.enableVertexAttribArray( locations[2] );\n      gl.vertexAttribPointer( locations[2], strides[2], gl.FLOAT, false, 0, 0 );\n\n      var textureVbo = createVbo( textureCoords );\n      gl.bindBuffer( gl.ARRAY_BUFFER, textureVbo );\n      gl.enableVertexAttribArray( locations[3] );\n      gl.vertexAttribPointer( locations[3], strides[3], gl.FLOAT, false, 0, 0 );\n\n      // ibo\u306e\u4f5c\u6210\n      var indexes = [\n        0, 1, 2,\n        3, 2, 1\n      ];\n\n      var ibo = gl.createBuffer();\n      gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, ibo );\n      gl.bufferData( gl.ELEMENT_ARRAY_BUFFER, new Int16Array( indexes ), gl.STATIC_DRAW );\n      gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, null );\n      gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, ibo );\n\n      gl.enable( gl.DEPTH_TEST );\n      gl.depthFunc( gl.LEQUAL );\n\n      var count = 0;\n      render();\n\n      function createShader( id ) {\n        var shaderSrouce = document.getElementById( id );\n        var shader;\n\n        if ( !shaderSrouce ) {\n          console.error( '\u6307\u5b9a\u3055\u308c\u305f\u8981\u7d20\u304c\u5b58\u5728\u3057\u307e\u305b\u3093' );\n          return;\n        }\n\n        switch( shaderSrouce.type ){\n        case 'x-shader/x-vertex':\n          shader = gl.createShader( gl.VERTEX_SHADER );\n          break;\n        case 'x-shader/x-fragment':\n          shader = gl.createShader( gl.FRAGMENT_SHADER );\n          break;\n        default :\n          return;\n        }\n\n        gl.shaderSource( shader, shaderSrouce.text );\n        gl.compileShader( shader );\n        if ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) ){\n          return shader;\n        } else {\n          console.error( gl.getShaderInfoLog( shader ) );\n        }\n      }\n\n      function createProgram( shaders ) {\n        var program = gl.createProgram();\n\n        shaders.forEach( function( shader ){ gl.attachShader( program, shader ); });\n        gl.linkProgram( program );\n        if( gl.getProgramParameter( program, gl.LINK_STATUS ) ){\n          gl.useProgram( program );\n          return program;\n        }else{\n          console.error( gl.getProgramInfoLog( program ) );\n        }\n      }\n\n      function createVbo( data ) {\n        var vbo = gl.createBuffer();\n        gl.bindBuffer( gl.ARRAY_BUFFER, vbo );\n        gl.bufferData( gl.ARRAY_BUFFER, new Float32Array( data ), gl.STATIC_DRAW );\n        gl.bindBuffer( gl.ARRAY_BUFFER, null );\n        return vbo;\n      }\n\n      function render() {\n        count++;\n\n        var deg = count % 360;\n        var rad = deg * Math.PI / 180;\n\n        var mMatrix   = mat4.identity( mat4.create() );\n        var vMatrix   = mat4.identity( mat4.create() );\n        var pMatrix   = mat4.identity( mat4.create() );\n        var vpMatrix  = mat4.identity( mat4.create() );\n        var mvpMatrix = mat4.identity( mat4.create() );\n\n        var fovy = 45;\n        var cx   = 1 * Math.sin( 0 );\n        var cz   = 1 * Math.cos( 0 );\n\n        var lightDirection = [ 0.0, 0.25, 0.75 ];\n        var eyePosition    = [ cx, 0.0, cz ];\n        var centerPosition = [ 0.0, 0.0, 0.0 ];\n        var ambientColor   = [ 0.5, 0.1, 0.1, 0.0 ];\n\n        // \u30d3\u30e5\u30fc\u5ea7\u6a19\u5909\u63db\n        mat4.lookAt( vMatrix, eyePosition, centerPosition, [ 0.0, 1.0, 0.0 ] );\n        // \u6295\u5f71\u5909\u63db\u30fb\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\n        mat4.perspective( pMatrix, fovy, 1, 0.1, 100.0 );\n\n        mat4.rotateY( mMatrix, mMatrix, rad );\n\n        // \u304b\u3051\u308b\u9806\u756a\u306b\u6ce8\u610f\n        mat4.multiply( vpMatrix, pMatrix, vMatrix );\n        mat4.multiply( mvpMatrix, vpMatrix, mMatrix );\n\n        var uLocations = new Array( 7 );\n        uLocations[0]  = gl.getUniformLocation( program, 'mvpMatrix' );\n        uLocations[1]  = gl.getUniformLocation( program, 'invMatrix' );\n        uLocations[2]  = gl.getUniformLocation( program, 'lightDirection' );\n        uLocations[3]  = gl.getUniformLocation( program, 'eyePosition' );\n        uLocations[4]  = gl.getUniformLocation( program, 'centerPoint' );\n        uLocations[5]  = gl.getUniformLocation( program, 'ambientColors' );\n        uLocations[6]  = gl.getUniformLocation( program, 'texture' );\n\n        gl.uniformMatrix4fv( uLocations[0], false, mvpMatrix );\n\n        var invMatrix = mat4.identity( mat4.create() );\n        mat4.invert( invMatrix, mMatrix );\n\n        gl.activeTexture( gl.TEXTURE0 );\n        gl.bindTexture( gl.TEXTURE_2D, texture );\n        gl.uniformMatrix4fv( uLocations[1], false, invMatrix );\n\n        gl.uniform3fv( uLocations[2], lightDirection );\n        gl.uniform3fv( uLocations[3], eyePosition );\n        gl.uniform3fv( uLocations[4], centerPosition );\n        gl.uniform4fv( uLocations[5], ambientColor );\n        gl.uniform1i( uLocations[6], 0 );\n\n        gl.clearColor( 0.7, 0.7, 0.7, 1.0 );\n        gl.viewport( 0, 0, c.width, c.height );\n        gl.clearDepth( 1.0 );\n        gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n\n        gl.drawElements( gl.TRIANGLES, indexes.length, gl.UNSIGNED_SHORT, 0 );\n        gl.flush();\n\n        requestAnimationFrame( render );\n      }\n    }\n  }\n\n  this.addEventListener( 'load', main );\n\n} )();\n\n\n\u307e\u305a\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u3067\u3059\u304c\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u304d\u307e\u3059\u3002\n// \u4e2d\u7565\n\nvar tex = gl.createTexture();\n\n// \u4e2d\u7565\n\nfunction initTexture( path, texture, fn ) {\n  var img = new Image();\n  img.onload = function(){\n    gl.bindTexture( gl.TEXTURE_2D, texture );\n    gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img );\n    gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR );\n    gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT );\n    gl.generateMipmap( gl.TEXTURE_2D );\n    gl.bindTexture( gl.TEXTURE_2D, null );\n    if( fn !== null ){\n      fn( texture );\n    }\n  };\n  img.src = path;\n}\n\n\u307e\u305a\u3001gl.createTexture()\u3067WebGLTexture\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u305d\u306e\u3042\u3068\u3001gl.bindTexture()\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092WebGL\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u307e\u3059\u3002\ngl.texImage2D()\u3067\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3001gl.generateMipmap()\u3067\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001go.bindTexture()\u306bnull\u3092\u5165\u308c\u3066\u304a\u6383\u9664\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u306e\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u304c\u7d42\u308f\u3063\u305f\u5f8c\u306b\u51e6\u7406\u3092\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u304c\u7d42\u308f\u3063\u3066\u3044\u306a\u3044\u3068\u6b8b\u5ff5\u306a\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3069\u3093\u3069\u3093\u884c\u304d\u307e\u3057\u3087\u3046\u3002\nvar textureCoords = [\n  0.0, 0.0,\n  1.0, 0.0,\n  0.0, 1.0,\n  1.0, 1.0\n];\n\n// \u4e2d\u7565\n\nvar textureVbo = createVbo( textureCoords );\ngl.bindBuffer( gl.ARRAY_BUFFER, textureVbo );\ngl.enableVertexAttribArray( locations[3] );\ngl.vertexAttribPointer( locations[3], strides[3], gl.FLOAT, false, 0, 0 );\n\n\u4ed6\u306e\u9802\u70b9\u60c5\u5831\u3068\u540c\u3058\u3088\u3046\u306b\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5ea7\u6a19\u3082VBO\u3092\u4f5c\u6210\u3057\u3066\u30b7\u30a7\u30fc\u30c0\u306b\u308f\u305f\u3057\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u60c5\u5831\u3092\u3001\u30b7\u30a7\u30fc\u30c0\u306b\u9001\u308a\u307e\u3057\u3087\u3046\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3051\u307e\u3059\u3002\n// \u4e2d\u7565\nuLocations[6]  = gl.getUniformLocation( program, 'texture' );\n\n// \u4e2d\u7565\n\ngl.activeTexture( gl.TEXTURE0 );\ngl.bindTexture( gl.TEXTURE_2D, texture );\ngl.uniformMatrix4fv( uLocations[1], false, invMatrix );\n\n// \u4e2d\u7565\ngl.uniform1i( uLocations[6], 0 );\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u306f\u3001\u30e6\u30cb\u30c3\u30c8\u3068\u3044\u3046\u6982\u5ff5\u304c\u3042\u308a\u307e\u3059\u3002\n\u914d\u5217\u306e\u3088\u3046\u306b\u30010\u301c\u305d\u306e\u7aef\u672b\u306e\u4e0a\u9650\u5024\u307e\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u683c\u7d0d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001\u3053\u306e\u30e6\u30cb\u30c3\u30c8\u3092\u6709\u52b9\u306b\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\ngl.activeTexture();\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002\n\u30e6\u30cb\u30c3\u30c8\u3092\u6709\u52b9\u306b\u3057\u305f\u3089\u3001gl.bindTexture()\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u30d0\u30a4\u30f3\u30c9\u3057\u3066\u3001\n\u6700\u5f8c\u306b\u3001gl.uniform1i()\u3067\u5229\u7528\u3059\u308b\u30e6\u30cb\u30c3\u30c8\u756a\u53f7\u3092\u30b7\u30a7\u30fc\u30c0\u306b\u6559\u3048\u3066\u3042\u3052\u307e\u3059\u3002\n\u4ee5\u4e0a\u3067\u3001JS\u5074\u306e\u5b9f\u88c5\u306f\u7d42\u4e86\u3067\u3059\u3002\n\u6700\u5f8c\u306b\u3001\u30b7\u30a7\u30fc\u30c0\u5074\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n009/public/index.html\n<script id=\"vs\" type=\"x-shader/x-vertex\">\n  attribute vec3 positions;\n  attribute vec4 colors;\n  attribute vec3 normals;\n  attribute vec2 textureCoords;\n\n  uniform   mat4 mvpMatrix;\n\n  varying   vec4 vColors;\n  varying   vec3 vNormals;\n  varying   vec2 vTextureCoords;\n\n  void main( void ){\n    vColors        = colors;\n    vNormals       = normals;\n    vTextureCoords = textureCoords;\n    gl_Position    = mvpMatrix * vec4( positions, 1.0 );\n  }\n</script>\n<script id=\"fs\" type=\"x-shader/x-fragment\">\n  precision mediump float;\n\n  varying vec4 vColors;\n  varying vec3 vNormals;\n  varying vec2 vTextureCoords;\n\n  uniform mat4      invMatrix;\n  uniform vec4      ambientColors;\n  uniform vec3      lightDirection;\n  uniform vec3      eyePosition;\n  uniform vec3      centerPoint;\n  uniform sampler2D texture;\n\n  void main( void ){\n    vec3 invLight = normalize( invMatrix * vec4( lightDirection, 1.0 ) ).xyz;\n    vec3 invEye   = normalize( invMatrix * vec4( eyePosition - centerPoint, 1.0 ) ).xyz;\n    vec3 halfVec  = normalize( invLight + invEye );\n\n    float diff = clamp( dot( invLight, vNormals ), 0.0, 1.0 );\n    float spec = clamp( dot( halfVec, vNormals ), 0.0, 1.0 );\n    spec       = pow( spec, 10.0 );\n\n    vec4 sampleColors = texture2D( texture, vTextureCoords );\n\n    gl_FragColor = vec4( vec3( diff ), 1.0 ) * vColors * sampleColors + ambientColors + vec4( vec3( spec ), 0.0 );\n  }\n</script>\n\n\n\u30b7\u30a7\u30fc\u30c0\u5074\u306e\u5b9f\u88c5\u306f\u3001\u304b\u306a\u308a\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u3002\nvec4 sampleColors = texture2D( texture, vTextureCoords );\n\ngl_FragColor = vec4( vec3( diff ), 1.0 ) * vColors * sampleColors + ambientColors + vec4( vec3( spec ), 0.0 );\n\ntexture\u3068vTextureCoords\u3067sampleColor\u3092\u4f5c\u6210\u3057\u3066\u3001vColors\u306b\u639b\u3051\u3066\u3042\u3052\u308c\u3070\u3001\u5b8c\u6210\u3067\u3059\u3002\n\n\n\u30cf\u30de\u308a\u30dd\u30a4\u30f3\u30c8\n\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u4f7f\u3046\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u306f\u5fc5\u305a\u30012\u306e\u7d2f\u4e57\u306b\u3057\u3066\u304f\u3060\u3055\u3044(256px, 512px\u306a\u3069)\n\u3053\u308c\u3092\u6020\u308b\u3068Non power-of-two textures\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u9650\u754c\u6570\n\u3061\u306a\u307f\u306b\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u9650\u754c\u6570\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u53d6\u5f97\u304c\u3067\u304d\u307e\u3059\u3002\nvar maxUnits = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\n\u6700\u5f8c\u306b\n\u4eca\u56de\u306e\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\u306f\u4e0b\u8a18\u306b\u3042\u308a\u307e\u3059\u306e\u3067\u826f\u304b\u3063\u305f\u3089\u898b\u3066\u304f\u3060\u3055\u3044\u3002\npractice-webgl/\n\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u898b\u308b\u5834\u5408\u306f\u3001http-server\u306a\u3069\u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002\n6/27\u304c\u307e\u305f\u8b1b\u7fa9\u306a\u306e\u3067\u3001\u52c9\u5f37\u3057\u3066\u304d\u307e\u3059!!\nWebGL \u30b9\u30af\u30fc\u30eb\u7b2c\uff12\u671f\u306e\u52df\u96c6\u3092\u958b\u59cb\u3057\u307e\u3059\uff01 2015\u5e745\u6708\u958b\u8b1b\uff01\n\n## \u514d\u8cac\u4e8b\u9805\n\n3D\u3084\u6570\u5b66\u306e\u5c02\u9580\u5bb6\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u6240\u3005\u304a\u304b\u306a\u3057\u306a\u8a18\u8ff0\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u4e88\u3081\u3001\u3054\u627f\u77e5\u304a\u304d\u304f\u3060\u3055\u3044\u3002\n\n## \u6982\u8981\n\n\u4eca\u56de\u5b66\u7fd2\u3057\u305f\u5185\u5bb9\u306f\u4e0b\u8a182\u70b9\u3067\u3059\u3002\n\n- \u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\n- \u30c6\u30af\u30b9\u30c1\u30e3\n\n## \u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\n\n\u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\u306e\u5b9f\u88c5\u3092\u884c\u3046\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u57fa\u790e\u77e5\u8b58\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n- \u6cd5\u7dda\n- \u5149\u6e90\u306e\u7a2e\u985e\n\n\n### \u6cd5\u7dda\n\n\u6cd5\u7dda\u306f\u7c21\u5358\u306b\u8a00\u3048\u3070\u3001\u9802\u70b9\u3084\u9762\u306e\u5411\u304d\u3092\u8868\u3059\u3082\u306e\u3067\u3059\u3002\n\nWebGL\u3067\u306f\u3053\u306e\u6cd5\u7dda\u3092\u3001\u30d9\u30af\u30c8\u30eb\u3092\u5229\u7528\u3057\u3066\u8868\u73fe\u3057\u307e\u3059\u3002\n\n\u4f8b\u3092\u6319\u3052\u308b\u3068\u3001\n\n``` js\n// \u914d\u5217\u306e\u5de6\u304b\u3089\u9806\u306b\u3001x, y, z3\u3064\u306e\u9802\u70b9\u304b\u3089\u306a\u308b\u30d9\u30af\u30c8\u30eb\u3092\u8868\u3057\u3066\u3044\u308b\nvar normal = [ 1, 0, 0 ];\n```\n\n### \u5149\u6e90\u306e\u7a2e\u985e\n\n\u5149\u6e90\u306b\u306f\u5927\u304d\u304f\u4e0b\u8a183\u3064\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\n\n- \u62e1\u6563\u5149( Diffuse Light )\n    - \u5149\u304c\u7269\u4f53\u306b\u885d\u7a81\u3057\u3066\u62e1\u6563\u3057\u3066\u3044\u304f\u69d8\u5b50\u3092\u518d\u73fe\n- \u53cd\u5c04\u5149( Specular Light )\n    - \u5149\u304c\u7269\u4f53\u306b\u885d\u7a81\u3057\u3066\u53cd\u5c04\u3057\u305f\u69d8\u5b50\u3092\u518d\u73fe\n- \u74b0\u5883\u5149( Ambient Light )\n    - \u30e2\u30c7\u30eb\u306e\u5468\u308a\u306b\u3069\u306e\u3088\u3046\u306a\u5149\u304c\u3042\u308b\u304b\u3092\u518d\u73fe\n\n### \u62e1\u6563\u5149\n\n\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u6700\u521d\u306f\u62e1\u6563\u5149\u304b\u3089\u3001\u30bd\u30fc\u30b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n``` js:006/public/js/app.js\n// \u4e2d\u7565\n// \u6cd5\u7dda\u306e\u5b9a\u7fa9\nvar normals = [\n -1.0, 0.0, 0.0,// 0\n  0.0, 1.0, 0.0,// 1\n  0.0, 0.0, 1.0,// 2\n  0.0,-1.0, 0.0,// 3\n  1.0, 0.0, 0.0,// 4\n\n  1.0, 0.0, 0.0,// 5\n  0.0, 1.0, 0.0,// 6\n  0.0, 0.0,-1.0,// 7\n  0.0,-1.0, 0.0,// 8\n -1.0, 0.0, 0.0,// 9\n];\n\n// \u4e2d\u7565\n// \u6cd5\u7dda\u306e\u9802\u70b9\u60c5\u5831\u3092VBO\u306b\u30d0\u30a4\u30f3\u30c9\nvar normalVbo = createVbo( normals );\ngl.bindBuffer( gl.ARRAY_BUFFER, normalVbo );\ngl.enableVertexAttribArray( locations[2] );\ngl.vertexAttribPointer( locations[2], strides[2], gl.FLOAT, false, 0, 0 );\n\n// \u4e2d\u7565\n// \u30e2\u30c7\u30eb\u306e\u9006\u884c\u5217\u3092GLSL\u306b\u6e21\u3059\nvar invMatrix = mat4.identity( mat4.create() );\nmat4.invert( invMatrix, mMatrix );\n\n```\n\nJS\u306e\u5b9f\u88c5\u304b\u3089\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\nJS\u5074\u3067\u306f\u3001\u4e0b\u8a183\u3064\u306e\u5b9f\u88c5\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n- \u6cd5\u7dda\u306e\u5b9a\u7fa9\n- \u6cd5\u7dda\u3092VBO\u306b\u767b\u9332\n- \u30e2\u30c7\u30eb\u306e\u9006\u884c\u5217\u3092GLSL\u306b\u767b\u9332\n\n\u3053\u3053\u3067\u5510\u7a81\u306b\u3067\u3066\u304d\u305f\u9006\u884c\u5217\u3067\u3059\u304c\u3001\u3053\u308c\u306f\u7c21\u5358\u306b\u8a00\u3048\u3070\u56de\u8ee2\u3092\u6253\u3061\u6d88\u3059\u884c\u5217\u3067\u3059\u3002\n\n\u3067\u306f\u3001\u306a\u305c\u9006\u884c\u5217\u304c\u5fc5\u8981\u306a\u306e\u304b\u3068\u3044\u3046\u3068\u5149\u6e90\u306e\u30d9\u30af\u30c8\u30eb\u3092\u30e2\u30c7\u30eb\u306e\u56de\u8ee2\u306b\u5408\u308f\u305b\u3066\u65b9\u5411\u3092\u5909\u3048\u308b\u305f\u3081\u3067\u3059\u3002\n\n\u65b9\u5411\u3092\u5909\u3048\u308b\u306e\u306f\u3001\u5149\u6e90\u3068\u6cd5\u7dda\u306e\u5411\u304d\u306b\u3088\u3063\u3066\u5149\u306e\u5f53\u305f\u308a\u65b9\u304c\u5909\u5316\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\n\u6587\u7ae0\u3060\u3068\u30a4\u30e1\u30fc\u30b8\u3057\u305a\u3089\u3044\u306e\u3067\u3001\u3061\u3087\u3063\u3068\u8a08\u7b97\u3092\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u5149\u306e\u5f53\u305f\u308a\u65b9\u306f\u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3067\u8a08\u7b97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3088\u304f\u3001dot\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\n\n``` js\nvar normal = [ 0, 1, 0 ];// \u6cd5\u7dda\nvar light  = [ 0, 1, 0 ];// \u5149\u6e90\n\ndot(normal, light);// -> 1\n\n\n// \u5149\u6e90\u306e\u65b9\u5411\u3092\u771f\u9006\u306b\u3057\u3066\u307f\u308b\nlight[1] = -1;\n\ndot(normal, light);// -> -1\n\n\n// \u30d9\u30af\u30c8\u30eb\u306e\u5185\u7a4d\u3092\u8a08\u7b97\nfunction dot( normal, light) { \n  var x = normal[0] * light[0];\n  var y = normal[1] * light[1];\n  var z = normal[2] * light[2];\n  return x + y + z;\n}\n  \n```\n\n\u4e0a\u306e\u4f8b\u306e\u3088\u3046\u306b\u3001\u5149\u6e90\u306e\u5411\u304d\u3092\u6cd5\u7dda\u3068\u9006\u65b9\u5411\u306b\u3057\u3066\u3084\u308b\u3068\u7d50\u679c\u304c\u304b\u308f\u308a\u307e\u3059\u306d\u3002\n\n\u5149\u6e90\u3068\u6cd5\u7dda\u304c\u540c\u3058\u5411\u304d\u306e\u5834\u5408\u306f1\u3001\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f-1\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nGLSL\u3067\u306f\u5149\u306e\u5f37\u3055\u306f0~1\u306b\u4e38\u3081\u3066\u4f7f\u3046\u306e\u3067\u3001\u524d\u8005\u306f\u5149\u304c\u5b8c\u5168\u306b\u3042\u305f\u3063\u3066\u3044\u308b\u72b6\u614b\u3001\u5f8c\u8005\u306f\u5149\u304c\u5168\u304f\u3042\u305f\u3063\u3066\u3044\u306a\u3044\u72b6\u614b\u3068\u8a00\u3048\u307e\u3059\u3002\n\n\u6b21\u306bGLSL\u306e\u5b9f\u88c5\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n``` html:006/public/index.html\n<script id=\"vs\" type=\"x-shader/x-vertex\">\n  attribute vec3 positions;\n  attribute vec4 colors;\n  attribute vec3 normals;\n\n  uniform   mat4 mvpMatrix;\n\n  varying   vec4 vColor;\n  varying   vec3 vNormal;\n\n  void main( void ){\n    vColor        = colors;\n    vNormal       = normals;\n    gl_Position   = mvpMatrix * vec4( positions, 1.0 );\n  }\n</script>\n<script id=\"fs\" type=\"x-shader/x-fragment\">\n  precision mediump float;\n  uniform   mat4    invMatrix;\n  varying   vec3    vNormal;\n  varying   vec4    vColor;\n\n  void main( void ){\n    vec3 light    = vec3( 0.0, 0.5, 0.5 );\n    vec3 invLight = normalize( invMatrix * vec4( light, 1.0 ) ).xyz;\n    float diff    = clamp( dot( invLight, vNormal ), 0.0, 1.0 );\n    gl_FragColor  = vec4( vec3( diff ), 1.0 ) * vColor;\n  }\n</script>\n\n```\n\n`light`\u5909\u6570\u3067\u5149\u6e90\u306e\u4f4d\u7f6e\u3092\u8a08\u7b97\u3002\n\n\u6b21\u306b\u3001\u30e2\u30c7\u30eb\u306e\u9006\u884c\u5217\u3067\u5149\u6e90\u306e\u4f4d\u7f6e\u3092\u30e2\u30c7\u30eb\u3068\u306f\u9006\u65b9\u5411\u306b\u56de\u8ee2\u3055\u305b\u307e\u3059\u3002\n\n`normalize`\u306f\u5149\u6e90\u3092\u5358\u4f4d\u30d9\u30af\u30c8\u30eb\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306b\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u203b\u5358\u4f4d\u30d9\u30af\u30c8\u30eb\u306f\u3001\u30d9\u30af\u30c8\u30eb\u4e16\u754c\u306e1\u306e\u3053\u3068\u3060\u3068\u601d\u3063\u3066\u3082\u3089\u3048\u308c\u3070OK\u3067\u3059\u3002\n\n\n``` js\nvec3 invLight = normalize( invMatrix * vec4( light, 1.0 ) ).xyz;\n\n```\n\n\u8a08\u7b97\u3057\u305f\u5149\u6e90\u3068\u6cd5\u7dda\u306e\u5185\u7a4d\u3092\u8a08\u7b97\u3057\u3066\u3001\u305d\u306e\u7d50\u679c\u30920~1\u306e\u7bc4\u56f2\u306b\u307e\u3068\u3081\u307e\u3059\u3002\n\n``` js\nfloat diff = clamp( dot( invLight, vNormal ), 0.0, 1.0 );\n```\n\n\u6700\u5f8c\u306b\u8a08\u7b97\u3057\u305f\u3001\u62e1\u6563\u5149\u3092`vColor`\u306b\u639b\u3051\u5408\u308f\u305b\u3066\u5168\u884c\u7a0b\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n``` js\ngl_FragColor = vec4( vec3( diff ), 1.0 ) * vColor;\n```\n![diffuse.png](https://qiita-image-store.s3.amazonaws.com/0/12331/653a8ba7-019d-5d25-2040-179615e7f96b.png \"diffuse.png\")\n\n\n### \u53cd\u5c04\u5149\n\n\u6b21\u306f\u53cd\u5c04\u5149\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n``` js:007/public/js/app.js\n// \u4e2d\u7565\n\nvar eyePosition    = [ cx, 0.0, cz ];\nvar centerPosition = [ 0.0, 0.0, 0.0 ];\n\n// \u4e2d\u7565\n\nuLocations[3] = gl.getUniformLocation( program, 'eyePosition' );\nuLocations[4] = gl.getUniformLocation( program, 'centerPoint' );\n\n```\n\n\u307e\u305a\u306f\u3001JS\u5074\u304b\u3089\u3002\n\nuniform\u306b\u65b0\u3057\u304f\u3001`eyePosition`\u3068`centerPosition`\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u306f\u53cd\u5c04\u5149\u3067\u306f\u3001\u7269\u4f53\u306b\u885d\u7a81\u3057\u3066\u53cd\u5c04\u3057\u305f\u5149\u3092\u30ab\u30e1\u30e9\u304c\u6349\u3048\u305f\u3089\u3069\u3046\u3044\u3046\u898b\u3048\u65b9\u3092\u3059\u308b\u304b\u3092\u518d\u73fe\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3067\u3059\u3002\n\n\u6b21\u306b\u3001GLSL\u5074\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n``` html:007/public/index.html\n<script id=\"vs\" type=\"x-shader/x-vertex\">\n  attribute vec3 positions;\n  attribute vec4 colors;\n  attribute vec3 normals;\n\n  uniform   mat4 mvpMatrix;\n\n  varying   vec4 vColor;\n  varying   vec3 vNormal;\n\n  void main( void ){\n    vColor        = colors;\n    vNormal       = normals;\n    gl_Position   = mvpMatrix * vec4( positions, 1.0 );\n  }\n</script>\n<script id=\"fs\" type=\"x-shader/x-fragment\">\n  precision mediump float;\n  uniform   mat4    invMatrix;\n  varying   vec3    vNormal;\n  varying   vec4    vColor;\n  uniform   vec3    lightDirection;\n  uniform   vec3    eyePosition;\n  uniform   vec3    centerPoint;\n\n  void main( void ){\n    vec3 invLight = normalize( invMatrix * vec4( lightDirection, 1.0 ) ).xyz;\n    vec3 invEye   = normalize( invMatrix * vec4( eyePosition - centerPoint, 1.0 ) ).xyz;\n    vec3 halfVec  = normalize( invLight + invEye );\n    float diff    = clamp( dot( invLight, vNormal ), 0.0, 1.0 );\n    float spec    = clamp( dot( halfVec, vNormal ), 0.0, 1.0 );\n    spec          = pow( spec, 10.0 );\n    gl_FragColor  = vec4( vec3( diff ), 1.0 ) * vColor + vec4( vec3( spec ), 0.0 );\n  }\n</script>\n```\n\n``` html:007/public/index.html\nvec3 invEye   = normalize( invMatrix * vec4( eyePosition - centerPoint, 1.0 ) ).xyz;\n```\n\n\u62e1\u6563\u5149\u306e\u6642\u3068\u540c\u3058\u3067\u3001\u30e2\u30c7\u30eb\u306e\u9006\u884c\u5217\u3092\u5229\u7528\u3057\u3066\u5149\u6e90\u306e\u4f4d\u7f6e\u3092\u8abf\u6574\u3057\u3066\u3044\u307e\u3059\u306d\u3002\n\n`eyePosition - centerPoint`\u306e\u90e8\u5206\u3067\u306f\u8996\u7dda(\u30d9\u30af\u30c8\u30eb)\u3092\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\n``` html:007/public/index.html\nvec3 halfVec  = normalize( invLight + invEye );\nfloat spec    = clamp( dot( halfVec, vNormal ), 0.0, 1.0 );\nspec          = pow( spec, 10.0 );\n```\n\n\u3053\u3053\u3067\u5510\u7a81\u306b`halfVec`\u306a\u308b\u3082\u306e\u304c\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u3053\u308c\u306f\u5149\u6e90\u306e\u5411\u304d\u3068\u3001\u8996\u7dda\u3092\u8db3\u3057\u5408\u308f\u305b\u305f\u3082\u306e\u306a\u306e\u3067\u3059\u304c\u5149\u6e90\u306e\u53cd\u5c04\u89d2\u5ea6\u3068\u8fd1\u3044\u5024\u306b\u306a\u308b\u305f\u3081\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u203b\u306a\u305c\u53cd\u5c04\u306e\u89d2\u5ea6\u3092\u8a08\u7b97\u305b\u305a\u3001\u3053\u3061\u3089\u3092\u5229\u7528\u3059\u308b\u306e\u304b\u5206\u304b\u3063\u3066\u3044\u306a\u3044\u3067\u3059\u3002\n\n\u62e1\u6563\u5149\u3068\u540c\u3058\u8981\u9818\u3067\u3001\u30cf\u30fc\u30d5\u30d9\u30af\u30c8\u30eb\u3068\u6cd5\u7dda\u306e\u5185\u7a4d\u3092\u51fa\u305b\u3070\u7121\u4e8b\u53cd\u5c04\u5149\u3092\u8a08\u7b97\u3067\u304d\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u8a08\u7b97\u3057\u305f\u53cd\u5c04\u5149\u309210\u4e57\u3057\u3066\u3044\u308b\u306e\u306f\u660e\u6697\u3092\u81ea\u7136\u306b\u3055\u305b\u308b\u305f\u3081\u3067\u3059\u3002\n\n\u3053\u308c\u3092\u5fd8\u308c\u308b\u3068\u6975\u7aef\u306a\u660e\u6697\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6c17\u3092\u3064\u3051\u307e\u3057\u3087\u3046\u3002\n\n![specular.png](https://qiita-image-store.s3.amazonaws.com/0/12331/247587e1-d187-8249-86d0-848e2a04cb99.png \"specular.png\")\n\n### \u74b0\u5883\u5149\n\n\u6700\u5f8c\u306b\u74b0\u5883\u5149\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u74b0\u5883\u5149\u306f\u53b3\u5bc6\u306b\u3084\u308b\u3068\u3001\u3082\u306e\u3059\u3054\u3044\u6f14\u7b97\u91cf\u3068\u306a\u308b\u306e\u3067\u4eca\u56de\u306f\u8272\u5473\u3092\u8db3\u3059\u3060\u3051\u3068\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u306fJS\u5074\u304b\u3089\u3002\n\n``` js:008/public/js/app.js\n// \u4e2d\u7565\n\nvar ambientColor = [ 0.5, 0.1, 0.1, 0.0 ];\nuLocations[5] = gl.getUniformLocation( program, 'ambientColor' );\n\n// \u4e2d\u7565\n```\n\n\u8db3\u3057\u305f\u3044\u8272\u5473\u306e\u5b9a\u7fa9\u3057\u3001uniform\u306b\u5024\u3092\u6e21\u3059\u3060\u3051\u3067\u3059\u3002\n\n\u6b21\u306bGLSL\u5074\u3067\u3059\u304c\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n``` html:008/public/index.html\n// \u4e2d\u7565\n\ngl_FragColor  = vec4( vec3( diff ), 1.0 ) * vColor + ambientColor + vec4( vec3( spec ), 0.0 );\n```\n\n\u306f\u3044\u3001\u30b3\u30ec\u3060\u3051\u3067\u3059\u3002\n\n`vColor`\u306b\u8db3\u3059\u3060\u3051\u3067\u3059\u306d\u3002\n\n\u3053\u3053\u3067\u306e\u30dd\u30a4\u30f3\u30c8\u306f\u304b\u3051\u7b97\u3067\u306f\u306a\u304f\u305f\u3057\u7b97\u3060\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u639b\u3051\u3066\u3057\u307e\u3046\u3068\u3001\u7d50\u679c\u304c\u5168\u304f\u7570\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u3053\u308c\u3067\u826f\u3044\u611f\u3058\u306b\u5915\u713c\u3051\u306b\u67d3\u307e\u3063\u305f?\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u306d!\n\n![ambient.png](https://qiita-image-store.s3.amazonaws.com/0/12331/d024b870-4686-9acc-0314-278b264a8a82.png \"ambient.png\")\n\n\n## \u30c6\u30af\u30b9\u30c1\u30e3\n\n\u3082\u3046\u4e00\u3064\u306e\u30c6\u30fc\u30de\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u3064\u3044\u3066\u3082\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u3044\u3046\u306e\u306f\u3001\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u30e2\u30c7\u30eb\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u753b\u50cf\u306e\u3053\u3068\u3067\u3059\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n``` 009/public/js/app.js\n/* global mat4 */\n( function() {\n  function main() {\n    var c  = document.getElementById( 'canvas' );\n    var gl = c.getContext( 'webgl' ) || c.getContext( 'experimental-webgl' );\n\n    var canvasSize = Math.min( this.innerWidth, this.innerHeight );\n\n    c.width  = canvasSize;\n    c.height = canvasSize;\n\n    var tex = gl.createTexture();\n\n    initTexture( '../img/dorayaki.png', tex, renderOctahedron );\n\n    function initTexture( path, texture, fn ) {\n      var img = new Image();\n      img.onload = function(){\n        gl.bindTexture( gl.TEXTURE_2D, texture );\n        gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img );\n        gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR );\n        gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT );\n        gl.generateMipmap( gl.TEXTURE_2D );\n        gl.bindTexture( gl.TEXTURE_2D, null );\n        if( fn !== null ){\n          fn( texture );\n        }\n      };\n      img.src = path;\n    }\n\n    function renderOctahedron( texture ) {\n      var vs = createShader( 'vs' );\n      var fs = createShader( 'fs' );\n\n      if ( !vs || !fs ) {\n        return;\n      }\n\n      var program = createProgram( [ vs, fs ] );\n\n      var locations = new Array( 4 );\n      locations[0]  = gl.getAttribLocation( program, 'positions' );\n      locations[1]  = gl.getAttribLocation( program, 'colors' );\n      locations[2]  = gl.getAttribLocation( program, 'normals' );\n      locations[3]  = gl.getAttribLocation( program, 'textureCoords' );\n\n      var strides = [ 3, 4, 3, 2 ];\n\n      var positions = [\n        -0.5,  0.5,  0.0,// 0 left\n         0.5,  0.5,  0.0,// 1 top\n        -0.5, -0.5,  0.0,// 2 center\n         0.5, -0.5,  0.0,// 3 bottom\n      ];\n\n      // \u8272\u60c5\u5831\u3001\u5de6\u304b\u3089\u9806\u306bRGBA\n      var colors = [\n        1.0, 0.0, 0.0, 1.0,// 0\n        0.0, 1.0, 0.0, 1.0,// 1\n        0.0, 0.0, 1.0, 1.0,// 2\n        1.0, 1.0, 1.0, 1.0,// 3\n      ];\n\n      var normals = [\n        0.0, 0.0, 1.0,// 0\n        0.0, 0.0, 1.0,// 1\n        0.0, 0.0, 1.0,// 2\n        0.0, 0.0, 1.0,// 3\n      ];\n\n      var textureCoords = [\n        0.0, 0.0,\n        1.0, 0.0,\n        0.0, 1.0,\n        1.0, 1.0\n      ];\n\n      // vbo\u306e\u4f5c\u6210\n      var positionVbo  = createVbo( positions );\n      gl.bindBuffer( gl.ARRAY_BUFFER, positionVbo );\n      gl.enableVertexAttribArray( locations[0] );\n      gl.vertexAttribPointer( locations[0], strides[0], gl.FLOAT, false, 0, 0 );\n\n      var colorVbo = createVbo( colors );\n      gl.bindBuffer( gl.ARRAY_BUFFER, colorVbo );\n      gl.enableVertexAttribArray( locations[1] );\n      gl.vertexAttribPointer( locations[1], strides[1], gl.FLOAT, false, 0, 0 );\n\n      var normalVbo = createVbo( normals );\n      gl.bindBuffer( gl.ARRAY_BUFFER, normalVbo );\n      gl.enableVertexAttribArray( locations[2] );\n      gl.vertexAttribPointer( locations[2], strides[2], gl.FLOAT, false, 0, 0 );\n\n      var textureVbo = createVbo( textureCoords );\n      gl.bindBuffer( gl.ARRAY_BUFFER, textureVbo );\n      gl.enableVertexAttribArray( locations[3] );\n      gl.vertexAttribPointer( locations[3], strides[3], gl.FLOAT, false, 0, 0 );\n\n      // ibo\u306e\u4f5c\u6210\n      var indexes = [\n        0, 1, 2,\n        3, 2, 1\n      ];\n\n      var ibo = gl.createBuffer();\n      gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, ibo );\n      gl.bufferData( gl.ELEMENT_ARRAY_BUFFER, new Int16Array( indexes ), gl.STATIC_DRAW );\n      gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, null );\n      gl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, ibo );\n\n      gl.enable( gl.DEPTH_TEST );\n      gl.depthFunc( gl.LEQUAL );\n\n      var count = 0;\n      render();\n\n      function createShader( id ) {\n        var shaderSrouce = document.getElementById( id );\n        var shader;\n\n        if ( !shaderSrouce ) {\n          console.error( '\u6307\u5b9a\u3055\u308c\u305f\u8981\u7d20\u304c\u5b58\u5728\u3057\u307e\u305b\u3093' );\n          return;\n        }\n\n        switch( shaderSrouce.type ){\n        case 'x-shader/x-vertex':\n          shader = gl.createShader( gl.VERTEX_SHADER );\n          break;\n        case 'x-shader/x-fragment':\n          shader = gl.createShader( gl.FRAGMENT_SHADER );\n          break;\n        default :\n          return;\n        }\n\n        gl.shaderSource( shader, shaderSrouce.text );\n        gl.compileShader( shader );\n        if ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) ){\n          return shader;\n        } else {\n          console.error( gl.getShaderInfoLog( shader ) );\n        }\n      }\n\n      function createProgram( shaders ) {\n        var program = gl.createProgram();\n\n        shaders.forEach( function( shader ){ gl.attachShader( program, shader ); });\n        gl.linkProgram( program );\n        if( gl.getProgramParameter( program, gl.LINK_STATUS ) ){\n          gl.useProgram( program );\n          return program;\n        }else{\n          console.error( gl.getProgramInfoLog( program ) );\n        }\n      }\n\n      function createVbo( data ) {\n        var vbo = gl.createBuffer();\n        gl.bindBuffer( gl.ARRAY_BUFFER, vbo );\n        gl.bufferData( gl.ARRAY_BUFFER, new Float32Array( data ), gl.STATIC_DRAW );\n        gl.bindBuffer( gl.ARRAY_BUFFER, null );\n        return vbo;\n      }\n\n      function render() {\n        count++;\n\n        var deg = count % 360;\n        var rad = deg * Math.PI / 180;\n\n        var mMatrix   = mat4.identity( mat4.create() );\n        var vMatrix   = mat4.identity( mat4.create() );\n        var pMatrix   = mat4.identity( mat4.create() );\n        var vpMatrix  = mat4.identity( mat4.create() );\n        var mvpMatrix = mat4.identity( mat4.create() );\n\n        var fovy = 45;\n        var cx   = 1 * Math.sin( 0 );\n        var cz   = 1 * Math.cos( 0 );\n\n        var lightDirection = [ 0.0, 0.25, 0.75 ];\n        var eyePosition    = [ cx, 0.0, cz ];\n        var centerPosition = [ 0.0, 0.0, 0.0 ];\n        var ambientColor   = [ 0.5, 0.1, 0.1, 0.0 ];\n\n        // \u30d3\u30e5\u30fc\u5ea7\u6a19\u5909\u63db\n        mat4.lookAt( vMatrix, eyePosition, centerPosition, [ 0.0, 1.0, 0.0 ] );\n        // \u6295\u5f71\u5909\u63db\u30fb\u30af\u30ea\u30c3\u30d4\u30f3\u30b0\n        mat4.perspective( pMatrix, fovy, 1, 0.1, 100.0 );\n\n        mat4.rotateY( mMatrix, mMatrix, rad );\n\n        // \u304b\u3051\u308b\u9806\u756a\u306b\u6ce8\u610f\n        mat4.multiply( vpMatrix, pMatrix, vMatrix );\n        mat4.multiply( mvpMatrix, vpMatrix, mMatrix );\n\n        var uLocations = new Array( 7 );\n        uLocations[0]  = gl.getUniformLocation( program, 'mvpMatrix' );\n        uLocations[1]  = gl.getUniformLocation( program, 'invMatrix' );\n        uLocations[2]  = gl.getUniformLocation( program, 'lightDirection' );\n        uLocations[3]  = gl.getUniformLocation( program, 'eyePosition' );\n        uLocations[4]  = gl.getUniformLocation( program, 'centerPoint' );\n        uLocations[5]  = gl.getUniformLocation( program, 'ambientColors' );\n        uLocations[6]  = gl.getUniformLocation( program, 'texture' );\n\n        gl.uniformMatrix4fv( uLocations[0], false, mvpMatrix );\n\n        var invMatrix = mat4.identity( mat4.create() );\n        mat4.invert( invMatrix, mMatrix );\n\n        gl.activeTexture( gl.TEXTURE0 );\n        gl.bindTexture( gl.TEXTURE_2D, texture );\n        gl.uniformMatrix4fv( uLocations[1], false, invMatrix );\n\n        gl.uniform3fv( uLocations[2], lightDirection );\n        gl.uniform3fv( uLocations[3], eyePosition );\n        gl.uniform3fv( uLocations[4], centerPosition );\n        gl.uniform4fv( uLocations[5], ambientColor );\n        gl.uniform1i( uLocations[6], 0 );\n\n        gl.clearColor( 0.7, 0.7, 0.7, 1.0 );\n        gl.viewport( 0, 0, c.width, c.height );\n        gl.clearDepth( 1.0 );\n        gl.clear( gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT );\n\n        gl.drawElements( gl.TRIANGLES, indexes.length, gl.UNSIGNED_SHORT, 0 );\n        gl.flush();\n\n        requestAnimationFrame( render );\n      }\n    }\n  }\n\n  this.addEventListener( 'load', main );\n\n} )();\n```\n\n\u307e\u305a\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u3067\u3059\u304c\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u304d\u307e\u3059\u3002\n\n```\n// \u4e2d\u7565\n\nvar tex = gl.createTexture();\n\n// \u4e2d\u7565\n\nfunction initTexture( path, texture, fn ) {\n  var img = new Image();\n  img.onload = function(){\n    gl.bindTexture( gl.TEXTURE_2D, texture );\n    gl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, img );\n    gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR );\n    gl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT );\n    gl.generateMipmap( gl.TEXTURE_2D );\n    gl.bindTexture( gl.TEXTURE_2D, null );\n    if( fn !== null ){\n      fn( texture );\n    }\n  };\n  img.src = path;\n}\n```\n\n\u307e\u305a\u3001`gl.createTexture()`\u3067WebGLTexture\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n\u305d\u306e\u3042\u3068\u3001`gl.bindTexture()`\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092WebGL\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b\u30d0\u30a4\u30f3\u30c9\u3057\u307e\u3059\u3002\n\n`gl.texImage2D()`\u3067\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3001`gl.generateMipmap()`\u3067\u30df\u30c3\u30d7\u30de\u30c3\u30d7\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\u3001`go.bindTexture()`\u306b`null`\u3092\u5165\u308c\u3066\u304a\u6383\u9664\u3057\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306e\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u304c\u7d42\u308f\u3063\u305f\u5f8c\u306b\u51e6\u7406\u3092\u3059\u308b\u3053\u3068\u3067\u3059\u3002\n\n\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u304c\u7d42\u308f\u3063\u3066\u3044\u306a\u3044\u3068\u6b8b\u5ff5\u306a\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3069\u3093\u3069\u3093\u884c\u304d\u307e\u3057\u3087\u3046\u3002\n\n``` js\nvar textureCoords = [\n  0.0, 0.0,\n  1.0, 0.0,\n  0.0, 1.0,\n  1.0, 1.0\n];\n\n// \u4e2d\u7565\n\nvar textureVbo = createVbo( textureCoords );\ngl.bindBuffer( gl.ARRAY_BUFFER, textureVbo );\ngl.enableVertexAttribArray( locations[3] );\ngl.vertexAttribPointer( locations[3], strides[3], gl.FLOAT, false, 0, 0 );\n```\n\n\u4ed6\u306e\u9802\u70b9\u60c5\u5831\u3068\u540c\u3058\u3088\u3046\u306b\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u5ea7\u6a19\u3082VBO\u3092\u4f5c\u6210\u3057\u3066\u30b7\u30a7\u30fc\u30c0\u306b\u308f\u305f\u3057\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u60c5\u5831\u3092\u3001\u30b7\u30a7\u30fc\u30c0\u306b\u9001\u308a\u307e\u3057\u3087\u3046\u3002\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3051\u307e\u3059\u3002\n\n``` js\n// \u4e2d\u7565\nuLocations[6]  = gl.getUniformLocation( program, 'texture' );\n\n// \u4e2d\u7565\n\ngl.activeTexture( gl.TEXTURE0 );\ngl.bindTexture( gl.TEXTURE_2D, texture );\ngl.uniformMatrix4fv( uLocations[1], false, invMatrix );\n\n// \u4e2d\u7565\ngl.uniform1i( uLocations[6], 0 );\n```\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u306f\u3001\u30e6\u30cb\u30c3\u30c8\u3068\u3044\u3046\u6982\u5ff5\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u914d\u5217\u306e\u3088\u3046\u306b\u30010\u301c\u305d\u306e\u7aef\u672b\u306e\u4e0a\u9650\u5024\u307e\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u683c\u7d0d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001\u3053\u306e\u30e6\u30cb\u30c3\u30c8\u3092\u6709\u52b9\u306b\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\n\n`gl.activeTexture();`\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u6709\u52b9\u306b\u3057\u307e\u3059\u3002\n\n\u30e6\u30cb\u30c3\u30c8\u3092\u6709\u52b9\u306b\u3057\u305f\u3089\u3001`gl.bindTexture()`\u3067\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u30d0\u30a4\u30f3\u30c9\u3057\u3066\u3001\n\n\u6700\u5f8c\u306b\u3001`gl.uniform1i()`\u3067\u5229\u7528\u3059\u308b\u30e6\u30cb\u30c3\u30c8\u756a\u53f7\u3092\u30b7\u30a7\u30fc\u30c0\u306b\u6559\u3048\u3066\u3042\u3052\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3067\u3001JS\u5074\u306e\u5b9f\u88c5\u306f\u7d42\u4e86\u3067\u3059\u3002\n\n\u6700\u5f8c\u306b\u3001\u30b7\u30a7\u30fc\u30c0\u5074\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n``` html:009/public/index.html\n<script id=\"vs\" type=\"x-shader/x-vertex\">\n  attribute vec3 positions;\n  attribute vec4 colors;\n  attribute vec3 normals;\n  attribute vec2 textureCoords;\n\n  uniform   mat4 mvpMatrix;\n\n  varying   vec4 vColors;\n  varying   vec3 vNormals;\n  varying   vec2 vTextureCoords;\n\n  void main( void ){\n    vColors        = colors;\n    vNormals       = normals;\n    vTextureCoords = textureCoords;\n    gl_Position    = mvpMatrix * vec4( positions, 1.0 );\n  }\n</script>\n<script id=\"fs\" type=\"x-shader/x-fragment\">\n  precision mediump float;\n\n  varying vec4 vColors;\n  varying vec3 vNormals;\n  varying vec2 vTextureCoords;\n\n  uniform mat4      invMatrix;\n  uniform vec4      ambientColors;\n  uniform vec3      lightDirection;\n  uniform vec3      eyePosition;\n  uniform vec3      centerPoint;\n  uniform sampler2D texture;\n\n  void main( void ){\n    vec3 invLight = normalize( invMatrix * vec4( lightDirection, 1.0 ) ).xyz;\n    vec3 invEye   = normalize( invMatrix * vec4( eyePosition - centerPoint, 1.0 ) ).xyz;\n    vec3 halfVec  = normalize( invLight + invEye );\n\n    float diff = clamp( dot( invLight, vNormals ), 0.0, 1.0 );\n    float spec = clamp( dot( halfVec, vNormals ), 0.0, 1.0 );\n    spec       = pow( spec, 10.0 );\n\n    vec4 sampleColors = texture2D( texture, vTextureCoords );\n\n    gl_FragColor = vec4( vec3( diff ), 1.0 ) * vColors * sampleColors + ambientColors + vec4( vec3( spec ), 0.0 );\n  }\n</script>\n```\n\n\u30b7\u30a7\u30fc\u30c0\u5074\u306e\u5b9f\u88c5\u306f\u3001\u304b\u306a\u308a\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n``` html\nvec4 sampleColors = texture2D( texture, vTextureCoords );\n\ngl_FragColor = vec4( vec3( diff ), 1.0 ) * vColors * sampleColors + ambientColors + vec4( vec3( spec ), 0.0 );\n```\n\n`texture`\u3068`vTextureCoords`\u3067`sampleColor`\u3092\u4f5c\u6210\u3057\u3066\u3001`vColors`\u306b\u639b\u3051\u3066\u3042\u3052\u308c\u3070\u3001\u5b8c\u6210\u3067\u3059\u3002\n\n![textureSample.png](https://qiita-image-store.s3.amazonaws.com/0/12331/8e596a35-f86b-5a6a-838f-9868e71691a1.png \"textureSample.png\")\n\n\n### \u30cf\u30de\u308a\u30dd\u30a4\u30f3\u30c8\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u306b\u4f7f\u3046\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u306f\u5fc5\u305a\u30012\u306e\u7d2f\u4e57\u306b\u3057\u3066\u304f\u3060\u3055\u3044(256px, 512px\u306a\u3069)\n\n\u3053\u308c\u3092\u6020\u308b\u3068`Non power-of-two textures`\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n### \u30c6\u30af\u30b9\u30c1\u30e3\u306e\u9650\u754c\u6570\n\n\u3061\u306a\u307f\u306b\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u9650\u754c\u6570\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u53d6\u5f97\u304c\u3067\u304d\u307e\u3059\u3002\n\n``` js\nvar maxUnits = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n```\n\n\n## \u6700\u5f8c\u306b\n\n\u4eca\u56de\u306e\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\u306f\u4e0b\u8a18\u306b\u3042\u308a\u307e\u3059\u306e\u3067\u826f\u304b\u3063\u305f\u3089\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\n[practice-webgl/](https://github.com/dorayaki-kun/practice-webgl/)\n\n\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u898b\u308b\u5834\u5408\u306f\u3001[http-server](https://www.npmjs.com/package/http-server)\u306a\u3069\u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002\n\n\n6/27\u304c\u307e\u305f\u8b1b\u7fa9\u306a\u306e\u3067\u3001\u52c9\u5f37\u3057\u3066\u304d\u307e\u3059!!\n\n[WebGL \u30b9\u30af\u30fc\u30eb\u7b2c\uff12\u671f\u306e\u52df\u96c6\u3092\u958b\u59cb\u3057\u307e\u3059\uff01 2015\u5e745\u6708\u958b\u8b1b\uff01](http://webgl.souhonzan.org/entry/?v=0203)\n", "tags": ["GLSL", "WebGL", "JavaScript"]}