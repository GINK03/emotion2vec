{"context": " More than 1 year has passed since last update.\n\ndjango.apps\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u4ed5\u7d44\u307f\u5909\u308f\u3063\u305f\u4ee5\u524d\u306f\"app cache\":\nApp-loading refactor\n\n    Historically, Django applications were tightly linked to models. \n    A singleton known as the \u201capp cache\u201d dealt with both installed applications and models. \n\n    The models module was used as an identifier for applications in many APIs.\n\n    As the concept of Django applications matured, \n    this code showed some shortcomings. \n\n1.7\u3067\u306f \"app registry\":\n    It has been refactored into an \u201capp registry\u201d \n    where models modules no longer have a central role \n    and where it\u2019s possible to attach configuration data to applications.\n\ndjang.db.models.loading\u304c\u5ec3\u6b62\u3055\u308c\u3066\u3001\ndjango.apps\u304c\u65b0\u8a2d:\n(v17)hdknr@wzy:~/ve/v17/src/sample/web$ tree /home/hdknr/ve/v17/lib/python2.7/site-packages/django/apps/ -I \"*.pyc\"\n/home/hdknr/ve/v17/lib/python2.7/site-packages/django/apps/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 config.py\n\u2514\u2500\u2500 registry.py\n\n\n1.7\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\n\ndjang.apps.config.AppConfig\nAppConfig:\n\n    >>> from django.apps import apps\n    >>> apps.get_app_config('todos')\n    <AppConfig: todos>\n    >>> cf = _\n    >>> cf.name, cf.verbose_name\n    ('todos', 'Todos')\n    >>> cf.path\n    u'/home/hdknr/ve/v17/src/sample/web/todos'\n    >>> cf.models\n    OrderedDict([('todo', <class 'todos.models.Todo'>)])\n    >>> [i for i in cf.get_models()]\n    [<class 'todos.models.Todo'>]\n    >>> cf.label\n    'todos'\n    >>> cf.models_module\n    <module 'todos.models' from '/home/hdknr/ve/v17/src/sample/web/todos/models.pyc'>\n    >>> cf.module\n    <module 'todos' from '/home/hdknr/ve/v17/src/sample/web/todos/__init__.pyc'>\n\n\nAppConfig#ready()\nready()\u304c\u547c\u3070\u308c\u308b\u306e\u3067\u3054\u306b\u3087\u308c\u308b\uff1a\nImprovements thus far include:\n\n    Applications can run code at startup, \n    before Django does anything else, \n    with the ready() method of their configuration.\n\n    Django imports all application configurations and models as soon as it starts, \n    through a deterministic and straightforward process. \n\n    This should make it easier to diagnose import issues such as import loops.\n\ntodos.apps \u3092\u4f5c\u6210:\n\n    from django.apps import AppConfig\n    from models import Todo\n\n\n    class WebAppConfig(AppConfig):\n        name = \"todos\"\n        verbose_name = \"Todos Application\"\n\n        def ready(self):\n            print \"todo application can be initialzed here.\"\n            print \"count = \", Todo.objects.count()\n\n\napp/settings.py \u3092\u4fee\u6b63:\n\n    INSTALLED_APPS += (\n        #'todos',                   # \u30b3\u30e1\u30f3\u30c8\n        'todos.apps.WebAppConfig',  # AppConfig\u3092\u6307\u5b9a\n    )    \n\n\nshell\u3092\u8d77\u52d5\u3059\u308b\u3068\u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u524d\u306b ready()\u304c\u5b9f\u884c\u3055\u308c\u3066\u308b:\n(v17)hdknr@wzy:~/ve/v17/src/sample/web$ python manage.py shell\n\ntodo application can be initialzed here.\ncount =  1\n\nPython 2.7.3 (default, Mar 13 2014, 11:03:55) \n[GCC 4.7.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n(InteractiveConsole)\n>>> \n\n\nmodels.py\u4e0d\u8981\ndashbaord\u30a2\u30d7\u30ea\u8ffd\u52a0:\n(v17)hdknr@wzy:~/ve/v17/src/sample/web$ python manage.py startapp dashboard\ntodo application can be initialzed here.\ncount =  1\n\n\n(v17)hdknr@wzy:~/ve/v17/src/sample/web$ cat dashboard/apps.py \n\n\n    from django.apps import AppConfig\n\n\n    class WebAppConfig(AppConfig):\n        name = \"dashboard\"\n        verbose_name = \"Dashboard Application\"\n\n        def ready(self):\n            print \"dashboard application can be initialzed here.\"\n\n    (v17)hdknr@wzy:~/ve/v17/src/sample/web$ cat app/settings.py\n\n    INSTALLED_APPS += (\n        #'todos',\n        'todos.apps.WebAppConfig',\n        'dashboard.apps.WebAppConfig',\n    )\n\nmodels.py\u304c\u7121\u304f\u3066\u3082\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u521d\u671f\u5316\u3055\u308c\u3066ready()\u3067\u306a\u3093\u304b\u3067\u304d\u308b\u3002\nverboase_name\u3082\u30ab\u30b9\u30bf\u30de\u30a4\u30ba:\nIt is possible to omit models.py entirely \nif an application doesn\u2019t have any models.\n\nThe name of applications can be customized in the admin \nwith the verbose_name of application configurations.\n\n\u78ba\u8a8d:\n(v17)hdknr@wzy:~/ve/v17/src/sample/web$ rm dashboard/models.py\n\n(v17)hdknr@wzy:~/ve/v17/src/sample/web$ python manage.py shell\ntodo application can be initialzed here.\ncount =  1\ndashboard application can be initialzed here.\nPython 2.7.3 (default, Mar 13 2014, 11:03:55) \n[GCC 4.7.2] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n(InteractiveConsole)\n>>> apps.get_app_config('dashboard').verbose_name\n'Dashboard Application'\n\n\u3082\u3061\u308d\u3093\u30e2\u30c7\u30eb\u306a\u3044:\n\n    >>> from django.apps import apps\n    >>> apps.get_app_config('dashboard').label\n    'dashboard'\n    >>> apps.get_app_config('dashboard').models\n    OrderedDict()\n\n\n\n1.6\u4e92\u63db\napp/settings.py \u3092\u4fee\u6b63:\n\n    INSTALLED_APPS += (\n        'todos',                   \n        #'todos.apps.WebAppConfig',  # \u30b3\u30e1\u30f3\u30c8\n    )    \n\n\ntodos/init.py:\n\n    default_app_config = \"todos.apps.WebAppConfig\"\n\n\napp_label\napp_label:\nApplication labels are assigned correctly to models \neven when they\u2019re defined outside of models.py. \n\nYou don\u2019t have to set app_label explicitly any more.\n\n\u8868\u793a:    \n\n    >>> from django.apps import apps\n    >>> apps.get_app_config('todos').label\n    'todos'\n\n\nlabel\u304c\u30d0\u30c3\u30c6\u30a3\u30f3\u30b0\u3057\u305f\u6642\u306e\u70ba\u306b\u4fee\u6b63\u3067\u304d\u308b:\nApplications can be relabeled with the label attribute of application configurations, \nto work around label conflicts.\n\nready()\u3067label\u3092\u6307\u5b9a\u3057\u3066\u307f\u308b:    \n\n    def ready(self):\n        print \"dashboard application can be initialzed here.\"\n        self.label = \"superdashboard\"\n\n    >>> from django.apps import apps\n    >>> apps.get_app_config('dashboard').label\n    'superdashboard'\n\n\n\nurls.py \u3067 autodiscover()\u306a\u304f\u3066\u3082admin\u4f7f\u3048\u308b\n\u4e0d\u8981\u306b\u306a\u308a\u307e\u3057\u305f:\nThe admin automatically calls autodiscover() \nwhen Django starts. \n\nYou can consequently remove this line from your URLconf.\n\n\n\n# django.apps \n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u4ed5\u7d44\u307f\u5909\u308f\u3063\u305f\u4ee5\u524d\u306f\"app cache\":\n\n    App-loading refactor\n    \n        Historically, Django applications were tightly linked to models. \n        A singleton known as the \u201capp cache\u201d dealt with both installed applications and models. \n    \n        The models module was used as an identifier for applications in many APIs.\n    \n        As the concept of Django applications matured, \n        this code showed some shortcomings. \n    \n\n1.7\u3067\u306f \"app registry\":\n\n        It has been refactored into an \u201capp registry\u201d \n        where models modules no longer have a central role \n        and where it\u2019s possible to attach configuration data to applications.\n\n[djang.db.models.loading](https://github.com/django/django/blob/stable/1.6.x/django/db/models/loading.py)\u304c\u5ec3\u6b62\u3055\u308c\u3066\u3001\n[django.apps](https://github.com/django/django/tree/stable/1.7.x/django/apps)\u304c\u65b0\u8a2d:\n\n    (v17)hdknr@wzy:~/ve/v17/src/sample/web$ tree /home/hdknr/ve/v17/lib/python2.7/site-packages/django/apps/ -I \"*.pyc\"\n    /home/hdknr/ve/v17/lib/python2.7/site-packages/django/apps/\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 config.py\n    \u2514\u2500\u2500 registry.py\n\n- [1.7\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://docs.djangoproject.com/en/dev/ref/applications/)\n\n\n# djang.apps.config.AppConfig \n\n[AppConfig](https://github.com/django/django/blob/stable/1.7.x/django/apps/config.py#L12):\n\n```py\n\n    >>> from django.apps import apps\n    >>> apps.get_app_config('todos')\n    <AppConfig: todos>\n    >>> cf = _\n    >>> cf.name, cf.verbose_name\n    ('todos', 'Todos')\n    >>> cf.path\n    u'/home/hdknr/ve/v17/src/sample/web/todos'\n    >>> cf.models\n    OrderedDict([('todo', <class 'todos.models.Todo'>)])\n    >>> [i for i in cf.get_models()]\n    [<class 'todos.models.Todo'>]\n    >>> cf.label\n    'todos'\n    >>> cf.models_module\n    <module 'todos.models' from '/home/hdknr/ve/v17/src/sample/web/todos/models.pyc'>\n    >>> cf.module\n    <module 'todos' from '/home/hdknr/ve/v17/src/sample/web/todos/__init__.pyc'>\n```\n\n## AppConfig#ready()   \n\n\nready()\u304c\u547c\u3070\u308c\u308b\u306e\u3067\u3054\u306b\u3087\u308c\u308b\uff1a\n\n    Improvements thus far include:\n    \n        Applications can run code at startup, \n        before Django does anything else, \n        with the ready() method of their configuration.\n\n        Django imports all application configurations and models as soon as it starts, \n        through a deterministic and straightforward process. \n    \n        This should make it easier to diagnose import issues such as import loops.\n\ntodos.apps \u3092\u4f5c\u6210:\n\n```py\n\n    from django.apps import AppConfig\n    from models import Todo\n    \n    \n    class WebAppConfig(AppConfig):\n        name = \"todos\"\n        verbose_name = \"Todos Application\"\n    \n        def ready(self):\n            print \"todo application can be initialzed here.\"\n            print \"count = \", Todo.objects.count()\n\n```\n\n\napp/settings.py \u3092\u4fee\u6b63:\n\n```py\n\n    INSTALLED_APPS += (\n        #'todos',                   # \u30b3\u30e1\u30f3\u30c8\n        'todos.apps.WebAppConfig',  # AppConfig\u3092\u6307\u5b9a\n    )    \n\n```\n\nshell\u3092\u8d77\u52d5\u3059\u308b\u3068\u30d7\u30ed\u30f3\u30d7\u30c8\u306e\u524d\u306b ready()\u304c\u5b9f\u884c\u3055\u308c\u3066\u308b:\n\n    (v17)hdknr@wzy:~/ve/v17/src/sample/web$ python manage.py shell\n\n    todo application can be initialzed here.\n    count =  1\n\n    Python 2.7.3 (default, Mar 13 2014, 11:03:55) \n    [GCC 4.7.2] on linux2\n    Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n    (InteractiveConsole)\n    >>> \n\n\n# models.py\u4e0d\u8981 #\n\ndashbaord\u30a2\u30d7\u30ea\u8ffd\u52a0:\n\n    (v17)hdknr@wzy:~/ve/v17/src/sample/web$ python manage.py startapp dashboard\n    todo application can be initialzed here.\n    count =  1\n\n\n    (v17)hdknr@wzy:~/ve/v17/src/sample/web$ cat dashboard/apps.py \n\n```py\n\n    from django.apps import AppConfig\n    \n    \n    class WebAppConfig(AppConfig):\n        name = \"dashboard\"\n        verbose_name = \"Dashboard Application\"\n    \n        def ready(self):\n            print \"dashboard application can be initialzed here.\"\n\n    (v17)hdknr@wzy:~/ve/v17/src/sample/web$ cat app/settings.py\n\n    INSTALLED_APPS += (\n        #'todos',\n        'todos.apps.WebAppConfig',\n        'dashboard.apps.WebAppConfig',\n    )\n```\n\nmodels.py\u304c\u7121\u304f\u3066\u3082\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u521d\u671f\u5316\u3055\u308c\u3066ready()\u3067\u306a\u3093\u304b\u3067\u304d\u308b\u3002\nverboase_name\u3082\u30ab\u30b9\u30bf\u30de\u30a4\u30ba:\n\n    It is possible to omit models.py entirely \n    if an application doesn\u2019t have any models.\n\n    The name of applications can be customized in the admin \n    with the verbose_name of application configurations.\n\n\u78ba\u8a8d:\n\n    (v17)hdknr@wzy:~/ve/v17/src/sample/web$ rm dashboard/models.py\n\n    (v17)hdknr@wzy:~/ve/v17/src/sample/web$ python manage.py shell\n    todo application can be initialzed here.\n    count =  1\n    dashboard application can be initialzed here.\n    Python 2.7.3 (default, Mar 13 2014, 11:03:55) \n    [GCC 4.7.2] on linux2\n    Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n    (InteractiveConsole)\n    >>> apps.get_app_config('dashboard').verbose_name\n    'Dashboard Application'\n\n\u3082\u3061\u308d\u3093\u30e2\u30c7\u30eb\u306a\u3044:\n\n```py\n\n    >>> from django.apps import apps\n    >>> apps.get_app_config('dashboard').label\n    'dashboard'\n    >>> apps.get_app_config('dashboard').models\n    OrderedDict()\n\n```\n\n## 1.6\u4e92\u63db ##\n\napp/settings.py \u3092\u4fee\u6b63:\n\n```py\n\n    INSTALLED_APPS += (\n        'todos',                   \n        #'todos.apps.WebAppConfig',  # \u30b3\u30e1\u30f3\u30c8\n    )    \n\n```\n\ntodos/__init__.py:\n\n```py\n\n\tdefault_app_config = \"todos.apps.WebAppConfig\"\n```\n\n    \n# app_label #\n\napp_label:\n\n    Application labels are assigned correctly to models \n    even when they\u2019re defined outside of models.py. \n     \n    You don\u2019t have to set app_label explicitly any more.\n    \n\u8868\u793a:    \n\n```py\n\n    >>> from django.apps import apps\n    >>> apps.get_app_config('todos').label\n    'todos'\n\n```\n\n\nlabel\u304c\u30d0\u30c3\u30c6\u30a3\u30f3\u30b0\u3057\u305f\u6642\u306e\u70ba\u306b\u4fee\u6b63\u3067\u304d\u308b:\n\n    Applications can be relabeled with the label attribute of application configurations, \n    to work around label conflicts.\n    \nready()\u3067label\u3092\u6307\u5b9a\u3057\u3066\u307f\u308b:    \n\n```py\n\n    def ready(self):\n        print \"dashboard application can be initialzed here.\"\n        self.label = \"superdashboard\"\n\n    >>> from django.apps import apps\n    >>> apps.get_app_config('dashboard').label\n    'superdashboard'\n\n```\n\n\n# urls.py \u3067 autodiscover()\u306a\u304f\u3066\u3082admin\u4f7f\u3048\u308b \n\n\n\u4e0d\u8981\u306b\u306a\u308a\u307e\u3057\u305f:\n\n    The admin automatically calls autodiscover() \n    when Django starts. \n\n    You can consequently remove this line from your URLconf.\n\n", "tags": ["Django"]}