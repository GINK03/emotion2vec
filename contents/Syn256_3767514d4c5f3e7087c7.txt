{"context": "Swift2\u3067HealthKit\u304b\u3089\u6307\u5b9a\u65e5\uff11\u65e5\u5206\u306e\u6b69\u6570\u3092\u53d6\u5f97\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\u3044\u3064\u3082\u3069\u304a\u308agithub\u306b\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\n\u30bd\u30fc\u30b9\u304c\u5fc5\u8981\u306a\u65b9\u306f\u305d\u3061\u3089\u3082\u3054\u3089\u3093\u304f\u3060\u3055\u3044\u3002\n\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089\n\nViewController.swift\n    @IBAction func getSteps(sender: UIButton) {\n        healthKit.recentStepsOfDay(dtpDate.date, completion: {steps, error in\n            // Autolayout\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u30c7\u30fc\u30bf\u306e\u5909\u66f4\u304cAutolayout\u306e\u76e3\u8996\u5bfe\u8c61\u306b\u306f\u3044\u308b\u3088\u3046\u3067\u3001\n            // \u30c7\u30fc\u30bf\u306e\u53cd\u6620\u304c\u304b\u306a\u308a\u9045\u308c\u308b\uff08\u4f53\u611f\u306730\u79d2\u304f\u3089\u3044\u6642\u9593\u304c\u304b\u304b\u308b\uff09\u306e\u3067\u3001\n            // \u3053\u3053\u306e\u53cd\u6620\u306b\u95a2\u3057\u3066\u306fAutolayout\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\n            dispatch_async(dispatch_get_main_queue(), {\n                self.lblSteps.text = steps.description\n            })\n        })\n    }\n\n\n\nHealthKit.swift\nimport HealthKit\n\n/// HealthKit\u304b\u3089\u6b69\u6570\u3092\u53d6\u5f97\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\nclass HealthKit {\n    /// HealthKit\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\n    var storage:HKHealthStore = HKHealthStore()\n\n    /**\n     HealthKit\u3078\u306e\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3092\u78ba\u8a8d\n\n     - returns:\n     */\n    init() {\n        checkAuthorization()\n    }\n\n    /**\n     HealthKit\u3078\u306e\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u78ba\u8a8d\n\n     - returns: true = \u8a31\u53ef / false = \u4e0d\u8a31\u53ef\n     */\n    func checkAuthorization() -> Bool {\n        var isEnabled = true\n\n        // \u5229\u7528\u3057\u3066\u3044\u308b\u30c7\u30d0\u30a4\u30b9\u3067HealthKit\u304c\u5229\u7528\u53ef\u80fd\u304b\u8abf\u3079\u308b\n        if HKHealthStore.isHealthDataAvailable()\n        {\n            // \u6b69\u6570\u306e\u53d6\u5f97\u3092\u30ea\u30af\u30a8\u30b9\u30c8\n            let steps = NSSet(object: HKQuantityType.quantityTypeForIdentifier(HKQuantityTypeIdentifierStepCount)!)\n\n            // \u8a31\u53ef\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\n            storage.requestAuthorizationToShareTypes(nil, readTypes: steps as? Set<HKObjectType>) { (success, error) -> Void in\n                isEnabled = success\n            }\n        }\n        else\n        {\n            isEnabled = false\n        }\n\n        return isEnabled\n    }\n\n    /**\n     \u6307\u5b9a\u65e5\uff11\u65e5\u5206\u306e\u6b69\u6570\u3092HealthKit\u304b\u3089\u53d6\u5f97\u3059\u308b\n\n     - parameter findDate:   \u691c\u7d22\u5bfe\u8c61\u65e5\n     - parameter completion: \u30c7\u30fc\u30bf\u53d6\u5f97\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30c7\u30ea\u30b2\u30fc\u30c8\u95a2\u6570\n     */\n    func recentStepsOfDay(findDate: NSDate, completion: ((steps:Int, error:NSError!) -> Void)!) {\n        // HKSample\u304b\u3089\u6b69\u6570\u306e\u53d6\u5f97\u3092\u30ea\u30af\u30a8\u30b9\u30c8\n        let type = HKSampleType.quantityTypeForIdentifier(HKQuantityTypeIdentifierStepCount)\n\n        // \u5bfe\u8c61\u65e5\u306e24\u6642\u9593\u5206\u306e\u6b69\u6570\u3092\u53d6\u5f97\u3059\u308b\n        let predicate = HKQuery.predicateForSamplesWithStartDate(findDate, endDate: NSDate(timeIntervalSince1970: findDate.timeIntervalSince1970 + 86400), options: .None)\n\n        // \u6307\u5b9a\u671f\u9593\u5185\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n        let query = HKSampleQuery(sampleType: type!, predicate: predicate, limit: 0, sortDescriptors: nil) { query, results, error in\n            var steps: Int = 0\n\n            // \u6307\u5b9a\u671f\u9593\u3067\u53d6\u5f97\u3067\u304d\u305f\u6b69\u6570\u306e\u5408\u8a08\u3092\u8a08\u7b97\n            if results?.count > 0\n            {\n                for result in results as! [HKQuantitySample]\n                {\n                    steps += Int(result.quantity.doubleValueForUnit(HKUnit.countUnit()))\n                }\n            }\n            // \u5408\u8a08\u6b69\u6570\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3078\u8fd4\u3059\n            completion(steps: steps, error: error)\n        }\n\n        storage.executeQuery(query)\n    }\n}\n\n\n\u3064\u307e\u3065\u3044\u305f\u3068\u3053\u308d\u306fHealthKit\u304b\u3089\u53d6\u5f97\u3057\u305f\u6b69\u6570\u3092UILabel\u3084UITextView\u306b\u8a2d\u5b9a\u3057\u3066\u3082\u63cf\u753b\u3055\u308c\u306a\u304b\u3063\u305f\u73fe\u8c61\u306b\u906d\u9047\u3057\u305f\u3068\u3053\u308d\u3067\u3059\u3002\n\u305d\u308c\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306bdispatch_async\u30d6\u30ed\u30c3\u30af\u3067\u30c7\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u6b69\u6570\u306e\u53d6\u5f97\u6761\u4ef6\u306b\u95a2\u3057\u3066\u306fPredicate\u3067\u7bc4\u56f2\u6307\u5b9a\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u3042\u308b\u7a0b\u5ea6\u81ea\u7531\u306b\u53d6\u5f97\u304c\u53ef\u80fd\u3067\u3059\u3002\nSwift2\u3067HealthKit\u304b\u3089\u6307\u5b9a\u65e5\uff11\u65e5\u5206\u306e\u6b69\u6570\u3092\u53d6\u5f97\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n\u3044\u3064\u3082\u3069\u304a\u308agithub\u306b\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\n\u30bd\u30fc\u30b9\u304c\u5fc5\u8981\u306a\u65b9\u306f\u305d\u3061\u3089\u3082\u3054\u3089\u3093\u304f\u3060\u3055\u3044\u3002\n\n[\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089](https://github.com/Synashida/GetStepsFromHealthKitSwift2)\n\n```ViewController.swift\n    @IBAction func getSteps(sender: UIButton) {\n        healthKit.recentStepsOfDay(dtpDate.date, completion: {steps, error in\n            // Autolayout\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u30c7\u30fc\u30bf\u306e\u5909\u66f4\u304cAutolayout\u306e\u76e3\u8996\u5bfe\u8c61\u306b\u306f\u3044\u308b\u3088\u3046\u3067\u3001\n            // \u30c7\u30fc\u30bf\u306e\u53cd\u6620\u304c\u304b\u306a\u308a\u9045\u308c\u308b\uff08\u4f53\u611f\u306730\u79d2\u304f\u3089\u3044\u6642\u9593\u304c\u304b\u304b\u308b\uff09\u306e\u3067\u3001\n            // \u3053\u3053\u306e\u53cd\u6620\u306b\u95a2\u3057\u3066\u306fAutolayout\u306e\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u308b\n            dispatch_async(dispatch_get_main_queue(), {\n                self.lblSteps.text = steps.description\n            })\n        })\n    }\n```\n\n``` HealthKit.swift\nimport HealthKit\n\n/// HealthKit\u304b\u3089\u6b69\u6570\u3092\u53d6\u5f97\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\nclass HealthKit {\n    /// HealthKit\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\n    var storage:HKHealthStore = HKHealthStore()\n    \n    /**\n     HealthKit\u3078\u306e\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u3092\u78ba\u8a8d\n     \n     - returns:\n     */\n    init() {\n        checkAuthorization()\n    }\n    \n    /**\n     HealthKit\u3078\u306e\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u78ba\u8a8d\n     \n     - returns: true = \u8a31\u53ef / false = \u4e0d\u8a31\u53ef\n     */\n    func checkAuthorization() -> Bool {\n        var isEnabled = true\n        \n        // \u5229\u7528\u3057\u3066\u3044\u308b\u30c7\u30d0\u30a4\u30b9\u3067HealthKit\u304c\u5229\u7528\u53ef\u80fd\u304b\u8abf\u3079\u308b\n        if HKHealthStore.isHealthDataAvailable()\n        {\n            // \u6b69\u6570\u306e\u53d6\u5f97\u3092\u30ea\u30af\u30a8\u30b9\u30c8\n            let steps = NSSet(object: HKQuantityType.quantityTypeForIdentifier(HKQuantityTypeIdentifierStepCount)!)\n            \n            // \u8a31\u53ef\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\n            storage.requestAuthorizationToShareTypes(nil, readTypes: steps as? Set<HKObjectType>) { (success, error) -> Void in\n                isEnabled = success\n            }\n        }\n        else\n        {\n            isEnabled = false\n        }\n        \n        return isEnabled\n    }\n    \n    /**\n     \u6307\u5b9a\u65e5\uff11\u65e5\u5206\u306e\u6b69\u6570\u3092HealthKit\u304b\u3089\u53d6\u5f97\u3059\u308b\n     \n     - parameter findDate:   \u691c\u7d22\u5bfe\u8c61\u65e5\n     - parameter completion: \u30c7\u30fc\u30bf\u53d6\u5f97\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30c7\u30ea\u30b2\u30fc\u30c8\u95a2\u6570\n     */\n    func recentStepsOfDay(findDate: NSDate, completion: ((steps:Int, error:NSError!) -> Void)!) {\n        // HKSample\u304b\u3089\u6b69\u6570\u306e\u53d6\u5f97\u3092\u30ea\u30af\u30a8\u30b9\u30c8\n        let type = HKSampleType.quantityTypeForIdentifier(HKQuantityTypeIdentifierStepCount)\n        \n        // \u5bfe\u8c61\u65e5\u306e24\u6642\u9593\u5206\u306e\u6b69\u6570\u3092\u53d6\u5f97\u3059\u308b\n        let predicate = HKQuery.predicateForSamplesWithStartDate(findDate, endDate: NSDate(timeIntervalSince1970: findDate.timeIntervalSince1970 + 86400), options: .None)\n        \n        // \u6307\u5b9a\u671f\u9593\u5185\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n        let query = HKSampleQuery(sampleType: type!, predicate: predicate, limit: 0, sortDescriptors: nil) { query, results, error in\n            var steps: Int = 0\n            \n            // \u6307\u5b9a\u671f\u9593\u3067\u53d6\u5f97\u3067\u304d\u305f\u6b69\u6570\u306e\u5408\u8a08\u3092\u8a08\u7b97\n            if results?.count > 0\n            {\n                for result in results as! [HKQuantitySample]\n                {\n                    steps += Int(result.quantity.doubleValueForUnit(HKUnit.countUnit()))\n                }\n            }\n            // \u5408\u8a08\u6b69\u6570\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3078\u8fd4\u3059\n            completion(steps: steps, error: error)\n        }\n        \n        storage.executeQuery(query)\n    }\n}\n```\n\n\u3064\u307e\u3065\u3044\u305f\u3068\u3053\u308d\u306fHealthKit\u304b\u3089\u53d6\u5f97\u3057\u305f\u6b69\u6570\u3092UILabel\u3084UITextView\u306b\u8a2d\u5b9a\u3057\u3066\u3082\u63cf\u753b\u3055\u308c\u306a\u304b\u3063\u305f\u73fe\u8c61\u306b\u906d\u9047\u3057\u305f\u3068\u3053\u308d\u3067\u3059\u3002\n\u305d\u308c\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306bdispatch_async\u30d6\u30ed\u30c3\u30af\u3067\u30c7\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u6b69\u6570\u306e\u53d6\u5f97\u6761\u4ef6\u306b\u95a2\u3057\u3066\u306fPredicate\u3067\u7bc4\u56f2\u6307\u5b9a\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u3042\u308b\u7a0b\u5ea6\u81ea\u7531\u306b\u53d6\u5f97\u304c\u53ef\u80fd\u3067\u3059\u3002\n", "tags": ["Swift2", "HealthKit", "\u6b69\u6570"]}