{"context": " More than 1 year has passed since last update.\u30cd\u30c3\u30c8\u9078\u6319\u304c\u89e3\u7981\u3055\u308c\u3066\u65e9\u4e00\u5e74\u3001\u516c\u5f0f\u306e\u653f\u515a\u95a2\u4fc2\u8005\u306e\u30cd\u30c3\u30c8\u767a\u4fe1\u304c\u3001\u652f\u6301\u8005\u306eSAN\u5024\u3092\u30ab\u30c4\u30aa\u7bc0\u306e\u3054\u3068\u304f\u524a\u308a\u7d9a\u3051\u308b\u30a8\u30af\u30b9\u30c8\u30ea\u30fc\u30e0\u30b2\u30fc\u30e0\u3068\u5316\u3057\u305f\u4eca\u65e5\u3053\u306e\u9803\u3001\u7686\u69d8\u3044\u304b\u304c\u304a\u3059\u3054\u3057\u3067\u3057\u3087\u3046\u304b\u3002\n\u3055\u3066\u3001\u4eca\u56de\u306f\u73fe\u5728\u5730\u304b\u3089\u5c0f\u9078\u6319\u533a\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\n\u7d50\u679c\nhttp://needtec.sakura.ne.jp/analyze_election/page/ElectionArea/shuin_47\n\u3053\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001\u770c\u3092\u9078\u629e\u3059\u308b\u304b\u3001\u73fe\u5728\u5730\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3067\u3001\u5c0f\u9078\u6319\u533a\u306e\u5019\u88dc\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u3055\u3089\u306b\u5c0f\u9078\u6319\u533a\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3067\u3001\u9078\u6319\u533a\u306e\u3060\u3044\u305f\u3044\u306e\u4f4d\u7f6e\u3068\u5019\u88dc\u8005\u306e\u4e00\u89a7\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nhttps://github.com/mima3/analyze_election\n\u4f9d\u5b58\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\nlxml-3.4.0-py2.7-freebsd-9.1-RELEASE-p15-amd64.egg\nrdp-0.5-py2.7.egg\nnumpy-1.9.1-py2.7-freebsd-9.1-RELEASE-p15-amd64.egg\nsympy-0.7.5-py2.7.egg\nBeaker-1.6.4-py2.7.egg\nsympy\u306f0.7.5\u3067\u306a\u3044\u3068\u52d5\u304d\u307e\u305b\u3093\n\n\u4f7f\u7528\u30c7\u30fc\u30bf\n\u56fd\u571f\u6570\u5024\u60c5\u5831\u3000\u884c\u653f\u533a\u57df\u30c7\u30fc\u30bf \nhttp://nlftp.mlit.go.jp/ksj/gml/datalist/KsjTmplt-N03.html\n\u8846\u8b70\u9662\u5c0f\u9078\u6319\u533a\u9078\u51fa\u8b70\u54e1\u306e\u9078\u6319\u533a\uff08\u90fd\u9053\u5e9c\u770c\u5225\uff09\nhttp://www.soumu.go.jp/senkyo/senkyo_s/news/senkyo/shu_kuwari/\n\u4e0a\u8a18\u3092CSV\u306b\u624b\u5165\u529b\u3067\u5909\u63db\u3057\u305f\u30c7\u30fc\u30bf\nhttps://github.com/mima3/analyze_election/blob/master/election_area.csv\n\u671d\u65e5\u65b0\u805e\u30c7\u30b8\u30bf\u30eb>2014\u8846\u9662\u9078>\u5019\u88dc\u8005\nhttp://www.asahi.com/senkyo/sousenkyo47/kouho/\n\u4e0a\u8a18\u3092CSV\u306b\u5909\u63db\u3057\u305f\u30c7\u30fc\u30bf\nhttps://github.com/mima3/analyze_election/blob/master/script/candidate_shuin_47.csv\n\n\u30c7\u30fc\u30bf\u4f5c\u6210\u306e\u624b\u9806\n# \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u4f5c\u6210\npython create_db.py election.sqlite\n\n# \u56fd\u571f\u6570\u5024\u60c5\u5831\u3000\u884c\u653f\u533a\u57df\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3000\u6570\u6642\u9593\u3067\u7d42\u308f\u308b\u3088\uff01\npython import_administrative_boundary.py election.sqlite area\\N03-14_140401.xml\n\n# \u884c\u653f\u533a\u57df\u30c7\u30fc\u30bf\u3092sympy\u306ePolygon\u306b\u5909\u63db\u3059\u308b 24\u6642\u9593\u3050\u3089\u3044\u3067\u7d42\u308f\u308b\u3088\uff01\npython convert_poly.py election.sqlite\n\n# \u5c0f\u9078\u6319\u533a\u306e\u60c5\u5831\u3092\u767b\u9332\npython import_election_area.py election.sqlite election_area.csv\n\n# \u5c0f\u9078\u6319\u533a\u306e\u5019\u88dc\u8005\u60c5\u5831\u3092\u767b\u9332\npython import_candidate.py election.sqlite shuin_47 script\\candidate_shuin_47.csv\n\n\n\n\u89e3\u8aac\n\n\u884c\u653f\u533a\u57df\u30c7\u30fc\u30bf\n\u56fd\u571f\u6570\u5024\u60c5\u5831\u306b\u306f\u884c\u653f\u533a\u57df\u30c7\u30fc\u30bf\u304cXML\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3092\u7528\u3044\u308c\u3070\u3001\u884c\u653f\u533a\u5272\u308a\u3092GoogleMap\u4e0a\u306b\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u3053\u306e\u30c7\u30fc\u30bf\u306f\u83ab\u5927\u306a\u5927\u304d\u3055\u306a\u306e\u3067\u3001\u53d6\u6271\u3044\u306b\u306f\u3044\u304f\u3064\u304b\u6ce8\u610f\u3059\u308b\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u5927\u304d\u306a\u30b5\u30a4\u30baXML\u3092\u89e3\u6790\u3059\u308b\n\u5927\u304d\u306a\u30b5\u30a4\u30ba\u306eXML\u3092\u89e3\u6790\u3059\u308b\u5834\u5408\u3001XML\u30d5\u30a1\u30a4\u30eb\u3092\u6587\u5b57\u306b\u5909\u63db\u3057\u3066\u30d1\u30fc\u30b9\u3059\u308b\u3068\u3044\u3046\u3084\u308a\u304b\u305f\u3092\u3059\u308b\u3068\u3001\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u6fc0\u5897\u3057\u3001\u51e6\u7406\u3057\u304d\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001lxml.etree.iterparse\u3092\u7528\u3044\u3066\u3001\u9806\u6b21\u51e6\u7406\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u5b9f\u969b\u306e\u51e6\u7406\u3092\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nelection_db.py\n    def ImportAdministrativeBoundary(self, xml):\n        f = None\n        contents = None\n        namespaces = {\n            'ksj': 'http://nlftp.mlit.go.jp/ksj/schemas/ksj-app',\n            'gml': 'http://www.opengis.net/gml/3.2',\n            'xlink': 'http://www.w3.org/1999/xlink',\n            'xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n        }\n        self._conn.execute('begin')\n\n        print ('admins....')\n        context = etree.iterparse(xml, events=('end',), tag='{http://nlftp.mlit.go.jp/ksj/schemas/ksj-app}AdministrativeBoundary')\n        for event, admin in context:\n            adminId = admin.get('{http://www.opengis.net/gml/3.2}id')\n            print (adminId)\n            bounds = admin.find('ksj:bounds', namespaces=namespaces).get('{http://www.w3.org/1999/xlink}href')[1:]\n            prefectureName = admin.find('ksj:prefectureName', namespaces=namespaces).text\n            subPrefectureName = admin.find('ksj:subPrefectureName', namespaces=namespaces).text\n            countyName = admin.find('ksj:countyName', namespaces=namespaces).text\n            cityName = admin.find('ksj:cityName', namespaces=namespaces).text\n            areaCode = admin.find('ksj:administrativeAreaCode', namespaces=namespaces).text\n            sql = '''INSERT INTO administrative_boundary\n                     (gml_id, bounds, prefecture_name, sub_prefecture_name, county_name, city_name, area_code)\n                     VALUES(?, ?, ?, ?, ?, ?, ?);'''\n            self._conn.execute(sql, [adminId, bounds, prefectureName, subPrefectureName, countyName, cityName, areaCode ])\n\n            admin.clear()\n            # Also eliminate now-empty references from the root node to <Title> \n            while admin.getprevious() is not None:\n                del admin.getparent()[0]\n        del context\n\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u56fd\u571f\u6570\u5024\u60c5\u5831\u3092\u89e3\u6790\u3057\u3066DB\u306b\u683c\u7d0d\u3057\u3066\u3044\u308b\u51e6\u7406\u306e\u4e00\u90e8\u3067\u3059\u3002\n\u3053\u306e\u4f8b\u3067\u306f\u3001etree.iterparse\u3092\u7528\u3044\u3066\u3001\u300cAdministrativeBoundary\u300d\u30bf\u30b0\u304c\u691c\u77e5\u3055\u308c\u308b\u305f\u3073\u306b\u3001\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u8a73\u7d30\u306f\u3001\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u53c2\u8003\u306b\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002\nlxml \u3092\u4f7f\u7528\u3057\u3066 Python \u3067\u306e XML \u69cb\u6587\u89e3\u6790\u3092\u30cf\u30a4\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u3059\u308b \nhttp://www.ibm.com/developerworks/jp/xml/library/x-hiperfparse/\n\n\u5ea7\u6a19\u60c5\u5831\u3092\u9593\u5f15\u304f\n\u56fd\u571f\u6570\u5024\u30c7\u30fc\u30bf\u306f\u6b63\u78ba\u306a\u5ea7\u6a19\u60c5\u5831\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30b5\u30a4\u30ba\u304c\u5927\u304d\u304f\u306a\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u3056\u3063\u304f\u308a\u3057\u305f\u5ea7\u6a19\u304c\u308f\u304b\u308c\u3070\u3044\u3044\u306e\u3067\u3001\u305d\u306e\u60c5\u5831\u3092\u9593\u5f15\u304d\u307e\u3059\u3002\n\u7dda\u3092\u9593\u5f15\u304f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u3057\u3066\u306f\uff0cRamer-Douglas-Peucker\u3068\u3044\u3046\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8aac\u660e\u306f\u4e0b\u8a18\u306e\u30da\u30fc\u30b8\u3092\u898b\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n[Mathematica] \u6298\u308c\u7dda\u3092\u9593\u5f15\u304f \nhttp://www.330k.info/essay/oresenwomabiku\nPython\u306e Ramer-Douglas-Peucker \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u306f\u4e0b\u8a18\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\nhttps://pypi.python.org/pypi/rdp\n\n\u5c0f\u9078\u6319\u533a\u306e\u60c5\u5831\u767b\u9332\n\u7dcf\u52d9\u7701\u306f\u4f8b\u306b\u3088\u3063\u3066\u4f8b\u306e\u3054\u3068\u304f\u3001\u5c0f\u9078\u6319\u533a\u306e\u60c5\u5831\u3092PDF\u3067\u3057\u304b\u516c\u958b\u3057\u3066\u304a\u308a\u307e\u305b\u3093\u3002\n\u306a\u306e\u3067\u3001\u9811\u5f35\u3063\u3066\u624b\u5165\u529b\u3059\u308b\u304b\u3001\u5225\u306e\u65b9\u6cd5\u3092\u305f\u3081\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u5c0f\u9078\u6319\u533a\u306e\u60c5\u5831\u304c\u610f\u5916\u3068\u30d5\u30a1\u30b8\u30fc\u306a\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070\u3001\u5ca9\u624b\u770c\u306e\u7b2c\u4e00\u533a\u3068\u7b2c\u4e8c\u533a\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nhttp://www.soumu.go.jp/main_content/000240041.pdf\n\u7b2c\u4e00\u533a\u3000\u76db\u5ca1\u5e02\uff08\u672c\u5e81\u7ba1\u5185\u3001\u76db\u5ca1\u5e02\u5f79\u6240\u9752\u5c71\u652f\u6240\u7ba1\u5185\u3001\u76db\u5ca1\u5e02\u5f79\u6240\u7c17\u5ddd\u652f\u6240\u7ba1\u5185\u3001\u76db\u5ca1\u5e02\u5f79\u6240\u592a\u7530\u652f\u6240\u7ba1\u5185\u3001\u76db\u5ca1\u5e02\u5f79\u6240\ue001\u652f\u6240\u7ba1\u5185\u3001\u76db\u5ca1\u5e02\u90fd\u5357\u7dcf\u5408\u652f\u6240\u7ba1\u5185\uff09\n\u7b2c\u4e8c\u533a\u3000\u76db\u5ca1\u5e02\uff08\u7b2c\u4e00\u533a\u306b\u5c5e\u3057\u306a\u3044\u533a\u57df\uff09\n\u3068\u3042\u308a\u307e\u3059\u3002\n\u5f53\u7136\u306e\u6a29\u5229\u306e\u3088\u3046\u306b\u3001\u672c\u5e81\u7ba1\u5185\u304c\u3069\u3053\u3092\u8868\u3059\u304b\u306e\u60c5\u5831\u306f\u3001\u3053\u3053\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u305d\u306e\u305f\u3081\u3001\u4eca\u56de\u306f\u3001\u76db\u5ca1\u5e02\u3060\u3063\u305f\u5834\u5408\u306f\u7b2c\u4e00\u533a\u3068\u7b2c\u4e8c\u533a\u304c\u5c0f\u9078\u6319\u533a\u306e\u5019\u88dc\u3068\u3057\u3066\u3042\u304c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\u3053\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u89e3\u6790\u3092\u3055\u305b\u306a\u3044\u3068\u3044\u3046\u5f37\u3044\u610f\u5fd7\u3092\u6301\u3063\u305f\u7dcf\u52d9\u7701\u306b\u5bfe\u3057\u3066\u546a\u8a5b\u3092\u5410\u304d\u306a\u304c\u3089\u4f5c\u6210\u3057\u305fCSV\u304c\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://github.com/mima3/analyze_election/blob/master/election_area.csv\n\u307e\u305f\u3001\u3053\u306e\u3042\u305f\u308a\u3067\u5fc3\u304c\u304a\u308c\u305f\u306e\u3067\u3001\u5019\u88dc\u8005\u306e\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u671d\u65e5\u65b0\u805e\u304b\u3089\u5f15\u3063\u5f35\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\u4e0b\u8a18\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3001\u305d\u308c\u3063\u307d\u3044\u30c7\u30fc\u30bf\u304c\u629c\u3051\u308b\u306e\u3067\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u624b\u3067\u76f4\u3057\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/mima3/analyze_election/blob/master/script/analyze_asahi.py\n\n\u73fe\u5728\u5730\u304b\u3089\u5c0f\u9078\u6319\u533a\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u73fe\u5728\u5730\u3092\u53d6\u5f97\u3059\u308b\u3002\n\u30d6\u30e9\u30a6\u30b6\u3067\u73fe\u5728\u5730\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001navigator.geolocation\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u7d4c\u5ea6\u3001\u7def\u5ea6\u304c\u53d6\u5f97\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\nif (!navigator.geolocation) {\n  //Geolocation API\u3092\u5229\u7528\u3067\u304d\u306a\u3044\u74b0\u5883\u5411\u3051\u306e\u51e6\u7406\n  alert('GeolocateAPI\u304c\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093');\n}\nnavigator.geolocation.getCurrentPosition(function(position) {\n  console.log(position)\n}\n\n\u306a\u304a\u3001IE\u306e\u5834\u5408\u3001\u73fe\u5728\u4f4d\u7f6e\u304c\u3001\u3072\u3069\u304f\u305a\u308c\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001Microsoft\u304c\u4f7f\u7528\u3057\u3066\u3044\u308b\u4f4d\u7f6e\u7528\u6cd5\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304cChrome\u3084Firefox\u304c\u5229\u7528\u3057\u3066\u3044\u308b\u4f4d\u7f6e\u60c5\u5831\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u7cbe\u5ea6\u304c\u60aa\u3044\u305f\u3081\u3060\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002\uff08\u304a\u308c\u306f\u60aa\u304f\u306d\u30fc\uff01\u304a\u308c\u306f\u60aa\u304f\u306d\u30fc\uff01\uff09\nhttps://social.technet.microsoft.com/Forums/ie/en-US/aea4db4e-0720-44fe-a9b8-09917e345080/geolocation-wrong-in-ie9-but-not-other-browsers\n\n\u7279\u5b9a\u306e\u5ea7\u6a19\u304c\u884c\u653f\u533a\u57df\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u308b\u3002\n\u7279\u5b9a\u306e\u5ea7\u6a19\u304c\u884c\u653f\u533a\u57df\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u308b\u306b\u306f\u3001\u591a\u89d2\u5f62\u4e2d\u306b\u70b9\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u308b\u306e\u3068\u540c\u3058\u610f\u5473\u306b\u306a\u308a\u307e\u3059\u3002\nPython\u306e\u5834\u5408\u3001SymPy \u3067 \u70b9\u306e\u5185\u5916\u5224\u5b9a\u3092\u884c\u3048\u3070 \u57fa\u672c\u7684 \u306b\u306f\u826f\u3044\u3067\u3059\u3002\n[Python]SymPy \u3067 \u70b9\u306e\u5185\u5916\u5224\u5b9a \nhttp://d.hatena.ne.jp/factal/20121013\n\u57fa\u672c\u7684\u306b\u306f\u3068\u8a00\u3063\u305f\u306e\u306f\u3001\u3053\u306e\u51e6\u7406\u304c\u304f\u3063\u305d\u9045\u3044\u304b\u3089\u3067\u3059\u3002\n\u6570\u4e07\u3042\u308b\u884c\u653f\u533a\u753b\u306b\u5bfe\u3057\u3066\u4e00\u3005\u3084\u3063\u3066\u3044\u305f\u306e\u3067\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u3059\u304e\u3066\u3057\u3087\u3046\u304c\u306a\u3044\u3067\u3059\u3002\n\u3053\u306e\u305f\u3081\u306b\u3001\u3053\u3053\u3067\u306f\uff12\u3064\u306e\u5bfe\u7b56\u3092\u65bd\u3057\u307e\u3057\u305f\u3002\n\uff11\u3064\u76ee\u3001\u70b9\u306e\u5185\u5916\u5224\u5b9a\u3092\u884c\u3046\u524d\u306b\u3001\u5bfe\u8c61\u306e\u591a\u89d2\u5f62\u306e\u6570\u3092\u7d5e\u308b\u3002\n\u3053\u308c\u306f\u3001\u591a\u89d2\u5f62\u306e\u9802\u70b9\u3068\u6307\u5b9a\u306e\u70b9\u306e\u8ddd\u96e2\u304c\u3001\u3042\u308b\u7bc4\u56f2\u5185\u306b\u3042\u308b\u5834\u5408\u306e\u307f\u691c\u7d22\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\nelection_db.py\n    def GetPos(self, lat, long):\n        \"\"\"\n        \u73fe\u5728\u306e\u7d4c\u5ea6\u7def\u5ea6\u306b\u7d10\u3065\u304fcurve\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n        \"\"\"\n        m =0.005\n        while 1:\n            rows = self._getCurveId(lat, long, m).fetchall()\n            if rows:\n              break\n            m = m * 2\n            if m > 0.1:\n              return None\n\n        dict = {}\n        pt = Point(lat, long)\n\n        for r in rows:\n            key = r[0]\n            ret = self._isCrossCurveId(pt, key)\n            if ret:\n                return ret\n        return None\n\n\n\uff12\u3064\u76ee\u3068\u3057\u3066\u3001\u3042\u3089\u304b\u3058\u3081Polygon\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u88c5\u306b\u306a\u308a\u307e\u3059\u3002\n    def ConvertPoly(self):\n        \"\"\"\n        curve\u30c6\u30fc\u30d6\u30eb\u304b\u3089polygon\u306e\u4f5c\u6210\n        \"\"\"\n        #gc.enable()\n        #gc.set_debug(gc.DEBUG_LEAK)\n        sql = '''DELETE FROM polygon'''\n        self._conn.execute(sql)\n\n        sql = '''select curve_id,lat,lng from curve order by curve_id'''\n        rows = self._conn.execute(sql)\n        dict = {}\n        for r in rows:\n            key = r[0]\n            if dict.get(key) is None:\n                dict[key] = []\n            dict[key].append((r[1], r[2]))\n        i = 0\n        self.Commit()\n\n        self._conn.execute('begin')\n        for key in dict:\n            print (key + \":\" + str(i))\n            #b = len(gc.get_objects())\n            self._createPoly(key, dict[key])\n            i = i + 1\n            #gc.collect()\n            #print str(b) + \":\" + str(len(gc.get_objects()))\n            if i % 100 == 0:\n                clear_cache()\n                self.Commit()\n\n    def _createPoly(self, key, list):\n        poly = Polygon(*list)\n        obj = pickle.dumps(poly)\n        sql = '''INSERT INTO polygon\n                       (curve_id, object)\n                     VALUES(?, ?);'''\n        self._conn.execute(sql, [key, obj ])\n        del poly\n        del obj\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306fpickle.dumps\u3092\u7528\u3044\u3066\u884c\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001sympy\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u69cb\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5927\u91cf\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3068\u30e1\u30e2\u30ea\u304c\u3059\u3050\u306b\u6570GByte\u6d88\u8cbb\u3055\u308c\u307e\u3059\u3002\n\u305d\u308c\u3092\u907f\u3051\u308b\u305f\u3081\u3001100\u500b\u4f5c\u6210\u3059\u308b\u305f\u3081\u3001clear_chache\u3092\u7528\u3044\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u524a\u9664\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u6700\u65b0\u306esympy\u306ePolygon\u3067\"Polygon has intersecting sides.\"\u3092\u4f8b\u5916\u3092\u51fa\u529b\u3059\u308b\u6761\u4ef6\u304c0.7.5\u30680.7.6\u3067\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n0.7.6\u3067\u306f\u6761\u4ef6\u304c\u53b3\u3057\u304f\u306a\u308a\u3001\u3053\u306e\u30c7\u30fc\u30bf\u3067\u306f\u6b63\u5e38\u306b\u4f5c\u6210\u3067\u304d\u306a\u3044\u3067\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001sympy\u306f0.7.5\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30cd\u30c3\u30c8\u9078\u6319\u304c\u89e3\u7981\u3055\u308c\u3066\u65e9\u4e00\u5e74\u3001\u516c\u5f0f\u306e\u653f\u515a\u95a2\u4fc2\u8005\u306e\u30cd\u30c3\u30c8\u767a\u4fe1\u304c\u3001\u652f\u6301\u8005\u306eSAN\u5024\u3092\u30ab\u30c4\u30aa\u7bc0\u306e\u3054\u3068\u304f\u524a\u308a\u7d9a\u3051\u308b\u30a8\u30af\u30b9\u30c8\u30ea\u30fc\u30e0\u30b2\u30fc\u30e0\u3068\u5316\u3057\u305f\u4eca\u65e5\u3053\u306e\u9803\u3001\u7686\u69d8\u3044\u304b\u304c\u304a\u3059\u3054\u3057\u3067\u3057\u3087\u3046\u304b\u3002\n\u3055\u3066\u3001\u4eca\u56de\u306f\u73fe\u5728\u5730\u304b\u3089\u5c0f\u9078\u6319\u533a\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\n##\u7d50\u679c\nhttp://needtec.sakura.ne.jp/analyze_election/page/ElectionArea/shuin_47\n\n\u3053\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001\u770c\u3092\u9078\u629e\u3059\u308b\u304b\u3001\u73fe\u5728\u5730\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3067\u3001\u5c0f\u9078\u6319\u533a\u306e\u5019\u88dc\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u3055\u3089\u306b\u5c0f\u9078\u6319\u533a\u3092\u9078\u629e\u3059\u308b\u3053\u3068\u3067\u3001\u9078\u6319\u533a\u306e\u3060\u3044\u305f\u3044\u306e\u4f4d\u7f6e\u3068\u5019\u88dc\u8005\u306e\u4e00\u89a7\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n##\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nhttps://github.com/mima3/analyze_election\n\n\u4f9d\u5b58\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\nlxml-3.4.0-py2.7-freebsd-9.1-RELEASE-p15-amd64.egg\nrdp-0.5-py2.7.egg\nnumpy-1.9.1-py2.7-freebsd-9.1-RELEASE-p15-amd64.egg\nsympy-0.7.5-py2.7.egg\nBeaker-1.6.4-py2.7.egg\n\nsympy\u306f0.7.5\u3067\u306a\u3044\u3068\u52d5\u304d\u307e\u305b\u3093\n\n\n##\u4f7f\u7528\u30c7\u30fc\u30bf\n **\u56fd\u571f\u6570\u5024\u60c5\u5831\u3000\u884c\u653f\u533a\u57df\u30c7\u30fc\u30bf** \nhttp://nlftp.mlit.go.jp/ksj/gml/datalist/KsjTmplt-N03.html\n\n **\u8846\u8b70\u9662\u5c0f\u9078\u6319\u533a\u9078\u51fa\u8b70\u54e1\u306e\u9078\u6319\u533a\uff08\u90fd\u9053\u5e9c\u770c\u5225\uff09**\nhttp://www.soumu.go.jp/senkyo/senkyo_s/news/senkyo/shu_kuwari/\n\n\u4e0a\u8a18\u3092CSV\u306b\u624b\u5165\u529b\u3067\u5909\u63db\u3057\u305f\u30c7\u30fc\u30bf\nhttps://github.com/mima3/analyze_election/blob/master/election_area.csv\n\n **\u671d\u65e5\u65b0\u805e\u30c7\u30b8\u30bf\u30eb>2014\u8846\u9662\u9078>\u5019\u88dc\u8005**\nhttp://www.asahi.com/senkyo/sousenkyo47/kouho/\n\n\u4e0a\u8a18\u3092CSV\u306b\u5909\u63db\u3057\u305f\u30c7\u30fc\u30bf\nhttps://github.com/mima3/analyze_election/blob/master/script/candidate_shuin_47.csv\n\n\n##\u30c7\u30fc\u30bf\u4f5c\u6210\u306e\u624b\u9806\n\n```\n# \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u4f5c\u6210\npython create_db.py election.sqlite\n\n# \u56fd\u571f\u6570\u5024\u60c5\u5831\u3000\u884c\u653f\u533a\u57df\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3000\u6570\u6642\u9593\u3067\u7d42\u308f\u308b\u3088\uff01\npython import_administrative_boundary.py election.sqlite area\\N03-14_140401.xml\n\n# \u884c\u653f\u533a\u57df\u30c7\u30fc\u30bf\u3092sympy\u306ePolygon\u306b\u5909\u63db\u3059\u308b 24\u6642\u9593\u3050\u3089\u3044\u3067\u7d42\u308f\u308b\u3088\uff01\npython convert_poly.py election.sqlite\n\n# \u5c0f\u9078\u6319\u533a\u306e\u60c5\u5831\u3092\u767b\u9332\npython import_election_area.py election.sqlite election_area.csv\n\n# \u5c0f\u9078\u6319\u533a\u306e\u5019\u88dc\u8005\u60c5\u5831\u3092\u767b\u9332\npython import_candidate.py election.sqlite shuin_47 script\\candidate_shuin_47.csv\n \n```\n\n\n##\u89e3\u8aac\n###\u884c\u653f\u533a\u57df\u30c7\u30fc\u30bf\n\u56fd\u571f\u6570\u5024\u60c5\u5831\u306b\u306f\u884c\u653f\u533a\u57df\u30c7\u30fc\u30bf\u304cXML\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3092\u7528\u3044\u308c\u3070\u3001\u884c\u653f\u533a\u5272\u308a\u3092GoogleMap\u4e0a\u306b\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u3053\u306e\u30c7\u30fc\u30bf\u306f\u83ab\u5927\u306a\u5927\u304d\u3055\u306a\u306e\u3067\u3001\u53d6\u6271\u3044\u306b\u306f\u3044\u304f\u3064\u304b\u6ce8\u610f\u3059\u308b\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\n####\u5927\u304d\u306a\u30b5\u30a4\u30baXML\u3092\u89e3\u6790\u3059\u308b\n\u5927\u304d\u306a\u30b5\u30a4\u30ba\u306eXML\u3092\u89e3\u6790\u3059\u308b\u5834\u5408\u3001XML\u30d5\u30a1\u30a4\u30eb\u3092\u6587\u5b57\u306b\u5909\u63db\u3057\u3066\u30d1\u30fc\u30b9\u3059\u308b\u3068\u3044\u3046\u3084\u308a\u304b\u305f\u3092\u3059\u308b\u3068\u3001\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u6fc0\u5897\u3057\u3001\u51e6\u7406\u3057\u304d\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u305d\u306e\u305f\u3081\u3001lxml.etree.iterparse\u3092\u7528\u3044\u3066\u3001\u9806\u6b21\u51e6\u7406\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u5b9f\u969b\u306e\u51e6\u7406\u3092\u307f\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```py:election_db.py\n    def ImportAdministrativeBoundary(self, xml):\n        f = None\n        contents = None\n        namespaces = {\n            'ksj': 'http://nlftp.mlit.go.jp/ksj/schemas/ksj-app',\n            'gml': 'http://www.opengis.net/gml/3.2',\n            'xlink': 'http://www.w3.org/1999/xlink',\n            'xsi': 'http://www.w3.org/2001/XMLSchema-instance'\n        }\n        self._conn.execute('begin')\n\n        print ('admins....')\n        context = etree.iterparse(xml, events=('end',), tag='{http://nlftp.mlit.go.jp/ksj/schemas/ksj-app}AdministrativeBoundary')\n        for event, admin in context:\n            adminId = admin.get('{http://www.opengis.net/gml/3.2}id')\n            print (adminId)\n            bounds = admin.find('ksj:bounds', namespaces=namespaces).get('{http://www.w3.org/1999/xlink}href')[1:]\n            prefectureName = admin.find('ksj:prefectureName', namespaces=namespaces).text\n            subPrefectureName = admin.find('ksj:subPrefectureName', namespaces=namespaces).text\n            countyName = admin.find('ksj:countyName', namespaces=namespaces).text\n            cityName = admin.find('ksj:cityName', namespaces=namespaces).text\n            areaCode = admin.find('ksj:administrativeAreaCode', namespaces=namespaces).text\n            sql = '''INSERT INTO administrative_boundary\n                     (gml_id, bounds, prefecture_name, sub_prefecture_name, county_name, city_name, area_code)\n                     VALUES(?, ?, ?, ?, ?, ?, ?);'''\n            self._conn.execute(sql, [adminId, bounds, prefectureName, subPrefectureName, countyName, cityName, areaCode ])\n\n            admin.clear()\n            # Also eliminate now-empty references from the root node to <Title> \n            while admin.getprevious() is not None:\n                del admin.getparent()[0]\n        del context\n```\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u56fd\u571f\u6570\u5024\u60c5\u5831\u3092\u89e3\u6790\u3057\u3066DB\u306b\u683c\u7d0d\u3057\u3066\u3044\u308b\u51e6\u7406\u306e\u4e00\u90e8\u3067\u3059\u3002\n\u3053\u306e\u4f8b\u3067\u306f\u3001etree.iterparse\u3092\u7528\u3044\u3066\u3001\u300cAdministrativeBoundary\u300d\u30bf\u30b0\u304c\u691c\u77e5\u3055\u308c\u308b\u305f\u3073\u306b\u3001\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u8a73\u7d30\u306f\u3001\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u53c2\u8003\u306b\u3059\u308b\u3068\u826f\u3044\u3067\u3059\u3002\n **lxml \u3092\u4f7f\u7528\u3057\u3066 Python \u3067\u306e XML \u69cb\u6587\u89e3\u6790\u3092\u30cf\u30a4\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306b\u3059\u308b** \nhttp://www.ibm.com/developerworks/jp/xml/library/x-hiperfparse/\n\n\n####\u5ea7\u6a19\u60c5\u5831\u3092\u9593\u5f15\u304f\n\u56fd\u571f\u6570\u5024\u30c7\u30fc\u30bf\u306f\u6b63\u78ba\u306a\u5ea7\u6a19\u60c5\u5831\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30b5\u30a4\u30ba\u304c\u5927\u304d\u304f\u306a\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u3056\u3063\u304f\u308a\u3057\u305f\u5ea7\u6a19\u304c\u308f\u304b\u308c\u3070\u3044\u3044\u306e\u3067\u3001\u305d\u306e\u60c5\u5831\u3092\u9593\u5f15\u304d\u307e\u3059\u3002\n\n\u7dda\u3092\u9593\u5f15\u304f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u3057\u3066\u306f\uff0cRamer-Douglas-Peucker\u3068\u3044\u3046\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u8aac\u660e\u306f\u4e0b\u8a18\u306e\u30da\u30fc\u30b8\u3092\u898b\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n **[Mathematica] \u6298\u308c\u7dda\u3092\u9593\u5f15\u304f** \nhttp://www.330k.info/essay/oresenwomabiku\n\nPython\u306e Ramer-Douglas-Peucker \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u306f\u4e0b\u8a18\u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\nhttps://pypi.python.org/pypi/rdp\n\n\n###\u5c0f\u9078\u6319\u533a\u306e\u60c5\u5831\u767b\u9332\n\u7dcf\u52d9\u7701\u306f\u4f8b\u306b\u3088\u3063\u3066\u4f8b\u306e\u3054\u3068\u304f\u3001\u5c0f\u9078\u6319\u533a\u306e\u60c5\u5831\u3092PDF\u3067\u3057\u304b\u516c\u958b\u3057\u3066\u304a\u308a\u307e\u305b\u3093\u3002\n\u306a\u306e\u3067\u3001\u9811\u5f35\u3063\u3066\u624b\u5165\u529b\u3059\u308b\u304b\u3001\u5225\u306e\u65b9\u6cd5\u3092\u305f\u3081\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u5c0f\u9078\u6319\u533a\u306e\u60c5\u5831\u304c\u610f\u5916\u3068\u30d5\u30a1\u30b8\u30fc\u306a\u611f\u3058\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u305f\u3068\u3048\u3070\u3001\u5ca9\u624b\u770c\u306e\u7b2c\u4e00\u533a\u3068\u7b2c\u4e8c\u533a\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nhttp://www.soumu.go.jp/main_content/000240041.pdf\n\n\u7b2c\u4e00\u533a\u3000\u76db\u5ca1\u5e02\uff08\u672c\u5e81\u7ba1\u5185\u3001\u76db\u5ca1\u5e02\u5f79\u6240\u9752\u5c71\u652f\u6240\u7ba1\u5185\u3001\u76db\u5ca1\u5e02\u5f79\u6240\u7c17\u5ddd\u652f\u6240\u7ba1\u5185\u3001\u76db\u5ca1\u5e02\u5f79\u6240\u592a\u7530\u652f\u6240\u7ba1\u5185\u3001\u76db\u5ca1\u5e02\u5f79\u6240\ue001\u652f\u6240\u7ba1\u5185\u3001\u76db\u5ca1\u5e02\u90fd\u5357\u7dcf\u5408\u652f\u6240\u7ba1\u5185\uff09\n\n\u7b2c\u4e8c\u533a\u3000\u76db\u5ca1\u5e02\uff08\u7b2c\u4e00\u533a\u306b\u5c5e\u3057\u306a\u3044\u533a\u57df\uff09\n\n\u3068\u3042\u308a\u307e\u3059\u3002\n\u5f53\u7136\u306e\u6a29\u5229\u306e\u3088\u3046\u306b\u3001\u672c\u5e81\u7ba1\u5185\u304c\u3069\u3053\u3092\u8868\u3059\u304b\u306e\u60c5\u5831\u306f\u3001\u3053\u3053\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u305d\u306e\u305f\u3081\u3001\u4eca\u56de\u306f\u3001\u76db\u5ca1\u5e02\u3060\u3063\u305f\u5834\u5408\u306f\u7b2c\u4e00\u533a\u3068\u7b2c\u4e8c\u533a\u304c\u5c0f\u9078\u6319\u533a\u306e\u5019\u88dc\u3068\u3057\u3066\u3042\u304c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u3053\u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u89e3\u6790\u3092\u3055\u305b\u306a\u3044\u3068\u3044\u3046\u5f37\u3044\u610f\u5fd7\u3092\u6301\u3063\u305f\u7dcf\u52d9\u7701\u306b\u5bfe\u3057\u3066\u546a\u8a5b\u3092\u5410\u304d\u306a\u304c\u3089\u4f5c\u6210\u3057\u305fCSV\u304c\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://github.com/mima3/analyze_election/blob/master/election_area.csv\n\n\n\u307e\u305f\u3001\u3053\u306e\u3042\u305f\u308a\u3067\u5fc3\u304c\u304a\u308c\u305f\u306e\u3067\u3001\u5019\u88dc\u8005\u306e\u60c5\u5831\u306b\u3064\u3044\u3066\u306f\u671d\u65e5\u65b0\u805e\u304b\u3089\u5f15\u3063\u5f35\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\n\u4e0b\u8a18\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3001\u305d\u308c\u3063\u307d\u3044\u30c7\u30fc\u30bf\u304c\u629c\u3051\u308b\u306e\u3067\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u624b\u3067\u76f4\u3057\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\nhttps://github.com/mima3/analyze_election/blob/master/script/analyze_asahi.py\n\n\n###\u73fe\u5728\u5730\u304b\u3089\u5c0f\u9078\u6319\u533a\u3092\u53d6\u5f97\u3059\u308b\u3002\n#### \u30d6\u30e9\u30a6\u30b6\u3067\u73fe\u5728\u5730\u3092\u53d6\u5f97\u3059\u308b\u3002\n\u30d6\u30e9\u30a6\u30b6\u3067\u73fe\u5728\u5730\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u3001navigator.geolocation\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u7d4c\u5ea6\u3001\u7def\u5ea6\u304c\u53d6\u5f97\u3067\u304d\u308b\u3067\u3057\u3087\u3046\u3002\n\n```js\nif (!navigator.geolocation) {\n  //Geolocation API\u3092\u5229\u7528\u3067\u304d\u306a\u3044\u74b0\u5883\u5411\u3051\u306e\u51e6\u7406\n  alert('GeolocateAPI\u304c\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093');\n}\nnavigator.geolocation.getCurrentPosition(function(position) {\n  console.log(position)\n}\n```\n\n\u306a\u304a\u3001IE\u306e\u5834\u5408\u3001\u73fe\u5728\u4f4d\u7f6e\u304c\u3001\u3072\u3069\u304f\u305a\u308c\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001Microsoft\u304c\u4f7f\u7528\u3057\u3066\u3044\u308b\u4f4d\u7f6e\u7528\u6cd5\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304cChrome\u3084Firefox\u304c\u5229\u7528\u3057\u3066\u3044\u308b\u4f4d\u7f6e\u60c5\u5831\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u7cbe\u5ea6\u304c\u60aa\u3044\u305f\u3081\u3060\u3068\u8003\u3048\u3089\u308c\u307e\u3059\u3002\uff08\u304a\u308c\u306f\u60aa\u304f\u306d\u30fc\uff01\u304a\u308c\u306f\u60aa\u304f\u306d\u30fc\uff01\uff09\nhttps://social.technet.microsoft.com/Forums/ie/en-US/aea4db4e-0720-44fe-a9b8-09917e345080/geolocation-wrong-in-ie9-but-not-other-browsers\n\n#### \u7279\u5b9a\u306e\u5ea7\u6a19\u304c\u884c\u653f\u533a\u57df\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u308b\u3002\n\u7279\u5b9a\u306e\u5ea7\u6a19\u304c\u884c\u653f\u533a\u57df\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u308b\u306b\u306f\u3001\u591a\u89d2\u5f62\u4e2d\u306b\u70b9\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u308b\u306e\u3068\u540c\u3058\u610f\u5473\u306b\u306a\u308a\u307e\u3059\u3002\nPython\u306e\u5834\u5408\u3001SymPy \u3067 \u70b9\u306e\u5185\u5916\u5224\u5b9a\u3092\u884c\u3048\u3070 **\u57fa\u672c\u7684** \u306b\u306f\u826f\u3044\u3067\u3059\u3002\n\n\n **[Python]SymPy \u3067 \u70b9\u306e\u5185\u5916\u5224\u5b9a** \nhttp://d.hatena.ne.jp/factal/20121013\n\n\u57fa\u672c\u7684\u306b\u306f\u3068\u8a00\u3063\u305f\u306e\u306f\u3001\u3053\u306e\u51e6\u7406\u304c\u304f\u3063\u305d\u9045\u3044\u304b\u3089\u3067\u3059\u3002\n\u6570\u4e07\u3042\u308b\u884c\u653f\u533a\u753b\u306b\u5bfe\u3057\u3066\u4e00\u3005\u3084\u3063\u3066\u3044\u305f\u306e\u3067\u306f\u6642\u9593\u304c\u304b\u304b\u308a\u3059\u304e\u3066\u3057\u3087\u3046\u304c\u306a\u3044\u3067\u3059\u3002\n\n\u3053\u306e\u305f\u3081\u306b\u3001\u3053\u3053\u3067\u306f\uff12\u3064\u306e\u5bfe\u7b56\u3092\u65bd\u3057\u307e\u3057\u305f\u3002\n\n\uff11\u3064\u76ee\u3001\u70b9\u306e\u5185\u5916\u5224\u5b9a\u3092\u884c\u3046\u524d\u306b\u3001\u5bfe\u8c61\u306e\u591a\u89d2\u5f62\u306e\u6570\u3092\u7d5e\u308b\u3002\n\u3053\u308c\u306f\u3001\u591a\u89d2\u5f62\u306e\u9802\u70b9\u3068\u6307\u5b9a\u306e\u70b9\u306e\u8ddd\u96e2\u304c\u3001\u3042\u308b\u7bc4\u56f2\u5185\u306b\u3042\u308b\u5834\u5408\u306e\u307f\u691c\u7d22\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5177\u4f53\u7684\u306b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\n```py:election_db.py\n    def GetPos(self, lat, long):\n        \"\"\"\n        \u73fe\u5728\u306e\u7d4c\u5ea6\u7def\u5ea6\u306b\u7d10\u3065\u304fcurve\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n        \"\"\"\n        m =0.005\n        while 1:\n            rows = self._getCurveId(lat, long, m).fetchall()\n            if rows:\n              break\n            m = m * 2\n            if m > 0.1:\n              return None\n\n        dict = {}\n        pt = Point(lat, long)\n\n        for r in rows:\n            key = r[0]\n            ret = self._isCrossCurveId(pt, key)\n            if ret:\n                return ret\n        return None\n```\n\n\uff12\u3064\u76ee\u3068\u3057\u3066\u3001\u3042\u3089\u304b\u3058\u3081Polygon\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u767b\u9332\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u88c5\u306b\u306a\u308a\u307e\u3059\u3002\n\n```py\n    def ConvertPoly(self):\n        \"\"\"\n        curve\u30c6\u30fc\u30d6\u30eb\u304b\u3089polygon\u306e\u4f5c\u6210\n        \"\"\"\n        #gc.enable()\n        #gc.set_debug(gc.DEBUG_LEAK)\n        sql = '''DELETE FROM polygon'''\n        self._conn.execute(sql)\n\n        sql = '''select curve_id,lat,lng from curve order by curve_id'''\n        rows = self._conn.execute(sql)\n        dict = {}\n        for r in rows:\n            key = r[0]\n            if dict.get(key) is None:\n                dict[key] = []\n            dict[key].append((r[1], r[2]))\n        i = 0\n        self.Commit()\n\n        self._conn.execute('begin')\n        for key in dict:\n            print (key + \":\" + str(i))\n            #b = len(gc.get_objects())\n            self._createPoly(key, dict[key])\n            i = i + 1\n            #gc.collect()\n            #print str(b) + \":\" + str(len(gc.get_objects()))\n            if i % 100 == 0:\n                clear_cache()\n                self.Commit()\n\n    def _createPoly(self, key, list):\n        poly = Polygon(*list)\n        obj = pickle.dumps(poly)\n        sql = '''INSERT INTO polygon\n                       (curve_id, object)\n                     VALUES(?, ?);'''\n        self._conn.execute(sql, [key, obj ])\n        del poly\n        del obj\n```\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306fpickle.dumps\u3092\u7528\u3044\u3066\u884c\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001sympy\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u69cb\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5927\u91cf\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3068\u30e1\u30e2\u30ea\u304c\u3059\u3050\u306b\u6570GByte\u6d88\u8cbb\u3055\u308c\u307e\u3059\u3002\n\u305d\u308c\u3092\u907f\u3051\u308b\u305f\u3081\u3001100\u500b\u4f5c\u6210\u3059\u308b\u305f\u3081\u3001clear_chache\u3092\u7528\u3044\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u524a\u9664\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u6700\u65b0\u306esympy\u306ePolygon\u3067\"Polygon has intersecting sides.\"\u3092\u4f8b\u5916\u3092\u51fa\u529b\u3059\u308b\u6761\u4ef6\u304c0.7.5\u30680.7.6\u3067\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n0.7.6\u3067\u306f\u6761\u4ef6\u304c\u53b3\u3057\u304f\u306a\u308a\u3001\u3053\u306e\u30c7\u30fc\u30bf\u3067\u306f\u6b63\u5e38\u306b\u4f5c\u6210\u3067\u304d\u306a\u3044\u3067\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001sympy\u306f0.7.5\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["Python2.7", "\u5730\u56f3"]}