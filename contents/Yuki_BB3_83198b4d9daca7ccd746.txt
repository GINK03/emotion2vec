{"context": "\n\n\u8abf\u3079\u305f\u5206\u8272\u3005\u8ffd\u8a18\u3057\u3066\u3044\u307e\u3059\n\n\u4f55\u304c\u3057\u305f\u304b\u3063\u305f\u306e\u304b\nDynamoDB\u3082\u306e\u3059\u3054\u3044\u4f7f\u3063\u3066\u308b\u3093\u3067\u3059\u304c\u3001\u751f\u306eSDK\u64cd\u4f5c\u3059\u308b\u3068\n{S: 'hogehoge'}\u3060\u3063\u305f\u308a\u6570\u5024\u306a\u306e\u306b{N:'10'}\u3060\u3063\u305f\u308a\u66f8\u304b\u306a\u304d\u3083\u3044\u3051\u306a\u304f\u3066\u3064\u3089\u3059\u304e\u308b\u306e\u3067\u8272\u3005\u8abf\u3079\u307e\u3057\u305f\u3002\n\u8272\u3005\u8a66\u3057\u305f\u3093\u3067\u3059\u304c\u3001SDK\u3067\u63d0\u4f9b\u3055\u308c\u3066\u308bDocumentClient\u306b\u623b\u3063\u3066\u6765\u3066\u3053\u3044\u3064\u304c\u4e00\u756a\u4f7f\u3044\u3084\u3059\u304b\u3063\u305f\u306e\u3067node\u3067Dynamo\u3044\u3058\u308b\u306a\u3089\u7d76\u5bfe\u4f7f\u3063\u305f\u307b\u3046\u304c\u30a4\u30a4\u3088\u3063\u3066\u304a\u8a71\u3067\u3059\u3002\nDynamo\u4f7f\u3046\u306a\u3089\u3053\u3053\u306b\u66f8\u3044\u3066\u6709\u308b\u3053\u3068\u3060\u3051\u3067\u304b\u306a\u308a\u306e\u3053\u3068\u304c\u30a4\u30b1\u308b\u306f\u305a\n\u52d5\u4f5c\u306fLambda\u3067\u3044\u3058\u3063\u3066\u308b\u306e\u3067Lambda\u52d5\u304b\u3057\u305f\u3068\u304d\u306e\u30bd\u30fc\u30b9\u3092\u305d\u306e\u307e\u307e\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u524d\u63d0\n\u8aac\u660e\u3067\u4f7f\u7528\u3059\u308bDyanamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\n\n\ntesi_1\n\n\u30d7\u30e9\u30a4\u30de\u30ea\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\uff1akey (\u6587\u5b57\u5217)\nage-index\uff08GSI) age(\u6570\u5024\uff09\n\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\n\n{ Item: { age: 14, key: 'Ranko_Kanzaki' } }\n\n\n\n\n\u5b9f\u884c\u30b5\u30f3\u30d7\u30eb\n\nGET\n\nindex.js\n\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\n  var params = {\n    TableName : 'test_1',\n    Key: {\n        'key': 'Ranko_Kanzaki'\n    }\n  };\n\n   docClient.get(params, function(err, data) {\n        if (err){\n            console.log(err);\n            context.succeed();\n        } else {\n            console.log(data);\n            context.succeed();\n        }\n    });\n};  \n\n\n\n\u623b\u308a\u5024\n{ Item: { age: 14, key: 'Ranko_Kanzaki' } }\n\n\nGET\u306f\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u306e\u5024\u3092\u6307\u5b9a\u3057\u3066\u3001\u305d\u306e\u30ad\u30fc\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n2016/11 \u8ffd\u52a0\n\nHash\u30ad\u30fc + \u30ec\u30f3\u30b8\u30ad\u30fc\u306e\u5834\u5408\n\u30ec\u30f3\u30b8\u30ad\u30fc\u304c\u308f\u304b\u3093\u306a\u3044\u3093\u3060\u3051\u3069\u3001\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u306b\u542b\u307e\u308c\u308b\u3082\u306e\u5168\u90e8\u51fa\u3057\u305f\u3044\u3068\u304d\u7528\n\u30ec\u30f3\u30b8\u30ad\u30fc\u306b\u5168\u90e8\u306e\u5834\u5408\u3092\u30ab\u30d0\u30fc\u3057\u5f97\u308b\u3082\u306e\u3092\u6307\u5b9a\u3059\u308c\u3070\u3044\u3044\u3002\n\n\u30ec\u30f3\u30b8\u30ad\u30fc\u306byyyymmdd\u5f62\u5f0f\u3067\u65e5\u4ed8\u3092\u5165\u308c\u3066\u3044\u308b\n\nparameter\n    var name = 'P'\n\n    dyparam = {\n        TableName : 'test_1',\n        KeyConditionExpression: \"#key1= :key1_name AND #key2  < :key2_name\",\n        ExpressionAttributeNames:{\n            \"#key1\": \"name\",\n            \"#key2\": \"yyyymmdd\"\n        },\n        ExpressionAttributeValues: {\n            \":key1_name\": name,\n            \":key2_name\": '99991231'\n        }\n    };\n\n\n\n\u30ec\u30f3\u30b8\u30ad\u30fc\u306byyyy\u304b\u3089\u59cb\u307e\u308b\u6587\u5b57\u5217\u304c\u5165\u3063\u3066\u308b\n\nparameter\n    var name = 'P'\n\n    dyparam = {\n        TableName : 'test_1',\n        KeyConditionExpression: \"#key1 = : key1_name AND begins_with(#key2, :key2_name)\",\n        ExpressionAttributeNames:{\n            \"#key1\": \"name\",\n            \"#key2\": \"yyyymmdd\"\n        },\n        ExpressionAttributeValues: {\n            \":key1_name\": name,\n            \":key2_name\": '19|20'\n        }\n    };\n\n\n1900\u5e74\u4ee3\u301c2000\u5e74\u53f0\u30ab\u30d0\u30fc\u3057\u3066\u304a\u3051\u3070\u3070\u3042\u30fb\u30fb\u30fb\u306d\u3002\n\nQUERY\n\nindex.js\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\n\n    var params = {\n        TableName : 'test_1',\n        KeyConditionExpression: \"#hash = :str\",\n        ExpressionAttributeNames:{\n            \"#hash\": \"key\"\n        },\n        ExpressionAttributeValues: {\n            \":str\": \"Takagaki_Kaede\"\n        }\n    };\n\n    docClient.query(params, function(err, data) {\n      if (err) {\n        console.log(err, err.stack);\n      } else {\n        console.log(data);\n      }\n    });\n}; \n\n\n\n\u623b\u308a\u5024\n{ Items: [ { comment: '\u4eca\u65e5\u306f\u30ef\u30a4\u30f3\u3060\u306a\u3063\u3066', age: 25, key: 'Takagaki_Kaede' } ],\n  Count: 1,\n  ScannedCount: 1 }\n\n\n\nKeyConditionExpression\u306b\u691c\u7d22\u5024\u306e\u5f0f\u3092\u66f8\u304d\u307e\u3059\nExpressionAttributeNames\u3067\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u307e\u3059\nExpressionAttributeValues\u3067\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u306e\u5024\u3092\u6307\u5b9a\u3057\u307e\u3059\n\n\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u7528\u3044\u305f\u691c\u7d22\n\nindex.js\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\nvar params = {\n  TableName: 'test_1',\n  IndexName: 'age-index',\n  KeyConditionExpression: '#rangeKey = :rkey',\n    ExpressionAttributeNames : {\n    \"#rangeKey\"  : 'age'\n  },\n  ExpressionAttributeValues: {\n    ':rkey': 14\n  }\n};\n\ndocClient.query(params, function(err, data) {\n  if (err) {\n    console.log(err, err.stack);\n  }else {\n    console.log(data);\n  }\n});\n}; \n\n\n\n\u623b\u308a\u5024\n{ Items: \n   [ { age: 14, key: 'Sachiko_Koshimizu' },\n     { comment: '\u81ea\u79f0 \u5929\u4f7f', age: 14, key: 'Ranko_Kanzaki' } ],\n  Count: 2,\n  ScannedCount: 2 }\n\n\n\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u7528\u3044\u305f\u691c\u7d22\u3067\u9805\u76ee\u3092\u6307\u5b9a\u3057\u3066\u7d5e\u308a\u8fbc\u3080\n\nindex.js\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\nvar params = {\n  TableName: 'test_1',\n  Key:{\n    \"comment\": '\u81ea\u79f0 \u5929\u4f7f'\n    },\n  IndexName: 'age-index',\n  KeyConditionExpression: '#rangeKey = :rkey',\n  ExpressionAttributeNames : {\n    \"#rangeKey\"  : 'age'\n  },\n  ExpressionAttributeValues: {\n    ':rkey': 14\n  }\n};\n\ndocClient.query(params, function(err, data) {\n  if (err) {\n    console.log(err, err.stack);\n  }else {\n    console.log(data);\n  }\n});\n}; \n\n\n\n\u623b\u308a\u5024\n{ Items: \n   [ { age: 14, key: 'Sachiko_Koshimizu' },\n     { comment: '\u81ea\u79f0 \u5929\u4f7f', age: 14, key: 'Ranko_Kanzaki' } ],\n  Count: 2,\n  ScannedCount: 2 }\n\n\n\u5e78\u5b50\u3060\u3051\u304c\u91e3\u308c\u307e\u3057\u305f\u3002\n\nPUT\n\nindex.js\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\n    var item = {\n           key: 'Mayu_Sakuma',\n           age: 16,\n           comment: '\u305a\u3063\u3068\u2026\u305a\u3063\u3068\u5f85\u3063\u3066\u305f\u306e\u2026'\n    };\n\n    var params = {\n        TableName: 'test_1',\n        Item: item\n    };\n\n    docClient.put(params, function (err, data) {\n        if (err) {\n            console.log(err);\n        } else {\n            console.log(data);\n        }\n    });\n};\n\n\n\n\u623b\u308a\u5024\n{}\n\n\n\u307e\u307e\u3086\u306b\u4f1a\u3048\u307e\u3057\u305f\n\nUPDATE\n\nindex.js\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\n\nvar params = {\n    TableName: 'test_1',\n    Key:{\n        \"key\": 'Nana_Abe'\n    },\n    UpdateExpression: \"set age = age + :val\",\n    ExpressionAttributeValues:{\n        \":val\":1\n    },\n    ReturnValues:\"UPDATED_NEW\"\n};\n\ndocClient.update(params, function (err, data) {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(data);\n    }\n});\n}; \n\n\n\n\u623b\u308a\u5024\n\u3000\u30ca\u30ca\u306f\u6c38\u9060\u306e\u3058\u3085\u3046\u306a\u306a\u3055\u3044\u3067\u3059\u30fb\u30fb\u30fb\n\n\n\n\u66f4\u65b0\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3002\u3002\u3002\n\u66f4\u65b0\u7528\u30c7\u30fc\u30bf\u306f\u6953\u3055\u3093\u304c\u98f2\u3093\u3060\u30d3\u30fc\u30eb\u306e\u6570\u306b\u3057\u3088\u3046\u3002\nGET\u3057\u307e\u3059\u3002\n\n\u623b\u308a\u5024\n{ Item: \n   { comment: '\u4eca\u65e5\u306f\u30ef\u30a4\u30f3\u3060\u306a\u3063\u3066',\n     beer_count: 9,\n     wine_count: 3,\n     key: 'Kaede_Takagaki',\n     age: 25 } }\n\n\n\n\nindex.js\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\n\nvar params = {\n    TableName: 'test_1',\n    Key:{\n        \"key\": 'Kaede_Takagaki'\n    },\n    UpdateExpression: \"set beer_count = beer_count + :val\",\n    ExpressionAttributeValues:{\n        \":val\":1\n    },\n    ReturnValues:\"UPDATED_NEW\"\n};\n\ndocClient.update(params, function (err, data) {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(data);\n    }\n});\n}; \n\n\n\n\u623b\u308a\u5024\n{ Attributes: { beer_count: 10 } }\n\n\n\n\n\u8ffd\u52a0\n\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u3068\u30ec\u30f3\u30b8\u30ad\u30fc\u3092\u6301\u3063\u3066\u3044\u308b\u5834\u5408\n\nsample\nvar params = {\n  TableName: 'test_1',\n  IndexName: 'age-index',\n  KeyConditionExpression: '#hashKey = :hkey AND #rangeKey = :rKey',\n    ExpressionAttributeNames : {\n    \"#hashKey\"   : 'name',\n    \"#rangeKey\"  : 'age'\n  },\n  ExpressionAttributeValues: {\n    ':hKey': 'Momoka-Sakurai',\n    ':rkey': 14\n  }\n};\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067AND\u691c\u7d22\u3057\u307e\u3059\n\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u7247\u65b9\u3069\u3046\u3057\u3066\u3082\u308f\u304b\u3093\u306a\u3044\u3093\u3060\u3051\u3069\u305d\u308c\u3067\u3082\u691c\u7d22\u3057\u305f\u3044\u5834\u5408\n\nsample\nvar params = {\n  TableName: 'test_1',\n  IndexName: 'age-index',\n  KeyConditionExpression: '#hashKey = :hkey AND #rangeKey > :rKey',\n    ExpressionAttributeNames : {\n    \"#hashKey\"   : 'name',\n    \"#rangeKey\"  : 'age'\n  },\n  ExpressionAttributeValues: {\n    ':hKey': 'Momoka-Sakurai',\n    ':rkey': 0\n  }\n};\n\n\n\u3053\u3093\u306a\u5177\u5408\u306b\u4f8b\u3048\u3070\u5e74\u9f62\u306a\u30890\u6b73\u4ee5\u4e0a\u3068\u304b\u306b\u3057\u3066\u304a\u3051\u3070\u30d2\u30c3\u30c8\u3059\u308b\u3057\n\u4f55\u304b\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u307f\u305f\u3044\u306a\u306e\u6301\u3063\u3066\u305f\u3089\n':rkey': '1|2|3|4|5'\n\n\u307f\u305f\u3044\u306b\u529b\u6280\u3063\u3066\u306e\u3082\u4e00\u5fdc\u53ef\u80fd\n\n\u65e2\u5b58\u306e\u9805\u76ee\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8ffd\u52a0\u3057\u305f\u3044\n2017/03/01\u8ffd\u52a0\nDynamoDB\u3067TTL\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u305d\u3093\u306a\u3068\u304d\u306b\n\nsample.js\nfunction updateDB(hashKey, unixTime) {\n    return new Promise((resolve, reject) => {\n        let params = {\n            TableName: 'test',\n            Key: {\n                \"hash\": hashKey\n            },\n            AttributeUpdates: {\n                ttl: {\n                    Action: 'ADD',\n                    Value: unixTime\n                }\n            },\n            Expected: {\n                hash: {\n                    Value: hashKey,\n                    Exists: true\n                }\n            },\n            ReturnValues: \"UPDATED_NEW\"\n        };\n        docClient.update(params, (err, data) => {\n            if (err) {\n                console.log(err);\n                reject(err);\n            } else {\n                console.log(data);\n                resolve();\n            }\n        });\n    });\n}\n\n// 24\u6642\u9593\u5f8c\nfunction unixTime() {\n    let date = new Date();\n    return Math.floor(date.getTime() / 1000) + 86400;\n}\n\n\n\n\u5b9f\u884c\n    updateDB('hogehoge', unixTime()).then(result => {\n        callback();\n    }).catch(err => {\n        console.log('[ERROR] update error: ', err);\n        callback(err);\n    });\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067 AttributeUpdates \u3092\u4f7f\u3063\u3066\u5236\u5fa1\u3057\u307e\u3059\u3002\nExpected \u3067\u5bfe\u8c61\u304c\u5b58\u5728\u3057\u305f\u5834\u5408\u306e\u307f\u51e6\u7406\u3092\u5b9f\u884c\u3057\u3001\u5bfe\u8c61\u304c\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\u69d8\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u53c2\u8003\nhttp://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/DynamoDB/DocumentClient.html#query-property\n## \u8abf\u3079\u305f\u5206\u8272\u3005\u8ffd\u8a18\u3057\u3066\u3044\u307e\u3059\n\n\n# \u4f55\u304c\u3057\u305f\u304b\u3063\u305f\u306e\u304b\nDynamoDB\u3082\u306e\u3059\u3054\u3044\u4f7f\u3063\u3066\u308b\u3093\u3067\u3059\u304c\u3001\u751f\u306eSDK\u64cd\u4f5c\u3059\u308b\u3068\n{S: 'hogehoge'}\u3060\u3063\u305f\u308a\u6570\u5024\u306a\u306e\u306b{N:'10'}\u3060\u3063\u305f\u308a\u66f8\u304b\u306a\u304d\u3083\u3044\u3051\u306a\u304f\u3066\u3064\u3089\u3059\u304e\u308b\u306e\u3067\u8272\u3005\u8abf\u3079\u307e\u3057\u305f\u3002\n\n\u8272\u3005\u8a66\u3057\u305f\u3093\u3067\u3059\u304c\u3001SDK\u3067\u63d0\u4f9b\u3055\u308c\u3066\u308bDocumentClient\u306b\u623b\u3063\u3066\u6765\u3066\u3053\u3044\u3064\u304c\u4e00\u756a\u4f7f\u3044\u3084\u3059\u304b\u3063\u305f\u306e\u3067node\u3067Dynamo\u3044\u3058\u308b\u306a\u3089\u7d76\u5bfe\u4f7f\u3063\u305f\u307b\u3046\u304c\u30a4\u30a4\u3088\u3063\u3066\u304a\u8a71\u3067\u3059\u3002\n\n__Dynamo\u4f7f\u3046\u306a\u3089\u3053\u3053\u306b\u66f8\u3044\u3066\u6709\u308b\u3053\u3068\u3060\u3051\u3067\u304b\u306a\u308a\u306e\u3053\u3068\u304c\u30a4\u30b1\u308b\u306f\u305a__\n\u52d5\u4f5c\u306fLambda\u3067\u3044\u3058\u3063\u3066\u308b\u306e\u3067Lambda\u52d5\u304b\u3057\u305f\u3068\u304d\u306e\u30bd\u30fc\u30b9\u3092\u305d\u306e\u307e\u307e\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u524d\u63d0\n\u8aac\u660e\u3067\u4f7f\u7528\u3059\u308bDyanamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\n\n- tesi_1\n\t- \u30d7\u30e9\u30a4\u30de\u30ea\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\uff1akey (\u6587\u5b57\u5217)\n\t- age-index\uff08GSI) age(\u6570\u5024\uff09\n\t- \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\n\t\n\t```\n\t{ Item: { age: 14, key: 'Ranko_Kanzaki' } }\n\t```\n\t\n# \u5b9f\u884c\u30b5\u30f3\u30d7\u30eb\n\n## GET\n\n```javascript:index.js\n\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\n  var params = {\n    TableName : 'test_1',\n    Key: {\n        'key': 'Ranko_Kanzaki'\n    }\n  };\n\n   docClient.get(params, function(err, data) {\n        if (err){\n            console.log(err);\n            context.succeed();\n        } else {\n            console.log(data);\n            context.succeed();\n        }\n    });\n};  \n```\n\n```:\u623b\u308a\u5024\n{ Item: { age: 14, key: 'Ranko_Kanzaki' } }\n```\n\nGET\u306f\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u306e\u5024\u3092\u6307\u5b9a\u3057\u3066\u3001\u305d\u306e\u30ad\u30fc\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n2016/11 \u8ffd\u52a0\n## Hash\u30ad\u30fc + \u30ec\u30f3\u30b8\u30ad\u30fc\u306e\u5834\u5408\n\u30ec\u30f3\u30b8\u30ad\u30fc\u304c\u308f\u304b\u3093\u306a\u3044\u3093\u3060\u3051\u3069\u3001\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u306b\u542b\u307e\u308c\u308b\u3082\u306e\u5168\u90e8\u51fa\u3057\u305f\u3044\u3068\u304d\u7528\n\u30ec\u30f3\u30b8\u30ad\u30fc\u306b\u5168\u90e8\u306e\u5834\u5408\u3092\u30ab\u30d0\u30fc\u3057\u5f97\u308b\u3082\u306e\u3092\u6307\u5b9a\u3059\u308c\u3070\u3044\u3044\u3002\n\n### \u30ec\u30f3\u30b8\u30ad\u30fc\u306byyyymmdd\u5f62\u5f0f\u3067\u65e5\u4ed8\u3092\u5165\u308c\u3066\u3044\u308b\n```javascript:parameter\n\tvar name = 'P'\n\t\n    dyparam = {\n        TableName : 'test_1',\n        KeyConditionExpression: \"#key1= :key1_name AND #key2  < :key2_name\",\n        ExpressionAttributeNames:{\n            \"#key1\": \"name\",\n            \"#key2\": \"yyyymmdd\"\n        },\n        ExpressionAttributeValues: {\n            \":key1_name\": name,\n            \":key2_name\": '99991231'\n        }\n    };\n```\n\n### \u30ec\u30f3\u30b8\u30ad\u30fc\u306byyyy\u304b\u3089\u59cb\u307e\u308b\u6587\u5b57\u5217\u304c\u5165\u3063\u3066\u308b\n```javascript:parameter\n\tvar name = 'P'\n\t\n    dyparam = {\n        TableName : 'test_1',\n        KeyConditionExpression: \"#key1 = : key1_name AND begins_with(#key2, :key2_name)\",\n        ExpressionAttributeNames:{\n            \"#key1\": \"name\",\n            \"#key2\": \"yyyymmdd\"\n        },\n        ExpressionAttributeValues: {\n            \":key1_name\": name,\n            \":key2_name\": '19|20'\n        }\n    };\n```\n1900\u5e74\u4ee3\u301c2000\u5e74\u53f0\u30ab\u30d0\u30fc\u3057\u3066\u304a\u3051\u3070\u3070\u3042\u30fb\u30fb\u30fb\u306d\u3002\n\n\n## QUERY\n\n```javascript:index.js\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\n\n    var params = {\n        TableName : 'test_1',\n        KeyConditionExpression: \"#hash = :str\",\n        ExpressionAttributeNames:{\n            \"#hash\": \"key\"\n        },\n        ExpressionAttributeValues: {\n            \":str\": \"Takagaki_Kaede\"\n        }\n    };\n\n    docClient.query(params, function(err, data) {\n      if (err) {\n        console.log(err, err.stack);\n      } else {\n        console.log(data);\n      }\n    });\n}; \n```\n\n```:\u623b\u308a\u5024\n{ Items: [ { comment: '\u4eca\u65e5\u306f\u30ef\u30a4\u30f3\u3060\u306a\u3063\u3066', age: 25, key: 'Takagaki_Kaede' } ],\n  Count: 1,\n  ScannedCount: 1 }\n```\n\n- KeyConditionExpression\u306b\u691c\u7d22\u5024\u306e\u5f0f\u3092\u66f8\u304d\u307e\u3059\n- ExpressionAttributeNames\u3067\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u306e\u540d\u524d\u3092\u6307\u5b9a\u3057\u307e\u3059\n- ExpressionAttributeValues\u3067\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u306e\u5024\u3092\u6307\u5b9a\u3057\u307e\u3059\n\n### \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u7528\u3044\u305f\u691c\u7d22\n\n```javascript:index.js\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\nvar params = {\n  TableName: 'test_1',\n  IndexName: 'age-index',\n  KeyConditionExpression: '#rangeKey = :rkey',\n    ExpressionAttributeNames : {\n    \"#rangeKey\"  : 'age'\n  },\n  ExpressionAttributeValues: {\n    ':rkey': 14\n  }\n};\n\ndocClient.query(params, function(err, data) {\n  if (err) {\n    console.log(err, err.stack);\n  }else {\n    console.log(data);\n  }\n});\n}; \n```\n\n```:\u623b\u308a\u5024\n{ Items: \n   [ { age: 14, key: 'Sachiko_Koshimizu' },\n     { comment: '\u81ea\u79f0 \u5929\u4f7f', age: 14, key: 'Ranko_Kanzaki' } ],\n  Count: 2,\n  ScannedCount: 2 }\n```\n\n### \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u7528\u3044\u305f\u691c\u7d22\u3067\u9805\u76ee\u3092\u6307\u5b9a\u3057\u3066\u7d5e\u308a\u8fbc\u3080\n\n```javascript:index.js\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\nvar params = {\n  TableName: 'test_1',\n  Key:{\n    \"comment\": '\u81ea\u79f0 \u5929\u4f7f'\n    },\n  IndexName: 'age-index',\n  KeyConditionExpression: '#rangeKey = :rkey',\n  ExpressionAttributeNames : {\n    \"#rangeKey\"  : 'age'\n  },\n  ExpressionAttributeValues: {\n    ':rkey': 14\n  }\n};\n\ndocClient.query(params, function(err, data) {\n  if (err) {\n    console.log(err, err.stack);\n  }else {\n    console.log(data);\n  }\n});\n}; \n```\n\n```:\u623b\u308a\u5024\n{ Items: \n   [ { age: 14, key: 'Sachiko_Koshimizu' },\n     { comment: '\u81ea\u79f0 \u5929\u4f7f', age: 14, key: 'Ranko_Kanzaki' } ],\n  Count: 2,\n  ScannedCount: 2 }\n```\n\n\u5e78\u5b50\u3060\u3051\u304c\u91e3\u308c\u307e\u3057\u305f\u3002\n\n## PUT\n\n```javascript:index.js\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\n    var item = {\n           key: 'Mayu_Sakuma',\n           age: 16,\n           comment: '\u305a\u3063\u3068\u2026\u305a\u3063\u3068\u5f85\u3063\u3066\u305f\u306e\u2026'\n    };\n\n    var params = {\n        TableName: 'test_1',\n        Item: item\n    };\n\n    docClient.put(params, function (err, data) {\n        if (err) {\n            console.log(err);\n        } else {\n            console.log(data);\n        }\n    });\n};\n```\n\n```:\u623b\u308a\u5024\n{}\n```\n\n\u307e\u307e\u3086\u306b\u4f1a\u3048\u307e\u3057\u305f\n\n\n## UPDATE\n\n```javascript:index.js\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\n\nvar params = {\n    TableName: 'test_1',\n    Key:{\n        \"key\": 'Nana_Abe'\n    },\n    UpdateExpression: \"set age = age + :val\",\n    ExpressionAttributeValues:{\n        \":val\":1\n    },\n    ReturnValues:\"UPDATED_NEW\"\n};\n\ndocClient.update(params, function (err, data) {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(data);\n    }\n});\n}; \n```\n\n```:\u623b\u308a\u5024\n\u3000\u30ca\u30ca\u306f\u6c38\u9060\u306e\u3058\u3085\u3046\u306a\u306a\u3055\u3044\u3067\u3059\u30fb\u30fb\u30fb\n```\n\n# \u66f4\u65b0\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3002\u3002\u3002\n\n\u66f4\u65b0\u7528\u30c7\u30fc\u30bf\u306f\u6953\u3055\u3093\u304c\u98f2\u3093\u3060\u30d3\u30fc\u30eb\u306e\u6570\u306b\u3057\u3088\u3046\u3002\nGET\u3057\u307e\u3059\u3002\n\n```:\u623b\u308a\u5024\n{ Item: \n   { comment: '\u4eca\u65e5\u306f\u30ef\u30a4\u30f3\u3060\u306a\u3063\u3066',\n     beer_count: 9,\n     wine_count: 3,\n     key: 'Kaede_Takagaki',\n     age: 25 } }\n\n```\n\n\n```javascript:index.js\n'use strict';\n\nvar aws = require('aws-sdk');\nvar docClient = new aws.DynamoDB.DocumentClient({region: 'ap-northeast-1'});\n\nexports.handler = function (event, context) {\n\nvar params = {\n    TableName: 'test_1',\n    Key:{\n        \"key\": 'Kaede_Takagaki'\n    },\n    UpdateExpression: \"set beer_count = beer_count + :val\",\n    ExpressionAttributeValues:{\n        \":val\":1\n    },\n    ReturnValues:\"UPDATED_NEW\"\n};\n\ndocClient.update(params, function (err, data) {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(data);\n    }\n});\n}; \n```\n\n```:\u623b\u308a\u5024\n{ Attributes: { beer_count: 10 } }\n```\n\n---\n\n# \u8ffd\u52a0\n## \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u30cf\u30c3\u30b7\u30e5\u30ad\u30fc\u3068\u30ec\u30f3\u30b8\u30ad\u30fc\u3092\u6301\u3063\u3066\u3044\u308b\u5834\u5408\n\n```javascript:sample\nvar params = {\n  TableName: 'test_1',\n  IndexName: 'age-index',\n  KeyConditionExpression: '#hashKey = :hkey AND #rangeKey = :rKey',\n    ExpressionAttributeNames : {\n    \"#hashKey\"   : 'name',\n    \"#rangeKey\"  : 'age'\n  },\n  ExpressionAttributeValues: {\n    ':hKey': 'Momoka-Sakurai',\n    ':rkey': 14\n  }\n};\n```\n\u3053\u3093\u306a\u611f\u3058\u3067AND\u691c\u7d22\u3057\u307e\u3059\n\n## \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u7247\u65b9\u3069\u3046\u3057\u3066\u3082\u308f\u304b\u3093\u306a\u3044\u3093\u3060\u3051\u3069\u305d\u308c\u3067\u3082\u691c\u7d22\u3057\u305f\u3044\u5834\u5408\n\n```javascript:sample\nvar params = {\n  TableName: 'test_1',\n  IndexName: 'age-index',\n  KeyConditionExpression: '#hashKey = :hkey AND #rangeKey > :rKey',\n    ExpressionAttributeNames : {\n    \"#hashKey\"   : 'name',\n    \"#rangeKey\"  : 'age'\n  },\n  ExpressionAttributeValues: {\n    ':hKey': 'Momoka-Sakurai',\n    ':rkey': 0\n  }\n};\n```\n\n\u3053\u3093\u306a\u5177\u5408\u306b\u4f8b\u3048\u3070\u5e74\u9f62\u306a\u30890\u6b73\u4ee5\u4e0a\u3068\u304b\u306b\u3057\u3066\u304a\u3051\u3070\u30d2\u30c3\u30c8\u3059\u308b\u3057\n\u4f55\u304b\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u307f\u305f\u3044\u306a\u306e\u6301\u3063\u3066\u305f\u3089\n\n```javascript:\n':rkey': '1|2|3|4|5'\n```\n\u307f\u305f\u3044\u306b\u529b\u6280\u3063\u3066\u306e\u3082\u4e00\u5fdc\u53ef\u80fd\n\n## \u65e2\u5b58\u306e\u9805\u76ee\u306b\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u8ffd\u52a0\u3057\u305f\u3044\n2017/03/01\u8ffd\u52a0\nDynamoDB\u3067TTL\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u305d\u3093\u306a\u3068\u304d\u306b\n\n```javascript:sample.js\nfunction updateDB(hashKey, unixTime) {\n    return new Promise((resolve, reject) => {\n        let params = {\n            TableName: 'test',\n            Key: {\n                \"hash\": hashKey\n            },\n            AttributeUpdates: {\n                ttl: {\n                    Action: 'ADD',\n                    Value: unixTime\n                }\n            },\n            Expected: {\n                hash: {\n                    Value: hashKey,\n                    Exists: true\n                }\n            },\n            ReturnValues: \"UPDATED_NEW\"\n        };\n        docClient.update(params, (err, data) => {\n            if (err) {\n                console.log(err);\n                reject(err);\n            } else {\n                console.log(data);\n                resolve();\n            }\n        });\n    });\n}\n\n// 24\u6642\u9593\u5f8c\nfunction unixTime() {\n    let date = new Date();\n    return Math.floor(date.getTime() / 1000) + 86400;\n}\n```\n\n```javascript:\u5b9f\u884c\n    updateDB('hogehoge', unixTime()).then(result => {\n        callback();\n    }).catch(err => {\n        console.log('[ERROR] update error: ', err);\n        callback(err);\n    });\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067 __AttributeUpdates__ \u3092\u4f7f\u3063\u3066\u5236\u5fa1\u3057\u307e\u3059\u3002\n__Expected__ \u3067\u5bfe\u8c61\u304c\u5b58\u5728\u3057\u305f\u5834\u5408\u306e\u307f\u51e6\u7406\u3092\u5b9f\u884c\u3057\u3001\u5bfe\u8c61\u304c\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u30a8\u30e9\u30fc\u3092\u8fd4\u3059\u69d8\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\n# \u53c2\u8003\nhttp://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/DynamoDB/DocumentClient.html#query-property\n", "tags": ["Node.js", "AWS", "DynamoDB"]}