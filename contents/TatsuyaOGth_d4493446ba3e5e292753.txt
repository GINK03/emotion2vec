{"tags": ["openFrameworks", "OpenCV"], "context": "openFrameworks\uff08\u4ee5\u4e0boF\uff09\u3067OpenCV\u3068\u3044\u3048\u3070ofxOpenCv\u3084kylemacdonald\u3055\u3093\u306eofxCv\u304c\u3042\u308a\u307e\u3059\u304c\uff0c\u7d30\u304b\u3044\u30c7\u30fc\u30bf\u3092\u53d6\u308d\u3046\u3068\u3059\u308b\u3068\u3053\u3046\uff0c\u75d2\u3044\u6240\u306b\u624b\u304c\u5c4a\u304b\u306a\u3044\u3068\u3044\u3046\u304b\uff0c\u3084\u306f\u308a\u4e07\u5168\u3067\u306f\u306a\u3044\u3068\u3044\u3048\u307e\u3059\uff0e\n\u305d\u3082\u305d\u3082OpenCV\u306fC/C++\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3060\u3057\uff0c\u3084\u306f\u308a\u500b\u5225\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u95a2\u6570\u3067\u3057\u304b\u3067\u304d\u306a\u3044\u3088\u3046\u306a\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\u3068\u304f\u306b\u6700\u65b0\u306eOpenCV3.x\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u305d\u306e\u65b9\u304c\u30b9\u30de\u30fc\u30c8\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\uff0e\n\u3068\u3044\u3046\u308f\u3051\u3067\uff0coF\u306e\u958b\u767a\u74b0\u5883\u306bOpenCV3\u3092\u5c0e\u5165\u3059\u308b\u65b9\u6cd5\u3092\u8ff0\u3079\u307e\u3059\uff0e\n\u203b OpenCV3\u3068\u3042\u308a\u307e\u3059\u304c\uff0c\u5225\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3082\u30e9\u30a4\u30d6\u30e9\u30ea\u540d\u306a\u3069\u304c\u9055\u3063\u3066\u3082\u540c\u3058\u611f\u3058\u3067\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u5b9f\u884c\u74b0\u5883\n\nMac OSX11.6\n\nXcode 7.3.1\nopenFrameworks 0.9.3\nOpenCV 3.1\uff08Homebrew\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff09\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nOpenCV\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30d3\u30eb\u30c9\u3059\u308b\n\u3069\u3046\u3044\u3046\u65b9\u6cd5\u3067\u3082\u3044\u3044\u3067\u3059\u304c\uff0c\u81ea\u5206\u306e\u5834\u5408\u306fHomebrew\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\uff0eHomebrew\u304c\u5165\u3063\u3066\u3044\u308c\u3070\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u3053\u3046\u3044\u3046\u611f\u3058\u3067\u3059\u2193\n% brew install homebrew/science/opencv3   \n\n\u8a73\u3057\u3044\u3084\u308a\u65b9\u306f\u65e2\u306b\u4ed6\u306b\u8aac\u660e\u304c\u591a\u3044\u3068\u601d\u3046\u306e\u3067\u7701\u7565\u3057\u307e\u3059\uff0e\n\n\u74b0\u5883\u8a2d\u5b9a\uff08Xcode\uff09\n\noF\u306e\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\nv0.8.0\u4ee5\u964d\u304b\u3089\u306fProjectGenerator\u3067\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\u306d\uff0e\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\uff0cofxOpenCv\u3068\u304bofxCv\u306a\u3069\u306eOpenCV\u30e9\u30c3\u30d1\u30fc\u7cfb\u30a2\u30c9\u30aa\u30f3\u3092\u5165\u308c\u3061\u3083\u3046\u3068\u5909\u306b\u5e72\u6e09\u3057\u3061\u3083\u3046\u6050\u308c\u304c\u3042\u308a\u307e\u3059\uff0e\u3061\u3083\u3093\u3068\u8a66\u3057\u3066\u306f\u3044\u307e\u305b\u3093\u304c...\n\u3053\u308c\u3089\u306e\u30a2\u30c9\u30aa\u30f3\u306f\u78ba\u304b\u306b\u4f7f\u3044\u3084\u3059\u304f\u3066\u4fbf\u5229\u3067\u3059\u304c\uff0c\u305b\u3063\u304b\u304f\u30aa\u30ea\u30b8\u30ca\u30eb\u306eOpenCV\u3092\u4f7f\u3046\u306e\u3067\u3059\u304b\u3089\uff0c\u3053\u3053\u306f\u6e05\u304f\u30e9\u30c3\u30d1\u30fc\u306b\u983c\u3089\u306a\u3044\u65b9\u5411\u3067\u884c\u304d\u307e\u3057\u3087\u3046\uff0e\n\n\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d1\u30b9\u3092\u8ffd\u52a0\u3059\u308b\nXcode\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d1\u30b9\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305fOpenCV3\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\u666e\u901a\u306b\u8ffd\u52a0\u3057\u3066\u3082\u3044\u3044\u3067\u3059\u304c\uff0coF\u306eXcode\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 \"Project.xcconfig\" \u3068\u3044\u3046\u306e\u304c\u4ed8\u3044\u3066\u307e\u3059\u306e\u3067\uff0c\u30eb\u30fc\u30c8\u307e\u3067\u306e\u30d1\u30b9\u306f\u3053\u3053\u306b\u8ffd\u52a0\u3057\u305f\u307b\u3046\u304c\u4f55\u304b\u3068\u3044\u3044\u3067\u3059\uff0e\n\n\u2191\u3053\u3046\u3044\u3046\u611f\u3058\u3067\u77e2\u5370\u306e\u3068\u3053\u308d\u306b\u884c\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\nProject.xcconfig\n//OpenCV3\nOPENCV_PATH = /usr/local/Cellar/opencv3/3.1.0_3\n\n\n\u3061\u306a\u307f\u306b\u81ea\u5206\u307f\u305f\u3044\u306bHomebrew\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u5834\u5408\u306f\u4e0a\u306e\u3088\u3046\u306b/usr/local/Cellar/opencv3\u306e\u5f8c\u306b\u7d9a\u304f\u30d0\u30fc\u30b8\u30e7\u30f3\u6bce\u306b\u5206\u3051\u3089\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u30eb\u30fc\u30c8\u30d1\u30b9\u306b\u306a\u308a\u307e\u3059\uff0e\n\"3.1.0_3\" \u306e\u3068\u3053\u308d\u306f\u3082\u3061\u308d\u3093\u81ea\u5206\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3082\u306e\u3067\u4f7f\u3044\u305f\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u66f8\u3044\u3066\u4e0b\u3055\u3044\uff0e\n\u3053\u3046\u3059\u308b\u3068\u4f55\u304c\u5b09\u3057\u3044\u304b\u3068\u3044\u3046\u3068\uff0c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u306e\u65b9\u3067\u3053\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\u4e0a\u306e\u753b\u50cf\u3067\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u306e \"Build Settings > Header Search Paths\"\u306bOpenCV3\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u8ffd\u52a0\u3057\u3066\u307e\u3059\uff0e\n\u8981\u3059\u308b\u306b $(OPENCV_PATH) \u306e\u90e8\u5206\u304c\u5148\u307b\u3069\u66f8\u3044\u305f\u30eb\u30fc\u30c8\u30d1\u30b9\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\uff0e\n\u305f\u3063\u305f\uff11\u884c\u8ffd\u52a0\u3059\u308b\u3060\u3051\u306a\u3089\u5225\u306b\u3044\u3044\u3093\u3067\u3059\u304c\uff0c\u3053\u306e\u3042\u3068\u5927\u91cf\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3078\u306e\u30d1\u30b9\u3092\u8ffd\u52a0\u3059\u308b\u306e\u3067\u3053\u3046\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3068\u3044\u3046\u308f\u3051\u3067\u3059\uff0e\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8ffd\u52a0\u3059\u308b\n\u6b21\u306b\uff0cOpenCV3\u306e\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30e9\u30a4\u30d6\u30e9\u30ea\uff08.dylib\uff09\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u306e \"Build Settings > Other Linker Flags\" \u306b\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\n\u5225\u306b\u5168\u90e8\u8ffd\u52a0\u3057\u306a\u304f\u3066\u3082\u5fc5\u8981\u306a\u3084\u3064\u304c\u5206\u304b\u3063\u3066\u3044\u308c\u3070\u305d\u308c\u3060\u3051\u3067\u3044\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\u307e\u305f\uff0cOther Linker Flags\u306b\u30d1\u30b9\u3092\u66f8\u304f\u4ee5\u5916\u306b\uff0c\"Build Phases > Link Binary With Libraries\"\u306b\u8ffd\u52a0\u3057\u3066\u3082\u884c\u3051\u307e\u3059\u304c\uff0c\u5f8c\u3005OpenCV\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5909\u66f4\u3057\u305f\u3044\u6642\u306b\u9762\u5012\u306a\u306e\u3067\uff0c\u3053\u3053\u306b\u66f8\u304f\u65b9\u6cd5\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\uff0e\n\u672c\u5f53\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5909\u66f4\u3057\u305f\u3044\u3068\u304d\u306f\u5148\u307b\u3069Project.xcconfig\u306b\u8ffd\u52a0\u3057\u305fOPENCV_PATH\u3092\u4fee\u6b63\u3059\u308b\u3060\u3051\u3067\u6e08\u307f\u307e\u3059\uff0e\n\u3061\u306a\u307f\u306b\u5225\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306eOpenCV\u3067\u306f\u4e0a\u8a18\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u540d\u524d\u306a\u3069\u3044\u308d\u3044\u308d\u9055\u3046\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u78ba\u304b\u3081\u3066\u89b3\u3066\u4e0b\u3055\u3044\uff0eOpenCV3.x\u3067\u3042\u308c\u3070\u753b\u50cf\u306e\u901a\u308a\u3067\u305f\u3076\u3093OK\u3067\u3059\uff0e\n\n\u30c6\u30b9\u30c8\nofApp.h \u306b\u306a\u3093\u3067\u3082\u3044\u3044\u306e\u3067OpenCV\u306e\u4f55\u304b\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0e\u4f8b\u3048\u3070\u2193\n\nofApp.h\n#include <opencv2/core.hpp>\n#include <opencv2/imgproc.hpp>\n\n\n\u5b9f\u884c\u3067\u304d\u308c\u3070\u74b0\u5883\u8a2d\u5b9a\u306f\u305f\u3076\u3093OK\u3067\u3059\uff0e\n\n\u30aa\u30ea\u30b8\u30ca\u30eb\u306eOpenCV\u3092oF\u3067\u4f7f\u3044\u3084\u3059\u304f\u3059\u308b\n\nofPixels\u304b\u3089cv::Mat\u3078\u306e\u5909\u63db\nOpenCV\u3067\u753b\u50cf\u3092\u6271\u3046\u6642\u306fcv::Mat\u3092\u4f7f\u3044\u307e\u3059\uff0e\u4e00\u65b9oF\u3067\u306fofPixels\u304c\u4f7f\u308f\u308c\u307e\u3059\uff0e\n\u203bofImage\u3082\u30c7\u30fc\u30bf\u306e\u5b9f\u4f53\u306fofImage\u306e\u4e2d\u306b\u3042\u308bofPixels\u304c\u6301\u3063\u3066\u3044\u307e\u3059\uff0e\n\u306a\u306e\u3067\uff0cOpenCV\u306e\u5404\u95a2\u6570\u3067\u3044\u308d\u3044\u308d\u3084\u308a\u305f\u3044\u3068\u304d\u306f\u5426\u304c\u5fdc\u3067\u3082cv::Mat\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u51fa\u3066\u304d\u307e\u3059\uff0e\n\u3068\u3044\u3046\u308f\u3051\u3067\uff0c\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3092\u8003\u3048\u307e\u3059\uff0e\n\n\u5143\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u3092ofImage::load()\u3067\u884c\u3046\uff0e\n\u5143\u753b\u50cf\u3068\u540c\u3058\u30b5\u30a4\u30ba\u3067\u4efb\u610f\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u30fb\u6df1\u5ea6\u306e\u51fa\u529b\u753b\u50cf\uff08e.g. ofImage, ofPixels..\uff09\u3092\u7528\u610f\u3059\u308b\uff0e\n\u305d\u308c\u3089\u3092cv::Mat\u306b\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u305b\u305a\u306b\u5909\u63db\u3059\u308b\uff0e\n\u5909\u63db\u3055\u308c\u305fcv::Mat\u3092\u4f7f\u3063\u3066OpenCV\u306e\u95a2\u6570\u3067\u3044\u308d\u3044\u308d\u3084\u308b\uff0e\n\u305d\u3046\u3059\u308b\u3068\u6700\u521d\u306b\u7528\u610f\u3057\u305f\u51fa\u529b\u753b\u50cf\u306e\u4e2d\u8eab\u3082\u66f4\u65b0\u3055\u308c\u308b\u306e\u3067\uff0c\u305d\u306e\u307e\u307e\u4f7f\u3046\n\n\u30dd\u30a4\u30f3\u30c8\u306f\uff13\u756a\u76ee\u306e\u300c\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u305b\u305a\u306b\u300d\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u3059\uff0e\u3068\u3044\u3063\u3066\u3082cv::Mat\u3082ofPixels\u3082\u4e2d\u306b\u753b\u7d20\u30c7\u30fc\u30bf\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u305d\u308c\u3092\u6e21\u3059\u3060\u3051\u3067\u3059\uff0e\n\u5b9f\u306f\u65e2\u306bkylemacdonald\u3055\u3093\u304cofxCv\u306etoCv()\u95a2\u6570\u3067\u540c\u3058\u3053\u3068\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u306e\u3067\uff0c\u305d\u308c\u3092\u53c2\u8003\u306b\u4ee5\u4e0b\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\ntemplate <typename T>\nstatic cv::Mat toCv(ofPixels_<T>& pix)\n{\n    int depth;\n    switch(pix.getBytesPerChannel())\n    {\n        case 4: depth = CV_32F;\n        case 2: depth = CV_16U;\n        case 1: default: depth = CV_8U;\n    }\n    return cv::Mat(pix.getHeight(), pix.getWidth(), CV_MAKETYPE(depth, pix.getNumChannels()), pix.getData(), 0);\n}\n\n\n\u3053\u308c\u3092\u3069\u3053\u304b\u306b\u66f8\u3044\u3066\u304a\u3051\u3070ofPixels\u304b\u3089cv::Mat\u306b\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u305b\u305a\u306b\u5909\u63db\u3067\u304d\u307e\u3059\uff0e\n\u3061\u306a\u307f\u306b\uff0coF\u306eofPixels\u4ee5\u5916\u306b\u3082\uff0cofFloatPixels\uff0cofShortPixels\uff08\u305d\u308c\u305e\u308cunsigned char, unsigned short, float\u3068\u3057\u3066\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\uff09\u3092\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\u3053\u308c\u3089\u306fcv::Mat\u3067\u306f\u6df1\u5ea6CV_8U, CV_16U, CV_32F\u306b\u5bfe\u5fdc\u3057\u307e\u3059\uff0e\n\u4f7f\u3044\u65b9\u306f\u3053\u3046\u3067\u3059\u2193\n\nofImage srcImg; //!< \u5143\u753b\u50cf\nofImage dstImg; //!< \u51fa\u529b\u753b\u50cf\n\n// \u5143\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u3068\u51fa\u529b\u753b\u50cf\u306e\u30e1\u30e2\u30ea\u78ba\u4fdd\nsrcImg.load(\"test.png\");\ndstImg.allocate(srcImg.getWidth(), srcImg.getHeight(), OF_IMAGE_GRAYSCALE); //<--- \u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u306a\u3069\u306f\u51fa\u529b\u753b\u50cf\u306b\u3042\u308f\u305b\u308b\n\n// \u305d\u308c\u305e\u308c\u3092cv::Mat\u306b\u5909\u63db\ncv::Mat srcMat = toCv(srcImg);\ncv::Mat dstMat = toCv(dstImg);\n\n////////////////////////////\n/*\n * OpenCV\u3067\u3092\u3044\u308d\u3044\u308d\u51e6\u7406\u3059\u308b\uff08srcMat\u3092\u4f7f\u3063\u3066dstMat\u3092\u66f4\u65b0\u3059\u308b\uff09\n */\n////////////////////////////\n\n// \u63cf\u753b\u3059\u308b\u305f\u3081\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u66f4\u65b0\uff08ofImage::update()\u3092\u547c\u3073\u307e\u3059\uff09\ndstImg.update();\n\n// \u753b\u50cf\u63cf\u753b\nsrcImg.draw(0, 0);\ndstImg.draw(srcImg.getWidth(), 0);\n\n\n\n\n\u305d\u306e\u4ed6\u306eoF<=>OpenCV\u5909\u63db\n\u753b\u50cf\u4ee5\u5916\u306b\u3082oF\u3068OpenCV\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5909\u63db\u304c\u3067\u304d\u308c\u3070\u4fbf\u5229\u3067\u3059\uff0e\u4f8b\u3048\u3070ofPolyline\u3092vector<cv::Point2f>\u306b\u3057\u305f\u308a\uff0cofVec2f\u3092cv::Point2f\u306b\u3057\u305f\u308a\uff0cofRectangle\u3092cv::Rect\u306b\u3057\u305f\u308a\u3068\u304b\uff0e\uff0e\n\u3067\u3059\u304c\uff0c\u305d\u306e\u8fba\u3082\u3044\u304f\u3064\u304b\u306fkyle\u3055\u3093\u306eofxCv\u306b\u65e2\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3057\uff0c\u3068\u304f\u306b\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u3042\u308b\u95a2\u6570\u3092\u305d\u306e\u307e\u307e\u30b3\u30d4\u30fc\u3057\u3066\u4f7f\u3046\u306e\u304c\u624b\u3063\u53d6\u308a\u65e9\u305d\u3046\u3067\u3059\uff0e\n\u4f7f\u3044\u3084\u3059\u305d\u3046\u306a\u3082\u306e\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\uff08\u307b\u3068\u3093\u3069\u30b3\u30d4\u30da\u3067\u3059\u304c\uff09\n\n//----------\n// oF\u578b => OpenCV\u578b\u3078\u306e\u5909\u63db\n//----------\n\ncv::Point2f toCv(ofVec2f vec)\n{\n    return cv::Point2f(vec.x, vec.y);\n}\n\ncv::Point3f toCv(ofVec3f vec)\n{\n    return cv::Point3f(vec.x, vec.y, vec.z);\n}\n\ncv::Rect toCv(ofRectangle rect)\n{\n    return cv::Rect(rect.x, rect.y, rect.width, rect.height);\n}\n\ncv::Mat toCv(ofMesh& mesh)\n{\n    vector<ofVec3f>& vertices = mesh.getVertices();\n    return cv::Mat(1, vertices.size(), CV_32FC3, &vertices[0]);\n}\n\nvector<cv::Point2f> toCv(const ofPolyline& polyline)\n{\n    // if polyline.getVertices() were const, this could wrap toCv(vec<vec2f>)\n    vector<cv::Point2f> contour(polyline.size());\n    for(int i = 0; i < polyline.size(); i++) {\n        contour[i].x = polyline[i].x;\n        contour[i].y = polyline[i].y;\n    }\n    return contour;\n}\n\nvector<cv::Point2f> toCv(const vector<ofVec2f>& points)\n{\n    vector<cv::Point2f> out(points.size());\n    for(int i = 0; i < points.size(); i++) {\n        out[i].x = points[i].x;\n        out[i].y = points[i].y;\n    }\n    return out;\n}\n\nvector<cv::Point3f> toCv(const vector<ofVec3f>& points)\n{\n    vector<cv::Point3f> out(points.size());\n    for(int i = 0; i < points.size(); i++) {\n        out[i].x = points[i].x;\n        out[i].y = points[i].y;\n        out[i].z = points[i].z;\n    }\n    return out;\n}\n\ncv::Scalar toCv(ofColor color)\n{\n    return cv::Scalar(color.r, color.g, color.b, color.a);\n}\n\n\n\n//----------\n// OpenCV\u578b => oF\u578b\u3078\u306e\u5909\u63db\n//----------\n\nofVec2f toOf(cv::Point2f point)\n{\n    return ofVec2f(point.x, point.y);\n}\n\nofVec3f toOf(cv::Point3f point)\n{\n    return ofVec3f(point.x, point.y, point.z);\n}\n\nofRectangle toOf(cv::Rect rect)\n{\n    return ofRectangle(rect.x, rect.y, rect.width, rect.height);\n}\n\n\n\u305f\u3060\u3057\uff0c\u3053\u308c\u3089\u306f\u5148\u306b\u8ff0\u3079\u305f\u753b\u50cf\u306e\u5909\u63db\u3068\u9055\u3063\u3066\u5024\u3092\u30b3\u30d4\u30fc\u3057\u3066\u5909\u63db\u3059\u308b\u3057\u304b\u306a\u3044\u306e\u3067\uff0c\u305d\u3053\u3060\u3051\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u4ee5\u4e0b\u306boF\uff08v0.9.3\uff09\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\uff0eXcode\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\uff08Version7\uff09\u3082\u5165\u3063\u3066\u308b\u306e\u3067\u74b0\u5883\u69cb\u7bc9\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u3068\u601d\u3044\u307e\u3059\uff0e\nhttps://github.com/TatsuyaOGth/OpenCV3_on_oF_example\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nutils.h\n\n#pragma once\n\n#include \"ofMain.h\"\n#include <opencv2/core.hpp>\n\n/**\n *  Convert ofPixels_<T> to cv::Mat, Pixels dose not copied.\n *  @param pix ofPixels, ofFloatPixels, ofShortPixels.\n *  @return cv::Mat\n */\ntemplate <typename T>\nstatic cv::Mat toCv(ofPixels_<T>& pix)\n{\n    int depth;\n    switch(pix.getBytesPerChannel())\n    {\n        case 4: depth = CV_32F;\n        case 2: depth = CV_16U;\n        case 1: default: depth = CV_8U;\n    }\n    return cv::Mat(pix.getHeight(), pix.getWidth(), CV_MAKETYPE(depth, pix.getNumChannels()), pix.getData(), 0);\n}\n\n\n\n\n\nofApp.h\n\n#pragma once\n\n#include \"ofMain.h\"\n#include \"utils.h\"\n\n#include <opencv2/core.hpp>\n#include <opencv2/imgproc.hpp>\n#include <opencv2/imgcodecs.hpp>\n#include <opencv2/features2d.hpp>\n#include <opencv2/photo.hpp>\n\n\nclass ofApp : public ofBaseApp{\n\n    public:\n        void setup();\n        void draw();\n        void keyPressed(int key);\n\n    ofImage mLenaImg; // original image\n    ofImage mResImg; // result image\n};\n\n\n\n\nofApp.cpp\n\n#include \"ofApp.h\"\n\n/**\n *  Test AKAZE feature detections (OpenCV3)\n */\nstatic void featureDetection(ofPixels& src, ofPixels* dst)\n{\n    cv::Mat srcMat = toCv(src);\n    cv::Mat dstMat = toCv(*dst);\n\n    cv::Mat descriptors;\n    vector<cv::KeyPoint> keyPoints;\n\n    cv::Ptr<cv::AKAZE> detector = cv::AKAZE::create();\n\n    detector->detectAndCompute(srcMat, cv::noArray(), keyPoints, descriptors);\n    cv::drawKeypoints(srcMat, keyPoints, dstMat, cv::Scalar::all(-1), cv::DrawMatchesFlags::DRAW_RICH_KEYPOINTS);\n}\n\n/**\n *  Test pencil sketch (OpenCV3)\n */\n\nstatic void pencilSketch(ofPixels& src, ofPixels* dst)\n{\n    cv::Mat srcMat = toCv(src);\n    cv::Mat dstMat = toCv(*dst);\n    cv::Mat dst8UC1;\n\n    cv::pencilSketch(srcMat, dst8UC1, dstMat, 60, 0.07f, 0.02f);\n}\n\n/**\n *  Test stylization (OpenCV3)\n */\nstatic void stylization(ofPixels& src, ofPixels* dst)\n{\n    cv::Mat srcMat = toCv(src);\n    cv::Mat dstMat = toCv(*dst);\n\n    cv::stylization(srcMat, dstMat, 60, 0.45f);\n}\n\n\n\nvoid ofApp::setup(){\n    ofSetWindowShape(512*2, 512);\n\n    mLenaImg.load(\"Lena.png\");\n    mResImg.allocate(mLenaImg.getWidth(), mLenaImg.getHeight(), mLenaImg.getImageType());\n\n    featureDetection(mLenaImg.getPixels(), &mResImg.getPixels());\n    mResImg.update();\n}\n\nvoid ofApp::draw(){\n\n    mLenaImg.draw(0, 0);\n    mResImg.draw(512, 0);\n\n    ofDrawBitmapString(\"Push the number key (1, 2, 3)\", 20, 20);\n}\n\nvoid ofApp::keyPressed(int key){\n\n    switch (key)\n    {\n        case '1':\n            featureDetection(mLenaImg.getPixels(), &mResImg.getPixels());\n            mResImg.update();\n            break;\n\n        case '2':\n            pencilSketch(mLenaImg.getPixels(), &mResImg.getPixels());\n            mResImg.update();\n            break;\n\n        case '3':\n            stylization(mLenaImg.getPixels(), &mResImg.getPixels());\n            mResImg.update();\n            break;\n    }\n}\n\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\uff08\u5de6\u304c\u5143\u753b\u50cf\uff0c\u53f3\u304c\u51fa\u529b\u7d50\u679c\uff09\n\nAKAZE\u7279\u5fb4\u91cf\u306e\u62bd\u51fa\n\ncv::pencilSketch\uff08\u925b\u7b46\u753b\u98a8\u306b\u3057\u305f\u753b\u50cf\u306e\u751f\u6210\uff09\n\ncv::stylization\uff08\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u30b9\u30df\u30de\u30bb\u30f3...\uff09\n\u4e0a\u8a18\u8a66\u3057\u305f\u95a2\u6570\u306f\uff0c\u3044\u305a\u308c\u3082OpenCV3\u304b\u3089\u52a0\u3048\u3089\u308c\u305f\u3082\u306e\u3067\u3059\uff0e\n\n\u53c2\u8003\n\nOpenCV 3.0\u306e\u65b0\u6a5f\u80fd\uff08\uff0b \u6b21\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30ed\u30fc\u30c9\u30de\u30c3\u30d7\uff09: http://www.buildinsider.net/small/opencv/002\n\n\n\nopenFrameworks\uff08\u4ee5\u4e0boF\uff09\u3067OpenCV\u3068\u3044\u3048\u3070ofxOpenCv\u3084kylemacdonald\u3055\u3093\u306e[ofxCv](https://github.com/kylemcdonald/ofxCv)\u304c\u3042\u308a\u307e\u3059\u304c\uff0c\u7d30\u304b\u3044\u30c7\u30fc\u30bf\u3092\u53d6\u308d\u3046\u3068\u3059\u308b\u3068\u3053\u3046\uff0c\u75d2\u3044\u6240\u306b\u624b\u304c\u5c4a\u304b\u306a\u3044\u3068\u3044\u3046\u304b\uff0c\u3084\u306f\u308a\u4e07\u5168\u3067\u306f\u306a\u3044\u3068\u3044\u3048\u307e\u3059\uff0e\n\n\u305d\u3082\u305d\u3082OpenCV\u306fC/C++\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3060\u3057\uff0c\u3084\u306f\u308a\u500b\u5225\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308c\u3070\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u95a2\u6570\u3067\u3057\u304b\u3067\u304d\u306a\u3044\u3088\u3046\u306a\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\u3068\u304f\u306b\u6700\u65b0\u306eOpenCV3.x\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u305d\u306e\u65b9\u304c\u30b9\u30de\u30fc\u30c8\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u3068\u3044\u3046\u308f\u3051\u3067\uff0coF\u306e\u958b\u767a\u74b0\u5883\u306bOpenCV3\u3092\u5c0e\u5165\u3059\u308b\u65b9\u6cd5\u3092\u8ff0\u3079\u307e\u3059\uff0e\n\n\u203b OpenCV3\u3068\u3042\u308a\u307e\u3059\u304c\uff0c\u5225\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3082\u30e9\u30a4\u30d6\u30e9\u30ea\u540d\u306a\u3069\u304c\u9055\u3063\u3066\u3082\u540c\u3058\u611f\u3058\u3067\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\n##\u5b9f\u884c\u74b0\u5883\n\n- Mac OSX11.6  \n- Xcode 7.3.1\n- openFrameworks 0.9.3\n- OpenCV 3.1\uff08Homebrew\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff09\n\n\n##\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n### OpenCV\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30d3\u30eb\u30c9\u3059\u308b\n\n\u3069\u3046\u3044\u3046\u65b9\u6cd5\u3067\u3082\u3044\u3044\u3067\u3059\u304c\uff0c\u81ea\u5206\u306e\u5834\u5408\u306fHomebrew\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\uff0eHomebrew\u304c\u5165\u3063\u3066\u3044\u308c\u3070\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u3053\u3046\u3044\u3046\u611f\u3058\u3067\u3059\u2193\n\n``` Bash\n% brew install homebrew/science/opencv3   \n```\n\n\u8a73\u3057\u3044\u3084\u308a\u65b9\u306f\u65e2\u306b\u4ed6\u306b\u8aac\u660e\u304c\u591a\u3044\u3068\u601d\u3046\u306e\u3067\u7701\u7565\u3057\u307e\u3059\uff0e\n\n##\u74b0\u5883\u8a2d\u5b9a\uff08Xcode\uff09\n\n###oF\u306e\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\n\nv0.8.0\u4ee5\u964d\u304b\u3089\u306fProjectGenerator\u3067\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\u306d\uff0e\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\uff0cofxOpenCv\u3068\u304bofxCv\u306a\u3069\u306eOpenCV\u30e9\u30c3\u30d1\u30fc\u7cfb\u30a2\u30c9\u30aa\u30f3\u3092\u5165\u308c\u3061\u3083\u3046\u3068\u5909\u306b\u5e72\u6e09\u3057\u3061\u3083\u3046\u6050\u308c\u304c\u3042\u308a\u307e\u3059\uff0e\u3061\u3083\u3093\u3068\u8a66\u3057\u3066\u306f\u3044\u307e\u305b\u3093\u304c...\n\n\u3053\u308c\u3089\u306e\u30a2\u30c9\u30aa\u30f3\u306f\u78ba\u304b\u306b\u4f7f\u3044\u3084\u3059\u304f\u3066\u4fbf\u5229\u3067\u3059\u304c\uff0c\u305b\u3063\u304b\u304f\u30aa\u30ea\u30b8\u30ca\u30eb\u306eOpenCV\u3092\u4f7f\u3046\u306e\u3067\u3059\u304b\u3089\uff0c\u3053\u3053\u306f\u6e05\u304f\u30e9\u30c3\u30d1\u30fc\u306b\u983c\u3089\u306a\u3044\u65b9\u5411\u3067\u884c\u304d\u307e\u3057\u3087\u3046\uff0e\n\n###\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d1\u30b9\u3092\u8ffd\u52a0\u3059\u308b\n\nXcode\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d1\u30b9\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305fOpenCV3\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\n\u666e\u901a\u306b\u8ffd\u52a0\u3057\u3066\u3082\u3044\u3044\u3067\u3059\u304c\uff0coF\u306eXcode\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 \"Project.xcconfig\" \u3068\u3044\u3046\u306e\u304c\u4ed8\u3044\u3066\u307e\u3059\u306e\u3067\uff0c\u30eb\u30fc\u30c8\u307e\u3067\u306e\u30d1\u30b9\u306f\u3053\u3053\u306b\u8ffd\u52a0\u3057\u305f\u307b\u3046\u304c\u4f55\u304b\u3068\u3044\u3044\u3067\u3059\uff0e\n\n![Screenshot_2016-08-17_02_01_21.png](https://qiita-image-store.s3.amazonaws.com/0/29877/715f5e5d-ce14-6637-6453-dbac5cea658a.png \"Screenshot_2016-08-17_02_01_21.png\")\n\n\u2191\u3053\u3046\u3044\u3046\u611f\u3058\u3067\u77e2\u5370\u306e\u3068\u3053\u308d\u306b\u884c\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\n```Project.xcconfig\n//OpenCV3\nOPENCV_PATH = /usr/local/Cellar/opencv3/3.1.0_3\n```\n\n\u3061\u306a\u307f\u306b\u81ea\u5206\u307f\u305f\u3044\u306bHomebrew\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u5834\u5408\u306f\u4e0a\u306e\u3088\u3046\u306b```/usr/local/Cellar/opencv3```\u306e\u5f8c\u306b\u7d9a\u304f\u30d0\u30fc\u30b8\u30e7\u30f3\u6bce\u306b\u5206\u3051\u3089\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u30eb\u30fc\u30c8\u30d1\u30b9\u306b\u306a\u308a\u307e\u3059\uff0e\n\n\"3.1.0_3\" \u306e\u3068\u3053\u308d\u306f\u3082\u3061\u308d\u3093\u81ea\u5206\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3082\u306e\u3067\u4f7f\u3044\u305f\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u66f8\u3044\u3066\u4e0b\u3055\u3044\uff0e\n\n\u3053\u3046\u3059\u308b\u3068\u4f55\u304c\u5b09\u3057\u3044\u304b\u3068\u3044\u3046\u3068\uff0c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u306e\u65b9\u3067\u3053\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\n![Screenshot 2016-08-17 02.03.28.png](https://qiita-image-store.s3.amazonaws.com/0/29877/591573b3-bbe6-e622-a144-2e9627398209.png \"Screenshot 2016-08-17 02.03.28.png\")\n\n\u4e0a\u306e\u753b\u50cf\u3067\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u306e \"Build Settings > Header Search Paths\"\u306bOpenCV3\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u8ffd\u52a0\u3057\u3066\u307e\u3059\uff0e\n\n\u8981\u3059\u308b\u306b ```$(OPENCV_PATH)``` \u306e\u90e8\u5206\u304c\u5148\u307b\u3069\u66f8\u3044\u305f\u30eb\u30fc\u30c8\u30d1\u30b9\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\uff0e\n\n\u305f\u3063\u305f\uff11\u884c\u8ffd\u52a0\u3059\u308b\u3060\u3051\u306a\u3089\u5225\u306b\u3044\u3044\u3093\u3067\u3059\u304c\uff0c\u3053\u306e\u3042\u3068\u5927\u91cf\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3078\u306e\u30d1\u30b9\u3092\u8ffd\u52a0\u3059\u308b\u306e\u3067\u3053\u3046\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3068\u3044\u3046\u308f\u3051\u3067\u3059\uff0e\n\n###\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8ffd\u52a0\u3059\u308b\n\n\u6b21\u306b\uff0cOpenCV3\u306e\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u30e9\u30a4\u30d6\u30e9\u30ea\uff08.dylib\uff09\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\n\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u306e \"Build Settings > Other Linker Flags\" \u306b\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\n![Screenshot 2016-08-17 02.03.47.png](https://qiita-image-store.s3.amazonaws.com/0/29877/505840b2-86fc-a5c1-9644-6d2065af74c8.png \"Screenshot 2016-08-17 02.03.47.png\")\n\n\u5225\u306b\u5168\u90e8\u8ffd\u52a0\u3057\u306a\u304f\u3066\u3082\u5fc5\u8981\u306a\u3084\u3064\u304c\u5206\u304b\u3063\u3066\u3044\u308c\u3070\u305d\u308c\u3060\u3051\u3067\u3044\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u307e\u305f\uff0cOther Linker Flags\u306b\u30d1\u30b9\u3092\u66f8\u304f\u4ee5\u5916\u306b\uff0c\"Build Phases > Link Binary With Libraries\"\u306b\u8ffd\u52a0\u3057\u3066\u3082\u884c\u3051\u307e\u3059\u304c\uff0c\u5f8c\u3005OpenCV\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5909\u66f4\u3057\u305f\u3044\u6642\u306b\u9762\u5012\u306a\u306e\u3067\uff0c\u3053\u3053\u306b\u66f8\u304f\u65b9\u6cd5\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\uff0e\n\n\u672c\u5f53\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5909\u66f4\u3057\u305f\u3044\u3068\u304d\u306f\u5148\u307b\u3069Project.xcconfig\u306b\u8ffd\u52a0\u3057\u305f```OPENCV_PATH```\u3092\u4fee\u6b63\u3059\u308b\u3060\u3051\u3067\u6e08\u307f\u307e\u3059\uff0e\n\n\u3061\u306a\u307f\u306b\u5225\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306eOpenCV\u3067\u306f\u4e0a\u8a18\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u540d\u524d\u306a\u3069\u3044\u308d\u3044\u308d\u9055\u3046\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u78ba\u304b\u3081\u3066\u89b3\u3066\u4e0b\u3055\u3044\uff0eOpenCV3.x\u3067\u3042\u308c\u3070\u753b\u50cf\u306e\u901a\u308a\u3067\u305f\u3076\u3093OK\u3067\u3059\uff0e\n\n##\u30c6\u30b9\u30c8\n\nofApp.h \u306b\u306a\u3093\u3067\u3082\u3044\u3044\u306e\u3067OpenCV\u306e\u4f55\u304b\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff0e\u4f8b\u3048\u3070\u2193\n\n```c++:ofApp.h\n#include <opencv2/core.hpp>\n#include <opencv2/imgproc.hpp>\n```\n\n\u5b9f\u884c\u3067\u304d\u308c\u3070\u74b0\u5883\u8a2d\u5b9a\u306f\u305f\u3076\u3093OK\u3067\u3059\uff0e\n\n#\u30aa\u30ea\u30b8\u30ca\u30eb\u306eOpenCV\u3092oF\u3067\u4f7f\u3044\u3084\u3059\u304f\u3059\u308b\n\n##ofPixels\u304b\u3089cv::Mat\u3078\u306e\u5909\u63db\n\nOpenCV\u3067\u753b\u50cf\u3092\u6271\u3046\u6642\u306fcv::Mat\u3092\u4f7f\u3044\u307e\u3059\uff0e\u4e00\u65b9oF\u3067\u306fofPixels\u304c\u4f7f\u308f\u308c\u307e\u3059\uff0e\n\u203bofImage\u3082\u30c7\u30fc\u30bf\u306e\u5b9f\u4f53\u306fofImage\u306e\u4e2d\u306b\u3042\u308bofPixels\u304c\u6301\u3063\u3066\u3044\u307e\u3059\uff0e\n\n\u306a\u306e\u3067\uff0cOpenCV\u306e\u5404\u95a2\u6570\u3067\u3044\u308d\u3044\u308d\u3084\u308a\u305f\u3044\u3068\u304d\u306f\u5426\u304c\u5fdc\u3067\u3082cv::Mat\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u51fa\u3066\u304d\u307e\u3059\uff0e\n\n\u3068\u3044\u3046\u308f\u3051\u3067\uff0c\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3092\u8003\u3048\u307e\u3059\uff0e\n\n1. \u5143\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u3092ofImage::load()\u3067\u884c\u3046\uff0e\n- \u5143\u753b\u50cf\u3068\u540c\u3058\u30b5\u30a4\u30ba\u3067\u4efb\u610f\u306e\u30c1\u30e3\u30f3\u30cd\u30eb\u30fb\u6df1\u5ea6\u306e\u51fa\u529b\u753b\u50cf\uff08e.g. ofImage, ofPixels..\uff09\u3092\u7528\u610f\u3059\u308b\uff0e\n- \u305d\u308c\u3089\u3092cv::Mat\u306b<b>\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u305b\u305a\u306b</b>\u5909\u63db\u3059\u308b\uff0e\n- \u5909\u63db\u3055\u308c\u305fcv::Mat\u3092\u4f7f\u3063\u3066OpenCV\u306e\u95a2\u6570\u3067\u3044\u308d\u3044\u308d\u3084\u308b\uff0e\n- \u305d\u3046\u3059\u308b\u3068\u6700\u521d\u306b\u7528\u610f\u3057\u305f\u51fa\u529b\u753b\u50cf\u306e\u4e2d\u8eab\u3082\u66f4\u65b0\u3055\u308c\u308b\u306e\u3067\uff0c\u305d\u306e\u307e\u307e\u4f7f\u3046\n\n\u30dd\u30a4\u30f3\u30c8\u306f\uff13\u756a\u76ee\u306e\u300c\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u305b\u305a\u306b\u300d\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u3059\uff0e\u3068\u3044\u3063\u3066\u3082cv::Mat\u3082ofPixels\u3082\u4e2d\u306b\u753b\u7d20\u30c7\u30fc\u30bf\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u305d\u308c\u3092\u6e21\u3059\u3060\u3051\u3067\u3059\uff0e\n\n\u5b9f\u306f\u65e2\u306bkylemacdonald\u3055\u3093\u304cofxCv\u306e`toCv()`\u95a2\u6570\u3067\u540c\u3058\u3053\u3068\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u306e\u3067\uff0c\u305d\u308c\u3092\u53c2\u8003\u306b\u4ee5\u4e0b\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\n\n```C++\ntemplate <typename T>\nstatic cv::Mat toCv(ofPixels_<T>& pix)\n{\n    int depth;\n    switch(pix.getBytesPerChannel())\n    {\n        case 4: depth = CV_32F;\n        case 2: depth = CV_16U;\n        case 1: default: depth = CV_8U;\n    }\n    return cv::Mat(pix.getHeight(), pix.getWidth(), CV_MAKETYPE(depth, pix.getNumChannels()), pix.getData(), 0);\n}\n\n```\n\n\u3053\u308c\u3092\u3069\u3053\u304b\u306b\u66f8\u3044\u3066\u304a\u3051\u3070ofPixels\u304b\u3089cv::Mat\u306b\u30c7\u30fc\u30bf\u3092\u30b3\u30d4\u30fc\u305b\u305a\u306b\u5909\u63db\u3067\u304d\u307e\u3059\uff0e\n\n\u3061\u306a\u307f\u306b\uff0coF\u306eofPixels\u4ee5\u5916\u306b\u3082\uff0cofFloatPixels\uff0cofShortPixels\uff08\u305d\u308c\u305e\u308cunsigned char, unsigned short, float\u3068\u3057\u3066\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\uff09\u3092\u6e21\u3059\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\u3053\u308c\u3089\u306fcv::Mat\u3067\u306f\u6df1\u5ea6CV_8U, CV_16U, CV_32F\u306b\u5bfe\u5fdc\u3057\u307e\u3059\uff0e\n\n\n\n\u4f7f\u3044\u65b9\u306f\u3053\u3046\u3067\u3059\u2193\n\n```C++\n\nofImage srcImg; //!< \u5143\u753b\u50cf\nofImage dstImg; //!< \u51fa\u529b\u753b\u50cf\n\n// \u5143\u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\u3068\u51fa\u529b\u753b\u50cf\u306e\u30e1\u30e2\u30ea\u78ba\u4fdd\nsrcImg.load(\"test.png\");\ndstImg.allocate(srcImg.getWidth(), srcImg.getHeight(), OF_IMAGE_GRAYSCALE); //<--- \u30c1\u30e3\u30f3\u30cd\u30eb\u6570\u306a\u3069\u306f\u51fa\u529b\u753b\u50cf\u306b\u3042\u308f\u305b\u308b\n\n// \u305d\u308c\u305e\u308c\u3092cv::Mat\u306b\u5909\u63db\ncv::Mat srcMat = toCv(srcImg);\ncv::Mat dstMat = toCv(dstImg);\n\n////////////////////////////\n/*\n * OpenCV\u3067\u3092\u3044\u308d\u3044\u308d\u51e6\u7406\u3059\u308b\uff08srcMat\u3092\u4f7f\u3063\u3066dstMat\u3092\u66f4\u65b0\u3059\u308b\uff09\n */\n////////////////////////////\n\n// \u63cf\u753b\u3059\u308b\u305f\u3081\u306b\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u66f4\u65b0\uff08ofImage::update()\u3092\u547c\u3073\u307e\u3059\uff09\ndstImg.update();\n\n// \u753b\u50cf\u63cf\u753b\nsrcImg.draw(0, 0);\ndstImg.draw(srcImg.getWidth(), 0);\n\n\n```\n\n##\u305d\u306e\u4ed6\u306eoF<=>OpenCV\u5909\u63db\n\n\u753b\u50cf\u4ee5\u5916\u306b\u3082oF\u3068OpenCV\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5909\u63db\u304c\u3067\u304d\u308c\u3070\u4fbf\u5229\u3067\u3059\uff0e\u4f8b\u3048\u3070`ofPolyline`\u3092`vector<cv::Point2f>`\u306b\u3057\u305f\u308a\uff0c`ofVec2f`\u3092`cv::Point2f`\u306b\u3057\u305f\u308a\uff0c`ofRectangle`\u3092`cv::Rect`\u306b\u3057\u305f\u308a\u3068\u304b\uff0e\uff0e\n\n\u3067\u3059\u304c\uff0c\u305d\u306e\u8fba\u3082\u3044\u304f\u3064\u304b\u306fkyle\u3055\u3093\u306eofxCv\u306b\u65e2\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3057\uff0c\u3068\u304f\u306b[\u3053\u306e\u30d5\u30a1\u30a4\u30eb](https://github.com/kylemcdonald/ofxCv/blob/master/libs/ofxCv/src/Utilities.cpp)\u306b\u3042\u308b\u95a2\u6570\u3092\u305d\u306e\u307e\u307e\u30b3\u30d4\u30fc\u3057\u3066\u4f7f\u3046\u306e\u304c\u624b\u3063\u53d6\u308a\u65e9\u305d\u3046\u3067\u3059\uff0e\n\n\u4f7f\u3044\u3084\u3059\u305d\u3046\u306a\u3082\u306e\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\uff08\u307b\u3068\u3093\u3069\u30b3\u30d4\u30da\u3067\u3059\u304c\uff09\n\n```cpp\n\n//----------\n// oF\u578b => OpenCV\u578b\u3078\u306e\u5909\u63db\n//----------\n\ncv::Point2f toCv(ofVec2f vec)\n{\n    return cv::Point2f(vec.x, vec.y);\n}\n\ncv::Point3f toCv(ofVec3f vec)\n{\n    return cv::Point3f(vec.x, vec.y, vec.z);\n}\n\ncv::Rect toCv(ofRectangle rect)\n{\n    return cv::Rect(rect.x, rect.y, rect.width, rect.height);\n}\n\ncv::Mat toCv(ofMesh& mesh)\n{\n    vector<ofVec3f>& vertices = mesh.getVertices();\n    return cv::Mat(1, vertices.size(), CV_32FC3, &vertices[0]);\n}\n\nvector<cv::Point2f> toCv(const ofPolyline& polyline)\n{\n    // if polyline.getVertices() were const, this could wrap toCv(vec<vec2f>)\n    vector<cv::Point2f> contour(polyline.size());\n    for(int i = 0; i < polyline.size(); i++) {\n        contour[i].x = polyline[i].x;\n        contour[i].y = polyline[i].y;\n    }\n    return contour;\n}\n\nvector<cv::Point2f> toCv(const vector<ofVec2f>& points)\n{\n    vector<cv::Point2f> out(points.size());\n    for(int i = 0; i < points.size(); i++) {\n        out[i].x = points[i].x;\n        out[i].y = points[i].y;\n    }\n    return out;\n}\n\nvector<cv::Point3f> toCv(const vector<ofVec3f>& points)\n{\n    vector<cv::Point3f> out(points.size());\n    for(int i = 0; i < points.size(); i++) {\n        out[i].x = points[i].x;\n        out[i].y = points[i].y;\n        out[i].z = points[i].z;\n    }\n    return out;\n}\n\ncv::Scalar toCv(ofColor color)\n{\n    return cv::Scalar(color.r, color.g, color.b, color.a);\n}\n\n\n\n//----------\n// OpenCV\u578b => oF\u578b\u3078\u306e\u5909\u63db\n//----------\n\nofVec2f toOf(cv::Point2f point)\n{\n    return ofVec2f(point.x, point.y);\n}\n\nofVec3f toOf(cv::Point3f point)\n{\n    return ofVec3f(point.x, point.y, point.z);\n}\n\nofRectangle toOf(cv::Rect rect)\n{\n    return ofRectangle(rect.x, rect.y, rect.width, rect.height);\n}\n\n```\n\n\u305f\u3060\u3057\uff0c\u3053\u308c\u3089\u306f\u5148\u306b\u8ff0\u3079\u305f\u753b\u50cf\u306e\u5909\u63db\u3068\u9055\u3063\u3066<b>\u5024\u3092\u30b3\u30d4\u30fc\u3057\u3066\u5909\u63db\u3059\u308b\u3057\u304b\u306a\u3044</b>\u306e\u3067\uff0c\u305d\u3053\u3060\u3051\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\n\n\n##\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n\u4ee5\u4e0b\u306boF\uff08v0.9.3\uff09\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\uff0eXcode\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\uff08Version7\uff09\u3082\u5165\u3063\u3066\u308b\u306e\u3067\u74b0\u5883\u69cb\u7bc9\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u3068\u601d\u3044\u307e\u3059\uff0e\n\nhttps://github.com/TatsuyaOGth/OpenCV3_on_oF_example\n\n\n###\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n```C++:utils.h\n\n#pragma once\n\n#include \"ofMain.h\"\n#include <opencv2/core.hpp>\n\n/**\n *  Convert ofPixels_<T> to cv::Mat, Pixels dose not copied.\n *  @param pix ofPixels, ofFloatPixels, ofShortPixels.\n *  @return cv::Mat\n */\ntemplate <typename T>\nstatic cv::Mat toCv(ofPixels_<T>& pix)\n{\n    int depth;\n    switch(pix.getBytesPerChannel())\n    {\n        case 4: depth = CV_32F;\n        case 2: depth = CV_16U;\n        case 1: default: depth = CV_8U;\n    }\n    return cv::Mat(pix.getHeight(), pix.getWidth(), CV_MAKETYPE(depth, pix.getNumChannels()), pix.getData(), 0);\n}\n\n\n```\n\n```C++:ofApp.h\n\n#pragma once\n\n#include \"ofMain.h\"\n#include \"utils.h\"\n\n#include <opencv2/core.hpp>\n#include <opencv2/imgproc.hpp>\n#include <opencv2/imgcodecs.hpp>\n#include <opencv2/features2d.hpp>\n#include <opencv2/photo.hpp>\n\n\nclass ofApp : public ofBaseApp{\n\n\tpublic:\n\t\tvoid setup();\n\t\tvoid draw();\n\t\tvoid keyPressed(int key);\n\t\t\n    ofImage mLenaImg; // original image\n    ofImage mResImg; // result image\n};\n\n```\n\n```C++:ofApp.cpp\n\n#include \"ofApp.h\"\n\n/**\n *  Test AKAZE feature detections (OpenCV3)\n */\nstatic void featureDetection(ofPixels& src, ofPixels* dst)\n{\n    cv::Mat srcMat = toCv(src);\n    cv::Mat dstMat = toCv(*dst);\n    \n    cv::Mat descriptors;\n    vector<cv::KeyPoint> keyPoints;\n    \n    cv::Ptr<cv::AKAZE> detector = cv::AKAZE::create();\n    \n    detector->detectAndCompute(srcMat, cv::noArray(), keyPoints, descriptors);\n    cv::drawKeypoints(srcMat, keyPoints, dstMat, cv::Scalar::all(-1), cv::DrawMatchesFlags::DRAW_RICH_KEYPOINTS);\n}\n\n/**\n *  Test pencil sketch (OpenCV3)\n */\n\nstatic void pencilSketch(ofPixels& src, ofPixels* dst)\n{\n    cv::Mat srcMat = toCv(src);\n    cv::Mat dstMat = toCv(*dst);\n    cv::Mat dst8UC1;\n    \n    cv::pencilSketch(srcMat, dst8UC1, dstMat, 60, 0.07f, 0.02f);\n}\n\n/**\n *  Test stylization (OpenCV3)\n */\nstatic void stylization(ofPixels& src, ofPixels* dst)\n{\n    cv::Mat srcMat = toCv(src);\n    cv::Mat dstMat = toCv(*dst);\n    \n    cv::stylization(srcMat, dstMat, 60, 0.45f);\n}\n\n\n\nvoid ofApp::setup(){\n    ofSetWindowShape(512*2, 512);\n    \n    mLenaImg.load(\"Lena.png\");\n    mResImg.allocate(mLenaImg.getWidth(), mLenaImg.getHeight(), mLenaImg.getImageType());\n    \n    featureDetection(mLenaImg.getPixels(), &mResImg.getPixels());\n    mResImg.update();\n}\n\nvoid ofApp::draw(){\n    \n    mLenaImg.draw(0, 0);\n    mResImg.draw(512, 0);\n    \n    ofDrawBitmapString(\"Push the number key (1, 2, 3)\", 20, 20);\n}\n\nvoid ofApp::keyPressed(int key){\n    \n    switch (key)\n    {\n        case '1':\n            featureDetection(mLenaImg.getPixels(), &mResImg.getPixels());\n            mResImg.update();\n            break;\n            \n        case '2':\n            pencilSketch(mLenaImg.getPixels(), &mResImg.getPixels());\n            mResImg.update();\n            break;\n            \n        case '3':\n            stylization(mLenaImg.getPixels(), &mResImg.getPixels());\n            mResImg.update();\n            break;\n    }\n}\n\n```\n\n\n####\u5b9f\u884c\u7d50\u679c\n\n\uff08\u5de6\u304c\u5143\u753b\u50cf\uff0c\u53f3\u304c\u51fa\u529b\u7d50\u679c\uff09\n\n![Screenshot 2016-08-17 04.06.06.jpg](https://qiita-image-store.s3.amazonaws.com/0/29877/98df6dd4-d440-727d-5fbb-4fdc5bbaaa15.jpeg \"Screenshot 2016-08-17 04.06.06.jpg\")\n\nAKAZE\u7279\u5fb4\u91cf\u306e\u62bd\u51fa\n\n![Screenshot 2016-08-17 04.06.13.jpg](https://qiita-image-store.s3.amazonaws.com/0/29877/41d61bf4-7d95-f772-faa7-91c2304318eb.jpeg \"Screenshot 2016-08-17 04.06.13.jpg\")\n\ncv::pencilSketch\uff08\u925b\u7b46\u753b\u98a8\u306b\u3057\u305f\u753b\u50cf\u306e\u751f\u6210\uff09\n\n![Screenshot 2016-08-17 04.06.17.jpg](https://qiita-image-store.s3.amazonaws.com/0/29877/385597e1-d5be-9021-c75c-9b1558d979db.jpeg \"Screenshot 2016-08-17 04.06.17.jpg\")\n\ncv::stylization\uff08\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u30b9\u30df\u30de\u30bb\u30f3...\uff09\n\n\u4e0a\u8a18\u8a66\u3057\u305f\u95a2\u6570\u306f\uff0c\u3044\u305a\u308c\u3082OpenCV3\u304b\u3089\u52a0\u3048\u3089\u308c\u305f\u3082\u306e\u3067\u3059\uff0e\n\n\n##\u53c2\u8003\n\n- OpenCV 3.0\u306e\u65b0\u6a5f\u80fd\uff08\uff0b \u6b21\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u30ed\u30fc\u30c9\u30de\u30c3\u30d7\uff09: http://www.buildinsider.net/small/opencv/002\n\n"}