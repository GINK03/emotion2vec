{"context": "\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306fD\u8a00\u8a9e\u3067\u4eca\u59cb\u3081\u308bRange\u306e\u7d9a\u304d\u3068\u306a\u308b\u3082\u306e\u3067\u3059\u3002\n\u524d\u56de\u3068\u540c\u3058\u304f\u3001D\u8a00\u8a9e\u521d\u5fc3\u8005\u5411\u3051\u3067\u3059\u3002\n\u7279\u6b8a\u306a\u30c6\u30af\u30cb\u30c3\u30af\u89e3\u8aac\u3068\u3044\u3046\u3088\u308a\u3001phobos\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u30ec\u30f3\u30b8\u306b\u95a2\u3059\u308b\u95a2\u6570\u306e\u7d39\u4ecb\u8a18\u4e8b\u3067\u3059\u3002\n\nD\u8a00\u8a9e\u3067\u4eca\u697d\u3057\u3080Range\n\u524d\u306e\u8a18\u4e8b\u3067\u306f\u3001\u30ec\u30f3\u30b8\u3068\u3044\u3046\u6982\u5ff5\u3092\u4f5c\u308b\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u3068\u3001\u305d\u306e\u9762\u767d\u3055\u306b\u3064\u3044\u3066\u304a\u8a71\u3057\u3057\u307e\u3057\u305f\u3002\u50d5\u304c\u6319\u3052\u305f\u4f8b\u306f\u305f\u3063\u305f3\u3064\u3067\u3057\u305f\u304c\u3001\u5b9f\u969b\u306b\u306f\u305f\u304f\u3055\u3093\u306e\u95a2\u6570\u304cphobos\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u305d\u306e\u305f\u304f\u3055\u3093\u306e\u95a2\u6570\u306e\u3046\u3061\u7279\u306b\u3088\u304f\u4f7f\u3046\u3068\u601d\u308f\u308c\u308b\u3044\u304f\u3064\u304b\u3092\u53d6\u308a\u4e0a\u3052\u3001\u5b9f\u969b\u306b\u3069\u306e\u3088\u3046\u306b\u4f7f\u3046\u306e\u304b\u3001\u3069\u306e\u3088\u3046\u306b\u697d\u3057\u3081\u308b\u304b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u77e5\u3063\u3066\u304a\u304d\u305f\u3044\u3053\u3068\n\u3053\u308c\u306f\u5225\u306b\u30ec\u30f3\u30b8\u306e\u95a2\u6570\u306b\u9650\u3063\u305f\u3053\u3068\u3058\u3083\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u8aad\u3093\u3067\u3044\u308b\u521d\u5fc3\u8005\uff08\u3064\u307e\u308a\u50d5\uff09\u304c\u56f0\u60d1\u3059\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u70b9\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u3053\u3053\u3067\u305d\u308c\u3092\u89e3\u3044\u3066\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\uff08\u3064\u307e\u308a\u3001\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b91\u3092\u8aad\u3082\u3046\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff01\uff09\n\n\u5f15\u6570\u3001\u8fd4\u308a\u5024\u306e\u578b\n\u30ec\u30f3\u30b8\u3068\u3044\u3046\u5171\u901a\u306e\u6982\u5ff5\u3067\u7406\u89e3\u3067\u304d\u308b\u3053\u3068\u3001\u3064\u307e\u308a\u30ec\u30f3\u30b8\u3068\u3044\u3046\u6982\u5ff5\u3055\u3048\u77e5\u3063\u3066\u3044\u308c\u3070\u3088\u3044\u3053\u3068\u306f\u975e\u5e38\u306b\u5927\u304d\u306a\u30e1\u30ea\u30c3\u30c8\u3067\u3059\u3002\u30ec\u30f3\u30b8\u3092\u4f7f\u3044\u305f\u3044\u4eba\u2015\u4f8b\u3048\u3070\u3001\u8981\u7d20\u3092\u3059\u3079\u3066\u8db3\u3057\u305f\u7d50\u679c\u3092\u5f97\u305f\u3044\u4eba\u306a\u3069\u2015\u306f\u3001\u30ec\u30f3\u30b8\u306e\u771f\u306e\u578b(\u69cb\u9020\u4f53Foo\uff1fBar\uff1f\u3044\u3084\u30af\u30e9\u30b9\u304b\uff1f\u305d\u308c\u3068\u3082\u914d\u5217\uff1f)\u3092\u77e5\u308b\u5fc5\u8981\u306f\u306a\u3044\u306e\u3067\u3057\u305f\u3002\u5f7c\u306f\u305d\u306e\u30ec\u30f3\u30b8\u304cInputRange\u304bRandomAccessRange\u304b\u306a\u3069\u3001\u7a2e\u985e\u3055\u3048\u308f\u304b\u308c\u3070\u5341\u5206\u306a\u306e\u3067\u3059\u3002\n\u305d\u3053\u3067\u3001\u3053\u308c\u304b\u3089\u7d39\u4ecb\u3059\u308b\u95a2\u6570\u306f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u305f\u3069\u308b\u3068\u591a\u304f\u304c\u8fd4\u308a\u5024\u306e\u578b\u3092auto\u3084R\u306a\u3069\u3068\u3054\u307e\u304b\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u306a\u305c\u306a\u3089\u305d\u306eauto,R\u306e\u5b9f\u4f53\u304c\u4f55\u304b\u306a\u3069\u3092\u77e5\u308b\u5fc5\u8981\u306f\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\u307e\u305f\u3001\u5f15\u6570\u3082\u591a\u304f\u304c\u3068\u3066\u3082\u62bd\u8c61\u7684\u306a\u6307\u5b9a\u304c\u306a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u3053\u308c\u306f\u3044\u308d\u3044\u308d\u306a\u578b\u306e\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\u3064\u307e\u308a\u3001\u578b\u3092\u78ba\u8a8d\u3059\u308b\u3088\u308a\u3082\u3069\u306e\u7a2e\u985e\u306e\u30ec\u30f3\u30b8\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u304b\u3001\u5f15\u6570\u306b\u3069\u306e\u30ec\u30f3\u30b8\u3092\u8981\u6c42\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u3057\u3063\u304b\u308a\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30ec\u30f3\u30b8\u3092\u6271\u3046\u4e09\u7a2e\u985e\n\u305d\u3046\u3044\u3048\u3070\u3001\u524d\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u3044\u305f\u3060\u3044\u305f\u65b9\u306f\u3001\u4e09\u3064\u306e\u3082\u306e\u3092\u4f5c\u3063\u305f\u3053\u3068\u3092\u899a\u3048\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u6f38\u5316\u5f0f\u3092\u8868\u3059\u30ec\u30f3\u30b8\n\uff08\u5f15\u6570\u304b\u3089\u30ec\u30f3\u30b8\u3092\u751f\u6210\u3059\u308b\uff09\nsum\u95a2\u6570\n\uff08\u30ec\u30f3\u30b8\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3059\u308b\uff09\nskip\u95a2\u6570\n\uff08\u30ec\u30f3\u30b8\u3092\u5909\u5316\u3055\u305b\u308b\uff09\n\n\u3053\u308c\u3089\u306f\u660e\u3089\u304b\u306b\u3001\u305d\u308c\u305e\u308c\u7570\u306a\u308b\u50cd\u304d\u3092\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\n\n\u30ec\u30f3\u30b8\u306e\u751f\u6210\n\u30ec\u30f3\u30b8\u306e\u5229\u7528\n\u30ec\u30f3\u30b8\u306e\u5909\u5316\n\n\u306e\u4e09\u3064\u306b\u5206\u985e\u3057\u3066\u7d39\u4ecb\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u30022\n\n\u30ec\u30f3\u30b8\u3092\u751f\u6210\u3059\u308b\n\u30ec\u30f3\u30b8\u306e\u4e16\u754c\u3078\u5165\u308b\u8d77\u70b9\u3068\u306a\u308b\u95a2\u6570\u305f\u3061\u3067\u3059\u3002\n\niota\n\n0,1,2,3,...\u3068\u3044\u3046\u30b7\u30f3\u30d7\u30eb\u306a\u6570\u306e\u30ec\u30f3\u30b8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001iota(5)\u306f\u30010,1,2,3,4\u3092\u8868\u3059\u30ec\u30f3\u30b8\u3067\u3059\u3002\u958b\u59cb\u3001\u7d42\u4e86\u3001\u30b9\u30c6\u30c3\u30d7\u3092\u6307\u5b9a\u3067\u304d\u3001\u307e\u305f\u3044\u308d\u3044\u308d\u306a\u578b\u3067\u4f7f\u3048\u307e\u3059\u3002\nimport std.range : iota;\n\nunittest {\n    import std.algorithm : equal;\n    assert(iota(10).equal([0,1,2,3,4,5,6,7,8,9]));      //\u4e00\u5f15\u6570\u306e\u3068\u304d\n    assert(iota(4,10).equal([4,5,6,7,8,9]));            //\u4e8c\u5f15\u6570\u306e\u3068\u304d\n    assert(iota(0,10,2).equal([0,2,4,6,8]));            //\u4e09\u5f15\u6570\u306e\u3068\u304d\n\n    import std.algorithm : sum;\n    assert(iota(10).sum == 45);\n}\n\nunittest {\n    import std.bigint;\n    import std.algorithm : sum;\n    assert(iota(BigInt(10)).sum == BigInt(45));         //BigInt\u3067\u3082\u4f7f\u3048\u308b\u305e\uff01\n}\n\n\nrepeat\n\n\u8aad\u3093\u3067\u5b57\u306e\u5982\u304f\u3001\u540c\u3058\u5024\u3092\u7e70\u308a\u8fd4\u3059\u30ec\u30f3\u30b8\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u7121\u9650\u30ec\u30f3\u30b8\u3068\u3057\u3066\u3082\u3001\u500b\u6570\u3092\u6307\u5b9a\u3057\u3066\u3082\u4f7f\u3048\u307e\u3059\u3002\nimport std.range : repeat;\n\nunittest {\n    assert(repeat(3,5).equal([3,3,3,3,3]));\n\n    import std.range : take;\n    import std.algorithm : equal;\n    assert(repeat(3).take(8).equal([3,3,3,3,3,3,3,3]));\n}\n\n\n\u30ec\u30f3\u30b8\u3092\u5229\u7528\u3059\u308b\n\u30ec\u30f3\u30b8\u306e\u4e2d\u8eab\u3092\u5b9f\u969b\u306b\u5229\u7528\u3059\u308b\u95a2\u6570\u305f\u3061\u3067\u3059\u3002\n\nfold\n\n\u4e8c\u5f15\u6570\u306e\u95a2\u6570\u3092\u6b21\u3005\u306b\u9069\u7528\u3057\u3066\u3001\u4e00\u3064\u306e\u5024\u306b\u7573\u307f\u8fbc\u307f\u307e\u3059\u3002\nimport std.algorithm : fold;\n\nunittest {\n    //max(1,5), max(5,2), ...\u3068max\u3092\u6b21\u3005\u3068\u9069\u7528\u3057\u3001\u6700\u5927\u5024\u3092\u5f97\u307e\u3059\u3002\n    import std.algorithm : max;\n    assert([1,5,2,7,3,0].fold!max == 7);\n}\n\nfold!\u306b\u7d9a\u304f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306f\u57fa\u672c\u7684\u306b\u4e8c\u5f15\u6570\u95a2\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u307e\u305amax(1,5)\u304c\u547c\u3070\u308c\u3001\u305d\u306e\u7d50\u679c\u3067\u3042\u308b5\u3068\u3001\u3055\u3089\u306b\u6b21\u306e\u8981\u7d20\u3067\u3042\u308b2\u3092\u7528\u3044\u3066max(5,2)\u304c\u547c\u3070\u308c\u3001\u305d\u306e\u7d50\u679c\u3067\u3042\u308b5\u3068\u3055\u3089\u306b\u6b21\u306e\u8981\u7d20\u30fb\u30fb\u30fb\u3068\u3001\u8981\u7d20\u304c\u7573\u307f\u8fbc\u307e\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u95a2\u6570\u306e\u6e21\u3057\u65b9\n\u3053\u308c\u306f\u30ec\u30f3\u30b8\u306e\u95a2\u6570\u306b\u9650\u3063\u305f\u3053\u3068\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3068\u3057\u3066\u95a2\u6570\u3092\u6e21\u3059\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u6e21\u3057\u65b9\u304c\uff08\u304a\u305d\u3089\u304f\uff09D\u8a00\u8a9e\u72ec\u7279\u306a\u306e\u3067\u3001\u3053\u3053\u3067\u89e6\u308c\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\u4e3b\u306b\u8003\u3048\u3089\u308c\u308b\u6e21\u3057\u65b9\u306f\u4e09\u3064\u3067\u3059\u3002\n\n\u5358\u7d14\u306b\u95a2\u6570\u3092\u6e21\u3059\n\u81ea\u5206\u3067\u4f5c\u308b\u306a\u308a\u3001\u65e2\u5b58\u306e\u3082\u306e\u3092\u4f7f\u3046\u306a\u308a\u3001\u3068\u308a\u3042\u3048\u305a\u540d\u524d\u3092\u66f8\u3051\u3070\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\nimport std.algorithm : fold;\n\nunittest {\n    auto result = [1,2,3,4,5].fold!tasu;\n    assert(result == 15);\n}\n\nint tasu(int a, int b) { return a + b; }\n\n\n\u95a2\u6570\u30ea\u30c6\u30e9\u30eb\u3092\u76f4\u63a5\u6e21\u3059\n\u95a2\u6570\u3092\u308f\u3056\u308f\u3056\u5225\u306e\u5834\u6240\u306b\u66f8\u304f\u306e\u3067\u306f\u306a\u304f\u3001\u95a2\u6570\u3092\u4f7f\u3046\u307e\u3055\u306b\u305d\u306e\u5834\u6240\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u95a2\u6570\u30ea\u30c6\u30e9\u30eb\u306e\u8a18\u6cd5\u306b\u3064\u3044\u3066\u306f\u8a73\u3057\u304f\u66f8\u304d\u307e\u305b\u3093\u304c\u3001\u4e3b\u306b\u4e8c\u901a\u308a\u306e\u66f8\u304d\u65b9\u304c\u3067\u304d\u307e\u3059\u3002\nimport std.algorithm : fold;\n\nunittest {\n    auto result1 = [1,2,3,4,5].fold!(\n            (a,b) { return a + b; }\n            );\n    assert(result1 == 15);\n\n    auto result2 = [1,2,3,4,5].fold!(\n            (a,b) => a + b\n            );\n    assert(result2 == 15);\n}\n\n\n\u6587\u5b57\u5217\u3067\u6e21\u3059\n\u6700\u3082\u56f0\u60d1\u3055\u308c\u3084\u3059\u3044\u306e\u304c\u3053\u306e\u8a18\u6cd5\u3060\u3068\u601d\u3044\u307e\u3059\u3002D\u8a00\u8a9e\u3067\u306f\u3001\u6587\u5b57\u5217\u304b\u3089\u95a2\u6570\u3092\u751f\u6210\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001std.functional\u306b\u3042\u308bunaryFun\u3084binaryFun\u304c\u305d\u3046\u3067\u3059\u3002\n\u3053\u308c\u3089\u306f\u4e0e\u3048\u3089\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u304c\u95a2\u6570\u306a\u3089\u305d\u306e\u307e\u307e\u7d20\u901a\u308a\u3055\u305b\u3001\u6587\u5b57\u5217\u306a\u3089\u6307\u5b9a\u3057\u305f\u6587\u5b57\u3092\u5f15\u6570\u306e\u3088\u3046\u306b\u307f\u306a\u3057\u3066\u95a2\u6570\u3092\u751f\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3064\u307e\u308a\u3001\nimport std.functional : unaryFun, binaryFun;\n\nunittest {\n    alias myIncrement = unaryFun!\"a + 1\";\n    alias myPlus = binaryFun!\"a + b\";\n\n    assert(myIncrement(1) == 2);\n    assert(myPlus(1,2) == 3);\n}\n\n\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\u3053\u306ea\u3084b\u306f\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u304b\u3089\u6765\u3066\u3044\u307e\u30593\u3002\n\u3064\u307e\u308a\u3001fold\u306b\u306f\u3053\u3093\u306a\u66f8\u304d\u65b9\u3082\u3067\u304d\u307e\u3059\u306d\u3002\nimport std.algorithm : fold;\n\nunittest {\n    assert([1,2,3,4,5].fold!\"a + b\" == 15);\n}\n\n\neach\n\neach\u306f\u3053\u306e\u7a2e\u306e\u95a2\u6570\u306e\u4e2d\u3067\u3082\u5c11\u3057\u7279\u6b8a\u3067\u3001\u8fd4\u308a\u5024\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u3042\u308b\u95a2\u6570\u306b\u8981\u7d20\u3092\u6b21\u3005\u3068\u6e21\u3057\u3001\u5b9f\u884c\u3057\u305f\u3089\u8fd4\u308a\u5024\u306f\u6c17\u306b\u305b\u305a\u304a\u3057\u307e\u3044\uff01\u3068\u3044\u3046\u95a2\u6570\u3067\u3059\u3002\n\u50d5\u306f\u3053\u308c\u3092writeln\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u306e\u304c\u597d\u304d\u3067\u3059\u3002\nimport std.algorithm : each;\n\nvoid main() {\n    import std.stdio : writeln;\n    [1,2,3,4,5]\n        .each!writeln;\n}\n\n.each!writeln\u3068\u5f8c\u308d\u306b\u66f8\u304f\u3060\u3051\u3067\u8981\u7d20\u3092\u5168\u90e8\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059\uff01\n\u3082\u3046\u3072\u3068\u3064\u3088\u304f\u4f7f\u3046\u306e\u306f\u3001.each\u3092\u305d\u306e\u307e\u307e\u66f8\u304d\u305d\u306e\u6642\u70b9\u3067\u30ec\u30f3\u30b8\u3092\u8a55\u4fa1\u3057\u3066\u4f7f\u3044\u5207\u308b\u3068\u3044\u3046\u4f7f\u3044\u65b9\u3067\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u81ea\u5206\u3067\u597d\u304d\u306a\u6642\u306b\u30ec\u30f3\u30b8\u306e\u8a08\u7b97\u3092\u884c\u308f\u305b\u3001\u6642\u9593\u3092\u8a08\u6e2c\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\nimport std.algorithm : each;\n\nvoid main() {\n    import std.range : iota;\n    import std.stdio : writeln;\n    import std.datetime : benchmark;\n    auto bench = benchmark!(() => iota(10000).each)(1000);\n\n    //\u4f55\u30df\u30ea\u79d2\u304b\u304b\u308b\u304b\u898b\u307e\u3059\u3002(\u914d\u5217\u3067\u7d50\u679c\u304c\u3082\u3089\u3048\u308b\u306e\u3067\u5168\u90e8\u8868\u793a\u3059\u308b\u306e\u306beach\u3057\u307e\u3057\u3087\u3046\uff01)\n    bench.each!((t) => t.msecs.writeln);\n}\n\n\nequal\n\n\u524d\u56de\u306e\u8a18\u4e8b\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u914d\u5217\u3068\u30ec\u30f3\u30b8\u3068\u304b\u3001\u30ec\u30f3\u30b8\u3068\u4ed6\u306e\u7a2e\u985e\u306e\u30ec\u30f3\u30b8\u3068\u304b\u3001\u9055\u3046\u578b\u540c\u58eb\u306e\u6bd4\u8f03\u306f\u666e\u901a\u3067\u304d\u307e\u305b\u30934\u3002\u3057\u304b\u3057\u3053\u306e\u95a2\u6570\u3092\u4f7f\u3048\u3070\u3001\u8981\u7d20\u3092\u4e00\u3064\u305a\u3064\u4e01\u5be7\u306b\u6bd4\u8f03\u3057\u3066\u304f\u308c\u307e\u3059\u306e\u3067\u3001\u8981\u7d20\u540c\u58eb\u304c\u6bd4\u8f03\u53ef\u80fd\u306a\u3089\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nimport std.algorithm : equal;\nimport std.range : iota;\n\nunittest {\n    //assert(iota(5) == [0,1,2,3,4]);       //error! (iota\u306e)Result\u3068int[]\u306f\u6bd4\u8f03\u3067\u304d\u306a\u3044\uff01\n    assert(iota(5).equal([0,1,2,3,4]));     //\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u306f\u6bd4\u8f03\u53ef\u80fd\n}\n\n\u3055\u3089\u306b\u3053\u306eequal\u306f\u6bd4\u8f03\u65b9\u6cd5\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u30ec\u30f3\u30b8\u3092\u8981\u7d20\u306b\u3082\u3064\u30ec\u30f3\u30b8\u3092\u6bd4\u8f03\u3059\u308b\u3068\u304d\u306a\u3069\u306b\u4fbf\u5229\u3067\u3059\u3002\nimport std.algorithm : equal;\nimport std.range : iota;\n\nunittest {\n    //assert([iota(3), iota(5)].equal([[0,1,2], [0,1,2,3,4]]));     //error! \u5404\u8981\u7d20\u306fResult\u3068int[]\u306e\u307e\u307e\u306a\u306e\u3067\u6bd4\u8f03\u3067\u304d\u306a\u3044\uff01\n    assert([iota(3), iota(5)].equal!equal([[0,1,2], [0,1,2,3,4]])); //\u30ec\u30f3\u30b8\u306e\u5404\u8981\u7d20\u3092\u3055\u3089\u306bequal\u3067\u6bd4\u8f03\u3057\u307e\u3059\u3002\n}\n\n\n\u30ec\u30f3\u30b8\u3092\u5909\u5316\u3055\u305b\u308b\n\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001\u4f55\u3089\u304b\u306e\u64cd\u4f5c\u3092\u52a0\u3048\u305f\u30ec\u30f3\u30b8\u3092\u8fd4\u3059\u95a2\u6570\u305f\u3061\u3067\u3059\u3002\n\nmap\n\n\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u306b\u95a2\u6570\u3092\u9069\u7528\u3057\u3066\u65b0\u305f\u306a\u30ec\u30f3\u30b8\u306b\u3057\u307e\u3059\u3002\n\u975e\u5e38\u306b\u6c4e\u7528\u6027\u306e\u9ad8\u3044\u95a2\u6570\u3067\u3001\u3044\u308d\u3093\u306a\u3068\u3053\u308d\u3067\u4f7f\u3048\u307e\u3059\u3002\nimport std.algorithm : map;\n\nunittest {\n    import std.range : iota;\n    import std.algorithm : equal;\n    assert(iota(5).map!\"a ^^ 2\".equal([0,1,4,9,16]));    //\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3092\u4e8c\u4e57\u3057\u307e\u3059\u3002\n    auto rangeOfRange = iota(5).map!((x) => iota(x));   //\u30ec\u30f3\u30b8\u306e\u30ec\u30f3\u30b8\u3092\u4f5c\u308b\u3053\u3068\u3082\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\uff01\n}\n\n\nfilter\n\n\u8981\u7d20\u306e\u3046\u3061\u6761\u4ef6\u306b\u5408\u81f4\u3057\u305f\u3082\u306e\u3060\u3051\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002\nimport std.algorithm : filter;\n\nunittest {\n    import std.range : iota;\n    import std.algorithm : equal;\n    //3\u306e\u500d\u6570\u304b5\u306e\u500d\u6570\u306e\u3082\u306e\u3060\u3051\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002\n    assert(iota(30).filter!((x) => x % 3 == 0 || x % 5 == 0)\n            .equal([0,3,5,6,9,10,12,15,18,20,21,24,25,27]));\n}\n\n\n\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u904a\u307c\u3046\n\n0\u304b\u30899\u307e\u3067\u306e\u6570\u306e\u4e8c\u4e57\u306e\u548c\u3092\u6c42\u3081\u308b\nimport std.stdio;\nimport std.range;\nimport std.algorithm;\n\nvoid main() {\n    iota(10)\n        .map!((x) => x^^2)\n        .sum\n        .writeln;\n}\n\n\n9999\u307e\u3067\u306e\u6570\u306e\u4e8c\u4e57\u306e\u548c\u3092\u6c42\u3081\u308b\nBigInt\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u5927\u304d\u3044\u6570\u3067\u3082\u6271\u3048\u307e\u3059\u3002\nimport std.stdio;\nimport std.range;\nimport std.algorithm;\n\nvoid main() {\n    import std.bigint;\n    iota(BigInt(10000))\n        .map!((x) => x ^^ 2)\n        .sum\n        .writeln;\n}\n\n\n\u4e8c\u6b21\u95a2\u6570\u306e\u30b0\u30e9\u30d5\u3092\u4f5c\u3063\u3066\u307f\u308b\nrepeat\u3092\u4f7f\u3063\u3066\u306a\u3093\u3061\u3083\u3063\u3066\u30b0\u30e9\u30d5\u3002\nimport std.stdio;\nimport std.range;\nimport std.algorithm;\n\nvoid main() {\n    iota(15)\n        .map!((x) => x ^^ 2)\n        .map!((x) => repeat('|', x))\n        .each!writeln;\n}\n\n\n\n\u307e\u3068\u3081\n\u5168\u90e8\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u304d\u308a\u304c\u306a\u3044\u306e\u3067\u3053\u306e\u3078\u3093\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u304c\u3001phobos\u306b\u306f\u307b\u304b\u306b\u3082\u305f\u304f\u3055\u3093\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305c\u3072\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b91\u306f\u76ee\u3092\u901a\u3057\u3066\u304a\u304f\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\u307e\u305f\u4eca\u56de\u306e\u8a18\u4e8b\u306fphobos\u306e\u6a5f\u80fd\u306e\u7d39\u4ecb\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u81ea\u5206\u81ea\u8eab\u3067\u3053\u308c\u3089\u3092\u7c21\u5358\u306b\u4f5c\u308c\u308b\u3053\u3068\u304c\u30ec\u30f3\u30b8\u306e\u7d20\u6674\u3089\u3057\u3044\u70b9\u3067\u3082\u3042\u308a\u307e\u3059\u3002\u81ea\u4f5c\u95a2\u6570\u3082\u7e54\u308a\u4ea4\u305c\u3066\u3001\u8907\u96d1\u306a\u8a08\u7b97\u3092\u307d\u3093\u3068\u3053\u306a\u3059\u306e\u306f\u5b9f\u306b\u6c17\u6301\u3061\u304c\u3044\u3044\u3082\u306e\u3067\u3059\u3002\u305c\u3072\u3069\u3046\u305e\uff01\n\n\n\n\nstd.range\u3084std.algorithm\u306a\u3069\u3002\u00a0\u21a9\n\n\n\u3053\u306e\u5206\u985e\u306f\u50d5\u304c\u52dd\u624b\u306b\u8003\u3048\u305f\u3082\u306e\u3067\u3059\u3002\u00a0\u21a9\n\n\n\u3053\u306ea,b\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u7b2c\u4e8c\u3001\u7b2c\u4e09\u5f15\u6570\u306b\u3088\u3063\u3066\u81ea\u5206\u3067\u5909\u3048\u3089\u308c\u307e\u3059\u3002\u00a0\u21a9\n\n\n\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\uff08\u306a\u3093\u3068\u4eca\u5e74\u306eAC\u3067\u53d6\u308a\u4e0a\u3052\u3089\u308c\u3066\u3044\u308b\uff01\uff09\u306a\u3069\u306b\u3088\u308a\u3001\u305d\u308c\u305e\u308c\u5bfe\u5fdc\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u3002\u00a0\u21a9\n\n\n\n#\u306f\u3058\u3081\u306b\n\n\u3053\u306e\u8a18\u4e8b\u306f[D\u8a00\u8a9e\u3067\u4eca\u59cb\u3081\u308bRange][prev]\u306e\u7d9a\u304d\u3068\u306a\u308b\u3082\u306e\u3067\u3059\u3002\n\u524d\u56de\u3068\u540c\u3058\u304f\u3001**D\u8a00\u8a9e\u521d\u5fc3\u8005\u5411\u3051**\u3067\u3059\u3002\n\u7279\u6b8a\u306a\u30c6\u30af\u30cb\u30c3\u30af\u89e3\u8aac\u3068\u3044\u3046\u3088\u308a\u3001phobos\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u30ec\u30f3\u30b8\u306b\u95a2\u3059\u308b\u95a2\u6570\u306e\u7d39\u4ecb\u8a18\u4e8b\u3067\u3059\u3002\n\n#D\u8a00\u8a9e\u3067\u4eca\u697d\u3057\u3080Range\n\n\u524d\u306e\u8a18\u4e8b\u3067\u306f\u3001\u30ec\u30f3\u30b8\u3068\u3044\u3046\u6982\u5ff5\u3092\u4f5c\u308b\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\u3068\u3001\u305d\u306e\u9762\u767d\u3055\u306b\u3064\u3044\u3066\u304a\u8a71\u3057\u3057\u307e\u3057\u305f\u3002\u50d5\u304c\u6319\u3052\u305f\u4f8b\u306f\u305f\u3063\u305f3\u3064\u3067\u3057\u305f\u304c\u3001\u5b9f\u969b\u306b\u306f\u305f\u304f\u3055\u3093\u306e\u95a2\u6570\u304cphobos\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306f\u305d\u306e\u305f\u304f\u3055\u3093\u306e\u95a2\u6570\u306e\u3046\u3061\u7279\u306b\u3088\u304f\u4f7f\u3046\u3068\u601d\u308f\u308c\u308b\u3044\u304f\u3064\u304b\u3092\u53d6\u308a\u4e0a\u3052\u3001\u5b9f\u969b\u306b\u3069\u306e\u3088\u3046\u306b\u4f7f\u3046\u306e\u304b\u3001\u3069\u306e\u3088\u3046\u306b\u697d\u3057\u3081\u308b\u304b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n#\u307e\u305a\u77e5\u3063\u3066\u304a\u304d\u305f\u3044\u3053\u3068\n\n\u3053\u308c\u306f\u5225\u306b\u30ec\u30f3\u30b8\u306e\u95a2\u6570\u306b\u9650\u3063\u305f\u3053\u3068\u3058\u3083\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u8aad\u3093\u3067\u3044\u308b\u521d\u5fc3\u8005\uff08\u3064\u307e\u308a\u50d5\uff09\u304c\u56f0\u60d1\u3059\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u70b9\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u3053\u3053\u3067\u305d\u308c\u3092\u89e3\u3044\u3066\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\uff08\u3064\u307e\u308a\u3001\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9[^a]\u3092\u8aad\u3082\u3046\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff01\uff09\n\n##\u5f15\u6570\u3001\u8fd4\u308a\u5024\u306e\u578b\n\n\u30ec\u30f3\u30b8\u3068\u3044\u3046\u5171\u901a\u306e\u6982\u5ff5\u3067\u7406\u89e3\u3067\u304d\u308b\u3053\u3068\u3001\u3064\u307e\u308a**\u30ec\u30f3\u30b8\u3068\u3044\u3046\u6982\u5ff5\u3055\u3048\u77e5\u3063\u3066\u3044\u308c\u3070\u3088\u3044**\u3053\u3068\u306f\u975e\u5e38\u306b\u5927\u304d\u306a\u30e1\u30ea\u30c3\u30c8\u3067\u3059\u3002\u30ec\u30f3\u30b8\u3092\u4f7f\u3044\u305f\u3044\u4eba\u2015\u4f8b\u3048\u3070\u3001\u8981\u7d20\u3092\u3059\u3079\u3066\u8db3\u3057\u305f\u7d50\u679c\u3092\u5f97\u305f\u3044\u4eba\u306a\u3069\u2015\u306f\u3001\u30ec\u30f3\u30b8\u306e\u771f\u306e\u578b(\u69cb\u9020\u4f53Foo\uff1fBar\uff1f\u3044\u3084\u30af\u30e9\u30b9\u304b\uff1f\u305d\u308c\u3068\u3082\u914d\u5217\uff1f)\u3092\u77e5\u308b\u5fc5\u8981\u306f\u306a\u3044\u306e\u3067\u3057\u305f\u3002\u5f7c\u306f\u305d\u306e\u30ec\u30f3\u30b8\u304c`InputRange`\u304b`RandomAccessRange`\u304b\u306a\u3069\u3001\u7a2e\u985e\u3055\u3048\u308f\u304b\u308c\u3070\u5341\u5206\u306a\u306e\u3067\u3059\u3002\n\u305d\u3053\u3067\u3001\u3053\u308c\u304b\u3089\u7d39\u4ecb\u3059\u308b\u95a2\u6570\u306f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u305f\u3069\u308b\u3068\u591a\u304f\u304c\u8fd4\u308a\u5024\u306e\u578b\u3092`auto`\u3084`R`\u306a\u3069\u3068\u3054\u307e\u304b\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\u306a\u305c\u306a\u3089\u305d\u306e`auto`,`R`\u306e\u5b9f\u4f53\u304c\u4f55\u304b\u306a\u3069\u3092\u77e5\u308b\u5fc5\u8981\u306f\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\u307e\u305f\u3001\u5f15\u6570\u3082\u591a\u304f\u304c\u3068\u3066\u3082\u62bd\u8c61\u7684\u306a\u6307\u5b9a\u304c\u306a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u3053\u308c\u306f\u3044\u308d\u3044\u308d\u306a\u578b\u306e\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\u3064\u307e\u308a\u3001\u578b\u3092\u78ba\u8a8d\u3059\u308b\u3088\u308a\u3082**\u3069\u306e\u7a2e\u985e\u306e\u30ec\u30f3\u30b8\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u304b**\u3001**\u5f15\u6570\u306b\u3069\u306e\u30ec\u30f3\u30b8\u3092\u8981\u6c42\u3057\u3066\u3044\u308b\u306e\u304b**\u3092\u3057\u3063\u304b\u308a\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n#\u30ec\u30f3\u30b8\u3092\u6271\u3046\u4e09\u7a2e\u985e\n\n\u305d\u3046\u3044\u3048\u3070\u3001\u524d\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u3044\u305f\u3060\u3044\u305f\u65b9\u306f\u3001\u4e09\u3064\u306e\u3082\u306e\u3092\u4f5c\u3063\u305f\u3053\u3068\u3092\u899a\u3048\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\uff1f\n\n- \u6f38\u5316\u5f0f\u3092\u8868\u3059\u30ec\u30f3\u30b8\n    \uff08\u5f15\u6570\u304b\u3089\u30ec\u30f3\u30b8\u3092\u751f\u6210\u3059\u308b\uff09\n- sum\u95a2\u6570\n    \uff08\u30ec\u30f3\u30b8\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3059\u308b\uff09\n- skip\u95a2\u6570\n    \uff08\u30ec\u30f3\u30b8\u3092\u5909\u5316\u3055\u305b\u308b\uff09\n\n\u3053\u308c\u3089\u306f\u660e\u3089\u304b\u306b\u3001\u305d\u308c\u305e\u308c\u7570\u306a\u308b\u50cd\u304d\u3092\u3057\u3066\u3044\u307e\u3057\u305f\u3002\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\n\n- \u30ec\u30f3\u30b8\u306e\u751f\u6210\n- \u30ec\u30f3\u30b8\u306e\u5229\u7528\n- \u30ec\u30f3\u30b8\u306e\u5909\u5316\n\n\u306e\u4e09\u3064\u306b\u5206\u985e\u3057\u3066\u7d39\u4ecb\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002[^b]\n\n#\u30ec\u30f3\u30b8\u3092\u751f\u6210\u3059\u308b\n\n\u30ec\u30f3\u30b8\u306e\u4e16\u754c\u3078\u5165\u308b\u8d77\u70b9\u3068\u306a\u308b\u95a2\u6570\u305f\u3061\u3067\u3059\u3002\n\n##[iota](http://dlang.org/phobos/std_range.html#.iota)\n\n` 0,1,2,3,... `\u3068\u3044\u3046\u30b7\u30f3\u30d7\u30eb\u306a\u6570\u306e\u30ec\u30f3\u30b8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001`iota(5)`\u306f\u3001`0,1,2,3,4`\u3092\u8868\u3059\u30ec\u30f3\u30b8\u3067\u3059\u3002\u958b\u59cb\u3001\u7d42\u4e86\u3001\u30b9\u30c6\u30c3\u30d7\u3092\u6307\u5b9a\u3067\u304d\u3001\u307e\u305f\u3044\u308d\u3044\u308d\u306a\u578b\u3067\u4f7f\u3048\u307e\u3059\u3002\n\n```d\nimport std.range : iota;\n\nunittest {\n    import std.algorithm : equal;\n    assert(iota(10).equal([0,1,2,3,4,5,6,7,8,9]));      //\u4e00\u5f15\u6570\u306e\u3068\u304d\n    assert(iota(4,10).equal([4,5,6,7,8,9]));            //\u4e8c\u5f15\u6570\u306e\u3068\u304d\n    assert(iota(0,10,2).equal([0,2,4,6,8]));            //\u4e09\u5f15\u6570\u306e\u3068\u304d\n\n    import std.algorithm : sum;\n    assert(iota(10).sum == 45);\n}\n\nunittest {\n    import std.bigint;\n    import std.algorithm : sum;\n    assert(iota(BigInt(10)).sum == BigInt(45));         //BigInt\u3067\u3082\u4f7f\u3048\u308b\u305e\uff01\n}\n```\n\n##[repeat](http://dlang.org/phobos/std_range.html#.repeat)\n\n\u8aad\u3093\u3067\u5b57\u306e\u5982\u304f\u3001\u540c\u3058\u5024\u3092\u7e70\u308a\u8fd4\u3059\u30ec\u30f3\u30b8\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u7121\u9650\u30ec\u30f3\u30b8\u3068\u3057\u3066\u3082\u3001\u500b\u6570\u3092\u6307\u5b9a\u3057\u3066\u3082\u4f7f\u3048\u307e\u3059\u3002\n\n```d\nimport std.range : repeat;\n\nunittest {\n    assert(repeat(3,5).equal([3,3,3,3,3]));\n\n    import std.range : take;\n    import std.algorithm : equal;\n    assert(repeat(3).take(8).equal([3,3,3,3,3,3,3,3]));\n}\n```\n\n#\u30ec\u30f3\u30b8\u3092\u5229\u7528\u3059\u308b\n\n\u30ec\u30f3\u30b8\u306e\u4e2d\u8eab\u3092\u5b9f\u969b\u306b\u5229\u7528\u3059\u308b\u95a2\u6570\u305f\u3061\u3067\u3059\u3002\n\n##[fold](http://dlang.org/phobos/std_algorithm_iteration.html#.fold)\n\n\u4e8c\u5f15\u6570\u306e\u95a2\u6570\u3092\u6b21\u3005\u306b\u9069\u7528\u3057\u3066\u3001\u4e00\u3064\u306e\u5024\u306b\u7573\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n```d\nimport std.algorithm : fold;\n\nunittest {\n    //max(1,5), max(5,2), ...\u3068max\u3092\u6b21\u3005\u3068\u9069\u7528\u3057\u3001\u6700\u5927\u5024\u3092\u5f97\u307e\u3059\u3002\n    import std.algorithm : max;\n    assert([1,5,2,7,3,0].fold!max == 7);\n}\n```\n\n`fold!`\u306b\u7d9a\u304f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306f\u57fa\u672c\u7684\u306b\u4e8c\u5f15\u6570\u95a2\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u4e0a\u8a18\u306e\u4f8b\u3067\u306f\u307e\u305a`max(1,5)`\u304c\u547c\u3070\u308c\u3001\u305d\u306e\u7d50\u679c\u3067\u3042\u308b`5`\u3068\u3001\u3055\u3089\u306b\u6b21\u306e\u8981\u7d20\u3067\u3042\u308b`2`\u3092\u7528\u3044\u3066`max(5,2)`\u304c\u547c\u3070\u308c\u3001\u305d\u306e\u7d50\u679c\u3067\u3042\u308b`5`\u3068\u3055\u3089\u306b\u6b21\u306e\u8981\u7d20\u30fb\u30fb\u30fb\u3068\u3001\u8981\u7d20\u304c\u7573\u307f\u8fbc\u307e\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n\n###\u95a2\u6570\u306e\u6e21\u3057\u65b9\n\n\u3053\u308c\u306f\u30ec\u30f3\u30b8\u306e\u95a2\u6570\u306b\u9650\u3063\u305f\u3053\u3068\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3068\u3057\u3066\u95a2\u6570\u3092\u6e21\u3059\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u6e21\u3057\u65b9\u304c\uff08\u304a\u305d\u3089\u304f\uff09D\u8a00\u8a9e\u72ec\u7279\u306a\u306e\u3067\u3001\u3053\u3053\u3067\u89e6\u308c\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\u4e3b\u306b\u8003\u3048\u3089\u308c\u308b\u6e21\u3057\u65b9\u306f\u4e09\u3064\u3067\u3059\u3002\n\n####\u5358\u7d14\u306b\u95a2\u6570\u3092\u6e21\u3059\n\n\u81ea\u5206\u3067\u4f5c\u308b\u306a\u308a\u3001\u65e2\u5b58\u306e\u3082\u306e\u3092\u4f7f\u3046\u306a\u308a\u3001\u3068\u308a\u3042\u3048\u305a\u540d\u524d\u3092\u66f8\u3051\u3070\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n```\nimport std.algorithm : fold;\n\nunittest {\n    auto result = [1,2,3,4,5].fold!tasu;\n    assert(result == 15);\n}\n\nint tasu(int a, int b) { return a + b; }\n```\n\n####\u95a2\u6570\u30ea\u30c6\u30e9\u30eb\u3092\u76f4\u63a5\u6e21\u3059\n\n\u95a2\u6570\u3092\u308f\u3056\u308f\u3056\u5225\u306e\u5834\u6240\u306b\u66f8\u304f\u306e\u3067\u306f\u306a\u304f\u3001\u95a2\u6570\u3092\u4f7f\u3046\u307e\u3055\u306b\u305d\u306e\u5834\u6240\u306b\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002[\u95a2\u6570\u30ea\u30c6\u30e9\u30eb](https://dlang.org/spec/expression.html#FunctionLiteral)\u306e\u8a18\u6cd5\u306b\u3064\u3044\u3066\u306f\u8a73\u3057\u304f\u66f8\u304d\u307e\u305b\u3093\u304c\u3001\u4e3b\u306b\u4e8c\u901a\u308a\u306e\u66f8\u304d\u65b9\u304c\u3067\u304d\u307e\u3059\u3002\n\n```d\nimport std.algorithm : fold;\n\nunittest {\n    auto result1 = [1,2,3,4,5].fold!(\n            (a,b) { return a + b; }\n            );\n    assert(result1 == 15);\n\n    auto result2 = [1,2,3,4,5].fold!(\n            (a,b) => a + b\n            );\n    assert(result2 == 15);\n}\n```\n\n####\u6587\u5b57\u5217\u3067\u6e21\u3059\n\n\u6700\u3082\u56f0\u60d1\u3055\u308c\u3084\u3059\u3044\u306e\u304c\u3053\u306e\u8a18\u6cd5\u3060\u3068\u601d\u3044\u307e\u3059\u3002D\u8a00\u8a9e\u3067\u306f\u3001\u6587\u5b57\u5217\u304b\u3089\u95a2\u6570\u3092\u751f\u6210\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001[std.functional][std.functional]\u306b\u3042\u308b[unaryFun](https://dlang.org/phobos/std_functional.html#.unaryFun)\u3084[binaryFun](https://dlang.org/phobos/std_functional.html#.binaryFun)\u304c\u305d\u3046\u3067\u3059\u3002\n\u3053\u308c\u3089\u306f\u4e0e\u3048\u3089\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u304c\u95a2\u6570\u306a\u3089\u305d\u306e\u307e\u307e\u7d20\u901a\u308a\u3055\u305b\u3001\u6587\u5b57\u5217\u306a\u3089\u6307\u5b9a\u3057\u305f\u6587\u5b57\u3092\u5f15\u6570\u306e\u3088\u3046\u306b\u307f\u306a\u3057\u3066\u95a2\u6570\u3092\u751f\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3064\u307e\u308a\u3001\n\n```d\nimport std.functional : unaryFun, binaryFun;\n\nunittest {\n    alias myIncrement = unaryFun!\"a + 1\";\n    alias myPlus = binaryFun!\"a + b\";\n\n    assert(myIncrement(1) == 2);\n    assert(myPlus(1,2) == 3);\n}\n```\n\n\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\u3053\u306e`a`\u3084`b`\u306f\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u8a2d\u5b9a\u304b\u3089\u6765\u3066\u3044\u307e\u3059[^c]\u3002\n\u3064\u307e\u308a\u3001`fold`\u306b\u306f\u3053\u3093\u306a\u66f8\u304d\u65b9\u3082\u3067\u304d\u307e\u3059\u306d\u3002\n\n```d\nimport std.algorithm : fold;\n\nunittest {\n    assert([1,2,3,4,5].fold!\"a + b\" == 15);\n}\n```\n\n##[each](http://dlang.org/phobos/std_algorithm_iteration.html#each)\n\neach\u306f\u3053\u306e\u7a2e\u306e\u95a2\u6570\u306e\u4e2d\u3067\u3082\u5c11\u3057\u7279\u6b8a\u3067\u3001\u8fd4\u308a\u5024\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u3042\u308b\u95a2\u6570\u306b\u8981\u7d20\u3092\u6b21\u3005\u3068\u6e21\u3057\u3001\u5b9f\u884c\u3057\u305f\u3089\u8fd4\u308a\u5024\u306f\u6c17\u306b\u305b\u305a\u304a\u3057\u307e\u3044\uff01\u3068\u3044\u3046\u95a2\u6570\u3067\u3059\u3002\n\u50d5\u306f\u3053\u308c\u3092`writeln`\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u306e\u304c\u597d\u304d\u3067\u3059\u3002\n\n```d\nimport std.algorithm : each;\n\nvoid main() {\n    import std.stdio : writeln;\n    [1,2,3,4,5]\n        .each!writeln;\n}\n```\n\n`.each!writeln`\u3068\u5f8c\u308d\u306b\u66f8\u304f\u3060\u3051\u3067\u8981\u7d20\u3092\u5168\u90e8\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059\uff01\n\u3082\u3046\u3072\u3068\u3064\u3088\u304f\u4f7f\u3046\u306e\u306f\u3001`.each`\u3092\u305d\u306e\u307e\u307e\u66f8\u304d\u305d\u306e\u6642\u70b9\u3067\u30ec\u30f3\u30b8\u3092\u8a55\u4fa1\u3057\u3066\u4f7f\u3044\u5207\u308b\u3068\u3044\u3046\u4f7f\u3044\u65b9\u3067\u3059\u3002\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u81ea\u5206\u3067\u597d\u304d\u306a\u6642\u306b\u30ec\u30f3\u30b8\u306e\u8a08\u7b97\u3092\u884c\u308f\u305b\u3001\u6642\u9593\u3092\u8a08\u6e2c\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\n\n```d\nimport std.algorithm : each;\n\nvoid main() {\n    import std.range : iota;\n    import std.stdio : writeln;\n    import std.datetime : benchmark;\n    auto bench = benchmark!(() => iota(10000).each)(1000);\n\n    //\u4f55\u30df\u30ea\u79d2\u304b\u304b\u308b\u304b\u898b\u307e\u3059\u3002(\u914d\u5217\u3067\u7d50\u679c\u304c\u3082\u3089\u3048\u308b\u306e\u3067\u5168\u90e8\u8868\u793a\u3059\u308b\u306e\u306beach\u3057\u307e\u3057\u3087\u3046\uff01)\n    bench.each!((t) => t.msecs.writeln);\n}\n```\n\n##[equal](http://dlang.org/phobos/std_algorithm_comparison.html#.equal)\n\n\u524d\u56de\u306e\u8a18\u4e8b\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u914d\u5217\u3068\u30ec\u30f3\u30b8\u3068\u304b\u3001\u30ec\u30f3\u30b8\u3068\u4ed6\u306e\u7a2e\u985e\u306e\u30ec\u30f3\u30b8\u3068\u304b\u3001\u9055\u3046\u578b\u540c\u58eb\u306e\u6bd4\u8f03\u306f\u666e\u901a\u3067\u304d\u307e\u305b\u3093[^d]\u3002\u3057\u304b\u3057\u3053\u306e\u95a2\u6570\u3092\u4f7f\u3048\u3070\u3001\u8981\u7d20\u3092\u4e00\u3064\u305a\u3064\u4e01\u5be7\u306b\u6bd4\u8f03\u3057\u3066\u304f\u308c\u307e\u3059\u306e\u3067\u3001\u8981\u7d20\u540c\u58eb\u304c\u6bd4\u8f03\u53ef\u80fd\u306a\u3089\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```d\nimport std.algorithm : equal;\nimport std.range : iota;\n\nunittest {\n    //assert(iota(5) == [0,1,2,3,4]);       //error! (iota\u306e)Result\u3068int[]\u306f\u6bd4\u8f03\u3067\u304d\u306a\u3044\uff01\n    assert(iota(5).equal([0,1,2,3,4]));     //\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u306f\u6bd4\u8f03\u53ef\u80fd\n}\n```\n\n\u3055\u3089\u306b\u3053\u306eequal\u306f\u6bd4\u8f03\u65b9\u6cd5\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3067\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u30ec\u30f3\u30b8\u3092\u8981\u7d20\u306b\u3082\u3064\u30ec\u30f3\u30b8\u3092\u6bd4\u8f03\u3059\u308b\u3068\u304d\u306a\u3069\u306b\u4fbf\u5229\u3067\u3059\u3002\n\n```\nimport std.algorithm : equal;\nimport std.range : iota;\n\nunittest {\n    //assert([iota(3), iota(5)].equal([[0,1,2], [0,1,2,3,4]]));     //error! \u5404\u8981\u7d20\u306fResult\u3068int[]\u306e\u307e\u307e\u306a\u306e\u3067\u6bd4\u8f03\u3067\u304d\u306a\u3044\uff01\n    assert([iota(3), iota(5)].equal!equal([[0,1,2], [0,1,2,3,4]])); //\u30ec\u30f3\u30b8\u306e\u5404\u8981\u7d20\u3092\u3055\u3089\u306bequal\u3067\u6bd4\u8f03\u3057\u307e\u3059\u3002\n}\n```\n\n#\u30ec\u30f3\u30b8\u3092\u5909\u5316\u3055\u305b\u308b\n\n\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001\u4f55\u3089\u304b\u306e\u64cd\u4f5c\u3092\u52a0\u3048\u305f\u30ec\u30f3\u30b8\u3092\u8fd4\u3059\u95a2\u6570\u305f\u3061\u3067\u3059\u3002\n\n##[map](http://dlang.org/phobos/std_algorithm_iteration.html#.map)\n\n\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u306b\u95a2\u6570\u3092\u9069\u7528\u3057\u3066\u65b0\u305f\u306a\u30ec\u30f3\u30b8\u306b\u3057\u307e\u3059\u3002\n\u975e\u5e38\u306b\u6c4e\u7528\u6027\u306e\u9ad8\u3044\u95a2\u6570\u3067\u3001\u3044\u308d\u3093\u306a\u3068\u3053\u308d\u3067\u4f7f\u3048\u307e\u3059\u3002\n\n```d\nimport std.algorithm : map;\n\nunittest {\n    import std.range : iota;\n    import std.algorithm : equal;\n    assert(iota(5).map!\"a ^^ 2\".equal([0,1,4,9,16]));    //\u305d\u308c\u305e\u308c\u306e\u8981\u7d20\u3092\u4e8c\u4e57\u3057\u307e\u3059\u3002\n    auto rangeOfRange = iota(5).map!((x) => iota(x));   //\u30ec\u30f3\u30b8\u306e\u30ec\u30f3\u30b8\u3092\u4f5c\u308b\u3053\u3068\u3082\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\uff01\n}\n```\n\n##[filter](http://dlang.org/phobos/std_algorithm_iteration.html#.filter)\n\n\u8981\u7d20\u306e\u3046\u3061\u6761\u4ef6\u306b\u5408\u81f4\u3057\u305f\u3082\u306e\u3060\u3051\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002\n\n```d\nimport std.algorithm : filter;\n\nunittest {\n    import std.range : iota;\n    import std.algorithm : equal;\n    //3\u306e\u500d\u6570\u304b5\u306e\u500d\u6570\u306e\u3082\u306e\u3060\u3051\u3092\u62bd\u51fa\u3057\u307e\u3059\u3002\n    assert(iota(30).filter!((x) => x % 3 == 0 || x % 5 == 0)\n            .equal([0,3,5,6,9,10,12,15,18,20,21,24,25,27]));\n}\n```\n\n#\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u904a\u307c\u3046\n\n##0\u304b\u30899\u307e\u3067\u306e\u6570\u306e\u4e8c\u4e57\u306e\u548c\u3092\u6c42\u3081\u308b\n\n```d\nimport std.stdio;\nimport std.range;\nimport std.algorithm;\n\nvoid main() {\n    iota(10)\n        .map!((x) => x^^2)\n        .sum\n        .writeln;\n}\n```\n\n##9999\u307e\u3067\u306e\u6570\u306e\u4e8c\u4e57\u306e\u548c\u3092\u6c42\u3081\u308b\n\nBigInt\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u5927\u304d\u3044\u6570\u3067\u3082\u6271\u3048\u307e\u3059\u3002\n\n```d\nimport std.stdio;\nimport std.range;\nimport std.algorithm;\n\nvoid main() {\n    import std.bigint;\n    iota(BigInt(10000))\n        .map!((x) => x ^^ 2)\n        .sum\n        .writeln;\n}\n```\n\n##\u4e8c\u6b21\u95a2\u6570\u306e\u30b0\u30e9\u30d5\u3092\u4f5c\u3063\u3066\u307f\u308b\n\nrepeat\u3092\u4f7f\u3063\u3066\u306a\u3093\u3061\u3083\u3063\u3066\u30b0\u30e9\u30d5\u3002\n\n```d\nimport std.stdio;\nimport std.range;\nimport std.algorithm;\n\nvoid main() {\n    iota(15)\n        .map!((x) => x ^^ 2)\n        .map!((x) => repeat('|', x))\n        .each!writeln;\n}\n\n```\n\n#\u307e\u3068\u3081\n\u5168\u90e8\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u304d\u308a\u304c\u306a\u3044\u306e\u3067\u3053\u306e\u3078\u3093\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u304c\u3001phobos\u306b\u306f\u307b\u304b\u306b\u3082\u305f\u304f\u3055\u3093\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305c\u3072\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9[^a]\u306f\u76ee\u3092\u901a\u3057\u3066\u304a\u304f\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\u307e\u305f\u4eca\u56de\u306e\u8a18\u4e8b\u306fphobos\u306e\u6a5f\u80fd\u306e\u7d39\u4ecb\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u81ea\u5206\u81ea\u8eab\u3067\u3053\u308c\u3089\u3092\u7c21\u5358\u306b\u4f5c\u308c\u308b\u3053\u3068\u304c\u30ec\u30f3\u30b8\u306e\u7d20\u6674\u3089\u3057\u3044\u70b9\u3067\u3082\u3042\u308a\u307e\u3059\u3002\u81ea\u4f5c\u95a2\u6570\u3082\u7e54\u308a\u4ea4\u305c\u3066\u3001\u8907\u96d1\u306a\u8a08\u7b97\u3092\u307d\u3093\u3068\u3053\u306a\u3059\u306e\u306f\u5b9f\u306b\u6c17\u6301\u3061\u304c\u3044\u3044\u3082\u306e\u3067\u3059\u3002\u305c\u3072\u3069\u3046\u305e\uff01\n\n[^a]: [std.range](http://dlang.org/phobos/std_range.html)\u3084[std.algorithm](http://dlang.org/phobos/std_algorithm.html)\u306a\u3069\u3002\n[^b]: \u3053\u306e\u5206\u985e\u306f\u50d5\u304c\u52dd\u624b\u306b\u8003\u3048\u305f\u3082\u306e\u3067\u3059\u3002\n[^c]: \u3053\u306ea,b\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u7b2c\u4e8c\u3001\u7b2c\u4e09\u5f15\u6570\u306b\u3088\u3063\u3066\u81ea\u5206\u3067\u5909\u3048\u3089\u308c\u307e\u3059\u3002\n[^d]: [\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9](http://qiita.com/kiridaruma/items/39cdff9b28573ff440a9)\uff08\u306a\u3093\u3068\u4eca\u5e74\u306eAC\u3067\u53d6\u308a\u4e0a\u3052\u3089\u308c\u3066\u3044\u308b\uff01\uff09\u306a\u3069\u306b\u3088\u308a\u3001\u305d\u308c\u305e\u308c\u5bfe\u5fdc\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u3002\n\n[prev]: http://qiita.com/umarider/items/e0936c6afdcdf4522cc7\n[std.functional]: https://dlang.org/phobos/std_functional.html\n", "tags": ["D\u8a00\u8a9e", "dlang", "Range"]}