{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\n\u672a\u77e5\u8a9e\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\n\u6b21\u306fkuromoji\u306esearch mode\u3092\u6a21\u5023\u3057\u305f\u3044\uff0e\u30e6\u30fc\u30b6\u30fc\u8f9e\u66f8\u3082\uff0e\n\u30b3\u30fc\u30c9\u3092github\u306b\u3053\u3063\u305d\u308a\u4e0a\u3052\u3066\u307f\u307e\u3057\u305f\uff0egolang \u306e\u4f5c\u6cd5\u304c\u3042\u3093\u307e\u308a\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u306e\u3067\u30b3\u30e1\u30f3\u30c8\u3082\u3089\u3048\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\uff0e\n\n\n\u306f\u3058\u3081\u306b\n\u672a\u77e5\u8a9e\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\uff0c\u305d\u308c\u3068\u306a\u304f\u52d5\u304f\u3068\u3053\u308d\u307e\u3067\u6301\u3063\u3066\u884c\u304f\u306e\u304c\u76ee\u6a19\u3067\u3059\uff0e\n\u672a\u77e5\u8a9e\u51e6\u7406\u306a\u3057\uff1a (\u73fe\u72b6)\n\n\u672a\u77e5\u8a9e\u51e6\u7406\u3042\u308a\uff1a (\u76ee\u6a19)\n\n\u3053\u3093\u306a\u611f\u3058\u306b\uff0c\u4eca\u306f\u672a\u77e5\u8a9e\u306e\u51e6\u7406\u3092\u3057\u3066\u3044\u306a\u3044\u306e\u3067\uff0c\u30e9\u30c6\u30a3\u30b9\u304c\u672b\u5c3e\u304b\u3089\u5148\u982d\u307e\u3067\u8fbf\u308c\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u306a\u3093\u3068\u304b\u3057\u307e\u3059\uff0e\uff08\u30c8\u30c8\u30ed\u304c\u8f9e\u66f8\u306b\u306a\u3044\u306e\u3067\uff0c\u305d\u3053\u306e\u9023\u7d50\u304c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\uff0e\uff09\n\n\u524d\u56de\u307e\u3067\u306e\u3042\u3089\u3059\u3058\n\nPure Go \u306a\u5f62\u614b\u7d20\u89e3\u6790\u5668\u3067\uff0c\u8f9e\u66f8\u540c\u68b1\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u4f5c\u308b\nMeCab\u8f9e\u66f8\u3092 go \u30bd\u30fc\u30b9\u306b\u5909\u63db\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\n\u30bd\u30fc\u30b9\u5927\u304d\u3044 & \u30b3\u30f3\u30d1\u30a4\u30eb\u9045\u3044 (\u624b\u5143\u306e Mac:Core i7 2.9GHz\u306730\u5206\u307b\u3069)\n\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u306e\u30b5\u30a4\u30ba\u306f100MB\u7a0b\u5ea6\u306b\u306a\u3063\u305f\n\u672a\u77e5\u8a9e\u51e6\u7406\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\uff0c\u30ce\u30fc\u30c9\u304c\u9023\u7d50\u3057\u306a\u3044\u5834\u5408\u304c\u3042\u308b \u2190 \u2605\u4eca\u56de\u3053\u308c\u306b\u5bfe\u5fdc\u3059\u308b\n\n\n\u53c2\u8003\n\u4e0b\u8a18\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\uff0e\n\nkuromoji\n\u65e5\u672c\u8a9e\u5165\u529b\u3092\u652f\u3048\u308b\u6280\u8853\n\nMecab\n\n\u54c1\u8a5eID\u306e\u5b9a\u7fa9\n\n\n\n\n\u672a\u77e5\u8a9e\u51e6\u7406\u306e\u57fa\u672c\u6226\u7565\n\u5165\u529b\u6587\u5b57\u5217\u3092\u524d\u304b\u3089\u4e00\u3064\u305a\u3064\u305a\u3089\u3057\u3066 CommonPrefixSearch \u3057\u3066\uff0c\u305d\u306e\u4f4d\u7f6e\u304b\u3089\u59cb\u307e\u308b\u5f62\u614b\u7d20\u3092\u30e9\u30c6\u30a3\u30b9\u306e\u30ce\u30fc\u30c9\u306b\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\u3042\u308b\u4f4d\u7f6e\u304b\u3089\u59cb\u307e\u308b\u5f62\u614b\u7d20\u304c\u8f9e\u66f8\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u304d\uff0c\u305d\u306e\u4f4d\u7f6e\u304b\u3089\u59cb\u307e\u308b\u6587\u5b57\u5217\u3092\u6587\u5b57\u7a2e\u3067\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3066\u672a\u77e5\u8a9e\u30ce\u30fc\u30c9\u3068\u3057\u3066\u30e9\u30c6\u30a3\u30b9\u306b\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\nMeCab-IPADIC \u306e\u8a2d\u5b9a\nMeCab \u306e\u672a\u77e5\u8a9e\u95a2\u9023\u306e\u8a2d\u5b9a\u306f\uff0cchar.def \u3068 unk.def \u306e2\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u3059\uff0e\n\n\u672a\u77e5\u8a9e\u51e6\u7406\u3092\u8d77\u52d5\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u8a2d\u5b9a\nchar.def \u306e\u982d\u306e\u65b9\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a2d\u5b9a\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\uff0e\n\u5de6\u304b\u3089\n\nCATEGORY_NAME: \u30ab\u30c6\u30b4\u30ea\u540d\nINVOKE: 1 \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30ab\u30c6\u30b4\u30ea\u306f\u5e38\u306b\u672a\u77e5\u8a9e\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\uff0e\u305d\u3046\u3067\u306a\u3051\u308c\u3070\uff0c\u305d\u306e\u4f4d\u7f6e\u304b\u3089\u59cb\u307e\u308b\u30ce\u30fc\u30c9\u304c\u306a\u3044\u3068\u304d\u3060\u3051\u8ffd\u52a0\uff0e\nGROUP: \u5148\u982d\u3068\u540c\u3058\u6587\u5b57\u7a2e\u306e\u6587\u5b57\u5217\u3092\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3066\u672a\u77e5\u8a9e\u3068\u3059\u308b\uff0e\nLENGTH: \u9577\u3055 1 \u304b\u3089 n \u307e\u3067\u306e\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\uff0e\n\n\nchar.def[\u629c\u7c8b]\n###################################################################################\n#\n#  CHARACTER CATEGORY DEFINITION\n#\n#  CATEGORY_NAME INVOKE GROUP LENGTH\n#\n#   - CATEGORY_NAME: Name of category. you have to define DEFAULT class.\n#   - INVOKE: 1/0:   always invoke unknown word processing, evan when the word can be found in the lexicon\n#   - GROUP:  1/0:   make a new word by grouping the same chracter category\n#   - LENGTH: n:     1 to n length new words are added\n#\nDEFAULT        0 1 0  # DEFAULT is a mandatory category!\nSPACE          0 1 0\nKANJI          0 0 2\nSYMBOL         1 1 0\nNUMERIC        1 1 0\nALPHA          1 1 0\nHIRAGANA       0 1 2\nKATAKANA       1 1 2\nKANJINUMERIC   1 1 0\nGREEK          1 1 0\nCYRILLIC       1 1 0\n\n\n\u3075\u3080\u3075\u3080\uff0e\u8a18\u53f7\u3068\u304b\u6765\u305f\u3089\u5e38\u306b\u672a\u77e5\u8a9e\u51e6\u7406\u304c\u50cd\u304f\u3051\u3069\uff0c\u6f22\u5b57\u3084\u3072\u3089\u304c\u306a\u306e\u6642\u306f\u305d\u306e\u4f4d\u7f6e\u304b\u3089\u59cb\u307e\u308b\u30ce\u30fc\u30c9\u304c\u4f5c\u308c\u306a\u3044\u3068\u304d\u3060\u3051\u672a\u77e5\u8a9e\u51e6\u7406\u3059\u308c\u3070\u3044\u3044\u306e\u306d \u03c6(\uff0e\uff0e)\uff0e\n\n\u6587\u5b57\u7a2e\u306e\u8a2d\u5b9a\nchar.def \u306e\u6b8b\u308a\u306e\u90e8\u5206\u306b\u306f\uff0c\u5404\u6587\u5b57\u304c\u3069\u306e\u6587\u5b57\u7a2e\u306b\u542b\u307e\u308c\u308b\u304b\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\uff0e\u6587\u5b57\u306f UCS2 \u3067\u8868\u3055\u308c\u3066\u3044\u307e\u3059\uff0eUCS2 \u306f golang \u3067\u3044\u3048\u3070 rune \u306b\u3042\u305f\u308a\u307e\u3059\uff0e\u3053\u306e\u8868\u3092 rune \u3092\u8abf\u3079\u3066\u3069\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u5f53\u3066\u306f\u307e\u308b\u304b\u5206\u304b\u308c\u3070\u3044\u3044\u306e\u3067\u3059\u306d\uff0e\n\nchar.def[\u629c\u7c8b]\n###################################################################################\n#\n# CODE(UCS2) TO CATEGORY MAPPING\n#\n\n# SPACE\n0x0020 SPACE  # DO NOT REMOVE THIS LINE, 0x0020 is reserved for SPACE\n0x00D0 SPACE\n0x0009 SPACE\n0x000B SPACE\n0x000A SPACE\n\n# ASCII\n0x0021..0x002F SYMBOL\n0x0030..0x0039 NUMERIC\n0x003A..0x0040 SYMBOL\n0x0041..0x005A ALPHA\n0x005B..0x0060 SYMBOL\n0x0061..0x007A ALPHA\n0x007B..0x007E SYMBOL\n\n\n\u3088\u304f\u898b\u308b\u3068\uff0c\u8907\u6570\u30af\u30e9\u30b9\u306b\u307e\u305f\u304c\u308b\u5834\u5408\u3082\u3042\u308b\u3088\u3046\u3067\u3059\uff0e\n\nchar.def[\u629c\u7c8b]\n# KANJI-NUMERIC (\u4e00 \u4e8c \u4e09 \u56db \u4e94 \u516d \u4e03 \u516b \u4e5d \u5341 \u767e \u5343 \u4e07 \u5104 \u5146)\n0x4E00 KANJINUMERIC KANJI\n0x4E8C KANJINUMERIC KANJI\n0x4E09 KANJINUMERIC KANJI\n0x56DB KANJINUMERIC KANJI\n0x4E94 KANJINUMERIC KANJI\n0x516D KANJINUMERIC KANJI\n\n\n\n\u672a\u77e5\u8a9e\u30ab\u30c6\u30b4\u30ea\u306e\u30b3\u30b9\u30c8\n\u672a\u77e5\u8a9e\u306e\u30ab\u30c6\u30b4\u30ea(ALPHA \u3068\u304b KANJI \u3068\u304b)\u306b\u3064\u3044\u3066\uff0cunk.def \u306b\u54c1\u8a5e\u3084\u91cd\u307f\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\nunk.def[\u629c\u7c8b]\nDEFAULT,5,5,4769,\u8a18\u53f7,\u4e00\u822c,*,*,*,*,*\nSPACE,9,9,8903,\u8a18\u53f7,\u7a7a\u767d,*,*,*,*,*\nKANJI,1285,1285,11426,\u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\nKANJI,1283,1283,17290,\u540d\u8a5e,\u30b5\u5909\u63a5\u7d9a,*,*,*,*,*\nKANJI,1293,1293,17611,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u5730\u57df,\u4e00\u822c,*,*,*\nKANJI,1292,1292,12649,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u7d44\u7e54,*,*,*,*\nKANJI,1289,1289,17340,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4eba\u540d,\u4e00\u822c,*,*,*\nKANJI,1288,1288,15295,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4e00\u822c,*,*,*,*\nSYMBOL,1283,1283,17585,\u540d\u8a5e,\u30b5\u5909\u63a5\u7d9a,*,*,*,*,*\nNUMERIC,1295,1295,27386,\u540d\u8a5e,\u6570,*,*,*,*,*\nALPHA,1285,1285,13398,\u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\nALPHA,1293,1293,18706,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u5730\u57df,\u4e00\u822c,*,*,*\nALPHA,1292,1292,13835,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u7d44\u7e54,*,*,*,*\nALPHA,1289,1289,18188,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4eba\u540d,\u4e00\u822c,*,*,*\nALPHA,1288,1288,15673,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4e00\u822c,*,*,*,*\nALPHA,3,3,15235,\u611f\u52d5\u8a5e,*,*,*,*,*,*\nHIRAGANA,1285,1285,13069,\u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\nHIRAGANA,1283,1283,20223,\u540d\u8a5e,\u30b5\u5909\u63a5\u7d9a,*,*,*,*,*\nHIRAGANA,1293,1293,17882,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u5730\u57df,\u4e00\u822c,*,*,*\nHIRAGANA,1292,1292,14761,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u7d44\u7e54,*,*,*,*\nHIRAGANA,1289,1289,18060,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4eba\u540d,\u4e00\u822c,*,*,*\nHIRAGANA,1288,1288,14787,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4e00\u822c,*,*,*,*\nHIRAGANA,3,3,16989,\u611f\u52d5\u8a5e,*,*,*,*,*,*\nKATAKANA,1285,1285,9461,\u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\nKATAKANA,1293,1293,13661,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u5730\u57df,\u4e00\u822c,*,*,*\nKATAKANA,1292,1292,10922,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u7d44\u7e54,*,*,*,*\nKATAKANA,1289,1289,13581,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4eba\u540d,\u4e00\u822c,*,*,*\nKATAKANA,1288,1288,10521,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4e00\u822c,*,*,*,*\nKATAKANA,3,3,14138,\u611f\u52d5\u8a5e,*,*,*,*,*,*\nKANJINUMERIC,1295,1295,27473,\u540d\u8a5e,\u6570,*,*,*,*,*\nGREEK,1285,1285,7884,\u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\nGREEK,1293,1293,12681,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u5730\u57df,\u4e00\u822c,*,*,*\nGREEK,1292,1292,8573,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u7d44\u7e54,*,*,*,*\nGREEK,1289,1289,12697,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4eba\u540d,\u4e00\u822c,*,*,*\nGREEK,1288,1288,10029,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4e00\u822c,*,*,*,*\nCYRILLIC,1285,1285,7966,\u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\nCYRILLIC,1293,1293,12600,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u5730\u57df,\u4e00\u822c,*,*,*\nCYRILLIC,1292,1292,8492,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u7d44\u7e54,*,*,*,*\nCYRILLIC,1289,1289,12615,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4eba\u540d,\u4e00\u822c,*,*,*\nCYRILLIC,1288,1288,9866,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4e00\u822c,*,*,*,*\n\n\n\n\u3069\u3046\u3084\u3063\u3066 golang \u306e\u30b3\u30fc\u30c9\u306b\u843d\u3068\u3059\u304b\uff1f\n\u3042\u308b\u6587\u5b57\u304c\u3075\u304f\u3059\u3046\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u542b\u307e\u308c\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u304c\u9762\u5012\u3067\u3059\uff0e\u3053\u308c\uff0ckuromoji \u3067\u306f\u3069\u3046\u3084\u3063\u3066\u51e6\u7406\u3057\u3066\u308b\u3093\u3067\u3057\u3087\u3046\u304b\uff1fkuromoji \u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u307e\u3059\uff0ekuromoji \u306f github \u306b\u3042\u304c\u3063\u3066\u308b\u307b\u3046\u3058\u3083\u306a\u304f\u3066\uff0clucene \u306b\u542b\u307e\u308c\u3066\u3044\u308b\u65b9\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\uff0e\n\nkuromoji(UnknownDictionaryBuilder.java)\n  public void readCharacterDefinition(String filename, UnknownDictionaryWriter dictionary) throws IOException {\n    FileInputStream inputStream = new FileInputStream(filename);\n    InputStreamReader streamReader = new InputStreamReader(inputStream, encoding);\n    LineNumberReader lineReader = new LineNumberReader(streamReader);\n\n    String line = null;\n\n    while ((line = lineReader.readLine()) != null) {\n      line = line.replaceAll(\"^\\\\s\", \"\");\n      line = line.replaceAll(\"\\\\s*#.*\", \"\");\n      line = line.replaceAll(\"\\\\s+\", \" \");\n\n      // Skip empty line or comment line\n      if(line.length() == 0) {\n        continue;\n      }\n\n      if(line.startsWith(\"0x\")) {  // Category mapping\n        String[] values = line.split(\" \", 2);  // Split only first space\n\n        if(!values[0].contains(\"..\")) {\n          int cp = Integer.decode(values[0]).intValue();\n          dictionary.putCharacterCategory(cp, values[1]);\n        } else {\n          String[] codePoints = values[0].split(\"\\\\.\\\\.\");\n          int cpFrom = Integer.decode(codePoints[0]).intValue();\n          int cpTo = Integer.decode(codePoints[1]).intValue();\n\n          for(int i = cpFrom; i <= cpTo; i++){\n            dictionary.putCharacterCategory(i, values[1]);\n          }\n        }\n      } else {  // Invoke definition\n        String[] values = line.split(\" \"); // Consecutive space is merged above\n        String characterClassName = values[0];\n        int invoke = Integer.parseInt(values[1]);\n        int group = Integer.parseInt(values[2]);\n        int length = Integer.parseInt(values[3]);\n        dictionary.putInvokeDefinition(characterClassName, invoke, group, length);\n      }\n    }\n  }\n\n\n\u3075\u3080\u3075\u3080\u03c6(\uff0e\uff0e)\uff0e\u3060\u3044\u305f\u3044\u3053\u3093\u306a\u611f\u3058\u304b (\u610f\u8a33\u542b\u3080)\n\n\u6587\u5b57\u306f UCS2 \u306a\u306e\u3067 65536 \u7a2e\u985e\u3057\u304b\u306a\u3044\u306e\u3067\uff0c65536 byte \u306e\u30d0\u30a4\u30c8\u5217\u3092\u7528\u610f\u3057\u3066\uff0c\u305d\u3053\u306b\u6587\u5b57\u30ab\u30c6\u30b4\u30ea\u3092\u30bb\u30c3\u30c8\u3059\u308b\uff0e\n\u6587\u5b57\u30ab\u30c6\u30b4\u30ea\u306f\u6700\u521d\u306e\u30ab\u30c6\u30b4\u30ea\u3092\u8a18\u9332\uff0e\u8907\u6570\u3042\u3063\u3066\u3082\u7121\u8996 orz\uff0e\n\u672a\u77e5\u8a9e\u51e6\u7406\u306e\u8d77\u52d5\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306f\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u3063\u3066\u8a18\u9332\u3057\u3066\u304a\u304f\uff0c\n\n\u305d\u3046\u3067\u3059\u304b\uff0c\u30ab\u30c6\u30b4\u30ea\u304c\u8907\u6570\u6307\u5b9a\u3057\u3066\u3042\u3063\u3066\u3082\u95a2\u4fc2\u306a\u3044\u306e\u306d\u30fb\u30fb\u30fb\n\n\u30e9\u30c6\u30a3\u30b9\u3092\u4f5c\u308d\u3046\n\u51e6\u7406\u306f\u3053\u3093\u306a\u611f\u3058\uff0e\n\u5165\u529b\u6587\u5b57\u3092\u5148\u982d\u304b\u3089\u4e00\u6587\u5b57\u305a\u3064\u8aad\u307f\u306a\u304c\u3089\u4ee5\u4e0b\u3092\u7e70\u308a\u8fd4\u3059\uff0e\n1. \u30e6\u30fc\u30b6\u30fc\u8f9e\u66f8\u3092\u5f15\u304f (\u672a\u5b9f\u88c5)\n2. \u5f62\u614b\u7d20\u8f9e\u66f8\u3092\u5f15\u304f\n3. \u672a\u77e5\u8a9e\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\uff0e\n\u305f\u3060\u3057\uff0c(3) \u3067\u672a\u77e5\u8a9e\u51e6\u7406\u304c\u8d77\u52d5\u3059\u308b\u306e\u306f\uff0c (2)\u3067\u8f9e\u66f8\u304c\u5f15\u3051\u306a\u304b\u3063\u305f\u5834\u5408\u304b\uff0c\u73fe\u5728\u51e6\u7406\u3057\u3066\u3044\u308b\u6587\u5b57\u304c\uff0c\u672a\u77e5\u8a9e\u51e6\u7406\u3092\u5e38\u306b\u8d77\u52d5\u3059\u308b\u5834\u5408\uff0e\ngolang \u306f\u6587\u5b57\u5217\u3092 byte \u3067\u3082 rune \u3067\u3082\u8868\u73fe\u3067\u304d\u308b\u306e\u3067\uff0c\u305d\u306e\u8fba\u304c\u3053\u3093\u304c\u3089\u304c\u3089\u306a\u3044\u3088\u3046\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u6c17\u3092\u3064\u3051\u3066\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\uff0e\u30b3\u30fc\u30c9\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\uff0echar.def \u3067\u672a\u77e5\u8a9e\u306e\u6700\u5927\u9577\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u305f\u3051\u3069\uff0ckuromoji \u306e\u51e6\u7406\u3092\u8aad\u3093\u3060\u3089\uff0c\u305d\u306e\u5024\u306f\u4f7f\u308f\u308c\u3066\u306a\u304b\u3063\u305f\u306e\u3067\uff0c\u3068\u308a\u3042\u3048\u305a\u7121\u8996 (^^\u309e\uff0e\n\nlattice.go\nfunc (this *Lattice) build(a_input *string) (err error) {\n        this.input = []byte(*a_input)\n\n        runeCount := utf8.RuneCount(this.input)\n        this.list = make([][]Node, runeCount+2)\n\n        this.list[0] = append(this.list[0], Node{id: BOSEOS, class: KNOWN, start: 0})\n        this.list[len(this.list)-1] = append(this.list[len(this.list)-1], Node{id: BOSEOS, class: KNOWN, start: len(this.list) - 2})\n\n        chPos := -1\n        for bufPos, ch := range *a_input {\n                chPos++\n\n                // (1) TODO: USER DIC\n                anyMatches := false\n                if anyMatches {\n                        continue\n                }\n                // (2) KNOWN DIC\n                prefixs, ids := dic.Index.CommonPrefixSearchBytes(this.input[bufPos:])\n                anyMatches = len(prefixs) > 0\n                for key, substr := range prefixs {\n                        id := ids[key]\n                        c, ok := dic.Counts[id]\n                        if !ok {\n                                c = 1\n                        }\n                        for x := 0; x < c; x++ {\n                                this.addNode(id+x, chPos, bufPos, bufPos+len(substr), KNOWN)\n                        }\n                }\n                // (3) UNKNOWN DIC\n                if !anyMatches || dic.InvokeList[dic.CharacterCategoryList[ch]] {\n                        class := dic.CharacterCategoryList[ch]\n                        endPos := bufPos + utf8.RuneLen(ch)\n                        unkWordLen := 1\n                        for i, w, size := endPos, 1, len(this.input); i < size; i += w {\n                                var c rune\n                                c, w = utf8.DecodeRune(this.input[i:])\n                                if dic.CharacterCategoryList[c] != class {\n                                        break\n                                }\n                                endPos += w\n                                unkWordLen++\n                                if unkWordLen >= _MAX_UNKNOWN_WORD_LENGTH {\n                                        break\n                                }\n                        }\n                        pair := dic.UnkIndex[class]\n                        for i, w := bufPos, 0; i < endPos; i += w {\n                                _, w = utf8.DecodeRune(this.input[i:])\n                                end := i + w\n                                for x := 0; x < pair[1]; x++ {\n                                        this.addNode(pair[0]+x, chPos, bufPos, end, UNKNOWN)\n                                }\n                        }\n                }\n        }\n        return\n}\n\n\n\n\u307e\u3068\u3081\n\u672a\u77e5\u8a9e\u51e6\u7406\u306f\u7d30\u304b\u3044\u51e6\u7406\u3092\u7aef\u6298\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u304c\uff0c\u3068\u308a\u3042\u3048\u305a\u52d5\u304f\u3068\u3053\u308d\u307e\u3067\u6765\u307e\u3057\u305f\uff0e\u30db\u30f3\u30c8\u306f\uff0ckuromoji\u306esearch mode\u3092\u6a21\u5023\u3057\u305f\u304b\u3063\u305f\u3093\u3067\u3059\u304c\uff0c\u305d\u308c\u306f\u92ed\u610f\u5bfe\u5fdc\u4e2d\u3067\u3059\uff0esearch mode\u3060\u3068\uff0c\u95a2\u897f\u56fd\u969b\u7a7a\u6e2f\u30681\u5f62\u614b\u7d20\u3067\u89e3\u6790\u3055\u308c\u305f\u90e8\u5206\u304c\u95a2\u897f\u56fd\u969b\u7a7a\u6e2f\u3068\u5206\u5272\u3055\u308c\u3066\uff0c\u5168\u6587\u691c\u7d22\u306e\u30a4\u30f3\u30c7\u30ad\u30b7\u30f3\u30b0\u306e\u6642\u306b\u691c\u7d22\u6f0f\u308c\u304c\u767a\u751f\u3057\u306b\u304f\u304f\u306a\u308a\u307e\u3059\uff0e\u3042\u3068\uff0c\u30e6\u30fc\u30b6\u30fc\u8f9e\u66f8\uff0e\u3053\u308c\u3082\u306a\u3093\u3068\u304b\u3057\u305f\u3044\uff0e\u3068\u308a\u3042\u3048\u305a\uff0c\u51fa\u6765\u3066\u308b\u3068\u3053\u308d\u307e\u3067\u3092 github \u306b\u4e0a\u3052\u3066\u304a\u304d\u307e\u3057\u305f\uff0e\n# \u6982\u8981\n\n* \u672a\u77e5\u8a9e\u51e6\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\n* \u6b21\u306fkuromoji\u306e`search mode`\u3092\u6a21\u5023\u3057\u305f\u3044\uff0e\u30e6\u30fc\u30b6\u30fc\u8f9e\u66f8\u3082\uff0e\n* \u30b3\u30fc\u30c9\u3092[github](https://github.com/ikawaha/kagome)\u306b\u3053\u3063\u305d\u308a\u4e0a\u3052\u3066\u307f\u307e\u3057\u305f\uff0egolang \u306e\u4f5c\u6cd5\u304c\u3042\u3093\u307e\u308a\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u306e\u3067\u30b3\u30e1\u30f3\u30c8\u3082\u3089\u3048\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\uff0e\n\n# \u306f\u3058\u3081\u306b\n\u672a\u77e5\u8a9e\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\uff0c\u305d\u308c\u3068\u306a\u304f\u52d5\u304f\u3068\u3053\u308d\u307e\u3067\u6301\u3063\u3066\u884c\u304f\u306e\u304c\u76ee\u6a19\u3067\u3059\uff0e\n\n\u672a\u77e5\u8a9e\u51e6\u7406\u306a\u3057\uff1a (\u73fe\u72b6)\n![unk_sample.png](https://qiita-image-store.s3.amazonaws.com/0/44487/cece374c-28d9-69c3-b008-60aad06a415e.png \"unk_sample.png\")\n\n\u672a\u77e5\u8a9e\u51e6\u7406\u3042\u308a\uff1a (\u76ee\u6a19)\n![unk_sample2.png](https://qiita-image-store.s3.amazonaws.com/0/44487/ba8cab4f-b03c-98f0-1d57-a8c8c26748d2.png \"unk_sample2.png\")\n\n\u3053\u3093\u306a\u611f\u3058\u306b\uff0c\u4eca\u306f\u672a\u77e5\u8a9e\u306e\u51e6\u7406\u3092\u3057\u3066\u3044\u306a\u3044\u306e\u3067\uff0c\u30e9\u30c6\u30a3\u30b9\u304c\u672b\u5c3e\u304b\u3089\u5148\u982d\u307e\u3067\u8fbf\u308c\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u3092\u306a\u3093\u3068\u304b\u3057\u307e\u3059\uff0e\uff08\u30c8\u30c8\u30ed\u304c\u8f9e\u66f8\u306b\u306a\u3044\u306e\u3067\uff0c\u305d\u3053\u306e\u9023\u7d50\u304c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\uff0e\uff09\n\n# [\u524d\u56de](http://qiita.com/ikawaha/items/235371a7b1066ba5ea6c)\u307e\u3067\u306e\u3042\u3089\u3059\u3058\n\n* Pure Go \u306a\u5f62\u614b\u7d20\u89e3\u6790\u5668\u3067\uff0c\u8f9e\u66f8\u540c\u68b1\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u4f5c\u308b\n* MeCab\u8f9e\u66f8\u3092 go \u30bd\u30fc\u30b9\u306b\u5909\u63db\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\n* \u30bd\u30fc\u30b9\u5927\u304d\u3044 & \u30b3\u30f3\u30d1\u30a4\u30eb\u9045\u3044 (\u624b\u5143\u306e Mac:Core i7 2.9GHz\u306730\u5206\u307b\u3069)\n* \u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u306e\u30b5\u30a4\u30ba\u306f100MB\u7a0b\u5ea6\u306b\u306a\u3063\u305f\n* \u672a\u77e5\u8a9e\u51e6\u7406\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\uff0c\u30ce\u30fc\u30c9\u304c\u9023\u7d50\u3057\u306a\u3044\u5834\u5408\u304c\u3042\u308b \u2190 \u2605\u4eca\u56de\u3053\u308c\u306b\u5bfe\u5fdc\u3059\u308b\n\n# \u53c2\u8003\n\n\u4e0b\u8a18\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\uff0e\n\n* [kuromoji](http://www.atilika.org/)\n* [\u65e5\u672c\u8a9e\u5165\u529b\u3092\u652f\u3048\u308b\u6280\u8853](http://www.amazon.co.jp/gp/product/4774149934/ref=as_li_ss_tl?ie=UTF8&camp=247&creative=7399&creativeASIN=4774149934&linkCode=as2&tag=foxii-22)\n* [Mecab](http://mecab.googlecode.com/svn/trunk/mecab/doc/index.html)\n\t* [\u54c1\u8a5eID\u306e\u5b9a\u7fa9](http://mecab.googlecode.com/svn/trunk/mecab/doc/posid.html)\n\n# \u672a\u77e5\u8a9e\u51e6\u7406\u306e\u57fa\u672c\u6226\u7565\n\u5165\u529b\u6587\u5b57\u5217\u3092\u524d\u304b\u3089\u4e00\u3064\u305a\u3064\u305a\u3089\u3057\u3066 CommonPrefixSearch \u3057\u3066\uff0c\u305d\u306e\u4f4d\u7f6e\u304b\u3089\u59cb\u307e\u308b\u5f62\u614b\u7d20\u3092\u30e9\u30c6\u30a3\u30b9\u306e\u30ce\u30fc\u30c9\u306b\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\u3042\u308b\u4f4d\u7f6e\u304b\u3089\u59cb\u307e\u308b\u5f62\u614b\u7d20\u304c\u8f9e\u66f8\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u304d\uff0c\u305d\u306e\u4f4d\u7f6e\u304b\u3089\u59cb\u307e\u308b\u6587\u5b57\u5217\u3092\u6587\u5b57\u7a2e\u3067\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3066\u672a\u77e5\u8a9e\u30ce\u30fc\u30c9\u3068\u3057\u3066\u30e9\u30c6\u30a3\u30b9\u306b\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\n# MeCab-IPADIC \u306e\u8a2d\u5b9a\n\nMeCab \u306e\u672a\u77e5\u8a9e\u95a2\u9023\u306e\u8a2d\u5b9a\u306f\uff0cchar.def \u3068 unk.def \u306e2\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u3059\uff0e\n\n## \u672a\u77e5\u8a9e\u51e6\u7406\u3092\u8d77\u52d5\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u8a2d\u5b9a\n\nchar.def \u306e\u982d\u306e\u65b9\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a2d\u5b9a\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\uff0e\n\u5de6\u304b\u3089\n\n* CATEGORY_NAME: \u30ab\u30c6\u30b4\u30ea\u540d\n* INVOKE: 1 \u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30ab\u30c6\u30b4\u30ea\u306f\u5e38\u306b\u672a\u77e5\u8a9e\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\uff0e\u305d\u3046\u3067\u306a\u3051\u308c\u3070\uff0c\u305d\u306e\u4f4d\u7f6e\u304b\u3089\u59cb\u307e\u308b\u30ce\u30fc\u30c9\u304c\u306a\u3044\u3068\u304d\u3060\u3051\u8ffd\u52a0\uff0e\n* GROUP: \u5148\u982d\u3068\u540c\u3058\u6587\u5b57\u7a2e\u306e\u6587\u5b57\u5217\u3092\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u3057\u3066\u672a\u77e5\u8a9e\u3068\u3059\u308b\uff0e\n* LENGTH: \u9577\u3055 1 \u304b\u3089 n \u307e\u3067\u306e\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\uff0e\n\n```text:char.def[\u629c\u7c8b]\n###################################################################################\n#\n#  CHARACTER CATEGORY DEFINITION\n#\n#  CATEGORY_NAME INVOKE GROUP LENGTH\n#\n#   - CATEGORY_NAME: Name of category. you have to define DEFAULT class.\n#   - INVOKE: 1/0:   always invoke unknown word processing, evan when the word can be found in the lexicon\n#   - GROUP:  1/0:   make a new word by grouping the same chracter category\n#   - LENGTH: n:     1 to n length new words are added\n#\nDEFAULT        0 1 0  # DEFAULT is a mandatory category!\nSPACE          0 1 0\nKANJI          0 0 2\nSYMBOL         1 1 0\nNUMERIC        1 1 0\nALPHA          1 1 0\nHIRAGANA       0 1 2\nKATAKANA       1 1 2\nKANJINUMERIC   1 1 0\nGREEK          1 1 0\nCYRILLIC       1 1 0\n```\n\n\u3075\u3080\u3075\u3080\uff0e\u8a18\u53f7\u3068\u304b\u6765\u305f\u3089\u5e38\u306b\u672a\u77e5\u8a9e\u51e6\u7406\u304c\u50cd\u304f\u3051\u3069\uff0c\u6f22\u5b57\u3084\u3072\u3089\u304c\u306a\u306e\u6642\u306f\u305d\u306e\u4f4d\u7f6e\u304b\u3089\u59cb\u307e\u308b\u30ce\u30fc\u30c9\u304c\u4f5c\u308c\u306a\u3044\u3068\u304d\u3060\u3051\u672a\u77e5\u8a9e\u51e6\u7406\u3059\u308c\u3070\u3044\u3044\u306e\u306d \u03c6(\uff0e\uff0e)\uff0e\n\n## \u6587\u5b57\u7a2e\u306e\u8a2d\u5b9a\n\nchar.def \u306e\u6b8b\u308a\u306e\u90e8\u5206\u306b\u306f\uff0c\u5404\u6587\u5b57\u304c\u3069\u306e\u6587\u5b57\u7a2e\u306b\u542b\u307e\u308c\u308b\u304b\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\uff0e\u6587\u5b57\u306f UCS2 \u3067\u8868\u3055\u308c\u3066\u3044\u307e\u3059\uff0eUCS2 \u306f golang \u3067\u3044\u3048\u3070 rune \u306b\u3042\u305f\u308a\u307e\u3059\uff0e\u3053\u306e\u8868\u3092 rune \u3092\u8abf\u3079\u3066\u3069\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u5f53\u3066\u306f\u307e\u308b\u304b\u5206\u304b\u308c\u3070\u3044\u3044\u306e\u3067\u3059\u306d\uff0e\n\n```text:char.def[\u629c\u7c8b]\n###################################################################################\n#\n# CODE(UCS2) TO CATEGORY MAPPING\n#\n\n# SPACE\n0x0020 SPACE  # DO NOT REMOVE THIS LINE, 0x0020 is reserved for SPACE\n0x00D0 SPACE\n0x0009 SPACE\n0x000B SPACE\n0x000A SPACE\n\n# ASCII\n0x0021..0x002F SYMBOL\n0x0030..0x0039 NUMERIC\n0x003A..0x0040 SYMBOL\n0x0041..0x005A ALPHA\n0x005B..0x0060 SYMBOL\n0x0061..0x007A ALPHA\n0x007B..0x007E SYMBOL\n```\n\n\u3088\u304f\u898b\u308b\u3068\uff0c\u8907\u6570\u30af\u30e9\u30b9\u306b\u307e\u305f\u304c\u308b\u5834\u5408\u3082\u3042\u308b\u3088\u3046\u3067\u3059\uff0e\n\n```text:char.def[\u629c\u7c8b]\n# KANJI-NUMERIC (\u4e00 \u4e8c \u4e09 \u56db \u4e94 \u516d \u4e03 \u516b \u4e5d \u5341 \u767e \u5343 \u4e07 \u5104 \u5146)\n0x4E00 KANJINUMERIC KANJI\n0x4E8C KANJINUMERIC KANJI\n0x4E09 KANJINUMERIC KANJI\n0x56DB KANJINUMERIC KANJI\n0x4E94 KANJINUMERIC KANJI\n0x516D KANJINUMERIC KANJI\n```\n\n## \u672a\u77e5\u8a9e\u30ab\u30c6\u30b4\u30ea\u306e\u30b3\u30b9\u30c8\n\n\u672a\u77e5\u8a9e\u306e\u30ab\u30c6\u30b4\u30ea(ALPHA \u3068\u304b KANJI \u3068\u304b)\u306b\u3064\u3044\u3066\uff0cunk.def \u306b\u54c1\u8a5e\u3084\u91cd\u307f\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\n```text:unk.def[\u629c\u7c8b]\nDEFAULT,5,5,4769,\u8a18\u53f7,\u4e00\u822c,*,*,*,*,*\nSPACE,9,9,8903,\u8a18\u53f7,\u7a7a\u767d,*,*,*,*,*\nKANJI,1285,1285,11426,\u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\nKANJI,1283,1283,17290,\u540d\u8a5e,\u30b5\u5909\u63a5\u7d9a,*,*,*,*,*\nKANJI,1293,1293,17611,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u5730\u57df,\u4e00\u822c,*,*,*\nKANJI,1292,1292,12649,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u7d44\u7e54,*,*,*,*\nKANJI,1289,1289,17340,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4eba\u540d,\u4e00\u822c,*,*,*\nKANJI,1288,1288,15295,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4e00\u822c,*,*,*,*\nSYMBOL,1283,1283,17585,\u540d\u8a5e,\u30b5\u5909\u63a5\u7d9a,*,*,*,*,*\nNUMERIC,1295,1295,27386,\u540d\u8a5e,\u6570,*,*,*,*,*\nALPHA,1285,1285,13398,\u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\nALPHA,1293,1293,18706,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u5730\u57df,\u4e00\u822c,*,*,*\nALPHA,1292,1292,13835,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u7d44\u7e54,*,*,*,*\nALPHA,1289,1289,18188,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4eba\u540d,\u4e00\u822c,*,*,*\nALPHA,1288,1288,15673,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4e00\u822c,*,*,*,*\nALPHA,3,3,15235,\u611f\u52d5\u8a5e,*,*,*,*,*,*\nHIRAGANA,1285,1285,13069,\u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\nHIRAGANA,1283,1283,20223,\u540d\u8a5e,\u30b5\u5909\u63a5\u7d9a,*,*,*,*,*\nHIRAGANA,1293,1293,17882,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u5730\u57df,\u4e00\u822c,*,*,*\nHIRAGANA,1292,1292,14761,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u7d44\u7e54,*,*,*,*\nHIRAGANA,1289,1289,18060,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4eba\u540d,\u4e00\u822c,*,*,*\nHIRAGANA,1288,1288,14787,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4e00\u822c,*,*,*,*\nHIRAGANA,3,3,16989,\u611f\u52d5\u8a5e,*,*,*,*,*,*\nKATAKANA,1285,1285,9461,\u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\nKATAKANA,1293,1293,13661,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u5730\u57df,\u4e00\u822c,*,*,*\nKATAKANA,1292,1292,10922,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u7d44\u7e54,*,*,*,*\nKATAKANA,1289,1289,13581,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4eba\u540d,\u4e00\u822c,*,*,*\nKATAKANA,1288,1288,10521,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4e00\u822c,*,*,*,*\nKATAKANA,3,3,14138,\u611f\u52d5\u8a5e,*,*,*,*,*,*\nKANJINUMERIC,1295,1295,27473,\u540d\u8a5e,\u6570,*,*,*,*,*\nGREEK,1285,1285,7884,\u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\nGREEK,1293,1293,12681,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u5730\u57df,\u4e00\u822c,*,*,*\nGREEK,1292,1292,8573,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u7d44\u7e54,*,*,*,*\nGREEK,1289,1289,12697,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4eba\u540d,\u4e00\u822c,*,*,*\nGREEK,1288,1288,10029,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4e00\u822c,*,*,*,*\nCYRILLIC,1285,1285,7966,\u540d\u8a5e,\u4e00\u822c,*,*,*,*,*\nCYRILLIC,1293,1293,12600,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u5730\u57df,\u4e00\u822c,*,*,*\nCYRILLIC,1292,1292,8492,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u7d44\u7e54,*,*,*,*\nCYRILLIC,1289,1289,12615,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4eba\u540d,\u4e00\u822c,*,*,*\nCYRILLIC,1288,1288,9866,\u540d\u8a5e,\u56fa\u6709\u540d\u8a5e,\u4e00\u822c,*,*,*,*\n```\n\n# \u3069\u3046\u3084\u3063\u3066 golang \u306e\u30b3\u30fc\u30c9\u306b\u843d\u3068\u3059\u304b\uff1f\n\n\u3042\u308b\u6587\u5b57\u304c\u3075\u304f\u3059\u3046\u306e\u30ab\u30c6\u30b4\u30ea\u306b\u542b\u307e\u308c\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u304c\u9762\u5012\u3067\u3059\uff0e\u3053\u308c\uff0ckuromoji \u3067\u306f\u3069\u3046\u3084\u3063\u3066\u51e6\u7406\u3057\u3066\u308b\u3093\u3067\u3057\u3087\u3046\u304b\uff1fkuromoji \u306e[\u30b3\u30fc\u30c9](http://svn.apache.org/repos/asf/lucene/dev/tags/lucene_solr_4_8_1/lucene/analysis/)\u3092\u898b\u3066\u307f\u307e\u3059\uff0ekuromoji \u306f github \u306b\u3042\u304c\u3063\u3066\u308b\u307b\u3046\u3058\u3083\u306a\u304f\u3066\uff0clucene \u306b\u542b\u307e\u308c\u3066\u3044\u308b\u65b9\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\uff0e\n\n```java:kuromoji(UnknownDictionaryBuilder.java)\n  public void readCharacterDefinition(String filename, UnknownDictionaryWriter dictionary) throws IOException {\n    FileInputStream inputStream = new FileInputStream(filename);\n    InputStreamReader streamReader = new InputStreamReader(inputStream, encoding);\n    LineNumberReader lineReader = new LineNumberReader(streamReader);\n    \n    String line = null;\n    \n    while ((line = lineReader.readLine()) != null) {\n      line = line.replaceAll(\"^\\\\s\", \"\");\n      line = line.replaceAll(\"\\\\s*#.*\", \"\");\n      line = line.replaceAll(\"\\\\s+\", \" \");\n      \n      // Skip empty line or comment line\n      if(line.length() == 0) {\n        continue;\n      }\n      \n      if(line.startsWith(\"0x\")) {  // Category mapping\n        String[] values = line.split(\" \", 2);  // Split only first space\n        \n        if(!values[0].contains(\"..\")) {\n          int cp = Integer.decode(values[0]).intValue();\n          dictionary.putCharacterCategory(cp, values[1]);\n        } else {\n          String[] codePoints = values[0].split(\"\\\\.\\\\.\");\n          int cpFrom = Integer.decode(codePoints[0]).intValue();\n          int cpTo = Integer.decode(codePoints[1]).intValue();\n          \n          for(int i = cpFrom; i <= cpTo; i++){\n            dictionary.putCharacterCategory(i, values[1]);\n          }\n        }\n      } else {  // Invoke definition\n        String[] values = line.split(\" \"); // Consecutive space is merged above\n        String characterClassName = values[0];\n        int invoke = Integer.parseInt(values[1]);\n        int group = Integer.parseInt(values[2]);\n        int length = Integer.parseInt(values[3]);\n        dictionary.putInvokeDefinition(characterClassName, invoke, group, length);\n      }\n    }\n  }\n```\n\n\u3075\u3080\u3075\u3080\u03c6(\uff0e\uff0e)\uff0e\u3060\u3044\u305f\u3044\u3053\u3093\u306a\u611f\u3058\u304b (\u610f\u8a33\u542b\u3080)\n\n\n* \u6587\u5b57\u306f UCS2 \u306a\u306e\u3067 65536 \u7a2e\u985e\u3057\u304b\u306a\u3044\u306e\u3067\uff0c65536 byte \u306e\u30d0\u30a4\u30c8\u5217\u3092\u7528\u610f\u3057\u3066\uff0c\u305d\u3053\u306b\u6587\u5b57\u30ab\u30c6\u30b4\u30ea\u3092\u30bb\u30c3\u30c8\u3059\u308b\uff0e\n* \u6587\u5b57\u30ab\u30c6\u30b4\u30ea\u306f\u6700\u521d\u306e\u30ab\u30c6\u30b4\u30ea\u3092\u8a18\u9332\uff0e\u8907\u6570\u3042\u3063\u3066\u3082\u7121\u8996 orz\uff0e\n* \u672a\u77e5\u8a9e\u51e6\u7406\u306e\u8d77\u52d5\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306f\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u3063\u3066\u8a18\u9332\u3057\u3066\u304a\u304f\uff0c\n\n\u305d\u3046\u3067\u3059\u304b\uff0c\u30ab\u30c6\u30b4\u30ea\u304c\u8907\u6570\u6307\u5b9a\u3057\u3066\u3042\u3063\u3066\u3082\u95a2\u4fc2\u306a\u3044\u306e\u306d\u30fb\u30fb\u30fb\n\n# \u30e9\u30c6\u30a3\u30b9\u3092\u4f5c\u308d\u3046\n\n\u51e6\u7406\u306f\u3053\u3093\u306a\u611f\u3058\uff0e\n\n\u5165\u529b\u6587\u5b57\u3092\u5148\u982d\u304b\u3089\u4e00\u6587\u5b57\u305a\u3064\u8aad\u307f\u306a\u304c\u3089\u4ee5\u4e0b\u3092\u7e70\u308a\u8fd4\u3059\uff0e\n1. \u30e6\u30fc\u30b6\u30fc\u8f9e\u66f8\u3092\u5f15\u304f (\u672a\u5b9f\u88c5)\n2. \u5f62\u614b\u7d20\u8f9e\u66f8\u3092\u5f15\u304f\n3. \u672a\u77e5\u8a9e\u30ce\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\uff0e\n\n\u305f\u3060\u3057\uff0c(3) \u3067\u672a\u77e5\u8a9e\u51e6\u7406\u304c\u8d77\u52d5\u3059\u308b\u306e\u306f\uff0c (2)\u3067\u8f9e\u66f8\u304c\u5f15\u3051\u306a\u304b\u3063\u305f\u5834\u5408\u304b\uff0c\u73fe\u5728\u51e6\u7406\u3057\u3066\u3044\u308b\u6587\u5b57\u304c\uff0c\u672a\u77e5\u8a9e\u51e6\u7406\u3092\u5e38\u306b\u8d77\u52d5\u3059\u308b\u5834\u5408\uff0e\n\ngolang \u306f\u6587\u5b57\u5217\u3092 byte \u3067\u3082 rune \u3067\u3082\u8868\u73fe\u3067\u304d\u308b\u306e\u3067\uff0c\u305d\u306e\u8fba\u304c\u3053\u3093\u304c\u3089\u304c\u3089\u306a\u3044\u3088\u3046\u306b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u6c17\u3092\u3064\u3051\u3066\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\uff0e\u30b3\u30fc\u30c9\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f\uff0echar.def \u3067\u672a\u77e5\u8a9e\u306e\u6700\u5927\u9577\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u305f\u3051\u3069\uff0ckuromoji \u306e\u51e6\u7406\u3092\u8aad\u3093\u3060\u3089\uff0c\u305d\u306e\u5024\u306f\u4f7f\u308f\u308c\u3066\u306a\u304b\u3063\u305f\u306e\u3067\uff0c\u3068\u308a\u3042\u3048\u305a\u7121\u8996 (^^\u309e\uff0e\n\n```go:lattice.go\nfunc (this *Lattice) build(a_input *string) (err error) {\n        this.input = []byte(*a_input)\n\n        runeCount := utf8.RuneCount(this.input)\n        this.list = make([][]Node, runeCount+2)\n\n        this.list[0] = append(this.list[0], Node{id: BOSEOS, class: KNOWN, start: 0})\n        this.list[len(this.list)-1] = append(this.list[len(this.list)-1], Node{id: BOSEOS, class: KNOWN, start: len(this.list) - 2})\n\n        chPos := -1\n        for bufPos, ch := range *a_input {\n                chPos++\n\n                // (1) TODO: USER DIC\n                anyMatches := false\n                if anyMatches {\n                        continue\n                }\n                // (2) KNOWN DIC\n                prefixs, ids := dic.Index.CommonPrefixSearchBytes(this.input[bufPos:])\n                anyMatches = len(prefixs) > 0\n                for key, substr := range prefixs {\n                        id := ids[key]\n                        c, ok := dic.Counts[id]\n                        if !ok {\n                                c = 1\n                        }\n                        for x := 0; x < c; x++ {\n                                this.addNode(id+x, chPos, bufPos, bufPos+len(substr), KNOWN)\n                        }\n                }\n                // (3) UNKNOWN DIC\n                if !anyMatches || dic.InvokeList[dic.CharacterCategoryList[ch]] {\n                        class := dic.CharacterCategoryList[ch]\n                        endPos := bufPos + utf8.RuneLen(ch)\n                        unkWordLen := 1\n                        for i, w, size := endPos, 1, len(this.input); i < size; i += w {\n                                var c rune\n                                c, w = utf8.DecodeRune(this.input[i:])\n                                if dic.CharacterCategoryList[c] != class {\n                                        break\n                                }\n                                endPos += w\n                                unkWordLen++\n                                if unkWordLen >= _MAX_UNKNOWN_WORD_LENGTH {\n                                        break\n                                }\n                        }\n                        pair := dic.UnkIndex[class]\n                        for i, w := bufPos, 0; i < endPos; i += w {\n                                _, w = utf8.DecodeRune(this.input[i:])\n                                end := i + w\n                                for x := 0; x < pair[1]; x++ {\n                                        this.addNode(pair[0]+x, chPos, bufPos, end, UNKNOWN)\n                                }\n                        }\n                }\n        }\n        return\n}\n```\n\n# \u307e\u3068\u3081\n\u672a\u77e5\u8a9e\u51e6\u7406\u306f\u7d30\u304b\u3044\u51e6\u7406\u3092\u7aef\u6298\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u6c17\u304c\u3057\u307e\u3059\u304c\uff0c\u3068\u308a\u3042\u3048\u305a\u52d5\u304f\u3068\u3053\u308d\u307e\u3067\u6765\u307e\u3057\u305f\uff0e\u30db\u30f3\u30c8\u306f\uff0ckuromoji\u306e`search mode`\u3092\u6a21\u5023\u3057\u305f\u304b\u3063\u305f\u3093\u3067\u3059\u304c\uff0c\u305d\u308c\u306f\u92ed\u610f\u5bfe\u5fdc\u4e2d\u3067\u3059\uff0e`search mode`\u3060\u3068\uff0c`\u95a2\u897f\u56fd\u969b\u7a7a\u6e2f`\u30681\u5f62\u614b\u7d20\u3067\u89e3\u6790\u3055\u308c\u305f\u90e8\u5206\u304c`\u95a2\u897f``\u56fd\u969b``\u7a7a\u6e2f`\u3068\u5206\u5272\u3055\u308c\u3066\uff0c\u5168\u6587\u691c\u7d22\u306e\u30a4\u30f3\u30c7\u30ad\u30b7\u30f3\u30b0\u306e\u6642\u306b\u691c\u7d22\u6f0f\u308c\u304c\u767a\u751f\u3057\u306b\u304f\u304f\u306a\u308a\u307e\u3059\uff0e\u3042\u3068\uff0c\u30e6\u30fc\u30b6\u30fc\u8f9e\u66f8\uff0e\u3053\u308c\u3082\u306a\u3093\u3068\u304b\u3057\u305f\u3044\uff0e\u3068\u308a\u3042\u3048\u305a\uff0c\u51fa\u6765\u3066\u308b\u3068\u3053\u308d\u307e\u3067\u3092 github \u306b\u4e0a\u3052\u3066\u304a\u304d\u307e\u3057\u305f\uff0e\n", "tags": ["kuromoji", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406", "Go", "mecab", "\u5f62\u614b\u7d20\u89e3\u6790"]}