{"context": "ARM \u306eoverlay\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u52d5\u6a5f\nCortex-M\u3092\u4f7f\u3063\u305f\u30b7\u30b9\u30c6\u30e0\u3067ARM\u306eOverlay\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u51fa\u3066\u304d\u305f\u3002\u3068\u3044\u3046\u304b\u63d0\u4f9b\u3055\u308c\u305f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304cOverlay\u3092\u30d0\u30ea\u30d0\u30ea\u5229\u7528\u3057\u3066\u3044\u305f\u3068\u3044\u3046\u7406\u7531\u3067\u3059\u3002\n\nOverlay\u3068\u306f\nARM\u306eOverlay\u6a5f\u80fd\u3068\u306f\u3001Cortex-M\u7b49\u306eMMU\u306e\u7121\u3044\u30d7\u30ed\u30bb\u30c3\u30b5\u306b\u304a\u3044\u3066\u3001\u52d5\u7684\u306b\u30e1\u30e2\u30ea\u306e\u3042\u308b\u9818\u57df\u3092\u5207\u308a\u66ff\u3048\u3066\u3001\u305d\u306e\u5207\u308a\u66ff\u3048\u305f\u30a8\u30ea\u30a2\u3092\u4f7f\u3063\u3066\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\u7c21\u5358\u306b\u8a00\u3046\u3068\u300c\u30d0\u30f3\u30af\u5207\u308a\u66ff\u3048\u3067\u30b3\u30fc\u30c9\u5b9f\u884c\u300d\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\u3088\u304f\u4f7f\u308f\u308c\u308b\u4f8b\u3068\u3057\u3066\u3001RAM\u306e\u9650\u3089\u308c\u305f\u74b0\u5883\u306b\u3066\u3001FLASH\u7b49\u304b\u3089\u52d5\u7684\u306b\u30b3\u30fc\u30c9\u3092RAM\u306b\u30b3\u30d4\u30fc\u3057\u3066\u5b9f\u884c\u3059\u308b\u5834\u5408\u306a\u3069\u306b\u5229\u7528\u3057\u307e\u3059\u3002\nARM\u7d14\u6b63\u306e\u958b\u767a\u74b0\u5883\u306eMDK-ARM\u3068DS-5\u3067\u306fOverlay\u6a5f\u80fd\u304c\u4f7f\u3048\u307e\u3059\u3002\n\nOverlay\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nARM\u304cOverlay\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u8aad\u3093\u3067\u307f\u307e\u3057\u305f\u3002\noverlay \u306e\u9818\u57df\u3092\u7ba1\u7406\u3059\u308b\u69cb\u9020\u4f53\u3000ro\u3068rw\u3068zi\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\n\noverlay_manager.c\n/* struct to hold addresses and lengths */\ntypedef struct overlay_region_t_struct\n{\n        void* load_ro_base;\n        void* load_rw_base;\n        void* exec_zi_base;\n        unsigned int ro_length;\n        unsigned int zi_length;\n} overlay_region_t;\n\n\n\noverlay\u306e\u9818\u57df\u306b\u30b3\u30fc\u30c9\u3068\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\u95a2\u6570\u3002ro\u3068rw\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3001zi\u306b\uff10\u3092\u8a2d\u5b9a\u3059\u308b\u3002\nvoid load_overlay(int n)\n{\n        const overlay_region_t * selected_region;\n...       \n        /* set selected region */\n        selected_region = &overlay_regions[n-1];\n\n        /* load code overlay */\n        memcpy(code_base, selected_region->load_ro_base, selected_region->ro_length);\n\n        /* load data overlay */\n        memcpy(data_base, selected_region->load_rw_base, (unsigned int)selected_region->exec_zi_base - (unsigned int)data_base);\n\n        /* Comment out the next line if your overlays have any static ZI variables\n         * and should not be reinitialized each time, and move them out of the\n         * overlay region in your scatter file */\n        memset(selected_region->exec_zi_base, 0, selected_region->zi_length);\n...        \n}\n\nOverlay\u9818\u57df\u306e\u30a2\u30c9\u30ec\u30b9\u3068\u9577\u3055\u306f\u30ea\u30f3\u30ab\u304b\u3089\u53d6\u5f97\u3059\u308b\u3002\nScatter\u30d5\u30a1\u30a4\u30eb\u3000(\u30ea\u30f3\u30ab\u30b9\u30af\u30ea\u30d7\u30c8)\u3067ro,\u3000rw\u3068zi\u306e\u9818\u57df\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n    CODE_ONE 0x08400000 OVERLAY 0x4000\n    {\n        overlay_one.o (+RO)\n    }\n\n    CODE_TWO 0x08400000 OVERLAY 0x4000\n    {\n        overlay_two.o (+RO)\n    }\n\n    DATA_ONE 0x08700000 OVERLAY 0x4000\n    {\n        overlay_one.o (+RW,+ZI)\n    }\n\n    DATA_TWO 0x08700000 OVERLAY 0x4000\n    {\n        overlay_two.o (+RW,+ZI)\n    }\n\n\u30ea\u30f3\u30ab\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u8aad\u307f\u51fa\u3057\u69cb\u9020\u4f53\u306b\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u30a2\u30bb\u30f3\u30d6\u30ea\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n        AREA    overlay_list, DATA, READONLY\n\n        ; Linker-defined symbols to use\n\n        IMPORT ||Load$$CODE_ONE$$Base||\n        IMPORT ||Load$$CODE_TWO$$Base||\n        IMPORT ||Load$$DATA_ONE$$Base||\n        IMPORT ||Load$$DATA_TWO$$Base||\n\n        IMPORT ||Image$$CODE_ONE$$Base||\n        IMPORT ||Image$$DATA_ONE$$Base||\n        IMPORT ||Image$$DATA_ONE$$ZI$$Base||\n        IMPORT ||Image$$DATA_TWO$$ZI$$Base||\n\n        IMPORT ||Image$$CODE_ONE$$Length||\n        IMPORT ||Image$$CODE_TWO$$Length||\n\n        IMPORT ||Image$$DATA_ONE$$ZI$$Length||\n        IMPORT ||Image$$DATA_TWO$$ZI$$Length||\n\n        ; Symbols to export\n\n        EXPORT code_base\n        EXPORT data_base\n        EXPORT overlay_regions\n\n; Common base execution addresses of the two OVERLAY regions\n\ncode_base DCD ||Image$$CODE_ONE$$Base||\ndata_base DCD ||Image$$DATA_ONE$$Base||\n\n; Array of details for each region -\n; see overlay_manager.c for structure layout\n\noverlay_regions\n; overlay 1\n        DCD ||Load$$CODE_ONE$$Base||\n        DCD ||Load$$DATA_ONE$$Base||\n        DCD ||Image$$DATA_ONE$$ZI$$Base||\n        DCD ||Image$$CODE_ONE$$Length||\n        DCD ||Image$$DATA_ONE$$ZI$$Length||\n\n; overlay 2     \n        DCD ||Load$$CODE_TWO$$Base||\n        DCD ||Load$$DATA_TWO$$Base||\n        DCD ||Image$$DATA_TWO$$ZI$$Base||\n        DCD ||Image$$CODE_TWO$$Length||\n        DCD ||Image$$DATA_TWO$$ZI$$Length||\n\n\n        END\n\n\u5b9f\u969b\u306b\u4f7f\u3046\u5834\u5408\u306f\u95a2\u6570\u3092\u547c\u3076\u524d\u306b\u30ed\u30fc\u30c9\u3057\u3066\u304b\u3089\u5b9f\u884c\u3059\u308b\u3002\nvoid main(void)\n{\n        load_overlay(1);\n        func1();\n\n        load_overlay(2);\n        func2();\n}\n\n\n\u6ce8\u610f\u3059\u308b\u3079\u304d\u3053\u3068\n\narmlink\u306b--datacompressor=off\u3092\u6307\u5b9a\u3059\u308b\u3002\noverlay\u9818\u57df\u306b\u3042\u308b\u30b3\u30fc\u30c9\u306f\u30ed\u30fc\u30c9\u3057\u3066\u304b\u3089\u3067\u306a\u3044\u3068\u5b9f\u884c\u3067\u304d\u306a\u3044\u3067\u3059\u3002\u30ed\u30fc\u30c9\u3057\u3066\u3044\u306a\u3044\u72b6\u614b\u3067\u5b9f\u884c\u3059\u308b\u3068\u3076\u3063\u98db\u3073\u307e\u3059\u3002\nARM\u306eDS-5\u306foverlay\u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u3092\u30c7\u30d0\u30c3\u30ac\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u304c\u3001\u305d\u308c\u4ee5\u5916\u306e\u74b0\u5883\u3067\u306f\u30c7\u30d0\u30c3\u30ac\u304c\u4f7f\u3048\u307e\u305b\u3093\u3002\n\n\n\u53c2\u8003\u30da\u30fc\u30b8\n\nhttp://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.faqs/ka4234.html\nhttp://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0206ij/Cchihacc.html\n\nARM \u306eoverlay\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u52d5\u6a5f\n\nCortex-M\u3092\u4f7f\u3063\u305f\u30b7\u30b9\u30c6\u30e0\u3067ARM\u306eOverlay\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u51fa\u3066\u304d\u305f\u3002\u3068\u3044\u3046\u304b\u63d0\u4f9b\u3055\u308c\u305f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304cOverlay\u3092\u30d0\u30ea\u30d0\u30ea\u5229\u7528\u3057\u3066\u3044\u305f\u3068\u3044\u3046\u7406\u7531\u3067\u3059\u3002\n\n## Overlay\u3068\u306f\n\nARM\u306eOverlay\u6a5f\u80fd\u3068\u306f\u3001Cortex-M\u7b49\u306eMMU\u306e\u7121\u3044\u30d7\u30ed\u30bb\u30c3\u30b5\u306b\u304a\u3044\u3066\u3001\u52d5\u7684\u306b\u30e1\u30e2\u30ea\u306e\u3042\u308b\u9818\u57df\u3092\u5207\u308a\u66ff\u3048\u3066\u3001\u305d\u306e\u5207\u308a\u66ff\u3048\u305f\u30a8\u30ea\u30a2\u3092\u4f7f\u3063\u3066\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\n\u7c21\u5358\u306b\u8a00\u3046\u3068\u300c\u30d0\u30f3\u30af\u5207\u308a\u66ff\u3048\u3067\u30b3\u30fc\u30c9\u5b9f\u884c\u300d\u3059\u308b\u6a5f\u80fd\u3067\u3059\u3002\n\n\u3088\u304f\u4f7f\u308f\u308c\u308b\u4f8b\u3068\u3057\u3066\u3001RAM\u306e\u9650\u3089\u308c\u305f\u74b0\u5883\u306b\u3066\u3001FLASH\u7b49\u304b\u3089\u52d5\u7684\u306b\u30b3\u30fc\u30c9\u3092RAM\u306b\u30b3\u30d4\u30fc\u3057\u3066\u5b9f\u884c\u3059\u308b\u5834\u5408\u306a\u3069\u306b\u5229\u7528\u3057\u307e\u3059\u3002\n\nARM\u7d14\u6b63\u306e\u958b\u767a\u74b0\u5883\u306eMDK-ARM\u3068DS-5\u3067\u306fOverlay\u6a5f\u80fd\u304c\u4f7f\u3048\u307e\u3059\u3002\n\n## Overlay\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\nARM\u304cOverlay\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u8aad\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\noverlay \u306e\u9818\u57df\u3092\u7ba1\u7406\u3059\u308b\u69cb\u9020\u4f53\u3000ro\u3068rw\u3068zi\u3092\u5207\u308a\u66ff\u3048\u308b\u3002\n\n```c:overlay_manager.c\n/* struct to hold addresses and lengths */\ntypedef struct overlay_region_t_struct\n{\n        void* load_ro_base;\n        void* load_rw_base;\n        void* exec_zi_base;\n        unsigned int ro_length;\n        unsigned int zi_length;\n} overlay_region_t;\n\n```\n\noverlay\u306e\u9818\u57df\u306b\u30b3\u30fc\u30c9\u3068\u30c7\u30fc\u30bf\u3092\u30ed\u30fc\u30c9\u3059\u308b\u95a2\u6570\u3002ro\u3068rw\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3001zi\u306b\uff10\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n```c\nvoid load_overlay(int n)\n{\n        const overlay_region_t * selected_region;\n...       \n        /* set selected region */\n        selected_region = &overlay_regions[n-1];\n        \n        /* load code overlay */\n        memcpy(code_base, selected_region->load_ro_base, selected_region->ro_length);\n        \n        /* load data overlay */\n        memcpy(data_base, selected_region->load_rw_base, (unsigned int)selected_region->exec_zi_base - (unsigned int)data_base);\n        \n        /* Comment out the next line if your overlays have any static ZI variables\n         * and should not be reinitialized each time, and move them out of the\n         * overlay region in your scatter file */\n        memset(selected_region->exec_zi_base, 0, selected_region->zi_length);\n...        \n}\n```\n\nOverlay\u9818\u57df\u306e\u30a2\u30c9\u30ec\u30b9\u3068\u9577\u3055\u306f\u30ea\u30f3\u30ab\u304b\u3089\u53d6\u5f97\u3059\u308b\u3002\n\nScatter\u30d5\u30a1\u30a4\u30eb\u3000(\u30ea\u30f3\u30ab\u30b9\u30af\u30ea\u30d7\u30c8)\u3067ro,\u3000rw\u3068zi\u306e\u9818\u57df\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\n```\n    CODE_ONE 0x08400000 OVERLAY 0x4000\n    {\n        overlay_one.o (+RO)\n    }\n\n    CODE_TWO 0x08400000 OVERLAY 0x4000\n    {\n        overlay_two.o (+RO)\n    }\n    \n    DATA_ONE 0x08700000 OVERLAY 0x4000\n    {\n        overlay_one.o (+RW,+ZI)\n    }\n    \n    DATA_TWO 0x08700000 OVERLAY 0x4000\n    {\n        overlay_two.o (+RW,+ZI)\n    }\n```\n\n\u30ea\u30f3\u30ab\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u8aad\u307f\u51fa\u3057\u69cb\u9020\u4f53\u306b\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u30a2\u30bb\u30f3\u30d6\u30ea\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n```\n        AREA    overlay_list, DATA, READONLY\n\n        ; Linker-defined symbols to use\n        \n        IMPORT ||Load$$CODE_ONE$$Base||\n        IMPORT ||Load$$CODE_TWO$$Base||\n        IMPORT ||Load$$DATA_ONE$$Base||\n        IMPORT ||Load$$DATA_TWO$$Base||\n\n        IMPORT ||Image$$CODE_ONE$$Base||\n        IMPORT ||Image$$DATA_ONE$$Base||\n        IMPORT ||Image$$DATA_ONE$$ZI$$Base||\n        IMPORT ||Image$$DATA_TWO$$ZI$$Base||\n\n        IMPORT ||Image$$CODE_ONE$$Length||\n        IMPORT ||Image$$CODE_TWO$$Length||\n\n        IMPORT ||Image$$DATA_ONE$$ZI$$Length||\n        IMPORT ||Image$$DATA_TWO$$ZI$$Length||\n\n        ; Symbols to export\n        \n        EXPORT code_base\n        EXPORT data_base\n        EXPORT overlay_regions\n\n; Common base execution addresses of the two OVERLAY regions\n\ncode_base DCD ||Image$$CODE_ONE$$Base||\ndata_base DCD ||Image$$DATA_ONE$$Base||\n\n; Array of details for each region -\n; see overlay_manager.c for structure layout\n\noverlay_regions\n; overlay 1\n        DCD ||Load$$CODE_ONE$$Base||\n        DCD ||Load$$DATA_ONE$$Base||\n        DCD ||Image$$DATA_ONE$$ZI$$Base||\n        DCD ||Image$$CODE_ONE$$Length||\n        DCD ||Image$$DATA_ONE$$ZI$$Length||\n        \n; overlay 2     \n        DCD ||Load$$CODE_TWO$$Base||\n        DCD ||Load$$DATA_TWO$$Base||\n        DCD ||Image$$DATA_TWO$$ZI$$Base||\n        DCD ||Image$$CODE_TWO$$Length||\n        DCD ||Image$$DATA_TWO$$ZI$$Length||\n\n\n        END\n```\n\n\u5b9f\u969b\u306b\u4f7f\u3046\u5834\u5408\u306f\u95a2\u6570\u3092\u547c\u3076\u524d\u306b\u30ed\u30fc\u30c9\u3057\u3066\u304b\u3089\u5b9f\u884c\u3059\u308b\u3002\n\n```\nvoid main(void)\n{\n        load_overlay(1);\n        func1();\n\n        load_overlay(2);\n        func2();\n}\n```\n\n\n## \u6ce8\u610f\u3059\u308b\u3079\u304d\u3053\u3068\n\n* armlink\u306b--datacompressor=off\u3092\u6307\u5b9a\u3059\u308b\u3002\n* overlay\u9818\u57df\u306b\u3042\u308b\u30b3\u30fc\u30c9\u306f\u30ed\u30fc\u30c9\u3057\u3066\u304b\u3089\u3067\u306a\u3044\u3068\u5b9f\u884c\u3067\u304d\u306a\u3044\u3067\u3059\u3002\u30ed\u30fc\u30c9\u3057\u3066\u3044\u306a\u3044\u72b6\u614b\u3067\u5b9f\u884c\u3059\u308b\u3068\u3076\u3063\u98db\u3073\u307e\u3059\u3002\n* ARM\u306eDS-5\u306foverlay\u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u3092\u30c7\u30d0\u30c3\u30ac\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u304c\u3001\u305d\u308c\u4ee5\u5916\u306e\u74b0\u5883\u3067\u306f\u30c7\u30d0\u30c3\u30ac\u304c\u4f7f\u3048\u307e\u305b\u3093\u3002\n\n\n## \u53c2\u8003\u30da\u30fc\u30b8\n* http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.faqs/ka4234.html\n* http://infocenter.arm.com/help/index.jsp?topic=/com.arm.doc.dui0206ij/Cchihacc.html\n", "tags": ["ARM"]}