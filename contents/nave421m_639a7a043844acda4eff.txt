{"context": "CoreBluetooth with Swift3\u306e\u57fa\u672c\u30b3\u30fc\u30c9\u96c6\u3067\u3059\u3002\nSwift2\u304b\u3089\u3061\u3087\u3063\u3068\u5909\u308f\u3063\u3066\u305f\u306e\u3067\u899a\u3048\u66f8\u304d\u3082\u517c\u306d\u3066\u307e\u3068\u3081\u3002\n\n\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u3044\u305f\u66f8\u7c4d\niOS\u00d7BLE Core Bluetooth\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\nBluetooth\u3001iOS\u3068\u3044\u3048\u3070\u3082\u306f\u3084\u9244\u677f\u306e\u3053\u306e\u66f8\u7c4d\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\n\u305d\u3057\u3066\u3053\u3061\u3089\u3082\u3002\nCore Bluetooth with Swift\n\n\u4eca\u56de\u4f5c\u3063\u305f\u3082\u306e\n\u4eca\u56de\u306fiOS\u7aef\u672b\u00d7iOS\u7aef\u672b\u306eBLE\u63a5\u7d9a\u3092\u60f3\u5b9a\u3057\u3001\n\u30bb\u30f3\u30c8\u30e9\u30eb\u306b\u3082\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u306b\u3082\u306a\u308c\u308b\u3088\u3046\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u301c\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u306e\u53d6\u5f97\u307e\u3067\u3067\u3059\u3002\n\u5b8c\u6210\u54c1\u306f\u4e00\u5fdcGitHub\u306b\u3042\u3052\u3066\u3042\u308a\u307e\u3059\u3002\n\uff08\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306a\u306e\u3067\u8272\u3005\u96d1\u3067\u3059\u304c\u3042\u3057\u304b\u3089\u305a\uff09\n\n\u30b5\u30f3\u30d7\u30eb\u96c6\n\n\u30a4\u30f3\u30dd\u30fc\u30c8\nimport UIKit\nimport CoreBluetooth\n\n\n\u30bb\u30f3\u30c8\u30e9\u30eb\u5074\n\n1.\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u30d7\u30ed\u30d1\u30c6\u30a3\u5b9a\u7fa9\nclass ViewController: UIViewController, CBCentralManagerDelegate{\n    var centralManager: CBCentralManager!\n\n\n2.\u521d\u671f\u5316\ncentralManager = CBCentralManager(delegate: self, queue: nil)\n\n\n3. \u72b6\u614b\u5909\u5316\u3092\u53d6\u5f97\u3059\u308b\uff08\u5fc5\u9808\uff09\nfunc centralManagerDidUpdateState(_ central: CBCentralManager) {\n        print (\"state: \\(central.state)\")\n}\n\n\n4.\u30b9\u30ad\u30e3\u30f3\u958b\u59cb\ncentralManager.scanForPeripherals(withServices: nil, options: nil)\n\n\n5.\u30b9\u30ad\u30e3\u30f3\u7d50\u679c\u53d6\u5f97\nfunc centralManager(_ central: CBCentralManager, didDiscover peripheral: CBPeripheral, advertisementData: [String : Any], rssi RSSI: NSNumber) {\n       print(\"peripheral: \\(peripheral)\")\n}\n\n\n6.\u30b9\u30ad\u30e3\u30f3\u7d42\u4e86\ncentralManager.stopScan()\n\n\n7. \u898b\u3064\u3051\u305f\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u3078\u306e\u63a5\u7d9a\u958b\u59cb\nself.centralManager.connect(self.peripheral, options: nil)\n\n\n8.\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u3068\u306e\u63a5\u7d9a\u7d50\u679c\u3092\u53d6\u5f97\n//  \u6210\u529f\u6642\nfunc centralManager(_ central: CBCentralManager, didConnect peripheral: CBPeripheral) {\n        print(\"Connect success!\")\n}\n\n//  \u5931\u6557\u6642\nfunc centralManager(_ central: CBCentralManager, didFailToConnect peripheral: CBPeripheral, error: Error?) {\n        print(\"Connect failed...\")\n}\n\n\n\u30b5\u30fc\u30d3\u30b9\u691c\u7d22\u3068\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u691c\u7d22\n\n1. \u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u30d7\u30ed\u30d1\u30c6\u30a3\nclass ViewController: UIViewController, CBCentralManagerDelegate, CBPeripheralDelegate{\n\n\n2. \u30b5\u30fc\u30d3\u30b9\u691c\u7d22\u958b\u59cb\nperipheral.delegate = self\nperipheral.discoverServices(nil)\n\n\n3. \u30b5\u30fc\u30d3\u30b9\u691c\u7d22\u7d50\u679c\u306e\u53d6\u5f97\nfunc peripheral(_ peripheral: CBPeripheral, didDiscoverServices error: Error?) {\n        guard let services = peripheral.services else{\n            print(\"error\")\n            return\n        }\n        print(\"\\(services.count)\u500b\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u767a\u898b\u3002\\(services)\")\n}\n\n\n4. \u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u306e\u691c\u7d22\nperipheral.discoverCharacteristics(nil, for: obj)\n\n\n5. \u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u691c\u7d22\u7d50\u679c\u306e\u53d6\u5f97\nfunc peripheral(_ peripheral: CBPeripheral, didDiscoverCharacteristicsFor service: CBService, error: Error?) {\n        if let characteristics = service.characteristics {\n            print(\"\\(characteristics.count)\u500b\u306e\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u3092\u767a\u898b\u3002\\(characteristics)\")\n        }\n}\n\n\n\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u5074\n\n1. \u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u30d7\u30ed\u30d1\u30c6\u30a3\nclass ViewController: UIViewController, CBPeripheralManagerDelegate{\n        var peripheralManager: CBPeripheralManager!\n\n\n2. \u521d\u671f\u5316\nperipheralManager = CBPeripheralManager(delegate: self, queue: nil)\n\n\n3. \u72b6\u614b\u5909\u5316\u3092\u53d6\u5f97\nfunc peripheralManagerDidUpdateState(_ peripheral: CBPeripheralManager) {\n        print(\"periState\\(peripheral.state)\")\n}\n\n\n4. \u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u958b\u59cb\nlet advertisementData = [CBAdvertisementDataLocalNameKey: \"Test Device\"]\nperipheralManager.startAdvertising(advertisementData)\n\n\n5. \u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u7d50\u679c\u3092\u53d6\u5f97\nfunc peripheralManagerDidStartAdvertising(_ peripheral: CBPeripheralManager, error: Error?) {\n        if let error = error {\n            print(\"***Advertising ERROR\")\n            return\n        }\n        print(\"Advertising success\")    \n}\n\n\n6. \u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u7d42\u4e86\nperipheralManager.stopAdvertising()\n\n\n\u30b5\u30fc\u30d3\u30b9\u8ffd\u52a0\n\n1. \u30b5\u30fc\u30d3\u30b9\u4f5c\u6210\nlet serviceUUID = CBUUID(string: \"0000\")\nlet service = CBMutableService(type: serviceUUID, primary: true)\n\n\n2. \u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u4f5c\u6210\nlet charactericUUID = CBUUID(string: \"0001\")\nlet characteristic = CBMutableCharacteristic(type: charactericUUID, properties: CBCharacteristicProperties.read, value: nil, permissions: CBAttributePermissions.readable)\n\n\n3. \u30b5\u30fc\u30d3\u30b9\u306b\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u3092\u8ffd\u52a0\nservice.characteristics = [characteristic]\n\n\n4. \u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u8ffd\u52a0\nself.peripheralManager.add(service)\n\n\n5. \u30b5\u30fc\u30d3\u30b9\u8ffd\u52a0\u7d50\u679c\u3092\u53d6\u5f97\nfunc peripheralManager(_ peripheral: CBPeripheralManager, didAdd service: CBService, error: Error?) {\n        if error != nil {\n            print(\"Service Add Failed...\")\n            return\n        }\n        print(\"Service Add Success!\")\n}\n\n\nCoreBluetooth with Swift3\u306e\u57fa\u672c\u30b3\u30fc\u30c9\u96c6\u3067\u3059\u3002\nSwift2\u304b\u3089\u3061\u3087\u3063\u3068\u5909\u308f\u3063\u3066\u305f\u306e\u3067\u899a\u3048\u66f8\u304d\u3082\u517c\u306d\u3066\u307e\u3068\u3081\u3002\n\n## \u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u3044\u305f\u66f8\u7c4d\n[iOS\u00d7BLE Core Bluetooth\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0](https://www.amazon.co.jp/exec/obidos/ASIN/4883379736/22301-22/ref=nosim/)\nBluetooth\u3001iOS\u3068\u3044\u3048\u3070\u3082\u306f\u3084\u9244\u677f\u306e\u3053\u306e\u66f8\u7c4d\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\n\n\u305d\u3057\u3066\u3053\u3061\u3089\u3082\u3002\n[Core Bluetooth with Swift](http://qiita.com/shu223/items/78614325ce25bf7f4379)\n\n## \u4eca\u56de\u4f5c\u3063\u305f\u3082\u306e\n\u4eca\u56de\u306fiOS\u7aef\u672b\u00d7iOS\u7aef\u672b\u306eBLE\u63a5\u7d9a\u3092\u60f3\u5b9a\u3057\u3001\n\u30bb\u30f3\u30c8\u30e9\u30eb\u306b\u3082\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u306b\u3082\u306a\u308c\u308b\u3088\u3046\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u301c\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u306e\u53d6\u5f97\u307e\u3067\u3067\u3059\u3002\n\n[\u5b8c\u6210\u54c1](https://github.com/chocoffee/CoreBluetoothSample)\u306f\u4e00\u5fdcGitHub\u306b\u3042\u3052\u3066\u3042\u308a\u307e\u3059\u3002\n\uff08\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306a\u306e\u3067\u8272\u3005\u96d1\u3067\u3059\u304c\u3042\u3057\u304b\u3089\u305a\uff09\n\n## \u30b5\u30f3\u30d7\u30eb\u96c6\n\n### \u30a4\u30f3\u30dd\u30fc\u30c8\n```ruby:\nimport UIKit\nimport CoreBluetooth\n```\n\n### \u30bb\u30f3\u30c8\u30e9\u30eb\u5074\n\n##### 1.\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u30d7\u30ed\u30d1\u30c6\u30a3\u5b9a\u7fa9\n```swift:\nclass ViewController: UIViewController, CBCentralManagerDelegate{\n    var centralManager: CBCentralManager!\n```\n\n\n\n##### 2.\u521d\u671f\u5316\n```swift\ncentralManager = CBCentralManager(delegate: self, queue: nil)\n```\n\n\n\n##### 3. \u72b6\u614b\u5909\u5316\u3092\u53d6\u5f97\u3059\u308b\uff08\u5fc5\u9808\uff09\n```swift\nfunc centralManagerDidUpdateState(_ central: CBCentralManager) {\n        print (\"state: \\(central.state)\")\n}\n```\n\n\n\n##### 4.\u30b9\u30ad\u30e3\u30f3\u958b\u59cb\n```swift\ncentralManager.scanForPeripherals(withServices: nil, options: nil)\n```\n\n\n##### 5.\u30b9\u30ad\u30e3\u30f3\u7d50\u679c\u53d6\u5f97\n```swift\nfunc centralManager(_ central: CBCentralManager, didDiscover peripheral: CBPeripheral, advertisementData: [String : Any], rssi RSSI: NSNumber) {\n       print(\"peripheral: \\(peripheral)\")\n}\n```\n\n\n##### 6.\u30b9\u30ad\u30e3\u30f3\u7d42\u4e86\n```swift\ncentralManager.stopScan()\n```\n\n\n##### 7. \u898b\u3064\u3051\u305f\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u3078\u306e\u63a5\u7d9a\u958b\u59cb\n```swift\nself.centralManager.connect(self.peripheral, options: nil)\n```\n\n##### 8.\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u3068\u306e\u63a5\u7d9a\u7d50\u679c\u3092\u53d6\u5f97\n```swift\n//  \u6210\u529f\u6642\nfunc centralManager(_ central: CBCentralManager, didConnect peripheral: CBPeripheral) {\n        print(\"Connect success!\")\n}\n\n//  \u5931\u6557\u6642\nfunc centralManager(_ central: CBCentralManager, didFailToConnect peripheral: CBPeripheral, error: Error?) {\n        print(\"Connect failed...\")\n}\n```\n\n\n### \u30b5\u30fc\u30d3\u30b9\u691c\u7d22\u3068\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u691c\u7d22\n\n\n##### 1. \u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u30d7\u30ed\u30d1\u30c6\u30a3\n```swift\nclass ViewController: UIViewController, CBCentralManagerDelegate, CBPeripheralDelegate{\n```\n\n##### 2. \u30b5\u30fc\u30d3\u30b9\u691c\u7d22\u958b\u59cb\n```swift\nperipheral.delegate = self\nperipheral.discoverServices(nil)\n```\n\n##### 3. \u30b5\u30fc\u30d3\u30b9\u691c\u7d22\u7d50\u679c\u306e\u53d6\u5f97\n```swift\nfunc peripheral(_ peripheral: CBPeripheral, didDiscoverServices error: Error?) {\n        guard let services = peripheral.services else{\n            print(\"error\")\n            return\n        }\n        print(\"\\(services.count)\u500b\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u767a\u898b\u3002\\(services)\")\n}\n```\n\n##### 4. \u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u306e\u691c\u7d22\n```swift\nperipheral.discoverCharacteristics(nil, for: obj)\n```\n\n\n##### 5. \u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u691c\u7d22\u7d50\u679c\u306e\u53d6\u5f97\n```swift\nfunc peripheral(_ peripheral: CBPeripheral, didDiscoverCharacteristicsFor service: CBService, error: Error?) {\n        if let characteristics = service.characteristics {\n            print(\"\\(characteristics.count)\u500b\u306e\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u3092\u767a\u898b\u3002\\(characteristics)\")\n        }\n}\n```\n\n\n\n\n### \u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u5074\n\n##### 1. \u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u30d7\u30ed\u30d1\u30c6\u30a3\n```swift\nclass ViewController: UIViewController, CBPeripheralManagerDelegate{\n        var peripheralManager: CBPeripheralManager!\n```\n\n\n\n##### 2. \u521d\u671f\u5316\n```swift\nperipheralManager = CBPeripheralManager(delegate: self, queue: nil)\n```\n\n\n##### 3. \u72b6\u614b\u5909\u5316\u3092\u53d6\u5f97\n```swift\nfunc peripheralManagerDidUpdateState(_ peripheral: CBPeripheralManager) {\n        print(\"periState\\(peripheral.state)\")\n}\n```\n\n\n##### 4. \u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u958b\u59cb\n```swift\nlet advertisementData = [CBAdvertisementDataLocalNameKey: \"Test Device\"]\nperipheralManager.startAdvertising(advertisementData)\n```\n\n\n\n##### 5. \u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u7d50\u679c\u3092\u53d6\u5f97\n```swift\nfunc peripheralManagerDidStartAdvertising(_ peripheral: CBPeripheralManager, error: Error?) {\n        if let error = error {\n            print(\"***Advertising ERROR\")\n            return\n        }\n        print(\"Advertising success\")    \n}\n```\n\n\n##### 6. \u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\u7d42\u4e86\n```swift\nperipheralManager.stopAdvertising()\n```\n\n\n### \u30b5\u30fc\u30d3\u30b9\u8ffd\u52a0\n\n##### 1. \u30b5\u30fc\u30d3\u30b9\u4f5c\u6210\n```swift\nlet serviceUUID = CBUUID(string: \"0000\")\nlet service = CBMutableService(type: serviceUUID, primary: true)\n```\n\n\n\n##### 2. \u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u4f5c\u6210\n```swift\nlet charactericUUID = CBUUID(string: \"0001\")\nlet characteristic = CBMutableCharacteristic(type: charactericUUID, properties: CBCharacteristicProperties.read, value: nil, permissions: CBAttributePermissions.readable)\n```\n\n\n##### 3. \u30b5\u30fc\u30d3\u30b9\u306b\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u3092\u8ffd\u52a0\n```swift\nservice.characteristics = [characteristic]\n```\n\n##### 4. \u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u8ffd\u52a0\n```swift\nself.peripheralManager.add(service)\n```\n\n\n\n##### 5. \u30b5\u30fc\u30d3\u30b9\u8ffd\u52a0\u7d50\u679c\u3092\u53d6\u5f97\n```swift\nfunc peripheralManager(_ peripheral: CBPeripheralManager, didAdd service: CBService, error: Error?) {\n        if error != nil {\n            print(\"Service Add Failed...\")\n            return\n        }\n        print(\"Service Add Success!\")\n}\n```\n\n\n\n", "tags": ["Swift", "Swift3.0", "iOS", "bluetooth", "BluetoothLE"]}