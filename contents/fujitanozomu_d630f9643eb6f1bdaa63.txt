{"context": "\n\n\u5927\u57df\u5909\u6570\u898b\u76f4\u3057\u524d\u306e\u4fee\u6b63\n\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC \u306f\u7aef\u672b\u304b\u3089\u306e\u5165\u529b\u3092\nchar lbuf[SIZE_LINE]; //Command line buffer\n\n\u3068\u3044\u3046 char \u306e\u914d\u5217\u306b\u683c\u7d0d\u3057\u3001\u4e2d\u9593\u30b3\u30fc\u30c9\u306b\u5909\u63db\u3057\u305f\u5f8c\u3001\u4e2d\u9593\u30b3\u30fc\u30c9\u306e\u5148\u982d\u304c\u884c\u756a\u53f7\u3067\u3042\u308c\u3070 BASIC \u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u683c\u7d0d\u30d0\u30c3\u30d5\u30a1\u306b\u767b\u9332\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u30c0\u30a4\u30ec\u30af\u30c8\u30e2\u30fc\u30c9\u3068\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\u30c0\u30a4\u30ec\u30af\u30c8\u30e2\u30fc\u30c9\u3068\u3057\u3066\u5b9f\u884c\u3057\u305f\u969b\u306b\u30a8\u30e9\u30fc\u304c\u751f\u3058\u305f\u5834\u5408\u306b\u306f\u7aef\u672b\u306b \"YOU TYPE: \" \u3068\u51fa\u529b\u3057\u305f\u5f8c lbuf[] \u306e\u5185\u5bb9\u3082\u51fa\u529b\u3059\u308b\u306e\u3067\u3059\u304c\u3001lbuf[] \u306f PRINT \u547d\u4ee4\u3067\u306e\u6570\u5024\u306e\u51fa\u529b\u3084 INPUT \u547d\u4ee4\u3067\u306e\u6570\u5024\u306e\u5165\u529b\u306e\u30d0\u30c3\u30d5\u30a1\u3068\u3057\u3066\u3082\u4f7f\u7528\u3055\u308c\u3066\u304a\u308a\u3001\u30c0\u30a4\u30ec\u30af\u30c8\u30e2\u30fc\u30c9\u3067\u305d\u308c\u3089\u306e\u547d\u4ee4\u304c\u4f7f\u7528\u3055\u308c\u305f\u4e0a\u3067\u30a8\u30e9\u30fc\u304c\u751f\u3058\u308b\u3068\u3001\u30c0\u30a4\u30ec\u30af\u30c8\u30e2\u30fc\u30c9\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u5185\u5bb9\u3067\u306a\u304f\u30d0\u30c3\u30d5\u30a1\u306e\u5185\u5bb9\u3092\u51fa\u529b\u3057\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u4e0d\u5177\u5408\u3068\u601d\u308f\u308c\u308b\u52d5\u4f5c\u3092\u3057\u307e\u3059\u3002\n>A=20*30; PRINT A; A=A/0\n600\n\nYOU TYPE: A=2600\nDevision by zero\n>\n\nOK\n>INPUT A; PRINT A/0\nA:100\n\nYOU TYPE: 100\nDevision by zero\n>\n\n\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC Arduino\u7248\u306e\u5927\u57df\u5909\u6570\u306e\u898b\u76f4\u3057\u3092\u884c\u3046\u524d\u306b\u3053\u306e\u73fe\u8c61\u306e\u5bfe\u7b56\u3092\u3057\u307e\u3059\u3002\n\nttbasic.patch2\n--- ./basic.cpp 2016-05-09 00:00:00.000000000 +0900\n+++ ./basic.cpp 2016-05-10 00:00:00.000000000 +0900\n@@ -274,6 +274,7 @@ void c_gets() {\n\n // Print numeric specified columns\n void putnum(short value, short d) {\n+  char pbuf[7];\n   unsigned char dig; //\u6841\u4f4d\u7f6e\n   unsigned char sign; //\u8ca0\u53f7\u306e\u6709\u7121\uff08\u5024\u3092\u7d76\u5bfe\u5024\u306b\u5909\u63db\u3057\u305f\u5370\uff09\n\n@@ -284,26 +285,27 @@ void putnum(short value, short d) {\n     sign = 0; //\u8ca0\u53f7\u306a\u3057\n   }\n\n-  lbuf[6] = 0; //\u7d42\u7aef\u3092\u7f6e\u304f\n+  pbuf[6] = 0; //\u7d42\u7aef\u3092\u7f6e\u304f\n   dig = 6; //\u6841\u4f4d\u7f6e\u306e\u521d\u671f\u5024\u3092\u672b\u5c3e\u306b\u8a2d\u5b9a\n   do { //\u6b21\u306e\u51e6\u7406\u3092\u3084\u3063\u3066\u307f\u308b\n-    lbuf[--dig] = (value % 10) + '0'; //1\u306e\u4f4d\u3092\u6587\u5b57\u306b\u5909\u63db\u3057\u3066\u4fdd\u5b58\n+    pbuf[--dig] = (value % 10) + '0'; //1\u306e\u4f4d\u3092\u6587\u5b57\u306b\u5909\u63db\u3057\u3066\u4fdd\u5b58\n     value /= 10; //1\u6841\u843d\u3068\u3059\n   } while (value > 0); //\u5024\u304c0\u3067\u306a\u3051\u308c\u3070\u7e70\u308a\u8fd4\u3059\n\n   if (sign) //\u3082\u3057\u8ca0\u53f7\u3042\u308a\u306a\u3089\n-    lbuf[--dig] = '-'; //\u8ca0\u53f7\u3092\u4fdd\u5b58\n+    pbuf[--dig] = '-'; //\u8ca0\u53f7\u3092\u4fdd\u5b58\n\n   while (6 - dig < d) { //\u6307\u5b9a\u306e\u6841\u6570\u3092\u4e0b\u56de\u3063\u3066\u3044\u308c\u3070\u7e70\u308a\u8fd4\u3059\n     c_putch(' '); //\u6841\u306e\u4e0d\u8db3\u3092\u7a7a\u767d\u3067\u57cb\u3081\u308b\n     d--; //\u6307\u5b9a\u306e\u6841\u6570\u30921\u6e1b\u3089\u3059\n   }\n-  c_puts(&lbuf[dig]); //\u6841\u4f4d\u7f6e\u304b\u3089\u30d0\u30c3\u30d5\u30a1\u306e\u6587\u5b57\u5217\u3092\u8868\u793a\n+  c_puts(&pbuf[dig]); //\u6841\u4f4d\u7f6e\u304b\u3089\u30d0\u30c3\u30d5\u30a1\u306e\u6587\u5b57\u5217\u3092\u8868\u793a\n }\n\n // Input numeric and return value\n // Called by only INPUT statement\n short getnum() {\n+  char gbuf[7];\n   short value, tmp; //\u5024\u3068\u8a08\u7b97\u904e\u7a0b\u306e\u5024\n   char c; //\u6587\u5b57\n   unsigned char len; //\u6587\u5b57\u6570\n@@ -319,32 +321,32 @@ short getnum() {\n     //\u884c\u982d\u306e\u7b26\u53f7\u304a\u3088\u3073\u6570\u5b57\u304c\u5165\u529b\u3055\u308c\u305f\u5834\u5408\u306e\u51e6\u7406\uff08\u7b26\u53f7\u8fbc\u307f\u30676\u6841\u3092\u8d85\u3048\u306a\u3044\u3053\u3068\uff09\n     if ((len == 0 && (c == '+' || c == '-')) ||\n       (len < 6 && c_isdigit(c))) {\n-      lbuf[len++] = c; //\u30d0\u30c3\u30d5\u30a1\u3078\u5165\u308c\u3066\u6587\u5b57\u6570\u30921\u5897\u3084\u3059\n+      gbuf[len++] = c; //\u30d0\u30c3\u30d5\u30a1\u3078\u5165\u308c\u3066\u6587\u5b57\u6570\u30921\u5897\u3084\u3059\n       c_putch(c); //\u8868\u793a\n     }\n   }\n   newline(); //\u6539\u884c\n-  lbuf[len] = 0; //\u7d42\u7aef\u3092\u7f6e\u304f\n+  gbuf[len] = 0; //\u7d42\u7aef\u3092\u7f6e\u304f\n\n-  switch (lbuf[0]) { //\u5148\u982d\u306e\u6587\u5b57\u3067\u5206\u5c90\n+  switch (gbuf[0]) { //\u5148\u982d\u306e\u6587\u5b57\u3067\u5206\u5c90\n   case '-': //\u300c-\u300d\u306e\u5834\u5408\n     sign = 1; //\u8ca0\u306e\u5024\n-    len = 1;  //\u6570\u5b57\u5217\u306flbuf[1]\u4ee5\u964d\n+    len = 1;  //\u6570\u5b57\u5217\u306fgbuf[1]\u4ee5\u964d\n     break;\n   case '+': //\u300c+\u300d\u306e\u5834\u5408\n     sign = 0; //\u6b63\u306e\u5024\n-    len = 1;  //\u6570\u5b57\u5217\u306flbuf[1]\u4ee5\u964d\n+    len = 1;  //\u6570\u5b57\u5217\u306fgbuf[1]\u4ee5\u964d\n     break;\n   default:  //\u3069\u308c\u306b\u3082\u8a72\u5f53\u3057\u306a\u3044\u5834\u5408\n     sign = 0; //\u6b63\u306e\u5024\n-    len = 0;  //\u6570\u5b57\u5217\u306flbuf[0]\u4ee5\u964d\n+    len = 0;  //\u6570\u5b57\u5217\u306fgbuf[0]\u4ee5\u964d\n     break;\n   }\n\n   value = 0; //\u5024\u3092\u30af\u30ea\u30a2\n   tmp = 0; //\u8a08\u7b97\u904e\u7a0b\u306e\u5024\u3092\u30af\u30ea\u30a2\n-  while (lbuf[len]) { //\u7d42\u7aef\u3067\u306a\u3051\u308c\u3070\u7e70\u308a\u8fd4\u3059\n-    tmp = 10 * value + lbuf[len++] - '0'; //\u6570\u5b57\u3092\u5024\u306b\u5909\u63db\n+  while (gbuf[len]) { //\u7d42\u7aef\u3067\u306a\u3051\u308c\u3070\u7e70\u308a\u8fd4\u3059\n+    tmp = 10 * value + gbuf[len++] - '0'; //\u6570\u5b57\u3092\u5024\u306b\u5909\u63db\n     if (value > tmp) { //\u3082\u3057\u8a08\u7b97\u904e\u7a0b\u306e\u5024\u304c\u524d\u56de\u3088\u308a\u5c0f\u3055\u3051\u308c\u3070\n       err = ERR_VOF; //\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3092\u8a18\u9332\n     }\n\n\n\u4ee5\u4e0a\u306e\u30d1\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u3092\u5148\u306e\u300e\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC Arduino\u7248\u306e\u30d5\u30ea\u30fc\u30a8\u30ea\u30a2\u3092\u5897\u3084\u3059\u5b9f\u9a13(2)\u300f\u306e\u5909\u66f4\u3092\u65bd\u3057\u305f\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC Arduino\u7248\u306e\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u306b\u3066\u3001\n$ patch -p0 < ttbasic.patch2\n\n\u7b49\u3057\u3066\u9069\u7528\u3059\u308b\u3068 basic.cpp \u304c\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\n\u4ee5\u4e0a\u306e\u5909\u66f4\u3092\u65bd\u3057\u30d3\u30eb\u30c9\u3057\u5b9f\u884c\u3059\u308b\u3068\u3001\u5148\u306e\u4f8b\u306e\u52d5\u4f5c\u304c\n>A=20*30; PRINT A; A=A/0\n600\n\nYOU TYPE: A=20*30; PRINT A; A=A/0\nDevision by zero\n>\n\nOK\n>INPUT A; PRINT A/0\nA:100\n\nYOU TYPE: INPUT A; PRINT A/0\nDevision by zero\n>\n\n\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u5909\u308f\u308a\u307e\u3059\u3002\n\u5c1a\u3001\u4ee5\u4e0a\u306e\u5909\u66f4\u3092\u65bd\u3057\u3066\u3082\u3001\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC \u306e\u5927\u57df\u5909\u6570\u306b\u5909\u5316\u306f\u306a\u3044\u306e\u3067 RAM \u306e\u30d5\u30ea\u30fc\u30a8\u30ea\u30a2\u306b\u5909\u5316\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u300e\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC Arduino\u7248\u306e\u30d5\u30ea\u30fc\u30a8\u30ea\u30a2\u3092\u5897\u3084\u3059\u5b9f\u9a13(4)\u300f\u306b\u7d9a\u304f\n#\u5927\u57df\u5909\u6570\u898b\u76f4\u3057\u524d\u306e\u4fee\u6b63\n\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC \u306f\u7aef\u672b\u304b\u3089\u306e\u5165\u529b\u3092\n\n```c\nchar lbuf[SIZE_LINE]; //Command line buffer\n```\n\u3068\u3044\u3046 char \u306e\u914d\u5217\u306b\u683c\u7d0d\u3057\u3001\u4e2d\u9593\u30b3\u30fc\u30c9\u306b\u5909\u63db\u3057\u305f\u5f8c\u3001\u4e2d\u9593\u30b3\u30fc\u30c9\u306e\u5148\u982d\u304c\u884c\u756a\u53f7\u3067\u3042\u308c\u3070 BASIC \u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u683c\u7d0d\u30d0\u30c3\u30d5\u30a1\u306b\u767b\u9332\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u30c0\u30a4\u30ec\u30af\u30c8\u30e2\u30fc\u30c9\u3068\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\u30c0\u30a4\u30ec\u30af\u30c8\u30e2\u30fc\u30c9\u3068\u3057\u3066\u5b9f\u884c\u3057\u305f\u969b\u306b\u30a8\u30e9\u30fc\u304c\u751f\u3058\u305f\u5834\u5408\u306b\u306f\u7aef\u672b\u306b \"YOU TYPE: \" \u3068\u51fa\u529b\u3057\u305f\u5f8c lbuf[] \u306e\u5185\u5bb9\u3082\u51fa\u529b\u3059\u308b\u306e\u3067\u3059\u304c\u3001lbuf[] \u306f PRINT \u547d\u4ee4\u3067\u306e\u6570\u5024\u306e\u51fa\u529b\u3084 INPUT \u547d\u4ee4\u3067\u306e\u6570\u5024\u306e\u5165\u529b\u306e\u30d0\u30c3\u30d5\u30a1\u3068\u3057\u3066\u3082\u4f7f\u7528\u3055\u308c\u3066\u304a\u308a\u3001\u30c0\u30a4\u30ec\u30af\u30c8\u30e2\u30fc\u30c9\u3067\u305d\u308c\u3089\u306e\u547d\u4ee4\u304c\u4f7f\u7528\u3055\u308c\u305f\u4e0a\u3067\u30a8\u30e9\u30fc\u304c\u751f\u3058\u308b\u3068\u3001\u30c0\u30a4\u30ec\u30af\u30c8\u30e2\u30fc\u30c9\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u5185\u5bb9\u3067\u306a\u304f\u30d0\u30c3\u30d5\u30a1\u306e\u5185\u5bb9\u3092\u51fa\u529b\u3057\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u4e0d\u5177\u5408\u3068\u601d\u308f\u308c\u308b\u52d5\u4f5c\u3092\u3057\u307e\u3059\u3002\n\n```text\n>A=20*30; PRINT A; A=A/0\n600\n\nYOU TYPE: A=2600\nDevision by zero\n>\n\nOK\n>INPUT A; PRINT A/0\nA:100\n\nYOU TYPE: 100\nDevision by zero\n>\n```\n\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC Arduino\u7248\u306e\u5927\u57df\u5909\u6570\u306e\u898b\u76f4\u3057\u3092\u884c\u3046\u524d\u306b\u3053\u306e\u73fe\u8c61\u306e\u5bfe\u7b56\u3092\u3057\u307e\u3059\u3002\n\n```text:ttbasic.patch2\n--- ./basic.cpp 2016-05-09 00:00:00.000000000 +0900\n+++ ./basic.cpp 2016-05-10 00:00:00.000000000 +0900\n@@ -274,6 +274,7 @@ void c_gets() {\n \n // Print numeric specified columns\n void putnum(short value, short d) {\n+  char pbuf[7];\n   unsigned char dig; //\u6841\u4f4d\u7f6e\n   unsigned char sign; //\u8ca0\u53f7\u306e\u6709\u7121\uff08\u5024\u3092\u7d76\u5bfe\u5024\u306b\u5909\u63db\u3057\u305f\u5370\uff09\n \n@@ -284,26 +285,27 @@ void putnum(short value, short d) {\n     sign = 0; //\u8ca0\u53f7\u306a\u3057\n   }\n \n-  lbuf[6] = 0; //\u7d42\u7aef\u3092\u7f6e\u304f\n+  pbuf[6] = 0; //\u7d42\u7aef\u3092\u7f6e\u304f\n   dig = 6; //\u6841\u4f4d\u7f6e\u306e\u521d\u671f\u5024\u3092\u672b\u5c3e\u306b\u8a2d\u5b9a\n   do { //\u6b21\u306e\u51e6\u7406\u3092\u3084\u3063\u3066\u307f\u308b\n-    lbuf[--dig] = (value % 10) + '0'; //1\u306e\u4f4d\u3092\u6587\u5b57\u306b\u5909\u63db\u3057\u3066\u4fdd\u5b58\n+    pbuf[--dig] = (value % 10) + '0'; //1\u306e\u4f4d\u3092\u6587\u5b57\u306b\u5909\u63db\u3057\u3066\u4fdd\u5b58\n     value /= 10; //1\u6841\u843d\u3068\u3059\n   } while (value > 0); //\u5024\u304c0\u3067\u306a\u3051\u308c\u3070\u7e70\u308a\u8fd4\u3059\n \n   if (sign) //\u3082\u3057\u8ca0\u53f7\u3042\u308a\u306a\u3089\n-    lbuf[--dig] = '-'; //\u8ca0\u53f7\u3092\u4fdd\u5b58\n+    pbuf[--dig] = '-'; //\u8ca0\u53f7\u3092\u4fdd\u5b58\n \n   while (6 - dig < d) { //\u6307\u5b9a\u306e\u6841\u6570\u3092\u4e0b\u56de\u3063\u3066\u3044\u308c\u3070\u7e70\u308a\u8fd4\u3059\n     c_putch(' '); //\u6841\u306e\u4e0d\u8db3\u3092\u7a7a\u767d\u3067\u57cb\u3081\u308b\n     d--; //\u6307\u5b9a\u306e\u6841\u6570\u30921\u6e1b\u3089\u3059\n   }\n-  c_puts(&lbuf[dig]); //\u6841\u4f4d\u7f6e\u304b\u3089\u30d0\u30c3\u30d5\u30a1\u306e\u6587\u5b57\u5217\u3092\u8868\u793a\n+  c_puts(&pbuf[dig]); //\u6841\u4f4d\u7f6e\u304b\u3089\u30d0\u30c3\u30d5\u30a1\u306e\u6587\u5b57\u5217\u3092\u8868\u793a\n }\n \n // Input numeric and return value\n // Called by only INPUT statement\n short getnum() {\n+  char gbuf[7];\n   short value, tmp; //\u5024\u3068\u8a08\u7b97\u904e\u7a0b\u306e\u5024\n   char c; //\u6587\u5b57\n   unsigned char len; //\u6587\u5b57\u6570\n@@ -319,32 +321,32 @@ short getnum() {\n     //\u884c\u982d\u306e\u7b26\u53f7\u304a\u3088\u3073\u6570\u5b57\u304c\u5165\u529b\u3055\u308c\u305f\u5834\u5408\u306e\u51e6\u7406\uff08\u7b26\u53f7\u8fbc\u307f\u30676\u6841\u3092\u8d85\u3048\u306a\u3044\u3053\u3068\uff09\n     if ((len == 0 && (c == '+' || c == '-')) ||\n       (len < 6 && c_isdigit(c))) {\n-      lbuf[len++] = c; //\u30d0\u30c3\u30d5\u30a1\u3078\u5165\u308c\u3066\u6587\u5b57\u6570\u30921\u5897\u3084\u3059\n+      gbuf[len++] = c; //\u30d0\u30c3\u30d5\u30a1\u3078\u5165\u308c\u3066\u6587\u5b57\u6570\u30921\u5897\u3084\u3059\n       c_putch(c); //\u8868\u793a\n     }\n   }\n   newline(); //\u6539\u884c\n-  lbuf[len] = 0; //\u7d42\u7aef\u3092\u7f6e\u304f\n+  gbuf[len] = 0; //\u7d42\u7aef\u3092\u7f6e\u304f\n \n-  switch (lbuf[0]) { //\u5148\u982d\u306e\u6587\u5b57\u3067\u5206\u5c90\n+  switch (gbuf[0]) { //\u5148\u982d\u306e\u6587\u5b57\u3067\u5206\u5c90\n   case '-': //\u300c-\u300d\u306e\u5834\u5408\n     sign = 1; //\u8ca0\u306e\u5024\n-    len = 1;  //\u6570\u5b57\u5217\u306flbuf[1]\u4ee5\u964d\n+    len = 1;  //\u6570\u5b57\u5217\u306fgbuf[1]\u4ee5\u964d\n     break;\n   case '+': //\u300c+\u300d\u306e\u5834\u5408\n     sign = 0; //\u6b63\u306e\u5024\n-    len = 1;  //\u6570\u5b57\u5217\u306flbuf[1]\u4ee5\u964d\n+    len = 1;  //\u6570\u5b57\u5217\u306fgbuf[1]\u4ee5\u964d\n     break;\n   default:  //\u3069\u308c\u306b\u3082\u8a72\u5f53\u3057\u306a\u3044\u5834\u5408\n     sign = 0; //\u6b63\u306e\u5024\n-    len = 0;  //\u6570\u5b57\u5217\u306flbuf[0]\u4ee5\u964d\n+    len = 0;  //\u6570\u5b57\u5217\u306fgbuf[0]\u4ee5\u964d\n     break;\n   }\n \n   value = 0; //\u5024\u3092\u30af\u30ea\u30a2\n   tmp = 0; //\u8a08\u7b97\u904e\u7a0b\u306e\u5024\u3092\u30af\u30ea\u30a2\n-  while (lbuf[len]) { //\u7d42\u7aef\u3067\u306a\u3051\u308c\u3070\u7e70\u308a\u8fd4\u3059\n-    tmp = 10 * value + lbuf[len++] - '0'; //\u6570\u5b57\u3092\u5024\u306b\u5909\u63db\n+  while (gbuf[len]) { //\u7d42\u7aef\u3067\u306a\u3051\u308c\u3070\u7e70\u308a\u8fd4\u3059\n+    tmp = 10 * value + gbuf[len++] - '0'; //\u6570\u5b57\u3092\u5024\u306b\u5909\u63db\n     if (value > tmp) { //\u3082\u3057\u8a08\u7b97\u904e\u7a0b\u306e\u5024\u304c\u524d\u56de\u3088\u308a\u5c0f\u3055\u3051\u308c\u3070\n       err = ERR_VOF; //\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3092\u8a18\u9332\n     }\n```\n\u4ee5\u4e0a\u306e\u30d1\u30c3\u30c1\u30d5\u30a1\u30a4\u30eb\u3092\u5148\u306e\u300e\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC Arduino\u7248\u306e\u30d5\u30ea\u30fc\u30a8\u30ea\u30a2\u3092\u5897\u3084\u3059\u5b9f\u9a13(2)\u300f\u306e\u5909\u66f4\u3092\u65bd\u3057\u305f\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC Arduino\u7248\u306e\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u306b\u3066\u3001\n\n```text:\n$ patch -p0 < ttbasic.patch2\n```\n\u7b49\u3057\u3066\u9069\u7528\u3059\u308b\u3068 basic.cpp \u304c\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\n\u4ee5\u4e0a\u306e\u5909\u66f4\u3092\u65bd\u3057\u30d3\u30eb\u30c9\u3057\u5b9f\u884c\u3059\u308b\u3068\u3001\u5148\u306e\u4f8b\u306e\u52d5\u4f5c\u304c\n\n```text\n>A=20*30; PRINT A; A=A/0\n600\n\nYOU TYPE: A=20*30; PRINT A; A=A/0\nDevision by zero\n>\n\nOK\n>INPUT A; PRINT A/0\nA:100\n\nYOU TYPE: INPUT A; PRINT A/0\nDevision by zero\n>\n```\n\u4ee5\u4e0a\u306e\u3088\u3046\u306b\u5909\u308f\u308a\u307e\u3059\u3002\n\u5c1a\u3001\u4ee5\u4e0a\u306e\u5909\u66f4\u3092\u65bd\u3057\u3066\u3082\u3001\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC \u306e\u5927\u57df\u5909\u6570\u306b\u5909\u5316\u306f\u306a\u3044\u306e\u3067 RAM \u306e\u30d5\u30ea\u30fc\u30a8\u30ea\u30a2\u306b\u5909\u5316\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n[\u300e\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC Arduino\u7248\u306e\u30d5\u30ea\u30fc\u30a8\u30ea\u30a2\u3092\u5897\u3084\u3059\u5b9f\u9a13(4)\u300f](http://qiita.com/fujitanozomu/items/05a6b8b3a34bdb4930c5)\u306b\u7d9a\u304f\n", "tags": ["Arduino", "BASIC", "\u8c4a\u56db\u5b63\u30bf\u30a4\u30cb\u30fcBASIC"]}