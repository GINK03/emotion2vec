{"context": "\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\uff08Ruby\uff09\u3067PPAP\u3092\u8868\u73fe\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4f55\u3092\u30e2\u30c7\u30ea\u30f3\u30b0\u3057\u3066\u3001\u3069\u3053\u307e\u3067\u4f5c\u308a\u8fbc\u3080\u304b\u3092\u82e5\u5e72\u60a9\u307f\u307e\u3057\u305f\u304c\u300130\u5206\u7a0b\u5ea6\u3067\u7d42\u308f\u308b\u30b9\u30b3\u30fc\u30d7\u3067\u5f62\u306b\u3059\u308b\u3068\u3044\u3046\u76ee\u6a19\u3067\u3084\u308a\u307e\u3057\u305f\u3002\n#\n# \"PPAP (Pen-Pineapple-Apple-Pen)\"\n#\nrequire './ppap'\n\n# P-P-A-P\nclass PPAP\n  def sing\n    i = Human.new\n\n    # I have a pen, I have an apple\n    i.have Pen.new\n    i.have Apple.new\n    #\n    # Uh! Apple-Pen!\n    apple_pen = i.combine\n\n    # I have a pen, I have pineapple\n    i.have Pen.new\n    i.have Pineapple.new\n\n    # Uh! Pineapple-Pen!\n    pineapple_pen = i.combine\n\n    # Apple-Pen, Pineapple-Pen\n    # Uh! Pen-Pineapple-Apple-Pen\n    i.have apple_pen\n    i.have pineapple_pen\n    pen_pineapple_apple_pen = i.combine\n\n    # Pen-Pineapple-Apple-Pen\n    pen_pineapple_apple_pen\n\n  end\nend\n\n\n\n\u30c6\u30b9\u30c8\u4ed8\u304d\u3067\u3059\u3002\nclass TestPPAP < Minitest::Test\n\n  def test_ppap\n    assert_instance_of PenPinappleApplePen, PPAP.new.sing\n  end\n\nend\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nhttps://github.com/matsubo/oop_ppap/\n\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\uff08Ruby\uff09\u3067PPAP\u3092\u8868\u73fe\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4f55\u3092\u30e2\u30c7\u30ea\u30f3\u30b0\u3057\u3066\u3001\u3069\u3053\u307e\u3067\u4f5c\u308a\u8fbc\u3080\u304b\u3092\u82e5\u5e72\u60a9\u307f\u307e\u3057\u305f\u304c\u300130\u5206\u7a0b\u5ea6\u3067\u7d42\u308f\u308b\u30b9\u30b3\u30fc\u30d7\u3067\u5f62\u306b\u3059\u308b\u3068\u3044\u3046\u76ee\u6a19\u3067\u3084\u308a\u307e\u3057\u305f\u3002\n\n```ruby\n#\n# \"PPAP (Pen-Pineapple-Apple-Pen)\"\n#\nrequire './ppap'\n\n# P-P-A-P\nclass PPAP\n  def sing\n    i = Human.new\n\n    # I have a pen, I have an apple\n    i.have Pen.new\n    i.have Apple.new\n    #\n    # Uh! Apple-Pen!\n    apple_pen = i.combine\n\n    # I have a pen, I have pineapple\n    i.have Pen.new\n    i.have Pineapple.new\n\n    # Uh! Pineapple-Pen!\n    pineapple_pen = i.combine\n\n    # Apple-Pen, Pineapple-Pen\n    # Uh! Pen-Pineapple-Apple-Pen\n    i.have apple_pen\n    i.have pineapple_pen\n    pen_pineapple_apple_pen = i.combine\n\n    # Pen-Pineapple-Apple-Pen\n    pen_pineapple_apple_pen\n\n  end\nend\n\n```\n\n\u30c6\u30b9\u30c8\u4ed8\u304d\u3067\u3059\u3002\n---\n\n```ruby\nclass TestPPAP < Minitest::Test\n\n  def test_ppap\n    assert_instance_of PenPinappleApplePen, PPAP.new.sing\n  end\n\nend\n```\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n---\n\nhttps://github.com/matsubo/oop_ppap/\n\n", "tags": ["Ruby", "oop", "PPAP"]}