{"context": "sbt-aws-serverless\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u3063\u305f \u3067\u516c\u958b\u3057\u305f Amazon API Gateway + Lambda\u306e\u30b5\u30fc\u30d0\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u7c21\u5358\u306b\u5b9f\u73fe\u3057\u3066\u516c\u958b\u3067\u304d\u3061\u3083\u3046sbt\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u516c\u958b\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/yoshiyoshifujii/sample-serverless\n\u4f7f\u3044\u65b9\u306f\u3001README\u306b\u66f8\u3044\u3066\u307e\u3059\u304c\u3001\u3053\u3053\u306b\u3082\u66f8\u304d\u307e\u3059\u3002\n\nAPI Gateway\u306bREST API\u3092\u4f5c\u6210\u3059\u308b\n\u307e\u305a\u3001API Gateway\u306bREST API\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ git clone https://github.com/yoshiyoshifujii/sample-serverless.git\n$ cd sample-serverless/\n$ ./bin/activator -mem 2048 \\\n  -DAWS_REGION=<Region Name> \\\n  -DAWS_ACCOUNT_ID=<AWS Account ID> \\\n  -DAWS_ROLE_ARN=arn:aws:iam::<AWS Account ID>:role/<Role Name> \\\n  -DAWS_BUCKET_NAME=<Bucket Name> \\\n  -DAUTH_KEY=hoge\n> createApiGateway <name> [description]\nApiGateway created: <Rest APi ID>\n[success] ...\n\nactivator\u3092\u8d77\u52d5\u3059\u308b\u969b\u306b\u3001\u74b0\u5883\u5909\u6570\u3092\u3044\u308d\u3044\u308d\u3068\u6307\u5b9a\u3057\u3066\u3044\u305f\u3060\u304f\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3044\u3061\u3044\u3061\u6307\u5b9a\u3059\u308b\u306e\u304c\u9762\u5012\u306a\u5834\u5408\u306f\u3001build.sbt\u3092\u7de8\u96c6\u3057\u3066\u3044\u305f\u3060\u304f\u3068\u56fa\u5b9a\u306b\u3067\u304d\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u53f3\u8fba\u3092\u826f\u3044\u611f\u3058\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nlazy val regionName = sys.props.getOrElse(\"AWS_REGION\", \"\")\nlazy val accountId = sys.props.getOrElse(\"AWS_ACCOUNT_ID\", \"\")\nlazy val restApiId = sys.props.getOrElse(\"AWS_REST_API_ID\", \"\")\nlazy val roleArn = sys.props.getOrElse(\"AWS_ROLE_ARN\", \"\")\nlazy val bucketName = sys.props.getOrElse(\"AWS_BUCKET_NAME\", \"\")\nlazy val authKey = sys.props.getOrElse(\"AUTH_KEY\", \"\")\n\n\ndeploy\n\u3064\u304e\u306b\u3001Lambda\u306bDeploy\u3057\u307e\u3059\u3002\n$ ./bin/activator -mem 2048 \\\n  -DAWS_REGION=<Region Name> \\\n  -DAWS_ACCOUNT_ID=<AWS Account ID> \\\n  -DAWS_REST_API_ID=<Rest Api ID> \\ # <- add this line\n  -DAWS_ROLE_ARN=arn:aws:iam::<AWS Account ID>:role/<Role Name> \\\n  -DAWS_BUCKET_NAME=<Bucket Name> \\\n  -DAUTH_KEY=hoge\n> deploy\n...\nLambda Deploy: arn:aws:lambda:<Region Name>:<AWS Account ID>:function:SampleHello\nPublish Lambda: arn:aws:lambda:<Region Name>:<AWS Account ID>:function:SampleHello:1\nCreate Alias: arn:aws:lambda:<Region Name>:<AWS Account ID>:function:SampleHello:test1\nCreate Alias: arn:aws:lambda:<Region Name>:<AWS Account ID>:function:SampleHello:production1\nApi Gateway Deploy\n[success] ...\n\n\u3053\u3053\u3067\u306f\u3001build.sbt\u306b\u6307\u5b9a\u3057\u3066\u3044\u308b\u3001Alias\u3092\u307e\u3068\u3081\u3066\u4f5c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001API Gateway\u306e\u7d71\u5408\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3082\u826f\u3044\u611f\u3058\u306b\u4f5c\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\nAPI Gateway \u306e\u30b9\u30c6\u30fc\u30b8\u3092\u4f5c\u6210\ntest \u3068\u3044\u3046\u540d\u524d\u306e\u30b9\u30c6\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n> createDeployment test\n[success] ...\n\n\ntest\n\u4f5c\u6210\u3057\u305f\u30b9\u30c6\u30fc\u30b8\u3084\u3001Lambda\u304c\u3061\u3083\u3093\u3068\u52d5\u304f\u304b\u3001RESTful API\u3092\u53e9\u3044\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\u3053\u306e\u969b\u3001HTTPS\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u74b0\u5883\u3067\u3042\u308b\u3053\u3068\u304c\u5fc5\u8981\u3067\u3059\u3002\n> testMethod test\ntest method success.\n[success] ...\n\n\ntest\u4ee5\u5916\u306e\u30b9\u30c6\u30fc\u30b8\u3092\u4f5c\u6210\n\u516c\u958b\u7528\u3068Staging\u30c6\u30b9\u30c8\u7528\u306b\u3001 v1 \u3068 staging \u3068\u3044\u3046\u540d\u524d\u306e\u30b9\u30c6\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u3053\u306e\u3068\u304d\u3001\u5148\u7a0bDeploy\u3057\u305ftest\u30b9\u30c6\u30fc\u30b8\u306e Deployment ID \u304c\u5fc5\u8981\u3067\u3059\u306e\u3067\u3001\u5148\u306b\u3001 getDeployments \u3092\u5b9f\u884c\u3057\u3066\u78ba\u8a8d\u3057\u3066\u304b\u3089\u3001\u4f5c\u6210\u3057\u307e\u3059\u3002\n> getDeployments\n=====================================================================================\n<Rest Api ID>\n=====================================================================================\n| Created Date                   | Deployment Id   | Description                    |\n|--------------------------------|-----------------|--------------------------------|\n| Mon Sep 19 19:56:01 JST 2016   | xxxxxx          | 0.1                            |\n[success] ...\n\n> updateStages xxxxxx\n[success] ...\n\n\ncurl\n\u6700\u5f8c\u306b\u3001curl\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308c\u3070\u3001\u516c\u958b\u5b8c\u4e86\u3067\u3059\u3002\n$ curl -i -X GET https://<Rest Api ID>.execute-api.<Region Name>.amazonaws.com/v1/hellos -H \"Authorization:hoge\"\nHTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 21\nConnection: keep-alive\nDate: Mon, 19 Sep 2016 11:47:36 GMT\nx-amzn-RequestId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\nX-Cache: Miss from cloudfront\nVia: 1.1 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.cloudfront.net (CloudFront)\nX-Amz-Cf-Id: xxxxxxx-xxxxxxxxxxxxxxxxxx_xxxxxxxx-xxxxxxxxxxxxxxxxxx==\n\n{\"message\":\"World!!\"}%\n\n\n\u307e\u3068\u3081\n\u3056\u3063\u3068\u3053\u3093\u306a\u611f\u3058\u3067Sample\u304c\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\nswagger.yaml \u3092\u826f\u3044\u611f\u3058\u306b\u4f5c\u3063\u3066\u3001Lambda\u3082\u826f\u3044\u611f\u3058\u306b\u4f5c\u308c\u3070\u3001\u3069\u3093\u3069\u3093\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u3044\u3051\u307e\u3059\u3002\nScala\u3067Lambda\u3092\u4f5c\u308b\u306e\u306b\u3001\u826f\u3044\u611f\u3058\u306b\u62bd\u8c61\u5316\u3057\u305f\u90e8\u54c1\u3082\u516c\u958b\u3067\u304d\u305f\u3089\u306a\u30fc\u3063\u3066\u304a\u3082\u3063\u3066\u307e\u3059\u304c\u3001\u304a\u3044\u304a\u3044\u3084\u3063\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4ee5\u4e0a\u3067\u3059\u3002\n[sbt-aws-serverless\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u3063\u305f](http://qiita.com/yoshiyoshifujii/items/f7bb8abd56fe9ea33e2d) \u3067\u516c\u958b\u3057\u305f Amazon API Gateway + Lambda\u306e\u30b5\u30fc\u30d0\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u7c21\u5358\u306b\u5b9f\u73fe\u3057\u3066\u516c\u958b\u3067\u304d\u3061\u3083\u3046sbt\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u516c\u958b\u3057\u307e\u3057\u305f\u3002\n\nhttps://github.com/yoshiyoshifujii/sample-serverless\n\n\u4f7f\u3044\u65b9\u306f\u3001README\u306b\u66f8\u3044\u3066\u307e\u3059\u304c\u3001\u3053\u3053\u306b\u3082\u66f8\u304d\u307e\u3059\u3002\n\n# API Gateway\u306bREST API\u3092\u4f5c\u6210\u3059\u308b\n\n\u307e\u305a\u3001API Gateway\u306bREST API\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```sh\n$ git clone https://github.com/yoshiyoshifujii/sample-serverless.git\n$ cd sample-serverless/\n$ ./bin/activator -mem 2048 \\\n  -DAWS_REGION=<Region Name> \\\n  -DAWS_ACCOUNT_ID=<AWS Account ID> \\\n  -DAWS_ROLE_ARN=arn:aws:iam::<AWS Account ID>:role/<Role Name> \\\n  -DAWS_BUCKET_NAME=<Bucket Name> \\\n  -DAUTH_KEY=hoge\n> createApiGateway <name> [description]\nApiGateway created: <Rest APi ID>\n[success] ...\n```\n\nactivator\u3092\u8d77\u52d5\u3059\u308b\u969b\u306b\u3001\u74b0\u5883\u5909\u6570\u3092\u3044\u308d\u3044\u308d\u3068\u6307\u5b9a\u3057\u3066\u3044\u305f\u3060\u304f\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3044\u3061\u3044\u3061\u6307\u5b9a\u3059\u308b\u306e\u304c\u9762\u5012\u306a\u5834\u5408\u306f\u3001build.sbt\u3092\u7de8\u96c6\u3057\u3066\u3044\u305f\u3060\u304f\u3068\u56fa\u5b9a\u306b\u3067\u304d\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u53f3\u8fba\u3092\u826f\u3044\u611f\u3058\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```sbt\nlazy val regionName = sys.props.getOrElse(\"AWS_REGION\", \"\")\nlazy val accountId = sys.props.getOrElse(\"AWS_ACCOUNT_ID\", \"\")\nlazy val restApiId = sys.props.getOrElse(\"AWS_REST_API_ID\", \"\")\nlazy val roleArn = sys.props.getOrElse(\"AWS_ROLE_ARN\", \"\")\nlazy val bucketName = sys.props.getOrElse(\"AWS_BUCKET_NAME\", \"\")\nlazy val authKey = sys.props.getOrElse(\"AUTH_KEY\", \"\")\n```\n# deploy\n\n\u3064\u304e\u306b\u3001Lambda\u306bDeploy\u3057\u307e\u3059\u3002\n\n```sh\n$ ./bin/activator -mem 2048 \\\n  -DAWS_REGION=<Region Name> \\\n  -DAWS_ACCOUNT_ID=<AWS Account ID> \\\n  -DAWS_REST_API_ID=<Rest Api ID> \\ # <- add this line\n  -DAWS_ROLE_ARN=arn:aws:iam::<AWS Account ID>:role/<Role Name> \\\n  -DAWS_BUCKET_NAME=<Bucket Name> \\\n  -DAUTH_KEY=hoge\n> deploy\n...\nLambda Deploy: arn:aws:lambda:<Region Name>:<AWS Account ID>:function:SampleHello\nPublish Lambda: arn:aws:lambda:<Region Name>:<AWS Account ID>:function:SampleHello:1\nCreate Alias: arn:aws:lambda:<Region Name>:<AWS Account ID>:function:SampleHello:test1\nCreate Alias: arn:aws:lambda:<Region Name>:<AWS Account ID>:function:SampleHello:production1\nApi Gateway Deploy\n[success] ...\n```\n\n\u3053\u3053\u3067\u306f\u3001build.sbt\u306b\u6307\u5b9a\u3057\u3066\u3044\u308b\u3001Alias\u3092\u307e\u3068\u3081\u3066\u4f5c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u307e\u305f\u3001API Gateway\u306e\u7d71\u5408\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3082\u826f\u3044\u611f\u3058\u306b\u4f5c\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n# API Gateway \u306e\u30b9\u30c6\u30fc\u30b8\u3092\u4f5c\u6210\n\n`test` \u3068\u3044\u3046\u540d\u524d\u306e\u30b9\u30c6\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```sh\n> createDeployment test\n[success] ...\n```\n\n# test\n\n\u4f5c\u6210\u3057\u305f\u30b9\u30c6\u30fc\u30b8\u3084\u3001Lambda\u304c\u3061\u3083\u3093\u3068\u52d5\u304f\u304b\u3001RESTful API\u3092\u53e9\u3044\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u969b\u3001HTTPS\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u74b0\u5883\u3067\u3042\u308b\u3053\u3068\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n```sh\n> testMethod test\ntest method success.\n[success] ...\n```\n\n# test\u4ee5\u5916\u306e\u30b9\u30c6\u30fc\u30b8\u3092\u4f5c\u6210\n\n\u516c\u958b\u7528\u3068Staging\u30c6\u30b9\u30c8\u7528\u306b\u3001 `v1` \u3068 `staging` \u3068\u3044\u3046\u540d\u524d\u306e\u30b9\u30c6\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u3068\u304d\u3001\u5148\u7a0bDeploy\u3057\u305ftest\u30b9\u30c6\u30fc\u30b8\u306e `Deployment ID` \u304c\u5fc5\u8981\u3067\u3059\u306e\u3067\u3001\u5148\u306b\u3001 `getDeployments` \u3092\u5b9f\u884c\u3057\u3066\u78ba\u8a8d\u3057\u3066\u304b\u3089\u3001\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```sh\n> getDeployments\n=====================================================================================\n<Rest Api ID>\n=====================================================================================\n| Created Date                   | Deployment Id   | Description                    |\n|--------------------------------|-----------------|--------------------------------|\n| Mon Sep 19 19:56:01 JST 2016   | xxxxxx          | 0.1                            |\n[success] ...\n\n> updateStages xxxxxx\n[success] ...\n```\n\n# curl\n\n\u6700\u5f8c\u306b\u3001curl\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308c\u3070\u3001\u516c\u958b\u5b8c\u4e86\u3067\u3059\u3002\n\n```sh\n$ curl -i -X GET https://<Rest Api ID>.execute-api.<Region Name>.amazonaws.com/v1/hellos -H \"Authorization:hoge\"\nHTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 21\nConnection: keep-alive\nDate: Mon, 19 Sep 2016 11:47:36 GMT\nx-amzn-RequestId: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\nX-Cache: Miss from cloudfront\nVia: 1.1 xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.cloudfront.net (CloudFront)\nX-Amz-Cf-Id: xxxxxxx-xxxxxxxxxxxxxxxxxx_xxxxxxxx-xxxxxxxxxxxxxxxxxx==\n\n{\"message\":\"World!!\"}%\n```\n\n# \u307e\u3068\u3081\n\n\u3056\u3063\u3068\u3053\u3093\u306a\u611f\u3058\u3067Sample\u304c\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\n`swagger.yaml` \u3092\u826f\u3044\u611f\u3058\u306b\u4f5c\u3063\u3066\u3001Lambda\u3082\u826f\u3044\u611f\u3058\u306b\u4f5c\u308c\u3070\u3001\u3069\u3093\u3069\u3093\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u3044\u3051\u307e\u3059\u3002\n\nScala\u3067Lambda\u3092\u4f5c\u308b\u306e\u306b\u3001\u826f\u3044\u611f\u3058\u306b\u62bd\u8c61\u5316\u3057\u305f\u90e8\u54c1\u3082\u516c\u958b\u3067\u304d\u305f\u3089\u306a\u30fc\u3063\u3066\u304a\u3082\u3063\u3066\u307e\u3059\u304c\u3001\u304a\u3044\u304a\u3044\u3084\u3063\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n", "tags": ["Scala", "sbt", "serverless"]}