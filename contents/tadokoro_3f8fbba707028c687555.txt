{"context": "\n\nrebar\u3067\u30c6\u30b9\u30c8\n\u30c6\u30b9\u30c8\u3092\u4f5c\u3063\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\u307e\u305a\u306f\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u308a\u307e\u3059\u3002\nmkdir -p test\n\neunit\u306b\u3088\u308b\u30c6\u30b9\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\ntest/test_myapp_hello.erl\n-module(test_myapp_hello).\n-include_lib(\"eunit/include/eunit.hrl\").\n-define(MOD, myapp_hello).\n\nsetup() ->\n     {ok, Started} = application:ensure_all_started(myapp),\n     Started.\n\ncleanup(Started) ->\n    [application:stop(App) || App <- Started].\n\nall_test_() ->\n    {setup,\n     fun setup/0,\n     fun cleanup/1,\n     [\n        fun test1/0,\n        fun test2/0\n     ]\n    }.\n\ntest1() ->\n    ?assertEqual(ok, gen_server:call(?MOD, hi)),\n    ?assert(is_alive_process()).\n\n\ntest2() ->\n    ?assert(is_alive_process()),\n    ?assertEqual(ok, gen_server:call(?MOD, stop)),\n    ?assert(not is_alive_process()).\n\nis_alive_process() ->\n    Alives = lists:filter(fun(X) -> X =:= ?MOD end, registered()),\n    length(Alives) =:= 1.\n\n\n\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n% rebar3 eunit\n\n===> Verifying dependencies...\n===> Compiling myapp\n===> Performing EUnit tests...\n- start_link() \n- init([]) \nhello world- handle_call(hi, {<0.103.0>,#Ref<0.0.1.233>}, {}) \n- handle_call(stop, {<0.103.0>,#Ref<0.0.1.236>}, {}) \n.normal terminate {}\n.\n\nTop 2 slowest tests (0.001 seconds, 1.8% of total time):\n  test_myapp_hello:all_test_/0\n    0.001 seconds\n  test_myapp_hello:all_test_/0\n    0.000 seconds\n\nFinished in 0.056 seconds\n2 tests, 0 failures\n\n=INFO REPORT==== 5-Dec-2016::15:13:02 ===\n    application: myapp\n    exited: stopped\n    type: temporary\n\n\u30c6\u30b9\u30c8\u304c\u901a\u308a\u307e\u3057\u305f\uff01\n\nrebar\u3067\u4f9d\u5b58\u95a2\u4fc2\u89e3\u6c7a\n\u30ed\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306elager\u3092\u4f8b\u306b\u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\u8d77\u52d5\u6642\u306b\u7acb\u3061\u4e0a\u3052\u308b\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066lager\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\napps/myapp/src/myapp.app.src\n{application, myapp,\n [{description, \"An OTP application\"},\n  {vsn, \"0.1.0\"},\n  {registered, []},\n  {mod, { myapp_app, []}},\n  {applications,\n   [kernel,\n    stdlib,\n    lager\n   ]},\n  {env,[]},\n  {modules, []},\n\n  {maintainers, []},\n  {licenses, []},\n  {links, []}\n ]}.\n\n\nio:format\u304b\u3089lager:debug\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\napps/myapp/src/myapp_hello.erl\n-module(myapp_hello).\n\n-behavior(gen_server).\n\n-define(DELAY, 1000).\n\n-export([\n         start_link/0,\n         stop/0,\n         init/1,\n         handle_call/3,\n         handle_cast/2,\n         handle_info/2,\n         code_change/3,\n         terminate/2\n        ]).\n\nstart_link() ->\n    lager:debug(\"- start_link() ~n\"),\n    gen_server:start_link({local, myapp_hello}, ?MODULE, [], []).\n\nstop() ->\n    lager:debug(\"- stop() ~n\"),\n    gen_server:call(?MODULE, stop).\n\ninit(Args) ->\n    lager:debug(\"- init(~p) ~n\", [Args]),\n    lager:debug(\"hello world\"),\n    {ok, {}}.\n\nhandle_call(stop, From, State) ->\n    lager:debug(\"- handle_call(stop, ~p, ~p) ~n\", [From, State]),\n    {stop, normal, ok, State};\nhandle_call(Message, From, State) ->\n    lager:debug(\"- handle_call(~p, ~p, ~p) ~n\", [Message, From, State]),\n    {reply, ok, State, ?DELAY}.\n\nhandle_cast(Message, State) ->\n    lager:debug(\"- handle_cast(~p, ~p) ~n\", [Message, State]),\n    {noreply, State, ?DELAY}.\n\nhandle_info(timeout, State) ->\n    lager:debug(\"- handle_info(timeout, ~p) ~n\", [State]),\n    {noreply, State, ?DELAY};\nhandle_info(Message, State) ->\n    lager:debug(\"- handle_info(~p, ~p) ~n\", [Message, State]),\n    {noreply, State, ?DELAY}.\n\ncode_change(OldVsn, State, Extra) ->\n    lager:debug(\"- code_change(~p, ~p, ~p) ~n\", [OldVsn, State, Extra]),\n    {ok, State}.\n\nterminate(Reason, State) ->\n    lager:debug(\"~p terminate ~p~n\", [Reason, State]).\n\n\nrebar.config\u306edeps\u306blager\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u307e\u305flager\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3{parse_transform, lager_transform}\u304c\u5fc5\u8981\u306a\u306e\u3067\u305d\u308c\u3082\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nrebar.config\n{erl_opts, [\n    debug_info,\n    {parse_transform, lager_transform}\n]}.\n\n{deps, [\n    {lager, {git, \"git://github.com/basho/lager\", {tag, \"3.2.4\"}}}\n]}.\n\n{relx, [{release, { myapp, \"0.1.0\" },\n         [\n          lager,\n          myapp,\n          sasl\n         ]},\n\n        {sys_config, \"./config/sys.config\"},\n        {vm_args, \"./config/vm.args\"},\n\n        {dev_mode, true},\n        {include_erts, false},\n\n        {extended_start_script, true}]\n}.\n\n{profiles, [{prod, [{relx, [{dev_mode, false},\n                            {include_erts, true}]}]\n            }]\n}.\n\n\n\u3053\u306e\u72b6\u614b\u3067\u30d3\u30eb\u30c9\u3057\u3066\u307f\u307e\u3059\u3002\n\u521d\u56de\u30d3\u30eb\u30c9\u6642\u306bgit\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089lager\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u3001\u3055\u3089\u306blager\u304c\u4f9d\u5b58\u3059\u308bgoldrush\u3082\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n% rebar3 release\n===> Verifying dependencies...\n===> Fetching lager ({git,\"git://github.com/basho/lager\",\n                                 {ref,\"81eaef0ce98fdbf64ab95665e3bc2ec4b24c7dac\"}})\n===> Fetching goldrush ({git,\"https://github.com/basho/goldrush.git\",\n                                   {ref,\n                                       \"8f1b715d36b650ec1e1f5612c00e28af6ab0de82\"}})\n===> Compiling goldrush\n===> Compiling lager\n===> Compiling myapp\n===> Starting relx build process ...\n===> Resolving OTP Applications from directories:\n          /home/tadokoro/git/erlang_start/myapp/_build/default/lib\n          /home/tadokoro/git/erlang_start/myapp/apps\n          /usr/lib/erlang/lib\n===> Resolved myapp-0.1.0\n===> Dev mode enabled, release will be symlinked\n===> release successfully created!\n\n\u6700\u5f8c\u306b\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\u51fa\u529b\u304cio:format\u304b\u3089lager\u306b\u7f6e\u304d\u63db\u308f\u3063\u3066\u3044\u307e\u3059\u3002\n% ./_build/default/rel/myapp/bin/myapp foreground\nExec: ~bin/erlang/19.1/erts-8.1/bin/erlexec -noshell -noinput +Bd -boot ~/myapp/_build/default/rel/myapp/releases/0.1.0/myapp -mode embedded -config ~/myapp/_build/default/rel/myapp/releases/0.1.0/sys.config -boot_var ERTS_LIB_DIR ~bin/erlang/19.1/erts-8.1/../lib -args_file ~/myapp/_build/default/rel/myapp/releases/0.1.0/vm.args -- foreground\nRoot: ~/myapp/_build/default/rel/myapp\n10:24:44.886 [debug] Lager installed handler {lager_file_backend,\"error.log\"} into lager_event\n10:24:44.886 [debug] Lager installed handler {lager_file_backend,\"console.log\"} into lager_event\n10:24:44.886 [debug] Lager installed handler error_logger_lager_h into error_logger\n10:24:44.887 [debug] Supervisor gr_param_sup started gr_param:start_link(gr_lager_default_tracer_params) at pid <0.332.0>\n10:24:44.887 [debug] Supervisor gr_counter_sup started gr_counter:start_link(gr_lager_default_tracer_counters) at pid <0.333.0>\n10:24:44.887 [debug] Supervisor gr_manager_sup started gr_manager:start_link(gr_lager_default_tracer_params_mgr, gr_lager_default_tracer_params, []) at pid <0.334.0>\n10:24:44.887 [debug] Supervisor gr_manager_sup started gr_manager:start_link(gr_lager_default_tracer_counters_mgr, gr_lager_default_tracer_counters, [{input,0},{filter,0},{output,0},{job_input,0},{job_run,0},{job_time,0},{job_error,0}]) at pid <0.335.0>\n10:24:44.892 [info] Application lager started on node myapp@tvb\n10:24:44.892 [debug] - start_link() ~n\n10:24:44.892 [debug] - init([]) \n10:24:44.892 [debug] hello world\n10:24:44.892 [debug] Supervisor myapp_sup started myapp_hello:start_link() at pid <0.341.0>\n10:24:44.893 [info] Application myapp started on node myapp@tvb\n\n=PROGRESS REPORT==== 6-Dec-2016::10:24:44 ===\n          supervisor: {local,sasl_safe_sup}\n             started: [{pid,<0.347.0>},\n                       {id,alarm_handler},\n                       {mfargs,{alarm_handler,start_link,[]}},\n                       {restart_type,permanent},\n                       {shutdown,2000},\n                       {child_type,worker}]\n10:24:44.893 [debug] Supervisor sasl_safe_sup started alarm_handler:start_link() at pid <0.347.0>\n\n=PROGRESS REPORT==== 6-Dec-2016::10:24:44 ===\n          supervisor: {local,sasl_sup}\n             started: [{pid,<0.346.0>},\n                       {id,sasl_safe_sup},\n                       {mfargs,\n                           {supervisor,start_link,\n                               [{local,sasl_safe_sup},sasl,safe]}},\n                       {restart_type,permanent},\n                       {shutdown,infinity},\n                       {child_type,supervisor}]\n10:24:44.893 [debug] Supervisor sasl_sup started supervisor:start_link({local,sasl_safe_sup}, sasl, safe) at pid <0.346.0>\n\n=PROGRESS REPORT==== 6-Dec-2016::10:24:44 ===\n          supervisor: {local,sasl_sup}\n             started: [{pid,<0.348.0>},\n                       {id,release_handler},\n                       {mfargs,{release_handler,start_link,[]}},\n                       {restart_type,permanent},\n                       {shutdown,2000},\n                       {child_type,worker}]\n\n=PROGRESS REPORT==== 6-Dec-2016::10:24:44 ===\n         application: sasl\n          started_at: myapp@tvb\n10:24:44.894 [debug] Supervisor sasl_sup started release_handler:start_link() at pid <0.348.0>\n10:24:44.894 [info] Application sasl started on node myapp@tvb\n10:24:45.387 [debug] Lager installed handler lager_backend_throttle into lager_event\n\n\n\u307e\u3068\u3081\nrebar\u3092\u4f7f\u3046\u3068\u30c6\u30b9\u30c8\u3082\u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3082\u7c21\u5358\u306b\u884c\u3048\u308b\u306e\u3067\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n# rebar\u3067\u30c6\u30b9\u30c8\n\n\u30c6\u30b9\u30c8\u3092\u4f5c\u3063\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\u307e\u305a\u306f\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```shell-session\nmkdir -p test\n```\n\neunit\u306b\u3088\u308b\u30c6\u30b9\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```erlang:test/test_myapp_hello.erl\n-module(test_myapp_hello).\n-include_lib(\"eunit/include/eunit.hrl\").\n-define(MOD, myapp_hello).\n\nsetup() ->\n     {ok, Started} = application:ensure_all_started(myapp),\n     Started.\n\ncleanup(Started) ->\n    [application:stop(App) || App <- Started].\n\nall_test_() ->\n    {setup,\n     fun setup/0,\n     fun cleanup/1,\n     [\n        fun test1/0,\n        fun test2/0\n     ]\n    }.\n\ntest1() ->\n    ?assertEqual(ok, gen_server:call(?MOD, hi)),\n    ?assert(is_alive_process()).\n\n\ntest2() ->\n    ?assert(is_alive_process()),\n    ?assertEqual(ok, gen_server:call(?MOD, stop)),\n    ?assert(not is_alive_process()).\n\nis_alive_process() ->\n    Alives = lists:filter(fun(X) -> X =:= ?MOD end, registered()),\n    length(Alives) =:= 1.\n```\n\n\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```shell-session\n% rebar3 eunit\n\n===> Verifying dependencies...\n===> Compiling myapp\n===> Performing EUnit tests...\n- start_link() \n- init([]) \nhello world- handle_call(hi, {<0.103.0>,#Ref<0.0.1.233>}, {}) \n- handle_call(stop, {<0.103.0>,#Ref<0.0.1.236>}, {}) \n.normal terminate {}\n.\n\nTop 2 slowest tests (0.001 seconds, 1.8% of total time):\n  test_myapp_hello:all_test_/0\n    0.001 seconds\n  test_myapp_hello:all_test_/0\n    0.000 seconds\n\nFinished in 0.056 seconds\n2 tests, 0 failures\n\n=INFO REPORT==== 5-Dec-2016::15:13:02 ===\n    application: myapp\n    exited: stopped\n    type: temporary\n```\n\n\u30c6\u30b9\u30c8\u304c\u901a\u308a\u307e\u3057\u305f\uff01\n\n## rebar\u3067\u4f9d\u5b58\u95a2\u4fc2\u89e3\u6c7a\n\n\u30ed\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306elager\u3092\u4f8b\u306b\u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\u8d77\u52d5\u6642\u306b\u7acb\u3061\u4e0a\u3052\u308b\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066lager\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```erlang:apps/myapp/src/myapp.app.src\n{application, myapp,\n [{description, \"An OTP application\"},\n  {vsn, \"0.1.0\"},\n  {registered, []},\n  {mod, { myapp_app, []}},\n  {applications,\n   [kernel,\n    stdlib,\n    lager\n   ]},\n  {env,[]},\n  {modules, []},\n\n  {maintainers, []},\n  {licenses, []},\n  {links, []}\n ]}.\n```\n\nio:format\u304b\u3089lager:debug\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n```erlang:apps/myapp/src/myapp_hello.erl\n-module(myapp_hello).\n\n-behavior(gen_server).\n\n-define(DELAY, 1000).\n\n-export([\n         start_link/0,\n         stop/0,\n         init/1,\n         handle_call/3,\n         handle_cast/2,\n         handle_info/2,\n         code_change/3,\n         terminate/2\n        ]).\n\nstart_link() ->\n    lager:debug(\"- start_link() ~n\"),\n    gen_server:start_link({local, myapp_hello}, ?MODULE, [], []).\n\nstop() ->\n    lager:debug(\"- stop() ~n\"),\n    gen_server:call(?MODULE, stop).\n\ninit(Args) ->\n    lager:debug(\"- init(~p) ~n\", [Args]),\n    lager:debug(\"hello world\"),\n    {ok, {}}.\n\nhandle_call(stop, From, State) ->\n    lager:debug(\"- handle_call(stop, ~p, ~p) ~n\", [From, State]),\n    {stop, normal, ok, State};\nhandle_call(Message, From, State) ->\n    lager:debug(\"- handle_call(~p, ~p, ~p) ~n\", [Message, From, State]),\n    {reply, ok, State, ?DELAY}.\n\nhandle_cast(Message, State) ->\n    lager:debug(\"- handle_cast(~p, ~p) ~n\", [Message, State]),\n    {noreply, State, ?DELAY}.\n\nhandle_info(timeout, State) ->\n    lager:debug(\"- handle_info(timeout, ~p) ~n\", [State]),\n    {noreply, State, ?DELAY};\nhandle_info(Message, State) ->\n    lager:debug(\"- handle_info(~p, ~p) ~n\", [Message, State]),\n    {noreply, State, ?DELAY}.\n\ncode_change(OldVsn, State, Extra) ->\n    lager:debug(\"- code_change(~p, ~p, ~p) ~n\", [OldVsn, State, Extra]),\n    {ok, State}.\n\nterminate(Reason, State) ->\n    lager:debug(\"~p terminate ~p~n\", [Reason, State]).\n```\n\nrebar.config\u306edeps\u306blager\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u307e\u305flager\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3{parse_transform, lager_transform}\u304c\u5fc5\u8981\u306a\u306e\u3067\u305d\u308c\u3082\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```erlang:rebar.config\n{erl_opts, [\n    debug_info,\n    {parse_transform, lager_transform}\n]}.\n\n{deps, [\n    {lager, {git, \"git://github.com/basho/lager\", {tag, \"3.2.4\"}}}\n]}.\n\n{relx, [{release, { myapp, \"0.1.0\" },\n         [\n          lager,\n          myapp,\n          sasl\n         ]},\n\n        {sys_config, \"./config/sys.config\"},\n        {vm_args, \"./config/vm.args\"},\n\n        {dev_mode, true},\n        {include_erts, false},\n\n        {extended_start_script, true}]\n}.\n\n{profiles, [{prod, [{relx, [{dev_mode, false},\n                            {include_erts, true}]}]\n            }]\n}.\n```\n\n\u3053\u306e\u72b6\u614b\u3067\u30d3\u30eb\u30c9\u3057\u3066\u307f\u307e\u3059\u3002\n\u521d\u56de\u30d3\u30eb\u30c9\u6642\u306bgit\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089lager\u304c\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u3001\u3055\u3089\u306blager\u304c\u4f9d\u5b58\u3059\u308bgoldrush\u3082\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```shell-session\n% rebar3 release\n===> Verifying dependencies...\n===> Fetching lager ({git,\"git://github.com/basho/lager\",\n                                 {ref,\"81eaef0ce98fdbf64ab95665e3bc2ec4b24c7dac\"}})\n===> Fetching goldrush ({git,\"https://github.com/basho/goldrush.git\",\n                                   {ref,\n                                       \"8f1b715d36b650ec1e1f5612c00e28af6ab0de82\"}})\n===> Compiling goldrush\n===> Compiling lager\n===> Compiling myapp\n===> Starting relx build process ...\n===> Resolving OTP Applications from directories:\n          /home/tadokoro/git/erlang_start/myapp/_build/default/lib\n          /home/tadokoro/git/erlang_start/myapp/apps\n          /usr/lib/erlang/lib\n===> Resolved myapp-0.1.0\n===> Dev mode enabled, release will be symlinked\n===> release successfully created!\n```\n\n\u6700\u5f8c\u306b\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\u51fa\u529b\u304cio:format\u304b\u3089lager\u306b\u7f6e\u304d\u63db\u308f\u3063\u3066\u3044\u307e\u3059\u3002\n\n```shell-session\n% ./_build/default/rel/myapp/bin/myapp foreground\nExec: ~bin/erlang/19.1/erts-8.1/bin/erlexec -noshell -noinput +Bd -boot ~/myapp/_build/default/rel/myapp/releases/0.1.0/myapp -mode embedded -config ~/myapp/_build/default/rel/myapp/releases/0.1.0/sys.config -boot_var ERTS_LIB_DIR ~bin/erlang/19.1/erts-8.1/../lib -args_file ~/myapp/_build/default/rel/myapp/releases/0.1.0/vm.args -- foreground\nRoot: ~/myapp/_build/default/rel/myapp\n10:24:44.886 [debug] Lager installed handler {lager_file_backend,\"error.log\"} into lager_event\n10:24:44.886 [debug] Lager installed handler {lager_file_backend,\"console.log\"} into lager_event\n10:24:44.886 [debug] Lager installed handler error_logger_lager_h into error_logger\n10:24:44.887 [debug] Supervisor gr_param_sup started gr_param:start_link(gr_lager_default_tracer_params) at pid <0.332.0>\n10:24:44.887 [debug] Supervisor gr_counter_sup started gr_counter:start_link(gr_lager_default_tracer_counters) at pid <0.333.0>\n10:24:44.887 [debug] Supervisor gr_manager_sup started gr_manager:start_link(gr_lager_default_tracer_params_mgr, gr_lager_default_tracer_params, []) at pid <0.334.0>\n10:24:44.887 [debug] Supervisor gr_manager_sup started gr_manager:start_link(gr_lager_default_tracer_counters_mgr, gr_lager_default_tracer_counters, [{input,0},{filter,0},{output,0},{job_input,0},{job_run,0},{job_time,0},{job_error,0}]) at pid <0.335.0>\n10:24:44.892 [info] Application lager started on node myapp@tvb\n10:24:44.892 [debug] - start_link() ~n\n10:24:44.892 [debug] - init([]) \n10:24:44.892 [debug] hello world\n10:24:44.892 [debug] Supervisor myapp_sup started myapp_hello:start_link() at pid <0.341.0>\n10:24:44.893 [info] Application myapp started on node myapp@tvb\n\n=PROGRESS REPORT==== 6-Dec-2016::10:24:44 ===\n          supervisor: {local,sasl_safe_sup}\n             started: [{pid,<0.347.0>},\n                       {id,alarm_handler},\n                       {mfargs,{alarm_handler,start_link,[]}},\n                       {restart_type,permanent},\n                       {shutdown,2000},\n                       {child_type,worker}]\n10:24:44.893 [debug] Supervisor sasl_safe_sup started alarm_handler:start_link() at pid <0.347.0>\n\n=PROGRESS REPORT==== 6-Dec-2016::10:24:44 ===\n          supervisor: {local,sasl_sup}\n             started: [{pid,<0.346.0>},\n                       {id,sasl_safe_sup},\n                       {mfargs,\n                           {supervisor,start_link,\n                               [{local,sasl_safe_sup},sasl,safe]}},\n                       {restart_type,permanent},\n                       {shutdown,infinity},\n                       {child_type,supervisor}]\n10:24:44.893 [debug] Supervisor sasl_sup started supervisor:start_link({local,sasl_safe_sup}, sasl, safe) at pid <0.346.0>\n\n=PROGRESS REPORT==== 6-Dec-2016::10:24:44 ===\n          supervisor: {local,sasl_sup}\n             started: [{pid,<0.348.0>},\n                       {id,release_handler},\n                       {mfargs,{release_handler,start_link,[]}},\n                       {restart_type,permanent},\n                       {shutdown,2000},\n                       {child_type,worker}]\n\n=PROGRESS REPORT==== 6-Dec-2016::10:24:44 ===\n         application: sasl\n          started_at: myapp@tvb\n10:24:44.894 [debug] Supervisor sasl_sup started release_handler:start_link() at pid <0.348.0>\n10:24:44.894 [info] Application sasl started on node myapp@tvb\n10:24:45.387 [debug] Lager installed handler lager_backend_throttle into lager_event\n```\n\n\n## \u307e\u3068\u3081\n\nrebar\u3092\u4f7f\u3046\u3068\u30c6\u30b9\u30c8\u3082\u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3082\u7c21\u5358\u306b\u884c\u3048\u308b\u306e\u3067\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n", "tags": ["Erlang", "rebar3"]}