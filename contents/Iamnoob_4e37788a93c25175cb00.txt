{"tags": ["ProjectEuler", "C++"], "context": " More than 1 year has passed since last update.\n\nProblem11\n\nproblem11.cpp\n#include <iostream>\nusing namespace std;\n\nconst int num[20][20] = {\n   {8,2,22,97,38,15,0,40,0,75,4,5,7,78,52,12,50,77,91,8},\n   {49,49,99,40,17,81,18,57,60,87,17,40,98,43,69,48,4,56,62,0},\n   {81,49,31,73,55,79,14,29,93,71,40,67,53,88,30,3,49,13,36,65},\n   {52,70,95,23,04,60,11,42,69,24,68,56,1,32,56,71,37,2,36,91},\n   {22,31,16,71,51,67,63,89,41,92,36,54,22,40,40,28,66,33,13,80},\n   {24,47,32,60,99,3,45,2,44,75,33,53,78,36,84,20,35,17,12,50},\n   {32,98,81,28,64,23,67,10,26,38,40,67,59,54,70,66,18,38,64,70},\n   {67,26,20,68,02,62,12,20,95,63,94,39,63,8,40,91,66,49,94,21},\n   {24,55,58,5,66,73,99,26,97,17,78,78,96,83,14,88,34,89,63,72},\n   {21,36,23,9,75,0,76,44,20,45,35,14,0,61,33,97,34,31,33,95},\n   {78,17,53,28,22,75,31,67,15,94,3,80,4,62,16,14,9,53,56,92},\n   {16,39,5,42,96,35,31,47,55,58,88,24,0,17,54,24,36,29,85,57},\n   {86,56,0,48,35,71,89,7,5,44,44,37,44,60,21,58,51,54,17,58},\n   {19,80,81,68,5,94,47,69,28,73,92,13,86,52,17,77,4,89,55,40},\n   {4,52,8,83,97,35,99,16,7,97,57,32,16,26,26,79,33,27,98,66},\n   {88,36,68,87,57,62,20,72,3,46,33,67,46,55,12,32,63,93,53,69},\n   {4,42,16,73,38,25,39,11,24,94,72,18,8,46,29,32,40,62,76,36},\n   {20,69,36,41,72,30,23,88,34,62,99,69,82,67,59,85,74,4,36,16},\n   {20,73,35,29,78,31,90,1,74,31,49,71,48,86,81,16,23,57,5,54},\n   {1,70,54,71,83,51,54,69,16,92,33,48,61,43,52,1,89,19,67,48}\n};\n\nint main(){\n   int ans = 0,width,height,slanting1,slanting2;\n   for(int i = 0;i <= 16;i++){\n      for(int j = 0;j <= 16; j++){\n         if(!num[i][j]) continue;\n         width = height = slanting1 = slanting2 = num[i][j];\n         for(int k = 1;k < 4;k++){\n            width *= num[i][j + k];\n            height *= num[i + k][j];\n            slanting1 *= num[i + k][j + k];\n            if(i > 2) slanting2 *= num[i - k][j + k];\n         }\n         if(width && ans < width) ans = width;\n         if(height && ans < height) ans = height;\n         if(slanting1 && ans < slanting1) ans = slanting1;\n         if(slanting2 && ans < slanting2) ans = slanting2;\n      }\n   }\n   cout << ans << endl;\n}\n\n\n\nProblem12\n\nproblem12.cpp\n#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint main(){\n   int ans,tmp,divisor;\n   ans = tmp = divisor = 0;\n   for(int i = 1;!ans;i++){\n      tmp += i;\n      for(int j = 1;j <= sqrt(tmp);j++){\n         if(j * j == tmp){\n            divisor++;\n            break;\n         }else if(!(tmp % j)){\n            divisor += 2;\n         }\n      }\n      if(divisor >= 500) if(ans < tmp) ans = tmp;\n      divisor = 0;\n   }\n   cout << ans << endl;\n}\n\n\n\nProblem13\n\u300c\uff77\uff93\uff81\uff9c\uff99\uff70\uff72...\u300d\n\u300c\u89e3\u3051\u308a\u3083\u3044\u3044\u3093\u3060\u300d\n\nproblem13.cpp\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(){\n   int ans[70] = {};\n   string s = \"37107287533902102798797998220837590246510135740250463769376774900097126481248969700780504170182605387432498619952474105947423330951305812372661730962991942213363574161572522430563301811072406154908250230675882075393461711719803104210475137780632466768926167069662363382013637841838368417873436172675728112879812849979408065481931592621691275889832738442742289174325203219235894228767964876702721893184745144573600130643909116721685684458871160315327670386486105843025439939619828917593665686757934951621764571418565606295021572231965867550793241933316490635246274190492910143244581382266334794475817892575867718337217661963751590579239728245598838407582035653253593990084026335689488301894586282278288018119938482628201427819413994056758715117009439035398664372827112653829987240784473053190104293586865155060062958648615320752733719591914205172558297169388870771546649911559348760353292171497005693854370070576826684624621495650076471787294438377604532826541087568284431911906346940378552177792951453612327252500029607107508256381565671088525835072145876576172410976447339110607218265236877223636045174237069058518606604482076212098132878607339694128114266041808683061932846081119106155694051268969251934325451728388641918047049293215058642563049483624672216484350762017279180399446930047329563406911573244438690812579451408905770622942919710792820955037687525678773091862540744969844508330393682126183363848253301546861961243487676812975343759465158038628759287849020152168555482871720121925776695478182833757993103614740356856449095527097864797581167263201004368978425535399209318374414978068609844840309812907779179908821879532736447567559084803087086987551392711854517078544161852424320693150332599594068957565367821070749269665376763262354472106979395067965269474259770973916669376304263398708541052684708299085211399427365734116182760315001271653786073615010808570091499395125570281987460043753582903531743471732693212357815498262974255273730794953759765105305946966067683156574377167401875275889028025717332296191766687138199318110487701902712526768027607800301367868099252546340106163286652636270218540497705585629946580636237993140746255962240744869082311749777923654662572469233228109171419143028819710328859780666976089293863828502533340334413065578016127815921815005561868836468420090470230530811728164304876237919698424872550366387845831148769693215490281042402013833512446218144177347063783299490636259666498587618221225225512486764533677201869716985443124195724099139590089523100588229554825530026352078153229679624948164195386821877476085327132285723110424803456124867697064507995236377742425354112916842768655389262050249103265729672370191327572567528565324825826546309220705859652229798860272258331913126375147341994889534765745501184957014548792889848568277260777137214037988797153829820378303147352772158034814451349137322665138134829543829199918180278916522431027392251122869539409579530664052326325380441000596549391598795936352974615218550237130764225512118369380358038858490341698116222072977186158236678424689157993532961922624679571944012690438771072750481023908955235974572318970677254791506150550495392297953090112996751986188088225875314529584099251203829009407770775672113067397083047244838165338735023408456470580773088295917476714036319800818712901187549131054712658197623331044818386269515456334926366572897563400500428462801835170705278318394258821455212272512503275512160354698120058176216521282765275169129689778932238195734329339946437501907836945765883352399886755061649651847751807381688378610915273579297013376217784275219262340194239963916804498399317331273132924185707147349566916674687634660915035914677504995186714302352196288948901024233251169136196266227326746080059154747183079839286853520694694454072476841822524674417161514036427982273348055556214818971426179103425986472045168939894221798260880768528778364618279934631376775430780936333301898264209010848802521674670883215120185883543223812876952786713296124747824645386369930090493103636197638780396218407357239979422340623539380833965132740801111666627891981488087797941876876144230030984490851411606618262936828367647447792391803351109890697907148578694408955299065364044742557608365997664579509666024396409905389607120198219976047599490197230297649139826800329731560371200413779037855660850892521673093931987275027546890690370753941304265231501194809377245048795150954100921645863754710598436791786391670211874924319957006419179697775990283006991536871371193661495281130587638027841075444973307840789923115535562561142322423255033685442488917353448899115014406480203690680639606723221932041495354150312888033953605329934036800697771065056663195481234880673210146739058568557934581403627822703280826165707739483275922328459417065250945123252306082291880205877731971983945018088807242966198081119777158542502016545090413245809786882778948721859617721078384350691861554356628840622574736922845095162084960398013400172393067166682355524525280460972253503534226472524250874054075591789781264330331690\";\n   for(int i = 0;i < 5000;i += 50) for(int j = 0;j < 50;j++) ans[j + 20] += s[i + j] - '0';\n   for(int i = 69;i > 0;i--){\n      if(ans[i] >= 10){\n         ans[i - 1] += ans[i] / 10;\n         ans[i] %= 10;\n      }\n   }\n   for(int i = 0;i < 70;i++) cout << ans[i];\n}\n\n\n\nProblem14\n\nproblem14.cpp\n#include <iostream>\nusing namespace std;\n\nlong long ans,length,collatznum;\n\nlong long collatz(long long x,long y = 1){\n   if(x == 1) return y;\n   if(x % 2) return collatz(3 * x + 1,++y);\n   else return collatz(x / 2,++y);\n}\n\nint main(){\n   for(int i = 1;i < 1000000;i++){\n      collatznum = collatz(i);\n      if(length < collatznum){\n         length = collatznum;\n         ans = i;\n      }\n   }\n   cout << ans << endl;\n}\n\n\n\nProblem15\n\u3042\u3063!!\u3053\u308c\u6700\u5f37\u6700\u901f\u30a2\u30eb\u30b4\u30ea\u30ba\u30de\u30fc\u990a\u6210\u8b1b\u5ea7\u3067\u898b\u305f\u554f\u984c\u3060\u3063!!\n\nproblem15.cpp\n#include <iostream>\nusing namespace std;\n\nint main(){\n   const int height = 20,width = 20;\n   long long arr[height + 1][width + 1] = {};\n   arr[0][0] = 1;\n   for(int i = 0;i <= height;i++){\n      for(int j = 0;j <= width;j++){\n         if(i != 0) arr[i][j] += arr[i - 1][j];\n         if(j != 0) arr[i][j] += arr[i][j - 1];\n      }\n   }\n   cout << arr[height][width] << endl;\n}\n\n\n\nProblem16\n\u300c\u4f55\u3053\u308c\u300d\n\u300c\u89e3\u3051\u308a\u3083(ry\u300d\n\nproblem16.cpp\n#include <iostream>\nusing namespace std;\n\nint main(){\n   int ans = 0;\n   int num[10000] = {};\n   num[0] = 2;\n   for(int i = 0;i < 999;i++){\n      for(int j = 0;j < 10000;j++) num[j] *= 2;\n      for(int j = 0;j < 10000;j++){\n         if(num[j] >= 10){\n            num[j + 1] += num[j] / 10;\n            num[j] %= 10;\n         }\n      }\n   }\n   for(int i = 0;i < 10000;i++) ans += num[i];\n   cout << ans << endl;\n}\n\n\n\nProblem17\n\nproblem17.cpp\n#include <iostream>\nusing namespace std;\n//\u30a6\u30ef\u30fc\u30c3!!!\u30aa\u30a8\u30fc\u30c3!!!!!\n\nint digit(int x){\n   switch(x){\n      case 1: case 2: case 6: case 10:\n         return 3;\n      case 4: case 5: case 9:\n         return 4;\n      case 3: case 7: case 8: case 40: case 50: case 60:\n         return 5;\n      case 11: case 12: case 20: case 30: case 80: case 90:\n         return 6;\n      case 15: case 16: case 70:\n         return 7;\n      case 13: case 14: case 18: case 19:\n         return 8;\n      case 17:\n         return 9;\n      case 100:\n         return 10;\n      default: return 0;\n      }\n}\n\nint main(){\n   int ans = 11;\n   for(int i = 1;i < 1000;i++){\n      if(digit(i)) ans += digit(i);\n      else if(i > 100){\n         ans += digit(i / 100) + 7;\n         if(i % 100){\n            ans += 3;\n            if(digit(i % 100)) ans += digit(i % 100);\n            else{\n               ans += digit(i / 10 % 10 * 10);\n               if(i % 10) ans += digit(i % 10);\n            }\n         }\n      }else ans += digit(i / 10 * 10) + digit(i % 10);\n   }\n   cout << ans << endl;\n}\n\n\n\nProblem18\n\nproblem18.cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint arr[15][15] = {\n   {75},\n   {95,64},\n   {17,47,82},\n   {18,35,87,10},\n   {20,4,82,47,65},\n   {19,1,23,75,3,34},\n   {88,2,77,73,7,63,67},\n   {99,65,4,28,6,16,70,92},\n   {41,41,26,56,83,40,80,70,33},\n   {41,48,72,33,47,32,37,16,94,29},\n   {53,71,44,65,25,43,91,52,97,51,14},\n   {70,11,33,28,77,73,17,78,39,68,17,57},\n   {91,71,52,38,17,14,91,43,58,50,27,29,48},\n   {63,66,4,68,89,53,67,30,73,16,69,87,40,31},\n   {4,62,98,27,23,9,70,98,73,93,38,53,60,4,23}\n};\n\nint main(){\n   for(int i = 13;i >= 0;i--) for(int j = 0;j < 15;j++) arr[i][j] += max(arr[i + 1][j],arr[i + 1][j + 1]);\n   cout << arr[0][0] << endl;\n}\n\n\n\nProblem19\n\nproblem19.cpp\n#include <iostream>\nusing namespace std;\n\nint main(){\n   int ans = 0,day = 1,year = 1901;\n   const int month[12] = {31,28,31,30,31,30,31,31,30,31,30,31};\n   for(;year < 2001;year++){\n      for(int i = 0;i < 12;i++){\n         if(!((day + 1) % 7)) ans++;\n         day += month[i];\n      }\n   }\n   cout << ans << endl;\n}\n\n\n\nProblem20\n\nproblem20.cpp\n#include <iostream>\nusing namespace std;\n\nint main(){\n   int ans = 0;\n   int num[200] = {};\n   num[0] = 1;\n   for(int i = 1;i <= 100;i++){\n      for(int j = 0;j < 200;j++) num[j] *= i;\n      for(int j = 0;j < 200;j++){\n         if(num[j] >= 10){\n            num[j + 1] += num[j] / 10;\n            num[j] %= 10;\n         }\n      }\n   }\n   for(int i = 0;i < 200;i++) ans += num[i];\n   cout << ans << endl;\n}\n\n\n#Problem11\n```cpp:problem11.cpp\n#include <iostream>\nusing namespace std;\n\nconst int num[20][20] = {\n   {8,2,22,97,38,15,0,40,0,75,4,5,7,78,52,12,50,77,91,8},\n   {49,49,99,40,17,81,18,57,60,87,17,40,98,43,69,48,4,56,62,0},\n   {81,49,31,73,55,79,14,29,93,71,40,67,53,88,30,3,49,13,36,65},\n   {52,70,95,23,04,60,11,42,69,24,68,56,1,32,56,71,37,2,36,91},\n   {22,31,16,71,51,67,63,89,41,92,36,54,22,40,40,28,66,33,13,80},\n   {24,47,32,60,99,3,45,2,44,75,33,53,78,36,84,20,35,17,12,50},\n   {32,98,81,28,64,23,67,10,26,38,40,67,59,54,70,66,18,38,64,70},\n   {67,26,20,68,02,62,12,20,95,63,94,39,63,8,40,91,66,49,94,21},\n   {24,55,58,5,66,73,99,26,97,17,78,78,96,83,14,88,34,89,63,72},\n   {21,36,23,9,75,0,76,44,20,45,35,14,0,61,33,97,34,31,33,95},\n   {78,17,53,28,22,75,31,67,15,94,3,80,4,62,16,14,9,53,56,92},\n   {16,39,5,42,96,35,31,47,55,58,88,24,0,17,54,24,36,29,85,57},\n   {86,56,0,48,35,71,89,7,5,44,44,37,44,60,21,58,51,54,17,58},\n   {19,80,81,68,5,94,47,69,28,73,92,13,86,52,17,77,4,89,55,40},\n   {4,52,8,83,97,35,99,16,7,97,57,32,16,26,26,79,33,27,98,66},\n   {88,36,68,87,57,62,20,72,3,46,33,67,46,55,12,32,63,93,53,69},\n   {4,42,16,73,38,25,39,11,24,94,72,18,8,46,29,32,40,62,76,36},\n   {20,69,36,41,72,30,23,88,34,62,99,69,82,67,59,85,74,4,36,16},\n   {20,73,35,29,78,31,90,1,74,31,49,71,48,86,81,16,23,57,5,54},\n   {1,70,54,71,83,51,54,69,16,92,33,48,61,43,52,1,89,19,67,48}\n};\n\nint main(){\n   int ans = 0,width,height,slanting1,slanting2;\n   for(int i = 0;i <= 16;i++){\n      for(int j = 0;j <= 16; j++){\n         if(!num[i][j]) continue;\n         width = height = slanting1 = slanting2 = num[i][j];\n         for(int k = 1;k < 4;k++){\n            width *= num[i][j + k];\n            height *= num[i + k][j];\n            slanting1 *= num[i + k][j + k];\n            if(i > 2) slanting2 *= num[i - k][j + k];\n         }\n         if(width && ans < width) ans = width;\n         if(height && ans < height) ans = height;\n         if(slanting1 && ans < slanting1) ans = slanting1;\n         if(slanting2 && ans < slanting2) ans = slanting2;\n      }\n   }\n   cout << ans << endl;\n}\n```\n#Problem12\n```cpp:problem12.cpp\n#include <iostream>\n#include <cmath>\nusing namespace std;\n\nint main(){\n   int ans,tmp,divisor;\n   ans = tmp = divisor = 0;\n   for(int i = 1;!ans;i++){\n      tmp += i;\n      for(int j = 1;j <= sqrt(tmp);j++){\n         if(j * j == tmp){\n            divisor++;\n            break;\n         }else if(!(tmp % j)){\n            divisor += 2;\n         }\n      }\n      if(divisor >= 500) if(ans < tmp) ans = tmp;\n      divisor = 0;\n   }\n   cout << ans << endl;\n}\n```\n#Problem13\n\u300c\uff77\uff93\uff81\uff9c\uff99\uff70\uff72...\u300d\n\u300c\u89e3\u3051\u308a\u3083\u3044\u3044\u3093\u3060\u300d\n\n```cpp:problem13.cpp\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main(){\n   int ans[70] = {};\n   string s = \"37107287533902102798797998220837590246510135740250463769376774900097126481248969700780504170182605387432498619952474105947423330951305812372661730962991942213363574161572522430563301811072406154908250230675882075393461711719803104210475137780632466768926167069662363382013637841838368417873436172675728112879812849979408065481931592621691275889832738442742289174325203219235894228767964876702721893184745144573600130643909116721685684458871160315327670386486105843025439939619828917593665686757934951621764571418565606295021572231965867550793241933316490635246274190492910143244581382266334794475817892575867718337217661963751590579239728245598838407582035653253593990084026335689488301894586282278288018119938482628201427819413994056758715117009439035398664372827112653829987240784473053190104293586865155060062958648615320752733719591914205172558297169388870771546649911559348760353292171497005693854370070576826684624621495650076471787294438377604532826541087568284431911906346940378552177792951453612327252500029607107508256381565671088525835072145876576172410976447339110607218265236877223636045174237069058518606604482076212098132878607339694128114266041808683061932846081119106155694051268969251934325451728388641918047049293215058642563049483624672216484350762017279180399446930047329563406911573244438690812579451408905770622942919710792820955037687525678773091862540744969844508330393682126183363848253301546861961243487676812975343759465158038628759287849020152168555482871720121925776695478182833757993103614740356856449095527097864797581167263201004368978425535399209318374414978068609844840309812907779179908821879532736447567559084803087086987551392711854517078544161852424320693150332599594068957565367821070749269665376763262354472106979395067965269474259770973916669376304263398708541052684708299085211399427365734116182760315001271653786073615010808570091499395125570281987460043753582903531743471732693212357815498262974255273730794953759765105305946966067683156574377167401875275889028025717332296191766687138199318110487701902712526768027607800301367868099252546340106163286652636270218540497705585629946580636237993140746255962240744869082311749777923654662572469233228109171419143028819710328859780666976089293863828502533340334413065578016127815921815005561868836468420090470230530811728164304876237919698424872550366387845831148769693215490281042402013833512446218144177347063783299490636259666498587618221225225512486764533677201869716985443124195724099139590089523100588229554825530026352078153229679624948164195386821877476085327132285723110424803456124867697064507995236377742425354112916842768655389262050249103265729672370191327572567528565324825826546309220705859652229798860272258331913126375147341994889534765745501184957014548792889848568277260777137214037988797153829820378303147352772158034814451349137322665138134829543829199918180278916522431027392251122869539409579530664052326325380441000596549391598795936352974615218550237130764225512118369380358038858490341698116222072977186158236678424689157993532961922624679571944012690438771072750481023908955235974572318970677254791506150550495392297953090112996751986188088225875314529584099251203829009407770775672113067397083047244838165338735023408456470580773088295917476714036319800818712901187549131054712658197623331044818386269515456334926366572897563400500428462801835170705278318394258821455212272512503275512160354698120058176216521282765275169129689778932238195734329339946437501907836945765883352399886755061649651847751807381688378610915273579297013376217784275219262340194239963916804498399317331273132924185707147349566916674687634660915035914677504995186714302352196288948901024233251169136196266227326746080059154747183079839286853520694694454072476841822524674417161514036427982273348055556214818971426179103425986472045168939894221798260880768528778364618279934631376775430780936333301898264209010848802521674670883215120185883543223812876952786713296124747824645386369930090493103636197638780396218407357239979422340623539380833965132740801111666627891981488087797941876876144230030984490851411606618262936828367647447792391803351109890697907148578694408955299065364044742557608365997664579509666024396409905389607120198219976047599490197230297649139826800329731560371200413779037855660850892521673093931987275027546890690370753941304265231501194809377245048795150954100921645863754710598436791786391670211874924319957006419179697775990283006991536871371193661495281130587638027841075444973307840789923115535562561142322423255033685442488917353448899115014406480203690680639606723221932041495354150312888033953605329934036800697771065056663195481234880673210146739058568557934581403627822703280826165707739483275922328459417065250945123252306082291880205877731971983945018088807242966198081119777158542502016545090413245809786882778948721859617721078384350691861554356628840622574736922845095162084960398013400172393067166682355524525280460972253503534226472524250874054075591789781264330331690\";\n   for(int i = 0;i < 5000;i += 50) for(int j = 0;j < 50;j++) ans[j + 20] += s[i + j] - '0';\n   for(int i = 69;i > 0;i--){\n      if(ans[i] >= 10){\n         ans[i - 1] += ans[i] / 10;\n         ans[i] %= 10;\n      }\n   }\n   for(int i = 0;i < 70;i++) cout << ans[i];\n}\n```\n#Problem14\n```cpp:problem14.cpp\n#include <iostream>\nusing namespace std;\n\nlong long ans,length,collatznum;\n\nlong long collatz(long long x,long y = 1){\n   if(x == 1) return y;\n   if(x % 2) return collatz(3 * x + 1,++y);\n   else return collatz(x / 2,++y);\n}\n\nint main(){\n   for(int i = 1;i < 1000000;i++){\n      collatznum = collatz(i);\n      if(length < collatznum){\n         length = collatznum;\n         ans = i;\n      }\n   }\n   cout << ans << endl;\n}\n```\n#Problem15\n\u3042\u3063!!\u3053\u308c[\u6700\u5f37\u6700\u901f\u30a2\u30eb\u30b4\u30ea\u30ba\u30de\u30fc\u990a\u6210\u8b1b\u5ea7](http://www.amazon.co.jp/dp/4797367172/)\u3067\u898b\u305f\u554f\u984c\u3060\u3063!!\n\n```cpp:problem15.cpp\n#include <iostream>\nusing namespace std;\n\nint main(){\n   const int height = 20,width = 20;\n   long long arr[height + 1][width + 1] = {};\n   arr[0][0] = 1;\n   for(int i = 0;i <= height;i++){\n      for(int j = 0;j <= width;j++){\n         if(i != 0) arr[i][j] += arr[i - 1][j];\n         if(j != 0) arr[i][j] += arr[i][j - 1];\n      }\n   }\n   cout << arr[height][width] << endl;\n}\n```\n#Problem16\n\u300c\u4f55\u3053\u308c\u300d\n\u300c\u89e3\u3051\u308a\u3083(ry\u300d\n\n```cpp:problem16.cpp\n#include <iostream>\nusing namespace std;\n\nint main(){\n   int ans = 0;\n   int num[10000] = {};\n   num[0] = 2;\n   for(int i = 0;i < 999;i++){\n      for(int j = 0;j < 10000;j++) num[j] *= 2;\n      for(int j = 0;j < 10000;j++){\n         if(num[j] >= 10){\n            num[j + 1] += num[j] / 10;\n            num[j] %= 10;\n         }\n      }\n   }\n   for(int i = 0;i < 10000;i++) ans += num[i];\n   cout << ans << endl;\n}\n```\n#Problem17\n```cpp:problem17.cpp\n#include <iostream>\nusing namespace std;\n//\u30a6\u30ef\u30fc\u30c3!!!\u30aa\u30a8\u30fc\u30c3!!!!!\n\nint digit(int x){\n   switch(x){\n      case 1: case 2: case 6: case 10:\n         return 3;\n      case 4: case 5: case 9:\n         return 4;\n      case 3: case 7: case 8: case 40: case 50: case 60:\n         return 5;\n      case 11: case 12: case 20: case 30: case 80: case 90:\n         return 6;\n      case 15: case 16: case 70:\n         return 7;\n      case 13: case 14: case 18: case 19:\n         return 8;\n      case 17:\n         return 9;\n      case 100:\n         return 10;\n      default: return 0;\n      }\n}\n\nint main(){\n   int ans = 11;\n   for(int i = 1;i < 1000;i++){\n      if(digit(i)) ans += digit(i);\n      else if(i > 100){\n         ans += digit(i / 100) + 7;\n         if(i % 100){\n            ans += 3;\n            if(digit(i % 100)) ans += digit(i % 100);\n            else{\n               ans += digit(i / 10 % 10 * 10);\n               if(i % 10) ans += digit(i % 10);\n            }\n         }\n      }else ans += digit(i / 10 * 10) + digit(i % 10);\n   }\n   cout << ans << endl;\n}\n```\n#Problem18\n```cpp:problem18.cpp\n#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nint arr[15][15] = {\n   {75},\n   {95,64},\n   {17,47,82},\n   {18,35,87,10},\n   {20,4,82,47,65},\n   {19,1,23,75,3,34},\n   {88,2,77,73,7,63,67},\n   {99,65,4,28,6,16,70,92},\n   {41,41,26,56,83,40,80,70,33},\n   {41,48,72,33,47,32,37,16,94,29},\n   {53,71,44,65,25,43,91,52,97,51,14},\n   {70,11,33,28,77,73,17,78,39,68,17,57},\n   {91,71,52,38,17,14,91,43,58,50,27,29,48},\n   {63,66,4,68,89,53,67,30,73,16,69,87,40,31},\n   {4,62,98,27,23,9,70,98,73,93,38,53,60,4,23}\n};\n\nint main(){\n   for(int i = 13;i >= 0;i--) for(int j = 0;j < 15;j++) arr[i][j] += max(arr[i + 1][j],arr[i + 1][j + 1]);\n   cout << arr[0][0] << endl;\n}\n```\n#Problem19\n```cpp:problem19.cpp\n#include <iostream>\nusing namespace std;\n\nint main(){\n   int ans = 0,day = 1,year = 1901;\n   const int month[12] = {31,28,31,30,31,30,31,31,30,31,30,31};\n   for(;year < 2001;year++){\n      for(int i = 0;i < 12;i++){\n         if(!((day + 1) % 7)) ans++;\n         day += month[i];\n      }\n   }\n   cout << ans << endl;\n}\n```\n#Problem20\n```cpp:problem20.cpp\n#include <iostream>\nusing namespace std;\n\nint main(){\n   int ans = 0;\n   int num[200] = {};\n   num[0] = 1;\n   for(int i = 1;i <= 100;i++){\n      for(int j = 0;j < 200;j++) num[j] *= i;\n      for(int j = 0;j < 200;j++){\n         if(num[j] >= 10){\n            num[j + 1] += num[j] / 10;\n            num[j] %= 10;\n         }\n      }\n   }\n   for(int i = 0;i < 200;i++) ans += num[i];\n   cout << ans << endl;\n}\n```\n"}