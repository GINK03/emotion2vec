{"context": "\u95a2\u9023 http://qiita.com/7of9/items/b364d897b95476a30754\nsine curve\u3092\u5b66\u7fd2\u3059\u308b\u30cd\u30c3\u30c8\u306e\u4f5c\u308a\u65b9\u3092\u52c9\u5f37\u3057\u3066\u3044\u308b\u3002\nv0.1\u3067\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u3002\nhttp://qiita.com/learn_tensorflow/items/3e46b2512a1bab73f5b2\n\n\u4e0d\u660e\u70b9\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u4e0d\u660e\u3060\u3063\u305f\u70b9\u306f\u4ee5\u4e0b\u3002\n\ntrain.py\nimport tensorflow as tf\nimport tensorflow.contrib.slim as slim\n\n# \u30d5\u30a1\u30a4\u30eb\u540d\u306e Queue \u3092\u4f5c\u6210\nfilename_queue = tf.train.string_input_producer([\"input.csv\"])\n\n# CSV \u3092 parse\nreader = tf.TextLineReader()\nkey, value = reader.read(filename_queue)\ninput1, input2, output = tf.decode_csv(value, record_defaults=[[0.], [0.], [0.]])\ninputs = tf.pack([input1, input2])\noutput = tf.pack([output])\n\n...\n\n\ntf.decode_csv()\u3067\u8aad\u307f\u8fbc\u3093\u3060input1, input2\u3092inputs\u306b\u3001output\u3092output\u306btf.pack()\u3057\u3066\u3044\u308b\u3002\ninputs\u306e\u65b9\u306f2\u3064\u306e\u9805\u76ee\u3092\u8db3\u3059\u305f\u3081\u3060\u3068\u601d\u3063\u3066\u3044\u305f\u3002\u4e00\u65b9\u3067output\u3092\u308f\u3056\u308f\u3056tf.pack()\u3059\u308b\u610f\u5473\u304c\u4e0d\u660e\u3060\u3063\u305f\u3002\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttps://www.tensorflow.org/versions/r0.11/api_docs/python/array_ops.html#pack\n\nPacks a list of rank-R tensors into one rank-(R+1) tensor.\n\ntensor\u306e\u30e9\u30f3\u30af\u3092+1\u3059\u308b\u52b9\u679c\u304c\u3042\u308b\u3089\u3057\u3044\u3002\n\ntf.pack()\u306a\u3057\u3060\u3068\u3069\u3046\u304b?\ninputs = tf.pack([input1])\noutput = tf.pack([output])\n\n\u3092\u4ee5\u4e0b\u3068\u3057\u3066\u307f\u305f (output\u306etf.pack()\u3092\u3084\u3081\u305f)\u3002\ninputs = tf.pack([input1])\n#output = tf.pack([output])\n\n\u5b9f\u884c\u6642\u306b\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u3002\n\nValueError: Shapes (4, 1) and (4,) are incompatible\n\ntensor\u306e\u30e9\u30f3\u30af\u304cR\u306e\u307e\u307e\u3060\u3068\u3046\u307e\u304f\u52d5\u304b\u306a\u304f\u306a\u308b\u3002\n\u3053\u306e\u3042\u305f\u308a\u306f\u4f7f\u7528\u3059\u308btensor\u306eshape\u306b\u3064\u3044\u3066\u52c9\u5f37\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\u95a2\u9023 http://qiita.com/7of9/items/b364d897b95476a30754\n\nsine curve\u3092\u5b66\u7fd2\u3059\u308b\u30cd\u30c3\u30c8\u306e\u4f5c\u308a\u65b9\u3092\u52c9\u5f37\u3057\u3066\u3044\u308b\u3002\n\n[v0.1](http://qiita.com/7of9/items/b364d897b95476a30754\n)\u3067\u306f\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u3002\nhttp://qiita.com/learn_tensorflow/items/3e46b2512a1bab73f5b2\n\n### \u4e0d\u660e\u70b9\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u4e0d\u660e\u3060\u3063\u305f\u70b9\u306f\u4ee5\u4e0b\u3002\n\n```train.py\nimport tensorflow as tf\nimport tensorflow.contrib.slim as slim\n\n# \u30d5\u30a1\u30a4\u30eb\u540d\u306e Queue \u3092\u4f5c\u6210\nfilename_queue = tf.train.string_input_producer([\"input.csv\"])\n\n# CSV \u3092 parse\nreader = tf.TextLineReader()\nkey, value = reader.read(filename_queue)\ninput1, input2, output = tf.decode_csv(value, record_defaults=[[0.], [0.], [0.]])\ninputs = tf.pack([input1, input2])\noutput = tf.pack([output])\n\n...\n```\n\ntf.decode_csv()\u3067\u8aad\u307f\u8fbc\u3093\u3060input1, input2\u3092inputs\u306b\u3001output\u3092output\u306btf.pack()\u3057\u3066\u3044\u308b\u3002\n\ninputs\u306e\u65b9\u306f2\u3064\u306e\u9805\u76ee\u3092\u8db3\u3059\u305f\u3081\u3060\u3068\u601d\u3063\u3066\u3044\u305f\u3002\u4e00\u65b9\u3067output\u3092\u308f\u3056\u308f\u3056tf.pack()\u3059\u308b\u610f\u5473\u304c\u4e0d\u660e\u3060\u3063\u305f\u3002\n\n### \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\nhttps://www.tensorflow.org/versions/r0.11/api_docs/python/array_ops.html#pack\n\n> Packs a list of rank-R tensors into one rank-(R+1) tensor.\n\ntensor\u306e\u30e9\u30f3\u30af\u3092+1\u3059\u308b\u52b9\u679c\u304c\u3042\u308b\u3089\u3057\u3044\u3002\n\n### tf.pack()\u306a\u3057\u3060\u3068\u3069\u3046\u304b?\n\n```\ninputs = tf.pack([input1])\noutput = tf.pack([output])\n```\n\n\u3092\u4ee5\u4e0b\u3068\u3057\u3066\u307f\u305f (output\u306etf.pack()\u3092\u3084\u3081\u305f)\u3002\n\n```\ninputs = tf.pack([input1])\n#output = tf.pack([output])\n```\n\n\u5b9f\u884c\u6642\u306b\u4ee5\u4e0b\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u3002\n\n> ValueError: Shapes (4, 1) and (4,) are incompatible\n\ntensor\u306e\u30e9\u30f3\u30af\u304cR\u306e\u307e\u307e\u3060\u3068\u3046\u307e\u304f\u52d5\u304b\u306a\u304f\u306a\u308b\u3002\n\u3053\u306e\u3042\u305f\u308a\u306f\u4f7f\u7528\u3059\u308btensor\u306eshape\u306b\u3064\u3044\u3066\u52c9\u5f37\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002\n\n", "tags": ["borgWarp", "TensorFlow"]}