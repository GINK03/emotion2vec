{"context": " More than 1 year has passed since last update.Rails4\u306e\u30c7\u30d5\u30a9\u30eb\u30c8logger\u3067\u3042\u308bTaggedLogging\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u5165\u308c\u5b50\u3067\u30bf\u30b0\u3092\u51fa\u529b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nrequire \"active_support/tagged_logging\"\nlogger = ActiveSupport::TaggedLogging.new(ActiveSupport::Logger.new(STDOUT))\n\nlogger.tagged(\"tag1\") do\n  logger.tagged(\"tag2\") do\n    logger.debug \"message\"\n  end\nend\n\n# >> [tag1] [tag2] message\n\n\u3053\u308c\u3092\u6d3b\u7528\u3057\u3066\u6b21\u306e\u3088\u3046\u306b\u30e2\u30c7\u30eb\u306e\u4e3b\u8981\u30e1\u30bd\u30c3\u30c9\u3092\u30e9\u30c3\u30d7\u3057\u307e\u304f\u308b\u3068\u3001\u4f55\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u30c8\u30ea\u30ac\u30fc\u306b\u306a\u3063\u3066\u305d\u306eSQL\u304c\u547c\u3070\u308c\u305f\u306e\u304b\u304c\u308f\u304b\u308a\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\nrequire \"active_record\"\nActiveRecord::Base.logger = logger\nActiveSupport::LogSubscriber.colorize_logging = false\nActiveRecord::Migration.verbose = false\nActiveRecord::Base.establish_connection(:adapter => \"sqlite3\", :database => \":memory:\")\nActiveRecord::Schema.define do\n  create_table :users do |t|\n    t.string :name\n  end\nend\n\nclass User < ActiveRecord::Base\n  validates :name, :uniqueness => true\n\n  [:save!, :save, :valid?, :destroy].each do |e|\n    define_method(e) do |*args, &block|\n      logger.tagged(\"#{self.class.name}##{e}\") { super(*args, &block) }\n    end\n  end\n\n  [:save, :destroy].each do |e|\n    send(\"around_#{e}\", prepend: true) {|_, block| logger.tagged(e, &block) }\n  end\nend\n\nUser.create!(:name => \"alice\").destroy!\n\n# >>    (1.7ms)  CREATE TABLE \"users\" (\"id\" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, \"name\" varchar) \n# >> [User#save!]    (0.1ms)  begin transaction\n# >> [User#save!] [User#valid?]   User Exists (0.1ms)  SELECT  1 AS one FROM \"users\" WHERE \"users\".\"name\" = 'alice' LIMIT 1\n# >> [User#save!] [save]   SQL (0.1ms)  INSERT INTO \"users\" (\"name\") VALUES (?)  [[\"name\", \"alice\"]]\n# >> [User#save!]    (0.0ms)  commit transaction\n# >> [User#destroy]    (0.0ms)  begin transaction\n# >> [User#destroy] [destroy]   SQL (0.1ms)  DELETE FROM \"users\" WHERE \"users\".\"id\" = ?  [[\"id\", 1]]\n# >> [User#destroy]    (0.1ms)  commit transaction\n\nDB\u306e\u6c34\u5e73\u5206\u5272\u306a\u3069\u3092\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001DB\u306e\u63a5\u7d9a\u5148\u3092\u30bf\u30b0\u306b\u5165\u308c\u308b\u306e\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nRails4\u306e\u30c7\u30d5\u30a9\u30eb\u30c8logger\u3067\u3042\u308bTaggedLogging\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u5165\u308c\u5b50\u3067\u30bf\u30b0\u3092\u51fa\u529b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```ruby\nrequire \"active_support/tagged_logging\"\nlogger = ActiveSupport::TaggedLogging.new(ActiveSupport::Logger.new(STDOUT))\n\nlogger.tagged(\"tag1\") do\n  logger.tagged(\"tag2\") do\n    logger.debug \"message\"\n  end\nend\n\n# >> [tag1] [tag2] message\n```\n\n\u3053\u308c\u3092\u6d3b\u7528\u3057\u3066\u6b21\u306e\u3088\u3046\u306b\u30e2\u30c7\u30eb\u306e\u4e3b\u8981\u30e1\u30bd\u30c3\u30c9\u3092\u30e9\u30c3\u30d7\u3057\u307e\u304f\u308b\u3068\u3001\u4f55\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u30c8\u30ea\u30ac\u30fc\u306b\u306a\u3063\u3066\u305d\u306eSQL\u304c\u547c\u3070\u308c\u305f\u306e\u304b\u304c\u308f\u304b\u308a\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\n```ruby\nrequire \"active_record\"\nActiveRecord::Base.logger = logger\nActiveSupport::LogSubscriber.colorize_logging = false\nActiveRecord::Migration.verbose = false\nActiveRecord::Base.establish_connection(:adapter => \"sqlite3\", :database => \":memory:\")\nActiveRecord::Schema.define do\n  create_table :users do |t|\n    t.string :name\n  end\nend\n\nclass User < ActiveRecord::Base\n  validates :name, :uniqueness => true\n\n  [:save!, :save, :valid?, :destroy].each do |e|\n    define_method(e) do |*args, &block|\n      logger.tagged(\"#{self.class.name}##{e}\") { super(*args, &block) }\n    end\n  end\n\n  [:save, :destroy].each do |e|\n    send(\"around_#{e}\", prepend: true) {|_, block| logger.tagged(e, &block) }\n  end\nend\n\nUser.create!(:name => \"alice\").destroy!\n\n# >>    (1.7ms)  CREATE TABLE \"users\" (\"id\" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, \"name\" varchar) \n# >> [User#save!]    (0.1ms)  begin transaction\n# >> [User#save!] [User#valid?]   User Exists (0.1ms)  SELECT  1 AS one FROM \"users\" WHERE \"users\".\"name\" = 'alice' LIMIT 1\n# >> [User#save!] [save]   SQL (0.1ms)  INSERT INTO \"users\" (\"name\") VALUES (?)  [[\"name\", \"alice\"]]\n# >> [User#save!]    (0.0ms)  commit transaction\n# >> [User#destroy]    (0.0ms)  begin transaction\n# >> [User#destroy] [destroy]   SQL (0.1ms)  DELETE FROM \"users\" WHERE \"users\".\"id\" = ?  [[\"id\", 1]]\n# >> [User#destroy]    (0.1ms)  commit transaction\n```\n\nDB\u306e\u6c34\u5e73\u5206\u5272\u306a\u3069\u3092\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001DB\u306e\u63a5\u7d9a\u5148\u3092\u30bf\u30b0\u306b\u5165\u308c\u308b\u306e\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["ActiveRecord", "Rails", "debug", "TaggedLogging"]}