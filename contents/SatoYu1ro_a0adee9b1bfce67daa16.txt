{"context": " More than 1 year has passed since last update.Steve Awodey\u306e\u300eCategory Theory\u300f\u3092\u3061\u3087\u3063\u3068\u305a\u3064\u8aad\u3093\u3067\u3001\u521d\u5b66\u8005\u304c\u3064\u307e\u305a\u304d\u3084\u3059\u3044\u6240\u3092\u5171\u6709\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f1.4 Examples of Categories\u306e2\u56de\u76ee\u3067\u3059\u3002\n\nPos\u3063\u3066\u4f55\uff1f\n\u4eca\u56de\u306f1.4\u7bc0\u306e\u4e2d\u30673\u500b\u76ee\u306e\u4f8b\u3068\u3057\u3066\u51fa\u3066\u304f\u308bPosPosPos\u3092\u52c9\u5f37\u3057\u307e\u3059\u3002\nPosPosPos\u306fposet\u3092\u5bfe\u8c61\u3068\u3057\u3001\u305d\u306e\u9593\u306b\u5b9a\u7fa9\u3055\u308c\u308bmonotone\u306a\u95a2\u6570\u3092\u5c04\u3068\u3059\u308b\u570f\u3060\u305d\u3046\u3067\u3059\u3002\nposet\u3084monotone\u306e\u5b9a\u7fa9\u306f\u672c\u306b\u3042\u308b\u901a\u308a\u3067\u3059\u304c\u3001Wikipedia\u306b\u3082\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\u6570\u5f0f\u3067\u66f8\u304b\u308c\u308b\u3068\u3073\u3063\u304f\u308a\u3057\u307e\u3059\u304c\u3001\u8981\u3059\u308b\u306b\u4f55\u304b\u96c6\u5408\u3068\u3001\u305d\u306e\u9593\u306e\u95a2\u6570\u304b\u3089\u6210\u308b\u570f\u3067\u3059\u3002\n\u3067\u3082\u3001\u305f\u3060\u306e\u96c6\u5408\u3067\u306f\u306a\u304f\u3066\u3001<=\u3067\u6bd4\u8f03\u3067\u304d\u308b\u7269\u3060\u3051\u3092\u96c6\u3081\u305f\u96c6\u5408\u3067\u3059\u3002\n\u3042\u3068\u3001\u96c6\u5408\u306e\u9593\u306b\u3042\u308b\u95a2\u6570\u306f\u3001\u305f\u3060\u306e\u95a2\u6570\u3067\u306f\u306a\u304f\u3066\u6bd4\u8f03\u306e\u9806\u5e8f\u3092\u4fdd\u5b58\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n\u4f8b\u3048\u3070Int\u578b\u306f\u3001\u305d\u306e\u5024\u3092<=\u3067\u6bd4\u8f03\u3067\u304d\u308b\u306e\u3067poset\u306e\u4e00\u7a2e\u3067\u3059\u3002\nInt\u578b\u3092\u96c6\u5408\u3068\u8a00\u3046\u306e\u306f\u9055\u548c\u611f\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001Int\u578b\u306e\u5024\u3068\u3044\u3046\u306e\u306f\u4e0b\u9650\u304c\u3042\u3063\u3066\u4e0a\u9650\u304c\u3042\u3063\u3066\u3001\u305d\u306e\u9593\u306e\u6574\u6570\u306a\u306e\u3060\u304b\u3089\u96c6\u5408\u3067\u3059\u3002\n\u540c\u3058\u3088\u3046\u306bDouble\u578b\u3082poset\u306e\u4e00\u7a2e\u3067\u3059\u3002\nPosPosPos\u306e\u5bfe\u8c61\u306b\u306fInt\u578b\u3068Double\u578b\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\u6b21\u306f\u5c04\u306e\u5177\u4f53\u4f8b\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u56db\u6368\u4e94\u5165\u304c\u3044\u3044\u4f8b\u306b\u306a\u308a\u307e\u3059\u3002\n\u56db\u6368\u4e94\u5165\u3092Double\u578b\u304b\u3089Int\u578b\u3078\u306e\u95a2\u6570\u3060\u3068\u8003\u3048\u308b\u3068\u3001\u3053\u308c\u306f\u6bd4\u8f03\u306e\u9806\u5e8f\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\u56db\u6368\u4e94\u5165\u3059\u308b\u95a2\u6570\u3092f\u3068\u3057\u307e\u3059\u3002\n\u3059\u308b\u3068\u3001\u4f8b\u3048\u30701.14 <= 1.73\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u56db\u6368\u4e94\u5165\u3059\u308b\u3068f(1.14) = 1 <= f(1.73) = 2\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u56db\u6368\u4e94\u5165\u3059\u308b\u524d\u306b\u6210\u308a\u7acb\u3063\u3066\u3044\u305f\u5927\u5c0f\u95a2\u4fc2\u306f\u3001\u56db\u6368\u4e94\u5165\u3057\u305f\u5f8c\u306b\u3082\u6210\u308a\u7acb\u3064\u306e\u3067\u3059\u3002\n\u3053\u308c\u304cPosPosPos\u306e\u4e2d\u306e\u5c04\u306e\u4f8b\u3067\u3059\u3002\n\u3053\u306e\u3088\u3046\u306aposet\u3068monotone\u306a\u95a2\u6570\u306e\u96c6\u307e\u308a\u304cPosPosPos\u3060\u305d\u3046\u3067\u3059\u3002\n\u3058\u3083\u3042\u65e9\u901f\u5b9f\u88c5\u3067\u3059\u3002\n\u3068\u3053\u308d\u3067\u5927\u5c0f\u95a2\u4fc2\u3092\u6bd4\u8f03\u3067\u304d\u308b\u7269\u306e\u96c6\u5408\u3063\u3066\u3069\u308c\u304f\u3089\u3044\u3042\u308b\u3067\u3057\u3087\u3046\uff1f\n\u305d\u308a\u3083\u3001\u3044\u304f\u3089\u3067\u3082\u3042\u308a\u307e\u3059\uff01\n\u3060\u304b\u3089PosPosPos\u306e\u5168\u90e8\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u4ed5\u65b9\u306a\u3044\u306e\u3067\u4e00\u90e8\u3060\u3051\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u305d\u308c\u3067\u3082\u3001PosPosPos\u3092\u7406\u89e3\u3059\u308b\u52a9\u3051\u306b\u306f\u306a\u308b\u306f\u305a\u3067\u3059\uff01\n\nPos\u3092\u3044\u3058\u3063\u3066\u307f\u308b\n\u305d\u3093\u306a\u308f\u3051\u3067PosPosPos\u306b\u542b\u307e\u308c\u308bposet\u3068monotone\u306a\u5199\u50cf\u306e\u3044\u304f\u3064\u304b\u3092Scala\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3082\u306e\u304c\u3053\u3061\u3089\u3067\u3059\u3002\nhttps://github.com/YuichiroSato/CategoryTheory/blob/master/src/chapter01/Pos.scala\n\u3053\u306e\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30da\u3059\u308b\u306a\u308a\u306a\u3093\u306a\u308a\u3057\u3066\u3001\u624b\u5143\u306bPos.scala\u3092\u7528\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nScala\u306eREPL\u3092\u8d77\u52d5\u3057\u3001\nscala> :load Pos.scala\n\n\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u3053\u308c\u3067\u5fc5\u8981\u306a\u30af\u30e9\u30b9\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3057\u305f\u3002\n\u5b9f\u88c5\u3057\u305fposet\u306e\u4e00\u89a7\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\nIntPoset\u3000\u6574\u6570\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\nPositiveIntPoset\u3000\u6b63\u306e\u6574\u6570\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\nNegativeIntPoset\u3000\u8ca0\u306e\u6574\u6570\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\nBinaryIntPoset\u30000\u30681\u3060\u3051\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\nDoublePoset\u3000\u5b9f\u6570\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\nPositiveDoublePoset\u3000\u6b63\u306e\u5b9f\u6570\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\nNegativeDoublePoset\u3000\u8ca0\u306e\u5b9f\u6570\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\nStringPoset\u3000\u5c0f\u6587\u5b57\u306e\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3060\u3051\u3067\u4f5c\u308c\u308b\u6587\u5b57\u5217\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\nAStringPoset\u3000a\u3060\u3051\u3067\u4f5c\u308c\u308b\u6587\u5b57\u5217\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\n\nInt\u578b\u3084Double\u578b\u306f\u5b9f\u969b\u306b\u306f\u4e0a\u9650\u4e0b\u9650\u306e\u3042\u308b\u578b\u3067\u3001\u6574\u6570\u3084\u5b9f\u6570\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3067\u3059\u304c\u3001\u305d\u3053\u3092\u3061\u3083\u3093\u3068\u8003\u3048\u308b\u3068\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3068\u304b\u30a2\u30f3\u30c0\u30fc\u30d5\u30ed\u30fc\u3068\u304b\u3001\u3072\u305f\u3059\u3089\u9762\u5012\u306a\u3060\u3051\u3067\u3042\u3093\u307e\u308a\u9762\u767d\u304f\u306a\u3044\u8a71\u3092\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\uff01\n\u5b9f\u88c5\u4e0a\u306f-1000000\u4ee5\u4e0a1000000\u672a\u6e80\u306e\u6570\u3084100\u6587\u5b57\u307e\u3067\u306e\u6587\u5b57\u5217\u306a\u3069\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\u3067\u306f\u56db\u6368\u4e94\u5165\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\nscala> val roundOff = (d: Double) => if ((d % 1) < 0.5) d.toInt else d.toInt + 1\nroundOff: Double => Int = <function1>\n\nPos.scala\u306b\u306f\u3001\u3053\u308c\u304cmonotone\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u3002\nscala> Pos.isMonotone(roundOff)\nres1: Boolean = true\n\ntrue\u304c\u5e30\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u3069\u3046\u3084\u3089\u56db\u6368\u4e94\u5165\u306fDobule\u578b\u3068Int\u578b\u306e\u9593\u306b\u3042\u308bmonotone\u306a\u95a2\u6570\u3067\u3044\u3044\u3089\u3057\u3044\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u30c1\u30a7\u30c3\u30af\u306e\u65b9\u6cd5\u3067\u3059\u304c\u3001\u95a2\u6570\u306e\u5f15\u6570\u306e\u578b\u306b\u5bfe\u5fdc\u3059\u308bposet\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306a\u5024\u3092\u53d6\u3063\u3066\u304d\u3066\u3001\u4e0e\u3048\u3089\u308c\u305f\u95a2\u6570\u3092\u9069\u7528\u3057\u3066\u5927\u5c0f\u95a2\u4fc2\u304c\u4fdd\u305f\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u309210000\u56de\u8a66\u3057\u3066\u3044\u307e\u3059\u3002\n10000\u56de\u3082\u8a66\u3057\u3066\u3044\u308b\u306e\u304b\u300110000\u56de\u3057\u304b\u8a66\u3057\u3066\u3044\u306a\u3044\u306e\u304b\u3002\n\u610f\u898b\u306e\u5206\u304b\u308c\u308b\u3068\u3053\u308d\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u307e\u30fc\u3072\u3068\u307e\u305a\u306e\u76ee\u5b89\u306b\u306f\u306a\u308a\u307e\u3059\uff01\ntrue\u3092\u8fd4\u3057\u305f\u3068\u8a00\u3063\u3066\u904e\u4fe1\u306f\u7981\u7269\u3067\u3059\u304c\u3001false\u304c\u5e30\u3063\u3066\u304d\u305f\u6642\u306f\u4fe1\u983c\u3067\u304d\u307e\u3059\u3002\n\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u95a2\u6570\u306f\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u7d76\u5bfe\u5024\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\u7d76\u5bfe\u5024\u306f\u5fc5\u305a\u6b63\u306e\u5024\u306a\u306e\u3067\u3001Int\u306e\u5024\u3092PositiveInt\u306b\u5909\u63db\u3059\u308b\u95a2\u6570\u306b\u306a\u308a\u307e\u3059\u3002\nPos.scala\u306b\u306fPositiveInt\u578b\u304c\u7528\u610f\u3057\u3066\u3042\u308a\u307e\u3059\u3002\nscala> val abs = (i:Int) => Pos.PositiveInt(i.abs)\nabs: Int => Pos.PositiveInt = <function1>\n\nscala> Pos.isMonotone(abs)\nres2: Boolean = false\n\nfalse\u304c\u5e30\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u3053\u306e\u95a2\u6570\u306fmonotone\u3067\u306f\u306a\u3044\u305d\u3046\u3067\u3059\u3002\nPos.scala\u306b\u306f\u53cd\u4f8b\u3092\u898b\u3064\u3051\u3066\u304f\u308c\u308b\u95a2\u6570\u3082\u5b9a\u7fa9\u3057\u3066\u3042\u308a\u307e\u3059\u3002\nscala> Pos.counterExample(abs)\n-308522 < 139007, f(139007) = PositiveInt(139007) < f(-308522) = PositiveInt(308522)\n\n\u78ba\u304b\u306b\u5927\u5c0f\u95a2\u4fc2\u304c\u3072\u3063\u304f\u308a\u8fd4\u308b\u4f8b\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u3053\u308c\u3082\u300110000\u56de\u8a66\u3057\u3066\u307f\u3066\u3001\u53cd\u4f8b\u304c\u3042\u3063\u305f\u3089\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3053\u306ePositiveInt\u578b\u3067\u3059\u304c\u3001\u5225\u306b\u8ca0\u306e\u5024\u3092\u5165\u308c\u305f\u304b\u3089\u3068\u3044\u3063\u3066\u4f8b\u5916\u3092\u51fa\u3057\u3066\u304f\u308c\u305f\u308a\u306f\u3057\u306a\u3044\u306e\u3067\u3001\u305d\u3053\u306f\u6c17\u3092\u3064\u3051\u3066\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\uff01\n\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\nscala> val intToPositiveInt = (i: Int) => if (i < 0) Pos.PositiveInt(0) else Pos.PositiveInt(i)\nintToPositiveInt: Int => Pos.PositiveInt = <function1>\n\nscala> Pos.isMonotone(intToPositiveInt)\nres4: Boolean = true\n\nscala> val sqrt = (p: Pos.PositiveInt) => Math.sqrt(p.value)\nsqrt: Pos.PositiveInt => Double = <function1>\n\nscala> Pos.isMonotone(sqrt)\nres5: Boolean = true\n\n\u3055\u3066\u3001PosPosPos\u306f\u570f\u3067\u3059\u3002\n\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u5c04\u306e\u5408\u6210\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3067\u306fIntPoset\u304b\u3089PositiveIntPoset\u3078\u306e\u5c04\u3067\u3042\u308bintToPositiveInt\u3068\u3001PositiveIntPoset\u304b\u3089DobulePoset\u3078\u306e\u5c04\u3067\u3042\u308bsqrt\u3092\u5408\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nscala> val com = sqrt compose intToPositiveInt\ncom: Int => Double = <function1>\n\nscala> Pos.isMonotone(com)\nres6: Boolean = true\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001monotone\u306a\u95a2\u6570\u3092\u5408\u6210\u3057\u305f\u3082\u306e\u3082\u3061\u3083\u3093\u3068monotone\u3067\u3059\u3002\n\u3053\u306e\u95a2\u6570\u306fIntPoset\u304b\u3089DobulePoset\u3078\u306e\u5c04\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3067\u3082\u3053\u306e\u95a2\u6570\u3001\u4e00\u5ea6PositiveIntPoset\u3092\u901a\u3063\u3066\u307e\u3059\u304c\u3001\u5225\u306bIntPoset\u304b\u3089\u76f4\u63a5DoublePoset\u3078\u884c\u3063\u3066\u3082\u3044\u3044\u306f\u305a\u3067\u3059\u3002\n\u305d\u3046\u3044\u3046\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3057\u3087\u3046\u3002\nscala> val intToSqrt = (i: Int) => if (i <= 0) 0.0 else Math.sqrt(i)\nintToSqrt: Int => Double = <function1>\n\nscala> Pos.isMonotone(intToSqrt)\nres7: Boolean = true\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u76f4\u901a\u3059\u308b\u95a2\u6570\u3082monotone\u3067\u3001PosPosPos\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e2\u3064\u306e\u95a2\u6570\u306f\u540c\u3058\u7269\u3067\u3057\u3087\u3046\u304b\uff1f\n\u9055\u3046\u3082\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u305d\u308c\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u95a2\u6570\u3082\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\nscala> Pos.equal(intToSqrt, sqrt compose intToPositiveInt)\nres8: Boolean = true\n\ntrue\u304c\u5e30\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u3069\u3046\u3084\u3089\u540c\u3058\u95a2\u6570\u306e\u3088\u3046\u3067\u3059\u3002\n\u3084\u306f\u308a\u3001\u30c1\u30a7\u30c3\u30af\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u5024\u306710000\u56de\u8a66\u3057\u3066\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u570f\u8ad6\u3063\u307d\u304f\u66f8\u304f\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\nintToPositiveInt:IntPoset\u2192PositiveIntPosetsqrt:PositiveIntPoset\u2192DoublePosetintToSqrt:IntPoset\u2192DoublePosetintToSqrt=sqrt\u2218intToPositiveIntintToPositiveInt:IntPoset\u2192PositiveIntPosetsqrt:PositiveIntPoset\u2192DoublePosetintToSqrt:IntPoset\u2192DoublePosetintToSqrt=sqrt\u2218intToPositiveInt{intToPositiveInt : IntPoset \\rightarrow PositiveIntPoset \\\\\nsqrt : PositiveIntPoset \\rightarrow DoublePoset \\\\\nintToSqrt : IntPoset \\rightarrow DoublePoset \\\\\nintToSqrt = sqrt \\circ intToPositiveInt\n}\n\u4ed6\u306b\u3082\u3044\u308d\u3093\u306a\u95a2\u6570\u304c\u5b9a\u7fa9\u3067\u304d\u3066\u3001monotone\u3060\u3063\u305f\u308a\u305d\u3046\u3058\u3083\u306a\u304b\u3063\u305f\u308a\u3001\u5408\u6210\u3067\u304d\u305f\u308a\u3067\u304d\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002\nPos.scala\u306e\u4e2d\u306b\u306f\u3001\u4f8b\u3068\u3057\u3066\u3053\u3093\u306a\u306e\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\nval idInt = (i: Int) => i\n\nval add1 = (a: Int) => a + 1\n\nval mod2 = (i: Int) => BinaryInt(i % 2)\n\nval minMax = (b: BinaryInt) => if (b.value == 0) -1000000 else 1000000\n\nval inverse = (p: PositiveInt) => NegativeInt(-p.value)\n\nval duplicate = (str: String) => str + str\n\nval Alength = (astr: AString) => astr.value.length\n\n\u3069\u308c\u304cPosPosPos\u306e\u5c04\u3067\u3001\u3069\u308c\u304c\u9055\u3046\u3067\u3057\u3087\u3046\uff1f\n\u305c\u3072\u3044\u308d\u3044\u308d\u3084\u3063\u3066\u307f\u3066\u3001\u904a\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\uff01\n\n\u307e\u3068\u3081\nPosPosPos\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u52c9\u5f37\u3057\u307e\u3057\u305f\u3002\n\u5b9f\u969b\u306b\u570f\u3092\u624b\u3067\u89e6\u3063\u3066\u307f\u3066\u3001\u304b\u306a\u308a\u30a4\u30e1\u30fc\u30b8\u304c\u3064\u304b\u3081\u3066\u6765\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff01\nSteve Awodey\u306e\u300eCategory Theory\u300f\u3092\u3061\u3087\u3063\u3068\u305a\u3064\u8aad\u3093\u3067\u3001\u521d\u5b66\u8005\u304c\u3064\u307e\u305a\u304d\u3084\u3059\u3044\u6240\u3092\u5171\u6709\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f1.4 Examples of Categories\u306e2\u56de\u76ee\u3067\u3059\u3002\n\n# Pos\u3063\u3066\u4f55\uff1f\n\n\u4eca\u56de\u306f1.4\u7bc0\u306e\u4e2d\u30673\u500b\u76ee\u306e\u4f8b\u3068\u3057\u3066\u51fa\u3066\u304f\u308b$Pos$\u3092\u52c9\u5f37\u3057\u307e\u3059\u3002\n$Pos$\u306fposet\u3092\u5bfe\u8c61\u3068\u3057\u3001\u305d\u306e\u9593\u306b\u5b9a\u7fa9\u3055\u308c\u308bmonotone\u306a\u95a2\u6570\u3092\u5c04\u3068\u3059\u308b\u570f\u3060\u305d\u3046\u3067\u3059\u3002\n[poset](http://ja.wikipedia.org/wiki/%E9%A0%86%E5%BA%8F%E9%9B%86%E5%90%88)\u3084[monotone](http://ja.wikipedia.org/wiki/%E5%8D%98%E8%AA%BF%E5%86%99%E5%83%8F)\u306e\u5b9a\u7fa9\u306f\u672c\u306b\u3042\u308b\u901a\u308a\u3067\u3059\u304c\u3001Wikipedia\u306b\u3082\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\u6570\u5f0f\u3067\u66f8\u304b\u308c\u308b\u3068\u3073\u3063\u304f\u308a\u3057\u307e\u3059\u304c\u3001\u8981\u3059\u308b\u306b\u4f55\u304b\u96c6\u5408\u3068\u3001\u305d\u306e\u9593\u306e\u95a2\u6570\u304b\u3089\u6210\u308b\u570f\u3067\u3059\u3002\n\u3067\u3082\u3001\u305f\u3060\u306e\u96c6\u5408\u3067\u306f\u306a\u304f\u3066\u3001<=\u3067\u6bd4\u8f03\u3067\u304d\u308b\u7269\u3060\u3051\u3092\u96c6\u3081\u305f\u96c6\u5408\u3067\u3059\u3002\n\u3042\u3068\u3001\u96c6\u5408\u306e\u9593\u306b\u3042\u308b\u95a2\u6570\u306f\u3001\u305f\u3060\u306e\u95a2\u6570\u3067\u306f\u306a\u304f\u3066\u6bd4\u8f03\u306e\u9806\u5e8f\u3092\u4fdd\u5b58\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n\n\u4f8b\u3048\u3070Int\u578b\u306f\u3001\u305d\u306e\u5024\u3092<=\u3067\u6bd4\u8f03\u3067\u304d\u308b\u306e\u3067poset\u306e\u4e00\u7a2e\u3067\u3059\u3002\nInt\u578b\u3092\u96c6\u5408\u3068\u8a00\u3046\u306e\u306f\u9055\u548c\u611f\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001Int\u578b\u306e\u5024\u3068\u3044\u3046\u306e\u306f\u4e0b\u9650\u304c\u3042\u3063\u3066\u4e0a\u9650\u304c\u3042\u3063\u3066\u3001\u305d\u306e\u9593\u306e\u6574\u6570\u306a\u306e\u3060\u304b\u3089\u96c6\u5408\u3067\u3059\u3002\n\u540c\u3058\u3088\u3046\u306bDouble\u578b\u3082poset\u306e\u4e00\u7a2e\u3067\u3059\u3002\n\n$Pos$\u306e\u5bfe\u8c61\u306b\u306fInt\u578b\u3068Double\u578b\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\u6b21\u306f\u5c04\u306e\u5177\u4f53\u4f8b\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u56db\u6368\u4e94\u5165\u304c\u3044\u3044\u4f8b\u306b\u306a\u308a\u307e\u3059\u3002\n\u56db\u6368\u4e94\u5165\u3092Double\u578b\u304b\u3089Int\u578b\u3078\u306e\u95a2\u6570\u3060\u3068\u8003\u3048\u308b\u3068\u3001\u3053\u308c\u306f\u6bd4\u8f03\u306e\u9806\u5e8f\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\u56db\u6368\u4e94\u5165\u3059\u308b\u95a2\u6570\u3092f\u3068\u3057\u307e\u3059\u3002\n\u3059\u308b\u3068\u3001\u4f8b\u3048\u30701.14 <= 1.73\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u56db\u6368\u4e94\u5165\u3059\u308b\u3068f(1.14) = 1 <= f(1.73) = 2\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u56db\u6368\u4e94\u5165\u3059\u308b\u524d\u306b\u6210\u308a\u7acb\u3063\u3066\u3044\u305f\u5927\u5c0f\u95a2\u4fc2\u306f\u3001\u56db\u6368\u4e94\u5165\u3057\u305f\u5f8c\u306b\u3082\u6210\u308a\u7acb\u3064\u306e\u3067\u3059\u3002\n\u3053\u308c\u304c$Pos$\u306e\u4e2d\u306e\u5c04\u306e\u4f8b\u3067\u3059\u3002\n\n\u3053\u306e\u3088\u3046\u306aposet\u3068monotone\u306a\u95a2\u6570\u306e\u96c6\u307e\u308a\u304c$Pos$\u3060\u305d\u3046\u3067\u3059\u3002\n\u3058\u3083\u3042\u65e9\u901f\u5b9f\u88c5\u3067\u3059\u3002\n\u3068\u3053\u308d\u3067\u5927\u5c0f\u95a2\u4fc2\u3092\u6bd4\u8f03\u3067\u304d\u308b\u7269\u306e\u96c6\u5408\u3063\u3066\u3069\u308c\u304f\u3089\u3044\u3042\u308b\u3067\u3057\u3087\u3046\uff1f\n\u305d\u308a\u3083\u3001\u3044\u304f\u3089\u3067\u3082\u3042\u308a\u307e\u3059\uff01\n\u3060\u304b\u3089$Pos$\u306e\u5168\u90e8\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u4ed5\u65b9\u306a\u3044\u306e\u3067\u4e00\u90e8\u3060\u3051\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u305d\u308c\u3067\u3082\u3001$Pos$\u3092\u7406\u89e3\u3059\u308b\u52a9\u3051\u306b\u306f\u306a\u308b\u306f\u305a\u3067\u3059\uff01\n\n# Pos\u3092\u3044\u3058\u3063\u3066\u307f\u308b\n\n\u305d\u3093\u306a\u308f\u3051\u3067$Pos$\u306b\u542b\u307e\u308c\u308bposet\u3068monotone\u306a\u5199\u50cf\u306e\u3044\u304f\u3064\u304b\u3092Scala\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3082\u306e\u304c\u3053\u3061\u3089\u3067\u3059\u3002\n\n[https://github.com/YuichiroSato/CategoryTheory/blob/master/src/chapter01/Pos.scala](https://github.com/YuichiroSato/CategoryTheory/blob/master/src/chapter01/Pos.scala)\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30da\u3059\u308b\u306a\u308a\u306a\u3093\u306a\u308a\u3057\u3066\u3001\u624b\u5143\u306bPos.scala\u3092\u7528\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nScala\u306eREPL\u3092\u8d77\u52d5\u3057\u3001\n\n```\nscala> :load Pos.scala\n```\n\n\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u3053\u308c\u3067\u5fc5\u8981\u306a\u30af\u30e9\u30b9\u304c\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3057\u305f\u3002\n\n\u5b9f\u88c5\u3057\u305fposet\u306e\u4e00\u89a7\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n* IntPoset\u3000\u6574\u6570\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\n* PositiveIntPoset\u3000\u6b63\u306e\u6574\u6570\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\n* NegativeIntPoset\u3000\u8ca0\u306e\u6574\u6570\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\n* BinaryIntPoset\u30000\u30681\u3060\u3051\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\n* DoublePoset\u3000\u5b9f\u6570\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\n* PositiveDoublePoset\u3000\u6b63\u306e\u5b9f\u6570\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\n* NegativeDoublePoset\u3000\u8ca0\u306e\u5b9f\u6570\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\n* StringPoset\u3000\u5c0f\u6587\u5b57\u306e\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3060\u3051\u3067\u4f5c\u308c\u308b\u6587\u5b57\u5217\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\n* AStringPoset\u3000a\u3060\u3051\u3067\u4f5c\u308c\u308b\u6587\u5b57\u5217\u3092\u8981\u7d20\u306b\u6301\u3064\u96c6\u5408\n\nInt\u578b\u3084Double\u578b\u306f\u5b9f\u969b\u306b\u306f\u4e0a\u9650\u4e0b\u9650\u306e\u3042\u308b\u578b\u3067\u3001\u6574\u6570\u3084\u5b9f\u6570\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3067\u3059\u304c\u3001\u305d\u3053\u3092\u3061\u3083\u3093\u3068\u8003\u3048\u308b\u3068\u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u3068\u304b\u30a2\u30f3\u30c0\u30fc\u30d5\u30ed\u30fc\u3068\u304b\u3001\u3072\u305f\u3059\u3089\u9762\u5012\u306a\u3060\u3051\u3067\u3042\u3093\u307e\u308a\u9762\u767d\u304f\u306a\u3044\u8a71\u3092\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\uff01\n\u5b9f\u88c5\u4e0a\u306f-1000000\u4ee5\u4e0a1000000\u672a\u6e80\u306e\u6570\u3084100\u6587\u5b57\u307e\u3067\u306e\u6587\u5b57\u5217\u306a\u3069\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3067\u306f\u56db\u6368\u4e94\u5165\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\nscala> val roundOff = (d: Double) => if ((d % 1) < 0.5) d.toInt else d.toInt + 1\nroundOff: Double => Int = <function1>\n```\n\nPos.scala\u306b\u306f\u3001\u3053\u308c\u304cmonotone\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u304f\u308c\u308b\u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\nscala> Pos.isMonotone(roundOff)\nres1: Boolean = true\n```\n\ntrue\u304c\u5e30\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u3069\u3046\u3084\u3089\u56db\u6368\u4e94\u5165\u306fDobule\u578b\u3068Int\u578b\u306e\u9593\u306b\u3042\u308bmonotone\u306a\u95a2\u6570\u3067\u3044\u3044\u3089\u3057\u3044\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u30c1\u30a7\u30c3\u30af\u306e\u65b9\u6cd5\u3067\u3059\u304c\u3001\u95a2\u6570\u306e\u5f15\u6570\u306e\u578b\u306b\u5bfe\u5fdc\u3059\u308bposet\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306a\u5024\u3092\u53d6\u3063\u3066\u304d\u3066\u3001\u4e0e\u3048\u3089\u308c\u305f\u95a2\u6570\u3092\u9069\u7528\u3057\u3066\u5927\u5c0f\u95a2\u4fc2\u304c\u4fdd\u305f\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u309210000\u56de\u8a66\u3057\u3066\u3044\u307e\u3059\u3002\n10000\u56de\u3082\u8a66\u3057\u3066\u3044\u308b\u306e\u304b\u300110000\u56de\u3057\u304b\u8a66\u3057\u3066\u3044\u306a\u3044\u306e\u304b\u3002\n\u610f\u898b\u306e\u5206\u304b\u308c\u308b\u3068\u3053\u308d\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u307e\u30fc\u3072\u3068\u307e\u305a\u306e\u76ee\u5b89\u306b\u306f\u306a\u308a\u307e\u3059\uff01\ntrue\u3092\u8fd4\u3057\u305f\u3068\u8a00\u3063\u3066\u904e\u4fe1\u306f\u7981\u7269\u3067\u3059\u304c\u3001false\u304c\u5e30\u3063\u3066\u304d\u305f\u6642\u306f\u4fe1\u983c\u3067\u304d\u307e\u3059\u3002\n\n\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u95a2\u6570\u306f\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u7d76\u5bfe\u5024\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\u7d76\u5bfe\u5024\u306f\u5fc5\u305a\u6b63\u306e\u5024\u306a\u306e\u3067\u3001Int\u306e\u5024\u3092PositiveInt\u306b\u5909\u63db\u3059\u308b\u95a2\u6570\u306b\u306a\u308a\u307e\u3059\u3002\nPos.scala\u306b\u306fPositiveInt\u578b\u304c\u7528\u610f\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n```\nscala> val abs = (i:Int) => Pos.PositiveInt(i.abs)\nabs: Int => Pos.PositiveInt = <function1>\n\nscala> Pos.isMonotone(abs)\nres2: Boolean = false\n```\n\nfalse\u304c\u5e30\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u3053\u306e\u95a2\u6570\u306fmonotone\u3067\u306f\u306a\u3044\u305d\u3046\u3067\u3059\u3002\nPos.scala\u306b\u306f\u53cd\u4f8b\u3092\u898b\u3064\u3051\u3066\u304f\u308c\u308b\u95a2\u6570\u3082\u5b9a\u7fa9\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n```\nscala> Pos.counterExample(abs)\n-308522 < 139007, f(139007) = PositiveInt(139007) < f(-308522) = PositiveInt(308522)\n```\n\n\u78ba\u304b\u306b\u5927\u5c0f\u95a2\u4fc2\u304c\u3072\u3063\u304f\u308a\u8fd4\u308b\u4f8b\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u3053\u308c\u3082\u300110000\u56de\u8a66\u3057\u3066\u307f\u3066\u3001\u53cd\u4f8b\u304c\u3042\u3063\u305f\u3089\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3053\u306ePositiveInt\u578b\u3067\u3059\u304c\u3001\u5225\u306b\u8ca0\u306e\u5024\u3092\u5165\u308c\u305f\u304b\u3089\u3068\u3044\u3063\u3066\u4f8b\u5916\u3092\u51fa\u3057\u3066\u304f\u308c\u305f\u308a\u306f\u3057\u306a\u3044\u306e\u3067\u3001\u305d\u3053\u306f\u6c17\u3092\u3064\u3051\u3066\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\uff01\n\n\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\nscala> val intToPositiveInt = (i: Int) => if (i < 0) Pos.PositiveInt(0) else Pos.PositiveInt(i)\nintToPositiveInt: Int => Pos.PositiveInt = <function1>\n\nscala> Pos.isMonotone(intToPositiveInt)\nres4: Boolean = true\n\nscala> val sqrt = (p: Pos.PositiveInt) => Math.sqrt(p.value)\nsqrt: Pos.PositiveInt => Double = <function1>\n\nscala> Pos.isMonotone(sqrt)\nres5: Boolean = true\n```\n\n\u3055\u3066\u3001$Pos$\u306f\u570f\u3067\u3059\u3002\n\u3068\u3044\u3046\u3053\u3068\u306f\u3001\u5c04\u306e\u5408\u6210\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3067\u306fIntPoset\u304b\u3089PositiveIntPoset\u3078\u306e\u5c04\u3067\u3042\u308bintToPositiveInt\u3068\u3001PositiveIntPoset\u304b\u3089DobulePoset\u3078\u306e\u5c04\u3067\u3042\u308bsqrt\u3092\u5408\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\nscala> val com = sqrt compose intToPositiveInt\ncom: Int => Double = <function1>\n\nscala> Pos.isMonotone(com)\nres6: Boolean = true\n```\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001monotone\u306a\u95a2\u6570\u3092\u5408\u6210\u3057\u305f\u3082\u306e\u3082\u3061\u3083\u3093\u3068monotone\u3067\u3059\u3002\n\u3053\u306e\u95a2\u6570\u306fIntPoset\u304b\u3089DobulePoset\u3078\u306e\u5c04\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3067\u3082\u3053\u306e\u95a2\u6570\u3001\u4e00\u5ea6PositiveIntPoset\u3092\u901a\u3063\u3066\u307e\u3059\u304c\u3001\u5225\u306bIntPoset\u304b\u3089\u76f4\u63a5DoublePoset\u3078\u884c\u3063\u3066\u3082\u3044\u3044\u306f\u305a\u3067\u3059\u3002\n\u305d\u3046\u3044\u3046\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3057\u3087\u3046\u3002\n\n```\nscala> val intToSqrt = (i: Int) => if (i <= 0) 0.0 else Math.sqrt(i)\nintToSqrt: Int => Double = <function1>\n\nscala> Pos.isMonotone(intToSqrt)\nres7: Boolean = true\n```\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u76f4\u901a\u3059\u308b\u95a2\u6570\u3082monotone\u3067\u3001$Pos$\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e2\u3064\u306e\u95a2\u6570\u306f\u540c\u3058\u7269\u3067\u3057\u3087\u3046\u304b\uff1f\n\u9055\u3046\u3082\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u305d\u308c\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u95a2\u6570\u3082\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\n```\nscala> Pos.equal(intToSqrt, sqrt compose intToPositiveInt)\nres8: Boolean = true\n```\n\ntrue\u304c\u5e30\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u3069\u3046\u3084\u3089\u540c\u3058\u95a2\u6570\u306e\u3088\u3046\u3067\u3059\u3002\n\u3084\u306f\u308a\u3001\u30c1\u30a7\u30c3\u30af\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u5024\u306710000\u56de\u8a66\u3057\u3066\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u570f\u8ad6\u3063\u307d\u304f\u66f8\u304f\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\n```math\nintToPositiveInt : IntPoset \\rightarrow PositiveIntPoset \\\\\nsqrt : PositiveIntPoset \\rightarrow DoublePoset \\\\\nintToSqrt : IntPoset \\rightarrow DoublePoset \\\\\nintToSqrt = sqrt \\circ intToPositiveInt\n```\n\n\u4ed6\u306b\u3082\u3044\u308d\u3093\u306a\u95a2\u6570\u304c\u5b9a\u7fa9\u3067\u304d\u3066\u3001monotone\u3060\u3063\u305f\u308a\u305d\u3046\u3058\u3083\u306a\u304b\u3063\u305f\u308a\u3001\u5408\u6210\u3067\u304d\u305f\u308a\u3067\u304d\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002\nPos.scala\u306e\u4e2d\u306b\u306f\u3001\u4f8b\u3068\u3057\u3066\u3053\u3093\u306a\u306e\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\n```\nval idInt = (i: Int) => i\n\nval add1 = (a: Int) => a + 1\n\nval mod2 = (i: Int) => BinaryInt(i % 2)\n\nval minMax = (b: BinaryInt) => if (b.value == 0) -1000000 else 1000000\n\nval inverse = (p: PositiveInt) => NegativeInt(-p.value)\n\nval duplicate = (str: String) => str + str\n\nval Alength = (astr: AString) => astr.value.length\n```\n\n\u3069\u308c\u304c$Pos$\u306e\u5c04\u3067\u3001\u3069\u308c\u304c\u9055\u3046\u3067\u3057\u3087\u3046\uff1f\n\u305c\u3072\u3044\u308d\u3044\u308d\u3084\u3063\u3066\u307f\u3066\u3001\u904a\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\uff01\n\n# \u307e\u3068\u3081\n\n$Pos$\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u52c9\u5f37\u3057\u307e\u3057\u305f\u3002\n\u5b9f\u969b\u306b\u570f\u3092\u624b\u3067\u89e6\u3063\u3066\u307f\u3066\u3001\u304b\u306a\u308a\u30a4\u30e1\u30fc\u30b8\u304c\u3064\u304b\u3081\u3066\u6765\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff01\n", "tags": ["\u570f\u8ad6", "Scala"]}