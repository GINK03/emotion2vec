{"context": " More than 1 year has passed since last update.http://www.playframework.com/documentation/2.1.x/ScalaOpenID\ndef loginPost = Action { implicit request =>\n  Form(single(\n    \"openid\" -> nonEmptyText\n  )).bindFromRequest.fold(\n    error => {\n      Logger.info(\"bad request \" + error.toString)\n      BadRequest(error.toString)\n    },\n    {\n      case (openid) => AsyncResult(OpenID.redirectURL(openid, routes.Application.openIDCallback.absoluteURL())\n          .extend( _.value match {\n              case Redeemed(url) => Redirect(url)\n              case Thrown(t) => Redirect(routes.Application.login)\n          }))\n    }\n  )\n}\n\ndef openIDCallback = Action { implicit request =>\n  AsyncResult(\n    OpenID.verifiedId.extend( _.value match {\n      case Redeemed(info) => Ok(info.id + \"\\n\" + info.attributes)\n      case Thrown(t) => {\n        // Here you should look at the error, and give feedback to the user\n        Redirect(routes.Application.login)\n      }\n    })\n  )\n}\n\n\u306e\u4e2d\u306bOpenID.redirectURL(openid, routes.Application.openIDCallback.absoluteURL())\n          .extend\u307f\u305f\u3044\u306a\u6240\u3042\u308b\u3051\u3069\u30012.1\u306eFuture\u306bextend\u306a\u3093\u3066\u306a\u3044\u306e\u3067\u9069\u5b9c\u66f8\u304d\u63db\u3048\u307e\u3057\u3087\u3046\u3002\n\nhttp://www.playframework.com/documentation/2.1.x/ScalaOpenID\n\n```\ndef loginPost = Action { implicit request =>\n  Form(single(\n    \"openid\" -> nonEmptyText\n  )).bindFromRequest.fold(\n    error => {\n      Logger.info(\"bad request \" + error.toString)\n      BadRequest(error.toString)\n    },\n    {\n      case (openid) => AsyncResult(OpenID.redirectURL(openid, routes.Application.openIDCallback.absoluteURL())\n          .extend( _.value match {\n              case Redeemed(url) => Redirect(url)\n              case Thrown(t) => Redirect(routes.Application.login)\n          }))\n    }\n  )\n}\n\ndef openIDCallback = Action { implicit request =>\n  AsyncResult(\n    OpenID.verifiedId.extend( _.value match {\n      case Redeemed(info) => Ok(info.id + \"\\n\" + info.attributes)\n      case Thrown(t) => {\n        // Here you should look at the error, and give feedback to the user\n        Redirect(routes.Application.login)\n      }\n    })\n  )\n}\n```\n\u306e\u4e2d\u306b```OpenID.redirectURL(openid, routes.Application.openIDCallback.absoluteURL())\n          .extend```\u307f\u305f\u3044\u306a\u6240\u3042\u308b\u3051\u3069\u30012.1\u306eFuture\u306bextend\u306a\u3093\u3066\u306a\u3044\u306e\u3067\u9069\u5b9c\u66f8\u304d\u63db\u3048\u307e\u3057\u3087\u3046\u3002\n\n\n", "tags": ["Play", "Scala"]}