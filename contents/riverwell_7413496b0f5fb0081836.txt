{"context": "NextremerAdventcalender2016\u306e16\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u6628\u65e5\u306b\u5f15\u304d\u7d9a\u304d\u81ea\u52d5\u8981\u7d04\u30cd\u30bf\u3067\u3059\u3002\n\u6280\u8853\u306f\u65e5\u9032\u6708\u6b69\u3067\u3042\u308a\u3001\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u3068\u3063\u3066\u3001\u65e5\u3005\u6700\u65b0\u306e\u60c5\u5831\u3092\u53ce\u96c6\u3059\u308b\u3053\u3068\u306f\u91cd\u8981\u3067\u3059\u3002\n\u81ea\u5206\u3082\u500b\u4ebaSlack\u306b\u8a18\u4e8b\u3092\u53ce\u96c6\u3059\u308b\u3082\u306e\u306e\u3001\u6d77\u5916\u306e\u8a18\u4e8b\u306b\u3064\u3044\u3066\u306f\u7a4d\u8aad\u306b\u306a\u308a\u304c\u3061\u3067\u3059\u3002\n\u305d\u3053\u3067\u3001\u4eca\u56de\u306fSlack\u4e0a\u306e\u6d77\u5916\u306e\u30cb\u30e5\u30fc\u30b9\u3092\u81ea\u52d5\u8981\u7d04\uff06\u7ffb\u8a33\u3057\u3001\u6982\u8981\u3060\u3051\u3067\u3082\u628a\u63e1\u3057\u3066\u30012016\u5e74\u3092\u7d42\u3048\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001\u7ffb\u8a33\u306b\u306f\u4eca\u6d41\u884c\u308a\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u7ffb\u8a33API\nGoogle\u7ffb\u8a33\u304c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u5bfe\u5fdc\u3057\u3001\u7ffb\u8a33\u7cbe\u5ea6\u304c\u5927\u5e45\u306b\u5411\u4e0a\u3057\u305f\u3053\u3068\u304c\u5c11\u3057\u524d\u306b\u8a71\u984c\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u305d\u306e\u6570\u65e5\u5f8c\u3001Microsoft\u3082\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f\u3002\n\u4ee5\u524d\u304b\u3089MicrosoftTranslater\u306f200\u4e07\u6587\u5b57\u307e\u3067\u306a\u3089\u7121\u6599\u3067\u4f7f\u7528\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u3082\u3061\u308d\u3093\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306fMicrosoftTranslatorAPI\u3092\u4f7f\u7528\u3057\u3066\u7ffb\u8a33\u3092\u884c\u3044\u307e\u3059\u3002\n\nSlackBot\u4f5c\u6210\n\u4ed5\u69d8\u3068\u3057\u3066\u306f\ntransum <URL>\n\n\u3092\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u3001\u5b9f\u884c\u7d50\u679c\u304c\u5e30\u3063\u3066\u304f\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u306d\u3002\n\n\u3067\u306f\u3001\u5b9f\u969b\u306b\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u4e8b\u524d\u6e96\u5099\n\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u524d\u306b\n\nSlackBot\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u6210 \uff06 API Token\u306e\u53d6\u5f97\nMicrosoftTranslateAPI \u306esubscription key\u306e\u53d6\u5f97\n\n\u3092\u6e08\u307e\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n1.\u306fPython\u3067Slackbot\u3092\u4f5c\u308b(1)\n2.\u306fMicrosoft Translate API \u3092\u7528\u3044\u305f Slack \u7ffb\u8a33\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u88c5\n\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u9069\u5f53\u306a\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u4f5c\u6210\u3057\u3001Bot\u3092Invite\u3059\u308c\u3070\u6e96\u5099\u5b8c\u4e86\u3067\u3059\u3002\n\n\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\n\u4eca\u56de\u4f5c\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\n\nnumpy\nslackbot\nsumy\nnewspaper\n\n\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u524d\u63d0\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001Python3\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\n$ pip3 install numpy sumy newspaper3k slackbot\n\n\n\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\nslackbot\u3092\u4f7f\u3046\u90fd\u5408\u4e0a\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n.\n\u251c\u2500\u2500 plugins\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 transum.py\n\u251c\u2500\u2500 run.py\n\u2514\u2500\u2500 slackbot_settings.py\n\nrun.py \u3067Bot\u3092\u8d77\u52d5\u3057\u3001plugins\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u69cb\u6210\u3067\u3059\u3002\n\u305d\u308c\u3067\u306f\u5404\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\nslackbot_setting.py\n\nslackbot_setting.py\n#!/usr/bin/env python\n# coding: utf-8\n\nAPI_TOKEN = \"XXXXX\"\n\ndefault_reply = \"Sorry...I didn't understand you\"\n\nPLUGINS = [\n    'plugins',\n]\n\n\nBot\u306e\u30bb\u30c3\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u306a\u3046\u90e8\u5206\u3067\u3059\u3002\nXXXXX \u306b\u306fBot API Token\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001plugins\u3092\u8aad\u307f\u8fbc\u3081\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nrun.py\n\nrun.py\n#!/usr/bin/env python\n# coding: utf-8\n\nfrom slackbot.bot import Bot\n\ndef main():\n    bot = Bot()\n    bot.run()\n\nif __name__ == \"__main__\":\n    main()\n\n\nrun.py\u306fBot\u306e\u8d77\u52d5\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002\n\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Slack\u4e0a\u3067Bot\u304c\u53cd\u5fdc\u3057\u59cb\u3081\u307e\u3059\u3002\n\ntransum.py\n\u3053\u3053\u304c\u4eca\u56de\u306e\u30e1\u30a4\u30f3\u3067\u3001\u7ffb\u8a33\uff06\u8981\u7d04\u3092\u884c\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\ntransum.py\n#!/usr/bin/env python\n# coding: utf-8\n\nimport re\nimport subprocess\nimport json\n\nfrom slackbot.bot import listen_to\nfrom newspaper import Article\nfrom sumy.nlp.stemmers import Stemmer\nfrom sumy.nlp.tokenizers import Tokenizer\nfrom sumy.parsers.plaintext import PlaintextParser\nfrom sumy.summarizers.lex_rank import LexRankSummarizer as Summarizer\nfrom sumy.utils import get_stop_words\n\n\nSUBSCRIPTION_KEY = \"YYYYY\"\nCATEGORY = \"generalnn\" # generalnn:\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u7ffb\u8a33 general:\u65e7\u6a5f\u68b0\u7ffb\u8a33\n\nLANGUAGE = \"english\"\nSENTENCES_COUNT = 3\n\n\ntransum_str = re.compile(\"^transum \\<(.*)\\>$\")\ntag_pattern = re.compile(r\"<[^>]*?>\")\n\n\n@listen_to(transum_str)\ndef transum(message, raw_url):\n    \"\"\"\u8981\u7d04\u3068\u7ffb\u8a33\u3092\u884c\u306a\u3046\"\"\"\n    url = raw_url.lstrip('<').rstrip('>')\n\n    en_title, en_text = scrape(url)\n\n    en_summaries = summarize(en_text)\n    en_summary = \" \".join(en_summaries)\n\n    ja_title_tag = translate(en_title)\n    ja_title = tag_pattern.sub(\"\", ja_title_tag[0])\n\n    ja_summary_tag = translate(en_summary)\n    ja_summary = tag_pattern.sub(\"\", ja_summary_tag[0])\n\n    attachments = [\n        {\n            \"title\": ja_title,\n            \"title_link\": url,\n            \"text\": ja_summary.replace(\"\u3002\", \"\u3002\\n\")\n\n        }\n    ]\n\n    message.send_webapi('', json.dumps(attachments))\n\n\ndef scrape(url):\n    \"\"\"\u8a18\u4e8b\u306e\u30bf\u30a4\u30c8\u30eb\u3068\u672c\u6587\u3092\u62bd\u51fa\u3059\u308b\"\"\"\n    article = Article(url)\n    article.download()\n    article.parse()\n\n    return article.title, article.text\n\n\ndef summarize(text):\n    \"\"\"\u30c6\u30ad\u30b9\u30c8\u3092\u8981\u7d04\u3059\u308b\"\"\"\n    parser = PlaintextParser.from_string(text, Tokenizer(LANGUAGE))\n\n    stemmer = Stemmer(LANGUAGE)\n\n    summarizer = Summarizer(stemmer)\n    summarizer.stop_words = get_stop_words(LANGUAGE)\n\n    return [str(sentence) for sentence in summarizer(parser.document, SENTENCES_COUNT)]\n\n\ndef translate(text):\n    \"\"\"\u30c6\u30ad\u30b9\u30c8\u3092\u7ffb\u8a33\u3059\u308b\"\"\"\n    token_url = \"https://api.cognitive.microsoft.com/sts/v1.0/issueToken\"\n    translate_url = \"https://api.microsofttranslator.com/v2/http.svc/Translate\"\n\n    text = text.replace(' ', \"%20\")\n\n    request_token = popen(\n        'curl -X POST \\\"{url}\\\" -H \\\"Content-type: application/json\\\" -H \\\"Content-length: 0\\\" -H \\\"Accept: application/jwt\\\" -H \\\"Ocp-Apim-Subscription-Key:{key}\\\"'.format(\n            url=token_url, key=SUBSCRIPTION_KEY))\n\n    result = popen(\n        \"curl -X GET --header \\'Accept: application/xml\\' \\'{url}?appid=Bearer%20{token}&text={text}&from=en&to=ja&category={category}\\'\".format(\n            url=translate_url, token=request_token[0], text=text, category=CATEGORY))\n\n    return result\n\n\ndef popen(cmd):\n    \"\"\"\u30b7\u30a7\u30eb\u306e\u5b9f\u884c\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\"\"\"\n    outputs = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout, stderr = outputs.communicate()\n    # bytes\u3067\u53d7\u3051\u53d6\u3063\u305f\u7d50\u679c\u3092str\u306b\u5909\u63db\u3059\u308b\n    return [s for s in stdout.decode('utf-8').split('\\n') if s]\n\n\n\nSUBSCRIPTION_KEY \u306b\u306f\u53d6\u5f97\u3057\u305fsubscription key\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nCATEGORY\u306bgeneralnn\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u7ffb\u8a33\u3002\ngeneral\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u4ee5\u524d\u307e\u3067\u306e\u7d71\u8a08\u7684\u6a5f\u68b0\u7ffb\u8a33\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\n\u304a\u308f\u308a\n\u4eca\u56de\u306f\u81ea\u52d5\u7ffb\u8a33\uff06\u8981\u7d04\u3092\u884c\u306a\u3046SlackBot\u3067\u6d77\u5916\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\u306a\u3093\u3068\u306a\u304f\u8a18\u4e8b\u306e\u96f0\u56f2\u6c17\u304f\u3089\u3044\u306f\u63b4\u3081\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\u3053\u306e\u4ed6\u306bPDF\u304b\u3089\u30c6\u30ad\u30b9\u30c8\u62bd\u51fa\u3057\u3001\u8ad6\u6587\u3092\u8981\u7d04\u3057\u3066\u8aad\u3081\u306a\u3044\u304b\u3082\u8a66\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u3061\u3089\u306f\u5168\u7136\u3067\u3057\u305f\u3002\n\u7528\u9014\u3068\u3057\u3066\u306f\u6d77\u5916\u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\u3092\u8aad\u307f\u3084\u3059\u304f\u3059\u308b\u3001\u304f\u3089\u3044\u304c\u5411\u3044\u3066\u3044\u308b\u306e\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u53c2\u8003\nPython\u3067Slackbot\u3092\u4f5c\u308b(1)\nMicrosoft Translate API \u3092\u7528\u3044\u305f Slack \u7ffb\u8a33\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u88c5\n\n[NextremerAdventcalender2016](http://qiita.com/advent-calendar/2016/nextremer)\u306e16\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n[\u6628\u65e5](http://qiita.com/riverwell/items/310e0a31f2e5097df7ff)\u306b\u5f15\u304d\u7d9a\u304d\u81ea\u52d5\u8981\u7d04\u30cd\u30bf\u3067\u3059\u3002\n\n\u6280\u8853\u306f\u65e5\u9032\u6708\u6b69\u3067\u3042\u308a\u3001\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u3068\u3063\u3066\u3001\u65e5\u3005\u6700\u65b0\u306e\u60c5\u5831\u3092\u53ce\u96c6\u3059\u308b\u3053\u3068\u306f\u91cd\u8981\u3067\u3059\u3002\n\u81ea\u5206\u3082[\u500b\u4ebaSlack](http://qiita.com/saitotak/items/ac0eb7ddc0d8d83cbe91)\u306b\u8a18\u4e8b\u3092\u53ce\u96c6\u3059\u308b\u3082\u306e\u306e\u3001\u6d77\u5916\u306e\u8a18\u4e8b\u306b\u3064\u3044\u3066\u306f\u7a4d\u8aad\u306b\u306a\u308a\u304c\u3061\u3067\u3059\u3002\n\u305d\u3053\u3067\u3001\u4eca\u56de\u306fSlack\u4e0a\u306e\u6d77\u5916\u306e\u30cb\u30e5\u30fc\u30b9\u3092\u81ea\u52d5\u8981\u7d04\uff06\u7ffb\u8a33\u3057\u3001\u6982\u8981\u3060\u3051\u3067\u3082\u628a\u63e1\u3057\u3066\u30012016\u5e74\u3092\u7d42\u3048\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001\u7ffb\u8a33\u306b\u306f\u4eca\u6d41\u884c\u308a\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n## \u7ffb\u8a33API\n\nGoogle\u7ffb\u8a33\u304c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u5bfe\u5fdc\u3057\u3001\u7ffb\u8a33\u7cbe\u5ea6\u304c\u5927\u5e45\u306b\u5411\u4e0a\u3057\u305f\u3053\u3068\u304c\u5c11\u3057\u524d\u306b\u8a71\u984c\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u305d\u306e\u6570\u65e5\u5f8c\u3001Microsoft\u3082\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f\u3002\n\u4ee5\u524d\u304b\u3089MicrosoftTranslater\u306f200\u4e07\u6587\u5b57\u307e\u3067\u306a\u3089\u7121\u6599\u3067\u4f7f\u7528\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u3082\u3061\u308d\u3093\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306fMicrosoftTranslatorAPI\u3092\u4f7f\u7528\u3057\u3066\u7ffb\u8a33\u3092\u884c\u3044\u307e\u3059\u3002\n\n## SlackBot\u4f5c\u6210\n\n\u4ed5\u69d8\u3068\u3057\u3066\u306f\n\n```\ntransum <URL>\n```\n\u3092\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u3001\u5b9f\u884c\u7d50\u679c\u304c\u5e30\u3063\u3066\u304f\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u306d\u3002\n\n<img width=\"496\" alt = \"161217-0018.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/133575/7a9d060f-7c80-8a80-894a-faa6fd393618.png\">\n\n\n\u3067\u306f\u3001\u5b9f\u969b\u306b\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n### \u4e8b\u524d\u6e96\u5099\n\n\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u524d\u306b\n\n1. SlackBot\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u6210 \uff06 API Token\u306e\u53d6\u5f97\n2. MicrosoftTranslateAPI \u306esubscription key\u306e\u53d6\u5f97\n\n\n\u3092\u6e08\u307e\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n1.\u306f[Python\u3067Slackbot\u3092\u4f5c\u308b(1)](http://blog.bitmeister.jp/?p=3892)\n2.\u306f[Microsoft Translate API \u3092\u7528\u3044\u305f Slack \u7ffb\u8a33\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u88c5](http://qiita.com/sosuke/items/ece4aee023fade0c2d23)\n\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u305d\u3057\u3066\u3001\u9069\u5f53\u306a\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u4f5c\u6210\u3057\u3001Bot\u3092Invite\u3059\u308c\u3070\u6e96\u5099\u5b8c\u4e86\u3067\u3059\u3002\n\n\n\n### \u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\n\n\u4eca\u56de\u4f5c\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\n\n* numpy\n* slackbot\n* sumy\n* newspaper\n\n\u306b\u4f9d\u5b58\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u524d\u63d0\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001Python3\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\n\n```bash\n$ pip3 install numpy sumy newspaper3k slackbot\n```\n\n### \u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n\nslackbot\u3092\u4f7f\u3046\u90fd\u5408\u4e0a\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n.\n\u251c\u2500\u2500 plugins\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 transum.py\n\u251c\u2500\u2500 run.py\n\u2514\u2500\u2500 slackbot_settings.py\n```\n\n`run.py` \u3067Bot\u3092\u8d77\u52d5\u3057\u3001`plugins`\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u69cb\u6210\u3067\u3059\u3002\n\u305d\u308c\u3067\u306f\u5404\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n#### slackbot_setting.py\n\n```python:slackbot_setting.py\n#!/usr/bin/env python\n# coding: utf-8\n\nAPI_TOKEN = \"XXXXX\"\n\ndefault_reply = \"Sorry...I didn't understand you\"\n\nPLUGINS = [\n    'plugins',\n]\n```\n\nBot\u306e\u30bb\u30c3\u30c6\u30a3\u30f3\u30b0\u3092\u884c\u306a\u3046\u90e8\u5206\u3067\u3059\u3002\n```XXXXX``` \u306b\u306fBot API Token\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001`plugins`\u3092\u8aad\u307f\u8fbc\u3081\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n#### run.py\n\n```python:run.py\n#!/usr/bin/env python\n# coding: utf-8\n\nfrom slackbot.bot import Bot\n\ndef main():\n    bot = Bot()\n    bot.run()\n\nif __name__ == \"__main__\":\n    main()\n```\n\n`run.py`\u306fBot\u306e\u8d77\u52d5\u3092\u7ba1\u7406\u3057\u307e\u3059\u3002\n\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001Slack\u4e0a\u3067Bot\u304c\u53cd\u5fdc\u3057\u59cb\u3081\u307e\u3059\u3002\n\n#### transum.py\n\n\u3053\u3053\u304c\u4eca\u56de\u306e\u30e1\u30a4\u30f3\u3067\u3001\u7ffb\u8a33\uff06\u8981\u7d04\u3092\u884c\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\n```python:transum.py\n#!/usr/bin/env python\n# coding: utf-8\n\nimport re\nimport subprocess\nimport json\n\nfrom slackbot.bot import listen_to\nfrom newspaper import Article\nfrom sumy.nlp.stemmers import Stemmer\nfrom sumy.nlp.tokenizers import Tokenizer\nfrom sumy.parsers.plaintext import PlaintextParser\nfrom sumy.summarizers.lex_rank import LexRankSummarizer as Summarizer\nfrom sumy.utils import get_stop_words\n\n\nSUBSCRIPTION_KEY = \"YYYYY\"\nCATEGORY = \"generalnn\" # generalnn:\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u7ffb\u8a33 general:\u65e7\u6a5f\u68b0\u7ffb\u8a33\n\nLANGUAGE = \"english\"\nSENTENCES_COUNT = 3\n\n\ntransum_str = re.compile(\"^transum \\<(.*)\\>$\")\ntag_pattern = re.compile(r\"<[^>]*?>\")\n\n\n@listen_to(transum_str)\ndef transum(message, raw_url):\n    \"\"\"\u8981\u7d04\u3068\u7ffb\u8a33\u3092\u884c\u306a\u3046\"\"\"\n    url = raw_url.lstrip('<').rstrip('>')\n\n    en_title, en_text = scrape(url)\n\n    en_summaries = summarize(en_text)\n    en_summary = \" \".join(en_summaries)\n\n    ja_title_tag = translate(en_title)\n    ja_title = tag_pattern.sub(\"\", ja_title_tag[0])\n\n    ja_summary_tag = translate(en_summary)\n    ja_summary = tag_pattern.sub(\"\", ja_summary_tag[0])\n\n    attachments = [\n        {\n            \"title\": ja_title,\n            \"title_link\": url,\n            \"text\": ja_summary.replace(\"\u3002\", \"\u3002\\n\")\n\n        }\n    ]\n\n    message.send_webapi('', json.dumps(attachments))\n\n\ndef scrape(url):\n    \"\"\"\u8a18\u4e8b\u306e\u30bf\u30a4\u30c8\u30eb\u3068\u672c\u6587\u3092\u62bd\u51fa\u3059\u308b\"\"\"\n    article = Article(url)\n    article.download()\n    article.parse()\n\n    return article.title, article.text\n\n\ndef summarize(text):\n    \"\"\"\u30c6\u30ad\u30b9\u30c8\u3092\u8981\u7d04\u3059\u308b\"\"\"\n    parser = PlaintextParser.from_string(text, Tokenizer(LANGUAGE))\n\n    stemmer = Stemmer(LANGUAGE)\n\n    summarizer = Summarizer(stemmer)\n    summarizer.stop_words = get_stop_words(LANGUAGE)\n\n    return [str(sentence) for sentence in summarizer(parser.document, SENTENCES_COUNT)]\n\n\ndef translate(text):\n    \"\"\"\u30c6\u30ad\u30b9\u30c8\u3092\u7ffb\u8a33\u3059\u308b\"\"\"\n    token_url = \"https://api.cognitive.microsoft.com/sts/v1.0/issueToken\"\n    translate_url = \"https://api.microsofttranslator.com/v2/http.svc/Translate\"\n\n    text = text.replace(' ', \"%20\")\n\n    request_token = popen(\n        'curl -X POST \\\"{url}\\\" -H \\\"Content-type: application/json\\\" -H \\\"Content-length: 0\\\" -H \\\"Accept: application/jwt\\\" -H \\\"Ocp-Apim-Subscription-Key:{key}\\\"'.format(\n            url=token_url, key=SUBSCRIPTION_KEY))\n\n    result = popen(\n        \"curl -X GET --header \\'Accept: application/xml\\' \\'{url}?appid=Bearer%20{token}&text={text}&from=en&to=ja&category={category}\\'\".format(\n            url=translate_url, token=request_token[0], text=text, category=CATEGORY))\n\n    return result\n\n\ndef popen(cmd):\n    \"\"\"\u30b7\u30a7\u30eb\u306e\u5b9f\u884c\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\"\"\"\n    outputs = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n    stdout, stderr = outputs.communicate()\n    # bytes\u3067\u53d7\u3051\u53d6\u3063\u305f\u7d50\u679c\u3092str\u306b\u5909\u63db\u3059\u308b\n    return [s for s in stdout.decode('utf-8').split('\\n') if s]\n\n```\n\n\n`SUBSCRIPTION_KEY` \u306b\u306f\u53d6\u5f97\u3057\u305fsubscription key\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n`CATEGORY`\u306b`generalnn`\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u7ffb\u8a33\u3002\n`general`\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u4ee5\u524d\u307e\u3067\u306e\u7d71\u8a08\u7684\u6a5f\u68b0\u7ffb\u8a33\u304c\u884c\u308f\u308c\u307e\u3059\u3002\n\n\n## \u304a\u308f\u308a\n\n\u4eca\u56de\u306f\u81ea\u52d5\u7ffb\u8a33\uff06\u8981\u7d04\u3092\u884c\u306a\u3046SlackBot\u3067\u6d77\u5916\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\u306a\u3093\u3068\u306a\u304f\u8a18\u4e8b\u306e\u96f0\u56f2\u6c17\u304f\u3089\u3044\u306f\u63b4\u3081\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u3053\u306e\u4ed6\u306bPDF\u304b\u3089\u30c6\u30ad\u30b9\u30c8\u62bd\u51fa\u3057\u3001\u8ad6\u6587\u3092\u8981\u7d04\u3057\u3066\u8aad\u3081\u306a\u3044\u304b\u3082\u8a66\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u305d\u3061\u3089\u306f\u5168\u7136\u3067\u3057\u305f\u3002\n\u7528\u9014\u3068\u3057\u3066\u306f\u6d77\u5916\u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\u3092\u8aad\u307f\u3084\u3059\u304f\u3059\u308b\u3001\u304f\u3089\u3044\u304c\u5411\u3044\u3066\u3044\u308b\u306e\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u53c2\u8003\n\n[Python\u3067Slackbot\u3092\u4f5c\u308b(1)](http://blog.bitmeister.jp/?p=3892)\n[Microsoft Translate API \u3092\u7528\u3044\u305f Slack \u7ffb\u8a33\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u88c5](http://qiita.com/sosuke/items/ece4aee023fade0c2d23)\n\n", "tags": ["Python", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406", "Slack", "\u6a5f\u68b0\u7ffb\u8a33", "MicrosoftTranslator"]}