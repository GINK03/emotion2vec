{"context": " More than 1 year has passed since last update.python\u3067\u6a5f\u4f1a\u5b66\u7fd2\u5165\u9580\u4e2d\u3067\u3059\u3002\n\u3069\u306e\u3088\u3046\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6271\u3046\u306b\u305b\u3088\u3001csv\u3042\u308b\u3044\u306ftsv\u5f62\u5f0f\u306e\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u884c\u5217\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u306f\u5fc5\u9808\u306b\u306a\u308b\u306e\u3067\u3001\u3044\u304f\u3064\u304b\u65b9\u6cd5\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\u4eca\u56de\u3001\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306f\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3067\u6700\u3082\u3088\u304f\u4f7f\u308f\u308c\u308b\u3068\u8a00\u308f\u308c\u3066\u3044\u308b MovieLens Dataset \u306e\u3046\u3061 100K \u306e\u3082\u306e MovieLens 100K Dataset \u3092\u7528\u3044\u307e\u3059\u3002\n\nMovieLens Dataset\nDataset\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u306f README \u3092\u8aad\u3081\u3070\u3044\u3044\u3093\u3067\u3059\u304c\u3001\u4e3b\u306b\u4f7f\u3046\u306e\u306f u.data \u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nuser_id, item_id, rating, timestamp \u306e 4\u30ab\u30e9\u30e0\u306etsv\u3067\u3059\u3002\n196 242 3   881250949\n186 302 3   891717742\n22  377 1   878887116\n244 51  2   880606923\n166 346 1   886397596\n298 474 4   884182806\n...\n\n\u6700\u7d42\u7684\u306b\u306f\u3001\u30e6\u30fc\u30b6 i \u306e \u30a2\u30a4\u30c6\u30e0 j \u306b\u5bfe\u3059\u308b\u8a55\u4fa1 rating \u3092 R(i,j) = rating \u3068\u3059\u308b\u3088\u3046\u306a\u884c\u5217\u306b\u5909\u63db\u3057\u305f\u3044\u3002\n\n\u6a19\u6e96csv\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\nwith open('u.data', newline='') as f:\n    reader = csv.reader(f, delimiter='\\t')\n    for row in reader:\n        print(row)\n\n\u8aad\u307f\u51fa\u3059\u3060\u3051\u306a\u3089\u3001csv\u30e2\u30b8\u30e5\u30fc\u30eb\u3060\u3051\u3067\u5341\u5206\u3067\u3059\u3002\n\u305f\u3060\u3001 \u884c\u5217R\u306eshape\u3092\u6c7a\u3081\u308b\u305f\u3081\u306b\u3001user_id \u3068 item_id \u306e\u6700\u5927\u5024\u3092\u6c42\u3081\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\npandas \u3067csv\u3092\u6271\u3046\npandas: powerful Python data analysis toolkit \u3092\u7528\u3044\u308b\u3068\u3001\u30c7\u30fc\u30bf\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u304c\u6357\u308a\u307e\u3059\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f pip install pandas \u3067\u3001csv \u306e\u5217\u3054\u3068\u306e\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n>>> df = pd.read_csv('u.data', sep='\\t', names=['user_id','item_id', 'rating', 'timestamp'])\n\n>>> df.max()\nuser_id            943\nitem_id           1682\nrating               5\ntimestamp    893286638\ndtype: int64\n\n\u3053\u3053\u3067\u3001df \u306f DataFrame \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001df.max() \u306f Series \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\n>>> type(df)\n<class 'pandas.core.frame.DataFrame'>\n\n>>> type(df.max())\n<class 'pandas.core.series.Series'>\n\n\u5404\u30ab\u30e9\u30e0\u306e\u6700\u5927\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070 OK \u3067\u3059\u3002\n>>> df.max().ix['user_id']\n943\n>>> df.max().ix['item_id']\n1682\n\n\u65e5\u672c\u8a9e\u3067\u306e\u89e3\u8aac\u8a18\u4e8b\u306f http://oceanmarine.sakura.ne.jp/sphinx/group/group_pandas.html \u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\n\u76ee\u7684\u306e\u884c\u5217\u306b\u5909\u63db\u3059\u308b\n\u3053\u3053\u307e\u3067\u6765\u308c\u3070\u3001\u3042\u3068\u306f1\u30c7\u30fc\u30bf\u305a\u3064\u771f\u9762\u76ee\u306b\u51e6\u7406\u3059\u308b\u3060\u3051\u3067\u3059\u3002\nimport numpy as np\nimport pandas as pd\n\ndf = pd.read_csv('u.data', sep='\\t', names=['user_id','item_id', 'rating', 'timestamp'])\n\nshape = (df.max().ix['user_id'], df.max().ix['item_id'])\nR = np.zeros(shape) \n\nfor i in df.index:\n    row = df.ix[i]\n    R[row['user_id'] -1 , row['item_id'] - 1] = row['rating']\n\n\n>>> print(R)\n[[ 5.  3.  4. ...,  0.  0.  0.]\n [ 4.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n ...,\n [ 5.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  5.  0. ...,  0.  0.  0.]]\n\n\u4e00\u822c\u7684\u306b\u306f\u758e\u884c\u5217\u306b\u306a\u308b\uff08\u591a\u6570\u3042\u308b\u6620\u753b\u306e\u4e2d\u3067\u30011\u4eba\u304c\u8a55\u4fa1\u3059\u308b\u6570\u306f\u3069\u3046\u3057\u3066\u3082\u9650\u3089\u308c\u308b\uff09\u306a\u306e\u3067\u3001sparse \u3092\u4f7f\u3046\u307b\u3046\u304c\u3088\u3055\u305d\u3046\u3067\u3059\u3002\nimport numpy as np\nimport pandas as pd\nfrom scipy import sparse\n\ndf = pd.read_csv('u.data', sep='\\t', names=['user_id','item_id', 'rating', 'timestamp'])\n\nshape = (df.max().ix['user_id'] + 1, df.max().ix['item_id'] + 1)\nR = sparse.lil_matrix(shape) \n\nfor i in df.index:\n    row = df.ix[i]\n    R[row['user_id'], row['item_id']] = row['rating']\n\n>>> print(R.todense())\n[[ 5.  3.  4. ...,  0.  0.  0.]\n [ 4.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n ...,\n [ 5.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  5.  0. ...,  0.  0.  0.]]\n\n\u4ee5\u4e0a\u3002\n\n\u8a02\u6b63\n1\u884c\u76ee\u30681\u5217\u76ee\u304c\u4f59\u5206\u3060\u3063\u305f\u554f\u984c\u3092\u767a\u898b\u3057\u305f\u306e\u3067\u3001\u4fee\u6b63\u6e08\u307f\u3002\n\u521d\u7a3f\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u3002\u3002\nshape = (df.max().ix['user_id'] + 1, df.max().ix['item_id'] + 1)\nR = np.zeros(shape) \n\nfor i in df.index:\n    row = df.ix[i]\n    R[row['user_id'], row['item_id']] = row['rating']\n\npython\u3067\u6a5f\u4f1a\u5b66\u7fd2\u5165\u9580\u4e2d\u3067\u3059\u3002\n\n\u3069\u306e\u3088\u3046\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6271\u3046\u306b\u305b\u3088\u3001csv\u3042\u308b\u3044\u306ftsv\u5f62\u5f0f\u306e\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u884c\u5217\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u306f\u5fc5\u9808\u306b\u306a\u308b\u306e\u3067\u3001\u3044\u304f\u3064\u304b\u65b9\u6cd5\u3092\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u3001\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306f\u5354\u8abf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3067\u6700\u3082\u3088\u304f\u4f7f\u308f\u308c\u308b\u3068\u8a00\u308f\u308c\u3066\u3044\u308b MovieLens Dataset \u306e\u3046\u3061 100K \u306e\u3082\u306e [MovieLens 100K Dataset](http://grouplens.org/datasets/movielens/100k/) \u3092\u7528\u3044\u307e\u3059\u3002\n\n\n## MovieLens Dataset\n\nDataset\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u306f [README](http://files.grouplens.org/datasets/movielens/ml-100k-README.txt) \u3092\u8aad\u3081\u3070\u3044\u3044\u3093\u3067\u3059\u304c\u3001\u4e3b\u306b\u4f7f\u3046\u306e\u306f u.data \u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nuser_id, item_id, rating, timestamp \u306e 4\u30ab\u30e9\u30e0\u306etsv\u3067\u3059\u3002\n\n```\n196\t242\t3\t881250949\n186\t302\t3\t891717742\n22\t377\t1\t878887116\n244\t51\t2\t880606923\n166\t346\t1\t886397596\n298\t474\t4\t884182806\n...\n```\n\n\u6700\u7d42\u7684\u306b\u306f\u3001\u30e6\u30fc\u30b6 i \u306e \u30a2\u30a4\u30c6\u30e0 j \u306b\u5bfe\u3059\u308b\u8a55\u4fa1 rating \u3092 R(i,j) = rating \u3068\u3059\u308b\u3088\u3046\u306a\u884c\u5217\u306b\u5909\u63db\u3057\u305f\u3044\u3002\n\n\n## \u6a19\u6e96csv\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\n\n```py3\nwith open('u.data', newline='') as f:\n    reader = csv.reader(f, delimiter='\\t')\n    for row in reader:\n        print(row)\n```\n\n\u8aad\u307f\u51fa\u3059\u3060\u3051\u306a\u3089\u3001csv\u30e2\u30b8\u30e5\u30fc\u30eb\u3060\u3051\u3067\u5341\u5206\u3067\u3059\u3002\n\u305f\u3060\u3001 \b\u884c\u5217R\u306eshape\u3092\u6c7a\u3081\u308b\u305f\u3081\u306b\u3001user_id \u3068 item_id \u306e\u6700\u5927\u5024\u3092\u6c42\u3081\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n## pandas \u3067csv\u3092\u6271\u3046\n\n[pandas: powerful Python data analysis toolkit](http://pandas.pydata.org/pandas-docs/stable/index.html) \u3092\u7528\u3044\u308b\u3068\u3001\u30c7\u30fc\u30bf\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u304c\u6357\u308a\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f pip install pandas \u3067\u3001csv \u306e\u5217\u3054\u3068\u306e\u6700\u5927\u5024\u3092\u6c42\u3081\u308b\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n```py3\n>>> df = pd.read_csv('u.data', sep='\\t', names=['user_id','item_id', 'rating', 'timestamp'])\n\n>>> df.max()\nuser_id            943\nitem_id           1682\nrating               5\ntimestamp    893286638\ndtype: int64\n```\n\n\u3053\u3053\u3067\u3001df \u306f DataFrame \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001df.max() \u306f Series \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3002\n\n```py3\n>>> type(df)\n<class 'pandas.core.frame.DataFrame'>\n\n>>> type(df.max())\n<class 'pandas.core.series.Series'>\n```\n\n\u5404\u30ab\u30e9\u30e0\u306e\u6700\u5927\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070 OK \u3067\u3059\u3002\n\n```py3\n>>> df.max().ix['user_id']\n943\n>>> df.max().ix['item_id']\n1682\n```\n\n\u65e5\u672c\u8a9e\u3067\u306e\u89e3\u8aac\u8a18\u4e8b\u306f http://oceanmarine.sakura.ne.jp/sphinx/group/group_pandas.html \u304c\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\n\n## \u76ee\u7684\u306e\u884c\u5217\u306b\u5909\u63db\u3059\u308b\n\n\u3053\u3053\u307e\u3067\u6765\u308c\u3070\u3001\u3042\u3068\u306f1\u30c7\u30fc\u30bf\u305a\u3064\u771f\u9762\u76ee\u306b\u51e6\u7406\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n```py3\nimport numpy as np\nimport pandas as pd\n\ndf = pd.read_csv('u.data', sep='\\t', names=['user_id','item_id', 'rating', 'timestamp'])\n\nshape = (df.max().ix['user_id'], df.max().ix['item_id'])\nR = np.zeros(shape) \n\nfor i in df.index:\n    row = df.ix[i]\n    R[row['user_id'] -1 , row['item_id'] - 1] = row['rating']\n\n\n>>> print(R)\n[[ 5.  3.  4. ...,  0.  0.  0.]\n [ 4.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n ...,\n [ 5.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  5.  0. ...,  0.  0.  0.]]\n```\n\n\b\u4e00\u822c\u7684\u306b\u306f\u758e\u884c\u5217\u306b\u306a\u308b\uff08\u591a\u6570\u3042\u308b\u6620\u753b\u306e\u4e2d\u3067\u30011\u4eba\u304c\u8a55\u4fa1\u3059\u308b\u6570\u306f\u3069\u3046\u3057\u3066\u3082\u9650\u3089\u308c\u308b\uff09\u306a\u306e\u3067\u3001sparse \u3092\u4f7f\u3046\u307b\u3046\u304c\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n\n\n```py3\nimport numpy as np\nimport pandas as pd\nfrom scipy import sparse\n\ndf = pd.read_csv('u.data', sep='\\t', names=['user_id','item_id', 'rating', 'timestamp'])\n\nshape = (df.max().ix['user_id'] + 1, df.max().ix['item_id'] + 1)\nR = sparse.lil_matrix(shape) \n\nfor i in df.index:\n    row = df.ix[i]\n    R[row['user_id'], row['item_id']] = row['rating']\n\n>>> print(R.todense())\n[[ 5.  3.  4. ...,  0.  0.  0.]\n [ 4.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n ...,\n [ 5.  0.  0. ...,  0.  0.  0.]\n [ 0.  0.  0. ...,  0.  0.  0.]\n [ 0.  5.  0. ...,  0.  0.  0.]]\n```\n\n\u4ee5\u4e0a\u3002\n\n\n## \u8a02\u6b63\n\n1\u884c\u76ee\u30681\u5217\u76ee\u304c\u4f59\u5206\u3060\u3063\u305f\u554f\u984c\u3092\u767a\u898b\u3057\u305f\u306e\u3067\u3001\u4fee\u6b63\u6e08\u307f\u3002\n\u521d\u7a3f\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u3002\u3002\n\n```py3\nshape = (df.max().ix['user_id'] + 1, df.max().ix['item_id'] + 1)\nR = np.zeros(shape) \n\nfor i in df.index:\n    row = df.ix[i]\n    R[row['user_id'], row['item_id']] = row['rating']\n```\n", "tags": ["Python", "pandas", "MachineLearning"]}