{"tags": ["\u6700\u9069\u5316", "\u7d44\u5408\u305b\u6700\u9069\u5316", "\u6570\u5b66", "Python", "docker"], "context": "\n\n \u306f\u3058\u3081\u306b\n\n\u3042\u308b\u30b9\u30dd\u30fc\u30c4\u306e\u30c8\u30fc\u30ca\u30e1\u30f3\u30c8\u6226\u30928\u30ab\u56fd\u3067\u884c\u3044\u307e\u3059\u30024\u8a66\u5408\u3065\u30647\u65e5\u9593\u306e\u8a66\u5408\u3092\u884c\u3046\u3068\u3057\u307e\u3059\u3002\n\u524d\u8a55\u5224\u306e\u4eba\u6c17\u9806\u4f4d\u304c\u308f\u304b\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\u306a\u308b\u3079\u304f\u3001\u4eba\u6c17\u306e\u9ad8\u3044\u30da\u30a2\u306e\u8a66\u5408\u3092\u5f8c\u534a\u306b\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3001\u6700\u5f8c\u307e\u3067\u30cf\u30e9\u30cf\u30e9\u3059\u308b\u3088\u3046\u306a\u65e5\u7a0b\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u3053\u306e\u554f\u984c\u3092\u7d44\u5408\u305b\u6700\u9069\u5316\u3067\u89e3\u3044\u3066\u307f\u307e\u3059\u3002\n\n \u5b9a\u5f0f\u5316\n\u5909\u6570\u3092\u3001\u56fd1\u3001\u56fd2\u3001\u65e5\u3054\u3068\u306b\u3001\u305d\u306e\u7d44\u5408\u305b\u3092\"\u9078\u3076\u9078\u3070\u306a\u3044\"\u3092\u8868\u30590-1\u5909\u6570\u3068\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u5909\u6570\u306b\u5bfe\u5fdc\u3059\u308b\u3001\"2\u56fd(i,j)\u306e\u3042\u308b\u65e5(k)\u306e\u8a66\u5408\u306e\u91cd\u307f\"\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u3053\u306e\u91cd\u307f\u306e\u548c\u3092\u6700\u5927\u5316\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\"\u3042\u3068\u306e\u65b9\u306e\u9806\u4f4d\u306e\u5c0f\u3055\u3044\u56fd \u540c\u58eb\u306e\u8a66\u5408\"\u3092\u512a\u5148\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n$$\u91cd\u307f = \\frac{2^k}{i\u306e\u9806\u4f4d \\times j\u306e\u9806\u4f4d}$$\n\n\n\u6700\u5927\u5316\n$\\sum_i{\u91cd\u307f_i x_i}$\n\u91cd\u307f\u306e\u7dcf\u548c\n\n\n\u5909\u6570\n$x_i \\in \\{0,  1\\} ~ ~ \\forall i \\in \u5019\u88dc$\n\u305d\u306e\u5019\u88dc\u3092\u9078\u629e\u3059\u308b\u304b\u3069\u3046\u304b\n\n\n\u5236\u7d04\u6761\u4ef6\n$\\sum_{i \\in j,k\u306e\u7d44~~~~~}{x_i} = 1 ~ ~ \\forall j,k \\in \\mbox{\u56fd}$\n\u540c\u3058\u7d44\u306f1\u3064\n\n\n$\\sum_{i \\in \u56fdj\u3092\u542b\u3080k\u65e5\u76ee~~~~~~~~~~~~~}{x_i} = 1 ~ ~ \\forall j \\in \\mbox{\u56fd}, \\forall k \\in \\mbox{\u65e5}$\n\u540c\u56fd\u3001\u540c\u65e5\u306f1\u3064\n\n\n\u3053\u306e\u554f\u984c\u306f\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u554f\u984c\u306e\u4e00\u7a2e\u3067\u3059\u3002\n\n Python\u3067\u3084\u3063\u3066\u307f\u308b\n\u307e\u305a\u306f\u3001\u7d44\u5408\u305b\u306e\u8868\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\npython3\nimport pandas as pd\nfrom itertools import combinations, product\nfrom pulp import *\nss = '\u30a4\u30bf\u30ea\u30a2 \u30aa\u30e9\u30f3\u30c0 \u65e5\u672c \u97d3\u56fd \u30bf\u30a4 \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd \u30da\u30eb\u30fc \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3'.split()\nrnk = {s:(i+1) for i, s in enumerate(ss)} # \u56fd\u540d\u2192\u9806\u4f4d\na = pd.DataFrame([(i, j, k, 2**k/rnk[i]/rnk[j]) for i, j in combinations(ss, 2)\n                  for k in range(7)], columns='\u56fd1 \u56fd2 \u65e5 \u91cd\u307f'.split())\na[:3]\n>>>\n       \u56fd1    \u56fd2    \u65e5  \u91cd\u307f\n0  \u30a4\u30bf\u30ea\u30a2  \u30aa\u30e9\u30f3\u30c0  0  0.5\n1  \u30a4\u30bf\u30ea\u30a2  \u30aa\u30e9\u30f3\u30c0  1  1.0\n2  \u30a4\u30bf\u30ea\u30a2  \u30aa\u30e9\u30f3\u30c0  2  2.0\n\n\n\u5b9a\u5f0f\u5316\u3057\u3066\u89e3\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\npython3\nm = LpProblem(sense=LpMaximize) # \u6570\u7406\u30e2\u30c7\u30eb\na['Var'] = [LpVariable('v%d'%i, cat=LpBinary) for i in a.index] # \u5909\u6570\nm += lpDot(a.\u91cd\u307f, a.Var) # \u76ee\u7684\u95a2\u6570\nfor _, b in a.groupby(['\u56fd1', '\u56fd2']):\n    m += lpSum(b.Var) == 1 # \u540c\u3058\u7d44\u306f1\u3064\nfor s, i in product(ss, range(7)):\n    # \u540c\u56fd\u3001\u540c\u65e5\u306f1\u3064\n    m += lpSum(a.query('(\u56fd1==\"{0}\" | \u56fd2==\"{0}\") & \u65e5=={1}'.format(s, i)).Var) == 1\nm.solve() # \u6c42\u89e3\na['Val'] = a.Var.apply(value) # \u7d50\u679c\n# \u8868\u793a\nfor i, b in a.groupby('\u65e5'):\n    print(i+1, '\u65e5\u76ee ')\n    for _, r in b[b.Val > 0].iterrows():\n        print(' %*s - %s'%(8-len(r.\u56fd1), r.\u56fd1, r.\u56fd2))\n>>>\n1 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n \u30aa\u30e9\u30f3\u30c0 - \u30da\u30eb\u30fc\n     \u65e5\u672c - \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd\n     \u97d3\u56fd - \u30bf\u30a4\n2 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u30da\u30eb\u30fc\n \u30aa\u30e9\u30f3\u30c0 - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n     \u65e5\u672c - \u30bf\u30a4\n     \u97d3\u56fd - \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd\n3 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd\n \u30aa\u30e9\u30f3\u30c0 - \u30bf\u30a4\n     \u65e5\u672c - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n     \u97d3\u56fd - \u30da\u30eb\u30fc\n4 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u30bf\u30a4\n \u30aa\u30e9\u30f3\u30c0 - \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd\n     \u65e5\u672c - \u30da\u30eb\u30fc\n     \u97d3\u56fd - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n5 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u97d3\u56fd\n \u30aa\u30e9\u30f3\u30c0 - \u65e5\u672c\n     \u30bf\u30a4 - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd - \u30da\u30eb\u30fc\n6 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u65e5\u672c\n \u30aa\u30e9\u30f3\u30c0 - \u97d3\u56fd\n     \u30bf\u30a4 - \u30da\u30eb\u30fc\n \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n7 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u30aa\u30e9\u30f3\u30c0\n     \u65e5\u672c - \u97d3\u56fd\n     \u30bf\u30a4 - \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd\n   \u30da\u30eb\u30fc - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n\n\n\u5404\u65e5\u306e\u65e5\u7a0b\u304c\u51fa\u529b\u3055\u308c\u307e\u3057\u305f\u3002\n\u4ed6\u306e\u65b9\u6cd5\u3068\u3057\u3066\u306f\u3001\u524d\u534a\u306b\u6226\u529b\u5dee\u306e\u3042\u308b\u7d44\u5408\u305b\u3001\u5f8c\u534a\u306b\u62ee\u6297\u3057\u305f\u6226\u529b\u5dee\u306e\u7d44\u5408\u305b\u3068\u3044\u3046\u306e\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n \u304a\u307e\u3051\n\u4e00\u6642\u7684\u306b\u3001\u79c1\u306e\u76f4\u8fd1\u306ePython\u95a2\u9023\u306e\u6295\u7a3f\u3092\u3001Arukas\u3067\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nhttps://qiita-jupyter.arukascloud.io/\n\n\u5404\u8a18\u4e8b\u3092\u958b\u3044\u305f\u5f8c\u3067\u3001\u30bb\u30eb\u3092\u9078\u629e\u5f8c\u3001Shift\u30ad\u30fc\u3092\u62bc\u3057\u306a\u304c\u3089Enter\u30ad\u30fc\u3092\u62bc\u3059\u3068\u3001\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\n\n\u4e0a\u8a18\u306e\u5143\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\n\nhttps://hub.docker.com/r/tsutomu7/qiita-jupyter/\n\n\n\n\u4ee5\u4e0a\n# <i class='fa fa-braille' /> \u306f\u3058\u3081\u306b\n- \u3042\u308b\u30b9\u30dd\u30fc\u30c4\u306e\u30c8\u30fc\u30ca\u30e1\u30f3\u30c8\u6226\u3092**8\u30ab\u56fd**\u3067\u884c\u3044\u307e\u3059\u30024\u8a66\u5408\u3065\u30647\u65e5\u9593\u306e\u8a66\u5408\u3092\u884c\u3046\u3068\u3057\u307e\u3059\u3002\n- \u524d\u8a55\u5224\u306e\u4eba\u6c17\u9806\u4f4d\u304c\u308f\u304b\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n- \u306a\u308b\u3079\u304f\u3001\u4eba\u6c17\u306e\u9ad8\u3044\u30da\u30a2\u306e\u8a66\u5408\u3092\u5f8c\u534a\u306b\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3001**\u6700\u5f8c\u307e\u3067\u30cf\u30e9\u30cf\u30e9\u3059\u308b\u3088\u3046\u306a\u65e5\u7a0b**\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u3053\u306e\u554f\u984c\u3092[\u7d44\u5408\u305b\u6700\u9069\u5316](http://qiita.com/Tsutomu-KKE@github/items/bfbf4c185ed7004b5721)\u3067\u89e3\u3044\u3066\u307f\u307e\u3059\u3002\n\n# <i class='fa fa-braille' /> \u5b9a\u5f0f\u5316\n\u5909\u6570\u3092\u3001\u56fd1\u3001\u56fd2\u3001\u65e5\u3054\u3068\u306b\u3001\u305d\u306e\u7d44\u5408\u305b\u3092\"\u9078\u3076\u9078\u3070\u306a\u3044\"\u3092\u8868\u30590-1\u5909\u6570\u3068\u3057\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u5909\u6570\u306b\u5bfe\u5fdc\u3059\u308b\u3001\"2\u56fd(i,j)\u306e\u3042\u308b\u65e5(k)\u306e\u8a66\u5408\u306e\u91cd\u307f\"\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u3053\u306e\u91cd\u307f\u306e\u548c\u3092\u6700\u5927\u5316\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\"\u3042\u3068\u306e\u65b9\u306e\u9806\u4f4d\u306e\u5c0f\u3055\u3044\u56fd \u540c\u58eb\u306e\u8a66\u5408\"\u3092\u512a\u5148\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n$$\u91cd\u307f = \\frac{2^k}{i\u306e\u9806\u4f4d \\times j\u306e\u9806\u4f4d}$$\n\n\n<table>\n<tr><td>\u6700\u5927\u5316</td><td>$\\sum_i{\u91cd\u307f_i x_i}$</td><td>\u91cd\u307f\u306e\u7dcf\u548c</td></tr>\n<tr><td >\u5909\u6570</td><td>$x_i \\in \\{0,  1\\} ~ ~ \\forall i \\in \u5019\u88dc$</td><td>\u305d\u306e\u5019\u88dc\u3092\u9078\u629e\u3059\u308b\u304b\u3069\u3046\u304b</td></tr>\n<tr><td rowspan=\"2\">\u5236\u7d04\u6761\u4ef6</td><td>$\\sum_{i \\in j,k\u306e\u7d44~~~~~}{x_i} = 1 ~ ~ \\forall j,k \\in \\mbox{\u56fd}$</td><td>\u540c\u3058\u7d44\u306f1\u3064</td></tr>\n<tr><td>$\\sum_{i \\in \u56fdj\u3092\u542b\u3080k\u65e5\u76ee~~~~~~~~~~~~~}{x_i} = 1 ~ ~ \\forall j \\in \\mbox{\u56fd}, \\forall k \\in \\mbox{\u65e5}$</td><td>\u540c\u56fd\u3001\u540c\u65e5\u306f1\u3064</td></tr>\n</table>\n\u3053\u306e\u554f\u984c\u306f\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u554f\u984c\u306e\u4e00\u7a2e\u3067\u3059\u3002\n\n# <i class='fa fa-braille' /> Python\u3067\u3084\u3063\u3066\u307f\u308b\n\u307e\u305a\u306f\u3001\u7d44\u5408\u305b\u306e\u8868\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```py3:python3\nimport pandas as pd\nfrom itertools import combinations, product\nfrom pulp import *\nss = '\u30a4\u30bf\u30ea\u30a2 \u30aa\u30e9\u30f3\u30c0 \u65e5\u672c \u97d3\u56fd \u30bf\u30a4 \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd \u30da\u30eb\u30fc \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3'.split()\nrnk = {s:(i+1) for i, s in enumerate(ss)} # \u56fd\u540d\u2192\u9806\u4f4d\na = pd.DataFrame([(i, j, k, 2**k/rnk[i]/rnk[j]) for i, j in combinations(ss, 2)\n                  for k in range(7)], columns='\u56fd1 \u56fd2 \u65e5 \u91cd\u307f'.split())\na[:3]\n>>>\n       \u56fd1    \u56fd2    \u65e5  \u91cd\u307f\n0  \u30a4\u30bf\u30ea\u30a2  \u30aa\u30e9\u30f3\u30c0  0  0.5\n1  \u30a4\u30bf\u30ea\u30a2  \u30aa\u30e9\u30f3\u30c0  1  1.0\n2  \u30a4\u30bf\u30ea\u30a2  \u30aa\u30e9\u30f3\u30c0  2  2.0\n```\n\n\u5b9a\u5f0f\u5316\u3057\u3066\u89e3\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```py3:python3\nm = LpProblem(sense=LpMaximize) # \u6570\u7406\u30e2\u30c7\u30eb\na['Var'] = [LpVariable('v%d'%i, cat=LpBinary) for i in a.index] # \u5909\u6570\nm += lpDot(a.\u91cd\u307f, a.Var) # \u76ee\u7684\u95a2\u6570\nfor _, b in a.groupby(['\u56fd1', '\u56fd2']):\n    m += lpSum(b.Var) == 1 # \u540c\u3058\u7d44\u306f1\u3064\nfor s, i in product(ss, range(7)):\n    # \u540c\u56fd\u3001\u540c\u65e5\u306f1\u3064\n    m += lpSum(a.query('(\u56fd1==\"{0}\" | \u56fd2==\"{0}\") & \u65e5=={1}'.format(s, i)).Var) == 1\nm.solve() # \u6c42\u89e3\na['Val'] = a.Var.apply(value) # \u7d50\u679c\n# \u8868\u793a\nfor i, b in a.groupby('\u65e5'):\n    print(i+1, '\u65e5\u76ee ')\n    for _, r in b[b.Val > 0].iterrows():\n        print(' %*s - %s'%(8-len(r.\u56fd1), r.\u56fd1, r.\u56fd2))\n>>>\n1 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n \u30aa\u30e9\u30f3\u30c0 - \u30da\u30eb\u30fc\n     \u65e5\u672c - \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd\n     \u97d3\u56fd - \u30bf\u30a4\n2 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u30da\u30eb\u30fc\n \u30aa\u30e9\u30f3\u30c0 - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n     \u65e5\u672c - \u30bf\u30a4\n     \u97d3\u56fd - \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd\n3 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd\n \u30aa\u30e9\u30f3\u30c0 - \u30bf\u30a4\n     \u65e5\u672c - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n     \u97d3\u56fd - \u30da\u30eb\u30fc\n4 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u30bf\u30a4\n \u30aa\u30e9\u30f3\u30c0 - \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd\n     \u65e5\u672c - \u30da\u30eb\u30fc\n     \u97d3\u56fd - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n5 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u97d3\u56fd\n \u30aa\u30e9\u30f3\u30c0 - \u65e5\u672c\n     \u30bf\u30a4 - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd - \u30da\u30eb\u30fc\n6 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u65e5\u672c\n \u30aa\u30e9\u30f3\u30c0 - \u97d3\u56fd\n     \u30bf\u30a4 - \u30da\u30eb\u30fc\n \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n7 \u65e5\u76ee \n \u30a4\u30bf\u30ea\u30a2 - \u30aa\u30e9\u30f3\u30c0\n     \u65e5\u672c - \u97d3\u56fd\n     \u30bf\u30a4 - \u30c9\u30df\u30cb\u30ab\u5171\u548c\u56fd\n   \u30da\u30eb\u30fc - \u30ab\u30b6\u30d5\u30b9\u30bf\u30f3\n```\n\n\u5404\u65e5\u306e\u65e5\u7a0b\u304c\u51fa\u529b\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u4ed6\u306e\u65b9\u6cd5\u3068\u3057\u3066\u306f\u3001\u524d\u534a\u306b\u6226\u529b\u5dee\u306e\u3042\u308b\u7d44\u5408\u305b\u3001\u5f8c\u534a\u306b\u62ee\u6297\u3057\u305f\u6226\u529b\u5dee\u306e\u7d44\u5408\u305b\u3068\u3044\u3046\u306e\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n# <i class='fa fa-braille' /> \u304a\u307e\u3051\n\u4e00\u6642\u7684\u306b\u3001\u79c1\u306e\u76f4\u8fd1\u306ePython\u95a2\u9023\u306e\u6295\u7a3f\u3092\u3001Arukas\u3067\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n- https://qiita-jupyter.arukascloud.io/\n    - \u5404\u8a18\u4e8b\u3092\u958b\u3044\u305f\u5f8c\u3067\u3001\u30bb\u30eb\u3092\u9078\u629e\u5f8c\u3001Shift\u30ad\u30fc\u3092\u62bc\u3057\u306a\u304c\u3089Enter\u30ad\u30fc\u3092\u62bc\u3059\u3068\u3001\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n- \u4e0a\u8a18\u306e\u5143\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n    - https://hub.docker.com/r/tsutomu7/qiita-jupyter/\n\n\u4ee5\u4e0a\n"}