{"context": "\n\n\u6982\u8981\n\u4eca\u307e\u3067\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304b\u3089\u9003\u3052\u7d9a\u3051\u3066\u3044\u305f\u4eba\u751f\u3060\u3063\u305f\u304c\uff0c\n\u6687\u3060\u3063\u305f\u306e\u3067\u7acb\u3061\u5411\u304b\u3063\u3066\u307f\u305f\uff0e\n\u305d\u306e\u904e\u7a0b\u3067\uff0cRust\u3068Arduino\u3067\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3082\u3084\u3063\u3066\u307f\u305f\uff0e\n\n\u6e96\u5099\n\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3063\u3066\u7d50\u69cb\u304a\u91d1\u304b\u304b\u308b\u306e\u306d\u2026\n\u3068\u308a\u3042\u3048\u305a\u4ee5\u4e0b\u3092\u8cfc\u5165\u3057\u3066\uff0c\u624b\u3092\u52d5\u304b\u3057\u306a\u304c\u3089\u52c9\u5f37\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\uff0e\nArduino\u3092\u306f\u3058\u3081\u3088\u3046 \u7b2c3\u7248 (Make:PROJECTS)\nArduino\u3092\u306f\u3058\u3081\u3088\u3046\u30ad\u30c3\u30c8\nArduino\u62e1\u5f35\u30ad\u30c3\u30c8- Physical Computing Lab\n\u5927\u4f531\u4e07\u5186\u304f\u3089\u3044\u3060\u3063\u305f\uff0e\nArduino\u62e1\u5f35\u30ad\u30c3\u30c8- Physical Computing Lab\u306f\u5168\u304f\u4f7f\u308f\u306a\u304b\u3063\u305f\u306e\u3067\uff0c\n\u8cb7\u308f\u306a\u304f\u3066\u826f\u3044\u304b\u3082\uff0e\n\n\u611f\u60f3\nArduino\u3092\u306f\u3058\u3081\u3088\u3046 \u7b2c3\u7248 (Make:PROJECTS)\u3067\u306f\uff0c\u57fa\u672c\u7684\u306bLED\u3092\u8ef8\u306b\u3057\u3066\uff0c\n\u5b9f\u969b\u306b\u56de\u8def\u3092\u7d44\u307f\u7acb\u3066\u306a\u304c\u3089\u5404\u7a2e\u30bb\u30f3\u30b5\u306e\u7d39\u4ecb\u3084\u4ed5\u7d44\u307f\u306e\u7d39\u4ecb\u3092\u3057\u3066\u3044\u305f\uff0e\n\u56de\u8def\u4f5c\u6210\u306f\uff0cArduino\u3092\u306f\u3058\u3081\u3088\u3046\u30ad\u30c3\u30c8\u3067\u5927\u534a\u3092\u4f5c\u6210\u3067\u304d\u308b\u304c\uff0c\n\u4e00\u756a\u8907\u96d1\u306a\u56de\u8def\u306b\u95a2\u3057\u3066\u306f\uff0c\u5225\u9014\u96fb\u78c1\u30d0\u30eb\u30d6\u306a\u3069\u3092\u8cfc\u5165\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\n\u307e\u305f\uff0c\u30ad\u30c3\u30c8\u306b\u3064\u3044\u3066\u304f\u308bArduino\u3068\u306f\u9055\u3046\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u3082\u306e\u306b\u95a2\u3059\u308b\u7ae0\u304c\u3042\u308a\uff0c\n\u305d\u3061\u3089\u3082\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5225\u9014\u8cfc\u5165\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\n\u5b9f\u969b\u306e\u56de\u8def\u4f5c\u6210\u306e\u6d41\u308c\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3060\u3063\u305f\uff0e\n1\uff0cLED\u30c1\u30ab\u30c1\u30ab(\u901a\u79f0\uff0cL\u30c1\u30ab)\n2\uff0cLED\u3092\u30d7\u30c3\u30b7\u30e5\u30dc\u30bf\u30f3\u3067\u5236\u5fa1\n3\uff0cLED\u3092\u5149\u30bb\u30f3\u30b5\u3067\u5236\u5fa1\n4\uff0c\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u7c21\u5358\u306a\u30c6\u30b9\u30c8\n5\uff0cArduino\uff0bProcessing\u3067\u901a\u4fe1\u3057\u3066LED\u3092\u5236\u5fa1\n6\uff0c(\u3084\u308b\u4eba\u306f)\u96fb\u78c1\u30d0\u30eb\u30d6\u3084RTC\u3092\u7528\u3044\u3066\u6f45\u6c34\u30c4\u30fc\u30eb\u4f5c\u6210\n\u521d\u3081\u3066\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u89e6\u308b\u4eba\u9593\u3068\u3057\u3066\u306f\uff0c\n\u7c21\u5358\u3067\u306f\u3042\u308b\u3082\u306e\u306e\uff0c\u81ea\u529b\u3067\u56de\u8def\u3092\u4f5c\u6210\u3057\u3066\u52d5\u304b\u305b\u305f\u306e\u3067\uff0c\u5272\u308a\u3068\u611f\u52d5\u3057\u305f\uff0e\n\u307e\u305f\u6065\u305a\u304b\u3057\u306a\u304c\u3089\uff0c\u4ed6\u8a00\u8a9e\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u4e00\u3064\u306e\u30b7\u30b9\u30c6\u30e0\u3092\u52d5\u304b\u3059\uff0c\n\u3068\u3044\u3046\u7d4c\u9a13\u304c\u4eca\u307e\u3067\u306a\u304b\u3063\u305f\u306e\u3067\uff0c\u305d\u3061\u3089\u3082\u611f\u52d5\u3057\u305f\uff0e\n\u96fb\u5b50\u56de\u8def\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306a\u77e5\u8b58\u306a\u3069\u306f\u53d6\u5f97\u3067\u304d\u306a\u3044\u304c\uff0c\n\u5165\u308a\u3068\u3057\u3066\u306f\u5145\u5206\u306a\u6559\u6750\u3060\u3068\u601d\u308f\u308c\u308b\uff0e\n\nRust\u3068\u901a\u4fe1\n\u3055\u3066\uff0c\u3053\u3053\u304b\u3089\u304c\u672c\u756a\u3067\u3042\u308b\uff0e\n\u6700\u7d42\u7684\u306b\u306f\uff0cRust\u4e0a\u3067\u76f4\u63a5Arduino\u306e\u51e6\u7406\u3092\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306a\u72b6\u614b\u306b\u3057\u305f\u3044\u304c\uff0c\n\u3068\u308a\u3042\u3048\u305a\u4e00\u756a\u6700\u521d\u3068\u3044\u3046\u3053\u3068\u3067\uff0c\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3092\u3057\u3066\u307f\u305f\uff0e\n(\u4eba\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4e57\u3063\u304b\u3063\u305f\u3060\u3051\u3060\u304c)\n\n\u74b0\u5883\nOS\uff1aWindows7\nRust\uff1arustc 1.10.0 (cfcb716cf 2016-07-03)\nCargo\uff1acargo 0.11.0-nightly (259324c 2016-05-20)\n\n\u6e96\u5099\nserial\u3068\u3044\u3046crate\u304c\u5b9f\u306f\u5b58\u5728\u3057\u3066\u3044\u308b\uff0e\n\u4ed5\u7d44\u307f\u306fWinAPI\u3067\u6307\u5b9a\u3057\u305f\u30dd\u30fc\u30c8\u3068\u63a5\u7d9a\u3057\u3066\uff0c\u3042\u3068\u306f\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u8fbc\u3093\u3067\u3044\u308b\u3060\u3051\u306e\u3088\u3046\u3060\u304c\uff0c\n\u81ea\u5206\u3067\u7d44\u3082\u3046\u3068\u3059\u308b\u3068\uff0c\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u5468\u308a\u306e\u898f\u683c\u3092\u3057\u3063\u304b\u308a\u8abf\u3079\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\uff0c\n\u4eca\u56de\u306f\u3053\u3061\u3089\u3092\u4f7f\u7528\u3055\u305b\u3066\u3044\u305f\u3060\u304f\u3053\u3068\u306b\u3057\u305f\uff0e\ncargo-edit\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u5834\u5408\u306f\uff0c\n\u8a72\u5f53\u3059\u308bCargo.toml\u304c\u3042\u308b\u5834\u6240\u3067cmd\u3092\u958b\u3044\u3066\uff0c\n\u4ee5\u4e0b\u3092\u5165\u529b\u3059\u308c\u3070OK\uff0e\n$cargo add serial\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\uff0c\n\u8a72\u5f53\u3059\u308bCargo.toml\u3092\u958b\u3044\u3066\uff0c\u4ee5\u4e0b\u3092\u8a18\u5165\u3059\u308c\u3070OK\uff0e\ncrate\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u9069\u5b9c\u5909\u3048\u3066\u3044\u305f\u3060\u3051\u308c\u3070.\n[dependencies]\nserial = \"0.3.4\"\n\n\n\u30b3\u30fc\u30c9\n\u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\uff0e\n\u9001\u4fe1\u7528\u30c7\u30fc\u30bf\u306e\u69cb\u6210\u306f\uff0c1\u884c\u306b16\u9032\u6570\u306eRGB\u5024\u304c1\u3064\u3060\u3051\u6e21\u3055\u308c\u308b\uff0c\u3068\u3044\u3046\u8d85\u7c21\u6613\u7684\u306a\u3082\u306e\uff0e\n(\u4f8b\uff1a\u767d\u3000->\u3000#FFFFFF\u3000\u7684\u306a)\n\nmain.rs\n#![allow(non_snake_case)]\n#![allow(while_true)]\n\nextern crate serial;\n\nuse std::thread;\nuse std::time::Duration;\n\nuse std::io::prelude::*;\nuse serial::prelude::*;\n\nfn main() \n{\n    //Arduino\u304c\u7e4b\u304c\u3063\u3066\u3044\u308bCOM\u30dd\u30fc\u30c8\u3092\u6307\u5b9a.\n    let mut port = serial::open(\"COM3\").unwrap();\n\n    //\u901a\u4fe1\u95a2\u9023\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u8a2d\u5b9a.\n    let optionFunc = &|settings: &mut SerialPortSettings|{\n        settings.set_baud_rate( serial::Baud9600 );\n        settings.set_char_size(serial::Bits8);\n        settings.set_parity(serial::ParityNone);\n        settings.set_stop_bits(serial::Stop1);\n        settings.set_flow_control(serial::FlowNone);\n        Ok(())\n    };\n\n    //\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u8a2d\u5b9a\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059.\n    port.reconfigure( optionFunc );\n\n    //\u901a\u4fe1\u6642\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u9593\u3092\u8a2d\u5b9a.\n    port.set_timeout( Duration::from_millis( 1000 ) );\n\n    let mut hrgb: Vec<u8> = vec!( '#' as u8, 0, 0, 0, 0, 0, 0 );\n    let mut r: u8 = 0;\n    let mut g: u8 = 0;\n    let mut b: u8 = 0;\n    const U8_MAX: u8 = 255;\n    const HEX_VALUE: u8 = 16;\n    while( true ){\n        r = ( r + 1 ) % U8_MAX;\n        g = ( g + 1 ) % U8_MAX;\n        b = ( b + 1 ) % U8_MAX;\n\n        hrgb[1] = ConvertD2H( r / HEX_VALUE );\n        hrgb[2] = ConvertD2H( r % HEX_VALUE );\n        hrgb[3] = ConvertD2H( g / HEX_VALUE );\n        hrgb[4] = ConvertD2H( g % HEX_VALUE );\n        hrgb[5] = ConvertD2H( b / HEX_VALUE );\n        hrgb[6] = ConvertD2H( b % HEX_VALUE );\n\n        port.write( &hrgb );\n        port.flush();\n\n        thread::sleep( Duration::from_millis( 5 ) );\n    }\n}\nfn ConvertD2H( x: u8 ) -> u8\n{\n    let mut tmp: u8 = 0;\n\n    if( 0 <= x && x <= 9 ){\n        let base: u8 = '0' as u8;\n        tmp = base + x;\n    }\n    else if( 10 <= x && x <= 15 ){\n        let base: u8 = 'A' as u8;\n        tmp = base + ( x - 10 );\n    }\n\n    tmp\n}\n\n\n\nserial\u3067\u306f\u66f8\u304d\u8fbc\u307f\u304cu8\u306e\u914d\u5217\u3067\u3057\u304b\u3067\u304d\u306a\u3044\u3088\u3046\u306a\u306e\u3067\uff0c\nchar\u3092u8\u306b\u5909\u63db\u3057\u3066\u6e21\u3057\u3066\u3044\u308b\uff0e\n\u30d0\u30f3\u30c9\u30ec\u30fc\u30c8\u306fArduino\u5074\u3068Rust\u5074\u3067\u5408\u308f\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\u4eca\u56de\u306f9600\uff0e\n\u4ee5\u4e0b\u306bArduino\u5074\u306e\u30b3\u30fc\u30c9\u3082\u8f09\u305b\u3066\u304a\u304f\uff0e\n//\u5165\u529b.\nconst int PUSH_BTN      = 12; //\u30c7\u30b8\u30bf\u30eb.\nconst int LIGHT_SENSOR  = 0;  //\u30a2\u30ca\u30ed\u30b0.\n\n//\u51fa\u529b.\u30a2\u30ca\u30ed\u30b0.\nconst int LED_1 = 11;\nconst int LED_2 = 10;\nconst int LED_3 = 9;\n\n//ONOFF\u72b6\u614b.\nstatic bool g_bOnOff = false;\n\n//RGB\u60c5\u5831.\nstruct RGB\n{\n   float r;\n   float g;\n   float b;\n};\n\nvoid setup() \n{\n  Serial.begin( 9600 );\n  pinMode( PUSH_BTN, INPUT );\n}\n\nvoid loop() \n{\n  //\u30b9\u30a4\u30c3\u30c1\u5165\u529b\u78ba\u8a8d.\n  if( GetTrigger() ){\n    g_bOnOff ^= true;\n    delay( 50 );\n  }\n\n  //\u8272\u60c5\u5831\u53d6\u5f97.\n  RGB color = GetColor();\n\n  if( !g_bOnOff ){\n    //OFF\u72b6\u614b\u306a\u3089\u8272\u60c5\u5831\u3092\u6d88\u3059.  \n    color.r = color.g = color.b = 0.0f;\n  }\n\n  //\u66f8\u304d\u8fbc\u307f.\n  analogWrite( LED_1, color.r );\n  analogWrite( LED_2, color.g );\n  analogWrite( LED_3, color.b );\n\n  //\u5149\u30bb\u30f3\u30b5\u30fc\u3067\u53d6\u5f97\u3057\u305f\u660e\u308b\u3055\u3092\u9001\u308a\u8fd4\u3059.\n  Serial.println( (float)analogRead( LIGHT_SENSOR ) / 1024.0f * 255.0f );\n}\n\nbool GetTrigger()\n{\n  static bool prev = false;\n  static bool now = false;\n  prev  = now;\n  now   = ( digitalRead( PUSH_BTN ) == HIGH );\n  return ( !prev && now );\n}\n\nRGB GetColor()\n{\n  static RGB tmpRGB;\n\n  //\u4e00\u756a\u6700\u521d\u3060\u3051\u521d\u671f\u5316\u3059\u308b.\n  static bool bInit = false;\n  if( !bInit ){\n    tmpRGB.r = 0.0f;\n    tmpRGB.g = 0.0f;\n    tmpRGB.b = 0.0f;\n    bInit = true;\n  }\n\n  //\u901a\u4fe1\u304c\u3042\u308c\u3070\u60c5\u5831\u3092\u66f4\u65b0.\n  if( Serial.available() > 0 ){\n    char c = Serial.read();\n    if( c == '#' ){\n      tmpRGB.r = ConvertF2D( Serial.read() ) * 16.0f + ConvertF2D( Serial.read() );\n      tmpRGB.g = ConvertF2D( Serial.read() ) * 16.0f + ConvertF2D( Serial.read() );\n      tmpRGB.b = ConvertF2D( Serial.read() ) * 16.0f + ConvertF2D( Serial.read() );\n    }\n  }\n\n  return tmpRGB;\n}\n\nfloat ConvertF2D( char c )\n{\n  float tmp = 0.0f;\n\n  if( '0' <= c && c <= '9' ){\n    tmp = ( float )( c - '0' );\n  }\n  else if( 'A' <= c && c <= 'F' ){\n    tmp = ( float )( ( c - 'A' ) + 10.0f );\n  }\n  else{\n    Serial.print( c );\n    Serial.println( \"is not compatible\" );\n  }\n\n  return tmp;\n}\n\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308c\u3070\uff0cLED\u304c\u5f90\u3005\u306b\u660e\u308b\u304f\u306a\u3063\u3066\u3044\u304f\u56de\u8def\u304c\u52d5\u304f\u306f\u305a\uff0e\n(\u56de\u8def\u81ea\u4f53\u306f\uff0cArduino\u3092\u306f\u3058\u3081\u3088\u3046 \u7b2c3\u7248 (Make:PROJECTS)\u306e7\u7ae0\u306e\u3082\u306e\u3092\u4f5c\u308c\u3070\u52d5\u304f\uff0e)\n(\u5149\u30bb\u30f3\u30b5\u306f\u30c1\u30a7\u30c3\u30af\u7528\uff0e\u4e0a\u8a18\u30b3\u30fc\u30c9\u3067\u306f\u4f55\u306e\u5f79\u306b\u3082\u7acb\u3063\u3066\u3044\u306a\u3044\uff0e)\n\n\u6ce8\u610f\n\u7406\u7531\u306f\u8abf\u67fb\u4e2d\u3060\u304c\uff0cRust\u5074\u304b\u3089\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u3068\uff0c\n\u4e00\u5b9a\u6642\u9593\u7d4c\u3063\u305f\u3042\u3068\u306b\u30c7\u30fc\u30bf\u304c\u9001\u4fe1\u3067\u304d\u306a\u304f\u306a\u308b\uff0c\u3068\u3044\u3046\u30d0\u30b0\u304c\u3042\u308b\uff0e\nArduino\u5074\u306e\u51e6\u7406\u304c\u9593\u306b\u5408\u3063\u3066\u3044\u306a\u3044\u3068\u304b\u306a\u3093\u3060\u308d\u3046\u304b\uff1f\n\u3082\u3084\u3082\u3084\u3059\u308b\u2026\n#\u6982\u8981\n\u4eca\u307e\u3067\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u304b\u3089\u9003\u3052\u7d9a\u3051\u3066\u3044\u305f\u4eba\u751f\u3060\u3063\u305f\u304c\uff0c\n\u6687\u3060\u3063\u305f\u306e\u3067\u7acb\u3061\u5411\u304b\u3063\u3066\u307f\u305f\uff0e\n\n\u305d\u306e\u904e\u7a0b\u3067\uff0c`Rust`\u3068`Arduino`\u3067\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3082\u3084\u3063\u3066\u307f\u305f\uff0e\n#\u6e96\u5099\n\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3063\u3066\u7d50\u69cb\u304a\u91d1\u304b\u304b\u308b\u306e\u306d\u2026\n\u3068\u308a\u3042\u3048\u305a\u4ee5\u4e0b\u3092\u8cfc\u5165\u3057\u3066\uff0c\u624b\u3092\u52d5\u304b\u3057\u306a\u304c\u3089\u52c9\u5f37\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\uff0e\n[Arduino\u3092\u306f\u3058\u3081\u3088\u3046 \u7b2c3\u7248 (Make:PROJECTS)](https://www.amazon.co.jp/Arduino-3-Make-Massimo-Banzi/dp/487311733X/ref=dp_ob_title_bk)\n[Arduino\u3092\u306f\u3058\u3081\u3088\u3046\u30ad\u30c3\u30c8](https://www.amazon.co.jp/%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81%E3%82%B5%E3%82%A4%E3%82%A8%E3%83%B3%E3%82%B9-SSCI-GettingStartedArduinoKit-Arduino%E3%82%92%E3%81%AF%E3%81%98%E3%82%81%E3%82%88%E3%81%86%E3%82%AD%E3%83%83%E3%83%88/dp/B0025Y6C5G/ref=pd_sim_14_2?ie=UTF8&dpID=413sKH40bxL&dpSrc=sims&preST=_AC_UL160_SR160%2C160_&psc=1&refRID=FCBCT9KZPMVK3Q66SZRD)\n[Arduino\u62e1\u5f35\u30ad\u30c3\u30c8- Physical Computing Lab](https://www.amazon.co.jp/Physical-Computing-Lab-Arduino%E6%8B%A1%E5%BC%B5%E3%82%AD%E3%83%83%E3%83%88/dp/B008QUJALG/ref=pd_bxgy_21_3?ie=UTF8&psc=1&refRID=C8Q9063CXWC2BD1H3BW0)\n\n\u5927\u4f531\u4e07\u5186\u304f\u3089\u3044\u3060\u3063\u305f\uff0e\n[Arduino\u62e1\u5f35\u30ad\u30c3\u30c8- Physical Computing Lab](https://www.amazon.co.jp/Physical-Computing-Lab-Arduino%E6%8B%A1%E5%BC%B5%E3%82%AD%E3%83%83%E3%83%88/dp/B008QUJALG/ref=pd_bxgy_21_3?ie=UTF8&psc=1&refRID=C8Q9063CXWC2BD1H3BW0)\u306f\u5168\u304f\u4f7f\u308f\u306a\u304b\u3063\u305f\u306e\u3067\uff0c\n\u8cb7\u308f\u306a\u304f\u3066\u826f\u3044\u304b\u3082\uff0e\n\n\n#\u611f\u60f3\n[Arduino\u3092\u306f\u3058\u3081\u3088\u3046 \u7b2c3\u7248 (Make:PROJECTS)](https://www.amazon.co.jp/Arduino-3-Make-Massimo-Banzi/dp/487311733X/ref=dp_ob_title_bk)\u3067\u306f\uff0c\u57fa\u672c\u7684\u306bLED\u3092\u8ef8\u306b\u3057\u3066\uff0c\n\u5b9f\u969b\u306b\u56de\u8def\u3092\u7d44\u307f\u7acb\u3066\u306a\u304c\u3089\u5404\u7a2e\u30bb\u30f3\u30b5\u306e\u7d39\u4ecb\u3084\u4ed5\u7d44\u307f\u306e\u7d39\u4ecb\u3092\u3057\u3066\u3044\u305f\uff0e\n\n\u56de\u8def\u4f5c\u6210\u306f\uff0c[Arduino\u3092\u306f\u3058\u3081\u3088\u3046\u30ad\u30c3\u30c8](https://www.amazon.co.jp/%E3%82%B9%E3%82%A4%E3%83%83%E3%83%81%E3%82%B5%E3%82%A4%E3%82%A8%E3%83%B3%E3%82%B9-SSCI-GettingStartedArduinoKit-Arduino%E3%82%92%E3%81%AF%E3%81%98%E3%82%81%E3%82%88%E3%81%86%E3%82%AD%E3%83%83%E3%83%88/dp/B0025Y6C5G/ref=pd_sim_14_2?ie=UTF8&dpID=413sKH40bxL&dpSrc=sims&preST=_AC_UL160_SR160%2C160_&psc=1&refRID=FCBCT9KZPMVK3Q66SZRD)\u3067\u5927\u534a\u3092\u4f5c\u6210\u3067\u304d\u308b\u304c\uff0c\n\u4e00\u756a\u8907\u96d1\u306a\u56de\u8def\u306b\u95a2\u3057\u3066\u306f\uff0c\u5225\u9014\u96fb\u78c1\u30d0\u30eb\u30d6\u306a\u3069\u3092\u8cfc\u5165\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\n\u307e\u305f\uff0c\u30ad\u30c3\u30c8\u306b\u3064\u3044\u3066\u304f\u308b`Arduino`\u3068\u306f\u9055\u3046\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u3082\u306e\u306b\u95a2\u3059\u308b\u7ae0\u304c\u3042\u308a\uff0c\n\u305d\u3061\u3089\u3082\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5225\u9014\u8cfc\u5165\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\n\n\u5b9f\u969b\u306e\u56de\u8def\u4f5c\u6210\u306e\u6d41\u308c\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3060\u3063\u305f\uff0e\n1\uff0cLED\u30c1\u30ab\u30c1\u30ab(\u901a\u79f0\uff0cL\u30c1\u30ab)\n2\uff0cLED\u3092\u30d7\u30c3\u30b7\u30e5\u30dc\u30bf\u30f3\u3067\u5236\u5fa1\n3\uff0cLED\u3092\u5149\u30bb\u30f3\u30b5\u3067\u5236\u5fa1\n4\uff0c\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u7c21\u5358\u306a\u30c6\u30b9\u30c8\n5\uff0c`Arduino`\uff0b`Processing`\u3067\u901a\u4fe1\u3057\u3066LED\u3092\u5236\u5fa1\n6\uff0c(\u3084\u308b\u4eba\u306f)\u96fb\u78c1\u30d0\u30eb\u30d6\u3084RTC\u3092\u7528\u3044\u3066\u6f45\u6c34\u30c4\u30fc\u30eb\u4f5c\u6210\n\n\u521d\u3081\u3066\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u89e6\u308b\u4eba\u9593\u3068\u3057\u3066\u306f\uff0c\n\u7c21\u5358\u3067\u306f\u3042\u308b\u3082\u306e\u306e\uff0c\u81ea\u529b\u3067\u56de\u8def\u3092\u4f5c\u6210\u3057\u3066\u52d5\u304b\u305b\u305f\u306e\u3067\uff0c\u5272\u308a\u3068\u611f\u52d5\u3057\u305f\uff0e\n\n\u307e\u305f\u6065\u305a\u304b\u3057\u306a\u304c\u3089\uff0c\u4ed6\u8a00\u8a9e\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u4e00\u3064\u306e\u30b7\u30b9\u30c6\u30e0\u3092\u52d5\u304b\u3059\uff0c\n\u3068\u3044\u3046\u7d4c\u9a13\u304c\u4eca\u307e\u3067\u306a\u304b\u3063\u305f\u306e\u3067\uff0c\u305d\u3061\u3089\u3082\u611f\u52d5\u3057\u305f\uff0e\n\n\u96fb\u5b50\u56de\u8def\u306b\u95a2\u3059\u308b\u8a73\u7d30\u306a\u77e5\u8b58\u306a\u3069\u306f\u53d6\u5f97\u3067\u304d\u306a\u3044\u304c\uff0c\n\u5165\u308a\u3068\u3057\u3066\u306f\u5145\u5206\u306a\u6559\u6750\u3060\u3068\u601d\u308f\u308c\u308b\uff0e\n\n#`Rust`\u3068\u901a\u4fe1\n\u3055\u3066\uff0c\u3053\u3053\u304b\u3089\u304c\u672c\u756a\u3067\u3042\u308b\uff0e\n\u6700\u7d42\u7684\u306b\u306f\uff0c`Rust`\u4e0a\u3067\u76f4\u63a5`Arduino`\u306e\u51e6\u7406\u3092\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306a\u72b6\u614b\u306b\u3057\u305f\u3044\u304c\uff0c\n\u3068\u308a\u3042\u3048\u305a\u4e00\u756a\u6700\u521d\u3068\u3044\u3046\u3053\u3068\u3067\uff0c\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u3092\u3057\u3066\u307f\u305f\uff0e\n(\u4eba\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4e57\u3063\u304b\u3063\u305f\u3060\u3051\u3060\u304c)\n##\u74b0\u5883\nOS\uff1a`Windows7`\nRust\uff1a`rustc 1.10.0 (cfcb716cf 2016-07-03)`\nCargo\uff1a`cargo 0.11.0-nightly (259324c 2016-05-20)`\n##\u6e96\u5099\n`serial`\u3068\u3044\u3046crate\u304c\u5b9f\u306f\u5b58\u5728\u3057\u3066\u3044\u308b\uff0e\n\u4ed5\u7d44\u307f\u306fWinAPI\u3067\u6307\u5b9a\u3057\u305f\u30dd\u30fc\u30c8\u3068\u63a5\u7d9a\u3057\u3066\uff0c\u3042\u3068\u306f\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u8fbc\u3093\u3067\u3044\u308b\u3060\u3051\u306e\u3088\u3046\u3060\u304c\uff0c\n\u81ea\u5206\u3067\u7d44\u3082\u3046\u3068\u3059\u308b\u3068\uff0c\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u5468\u308a\u306e\u898f\u683c\u3092\u3057\u3063\u304b\u308a\u8abf\u3079\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\uff0c\n\u4eca\u56de\u306f\u3053\u3061\u3089\u3092\u4f7f\u7528\u3055\u305b\u3066\u3044\u305f\u3060\u304f\u3053\u3068\u306b\u3057\u305f\uff0e\n\n`cargo-edit`\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u5834\u5408\u306f\uff0c\n\u8a72\u5f53\u3059\u308b`Cargo.toml`\u304c\u3042\u308b\u5834\u6240\u3067cmd\u3092\u958b\u3044\u3066\uff0c\n\u4ee5\u4e0b\u3092\u5165\u529b\u3059\u308c\u3070OK\uff0e\n\n```\n$cargo add serial\n```\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u5834\u5408\u306f\uff0c\n\u8a72\u5f53\u3059\u308b`Cargo.toml`\u3092\u958b\u3044\u3066\uff0c\u4ee5\u4e0b\u3092\u8a18\u5165\u3059\u308c\u3070OK\uff0e\ncrate\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u9069\u5b9c\u5909\u3048\u3066\u3044\u305f\u3060\u3051\u308c\u3070.\n\n```\n[dependencies]\nserial = \"0.3.4\"\n```\n##\u30b3\u30fc\u30c9\n\u5b9f\u88c5\u3057\u305f\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\uff0e\n\u9001\u4fe1\u7528\u30c7\u30fc\u30bf\u306e\u69cb\u6210\u306f\uff0c1\u884c\u306b16\u9032\u6570\u306eRGB\u5024\u304c1\u3064\u3060\u3051\u6e21\u3055\u308c\u308b\uff0c\u3068\u3044\u3046\u8d85\u7c21\u6613\u7684\u306a\u3082\u306e\uff0e\n(\u4f8b\uff1a\u767d\u3000->\u3000#FFFFFF\u3000\u7684\u306a)\n\n```rust:main.rs\n#![allow(non_snake_case)]\n#![allow(while_true)]\n\nextern crate serial;\n\nuse std::thread;\nuse std::time::Duration;\n\nuse std::io::prelude::*;\nuse serial::prelude::*;\n\nfn main() \n{\n\t//Arduino\u304c\u7e4b\u304c\u3063\u3066\u3044\u308bCOM\u30dd\u30fc\u30c8\u3092\u6307\u5b9a.\n\tlet mut port = serial::open(\"COM3\").unwrap();\n\t\n\t//\u901a\u4fe1\u95a2\u9023\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u8a2d\u5b9a.\n\tlet optionFunc = &|settings: &mut SerialPortSettings|{\n        settings.set_baud_rate( serial::Baud9600 );\n        settings.set_char_size(serial::Bits8);\n        settings.set_parity(serial::ParityNone);\n        settings.set_stop_bits(serial::Stop1);\n        settings.set_flow_control(serial::FlowNone);\n        Ok(())\n    };\n\t\n\t//\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u8a2d\u5b9a\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059.\n\tport.reconfigure( optionFunc );\n\n\t//\u901a\u4fe1\u6642\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u6642\u9593\u3092\u8a2d\u5b9a.\n    port.set_timeout( Duration::from_millis( 1000 ) );\n    \n    let mut hrgb: Vec<u8> = vec!( '#' as u8, 0, 0, 0, 0, 0, 0 );\n    let mut r: u8 = 0;\n    let mut g: u8 = 0;\n    let mut b: u8 = 0;\n    const U8_MAX: u8 = 255;\n    const HEX_VALUE: u8 = 16;\n\twhile( true ){\n\t\tr = ( r + 1 ) % U8_MAX;\n\t\tg = ( g + 1 ) % U8_MAX;\n\t\tb = ( b + 1 ) % U8_MAX;\n\t\t\n\t\thrgb[1] = ConvertD2H( r / HEX_VALUE );\n\t\thrgb[2] = ConvertD2H( r % HEX_VALUE );\n\t\thrgb[3] = ConvertD2H( g / HEX_VALUE );\n\t\thrgb[4] = ConvertD2H( g % HEX_VALUE );\n\t\thrgb[5] = ConvertD2H( b / HEX_VALUE );\n\t\thrgb[6] = ConvertD2H( b % HEX_VALUE );\n\t\t\n\t\tport.write( &hrgb );\n\t\tport.flush();\n\t\t\n\t\tthread::sleep( Duration::from_millis( 5 ) );\n\t}\n}\nfn ConvertD2H( x: u8 ) -> u8\n{\n\tlet mut tmp: u8 = 0;\n\t\n\tif( 0 <= x && x <= 9 ){\n\t\tlet base: u8 = '0' as u8;\n\t\ttmp = base + x;\n\t}\n\telse if( 10 <= x && x <= 15 ){\n\t\tlet base: u8 = 'A' as u8;\n\t\ttmp = base + ( x - 10 );\n\t}\n\t\n\ttmp\n}\n\n```\n\n`serial`\u3067\u306f\u66f8\u304d\u8fbc\u307f\u304c`u8`\u306e\u914d\u5217\u3067\u3057\u304b\u3067\u304d\u306a\u3044\u3088\u3046\u306a\u306e\u3067\uff0c\n`char`\u3092`u8`\u306b\u5909\u63db\u3057\u3066\u6e21\u3057\u3066\u3044\u308b\uff0e\n\n\u30d0\u30f3\u30c9\u30ec\u30fc\u30c8\u306f`Arduino`\u5074\u3068`Rust`\u5074\u3067\u5408\u308f\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\u4eca\u56de\u306f9600\uff0e\n\n\u4ee5\u4e0b\u306b`Arduino`\u5074\u306e\u30b3\u30fc\u30c9\u3082\u8f09\u305b\u3066\u304a\u304f\uff0e\n\n```cpp\n//\u5165\u529b.\nconst int PUSH_BTN      = 12; //\u30c7\u30b8\u30bf\u30eb.\nconst int LIGHT_SENSOR  = 0;  //\u30a2\u30ca\u30ed\u30b0.\n\n//\u51fa\u529b.\u30a2\u30ca\u30ed\u30b0.\nconst int LED_1 = 11;\nconst int LED_2 = 10;\nconst int LED_3 = 9;\n\n//ONOFF\u72b6\u614b.\nstatic bool g_bOnOff = false;\n\n//RGB\u60c5\u5831.\nstruct RGB\n{\n   float r;\n   float g;\n   float b;\n};\n\nvoid setup() \n{\n  Serial.begin( 9600 );\n  pinMode( PUSH_BTN, INPUT );\n}\n\nvoid loop() \n{\n  //\u30b9\u30a4\u30c3\u30c1\u5165\u529b\u78ba\u8a8d.\n  if( GetTrigger() ){\n    g_bOnOff ^= true;\n    delay( 50 );\n  }\n\n  //\u8272\u60c5\u5831\u53d6\u5f97.\n  RGB color = GetColor();\n  \n  if( !g_bOnOff ){\n    //OFF\u72b6\u614b\u306a\u3089\u8272\u60c5\u5831\u3092\u6d88\u3059.  \n    color.r = color.g = color.b = 0.0f;\n  }\n\n  //\u66f8\u304d\u8fbc\u307f.\n  analogWrite( LED_1, color.r );\n  analogWrite( LED_2, color.g );\n  analogWrite( LED_3, color.b );\n\n  //\u5149\u30bb\u30f3\u30b5\u30fc\u3067\u53d6\u5f97\u3057\u305f\u660e\u308b\u3055\u3092\u9001\u308a\u8fd4\u3059.\n  Serial.println( (float)analogRead( LIGHT_SENSOR ) / 1024.0f * 255.0f );\n}\n\nbool GetTrigger()\n{\n  static bool prev = false;\n  static bool now = false;\n  prev  = now;\n  now   = ( digitalRead( PUSH_BTN ) == HIGH );\n  return ( !prev && now );\n}\n\nRGB GetColor()\n{\n  static RGB tmpRGB;\n\n  //\u4e00\u756a\u6700\u521d\u3060\u3051\u521d\u671f\u5316\u3059\u308b.\n  static bool bInit = false;\n  if( !bInit ){\n    tmpRGB.r = 0.0f;\n    tmpRGB.g = 0.0f;\n    tmpRGB.b = 0.0f;\n    bInit = true;\n  }\n\n  //\u901a\u4fe1\u304c\u3042\u308c\u3070\u60c5\u5831\u3092\u66f4\u65b0.\n  if( Serial.available() > 0 ){\n    char c = Serial.read();\n    if( c == '#' ){\n      tmpRGB.r = ConvertF2D( Serial.read() ) * 16.0f + ConvertF2D( Serial.read() );\n      tmpRGB.g = ConvertF2D( Serial.read() ) * 16.0f + ConvertF2D( Serial.read() );\n      tmpRGB.b = ConvertF2D( Serial.read() ) * 16.0f + ConvertF2D( Serial.read() );\n    }\n  }\n\n  return tmpRGB;\n}\n\nfloat ConvertF2D( char c )\n{\n  float tmp = 0.0f;\n  \n  if( '0' <= c && c <= '9' ){\n    tmp = ( float )( c - '0' );\n  }\n  else if( 'A' <= c && c <= 'F' ){\n    tmp = ( float )( ( c - 'A' ) + 10.0f );\n  }\n  else{\n    Serial.print( c );\n    Serial.println( \"is not compatible\" );\n  }\n\n  return tmp;\n}\n\n```\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308c\u3070\uff0cLED\u304c\u5f90\u3005\u306b\u660e\u308b\u304f\u306a\u3063\u3066\u3044\u304f\u56de\u8def\u304c\u52d5\u304f\u306f\u305a\uff0e\n(\u56de\u8def\u81ea\u4f53\u306f\uff0c[Arduino\u3092\u306f\u3058\u3081\u3088\u3046 \u7b2c3\u7248 (Make:PROJECTS)](https://www.amazon.co.jp/Arduino-3-Make-Massimo-Banzi/dp/487311733X/ref=dp_ob_title_bk)\u306e7\u7ae0\u306e\u3082\u306e\u3092\u4f5c\u308c\u3070\u52d5\u304f\uff0e)\n(\u5149\u30bb\u30f3\u30b5\u306f\u30c1\u30a7\u30c3\u30af\u7528\uff0e\u4e0a\u8a18\u30b3\u30fc\u30c9\u3067\u306f\u4f55\u306e\u5f79\u306b\u3082\u7acb\u3063\u3066\u3044\u306a\u3044\uff0e)\n\n\n##\u6ce8\u610f\n\u7406\u7531\u306f\u8abf\u67fb\u4e2d\u3060\u304c\uff0c`Rust`\u5074\u304b\u3089\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u3068\uff0c\n\u4e00\u5b9a\u6642\u9593\u7d4c\u3063\u305f\u3042\u3068\u306b\u30c7\u30fc\u30bf\u304c\u9001\u4fe1\u3067\u304d\u306a\u304f\u306a\u308b\uff0c\u3068\u3044\u3046\u30d0\u30b0\u304c\u3042\u308b\uff0e\n`Arduino`\u5074\u306e\u51e6\u7406\u304c\u9593\u306b\u5408\u3063\u3066\u3044\u306a\u3044\u3068\u304b\u306a\u3093\u3060\u308d\u3046\u304b\uff1f\n\u3082\u3084\u3082\u3084\u3059\u308b\u2026\n", "tags": ["Arduino", "rust", "hardware", "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"]}