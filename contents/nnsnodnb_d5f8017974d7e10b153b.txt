{"context": "\n\n\u306f\u3058\u3081\u306b\n\u4eca\u56de\u306e\u6697\u53f7\u6280\u8853\u306b\u3064\u3044\u3066\u306f\u79c1\u306e\u52c9\u5f37\u3068\u3044\u3046\u4e00\u8cab\u3068\u3044\u3046\u3082\u306e\u3082\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u9593\u9055\u3044\u3001\u3053\u3046\u3059\u308c\u3070\u3082\u3063\u3068\u3088\u304f\u306a\u308b\u7b49\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u7b49\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\n\n\u74b0\u5883\n\nXcode8.2.1\nmacOS Sierra\niOS10 (on Simulator)\nSwift3\nCocoaPods 1.1.1\nPython3.6\n\n\n\u6697\u53f7\u5316\n\u4eca\u56de\u306fAES\u3092\u4f7f\u3063\u305f\u6697\u53f7\u5316\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u3044\u304f\u3089HTTPS\u901a\u4fe1\u3067\u3042\u308cMITM\u5bfe\u7b56\u6307\u5b9a\u306a\u3044\u9650\u308a\u30d1\u30b9\u30ef\u30fc\u30c9\u306a\u3069\u306e\u9001\u53d7\u4fe1\u306f\u5e73\u6587\u3067\u898b\u3048\u3061\u3083\u3044\u307e\u3059\u304b\u3089\u306d\u3002\u305b\u3081\u3066\u6697\u53f7\u5316\u3057\u307e\u3057\u3087\u3046\u3002\n\u5b9f\u88c5\u306fiOS\u5074\u3067\u3057\u307e\u3059\u3002\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\n\nCryptoSwift 0.6.7\n\n\u9069\u5f53\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ pod init\n\n\nPodfile\npod 'CryptoSwift', '~> 0.6'\n\n\n$ pod install\n\n\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\nHoge.swift\nimport Foundation\nimport CryptoSwift  // \u3053\u3053\u3092\u66f8\u3044\u305f\u6642\u70b9\u3067\u300c\u2318+B\u300d\u3057\u3066\u304a\u304f\u3079\u304d\u304b\u3082\n\nclass Hoge: NSObject {\n    func hoge(_ text: String) {\n        let bytes = [UInt8](text.utf8)\n        // AES\u306e\u9375\u65b9\u5f0f\u306b\u5408\u308f\u305b\u3066\u5404\u81ea\u5909\u66f4\n        let key = [UInt8](\"12345678901234567890123456789012\".utf8)\n        let iv: [UInt8] = AES.randomIV(AES.blockSize)\n\n        do {\n            let aes = try AES(key: key, iv: iv, blockMode: .CBC)\n            let encrypted = try aes.encrypt(bytes)\n            let encryptedData = Data(bytes: encrypted, count: encrypted.count)\n            let sendData = NSMutableData(bytes: iv, length: iv.count)\n            sendData.append(encryptedData)\n            let sendDataBase64 = sendData.base64EncodedString(options: .lineLength64Characters)\n            print(\"Encrypt: \\(sendDataBase64)\")\n            // Encrypt: rLKCA1hNmqu2dq+08E9mK2lBlspQN0+CYBkWkCQz7IvHhh+qbfysc26Oh1SS4Adq\n        } catch let error {\n            print(\"Error: \\(error)\")\n        }\n    }\n}\n\n\n\u3068\u3044\u3046\u3088\u3046\u306a\u611f\u3058\u3067\u6697\u53f7\u5316\u306f\u4e00\u5fdc\u3067\u304d\u305f\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u4f7f\u3046\u6587\u5b57\u5217\u306f\u300c Lorem ipsum dolor sit amet \u300d\u3067\u3059\u3002\n\u3042\u3068\u306fAlamofire\u3067\u30b5\u30fc\u30d0\u306b\u98db\u3070\u3059\u306a\u308a\u306a\u3093\u306a\u308a\u3059\u308b\u3002\u5272\u611b\u3057\u307e\u3059\u3002\n\n\u5fa9\u53f7\n\u57fa\u672c\u7684\u306b\u6697\u53f7\u5316\u304c\u5fc5\u8981\u305d\u3046\u306a\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u4f5c\u308b\u6642\u306f\u79c1\u306fDjango\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001Django\u7279\u6709\u306e\u3068\u3053\u308d\u306f\u89e6\u3089\u306a\u3044\u306e\u3067\u60aa\u3057\u304b\u3089\u305a...\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\n\nSimple-AES-Cipher 1.0.0\n\n\u3068\u3066\u3082\u7c21\u5358\u306b\u6697\u53f7\u5316\u53ca\u3073\u5fa9\u53f7\u51e6\u7406\u304c\u66f8\u3051\u308b\u306e\u3067\u304a\u3059\u3059\u3081\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\ndecrypt.py\nfrom simple_aes_cipher import AESCipher\n\n\nencrypt = 'rLKCA1hNmqu2dq+08E9mK2lBlspQN0+CYBkWkCQz7IvHhh+qbfysc26Oh1SS4Adq'\ncipher = AESCipher('12345678901234567890123456789012')\nplain_text = cipher.decrypt(encrypt)\n\nprint(plain_text)  # Lorem ipsum dolor sit amet\n\n\n\u7121\u4e8b\u5fa9\u53f7\u3067\u304d\u305f\u3088\u3046\u3067\u3059\n\n\u6700\u5f8c\u306b\n\u3053\u3046\u3057\u305f\u3089\u3044\u3044\u305e\u3049\u301c\u3068\u304b\u3042\u308c\u3070\u30c9\u30b7\u30c9\u30b7\u30b3\u30e1\u30f3\u30c8\u3084\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\uff01\n\n## \u306f\u3058\u3081\u306b\n\n\u4eca\u56de\u306e\u6697\u53f7\u6280\u8853\u306b\u3064\u3044\u3066\u306f\u79c1\u306e\u52c9\u5f37\u3068\u3044\u3046\u4e00\u8cab\u3068\u3044\u3046\u3082\u306e\u3082\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u9593\u9055\u3044\u3001\u3053\u3046\u3059\u308c\u3070\u3082\u3063\u3068\u3088\u304f\u306a\u308b\u7b49\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u7b49\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059:bow:\n\n## \u74b0\u5883\n\n- Xcode8.2.1\n- macOS Sierra\n- iOS10 (on Simulator)\n- Swift3\n- CocoaPods 1.1.1\n- Python3.6\n\n## \u6697\u53f7\u5316\n\n\u4eca\u56de\u306fAES\u3092\u4f7f\u3063\u305f\u6697\u53f7\u5316\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u3044\u304f\u3089HTTPS\u901a\u4fe1\u3067\u3042\u308cMITM\u5bfe\u7b56\u6307\u5b9a\u306a\u3044\u9650\u308a\u30d1\u30b9\u30ef\u30fc\u30c9\u306a\u3069\u306e\u9001\u53d7\u4fe1\u306f\u5e73\u6587\u3067\u898b\u3048\u3061\u3083\u3044\u307e\u3059\u304b\u3089\u306d\u3002\u305b\u3081\u3066\u6697\u53f7\u5316\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u5b9f\u88c5\u306fiOS\u5074\u3067\u3057\u307e\u3059\u3002\n\n### \u30e9\u30a4\u30d6\u30e9\u30ea\n\n- CryptoSwift 0.6.7\n\n\u9069\u5f53\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash:\n$ pod init\n```\n\n```ruby:Podfile\npod 'CryptoSwift', '~> 0.6'\n```\n\n```bash:\n$ pod install\n```\n\n### \u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\n```swift:Hoge.swift\nimport Foundation\nimport CryptoSwift  // \u3053\u3053\u3092\u66f8\u3044\u305f\u6642\u70b9\u3067\u300c\u2318+B\u300d\u3057\u3066\u304a\u304f\u3079\u304d\u304b\u3082\n\nclass Hoge: NSObject {\n    func hoge(_ text: String) {\n        let bytes = [UInt8](text.utf8)\n        // AES\u306e\u9375\u65b9\u5f0f\u306b\u5408\u308f\u305b\u3066\u5404\u81ea\u5909\u66f4\n        let key = [UInt8](\"12345678901234567890123456789012\".utf8)\n        let iv: [UInt8] = AES.randomIV(AES.blockSize)\n\n        do {\n            let aes = try AES(key: key, iv: iv, blockMode: .CBC)\n            let encrypted = try aes.encrypt(bytes)\n            let encryptedData = Data(bytes: encrypted, count: encrypted.count)\n            let sendData = NSMutableData(bytes: iv, length: iv.count)\n            sendData.append(encryptedData)\n            let sendDataBase64 = sendData.base64EncodedString(options: .lineLength64Characters)\n            print(\"Encrypt: \\(sendDataBase64)\")\n            // Encrypt: rLKCA1hNmqu2dq+08E9mK2lBlspQN0+CYBkWkCQz7IvHhh+qbfysc26Oh1SS4Adq\n        } catch let error {\n            print(\"Error: \\(error)\")\n        }\n    }\n}\n```\n\n\u3068\u3044\u3046\u3088\u3046\u306a\u611f\u3058\u3067\u6697\u53f7\u5316\u306f\u4e00\u5fdc\u3067\u304d\u305f\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u4f7f\u3046\u6587\u5b57\u5217\u306f\u300c __Lorem ipsum dolor sit amet__ \u300d\u3067\u3059\u3002\n\u3042\u3068\u306fAlamofire\u3067\u30b5\u30fc\u30d0\u306b\u98db\u3070\u3059\u306a\u308a\u306a\u3093\u306a\u308a\u3059\u308b\u3002\u5272\u611b\u3057\u307e\u3059\u3002\n\n## \u5fa9\u53f7\n\n\u57fa\u672c\u7684\u306b\u6697\u53f7\u5316\u304c\u5fc5\u8981\u305d\u3046\u306a\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u4f5c\u308b\u6642\u306f\u79c1\u306fDjango\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001Django\u7279\u6709\u306e\u3068\u3053\u308d\u306f\u89e6\u3089\u306a\u3044\u306e\u3067\u60aa\u3057\u304b\u3089\u305a...\n\n### \u30e9\u30a4\u30d6\u30e9\u30ea\n\n- Simple-AES-Cipher 1.0.0\n\n\u3068\u3066\u3082\u7c21\u5358\u306b\u6697\u53f7\u5316\u53ca\u3073\u5fa9\u53f7\u51e6\u7406\u304c\u66f8\u3051\u308b\u306e\u3067\u304a\u3059\u3059\u3081\u3067\u3059\u3002\n\n### \u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\n\n```python:decrypt.py\nfrom simple_aes_cipher import AESCipher\n\n\nencrypt = 'rLKCA1hNmqu2dq+08E9mK2lBlspQN0+CYBkWkCQz7IvHhh+qbfysc26Oh1SS4Adq'\ncipher = AESCipher('12345678901234567890123456789012')\nplain_text = cipher.decrypt(encrypt)\n\nprint(plain_text)  # Lorem ipsum dolor sit amet\n```\n\n\u7121\u4e8b\u5fa9\u53f7\u3067\u304d\u305f\u3088\u3046\u3067\u3059:clap::clap::clap:\n\n## \u6700\u5f8c\u306b\n\n\u3053\u3046\u3057\u305f\u3089\u3044\u3044\u305e\u3049\u301c\u3068\u304b\u3042\u308c\u3070\u30c9\u30b7\u30c9\u30b7\u30b3\u30e1\u30f3\u30c8\u3084\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u3044\u305f\u3060\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\uff01\n", "tags": ["iOS", "Python", "\u6697\u53f7"]}