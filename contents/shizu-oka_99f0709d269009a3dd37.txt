{"context": "Rust\u3067Webassembly\u304c\u51fa\u6765\u308b\u3068\u30cf\u30c3\u30d4\u30fc\u3060\u306a\u30fc\u3068\u601d\u3044\u3001mir2wasm \u3092\u4f7f\u3063\u3066\u3001\n\u73fe\u6642\u70b9\u3067\u306eRust+Webassembly\u3092\u8abf\u67fb\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u74b0\u5883\n\nOSX Yosemite\nChrome \u30d0\u30fc\u30b8\u30e7\u30f353.0.2785.101\n\n\n\u7528\u610f\u3059\u308b\u3082\u306e\n\nrustup\uff08nightly\u304c\u5fc5\u8981\uff09\nWebassembly\u3092\u6709\u52b9\u306b\u3057\u3066\u3044\u308bChrome\nmir2wasm\uff08Rust\u304b\u3089wast\u3092\u3064\u304f\u308b\u3084\u3064\uff09\nsexpr-wasm\uff08wast\u304b\u3089wasm\u306b\u5909\u3048\u308b\u3084\u3064\uff09\nHTTP\u30b5\u30fc\u30d0\u30fc\uff08python2 -m SimpleHTTPServer\u306a\u3069\u306a\u3069\uff09\n\n\n\u958b\u767a\u6e96\u5099\nmir2wasm\ngit clone https://github.com/brson/mir2wasm.git\ncd mir2wasm\nrustup override set nightly-2016-06-04\ncargo build\n\nsexpr-wasm\ngit clone https://github.com/WebAssembly/sexpr-wasm-prototype\ncd sexpr-wasm-prototype\ngit submodule update --init\nmake\n\n\u9069\u5f53\u306bMakefile\nWASM_DIR := $(CURDIR)/wasm\nMIR2WASM_DIR := $(CURDIR)/mir2wasm\nSEXPR_WASM_DIR := $(CURDIR)/sexpr-wasm-prototype/out\n\nWAST := main.wast\nWASM := main.wasm\n\n# mir2wasm\u306b\u3064\u3044\u3066\u3044\u308bexample\u3092\u5229\u7528\u3002\nRS := $(MIR2WASM_DIR)/rust-examples/fibonacci.rs\n\n$(WASM_DIR)/$(WASM): $(WASM_DIR) $(WASM_DIR)/$(WAST)\n    $(SEXPR_WASM_DIR)/sexpr-wasm $(WASM_DIR)/$(WAST) -o $(@)\n\n$(WASM_DIR)/$(WAST): $(WASM_DIR)\n    cd $(MIR2WASM_DIR) && \\\n    cargo run -q -- $(RS) > $(@)\n\n$(WASM_DIR):\n    mkdir -p $(@)\n\n\u69cb\u6210\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n.\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 mir2wasm\n\u2514\u2500\u2500 sexpr-wasm-prototype\n\n\u30d6\u30e9\u30a6\u30b6\u3067\u78ba\u8a8d\nmake\u3059\u308b\u3068Rust\u306e\u30b3\u30fc\u30c9\u304cwasm\u306b\u306a\u308b\u306e\u3067\u3001\u305d\u308c\u3092JS\u3067\u8aad\u307f\u8fbc\u307f\u307e\u3057\u3087\u3046\u3002\n\uff08\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u3060\u3068\u5b9f\u884c\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u306b\u3057\u307e\u3057\u3087\u3046\uff09\n<!doctype html>\n<html>\n  <head><title>WebAssembly</title></head>\n  <body>\n    <script>\nfetch(\"/wasm/main.wasm\")\n.then(res => res.arrayBuffer())\n.then(buffer => {\n  let ffi = {\n    spectest : {\n      print: function(ptr) {\n        console.log(ptr);\n      },\n    }\n  };\n  let module = Wasm.instantiateModule(new Uint8Array(buffer), ffi);\n  console.log(module.exports.fibonacci_recursive(10))\n});\n    </script>\n  </body>\n</html>\n\n\u3067\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u78ba\u8a8d\u3059\u308b\u3068\u3001\n\nWasmModule::CompileFunctions(): Compiling WASM function #4:<?> failed:Result = arity mismatch in return @+42\n\n\u307f\u305f\u3044\u306a\u30a8\u30e9\u30fc\u304c\u3067\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nwast\u3092\u4fee\u6b63\u3057\u3066\u3001wasm\u3092\u518d\u4f5c\u6210\n\u3067\u3069\u3046\u3057\u305f\u3089\u3044\u3044\u304b\u3068\u3044\u3046\u3068\u3001mir2wasm\u3067\u5410\u304d\u51fa\u3055\u308c\u3066\u3044\u308bwast\uff08S\u5f0f\u307f\u305f\u3044\u306a\u3084\u3064\uff09\u3092\n\u76f4\u63a5\u4fee\u6b63\u3057\u3066\u3001\u3082\u3046\u4e00\u5ea6wasm\u306b\u3057\u3066\u3042\u3052\u307e\u3057\u3087\u3046\u3002\nfibonacci.rs\u304cwast\u3060\u3068\u3001\u2193\u306e\u95a2\u6570\u306e\u5f0f\u306e\n\n$i32_as_AddAssign::add_assign\n$wasm::print_i32\n$main\n\n- (return\n-   (get_local $<\u6570\u5024>)\n- )\n\n\u8fd4\u308a\u5024\u304c\u306a\u3044\u306e\u306b\u3001\u5024\u3092\u8fd4\u3057\u3066\u3044\u308b\u3063\u307d\u3044\u3068\u3053\u308d\u3092\u524a\u9664\u3059\u308b\u3002(mir2wasm\u306e\u30d0\u30b0\uff1f\uff09\n\u518d\u5ea6sexpr-wasm\u3067wast\u304b\u3089wasm\u3092\u4f5c\u3063\u3066\u3001\u30a8\u30e9\u30fc\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u5927\u4e08\u592b\u3067\u3059\u3002\n\n\u307e\u3068\u3081\n\u9811\u5f35\u308c\u3070mir2wasm\u3092\u5229\u7528\u3057\u3066Rust\u304b\u3089Webassembly\u306e\u30d0\u30a4\u30ca\u30ea\u304c\u3064\u304f\u308c\u307e\u3059\u3002\n\u307e\u3060\u5b8c\u5168\u3058\u3083\u306a\u3044\u3051\u3069\u3001\u306a\u3093\u3068\u306a\u304f\u96f0\u56f2\u6c17\u306f\u63b4\u3081\u305f\u3068\u304a\u3082\u3044\u307e\u3059\u3002\n\u5c06\u6765\u3001Rust\u3067Webassembly\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308c\u3070\u3044\u3044\u3067\u3059\u306d\u3002\nRust\u3067Webassembly\u304c\u51fa\u6765\u308b\u3068\u30cf\u30c3\u30d4\u30fc\u3060\u306a\u30fc\u3068\u601d\u3044\u3001[mir2wasm](https://github.com/brson/mir2wasm/) \u3092\u4f7f\u3063\u3066\u3001\n**\u73fe\u6642\u70b9**\u3067\u306eRust+Webassembly\u3092\u8abf\u67fb\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u74b0\u5883\n\n1. OSX Yosemite\n2. Chrome \u30d0\u30fc\u30b8\u30e7\u30f353.0.2785.101\n\n## \u7528\u610f\u3059\u308b\u3082\u306e\n\n1. rustup\uff08nightly\u304c\u5fc5\u8981\uff09\n2. Webassembly\u3092\u6709\u52b9\u306b\u3057\u3066\u3044\u308bChrome\n3. mir2wasm\uff08Rust\u304b\u3089wast\u3092\u3064\u304f\u308b\u3084\u3064\uff09\n4. sexpr-wasm\uff08wast\u304b\u3089wasm\u306b\u5909\u3048\u308b\u3084\u3064\uff09\n5. HTTP\u30b5\u30fc\u30d0\u30fc\uff08python2 -m SimpleHTTPServer\u306a\u3069\u306a\u3069\uff09\n\n## \u958b\u767a\u6e96\u5099\n\nmir2wasm\n\n```\ngit clone https://github.com/brson/mir2wasm.git\ncd mir2wasm\nrustup override set nightly-2016-06-04\ncargo build\n```\n\nsexpr-wasm\n\n```\ngit clone https://github.com/WebAssembly/sexpr-wasm-prototype\ncd sexpr-wasm-prototype\ngit submodule update --init\nmake\n```\n\n\u9069\u5f53\u306bMakefile\n\n```Makefile\nWASM_DIR := $(CURDIR)/wasm\nMIR2WASM_DIR := $(CURDIR)/mir2wasm\nSEXPR_WASM_DIR := $(CURDIR)/sexpr-wasm-prototype/out\n\nWAST := main.wast\nWASM := main.wasm\n\n# mir2wasm\u306b\u3064\u3044\u3066\u3044\u308bexample\u3092\u5229\u7528\u3002\nRS := $(MIR2WASM_DIR)/rust-examples/fibonacci.rs\n\n$(WASM_DIR)/$(WASM): $(WASM_DIR) $(WASM_DIR)/$(WAST)\n\t$(SEXPR_WASM_DIR)/sexpr-wasm $(WASM_DIR)/$(WAST) -o $(@)\n\n$(WASM_DIR)/$(WAST): $(WASM_DIR)\n\tcd $(MIR2WASM_DIR) && \\\n\tcargo run -q -- $(RS) > $(@)\n\n$(WASM_DIR):\n\tmkdir -p $(@)\n```\n\n\u69cb\u6210\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n.\n\u251c\u2500\u2500 Makefile\n\u251c\u2500\u2500 mir2wasm\n\u2514\u2500\u2500 sexpr-wasm-prototype\n\n## \u30d6\u30e9\u30a6\u30b6\u3067\u78ba\u8a8d\n\nmake\u3059\u308b\u3068Rust\u306e\u30b3\u30fc\u30c9\u304cwasm\u306b\u306a\u308b\u306e\u3067\u3001\u305d\u308c\u3092JS\u3067\u8aad\u307f\u8fbc\u307f\u307e\u3057\u3087\u3046\u3002\n\uff08\u30ed\u30fc\u30ab\u30eb\u30d5\u30a1\u30a4\u30eb\u3060\u3068\u5b9f\u884c\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u306b\u3057\u307e\u3057\u3087\u3046\uff09\n\n```html\n<!doctype html>\n<html>\n  <head><title>WebAssembly</title></head>\n  <body>\n    <script>\nfetch(\"/wasm/main.wasm\")\n.then(res => res.arrayBuffer())\n.then(buffer => {\n  let ffi = {\n    spectest : {\n      print: function(ptr) {\n        console.log(ptr);\n      },\n    }\n  };\n  let module = Wasm.instantiateModule(new Uint8Array(buffer), ffi);\n  console.log(module.exports.fibonacci_recursive(10))\n});\n    </script>\n  </body>\n</html>\n```\n\n\u3067\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u78ba\u8a8d\u3059\u308b\u3068\u3001\n\n> WasmModule::CompileFunctions(): Compiling WASM function #4:<?> failed:Result = arity mismatch in return @+42\n\n\u307f\u305f\u3044\u306a\u30a8\u30e9\u30fc\u304c\u3067\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## wast\u3092\u4fee\u6b63\u3057\u3066\u3001wasm\u3092\u518d\u4f5c\u6210\n\n\u3067\u3069\u3046\u3057\u305f\u3089\u3044\u3044\u304b\u3068\u3044\u3046\u3068\u3001mir2wasm\u3067\u5410\u304d\u51fa\u3055\u308c\u3066\u3044\u308bwast\uff08S\u5f0f\u307f\u305f\u3044\u306a\u3084\u3064\uff09\u3092\n\u76f4\u63a5\u4fee\u6b63\u3057\u3066\u3001\u3082\u3046\u4e00\u5ea6wasm\u306b\u3057\u3066\u3042\u3052\u307e\u3057\u3087\u3046\u3002\n\nfibonacci.rs\u304cwast\u3060\u3068\u3001\u2193\u306e\u95a2\u6570\u306e\u5f0f\u306e\n\n- $_i32_as_AddAssign_::add_assign\n- $wasm::print_i32\n- $main\n\n```\n- (return\n-   (get_local $<\u6570\u5024>)\n- )\n```\n\n\u8fd4\u308a\u5024\u304c\u306a\u3044\u306e\u306b\u3001\u5024\u3092\u8fd4\u3057\u3066\u3044\u308b\u3063\u307d\u3044\u3068\u3053\u308d\u3092\u524a\u9664\u3059\u308b\u3002(mir2wasm\u306e\u30d0\u30b0\uff1f\uff09\n\u518d\u5ea6sexpr-wasm\u3067wast\u304b\u3089wasm\u3092\u4f5c\u3063\u3066\u3001\u30a8\u30e9\u30fc\u304c\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u5927\u4e08\u592b\u3067\u3059\u3002\n\n# \u307e\u3068\u3081\n\n\u9811\u5f35\u308c\u3070mir2wasm\u3092\u5229\u7528\u3057\u3066Rust\u304b\u3089Webassembly\u306e\u30d0\u30a4\u30ca\u30ea\u304c\u3064\u304f\u308c\u307e\u3059\u3002\n\u307e\u3060\u5b8c\u5168\u3058\u3083\u306a\u3044\u3051\u3069\u3001\u306a\u3093\u3068\u306a\u304f\u96f0\u56f2\u6c17\u306f\u63b4\u3081\u305f\u3068\u304a\u3082\u3044\u307e\u3059\u3002\n\n\u5c06\u6765\u3001Rust\u3067Webassembly\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308c\u3070\u3044\u3044\u3067\u3059\u306d\u3002\n", "tags": ["rust", "JavaScript", "WebAssembly"]}