{"tags": ["gitlab-api", "GitLab", "Ruby"], "context": " More than 1 year has passed since last update.\n\nGitLab API | gitlab gem \u3067 Issue \u3092\u5225\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30b3\u30d4\u30fc\u3059\u308b\n\n\u6982\u8981\ngitlab gem \u3067 Issue \u3092\u5225\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\nrequire 'gitlab'\n\nGitlab.configure do |config|\n  config.endpoint       = 'http://some_path/api/v3' \n  config.private_token  = 'your token'\nend\n\ndef find_project_id_from_project_name(name)\n  Gitlab.projects(per_page: 100).select { |e|e.name == name }.first.id\nend\n\ndef copy_issues(from_project_id, to_project_id)\n  Gitlab.issues(from_project_id, per_page: 100).each do |issue|\n    assignee_id = issue.assignee ? issue.assignee.id : nil\n    milestone_id  = issue.milestone_id  ? issue.milestone_id.id : nil\n    Gitlab.create_issue(to_project_id, issue.title,\n      description: issue.description,\n      assignee_id: assignee_id,\n      milestone_id: milestone_id,\n      labels: issue.labels)\n\n    # close\u3055\u308c\u305fIssue\u306e\u5834\u5408\u306f\u30b9\u30c6\u30fc\u30bf\u30b9\u3092closed\u306b\u5909\u66f4\u3059\u308b\n    to_issue = Gitlab.issues(to_project_id, per_page: 100).select { |e|e.title == issue.title }.first\n    if to_issue && issue.state == 'closed'\n      Gitlab.edit_issue(to_project_id, to_issue.id, state_event: 'close')\n    end\n  end\nend\n\nfrom_project_id = find_project_id_from_project_name('from_project')\nto_project_id = find_project_id_from_project_name('to_project')\ncopy_issues(from_project_id, to_project_id)\n\n\n\u53c2\u7167\n\nGitLab gem RubyGems\nhttps://rubygems.org/gems/gitlab\nGitLab gem GitHub\nhttps://github.com/NARKOZ/gitlab\n\n# GitLab API | gitlab gem \u3067 Issue \u3092\u5225\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30b3\u30d4\u30fc\u3059\u308b\n## \u6982\u8981\ngitlab gem \u3067 Issue \u3092\u5225\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\n\n~~~ruby\nrequire 'gitlab'\n\nGitlab.configure do |config|\n  config.endpoint       = 'http://some_path/api/v3' \n  config.private_token  = 'your token'\nend\n\ndef find_project_id_from_project_name(name)\n  Gitlab.projects(per_page: 100).select { |e|e.name == name }.first.id\nend\n\ndef copy_issues(from_project_id, to_project_id)\n  Gitlab.issues(from_project_id, per_page: 100).each do |issue|\n    assignee_id = issue.assignee ? issue.assignee.id : nil\n    milestone_id  = issue.milestone_id  ? issue.milestone_id.id : nil\n    Gitlab.create_issue(to_project_id, issue.title,\n      description: issue.description,\n      assignee_id: assignee_id,\n      milestone_id: milestone_id,\n      labels: issue.labels)\n\n    # close\u3055\u308c\u305fIssue\u306e\u5834\u5408\u306f\u30b9\u30c6\u30fc\u30bf\u30b9\u3092closed\u306b\u5909\u66f4\u3059\u308b\n    to_issue = Gitlab.issues(to_project_id, per_page: 100).select { |e|e.title == issue.title }.first\n    if to_issue && issue.state == 'closed'\n      Gitlab.edit_issue(to_project_id, to_issue.id, state_event: 'close')\n    end\n  end\nend\n\nfrom_project_id = find_project_id_from_project_name('from_project')\nto_project_id = find_project_id_from_project_name('to_project')\ncopy_issues(from_project_id, to_project_id)\n~~~\n\n## \u53c2\u7167\n* GitLab gem RubyGems\nhttps://rubygems.org/gems/gitlab\n\n* GitLab gem GitHub\nhttps://github.com/NARKOZ/gitlab\n"}