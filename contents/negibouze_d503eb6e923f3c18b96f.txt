{"tags": ["Swift", "XCode7"], "context": " More than 1 year has passed since last update.\n\n\u4eca\u56de\u306e\u6210\u679c\u7269\n\u3053\u3061\u3089\u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\nnegibouze/SimpleLoadingSample\n\n1. LoadingView.xib\u3092\u4f5c\u6210\u3059\u308b\n\n1. \u80cc\u666f\u3092\u8a2d\u5b9a\u3059\u308b\nalpha\u3067\u900f\u904e\u3055\u305b\u308b\u3068subview\u3082\u4e00\u7dd2\u306b\u900f\u904e\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001opacity\u3067\u900f\u904e\u3055\u305b\u308b\u3002\n\n\n2. Activity Indicator\u3092\u914d\u7f6e\u3059\u308b\n\u4e2d\u5fc3\u306b\u6765\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n\n2. LoadingView.swift\u3092\u4f5c\u6210\u3059\u308b\n\nLoadingView\nclass LoadingView: UIView {\n\n    @IBOutlet var contentView: UIView!\n    @IBOutlet weak var indicator: UIActivityIndicatorView!\n\n\n\n3. .xib\u3068.swift\u3092\u7d10\u3065\u3051\u308b\n\n1. File's Owner\u306bLoadingView.swift\u3092\u8a2d\u5b9a\u3059\u308b\n\n\n2. \u5404\u8981\u7d20\u3092\u7d10\u3065\u3051\u308b\n\n\n4. LoadingView\u3092\u5b9f\u88c5\u3059\u308b\n\nLoadingView\uff08\u629c\u7c8b\uff09\nclass LoadingView: UIView {\n\n    private static let sharedInstance = LoadingView()\n    private var isShow = false\n\n    private override init(frame: CGRect) {\n        super.init(frame: (UIApplication.sharedApplication().delegate?.window??.bounds)!)\n        self.setup()\n    }\n\n    class func show(duration: Double = 0.5) {\n        if sharedInstance.isShow {\n            return\n        }\n        guard let win = UIApplication.sharedApplication().delegate?.window, let window = win else {\n            return\n        }\n        sharedInstance.isShow = true\n        sharedInstance.indicator.startAnimating()\n        window.addSubview(sharedInstance)\n        UIView.animateWithDuration(duration,\n            animations: {\n                sharedInstance.alpha = 1.0\n            },\n            completion: nil\n        )\n    }\n\n    class func hide(duration: Double = 0.5) {\n        if !sharedInstance.isShow {\n            return\n        }\n        UIView.animateWithDuration(duration,\n            animations: {\n                sharedInstance.alpha = 0\n            },\n            completion: { b in\n                sharedInstance.removeFromSuperview()\n                sharedInstance.indicator.stopAnimating()\n                sharedInstance.isShow = false\n            }\n        )\n    }\n\n\n##\u4eca\u56de\u306e\u6210\u679c\u7269\n\u3053\u3061\u3089\u306b\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\n[negibouze/SimpleLoadingSample](https://github.com/negibouze/SimpleLoadingSample)\n\n##1. LoadingView.xib\u3092\u4f5c\u6210\u3059\u308b\n\n####1. \u80cc\u666f\u3092\u8a2d\u5b9a\u3059\u308b  \nalpha\u3067\u900f\u904e\u3055\u305b\u308b\u3068subview\u3082\u4e00\u7dd2\u306b\u900f\u904e\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001opacity\u3067\u900f\u904e\u3055\u305b\u308b\u3002\n![1-1.png](https://qiita-image-store.s3.amazonaws.com/0/37319/c99a1593-73f3-13c5-1ff3-7ef2e4061f88.png)\n\n####2. Activity Indicator\u3092\u914d\u7f6e\u3059\u308b  \n\u4e2d\u5fc3\u306b\u6765\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n![1-2.png](https://qiita-image-store.s3.amazonaws.com/0/37319/4082470e-d5a3-93b3-aeb4-39d5195650a0.png)\n\n##2. LoadingView.swift\u3092\u4f5c\u6210\u3059\u308b\n```swift:LoadingView\nclass LoadingView: UIView {\n    \n    @IBOutlet var contentView: UIView!\n    @IBOutlet weak var indicator: UIActivityIndicatorView!\n```\n\n##3. .xib\u3068.swift\u3092\u7d10\u3065\u3051\u308b\n####1. File's Owner\u306bLoadingView.swift\u3092\u8a2d\u5b9a\u3059\u308b  \n![3-1.png](https://qiita-image-store.s3.amazonaws.com/0/37319/bab98d08-4996-99c4-1a0d-6a9038d939de.png)\n\n####2. \u5404\u8981\u7d20\u3092\u7d10\u3065\u3051\u308b\n![3-2.png](https://qiita-image-store.s3.amazonaws.com/0/37319/1f0a6eaf-41b7-7894-a8d4-6d976be420d8.png)\n\n##4. LoadingView\u3092\u5b9f\u88c5\u3059\u308b\n```swift:LoadingView\uff08\u629c\u7c8b\uff09\nclass LoadingView: UIView {\n\n    private static let sharedInstance = LoadingView()\n    private var isShow = false\n    \n    private override init(frame: CGRect) {\n        super.init(frame: (UIApplication.sharedApplication().delegate?.window??.bounds)!)\n        self.setup()\n    }\n\n    class func show(duration: Double = 0.5) {\n        if sharedInstance.isShow {\n            return\n        }\n        guard let win = UIApplication.sharedApplication().delegate?.window, let window = win else {\n            return\n        }\n        sharedInstance.isShow = true\n        sharedInstance.indicator.startAnimating()\n        window.addSubview(sharedInstance)\n        UIView.animateWithDuration(duration,\n            animations: {\n                sharedInstance.alpha = 1.0\n            },\n            completion: nil\n        )\n    }\n\n    class func hide(duration: Double = 0.5) {\n        if !sharedInstance.isShow {\n            return\n        }\n        UIView.animateWithDuration(duration,\n            animations: {\n                sharedInstance.alpha = 0\n            },\n            completion: { b in\n                sharedInstance.removeFromSuperview()\n                sharedInstance.indicator.stopAnimating()\n                sharedInstance.isShow = false\n            }\n        )\n    }\n```\n"}