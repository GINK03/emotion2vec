{"context": " More than 1 year has passed since last update.Java\u3067\u91d1\u984d\u3092\u6271\u3046\u5834\u5408\u3001\u300cBigDecimal\u3092\u4f7f\u3048\u300d\u3068\u3044\u3046\u306e\u304c\u5b9a\u77f3\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nhttp://www.slideshare.net/miyakawataku/bigdecimal-for-money-counting\nhttp://yyyank.blogspot.jp/2014/10/bigdecimaljava.html\n\n\u3055\u3082\u306a\u304f\u3070\u3001\u304a\u99b4\u67d3\u307f\u306e\u4e38\u3081\u8aa4\u5dee\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n(@miyakawataku\u3055\u3093\u306e\u300c\u91d1\u52d8\u5b9a\u306e\u305f\u3081\u306eBigDecimal\u305d\u3057\u3066Money and Currency API\u300d\u3088\u308a)\n\u3057\u304b\u3057\u3001\nnew BigDecimal(0.1)\n\n\u307f\u305f\u3044\u306a\u521d\u671f\u5316\u3055\u308c\u308b\u3068\u5143\u3082\u5b50\u3082\u3042\u308a\u307e\u305b\u3093\u3057\u3001\u8907\u6570\u56de\u4e38\u3081\u51e6\u7406\u3092\u901a\u3063\u3061\u3083\u3046\u3068\u3001\u3084\u306f\u308a\u8aa4\u5dee\u3092\u7523\u3080\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\u4ed6\u306b\u3088\u3044\u6848\u306f\u306a\u3044\u3082\u306e\u3067\u3057\u3087\u3046\u304b\u2026\n\nRatio\u578b\nhttp://stackoverflow.com/questions/7109741/rounding-numbers-to-n-decimals-in-clojure\n\u305f\u3044\u3066\u3044\u306eLisp\u306f\u5206\u6570\u578b\u3092\u6301\u3063\u3066\u3044\u308b\u305d\u3046\u3067\u3059\u3002\u8abf\u3079\u3066\u307f\u307e\u3059\u3002\n\nClojure\nuser=> (/ 22 7)\n22/7\n\n\n\nCommonLisp\n[1]> (/ 22 7)\n22/7\n\n\n\ngauche\ngosh> (/ 22 7)\n22/7\n\n\n\nMatzLisp\nirb(main):001:0> 22r / 7\n=> (22/7)\n\n\n\u3069\u308c\u3082\u3001\u5272\u308a\u7b97\u306f\u5206\u6570\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u4e38\u3081\u51e6\u7406\u306f\u8a08\u7b97\u9014\u4e2d\u3067\u306f\u6c17\u306b\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u6700\u5f8c\u306e\u6700\u5f8c\u30671\u56de\u3084\u308c\u3070\u3088\u3044\u3060\u3051\u3067\u3059\u3002\n\nClojure\nuser=> (* 1000 (- 1 (/ 7 100)))\n930N\n\n\n???\u300c\u304a\u91d1\u3092\u3042\u3064\u304b\u3046\u306a\u3089Lisp\u3060\u306a\u3063!!\u300d\n\nJava\u3067\u306eRatio\u306e\u5b9f\u88c5\nRatio\u578b\u306e\u5b9f\u88c5\u306f\u7c21\u5358\u3067\u3059\u3002\npublic class Ratio {\n    public long numerator;\n    public long denominator;\n\n    public Ratio(long numerator, long denominator) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        reduce();\n    }\n\n    public Ratio plus(Ratio x) {\n        if (x.denominator == this.denominator) {\n            this.numerator += x.numerator;\n        } else {\n            long d = this.denominator * x.denominator;\n            this.numerator = this.numerator * x.denominator + x.numerator * this.denominator;\n            this.denominator = d;\n        }\n\n        reduce();\n        return this;\n    }\n\n    public Ratio minus(Ratio x) {\n        if (x.denominator == this.denominator) {\n            this.numerator -= x.numerator;\n        } else {\n            long d = this.denominator * x.denominator;\n            this.numerator = this.numerator * x.denominator - x.numerator * this.denominator;\n            this.denominator = d;\n        }\n        reduce();\n        return this;\n    }\n\n    public Ratio multiply(Ratio x) {\n        this.numerator *= x.numerator;\n        this.denominator *= x.denominator;\n        reduce();\n        return this;\n    }\n\n    public Ratio devide(Ratio x) {\n        this.numerator *= x.denominator;\n        this.denominator *= x.numerator;\n        reduce();\n        return this;\n    }\n\n    public long quotient() {\n        return numerator / denominator;\n    }\n\n    public Ratio remainder() {\n        return new Ratio(numerator % denominator, denominator);\n    }\n\n    @Override\n    public boolean equals(Object anothor) {\n        return anothor != null\n                && anothor instanceof Ratio\n                && ((Ratio) anothor).numerator == numerator\n                && ((Ratio) anothor).denominator == denominator;\n\n    }\n\n    private void reduce() {\n        long gcd = calcGcd(numerator, denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    }\n\n    private long calcGcd(long a, long b) {\n        if (b == 0) return a;\n        return calcGcd(b, a%b);\n    }\n}\n\n(\u5b9f\u969b\u4f7f\u3046\u969b\u306b\u306f\u3001Number\u578b\u3092\u7d99\u627f\u3057\u305f\u308a\u3001Comparable\u3092\u5b9f\u88c5\u3057\u305f\u65b9\u304c\u3088\u3044\u3068\u601d\u3044\u307e\u3059)\n\u4e0b\u306b\u793a\u3059\u30c7\u30e1\u30ea\u30c3\u30c8\u306b\u8a72\u5f53\u3059\u308b\u5834\u5408\u306f\u3001numerator\u3068denominator\u306e\u578b\u3092BigInteger\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30c7\u30e1\u30ea\u30c3\u30c8\nExample\u306e\u30b3\u30fc\u30c9\u306f\u6bce\u56de\u7d04\u5206\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u304f\u308a\u304b\u3048\u3057\u8a08\u7b97\u3059\u308b\u5834\u5408\u3001\u7d04\u5206\u306e\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u304c\u3061\u3087\u3063\u3068\u3060\u3051\u304b\u304b\u308a\u307e\u3059\u3002\u3055\u3089\u306b\u8907\u5229\u8a08\u7b97\u306e\u3088\u3046\u306b\u540c\u3058\u5229\u7387\u3092\u639b\u3051\u308b\u5834\u5408\u3001\u5206\u5b50\u30fb\u5206\u6bcd\u304c\u5927\u304d\u306a\u6570\u5b57\u306b\u306a\u3063\u3066\u30e1\u30e2\u30ea\u3092\u55b0\u3046\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u2026(\u304c\u3001\u901a\u5e38\u696d\u52d9\u306e\u91d1\u984d\u8a08\u7b97\u3067\u306f\u7279\u306b\u6c17\u306b\u3059\u308b\u3053\u3068\u306b\u306f\u306a\u3089\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059)\n\n\u30e1\u30ea\u30c3\u30c8\n\u524d\u8ff0\u306e\u30c7\u30e1\u30ea\u30c3\u30c8\u3092\u4e57\u308a\u8d8a\u3048\u3089\u308c\u308b\u306a\u3089\u3070\u3001\u8a08\u7b97\u904e\u7a0b\u3067\u306e\u8aa4\u5dee\u3092\u6c17\u306b\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308b\u306e\u3067\u3001\u5b89\u5fc3\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u307e\u3068\u3081\nBigDecimal\u3092\u4f7f\u3063\u3066\u3082\u554f\u984c\u8d77\u3053\u3057\u305d\u3046\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001\u5206\u6570\u578b\u3092\u30d9\u30fc\u30b9\u3068\u3057\u305f\u91d1\u984d\u578b\u3092\u4f5c\u308b\u3053\u3068\u3092\u691c\u8a0e\u3059\u308b\u3068\u3088\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u3055\u3082\u306a\u304f\u3070\u3001Lisp\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\nJava\u3067\u91d1\u984d\u3092\u6271\u3046\u5834\u5408\u3001\u300cBigDecimal\u3092\u4f7f\u3048\u300d\u3068\u3044\u3046\u306e\u304c\u5b9a\u77f3\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n- http://www.slideshare.net/miyakawataku/bigdecimal-for-money-counting\n- http://yyyank.blogspot.jp/2014/10/bigdecimaljava.html\n\n\u3055\u3082\u306a\u304f\u3070\u3001\u304a\u99b4\u67d3\u307f\u306e\u4e38\u3081\u8aa4\u5dee\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/8475/a59e3fd4-e221-14f9-4eee-82fefe9e0ff2.png)\n(@miyakawataku\u3055\u3093\u306e\u300c\u91d1\u52d8\u5b9a\u306e\u305f\u3081\u306eBigDecimal\u305d\u3057\u3066Money and Currency API\u300d\u3088\u308a)\n\n\u3057\u304b\u3057\u3001\n\n```\nnew BigDecimal(0.1)\n```\n\n\u307f\u305f\u3044\u306a\u521d\u671f\u5316\u3055\u308c\u308b\u3068\u5143\u3082\u5b50\u3082\u3042\u308a\u307e\u305b\u3093\u3057\u3001\u8907\u6570\u56de\u4e38\u3081\u51e6\u7406\u3092\u901a\u3063\u3061\u3083\u3046\u3068\u3001\u3084\u306f\u308a\u8aa4\u5dee\u3092\u7523\u3080\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4ed6\u306b\u3088\u3044\u6848\u306f\u306a\u3044\u3082\u306e\u3067\u3057\u3087\u3046\u304b\u2026\n\n## Ratio\u578b\n\nhttp://stackoverflow.com/questions/7109741/rounding-numbers-to-n-decimals-in-clojure\n\n\u305f\u3044\u3066\u3044\u306eLisp\u306f\u5206\u6570\u578b\u3092\u6301\u3063\u3066\u3044\u308b\u305d\u3046\u3067\u3059\u3002\u8abf\u3079\u3066\u307f\u307e\u3059\u3002\n\n```clj:Clojure\nuser=> (/ 22 7)\n22/7\n```\n\n```cl:CommonLisp\n[1]> (/ 22 7)\n22/7\n```\n\n```scm:gauche\ngosh> (/ 22 7)\n22/7\n```\n\n```irb:MatzLisp\nirb(main):001:0> 22r / 7\n=> (22/7)\n```\n\n\u3069\u308c\u3082\u3001\u5272\u308a\u7b97\u306f\u5206\u6570\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002\u3057\u305f\u304c\u3063\u3066\u3001\u4e38\u3081\u51e6\u7406\u306f\u8a08\u7b97\u9014\u4e2d\u3067\u306f\u6c17\u306b\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u3001\u6700\u5f8c\u306e\u6700\u5f8c\u30671\u56de\u3084\u308c\u3070\u3088\u3044\u3060\u3051\u3067\u3059\u3002\n\n```clj:Clojure\nuser=> (* 1000 (- 1 (/ 7 100)))\n930N\n```\n\n**???\u300c\u304a\u91d1\u3092\u3042\u3064\u304b\u3046\u306a\u3089Lisp\u3060\u306a\u3063!!\u300d**\n\n## Java\u3067\u306eRatio\u306e\u5b9f\u88c5\n\nRatio\u578b\u306e\u5b9f\u88c5\u306f\u7c21\u5358\u3067\u3059\u3002\n\n```java\npublic class Ratio {\n    public long numerator;\n    public long denominator;\n\n    public Ratio(long numerator, long denominator) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        reduce();\n    }\n\n    public Ratio plus(Ratio x) {\n        if (x.denominator == this.denominator) {\n            this.numerator += x.numerator;\n        } else {\n            long d = this.denominator * x.denominator;\n            this.numerator = this.numerator * x.denominator + x.numerator * this.denominator;\n            this.denominator = d;\n        }\n\n        reduce();\n        return this;\n    }\n\n    public Ratio minus(Ratio x) {\n        if (x.denominator == this.denominator) {\n            this.numerator -= x.numerator;\n        } else {\n            long d = this.denominator * x.denominator;\n            this.numerator = this.numerator * x.denominator - x.numerator * this.denominator;\n            this.denominator = d;\n        }\n        reduce();\n        return this;\n    }\n\n    public Ratio multiply(Ratio x) {\n        this.numerator *= x.numerator;\n        this.denominator *= x.denominator;\n        reduce();\n        return this;\n    }\n\n    public Ratio devide(Ratio x) {\n        this.numerator *= x.denominator;\n        this.denominator *= x.numerator;\n        reduce();\n        return this;\n    }\n\n    public long quotient() {\n        return numerator / denominator;\n    }\n\n    public Ratio remainder() {\n        return new Ratio(numerator % denominator, denominator);\n    }\n\n    @Override\n    public boolean equals(Object anothor) {\n        return anothor != null\n                && anothor instanceof Ratio\n                && ((Ratio) anothor).numerator == numerator\n                && ((Ratio) anothor).denominator == denominator;\n\n    }\n\n    private void reduce() {\n        long gcd = calcGcd(numerator, denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    }\n\n    private long calcGcd(long a, long b) {\n        if (b == 0) return a;\n        return calcGcd(b, a%b);\n    }\n}\n```\n\n(\u5b9f\u969b\u4f7f\u3046\u969b\u306b\u306f\u3001Number\u578b\u3092\u7d99\u627f\u3057\u305f\u308a\u3001Comparable\u3092\u5b9f\u88c5\u3057\u305f\u65b9\u304c\u3088\u3044\u3068\u601d\u3044\u307e\u3059)\n\n\u4e0b\u306b\u793a\u3059\u30c7\u30e1\u30ea\u30c3\u30c8\u306b\u8a72\u5f53\u3059\u308b\u5834\u5408\u306f\u3001`numerator`\u3068`denominator`\u306e\u578b\u3092`BigInteger`\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u30c7\u30e1\u30ea\u30c3\u30c8\n\nExample\u306e\u30b3\u30fc\u30c9\u306f\u6bce\u56de\u7d04\u5206\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u304f\u308a\u304b\u3048\u3057\u8a08\u7b97\u3059\u308b\u5834\u5408\u3001\u7d04\u5206\u306e\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u304c\u3061\u3087\u3063\u3068\u3060\u3051\u304b\u304b\u308a\u307e\u3059\u3002\u3055\u3089\u306b\u8907\u5229\u8a08\u7b97\u306e\u3088\u3046\u306b\u540c\u3058\u5229\u7387\u3092\u639b\u3051\u308b\u5834\u5408\u3001\u5206\u5b50\u30fb\u5206\u6bcd\u304c\u5927\u304d\u306a\u6570\u5b57\u306b\u306a\u3063\u3066\u30e1\u30e2\u30ea\u3092\u55b0\u3046\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u2026(\u304c\u3001\u901a\u5e38\u696d\u52d9\u306e\u91d1\u984d\u8a08\u7b97\u3067\u306f\u7279\u306b\u6c17\u306b\u3059\u308b\u3053\u3068\u306b\u306f\u306a\u3089\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059)\n\n## \u30e1\u30ea\u30c3\u30c8\n\n\u524d\u8ff0\u306e\u30c7\u30e1\u30ea\u30c3\u30c8\u3092\u4e57\u308a\u8d8a\u3048\u3089\u308c\u308b\u306a\u3089\u3070\u3001\u8a08\u7b97\u904e\u7a0b\u3067\u306e\u8aa4\u5dee\u3092\u6c17\u306b\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308b\u306e\u3067\u3001\u5b89\u5fc3\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\n\nBigDecimal\u3092\u4f7f\u3063\u3066\u3082\u554f\u984c\u8d77\u3053\u3057\u305d\u3046\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u3001\u5206\u6570\u578b\u3092\u30d9\u30fc\u30b9\u3068\u3057\u305f\u91d1\u984d\u578b\u3092\u4f5c\u308b\u3053\u3068\u3092\u691c\u8a0e\u3059\u308b\u3068\u3088\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u3055\u3082\u306a\u304f\u3070\u3001Lisp\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n", "tags": ["Java", "\u91d1\u984d\u8a08\u7b97", "Ratio", "lisp"]}