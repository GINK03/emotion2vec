{"context": " More than 1 year has passed since last update.\u30e6\u30cb\u30b3\u30fc\u30c9\u6b63\u898f\u5316\u3092\u3059\u308b\u3068\u3001\u534a\u89d2\u82f1\u6570\u5b57\u3084\u6a5f\u7a2e\u4f9d\u5b58\u6587\u5b57\u306a\u3069\u306e\u8868\u8a18\u304c\u7d71\u4e00\u3067\u304d\u307e\u3059\u3002\n\u8868\u8a18\u30d6\u30ec\u304c\u5438\u53ce\u3055\u308c\u308b\u3053\u3068\u3067\u691c\u7d22\u6027\u304c\u9ad8\u307e\u3063\u305f\u308a\u3001\u30c7\u30fc\u30bf\u306e\u6bd4\u8f03\u306a\u3069\u3082\u884c\u3044\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\u6b63\u898f\u5316\u306e\u624b\u6cd5\u306b\u306fNFD, NFC, NFKD, NFKC\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u4e2d\u3067\u3082NFKC\u3068\u3044\u3046\u6b21\u306e\u3088\u3046\u306a\u6b63\u898f\u5316\u3092\u884c\u3046\u65b9\u6cd5\u3092\u30b3\u30fc\u30c9\u3092\u4ea4\u3048\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u30a6\u309b\u30a7 \u2192 \u30f4\u30a7\n\uff21\uff22\uff23 \u2192 ABC\n\u2460 \u2192 1\n\u32a4 \u2192 \u4e0a\n\u2162 \u2192 III\n\u3336 \u2192 \u30d8\u30af\u30bf\u30fc\u30eb\n\uff8a\uff9d\uff76\uff78\uff76\uff85 \u2192 \u30cf\u30f3\u30ab\u30af\u30ab\u30ca\n\ufe63 \u2192 -\n\u203b \u5de6\u8fba\u306fU+FE63 Small Hyphen-Minus: \u5c0f\u3055\u3044\u30cf\u30a4\u30d5\u30f3\u30de\u30a4\u30ca\u30b9\n\uff0d \u2192 -\n\u203b \u5de6\u8fba\u306fU+FF0D Fullwidth Hyphen-Minus: \u5168\u89d2\u30cf\u30a4\u30d5\u30f3\u30de\u30a4\u30ca\u30b9\n\n\n\u52d5\u4f5c\u74b0\u5883\n$ ruby -v\nruby 2.2.0p0 (2014-12-25 revision 49005) [x86_64-darwin13]\n\n\n\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\nRuby2\u74b0\u5883\u3067\u3082\u52d5\u304f\u3001\u30e6\u30cb\u30b3\u30fc\u30c9\u6b63\u898f\u5316\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u6b21\u306e4\u7a2e\u985e\u3067\u3059\u3002\n\u9806\u756a\u306b\u4f7f\u3044\u65b9\u3092\u78ba\u8a8d\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nunf\nunicode\nunicode_utils\nActiveSupport::Multibyte::Unicode\n\n\nunf\u7de8\nunf\u3092\u5229\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n$ gem install unf\nFetching: unf_ext-0.0.6.gem (100%)\nBuilding native extensions.  This could take a while...\nSuccessfully installed unf_ext-0.0.6\nFetching: unf-0.1.4.gem (100%)\nSuccessfully installed unf-0.1.4\n2 gems installed\n\n$ pry\n[1] pry(main)> require 'unf'\n=> true\n[2] pry(main)> text = \"\u3231\u3327\u3326\u2162\"\n=> \"\u3231\u3327\u3326\u2162\"\n[3] pry(main)> UNF::Normalizer.normalize(text, :nfkc)\n=> \"(\u682a)\u30c8\u30f3\u30c9\u30ebIII\"\n\n\nunicode\u7de8\nunicode\u3092\u5229\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n$ gem install unicode\nFetching: unicode-0.4.4.2.gem (100%)\nBuilding native extensions.  This could take a while...\nSuccessfully installed unicode-0.4.4.2\n1 gem installed\n\n$ pry\n[1] pry(main)> require 'unicode'\n=> true\n[2] pry(main)> text = \"\u3231\u3327\u3326\u2162\"\n=> \"\u3231\u3327\u3326\u2162\"\n[3] pry(main)> Unicode::nfkc('\u3231\u3327\u3326\u2162')\n=> \"(\u682a)\u30c8\u30f3\u30c9\u30ebIII\"\n\n\nunicode_utils\u7de8\nunicode_utils\u3092\u5229\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n$ gem install unicode_utils\nFetching: unicode_utils-1.4.0.gem (100%)\nSuccessfully installed unicode_utils-1.4.0\n1 gem installed\n\n$ pry\n[1] pry(main)> require 'unicode_utils/nfkc'\n=> true\n[2] pry(main)> text = \"\u3231\u3327\u3326\u2162\"\n=> \"\u3231\u3327\u3326\u2162\"\n[3] pry(main)> UnicodeUtils.nfkc text\n=> \"(\u682a)\u30c8\u30f3\u30c9\u30ebIII\"\n\n\nActiveSupport::Multibyte::Unicode\u7de8\nActiveSupport::Multibyte::Unicode\u3092\u5229\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n$ gem install activesupport\nFetching: thread_safe-0.3.4.gem (100%)\nSuccessfully installed thread_safe-0.3.4\nFetching: tzinfo-1.2.2.gem (100%)\nSuccessfully installed tzinfo-1.2.2\nFetching: i18n-0.7.0.gem (100%)\nSuccessfully installed i18n-0.7.0\nFetching: activesupport-4.2.0.gem (100%)\nSuccessfully installed activesupport-4.2.0\n4 gems installed\n\n\n$ pry\n[1] pry(main)> require 'active_support/multibyte/unicode'\n=> true\n[2] pry(main)> text = \"\u3231\u3327\u3326\u2162\"\n=> \"\u3231\u3327\u3326\u2162\"\n[3] pry(main)> ActiveSupport::Multibyte::Unicode.normalize(text, :kc)\n=> \"(\u682a)\u30c8\u30f3\u30c9\u30ebIII\"\n\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\n\u7d50\u5c40\u3069\u308c\u304c\u4e00\u756a\u901f\u3044\u306e\u304b\u8a08\u6e2c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u5148\u307b\u3069\u306e\u4f8b\u3067\u7528\u3044\u305f\u6587\u5b57\u5217\u3092\u4f7f\u3044\u3001\u305d\u308c\u305e\u308c100\u4e07\u56de\u306e\u6b63\u898f\u5316\u306b\u639b\u304b\u3063\u305f\u6642\u9593\u3067\u6bd4\u3079\u307e\u3059\u3002\n\u7d50\u679c\u306f\u6b21\u306e\u901a\u308a\u3001C\u62e1\u5f35\u3067\u4f5c\u3089\u308c\u305funicode\u3084unf\u304c\u30c0\u30f3\u30c8\u30c4\u3067\u901f\u3044\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\nuser\nsystem\ntotal\nreal\n\n\n\n\nunf\n4.91\n0\n4.91\n4.917251\n\n\nunicode\n4.03\n0.01\n4.04\n4.041364\n\n\nunicode_utils\n14.32\n0.01\n14.33\n14.337881\n\n\nActiveSupport\n24.49\n0.04\n24.53\n24.616207\n\n\n\n\u8a08\u6e2c\u306b\u5229\u7528\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n# -*- coding: utf-8 -*-\nrequire 'unf'\nrequire 'unicode'\nrequire 'unicode_utils/nfkc'\nrequire 'active_support/multibyte/unicode'\nrequire 'benchmark'\nrequire 'time'\n\ntext = '\u3231\u3327\u3326\u2162'\nn = 1000000\nBenchmark.bm(7) do |x|\n  x.report(\"unf\")  {  n.times { UNF::Normalizer.normalize(text, :nfkc) } }\n  x.report(\"unicode\") { n.times { Unicode::nfkc(text) } }\n  x.report(\"unicode_utils\") { n.times { UnicodeUtils.nfkc(text) } }\n  x.report(\"ActiveSupport\") { n.times { ActiveSupport::Multibyte::Unicode.normalize(text, :kc) } }\nend\n\n\n\u7d50\u5408\u7528\u3067\u306f\u306a\u3044\u6fc1\u70b9\u3068\u534a\u6fc1\u70b9\u3092\u5408\u5b57\u3068\u3059\u308b\u5b9f\u88c5\u4f8b\nPDF\u5316\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u30b3\u30d4\u30fc\u3057\u305f\u3068\u304d\u306b\u3001\u3053\u306e\u3088\u3046\u306b\u6fc1\u70b9\u30fb\u534a\u6fc1\u70b9\u304c\u5206\u304b\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u7d50\u5408\u7528\u306e\u6fc1\u70b9\u30fb\u534a\u6fc1\u70b9\u3067\u306f\u306a\u3044\u3082\u306e\u306f\u4e0a\u8a18\u306e\u6b63\u898f\u5316\u3067\u306f\u623b\u305b\u306a\u3044\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n# \u30a6 \u3068 \u309b\u3068\u3044\u3046\u5177\u5408\u306b\u5206\u304b\u308c\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u306e\u5bfe\u51e6\u6cd5\u3067\u3059\n$ pry\n[1] pry(main)> text = \"\u30a6\u309b\u30a1\u30a4\u30aa\u30ea\u30f3\"\n=> \"\u30a6\u309b\u30a1\u30a4\u30aa\u30ea\u30f3\"\n[2] pry(main)> text.gsub(\"\\u309B\", \"\\u3099\").gsub(\"\\u309C\", \"\\u309A\")\n=> \"\u30f4\u30a1\u30a4\u30aa\u30ea\u30f3\"\n[3] pry(main)> convert = {\"\\u309B\" => \"\\u3099\", \"\\u309C\" => \"\\u309A\"}\n=> {\"\u309b\"=>\"\u3099\", \"\u309c\"=>\"\u309a\"}\n[4] pry(main)> text.gsub(/\\u309B|\\u309C/, convert)\n=> \"\u30f4\u30a1\u30a4\u30aa\u30ea\u30f3\"\n\n\u5f8c\u8005\u3067\u306fgsub\u306e\u4e2d\u3067\u6b63\u898f\u8868\u73fe\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u305f\u3081\u591a\u5c11\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\n\u306a\u304a\u3001convert\u3092\u5916\u306b\u51fa\u3055\u305a\u306b\u4e2d\u306b\u5165\u308c\u308b\u3068\u3055\u3089\u306b\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n\u6b21\u306b\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3067\u3082\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n$ ruby benchmark_gsub.rb\n              user     system      total        real\nsingle_args  2.660000   0.010000   2.670000 (  2.675610)\nsingle_block  2.920000   0.010000   2.930000 (  2.931155)\nchain_method  2.100000   0.000000   2.100000 (  2.104693)\n\n# -*- coding: utf-8 -*-\nrequire 'benchmark'\nrequire 'time'\n\nn = 1000000\ntext = \"\u30a6\u309b\u30a1\u30a4\u30aa\u30ea\u30f3\"\nconvert = {\"\\u309B\" => \"\\u3099\", \"\\u309C\" => \"\\u309A\"}\nBenchmark.bm(7) do |x|\n  x.report(\"single_args\")  {  n.times { text.gsub(/\\u309B|\\u309C/, convert) } }\n  x.report(\"single_block\")  {  n.times { text.gsub(/\\u309B|\\u309C/) { |chr| convert[chr] }} }\n  x.report(\"chain_method\") { n.times { text.gsub(\"\\u309B\", \"\\u3099\").gsub(\"\\u309C\", \"\\u309A\") } }\nend\n\n\n\u4f75\u305b\u3066\u8aad\u307f\u305f\u3044\n\nUnicode\u6b63\u898f\u5316\nhttp://nomenclator.la.coocan.jp/unicode/normalization.htm\n\n\n\u30e6\u30cb\u30b3\u30fc\u30c9\u6b63\u898f\u5316\u3092\u3059\u308b\u3068\u3001\u534a\u89d2\u82f1\u6570\u5b57\u3084\u6a5f\u7a2e\u4f9d\u5b58\u6587\u5b57\u306a\u3069\u306e\u8868\u8a18\u304c\u7d71\u4e00\u3067\u304d\u307e\u3059\u3002\n\u8868\u8a18\u30d6\u30ec\u304c\u5438\u53ce\u3055\u308c\u308b\u3053\u3068\u3067\u691c\u7d22\u6027\u304c\u9ad8\u307e\u3063\u305f\u308a\u3001\u30c7\u30fc\u30bf\u306e\u6bd4\u8f03\u306a\u3069\u3082\u884c\u3044\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u6b63\u898f\u5316\u306e\u624b\u6cd5\u306b\u306fNFD, NFC, NFKD, NFKC\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u4e2d\u3067\u3082NFKC\u3068\u3044\u3046\u6b21\u306e\u3088\u3046\u306a\u6b63\u898f\u5316\u3092\u884c\u3046\u65b9\u6cd5\u3092\u30b3\u30fc\u30c9\u3092\u4ea4\u3048\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n* \u30a6\u309b\u30a7 \u2192 \u30f4\u30a7\n* \uff21\uff22\uff23 \u2192 ABC\n* \u2460 \u2192 1\n* \u32a4 \u2192 \u4e0a\n* \u2162 \u2192 III\n* \u3336 \u2192 \u30d8\u30af\u30bf\u30fc\u30eb\n* \uff8a\uff9d\uff76\uff78\uff76\uff85 \u2192 \u30cf\u30f3\u30ab\u30af\u30ab\u30ca\n* \ufe63 \u2192 -<br>\n\u203b \u5de6\u8fba\u306fU+FE63 Small Hyphen-Minus: \u5c0f\u3055\u3044\u30cf\u30a4\u30d5\u30f3\u30de\u30a4\u30ca\u30b9\n* \uff0d \u2192 -<br>\n\u203b \u5de6\u8fba\u306fU+FF0D Fullwidth Hyphen-Minus: \u5168\u89d2\u30cf\u30a4\u30d5\u30f3\u30de\u30a4\u30ca\u30b9\n\n## \u52d5\u4f5c\u74b0\u5883\n\n```bash\n$ ruby -v\nruby 2.2.0p0 (2014-12-25 revision 49005) [x86_64-darwin13]\n```\n\n## \u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\n\nRuby2\u74b0\u5883\u3067\u3082\u52d5\u304f\u3001\u30e6\u30cb\u30b3\u30fc\u30c9\u6b63\u898f\u5316\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u6b21\u306e4\u7a2e\u985e\u3067\u3059\u3002\n\u9806\u756a\u306b\u4f7f\u3044\u65b9\u3092\u78ba\u8a8d\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n* unf\n* unicode\n* unicode_utils\n* ActiveSupport::Multibyte::Unicode\n\n### unf\u7de8\n\n[unf](https://github.com/knu/ruby-unf)\u3092\u5229\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n```bash\n$ gem install unf\nFetching: unf_ext-0.0.6.gem (100%)\nBuilding native extensions.  This could take a while...\nSuccessfully installed unf_ext-0.0.6\nFetching: unf-0.1.4.gem (100%)\nSuccessfully installed unf-0.1.4\n2 gems installed\n\n$ pry\n[1] pry(main)> require 'unf'\n=> true\n[2] pry(main)> text = \"\u3231\u3327\u3326\u2162\"\n=> \"\u3231\u3327\u3326\u2162\"\n[3] pry(main)> UNF::Normalizer.normalize(text, :nfkc)\n=> \"(\u682a)\u30c8\u30f3\u30c9\u30ebIII\"\n```\n\n### unicode\u7de8\n\n[unicode](https://github.com/blackwinter/unicode)\u3092\u5229\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n```bash\n$ gem install unicode\nFetching: unicode-0.4.4.2.gem (100%)\nBuilding native extensions.  This could take a while...\nSuccessfully installed unicode-0.4.4.2\n1 gem installed\n\n$ pry\n[1] pry(main)> require 'unicode'\n=> true\n[2] pry(main)> text = \"\u3231\u3327\u3326\u2162\"\n=> \"\u3231\u3327\u3326\u2162\"\n[3] pry(main)> Unicode::nfkc('\u3231\u3327\u3326\u2162')\n=> \"(\u682a)\u30c8\u30f3\u30c9\u30ebIII\"\n```\n\n### unicode_utils\u7de8\n\n[unicode_utils](https://github.com/lang/unicode_utils)\u3092\u5229\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n```bash\n$ gem install unicode_utils\nFetching: unicode_utils-1.4.0.gem (100%)\nSuccessfully installed unicode_utils-1.4.0\n1 gem installed\n\n$ pry\n[1] pry(main)> require 'unicode_utils/nfkc'\n=> true\n[2] pry(main)> text = \"\u3231\u3327\u3326\u2162\"\n=> \"\u3231\u3327\u3326\u2162\"\n[3] pry(main)> UnicodeUtils.nfkc text\n=> \"(\u682a)\u30c8\u30f3\u30c9\u30ebIII\"\n```\n\n### ActiveSupport::Multibyte::Unicode\u7de8\n\n[ActiveSupport::Multibyte::Unicode](http://api.rubyonrails.org/classes/ActiveSupport/Multibyte/Unicode.html#method-i-normalize)\u3092\u5229\u7528\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n```bash\n$ gem install activesupport\nFetching: thread_safe-0.3.4.gem (100%)\nSuccessfully installed thread_safe-0.3.4\nFetching: tzinfo-1.2.2.gem (100%)\nSuccessfully installed tzinfo-1.2.2\nFetching: i18n-0.7.0.gem (100%)\nSuccessfully installed i18n-0.7.0\nFetching: activesupport-4.2.0.gem (100%)\nSuccessfully installed activesupport-4.2.0\n4 gems installed\n\n\n$ pry\n[1] pry(main)> require 'active_support/multibyte/unicode'\n=> true\n[2] pry(main)> text = \"\u3231\u3327\u3326\u2162\"\n=> \"\u3231\u3327\u3326\u2162\"\n[3] pry(main)> ActiveSupport::Multibyte::Unicode.normalize(text, :kc)\n=> \"(\u682a)\u30c8\u30f3\u30c9\u30ebIII\"\n```\n\n## \u30d9\u30f3\u30c1\u30de\u30fc\u30af\n\n\u7d50\u5c40\u3069\u308c\u304c\u4e00\u756a\u901f\u3044\u306e\u304b\u8a08\u6e2c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u5148\u307b\u3069\u306e\u4f8b\u3067\u7528\u3044\u305f\u6587\u5b57\u5217\u3092\u4f7f\u3044\u3001\u305d\u308c\u305e\u308c100\u4e07\u56de\u306e\u6b63\u898f\u5316\u306b\u639b\u304b\u3063\u305f\u6642\u9593\u3067\u6bd4\u3079\u307e\u3059\u3002\n\u7d50\u679c\u306f\u6b21\u306e\u901a\u308a\u3001C\u62e1\u5f35\u3067\u4f5c\u3089\u308c\u305funicode\u3084unf\u304c\u30c0\u30f3\u30c8\u30c4\u3067\u901f\u3044\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\n| \u30e9\u30a4\u30d6\u30e9\u30ea     |  user  | system| total | real      |\n|---------------|--------|-------|-------|-----------|\n| unf           | 4.91   | 0     | 4.91  | 4.917251  |\n| unicode       | 4.03   | 0.01  | 4.04  | 4.041364  |\n| unicode_utils | 14.32  | 0.01  | 14.33 | 14.337881 |\n| ActiveSupport | 24.49  | 0.04  | 24.53 | 24.616207 |\n\n\u8a08\u6e2c\u306b\u5229\u7528\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\n```rb\n# -*- coding: utf-8 -*-\nrequire 'unf'\nrequire 'unicode'\nrequire 'unicode_utils/nfkc'\nrequire 'active_support/multibyte/unicode'\nrequire 'benchmark'\nrequire 'time'\n\ntext = '\u3231\u3327\u3326\u2162'\nn = 1000000\nBenchmark.bm(7) do |x|\n  x.report(\"unf\")  {  n.times { UNF::Normalizer.normalize(text, :nfkc) } }\n  x.report(\"unicode\") { n.times { Unicode::nfkc(text) } }\n  x.report(\"unicode_utils\") { n.times { UnicodeUtils.nfkc(text) } }\n  x.report(\"ActiveSupport\") { n.times { ActiveSupport::Multibyte::Unicode.normalize(text, :kc) } }\nend\n```\n\n## \u7d50\u5408\u7528\u3067\u306f\u306a\u3044\u6fc1\u70b9\u3068\u534a\u6fc1\u70b9\u3092\u5408\u5b57\u3068\u3059\u308b\u5b9f\u88c5\u4f8b\n\nPDF\u5316\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u30b3\u30d4\u30fc\u3057\u305f\u3068\u304d\u306b\u3001\u3053\u306e\u3088\u3046\u306b\u6fc1\u70b9\u30fb\u534a\u6fc1\u70b9\u304c\u5206\u304b\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u7d50\u5408\u7528\u306e\u6fc1\u70b9\u30fb\u534a\u6fc1\u70b9\u3067\u306f\u306a\u3044\u3082\u306e\u306f\u4e0a\u8a18\u306e\u6b63\u898f\u5316\u3067\u306f\u623b\u305b\u306a\u3044\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n```rb\n# \u30a6 \u3068 \u309b\u3068\u3044\u3046\u5177\u5408\u306b\u5206\u304b\u308c\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u306e\u5bfe\u51e6\u6cd5\u3067\u3059\n$ pry\n[1] pry(main)> text = \"\u30a6\u309b\u30a1\u30a4\u30aa\u30ea\u30f3\"\n=> \"\u30a6\u309b\u30a1\u30a4\u30aa\u30ea\u30f3\"\n[2] pry(main)> text.gsub(\"\\u309B\", \"\\u3099\").gsub(\"\\u309C\", \"\\u309A\")\n=> \"\u30f4\u30a1\u30a4\u30aa\u30ea\u30f3\"\n[3] pry(main)> convert = {\"\\u309B\" => \"\\u3099\", \"\\u309C\" => \"\\u309A\"}\n=> {\"\u309b\"=>\"\u3099\", \"\u309c\"=>\"\u309a\"}\n[4] pry(main)> text.gsub(/\\u309B|\\u309C/, convert)\n=> \"\u30f4\u30a1\u30a4\u30aa\u30ea\u30f3\"\n```\n\n\u5f8c\u8005\u3067\u306fgsub\u306e\u4e2d\u3067\u6b63\u898f\u8868\u73fe\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u305f\u3081\u591a\u5c11\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\n\u306a\u304a\u3001`convert`\u3092\u5916\u306b\u51fa\u3055\u305a\u306b\u4e2d\u306b\u5165\u308c\u308b\u3068\u3055\u3089\u306b\u9045\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u6b21\u306b\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3067\u3082\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```bash\n$ ruby benchmark_gsub.rb\n              user     system      total        real\nsingle_args  2.660000   0.010000   2.670000 (  2.675610)\nsingle_block  2.920000   0.010000   2.930000 (  2.931155)\nchain_method  2.100000   0.000000   2.100000 (  2.104693)\n```\n\n```rb\n# -*- coding: utf-8 -*-\nrequire 'benchmark'\nrequire 'time'\n\nn = 1000000\ntext = \"\u30a6\u309b\u30a1\u30a4\u30aa\u30ea\u30f3\"\nconvert = {\"\\u309B\" => \"\\u3099\", \"\\u309C\" => \"\\u309A\"}\nBenchmark.bm(7) do |x|\n  x.report(\"single_args\")  {  n.times { text.gsub(/\\u309B|\\u309C/, convert) } }\n  x.report(\"single_block\")  {  n.times { text.gsub(/\\u309B|\\u309C/) { |chr| convert[chr] }} }\n  x.report(\"chain_method\") { n.times { text.gsub(\"\\u309B\", \"\\u3099\").gsub(\"\\u309C\", \"\\u309A\") } }\nend\n```\n\n## \u4f75\u305b\u3066\u8aad\u307f\u305f\u3044\n\n* Unicode\u6b63\u898f\u5316<br>\nhttp://nomenclator.la.coocan.jp/unicode/normalization.htm\n", "tags": ["Ruby", "unicode"]}