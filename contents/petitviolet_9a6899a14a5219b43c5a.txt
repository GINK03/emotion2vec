{"context": "\n\n\u6709\u9650\u30aa\u30fc\u30c8\u30de\u30c8\u30f3\uff1f\nFinite State Machine(FSM)\n\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u53d6\u3063\u3066\u72b6\u614b\u9077\u79fb\u3059\u308b\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u3002\n\u8a73\u3057\u304f\u306fWikipedia\u53c2\u7167\n\nFSM\u3092Actor\u3067\u5b9f\u88c5\u3059\u308b\n\u307e\u3055\u306b\u305d\u306e\u305f\u3081\u306eakka.actor.FSM\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3059\u308b\u3002\n\nFSM\u306b\u5fc5\u8981\u306a\u578b\u3092\u5b9a\u7fa9\u3059\u308b\n\u5fc5\u8981\u3068\u306a\u308b\u306e\u306f\u4ee5\u4e0b\u306e3\u3064\u306e\u578b\n\n\nState\n\nFSM\u306e\u72b6\u614b\n\n\n\nData\n\nFSM\u304c\u5185\u90e8\u7684\u306b\u6301\u3064\u60c5\u5831\n\n\n\nEvent\n\nFSM\u306e\u72b6\u614b\u9077\u79fb\u3092\u30ad\u30c3\u30af\u3059\u308b\u3082\u306e\n\n\n\n\u4eca\u56de\u306f\u4fe1\u53f7\u3092FSM\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3002\n\nState.scala\nsealed trait SignalState\ncase object Red extends SignalState\ncase object Green extends SignalState\ncase object Yellow extends SignalState\n\n\n\nData.scala\nsealed trait SignalData\n\nobject SignalData {\n  sealed case class SignalColor(value: String) extends SignalData\n  val RedData = SignalColor(\"red\")\n  val YellowData = SignalColor(\"yellow\")\n  val GreenData = SignalColor(\"green\")\n}\n\n\n\nEvent.scala\nsealed trait SignalEvent\ncase object ChangeSignal extends SignalEvent\ncase object RetainSignal extends SignalEvent\n\n\n\nFSM\u3092\u5b9f\u88c5\u3059\u308b\n\u5148\u307b\u3069\u7528\u610f\u3057\u305fState/Data/Event\u3092\u5229\u7528\u3057\u3066FSM\u3092\u5b9f\u88c5\u3059\u308b\u3002\nFSM\u81ea\u4f53\u306e\u5b9f\u88c5\u306fDSL\u3060\u3051\u3067\u5b8c\u7d50\u3059\u308b\u305f\u3081\u975e\u5e38\u306b\u697d\u3002\n\nSignalActor.scala\nclass SignalChangeFSMActor extends Actor with FSM[SignalState, SignalData] {\n  // \u521d\u671f\u72b6\u614b\n  startWith(Red, RedData)\n\n  // Event\u3092\u53d7\u3051\u53d6\u3063\u305f\u6642\u306e\u72b6\u614b\u9077\u79fb\n  when(Green) {\n    case Event(ChangeSignal, _) => goto(Yellow) using YellowData\n    case Event(RetainSignal, _) => stay\n  }\n\n  when(Yellow) {\n    case Event(ChangeSignal, _) => goto(Red) using RedData\n    case Event(RetainSignal, _) => stay\n  }\n\n  when(Red) {\n    case Event(ChangeSignal, _) => goto(Green) using GreenData\n    case Event(RetainSignal, _) => stay\n  }\n\n  // \u72b6\u614b\u9077\u79fb\u4e2d\u306e\u51e6\u7406\n  onTransition {\n    case Green -> Yellow =>\n      println(s\"WARN! green -> yellow: $stateData\")\n    case Yellow -> Red =>\n      println(s\"CAUTION! yellow -> red: $stateData\")\n    case Red -> Green =>\n      println(s\"OK! red -> green: $stateData\")\n  }\n\n  // Actor\u304c\u7d42\u4e86\u3059\u308b\u969b\u306e\u51e6\u7406\n  onTermination {\n    case StopEvent(_, _, _) =>\n      println(\"Shutting down FSM...\")\n  }\n\n  // \u521d\u671f\u5316\n  initialize()\n}\n\n\nFSM\u306e\u6839\u5e79\u3068\u306a\u308b\u72b6\u614b\u9077\u79fb\u306f\u3001when\u306e\u5f15\u6570\u306b\u5bfe\u3059\u308bPartialFunction\u3067\u3001goto\u304bstay\u3092\u8fd4\u305b\u3070\u826f\u3044\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u7834\u68c4\u3057\u3066\u3044\u308b\u304c\u3001Event\u306e\u7b2c\u4e8c\u5f15\u6570\u306f\u73fe\u5728\u306e\u72b6\u614b\u3092\u8868\u3059stateData\u3068\u540c\u3058\u3082\u306e\u304c\u5165\u3063\u3066\u304f\u308b\u3089\u3057\u3044\u3002\n\nFSM\u306aActor\u3092\u4f7f\u3046\n\u901a\u5e38\u306eActor\u3068\u540c\u69d8\u306b\u751f\u6210\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308c\u3070\u826f\u3044\u3002\nobject ApplicationMain extends App {\n  val system = ActorSystem(\"MyActorSystem\")\n  val signalActor = system.actorOf(Props[SignalChangeFSMActor], \"fsm-signal\")\n\n  signalActor ! ChangeSignal\n  signalActor ! RetainSignal\n  signalActor ! ChangeSignal\n  signalActor ! RetainSignal\n  signalActor ! ChangeSignal\n  signalActor ! RetainSignal\n  signalActor ! ChangeSignal\n  signalActor ! RetainSignal\n\n  Thread.sleep(3000)\n  system.terminate()\n}\n\n\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u308b\u3002\nOK! red -> green: SignalColor(red)\nWARN! green -> yellow: SignalColor(green)\nCAUTION! yellow -> red: SignalColor(yellow)\nOK! red -> green: SignalColor(red)\nShutting down FSM...\n\n\n\u6240\u611f\nActor\u306e\u5834\u5408\u3001context.become\u3068\u304bcontext.unbecome\u3067\u72b6\u614b\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u53ef\u80fd\u306a\u305f\u3081\u3001\u308f\u3056\u308f\u3056akka.actor.FSM\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u306f\u5b9f\u73fe\u3067\u304d\u308b\u3002\nakka.actor.FSM\u306a\u3089DSL\u3067\u72b6\u614b\u9077\u79fb\u3068\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3092\u5ba3\u8a00\u7684\u306b\u8a18\u8ff0\u3067\u304d\u308b\u306e\u3067\u3001\u3084\u3084\u72b6\u614b\u9077\u79fb\u304c\u8907\u96d1\u306a\u3082\u306e\u306a\u3069\u306fDSL\u3092\u304a\u307c\u3048\u3066\u3067\u3082\u4f7f\u3046\u4fa1\u5024\u306f\u3042\u308b\u304b\u3082\u77e5\u308c\u306a\u3044\u3002\n\n# \u6709\u9650\u30aa\u30fc\u30c8\u30de\u30c8\u30f3\uff1f\n\nFinite State Machine(FSM)\n\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u53d6\u3063\u3066\u72b6\u614b\u9077\u79fb\u3059\u308b\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30f3\u3002\n\u8a73\u3057\u304f\u306f[Wikipedia](https://ja.wikipedia.org/wiki/\u6709\u9650\u30aa\u30fc\u30c8\u30de\u30c8\u30f3)\u53c2\u7167\n\n# FSM\u3092Actor\u3067\u5b9f\u88c5\u3059\u308b\n\n\u307e\u3055\u306b\u305d\u306e\u305f\u3081\u306e`akka.actor.FSM`\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3059\u308b\u3002\n\n## FSM\u306b\u5fc5\u8981\u306a\u578b\u3092\u5b9a\u7fa9\u3059\u308b\n\n\u5fc5\u8981\u3068\u306a\u308b\u306e\u306f\u4ee5\u4e0b\u306e3\u3064\u306e\u578b\n\n- `State`\n  - FSM\u306e\u72b6\u614b\n- `Data`\n  - FSM\u304c\u5185\u90e8\u7684\u306b\u6301\u3064\u60c5\u5831\n- `Event`\n  - FSM\u306e\u72b6\u614b\u9077\u79fb\u3092\u30ad\u30c3\u30af\u3059\u308b\u3082\u306e\n\n\u4eca\u56de\u306f\u4fe1\u53f7\u3092FSM\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3002\n\n```scala:State.scala\nsealed trait SignalState\ncase object Red extends SignalState\ncase object Green extends SignalState\ncase object Yellow extends SignalState\n```\n\n```scala:Data.scala\nsealed trait SignalData\n\nobject SignalData {\n  sealed case class SignalColor(value: String) extends SignalData\n  val RedData = SignalColor(\"red\")\n  val YellowData = SignalColor(\"yellow\")\n  val GreenData = SignalColor(\"green\")\n}\n```\n\n```scala:Event.scala\nsealed trait SignalEvent\ncase object ChangeSignal extends SignalEvent\ncase object RetainSignal extends SignalEvent\n```\n\n## FSM\u3092\u5b9f\u88c5\u3059\u308b\n\n\u5148\u307b\u3069\u7528\u610f\u3057\u305fState/Data/Event\u3092\u5229\u7528\u3057\u3066FSM\u3092\u5b9f\u88c5\u3059\u308b\u3002\nFSM\u81ea\u4f53\u306e\u5b9f\u88c5\u306fDSL\u3060\u3051\u3067\u5b8c\u7d50\u3059\u308b\u305f\u3081\u975e\u5e38\u306b\u697d\u3002\n\n```scala:SignalActor.scala\nclass SignalChangeFSMActor extends Actor with FSM[SignalState, SignalData] {\n  // \u521d\u671f\u72b6\u614b\n  startWith(Red, RedData)\n\n  // Event\u3092\u53d7\u3051\u53d6\u3063\u305f\u6642\u306e\u72b6\u614b\u9077\u79fb\n  when(Green) {\n    case Event(ChangeSignal, _) => goto(Yellow) using YellowData\n    case Event(RetainSignal, _) => stay\n  }\n\n  when(Yellow) {\n    case Event(ChangeSignal, _) => goto(Red) using RedData\n    case Event(RetainSignal, _) => stay\n  }\n\n  when(Red) {\n    case Event(ChangeSignal, _) => goto(Green) using GreenData\n    case Event(RetainSignal, _) => stay\n  }\n\n  // \u72b6\u614b\u9077\u79fb\u4e2d\u306e\u51e6\u7406\n  onTransition {\n    case Green -> Yellow =>\n      println(s\"WARN! green -> yellow: $stateData\")\n    case Yellow -> Red =>\n      println(s\"CAUTION! yellow -> red: $stateData\")\n    case Red -> Green =>\n      println(s\"OK! red -> green: $stateData\")\n  }\n\n  // Actor\u304c\u7d42\u4e86\u3059\u308b\u969b\u306e\u51e6\u7406\n  onTermination {\n    case StopEvent(_, _, _) =>\n      println(\"Shutting down FSM...\")\n  }\n\n  // \u521d\u671f\u5316\n  initialize()\n}\n```\n\nFSM\u306e\u6839\u5e79\u3068\u306a\u308b\u72b6\u614b\u9077\u79fb\u306f\u3001`when`\u306e\u5f15\u6570\u306b\u5bfe\u3059\u308b`PartialFunction`\u3067\u3001`goto`\u304b`stay`\u3092\u8fd4\u305b\u3070\u826f\u3044\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u7834\u68c4\u3057\u3066\u3044\u308b\u304c\u3001`Event`\u306e\u7b2c\u4e8c\u5f15\u6570\u306f\u73fe\u5728\u306e\u72b6\u614b\u3092\u8868\u3059`stateData`\u3068\u540c\u3058\u3082\u306e\u304c\u5165\u3063\u3066\u304f\u308b\u3089\u3057\u3044\u3002\n\n## FSM\u306aActor\u3092\u4f7f\u3046\n\n\u901a\u5e38\u306eActor\u3068\u540c\u69d8\u306b\u751f\u6210\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308c\u3070\u826f\u3044\u3002\n\n```scala\nobject ApplicationMain extends App {\n  val system = ActorSystem(\"MyActorSystem\")\n  val signalActor = system.actorOf(Props[SignalChangeFSMActor], \"fsm-signal\")\n\n  signalActor ! ChangeSignal\n  signalActor ! RetainSignal\n  signalActor ! ChangeSignal\n  signalActor ! RetainSignal\n  signalActor ! ChangeSignal\n  signalActor ! RetainSignal\n  signalActor ! ChangeSignal\n  signalActor ! RetainSignal\n\n  Thread.sleep(3000)\n  system.terminate()\n}\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u308b\u3002\n\n```\nOK! red -> green: SignalColor(red)\nWARN! green -> yellow: SignalColor(green)\nCAUTION! yellow -> red: SignalColor(yellow)\nOK! red -> green: SignalColor(red)\nShutting down FSM...\n```\n\n## \u6240\u611f\n\nActor\u306e\u5834\u5408\u3001`context.become`\u3068\u304b`context.unbecome`\u3067\u72b6\u614b\u3092\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u53ef\u80fd\u306a\u305f\u3081\u3001\u308f\u3056\u308f\u3056`akka.actor.FSM`\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u306f\u5b9f\u73fe\u3067\u304d\u308b\u3002\n`akka.actor.FSM`\u306a\u3089DSL\u3067\u72b6\u614b\u9077\u79fb\u3068\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3092\u5ba3\u8a00\u7684\u306b\u8a18\u8ff0\u3067\u304d\u308b\u306e\u3067\u3001\u3084\u3084\u72b6\u614b\u9077\u79fb\u304c\u8907\u96d1\u306a\u3082\u306e\u306a\u3069\u306fDSL\u3092\u304a\u307c\u3048\u3066\u3067\u3082\u4f7f\u3046\u4fa1\u5024\u306f\u3042\u308b\u304b\u3082\u77e5\u308c\u306a\u3044\u3002\n", "tags": ["Scala", "Akka", "actor"]}