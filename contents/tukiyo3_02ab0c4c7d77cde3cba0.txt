{"tags": ["Prolog"], "context": "\n\n\u53c2\u8003\n\n\u304a\u6c17\u697d Prolog \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nsudo apt install -y swi-prolog\n\n\n\u8d77\u52d5\nswipl --quiet\n\n\n\u547d\u4ee4\n\n\n\n\u547d\u4ee4\n\u610f\u5473\n\n\n\n\n\u547d\u4ee4,\u547d\u4ee4.\n\u547d\u4ee4\u3092,\u3067\u7d9a\u3051\u308b\u3002\u4ed6\u306e\u8a00\u8a9e\u306e ; \u306e\u3088\u3046\u306a\u3082\u306e\n\n\nread(Term)\n\u6a19\u6e96\u5165\u529b \u3092 Term \u306b\u683c\u7d0d\n\n\nwrite('hello').\necho 'hello'\n\n\nchar_code(\u751f, X).\n\u751f \u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u51fa\u529b\n\n\nhalt.\n\u7d42\u4e86\n\n\n.\n\u30b3\u30de\u30f3\u30c9\u306e\u7d42\u4e86\u3092\u8868\u3059\u69d8\u5b50\n\n\nctrl-D\n\u629c\u3051\u308b\n\n\n:-\n\u95a2\u6570\u5b9a\u7fa9\n\n\n;\n\u6b21\u306e\u7d50\u679c\u3092\u8868\u793a\n\n\n\n\n\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\n\nProlog \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306f\uff1f\n\n\nfly.swi\nfly(X) :- airplane(X).\nairplane(jet_plane).\nairplane(helicopter).\n\n\n$ swipl -f fly.swi\n?- fly(jet_plane).\ntrue.\n\n?- fly(taro).\nfalse.\n\n\n;\u3092\u5165\u529b\u3059\u308b\u3068\u6b21\u306e\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\n?- fly(Y).\nY = jet_plane ;\nY = helicopter.\n\n\n\n\u95a2\u6570\u306e\u5b9a\u7fa9\n\n\u672a\u5b9a\u7fa9\u306e\u5834\u5408\n$ swipl\n?- square(2, Y).\nERROR: toplevel: Undefined procedure: square/2 (DWIM could not correct goal)\n\n\n\na.swi\nsquare(X, Y) :- Y is X * X.\n\n\n\n\u547c\u3073\u51fa\u305b\u308b\n$ swipl -f a.swi\n?- square(2, Y).\nY = 4.\n\n\n\n(\u53c2\u8003\u307e\u3067\u306b)ruby\u3067\u66f8\u304f\u5834\u5408\u306f\u4ee5\u4e0b\ndef square(x)\n    return x * x\nend\n\ny = square(2)\np y\n\n\n\u6570\u5024\u306e\u6bd4\u8f03\u306e\u6ce8\u610f\n\n\u968f\u5206\u99b4\u67d3\u307f\u304c\u306a\u3044\u66f8\u304d\u65b9\u3067\u3059\u306d\u3002\u3002\n\n\u30ea\u30b9\u30c8\n\n\u30ea\u30b9\u30c8\u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\n\n?- [spring, summer, autumn, winter] = [A, B, C, D].\nA = spring,\nB = summer,\nC = autumn,\nD = winter.\n\n## \u53c2\u8003\n\n* [\u304a\u6c17\u697d Prolog \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580](http://www.geocities.jp/m_hiroi/prolog/prolog01.html)\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```bash:\nsudo apt install -y swi-prolog\n```\n\n## \u8d77\u52d5\n\n```bash:\nswipl --quiet\n```\n\n## \u547d\u4ee4\n\n|\u547d\u4ee4|\u610f\u5473|\n|:--|:--| \n| \u547d\u4ee4,\u547d\u4ee4. | \u547d\u4ee4\u3092,\u3067\u7d9a\u3051\u308b\u3002\u4ed6\u306e\u8a00\u8a9e\u306e ; \u306e\u3088\u3046\u306a\u3082\u306e |\n| read(Term) | \u6a19\u6e96\u5165\u529b \u3092 Term \u306b\u683c\u7d0d |\n| write('hello'). | echo 'hello' |\n| char_code(\u751f, X). | \u751f \u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u51fa\u529b |\n| `halt.` | \u7d42\u4e86 |\n| . | \u30b3\u30de\u30f3\u30c9\u306e\u7d42\u4e86\u3092\u8868\u3059\u69d8\u5b50 |\n| ctrl-D | \u629c\u3051\u308b |\n| :- | \u95a2\u6570\u5b9a\u7fa9 |\n| ; | \u6b21\u306e\u7d50\u679c\u3092\u8868\u793a |\n\n## \u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\n\n* [Prolog \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306f\uff1f](http://www.geocities.jp/m_hiroi/prolog/prolog01.html)\n\n```prolog:fly.swi\nfly(X) :- airplane(X).\nairplane(jet_plane).\nairplane(helicopter).\n```\n\n```bash:\n$ swipl -f fly.swi\n?- fly(jet_plane).\ntrue.\n\n?- fly(taro).\nfalse.\n```\n\n```bash:;\u3092\u5165\u529b\u3059\u308b\u3068\u6b21\u306e\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\n?- fly(Y).\nY = jet_plane ;\nY = helicopter.\n```\n\n## \u95a2\u6570\u306e\u5b9a\u7fa9\n\n```bash:\u672a\u5b9a\u7fa9\u306e\u5834\u5408\n$ swipl\n?- square(2, Y).\nERROR: toplevel: Undefined procedure: square/2 (DWIM could not correct goal)\n```\n\n```bash:a.swi\nsquare(X, Y) :- Y is X * X.\n```\n\n```bash:\u547c\u3073\u51fa\u305b\u308b\n$ swipl -f a.swi\n?- square(2, Y).\nY = 4.\n```\n\n```ruby:(\u53c2\u8003\u307e\u3067\u306b)ruby\u3067\u66f8\u304f\u5834\u5408\u306f\u4ee5\u4e0b\ndef square(x)\n    return x * x\nend\n\ny = square(2)\np y\n```\n\n\u6570\u5024\u306e\u6bd4\u8f03\u306e\u6ce8\u610f\n\n![\u6bd4\u8f03.png](https://qiita-image-store.s3.amazonaws.com/0/25728/277d7ccd-0656-2e7a-adee-c370d8329d7a.png)\n\n\u968f\u5206\u99b4\u67d3\u307f\u304c\u306a\u3044\u66f8\u304d\u65b9\u3067\u3059\u306d\u3002\u3002\n\n## \u30ea\u30b9\u30c8\n\n* [\u30ea\u30b9\u30c8\u306e\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0](http://www.geocities.jp/m_hiroi/prolog/prolog02.html)\n\n```\n?- [spring, summer, autumn, winter] = [A, B, C, D].\nA = spring,\nB = summer,\nC = autumn,\nD = winter.\n```\n"}