{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f bouzuya's RxJS Advent Calendar 2015 \u306e 10 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 10 \u65e5\u76ee\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u4eca\u65e5\u306f\u6628\u65e5\u306b\u7d9a\u3044\u3066 ReactiveX \u306e Observable Utility Operators \u306b\u3064\u3044\u3066 RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305f RxJS 4.0.7 \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nObservable.prototype.timeInterval\n\n\nReactiveX - TimeInterval operator\nObservable.prototype.timeInterval API Document\nObservable.prototype.timeInterval Source Code\n\n\u5024 (value) \u3068\u305d\u306e\u524d\u306e\u5024\u3068\u306e\u9593\u9694 (interval) \u3068\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u5f8c\u8ff0\u306e timestamp \u3068\u4f3c\u3066\u3044\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .timer(0, 1000)\n  .timeInterval()\n  .map(({ value, interval }) => `${value}:${interval}`)\n  .take(4)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0:2\n// onNext: 1:1002\n// onNext: 2:999\n// onNext: 3:997\n// onCompleted\n\n\nObservable.prototype.timestamp\n\n\nReactiveX - Timestamp operator\nObservable.prototype.timestamp API Document\nObservable.prototype.timestamp Source Code\n\n\u5024 (value) \u3068\u305d\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7 (timestamp) \u3068\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u524d\u8ff0\u306e timestamp \u3068\u4f3c\u3066\u3044\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .timer(0, 1000)\n  .timestamp()\n  .map(({ value, timestamp }) => `${value}:${timestamp}`)\n  .take(4)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0:1449755362020\n// onNext: 1:1449755363025\n// onNext: 2:1449755364023\n// onNext: 3:1449755365022\n// onCompleted\n\n\nObservable.prototype.timeout\n\n\nReactiveX - Timeout operator\nObservable.prototype.timeout API Document\nObservable.prototype.timeout Source Code\n\n\u6307\u5b9a\u3057\u305f\u6642\u9593\u3088\u308a\u3082 interval \u304c\u3042\u3044\u305f\u5834\u5408\u306b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3068\u3057\u3066\u30a8\u30e9\u30fc\u306b\u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .concat(\n    Observable.timer(100),\n    Observable.timer(200),\n    Observable.timer(300),\n    Observable.timer(400),\n    Observable.timer(500)\n  )\n  .timeInterval()\n  .map(({ value, interval }) => `${value}:${interval}`)\n  .timeout(350)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0:106\n// onNext: 0:224\n// onNext: 0:306\n// onError: TimeoutError: Timeout has occurred\n\n\u500b\u4eba\u7684\u306b\u306f Rx \u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u305d\u3093\u306a\u306b\u4fbf\u5229\u3060\u3068\u601d\u3048\u306a\u3044\u306e\u3067\u3001\u7a4d\u6975\u7684\u306b\u4f7f\u3044\u305f\u3044\u3068\u306f\u601d\u3048\u306a\u3044\u306e\u3067\u3059\u304c\u2026\u2026\u3002\n\nObservable.using\n\n\nReactiveX - Using operator\nObservable.prototype.using API Document\nObservable.prototype.using Source Code\n\n\u307e\u3060 Disposable \u306b\u3064\u3044\u3066\u307e\u3063\u305f\u304f\u89e6\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u3042\u307e\u308a\u66f8\u304d\u305f\u304f\u306a\u3044\u306e\u3067\u3059\u3051\u3069\u2026\u2026\u3002\n.NET \u3067\u306f\u304a\u306a\u3058\u307f\u306e using \u69cb\u6587\u306b\u8fd1\u3044\u3082\u306e\u3002Java \u3060\u3068 try (...) {} \u304c\u8fd1\u3044\u3067\u3059\u3002\n\u52d5\u4f5c\u3068\u3057\u3066\u306f Disposable \u3092\u5fc5\u305a dispose \u3057\u3066\u304f\u308c\u308b\u306f\u305a\u3067\u3059\u3002 subscribe \u304c\u8fd4\u3059 Disposable (Rx \u7684\u306b\u306f Subscription \u3068\u547c\u3070\u308c\u3066\u3044\u308b\u306f\u305a\u2026\u2026) \u3092\u660e\u793a\u7684\u306b dispose \u3059\u308b\u3068\u826f\u3044\u306f\u305a\u3067\u3059\u3002\nimport { Observable } from 'rx';\n\nclass MyDisposable {\n  dispose() {\n    console.log('disposed');\n  }\n}\n\nObservable\n  .using(\n    () => new MyDisposable(),\n    (resource) => {\n      // ... use disposable resource ...\n      return Observable.empty();\n    }\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onCompleted\n// disposed\n\n\u3053\u306e\u4f8b\u3067\u306f\u660e\u793a\u7684\u306b dispose \u306f\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001dispose \u304c\u547c\u3070\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u304a\u305d\u3089\u304f onCompleted \u3067 dispose \u3055\u308c\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059 (\u672a\u78ba\u8a8d) \u3002\n\u307e\u305f Disposable \u95a2\u9023\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3068\u304d\u306b\u89e6\u308c\u308b\u3064\u3082\u308a\u3067\u3059\u3002\n\nObservable.prototype.materialize / Observable.prototype.dematerialize\n\n\nReactiveX - Materialize/Dematerialize operator\nObservable.prototype.materialize API Document\nObservable.prototype.materialize Source Code\nObservable.prototype.dematerialize API Document\nObservable.prototype.dematerialize Source Code\n\nonNext \u3084 onCompleted \u3084 onError \u81ea\u4f53\u3092\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\u8aac\u660e\u304c\u96e3\u3057\u3044\u306e\u3067\u4f8b\u3092\u6319\u3052\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .materialize()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: OnNext(1)\n// onNext: OnNext(2)\n// onNext: OnNext(3)\n// onNext: OnCompleted()\n// onCompleted\n\n\u3053\u3053\u3067\u6d41\u308c\u3066\u304d\u3066\u3044\u308b\u306e\u306f Rx.Notification \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3059\u3002OnNext / OnCompleted / OnError \u304c\u3042\u308a\u307e\u3059\u3002OnNext \u306f value \u3092 OnError \u306f error \u3092\u6301\u3061\u307e\u3059\u3002\nmaterialize \u306f Observalbe \u3092\u6d41\u308c\u308b\u30c7\u30fc\u30bf\u3092 Notification \u306b\u5909\u63db\u3057\u307e\u3059\u3002 dematerialize \u306f\u305d\u306e\u9006\u3092\u884c\u3044\u307e\u3059\u3002\n\u4eca\u5ea6\u306f\u3001\u660e\u793a\u7684\u306b Notification \u306e Observable \u3092 dematerialize \u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nimport { Observable, Notification } from 'rx';\n\nObservable\n  .from([\n    Notification.createOnNext(4),\n    Notification.createOnNext(5),\n    Notification.createOnCompleted(),\n    Notification.createOnNext(6)\n  ])\n  .dematerialize()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 4\n// onNext: 5\n// onCompleted\n\nonCompleted \u306e\u3042\u3068\u306b\u306f\u30c7\u30fc\u30bf\u306f\u6d41\u308c\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u5f53\u7136\u305d\u3046\u3067\u3059\u3088\u306d\u3002\n\u30e1\u30bf\u306a\u64cd\u4f5c\u3092\u3057\u305f\u304f\u306a\u3063\u305f\u3068\u304d\u306b\u4f7f\u3048\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u304a\u308f\u308a\u306b\n\u4eca\u65e5\u306f\u6628\u65e5\u306b\u7d9a\u304d Observable \u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3092\u898b\u307e\u3057\u305f\u3002\u77e5\u3063\u3066\u304a\u304f\u3068\u4fbf\u5229\u306a\u5834\u9762\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [bouzuya's RxJS Advent Calendar 2015](http://www.adventar.org/calendars/1200) \u306e 10 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 10 \u65e5\u76ee\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u4eca\u65e5\u306f\u6628\u65e5\u306b\u7d9a\u3044\u3066 [ReactiveX \u306e Observable Utility Operators](http://reactivex.io/documentation/operators.html#utility) \u306b\u3064\u3044\u3066 [RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/observable.md)\u3084\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u307e\u305f [RxJS 4.0.7](https://github.com/Reactive-Extensions/RxJS/tree/v4.0.7) \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n## `Observable.prototype.timeInterval`\n\n- [ReactiveX - TimeInterval operator](http://reactivex.io/documentation/operators/timeinterval.html)\n- [`Observable.prototype.timeInterval` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/timeinterval.md)\n- [`Observable.prototype.timeInterval` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/timeinterval.js)\n\n\u5024 (`value`) \u3068\u305d\u306e\u524d\u306e\u5024\u3068\u306e\u9593\u9694 (`interval`) \u3068\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u5f8c\u8ff0\u306e `timestamp` \u3068\u4f3c\u3066\u3044\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .timer(0, 1000)\n  .timeInterval()\n  .map(({ value, interval }) => `${value}:${interval}`)\n  .take(4)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0:2\n// onNext: 1:1002\n// onNext: 2:999\n// onNext: 3:997\n// onCompleted\n```\n\n## `Observable.prototype.timestamp`\n\n- [ReactiveX - Timestamp operator](http://reactivex.io/documentation/operators/timestamp.html)\n- [`Observable.prototype.timestamp` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/timestamp.md)\n- [`Observable.prototype.timestamp` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/timestamp.js)\n\n\u5024 (`value`) \u3068\u305d\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7 (`timestamp`) \u3068\u306b\u5909\u63db\u3057\u307e\u3059\u3002\u524d\u8ff0\u306e `timestamp` \u3068\u4f3c\u3066\u3044\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .timer(0, 1000)\n  .timestamp()\n  .map(({ value, timestamp }) => `${value}:${timestamp}`)\n  .take(4)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0:1449755362020\n// onNext: 1:1449755363025\n// onNext: 2:1449755364023\n// onNext: 3:1449755365022\n// onCompleted\n```\n\n## `Observable.prototype.timeout`\n\n- [ReactiveX - Timeout operator](http://reactivex.io/documentation/operators/timeout.html)\n- [`Observable.prototype.timeout` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/timeout.md)\n- [`Observable.prototype.timeout` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/timeout.js)\n\n\u6307\u5b9a\u3057\u305f\u6642\u9593\u3088\u308a\u3082 `interval` \u304c\u3042\u3044\u305f\u5834\u5408\u306b\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3068\u3057\u3066\u30a8\u30e9\u30fc\u306b\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .concat(\n    Observable.timer(100),\n    Observable.timer(200),\n    Observable.timer(300),\n    Observable.timer(400),\n    Observable.timer(500)\n  )\n  .timeInterval()\n  .map(({ value, interval }) => `${value}:${interval}`)\n  .timeout(350)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0:106\n// onNext: 0:224\n// onNext: 0:306\n// onError: TimeoutError: Timeout has occurred\n```\n\n\u500b\u4eba\u7684\u306b\u306f Rx \u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306f\u305d\u3093\u306a\u306b\u4fbf\u5229\u3060\u3068\u601d\u3048\u306a\u3044\u306e\u3067\u3001\u7a4d\u6975\u7684\u306b\u4f7f\u3044\u305f\u3044\u3068\u306f\u601d\u3048\u306a\u3044\u306e\u3067\u3059\u304c\u2026\u2026\u3002\n\n## `Observable.using`\n\n- [ReactiveX - Using operator](http://reactivex.io/documentation/operators/using.html)\n- [`Observable.prototype.using` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/using.md)\n- [`Observable.prototype.using` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/using.js)\n\n\u307e\u3060 `Disposable` \u306b\u3064\u3044\u3066\u307e\u3063\u305f\u304f\u89e6\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u3042\u307e\u308a\u66f8\u304d\u305f\u304f\u306a\u3044\u306e\u3067\u3059\u3051\u3069\u2026\u2026\u3002\n\n.NET \u3067\u306f\u304a\u306a\u3058\u307f\u306e `using` \u69cb\u6587\u306b\u8fd1\u3044\u3082\u306e\u3002Java \u3060\u3068 `try (...) {}` \u304c\u8fd1\u3044\u3067\u3059\u3002\n\n\u52d5\u4f5c\u3068\u3057\u3066\u306f `Disposable` \u3092\u5fc5\u305a `dispose` \u3057\u3066\u304f\u308c\u308b\u306f\u305a\u3067\u3059\u3002 `subscribe` \u304c\u8fd4\u3059 `Disposable` (Rx \u7684\u306b\u306f `Subscription` \u3068\u547c\u3070\u308c\u3066\u3044\u308b\u306f\u305a\u2026\u2026) \u3092\u660e\u793a\u7684\u306b `dispose` \u3059\u308b\u3068\u826f\u3044\u306f\u305a\u3067\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nclass MyDisposable {\n  dispose() {\n    console.log('disposed');\n  }\n}\n\nObservable\n  .using(\n    () => new MyDisposable(),\n    (resource) => {\n      // ... use disposable resource ...\n      return Observable.empty();\n    }\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onCompleted\n// disposed\n```\n\n\u3053\u306e\u4f8b\u3067\u306f\u660e\u793a\u7684\u306b `dispose` \u306f\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001`dispose` \u304c\u547c\u3070\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u304a\u305d\u3089\u304f `onCompleted` \u3067 `dispose` \u3055\u308c\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059 (\u672a\u78ba\u8a8d) \u3002\n\n\u307e\u305f `Disposable` \u95a2\u9023\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3068\u304d\u306b\u89e6\u308c\u308b\u3064\u3082\u308a\u3067\u3059\u3002\n\n## `Observable.prototype.materialize` / `Observable.prototype.dematerialize`\n\n- [ReactiveX - Materialize/Dematerialize operator](http://reactivex.io/documentation/operators/materialize-dematerialize.html)\n- [`Observable.prototype.materialize` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/materialize.md)\n- [`Observable.prototype.materialize` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/materialize.js)\n- [`Observable.prototype.dematerialize` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/dematerialize.md)\n- [`Observable.prototype.dematerialize` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/dematerialize.js)\n\n`onNext` \u3084 `onCompleted` \u3084 `onError` \u81ea\u4f53\u3092\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\u8aac\u660e\u304c\u96e3\u3057\u3044\u306e\u3067\u4f8b\u3092\u6319\u3052\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .materialize()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: OnNext(1)\n// onNext: OnNext(2)\n// onNext: OnNext(3)\n// onNext: OnCompleted()\n// onCompleted\n```\n\n\u3053\u3053\u3067\u6d41\u308c\u3066\u304d\u3066\u3044\u308b\u306e\u306f `Rx.Notification` \u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3059\u3002`OnNext` / `OnCompleted` / `OnError` \u304c\u3042\u308a\u307e\u3059\u3002`OnNext` \u306f `value` \u3092 `OnError` \u306f `error` \u3092\u6301\u3061\u307e\u3059\u3002\n\n`materialize` \u306f `Observalbe` \u3092\u6d41\u308c\u308b\u30c7\u30fc\u30bf\u3092 `Notification` \u306b\u5909\u63db\u3057\u307e\u3059\u3002 `dematerialize` \u306f\u305d\u306e\u9006\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u4eca\u5ea6\u306f\u3001\u660e\u793a\u7684\u306b `Notification` \u306e `Observable` \u3092 `dematerialize` \u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```js\nimport { Observable, Notification } from 'rx';\n\nObservable\n  .from([\n    Notification.createOnNext(4),\n    Notification.createOnNext(5),\n    Notification.createOnCompleted(),\n    Notification.createOnNext(6)\n  ])\n  .dematerialize()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 4\n// onNext: 5\n// onCompleted\n```\n\n`onCompleted` \u306e\u3042\u3068\u306b\u306f\u30c7\u30fc\u30bf\u306f\u6d41\u308c\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u5f53\u7136\u305d\u3046\u3067\u3059\u3088\u306d\u3002\n\n\u30e1\u30bf\u306a\u64cd\u4f5c\u3092\u3057\u305f\u304f\u306a\u3063\u305f\u3068\u304d\u306b\u4f7f\u3048\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n# \u304a\u308f\u308a\u306b\n\n\u4eca\u65e5\u306f\u6628\u65e5\u306b\u7d9a\u304d `Observable` \u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3092\u898b\u307e\u3057\u305f\u3002\u77e5\u3063\u3066\u304a\u304f\u3068\u4fbf\u5229\u306a\u5834\u9762\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\n", "tags": ["RxJS", "Rx", "ReactiveExtensions"]}