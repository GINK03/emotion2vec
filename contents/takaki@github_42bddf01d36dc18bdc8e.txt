{"context": "\n\n\u524d\u63d0\n\nReact\nreact-redux\nreact-actions\nPromise\n\nRedux \u3067 Action \u3092\u51e6\u7406\u306b\u975e\u540c\u671f\u51e6\u7406\uff0cajax \u3092\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u66f8\u304d\u65b9\u304c\u5c11\u3057\u3081\u3093\u3069\u304f\u3055\u3044\u3002 redux-promise \u3068\u3044\u3046\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f7f\u3046\u3068\u304d\u308c\u3044\u306b\u66f8\u3051\u308b\u306e\u3060\u304c README \u306b\u307e\u3068\u3082\u306b\u4f7f\u3044\u65b9\u306e\u8aac\u660e\u304c\u66f8\u3044\u3066\u306a\u3044\u3002\n\u5c11\u3057\u89e3\u8aac\u3092\u3059\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\nimport  React from 'react';\nimport  ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { connect } from 'react-redux'\nimport { createAction, handleAction, handleActions } from 'redux-actions';\nimport promiseMiddleware from 'redux-promise';\nimport axios from 'axios';\n\nconst App = React.createClass({\n    getLogin: function() {\n    },\n    render: function() {\n        return (\n            <div>\n                <h1>name = {this.props.login}</h1>\n                <button onClick={this.props.setLogin}>Get</button>\n                <button onClick={this.props.reset}>Reset</button>\n            </div>\n        )\n    }\n})\n\nconst reset = createAction('RESET');\nconst setLogin = createAction('SET_LOGIN');\n\nconst reducer = handleActions({\n    [setLogin]: (state, action) => Object.assign({}, state, {\n        login: action.payload\n    }),\n    [reset]: (state, action) => Object.assign({}, state, {\n        login: \"reset\"\n    }),\n}, {\n    login: \"empty\",\n});\n\nconst store = createStore(reducer);\n\nconst mapStateToProps = (state, props) => state;\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        setLogin: function() {\n            axios.get(\"https://api.github.com/users/takaki\")\n                 .then(function(response) {\n                dispatch(setLogin(response.data.name));\n            });\n        },\n        reset: () => dispatch(reset())\n    }\n};\n\nconst RApp = connect(mapStateToProps,mapDispatchToProps)(App)\n\nReactDOM.render(\n    <Provider store={store}>\n        <RApp />\n    </Provider>,\n    document.getElementById('content')\n);\n\ngithub \u306e API \u3092\u5229\u7528\u3057\u3066 ajax \u3067\u30c7\u30fc\u30bf\u3092\u53d6\u3063\u3066\u304d\u3066\u8868\u793a\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3042\u308b\u3002\nmapDispatchtoProps \u306e setLogin \u306e\u5b9a\u7fa9\u4e2d\u3067 axios \u3092\u4f7f\u3044 then \u306e\u4e2d\u3067dispatch\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3002\u3053\u306e\u4e2d\u3067\u3054\u3061\u3083\u3054\u3061\u3083\u66f8\u304f\u3088\u308aaction \u306e\u5b9a\u7fa9\u306b\u62bc\u3057\u8fbc\u3081\u305f\u3044\u3002\nconst setLogin = createAction('SET_LOGIN', () => \n            axios.get(\"https://api.github.com/users/takaki\")\n                 .then(function(response) {\n                return response.data.name;\n            });\n\n\u3068\u66f8\u3051\u308c\u3070\u3044\u3044\u306e\u3060\u304c\u3053\u306e\u307e\u307e\u3060\u3068Promise\u304c\u51e6\u7406\u3067\u304d\u306a\u3044\u306e\u3067\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n\nredux-promise\u306e\u5c0e\u5165\n\u3053\u308c\u3092\u304d\u3061\u3093\u3068\u52d5\u304f\u3088\u3046\u306b\u51e6\u7406\u3057\u3066\u304f\u308c\u308b\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u304credux-promise\u3067\u3042\u308b\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fnpm\u3067\u3044\u3064\u3082\u306e\u3088\u3046\u306b\u3002\nnpm install --save redux-promise\n\ncreateStore \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068 promiseMiddleware \u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u3002\nimport promiseMiddleware from 'redux-promise';\n\n#...\n\nconst store = createStore(reducer, applyMiddleware(promiseMiddleware));\n\n\u3053\u3053\u3067\u5148\u7a0b\u306e\u3088\u3046\u306bsetLogin \u3092\u66f8\u304d\u63db\u3048\u308b\u3002\nconst setLogin = createAction('SET_LOGIN', () =>\n    axios.get(\"https://api.github.com/users/takaki\").then(function(response) {\n        return response.data.name;\n    })\n);\n\n\u6b21\u306b\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u3082\u66f8\u304d\u63db\u3048\u308b\u3002\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        setLogin: function() {\n            dispatch(setLogin());\n        },\n        reset: () => dispatch(reset())\n    }\n};\n\n\u3053\u306e\u3088\u3046\u306b\u81ea\u7136\u306a\u5f62\u3067\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\u53c2\u8003\n\nhttps://github.com/acdlite/redux-promise\n\n# \u524d\u63d0\n* React\n* react-redux\n* react-actions\n* Promise\n\nRedux \u3067 Action \u3092\u51e6\u7406\u306b\u975e\u540c\u671f\u51e6\u7406\uff0cajax \u3092\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068\u66f8\u304d\u65b9\u304c\u5c11\u3057\u3081\u3093\u3069\u304f\u3055\u3044\u3002 redux-promise \u3068\u3044\u3046\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3092\u4f7f\u3046\u3068\u304d\u308c\u3044\u306b\u66f8\u3051\u308b\u306e\u3060\u304c README \u306b\u307e\u3068\u3082\u306b\u4f7f\u3044\u65b9\u306e\u8aac\u660e\u304c\u66f8\u3044\u3066\u306a\u3044\u3002\n\u5c11\u3057\u89e3\u8aac\u3092\u3059\u308b\u3002\n\n# \u30b5\u30f3\u30d7\u30eb\n```js\nimport  React from 'react';\nimport  ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport { connect } from 'react-redux'\nimport { createAction, handleAction, handleActions } from 'redux-actions';\nimport promiseMiddleware from 'redux-promise';\nimport axios from 'axios';\n\nconst App = React.createClass({\n    getLogin: function() {\n    },\n    render: function() {\n        return (\n            <div>\n                <h1>name = {this.props.login}</h1>\n                <button onClick={this.props.setLogin}>Get</button>\n                <button onClick={this.props.reset}>Reset</button>\n            </div>\n        )\n    }\n})\n\nconst reset = createAction('RESET');\nconst setLogin = createAction('SET_LOGIN');\n\nconst reducer = handleActions({\n    [setLogin]: (state, action) => Object.assign({}, state, {\n        login: action.payload\n    }),\n    [reset]: (state, action) => Object.assign({}, state, {\n        login: \"reset\"\n    }),\n}, {\n    login: \"empty\",\n});\n\nconst store = createStore(reducer);\n\nconst mapStateToProps = (state, props) => state;\n\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        setLogin: function() {\n            axios.get(\"https://api.github.com/users/takaki\")\n                 .then(function(response) {\n                dispatch(setLogin(response.data.name));\n            });\n        },\n        reset: () => dispatch(reset())\n    }\n};\n\nconst RApp = connect(mapStateToProps,mapDispatchToProps)(App)\n\nReactDOM.render(\n    <Provider store={store}>\n        <RApp />\n    </Provider>,\n    document.getElementById('content')\n);\n```\n\ngithub \u306e API \u3092\u5229\u7528\u3057\u3066 ajax \u3067\u30c7\u30fc\u30bf\u3092\u53d6\u3063\u3066\u304d\u3066\u8868\u793a\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3042\u308b\u3002\nmapDispatchtoProps \u306e setLogin \u306e\u5b9a\u7fa9\u4e2d\u3067 axios \u3092\u4f7f\u3044 then \u306e\u4e2d\u3067dispatch\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3002\u3053\u306e\u4e2d\u3067\u3054\u3061\u3083\u3054\u3061\u3083\u66f8\u304f\u3088\u308aaction \u306e\u5b9a\u7fa9\u306b\u62bc\u3057\u8fbc\u3081\u305f\u3044\u3002\n\n```js\nconst setLogin = createAction('SET_LOGIN', () => \n            axios.get(\"https://api.github.com/users/takaki\")\n                 .then(function(response) {\n                return response.data.name;\n            });\n```\n\u3068\u66f8\u3051\u308c\u3070\u3044\u3044\u306e\u3060\u304c\u3053\u306e\u307e\u307e\u3060\u3068Promise\u304c\u51e6\u7406\u3067\u304d\u306a\u3044\u306e\u3067\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n\n# redux-promise\u306e\u5c0e\u5165\n\u3053\u308c\u3092\u304d\u3061\u3093\u3068\u52d5\u304f\u3088\u3046\u306b\u51e6\u7406\u3057\u3066\u304f\u308c\u308b\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u304credux-promise\u3067\u3042\u308b\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fnpm\u3067\u3044\u3064\u3082\u306e\u3088\u3046\u306b\u3002\n\n```\nnpm install --save redux-promise\n```\n\ncreateStore \u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068 promiseMiddleware \u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n```\nimport promiseMiddleware from 'redux-promise';\n\n#...\n\nconst store = createStore(reducer, applyMiddleware(promiseMiddleware));\n```\n\n\u3053\u3053\u3067\u5148\u7a0b\u306e\u3088\u3046\u306bsetLogin \u3092\u66f8\u304d\u63db\u3048\u308b\u3002\n\n```js\nconst setLogin = createAction('SET_LOGIN', () =>\n    axios.get(\"https://api.github.com/users/takaki\").then(function(response) {\n        return response.data.name;\n    })\n);\n```\n\n\u6b21\u306b\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u3082\u66f8\u304d\u63db\u3048\u308b\u3002\n\n```js\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        setLogin: function() {\n            dispatch(setLogin());\n        },\n        reset: () => dispatch(reset())\n    }\n};\n```\n\u3053\u306e\u3088\u3046\u306b\u81ea\u7136\u306a\u5f62\u3067\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n# \u53c2\u8003\n* https://github.com/acdlite/redux-promise\n", "tags": ["JavaScript", "React", "redux"]}