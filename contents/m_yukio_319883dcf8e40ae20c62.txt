{"context": "public\u3068internal\u3001private\u306e\u4e8b\u3002\nSwift\u3092\u7d39\u4ecb\u3059\u308b\u969b\u3001\u30ac\u30fc\u30c9\u306e\u305f\u3081\u3001\u5b89\u5168\u306e\u305f\u3081\u3001\u3068\u3044\u3046\u8aac\u660e\u3092\u3055\u308c\u308b\u4e8b\u304c\u591a\u3044\u3002\u3042\u3048\u3066\u7269\u8b70\u3092\u91b8\u3057\u51fa\u3059\u304c\u3001\u5371\u967a\u306a\u7d4c\u9a13\u304c\u3042\u308b\u304b\u3002\u305d\u3057\u3066\u3001\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306e\u5834\u5408\u3001\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u306e\u3082\u3001\u305d\u308c\u3092\u4f7f\u3046\u306e\u3082\u81ea\u5206\u3068\u3044\u3046\u5834\u5408\u304c\u3042\u308b\u304c\u3001\u672c\u5f53\u306b\u5b89\u5168\u306e\u305f\u3081\uff1f\n\u8457\u8005\u306f\u3001private\u306f\u3001\u305d\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u78ba\u8a8d\u3059\u308b\u969b\u3001\u7121\u8996\u3057\u3066\u3044\u3044\u3088\u7a0b\u5ea6\u306e\u610f\u5473\u3060\u3068\u601d\u3063\u3066\u3044\u308b\u3002\u306a\u306e\u3067\u3001Private\u3068public\u306e\u9806\u3067\u8a18\u8ff0\u3057\u3066\u3044\u308b\u3002\nclass Demo {\n    public var name;\n    public func play() {\n        playGame();\n    }\n    private var address;\n    private func playGame() {\n    }\n}\n\n\u305d\u3046\u8003\u3048\u308b\u3068\u3001Objective-C\u306f\u3088\u304b\u3063\u305f\u3058\u3083\u3093\u3002\n@interface Document : NSObject\n@property (strong, nonatomic) NSString *version;\n+ (Document *)sharedDocument;\n- (void)load;\n- (void)save;\n@end\n\n\n@interface Document ()\n- (void)_clearDefaults;\n- (void)_updateDefaults;\n- (void)_loadDefaults;\n- (NSString*)_modelDir;\n- (NSString*)_modelPath;\n@end\n \n@implementation Document\n@synthesize version = _version;\n \n+ (Document *)sharedDocument;\n{\n    static Document *_sharedInstance = nil;\n    static dispatch_once_t onceToken;\n    \n    dispatch_once(&onceToken, ^{\n        _sharedInstance = [[Document alloc] init];\n    });\n    return _sharedInstance;\n}\n \n- (id)init\n{\n    self = [super init];\n    if (self) {\n        _version = [[[NSBundle mainBundle] infoDictionary] objectForKey:@\"CFBundleShortVersionString\"];\n    }\n    return self;\n}\n \n- (void)dealloc\n{\n    self.version = nil;\n}\n \n- (void)load\n{\n    [self _loadDefaults];\n    \n    NSString    *modelPath = [self _modelPath];\n    if ((! modelPath) || (! [[NSFileManager defaultManager] fileExistsAtPath:modelPath])) {\n        return;\n    }\n}\n \n- (void)save\n{\n    [self _updateDefaults];\n    \n    NSFileManager   *fileManager = [NSFileManager defaultManager];\n    \n    NSString    *modelDir = [self _modelDir];\n    if (![fileManager fileExistsAtPath:modelDir]) {\n        NSError *error = nil;\n        [fileManager createDirectoryAtPath:modelDir\n               withIntermediateDirectories:YES\n                                attributes:nil\n                                     error:&error];\n    }\n    \n    NSString    *modelPath = [self _modelPath];\n    [NSKeyedArchiver archiveRootObject:self.indexArray toFile:modelPath];\n}\n \n- (void)_clearDefaults\n{\n    if ([[NSUserDefaults standardUserDefaults] objectForKey:@\"version\"]) {\n        [[NSUserDefaults standardUserDefaults] removeObjectForKey:@\"version\"];\n    }\n}\n \n- (void)_updateDefaults\n{\n    NSString    *versionString = nil;\n    if ([[NSUserDefaults standardUserDefaults] objectForKey:@\"version\"]) {\n        versionString = [[NSUserDefaults standardUserDefaults] objectForKey:@\"version\"];\n    }\n    if ((versionString == nil) || ([versionString compare:self.version] != NSOrderedSame)) {\n        [[NSUserDefaults standardUserDefaults] setObject:self.version forKey:@\"version\"];\n        [[NSUserDefaults standardUserDefaults] synchronize];\n    }\n}\n \n- (void)_loadDefaults\n{\n    NSString    *versionString = nil;\n    if ([[NSUserDefaults standardUserDefaults] objectForKey:@\"version\"]) {\n        versionString = [[NSUserDefaults standardUserDefaults] objectForKey:@\"version\"];\n    }\n    if ((versionString == nil) || ([versionString compare:self.version] != NSOrderedSame)) {\n        /* \u30d0\u30fc\u30b8\u30e7\u30f3\u4e0d\u4e00\u81f4\u5bfe\u5fdc */\n    }\n    else {\n        /* \u8aad\u307f\u51fa\u3057 */\n    }\n}\n \n- (NSString*)_modelDir\n{\n    NSArray*    paths;\n    NSString*   path;\n    paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\n    if ([paths count] < 1) {\n        return nil;\n    }\n    path = [paths objectAtIndex:0];\n    \n    path = [path stringByAppendingPathComponent:@\".model\"];\n    return path;\n}\n \n- (NSString*)_modelPath\n{\n    NSString*   path;\n    path = [[self _modelDir] stringByAppendingPathComponent:@\"model.dat\"];\n    return path;\n}\n \n@end\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nGitHub\u304b\u3089\u3069\u3046\u305e\u3002\nhttps://github.com/murakami/workbook/tree/master/ios/Hand - GitHub\n\u95a2\u9023\u60c5\u5831\n\u6587\u5316\u3092\u8abf\u548c\u3055\u305b\u308b\n\u3010Cocoa\u7df4\u7fd2\u5e33\u3011\nhttp://www.bitz.co.jp/weblog/\nhttp://ameblo.jp/bitz/\uff08\u30df\u30e9\u30fc\u30fb\u30b5\u30a4\u30c8\uff09\n<p>public\u3068internal\u3001private\u306e\u4e8b\u3002</p>\n\n<p>Swift\u3092\u7d39\u4ecb\u3059\u308b\u969b\u3001\u30ac\u30fc\u30c9\u306e\u305f\u3081\u3001\u5b89\u5168\u306e\u305f\u3081\u3001\u3068\u3044\u3046\u8aac\u660e\u3092\u3055\u308c\u308b\u4e8b\u304c\u591a\u3044\u3002<br />\u3042\u3048\u3066\u7269\u8b70\u3092\u91b8\u3057\u51fa\u3059\u304c\u3001\u5371\u967a\u306a\u7d4c\u9a13\u304c\u3042\u308b\u304b\u3002\u305d\u3057\u3066\u3001\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306e\u5834\u5408\u3001\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u306e\u3082\u3001\u305d\u308c\u3092\u4f7f\u3046\u306e\u3082\u81ea\u5206\u3068\u3044\u3046\u5834\u5408\u304c\u3042\u308b\u304c\u3001\u672c\u5f53\u306b\u5b89\u5168\u306e\u305f\u3081\uff1f</p>\n\n<p>\u8457\u8005\u306f\u3001private\u306f\u3001\u305d\u306e\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u78ba\u8a8d\u3059\u308b\u969b\u3001\u7121\u8996\u3057\u3066\u3044\u3044\u3088\u7a0b\u5ea6\u306e\u610f\u5473\u3060\u3068\u601d\u3063\u3066\u3044\u308b\u3002<br />\u306a\u306e\u3067\u3001Private\u3068public\u306e\u9806\u3067\u8a18\u8ff0\u3057\u3066\u3044\u308b\u3002</p>\n\n<pre><code>class Demo {\n    public var name;\n    public func play() {\n        playGame();\n    }\n    private var address;\n    private func playGame() {\n    }\n}\n</code></pre>\n\n<p>\u305d\u3046\u8003\u3048\u308b\u3068\u3001Objective-C\u306f\u3088\u304b\u3063\u305f\u3058\u3083\u3093\u3002</p>\n\n<pre><code>@interface Document : NSObject\n@property (strong, nonatomic) NSString *version;\n+ (Document *)sharedDocument;\n- (void)load;\n- (void)save;\n@end\n</code></pre>\n\n<pre><code>\n@interface Document ()\n- (void)_clearDefaults;\n- (void)_updateDefaults;\n- (void)_loadDefaults;\n- (NSString*)_modelDir;\n- (NSString*)_modelPath;\n@end\n \n@implementation Document\n@synthesize version = _version;\n \n+ (Document *)sharedDocument;\n{\n    static Document *_sharedInstance = nil;\n    static dispatch_once_t onceToken;\n    \n    dispatch_once(&onceToken, ^{\n        _sharedInstance = [[Document alloc] init];\n    });\n    return _sharedInstance;\n}\n \n- (id)init\n{\n    self = [super init];\n    if (self) {\n        _version = [[[NSBundle mainBundle] infoDictionary] objectForKey:@\"CFBundleShortVersionString\"];\n    }\n    return self;\n}\n \n- (void)dealloc\n{\n    self.version = nil;\n}\n \n- (void)load\n{\n    [self _loadDefaults];\n    \n    NSString    *modelPath = [self _modelPath];\n    if ((! modelPath) || (! [[NSFileManager defaultManager] fileExistsAtPath:modelPath])) {\n        return;\n    }\n}\n \n- (void)save\n{\n    [self _updateDefaults];\n    \n    NSFileManager   *fileManager = [NSFileManager defaultManager];\n    \n    NSString    *modelDir = [self _modelDir];\n    if (![fileManager fileExistsAtPath:modelDir]) {\n        NSError *error = nil;\n        [fileManager createDirectoryAtPath:modelDir\n               withIntermediateDirectories:YES\n                                attributes:nil\n                                     error:&error];\n    }\n    \n    NSString    *modelPath = [self _modelPath];\n    [NSKeyedArchiver archiveRootObject:self.indexArray toFile:modelPath];\n}\n \n- (void)_clearDefaults\n{\n    if ([[NSUserDefaults standardUserDefaults] objectForKey:@\"version\"]) {\n        [[NSUserDefaults standardUserDefaults] removeObjectForKey:@\"version\"];\n    }\n}\n \n- (void)_updateDefaults\n{\n    NSString    *versionString = nil;\n    if ([[NSUserDefaults standardUserDefaults] objectForKey:@\"version\"]) {\n        versionString = [[NSUserDefaults standardUserDefaults] objectForKey:@\"version\"];\n    }\n    if ((versionString == nil) || ([versionString compare:self.version] != NSOrderedSame)) {\n        [[NSUserDefaults standardUserDefaults] setObject:self.version forKey:@\"version\"];\n        [[NSUserDefaults standardUserDefaults] synchronize];\n    }\n}\n \n- (void)_loadDefaults\n{\n    NSString    *versionString = nil;\n    if ([[NSUserDefaults standardUserDefaults] objectForKey:@\"version\"]) {\n        versionString = [[NSUserDefaults standardUserDefaults] objectForKey:@\"version\"];\n    }\n    if ((versionString == nil) || ([versionString compare:self.version] != NSOrderedSame)) {\n        /* \u30d0\u30fc\u30b8\u30e7\u30f3\u4e0d\u4e00\u81f4\u5bfe\u5fdc */\n    }\n    else {\n        /* \u8aad\u307f\u51fa\u3057 */\n    }\n}\n \n- (NSString*)_modelDir\n{\n    NSArray*    paths;\n    NSString*   path;\n    paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);\n    if ([paths count] < 1) {\n        return nil;\n    }\n    path = [paths objectAtIndex:0];\n    \n    path = [path stringByAppendingPathComponent:@\".model\"];\n    return path;\n}\n \n- (NSString*)_modelPath\n{\n    NSString*   path;\n    path = [[self _modelDir] stringByAppendingPathComponent:@\"model.dat\"];\n    return path;\n}\n \n@end\n</code></pre>\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nGitHub\u304b\u3089\u3069\u3046\u305e\u3002<br />\n<a href=\"https://github.com/murakami/workbook/tree/master/ios/Hand\">https://github.com/murakami/workbook/tree/master/ios/Hand</a> - GitHub<br />\n\n\u95a2\u9023\u60c5\u5831\n<a href=\"https://realm.io/jp/news/tryswift-daniel-steinberg-blending-cultures/\">\u6587\u5316\u3092\u8abf\u548c\u3055\u305b\u308b</a><br />\n\n\u3010Cocoa\u7df4\u7fd2\u5e33\u3011\n<a href=\"http://www.bitz.co.jp/weblog/\">http://www.bitz.co.jp/weblog/</a><br />\n<a href=\"http://ameblo.jp/bitz/\">http://ameblo.jp/bitz/</a>\uff08\u30df\u30e9\u30fc\u30fb\u30b5\u30a4\u30c8\uff09<br />\n<a href=\"https://t.co/6P3h2jtbRk</a>note<br />\n", "tags": ["Cocoa", "Swift"]}