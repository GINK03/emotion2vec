{"context": "EXPLORE-NFC\u3068\u3044\u3046RasPi\u3067\u4f7f\u3048\u308bNFC\u30ea\u30fc\u30c0\u30fc\u3067\u3059\u3002 \n\nNode.js\u7d4c\u7531\u3067\u5236\u5fa1\u3059\u308b\u3053\u3061\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4e0a\u624b\u304f\u52d5\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u4e2d\u8eab\u3092\u3044\u3058\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u306e\u3078\u3093\u3067\u3059\u3002\nhttps://github.com/JohnMcLear/NXP-Explore-NFC-nodejs-wrapper/blob/master/index.js#L15\n\nnode_modules/explorenfc/index.js\n//\u7701\u7565\n  read: function(cb){\n    // exec: spawns a shell.\n    child_process.exec(binary, function(error, stdout, stderr){\n      // TODO, parse the output from the board\n      // If it looks like this could be what we want\n      var result = processLines(stdout);\n      if(result){\n        cb(result);\n      }else{\n        cb(stdout);\n      }\n    });\n  },\n\n//\u7701\u7565\n\n\nstdout\u306e\u4e2d\u8eab\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\u3057\u3066\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7de8\u96c6\u3057\u3066\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\nnfc.js\n'use strict'\n\nconst nfc = require(\"explorenfc\");\n\nnfc.init(\"/usr/bin/explorenfc-basic\");\nnfc.read((nfcEvent) => {\n  if(nfcEvent){\n    let tmp = nfcEvent.split('\\r\\n');\n    let nfcdata = {};\n    nfcdata.Manufacturer = tmp[2].split(':')[1];\n    nfcdata.CID = tmp[3].split(':')[1];\n    nfcdata.IC = tmp[4].split(':')[1];\n    console.log(nfcdata);\n  }else{\n    console.log(\"no NFC Event\");\n  }\n});\n\n\n\n\u5b9f\u884c\n$ node nfc.js\n{ Manufacturer: ' \\t0114',\n  CID: ' \\t01149615C010',\n  IC: ' \\t0401' }\n\n\u3053\u3093\u306a\u611f\u3058\u3067nfc\u306e\u60c5\u5831\u304cnfcdata\u306b\u5165\u3063\u3066\u307e\u3059\u3002\n\n\n\u304a\u307e\u3051\u3001Milkcocoa\u3067Web\u3068\u3064\u306a\u3052\u308b\nMilkcocoa\u306b\u3064\u3044\u3066\u306f\u4f7f\u3044\u65b9\u306f\u8abf\u3079\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nnfc.js\n'use strict'\n\nconst nfc = require(\"explorenfc\");\nconst MilkCocoa = require('milkcocoa');\nconst milkcocoa = new MilkCocoa('<id>.mlkcca.com');\nconst ds = milkcocoa.dataStore('mydatastore');\n\nnfc.init(\"/usr/bin/explorenfc-basic\");\nnfc.read((nfcEvent) => {\n  if(nfcEvent){\n    let tmp = nfcEvent.split('\\r\\n');\n    let nfcdata = {};\n\n    nfcdata.Manufacturer = tmp[2].split(':')[1];\n    nfcdata.CID = tmp[3].split(':')[1];\n    nfcdata.IC = tmp[4].split(':')[1];\n    console.log(nfcdata);\n    ds.push(nfcdata); //Milkcocoa\u306b\u60c5\u5831\u3092\u4fdd\u5b58\n    ds.send({flag:1}); //Milkcocoa\u306b\u60c5\u5831\u3092\u9001\u4fe1\n  }else{\n    console.log(\"no NFC Event\");\n  }\n});\n\n\n\n[EXPLORE-NFC](http://www.nxp.com/ja/products/identification-and-security/nfc-and-reader-ics/nfc-frontend-solutions/explore-nfc-exclusive-from-element14:PNEV512R)\u3068\u3044\u3046RasPi\u3067\u4f7f\u3048\u308bNFC\u30ea\u30fc\u30c0\u30fc\u3067\u3059\u3002 \n\n\u0010![](https://i.gyazo.com/62531bde4f0bad2ddb77ada3ce6c80d9.png)\n\nNode.js\u7d4c\u7531\u3067\u5236\u5fa1\u3059\u308b[\u3053\u3061\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea](https://github.com/JohnMcLear/NXP-Explore-NFC-nodejs-wrapper)\u304c\u4e0a\u624b\u304f\u52d5\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u4e2d\u8eab\u3092\u3044\u3058\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u3053\u306e\u3078\u3093\u3067\u3059\u3002\n\nhttps://github.com/JohnMcLear/NXP-Explore-NFC-nodejs-wrapper/blob/master/index.js#L15\n\n```node_modules/explorenfc/index.js\n//\u7701\u7565\n  read: function(cb){\n    // exec: spawns a shell.\n    child_process.exec(binary, function(error, stdout, stderr){\n      // TODO, parse the output from the board\n      // If it looks like this could be what we want\n      var result = processLines(stdout);\n      if(result){\n        cb(result);\n      }else{\n        cb(stdout);\n      }\n    });\n  },\n\n//\u7701\u7565\n```\n\nstdout\u306e\u4e2d\u8eab\u3092\u305d\u306e\u307e\u307e\u51fa\u529b\u3057\u3066\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7de8\u96c6\u3057\u3066\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n```nfc.js\n'use strict'\n\nconst nfc = require(\"explorenfc\");\n\nnfc.init(\"/usr/bin/explorenfc-basic\");\nnfc.read((nfcEvent) => {\n  if(nfcEvent){\n    let tmp = nfcEvent.split('\\r\\n');\n    let nfcdata = {};\n    nfcdata.Manufacturer = tmp[2].split(':')[1];\n    nfcdata.CID = tmp[3].split(':')[1];\n    nfcdata.IC = tmp[4].split(':')[1];\n    console.log(nfcdata);\n  }else{\n    console.log(\"no NFC Event\");\n  }\n});\n\n```\n\n\u5b9f\u884c\n\n```bash\n$ node nfc.js\n{ Manufacturer: ' \\t0114',\n  CID: ' \\t01149615C010',\n  IC: ' \\t0401' }\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067nfc\u306e\u60c5\u5831\u304c`nfcdata`\u306b\u5165\u3063\u3066\u307e\u3059\u3002\n\n\n\u0010![](https://i.gyazo.com/2576fe0c82ad3d81f967fa818b79e77d.gif)\n\n## \u304a\u307e\u3051\u3001Milkcocoa\u3067Web\u3068\u3064\u306a\u3052\u308b\n\nMilkcocoa\u306b\u3064\u3044\u3066\u306f\u4f7f\u3044\u65b9\u306f\u8abf\u3079\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n```nfc.js\n'use strict'\n\nconst nfc = require(\"explorenfc\");\nconst MilkCocoa = require('milkcocoa');\nconst milkcocoa = new MilkCocoa('<id>.mlkcca.com');\nconst ds = milkcocoa.dataStore('mydatastore');\n\nnfc.init(\"/usr/bin/explorenfc-basic\");\nnfc.read((nfcEvent) => {\n  if(nfcEvent){\n    let tmp = nfcEvent.split('\\r\\n');\n    let nfcdata = {};\n    \n    nfcdata.Manufacturer = tmp[2].split(':')[1];\n    nfcdata.CID = tmp[3].split(':')[1];\n    nfcdata.IC = tmp[4].split(':')[1];\n    console.log(nfcdata);\n    ds.push(nfcdata); //Milkcocoa\u306b\u60c5\u5831\u3092\u4fdd\u5b58\n    ds.send({flag:1}); //Milkcocoa\u306b\u60c5\u5831\u3092\u9001\u4fe1\n  }else{\n    console.log(\"no NFC Event\");\n  }\n});\n```\n", "tags": ["milkcocoa", "RaspberryPi", "Nodebots", "NFC", "Node.js"]}