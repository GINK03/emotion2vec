{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nmruby\u3092clone\u3057\u3066\u30d3\u30eb\u30c9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\npython\u306fblender\u304c\u4f7f\u3063\u3066\u3044\u308b\u306e\u304c\u30013.4.2\u306a\u306e\u3067\u3001\n\u3053\u308c\u306b\u8fd1\u3044\u3084\u3064\u3060\u3068\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u52d5\u304d\u307e\u3059\u3002\n\n\u3053\u306e\u8a18\u4e8b\u306e\u5fdc\u7528\u4f8b\u306e\u3054\u7d39\u4ecb\n\nBlender\u3067trusterd.py\uff1f(Python\u306e\u4e2d\u306emruby\u306e\u4e2d\u3067http2\u30b5\u30fc\u30d0\u30fc\u306etrusterd\u3092\u52d5\u304b\u3057\u305f)\n\n\nC\n#include <stdio.h>\n#include <assert.h>\n#include \"mruby.h\"\n#include \"mruby/proc.h\"\n#include \"mruby/compile.h\"\n\n// \"(1..10).each { |x| p x }\"\n\nint spam_hello(char *name)\n{\n  assert(name != NULL);\n  mrb_state* mrb = mrb_open();\n  mrb_load_string(mrb, name);\n  mrb_close(mrb);\n\n  return printf(\"hello %s\\n\", name);\n}\n\ngcc -I$HOME/local/src/mruby/include -shared -fPIC sapm.c -o sapm.dylib $HOME/local/src/mruby/build/host/lib/libmruby.a\n\n\nPython\nfrom ctypes import *\n\nclass MrubyPyError(Exception):\n    pass\n\nclass MrubyPy:\n    c_spam_module = CDLL('./sapm.dylib')\n    c_spam_hello_func_type = CFUNCTYPE(c_int, c_char_p)\n    c_spam_hello_func = cast(c_spam_module.spam_hello, c_spam_hello_func_type)\n\n    @classmethod\n    def hello(cls, name):\n        if name == None or not isinstance(name, str):\n            raise MrubyPyError('invalid argument')\n        ret = cls.c_spam_hello_func(create_string_buffer(name.encode('UTF-8')))\n        #ret = cls.c_spam_hello_func(create_string_buffer(name))\n        print ('c_spam_hello_func returned:', ret)\n\nif __name__ == '__main__':\n    #MrubyPy.hello('(1..10).each { |x| p x }')\n    f = open(\"hoge.rb\",\"r\",encoding=\"UTF-8\")\n    ruby=f.read()\n    print(ruby)\n    MrubyPy.hello(ruby)\n\n\nOSX\u306eblender\u306e\u5834\u5408\n/Applications/blender.app/Contents/MacOS/blender --background --python hoge.py\n\n# \u306f\u3058\u3081\u306b\n\nmruby\u3092clone\u3057\u3066\u30d3\u30eb\u30c9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\npython\u306fblender\u304c\u4f7f\u3063\u3066\u3044\u308b\u306e\u304c\u30013.4.2\u306a\u306e\u3067\u3001\n\u3053\u308c\u306b\u8fd1\u3044\u3084\u3064\u3060\u3068\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067\u52d5\u304d\u307e\u3059\u3002\n\n# \u3053\u306e\u8a18\u4e8b\u306e\u5fdc\u7528\u4f8b\u306e\u3054\u7d39\u4ecb\n\n- [Blender\u3067trusterd.py\uff1f(Python\u306e\u4e2d\u306emruby\u306e\u4e2d\u3067http2\u30b5\u30fc\u30d0\u30fc\u306etrusterd\u3092\u52d5\u304b\u3057\u305f)](http://youtu.be/ftzZtB8sPvM)\n\n# C\n\n```c\n#include <stdio.h>\n#include <assert.h>\n#include \"mruby.h\"\n#include \"mruby/proc.h\"\n#include \"mruby/compile.h\"\n\n// \"(1..10).each { |x| p x }\"\n\nint spam_hello(char *name)\n{\n  assert(name != NULL);\n  mrb_state* mrb = mrb_open();\n  mrb_load_string(mrb, name);\n  mrb_close(mrb);\n\n  return printf(\"hello %s\\n\", name);\n}\n```\n\n```bash\ngcc -I$HOME/local/src/mruby/include -shared -fPIC sapm.c -o sapm.dylib $HOME/local/src/mruby/build/host/lib/libmruby.a\n```\n\n# Python\n\n```py3\nfrom ctypes import *\n\nclass MrubyPyError(Exception):\n    pass\n\nclass MrubyPy:\n    c_spam_module = CDLL('./sapm.dylib')\n    c_spam_hello_func_type = CFUNCTYPE(c_int, c_char_p)\n    c_spam_hello_func = cast(c_spam_module.spam_hello, c_spam_hello_func_type)\n\n    @classmethod\n    def hello(cls, name):\n        if name == None or not isinstance(name, str):\n            raise MrubyPyError('invalid argument')\n        ret = cls.c_spam_hello_func(create_string_buffer(name.encode('UTF-8')))\n        #ret = cls.c_spam_hello_func(create_string_buffer(name))\n        print ('c_spam_hello_func returned:', ret)\n\nif __name__ == '__main__':\n    #MrubyPy.hello('(1..10).each { |x| p x }')\n    f = open(\"hoge.rb\",\"r\",encoding=\"UTF-8\")\n    ruby=f.read()\n    print(ruby)\n    MrubyPy.hello(ruby)\n```\n\n# OSX\u306eblender\u306e\u5834\u5408\n\n```\n/Applications/blender.app/Contents/MacOS/blender --background --python hoge.py\n```\n", "tags": ["Python", "Blender", "mruby"]}