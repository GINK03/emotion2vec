{"context": "Haskell\u3067\u5b66\u3076F#\u5165\u9580\u306e\u89e3\u7b54\u4f8b\u3067\u3059\u3002\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\n\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\n\u3010\u554f1\u3011\u4efb\u610f\u306en\u756a\u76ee\u306e\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570fib\u3092\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u521d\u671f\u50240, 1\u3092\u57fa\u5e95\u90e8\u3068\u3057\u307e\u3059\u3002\n\n\u57fa\u5e95\u90e8\nlet rec fib = function\n| 0 -> 0\n| 1 -> 1\n\n\n0, 1, 1, 2, 3, 5, ...\u3088\u308afib 5\u306b\u3064\u3044\u3066\u8003\u3048\u307e\u3059\u3002\n\n\u5177\u4f53\u4f8b\nfib 5 = 2 + 3 = fib 3 + fib 4\n\n\n\u3053\u308c\u3092n\u3067\u4e00\u822c\u5316\u3059\u308c\u3070\u518d\u5e30\u90e8\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u518d\u5e30\u90e8\n| n -> fib (n - 2) + fib (n - 1)\n\n\n\u30c6\u30b9\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u89e3\u7b54\u3068\u3057\u307e\u3059\u3002\n\n\u89e3\u7b54\nlet rec fib = function\n| 0 -> 0\n| 1 -> 1\n| n -> fib (n - 2) + fib (n - 1)\n\nprintfn \"%d\" <| fib 6\n\n\n\n\u5b9f\u884c\u7d50\u679c\n8\n\n\n\n\u30ac\u30fc\u30c9\n\u3010\u554f2\u3011\u554f1\u3067\u5b9f\u88c5\u3057\u305f\u95a2\u6570\u306b\u3001\u7121\u9650\u30eb\u30fc\u30d7\u3092\u9632\u3050\u305f\u3081\u306e\u30ac\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nlet rec fib = function\n| 0 -> 0\n| 1 -> 1\n| n when n > 1 -> fib (n - 2) + fib (n - 1)\n| _ -> failwith \"< 0\"\n\nprintfn \"%d\" <| fib 6\n\n\n\u5b9f\u884c\u7d50\u679c\n8\n\n\n\nmatch\n\u3010\u554f3\u3011\u554f2\u3067\u5b9f\u88c5\u3057\u305f\u95a2\u6570\u3092match\u3067\u66f8\u304d\u76f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nlet rec fib n =\n    match n with\n    | 0 -> 0\n    | 1 -> 1\n    | _ when n > 1 -> fib (n - 2) + fib (n - 1)\n    | _ -> failwith \"< 0\"\n\nprintfn \"%d\" <| fib 6\n\n\n\u5b9f\u884c\u7d50\u679c\n8\n\n\n\n\u518d\u5b9f\u88c5\n\u3010\u554f4\u3011sum, rev\u3068\u540c\u3058\u6a5f\u80fd\u306e\u95a2\u6570\u3092\u518d\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002sum\u306e\u639b\u3051\u7b97\u7248product\u3082\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nlet rec sum = function\n| []    -> 0\n| x::xs -> x + sum xs\n\nlet rec rev = function\n| []    -> []\n| x::xs -> rev xs @ [x]\n\nlet rec product = function\n| []    -> 1\n| x::xs -> x * product xs\n\nprintfn \"%d\" <| sum [1..5]\nprintfn \"%A\" <| rev [1..5]\nprintfn \"%d\" <| product [1..5]\n\n\n\u5b9f\u884c\u7d50\u679c\n15\n[5; 4; 3; 2; 1]\n120\n\n\n\n\u30ea\u30b9\u30c8\u304c\u7a7a\u306b\u306a\u308b\u307e\u3067\u9806\u756a\u306b\u305f\u3069\u308b\u305f\u3081\u3001\u57fa\u5e95\u90e8\u3068\u3057\u3066[]\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\n\u5225\u89e3\n\u203b \u52c9\u5f37\u4f1a\u3067\u51fa\u305f\u610f\u898b\u3092\u53cd\u6620\u3057\u305f\u9805\u76ee\u3067\u3059\u3002\n@\u3092\u907f\u3051\u305f\u5b9f\u88c5\u3067\u3059\u3002\u672c\u6587\u3067\u306f\u8aac\u660e\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u672b\u5c3e\u518d\u5e30\u3067\u3059\u3002\nlet rec rev xs =\n    let rec f ys = function\n    | []    -> ys\n    | x::xs -> f (x::ys) xs\n    f [] xs\n\n\n\u968e\u4e57\n\u3010\u554f5\u3011product\u3092\u4f7f\u3063\u3066fact\uff08\u968e\u4e57\uff09\u3092\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nlet rec product = function\n| []    -> 1\n| x::xs -> x * product xs\n\nlet fact n = product [1..n]\n\nprintfn \"%d\" <| fact 5\n\n\n\u5b9f\u884c\u7d50\u679c\n120\n\n\n\n\u5782\u7dda\u306e\u4ea4\u70b9\n\u3010\u554f6\u3011\u70b9 $(p, q)$ \u304b\u3089\u76f4\u7dda $ax + by = c$ \u306b\u4e0b\u3057\u305f\u5782\u7dda\u306e\u4ea4\u70b9\u3092\u6c42\u3081\u308b\u95a2\u6570perpPoint\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002a\u3068b\u304c\u4e21\u65b9\u30bc\u30ed\u306b\u306a\u308b\u3068\u89e3\u306a\u3057\u3067\u3059\u304c\u3001\u30c1\u30a7\u30c3\u30af\u305b\u305a\u306b\u7121\u8996\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nax + by = c \\cdots (1)\n\n(1)\u3078\u306e\u5782\u7dda\u306f\nbx - ay = d \\cdots (2)\n\n(2)\u306b $(p,q)$ \u3092\u4ee3\u5165\u3057\u307e\u3059\u3002\nd = bp - aq \\cdots (3)\n\n(1)\u3068(2)\u306e\u9023\u7acb\u65b9\u7a0b\u5f0f\u3092\u89e3\u3044\u3066(3)\u3092\u4ee3\u5165\u3059\u308c\u3070\u4ea4\u70b9\u304c\u6c42\u307e\u308a\u307e\u3059\u3002\nx=\\frac{ac+bd}{a^2+b^2}, y=\\frac{bc-ad}{a^2+b^2}\n\n\u3053\u308c\u3092\u30b3\u30fc\u30c9\u5316\u3057\u307e\u3059\u3002\n\n\u89e3\u7b54\nlet perpPoint (p, q) (a, b, c) =\n    let d = b * p - a * q\n    let x = (a * c + b * d) / (a * a + b * b)\n    let y = (b * c - a * d) / (a * a + b * b)\n    (x, y)\n\nprintfn \"%A\" <| perpPoint (0., 2.) (1., -1., 0.)\n\n\n\n\u5b9f\u884c\u7d50\u679c\n(1.0, 1.0)\n\n\n\nROT13\n\u3010\u554f7\u3011ROT13\u3092\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nlet rot13ch = function\n| ch when 'A' <= ch && ch <= 'M'\n       || 'a' <= ch && ch <= 'm' -> char <| int ch + 13\n| ch when 'N' <= ch && ch <= 'Z'\n       || 'n' <= ch && ch <= 'z' -> char <| int ch - 13\n| ch -> ch\n\nlet rot13 s =\n    let rec f = function\n    | []    -> []\n    | x::xs -> rot13ch x :: f xs\n    List.ofSeq s |> f |> Array.ofList |> System.String.Concat\n\nlet hello13 = rot13 \"Hello, World!\"\nprintfn \"%s\" hello13\nprintfn \"%s\" <| rot13 hello13\n\n\n\u5b9f\u884c\u7d50\u679c\nUryyb, Jbeyq!\nHello, World!\n\n\n\n\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\n\u3010\u554f8\u3011\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\u3092\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u21d2 \u8a73\u7d30\u8aac\u660e\nlet rec bswap = function\n| [ ] -> [ ]\n| [x] -> [x]\n| x::xs ->\n    match bswap xs with\n    | [] -> [x]\n    | y::ys ->\n        if x > y then y::x::ys\n                 else x::y::ys\n\nlet rec bsort xs =\n    match bswap xs with\n    | []    -> []\n    | y::ys -> y :: bsort ys\n\nprintfn \"%A\" <| bswap [4; 3; 1; 5; 2]\nprintfn \"%A\" <| bsort [4; 3; 1; 5; 2]\nprintfn \"%A\" <| bsort [5; 4; 3; 2; 1]\nprintfn \"%A\" <| bsort [4; 6; 9; 8; 3; 5; 1; 7; 2]\n\n\n\u5b9f\u884c\u7d50\u679c\n[1; 4; 3; 2; 5]\n[1; 2; 3; 4; 5]\n[1; 2; 3; 4; 5]\n[1; 2; 3; 4; 5; 6; 7; 8; 9]\n\n\n\n\u30de\u30fc\u30b8\u30bd\u30fc\u30c8\n\u3010\u554f9\u3011\u30de\u30fc\u30b8\u30bd\u30fc\u30c8\u3092\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30bd\u30fc\u30c8\u3057\u306a\u304c\u30892\u3064\u306e\u30ea\u30b9\u30c8\u3092\u30de\u30fc\u30b8\u3059\u308b\u95a2\u6570merge\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u30ea\u30b9\u30c8\u3092\u5206\u5272\u3059\u308b\u95a2\u6570split\u3092\u4f5c\u308a\u307e\u3059\u3002\u30bd\u30fc\u30c8\u524d\u306e\u30ea\u30b9\u30c8\u306f\u9806\u756a\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u306b\u610f\u5473\u304c\u306a\u3044\u305f\u3081\u3001\u5b9f\u88c5\u3057\u3084\u3059\u3055\u3092\u512a\u5148\u3057\u307e\u3059\u3002\n\u5f80\u8def\u3067\u5206\u5272\u3001\u5fa9\u8def\u3067\u30de\u30fc\u30b8\u3092\u518d\u5e30\u95a2\u6570\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\n\nlet rec merge = function\n| xs, [] -> xs\n| [], ys -> ys\n| x::xs, y::ys ->\n    if x < y then x :: merge (xs, y::ys)\n             else y :: merge (x::xs, ys)\n\nlet rec split = function\n| [ ] -> ([ ], [])\n| [x] -> ([x], [])\n| x::y::zs ->\n    let xs, ys = split zs\n    (x::xs, y::ys)\n\nlet rec msort = function\n| [ ] -> [ ]\n| [x] -> [x]\n| xs ->\n    let ys, zs = split xs\n    merge (msort ys, msort zs)\n\nprintfn \"%A\" <| msort [4; 6; 9; 8; 3; 5; 1; 7; 2]\n\n\n\u5b9f\u884c\u7d50\u679c\n[1; 2; 3; 4; 5; 6; 7; 8; 9]\n\n\n\n\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\n\u3010\u554f10\u3011\u52d5\u304d\u3092\u8003\u3048\u3066\u3001F#\u306b\u79fb\u690d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30ea\u30b9\u30c8[4, 6, 9, 8, 3, 5, 1, 7, 2]\u3092\u30bd\u30fc\u30c8\u3057\u307e\u3059\u3002\n(n:xs) = 4 : [6, 9, 8, 3, 5, 1, 7, 2]\n\u30ea\u30b9\u30c8\u306e\u6700\u521d\u306e\u8981\u7d204\u3092\u57fa\u6e96\u306b3\u3064\u306e\u90e8\u5206\u306b\u5206\u3051\u307e\u3059\u3002\nqsort (n:xs) = qsort lt ++ [n] ++ qsort gteq\n    where\n        lt   = [x | x <- xs, x <  n]\n        gteq = [x | x <- xs, x >= n]\n\n\n4\u672a\u6e80: lt   = [x | x <- xs, x <  n] \u2192 [3, 1, 2]\n\n4: [x] \u2192 [4]\n\n4\u4ee5\u4e0a: gteq = [x | x <- xs, x >= n] \u2192 [6, 9, 8, 5, 7]\n\n\nlt\u3068gteq\u3092\u30bd\u30fc\u30c8\u3057\u3066\u7d50\u5408\u3057\u307e\u3059\u3002\n\n\u5b9f\u884c\u30a4\u30e1\u30fc\u30b8\nqsort [3, 1, 2] ++ [4] ++ qsort [6, 9, 8, 5, 7]\n          \u2193                           \u2193\n      [1, 2, 3] ++ [4] ++       [5, 6, 7, 8, 9]\n          \u2193                           \u2193\n      [1, 2, 3,     4,           5, 6, 7, 8, 9]\n\n\nqsort [3, 1, 2]\u3068qsort [6, 9, 8, 5, 7]\u306e\u5185\u90e8\u3067\u306f\u3001\u540c\u69d8\u306e\u51e6\u7406\u304c\u7e70\u308a\u8fd4\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u79fb\u690d\u3057\u307e\u3059\u3002\n\nF#\nlet rec qsort = function\n| [] -> []\n| n::xs ->\n    let lt   = [for x in xs do if x <  n then yield x]\n    let gteq = [for x in xs do if x >= n then yield x]\n    qsort lt @ [n] @ qsort gteq\n\nprintfn \"%A\" <| qsort [4; 6; 9; 8; 3; 5; 1; 7; 2]\n\n\n\n\u5b9f\u884c\u7d50\u679c\n[1; 2; 3; 4; 5; 6; 7; 8; 9]\n\n\n\n\u76f4\u89d2\u4e09\u89d2\u5f62\u306e\u4e09\u8fba\n\u3010\u554f11\u3011\u4e09\u8fba\u306e\u9577\u3055\u304c\u540420\u4ee5\u4e0b\u306e\u6574\u6570\u3067\u69cb\u6210\u3055\u308c\u308b\u76f4\u89d2\u4e09\u89d2\u5f62\u3092\u5217\u6319\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4e26\u3073\u9806\u306b\u3088\u308b\u91cd\u8907\u3092\u6392\u9664\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u8907\u6570\u30bd\u30fc\u30b9\u306e\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u306b\u4e09\u5e73\u65b9\u306e\u5b9a\u7406\u3067\u6761\u4ef6\u4ed8\u3051\u3057\u307e\u3059\u3002\nprintfn \"%A\" <| [\n    for a in 1..20 do\n    for b in 1..20 do\n    for c in 1..20 do\n    if a * a + b * b = c * c then yield (a, b, c)]\n\n\n\u5b9f\u884c\u7d50\u679c\n[(3, 4, 5); (4, 3, 5); (5, 12, 13); (6, 8, 10); (8, 6, 10); (8, 15, 17);\n (9, 12, 15); (12, 5, 13); (12, 9, 15); (12, 16, 20); (15, 8, 17); (16, 12, 20)]\n\n\n\n\u91cd\u8907\u6392\u9664\n\u203b \u52c9\u5f37\u4f1a\u3067\u51fa\u305f\u610f\u898b\u3092\u53cd\u6620\u3057\u305f\u9805\u76ee\u3067\u3059\u3002\n\u6761\u4ef6 $a<b$ \u3092\u8ffd\u52a0\u3059\u308c\u3070\u4e26\u3073\u9806\u306b\u3088\u308b\u91cd\u8907\u304c\u6392\u9664\u3067\u304d\u307e\u3059\u3002\nprintfn \"%A\" <| [\n    for a in 1..20 do\n    for b in 1..20 do\n    for c in 1..20 do\n    if a * a + b * b = c * c && a < b then yield (a, b, c)]\n\n\n\u5b9f\u884c\u7d50\u679c\n[(3, 4, 5); (5, 12, 13); (6, 8, 10); (8, 15, 17); (9, 12, 15); (12, 16, 20)]\n\n\n\u6761\u4ef6\u3067\u5236\u9650\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30bd\u30fc\u30b9\u304b\u3089\u629c\u3051\u3070\u8a08\u7b97\u91cf\u304c\u524a\u6e1b\u3067\u304d\u307e\u3059\u3002\nprintfn \"%A\" <| [\n    for a in 1..20 do\n    for b in a..20 do\n    for c in b..20 do\n    if a * a + b * b = c * c then yield (a, b, c)]\n\n\n\u5b9f\u884c\u7d50\u679c\n[(3, 4, 5); (5, 12, 13); (6, 8, 10); (8, 15, 17); (9, 12, 15); (12, 16, 20)]\n\n\n[Haskell\u3067\u5b66\u3076F#\u5165\u9580](http://qiita.com/7shi/items/1d3750ba17f5a88b8405)\u306e\u89e3\u7b54\u4f8b\u3067\u3059\u3002\n\n# \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\n\n## \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\n\n\u3010\u554f1\u3011\u4efb\u610f\u306en\u756a\u76ee\u306e\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570`fib`\u3092\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u521d\u671f\u5024`0, 1`\u3092\u57fa\u5e95\u90e8\u3068\u3057\u307e\u3059\u3002\n\n```fsharp:\u57fa\u5e95\u90e8\nlet rec fib = function\n| 0 -> 0\n| 1 -> 1\n```\n\n`0, 1, 1, 2, 3, 5, ...`\u3088\u308a`fib 5`\u306b\u3064\u3044\u3066\u8003\u3048\u307e\u3059\u3002\n\n```fsharp:\u5177\u4f53\u4f8b\nfib 5 = 2 + 3 = fib 3 + fib 4\n```\n\n\u3053\u308c\u3092`n`\u3067\u4e00\u822c\u5316\u3059\u308c\u3070\u518d\u5e30\u90e8\u3068\u306a\u308a\u307e\u3059\u3002\n\n```fsharp:\u518d\u5e30\u90e8\n| n -> fib (n - 2) + fib (n - 1)\n```\n\n\u30c6\u30b9\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u89e3\u7b54\u3068\u3057\u307e\u3059\u3002\n\n```fsharp:\u89e3\u7b54\nlet rec fib = function\n| 0 -> 0\n| 1 -> 1\n| n -> fib (n - 2) + fib (n - 1)\n\nprintfn \"%d\" <| fib 6\n```\n```text:\u5b9f\u884c\u7d50\u679c\n8\n```\n\n## \u30ac\u30fc\u30c9\n\n\u3010\u554f2\u3011\u554f1\u3067\u5b9f\u88c5\u3057\u305f\u95a2\u6570\u306b\u3001\u7121\u9650\u30eb\u30fc\u30d7\u3092\u9632\u3050\u305f\u3081\u306e\u30ac\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```fsharp\nlet rec fib = function\n| 0 -> 0\n| 1 -> 1\n| n when n > 1 -> fib (n - 2) + fib (n - 1)\n| _ -> failwith \"< 0\"\n\nprintfn \"%d\" <| fib 6\n```\n```text:\u5b9f\u884c\u7d50\u679c\n8\n```\n\n## match\n\n\u3010\u554f3\u3011\u554f2\u3067\u5b9f\u88c5\u3057\u305f\u95a2\u6570\u3092`match`\u3067\u66f8\u304d\u76f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```fsharp\nlet rec fib n =\n    match n with\n    | 0 -> 0\n    | 1 -> 1\n    | _ when n > 1 -> fib (n - 2) + fib (n - 1)\n    | _ -> failwith \"< 0\"\n\nprintfn \"%d\" <| fib 6\n```\n```text:\u5b9f\u884c\u7d50\u679c\n8\n```\n\n# \u518d\u5b9f\u88c5\n\n\u3010\u554f4\u3011`sum`, `rev`\u3068\u540c\u3058\u6a5f\u80fd\u306e\u95a2\u6570\u3092\u518d\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002`sum`\u306e\u639b\u3051\u7b97\u7248`product`\u3082\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```fsharp\nlet rec sum = function\n| []    -> 0\n| x::xs -> x + sum xs\n\nlet rec rev = function\n| []    -> []\n| x::xs -> rev xs @ [x]\n\nlet rec product = function\n| []    -> 1\n| x::xs -> x * product xs\n\nprintfn \"%d\" <| sum [1..5]\nprintfn \"%A\" <| rev [1..5]\nprintfn \"%d\" <| product [1..5]\n```\n```text:\u5b9f\u884c\u7d50\u679c\n15\n[5; 4; 3; 2; 1]\n120\n```\n\n* \u30ea\u30b9\u30c8\u304c\u7a7a\u306b\u306a\u308b\u307e\u3067\u9806\u756a\u306b\u305f\u3069\u308b\u305f\u3081\u3001\u57fa\u5e95\u90e8\u3068\u3057\u3066`[]`\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n## \u5225\u89e3\n\n\u203b \u52c9\u5f37\u4f1a\u3067\u51fa\u305f\u610f\u898b\u3092\u53cd\u6620\u3057\u305f\u9805\u76ee\u3067\u3059\u3002\n\n`@`\u3092\u907f\u3051\u305f\u5b9f\u88c5\u3067\u3059\u3002\u672c\u6587\u3067\u306f\u8aac\u660e\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u672b\u5c3e\u518d\u5e30\u3067\u3059\u3002\n\n```fsharp\nlet rec rev xs =\n    let rec f ys = function\n    | []    -> ys\n    | x::xs -> f (x::ys) xs\n    f [] xs\n```\n\n# \u968e\u4e57\n\n\u3010\u554f5\u3011`product`\u3092\u4f7f\u3063\u3066`fact`\uff08\u968e\u4e57\uff09\u3092\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```fsharp\nlet rec product = function\n| []    -> 1\n| x::xs -> x * product xs\n\nlet fact n = product [1..n]\n\nprintfn \"%d\" <| fact 5\n```\n```text:\u5b9f\u884c\u7d50\u679c\n120\n```\n\n# \u5782\u7dda\u306e\u4ea4\u70b9\n\n\u3010\u554f6\u3011\u70b9 $(p, q)$ \u304b\u3089\u76f4\u7dda $ax + by = c$ \u306b\u4e0b\u3057\u305f\u5782\u7dda\u306e\u4ea4\u70b9\u3092\u6c42\u3081\u308b\u95a2\u6570`perpPoint`\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002a\u3068b\u304c\u4e21\u65b9\u30bc\u30ed\u306b\u306a\u308b\u3068\u89e3\u306a\u3057\u3067\u3059\u304c\u3001\u30c1\u30a7\u30c3\u30af\u305b\u305a\u306b\u7121\u8996\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```math\nax + by = c \\cdots (1)\n```\n\n(1)\u3078\u306e\u5782\u7dda\u306f\n\n```math\nbx - ay = d \\cdots (2)\n```\n\n(2)\u306b $(p,q)$ \u3092\u4ee3\u5165\u3057\u307e\u3059\u3002\n\n```math\nd = bp - aq \\cdots (3)\n```\n\n(1)\u3068(2)\u306e\u9023\u7acb\u65b9\u7a0b\u5f0f\u3092\u89e3\u3044\u3066(3)\u3092\u4ee3\u5165\u3059\u308c\u3070\u4ea4\u70b9\u304c\u6c42\u307e\u308a\u307e\u3059\u3002\n\n```math\nx=\\frac{ac+bd}{a^2+b^2}, y=\\frac{bc-ad}{a^2+b^2}\n```\n\n\u3053\u308c\u3092\u30b3\u30fc\u30c9\u5316\u3057\u307e\u3059\u3002\n\n```fsharp:\u89e3\u7b54\nlet perpPoint (p, q) (a, b, c) =\n    let d = b * p - a * q\n    let x = (a * c + b * d) / (a * a + b * b)\n    let y = (b * c - a * d) / (a * a + b * b)\n    (x, y)\n\nprintfn \"%A\" <| perpPoint (0., 2.) (1., -1., 0.)\n```\n```text:\u5b9f\u884c\u7d50\u679c\n(1.0, 1.0)\n```\n\n# ROT13\n\n\u3010\u554f7\u3011[ROT13](http://ja.wikipedia.org/wiki/ROT13)\u3092\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```fsharp\nlet rot13ch = function\n| ch when 'A' <= ch && ch <= 'M'\n       || 'a' <= ch && ch <= 'm' -> char <| int ch + 13\n| ch when 'N' <= ch && ch <= 'Z'\n       || 'n' <= ch && ch <= 'z' -> char <| int ch - 13\n| ch -> ch\n\nlet rot13 s =\n    let rec f = function\n    | []    -> []\n    | x::xs -> rot13ch x :: f xs\n    List.ofSeq s |> f |> Array.ofList |> System.String.Concat\n\nlet hello13 = rot13 \"Hello, World!\"\nprintfn \"%s\" hello13\nprintfn \"%s\" <| rot13 hello13\n```\n```text:\u5b9f\u884c\u7d50\u679c\nUryyb, Jbeyq!\nHello, World!\n```\n\n# \u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\n\n\u3010\u554f8\u3011[\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8](http://www.ics.kagoshima-u.ac.jp/~fuchida/edu/algorithm/sort-algorithm/bubble-sort.html)\u3092\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u21d2 [\u8a73\u7d30\u8aac\u660e](http://qiita.com/7shi/items/1e2a66bf8e8c7f0bd70f)\n\n```fsharp\nlet rec bswap = function\n| [ ] -> [ ]\n| [x] -> [x]\n| x::xs ->\n    match bswap xs with\n    | [] -> [x]\n    | y::ys ->\n        if x > y then y::x::ys\n                 else x::y::ys\n\nlet rec bsort xs =\n    match bswap xs with\n    | []    -> []\n    | y::ys -> y :: bsort ys\n\nprintfn \"%A\" <| bswap [4; 3; 1; 5; 2]\nprintfn \"%A\" <| bsort [4; 3; 1; 5; 2]\nprintfn \"%A\" <| bsort [5; 4; 3; 2; 1]\nprintfn \"%A\" <| bsort [4; 6; 9; 8; 3; 5; 1; 7; 2]\n```\n```text:\u5b9f\u884c\u7d50\u679c\n[1; 4; 3; 2; 5]\n[1; 2; 3; 4; 5]\n[1; 2; 3; 4; 5]\n[1; 2; 3; 4; 5; 6; 7; 8; 9]\n```\n\n# \u30de\u30fc\u30b8\u30bd\u30fc\u30c8\n\n\u3010\u554f9\u3011[\u30de\u30fc\u30b8\u30bd\u30fc\u30c8](http://www.ics.kagoshima-u.ac.jp/~fuchida/edu/algorithm/sort-algorithm/merge-sort.html)\u3092\u5b9f\u88c5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n* \u30bd\u30fc\u30c8\u3057\u306a\u304c\u30892\u3064\u306e\u30ea\u30b9\u30c8\u3092\u30de\u30fc\u30b8\u3059\u308b\u95a2\u6570`merge`\u3092\u4f5c\u308a\u307e\u3059\u3002\n* \u30ea\u30b9\u30c8\u3092\u5206\u5272\u3059\u308b\u95a2\u6570`split`\u3092\u4f5c\u308a\u307e\u3059\u3002\u30bd\u30fc\u30c8\u524d\u306e\u30ea\u30b9\u30c8\u306f\u9806\u756a\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u306b\u610f\u5473\u304c\u306a\u3044\u305f\u3081\u3001\u5b9f\u88c5\u3057\u3084\u3059\u3055\u3092\u512a\u5148\u3057\u307e\u3059\u3002\n* \u5f80\u8def\u3067\u5206\u5272\u3001\u5fa9\u8def\u3067\u30de\u30fc\u30b8\u3092\u518d\u5e30\u95a2\u6570\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\n\n```fsharp\nlet rec merge = function\n| xs, [] -> xs\n| [], ys -> ys\n| x::xs, y::ys ->\n    if x < y then x :: merge (xs, y::ys)\n             else y :: merge (x::xs, ys)\n\nlet rec split = function\n| [ ] -> ([ ], [])\n| [x] -> ([x], [])\n| x::y::zs ->\n    let xs, ys = split zs\n    (x::xs, y::ys)\n\nlet rec msort = function\n| [ ] -> [ ]\n| [x] -> [x]\n| xs ->\n    let ys, zs = split xs\n    merge (msort ys, msort zs)\n\nprintfn \"%A\" <| msort [4; 6; 9; 8; 3; 5; 1; 7; 2]\n```\n```text:\u5b9f\u884c\u7d50\u679c\n[1; 2; 3; 4; 5; 6; 7; 8; 9]\n```\n\n# \u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\n\n\u3010\u554f10\u3011\u52d5\u304d\u3092\u8003\u3048\u3066\u3001F#\u306b\u79fb\u690d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30ea\u30b9\u30c8`[4, 6, 9, 8, 3, 5, 1, 7, 2]`\u3092\u30bd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n`(n:xs) = 4 : [6, 9, 8, 3, 5, 1, 7, 2]`\n\n\u30ea\u30b9\u30c8\u306e\u6700\u521d\u306e\u8981\u7d20`4`\u3092\u57fa\u6e96\u306b3\u3064\u306e\u90e8\u5206\u306b\u5206\u3051\u307e\u3059\u3002\n\n```hs\nqsort (n:xs) = qsort lt ++ [n] ++ qsort gteq\n    where\n        lt   = [x | x <- xs, x <  n]\n        gteq = [x | x <- xs, x >= n]\n```\n\n* 4\u672a\u6e80: `lt   = [x | x <- xs, x <  n]` \u2192 `[3, 1, 2]`\n* 4: `[x]` \u2192 `[4]`\n* 4\u4ee5\u4e0a: `gteq = [x | x <- xs, x >= n]` \u2192 `[6, 9, 8, 5, 7]`\n\n`lt`\u3068`gteq`\u3092\u30bd\u30fc\u30c8\u3057\u3066\u7d50\u5408\u3057\u307e\u3059\u3002\n\n```text:\u5b9f\u884c\u30a4\u30e1\u30fc\u30b8\nqsort [3, 1, 2] ++ [4] ++ qsort [6, 9, 8, 5, 7]\n          \u2193                           \u2193\n      [1, 2, 3] ++ [4] ++       [5, 6, 7, 8, 9]\n          \u2193                           \u2193\n      [1, 2, 3,     4,           5, 6, 7, 8, 9]\n```\n\n`qsort [3, 1, 2]`\u3068`qsort [6, 9, 8, 5, 7]`\u306e\u5185\u90e8\u3067\u306f\u3001\u540c\u69d8\u306e\u51e6\u7406\u304c\u7e70\u308a\u8fd4\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u79fb\u690d\u3057\u307e\u3059\u3002\n\n```fsharp:F#\nlet rec qsort = function\n| [] -> []\n| n::xs ->\n    let lt   = [for x in xs do if x <  n then yield x]\n    let gteq = [for x in xs do if x >= n then yield x]\n    qsort lt @ [n] @ qsort gteq\n\nprintfn \"%A\" <| qsort [4; 6; 9; 8; 3; 5; 1; 7; 2]\n```\n```text:\u5b9f\u884c\u7d50\u679c\n[1; 2; 3; 4; 5; 6; 7; 8; 9]\n```\n\n# \u76f4\u89d2\u4e09\u89d2\u5f62\u306e\u4e09\u8fba\n\n\u3010\u554f11\u3011\u4e09\u8fba\u306e\u9577\u3055\u304c\u540420\u4ee5\u4e0b\u306e\u6574\u6570\u3067\u69cb\u6210\u3055\u308c\u308b\u76f4\u89d2\u4e09\u89d2\u5f62\u3092\u5217\u6319\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4e26\u3073\u9806\u306b\u3088\u308b\u91cd\u8907\u3092\u6392\u9664\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u8907\u6570\u30bd\u30fc\u30b9\u306e\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u306b\u4e09\u5e73\u65b9\u306e\u5b9a\u7406\u3067\u6761\u4ef6\u4ed8\u3051\u3057\u307e\u3059\u3002\n\n```fsharp\nprintfn \"%A\" <| [\n    for a in 1..20 do\n    for b in 1..20 do\n    for c in 1..20 do\n    if a * a + b * b = c * c then yield (a, b, c)]\n```\n```text:\u5b9f\u884c\u7d50\u679c\n[(3, 4, 5); (4, 3, 5); (5, 12, 13); (6, 8, 10); (8, 6, 10); (8, 15, 17);\n (9, 12, 15); (12, 5, 13); (12, 9, 15); (12, 16, 20); (15, 8, 17); (16, 12, 20)]\n```\n\n## \u91cd\u8907\u6392\u9664\n\n\u203b \u52c9\u5f37\u4f1a\u3067\u51fa\u305f\u610f\u898b\u3092\u53cd\u6620\u3057\u305f\u9805\u76ee\u3067\u3059\u3002\n\n\u6761\u4ef6 $a<b$ \u3092\u8ffd\u52a0\u3059\u308c\u3070\u4e26\u3073\u9806\u306b\u3088\u308b\u91cd\u8907\u304c\u6392\u9664\u3067\u304d\u307e\u3059\u3002\n\n```fsharp\nprintfn \"%A\" <| [\n    for a in 1..20 do\n    for b in 1..20 do\n    for c in 1..20 do\n    if a * a + b * b = c * c && a < b then yield (a, b, c)]\n```\n```text:\u5b9f\u884c\u7d50\u679c\n[(3, 4, 5); (5, 12, 13); (6, 8, 10); (8, 15, 17); (9, 12, 15); (12, 16, 20)]\n```\n\n\u6761\u4ef6\u3067\u5236\u9650\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30bd\u30fc\u30b9\u304b\u3089\u629c\u3051\u3070\u8a08\u7b97\u91cf\u304c\u524a\u6e1b\u3067\u304d\u307e\u3059\u3002\n\n```fsharp\nprintfn \"%A\" <| [\n    for a in 1..20 do\n    for b in a..20 do\n    for c in b..20 do\n    if a * a + b * b = c * c then yield (a, b, c)]\n```\n```text:\u5b9f\u884c\u7d50\u679c\n[(3, 4, 5); (5, 12, 13); (6, 8, 10); (8, 15, 17); (9, 12, 15); (12, 16, 20)]\n```\n", "tags": ["F#", "Haskell"]}