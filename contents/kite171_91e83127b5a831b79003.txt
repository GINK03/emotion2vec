{"context": "\n\nhue\u306e\u8a2d\u5b9a\n\u307e\u305ahue\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\n//ip.js\nvar hue = require(\"node-hue-api\");\nvar displayBridges = function(bridge){\nconsole.log(\"Hue Bridges Found:\" + JSON.stringify(bridge));\n};\nhue.nupnpSearch().then(displayBridges).done();\n\n$ node ip.js\n\nHue Bridges Found: [{\"id\":\"xxxxx\",\"ipaddress\":\"xxx.xxx.x.xx\"}]\n\nip.js\u306b\u3088\u308aIP\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3057\n\u5148\u307b\u3069\u53d6\u5f97\u3057\u305fipaddress\u3092bridje.js\u306b\u5165\u308c\u307e\u3059\n//bridge.js\nvar HueApi = require(\"node-hue-api\").HueApi;\nvar hostname = \"xxx.xxx.x.xx\",//\u3053\u3053\u306b\u53d6\u5f97\u3057\u305fipaddress\u3092\u5165\u308c\u308b\n    newUserName = null \n    userDescription = \"devise description goes here\";\nvar displayUserResult = function (result) {\n    console.log(\"Created user:\" + JSON.stringify(result));\n\n};\nvar displayError = function(err){\n    console.log(err);\n};\nvar hue = new HueApi();\nhue.registerUser(hostname,newUserName,userDescription)\n    .then(displayUserResult)\n    .fail(displayError)\n    .done();\n\nbridge.js\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n$ node hue_bridge.js\n{ [Api Error: link button not pressed] message: 'link button not pressed', type: 101 }  \n//hue\u30d6\u30ea\u30c3\u30b8\u306e\u771f\u3093\u4e2d\u306e\u30dc\u30bf\u30f3\u3092\u62bc\u3059\n//\u518d\u5b9f\u884c\n$ node hue_bridge.js\nCreated user: \"xxxxxxxx\"\n\n\u5148\u307b\u3069\u306eip\u30a2\u30c9\u30ec\u30b9\u3068userID\u3092on.js\u306b\u5165\u308c\n//on.js\nvar hue  = require(\"node-hue-api\"),\n    HueApi = hue.HueApi,\n    lightState = hue.lightState;\n\nvar displayResult = function (result) {\n    console.log(result);\n};\n\nvar displayError = function(err){\n    console.error(err);\n}\n\nvar host = \"xxx.xxx.x.xx\",//ip\u30a2\u30c9\u30ec\u30b9\u3092\u5165\u308c\u308b\n    username = \"xxxxxxxxxxxxxxxxxxxx\",//userID\u3092\u5165\u308c\u308b\n    api = new HueApi(host,username);\n    state = lightState.create();\nfunction on(i){\n    api.setLightState(i,state.on())\n    .then(displayResult)\n    .fail(displayError)\n    .done();    \n}\nfunction off(i) {\n    api.setLightState(i,state.off())\n        .then(displayResult)\n        .fail(displayError)\n        .done();\n}\n\non(1);\n\n$ node on.js\n\n\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\uff11\u3064\u76ee\u306ehue\u304c\u70b9\u706f\u3059\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u308c\u3067hue\u306e\u6e96\u5099\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\nLinebot\u306e\u8a2d\u5b9a\nLinebot\u3092nodejs\u3067\u4f7f\u3046\u969b\u306b\u306fhttps://3846masa.github.io/node-linebot/\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n$ npm install --save @3846masa/linebot\n\n\u3092\u5b9f\u884c\u3057\u305f\u5f8c\nchannelSecret\u3068channelToken\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n//app.js\nconst LineBot = require('@3846masa/linebot/lib/LineBot').LineBot;\n\nconst bot = new LineBot({\n  channelSecret: 'XXXXXXXXXX',\n  channelToken: 'XXXXXXXXXX',\n});\n\nbot.on('webhook:*', (ev) => {\n  console.log('You got a event!', ev);\n});\n\nbot.on('webhook:message', (ev) => {\n  const message = ev.message;\n  ev.reply(message);\n});\n\nbot.listen(process.env.PORT || 3000);\n\n\u2193channelSecret\u306f\u3053\u3053\n\n\u2193ChannelToken\u306f\u3053\u3053\n\n\u305d\u3057\u3066\n$ node app.js\n\n\u3092\u5b9f\u884c\u3057\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u306e\u5225\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\n$ ngrok http 3000\n\n\u3092\u5b9f\u884c\u3057\u307e\u3059\u3068\u3001\nForwarding                http://xxxxxx.ngrok.io -> localhost:3000\nForwarding                https://xxxxx.ngrok.io -> localhost:3000\n\n\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u308b\u306e\u3067\u3001\u3053\u306e\u4e8c\u3064\u306e\u3046\u3061\u4e0b\u306ehttps\u306e\u65b9\u3092\u30b3\u30d4\u30fc\u3057\n\n\u3053\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nSAVE\u3057\n\nVERIFY\u3092\u62bc\u3057\nSuccess.\u304c\u51fa\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\u305d\u3046\u3057\u307e\u3057\u305f\u3089hue.js\u306bhue\u306e\u60c5\u5831\u3068linebot\u306e\u60c5\u5831\u3092\u5165\u308c\u307e\u3059\u3002\n//hue.js\nconst LineBot = require('@3846masa/linebot/lib/LineBot').LineBot;\n\nconst bot = new LineBot({\n  channelSecret: 'xxxxxxxxxxxxxxxx',//channelSecret\u3092\u5165\u308c\u308b\n  channelToken: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',//channelToken\u3092\u5165\u308c\u308b\n});\n\nvar hue = require(\"node-hue-api\"),\n  HueApi = hue.HueApi,\n  lightState = hue.lightState;\n\nvar displayResult = function (result) {\n  //console.log(result);\n};\n\nvar displayError = function (err) {\n  //console.error(err);\n}\n\nvar host = \"xxx.xxx.x.xx\",//ip\u30a2\u30c9\u30ec\u30b9\u3092\u5165\u308c\u308b\n  username = \"xxxxxxxxxxxxxxxxx\",//userId\u3092\u5165\u308c\u308b\n  api = new HueApi(host, username);\nstate = lightState.create();\n\nfunction red() {\n  for (let i = 0; i < 13; i++) {\n    api.setLightState(i, state.on().rgb(255, 0, 0))\n      .then(displayResult)\n      .fail(displayError)\n      .done();\n  }\n}\nfunction blue() {\n  for (let i = 1; i < 13; i++) {\n    api.setLightState(i, state.on().rgb(0, 0, 255))\n      .then(displayResult)\n      .fail(displayError)\n      .done();\n  }\n}\nfunction yellow() {\n  for (let i = 0; i < 13; i++) {\n    api.setLightState(i, state.on().rgb(255, 255, 0))\n      .then(displayResult)\n      .fail(displayError)\n      .done();\n  }\n}\n\nbot.on('webhook:message', (ev) => {\n  console.log(ev.source.userId);\n  const id = ev.source.userId;\n  const message = ev.message;\n  console.log(ev.message)\n  if (ev.message.text == 'hue') {\n    bot.push(id, {\n      \"type\": \"template\",\n      \"altText\": \"this is a buttons template\",\n      \"template\": {\n        \"type\": \"buttons\",\n        //\"thumbnailImageUrl\": \"https://~~.jpg\",\n        \"title\": \"Hue\",\n        \"text\": \"Please select\",\n        \"actions\": [\n          {\n            \"type\": \"postback\",\n            \"label\": \"RED\",\n            \"data\": \"red\"\n          },\n          {\n            \"type\": \"postback\",\n            \"label\": \"BLUE\",\n            \"data\": 'blue'\n          },\n          {\n            \"type\": \"postback\",\n            \"label\": \"YELLOW\",\n            \"data\": 'yellow'\n          }\n        ]\n      }\n    });\n\n  }else{\n    ev.message.text='hue \u3063\u3066\u9001\u308b\u3068menu\u304c\u51fa\u308b\u3088\uff01'\n    ev.reply(message);\n  }\n\n});\n\nbot.on('webhook:postback', (ev) => {\n  // console.log()\n  const message = ev.data;\n  console.log(ev.postback.data);\n  if (ev.postback.data == 'red') {\n    red();\n  } else if (ev.postback.data == 'blue') {\n    blue();\n  } else if (ev.postback.data == 'yellow') {\n    yellow();\n  }\n});\n\nbot.listen(process.env.PORT || 3000);\n\n\u3053\u306e\u9593\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u4e8c\u3064\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304d\n$ ngrok http 3000\n\n\u306f\u8d77\u52d5\u3057\u3063\u3071\u306a\u3057\u3067\uff08\u843d\u3068\u3059\u3068\u5148\u307b\u3069\u8a2d\u5b9a\u3057\u305fURL\u304c\u5909\u308f\u3063\u3066\u3057\u307e\u3063\u3066\u8a2d\u5b9a\u3057\u76f4\u3057\u306b\u306a\u308b\uff09\n$node hue.js\n\n\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\n\nhue\u3068\u9001\u308b\u3068\u30e1\u30cb\u30e5\u30fc\u304c\u51fa\u3066\u304d\u3066\u3001\u8272\u3092\u62bc\u3059\u3068hue\u306e\u8272\u304c\u5909\u308f\u308b\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002\n\u4ee5\u4e0a\u3067\u3059\uff01\n#hue\u306e\u8a2d\u5b9a\n\u307e\u305ahue\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\n\n```\n//ip.js\nvar hue = require(\"node-hue-api\");\nvar displayBridges = function(bridge){\nconsole.log(\"Hue Bridges Found:\" + JSON.stringify(bridge));\n};\nhue.nupnpSearch().then(displayBridges).done();\n```\n\n```\n$ node ip.js\n\nHue Bridges Found: [{\"id\":\"xxxxx\",\"ipaddress\":\"xxx.xxx.x.xx\"}]\n```\nip.js\u306b\u3088\u308aIP\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3057\n\u5148\u307b\u3069\u53d6\u5f97\u3057\u305fipaddress\u3092bridje.js\u306b\u5165\u308c\u307e\u3059\n\n```\n//bridge.js\nvar HueApi = require(\"node-hue-api\").HueApi;\nvar hostname = \"xxx.xxx.x.xx\",//\u3053\u3053\u306b\u53d6\u5f97\u3057\u305fipaddress\u3092\u5165\u308c\u308b\n\tnewUserName = null \n\tuserDescription = \"devise description goes here\";\nvar displayUserResult = function (result) {\n\tconsole.log(\"Created user:\" + JSON.stringify(result));\n\t\n};\nvar displayError = function(err){\n\tconsole.log(err);\n};\nvar hue = new HueApi();\nhue.registerUser(hostname,newUserName,userDescription)\n\t.then(displayUserResult)\n\t.fail(displayError)\n\t.done();\n```\nbridge.js\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\n$ node hue_bridge.js\n{ [Api Error: link button not pressed] message: 'link button not pressed', type: 101 }  \n//hue\u30d6\u30ea\u30c3\u30b8\u306e\u771f\u3093\u4e2d\u306e\u30dc\u30bf\u30f3\u3092\u62bc\u3059\n//\u518d\u5b9f\u884c\n$ node hue_bridge.js\nCreated user: \"xxxxxxxx\"\n```\n\n\u5148\u307b\u3069\u306eip\u30a2\u30c9\u30ec\u30b9\u3068userID\u3092on.js\u306b\u5165\u308c\n\n```\n//on.js\nvar hue  = require(\"node-hue-api\"),\n\tHueApi = hue.HueApi,\n\tlightState = hue.lightState;\n\t\nvar displayResult = function (result) {\n\tconsole.log(result);\n};\n\nvar displayError = function(err){\n\tconsole.error(err);\n}\n\nvar host = \"xxx.xxx.x.xx\",//ip\u30a2\u30c9\u30ec\u30b9\u3092\u5165\u308c\u308b\n\tusername = \"xxxxxxxxxxxxxxxxxxxx\",//userID\u3092\u5165\u308c\u308b\n\tapi = new HueApi(host,username);\n\tstate = lightState.create();\nfunction on(i){\n\tapi.setLightState(i,state.on())\n\t.then(displayResult)\n\t.fail(displayError)\n\t.done();\t\n}\nfunction off(i) {\n\tapi.setLightState(i,state.off())\n\t\t.then(displayResult)\n\t\t.fail(displayError)\n\t\t.done();\n}\n\non(1);\n```\n\n\n```\n$ node on.js\n```\n\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\uff11\u3064\u76ee\u306ehue\u304c\u70b9\u706f\u3059\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u308c\u3067hue\u306e\u6e96\u5099\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n#Linebot\u306e\u8a2d\u5b9a\nLinebot\u3092nodejs\u3067\u4f7f\u3046\u969b\u306b\u306f<https://3846masa.github.io/node-linebot/>\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```\n$ npm install --save @3846masa/linebot\n```\n\u3092\u5b9f\u884c\u3057\u305f\u5f8c\nchannelSecret\u3068channelToken\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```\n//app.js\nconst LineBot = require('@3846masa/linebot/lib/LineBot').LineBot;\n\nconst bot = new LineBot({\n  channelSecret: 'XXXXXXXXXX',\n  channelToken: 'XXXXXXXXXX',\n});\n\nbot.on('webhook:*', (ev) => {\n  console.log('You got a event!', ev);\n});\n\nbot.on('webhook:message', (ev) => {\n  const message = ev.message;\n  ev.reply(message);\n});\n\nbot.listen(process.env.PORT || 3000);\n```\n\n\u2193channelSecret\u306f\u3053\u3053\n![ 2016-12-09 0.20.04.png](https://qiita-image-store.s3.amazonaws.com/0/69033/88de3f74-7c24-3e44-d2f1-681f4df1cea3.png)\n\n\u2193ChannelToken\u306f\u3053\u3053\n![ 2016-12-09 0.20.12.png](https://qiita-image-store.s3.amazonaws.com/0/69033/7cabab55-8e2b-0bc3-1265-62715919107f.png)\n\n\u305d\u3057\u3066\n\n```\n$ node app.js\n```\n\u3092\u5b9f\u884c\u3057\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u306e\u5225\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\n\n```\n$ ngrok http 3000\n```\n\n\u3092\u5b9f\u884c\u3057\u307e\u3059\u3068\u3001\n\n```\nForwarding                http://xxxxxx.ngrok.io -> localhost:3000\nForwarding                https://xxxxx.ngrok.io -> localhost:3000\n```\n\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u308b\u306e\u3067\u3001\u3053\u306e\u4e8c\u3064\u306e\u3046\u3061\u4e0b\u306ehttps\u306e\u65b9\u3092\u30b3\u30d4\u30fc\u3057\n![ 2016-12-09 0.28.04.png](https://qiita-image-store.s3.amazonaws.com/0/69033/dd887620-ab20-ae15-0804-0a53cb36ad5e.png)\n\n\u3053\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nSAVE\u3057\n![ 2016-12-09 0.30.02.png](https://qiita-image-store.s3.amazonaws.com/0/69033/03ade2b4-21b3-fa00-fbc4-8e32a3b2a649.png)\nVERIFY\u3092\u62bc\u3057\nSuccess.\u304c\u51fa\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\u305d\u3046\u3057\u307e\u3057\u305f\u3089hue.js\u306bhue\u306e\u60c5\u5831\u3068linebot\u306e\u60c5\u5831\u3092\u5165\u308c\u307e\u3059\u3002\n\n```\n//hue.js\nconst LineBot = require('@3846masa/linebot/lib/LineBot').LineBot;\n\nconst bot = new LineBot({\n  channelSecret: 'xxxxxxxxxxxxxxxx',//channelSecret\u3092\u5165\u308c\u308b\n  channelToken: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',//channelToken\u3092\u5165\u308c\u308b\n});\n\nvar hue = require(\"node-hue-api\"),\n  HueApi = hue.HueApi,\n  lightState = hue.lightState;\n\nvar displayResult = function (result) {\n  //console.log(result);\n};\n\nvar displayError = function (err) {\n  //console.error(err);\n}\n\nvar host = \"xxx.xxx.x.xx\",//ip\u30a2\u30c9\u30ec\u30b9\u3092\u5165\u308c\u308b\n  username = \"xxxxxxxxxxxxxxxxx\",//userId\u3092\u5165\u308c\u308b\n  api = new HueApi(host, username);\nstate = lightState.create();\n\nfunction red() {\n  for (let i = 0; i < 13; i++) {\n    api.setLightState(i, state.on().rgb(255, 0, 0))\n      .then(displayResult)\n      .fail(displayError)\n      .done();\n  }\n}\nfunction blue() {\n  for (let i = 1; i < 13; i++) {\n    api.setLightState(i, state.on().rgb(0, 0, 255))\n      .then(displayResult)\n      .fail(displayError)\n      .done();\n  }\n}\nfunction yellow() {\n  for (let i = 0; i < 13; i++) {\n    api.setLightState(i, state.on().rgb(255, 255, 0))\n      .then(displayResult)\n      .fail(displayError)\n      .done();\n  }\n}\n\nbot.on('webhook:message', (ev) => {\n  console.log(ev.source.userId);\n  const id = ev.source.userId;\n  const message = ev.message;\n  console.log(ev.message)\n  if (ev.message.text == 'hue') {\n    bot.push(id, {\n      \"type\": \"template\",\n      \"altText\": \"this is a buttons template\",\n      \"template\": {\n        \"type\": \"buttons\",\n        //\"thumbnailImageUrl\": \"https://~~.jpg\",\n        \"title\": \"Hue\",\n        \"text\": \"Please select\",\n        \"actions\": [\n          {\n            \"type\": \"postback\",\n            \"label\": \"RED\",\n            \"data\": \"red\"\n          },\n          {\n            \"type\": \"postback\",\n            \"label\": \"BLUE\",\n            \"data\": 'blue'\n          },\n          {\n            \"type\": \"postback\",\n            \"label\": \"YELLOW\",\n            \"data\": 'yellow'\n          }\n        ]\n      }\n    });\n\n  }else{\n    ev.message.text='hue \u3063\u3066\u9001\u308b\u3068menu\u304c\u51fa\u308b\u3088\uff01'\n    ev.reply(message);\n  }\n\n});\n\nbot.on('webhook:postback', (ev) => {\n  // console.log()\n  const message = ev.data;\n  console.log(ev.postback.data);\n  if (ev.postback.data == 'red') {\n    red();\n  } else if (ev.postback.data == 'blue') {\n    blue();\n  } else if (ev.postback.data == 'yellow') {\n    yellow();\n  }\n});\n\nbot.listen(process.env.PORT || 3000);\n```\n\n\n\u3053\u306e\u9593\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u4e8c\u3064\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u958b\u304d\n\n```\n$ ngrok http 3000\n```\n\u306f\u8d77\u52d5\u3057\u3063\u3071\u306a\u3057\u3067\uff08\u843d\u3068\u3059\u3068\u5148\u307b\u3069\u8a2d\u5b9a\u3057\u305fURL\u304c\u5909\u308f\u3063\u3066\u3057\u307e\u3063\u3066\u8a2d\u5b9a\u3057\u76f4\u3057\u306b\u306a\u308b\uff09\n\n```\n$node hue.js\n```\n\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\n\n![IMG_3010.PNG](https://qiita-image-store.s3.amazonaws.com/0/69033/51a627ef-0751-becf-ab84-dea699219325.png)\nhue\u3068\u9001\u308b\u3068\u30e1\u30cb\u30e5\u30fc\u304c\u51fa\u3066\u304d\u3066\u3001\u8272\u3092\u62bc\u3059\u3068hue\u306e\u8272\u304c\u5909\u308f\u308b\u3088\u3046\u306b\u3067\u304d\u307e\u3059\u3002\n\u4ee5\u4e0a\u3067\u3059\uff01\n\n", "tags": ["linebot", "Node.js"]}