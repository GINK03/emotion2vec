{"context": " More than 1 year has passed since last update.Google App Engine(GAE)/Java\u3067\u3001TaskQueue\u306e\u975e\u540c\u671fAPI\u3092\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u6307\u5b9a\u3057\u3066\u547c\u3073\u51fa\u3057\u305f\u306e\u306bTask\u306eAdd\u304c\u6d88\u5931\u3059\u308b\uff08Add\u3055\u308c\u306a\u3044\uff09\u3001\u3068\u3044\u3046\u73fe\u8c61\u306b\u906d\u9047\u3057\u307e\u3057\u305f\u3002\nGAE\u3067\u306fDatastore\u306e\u5f31\u3044\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u6a5f\u80fd\u3092\u30ab\u30d0\u30fc\u3059\u308b\u70ba\u306b\u7121\u9650\u30ea\u30c8\u30e9\u30a4\u3059\u308bTaskQueue\u3092\u4f75\u7528\u3057\u3066\u7d50\u679c\u6574\u5408\u6027\u3092\u62c5\u4fdd\u3059\u308b\u3001\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3088\u304f\u3084\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u306f\u7d50\u679c\u6574\u5408\u6027\u3092\u4fdd\u3064\u4e8b\u304c\u3067\u304d\u307e\u305b\u3093( \u30fb\u1dc4\u1f62\u30fb\u1dc5 )\n\u4ed5\u69d8\u306a\u306e\u304b\u3001\u305d\u308c\u3068\u3082\u30b3\u30fc\u30c9\u306b\u554f\u984c\u304c\u3042\u308b\u306e\u304b\u3082\u307e\u3060\u5206\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u8b58\u8005\u304c\u76ee\u3092\u3068\u3081\u3066\u304f\u308c\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u8a18\u4e8b\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\n\u305d\u306e\u307e\u307e\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092github\u306b\u7f6e\u3044\u3066\u307e\u3059\u3002\nhttps://github.com/knightso/asynctqtest\n\nTestServlet.java\nAsyncDatastoreService datastore = DatastoreServiceFactory\n        .getAsyncDatastoreService();\n\nList<Future<?>> futures = new ArrayList<Future<?>>();\nfor (int i = 0; i < 10; i++) {\n    Transaction tx = null;\n    try {\n        tx = datastore.beginTransaction().get();\n\n        String keyName = UUID.randomUUID().toString();\n        Entity entity = new Entity(\"Task\", keyName);\n        entity.setProperty(\"status\", \"pending\");\n        entity.setProperty(\"createdAt\", new Date());\n        datastore.put(tx, entity);\n\n        Queue queue = QueueFactory.getDefaultQueue();\n        queue.addAsync(\n                tx,\n                TaskOptions.Builder.withUrl(\"/task\")\n                        .param(\"key\", keyName).method(Method.GET));\n\n        futures.add(tx.commitAsync());\n    } catch (Throwable t) {\n        logger.severe(\"error: \" + t.getMessage());\n        t.printStackTrace();\n        if (tx != null && tx.isActive()) {\n            tx.rollback();\n        }\n        if (t instanceof RuntimeException) {\n            throw (RuntimeException) t;\n        }\n        throw new IllegalStateException(t);\n    }\n}\n\nfor (Future<?> f : futures) {\n    try {\n        f.get();\n    } catch (InterruptedException | ExecutionException e) {\n        throw new IllegalStateException(e);\n    }\n}\n\n\n\u554f\u984c\u306e\u7b87\u6240\u2193\n\nTestServlet.java\n        Queue queue = QueueFactory.getDefaultQueue();\n        queue.addAsync(\n                tx,\n                TaskOptions.Builder.withUrl(\"/task\")\n                        .param(\"key\", keyName).method(Method.GET));\n\n\n\u30eb\u30fc\u30d7\u5185\u3067\u305d\u308c\u305e\u308cDatastore\u306b\"Task\"\u3068\u3044\u3046Kind\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4e00\u4ef6\u4fdd\u5b58\u3001\u3055\u3089\u306bTaskQueue\u306bTask\u3092\u4e00\u4ef6\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\nDatastore\u3001TaskQueue\u3069\u3061\u3089\u306eAPI\u3082\u975e\u540c\u671f\u7248\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001Future\u3092\u51e6\u7406\u3057\u3066\u304a\u3089\u305a\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306ecommitAsync\u306e\u7d50\u679cFuture\u3092\u3042\u3068\u3067\u307e\u3068\u3081\u3066\u540c\u671f\u3068\u3063\u3066\u307e\u3059\u3002\n\n\u671f\u5f85\u3059\u308b\u6319\u52d5\n\u5404\u30eb\u30fc\u30d7\u5185\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u6307\u5b9a\u3057\u3066Datastore\u3078\u306eput\u3001TaskQueue\u3078\u306eAdd\u3092\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3069\u3061\u3089\u304b\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u304b\u304b\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5b9f\u969b\nDatastore\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3060\u3051put\u3055\u308c\u3001Task\u304cAdd\u3055\u308c\u306a\u3044\u30b1\u30fc\u30b9\u304c\u4f55\u5ea6\u304b(10\u56de\u30eb\u30fc\u30d7\u4e2d3\u301c5\u56de)\u767a\u751f\u3057\u307e\u3059\u3002\n\u30a8\u30e9\u30fc\u3082\u304a\u304d\u307e\u305b\u3093\u3002\n\nRun in Last Minute\u304c10\u306b\u306a\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u306b5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u30ed\u30b0\u3092\u898b\u3066\u3082TQ\u7d4c\u7531\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u306f\u305a\u306eServlet\u306f5\u56de\u3057\u304b\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u7591\u554f\nTaskQueue\u306e\u975e\u540c\u671fAPI\u306fFuture#get\u3057\u3066\u540c\u671f\u3092\u53d6\u3063\u3066\u4e0a\u3052\u306a\u3044\u3068\u7d50\u679c\u304c\u4fdd\u8a3c\u3055\u308c\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttps://cloud.google.com/appengine/docs/java/datastore/async#Working_with_Async_Transactions\n\u3092\u898b\u308b\u3068\u3001\"When you are using a transaction, calling Transaction.commit() blocks on the result of all async calls made since the transaction started before committing it\" \u3068\u66f8\u304b\u308c\u3066\u3044\u3066\u3001\u4f55\u5ea6\u304b\u30c6\u30b9\u30c8\u3057\u305f\u9650\u308a\u3067\u306f\u78ba\u304b\u306bDatastore\u306e\u975e\u540c\u671fAPI\u306f\u540c\u671f\u3092\u53d6\u3089\u306a\u304f\u3066\u3082\u3061\u3083\u3093\u3068\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u3053\u306e\u8a18\u8ff0\u306fTaskQueue API\u306b\u306f\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n\uff08\u3068\u308a\u3042\u3048\u305a\u306e\uff09\u5bfe\u7b56\nTaskQueue API\u3060\u3051\u540c\u671f\u7248\u306b\u5909\u66f4\u3057\u305f\u3068\u3053\u308d\u3001\u7121\u4e8b\u306b\u5168\u3066\u306e\u30bf\u30b9\u30af\u304cAdd\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3067\u3082\u305d\u306e\u90e8\u5206\u3067\u5e73\u884c\u51e6\u7406\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3068\u3066\u3082\u6b8b\u5ff5( \u30fb\u1dc4\u1f62\u30fb\u1dc5 )\n\n\u3061\u306a\u307f\u306b\u86c7\u8db3\u3067\u3059\u304c\u30fb\u30fb\nGAE/Go\u3067\u306fgoroutine+channel\u3092\u4f7f\u3063\u3066\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3054\u3068\u307e\u308b\u3063\u3068\u4e26\u884c\u51e6\u7406\u3067\u304d\u308b\u306e\u3067\u3001\u4e0a\u8a18\u306e\u554f\u984c\u306f\u304a\u304d\u307e\u305b\u3093\uff08\uff40\u30fb\u03c9\u30fb\u00b4\uff09\uff84\uff9e\uff94\n\u3042\u3001GAE/Java\u3067\u3082Thread\u4f7f\u3048\u308b\u304b\u3002\u3002\u3067\u3082Thread\u81ea\u4f53\u304c\u91cd\u3059\u304e\u3066\u3042\u307e\u308a\u9b45\u529b\u3092\u611f\u3058\u306a\u3044\u3002\u3002\nGoogle App Engine(GAE)/Java\u3067\u3001TaskQueue\u306e\u975e\u540c\u671fAPI\u3092\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u6307\u5b9a\u3057\u3066\u547c\u3073\u51fa\u3057\u305f\u306e\u306bTask\u306eAdd\u304c\u6d88\u5931\u3059\u308b\uff08Add\u3055\u308c\u306a\u3044\uff09\u3001\u3068\u3044\u3046\u73fe\u8c61\u306b\u906d\u9047\u3057\u307e\u3057\u305f\u3002\n\nGAE\u3067\u306fDatastore\u306e\u5f31\u3044\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u6a5f\u80fd\u3092\u30ab\u30d0\u30fc\u3059\u308b\u70ba\u306b\u7121\u9650\u30ea\u30c8\u30e9\u30a4\u3059\u308bTaskQueue\u3092\u4f75\u7528\u3057\u3066\u7d50\u679c\u6574\u5408\u6027\u3092\u62c5\u4fdd\u3059\u308b\u3001\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3088\u304f\u3084\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u306f\u7d50\u679c\u6574\u5408\u6027\u3092\u4fdd\u3064\u4e8b\u304c\u3067\u304d\u307e\u305b\u3093( \u30fb\u1dc4\u1f62\u30fb\u1dc5 )\n\n\u4ed5\u69d8\u306a\u306e\u304b\u3001\u305d\u308c\u3068\u3082\u30b3\u30fc\u30c9\u306b\u554f\u984c\u304c\u3042\u308b\u306e\u304b\u3082\u307e\u3060\u5206\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u8b58\u8005\u304c\u76ee\u3092\u3068\u3081\u3066\u304f\u308c\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u8a18\u4e8b\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## \u30b3\u30fc\u30c9\n\n\u305d\u306e\u307e\u307e\u30c7\u30d7\u30ed\u30a4\u3067\u304d\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092github\u306b\u7f6e\u3044\u3066\u307e\u3059\u3002\nhttps://github.com/knightso/asynctqtest\n\n```TestServlet.java\nAsyncDatastoreService datastore = DatastoreServiceFactory\n\t\t.getAsyncDatastoreService();\n\nList<Future<?>> futures = new ArrayList<Future<?>>();\nfor (int i = 0; i < 10; i++) {\n\tTransaction tx = null;\n\ttry {\n\t\ttx = datastore.beginTransaction().get();\n\t\t\n\t\tString keyName = UUID.randomUUID().toString();\n\t\tEntity entity = new Entity(\"Task\", keyName);\n\t\tentity.setProperty(\"status\", \"pending\");\n\t\tentity.setProperty(\"createdAt\", new Date());\n\t\tdatastore.put(tx, entity);\n\n\t\tQueue queue = QueueFactory.getDefaultQueue();\n\t\tqueue.addAsync(\n\t\t\t\ttx,\n\t\t\t\tTaskOptions.Builder.withUrl(\"/task\")\n\t\t\t\t\t\t.param(\"key\", keyName).method(Method.GET));\n\n\t\tfutures.add(tx.commitAsync());\n\t} catch (Throwable t) {\n\t\tlogger.severe(\"error: \" + t.getMessage());\n\t\tt.printStackTrace();\n\t\tif (tx != null && tx.isActive()) {\n\t\t\ttx.rollback();\n\t\t}\n\t\tif (t instanceof RuntimeException) {\n\t\t\tthrow (RuntimeException) t;\n\t\t}\n\t\tthrow new IllegalStateException(t);\n\t}\n}\n\nfor (Future<?> f : futures) {\n\ttry {\n\t\tf.get();\n\t} catch (InterruptedException | ExecutionException e) {\n\t\tthrow new IllegalStateException(e);\n\t}\n}\n```\n\n\u554f\u984c\u306e\u7b87\u6240\u2193\n\n```TestServlet.java\n\t\tQueue queue = QueueFactory.getDefaultQueue();\n\t\tqueue.addAsync(\n\t\t\t\ttx,\n\t\t\t\tTaskOptions.Builder.withUrl(\"/task\")\n\t\t\t\t\t\t.param(\"key\", keyName).method(Method.GET));\n```\n\n\u30eb\u30fc\u30d7\u5185\u3067\u305d\u308c\u305e\u308cDatastore\u306b\"Task\"\u3068\u3044\u3046Kind\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u4e00\u4ef6\u4fdd\u5b58\u3001\u3055\u3089\u306bTaskQueue\u306bTask\u3092\u4e00\u4ef6\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\nDatastore\u3001TaskQueue\u3069\u3061\u3089\u306eAPI\u3082\u975e\u540c\u671f\u7248\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u304c\u3001Future\u3092\u51e6\u7406\u3057\u3066\u304a\u3089\u305a\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306ecommitAsync\u306e\u7d50\u679cFuture\u3092\u3042\u3068\u3067\u307e\u3068\u3081\u3066\u540c\u671f\u3068\u3063\u3066\u307e\u3059\u3002\n\n## \u671f\u5f85\u3059\u308b\u6319\u52d5\n\n\u5404\u30eb\u30fc\u30d7\u5185\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u6307\u5b9a\u3057\u3066Datastore\u3078\u306eput\u3001TaskQueue\u3078\u306eAdd\u3092\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3069\u3061\u3089\u304b\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u304b\u304b\u308b\u3053\u3068\u3092\u671f\u5f85\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u5b9f\u969b\n\nDatastore\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3060\u3051put\u3055\u308c\u3001Task\u304cAdd\u3055\u308c\u306a\u3044\u30b1\u30fc\u30b9\u304c\u4f55\u5ea6\u304b(10\u56de\u30eb\u30fc\u30d7\u4e2d3\u301c5\u56de)\u767a\u751f\u3057\u307e\u3059\u3002\n\u30a8\u30e9\u30fc\u3082\u304a\u304d\u307e\u305b\u3093\u3002\n\n![asynctq_problem_tqlist.png](https://qiita-image-store.s3.amazonaws.com/0/31437/b7275157-2902-60a9-cdd2-41f327441923.png)\n\nRun in Last Minute\u304c10\u306b\u306a\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u306b5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u30ed\u30b0\u3092\u898b\u3066\u3082TQ\u7d4c\u7531\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u306f\u305a\u306eServlet\u306f5\u56de\u3057\u304b\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\n## \u7591\u554f\n\nTaskQueue\u306e\u975e\u540c\u671fAPI\u306fFuture#get\u3057\u3066\u540c\u671f\u3092\u53d6\u3063\u3066\u4e0a\u3052\u306a\u3044\u3068\u7d50\u679c\u304c\u4fdd\u8a3c\u3055\u308c\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttps://cloud.google.com/appengine/docs/java/datastore/async#Working_with_Async_Transactions\n\u3092\u898b\u308b\u3068\u3001\"When you are using a transaction, calling Transaction.commit() blocks on the result of all async calls made since the transaction started before committing it\" \u3068\u66f8\u304b\u308c\u3066\u3044\u3066\u3001\u4f55\u5ea6\u304b\u30c6\u30b9\u30c8\u3057\u305f\u9650\u308a\u3067\u306f\u78ba\u304b\u306bDatastore\u306e\u975e\u540c\u671fAPI\u306f\u540c\u671f\u3092\u53d6\u3089\u306a\u304f\u3066\u3082\u3061\u3083\u3093\u3068\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u3053\u306e\u8a18\u8ff0\u306fTaskQueue API\u306b\u306f\u5f53\u3066\u306f\u307e\u3089\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n## \uff08\u3068\u308a\u3042\u3048\u305a\u306e\uff09\u5bfe\u7b56\n\nTaskQueue API\u3060\u3051\u540c\u671f\u7248\u306b\u5909\u66f4\u3057\u305f\u3068\u3053\u308d\u3001\u7121\u4e8b\u306b\u5168\u3066\u306e\u30bf\u30b9\u30af\u304cAdd\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3067\u3082\u305d\u306e\u90e8\u5206\u3067\u5e73\u884c\u51e6\u7406\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3068\u3066\u3082\u6b8b\u5ff5( \u30fb\u1dc4\u1f62\u30fb\u1dc5 )\n\n## \u3061\u306a\u307f\u306b\u86c7\u8db3\u3067\u3059\u304c\u30fb\u30fb\n\nGAE/Go\u3067\u306fgoroutine+channel\u3092\u4f7f\u3063\u3066\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3054\u3068\u307e\u308b\u3063\u3068\u4e26\u884c\u51e6\u7406\u3067\u304d\u308b\u306e\u3067\u3001\u4e0a\u8a18\u306e\u554f\u984c\u306f\u304a\u304d\u307e\u305b\u3093\uff08\uff40\u30fb\u03c9\u30fb\u00b4\uff09\uff84\uff9e\uff94\n\n\u3042\u3001GAE/Java\u3067\u3082Thread\u4f7f\u3048\u308b\u304b\u3002\u3002\u3067\u3082Thread\u81ea\u4f53\u304c\u91cd\u3059\u304e\u3066\u3042\u307e\u308a\u9b45\u529b\u3092\u611f\u3058\u306a\u3044\u3002\u3002\n", "tags": ["GAE", "Java", "GoogleCloudPlatform", "GoogleAppEngine"]}