{"context": "\u5fd8\u5099\u9332\n\nstring to bytes32\nbytes32(\"string\");\n\n\nfrom std.sol in ether.camp\n\nstd.sol\n// contract with util functions\ncontract util is abstract {\n  // Converts 'string' to 'bytes32'\n  function s2b(string s) internal returns (bytes32) {\n      bytes memory b = bytes(s);\n      uint r = 0;\n      for (uint i = 0; i < 32; i++) {\n          if (i < b.length) {\n              r = r | uint(b[i]);\n          }\n          if (i < 31) r = r * 256;\n      }\n      return bytes32(r);\n  }\n}\n\n\n\n\u95a2\u9023\u7528\u8a9e\n\n\u578b\u5909\u63db\ntype casting\ncast\n\n\n\n\u5fd8\u5099\u9332\n\n\n## string to bytes32\n\n\n```\nbytes32(\"string\");\n```\n\n\n## from std.sol in ether.camp\n\n\n```solidity:std.sol\n// contract with util functions\ncontract util is abstract {\n  // Converts 'string' to 'bytes32'\n  function s2b(string s) internal returns (bytes32) {\n      bytes memory b = bytes(s);\n      uint r = 0;\n      for (uint i = 0; i < 32; i++) {\n          if (i < b.length) {\n              r = r | uint(b[i]);\n          }\n          if (i < 31) r = r * 256;\n      }\n      return bytes32(r);\n  }\n}\n```\n\n\n## \u95a2\u9023\u7528\u8a9e\n\n* \u578b\u5909\u63db\n* type casting\n* cast\n", "tags": ["Ethereum", "solidity"]}