{"context": "\n\n\u6975\u5c0fLisp\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u3092\u4f5c\u308d\u3046\uff01\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u975e\u5e38\u306b\u6a5f\u80fd\u3092\u7d5e\u3063\u305fLisp\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306e\u4f5c\u6210\u3092\u901a\u3058\u3066\u3001\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u3084\u3001\u305d\u308c\u306b\u307e\u3064\u308f\u308b\u30c6\u30af\u30cb\u30c3\u30af\u3001\u8003\u3048\u65b9\u306a\u3069\u3092\u7d39\u4ecb\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u4eca\u56de\u4f5c\u6210\u3059\u308bLisp\u306b\u767b\u5834\u3059\u308b\u306e\u306f\u3001\u56db\u5247\u6f14\u7b97\u95a2\u6570\u3068\u3001\u6570\u5024\u578b\u3060\u3051\u306e\u975e\u5e38\u306b\u30df\u30cb\u30de\u30e0\u306a\u3082\u306e\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30bd\u30fc\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\n(* (+ 3 18) 2)\n\n\n\u3053\u308c\u3092\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306a\u3069\u306b\u98df\u308f\u305b\u308b\u3068\u3001(3 + 18) * 2 \u3068\u3044\u3046\u8a08\u7b97\u3092\u884c\u3044\u300142\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\u56db\u5247\u6f14\u7b97\u3057\u304b\u3067\u304d\u306a\u3044\u3068\u3066\u3082\u6975\u5c0f\u306e\u3082\u306e\u3067\u3059\u304c\u3001\u4f5c\u6210\u306e\u904e\u7a0b\u3067\u306f\u69d8\u3005\u306a\u30c6\u30af\u30cb\u30c3\u30af\u3092\u4ea4\u3048\u3064\u3064\u7d39\u4ecb\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\"\u7121\u9650\u30ea\u30b9\u30c8\u306e\u4f5c\u308a\u65b9\"\u3067\u4f5c\u6210\u3057\u305fList\u3092\u591a\u7528\u3057\u307e\u3059\u306e\u3067\u3001\u968f\u6642\u53c2\u7167\u3057\u3066\u9802\u3051\u308b\u3068\u8aad\u307f\u3084\u3059\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u305d\u3082\u305d\u3082Lisp\u3063\u3066\u306a\u3093\u3060\u3088\uff1f\nLisp\u306fList Processing\u306b\u7531\u6765\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002\u3068\u3066\u3082\u53e4\u3044\u8a00\u8a9e\u3067\u3059\u304c\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u6b74\u53f2\u7684\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u305f\u8a00\u8a9e\u3067\u3059\u3002\n\u307e\u305f\u3001\u300c\u8a08\u7b97\u6a5f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u69cb\u9020\u3068\u89e3\u91c8\u300d\u3068\u3044\u3046MIT\u306e\u8a08\u7b97\u6a5f\u79d1\u5b66\u306e\u6559\u79d1\u66f8\u306b\u3082\u4f7f\u308f\u308c\u305f\u8a00\u8a9e\u3067\u3082\u3042\u308a\u307e\u3059\u3002\nLisp\u306b\u89e6\u308c\u308b\u3053\u3068\u3067\u3001\u5e83\u304f\u4e00\u822c\u306b\u73fe\u5728\u4f7f\u308f\u308c\u3066\u3044\u308b\u8a00\u8a9e\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u306a\u304b\u306a\u304b\u5f97\u3089\u308c\u306a\u3044\u9762\u767d\u3044\u4f53\u9a13\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u306e\u3067\u3001\u305d\u308c\u3089\u3082\u968f\u6642\u7d39\u4ecb\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nLisp\u306e\u30ad\u30db\u30f3\n\u3055\u3066\u3001\u3082\u3063\u3068\u8e0f\u307f\u8fbc\u3093\u3060Lisp\u306e\u80cc\u666f\u306f\u3055\u3089\u3063\u3068\u3053\u308c\u304f\u3089\u3044\u306b\u3057\u3066\u3001\n\u4eca\u56de\u5b9f\u88c5\u3059\u308bLisp\u306e\u57fa\u5e79\u90e8\u5206\u306b\u3064\u3044\u3066\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u8e0f\u307f\u8fbc\u307f\u3059\u304e\u308b\u3068\u3084\u3084\u3053\u3057\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u5fc5\u8981\u6700\u4f4e\u9650\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\n\u3055\u3066\u3001\u7a81\u7136\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306eLisp\u30bd\u30fc\u30b9\u306f\u306a\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\n\n(+ 4 2)\n\n\n\u65e2\u306b\u6c17\u4ed8\u3044\u3066\u3044\u308b\u65b9\u3082\u3044\u3089\u3063\u3057\u3083\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\n\u30d7\u30e9\u30b9\u8a18\u53f7\u306f\u95a2\u6570\u3067\u3059\u3002\u305d\u3057\u3066\u3001\u305d\u308c\u306b\u7d9a\u304f\u3082\u306e\u304c\u5f15\u6570\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3055\u3089\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059\u3002\n\n(+ 4 2 4)\n\n\n\u3053\u308c\u306f\u8a08\u7b97\u3059\u308b\u306810\u3067\u3059\u306d\u3002\n\u3055\u3066\u3001\u3053\u308c\u3060\u3051\u306e\u60c5\u5831\u3067\u3001\u3082\u3046\u6700\u521d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n(* (+ 4 2) 10)\n\n\n\u5185\u5074\u306e\u90e8\u5206\u304c\u512a\u5148\u3055\u308c\u307e\u3059\u304b\u3089\u3001\n\n(* (+ 4 2) 10)\n\n\n\n(* 6 10)\n\n\n\n60\n\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u306d\n\u62ec\u5f27\u3070\u304b\u308a\u3067\u4e00\u4f53\u306a\u3093\u3060\uff1f\u3068\u3044\u3046\u6c17\u6301\u3061\u304c\u5c11\u3057\u306f\u3084\u308f\u3089\u3044\u3060\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3067\u3001\u30ea\u30b9\u30c8\u3063\u3066\u3069\u3053\u306b\u51fa\u3066\u304f\u308b\u306e\uff1f\nLisp\u306fLisp Processing\u3001\u3059\u3079\u3066\u306e\u57fa\u76e4\u306f\u30ea\u30b9\u30c8\uff08\u7247\u65b9\u5411\u30ea\u30f3\u30af\u30ea\u30b9\u30c8\uff09\u3067\u3059\u3002\n\n(+ 4 2)\n\n\n\u3053\u308c\u306f\u305f\u3060\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u304c\u3001Lisp\u306e\u51e6\u7406\u7cfb\u306f\u3053\u308c\u3092\u3001\n+, 4, 2\n\uff13\u3064\u306e\u8981\u7d20\u306e\u30ea\u30b9\u30c8\u3060\u3068\u307e\u305a\u7406\u89e3\u3057\u307e\u3059\u3002\n\u3042\u308c\uff1f\u30ea\u30b9\u30c8\u306f\u4e00\u822c\u306b\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\u3002\n\u3053\u308c\u3067\u306f\u8a08\u7b97\u3067\u304d\u306a\u3044\u3058\u3083\u306a\u3044\u304b\u3001\u3068\u3044\u3046\u6c17\u304c\u3057\u3066\u304d\u307e\u3059\u306d\u3002\n\n\u8a55\u4fa1\u3059\u308b(1)\nLisp\u306b\u306f\u3001\u8a55\u4fa1\u3059\u308b\u3001\u3068\u3044\u3046\u6982\u5ff5\u304c\u3042\u308a\u307e\u3059\u3002Lisp\u51e6\u7406\u7cfb\u306f\u3068\u3066\u3082\u8a55\u4fa1\u3057\u305f\u304c\u308a\u5c4b\u3055\u3093\u3067\u3001\u4e0e\u3048\u308b\u3082\u306e\u306f\u4f55\u3067\u3082\u8a55\u4fa1\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3067\u306fLisp\u306b\u30ea\u30b9\u30c8\u3092\u4e0e\u3048\u305f\u3089\u3001\u4f55\u304c\u8d77\u3053\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u5358\u5200\u76f4\u5165\u306b\u3044\u3046\u3068\u3001Lisp\u306f\u30ea\u30b9\u30c8\u3092\u8a55\u4fa1\u3059\u308b\u6642\u3001\u305d\u308c\u306f\u95a2\u6570\u547c\u3073\u51fa\u3057\u3060\u3068\u7406\u89e3\u3057\u307e\u3059\u3002\u305d\u306e\u6642\u306e\u6319\u52d5\u3092\u8ffd\u3044\u304b\u3051\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n(+ 4 2)\n\n\n\u3068\u3044\u3046\u30ea\u30b9\u30c8\u304c\u4e0e\u3048\u3089\u308c\u305f\u6642\u3001\u307e\u305a\u7b2c\u4e00\u8981\u7d20\u3092\u898b\u3066\u3001\u305d\u308c\u304c\u3061\u3083\u3093\u3068\u3057\u305f\u95a2\u6570\u306a\u3089\u3001\u7b2c\u4e8c\u8981\u7d20\u4ee5\u4e0b\u306e\u30ea\u30b9\u30c8\u3092\u5f15\u6570\u3068\u3057\u3066\u305d\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u306e\u3067\u3059\u3002\uff08\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\u304c\u7121\u3044\u306a\u3089\u30a8\u30e9\u30fc\u3067\u3059\uff09\n\u3064\u307e\u308a\u3001\u5148\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30014, 2\u3068\u3044\u3046\u30ea\u30b9\u30c8\u3092\u5f15\u6570\u306b+\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3001\u3068\u3044\u3046\u306e\u304cLisp\u306b\u3068\u3063\u3066\u8a55\u4fa1\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u3059\u3002\n\u307e\u305f\u3001\u30ea\u30b9\u30c8\u304c\u5165\u308c\u5b50\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u6642\u306b\u3001\u5148\u306b\u5f15\u6570\u3092\u8a55\u4fa1\u3057\u3066\u304b\u3089\u95a2\u6570\u3092\u51e6\u7406\u3059\u308b\u306e\u3067\u3001\u30ea\u30b9\u30c8\u306e\u5165\u308c\u5b50\u69cb\u9020\u306b\u3082\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\n\u8a55\u4fa1\u3059\u308b(2)\n\u3055\u3066\u3001\u30ea\u30b9\u30c8\u306e\u8a55\u4fa1\u306b\u3064\u3044\u3066\u306f\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u3067\u30824\u3068\u304b2\u3068\u304b\u3092\u8a55\u4fa1\u3059\u308b\u3068\u4f55\u306b\u306a\u308b\u306e\uff1f\u3068\u3044\u3046\u306e\u3092\u4e00\u5fdc\u8003\u3048\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\u5148\u306b\u7d50\u8ad6\u304b\u3089\u3044\u3046\u3068\u30014\u3092\u8a55\u4fa1\u3059\u308b\u30684\u306b\u30012\u3092\u8a55\u4fa1\u3059\u308b\u30682\u306b\u306a\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u6570\u5024\u3092\u8a55\u4fa1\u3059\u308b\u3068\u6570\u5024\u304c\u51fa\u3066\u304f\u308b\u3093\u3067\u3059\u306d\u3002\n\u3042\u307e\u308a\u3072\u306d\u308a\u3082\u306a\u3044\u30b7\u30f3\u30d7\u30eb\u306a\u7d04\u675f\u3054\u3068\u3067\u3059\u304c\u3001\u5b9f\u88c5\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u306f\u3053\u3046\u3044\u3046\u7d30\u304b\u3044\u3053\u3068\u3082\u78ba\u8a8d\u3059\u3079\u304d\u3067\u3059\u3002\n\n\u30c7\u30fc\u30bf\u578b\n\u305d\u308d\u305d\u308dLisp\u3067\u6271\u3046\u30c7\u30fc\u30bf\u578b\u306b\u3064\u3044\u3066\u6574\u7406\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\u56f3\u306e\u65b9\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u56f3\u306b\u3057\u307e\u3059\u3002\n\n\u304a\u3063\u3068\u3001\u5510\u7a81\u306b\u51fa\u3057\u3066\u3057\u307e\u3063\u305f\u7528\u8a9e\u304c\u7d50\u69cb\u3042\u308a\u307e\u3059\u3002\n\u307e\u305a\u306fS\u5f0f\u3067\u3059\u304c\u3001\u3053\u308c\u306fjava\u306a\u3069\u3067\u3001\u3059\u3079\u3066\u306fObject\u3067\u3042\u308b\u3001\u3068\u3044\u3046\u306e\u306b\u4f3c\u3066\u3044\u307e\u3059\u3002Lisp\u306e\u767b\u5834\u4eba\u7269\u306f\u3059\u3079\u3066\u306fS\u5f0f\u3067\u3042\u308b\u3001\u3068\u8a00\u3063\u3066\u3044\u308b\u306b\u3059\u304e\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001\u3055\u3089\u3063\u3068\u5927\u4e8b\u306a\u3053\u3068\u3092\u66f8\u304d\u307e\u3059\u304c\u3001S\u5f0f\u3092\u8a55\u4fa1\u3059\u308b\u3068\u3001\u305d\u306e\u7d50\u679c\u306fS\u5f0f\u306b\u306a\u308a\u307e\u3059\u3002\n\u6b21\u306f\u30a2\u30c8\u30e0\u3067\u3059\u3002\u3053\u308c\u306f\u6570\u5024\u3084\u30b7\u30f3\u30dc\u30eb\u306e\u3088\u3046\u306a\u3001\u5358\u4f53\u306e\u30c7\u30fc\u30bf\u3092\u6307\u3057\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u30b7\u30f3\u30dc\u30eb\u3067\u3059\u3002\u3053\u308c\u306f\u3001\n\n(+ 4 2)\n\n\n\u306e\u4e2d\u306e + \u306e\u3053\u3068\u3092\u30b7\u30f3\u30dc\u30eb\u3068\u547c\u3073\u307e\u3059\u3002\n\u4eca\u56de\u4f5c\u308bLisp\u3067\u306f\u3001\u30b7\u30f3\u30dc\u30eb\u306f\u5fc5\u305a\u95a2\u6570\u3092\u6307\u3057\u307e\u3059\u3002\n\u3053\u308c\u3067\u304b\u306a\u308a\u6574\u7406\u3055\u308c\u3066\u304d\u307e\u3057\u305f\u3002\n\u4e00\u5fdc\u6ce8\u610f\u70b9\u3067\u3059\u304c\u3001\n\u666e\u901a\u306eLisp\u306b\u306f\u30b7\u30f3\u30dc\u30eb\u306f\u95a2\u6570\u3060\u3051\u3067\u306a\u304f\u3001\u5909\u6570\u3092\u6307\u3057\u305f\u308a\u3082\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u56f3\u306e\u30a2\u30c8\u30e0\u3082\u6587\u5b57\u5217\u306b\u3064\u3044\u3066\u306f\u8a00\u53ca\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3042\u304f\u307e\u3067\u3082\u4eca\u56de\u5b9f\u88c5\u3059\u308b\u6975\u5c0fLisp\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u305f\u56f3\u3067\u3042\u308b\u3053\u3068\u3092\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n\nSwift\u3067\u5b9f\u88c5\u3057\u3088\u3046\n\u3055\u3066\u3001Swift\u3067Lisp\u3092\u8868\u73fe\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u3082\u306e\u306f\u63c3\u3044\u307e\u3057\u305f\u3002\n\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u30ec\u30d9\u30eb\u306b\u843d\u3068\u3057\u8fbc\u3093\u3067\u884c\u304d\u307e\u3057\u3087\u3046\u3002\n\u307e\u305a\u306f\u30a2\u30c8\u30e0\u304b\u3089\u884c\u304d\u307e\u3057\u3087\u3046\u304b\n\nenum Atom {\n    case Symbol(String)\n    case Number(Double)\n}\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u6b21\u306bS\u5f0f\u3067\u3059\u3002\n\nenum SExpr {\n    case SAtom(Atom)\n    case SList(() -> List<SExpr>)\n}\n\n\n\u5358\u7d14\u3067\u3059\u3002\nSExpr.SList\u306e\u30c7\u30fc\u30bf\u578b\u304c\u95a2\u6570\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u518d\u5e30\u7684\u306aEnum\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u305f\u3081\u306e\u4fbf\u5b9c\u7684\u306a\u3082\u306e\u306a\u306e\u3067\u3001\u3042\u307e\u308a\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\u5b9f\u969b\u306b\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3068\u4e0d\u4fbf\u306a\u306e\u3067\u3001\u3044\u304f\u3064\u304bextension\u3092\u66f8\u304d\u307e\u3057\u3087\u3046\u3002\n\nextension Atom {\n    var symbol: String? {\n        switch self {\n        case let .Symbol(symbol):\n            return symbol\n        default:\n            return nil\n        }\n    }\n    var number: Double? {\n        switch self {\n        case let .Number(number):\n            return number\n        default:\n            return nil\n        }\n    }\n\n    init(_ symbol: String) {\n        self = .Symbol(symbol)\n    }\n    init(_ number: Double) {\n        self = .Number(number)\n    }\n}\nextension Atom : Printable {\n    var description: String {\n        if let symbol = self.symbol {\n            return symbol\n        } else if let number = self.number {\n            return \"\\(number)\"\n        }\n        return \"\"\n    }\n}\n\nextension SExpr {\n    var atom: Atom? {\n        switch self {\n        case let .SAtom(atom):\n            return atom\n        default:\n            return nil\n        }\n    }\n    var list: List<SExpr>? {\n        switch self {\n        case let .SList(f):\n            return f()\n        default:\n            return nil\n        }\n    }\n\n    init(_ atom: Atom) {\n        self = .SAtom(atom)\n    }\n    init(_ list: List<SExpr>) {\n        self = .SList({ list })\n    }\n}\nextension SExpr : Printable {\n    var description: String {\n        if let atom = self.atom {\n            return atom.description\n        } else if let list = self.list {\n            let strings = list.map { x in x.description }\n            if let car = strings.car {\n                return \"(\" + strings.cdr.reduce(car) { r, x in r + \" \" + x } + \")\"\n            }\n            return \"\"\n\n        }\n        return \"\"\n    }\n}\n\nfunc SExprNil() -> SExpr{\n    return SExpr(none())\n}\n\n\n\u6700\u5f8c\u306eSExprNil()\u306f\u3001\u30a8\u30e9\u30fc\u306e\u6642\u306b\u4f7f\u3044\u307e\u3059\u3002\nLisp\u306b\u3082nil\u304c\u5b58\u5728\u3057\u3066\u3044\u3066\u3001\u305d\u308c\u306f\u8981\u7d20\u30bc\u30ed\u306e\u30ea\u30b9\u30c8\u306e\u3053\u3068\u3067\u3059\u3002\n\neval\u3068apply\n\u3055\u3066\u3001\u3053\u3053\u307e\u3067\u30c7\u30fc\u30bf\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u3042\u307e\u308a\u9762\u767d\u304f\u306a\u3044\u3082\u306e\u3067\u3057\u305f\u304c\u3001\n\u3064\u3044\u306b\u300c\u8a55\u4fa1\u3059\u308b\u300d\u90e8\u5206\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002eval\u95a2\u6570\u3067\u3059\u3002\n\nfunc eval(expr: SExpr) -> SExpr {\n    if\n        let list = expr.list,\n        let car = list.car,\n        let symbol = eval(car).atom?.symbol\n    {\n        let arguments = list.cdr\n        return apply(symbol, arguments)\n    }\n\n    if let atom = expr.atom {\n        return expr\n    }\n\n    return SExprNil()\n}\n\n\neval\u95a2\u6570\u3067\u306f\u3001\u307e\u305aS\u5f0f\u3092\u53d7\u3051\u53d6\u308a\u3001\n\u305d\u308c\u304c\u30ea\u30b9\u30c8\u306a\u3089\u3070\u3001\u6700\u521d\u306e\u8981\u7d20\u3092\u8a55\u4fa1\u3057\u3001\u3055\u3089\u306b\u305d\u308c\u304c\u30b7\u30f3\u30dc\u30eb\u306a\u3089\u3070\u3001\u6b8b\u308a\u306e\u30ea\u30b9\u30c8\u3092\u5f15\u6570\u306b\u3001\u305d\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u306f\u3001apply\u95a2\u6570\u3068\u3057\u3066\u7dba\u9e97\u306b\u5206\u96e2\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001eval\u306e\u5f15\u6570\u304c\u30a2\u30c8\u30e0\u306a\u3089\u3070\u3001\u305d\u308c\u306f\u305d\u306e\u307e\u307e\u30a2\u30c8\u30e0\u3092\u8fd4\u3057\u307e\u3059\u3002\u5148\u307b\u3069\u78ba\u8a8d\u3057\u305f\u7d04\u675f\u4e8b\u3067\u3059\u306d\u3002\n\u3067\u306f\u6b21\u306fapply\u95a2\u6570\u3067\u3059\u3002\n\nfunc apply(symbol: String, arguments: List<SExpr>) -> SExpr {\n    let number_arguments: List<Double> = arguments.flatMap { x in\n        if let number = eval(x).atom?.number {\n            return one(number)\n        }\n        return none()\n    }\n    let functions: [String : (Double, Double) -> Double] = [\n        \"+\" : (+),\n        \"-\" : (-),\n        \"*\" : (*),\n        \"/\" : (/)\n    ]\n    if let op = functions[symbol], car = number_arguments.car {\n        return SExpr(Atom(number_arguments.cdr.reduce(car, combine: op)))\n    }\n    return SExprNil()\n}\n\n\n\u307e\u305aapply\u95a2\u6570\u306f\u3001\u5f15\u6570\u30ea\u30b9\u30c8\u3092\u5148\u306b\u8a55\u4fa1\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u56db\u5247\u6f14\u7b97\u306e\u95a2\u6570\u3060\u3051\u306a\u306e\u3067\u6570\u5024\u3060\u3051\u3092\u96c6\u3081\u3066\u3001reduce\u3059\u308b\u7d50\u69cb\u4e71\u66b4\u306a\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3055\u3066\u3001\u3053\u308c\u3063\u3066\u7d50\u69cb\u9762\u767d\u3044\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6c17\u3065\u304b\u308c\u305f\u3067\u3057\u3087\u3046\u304b\u3002\neval\u306fapply\u3092\u547c\u3073\u3001apply\u306f\u307e\u305feval\u3092\u6b32\u3057\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u56f3\u306f\u3069\u3053\u304b\u3067\u898b\u305f\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u3053\u308c\u306f\u8a08\u7b97\u6a5f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u69cb\u9020\u3068\u89e3\u91c8\u306e\u7b2c4\u7ae0\u3067\u63d0\u793a\u3055\u308c\u3066\u3044\u308b\u56f3\u3067\u3001\n\u5b9f\u306f\u3053\u306e\u672c\u306e\u8868\u7d19\u306b\u3082\u306a\u3063\u3066\u3044\u308b\u91cd\u8981\u306a\u56f3\u306a\u3093\u3067\u3059\u306d\u3002\n\u3068\u3082\u3042\u308c\u3001\u3053\u308c\u3067\u6975\u5c0fLisp\u51e6\u7406\u7cfb\u306e\u30b3\u30a2\u90e8\u5206\u306e\u6e96\u5099\u304c\u5b8c\u4e86\u3067\u3059\u3002\n\u8a66\u3057\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001S\u5f0f\u3092Swift\u4e0a\u3067\u7d44\u307f\u7acb\u3066\u305f\u3082\u306e\u3092\u8a55\u4fa1\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nlet s = SExpr([SExpr(Atom(\"*\")), SExpr([SExpr(Atom(\"+\")), SExpr(Atom(3.0)), SExpr(Atom(1.0)), SExpr(Atom(2.0))].toList), SExpr(Atom(2.0))].toList)\nprintln(s)\nprintln(eval(s))\n\n<\u51fa\u529b>\n(* (+ 3.0 1.0 2.0) 2.0)\n12.0\n\n\n\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\u3053\u308c\u3067\u6975\u5c0fLisp\u306f\u5b8c\u30fb\u30fb\u30fb\u304a\u3063\u3068\u3001\u307e\u3060\u30d1\u30fc\u30b5\u30fc\u304c\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u306d\u3002\n\u3061\u3087\u3063\u3068\u75b2\u308c\u305f\u65b9\u306f\u3044\u3063\u305f\u3093\u4f11\u61a9\u3057\u307e\u3057\u3087\u3046\u3002\u305d\u3057\u3066\u6e96\u5099\u304c\u3067\u304d\u305f\u3089\u6b21\u306f\u30d1\u30fc\u30b5\u30fc\u3092\u7d44\u307f\u7acb\u3066\u884c\u304d\u307e\u3059\u3002\n\u3042\u3001\u30de\u30b5\u30ab\u30ea\u3092\u63e1\u308a\u7de0\u3081\u3066\u3044\u308b\u304b\u305f\u306f\u3001\u305d\u3061\u3089\u306b\u7f6e\u3044\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u306d\u30fb\u30fb\u30fb\u3002\n\n\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\uff1f\n\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u3068\u306f\u3001\u30d1\u30fc\u30b5\u30fc\u30b8\u30a7\u30cd\u30ec\u30fc\u30c8\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u3053\u3068\u3092\u6307\u3057\u307e\u3059\u3002\n\u7591\u4f3c\u30b3\u30fc\u30c9\u3067\u3044\u3046\u3068\u3001\n\nlet parser = \u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf-\u4f5c\u6210(\u5b9a\u7fa9)\nlet result = parser(\u6587\u5b57\u5217)\n\n\n\u306e\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30d1\u30fc\u30b5\u30fc\u304c\u95a2\u6570\u306a\u3089\u3001\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306f\u9ad8\u968e\u95a2\u6570\uff08\u95a2\u6570\u3092\u8fd4\u3059\u95a2\u6570\uff09\u306b\u306a\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u5927\u304d\u306a\u7279\u5fb4\u3068\u3057\u3066\u3001\n\u300c\u5c0f\u3055\u306a\u30d1\u30fc\u30b5\u30fc\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u5927\u304d\u306a\u30d1\u30fc\u30b5\u30fc\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u300d\n\u3068\u3044\u3046\u3068\u3066\u3082\u91cd\u8981\u306a\u6027\u8cea\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u90e8\u5206\u306b\u3064\u3044\u3066\u3082\u968f\u6642\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\u203b\u3053\u306e\u90e8\u5206\u3092\u66f8\u304f\u306b\u3042\u305f\u3063\u3066\u3001\u4ee5\u4e0b\u3092\u975e\u5e38\u306b\u53c2\u8003\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\nbind\u3067\u6bce\u56de\u8a70\u307e\u308b\u4eba\u306e\u70ba\u306e\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u4ed5\u7d44\u307f\nfunctional programming in swift\n\n\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u6e96\u5099\uff08\u30c7\u30fc\u30bf\u578b\uff09\n\u307e\u305a\u306f\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u57fa\u672c\u3068\u306a\u308b\u3001\u30d1\u30fc\u30b5\u30fc\u306e\u95a2\u6570\u578b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u4eca\u56de\u3082\u3084\u3084\u5929\u4e0b\u308a\u7684\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u5b9a\u7fa9\u3092\u4f7f\u3044\u307e\u3059\u3002\n\nstruct Combinator<Token, Result> {\n    typealias Parser = List<Token> -> List<(Result, List<Token>)>\n}\n\n\nstruct\u306b\u5305\u3093\u3067\u3044\u308b\u306e\u306f\u8a00\u8a9e\u4ed5\u69d8\u4e0a\u3001\n\n// \u3053\u308c\u306f\u3067\u304d\u306a\u3044\ntypealias Parser<Result, Token> = List<Token> -> List<(Result, List<Token>)>\n\n\n\u3068\u3044\u3046\u3088\u3046\u306btypealias\u306b\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3092\u9069\u7528\u3067\u304d\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\u306a\u306e\u3067\u5927\u304d\u306a\u610f\u5473\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3055\u3066\u3001\u307e\u305a\u5f15\u6570\u304b\u3089\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nList<Token>\n\n\n\u3092\u5f15\u6570\u306b\u53d6\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u300c\u306a\u3093\u3089\u304b\u306e\u30ea\u30b9\u30c8\u300d\u3092\u8868\u3057\u307e\u3059\u306d\uff08\u5f53\u305f\u308a\u524d\u3067\u3059\u304c\uff09\u3002\n\u3053\u308c\u306f\u4f8b\u3048\u3070\u3001\u6587\u5b57\u5217\u304b\u3089\u30d1\u30fc\u30b9\u3059\u308b\u5834\u5408\u306f\u3001\u6587\u5b57\u306e\u30ea\u30b9\u30c8\u3001\u3064\u307e\u308a\u3001\n\nList<Character>\n\n\n\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u3002\n\u3068\u3053\u308d\u3067\u306a\u305c\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3067\u578b\u304c\u62bd\u8c61\u5316\u3055\u308c\u3066\u3044\u308b\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\n\u30d1\u30fc\u30b5\u30fc\u306a\u3093\u3060\u304b\u3089Character\u3067\u3044\u3044\u3058\u3083\u306a\u3044\u304b\u3001\u3068\u4e00\u77ac\u8003\u3048\u3066\u3057\u307e\u3044\u305f\u304f\u306a\u308a\u307e\u3059\u304c\u3001\n\u5fc5\u305a\u3057\u3082\u305d\u3046\u3067\u306f\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\n\n(* (+ 42 2) 10)\n\n\n\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u30d1\u30fc\u30b9\u3059\u308b\u6642\u3001\u4e00\u6c17\u306b\u3053\u308c\u3092\u89e3\u91c8\u3059\u308b\u3088\u308a\u3082\u3001\u307e\u305a\u6700\u521d\u306e\u6bb5\u968e\u3067\u3001\n\n(\n*\n(\n42 \n2\n) \n10\n)\n\n\n\u306e\u3088\u3046\u306a\u610f\u5473\u306e\u3042\u308b\u6700\u5c0f\u5358\u4f4d\uff08\u30c8\u30fc\u30af\u30f3\uff09\u3068\u3057\u3066\u89e3\u91c8\u3057\u3001\u305d\u306e\u5f8c\u306b\u69cb\u9020\u7684\u306a\u89e3\u91c8\u3092\u3059\u308b\u3001\u3068\u3044\u3046\u3088\u3046\u306b\u30d5\u30a7\u30fc\u30ba\u3092\u5206\u96e2\u3059\u308b\u5834\u5408\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3068\u4e00\u5ea6\u306b\u3084\u3089\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u51e6\u7406\u304c\u6e1b\u308a\u3001\u3068\u3066\u3082\u4f5c\u308b\u306e\u304c\u697d\u306b\u306a\u308a\u307e\u3059\u3002\n\u203b\u3053\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u5b57\u53e5\u89e3\u6790\u3068\u547c\u3073\u307e\u3059\u306d\n\u4ed6\u306b\u3082\u3001Character\u306b\u9650\u5b9a\u3057\u306a\u3044\u3053\u3068\u3067\u3001\u6587\u5b57\u5217\u4ee5\u5916\u306e\u4f55\u304b\u9023\u7d9a\u3059\u308b\u30c7\u30fc\u30bf\u306a\u3089\u306a\u3093\u3067\u3082\u6271\u3048\u308b\u3068\u3044\u3046\u610f\u5473\u3067\u3082\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306b\u3057\u3066\u304a\u3044\u3066\u640d\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\u3067\u306f\u3001\u6b21\u306b\u623b\u308a\u5024\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nList<(Result, List<Token>)>\n\n\n\u7d50\u69cb\u3044\u308d\u3044\u308d\u8a70\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\u4e00\u65e6\u5916\u5074\u306e\u30ea\u30b9\u30c8\u306f\u5fd8\u308c\u3066\u3001\u5185\u5074\u306e\u30bf\u30d7\u30eb\u3092\u8003\u3048\u308b\u3068\u3057\u3066\u3001\n\u30bf\u30d7\u30eb\u306e\u5de6\u5074\u306f\u30d1\u30fc\u30b9\u7d50\u679c\u3067\u3059\u306d\u3001\u6570\u5b57\u304c\u5165\u3063\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u3057\u3001\u6587\u5b57\u5217\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u30bf\u30d7\u30eb\u306e\u53f3\u5074\u306f\u3069\u3046\u3067\u3057\u3087\u3046\uff1f\n\u3053\u308c\u306f\u4f55\u304b\u3068\u8a00\u3046\u3068\u3001\u30d1\u30fc\u30b5\u30fc\u304c\uff11\u56de\u3067\u89e3\u91c8\u4ed5\u5207\u308c\u306a\u304b\u3063\u305f\u4f59\u308a\u306e\u90e8\u5206\u306a\u306e\u3067\u3059\u3002\n\u6b8b\u308a\u306e\u5165\u529b\u304c\u3042\u308b\u7406\u7531\u306f\u3001\u6b8b\u308a\u306f\u5225\u306a\u30d1\u30fc\u30b5\u30fc\u306b\u98df\u308f\u305b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u306d\u3002\n\u4f8b\u3048\u3070\u3001a\u3092\uff11\u6587\u5b57\u8aad\u307f\u53d6\u308b\u30d1\u30fc\u30b5\u30fc\u306b\u3001abcde\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u4e0e\u3048\u305f\u3068\u3057\u307e\u3059\u3002\n\u3059\u308b\u3068\u3001bcde\u3068\u3044\u3046\u306e\u306f\u4f59\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u306ebcde\u306e\u90e8\u5206\u304c\u30bf\u30d7\u30eb\u306e\u53f3\u5074\u306b\u306a\u308b\u306e\u3067\u3059\u3002\n\u3055\u3066\u3001\u5185\u5074\u306e\u30bf\u30d7\u30eb\u306f\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u3057\u304b\u3057\u306a\u305c\u5916\u5074\u306f\u30ea\u30b9\u30c8\u306a\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\n\u3053\u308c\u306f\u3001\u3053\u3046\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\n\u300c\u30d1\u30fc\u30b5\u30fc\u306f\u3001\u53ef\u80fd\u306a\u7d44\u307f\u5408\u308f\u305b\u3092\u4e00\u65e6\u5168\u90e8\u5410\u304d\u51fa\u3057\u3066\u3001\u305d\u306e\u4e2d\u304b\u3089\u4e00\u756a\u826f\u3055\u305d\u3046\u306a\u3084\u3064\u3092\u9069\u5f53\u306b\u4f7f\u3048\u308b\u300d\n\u3068\u3044\u3046\u6027\u8cea\u3092\u6301\u305f\u305b\u308b\u305f\u3081\u306a\u306e\u3067\u3059\u3002\n\u3053\u308c\u306f\u4eca\u3059\u3050\u3053\u3053\u3067\u30d4\u30f3\u3068\u6765\u306a\u304f\u3066\u3082\u3001\u5b9f\u969b\u306b\u4f5c\u308a\u4e0a\u3052\u308b\u904e\u7a0b\u3067\u3001\u300c\u3042\u3042\u3001\u78ba\u304b\u306b\u3053\u306e\u69cb\u9020\u4fbf\u5229\u3060\u300d\u3068\u306a\u308b\u306f\u305a\u306a\u306e\u3067\u3001\u3042\u307e\u308a\u6df1\u304f\u8003\u3048\u306a\u304f\u3066\u3082\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u6700\u7d42\u7684\u306b\u306f\u8907\u6570\u306e\u7b54\u3048\u304c\u3042\u3063\u3066\u306f\u56f0\u308b\u306e\u3067\u3001\u901a\u5e38\u306f\u300c\u30ea\u30b9\u30c8\u306e\u6700\u521d\u306b\u51fa\u3066\u304d\u305f\u7d50\u679c\u3092\u30d1\u30fc\u30b5\u30fc\u306e\u7d50\u679c\u3068\u3059\u308b\u300d\u3068\u3044\u3046\u7d04\u675f\u4e8b\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3053\u308c\u3067\u307e\u305a\u306f\u306a\u3093\u3068\u306a\u304f\u65b9\u91dd\u304c\u5206\u304b\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\u3068\u3057\u3066\u3001\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306b\u3088\u3063\u3066\u4f5c\u3089\u308c\u305f\u30d1\u30fc\u30b5\u30fc\u306f\u3001\n\u5165\u529b\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u305f\u30ea\u30b9\u30c8\u3092\u8aad\u3093\u3067\u3001\u53ef\u80fd\u306a\u3089\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5165\u529b\u3092\u6d88\u8cbb\u3057\u3066\u3001\u7d50\u679c\u3068\u3001\u6b8b\u308a\u306e\u5165\u529b\u3092\u5410\u304d\u51fa\u3059\u3002\n\u3068\u3044\u3046\u3068\u3053\u308d\u3067\u578b\u306b\u3064\u3044\u3066\u306f\u3053\u3053\u307e\u3067\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u6e96\u5099\uff08\u57fa\u672c\u30d1\u30fc\u30b5\u30fc\uff09\n\u6b21\u306b\uff13\u3064\u306e\u57fa\u672c\u69cb\u6210\u8981\u7d20\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u7b2c\u4e09\u56de: \u30d1\u30fc\u30b5\u30fccreate\u30683\u3064\u306e\u57fa\u672c\u69cb\u6210\u8981\u7d20\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u8003\u3048\u65b9\u3067\u3059\u3002\n\u3053\u308c\u306eswift\u7248\u3092\u8003\u3048\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001\u300c\u5165\u529b\u3092\u6d88\u8cbb\u305b\u305a\u3001\u7279\u5b9a\u306e\u5024\u3092\u7d50\u679c\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u30d1\u30fc\u30b5\u30fc\u300d\u3067\u3059\u3002\n\u3053\u308c\u306fResultCreate\u3068\u540d\u524d\u304c\u4ed8\u3051\u3089\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u77ed\u304fpure\u3068\u547c\u3076\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\nfunc pure<Token, Result>(result: Result) -> Combinator<Token, Result>.Parser {\n    return { input in one((result, input)) }\n}\n\n\n\u6b21\u306b\u3001\u300c\u5165\u529b\u3092\u6d88\u8cbb\u305b\u305a\u3001\u5fc5\u305a\u5931\u6557\u3059\u308b\u30d1\u30fc\u30b5\u30fc\u300d\u3067\u3059\u3002\n\u30d1\u30fc\u30b9\u306b\u5931\u6557\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u306f\u3069\u3046\u3044\u3046\u3053\u3068\u304b\u3068\u3044\u3046\u3068\u3001\u30d1\u30fc\u30b5\u30fc\u306e\u623b\u308a\u5024\u304c\u7a7a\u30ea\u30b9\u30c8\u3067\u3042\u308b\u6642\u3001\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3057\u307e\u3059\u3002\n\nfunc zero<Token, Result>() -> Combinator<Token, Result>.Parser {\n    return { input in none() }\n}\n\n\n\u6700\u5f8c\u306b\u3001\u300c\uff11\u3064\u5165\u529b\u3092\u6d88\u8cbb\u3057\u3066\u3001\u305d\u308c\u3092\u7d50\u679c\u3068\u3057\u3066\u8fd4\u3059\u30d1\u30fc\u30b5\u30fc\u300d\u3067\u3059\u3002\n\u3082\u3061\u308d\u3093\u5165\u529b\u304c\u7a7a\u306a\u3089\u5931\u6557\u3057\u307e\u3059\u3002\n\nfunc consumer<Token>() -> Combinator<Token, Token>.Parser {\n    return { input in\n        if let car = input.car {\n            return one((car, input.cdr))\n        }\n        return none()\n    }\n}\n\n\n\u3069\u308c\u3082\u3068\u3066\u3082\u5c0f\u3055\u306a\u6a5f\u80fd\u3067\u5fc3\u914d\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u5fc3\u914d\u306f\u7121\u7528\u3067\u3059\u3002\n\u3053\u308c\u3089\u306f\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u771f\u306e\u529b\u3092\u767a\u63ee\u3067\u304d\u308b\u306e\u3067\u3059\u3002\u7d50\u675f\u306e\u529b\u3067\u3059\u3002\n\n\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u7d50\u5408\n\u7d50\u5408\u306f\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u5fc3\u81d3\u90e8\u3068\u8a00\u3063\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u7d50\u5408\u51e6\u7406\u306fbind\u3068\u540d\u4ed8\u3051\u307e\u3059\u3002\n\u307e\u305a\u306f\u3044\u304d\u306a\u308a\u5b9f\u88c5\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nfunc bind<Token, T, U>(parser: Combinator<Token, T>.Parser, factory: T -> Combinator<Token, U>.Parser) -> Combinator<Token, U>.Parser {\n    return { input in\n        let lhsResult = parser(input)\n        return lhsResult.flatMap { (result, remainder) in\n            let rhsParser = factory(result)\n            return rhsParser(remainder)\n        }\n    }\n}\n\n\n\u30fb\u30fb\u30fb\u3068\u3066\u3082\u8907\u96d1\u306a\u5f62\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf\u3082\uff13\u3064\u3042\u3063\u3066\u8907\u96d1\u3067\u3059\u3002\n\u3067\u3082\u4e00\u3064\u4e00\u3064\u7d10\u89e3\u3044\u3066\u884c\u304d\u307e\u3057\u3087\u3046\u3002\n\u307e\u305a\u306f\u7b2c\u4e00\u5f15\u6570\u306f\u3001\u30d1\u30fc\u30b5\u30fc\u3067\u3059\u306d\u3002\u3053\u306e\u30d1\u30fc\u30b5\u30fc\u306e\u30c7\u30fc\u30bf\u578b\u306bToken, T\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3067\u307e\u305a\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\uff12\u3064\u304c\u660e\u3089\u304b\u3067\u3059\u3002\n\u7b2c\u4e8c\u5f15\u6570\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\uff1f\nparser\u306e\u7d50\u679c\u306e\u578bT\u306e\u5024\u3092\u5f15\u6570\u306b\u3057\u3066\u3001\u30d1\u30fc\u30b5\u30fc\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\u306e\u3088\u3046\u3067\u3059\u3002\u3053\u306e\u30d1\u30fc\u30b5\u30fc\u306e\u7d50\u679c\u306e\u30c7\u30fc\u30bf\u578b\u304cU\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u6b21\u306bbind\u306e\u8fd4\u3059\u30d1\u30fc\u30b5\u30fc\u306e\u51e6\u7406\u3092\u8ffd\u3044\u304b\u3051\u3066\u307f\u307e\u3059\u3002\n\u3059\u308b\u3068\u6700\u521d\u306b\u7b2c\u4e00\u5f15\u6570\u306e\u30d1\u30fc\u30b5\u30fc\u306b\u5165\u529b\u3092\u98df\u308f\u305b\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u307e\u3067\u306f\u826f\u3044\u3067\u3059\u306d\u3002\n\u305d\u306e\u5f8c\u3001lhsResult\u3092flatMap\u3057\u3066\u307e\u3059\u3002\nflatMap\u306e\u4e2d\u3067\u306f\u3001factory\u3092\u4f7f\u3063\u3066\u30d1\u30fc\u30b5\u30fc\u3092\uff11\u3064\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u6b8b\u308a\u306e\u5165\u529b\u3092\u305d\u306e\u30d1\u30fc\u30b5\u30fc\u306b\u98df\u308f\u305b\u3066\u3044\u307e\u3059\u3002\nflatMap\u306b\u6163\u308c\u3066\u3044\u306a\u3044\u4eba\u3082\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\"\u7121\u9650\u30ea\u30b9\u30c8\u306e\u4f5c\u308a\u65b9\"\u3067\u3082\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u53c2\u8003\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u30d1\u30fc\u30b5\u30fc\u304c\u5410\u304d\u51fa\u3059\u7d50\u679c\u304c\u4e00\u3064\u3067\u306f\u306a\u304f\u3001\u8907\u6570\u51fa\u529b\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001flatMap\u306e\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u4f8b\u3092\u3042\u3052\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u3059\u304c\u3001\u7b2c\u4e00\u5f15\u6570\u306e\u30d1\u30fc\u30b5\u30fc\u3092A\u3001\u7b2c\u4e8c\u5f15\u6570\u3067\u4f5c\u308b\u30d1\u30fc\u30b5\u30fc\u3092B\u3068\u3059\u308b\u3068\u3001\nA\u306e\u51fa\u529b\u7d50\u679c1 - B\u306e\u51fa\u529b\u7d50\u679c1\nA\u306e\u51fa\u529b\u7d50\u679c1 - B\u306e\u51fa\u529b\u7d50\u679c2\nA\u306e\u51fa\u529b\u7d50\u679c2 - B\u306e\u51fa\u529b\u7d50\u679c1\nA\u306e\u51fa\u529b\u7d50\u679c2 - B\u306e\u51fa\u529b\u7d50\u679c2\nA\u306e\u51fa\u529b\u7d50\u679c2 - B\u306e\u51fa\u529b\u7d50\u679c3\n\u306e\u3088\u3046\u306b\u5358\u4e00\u306eA\u306e\u51fa\u529b\u7d50\u679c\u304b\u3089\u3001B\u306f\u3055\u3089\u306b\u8907\u6570\u306e\u51fa\u529b\u7d50\u679c\u3092\u751f\u3080\u53ef\u80fd\u6027\u304c\u3042\u308a\u3001\u305d\u308c\u3089\u3092\u30de\u30fc\u30b8\u3057\u305f\u306e\u304c\u6700\u7d42\u51fa\u529b\u306b\u306a\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u306a\u305c\u7b2c\u4e8c\u5f15\u6570\u306f\u95a2\u6570\u306a\u306e\u304b\uff1f\u3068\u3044\u3046\u7591\u554f\u304c\u6b8b\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u3001\n\u300cA\u306e\u51fa\u529b\u7d50\u679c\u306b\u3088\u3063\u3066\u67d4\u8edf\u306b\u6b21\u306e\uff11\u624b\u3092\u6e96\u5099\u3067\u304d\u308b\u300d\n\u3068\u3044\u3046\u306e\u304c\u5927\u304d\u306a\u7406\u7531\u3067\u3059\u3002\n\u3053\u3061\u3089\u3082\u5b9f\u969b\u306b\u9032\u3081\u3066\u3044\u304f\u3068\u3001\u300c\u3042\u3042\u3001\u78ba\u304b\u306b\u3053\u306e\u69cb\u9020\u4fbf\u5229\u3060\u300d\u3068\u306a\u308b\u306e\u3067\u3001\n\u3068\u306a\u308b\u306f\u305a\u306a\u306e\u3067\u3001\u3042\u307e\u308a\u6df1\u304f\u8003\u3048\u306a\u304f\u3066\u3082\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u203b\u3061\u306a\u307f\u306blhs, rhs\u306f\u3001\u305d\u308c\u305e\u308cleft-hand side, right-hand side\u306e\u7565\u3067\u3059\u3002\u3053\u306e\u7565\u8a18\u6cd5\u3001\u7d50\u69cb\u4fbf\u5229\u3067\u500b\u4eba\u7684\u306b\u7d50\u69cb\u597d\u304d\u3067\u3059\u3002\n\u3053\u308c\u3067\u6211\u3005\u306f\u5f37\u529b\u306a\u7d50\u5408\u95a2\u6570\u3001bind\u3092\u624b\u306b\u5165\u308c\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\u6b21\u306f\u3053\u308c\u3092\u4f7f\u3063\u3066\u3001\u5b9f\u969b\u306b\u69d8\u3005\u306a\u30d1\u30fc\u30b5\u30fc\u3092\u7d44\u307f\u4e0a\u3052\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u7d44\u307f\u4e0a\u3052\u65b9\n\u624b\u59cb\u3081\u306b\u3042\u308b\u6587\u5b57\u5217\u304b\u3089\u3001\"a\"\u3068\u3044\u3046\u6587\u5b57\u3092\u8aad\u307f\u53d6\u308b\u30d1\u30fc\u30b5\u30fc\u3092\u7d44\u307f\u7acb\u3066\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3082\u3061\u308d\u3093bind\u3092\u4f7f\u3044\u307e\u3059\u3002\nfunc parserA() -> Combinator<Character, Character>.Parser {\n    return bind(consumer()) { r in\n        if r == \"a\" {\n            return pure(\"a\")\n        }\n        return zero()\n    }\n}\nfor (r, s) in parserA()(Array(\"abcde\").toList) {\n    println(\"Success, found \\(r), remainder: \\(Array(s))\")\n}\n\n\u4f55\u3092\u3084\u3063\u3066\u308b\u304b\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001parserA()\u3092\u4f7f\u3063\u305f\u6642\u306e\u6319\u52d5\u3092\u8ffd\u3044\u304b\u3051\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\uff11\u3001\u7d76\u5bfe\u306b\u6210\u529f\u3059\u308bconsumer()\u30d1\u30fc\u30b5\u30fc\u306b\u5165\u529b\u3092\u98df\u308f\u305b\u308b\n\uff12\u3001\u6210\u529f\u3057\u305f\u306e\u3067 r \u306b\u306f\u6700\u521d\u306e\u6587\u5b57\u304c\u5165\u3063\u3066\u3044\u308b\n\uff13\u3001r \u304c \"a\"\u306a\u3089\u3070\u3001\"a\"\u3068\u3044\u3046\u7d50\u679c\u3092\u8fd4\u3059\u3001\u5165\u529b\u3092\u6d88\u8cbb\u3057\u306a\u3044\u30d1\u30fc\u30b5\u30fc\u3092\u7528\u610f\u3057\u3066\u6295\u3052\u8fd4\u3059\u3002\u3082\u3057\u3082\"a\"\u3058\u3083\u306a\u3051\u308c\u3070\u3001\u7d76\u5bfe\u306b\u5931\u6557\u3059\u308b\u30d1\u30fc\u30b5\u30fc\u304c\u8fd4\u308b\u306e\u3067\u3001bind\u3067\u4f5c\u6210\u3057\u305f\u30d1\u30fc\u30b5\u30fc\u306f\u5931\u6557\u3059\u308b\u3002\n\uff14\u3001\u6295\u3052\u8fd4\u3057\u305f\u30d1\u30fc\u30b5\u30fc\u304c\u3001bind\u306e\u4e2d\u3067\u4f7f\u308f\u308c\u308b\u306e\u3067\u3001\"a\"\u3068\u3044\u3046\u7d50\u679c\u304c\u8fd4\u308b\n\u7d50\u69cb\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u3061\u3083\u3093\u3068a\u3092\u30d1\u30fc\u30b9\u3067\u304d\u3066\u3044\u307e\u3059\u3002\nconsumer, pure, zero\u3001\uff13\u3064\u3059\u3079\u3066\u304c\u898b\u4e8b\u306b\u5354\u8abf\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u898b\u3066\u3068\u308c\u307e\u3059\u3002\n\u539f\u7406\u304c\u5206\u304b\u3063\u305f\u3068\u3053\u308d\u3067\u3001\u3082\u3046\u3061\u3087\u3063\u3068\u62bd\u8c61\u5316\u3057\u3066\u4f7f\u3044\u3084\u3059\u304f\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4e0a\u306e\u4f8b\u3067\u3001r \u304c \"a\" \u304b\u3069\u3046\u304b\u3001\u3068\u3044\u3046\u306e\u306f\u95a2\u6570\u306b\u62bc\u3057\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nfunc satisfy<Token>(condition: Token -> Bool) -> Combinator<Token, Token>.Parser {\n    return bind(consumer()) { result in\n        if condition(result) {\n            return pure(result)\n        }\n        return zero()\n    }\n}\n\n\n\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u6c4e\u7528\u7684\u3067\u3059\u306d\n\u305d\u3057\u3066\u3001\"a\"\u3068\u7b49\u3057\u3044\u3082\u306e\u3060\u3063\u305f\u3089\u6210\u529f\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u3061\u3087\u3063\u3068\u3060\u3051\u4e0a\u8a18\u306e\u95a2\u6570\u3092\u5177\u4f53\u5316\u3057\u305f\u3082\u306e\u3068\u3057\u3066\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\n\nfunc token<Token: Equatable>(t: Token) -> Combinator<Token, Token>.Parser {\n    return satisfy { $0 == t }\n}\n\n\n\u3053\u308c\u3092\u4f7f\u3063\u3066\"a\"\u3092\u30d1\u30fc\u30b9\u3059\u308b\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u518d\u73fe\u3067\u304d\u307e\u3059\u3002\n\nfunc parserA() -> Combinator<Character, Character>.Parser {\n    return token(\"a\")\n}\n\n\n\u3044\u3044\u611f\u3058\u306b\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3057\u305f\u3002\n\u3082\u3046\u3061\u3087\u3063\u3068\u3060\u3051\u7df4\u7fd2\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4eca\u5ea6\u306f\u3001\"a\" \u306e\u6b21\u306b \"b\" \u304c\u304f\u308b\u30d1\u30fc\u30b5\u30fc\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u305d\u3057\u3066\u7d50\u679c\u3068\u3057\u3066\u8fd4\u3059\u306e\u306f\u3001\u6587\u5b57\u3092\uff12\u3064\u304f\u3063\u3064\u3051\u305f\u6587\u5b57\u5217\u3068\u3057\u307e\u3059\u3002\nfunc parserAB() -> Combinator<Character, String>.Parser {\n    return bind(token(\"a\")) { a in\n        bind(token(\"b\")) { b in\n            pure(String([a, b]))\n        }\n    }\n}\n\nfor (r, s) in parserAB()(Array(\"abcde\").toList) {\n    println(\"Success, found \\(r), remainder: \\(Array(s))\")\n}\n<\u51fa\u529b>\nSuccess, found ab, remainder: [c, d, e]\n\n\n\u3053\u306e\u3088\u3046\u306b\u30ac\u30f3\u30ac\u30f3bind\u3067\u7d50\u5408\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u5143\u306f\u672c\u5f53\u306b\u5c0f\u3055\u306a\u90e8\u54c1\u3060\u3063\u305f\u30d1\u30fc\u30b5\u30fc\u3092\u3001\u8907\u96d1\u306a\u30d1\u30fc\u30b5\u30fc\u306b\u80b2\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u3002\n\n\u53ef\u80fd\u6027\u306e\u5206\u5c90\n\u4eca\u307e\u3067\u306e\u30d1\u30fc\u30b5\u30fc\u306f\u56fa\u5b9a\u306e\u30d1\u30bf\u30fc\u30f3\u3057\u304b\u30d1\u30fc\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u306f\u8907\u6570\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u306e\u307b\u3046\u304c\u591a\u3044\u3067\u3059\u3002\u305d\u3053\u3067\u3001\u30d1\u30fc\u30b5\u30fcA\u3068\u30d1\u30fc\u30b5\u30fcB\u304b\u3089\u3001\u3053\u308c\u306e\u3069\u3061\u3089\u3082\u4f7f\u3063\u3066\u30d1\u30fc\u30b9\u3092\u8a66\u307f\u308b\u30d1\u30fc\u30b5\u30fc\u3092\u7528\u610f\u3057\u307e\u3057\u3087\u3046\u3002\n\u305d\u308c\u306f\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6f14\u7b97\u5b50\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\ninfix operator <|> { associativity left precedence 130 }\nfunc <|> <Token, Result>(lhs: Combinator<Token, Result>.Parser, rhs: Combinator<Token, Result>.Parser) -> Combinator<Token, Result>.Parser {\n    return { input in lhs(input) + rhs(input) }\n}\n\n\n\u3053\u308c\u306f\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u306d\u3002\n\u4e21\u65b9\u306e\u51fa\u529b\u3092\u7d50\u5408\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u300c\u30d1\u30fc\u30b5\u30fc\u304c\u5931\u6557\u3059\u308b\u3068\u3001\u7a7a\u306e\u30ea\u30b9\u30c8\u3092\u51fa\u529b\u3059\u308b\u300d\u3068\u3044\u3046\u6027\u8cea\u304c\u3042\u308b\u305f\u3081\u3001\u3053\u306e\u3088\u3046\u306a\u5f62\u3092\u3068\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u203b\u3061\u306a\u307f\u306b\u3001\u4e21\u65b9\u6210\u529f\u3059\u308b\u30b1\u30fc\u30b9\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u5834\u5408\u306f\u5de6\u5074\u304c\u512a\u5148\u3055\u308c\u307e\u3059\u3002\u7e70\u308a\u8fd4\u3057\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u30d1\u30fc\u30b5\u30fc\u3092\u4f7f\u3046\u6642\u3001\u30ea\u30b9\u30c8\u306e\u6700\u521d\u306b\u51fa\u3066\u304d\u305f\u7d50\u679c\u304c\u6700\u7d42\u7d50\u679c\u3067\u3042\u308b\u3001\u3068\u3044\u3046\u7d04\u675f\u4e8b\u306b\u3059\u308b\u304b\u3089\u3067\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u3001\"a\" \u3082\u3057\u304f\u306f \"b\" \u3092\u8aad\u3081\u308b\u30d1\u30fc\u30b5\u30fc\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\nfunc parserAorB() -> Combinator<Character, Character>.Parser {\n    return token(\"a\") <|> token(\"b\")\n}\n\nfor (r, s) in parserAorB()(Array(\"abcde\").toList) {\n    println(\"Success, found \\(r), remainder: \\(Array(s))\")\n}\nfor (r, s) in parserAorB()(Array(\"bcde\").toList) {\n    println(\"Success, found \\(r), remainder: \\(Array(s))\")\n}\nfor (r, s) in parserAorB()(Array(\"cde\").toList) {\n    println(\"Success, found \\(r), remainder: \\(Array(s))\")\n}\n\n<\u51fa\u529b>\nSuccess, found a, remainder: [b, c, d, e]\nSuccess, found b, remainder: [c, d, e]\n\n\n\"cde\"\u3067\u306f\u5931\u6557\u3057\u3066\u3044\u308b\u306e\u3067\u51fa\u529b\u306f\u7121\u3057\u3067\u3059\u3002\n\n\u3061\u3087\u3063\u3068\u3057\u305f\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\n\"a\" \u3082\u3057\u304f\u306f \"b\"\u3068\u3044\u3046\u306e\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\nNSCharacterSet\u304b\u3089\u30d1\u30fc\u30b5\u30fc\u304c\u7d44\u307f\u7acb\u3066\u3089\u308c\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6e96\u5099\u3057\u3066\u304a\u304f\u3068\u3001\u3061\u3087\u3063\u3068\u3057\u305f\u6587\u5b57\u3092\u8aad\u3080\u3068\u304d\u306b\u4fbf\u5229\u306a\u306e\u3067\u3001\u8efd\u304f\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nextension NSCharacterSet {\n    var parser: Combinator<Character, Character>.Parser {\n        return satisfy { token in\n            let unichar = (String(token) as NSString).characterAtIndex(0)\n            return self.characterIsMember(unichar)\n        }\n    }\n}\n\n\n\n\u7121\u9650\u306b\u7d9a\u304f\u53ef\u80fd\u6027\n\u3055\u3066\u3001\u305a\u3044\u3076\u3093\u8272\u3005\u8aad\u307f\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u304c\u3001\n\u3053\u3053\u307e\u3067\u306f\u56fa\u5b9a\u306e\u9577\u3055\u306e\u30d1\u30fc\u30b5\u30fc\u3057\u304b\u4f5c\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3055\u3089\u306b\u62e1\u5f35\u3057\u3066\u3001\"a\" \u304c\u4f55\u500b\u3082\u7d9a\u304f\u5834\u5408\u3082\u3046\u307e\u304f\u30d1\u30fc\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\"a\" \u304c\u3001\u3068\u3044\u3046\u3068\u6c4e\u7528\u6027\u304c\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3042\u308b\u30d1\u30fc\u30b5\u30fc\u304c\u3001\u3068\u62bd\u8c61\u5316\u3059\u308b\u3068\u3001\u3053\u308c\u306f\u3068\u3066\u3082\u5f37\u529b\u306a\u62e1\u5f35\u306b\u306a\u308b\u3053\u3068\u304c\u5bb9\u6613\u306b\u60f3\u50cf\u3067\u304d\u307e\u3059\u3002\n\u3042\u3001\u3053\u308c\u6b63\u898f\u8868\u73fe\u306e * \u3068\u304b + \u306a\u3093\u3058\u3083\u306a\u3044\uff1f \u3068\u601d\u3046\u65b9\u3082\u3044\u3089\u3063\u3057\u3083\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u307e\u3055\u306b\u305d\u308c\u3067\u3059\u3002\n\u305d\u308c\u3067\u306f\u307e\u305a\u3001\u3042\u308b\u30d1\u30fc\u30b5\u30fc1\u56de\u304b\u3001\u305d\u308c\u4ee5\u4e0a\u7e70\u308a\u8fd4\u3059\u306e\u306b\u3082\u5bfe\u5fdc\u3067\u304d\u308b\u30d1\u30fc\u30b5\u30fc\u3092\u4f5c\u308b\u30b3\u30a2\u95a2\u6570\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nfunc oneOrMore<Token, Result>(parser: Combinator<Token, Result>.Parser, buffer: List<Result>) -> Combinator<Token, List<Result>>.Parser {\n    return bind(parser) { result in\n        let combine = buffer + one(result)\n        return oneOrMore(parser, combine) <|> pure(combine)\n    }\n}\n\n\n\u610f\u5916\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\u5148\u306b\u30d1\u30fc\u30b5\u30fc\u306e\u7d50\u679c\u578b\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001List\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u7e70\u308a\u8fd4\u3057\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u3067\u3059\u306d\u3002\n\u6b21\u306b\u7740\u76ee\u3059\u3079\u304d\u306f<|>\u306e\u5de6\u5074\u3067\u3059\u3002\u518d\u5e30\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u304c\u30df\u30bd\u3067\u3001parser\u304c\u6210\u529f\u3059\u308b\u9650\u308a\u3001\u6700\u5927\u9650\u518d\u5e30\u3057\u7d9a\u3051\u308b\u308f\u3051\u3067\u3059\u3002\u518d\u5e30\u306e\u9014\u4e2d\u3067\u3001buffer\u306b\u30ac\u30f3\u30ac\u30f3\u9014\u4e2d\u7d4c\u904e\u3092\u3076\u3063\u3053\u3093\u3067\u3044\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u4e00\u756a\u5965\u307e\u3067\u518d\u5e30\u3057\u305f\u5024\u304c\u3001\u30d1\u30fc\u30b9\u7d50\u679c\u3068\u3057\u3066\u4e00\u756a\u6700\u521d\u306e\u8981\u7d20\u3068\u3057\u3066\u51fa\u73fe\u3059\u308b\u304b\u3089\u304f\u308a\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30b7\u30f3\u30d7\u30eb\u306b\u8a18\u8ff0\u3059\u308b\u306b\u306f\u3001buffer\u304c\u90aa\u9b54\u306a\u306e\u3068\u30010\u500b\u3082\u8a31\u5bb9\u3059\u308bzeroOrMore\u3092\u4e00\u7dd2\u306b\u7528\u610f\u3057\u3066\u3042\u3052\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\nfunc oneOrMore<Token, Result>(parser: Combinator<Token, Result>.Parser) -> Combinator<Token, List<Result>>.Parser {\n    return oneOrMore(parser, none())\n}\n\nfunc zeroOrMore<Token, Result>(parser: Combinator<Token, Result>.Parser) -> Combinator<Token, List<Result>>.Parser {\n    return oneOrMore(parser) <|> pure(none())\n}\n\n\n\u3067\u306f\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nfunc parserAstream() -> Combinator<Character, String>.Parser {\n    return bind(oneOrMore(token(\"a\"))) { chars in\n        pure(String(chars))\n    }\n}\n\n\nfor (r, s) in parserAstream()(Array(\"aaaaab\").toList) {\n    println(\"Success, found \\(r), remainder: \\(Array(s))\")\n}\n\n<\u51fa\u529b>\nSuccess, found aaaaa, remainder: [b]\nSuccess, found aaaa, remainder: [a, b]\nSuccess, found aaa, remainder: [a, a, b]\nSuccess, found aa, remainder: [a, a, a, b]\nSuccess, found a, remainder: [a, a, a, a, b]\n\n\n\u3055\u3066\u3001\u5148\u307b\u3069\u8aac\u660e\u3057\u305f\u901a\u308a\u3001\u521d\u3081\u3066\u8907\u6570\u306e\u7d50\u679c\u304c\u30d1\u30fc\u30b5\u30fc\u306e\u7d50\u679c\u3068\u3057\u3066\u51fa\u73fe\u3057\u307e\u3057\u305f\u3002\n\u3082\u3061\u308d\u3093\u6700\u521d\u306b\u51fa\u529b\u3057\u305f\u8981\u7d20\u304c\u6700\u7d42\u7d50\u679c\u3067\u3059\u3002\n\nLisp\u5b57\u53e5\u89e3\u6790\n\u3055\u3066\u3001\u305d\u308d\u305d\u308d\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u30b3\u30a2\u90e8\u5206\u304c\u3067\u304d\u3066\u304d\u307e\u3057\u305f\u3002\n\u3053\u306e\u8fba\u308a\u3067Lisp\u306e\u5b57\u53e5\u89e3\u6790\u30d5\u30a7\u30fc\u30ba\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u59cb\u3081\u307e\u3057\u3087\u3046\u3002\n\u307e\u305a\u306fLisp\u306e\u30c8\u30fc\u30af\u30f3\u306e\u5b9a\u7fa9\u3092\u8003\u3048\u307e\u3059\u3002\u3053\u308c\u306f\u5217\u6319\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u7c21\u5358\u3067\u3059\u3002\n\nenum LispToken {\n    case ParenthesesL\n    case ParenthesesR\n    case Symbol(String)\n    case Number(Double)\n}\n\n\n\u3064\u3044\u3067\u306b\u6587\u5b57\u5217\u5316\u3067\u304d\u308b\u3068\u3001\u30c7\u30d0\u30c3\u30b0\u304c\u6357\u308b\u306e\u3067Printable\u306b\u6e96\u62e0\u3055\u305b\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\nextension LispToken: Printable {\n    var description: String {\n        switch self {\n        case ParenthesesL:\n            return \"(\"\n        case ParenthesesR:\n            return \")\"\n        case let .Symbol(symbol):\n            return symbol\n        case let .Number(number):\n            return \"\\(number)\"\n        }\n    }\n}\n\n\u3067\u306f\u6b21\u306b\u5b57\u53e5\u89e3\u6790\u306e\u578b\u3092\u6c7a\u3081\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\uff11\u3064\u306e\u30c8\u30fc\u30af\u30f3\u3092\u30d1\u30fc\u30b9\u3067\u304d\u308b\u30d1\u30fc\u30b5\u30fc\u306e\u578b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\ntypealias LispTokenizerSingle = Combinator<Character, LispToken>.Parser\n\n\u4eca\u307e\u3067\u7a4d\u307f\u4e0a\u3052\u3066\u304d\u305f\u30c6\u30af\u30cb\u30c3\u30af\u3092\u4f7f\u3048\u3070\u3001\u3042\u3068\u306f\u6d41\u308c\u4f5c\u696d\u3067\u5b57\u53e5\u89e3\u6790\u30d1\u30fc\u30b5\u30fc\u304c\u51fa\u6765\u4e0a\u304c\u308a\u307e\u3059\u3002\n\u6570\u5024\u306b\u95a2\u3057\u3066\u306f\u3001\u7c21\u7565\u5316\u306e\u305f\u3081\u30010~9\u306e\u9023\u7d9a\u3057\u305f\u6587\u5b57\u5217\u3068\u3044\u3046\u3053\u3068\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u306e\u30d5\u30a7\u30fc\u30ba\u3067double\u578b\u306b\u307e\u3067\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\nlet tParenthesesL: LispTokenizerSingle = bind(token(\"(\")) { _ in\n    return pure(LispToken.ParenthesesL)\n}\nlet tParenthesesR: LispTokenizerSingle = bind(token(\")\")) { _ in\n    return pure(LispToken.ParenthesesR)\n}\nlet tSymbol: LispTokenizerSingle = bind(NSCharacterSet(charactersInString: \"+-*/\").parser) { r in\n    return pure(LispToken.Symbol(String(r)))\n}\n\nlet tNumber: LispTokenizerSingle = bind(oneOrMore(NSCharacterSet.decimalDigitCharacterSet().parser)) { r in\n    pure(LispToken.Number(NSString(string: String(r)).doubleValue))\n}\n\n\u3055\u3066\u3001\u3053\u3053\u3067\u7d39\u4ecb\u3057\u305ftParenthesesL, tParenthesesR, tSymbol, tNumber\u306e\uff14\u3064\u306f\u3001\u305d\u308c\u305e\u308c\uff11\u3064\u3057\u304b\u8aad\u3081\u307e\u305b\u3093\u3002\u306a\u306e\u3067\u3001\u4e00\u6c17\u306b\u5168\u90e8\u8aad\u3081\u308b\u3088\u3046\u306b\u7d50\u5408\u3057\u307e\u3057\u3087\u3046\u3002\n\u578b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\ntypealias LispTokenizer = Combinator<Character, List<LispToken>>.Parser\n\n\u30d1\u30fc\u30b5\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6e96\u5099\u3067\u304d\u307e\u3059\u3002\nlet tLispTokenizer: LispTokenizer = oneOrMore(tParenthesesL <|> tParenthesesR <|> tSymbol <|> tNumber)\n\n\u304a\u3063\u3068\u3001\u5927\u4e8b\u306a\u3053\u3068\u3092\u5fd8\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u7a7a\u767d\u3092\u7121\u8996\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3057\u304b\u3057\u3053\u306e\u3088\u3046\u306a\u69cb\u9020\u306e\u30d1\u30fc\u30b5\u30fc\u3067\u3042\u308c\u3070\u3001\u7c21\u5358\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\nfunc ignoreLeadingWhitespace<T>(p: Combinator<Character, T>.Parser) -> Combinator<Character, T>.Parser {\n    return bind(zeroOrMore(NSCharacterSet.whitespaceCharacterSet().parser)) { result in\n        return p\n    }\n}\n\nlet tLispTokenizer: LispTokenizer = oneOrMore(ignoreLeadingWhitespace(tParenthesesL <|> tParenthesesR <|> tSymbol <|> tNumber))\n\n\n\u3055\u3066\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066\u3001Lisp\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b57\u53e5\u89e3\u6790\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nfor (r, s) in tLispTokenizer(Array(\"(* (- 4 2) 10)\").toList) {\n    println(\"Success, found \\(r.toArray), remainder: \\(Array(s))\")\n}\n\nSuccess, found [(, *, (, +, 4.0, 2.0, ), 10.0, )], remainder: []\n<\u4ee5\u4e0b\u7565>\n\n\n\u898b\u4e8b\u306b\u610f\u5473\u3092\u6301\u3064\u6700\u5c0f\u5358\u4f4d\u306e\u5217\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u3082\u3046\u3042\u3068\u4e00\u606f\u3067\u3059\u3002\n\nLisp\u69cb\u6587\u89e3\u6790\n\u3064\u3044\u306b\u6700\u7d42\u30d5\u30a7\u30fc\u30ba\u3001\u69cb\u6587\u89e3\u6790\u306b\u3084\u3063\u3066\u307e\u3044\u308a\u307e\u3057\u305f\u3002\n\u6700\u5f8c\u306e\u30d1\u30fc\u30b5\u30fc\u306e\u578b\u3092\u51fa\u3057\u307e\u3057\u3087\u3046\u3002\u5165\u529b\u306f\u5148\u307b\u3069\u306eLispToken\u3001\n\u305d\u3057\u3066\u30d1\u30fc\u30b5\u30fc\u306e\u7d50\u679c\u306fSExpr\u3001\u305d\u3046\u3001S\u5f0f\u3067\u3059\u3002\ntypealias LispExpressionParser = Combinator<LispToken, SExpr>.Parser\n\n\u672c\u51e6\u7406\u306b\u5165\u308b\u524d\u306b\u3001LispToken\u306b\u3044\u304f\u3064\u304b\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\nextension LispToken {\n    var isParenthesesL: Bool {\n        switch self {\n        case .ParenthesesL:\n            return true\n        default:\n            return false\n        }\n    }\n    var isParenthesesR: Bool {\n        switch self {\n        case ParenthesesR:\n            return true\n        default:\n            return false\n        }\n    }\n    var expr: SExpr? {\n        switch self {\n        case let .Symbol(symbol):\n            return SExpr(Atom(symbol))\n        case let .Number(number):\n            return SExpr(Atom(number))\n        default:\n            return nil\n        }\n    }\n}\n\nexpr\u306f\u3001\u30c7\u30fc\u30bf\u304c\u76f4\u63a5S\u5f0f\u306b\u5909\u63db\u3067\u304d\u308b\u5834\u5408\u3001S\u5f0f\u3092\u8fd4\u3057\u3001\u3067\u304d\u306a\u3044\u5834\u5408\u306fnil\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u3055\u3066\u3001Lisp\u30c8\u30fc\u30af\u30f3\u304b\u3089S\u5f0f\u3092\u69cb\u6210\u3059\u308b\u305f\u3081\u306e\u30ad\u30e2\u306f\u62ec\u5f27\u3067\u3059\u3002\n\u62ec\u5f27\u3067\u56f2\u307e\u308c\u305f\u30c8\u30fc\u30af\u30f3\u3092\u629c\u304d\u51fa\u3059\u30d1\u30fc\u30b5\u30fc\u306f\u4ee5\u4e0b\u306e\u95a2\u6570\u3067\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\nfunc parentheses<T>(factory: () -> Combinator<LispToken, T>.Parser) -> Combinator<LispToken, T>.Parser {\n    return bind(satisfy { t in t.isParenthesesL } ) { L in\n        bind(factory()) { insideList in\n            bind(satisfy { t in t.isParenthesesR }) { R in\n                pure(insideList)\n            }\n        }\n    }\n}\n\n\u306a\u3093\u3066\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3001\"(\" => \uff08\u7279\u5b9a\u306e\u30d1\u30fc\u30b5\u30fc\uff09=> \")\" \u3092\u30d1\u30fc\u30b9\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u305d\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u5b8c\u6210\u7cfb\u306f\u3053\u308c\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\n\nfunc pLispExpression() -> LispExpressionParser {\n    let pAtom: LispExpressionParser = bind(consumer()) { r in\n        if let expr = r.expr {\n            return pure(expr)\n        }\n        return zero()\n    }\n    return bind(parentheses { zeroOrMore(pLispExpression() <|> pAtom) }) { exprs in\n        pure(SExpr(exprs))\n    }\n}\n\n\npAtom\u306f\u826f\u3044\u3067\u3059\u306d\u3001\u5358\u306b\u6570\u5024\u3084\u30b7\u30f3\u30dc\u30eb\u3092\u6a5f\u68b0\u7684\u306bS\u5f0f\u306b\u5909\u63db\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u30ad\u30e2\u306f\u3001return \u90e8\u3067\u3057\u3087\u3046\u3002\npLispExpression()\u304cparentheses\u306e\u5185\u5074\u306b\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u3046\u3001\u53ef\u80fd\u306a\u9650\u308a\u5965\u6df1\u304f\u307e\u3067()\u306e\u84cb\u3092\u958b\u3051\u3066\u3044\u304f\u306e\u3067\u3059\u3002\n\u305d\u3057\u3066\u4e00\u756a\u5965\u307e\u3067\u3046\u307e\u304f\u305f\u3069\u308a\u7740\u3051\u305f\u3082\u306e\u304c\u3001\u6211\u3005\u306e\u8ffd\u3044\u6c42\u3081\u308b\u7a76\u6975\u306eS\u5f0f\u306a\u306e\u3067\u3059\uff08\u5927\u8888\u88df\u3067\u3057\u305f\u304b\u306d\uff09\u3002\n\u65e9\u901f\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nfor (r, s) in tLispTokenizer(Array(\"(* (+ 3 18) 2)\").toList) {\n    let e = pLispExpression()\n    for (r, s) in e(r) {\n        println(\"Success \\(r), eval = \\(eval(r))\")\n    }\n}\n\n<\u51fa\u529b>\nSuccess (* (+ 3.0 18.0) 2.0), eval = 42.0\n\u4ee5\u4e0b\u7565\n\n\n\u3068\u3066\u3082\u9577\u3044\u9053\u306e\u308a\u3067\u3057\u305f\u3002\u3064\u3044\u306b\u6211\u3005\u306e\u6975\u5c0fLisp\u30d1\u30fc\u30b5\u30fc\u306f\u5b8c\u6210\u3057\u307e\u3057\u305f\u3002\n\u8a08\u7b97\u306e\u7b54\u3048\u304c\u3001\u300c\u4eba\u751f\u3001\u5b87\u5b99\u3001\u3059\u3079\u3066\u306e\u7b54\u3048\u300d\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u304d\u3063\u3068\u5076\u7136\u3067\u3057\u3087\u3046\u3002\n\u30ac\u30c1\u306aLisper\u3055\u3093\u306b\u306f\u3053\u3093\u306a\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306a\u3093\u3066\u30b4\u30df\u3060\uff01\u306a\u3093\u3066\u8a00\u308f\u308c\u304b\u306d\u306a\u3044\u3067\u3059\u304c\u3001\n\u58ee\u5927\u306a\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3068\u3044\u3046\u3053\u3068\u3067\u305d\u306e\u5bdb\u5927\u306a\u5fc3\u3067\u8a31\u3057\u3066\u3044\u305f\u3060\u3051\u305f\u3089\u3068\u601d\u3044\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u4eca\u307e\u3067\u306e\u91cd\u8981\u306a\u90e8\u5206\u3092\u542b\u3093\u3060\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30a2\u30c3\u30d7\u3057\u3066\u7de0\u3081\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\nhttps://github.com/Ushio/Lisp_with_ParserCombinator\n\u6700\u5f8c\u307e\u3067\u304a\u3064\u304d\u5408\u3044\u9802\u3044\u305f\u65b9\u3001\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\u203b\u3053\u3093\u306a\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u304c\u3001\u5b9f\u306fLisp\u306f\u305d\u3053\u307e\u3067\u8a73\u3057\u304f\u77e5\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002\u3002\n\u3082\u3057\u8868\u73fe\u3084\u69cb\u9020\u7b49\u3001\u9593\u9055\u3044\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u4fee\u6b63\u3044\u305f\u3057\u307e\u3059\u306e\u3067\u3054\u6307\u6458\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n## \u6975\u5c0fLisp\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u3092\u4f5c\u308d\u3046\uff01\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001\u975e\u5e38\u306b\u6a5f\u80fd\u3092\u7d5e\u3063\u305fLisp\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306e\u4f5c\u6210\u3092\u901a\u3058\u3066\u3001\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u3084\u3001\u305d\u308c\u306b\u307e\u3064\u308f\u308b\u30c6\u30af\u30cb\u30c3\u30af\u3001\u8003\u3048\u65b9\u306a\u3069\u3092\u7d39\u4ecb\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u4eca\u56de\u4f5c\u6210\u3059\u308bLisp\u306b\u767b\u5834\u3059\u308b\u306e\u306f\u3001\u56db\u5247\u6f14\u7b97\u95a2\u6570\u3068\u3001\u6570\u5024\u578b\u3060\u3051\u306e\u975e\u5e38\u306b\u30df\u30cb\u30de\u30e0\u306a\u3082\u306e\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30bd\u30fc\u30b9\u306b\u306a\u308a\u307e\u3059\u3002\n\n```cl\n\n(* (+ 3 18) 2)\n\n```\n\n\u3053\u308c\u3092\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306a\u3069\u306b\u98df\u308f\u305b\u308b\u3068\u3001(3 + 18) * 2 \u3068\u3044\u3046\u8a08\u7b97\u3092\u884c\u3044\u300142\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\u56db\u5247\u6f14\u7b97\u3057\u304b\u3067\u304d\u306a\u3044\u3068\u3066\u3082\u6975\u5c0f\u306e\u3082\u306e\u3067\u3059\u304c\u3001\u4f5c\u6210\u306e\u904e\u7a0b\u3067\u306f\u69d8\u3005\u306a\u30c6\u30af\u30cb\u30c3\u30af\u3092\u4ea4\u3048\u3064\u3064\u7d39\u4ecb\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001[\"\u7121\u9650\u30ea\u30b9\u30c8\u306e\u4f5c\u308a\u65b9\"](http://qiita.com/Ushio@github/items/1a639eb80fb21e7ea182)\u3067\u4f5c\u6210\u3057\u305fList\u3092\u591a\u7528\u3057\u307e\u3059\u306e\u3067\u3001\u968f\u6642\u53c2\u7167\u3057\u3066\u9802\u3051\u308b\u3068\u8aad\u307f\u3084\u3059\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u305d\u3082\u305d\u3082Lisp\u3063\u3066\u306a\u3093\u3060\u3088\uff1f\n\nLisp\u306fList Processing\u306b\u7531\u6765\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u3059\u3002\u3068\u3066\u3082\u53e4\u3044\u8a00\u8a9e\u3067\u3059\u304c\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u6b74\u53f2\u7684\u306b\u5927\u304d\u306a\u5f71\u97ff\u3092\u4e0e\u3048\u305f\u8a00\u8a9e\u3067\u3059\u3002\n\u307e\u305f\u3001\u300c[\u8a08\u7b97\u6a5f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u69cb\u9020\u3068\u89e3\u91c8](http://www.amazon.co.jp/%E8%A8%88%E7%AE%97%E6%A9%9F%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%AE%E6%A7%8B%E9%80%A0%E3%81%A8%E8%A7%A3%E9%87%88-%E3%82%B8%E3%82%A7%E3%83%A9%E3%83%AB%E3%83%89%E3%83%BB%E3%82%B8%E3%82%A7%E3%82%A4-%E3%82%B5%E3%82%B9%E3%83%9E%E3%83%B3/dp/489471163X)\u300d\u3068\u3044\u3046MIT\u306e\u8a08\u7b97\u6a5f\u79d1\u5b66\u306e\u6559\u79d1\u66f8\u306b\u3082\u4f7f\u308f\u308c\u305f\u8a00\u8a9e\u3067\u3082\u3042\u308a\u307e\u3059\u3002\n\nLisp\u306b\u89e6\u308c\u308b\u3053\u3068\u3067\u3001\u5e83\u304f\u4e00\u822c\u306b\u73fe\u5728\u4f7f\u308f\u308c\u3066\u3044\u308b\u8a00\u8a9e\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u306a\u304b\u306a\u304b\u5f97\u3089\u308c\u306a\u3044\u9762\u767d\u3044\u4f53\u9a13\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u306e\u3067\u3001\u305d\u308c\u3089\u3082\u968f\u6642\u7d39\u4ecb\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n## Lisp\u306e\u30ad\u30db\u30f3\n\n\u3055\u3066\u3001\u3082\u3063\u3068\u8e0f\u307f\u8fbc\u3093\u3060Lisp\u306e\u80cc\u666f\u306f\u3055\u3089\u3063\u3068\u3053\u308c\u304f\u3089\u3044\u306b\u3057\u3066\u3001\n\u4eca\u56de\u5b9f\u88c5\u3059\u308bLisp\u306e\u57fa\u5e79\u90e8\u5206\u306b\u3064\u3044\u3066\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u8e0f\u307f\u8fbc\u307f\u3059\u304e\u308b\u3068\u3084\u3084\u3053\u3057\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u5fc5\u8981\u6700\u4f4e\u9650\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\n\n\u3055\u3066\u3001\u7a81\u7136\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306eLisp\u30bd\u30fc\u30b9\u306f\u306a\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\n\n```cl\n\n(+ 4 2)\n\n```\n\n\u65e2\u306b\u6c17\u4ed8\u3044\u3066\u3044\u308b\u65b9\u3082\u3044\u3089\u3063\u3057\u3083\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\n**\u30d7\u30e9\u30b9\u8a18\u53f7\u306f\u95a2\u6570**\u3067\u3059\u3002\u305d\u3057\u3066\u3001**\u305d\u308c\u306b\u7d9a\u304f\u3082\u306e\u304c\u5f15\u6570**\u3067\u3059\u3002\n\n\u4f8b\u3048\u3070\u3055\u3089\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u307e\u3059\u3002\n\n```cl\n\n(+ 4 2 4)\n\n```\n\n\u3053\u308c\u306f\u8a08\u7b97\u3059\u308b\u306810\u3067\u3059\u306d\u3002\n\u3055\u3066\u3001\u3053\u308c\u3060\u3051\u306e\u60c5\u5831\u3067\u3001\u3082\u3046\u6700\u521d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n```cl\n\n(* (+ 4 2) 10)\n\n```\n\n\u5185\u5074\u306e\u90e8\u5206\u304c\u512a\u5148\u3055\u308c\u307e\u3059\u304b\u3089\u3001\n\n```cl\n\n(* (+ 4 2) 10)\n\n```\n\n```cl\n\n(* 6 10)\n\n```\n\n```cl\n\n60\n\n```\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u306d\n\n\u62ec\u5f27\u3070\u304b\u308a\u3067\u4e00\u4f53\u306a\u3093\u3060\uff1f\u3068\u3044\u3046\u6c17\u6301\u3061\u304c\u5c11\u3057\u306f\u3084\u308f\u3089\u3044\u3060\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u3067\u3001\u30ea\u30b9\u30c8\u3063\u3066\u3069\u3053\u306b\u51fa\u3066\u304f\u308b\u306e\uff1f\n\nLisp\u306fLisp Processing\u3001\u3059\u3079\u3066\u306e\u57fa\u76e4\u306f\u30ea\u30b9\u30c8\uff08\u7247\u65b9\u5411\u30ea\u30f3\u30af\u30ea\u30b9\u30c8\uff09\u3067\u3059\u3002\n\n```cl\n\n(+ 4 2)\n\n```\n\n\u3053\u308c\u306f\u305f\u3060\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u304c\u3001Lisp\u306e\u51e6\u7406\u7cfb\u306f\u3053\u308c\u3092\u3001\n\n+, 4, 2\n\n\uff13\u3064\u306e\u8981\u7d20\u306e\u30ea\u30b9\u30c8\u3060\u3068\u307e\u305a\u7406\u89e3\u3057\u307e\u3059\u3002\n\u3042\u308c\uff1f\u30ea\u30b9\u30c8\u306f\u4e00\u822c\u306b\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\u3002\n\u3053\u308c\u3067\u306f\u8a08\u7b97\u3067\u304d\u306a\u3044\u3058\u3083\u306a\u3044\u304b\u3001\u3068\u3044\u3046\u6c17\u304c\u3057\u3066\u304d\u307e\u3059\u306d\u3002\n\n## \u8a55\u4fa1\u3059\u308b(1)\nLisp\u306b\u306f\u3001\u8a55\u4fa1\u3059\u308b\u3001\u3068\u3044\u3046\u6982\u5ff5\u304c\u3042\u308a\u307e\u3059\u3002Lisp\u51e6\u7406\u7cfb\u306f\u3068\u3066\u3082\u8a55\u4fa1\u3057\u305f\u304c\u308a\u5c4b\u3055\u3093\u3067\u3001\u4e0e\u3048\u308b\u3082\u306e\u306f\u4f55\u3067\u3082\u8a55\u4fa1\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3067\u306fLisp\u306b\u30ea\u30b9\u30c8\u3092\u4e0e\u3048\u305f\u3089\u3001\u4f55\u304c\u8d77\u3053\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u5358\u5200\u76f4\u5165\u306b\u3044\u3046\u3068\u3001Lisp\u306f**\u30ea\u30b9\u30c8\u3092\u8a55\u4fa1\u3059\u308b\u6642\u3001\u305d\u308c\u306f\u95a2\u6570\u547c\u3073\u51fa\u3057\u3060\u3068\u7406\u89e3\u3057\u307e\u3059**\u3002\u305d\u306e\u6642\u306e\u6319\u52d5\u3092\u8ffd\u3044\u304b\u3051\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```cl\n\n(+ 4 2)\n\n```\n\n\u3068\u3044\u3046\u30ea\u30b9\u30c8\u304c\u4e0e\u3048\u3089\u308c\u305f\u6642\u3001\u307e\u305a\u7b2c\u4e00\u8981\u7d20\u3092\u898b\u3066\u3001\u305d\u308c\u304c\u3061\u3083\u3093\u3068\u3057\u305f\u95a2\u6570\u306a\u3089\u3001\u7b2c\u4e8c\u8981\u7d20\u4ee5\u4e0b\u306e\u30ea\u30b9\u30c8\u3092\u5f15\u6570\u3068\u3057\u3066\u305d\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u306e\u3067\u3059\u3002\uff08\u5b9a\u7fa9\u3055\u308c\u305f\u95a2\u6570\u304c\u7121\u3044\u306a\u3089\u30a8\u30e9\u30fc\u3067\u3059\uff09\n\u3064\u307e\u308a\u3001\u5148\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30014, 2\u3068\u3044\u3046\u30ea\u30b9\u30c8\u3092\u5f15\u6570\u306b+\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3001\u3068\u3044\u3046\u306e\u304cLisp\u306b\u3068\u3063\u3066\u8a55\u4fa1\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u30ea\u30b9\u30c8\u304c\u5165\u308c\u5b50\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u6642\u306b\u3001**\u5148\u306b\u5f15\u6570\u3092\u8a55\u4fa1\u3057\u3066\u304b\u3089\u95a2\u6570\u3092\u51e6\u7406\u3059\u308b**\u306e\u3067\u3001\u30ea\u30b9\u30c8\u306e\u5165\u308c\u5b50\u69cb\u9020\u306b\u3082\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\n## \u8a55\u4fa1\u3059\u308b(2)\n\u3055\u3066\u3001\u30ea\u30b9\u30c8\u306e\u8a55\u4fa1\u306b\u3064\u3044\u3066\u306f\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u3067\u30824\u3068\u304b2\u3068\u304b\u3092\u8a55\u4fa1\u3059\u308b\u3068\u4f55\u306b\u306a\u308b\u306e\uff1f\u3068\u3044\u3046\u306e\u3092\u4e00\u5fdc\u8003\u3048\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u5148\u306b\u7d50\u8ad6\u304b\u3089\u3044\u3046\u3068\u30014\u3092\u8a55\u4fa1\u3059\u308b\u30684\u306b\u30012\u3092\u8a55\u4fa1\u3059\u308b\u30682\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3064\u307e\u308a\u3001**\u6570\u5024\u3092\u8a55\u4fa1\u3059\u308b\u3068\u6570\u5024**\u304c\u51fa\u3066\u304f\u308b\u3093\u3067\u3059\u306d\u3002\n\u3042\u307e\u308a\u3072\u306d\u308a\u3082\u306a\u3044\u30b7\u30f3\u30d7\u30eb\u306a\u7d04\u675f\u3054\u3068\u3067\u3059\u304c\u3001\u5b9f\u88c5\u3059\u308b\u306b\u3042\u305f\u3063\u3066\u306f\u3053\u3046\u3044\u3046\u7d30\u304b\u3044\u3053\u3068\u3082\u78ba\u8a8d\u3059\u3079\u304d\u3067\u3059\u3002\n\n## \u30c7\u30fc\u30bf\u578b\n\n\u305d\u308d\u305d\u308dLisp\u3067\u6271\u3046\u30c7\u30fc\u30bf\u578b\u306b\u3064\u3044\u3066\u6574\u7406\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\u56f3\u306e\u65b9\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u56f3\u306b\u3057\u307e\u3059\u3002\n\n![\u30c7\u30fc\u30bf\u578b.png](https://qiita-image-store.s3.amazonaws.com/0/8588/3d1f5b92-000e-7e28-ac81-ed86d628d99f.png)\n\n\u304a\u3063\u3068\u3001\u5510\u7a81\u306b\u51fa\u3057\u3066\u3057\u307e\u3063\u305f\u7528\u8a9e\u304c\u7d50\u69cb\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u305a\u306fS\u5f0f\u3067\u3059\u304c\u3001\u3053\u308c\u306fjava\u306a\u3069\u3067\u3001\u3059\u3079\u3066\u306fObject\u3067\u3042\u308b\u3001\u3068\u3044\u3046\u306e\u306b\u4f3c\u3066\u3044\u307e\u3059\u3002Lisp\u306e\u767b\u5834\u4eba\u7269\u306f\u3059\u3079\u3066\u306fS\u5f0f\u3067\u3042\u308b\u3001\u3068\u8a00\u3063\u3066\u3044\u308b\u306b\u3059\u304e\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001\u3055\u3089\u3063\u3068\u5927\u4e8b\u306a\u3053\u3068\u3092\u66f8\u304d\u307e\u3059\u304c\u3001S\u5f0f\u3092\u8a55\u4fa1\u3059\u308b\u3068\u3001\u305d\u306e\u7d50\u679c\u306fS\u5f0f\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u6b21\u306f\u30a2\u30c8\u30e0\u3067\u3059\u3002\u3053\u308c\u306f\u6570\u5024\u3084\u30b7\u30f3\u30dc\u30eb\u306e\u3088\u3046\u306a\u3001\u5358\u4f53\u306e\u30c7\u30fc\u30bf\u3092\u6307\u3057\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\u30b7\u30f3\u30dc\u30eb\u3067\u3059\u3002\u3053\u308c\u306f\u3001\n\n```cl\n\n(+ 4 2)\n\n```\n\n\u306e\u4e2d\u306e + \u306e\u3053\u3068\u3092\u30b7\u30f3\u30dc\u30eb\u3068\u547c\u3073\u307e\u3059\u3002\n\u4eca\u56de\u4f5c\u308bLisp\u3067\u306f\u3001\u30b7\u30f3\u30dc\u30eb\u306f\u5fc5\u305a\u95a2\u6570\u3092\u6307\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u304b\u306a\u308a\u6574\u7406\u3055\u308c\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u4e00\u5fdc\u6ce8\u610f\u70b9\u3067\u3059\u304c\u3001\n*\u666e\u901a\u306eLisp\u306b\u306f\u30b7\u30f3\u30dc\u30eb\u306f\u95a2\u6570\u3060\u3051\u3067\u306a\u304f\u3001\u5909\u6570\u3092\u6307\u3057\u305f\u308a\u3082\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u56f3\u306e\u30a2\u30c8\u30e0\u3082\u6587\u5b57\u5217\u306b\u3064\u3044\u3066\u306f\u8a00\u53ca\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3042\u304f\u307e\u3067\u3082\u4eca\u56de\u5b9f\u88c5\u3059\u308b\u6975\u5c0fLisp\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u305f\u56f3\u3067\u3042\u308b\u3053\u3068\u3092\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002*\n\n## Swift\u3067\u5b9f\u88c5\u3057\u3088\u3046\n\n\u3055\u3066\u3001Swift\u3067Lisp\u3092\u8868\u73fe\u3059\u308b\u306e\u306b\u5fc5\u8981\u306a\u3082\u306e\u306f\u63c3\u3044\u307e\u3057\u305f\u3002\n\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u30ec\u30d9\u30eb\u306b\u843d\u3068\u3057\u8fbc\u3093\u3067\u884c\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305a\u306f\u30a2\u30c8\u30e0\u304b\u3089\u884c\u304d\u307e\u3057\u3087\u3046\u304b\n\n```swift\n\nenum Atom {\n    case Symbol(String)\n    case Number(Double)\n}\n\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u6b21\u306bS\u5f0f\u3067\u3059\u3002\n\n```swift\n\nenum SExpr {\n    case SAtom(Atom)\n    case SList(() -> List<SExpr>)\n}\n\n```\n\n\u5358\u7d14\u3067\u3059\u3002\nSExpr.SList\u306e\u30c7\u30fc\u30bf\u578b\u304c\u95a2\u6570\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u518d\u5e30\u7684\u306aEnum\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308b\u305f\u3081\u306e\u4fbf\u5b9c\u7684\u306a\u3082\u306e\u306a\u306e\u3067\u3001\u3042\u307e\u308a\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\n\u5b9f\u969b\u306b\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3068\u4e0d\u4fbf\u306a\u306e\u3067\u3001\u3044\u304f\u3064\u304bextension\u3092\u66f8\u304d\u307e\u3057\u3087\u3046\u3002\n\n```swift\n\nextension Atom {\n    var symbol: String? {\n        switch self {\n        case let .Symbol(symbol):\n            return symbol\n        default:\n            return nil\n        }\n    }\n    var number: Double? {\n        switch self {\n        case let .Number(number):\n            return number\n        default:\n            return nil\n        }\n    }\n    \n    init(_ symbol: String) {\n        self = .Symbol(symbol)\n    }\n    init(_ number: Double) {\n        self = .Number(number)\n    }\n}\nextension Atom : Printable {\n    var description: String {\n        if let symbol = self.symbol {\n            return symbol\n        } else if let number = self.number {\n            return \"\\(number)\"\n        }\n        return \"\"\n    }\n}\n\nextension SExpr {\n    var atom: Atom? {\n        switch self {\n        case let .SAtom(atom):\n            return atom\n        default:\n            return nil\n        }\n    }\n    var list: List<SExpr>? {\n        switch self {\n        case let .SList(f):\n            return f()\n        default:\n            return nil\n        }\n    }\n    \n    init(_ atom: Atom) {\n        self = .SAtom(atom)\n    }\n    init(_ list: List<SExpr>) {\n        self = .SList({ list })\n    }\n}\nextension SExpr : Printable {\n    var description: String {\n        if let atom = self.atom {\n            return atom.description\n        } else if let list = self.list {\n            let strings = list.map { x in x.description }\n            if let car = strings.car {\n                return \"(\" + strings.cdr.reduce(car) { r, x in r + \" \" + x } + \")\"\n            }\n            return \"\"\n\n        }\n        return \"\"\n    }\n}\n\nfunc SExprNil() -> SExpr{\n    return SExpr(none())\n}\n\n```\n\n\u6700\u5f8c\u306eSExprNil()\u306f\u3001\u30a8\u30e9\u30fc\u306e\u6642\u306b\u4f7f\u3044\u307e\u3059\u3002\nLisp\u306b\u3082nil\u304c\u5b58\u5728\u3057\u3066\u3044\u3066\u3001\u305d\u308c\u306f\b\u8981\u7d20\u30bc\u30ed\u306e\u30ea\u30b9\u30c8\u306e\u3053\u3068\u3067\u3059\u3002\n\n## eval\u3068apply\n\n\u3055\u3066\u3001\u3053\u3053\u307e\u3067\u30c7\u30fc\u30bf\u578b\u3092\u5b9a\u7fa9\u3059\u308b\u3042\u307e\u308a\u9762\u767d\u304f\u306a\u3044\u3082\u306e\u3067\u3057\u305f\u304c\u3001\n\u3064\u3044\u306b\u300c\u8a55\u4fa1\u3059\u308b\u300d\u90e8\u5206\u3092\u4f5c\u6210\u3057\u307e\u3057\u3087\u3046\u3002eval\u95a2\u6570\u3067\u3059\u3002\n\n```swift\n\nfunc eval(expr: SExpr) -> SExpr {\n    if\n        let list = expr.list,\n        let car = list.car,\n        let symbol = eval(car).atom?.symbol\n    {\n        let arguments = list.cdr\n        return apply(symbol, arguments)\n    }\n    \n    if let atom = expr.atom {\n        return expr\n    }\n    \n    return SExprNil()\n}\n\n```\n\neval\u95a2\u6570\u3067\u306f\u3001\u307e\u305aS\u5f0f\u3092\u53d7\u3051\u53d6\u308a\u3001\n\u305d\u308c\u304c\u30ea\u30b9\u30c8\u306a\u3089\u3070\u3001\u6700\u521d\u306e\u8981\u7d20\u3092\u8a55\u4fa1\u3057\u3001\u3055\u3089\u306b\u305d\u308c\u304c\u30b7\u30f3\u30dc\u30eb\u306a\u3089\u3070\u3001\u6b8b\u308a\u306e\u30ea\u30b9\u30c8\u3092\u5f15\u6570\u306b\u3001\u305d\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u306f\u3001apply\u95a2\u6570\u3068\u3057\u3066\u7dba\u9e97\u306b\u5206\u96e2\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001eval\u306e\u5f15\u6570\u304c\u30a2\u30c8\u30e0\u306a\u3089\u3070\u3001\u305d\u308c\u306f\u305d\u306e\u307e\u307e\u30a2\u30c8\u30e0\u3092\u8fd4\u3057\u307e\u3059\u3002\u5148\u307b\u3069\u78ba\u8a8d\u3057\u305f\u7d04\u675f\u4e8b\u3067\u3059\u306d\u3002\n\n\u3067\u306f\u6b21\u306fapply\u95a2\u6570\u3067\u3059\u3002\n\n```swift\n\nfunc apply(symbol: String, arguments: List<SExpr>) -> SExpr {\n    let number_arguments: List<Double> = arguments.flatMap { x in\n        if let number = eval(x).atom?.number {\n            return one(number)\n        }\n        return none()\n    }\n    let functions: [String : (Double, Double) -> Double] = [\n        \"+\" : (+),\n        \"-\" : (-),\n        \"*\" : (*),\n        \"/\" : (/)\n    ]\n    if let op = functions[symbol], car = number_arguments.car {\n        return SExpr(Atom(number_arguments.cdr.reduce(car, combine: op)))\n    }\n    return SExprNil()\n}\n\n```\n\n\u307e\u305aapply\u95a2\u6570\u306f\u3001\u5f15\u6570\u30ea\u30b9\u30c8\u3092\u5148\u306b\u8a55\u4fa1\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u56db\u5247\u6f14\u7b97\u306e\u95a2\u6570\u3060\u3051\u306a\u306e\u3067\u6570\u5024\u3060\u3051\u3092\u96c6\u3081\u3066\u3001reduce\u3059\u308b\u7d50\u69cb\u4e71\u66b4\u306a\u5b9f\u88c5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3055\u3066\u3001\u3053\u308c\u3063\u3066\u7d50\u69cb\u9762\u767d\u3044\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6c17\u3065\u304b\u308c\u305f\u3067\u3057\u3087\u3046\u304b\u3002\neval\u306fapply\u3092\u547c\u3073\u3001apply\u306f\u307e\u305feval\u3092\u6b32\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u56f3\u306f\u3069\u3053\u304b\u3067\u898b\u305f\u3053\u3068\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\n![eval_apply.png](https://qiita-image-store.s3.amazonaws.com/0/8588/82ac3e90-6725-3635-17c1-38edc1a4ca49.png)\n\n\u3053\u308c\u306f[\u8a08\u7b97\u6a5f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u69cb\u9020\u3068\u89e3\u91c8](http://www.amazon.co.jp/%E8%A8%88%E7%AE%97%E6%A9%9F%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0%E3%81%AE%E6%A7%8B%E9%80%A0%E3%81%A8%E8%A7%A3%E9%87%88-%E3%82%B8%E3%82%A7%E3%83%A9%E3%83%AB%E3%83%89%E3%83%BB%E3%82%B8%E3%82%A7%E3%82%A4-%E3%82%B5%E3%82%B9%E3%83%9E%E3%83%B3/dp/489471163X)\u306e\u7b2c4\u7ae0\u3067\u63d0\u793a\u3055\u308c\u3066\u3044\u308b\u56f3\u3067\u3001\n\u5b9f\u306f\u3053\u306e\u672c\u306e\u8868\u7d19\u306b\u3082\u306a\u3063\u3066\u3044\u308b\u91cd\u8981\u306a\u56f3\u306a\u3093\u3067\u3059\u306d\u3002\n\n\n\u3068\u3082\u3042\u308c\u3001\u3053\u308c\u3067\u6975\u5c0fLisp\u51e6\u7406\u7cfb\u306e\u30b3\u30a2\u90e8\u5206\u306e\u6e96\u5099\u304c\u5b8c\u4e86\u3067\u3059\u3002\n\n\u8a66\u3057\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001S\u5f0f\u3092Swift\u4e0a\u3067\u7d44\u307f\u7acb\u3066\u305f\u3082\u306e\u3092\u8a55\u4fa1\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```swift\n\nlet s = SExpr([SExpr(Atom(\"*\")), SExpr([SExpr(Atom(\"+\")), SExpr(Atom(3.0)), SExpr(Atom(1.0)), SExpr(Atom(2.0))].toList), SExpr(Atom(2.0))].toList)\nprintln(s)\nprintln(eval(s))\n\n<\u51fa\u529b>\n(* (+ 3.0 1.0 2.0) 2.0)\n12.0\n\n```\n\n\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\u3053\u308c\u3067\u6975\u5c0fLisp\u306f\u5b8c\u30fb\u30fb\u30fb\u304a\u3063\u3068\u3001\u307e\u3060\u30d1\u30fc\u30b5\u30fc\u304c\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u306d\u3002\n\n\u3061\u3087\u3063\u3068\u75b2\u308c\u305f\u65b9\u306f\u3044\u3063\u305f\u3093\u4f11\u61a9\u3057\u307e\u3057\u3087\u3046\u3002\u305d\u3057\u3066\u6e96\u5099\u304c\u3067\u304d\u305f\u3089\u6b21\u306f\u30d1\u30fc\u30b5\u30fc\u3092\u7d44\u307f\u7acb\u3066\u884c\u304d\u307e\u3059\u3002\n\u3042\u3001\u30de\u30b5\u30ab\u30ea\u3092\u63e1\u308a\u7de0\u3081\u3066\u3044\u308b\u304b\u305f\u306f\u3001\u305d\u3061\u3089\u306b\u7f6e\u3044\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u306d\u30fb\u30fb\u30fb\u3002\n\n## \u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\uff1f\n\n\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u3068\u306f\u3001\u30d1\u30fc\u30b5\u30fc\u30b8\u30a7\u30cd\u30ec\u30fc\u30c8\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u3053\u3068\u3092\u6307\u3057\u307e\u3059\u3002\n\u7591\u4f3c\u30b3\u30fc\u30c9\u3067\u3044\u3046\u3068\u3001\n\n```\n\nlet parser = \u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf-\u4f5c\u6210(\u5b9a\u7fa9)\nlet result = parser(\u6587\u5b57\u5217)\n\n```\n\n\u306e\u3088\u3046\u306b\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30d1\u30fc\u30b5\u30fc\u304c\u95a2\u6570\u306a\u3089\u3001\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306f\u9ad8\u968e\u95a2\u6570\uff08\u95a2\u6570\u3092\u8fd4\u3059\u95a2\u6570\uff09\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u5927\u304d\u306a\u7279\u5fb4\u3068\u3057\u3066\u3001\n\n**\u300c\u5c0f\u3055\u306a\u30d1\u30fc\u30b5\u30fc\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u5927\u304d\u306a\u30d1\u30fc\u30b5\u30fc\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u300d**\n\n\u3068\u3044\u3046\u3068\u3066\u3082\u91cd\u8981\u306a\u6027\u8cea\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u90e8\u5206\u306b\u3064\u3044\u3066\u3082\u968f\u6642\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u203b\u3053\u306e\u90e8\u5206\u3092\u66f8\u304f\u306b\u3042\u305f\u3063\u3066\u3001\u4ee5\u4e0b\u3092\u975e\u5e38\u306b\u53c2\u8003\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n[bind\u3067\u6bce\u56de\u8a70\u307e\u308b\u4eba\u306e\u70ba\u306e\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u4ed5\u7d44\u307f](http://karino2.livejournal.com/264332.html)\n[functional programming in swift](http://www.objc.io/books/)\n\n## \u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u6e96\u5099\uff08\u30c7\u30fc\u30bf\u578b\b\uff09\n\n\u307e\u305a\u306f\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u57fa\u672c\u3068\u306a\u308b\u3001\u30d1\u30fc\u30b5\u30fc\u306e\u95a2\u6570\u578b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u4eca\u56de\u3082\u3084\u3084\u5929\u4e0b\u308a\u7684\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u5b9a\u7fa9\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```swift\n\nstruct Combinator<Token, Result> {\n    typealias Parser = List<Token> -> List<(Result, List<Token>)>\n}\n\n```\n\nstruct\u306b\u5305\u3093\u3067\u3044\u308b\u306e\u306f\u8a00\u8a9e\u4ed5\u69d8\b\u4e0a\u3001\n\n```swift\n\n// \u3053\u308c\u306f\u3067\u304d\u306a\u3044\ntypealias Parser<Result, Token> = List<Token> -> List<(Result, List<Token>)>\n\n```\n\n\u3068\u3044\u3046\u3088\u3046\u306btypealias\u306b\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3092\u9069\u7528\u3067\u304d\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\u306a\u306e\u3067\u5927\u304d\u306a\u610f\u5473\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u3055\u3066\u3001\u307e\u305a\u5f15\u6570\u304b\u3089\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```swift\n\nList<Token>\n\n```\n\n\u3092\u5f15\u6570\u306b\u53d6\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u300c\u306a\u3093\u3089\u304b\u306e\u30ea\u30b9\u30c8\u300d\u0005\u3092\u8868\u3057\u307e\u3059\u306d\uff08\u5f53\u305f\u308a\u524d\u3067\u3059\u304c\uff09\u3002\n\u3053\u308c\u306f\u4f8b\u3048\u3070\u3001\u6587\u5b57\u5217\u304b\u3089\u30d1\u30fc\u30b9\u3059\u308b\u5834\u5408\u306f\u3001\u6587\u5b57\u306e\u30ea\u30b9\u30c8\u3001\u3064\u307e\u308a\u3001\n\n```swift\n\nList<Character>\n\n```\n\n\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u3068\u3053\u308d\u3067\u306a\u305c\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3067\u578b\u304c\u62bd\u8c61\u5316\u3055\u308c\u3066\u3044\u308b\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\n\u30d1\u30fc\u30b5\u30fc\u306a\u3093\u3060\u304b\u3089Character\u3067\u3044\u3044\u3058\u3083\u306a\u3044\u304b\u3001\u3068\u4e00\u77ac\u8003\u3048\u3066\u3057\u307e\u3044\u305f\u304f\u306a\u308a\u307e\u3059\u304c\u3001\n\u5fc5\u305a\u3057\u3082\u305d\u3046\u3067\u306f\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u3001\n\n```cl\n\n(* (+ 42 2) 10)\n\n```\n\n\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u30d1\u30fc\u30b9\u3059\u308b\u6642\u3001\u4e00\u6c17\u306b\u3053\u308c\u3092\u89e3\u91c8\u3059\u308b\u3088\u308a\u3082\u3001\u307e\u305a\u6700\u521d\u306e\u6bb5\u968e\u3067\u3001\n\n```\n\n(\n*\n(\n42 \n2\n) \n10\n)\n\n```\n\n\u306e\u3088\u3046\u306a\u610f\u5473\u306e\u3042\u308b\u6700\u5c0f\u5358\u4f4d\uff08\u30c8\u30fc\u30af\u30f3\uff09\u3068\u3057\u3066\u89e3\u91c8\u3057\u3001\u305d\u306e\u5f8c\u306b\u69cb\u9020\u7684\u306a\u89e3\u91c8\u3092\u3059\u308b\u3001\u3068\u3044\u3046\u3088\u3046\u306b\u30d5\u30a7\u30fc\u30ba\u3092\u5206\u96e2\u3059\u308b\u5834\u5408\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3068\u4e00\u5ea6\u306b\u3084\u3089\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u51e6\u7406\u304c\u6e1b\u308a\u3001\u3068\u3066\u3082\u4f5c\u308b\u306e\u304c\u697d\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u203b\u3053\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u5b57\u53e5\u89e3\u6790\u3068\u547c\u3073\u307e\u3059\u306d\n\n\u4ed6\u306b\u3082\u3001Character\u306b\u9650\u5b9a\u3057\u306a\u3044\u3053\u3068\u3067\u3001\u6587\u5b57\u5217\u4ee5\u5916\u306e\u4f55\u304b\u9023\u7d9a\u3059\u308b\u30c7\u30fc\u30bf\u306a\u3089\u306a\u3093\u3067\u3082\u6271\u3048\u308b\u3068\u3044\u3046\u610f\u5473\u3067\u3082\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306b\u3057\u3066\u304a\u3044\u3066\u640d\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u3067\u306f\u3001\u6b21\u306b\u623b\u308a\u5024\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```swift\n\nList<(Result, List<Token>)>\n\n```\n\n\u7d50\u69cb\u3044\u308d\u3044\u308d\u8a70\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\u4e00\u65e6\u5916\u5074\u306e\u30ea\u30b9\u30c8\u306f\u5fd8\u308c\u3066\u3001\u5185\u5074\u306e\u30bf\u30d7\u30eb\u3092\u8003\u3048\u308b\u3068\u3057\u3066\u3001\n\u30bf\u30d7\u30eb\u306e\u5de6\u5074\u306f\u30d1\u30fc\u30b9\u7d50\u679c\u3067\u3059\u306d\u3001\u6570\u5b57\u304c\u5165\u3063\u3066\u3044\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u3057\u3001\u6587\u5b57\u5217\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u30bf\u30d7\u30eb\u306e\u53f3\u5074\u306f\u3069\u3046\u3067\u3057\u3087\u3046\uff1f\n\u3053\u308c\u306f\u4f55\u304b\u3068\u8a00\u3046\u3068\u3001\u30d1\u30fc\u30b5\u30fc\u304c\uff11\u56de\u3067\u89e3\u91c8\u4ed5\u5207\u308c\u306a\u304b\u3063\u305f\u4f59\u308a\u306e\u90e8\u5206\u306a\u306e\u3067\u3059\u3002\n\u6b8b\u308a\u306e\u5165\u529b\u304c\u3042\u308b\u7406\u7531\u306f\u3001\u6b8b\u308a\u306f\u5225\u306a\u30d1\u30fc\u30b5\u30fc\u306b\u98df\u308f\u305b\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u304b\u3089\u3067\u3059\u306d\u3002\n\n\u4f8b\u3048\u3070\u3001a\u3092\uff11\u6587\u5b57\u8aad\u307f\u53d6\u308b\u30d1\u30fc\u30b5\u30fc\u306b\u3001abcde\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u4e0e\u3048\u305f\u3068\u3057\u307e\u3059\u3002\n\u3059\u308b\u3068\u3001bcde\u3068\u3044\u3046\u306e\u306f\u4f59\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u306ebcde\u306e\u90e8\u5206\u304c\u30bf\u30d7\u30eb\u306e\u53f3\u5074\u306b\u306a\u308b\u306e\u3067\u3059\u3002\n\n\u3055\u3066\u3001\u5185\u5074\u306e\u30bf\u30d7\u30eb\u306f\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u3057\u304b\u3057\u306a\u305c\u5916\u5074\u306f\u30ea\u30b9\u30c8\u306a\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u3053\u308c\u306f\u3001\u3053\u3046\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\n\n\u300c\u30d1\u30fc\u30b5\u30fc\u306f\u3001\u53ef\u80fd\u306a\u7d44\u307f\u5408\u308f\u305b\u3092\u4e00\u65e6\u5168\u90e8\u5410\u304d\u51fa\u3057\u3066\u3001\u305d\u306e\u4e2d\u304b\u3089\u4e00\u756a\u826f\u3055\u305d\u3046\u306a\u3084\u3064\u3092\u9069\u5f53\u306b\u4f7f\u3048\u308b\u300d\n\n\u3068\u3044\u3046\u6027\u8cea\u3092\u6301\u305f\u305b\u308b\u305f\u3081\u306a\u306e\u3067\u3059\u3002\n\u3053\u308c\u306f\u4eca\u3059\u3050\u3053\u3053\u3067\u30d4\u30f3\u3068\u6765\u306a\u304f\u3066\u3082\u3001\u5b9f\u969b\u306b\u4f5c\u308a\u4e0a\u3052\u308b\u904e\u7a0b\u3067\u3001\u300c**\u3042\u3042\u3001\u78ba\u304b\u306b\u3053\u306e\u69cb\u9020\u4fbf\u5229\u3060**\u300d\u3068\u306a\u308b\u306f\u305a\u306a\u306e\u3067\u3001\u3042\u307e\u308a\u6df1\u304f\u8003\u3048\u306a\u304f\u3066\u3082\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u6700\u7d42\u7684\u306b\u306f\u8907\u6570\u306e\u7b54\u3048\u304c\u3042\u3063\u3066\u306f\u56f0\u308b\u306e\u3067\u3001\u901a\u5e38\u306f\u300c\u30ea\u30b9\u30c8\u306e\u6700\u521d\u306b\u51fa\u3066\u304d\u305f\u7d50\u679c\u3092\u30d1\u30fc\u30b5\u30fc\u306e\u7d50\u679c\u3068\u3059\u308b\u300d\u3068\u3044\u3046\u7d04\u675f\u4e8b\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u307e\u305a\u306f\u306a\u3093\u3068\u306a\u304f\u65b9\u91dd\u304c\u5206\u304b\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u3053\u3053\u307e\u3067\u306e\u307e\u3068\u3081\u3068\u3057\u3066\u3001\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306b\u3088\u3063\u3066\u4f5c\u3089\u308c\u305f\u30d1\u30fc\u30b5\u30fc\u306f\u3001\n\n**\u5165\u529b\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u305f\u30ea\u30b9\u30c8\u3092\u8aad\u3093\u3067\u3001\u53ef\u80fd\u306a\u3089\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5165\u529b\u3092\u6d88\u8cbb\u3057\u3066\u3001\u7d50\u679c\u3068\u3001\u6b8b\u308a\u306e\u5165\u529b\u3092\u5410\u304d\u51fa\u3059\u3002**\n\n\u3068\u3044\u3046\u3068\u3053\u308d\u3067\u578b\u306b\u3064\u3044\u3066\u306f\u3053\u3053\u307e\u3067\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n## \u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u6e96\u5099\uff08\u57fa\u672c\u30d1\u30fc\u30b5\u30fc\b\uff09\n\n\u6b21\u306b\uff13\u3064\u306e\u57fa\u672c\u69cb\u6210\u8981\u7d20\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001[\u7b2c\u4e09\u56de: \u30d1\u30fc\u30b5\u30fccreate\u30683\u3064\u306e\u57fa\u672c\u69cb\u6210\u8981\u7d20](http://karino2.livejournal.com/265451.html)\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u8003\u3048\u65b9\u3067\u3059\u3002\n\u3053\u308c\u306eswift\u7248\u3092\u8003\u3048\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u3001\u300c\u5165\u529b\u3092\u6d88\u8cbb\u305b\u305a\u3001\u7279\u5b9a\u306e\u5024\u3092\u7d50\u679c\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u30d1\u30fc\u30b5\u30fc\u300d\u3067\u3059\u3002\n\u3053\u308c\u306fResultCreate\u3068\u540d\u524d\u304c\u4ed8\u3051\u3089\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u77ed\u304fpure\u3068\u547c\u3076\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n```swift\n\nfunc pure<Token, Result>(result: Result) -> Combinator<Token, Result>.Parser {\n    return { input in one((result, input)) }\n}\n\n```\n\n\u6b21\u306b\u3001\u300c\u5165\u529b\u3092\u6d88\u8cbb\u305b\u305a\u3001\u5fc5\u305a\u5931\u6557\u3059\u308b\u30d1\u30fc\u30b5\u30fc\u300d\u3067\u3059\u3002\n\u30d1\u30fc\u30b9\u306b\u5931\u6557\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u306f\u3069\u3046\u3044\u3046\u3053\u3068\u304b\u3068\u3044\u3046\u3068\u3001\u30d1\u30fc\u30b5\u30fc\u306e\u623b\u308a\u5024\u304c\u7a7a\u30ea\u30b9\u30c8\u3067\u3042\u308b\u6642\u3001\u5931\u6557\u3057\u305f\u3068\u307f\u306a\u3057\u307e\u3059\u3002\n\n```swift\n\nfunc zero<Token, Result>() -> Combinator<Token, Result>.Parser {\n    return { input in none() }\n}\n\n```\n\n\u6700\u5f8c\u306b\u3001\u300c\uff11\u3064\u5165\u529b\u3092\u6d88\u8cbb\u3057\u3066\u3001\u305d\u308c\u3092\u7d50\u679c\u3068\u3057\u3066\u8fd4\u3059\u30d1\u30fc\u30b5\u30fc\u300d\u3067\u3059\u3002\n\u3082\u3061\u308d\u3093\u5165\u529b\u304c\u7a7a\u306a\u3089\u5931\u6557\u3057\u307e\u3059\u3002\n\n```swift\n\nfunc consumer<Token>() -> Combinator<Token, Token>.Parser {\n    return { input in\n        if let car = input.car {\n            return one((car, input.cdr))\n        }\n        return none()\n    }\n}\n\n```\n\n\u3069\u308c\u3082\u3068\u3066\u3082\u5c0f\u3055\u306a\u6a5f\u80fd\u3067\u5fc3\u914d\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u5fc3\u914d\u306f\u7121\u7528\u3067\u3059\u3002\n\u3053\u308c\u3089\u306f\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u771f\u306e\u529b\u3092\u767a\u63ee\u3067\u304d\u308b\u306e\u3067\u3059\u3002\u7d50\u675f\u306e\u529b\u3067\u3059\u3002\n\n## \u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u7d50\u5408\n\n\u7d50\u5408\u306f\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u5fc3\u81d3\u90e8\u3068\u8a00\u3063\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\u7d50\u5408\u51e6\u7406\u306fbind\u3068\u540d\u4ed8\u3051\u307e\u3059\u3002\n\u307e\u305a\u306f\u3044\u304d\u306a\u308a\u5b9f\u88c5\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```swift\n\nfunc bind<Token, T, U>(parser: Combinator<Token, T>.Parser, factory: T -> Combinator<Token, U>.Parser) -> Combinator<Token, U>.Parser {\n    return { input in\n        let lhsResult = parser(input)\n        return lhsResult.flatMap { (result, remainder) in\n            let rhsParser = factory(result)\n            return rhsParser(remainder)\n        }\n    }\n}\n\n```\n\n\u30fb\u30fb\u30fb\u3068\u3066\u3082\u8907\u96d1\u306a\u5f62\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf\u3082\uff13\u3064\u3042\u3063\u3066\u8907\u96d1\u3067\u3059\u3002\n\u3067\u3082\u4e00\u3064\u4e00\u3064\u7d10\u89e3\u3044\u3066\u884c\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305a\u306f\u7b2c\u4e00\u5f15\u6570\u306f\u3001\u30d1\u30fc\u30b5\u30fc\u3067\u3059\u306d\u3002\u3053\u306e\u30d1\u30fc\u30b5\u30fc\u306e\u30c7\u30fc\u30bf\u578b\u306bToken, T\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3067\u307e\u305a\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\uff12\u3064\u304c\u660e\u3089\u304b\u3067\u3059\u3002\n\n\u7b2c\u4e8c\u5f15\u6570\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\uff1f\nparser\u306e\u7d50\u679c\u306e\u578bT\u306e\u5024\u3092\u5f15\u6570\u306b\u3057\u3066\u3001\u30d1\u30fc\u30b5\u30fc\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\u306e\u3088\u3046\u3067\u3059\u3002\u3053\u306e\u30d1\u30fc\u30b5\u30fc\u306e\u7d50\u679c\u306e\u30c7\u30fc\u30bf\u578b\u304cU\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u6b21\u306bbind\u306e\u8fd4\u3059\u30d1\u30fc\u30b5\u30fc\u306e\u51e6\u7406\u3092\u8ffd\u3044\u304b\u3051\u3066\u307f\u307e\u3059\u3002\n\u3059\u308b\u3068\u6700\u521d\u306b\u7b2c\u4e00\u5f15\u6570\u306e\u30d1\u30fc\u30b5\u30fc\u306b\u5165\u529b\u3092\u98df\u308f\u305b\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u307e\u3067\u306f\u826f\u3044\u3067\u3059\u306d\u3002\n\u305d\u306e\u5f8c\u3001lhsResult\u3092flatMap\u3057\u3066\u307e\u3059\u3002\nflatMap\u306e\u4e2d\u3067\u306f\u3001factory\u3092\u4f7f\u3063\u3066\u30d1\u30fc\u30b5\u30fc\u3092\uff11\u3064\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u6b8b\u308a\u306e\u5165\u529b\u3092\u305d\u306e\u30d1\u30fc\u30b5\u30fc\u306b\u98df\u308f\u305b\u3066\u3044\u307e\u3059\u3002\n\nflatMap\u306b\u6163\u308c\u3066\u3044\u306a\u3044\u4eba\u3082\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001[\"\u7121\u9650\u30ea\u30b9\u30c8\u306e\u4f5c\u308a\u65b9\"](http://qiita.com/Ushio@github/items/1a639eb80fb21e7ea182)\u3067\u3082\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u53c2\u8003\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u30d1\u30fc\u30b5\u30fc\u304c\u5410\u304d\u51fa\u3059\u7d50\u679c\u304c\u4e00\u3064\u3067\u306f\u306a\u304f\u3001\u8907\u6570\u51fa\u529b\u3055\u308c\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001flatMap\u306e\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u4f8b\u3092\u3042\u3052\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u3059\u304c\u3001\u7b2c\u4e00\u5f15\u6570\u306e\u30d1\u30fc\u30b5\u30fc\u3092A\u3001\u7b2c\u4e8c\u5f15\u6570\u3067\u4f5c\u308b\u30d1\u30fc\u30b5\u30fc\u3092B\u3068\u3059\u308b\u3068\u3001\n\nA\u306e\u51fa\u529b\u7d50\u679c1 - B\u306e\u51fa\u529b\u7d50\u679c1\nA\u306e\u51fa\u529b\u7d50\u679c1 - B\u306e\u51fa\u529b\u7d50\u679c2\nA\u306e\u51fa\u529b\u7d50\u679c2 - B\u306e\u51fa\u529b\u7d50\u679c1\nA\u306e\u51fa\u529b\u7d50\u679c2 - B\u306e\u51fa\u529b\u7d50\u679c2\nA\u306e\u51fa\u529b\u7d50\u679c2 - B\u306e\u51fa\u529b\u7d50\u679c3\n\n\u306e\u3088\u3046\u306b\u5358\u4e00\u306eA\u306e\u51fa\u529b\u7d50\u679c\u304b\u3089\u3001B\u306f\u3055\u3089\u306b\u8907\u6570\u306e\u51fa\u529b\u7d50\u679c\u3092\u751f\u3080\u53ef\u80fd\u6027\u304c\u3042\u308a\u3001\u305d\u308c\u3089\u3092\u30de\u30fc\u30b8\u3057\u305f\u306e\u304c\u6700\u7d42\u51fa\u529b\u306b\u306a\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u306a\u305c\u7b2c\u4e8c\u5f15\u6570\u306f\u95a2\u6570\u306a\u306e\u304b\uff1f\u3068\u3044\u3046\u7591\u554f\u304c\u6b8b\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u3001\n\n**\u300cA\u306e\u51fa\u529b\u7d50\u679c\u306b\u3088\u3063\u3066\u67d4\u8edf\u306b\u6b21\u306e\uff11\u624b\u3092\u6e96\u5099\u3067\u304d\u308b\u300d**\n\n\u3068\u3044\u3046\u306e\u304c\u5927\u304d\u306a\u7406\u7531\u3067\u3059\u3002\n\u3053\u3061\u3089\u3082\u5b9f\u969b\u306b\u9032\u3081\u3066\u3044\u304f\u3068\u3001\u300c**\u3042\u3042\u3001\u78ba\u304b\u306b\u3053\u306e\u69cb\u9020\u4fbf\u5229\u3060**\u300d\u3068\u306a\u308b\u306e\u3067\u3001\n\u3068\u306a\u308b\u306f\u305a\u306a\u306e\u3067\u3001\u3042\u307e\u308a\u6df1\u304f\u8003\u3048\u306a\u304f\u3066\u3082\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u203b\u3061\u306a\u307f\u306blhs, rhs\u306f\u3001\u305d\u308c\u305e\u308cleft-hand side, right-hand side\u306e\u7565\u3067\u3059\u3002\u3053\u306e\u7565\u8a18\u6cd5\u3001\u7d50\u69cb\u4fbf\u5229\u3067\u500b\u4eba\u7684\u306b\u7d50\u69cb\u597d\u304d\u3067\u3059\u3002\n\n\u3053\u308c\u3067\u6211\u3005\u306f\u5f37\u529b\u306a\u7d50\u5408\u95a2\u6570\u3001bind\u3092\u624b\u306b\u5165\u308c\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\u6b21\u306f\u3053\u308c\u3092\u4f7f\u3063\u3066\u3001\u5b9f\u969b\u306b\u69d8\u3005\u306a\u30d1\u30fc\u30b5\u30fc\u3092\u7d44\u307f\u4e0a\u3052\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## \u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u7d44\u307f\u4e0a\u3052\u65b9\n\u624b\u59cb\u3081\u306b\u3042\u308b\u6587\u5b57\u5217\u304b\u3089\u3001\"a\"\u3068\u3044\u3046\u6587\u5b57\u3092\u8aad\u307f\u53d6\u308b\u30d1\u30fc\u30b5\u30fc\u3092\u7d44\u307f\u7acb\u3066\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3082\u3061\u308d\u3093bind\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```swift\nfunc parserA() -> Combinator<Character, Character>.Parser {\n    return bind(consumer()) { r in\n        if r == \"a\" {\n            return pure(\"a\")\n        }\n        return zero()\n    }\n}\nfor (r, s) in parserA()(Array(\"abcde\").toList) {\n    println(\"Success, found \\(r), remainder: \\(Array(s))\")\n}\n```\n\n\u4f55\u3092\u3084\u3063\u3066\u308b\u304b\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001parserA()\u3092\u4f7f\u3063\u305f\u6642\u306e\u6319\u52d5\u3092\u8ffd\u3044\u304b\u3051\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\uff11\u3001\u7d76\u5bfe\u306b\u6210\u529f\u3059\u308bconsumer()\u30d1\u30fc\u30b5\u30fc\u306b\u5165\u529b\u3092\u98df\u308f\u305b\u308b\n\uff12\u3001\u6210\u529f\u3057\u305f\u306e\u3067 r \u306b\u306f\u6700\u521d\u306e\u6587\u5b57\u304c\u5165\u3063\u3066\u3044\u308b\n\uff13\u3001r \u304c \"a\"\u306a\u3089\u3070\u3001\"a\"\u3068\u3044\u3046\u7d50\u679c\u3092\u8fd4\u3059\u3001\u5165\u529b\u3092\u6d88\u8cbb\u3057\u306a\u3044\u30d1\u30fc\u30b5\u30fc\u3092\u7528\u610f\u3057\u3066\u6295\u3052\u8fd4\u3059\u3002\u3082\u3057\u3082\"a\"\u3058\u3083\u306a\u3051\u308c\u3070\u3001\u7d76\u5bfe\u306b\u5931\u6557\u3059\u308b\u30d1\u30fc\u30b5\u30fc\u304c\u8fd4\u308b\u306e\u3067\u3001bind\u3067\u4f5c\u6210\u3057\u305f\u30d1\u30fc\u30b5\u30fc\u306f\u5931\u6557\u3059\u308b\u3002\n\uff14\u3001\u6295\u3052\u8fd4\u3057\u305f\u30d1\u30fc\u30b5\u30fc\u304c\u3001bind\u306e\u4e2d\u3067\u4f7f\u308f\u308c\u308b\u306e\u3067\u3001\"a\"\u3068\u3044\u3046\u7d50\u679c\u304c\u8fd4\u308b\n\n\u7d50\u69cb\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u3061\u3083\u3093\u3068a\u3092\u30d1\u30fc\u30b9\u3067\u304d\u3066\u3044\u307e\u3059\u3002\nconsumer, pure, zero\u3001\uff13\u3064\u3059\u3079\u3066\u304c\u898b\u4e8b\u306b\u5354\u8abf\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u898b\u3066\u3068\u308c\u307e\u3059\u3002\n\n\u539f\u7406\u304c\u5206\u304b\u3063\u305f\u3068\u3053\u308d\u3067\u3001\u3082\u3046\u3061\u3087\u3063\u3068\u62bd\u8c61\u5316\u3057\u3066\u4f7f\u3044\u3084\u3059\u304f\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u4e0a\u306e\u4f8b\u3067\u3001r \u304c \"a\" \u304b\u3069\u3046\u304b\u3001\u3068\u3044\u3046\u306e\u306f\u95a2\u6570\u306b\u62bc\u3057\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```swift\n\nfunc satisfy<Token>(condition: Token -> Bool) -> Combinator<Token, Token>.Parser {\n    return bind(consumer()) { result in\n        if condition(result) {\n            return pure(result)\n        }\n        return zero()\n    }\n}\n\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u6c4e\u7528\u7684\u3067\u3059\u306d\n\u305d\u3057\u3066\u3001\"a\"\u3068\u7b49\u3057\u3044\u3082\u306e\u3060\u3063\u305f\u3089\u6210\u529f\u3059\u308b\u3001\u3068\u3044\u3046\u306e\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u3061\u3087\u3063\u3068\u3060\u3051\u4e0a\u8a18\u306e\u95a2\u6570\u3092\u5177\u4f53\u5316\u3057\u305f\u3082\u306e\u3068\u3057\u3066\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\n\n```swift\n\nfunc token<Token: Equatable>(t: Token) -> Combinator<Token, Token>.Parser {\n    return satisfy { $0 == t }\n}\n\n```\n\n\u3053\u308c\u3092\u4f7f\u3063\u3066\"a\"\u3092\u30d1\u30fc\u30b9\u3059\u308b\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u518d\u73fe\u3067\u304d\u307e\u3059\u3002\n\n```swift\n\nfunc parserA() -> Combinator<Character, Character>.Parser {\n    return token(\"a\")\n}\n\n```\n\n\u3044\u3044\u611f\u3058\u306b\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3057\u305f\u3002\n\n\u3082\u3046\u3061\u3087\u3063\u3068\u3060\u3051\u7df4\u7fd2\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4eca\u5ea6\u306f\u3001\"a\" \u306e\u6b21\u306b \"b\" \u304c\u304f\u308b\u30d1\u30fc\u30b5\u30fc\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u305d\u3057\u3066\u7d50\u679c\u3068\u3057\u3066\u8fd4\u3059\u306e\u306f\u3001\u6587\u5b57\u3092\uff12\u3064\u304f\u3063\u3064\u3051\u305f\u6587\u5b57\u5217\u3068\u3057\u307e\u3059\u3002\n\n```swift\nfunc parserAB() -> Combinator<Character, String>.Parser {\n    return bind(token(\"a\")) { a in\n        bind(token(\"b\")) { b in\n            pure(String([a, b]))\n        }\n    }\n}\n\nfor (r, s) in parserAB()(Array(\"abcde\").toList) {\n    println(\"Success, found \\(r), remainder: \\(Array(s))\")\n}\n<\u51fa\u529b>\nSuccess, found ab, remainder: [c, d, e]\n\n```\n\n\u3053\u306e\u3088\u3046\u306b\u30ac\u30f3\u30ac\u30f3bind\u3067\u7d50\u5408\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u5143\u306f\u672c\u5f53\u306b\u5c0f\u3055\u306a\u90e8\u54c1\u3060\u3063\u305f\u30d1\u30fc\u30b5\u30fc\u3092\u3001\u8907\u96d1\u306a\u30d1\u30fc\u30b5\u30fc\u306b\u80b2\u3066\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3059\u3002\n\n## \u53ef\u80fd\u6027\u306e\u5206\u5c90\n\u4eca\u307e\u3067\u306e\u30d1\u30fc\u30b5\u30fc\u306f\u56fa\u5b9a\u306e\u30d1\u30bf\u30fc\u30f3\u3057\u304b\u30d1\u30fc\u30b9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u306f\u8907\u6570\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u306e\u307b\u3046\u304c\u591a\u3044\u3067\u3059\u3002\u305d\u3053\u3067\u3001\u30d1\u30fc\u30b5\u30fcA\u3068\u30d1\u30fc\u30b5\u30fcB\u304b\u3089\u3001\u3053\u308c\u306e\u3069\u3061\u3089\u3082\u4f7f\u3063\u3066\u30d1\u30fc\u30b9\u3092\u8a66\u307f\u308b\u30d1\u30fc\u30b5\u30fc\u3092\u7528\u610f\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u305d\u308c\u306f\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6f14\u7b97\u5b50\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u307e\u3059\u3002\n\n```swift\n\ninfix operator <|> { associativity left precedence 130 }\nfunc <|> <Token, Result>(lhs: Combinator<Token, Result>.Parser, rhs: Combinator<Token, Result>.Parser) -> Combinator<Token, Result>.Parser {\n    return { input in lhs(input) + rhs(input) }\n}\n\n```\n\n\u3053\u308c\u306f\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u306d\u3002\n\u4e21\u65b9\u306e\u51fa\u529b\u3092\u7d50\u5408\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u306f\u3001\u300c\u30d1\u30fc\u30b5\u30fc\u304c\u5931\u6557\u3059\u308b\u3068\u3001\u7a7a\u306e\u30ea\u30b9\u30c8\u3092\u51fa\u529b\u3059\u308b\u300d\u3068\u3044\u3046\u6027\u8cea\u304c\u3042\u308b\u305f\u3081\u3001\u3053\u306e\u3088\u3046\u306a\u5f62\u3092\u3068\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u203b\u3061\u306a\u307f\u306b\u3001\u4e21\u65b9\u6210\u529f\u3059\u308b\u30b1\u30fc\u30b9\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u5834\u5408\u306f\u5de6\u5074\u304c\u512a\u5148\u3055\u308c\u307e\u3059\u3002\u7e70\u308a\u8fd4\u3057\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u30d1\u30fc\u30b5\u30fc\u3092\u4f7f\u3046\u6642\u3001\u30ea\u30b9\u30c8\u306e\u6700\u521d\u306b\u51fa\u3066\u304d\u305f\u7d50\u679c\u304c\u6700\u7d42\u7d50\u679c\u3067\u3042\u308b\u3001\u3068\u3044\u3046\u7d04\u675f\u4e8b\u306b\u3059\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u3001\"a\" \u3082\u3057\u304f\u306f \"b\" \u3092\u8aad\u3081\u308b\u30d1\u30fc\u30b5\u30fc\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n```swift\n\nfunc parserAorB() -> Combinator<Character, Character>.Parser {\n    return token(\"a\") <|> token(\"b\")\n}\n\nfor (r, s) in parserAorB()(Array(\"abcde\").toList) {\n    println(\"Success, found \\(r), remainder: \\(Array(s))\")\n}\nfor (r, s) in parserAorB()(Array(\"bcde\").toList) {\n    println(\"Success, found \\(r), remainder: \\(Array(s))\")\n}\nfor (r, s) in parserAorB()(Array(\"cde\").toList) {\n    println(\"Success, found \\(r), remainder: \\(Array(s))\")\n}\n\n<\u51fa\u529b>\nSuccess, found a, remainder: [b, c, d, e]\nSuccess, found b, remainder: [c, d, e]\n\n```\n\n\"cde\"\u3067\u306f\u5931\u6557\u3057\u3066\u3044\u308b\u306e\u3067\u51fa\u529b\u306f\u7121\u3057\u3067\u3059\u3002\n\n## \u3061\u3087\u3063\u3068\u3057\u305f\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\n\n\"a\" \u3082\u3057\u304f\u306f \"b\"\u3068\u3044\u3046\u306e\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\nNSCharacterSet\u304b\u3089\u30d1\u30fc\u30b5\u30fc\u304c\u7d44\u307f\u7acb\u3066\u3089\u308c\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6e96\u5099\u3057\u3066\u304a\u304f\u3068\u3001\u3061\u3087\u3063\u3068\u3057\u305f\u6587\u5b57\u3092\u8aad\u3080\u3068\u304d\u306b\u4fbf\u5229\u306a\u306e\u3067\u3001\u8efd\u304f\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```swift\nextension NSCharacterSet {\n    var parser: Combinator<Character, Character>.Parser {\n        return satisfy { token in\n            let unichar = (String(token) as NSString).characterAtIndex(0)\n            return self.characterIsMember(unichar)\n        }\n    }\n}\n\n```\n\n## \u7121\u9650\u306b\u7d9a\u304f\u53ef\u80fd\u6027\n\u3055\u3066\u3001\u305a\u3044\u3076\u3093\u8272\u3005\u8aad\u307f\u53d6\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u304c\u3001\n\u3053\u3053\u307e\u3067\u306f\u56fa\u5b9a\u306e\u9577\u3055\u306e\u30d1\u30fc\u30b5\u30fc\u3057\u304b\u4f5c\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3055\u3089\u306b\u62e1\u5f35\u3057\u3066\u3001\"a\" \u304c\u4f55\u500b\u3082\u7d9a\u304f\u5834\u5408\u3082\u3046\u307e\u304f\u30d1\u30fc\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\"a\" \u304c\u3001\u3068\u3044\u3046\u3068\u6c4e\u7528\u6027\u304c\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u3042\u308b\u30d1\u30fc\u30b5\u30fc\u304c\u3001\u3068\u62bd\u8c61\u5316\u3059\u308b\u3068\u3001\u3053\u308c\u306f\u3068\u3066\u3082\u5f37\u529b\u306a\u62e1\u5f35\u306b\u306a\u308b\u3053\u3068\u304c\u5bb9\u6613\u306b\u60f3\u50cf\u3067\u304d\u307e\u3059\u3002\n\n\u3042\u3001\u3053\u308c\u6b63\u898f\u8868\u73fe\u306e * \u3068\u304b + \u306a\u3093\u3058\u3083\u306a\u3044\uff1f \u3068\u601d\u3046\u65b9\u3082\u3044\u3089\u3063\u3057\u3083\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u307e\u3055\u306b\u305d\u308c\u3067\u3059\u3002\n\n\u305d\u308c\u3067\u306f\u307e\u305a\u3001\u3042\u308b\u30d1\u30fc\u30b5\u30fc1\u56de\u304b\u3001\u305d\u308c\u4ee5\u4e0a\u7e70\u308a\u8fd4\u3059\u306e\u306b\u3082\u5bfe\u5fdc\u3067\u304d\u308b\u30d1\u30fc\u30b5\u30fc\u3092\u4f5c\u308b\u30b3\u30a2\u95a2\u6570\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```swift\n\nfunc oneOrMore<Token, Result>(parser: Combinator<Token, Result>.Parser, buffer: List<Result>) -> Combinator<Token, List<Result>>.Parser {\n    return bind(parser) { result in\n        let combine = buffer + one(result)\n        return oneOrMore(parser, combine) <|> pure(combine)\n    }\n}\n\n```\n\n\u610f\u5916\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\u5148\u306b\u30d1\u30fc\u30b5\u30fc\u306e\u7d50\u679c\u578b\u3092\u78ba\u8a8d\u3059\u308b\u3068\u3001List\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u7e70\u308a\u8fd4\u3057\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u3067\u3059\u306d\u3002\n\u6b21\u306b\u7740\u76ee\u3059\u3079\u304d\u306f<|>\u306e\u5de6\u5074\u3067\u3059\u3002\u518d\u5e30\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u3053\u304c\u30df\u30bd\u3067\u3001**parser\u304c\u6210\u529f\u3059\u308b\u9650\u308a\u3001\u6700\u5927\u9650\u518d\u5e30\u3057\u7d9a\u3051\u308b**\u308f\u3051\u3067\u3059\u3002\u518d\u5e30\u306e\u9014\u4e2d\u3067\u3001buffer\u306b\u30ac\u30f3\u30ac\u30f3\u9014\u4e2d\u7d4c\u904e\u3092\u3076\u3063\u3053\u3093\u3067\u3044\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u4e00\u756a\u5965\u307e\u3067\u518d\u5e30\u3057\u305f\u5024\u304c\u3001\u30d1\u30fc\u30b9\u7d50\u679c\u3068\u3057\u3066\u4e00\u756a\u6700\u521d\u306e\u8981\u7d20\u3068\u3057\u3066\u51fa\u73fe\u3059\u308b\u304b\u3089\u304f\u308a\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30b7\u30f3\u30d7\u30eb\u306b\u8a18\u8ff0\u3059\u308b\u306b\u306f\u3001buffer\u304c\u90aa\u9b54\u306a\u306e\u3068\u30010\u500b\u3082\u8a31\u5bb9\u3059\u308bzeroOrMore\u3092\u4e00\u7dd2\u306b\u7528\u610f\u3057\u3066\u3042\u3052\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n```swift\n\nfunc oneOrMore<Token, Result>(parser: Combinator<Token, Result>.Parser) -> Combinator<Token, List<Result>>.Parser {\n    return oneOrMore(parser, none())\n}\n\nfunc zeroOrMore<Token, Result>(parser: Combinator<Token, Result>.Parser) -> Combinator<Token, List<Result>>.Parser {\n    return oneOrMore(parser) <|> pure(none())\n}\n\n```\n\n\u3067\u306f\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```swift\nfunc parserAstream() -> Combinator<Character, String>.Parser {\n    return bind(oneOrMore(token(\"a\"))) { chars in\n        pure(String(chars))\n    }\n}\n\n\nfor (r, s) in parserAstream()(Array(\"aaaaab\").toList) {\n    println(\"Success, found \\(r), remainder: \\(Array(s))\")\n}\n\n<\u51fa\u529b>\nSuccess, found aaaaa, remainder: [b]\nSuccess, found aaaa, remainder: [a, b]\nSuccess, found aaa, remainder: [a, a, b]\nSuccess, found aa, remainder: [a, a, a, b]\nSuccess, found a, remainder: [a, a, a, a, b]\n\n```\n\n\u3055\u3066\u3001\u5148\u307b\u3069\u8aac\u660e\u3057\u305f\u901a\u308a\u3001\u521d\u3081\u3066\u8907\u6570\u306e\u7d50\u679c\u304c\u30d1\u30fc\u30b5\u30fc\u306e\u7d50\u679c\u3068\u3057\u3066\u51fa\u73fe\u3057\u307e\u3057\u305f\u3002\n\u3082\u3061\u308d\u3093\u6700\u521d\u306b\u51fa\u529b\u3057\u305f\u8981\u7d20\u304c\u6700\u7d42\u7d50\u679c\u3067\u3059\u3002\n\n## Lisp\u5b57\u53e5\u89e3\u6790\n\u3055\u3066\u3001\u305d\u308d\u305d\u308d\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf\u306e\u30b3\u30a2\u90e8\u5206\u304c\u3067\u304d\u3066\u304d\u307e\u3057\u305f\u3002\n\u3053\u306e\u8fba\u308a\u3067Lisp\u306e\u5b57\u53e5\u89e3\u6790\u30d5\u30a7\u30fc\u30ba\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u59cb\u3081\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305a\u306fLisp\u306e\u30c8\u30fc\u30af\u30f3\u306e\u5b9a\u7fa9\u3092\u8003\u3048\u307e\u3059\u3002\u3053\u308c\u306f\u5217\u6319\u3059\u308b\u3060\u3051\u306a\u306e\u3067\u7c21\u5358\u3067\u3059\u3002\n\n```swift\n\nenum LispToken {\n    case ParenthesesL\n    case ParenthesesR\n    case Symbol(String)\n    case Number(Double)\n}\n\n```\n\n\u3064\u3044\u3067\u306b\u6587\u5b57\u5217\u5316\u3067\u304d\u308b\u3068\u3001\u30c7\u30d0\u30c3\u30b0\u304c\u6357\u308b\u306e\u3067Printable\u306b\u6e96\u62e0\u3055\u305b\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n```swift\nextension LispToken: Printable {\n    var description: String {\n        switch self {\n        case ParenthesesL:\n            return \"(\"\n        case ParenthesesR:\n            return \")\"\n        case let .Symbol(symbol):\n            return symbol\n        case let .Number(number):\n            return \"\\(number)\"\n        }\n    }\n}\n```\n\n\u3067\u306f\u6b21\u306b\u5b57\u53e5\u89e3\u6790\u306e\u578b\u3092\u6c7a\u3081\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\uff11\u3064\u306e\u30c8\u30fc\u30af\u30f3\u3092\u30d1\u30fc\u30b9\u3067\u304d\u308b\u30d1\u30fc\u30b5\u30fc\u306e\u578b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```swift\ntypealias LispTokenizerSingle = Combinator<Character, LispToken>.Parser\n```\n\n\u4eca\u307e\u3067\u7a4d\u307f\u4e0a\u3052\u3066\u304d\u305f\u30c6\u30af\u30cb\u30c3\u30af\u3092\u4f7f\u3048\u3070\u3001\u3042\u3068\u306f\u6d41\u308c\u4f5c\u696d\u3067\u5b57\u53e5\u89e3\u6790\u30d1\u30fc\u30b5\u30fc\u304c\u51fa\u6765\u4e0a\u304c\u308a\u307e\u3059\u3002\n\u6570\u5024\u306b\u95a2\u3057\u3066\u306f\u3001\u7c21\u7565\u5316\u306e\u305f\u3081\u30010~9\u306e\u9023\u7d9a\u3057\u305f\u6587\u5b57\u5217\u3068\u3044\u3046\u3053\u3068\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u306e\u30d5\u30a7\u30fc\u30ba\u3067double\u578b\u306b\u307e\u3067\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n```swift\nlet tParenthesesL: LispTokenizerSingle = bind(token(\"(\")) { _ in\n    return pure(LispToken.ParenthesesL)\n}\nlet tParenthesesR: LispTokenizerSingle = bind(token(\")\")) { _ in\n    return pure(LispToken.ParenthesesR)\n}\nlet tSymbol: LispTokenizerSingle = bind(NSCharacterSet(charactersInString: \"+-*/\").parser) { r in\n    return pure(LispToken.Symbol(String(r)))\n}\n\nlet tNumber: LispTokenizerSingle = bind(oneOrMore(NSCharacterSet.decimalDigitCharacterSet().parser)) { r in\n    pure(LispToken.Number(NSString(string: String(r)).doubleValue))\n}\n```\n\n\u3055\u3066\u3001\u3053\u3053\u3067\u7d39\u4ecb\u3057\u305ftParenthesesL, tParenthesesR, tSymbol, tNumber\u306e\uff14\u3064\u306f\u3001\u305d\u308c\u305e\u308c\uff11\u3064\u3057\u304b\u8aad\u3081\u307e\u305b\u3093\u3002\u306a\u306e\u3067\u3001\u4e00\u6c17\u306b\u5168\u90e8\u8aad\u3081\u308b\u3088\u3046\u306b\u7d50\u5408\u3057\u307e\u3057\u3087\u3046\u3002\n\u578b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```swift\ntypealias LispTokenizer = Combinator<Character, List<LispToken>>.Parser\n```\n\n\u30d1\u30fc\u30b5\u30fc\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6e96\u5099\u3067\u304d\u307e\u3059\u3002\n\n```swift\nlet tLispTokenizer: LispTokenizer = oneOrMore(tParenthesesL <|> tParenthesesR <|> tSymbol <|> tNumber)\n```\n\n\u304a\u3063\u3068\u3001\u5927\u4e8b\u306a\u3053\u3068\u3092\u5fd8\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u7a7a\u767d\u3092\u7121\u8996\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3057\u304b\u3057\u3053\u306e\u3088\u3046\u306a\u69cb\u9020\u306e\u30d1\u30fc\u30b5\u30fc\u3067\u3042\u308c\u3070\u3001\u7c21\u5358\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\n```swift\n\nfunc ignoreLeadingWhitespace<T>(p: Combinator<Character, T>.Parser) -> Combinator<Character, T>.Parser {\n    return bind(zeroOrMore(NSCharacterSet.whitespaceCharacterSet().parser)) { result in\n        return p\n    }\n}\n\nlet tLispTokenizer: LispTokenizer = oneOrMore(ignoreLeadingWhitespace(tParenthesesL <|> tParenthesesR <|> tSymbol <|> tNumber))\n\n```\n\n\u3055\u3066\u3001\u3053\u308c\u3092\u4f7f\u3063\u3066\u3001Lisp\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b57\u53e5\u89e3\u6790\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```swift\nfor (r, s) in tLispTokenizer(Array(\"(* (- 4 2) 10)\").toList) {\n    println(\"Success, found \\(r.toArray), remainder: \\(Array(s))\")\n}\n\nSuccess, found [(, *, (, +, 4.0, 2.0, ), 10.0, )], remainder: []\n<\u4ee5\u4e0b\u7565>\n\n```\n\n\u898b\u4e8b\u306b\u610f\u5473\u3092\u6301\u3064\u6700\u5c0f\u5358\u4f4d\u306e\u5217\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u3082\u3046\u3042\u3068\u4e00\u606f\u3067\u3059\u3002\n\n## Lisp\u69cb\u6587\u89e3\u6790\n\n\u3064\u3044\u306b\u6700\u7d42\u30d5\u30a7\u30fc\u30ba\u3001\u69cb\u6587\u89e3\u6790\u306b\u3084\u3063\u3066\u307e\u3044\u308a\u307e\u3057\u305f\u3002\n\u6700\u5f8c\u306e\u30d1\u30fc\u30b5\u30fc\u306e\u578b\u3092\u51fa\u3057\u307e\u3057\u3087\u3046\u3002\u5165\u529b\u306f\u5148\u307b\u3069\u306eLispToken\u3001\n\u305d\u3057\u3066\u30d1\u30fc\u30b5\u30fc\u306e\u7d50\u679c\u306fSExpr\u3001\u305d\u3046\u3001S\u5f0f\u3067\u3059\u3002\n\n```swift\ntypealias LispExpressionParser = Combinator<LispToken, SExpr>.Parser\n```\n\n\u672c\u51e6\u7406\u306b\u5165\u308b\u524d\u306b\u3001LispToken\u306b\u3044\u304f\u3064\u304b\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\n\n```swift\nextension LispToken {\n    var isParenthesesL: Bool {\n        switch self {\n        case .ParenthesesL:\n            return true\n        default:\n            return false\n        }\n    }\n    var isParenthesesR: Bool {\n        switch self {\n        case ParenthesesR:\n            return true\n        default:\n            return false\n        }\n    }\n    var expr: SExpr? {\n        switch self {\n        case let .Symbol(symbol):\n            return SExpr(Atom(symbol))\n        case let .Number(number):\n            return SExpr(Atom(number))\n        default:\n            return nil\n        }\n    }\n}\n```\n\nexpr\u306f\u3001\u30c7\u30fc\u30bf\u304c\u76f4\u63a5S\u5f0f\u306b\u5909\u63db\u3067\u304d\u308b\u5834\u5408\u3001S\u5f0f\u3092\u8fd4\u3057\u3001\u3067\u304d\u306a\u3044\u5834\u5408\u306fnil\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u3055\u3066\u3001Lisp\u30c8\u30fc\u30af\u30f3\u304b\u3089S\u5f0f\u3092\u69cb\u6210\u3059\u308b\u305f\u3081\u306e\u30ad\u30e2\u306f\u62ec\u5f27\u3067\u3059\u3002\n\u62ec\u5f27\u3067\u56f2\u307e\u308c\u305f\u30c8\u30fc\u30af\u30f3\u3092\u629c\u304d\u51fa\u3059\u30d1\u30fc\u30b5\u30fc\u306f\u4ee5\u4e0b\u306e\u95a2\u6570\u3067\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n```swift\n\nfunc parentheses<T>(factory: () -> Combinator<LispToken, T>.Parser) -> Combinator<LispToken, T>.Parser {\n    return bind(satisfy { t in t.isParenthesesL } ) { L in\n        bind(factory()) { insideList in\n            bind(satisfy { t in t.isParenthesesR }) { R in\n                pure(insideList)\n            }\n        }\n    }\n}\n```\n\n\u306a\u3093\u3066\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3001\"(\" => \uff08\u7279\u5b9a\u306e\u30d1\u30fc\u30b5\u30fc\uff09=> \")\" \u3092\u30d1\u30fc\u30b9\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u305d\u3057\u3066\u3001\u3059\u3079\u3066\u306e\u5b8c\u6210\u7cfb\u306f\u3053\u308c\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\n\n```swift\n\nfunc pLispExpression() -> LispExpressionParser {\n    let pAtom: LispExpressionParser = bind(consumer()) { r in\n        if let expr = r.expr {\n            return pure(expr)\n        }\n        return zero()\n    }\n    return bind(parentheses { zeroOrMore(pLispExpression() <|> pAtom) }) { exprs in\n        pure(SExpr(exprs))\n    }\n}\n\n```\n\npAtom\u306f\u826f\u3044\u3067\u3059\u306d\u3001\u5358\u306b\u6570\u5024\u3084\u30b7\u30f3\u30dc\u30eb\u3092\u6a5f\u68b0\u7684\u306bS\u5f0f\u306b\u5909\u63db\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u30ad\u30e2\u306f\u3001return \b\u90e8\u3067\u3057\u3087\u3046\u3002\npLispExpression()\u304cparentheses\u306e\u5185\u5074\u306b\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u3046\u3001\u53ef\u80fd\u306a\u9650\u308a\u5965\u6df1\u304f\u307e\u3067()\u306e\u84cb\u3092\u958b\u3051\u3066\u3044\u304f\u306e\u3067\u3059\u3002\n\u305d\u3057\u3066\u4e00\u756a\u5965\u307e\u3067\u3046\u307e\u304f\u305f\u3069\u308a\u7740\u3051\u305f\u3082\u306e\u304c\u3001\u6211\u3005\u306e\u8ffd\u3044\u6c42\u3081\u308b\u7a76\u6975\u306eS\u5f0f\u306a\u306e\u3067\u3059\uff08\u5927\u8888\u88df\u3067\u3057\u305f\u304b\u306d\uff09\u3002\n\n\u65e9\u901f\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```swift\nfor (r, s) in tLispTokenizer(Array(\"(* (+ 3 18) 2)\").toList) {\n    let e = pLispExpression()\n    for (r, s) in e(r) {\n        println(\"Success \\(r), eval = \\(eval(r))\")\n    }\n}\n\n<\u51fa\u529b>\nSuccess (* (+ 3.0 18.0) 2.0), eval = 42.0\n\u4ee5\u4e0b\u7565\n\n```\n\n\u3068\u3066\u3082\u9577\u3044\u9053\u306e\u308a\u3067\u3057\u305f\u3002\u3064\u3044\u306b\u6211\u3005\u306e\u6975\u5c0fLisp\u30d1\u30fc\u30b5\u30fc\u306f\u5b8c\u6210\u3057\u307e\u3057\u305f\u3002\n\u8a08\u7b97\u306e\u7b54\u3048\u304c\u3001\u300c\u4eba\u751f\u3001\u5b87\u5b99\u3001\u3059\u3079\u3066\u306e\u7b54\u3048\u300d\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u306f\u304d\u3063\u3068\u5076\u7136\u3067\u3057\u3087\u3046\u3002\n\n\u30ac\u30c1\u306aLisper\u3055\u3093\u306b\u306f\u3053\u3093\u306a\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306a\u3093\u3066\u30b4\u30df\u3060\uff01\u306a\u3093\u3066\u8a00\u308f\u308c\u304b\u306d\u306a\u3044\u3067\u3059\u304c\u3001\n\u58ee\u5927\u306a\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3068\u3044\u3046\u3053\u3068\u3067\u305d\u306e\u5bdb\u5927\u306a\u5fc3\u3067\u8a31\u3057\u3066\u3044\u305f\u3060\u3051\u305f\u3089\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b\u4eca\u307e\u3067\u306e\u91cd\u8981\u306a\u90e8\u5206\u3092\u542b\u3093\u3060\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30a2\u30c3\u30d7\u3057\u3066\u7de0\u3081\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nhttps://github.com/Ushio/Lisp_with_ParserCombinator\n\n\u6700\u5f8c\u307e\u3067\u304a\u3064\u304d\u5408\u3044\u9802\u3044\u305f\u65b9\u3001\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\n\u203b\u3053\u3093\u306a\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u304c\u3001\u5b9f\u306fLisp\u306f\u305d\u3053\u307e\u3067\u8a73\u3057\u304f\u77e5\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002\u3002\n\u3082\u3057\u8868\u73fe\u3084\u69cb\u9020\u7b49\u3001\u9593\u9055\u3044\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u4fee\u6b63\u3044\u305f\u3057\u307e\u3059\u306e\u3067\u3054\u6307\u6458\u3092\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n", "tags": ["Swift", "lisp", "\u30d1\u30fc\u30b5\u30fc\u30b3\u30f3\u30d3\u30cd\u30fc\u30bf"]}