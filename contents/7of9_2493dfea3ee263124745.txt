{"context": " More than 1 year has passed since last update.C++ Builder XE4 + \u72ec\u81ea\u62e1\u5f35\n\nline monitor\u3067\u901a\u4fe1\u30c6\u30b9\u30c8\u3092\u3057\u3066\u3044\u308b\u4e2d\u3067\u3001\u30ed\u30ae\u30f3\u30b0\u306e\u6539\u884c\u51e6\u7406\u304c\u3044\u307e\u3044\u3061\u3002\n\u81ea\u5206\u304c\u7d4c\u9a13\u3057\u305f\u3082\u306e\u3067\u884c\u306e\u7d42\u7aef\u6587\u5b57\u5217\u306f\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u3042\u308b\u3002\n\nCR\nLF\nCR + LF\nLF + CR\n\n\u3053\u308c\u3089\u5168\u90e8\u306b\u304d\u3061\u3093\u3068\u5bfe\u5fdc\u3057\u305f\u3044\u3068\u601d\u3044\u3064\u3064\u3001\u305d\u306e\u5834\u5408\u306f\u30a8\u30b3\u30fc\u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u3063\u3066\u30c6\u30b9\u30c8\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3068\u601d\u3044\u3001\u4f5c\u3063\u305f\u3002\n\u306a\u304a\u3001\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u72ec\u81ea\u62e1\u5f35\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u901a\u5e38\u306eXE4\u3067\u306f\u52d5\u304b\u306a\u3044\u3001\u306f\u305a\u3002\n\nUnit1.cpp\nvoid __fastcall TForm1::B_connectClick(TObject *Sender)\n{\n    if (B_connect->Tag == 0) {\n        Com232->PortNo = NE_port->Integer;\n        Com232->BitRate = NE_baud->Integer;\n\n        try {\n            Com232->PortOpen();\n        } catch (...) {\n            ShowMessage(L\"Com open fail\");\n            return;\n        }\n        B_connect->Tag = 1;\n        B_connect->Caption = L\"Stop\";\n\n    } else {\n        B_connect->Tag = 0;\n        B_connect->Caption = L\"Start\";\n    }\n}\n//---------------------------------------------------------------------------\nvoid __fastcall TForm1::Com232Receive(TObject *Sender, int ReceiveSize)\n{\n    static char szBuf[100];\n    static int pos=0;\n\n    char code;\n\n    for (int i=0; i<ReceiveSize; i++) {\n        code = Com232->ReceiveChar();\n        switch (code) {\n        default:\n            if (isprint(code) || code == '\\t') {\n                szBuf[pos] = code;\n                pos++;\n            }\n            break;\n        case '\\r':\n        case '\\n':\n            if (pos > 0) {\n                szBuf[pos] = '\\0';\n\n                Memo1->Lines->Add(String(szBuf));\n                procCommand(String(szBuf));\n\n                pos = 0;\n            }\n            break;\n        }\n    }\n}\n//---------------------------------------------------------------------------\n\nvoid __fastcall TForm1::procCommand(String rcvd)\n{\n    String retStr = rcvd;\n\n    // 1. remove CR / LF / CR+LF\n    retStr = StringReplace(retStr, L\"\\r\\n\", L\"\", TReplaceFlags()<<rfReplaceAll);\n    retStr = StringReplace(retStr, L\"\\r\", L\"\", TReplaceFlags()<<rfReplaceAll);\n    retStr = StringReplace(retStr, L\"\\n\", L\"\", TReplaceFlags()<<rfReplaceAll);\n\n    // 2.add CR / LF based on check box\n    if (CHK_CR->Checked) {\n        retStr = retStr + L\"\\r\";\n    }\n    if (CHK_LF->Checked) {\n        retStr = retStr + L\"\\n\";\n    }\n\n    Sleep(NE_delay_msec->Integer);\n\n    Com232->TransString(retStr);\n}\n\n\n```\nC++ Builder XE4 + \u72ec\u81ea\u62e1\u5f35\n```\n\n\nline monitor\u3067\u901a\u4fe1\u30c6\u30b9\u30c8\u3092\u3057\u3066\u3044\u308b\u4e2d\u3067\u3001\u30ed\u30ae\u30f3\u30b0\u306e\u6539\u884c\u51e6\u7406\u304c\u3044\u307e\u3044\u3061\u3002\n\n\u81ea\u5206\u304c\u7d4c\u9a13\u3057\u305f\u3082\u306e\u3067\u884c\u306e\u7d42\u7aef\u6587\u5b57\u5217\u306f\u4ee5\u4e0b\u306e\u3082\u306e\u304c\u3042\u308b\u3002\n\n- CR\n- LF\n- CR + LF\n- LF + CR\n\n\u3053\u308c\u3089\u5168\u90e8\u306b\u304d\u3061\u3093\u3068\u5bfe\u5fdc\u3057\u305f\u3044\u3068\u601d\u3044\u3064\u3064\u3001\u305d\u306e\u5834\u5408\u306f\u30a8\u30b3\u30fc\u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u3063\u3066\u30c6\u30b9\u30c8\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3068\u601d\u3044\u3001\u4f5c\u3063\u305f\u3002\n\n\u306a\u304a\u3001\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u72ec\u81ea\u62e1\u5f35\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u901a\u5e38\u306eXE4\u3067\u306f\u52d5\u304b\u306a\u3044\u3001\u306f\u305a\u3002\n\n```Unit1.cpp\nvoid __fastcall TForm1::B_connectClick(TObject *Sender)\n{\n\tif (B_connect->Tag == 0) {\n\t\tCom232->PortNo = NE_port->Integer;\n\t\tCom232->BitRate = NE_baud->Integer;\n\n\t\ttry {\n\t\t\tCom232->PortOpen();\n\t\t} catch (...) {\n\t\t\tShowMessage(L\"Com open fail\");\n\t\t\treturn;\n\t\t}\n\t\tB_connect->Tag = 1;\n\t\tB_connect->Caption = L\"Stop\";\n\n\t} else {\n\t\tB_connect->Tag = 0;\n\t\tB_connect->Caption = L\"Start\";\n\t}\n}\n//---------------------------------------------------------------------------\nvoid __fastcall TForm1::Com232Receive(TObject *Sender, int ReceiveSize)\n{\n    static char szBuf[100];\n    static int pos=0;\n\n    char code;\n\n    for (int i=0; i<ReceiveSize; i++) {\n\t\tcode = Com232->ReceiveChar();\n        switch (code) {\n        default:\n            if (isprint(code) || code == '\\t') {\n                szBuf[pos] = code;\n                pos++;\n            }\n            break;\n        case '\\r':\n        case '\\n':\n\t\t\tif (pos > 0) {\n\t\t\t\tszBuf[pos] = '\\0';\n\n\t\t\t\tMemo1->Lines->Add(String(szBuf));\n\t\t\t\tprocCommand(String(szBuf));\n\t\t\t\t\n\t\t\t\tpos = 0;\n            }\n            break;\n        }\n\t}\n}\n//---------------------------------------------------------------------------\n\nvoid __fastcall TForm1::procCommand(String rcvd)\n{\n\tString retStr = rcvd;\n\n\t// 1. remove CR / LF / CR+LF\n\tretStr = StringReplace(retStr, L\"\\r\\n\", L\"\", TReplaceFlags()<<rfReplaceAll);\n\tretStr = StringReplace(retStr, L\"\\r\", L\"\", TReplaceFlags()<<rfReplaceAll);\n\tretStr = StringReplace(retStr, L\"\\n\", L\"\", TReplaceFlags()<<rfReplaceAll);\n\n\t// 2.add CR / LF based on check box\n\tif (CHK_CR->Checked) {\n\t\tretStr = retStr + L\"\\r\";\n\t}\n\tif (CHK_LF->Checked) {\n\t\tretStr = retStr + L\"\\n\";\n\t}\n\n\tSleep(NE_delay_msec->Integer);\n\n\tCom232->TransString(retStr);\n}\n```\n", "tags": ["myLineMonitor", "networkApp", "RS232C"]}