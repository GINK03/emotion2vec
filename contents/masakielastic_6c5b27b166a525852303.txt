{"tags": ["Silex", "PHP"], "context": " More than 1 year has passed since last update.\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u30d3\u30eb\u30c0\u30fc\u3067\u3064\u304f\u3089\u308c\u305f\u5c0f\u898f\u6a21\u306a\u30b5\u30a4\u30c8\u3092\u30ea\u30cb\u30e5\u30fc\u30a2\u30eb\u3057\u3066 SPA (Single Page Application) \u3092\u3064\u304f\u308b\u969b\u306b\u691c\u8a0e\u3057\u305f\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\u5bfe\u8c61\u8aad\u8005\n\u5c0f\u898f\u6a21\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u63d0\u4f9b\u3068\u66f4\u65b0\u3001\u30e6\u30fc\u30b6\u30fc\u7ba1\u7406\u6a5f\u80fd\u3092\u3082\u3064\u30b5\u30a4\u30c8\u3092\u984c\u6750\u306b Silex \u306e\u6a5f\u80fd\u3092\u3069\u306e\u3088\u3046\u306b\u4f7f\u3046\u306e\u304b\u3092\u5b66\u3076\u3053\u3068\u3092\u4e3b\u8ef8\u3068\u3057\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066 SPA \u306b\u7279\u5fb4\u7684\u306a\u8a71\u3057\u306f\u3042\u307e\u308a\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u9078\u629e\u80a2\n\nPHP\nSilex \u3068\u540c\u3058\u30de\u30a4\u30af\u30ed\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u6bd4\u8f03\u691c\u8a0e\u3057\u305f\u3044\u306e\u3067\u3042\u308c\u3070\u3001\n\u300cPHP\u3001Node.js\u3001Go \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306b\u95a2\u3059\u308b\u8abf\u67fb\u300d\u306e\u8a18\u4e8b \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\u901f\u5ea6\u3092\u5927\u5e45\u306b\u6539\u5584\u3067\u304d\u308b\u3068\u3044\u3046\u70b9\u3067\u3001\u8457\u8005\u306f Phalcon Micro \u306b\u8208\u5473\u3092\u3082\u3063\u3066\u3044\u307e\u3059\u3002\nWeb API \u306b\u7279\u5316\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308c\u3070\u3001BEAR.Sunday \u3084 API Platform \u3092\u6319\u3052\u307e\u3059\u3002BEAR.Sunday \u958b\u767a\u8005\u306e koriym \u3055\u3093\u306f\u65e5\u672c\u306e PHP \u30ab\u30f3\u30d5\u30a1\u30ec\u30f3\u30b9\u3084 Symfony \u52c9\u5f37\u4f1a\u306a\u3069\u3067\u7cbe\u529b\u7684\u306b\u8b1b\u6f14\u306a\u3055\u3063\u3066\u3044\u307e\u3059\u3002API Platform \u306e\u958b\u767a\u8005\u306e Dunglas \u3055\u3093\u306f Symfony \u306e\u30b3\u30a2\u30c1\u30fc\u30e0\u306e\u30e1\u30f3\u30d0\u30fc\u3067\u3059(2015\u5e74\u6642\u70b9)\u3002\n\nJavaScript\n\u300c\u9759\u7684\u306a\u30b5\u30a4\u30c8\u306b JavaScript \u306e\u30eb\u30fc\u30bf\u30fc\u3092\u5c0e\u5165\u3059\u308b\u300d\u3084\u300cES6\u3001React\u3001Cycle.js\u3001RxJS \u306b\u95a2\u3059\u308b\u8abf\u67fb\u300d\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nHTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30c6\u30b9\u30c8\u30c4\u30fc\u30eb\n\u7b46\u8005\u306f\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u3084\u308a\u3068\u308a\u306e\u691c\u8a3c\u306b httpie \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002HTTP/2 \u5bfe\u5fdc\u306e\u30d7\u30e9\u30b0\u30a4\u30f3 (httpie-http2) \u3082\u3042\u308a\u307e\u3059\u3002\nhttp -f --session=test POST example.org foo=bar baz=qux\n\nWeb API \u306e\u81ea\u52d5\u30c6\u30b9\u30c8\u30c4\u30fc\u30eb\u3068\u3057\u3066 Postman \u304a\u3088\u3073 Newman \u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002\n\n\u30b5\u30fc\u30d0\u30fc\u69cb\u7bc9\n\nDocker Compose \u306b\u3088\u308b\u30b5\u30fc\u30d0\u30fc\u69cb\u7bc9\n\u300cDocker Compose \u3067 PHP 7.0 \u306e\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u300d\u306e\u8a18\u4e8b\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nApache HTTP\u3001nginx \u306e\u8a2d\u5b9a\n\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u7ba1\u7406\u306b Redis \u3092\u4f7f\u3046\nNativeSessionStorage \u3092\u4f7f\u308f\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n$app['session.storage.handler'] = null;\n\nphp.ini \u306e\u8a2d\u5b9a\u304c\u3042\u308c\u3070 Silex \u306e\u5074\u3067\u306f\u7279\u306b\u8a2d\u5b9a\u306f\u4e0d\u8981\u3067\u3059\u3002\nsession.save_handler = redis\nsession.save_path = tcp://127.0.0.1:6379\n\nRedis \u306e\u904b\u7528\u306b\u95a2\u3057\u3066\u3001\u300cRedis \u672c\u756a\u969c\u5bb3\u304b\u3089\u5b66\u3093\u3060\u30b3\u30fc\u30c9\u30ec\u30d3\u30e5\u30fc\u306e\u52d8\u6240\u300d\u306e\u8a18\u4e8b\u304c\u8aad\u307f\u5fdc\u3048\u3042\u308a\u307e\u3059\u3002\n\nPimple\u30fbTwig \u306e PHP \u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u5c0e\u5165\nPimple\u30fbTwig \u306e PHP \u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u306f\u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u3000\u6700\u65b0\u306e Pimple \u3092\u4f7f\u3046\u305f\u3081\u306b\u306f Silex 2\u7cfb\u306b\u79fb\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u69cb\u6210\n\n\u30b9\u30b1\u30eb\u30c8\u30f3\n\u516c\u5f0f\u306e Silex-Skeleton \u304c\u3042\u308a\u307e\u3059\u3002\n\n\u5171\u6709\u30b5\u30fc\u30d3\u30b9\u3068\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\n\u8907\u6570\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3067\u5171\u6709\u3059\u308b\u6a5f\u80fd\u306f\u5171\u6709\u30b5\u30fc\u30d3\u30b9\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u304b\u691c\u8a0e\u3057\u307e\u3059\u3002\u5c0f\u898f\u6a21\u306e\u30b3\u30fc\u30c9\u3067\u3042\u308c\u3070\u3001PHP 7.0 \u3067\u5c0e\u5165\u3055\u308c\u305f\u7121\u540d\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u540d\u524d\u7a7a\u9593\u306e\u6c5a\u67d3\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nuse Silex\\Application;\nuse Symfony\\Component\\HttpFoundation\\Request;\n\n$app = new Application();\n$app['util'] = $app->share(function() {\n    return new class {\n        public function base64urlEncode($data)\n        {\n            return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');\n        }\n\n        public function randomToken($length = 32)\n        {\n            if (function_exists('random_bytes')) {\n                $bytes = random_bytes($length);\n            } else {\n                $bytes = openssl_random_pseudo_bytes($length);\n            }\n\n            return $this->base64urlEncode($bytes);\n        }\n    };\n});\n$app->get('/', function(Application $app) {\n    return $app['util']->randomToken();\n});\n\n$app->run();\n\n\u4e00\u5b9a\u898f\u6a21\u3092\u8d85\u3048\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3068\u3057\u3066\u958b\u767a\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3057\u307e\u3057\u3087\u3046\u3002\nuse Silex\\Application;\nuse Silex\\ServiceProviderInterface;\nuse Symfony\\Component\\HttpFoundation\\Request;\n\nclass UtilServiceProvider implements ServiceProviderInterface\n{\n    public function register(Application $app)\n    {\n        $app['util'] = $app->share(function() {\n            return new Util;\n        });\n    }\n\n    public function boot(Application $app)\n    {\n    }\n}\n\nclass Util\n{\n    public function base64urlEncode($data)\n    {\n        return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');\n    }\n\n    public function randomToken($length = 32)\n    {\n        if (function_exists('random_bytes')) {\n            $bytes = random_bytes($length);\n        } else {\n            $bytes = openssl_random_pseudo_bytes($length);\n        }\n\n        return $this->base64urlEncode($bytes);\n    }   \n}\n\n$app = new Application();\n$app->register(new UtilServiceProvider);\n$app->get('/', function(Application $app) {\n    return $app['util']->randomToken();\n});\n\n$app->run();\n\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\nWeb API \u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3092\u3064\u304f\u308c\u3070\u3001\u8907\u6570\u306e\u30a2\u30d7\u30ea\u3067\u5171\u6709\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nuse Silex\\Application;\nuse Silex\\ControllerProviderInterface;\nuse Symfony\\Component\\HttpFoundation\\Request;\n\nclass HelloControllerProvider implements ControllerProviderInterface\n{\n    public function connect(Application $app)\n    {\n        $controllers = $app['controllers_factory'];\n\n        $controllers->before(function(Request $request) {\n            var_dump('before \u30df\u30c9\u30eb\u30a6\u30a7\u30a2');\n        });\n\n        $controllers->get('/{name}', function (Application $app, Request $request, $name) {\n            return 'Hello '.$name;\n        });\n\n        return $controllers;\n    }\n}\n\n$app = new Application();\n$app->mount('/hello', new HelloControllerProvider());\n$app['debug'] = true;\n\n$app->run();\n\n\u30b7\u30f3\u30d7\u30eb\u306a\u30da\u30fc\u30b8\u60c5\u5831\u306b\u95a2\u3059\u308b Web API \u306e\u4f8b\u306f Github \u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u30b5\u30fc\u30d3\u30b9\u5316\nServiceControllerServiceProvider \u3092\u53c2\u7167\u3002\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u30b9\u30ea\u30e0\u306b\u4fdd\u3064\u3053\u3068\u3067\u3001\u8907\u6570\u306e\u30a2\u30d7\u30ea\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u3042\u3044\u3060\u3067\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5171\u6709\u3057\u305f\u308a\u3001\u30c6\u30b9\u30c8\u3057\u3084\u3059\u304f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nHttpKernelInterface \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\nSilex \u3084 Symfony SE \u3067\u958b\u767a\u3055\u308c\u305f\u8907\u6570\u306e\u30a2\u30d7\u30ea\u3067\u6a5f\u80fd\u306e\u5171\u6709\u5316\u3092\u56f3\u308b\u3068\u304d\u3001StackPHP \u306e\u30b5\u30a4\u30c8\u3067\u793a\u3055\u308c\u3066\u3044\u308b\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u6210\u679c\u7269\u3092\u5229\u7528\u3059\u308b\u304b\u3001\u691c\u8a0e\u3059\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\n\nSSL/TLS \u3092\u5f37\u5236\u3059\u308b\nIE11 \u3068\u305d\u308c\u4ee5\u964d\u304c\u5bfe\u8c61\u3067\u3042\u308c\u3070\u3001Strict-Transport-Security \u30d8\u30c3\u30c0\u30fc\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Symfony/Silex \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nCSRF \u5bfe\u7b56\u306e\u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u3046\nCSRF \u30c8\u30fc\u30af\u30f3\u306f HTTP \u30d8\u30c3\u30c0\u30fc\u3082\u3057\u304f\u306f HTTP \u30dc\u30c7\u30a3\u306e\u3069\u3061\u3089\u304b\u306b\u6dfb\u4ed8\u3059\u308b\u304b\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u53cc\u65b9\u306e\u5229\u70b9\u30fb\u6b20\u70b9\u306fWhy is it common to put CSRF prevention tokens in cookies? \u306e\u8cea\u554f\u3078\u306e\u56de\u7b54\u3067\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002\nSymfony \u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3067\u306f\u30d5\u30a9\u30fc\u30e0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u901a\u3058\u3066 HTTP \u30dc\u30c7\u30a3\u306b\u6dfb\u4ed8\u3055\u308c\u304d\u307e\u3057\u305f\u304c\u3001SPA \u306e\u5834\u5408\u3001PHP \u3067\u30d5\u30a9\u30fc\u30e0\u3092\u751f\u6210\u3057\u306a\u3044\u5834\u5408\u3084\u3001\u8907\u6570\u306e\u30d5\u30a9\u30fc\u30e0\u3084 JavaScript \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u306e\u9023\u643a\u3092\u8003\u616e\u3059\u308b\u3068\u3001HTTP \u30d8\u30c3\u30c0\u30fc\u306e\u307b\u3046\u304c\u4fbf\u5229\u3067\u3059\u3002\nSilex 2.0 \u3067\u306f CSRF Service Provider \u304c\u5c0e\u5165\u3055\u308c\u3001$app['csrf.token_manager']->isTokenValid(new CsrfToken('token_id', 'TOKEN')) \u304c\u4f7f\u3048\u307e\u3059\u3002\nRuby on Rails \u3084 AngularJS \u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3067\u306f X-XSRF-TOKEN \u30d8\u30c3\u30c0\u30fc\u3084 X-CSRF-TOKEN \u30d8\u30c3\u30c0\u30fc\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u9001\u4fe1\u3055\u308c\u3066\u304d\u305f CSRF \u30c8\u30fc\u30af\u30f3\u306f before \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067\u691c\u8a3c\u3057\u307e\u3059\u3002\n$app->before(function (Request $request, Application $app) {\n    $app['session']->start();\n\n    if ($request->isMethod('POST') || $request->isMethod('DELETE')) {\n        $csrf_token = $request->headers->get('x-xsrf-token');\n        $session_token = $app['session']->get('csrf_token');\n\n        $valid = $csrf_token !== null &&\n                 $session_token !== null &&\n                 hash_equals($csrf_token, $session_token);\n\n        if (!$valid) {\n            return $app->json([\n                'msg' => 'fail',\n                'description' => 'CSRF \u30c8\u30fc\u30af\u30f3\u304c\u9001\u4fe1\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u3057\u304f\u306f\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002'\n            ]);\n        }\n    }\n});\n\nCSRF \u30c8\u30fc\u30af\u30f3\u3092\u81ea\u5206\u3067\u751f\u6210\u3059\u308b\u5834\u5408\u3001\u6a19\u6e96\u95a2\u6570\u306e random_bytes (PHP 7.0) \u3092\u4f7f\u3044\u307e\u3059\u3002PHP 5.x \u3067\u3042\u308c\u3070\u3001random_compat \u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5c0e\u5165\u3057\u307e\u3059\u3002\u9001\u4fe1\u3055\u308c\u3066\u304d\u305f CSRF \u30c8\u30fc\u30af\u30f3\u306e\u6bd4\u8f03\u306b\u306f == \u3084 === \u6f14\u7b97\u5b50\u3067\u306f\u306a\u304f\u3001hash_equals \u3092\u4f7f\u3044\u307e\u3059\u3002PHP 5.5 \u4ee5\u524d\u306e\u74b0\u5883\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001hash-compat \u3084 Symfony Polyfill \u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002\n\nJavaScript/JSON \u306e\u30a8\u30b9\u30b1\u30fc\u30d7\nPHP \u304b\u3089 JavaScript\u30fbJSON \u3092\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u51e6\u7406\u306b\u306f json_encode \u3092\u4f7f\u3046\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n<?php\n$msg = '\u3053\u3093\u306b\u3061\u306f';\n$options = JSON_HEX_QUOT|JSON_HEX_AMP|JSON_HEX_APOS|JSON_HEX_TAG;\n?>\n<script>\nvar a = <?= json_encode( $msg, $options ) ?>;\nvar b = <?= json_encode( ['msg' => $msg], $options ) ?>;\n\nconsole.log(a);\nconsole.log(b['msg']);\n</script>\n\n\nWeb API\n\n\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u306e REST \u98a8 API\n\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u3088\u308b\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u306e URL \u306f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001stackoverflow \u306e\u56de\u7b54\u304c\u793a\u3059\u3088\u3046\u306b REST API \u306b\u4f3c\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nGET    /session/new \u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u3092\u3082\u3064\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\nPOST   /session \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u8a8d\u8a3c\u3059\u308b\nDELETE /session \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u7834\u58ca\u3057\u3066\u3001/ \u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\nGET  /users/new \u767b\u9332\u30d5\u30a9\u30fc\u30e0\u3092\u3082\u3064\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\nPOST /users \u5165\u529b\u3055\u308c\u305f\u60c5\u5831\u3092 /user/xxx \u3068\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8a18\u9332\u3059\u308b \nGET  /users/xxx // \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u30d3\u30e5\u30fc\u3067\u306e\u73fe\u5728\u306e\u30e6\u30fc\u30b6\u30fc\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\nPOST /users/xxx // \u65b0\u3057\u3044\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u66f4\u65b0\u3059\u308b\n\n\u5f8c\u8ff0\u3059\u308b SecurityServiceProvider \u3092\u4f7f\u3046\u5834\u5408\u3001Silex 1.3 \u306e\u6642\u70b9\u3067\u306f\u30ed\u30b0\u30a2\u30a6\u30c8\u306e HTTP \u30e1\u30bd\u30c3\u30c9\u306e\u5236\u7d04\u304c\u3042\u308b\u306e\u3067\u3001\u30b5\u30d6\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5546\u54c1\u306e\u5728\u5eab\u6570\u306e\u66f4\u65b0\u3092\u8003\u3048\u308b\n\u5546\u54c1\u306e\u5728\u5eab\u6570\u3092\u6271\u3046\u5834\u5408\u3001\u5168\u5728\u5eab\u6570\u306e\u66f4\u65b0\u3082\u3057\u304f\u306f\u76f8\u5bfe\u7684\u306a\u52a0\u7b97\u30fb\u6e1b\u7b97\u306e\u30b5\u30dd\u30fc\u30c8\u3092\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5168\u5728\u5eab\u6570\u306e\u66f4\u65b0\u306e API \u306e\u307f\u306e\u5834\u5408\u3001\u66f4\u65b0\u306e\u969b\u306b HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3042\u3089\u304b\u3058\u3081\u5168\u5728\u5eab\u6570\u3092\u53d6\u5f97\u3057\u305f\u4e0a\u3067\u8a08\u7b97\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\n\n\u30c8\u30c3\u30d7\u30da\u30fc\u30b8\u4ee5\u5916\u306e\u30da\u30fc\u30b8\u3067\u306e\u30a2\u30d7\u30ea\u306e\u521d\u671f\u5316\n\u4e00\u756a\u6700\u521d\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30da\u30fc\u30b8\u304c\u30c8\u30c3\u30d7\u30da\u30fc\u30b8\u4ee5\u5916\u3067\u3042\u308b\u5834\u5408\u3001HTTP \u30b5\u30fc\u30d0\u30fc\u5074\u306e\u5bfe\u5fdc\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u5171\u6709\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u30b5\u30fc\u30d3\u30b9\u306a\u3069 HTTP \u30b5\u30fc\u30d0\u30fc\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3067\u304d\u306a\u3044\u5834\u5408\u3001Silex \u306e\u30b5\u30d6\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f7f\u3063\u3066\u5bfe\u5fdc\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nuse Silex\\Application;\nuse Silex\\Provider;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpKernel\\HttpKernelInterface;\n\n$app = new Application;\n$app->get('/{name}', function(Application $app, $name) {\n    $subRequest = Request::create(\"/#{$name}\", 'GET');\n\n    return $app->handle($subRequest, HttpKernelInterface::SUB_REQUEST);\n});\n\n\n\u8907\u6570\u306e HTTP \u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u5fdc\u3055\u305b\u308b\nmatch \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\n$app->match('/api/foo', function () {\n    // ...\n})\n->method('POST|PUT');\n\n\nJSON \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\n$app->json \u3092\u4f7f\u3044\u307e\u3059\u3002\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306f\u7b2c2\u5f15\u6570\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n$app->get('/foo', function () use ($app) {\n\n    $condition = true;\n\n    if (!$condition) {\n        return $app->json(['msg' => 'error'], 404);\n    }\n\n    return $app->json(['msg' => 'ok']);\n});\n\n\u4e3b\u8981\u306a\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u5b9a\u6570\u306f\u3042\u3089\u304b\u3058\u3081\u5b9a\u7fa9\u3055\u308c\u3066\u3042\u308a\u307e\u3059 (Response)\u3002\nreturn $app->json(['msg' => 'ok'], Response::HTTP_OK);\n\nJsonResponse \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u76f4\u63a5\u751f\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\n\nreturn new JsonResponse(['msg' => 'ok']);\n\n\nJSON \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6271\u3046\nRequest \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e getContent \u3092\u4f7f\u3044\u307e\u3059\u3002\nif (0 === strpos($request->headers->get('Content-Type'), 'application/json')) {\n    $data = json_decode($request->getContent(), true);\n    }\n\njson_decode \u306b\u306f  HashDos \u3078\u306e\u5bfe\u7b56\u304c\u307b\u3069\u3053\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u6570\u5341\u30ad\u30ed\u30d0\u30a4\u30c8\u898f\u6a21\u306e\u30c7\u30fc\u30bf\u304c\u6765\u305f\u5834\u5408\u306b\u3001Fatal Error \u306b\u3059\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046 (PHP\u306eJSON HashDos\u306b\u95a2\u3059\u308b\u6ce8\u610f\u559a\u8d77)\u3002\n\n\u9023\u60f3\u914d\u5217\u306e\u623b\u308a\u5024\u3092 JSON \u306b\u5909\u63db\u3059\u308b\nview \u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f7f\u3048\u3070\u3001\u623b\u308a\u5024\u3067\u6307\u5b9a\u3057\u305f\u9023\u60f3\u914d\u5217\u3092\u81ea\u52d5\u7684\u306b JSON \u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nuse Silex\\Application;\n\n$app = new Application();\n$app->get('/', function(Application $app) {\n    return ['msg' => 'Hello World'];\n});\n$app->view(function (array $controllerResult) use ($app) {\n    return $app->json($controllerResult);\n});\n\n$app->run();\n\n\nJSON \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30d5\u30a7\u30a4\u30af Web API \u3092\u3064\u304f\u308b\n\u3061\u3087\u3063\u3068\u3057\u305f\u30a2\u30a4\u30c7\u30a3\u30a2\u3092\u8a66\u3059\u306e\u306b\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u304b\u3089 Web API \u3092\u7528\u610f\u3067\u304d\u308c\u3070\u4fbf\u5229\u3067\u3059\u3002Node.js \u3067\u66f8\u304b\u308c\u305f JSON Server \u3068\u3044\u3046\u30c4\u30fc\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u8868\u793a\u3055\u305b\u308b\u3060\u3051\u306a\u3089\u3001Silex \u3067\u3061\u3087\u3063\u3068\u3057\u305f\u30b3\u30fc\u30c9\u3092\u66f8\u3051\u3070\u3059\u307f\u307e\u3059\u3002\nuse Silex\\Application;\n\n$app = new Application(); \n$app['debug'] = true;\n\n$app['api'] = json_decode(file_get_contents(__DIR__.'/db.json'));\n\nforeach ($app['api'] as $key => $value) {\n\n    $app->get('/'.$key, function(Application $app) use ($value) {\n        return $app->json($value); \n    }); \n\n}\n\n$app->run();\n\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e db.json \u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n{\n  \"pages\": [\n    {\n      \"id\": 1,\n      \"name\": \"index\",\n      \"title\": \"\u30db\u30fc\u30e0\",\n      \"body\": \"\u30db\u30fc\u30e0\u306e\u5185\u5bb9\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"about\",\n      \"title\": \"\u81ea\u5df1\u7d39\u4ecb\",\n      \"body\": \"\u81ea\u5df1\u7d39\u4ecb\u306e\u5185\u5bb9\"\n    }\n  ],\n  \"profile\": {\n    \"name\": \"Masaki\"\n  }\n}\n\n\n\u9759\u7684\u306a HTML \u3092\u751f\u6210\u3059\u308b\n\u751f\u6210\u3057\u305f\u3044\u30da\u30fc\u30b8\u306e URL \u306e\u30ea\u30b9\u30c8\u3092\u7528\u610f\u3057\u305f\u4e0a\u3067\u3001handle \u30e1\u30bd\u30c3\u30c9\u30671\u3064\u305a\u3064\u751f\u6210\u3057\u3066\u3086\u304d\u307e\u3059\u3002\nuse Silex\\Application;\nuse Symfony\\Component\\HttpFoundation\\Request;\n\n$app = new Application(); \n$app['debug'] = true;\n\n$app->get('/foo', function() {\n    return 'foo'; \n});\n\n$app->get('/', function() {\n    return 'Hello'; \n});\n\n$response = $app->handle(Request::create('/foo'));\n\n$app[\u2018routes\u2019] (RouteCollection) \u306f IteratorAggregate \u3092\u5b9f\u88c5\u3059\u308b\u306e\u3067\u3001foreach \u30eb\u30fc\u30d7\u304b\u3089\u3059\u3079\u3066\u306e\u30eb\u30fc\u30c8\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u500b\u5225\u306e\u8a18\u4e8b\u306e URL \u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n$ret = [];\n\nforeach ($app['routes'] as $elm) {\n    $ret[] = $elm->getPattern();\n}\n\n\n\nPSR-7 \u5bfe\u5fdc\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30fb\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6271\u3046\nPSR7BridgeServiceProvider \u306e\u30b3\u30fc\u30c9\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n\nDoctrineServiceProvider \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nDoctrine DBAL (Database Abstraction Layer) \u3092 Composer \u3067\u5c0e\u5165\u3057\u307e\u3059\u3002\ncomposer require \"doctrine/dbal:~2.5\"\n\n\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u30af\u30e9\u30b9\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n$app = new Silex\\Application();\n$app->register(new Silex\\Provider\\DoctrineServiceProvider());\n\nSQLite \u306e\u5834\u5408\u3001\u8a2d\u5b9a\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n$app['db.options'] = [\n    'driver' => 'pdo_sqlite',\n    'path'   => __DIR__.'/app.db'\n];\n\n\u30a4\u30f3\u30e1\u30e2\u30ea\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u3046\u306e\u3067\u3042\u308c\u3070\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n$app['db.options'] = [\n    'driver' => 'pdo_sqlite',\n    'memory' => true\n];\n\nMySQL \u306e\u5834\u5408\u3001\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n$app['db.options'] = [\n    'driver' => 'pdo_mysql',\n    'user' => 'myuser',\n    'password' => 'mypassword',\n    'charset' => 'utf8',\n    'dbname' => 'testdb'\n];\n\n\n\u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\nSQL \u3092\u76f4\u63a5\u4f7f\u3046\u4ee5\u5916\u306b Schema Manager \u3067\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u306f SQLite\u3001\u904b\u7528\u74b0\u5883\u3067\u306f MySQL \u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u3044\u308f\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002\n$tableName = 'Page';\n\n$sm = $app['db']->getSchemaManager();\n$schema = $sm->createSchema();\n\n$page = $schema->createTable($tableName);\n$page->addOption('charset', 'utf8mb4');\n$page->addOption('collate', 'utf8mb4_unicode_ci');\n$page->addOption('engine', 'InnoDB');\n\n$page->addColumn('id', 'integer', ['unsigned' => true, 'autoincrement' => true]);\n$page->setPrimaryKey(['id']);\n$page->addColumn('name', 'string', ['length' => 255]);\n$page->addColumn('title', 'string', ['length' => 255]);\n$page->addColumn('content', 'text');\n\n$sm->createTable($page);\n\nDBAL 2.5 \u3067\u306f\u4f55\u3082\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6587\u5b57\u30bb\u30c3\u30c8\u306f utf8\u3001\u6587\u5b57\u7167\u5408\u306f utf8_unicode_ci \u306b\u306a\u308a\u307e\u3059(MySqlPlatform.php)\u3002\u30b5\u30f3\u30d7\u30eb\u306e\u30b3\u30fc\u30c9\u306f\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9(MySQL) \u3092\u898b\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\u5916\u90e8\u30ad\u30fc\u3092\u4f7f\u3046\u30b3\u30fc\u30c9\u306e\u4f8b\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\n\u30c7\u30fc\u30bf\u306e\u767b\u9332\u306b\u306f insert \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n$app['db']->insert('Page', [\n    'name' => 'main',\n    'title' => '\u30bf\u30a4\u30c8\u30eb',\n    'content' => '\u30b3\u30f3\u30c6\u30f3\u30c4'\n]);\n\n\n\u554f\u3044\u5408\u308f\u305b\u306e\u30e1\u30bd\u30c3\u30c9\nPDO \u304b\u3089 Doctrine DBAL \u3078\u306e\u66f8\u304d\u63db\u3048 \u306e\u8a18\u4e8b\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\u8a8d\u8a3c\n\nSecurityServiceProvider\n\nSimple User Provider \u306b\u3088\u308b\u30e6\u30fc\u30b6\u30fc\u7ba1\u7406\n\u30e6\u30fc\u30b6\u30fc\u7ba1\u7406\u6a5f\u80fd\u3092\u4f7f\u3046\u4eba\u304c\u304b\u304e\u3089\u308c\u3066\u3044\u305f\u308a\u3001\u4f7f\u3046\u983b\u5ea6\u304c\u4f4e\u3044\u306a\u3069\u3001SPA \u5bfe\u5fdc\u306b\u3059\u308b\u5fc5\u8981\u304c\u306a\u3051\u308c\u3070\u3001Simple User Provider \u3092\u5c0e\u5165\u3059\u308b\u9078\u629e\u80a2\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3092\u3064\u304f\u308b\n\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u3046\u5834\u5408\u3001UserProviderInterface \u3092\u5b9f\u88c5\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3092\u3064\u304f\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30b3\u30fc\u30c9\u306e\u4f8b\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092 JSON \u306b\u3059\u308b\n\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u767b\u9332\u3057\u307e\u3059\u3002\nuse Silex\\Application;\nuse Silex\\Provider;\n\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;\nuse Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;\nuse Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationSuccessHandlerInterface;\nuse Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationFailureHandlerInterface;\nuse Symfony\\Component\\Security\\Http\\Logout\\LogoutSuccessHandlerInterface;\n\nclass AuthenticationHandler implements AuthenticationSuccessHandlerInterface, AuthenticationFailureHandlerInterface\n{\n        public function onAuthenticationSuccess(Request $request, TokenInterface $token)\n        {\n        return new JsonResponse(['login' => true]);\n        }\n\n    public function onAuthenticationFailure(Request $request, AuthenticationException $exception)\n        {\n        return new JsonResponse(['login' => false]);\n        }\n}\n\nclass LogutSuccessHandler implements LogoutSuccessHandlerInterface\n{\n    public function onLogoutSuccess(Request $request)\n    {\n        return new JsonResponse(['login' => false]);\n    }\n}\n\n$app = new Application();\n$app->register(new Provider\\SessionServiceProvider());\n$app->register(new Provider\\SecurityServiceProvider());\n\n$app['debug'] = true;\n$app['security.firewalls'] = [\n    'admin' => [\n        'anonymous' => true,\n        'form' => [\n            'check_path' => '/login_check'\n            ],\n        'logout' => ['logout_path' => '/logout', 'invalidate_session' => true],\n        'users' => [\n            'admin' => [\n              'ROLE_ADMIN',\n              // foo\n              '5FZ2Z8QIkA7UTZ4BYkoC+GsReLf569mSKDsfods6LYQ8t+a8EW9oaircfMpmaLbPBh4FOBiiFyLfuZmTSUwzZg=='\n            ]\n        ]\n    ]\n];\n\n$app['security.authentication.success_handler.admin'] = $app->share(function ($app) {\n    return new AuthenticationHandler();\n});\n$app['security.authentication.failure_handler.admin'] = $app->share(function ($app) {\n    return new AuthenticationHandler();\n});\n\n$app['security.authentication.logout_handler.admin'] = $app->share(function () use ($app) {\n    return new LogutSuccessHandler();\n});\n\n$app->before(function (Request $request) {\n    $request->getSession()->start();\n});\n\n$app->get('/', function(Application $app, Request $request) {\n    $user = $app['security.token_storage']->getToken()->getUser();\n\n    $name = $user === 'anon.' ? '\u30b2\u30b9\u30c8' : $user->getUserName();\n\n    return \"\u3053\u3093\u306b\u3061\u306f\u3001{$name} \u3055\u3093\u3002\";\n});\n$app->run();\n\n\n\u624b\u52d5\u3067\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u3059\u308b\nFacebook \u306e OAuth \u8a8d\u8a3c\u306a\u3069\u3067\u3001\u624b\u52d5\u3067\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001$app['security.token_storage'] \u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3044\u307e\u3059\u3002\nuse Silex\\Application;\nuse Silex\\Provider;\n\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken;\n\n$app = new Application();\n$app->register(new Provider\\SessionServiceProvider());\n$app->register(new Provider\\SecurityServiceProvider());\n\n$app['debug'] = true;\n$app['security.firewalls'] = [\n    'admin_area' => ['anonymous' => true]\n];\n\n$app->before(function (Request $request) {\n    $request->getSession()->start();\n});\n\n$app->get('/', function(Application $app, Request $request) {\n\n    if (!$app['security.authorization_checker']->isGranted('ROLE_ADMIN')) {\n        return '\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002';\n    }\n\n    $token = $app['security.token_storage']->getToken();\n    $name = $token->getUsername();\n\n    return \"\u3053\u3093\u306b\u3061\u306f\u3001{$name} \u3055\u3093\u3002\";\n});\n\n$app->get('/login', function(Application $app) {\n    $name = 'foo';\n\n    $token = new UsernamePasswordToken(\n        $name,\n        null,\n        'admin_area',\n        ['ROLE_ADMIN']\n    );\n\n    $app['security.token_storage']->setToken($token);\n\n    return '\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3057\u305f\u3002';\n});\n\n$app->get('/logout', function(Application $app) {\n    $app['security.token_storage']->setToken(null);\n\n    return '\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002';\n});\n\n$app->run();\n\n\n\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u3068\u540c\u6642\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\nuse Silex\\Application;\nuse Silex\\Provider;\n\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken;\n\nuse Doctrine\\DBAL\\Connection;\nuse Doctrine\\DBAL\\Schema\\Table;\n\n$app = new Application();\n$app->register(new Provider\\SessionServiceProvider());\n$app->register(new Provider\\SecurityServiceProvider());\n$app->register(new Provider\\DoctrineServiceProvider());\n\n$app['debug'] = true;\n$app['security.firewalls'] = [\n    'admin_area' => ['anonymous' => true]\n];\n$app['db.options'] = [\n    'driver'   => 'pdo_sqlite',\n    'path'     => __DIR__.'/app.db'\n];\n\n$sm = $app['db']->getSchemaManager();\n\nif (!$sm->tablesExist('users')) {\n    $users = new Table('users');\n    $users->addColumn('id', 'integer', ['unsigned' => true, 'autoincrement' => true]);\n    $users->setPrimaryKey(['id']);\n    $users->addColumn('username', 'string', ['length' => 32]);\n    $users->addColumn('email', 'string', ['length' => 255]);\n    $users->addColumn('telephone', 'string', ['notnull' => false, 'length' => 30]);\n    $users->addColumn('password', 'string', ['length' => 255]);\n    $users->addColumn('roles', 'string', ['default' => 'ROLE_USER', 'length' => 255]);\n\n    $sm->createTable($users);\n\n    $app['db']->insert('users', [\n      'username' => 'foo',\n      'password' => password_hash('bar', PASSWORD_DEFAULT),\n      'email' => 'foo@example.com',\n      'telephone' => '123456789',\n      'roles' => 'ROLE_ADMIN'\n    ]);\n}\n\n$app->before(function (Request $request) {\n    $request->getSession()->start();\n});\n\n$app->get('/', function(Application $app, Request $request) {\n\n    if (!$app['security.authorization_checker']->isGranted('ROLE_ADMIN')) {\n        return '\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002';\n    }\n\n    $token = $app['security.token_storage']->getToken();\n    $name = $token->getUsername();\n\n    return \"\u3053\u3093\u306b\u3061\u306f\u3001{$name} \u3055\u3093\u3002\";\n});\n\n$app->get('/register', function(Application $app, Request $request) {\n\n    $email ='bar@example.com';\n    $stmt = $app['db']->executeQuery('SELECT * FROM users WHERE email = ?', [$email]);\n\n    $token = new UsernamePasswordToken(\n        $email,\n        null,\n        'admin_area',\n        ['ROLE_ADMIN']\n    );\n\n    if ($stmt->fetch()) { \n        $app['security.token_storage']->setToken($token);\n\n        return '\u3059\u3067\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3059\u3002';\n    } \n\n    $password = random_token(15);\n    $hash = password_hash($password, PASSWORD_DEFAULT);\n\n    $count = $app['db']->executeUpdate('INSERT INTO users(username, email, password) VALUES(?, ?, ?)', [$email, $email, $hash]);\n\n    if ($count !== 1) {\n        return '\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002';\n    }\n\n    $app['security.token_storage']->setToken($token);\n\n    return '\u767b\u9332\u3057\u307e\u3057\u305f\u3002';\n});\n\n$app->get('/logout', function(Application $app) {\n    $app['security.token_storage']->setToken(null);\n\n    return '\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002';\n});\n\n$app->get('/users', function(Application $app) {\n    $users = $app['db']->fetchAll('SELECT * FROM users');\n\n    return $app->json($users);\n});\n$app->run();\n\n\nFacebook \u306e OAuth \u8a8d\u8a3c\n$app['security.token_storage'] \u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3046\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nuse Silex\\Application;\nuse Silex\\Provider;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken;\n\n$app = new Application();\n$app->register(new Provider\\SessionServiceProvider());\n$app->register(new Provider\\SecurityServiceProvider());\n\n$app['debug'] = true;\n$app['security.firewalls'] = [\n    'admin_area' => ['anonymous' => true]\n];\n\n$app['fb'] = $app->share(function() {\n    return new Facebook\\Facebook([\n        'app_id' => '{app-id}',\n        'app_secret' => '{app-secret}',\n        'default_graph_version' => 'v2.4',\n    ]);\n});\n\n\n$app->before(function(Request $request) {\n    $session = $request->getSession()->start();\n});\n\n$app->get('/login', function (Application $app) {\n    $helper = $app['fb']->getRedirectLoginHelper();\n    $permissions = ['email'];\n    $loginUrl = $helper->getLoginUrl('http://example.com/login-callback', $permissions);\n\n    return '<a href=\"' . $loginUrl . '\">Facebook \u3067\u30ed\u30b0\u30a4\u30f3</a>';\n});\n\n$app->get('/login-callback', function(Application $app) {\n\n    $helper = $app['fb']->getRedirectLoginHelper();\n\n    try {\n        $accessToken = $helper->getAccessToken();\n    } catch (Facebook\\Exceptions\\FacebookResponseException $e) {\n        return 'Graph \u304c\u30a8\u30e9\u30fc\u3092\u8fd4\u3057\u307e\u3057\u305f: ' . $e->getMessage();\n    } catch(Facebook\\Exceptions\\FacebookSDKException $e) {\n        return 'Facebook SDK \u304c\u30a8\u30e9\u30fc\u3092\u8fd4\u3057\u307e\u3057\u305f: ' . $e->getMessage();\n    }\n\n    $app['fb']->setDefaultAccessToken((string) $accessToken);\n\n    try {\n        $response = $app['fb']->get('/me?locale=ja_JP&fields=id,name,email');\n        $userNode = $response->getGraphUser();\n    } catch(Facebook\\Exceptions\\FacebookResponseException $e) {\n        return 'Graph \u304c\u30a8\u30e9\u30fc\u3092\u8fd4\u3057\u307e\u3057\u305f: ' . $e->getMessage();\n    } catch(Facebook\\Exceptions\\FacebookSDKException $e) {\n        return 'Facebook SDK \u304c\u30a8\u30e9\u30fc\u3092\u8fd4\u3057\u307e\u3057\u305f: ' . $e->getMessage();\n    }\n\n    $email = $userNode['email'];\n\n    $token = new UsernamePasswordToken(\n        $email,\n        null,\n        'admin_area',\n        ['ROLE_ADMIN']\n    );\n\n\n    $app['security.token_storage']->setToken($token);\n\n    return $app->redirect('/');\n});\n\n$app->get('/', function(Application $app, Request $request) {\n\n    if (!$app['security.authorization_checker']->isGranted('ROLE_ADMIN')) {\n        return '\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002';\n    }\n\n    $token = $app['security.token_storage']->getToken();\n    $name = $token->getUsername();\n\n    $script = \"<script type=\\\"text/javascript\\\">\n    // http://stackoverflow.com/q/7131909/531320\n\n    if (window.location.hash && window.location.hash == '#_=_') {\n      if (window.history && history.pushState) {\n        window.history.pushState('', document.title, window.location.pathname);\n      }\n    }\n    </script>\";\n\n    return \"\u3053\u3093\u306b\u3061\u306f\u3001{$name} \u3055\u3093\u3002\".$script;\n});\n\n$app->get('/logout', function(Application $app) {\n    $app['security.token_storage']->setToken(null);\n\n    return '\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002';\n});\n\n$app->run();\n\n\nSecurityServiceProvider \u3092\u4f7f\u308f\u306a\u3044\u8a8d\u8a3c\n\u30ed\u30fc\u30eb\u304c\u4e0d\u8981\u3067\u3042\u3063\u305f\u308a\u3001\u30b5\u30a4\u30c8\u3092\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3059\u308b\u4eba\u306e\u30b9\u30ad\u30eb\u3092\u8003\u616e\u3057\u305f\u308a\u3001Web API \u306e\u5b9f\u9a13\u3092\u3057\u305f\u3044\u5834\u5408\u3001SecurityServiceProvider \u3092\u4f7f\u308f\u305a\u306b\u8a8d\u8a3c\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3002PHP 5.5 \u3068\u305d\u308c\u4ee5\u964d\u3067\u3042\u308c\u3070 password_hash \u304a\u3088\u3073 password_verify \u3092\u4f7f\u3063\u3066\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u8a8d\u8a3c\u3067\u304d\u307e\u3059\u3002\n$hash = password_hash('mypass');\n\nif (!password_verify($password, $hash)) {\n    return $app->json(['msg' => 'fail', 400);\n}\n\n$app['session']->migrate(true);\n$app['session']->set('login', true);\n\nWeb API \u306e\u5b9f\u9a13\u4f8b\u3068\u3057\u3066\u305f\u3068\u3048\u3070\u3001\u6b21\u306e\u69cb\u6210\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nGET    /sessions \u30ed\u30b0\u30a4\u30f3\u306e\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\nPOST   /sessions \u30ed\u30b0\u30a4\u30f3\nDELETE /sessions \u30ed\u30b0\u30a2\u30a6\u30c8\n\n\nJWT (JSON Web Token) \u306b\u3088\u308b\u8a8d\u8a3c\nPHP \u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4ee3\u308f\u308a\u306b JWT (JSON Web Token) \u306b\u3088\u308b\u8a8d\u8a3c\u304c\u5c11\u3057\u305a\u3064\u6ce8\u76ee\u3092\u96c6\u3081\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\u308f\u304b\u308a\u3084\u3059\u3044\u89e3\u8aac\u306f [JSON Web Token \u306e\u52b9\u7528] \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nJWT \u306b\u3088\u308b\u8a8d\u8a3c\u306e\u30e1\u30ea\u30c3\u30c8\u306f\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u9001\u3089\u308c\u3066\u304d\u305f\u30c8\u30fc\u30af\u30f3\u3092\u691c\u8a3c\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u524d\u767a\u884c\u3057\u305f\u30c8\u30fc\u30af\u30f3\u3092\u30b5\u30fc\u30d0\u30fc\u306e\u30d5\u30a1\u30a4\u30eb\u3084 Redis \u306e\u3088\u3046\u306a KVS (Key Value Store) \u306b\u4fdd\u5b58\u3057\u306a\u304f\u3066\u3088\u3044\u3053\u3068\u3067\u3059\u3002\n\u8a00\u3044\u63db\u3048\u308b\u3068\u3001\u30b5\u30fc\u30d0\u30fc\u304c\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306b\u306a\u308b\u306e\u3067\u3001\u30b5\u30fc\u30d0\u30fc\u3092\u5897\u8a2d\u3057\u3084\u3059\u304f\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u30b5\u30fc\u30d0\u30fc\u304c\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306b\u306a\u308b\u3068\u3044\u3063\u3066\u3082\u3001Cookie (\u30bb\u30c3\u30b7\u30e7\u30f3) \u3092\u4f7f\u3046\u5834\u5408\u306f CSRF \u5bfe\u7b56\u304c\u5fc5\u8981\u3068\u306e\u3053\u3068\u3067\u3059 (stackoverflow \u306e\u56de\u7b54\u3088\u308a)\u3002\nSilex \u306e\u5b9f\u88c5\u4f8b\u306f security-jwt-service-provider \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nHTTP \u30d8\u30c3\u30c0\u30fc\u3092\u901a\u3058\u3066\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u30c8\u30fc\u30af\u30f3\u306f\u6b21\u306e\u3088\u3046\u306b\u691c\u8a3c\u3055\u308c\u307e\u3059\u3002\ntry {\n     $data = \\JWT::decode($token, $secretKey, $allowed_algs);\n} catch (\\UnexpectedValueException $e) {\n    throw new \\UnexpectedValueException($e->getMessage());\n} catch (\\DomainException $e) {\n    throw new \\UnexpectedValueException($e->getMessage());\n}\n\nif ($data->exp < time()) {\n    throw new \\UnexpectedValueException('token not allowed');\n}\n\n\n\u30c6\u30b9\u30c8\n\nPHPUnit \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\ncomposer require \u3092\u4f7f\u3044\u307e\u3059\u3002HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e BrowserKit \u3082\u4e00\u7dd2\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\ncomposer require --dev phpunit/phpunit symfony/browser-kit\n\n\u30b3\u30de\u30f3\u30c9\u30c4\u30fc\u30eb\u304c\u4f7f\u3048\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\nvendor/bin/phpunit --version\n\n\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\ncomposer global require phpunit/phpunit ~5.0\n\n\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u30b3\u30de\u30f3\u30c9\u30c4\u30fc\u30eb\u3092\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\u3001\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\ncomposer global remove phpunit/phpunit\n\nphpunit \u30b3\u30de\u30f3\u30c9\u306b\u30c6\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d1\u30b9\u3092\u4f1d\u3048\u308b\u305f\u3081\u306e phpunit.xml \u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n<phpunit>\n  <testsuites>\n    <testsuite name=\"Silex Test\">\n      <directory>tests</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n\n\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u306e composer test \u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\ncomposer.json\n\"scripts\" :{\n    \"test\": [\n        \"php vendor/bin/phpunit\"\n    ]\n}\n\n\n\nJSON \u30ec\u30b9\u30dd\u30f3\u30b9\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306b WebTestCase \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30c6\u30b9\u30c8\u306e HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f BrowserKit \u3092\u4f7f\u3044\u307e\u3059\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306b\u306f createApplication \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002HTTP \u30b9\u30c6\u30fc\u30bf\u30b9\u3068\u30d8\u30c3\u30c0\u30fc\u306e\u305f\u3081\u306e\u30d8\u30eb\u30d1\u30fc\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002HTTP \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c7\u30a3\u306f getContent \u30e1\u30bd\u30c3\u30c9\u3067\u53d6\u5f97\u3057\u3066\u3001json_decode \u3067\u914d\u5217\u3082\u3057\u304f\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\napp.php\nuse Silex\\Application;\nuse Symfony\\Component\\HttpFoundation\\Request;\n\n$app = new Silex\\Application();\n$app->get('/', function(Application $app, Request $request) {\n    return $app->json(['msg' => 'hello']);\n});\n\nreturn $app;\n\n\nuse Silex\\WebTestCase;\n\nclass MyControllerTest extends WebTestCase\n{\n    public function createApplication()\n    {\n        $app = require __DIR__ . '/../app.php';\n        $app['debug'] = true;\n\n        return $app;\n    }\n\n    // http://marcjuch.li/blog/2014/04/06/symfony2-rest-functional-testing-with-fixtures/\n    protected function assertJsonResponse($response, $statusCode = 200) {\n        $this->assertEquals(\n            $statusCode, $response->getStatusCode(),\n            $response->getContent()\n        );\n        $this->assertTrue(\n            $response->headers->contains('Content-Type', 'application/json'),\n            $response->headers\n        );\n    }\n\n    public function testIndex()\n    {\n        $client = $this->createClient();\n        $crawler = $client->request('GET', '/');\n        $response = $client->getResponse();\n        $data = json_decode($response->getContent(), true);\n\n        $this->assertJsonResponse($response);\n        $this->assertEquals('hello', $data['msg']);\n    }\n}\n\n\n\u30bb\u30c3\u30b7\u30e7\u30f3\nsession.test \u306b true \u3092\u6307\u5b9a\u3059\u308c\u3070\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u306b MockFileSessionStorage \u304c\u4f7f\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n$app['session.test'] = true;\n\n\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u30d3\u30eb\u30c0\u30fc\u3067\u3064\u304f\u3089\u308c\u305f\u5c0f\u898f\u6a21\u306a\u30b5\u30a4\u30c8\u3092\u30ea\u30cb\u30e5\u30fc\u30a2\u30eb\u3057\u3066 SPA (Single Page Application) \u3092\u3064\u304f\u308b\u969b\u306b\u691c\u8a0e\u3057\u305f\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\u5bfe\u8c61\u8aad\u8005\n-------\n\n\u5c0f\u898f\u6a21\u306e\u30b3\u30f3\u30c6\u30f3\u30c4\u63d0\u4f9b\u3068\u66f4\u65b0\u3001\u30e6\u30fc\u30b6\u30fc\u7ba1\u7406\u6a5f\u80fd\u3092\u3082\u3064\u30b5\u30a4\u30c8\u3092\u984c\u6750\u306b Silex \u306e\u6a5f\u80fd\u3092\u3069\u306e\u3088\u3046\u306b\u4f7f\u3046\u306e\u304b\u3092\u5b66\u3076\u3053\u3068\u3092\u4e3b\u8ef8\u3068\u3057\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066 SPA \u306b\u7279\u5fb4\u7684\u306a\u8a71\u3057\u306f\u3042\u307e\u308a\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u9078\u629e\u80a2\n-------------------\n\n### PHP\n\nSilex \u3068\u540c\u3058\u30de\u30a4\u30af\u30ed\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u6bd4\u8f03\u691c\u8a0e\u3057\u305f\u3044\u306e\u3067\u3042\u308c\u3070\u3001\n\u300c[PHP\u3001Node.js\u3001Go \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306b\u95a2\u3059\u308b\u8abf\u67fb](http://qiita.com/masakielastic/items/c9825434fda404231cbc)\u300d\u306e\u8a18\u4e8b \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\u901f\u5ea6\u3092\u5927\u5e45\u306b\u6539\u5584\u3067\u304d\u308b\u3068\u3044\u3046\u70b9\u3067\u3001\u8457\u8005\u306f [Phalcon Micro](https://docs.phalconphp.com/ja/latest/reference/micro.html) \u306b\u8208\u5473\u3092\u3082\u3063\u3066\u3044\u307e\u3059\u3002\n\nWeb API \u306b\u7279\u5316\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308c\u3070\u3001[BEAR.Sunday](https://bearsunday.github.io/) \u3084 [API Platform](https://api-platform.com/) \u3092\u6319\u3052\u307e\u3059\u3002BEAR.Sunday \u958b\u767a\u8005\u306e [koriym](http://qiita.com/koriym) \u3055\u3093\u306f\u65e5\u672c\u306e PHP \u30ab\u30f3\u30d5\u30a1\u30ec\u30f3\u30b9\u3084 Symfony \u52c9\u5f37\u4f1a\u306a\u3069\u3067\u7cbe\u529b\u7684\u306b\u8b1b\u6f14\u306a\u3055\u3063\u3066\u3044\u307e\u3059\u3002API Platform \u306e\u958b\u767a\u8005\u306e Dunglas \u3055\u3093\u306f Symfony \u306e\u30b3\u30a2\u30c1\u30fc\u30e0\u306e\u30e1\u30f3\u30d0\u30fc\u3067\u3059(2015\u5e74\u6642\u70b9)\u3002\n\n### JavaScript\n\n\u300c[\u9759\u7684\u306a\u30b5\u30a4\u30c8\u306b JavaScript \u306e\u30eb\u30fc\u30bf\u30fc\u3092\u5c0e\u5165\u3059\u308b](http://qiita.com/masakielastic/items/2d43829edbac51ea366c)\u300d\u3084\u300c[ES6\u3001React\u3001Cycle.js\u3001RxJS \u306b\u95a2\u3059\u308b\u8abf\u67fb](http://qiita.com/masakielastic/items/e769f111932e9061ffd4)\u300d\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nHTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30c6\u30b9\u30c8\u30c4\u30fc\u30eb\n---------------------------\n\n\u7b46\u8005\u306f\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u3084\u308a\u3068\u308a\u306e\u691c\u8a3c\u306b [httpie](https://github.com/jkbrzt/httpie) \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002HTTP/2 \u5bfe\u5fdc\u306e\u30d7\u30e9\u30b0\u30a4\u30f3 ([httpie-http2](https://github.com/jkbrzt/httpie-http2)) \u3082\u3042\u308a\u307e\u3059\u3002\n\n```bash\nhttp -f --session=test POST example.org foo=bar baz=qux\n```\n\nWeb API \u306e\u81ea\u52d5\u30c6\u30b9\u30c8\u30c4\u30fc\u30eb\u3068\u3057\u3066 [Postman](https://www.getpostman.com/) \u304a\u3088\u3073 [Newman](https://github.com/postmanlabs/newman) \u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002\n\n\u30b5\u30fc\u30d0\u30fc\u69cb\u7bc9\n----------\n\n### Docker Compose \u306b\u3088\u308b\u30b5\u30fc\u30d0\u30fc\u69cb\u7bc9\n\n\u300c[Docker Compose \u3067 PHP 7.0 \u306e\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b](http://qiita.com/masakielastic/items/9fdc52b47cc7e3850b9f)\u300d\u306e\u8a18\u4e8b\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n### Apache HTTP\u3001nginx \u306e\u8a2d\u5b9a\n\n\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb\u306b[\u8a18\u8f09](http://silex.sensiolabs.org/doc/web_servers.html)\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n### \u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u7ba1\u7406\u306b Redis \u3092\u4f7f\u3046\n\nNativeSessionStorage \u3092\u4f7f\u308f\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```php\n$app['session.storage.handler'] = null;\n```\n\nphp.ini \u306e\u8a2d\u5b9a\u304c\u3042\u308c\u3070 Silex \u306e\u5074\u3067\u306f\u7279\u306b\u8a2d\u5b9a\u306f\u4e0d\u8981\u3067\u3059\u3002\n\n```bash\nsession.save_handler = redis\nsession.save_path = tcp://127.0.0.1:6379\n```\n\nRedis \u306e\u904b\u7528\u306b\u95a2\u3057\u3066\u3001\u300c[Redis \u672c\u756a\u969c\u5bb3\u304b\u3089\u5b66\u3093\u3060\u30b3\u30fc\u30c9\u30ec\u30d3\u30e5\u30fc\u306e\u52d8\u6240](http://qiita.com/haminiku/items/43bafbb9d74ef3a1f74c)\u300d\u306e\u8a18\u4e8b\u304c\u8aad\u307f\u5fdc\u3048\u3042\u308a\u307e\u3059\u3002\n\n### Pimple\u30fbTwig \u306e PHP \u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u5c0e\u5165\n\nPimple\u30fbTwig \u306e PHP \u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u306f\u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u3000\u6700\u65b0\u306e Pimple \u3092\u4f7f\u3046\u305f\u3081\u306b\u306f Silex 2\u7cfb\u306b\u79fb\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u69cb\u6210\n---------------\n\n### \u30b9\u30b1\u30eb\u30c8\u30f3\n\u516c\u5f0f\u306e [Silex-Skeleton](https://github.com/silexphp/Silex-Skeleton) \u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u5171\u6709\u30b5\u30fc\u30d3\u30b9\u3068\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\n\n\u8907\u6570\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3067\u5171\u6709\u3059\u308b\u6a5f\u80fd\u306f\u5171\u6709\u30b5\u30fc\u30d3\u30b9\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u304b\u691c\u8a0e\u3057\u307e\u3059\u3002\u5c0f\u898f\u6a21\u306e\u30b3\u30fc\u30c9\u3067\u3042\u308c\u3070\u3001PHP 7.0 \u3067\u5c0e\u5165\u3055\u308c\u305f\u7121\u540d\u30af\u30e9\u30b9\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u540d\u524d\u7a7a\u9593\u306e\u6c5a\u67d3\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```php\nuse Silex\\Application;\nuse Symfony\\Component\\HttpFoundation\\Request;\n\n$app = new Application();\n$app['util'] = $app->share(function() {\n    return new class {\n        public function base64urlEncode($data)\n        {\n            return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');\n        }\n\n        public function randomToken($length = 32)\n        {\n            if (function_exists('random_bytes')) {\n                $bytes = random_bytes($length);\n            } else {\n                $bytes = openssl_random_pseudo_bytes($length);\n            }\n\n            return $this->base64urlEncode($bytes);\n        }\n    };\n});\n$app->get('/', function(Application $app) {\n    return $app['util']->randomToken();\n});\n\n$app->run();\n```\n\n\u4e00\u5b9a\u898f\u6a21\u3092\u8d85\u3048\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3068\u3057\u3066\u958b\u767a\u3059\u308b\u3053\u3068\u3092\u691c\u8a0e\u3057\u307e\u3057\u3087\u3046\u3002\n\n```php\nuse Silex\\Application;\nuse Silex\\ServiceProviderInterface;\nuse Symfony\\Component\\HttpFoundation\\Request;\n\nclass UtilServiceProvider implements ServiceProviderInterface\n{\n    public function register(Application $app)\n    {\n        $app['util'] = $app->share(function() {\n            return new Util;\n        });\n    }\n\n    public function boot(Application $app)\n    {\n    }\n}\n\nclass Util\n{\n    public function base64urlEncode($data)\n    {\n        return rtrim(strtr(base64_encode($data), '+/', '-_'), '=');\n    }\n\n    public function randomToken($length = 32)\n    {\n        if (function_exists('random_bytes')) {\n            $bytes = random_bytes($length);\n        } else {\n            $bytes = openssl_random_pseudo_bytes($length);\n        }\n\n        return $this->base64urlEncode($bytes);\n    }   \n}\n\n$app = new Application();\n$app->register(new UtilServiceProvider);\n$app->get('/', function(Application $app) {\n    return $app['util']->randomToken();\n});\n\n$app->run();\n```\n\n### \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\n\nWeb API \u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3092\u3064\u304f\u308c\u3070\u3001\u8907\u6570\u306e\u30a2\u30d7\u30ea\u3067\u5171\u6709\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```php\nuse Silex\\Application;\nuse Silex\\ControllerProviderInterface;\nuse Symfony\\Component\\HttpFoundation\\Request;\n\nclass HelloControllerProvider implements ControllerProviderInterface\n{\n    public function connect(Application $app)\n    {\n        $controllers = $app['controllers_factory'];\n\n        $controllers->before(function(Request $request) {\n            var_dump('before \u30df\u30c9\u30eb\u30a6\u30a7\u30a2');\n        });\n\n        $controllers->get('/{name}', function (Application $app, Request $request, $name) {\n            return 'Hello '.$name;\n        });\n\n        return $controllers;\n    }\n}\n\n$app = new Application();\n$app->mount('/hello', new HelloControllerProvider());\n$app['debug'] = true;\n\n$app->run();\n```\n\n\u30b7\u30f3\u30d7\u30eb\u306a\u30da\u30fc\u30b8\u60c5\u5831\u306b\u95a2\u3059\u308b Web API \u306e[\u4f8b](https://github.com/masakielastic/silex-simplepage)\u306f Github \u3067\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\n### \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u30b5\u30fc\u30d3\u30b9\u5316\n\n[ServiceControllerServiceProvider](http://silex-users-jp.phper.jp/doc/html/providers/service_controller.html) \u3092\u53c2\u7167\u3002\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u30b9\u30ea\u30e0\u306b\u4fdd\u3064\u3053\u3068\u3067\u3001\u8907\u6570\u306e\u30a2\u30d7\u30ea\u3084\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u3042\u3044\u3060\u3067\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5171\u6709\u3057\u305f\u308a\u3001\u30c6\u30b9\u30c8\u3057\u3084\u3059\u304f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n### HttpKernelInterface \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\n\nSilex \u3084 Symfony SE \u3067\u958b\u767a\u3055\u308c\u305f\u8907\u6570\u306e\u30a2\u30d7\u30ea\u3067\u6a5f\u80fd\u306e\u5171\u6709\u5316\u3092\u56f3\u308b\u3068\u304d\u3001StackPHP \u306e\u30b5\u30a4\u30c8\u3067\u793a\u3055\u308c\u3066\u3044\u308b[\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u6210\u679c\u7269](http://stackphp.com/middlewares/)\u3092\u5229\u7528\u3059\u308b\u304b\u3001\u691c\u8a0e\u3059\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\n----------\n\n### SSL/TLS \u3092\u5f37\u5236\u3059\u308b\n\nIE11 \u3068\u305d\u308c\u4ee5\u964d\u304c\u5bfe\u8c61\u3067\u3042\u308c\u3070\u3001`Strict-Transport-Security` \u30d8\u30c3\u30c0\u30fc\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Symfony/Silex \u306e[\u30df\u30c9\u30eb\u30a6\u30a7\u30a2](https://github.com/Zae/strict-transport-security)\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n### CSRF \u5bfe\u7b56\u306e\u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u3046\n\nCSRF \u30c8\u30fc\u30af\u30f3\u306f HTTP \u30d8\u30c3\u30c0\u30fc\u3082\u3057\u304f\u306f HTTP \u30dc\u30c7\u30a3\u306e\u3069\u3061\u3089\u304b\u306b\u6dfb\u4ed8\u3059\u308b\u304b\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u53cc\u65b9\u306e\u5229\u70b9\u30fb\u6b20\u70b9\u306f[Why is it common to put CSRF prevention tokens in cookies?](http://stackoverflow.com/q/20504846/531320) \u306e\u8cea\u554f\u3078\u306e\u56de\u7b54\u3067\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\nSymfony \u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3067\u306f\u30d5\u30a9\u30fc\u30e0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u901a\u3058\u3066 HTTP \u30dc\u30c7\u30a3\u306b\u6dfb\u4ed8\u3055\u308c\u304d\u307e\u3057\u305f\u304c\u3001SPA \u306e\u5834\u5408\u3001PHP \u3067\u30d5\u30a9\u30fc\u30e0\u3092\u751f\u6210\u3057\u306a\u3044\u5834\u5408\u3084\u3001\u8907\u6570\u306e\u30d5\u30a9\u30fc\u30e0\u3084 JavaScript \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u306e\u9023\u643a\u3092\u8003\u616e\u3059\u308b\u3068\u3001HTTP \u30d8\u30c3\u30c0\u30fc\u306e\u307b\u3046\u304c\u4fbf\u5229\u3067\u3059\u3002\n\nSilex 2.0 \u3067\u306f CSRF Service Provider \u304c\u5c0e\u5165\u3055\u308c\u3001`$app['csrf.token_manager']->isTokenValid(new CsrfToken('token_id', 'TOKEN'))` \u304c\u4f7f\u3048\u307e\u3059\u3002\n\nRuby on Rails \u3084 AngularJS \u306e\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u3067\u306f `X-XSRF-TOKEN` \u30d8\u30c3\u30c0\u30fc\u3084 `X-CSRF-TOKEN` \u30d8\u30c3\u30c0\u30fc\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u9001\u4fe1\u3055\u308c\u3066\u304d\u305f CSRF \u30c8\u30fc\u30af\u30f3\u306f `before` \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3067\u691c\u8a3c\u3057\u307e\u3059\u3002\n\n```php\n$app->before(function (Request $request, Application $app) {\n    $app['session']->start();\n\n    if ($request->isMethod('POST') || $request->isMethod('DELETE')) {\n        $csrf_token = $request->headers->get('x-xsrf-token');\n        $session_token = $app['session']->get('csrf_token');\n\n        $valid = $csrf_token !== null &&\n                 $session_token !== null &&\n                 hash_equals($csrf_token, $session_token);\n\n        if (!$valid) {\n            return $app->json([\n                'msg' => 'fail',\n                'description' => 'CSRF \u30c8\u30fc\u30af\u30f3\u304c\u9001\u4fe1\u3055\u308c\u3066\u3044\u306a\u3044\u3082\u3057\u304f\u306f\u4e00\u81f4\u3057\u307e\u305b\u3093\u3002'\n            ]);\n        }\n    }\n});\n```\n\nCSRF \u30c8\u30fc\u30af\u30f3\u3092\u81ea\u5206\u3067\u751f\u6210\u3059\u308b\u5834\u5408\u3001\u6a19\u6e96\u95a2\u6570\u306e `random_bytes` (PHP 7.0) \u3092\u4f7f\u3044\u307e\u3059\u3002PHP 5.x \u3067\u3042\u308c\u3070\u3001[random_compat](https://github.com/paragonie/random_compat) \u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5c0e\u5165\u3057\u307e\u3059\u3002\u9001\u4fe1\u3055\u308c\u3066\u304d\u305f CSRF \u30c8\u30fc\u30af\u30f3\u306e\u6bd4\u8f03\u306b\u306f `==` \u3084 `===` \u6f14\u7b97\u5b50\u3067\u306f\u306a\u304f\u3001`hash_equals` \u3092\u4f7f\u3044\u307e\u3059\u3002PHP 5.5 \u4ee5\u524d\u306e\u74b0\u5883\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001[hash-compat](https://github.com/indigophp/hash-compat) \u3084 [Symfony Polyfill](https://github.com/symfony/polyfill) \u304c\u6319\u3052\u3089\u308c\u307e\u3059\u3002\n\n### JavaScript/JSON \u306e\u30a8\u30b9\u30b1\u30fc\u30d7\n\nPHP \u304b\u3089 JavaScript\u30fbJSON \u3092\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u51e6\u7406\u306b\u306f `json_encode` \u3092\u4f7f\u3046\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n```php\n<?php\n$msg = '\u3053\u3093\u306b\u3061\u306f';\n$options = JSON_HEX_QUOT|JSON_HEX_AMP|JSON_HEX_APOS|JSON_HEX_TAG;\n?>\n<script>\nvar a = <?= json_encode( $msg, $options ) ?>;\nvar b = <?= json_encode( ['msg' => $msg], $options ) ?>;\n\nconsole.log(a);\nconsole.log(b['msg']);\n</script>\n```\n\nWeb API\n-------\n### \u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u306e REST \u98a8 API\n\n\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u3088\u308b\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u306e URL \u306f\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001stackoverflow \u306e[\u56de\u7b54](http://stackoverflow.com/a/7252311/531320)\u304c\u793a\u3059\u3088\u3046\u306b REST API \u306b\u4f3c\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```bash\nGET    /session/new \u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u3092\u3082\u3064\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\nPOST   /session \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5bfe\u3057\u3066\u30af\u30ec\u30c7\u30f3\u30b7\u30e3\u30eb\u3092\u8a8d\u8a3c\u3059\u308b\nDELETE /session \u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u7834\u58ca\u3057\u3066\u3001/ \u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\nGET  /users/new \u767b\u9332\u30d5\u30a9\u30fc\u30e0\u3092\u3082\u3064\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\nPOST /users \u5165\u529b\u3055\u308c\u305f\u60c5\u5831\u3092 /user/xxx \u3068\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8a18\u9332\u3059\u308b \nGET  /users/xxx // \u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u30d3\u30e5\u30fc\u3067\u306e\u73fe\u5728\u306e\u30e6\u30fc\u30b6\u30fc\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\nPOST /users/xxx // \u65b0\u3057\u3044\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u66f4\u65b0\u3059\u308b\n```\n\n\u5f8c\u8ff0\u3059\u308b SecurityServiceProvider \u3092\u4f7f\u3046\u5834\u5408\u3001Silex 1.3 \u306e\u6642\u70b9\u3067\u306f\u30ed\u30b0\u30a2\u30a6\u30c8\u306e HTTP \u30e1\u30bd\u30c3\u30c9\u306e\u5236\u7d04\u304c\u3042\u308b\u306e\u3067\u3001\u30b5\u30d6\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u5546\u54c1\u306e\u5728\u5eab\u6570\u306e\u66f4\u65b0\u3092\u8003\u3048\u308b\n\n\u5546\u54c1\u306e\u5728\u5eab\u6570\u3092\u6271\u3046\u5834\u5408\u3001\u5168\u5728\u5eab\u6570\u306e\u66f4\u65b0\u3082\u3057\u304f\u306f\u76f8\u5bfe\u7684\u306a\u52a0\u7b97\u30fb\u6e1b\u7b97\u306e\u30b5\u30dd\u30fc\u30c8\u3092\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5168\u5728\u5eab\u6570\u306e\u66f4\u65b0\u306e API \u306e\u307f\u306e\u5834\u5408\u3001\u66f4\u65b0\u306e\u969b\u306b HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3042\u3089\u304b\u3058\u3081\u5168\u5728\u5eab\u6570\u3092\u53d6\u5f97\u3057\u305f\u4e0a\u3067\u8a08\u7b97\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\n------------\n\n### \u30c8\u30c3\u30d7\u30da\u30fc\u30b8\u4ee5\u5916\u306e\u30da\u30fc\u30b8\u3067\u306e\u30a2\u30d7\u30ea\u306e\u521d\u671f\u5316\n\n\u4e00\u756a\u6700\u521d\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30da\u30fc\u30b8\u304c\u30c8\u30c3\u30d7\u30da\u30fc\u30b8\u4ee5\u5916\u3067\u3042\u308b\u5834\u5408\u3001HTTP \u30b5\u30fc\u30d0\u30fc\u5074\u306e\u5bfe\u5fdc\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u5171\u6709\u30db\u30b9\u30c6\u30a3\u30f3\u30b0\u30b5\u30fc\u30d3\u30b9\u306a\u3069 HTTP \u30b5\u30fc\u30d0\u30fc\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fee\u6b63\u3067\u304d\u306a\u3044\u5834\u5408\u3001Silex \u306e\u30b5\u30d6\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f7f\u3063\u3066\u5bfe\u5fdc\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```php\nuse Silex\\Application;\nuse Silex\\Provider;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpKernel\\HttpKernelInterface;\n\n$app = new Application;\n$app->get('/{name}', function(Application $app, $name) {\n    $subRequest = Request::create(\"/#{$name}\", 'GET');\n\n    return $app->handle($subRequest, HttpKernelInterface::SUB_REQUEST);\n});\n```\n\n### \u8907\u6570\u306e HTTP \u30e1\u30bd\u30c3\u30c9\u306b\u5bfe\u5fdc\u3055\u305b\u308b\n\n`match` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```php\n$app->match('/api/foo', function () {\n    // ...\n})\n->method('POST|PUT');\n```\n\n### JSON \u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\n\n`$app->json` \u3092\u4f7f\u3044\u307e\u3059\u3002\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306f\u7b2c2\u5f15\u6570\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```php\n$app->get('/foo', function () use ($app) {\n\n    $condition = true;\n\n    if (!$condition) {\n        return $app->json(['msg' => 'error'], 404);\n    }\n\n    return $app->json(['msg' => 'ok']);\n});\n```\n\n\u4e3b\u8981\u306a\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u306e\u5b9a\u6570\u306f\u3042\u3089\u304b\u3058\u3081\u5b9a\u7fa9\u3055\u308c\u3066\u3042\u308a\u307e\u3059 ([Response](https://github.com/symfony/http-foundation/blob/master/Response.php))\u3002\n\n```php\nreturn $app->json(['msg' => 'ok'], Response::HTTP_OK);\n```\n\n`JsonResponse` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u76f4\u63a5\u751f\u6210\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```php\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\n\nreturn new JsonResponse(['msg' => 'ok']);\n```\n\n### JSON \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6271\u3046\n\nRequest \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e `getContent` \u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```php\nif (0 === strpos($request->headers->get('Content-Type'), 'application/json')) {\n    $data = json_decode($request->getContent(), true);\n    }\n```\n\n`json_decode` \u306b\u306f  HashDos \u3078\u306e\u5bfe\u7b56\u304c\u307b\u3069\u3053\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u6570\u5341\u30ad\u30ed\u30d0\u30a4\u30c8\u898f\u6a21\u306e\u30c7\u30fc\u30bf\u304c\u6765\u305f\u5834\u5408\u306b\u3001Fatal Error \u306b\u3059\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046 ([PHP\u306eJSON HashDos\u306b\u95a2\u3059\u308b\u6ce8\u610f\u559a\u8d77](http://blog.hash-c.co.jp/2015/10/phpjson-hashdos.html))\u3002\n\n### \u9023\u60f3\u914d\u5217\u306e\u623b\u308a\u5024\u3092 JSON \u306b\u5909\u63db\u3059\u308b\n\nview \u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u4f7f\u3048\u3070\u3001\u623b\u308a\u5024\u3067\u6307\u5b9a\u3057\u305f\u9023\u60f3\u914d\u5217\u3092\u81ea\u52d5\u7684\u306b JSON \u306b\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```php\nuse Silex\\Application;\n\n$app = new Application();\n$app->get('/', function(Application $app) {\n    return ['msg' => 'Hello World'];\n});\n$app->view(function (array $controllerResult) use ($app) {\n    return $app->json($controllerResult);\n});\n\n$app->run();\n```\n\n### JSON \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30d5\u30a7\u30a4\u30af Web API \u3092\u3064\u304f\u308b\n\n\u3061\u3087\u3063\u3068\u3057\u305f\u30a2\u30a4\u30c7\u30a3\u30a2\u3092\u8a66\u3059\u306e\u306b\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u304b\u3089 Web API \u3092\u7528\u610f\u3067\u304d\u308c\u3070\u4fbf\u5229\u3067\u3059\u3002Node.js \u3067\u66f8\u304b\u308c\u305f [JSON Server](https://github.com/typicode/json-server) \u3068\u3044\u3046\u30c4\u30fc\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u8868\u793a\u3055\u305b\u308b\u3060\u3051\u306a\u3089\u3001Silex \u3067\u3061\u3087\u3063\u3068\u3057\u305f\u30b3\u30fc\u30c9\u3092\u66f8\u3051\u3070\u3059\u307f\u307e\u3059\u3002\n\n```php\nuse Silex\\Application;\n\n$app = new Application(); \n$app['debug'] = true;\n\n$app['api'] = json_decode(file_get_contents(__DIR__.'/db.json'));\n\nforeach ($app['api'] as $key => $value) {\n\n    $app->get('/'.$key, function(Application $app) use ($value) {\n        return $app->json($value); \n    }); \n\n}\n\n$app->run();\n```\n\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e db.json \u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```json\n{\n  \"pages\": [\n    {\n      \"id\": 1,\n      \"name\": \"index\",\n      \"title\": \"\u30db\u30fc\u30e0\",\n      \"body\": \"\u30db\u30fc\u30e0\u306e\u5185\u5bb9\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"about\",\n      \"title\": \"\u81ea\u5df1\u7d39\u4ecb\",\n      \"body\": \"\u81ea\u5df1\u7d39\u4ecb\u306e\u5185\u5bb9\"\n    }\n  ],\n  \"profile\": {\n    \"name\": \"Masaki\"\n  }\n}\n```\n\n### \u9759\u7684\u306a HTML \u3092\u751f\u6210\u3059\u308b\n\n\u751f\u6210\u3057\u305f\u3044\u30da\u30fc\u30b8\u306e URL \u306e\u30ea\u30b9\u30c8\u3092\u7528\u610f\u3057\u305f\u4e0a\u3067\u3001`handle` \u30e1\u30bd\u30c3\u30c9\u30671\u3064\u305a\u3064\u751f\u6210\u3057\u3066\u3086\u304d\u307e\u3059\u3002\n\n```php\nuse Silex\\Application;\nuse Symfony\\Component\\HttpFoundation\\Request;\n\n$app = new Application(); \n$app['debug'] = true;\n\n$app->get('/foo', function() {\n    return 'foo'; \n});\n\n$app->get('/', function() {\n    return 'Hello'; \n});\n\n$response = $app->handle(Request::create('/foo'));\n```\n\n`$app[\u2018routes\u2019]` (`RouteCollection`) \u306f `IteratorAggregate` \u3092\u5b9f\u88c5\u3059\u308b\u306e\u3067\u3001`foreach` \u30eb\u30fc\u30d7\u304b\u3089\u3059\u3079\u3066\u306e\u30eb\u30fc\u30c8\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u304c\u3001\u500b\u5225\u306e\u8a18\u4e8b\u306e URL \u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n```php\n$ret = [];\n\nforeach ($app['routes'] as $elm) {\n    $ret[] = $elm->getPattern();\n}\n\n```\n\n### PSR-7 \u5bfe\u5fdc\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u30fb\u30ec\u30b9\u30dd\u30f3\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6271\u3046\n\n[PSR7BridgeServiceProvider](https://github.com/masakielastic/silex-psr7bridge-service-provider) \u306e\u30b3\u30fc\u30c9\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n----------\n\n### DoctrineServiceProvider \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nDoctrine DBAL (Database Abstraction Layer) \u3092 Composer \u3067\u5c0e\u5165\u3057\u307e\u3059\u3002\n\n```bash\ncomposer require \"doctrine/dbal:~2.5\"\n```\n\n\u30b5\u30fc\u30d3\u30b9\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u30af\u30e9\u30b9\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n\n```php\n$app = new Silex\\Application();\n$app->register(new Silex\\Provider\\DoctrineServiceProvider());\n```\n\nSQLite \u306e\u5834\u5408\u3001\u8a2d\u5b9a\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```php\n$app['db.options'] = [\n    'driver' => 'pdo_sqlite',\n    'path'   => __DIR__.'/app.db'\n];\n```\n\n\u30a4\u30f3\u30e1\u30e2\u30ea\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u3046\u306e\u3067\u3042\u308c\u3070\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```php\n$app['db.options'] = [\n    'driver' => 'pdo_sqlite',\n    'memory' => true\n];\n```\n\nMySQL \u306e\u5834\u5408\u3001\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n```php\n$app['db.options'] = [\n    'driver' => 'pdo_mysql',\n    'user' => 'myuser',\n    'password' => 'mypassword',\n    'charset' => 'utf8',\n    'dbname' => 'testdb'\n];\n```\n\n### \u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\n\nSQL \u3092\u76f4\u63a5\u4f7f\u3046\u4ee5\u5916\u306b Schema Manager \u3067\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u306f SQLite\u3001\u904b\u7528\u74b0\u5883\u3067\u306f MySQL \u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u3044\u308f\u3051\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306b\u4fbf\u5229\u3067\u3059\u3002\n\n```php\n$tableName = 'Page';\n\n$sm = $app['db']->getSchemaManager();\n$schema = $sm->createSchema();\n\n$page = $schema->createTable($tableName);\n$page->addOption('charset', 'utf8mb4');\n$page->addOption('collate', 'utf8mb4_unicode_ci');\n$page->addOption('engine', 'InnoDB');\n\n$page->addColumn('id', 'integer', ['unsigned' => true, 'autoincrement' => true]);\n$page->setPrimaryKey(['id']);\n$page->addColumn('name', 'string', ['length' => 255]);\n$page->addColumn('title', 'string', ['length' => 255]);\n$page->addColumn('content', 'text');\n\n$sm->createTable($page);\n```\n\nDBAL 2.5 \u3067\u306f\u4f55\u3082\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6587\u5b57\u30bb\u30c3\u30c8\u306f `utf8`\u3001\u6587\u5b57\u7167\u5408\u306f `utf8_unicode_ci` \u306b\u306a\u308a\u307e\u3059([MySqlPlatform.php](https://github.com/doctrine/dbal/blob/f44782e91c8c910736272986f543989d214daf1c/lib/Doctrine/DBAL/Platforms/MySqlPlatform.php#L477.L485))\u3002\u30b5\u30f3\u30d7\u30eb\u306e\u30b3\u30fc\u30c9\u306f\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9([MySQL](https://github.com/doctrine/dbal/blob/master/tests/Doctrine/Tests/DBAL/Functional/Schema/MySqlSchemaManagerTest.php)) \u3092\u898b\u308b\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\u5916\u90e8\u30ad\u30fc\u3092\u4f7f\u3046\u30b3\u30fc\u30c9\u306e[\u4f8b](http://blog.sarabande.jp/post/134393514663)\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\n\n\n\u30c7\u30fc\u30bf\u306e\u767b\u9332\u306b\u306f `insert` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```php\n$app['db']->insert('Page', [\n    'name' => 'main',\n    'title' => '\u30bf\u30a4\u30c8\u30eb',\n    'content' => '\u30b3\u30f3\u30c6\u30f3\u30c4'\n]);\n```\n\n### \u554f\u3044\u5408\u308f\u305b\u306e\u30e1\u30bd\u30c3\u30c9\n\n[PDO \u304b\u3089 Doctrine DBAL \u3078\u306e\u66f8\u304d\u63db\u3048](http://blog.sarabande.jp/post/28545565604) \u306e\u8a18\u4e8b\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\u8a8d\u8a3c\n---\n### SecurityServiceProvider\n\n#### Simple User Provider \u306b\u3088\u308b\u30e6\u30fc\u30b6\u30fc\u7ba1\u7406\n\n\u30e6\u30fc\u30b6\u30fc\u7ba1\u7406\u6a5f\u80fd\u3092\u4f7f\u3046\u4eba\u304c\u304b\u304e\u3089\u308c\u3066\u3044\u305f\u308a\u3001\u4f7f\u3046\u983b\u5ea6\u304c\u4f4e\u3044\u306a\u3069\u3001SPA \u5bfe\u5fdc\u306b\u3059\u308b\u5fc5\u8981\u304c\u306a\u3051\u308c\u3070\u3001[Simple User Provider](https://github.com/jasongrimes/silex-simpleuser) \u3092\u5c0e\u5165\u3059\u308b\u9078\u629e\u80a2\u304c\u3042\u308a\u307e\u3059\u3002\n\n#### \u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3092\u3064\u304f\u308b\n\n\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u3046\u5834\u5408\u3001`UserProviderInterface` \u3092\u5b9f\u88c5\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc\u3092\u3064\u304f\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u30b3\u30fc\u30c9\u306e\u4f8b\u306f[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://blog.sarabande.jp/post/128698137823)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n#### \u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092 JSON \u306b\u3059\u308b\n\n\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u30cf\u30f3\u30c9\u30e9\u30fc\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n```php\nuse Silex\\Application;\nuse Silex\\Provider;\n\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\Security\\Core\\Authentication\\Token\\TokenInterface;\nuse Symfony\\Component\\Security\\Core\\Exception\\AuthenticationException;\nuse Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationSuccessHandlerInterface;\nuse Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationFailureHandlerInterface;\nuse Symfony\\Component\\Security\\Http\\Logout\\LogoutSuccessHandlerInterface;\n\nclass AuthenticationHandler implements AuthenticationSuccessHandlerInterface, AuthenticationFailureHandlerInterface\n{\n        public function onAuthenticationSuccess(Request $request, TokenInterface $token)\n        {\n        return new JsonResponse(['login' => true]);\n        }\n\n    public function onAuthenticationFailure(Request $request, AuthenticationException $exception)\n        {\n        return new JsonResponse(['login' => false]);\n        }\n}\n\nclass LogutSuccessHandler implements LogoutSuccessHandlerInterface\n{\n    public function onLogoutSuccess(Request $request)\n    {\n        return new JsonResponse(['login' => false]);\n    }\n}\n\n$app = new Application();\n$app->register(new Provider\\SessionServiceProvider());\n$app->register(new Provider\\SecurityServiceProvider());\n\n$app['debug'] = true;\n$app['security.firewalls'] = [\n    'admin' => [\n        'anonymous' => true,\n        'form' => [\n            'check_path' => '/login_check'\n            ],\n        'logout' => ['logout_path' => '/logout', 'invalidate_session' => true],\n        'users' => [\n            'admin' => [\n              'ROLE_ADMIN',\n              // foo\n              '5FZ2Z8QIkA7UTZ4BYkoC+GsReLf569mSKDsfods6LYQ8t+a8EW9oaircfMpmaLbPBh4FOBiiFyLfuZmTSUwzZg=='\n            ]\n        ]\n    ]\n];\n\n$app['security.authentication.success_handler.admin'] = $app->share(function ($app) {\n    return new AuthenticationHandler();\n});\n$app['security.authentication.failure_handler.admin'] = $app->share(function ($app) {\n    return new AuthenticationHandler();\n});\n\n$app['security.authentication.logout_handler.admin'] = $app->share(function () use ($app) {\n    return new LogutSuccessHandler();\n});\n\n$app->before(function (Request $request) {\n    $request->getSession()->start();\n});\n\n$app->get('/', function(Application $app, Request $request) {\n    $user = $app['security.token_storage']->getToken()->getUser();\n\n    $name = $user === 'anon.' ? '\u30b2\u30b9\u30c8' : $user->getUserName();\n\n    return \"\u3053\u3093\u306b\u3061\u306f\u3001{$name} \u3055\u3093\u3002\";\n});\n$app->run();\n```\n#### \u624b\u52d5\u3067\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u3059\u308b\n\nFacebook \u306e OAuth \u8a8d\u8a3c\u306a\u3069\u3067\u3001\u624b\u52d5\u3067\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u3001`$app['security.token_storage']` \u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```php\nuse Silex\\Application;\nuse Silex\\Provider;\n\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken;\n\n$app = new Application();\n$app->register(new Provider\\SessionServiceProvider());\n$app->register(new Provider\\SecurityServiceProvider());\n\n$app['debug'] = true;\n$app['security.firewalls'] = [\n    'admin_area' => ['anonymous' => true]\n];\n\n$app->before(function (Request $request) {\n    $request->getSession()->start();\n});\n\n$app->get('/', function(Application $app, Request $request) {\n\n    if (!$app['security.authorization_checker']->isGranted('ROLE_ADMIN')) {\n        return '\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002';\n    }\n\n    $token = $app['security.token_storage']->getToken();\n    $name = $token->getUsername();\n\n    return \"\u3053\u3093\u306b\u3061\u306f\u3001{$name} \u3055\u3093\u3002\";\n});\n\n$app->get('/login', function(Application $app) {\n    $name = 'foo';\n\n    $token = new UsernamePasswordToken(\n        $name,\n        null,\n        'admin_area',\n        ['ROLE_ADMIN']\n    );\n\n    $app['security.token_storage']->setToken($token);\n\n    return '\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3057\u305f\u3002';\n});\n\n$app->get('/logout', function(Application $app) {\n    $app['security.token_storage']->setToken(null);\n\n    return '\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002';\n});\n\n$app->run();\n```\n\n#### \u30e6\u30fc\u30b6\u30fc\u767b\u9332\u3068\u540c\u6642\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\n\n```php\nuse Silex\\Application;\nuse Silex\\Provider;\n\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken;\n\nuse Doctrine\\DBAL\\Connection;\nuse Doctrine\\DBAL\\Schema\\Table;\n\n$app = new Application();\n$app->register(new Provider\\SessionServiceProvider());\n$app->register(new Provider\\SecurityServiceProvider());\n$app->register(new Provider\\DoctrineServiceProvider());\n\n$app['debug'] = true;\n$app['security.firewalls'] = [\n    'admin_area' => ['anonymous' => true]\n];\n$app['db.options'] = [\n    'driver'   => 'pdo_sqlite',\n    'path'     => __DIR__.'/app.db'\n];\n\n$sm = $app['db']->getSchemaManager();\n\nif (!$sm->tablesExist('users')) {\n    $users = new Table('users');\n    $users->addColumn('id', 'integer', ['unsigned' => true, 'autoincrement' => true]);\n    $users->setPrimaryKey(['id']);\n    $users->addColumn('username', 'string', ['length' => 32]);\n    $users->addColumn('email', 'string', ['length' => 255]);\n    $users->addColumn('telephone', 'string', ['notnull' => false, 'length' => 30]);\n    $users->addColumn('password', 'string', ['length' => 255]);\n    $users->addColumn('roles', 'string', ['default' => 'ROLE_USER', 'length' => 255]);\n\n    $sm->createTable($users);\n\n    $app['db']->insert('users', [\n      'username' => 'foo',\n      'password' => password_hash('bar', PASSWORD_DEFAULT),\n      'email' => 'foo@example.com',\n      'telephone' => '123456789',\n      'roles' => 'ROLE_ADMIN'\n    ]);\n}\n\n$app->before(function (Request $request) {\n    $request->getSession()->start();\n});\n\n$app->get('/', function(Application $app, Request $request) {\n\n    if (!$app['security.authorization_checker']->isGranted('ROLE_ADMIN')) {\n        return '\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002';\n    }\n\n    $token = $app['security.token_storage']->getToken();\n    $name = $token->getUsername();\n\n    return \"\u3053\u3093\u306b\u3061\u306f\u3001{$name} \u3055\u3093\u3002\";\n});\n\n$app->get('/register', function(Application $app, Request $request) {\n\n    $email ='bar@example.com';\n    $stmt = $app['db']->executeQuery('SELECT * FROM users WHERE email = ?', [$email]);\n\n    $token = new UsernamePasswordToken(\n        $email,\n        null,\n        'admin_area',\n        ['ROLE_ADMIN']\n    );\n\n    if ($stmt->fetch()) { \n        $app['security.token_storage']->setToken($token);\n\n        return '\u3059\u3067\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3059\u3002';\n    } \n\n    $password = random_token(15);\n    $hash = password_hash($password, PASSWORD_DEFAULT);\n\n    $count = $app['db']->executeUpdate('INSERT INTO users(username, email, password) VALUES(?, ?, ?)', [$email, $email, $hash]);\n\n    if ($count !== 1) {\n        return '\u767b\u9332\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002';\n    }\n\n    $app['security.token_storage']->setToken($token);\n\n    return '\u767b\u9332\u3057\u307e\u3057\u305f\u3002';\n});\n\n$app->get('/logout', function(Application $app) {\n    $app['security.token_storage']->setToken(null);\n\n    return '\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002';\n});\n\n$app->get('/users', function(Application $app) {\n    $users = $app['db']->fetchAll('SELECT * FROM users');\n\n    return $app->json($users);\n});\n$app->run();\n```\n\n#### Facebook \u306e OAuth \u8a8d\u8a3c\n\n`$app['security.token_storage']` \u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3046\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```php\nuse Silex\\Application;\nuse Silex\\Provider;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\Security\\Core\\Authentication\\Token\\UsernamePasswordToken;\n\n$app = new Application();\n$app->register(new Provider\\SessionServiceProvider());\n$app->register(new Provider\\SecurityServiceProvider());\n\n$app['debug'] = true;\n$app['security.firewalls'] = [\n    'admin_area' => ['anonymous' => true]\n];\n\n$app['fb'] = $app->share(function() {\n    return new Facebook\\Facebook([\n        'app_id' => '{app-id}',\n        'app_secret' => '{app-secret}',\n        'default_graph_version' => 'v2.4',\n    ]);\n});\n\n\n$app->before(function(Request $request) {\n    $session = $request->getSession()->start();\n});\n\n$app->get('/login', function (Application $app) {\n    $helper = $app['fb']->getRedirectLoginHelper();\n    $permissions = ['email'];\n    $loginUrl = $helper->getLoginUrl('http://example.com/login-callback', $permissions);\n\n    return '<a href=\"' . $loginUrl . '\">Facebook \u3067\u30ed\u30b0\u30a4\u30f3</a>';\n});\n\n$app->get('/login-callback', function(Application $app) {\n\n    $helper = $app['fb']->getRedirectLoginHelper();\n\n    try {\n        $accessToken = $helper->getAccessToken();\n    } catch (Facebook\\Exceptions\\FacebookResponseException $e) {\n        return 'Graph \u304c\u30a8\u30e9\u30fc\u3092\u8fd4\u3057\u307e\u3057\u305f: ' . $e->getMessage();\n    } catch(Facebook\\Exceptions\\FacebookSDKException $e) {\n        return 'Facebook SDK \u304c\u30a8\u30e9\u30fc\u3092\u8fd4\u3057\u307e\u3057\u305f: ' . $e->getMessage();\n    }\n\n    $app['fb']->setDefaultAccessToken((string) $accessToken);\n\n    try {\n        $response = $app['fb']->get('/me?locale=ja_JP&fields=id,name,email');\n        $userNode = $response->getGraphUser();\n    } catch(Facebook\\Exceptions\\FacebookResponseException $e) {\n        return 'Graph \u304c\u30a8\u30e9\u30fc\u3092\u8fd4\u3057\u307e\u3057\u305f: ' . $e->getMessage();\n    } catch(Facebook\\Exceptions\\FacebookSDKException $e) {\n        return 'Facebook SDK \u304c\u30a8\u30e9\u30fc\u3092\u8fd4\u3057\u307e\u3057\u305f: ' . $e->getMessage();\n    }\n\n    $email = $userNode['email'];\n\n    $token = new UsernamePasswordToken(\n        $email,\n        null,\n        'admin_area',\n        ['ROLE_ADMIN']\n    );\n\n\n    $app['security.token_storage']->setToken($token);\n\n    return $app->redirect('/');\n});\n\n$app->get('/', function(Application $app, Request $request) {\n\n    if (!$app['security.authorization_checker']->isGranted('ROLE_ADMIN')) {\n        return '\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002';\n    }\n\n    $token = $app['security.token_storage']->getToken();\n    $name = $token->getUsername();\n\n    $script = \"<script type=\\\"text/javascript\\\">\n    // http://stackoverflow.com/q/7131909/531320\n\n    if (window.location.hash && window.location.hash == '#_=_') {\n      if (window.history && history.pushState) {\n        window.history.pushState('', document.title, window.location.pathname);\n      }\n    }\n    </script>\";\n\n    return \"\u3053\u3093\u306b\u3061\u306f\u3001{$name} \u3055\u3093\u3002\".$script;\n});\n\n$app->get('/logout', function(Application $app) {\n    $app['security.token_storage']->setToken(null);\n\n    return '\u30ed\u30b0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\u3002';\n});\n\n$app->run();\n```\n\n### SecurityServiceProvider \u3092\u4f7f\u308f\u306a\u3044\u8a8d\u8a3c\n\n\u30ed\u30fc\u30eb\u304c\u4e0d\u8981\u3067\u3042\u3063\u305f\u308a\u3001\u30b5\u30a4\u30c8\u3092\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3059\u308b\u4eba\u306e\u30b9\u30ad\u30eb\u3092\u8003\u616e\u3057\u305f\u308a\u3001Web API \u306e\u5b9f\u9a13\u3092\u3057\u305f\u3044\u5834\u5408\u3001SecurityServiceProvider \u3092\u4f7f\u308f\u305a\u306b\u8a8d\u8a3c\u3092\u5b9f\u88c5\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u3002PHP 5.5 \u3068\u305d\u308c\u4ee5\u964d\u3067\u3042\u308c\u3070 `password_hash` \u304a\u3088\u3073 `password_verify` \u3092\u4f7f\u3063\u3066\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u8a8d\u8a3c\u3067\u304d\u307e\u3059\u3002\n\n```php\n$hash = password_hash('mypass');\n\nif (!password_verify($password, $hash)) {\n    return $app->json(['msg' => 'fail', 400);\n}\n\n$app['session']->migrate(true);\n$app['session']->set('login', true);\n```\n\nWeb API \u306e\u5b9f\u9a13\u4f8b\u3068\u3057\u3066\u305f\u3068\u3048\u3070\u3001\u6b21\u306e\u69cb\u6210\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u30b3\u30fc\u30c9\u306f[\u3053\u3061\u3089](http://blog.sarabande.jp/post/127781282043)\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n```php\nGET    /sessions \u30ed\u30b0\u30a4\u30f3\u306e\u72b6\u614b\u3092\u78ba\u8a8d\u3059\u308b\nPOST   /sessions \u30ed\u30b0\u30a4\u30f3\nDELETE /sessions \u30ed\u30b0\u30a2\u30a6\u30c8\n```\n\n### JWT (JSON Web Token) \u306b\u3088\u308b\u8a8d\u8a3c\n\nPHP \u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u4ee3\u308f\u308a\u306b JWT (JSON Web Token) \u306b\u3088\u308b\u8a8d\u8a3c\u304c\u5c11\u3057\u305a\u3064\u6ce8\u76ee\u3092\u96c6\u3081\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u3002\u308f\u304b\u308a\u3084\u3059\u3044\u89e3\u8aac\u306f [JSON Web Token \u306e\u52b9\u7528] \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nJWT \u306b\u3088\u308b\u8a8d\u8a3c\u306e\u30e1\u30ea\u30c3\u30c8\u306f\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u9001\u3089\u308c\u3066\u304d\u305f\u30c8\u30fc\u30af\u30f3\u3092\u691c\u8a3c\u3059\u308b\u305f\u3081\u306b\u3001\u4ee5\u524d\u767a\u884c\u3057\u305f\u30c8\u30fc\u30af\u30f3\u3092\u30b5\u30fc\u30d0\u30fc\u306e\u30d5\u30a1\u30a4\u30eb\u3084 Redis \u306e\u3088\u3046\u306a KVS (Key Value Store) \u306b\u4fdd\u5b58\u3057\u306a\u304f\u3066\u3088\u3044\u3053\u3068\u3067\u3059\u3002\n\n\u8a00\u3044\u63db\u3048\u308b\u3068\u3001\u30b5\u30fc\u30d0\u30fc\u304c\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306b\u306a\u308b\u306e\u3067\u3001\u30b5\u30fc\u30d0\u30fc\u3092\u5897\u8a2d\u3057\u3084\u3059\u304f\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u30b5\u30fc\u30d0\u30fc\u304c\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306b\u306a\u308b\u3068\u3044\u3063\u3066\u3082\u3001Cookie (\u30bb\u30c3\u30b7\u30e7\u30f3) \u3092\u4f7f\u3046\u5834\u5408\u306f CSRF \u5bfe\u7b56\u304c\u5fc5\u8981\u3068\u306e\u3053\u3068\u3067\u3059 (stackoverflow \u306e[\u56de\u7b54](http://stackoverflow.com/q/21357182/531320)\u3088\u308a)\u3002\n\nSilex \u306e\u5b9f\u88c5\u4f8b\u306f [security-jwt-service-provider](https://github.com/cnam/security-jwt-service-provider) \u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nHTTP \u30d8\u30c3\u30c0\u30fc\u3092\u901a\u3058\u3066\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u9001\u4fe1\u3055\u308c\u3066\u304d\u305f\u30c8\u30fc\u30af\u30f3\u306f\u6b21\u306e\u3088\u3046\u306b\u691c\u8a3c\u3055\u308c\u307e\u3059\u3002\n\n```php\ntry {\n     $data = \\JWT::decode($token, $secretKey, $allowed_algs);\n} catch (\\UnexpectedValueException $e) {\n    throw new \\UnexpectedValueException($e->getMessage());\n} catch (\\DomainException $e) {\n    throw new \\UnexpectedValueException($e->getMessage());\n}\n\nif ($data->exp < time()) {\n    throw new \\UnexpectedValueException('token not allowed');\n}\n```\n\n\u30c6\u30b9\u30c8\n-----\n\n### PHPUnit \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n`composer require` \u3092\u4f7f\u3044\u307e\u3059\u3002HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e BrowserKit \u3082\u4e00\u7dd2\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n```bash\ncomposer require --dev phpunit/phpunit symfony/browser-kit\n```\n\n\u30b3\u30de\u30f3\u30c9\u30c4\u30fc\u30eb\u304c\u4f7f\u3048\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\n```bash\nvendor/bin/phpunit --version\n```\n\n\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```bash\ncomposer global require phpunit/phpunit ~5.0\n```\n\n\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u30b3\u30de\u30f3\u30c9\u30c4\u30fc\u30eb\u3092\u30a2\u30f3\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\u3001\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n```bash\ncomposer global remove phpunit/phpunit\n```\n\nphpunit \u30b3\u30de\u30f3\u30c9\u306b\u30c6\u30b9\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d1\u30b9\u3092\u4f1d\u3048\u308b\u305f\u3081\u306e `phpunit.xml` \u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```xml\n<phpunit>\n  <testsuites>\n    <testsuite name=\"Silex Test\">\n      <directory>tests</directory>\n    </testsuite>\n  </testsuites>\n</phpunit>\n```\n\n\u30ab\u30b9\u30bf\u30e0\u30b3\u30de\u30f3\u30c9\u306e `composer test` \u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```json:composer.json\n\"scripts\" :{\n    \"test\": [\n        \"php vendor/bin/phpunit\"\n    ]\n}\n```\n\n### JSON \u30ec\u30b9\u30dd\u30f3\u30b9\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306b `WebTestCase` \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u30c6\u30b9\u30c8\u306e HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u306f BrowserKit \u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306b\u306f `createApplication` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002HTTP \u30b9\u30c6\u30fc\u30bf\u30b9\u3068\u30d8\u30c3\u30c0\u30fc\u306e\u305f\u3081\u306e\u30d8\u30eb\u30d1\u30fc\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002HTTP \u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c7\u30a3\u306f `getContent` \u30e1\u30bd\u30c3\u30c9\u3067\u53d6\u5f97\u3057\u3066\u3001`json_decode` \u3067\u914d\u5217\u3082\u3057\u304f\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n```php:app.php\nuse Silex\\Application;\nuse Symfony\\Component\\HttpFoundation\\Request;\n\n$app = new Silex\\Application();\n$app->get('/', function(Application $app, Request $request) {\n    return $app->json(['msg' => 'hello']);\n});\n\nreturn $app;\n```\n\n```php\nuse Silex\\WebTestCase;\n\nclass MyControllerTest extends WebTestCase\n{\n    public function createApplication()\n    {\n        $app = require __DIR__ . '/../app.php';\n        $app['debug'] = true;\n\n        return $app;\n    }\n\n    // http://marcjuch.li/blog/2014/04/06/symfony2-rest-functional-testing-with-fixtures/\n    protected function assertJsonResponse($response, $statusCode = 200) {\n        $this->assertEquals(\n            $statusCode, $response->getStatusCode(),\n            $response->getContent()\n        );\n        $this->assertTrue(\n            $response->headers->contains('Content-Type', 'application/json'),\n            $response->headers\n        );\n    }\n\n    public function testIndex()\n    {\n        $client = $this->createClient();\n        $crawler = $client->request('GET', '/');\n        $response = $client->getResponse();\n        $data = json_decode($response->getContent(), true);\n\n        $this->assertJsonResponse($response);\n        $this->assertEquals('hello', $data['msg']);\n    }\n}\n```\n\n### \u30bb\u30c3\u30b7\u30e7\u30f3\n\n`session.test` \u306b `true` \u3092\u6307\u5b9a\u3059\u308c\u3070\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u306b `MockFileSessionStorage` \u304c\u4f7f\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```php\n$app['session.test'] = true;\n```\n"}