{"context": "\u3053\u306e\u8a18\u4e8b\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306e\u7d9a\u304d\u3067\u3059\u3002\nScala\u3067PlayFramework: \u30d3\u30e5\u30fc\u7de8\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3053\u3061\u3089\nPlay 2.5.10 documentation\n\u3053\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u306f\u3001\u3060\u3044\u305f\u3044\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u306b\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\nAccessing an SQL database\nAnorm, simple SQL data access\n\nDB\u306fMySQL\u3092\u4f7f\u3044\u307e\u3059\u3002\u5165\u3063\u3066\u3044\u306a\u3044\u65b9\u306fbrew\u3068\u304b\u3067\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\n$ mysql --version\nmysql  Ver 14.14 Distrib 5.7.11, for osx10.11 (x86_64) using  EditLine wrapper\n\n\u63a5\u7d9a\u306b\u306fAnorm\u3068\u3044\u3046\u3082\u306e\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3082\u3046\u4e00\u3064Slick\u3068\u8a00\u3046\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u5168\u7136\u8ffd\u3048\u3066\u306a\u3044\u306e\u3067\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u5bfe\u8c61\u5916\u3068\u3057\u307e\u3059\u3002\nAnorm\u3082\u5185\u5bb9\u304c\u6ca2\u5c71\u3042\u3063\u3066\u3001\u672c\u8a18\u4e8b\u3067\u306f\u3068\u308a\u3042\u3048\u305aDB\u3068\u7e4b\u3050\u304f\u3089\u3044\u306e\u30ec\u30d9\u30eb\u3067\u3059\u306e\u3067\u3001\u8a73\u3057\u304f\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nDB\u306b\u63a5\u7d9a\u3059\u308b\nMySQL\u306b\u63a5\u7d9a\u3057\u3066\u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3057\u3001\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\n\n\u3044\u304f\u3064\u304b\u306e\u8a2d\u5b9a\n\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u524d\u306b\u8a2d\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001build.sbt\u3067MySQL\u306eJDBC\u3068Anorm\u3092\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nbuild.sbt\n...\nlibraryDependencies ++= Seq(\n  jdbc,\n  cache,\n  ws,\n  \"org.scalatestplus.play\" %% \"scalatestplus-play\" % \"1.5.1\" % Test,\n  \"mysql\" % \"mysql-connector-java\" % \"5.1.40\",\n  \"com.typesafe.play\" %% \"anorm\" % \"2.5.2\"\n)\n\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3053\u3061\u3089\u3067\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nDownload Connector/J\nplayframework/anorm\n\u6b21\u306b\u3001conf/application.conf\u306e\u4e0b\u306e\u65b9\u306b\u3042\u308bJDBC Datasource\u306e\u90e8\u5206\u306bDB\u60c5\u5831\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nconf/application.conf\n## JDBC Datasource\n...\n#\ndb {\n  # You can declare as many datasources as you want.\n  # By convention, the default datasource is named `default`\n\n  ...\n  # \u3053\u308c\u3092\u8ffd\u52a0\n  default.driver=com.mysql.jdbc.Driver\n  default.url=\"jdbc:mysql://localhost/play_sample?characterEncoding=UTF8\"\n  default.username=root\n  default.password=password\n\n  ...\n}\n\n\n\u3068\u308a\u3042\u3048\u305a\u540d\u524d\u306fdefault\u306b\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\u3082\u3057\u8907\u6570\u306eDB\u306b\u63a5\u7d9a\u3057\u305f\u3044\u5834\u5408\u306f\u3001default\u306e\u90e8\u5206\u3092\u4efb\u610f\u306e\u540d\u524d\u306b\u5909\u3048\u3066DB\u60c5\u5831\u3092\u5217\u6319\u3057\u307e\u3059\u3002\n\u4e0a\u306e\u4f8b\u306f\u3001localhost\u306b\u3042\u308bplay_sample\u3068\u3044\u3046DB\u306b\u3001root\u3068\u3044\u3046\u30e6\u30fc\u30b6(\u30d1\u30b9\u30ef\u30fc\u30c9\u306fpassword)\u3067\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n\n\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\n\u307e\u305a\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002app\u4ee5\u4e0b\u306bmodels\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u305d\u306e\u4e0b\u306bDBAccess\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002\n\napp/models/DBAccess.scala\npackage models\n\nimport javax.inject._\nimport play.api.mvc._\nimport play.api.db._\nimport anorm._\nimport anorm.SqlParser._\n\n@Singleton\nclass DBAccess @Inject()(db: Database) {\n}\n\n\n\u3053\u308c\u3067conf/application.conf\u3067\u8a2d\u5b9a\u3057\u305fdefault\u306eDB\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\ndefault\u4ee5\u5916\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\napp/models/DBAccess.scala\n...\n@Singleton\nclass DBAccess @Inject()(@NamedDatabase(\"DB\u540d\") db: Database) {\n}\n\n\nimport anorm._\u306e\u3068\u3053\u308d\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u304c\u3001\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3082\u305d\u3046\u3060\u3051\u3069\u3001\u3069\u3046\u306b\u304b\u306a\u3089\u306a\u3044\u306e\u304b\u306a\uff1f\n\n\u63a5\u7d9a\u3059\u308b\nDB\u306b\u63a5\u7d9a\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n...\ndb.withConnection { implicit c =>\n  // \u4f55\u304b\u3057\u3089\u51e6\u7406\n}\n...\n\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u304a\u3051\u3070\u3001\u30b9\u30b3\u30fc\u30d7\u3092\u5916\u308c\u305f\u3068\u304d\u306b\u52dd\u624b\u306b\u63a5\u7d9a\u3092\u30af\u30ed\u30fc\u30ba\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\n\u4ee5\u4e0b\u306e\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3059\u3002\n\u30c6\u30fc\u30d6\u30eb\u540d\uff1alanguage\n\n\n\nid:Int(11)/auto_increment\nname:text\nexperienece:Int(3)\n\n\n\n\n1\nScala\n0\n\n\n2\nPython\n5\n\n\n3\nSwift\n1\n\n\n\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\napp/models/DBAccess.scala\n...\nclass DBAccess @Inject()(db: Database) {\n\n  val parser = int(\"id\") ~ str(\"name\") ~ int(\"experience\")\n\n  def languageList: List[Int~String~Int] = {\n    db.withConnection { implicit c =>\n      SQL(\"SELECT * FROM language ORDER BY id\").as(parser *)\n    }\n  }\n}\n...\n\n\n\u8272\u3005\u51fa\u3066\u304d\u307e\u3057\u305f\u306d\u3002\n\u307e\u305a\u3001\u3053\u308c\u3002\nSQL(\"SELECT * FROM language ORDER BY id\")\n\nSQL\u3067\u3059\u3002\u306f\u3044\u3002SQL\u66f8\u304d\u307e\u3059\u3002\n\u6b21\u306b\u3001SQL\u306e\u5f8c\u306b\u3064\u3044\u3066\u3044\u308b\u3053\u308c\u3002\nas(parser.*)\n\nSQL\u306e\u7d50\u679c\u306e\u5404\u30ec\u30b3\u30fc\u30c9\u3092\u30d1\u30fc\u30b9\u3059\u308b\u30d1\u30fc\u30b5\u3092\u6e21\u3057\u307e\u3059\u3002\n\u4eca\u56de\u5bfe\u8c61\u306e\u30af\u30a8\u30ea\u3067\u53d6\u5f97\u3067\u304d\u308b\u30ec\u30b3\u30fc\u30c9\u306f\u3001\u30ab\u30e9\u30e0\u304c\u5de6\u304b\u3089\u3001Int(11), text, Int(3)\u3068\u306a\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u30d1\u30fc\u30b9\u3067\u304d\u308b\u30d1\u30fc\u30b5\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u305d\u308c\u304c\u3053\u308c\u3002\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u3067\u56f2\u308f\u308c\u3066\u3044\u308b\u306e\u306f\u30ab\u30e9\u30e0\u540d\u3067\u3059\u3002\nval parser = int(\"id\") ~ str(\"name\") ~ int(\"experience\")\n\n~\u306fAnorm\u306e\u6f14\u7b97\u5b50\u3089\u3057\u304f\u3001\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306f\u30bf\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u308b\u3068\u601d\u3048\u3070\u3044\u3044\u307f\u305f\u3044\u3067\u3059\u3002\n\u5f8c\u308d\u306b\u304f\u3063\u3064\u3044\u3066\u3044\u308b*\u306f\u3001\u30ec\u30b3\u30fc\u30c9\u304c0\u500b\u4ee5\u4e0a\u3042\u308b\u3068\u304d\u306b\u3064\u3051\u307e\u3059\u3002\n\u5fc5\u305a1\u500b\u4ee5\u4e0a\u306b\u306a\u308b\u5834\u5408\u306f+\u304c\u4f7f\u3048\u307e\u3059\u3002\u6b63\u898f\u8868\u73fe\u3068\u4e00\u7dd2\u3067\u3059\u306d\u3002\n\u4e3b\u30ad\u30fc\u306b\u3088\u308b\u691c\u7d22\u306a\u3069\u3001\u7d50\u679c\u304c1\u500b\u306b\u306a\u308b\u3068\u304d\u306fsingle\u30010\u307e\u305f\u306f1\u500b\u306e\u5834\u5408\u306fsingleOpt\u306b\u306a\u308a\u307e\u3059\u3002\nas(parser.*)         // 0\u4ee5\u4e0a\nas(parser.+)         // 1\u4ee5\u4e0a\nas(parser.single)    // 1\nas(parser.singleOpt) // 1 or 0\n\n\u305d\u3057\u3066\u8fd4\u308a\u5024\u306f\u30ec\u30b3\u30fc\u30c9\u306e\u5206\u3060\u3051Int~String~Int\u304c\u3067\u304d\u308b\u306e\u3067List[Int~String~Int]\u306b\u306a\u308a\u307e\u3059\u3002\ndef languageList: List[Int~String~Int] = {\n\n\u3061\u3083\u3093\u3068\u53d6\u5f97\u3067\u304d\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306b\u4ee5\u4e0b\u3092\u66f8\u304d\u307e\u3059\u3002\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306e\u90e8\u5206\u5909\u66f4\u304c\u3042\u308b\u306e\u3067\u5fd8\u308c\u305a\u306b\u3002\n\napp/controller/HomeController.scala\n...\n@Singleton\nclass HomeController @Inject()(db: DBAccess) extends Controller {\n...\n  def languageList = Action {\n    Ok(db.languageList.toString)\n  }\n...\n\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306b\u3082\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nconf/routes\n...\nGET     /language_list              controllers.HomeController.languageList\n...\n\n\n/language_list\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\u3068\u3001\u3053\u3093\u306a\u3082\u306e\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\nList(~(~(1,Scala),0), ~(~(2,Python),5), ~(~(3,Swift),1))\n\n\u3069\u3046\u3082\u53d6\u308c\u3066\u305d\u3046\u3067\u3059\u304c\u3001\u4f7f\u3044\u306b\u304f\u305d\u3046\u3067\u3059\u3002\n\u30d1\u30fc\u30b5\u3092\u6539\u5584\u3001\u3068\u8a00\u3046\u304b\u30de\u30c3\u30d1\u30fc\u3092\u565b\u307e\u305b\u3066\u307f\u307e\u3059\u3002\n\napp/models/DBAccess.scala\n...\nclass DBAccess @Inject()(db: Database) {\n\n  val parser = int(\"id\") ~ str(\"name\") ~ int(\"experience\")\n  val mapper = parser.map { \n    case id ~ name ~ experience => Map(\"id\" -> id, \"name\" -> name, \"experience\" -> experience)\n  }\n\n  def languageList: List[Map[String,Any]] = {\n    db.withConnection { implicit c =>\n      SQL(\"SELECT * FROM language ORDER BY id\").as(mapper.*)\n    }\n  }\n}\n...\n\n\n\u30de\u30c3\u30d1\u30fc\u304c\u5897\u3048\u307e\u3057\u305f\u3002\u30d1\u30fc\u30b9\u7d50\u679c\u306b\u30ab\u30e9\u30e0\u540d\u3092\u8ffd\u52a0\u3057\u3066\u3001\u30de\u30c3\u30d7\u3068\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\nval mapper = parser.map { \n  case id ~ name ~ experience => Map(\"id\" -> id, \"name\" -> name, \"experience\" -> experience)\n}\n\nSQL\u306e\u5f8c\u306b\u3064\u3051\u308b\u306e\u3092\u30d1\u30fc\u30b5\u3067\u306f\u306a\u304f\u30de\u30c3\u30d1\u30fc\u306b\u3057\u307e\u3057\u305f\u3002\nSQL(\"SELECT * FROM language ORDER BY id\").as(mapper.*)\n\n\u30de\u30c3\u30d1\u30fc\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u305f\u306e\u3067\u3001\u8fd4\u308a\u5024\u3082\u5909\u308f\u308a\u307e\u3057\u305f\u3002\ndef languageList: List[Map[String,Any]] = {\n\n\u518d\u3073/language_list\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\nList(Map(id -> 1, name -> Scala, experience -> 0), Map(id -> 2, name -> Python, experience -> 5), Map(id -> 3, name -> Swift, experience -> 1))\n\n\u4f7f\u3048\u305d\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30ec\u30b3\u30fc\u30c9\u3092\u633f\u5165\u3057\u3066\u307f\u308b\n\u53d6\u5f97\u306b\u6bd4\u3079\u308c\u3070\u968f\u5206\u697d\u3067\u3059\u3002\n\napp/models/DBAccess.scala\n...\n  def insert: Option[Long] = {\n    db.withConnection { implicit c =>\n      SQL(\"insert into language(name, experience) values('Java', 4)\").executeInsert()\n    }\n  }\n...\n\n\n\u633f\u5165\u306fSQL\u306e\u5f8c\u306bexecuteInsert()\u3092\u304f\u3063\u3064\u3051\u307e\u3059\u3002\n\u8fd4\u308a\u5024\u306f\u3001\u4e3b\u30ad\u30fc\u304cauto_increment\u3067\u5358\u4e00\u30ec\u30b3\u30fc\u30c9\u306e\u633f\u5165\u306e\u5834\u5408\u306f\u3001\u633f\u5165\u3055\u308c\u305f\u30ec\u30b3\u30fc\u30c9\u306e\u4e3b\u30ad\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u308c\u4ee5\u5916\u306e\u3001\u8907\u6570\u30ec\u30b3\u30fc\u30c9\u306e\u66f4\u65b0\u3060\u3063\u305f\u308a\u3001\u4e3b\u30ad\u30fc\u304c\u6587\u5b57\u5217\u3060\u3063\u305f\u308a\u306e\u5834\u5408\u306f\u3001\u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n\napp/models/DBAccess.scala\n...\n  def insertTwo: List[String] = {\n    db.withConnection { implicit c =>\n      SQL(\"insert into language(name, experience) values('C', 5), ('Ruby', 2)\").executeInsert(str.+)\n    }\n  }\n...\n\n\n\u3042\u3001executeInsert()\u306b\u3082\u30d1\u30fc\u30b5\u3092\u6e21\u3059\u306e\u306d\u3002\n\n\u30ec\u30b3\u30fc\u30c9\u3092\u66f4\u65b0\u30fb\u524a\u9664\u3057\u3066\u307f\u308b\n\u4eca\u5ea6\u306fexecuteUpdate()\u3092\u4f7f\u3044\u307e\u3059\u3002\u4e88\u60f3\u901a\u308a\u304b\u306a\uff1f\n\napp/models/DBAccess.scala\n...\n  def update: Int = {\n    db.withConnection { implicit c =>\n      SQL(\"update language set experience = 999 where name = 'Scala'\").executeUpdate()\n    }\n  }\n\n  def delete: Int = {\n    db.withConnection { implicit c =>\n      SQL(\"delete from language where name = 'C'\").executeUpdate()\n    }\n  }\n...\n\n\n\u8fd4\u308a\u5024\u306f\u66f4\u65b0\u306b\u6210\u529f\u3057\u305f\u30ec\u30b3\u30fc\u30c9\u306e\u4ef6\u6570\u3067\u3059\u3002\n\n\u5024\u3092\u5f8c\u304b\u3089\u5165\u308c\u308b\u3084\u3064(\u540d\u524d\u308f\u304b\u3089\u306a\u3044)\nSQL\u306b{id}(id\u306f\u4efb\u610f\u306e\u6587\u5b57\u5217)\u3068\u66f8\u3044\u3066\u304a\u3044\u3066\u3001\u3042\u3068\u3067on\u3092\u4ed8\u3051\u8db3\u3059\u3068\u3067\u304d\u307e\u3059\u3002\n\napp/models/DBAccess.scala\n...\n  def search(language: String): Option[Map[String,Any]] = {\n    db.withConnection { implicit c =>\n      SQL(\"SELECT * FROM language where name = {language}\").on(\"language\" -> language).as(mapper.singleOpt)\n    }\n  }\n...\n\n\non\u306f\u30de\u30c3\u30d7\u3068\u540c\u3058\u8981\u9818\u3067\u66f8\u304d\u307e\u3059\u3002\n\n\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\ndb.withConnection\u3092db.withTransaction\u306b\u5909\u3048\u307e\u3057\u3087\u3046\u3002\u305d\u308c\u3060\u3051\u3002\n\n\u304a\u308f\u308a\u306b\n\u4eca\u56de\u306f\u30ec\u30b3\u30fc\u30c9\u306e\u53d6\u5f97\u3067\u3059\u3054\u304f\u82e6\u52b4\u3057\u307e\u3057\u305f\u3002\n\u6700\u521d\u306f\u30d1\u30fc\u30b5\u306e\u66f8\u304d\u65b9\u304c\u5168\u304f\u308f\u304b\u3089\u305a\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u306b\u3089\u3081\u3063\u3053\u3057\u306a\u304c\u3089\u3001\u66f8\u3044\u3066\u306f\u30a8\u30e9\u30fc\u66f8\u3044\u3066\u306f\u30a8\u30e9\u30fc\u30fb\u30fb\u30fb\n\u30d1\u30fc\u30b5\u66f8\u304f\u306b\u306f\u30ab\u30e9\u30e0\u3092\u5168\u90e8\u66f8\u304b\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u6c17\u304c\u3057\u307e\u3059\u304c\u3001\u30ab\u30e9\u30e0\u6570\u304c\u591a\u3044\u3068\u5927\u5909\u305d\u3046\u3067\u3059\u306d\u3002\nSlick\u3060\u3063\u305f\u3089\u3053\u3093\u306a\u306b\u5927\u5909\u3067\u306f\u7121\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u306a\u3093\u304b\u3084\u308a\u65b9\u9593\u9055\u3048\u3066\u308b\u306e\u304b\u306a\u30fb\u30fb\u30fb\uff1f\n\u4e00\u5fdc\u76ee\u7684\u306f\u9054\u6210\u3057\u307e\u3057\u305f\u304c\u3001\u4e0d\u660e\u70b9\u304c\u3068\u3066\u3082\u6b8b\u3063\u3066\u307e\u3059\u3002\u5f15\u304d\u7d9a\u304d\u4f7f\u3063\u3066\u307f\u3066\u5f90\u3005\u306b\u7406\u89e3\u3057\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u8a18\u4e8b\u66f8\u3044\u3066\u3044\u308b\u9014\u4e2d\u3067\u75b2\u308c\u3066\u304d\u3066\u3001\u6587\u4f53\u3068\u304b\u5d29\u308c\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u76f4\u3059\u6c17\u529b\u304c\u7121\u3044\u306e\u3067\u8a31\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3002\u3002\nScala\u3067PlayFramework\u30b7\u30ea\u30fc\u30ba\u306f\u4e00\u65e6\u3053\u308c\u3067\u304a\u3057\u307e\u3044\u3067\u3059\u3002\n\u6307\u6458\u3068\u304b\u30a2\u30c9\u30d0\u30a4\u30b9\u3068\u304b\u3042\u3063\u305f\u3089\u305c\u3072\u304f\u3060\u3055\u3044\u3002\u304a\u9858\u3044\u3057\u307e\u3059\uff01\n\u3053\u306e\u8a18\u4e8b\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306e\u7d9a\u304d\u3067\u3059\u3002\n[Scala\u3067PlayFramework: \u30d3\u30e5\u30fc\u7de8](http://qiita.com/Yaruki00/items/1ff93cd2df9a008c2413)\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3053\u3061\u3089\n[Play 2.5.10 documentation](https://www.playframework.com/documentation/2.5.10/Home)\n\u3053\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u306f\u3001\u3060\u3044\u305f\u3044\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u306b\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n* [Accessing an SQL database](https://www.playframework.com/documentation/2.5.10/ScalaDatabase)\n* [Anorm, simple SQL data access](https://www.playframework.com/documentation/2.5.10/ScalaAnorm)\n\nDB\u306fMySQL\u3092\u4f7f\u3044\u307e\u3059\u3002\u5165\u3063\u3066\u3044\u306a\u3044\u65b9\u306f`brew`\u3068\u304b\u3067\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\n$ mysql --version\nmysql  Ver 14.14 Distrib 5.7.11, for osx10.11 (x86_64) using  EditLine wrapper\n```\n\n\u63a5\u7d9a\u306b\u306f`Anorm `\u3068\u3044\u3046\u3082\u306e\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3082\u3046\u4e00\u3064`Slick`\u3068\u8a00\u3046\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u5168\u7136\u8ffd\u3048\u3066\u306a\u3044\u306e\u3067\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u5bfe\u8c61\u5916\u3068\u3057\u307e\u3059\u3002\n`Anorm `\u3082\u5185\u5bb9\u304c\u6ca2\u5c71\u3042\u3063\u3066\u3001\u672c\u8a18\u4e8b\u3067\u306f\u3068\u308a\u3042\u3048\u305aDB\u3068\u7e4b\u3050\u304f\u3089\u3044\u306e\u30ec\u30d9\u30eb\u3067\u3059\u306e\u3067\u3001\u8a73\u3057\u304f\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# DB\u306b\u63a5\u7d9a\u3059\u308b\nMySQL\u306b\u63a5\u7d9a\u3057\u3066\u30af\u30a8\u30ea\u3092\u5b9f\u884c\u3057\u3001\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\n\n## \u3044\u304f\u3064\u304b\u306e\u8a2d\u5b9a\n\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u524d\u306b\u8a2d\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001`build.sbt`\u3067MySQL\u306e`JDBC`\u3068`Anorm`\u3092\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```scala:build.sbt\n...\nlibraryDependencies ++= Seq(\n  jdbc,\n  cache,\n  ws,\n  \"org.scalatestplus.play\" %% \"scalatestplus-play\" % \"1.5.1\" % Test,\n  \"mysql\" % \"mysql-connector-java\" % \"5.1.40\",\n  \"com.typesafe.play\" %% \"anorm\" % \"2.5.2\"\n)\n```\n\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3053\u3061\u3089\u3067\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n[Download Connector/J](https://dev.mysql.com/downloads/connector/j/)\n[playframework/anorm](https://github.com/playframework/anorm/releases)\n\n\u6b21\u306b\u3001`conf/application.conf`\u306e\u4e0b\u306e\u65b9\u306b\u3042\u308bJDBC Datasource\u306e\u90e8\u5206\u306bDB\u60c5\u5831\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```scala:conf/application.conf\n## JDBC Datasource\n...\n#\ndb {\n  # You can declare as many datasources as you want.\n  # By convention, the default datasource is named `default`\n\n  ...\n  # \u3053\u308c\u3092\u8ffd\u52a0\n  default.driver=com.mysql.jdbc.Driver\n  default.url=\"jdbc:mysql://localhost/play_sample?characterEncoding=UTF8\"\n  default.username=root\n  default.password=password\n\n  ...\n}\n```\n\n\u3068\u308a\u3042\u3048\u305a\u540d\u524d\u306f`default`\u306b\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\u3082\u3057\u8907\u6570\u306eDB\u306b\u63a5\u7d9a\u3057\u305f\u3044\u5834\u5408\u306f\u3001`default`\u306e\u90e8\u5206\u3092\u4efb\u610f\u306e\u540d\u524d\u306b\u5909\u3048\u3066DB\u60c5\u5831\u3092\u5217\u6319\u3057\u307e\u3059\u3002\n\u4e0a\u306e\u4f8b\u306f\u3001`localhost`\u306b\u3042\u308b`play_sample`\u3068\u3044\u3046DB\u306b\u3001`root`\u3068\u3044\u3046\u30e6\u30fc\u30b6(\u30d1\u30b9\u30ef\u30fc\u30c9\u306f`password`)\u3067\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n\n## \u30e2\u30c7\u30eb\u3092\u4f5c\u308b\n\u307e\u305a\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002`app`\u4ee5\u4e0b\u306b`models`\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u305d\u306e\u4e0b\u306b`DBAccess`\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3059\u3002\n\n```scala:app/models/DBAccess.scala\npackage models\n\nimport javax.inject._\nimport play.api.mvc._\nimport play.api.db._\nimport anorm._\nimport anorm.SqlParser._\n\n@Singleton\nclass DBAccess @Inject()(db: Database) {\n}\n```\n\n\u3053\u308c\u3067`conf/application.conf`\u3067\u8a2d\u5b9a\u3057\u305f`default`\u306eDB\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n`default`\u4ee5\u5916\u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```scala:app/models/DBAccess.scala\n...\n@Singleton\nclass DBAccess @Inject()(@NamedDatabase(\"DB\u540d\") db: Database) {\n}\n```\n\n`import anorm._`\u306e\u3068\u3053\u308d\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u304c\u3001\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3082\u305d\u3046\u3060\u3051\u3069\u3001\u3069\u3046\u306b\u304b\u306a\u3089\u306a\u3044\u306e\u304b\u306a\uff1f\n\n### \u63a5\u7d9a\u3059\u308b\nDB\u306b\u63a5\u7d9a\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```scala:\n...\ndb.withConnection { implicit c =>\n  // \u4f55\u304b\u3057\u3089\u51e6\u7406\n}\n...\n```\n\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u304a\u3051\u3070\u3001\u30b9\u30b3\u30fc\u30d7\u3092\u5916\u308c\u305f\u3068\u304d\u306b\u52dd\u624b\u306b\u63a5\u7d9a\u3092\u30af\u30ed\u30fc\u30ba\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n### \u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\n\u4ee5\u4e0b\u306e\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30c6\u30fc\u30d6\u30eb\u540d\uff1alanguage\n\n|id:Int(11)/auto_increment|name:text|experienece:Int(3)|\n|:--:|:--:|:--:|\n|1|Scala|0|\n|2|Python|5|\n|3|Swift|1|\n\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```scala:app/models/DBAccess.scala\n...\nclass DBAccess @Inject()(db: Database) {\n\n  val parser = int(\"id\") ~ str(\"name\") ~ int(\"experience\")\n\n  def languageList: List[Int~String~Int] = {\n    db.withConnection { implicit c =>\n      SQL(\"SELECT * FROM language ORDER BY id\").as(parser *)\n    }\n  }\n}\n...\n```\n\n\u8272\u3005\u51fa\u3066\u304d\u307e\u3057\u305f\u306d\u3002\n\u307e\u305a\u3001\u3053\u308c\u3002\n\n```scala\nSQL(\"SELECT * FROM language ORDER BY id\")\n```\n\nSQL\u3067\u3059\u3002\u306f\u3044\u3002SQL\u66f8\u304d\u307e\u3059\u3002\n\n\u6b21\u306b\u3001SQL\u306e\u5f8c\u306b\u3064\u3044\u3066\u3044\u308b\u3053\u308c\u3002\n\n```scala\nas(parser.*)\n```\n\nSQL\u306e\u7d50\u679c\u306e\u5404\u30ec\u30b3\u30fc\u30c9\u3092\u30d1\u30fc\u30b9\u3059\u308b\u30d1\u30fc\u30b5\u3092\u6e21\u3057\u307e\u3059\u3002\n\u4eca\u56de\u5bfe\u8c61\u306e\u30af\u30a8\u30ea\u3067\u53d6\u5f97\u3067\u304d\u308b\u30ec\u30b3\u30fc\u30c9\u306f\u3001\u30ab\u30e9\u30e0\u304c\u5de6\u304b\u3089\u3001Int(11), text, Int(3)\u3068\u306a\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u30d1\u30fc\u30b9\u3067\u304d\u308b\u30d1\u30fc\u30b5\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u305d\u308c\u304c\u3053\u308c\u3002\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u3067\u56f2\u308f\u308c\u3066\u3044\u308b\u306e\u306f\u30ab\u30e9\u30e0\u540d\u3067\u3059\u3002\n\n```scala\nval parser = int(\"id\") ~ str(\"name\") ~ int(\"experience\")\n```\n\n`~`\u306f`Anorm `\u306e\u6f14\u7b97\u5b50\u3089\u3057\u304f\u3001\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306f\u30bf\u30d7\u30eb\u3092\u4f5c\u3063\u3066\u308b\u3068\u601d\u3048\u3070\u3044\u3044\u307f\u305f\u3044\u3067\u3059\u3002\n\n\u5f8c\u308d\u306b\u304f\u3063\u3064\u3044\u3066\u3044\u308b`*`\u306f\u3001\u30ec\u30b3\u30fc\u30c9\u304c0\u500b\u4ee5\u4e0a\u3042\u308b\u3068\u304d\u306b\u3064\u3051\u307e\u3059\u3002\n\u5fc5\u305a1\u500b\u4ee5\u4e0a\u306b\u306a\u308b\u5834\u5408\u306f`+`\u304c\u4f7f\u3048\u307e\u3059\u3002\u6b63\u898f\u8868\u73fe\u3068\u4e00\u7dd2\u3067\u3059\u306d\u3002\n\u4e3b\u30ad\u30fc\u306b\u3088\u308b\u691c\u7d22\u306a\u3069\u3001\u7d50\u679c\u304c1\u500b\u306b\u306a\u308b\u3068\u304d\u306f`single`\u30010\u307e\u305f\u306f1\u500b\u306e\u5834\u5408\u306f`singleOpt`\u306b\u306a\u308a\u307e\u3059\u3002\n\n```scala\nas(parser.*)         // 0\u4ee5\u4e0a\nas(parser.+)         // 1\u4ee5\u4e0a\nas(parser.single)    // 1\nas(parser.singleOpt) // 1 or 0\n```\n\n\u305d\u3057\u3066\u8fd4\u308a\u5024\u306f\u30ec\u30b3\u30fc\u30c9\u306e\u5206\u3060\u3051`Int~String~Int`\u304c\u3067\u304d\u308b\u306e\u3067`List[Int~String~Int]`\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\ndef languageList: List[Int~String~Int] = {\n```\n\n\u3061\u3083\u3093\u3068\u53d6\u5f97\u3067\u304d\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306b\u4ee5\u4e0b\u3092\u66f8\u304d\u307e\u3059\u3002\u30a4\u30f3\u30b8\u30a7\u30af\u30b7\u30e7\u30f3\u306e\u90e8\u5206\u5909\u66f4\u304c\u3042\u308b\u306e\u3067\u5fd8\u308c\u305a\u306b\u3002\n\n```scala:app/controller/HomeController.scala\n...\n@Singleton\nclass HomeController @Inject()(db: DBAccess) extends Controller {\n...\n  def languageList = Action {\n    Ok(db.languageList.toString)\n  }\n...\n```\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306b\u3082\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```scala:conf/routes\n...\nGET     /language_list              controllers.HomeController.languageList\n...\n```\n\n`/language_list`\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\u3068\u3001\u3053\u3093\u306a\u3082\u306e\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\n```\nList(~(~(1,Scala),0), ~(~(2,Python),5), ~(~(3,Swift),1))\n```\n\n\u3069\u3046\u3082\u53d6\u308c\u3066\u305d\u3046\u3067\u3059\u304c\u3001\u4f7f\u3044\u306b\u304f\u305d\u3046\u3067\u3059\u3002\n\u30d1\u30fc\u30b5\u3092\u6539\u5584\u3001\u3068\u8a00\u3046\u304b\u30de\u30c3\u30d1\u30fc\u3092\u565b\u307e\u305b\u3066\u307f\u307e\u3059\u3002\n\n```scala:app/models/DBAccess.scala\n...\nclass DBAccess @Inject()(db: Database) {\n\n  val parser = int(\"id\") ~ str(\"name\") ~ int(\"experience\")\n  val mapper = parser.map { \n    case id ~ name ~ experience => Map(\"id\" -> id, \"name\" -> name, \"experience\" -> experience)\n  }\n\n  def languageList: List[Map[String,Any]] = {\n    db.withConnection { implicit c =>\n      SQL(\"SELECT * FROM language ORDER BY id\").as(mapper.*)\n    }\n  }\n}\n...\n```\n\n\u30de\u30c3\u30d1\u30fc\u304c\u5897\u3048\u307e\u3057\u305f\u3002\u30d1\u30fc\u30b9\u7d50\u679c\u306b\u30ab\u30e9\u30e0\u540d\u3092\u8ffd\u52a0\u3057\u3066\u3001\u30de\u30c3\u30d7\u3068\u3057\u3066\u8fd4\u3057\u307e\u3059\u3002\n\n```scala\nval mapper = parser.map { \n  case id ~ name ~ experience => Map(\"id\" -> id, \"name\" -> name, \"experience\" -> experience)\n}\n```\n\nSQL\u306e\u5f8c\u306b\u3064\u3051\u308b\u306e\u3092\u30d1\u30fc\u30b5\u3067\u306f\u306a\u304f\u30de\u30c3\u30d1\u30fc\u306b\u3057\u307e\u3057\u305f\u3002\n\n```scala\nSQL(\"SELECT * FROM language ORDER BY id\").as(mapper.*)\n```\n\n\u30de\u30c3\u30d1\u30fc\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u305f\u306e\u3067\u3001\u8fd4\u308a\u5024\u3082\u5909\u308f\u308a\u307e\u3057\u305f\u3002\n\n```scala\ndef languageList: List[Map[String,Any]] = {\n```\n\n\u518d\u3073`/language_list`\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\nList(Map(id -> 1, name -> Scala, experience -> 0), Map(id -> 2, name -> Python, experience -> 5), Map(id -> 3, name -> Swift, experience -> 1))\n```\n\n\u4f7f\u3048\u305d\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n### \u30ec\u30b3\u30fc\u30c9\u3092\u633f\u5165\u3057\u3066\u307f\u308b\n\u53d6\u5f97\u306b\u6bd4\u3079\u308c\u3070\u968f\u5206\u697d\u3067\u3059\u3002\n\n```scala:app/models/DBAccess.scala\n...\n  def insert: Option[Long] = {\n    db.withConnection { implicit c =>\n      SQL(\"insert into language(name, experience) values('Java', 4)\").executeInsert()\n    }\n  }\n...\n```\n\n\u633f\u5165\u306fSQL\u306e\u5f8c\u306b`executeInsert()`\u3092\u304f\u3063\u3064\u3051\u307e\u3059\u3002\n\u8fd4\u308a\u5024\u306f\u3001\u4e3b\u30ad\u30fc\u304c`auto_increment`\u3067\u5358\u4e00\u30ec\u30b3\u30fc\u30c9\u306e\u633f\u5165\u306e\u5834\u5408\u306f\u3001\u633f\u5165\u3055\u308c\u305f\u30ec\u30b3\u30fc\u30c9\u306e\u4e3b\u30ad\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u308c\u4ee5\u5916\u306e\u3001\u8907\u6570\u30ec\u30b3\u30fc\u30c9\u306e\u66f4\u65b0\u3060\u3063\u305f\u308a\u3001\u4e3b\u30ad\u30fc\u304c\u6587\u5b57\u5217\u3060\u3063\u305f\u308a\u306e\u5834\u5408\u306f\u3001\u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u306b\u306a\u308a\u307e\u3059\u3002\n\n```scala:app/models/DBAccess.scala\n...\n  def insertTwo: List[String] = {\n    db.withConnection { implicit c =>\n      SQL(\"insert into language(name, experience) values('C', 5), ('Ruby', 2)\").executeInsert(str.+)\n    }\n  }\n...\n```\n\n\u3042\u3001`executeInsert()`\u306b\u3082\u30d1\u30fc\u30b5\u3092\u6e21\u3059\u306e\u306d\u3002\n\n### \u30ec\u30b3\u30fc\u30c9\u3092\u66f4\u65b0\u30fb\u524a\u9664\u3057\u3066\u307f\u308b\n\u4eca\u5ea6\u306f`executeUpdate()`\u3092\u4f7f\u3044\u307e\u3059\u3002\u4e88\u60f3\u901a\u308a\u304b\u306a\uff1f\n\n```scala:app/models/DBAccess.scala\n...\n  def update: Int = {\n    db.withConnection { implicit c =>\n      SQL(\"update language set experience = 999 where name = 'Scala'\").executeUpdate()\n    }\n  }\n\n  def delete: Int = {\n    db.withConnection { implicit c =>\n      SQL(\"delete from language where name = 'C'\").executeUpdate()\n    }\n  }\n...\n```\n\n\u8fd4\u308a\u5024\u306f\u66f4\u65b0\u306b\u6210\u529f\u3057\u305f\u30ec\u30b3\u30fc\u30c9\u306e\u4ef6\u6570\u3067\u3059\u3002\n\n### \u5024\u3092\u5f8c\u304b\u3089\u5165\u308c\u308b\u3084\u3064(\u540d\u524d\u308f\u304b\u3089\u306a\u3044)\nSQL\u306b`{id}`(id\u306f\u4efb\u610f\u306e\u6587\u5b57\u5217)\u3068\u66f8\u3044\u3066\u304a\u3044\u3066\u3001\u3042\u3068\u3067`on`\u3092\u4ed8\u3051\u8db3\u3059\u3068\u3067\u304d\u307e\u3059\u3002\n\n```scala:app/models/DBAccess.scala\n...\n  def search(language: String): Option[Map[String,Any]] = {\n    db.withConnection { implicit c =>\n      SQL(\"SELECT * FROM language where name = {language}\").on(\"language\" -> language).as(mapper.singleOpt)\n    }\n  }\n...\n```\n\n`on`\u306f\u30de\u30c3\u30d7\u3068\u540c\u3058\u8981\u9818\u3067\u66f8\u304d\u307e\u3059\u3002\n\n### \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\n`db.withConnection`\u3092`db.withTransaction`\u306b\u5909\u3048\u307e\u3057\u3087\u3046\u3002\u305d\u308c\u3060\u3051\u3002\n\n# \u304a\u308f\u308a\u306b\n\u4eca\u56de\u306f\u30ec\u30b3\u30fc\u30c9\u306e\u53d6\u5f97\u3067\u3059\u3054\u304f\u82e6\u52b4\u3057\u307e\u3057\u305f\u3002\n\u6700\u521d\u306f\u30d1\u30fc\u30b5\u306e\u66f8\u304d\u65b9\u304c\u5168\u304f\u308f\u304b\u3089\u305a\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3068\u306b\u3089\u3081\u3063\u3053\u3057\u306a\u304c\u3089\u3001\u66f8\u3044\u3066\u306f\u30a8\u30e9\u30fc\u66f8\u3044\u3066\u306f\u30a8\u30e9\u30fc\u30fb\u30fb\u30fb\n\u30d1\u30fc\u30b5\u66f8\u304f\u306b\u306f\u30ab\u30e9\u30e0\u3092\u5168\u90e8\u66f8\u304b\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u6c17\u304c\u3057\u307e\u3059\u304c\u3001\u30ab\u30e9\u30e0\u6570\u304c\u591a\u3044\u3068\u5927\u5909\u305d\u3046\u3067\u3059\u306d\u3002\n`Slick`\u3060\u3063\u305f\u3089\u3053\u3093\u306a\u306b\u5927\u5909\u3067\u306f\u7121\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u306a\u3093\u304b\u3084\u308a\u65b9\u9593\u9055\u3048\u3066\u308b\u306e\u304b\u306a\u30fb\u30fb\u30fb\uff1f\n\u4e00\u5fdc\u76ee\u7684\u306f\u9054\u6210\u3057\u307e\u3057\u305f\u304c\u3001\u4e0d\u660e\u70b9\u304c\u3068\u3066\u3082\u6b8b\u3063\u3066\u307e\u3059\u3002\u5f15\u304d\u7d9a\u304d\u4f7f\u3063\u3066\u307f\u3066\u5f90\u3005\u306b\u7406\u89e3\u3057\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u8a18\u4e8b\u66f8\u3044\u3066\u3044\u308b\u9014\u4e2d\u3067\u75b2\u308c\u3066\u304d\u3066\u3001\u6587\u4f53\u3068\u304b\u5d29\u308c\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u76f4\u3059\u6c17\u529b\u304c\u7121\u3044\u306e\u3067\u8a31\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3002\u3002\nScala\u3067PlayFramework\u30b7\u30ea\u30fc\u30ba\u306f\u4e00\u65e6\u3053\u308c\u3067\u304a\u3057\u307e\u3044\u3067\u3059\u3002\n\u6307\u6458\u3068\u304b\u30a2\u30c9\u30d0\u30a4\u30b9\u3068\u304b\u3042\u3063\u305f\u3089\u305c\u3072\u304f\u3060\u3055\u3044\u3002\u304a\u9858\u3044\u3057\u307e\u3059\uff01\n", "tags": ["Scala", "PlayFramework"]}