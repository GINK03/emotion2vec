{"context": "Yesod\u306fCSRF\u5bfe\u7b56\u306e\u30b5\u30fc\u30d0\u5074\u51e6\u7406\u3068\u3057\u3066defaultCsrfMiddleware \u3068\u3044\u3046Yesod Middleware\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u306fYesod Advent Calendar 2016|9\u65e5\u76ee\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001CSRF\u5bfe\u7b56\u306f\u30b5\u30fc\u30d0\u5074\u3060\u3051\u3067\u306f\u5f53\u7136\u306a\u304c\u3089\u4e0d\u5145\u5206\u3067\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306b\u3082\u5bfe\u51e6\u304c\u5fc5\u8981\u3067\u3059\u3002\u3068\u3053\u308d\u304c\u56f0\u3063\u305f\u3053\u3068\u306b\u3053\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u5bfe\u51e6\u304c\u306a\u3055\u308c\u3066\u3044\u306a\u3044\u51e6\u7406\u304c\u898b\u3042\u305f\u308a\u307e\u3059\u3002\n\u4e2d\u3067\u3082\u56f0\u308b\u306e\u304c\u30ed\u30b0\u30a2\u30a6\u30c8\u51e6\u7406\u3067\u3001\u5358\u7d14\u306bdefaultCsrfMiddleware\u3092\u4f7f\u3046\u3068\u30ed\u30b0\u30a2\u30a6\u30c8\u51e6\u7406\uff08=/auth/logout\u3078\u306e\u30a2\u30af\u30bb\u30b9\uff09\u3067CSRF\u30c1\u30a7\u30c3\u30af\u3067NG\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u3001\u30ed\u30b0\u30a2\u30a6\u30c8\u306b\u5931\u6557\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u306b\u5bfe\u51e6\u3059\u308b\uff11\u3064\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001\u7279\u5b9a\u30d1\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6642\u306bCSRF\u5bfe\u7b56\u3092\u884c\u308f\u306a\u3044\u3088\u3046\u306b\u3059\u308bMiddleware\u3092\u4f5c\u308a\u3001defaultCsrfMiddleware\u306e\u4ee3\u308f\u308a\u306b\u4f7f\u3046\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3002\n\nMiddleware.hs\n{-# LANGUAGE OverloadedStrings #-}\nmodule Lib.Middleware (\n    csrfMiddleware\n) where\n\nimport GHC.Base\nimport Yesod\nimport Network.Wai (Request(rawPathInfo))\nimport Data.Textual.Encoding (decodeUtf8)\nimport Data.Text (Text, isSuffixOf)\n\ncsrfMiddleware :: Yesod site =>\n    Route site -> HandlerT site IO res -> HandlerT site IO res\ncsrfMiddleware logoutRoute handler = do\n    path <- getRequestPath\n    renderFunc <- getUrlRender\n    logoutPath <- return $ renderFunc logoutRoute\n    if isSuffixOf path logoutPath then\n        handler\n      else\n        defaultCsrfMiddleware handler\n\ngetRequestPath :: MonadHandler m => m Text\ngetRequestPath = getRequest\n    >>= return . reqWaiRequest\n    >>= return . rawPathInfo\n    >>= return . decodeUtf8\n\n\n\u6b21\u306e\u3088\u3046\u306a\u8003\u3048\u65b9\u3067\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\n\nCSRF\u30c1\u30a7\u30c3\u30af\u3092\u884c\u308f\u306a\u3044\u30ea\u30bd\u30fc\u30b9\u3092\u5f15\u6570\u3067\u3082\u3089\u3046\n\u3053\u306e\u3088\u3046\u306a\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u306f\u30cf\u30f3\u30c9\u30e9\u95a2\u6570\u3092\u305d\u306e\u307e\u307e\u547c\u3073\u51fa\u3059\n\u305d\u308c\u4ee5\u5916\u306e\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u306fYesod\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b defaultCsrfMiddleware \u3092\u4ecb\u3057\u3066\u30cf\u30f3\u30c9\u30e9\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\n\n\u3053\u306eYesod Middleware\u3092\u4f7f\u3046\u306b\u306f\u3001Foundation.hs\u306e\u4e2d\u306edefaultCsrfMiddleware\u3092\u4f7f\u3063\u3066\u3044\u308b\u884c\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\nFoundation.hs\nyesodMiddleware = csrfMiddleware (AuthR LogoutR) . defaultYesodMiddleware\n\n\n\u7406\u60f3\u7684\u306b\u306fCSRF\u5bfe\u7b56\u304c\u6210\u3055\u308c\u3066\u3044\u306a\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u898b\u3064\u3051\u305f\u3089\u4fee\u6b63\u3057\u3066Pull Request\u306a\u308a\u3067\u672c\u5bb6\u306b\u53d6\u308a\u8fbc\u3093\u3067\u3082\u3089\u3046\u306e\u304c\u3044\u3044\u306e\u3067\u3057\u3087\u3046\u3051\u308c\u3069\u3082\u3001\u3053\u306e\u3088\u3046\u306a\u65b9\u6cd5\u3082\u3042\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3054\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\nYesod\u306fCSRF\u5bfe\u7b56\u306e\u30b5\u30fc\u30d0\u5074\u51e6\u7406\u3068\u3057\u3066``` defaultCsrfMiddleware ``` \u3068\u3044\u3046Yesod Middleware\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u306f[Yesod Advent Calendar 2016|9\u65e5\u76ee](http://qiita.com/jabaraster/items/f4e969613349f79f9295)\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\n\n\u305f\u3060\u3001CSRF\u5bfe\u7b56\u306f\u30b5\u30fc\u30d0\u5074\u3060\u3051\u3067\u306f\u5f53\u7136\u306a\u304c\u3089\u4e0d\u5145\u5206\u3067\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306b\u3082\u5bfe\u51e6\u304c\u5fc5\u8981\u3067\u3059\u3002\u3068\u3053\u308d\u304c\u56f0\u3063\u305f\u3053\u3068\u306b\u3053\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u5bfe\u51e6\u304c\u306a\u3055\u308c\u3066\u3044\u306a\u3044\u51e6\u7406\u304c\u898b\u3042\u305f\u308a\u307e\u3059\u3002\n\n\u4e2d\u3067\u3082\u56f0\u308b\u306e\u304c\u30ed\u30b0\u30a2\u30a6\u30c8\u51e6\u7406\u3067\u3001\u5358\u7d14\u306b``` defaultCsrfMiddleware ```\u3092\u4f7f\u3046\u3068\u30ed\u30b0\u30a2\u30a6\u30c8\u51e6\u7406\uff08=/auth/logout\u3078\u306e\u30a2\u30af\u30bb\u30b9\uff09\u3067CSRF\u30c1\u30a7\u30c3\u30af\u3067NG\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u3001\u30ed\u30b0\u30a2\u30a6\u30c8\u306b\u5931\u6557\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n![yesod_permission_denied.png](https://qiita-image-store.s3.amazonaws.com/0/10225/c6300754-5c61-b21e-9bec-eb53e1ee7753.png)\n\n\u3053\u308c\u306b\u5bfe\u51e6\u3059\u308b\uff11\u3064\u306e\u65b9\u6cd5\u3068\u3057\u3066\u3001\u7279\u5b9a\u30d1\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6642\u306bCSRF\u5bfe\u7b56\u3092\u884c\u308f\u306a\u3044\u3088\u3046\u306b\u3059\u308bMiddleware\u3092\u4f5c\u308a\u3001``` defaultCsrfMiddleware ```\u306e\u4ee3\u308f\u308a\u306b\u4f7f\u3046\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3002\n\n```Middleware.hs\n{-# LANGUAGE OverloadedStrings #-}\nmodule Lib.Middleware (\n    csrfMiddleware\n) where\n\nimport GHC.Base\nimport Yesod\nimport Network.Wai (Request(rawPathInfo))\nimport Data.Textual.Encoding (decodeUtf8)\nimport Data.Text (Text, isSuffixOf)\n\ncsrfMiddleware :: Yesod site =>\n    Route site -> HandlerT site IO res -> HandlerT site IO res\ncsrfMiddleware logoutRoute handler = do\n    path <- getRequestPath\n    renderFunc <- getUrlRender\n    logoutPath <- return $ renderFunc logoutRoute\n    if isSuffixOf path logoutPath then\n        handler\n      else\n        defaultCsrfMiddleware handler\n\ngetRequestPath :: MonadHandler m => m Text\ngetRequestPath = getRequest\n    >>= return . reqWaiRequest\n    >>= return . rawPathInfo\n    >>= return . decodeUtf8\n```\n\n\u6b21\u306e\u3088\u3046\u306a\u8003\u3048\u65b9\u3067\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\n\n* CSRF\u30c1\u30a7\u30c3\u30af\u3092\u884c\u308f\u306a\u3044\u30ea\u30bd\u30fc\u30b9\u3092\u5f15\u6570\u3067\u3082\u3089\u3046\n* \u3053\u306e\u3088\u3046\u306a\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u306f\u30cf\u30f3\u30c9\u30e9\u95a2\u6570\u3092\u305d\u306e\u307e\u307e\u547c\u3073\u51fa\u3059\n* \u305d\u308c\u4ee5\u5916\u306e\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u306fYesod\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b ``` defaultCsrfMiddleware ``` \u3092\u4ecb\u3057\u3066\u30cf\u30f3\u30c9\u30e9\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\n\n\u3053\u306eYesod Middleware\u3092\u4f7f\u3046\u306b\u306f\u3001``` Foundation.hs ```\u306e\u4e2d\u306e``` defaultCsrfMiddleware ```\u3092\u4f7f\u3063\u3066\u3044\u308b\u884c\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\n```Foundation.hs\nyesodMiddleware = csrfMiddleware (AuthR LogoutR) . defaultYesodMiddleware\n```\n\n\u7406\u60f3\u7684\u306b\u306fCSRF\u5bfe\u7b56\u304c\u6210\u3055\u308c\u3066\u3044\u306a\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u898b\u3064\u3051\u305f\u3089\u4fee\u6b63\u3057\u3066Pull Request\u306a\u308a\u3067\u672c\u5bb6\u306b\u53d6\u308a\u8fbc\u3093\u3067\u3082\u3089\u3046\u306e\u304c\u3044\u3044\u306e\u3067\u3057\u3087\u3046\u3051\u308c\u3069\u3082\u3001\u3053\u306e\u3088\u3046\u306a\u65b9\u6cd5\u3082\u3042\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3054\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n", "tags": ["yesod", "Haskell"]}