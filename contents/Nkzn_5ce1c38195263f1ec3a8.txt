{"context": " More than 1 year has passed since last update.JS\u3055\u3093\u3068\u622f\u308c\u3066\u3044\u305f\u3089\u30ab\u30ea\u30fc\u5316\u304c\u5206\u304b\u3063\u305f\u6c17\u304c\u3059\u308b\u306e\u3067Kotlin\u3067\u3082\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\n\u5143\u306e\u30b3\u30fc\u30c9\n\u65e5\u5831\u306e\u4e2d\u306a\u3069\u3067\u4f7f\u308f\u308c\u308b\u3001\u52e4\u52d9\u6642\u9593\u3092\u8868\u3059\u6642\u523b\u30c7\u30fc\u30bf\u3092\u3044\u3044\u611f\u3058\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3059\u308b\u51e6\u7406\u306b\u3064\u3044\u3066\u8003\u3048\u307e\u3059\u3002\n\n\u958b\u59cb\u6642\u523b\n\u7d42\u4e86\u6642\u523b\n\u4f11\u61a9\u6642\u9593\n\n\u4e0a\u8a18\u306e\u30c7\u30fc\u30bf\u3067\u3001\u52e4\u52d9\u6642\u9593\u3068\u4f11\u61a9\u6642\u9593\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\n\nBeforeCurrying.kt\nimport java.text.SimpleDateFormat\nimport java.util.Calendar\nimport java.util.Date\n\nfun main(args: Array<String>) {\n    val startTime = Time(9,0)\n    val endTime = Time(18,15)\n    val breakTime = Time(1,15)\n\n    val startTimeStr = formatTime(\"HH:mm\", startTime)\n    val endTimeStr = formatTime(\"HH:mm\", endTime)\n    val breakTimeStr = formatTime(\"HH\u6642\u9593mm\u5206\", breakTime)\n\n    println(\"\u52e4\u52d9\u6642\u9593: $startTimeStr \u301c $endTimeStr\")\n    println(\"\u4f11\u61a9\u6642\u9593: $breakTimeStr\")\n    // \u52e4\u52d9\u6642\u9593: 09:00 \u301c 18:15\n    // \u4f11\u61a9\u6642\u9593: 01\u6642\u959315\u5206\n}\n\nfun formatTime(format: String, time: Time): String {\n    val formatter = SimpleDateFormat(format)\n    return formatter.format(timeToDate(time))\n}\n\nfun timeToDate(time: Time): Date {\n    val cal = Calendar.getInstance()\n    cal.set(Calendar.HOUR_OF_DAY, time.hour)\n    cal.set(Calendar.MINUTE, time.min)\n    return cal.getTime()\n}\n\ndata class Time(val hour:Int, val min:Int)\n\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3067\u618e\u3057\u307f\u3092\u611f\u3058\u308b\u306e\u306f\u6b21\u306e\u3042\u305f\u308a\u3067\u3059\u3002\n\nkotlin\nval startTimeStr = formatTime(\"HH:mm\", startTime)\nval endTimeStr = formatTime(\"HH:mm\", endTime)\nval breakTimeStr = formatTime(\"HH\u6642\u9593mm\u5206\", breakTime)\n\n\nHH:mm\u3068HH\u6642\u9593mm\u5206\u3068\u3044\u3046\u4e8c\u7a2e\u985e\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u3042\u308b\u306e\u3067\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6587\u5b57\u5217\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6301\u3064\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u306f\u3088\u3044\u3053\u3068\u3067\u3059\u3002\u307e\u305f\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5bfe\u8c61\u306e\u6642\u523b\u30c7\u30fc\u30bf\u3082\u5165\u308c\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u5f15\u6570\u304c\u3075\u305f\u3064\u306b\u306a\u308b\u306e\u3082\u9806\u5f53\u3067\u3057\u3087\u3046\u3002\n\u305f\u3060\u3001startTime\u3068endTime\u306b\u5411\u3051\u3066\u3001HH:mm\u3092\u4e8c\u5ea6\u3082\u8a18\u8ff0\u3057\u3066\u3044\u308b\u306e\u306f\u3044\u305f\u3060\u3051\u307e\u305b\u3093\u3002\u540c\u3058\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u5171\u901a\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u3079\u304d\u3067\u3059\u3002\nHH:mm\u3092\u6587\u5b57\u5217\u5b9a\u6570\u3068\u3057\u3066\u629c\u304d\u51fa\u305b\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\u3000\u305d\u308c\u306f\u305d\u308c\u3067\u3088\u3044\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u30ab\u30ea\u30fc\u5316\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30ab\u30ea\u30fc\u5316\u5f8c\u306e\u30b3\u30fc\u30c9\n\u3068\u3044\u3046\u308f\u3051\u3067\u30ab\u30ea\u30fc\u5316\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nCurried.kt\nimport java.text.SimpleDateFormat\nimport java.util.Calendar\nimport java.util.Date\n\nfun main(args: Array<String>) {\n    val startTime = Time(9,0)\n    val endTime = Time(18,15)\n    val breakTime = Time(1,15)\n\n    val formatColonTime = timeFormatter(\"HH:mm\")\n    val formatSpanTime = timeFormatter(\"HH\u6642\u9593mm\u5206\")\n\n    val startTimeStr = formatColonTime(startTime)\n    val endTimeStr = formatColonTime(endTime)\n    val breakTimeStr = formatSpanTime(breakTime)\n\n    println(\"\u52e4\u52d9\u6642\u9593: $startTimeStr \u301c $endTimeStr\")\n    println(\"\u4f11\u61a9\u6642\u9593: $breakTimeStr\")\n    // \u52e4\u52d9\u6642\u9593: 09:00 \u301c 18:15\n    // \u4f11\u61a9\u6642\u9593: 01\u6642\u959315\u5206\n}\n\nfun timeFormatter(format: String): (Time) -> String {\n    val formatter = SimpleDateFormat(format)\n    return {time -> formatter.format(timeToDate(time))}    \n}\n\nfun timeToDate(time: Time): Date {\n    val cal = Calendar.getInstance()\n    cal.set(Calendar.HOUR_OF_DAY, time.hour)\n    cal.set(Calendar.MINUTE, time.min)\n    return cal.getTime()\n}\n\ndata class Time(val hour:Int, val min:Int)\n\n\n\u65b0\u8a2d\u3057\u305ftimeFormatter\u95a2\u6570\u306f\u3001\u30ab\u30ea\u30fc\u5316\u524d\u306eformatTime\u306b\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001\u5f15\u6570\u3068\u623b\u308a\u5024\u304c\u9055\u3044\u307e\u3059\u3002\n\n\u30ab\u30ea\u30fc\u5316\u524d\nfun formatTime(format: String, time: Time): String {\n    val formatter = SimpleDateFormat(format)\n    return formatter.format(timeToDate(time))\n}\n\n\n\n\u30ab\u30ea\u30fc\u5316\u5f8c\nfun timeFormatter(format: String): (Time) -> String {\n    val formatter = SimpleDateFormat(format)\n    return {time -> formatter.format(timeToDate(time))} // \u30af\u30ed\u30fc\u30b8\u30e3\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u305f\n}\n\n\n\u3053\u308c\u306b\u3088\u308a\u3001\u7528\u9014\u306b\u5fdc\u3058\u3066\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6587\u5b57\u5217\u3092\u9069\u7528\u6e08\u307f\u306e\u95a2\u6570\u3092\u751f\u307f\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nkotlin\nval formatColonTime = timeFormatter(\"HH:mm\") // \u30b3\u30ed\u30f3\u533a\u5207\u308a\u306e\u8868\u73fe\u7528\nval formatSpanTime = timeFormatter(\"HH\u6642\u9593mm\u5206\") // \u6642\u9593\u306e\u8868\u73fe\u7528\n\nval startTimeStr = formatColonTime(startTime)\nval endTimeStr = formatColonTime(endTime)\nval breakTimeStr = formatSpanTime(breakTime)\n\n\n\u3053\u306e\u6642\u70b9\u3067\u3082\u5272\u3068\u5b09\u3057\u3044\u3067\u3059\u304c\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u7a2e\u985e\u304c\u591a\u304f\u306a\u3063\u3066\u304d\u305f\u308a\u3059\u308b\u3068\u3001\u3082\u3063\u3068\u5b09\u3057\u305d\u3046\u3067\u3059\u306d\u3002\n\n\u307e\u3068\u3081\nKotlin\u306e\u30ea\u30cf\u30d3\u30ea\u3092\u517c\u306d\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u8907\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6642\u9593\u5dee\u3067\u9069\u7528\u3057\u305f\u3044\u3068\u304d\u306b\u306f\u30ab\u30ea\u30fc\u5316\u3059\u3054\u3044\u4fbf\u5229\u3067\u3059\u306d\u3002\u72b6\u614b\u3092\u6301\u305f\u306a\u3044\u306e\u3082\u9b45\u529b\u7684\u3067\u3059\u3002\n\n\u5ba3\u4f1d\nKotlin\u3092\u66f8\u304f\u304a\u4ed5\u4e8b\u306f\u3057\u3070\u3089\u304f\u306a\u3055\u305d\u3046\u3067\u3059\u304c\u3001\u30a6\u30a9\u30fc\u30bf\u30fc\u30bb\u30eb\u682a\u5f0f\u4f1a\u793e\u3067\u306f\u8fb2\u696dIT\u306b\u8208\u5473\u306e\u3042\u308b\u30a8\u30f3\u30b8\u30cb\u30a2\u3092\u52df\u96c6\u3057\u3066\u3044\u307e\u3059\uff01\n\n\u8fb2\u696d\u652f\u63f4\u30b7\u30b9\u30c6\u30e0\u300c\u30a2\u30b0\u30ea\u30ce\u30fc\u30c8\u300d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2 \uff06 \u30c7\u30b6\u30a4\u30ca\u30fc\u5927\u52df\u96c6\uff01\uff01 - \u30a6\u30a9\u30fc\u30bf\u30fc\u30bb\u30eb\u682a\u5f0f\u4f1a\u793e\u306e\u6c42\u4eba - Wantedly\n\n\nJS\u3055\u3093\u3068\u622f\u308c\u3066\u3044\u305f\u3089\u30ab\u30ea\u30fc\u5316\u304c\u5206\u304b\u3063\u305f\u6c17\u304c\u3059\u308b\u306e\u3067Kotlin\u3067\u3082\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\n## \u5143\u306e\u30b3\u30fc\u30c9\n\n\u65e5\u5831\u306e\u4e2d\u306a\u3069\u3067\u4f7f\u308f\u308c\u308b\u3001\u52e4\u52d9\u6642\u9593\u3092\u8868\u3059\u6642\u523b\u30c7\u30fc\u30bf\u3092\u3044\u3044\u611f\u3058\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3059\u308b\u51e6\u7406\u306b\u3064\u3044\u3066\u8003\u3048\u307e\u3059\u3002\n\n* \u958b\u59cb\u6642\u523b\n* \u7d42\u4e86\u6642\u523b\n* \u4f11\u61a9\u6642\u9593\n\n\u4e0a\u8a18\u306e\u30c7\u30fc\u30bf\u3067\u3001\u52e4\u52d9\u6642\u9593\u3068\u4f11\u61a9\u6642\u9593\u3092\u8868\u73fe\u3057\u307e\u3059\u3002\n\n```scala:BeforeCurrying.kt\nimport java.text.SimpleDateFormat\nimport java.util.Calendar\nimport java.util.Date\n\nfun main(args: Array<String>) {\n    val startTime = Time(9,0)\n    val endTime = Time(18,15)\n    val breakTime = Time(1,15)\n\n    val startTimeStr = formatTime(\"HH:mm\", startTime)\n    val endTimeStr = formatTime(\"HH:mm\", endTime)\n    val breakTimeStr = formatTime(\"HH\u6642\u9593mm\u5206\", breakTime)\n    \n    println(\"\u52e4\u52d9\u6642\u9593: $startTimeStr \u301c $endTimeStr\")\n    println(\"\u4f11\u61a9\u6642\u9593: $breakTimeStr\")\n    // \u52e4\u52d9\u6642\u9593: 09:00 \u301c 18:15\n    // \u4f11\u61a9\u6642\u9593: 01\u6642\u959315\u5206\n}\n\nfun formatTime(format: String, time: Time): String {\n    val formatter = SimpleDateFormat(format)\n    return formatter.format(timeToDate(time))\n}\n\nfun timeToDate(time: Time): Date {\n    val cal = Calendar.getInstance()\n    cal.set(Calendar.HOUR_OF_DAY, time.hour)\n    cal.set(Calendar.MINUTE, time.min)\n    return cal.getTime()\n}\n\ndata class Time(val hour:Int, val min:Int)\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3067\u618e\u3057\u307f\u3092\u611f\u3058\u308b\u306e\u306f\u6b21\u306e\u3042\u305f\u308a\u3067\u3059\u3002\n\n```scala:kotlin\nval startTimeStr = formatTime(\"HH:mm\", startTime)\nval endTimeStr = formatTime(\"HH:mm\", endTime)\nval breakTimeStr = formatTime(\"HH\u6642\u9593mm\u5206\", breakTime)\n```\n\n`HH:mm`\u3068`HH\u6642\u9593mm\u5206`\u3068\u3044\u3046\u4e8c\u7a2e\u985e\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u3042\u308b\u306e\u3067\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6587\u5b57\u5217\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u6301\u3064\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u306e\u306f\u3088\u3044\u3053\u3068\u3067\u3059\u3002\u307e\u305f\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5bfe\u8c61\u306e\u6642\u523b\u30c7\u30fc\u30bf\u3082\u5165\u308c\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\u3001\u5f15\u6570\u304c\u3075\u305f\u3064\u306b\u306a\u308b\u306e\u3082\u9806\u5f53\u3067\u3057\u3087\u3046\u3002\n\n\u305f\u3060\u3001startTime\u3068endTime\u306b\u5411\u3051\u3066\u3001`HH:mm`\u3092\u4e8c\u5ea6\u3082\u8a18\u8ff0\u3057\u3066\u3044\u308b\u306e\u306f\u3044\u305f\u3060\u3051\u307e\u305b\u3093\u3002\u540c\u3058\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u5171\u901a\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u3079\u304d\u3067\u3059\u3002\n\n`HH:mm`\u3092\u6587\u5b57\u5217\u5b9a\u6570\u3068\u3057\u3066\u629c\u304d\u51fa\u305b\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\u3000\u305d\u308c\u306f\u305d\u308c\u3067\u3088\u3044\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u30ab\u30ea\u30fc\u5316\u3057\u307e\u3057\u3087\u3046\u3002\n\n## \u30ab\u30ea\u30fc\u5316\u5f8c\u306e\u30b3\u30fc\u30c9\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u30ab\u30ea\u30fc\u5316\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```scala:Curried.kt\nimport java.text.SimpleDateFormat\nimport java.util.Calendar\nimport java.util.Date\n\nfun main(args: Array<String>) {\n    val startTime = Time(9,0)\n    val endTime = Time(18,15)\n    val breakTime = Time(1,15)\n\n    val formatColonTime = timeFormatter(\"HH:mm\")\n    val formatSpanTime = timeFormatter(\"HH\u6642\u9593mm\u5206\")\n    \n    val startTimeStr = formatColonTime(startTime)\n    val endTimeStr = formatColonTime(endTime)\n    val breakTimeStr = formatSpanTime(breakTime)\n    \n    println(\"\u52e4\u52d9\u6642\u9593: $startTimeStr \u301c $endTimeStr\")\n    println(\"\u4f11\u61a9\u6642\u9593: $breakTimeStr\")\n    // \u52e4\u52d9\u6642\u9593: 09:00 \u301c 18:15\n    // \u4f11\u61a9\u6642\u9593: 01\u6642\u959315\u5206\n}\n\nfun timeFormatter(format: String): (Time) -> String {\n    val formatter = SimpleDateFormat(format)\n    return {time -> formatter.format(timeToDate(time))}    \n}\n\nfun timeToDate(time: Time): Date {\n    val cal = Calendar.getInstance()\n    cal.set(Calendar.HOUR_OF_DAY, time.hour)\n    cal.set(Calendar.MINUTE, time.min)\n    return cal.getTime()\n}\n\ndata class Time(val hour:Int, val min:Int)\n```\n\n\u65b0\u8a2d\u3057\u305ftimeFormatter\u95a2\u6570\u306f\u3001\u30ab\u30ea\u30fc\u5316\u524d\u306eformatTime\u306b\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001\u5f15\u6570\u3068\u623b\u308a\u5024\u304c\u9055\u3044\u307e\u3059\u3002\n\n```scala:\u30ab\u30ea\u30fc\u5316\u524d\nfun formatTime(format: String, time: Time): String {\n    val formatter = SimpleDateFormat(format)\n    return formatter.format(timeToDate(time))\n}\n```\n\n```scala:\u30ab\u30ea\u30fc\u5316\u5f8c\nfun timeFormatter(format: String): (Time) -> String {\n    val formatter = SimpleDateFormat(format)\n    return {time -> formatter.format(timeToDate(time))} // \u30af\u30ed\u30fc\u30b8\u30e3\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u305f\n}\n```\n\n\u3053\u308c\u306b\u3088\u308a\u3001\u7528\u9014\u306b\u5fdc\u3058\u3066\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6587\u5b57\u5217\u3092\u9069\u7528\u6e08\u307f\u306e\u95a2\u6570\u3092\u751f\u307f\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```scala:kotlin\nval formatColonTime = timeFormatter(\"HH:mm\") // \u30b3\u30ed\u30f3\u533a\u5207\u308a\u306e\u8868\u73fe\u7528\nval formatSpanTime = timeFormatter(\"HH\u6642\u9593mm\u5206\") // \u6642\u9593\u306e\u8868\u73fe\u7528\n\nval startTimeStr = formatColonTime(startTime)\nval endTimeStr = formatColonTime(endTime)\nval breakTimeStr = formatSpanTime(breakTime)\n```\n\n\u3053\u306e\u6642\u70b9\u3067\u3082\u5272\u3068\u5b09\u3057\u3044\u3067\u3059\u304c\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u7a2e\u985e\u304c\u591a\u304f\u306a\u3063\u3066\u304d\u305f\u308a\u3059\u308b\u3068\u3001\u3082\u3063\u3068\u5b09\u3057\u305d\u3046\u3067\u3059\u306d\u3002\n\n## \u307e\u3068\u3081\n\nKotlin\u306e\u30ea\u30cf\u30d3\u30ea\u3092\u517c\u306d\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u8907\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6642\u9593\u5dee\u3067\u9069\u7528\u3057\u305f\u3044\u3068\u304d\u306b\u306f\u30ab\u30ea\u30fc\u5316\u3059\u3054\u3044\u4fbf\u5229\u3067\u3059\u306d\u3002\u72b6\u614b\u3092\u6301\u305f\u306a\u3044\u306e\u3082\u9b45\u529b\u7684\u3067\u3059\u3002\n\n## \u5ba3\u4f1d\n\nKotlin\u3092\u66f8\u304f\u304a\u4ed5\u4e8b\u306f\u3057\u3070\u3089\u304f\u306a\u3055\u305d\u3046\u3067\u3059\u304c\u3001\u30a6\u30a9\u30fc\u30bf\u30fc\u30bb\u30eb\u682a\u5f0f\u4f1a\u793e\u3067\u306f\u8fb2\u696dIT\u306b\u8208\u5473\u306e\u3042\u308b\u30a8\u30f3\u30b8\u30cb\u30a2\u3092\u52df\u96c6\u3057\u3066\u3044\u307e\u3059\uff01\n\n* [\u8fb2\u696d\u652f\u63f4\u30b7\u30b9\u30c6\u30e0\u300c\u30a2\u30b0\u30ea\u30ce\u30fc\u30c8\u300d\u306e\u30a8\u30f3\u30b8\u30cb\u30a2 \uff06 \u30c7\u30b6\u30a4\u30ca\u30fc\u5927\u52df\u96c6\uff01\uff01 - \u30a6\u30a9\u30fc\u30bf\u30fc\u30bb\u30eb\u682a\u5f0f\u4f1a\u793e\u306e\u6c42\u4eba - Wantedly](https://www.wantedly.com/projects/5103)\n", "tags": ["Kotlin"]}