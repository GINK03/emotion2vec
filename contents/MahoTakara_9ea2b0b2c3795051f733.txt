{"context": "\u30af\u30e9\u30a6\u30c9\u306e\u6642\u9593\u8ab2\u91d1\u306e\u30d9\u30a2\u30e1\u30bf\u30eb\u30b5\u30fc\u30d0\u30fc\u3067\u3001GPU\u304c\u4f7f\u3048\u308b\u3068\u8a00\u3063\u3066\u3082\u3001\u3069\u3046\u3084\u3063\u3066\u4f7f\u3046\u3093\u3060\u308d\u3046\uff1f   GPU(Graphics Processing Units) \u306a\u3093\u3060\u304b\u3089\u3001\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u63cf\u753b\u3057\u3066\u3001\u4f55\u51e6\u304b\u306b\u8868\u793a\u3059\u308b\u306e\u304b\u306d\uff1f\u3000\u3068\u601d\u3046\u306e\u304c\u666e\u901a\u3067\u3059\u3088\u306d\u3002 \u50d5\u3082\u6700\u521d\u306f\u3001\u305d\u3093\u306a\u98a8\u306b\u601d\u3063\u3066\u307e\u3057\u305f\u3002 \u3057\u304b\u3057GPU\u306fGPU\u3067\u3082\u3001\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u63cf\u753b\u306e\u305f\u3081\u306eGPU\u3067\u306f\u306a\u304f\u3066\u3001\u6a5f\u68b0\u5b66\u7fd2\u3068\u304b\u306b\u5229\u7528\u3059\u308b\u305f\u3081\u306e\u6c4e\u7528\u8a08\u7b97\u7528\u306e\u305f\u3081\u306eGPU\u306a\u3093\u3067\u3059\u306d\u3002 \n\n\u30b5\u30fc\u30d0\u30fc\u306eGPU\u3063\u3066\u4f55\u3088\uff1f\u3001\u4f55\u304b\u826f\u3044\u4e8b\u3042\u308b\u306e\u304b\u306d\uff1f\n\u3053\u306e\u69d8\u306a\u6c4e\u7528\u8a08\u7b97\u7528\u306eGPU\u306e\u4e8b\u3092 GPGPU (General-Purpose computing on Graphics Processing Units) \u3068\u547c\u3093\u3067\u533a\u5225\u3057\u3066\u3044\u307e\u3059\u3002\n\u300c\u4ffa\u306ePC\u306e NVidia GTX GeForce \u3068\u4f55\u304c\u9055\u3046\u306e\uff1f\u300d\u3068\u304b\u805e\u304b\u308c\u308b\u3068\u3001\u3056\u3063\u3068\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u7e4b\u3052\u308b\u305f\u3081\u306e HDMI\u3001DVI\u3001VGA \u306e\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u30dd\u30fc\u30c8\u304c\u4ed8\u3044\u3066\u307e\u305b\u3093\u3002\n\u30e1\u30e2\u30ea\u304c\u6ca2\u5c71\u7a4d\u307e\u308c\u3066\u3044\u307e\u3059\u3002 K80\u3067\u306f24GB\u3001M60\u3067\u306f16GB \u3068\u30b5\u30fc\u30d0\u30fc\u672c\u4f53\u3068\u540c\u3058\u304f\u3089\u3044\u306e\u30e1\u30e2\u30ea\u304c\u30ab\u30fc\u30c9\u306b\u4ed8\u3044\u3066\u3044\u307e\u3059\u3002\n\u9ad8\u901f\u6f14\u7b97\u3092\u9577\u6642\u9593\u5b9f\u884c\u3067\u304d\u308b\u69d8\u306b\u3001\u767a\u71b1\u3092\u6291\u3048\u308b\u305f\u3081\u306b\u52d5\u4f5c\u5468\u6ce2\u6570\u3092\u6291\u3048\u6c17\u5473\u306b\u3001\u51b7\u5374\u6027\u80fd\u91cd\u8996\n\u696d\u52d9\u7528\u306a\u306e\u3067\u3001\u30d7\u30ed\u4ed5\u69d8\u3067\u8010\u4e45\u6027\u304c\u9ad8\u3044\u8a2d\u8a08\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3089\u3001\u5f53\u7136\u306a\u304c\u3089\u3001\u5024\u6bb5\u3082\u9ad8\u3044\n\n\n\u3069\u3046\u3084\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3059\u308b\u306e\u304b\u306d\uff1f\nGPU\u306f\u3001INTEL\u4e92\u63db\u306eCPU\u3067\u306f\u306a\u304f\u3066\u3001\u7570\u306a\u308b\u547d\u4ee4\u6a5f\u68b0\u8a9e\u3067\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u306a\u306e\u3067\u3001\u5c02\u7528\u306e\u958b\u767a\u30c4\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u305d\u306e\u6700\u3082\u666e\u53ca\u3057\u3066\u3044\u308b\u306e\u304c\u3001\u6b21\u306e CUDA \u306a\u3093\u3067\u3059\u306d\u3002\n\nCUDA\uff08Compute Unified Device Architecture\uff1a\u30af\u30fc\u30c0\uff09\u3068\u306f\u3001NVIDIA\u304c\u63d0\u4f9b\u3059\u308bGPU\u5411\u3051\u306eC\u8a00\u8a9e\u306e\u7d71\u5408\u958b\u767a\u74b0\u5883\u3067\u3042\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30e9 (nvcc) \u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u3044\u308b\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\u57fa\u76e4\u3068\u306a\u308b\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\uff0f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u305d\u306e\u3082\u306e\u3092CUDA\u3068\u547c\u3076\u3053\u3068\u3082\u3042\u308b\u3002 \u30a6\u30a3\u30c3\u30ad\u30da\u30c7\u30a3\u30a2 CUDA\n\n\u57fa\u672c\u7684\u306a\u51e6\u7406\u306e\u6d41\u308c\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u672c\u4f53\u304b\u3089\u3001NVIDIA \u306e GPU\u3067\u5b9f\u884c\u3067\u304d\u308b\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u30b3\u30fc\u30c9\u3068\u3001\u30c7\u30fc\u30bf\u3092\u9001\u308a\u8fbc\u3093\u3067\u3001GPU \u3067\u51e6\u7406\u3057\u305f\u7d50\u679c\u3092 \u30b5\u30fc\u30d0\u30fc\u672c\u4f53\u306b\u53d7\u3051\u53d6\u30ea\u307e\u3059\u3002 \n\u5b09\u3057\u3044\u4e8b\u306b\u3001CUDA \u306f \u30a2\u30ad\u30d0\u3067\u58f2\u3063\u3066\u3044\u308b\uff11\u4e07\u5186\u4ee5\u4e0b\u306e GTX GeForce \u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\u304b\u3089\u3001\u6c17\u8efd\u306b\u52d5\u4f5c\u3084\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u59cb\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nCUDA \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u958b\u767a\u74b0\u5883\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nUbuntu 14.04 \u3067\u306f\u3001 \u3053\u306eLinux \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u3001CUDA Toolkit 5.5 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u308c\u3089\u3092\u5229\u7528\u305b\u305a\u306b\u3001NVIDIA\u793e\u304b\u3089\u914d\u5e03\u3055\u308c\u308b\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002 \u3053\u306e\u8cc7\u6599\u306f\u3001NVIDIA\u793e\u306e CUDA Toolkit Documentation v8.0  \u306b\u3042\u308a\u3001\u53c2\u8003\u3057\u306a\u304c\u3089\u3001\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u307e\u305a\u306f \u74b0\u5883\u30c1\u30a7\u30c3\u30af\u304b\u3089\n\u4eca\u56de\u5229\u7528\u3059\u308b\u306e\u306f\u3001Intel Xeon E5-2620 v3 x2 \u306e \uff12CPU 12\u30b3\u30a2 \u3068\u3001Ubuntu 14.04 \u304c\u5c0e\u5165\u3055\u308c\u305f\u30b5\u30fc\u30d0\u30fc\u306b Tesla K80 \u3092\u642d\u8f09\u3055\u308c\u305f\u3001\u30d9\u30a2\u30e1\u30bf\u30eb\u30b5\u30fc\u30d0\u30fc\u3067\u3059\u3002\n\u65e9\u901f\u3001GPU\u30ab\u30fc\u30c9\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\nroot@server1:~# lspci | grep -i nvidia\n83:00.0 3D controller: NVIDIA Corporation GK210GL [Tesla K80] (rev a1)\n84:00.0 3D controller: NVIDIA Corporation GK210GL [Tesla K80] (rev a1)\n\nLinux \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u3066\u3001CUDA \u306e\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u304c\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002 CUDA\u306e\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u304b\u3069\u3046\u304b\u306f\u3001CUDA Toolkit Documentation v8.0  \u306b\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u3002\nroot@server1:~# uname -m && cat /etc/*release\nx86_64\nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=14.04\nDISTRIB_CODENAME=trusty\nDISTRIB_DESCRIPTION=\"Ubuntu 14.04.5 LTS\"\nNAME=\"Ubuntu\"\nVERSION=\"14.04.5 LTS, Trusty Tahr\"\nID=ubuntu\nID_LIKE=debian\nPRETTY_NAME=\"Ubuntu 14.04.5 LTS\"\nVERSION_ID=\"14.04\"\nHOME_URL=\"http://www.ubuntu.com/\"\nSUPPORT_URL=\"http://help.ubuntu.com/\"\nBUG_REPORT_URL=\"http://bugs.launchpad.net/ubuntu/\"\n\n\n\u5fc5\u8981\u30d1\u30c3\u30b1\u30fc\u30b8\u3068 CUDA Tool Kit \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nCUDA\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 Linux\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3001\u8907\u6570\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u5b9f\u884c\u3067\u304d\u308b\u30bf\u30a4\u30d7\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u6bb5\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n# apt-get update\n# apt-get install gcc g++ make linux-source  \n\nCUDA\u306e\u958b\u767a\u74b0\u5883\u306f\u3001NVIDIA\u793e \u306e CUDA \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30b5\u30a4\u30c8\u304b\u3089\u7121\u6599\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002 2016\u5e7410\u670815\u65e5\u73fe\u5728\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3001CUDA Toolkit 8.0 \u3067\u3059\u3002 \u624b\u5143\u306e MAC \u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001\u518d\u3073\u30af\u30e9\u30a6\u30c9\u306e\u30d9\u30a2\u30e1\u30bf\u30eb\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u306e\u306f\u3001\u9762\u5012\u306a\u306e\u3067\u3001\u30af\u30e9\u30a6\u30c9\u306e\u30d9\u30a2\u30e1\u30bf\u30eb\u304b\u3089\u76f4\u63a5 wget \u3067\u53d6\u5f97\u3057\u307e\u3059\u3002\n# mkdir nvidia\n# cd nvidia\n# wget https://developer.nvidia.com/compute/cuda/8.0/prod/local_installers/cuda_8.0.44_linux-run\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\nroot@server1:~/nvidia# sh cuda_8.0.44_linux-run \n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u306e\u8cea\u554f\u306b\u7b54\u3048\u3066\u3044\u304d\u307e\u3059\u3002\nDo you accept the previously read EULA?\naccept/decline/quit: accept\n\nInstall NVIDIA Accelerated Graphics Driver for Linux-x86_64 367.48?\n(y)es/(n)o/(q)uit: y\n\nDo you want to install the OpenGL libraries?\n(y)es/(n)o/(q)uit [ default is yes ]: y\n\nDo you want to run nvidia-xconfig?\nThis will update the system X configuration file so that the NVIDIA X driver\nis used. The pre-existing X configuration file will be backed up.\nThis option should not be used on systems that require a custom\nX configuration, such as systems with multiple GPU vendors.\n(y)es/(n)o/(q)uit [ default is no ]: n\n\nInstall the CUDA 8.0 Toolkit?\n(y)es/(n)o/(q)uit: y\n\nEnter Toolkit Location\n [ default is /usr/local/cuda-8.0 ]: \n\nDo you want to install a symbolic link at /usr/local/cuda?\n(y)es/(n)o/(q)uit: y\n\nInstall the CUDA 8.0 Samples?\n(y)es/(n)o/(q)uit: y\n\nEnter CUDA Samples Location\n [ default is /root ]: \n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u30b7\u30a7\u30eb\u306b\u30d1\u30b9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nroot@server1:~# vi .bashrc\n\n\u4ee5\u4e0b\u306e\u884c\u3092\u8ffd\u52a0\nexport PATH=\"/usr/local/cuda-8.0/bin:$PATH\"\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30ed\u30fc\u30c9\u30d1\u30b9\u3092\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u69d8\u306b\u8ffd\u52a0\nroot@server1:~# cat /etc/ld.so.conf\ninclude /etc/ld.so.conf.d/*.conf\n/usr/local/cuda-8.0/lib64\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u6709\u52b9\u5316\nroot@server1:~/nvidia# ldconfig\n\n\u3053\u308c\u3067\u3001CUDA Toolkit 8.0 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u5b8c\u4e86\u3067\u3059\u3002 \u3053\u308c\u304b\u3089\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e2d\u306b\u3042\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u30c1\u30a7\u30c3\u30af\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e2d\u3067\u3001deviceQueriy \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30c7\u30d0\u30a4\u30b9\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 deviceQuery \u3092\u30d3\u30eb\u30c9\u3059\u308b\u65b9\u6cd5\u306f\u4ee5\u4e0b\u3067\u3059\u3002\nroot@server1:~# cd NVIDIA_CUDA-8.0_Samples/\nroot@server1:~/NVIDIA_CUDA-8.0_Samples# cd 1_Utilities/\nroot@server1:~/NVIDIA_CUDA-8.0_Samples/1_Utilities# cd deviceQuery\nroot@server1:~/NVIDIA_CUDA-8.0_Samples/1_Utilities/deviceQuery# make\n\n\u30b3\u30de\u30f3\u30c9\u304c\u51fa\u6765\u305f\u3089\u5b9f\u884c\u3057\u307e\u3059\u3002 TESLA K80 \u306b\u306f\u3001\uff12\u3064\u306eGPU\u304c\u5165\u3063\u3066\u3044\u3066\u3001\u5408\u8a08\u3067 4992 \u30b3\u30a2\u300122.8GB RAM \u304c\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u3000\u30a2\u30ad\u30d0\u3067\u58f2\u3063\u3066\u3044\u308bGTX 750Ti \u3067\u306f\u3001 640\u30b3\u30a2\u30012GB RAM \u306a\u306e\u3067\u3001\u6841\u9055\u3044\u306e\u8cc7\u6e90\u3067\u3059\u306d\u3002\nroot@server1:~/NVIDIA_CUDA-8.0_Samples/1_Utilities/deviceQuery# ./deviceQuery \n./deviceQuery Starting...\n\n CUDA Device Query (Runtime API) version (CUDART static linking)\n\nDetected 2 CUDA Capable device(s)\n\nDevice 0: \"Tesla K80\"\n  CUDA Driver Version / Runtime Version          8.0 / 8.0\n  CUDA Capability Major/Minor version number:    3.7\n  Total amount of global memory:                 11440 MBytes (11995578368 bytes)\n  (13) Multiprocessors, (192) CUDA Cores/MP:     2496 CUDA Cores\n  GPU Max Clock rate:                            824 MHz (0.82 GHz)\n  Memory Clock rate:                             2505 Mhz\n  Memory Bus Width:                              384-bit\n  L2 Cache Size:                                 1572864 bytes\n  Maximum Texture Dimension Size (x,y,z)         1D=(65536), 2D=(65536, 65536), 3D=(4096, 4096, 4096)\n  Maximum Layered 1D Texture Size, (num) layers  1D=(16384), 2048 layers\n  Maximum Layered 2D Texture Size, (num) layers  2D=(16384, 16384), 2048 layers\n  Total amount of constant memory:               65536 bytes\n  Total amount of shared memory per block:       49152 bytes\n  Total number of registers available per block: 65536\n  Warp size:                                     32\n  Maximum number of threads per multiprocessor:  2048\n  Maximum number of threads per block:           1024\n  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)\n  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)\n  Maximum memory pitch:                          2147483647 bytes\n  Texture alignment:                             512 bytes\n  Concurrent copy and kernel execution:          Yes with 2 copy engine(s)\n  Run time limit on kernels:                     No\n  Integrated GPU sharing Host Memory:            No\n  Support host page-locked memory mapping:       Yes\n  Alignment requirement for Surfaces:            Yes\n  Device has ECC support:                        Enabled\n  Device supports Unified Addressing (UVA):      Yes\n  Device PCI Domain ID / Bus ID / location ID:   0 / 131 / 0\n  Compute Mode:\n     < Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) >\n\nDevice 1: \"Tesla K80\"\n  CUDA Driver Version / Runtime Version          8.0 / 8.0\n  CUDA Capability Major/Minor version number:    3.7\n  Total amount of global memory:                 11440 MBytes (11995578368 bytes)\n  (13) Multiprocessors, (192) CUDA Cores/MP:     2496 CUDA Cores\n  GPU Max Clock rate:                            824 MHz (0.82 GHz)\n  Memory Clock rate:                             2505 Mhz\n  Memory Bus Width:                              384-bit\n  L2 Cache Size:                                 1572864 bytes\n  Maximum Texture Dimension Size (x,y,z)         1D=(65536), 2D=(65536, 65536), 3D=(4096, 4096, 4096)\n  Maximum Layered 1D Texture Size, (num) layers  1D=(16384), 2048 layers\n  Maximum Layered 2D Texture Size, (num) layers  2D=(16384, 16384), 2048 layers\n  Total amount of constant memory:               65536 bytes\n  Total amount of shared memory per block:       49152 bytes\n  Total number of registers available per block: 65536\n  Warp size:                                     32\n  Maximum number of threads per multiprocessor:  2048\n  Maximum number of threads per block:           1024\n  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)\n  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)\n  Maximum memory pitch:                          2147483647 bytes\n  Texture alignment:                             512 bytes\n  Concurrent copy and kernel execution:          Yes with 2 copy engine(s)\n  Run time limit on kernels:                     No\n  Integrated GPU sharing Host Memory:            No\n  Support host page-locked memory mapping:       Yes\n  Alignment requirement for Surfaces:            Yes\n  Device has ECC support:                        Enabled\n  Device supports Unified Addressing (UVA):      Yes\n  Device PCI Domain ID / Bus ID / location ID:   0 / 132 / 0\n  Compute Mode:\n     < Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) >\n> Peer access from Tesla K80 (GPU0) -> Tesla K80 (GPU1) : Yes\n> Peer access from Tesla K80 (GPU1) -> Tesla K80 (GPU0) : Yes\n\ndeviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 8.0, CUDA Runtime Version = 8.0, NumDevs = 2, Device0 = Tesla K80, Device1 = Tesla K80\nResult = PASS\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u4e2d\u306b\u3001bandwidthTest\u3000\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u308c\u306f\u3001PC \u672c\u4f53\u3068 GPU\u30ab\u30fc\u30c9\u9593\u306e\u8ee2\u9001\u901f\u5ea6\u3092\u6e2c\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u3059\u3002\nroot@server1:~/NVIDIA_CUDA-8.0_Samples/1_Utilities/bandwidthTest# ./bandwidthTest \n[CUDA Bandwidth Test] - Starting...\nRunning on...\n\n Device 0: Tesla K80\n Quick Mode\n\n Host to Device Bandwidth, 1 Device(s)\n PINNED Memory Transfers\n   Transfer Size (Bytes)    Bandwidth(MB/s)\n   33554432         8491.4\n\n Device to Host Bandwidth, 1 Device(s)\n PINNED Memory Transfers\n   Transfer Size (Bytes)    Bandwidth(MB/s)\n   33554432         9888.1\n\n Device to Device Bandwidth, 1 Device(s)\n PINNED Memory Transfers\n   Transfer Size (Bytes)    Bandwidth(MB/s)\n   33554432         156560.7\n\nResult = PASS\n\n\u4ee5\u4e0a\u3067\u3001GP-GPU\u3092\u4f7f\u3063\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u958b\u767a\u3059\u308b\u74b0\u5883\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u30af\u30e9\u30a6\u30c9\u306e\u6642\u9593\u8ab2\u91d1\u306e\u30d9\u30a2\u30e1\u30bf\u30eb\u30b5\u30fc\u30d0\u30fc\u3067\u3001GPU\u304c\u4f7f\u3048\u308b\u3068\u8a00\u3063\u3066\u3082\u3001\u3069\u3046\u3084\u3063\u3066\u4f7f\u3046\u3093\u3060\u308d\u3046\uff1f   GPU(Graphics Processing Units) \u306a\u3093\u3060\u304b\u3089\u3001\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u3092\u63cf\u753b\u3057\u3066\u3001\u4f55\u51e6\u304b\u306b\u8868\u793a\u3059\u308b\u306e\u304b\u306d\uff1f\u3000\u3068\u601d\u3046\u306e\u304c\u666e\u901a\u3067\u3059\u3088\u306d\u3002 \u50d5\u3082\u6700\u521d\u306f\u3001\u305d\u3093\u306a\u98a8\u306b\u601d\u3063\u3066\u307e\u3057\u305f\u3002 \u3057\u304b\u3057GPU\u306fGPU\u3067\u3082\u3001\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u63cf\u753b\u306e\u305f\u3081\u306eGPU\u3067\u306f\u306a\u304f\u3066\u3001\u6a5f\u68b0\u5b66\u7fd2\u3068\u304b\u306b\u5229\u7528\u3059\u308b\u305f\u3081\u306e\u6c4e\u7528\u8a08\u7b97\u7528\u306e\u305f\u3081\u306eGPU\u306a\u3093\u3067\u3059\u306d\u3002 \n\n\n# \u30b5\u30fc\u30d0\u30fc\u306eGPU\u3063\u3066\u4f55\u3088\uff1f\u3001\u4f55\u304b\u826f\u3044\u4e8b\u3042\u308b\u306e\u304b\u306d\uff1f\n\u3053\u306e\u69d8\u306a\u6c4e\u7528\u8a08\u7b97\u7528\u306eGPU\u306e\u4e8b\u3092 GPGPU (General-Purpose computing on Graphics Processing Units) \u3068\u547c\u3093\u3067\u533a\u5225\u3057\u3066\u3044\u307e\u3059\u3002\n\u300c\u4ffa\u306ePC\u306e NVidia GTX GeForce \u3068\u4f55\u304c\u9055\u3046\u306e\uff1f\u300d\u3068\u304b\u805e\u304b\u308c\u308b\u3068\u3001\u3056\u3063\u3068\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n- \u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u7e4b\u3052\u308b\u305f\u3081\u306e HDMI\u3001DVI\u3001VGA \u306e\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u30dd\u30fc\u30c8\u304c\u4ed8\u3044\u3066\u307e\u305b\u3093\u3002\n- \u30e1\u30e2\u30ea\u304c\u6ca2\u5c71\u7a4d\u307e\u308c\u3066\u3044\u307e\u3059\u3002 K80\u3067\u306f24GB\u3001M60\u3067\u306f16GB \u3068\u30b5\u30fc\u30d0\u30fc\u672c\u4f53\u3068\u540c\u3058\u304f\u3089\u3044\u306e\u30e1\u30e2\u30ea\u304c\u30ab\u30fc\u30c9\u306b\u4ed8\u3044\u3066\u3044\u307e\u3059\u3002\n- \u9ad8\u901f\u6f14\u7b97\u3092\u9577\u6642\u9593\u5b9f\u884c\u3067\u304d\u308b\u69d8\u306b\u3001\u767a\u71b1\u3092\u6291\u3048\u308b\u305f\u3081\u306b\u52d5\u4f5c\u5468\u6ce2\u6570\u3092\u6291\u3048\u6c17\u5473\u306b\u3001\u51b7\u5374\u6027\u80fd\u91cd\u8996\n- \u696d\u52d9\u7528\u306a\u306e\u3067\u3001\u30d7\u30ed\u4ed5\u69d8\u3067\u8010\u4e45\u6027\u304c\u9ad8\u3044\u8a2d\u8a08\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3089\u3001\u5f53\u7136\u306a\u304c\u3089\u3001\u5024\u6bb5\u3082\u9ad8\u3044\n\n\n# \u3069\u3046\u3084\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3059\u308b\u306e\u304b\u306d\uff1f\n\nGPU\u306f\u3001INTEL\u4e92\u63db\u306eCPU\u3067\u306f\u306a\u304f\u3066\u3001\u7570\u306a\u308b\u547d\u4ee4\u6a5f\u68b0\u8a9e\u3067\u52d5\u4f5c\u3059\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u306a\u306e\u3067\u3001\u5c02\u7528\u306e\u958b\u767a\u30c4\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u305d\u306e\u6700\u3082\u666e\u53ca\u3057\u3066\u3044\u308b\u306e\u304c\u3001\u6b21\u306e CUDA \u306a\u3093\u3067\u3059\u306d\u3002\n\n> CUDA\uff08Compute Unified Device Architecture\uff1a\u30af\u30fc\u30c0\uff09\u3068\u306f\u3001NVIDIA\u304c\u63d0\u4f9b\u3059\u308bGPU\u5411\u3051\u306eC\u8a00\u8a9e\u306e\u7d71\u5408\u958b\u767a\u74b0\u5883\u3067\u3042\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30e9 (nvcc) \u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u3069\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u3044\u308b\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\u57fa\u76e4\u3068\u306a\u308b\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\uff0f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u305d\u306e\u3082\u306e\u3092CUDA\u3068\u547c\u3076\u3053\u3068\u3082\u3042\u308b\u3002 [\u30a6\u30a3\u30c3\u30ad\u30da\u30c7\u30a3\u30a2 CUDA] (https://ja.wikipedia.org/wiki/CUDA)\n\n\u57fa\u672c\u7684\u306a\u51e6\u7406\u306e\u6d41\u308c\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u672c\u4f53\u304b\u3089\u3001NVIDIA \u306e GPU\u3067\u5b9f\u884c\u3067\u304d\u308b\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u30b3\u30fc\u30c9\u3068\u3001\u30c7\u30fc\u30bf\u3092\u9001\u308a\u8fbc\u3093\u3067\u3001GPU \u3067\u51e6\u7406\u3057\u305f\u7d50\u679c\u3092 \u30b5\u30fc\u30d0\u30fc\u672c\u4f53\u306b\u53d7\u3051\u53d6\u30ea\u307e\u3059\u3002 \n\n\u5b09\u3057\u3044\u4e8b\u306b\u3001CUDA \u306f \u30a2\u30ad\u30d0\u3067\u58f2\u3063\u3066\u3044\u308b\uff11\u4e07\u5186\u4ee5\u4e0b\u306e GTX GeForce \u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\u304b\u3089\u3001\u6c17\u8efd\u306b\u52d5\u4f5c\u3084\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u59cb\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\n# CUDA \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u958b\u767a\u74b0\u5883\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nUbuntu 14.04 \u3067\u306f\u3001 \u3053\u306eLinux \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u3001CUDA Toolkit 5.5 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u308c\u3089\u3092\u5229\u7528\u305b\u305a\u306b\u3001NVIDIA\u793e\u304b\u3089\u914d\u5e03\u3055\u308c\u308b\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002 \u3053\u306e\u8cc7\u6599\u306f\u3001NVIDIA\u793e\u306e [CUDA Toolkit Documentation v8.0 ](http://docs.nvidia.com/cuda/index.html#axzz4MwDhT3Bn) \u306b\u3042\u308a\u3001\u53c2\u8003\u3057\u306a\u304c\u3089\u3001\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\n\n\n### \u307e\u305a\u306f \u74b0\u5883\u30c1\u30a7\u30c3\u30af\u304b\u3089\n\n\u4eca\u56de\u5229\u7528\u3059\u308b\u306e\u306f\u3001Intel Xeon E5-2620 v3 x2 \u306e \uff12CPU 12\u30b3\u30a2 \u3068\u3001Ubuntu 14.04 \u304c\u5c0e\u5165\u3055\u308c\u305f\u30b5\u30fc\u30d0\u30fc\u306b Tesla K80 \u3092\u642d\u8f09\u3055\u308c\u305f\u3001\u30d9\u30a2\u30e1\u30bf\u30eb\u30b5\u30fc\u30d0\u30fc\u3067\u3059\u3002\n\n\u65e9\u901f\u3001GPU\u30ab\u30fc\u30c9\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n~~~ \nroot@server1:~# lspci | grep -i nvidia\n83:00.0 3D controller: NVIDIA Corporation GK210GL [Tesla K80] (rev a1)\n84:00.0 3D controller: NVIDIA Corporation GK210GL [Tesla K80] (rev a1)\n~~~\n\nLinux \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u3066\u3001CUDA \u306e\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u304c\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002 CUDA\u306e\u30b5\u30dd\u30fc\u30c8\u5bfe\u8c61\u304b\u3069\u3046\u304b\u306f\u3001[CUDA Toolkit Documentation v8.0 ](http://docs.nvidia.com/cuda/index.html#axzz4MwDhT3Bn) \u306b\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u3002\n\n~~~\nroot@server1:~# uname -m && cat /etc/*release\nx86_64\nDISTRIB_ID=Ubuntu\nDISTRIB_RELEASE=14.04\nDISTRIB_CODENAME=trusty\nDISTRIB_DESCRIPTION=\"Ubuntu 14.04.5 LTS\"\nNAME=\"Ubuntu\"\nVERSION=\"14.04.5 LTS, Trusty Tahr\"\nID=ubuntu\nID_LIKE=debian\nPRETTY_NAME=\"Ubuntu 14.04.5 LTS\"\nVERSION_ID=\"14.04\"\nHOME_URL=\"http://www.ubuntu.com/\"\nSUPPORT_URL=\"http://help.ubuntu.com/\"\nBUG_REPORT_URL=\"http://bugs.launchpad.net/ubuntu/\"\n~~~\n\n### \u5fc5\u8981\u30d1\u30c3\u30b1\u30fc\u30b8\u3068 CUDA Tool Kit \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nCUDA\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002 Linux\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306e\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3001\u8907\u6570\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u5b9f\u884c\u3067\u304d\u308b\u30bf\u30a4\u30d7\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u6bb5\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n~~~\n# apt-get update\n# apt-get install gcc g++ make linux-source  \n~~~\n\nCUDA\u306e\u958b\u767a\u74b0\u5883\u306f\u3001NVIDIA\u793e \u306e [CUDA \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30b5\u30a4\u30c8](https://developer.nvidia.com/cuda-downloads)\u304b\u3089\u7121\u6599\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002 2016\u5e7410\u670815\u65e5\u73fe\u5728\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3001CUDA Toolkit 8.0 \u3067\u3059\u3002 \u624b\u5143\u306e MAC \u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u3001\u518d\u3073\u30af\u30e9\u30a6\u30c9\u306e\u30d9\u30a2\u30e1\u30bf\u30eb\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3059\u308b\u306e\u306f\u3001\u9762\u5012\u306a\u306e\u3067\u3001\u30af\u30e9\u30a6\u30c9\u306e\u30d9\u30a2\u30e1\u30bf\u30eb\u304b\u3089\u76f4\u63a5 wget \u3067\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n~~~\n# mkdir nvidia\n# cd nvidia\n# wget https://developer.nvidia.com/compute/cuda/8.0/prod/local_installers/cuda_8.0.44_linux-run\n~~~\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n~~~\nroot@server1:~/nvidia# sh cuda_8.0.44_linux-run \n~~~\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u30fc\u306e\u8cea\u554f\u306b\u7b54\u3048\u3066\u3044\u304d\u307e\u3059\u3002\n\n~~~\nDo you accept the previously read EULA?\naccept/decline/quit: accept\n\nInstall NVIDIA Accelerated Graphics Driver for Linux-x86_64 367.48?\n(y)es/(n)o/(q)uit: y\n\nDo you want to install the OpenGL libraries?\n(y)es/(n)o/(q)uit [ default is yes ]: y\n\nDo you want to run nvidia-xconfig?\nThis will update the system X configuration file so that the NVIDIA X driver\nis used. The pre-existing X configuration file will be backed up.\nThis option should not be used on systems that require a custom\nX configuration, such as systems with multiple GPU vendors.\n(y)es/(n)o/(q)uit [ default is no ]: n\n\nInstall the CUDA 8.0 Toolkit?\n(y)es/(n)o/(q)uit: y\n\nEnter Toolkit Location\n [ default is /usr/local/cuda-8.0 ]: \n\nDo you want to install a symbolic link at /usr/local/cuda?\n(y)es/(n)o/(q)uit: y\n\nInstall the CUDA 8.0 Samples?\n(y)es/(n)o/(q)uit: y\n\nEnter CUDA Samples Location\n [ default is /root ]: \n\n~~~\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u3089\u3001\u30b7\u30a7\u30eb\u306b\u30d1\u30b9\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n~~~\nroot@server1:~# vi .bashrc\n~~~\n\u4ee5\u4e0b\u306e\u884c\u3092\u8ffd\u52a0\n\n~~~\nexport PATH=\"/usr/local/cuda-8.0/bin:$PATH\"\n~~~\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30ed\u30fc\u30c9\u30d1\u30b9\u3092\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u69d8\u306b\u8ffd\u52a0\n\n~~~\nroot@server1:~# cat /etc/ld.so.conf\ninclude /etc/ld.so.conf.d/*.conf\n/usr/local/cuda-8.0/lib64\n~~~\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u6709\u52b9\u5316\n\n~~~\nroot@server1:~/nvidia# ldconfig\n~~~\n\n\u3053\u308c\u3067\u3001CUDA Toolkit 8.0 \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u5b8c\u4e86\u3067\u3059\u3002 \u3053\u308c\u304b\u3089\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e2d\u306b\u3042\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u30c1\u30a7\u30c3\u30af\n\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e2d\u3067\u3001deviceQueriy \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u30c7\u30d0\u30a4\u30b9\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002 deviceQuery \u3092\u30d3\u30eb\u30c9\u3059\u308b\u65b9\u6cd5\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n~~~\nroot@server1:~# cd NVIDIA_CUDA-8.0_Samples/\nroot@server1:~/NVIDIA_CUDA-8.0_Samples# cd 1_Utilities/\nroot@server1:~/NVIDIA_CUDA-8.0_Samples/1_Utilities# cd deviceQuery\nroot@server1:~/NVIDIA_CUDA-8.0_Samples/1_Utilities/deviceQuery# make\n~~~\n\u30b3\u30de\u30f3\u30c9\u304c\u51fa\u6765\u305f\u3089\u5b9f\u884c\u3057\u307e\u3059\u3002 TESLA K80 \u306b\u306f\u3001\uff12\u3064\u306eGPU\u304c\u5165\u3063\u3066\u3044\u3066\u3001\u5408\u8a08\u3067 4992 \u30b3\u30a2\u300122.8GB RAM \u304c\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u3000\u30a2\u30ad\u30d0\u3067\u58f2\u3063\u3066\u3044\u308bGTX 750Ti \u3067\u306f\u3001 640\u30b3\u30a2\u30012GB RAM \u306a\u306e\u3067\u3001\u6841\u9055\u3044\u306e\u8cc7\u6e90\u3067\u3059\u306d\u3002\n\n~~~\nroot@server1:~/NVIDIA_CUDA-8.0_Samples/1_Utilities/deviceQuery# ./deviceQuery \n./deviceQuery Starting...\n\n CUDA Device Query (Runtime API) version (CUDART static linking)\n\nDetected 2 CUDA Capable device(s)\n\nDevice 0: \"Tesla K80\"\n  CUDA Driver Version / Runtime Version          8.0 / 8.0\n  CUDA Capability Major/Minor version number:    3.7\n  Total amount of global memory:                 11440 MBytes (11995578368 bytes)\n  (13) Multiprocessors, (192) CUDA Cores/MP:     2496 CUDA Cores\n  GPU Max Clock rate:                            824 MHz (0.82 GHz)\n  Memory Clock rate:                             2505 Mhz\n  Memory Bus Width:                              384-bit\n  L2 Cache Size:                                 1572864 bytes\n  Maximum Texture Dimension Size (x,y,z)         1D=(65536), 2D=(65536, 65536), 3D=(4096, 4096, 4096)\n  Maximum Layered 1D Texture Size, (num) layers  1D=(16384), 2048 layers\n  Maximum Layered 2D Texture Size, (num) layers  2D=(16384, 16384), 2048 layers\n  Total amount of constant memory:               65536 bytes\n  Total amount of shared memory per block:       49152 bytes\n  Total number of registers available per block: 65536\n  Warp size:                                     32\n  Maximum number of threads per multiprocessor:  2048\n  Maximum number of threads per block:           1024\n  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)\n  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)\n  Maximum memory pitch:                          2147483647 bytes\n  Texture alignment:                             512 bytes\n  Concurrent copy and kernel execution:          Yes with 2 copy engine(s)\n  Run time limit on kernels:                     No\n  Integrated GPU sharing Host Memory:            No\n  Support host page-locked memory mapping:       Yes\n  Alignment requirement for Surfaces:            Yes\n  Device has ECC support:                        Enabled\n  Device supports Unified Addressing (UVA):      Yes\n  Device PCI Domain ID / Bus ID / location ID:   0 / 131 / 0\n  Compute Mode:\n     < Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) >\n\nDevice 1: \"Tesla K80\"\n  CUDA Driver Version / Runtime Version          8.0 / 8.0\n  CUDA Capability Major/Minor version number:    3.7\n  Total amount of global memory:                 11440 MBytes (11995578368 bytes)\n  (13) Multiprocessors, (192) CUDA Cores/MP:     2496 CUDA Cores\n  GPU Max Clock rate:                            824 MHz (0.82 GHz)\n  Memory Clock rate:                             2505 Mhz\n  Memory Bus Width:                              384-bit\n  L2 Cache Size:                                 1572864 bytes\n  Maximum Texture Dimension Size (x,y,z)         1D=(65536), 2D=(65536, 65536), 3D=(4096, 4096, 4096)\n  Maximum Layered 1D Texture Size, (num) layers  1D=(16384), 2048 layers\n  Maximum Layered 2D Texture Size, (num) layers  2D=(16384, 16384), 2048 layers\n  Total amount of constant memory:               65536 bytes\n  Total amount of shared memory per block:       49152 bytes\n  Total number of registers available per block: 65536\n  Warp size:                                     32\n  Maximum number of threads per multiprocessor:  2048\n  Maximum number of threads per block:           1024\n  Max dimension size of a thread block (x,y,z): (1024, 1024, 64)\n  Max dimension size of a grid size    (x,y,z): (2147483647, 65535, 65535)\n  Maximum memory pitch:                          2147483647 bytes\n  Texture alignment:                             512 bytes\n  Concurrent copy and kernel execution:          Yes with 2 copy engine(s)\n  Run time limit on kernels:                     No\n  Integrated GPU sharing Host Memory:            No\n  Support host page-locked memory mapping:       Yes\n  Alignment requirement for Surfaces:            Yes\n  Device has ECC support:                        Enabled\n  Device supports Unified Addressing (UVA):      Yes\n  Device PCI Domain ID / Bus ID / location ID:   0 / 132 / 0\n  Compute Mode:\n     < Default (multiple host threads can use ::cudaSetDevice() with device simultaneously) >\n> Peer access from Tesla K80 (GPU0) -> Tesla K80 (GPU1) : Yes\n> Peer access from Tesla K80 (GPU1) -> Tesla K80 (GPU0) : Yes\n\ndeviceQuery, CUDA Driver = CUDART, CUDA Driver Version = 8.0, CUDA Runtime Version = 8.0, NumDevs = 2, Device0 = Tesla K80, Device1 = Tesla K80\nResult = PASS\n~~~\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u4e2d\u306b\u3001bandwidthTest\u3000\u304c\u3042\u308a\u307e\u3059\u3002 \u3053\u308c\u306f\u3001PC \u672c\u4f53\u3068 GPU\u30ab\u30fc\u30c9\u9593\u306e\u8ee2\u9001\u901f\u5ea6\u3092\u6e2c\u308b\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u3067\u3059\u3002\n\n~~~\nroot@server1:~/NVIDIA_CUDA-8.0_Samples/1_Utilities/bandwidthTest# ./bandwidthTest \n[CUDA Bandwidth Test] - Starting...\nRunning on...\n\n Device 0: Tesla K80\n Quick Mode\n\n Host to Device Bandwidth, 1 Device(s)\n PINNED Memory Transfers\n   Transfer Size (Bytes)\tBandwidth(MB/s)\n   33554432\t\t\t8491.4\n\n Device to Host Bandwidth, 1 Device(s)\n PINNED Memory Transfers\n   Transfer Size (Bytes)\tBandwidth(MB/s)\n   33554432\t\t\t9888.1\n\n Device to Device Bandwidth, 1 Device(s)\n PINNED Memory Transfers\n   Transfer Size (Bytes)\tBandwidth(MB/s)\n   33554432\t\t\t156560.7\n\nResult = PASS\n~~~\n\n\u4ee5\u4e0a\u3067\u3001GP-GPU\u3092\u4f7f\u3063\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u958b\u767a\u3059\u308b\u74b0\u5883\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n\n", "tags": ["SoftLayer", "GPU", "CUDA"]}