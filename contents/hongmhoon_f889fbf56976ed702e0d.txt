{"context": " More than 1 year has passed since last update.\n\nSobjectiveRecord\u3068\u306f\nSobjectiveRecord\u306fSwift\u88fd\u306eCoreData\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3059\u3002\n\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3067Github\u304b\u3089\u81ea\u7531\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002\nXcode 6.1.1\u3067\u5b9f\u88c5\n\nSobjectiveRecord\u306e\u7279\u5fb4\n\u77ed\u3044\u30b3\u30fc\u30c9\u91cf\u3067CoreData\u3092\u81ea\u7531\u306b\u64cd\u4f5c\u3067\u304d\u307e\u3059\u3002\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u3092\u5229\u7528\u3057\u3066\u5b9f\u88c5\u3057\u3066\u3044\u308b\u306e\u3067\u30d5\u30a7\u30c3\u30c1\u7d50\u679c\u3092\u578b\u5909\u63db\u306a\u3057\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\u7279\u306b\u30d0\u30c3\u30b0\u30b0\u30e9\u30a6\u30f3\u30c9\u51e6\u7406\u3092\u30d9\u30fc\u30b9\u306b\u3057\u3066\u3044\u308b\u306e\u3067UI\u30b9\u30ec\u30c3\u30c9\u3092\u30d6\u30ed\u30c3\u30af\u305b\u305a\u4f7f\u3046\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\nCoreData\u306e\u30d0\u30c3\u30b0\u30b0\u30e9\u30a6\u30f3\u30c9\u51e6\u7406\u306e\u8a73\u7d30\u306f\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u53c2\u8003\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n- a-real-guide-to-core-data-concurrency.\n- Multi-Context CoreData.\n\n\nSobjectiveRecord\u3092\u5229\u7528\n\n\u5229\u7528\u6e96\u5099\n\n\nGithub -> SobjectiveRecord\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066SobjectiveRecord\u30d5\u30a9\u30eb\u30c0\u3092\u5229\u7528\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30b3\u30d4\u30fc\u3001\n\u53c8\u306fCocoaPods\u3092\u5229\u7528 pod 'SobjectiveRecord'\n\n\n\nCocoaPods\u5229\u7528\u6642\u306fCocoaPods\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30920.36\u4ee5\u4e0a\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n\u521d\u671f\u5316\nimport CoreData\nimport SobjectiveRecord // CocoaPods\u5229\u7528\u6642\u306e\u307f\n\nfunc application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n\n    // \u307e\u305aCoreData\u306e\u5229\u7528\u524d\u306b\u30b9\u30c8\u30a2\u3092\u521d\u671f\u5316\n    NSPersistentStoreCoordinator.setupDefaultStore()\n\n    // youre code here\n\n    return true\n}\n\n\nBasic\n\ntypealias\u3092\u5229\u7528\u3057\u3066\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u306etypealias\u3092\u5b9a\u7fa9\n\nSobjectiveRecord\u306f\u30d5\u30a7\u30c3\u30c1\u7d50\u679c\u3092\u578b\u5909\u63db\u306a\u3057\u3067\u5229\u7528\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u4e00\u5ea6\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3068\u5f8c\u3005\u697d\u3067\u3059\u3002\n// User, Tweet\u306fNSManagedObject\u306e\u30b5\u30d6\u30af\u30e9\u30b9\ntypealias Users = SobjectiveRecord<User>\ntypealias Tweets = SobjectiveRecord<Tweet>\n\n// \u4ee5\u964d\u3053\u308c\u306f\u540c\u3058\nvar user = SobjectiveRecord<User>.create()\nvar user = Users.create()\n\n\n\u57fa\u672c\u3001\u5168\u3066\u306e\u51e6\u7406\u306fperformBlock:\u5185\u3067\u884c\u3046\u3002\n\nNSManagedObjectContext.defaultContext.performBlock {\n    // your code here\n}\nvar moc = NSManagedObjectContext.defaultContext.createChildContext()\nmoc.performBlock {\n    // your code here\n}\n\n\nCreate / Save / Delete\ncreate\u30e1\u30c3\u30bd\u30c9\u3067\u7c21\u5358\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u306eJSON\u30c7\u30fc\u30bf\u306fDictionary\u306b\u5909\u63db\u3057\u3066\u305d\u306e\u307e\u307e\u8a2d\u5b9a\u53ef\u80fd\nNSManagedObjectContext.defaultContext.performBlock {\n    var t = Tweets.create()\n    t.text = \"I am here\"\n    t.save()\n\n    t = Tweets.create(attributes: [\"text\" : \"hello!!\", \"lang\" : \"en\"])\n    t.delete()\n}\n\nNSManagedObjectContext.defaultContext.performBlock {\n    Tweets.deleteAll()\n    NSManagedObjectContext.defaultContext.save()\n}\n\n\nFinders\n\u30d5\u30a7\u30c3\u30c1\u6761\u4ef6\u306f\u6587\u5b57\u5217\u3001Dictionary\u3001NSPredicate\u3092\u8a2d\u5b9a\u53ef\u80fd\nNSManagedObjectContext.defaultContext.performBlock {\n    var tweets = Tweets.all()\n\n    var tweetsInEnglish = Tweets.find(condition: \"lang == 'en'\")\n\n    var hmhv = Users.first(condition: \"screenName == 'hmhv'\")\n\n    var englishMen = Users.find(condition: [\"lang\" : \"en\", \"timeZone\" : \"London\"])\n\n    var predicate = NSPredicate(format: \"friendsCount > 100\")\n    var manyFriendsUsers = Users.find(condition: predicate)\n}\n\n\nOrder and Limit\nNSManagedObjectContext.defaultContext.performBlock {\n    var sortedUsers = Users.all(order: \"name\")\n\n    var allUsers = Users.all(order: \"screenName ASC, name DESC\")\n    // or\n    var allUsers2 = Users.all(order: \"screenName A, name D\")\n    // or\n    var allUsers3 = Users.all(order: \"screenName, name d\")\n\n    var manyFriendsUsers = Users.find(condition: \"friendsCount > 100\", order: \"screenName DESC\")\n\n    var fiveEnglishUsers = Users.find(condition: \"lang == 'en'\", order: \"screenName ASC\", fetchLimit: 5)\n}\n\n\nAggregation\nNSManagedObjectContext.defaultContext.performBlock {\n    var allUserCount = Users.count()\n\n    var englishUserCount = Users.count(condition: \"lang == 'en'\")\n}\n\n\nBatchUpdate\niOS8\u304b\u3089\u306e\u6a5f\u80fd\u3067\u3042\u308bBatchUpdate\u3082\u5229\u7528\u53ef\u80fd\nNSManagedObjectContext.defaultContext.performBlock {\n\n    Users.batchUpdate(condition: \"friendsCount > 10\", propertiesToUpdate: [\"friendsCount\": 0])\n\n    // update all entities\n    Users.batchUpdate(propertiesToUpdate: [\"friendsCount\": 100])\n}\n\n\nNSFetchedResultsController\nNSManagedObjectContext.defaultContext.performBlock {\n    var frc = Users.createFetchedResultsController(order: \"name\")\n    frc.delegate = self\n\n    var error: NSError? = nil\n    if frc.performFetch(&error) {\n        self.reloadData()\n    }\n}\n\n\nCustom ManagedObjectContext\nvar childContext = NSManagedObjectContext.defaultContext.createChildContext()\n\nchildContext.performBlock {\n    var john = Users.create(context: childContext)\n    john.name = \"John\"\n    john.save()\n\n    var savedJohn = Users.first(condition: \"name == 'John'\", context: childContext)\n\n    var manyFriendsUsers = Users.find(condition: \"friendsCount > 100\", order: \"screenName DESC\", context: childContext)\n\n    var allUsers = Users.all(context: childContext)\n}\n\n\n\u30ab\u30b9\u30bf\u30e0\u30e2\u30c7\u30eb\u3001\u30ab\u30b9\u30bf\u30e0sqlite\u30d5\u30a1\u30a4\u30eb\u306e\u5229\u7528\nvar modelURL = NSURL.defaultModelURL(modelName: \"model_name\")\nNSPersistentStoreCoordinator.setupDefaultStore(modelURL: modelURL)\n\n// or\nvar storeURL = NSURL.defaultStoreURL(fileName: \"file_name.sqlite\")\nNSPersistentStoreCoordinator.setupDefaultStore(storeURL: storeURL)\n\n\n\u30de\u30c3\u30d4\u30f3\u30b0\n\u30a6\u30a7\u30d6\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u306eJSON\u306ffirst_name, last_name\u306e\u3088\u3046\u306a\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9\u306e\u5834\u5408\u304c\u591a\u3044\u3067\u3059\u304c\u3001\nObjective-C\u3067\u306ffirstName, lastName\u306e\u3088\u3046\u306b\u30ad\u30e3\u30e1\u30eb\u30b1\u30fc\u30b9\u304c\u4e3b\u6d41\u3067\u3059\u3002\n\u306a\u306e\u3067\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9\u304b\u3089\u30ad\u30e3\u30e1\u30eb\u30b1\u30fc\u30b9\u3078\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306f\u81ea\u52d5\u3067\u884c\u308f\u308c\u307e\u3059\u3002\n\u305d\u308c\u4ee5\u5916\u306e\u7279\u5225\u306a\u540d\u524d\u30de\u30c3\u30d4\u30f3\u30b0\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u5404\u30e2\u30c7\u30eb\u30b9\u30e9\u30b9\u3067mappings\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3057\u3066\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002\n!! Date, Transformable\u30bf\u30a4\u30d7\u53ca\u3073Relationships\u306f\u30de\u30c3\u30d4\u30f3\u30b0\u5bfe\u8c61\u5916\u3067\u3059\u3002 !!\n// just override +mappings in your NSManagedObject subclass\nextension User\n{\n    override class var mappings: [String: String]? {\n        return [\"description\" : \"userDescription\"]\n    }\n}\n  // first_name => firstName\u306f\u81ea\u52d5\u3067\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u308b\u3002\n\n\n\u30c6\u30b9\u30c8\nSobjectiveRecord\u306f\u30e1\u30e2\u30ea\u5185\u30b9\u30c8\u30a2\u3092\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002\u30c6\u30b9\u30c8\u306a\u3069\u3067\u5229\u7528\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\nNSPersistentStoreCoordinator.setupDefaultStore(useInMemoryStore: true)\n\n\n### SobjectiveRecord\u3068\u306f\n\n[SobjectiveRecord](https://github.com/hmhv/SobjectiveRecord)\u306fSwift\u88fd\u306eCoreData\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u3059\u3002\n\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u3067[Github](https://github.com/hmhv/SobjectiveRecord)\u304b\u3089\u81ea\u7531\u306b\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n**Xcode 6.1.1\u3067\u5b9f\u88c5**\n\n### SobjectiveRecord\u306e\u7279\u5fb4\n\n\u77ed\u3044\u30b3\u30fc\u30c9\u91cf\u3067CoreData\u3092\u81ea\u7531\u306b\u64cd\u4f5c\u3067\u304d\u307e\u3059\u3002\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u3092\u5229\u7528\u3057\u3066\u5b9f\u88c5\u3057\u3066\u3044\u308b\u306e\u3067\u30d5\u30a7\u30c3\u30c1\u7d50\u679c\u3092\u578b\u5909\u63db\u306a\u3057\u3067\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\u7279\u306b\u30d0\u30c3\u30b0\u30b0\u30e9\u30a6\u30f3\u30c9\u51e6\u7406\u3092\u30d9\u30fc\u30b9\u306b\u3057\u3066\u3044\u308b\u306e\u3067UI\u30b9\u30ec\u30c3\u30c9\u3092\u30d6\u30ed\u30c3\u30af\u305b\u305a\u4f7f\u3046\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n> CoreData\u306e\u30d0\u30c3\u30b0\u30b0\u30e9\u30a6\u30f3\u30c9\u51e6\u7406\u306e\u8a73\u7d30\u306f\u4ee5\u4e0b\u306e\u5185\u5bb9\u3092\u53c2\u8003\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n> - [a-real-guide-to-core-data-concurrency](http://quellish.tumblr.com/post/97430076027/a-real-guide-to-core-data-concurrency).\n> - [Multi-Context CoreData](http://www.cocoanetics.com/2012/07/multi-context-coredata/).\n\n### SobjectiveRecord\u3092\u5229\u7528\n\n#### \u5229\u7528\u6e96\u5099\n\n- [Github -> SobjectiveRecord](https://github.com/hmhv/SobjectiveRecord)\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066`SobjectiveRecord `\u30d5\u30a9\u30eb\u30c0\u3092\u5229\u7528\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30b3\u30d4\u30fc\u3001\n   \u53c8\u306f[CocoaPods](http://cocoapods.org)\u3092\u5229\u7528 `pod 'SobjectiveRecord'`\n\n> CocoaPods\u5229\u7528\u6642\u306fCocoaPods\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30920.36\u4ee5\u4e0a\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n#### \u521d\u671f\u5316\n\n``` swift\nimport CoreData\nimport SobjectiveRecord // CocoaPods\u5229\u7528\u6642\u306e\u307f\n\nfunc application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n    \n    // \u307e\u305aCoreData\u306e\u5229\u7528\u524d\u306b\u30b9\u30c8\u30a2\u3092\u521d\u671f\u5316\n    NSPersistentStoreCoordinator.setupDefaultStore()\n\n\t// youre code here\n\t\n    return true\n}\n```\n\n### Basic\n\n- typealias\u3092\u5229\u7528\u3057\u3066\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u306etypealias\u3092\u5b9a\u7fa9\n\nSobjectiveRecord\u306f\u30d5\u30a7\u30c3\u30c1\u7d50\u679c\u3092\u578b\u5909\u63db\u306a\u3057\u3067\u5229\u7528\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u4e00\u5ea6\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3068\u5f8c\u3005\u697d\u3067\u3059\u3002\n\n``` swift\n// User, Tweet\u306fNSManagedObject\u306e\u30b5\u30d6\u30af\u30e9\u30b9\ntypealias Users = SobjectiveRecord<User>\ntypealias Tweets = SobjectiveRecord<Tweet>\n\n// \u4ee5\u964d\u3053\u308c\u306f\u540c\u3058\nvar user = SobjectiveRecord<User>.create()\nvar user = Users.create()\n```\n\n- \u57fa\u672c\u3001\u5168\u3066\u306e\u51e6\u7406\u306f`performBlock:`\u5185\u3067\u884c\u3046\u3002\n\n``` swift\nNSManagedObjectContext.defaultContext.performBlock {\n    // your code here\n}\nvar moc = NSManagedObjectContext.defaultContext.createChildContext()\nmoc.performBlock {\n    // your code here\n}\n```\n\n\n#### Create / Save / Delete\n\ncreate\u30e1\u30c3\u30bd\u30c9\u3067\u7c21\u5358\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u306eJSON\u30c7\u30fc\u30bf\u306fDictionary\u306b\u5909\u63db\u3057\u3066\u305d\u306e\u307e\u307e\u8a2d\u5b9a\u53ef\u80fd\n\n``` swift\nNSManagedObjectContext.defaultContext.performBlock {\n    var t = Tweets.create()\n    t.text = \"I am here\"\n    t.save()\n    \n    t = Tweets.create(attributes: [\"text\" : \"hello!!\", \"lang\" : \"en\"])\n    t.delete()\n}\n\nNSManagedObjectContext.defaultContext.performBlock {\n    Tweets.deleteAll()\n    NSManagedObjectContext.defaultContext.save()\n}\n```\n\n#### Finders\n\n\u30d5\u30a7\u30c3\u30c1\u6761\u4ef6\u306f\u6587\u5b57\u5217\u3001Dictionary\u3001NSPredicate\u3092\u8a2d\u5b9a\u53ef\u80fd\n\n``` swift\nNSManagedObjectContext.defaultContext.performBlock {\n    var tweets = Tweets.all()\n    \n    var tweetsInEnglish = Tweets.find(condition: \"lang == 'en'\")\n    \n    var hmhv = Users.first(condition: \"screenName == 'hmhv'\")\n    \n    var englishMen = Users.find(condition: [\"lang\" : \"en\", \"timeZone\" : \"London\"])\n    \n    var predicate = NSPredicate(format: \"friendsCount > 100\")\n    var manyFriendsUsers = Users.find(condition: predicate)\n}\n```\n\n#### Order and Limit\n\n``` swift\nNSManagedObjectContext.defaultContext.performBlock {\n    var sortedUsers = Users.all(order: \"name\")\n    \n    var allUsers = Users.all(order: \"screenName ASC, name DESC\")\n    // or\n    var allUsers2 = Users.all(order: \"screenName A, name D\")\n    // or\n    var allUsers3 = Users.all(order: \"screenName, name d\")\n    \n    var manyFriendsUsers = Users.find(condition: \"friendsCount > 100\", order: \"screenName DESC\")\n    \n    var fiveEnglishUsers = Users.find(condition: \"lang == 'en'\", order: \"screenName ASC\", fetchLimit: 5)\n}\n```\n\n#### Aggregation\n\n``` swift\nNSManagedObjectContext.defaultContext.performBlock {\n    var allUserCount = Users.count()\n    \n    var englishUserCount = Users.count(condition: \"lang == 'en'\")\n}\n```\n\n#### BatchUpdate\n\niOS8\u304b\u3089\u306e\u6a5f\u80fd\u3067\u3042\u308bBatchUpdate\u3082\u5229\u7528\u53ef\u80fd\n\n``` swift\nNSManagedObjectContext.defaultContext.performBlock {\n    \n    Users.batchUpdate(condition: \"friendsCount > 10\", propertiesToUpdate: [\"friendsCount\": 0])\n\n    // update all entities\n    Users.batchUpdate(propertiesToUpdate: [\"friendsCount\": 100])\n}\n```\n\n#### NSFetchedResultsController\n\n``` swift\nNSManagedObjectContext.defaultContext.performBlock {\n    var frc = Users.createFetchedResultsController(order: \"name\")\n    frc.delegate = self\n    \n    var error: NSError? = nil\n    if frc.performFetch(&error) {\n        self.reloadData()\n    }\n}\n```\n\n#### Custom ManagedObjectContext\n\n``` swift\nvar childContext = NSManagedObjectContext.defaultContext.createChildContext()\n\nchildContext.performBlock {\n    var john = Users.create(context: childContext)\n    john.name = \"John\"\n    john.save()\n    \n    var savedJohn = Users.first(condition: \"name == 'John'\", context: childContext)\n    \n    var manyFriendsUsers = Users.find(condition: \"friendsCount > 100\", order: \"screenName DESC\", context: childContext)\n    \n    var allUsers = Users.all(context: childContext)\n}\n```\n\n#### \u30ab\u30b9\u30bf\u30e0\u30e2\u30c7\u30eb\u3001\u30ab\u30b9\u30bf\u30e0sqlite\u30d5\u30a1\u30a4\u30eb\u306e\u5229\u7528\n\n``` swift\nvar modelURL = NSURL.defaultModelURL(modelName: \"model_name\")\nNSPersistentStoreCoordinator.setupDefaultStore(modelURL: modelURL)\n\n// or\nvar storeURL = NSURL.defaultStoreURL(fileName: \"file_name.sqlite\")\nNSPersistentStoreCoordinator.setupDefaultStore(storeURL: storeURL)\n```\n\n\n\n#### \u30de\u30c3\u30d4\u30f3\u30b0\n\n\u30a6\u30a7\u30d6\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u306eJSON\u306f`first_name`, `last_name`\u306e\u3088\u3046\u306a\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9\u306e\u5834\u5408\u304c\u591a\u3044\u3067\u3059\u304c\u3001\nObjective-C\u3067\u306f`firstName`, `lastName`\u306e\u3088\u3046\u306b\u30ad\u30e3\u30e1\u30eb\u30b1\u30fc\u30b9\u304c\u4e3b\u6d41\u3067\u3059\u3002\n\u306a\u306e\u3067\u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9\u304b\u3089\u30ad\u30e3\u30e1\u30eb\u30b1\u30fc\u30b9\u3078\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u306f\u81ea\u52d5\u3067\u884c\u308f\u308c\u307e\u3059\u3002\n\u305d\u308c\u4ee5\u5916\u306e\u7279\u5225\u306a\u540d\u524d\u30de\u30c3\u30d4\u30f3\u30b0\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u5404\u30e2\u30c7\u30eb\u30b9\u30e9\u30b9\u3067mappings\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3057\u3066\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002\n\n**!! Date, Transformable\u30bf\u30a4\u30d7\u53ca\u3073Relationships\u306f\u30de\u30c3\u30d4\u30f3\u30b0\u5bfe\u8c61\u5916\u3067\u3059\u3002 !!**\n\n``` swift\n// just override +mappings in your NSManagedObject subclass\nextension User\n{\n    override class var mappings: [String: String]? {\n        return [\"description\" : \"userDescription\"]\n    }\n}\n  // first_name => firstName\u306f\u81ea\u52d5\u3067\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u308b\u3002\n```\n\n#### \u30c6\u30b9\u30c8\n\nSobjectiveRecord\u306f\u30e1\u30e2\u30ea\u5185\u30b9\u30c8\u30a2\u3092\u8a2d\u5b9a\u53ef\u80fd\u3067\u3059\u3002\u30c6\u30b9\u30c8\u306a\u3069\u3067\u5229\u7528\u3059\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\n\n``` swift\nNSPersistentStoreCoordinator.setupDefaultStore(useInMemoryStore: true)\n```\n\n", "tags": ["CoreData", "iOS", "Swift"]}