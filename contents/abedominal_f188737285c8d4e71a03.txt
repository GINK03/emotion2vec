{"tags": ["C++", "performance"], "context": " More than 1 year has passed since last update.\u30dd\u30a4\u30f3\u30bf\u304c\u6307\u3057\u793a\u3059\u30c7\u30fc\u30bf\u3092\u4e00\u6642\u5909\u6570\u306b\u53d7\u3051\u3066\u3044\u305f\u305b\u3044\u3067\u6700\u9069\u5316\u304c\u52b9\u304b\u306a\u304f\u306a\u3063\u3066\u6fc0\u9045\u306b\u306a\u3063\u305f\u30d1\u30bf\u30fc\u30f3\u3002\n\u30a2\u30bb\u30f3\u30d6\u30ea\u30b3\u30fc\u30c9\u3092\u3057\u3070\u3089\u304f\u773a\u3081\u3066\u3084\u3063\u3068\u6c17\u3065\u3044\u305f\u3002\n\u305d\u3093\u306a\u6982\u5ff5\u3059\u3063\u304b\u308a\u5fd8\u308c\u3066\u305f\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\u9045\u304b\u3063\u305f\u65b9\n\nBefore.cpp\nclass BufferAnalyzeDirect\n{\npublic:\n    static const size_t msgOfs_ = offsetof(Header, messageByte);\n    static const size_t optOfs_ = offsetof(Header, optionByte);\n    void operator()(uint8_t* b, Result & r)\n    {\n        uint16_t msgByte = *reinterpret_cast<uint16_t*>(&b[msgOfs_]);\n        uint16_t optByte = *reinterpret_cast<uint16_t*>(&b[optOfs_]);\n        r.requestStatus = *reinterpret_cast<uint16_t*>(&b[4 + 4]);\n        r.optionCode = *reinterpret_cast<uint16_t*>(&b[4 + 4 + msgByte]);\n        r.count = *reinterpret_cast<uint16_t*>(&b[4 + 4 + msgByte + optByte]);\n    }\n};\n\n\nC\u8a00\u8a9e\u30c1\u30c3\u30af\u306b\u30b9\u30b3\u30fc\u30d7\u306e\u5148\u982d\u3067\u5909\u6570\u5ba3\u8a00\u3057\u3066\u305f\u3002\n\n\u901f\u304b\u3063\u305f\u65b9\n\nAfter.cpp\nclass BufferAnalyzeDirect\n{\npublic:\n    static const size_t msgOfs_ = offsetof(Header, messageByte);\n    static const size_t optOfs_ = offsetof(Header, optionByte);\n    void operator()(uint8_t* b, Result & r)\n    {\n        r.requestStatus = *reinterpret_cast<uint16_t*>(&b[4 + 4]);\n        uint16_t msgByte = *reinterpret_cast<uint16_t*>(&b[msgOfs_]);\n        r.optionCode = *reinterpret_cast<uint16_t*>(&b[4 + 4 + msgByte]);\n        uint16_t optByte = *reinterpret_cast<uint16_t*>(&b[optOfs_]);\n        r.count = *reinterpret_cast<uint16_t*>(&b[4 + 4 + msgByte + optByte]);\n    }\n};\n\n\n\u4e00\u6642\u5909\u6570\u3092\u53d7\u3051\u308b\u5834\u6240\u304c\u9055\u3046\u3060\u3051\u3002\n\n\u7d50\u679c\n100000000\u56de\u7e70\u308a\u8fd4\u3057\u305f\u7d50\u679c\nBefore:      0.198654sec\nAfter:       0.096776sec\n\n\n\u30a2\u30bb\u30f3\u30d6\u30e9\n\n\u9045\u304b\u3063\u305f\u65b9\n\nBefore.asm\npush    ebp\nmov ebp, esp\npush    esi\nmov esi, DWORD PTR _r$[ebp]\npush    edi\nmov edi, DWORD PTR _b$[ebp]\nmovzx   ecx, WORD PTR [edi]\nmovzx   eax, WORD PTR [edi+8]\nmovzx   edx, WORD PTR [edi+2]\nmov WORD PTR [esi], ax\nmovzx   eax, WORD PTR [ecx+edi+8]\nmov WORD PTR [esi+2], ax\nlea eax, DWORD PTR [ecx+edx]\nmovzx   eax, WORD PTR [eax+edi+8]\npop edi\nmov WORD PTR [esi+4], ax\npop esi\npop ebp\nret 8\n\n\n\n\n\u901f\u304b\u3063\u305f\u65b9\n\nAfter.cpp\npush    ebp\nmov ebp, esp\nmov edx, DWORD PTR _b$[ebp]\nmov ecx, DWORD PTR _r$[ebp]\nmovzx   eax, WORD PTR [edx+8]\nmov WORD PTR [ecx], ax\nmovzx   eax, WORD PTR [edx+40]\nmov WORD PTR [ecx+2], ax\nmovzx   eax, WORD PTR [edx+72]\nmov WORD PTR [ecx+4], ax\npop ebp\nret 8\n\n\n\n\u8003\u5bdf\n\u30dd\u30a4\u30f3\u30bf\u304b\u3089\u30c7\u30fc\u30bf\u3068\u3063\u3066\u304d\u3066\u308b\u306e\u3067\u53b3\u5bc6\u306b\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u53d6\u5f97\u3057\u3066\u4fdd\u6301\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u30c7\u30fc\u30bf\u5909\u308f\u308b\u304b\u3082\uff01\u3068\u30b3\u30f3\u30d1\u30a4\u30e9\u3055\u3093\u304c\u6c17\u3092\u5229\u304b\u305b\u3066\u304f\u308c\u3066\u3044\u308b\u3063\u307d\u3044\u3002\n\u305d\u306e\u305b\u3044\u3067\u4f59\u5206\u306apush, pop, lea\u304c\u51fa\u3066\u304d\u3066\u3044\u308b\u3063\u307d\u3044\u3002\n\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\u76f4\u524d\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30b9\u30bf\u30c3\u30af\u3078\u306e\u51fa\u3057\u5165\u308c\u304c\u6e1b\u3063\u305f\u304a\u304b\u3052\u3067\u901f\u304f\u306a\u3063\u305f\u3063\u307d\u3044\u3002\n\u3063\u307d\u3044\uff1f\n\u30dd\u30a4\u30f3\u30bf\u304c\u6307\u3057\u793a\u3059\u30c7\u30fc\u30bf\u3092\u4e00\u6642\u5909\u6570\u306b\u53d7\u3051\u3066\u3044\u305f\u305b\u3044\u3067\u6700\u9069\u5316\u304c\u52b9\u304b\u306a\u304f\u306a\u3063\u3066\u6fc0\u9045\u306b\u306a\u3063\u305f\u30d1\u30bf\u30fc\u30f3\u3002\n\u30a2\u30bb\u30f3\u30d6\u30ea\u30b3\u30fc\u30c9\u3092\u3057\u3070\u3089\u304f\u773a\u3081\u3066\u3084\u3063\u3068\u6c17\u3065\u3044\u305f\u3002\n\u305d\u3093\u306a\u6982\u5ff5\u3059\u3063\u304b\u308a\u5fd8\u308c\u3066\u305f\u3002\n\n##\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n### \u9045\u304b\u3063\u305f\u65b9\n\n```cpp:Before.cpp\nclass BufferAnalyzeDirect\n{\npublic:\n\tstatic const size_t msgOfs_ = offsetof(Header, messageByte);\n\tstatic const size_t optOfs_ = offsetof(Header, optionByte);\n\tvoid operator()(uint8_t* b, Result & r)\n\t{\n\t\tuint16_t msgByte = *reinterpret_cast<uint16_t*>(&b[msgOfs_]);\n\t\tuint16_t optByte = *reinterpret_cast<uint16_t*>(&b[optOfs_]);\n\t\tr.requestStatus = *reinterpret_cast<uint16_t*>(&b[4 + 4]);\n\t\tr.optionCode = *reinterpret_cast<uint16_t*>(&b[4 + 4 + msgByte]);\n\t\tr.count = *reinterpret_cast<uint16_t*>(&b[4 + 4 + msgByte + optByte]);\n\t}\n};\n```\n\nC\u8a00\u8a9e\u30c1\u30c3\u30af\u306b\u30b9\u30b3\u30fc\u30d7\u306e\u5148\u982d\u3067\u5909\u6570\u5ba3\u8a00\u3057\u3066\u305f\u3002\n\n\n### \u901f\u304b\u3063\u305f\u65b9\n\n```cpp:After.cpp\nclass BufferAnalyzeDirect\n{\npublic:\n\tstatic const size_t msgOfs_ = offsetof(Header, messageByte);\n\tstatic const size_t optOfs_ = offsetof(Header, optionByte);\n\tvoid operator()(uint8_t* b, Result & r)\n\t{\n\t\tr.requestStatus = *reinterpret_cast<uint16_t*>(&b[4 + 4]);\n\t\tuint16_t msgByte = *reinterpret_cast<uint16_t*>(&b[msgOfs_]);\n\t\tr.optionCode = *reinterpret_cast<uint16_t*>(&b[4 + 4 + msgByte]);\n\t\tuint16_t optByte = *reinterpret_cast<uint16_t*>(&b[optOfs_]);\n\t\tr.count = *reinterpret_cast<uint16_t*>(&b[4 + 4 + msgByte + optByte]);\n\t}\n};\n```\n\n\u4e00\u6642\u5909\u6570\u3092\u53d7\u3051\u308b\u5834\u6240\u304c\u9055\u3046\u3060\u3051\u3002\n\n## \u7d50\u679c\n\n100000000\u56de\u7e70\u308a\u8fd4\u3057\u305f\u7d50\u679c\n\n```\nBefore:      0.198654sec\nAfter:       0.096776sec\n```\n\n## \u30a2\u30bb\u30f3\u30d6\u30e9\n\n### \u9045\u304b\u3063\u305f\u65b9\n\n```asm:Before.asm\npush\tebp\nmov\tebp, esp\npush\tesi\nmov\tesi, DWORD PTR _r$[ebp]\npush\tedi\nmov\tedi, DWORD PTR _b$[ebp]\nmovzx\tecx, WORD PTR [edi]\nmovzx\teax, WORD PTR [edi+8]\nmovzx\tedx, WORD PTR [edi+2]\nmov\tWORD PTR [esi], ax\nmovzx\teax, WORD PTR [ecx+edi+8]\nmov\tWORD PTR [esi+2], ax\nlea\teax, DWORD PTR [ecx+edx]\nmovzx\teax, WORD PTR [eax+edi+8]\npop\tedi\nmov\tWORD PTR [esi+4], ax\npop\tesi\npop\tebp\nret\t8\n\n```\n\n### \u901f\u304b\u3063\u305f\u65b9\n\n```asm:After.cpp\npush\tebp\nmov\tebp, esp\nmov\tedx, DWORD PTR _b$[ebp]\nmov\tecx, DWORD PTR _r$[ebp]\nmovzx\teax, WORD PTR [edx+8]\nmov\tWORD PTR [ecx], ax\nmovzx\teax, WORD PTR [edx+40]\nmov\tWORD PTR [ecx+2], ax\nmovzx\teax, WORD PTR [edx+72]\nmov\tWORD PTR [ecx+4], ax\npop\tebp\nret\t8\n```\n\n## \u8003\u5bdf\n\n\u30dd\u30a4\u30f3\u30bf\u304b\u3089\u30c7\u30fc\u30bf\u3068\u3063\u3066\u304d\u3066\u308b\u306e\u3067\u53b3\u5bc6\u306b\u305d\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u53d6\u5f97\u3057\u3066\u4fdd\u6301\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u30c7\u30fc\u30bf\u5909\u308f\u308b\u304b\u3082\uff01\u3068\u30b3\u30f3\u30d1\u30a4\u30e9\u3055\u3093\u304c\u6c17\u3092\u5229\u304b\u305b\u3066\u304f\u308c\u3066\u3044\u308b\u3063\u307d\u3044\u3002\n\u305d\u306e\u305b\u3044\u3067\u4f59\u5206\u306apush, pop, lea\u304c\u51fa\u3066\u304d\u3066\u3044\u308b\u3063\u307d\u3044\u3002\n\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\u76f4\u524d\u3067\u53d6\u5f97\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30b9\u30bf\u30c3\u30af\u3078\u306e\u51fa\u3057\u5165\u308c\u304c\u6e1b\u3063\u305f\u304a\u304b\u3052\u3067\u901f\u304f\u306a\u3063\u305f\u3063\u307d\u3044\u3002\n\n\u3063\u307d\u3044\uff1f\n"}