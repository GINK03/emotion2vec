{"tags": ["python3", "pandas"], "context": "\n\n\u76ee\u7684\n\u30c7\u30fc\u30bf\u7cfb\u5217\u4e2d\u306b\u4f55\u56de\u540c\u3058\u5024\u304c\u9023\u7d9a\u3057\u3066\u3044\u308b\u304b\u8abf\u3079\u305f\u3044\n\n\u601d\u60f3\n\u5b9f\u76f4\u306bfor\u6587\u3092\u56de\u3057\u3066\u3082\u3044\u3044\u3051\u3069\u30b9\u30de\u30fc\u30c8\u306b\u66f8\u304d\u305f\u3044\n\n\u89e3\u6c7a\u624b\u6bb5\npandas\u306eshift, cumsum, groupby\u3092\u5b58\u5206\u306b\u4f7f\u3046\n\n\u5b9f\u88c5\nimport numpy as np\nimport pandas as pd\nimport random\n\n def continue_count(df):\n    # NaN\u306f\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u6642\u306b\u7121\u8996\u3055\u308c\u308b\u306e\u3067\u9069\u5f53\u306b\u5165\u308c\u66ff\u3048\u3066\u304a\u304f\n    df['new_value'] = df['value'].fillna('-')\n    # 1\u500b\u30b7\u30d5\u30c8\u3057\u305f\u884c\u304c\u9055\u3046\u5024\u306a\u3089 +1cumsum, \u540c\u3058\u5024\u306a\u3089 no cumsum \n    df['changepoint_cumsum'] = (df['new_value'] != df['new_value'].shift()).cumsum()\n    # new_value\u3068continue_cumsum\u3067\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\n    df_group = df.groupby(['new_value', 'changepoint_cumsum'])\n    mi_df = df.set_index(['new_value', 'changepoint_cumsum'])\n    # \u5404\u30b0\u30eb\u30fc\u30d7\u306b\u5165\u3063\u3066\u3044\u308b\u5024\u3092\u30ab\u30a6\u30f3\u30c8 & \u5143\u30c7\u30fc\u30bf\u3068\u30ac\u30c3\u30c1\u30e3\u30f3\u30b3\n    mi_df['continue_count'] = df_group['new_value'].count()\n    # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u3082\u3069\u3057\u3066\u4e0a\u3052\u308b\n    df = mi_df.reset_index()\n    return df.drop(['new_value', 'changepoint_cumsum'], axis=1)\n\nif __name__ == '__main__':\n    ASSET = [-30, -1, 1, 5, 100, np.nan]\n    # \"1, 3, 5, nan\"\u304b\u3089\u3069\u308c\u304b\uff11\u3064\u30925000\u56de\u9078\u3093\u3067\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u7528\u610f\n    df = pd.DataFrame({'value': [random.choice(ASSET) for i in range(5000)]})\n    print(continue_count(df))\n\n\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\n      value  continue_count\n0       1.0               1\n1     -30.0               2\n2     -30.0               2\n3     100.0               1\n4       5.0               1\n5     -30.0               1\n6       NaN               1\n7     -30.0               1\n8       5.0               2\n9       5.0               2\n10    100.0               2\n11    100.0               2\n...\n\n\u306a\u306e\u3067\u30015\u56de\u4ee5\u4e0a\u9023\u7d9a\u3057\u3066\u3044\u308b\u884c\u3092\u8abf\u3079\u305f\u3044\u3068\u304d\u306f\ndf[df['continue_count'] >= 5]\n\n\u3067\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n## \u76ee\u7684\n\u30c7\u30fc\u30bf\u7cfb\u5217\u4e2d\u306b\u4f55\u56de\u540c\u3058\u5024\u304c\u9023\u7d9a\u3057\u3066\u3044\u308b\u304b\u8abf\u3079\u305f\u3044\n\n## \u601d\u60f3\n\u5b9f\u76f4\u306bfor\u6587\u3092\u56de\u3057\u3066\u3082\u3044\u3044\u3051\u3069\u30b9\u30de\u30fc\u30c8\u306b\u66f8\u304d\u305f\u3044\n\n## \u89e3\u6c7a\u624b\u6bb5\npandas\u306eshift, cumsum, groupby\u3092\u5b58\u5206\u306b\u4f7f\u3046\n\n## \u5b9f\u88c5\n\n```py\nimport numpy as np\nimport pandas as pd\nimport random\n\n def continue_count(df):\n    # NaN\u306f\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\u6642\u306b\u7121\u8996\u3055\u308c\u308b\u306e\u3067\u9069\u5f53\u306b\u5165\u308c\u66ff\u3048\u3066\u304a\u304f\n    df['new_value'] = df['value'].fillna('-')\n    # 1\u500b\u30b7\u30d5\u30c8\u3057\u305f\u884c\u304c\u9055\u3046\u5024\u306a\u3089 +1cumsum, \u540c\u3058\u5024\u306a\u3089 no cumsum \n    df['changepoint_cumsum'] = (df['new_value'] != df['new_value'].shift()).cumsum()\n    # new_value\u3068continue_cumsum\u3067\u30b0\u30eb\u30fc\u30d4\u30f3\u30b0\n    df_group = df.groupby(['new_value', 'changepoint_cumsum'])\n    mi_df = df.set_index(['new_value', 'changepoint_cumsum'])\n    # \u5404\u30b0\u30eb\u30fc\u30d7\u306b\u5165\u3063\u3066\u3044\u308b\u5024\u3092\u30ab\u30a6\u30f3\u30c8 & \u5143\u30c7\u30fc\u30bf\u3068\u30ac\u30c3\u30c1\u30e3\u30f3\u30b3\n    mi_df['continue_count'] = df_group['new_value'].count()\n    # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u3082\u3069\u3057\u3066\u4e0a\u3052\u308b\n    df = mi_df.reset_index()\n    return df.drop(['new_value', 'changepoint_cumsum'], axis=1)\n\nif __name__ == '__main__':\n    ASSET = [-30, -1, 1, 5, 100, np.nan]\n    # \"1, 3, 5, nan\"\u304b\u3089\u3069\u308c\u304b\uff11\u3064\u30925000\u56de\u9078\u3093\u3067\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u7528\u610f\n    df = pd.DataFrame({'value': [random.choice(ASSET) for i in range(5000)]})\n    print(continue_count(df))\n```\n\n\u51fa\u529b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\n\n```py\n      value  continue_count\n0       1.0               1\n1     -30.0               2\n2     -30.0               2\n3     100.0               1\n4       5.0               1\n5     -30.0               1\n6       NaN               1\n7     -30.0               1\n8       5.0               2\n9       5.0               2\n10    100.0               2\n11    100.0               2\n...\n```\n\n\u306a\u306e\u3067\u30015\u56de\u4ee5\u4e0a\u9023\u7d9a\u3057\u3066\u3044\u308b\u884c\u3092\u8abf\u3079\u305f\u3044\u3068\u304d\u306f\n\n```py\ndf[df['continue_count'] >= 5]\n```\n\n\u3067\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n"}