{"context": " More than 1 year has passed since last update.\n\n\u3084\u308a\u305f\u3044\u3053\u3068\nCloudWatch \u3067 MySQL \u306e connection \u6570\u3084 CPU \u4f7f\u7528\u7387\u306a\u3069\u3092\u76e3\u8996\u3057\u3066\u3044\u308b\u72b6\u6cc1\u3067\u3001\u8b66\u544a\u304c\u767a\u751f\u3057\u305f\u3068\u304d\u306b\u5373\u5ea7\u306b processlist \u3092\u53d6\u5f97\u3057\u305f\u3044.\n\n\u3084\u308a\u304b\u305f\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a Lambda function \u3092\u4f5c\u6210\u3057\u3001Event source \u3068\u3057\u3066(RDS connection alert\u306a\u3069\u306e\u901a\u77e5\u5148\u306b\u8a2d\u5b9a\u3057\u305f)\u9069\u5f53\u306a SNS Topic \u306b\u5bfe\u3057\u3066 subscribe \u3057\u3066\u304a\u3051\u3070\u826f\u3044.\n\npackage.json\n:\n    \"dependencies\": {\n    \"mysql\": \"2.10.2\",\n    \"slack-node\": \"0.1.7\"\n  },\n:\n\n\n\nindex.js\nvar Slack = require('slack-node');\nvar Mysql = require('mysql');\n\nexports.handler = function(event, context) {\n    var post = function(text, context){\n        var slack = new Slack();\n        slack.setWebhook(\"https://hooks.slack.com/services/xxxxxxxxxxxxxxxxxx\");\n        slack.webhook({\n            channel: \"#healthcheck\",\n            username: \"CloudWatch\",\n            text: text\n        }, function(err, response){\n            if (err) {\n                console.error(err);\n                console.log(response);\n                context.fail('failure slack post');\n            } else {\n                context.succeed();\n            }\n        });\n    };\n\n    var connection = Mysql.createConnection({\n        host     : 'xxxxxxxxx.xxxxxxxxxxxxxx.ap-northeast-1.rds.amazonaws.com',\n        user     : 'xxxxxxxxx',\n        password : 'xxxxxxxxx',\n        database : 'xxxxxxxxx'\n    });\n\n    connection.connect();\n\n    connection.query('show processlist;', function(err, rows, fields) {\n        if (err) throw err;\n\n        // \u3053\u3053\u3067\u9069\u5f53\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066\u3084\u308b\u3068\u307f\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u306a\u3044\n        var text = JSON.stringify(rows);\n        post(text, context);\n    });\n\n};\n\n\n\n\n\u5b9f\u884c\u30a4\u30e1\u30fc\u30b8\n\n\n\u6ce8\u610f\u70b9\nVPC \u69cb\u6210\u306e DB \u306b\u5bfe\u3057\u3066\u3053\u308c\u3092\u3084\u308b\u5834\u5408\u306f\u3001Slack \u3078\u306e\u5916\u90e8\u30a2\u30af\u30bb\u30b9\u3092\u304a\u3053\u306a\u3046\u305f\u3081\u3001private subnet & NAT Gateway (\u3082\u3057\u304f\u306f NAT \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9) \u306a\u74b0\u5883\u3067 Lambda function \u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u8a2d\u5b9a\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b. public subnet & Internet Gateway \u74b0\u5883\u3067\u306f\u30c0\u30e1.\n\n\u53c2\u8003\n\nAmazon Web Services \u30d6\u30ed\u30b0: [New] Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u304b\u3089\u306eVPC\u5185\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9\nCloudWatch\u306eAlert\u3092AWS Lambda\u7d4c\u7531\u3067Slack\u306b\u98db\u3070\u3059 - Qiita\n\n\n# \u3084\u308a\u305f\u3044\u3053\u3068\n\nCloudWatch \u3067 MySQL \u306e connection \u6570\u3084 CPU \u4f7f\u7528\u7387\u306a\u3069\u3092\u76e3\u8996\u3057\u3066\u3044\u308b\u72b6\u6cc1\u3067\u3001\u8b66\u544a\u304c\u767a\u751f\u3057\u305f\u3068\u304d\u306b\u5373\u5ea7\u306b processlist \u3092\u53d6\u5f97\u3057\u305f\u3044.\n\n# \u3084\u308a\u304b\u305f\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a Lambda function \u3092\u4f5c\u6210\u3057\u3001Event source \u3068\u3057\u3066(RDS connection alert\u306a\u3069\u306e\u901a\u77e5\u5148\u306b\u8a2d\u5b9a\u3057\u305f)\u9069\u5f53\u306a SNS Topic \u306b\u5bfe\u3057\u3066 subscribe \u3057\u3066\u304a\u3051\u3070\u826f\u3044.\n\n```package.json\n:\n    \"dependencies\": {\n    \"mysql\": \"2.10.2\",\n    \"slack-node\": \"0.1.7\"\n  },\n:\n```\n\n```index.js\nvar Slack = require('slack-node');\nvar Mysql = require('mysql');\n\nexports.handler = function(event, context) {\n    var post = function(text, context){\n        var slack = new Slack();\n        slack.setWebhook(\"https://hooks.slack.com/services/xxxxxxxxxxxxxxxxxx\");\n        slack.webhook({\n            channel: \"#healthcheck\",\n            username: \"CloudWatch\",\n            text: text\n        }, function(err, response){\n            if (err) {\n                console.error(err);\n                console.log(response);\n                context.fail('failure slack post');\n            } else {\n                context.succeed();\n            }\n        });\n    };\n\n    var connection = Mysql.createConnection({\n        host     : 'xxxxxxxxx.xxxxxxxxxxxxxx.ap-northeast-1.rds.amazonaws.com',\n        user     : 'xxxxxxxxx',\n        password : 'xxxxxxxxx',\n        database : 'xxxxxxxxx'\n    });\n\n    connection.connect();\n\n    connection.query('show processlist;', function(err, rows, fields) {\n        if (err) throw err;\n        \n        // \u3053\u3053\u3067\u9069\u5f53\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066\u3084\u308b\u3068\u307f\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u306a\u3044\n        var text = JSON.stringify(rows);\n        post(text, context);\n    });\n\n};\n\n```\n\n# \u5b9f\u884c\u30a4\u30e1\u30fc\u30b8\n\n![Slack.png](https://qiita-image-store.s3.amazonaws.com/0/1329/71ee4eca-8204-2a69-7dc5-504c1cb768be.png \"Slack.png\")\n\n# \u6ce8\u610f\u70b9\n\nVPC \u69cb\u6210\u306e DB \u306b\u5bfe\u3057\u3066\u3053\u308c\u3092\u3084\u308b\u5834\u5408\u306f\u3001Slack \u3078\u306e\u5916\u90e8\u30a2\u30af\u30bb\u30b9\u3092\u304a\u3053\u306a\u3046\u305f\u3081\u3001private subnet & NAT Gateway (\u3082\u3057\u304f\u306f NAT \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9) \u306a\u74b0\u5883\u3067 Lambda function \u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u8a2d\u5b9a\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b. public subnet & Internet Gateway \u74b0\u5883\u3067\u306f\u30c0\u30e1.\n\n# \u53c2\u8003\n\n* [Amazon Web Services \u30d6\u30ed\u30b0: [New] Lambda\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u304b\u3089\u306eVPC\u5185\u30ea\u30bd\u30fc\u30b9\u3078\u306e\u30a2\u30af\u30bb\u30b9](http://aws.typepad.com/aws_japan/2016/02/access-resources-in-a-vpc-from-your-lambda-functions.html)\n* [CloudWatch\u306eAlert\u3092AWS Lambda\u7d4c\u7531\u3067Slack\u306b\u98db\u3070\u3059 - Qiita](http://qiita.com/tmtysk/items/7161b11e20ac5e2dfc01)\n", "tags": ["lambda", "AWS", "CloudWatch", "Slack", "MySQL"]}