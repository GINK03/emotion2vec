{"tags": ["Aurora", "RDS", "AWS"], "context": "Amazon Auroa\u3068RDS(Mysql 5.6)\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nDB \u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u4ee5\u4e0b\u306eCLI\u3067\u53d6\u5f97\u3057\u3066\u3001json\u5f62\u5f0f\u3092csv\u306b\u3057\u307e\u3057\u305f\u3002\naws rds describe-db-parameters --db-parameter-group-name test-pg | jq '.Parameters[] | { ParameterName, Source, Description }' | jq -r \"[.ParameterName,.Source,.Description] | @csv\"\n\nAmazon Aurora\u3067\u65b0\u305f\u306b\u8ffd\u52a0\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\n\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\nDescription\n\n\n\n\ntable_cache_element_entry_ttl\ntable_cache_element_entry_ttl\n\n\nthread_handling\nThe thread-handling model used by the server for connection threads.\n\n\n\nAmazon Aurora\u306eDB Paramter Group\u306b\u306a\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\n\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\nDescription\n\n\n\n\nauto_increment_increment\nIntended for use with master-to-master replication, and can be used to control the operation of AUTO_INCREMENT columns\n\n\nauto_increment_offset\nDetermines the starting point for the AUTO_INCREMENT column value\n\n\nbinlog_checksum\nWhen enabled, this variable causes the master to write a checksum for each event in the binary log.\n\n\nbinlog_error_action\nControls what happens when the server cannot write to the binary log.\n\n\nbinlog_format\nRow or Mixed replication\n\n\nbinlog_row_image\nWhether the server logs full or minmal rows with row-based replication.\n\n\nbinlog_rows_query_log_events\nWhen enabled, it causes a MySQL 5.6.2 or later server to write informational log events such as row query log events into its binary log.\n\n\nbinlogging_impossible_mode\nUse the renamed binlog_error_action to control what happens when the server cannot write to the binary log.\n\n\ncompletion_type\nThe transaction completion type (0 - default, 1 - chain, 2 - release)\n\n\ndefault_storage_engine\nThe default storage engine (table type).\n\n\ndefault_tmp_storage_engine\nThe default storage engine for TEMPORARY tables.\n\n\ninnodb_adaptive_flushing_lwm\nLow water mark representing percentage of redo log capacity at which adaptive flushing is enabled.\n\n\ninnodb_autoinc_lock_mode\nThe locking mode to use for generating auto-increment values\n\n\ninnodb_buffer_pool_instances\nThe number of regions that the InnoDB buffer pool is divided into\n\n\ninnodb_change_buffering\nControls InnoDB change buffering\n\n\ninnodb_checksum_algorithm\nSpecifies how to generate and verify the checksum stored in each disk block of each InnoDB tablespace.\n\n\ninnodb_cmp_per_index_enabled\nEnables per-index compression-related statistics in the INFORMATION_SCHEMA.INNODB_CMP_PER_INDEX table.\n\n\ninnodb_commit_concurrency\nThe number of threads that can commit at the same time.\n\n\ninnodb_data_home_dir\nDirectory where innodb files are stored\n\n\ninnodb_file_per_table\nUse tablespaces or files for Innodb.\n\n\ninnodb_flush_log_at_trx_commit\nDetermines Innodb transaction durability\n\n\ninnodb_ft_max_token_size\nMaximum length of words that are stored in an InnoDB FULLTEXT index.\n\n\ninnodb_ft_min_token_size\nMinimum length of words that are stored in an InnoDB FULLTEXT index.\n\n\ninnodb_ft_num_word_optimize\nNumber of words to process during each OPTIMIZE TABLE operation on an InnoDB FULLTEXT index.\n\n\ninnodb_ft_sort_pll_degree\nNumber of threads used in parallel to index and tokenize text in an InnoDB FULLTEXT index, when building a search index for a large table.\n\n\ninnodb_log_buffer_size\nThe size in bytes of the buffer that innodb uses to write to the log files on disk\n\n\ninnodb_log_file_size\nThe size in bytes of each log file in a log group\n\n\ninnodb_log_group_home_dir\nThe directory path to the innodb log files\n\n\ninnodb_online_alter_log_max_size\nSpecifies an upper limit on the size of the temporary log files used during online DDL operations for InnoDB tables.\n\n\ninnodb_optimize_fulltext_only\nChanges the way the OPTIMIZE TABLE statement operates on InnoDB tables.\n\n\ninnodb_page_size\nSpecifies the page size for all InnoDB tablespaces in a MySQL instance.\n\n\ninnodb_print_all_deadlocks\nSpecifies the page size for all InnoDB tablespaces in a MySQL instance.\n\n\ninnodb_purge_batch_size\nThe granularity of changes, expressed in units of redo log records, that trigger a purge operation, flushing the changed buffer pool blocks to disk\n\n\ninnodb_purge_threads\nThe number of background threads devoted to the InnoDB purge operation\n\n\ninnodb_rollback_on_timeout\nControls whether timeouts rollback the last statement or the entire transaction\n\n\ninnodb_rollback_segments\nDefines how many of the rollback segments in the system tablespace that InnoDB uses within a transaction.\n\n\ninnodb_spin_wait_delay\nThe maximum delay between polls for a spin lock.\n\n\ninnodb_stats_auto_recalc\nCauses InnoDB to automatically recalculate persistent statistics after the data in a table is changed substantially.\n\n\ninnodb_strict_mode\nWhether InnoDB returns errors rather than warnings for exceptional conditions.\n\n\ninnodb_support_xa\nEnables two phase commit in XA transactions\n\n\ninnodb_sync_array_size\nSplits an internal data structure used to coordinate threads, for higher concurrency in workloads with large numbers of waiting threads.\n\n\ninnodb_sync_spin_loops\nThe number of times a thread waits for an innodb mutex to be freed before the thread is suspended\n\n\ninnodb_table_locks\nIf autocommit = 0, innodb honors LOCK TABLES\n\n\ninnodb_undo_directory\n\n\n\ninnodb_undo_logs\nDefines how many of the rollback segments in the system tablespace that InnoDB uses within a transaction.\n\n\ninnodb_undo_tablespaces\nThe number of tablespace files that the undo logs are divided between, when you use a non-zero innodb_undo_logs setting.\n\n\nlc_time_names\nThis variable specifies the locale that controls the language used to display day and month names and abbreviations.\n\n\nlower_case_table_names\nAffects how the server handles identifier case sensitivity\n\n\nmaster-info-repository\nThis option causes the server to write its master info log to a file or a table.\n\n\nmaster_verify_checksum\nEnabling this variable causes the master to examine checksums when reading from the binary log.\n\n\nserver_id\nInteger value used to identify the instance in a replication group\n\n\nsimplified_binlog_gtid_recovery\nControls how MySQL searches for GID events through binary log files.\n\n\nskip-character-set-client-handshake\nIgnore character set information sent by the client.\n\n\nskip_name_resolve\nHost names are not resolved. All Host column values in the grant tables must be IP numbers or localhost.\n\n\nsync_frm\nFor non-temporary tables controls if .frm file is sync'ed to disk.\n\n\ntable_open_cache_instances\nThe number of open tables cache instances.\n\n\n\nAmazon Auroa\u3068RDS(Mysql 5.6)\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nDB \u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u4ee5\u4e0b\u306eCLI\u3067\u53d6\u5f97\u3057\u3066\u3001json\u5f62\u5f0f\u3092csv\u306b\u3057\u307e\u3057\u305f\u3002\n\n```\naws rds describe-db-parameters --db-parameter-group-name test-pg | jq '.Parameters[] | { ParameterName, Source, Description }' | jq -r \"[.ParameterName,.Source,.Description] | @csv\"\n```\n\nAmazon Aurora\u3067\u65b0\u305f\u306b\u8ffd\u52a0\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\n\n|\u30d1\u30e9\u30e1\u30fc\u30bf|Description|\n|---|---|\n|table_cache_element_entry_ttl|table_cache_element_entry_ttl|\n|thread_handling|The thread-handling model used by the server for connection threads.|\n\nAmazon Aurora\u306eDB Paramter Group\u306b\u306a\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\n\n|\u30d1\u30e9\u30e1\u30fc\u30bf|Description|\n|---|---|\n|auto_increment_increment|Intended for use with master-to-master replication, and can be used to control the operation of AUTO_INCREMENT columns|\n|auto_increment_offset|Determines the starting point for the AUTO_INCREMENT column value|\n|binlog_checksum|When enabled, this variable causes the master to write a checksum for each event in the binary log.|\n|binlog_error_action|Controls what happens when the server cannot write to the binary log.|\n|binlog_format|Row or Mixed replication|\n|binlog_row_image|Whether the server logs full or minmal rows with row-based replication.|\n|binlog_rows_query_log_events|When enabled, it causes a MySQL 5.6.2 or later server to write informational log events such as row query log events into its binary log.|\n|binlogging_impossible_mode|Use the renamed binlog_error_action to control what happens when the server cannot write to the binary log.|\n|completion_type|The transaction completion type (0 - default, 1 - chain, 2 - release)|\n|default_storage_engine|The default storage engine (table type).|\n|default_tmp_storage_engine|The default storage engine for TEMPORARY tables.|\n|innodb_adaptive_flushing_lwm|Low water mark representing percentage of redo log capacity at which adaptive flushing is enabled.|\n|innodb_autoinc_lock_mode|The locking mode to use for generating auto-increment values|\n|innodb_buffer_pool_instances|The number of regions that the InnoDB buffer pool is divided into|\n|innodb_change_buffering|Controls InnoDB change buffering|\n|innodb_checksum_algorithm|Specifies how to generate and verify the checksum stored in each disk block of each InnoDB tablespace.|\n|innodb_cmp_per_index_enabled|Enables per-index compression-related statistics in the INFORMATION_SCHEMA.INNODB_CMP_PER_INDEX table.|\n|innodb_commit_concurrency|The number of threads that can commit at the same time.|\n|innodb_data_home_dir|Directory where innodb files are stored|\n|innodb_file_per_table|Use tablespaces or files for Innodb.|\n|innodb_flush_log_at_trx_commit|Determines Innodb transaction durability|\n|innodb_ft_max_token_size|Maximum length of words that are stored in an InnoDB FULLTEXT index.|\n|innodb_ft_min_token_size|Minimum length of words that are stored in an InnoDB FULLTEXT index.|\n|innodb_ft_num_word_optimize|Number of words to process during each OPTIMIZE TABLE operation on an InnoDB FULLTEXT index.|\n|innodb_ft_sort_pll_degree|Number of threads used in parallel to index and tokenize text in an InnoDB FULLTEXT index, when building a search index for a large table.|\n|innodb_log_buffer_size|The size in bytes of the buffer that innodb uses to write to the log files on disk|\n|innodb_log_file_size|The size in bytes of each log file in a log group|\n|innodb_log_group_home_dir|The directory path to the innodb log files|\n|innodb_online_alter_log_max_size|Specifies an upper limit on the size of the temporary log files used during online DDL operations for InnoDB tables.|\n|innodb_optimize_fulltext_only|Changes the way the OPTIMIZE TABLE statement operates on InnoDB tables.|\n|innodb_page_size|Specifies the page size for all InnoDB tablespaces in a MySQL instance.|\n|innodb_print_all_deadlocks|Specifies the page size for all InnoDB tablespaces in a MySQL instance.|\n|innodb_purge_batch_size|The granularity of changes, expressed in units of redo log records, that trigger a purge operation, flushing the changed buffer pool blocks to disk|\n|innodb_purge_threads|The number of background threads devoted to the InnoDB purge operation|\n|innodb_rollback_on_timeout|Controls whether timeouts rollback the last statement or the entire transaction|\n|innodb_rollback_segments|Defines how many of the rollback segments in the system tablespace that InnoDB uses within a transaction.|\n|innodb_spin_wait_delay|The maximum delay between polls for a spin lock.|\n|innodb_stats_auto_recalc|Causes InnoDB to automatically recalculate persistent statistics after the data in a table is changed substantially.|\n|innodb_strict_mode|Whether InnoDB returns errors rather than warnings for exceptional conditions.|\n|innodb_support_xa|Enables two phase commit in XA transactions|\n|innodb_sync_array_size|Splits an internal data structure used to coordinate threads, for higher concurrency in workloads with large numbers of waiting threads.|\n|innodb_sync_spin_loops|The number of times a thread waits for an innodb mutex to be freed before the thread is suspended|\n|innodb_table_locks|If autocommit = 0, innodb honors LOCK TABLES|\n|innodb_undo_directory||The relative or absolute directory path where InnoDB creates separate tablespaces for the undo logs\n|innodb_undo_logs|Defines how many of the rollback segments in the system tablespace that InnoDB uses within a transaction.|\n|innodb_undo_tablespaces|The number of tablespace files that the undo logs are divided between, when you use a non-zero innodb_undo_logs setting.|\n|lc_time_names|This variable specifies the locale that controls the language used to display day and month names and abbreviations.|\n|lower_case_table_names|Affects how the server handles identifier case sensitivity|\n|master-info-repository|This option causes the server to write its master info log to a file or a table.|\n|master_verify_checksum|Enabling this variable causes the master to examine checksums when reading from the binary log.|\n|server_id|Integer value used to identify the instance in a replication group|\n|simplified_binlog_gtid_recovery|Controls how MySQL searches for GID events through binary log files.|\n|skip-character-set-client-handshake|Ignore character set information sent by the client.|\n|skip_name_resolve|Host names are not resolved. All Host column values in the grant tables must be IP numbers or localhost.|\n|sync_frm|For non-temporary tables controls if .frm file is sync'ed to disk.|\n|table_open_cache_instances|The number of open tables cache instances.|\n\n\n\n"}