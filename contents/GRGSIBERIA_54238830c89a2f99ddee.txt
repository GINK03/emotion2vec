{"tags": ["Siv3D", "C++"], "context": " More than 1 year has passed since last update.\u30bd\u30ca\u30b0\u30e9\u30e0\u3068\u8a00\u3048\u3070\uff0c\u5468\u6ce2\u6570\u30b9\u30da\u30af\u30c8\u30eb\u306e\u30d1\u30ef\u30fc\u3092\u6642\u9593\u8ef8\u3067\u898b\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u30b0\u30e9\u30d5\u3067\u3059\uff0e\u30b9\u30da\u30af\u30c8\u30eb\u306e\u6642\u9593\u5909\u5316\u3092\u78ba\u8a8d\u3057\u305f\u3044\u6642\u306b\u4f7f\u308f\u308c\u307e\u3059\uff0e\n\u30bd\u30ca\u30b0\u30e9\u30e0\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u3092\u4f5c\u3063\u3066\u307f\u305f\u304b\u3063\u305f\u306e\u3067\uff0cSiv3D\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\uff0e\n\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n    const Font font(30);\n\n    Window::Resize(1024, 1024);\n    Recorder::SetBufferLengthBySec(s3d::RecorerSamplingRate::S44100, 60 * 5);\n\n    Image image = Image(1024, 1024, Color(0, 0, 0));\n    DynamicTexture texture = DynamicTexture(image);\n\n    if (!Recorder::Start())\n    {\n        return;\n    }\n\n    int count = 1;\n\n    while (System::Update())\n    {\n        if (Recorder::IsEnd())\n        {\n            Recorder::Restart();\n        }\n\n        Waving::FFT(Recorder::GetWave(), Recorder::GetPos(), Waving::SampleLength::Default);\n\n        const float* p = Waving::FFTBuffer();\n\n        for (int i = 0; i < Window::Height(); ++i)\n        {\n            image[i][count] = HSV(-log(p[i]) * 10);\n        }\n\n        //Texture(image).draw();\n        texture.fill(image);\n        texture.draw();\n\n        Line(count, 0, count, Window::Height()).draw();\n        if (++count >= 1024)\n            count = 0;\n        //count++;\n    }\n}\n\n\n\u3061\u306a\u307f\u306b\uff0c\u3069\u3046\u3084\u3089Texture(image).draw()\u3092\u4f55\u5ea6\u3082\u3084\u3063\u3066\u3044\u308b\u3068\uff0c\u7d42\u4e86\u6642\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u843d\u3061\u308b\u307f\u305f\u3044\u3067\u3059\uff0e\u4e00\u5fdc\uff0c\u30a2\u30bb\u30c3\u30c8\u304c\u5927\u91cf\u306b\u751f\u6210\u3068\u524a\u9664\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u308b\uff0c\u3068\u8b66\u544a\u304c\u51fa\u3066\u3044\u305f\u306e\u3067\u6c17\u306b\u306a\u3063\u3066\u306f\u3044\u305f\u306e\u3067\u3059\u304c\u6848\u306e\u5b9a\u3067\u3059\uff0e\u30a2\u30bb\u30c3\u30c8\u5468\u308a\u306e\u8b66\u544a\u304c\u51fa\u306a\u3044\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u5f04\u3063\u305f\u306e\u3067\uff0c\u672c\u5f53\u306b\u307e\u305a\u3044\u65b9\u6cd5\u3060\u3063\u305f\u3093\u3067\u3059\u306d\uff08\uff09\n\u73fe\u72b6\uff0c\u3042\u307e\u308a\u6c17\u306b\u3059\u308b\u3088\u3046\u306a\u30c7\u30e2\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u304c\uff0c\u6c17\u306b\u306a\u308b\u4eba\u306f\u4ed6\u306e\u65b9\u6cd5\u3092\u8003\u3048\u305f\u307b\u3046\u304c\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\nDynamicTexture\u3092\u5229\u7528\u3057\u305f\u3089\u3046\u307e\u304f\u884c\u304d\u307e\u3057\u305f\uff0e\n\u30bd\u30ca\u30b0\u30e9\u30e0\u3068\u8a00\u3048\u3070\uff0c\u5468\u6ce2\u6570\u30b9\u30da\u30af\u30c8\u30eb\u306e\u30d1\u30ef\u30fc\u3092\u6642\u9593\u8ef8\u3067\u898b\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u30b0\u30e9\u30d5\u3067\u3059\uff0e\u30b9\u30da\u30af\u30c8\u30eb\u306e\u6642\u9593\u5909\u5316\u3092\u78ba\u8a8d\u3057\u305f\u3044\u6642\u306b\u4f7f\u308f\u308c\u307e\u3059\uff0e\n\n\u30bd\u30ca\u30b0\u30e9\u30e0\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b6\u3092\u4f5c\u3063\u3066\u307f\u305f\u304b\u3063\u305f\u306e\u3067\uff0cSiv3D\u3067\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\uff0e\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\uff0e\n\n![\u7121\u984c.jpg](https://qiita-image-store.s3.amazonaws.com/0/32219/ad9f4844-17db-503e-ef96-615e335fbd7c.jpeg)\n\n\n```cpp\n# include <Siv3D.hpp>\n\nvoid Main()\n{\n\tconst Font font(30);\n\n\tWindow::Resize(1024, 1024);\n\tRecorder::SetBufferLengthBySec(s3d::RecorerSamplingRate::S44100, 60 * 5);\n\n\tImage image = Image(1024, 1024, Color(0, 0, 0));\n\tDynamicTexture texture = DynamicTexture(image);\n\n\tif (!Recorder::Start())\n\t{\n\t\treturn;\n\t}\n\n\tint count = 1;\n\n\twhile (System::Update())\n\t{\n\t\tif (Recorder::IsEnd())\n\t\t{\n\t\t\tRecorder::Restart();\n\t\t}\n\n\t\tWaving::FFT(Recorder::GetWave(), Recorder::GetPos(), Waving::SampleLength::Default);\n\n\t\tconst float* p = Waving::FFTBuffer();\n\n\t\tfor (int i = 0; i < Window::Height(); ++i)\n\t\t{\n\t\t\timage[i][count] = HSV(-log(p[i]) * 10);\n\t\t}\n\n\t\t//Texture(image).draw();\n\t\ttexture.fill(image);\n\t\ttexture.draw();\n\n\t\tLine(count, 0, count, Window::Height()).draw();\n\t\tif (++count >= 1024)\n\t\t\tcount = 0;\n\t\t//count++;\n\t}\n}\n\n```\n\n~~\u3061\u306a\u307f\u306b\uff0c\u3069\u3046\u3084\u3089Texture(image).draw()\u3092\u4f55\u5ea6\u3082\u3084\u3063\u3066\u3044\u308b\u3068\uff0c\u7d42\u4e86\u6642\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u843d\u3061\u308b\u307f\u305f\u3044\u3067\u3059\uff0e\u4e00\u5fdc\uff0c\u30a2\u30bb\u30c3\u30c8\u304c\u5927\u91cf\u306b\u751f\u6210\u3068\u524a\u9664\u3092\u7e70\u308a\u8fd4\u3057\u3066\u3044\u308b\uff0c\u3068\u8b66\u544a\u304c\u51fa\u3066\u3044\u305f\u306e\u3067\u6c17\u306b\u306a\u3063\u3066\u306f\u3044\u305f\u306e\u3067\u3059\u304c\u6848\u306e\u5b9a\u3067\u3059\uff0e\u30a2\u30bb\u30c3\u30c8\u5468\u308a\u306e\u8b66\u544a\u304c\u51fa\u306a\u3044\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u5f04\u3063\u305f\u306e\u3067\uff0c\u672c\u5f53\u306b\u307e\u305a\u3044\u65b9\u6cd5\u3060\u3063\u305f\u3093\u3067\u3059\u306d\uff08\uff09~~\n\n~~\u73fe\u72b6\uff0c\u3042\u307e\u308a\u6c17\u306b\u3059\u308b\u3088\u3046\u306a\u30c7\u30e2\u3067\u306f\u306a\u3044\u306e\u3067\u3059\u304c\uff0c\u6c17\u306b\u306a\u308b\u4eba\u306f\u4ed6\u306e\u65b9\u6cd5\u3092\u8003\u3048\u305f\u307b\u3046\u304c\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e~~\n\nDynamicTexture\u3092\u5229\u7528\u3057\u305f\u3089\u3046\u307e\u304f\u884c\u304d\u307e\u3057\u305f\uff0e\n"}