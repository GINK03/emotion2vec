{"context": " More than 1 year has passed since last update.\u52d5\u304f\u3068\u3053\u308d\u307e\u3067\u3067\u304d\u305f\u306e\u3067\u5171\u6709\u3057\u307e\u3059\u3002\n\nGemfile\ngroup :development, :test do\n  gem 'capistrano', :require => false\n  gem 'capistrano-rails', :require => false\n  gem 'capistrano-rbenv', :require => false\n  gem 'capistrano-bundler', :require => false\nend\n\n\n\nCapfile\n# Load DSL and Setup Up Stages\nrequire 'capistrano/setup'\n\n# Includes default deployment tasks\nrequire 'capistrano/deploy'\n\nrequire 'capistrano/rbenv'\nset :rbenv_type, :user\nset :rbenv_ruby, '2.0.0-p247'\n\nrequire 'capistrano/bundler'\nrequire 'capistrano/rails/assets'\nrequire 'capistrano/rails/migrations'\n\n# Loads custom tasks from `lib/capistrano/tasks' if you have any defined.\nDir.glob('lib/capistrano/tasks/*.cap').each { |r| import r }\n\n\n\nlib/capistrano/tasks/unicorn.cap\nnamespace :unicorn do\n  task :environment do\n    set :unicorn_pid, \"#{shared_path}/tmp/pids/unicorn.pid\"\n    set :unicorn_config, \"#{current_path}/config/unicorn/#{fetch(:rails_env)}.rb\"\n  end\n\n  def start_unicorn\n    within current_path do\n      execute :bundle, :exec, :unicorn, \"-c #{fetch(:unicorn_config)} -E #{fetch(:rails_env)} -D\"\n    end\n  end\n\n  def stop_unicorn\n    execute :kill, \"-s QUIT $(< #{fetch(:unicorn_pid)})\"\n  end\n\n  def reload_unicorn\n    execute :kill, \"-s USR2 $(< #{fetch(:unicorn_pid)})\"\n  end\n\n  def force_stop_unicorn\n    execute :kill, \"$(< #{fetch(:unicorn_pid)})\"\n  end\n\n  desc \"Start unicorn server\"\n  task :start => :environment do\n    on roles(:app) do\n      start_unicorn\n    end\n  end\n\n  desc \"Stop unicorn server gracefully\"\n  task :stop => :environment do\n    on roles(:app) do\n      stop_unicorn\n    end\n  end\n\n  desc \"Restart unicorn server gracefully\"\n  task :restart => :environment do\n    on roles(:app) do\n      if test(\"[ -f #{fetch(:unicorn_pid)} ]\")\n        reload_unicorn\n      else\n        start_unicorn\n      end\n    end\n  end\n\n  desc \"Stop unicorn server immediately\"\n  task :force_stop => :environment do\n    on roles(:app) do\n      force_stop_unicorn\n    end\n  end\nend\n\n\n\nconfig/deploy.rb\nset :application, 'app'\nset :repo_url, 'git@github.com:your/app.git'\nset :deploy_to, '/var/www/app'\nset :log_level, :info\n\nset :linked_dirs, %w{bin log tmp/pids tmp/cache tmp/sockets vendor/bundle public/system public/assets}\n\nset :ssh_options, {\n  keys: [File.expand_path('~/.ssh/id_rsa')],\n  forward_agent: true,\n  auth_methods: %w(publickey)\n}\n\nnamespace :deploy do\n  desc 'Restart application'\n  task :restart do\n    invoke 'unicorn:restart'\n  end\nend\nafter 'deploy:publishing', 'deploy:restart'\n\n\n\nconfig/deploy/staging.rb\nset :stage, :staging\nset :branch, 'development'\nset :rails_env, 'staging'\nset :migration_role, 'db'\n\nserver 'staging.example.local', user: 'deploy', roles: %w{web app db}\n\n\n\u52d5\u304f\u3068\u3053\u308d\u307e\u3067\u3067\u304d\u305f\u306e\u3067\u5171\u6709\u3057\u307e\u3059\u3002\n\n```ruby:Gemfile\ngroup :development, :test do\n  gem 'capistrano', :require => false\n  gem 'capistrano-rails', :require => false\n  gem 'capistrano-rbenv', :require => false\n  gem 'capistrano-bundler', :require => false\nend\n```\n\n```ruby:Capfile\n# Load DSL and Setup Up Stages\nrequire 'capistrano/setup'\n\n# Includes default deployment tasks\nrequire 'capistrano/deploy'\n\nrequire 'capistrano/rbenv'\nset :rbenv_type, :user\nset :rbenv_ruby, '2.0.0-p247'\n\nrequire 'capistrano/bundler'\nrequire 'capistrano/rails/assets'\nrequire 'capistrano/rails/migrations'\n\n# Loads custom tasks from `lib/capistrano/tasks' if you have any defined.\nDir.glob('lib/capistrano/tasks/*.cap').each { |r| import r }\n```\n\n```ruby:lib/capistrano/tasks/unicorn.cap\nnamespace :unicorn do\n  task :environment do\n    set :unicorn_pid, \"#{shared_path}/tmp/pids/unicorn.pid\"\n    set :unicorn_config, \"#{current_path}/config/unicorn/#{fetch(:rails_env)}.rb\"\n  end\n\n  def start_unicorn\n    within current_path do\n      execute :bundle, :exec, :unicorn, \"-c #{fetch(:unicorn_config)} -E #{fetch(:rails_env)} -D\"\n    end\n  end\n\n  def stop_unicorn\n    execute :kill, \"-s QUIT $(< #{fetch(:unicorn_pid)})\"\n  end\n\n  def reload_unicorn\n    execute :kill, \"-s USR2 $(< #{fetch(:unicorn_pid)})\"\n  end\n\n  def force_stop_unicorn\n    execute :kill, \"$(< #{fetch(:unicorn_pid)})\"\n  end\n\n  desc \"Start unicorn server\"\n  task :start => :environment do\n    on roles(:app) do\n      start_unicorn\n    end\n  end\n\n  desc \"Stop unicorn server gracefully\"\n  task :stop => :environment do\n    on roles(:app) do\n      stop_unicorn\n    end\n  end\n\n  desc \"Restart unicorn server gracefully\"\n  task :restart => :environment do\n    on roles(:app) do\n      if test(\"[ -f #{fetch(:unicorn_pid)} ]\")\n        reload_unicorn\n      else\n        start_unicorn\n      end\n    end\n  end\n\n  desc \"Stop unicorn server immediately\"\n  task :force_stop => :environment do\n    on roles(:app) do\n      force_stop_unicorn\n    end\n  end\nend\n```\n\n```ruby:config/deploy.rb\nset :application, 'app'\nset :repo_url, 'git@github.com:your/app.git'\nset :deploy_to, '/var/www/app'\nset :log_level, :info\n\nset :linked_dirs, %w{bin log tmp/pids tmp/cache tmp/sockets vendor/bundle public/system public/assets}\n\nset :ssh_options, {\n  keys: [File.expand_path('~/.ssh/id_rsa')],\n  forward_agent: true,\n  auth_methods: %w(publickey)\n}\n\nnamespace :deploy do\n  desc 'Restart application'\n  task :restart do\n    invoke 'unicorn:restart'\n  end\nend\nafter 'deploy:publishing', 'deploy:restart'\n```\n\n```ruby:config/deploy/staging.rb\nset :stage, :staging\nset :branch, 'development'\nset :rails_env, 'staging'\nset :migration_role, 'db'\n\nserver 'staging.example.local', user: 'deploy', roles: %w{web app db}\n```", "tags": ["unicorn", "capistrano", "Rails"]}