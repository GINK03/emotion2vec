{"tags": ["Node.js", "letsencrypt"], "context": "\n\nletsencrypt with node.js\n\u500b\u4eba\u7684\u306b\u306f\u4eca\u307e\u3067SSL\u7cfb\u306f\u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u3067\u306a\u3093\u3068\u304b\u3057\u306e\u304e\u5207\u3063\u3066\u304d\u307e\u3057\u305f\u304c\u3001\u3084\u308a\u305f\u3044\u3053\u3068\u7684\u306b\u3069\u3046\u3057\u3066\u3082valid\u306aSSL\u8a3c\u660e\u8a3c\u304c\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067letsencrypt\u3092\u59cb\u3081\u307e\u3057\u305f\u3002\n\u8a18\u4e8b\u5185\u306eexample.com\u306f\u81ea\u5206\u306e\u6301\u3063\u3066\u308b\u30c9\u30e1\u30a4\u30f3\u3067\u3084\u3063\u3066\u306d\u3002\n\nlet's encrypt\nhttps://letsencrypt.jp/ \u3092\u53c2\u8003\u306b /etc/letsencrypt/\u914d\u4e0b\u306b\u8a3c\u660e\u66f8\u306a\u3069\u304c\u63c3\u3063\u305f\u72b6\u614b\u306b\u3057\u307e\u3059\u3002\n# ls /etc/letsencrypt/live/example.com/\ncert.pem  chain.pem  fullchain.pem  privkey.pem\n\nletsencrypt\u306e\u74b0\u5883\u8a2d\u5b9a\u306780\u756a\u30dd\u30fc\u30c8\u304c\u672a\u4f7f\u7528\u72b6\u614b\u3067\u3042\u308b\u3053\u3068\u306f\u30ad\u30e2\u3063\u307d\u3044\u3067\u3059\u3002\n\nnode.js\u3067\u3064\u304b\u3046\n\napp.js\n\"use strict\"\nconst   \nhttps = require('https'),\nfs = require('fs'),\nconf = require('./conf');\n\nconst httpsServ = https.createServer(\n    {   \n        key: fs.readFileSync (conf.key),\n        cert: [fs.readFileSync(conf.cert)],\n        ca:   [fs.readFileSync(conf.chain), fs.readFileSync(conf.fullchain)]\n    },  \n    (req, res) =>{\n        res.write(\"hello\");\n        res.end();\n    }\n).listen(3001);\n\n\n\nconf\nexports.key='/etc/letsencrypt/live/example.com/privkey.pem';\nexports.cert='/etc/letsencrypt/live/example.com/cert.pem';\nexports.chain='/etc/letsencrypt/live/example.com/chain.pem';\nexports.fullchain='/etc/letsencrypt/live/example.com/fullchain.pem';\n\n\n/etc/letsencrypt/live\u914d\u4e0b\u306froot\u30e6\u30fc\u30b6\u3067\u3057\u304b\u8aad\u307f\u8fbc\u3081\u306a\u3044\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u308b\u306e\u3067\u9069\u5f53\u306b\u306a\u3093\u3068\u304b\u3059\u308b\u3053\u3068\u3002\n\ncurl\u3067\u52d5\u4f5c\u78ba\u8a8d\n\u4fee\u6b63\u306b\u4f34\u3044\u3053\u306e\u9805\u76ee\u306e\u7d50\u679c\n$ curl https://example.com:3001\ncurl: (60) Peer's Certificate issuer is not recognized.\nMore details here: http://curl.haxx.se/docs/sslcerts.html\n\ncurl performs SSL certificate verification by default, using a \"bundle\"\n of Certificate Authority (CA) public keys (CA certs). If the default\n bundle file isn't adequate, you can specify an alternate file\n using the --cacert option.\nIf this HTTPS server uses a certificate signed by a CA represented in\n the bundle, the certificate verification probably failed due to a\n problem with the certificate (it might be expired, or the name might\n not match the domain name in the URL).\nIf you'd like to turn off curl's verification of the certificate, use\n the -k (or --insecure) option.\n\n\u3069\u3046\u3082\u3001\u81ea\u5206\u306e\u74b0\u5883\u306e\u60c5\u5831\u3060\u3068\u5358\u7d14\u306b\u306f\u3067\u304d\u306a\u3044\u3089\u3057\u3044...\ncurl\u306b-k\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\u304b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3084\u308b\u3053\u3068\u3067\u3001\u52d5\u4f5c\u3092\u78ba\u8a8d\u3002\n$ curl https://example.com:3001 --cacert /etc/letsencrypt/live/example.com/fullchain.pem\nhello\n\n\u3068\u308a\u3042\u3048\u305a\u5927\u4e08\u592b\u305d\u3046\u3002\u3002\u3002\u304b\u306a\uff1f\n2015/05/11\u4fee\u6b63\nCA\u306bfullchain.pem\u3068chain.pem\u3092\u6307\u5b9a\u3059\u308b\u3068\u602a\u3057\u3044\u6319\u52d5\u304c\u306a\u304f\u306a\u3063\u305f\u306e\u3067\u6307\u5b9a\u3059\u308b\u306e\u304c\u9069\u5207\u306a\u6a21\u69d8\u3002\n# letsencrypt with node.js\n\u500b\u4eba\u7684\u306b\u306f\u4eca\u307e\u3067SSL\u7cfb\u306f\u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u3067\u306a\u3093\u3068\u304b\u3057\u306e\u304e\u5207\u3063\u3066\u304d\u307e\u3057\u305f\u304c\u3001\u3084\u308a\u305f\u3044\u3053\u3068\u7684\u306b\u3069\u3046\u3057\u3066\u3082valid\u306aSSL\u8a3c\u660e\u8a3c\u304c\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067letsencrypt\u3092\u59cb\u3081\u307e\u3057\u305f\u3002\n\u8a18\u4e8b\u5185\u306eexample.com\u306f\u81ea\u5206\u306e\u6301\u3063\u3066\u308b\u30c9\u30e1\u30a4\u30f3\u3067\u3084\u3063\u3066\u306d\u3002\n\n## let's encrypt\nhttps://letsencrypt.jp/ \u3092\u53c2\u8003\u306b /etc/letsencrypt/\u914d\u4e0b\u306b\u8a3c\u660e\u66f8\u306a\u3069\u304c\u63c3\u3063\u305f\u72b6\u614b\u306b\u3057\u307e\u3059\u3002\n\n```\n# ls /etc/letsencrypt/live/example.com/\ncert.pem  chain.pem  fullchain.pem  privkey.pem\n```\n\nletsencrypt\u306e\u74b0\u5883\u8a2d\u5b9a\u306780\u756a\u30dd\u30fc\u30c8\u304c\u672a\u4f7f\u7528\u72b6\u614b\u3067\u3042\u308b\u3053\u3068\u306f\u30ad\u30e2\u3063\u307d\u3044\u3067\u3059\u3002\n\n## node.js\u3067\u3064\u304b\u3046\n\n```lang:app.js\n\"use strict\"\nconst   \nhttps = require('https'),\nfs = require('fs'),\nconf = require('./conf');\n        \nconst httpsServ = https.createServer(\n    {   \n        key: fs.readFileSync (conf.key),\n        cert: [fs.readFileSync(conf.cert)],\n        ca:   [fs.readFileSync(conf.chain), fs.readFileSync(conf.fullchain)]\n    },  \n    (req, res) =>{\n        res.write(\"hello\");\n        res.end();\n    }\n).listen(3001);\n```\n\n```lang:conf\nexports.key='/etc/letsencrypt/live/example.com/privkey.pem';\nexports.cert='/etc/letsencrypt/live/example.com/cert.pem';\nexports.chain='/etc/letsencrypt/live/example.com/chain.pem';\nexports.fullchain='/etc/letsencrypt/live/example.com/fullchain.pem';\n```\n\n/etc/letsencrypt/live\u914d\u4e0b\u306froot\u30e6\u30fc\u30b6\u3067\u3057\u304b\u8aad\u307f\u8fbc\u3081\u306a\u3044\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u308b\u306e\u3067\u9069\u5f53\u306b\u306a\u3093\u3068\u304b\u3059\u308b\u3053\u3068\u3002\n\n\n\n\n## curl\u3067\u52d5\u4f5c\u78ba\u8a8d\n**\u4fee\u6b63\u306b\u4f34\u3044\u3053\u306e\u9805\u76ee\u306e\u7d50\u679c**\n\n```\n$ curl https://example.com:3001\ncurl: (60) Peer's Certificate issuer is not recognized.\nMore details here: http://curl.haxx.se/docs/sslcerts.html\n\ncurl performs SSL certificate verification by default, using a \"bundle\"\n of Certificate Authority (CA) public keys (CA certs). If the default\n bundle file isn't adequate, you can specify an alternate file\n using the --cacert option.\nIf this HTTPS server uses a certificate signed by a CA represented in\n the bundle, the certificate verification probably failed due to a\n problem with the certificate (it might be expired, or the name might\n not match the domain name in the URL).\nIf you'd like to turn off curl's verification of the certificate, use\n the -k (or --insecure) option.\n```\n\n\u3069\u3046\u3082\u3001\u81ea\u5206\u306e\u74b0\u5883\u306e\u60c5\u5831\u3060\u3068\u5358\u7d14\u306b\u306f\u3067\u304d\u306a\u3044\u3089\u3057\u3044...\ncurl\u306b-k\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308b\u304b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3084\u308b\u3053\u3068\u3067\u3001\u52d5\u4f5c\u3092\u78ba\u8a8d\u3002\n\n```\n$ curl https://example.com:3001 --cacert /etc/letsencrypt/live/example.com/fullchain.pem\nhello\n```\n\n\u3068\u308a\u3042\u3048\u305a\u5927\u4e08\u592b\u305d\u3046\u3002\u3002\u3002\u304b\u306a\uff1f\n\n**2015/05/11\u4fee\u6b63**\nCA\u306bfullchain.pem\u3068chain.pem\u3092\u6307\u5b9a\u3059\u308b\u3068\u602a\u3057\u3044\u6319\u52d5\u304c\u306a\u304f\u306a\u3063\u305f\u306e\u3067\u6307\u5b9a\u3059\u308b\u306e\u304c\u9069\u5207\u306a\u6a21\u69d8\u3002\n"}