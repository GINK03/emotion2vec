{"context": " More than 1 year has passed since last update.\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u914d\u5217\u3092\u4f7f\u3048\u3070\u30b7\u30f3\u30d7\u30eb\u306b\u6e08\u3093\u3060\u3002\n\nintersect.fs\nlet makeL w h (s:string) =\n  let isIn (x,y) (x0,y0) (x1,y1) =\n    let between x x0 x1 = min x0 x1 <= x && x <= max x0 x1\n    between x x0 x1 && between y y0 y1\n  let ps = [ for p in s.Split([|'-'|]) ->\n             [ for c in p.ToCharArray() ->\n               (int c)-(int '0') ] ]\n  let a = (ps.[0].[0], ps.[0].[1])\n  let b = (ps.[1].[0], ps.[1].[1])\n  let c = (ps.[2].[0], ps.[2].[1])\n  Array.init h (fun y ->\n    Array.init w (fun x ->\n      isIn (x,y) a b || isIn (x,y) a c))\n\nlet intersect =\n  let zipWith f xs ys =\n    Array.zip xs ys |> Array.map (fun (x,y) -> f x y)\n  zipWith (zipWith (&&))\n\nlet solve (s:string) =\n  let l = s.Split([|','|]) |> Array.map (makeL 10 10)\n  intersect l.[0] l.[1]\n  |> (Seq.concat >> Seq.filter id >> Seq.length)\n\n(* for test *)\n\ntype TestResult = Success | Failure\n\nlet test target expected =\n  let actual = solve target\n  printfn \"%A\" (if expected = actual then Success else Failure)\n\n[<EntryPoint>]\nlet main args =\n  test \"23-94-28,89-06-51\" 11\n  test \"11-84-58,02-73-69\" 40\n  test \"18-41-86,77-04-32\" 26\n  test \"81-88-23,64-58-14\" 0\n  test \"31-29-07,41-87-69\" 0\n  test \"83-13-40,18-10-94\" 1\n  test \"77-80-92,21-72-38\" 2\n  test \"57-70-91,55-19-08\" 3\n  test \"18-22-75,66-80-91\" 4\n  test \"51-93-78,54-49-06\" 5\n  test \"58-70-96,17-43-76\" 6\n  test \"58-07-12,58-82-93\" 7\n  test \"41-29-07,35-95-88\" 8\n  test \"88-26-60,42-29-07\" 9\n  test \"18-40-85,34-40-91\" 10\n  test \"36-60-96,53-96-89\" 11\n  test \"51-39-02,44-98-69\" 12\n  test \"48-06-20,76-04-42\" 13\n  test \"85-29-18,26-50-93\" 14\n  test \"27-50-91,43-29-07\" 15\n  test \"57-06-20,48-60-91\" 16\n  test \"52-98-89,21-76-67\" 17\n  test \"67-12-40,45-80-92\" 18\n  test \"47-03-10,26-30-82\" 19\n  test \"74-28-06,21-86-37\" 20\n  test \"65-01-20,73-39-05\" 21\n  test \"17-72-86,36-50-94\" 22\n  test \"51-29-07,77-15-41\" 23\n  test \"33-98-39,82-16-02\" 24\n  test \"75-05-10,37-81-96\" 25\n  test \"72-58-06,48-80-96\" 26\n  test \"81-67-16,21-91-59\" 27\n  test \"13-96-57,24-96-79\" 28\n  test \"57-04-32,51-18-06\" 29\n  test \"88-03-52,28-41-86\" 30\n  test \"78-04-61,13-86-49\" 31\n  test \"58-12-20,27-50-85\" 32\n  test \"61-19-05,71-68-15\" 33\n  test \"63-29-16,18-31-83\" 34\n  test \"16-50-91,32-98-79\" 35\n  test \"82-17-03,38-40-81\" 36\n  test \"72-48-04,11-98-39\" 37\n  test \"77-05-10,28-50-62\" 38\n  test \"38-50-91,11-86-57\" 39\n  test \"87-05-10,13-97-69\" 40\n  test \"11-86-49,22-98-89\" 44\n  test \"11-97-69,12-86-67\" 46\n  test \"11-95-69,71-49-05\" 47\n  test \"28-31-92,13-98-79\" 48\n  0\n\n\n\u30c7\u30fc\u30bf\u69cb\u9020\u306b\u914d\u5217\u3092\u4f7f\u3048\u3070\u30b7\u30f3\u30d7\u30eb\u306b\u6e08\u3093\u3060\u3002\n\n```fsharp:intersect.fs\nlet makeL w h (s:string) =\n  let isIn (x,y) (x0,y0) (x1,y1) =\n    let between x x0 x1 = min x0 x1 <= x && x <= max x0 x1\n    between x x0 x1 && between y y0 y1\n  let ps = [ for p in s.Split([|'-'|]) ->\n             [ for c in p.ToCharArray() ->\n               (int c)-(int '0') ] ]\n  let a = (ps.[0].[0], ps.[0].[1])\n  let b = (ps.[1].[0], ps.[1].[1])\n  let c = (ps.[2].[0], ps.[2].[1])\n  Array.init h (fun y ->\n    Array.init w (fun x ->\n      isIn (x,y) a b || isIn (x,y) a c))\n\nlet intersect =\n  let zipWith f xs ys =\n    Array.zip xs ys |> Array.map (fun (x,y) -> f x y)\n  zipWith (zipWith (&&))\n\nlet solve (s:string) =\n  let l = s.Split([|','|]) |> Array.map (makeL 10 10)\n  intersect l.[0] l.[1]\n  |> (Seq.concat >> Seq.filter id >> Seq.length)\n\n(* for test *)\n\ntype TestResult = Success | Failure\n\nlet test target expected =\n  let actual = solve target\n  printfn \"%A\" (if expected = actual then Success else Failure)\n\n[<EntryPoint>]\nlet main args =\n  test \"23-94-28,89-06-51\" 11\n  test \"11-84-58,02-73-69\" 40\n  test \"18-41-86,77-04-32\" 26\n  test \"81-88-23,64-58-14\" 0\n  test \"31-29-07,41-87-69\" 0\n  test \"83-13-40,18-10-94\" 1\n  test \"77-80-92,21-72-38\" 2\n  test \"57-70-91,55-19-08\" 3\n  test \"18-22-75,66-80-91\" 4\n  test \"51-93-78,54-49-06\" 5\n  test \"58-70-96,17-43-76\" 6\n  test \"58-07-12,58-82-93\" 7\n  test \"41-29-07,35-95-88\" 8\n  test \"88-26-60,42-29-07\" 9\n  test \"18-40-85,34-40-91\" 10\n  test \"36-60-96,53-96-89\" 11\n  test \"51-39-02,44-98-69\" 12\n  test \"48-06-20,76-04-42\" 13\n  test \"85-29-18,26-50-93\" 14\n  test \"27-50-91,43-29-07\" 15\n  test \"57-06-20,48-60-91\" 16\n  test \"52-98-89,21-76-67\" 17\n  test \"67-12-40,45-80-92\" 18\n  test \"47-03-10,26-30-82\" 19\n  test \"74-28-06,21-86-37\" 20\n  test \"65-01-20,73-39-05\" 21\n  test \"17-72-86,36-50-94\" 22\n  test \"51-29-07,77-15-41\" 23\n  test \"33-98-39,82-16-02\" 24\n  test \"75-05-10,37-81-96\" 25\n  test \"72-58-06,48-80-96\" 26\n  test \"81-67-16,21-91-59\" 27\n  test \"13-96-57,24-96-79\" 28\n  test \"57-04-32,51-18-06\" 29\n  test \"88-03-52,28-41-86\" 30\n  test \"78-04-61,13-86-49\" 31\n  test \"58-12-20,27-50-85\" 32\n  test \"61-19-05,71-68-15\" 33\n  test \"63-29-16,18-31-83\" 34\n  test \"16-50-91,32-98-79\" 35\n  test \"82-17-03,38-40-81\" 36\n  test \"72-48-04,11-98-39\" 37\n  test \"77-05-10,28-50-62\" 38\n  test \"38-50-91,11-86-57\" 39\n  test \"87-05-10,13-97-69\" 40\n  test \"11-86-49,22-98-89\" 44\n  test \"11-97-69,12-86-67\" 46\n  test \"11-95-69,71-49-05\" 47\n  test \"28-31-92,13-98-79\" 48\n  0\n```", "tags": ["F#", "\u3069\u3046\u66f8\u304f", "yhpg"]}