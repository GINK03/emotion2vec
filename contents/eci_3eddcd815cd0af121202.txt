{"context": "\u5f53\u8a18\u4e8b\u306f\u30a2\u30ab\u30a6\u30f3\u30c6\u30a3\u30f3\u30b0\u30fb\u30b5\u30fc\u30b9\u30fb\u30b8\u30e3\u30d1\u30f3 Advent Calendar\u306e11\u65e5\u76ee\u3067\u3059\u3002\n\u958b\u767a\u30b0\u30eb\u30fc\u30d7\u3067\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u666e\u6bb5\u30b3\u30fc\u30c9\u306f\u307b\u3068\u3093\u3069\u66f8\u3044\u3066\u3044\u306a\u3044\u3067\u3059\u304c\u3001AWS\u597d\u304d\u306a\u306e\u3067AWS\u30cd\u30bf\u3067\u884c\u304d\u307e\u3059\u3002\n\u5148\u65e5\u3001Amazon Aurora\u306e\u30b9\u30c8\u30a2\u30fc\u30c9\u30fb\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u304b\u3089Lambda Function\u306e\u547c\u3073\u51fa\u3057\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068\u304c\u767a\u8868\u3055\u308c\u307e\u3057\u305f\u3002\nhttps://aws.amazon.com/jp/blogs/news/amazon-aurora-update-call-lambda-functions-from-stored-procedures-load-data-from-s3/\n\u65e9\u901f\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff01\n\n\u8981\u4ef6\n\n\u4f1a\u54e1\u30c6\u30fc\u30d6\u30eb\u306b\u30c7\u30fc\u30bf\u304c\u767b\u9332\u3055\u308c\u305f\u3089\u3001\u55b6\u696d\u8cac\u4efb\u8005\u306b\u304a\u8912\u3081\u306e\u96fb\u8a71\n\u4f1a\u54e1\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u304c\u524a\u9664\u3055\u308c\u305f\u3089\u3001\u55b6\u696d\u8cac\u4efb\u8005\u306b\u304a\u53f1\u308a\u306e\u96fb\u8a71\n\n\n\u69cb\u6210\u6982\u8981\n\nAmazon Aurora\u306bUsers\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001INSERT\u3068DELETE\u306eTrigger\u304b\u3089\u30b9\u30c8\u30a2\u30fc\u30c9\u30fb\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u3092call\u3059\u308b\n\u30b9\u30c8\u30a2\u30fc\u30c9\u30fb\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u304b\u3089Lambda\u3092\u30ad\u30c3\u30af\nLamda\u304b\u3089Twilio API\u3092\u30ad\u30c3\u30af\n\n\n\u307e\u305a\u306fLambda\u306e\u8a2d\u5b9a\n\u300cCreate a Lambda Function\u300d\u3092\u62bc\u3057\u3066\u3001\u300cBlank Function\u300d\u9078\u629e\n\u8a2d\u5b9a\u306f\u3001\u300cVPC\u300d\u306e\u3068\u3053\u308d\u306f\u300cNo VPC\u300d\u3092\u9078\u629e\n\u3000\u203b VPC\u3092\u9078\u629e\u3059\u308b\u3068\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u3059\u308b\u70ba\u306b\u4e00\u624b\u9593\u304b\u304b\u308a\u307e\u3059\u306e\u3067\u3001\u4eca\u56de\u306f\u3053\u3063\u3061\u3002\n\u4ed6\u306e\u9805\u76ee\u306f\u9069\u5f53\u306b\uff08\u300cLambda function code\u300d\u306f\u6b21\u9805\uff09\u3002\n\nLambda function code\nexports.handler = function(event, context) {\n  console.log(JSON.stringify(event, null, 2));\n\n  var message = new Buffer(event.message, 'base64').toString()\n  var queryString = require('querystring');\n  twiml = {\n    Twiml:  '<Response>\\n' +\n              '<Say voice=\"alice\" language=\"ja-JP\">' + message + '</Say>\\n' +\n            '</Response>'\n  };\n  url = \"http://twimlets.com/echo?\" + queryString.stringify(twiml);  \n\n  var exec = require('child_process').exec;\n  var cmd = 'curl -XPOST https://api.twilio.com/2010-04-01/Accounts/#####Twilio ACCOUNT SID#####/Calls ' + \n    '--data-urlencode \"Url=' + url + '\" ' +\n    '--data-urlencode \"To=+81xxxxxxxxxx\" ' +\n    '--data-urlencode \"From=+81xxxxxxxxxx\" ' + \n    '-u \"#####Twilio ACCOUNT SID#####:#####Twilio AuthToken#####\"';\n\n  exec(cmd, function(error, stdout, stderr) {\n    if (! error) {\n        console.log('standard out: ' + stdout);\n        console.log('standard error: ' + stderr);\n        context.done();\n    } else {\n      console.log('error code: ' + error.code);\n      console.log(error);\n      context.fail();\n    }\n  });\n};\n\n\u4ee5\u4e0b\u306e\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3002\n\n\n\n\u8a2d\u5b9a\u9805\u76ee\n\u5024\n\n\n\n\nTo\n\u304b\u3051\u308b\u76f8\u624b\uff08\u2252\u4e0a\u53f8\uff09\u306e\u96fb\u8a71\u756a\u53f7\u306e\u3001\u982d\u4e00\u6841\u3092\u9664\u3044\u305f\u756a\u53f7\u3092\u8a2d\u5b9a\u3059\u308b\n\n\nFrom\nTwilio\u3067\u53d6\u5f97\u3057\u305f\u756a\u53f7\u3092\u8a2d\u5b9a\n\n\nACCOUNT SID\nTwilio\u306eACCOUNT SID\n\n\nAUTH TOKEN\nTwilio\u306eAUTH TOKEN\n\n\n\n\nAmazon Aurora\u7528\u306eRole\u306e\u4f5c\u6210\n\u6b21\u306b\u307e\u305a\u306f\u3001Aurora\u306b\u8a2d\u5b9a\u3059\u308bRole\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u540d\u524d\uff1aforAuroraToLambda\n\u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u30bf\u30d6\u306e\u3068\u3053\u308d\u3067\u3001\u300cAWSLamdbaRole\u300d\u3092\u30a2\u30bf\u30c3\u30c1\n\u4fe1\u983c\u95a2\u4fc2\u30bf\u30d6\u306e\u7de8\u96c6\u306e\u3068\u3053\u308d\u3067\u3001\"rds.amazonaws.com\"\u3092Service\u306e\u6240\u306b\u8ffd\u52a0\n\n\nDB\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210\n\n\n\n\u8a2d\u5b9a\u9805\u76ee\n\u5024\n\n\n\n\n\u30a8\u30f3\u30b8\u30f3\nAmazon Aurora\uff08\u5f53\u7136\uff57\uff09\n\n\n\u30d1\u30d6\u30ea\u30c3\u30af\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\n\u306f\u3044\n\n\nSubnet\nPublic\u3067\u30fb\u30fb\u30fb\n\n\n\n\u5f8c\u306f\u9069\u5f53\u306b\u3002\n\n\u30af\u30e9\u30b9\u30bf\u30fc\u306bIAM\u30ed\u30fc\u30eb\u3092\u7d10\u4ed8\u3051\n\n\u30af\u30e9\u30b9\u30bf\u30fc\u306e\u753b\u9762\u306e\u4e0a\u90e8\u306b\u3042\u308b\u300cIAM\u30ed\u30fc\u30eb\u306e\u7ba1\u7406\u300d\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\n\u305d\u3053\u3067\u5148\u7a0b\u4f5c\u6210\u3057\u305f\u300cforAuroraToLambda\u300d\u3092\u9078\u629e\u3057\u3001\u5b8c\u4e86\n\n\nDB Cluster Parameter Group\u306e\u4f5c\u6210\n\u3064\u304e\u306b\u300cDB Cluster Parameter Group\u300d\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u65b0\u898f\u3067\u300cDB Cluster Parameter Group\u300d\u3092\u300cforLambda\u300d\u3067\u4f5c\u6210\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7de8\u96c6\u3067\u3001\u300caws_default_lambda_role\u300d\u306e\u5024\u306b\u3001\u5148\u7a0b\u4f5c\u6210\u3057\u305fRole\u306eARN\uff08\u2193\u306e\u3088\u3046\u306a\u3084\u3064\uff09\u3092\u8a2d\u5b9a\n\u300carn:aws:iam::xxxxxxxxxx:role/forAuroraToLambda\u300d\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7de8\u96c6\u753b\u9762\u3067\u3001\u300cDB \u30af\u30e9\u30b9\u30bf\u30fc\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7\u300d\u306e\u5024\u3092\u3001\u300cforLambda\u300d\u306b\u5909\u66f4\n\u518d\u8d77\u52d5\n\n\nDatabase\u3001Table\u306e\u4f5c\u6210\n//Database\ncreate database test;\n\n//Table\ncreate table users (id int auto_increment primary key, name char(100));\n\n\n\u30b9\u30c8\u30a2\u30fc\u30c9\u30fb\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u306e\u4f5c\u6210\nDROP PROCEDURE IF EXISTS lambda_test;\nDELIMITER ;;\nCREATE PROCEDURE lambda_test(IN message VARCHAR(255)) LANGUAGE SQL\nBEGIN CALL mysql.lambda_async(\n      // \u2193\u3053\u3053\u306b\u5148\u7a0b\u4f5c\u6210\u3057\u305fLambda\u306eARN\u3092\u8a2d\u5b9a\u3059\u308b\n      'arn:aws:lambda:ap-northeast-1:xxxxxxxxxx:function:helloTwilio',\n               CONCAT('{\"message\":\"',  to_base64(message),  '\"}')\n\n  );\nEND\n;;\nDELIMITER ;\n\n\n\u30c8\u30ea\u30ac\u30fc\u306e\u4f5c\u6210\n// Insert\u7528\nDROP TRIGGER IF EXISTS insert_trigger;\nDELIMITER ;;\nCREATE TRIGGER insert_trigger\n  AFTER INSERT ON users\n  FOR EACH ROW\nBEGIN\n  CALL lambda_test('\u3044\u3051\u3066\u308b\u3084\u3093');\nEND\n;;\nDELIMITER ;\n\n// Delete\u7528\nDROP TRIGGER IF EXISTS delete_trigger;\nDELIMITER ;;\nCREATE TRIGGER delete_trigger\n  AFTER DELETE ON users\n  FOR EACH ROW\nBEGIN\n  CALL lambda_test('\u3042\u304b\u3093\u304c\u306a');\nEND\n;;\nDELIMITER ;\n\n\n\n\u3067\u306f\u3001\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u3088\u3046\n\u76f4\u63a5Users\u30c6\u30fc\u30d6\u30eb\u306b\u30ec\u30b3\u30fc\u30c9\u3092Insert\u3057\u307e\u3059\u3002\n// \u4f1a\u54e1\u8ffd\u52a0\ninsert into users(name) values  ('hoge');\n\n\u304a\u8912\u3081\u306e\u96fb\u8a71\u304c\u304b\u304b\u308a\u307e\u3057\u305f\u304b\uff1f\n// \u4f1a\u54e1\u9000\u4f1a\u51e6\u7406\ndelete from users where id = nnn;\n\n\u304a\u53f1\u308a\u306e\u96fb\u8a71\u304c\u304b\u304b\u308a\u307e\u3057\u305f\u304b\uff1f\n\n\u307e\u3068\u3081\nDatabase\u306e\u30b9\u30c8\u30a2\u30fc\u30c9\u30fb\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u304b\u3089Lambda\u3092\u547c\u3073\u51fa\u305b\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u69d8\u3005\u306a\u9023\u643a\u306e\u5b9f\u88c5\u30b3\u30b9\u30c8\u304c\u683c\u6bb5\u306b\u4e0b\u304c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u305f\u3060\u30012000\u5e74\u4ee3\u524d\u534a\u306e\u30b9\u30c8\u30a2\u30c9\u5730\u7344\u306e\u4e8c\u306e\u821e\u3044\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u3001\u7bc0\u5ea6\u3092\u6301\u3063\u3066\u4f7f\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff01\n\n\u53c2\u8003\nhttp://dev.classmethod.jp/cloud/aws/invoke-lambda-from-aurora/\nhttp://docs.aws.amazon.com/ja_jp/AmazonRDS/latest/UserGuide/Aurora.Lambda.html\nhttp://aws.typepad.com/aws_japan/2016/02/access-resources-in-a-vpc-from-your-lambda-functions.html\n\u5f53\u8a18\u4e8b\u306f\u30a2\u30ab\u30a6\u30f3\u30c6\u30a3\u30f3\u30b0\u30fb\u30b5\u30fc\u30b9\u30fb\u30b8\u30e3\u30d1\u30f3 Advent Calendar\u306e11\u65e5\u76ee\u3067\u3059\u3002\n\n\u958b\u767a\u30b0\u30eb\u30fc\u30d7\u3067\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\u666e\u6bb5\u30b3\u30fc\u30c9\u306f\u307b\u3068\u3093\u3069\u66f8\u3044\u3066\u3044\u306a\u3044\u3067\u3059\u304c\u3001AWS\u597d\u304d\u306a\u306e\u3067AWS\u30cd\u30bf\u3067\u884c\u304d\u307e\u3059\u3002\n\n\u5148\u65e5\u3001Amazon Aurora\u306e\u30b9\u30c8\u30a2\u30fc\u30c9\u30fb\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u304b\u3089Lambda Function\u306e\u547c\u3073\u51fa\u3057\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3053\u3068\u304c\u767a\u8868\u3055\u308c\u307e\u3057\u305f\u3002\nhttps://aws.amazon.com/jp/blogs/news/amazon-aurora-update-call-lambda-functions-from-stored-procedures-load-data-from-s3/\n\n\u65e9\u901f\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff01\n\n# \u8981\u4ef6\n1. \u4f1a\u54e1\u30c6\u30fc\u30d6\u30eb\u306b\u30c7\u30fc\u30bf\u304c\u767b\u9332\u3055\u308c\u305f\u3089\u3001\u55b6\u696d\u8cac\u4efb\u8005\u306b\u304a\u8912\u3081\u306e\u96fb\u8a71\n2. \u4f1a\u54e1\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u304c\u524a\u9664\u3055\u308c\u305f\u3089\u3001\u55b6\u696d\u8cac\u4efb\u8005\u306b\u304a\u53f1\u308a\u306e\u96fb\u8a71\n\n# \u69cb\u6210\u6982\u8981\n- Amazon Aurora\u306bUsers\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001INSERT\u3068DELETE\u306eTrigger\u304b\u3089\u30b9\u30c8\u30a2\u30fc\u30c9\u30fb\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u3092call\u3059\u308b\n- \u30b9\u30c8\u30a2\u30fc\u30c9\u30fb\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u304b\u3089Lambda\u3092\u30ad\u30c3\u30af\n- Lamda\u304b\u3089Twilio API\u3092\u30ad\u30c3\u30af\n\n# \u307e\u305a\u306fLambda\u306e\u8a2d\u5b9a\n\n\u300cCreate a Lambda Function\u300d\u3092\u62bc\u3057\u3066\u3001\u300cBlank Function\u300d\u9078\u629e\n\u8a2d\u5b9a\u306f\u3001\u300cVPC\u300d\u306e\u3068\u3053\u308d\u306f\u300cNo VPC\u300d\u3092\u9078\u629e\n\u3000\u203b VPC\u3092\u9078\u629e\u3059\u308b\u3068\u3001\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30a2\u30af\u30bb\u30b9\u3059\u308b\u70ba\u306b\u4e00\u624b\u9593\u304b\u304b\u308a\u307e\u3059\u306e\u3067\u3001\u4eca\u56de\u306f\u3053\u3063\u3061\u3002\n\u4ed6\u306e\u9805\u76ee\u306f\u9069\u5f53\u306b\uff08\u300cLambda function code\u300d\u306f\u6b21\u9805\uff09\u3002\n\n# Lambda function code\n```\nexports.handler = function(event, context) {\n  console.log(JSON.stringify(event, null, 2));\n\n  var message = new Buffer(event.message, 'base64').toString()\n  var queryString = require('querystring');\n  twiml = {\n    Twiml:  '<Response>\\n' +\n              '<Say voice=\"alice\" language=\"ja-JP\">' + message + '</Say>\\n' +\n            '</Response>'\n  };\n  url = \"http://twimlets.com/echo?\" + queryString.stringify(twiml);  \n\n  var exec = require('child_process').exec;\n  var cmd = 'curl -XPOST https://api.twilio.com/2010-04-01/Accounts/#####Twilio ACCOUNT SID#####/Calls ' + \n    '--data-urlencode \"Url=' + url + '\" ' +\n    '--data-urlencode \"To=+81xxxxxxxxxx\" ' +\n    '--data-urlencode \"From=+81xxxxxxxxxx\" ' + \n    '-u \"#####Twilio ACCOUNT SID#####:#####Twilio AuthToken#####\"';\n\n  exec(cmd, function(error, stdout, stderr) {\n    if (! error) {\n        console.log('standard out: ' + stdout);\n        console.log('standard error: ' + stderr);\n        context.done();\n    } else {\n      console.log('error code: ' + error.code);\n      console.log(error);\n      context.fail();\n    }\n  });\n};\n```\n\u4ee5\u4e0b\u306e\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3002\n\n| \u8a2d\u5b9a\u9805\u76ee     | \u5024 |\n|:------------|:--|\n| To          | \u304b\u3051\u308b\u76f8\u624b\uff08\u2252\u4e0a\u53f8\uff09\u306e\u96fb\u8a71\u756a\u53f7\u306e\u3001\u982d\u4e00\u6841\u3092\u9664\u3044\u305f\u756a\u53f7\u3092\u8a2d\u5b9a\u3059\u308b  |\n| From        | Twilio\u3067\u53d6\u5f97\u3057\u305f\u756a\u53f7\u3092\u8a2d\u5b9a  |\n| ACCOUNT SID | Twilio\u306eACCOUNT SID  |\n| AUTH TOKEN  | Twilio\u306eAUTH TOKEN  |\n\n# Amazon Aurora\u7528\u306eRole\u306e\u4f5c\u6210\n\n\u6b21\u306b\u307e\u305a\u306f\u3001Aurora\u306b\u8a2d\u5b9a\u3059\u308bRole\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n1. \u540d\u524d\uff1aforAuroraToLambda\n2. \u30a2\u30af\u30bb\u30b9\u8a31\u53ef\u30bf\u30d6\u306e\u3068\u3053\u308d\u3067\u3001\u300cAWSLamdbaRole\u300d\u3092\u30a2\u30bf\u30c3\u30c1\n3. \u4fe1\u983c\u95a2\u4fc2\u30bf\u30d6\u306e\u7de8\u96c6\u306e\u3068\u3053\u308d\u3067\u3001\"rds.amazonaws.com\"\u3092Service\u306e\u6240\u306b\u8ffd\u52a0\n\n\n# DB\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210\n| \u8a2d\u5b9a\u9805\u76ee | \u5024 |\n|:--------|:--------|\n| \u30a8\u30f3\u30b8\u30f3  | Amazon Aurora\uff08\u5f53\u7136\uff57\uff09  |\n| \u30d1\u30d6\u30ea\u30c3\u30af\u30a2\u30af\u30bb\u30b9\u53ef\u80fd  | \u306f\u3044  |\n|Subnet| Public\u3067\u30fb\u30fb\u30fb|\n\n\u5f8c\u306f\u9069\u5f53\u306b\u3002\n\n# \u30af\u30e9\u30b9\u30bf\u30fc\u306bIAM\u30ed\u30fc\u30eb\u3092\u7d10\u4ed8\u3051\n1. \u30af\u30e9\u30b9\u30bf\u30fc\u306e\u753b\u9762\u306e\u4e0a\u90e8\u306b\u3042\u308b\u300cIAM\u30ed\u30fc\u30eb\u306e\u7ba1\u7406\u300d\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\n2. \u305d\u3053\u3067\u5148\u7a0b\u4f5c\u6210\u3057\u305f\u300cforAuroraToLambda\u300d\u3092\u9078\u629e\u3057\u3001\u5b8c\u4e86\n\n\n# DB Cluster Parameter Group\u306e\u4f5c\u6210\n\u3064\u304e\u306b\u300cDB Cluster Parameter Group\u300d\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n1. \u65b0\u898f\u3067\u300cDB Cluster Parameter Group\u300d\u3092\u300cforLambda\u300d\u3067\u4f5c\u6210\n2. \u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u7de8\u96c6\u3067\u3001\u300caws_default_lambda_role\u300d\u306e\u5024\u306b\u3001\u5148\u7a0b\u4f5c\u6210\u3057\u305fRole\u306eARN\uff08\u2193\u306e\u3088\u3046\u306a\u3084\u3064\uff09\u3092\u8a2d\u5b9a\n   \u300carn:aws:iam::xxxxxxxxxx:role/forAuroraToLambda\u300d\n3. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7de8\u96c6\u753b\u9762\u3067\u3001\u300cDB \u30af\u30e9\u30b9\u30bf\u30fc\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30b0\u30eb\u30fc\u30d7\u300d\u306e\u5024\u3092\u3001\u300cforLambda\u300d\u306b\u5909\u66f4\n4. \u518d\u8d77\u52d5\n\n# Database\u3001Table\u306e\u4f5c\u6210\n\n```\n//Database\ncreate database test;\n\n//Table\ncreate table users (id int auto_increment primary key, name char(100));\n```\n\n# \u30b9\u30c8\u30a2\u30fc\u30c9\u30fb\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u306e\u4f5c\u6210\n\n```\nDROP PROCEDURE IF EXISTS lambda_test;\nDELIMITER ;;\nCREATE PROCEDURE lambda_test(IN message VARCHAR(255)) LANGUAGE SQL\nBEGIN CALL mysql.lambda_async(\n      // \u2193\u3053\u3053\u306b\u5148\u7a0b\u4f5c\u6210\u3057\u305fLambda\u306eARN\u3092\u8a2d\u5b9a\u3059\u308b\n      'arn:aws:lambda:ap-northeast-1:xxxxxxxxxx:function:helloTwilio',\n               CONCAT('{\"message\":\"',  to_base64(message),  '\"}')\n\n  );\nEND\n;;\nDELIMITER ;\n```\n\n# \u30c8\u30ea\u30ac\u30fc\u306e\u4f5c\u6210\n\n```\n// Insert\u7528\nDROP TRIGGER IF EXISTS insert_trigger;\nDELIMITER ;;\nCREATE TRIGGER insert_trigger\n  AFTER INSERT ON users\n  FOR EACH ROW\nBEGIN\n  CALL lambda_test('\u3044\u3051\u3066\u308b\u3084\u3093');\nEND\n;;\nDELIMITER ;\n\n// Delete\u7528\nDROP TRIGGER IF EXISTS delete_trigger;\nDELIMITER ;;\nCREATE TRIGGER delete_trigger\n  AFTER DELETE ON users\n  FOR EACH ROW\nBEGIN\n  CALL lambda_test('\u3042\u304b\u3093\u304c\u306a');\nEND\n;;\nDELIMITER ;\n\n```\n\n# \u3067\u306f\u3001\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u3088\u3046\n\n\u76f4\u63a5Users\u30c6\u30fc\u30d6\u30eb\u306b\u30ec\u30b3\u30fc\u30c9\u3092Insert\u3057\u307e\u3059\u3002\n\n```\n// \u4f1a\u54e1\u8ffd\u52a0\ninsert into users(name) values  ('hoge');\n```\n\n\u304a\u8912\u3081\u306e\u96fb\u8a71\u304c\u304b\u304b\u308a\u307e\u3057\u305f\u304b\uff1f\n\n```\n// \u4f1a\u54e1\u9000\u4f1a\u51e6\u7406\ndelete from users where id = nnn;\n```\n   \n\u304a\u53f1\u308a\u306e\u96fb\u8a71\u304c\u304b\u304b\u308a\u307e\u3057\u305f\u304b\uff1f\n\n# \u307e\u3068\u3081\n\nDatabase\u306e\u30b9\u30c8\u30a2\u30fc\u30c9\u30fb\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u304b\u3089Lambda\u3092\u547c\u3073\u51fa\u305b\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u69d8\u3005\u306a\u9023\u643a\u306e\u5b9f\u88c5\u30b3\u30b9\u30c8\u304c\u683c\u6bb5\u306b\u4e0b\u304c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u305f\u3060\u30012000\u5e74\u4ee3\u524d\u534a\u306e\u30b9\u30c8\u30a2\u30c9\u5730\u7344\u306e\u4e8c\u306e\u821e\u3044\u306b\u306a\u3089\u306a\u3044\u3088\u3046\u3001\u7bc0\u5ea6\u3092\u6301\u3063\u3066\u4f7f\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff01\n\n\n# \u53c2\u8003\n\nhttp://dev.classmethod.jp/cloud/aws/invoke-lambda-from-aurora/\nhttp://docs.aws.amazon.com/ja_jp/AmazonRDS/latest/UserGuide/Aurora.Lambda.html\nhttp://aws.typepad.com/aws_japan/2016/02/access-resources-in-a-vpc-from-your-lambda-functions.html\n\n\n\n\n\n\n\n", "tags": ["AWS", "lambda", "twilio", "Aurora"]}