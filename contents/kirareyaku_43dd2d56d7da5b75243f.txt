{"context": "\n\n\u6982\u8981\n\u3053\u3093\u306a\u30bd\u30fc\u30b9\u304cMicrosoft\u306e.NET\u306e\u30b5\u30a4\u30c8\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u3002\n.NETCore\u3067\u3053\u308c\u3092\u52d5\u304b\u305d\u3046\u3068\u3057\u305f\u3068\u304d\u3001\u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u3067\u52d5\u3044\u3066\u3044\u308bhttps\u306e\u30b5\u30a4\u30c8\u3092\u5bfe\u8c61\u306b\u3057\u305f\u5834\u5408\u3001Exception\u304c\u767a\u751f\u3059\u308b\u3002\n\u3053\u308c\u3092\u56de\u907f\u3059\u308b\u3002\nusing System;\nusing System.Threading.Tasks;\nusing System.Net.Http;\n\npublic class AsyncSample\n{\n    static void Main()\n    {\n        GetURL().Wait();\n    }\n\n    private static async Task GetURL()\n    {\n        HttpClient client = new HttpClient();\n\n        // This code executed asynchronously\n        string response = \n            await client.GetStringAsync(\n            \"http://jsonplaceholder.typicode.com/posts/1\");\n\n        // This code executed after \n        // asynchronous code finalizes\n        Console.WriteLine(response);\n    }\n}\n\n\u51fa\u5178 : https://www.microsoft.com/net\n\n\u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u306e\u3068\u304d\u306b\u51fa\u308b\u30a8\u30e9\u30fc\nSystem.Net.Http.WinHttpException: \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3 \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\nsending the request. ---> System.Net.Http.WinHttpException: \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3 \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f                                                                                                  \n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)                                                                                                                \n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)                                                                                           \n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()                                                                                              \n   at System.Net.Http.WinHttpHandler.<StartRequest>d__101.MoveNext()                                                                                                                           \n   --- End of inner exception stack trace ---                                                                                                                                                  \n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)                                                                                                                \n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()                                                                                              \n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()                                                                                                                             \n--- End of stack trace from previous location where exception was thrown ---                                                                                                                   \n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)                                                                                                                \n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)                                                                                           \n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()                                                                                              \n   at System.Net.Http.HttpClient.<GetContentAsync>d__32`1.MoveNext()                                                                                                                           \n--- End of stack trace from previous location where exception was thrown ---                                                                                                                   \n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)                                                                                                                \n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)                                                                                           \n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()                                                                                                                                \n   at SCBot.Program.<GetURL>d__0.MoveNext()                                                                                                                                                    \n   --- End of inner exception stack trace ---                                                                                                                                                  \n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)                                                                                                    \n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)                                                                                         \n   at System.Threading.Tasks.Task.Wait()                                                                                                                                                       \n   at ******.Program.Main(String[] args)                 \n\n\n\u5bfe\u7b56\n\u30b5\u30fc\u30d0\u8a3c\u660e\u66f8\u306eValidation\u30c1\u30a7\u30c3\u30af\u306eCallback\u90e8\u5206\u3067true\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3002\nusing System;\nusing System.Threading.Tasks;\nusing System.Net.Http;\n\npublic class AsyncSample\n{\n    static void Main()\n    {\n        GetURL().Wait();\n    }\n\n    private static async Task GetURL()\n    {\n\n        // ---------------------\u3053\u308c\u3092\u8db3\u3057\u3066\u304a\u304f------------------------------\n        var httpClientHandler = new HttpClientHandler();\n        httpClientHandler.ServerCertificateCustomValidationCallback = (sender, cert, chain, error) =>\n        {\n           return true;\n        };\n        // -----------------------------------------------------------------\n\n        HttpClient client = new HttpClient(httpClientHandler);\n        // This code executed asynchronously\n        string response = \n            await client.GetStringAsync(\n            \"https://\u304a\u308c\u304a\u308c\u8a3c\u660e\u66f8\u30b5\u30a4\u30c8/\u25cb\u25cb/\u25b3\u25b3\");\n\n        // This code executed after \n        // asynchronous code finalizes\n        Console.WriteLine(response);\n    }\n}\n\n\n\u53c2\u8003\u306b\u3057\u305f\u3068\u3053\u308d\n\nHttpWebRequest/HttpClient with self-signed client certificate\nAllowing Untrusted SSL Certificates with HttpClient\nHTTPS Cert Validation Callback in .Net Core\n\n# \u6982\u8981\n\n\u3053\u3093\u306a\u30bd\u30fc\u30b9\u304cMicrosoft\u306e.NET\u306e\u30b5\u30a4\u30c8\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u3002\n.NETCore\u3067\u3053\u308c\u3092\u52d5\u304b\u305d\u3046\u3068\u3057\u305f\u3068\u304d\u3001\u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u3067\u52d5\u3044\u3066\u3044\u308bhttps\u306e\u30b5\u30a4\u30c8\u3092\u5bfe\u8c61\u306b\u3057\u305f\u5834\u5408\u3001Exception\u304c\u767a\u751f\u3059\u308b\u3002\n\u3053\u308c\u3092\u56de\u907f\u3059\u308b\u3002\n\n```csharp\nusing System;\nusing System.Threading.Tasks;\nusing System.Net.Http;\n\npublic class AsyncSample\n{\n\tstatic void Main()\n\t{\n\t\tGetURL().Wait();\n\t}\n\n\tprivate static async Task GetURL()\n\t{\n\t\tHttpClient client = new HttpClient();\n\n\t\t// This code executed asynchronously\n\t\tstring response = \n\t\t\tawait client.GetStringAsync(\n\t\t\t\"http://jsonplaceholder.typicode.com/posts/1\");\n\n\t\t// This code executed after \n\t\t// asynchronous code finalizes\n\t\tConsole.WriteLine(response);\n\t}\n}\n```\n[\u51fa\u5178 : https://www.microsoft.com/net](https://www.microsoft.com/net)\n\n# \u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u306e\u3068\u304d\u306b\u51fa\u308b\u30a8\u30e9\u30fc\n\n**System.Net.Http.WinHttpException: \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3 \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f**\n\n```\nsending the request. ---> System.Net.Http.WinHttpException: \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3 \u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f                                                                                                  \n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)                                                                                                                \n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)                                                                                           \n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()                                                                                              \n   at System.Net.Http.WinHttpHandler.<StartRequest>d__101.MoveNext()                                                                                                                           \n   --- End of inner exception stack trace ---                                                                                                                                                  \n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)                                                                                                                \n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) \n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()                                                                                              \n   at System.Net.Http.HttpClient.<FinishSendAsync>d__58.MoveNext()                                                                                                                             \n--- End of stack trace from previous location where exception was thrown ---                                                                                                                   \n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)                                                                                                                \n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)                                                                                           \n   at System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1.ConfiguredTaskAwaiter.GetResult()                                                                                              \n   at System.Net.Http.HttpClient.<GetContentAsync>d__32`1.MoveNext()                                                                                                                           \n--- End of stack trace from previous location where exception was thrown ---                                                                                                                   \n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)                                                                                                                \n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)                                                                                           \n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()                                                                                                                                \n   at SCBot.Program.<GetURL>d__0.MoveNext()                                                                                                                                                    \n   --- End of inner exception stack trace ---                                                                                                                                                  \n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)                                                                                                    \n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)                                                                                         \n   at System.Threading.Tasks.Task.Wait()                                                                                                                                                       \n   at ******.Program.Main(String[] args)                 \n```\n\n# \u5bfe\u7b56\n\n\u30b5\u30fc\u30d0\u8a3c\u660e\u66f8\u306eValidation\u30c1\u30a7\u30c3\u30af\u306eCallback\u90e8\u5206\u3067true\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3002\n\n```csharp\nusing System;\nusing System.Threading.Tasks;\nusing System.Net.Http;\n\npublic class AsyncSample\n{\n\tstatic void Main()\n\t{\n\t\tGetURL().Wait();\n\t}\n\n\tprivate static async Task GetURL()\n\t{\n       \n        // ---------------------\u3053\u308c\u3092\u8db3\u3057\u3066\u304a\u304f------------------------------\n        var httpClientHandler = new HttpClientHandler();\n        httpClientHandler.ServerCertificateCustomValidationCallback = (sender, cert, chain, error) =>\n        {\n           return true;\n        };\n        // -----------------------------------------------------------------\n        \n\t\tHttpClient client = new HttpClient(httpClientHandler);\n\t\t// This code executed asynchronously\n\t\tstring response = \n\t\t\tawait client.GetStringAsync(\n\t\t\t\"https://\u304a\u308c\u304a\u308c\u8a3c\u660e\u66f8\u30b5\u30a4\u30c8/\u25cb\u25cb/\u25b3\u25b3\");\n\n\t\t// This code executed after \n\t\t// asynchronous code finalizes\n\t\tConsole.WriteLine(response);\n\t}\n}\n```\n\n# \u53c2\u8003\u306b\u3057\u305f\u3068\u3053\u308d\n\n- [HttpWebRequest/HttpClient with self-signed client certificate](https://github.com/dotnet/corefx/issues/8165)\n\n- [Allowing Untrusted SSL Certificates with HttpClient](http://stackoverflow.com/questions/12553277/allowing-untrusted-ssl-certificates-with-httpclient)\n\n- [HTTPS Cert Validation Callback in .Net Core](https://github.com/elastic/elasticsearch-net/issues/2198)\n\n\n", "tags": [".NETCore"]}