{"context": " More than 1 year has passed since last update.\u5c11\u3057\u8907\u96d1\u306a\u64cd\u4f5c\u304c\u8981\u6c42\u3055\u308c\u308b\u753b\u9762\u3092\u4f5c\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u72b6\u614b\u3092\u8868\u73fe\u3067\u304d\u308b\u304b\u306a\u3068\u3044\u3046\u3053\u3068\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4f5c\u308b\u3082\u306e\n\n\u304a\u8a66\u3057\u306a\u306e\u3067\u5358\u7d14\u306bAPI\u3092\u8aad\u3093\u3067\u30ea\u30b9\u30c8\u306b\u8868\u793a\u3059\u308b\u3060\u3051\u306e\u753b\u9762\u3067\u3059\u3002API\u306f\u4f55\u3067\u3082\u3088\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001ATND\u3055\u3093\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u5f15\u3063\u5f35\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\u72b6\u614b\u9077\u79fb\n\n\u3053\u3093\u306a\u611f\u3058\n\n\n\n\u521d\u671f\u72b6\u614b\u304b\u3089\u59cb\u307e\u3063\u3066\u3001\u8868\u793a\u3059\u308b\u30c7\u30fc\u30bf\u3092\u6301\u3063\u3066\u306a\u3051\u308c\u3070\u3001\u6e96\u5099\u4e2d\u306b\u72b6\u614b\u9077\u79fb\u3057\u3066API\u3092\u547c\u3093\u3067\u53d6\u3063\u3066\u304d\u305f\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3057\u3066\u3001\u5165\u529b\u5f85\u3061\u306b\u72b6\u614b\u9077\u79fb\u3002\u521d\u671f\u72b6\u614b\u6642\u306b\u3059\u3067\u306b\u30c7\u30fc\u30bf\u3092\u6301\u3063\u3066\u3044\u308c\u3070\u305d\u306e\u307e\u307e\u8868\u793a\u3057\u3066\u5165\u529b\u5f85\u3061\u306b\u72b6\u614b\u9077\u79fb\u3001\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u3002\n\n\n\u767b\u5834\u3059\u308b\u30af\u30e9\u30b9\n\nMainFragment \u30fb\u30fb\u30fb state\u3092\u7ba1\u7406\u3059\u308b\u3060\u3051\u306e\u30af\u30e9\u30b9\u3002\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3084\u30a4\u30d9\u30f3\u30c8\u306b\u5fdc\u3058\u3066\u4fdd\u6301\u3057\u3066\u3044\u308bstate\u306e\u5bfe\u5fdc\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3002\nMainFragmentLogic \u30fb\u30fb\u30fb View\u306e\u64cd\u4f5c\u3084\u30a2\u30d7\u30ea\u306e\u6319\u52d5\u306a\u3069\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\nMainFragmentState \u30fb\u30fb\u30fb Fragment\u306e\u72b6\u614b\u3092\u8868\u73fe\u3059\u308benum\u3002\u5404\u72b6\u614b\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3059\u308b\u3002\n\nINIT : \u521d\u671f\u72b6\u614b\nGETTING_READY : \u6e96\u5099\u4e2d\nIDLE : \u5165\u529b\u5f85\u3061\nPAUSE : \u505c\u6b62\u72b6\u614b\n\n\n\u4f8b\u3048\u3070INIT\u306e\u5834\u5408\n\n    INIT {\n        @Override\n        public void onActivityCreated(MainFragment fragment, Bundle savedInstanceState) {\n            super.onActivityCreated(fragment, savedInstanceState);\n            fragment.initView();\n        }\n\n        @Override\n        public void onResume(MainFragment fragment) {\n            super.onResume(fragment);\n            if (fragment.hasEventData()) {\n                // \u3059\u3067\u306b\u30a4\u30d9\u30f3\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u6301\u3063\u3066\u3044\u305f\u3089\u8868\u793a\u3057\u3066\u5165\u529b\u5f85\u3061\u306b\u72b6\u614b\u9077\u79fb\n                fragment.displayContents();\n                fragment.next(IDLE);\n            } else {\n                // \u6301\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u3089\u6e96\u5099\u4e2d\u306b\u72b6\u614b\u9077\u79fb\n                fragment.next(GETTING_READY);\n            }\n        }\n    },\n\n\n\u5b9f\u88c5\n\nMainFragment.java\npackage me.rei_m.statepatternsample.fragment;\n\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport me.rei_m.statepatternsample.fragment.state.MainFragmentState;\nimport me.rei_m.statepatternsample.model.AtndModel;\n\npublic class MainFragment extends MainFragmentLogic {\n\n    public static MainFragment newInstance() {\n        MainFragment fragment = new MainFragment();\n        Bundle args = new Bundle();\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    private MainFragmentState state = MainFragmentState.INIT;\n\n    public MainFragment() {\n        // Required empty public constructor\n    }\n\n    public void next(MainFragmentState nextState) {\n        state.exit(this);\n        state = nextState;\n        state.entry(this);\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        state.onCreate(this, savedInstanceState);\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View view = super.onCreateView(inflater, container, savedInstanceState);\n        state.onCreateView(this, savedInstanceState);\n        return view;\n    }\n\n    @Override\n    public void onActivityCreated(Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n        state.onActivityCreated(this, savedInstanceState);\n    }\n\n    @Override\n    public void onStart() {\n        super.onStart();\n        state.onStart(this);\n    }\n\n    @Override\n    public void onResume() {\n        super.onResume();\n        state.onResume(this);\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        state.onPause(this);\n    }\n\n    @Override\n    public void onStop() {\n        super.onStop();\n        state.onStop(this);\n    }\n\n    @Override\n    public void onDestroyView() {\n        super.onDestroyView();\n        state.onDestroyView(this);\n    }\n\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        state.onDestroy(this);\n    }\n\n    @Override\n    public void subscribe(Object o) {\n        if (o instanceof AtndModel.AtndEventLoadedEvent) {\n            state.subscribe(this, (AtndModel.AtndEventLoadedEvent) o);\n        }\n    }\n}\n\n\n\nMainFragmentLogic.java\npackage me.rei_m.statepatternsample.fragment;\n\nimport android.app.ProgressDialog;\nimport android.os.Bundle;\nimport android.support.v4.app.Fragment;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ListView;\nimport android.widget.TextView;\n\nimport butterknife.Bind;\nimport butterknife.ButterKnife;\nimport me.rei_m.statepatternsample.R;\nimport me.rei_m.statepatternsample.event.RxBusProvider;\nimport me.rei_m.statepatternsample.manager.ModelLocator;\nimport me.rei_m.statepatternsample.model.AtndModel;\nimport me.rei_m.statepatternsample.view.adaptor.AtndEventListAdapter;\nimport rx.android.schedulers.AndroidSchedulers;\nimport rx.subscriptions.CompositeSubscription;\n\nabstract public class MainFragmentLogic extends Fragment {\n\n    @Bind(R.id.list_atnd_event)\n    ListView listAtndEvent;\n\n    @Bind(R.id.text_list_atnd_empty)\n    TextView emptyView;\n\n    @Bind(R.id.text_list_atnd_error)\n    TextView errorView;\n\n    private CompositeSubscription compositeSubscription;\n\n    private ProgressDialog progressDialog;\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View view = inflater.inflate(R.layout.fragment_main, container, false);\n        ButterKnife.bind(this, view);\n        return view;\n    }\n\n    @Override\n    public void onDestroyView() {\n        super.onDestroyView();\n        ButterKnife.unbind(this);\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        if (compositeSubscription != null) {\n            compositeSubscription.unsubscribe();\n            compositeSubscription = null;\n        }\n    }\n\n    public void initView() {\n        AtndEventListAdapter listAdapter = new AtndEventListAdapter(getContext(), R.layout.list_item_atnd_event);\n        listAtndEvent.setAdapter(listAdapter);\n        emptyView.setVisibility(View.GONE);\n        errorView.setVisibility(View.GONE);\n    }\n\n    public void fetchEvent() {\n        compositeSubscription = new CompositeSubscription();\n        compositeSubscription.add(RxBusProvider.INSTANCE.get()\n                .toObservable()\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(this::subscribe));\n        ((AtndModel) ModelLocator.get(ModelLocator.Tag.ATND)).fetch();\n    }\n\n    public void showProgressDialog() {\n        progressDialog = new ProgressDialog(getActivity());\n        progressDialog.setCancelable(false);\n        progressDialog.show();\n    }\n\n    public void hideProgressDialog() {\n        progressDialog.dismiss();\n    }\n\n    abstract public void subscribe(Object o);\n\n    public void displayContents() {\n        AtndModel atndModel = ((AtndModel) ModelLocator.get(ModelLocator.Tag.ATND));\n        AtndEventListAdapter listAdapter = (AtndEventListAdapter) listAtndEvent.getAdapter();\n        listAdapter.clear();\n        listAdapter.addAll(atndModel.getAtndEventList());\n        listAdapter.notifyDataSetChanged();\n    }\n\n    public void displayEmptyMessage() {\n        emptyView.setVisibility(View.VISIBLE);\n    }\n\n    public void displayErrorMessage() {\n        errorView.setVisibility(View.VISIBLE);\n    }\n\n    public boolean hasEventData() {\n        AtndModel atndModel = ((AtndModel) ModelLocator.get(ModelLocator.Tag.ATND));\n        return (0 < atndModel.getEventCount());\n    }\n}\n\n\n\nMainFragmentState.java\npackage me.rei_m.statepatternsample.fragment.state;\n\nimport android.os.Bundle;\nimport android.util.Log;\n\nimport me.rei_m.statepatternsample.fragment.MainFragment;\nimport me.rei_m.statepatternsample.model.AtndModel;\n\npublic enum MainFragmentState {\n\n    INIT {\n        @Override\n        public void onActivityCreated(MainFragment fragment, Bundle savedInstanceState) {\n            super.onActivityCreated(fragment, savedInstanceState);\n            fragment.initView();\n        }\n\n        @Override\n        public void onResume(MainFragment fragment) {\n            super.onResume(fragment);\n            if (fragment.hasEventData()) {\n                fragment.displayContents();\n                fragment.next(IDLE);\n            } else {\n                fragment.next(GETTING_READY);\n            }\n        }\n    },\n    GETTING_READY {\n        @Override\n        public void entry(MainFragment fragment) {\n            super.entry(fragment);\n            fragment.showProgressDialog();\n            fragment.fetchEvent();\n        }\n\n        @Override\n        public void onPause(MainFragment fragment) {\n            super.onPause(fragment);\n            fragment.next(PAUSE);\n        }\n\n        @Override\n        public void subscribe(MainFragment fragment, AtndModel.AtndEventLoadedEvent event) {\n            super.subscribe(fragment, event);\n            fragment.hideProgressDialog();\n            if (event.isSuccess()) {\n                if (fragment.hasEventData()) {\n                    fragment.displayContents();\n                } else {\n                    fragment.displayEmptyMessage();\n                }\n            } else {\n                fragment.displayErrorMessage();\n            }\n            fragment.next(IDLE);\n        }\n    },\n    IDLE {\n        @Override\n        public void onPause(MainFragment fragment) {\n            super.onPause(fragment);\n            fragment.next(PAUSE);\n        }\n    },\n    PAUSE {\n        @Override\n        public void onCreateView(MainFragment fragment, Bundle savedInstanceState) {\n            super.onCreateView(fragment, savedInstanceState);\n            fragment.next(INIT);\n        }\n    };\n\n    MainFragmentState() {\n    }\n\n    private String tag = MainFragmentState.class.getSimpleName() + \"/\" + name();\n\n    public void entry(MainFragment fragment) {\n        Log.d(tag, \"entry\");\n    }\n\n    public void exit(MainFragment fragment) {\n        Log.d(tag, \"exit\");\n    }\n\n    public void onCreate(MainFragment fragment, Bundle savedInstanceState) {\n        Log.d(tag, \"onCreate\");\n    }\n\n    public void onCreateView(MainFragment fragment, Bundle savedInstanceState) {\n        Log.d(tag, \"onCreateView\");\n    }\n\n    public void onActivityCreated(MainFragment fragment, Bundle savedInstanceState) {\n        Log.d(tag, \"onActivityCreated\");\n    }\n\n    public void onStart(MainFragment fragment) {\n        Log.d(tag, \"onStart\");\n    }\n\n    public void onResume(MainFragment fragment) {\n        Log.d(tag, \"onResume\");\n    }\n\n    public void onPause(MainFragment fragment) {\n        Log.d(tag, \"onPause\");\n    }\n\n    public void onStop(MainFragment fragment) {\n        Log.d(tag, \"onStop\");\n    }\n\n    public void onDestroyView(MainFragment fragment) {\n        Log.d(tag, \"onDestroyView\");\n    }\n\n    public void onDestroy(MainFragment fragment) {\n        Log.d(tag, \"onDestroy\");\n    }\n\n    public void subscribe(MainFragment fragment, AtndModel.AtndEventLoadedEvent event) {\n        Log.d(tag, \"subscribe/AtndEventLoadedEvent\");\n    }\n}\n\n\n\n\u304a\u307e\u3051\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u3002\u4e00\u6c17\u306b\u66f8\u3044\u305f\u306e\u3067\u3061\u3087\u3063\u3068\u5909\u306a\u3068\u3053\u308d\u304c\u3042\u308b\u304b\u3082\u3002\u3002\u3002\n\n\nhttps://github.com/rei-m/android_state_pattern_sample\n\n\n\u72b6\u614b\u306fEnum\u3067\u8868\u73fe\u3057\u307e\u3057\u305f\u304c\u3001\u89aa\u30af\u30e9\u30b9\u3092abstract\u3068\u3057\u305f\u308a\u3001interface\u306b\u3059\u308b\u5f62\u3067\u3082\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u53c2\u8003\n\n\n\u8981\u7d04\uff1a\u77e5\u3089\u306a\u3044\u3068\u640d\u3059\u308b\u30a2\u30d7\u30ea\u958b\u767a\u306b\u304a\u3051\u308bStateMachine\u306e\u6d3b\u7528\u6cd5\uff09\nAndroid:State\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u3063\u305f\u30a2\u30d7\u30ea\u306e\u72b6\u614b\u9077\u79fb\u306e\u5b9f\u88c5\u4f8b\n\n\u5c11\u3057\u8907\u96d1\u306a\u64cd\u4f5c\u304c\u8981\u6c42\u3055\u308c\u308b\u753b\u9762\u3092\u4f5c\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u3053\u3093\u306a\u611f\u3058\u306b\u72b6\u614b\u3092\u8868\u73fe\u3067\u304d\u308b\u304b\u306a\u3068\u3044\u3046\u3053\u3068\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u4f5c\u308b\u3082\u306e\n- \u304a\u8a66\u3057\u306a\u306e\u3067\u5358\u7d14\u306bAPI\u3092\u8aad\u3093\u3067\u30ea\u30b9\u30c8\u306b\u8868\u793a\u3059\u308b\u3060\u3051\u306e\u753b\u9762\u3067\u3059\u3002API\u306f\u4f55\u3067\u3082\u3088\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001ATND\u3055\u3093\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u5f15\u3063\u5f35\u3063\u3066\u3044\u307e\u3059\u3002\n\n## \u72b6\u614b\u9077\u79fb\n- \u3053\u3093\u306a\u611f\u3058\n\n<img width=\"900\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-13 19.44.39.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/25841/3c783504-394c-e533-bb14-74f3b0c70659.png\">\n\n- \u521d\u671f\u72b6\u614b\u304b\u3089\u59cb\u307e\u3063\u3066\u3001\u8868\u793a\u3059\u308b\u30c7\u30fc\u30bf\u3092\u6301\u3063\u3066\u306a\u3051\u308c\u3070\u3001\u6e96\u5099\u4e2d\u306b\u72b6\u614b\u9077\u79fb\u3057\u3066API\u3092\u547c\u3093\u3067\u53d6\u3063\u3066\u304d\u305f\u30c7\u30fc\u30bf\u3092\u8868\u793a\u3057\u3066\u3001\u5165\u529b\u5f85\u3061\u306b\u72b6\u614b\u9077\u79fb\u3002\u521d\u671f\u72b6\u614b\u6642\u306b\u3059\u3067\u306b\u30c7\u30fc\u30bf\u3092\u6301\u3063\u3066\u3044\u308c\u3070\u305d\u306e\u307e\u307e\u8868\u793a\u3057\u3066\u5165\u529b\u5f85\u3061\u306b\u72b6\u614b\u9077\u79fb\u3001\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u3002\n\n## \u767b\u5834\u3059\u308b\u30af\u30e9\u30b9\n- MainFragment \u30fb\u30fb\u30fb state\u3092\u7ba1\u7406\u3059\u308b\u3060\u3051\u306e\u30af\u30e9\u30b9\u3002\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3084\u30a4\u30d9\u30f3\u30c8\u306b\u5fdc\u3058\u3066\u4fdd\u6301\u3057\u3066\u3044\u308bstate\u306e\u5bfe\u5fdc\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u3002\n- MainFragmentLogic \u30fb\u30fb\u30fb View\u306e\u64cd\u4f5c\u3084\u30a2\u30d7\u30ea\u306e\u6319\u52d5\u306a\u3069\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n- MainFragmentState \u30fb\u30fb\u30fb Fragment\u306e\u72b6\u614b\u3092\u8868\u73fe\u3059\u308benum\u3002\u5404\u72b6\u614b\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3059\u308b\u3002\n    - INIT : \u521d\u671f\u72b6\u614b\n    - GETTING_READY : \u6e96\u5099\u4e2d\n    - IDLE : \u5165\u529b\u5f85\u3061\n    - PAUSE : \u505c\u6b62\u72b6\u614b\n\n- \u4f8b\u3048\u3070INIT\u306e\u5834\u5408\n\n```java\n    INIT {\n        @Override\n        public void onActivityCreated(MainFragment fragment, Bundle savedInstanceState) {\n            super.onActivityCreated(fragment, savedInstanceState);\n            fragment.initView();\n        }\n\n        @Override\n        public void onResume(MainFragment fragment) {\n            super.onResume(fragment);\n            if (fragment.hasEventData()) {\n                // \u3059\u3067\u306b\u30a4\u30d9\u30f3\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u6301\u3063\u3066\u3044\u305f\u3089\u8868\u793a\u3057\u3066\u5165\u529b\u5f85\u3061\u306b\u72b6\u614b\u9077\u79fb\n                fragment.displayContents();\n                fragment.next(IDLE);\n            } else {\n                // \u6301\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u3089\u6e96\u5099\u4e2d\u306b\u72b6\u614b\u9077\u79fb\n                fragment.next(GETTING_READY);\n            }\n        }\n    },\n```\n\n## \u5b9f\u88c5\n\n```java:MainFragment.java\npackage me.rei_m.statepatternsample.fragment;\n\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport me.rei_m.statepatternsample.fragment.state.MainFragmentState;\nimport me.rei_m.statepatternsample.model.AtndModel;\n\npublic class MainFragment extends MainFragmentLogic {\n\n    public static MainFragment newInstance() {\n        MainFragment fragment = new MainFragment();\n        Bundle args = new Bundle();\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    private MainFragmentState state = MainFragmentState.INIT;\n\n    public MainFragment() {\n        // Required empty public constructor\n    }\n\n    public void next(MainFragmentState nextState) {\n        state.exit(this);\n        state = nextState;\n        state.entry(this);\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        state.onCreate(this, savedInstanceState);\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View view = super.onCreateView(inflater, container, savedInstanceState);\n        state.onCreateView(this, savedInstanceState);\n        return view;\n    }\n\n    @Override\n    public void onActivityCreated(Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n        state.onActivityCreated(this, savedInstanceState);\n    }\n\n    @Override\n    public void onStart() {\n        super.onStart();\n        state.onStart(this);\n    }\n\n    @Override\n    public void onResume() {\n        super.onResume();\n        state.onResume(this);\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        state.onPause(this);\n    }\n\n    @Override\n    public void onStop() {\n        super.onStop();\n        state.onStop(this);\n    }\n\n    @Override\n    public void onDestroyView() {\n        super.onDestroyView();\n        state.onDestroyView(this);\n    }\n\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        state.onDestroy(this);\n    }\n\n    @Override\n    public void subscribe(Object o) {\n        if (o instanceof AtndModel.AtndEventLoadedEvent) {\n            state.subscribe(this, (AtndModel.AtndEventLoadedEvent) o);\n        }\n    }\n}\n```\n\n```MainFragmentLogic.java\npackage me.rei_m.statepatternsample.fragment;\n\nimport android.app.ProgressDialog;\nimport android.os.Bundle;\nimport android.support.v4.app.Fragment;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.ListView;\nimport android.widget.TextView;\n\nimport butterknife.Bind;\nimport butterknife.ButterKnife;\nimport me.rei_m.statepatternsample.R;\nimport me.rei_m.statepatternsample.event.RxBusProvider;\nimport me.rei_m.statepatternsample.manager.ModelLocator;\nimport me.rei_m.statepatternsample.model.AtndModel;\nimport me.rei_m.statepatternsample.view.adaptor.AtndEventListAdapter;\nimport rx.android.schedulers.AndroidSchedulers;\nimport rx.subscriptions.CompositeSubscription;\n\nabstract public class MainFragmentLogic extends Fragment {\n\n    @Bind(R.id.list_atnd_event)\n    ListView listAtndEvent;\n\n    @Bind(R.id.text_list_atnd_empty)\n    TextView emptyView;\n\n    @Bind(R.id.text_list_atnd_error)\n    TextView errorView;\n\n    private CompositeSubscription compositeSubscription;\n\n    private ProgressDialog progressDialog;\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View view = inflater.inflate(R.layout.fragment_main, container, false);\n        ButterKnife.bind(this, view);\n        return view;\n    }\n\n    @Override\n    public void onDestroyView() {\n        super.onDestroyView();\n        ButterKnife.unbind(this);\n    }\n\n    @Override\n    public void onPause() {\n        super.onPause();\n        if (compositeSubscription != null) {\n            compositeSubscription.unsubscribe();\n            compositeSubscription = null;\n        }\n    }\n\n    public void initView() {\n        AtndEventListAdapter listAdapter = new AtndEventListAdapter(getContext(), R.layout.list_item_atnd_event);\n        listAtndEvent.setAdapter(listAdapter);\n        emptyView.setVisibility(View.GONE);\n        errorView.setVisibility(View.GONE);\n    }\n\n    public void fetchEvent() {\n        compositeSubscription = new CompositeSubscription();\n        compositeSubscription.add(RxBusProvider.INSTANCE.get()\n                .toObservable()\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(this::subscribe));\n        ((AtndModel) ModelLocator.get(ModelLocator.Tag.ATND)).fetch();\n    }\n\n    public void showProgressDialog() {\n        progressDialog = new ProgressDialog(getActivity());\n        progressDialog.setCancelable(false);\n        progressDialog.show();\n    }\n\n    public void hideProgressDialog() {\n        progressDialog.dismiss();\n    }\n\n    abstract public void subscribe(Object o);\n\n    public void displayContents() {\n        AtndModel atndModel = ((AtndModel) ModelLocator.get(ModelLocator.Tag.ATND));\n        AtndEventListAdapter listAdapter = (AtndEventListAdapter) listAtndEvent.getAdapter();\n        listAdapter.clear();\n        listAdapter.addAll(atndModel.getAtndEventList());\n        listAdapter.notifyDataSetChanged();\n    }\n\n    public void displayEmptyMessage() {\n        emptyView.setVisibility(View.VISIBLE);\n    }\n\n    public void displayErrorMessage() {\n        errorView.setVisibility(View.VISIBLE);\n    }\n\n    public boolean hasEventData() {\n        AtndModel atndModel = ((AtndModel) ModelLocator.get(ModelLocator.Tag.ATND));\n        return (0 < atndModel.getEventCount());\n    }\n}\n```\n\n```MainFragmentState.java\npackage me.rei_m.statepatternsample.fragment.state;\n\nimport android.os.Bundle;\nimport android.util.Log;\n\nimport me.rei_m.statepatternsample.fragment.MainFragment;\nimport me.rei_m.statepatternsample.model.AtndModel;\n\npublic enum MainFragmentState {\n\n    INIT {\n        @Override\n        public void onActivityCreated(MainFragment fragment, Bundle savedInstanceState) {\n            super.onActivityCreated(fragment, savedInstanceState);\n            fragment.initView();\n        }\n\n        @Override\n        public void onResume(MainFragment fragment) {\n            super.onResume(fragment);\n            if (fragment.hasEventData()) {\n                fragment.displayContents();\n                fragment.next(IDLE);\n            } else {\n                fragment.next(GETTING_READY);\n            }\n        }\n    },\n    GETTING_READY {\n        @Override\n        public void entry(MainFragment fragment) {\n            super.entry(fragment);\n            fragment.showProgressDialog();\n            fragment.fetchEvent();\n        }\n\n        @Override\n        public void onPause(MainFragment fragment) {\n            super.onPause(fragment);\n            fragment.next(PAUSE);\n        }\n\n        @Override\n        public void subscribe(MainFragment fragment, AtndModel.AtndEventLoadedEvent event) {\n            super.subscribe(fragment, event);\n            fragment.hideProgressDialog();\n            if (event.isSuccess()) {\n                if (fragment.hasEventData()) {\n                    fragment.displayContents();\n                } else {\n                    fragment.displayEmptyMessage();\n                }\n            } else {\n                fragment.displayErrorMessage();\n            }\n            fragment.next(IDLE);\n        }\n    },\n    IDLE {\n        @Override\n        public void onPause(MainFragment fragment) {\n            super.onPause(fragment);\n            fragment.next(PAUSE);\n        }\n    },\n    PAUSE {\n        @Override\n        public void onCreateView(MainFragment fragment, Bundle savedInstanceState) {\n            super.onCreateView(fragment, savedInstanceState);\n            fragment.next(INIT);\n        }\n    };\n\n    MainFragmentState() {\n    }\n\n    private String tag = MainFragmentState.class.getSimpleName() + \"/\" + name();\n\n    public void entry(MainFragment fragment) {\n        Log.d(tag, \"entry\");\n    }\n\n    public void exit(MainFragment fragment) {\n        Log.d(tag, \"exit\");\n    }\n\n    public void onCreate(MainFragment fragment, Bundle savedInstanceState) {\n        Log.d(tag, \"onCreate\");\n    }\n\n    public void onCreateView(MainFragment fragment, Bundle savedInstanceState) {\n        Log.d(tag, \"onCreateView\");\n    }\n\n    public void onActivityCreated(MainFragment fragment, Bundle savedInstanceState) {\n        Log.d(tag, \"onActivityCreated\");\n    }\n\n    public void onStart(MainFragment fragment) {\n        Log.d(tag, \"onStart\");\n    }\n\n    public void onResume(MainFragment fragment) {\n        Log.d(tag, \"onResume\");\n    }\n\n    public void onPause(MainFragment fragment) {\n        Log.d(tag, \"onPause\");\n    }\n\n    public void onStop(MainFragment fragment) {\n        Log.d(tag, \"onStop\");\n    }\n\n    public void onDestroyView(MainFragment fragment) {\n        Log.d(tag, \"onDestroyView\");\n    }\n\n    public void onDestroy(MainFragment fragment) {\n        Log.d(tag, \"onDestroy\");\n    }\n\n    public void subscribe(MainFragment fragment, AtndModel.AtndEventLoadedEvent event) {\n        Log.d(tag, \"subscribe/AtndEventLoadedEvent\");\n    }\n}\n```\n\n## \u304a\u307e\u3051\n- \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u3002\u4e00\u6c17\u306b\u66f8\u3044\u305f\u306e\u3067\u3061\u3087\u3063\u3068\u5909\u306a\u3068\u3053\u308d\u304c\u3042\u308b\u304b\u3082\u3002\u3002\u3002\n    - https://github.com/rei-m/android_state_pattern_sample\n- \u72b6\u614b\u306fEnum\u3067\u8868\u73fe\u3057\u307e\u3057\u305f\u304c\u3001\u89aa\u30af\u30e9\u30b9\u3092abstract\u3068\u3057\u305f\u308a\u3001interface\u306b\u3059\u308b\u5f62\u3067\u3082\u540c\u3058\u3088\u3046\u306b\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u53c2\u8003\n- [\u8981\u7d04\uff1a\u77e5\u3089\u306a\u3044\u3068\u640d\u3059\u308b\u30a2\u30d7\u30ea\u958b\u767a\u306b\u304a\u3051\u308bStateMachine\u306e\u6d3b\u7528\u6cd5](http://qiita.com/mokemokechicken/items/9a4f7dea5a0fe37bd26f)\uff09\n- [Android:State\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u3063\u305f\u30a2\u30d7\u30ea\u306e\u72b6\u614b\u9077\u79fb\u306e\u5b9f\u88c5\u4f8b](http://taiyoproject.com/post-121)\n", "tags": ["Android", "statemachine", "\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3"]}