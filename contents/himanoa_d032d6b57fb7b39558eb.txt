{"context": "Flask\u3067API Limit\u3092\u5b9f\u88c5\u3057\u3088\u3046\u3068\u3057\u3066\u8272\u3005\u60c5\u5831\u53ce\u96c6\u306b\u6642\u9593\u3092\u8cbb\u3084\u3057\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u653e\u51fa\nFlask\u3067API\u5236\u9650\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001\u672c\u4f53\u306e\u6a5f\u80fd\u3060\u3051\u3067\u306f\u304b\u306a\u308a\u9762\u5012\u3002\u305d\u3053\u3067Flask-Limiter\u3092\u7528\u3044\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\n\nterminal\n$ pip install Flask-Limiter\n\n\n\n\u5b9f\u88c5\n\napp.py\n# -*- coding: utf-8 -*-\nfrom flask import Flask\nfrom flask_limiter import Limiter\nfrom flask_limiter.util import get_remote_address\n\napp = Flask(__name__)\nlimiter = Limiter(\n    app,\n    key_func=get_remote_address,\n    global_limits=['100 per day', '10 per hour']\n)\n\n\n@app.route('/')\n@limiter.limit('10/day')\ndef root():\n    return '1\u65e510\u56de\u3057\u304b\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u306a\u3044\u305e'\n\n\ndef main():\n    app.run()\n\nif __name__ == '__main__':\n    main()\n\n\n\u3061\u3087\u3063\u3068\u9577\u3044\u3067\u3059\u304c\u3001\u9806\u3092\u8ffd\u3063\u3066\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305a limiter \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u3053\u306e\u6642\u3001\u5f15\u6570\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u672c\u4f53\u3068key_func\u306b\u306f\u95a2\u6570\u3092\u3002\u307e\u305f\u3001global_limits (\u4efb\u610f)\u3092\u6e21\u3057\u307e\u3059\u3002\nkey_func \u306b\u3053\u3053\u3067\u306f get_remote_address \u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u3063\u3066\u304d\u305fIP\u30a2\u30c9\u30ec\u30b9\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u4f55\u3092\u57fa\u6e96\u306b\u898f\u5236\u304b\u3069\u3046\u304b\u5224\u65ad\u3059\u308b\u95a2\u6570\u3092\u6e21\u3057\u3066\u3042\u3052\u308c\u3070\u3044\u3044\u3067\u3059\u3002\nlimiter.limit \u306f\u5b9f\u969b\u306bAPI\u5236\u9650\u3092\u3064\u3051\u308b\u30c7\u30b3\u30ec\u30fc\u30bf\u3067\u3059\u3002\u8a18\u6cd5\u306f\u8907\u6570\u7a2e\u985e\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001;\u3067\u3064\u306a\u3052\u305f\u308a\u3001\u591a\u91cd\u306b\u30c7\u30b3\u30ec\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\n\u533a\u5207\u308a\u6587\u5b57\n\u8a18\u8ff0\u4f8b\n\u610f\u5473\n\n\n\n\nper\n1 per second\n1\u79d2\u306b1\u30ea\u30af\u30a8\u30b9\u30c8\u307e\u3067\n\n\n/\n1/day\n1\u65e51\u30ea\u30af\u30a8\u30b9\u30c8\u307e\u3067\n\n\n\n\u5f15\u6570\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001limiter \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3057\u305f global_limits \u306e\u5024\u304c\u53c2\u7167\u3055\u308c\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u306e\u4ed5\u65b9\n\u672c\u8a18\u4e8b\u3067\u306fpytest\u3092\u7528\u3044\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u308a\u5b9f\u884c\u3057\u305f\u308a\u3057\u307e\u3059\u3002\n\nterminal\n$ pip install pytest\n\n\n\u307e\u305f\u3001\u5148\u306e\u30b5\u30f3\u30d7\u30eb\u3060\u3068\u4f59\u8a08\u306a\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u591a\u3044\u306e\u3067\u3053\u3053\u3067\u4e00\u65e6\u6574\u7406\u3068\u3001\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306e\u6e96\u5099\u3092\u3057\u307e\u3059\u3002\n\napp.py\n# -*- coding: utf-8 -*-\nfrom flask import Flask\nfrom flask_limiter import Limiter\nfrom flask_limiter.util import get_remote_address\n\napp = Flask(__name__)\napp.config['API_LIMIT'] = '50 per day'\nlimiter = Limiter(\n    app,\n    key_func=get_remote_address,\n)\n\n@app.route('/')\n@limiter.limit(app.config['API_LIMIT'])\ndef root():\n    return '1\u65e510\u56de\u3057\u304b\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u306a\u3044\u305e'\n\n\ndef main():\n    app.run()\n\nif __name__ == '__main__':\n    main()\n\n\n\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u306f\u3001\u30c6\u30b9\u30c8\u74b0\u5883\u306e\u3068\u304d\u3060\u3051API\u5236\u9650\u304c\u304b\u304b\u308b\u307e\u3067\u306e\u30a2\u30af\u30bb\u30b9\u6570\u3092\u3082\u306e\u3059\u3054\u304f\u5c0f\u3055\u3044\u6570\u306b\u3057\u305f\u3044\u306e\u3067  app.config \u306bAPI\u5236\u9650\u5468\u308a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u683c\u7d0d\u3057\u307e\u3057\u305f\u3002\n\u30dd\u30a4\u30f3\u30c8\u3092\u8003\u616e\u3057\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308a\u307e\u3059\u3002\n\ntest_app.py\n# -*- coding: utf-8 -*-\nfrom app import app\n\nclass TestApplication:\n    @classmethod\n    def setup_class(cls):\n        cls.client = app.test_client()\n\n    def test_invalid(self):\n        tmp = app.config['API_LIMIT']\n        app.config['API_LIMIT'] = '1 per day'\n        response = self.client.get('/')\n        assert response.status_code == 200\n        response = self.client.get('/')\n        assert response.status_code == 429\n        app.config['API_LIMIT'] = tmp\n\n\n\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff01\npy.test test_app.py\n\n\u30c6\u30b9\u30c8\u306f\u843d\u3061\u307e\u3059\u3002\n================================== FAILURES ==================================\n________________________ TestApplication.test_invalid ________________________\n\nself = <test_app.TestApplication object at 0x10ed32860>\n\n    def test_invalid(self):\n        tmp = app.config[\"API_LIMIT\"]\n        app.config[\"API_LIMIT\"] = '1 per day'\n        response = self.client.get('/')\n        assert response.status_code == 200\n        response = self.client.get('/')\n>       assert response.status_code == 429\nE       assert 200 == 429\nE        +  where 200 = <Response streamed [200 OK]>.status_code\n\ntest_app.py:15: AssertionError\n========================== 1 failed in 0.26 seconds ==========================\n\n\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306b\u306f\u3001 limier.limit\u306b\u6e21\u3059\u5f15\u6570\u3092LIMIT\u6570\u3092\u8868\u3059\u6587\u5b57\u5217\u304b\u3089\u3001LIMIT\u6570\u3092\u8868\u3059\u6587\u5b57\u5217\u3092\u8fd4\u3059\u95a2\u6570\u306b\u5909\u3048\u3066\u3042\u3052\u308c\u3070OK\u3067\u3059\u3002\napp.py \u3092\u66f8\u304d\u63db\u3048\u3066\u3042\u3052\u307e\u3057\u3087\u3046\u3002\n\napp.py\n# -*- coding: utf-8 -*-\nfrom flask import Flask\nfrom flask_limiter import Limiter\nfrom flask_limiter.util import get_remote_address\n\napp = Flask(__name__)\napp.config['API_LIMIT'] = '50 per day'\nlimiter = Limiter(\n    app,\n    key_func=get_remote_address,\n)\n\ndef limit_string():\n  return app.config['API_LIMIT']\n\n@app.route('/')\n@limiter.limit(limit_string)\ndef root():\n    return '1\u65e510\u56de\u3057\u304b\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u306a\u3044\u305e'\n\n\ndef main():\n    app.run()\n\nif __name__ == '__main__':\n    main()\n\n\nFlask\u3067API Limit\u3092\u5b9f\u88c5\u3057\u3088\u3046\u3068\u3057\u3066\u8272\u3005\u60c5\u5831\u53ce\u96c6\u306b\u6642\u9593\u3092\u8cbb\u3084\u3057\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u653e\u51fa\n\nFlask\u3067API\u5236\u9650\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001\u672c\u4f53\u306e\u6a5f\u80fd\u3060\u3051\u3067\u306f\u304b\u306a\u308a\u9762\u5012\u3002\u305d\u3053\u3067[Flask-Limiter](https://github.com/alisaifee/flask-limiter)\u3092\u7528\u3044\u307e\u3059\u3002\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\n\n```bash:terminal\n$ pip install Flask-Limiter\n```\n\n# \u5b9f\u88c5\n\n```python:app.py\n# -*- coding: utf-8 -*-\nfrom flask import Flask\nfrom flask_limiter import Limiter\nfrom flask_limiter.util import get_remote_address\n\napp = Flask(__name__)\nlimiter = Limiter(\n    app,\n    key_func=get_remote_address,\n    global_limits=['100 per day', '10 per hour']\n)\n\n\n@app.route('/')\n@limiter.limit('10/day')\ndef root():\n    return '1\u65e510\u56de\u3057\u304b\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u306a\u3044\u305e'\n\n\ndef main():\n    app.run()\n\nif __name__ == '__main__':\n    main()\n```\n\n\u3061\u3087\u3063\u3068\u9577\u3044\u3067\u3059\u304c\u3001\u9806\u3092\u8ffd\u3063\u3066\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u307e\u305a `limiter` \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u3053\u306e\u6642\u3001\u5f15\u6570\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u672c\u4f53\u3068`key_func`\u306b\u306f\u95a2\u6570\u3092\u3002\u307e\u305f\u3001`global_limits` (\u4efb\u610f)\u3092\u6e21\u3057\u307e\u3059\u3002\n\n`key_func` \u306b\u3053\u3053\u3067\u306f `get_remote_address` \u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u95a2\u6570\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u3063\u3066\u304d\u305fIP\u30a2\u30c9\u30ec\u30b9\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3059\u3002\u3053\u3053\u3067\u306f\u3001\u4f55\u3092\u57fa\u6e96\u306b\u898f\u5236\u304b\u3069\u3046\u304b\u5224\u65ad\u3059\u308b\u95a2\u6570\u3092\u6e21\u3057\u3066\u3042\u3052\u308c\u3070\u3044\u3044\u3067\u3059\u3002\n\n`limiter.limit` \u306f\u5b9f\u969b\u306bAPI\u5236\u9650\u3092\u3064\u3051\u308b\u30c7\u30b3\u30ec\u30fc\u30bf\u3067\u3059\u3002\u8a18\u6cd5\u306f\u8907\u6570\u7a2e\u985e\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001;\u3067\u3064\u306a\u3052\u305f\u308a\u3001\u591a\u91cd\u306b\u30c7\u30b3\u30ec\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n|\u533a\u5207\u308a\u6587\u5b57|\u8a18\u8ff0\u4f8b|\u610f\u5473|\n|:------:|:---:|:-:|\n|  per   |1 per second|1\u79d2\u306b1\u30ea\u30af\u30a8\u30b9\u30c8\u307e\u3067|\n|   /    |1/day|1\u65e51\u30ea\u30af\u30a8\u30b9\u30c8\u307e\u3067|\n\n\u5f15\u6570\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001`limiter` \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3057\u305f `global_limits` \u306e\u5024\u304c\u53c2\u7167\u3055\u308c\u307e\u3059\u3002\n\n# \u30c6\u30b9\u30c8\u306e\u4ed5\u65b9\n\n\u672c\u8a18\u4e8b\u3067\u306f[pytest](http://doc.pytest.org/en/latest/)\u3092\u7528\u3044\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u308a\u5b9f\u884c\u3057\u305f\u308a\u3057\u307e\u3059\u3002\n\n```bash:terminal\n$ pip install pytest\n```\n\n\u307e\u305f\u3001\u5148\u306e\u30b5\u30f3\u30d7\u30eb\u3060\u3068\u4f59\u8a08\u306a\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u591a\u3044\u306e\u3067\u3053\u3053\u3067\u4e00\u65e6\u6574\u7406\u3068\u3001\u30c6\u30b9\u30c8\u306e\u305f\u3081\u306e\u6e96\u5099\u3092\u3057\u307e\u3059\u3002\n\n```python:app.py\n# -*- coding: utf-8 -*-\nfrom flask import Flask\nfrom flask_limiter import Limiter\nfrom flask_limiter.util import get_remote_address\n\napp = Flask(__name__)\napp.config['API_LIMIT'] = '50 per day'\nlimiter = Limiter(\n    app,\n    key_func=get_remote_address,\n)\n\n@app.route('/')\n@limiter.limit(app.config['API_LIMIT'])\ndef root():\n    return '1\u65e510\u56de\u3057\u304b\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u306a\u3044\u305e'\n\n\ndef main():\n    app.run()\n\nif __name__ == '__main__':\n    main()\n```\n\n\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u306f\u3001**\u30c6\u30b9\u30c8\u74b0\u5883\u306e\u3068\u304d\u3060\u3051API\u5236\u9650\u304c\u304b\u304b\u308b\u307e\u3067\u306e\u30a2\u30af\u30bb\u30b9\u6570\u3092\u3082\u306e\u3059\u3054\u304f\u5c0f\u3055\u3044\u6570\u306b\u3057\u305f\u3044**\u306e\u3067  `app.config` \u306bAPI\u5236\u9650\u5468\u308a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u683c\u7d0d\u3057\u307e\u3057\u305f\u3002\n\n\u30dd\u30a4\u30f3\u30c8\u3092\u8003\u616e\u3057\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3068\u4ee5\u4e0b\u306e\u901a\u308a\u306b\u306a\u308a\u307e\u3059\u3002\n\n```python:test_app.py\n# -*- coding: utf-8 -*-\nfrom app import app\n\nclass TestApplication:\n    @classmethod\n    def setup_class(cls):\n        cls.client = app.test_client()\n\n    def test_invalid(self):\n        tmp = app.config['API_LIMIT']\n        app.config['API_LIMIT'] = '1 per day'\n        response = self.client.get('/')\n        assert response.status_code == 200\n        response = self.client.get('/')\n        assert response.status_code == 429\n        app.config['API_LIMIT'] = tmp\n```\n\n\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff01\n\n```\npy.test test_app.py\n```\n\n\u30c6\u30b9\u30c8\u306f\u843d\u3061\u307e\u3059\u3002\n\n```\n================================== FAILURES ==================================\n________________________ TestApplication.test_invalid ________________________\n\nself = <test_app.TestApplication object at 0x10ed32860>\n\n    def test_invalid(self):\n        tmp = app.config[\"API_LIMIT\"]\n        app.config[\"API_LIMIT\"] = '1 per day'\n        response = self.client.get('/')\n        assert response.status_code == 200\n        response = self.client.get('/')\n>       assert response.status_code == 429\nE       assert 200 == 429\nE        +  where 200 = <Response streamed [200 OK]>.status_code\n\ntest_app.py:15: AssertionError\n========================== 1 failed in 0.26 seconds ==========================\n```\n\n\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306b\u306f\u3001 `limier.limit`\u306b\u6e21\u3059\u5f15\u6570\u3092**LIMIT\u6570\u3092\u8868\u3059\u6587\u5b57\u5217**\u304b\u3089\u3001**LIMIT\u6570\u3092\u8868\u3059\u6587\u5b57\u5217\u3092\u8fd4\u3059\u95a2\u6570**\u306b\u5909\u3048\u3066\u3042\u3052\u308c\u3070OK\u3067\u3059\u3002:ok_woman:\n\n`app.py` \u3092\u66f8\u304d\u63db\u3048\u3066\u3042\u3052\u307e\u3057\u3087\u3046\u3002\n\n```python:app.py\n# -*- coding: utf-8 -*-\nfrom flask import Flask\nfrom flask_limiter import Limiter\nfrom flask_limiter.util import get_remote_address\n\napp = Flask(__name__)\napp.config['API_LIMIT'] = '50 per day'\nlimiter = Limiter(\n    app,\n    key_func=get_remote_address,\n)\n\ndef limit_string():\n  return app.config['API_LIMIT']\n\n@app.route('/')\n@limiter.limit(limit_string)\ndef root():\n    return '1\u65e510\u56de\u3057\u304b\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u306a\u3044\u305e'\n\n\ndef main():\n    app.run()\n\nif __name__ == '__main__':\n    main()\n```\n\n", "tags": ["Python", "Flask", "pytest"]}