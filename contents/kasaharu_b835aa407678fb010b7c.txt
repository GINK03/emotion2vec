{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\n\n\u5fc5\u8981\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f AMI \u3092 ruby \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u7528\u3057\u3001\u81ea\u52d5\u3067\u4f5c\u6210\u3059\u308b\n\n\n\u3053\u308c\u306b\u3088\u308a\u3001\u3044\u3064\u3067\u3082\u5fc5\u8981\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u7528\u610f\u3067\u304d\u308b\n\n\n\u4eca\u56de\u306f\u3001ruby \u30b9\u30af\u30ea\u30d7\u30c8\u3068 chef \u3092\u7528\u3044\u3066 Nginx, Git \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f EC2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7acb\u3061\u4e0a\u3052\u3001\u304a\u3088\u3073\u305d\u306e AMI \u3092\u4f5c\u6210\u3059\u308b\n\n\n\u4e8b\u524d\u6e96\u5099\n\n\u4f5c\u696d\u30de\u30b7\u30f3\u74b0\u5883\n\nchef, knife-solo \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068\naws-sdk \u306e gem \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u3067\u3042\u308b\u3053\u3068\n\n\nAWS \u4e0a\u3067\u306e\u6e96\u5099\n\nEC2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e AMI \u3092\u9078\u5b9a\u3059\u308b\n\n\n\u4eca\u56de\u306f\u3001Ubuntu Server 12.04 LTS (64-bit) \u3068\u3059\u308b\n\n\nAMI ID (\u4eca\u56de\u306f ami-f381f5f2) \u3092\u78ba\u8a8d\u3057\u3066\u304a\u304f\n\n\n\n\n\n\n\nSecurity Group \u3092\u4f5c\u6210\u3059\u308b\n\n\n\u4eca\u56de\u306f \"forQiita\" \u3068\u3044\u3046\u540d\u524d\u3067\u4f5c\u6210\n\n\n\n\n\nKey Pair \u3092\u4f5c\u6210\u3059\u308b\n\n\n\u4eca\u56de\u306f \"forQiita\" \u3068\u3044\u3046\u540d\u524d\u3067\u4f5c\u6210\n\n\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n\nchef \u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u4f5c\u6210\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\n\n\nbash\n$ knife cookbook init <CHEF_KITCHEN>\n\n\n\nruby \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n\n\u4eca\u56de\u306f creatingAMI.rb \u3068\u3044\u3046\u540d\u524d\u3067\u4f5c\u6210\u3059\u308b\n\n\ncreatingAMI.rb\nrequire 'aws-sdk'\nrequire 'dotenv'\nDotenv.load\n\n# \u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\nACCESS_KEY_ID        = ENV['ACCESS_KEY_ID']\nSECRET_ACCESS_KEY    = ENV['SECRET_ACCESS_KEY']\nREGION               = ENV['REGION']\nBASE_AMI_NAME        = ENV['BASE_AMI_NAME']\nINSTANCE_TYPE        = ENV['INSTANCE_TYPE']\nKEY_PAIR             = ENV['KEY_PAIR']\nELB_NAME             = ENV['ELB_NAME']\nSECURITY_GROUP       = ENV['SECURITY_GROUP']\nAVAILABILITY_ZONE_A  = ENV['AVAILABILITY_ZONE_A']\nAVAILABILITY_ZONE_C  = ENV['AVAILABILITY_ZONE_C']\nEC2_ENDPOINT         = ENV['EC2_ENDPOINT']\nELB_ENDPOINT         = ENV['ELB_ENDPOINT']\nREMOTE_USER          = ENV['REMOTE_USER']\nSSH_KEY_FILE_PATH    = ENV['SSH_KEY_FILE_PATH']\n\nAWS.config({\n  region:            REGION,\n  access_key_id:     ACCESS_KEY_ID,\n  secret_access_key: SECRET_ACCESS_KEY,\n  ec2_endpoint:      EC2_ENDPOINT,\n  elb_endpoint:      ELB_ENDPOINT\n})\n\nINSTANCE_NAME        = \"appServer_newInstnce\"\nNAME_TAG             = \"Name\"\n\np \"EC2 Task\"\n@ec2 = AWS::EC2.new(\n  access_key_id: ACCESS_KEY_ID,\n  secret_access_key: SECRET_ACCESS_KEY,\n  region: REGION\n)\n\n############################## Create the EC2 Instance\n@new_instance = @ec2.instances.create(\n  image_id: BASE_AMI_NAME,\n  instance_type: INSTANCE_TYPE,\n  security_groups: SECURITY_GROUP,\n  availability_zone: AVAILABILITY_ZONE_C,\n  key_name: KEY_PAIR\n)\n@ec2.tags.create(@new_instance, NAME_TAG, value: INSTANCE_NAME)\np \"New Instance is creating ...\"\n\n# Set IP Address\n# IP \u30a2\u30c9\u30ec\u30b9\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u307e\u3067(\u30b9\u30c6\u30fc\u30bf\u30b9\u304c running \u306b\u306a\u308b\u307e\u3067)\u5f85\u6a5f\np \"Status check.\"\nloop do\n  p \"current status is #{@new_instance.status}.\"\n  break if @new_instance.status.equal?(:running)\n  sleep(20)\nend\np \"Status is #{@new_instance.status}!\"\n\n@all_instance_info = @ec2.client.describe_instances[:instance_index]\n@all_instance_info.each_value do |instance_info|\n  tag_set = instance_info[:tag_set]\n  tag_set.each do |tag|\n    if (tag[:key] == NAME_TAG && tag[:value] == INSTANCE_NAME)\n      @instance_pub_ip_addr = @new_instance.public_ip_address\n      @instance_id          = @new_instance.id\n    end\n  end\nend\n\n############################## Waiting status check\n# Status Checks \u304c \"2/2 checks passed\" \u306b\u306a\u308b\u307e\u3067 sleep\ni = 210\nwhile i > 0\n  p \"Please wait #{i} seconds.\"\n  sleep(30)\n  i -= 30\nend\np \"Finished status check.\"\n\n############################## Running Chef\n# Chef \u3092\u4f7f\u7528\u3057\u3001nginx \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n`knife solo prepare -i #{SSH_KEY_FILE_PATH} #{REMOTE_USER}@#{@instance_pub_ip_addr}`\n# \u5f8c\u8ff0\u3059\u308b\u3001json \u30d5\u30a1\u30a4\u30eb\u3092\u65b0\u898f\u4f5c\u6210\u3057\u305f EC2 \u7528\u306b\u30b3\u30d4\u30fc\n`cat nodes/template.json > nodes/#{@instance_pub_ip_addr}.json`\n`knife solo cook -i #{SSH_KEY_FILE_PATH} #{REMOTE_USER}@#{@instance_pub_ip_addr}`\n\np \"Finished chef.\"\n\n############################## Createing AMI\n\nami_name = \"#{@new_instance.id}_#{DateTime.now.strftime(\"%Y%m%d%H%M%S\")}\"\nami_description = \"Web Server Base AMI(#{@new_instance.tags['Name']}) at #{DateTime.now}\"\nnew_created_ami = @new_instance.create_image(ami_name, {description: ami_description, no_reboot: true})\n@ec2.tags.create(new_created_ami, NAME_TAG, value: \"Base_AMI_#{DateTime.now.strftime(\"%Y%m%d\")}\")\np \"AMI is Created!!!\"\np \"Done.\"\n\n\n\nchef cookbook \u306e\u4f5c\u6210\n$ knife cookbook create nginx -o site-cookbooks\n\n\nsite-cookbooks/nginx/recipes/default.rb \u3092\u7de8\u96c6\u3059\u308b\n\n\ndefault.rb\n#\n# Cookbook Name:: nginx\n# Recipe:: default\n#\n# Copyright 2014, YOUR_COMPANY_NAME\n#\n# All rights reserved - Do Not Redistribute\n#\n\n############################## apt-get update\n\nlog \"Run apt-get update...\"\nexecute \"apt-get update\" do\n  action :run\nend\nlog \"apt-get update Done!!!\"\n\n############################## git install\n\nlog \"Git install ...\"\n%w{libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev}.each do |pkg|\n  package pkg do\n    action :install\n  end\nend\n\npackage \"git-core\" do\n  action :install\nend\nlog \"Git install Done!!!\"\n\n############################## nginx install\n\nlog \"Nginx install ...\"\npackage \"nginx\" do\n  action :install\nend\n\nservice \"nginx\" do\n  supports :status => true, :restart => true, :reload => true\n  action [ :enable , :start ]\nend\nlog \"Nginx install Done!!!\"\n\n\n\n\u5b9f\u884c\u3059\u308b\u30ec\u30b7\u30d4\u4e00\u89a7\u3092 json \u306b\u8a18\u8f09\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u540d\u524d\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3059\u308b\n\n\nnodes/template.json (\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u65b0\u898f EC2 \u7528\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5185\u3067\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308b)\n\n\n\n\ntemplate.json\n{\n  \"run_list\":[\n    \"recipe[nginx]\"\n    ]\n}\n\n\n\n\u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\n\nruby \u30b9\u30af\u30ea\u30d7\u30c8\u3067\u8a18\u8f09\u3057\u3066\u3044\u308b\u74b0\u5883\u5909\u6570\u3092\u7528\u610f\n\"$HOME/.bash_profile\" \u306a\u3069\u306b\u66f8\u3044\u3066\u3082\u826f\u3044\u304c\u3001\u4eca\u56de\u306f dotenv \u3092\u63a1\u7528\n\n\ndotenv \u306b\u3064\u3044\u3066\u306f \u74b0\u5883\u306b\u3088\u3063\u3066\u5909\u308f\u308b\u8a2d\u5b9a\u5024\u306fdotenv\u3092\u4f7f\u3046\u3068\u4fbf\u5229 \u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n\n\nSSH_KEY_FILE_PATH    = \"$HOME/.ssh/forQiita.cer\"\n\n# ACCESS_KEY_ID \u3068 SECRET_ACCESS_KEY \u306f\u5404\u81ea\u8a18\u8f09\nACCESS_KEY_ID        = \"<YOUR ACCESS KEY ID HERE>\"\nSECRET_ACCESS_KEY    = \"<YOUR SECRET ACCESS KEY HERE>\"\nREGION               = \"ap-northeast-1\"\nBASE_AMI_NAME        = \"ami-f381f5f2\"\nINSTANCE_TYPE        = \"t1.micro\"\nKEY_PAIR             = \"forQiita\"\nSECURITY_GROUP       = \"forQiita\"\nAVAILABILITY_ZONE_A  = \"ap-northeast-1a\"\nAVAILABILITY_ZONE_C  = \"ap-northeast-1c\"\nEC2_ENDPOINT         = \"ec2.ap-northeast-1.amazonaws.com\"\nREMOTE_USER          = \"ubuntu\"\n\n\n\u5b9f\u884c\n\n\u3053\u3053\u307e\u3067\u304f\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3042\u308b\n\n.\n\u251c\u2500\u2500 cookbooks\n\u251c\u2500\u2500 creatingAMI.rb\n\u251c\u2500\u2500 data_bags\n\u251c\u2500\u2500 environments\n\u251c\u2500\u2500 nodes\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 template.json\n\u251c\u2500\u2500 roles\n\u2514\u2500\u2500 site-cookbooks\n    \u2514\u2500\u2500 nginx\n        \u251c\u2500\u2500 CHANGELOG.md\n        \u251c\u2500\u2500 README.md\n        \u251c\u2500\u2500 attributes\n        \u251c\u2500\u2500 definitions\n        \u251c\u2500\u2500 files\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 default\n        \u251c\u2500\u2500 libraries\n        \u251c\u2500\u2500 metadata.rb\n        \u251c\u2500\u2500 providers\n        \u251c\u2500\u2500 recipes\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 default.rb\n        \u251c\u2500\u2500 resources\n        \u2514\u2500\u2500 templates\n            \u2514\u2500\u2500 default\n\n\n\u30b7\u30a7\u30eb\u3092\u5b9f\u884c\n\n$ ruby creatingAMI.rb\n\n\nAMI \u304c\u4f5c\u3089\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\n\n\n\n\u307e\u305f\u3001\u4f5c\u6210\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3001\"Welcome to nginx!\" \u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u3082\u78ba\u8a8d\n\n\nnginx \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\n\n\n\n\n\u307e\u3068\u3081\n\nAWS \u3067\u63d0\u4f9b\u3057\u3066\u3044\u308b AMI \u3092\u30d9\u30fc\u30b9\u306b EC2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u8d77\u52d5\u3001\u3055\u3089\u306b\u81ea\u5206\u304c\u5fc5\u8981\u3068\u3059\u308b\u30bd\u30d5\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u72b6\u614b\u306e AMI \u3092\u4f5c\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\n\u3053\u308c\u306b\u3088\u308a\u3001\u3044\u3064\u3067\u3082\u5fc5\u8981\u306a\u30bd\u30d5\u30c8\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u7528\u610f\u3067\u304d\u308b\n\u5fc5\u8981\u3068\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u5909\u66f4\u304c\u3042\u3063\u305f\u5834\u5408\u306f\u3001chef \u306e\u30ec\u30b7\u30d4\u3092\u4fee\u6b63\u3059\u308b\u3060\u3051\u3067\u3001\u7c21\u5358\u304b\u3064\u81ea\u52d5\u306b\u30d9\u30fc\u30b9\u3068\u306a\u308b AMI \u3092\u7528\u610f\u3067\u304d\u308b\n\n\n\u53c2\u8003\n\nAWS SDK for Ruby\n\u74b0\u5883\u306b\u3088\u3063\u3066\u5909\u308f\u308b\u8a2d\u5b9a\u5024\u306fdotenv\u3092\u4f7f\u3046\u3068\u4fbf\u5229\n\n# \u76ee\u7684\n* \u5fc5\u8981\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f AMI \u3092 ruby \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u7528\u3057\u3001\u81ea\u52d5\u3067\u4f5c\u6210\u3059\u308b\n    * \u3053\u308c\u306b\u3088\u308a\u3001\u3044\u3064\u3067\u3082\u5fc5\u8981\u306a\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u7528\u610f\u3067\u304d\u308b\n* \u4eca\u56de\u306f\u3001ruby \u30b9\u30af\u30ea\u30d7\u30c8\u3068 chef \u3092\u7528\u3044\u3066 Nginx, Git \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f EC2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7acb\u3061\u4e0a\u3052\u3001\u304a\u3088\u3073\u305d\u306e AMI \u3092\u4f5c\u6210\u3059\u308b\n\n# \u4e8b\u524d\u6e96\u5099\n## \u4f5c\u696d\u30de\u30b7\u30f3\u74b0\u5883\n* chef, knife-solo \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3053\u3068\n* aws-sdk \u306e gem \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u3067\u3042\u308b\u3053\u3068\n\n## AWS \u4e0a\u3067\u306e\u6e96\u5099\n* EC2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e AMI \u3092\u9078\u5b9a\u3059\u308b\n    * \u4eca\u56de\u306f\u3001Ubuntu Server 12.04 LTS (64-bit) \u3068\u3059\u308b\n        * AMI ID (\u4eca\u56de\u306f ami-f381f5f2) \u3092\u78ba\u8a8d\u3057\u3066\u304a\u304f\n\n![AMI\u9078\u5b9a.png](https://qiita-image-store.s3.amazonaws.com/0/28573/d9b2fb15-2328-5528-4735-3821ce86ec32.png)\n\n* Security Group \u3092\u4f5c\u6210\u3059\u308b\n    * \u4eca\u56de\u306f \"forQiita\" \u3068\u3044\u3046\u540d\u524d\u3067\u4f5c\u6210\n\n![create_security_group.png](https://qiita-image-store.s3.amazonaws.com/0/28573/61d4f571-f045-b8a9-84c5-e98c6a6171f0.png)\n\n* Key Pair \u3092\u4f5c\u6210\u3059\u308b\n    * \u4eca\u56de\u306f \"forQiita\" \u3068\u3044\u3046\u540d\u524d\u3067\u4f5c\u6210\n\n# \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n## chef \u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u4f5c\u6210\n* \u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210\u3059\u308b\n\n```lang:bash\n$ knife cookbook init <CHEF_KITCHEN>\n```\n\n## ruby \u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n* \u4eca\u56de\u306f creatingAMI.rb \u3068\u3044\u3046\u540d\u524d\u3067\u4f5c\u6210\u3059\u308b\n\n```ruby:creatingAMI.rb\nrequire 'aws-sdk'\nrequire 'dotenv'\nDotenv.load\n\n# \u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\nACCESS_KEY_ID        = ENV['ACCESS_KEY_ID']\nSECRET_ACCESS_KEY    = ENV['SECRET_ACCESS_KEY']\nREGION               = ENV['REGION']\nBASE_AMI_NAME        = ENV['BASE_AMI_NAME']\nINSTANCE_TYPE        = ENV['INSTANCE_TYPE']\nKEY_PAIR             = ENV['KEY_PAIR']\nELB_NAME             = ENV['ELB_NAME']\nSECURITY_GROUP       = ENV['SECURITY_GROUP']\nAVAILABILITY_ZONE_A  = ENV['AVAILABILITY_ZONE_A']\nAVAILABILITY_ZONE_C  = ENV['AVAILABILITY_ZONE_C']\nEC2_ENDPOINT         = ENV['EC2_ENDPOINT']\nELB_ENDPOINT         = ENV['ELB_ENDPOINT']\nREMOTE_USER          = ENV['REMOTE_USER']\nSSH_KEY_FILE_PATH    = ENV['SSH_KEY_FILE_PATH']\n\nAWS.config({\n  region:            REGION,\n  access_key_id:     ACCESS_KEY_ID,\n  secret_access_key: SECRET_ACCESS_KEY,\n  ec2_endpoint:      EC2_ENDPOINT,\n  elb_endpoint:      ELB_ENDPOINT\n})\n\nINSTANCE_NAME        = \"appServer_newInstnce\"\nNAME_TAG             = \"Name\"\n\np \"EC2 Task\"\n@ec2 = AWS::EC2.new(\n  access_key_id: ACCESS_KEY_ID,\n  secret_access_key: SECRET_ACCESS_KEY,\n  region: REGION\n)\n\n############################## Create the EC2 Instance\n@new_instance = @ec2.instances.create(\n  image_id: BASE_AMI_NAME,\n  instance_type: INSTANCE_TYPE,\n  security_groups: SECURITY_GROUP,\n  availability_zone: AVAILABILITY_ZONE_C,\n  key_name: KEY_PAIR\n)\n@ec2.tags.create(@new_instance, NAME_TAG, value: INSTANCE_NAME)\np \"New Instance is creating ...\"\n\n# Set IP Address\n# IP \u30a2\u30c9\u30ec\u30b9\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u307e\u3067(\u30b9\u30c6\u30fc\u30bf\u30b9\u304c running \u306b\u306a\u308b\u307e\u3067)\u5f85\u6a5f\np \"Status check.\"\nloop do\n  p \"current status is #{@new_instance.status}.\"\n  break if @new_instance.status.equal?(:running)\n  sleep(20)\nend\np \"Status is #{@new_instance.status}!\"\n\n@all_instance_info = @ec2.client.describe_instances[:instance_index]\n@all_instance_info.each_value do |instance_info|\n  tag_set = instance_info[:tag_set]\n  tag_set.each do |tag|\n    if (tag[:key] == NAME_TAG && tag[:value] == INSTANCE_NAME)\n      @instance_pub_ip_addr = @new_instance.public_ip_address\n      @instance_id          = @new_instance.id\n    end\n  end\nend\n\n############################## Waiting status check\n# Status Checks \u304c \"2/2 checks passed\" \u306b\u306a\u308b\u307e\u3067 sleep\ni = 210\nwhile i > 0\n  p \"Please wait #{i} seconds.\"\n  sleep(30)\n  i -= 30\nend\np \"Finished status check.\"\n\n############################## Running Chef\n# Chef \u3092\u4f7f\u7528\u3057\u3001nginx \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n`knife solo prepare -i #{SSH_KEY_FILE_PATH} #{REMOTE_USER}@#{@instance_pub_ip_addr}`\n# \u5f8c\u8ff0\u3059\u308b\u3001json \u30d5\u30a1\u30a4\u30eb\u3092\u65b0\u898f\u4f5c\u6210\u3057\u305f EC2 \u7528\u306b\u30b3\u30d4\u30fc\n`cat nodes/template.json > nodes/#{@instance_pub_ip_addr}.json`\n`knife solo cook -i #{SSH_KEY_FILE_PATH} #{REMOTE_USER}@#{@instance_pub_ip_addr}`\n\np \"Finished chef.\"\n\n############################## Createing AMI\n\nami_name = \"#{@new_instance.id}_#{DateTime.now.strftime(\"%Y%m%d%H%M%S\")}\"\nami_description = \"Web Server Base AMI(#{@new_instance.tags['Name']}) at #{DateTime.now}\"\nnew_created_ami = @new_instance.create_image(ami_name, {description: ami_description, no_reboot: true})\n@ec2.tags.create(new_created_ami, NAME_TAG, value: \"Base_AMI_#{DateTime.now.strftime(\"%Y%m%d\")}\")\np \"AMI is Created!!!\"\np \"Done.\"\n```\n\n## chef cookbook \u306e\u4f5c\u6210\n\n```bash\n$ knife cookbook create nginx -o site-cookbooks\n```\n\n* site-cookbooks/nginx/recipes/default.rb \u3092\u7de8\u96c6\u3059\u308b\n\n```rb:default.rb\n#\n# Cookbook Name:: nginx\n# Recipe:: default\n#\n# Copyright 2014, YOUR_COMPANY_NAME\n#\n# All rights reserved - Do Not Redistribute\n#\n\n############################## apt-get update\n\nlog \"Run apt-get update...\"\nexecute \"apt-get update\" do\n  action :run\nend\nlog \"apt-get update Done!!!\"\n\n############################## git install\n\nlog \"Git install ...\"\n%w{libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev}.each do |pkg|\n  package pkg do\n    action :install\n  end\nend\n\npackage \"git-core\" do\n  action :install\nend\nlog \"Git install Done!!!\"\n\n############################## nginx install\n\nlog \"Nginx install ...\"\npackage \"nginx\" do\n  action :install\nend\n\nservice \"nginx\" do\n  supports :status => true, :restart => true, :reload => true\n  action [ :enable , :start ]\nend\nlog \"Nginx install Done!!!\"\n```\n\n* \u5b9f\u884c\u3059\u308b\u30ec\u30b7\u30d4\u4e00\u89a7\u3092 json \u306b\u8a18\u8f09\n* \u4e0b\u8a18\u306e\u3088\u3046\u306a\u540d\u524d\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3059\u308b\n    * nodes/template.json (\u3053\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u65b0\u898f EC2 \u7528\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u5185\u3067\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308b)\n\n```json:template.json\n{\n  \"run_list\":[\n    \"recipe[nginx]\"\n    ]\n}\n```\n\n## \u74b0\u5883\u5909\u6570\u306e\u8a2d\u5b9a\n* ruby \u30b9\u30af\u30ea\u30d7\u30c8\u3067\u8a18\u8f09\u3057\u3066\u3044\u308b\u74b0\u5883\u5909\u6570\u3092\u7528\u610f\n* \"$HOME/.bash_profile\" \u306a\u3069\u306b\u66f8\u3044\u3066\u3082\u826f\u3044\u304c\u3001\u4eca\u56de\u306f dotenv \u3092\u63a1\u7528\n    * dotenv \u306b\u3064\u3044\u3066\u306f [\u74b0\u5883\u306b\u3088\u3063\u3066\u5909\u308f\u308b\u8a2d\u5b9a\u5024\u306fdotenv\u3092\u4f7f\u3046\u3068\u4fbf\u5229](http://qiita.com/closer/items/f8d8ba00ae86d7051764) \u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n```.env\nSSH_KEY_FILE_PATH    = \"$HOME/.ssh/forQiita.cer\"\n\n# ACCESS_KEY_ID \u3068 SECRET_ACCESS_KEY \u306f\u5404\u81ea\u8a18\u8f09\nACCESS_KEY_ID        = \"<YOUR ACCESS KEY ID HERE>\"\nSECRET_ACCESS_KEY    = \"<YOUR SECRET ACCESS KEY HERE>\"\nREGION               = \"ap-northeast-1\"\nBASE_AMI_NAME        = \"ami-f381f5f2\"\nINSTANCE_TYPE        = \"t1.micro\"\nKEY_PAIR             = \"forQiita\"\nSECURITY_GROUP       = \"forQiita\"\nAVAILABILITY_ZONE_A  = \"ap-northeast-1a\"\nAVAILABILITY_ZONE_C  = \"ap-northeast-1c\"\nEC2_ENDPOINT         = \"ec2.ap-northeast-1.amazonaws.com\"\nREMOTE_USER          = \"ubuntu\"\n```\n\n# \u5b9f\u884c\n\n* \u3053\u3053\u307e\u3067\u304f\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3042\u308b\n\n```\n.\n\u251c\u2500\u2500 cookbooks\n\u251c\u2500\u2500 creatingAMI.rb\n\u251c\u2500\u2500 data_bags\n\u251c\u2500\u2500 environments\n\u251c\u2500\u2500 nodes\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 template.json\n\u251c\u2500\u2500 roles\n\u2514\u2500\u2500 site-cookbooks\n    \u2514\u2500\u2500 nginx\n        \u251c\u2500\u2500 CHANGELOG.md\n        \u251c\u2500\u2500 README.md\n        \u251c\u2500\u2500 attributes\n        \u251c\u2500\u2500 definitions\n        \u251c\u2500\u2500 files\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 default\n        \u251c\u2500\u2500 libraries\n        \u251c\u2500\u2500 metadata.rb\n        \u251c\u2500\u2500 providers\n        \u251c\u2500\u2500 recipes\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 default.rb\n        \u251c\u2500\u2500 resources\n        \u2514\u2500\u2500 templates\n            \u2514\u2500\u2500 default\n```\n\n* \u30b7\u30a7\u30eb\u3092\u5b9f\u884c\n\n```bash\n$ ruby creatingAMI.rb\n```\n\n* AMI \u304c\u4f5c\u3089\u308c\u305f\u3053\u3068\u3092\u78ba\u8a8d\n\n![created_ami.png](https://qiita-image-store.s3.amazonaws.com/0/28573/3a7e6ecb-99a3-70d0-40e1-a58ef1f21159.png)\n\n* \u307e\u305f\u3001\u4f5c\u6210\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3001\"Welcome to nginx!\" \u304c\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u3082\u78ba\u8a8d\n    * nginx \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\n\n# \u307e\u3068\u3081\n* AWS \u3067\u63d0\u4f9b\u3057\u3066\u3044\u308b AMI \u3092\u30d9\u30fc\u30b9\u306b EC2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u8d77\u52d5\u3001\u3055\u3089\u306b\u81ea\u5206\u304c\u5fc5\u8981\u3068\u3059\u308b\u30bd\u30d5\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u72b6\u614b\u306e AMI \u3092\u4f5c\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\n\n* \u3053\u308c\u306b\u3088\u308a\u3001\u3044\u3064\u3067\u3082\u5fc5\u8981\u306a\u30bd\u30d5\u30c8\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u7528\u610f\u3067\u304d\u308b\n* \u5fc5\u8981\u3068\u3059\u308b\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u306b\u5909\u66f4\u304c\u3042\u3063\u305f\u5834\u5408\u306f\u3001chef \u306e\u30ec\u30b7\u30d4\u3092\u4fee\u6b63\u3059\u308b\u3060\u3051\u3067\u3001\u7c21\u5358\u304b\u3064\u81ea\u52d5\u306b\u30d9\u30fc\u30b9\u3068\u306a\u308b AMI \u3092\u7528\u610f\u3067\u304d\u308b\n\n# \u53c2\u8003\n* [AWS SDK for Ruby](http://docs.aws.amazon.com/AWSRubySDK/latest/)\n* [\u74b0\u5883\u306b\u3088\u3063\u3066\u5909\u308f\u308b\u8a2d\u5b9a\u5024\u306fdotenv\u3092\u4f7f\u3046\u3068\u4fbf\u5229](http://qiita.com/closer/items/f8d8ba00ae86d7051764)\n", "tags": ["chef", "knife-solo", "Ruby", "AWS", "Immutable_Infrastructure"]}