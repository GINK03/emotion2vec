{"context": " More than 1 year has passed since last update.\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u30c7\u30d5\u30a9\u30eb\u30c8(YAML)\u3001Oj(json)\u3001MessagePack\u3067\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3082\u53d6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u4fdd\u5b58\u3059\u308b\u30c7\u30fc\u30bf\u306f http://json-generator.appspot.com/ \u3053\u3053\u3067\u9069\u5f53\u306b\u4f5c\u3063\u305f\u3082\u306e\u3092\u30ed\u30fc\u30c9\u3057\u3066\u7a81\u3063\u8fbc\u3093\u3067\u307e\u3059\u3002\nDB\u306b\u4fdd\u5b58\u3057\u3066\u3044\u305f\u308a\u3057\u307e\u3059\u304c\u3001\u5358\u7d14\u306b\u305d\u308c\u305e\u308c\u306edump\u3068load\u306e\u5dee\u3067\u3059\u3002\n\nmigration\ncreate_table :articles, force: true do |t|\n  t.column :body, \"MEDIUMTEXT\", null: false\n  t.timestamps null: false\nend\n\ncreate_table :oj_articles, force: true do |t|\n  t.column :body, \"MEDIUMTEXT\", null: false\n  t.timestamps null: false\nend\n\ncreate_table :msgpack_articles, force: true do |t|\n  t.column :body, \"MEDIUMBLOB\", null: false\n  t.timestamps null: false\n  end\n\n\nMessagePack\u306f\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306a\u306e\u3067\u3001BLOB\u578b\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nmodels\nclass SerializationOj\n  def self.dump(obj)\n    Oj.dump(obj, mode: :compat)\n  end\n\n  def self.load(json)\n    Oj.load(json, mode: :compat) unless json.nil?\n  end\nend\n\nclass SerializationMessagePack\n  def self.dump(obj)\n    MessagePack.pack(obj)\n  end\n\n  def self.load(binary)\n    MessagePack.unpack(binary) unless binary.nil?\n  end\nend\n\nclass Article < ActiveRecord::Base\n  serialize :body\nend\n\nclass OjArticle < ActiveRecord::Base\n  serialize :body, SerializationOj\nend\n\nclass MsgpackArticle < ActiveRecord::Base\n  serialize :body, SerializationMessagePack\nend\n\n\nMessagePack\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066serialize\u306e\u7b2c2\u5f15\u6570\u306b\u6307\u5b9a\n\nbenchmark\nBENCH_TIMES = 10000\nBODY_DATA   = Oj.load(File.read(File.expand_path(\"../dummy.json\", __FILE__)), mode: :compat)\n\np \"file size: #{BODY_DATA.size}\"\n\nBenchmark.bmbm do |bm|\n  p \"yaml\"\n  bm.report \"create\" do\n    BENCH_TIMES.times do\n      Article.create!(body: BODY_DATA)\n    end\n  end\n\n  bm.report \"find\" do\n    BENCH_TIMES.times do\n      Article.limit(100).collect(&:body)\n    end\n  end\nend\n\nBenchmark.bmbm do |bm|\n  p \"oj\"\n  bm.report \"create\" do\n    BENCH_TIMES.times do\n      OjArticle.create!(body: BODY_DATA)\n    end\n  end\n\n  bm.report \"find\" do\n    BENCH_TIMES.times do\n      OjArticle.limit(100).collect(&:body)\n    end\n  end\nend\n\nBenchmark.bmbm do |bm|\n  p \"msgpack\"\n  bm.report \"create\" do\n    BENCH_TIMES.times do\n      MsgpackArticle.create!(body: BODY_DATA)\n    end\n  end\n\n  bm.report \"find\" do\n    BENCH_TIMES.times do\n      MsgpackArticle.limit(100).collect(&:body)\n    end\n  end\nend\n\n\n\nresult\n\"file size: 87505\"\n\n\"yaml\"\nRehearsal ------------------------------------------\ncreate 194.760000   4.410000 199.170000 (226.059458)\nfind   1443.380000 145.550000 1588.930000 (1691.537545)\n------------------------------ total: 1788.100000sec\n\n             user     system      total        real\ncreate 194.280000   4.370000 198.650000 (249.059130)\nfind   1443.510000 145.030000 1588.540000 (1690.263404)\n\n\n\"oj\"\nRehearsal ------------------------------------------\ncreate  50.360000   3.440000  53.800000 ( 83.307643)\nfind   392.770000 137.870000 530.640000 (633.403793)\n------------------------------- total: 584.440000sec\n\n             user     system      total        real\ncreate  50.550000   3.320000  53.870000 (116.603378)\nfind   393.820000 138.790000 532.610000 (635.451361)\n\n\n\"msgpack\"\nRehearsal ------------------------------------------\ncreate  13.390000   3.490000  16.880000 ( 39.246475)\nfind    75.450000 103.490000 178.940000 (268.235375)\n------------------------------- total: 195.820000sec\n\n             user     system      total        real\ncreate  15.200000   3.670000  18.870000 (147.845164)\nfind    75.580000 104.860000 180.440000 (269.350645)\n\n\nMsagePack\u901f\u3044\uff01  \n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u30c7\u30d5\u30a9\u30eb\u30c8(YAML)\u3001Oj(json)\u3001MessagePack\u3067\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3082\u53d6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u4fdd\u5b58\u3059\u308b\u30c7\u30fc\u30bf\u306f http://json-generator.appspot.com/ \u3053\u3053\u3067\u9069\u5f53\u306b\u4f5c\u3063\u305f\u3082\u306e\u3092\u30ed\u30fc\u30c9\u3057\u3066\u7a81\u3063\u8fbc\u3093\u3067\u307e\u3059\u3002\nDB\u306b\u4fdd\u5b58\u3057\u3066\u3044\u305f\u308a\u3057\u307e\u3059\u304c\u3001\u5358\u7d14\u306b\u305d\u308c\u305e\u308c\u306edump\u3068load\u306e\u5dee\u3067\u3059\u3002\n\n```rb:migration\ncreate_table :articles, force: true do |t|\n  t.column :body, \"MEDIUMTEXT\", null: false\n  t.timestamps null: false\nend\n\ncreate_table :oj_articles, force: true do |t|\n  t.column :body, \"MEDIUMTEXT\", null: false\n  t.timestamps null: false\nend\n\ncreate_table :msgpack_articles, force: true do |t|\n  t.column :body, \"MEDIUMBLOB\", null: false\n  t.timestamps null: false\n  end\n```\nMessagePack\u306f\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306a\u306e\u3067\u3001BLOB\u578b\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n```rb:models\nclass SerializationOj\n  def self.dump(obj)\n    Oj.dump(obj, mode: :compat)\n  end\n\n  def self.load(json)\n    Oj.load(json, mode: :compat) unless json.nil?\n  end\nend\n\nclass SerializationMessagePack\n  def self.dump(obj)\n    MessagePack.pack(obj)\n  end\n\n  def self.load(binary)\n    MessagePack.unpack(binary) unless binary.nil?\n  end\nend\n\nclass Article < ActiveRecord::Base\n  serialize :body\nend\n\nclass OjArticle < ActiveRecord::Base\n  serialize :body, SerializationOj\nend\n\nclass MsgpackArticle < ActiveRecord::Base\n  serialize :body, SerializationMessagePack\nend\n```\nMessagePack\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066serialize\u306e\u7b2c2\u5f15\u6570\u306b\u6307\u5b9a\n\n```rb:benchmark\nBENCH_TIMES = 10000\nBODY_DATA   = Oj.load(File.read(File.expand_path(\"../dummy.json\", __FILE__)), mode: :compat)\n\np \"file size: #{BODY_DATA.size}\"\n\nBenchmark.bmbm do |bm|\n  p \"yaml\"\n  bm.report \"create\" do\n    BENCH_TIMES.times do\n      Article.create!(body: BODY_DATA)\n    end\n  end\n\n  bm.report \"find\" do\n    BENCH_TIMES.times do\n      Article.limit(100).collect(&:body)\n    end\n  end\nend\n\nBenchmark.bmbm do |bm|\n  p \"oj\"\n  bm.report \"create\" do\n    BENCH_TIMES.times do\n      OjArticle.create!(body: BODY_DATA)\n    end\n  end\n\n  bm.report \"find\" do\n    BENCH_TIMES.times do\n      OjArticle.limit(100).collect(&:body)\n    end\n  end\nend\n\nBenchmark.bmbm do |bm|\n  p \"msgpack\"\n  bm.report \"create\" do\n    BENCH_TIMES.times do\n      MsgpackArticle.create!(body: BODY_DATA)\n    end\n  end\n\n  bm.report \"find\" do\n    BENCH_TIMES.times do\n      MsgpackArticle.limit(100).collect(&:body)\n    end\n  end\nend\n```\n\n```bash:result\n\"file size: 87505\"\n\n\"yaml\"\nRehearsal ------------------------------------------\ncreate 194.760000   4.410000 199.170000 (226.059458)\nfind   1443.380000 145.550000 1588.930000 (1691.537545)\n------------------------------ total: 1788.100000sec\n\n             user     system      total        real\ncreate 194.280000   4.370000 198.650000 (249.059130)\nfind   1443.510000 145.030000 1588.540000 (1690.263404)\n\n\n\"oj\"\nRehearsal ------------------------------------------\ncreate  50.360000   3.440000  53.800000 ( 83.307643)\nfind   392.770000 137.870000 530.640000 (633.403793)\n------------------------------- total: 584.440000sec\n\n             user     system      total        real\ncreate  50.550000   3.320000  53.870000 (116.603378)\nfind   393.820000 138.790000 532.610000 (635.451361)\n\n\n\"msgpack\"\nRehearsal ------------------------------------------\ncreate  13.390000   3.490000  16.880000 ( 39.246475)\nfind    75.450000 103.490000 178.940000 (268.235375)\n------------------------------- total: 195.820000sec\n\n             user     system      total        real\ncreate  15.200000   3.670000  18.870000 (147.845164)\nfind    75.580000 104.860000 180.440000 (269.350645)\n```\n\nMsagePack\u901f\u3044\uff01 :stuck_out_tongue_closed_eyes: \n", "tags": ["Ruby", "Rails4", "ActiveRecord"]}