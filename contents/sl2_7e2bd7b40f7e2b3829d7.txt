{"tags": ["AWS", "Claudia.js", "APIGateway", "serverless", "lambda"], "context": "Claudia.js\u306fAWS\u4e0a\u3067API Gateway\u3068AWS Lambda\u306b\u3088\u308b\u30b5\u30fc\u30d0\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u308bNode.js\u88fd\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\n\u3053\u306e\u969b\u3001Facebook, Google, Twitter\u306e\u7528\u306a\u5916\u90e8\u306e\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u304b\u3089\u53d6\u5f97\u3057\u305fOAuth Access Token\u3092API Gateway\u306e\u30ec\u30a4\u30e4\u30fc\u3067\u691c\u8a3c\u3057\u3066\u554f\u984c\u306a\u3051\u308c\u3070\u88cf\u306eLambda\u306b\u6295\u3052\u305f\u3044\u30b1\u30fc\u30b9\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nClaudia.js\u3092\u4f7f\u3048\u3070\u3053\u306e\u3088\u3046\u306a\u51e6\u7406\u304c10\u5206\u3082\u3042\u308c\u3070\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n[\u95a2\u9023\u8a18\u4e8b]\n\n\nAPI Gateway\u3068Lambda\u3067OAuth\n\nClaudia.js\u3092\u4f7f\u308f\u306a\u3044\u65b9\u6cd5\u3067\u9762\u5012\u306a\u306e\u3067\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u305b\u3093\u3002\n\n\n\nSwift3\u3067Facebook SDK\u3092\u4f7f\u3046 \n\n\u3053\u306e\u3088\u3046\u306b\u53d6\u5f97\u3057\u305fFacebook\u306eAccess Token\u3092\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3044\u5834\u5408\u3067\u3059\u3002\n\n\n\n\n\u6e96\u5099\n\n1. Claudia.js\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\nnpm install -g claudia\n\n\n2. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nmkdir [Proj Name] && cd [Proj Name]\nnpm init\nnpm install --save claudia-api-builder\nnpm install --save aws-sdk\nnpm install --save axios\n\n\n\u5b9f\u88c5\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30a2\u30d7\u30ea\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\u30a8\u30e9\u30fc\u51e6\u7406\u3084\u8a73\u7d30\u306f\u5272\u611b\u3057\u307e\u3059\u3002\u307e\u305f\u3001Hello World\u7684\u306a\u3082\u306e\u306fCloudia.js\u306eTutorial\u3092\u307f\u305f\u65b9\u304c\u624b\u3063\u53d6\u308a\u65e9\u3044\u3067\u3059\u3002\n\n\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30a2\u30d7\u30ea\u304cSNS\u306e\u8a8d\u8a3c\u8a8d\u53efAPI\u304b\u3089OAuth\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u3002(\u7565)\n\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30a2\u30d7\u30ea\u304c\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u4ed8\u4e0e\u3057\u3066AWS API Gateway\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\u3002(\u7565)\nAWS API Gateway\u304cSNS\u306e\u8a8d\u8a3c\u8a8d\u53efAPI\u3092\u7528\u3044\u3066\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u691c\u8a3c\u3059\u308b\u3002\nAWS API Gateway\u304cFaaS\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3002\nAWS Lambda\u306e\u95a2\u6570\u304cAWS DynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u30d5\u30ed\u30f3\u30c8\u306b\u8fd4\u3059\u3002\n\n\n1. \u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u306e\u4f5c\u6210\n\n1. \u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u7528\u306eLambda\u95a2\u6570\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nauthorizer.js\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002Access Token\u691c\u8a3cAPI\u3092\u547c\u3073\u51fa\u3057\u3066\u6709\u52b9\u306a\u5834\u5408\u306bAPI\u5b9f\u884c\u6a29\u9650\u3092\u4ed8\u4e0e\u3057\u3066\u3044\u307e\u3059\u3002\nvar axios = require('axios');\n\n//API\u5b9f\u884c\u30dd\u30ea\u30b7\u30fc\u306e\u751f\u6210\nvar generatePolicy = function(authToken, methodArn, context) {\n    var awsInfo = methodArn.split(':');\n    var region = awsInfo[3];\n    var accountId = awsInfo[4];\n\n    var apiInfo = awsInfo[5].split('/');\n    var restApiId = apiInfo[0];\n    var stage = apiInfo[1];\n    var method = apiInfo[2];\n\n    //\u30a2\u30af\u30bb\u30b9\u3055\u305b\u305f\u3044\u30ea\u30bd\u30fc\u30b9\n    var resource = 'arn:aws:execute-api:' + region + ':' + accountId + ':' + restApiId + '/' + stage  +'/' + method + '/*';\n\n    return {\n        'principalId': authToken.split('-')[0],\n        'policyDocument': {\n            'Version': '2012-10-17',\n            'Statement': [{\n                'Effect': 'Allow',\n                'Action': ['execute-api:Invoke'],\n                'Resource': [resource]\n            }]\n        }\n    };\n};\n\nvar url = \"Access Token\u306eValidate\u3092\u884c\u3046API\u306eURL\";\n\n//Token\u306e\u691c\u8a3c\u3068\u30dd\u30ea\u30b7\u30fc\u306e\u4ed8\u4e0e\nexports.auth = function auth(event, context, cb) {\n  axios.get(url, {\n    params: {\n      access_token: event.authorizationToken //HTTP header\u306eAuthorization\u30ad\u30fc\u306e\u5024\n    }\n  }).then(function (res) {\n    var is_valid = true|false; //Token\u306e\u6709\u52b9\u6027\u3092\u691c\u8a3c\u3057\u3066\u7d50\u679c\u3092\u683c\u7d0d\n    if (is_valid) {\n       cb(null, generatePolicy(event.authorizationToken, event.methodArn));\n    } else {\n       cb(\"Invalid Access Token\");\n    }\n  });\n};\n\n\n2. \u30c7\u30d7\u30ed\u30a4\nclaudia\u30b3\u30de\u30f3\u30c9\u3067\u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u7528\u306eLambda\u95a2\u6570\u3092AWS\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\nclaudia create --name custom-authorizer --region us-east-1 --handler authorizer.auth --config claudia-auth.json\n\n\n\n--name: AWS Lambda\u4e0a\u306e\u95a2\u6570\u540d\n\n--region: AWS\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u540d\n\n--handler: \u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u306e\u95a2\u6570\u540d\n\n--config: Claudia.js\u7528\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u540d(\u81ea\u52d5\u4f5c\u6210\u3055\u308c\u308b\u306e\u3067\u4efb\u610f)\n\n{\n  \"lambda\": {\n    \"role\": \"custom-authorizer-executor\",\n    \"name\": \"custom-authorizer\",\n    \"region\": \"us-east-1\"\n  }\n}\n\n\n2. API\u3068Lambda\u95a2\u6570\u306e\u4f5c\u6210\n\n1. API\u3068Lambda\u95a2\u6570\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\napp.js\u3068\u3044\u3046\u540d\u524d\u306b\u3057\u307e\u3059\u3002\nvar ApiBuilder = require('claudia-api-builder');\nvar api = new ApiBuilder();\n\nvar AWS = require('aws-sdk');\nvar dynamodb = new AWS.DynamoDB.DocumentClient({region: 'us-east-1'});\n\napi.registerAuthorizer('apiGatewayAuthorizer', {\n  lambdaName: 'custom-authorizer', //AWS Labmda\u4e0a\u306e\u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u306e\u540d\u524d\n  headerName: 'Authorization' //Token\u3092\u683c\u7d0d\u3059\u308bHTTP header\u306eKey\u540d\n});\n\napi.get('/news', function (req) {\n  return dynamodb.get({\n    TableName:'news',\n    Key:{ \"id\": req.headers.id }\n  }).promise().then(function(res) {\n    return res.Item;\n  });\n},{ \n  customAuthorizer: 'apiGatewayAuthorizer' \n});\n\nmodule.exports = api;\n\n\n2. \u30c7\u30d7\u30ed\u30a4\nclaudia\u30b3\u30de\u30f3\u30c9\u3067AWS\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30ebclaudia.json\u304c\u81ea\u52d5\u3067\u4f5c\u3089\u308c\u307e\u3059\u3002\nclaudia create --region us-east-1 --api-module app\n\n{\n  \"lambda\": {\n    \"role\": \"myproj-executor\",\n    \"name\": \"myproj-proj\",\n    \"region\": \"us-east-1\"\n  },\n  \"api\": {\n    \"id\": \"[PID]\",\n    \"module\": \"app\",\n    \"url\": \"[\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u30d9\u30fc\u30b9URL]\"\n  }\n}\n\n\n3. AWS\u4e0a\u306e\u8a2d\u5b9a\n\n\nAWS DynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\nnews\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\naws dynamodb create-table --table-name news --attribute-definitions AttributeName=id,AttributeType=S --key-schema AttributeName=id,KeyType=HASH --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1\n\nid\u30ad\u30fc\u3067\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306b\u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3002\naws dynamodb put-item --table-name news --item '{\"id\":{\"S\":\"id001\"}, \"content\":{\"S\":\"News content 001\"}}'\naws dynamodb put-item --table-name news --item '{\"id\":{\"S\":\"id002\"}, \"content\":{\"S\":\"News content 002\"}}'\n        :\n\n\n\nAWS Lambda\u306erole\u8a2d\u5b9a\n\nIAM > Roles > [\u4f5c\u6210\u3057\u305fRole\u540d]\nAttach Pollicy > AmazonDynamoDBFullAccess\n\n\u5f37\u3059\u304e\u308b\u306e\u3067\u5b9f\u969b\u306f\u9069\u5f53\u306aPolicy\u3092\u4f5c\u6210\n\n\n\n\n\n\n4. API\u5b9f\u884c\n\n\nPostman\u306a\u3069\u3067HTTP\u30d8\u30c3\u30c0\u306eAuthorization\u30ad\u30fc\u306bAccess Token\u3092\u3001id\u30ad\u30fc\u306b\u5b58\u5728\u3059\u308bid\u3092\u4ed8\u4e0e\u3057\u3066\u6295\u3052\u307e\u3059\u3002\nClaudia.js\u3067API\u3092\u4f5c\u6210\u3057\u305f\u969b\u306b\u306fCORS\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067ON\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u5236\u9650\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\n\u3000\u3000Controlling Cross-Origin Resource Sharing headers\n\n5. \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\nclaudia\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\nclaudia update --config claudia-auth.json\nclaudia update --config claudia.json\n\n\n\n\n\u307e\u3068\u3081\nClaudia.js\u3092\u5229\u7528\u3059\u308c\u3070\u3001\u5916\u90e8\u306e\u8a8d\u8a3c\u8a8d\u53efAPI\u3092\u7528\u3044\u305f\u30b5\u30fc\u30d0\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\u3088\u308a\u8a73\u7d30\u306a\u8a18\u4e8b\u306f\u3053\u3061\u3089\n\u4ee5\u4e0a\n[Claudia.js](https://claudiajs.com)\u306fAWS\u4e0a\u3067API Gateway\u3068AWS Lambda\u306b\u3088\u308b\u30b5\u30fc\u30d0\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u308bNode.js\u88fd\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\n\n\u3053\u306e\u969b\u3001Facebook, Google, Twitter\u306e\u7528\u306a\u5916\u90e8\u306e\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u304b\u3089\u53d6\u5f97\u3057\u305fOAuth Access Token\u3092API Gateway\u306e\u30ec\u30a4\u30e4\u30fc\u3067\u691c\u8a3c\u3057\u3066\u554f\u984c\u306a\u3051\u308c\u3070\u88cf\u306eLambda\u306b\u6295\u3052\u305f\u3044\u30b1\u30fc\u30b9\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nClaudia.js\u3092\u4f7f\u3048\u3070\u3053\u306e\u3088\u3046\u306a\u51e6\u7406\u304c10\u5206\u3082\u3042\u308c\u3070\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\n[\u95a2\u9023\u8a18\u4e8b]\n\n- [API Gateway\u3068Lambda\u3067OAuth](http://qiita.com/sl2/items/ff1d57a066d08d5b2f93)\n  - Claudia.js\u3092\u4f7f\u308f\u306a\u3044\u65b9\u6cd5\u3067\u9762\u5012\u306a\u306e\u3067\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u305b\u3093\u3002\n\n- [Swift3\u3067Facebook SDK\u3092\u4f7f\u3046](http://qiita.com/sl2/items/3f1d83b20c3072ba537f) \n  - \u3053\u306e\u3088\u3046\u306b\u53d6\u5f97\u3057\u305fFacebook\u306eAccess Token\u3092\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3044\u5834\u5408\u3067\u3059\u3002\n\n## \u6e96\u5099\n\n#### 1. Claudia.js\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```sh\nnpm install -g claudia\n```\n\t\n####  2. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\t\n```sh\nmkdir [Proj Name] && cd [Proj Name]\nnpm init\nnpm install --save claudia-api-builder\nnpm install --save aws-sdk\nnpm install --save axios\n```\n\n## \u5b9f\u88c5\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30a2\u30d7\u30ea\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\u30a8\u30e9\u30fc\u51e6\u7406\u3084\u8a73\u7d30\u306f\u5272\u611b\u3057\u307e\u3059\u3002\u307e\u305f\u3001Hello World\u7684\u306a\u3082\u306e\u306fCloudia.js\u306e[Tutorial](https://claudiajs.com/tutorials/index.html)\u3092\u307f\u305f\u65b9\u304c\u624b\u3063\u53d6\u308a\u65e9\u3044\u3067\u3059\u3002\n\n1. \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30a2\u30d7\u30ea\u304cSNS\u306e\u8a8d\u8a3c\u8a8d\u53efAPI\u304b\u3089OAuth\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3059\u308b\u3002(\u7565)\n2. \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u30a2\u30d7\u30ea\u304c\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u4ed8\u4e0e\u3057\u3066AWS API Gateway\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\u3002(\u7565)\n3. AWS API Gateway\u304cSNS\u306e\u8a8d\u8a3c\u8a8d\u53efAPI\u3092\u7528\u3044\u3066\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u691c\u8a3c\u3059\u308b\u3002\n4. AWS API Gateway\u304cFaaS\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3002\n5. AWS Lambda\u306e\u95a2\u6570\u304cAWS DynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u30d5\u30ed\u30f3\u30c8\u306b\u8fd4\u3059\u3002\n\n### 1. \u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u306e\u4f5c\u6210\n\n#### 1. \u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u7528\u306eLambda\u95a2\u6570\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n`authorizer.js`\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002Access Token\u691c\u8a3cAPI\u3092\u547c\u3073\u51fa\u3057\u3066\u6709\u52b9\u306a\u5834\u5408\u306bAPI\u5b9f\u884c\u6a29\u9650\u3092\u4ed8\u4e0e\u3057\u3066\u3044\u307e\u3059\u3002\n\n```javascript\nvar axios = require('axios');\n\t\n//API\u5b9f\u884c\u30dd\u30ea\u30b7\u30fc\u306e\u751f\u6210\nvar generatePolicy = function(authToken, methodArn, context) {\n\tvar awsInfo = methodArn.split(':');\n\tvar region = awsInfo[3];\n\tvar accountId = awsInfo[4];\n\t\n\tvar apiInfo = awsInfo[5].split('/');\n\tvar restApiId = apiInfo[0];\n\tvar stage = apiInfo[1];\n\tvar method = apiInfo[2];\n\t\n\t//\u30a2\u30af\u30bb\u30b9\u3055\u305b\u305f\u3044\u30ea\u30bd\u30fc\u30b9\n\tvar resource = 'arn:aws:execute-api:' + region + ':' + accountId + ':' + restApiId + '/' + stage  +'/' + method + '/*';\n\t\n\treturn {\n\t\t'principalId': authToken.split('-')[0],\n\t\t'policyDocument': {\n\t\t\t'Version': '2012-10-17',\n\t\t\t'Statement': [{\n\t\t\t\t'Effect': 'Allow',\n\t\t\t\t'Action': ['execute-api:Invoke'],\n\t\t\t\t'Resource': [resource]\n\t\t\t}]\n\t\t}\n\t};\n};\n\t\nvar url = \"Access Token\u306eValidate\u3092\u884c\u3046API\u306eURL\";\n\t\n//Token\u306e\u691c\u8a3c\u3068\u30dd\u30ea\u30b7\u30fc\u306e\u4ed8\u4e0e\nexports.auth = function auth(event, context, cb) {\n  axios.get(url, {\n    params: {\n      access_token: event.authorizationToken //HTTP header\u306eAuthorization\u30ad\u30fc\u306e\u5024\n    }\n  }).then(function (res) {\n    var is_valid = true|false; //Token\u306e\u6709\u52b9\u6027\u3092\u691c\u8a3c\u3057\u3066\u7d50\u679c\u3092\u683c\u7d0d\n    if (is_valid) {\n\t   cb(null, generatePolicy(event.authorizationToken, event.methodArn));\n    } else {\n\t   cb(\"Invalid Access Token\");\n    }\n  });\n};\n```\n\n#### 2. \u30c7\u30d7\u30ed\u30a4\n\n`claudia`\u30b3\u30de\u30f3\u30c9\u3067\u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u7528\u306eLambda\u95a2\u6570\u3092AWS\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\n\n```\nclaudia create --name custom-authorizer --region us-east-1 --handler authorizer.auth --config claudia-auth.json\n```\n\n- `--name`: AWS Lambda\u4e0a\u306e\u95a2\u6570\u540d\n- `--region`: AWS\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u540d\n- `--handler`: \u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u306e\u95a2\u6570\u540d\n- `--config`: Claudia.js\u7528\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u540d(\u81ea\u52d5\u4f5c\u6210\u3055\u308c\u308b\u306e\u3067\u4efb\u610f)\n\n```js\n{\n  \"lambda\": {\n    \"role\": \"custom-authorizer-executor\",\n    \"name\": \"custom-authorizer\",\n    \"region\": \"us-east-1\"\n  }\n}\n```\n\n\n### 2. API\u3068Lambda\u95a2\u6570\u306e\u4f5c\u6210\n\n#### 1. API\u3068Lambda\u95a2\u6570\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n`app.js`\u3068\u3044\u3046\u540d\u524d\u306b\u3057\u307e\u3059\u3002\n\t\n```javascript\nvar ApiBuilder = require('claudia-api-builder');\nvar api = new ApiBuilder();\n    \nvar AWS = require('aws-sdk');\nvar dynamodb = new AWS.DynamoDB.DocumentClient({region: 'us-east-1'});\n    \napi.registerAuthorizer('apiGatewayAuthorizer', {\n  lambdaName: 'custom-authorizer', //AWS Labmda\u4e0a\u306e\u30ab\u30b9\u30bf\u30e0\u8a8d\u8a3c\u306e\u540d\u524d\n  headerName: 'Authorization' //Token\u3092\u683c\u7d0d\u3059\u308bHTTP header\u306eKey\u540d\n});\n    \napi.get('/news', function (req) {\n  return dynamodb.get({\n    TableName:'news',\n    Key:{ \"id\": req.headers.id }\n  }).promise().then(function(res) {\n    return res.Item;\n  });\n},{ \n  customAuthorizer: 'apiGatewayAuthorizer' \n});\n    \nmodule.exports = api;\n```\n\n#### 2. \u30c7\u30d7\u30ed\u30a4\n\n`claudia`\u30b3\u30de\u30f3\u30c9\u3067AWS\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3059\u3002\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb`claudia.json`\u304c\u81ea\u52d5\u3067\u4f5c\u3089\u308c\u307e\u3059\u3002\n\n```\nclaudia create --region us-east-1 --api-module app\n```\n\n```\n{\n  \"lambda\": {\n    \"role\": \"myproj-executor\",\n    \"name\": \"myproj-proj\",\n    \"region\": \"us-east-1\"\n  },\n  \"api\": {\n    \"id\": \"[PID]\",\n    \"module\": \"app\",\n    \"url\": \"[\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u30d9\u30fc\u30b9URL]\"\n  }\n}\n```\n\n\n### 3. AWS\u4e0a\u306e\u8a2d\u5b9a\n\n1. AWS DynamoDB\u306e\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\n\n\t`news`\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308b\n\n\t\taws dynamodb create-table --table-name news --attribute-definitions AttributeName=id,AttributeType=S --key-schema AttributeName=id,KeyType=HASH --provisioned-throughput ReadCapacityUnits=1,WriteCapacityUnits=1\n\n\t`id`\u30ad\u30fc\u3067\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306b\u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3002\n\n\t```sh\n\taws dynamodb put-item --table-name news --item '{\"id\":{\"S\":\"id001\"}, \"content\":{\"S\":\"News content 001\"}}'\n\taws dynamodb put-item --table-name news --item '{\"id\":{\"S\":\"id002\"}, \"content\":{\"S\":\"News content 002\"}}'\n\t\t\t:\n\t```\n\t\n2. AWS Lambda\u306erole\u8a2d\u5b9a\n\n\t1. IAM > Roles > [\u4f5c\u6210\u3057\u305fRole\u540d]\n\t2. Attach Pollicy > `AmazonDynamoDBFullAccess`\n\t\t- \u5f37\u3059\u304e\u308b\u306e\u3067\u5b9f\u969b\u306f\u9069\u5f53\u306aPolicy\u3092\u4f5c\u6210\n\n\n### 4. API\u5b9f\u884c\n\n1. [Postman](https://www.getpostman.com)\u306a\u3069\u3067HTTP\u30d8\u30c3\u30c0\u306e`Authorization`\u30ad\u30fc\u306bAccess Token\u3092\u3001`id`\u30ad\u30fc\u306b\u5b58\u5728\u3059\u308bid\u3092\u4ed8\u4e0e\u3057\u3066\u6295\u3052\u307e\u3059\u3002\n\n\tClaudia.js\u3067API\u3092\u4f5c\u6210\u3057\u305f\u969b\u306b\u306fCORS\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067ON\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u5236\u9650\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u3000\u3000[Controlling Cross-Origin Resource Sharing headers](https://github.com/claudiajs/claudia-api-builder/blob/master/docs/api.md#controlling-cross-origin-resource-sharing-headers)\n\n### 5. \u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\n\n0. \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n1. `claudia`\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n   \n\t```\n\tclaudia update --config claudia-auth.json\n\tclaudia update --config claudia.json\n\t```\n\n## \u307e\u3068\u3081\n\nClaudia.js\u3092\u5229\u7528\u3059\u308c\u3070\u3001\u5916\u90e8\u306e\u8a8d\u8a3c\u8a8d\u53efAPI\u3092\u7528\u3044\u305f\u30b5\u30fc\u30d0\u30ec\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\n\n\u3088\u308a\u8a73\u7d30\u306a\u8a18\u4e8b\u306f[\u3053\u3061\u3089](http://slowquery.hatenablog.com/entry/2016/12/31/140956)\n\n\u4ee5\u4e0a\n\n"}