{"context": " More than 1 year has passed since last update.\u554f\u984c\u5185\u5bb9\u7b49\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3002\nhttp://qiita.com/Nabetani/items/cbc3af152ee3f50a822f\nruby\u306e\u5b9f\u88c5\u3092\u53c2\u8003\u306bpython\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\n\u30e9\u30f3\u30af\u3092\u8868\u3059\u6587\u5b57\u5217\u304c10\u4ee5\u5916\u306f1\u6587\u5b57\u306a\u306e\u3067\u3001\u307e\u305a\u306f10\u30921\u6587\u5b57\u306e'T'\u306b\u7f6e\u304d\u63db\u3048\u30011\u6587\u5b57\u7f6e\u304d\u306b\u4e26\u3093\u3060\u30e9\u30f3\u30af\u6587\u5b57\u306e\u307f\u3092\u53d6\u308a\u51fa\u3057\u3066rank\u3068\u3057\u307e\u3059\u3002\n\u6b21\u306b\u3001set\u95a2\u6570\u3067\u30e9\u30f3\u30af\u6587\u5b57\u306e\u7a2e\u985e\u3092\u62bd\u51fa\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u30e9\u30f3\u30af\u304c\u4f55\u500b\u3042\u308b\u304b\u3092count\u3067\u8abf\u3079\u305fpair\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001pair\u3092\u30bd\u30fc\u30c8\u3057\u3066\u6570\u5024\u5316\u3057\u3001\u3042\u3089\u304b\u3058\u3081\u4f5c\u3063\u3066\u304a\u3044\u305f\u8f9e\u66f8\u3092\u5f15\u3044\u3066\u7b54\u3092\u63a2\u3057\u307e\u3059\u3002\ndef solve(text):\n    rank = text.replace('10','T')[1::2]\n    pair = [rank.count(x) for x in set(rank)]\n    key = reduce(lambda a,b: a*10+b, sorted(pair))\n    return {14:'4K', 23:'FH', 113:'3K', 122:'2P', 1112:'1P', 11111:'--'}[key]\n\ndef test(text, answer):\n    result = solve(text)\n    print 'OK' if result == answer else 'NG', result, answer, text\n\nif __name__ == '__main__':\n    test('D3C3C10D10S3', 'FH')\n    test('S8D10HJS10CJ', '2P')\n    test('DASAD10CAHA', '4K')\n    test('S10HJDJCJSJ', '4K')\n    test('S10HAD10DAC10', 'FH')\n    test('HJDJC3SJS3', 'FH')\n    test('S3S4H3D3DA', '3K')\n    test('S2HADKCKSK', '3K')\n    test('SASJDACJS10', '2P')\n    test('S2S10H10HKD2', '2P')\n    test('CKH10D10H3HJ', '1P')\n    test('C3D3S10SKS2', '1P')\n    test('S3SJDAC10SQ', '--')\n    test('C3C9SAS10D2', '--')\n\n\u554f\u984c\u5185\u5bb9\u7b49\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3002\nhttp://qiita.com/Nabetani/items/cbc3af152ee3f50a822f\n\nruby\u306e\u5b9f\u88c5\u3092\u53c2\u8003\u306bpython\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\n\u30e9\u30f3\u30af\u3092\u8868\u3059\u6587\u5b57\u5217\u304c10\u4ee5\u5916\u306f1\u6587\u5b57\u306a\u306e\u3067\u3001\u307e\u305a\u306f10\u30921\u6587\u5b57\u306e'T'\u306b\u7f6e\u304d\u63db\u3048\u30011\u6587\u5b57\u7f6e\u304d\u306b\u4e26\u3093\u3060\u30e9\u30f3\u30af\u6587\u5b57\u306e\u307f\u3092\u53d6\u308a\u51fa\u3057\u3066rank\u3068\u3057\u307e\u3059\u3002\n\u6b21\u306b\u3001set\u95a2\u6570\u3067\u30e9\u30f3\u30af\u6587\u5b57\u306e\u7a2e\u985e\u3092\u62bd\u51fa\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u30e9\u30f3\u30af\u304c\u4f55\u500b\u3042\u308b\u304b\u3092count\u3067\u8abf\u3079\u305fpair\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001pair\u3092\u30bd\u30fc\u30c8\u3057\u3066\u6570\u5024\u5316\u3057\u3001\u3042\u3089\u304b\u3058\u3081\u4f5c\u3063\u3066\u304a\u3044\u305f\u8f9e\u66f8\u3092\u5f15\u3044\u3066\u7b54\u3092\u63a2\u3057\u307e\u3059\u3002\n\n```py\ndef solve(text):\n    rank = text.replace('10','T')[1::2]\n    pair = [rank.count(x) for x in set(rank)]\n    key = reduce(lambda a,b: a*10+b, sorted(pair))\n    return {14:'4K', 23:'FH', 113:'3K', 122:'2P', 1112:'1P', 11111:'--'}[key]\n\ndef test(text, answer):\n    result = solve(text)\n    print 'OK' if result == answer else 'NG', result, answer, text\n\nif __name__ == '__main__':\n    test('D3C3C10D10S3', 'FH')\n    test('S8D10HJS10CJ', '2P')\n    test('DASAD10CAHA', '4K')\n    test('S10HJDJCJSJ', '4K')\n    test('S10HAD10DAC10', 'FH')\n    test('HJDJC3SJS3', 'FH')\n    test('S3S4H3D3DA', '3K')\n    test('S2HADKCKSK', '3K')\n    test('SASJDACJS10', '2P')\n    test('S2S10H10HKD2', '2P')\n    test('CKH10D10H3HJ', '1P')\n    test('C3D3S10SKS2', '1P')\n    test('S3SJDAC10SQ', '--')\n    test('C3C9SAS10D2', '--')\n```", "tags": ["Python", "\u3069\u3046\u66f8\u304f", "yhpg"]}