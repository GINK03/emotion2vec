{"context": " More than 1 year has passed since last update.\u6307\u5b9a\u3057\u305f\u753b\u50cf\u5185\u306b\u5225\u306e\u753b\u50cf\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u691c\u51fa\u3059\u308b\u95a2\u6570\u3002\n\u4e00\u81f4\u7387\u304c90%\u4ee5\u4e0a\u306a\u3089\u771f\u3092\u8fd4\u3059\n\ndetectImage\n// \u6307\u5b9a\u753b\u50cf\u304c\u9ad8\u78ba\u7387\u3067\u691c\u77e5\u3067\u304d\u3066\u3044\u308b\u304b\u3092\u691c\u51fa\nbool detectImage(IplImage *img,char* imageName){\n  double min_val, max_val;\n  CvPoint min_loc, max_loc;\n  IplImage *templateImage,*dstImage;\n  CvSize dst_size;\n\n  templateImage = cvLoadImage (imageName, CV_LOAD_IMAGE_COLOR);\n\n  dst_size = cvSize (img->width - templateImage->width + 1, img->height - templateImage->height + 1);\n\n  dstImage = cvCreateImage (dst_size, IPL_DEPTH_32F, 1);\n  cvMatchTemplate (img, templateImage, dstImage, CV_TM_CCOEFF_NORMED);\n  cvMinMaxLoc (dstImage, &min_val, &max_val, &min_loc, &max_loc, NULL);\n\n  return (max_val>0.9);\n}\n\n\n\u6307\u5b9a\u3057\u305f\u753b\u50cf\u5185\u306b\u5225\u306e\u753b\u50cf\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u691c\u51fa\u3059\u308b\u95a2\u6570\u3002\n\n\u4e00\u81f4\u7387\u304c90%\u4ee5\u4e0a\u306a\u3089\u771f\u3092\u8fd4\u3059\n\n```cpp:detectImage\n// \u6307\u5b9a\u753b\u50cf\u304c\u9ad8\u78ba\u7387\u3067\u691c\u77e5\u3067\u304d\u3066\u3044\u308b\u304b\u3092\u691c\u51fa\nbool detectImage(IplImage *img,char* imageName){\n  double min_val, max_val;\n  CvPoint min_loc, max_loc;\n  IplImage *templateImage,*dstImage;\n  CvSize dst_size;\n\n  templateImage = cvLoadImage (imageName, CV_LOAD_IMAGE_COLOR);\n\n  dst_size = cvSize (img->width - templateImage->width + 1, img->height - templateImage->height + 1);\n\n  dstImage = cvCreateImage (dst_size, IPL_DEPTH_32F, 1);\n  cvMatchTemplate (img, templateImage, dstImage, CV_TM_CCOEFF_NORMED);\n  cvMinMaxLoc (dstImage, &min_val, &max_val, &min_loc, &max_loc, NULL);\n\n  return (max_val>0.9);\n}\n```\n", "tags": ["OpenCV", "C++"]}