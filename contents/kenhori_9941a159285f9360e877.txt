{"context": "AOP\u306e\u4f7f\u7528\u4f8b\u3068\u3057\u3066\u3001\u30ed\u30b0\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u3001\u51e6\u7406\u6642\u9593\u8a08\u6e2c\u3001\u4f8b\u5916\u5bfe\u5fdc\u306a\u3069\u304c\u6709\u540d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u3001\u696d\u52d9\u30b7\u30b9\u30c6\u30e0\u3067\u4f7f\u3048\u305d\u3046\u306a\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u696d\u52d9\u30b7\u30b9\u30c6\u30e0\u3067\u4f7f\u7528\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u306b\u306f\u3001\u4f5c\u6210\u8005\u3001\u4f5c\u6210\u65e5\u6642\u3001\u66f4\u65b0\u8005\u3001\u66f4\u65b0\u65e5\u6642\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u9805\u76ee\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067\u8a2d\u5b9a\u3057\u3066\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u8a2d\u5b9a\u6f0f\u308c\u304c\u3042\u3063\u305f\u308a\u3001\u672c\u8cea\u7684\u3067\u306a\u3044\u51e6\u7406\u3092\u3044\u308d\u3044\u308d\u306a\u3068\u3053\u308d\u306b\u66f8\u304b\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u304b\u3063\u305f\u308a\u3067\u3001\u7d50\u69cb\u9762\u5012\u3067\u3059\u3002\n\u305d\u3053\u3067\u3001AOP\u3092\u4f7f\u3063\u3066\u3001\u3053\u308c\u3089\u306e\u9805\u76ee\u3092\u8a2d\u5b9a\u3057\u3066\u307f\u307e\u3059\u3002\n\u56f3\u3067\u793a\u3059\u3068\u3001\uff08\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u88c5\u3057\u305f@Service\u30af\u30e9\u30b9\u304b\u3089\uff09Mapper\u306ecreate*\u30e1\u30bd\u30c3\u30c9\u3068update*\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u547c\u3073\u51fa\u3057\u3092Join Point\u3068\u3057\u3001Mapper\u306e\u5f15\u6570\u306e\u30e2\u30c7\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3001\u4f5c\u6210\u8005\u3001\u4f5c\u6210\u65e5\u6642\u3001\u66f4\u65b0\u8005\u3001\u66f4\u65b0\u65e5\u6642\u3092\u8a2d\u5b9a\u3057\u3066\u307f\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u4f5c\u6210\u8005\u3068\u66f4\u65b0\u8005\u306fSpring Security\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u5468\u308a\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306fMyBatis\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306fPostgreSQL\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u74b0\u5883\n\nSpring Framework 4.3.2\nSpring Security 4.1.3\nThymeleaf 3.0.0\nGlassFish Server Open Source Edition 4.1\nJDK 1.8\nMyBatis 3.4.1\nPostgreSQL 9.4\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/kenjihori/spring\n\n\u524d\u63d0\n\u5404\u30c6\u30fc\u30d6\u30eb\u306b\u4e0b\u8a18\u306e\u9805\u76ee\u3092\u6301\u3061\u307e\u3059\u3002\n\n\n\n\u30c7\u30fc\u30bf\u9805\u76ee\u540d\n\u30c7\u30fc\u30bf\u578b\n\u30c7\u30fc\u30bf\u9805\u76ee\u540d\uff08\u65e5\u672c\u8a9e\uff09\n\n\n\n\nCREATED_BY_ID\nVARCHAR\n\u4f5c\u6210\u8005ID\n\n\nCREATE_DATETIME\nDATETIME\n\u4f5c\u6210\u65e5\u6642\n\n\nLAST_UPDATED_BY_ID\nVARCHAR\n\u66f4\u65b0\u8005ID\n\n\nLAST_UPDATE_DATETIME\nDATETIME\n\u66f4\u65b0\u65e5\u6642\n\n\n\n\u305d\u3057\u3066\u3001\u30c6\u30fc\u30d6\u30eb\u3068\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u306b\u3082\u4ee5\u4e0b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3061\u307e\u3059\u3002\n\n\n\n\u9805\u76ee\u540d\n\u30c7\u30fc\u30bf\u578b\n\n\n\n\ncreatedById\nString\n\n\ncreatedTimestamp\nDate\n\n\nupdatedById\nString\n\n\nupdatedTimestamp\nDate\n\n\n\nMapper\u306e\u30eb\u30fc\u30eb\u306f\u4ee5\u4e0b\u3068\u3057\u307e\u3059\u3002\n\nMapper\u306e\u30af\u30e9\u30b9\u540d \u2192 *Mapper\ninsert\u306e\u30e1\u30bd\u30c3\u30c9\u540d \u2192 create*\nupdate\u306e\u30e1\u30bd\u30c3\u30c9\u540d \u2192 update*\ninsert\u3001update\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306f\u30c6\u30fc\u30d6\u30eb\u3068\u540c\u3058\u9805\u76ee\u3092\u4fdd\u6301\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\n\nSpring Security\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\nSpring Security\u306b\u3088\u308b\u8a8d\u8a3c\u306e\u8a73\u7d30\u306f\u3001\u4eca\u56de\u306e\u30c6\u30fc\u30de\u304b\u3089\u96e2\u308c\u308b\u306e\u3067\u3001\u6982\u7565\u306b\u3068\u3069\u3081\u3066\u304a\u304d\u307e\u3059\u3002\nAuthenticationManager\u3068\u3057\u3066\u767b\u9332\u3057\u305fLoginComponent\u3067\u306f\u3001\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3067\u5165\u529b\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u540d\uff08username)\u3092\u5143\u306b\u3001MyAppUserService\uff08@Service)\u30af\u30e9\u30b9\u7d4c\u7531\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001Spring\u306eUserDetails\u3092\u62e1\u5f35\u3057\u305fLoginUserInfo\u306b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u683c\u7d0d\u3057\u3066\u8fd4\u5374\u3057\u307e\u3059\u3002\n\u3053\u306eLoginUserInfo\u3092\u5f8c\u307b\u3069\u8a8d\u8a3c\u60c5\u5831\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\n\nLoginComponent.java\n@Service\npublic class LoginComponent implements UserDetailsService {\n\n    @Autowired\n    private MyAppUserService myAppUserService;\n\n    @Transactional(readOnly = true)\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n\n        MyAppUser myAppUser = myAppUserService.findMyAppUser(username);\n        if (myAppUser == null) {\n            throw new UsernameNotFoundException(\"MyAppUser ID \" + username + \" Not Found\");\n        }\n        return new LoginUserInfo(myAppUser, AuthorityUtils.NO_AUTHORITIES);\n\n    }\n}\n\n\n\nAspect\u306e\u4f5c\u6210\n\u305d\u308c\u3067\u306f\u65e9\u901f\u3001Aspect\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nMapperAspect.java\n@Aspect\n@Component\npublic class MapperAspect {\n\n    @Before(\"execution(* com.mycompany.myapp.domain.mapper.*Mapper.create*(..)) || \" + \n            \"execution(* com.mycompany.myapp.domain.mapper.*Mapper.update*(..))\")\n    public void setCommonProperty(JoinPoint jp) throws Throwable {\n\n        // Mapper\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u53d6\u5f97\n        MethodSignature signature = (MethodSignature) jp.getSignature();\n        Method method = signature.getMethod();\n        String methodName = method.getName();\n\n        // Spring Security\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u53d6\u5f97\n        LoginUserInfo loginUserInfo = null;\n        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n        if(authentication.getPrincipal() instanceof LoginUserInfo) {\n            loginUserInfo = LoginUserInfo.class.cast(authentication.getPrincipal());\n        }\n\n        // \u73fe\u5728\u65e5\u6642\u306e\u53d6\u5f97\n        Date now = new Date();\n\n        // Mapper\u306e\u7b2c\u4e00\u5f15\u6570\uff08\u30e2\u30c7\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\u3092\u53d6\u5f97\n        Object[] args = jp.getArgs();\n        Object dto = args[0];\n\n        // create*\u30e1\u30bd\u30c3\u30c9\u306f\u4f5c\u6210\u8005\u30fb\u4f5c\u6210\u65e5\u6642\u30fb\u66f4\u65b0\u8005\u30fb\u66f4\u65b0\u65e5\u6642\u3092\u30bb\u30c3\u30c8\n        if(methodName.startsWith(\"create\")) {\n            setCreatedProperty(loginUserInfo, now, dto);\n            setUpdatedProperty(loginUserInfo, now, dto);\n        // update*\u30e1\u30bd\u30c3\u30c9\u306f\u66f4\u65b0\u8005\u30fb\u66f4\u65b0\u65e5\u6642\u3092\u30bb\u30c3\u30c8\n        } else if(methodName.startsWith(\"update\")) {\n            setUpdatedProperty(loginUserInfo, now, dto);\n        }\n\n    }\n\n    // \u4f5c\u6210\u8005ID\u3068\u4f5c\u6210\u65e5\u6642\u3092\u30bb\u30c3\u30c8\n    private void setCreatedProperty(LoginUserInfo loginUserInfo, Date now, Object dto) throws Throwable {\n\n        // Mapper\u306e\u5f15\u6570\u306bsetCreatedById\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u5834\u5408\u3001\u8a8d\u8a3c\u60c5\u5831\u3092\u30bb\u30c3\u30c8\n        Method setCreatedById = ReflectionUtils.findMethod(dto.getClass(), \"setCreatedById\", String.class);\n        if(setCreatedById != null) {\n            setCreatedById.invoke(dto, loginUserInfo.getId());\n        }\n\n        // Mapper\u306e\u5f15\u6570\u306bsetCreatedTimestamp\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u5834\u5408\u3001\u73fe\u5728\u65e5\u6642\u3092\u30bb\u30c3\u30c8\n        Method setCreatedTimestamp  = ReflectionUtils.findMethod(dto.getClass(), \"setCreatedTimestamp\", Date.class);\n        if(setCreatedTimestamp != null) {\n            setCreatedTimestamp.invoke(dto, now);\n        }\n\n    }\n\n    // \u66f4\u65b0\u8005ID\u3068\u66f4\u65b0\u65e5\u6642\u3092\u30bb\u30c3\u30c8\n    private void setUpdatedProperty(LoginUserInfo loginUserInfo, Date now, Object dto) throws Throwable {\n\n        // Mapper\u306e\u5f15\u6570\u306bsetUpdatedById\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u5834\u5408\u3001\u8a8d\u8a3c\u60c5\u5831\u3092\u30bb\u30c3\u30c8\n        Method setUpdatedById  = ReflectionUtils.findMethod(dto.getClass(), \"setUpdatedById\", String.class);\n        if(setUpdatedById != null) {\n            setUpdatedById.invoke(dto, loginUserInfo.getId());\n        }\n\n        // Mapper\u306e\u5f15\u6570\u306bsetUpdatedTimestamp\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u5834\u5408\u3001\u73fe\u5728\u65e5\u6642\u3092\u30bb\u30c3\u30c8\n        Method setUpdatedTimestamp  = ReflectionUtils.findMethod(dto.getClass(), \"setUpdatedTimestamp\", Date.class);\n        if(setUpdatedTimestamp != null) {\n            setUpdatedTimestamp.invoke(dto, now);\n        }\n\n    }\n\n}\n\n\n\u307e\u305a\u3001@Before\u306e\u5f15\u6570\u3067\u3001Join Point\u3092Pointcut\u5f0f\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u5bfe\u8c61\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3001Mapper\u306e\u30af\u30e9\u30b9\u540d\uff08*Mapper\uff09\u3001\u30e1\u30bd\u30c3\u30c9\u540d\uff08create*\u3082\u3057\u304f\u306fupdate*\uff09\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n@Before(\"execution(* com.mycompany.myapp.domain.mapper.*Mapper.create*(..)) || \" + \n        \"execution(* com.mycompany.myapp.domain.mapper.*Mapper.update*(..))\")\n\nSpring Security\u306e\u8a8d\u8a3c\u60c5\u5831\u306f\u3001SecurityContextHolder\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\nLoginUserInfo loginUserInfo = null;\nAuthentication authentication = SecurityContextHolder.getContext().getAuthentication();\nif(authentication.getPrincipal() instanceof LoginUserInfo) {\n    loginUserInfo = LoginUserInfo.class.cast(authentication.getPrincipal());\n}\n\n\u305d\u3057\u3066\u3001Mapper\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u306b\u5fdc\u3058\u3066\u3001create\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u306f\u4f5c\u6210\u8005\u30fb\u4f5c\u6210\u65e5\u6642\u3092\u3001update\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u306f\u4f5c\u6210\u8005\u30fb\u4f5c\u6210\u65e5\u6642\u30fb\u66f4\u65b0\u8005\u30fb\u66f4\u65b0\u65e5\u6642\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u30e2\u30c7\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u305f\u3081\u3001Spring\u306eReflectionUtils\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u4f5c\u6210\u8005ID\u306e\u8a2d\u5b9a\u4f8b\nMethod setCreatedById = ReflectionUtils.findMethod(dto.getClass(), \"setCreatedById\", String.class);\nif(setCreatedById != null) {\n    setCreatedById.invoke(dto, loginUserInfo.getId());\n}\n\n\n\u753b\u9762\u304b\u3089Mapper\u307e\u3067\u306e\u6d41\u308c\nAspect\u304c\u3067\u304d\u305f\u306e\u3067\u3001ID\u3068\u540d\u79f0\u3092\u6301\u3064\u5546\u54c1\u30c6\u30fc\u30d6\u30eb\u306e\u65b0\u898f\u4f5c\u6210\u3068\u66f4\u65b0\u3092\u3084\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u767b\u9332\u753b\u9762\u306e\u30a4\u30e1\u30fc\u30b8\n\n\u66f4\u65b0\u753b\u9762\u306e\u30a4\u30e1\u30fc\u30b8\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u767b\u9332\u51e6\u7406\uff08create\u30e1\u30bd\u30c3\u30c9\uff09\u3067\u306f\u3001\u30d5\u30a9\u30fc\u30e0\u306e\u5185\u5bb9\u3092\u30e2\u30c7\u30eb\u306b\u683c\u7d0d\u3057\u3001\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\u66f4\u65b0\u51e6\u7406\uff08update\u30e1\u30bd\u30c3\u30c9\uff09\u3067\u306f\u3001\u66f4\u65b0\u753b\u9762\u8868\u793a\u6642\uff08show\u30e1\u30bd\u30c3\u30c9\uff09\u306bsession\u306b\u683c\u7d0d\u3057\u305f\u30e2\u30c7\u30eb\u306b\u5bfe\u3057\u3066\u3001\u30d5\u30a9\u30fc\u30e0\u306e\u5185\u5bb9\u3067\u4e0a\u66f8\u304d\u3057\u3001\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u306b\u6e21\u3057\u307e\u3059\u3002\n@Controller\npublic class ItemController {\n    // \u7701\u7565\n    @RequestMapping(value = \"item\", method = RequestMethod.POST)\n    public String create(@ValidatedItemForm form, BindingResult bindingResult, Model model) {\n        // \u7701\u7565\n        // \u30d5\u30a9\u30fc\u30e0\u304b\u3089\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\n        Item item = new Item();\n        item.setId(form.getItemCode());;\n        item.setName(form.getItemName());\n        // \u5546\u54c1\u3092\u767b\u9332\n        itemService.createItem(item);\n        // \u5b8c\u4e86\u753b\u9762\u306b\u9077\u79fb\n        model.addAttribute(\"itemForm\", form);\n        return \"itemComplete\";\n    }\n\n    @RequestMapping(value = \"item/{itemCode}\", method = RequestMethod.GET)\n    public String show(HttpSession session, @PathVariable(\"itemCode\") String itemCode, ItemForm form, Model model) {\n        // \u5546\u54c1\u3092\u53d6\u5f97\n        Item item = itemService.findItem(itemCode);\n        // \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u683c\u7d0d\n        session.setAttribute(\"sessioitem\", item);\n        // \u66f4\u65b0\u753b\u9762\u306b\u9077\u79fb\n        model.addAttribute(\"item\", item);\n        return \"itemUpdate\";\n    }\n\n    @RequestMapping(value = \"item/{itemCode}\", method = RequestMethod.POST)\n    public String update(HttpSession session, @Validated ItemForm form, BindingResult bindingResult, Model model) {\n        // \u7701\u7565\n        // \u66f4\u65b0\u753b\u9762\u8868\u793a\u6642\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u683c\u7d0d\u3057\u305f\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066\u3001\u30d5\u30a9\u30fc\u30e0\u306e\u5185\u5bb9\u3067\u66f4\u65b0\n        Item item = (Item)session.getAttribute(\"sessioitem\");\n        item.setName(form.getItemName());\n        // \u5546\u54c1\u3092\u66f4\u65b0\n        itemService.updateItem(item);\n        // \u5b8c\u4e86\u753b\u9762\u306b\u9077\u79fb\n        model.addAttribute(\"itemForm\", form);\n        return \"itemComplete\";\n    }\n}\n\n\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u306fMapper\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3059\u3002\n@Service\npublic class ItemService {\n\n    @Autowired\n    ItemMapper itemMapper;\n\n    public void createItem(Item item) {\n        itemMapper.createItem(item);\n    }\n\n    public void updateItem(Item item) {\n        itemMapper.updateItem(item);\n    }\n\n}\n\nMapper\u306f\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u3060\u3051\u3067\u3001SQL\u306f\u30de\u30c3\u30d4\u30f3\u30b0\u30d5\u30a1\u30a4\u30eb\u306b\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\npublic interface ItemMapper {\n\n    void createItem(Item item);\n\n    void updateItem(Item item);\n\n}\n\n<insert id=\"createItem\" parameterType=\"Item\">\nINSERT INTO item (\n    id,\n    name,\n    created_by_id,\n    created_timestamp,\n    updated_by_id,\n    updated_timestamp\n) VALUES (\n    #{id},\n    #{name},\n    #{createdById},\n    #{createdTimestamp},\n    #{updatedById},\n    #{updatedTimestamp}\n)\n</insert>\n<update id=\"updateItem\" parameterType=\"Item\">\nUPDATE item SET \n    name = #{name},\n    updated_by_id = #{updatedById},\n    updated_timestamp = #{updatedTimestamp}\nWHERE\n    id = #{id}\n</update>\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\u305d\u308c\u3067\u306f\u3001\u5b9f\u969b\u306b\u767b\u9332\u51e6\u7406\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\u30e6\u30fc\u30b6\u30fc\u300c11111\u300d\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u3001\u5546\u54c1\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n\n\n\u767b\u9332\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u898b\u3066\u307f\u308b\u3068\u3001\n\n\u78ba\u304b\u306b\u4f5c\u6210\u8005\u30fb\u4f5c\u6210\u65e5\u6642\u30fb\u66f4\u65b0\u8005\u30fb\u66f4\u65b0\u65e5\u6642\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u7d9a\u3044\u3066\u3001\u66f4\u65b0\u51e6\u7406\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\u30e6\u30fc\u30b6\u30fc\u3092\u5909\u3048\u3066\u3001\u300c22222\u300d\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u3001\u5148\u307b\u3069\u767b\u9332\u3057\u305f\u5546\u54c1\u540d\u3092\u5909\u66f4\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n\n\u3053\u3061\u3089\u3082\u3001\u30c7\u30fc\u30bf\u3092\u898b\u3066\u307f\u308b\u3068\u3001\n\n\u66f4\u65b0\u8005\u3068\u66f4\u65b0\u65e5\u6642\u304c\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u3055\u3044\u3054\u306b\nAOP\u3092Spring Framework\u3067\u4f7f\u7528\u3059\u308b\u3068\u3001\u697d\u89b3\u30ed\u30c3\u30af\u3001\u6a29\u9650\u30c1\u30a7\u30c3\u30af\uff08\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u3068\u767b\u9332\u30c7\u30fc\u30bf\u306e\u30c1\u30a7\u30c3\u30af\u306a\u3069\uff09\u306a\u3069\u3044\u308d\u3044\u308d\u3068\u5fdc\u7528\u304c\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\u4ed6\u306e\u4f8b\u3082\u4eca\u5f8c\u6295\u7a3f\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nAOP\u306e\u4f7f\u7528\u4f8b\u3068\u3057\u3066\u3001\u30ed\u30b0\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3001\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u3001\u51e6\u7406\u6642\u9593\u8a08\u6e2c\u3001\u4f8b\u5916\u5bfe\u5fdc\u306a\u3069\u304c\u6709\u540d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u3001\u696d\u52d9\u30b7\u30b9\u30c6\u30e0\u3067\u4f7f\u3048\u305d\u3046\u306a\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u696d\u52d9\u30b7\u30b9\u30c6\u30e0\u3067\u4f7f\u7528\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u306b\u306f\u3001\u4f5c\u6210\u8005\u3001\u4f5c\u6210\u65e5\u6642\u3001\u66f4\u65b0\u8005\u3001\u66f4\u65b0\u65e5\u6642\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u308c\u3089\u306e\u9805\u76ee\u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067\u8a2d\u5b9a\u3057\u3066\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u8a2d\u5b9a\u6f0f\u308c\u304c\u3042\u3063\u305f\u308a\u3001\u672c\u8cea\u7684\u3067\u306a\u3044\u51e6\u7406\u3092\u3044\u308d\u3044\u308d\u306a\u3068\u3053\u308d\u306b\u66f8\u304b\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u304b\u3063\u305f\u308a\u3067\u3001\u7d50\u69cb\u9762\u5012\u3067\u3059\u3002\n\n\u305d\u3053\u3067\u3001AOP\u3092\u4f7f\u3063\u3066\u3001\u3053\u308c\u3089\u306e\u9805\u76ee\u3092\u8a2d\u5b9a\u3057\u3066\u307f\u307e\u3059\u3002\n\u56f3\u3067\u793a\u3059\u3068\u3001\uff08\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u3092\u5b9f\u88c5\u3057\u305f@Service\u30af\u30e9\u30b9\u304b\u3089\uff09Mapper\u306ecreate\\*\u30e1\u30bd\u30c3\u30c9\u3068update\\*\u30e1\u30bd\u30c3\u30c9\u3078\u306e\u547c\u3073\u51fa\u3057\u3092Join Point\u3068\u3057\u3001Mapper\u306e\u5f15\u6570\u306e\u30e2\u30c7\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3001\u4f5c\u6210\u8005\u3001\u4f5c\u6210\u65e5\u6642\u3001\u66f4\u65b0\u8005\u3001\u66f4\u65b0\u65e5\u6642\u3092\u8a2d\u5b9a\u3057\u3066\u307f\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n![aspect.png](https://qiita-image-store.s3.amazonaws.com/0/142151/9fdd528e-b5c4-a0b6-33ef-da049b734be6.png)\n\n\n\u4f5c\u6210\u8005\u3068\u66f4\u65b0\u8005\u306fSpring Security\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u5468\u308a\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306fMyBatis\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306fPostgreSQL\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n# \u74b0\u5883\n\n- Spring Framework 4.3.2\n- Spring Security 4.1.3\n- Thymeleaf 3.0.0\n- GlassFish Server Open Source Edition 4.1\n- JDK 1.8\n- MyBatis 3.4.1\n- PostgreSQL 9.4\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/kenjihori/spring\n\n\n# \u524d\u63d0\n\n\u5404\u30c6\u30fc\u30d6\u30eb\u306b\u4e0b\u8a18\u306e\u9805\u76ee\u3092\u6301\u3061\u307e\u3059\u3002\n\n| \u30c7\u30fc\u30bf\u9805\u76ee\u540d          | \u30c7\u30fc\u30bf\u578b   | \u30c7\u30fc\u30bf\u9805\u76ee\u540d\uff08\u65e5\u672c\u8a9e\uff09 |\n|:----------------------|:-----------|:-----------------------|\n| CREATED_BY_ID         | VARCHAR    | \u4f5c\u6210\u8005ID               |\n| CREATE_DATETIME       | DATETIME   | \u4f5c\u6210\u65e5\u6642               |\n| LAST_UPDATED_BY_ID    | VARCHAR    | \u66f4\u65b0\u8005ID               |\n| LAST_UPDATE_DATETIME  | DATETIME   | \u66f4\u65b0\u65e5\u6642               |\n\n\u305d\u3057\u3066\u3001\u30c6\u30fc\u30d6\u30eb\u3068\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u306b\u3082\u4ee5\u4e0b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3061\u307e\u3059\u3002\n\n| \u9805\u76ee\u540d            | \u30c7\u30fc\u30bf\u578b  |\n|:------------------|:----------|\n| createdById       | String    |\n| createdTimestamp  | Date      |\n| updatedById       | String    |\n| updatedTimestamp  | Date      |\n\nMapper\u306e\u30eb\u30fc\u30eb\u306f\u4ee5\u4e0b\u3068\u3057\u307e\u3059\u3002\n\n- Mapper\u306e\u30af\u30e9\u30b9\u540d \u2192 *Mapper\n- insert\u306e\u30e1\u30bd\u30c3\u30c9\u540d \u2192 create*\n- update\u306e\u30e1\u30bd\u30c3\u30c9\u540d \u2192 update*\n- insert\u3001update\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306f\u30c6\u30fc\u30d6\u30eb\u3068\u540c\u3058\u9805\u76ee\u3092\u4fdd\u6301\u3059\u308b\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\n\nSpring Security\u3092\u4f7f\u7528\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\nSpring Security\u306b\u3088\u308b\u8a8d\u8a3c\u306e\u8a73\u7d30\u306f\u3001\u4eca\u56de\u306e\u30c6\u30fc\u30de\u304b\u3089\u96e2\u308c\u308b\u306e\u3067\u3001\u6982\u7565\u306b\u3068\u3069\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\nAuthenticationManager\u3068\u3057\u3066\u767b\u9332\u3057\u305fLoginComponent\u3067\u306f\u3001\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3067\u5165\u529b\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u540d\uff08username)\u3092\u5143\u306b\u3001MyAppUserService\uff08@Service)\u30af\u30e9\u30b9\u7d4c\u7531\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3088\u308a\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001Spring\u306eUserDetails\u3092\u62e1\u5f35\u3057\u305fLoginUserInfo\u306b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u683c\u7d0d\u3057\u3066\u8fd4\u5374\u3057\u307e\u3059\u3002\n\u3053\u306eLoginUserInfo\u3092\u5f8c\u307b\u3069\u8a8d\u8a3c\u60c5\u5831\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\n\n```java:LoginComponent.java\n@Service\npublic class LoginComponent implements UserDetailsService {\n\n    @Autowired\n    private MyAppUserService myAppUserService;\n\n    @Transactional(readOnly = true)\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n\n        MyAppUser myAppUser = myAppUserService.findMyAppUser(username);\n        if (myAppUser == null) {\n            throw new UsernameNotFoundException(\"MyAppUser ID \" + username + \" Not Found\");\n        }\n        return new LoginUserInfo(myAppUser, AuthorityUtils.NO_AUTHORITIES);\n\n    }\n}\n```\n\n\n# Aspect\u306e\u4f5c\u6210\n\n\u305d\u308c\u3067\u306f\u65e9\u901f\u3001Aspect\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```java:MapperAspect.java\n@Aspect\n@Component\npublic class MapperAspect {\n\n    @Before(\"execution(* com.mycompany.myapp.domain.mapper.*Mapper.create*(..)) || \" + \n            \"execution(* com.mycompany.myapp.domain.mapper.*Mapper.update*(..))\")\n    public void setCommonProperty(JoinPoint jp) throws Throwable {\n        \n        // Mapper\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u53d6\u5f97\n        MethodSignature signature = (MethodSignature) jp.getSignature();\n        Method method = signature.getMethod();\n        String methodName = method.getName();\n        \n        // Spring Security\u306e\u8a8d\u8a3c\u60c5\u5831\u3092\u53d6\u5f97\n        LoginUserInfo loginUserInfo = null;\n        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();\n        if(authentication.getPrincipal() instanceof LoginUserInfo) {\n            loginUserInfo = LoginUserInfo.class.cast(authentication.getPrincipal());\n        }\n        \n        // \u73fe\u5728\u65e5\u6642\u306e\u53d6\u5f97\n        Date now = new Date();\n        \n        // Mapper\u306e\u7b2c\u4e00\u5f15\u6570\uff08\u30e2\u30c7\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\u3092\u53d6\u5f97\n        Object[] args = jp.getArgs();\n        Object dto = args[0];\n        \n        // create*\u30e1\u30bd\u30c3\u30c9\u306f\u4f5c\u6210\u8005\u30fb\u4f5c\u6210\u65e5\u6642\u30fb\u66f4\u65b0\u8005\u30fb\u66f4\u65b0\u65e5\u6642\u3092\u30bb\u30c3\u30c8\n        if(methodName.startsWith(\"create\")) {\n            setCreatedProperty(loginUserInfo, now, dto);\n            setUpdatedProperty(loginUserInfo, now, dto);\n        // update*\u30e1\u30bd\u30c3\u30c9\u306f\u66f4\u65b0\u8005\u30fb\u66f4\u65b0\u65e5\u6642\u3092\u30bb\u30c3\u30c8\n        } else if(methodName.startsWith(\"update\")) {\n            setUpdatedProperty(loginUserInfo, now, dto);\n        }\n        \n    }\n    \n    // \u4f5c\u6210\u8005ID\u3068\u4f5c\u6210\u65e5\u6642\u3092\u30bb\u30c3\u30c8\n    private void setCreatedProperty(LoginUserInfo loginUserInfo, Date now, Object dto) throws Throwable {\n        \n        // Mapper\u306e\u5f15\u6570\u306bsetCreatedById\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u5834\u5408\u3001\u8a8d\u8a3c\u60c5\u5831\u3092\u30bb\u30c3\u30c8\n        Method setCreatedById = ReflectionUtils.findMethod(dto.getClass(), \"setCreatedById\", String.class);\n        if(setCreatedById != null) {\n            setCreatedById.invoke(dto, loginUserInfo.getId());\n        }\n        \n        // Mapper\u306e\u5f15\u6570\u306bsetCreatedTimestamp\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u5834\u5408\u3001\u73fe\u5728\u65e5\u6642\u3092\u30bb\u30c3\u30c8\n        Method setCreatedTimestamp  = ReflectionUtils.findMethod(dto.getClass(), \"setCreatedTimestamp\", Date.class);\n        if(setCreatedTimestamp != null) {\n            setCreatedTimestamp.invoke(dto, now);\n        }\n        \n    }\n    \n    // \u66f4\u65b0\u8005ID\u3068\u66f4\u65b0\u65e5\u6642\u3092\u30bb\u30c3\u30c8\n    private void setUpdatedProperty(LoginUserInfo loginUserInfo, Date now, Object dto) throws Throwable {\n        \n        // Mapper\u306e\u5f15\u6570\u306bsetUpdatedById\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u5834\u5408\u3001\u8a8d\u8a3c\u60c5\u5831\u3092\u30bb\u30c3\u30c8\n        Method setUpdatedById  = ReflectionUtils.findMethod(dto.getClass(), \"setUpdatedById\", String.class);\n        if(setUpdatedById != null) {\n            setUpdatedById.invoke(dto, loginUserInfo.getId());\n        }\n        \n        // Mapper\u306e\u5f15\u6570\u306bsetUpdatedTimestamp\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u5834\u5408\u3001\u73fe\u5728\u65e5\u6642\u3092\u30bb\u30c3\u30c8\n        Method setUpdatedTimestamp  = ReflectionUtils.findMethod(dto.getClass(), \"setUpdatedTimestamp\", Date.class);\n        if(setUpdatedTimestamp != null) {\n            setUpdatedTimestamp.invoke(dto, now);\n        }\n        \n    }\n    \n}\n```\n\n\u307e\u305a\u3001@Before\u306e\u5f15\u6570\u3067\u3001Join Point\u3092Pointcut\u5f0f\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u5bfe\u8c61\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3001Mapper\u306e\u30af\u30e9\u30b9\u540d\uff08\\*Mapper\uff09\u3001\u30e1\u30bd\u30c3\u30c9\u540d\uff08create\\*\u3082\u3057\u304f\u306fupdate\\*\uff09\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```\n@Before(\"execution(* com.mycompany.myapp.domain.mapper.*Mapper.create*(..)) || \" + \n        \"execution(* com.mycompany.myapp.domain.mapper.*Mapper.update*(..))\")\n```\n\nSpring Security\u306e\u8a8d\u8a3c\u60c5\u5831\u306f\u3001SecurityContextHolder\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n```\nLoginUserInfo loginUserInfo = null;\nAuthentication authentication = SecurityContextHolder.getContext().getAuthentication();\nif(authentication.getPrincipal() instanceof LoginUserInfo) {\n    loginUserInfo = LoginUserInfo.class.cast(authentication.getPrincipal());\n}\n```\n\n\u305d\u3057\u3066\u3001Mapper\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u306b\u5fdc\u3058\u3066\u3001create\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u306f\u4f5c\u6210\u8005\u30fb\u4f5c\u6210\u65e5\u6642\u3092\u3001update\u30e1\u30bd\u30c3\u30c9\u306e\u5834\u5408\u306f\u4f5c\u6210\u8005\u30fb\u4f5c\u6210\u65e5\u6642\u30fb\u66f4\u65b0\u8005\u30fb\u66f4\u65b0\u65e5\u6642\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\u30e2\u30c7\u30eb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u305f\u3081\u3001Spring\u306eReflectionUtils\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4f5c\u6210\u8005ID\u306e\u8a2d\u5b9a\u4f8b\n\n```\nMethod setCreatedById = ReflectionUtils.findMethod(dto.getClass(), \"setCreatedById\", String.class);\nif(setCreatedById != null) {\n    setCreatedById.invoke(dto, loginUserInfo.getId());\n}\n```\n\n\n# \u753b\u9762\u304b\u3089Mapper\u307e\u3067\u306e\u6d41\u308c\n\nAspect\u304c\u3067\u304d\u305f\u306e\u3067\u3001ID\u3068\u540d\u79f0\u3092\u6301\u3064\u5546\u54c1\u30c6\u30fc\u30d6\u30eb\u306e\u65b0\u898f\u4f5c\u6210\u3068\u66f4\u65b0\u3092\u3084\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u767b\u9332\u753b\u9762\u306e\u30a4\u30e1\u30fc\u30b8\n\n![item-input-image.png](https://qiita-image-store.s3.amazonaws.com/0/142151/1bd4cdc1-e492-6bd8-24e6-23a4dcfd5f44.png)\n\n\n\u66f4\u65b0\u753b\u9762\u306e\u30a4\u30e1\u30fc\u30b8\n\n![item-update-image.png](https://qiita-image-store.s3.amazonaws.com/0/142151/4235404b-f935-c836-a7ec-31bf931bc733.png)\n\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u767b\u9332\u51e6\u7406\uff08create\u30e1\u30bd\u30c3\u30c9\uff09\u3067\u306f\u3001\u30d5\u30a9\u30fc\u30e0\u306e\u5185\u5bb9\u3092\u30e2\u30c7\u30eb\u306b\u683c\u7d0d\u3057\u3001\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\u66f4\u65b0\u51e6\u7406\uff08update\u30e1\u30bd\u30c3\u30c9\uff09\u3067\u306f\u3001\u66f4\u65b0\u753b\u9762\u8868\u793a\u6642\uff08show\u30e1\u30bd\u30c3\u30c9\uff09\u306bsession\u306b\u683c\u7d0d\u3057\u305f\u30e2\u30c7\u30eb\u306b\u5bfe\u3057\u3066\u3001\u30d5\u30a9\u30fc\u30e0\u306e\u5185\u5bb9\u3067\u4e0a\u66f8\u304d\u3057\u3001\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u306b\u6e21\u3057\u307e\u3059\u3002\n\n```java\n@Controller\npublic class ItemController {\n    // \u7701\u7565\n    @RequestMapping(value = \"item\", method = RequestMethod.POST)\n    public String create(@ValidatedItemForm form, BindingResult bindingResult, Model model) {\n        // \u7701\u7565\n        // \u30d5\u30a9\u30fc\u30e0\u304b\u3089\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\n        Item item = new Item();\n        item.setId(form.getItemCode());;\n        item.setName(form.getItemName());\n        // \u5546\u54c1\u3092\u767b\u9332\n        itemService.createItem(item);\n        // \u5b8c\u4e86\u753b\u9762\u306b\u9077\u79fb\n        model.addAttribute(\"itemForm\", form);\n        return \"itemComplete\";\n    }\n\n    @RequestMapping(value = \"item/{itemCode}\", method = RequestMethod.GET)\n    public String show(HttpSession session, @PathVariable(\"itemCode\") String itemCode, ItemForm form, Model model) {\n        // \u5546\u54c1\u3092\u53d6\u5f97\n        Item item = itemService.findItem(itemCode);\n        // \u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u683c\u7d0d\n        session.setAttribute(\"sessioitem\", item);\n        // \u66f4\u65b0\u753b\u9762\u306b\u9077\u79fb\n        model.addAttribute(\"item\", item);\n        return \"itemUpdate\";\n    }\n\n    @RequestMapping(value = \"item/{itemCode}\", method = RequestMethod.POST)\n    public String update(HttpSession session, @Validated ItemForm form, BindingResult bindingResult, Model model) {\n        // \u7701\u7565\n        // \u66f4\u65b0\u753b\u9762\u8868\u793a\u6642\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u683c\u7d0d\u3057\u305f\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066\u3001\u30d5\u30a9\u30fc\u30e0\u306e\u5185\u5bb9\u3067\u66f4\u65b0\n        Item item = (Item)session.getAttribute(\"sessioitem\");\n        item.setName(form.getItemName());\n        // \u5546\u54c1\u3092\u66f4\u65b0\n        itemService.updateItem(item);\n        // \u5b8c\u4e86\u753b\u9762\u306b\u9077\u79fb\n        model.addAttribute(\"itemForm\", form);\n        return \"itemComplete\";\n    }\n}\n```\n\n\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u306fMapper\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3059\u3002\n\n```java\n@Service\npublic class ItemService {\n\n    @Autowired\n    ItemMapper itemMapper;\n\n    public void createItem(Item item) {\n        itemMapper.createItem(item);\n    }\n\n    public void updateItem(Item item) {\n        itemMapper.updateItem(item);\n    }\n\n}\n```\n\nMapper\u306f\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u3060\u3051\u3067\u3001SQL\u306f\u30de\u30c3\u30d4\u30f3\u30b0\u30d5\u30a1\u30a4\u30eb\u306b\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n```java\npublic interface ItemMapper {\n\n    void createItem(Item item);\n\n    void updateItem(Item item);\n\n}\n```\n\n```xml\n<insert id=\"createItem\" parameterType=\"Item\">\nINSERT INTO item (\n\tid,\n\tname,\n\tcreated_by_id,\n\tcreated_timestamp,\n\tupdated_by_id,\n\tupdated_timestamp\n) VALUES (\n\t#{id},\n\t#{name},\n\t#{createdById},\n\t#{createdTimestamp},\n\t#{updatedById},\n\t#{updatedTimestamp}\n)\n</insert>\n<update id=\"updateItem\" parameterType=\"Item\">\nUPDATE item SET \n\tname = #{name},\n\tupdated_by_id = #{updatedById},\n\tupdated_timestamp = #{updatedTimestamp}\nWHERE\n\tid = #{id}\n</update>\n```\n\n\n# \u52d5\u4f5c\u78ba\u8a8d\n\n\u305d\u308c\u3067\u306f\u3001\u5b9f\u969b\u306b\u767b\u9332\u51e6\u7406\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\u30e6\u30fc\u30b6\u30fc\u300c11111\u300d\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u3001\u5546\u54c1\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n![login1.png](https://qiita-image-store.s3.amazonaws.com/0/142151/174b2d65-77c2-041b-3fc5-97c42d7a8478.png)\n\n![item-new.png](https://qiita-image-store.s3.amazonaws.com/0/142151/098177ba-47bf-3201-37dd-59d2d2e317fa.png)\n\n![item-new-complete.png](https://qiita-image-store.s3.amazonaws.com/0/142151/cd4e45f4-7b76-26d8-6cf1-4d4ee55def9f.png)\n\n\u767b\u9332\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u898b\u3066\u307f\u308b\u3068\u3001\n\n![data1.png](https://qiita-image-store.s3.amazonaws.com/0/142151/ca0d0c36-3083-e082-0140-dfb77e054121.png)\n\n\u78ba\u304b\u306b\u4f5c\u6210\u8005\u30fb\u4f5c\u6210\u65e5\u6642\u30fb\u66f4\u65b0\u8005\u30fb\u66f4\u65b0\u65e5\u6642\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u7d9a\u3044\u3066\u3001\u66f4\u65b0\u51e6\u7406\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\u30e6\u30fc\u30b6\u30fc\u3092\u5909\u3048\u3066\u3001\u300c22222\u300d\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u3001\u5148\u307b\u3069\u767b\u9332\u3057\u305f\u5546\u54c1\u540d\u3092\u5909\u66f4\u3057\u3066\u307f\u307e\u3059\u3002\n\n![login2.png](https://qiita-image-store.s3.amazonaws.com/0/142151/ccfbe86d-c241-2395-270e-432a28332bfb.png)\n\n\n![item-upate.png](https://qiita-image-store.s3.amazonaws.com/0/142151/eaa88451-7877-c767-d546-c2293ab6894c.png)\n\n![item-update-complete.png](https://qiita-image-store.s3.amazonaws.com/0/142151/a4af9371-9158-5910-5b05-0d30001915ac.png)\n\n\u3053\u3061\u3089\u3082\u3001\u30c7\u30fc\u30bf\u3092\u898b\u3066\u307f\u308b\u3068\u3001\n\n![data2.png](https://qiita-image-store.s3.amazonaws.com/0/142151/37e26bfa-bb16-4011-0034-025767ec015a.png)\n\n\u66f4\u65b0\u8005\u3068\u66f4\u65b0\u65e5\u6642\u304c\u6b63\u3057\u304f\u8a2d\u5b9a\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n# \u3055\u3044\u3054\u306b\n\nAOP\u3092Spring Framework\u3067\u4f7f\u7528\u3059\u308b\u3068\u3001\u697d\u89b3\u30ed\u30c3\u30af\u3001\u6a29\u9650\u30c1\u30a7\u30c3\u30af\uff08\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u30fc\u3068\u767b\u9332\u30c7\u30fc\u30bf\u306e\u30c1\u30a7\u30c3\u30af\u306a\u3069\uff09\u306a\u3069\u3044\u308d\u3044\u308d\u3068\u5fdc\u7528\u304c\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\u4ed6\u306e\u4f8b\u3082\u4eca\u5f8c\u6295\u7a3f\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n", "tags": ["Java", "spring", "AOP", "spring-security", "MyBatis"]}