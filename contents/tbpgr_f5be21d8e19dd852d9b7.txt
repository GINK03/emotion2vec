{"context": " More than 1 year has passed since last update.\n\nRuby | Guard gem \u3092\u5229\u7528\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u306e\u5909\u66f4\u3092\u691c\u51fa\u3057\u3001\u4efb\u610f\u306e\u30bf\u30b9\u30af\u3092\u81ea\u52d5\u5b9f\u884c\u3059\u308b\n\n\u6982\u8981\nGuard gem \u3092\u5229\u7528\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u306e\u5909\u66f4\u3092\u691c\u51fa\u3057\u3001\u4efb\u610f\u306e\u30bf\u30b9\u30af\u3092\u81ea\u52d5\u5b9f\u884c\u3059\u308b\u3002\n\u4eca\u56de\u306f\u30d5\u30a1\u30a4\u30eb\u5909\u66f4\u6642\u306b RSpec \u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nguard \u306e RSpec Plugin \u3082\u4e00\u7dd2\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\n\n$ gem install guard --no-ri --no-doc\n$ gem install guard-rspec --no-ri --no-doc\n\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\uff08Guardfile\uff09\u306e\u751f\u6210\nRSpec\u5bfe\u5fdc\u306e\u3072\u306a\u5f62\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n$ guard init rspec\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u751f\u6210\u3055\u308c\u307e\u3059\n\nGuardfile\nguard :rspec do\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^lib/(.+)\\.rb$})     { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch('spec/spec_helper.rb')  { \"spec\" }\n\n  # Rails example\n  watch(%r{^app/(.+)\\.rb$})                           { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch(%r{^app/(.*)(\\.erb|\\.haml|\\.slim)$})          { |m| \"spec/#{m[1]}#{m[2]}_spec.rb\" }\n  watch(%r{^app/controllers/(.+)_(controller)\\.rb$})  { |m| [\"spec/routing/#{m[1]}_routing_spec.rb\", \"spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb\", \"spec/acceptance/#{m[1]}_spec.rb\"] }\n  watch(%r{^spec/support/(.+)\\.rb$})                  { \"spec\" }\n  watch('config/routes.rb')                           { \"spec/routing\" }\n  watch('app/controllers/application_controller.rb')  { \"spec/controllers\" }\n\n  # Capybara features specs\n  watch(%r{^app/views/(.+)/.*\\.(erb|haml|slim)$})     { |m| \"spec/features/#{m[1]}_spec.rb\" }\n\n  # Turnip features and steps\n  watch(%r{^spec/acceptance/(.+)\\.feature$})\n  watch(%r{^spec/acceptance/steps/(.+)_steps\\.rb$})   { |m| Dir[File.join(\"**/#{m[1]}.feature\")][0] || 'spec/acceptance' }\nend\n\n\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u7de8\u96c6\u3057\u307e\u3059\u3002\n\nGuardfile\nguard :rspec do\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^lib/(.+)\\.rb$})     { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch('spec/spec_helper.rb')  { \"spec\" }\nend\n\n\n\nguard\u3092\u8d77\u52d5\u3057\u307e\u3059\n$ guard start\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3072\u306a\u578b\u3092\u751f\u6210\u3057\u307e\u3059\n\u81ea\u4f5c gem \u306e rspec_piccolo \u3092\u5229\u7528\u3057\u307e\u3059\u3002\nrspec_piccolo\u306f\u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\u3068\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u3072\u306a\u5f62\u3092\u751f\u6210\u3059\u308b CLI \u30c4\u30fc\u30eb\u3067\u3059\u3002\n\u8a73\u3057\u304f\u306f\nhttps://github.com/tbpgr/rspec_piccolo\n\u3092\u53c2\u7167\u3002\npiccolo e Hoge hoge hoge -p\n\n\u3053\u308c\u3067\u3001\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\nlib/hoge.rb\n# encoding: utf-8\n\n\nclass Hoge\n  def hoge\n    # TODO: implement your code\n  end\nend\n\n\n\nspec/hoge_spec.rb\n# encoding: utf-8\nrequire \"spec_helper\"\nrequire \"hoge\"\n\ndescribe Hoge do\n\n  context :hoge do\n    cases = [\n      {\n        case_no: 1,\n        case_title: \"case_title\",\n        expected: \"expected\",\n      },\n    ]\n\n    cases.each do |c|\n      it \"|case_no=#{c[:case_no]}|case_title=#{c[:case_title]}\" do\n        begin\n          case_before c\n\n          # -- given --\n          hoge = Hoge.new\n\n          # -- when --\n          # TODO: implement execute code\n          # actual = hoge.hoge\n\n          # -- then --\n          # TODO: implement assertion code\n          # expect(actual).to eq(c[:expected])\n        ensure\n          case_after c\n        end\n      end\n\n      def case_before(c)\n        # implement each case before\n      end\n\n      def case_after(c)\n        # implement each case after\n      end\n    end\n  end\nend\n\n\n\n\u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u691c\u77e5\u3057\u3066\u3001guard\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\n[1] guard(main)>\n\n22:45:17 - INFO - Running: spec/hoge_spec.rb\nRun options: include {:focus=>true}\n\nAll examples were filtered out; ignoring {:focus=>true}\n.\n\nFinished in 0 seconds\n1 example, 0 failures\n\n\n\u30c6\u30b9\u30c8\u3092\u5b9f\u88c5\u5f8c\u3001\u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\u3092\u4fdd\u5b58\u3057\u305fguard\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u307e\u3059\n\nspec/hoge_spec.rb\n# encoding: utf-8\nrequire \"spec_helper\"\nrequire \"hoge\"\n\ndescribe Hoge do\n\n  context :hoge do\n    cases = [\n      {\n        case_no: 1,\n        case_title: \"valid case\",\n        expected: \"hoge\",\n      },\n    ]\n\n    cases.each do |c|\n      it \"|case_no=#{c[:case_no]}|case_title=#{c[:case_title]}\" do\n        begin\n          case_before c\n\n          # -- given --\n          hoge = Hoge.new\n\n          # -- when --\n          actual = hoge.hoge\n\n          # -- then --\n          expect(actual).to eq(c[:expected])\n        ensure\n          case_after c\n        end\n      end\n\n      def case_before(c)\n        # implement each case before\n      end\n\n      def case_after(c)\n        # implement each case after\n      end\n    end\n  end\nend\n\n\n[1] guard(main)>\n\n22:47:05 - INFO - Running: spec/hoge_spec.rb\nRun options: include {:focus=>true}\n\nAll examples were filtered out; ignoring {:focus=>true}\nF\n\nFailures:\n\n  1) Hoge hoge |case_no=1|case_title=valid case\n     Failure/Error: expect(actual).to eq(c[:expected])\n\n       expected: \"hoge\"\n            got: \"# TODO: implement your code\"\n\n       (compared using ==)\n     # ./spec/hoge_spec.rb:28:in `block (4 levels) in <top (required)>'\n\nFinished in 0.001 seconds\n1 example, 1 failure\n\nFailed examples:\n\nrspec ./spec/hoge_spec.rb:17 # Hoge hoge |case_no=1|case_title=valid case\n\n\n\u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001\u30c6\u30b9\u30c8\u3092\u30d1\u30b9\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u304c\u6210\u529f\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\n\nlib/hoge.rb\n# encoding: utf-8\n\n\nclass Hoge\n  def hoge\n    'hoge'\n  end\nend\n\n\n[1] guard(main)>\n\n22:48:46 - INFO - Running: ./spec/hoge_spec.rb:17\nRun options: include {:locations=>{\"./spec/hoge_spec.rb\"=>[17]}}\n.\n\nFinished in 0.001 seconds\n1 example, 0 failures\nRun options: include {:locations=>{\"./spec/hoge_spec.rb\"=>[17]}}\n.\n\nFinished in 0.001 seconds\n1 example, 0 failures\n\n\n\u53c2\u7167\nhttps://github.com/guard/guard\nhttp://rubygems.org/gems/guard\n\nGuard \u307e\u3068\u3081\u8a18\u4e8b\nhttp://qiita.com/tbpgr/items/7905535aa0a1d9131688\n# Ruby | Guard gem \u3092\u5229\u7528\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u306e\u5909\u66f4\u3092\u691c\u51fa\u3057\u3001\u4efb\u610f\u306e\u30bf\u30b9\u30af\u3092\u81ea\u52d5\u5b9f\u884c\u3059\u308b\n\n## \u6982\u8981\nGuard gem \u3092\u5229\u7528\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u306e\u5909\u66f4\u3092\u691c\u51fa\u3057\u3001\u4efb\u610f\u306e\u30bf\u30b9\u30af\u3092\u81ea\u52d5\u5b9f\u884c\u3059\u308b\u3002\n\u4eca\u56de\u306f\u30d5\u30a1\u30a4\u30eb\u5909\u66f4\u6642\u306b RSpec \u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n* guard \u306e RSpec Plugin \u3082\u4e00\u7dd2\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\n\n~~~bash\n$ gem install guard --no-ri --no-doc\n$ gem install guard-rspec --no-ri --no-doc\n~~~\n\n## \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\uff08Guardfile\uff09\u306e\u751f\u6210\nRSpec\u5bfe\u5fdc\u306e\u3072\u306a\u5f62\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n~~~bash\n$ guard init rspec\n~~~\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u751f\u6210\u3055\u308c\u307e\u3059\n\n~~~ruby:Guardfile\nguard :rspec do\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^lib/(.+)\\.rb$})     { |m| \"spec/lib/#{m[1]}_spec.rb\" }\n  watch('spec/spec_helper.rb')  { \"spec\" }\n\n  # Rails example\n  watch(%r{^app/(.+)\\.rb$})                           { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch(%r{^app/(.*)(\\.erb|\\.haml|\\.slim)$})          { |m| \"spec/#{m[1]}#{m[2]}_spec.rb\" }\n  watch(%r{^app/controllers/(.+)_(controller)\\.rb$})  { |m| [\"spec/routing/#{m[1]}_routing_spec.rb\", \"spec/#{m[2]}s/#{m[1]}_#{m[2]}_spec.rb\", \"spec/acceptance/#{m[1]}_spec.rb\"] }\n  watch(%r{^spec/support/(.+)\\.rb$})                  { \"spec\" }\n  watch('config/routes.rb')                           { \"spec/routing\" }\n  watch('app/controllers/application_controller.rb')  { \"spec/controllers\" }\n\n  # Capybara features specs\n  watch(%r{^app/views/(.+)/.*\\.(erb|haml|slim)$})     { |m| \"spec/features/#{m[1]}_spec.rb\" }\n\n  # Turnip features and steps\n  watch(%r{^spec/acceptance/(.+)\\.feature$})\n  watch(%r{^spec/acceptance/steps/(.+)_steps\\.rb$})   { |m| Dir[File.join(\"**/#{m[1]}.feature\")][0] || 'spec/acceptance' }\nend\n~~~\n\n## \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u7de8\u96c6\u3057\u307e\u3059\u3002\n\n~~~ruby:Guardfile\nguard :rspec do\n  watch(%r{^spec/.+_spec\\.rb$})\n  watch(%r{^lib/(.+)\\.rb$})     { |m| \"spec/#{m[1]}_spec.rb\" }\n  watch('spec/spec_helper.rb')  { \"spec\" }\nend\n~~~\n\n## guard\u3092\u8d77\u52d5\u3057\u307e\u3059\n\n~~~bash\n$ guard start\n~~~\n\n## \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3072\u306a\u578b\u3092\u751f\u6210\u3057\u307e\u3059\n\n\u81ea\u4f5c gem \u306e rspec_piccolo \u3092\u5229\u7528\u3057\u307e\u3059\u3002\nrspec_piccolo\u306f\u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\u3068\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u3072\u306a\u5f62\u3092\u751f\u6210\u3059\u308b CLI \u30c4\u30fc\u30eb\u3067\u3059\u3002\n\n\u8a73\u3057\u304f\u306f\nhttps://github.com/tbpgr/rspec_piccolo\n\u3092\u53c2\u7167\u3002\n\n~~~bash\npiccolo e Hoge hoge hoge -p\n~~~\n\n\u3053\u308c\u3067\u3001\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n~~~ruby:lib/hoge.rb\n# encoding: utf-8\n\n\nclass Hoge\n  def hoge\n    # TODO: implement your code\n  end\nend\n~~~\n\n~~~ruby:spec/hoge_spec.rb\n# encoding: utf-8\nrequire \"spec_helper\"\nrequire \"hoge\"\n\ndescribe Hoge do\n\n  context :hoge do\n    cases = [\n      {\n        case_no: 1,\n        case_title: \"case_title\",\n        expected: \"expected\",\n      },\n    ]\n\n    cases.each do |c|\n      it \"|case_no=#{c[:case_no]}|case_title=#{c[:case_title]}\" do\n        begin\n          case_before c\n\n          # -- given --\n          hoge = Hoge.new\n\n          # -- when --\n          # TODO: implement execute code\n          # actual = hoge.hoge\n\n          # -- then --\n          # TODO: implement assertion code\n          # expect(actual).to eq(c[:expected])\n        ensure\n          case_after c\n        end\n      end\n\n      def case_before(c)\n        # implement each case before\n      end\n\n      def case_after(c)\n        # implement each case after\n      end\n    end\n  end\nend\n~~~\n\n## \u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u691c\u77e5\u3057\u3066\u3001guard\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\n\n~~~bash\n[1] guard(main)>\n\n22:45:17 - INFO - Running: spec/hoge_spec.rb\nRun options: include {:focus=>true}\n\nAll examples were filtered out; ignoring {:focus=>true}\n.\n\nFinished in 0 seconds\n1 example, 0 failures\n~~~\n\n## \u30c6\u30b9\u30c8\u3092\u5b9f\u88c5\u5f8c\u3001\u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\u3092\u4fdd\u5b58\u3057\u305fguard\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u307e\u3059\n\n~~~ruby:spec/hoge_spec.rb\n# encoding: utf-8\nrequire \"spec_helper\"\nrequire \"hoge\"\n\ndescribe Hoge do\n\n  context :hoge do\n    cases = [\n      {\n        case_no: 1,\n        case_title: \"valid case\",\n        expected: \"hoge\",\n      },\n    ]\n\n    cases.each do |c|\n      it \"|case_no=#{c[:case_no]}|case_title=#{c[:case_title]}\" do\n        begin\n          case_before c\n\n          # -- given --\n          hoge = Hoge.new\n\n          # -- when --\n          actual = hoge.hoge\n\n          # -- then --\n          expect(actual).to eq(c[:expected])\n        ensure\n          case_after c\n        end\n      end\n\n      def case_before(c)\n        # implement each case before\n      end\n\n      def case_after(c)\n        # implement each case after\n      end\n    end\n  end\nend\n~~~\n\n~~~bash\n[1] guard(main)>\n\n22:47:05 - INFO - Running: spec/hoge_spec.rb\nRun options: include {:focus=>true}\n\nAll examples were filtered out; ignoring {:focus=>true}\nF\n\nFailures:\n\n  1) Hoge hoge |case_no=1|case_title=valid case\n     Failure/Error: expect(actual).to eq(c[:expected])\n\n       expected: \"hoge\"\n            got: \"# TODO: implement your code\"\n\n       (compared using ==)\n     # ./spec/hoge_spec.rb:28:in `block (4 levels) in <top (required)>'\n\nFinished in 0.001 seconds\n1 example, 1 failure\n\nFailed examples:\n\nrspec ./spec/hoge_spec.rb:17 # Hoge hoge |case_no=1|case_title=valid case\n~~~\n\n## \u30d7\u30ed\u30c0\u30af\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u3001\u30c6\u30b9\u30c8\u3092\u30d1\u30b9\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u304c\u6210\u529f\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\n\n~~~ruby:lib/hoge.rb\n# encoding: utf-8\n\n\nclass Hoge\n  def hoge\n    'hoge'\n  end\nend\n~~~\n\n~~~bash\n[1] guard(main)>\n\n22:48:46 - INFO - Running: ./spec/hoge_spec.rb:17\nRun options: include {:locations=>{\"./spec/hoge_spec.rb\"=>[17]}}\n.\n\nFinished in 0.001 seconds\n1 example, 0 failures\nRun options: include {:locations=>{\"./spec/hoge_spec.rb\"=>[17]}}\n.\n\nFinished in 0.001 seconds\n1 example, 0 failures\n~~~\n\n## \u53c2\u7167\nhttps://github.com/guard/guard\nhttp://rubygems.org/gems/guard\n\n## Guard \u307e\u3068\u3081\u8a18\u4e8b\nhttp://qiita.com/tbpgr/items/7905535aa0a1d9131688\n", "tags": ["Guard", "Ruby", "RSpec"]}