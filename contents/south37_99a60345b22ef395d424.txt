{"context": "\n\nIntroduction\n\u7a81\u7136\u3067\u3059\u304c\u3001\u7686\u3055\u3093 async/await \u306f\u77e5\u3063\u3066\u3044\u307e\u3059\u304b\uff01\uff1f\nasync/await \u3068\u3044\u3048\u3070 ES7 \u3067\u306e\u4ed5\u69d8\u7b56\u5b9a\u306b\u5411\u3051\u3066\u8b70\u8ad6\u304c\u9032\u3081\u3089\u308c\u3066\u3044\u308b ECMAScript \u306e\u65b0\u6a5f\u80fd\u3067\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u540c\u671f\u51e6\u7406\u3063\u307d\u304f\u66f8\u304f\u4e8b\u304c\u3067\u304d\u307e\u3059\uff08\u30eb\u30fc\u30c4\u306f C# \u306easync/await \u3089\u3057\u3044\u3067\u3059\uff09\u3002\nasync/await \u306b\u3064\u3044\u3066\u7406\u89e3\u3092\u6df1\u3081\u308b\u70ba\u306b\u3001\u5b9f\u969b\u306b\uff08\u73fe\u5728\u63d0\u6848\u3055\u308c\u3066\u308b\u4ed5\u69d8\u3067\u306e\uff09\u4f7f\u3044\u65b9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4ee5\u4e0b\u306f http://wiki.ecmascript.org/doku.php?id=strawman:async_functions \u304b\u3089\u306e\u629c\u7c8b\u3067\u3059\u3002\n  1 var request = require('./request.js');\n  2 var headers = { 'User-Agent': 'lukehoban', 'Authorization': 'token 665021d813ad67942206d94c47d7947716d27f66' };\n  3\n  4 // Promise-returning asynchronous function\n  5 async function getCollaboratorImages(full_name) {\n  6   // any exceptions thrown here will propogate into try/catch in callers - same as synchronous\n  7   var url = 'https://api.github.com/repos/' + full_name + '/collaborators';\n  8   // await a promise-returning async HTTP GET - same as synchronous\n  9   var [response, body] = await request({url: url, headers: headers});\n 10   return JSON.parse(body).map(function(collab) {\n 11     return collab.avatar_url;\n 12   });\n 13 }\n\n\u3061\u3087\u3063\u3068\u8907\u96d1\u3059\u304e\u308b\u4f8b\u306b\u306a\u3063\u3066\u307e\u3059\u304c\u3001\u6ce8\u76ee\u3059\u3079\u304d\u306f 9\u884c\u76ee \u306e var [response, body] = await request({url: url, headers: headers}); \u3067\u3059\u3002\u3053\u306e\u884c\u3067\u306f\u3001request({url: url, headers: headers}) \u3067 http \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u3066\u3001\u305d\u306e\u7d50\u679c\u3092 response, body \u306b\u4ee3\u5165\u3057\u3066\u3044\u307e\u3059\u3002\u3055\u3089\u306b\u7d9a\u304f10\u884c\u76ee\u4ee5\u964d\u3067\u3001 body \u304c\u95a2\u6570\u306e\u8fd4\u308a\u5024\u306e\u751f\u6210\u306b\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30b3\u30fc\u30c9\u3060\u3051\u3092\u898b\u3066\u3044\u308b\u3068\u30019\u884c\u76ee\u3067\u306f\u540c\u671f\u7684\u306b http request \u304c\u6295\u3052\u3089\u308c\u3001\u305d\u306e response \u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3092\u5f85\u3063\u3066\uff08Network IO \u3067\u30d6\u30ed\u30c3\u30af\u3057\u3066\uff09\u3001 resopnse, body \u306e\u4ee3\u5165\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u69d8\u306b\u898b\u3048\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u5b9f\u969b\u306b\u306f\u305d\u3046\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u5b9f\u306f\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u30b3\u30fc\u30c9\u3068\u7b49\u4fa1\u306b\u306a\u308a\u307e\u3059\u3002\n// Promise\u7248\n  1 var request = require('./request.js');\n  2 var headers = { 'User-Agent': 'lukehoban', 'Authorization': 'token 665021d813ad67942206d94c47d7947716d27f66' };\n  3\n  4 function getCollaboratorImages(full_name) {\n  5   var url = 'https://api.github.com/repos/' + full_name + '/collaborators';\n  6   return request({url: url, headers: headers}).then(function(value) {\n  7     var [response, body] = value;\n  8     JSON.parse(body).map(function(collab) {\n  9       return collab.avatar_url;\n 10     });\n 11   })\n 12 }\n\nPromise \u304c\u4f7f\u308f\u308c\u3066\u3044\u3066\u3001\u898b\u6163\u308c\u305f\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306d\u3002\u30dd\u30a4\u30f3\u30c8\u306f getCollaboratorImages \u306e\u8fd4\u308a\u5024\u304c Promise \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u3063\u3066\u3044\u308b\u4e8b\u3001\u307e\u305f request({url: url, headers: headers}) \u304c\u8fd4\u3059 Promise \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u306f then \u3067\u7d9a\u304d\u306e\u51e6\u7406\u3092\u66f8\u3044\u3066\u3044\u308b\u4e8b\u3067\u3059\u3002then \u306b\u3088\u3063\u3066 callback \u306e\u51e6\u7406\u3092\u767b\u9332\u3057\u3066\u3044\u308b\u70ba\u3001\u5b8c\u5168\u306b\u975e\u540c\u671f\u306b\u5b9f\u884c\u3055\u308c\u308b\u30b3\u30fc\u30c9\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nPromise \u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u3068 async/await \u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u304c\u3001\u306a\u305c\u7b49\u4fa1\u3068\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u9375\u306b\u306a\u308b\u306e\u306f\u3001ES6\u3067\u5c0e\u5165\u3055\u308c\u305f Generator \u3068\u3044\u3046\u6a5f\u80fd\u3067\u3059\u3002\n\nES6 \u3067\u3082 Generator \u3068 Promise \u3092\u4f7f\u3046\u3068 async/await \u304c\u5b9f\u88c5\u3067\u304d\u308b\n\u5b9f\u306f\u3001Generator \u3068 Promise \u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u4e8b\u3067 async/await \uff08\u3068\u540c\u7b49\u306e\u6a5f\u80fd\u3092\u679c\u305f\u3059\u95a2\u6570\uff09\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002\n\u3053\u308c\u306b\u95a2\u3057\u3066\u306f\u3001 ES6 Generator\u3092\u4f7f\u3063\u3066async/await\u3092\u5b9f\u88c5\u3059\u308b\u30e1\u30e2 \u304c\u8a73\u3057\u3044\u306e\u3067\u8208\u5473\u304c\u6e67\u3044\u305f\u4eba\u306f\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u4e0a\u8a18\u8a18\u4e8b\u3067\u6ce8\u76ee\u3059\u3079\u304d\u306a\u306e\u306f\u3001Generator \u3092\u30b3\u30eb\u30fc\u30c1\u30f3\u3068\u3057\u3066\u4f7f\u3063\u3066\u3044\u3066\u3001Promise\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u3044\u308b\u3053\u3068\u3067\u3059\u3002\u3053\u306e2\u3064\u304c async/await \u3092\u5b9f\u88c5\u3059\u308b\u70ba\u306b\u5fc5\u8981\u306a\u30d1\u30fc\u30c4\u3068\u306a\u308a\u307e\u3059\u3002\n\u30b3\u30eb\u30fc\u30c1\u30f3\u306f\u3001\u96d1\u306b\u8aac\u660e\u3059\u308b\u3068\u300c\u51e6\u7406\u306e\u4e2d\u65ad\u3084\u518d\u958b\u304c\u53ef\u80fd\u306a\u624b\u7d9a\u304d\u51e6\u7406\u300d\u3092\u6307\u3057\u307e\u3059\u3002\u6709\u540d\u3069\u3053\u308d\u3060\u3068\u3001Lua \u3084 C# \u304c\u8a00\u8a9e\u30ec\u30d9\u30eb\u3067\u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u30b3\u30eb\u30fc\u30c1\u30f3\u306e\u547c\u3073\u51fa\u3057\u5074\u3068\u30b3\u30eb\u30fc\u30c1\u30f3\u5074\u3067\u5236\u5fa1\u3092\u884c\u304d\u6765\u3059\u308b\u4e8b\u304c\u51fa\u6765\u3066\u3001\u305d\u306e\u969b\u306b\u5024\u306e\u53d7\u3051\u6e21\u3057\u3082\u3067\u304d\u308b\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002\n\u9006\u306b\u8a00\u3048\u3070\u3001\u30b3\u30eb\u30fc\u30c1\u30f3\u3068 Promise \u304c\u3042\u308c\u3070 async/await \u306f\u5b9f\u88c5\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\u3055\u3066\u3001\u3053\u3053\u3067\u672c\u984c\u306b\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001 Ruby \u3067 \u30b3\u30eb\u30fc\u30c1\u30f3\u3068\u3044\u3048\u3070 Fiber \u3067\u3059\u3088\u306d\uff1f\n\u3068\u3044\u3046\u4e8b\u3067\u3001Fiber \u3092\u4f7f\u3063\u3066\u3001\u7c21\u5358\u306b async/await \u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nRuby \u3067 Fiber \u3092\u4f7f\u3063\u3066 async/await \u3092\u5b9f\u88c5\u3059\u308b\n\u305d\u308c\u3067\u306f\u3001Ruby \u3067 async/await \u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30eb\u5b9f\u88c5\u306a\u306e\u3067\u3001\u4f8b\u5916\u306e\u767a\u751f\u306f\u8003\u616e\u305b\u305a\u3001Promise \u3082\u4ee5\u4e0b\u306e\u69d8\u306a initialiize \u3068 then \u3060\u3051\u304c\u5b9a\u7fa9\u3055\u308c\u305f\u7c21\u5358\u306a\u3082\u306e\u3092\u8003\u3048\u307e\u3059\u3002\n  1 class Promise\n  2   def initialize(callback)\n  3     @callback = callback\n  4   end\n  5\n  6   def then(resolve = ->() {}, reject = ->() {})\n  7     @callback.call(resolve, reject)\n  8   end\n  9 end\n\n\u3053\u308c\u306f\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u69d8\u306b\u4f7f\u3044\u307e\u3059\u3002\n  1 require 'eventmachine'\n  2\n  3 def sleep(sec)\n  4   Promise.new(->(resolve, reject) {\n  5     EM.add_timer(sec) do\n  6       resolve.call('you sleep ' + sec.to_s)\n  7     end\n  8   })\n  9 end\n 10\n 11 EM.run do\n 12   sleep(0.3).then(->(value) {\n 13     p value\n 14   })\n 15   p 'start'\n 16 end\n 17 #=> \"start\"\n 18 #=> \"you sleep 0.3\"\n\nsleep \u30e1\u30bd\u30c3\u30c9\u306e \u8fd4\u308a\u5024\u3067\u3042\u308b Promise \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3001then \u3067\u7d9a\u304d\u306e\u51e6\u7406\uff08callback\uff09\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002sleep \u306e\u52d5\u4f5c\u304c\u300c\u6e21\u3055\u308c\u305f\u6570\u5b57\u306e\u79d2\u6570\u3060\u3051\u5f85\u3063\u3066\u304b\u3089\u3001then \u3067\u767b\u9332\u3055\u308c\u305f callback \u3092\u5b9f\u884c\u3059\u308b\u300d\u3068\u3044\u3046\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u70ba\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u4e8b\u9805\u3059\u308b\u306815\u884c\u76ee\u306e p 'start' \u3067 \"start\" \u304c\u51fa\u529b\u3055\u308c\u3066\u304b\u3089\u300113\u884c\u76ee\u306e p value \u3067 \"you sleep 0.3\" \u304c\u51fa\u529b\u3055\u308c\u307e\u3059\uff08\u5c1a\u3001\u5373\u6642 return \u3057\u3066\u304b\u3089\u767b\u9332\u3057\u305f callback \u3092\u5b9f\u884c\u3059\u308b\u3068\u3044\u3046\u52d5\u4f5c\u3092\u5b9f\u73fe\u3059\u308b\u70ba\u306b EventMachine \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002EM.run \u306b\u6e21\u3057\u305f\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u306f\u69d8\u3005\u306a non-blocking api \u304c\u4f7f\u3048\u3066\u3001\u4f8b\u3048\u3070\u4e0a\u8a18\u306e\u4f8b\u3067\u306f JS \u306e setTimeout \u7684\u306a\u632f\u308b\u821e\u3044\u3092\u3059\u308b EM.add_timer \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\uff09\u3002\n\u3055\u3089\u306b Promise \u3092\u8fd4\u3059\u5225\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u69d8\u306a decorate_message \u3092\u5b9a\u7fa9\u3057\u3066\u3001sleep \u306b\u7d9a\u3051\u3066\u4f7f\u3046 func \u3092\u8003\u3048\u307e\u3059\uff08\u50d5\u304c\u96d1\u306b\u5b9a\u7fa9\u3057\u305f Promise \u306e then \u30e1\u30bd\u30c3\u30c9\u306f Promise \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3055\u306a\u3044\u70ba\u3001chaining \u306f\u3067\u304d\u3066\u307e\u305b\u3093\u304c\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\uff09\n  1 def decorate_message(message)\n  2   Promise.new(->(resolve, reject) {\n  3     http = EM::HttpRequest.new('http://google.com/').get\n  4     http.callback {\n  5       resolve.call(message + ': ' + http.response[0..100])\n  6     }\n  7   })\n  8 end\n\n# use Promise\n  1 def func(time)\n  2   sleep(time).then(->(message) {\n  3     p message\n  4     decorate_message(message).then(->(decorated_message) {\n  5       p decorated_message\n  6     })\n  7   })\n  8 end\n  9\n 10 EM.run do\n 11   func(0.3)\n 12   p 'start'\n 13 end\n 14 #=> \"start\"\n 15 #=> \"you sleep 0.3\"\n 16 #=> \"you sleep 0.3: <HTML><HEAD><meta http-equiv=\\\"content-type\\\" content=\\\"text/html;charset=utf-8\\\">\\n<TITLE>302 Moved</TITL\"\n\n\u3053\u306e func \u3092\u4eca\u304b\u3089\u5b9a\u7fa9\u3059\u308b async, awai \u30e1\u30bd\u30c3\u30c9\u3092\u3064\u304b\u3063\u3066\u66f8\u304d\u63db\u3048\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002sleep \u3084 `decorate\u306a\u3093\u3060\u304b\u305d\u308c\u3063\u307d\u304f\u898b\u3048\u307e\u3059\u306d\uff01\uff01\n# use async/await\n  1 async :asyncFunc do |time|\n  2   message = await sleep(time)\n  3   p message\n  4   decorate_message = await decorate_message(message)\n  5   p decorate_message\n  6 end\n  7\n  8 EM.run do\n  9   asyncFunc(0.3)\n 10   p 'start'\n 11 end\n 12 #=> \"start\"\n 13 #=> \"you sleep 0.3\"\n 14 #=> \"you sleep 0.3: <HTML><HEAD><meta http-equiv=\\\"content-type\\\" content=\\\"text/html;charset=utf-8\\\">\\n<TITLE>302 Moved</TITL\"\n\n\u6b21\u306b\u3001\u3053\u3053\u3067\u4f7f\u3063\u305f async \u30e1\u30bd\u30c3\u30c9\u3068 await \u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u3092\u898b\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nFiber \u3092\u4f7f\u3063\u305f async/await \u306e\u5b9f\u88c5\n\u4e00\u756a\u30b7\u30f3\u30d7\u30eb\u306a\u4f8b\u3068\u3057\u3066\u3001 Promise \u306e then \u3067 resolve \u3060\u3051\u304c\u6307\u5b9a\u3055\u308c\u308b\u30b1\u30fc\u30b9\u3092\u8003\u3048\u308b\uff08\u304b\u3064\u4f8b\u5916\u306e\u767a\u751f\u3082\u8003\u616e\u3057\u306a\u3044\uff09\u3068\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067 async/await \u304c\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\u305f\u3063\u305f19\u884c\u306e\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u3059\u3002\n# implementation of async/await\n  1 def async_internal(fiber)\n  2   chain = ->(result) {\n  3     return if result.class != Promise\n  4     result.then(->(val) {\n  5       chain.call(fiber.resume(val))\n  6     })\n  7   }\n  8   chain.call(fiber.resume)\n  9 end\n 10\n 11 def async(method_name, &block)\n 12   define_method method_name, ->(*args) {\n 13     async_internal(Fiber.new { block.call(*args) })\n 14   }\n 15 end\n 16\n 17 def await(promise)\n 18   Fiber.yield promise\n 19 end\n\n\u6ce8\u76ee\u3059\u308b\u30dd\u30a4\u30f3\u30c8\u306f 16\u884c\u76ee \u306e Fiber.new \u3068\u3001 5\u884c\u76ee \u306e fiber.resume \u3001 21\u884c\u76ee \u306e Fiber.yield \u3067\u3059\u3002Fiber \u306f\u30b3\u30eb\u30fc\u30c1\u30f3\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3001 Fiber.new \u306b\u30b3\u30eb\u30fc\u30c1\u30f3\u306b\u3057\u305f\u3044\u51e6\u7406\u3092\u30d6\u30ed\u30c3\u30af\u3067\u6e21\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\nFiber \u306e\u6319\u52d5\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3068\u30a4\u30e1\u30fc\u30b8\u3057\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002Fiber.new \u306b\u6e21\u3057\u305f\u51e6\u7406\u306f\u3001\u751f\u6210\u3057\u305f fiber \u306b\u5bfe\u3057\u3066 resume \u3092\u547c\u3073\u51fa\u3059\u4e8b\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u3001 13\u884c\u76ee \u3067 fiber.resume(i) \u3092\u5b9f\u884c\u3057\u3066\u304a\u308a\u3001\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067 \"init fiber\" \u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\u305f\u3060\u3057\u30015\u884c\u76ee \u3067 Fiber.yield \u304c\u547c\u3070\u308c\u308b\u3068\u3001\u51e6\u7406\u304c\u30b9\u30c8\u30c3\u30d7\u3057\u3066\u5236\u5fa1\u306f 13\u884c\u76ee \u306b\u623b\u308a\u307e\u3059\u3002\u3053\u306e\u69d8\u306b\u3001\u30b3\u30eb\u30fc\u30c1\u30f3\u306e\u300c\u51e6\u7406\u3092\u9014\u4e2d\u3067\u629c\u3051\u308b\u300d\u6a5f\u80fd\u306f Fiber.yield \u306b\u3088\u3063\u3066\u5b9f\u73fe\u3055\u308c\u307e\u3059\u3002\n# fiber example\n  1 fiber = Fiber.new do\n  2   p 'init fiber'\n  3   n = 0\n  4   loop do\n  5     result = Fiber.yield(n)\n  6     p \"after yiled: #{result}\"\n  7     n += 1\n  8   end\n  9 end\n 10\n 11 i = 10\n 12 4.times do\n 13   result = fiber.resume(i)\n 14   p \"after resume: #{result}\"\n 15   i += 1\n 16 end\n 17 # >> \"init fiber\"\n 18 # >> \"after resume: 0\"\n 19 # >> \"after yiled: 11\"\n 20 # >> \"after resume: 1\"\n 21 # >> \"after yiled: 12\"\n 22 # >> \"after resume: 2\"\n 23 # >> \"after yiled: 13\"\n 24 # >> \"after resume: 3\"\n\nFiber.yield \u306b\u306f\u5f15\u6570\u3092\u6e21\u3059\u4e8b\u304c\u51fa\u6765\u3066\u3001\u6e21\u3057\u305f\u5f15\u6570\u306f fiber.resume \u306e\u8fd4\u308a\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u9006\u306b\u3001fiber.resume \u306b\u5f15\u6570\u3092\u6e21\u3059\u4e8b\u3082\u51fa\u6765\u3066\u3001\u3053\u306e\u5834\u5408\u306f Fiber.yield \u304b\u3089\u51e6\u7406\u3092\u518d\u958b\u3059\u308b\u969b\u306b\u305d\u306e\u8fd4\u308a\u5024\u3068\u3057\u3066\u4f7f\u3046\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\u8fd4\u308a\u5024\u306e\u95a2\u4fc2\u306f\u5c11\u3057\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u304c\u3001\u3042\u304f\u307e\u3067\u300cFiber.yield \u304c\u901a\u5e38\u306e return \u306b\u76f8\u5f53\u3059\u308b\u3082\u306e\uff08\u3088\u3063\u3066 fiber.resume \u306e\u8fd4\u308a\u5024\u306b\u306a\u308b\uff09\u300d\u3001\u300cfiber.resume \u306e2\u56de\u76ee\u4ee5\u964d\u306e\u547c\u3073\u51fa\u3057\u306f\u51e6\u7406\u306e\u518d\u958b\u3092\u610f\u5473\u3057\u3066\u3044\u3066\u3001\u518d\u958b\u6642\u306b\u521d\u671f\u5024\u3092\u6e21\u3059\u4e8b\u304c\u3067\u304d\u308b\u300d\u307f\u305f\u3044\u306b\u8003\u3048\u3066\u304a\u304f\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\uff08\u3088\u304f\u898b\u308b\u3068 fiber.resume \u306e\u6700\u521d\u306e\u5f15\u6570\u306f\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u4e8b\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\uff09\nFiber \u3092\u4f7f\u3046\u4e8b\u3067\u3001 Fiber.yield \u3068 fiber.resume \u3067\u5236\u5fa1\u3092\u884c\u3063\u305f\u308a\u6765\u305f\u308a\u3057\u306a\u304c\u3089\u5354\u8abf\u3057\u3066\u4f5c\u696d\u3092\u9032\u3081\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u3053\u3067 async, await \u306e\u5b9f\u88c5\u306b\u623b\u308b\u3068\u3001await \u306f\u305f\u3060 Fiber.yield \u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u3060\u3051\u3001\u307e\u305f async \u3082\u5b9f\u884c\u3057\u305f\u3044\u51e6\u7406\u3092\u30d6\u30ed\u30c3\u30af\u3068\u3057\u3066\u53d7\u3051\u53d6\u3063\u3066 Fiber \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u51fa\u3057\u3001async_internal \u306b\u6e21\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3042\u308b\u4e8b\u304c\u308f\u304b\u308a\u307e\u3059\u3002\nasync_internal \u304c\u30e1\u30a4\u30f3\u306e\u30ed\u30b8\u30c3\u30af\u3067\u3059\u304c\u3001\u3053\u3053\u3082\u305d\u308c\u307b\u3069\u8907\u96d1\u306a\u4e8b\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u3002chain \u3068\u3044\u3046\u540d\u524d\u3067\u518d\u5e30\u7684\u306b\u5b9f\u884c\u3055\u308c\u308b Proc \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u6700\u5f8c\u306b chain.call \u3092\u547c\u3076\u3053\u3068\u3067\u518d\u5e30\u51e6\u7406\u3092\u958b\u59cb\u3057\u3066\u3044\u307e\u3059\u3002\nchain.call \u306e\u5f15\u6570\u306b fiber.resume \u3092\u66f8\u3044\u3066\u3044\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3001fiber.resume \u306b\u3088\u3063\u3066\u30b3\u30eb\u30fc\u30c1\u30f3\u306e\u51e6\u7406\u304c\u958b\u59cb\u3055\u308c\u3001Fiber.yield\uff08\u3064\u307e\u308a await\uff09\u304c\u547c\u3070\u308c\u308b\u307e\u3067\u51e6\u7406\u304c\u7d9a\u304d\u307e\u3059\u3002await \u306b\u51fa\u304f\u308f\u3059\u3068fiber.resume \u3092\u547c\u3073\u51fa\u3057\u305f\u5148\u306b\u5236\u5fa1\u304c\u8fd4\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u969b\u306b\u8fd4\u308a\u5024\u306f Promise \u3068\u306a\u3063\u3066\u3044\u3066\u3001\u305d\u308c\u304c chain \u306e\u5f15\u6570\u306b\u306a\u308a\u307e\u3059\u3002chain \u306e\u4e2d\u3067\u306f\u5f15\u6570\u306b\u5bfe\u3057\u3066 then \u3067\u7d9a\u304d\u306e\u51e6\u7406\u3092\u66f8\u3044\u3066\u3001\u518d\u3073 fiber.resume \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u3053\u306e\u6642\u3001fiber.resume \u306b\u521d\u671f\u5024\u3068\u3057\u3066\u6e21\u3057\u305f\u5024\u304c\u30b3\u30eb\u30fc\u30c1\u30f3\u306e\u51e6\u7406\u306e\u518d\u958b\u6642\u306b await \u306e\u8fd4\u308a\u5024\u3068\u3057\u3066\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\u4ee5\u4e0a\u306e\u69d8\u306a\u30d5\u30ed\u30fc\u306b\u3088\u3063\u3066\u3001async \u3068 await \u3092\u4f7f\u3046\u4e8b\u3067\u540c\u671f\u7684\u51e6\u7406\u306e\u69d8\u306b\u66f8\u304d\u306a\u304c\u3089\u3082\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u73fe\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3057\u305f\u30021\n\n\u307e\u3068\u3081\n\nES7 \u3067\u306e\u4ed5\u69d8\u7b56\u5b9a\u304c\u9032\u3081\u3089\u308c\u3066\u3044\u308b async/await \u3092\u4f7f\u3046\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u540c\u671f\u51e6\u7406\u3063\u307d\u3044 syntax \u3067\u8a18\u8ff0\u3067\u304d\u308b\nasync/await \u306f\u3001Generator \u3092\u30b3\u30eb\u30fc\u30c1\u30f3\u3068\u3057\u3066\u5229\u7528\u3057\u3001\u3055\u3089\u306b Promise \u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u4e8b\u3067\u5b9f\u73fe\u3067\u304d\u308b\n\u30b3\u30eb\u30fc\u30c1\u30f3\u306f\u3001 JavaScript \u4ee5\u5916\u306b\u3082 Ruby \u3084 Lua \u306a\u3069\u69d8\u3005\u306a\u8a00\u8a9e\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u6a5f\u80fd\u3067\u3042\u308b\u70ba\u3001\u69d8\u3005\u306a\u8a00\u8a9e\u3067 async/await \u306f\u5b9f\u73fe\u3067\u304d\u308b\uff08\u3068\u601d\u3046\uff09\n\n\n\u53c2\u8003\u8cc7\u6599\n\nstrawman:async_functions\nES7 \u306e Async/Await \u3092\u4f7f\u3063\u3066\u307f\u305f\nES6 Generator\u3092\u4f7f\u3063\u3066async/await\u3092\u5b9f\u88c5\u3059\u308b\u30e1\u30e2\n\n\n\n\n\nRuby \u7248 async \u306f Promise \u3092\u8fd4\u3055\u306a\u3044\u3068\u304b\u3001Promise \u304c\u305d\u3082\u305d\u3082 chaining \u3067\u304d\u306a\u3044\u3068\u304b\u7d30\u304b\u306a\u5dee\u7570\u306f\u3044\u308d\u3044\u308d\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u8fba\u306f API \u3092\u3069\u3046\u3059\u308b\u304b\u3068\u3044\u3046\u554f\u984c\u306a\u306e\u3067\u3001\u9069\u5b9c\u66f8\u304d\u63db\u3048\u308c\u3070\u8abf\u6574\u306f\u3067\u304d\u308b\u3068\u601d\u3063\u3066\u307e\u3059\u3002\u00a0\u21a9\n\n\n\n## Introduction\n\u7a81\u7136\u3067\u3059\u304c\u3001\u7686\u3055\u3093 async/await \u306f\u77e5\u3063\u3066\u3044\u307e\u3059\u304b\uff01\uff1f\nasync/await \u3068\u3044\u3048\u3070 ES7 \u3067\u306e\u4ed5\u69d8\u7b56\u5b9a\u306b\u5411\u3051\u3066\u8b70\u8ad6\u304c\u9032\u3081\u3089\u308c\u3066\u3044\u308b ECMAScript \u306e\u65b0\u6a5f\u80fd\u3067\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u540c\u671f\u51e6\u7406\u3063\u307d\u304f\u66f8\u304f\u4e8b\u304c\u3067\u304d\u307e\u3059\uff08\u30eb\u30fc\u30c4\u306f C# \u306easync/await \u3089\u3057\u3044\u3067\u3059\uff09\u3002\n\nasync/await \u306b\u3064\u3044\u3066\u7406\u89e3\u3092\u6df1\u3081\u308b\u70ba\u306b\u3001\u5b9f\u969b\u306b\uff08\u73fe\u5728\u63d0\u6848\u3055\u308c\u3066\u308b\u4ed5\u69d8\u3067\u306e\uff09\u4f7f\u3044\u65b9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4ee5\u4e0b\u306f http://wiki.ecmascript.org/doku.php?id=strawman:async_functions \u304b\u3089\u306e\u629c\u7c8b\u3067\u3059\u3002\n\n```javascript\n  1 var request = require('./request.js');\n  2 var headers = { 'User-Agent': 'lukehoban', 'Authorization': 'token 665021d813ad67942206d94c47d7947716d27f66' };\n  3\n  4 // Promise-returning asynchronous function\n  5 async function getCollaboratorImages(full_name) {\n  6   // any exceptions thrown here will propogate into try/catch in callers - same as synchronous\n  7   var url = 'https://api.github.com/repos/' + full_name + '/collaborators';\n  8   // await a promise-returning async HTTP GET - same as synchronous\n  9   var [response, body] = await request({url: url, headers: headers});\n 10   return JSON.parse(body).map(function(collab) {\n 11     return collab.avatar_url;\n 12   });\n 13 }\n```\n\n\u3061\u3087\u3063\u3068\u8907\u96d1\u3059\u304e\u308b\u4f8b\u306b\u306a\u3063\u3066\u307e\u3059\u304c\u3001\u6ce8\u76ee\u3059\u3079\u304d\u306f **9\u884c\u76ee** \u306e `var [response, body] = await request({url: url, headers: headers});` \u3067\u3059\u3002\u3053\u306e\u884c\u3067\u306f\u3001`request({url: url, headers: headers})` \u3067 http \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u3066\u3001\u305d\u306e\u7d50\u679c\u3092 `response, body` \u306b\u4ee3\u5165\u3057\u3066\u3044\u307e\u3059\u3002\u3055\u3089\u306b\u7d9a\u304f10\u884c\u76ee\u4ee5\u964d\u3067\u3001 `body` \u304c\u95a2\u6570\u306e\u8fd4\u308a\u5024\u306e\u751f\u6210\u306b\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u30b3\u30fc\u30c9\u3060\u3051\u3092\u898b\u3066\u3044\u308b\u3068\u30019\u884c\u76ee\u3067\u306f\u540c\u671f\u7684\u306b http request \u304c\u6295\u3052\u3089\u308c\u3001\u305d\u306e response \u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3092\u5f85\u3063\u3066\uff08Network IO \u3067\u30d6\u30ed\u30c3\u30af\u3057\u3066\uff09\u3001 `resopnse, body` \u306e\u4ee3\u5165\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u69d8\u306b\u898b\u3048\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u5b9f\u969b\u306b\u306f\u305d\u3046\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u5b9f\u306f\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u30b3\u30fc\u30c9\u3068\u7b49\u4fa1\u306b\u306a\u308a\u307e\u3059\u3002\n\n```javascript\n// Promise\u7248\n  1 var request = require('./request.js');\n  2 var headers = { 'User-Agent': 'lukehoban', 'Authorization': 'token 665021d813ad67942206d94c47d7947716d27f66' };\n  3\n  4 function getCollaboratorImages(full_name) {\n  5   var url = 'https://api.github.com/repos/' + full_name + '/collaborators';\n  6   return request({url: url, headers: headers}).then(function(value) {\n  7     var [response, body] = value;\n  8     JSON.parse(body).map(function(collab) {\n  9       return collab.avatar_url;\n 10     });\n 11   })\n 12 }\n```\n\nPromise \u304c\u4f7f\u308f\u308c\u3066\u3044\u3066\u3001\u898b\u6163\u308c\u305f\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306d\u3002\u30dd\u30a4\u30f3\u30c8\u306f `getCollaboratorImages` \u306e\u8fd4\u308a\u5024\u304c `Promise` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u3063\u3066\u3044\u308b\u4e8b\u3001\u307e\u305f `request({url: url, headers: headers})` \u304c\u8fd4\u3059 `Promise` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u306f `then` \u3067\u7d9a\u304d\u306e\u51e6\u7406\u3092\u66f8\u3044\u3066\u3044\u308b\u4e8b\u3067\u3059\u3002`then` \u306b\u3088\u3063\u3066 callback \u306e\u51e6\u7406\u3092\u767b\u9332\u3057\u3066\u3044\u308b\u70ba\u3001\u5b8c\u5168\u306b\u975e\u540c\u671f\u306b\u5b9f\u884c\u3055\u308c\u308b\u30b3\u30fc\u30c9\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nPromise \u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u3068 async/await \u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u304c\u3001\u306a\u305c\u7b49\u4fa1\u3068\u306a\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n\u9375\u306b\u306a\u308b\u306e\u306f\u3001ES6\u3067\u5c0e\u5165\u3055\u308c\u305f `Generator` \u3068\u3044\u3046\u6a5f\u80fd\u3067\u3059\u3002\n\n## ES6 \u3067\u3082 Generator \u3068 Promise \u3092\u4f7f\u3046\u3068 async/await \u304c\u5b9f\u88c5\u3067\u304d\u308b\n\u5b9f\u306f\u3001Generator \u3068 Promise \u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u4e8b\u3067 async/await \uff08\u3068\u540c\u7b49\u306e\u6a5f\u80fd\u3092\u679c\u305f\u3059\u95a2\u6570\uff09\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002\n\u3053\u308c\u306b\u95a2\u3057\u3066\u306f\u3001 [ES6 Generator\u3092\u4f7f\u3063\u3066async/await\u3092\u5b9f\u88c5\u3059\u308b\u30e1\u30e2](http://blog.h13i32maru.jp/entry/2015/01/02/225457) \u304c\u8a73\u3057\u3044\u306e\u3067\u8208\u5473\u304c\u6e67\u3044\u305f\u4eba\u306f\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4e0a\u8a18\u8a18\u4e8b\u3067\u6ce8\u76ee\u3059\u3079\u304d\u306a\u306e\u306f\u3001Generator \u3092\u30b3\u30eb\u30fc\u30c1\u30f3\u3068\u3057\u3066\u4f7f\u3063\u3066\u3044\u3066\u3001Promise\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u3044\u308b\u3053\u3068\u3067\u3059\u3002\u3053\u306e2\u3064\u304c async/await \u3092\u5b9f\u88c5\u3059\u308b\u70ba\u306b\u5fc5\u8981\u306a\u30d1\u30fc\u30c4\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u30b3\u30eb\u30fc\u30c1\u30f3\u306f\u3001\u96d1\u306b\u8aac\u660e\u3059\u308b\u3068\u300c\u51e6\u7406\u306e\u4e2d\u65ad\u3084\u518d\u958b\u304c\u53ef\u80fd\u306a\u624b\u7d9a\u304d\u51e6\u7406\u300d\u3092\u6307\u3057\u307e\u3059\u3002\u6709\u540d\u3069\u3053\u308d\u3060\u3068\u3001Lua \u3084 C# \u304c\u8a00\u8a9e\u30ec\u30d9\u30eb\u3067\u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u30b3\u30eb\u30fc\u30c1\u30f3\u306e\u547c\u3073\u51fa\u3057\u5074\u3068\u30b3\u30eb\u30fc\u30c1\u30f3\u5074\u3067\u5236\u5fa1\u3092\u884c\u304d\u6765\u3059\u308b\u4e8b\u304c\u51fa\u6765\u3066\u3001\u305d\u306e\u969b\u306b\u5024\u306e\u53d7\u3051\u6e21\u3057\u3082\u3067\u304d\u308b\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002\n\n\u9006\u306b\u8a00\u3048\u3070\u3001\u30b3\u30eb\u30fc\u30c1\u30f3\u3068 Promise \u304c\u3042\u308c\u3070 async/await \u306f\u5b9f\u88c5\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\u3055\u3066\u3001\u3053\u3053\u3067\u672c\u984c\u306b\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001 Ruby \u3067 \u30b3\u30eb\u30fc\u30c1\u30f3\u3068\u3044\u3048\u3070 `Fiber` \u3067\u3059\u3088\u306d\uff1f\n\u3068\u3044\u3046\u4e8b\u3067\u3001`Fiber` \u3092\u4f7f\u3063\u3066\u3001\u7c21\u5358\u306b async/await \u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## Ruby \u3067 Fiber \u3092\u4f7f\u3063\u3066 async/await \u3092\u5b9f\u88c5\u3059\u308b\n\u305d\u308c\u3067\u306f\u3001Ruby \u3067 async/await \u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30eb\u5b9f\u88c5\u306a\u306e\u3067\u3001\u4f8b\u5916\u306e\u767a\u751f\u306f\u8003\u616e\u305b\u305a\u3001`Promise` \u3082\u4ee5\u4e0b\u306e\u69d8\u306a `initialiize` \u3068 `then` \u3060\u3051\u304c\u5b9a\u7fa9\u3055\u308c\u305f\u7c21\u5358\u306a\u3082\u306e\u3092\u8003\u3048\u307e\u3059\u3002\n\n```ruby\n  1 class Promise\n  2   def initialize(callback)\n  3     @callback = callback\n  4   end\n  5\n  6   def then(resolve = ->() {}, reject = ->() {})\n  7     @callback.call(resolve, reject)\n  8   end\n  9 end\n```\n\n\u3053\u308c\u306f\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u69d8\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n```ruby\n  1 require 'eventmachine'\n  2\n  3 def sleep(sec)\n  4   Promise.new(->(resolve, reject) {\n  5     EM.add_timer(sec) do\n  6       resolve.call('you sleep ' + sec.to_s)\n  7     end\n  8   })\n  9 end\n 10\n 11 EM.run do\n 12   sleep(0.3).then(->(value) {\n 13     p value\n 14   })\n 15   p 'start'\n 16 end\n 17 #=> \"start\"\n 18 #=> \"you sleep 0.3\"\n```\n\n`sleep` \u30e1\u30bd\u30c3\u30c9\u306e \u8fd4\u308a\u5024\u3067\u3042\u308b `Promise` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3001`then` \u3067\u7d9a\u304d\u306e\u51e6\u7406\uff08callback\uff09\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002`sleep` \u306e\u52d5\u4f5c\u304c\u0010\u300c\u6e21\u3055\u308c\u305f\u6570\u5b57\u306e\u79d2\u6570\u3060\u3051\u5f85\u3063\u3066\u304b\u3089\u3001`then` \u3067\u767b\u9332\u3055\u308c\u305f callback \u3092\u5b9f\u884c\u3059\u308b\u300d\u3068\u3044\u3046\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u70ba\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u4e8b\u9805\u3059\u308b\u306815\u884c\u76ee\u306e `p 'start'` \u3067 `\"start\"` \u304c\u51fa\u529b\u3055\u308c\u3066\u304b\u3089\u300113\u884c\u76ee\u306e `p value` \u3067 `\"you sleep 0.3\"` \u304c\u51fa\u529b\u3055\u308c\u307e\u3059\uff08\u5c1a\u3001\u5373\u6642 return \u3057\u3066\u304b\u3089\u767b\u9332\u3057\u305f callback \u3092\u5b9f\u884c\u3059\u308b\u3068\u3044\u3046\u52d5\u4f5c\u3092\u5b9f\u73fe\u3059\u308b\u70ba\u306b `EventMachine` \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002`EM.run` \u306b\u6e21\u3057\u305f\u30d6\u30ed\u30c3\u30af\u306e\u4e2d\u3067\u306f\u69d8\u3005\u306a non-blocking api \u304c\u4f7f\u3048\u3066\u3001\u4f8b\u3048\u3070\u4e0a\u8a18\u306e\u4f8b\u3067\u306f JS \u306e `setTimeout` \u7684\u306a\u632f\u308b\u821e\u3044\u3092\u3059\u308b `EM.add_timer` \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\uff09\u3002\n\n\u3055\u3089\u306b `Promise` \u3092\u8fd4\u3059\u5225\u306e\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u69d8\u306a `decorate_message` \u3092\u5b9a\u7fa9\u3057\u3066\u3001sleep \u306b\u7d9a\u3051\u3066\u4f7f\u3046 `func` \u3092\u8003\u3048\u307e\u3059\uff08\u50d5\u304c\u96d1\u306b\u5b9a\u7fa9\u3057\u305f `Promise` \u306e `then` \u30e1\u30bd\u30c3\u30c9\u306f `Promise` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3055\u306a\u3044\u70ba\u3001chaining \u306f\u3067\u304d\u3066\u307e\u305b\u3093\u304c\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\uff09\n\n```ruby\n  1 def decorate_message(message)\n  2   Promise.new(->(resolve, reject) {\n  3     http = EM::HttpRequest.new('http://google.com/').get\n  4     http.callback {\n  5       resolve.call(message + ': ' + http.response[0..100])\n  6     }\n  7   })\n  8 end\n```\n\n```ruby\n# use Promise\n  1 def func(time)\n  2   sleep(time).then(->(message) {\n  3     p message\n  4     decorate_message(message).then(->(decorated_message) {\n  5       p decorated_message\n  6     })\n  7   })\n  8 end\n  9\n 10 EM.run do\n 11   func(0.3)\n 12   p 'start'\n 13 end\n 14 #=> \"start\"\n 15 #=> \"you sleep 0.3\"\n 16 #=> \"you sleep 0.3: <HTML><HEAD><meta http-equiv=\\\"content-type\\\" content=\\\"text/html;charset=utf-8\\\">\\n<TITLE>302 Moved</TITL\"\n```\n\n\u3053\u306e `func` \u3092\u4eca\u304b\u3089\u5b9a\u7fa9\u3059\u308b `async`, `awai` \u30e1\u30bd\u30c3\u30c9\u3092\u3064\u304b\u3063\u3066\u66f8\u304d\u63db\u3048\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002`sleep` \u3084 `decorate\u306a\u3093\u3060\u304b\u305d\u308c\u3063\u307d\u304f\u898b\u3048\u307e\u3059\u306d\uff01\uff01\n\n```ruby\n# use async/await\n  1 async :asyncFunc do |time|\n  2   message = await sleep(time)\n  3   p message\n  4   decorate_message = await decorate_message(message)\n  5   p decorate_message\n  6 end\n  7\n  8 EM.run do\n  9   asyncFunc(0.3)\n 10   p 'start'\n 11 end\n 12 #=> \"start\"\n 13 #=> \"you sleep 0.3\"\n 14 #=> \"you sleep 0.3: <HTML><HEAD><meta http-equiv=\\\"content-type\\\" content=\\\"text/html;charset=utf-8\\\">\\n<TITLE>302 Moved</TITL\"\n```\n\n\u6b21\u306b\u3001\u3053\u3053\u3067\u4f7f\u3063\u305f `async` \u30e1\u30bd\u30c3\u30c9\u3068 `await` \u30e1\u30bd\u30c3\u30c9\u306e\u5b9f\u88c5\u3092\u898b\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n### Fiber \u3092\u4f7f\u3063\u305f async/await \u306e\u5b9f\u88c5\n\u4e00\u756a\u30b7\u30f3\u30d7\u30eb\u306a\u4f8b\u3068\u3057\u3066\u3001 `Promise` \u306e `then` \u3067 `resolve` \u3060\u3051\u304c\u6307\u5b9a\u3055\u308c\u308b\u30b1\u30fc\u30b9\u3092\u8003\u3048\u308b\uff08\u304b\u3064\u4f8b\u5916\u306e\u767a\u751f\u3082\u8003\u616e\u3057\u306a\u3044\uff09\u3068\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3067 async/await \u304c\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\u305f\u3063\u305f19\u884c\u306e\u77ed\u3044\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n```ruby\n# implementation of async/await\n  1 def async_internal(fiber)\n  2   chain = ->(result) {\n  3     return if result.class != Promise\n  4     result.then(->(val) {\n  5       chain.call(fiber.resume(val))\n  6     })\n  7   }\n  8   chain.call(fiber.resume)\n  9 end\n 10\n 11 def async(method_name, &block)\n 12   define_method method_name, ->(*args) {\n 13     async_internal(Fiber.new { block.call(*args) })\n 14   }\n 15 end\n 16\n 17 def await(promise)\n 18   Fiber.yield promise\n 19 end\n```\n\n\u6ce8\u76ee\u3059\u308b\u30dd\u30a4\u30f3\u30c8\u306f **16\u884c\u76ee** \u306e `Fiber.new` \u3068\u3001 **5\u884c\u76ee** \u306e `fiber.resume` \u3001 **21\u884c\u76ee** \u306e `Fiber.yield` \u3067\u3059\u3002`Fiber` \u306f\u30b3\u30eb\u30fc\u30c1\u30f3\u306e\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3001 `Fiber.new` \u306b\u30b3\u30eb\u30fc\u30c1\u30f3\u306b\u3057\u305f\u3044\u51e6\u7406\u3092\u30d6\u30ed\u30c3\u30af\u3067\u6e21\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\n\n`Fiber` \u306e\u6319\u52d5\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3068\u30a4\u30e1\u30fc\u30b8\u3057\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002`Fiber.new` \u306b\u6e21\u3057\u305f\u51e6\u7406\u306f\u3001\u751f\u6210\u3057\u305f `fiber` \u306b\u5bfe\u3057\u3066 `resume` \u3092\u547c\u3073\u51fa\u3059\u4e8b\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u3001 **13\u884c\u76ee** \u3067 `fiber.resume(i)` \u3092\u5b9f\u884c\u3057\u3066\u304a\u308a\u3001\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067 `\"init fiber\"` \u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\u305f\u3060\u3057\u3001**5\u884c\u76ee** \u3067 `Fiber.yield` \u304c\u547c\u3070\u308c\u308b\u3068\u3001\u51e6\u7406\u304c\u30b9\u30c8\u30c3\u30d7\u3057\u3066\u5236\u5fa1\u306f **13\u884c\u76ee** \u306b\u623b\u308a\u307e\u3059\u3002\u3053\u306e\u69d8\u306b\u3001\u30b3\u30eb\u30fc\u30c1\u30f3\u306e\u300c\u51e6\u7406\u3092\u9014\u4e2d\u3067\u629c\u3051\u308b\u300d\u6a5f\u80fd\u306f `Fiber.yield` \u306b\u3088\u3063\u3066\u5b9f\u73fe\u3055\u308c\u307e\u3059\u3002\n\n```ruby\n# fiber example\n  1 fiber = Fiber.new do\n  2   p 'init fiber'\n  3   n = 0\n  4   loop do\n  5     result = Fiber.yield(n)\n  6     p \"after yiled: #{result}\"\n  7     n += 1\n  8   end\n  9 end\n 10\n 11 i = 10\n 12 4.times do\n 13   result = fiber.resume(i)\n 14   p \"after resume: #{result}\"\n 15   i += 1\n 16 end\n 17 # >> \"init fiber\"\n 18 # >> \"after resume: 0\"\n 19 # >> \"after yiled: 11\"\n 20 # >> \"after resume: 1\"\n 21 # >> \"after yiled: 12\"\n 22 # >> \"after resume: 2\"\n 23 # >> \"after yiled: 13\"\n 24 # >> \"after resume: 3\"\n```\n\n`Fiber.yield` \u306b\u306f\u5f15\u6570\u3092\u6e21\u3059\u4e8b\u304c\u51fa\u6765\u3066\u3001\u6e21\u3057\u305f\u5f15\u6570\u306f `fiber.resume` \u306e\u8fd4\u308a\u5024\u3068\u306a\u308a\u307e\u3059\u3002\u9006\u306b\u3001`fiber.resume` \u306b\u5f15\u6570\u3092\u6e21\u3059\u4e8b\u3082\u51fa\u6765\u3066\u3001\u3053\u306e\u5834\u5408\u306f `Fiber.yield` \u304b\u3089\u51e6\u7406\u3092\u518d\u958b\u3059\u308b\u969b\u306b\u305d\u306e\u8fd4\u308a\u5024\u3068\u3057\u3066\u4f7f\u3046\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\u8fd4\u308a\u5024\u306e\u95a2\u4fc2\u306f\u5c11\u3057\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u304c\u3001\u3042\u304f\u307e\u3067\u300c`Fiber.yield` \u304c\u901a\u5e38\u306e `return` \u306b\u76f8\u5f53\u3059\u308b\u3082\u306e\uff08\u3088\u3063\u3066 `fiber.resume` \u306e\u8fd4\u308a\u5024\u306b\u306a\u308b\uff09\u300d\u3001\u300c`fiber.resume` \u306e2\u56de\u76ee\u4ee5\u964d\u306e\u547c\u3073\u51fa\u3057\u306f\u51e6\u7406\u306e\u518d\u958b\u3092\u610f\u5473\u3057\u3066\u3044\u3066\u3001\u518d\u958b\u6642\u306b\u521d\u671f\u5024\u3092\u6e21\u3059\u4e8b\u304c\u3067\u304d\u308b\u300d\u307f\u305f\u3044\u306b\u8003\u3048\u3066\u304a\u304f\u3068\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\uff08\u3088\u304f\u898b\u308b\u3068 `fiber.resume` \u306e\u6700\u521d\u306e\u5f15\u6570\u306f\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u4e8b\u304c\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\uff09\n\n`Fiber` \u3092\u4f7f\u3046\u4e8b\u3067\u3001 `Fiber.yield` \u3068 `fiber.resume` \u3067\u5236\u5fa1\u3092\u884c\u3063\u305f\u308a\u6765\u305f\u308a\u3057\u306a\u304c\u3089\u5354\u8abf\u3057\u3066\u4f5c\u696d\u3092\u9032\u3081\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u3053\u3067 `async`, `await` \u306e\u5b9f\u88c5\u306b\u623b\u308b\u3068\u3001`await` \u306f\u305f\u3060 `Fiber.yield` \u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u3060\u3051\u3001\u307e\u305f `async` \u3082\u5b9f\u884c\u3057\u305f\u3044\u51e6\u7406\u3092\u30d6\u30ed\u30c3\u30af\u3068\u3057\u3066\u53d7\u3051\u53d6\u3063\u3066 `Fiber` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u51fa\u3057\u3001`async_internal` \u306b\u6e21\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3042\u308b\u4e8b\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n`async_internal` \u304c\u30e1\u30a4\u30f3\u306e\u30ed\u30b8\u30c3\u30af\u3067\u3059\u304c\u3001\u3053\u3053\u3082\u305d\u308c\u307b\u3069\u8907\u96d1\u306a\u4e8b\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u3002`chain` \u3068\u3044\u3046\u540d\u524d\u3067\u518d\u5e30\u7684\u306b\u5b9f\u884c\u3055\u308c\u308b `Proc` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u6700\u5f8c\u306b `chain.call` \u3092\u547c\u3076\u3053\u3068\u3067\u518d\u5e30\u51e6\u7406\u3092\u958b\u59cb\u3057\u3066\u3044\u307e\u3059\u3002\n\n`chain.call` \u306e\u5f15\u6570\u306b `fiber.resume` \u3092\u66f8\u3044\u3066\u3044\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3067\u3001`fiber.resume` \u306b\u3088\u3063\u3066\u30b3\u30eb\u30fc\u30c1\u30f3\u306e\u51e6\u7406\u304c\u958b\u59cb\u3055\u308c\u3001`Fiber.yield`\uff08\u3064\u307e\u308a `await`\uff09\u304c\u547c\u3070\u308c\u308b\u307e\u3067\u51e6\u7406\u304c\u7d9a\u304d\u307e\u3059\u3002`await` \u306b\u51fa\u304f\u308f\u3059\u3068`fiber.resume` \u3092\u547c\u3073\u51fa\u3057\u305f\u5148\u306b\u5236\u5fa1\u304c\u8fd4\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u969b\u306b\u8fd4\u308a\u5024\u306f `Promise` \u3068\u306a\u3063\u3066\u3044\u3066\u3001\u305d\u308c\u304c `chain` \u306e\u5f15\u6570\u306b\u306a\u308a\u307e\u3059\u3002`chain` \u306e\u4e2d\u3067\u306f\u5f15\u6570\u306b\u5bfe\u3057\u3066 `then` \u3067\u7d9a\u304d\u306e\u51e6\u7406\u3092\u66f8\u3044\u3066\u3001\u518d\u3073 `fiber.resume` \u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u3053\u306e\u6642\u3001`fiber.resume` \u306b\u521d\u671f\u5024\u3068\u3057\u3066\u6e21\u3057\u305f\u5024\u304c\u30b3\u30eb\u30fc\u30c1\u30f3\u306e\u51e6\u7406\u306e\u518d\u958b\u6642\u306b `await` \u306e\u8fd4\u308a\u5024\u3068\u3057\u3066\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u306e\u69d8\u306a\u30d5\u30ed\u30fc\u306b\u3088\u3063\u3066\u3001`async` \u3068 `await` \u3092\u4f7f\u3046\u4e8b\u3067\u540c\u671f\u7684\u51e6\u7406\u306e\u69d8\u306b\u66f8\u304d\u306a\u304c\u3089\u3082\u975e\u540c\u671f\u51e6\u7406\u3092\u5b9f\u73fe\u3059\u308b\u4e8b\u304c\u3067\u304d\u307e\u3057\u305f\u3002[^1]\n\n## \u307e\u3068\u3081\n- ES7 \u3067\u306e\u4ed5\u69d8\u7b56\u5b9a\u304c\u9032\u3081\u3089\u308c\u3066\u3044\u308b async/await \u3092\u4f7f\u3046\u3068\u3001\u975e\u540c\u671f\u51e6\u7406\u3092\u540c\u671f\u51e6\u7406\u3063\u307d\u3044 syntax \u3067\u8a18\u8ff0\u3067\u304d\u308b\n- async/await \u306f\u3001Generator \u3092\u30b3\u30eb\u30fc\u30c1\u30f3\u3068\u3057\u3066\u5229\u7528\u3057\u3001\u3055\u3089\u306b Promise \u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u4e8b\u3067\u5b9f\u73fe\u3067\u304d\u308b\n- \u30b3\u30eb\u30fc\u30c1\u30f3\u306f\u3001 JavaScript \u4ee5\u5916\u306b\u3082 Ruby \u3084 Lua \u306a\u3069\u69d8\u3005\u306a\u8a00\u8a9e\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u6a5f\u80fd\u3067\u3042\u308b\u70ba\u3001\u69d8\u3005\u306a\u8a00\u8a9e\u3067 async/await \u306f\u5b9f\u73fe\u3067\u304d\u308b\uff08\u3068\u601d\u3046\uff09\n\n## \u53c2\u8003\u8cc7\u6599\n- [strawman:async_functions](http://wiki.ecmascript.org/doku.php?id=strawman:async_functions)\n- [ES7 \u306e Async/Await \u3092\u4f7f\u3063\u3066\u307f\u305f](http://qiita.com/mohayonao/items/435665065d997a4cc50c)\n- [ES6 Generator\u3092\u4f7f\u3063\u3066async/await\u3092\u5b9f\u88c5\u3059\u308b\u30e1\u30e2](http://blog.h13i32maru.jp/entry/2015/01/02/225457)\n\n[^1]: Ruby \u7248 `async` \u306f `Promise` \u3092\u8fd4\u3055\u306a\u3044\u3068\u304b\u3001`Promise` \u304c\u305d\u3082\u305d\u3082 chaining \u3067\u304d\u306a\u3044\u3068\u304b\u7d30\u304b\u306a\u5dee\u7570\u306f\u3044\u308d\u3044\u308d\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u8fba\u306f API \u3092\u3069\u3046\u3059\u308b\u304b\u3068\u3044\u3046\u554f\u984c\u306a\u306e\u3067\u3001\u9069\u5b9c\u66f8\u304d\u63db\u3048\u308c\u3070\u8abf\u6574\u306f\u3067\u304d\u308b\u3068\u601d\u3063\u3066\u307e\u3059\u3002\n", "tags": ["es7", "Ruby", "async", "coroutine", "JavaScript"]}