{"context": "\u8abf\u5b50\u306f\u4e57\u308b\u306e\u3082\u306e\u3063\u3066\u8ab0\u304b\u304c\u8a00\u3063\u3066\u305f\u3002\n\u3000((\u30fd|\uff65\u2200\uff65|\u30ce\n\u3000\u3000\u3000|\uff3f\uff3f|\u3000))\n\u3000\u3000\u3000 \uff5c\uff5c\n\u3000\u3000\u3000 \u8abf\u5b50\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n\u300cEFS\u3042\u308b\u306a\u3089AutoScaling\u3057\u305f\u3044\u3088\u306d\u30fc\u300d\u3068\u601d\u3046\u308f\u3051\u3067\u3059\u3002\n\u3067\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u307f\u3066\u305f\u3089\u666e\u901a\u306bCloudFormation\u306e\u30b5\u30f3\u30d7\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3042\u3063\u305f\u3093\u3067\u7acb\u3061\u4e0a\u3052\u3066\u307f\u307e\u3057\u305f\u3002\nAmazon Elastic File System \u30b5\u30f3\u30d7\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 - AWS CloudFormation : http://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/quickref-efs.html\n$ kumogata create template.json efsdemo  \\\n -s AWS_SECRET_KEY \\\n -k AWS_ACCESS_KEY \\\n -r  us-east-1 \\\n -p \"KeyName=KEY_FILE_NAME,AsgMaxSize=1\" \\\n --capabilities=CAPABILITY_IAM\n\n\n\u7acb\u3061\u4e0a\u3052\u305f\u7d50\u679c\n\nEC2\u306f\u5168\u90e8Auto Scaling Group\u304b\u3089\u7acb\u3061\u4e0a\u304c\u308b\u5b9f\u88c5\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\u305b\u3063\u304b\u304f\u306a\u306e\u30673\u53f0\u304f\u3089\u3044\u306b\u5897\u3084\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\nSSH\u3067\u4e2d\u8eab\u3092\u898b\u308b\n\n/myEFSvolume\u306bEFS\u304c\u30de\u30a6\u30f3\u30c8\u3055\u308c\u3066\u307e\u3059\u3002\n\u9069\u5f53\u306b\u5404\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u3057\u3063\u304b\u308a\u540c\u671f\u3055\u308c\u3066\u307e\u3059\u3002\n\n\nCFN\u629c\u304d\u51fa\u3057\n\u3064\u3044\u3067\u306b\u3001\u30b3\u30fc\u30c9\u8aad\u307f\u305f\u3044\u3068\u3044\u3046\u4eba\u5411\u3051\u306bEFS / AutoScaling\u90e8\u5206\u3060\u3051\u629c\u304d\u51fa\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nEFS\u8a2d\u5b9a\u90e8\u5206\u306eJSON\n    \"MountTargetSecurityGroup\": {\n      \"Type\": \"AWS::EC2::SecurityGroup\",\n      \"Properties\": {\n        \"VpcId\": { \"Ref\": \"VPC\" },\n        \"GroupDescription\": \"Security group for mount target\",\n        \"SecurityGroupIngress\": [\n          {\n            \"IpProtocol\": \"tcp\",\n            \"FromPort\": \"2049\",\n            \"ToPort\": \"2049\",\n            \"CidrIp\": \"0.0.0.0/0\"\n          }\n        ]\n      }\n    },\n    \"FileSystem\": {\n      \"Type\": \"AWS::EFS::FileSystem\",\n      \"Properties\": {\n        \"FileSystemTags\": [\n          {\n            \"Key\": \"Name\",\n            \"Value\": { \"Ref\" : \"VolumeName\" }\n          }\n        ]\n      }\n    },\n    \"MountTarget\": {\n      \"Type\": \"AWS::EFS::MountTarget\",\n      \"Properties\": {\n        \"FileSystemId\": { \"Ref\": \"FileSystem\" },\n        \"SubnetId\": { \"Ref\": \"Subnet\" },\n        \"SecurityGroups\": [ { \"Ref\": \"MountTargetSecurityGroup\" } ]\n      }\n    },\n\n\nAutoScaling\u90e8\u5206\u306eJSON\n    \"LaunchConfiguration\": {\n      \"Type\": \"AWS::AutoScaling::LaunchConfiguration\",\n      \"Metadata\" : {\n        \"AWS::CloudFormation::Init\" : {\n          \"configSets\" : {\n            \"MountConfig\" : [ \"setup\", \"mount\" ]\n          },\n          \"setup\" : {\n            \"packages\" : {\n              \"yum\" : {\n                \"nfs-utils\" : []\n              }\n            },\n            \"files\" : {\n              \"/home/ec2-user/post_nfsstat\" : {\n                \"content\" : { \"Fn::Join\" : [ \"\", [\n                      \"#!/bin/bash\\n\",\n                      \"\\n\",\n                      \"INPUT=\\\"$(cat)\\\"\\n\",\n                      \"CW_JSON_OPEN='{ \\\"Namespace\\\": \\\"EFS\\\", \\\"MetricData\\\": [ '\\n\",\n                      \"CW_JSON_CLOSE=' ] }'\\n\",\n                      \"CW_JSON_METRIC=''\\n\",\n                      \"METRIC_COUNTER=0\\n\",\n                      \"\\n\",\n                      \"for COL in 1 2 3 4 5 6; do\\n\",\n                      \"\\n\",\n                      \" COUNTER=0\\n\",\n                      \" METRIC_FIELD=$COL\\n\",\n                      \" DATA_FIELD=$(($COL+($COL-1)))\\n\",\n                      \"\\n\",\n                      \" while read line; do\\n\",\n                      \"   if [[ COUNTER -gt 0 ]]; then\\n\",\n                      \"\\n\",\n                      \"     LINE=`echo $line | tr -s ' ' `\\n\",\n                      \"     AWS_COMMAND=\\\"aws cloudwatch put-metric-data --region \", { \"Ref\": \"AWS::Region\" }, \"\\\"\\n\",\n                      \"     MOD=$(( $COUNTER % 2))\\n\",\n                      \"\\n\",\n                      \"     if [ $MOD -eq 1 ]; then\\n\",\n                      \"       METRIC_NAME=`echo $LINE | cut -d ' ' -f $METRIC_FIELD`\\n\",\n                      \"     else\\n\",\n                      \"       METRIC_VALUE=`echo $LINE | cut -d ' ' -f $DATA_FIELD`\\n\",\n                      \"     fi\\n\",\n                      \"\\n\",\n                      \"     if [[ -n \\\"$METRIC_NAME\\\" && -n \\\"$METRIC_VALUE\\\" ]]; then\\n\",\n                      \"       INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\\n\",\n                      \"       CW_JSON_METRIC=\\\"$CW_JSON_METRIC { \\\\\\\"MetricName\\\\\\\": \\\\\\\"$METRIC_NAME\\\\\\\", \\\\\\\"Dimensions\\\\\\\": [{\\\\\\\"Name\\\\\\\": \\\\\\\"InstanceId\\\\\\\", \\\\\\\"Value\\\\\\\": \\\\\\\"$INSTANCE_ID\\\\\\\"} ], \\\\\\\"Value\\\\\\\": $METRIC_VALUE },\\\"\\n\",\n                      \"       unset METRIC_NAME\\n\",\n                      \"       unset METRIC_VALUE\\n\",\n                      \"\\n\",\n                      \"       METRIC_COUNTER=$((METRIC_COUNTER+1))\\n\",\n                      \"       if [ $METRIC_COUNTER -eq 20 ]; then\\n\",\n                      \"         # 20 is max metric collection size, so we have to submit here\\n\",\n                      \"         aws cloudwatch put-metric-data --region \", { \"Ref\": \"AWS::Region\" }, \" --cli-input-json \\\"`echo $CW_JSON_OPEN ${CW_JSON_METRIC%?} $CW_JSON_CLOSE`\\\"\\n\",\n                      \"\\n\",\n                      \"         # reset\\n\",\n                      \"         METRIC_COUNTER=0\\n\",\n                      \"         CW_JSON_METRIC=''\\n\",\n                      \"       fi\\n\",\n                      \"     fi  \\n\",\n                      \"\\n\",\n                      \"\\n\",\n                      \"\\n\",\n                      \"     COUNTER=$((COUNTER+1))\\n\",\n                      \"   fi\\n\",\n                      \"\\n\",\n                      \"   if [[ \\\"$line\\\" == \\\"Client nfs v4:\\\" ]]; then\\n\",\n                      \"     # the next line is the good stuff \\n\",\n                      \"     COUNTER=$((COUNTER+1))\\n\",\n                      \"   fi\\n\",\n                      \" done <<< \\\"$INPUT\\\"\\n\",\n                      \"done\\n\",\n                      \"\\n\",\n                      \"# submit whatever is left\\n\",\n                      \"aws cloudwatch put-metric-data --region \", { \"Ref\": \"AWS::Region\" }, \" --cli-input-json \\\"`echo $CW_JSON_OPEN ${CW_JSON_METRIC%?} $CW_JSON_CLOSE`\\\"\"\n                    ] ] },\n                \"mode\": \"000755\",\n                \"owner\": \"ec2-user\",\n                \"group\": \"ec2-user\"\n              },\n              \"/home/ec2-user/crontab\" : {\n                \"content\" : { \"Fn::Join\" : [ \"\", [\n                  \"* * * * * /usr/sbin/nfsstat | /home/ec2-user/post_nfsstat\\n\"\n                ] ] },\n                \"owner\": \"ec2-user\",\n                \"group\": \"ec2-user\"\n              }\n            },\n            \"commands\" : {\n              \"01_createdir\" : {\n                \"command\" : {\"Fn::Join\" : [ \"\", [ \"mkdir /\", { \"Ref\" : \"MountPoint\" }]]}\n              }\n            }\n          },\n          \"mount\" : {\n            \"commands\" : {\n              \"01_mount\" : {\n                \"command\" : { \"Fn::Join\": [ \"\", [\n                  \"mount -t nfs4 $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).\",\n                  { \"Ref\": \"FileSystem\" },\n                  \".efs.\",\n                  { \"Ref\": \"AWS::Region\" },\n                  \".amazonaws.com:/ /\",\n                  {\"Ref\" : \"MountPoint\" }\n                ] ] }\n              },\n              \"02_permissions\" : {\n                \"command\" : {\"Fn::Join\" : [ \"\", [ \"chown ec2-user:ec2-user /\", { \"Ref\" : \"MountPoint\" }]]}\n              }\n            }\n          }\n        }\n      },\n      \"Properties\": {\n        \"AssociatePublicIpAddress\" : true,\n        \"ImageId\": {\n          \"Fn::FindInMap\": [ \"AWSRegionArch2AMI\", { \"Ref\": \"AWS::Region\" }, {\n            \"Fn::FindInMap\": [ \"AWSInstanceType2Arch\", { \"Ref\": \"InstanceType\" }, \"Arch\" ]\n          } ]\n        },\n        \"InstanceType\": { \"Ref\": \"InstanceType\" },\n        \"KeyName\": { \"Ref\": \"KeyName\" },\n        \"SecurityGroups\": [ { \"Ref\": \"InstanceSecurityGroup\" } ],\n        \"IamInstanceProfile\" : { \"Ref\" : \"CloudWatchPutMetricsInstanceProfile\" },\n        \"UserData\"       : { \"Fn::Base64\" : { \"Fn::Join\" : [\"\", [\n             \"#!/bin/bash -xe\\n\",\n             \"yum update -y aws-cfn-bootstrap\\n\",\n\n             \"/opt/aws/bin/cfn-init -v \",\n             \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\n             \"         --resource LaunchConfiguration \",\n             \"         --configsets MountConfig \",\n             \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\",\n\n             \"crontab /home/ec2-user/crontab\\n\",\n\n             \"/opt/aws/bin/cfn-signal -e $? \",\n             \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\n             \"         --resource AutoScalingGroup \",\n             \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\"\n        ]]}}\n      }\n    },\n    \"AutoScalingGroup\": {\n      \"Type\": \"AWS::AutoScaling::AutoScalingGroup\",\n      \"DependsOn\": [\"MountTarget\", \"GatewayToInternet\"],\n      \"CreationPolicy\" : {\n        \"ResourceSignal\" : {\n          \"Timeout\" : \"PT15M\",\n          \"Count\"   : { \"Ref\": \"AsgMaxSize\" }\n        }\n      },\n      \"Properties\": {\n        \"VPCZoneIdentifier\": [ { \"Ref\": \"Subnet\" } ],\n        \"LaunchConfigurationName\": { \"Ref\": \"LaunchConfiguration\" },\n        \"MinSize\": \"1\",\n        \"MaxSize\": { \"Ref\": \"AsgMaxSize\" },\n        \"DesiredCapacity\": { \"Ref\": \"AsgMaxSize\" },\n        \"Tags\": [ {\n          \"Key\": \"Name\",\n          \"Value\": \"EFS FileSystem Mounted Instance\",\n          \"PropagateAtLaunch\": \"true\"\n        } ]\n      }\n    }\n    ```\n\n\n\n\n\u8abf\u5b50\u306f\u4e57\u308b\u306e\u3082\u306e\u3063\u3066\u8ab0\u304b\u304c\u8a00\u3063\u3066\u305f\u3002\n\n```\n\u3000((\u30fd|\uff65\u2200\uff65|\u30ce\n\u3000\u3000\u3000|\uff3f\uff3f|\u3000))\n\u3000\u3000\u3000 \uff5c\uff5c\n\u3000\u3000\u3000 \u8abf\u5b50\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n```\n\n\u300cEFS\u3042\u308b\u306a\u3089AutoScaling\u3057\u305f\u3044\u3088\u306d\u30fc\u300d\u3068\u601d\u3046\u308f\u3051\u3067\u3059\u3002\n\n\u3067\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u307f\u3066\u305f\u3089\u666e\u901a\u306bCloudFormation\u306e\u30b5\u30f3\u30d7\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3042\u3063\u305f\u3093\u3067\u7acb\u3061\u4e0a\u3052\u3066\u307f\u307e\u3057\u305f\u3002\n\nAmazon Elastic File System \u30b5\u30f3\u30d7\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8 - AWS CloudFormation : http://docs.aws.amazon.com/ja_jp/AWSCloudFormation/latest/UserGuide/quickref-efs.html\n\n```/bin/bash\n$ kumogata create template.json efsdemo  \\\n -s AWS_SECRET_KEY \\\n -k AWS_ACCESS_KEY \\\n -r  us-east-1 \\\n -p \"KeyName=KEY_FILE_NAME,AsgMaxSize=1\" \\\n --capabilities=CAPABILITY_IAM\n```\n\n##\u7acb\u3061\u4e0a\u3052\u305f\u7d50\u679c\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-29 17.37.17.png](https://qiita-image-store.s3.amazonaws.com/0/23936/660f72c8-75b9-c0dc-7cfc-f34b79071e0c.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-29 17.37.17.png\")\nEC2\u306f\u5168\u90e8Auto Scaling Group\u304b\u3089\u7acb\u3061\u4e0a\u304c\u308b\u5b9f\u88c5\u306b\u306a\u3063\u3066\u307e\u3059\u3002\n\n\u305b\u3063\u304b\u304f\u306a\u306e\u30673\u53f0\u304f\u3089\u3044\u306b\u5897\u3084\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-29 17.39.22.png](https://qiita-image-store.s3.amazonaws.com/0/23936/baa68782-2f12-8093-1e15-8d0c9faaf864.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-29 17.39.22.png\")\n\n\n\n### SSH\u3067\u4e2d\u8eab\u3092\u898b\u308b\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-29 17.44.16.png](https://qiita-image-store.s3.amazonaws.com/0/23936/97d41eed-4172-cc01-33c5-dd29ab5ff5ee.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-29 17.44.16.png\")\n\n/myEFSvolume\u306bEFS\u304c\u30de\u30a6\u30f3\u30c8\u3055\u308c\u3066\u307e\u3059\u3002\n\n\u9069\u5f53\u306b\u5404\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u3057\u3063\u304b\u308a\u540c\u671f\u3055\u308c\u3066\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-29 17.48.14.png](https://qiita-image-store.s3.amazonaws.com/0/23936/449cf3a1-3648-0778-b56e-5b700814ced2.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-06-29 17.48.14.png\")\n\n\n## CFN\u629c\u304d\u51fa\u3057\n\n\u3064\u3044\u3067\u306b\u3001\u30b3\u30fc\u30c9\u8aad\u307f\u305f\u3044\u3068\u3044\u3046\u4eba\u5411\u3051\u306bEFS / AutoScaling\u90e8\u5206\u3060\u3051\u629c\u304d\u51fa\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n### EFS\u8a2d\u5b9a\u90e8\u5206\u306eJSON\n\n```\n    \"MountTargetSecurityGroup\": {\n      \"Type\": \"AWS::EC2::SecurityGroup\",\n      \"Properties\": {\n        \"VpcId\": { \"Ref\": \"VPC\" },\n        \"GroupDescription\": \"Security group for mount target\",\n        \"SecurityGroupIngress\": [\n          {\n            \"IpProtocol\": \"tcp\",\n            \"FromPort\": \"2049\",\n            \"ToPort\": \"2049\",\n            \"CidrIp\": \"0.0.0.0/0\"\n          }\n        ]\n      }\n    },\n    \"FileSystem\": {\n      \"Type\": \"AWS::EFS::FileSystem\",\n      \"Properties\": {\n        \"FileSystemTags\": [\n          {\n            \"Key\": \"Name\",\n            \"Value\": { \"Ref\" : \"VolumeName\" }\n          }\n        ]\n      }\n    },\n    \"MountTarget\": {\n      \"Type\": \"AWS::EFS::MountTarget\",\n      \"Properties\": {\n        \"FileSystemId\": { \"Ref\": \"FileSystem\" },\n        \"SubnetId\": { \"Ref\": \"Subnet\" },\n        \"SecurityGroups\": [ { \"Ref\": \"MountTargetSecurityGroup\" } ]\n      }\n    },\n```\n\n### AutoScaling\u90e8\u5206\u306eJSON\n\n```\n    \"LaunchConfiguration\": {\n      \"Type\": \"AWS::AutoScaling::LaunchConfiguration\",\n      \"Metadata\" : {\n        \"AWS::CloudFormation::Init\" : {\n          \"configSets\" : {\n            \"MountConfig\" : [ \"setup\", \"mount\" ]\n          },\n          \"setup\" : {\n            \"packages\" : {\n              \"yum\" : {\n                \"nfs-utils\" : []\n              }\n            },\n            \"files\" : {\n              \"/home/ec2-user/post_nfsstat\" : {\n                \"content\" : { \"Fn::Join\" : [ \"\", [\n                      \"#!/bin/bash\\n\",\n                      \"\\n\",\n                      \"INPUT=\\\"$(cat)\\\"\\n\",\n                      \"CW_JSON_OPEN='{ \\\"Namespace\\\": \\\"EFS\\\", \\\"MetricData\\\": [ '\\n\",\n                      \"CW_JSON_CLOSE=' ] }'\\n\",\n                      \"CW_JSON_METRIC=''\\n\",\n                      \"METRIC_COUNTER=0\\n\",\n                      \"\\n\",\n                      \"for COL in 1 2 3 4 5 6; do\\n\",\n                      \"\\n\",\n                      \" COUNTER=0\\n\",\n                      \" METRIC_FIELD=$COL\\n\",\n                      \" DATA_FIELD=$(($COL+($COL-1)))\\n\",\n                      \"\\n\",\n                      \" while read line; do\\n\",\n                      \"   if [[ COUNTER -gt 0 ]]; then\\n\",\n                      \"\\n\",\n                      \"     LINE=`echo $line | tr -s ' ' `\\n\",\n                      \"     AWS_COMMAND=\\\"aws cloudwatch put-metric-data --region \", { \"Ref\": \"AWS::Region\" }, \"\\\"\\n\",\n                      \"     MOD=$(( $COUNTER % 2))\\n\",\n                      \"\\n\",\n                      \"     if [ $MOD -eq 1 ]; then\\n\",\n                      \"       METRIC_NAME=`echo $LINE | cut -d ' ' -f $METRIC_FIELD`\\n\",\n                      \"     else\\n\",\n                      \"       METRIC_VALUE=`echo $LINE | cut -d ' ' -f $DATA_FIELD`\\n\",\n                      \"     fi\\n\",\n                      \"\\n\",\n                      \"     if [[ -n \\\"$METRIC_NAME\\\" && -n \\\"$METRIC_VALUE\\\" ]]; then\\n\",\n                      \"       INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)\\n\",\n                      \"       CW_JSON_METRIC=\\\"$CW_JSON_METRIC { \\\\\\\"MetricName\\\\\\\": \\\\\\\"$METRIC_NAME\\\\\\\", \\\\\\\"Dimensions\\\\\\\": [{\\\\\\\"Name\\\\\\\": \\\\\\\"InstanceId\\\\\\\", \\\\\\\"Value\\\\\\\": \\\\\\\"$INSTANCE_ID\\\\\\\"} ], \\\\\\\"Value\\\\\\\": $METRIC_VALUE },\\\"\\n\",\n                      \"       unset METRIC_NAME\\n\",\n                      \"       unset METRIC_VALUE\\n\",\n                      \"\\n\",\n                      \"       METRIC_COUNTER=$((METRIC_COUNTER+1))\\n\",\n                      \"       if [ $METRIC_COUNTER -eq 20 ]; then\\n\",\n                      \"         # 20 is max metric collection size, so we have to submit here\\n\",\n                      \"         aws cloudwatch put-metric-data --region \", { \"Ref\": \"AWS::Region\" }, \" --cli-input-json \\\"`echo $CW_JSON_OPEN ${CW_JSON_METRIC%?} $CW_JSON_CLOSE`\\\"\\n\",\n                      \"\\n\",\n                      \"         # reset\\n\",\n                      \"         METRIC_COUNTER=0\\n\",\n                      \"         CW_JSON_METRIC=''\\n\",\n                      \"       fi\\n\",\n                      \"     fi  \\n\",\n                      \"\\n\",\n                      \"\\n\",\n                      \"\\n\",\n                      \"     COUNTER=$((COUNTER+1))\\n\",\n                      \"   fi\\n\",\n                      \"\\n\",\n                      \"   if [[ \\\"$line\\\" == \\\"Client nfs v4:\\\" ]]; then\\n\",\n                      \"     # the next line is the good stuff \\n\",\n                      \"     COUNTER=$((COUNTER+1))\\n\",\n                      \"   fi\\n\",\n                      \" done <<< \\\"$INPUT\\\"\\n\",\n                      \"done\\n\",\n                      \"\\n\",\n                      \"# submit whatever is left\\n\",\n                      \"aws cloudwatch put-metric-data --region \", { \"Ref\": \"AWS::Region\" }, \" --cli-input-json \\\"`echo $CW_JSON_OPEN ${CW_JSON_METRIC%?} $CW_JSON_CLOSE`\\\"\"\n                    ] ] },\n                \"mode\": \"000755\",\n                \"owner\": \"ec2-user\",\n                \"group\": \"ec2-user\"\n              },\n              \"/home/ec2-user/crontab\" : {\n                \"content\" : { \"Fn::Join\" : [ \"\", [\n                  \"* * * * * /usr/sbin/nfsstat | /home/ec2-user/post_nfsstat\\n\"\n                ] ] },\n                \"owner\": \"ec2-user\",\n                \"group\": \"ec2-user\"\n              }\n            },\n            \"commands\" : {\n              \"01_createdir\" : {\n                \"command\" : {\"Fn::Join\" : [ \"\", [ \"mkdir /\", { \"Ref\" : \"MountPoint\" }]]}\n              }\n            }\n          },\n          \"mount\" : {\n            \"commands\" : {\n              \"01_mount\" : {\n                \"command\" : { \"Fn::Join\": [ \"\", [\n                  \"mount -t nfs4 $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone).\",\n                  { \"Ref\": \"FileSystem\" },\n                  \".efs.\",\n                  { \"Ref\": \"AWS::Region\" },\n                  \".amazonaws.com:/ /\",\n                  {\"Ref\" : \"MountPoint\" }\n                ] ] }\n              },\n              \"02_permissions\" : {\n                \"command\" : {\"Fn::Join\" : [ \"\", [ \"chown ec2-user:ec2-user /\", { \"Ref\" : \"MountPoint\" }]]}\n              }\n            }\n          }\n        }\n      },\n      \"Properties\": {\n        \"AssociatePublicIpAddress\" : true,\n        \"ImageId\": {\n          \"Fn::FindInMap\": [ \"AWSRegionArch2AMI\", { \"Ref\": \"AWS::Region\" }, {\n            \"Fn::FindInMap\": [ \"AWSInstanceType2Arch\", { \"Ref\": \"InstanceType\" }, \"Arch\" ]\n          } ]\n        },\n        \"InstanceType\": { \"Ref\": \"InstanceType\" },\n        \"KeyName\": { \"Ref\": \"KeyName\" },\n        \"SecurityGroups\": [ { \"Ref\": \"InstanceSecurityGroup\" } ],\n        \"IamInstanceProfile\" : { \"Ref\" : \"CloudWatchPutMetricsInstanceProfile\" },\n        \"UserData\"       : { \"Fn::Base64\" : { \"Fn::Join\" : [\"\", [\n             \"#!/bin/bash -xe\\n\",\n             \"yum update -y aws-cfn-bootstrap\\n\",\n\n             \"/opt/aws/bin/cfn-init -v \",\n             \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\n             \"         --resource LaunchConfiguration \",\n             \"         --configsets MountConfig \",\n             \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\",\n\n             \"crontab /home/ec2-user/crontab\\n\",\n\n             \"/opt/aws/bin/cfn-signal -e $? \",\n             \"         --stack \", { \"Ref\" : \"AWS::StackName\" },\n             \"         --resource AutoScalingGroup \",\n             \"         --region \", { \"Ref\" : \"AWS::Region\" }, \"\\n\"\n        ]]}}\n      }\n    },\n    \"AutoScalingGroup\": {\n      \"Type\": \"AWS::AutoScaling::AutoScalingGroup\",\n      \"DependsOn\": [\"MountTarget\", \"GatewayToInternet\"],\n      \"CreationPolicy\" : {\n        \"ResourceSignal\" : {\n          \"Timeout\" : \"PT15M\",\n          \"Count\"   : { \"Ref\": \"AsgMaxSize\" }\n        }\n      },\n      \"Properties\": {\n        \"VPCZoneIdentifier\": [ { \"Ref\": \"Subnet\" } ],\n        \"LaunchConfigurationName\": { \"Ref\": \"LaunchConfiguration\" },\n        \"MinSize\": \"1\",\n        \"MaxSize\": { \"Ref\": \"AsgMaxSize\" },\n        \"DesiredCapacity\": { \"Ref\": \"AsgMaxSize\" },\n        \"Tags\": [ {\n          \"Key\": \"Name\",\n          \"Value\": \"EFS FileSystem Mounted Instance\",\n          \"PropagateAtLaunch\": \"true\"\n        } ]\n      }\n    }\n    ```\n    \n \n", "tags": ["AWS", "ElasticFileSytem", "EFS", "CloudFormation"]}