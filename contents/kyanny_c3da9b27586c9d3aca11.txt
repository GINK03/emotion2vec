{"tags": ["Resque"], "context": "Resque \u306b\u306f\u30ef\u30fc\u30ab\u30fc\u30d7\u30ed\u30bb\u30b9\u3092\u5225\u9014\u7acb\u3061\u4e0a\u3052\u306a\u304f\u3066\u3082\u52d5\u4f5c\u3059\u308b inline \u30e2\u30fc\u30c9\u304c\u3042\u308b\u3002\n\nAlso, you could disable jobs queueing by setting 'inline' attribute. For example, if you want to run all jobs in the same process for cucumber, try:\n\nResque.inline = ENV['RAILS_ENV'] == \"cucumber\"\n\n\u3057\u304b\u3057 inline \u30e2\u30fc\u30c9\u306f\u4f8b\u5916\u51e6\u7406\u3068\u76f8\u6027\u304c\u60aa\u3044\u3002\u30ef\u30fc\u30ab\u30fc\u30af\u30e9\u30b9\u306e .perform \u30e1\u30bd\u30c3\u30c9\u5185\u3067\u4f8b\u5916\u3092\u9001\u51fa\u3059\u308b\u3068\u3001\u547c\u3073\u51fa\u3057\u5143\u307e\u3067\u4f8b\u5916\u304c\u4f1d\u64ad\u3057\u3066\u3057\u307e\u3046\u3002 Rails \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u30e1\u30bd\u30c3\u30c9\u5185\u304b\u3089 enqueue \u3059\u308b\u5834\u5408\u306a\u3069\u306b\u56f0\u3063\u305f\u3053\u3068\u306b\u306a\u308b\u3002\nclass MyController < ApplicationController\n  def some_action\n    if @model.save\n      Resque.enqueue MyWorker, @model.id\n      render json: {success: 1}\n    else\n      render json: {success: 0, message: \"oops\"}\n    end\n  end\nend\n\nclass MyWorker\n  @queue = :my_worker\n  def self.perform(id)\n    puts id\n    raise RuntimeError, \"oops\"\n  end\nend\n\n\n \u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u3042\u308b\u3068\u3059\u308b\u3068\u3001\n\n\nResque.inline == false \u306e\u5834\u5408\u3001 {\"success\":1}\u3068\u3044\u3046 application/json \u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u308b\u3002\u30b8\u30e7\u30d6\u306f RuntimeError \u304c\u767a\u751f\u3057\u3066\u5931\u6557\u3057\u3001 Failed Jobs \u306b\u5165\u308b\u3002\n\nResque.inline == true \u306e\u5834\u5408\u3001 RuntimeError \u304c\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u307e\u3067\u4f1d\u64ad\u3057\u3066\u3057\u307e\u3044\u3001 application/json \u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u8fd4\u3089\u306a\u3044\u3002\n\ndevelopment \u30e2\u30fc\u30c9\u306e\u3068\u304d\u306b Resque.inline \u3092\u6709\u52b9\u306b\u3057\u3066\u3044\u305f\u308a\u3059\u308b\u3068\u3001 production \u3067\u306f\u4e0d\u8981\u306a begin ... rescue ... end \u3067 Resque.enqueue \u306e\u90e8\u5206\u3092\u56f2\u3063\u3066\u3084\u3063\u305f\u308a\u3059\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304f\u308b\u3002\nResque \u306f\u300c\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u3089 Job \u3092 Failed \u3068\u307f\u306a\u3059\u300d\u3068\u3044\u3046\u30dd\u30ea\u30b7\u30fc\u306e\u3088\u3046\u306a\u306e\u3067\u3001\u4f8b\u5916\u306e\u767a\u751f\u3092\u6291\u5236\u3057\u3064\u3064 Failed \u306b\u3059\u308b\u306e\u306f\u3061\u3087\u3063\u3068\u96e3\u3057\u305d\u3046\uff08\u3084\u308a\u65b9\u306f\u8abf\u3079\u3066\u307e\u305b\u3093\uff09\u3064\u307e\u308a\u3001\u30b8\u30e7\u30d6\u3092 enqueue \u3059\u308b\u5074\u306b\uff08\u672c\u6765\u4e0d\u8981\u306a\uff09\u4f8b\u5916\u306e\u6355\u6349\u51e6\u7406\u3092\u4ed5\u8fbc\u3080\u304b\u3001\u30b8\u30e7\u30d6\u3092 fail \u3055\u305b\u308b\u306e\u3092\u8ae6\u3081\u308b\u5fc5\u8981\u304c\u3067\u3066\u304f\u308b\u3002\u3069\u3061\u3089\u3082\u4e0d\u81ea\u7136\u3002\n\u306a\u306e\u3067\u3001\u7d50\u8ad6\u3068\u3057\u3066\u3001 Resque.inline \u306f\u907f\u3051\u305f\u307b\u3046\u304c\u3088\u3055\u305d\u3046\u3002\n[Resque](https://github.com/resque/resque/tree/master) \u306b\u306f\u30ef\u30fc\u30ab\u30fc\u30d7\u30ed\u30bb\u30b9\u3092\u5225\u9014\u7acb\u3061\u4e0a\u3052\u306a\u304f\u3066\u3082\u52d5\u4f5c\u3059\u308b inline \u30e2\u30fc\u30c9\u304c\u3042\u308b\u3002\n\n> Also, you could disable jobs queueing by setting 'inline' attribute. For example, if you want to run all jobs in the same process for cucumber, try:\n\n```ruby\nResque.inline = ENV['RAILS_ENV'] == \"cucumber\"\n```\n\n\u3057\u304b\u3057 inline \u30e2\u30fc\u30c9\u306f\u4f8b\u5916\u51e6\u7406\u3068\u76f8\u6027\u304c\u60aa\u3044\u3002\u30ef\u30fc\u30ab\u30fc\u30af\u30e9\u30b9\u306e `.perform` \u30e1\u30bd\u30c3\u30c9\u5185\u3067\u4f8b\u5916\u3092\u9001\u51fa\u3059\u308b\u3068\u3001\u547c\u3073\u51fa\u3057\u5143\u307e\u3067\u4f8b\u5916\u304c\u4f1d\u64ad\u3057\u3066\u3057\u307e\u3046\u3002 Rails \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u30e1\u30bd\u30c3\u30c9\u5185\u304b\u3089 `enqueue` \u3059\u308b\u5834\u5408\u306a\u3069\u306b\u56f0\u3063\u305f\u3053\u3068\u306b\u306a\u308b\u3002\n\n```ruby\nclass MyController < ApplicationController\n  def some_action\n    if @model.save\n      Resque.enqueue MyWorker, @model.id\n      render json: {success: 1}\n    else\n      render json: {success: 0, message: \"oops\"}\n    end\n  end\nend\n\nclass MyWorker\n  @queue = :my_worker\n  def self.perform(id)\n    puts id\n    raise RuntimeError, \"oops\"\n  end\nend\n\n```\n\n:point_up: \u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u3042\u308b\u3068\u3059\u308b\u3068\u3001\n\n- `Resque.inline == false` \u306e\u5834\u5408\u3001 `{\"success\":1}`\u3068\u3044\u3046 `application/json` \u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u308b\u3002\u30b8\u30e7\u30d6\u306f RuntimeError \u304c\u767a\u751f\u3057\u3066\u5931\u6557\u3057\u3001 Failed Jobs \u306b\u5165\u308b\u3002\n- `Resque.inline == true` \u306e\u5834\u5408\u3001 RuntimeError \u304c\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u307e\u3067\u4f1d\u64ad\u3057\u3066\u3057\u307e\u3044\u3001 `application/json` \u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u8fd4\u3089\u306a\u3044\u3002\n\ndevelopment \u30e2\u30fc\u30c9\u306e\u3068\u304d\u306b `Resque.inline` \u3092\u6709\u52b9\u306b\u3057\u3066\u3044\u305f\u308a\u3059\u308b\u3068\u3001 production \u3067\u306f\u4e0d\u8981\u306a `begin ... rescue ... end` \u3067 `Resque.enqueue` \u306e\u90e8\u5206\u3092\u56f2\u3063\u3066\u3084\u3063\u305f\u308a\u3059\u308b\u5fc5\u8981\u304c\u51fa\u3066\u304f\u308b\u3002\n\nResque \u306f\u300c\u4f8b\u5916\u304c\u767a\u751f\u3057\u305f\u3089 Job \u3092 Failed \u3068\u307f\u306a\u3059\u300d\u3068\u3044\u3046\u30dd\u30ea\u30b7\u30fc\u306e\u3088\u3046\u306a\u306e\u3067\u3001\u4f8b\u5916\u306e\u767a\u751f\u3092\u6291\u5236\u3057\u3064\u3064 Failed \u306b\u3059\u308b\u306e\u306f\u3061\u3087\u3063\u3068\u96e3\u3057\u305d\u3046\uff08\u3084\u308a\u65b9\u306f\u8abf\u3079\u3066\u307e\u305b\u3093\uff09\u3064\u307e\u308a\u3001\u30b8\u30e7\u30d6\u3092 enqueue \u3059\u308b\u5074\u306b\uff08\u672c\u6765\u4e0d\u8981\u306a\uff09\u4f8b\u5916\u306e\u6355\u6349\u51e6\u7406\u3092\u4ed5\u8fbc\u3080\u304b\u3001\u30b8\u30e7\u30d6\u3092 fail \u3055\u305b\u308b\u306e\u3092\u8ae6\u3081\u308b\u5fc5\u8981\u304c\u3067\u3066\u304f\u308b\u3002\u3069\u3061\u3089\u3082\u4e0d\u81ea\u7136\u3002\n\n\u306a\u306e\u3067\u3001\u7d50\u8ad6\u3068\u3057\u3066\u3001 `Resque.inline` \u306f\u907f\u3051\u305f\u307b\u3046\u304c\u3088\u3055\u305d\u3046\u3002\n"}