{"context": "\n\n\u66f8\u304f\u3053\u3068\nClojure\u3068Korma\u3092\u4f7f\u3063\u3066DB\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nKorma\nhttps://github.com/korma/Korma\nhttp://sqlkorma.com/\n\u5fc5\u8981\u306a\u3053\u3068\u306f\u3053\u3053\u306b\u5168\u3066\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u3001\u82f1\u8a9e\u3060\u3051\u3069\u8aad\u3081\u3070\u4e0b\u306e\u8a18\u4e8b\u306f\u8aad\u3080\u5fc5\u8981\u304c\u306a\u3044\u3002\n\n\u524d\u6e96\u5099\nLeiningen\u306f\u5165\u3063\u3066\u308b\u3082\u306e\u3068\u3059\u308b\u3002\n\u9069\u5f53\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066dependencies\u306bkorma\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304f\u3002\n\u4eca\u56de\u306fRDBMS\u306bMySQL\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u3001MySQL\u306e\u30c9\u30e9\u30a4\u30d0\u3082\u3044\u308c\u3066\u304a\u304f\u3002\n\ninit.sh\nlein new default app\ncd app \nvim project.clj\n\n\n\nproject.clj\n(defproject app \"0.1.0-SNAPSHOT\"\n  :description \"FIXME: write description\"\n  :url \"http://example.com/FIXME\"\n  :license {:name \"Eclipse Public License\"\n            :url \"http://www.eclipse.org/legal/epl-v10.html\"}\n  :dependencies [\n                 [org.clojure/clojure \"1.6.0\"]\n                 [korma \"0.4.3\"]\n                 [mysql/mysql-connector-java \"5.1.38\"]\n                 ])\n\n\n\n\ninit.sh\nlein test\n\n\n\u30c6\u30b9\u30c8\u306f\u30b3\u30b1\u308b\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u6b63\u5e38\u306b\u30b3\u30b1\u308b\n\nDB\u306b\u63a5\u7d9a\u3059\u308b\nvim src/app/core.clj\n\n\nsrc/app/core.clj\n(ns app.core)\n\n(use 'korma.db)\n(use 'korma.core)\n\n; DB\u63a5\u7d9a\u3092\u4f5c\u6210\u3059\u308b\n(defdb mydb\n  (mysql \n    {\n      :db \"app_database\"\n;\u624b\u5143\u306e\u74b0\u5883\u3067\u306fSSL\u8a3c\u660e\u66f8\u306f\u306a\u3044\u306e\u3067\u4f7f\u308f\u306a\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3002\n      :subname \"//127.0.0.1:3306/app_database?useSSL=false\"\n      :user \"app_database\"\n      :excess-timeout 1000 \n      :idle-timeout 1000 \n      :initial-pool-size 1 \n      :minimum-pool-size 1 \n      :maximum-pool-size 1\n      :password \"app_database\"}))\n\n; \u4f7f\u7528\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u3092\u547c\u3073\u51fa\u3057\u3066\u304a\u304f\n(defentity app)\n\n; \u65e2\u5b58\u306e\u30c6\u30b9\u30c8\u95a2\u6570\n(defn foo\n  \"I don't do a whole lot.\"\n  [x]\n  (println x \"Hello, World!\"))\n\n\n\u30c6\u30b9\u30c8\u7528\u306eDB\u3092\u4f5c\u3063\u3066\u304a\u304f\u3002\n\ninit.sql\nCREATE DATABASE app_database;\nGRANT ALL ON *.* TO 'app_database'@'%' IDENTIFIED BY 'app_detabase'; \nUSE app_database;\nCREATE TABLE app ( id INT(10) AUTO_INCREMENT PRIMARY KEY , name VARCHAR(20) , integer_value INT (10) DEFAULT 0);\nINSERT INTO app ( name , integer_value) VALUES (\"name1\" , 1) ;\nINSERT INTO app ( name , integer_value) VALUES (\"name2\" , 2) ;\nINSERT INTO app ( name , integer_value) VALUES (\"name3\" , 3) ;\n\n\n\nCRUD\n\u7279\u306b\u8852\u3044\u304c\u306a\u304f\u76f4\u611f\u7684\u306a\u4f7f\u3044\u3084\u3059\u3044\u5f62\u3067\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u63c3\u3063\u3066\u3044\u308b\u3002\n\nSELECT\nCRUD\u3055\u3048\u3067\u304d\u308c\u3070\u3068\u308a\u3042\u3048\u305a\u306e\u3053\u3068\u306f\u3067\u304d\u308b\u3002\nSeect\u306f\u5e30\u308a\u5024\u304cArray\u3067\u5e30\u3063\u3066\u304f\u308b\u306e\u3067\u308f\u304b\u308a\u3084\u3059\u304f\u4fbf\u5229\u3002\n\nselect.clj\n(def select-result (select app (fields :id :name)))\n; SELECT id , name FROM app;\n(println \n  (:id (first select-result)))\n(println \n  (:name (first select-result)))\n\n; WHERE\u53e5\u3092\u3064\u3051\u3066\u5b9f\u884c\u3059\u308b\u3002\n(def where-result (select app \n  (fields :id :name)\n  (where (= :id 1))\n    ))\n(println \n  (:id (first where-result)))\n\n; \u96c6\u8a08\u95a2\u6570\u3092\u4f7f\u3046\n(def sum-result (select app \n  (aggregate (sum :integer_value) :integer_value_sum)\n    ))\n(println \n  (:integer_value_sum (first sum-result)))\n\n\n\nINSERT\n\ninsert.clj\n(insert app \n  (values {\n    :name \"name4\" \n    :integer_value 33 \n    }))\n\n\n\nUPDATE\n\nupdate.clj\n(def update-result (update app\n  (where (or (= :id 1) (= :id 2) (= :id 3000))\n  (set-fields {\n    :name \"updated_name\"\n    :integer_value \"20\"\n  })))\n(println update-result) \n; \u5909\u66f4\u884c\u6570\u3068\u3057\u30662\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n; id=3000\u306e\u7269\u306f\u8a08\u4e0a\u3055\u308c\u306a\u3044\n\n\n\nDELETE\n\ndelete.clj\n(delete app\n  (where (>= :id 3)))\n\n\n# \u66f8\u304f\u3053\u3068\nClojure\u3068Korma\u3092\u4f7f\u3063\u3066DB\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n# Korma\nhttps://github.com/korma/Korma\nhttp://sqlkorma.com/\n\u5fc5\u8981\u306a\u3053\u3068\u306f\u3053\u3053\u306b\u5168\u3066\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u3001\u82f1\u8a9e\u3060\u3051\u3069\u8aad\u3081\u3070\u4e0b\u306e\u8a18\u4e8b\u306f\u8aad\u3080\u5fc5\u8981\u304c\u306a\u3044\u3002\n\n# \u524d\u6e96\u5099\nLeiningen\u306f\u5165\u3063\u3066\u308b\u3082\u306e\u3068\u3059\u308b\u3002\n\u9069\u5f53\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066dependencies\u306bkorma\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304f\u3002\n\u4eca\u56de\u306fRDBMS\u306bMySQL\u3092\u4f7f\u7528\u3059\u308b\u306e\u3067\u3001MySQL\u306e\u30c9\u30e9\u30a4\u30d0\u3082\u3044\u308c\u3066\u304a\u304f\u3002\n\n```sh:init.sh\nlein new default app\ncd app \nvim project.clj\n```\n\n```clojure:project.clj\n(defproject app \"0.1.0-SNAPSHOT\"\n  :description \"FIXME: write description\"\n  :url \"http://example.com/FIXME\"\n  :license {:name \"Eclipse Public License\"\n            :url \"http://www.eclipse.org/legal/epl-v10.html\"}\n  :dependencies [\n                 [org.clojure/clojure \"1.6.0\"]\n                 [korma \"0.4.3\"]\n                 [mysql/mysql-connector-java \"5.1.38\"]\n                 ])\n\n```\n\n\n```sh:init.sh\nlein test\n```\n\u30c6\u30b9\u30c8\u306f\u30b3\u30b1\u308b\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u6b63\u5e38\u306b\u30b3\u30b1\u308b\n\n# DB\u306b\u63a5\u7d9a\u3059\u308b\n\n```shell-session\nvim src/app/core.clj\n```\n\n```clojure:src/app/core.clj\n(ns app.core)\n\n(use 'korma.db)\n(use 'korma.core)\n\n; DB\u63a5\u7d9a\u3092\u4f5c\u6210\u3059\u308b\n(defdb mydb\n  (mysql \n    {\n      :db \"app_database\"\n;\u624b\u5143\u306e\u74b0\u5883\u3067\u306fSSL\u8a3c\u660e\u66f8\u306f\u306a\u3044\u306e\u3067\u4f7f\u308f\u306a\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3002\n      :subname \"//127.0.0.1:3306/app_database?useSSL=false\"\n      :user \"app_database\"\n      :excess-timeout 1000 \n      :idle-timeout 1000 \n      :initial-pool-size 1 \n      :minimum-pool-size 1 \n      :maximum-pool-size 1\n      :password \"app_database\"}))\n\n; \u4f7f\u7528\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u3092\u547c\u3073\u51fa\u3057\u3066\u304a\u304f\n(defentity app)\n\n; \u65e2\u5b58\u306e\u30c6\u30b9\u30c8\u95a2\u6570\n(defn foo\n  \"I don't do a whole lot.\"\n  [x]\n  (println x \"Hello, World!\"))\n```\n\n\u30c6\u30b9\u30c8\u7528\u306eDB\u3092\u4f5c\u3063\u3066\u304a\u304f\u3002\n\n```sql:init.sql\nCREATE DATABASE app_database;\nGRANT ALL ON *.* TO 'app_database'@'%' IDENTIFIED BY 'app_detabase'; \nUSE app_database;\nCREATE TABLE app ( id INT(10) AUTO_INCREMENT PRIMARY KEY , name VARCHAR(20) , integer_value INT (10) DEFAULT 0);\nINSERT INTO app ( name , integer_value) VALUES (\"name1\" , 1) ;\nINSERT INTO app ( name , integer_value) VALUES (\"name2\" , 2) ;\nINSERT INTO app ( name , integer_value) VALUES (\"name3\" , 3) ;\n```\n# CRUD\n\u7279\u306b\u8852\u3044\u304c\u306a\u304f\u76f4\u611f\u7684\u306a\u4f7f\u3044\u3084\u3059\u3044\u5f62\u3067\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u63c3\u3063\u3066\u3044\u308b\u3002\n\n## SELECT\nCRUD\u3055\u3048\u3067\u304d\u308c\u3070\u3068\u308a\u3042\u3048\u305a\u306e\u3053\u3068\u306f\u3067\u304d\u308b\u3002\nSeect\u306f\u5e30\u308a\u5024\u304cArray\u3067\u5e30\u3063\u3066\u304f\u308b\u306e\u3067\u308f\u304b\u308a\u3084\u3059\u304f\u4fbf\u5229\u3002\n\n```clojure:select.clj\n(def select-result (select app (fields :id :name)))\n; SELECT id , name FROM app;\n(println \n  (:id (first select-result)))\n(println \n  (:name (first select-result)))\n\n; WHERE\u53e5\u3092\u3064\u3051\u3066\u5b9f\u884c\u3059\u308b\u3002\n(def where-result (select app \n  (fields :id :name)\n  (where (= :id 1))\n    ))\n(println \n  (:id (first where-result)))\n\n; \u96c6\u8a08\u95a2\u6570\u3092\u4f7f\u3046\n(def sum-result (select app \n  (aggregate (sum :integer_value) :integer_value_sum)\n    ))\n(println \n  (:integer_value_sum (first sum-result)))\n```\n\n## INSERT\n\n```clojure:insert.clj\n(insert app \n  (values {\n    :name \"name4\" \n    :integer_value 33 \n    }))\n```\n\n## UPDATE\n\n```clojure:update.clj\n(def update-result (update app\n  (where (or (= :id 1) (= :id 2) (= :id 3000))\n  (set-fields {\n    :name \"updated_name\"\n    :integer_value \"20\"\n  })))\n(println update-result) \n; \u5909\u66f4\u884c\u6570\u3068\u3057\u30662\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n; id=3000\u306e\u7269\u306f\u8a08\u4e0a\u3055\u308c\u306a\u3044\n```\n\n## DELETE\n```clojure:delete.clj\n(delete app\n  (where (>= :id 3)))\n```\n\n", "tags": ["Clojure", "Korma"]}