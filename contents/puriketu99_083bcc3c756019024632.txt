{"context": " More than 1 year has passed since last update.\u4ee5\u4e0b\u30b3\u30d4\u30da\nhttp://stackoverflow.com/questions/9943996/how-to-mock-ndb-get-context-urlfetch\nimport unittest\nfrom google.appengine.ext import testbed, ndb\nfrom mock import patch, Mock\n\nclass MyTestCase(unittest.TestCase):\n\n    def setUp(self):\n        self.testbed = testbed.Testbed()\n        self.testbed.activate()\n        self.testbed.init_urlfetch_stub()\n\n        # mock urlrfetch service\n        uf = self.testbed.get_stub('urlfetch')\n        uf._Dynamic_Fetch = Mock()\n\n    @patch('google.appengine.api.urlfetch.urlfetch_service_pb.URLFetchResponse')\n    def test_make_request(self, URLFetchResponse):\n        # mocking rpc response object\n        response = URLFetchResponse.return_value\n        response.contentwastruncated.return_value = False\n        response.statuscode.return_value = 200\n        response.content.return_value = 'Hello world!'        \n\n        ctx = ndb.get_context()\n        fut = ctx.urlfetch('http://google.com')\n        result = fut.get_result()\n\n        self.assertEquals(result.content, 'Hello world!')\n\n    def tearDown(self):\n        self.testbed.deactivate()\n\n\n\n\u4ee5\u4e0b\u30b3\u30d4\u30da\n\nhttp://stackoverflow.com/questions/9943996/how-to-mock-ndb-get-context-urlfetch\n\n```python\nimport unittest\nfrom google.appengine.ext import testbed, ndb\nfrom mock import patch, Mock\n\nclass MyTestCase(unittest.TestCase):\n\n    def setUp(self):\n        self.testbed = testbed.Testbed()\n        self.testbed.activate()\n        self.testbed.init_urlfetch_stub()\n\n        # mock urlrfetch service\n        uf = self.testbed.get_stub('urlfetch')\n        uf._Dynamic_Fetch = Mock()\n\n    @patch('google.appengine.api.urlfetch.urlfetch_service_pb.URLFetchResponse')\n    def test_make_request(self, URLFetchResponse):\n        # mocking rpc response object\n        response = URLFetchResponse.return_value\n        response.contentwastruncated.return_value = False\n        response.statuscode.return_value = 200\n        response.content.return_value = 'Hello world!'        \n\n        ctx = ndb.get_context()\n        fut = ctx.urlfetch('http://google.com')\n        result = fut.get_result()\n\n        self.assertEquals(result.content, 'Hello world!')\n\n    def tearDown(self):\n        self.testbed.deactivate()\n```\n\n", "tags": ["GAE", "Python", "TDD"]}