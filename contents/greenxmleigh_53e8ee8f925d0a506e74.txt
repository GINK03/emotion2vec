{"context": "\n\nEnvironment\nHost   : Ubuntu 16.04 LTS (192.168.11.10)\nTarget : BeagleBone Black (192.168.11.20)\n\n\nCreate a sample C++ source file at Host\n\nTest.cpp\n#include <iostream>\nusing namespace std;\n\nint add(int x, int y);\nint sub(int x, int y);\n\nint main() {\n    cout << \"main() starts\" << endl;\n\n    int sum1 = 0;\n    int sum2 = 0;\n    sum1 = add(10, 100);\n    sum2 = add(100, 100);\n    cout << \"SUM1 : \" << sum1 << endl;\n    cout << \"SUM2 : \" << sum2 << endl;\n\n    int res = 0;\n    res = sub(100, 10);\n    cout << \"RES : \" << res << endl;\n\n    cout << \"main() ends\" << endl;\n\n    return 0;\n}\n\nint add(int x, int y) {\n    return x + y;\n}\n\nint sub(int x, int y) {\n    return x - y;\n}\n\n\n\nCompile the source file at Host\nroot@<HOST>:~# arm-linux-gnueabihf-g++-4.6 Test.cpp -o Test -g\n\nroot@<HOST>:~# ls\nTest  Test.cpp\n\n\nSend the binary file to Target\nroot@<HOST>:~# scp Test root@192.168.11.20:/root\n\n\nLaunch GDB Server at Target\nroot@<TARGET>:~# gdbserver 192.168.11.20:2000 Test\nProcess Test created; pid = 2179\nListening on port 2000\n\n\nLaunch GDB at Host\nroot@<HOST>:~# gdb-multiarch Test\nGNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1\nCopyright (C) 2016 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n<http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from Test...done.\n(gdb) \n\n\nDebugging output from Host\nroot@<HOST>:~# gdb-multiarch Test\nGNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1\nCopyright (C) 2016 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n<http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from Test...done.\n(gdb) target remote 192.168.11.20:2000\nRemote debugging using 192.168.11.20:2000\nReading /lib/ld-linux-armhf.so.3 from remote target...\nwarning: File transfers from remote targets can be slow. Use \"set sysroot\" to access files locally instead.\nReading /lib/ld-linux-armhf.so.3 from remote target...\nReading symbols from target:/lib/ld-linux-armhf.so.3...Reading /lib/ld-2.13.so from remote target...\nReading /lib/.debug/ld-2.13.so from remote target...\n(no debugging symbols found)...done.\n0xb6fe1c90 in ?? () from target:/lib/ld-linux-armhf.so.3\n(gdb) b main\nBreakpoint 1 at 0x10666: file Test.cpp, line 8.\n(gdb) b add\nBreakpoint 2 at 0x1078e: file Test.cpp, line 27.\n(gdb) b sub\nBreakpoint 3 at 0x107aa: file Test.cpp, line 31.\n(gdb) continue\nContinuing.\nReading /usr/lib/arm-linux-gnueabihf/libstdc++.so.6 from remote target...\nReading /lib/arm-linux-gnueabihf/libgcc_s.so.1 from remote target...\nReading /lib/arm-linux-gnueabihf/libc.so.6 from remote target...\nReading /lib/arm-linux-gnueabihf/libm.so.6 from remote target...\nReading /usr/lib/arm-linux-gnueabihf/libstdc++.so.6.0.17 from remote target...\nReading /usr/lib/arm-linux-gnueabihf/.debug/libstdc++.so.6.0.17 from remote target...\nReading /lib/arm-linux-gnueabihf/.debug/libgcc_s.so.1 from remote target...\nReading /lib/arm-linux-gnueabihf/libc-2.13.so from remote target...\nReading /lib/arm-linux-gnueabihf/.debug/libc-2.13.so from remote target...\nReading /lib/arm-linux-gnueabihf/libm-2.13.so from remote target...\nReading /lib/arm-linux-gnueabihf/.debug/libm-2.13.so from remote target...\n\nBreakpoint 1, main () at Test.cpp:8\n8       cout << \"main() starts\" << endl;\n(gdb) continue\nContinuing.\n\nBreakpoint 2, add (x=10, y=100) at Test.cpp:27\n27      return x + y;\n(gdb) continue\nContinuing.\n\nBreakpoint 2, add (x=100, y=100) at Test.cpp:27\n27      return x + y;\n(gdb) continue\nContinuing.\n\nBreakpoint 3, sub (x=100, y=10) at Test.cpp:31\n31      return x - y;\n(gdb) continue\nContinuing.\n[Inferior 1 (process 2179) exited normally]\n(gdb) quit\n\n\nDebugging output from Target\nroot@<TARGET>:~# gdbserver 192.168.11.20:2000 Test \nProcess Test created; pid = 2179\nListening on port 2000\nRemote debugging from host 192.168.11.5\nmain() starts\nSUM1 : 110\nSUM2 : 200\nRES : 90\nmain() ends\n\nChild exited with status 0\nGDBserver exiting\n\n# Environment\n```\nHost   : Ubuntu 16.04 LTS (192.168.11.10)\nTarget : BeagleBone Black (192.168.11.20)\n```\n\n# Create a sample C++ source file at Host\n```cpp:Test.cpp\n#include <iostream>\nusing namespace std;\n\nint add(int x, int y);\nint sub(int x, int y);\n\nint main() {\n    cout << \"main() starts\" << endl;\n\n    int sum1 = 0;\n    int sum2 = 0;\n    sum1 = add(10, 100);\n    sum2 = add(100, 100);\n    cout << \"SUM1 : \" << sum1 << endl;\n    cout << \"SUM2 : \" << sum2 << endl;\n\n    int res = 0;\n    res = sub(100, 10);\n    cout << \"RES : \" << res << endl;\n\n    cout << \"main() ends\" << endl;\n\n    return 0;\n}\n\nint add(int x, int y) {\n    return x + y;\n}\n\nint sub(int x, int y) {\n    return x - y;\n}\n```\n\n# Compile the source file at Host\n```\nroot@<HOST>:~# arm-linux-gnueabihf-g++-4.6 Test.cpp -o Test -g\n\nroot@<HOST>:~# ls\nTest  Test.cpp\n```\n\n# Send the binary file to Target\n```\nroot@<HOST>:~# scp Test root@192.168.11.20:/root\n```\n\n# Launch GDB Server at Target\n```\nroot@<TARGET>:~# gdbserver 192.168.11.20:2000 Test\nProcess Test created; pid = 2179\nListening on port 2000\n```\n\n# Launch GDB at Host\n```\nroot@<HOST>:~# gdb-multiarch Test\nGNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1\nCopyright (C) 2016 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n<http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from Test...done.\n(gdb) \n```\n\n# Debugging output from Host\n```\nroot@<HOST>:~# gdb-multiarch Test\nGNU gdb (Ubuntu 7.11.1-0ubuntu1~16.04) 7.11.1\nCopyright (C) 2016 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.  Type \"show copying\"\nand \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n<http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from Test...done.\n(gdb) target remote 192.168.11.20:2000\nRemote debugging using 192.168.11.20:2000\nReading /lib/ld-linux-armhf.so.3 from remote target...\nwarning: File transfers from remote targets can be slow. Use \"set sysroot\" to access files locally instead.\nReading /lib/ld-linux-armhf.so.3 from remote target...\nReading symbols from target:/lib/ld-linux-armhf.so.3...Reading /lib/ld-2.13.so from remote target...\nReading /lib/.debug/ld-2.13.so from remote target...\n(no debugging symbols found)...done.\n0xb6fe1c90 in ?? () from target:/lib/ld-linux-armhf.so.3\n(gdb) b main\nBreakpoint 1 at 0x10666: file Test.cpp, line 8.\n(gdb) b add\nBreakpoint 2 at 0x1078e: file Test.cpp, line 27.\n(gdb) b sub\nBreakpoint 3 at 0x107aa: file Test.cpp, line 31.\n(gdb) continue\nContinuing.\nReading /usr/lib/arm-linux-gnueabihf/libstdc++.so.6 from remote target...\nReading /lib/arm-linux-gnueabihf/libgcc_s.so.1 from remote target...\nReading /lib/arm-linux-gnueabihf/libc.so.6 from remote target...\nReading /lib/arm-linux-gnueabihf/libm.so.6 from remote target...\nReading /usr/lib/arm-linux-gnueabihf/libstdc++.so.6.0.17 from remote target...\nReading /usr/lib/arm-linux-gnueabihf/.debug/libstdc++.so.6.0.17 from remote target...\nReading /lib/arm-linux-gnueabihf/.debug/libgcc_s.so.1 from remote target...\nReading /lib/arm-linux-gnueabihf/libc-2.13.so from remote target...\nReading /lib/arm-linux-gnueabihf/.debug/libc-2.13.so from remote target...\nReading /lib/arm-linux-gnueabihf/libm-2.13.so from remote target...\nReading /lib/arm-linux-gnueabihf/.debug/libm-2.13.so from remote target...\n\nBreakpoint 1, main () at Test.cpp:8\n8\t    cout << \"main() starts\" << endl;\n(gdb) continue\nContinuing.\n\nBreakpoint 2, add (x=10, y=100) at Test.cpp:27\n27\t    return x + y;\n(gdb) continue\nContinuing.\n\nBreakpoint 2, add (x=100, y=100) at Test.cpp:27\n27\t    return x + y;\n(gdb) continue\nContinuing.\n\nBreakpoint 3, sub (x=100, y=10) at Test.cpp:31\n31\t    return x - y;\n(gdb) continue\nContinuing.\n[Inferior 1 (process 2179) exited normally]\n(gdb) quit\n```\n\n# Debugging output from Target\n```\nroot@<TARGET>:~# gdbserver 192.168.11.20:2000 Test \nProcess Test created; pid = 2179\nListening on port 2000\nRemote debugging from host 192.168.11.5\nmain() starts\nSUM1 : 110\nSUM2 : 200\nRES : 90\nmain() ends\n\nChild exited with status 0\nGDBserver exiting\n```\n", "tags": ["BeagleBoneBlack", "gdb"]}