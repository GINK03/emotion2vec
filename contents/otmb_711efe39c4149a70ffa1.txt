{"context": " More than 1 year has passed since last update.\u521d\u6295\u7a3f\u3002\u6c17\u304c\u5411\u3044\u305f\u6642\u306b\u30cd\u30bf\u3042\u3052\u3066\u3044\u304d\u307e\u3059\u3002\n\u4e3b\u306b\u30b3\u30d4\u30da\u7528\u306e\u7c21\u5358\u30cf\u30c3\u30af\u3092\u66f8\u304f\u4e88\u5b9a\u3067\u3059\u3002\nNGUI\u306eUILabel\u3092\u4e00\u6587\u5b57\u305a\u3064\u51fa\u529b\u3059\u308b\u30b5\u30f3\u30d7\u30eb\n\nTextTest.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Text;\nusing System.Text.RegularExpressions;\n\npublic class TextTest : MonoBehaviour {\n\n    void Start () {\n        string text = \"\u307b\u3052[FF0000]\u307b\u3052[-]\u307b\u3052\";\n        //string text = GetComponent<UILabel>().text;\n        StartCoroutine(textWriter(text));\n    }\n\n    IEnumerator textWriter(string text){\n\n        int len = 0;\n        StringBuilder sb = new StringBuilder();\n        UILabel label = GetComponent<UILabel>();\n        label.text = sb.ToString();\n\n        Regex r = new Regex(@\"^\\[[0-9A-F]{6}\\]$\");\n\n        yield return null;\n\n        while(len < text.Length){\n            // Font Color\u306e\u8a55\u4fa1\n            string txt = text.Substring( len , 1 );\n            if (txt == \"[\"){\n                if (len+3 < text.Length){\n                    txt = text.Substring( len , 3 );\n                    if (txt == \"[-]\"){\n                        sb.Append( txt );\n                        len += 3;\n                    } else if (len+8 < text.Length){\n                        txt = text.Substring( len , 8 );\n                        if (r.IsMatch(txt)){\n                            sb.Append( txt );\n                            len += 8;\n                        }   \n                    }\n                }\n                if (len >= text.Length) break;\n            }\n            sb.Append( text.Substring( len , 1 ) );\n            label.text = sb.ToString();\n            len++;\n            //Debug.Log(len);\n            yield return null;\n        }\n        yield return null;\n    }\n}\n\n\n\u521d\u6295\u7a3f\u3002\u6c17\u304c\u5411\u3044\u305f\u6642\u306b\u30cd\u30bf\u3042\u3052\u3066\u3044\u304d\u307e\u3059\u3002\n\u4e3b\u306b\u30b3\u30d4\u30da\u7528\u306e\u7c21\u5358\u30cf\u30c3\u30af\u3092\u66f8\u304f\u4e88\u5b9a\u3067\u3059\u3002\n\nNGUI\u306eUILabel\u3092\u4e00\u6587\u5b57\u305a\u3064\u51fa\u529b\u3059\u308b\u30b5\u30f3\u30d7\u30eb\n\n```csharp:TextTest.cs\nusing UnityEngine;\nusing System;\nusing System.Collections;\nusing System.Text;\nusing System.Text.RegularExpressions;\n\npublic class TextTest : MonoBehaviour {\n\n\tvoid Start () {\n\t\tstring text = \"\u307b\u3052[FF0000]\u307b\u3052[-]\u307b\u3052\";\n\t\t//string text = GetComponent<UILabel>().text;\n\t\tStartCoroutine(textWriter(text));\n\t}\n\n\tIEnumerator textWriter(string text){\n\n\t\tint len = 0;\n\t\tStringBuilder sb = new StringBuilder();\n\t\tUILabel label = GetComponent<UILabel>();\n\t\tlabel.text = sb.ToString();\n\t\t\n\t\tRegex r = new Regex(@\"^\\[[0-9A-F]{6}\\]$\");\n\n\t\tyield return null;\n\n\t\twhile(len < text.Length){\n\t\t\t// Font Color\u306e\u8a55\u4fa1\n\t\t\tstring txt = text.Substring( len , 1 );\n\t\t\tif (txt == \"[\"){\n\t\t\t\tif (len+3 < text.Length){\n\t\t\t\t\ttxt = text.Substring( len , 3 );\n\t\t\t\t\tif (txt == \"[-]\"){\n\t\t\t\t\t\tsb.Append( txt );\n\t\t\t\t\t\tlen += 3;\n\t\t\t\t\t} else if (len+8 < text.Length){\n\t\t\t\t\t\ttxt = text.Substring( len , 8 );\n\t\t\t\t\t\tif (r.IsMatch(txt)){\n\t\t\t\t\t\t\tsb.Append( txt );\n\t\t\t\t\t\t\tlen += 8;\n\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (len >= text.Length) break;\n\t\t\t}\n\t\t\tsb.Append( text.Substring( len , 1 ) );\n\t\t\tlabel.text = sb.ToString();\n\t\t\tlen++;\n\t\t\t//Debug.Log(len);\n\t\t\tyield return null;\n\t\t}\n\t\tyield return null;\n\t}\n}\n```", "tags": ["Unity4.2", "NGUI2.6.4"]}