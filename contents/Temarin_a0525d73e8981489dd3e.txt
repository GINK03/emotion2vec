{"context": " More than 1 year has passed since last update.Rx(Reactive Extensions)\u3067\u306f\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u30b9\u30ec\u30c3\u30c9\u3092\u81ea\u5728\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3092\u5207\u308a\u66ff\u3048\u308b\u30aa\u30da\u30ec\u30fc\u30bf\n\nObserveOn\nSubscribeOn\n\n\u3053\u306e\u9055\u3044\u306f\u3001\u305d\u306e\u5148\u306b\u4f5c\u7528\u3059\u308b\u306e\u304b\u3001\u305d\u306e\u524d\u306b\u4f5c\u7528\u3059\u308b\u306e\u304b\u306e\u9055\u3044\u3067\u3059\u3002\n\nObserveOn\u306e\u5834\u5408\n\nObserveOn\nusing System;\nusing System.Reactive.Concurrency;\nusing System.Reactive.Linq;\nusing System.Threading;\n\nnamespace TestSpace {\n    class Program {\n        static void Main( string[] args ) {\n            Console.WriteLine( $\"Main:{Thread.CurrentThread.ManagedThreadId}\" );\n            var sequence = Observable.Create<int>( o => {\n                Console.WriteLine( $\"Create:{Thread.CurrentThread.ManagedThreadId}\" );\n                o.OnNext( 1 );\n                o.OnNext( 2 );\n                o.OnCompleted();\n                return System.Reactive.Disposables.Disposable.Empty;\n            } );\n\n            sequence\n                .ObserveOn( ThreadPoolScheduler.Instance )\n                .Do( x => Console.WriteLine( $\"Do:{Thread.CurrentThread.ManagedThreadId}\" ) )\n                .Subscribe( Console.WriteLine );\n            Console.ReadLine();\n        }\n    }\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\nMain:9\nCreate:9\nDo:11\n1\nDo:11\n2\n\n\nObserveOn\u3067ThreadPoolScheduler.Instance\u3068\u3044\u3046\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\nObserveOn\u306e\u5148\u306eDo\u304c\u5b9f\u884c\u3055\u308c\u308b\u30b9\u30ec\u30c3\u30c9\u304cMain\u30b9\u30ec\u30c3\u30c9\u3068\u7570\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\nSubscribeOn\u306e\u5834\u5408\n\nSubscribeOn\nConsole.WriteLine( $\"Main:{Thread.CurrentThread.ManagedThreadId}\" );\nvar sequence = Observable.Create<int>( o => {\n    Console.WriteLine( $\"Create:{Thread.CurrentThread.ManagedThreadId}\" );\n    o.OnNext( 1 );\n    o.OnNext( 2 );\n    o.OnCompleted();\n    return System.Reactive.Disposables.Disposable.Empty;\n} );\n\nsequence\n    .SubscribeOn( ThreadPoolScheduler.Instance )\n    .Do( x => Console.WriteLine( $\"Do:{Thread.CurrentThread.ManagedThreadId}\" ) )\n    .Subscribe( Console.WriteLine );\nConsole.ReadLine();\n\n\n\n\u5b9f\u884c\u7d50\u679c\nMain:8\nCreate:10\nDo:10\n1\nDo:10\n2\n\n\nObservable.Create\u306b\u3088\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u751f\u6210\u305d\u306e\u3082\u306e\u304c\u3001Main\u30b9\u30ec\u30c3\u30c9\u3068\u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\n\u4f7f\u3044\u9053\n\u4f8b\u3048\u3070\u3001\u4f55\u304b\u3057\u3089Web\u304b\u3089\u53d6\u3063\u3066\u304f\u308b\u3088\u3046\u306a\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f5c\u308a\u305f\u3044\u5834\u5408\u306b\u308f\u3056\u308f\u3056\u975e\u540c\u671f\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u7121\u304f\u306a\u308a\u307e\u3059\u3002\n\u975e\u540c\u671f(\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u4e0a)\u3067Web\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u306a\u3089\u3001\n.SubscribeOn( ThreadPoolScheduler.Instance )\u3092\u5f15\u3063\u4ed8\u3051\u3066\u3084\u308b\u3060\u3051\u3067\u975e\u540c\u671f\u5316\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nRx(Reactive Extensions)\u3067\u306f\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u30b9\u30ec\u30c3\u30c9\u3092\u81ea\u5728\u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## \u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3092\u5207\u308a\u66ff\u3048\u308b\u30aa\u30da\u30ec\u30fc\u30bf\n\n* ObserveOn\n* SubscribeOn\n\n\u3053\u306e\u9055\u3044\u306f\u3001\u305d\u306e\u5148\u306b\u4f5c\u7528\u3059\u308b\u306e\u304b\u3001\u305d\u306e\u524d\u306b\u4f5c\u7528\u3059\u308b\u306e\u304b\u306e\u9055\u3044\u3067\u3059\u3002\n\n#### ObserveOn\u306e\u5834\u5408\n\n```csharp:ObserveOn\nusing System;\nusing System.Reactive.Concurrency;\nusing System.Reactive.Linq;\nusing System.Threading;\n\nnamespace TestSpace {\n\tclass Program {\n\t\tstatic void Main( string[] args ) {\n\t\t\tConsole.WriteLine( $\"Main:{Thread.CurrentThread.ManagedThreadId}\" );\n\t\t\tvar sequence = Observable.Create<int>( o => {\n\t\t\t\tConsole.WriteLine( $\"Create:{Thread.CurrentThread.ManagedThreadId}\" );\n\t\t\t\to.OnNext( 1 );\n\t\t\t\to.OnNext( 2 );\n\t\t\t\to.OnCompleted();\n\t\t\t\treturn System.Reactive.Disposables.Disposable.Empty;\n\t\t\t} );\n\n\t\t\tsequence\n\t\t\t\t.ObserveOn( ThreadPoolScheduler.Instance )\n\t\t\t\t.Do( x => Console.WriteLine( $\"Do:{Thread.CurrentThread.ManagedThreadId}\" ) )\n\t\t\t\t.Subscribe( Console.WriteLine );\n\t\t\tConsole.ReadLine();\n\t\t}\n\t}\n}\n```\n\n```:\u5b9f\u884c\u7d50\u679c\nMain:9\nCreate:9\nDo:11\n1\nDo:11\n2\n```\n\nObserveOn\u3067ThreadPoolScheduler.Instance\u3068\u3044\u3046\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\nObserveOn\u306e\u5148\u306eDo\u304c\u5b9f\u884c\u3055\u308c\u308b\u30b9\u30ec\u30c3\u30c9\u304cMain\u30b9\u30ec\u30c3\u30c9\u3068\u7570\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\n### SubscribeOn\u306e\u5834\u5408\n\n```csharp:SubscribeOn\nConsole.WriteLine( $\"Main:{Thread.CurrentThread.ManagedThreadId}\" );\nvar sequence = Observable.Create<int>( o => {\n\tConsole.WriteLine( $\"Create:{Thread.CurrentThread.ManagedThreadId}\" );\n\to.OnNext( 1 );\n\to.OnNext( 2 );\n\to.OnCompleted();\n\treturn System.Reactive.Disposables.Disposable.Empty;\n} );\n\nsequence\n\t.SubscribeOn( ThreadPoolScheduler.Instance )\n\t.Do( x => Console.WriteLine( $\"Do:{Thread.CurrentThread.ManagedThreadId}\" ) )\n\t.Subscribe( Console.WriteLine );\nConsole.ReadLine();\n```\n\n```:\u5b9f\u884c\u7d50\u679c\nMain:8\nCreate:10\nDo:10\n1\nDo:10\n2\n```\n\nObservable.Create\u306b\u3088\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u751f\u6210\u305d\u306e\u3082\u306e\u304c\u3001Main\u30b9\u30ec\u30c3\u30c9\u3068\u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n-----\n\n### \u4f7f\u3044\u9053\n\n\u4f8b\u3048\u3070\u3001\u4f55\u304b\u3057\u3089Web\u304b\u3089\u53d6\u3063\u3066\u304f\u308b\u3088\u3046\u306a\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f5c\u308a\u305f\u3044\u5834\u5408\u306b\u308f\u3056\u308f\u3056\u975e\u540c\u671f\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u7121\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u975e\u540c\u671f(\u30b9\u30ec\u30c3\u30c9\u30d7\u30fc\u30eb\u4e0a)\u3067Web\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u306a\u3089\u3001\n**.SubscribeOn( ThreadPoolScheduler.Instance )**\u3092\u5f15\u3063\u4ed8\u3051\u3066\u3084\u308b\u3060\u3051\u3067\u975e\u540c\u671f\u5316\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\n\n", "tags": ["Rx", "C#"]}