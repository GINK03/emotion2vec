{"tags": ["Python", "\u6a5f\u68b0\u5b66\u7fd2", "Spark", "MLlib", "MachineLearning"], "context": " More than 1 year has passed since last update.Spark\u30b7\u30ea\u30fc\u30ba\u7b2c\uff13\u5f3e\u306e\u8a18\u4e8b\u3067\u3059\u3002MLlib\u306eLDA\u3092\u4f7f\u3063\u3066Yahoo News\u306e\u8a18\u4e8b\u3092\u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb(LDA:Latent Dirichlet allocation)\u3067\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u307f\u307e\u3059\u3002\n\u7b2c\u4e00\u5f3e\n\u3010\u6a5f\u68b0\u5b66\u7fd2\u3011iPython Notebook\u3067Spark\u3092\u8d77\u52d5\u3055\u305b\u3066MLlib\u3092\u8a66\u3059\n\u3000\u3000\u3000http://qiita.com/kenmatsu4/items/00ad151e857d546a97c3\n\u7b2c\u4e8c\u5f3e\n\u3010\u6a5f\u68b0\u5b66\u7fd2\u3011Spark MLlib\u3092Python\u3067\u52d5\u304b\u3057\u3066\u30ec\u30b3\u30e1\u30f3\u30c7\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u307f\u308b\n\u3000\u3000\u3000http://qiita.com/kenmatsu4/items/42fa2f17865f7914688d\n\n0. \u74b0\u5883\n\nOS: Mac OSX Yosemite 10.10.3\nSpark: spark-1.5.0-bin-hadoop2.6\nPython: 2.7.10 |Anaconda 2.2.0 (x86_64)| (default, May 28 2015, 17:04:42) \n\n\u672c\u7a3f\u3067\u306f\u4e0a\u8a18\u306e\u74b0\u5883\u3067\u884c\u3063\u305f\u3082\u306e\u3092\u8a18\u8f09\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u4ed6\u306e\u74b0\u5883\u3067\u306f\u8a2d\u5b9a\u304c\u7570\u306a\u308b\u5834\u5408\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\nPython\u306e\u5b9f\u884c\u306fiPython Notebook(Jupyter)\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n1. \u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\u306e\u53d6\u5f97\nhttp://headlines.yahoo.co.jp/rss/list \u306bYahoo News\u306eRSS\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u3053\u304b\u3089\u30ea\u30f3\u30af\u3092\u53ce\u96c6\u3057\u3066\u8a18\u4e8b\u3092\u96c6\u3081\u307e\u3059\u3002\n# \u5404\u7a2e\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom bs4 import BeautifulSoup\nimport requests,json, time\nfrom requests_oauthlib import OAuth1Session\nfrom requests.exceptions import ConnectionError, ReadTimeout, SSLError\nimport numpy as np\nimport numpy.random as rd\nimport MeCab as mc\nfrom collections import defaultdict\nimport cPickle as pickle\nimport traceback\nfrom datetime import datetime as dt\n\nIPADIC_NEOLOGD_PATH = '/usr/local/lib/mecab/dic/mecab-ipadic-neologd/'\n\ndef unpickle(filename):\n    with open(filename, 'rb') as fo:\n        p = pickle.load(fo)\n    return p\n\ndef to_pickle(filename, obj):\n    with open(filename, 'wb') as f:\n        pickle.dump(obj, f, -1)\n\n\u4e0b\u8a18\u304cYahoo News (http://headlines.yahoo.co.jp/rss/list) \u304b\u3089\u8a18\u4e8b\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\u7d50\u69cb\u6642\u9593\u3082\u304b\u304b\u308a\u307e\u3059\u3057\u3001Yahoo News\u3078\u7d50\u69cb\u306a\u6570\u306e\u30a2\u30af\u30bb\u30b9\u3092\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u65e2\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066Mecab\u3067\u5f62\u614b\u7d20\u89e3\u6790\u6e08\u307f\u306e\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3082\u3057\u3053\u306e\u8a18\u4e8b\u306e\u518d\u73fe\u3092\u8a66\u3059\u5834\u5408\u306f\u305d\u3061\u3089\u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002(\u6b21\u9805\u3067\u8aac\u660e\u3057\u307e\u3059\u3002)\nMecab\u306f@overlast \u3055\u3093\u306emecab-ipadic-neologd\u3092\u4f7f\u3044\u307e\u3059\u3002\u4ee5\u524d\u3001\u3053\u306eMecab\u306e\u5c0e\u5165\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3067\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u5c0e\u5165\u3059\u308b\u969b\u306f\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n# Yahoo News\u304b\u3089\u8a18\u4e8b\u3092\u62fe\u3063\u3066\u304f\u308b\u30af\u30e9\u30b9\nclass Category():\n    def __init__(self, name=\"\", url=\"\"):\n        self.name = name\n        self.url = url\n        self.article_list = []\n\n    def addArticle(self, article):\n        self.article_list.append(article)\n\nclass Article():\n    def __init__(self, title=\"\", contents=u\"\u672a\u53d6\u5f97\", url=\"\"):\n        self.url = url\n        self.title = title\n        self.contents = contents\n        self.mecabed_contents = {}\n\n    def add_contents(self, contents):\n        self.contents = contents\n\n    def exec_mecab(self):\n        self.mecabed_contents = Article.mecab_analysis(self.contents)\n\n    @staticmethod\n    def mecab_analysis(sentence):\n        t = mc.Tagger('-Ochasen -d {}'.format(IPADIC_NEOLOGD_PATH))\n        sentence = sentence.replace('\\n', ' ')\n        text = sentence.encode('utf-8') \n        node = t.parseToNode(text) \n        ret_list = []\n        while node.next: \n            if node.surface != \"\":  # \u30d8\u30c3\u30c0\u3068\u30d5\u30c3\u30bf\u3092\u9664\u5916\n                word_type = node.feature.split(\",\")[0]\n                if word_type in [\"\u540d\u8a5e\", \"\u5f62\u5bb9\u8a5e\", \"\u52d5\u8a5e\"]:\n                    plain_word = node.feature.split(\",\")[6]\n                    if plain_word !=\"*\":\n                        ret_list.append(plain_word.decode('utf-8'))\n            node = node.next\n        return ret_list \n\nDEBUG = True\nclass YahooHeadlines():\n    def __init__(self):\n        self.url = 'http://headlines.yahoo.co.jp/rss/list'\n        self.category_list = []\n        self.f = open('log/log_{}.log'.format(dt.now().strftime('%Y%m%d_%H%M%S')), 'a+')\n\n    def close(self):\n        self.f.close()\n\n    def logging(self, log):\n        self.f.write(log.encode('utf-8'))\n\n    def unpickle(self, filename):\n        with open(filename, 'rb') as fo:\n            p = pickle.load(fo)\n        self.category_list = p\n\n    def pickle(self, filename):\n        with open(filename, 'wb') as f:\n            pickle.dump(self.category_list, f, -1)\n\n    def download_contents(self):\n        self.get_category_url_list()\n        self.get_article_title_list()\n        self.get_all_article()\n\n    def get_url_list(self):\n        return self._url_list\n\n    def set_category_list(self, category_list):\n        self.category_list = category_list\n\n    def get_category_list(self):\n        return self.category_list\n\n    def get_category_url_list(self):\n        res = requests.get(self.url)\n        news_all = BeautifulSoup(res.text, \"xml\")\n        for link in news_all.find_all('a'):\n            url = link.get('href')\n            if 'xml' in url and 'my.yahoo.co.jp' not in url:\n                self.category_list.append(Category(name=link.parent.text.replace('\\n',''), url=url))\n        if DEBUG:\n            print \"len(self.category_list)\", len(self.category_list)\n\n    def get_article_title_list(self):\n        for category in self.category_list:\n            res = requests.get(category.url)\n            soup = BeautifulSoup(res.text, \"xml\")\n            for item in soup.find_all('item'):\n                category.addArticle(Article(title=item.title.getText(), url=item.link.getText()))\n\n    def count(self):\n        print \"len(self.category_list)\", len(self.category_list)\n        for cat in self.category_list:\n            print \"len(cat.article_list)\", len(cat.article_list)\n\n\n    def get_all_article(self, start=0, end=None):\n        end = len(self.category_list) if end is None else end\n        for cat in self.category_list[start:end]:\n            print cat.name\n            for article in cat.article_list:\n                try:\n                    print article.title\n                    time.sleep(0.5)   # interval time for reducing server load\n                    res = requests.get(article.url)\n                    soup = BeautifulSoup(res.text, \"xml\")\n                    t = soup.find(\"p\", \"ynDetailText\")\n                    if len(t.getText()) > 0:\n                        temp = []\n                        for line in t.prettify().split('\\n'):\n                            if '<!-- /.paragraph -->' in line:\n                                break\n                            temp.append( line )\n                        article.add_contents(BeautifulSoup(\"\\n\".join(temp), \"xml\").get_text().replace(' ','').replace('\\n',''))\n                        article.exec_mecab()\n                except Exception as e:\n                    print \"error.\"\n                    self.logging(u\"{},{}\".format(article.url, article.title))\n                    self.logging(traceback.format_exc())\n\n    def export(self):\n        news_list = []\n        for c in self.category_list:\n            for a in c.article_list:\n                if u'\u672a\u53d6\u5f97' != a.contents:\n                    news_list.append(a.mecabed_contents)\n        return news_list\n\nNews\u8a18\u4e8b\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3001pickle\u3067\u4fdd\u5b58\u3057\u307e\u3059\u3002\nyh = YahooHeadlines()\nprint \"YahooHeadlines() created.\"\nyh.get_category_url_list()\nprint \"get_category_url_list() finished.\"\nyh.get_article_title_list()\nprint \"get_article_title_list() finished.\"\nyh.get_all_article(start=9, end=30)\ndat = yh.export()\nto_pickle('mecabed_contents.npy', dat)\n\n\n2. Mecab\u3067\u306e\u5f62\u614b\u7d20\u89e3\u6790\u6e08\u307f\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3068\u8aad\u307f\u8fbc\u307f\n\u89e3\u6790\u6e08\u307f\u306e mecabed_contents.npy \u306fGitHub\u306e\u4e0b\u8a18\u306e\u5834\u6240\u306b\u683c\u7d0d\u3057\u3066\u3042\u308a\u307e\u3059\u306e\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/matsuken92/Qiita_Contents/tree/master/LDA_with_Spark\n\u4e0b\u8a18\u3067\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\ndat = unpickle('mecabed_contents.npy')\n\n\n2. Spark\u3067\u4f7f\u7528\u3059\u308bJava Heap\u30b5\u30a4\u30ba\u306e\u5909\u66f4\nLDA\u306e\u8a08\u7b97\u3067\u3001Java\u306eOutOfMemory Exception\u304c\u51fa\u305f\u306e\u3067\u3001Heap\u30b5\u30a4\u30ba\u3092\u5e83\u3052\u3066\u304a\u304d\u307e\u3059\u3002(\u5b9f\u884c\u3059\u308b\u74b0\u5883\u306b\u3088\u308b\u3068\u601d\u3046\u306e\u3067\u9069\u5b9c\u8a2d\u5b9a\u304f\u3060\u3055\u3044)\ncd $SPARK_HOME/conf\ncp spark-defaults.conf.template spark-defaults.conf\nvi spark-defaults.conf\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306bspark.driver.memory\u306e\u3068\u3053\u308d\u3060\u3051\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3057\u307e\u3059\u3002\n\nspark-defaults.conf\n# spark.master                     spark://master:7077\n# spark.eventLog.enabled           true\n# spark.eventLog.dir               hdfs://namenode:8021/directory\n# spark.serializer                 org.apache.spark.serializer.KryoSerializer\nspark.driver.memory                5g\n# spark.executor.extraJavaOptions  -XX:+PrintGCDetails -Dkey=value -Dnumbers=\"one two three\"\n\n\n\n3. Spark\u306e\u8d77\u52d5\u3068Tf-Idf\u3067\u306e\u7279\u5fb4\u62bd\u51fa\u3001LDA\u3092\u4f7f\u3063\u305f\u5206\u985e\u306e\u5b9f\u65bd\n\n3-1. Spark\u306e\u8d77\u52d5\niPython Notebook(Jupyter)\u3067\u306eSpark\u306e\u8d77\u52d5\u306b\u3064\u3044\u3066\u306f\u524d\u306e\u8a18\u4e8b\u3082\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4f55\u306f\u3068\u3082\u3042\u308c\u3001Spark\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\nimport os, sys\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime as dt\nprint \"loading PySpark setting...\"\nspark_home = os.environ.get('SPARK_HOME', None)\nprint spark_home\nif not spark_home:\n    raise ValueError('SPARK_HOME environment variable is not set')\nsys.path.insert(0, os.path.join(spark_home, 'python'))\nsys.path.insert(0, os.path.join(spark_home, 'python/lib/py4j-0.8.2.1-src.zip'))\nexecfile(os.path.join(spark_home, 'python/pyspark/shell.py'))\n\n\n3-2. \u30c7\u30fc\u30bf\u306eTf-Idf\u306b\u3088\u308b\u30d9\u30af\u30c8\u30eb\u5316\n\u6ce8\uff1a\u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb\u3092Tf-Idf\u3067\u5b9f\u884c\u3059\u308b\u4e8b\u306f\u7cbe\u5ea6\u304c\u4e0a\u304c\u308b\u3068\u3044\u3046\u898b\u89e3\u3068\u3001\u3068\u306f\u3044\u3048\u7406\u8ad6\u7684\u306b\u306f\u5358\u8a9e\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u60f3\u5b9a\u3055\u308c\u305f\u3082\u306e\u3067\u3042\u308b\u3068\u3044\u3046\u898b\u89e3(Tf\u2212Idf\u3060\u3068float\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u7406\u8ad6\u3068\u5408\u308f\u306a\u3044)\u3068\u3042\u308b\u3088\u3046\u3067\u3059\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\u666e\u901a\u306b\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u65b9\u5f0f\u3082\u8fd1\u3005\u8ffd\u8a18\u3057\u307e\u3059\u3002(\u30b3\u30e1\u30f3\u30c8\u6b04\u53c2\u7167\u3002 [@icoxfog417 \u3055\u3093\u30b3\u30e1\u30f3\u30c8\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002])\n\u307e\u305a\u306f\u3001\u53d6\u5f97\u3057\u305f\u8a18\u4e8b\u3092LDA\u306b\u304b\u3051\u308b\u305f\u3081\u306e\u4e0b\u6e96\u5099\u3068\u3057\u3066Tf-Idf\u306b\u3088\u308b\u30d9\u30af\u30c8\u30eb\u5316\u3092\u884c\u3044\u307e\u3059\u3002\nimport pandas as pd\nfrom pyspark.mllib.feature import HashingTF\nfrom pyspark.mllib.feature import IDF\n\nhashingTF = HashingTF()\ndocuments = sc.parallelize(dat)\ndef hashing(x):\n    return hashingTF.transform([x]).indices[0]\n\nhashed = documents.flatMap(lambda line: line) \\\n             .map(lambda word: (hashing(word), word)).distinct()\n\nhashed_word = pd.DataFrame(hashed.collect(), columns=['hash','word']).set_index('hash')\n\nhashed_word\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306b\u306a\u308a\u307e\u3059\u3002\u5f8c\u3005\u3001hash\u5024\u304b\u3089\u5358\u8a9e\u3092\u53d6\u308a\u51fa\u3057\u305f\u3044\u306e\u3067\u30c6\u30fc\u30d6\u30eb\u5316\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n\n\nword\n\n\nhash\n\n\n\n\n\n605\n\u62db\u5f85\u5ba2\n\n\n342707\n\u30ae\u30e3\u30f3\u30d6\u30e9\u30fc\n\n\n578741\n\u30d5\u30e9\u30ef\u30fc\u30ab\u30f3\u30d1\u30cb\u30fc\u30ba\n\n\n445743\n\u9053\u5f8c\u6e29\u6cc9\n\n\n599361\nBURBERRY\n\n\n520201\n\u6771\u4eac\u30b2\u30fc\u30e0\u30b7\u30e7\u30a6\n\n\n...\n...\n\n\n735678\n\u7701\u3051\u308b\n\n\n56058\n\u6cbb\u5b89\n\n\n444490\n\u6708\u5b50\n\n\n706206\nGENERATIONS\n\n\n267402\n\u30af\u30fc\u30da\n\n\n\n41261 rows \u00d7 1 columns\nSpark\u3067Tf-Idf\u5024\u3092\u8a08\u7b97\u3057\u3066LDA\u3067\u8aad\u307f\u8fbc\u3081\u308b\u3088\u3046\u306b\u5909\u63db\u3057\u305fRDD\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n# Tf-Idf\u306e\u751f\u6210\ntf = hashingTF.transform(documents)\ntf.cache()\n\nidf = IDF().fit(tf)\ntf_idf_data = idf.transform(tf)\n\n\n3-3. LDA\u306e\u5b9f\u884c\nSpark MLlib\u3067LDA\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u3068\u308a\u3042\u3048\u305ak=30\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u30c8\u30d4\u30c3\u30af\u6570\u3092\u3069\u3046\u6c7a\u3081\u308b\u3079\u304d\u304b\u3001\u8ab2\u984c\u3067\u3059\u3002\u4eca\u56de\u306f\u30a8\u30a4\u3084\u3063\u3068\u6c7a\u3081\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001\u3082\u3063\u3068\u3044\u3044\u5024\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\uff08k\u306e\u6c7a\u3081\u65b9\u3054\u5b58\u77e5\u306e\u65b9\u3001\u6559\u3048\u3066\u4e0b\u3055\u3044\uff01\uff09\nfrom pyspark.mllib.clustering import LDA, LDAModel\nfrom pyspark.mllib.linalg import Vectors\nprint dt.now().strftime('%Y/%m/%d %H:%M:%S')\nK = 30\n\n\n# Index documents with unique IDs\ncorpus = tf_idf_data.zipWithIndex().map(lambda x: [x[1], x[0]]).cache()\n\n# Cluster the documents into three topics using LDA\n%time ldaModel = LDA.train(corpus, k=K)\n\n# Output topics. Each is a distribution over words (matching word count vectors)\nprint(\"Learned topics (as distributions over vocab of \" + str(ldaModel.vocabSize()) + \" words):\")\n%time topics = ldaModel.topicsMatrix()\n\nprint dt.now().strftime('%Y/%m/%d %H:%M:%S')\n\n\u975e\u529b\u306a\u201d\u65b0\u3057\u3044Macbook\u201d\u3067\u5b9f\u884c\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u8a08\u7b97\u306f12\u5206\u307b\u3069\u3067\u3057\u305f\u3002\u3084\u308c\u308b\u3082\u306e\u3067\u3059\u306d  \n\nout\n2015/09/20 17:31:17\nCPU times: user 6.34 ms, sys: 2.09 ms, total: 8.44 ms\nWall time: 30.8 s\nLearned topics (as distributions over vocab of 1048576 words):\nCPU times: user 5min 14s, sys: 6min 12s, total: 11min 26s\nWall time: 11min 53s\n2015/09/20 17:43:42\n\n\n\n3-4. \u7d50\u679c\u306e\u51fa\u529b\n\u524d\u9805\u3067\u8a08\u7b97\u3057\u305f\u7d50\u679c\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\ndef idx_to_word(idx):\n    res = hashed_word.ix[idx].word\n    if type(res) == pd.Series:\n        return res.to_dict().values()[0]\n    else:\n        return res\n\nrep_num = 20\n\nfor topic in range(K):\n    print(\"Topic \" + str(topic) + \":\")\n    temp_w = []\n    temp_t = []\n    for word in range(0, ldaModel.vocabSize()):\n\n        top = topics[word][topic]\n        if top != 0:\n            #print(\"{}:{}\".format(word, top))\n            temp_w.append(word)\n            temp_t.append(top)\n\n    temp_w = np.array(temp_w)\n    temp_t = np.array(temp_t)\n    idx = np.argsort(temp_t)[::-1]\n    print ','.join(map(idx_to_word, temp_w[idx[:rep_num]]))\n    print temp_t[idx[:rep_num]]\n\n\u4e0b\u8a18\u304c\u5206\u985e\u7d50\u679c\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30c8\u30d4\u30c3\u30af\u304b\u3089\u4e0a\u4f4d20\u5358\u8a9e\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u308c\u3063\u307d\u3044\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u304c\u3001\u307e\u3060\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u304c\u5fc5\u8981\u3067\u3059\u306d\u3002\u305d\u308c\u305e\u308c\u306e\u30c8\u30d4\u30c3\u30af\u304c\u4f55\u3092\u6307\u3057\u3066\u3044\u308b\u304b\u304c\u3044\u307e\u3044\u3061\u4e0d\u660e\u77ad\u3067\u3059\u3002k\u306e\u6c7a\u3081\u65b9\u3067\u3057\u3087\u3046\u304b\u3002\n\nout\nTopic 0:\n3D,1%,JP,Yahoo,co.jp,http://,2Z,FE,TC,WC,JavaScript,SRC,ALT,D2,\u5206,.S,SIG,clear,Mi,GIF\n[ 30498.99621439   6067.97495307   5638.31180986   4239.90976107\n   3839.63866955   3620.87671019   2048.76800459   2035.55013512\n   2035.55013512   2035.55013512   1903.02711354   1898.96547573\n   1820.93929181   1763.1621581    1724.74815005   1688.15876657\n   1613.83355369   1483.59938276   1454.82128817   1338.48860166]\nTopic 1:\n\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0,GPU,\u50b5\u52d9\u8d85\u904e,\u539f\u767a,\u4e9c\u4eba,\u7a3c\u50cd,\u4eac\u30bb\u30e9,\u6f14\u7b97,\u6d5c\u7530,\u65e5\u672c\u30a4\u30f3\u30bf\u30fc,\u63a8\u85a6,\u6751\u4e0a\u6c0f,\u30a6\u30c3\u30c9\u30ef\u30fc\u30c9,\u30e9\u30a4\u30d6\u30e9\u30ea,\u8cb7\u3044\u4ed8\u3051,ABC,DI,\u6d3b\u7528,\u4e88\u9632\u533b\u5b66,\u7d14\u8cc7\u7523\n[ 230.26782221  222.54019498  109.0725775    86.27167445   86.10057908\n   84.22603202   67.68409895   66.99081298   60.91536464   57.4006148\n   57.16789412   50.24346965   50.17063652   45.16572514   43.57092785\n   43.37177773   43.06492631   41.84250571   40.60449032   39.60700784]\nTopic 2:\n\u97f3,\u6559\u6388,\u30a2\u30f3\u30d7,\u8a34\u8a1f,\u30b9\u30d4\u30fc\u30ab\u30fc,\u30b9\u30ba\u30ad,\u5927\u5b66,\u5171\u7523\u515a,A-10,DR,\uff08\u682a\uff09,SUZUKI,\u3055\u3093,\u8cc7\u672c\u91d1,HONDA,\u677f\u91ce,\u6c0f,\u9332\u753b,Internet,\u5e2f\n[ 313.9497848   311.07373468  291.18216703  200.41036663  174.99267573\n  168.83426043  162.12249119  160.4631899   158.44550237  155.86272676\n  152.51636208  145.63724853  144.22014499  143.88263097  138.80529834\n  136.38362019  133.87558279  132.8150622   127.1633457   123.42496755]\nTopic 3:\n\u30a4\u30eb\u30ab,\u60a3\u8005,\u642c\u5165,\u6d77\u8ecd,\u52a0\u76df,\u7c73\u6d77\u8ecd,\u4f5c\u6226,\u5f01\u8b77\u58eb,\u5e97\u4e3b,\u5217\u8eca,\u6625\u753b,\u6975ZERO,\u8ecd\u4e8b,\u798f\u5ca1,\u5951\u7d04,\u56e3\u4f53,\u7f8e\u5973\u3068\u91ce\u7363,\u4f4d,\u30a8\u30f3\u30d6\u30ec\u30e0,\u66f4\u65b0\n[ 285.35384105  125.29445731  122.03394224  117.37108065  114.56787287\n  107.67685141  107.66792085  107.49265658  104.77371348  104.55689386\n  103.34343411  101.54959522   99.13195887   97.66056425   87.6906483\n   83.77795736   82.83739301   82.06384181   81.99063074   79.61260345]\nTopic 4:\n\u5c0f\u7b20\u539f\u8af8\u5cf6,19\u65e5,\u96e8,NARUTO-\u30ca\u30eb\u30c8-,\u898b\u8fbc\u307f,\u3042\u3059,\u6240,\u30c1\u30e7\u30b3\u30dc,\u304d\u3087\u3046,\u7530\u7551,\u53f0\u98a820\u53f7,\u571f\u7802\u707d\u5bb3,\u5927\u85e4,\u30eb\u30fc\u30ca,\u6b66\u5668,\u975e\u5e38,\u5c40,\u3042\u308b,\u3093,\u6771\u5317\n[ 230.41298471  206.73983243  201.38377462  162.53955457  156.01089213\n  152.26626716  147.20327527  143.56116858  138.58499586  136.35519513\n  134.63602579  131.89025362  122.02553338  114.84698842  114.73039984\n  112.58882552  111.19144156  109.29280382  108.74278871  108.06638723]\nTopic 5:\n\u5e97,LGBT,\u5730\u65b9,\u7d05\u8449,\u7fbd\u751f,\u30a8\u30f4\u30a7\u30ec\u30b9\u30c8,\u5f53\u4e8b\u8005,USJ,MM,\u6eb6\u63a5,NorAh,\u91e7\u8def,\u9078\u624b,\u91ce\u7403,\u4eba,\u963f\u90e8,\u571f\u80a5,\u640d\u5931,\u6751\u6728,\u6df1\u753a\n[ 534.02134183  233.21159627  161.734613    149.27499135  148.04072853\n  139.83024817  128.12607155  127.16365004  121.55663036  116.93175677\n  115.10536063  111.9230136   108.32928292  101.01309412   99.57305727\n   97.8645909    93.31870841   90.55202246   88.16103482   85.11086582]\nTopic 6:\n\u81ea\u885b\u968a,\u5f53\u8a72,\u6d3b\u52d5,\u9805,\u5b9f\u65bd,\u6551\u52a9,\u7b49,\u652f\u63f4,\u898f\u5b9a,\u7269\u54c1,\u6761,\u5354\u529b,\u63aa\u7f6e,\u90e8\u968a,\u5f79\u52d9,\u635c\u7d22,\u4e8b\u614b,\u63d0\u4f9b,\u4e8c,\u8ecd\u968a\n[ 425.27200701  410.14147759  340.63660257  335.99268066  301.03835559\n  277.69844718  262.99789699  244.04626438  241.86903535  233.56945124\n  226.29603529  213.94031937  208.31405209  198.09771261  191.92479361\n  173.18290576  171.56092092  164.69617574  147.1031081   144.02472698]\nTopic 7:\n\u3093,\u601d\u3046,\u3055\u3093,\u4eba,\u30c0\u30f3\u30b9,\u3044\u304f,\u4f1a\u5834,\u3088\u3046,\u3084\u308b,\u9078\u624b,\u8a00\u8449,\u66f2,\u30b9\u30c6\u30fc\u30b8,\u306a\u308b,\u4f5c\u308b,\u304f\u308b,\u51fa\u6f14,\u30e1\u30f3\u30d0\u30fc,\u3082\u306e,\u5973\u6027\n[ 400.87252109  311.02748052  250.83203469  243.87087686  241.62681685\n  235.1485944   219.71001515  212.56170962  206.76164473  198.28774766\n  190.64751854  190.09850913  187.53964957  178.53456693  173.1581961\n  170.93611348  167.90595764  166.71680877  163.85967037  160.64966047]\nTopic 8:\n\u30a4\u30fb\u30b9\u30f3\u30ae,\u683c\u5b89\u30b9\u30de\u30db,\u9060\u85e4,\u4ea4\u756a,\u5efa\u7bc9,\u8a2d\u8a08,SHEENA,\u30ab\u30fc\u30e9,\u3067\u3093\u3071\u7d44.inc,\u8eab\u9577,\u30b8\u30e7\u30fc,\u65bd\u5de5,\u5343\u9ce5,\u30a4\u30d6,\u30af\u30ea\u30b9\u30c1\u30e3\u30f3,\u30af\u30e9,\u63a5\u7a2e,\u4e8b\u4f8b,\u512a\u5f85,\u30b3\u30f3\u30da\n[ 122.01843494  100.42493188   96.7819965    90.82173926   84.67996554\n   84.04629268   81.2426219    81.22826354   79.28066538   77.10645017\n   75.3958751    70.7937157    67.79664672   67.62432926   62.02688985\n   61.12174747   60.911537     60.671785     60.6691196    59.22618216]\nTopic 9:\n\u77f3\u539f,\u5c71\u4e0b,\u67089,\u539f\u5b50\u529b\u767a\u96fb\u6240,\u7dcf,MAX,\u3055\u3093,\u30a2\u30ea\u30d0\u30d0,\u30a6\u30a9\u30f3,\u5ddd\u5cf6,\u604b,\u50e7\u4fb6,\u4e07,\u843d\u672d,\uff0c,\u9ad8\u5dba,\u5f79,\u4e3b\u6f14,\u574a\u3055\u3093,\u96c7\u7528\u52b4\u50cd\u90e8\n[ 251.21702545  246.98644992  188.33673645  180.99682139  170.83125774\n  161.27898596  150.18861226  148.37545664  145.26656891  116.99233982\n  115.97102397  111.61849001  108.61185273  108.09102905  104.38739566\n  103.32743846   96.51126917   95.40721995   95.33654317   94.80918496]\nTopic 10:\n\u96c6\u56e3\u7684\u81ea\u885b\u6a29,\u884c\u4f7f,\u5b89\u4fdd,\u65e5\u672c,\u907a\u9aa8,\u6cd5\u6848,\u5317\u671d\u9bae,GO,\u30b7\u30b9\u30c6\u30e0,\u9996\u76f8,\u7c73,Pokemon,\u97d3\u56fd,\u5e73\u548c,\u6226\u4e89,\u601d\u8003,\u4f1a,\u6210\u7acb,\u5c0f\u6797,\u30c6\u30ed\u30e1\u30a2\n[ 325.4190462   294.03767623  253.6549491   215.81603062  212.85361125\n  212.4241334   203.16256149  145.41407277  145.35949337  144.77378143\n  140.99962347  135.45572385  131.0855378   121.75771794  118.79648391\n  117.21162034  115.63520103  115.03735685  115.02058923  114.84203109]\nTopic 11:\n\uff11,\uff10,\uff12,\uff13,\uff15,\uff14,\uff19,\uff18,\u6cd5\u6848,\uff16,\u65e5,\uff17,\u59d4\u54e1,\u5e74,\u53cd\u5bfe,\u56fd\u4f1a,\uff05,\u6848,\u8b70\u54e1,\u4e0e\u515a\n[ 2365.0615964   1843.50976149  1580.14166211   977.45697796   972.93295992\n   900.33510929   811.76679401   734.30895952   708.8845634    687.91169097\n   666.9871633    638.37414039   480.65198962   403.9740617    397.36591408\n   389.03843978   378.11150102   372.94260471   366.06518175   348.52658829]\nTopic 12:\n\uff05,\u9031,\u4eba,\u8336,\u52e4\u52b4,\u5c0f\u6728\u66fd,\u5c71\u53e3\u7d44,\u6851\u539f,\u30b3\u30eb\u30af,\u6d3e\u9063,\u8abf\u67fb,\u5be9\u67fb,\u8a2a\u65e5,\u30bb\u30cc\u30ea\u515a,\u30d5\u30a1\u30f3,\u56de\u7b54,\u5ef6\u9577,\u671f\u9593,\u4e07,\u3055\u3093\n[ 422.50645087  213.35496472  190.18553723  185.25693     172.87477417\n  169.32178049  168.65380074  168.60270933  165.10107941  163.39675225\n  158.10205955  157.84657732  156.61876499  150.94891424  144.86004174\n  142.60856342  141.41821081  139.14405814  136.07482269  129.11386079]\nTopic 13:\n\u30da\u30c3\u30c8,\u30bf\u30a4\u30e4,\u70b9\u691c,\u5bcc\u58eb\u30d5\u30a4\u30eb\u30e0,\u5e97,\u72ac,\u4e8b\u6545,\u98fc\u3044\u4e3b,\u30d1\u30f3,\u91cf\u7684\u7de9\u548c,\u30d0\u30d6\u30eb,\uff12\u6708,\u30a2\u30fc\u30c1\u30e3\u30fc,\u6a5f\u95a2,\u52d5\u7269,\u4e8b\u696d,ELEMENT,\u9589\u9396,\u30da\u30c3\u30c8\u30b7\u30c3\u30bf\u30fc,\u4e16\u8a71\n[ 144.38505303  139.38328152  138.65459253  120.09515611  117.32842831\n  111.2811561    97.34985563   90.9386823    88.76830528   86.09862267\n   86.03676176   81.16131412   73.04842045   71.94537875   71.76221994\n   69.36573458   67.72482177   67.56636611   64.59788527   63.72988257]\nTopic 14:\n\u30c7\u30d6\u30ea,\u5b87\u5b99,\u885b\u661f,\u5ca1\u91ce,S.M.A.R.T,\u30e4\u30b9,\u30a2\u30f3\u30d0\u30fc\u30fb\u30cf\u30fc\u30c9,\u5149\u5b50,\u6728\u4e0b\u534a\u592a,\u30d3\u30fc\u30e0,\u9664\u53bb,\u30d1\u30b9\u30bf,\u611b\u4e59\u5973\u2605DOLL,\u4e8c\u5bae,\u30ed\u30b1\u30c3\u30c8,\u9078\u624b,\u885d\u7a81,\u5efa\u8a2d,\u3081\u3063\u304d,\u7be0\u539f\n[ 200.98746196  109.11393056  102.69563054   71.64443048   70.61628478\n   70.21806077   69.47009154   67.71824577   64.58911369   63.98653636\n   61.75894589   57.1558711    54.17379175   50.53475054   50.08003639\n   49.38497398   49.1474643    48.05613337   47.37467689   47.21593097]\nTopic 15:\n\u5217\u8eca,\u5e97,\u9244\u9053,\u99c5,\u8f38\u9001,\u914d\u5076\u8005\u63a7\u9664,\u4e07,\u5186,\u8cde\u54c1,\u5e7c\u866b,\u88ab\u544a,\u907a\u4f1d\u5b50,\u6c34\u5bb3,\u85ac,\u304c\u308c\u304d,\u5ec3\u68c4,\u6559\u80b2,JR\u8ca8\u7269,\u5b9f\u7fd2,\u5236\u5ea6\n[ 209.45549658  172.75201923  164.79055902  147.02460723  146.34946295\n  122.11417714  116.53446688  113.36476153  110.00093014  101.51355757\n  101.49522834   93.61766945   90.44254789   90.21005366   86.14087176\n   85.94118974   85.87426669   83.81989617   81.4445114    81.32144707]\nTopic 16:\n\u66f2,\u4f5c,\u3055\u3093,\u4f5c\u54c1,\u30a4\u30d9\u30f3\u30c8,\u30b9\u30c6\u30fc\u30b8,\u516c\u958b,\u516c\u6f14,\u30e9\u30a4\u30d6,\u3093,\u30ea\u30ea\u30fc\u30b9,\u767b\u5834,\u30a2\u30eb\u30d0\u30e0,\u30d5\u30a1\u30f3,\u62ab\u9732,\u767a\u58f2,\u958b\u50ac,\u601d\u3046,\u53ce\u9332,\u4f1a\u5834\n[ 717.72208948  701.88650132  675.57536789  653.80324063  630.25795307\n  623.56413175  593.77778162  570.85401227  542.29065168  530.72760902\n  527.34422729  504.12104195  477.59137972  477.00323092  449.362484\n  433.71529537  424.21385561  415.6621296   413.39032883  408.44365814]\nTopic 17:\n\u79fb\u6c11,\u6c0f,589 Croatia,\u884c\u70ba,\u9996\u76f8,\u767d\u864e\u968a,\u9001\u4fe1,\u30b9\u30c8\u30fc\u30ab\u30fc\u898f\u5236\u6cd5,\u30af\u30a9\u30f3\u30fb\u30b5\u30f3\u30a6,\u30c9\u30a4\u30c4,\u3064\u304d\u307e\u3068\u3046,\u30bf\u30fc\u30f3,\u30d6\u30eb,\u56fd\u5883,\u30a2\u30dc\u30c3\u30c8,\u9996\u8133,Hungary,\u3089,\u7ba1\u5185,\u96fb\u5b50\u30e1\u30fc\u30eb\n[ 164.44142649  157.91328715  138.76814858  132.5043004   125.07620334\n  114.82154418  112.98085344  108.36476034  100.36013718   99.44524733\n   95.72254509   91.79868319   89.07727008   83.49107233   81.37738585\n   78.16457362   77.45463275   77.03517754   75.47489877   74.73847572]\nTopic 18:\n\uff05,\u30d3\u30fc\u30eb,\u5104,\u4e07,\u30ed\u30fc\u30ea\u30fc,\u9152\u7a0e,\u5897,\u524d\u5e74,\u4f4d,\u6e1b,\u5186,\u8abf\u67fb,\u5411\u3051,\u4f01\u696d,\u6bd4,\u30b5\u30fc\u30d3\u30b9,\u5e02\u5834,\u66f8\u7c4d,\u30dd\u30b9\u30b3,\u5146\n[ 580.21824689  434.53747304  337.23060498  322.90011084  275.51253012\n  255.35439791  202.94575502  195.40863404  193.2023368   188.88153369\n  188.32713027  185.3074174   182.46872612  180.38548978  168.37490369\n  159.71109053  159.65702647  155.00164055  150.38902564  149.40071569]\nTopic 19:\n\u5ca1\u6751,\u4e0e\u308b,\u77f3\u6a4b,\u6b63,\u504f\u5149,\u5ca1\u6751\u9686\u53f2,\u30d6\u30ec\u30a4\u30af\u30c0\u30f3\u30b9,\u72af\u4eba,\u30b5\u30f3\u30b0\u30e9\u30b9,\u30bf\u30c3\u30c1\u30d1\u30cd\u30eb,\u304a\u524d,\u96e3\u6c11,\u925b,\u30db\u30fc\u30e0\u30d1\u30fc\u30c6\u30a3\u30fc,\u53d7\u3051\u5165\u308c,\u30aa\u30e4\u30b8,\u85ac\u5264\u5e2b,\u8056\u5802,\u85ac\u5c40,\u4e09\u83f1\u925b\u7b46\n[ 77.67608384  65.66168235  62.59137271  61.50991922  50.18323397\n  44.41180978  43.50803013  41.09367176  40.73945738  38.9101876\n  37.57614659  36.56843092  35.85623378  35.81638016  34.10640826\n  33.81327369  32.32619825  31.22516758  31.12976321  30.34057197]\nTopic 20:\n\u7df4\u70ad,\u4ea4\u6e09,\u548c\u7530\u30a2\u30ad\u5b50,\u6c96\u7e04,\u307f\u308a\u3093,\u4eba\u6750,\u306e,\u30a2\u30d3\u30ac\u30f3,\u5c31\u696d\u898f\u5247,\u304a\u76c6\u7389,\u4f1a\u5408,\u30c6\u30fc\u30de\u30d1\u30fc\u30af,\u30ad\u30fc,serendipity,\u304a\u5e74\u7389,\u30e6\u30fc\u30fb\u30a8\u30b9\u30fb\u30b8\u30a7\u30a4,PIN,\u7d30\u80de,\u95a3\u50da,\u30b3\u30f3\u30d3\u30cb\n[ 200.98686962  154.40963453  106.75322346  102.73754422  100.48163455\n   98.9612829    94.85889131   93.31730072   93.30796905   93.27433467\n   92.84230214   89.15912225   87.60003563   86.13875558   86.09579478\n   81.48415665   81.37494046   81.10648568   75.53083854   74.76190319]\nTopic 21:\n18\u65e5,\u6cbf\u5cb8,\u6c17\u8c61\u5e81,\u65b0\u51fd\u9928\u5317\u6597,\u65b0\u5e79\u7dda,\u5f80\u5fa9,\u958b\u696d,\u5cf6,\u30b4\u30e0,2015\u5e74,\u5317\u6d77\u9053,\u30cf\u30ef\u30a4,\u521d\u8a3a,\u7236\u5cf6,SAKANAMON,VAMPS,\u51fa\u6f14,\u767a\u8868,3M,\u89b3\u6e2c\n[ 326.61966201  176.18179227  162.70899568  137.89819305  135.61061726\n  131.91446936  127.87583916  123.18162869  119.46292987  114.89846676\n  113.33026617  108.85661384   96.44435409   94.0825422    93.31173974\n   92.48630364   90.34013265   89.33794268   89.00557891   88.60743728]\nTopic 22:\n\u6850\u8c37,RC,\u5742\u53e3,MT,\u3068\u308a,\u30ae\u30ea\u30b7\u30e3,\u30d2\u30ed\u30a4\u30f3\u5931\u683c,\u30b9\u30bf\u30fc\u30fb\u30a6\u30a9\u30fc\u30ba,\u5c71\u5d0e,\u97f3\u697d,\u51cd\u308a\u3064\u304f,\u5f18\u5149,AWA,\u306d\u3076\u305f,\u539f\u4f5c,OB,T\u7d30\u80de,M\u3055\u3093,\u758e\u958b,\u30d1\u30af\u30fb\u30bd\u30eb\u30df\n[ 242.08396669  233.61062923  172.28879872  158.02400752  156.16092615\n  149.65020403  145.38706775  143.01353797  123.89388685  107.61948489\n  105.20201675  104.23176854  103.93186096  101.57317097  101.33211206\n   98.35838535   93.31294228   81.26331036   78.87903503   77.78473071]\nTopic 23:\n\u7a0e\u7406\u58eb,\u5186,\u4e07,\u7533\u544a,\u8f38\u51fa,\u984d,\u7a0e\u91d1,\u4f4d,\u30de\u30a4\u30ca\u30f3\u30d0\u30fc,\u4e8b\u52d9\u6240,\u6240\u5f97,\u5236\u5ea6,\uff05,Philippine,\u5834\u5408,\u5104,\u96fb\u529b,\u4f01\u696d,\u5bb6\u96fb\u91cf\u8ca9\u5e97,\u3053\u3068\n[ 670.6061898   559.30722115  395.94196364  369.03793975  352.9802148\n  350.59584008  348.81817142  345.42194256  281.01115977  270.7837518\n  268.64882097  263.68902183  256.54739477  233.11666127  228.29591629\n  224.91966604  208.54269702  206.95435942  201.05969014  199.71772628]\nTopic 24:\n\u306e,\u61b2\u6cd5,\u4f01\u696d,\u3053\u3068,\u65e5\u672c,\u8005,\u56fd\u5bb6,\u6728\u6751\u7950\u4e00,\u5f01\u8b77\u58eb,\u3067\u304d\u308b,\u4e8b\u696d,\u30c7\u30b6\u30a4\u30f3,\u958b\u767a,\u3088\u3046,\u601d\u3046,\u3042\u308b,\u3044\u3046,\u6a29\u529b,\u6027,\u8003\u3048\u308b\n[ 371.66961434  337.03124549  319.99104269  319.594891    309.51245673\n  287.52866308  271.19087899  267.75333312  261.60521555  256.02307667\n  251.18894465  239.58136963  238.33242359  238.07787656  233.68552111\n  231.93864718  213.6720825   207.06572415  206.83553817  206.39025416]\nTopic 25:\n\u88ab\u5bb3,\u5104,\u5e97\u8217,\u904b\u8ee2,\u5186,\u6599\u91d1,\u65c5\u5ba2,\u30d8\u30ea,\uff10,\u5897,\u8fb2\u696d,\u6e1b,\u524d\u5e74,AKB48,\u5bae\u57ce,\u51fa\u5e97,\u770c,\u5e97,\u4e07,\u9593\n[ 322.28929388  284.37384142  264.46206604  248.44913769  226.60800063\n  226.41660568  212.16654388  205.88384117  189.18011081  173.35857685\n  170.73582962  170.16262181  167.13947269  166.91143061  165.98762565\n  164.64467713  157.49179255  153.26181924  149.68685887  145.6529475 ]\nTopic 26:\n\u5229\u4e0a\u3052,\u4e2d\u56fd,\u5e02\u5834,\u7d4c\u6e08,\u7c73\u56fd,\u30c9\u30eb,km,\uff05,\u5b89,\u4e0a\u6607,\u6a5f,\u91d1\u5229,\u666f\u6c17,\u682a,\u898b\u901a\u3057,\u4e0b\u843d,\u5186,\u6295\u8cc7,\u7387,\u97d3\u56fd\n[ 711.44316161  691.81953214  624.21582824  603.1447681   464.88853934\n  444.72254696  425.1654548   400.24353915  398.08670081  384.38514657\n  378.64702088  364.08566045  354.84095879  354.60928052  346.69708409\n  337.14563576  335.09073391  331.251988    328.37760334  316.68760744]\nTopic 27:\n\u6620\u753b,\u76e3\u7763,\u6f14\u3058\u308b,\u3093,\u50d5,\u4ff3\u512a,\u5f79,\u6b73,\u4f5c,\u30a2\u30f3\u30c8\u30de\u30f3,\u3055\u3093,\u51fa\u6f14,\u4ed5\u4e8b,\u821e\u53f0,\u30c9\u30e9\u30de,\u64ae\u5f71,\u672c,\u5973\u512a,\u601d\u3046,\u3053\u3068\n[ 886.18859913  521.81885818  517.66295551  341.28837968  323.889684\n  320.54609403  318.78269341  305.49616021  292.69106111  291.83105713\n  283.59914761  271.24734272  271.03094368  266.13209765  257.9348965\n  252.86535054  245.73361042  241.71909116  225.00245517  222.13685278]\nTopic 28:\n\u30b2\u30fc\u30e0,\u3067\u304d\u308b,\u642d\u8f09,\u63a1\u7528,\u958b\u767a,\u306e,\u3053\u3068,\u6728\u6751\u7950\u4e00,\u7528,\u53f0,\u6c0f,\u9084\u4ed8,\u5229\u7528,\u5316,\u4e2d\u56fd,\u6027,\u3088\u3046,\u88fd\u54c1,\u306a\u308b,\u30b9\u30de\u30db\n[ 453.00001367  302.95432162  283.96542019  280.46414245  257.18675974\n  254.89400232  246.43778386  219.71661031  217.78910865  214.12011552\n  212.66757085  211.03349157  205.35032129  203.34111497  197.81430578\n  193.73396761  193.32616187  190.05730112  189.02413711  187.26200727]\nTopic 29:\n\u6d45\u8349,\u4ed6\u8005,\u30b3\u30e1\u30c7\u30a3,\u5149\u30af\u30e9\u30d6,\u30e9\u30a4\u30c1,\u30ab\u30ce\u30f3,\u4e2d\u6761,\u305f\u3061,\u30c6\u30a4\u30e9\u30fc,\u6620\u753b\u796d,\u305f\u3051\u3057,\u307e\u3061,\u6d25\u8efd\u4e09\u5473\u7dda,\u79c1,\u4e0a\u6f14,\u53f0\u6771,\u4e45\u77f3\u8b72,\u5145\u96fb,\u5b9d\u585a,JR\u4e5d\u5dde\n[ 170.36663986  156.09380245  132.93872491  127.17520086  127.13453875\n  112.71315236  110.24371137  107.89145147  106.67342349  102.47261177\n   99.54801093   93.6074624    90.90080501   85.36814206   79.75410095\n   79.31855725   78.95649479   76.60922126   74.76350455   74.69475118]\n\n\n\n4. \u8ab2\u984c\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u8ab2\u984c\u304c\u3042\u308a\u307e\u3059\u3002\u77e5\u898b\u306e\u3042\u308b\u65b9\u3001\u305c\u3072\u30a2\u30c9\u30d0\u30a4\u30b9\u3044\u305f\u3060\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n1. \u5358\u8a9e\u306e\u51fa\u73fe\u56de\u6570\u3067\u306f\u306a\u304f\u3001Tf-Idf\u306eBOW\u3067LDA\u306b\u304b\u3051\u308b\u3053\u3068\u3067\u554f\u984c\u304c\u306a\u3044\u304b\u3002\n\u3000\u3000\u3000\u2192 \u3059\u306a\u304a\u306b\u5358\u8a9e\u306e\u30ab\u30a6\u30f3\u30c8\u306b\u3057\u305f\u65b9\u304c\u3088\u3055\u305d\u3046\u3002\n2. Tf-Idf\u5316\u306e\u969b\u306b\u5358\u8a9e\u3092\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u3066\u3044\u308b\u304c\u3001\u5358\u8a9e\u304c\u3076\u3064\u304b\u3063\u3066\u3044\u308b\u3002\uff08\u8981\u5bfe\u51e6\uff09\n3. \u30c8\u30d4\u30c3\u30af\u6570 K\u3092\u3069\u306e\u3088\u3046\u306b\u6c7a\u3081\u308b\u304b\u3002\u4eca\u56de\u306f\u9069\u5f53\u306b30\u306b\u3057\u3066\u3057\u307e\u3063\u305f\u3002\n\n\u53c2\u8003\nSpark 1.5.0 Machine Learning Library (MLlib) Guide\n\u3000http://spark.apache.org/docs/latest/mllib-guide.html\nMLlib - ClusteringLatent Dirichlet allocation (LDA)\n\u3000http://spark.apache.org/docs/latest/mllib-clustering.html#latent-dirichlet-allocation-lda\nSpark\u30b7\u30ea\u30fc\u30ba\u7b2c\uff13\u5f3e\u306e\u8a18\u4e8b\u3067\u3059\u3002MLlib\u306eLDA\u3092\u4f7f\u3063\u3066Yahoo News\u306e\u8a18\u4e8b\u3092\u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb(LDA:Latent Dirichlet allocation)\u3067\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u307f\u307e\u3059\u3002\n\n**\u7b2c\u4e00\u5f3e**\n\u3010\u6a5f\u68b0\u5b66\u7fd2\u3011iPython Notebook\u3067Spark\u3092\u8d77\u52d5\u3055\u305b\u3066MLlib\u3092\u8a66\u3059\n\u3000\u3000\u3000http://qiita.com/kenmatsu4/items/00ad151e857d546a97c3\n**\u7b2c\u4e8c\u5f3e**\n\u3010\u6a5f\u68b0\u5b66\u7fd2\u3011Spark MLlib\u3092Python\u3067\u52d5\u304b\u3057\u3066\u30ec\u30b3\u30e1\u30f3\u30c7\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u307f\u308b\n\u3000\u3000\u3000http://qiita.com/kenmatsu4/items/42fa2f17865f7914688d\n\n#0. \u74b0\u5883\n\n* OS: Mac OSX Yosemite 10.10.3\n* Spark: spark-1.5.0-bin-hadoop2.6\n* Python: 2.7.10 |Anaconda 2.2.0 (x86_64)| (default, May 28 2015, 17:04:42) \n\n\u672c\u7a3f\u3067\u306f\u4e0a\u8a18\u306e\u74b0\u5883\u3067\u884c\u3063\u305f\u3082\u306e\u3092\u8a18\u8f09\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u4ed6\u306e\u74b0\u5883\u3067\u306f\u8a2d\u5b9a\u304c\u7570\u306a\u308b\u5834\u5408\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\nPython\u306e\u5b9f\u884c\u306fiPython Notebook(Jupyter)\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n#1. \u30cb\u30e5\u30fc\u30b9\u8a18\u4e8b\u306e\u53d6\u5f97\nhttp://headlines.yahoo.co.jp/rss/list \u306bYahoo News\u306eRSS\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u3053\u304b\u3089\u30ea\u30f3\u30af\u3092\u53ce\u96c6\u3057\u3066\u8a18\u4e8b\u3092\u96c6\u3081\u307e\u3059\u3002\n\n```py\n# \u5404\u7a2e\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom bs4 import BeautifulSoup\nimport requests,json, time\nfrom requests_oauthlib import OAuth1Session\nfrom requests.exceptions import ConnectionError, ReadTimeout, SSLError\nimport numpy as np\nimport numpy.random as rd\nimport MeCab as mc\nfrom collections import defaultdict\nimport cPickle as pickle\nimport traceback\nfrom datetime import datetime as dt\n\nIPADIC_NEOLOGD_PATH = '/usr/local/lib/mecab/dic/mecab-ipadic-neologd/'\n\ndef unpickle(filename):\n    with open(filename, 'rb') as fo:\n        p = pickle.load(fo)\n    return p\n\ndef to_pickle(filename, obj):\n    with open(filename, 'wb') as f:\n        pickle.dump(obj, f, -1)\n```\n\n\u4e0b\u8a18\u304cYahoo News (http://headlines.yahoo.co.jp/rss/list) \u304b\u3089\u8a18\u4e8b\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\u7d50\u69cb\u6642\u9593\u3082\u304b\u304b\u308a\u307e\u3059\u3057\u3001Yahoo News\u3078\u7d50\u69cb\u306a\u6570\u306e\u30a2\u30af\u30bb\u30b9\u3092\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u65e2\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066Mecab\u3067\u5f62\u614b\u7d20\u89e3\u6790\u6e08\u307f\u306e\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3082\u3057\u3053\u306e\u8a18\u4e8b\u306e\u518d\u73fe\u3092\u8a66\u3059\u5834\u5408\u306f\u305d\u3061\u3089\u3092\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002(\u6b21\u9805\u3067\u8aac\u660e\u3057\u307e\u3059\u3002)\n\n\nMecab\u306f@overlast \u3055\u3093\u306emecab-ipadic-neologd\u3092\u4f7f\u3044\u307e\u3059\u3002\u4ee5\u524d\u3001\u3053\u306eMecab\u306e\u5c0e\u5165\u306b\u3064\u3044\u3066\u306f[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://qiita.com/kenmatsu4/items/02034e5688cc186f224b#1-1mecab\u306e\u5c0e\u5165)\u3067\u7d39\u4ecb\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u5c0e\u5165\u3059\u308b\u969b\u306f\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\n```py \n# Yahoo News\u304b\u3089\u8a18\u4e8b\u3092\u62fe\u3063\u3066\u304f\u308b\u30af\u30e9\u30b9\nclass Category():\n    def __init__(self, name=\"\", url=\"\"):\n        self.name = name\n        self.url = url\n        self.article_list = []\n        \n    def addArticle(self, article):\n        self.article_list.append(article)\n        \nclass Article():\n    def __init__(self, title=\"\", contents=u\"\u672a\u53d6\u5f97\", url=\"\"):\n        self.url = url\n        self.title = title\n        self.contents = contents\n        self.mecabed_contents = {}\n        \n    def add_contents(self, contents):\n        self.contents = contents\n        \n    def exec_mecab(self):\n        self.mecabed_contents = Article.mecab_analysis(self.contents)\n        \n    @staticmethod\n    def mecab_analysis(sentence):\n        t = mc.Tagger('-Ochasen -d {}'.format(IPADIC_NEOLOGD_PATH))\n        sentence = sentence.replace('\\n', ' ')\n        text = sentence.encode('utf-8') \n        node = t.parseToNode(text) \n        ret_list = []\n        while node.next: \n            if node.surface != \"\":  # \u30d8\u30c3\u30c0\u3068\u30d5\u30c3\u30bf\u3092\u9664\u5916\n                word_type = node.feature.split(\",\")[0]\n                if word_type in [\"\u540d\u8a5e\", \"\u5f62\u5bb9\u8a5e\", \"\u52d5\u8a5e\"]:\n                    plain_word = node.feature.split(\",\")[6]\n                    if plain_word !=\"*\":\n                        ret_list.append(plain_word.decode('utf-8'))\n            node = node.next\n        return ret_list \n\nDEBUG = True\nclass YahooHeadlines():\n    def __init__(self):\n        self.url = 'http://headlines.yahoo.co.jp/rss/list'\n        self.category_list = []\n        self.f = open('log/log_{}.log'.format(dt.now().strftime('%Y%m%d_%H%M%S')), 'a+')\n        \n    def close(self):\n        self.f.close()\n                      \n    def logging(self, log):\n        self.f.write(log.encode('utf-8'))\n    \n    def unpickle(self, filename):\n        with open(filename, 'rb') as fo:\n            p = pickle.load(fo)\n        self.category_list = p\n\n    def pickle(self, filename):\n        with open(filename, 'wb') as f:\n            pickle.dump(self.category_list, f, -1)\n        \n    def download_contents(self):\n        self.get_category_url_list()\n        self.get_article_title_list()\n        self.get_all_article()\n\n    def get_url_list(self):\n        return self._url_list\n    \n    def set_category_list(self, category_list):\n        self.category_list = category_list\n    \n    def get_category_list(self):\n        return self.category_list\n    \n    def get_category_url_list(self):\n        res = requests.get(self.url)\n        news_all = BeautifulSoup(res.text, \"xml\")\n        for link in news_all.find_all('a'):\n            url = link.get('href')\n            if 'xml' in url and 'my.yahoo.co.jp' not in url:\n                self.category_list.append(Category(name=link.parent.text.replace('\\n',''), url=url))\n        if DEBUG:\n            print \"len(self.category_list)\", len(self.category_list)\n\n    def get_article_title_list(self):\n        for category in self.category_list:\n            res = requests.get(category.url)\n            soup = BeautifulSoup(res.text, \"xml\")\n            for item in soup.find_all('item'):\n                category.addArticle(Article(title=item.title.getText(), url=item.link.getText()))\n\n    def count(self):\n        print \"len(self.category_list)\", len(self.category_list)\n        for cat in self.category_list:\n            print \"len(cat.article_list)\", len(cat.article_list)\n\n        \n    def get_all_article(self, start=0, end=None):\n        end = len(self.category_list) if end is None else end\n        for cat in self.category_list[start:end]:\n            print cat.name\n            for article in cat.article_list:\n                try:\n                    print article.title\n                    time.sleep(0.5)   # interval time for reducing server load\n                    res = requests.get(article.url)\n                    soup = BeautifulSoup(res.text, \"xml\")\n                    t = soup.find(\"p\", \"ynDetailText\")\n                    if len(t.getText()) > 0:\n                        temp = []\n                        for line in t.prettify().split('\\n'):\n                            if '<!-- /.paragraph -->' in line:\n                                break\n                            temp.append( line )\n                        article.add_contents(BeautifulSoup(\"\\n\".join(temp), \"xml\").get_text().replace(' ','').replace('\\n',''))\n                        article.exec_mecab()\n                except Exception as e:\n                    print \"error.\"\n                    self.logging(u\"{},{}\".format(article.url, article.title))\n                    self.logging(traceback.format_exc())\n\n    def export(self):\n        news_list = []\n        for c in self.category_list:\n            for a in c.article_list:\n                if u'\u672a\u53d6\u5f97' != a.contents:\n                    news_list.append(a.mecabed_contents)\n        return news_list\n```\n\nNews\u8a18\u4e8b\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3001pickle\u3067\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n```py\nyh = YahooHeadlines()\nprint \"YahooHeadlines() created.\"\nyh.get_category_url_list()\nprint \"get_category_url_list() finished.\"\nyh.get_article_title_list()\nprint \"get_article_title_list() finished.\"\nyh.get_all_article(start=9, end=30)\ndat = yh.export()\nto_pickle('mecabed_contents.npy', dat)\n```\n\n# 2. Mecab\u3067\u306e\u5f62\u614b\u7d20\u89e3\u6790\u6e08\u307f\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3068\u8aad\u307f\u8fbc\u307f\n\n\u89e3\u6790\u6e08\u307f\u306e mecabed_contents.npy \u306fGitHub\u306e\u4e0b\u8a18\u306e\u5834\u6240\u306b\u683c\u7d0d\u3057\u3066\u3042\u308a\u307e\u3059\u306e\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/matsuken92/Qiita_Contents/tree/master/LDA_with_Spark\n\n\u4e0b\u8a18\u3067\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n```py \ndat = unpickle('mecabed_contents.npy')\n```\n\n#2. Spark\u3067\u4f7f\u7528\u3059\u308bJava Heap\u30b5\u30a4\u30ba\u306e\u5909\u66f4\n\nLDA\u306e\u8a08\u7b97\u3067\u3001Java\u306eOutOfMemory Exception\u304c\u51fa\u305f\u306e\u3067\u3001Heap\u30b5\u30a4\u30ba\u3092\u5e83\u3052\u3066\u304a\u304d\u307e\u3059\u3002(\u5b9f\u884c\u3059\u308b\u74b0\u5883\u306b\u3088\u308b\u3068\u601d\u3046\u306e\u3067\u9069\u5b9c\u8a2d\u5b9a\u304f\u3060\u3055\u3044)\n\n```bash\ncd $SPARK_HOME/conf\ncp spark-defaults.conf.template spark-defaults.conf\nvi spark-defaults.conf\n```\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b`spark.driver.memory`\u306e\u3068\u3053\u308d\u3060\u3051\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3092\u5916\u3057\u307e\u3059\u3002\n\n```log:spark-defaults.conf\n# spark.master                     spark://master:7077\n# spark.eventLog.enabled           true\n# spark.eventLog.dir               hdfs://namenode:8021/directory\n# spark.serializer                 org.apache.spark.serializer.KryoSerializer\nspark.driver.memory                5g\n# spark.executor.extraJavaOptions  -XX:+PrintGCDetails -Dkey=value -Dnumbers=\"one two three\"\n```\n\n\n# 3. Spark\u306e\u8d77\u52d5\u3068Tf-Idf\u3067\u306e\u7279\u5fb4\u62bd\u51fa\u3001LDA\u3092\u4f7f\u3063\u305f\u5206\u985e\u306e\u5b9f\u65bd\n##3-1. Spark\u306e\u8d77\u52d5\n\niPython Notebook(Jupyter)\u3067\u306eSpark\u306e\u8d77\u52d5\u306b\u3064\u3044\u3066\u306f[\u524d\u306e\u8a18\u4e8b](http://qiita.com/kenmatsu4/items/00ad151e857d546a97c3)\u3082\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4f55\u306f\u3068\u3082\u3042\u308c\u3001Spark\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```py \nimport os, sys\nimport pandas as pd\nimport numpy as np\nfrom datetime import datetime as dt\nprint \"loading PySpark setting...\"\nspark_home = os.environ.get('SPARK_HOME', None)\nprint spark_home\nif not spark_home:\n    raise ValueError('SPARK_HOME environment variable is not set')\nsys.path.insert(0, os.path.join(spark_home, 'python'))\nsys.path.insert(0, os.path.join(spark_home, 'python/lib/py4j-0.8.2.1-src.zip'))\nexecfile(os.path.join(spark_home, 'python/pyspark/shell.py'))\n```\n\n## 3-2. \u30c7\u30fc\u30bf\u306eTf-Idf\u306b\u3088\u308b\u30d9\u30af\u30c8\u30eb\u5316\n\n**\u6ce8\uff1a\u30c8\u30d4\u30c3\u30af\u30e2\u30c7\u30eb\u3092Tf-Idf\u3067\u5b9f\u884c\u3059\u308b\u4e8b\u306f\u7cbe\u5ea6\u304c\u4e0a\u304c\u308b\u3068\u3044\u3046\u898b\u89e3\u3068\u3001\u3068\u306f\u3044\u3048\u7406\u8ad6\u7684\u306b\u306f\u5358\u8a9e\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u60f3\u5b9a\u3055\u308c\u305f\u3082\u306e\u3067\u3042\u308b\u3068\u3044\u3046\u898b\u89e3(Tf\u2212Idf\u3060\u3068float\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u7406\u8ad6\u3068\u5408\u308f\u306a\u3044)\u3068\u3042\u308b\u3088\u3046\u3067\u3059\u306e\u3067\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\u666e\u901a\u306b\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u65b9\u5f0f\u3082\u8fd1\u3005\u8ffd\u8a18\u3057\u307e\u3059\u3002(\u30b3\u30e1\u30f3\u30c8\u6b04\u53c2\u7167\u3002 [@icoxfog417 \u3055\u3093\u30b3\u30e1\u30f3\u30c8\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002])**\n\n\u307e\u305a\u306f\u3001\u53d6\u5f97\u3057\u305f\u8a18\u4e8b\u3092LDA\u306b\u304b\u3051\u308b\u305f\u3081\u306e\u4e0b\u6e96\u5099\u3068\u3057\u3066Tf-Idf\u306b\u3088\u308b\u30d9\u30af\u30c8\u30eb\u5316\u3092\u884c\u3044\u307e\u3059\u3002\n\n```py\nimport pandas as pd\nfrom pyspark.mllib.feature import HashingTF\nfrom pyspark.mllib.feature import IDF\n\nhashingTF = HashingTF()\ndocuments = sc.parallelize(dat)\ndef hashing(x):\n    return hashingTF.transform([x]).indices[0]\n\nhashed = documents.flatMap(lambda line: line) \\\n             .map(lambda word: (hashing(word), word)).distinct()\n\nhashed_word = pd.DataFrame(hashed.collect(), columns=['hash','word']).set_index('hash')\n```\n\n`hashed_word`\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306b\u306a\u308a\u307e\u3059\u3002\u5f8c\u3005\u3001hash\u5024\u304b\u3089\u5358\u8a9e\u3092\u53d6\u308a\u51fa\u3057\u305f\u3044\u306e\u3067\u30c6\u30fc\u30d6\u30eb\u5316\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n<table >\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>word</th>\n    </tr>\n    <tr>\n      <th>hash</th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>605</th>\n      <td>\u62db\u5f85\u5ba2</td>\n    </tr>\n    <tr>\n      <th>342707</th>\n      <td>\u30ae\u30e3\u30f3\u30d6\u30e9\u30fc</td>\n    </tr>\n    <tr>\n      <th>578741</th>\n      <td>\u30d5\u30e9\u30ef\u30fc\u30ab\u30f3\u30d1\u30cb\u30fc\u30ba</td>\n    </tr>\n    <tr>\n      <th>445743</th>\n      <td>\u9053\u5f8c\u6e29\u6cc9</td>\n    </tr>\n    <tr>\n      <th>599361</th>\n      <td>BURBERRY</td>\n    </tr>\n    <tr>\n      <th>520201</th>\n      <td>\u6771\u4eac\u30b2\u30fc\u30e0\u30b7\u30e7\u30a6</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>735678</th>\n      <td>\u7701\u3051\u308b</td>\n    </tr>\n    <tr>\n      <th>56058</th>\n      <td>\u6cbb\u5b89</td>\n    </tr>\n    <tr>\n      <th>444490</th>\n      <td>\u6708\u5b50</td>\n    </tr>\n    <tr>\n      <th>706206</th>\n      <td>GENERATIONS</td>\n    </tr>\n    <tr>\n      <th>267402</th>\n      <td>\u30af\u30fc\u30da</td>\n    </tr>\n  </tbody>\n</table>\n<p>41261 rows \u00d7 1 columns</p>\n\n\nSpark\u3067Tf-Idf\u5024\u3092\u8a08\u7b97\u3057\u3066LDA\u3067\u8aad\u307f\u8fbc\u3081\u308b\u3088\u3046\u306b\u5909\u63db\u3057\u305fRDD\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```py \n# Tf-Idf\u306e\u751f\u6210\ntf = hashingTF.transform(documents)\ntf.cache()\n\nidf = IDF().fit(tf)\ntf_idf_data = idf.transform(tf)\n```\n\n## 3-3. LDA\u306e\u5b9f\u884c\n\nSpark MLlib\u3067LDA\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u3068\u308a\u3042\u3048\u305ak=30\u3068\u3057\u307e\u3059\u3002\u3053\u306e\u30c8\u30d4\u30c3\u30af\u6570\u3092\u3069\u3046\u6c7a\u3081\u308b\u3079\u304d\u304b\u3001\u8ab2\u984c\u3067\u3059\u3002\u4eca\u56de\u306f\u30a8\u30a4\u3084\u3063\u3068\u6c7a\u3081\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3001\u3082\u3063\u3068\u3044\u3044\u5024\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\uff08k\u306e\u6c7a\u3081\u65b9\u3054\u5b58\u77e5\u306e\u65b9\u3001\u6559\u3048\u3066\u4e0b\u3055\u3044\uff01\uff09\n\n```py \nfrom pyspark.mllib.clustering import LDA, LDAModel\nfrom pyspark.mllib.linalg import Vectors\nprint dt.now().strftime('%Y/%m/%d %H:%M:%S')\nK = 30\n\n\n# Index documents with unique IDs\ncorpus = tf_idf_data.zipWithIndex().map(lambda x: [x[1], x[0]]).cache()\n\n# Cluster the documents into three topics using LDA\n%time ldaModel = LDA.train(corpus, k=K)\n\n# Output topics. Each is a distribution over words (matching word count vectors)\nprint(\"Learned topics (as distributions over vocab of \" + str(ldaModel.vocabSize()) + \" words):\")\n%time topics = ldaModel.topicsMatrix()\n\nprint dt.now().strftime('%Y/%m/%d %H:%M:%S')\n```\n\n\u975e\u529b\u306a\u201d\u65b0\u3057\u3044Macbook\u201d\u3067\u5b9f\u884c\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u8a08\u7b97\u306f12\u5206\u307b\u3069\u3067\u3057\u305f\u3002\u3084\u308c\u308b\u3082\u306e\u3067\u3059\u306d :smile: \n\n```log:out\n2015/09/20 17:31:17\nCPU times: user 6.34 ms, sys: 2.09 ms, total: 8.44 ms\nWall time: 30.8 s\nLearned topics (as distributions over vocab of 1048576 words):\nCPU times: user 5min 14s, sys: 6min 12s, total: 11min 26s\nWall time: 11min 53s\n2015/09/20 17:43:42\n```\n\n## 3-4. \u7d50\u679c\u306e\u51fa\u529b\n\n\u524d\u9805\u3067\u8a08\u7b97\u3057\u305f\u7d50\u679c\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n```py \ndef idx_to_word(idx):\n    res = hashed_word.ix[idx].word\n    if type(res) == pd.Series:\n        return res.to_dict().values()[0]\n    else:\n        return res\n\nrep_num = 20\n\nfor topic in range(K):\n    print(\"Topic \" + str(topic) + \":\")\n    temp_w = []\n    temp_t = []\n    for word in range(0, ldaModel.vocabSize()):\n\n        top = topics[word][topic]\n        if top != 0:\n            #print(\"{}:{}\".format(word, top))\n            temp_w.append(word)\n            temp_t.append(top)\n    \n    temp_w = np.array(temp_w)\n    temp_t = np.array(temp_t)\n    idx = np.argsort(temp_t)[::-1]\n    print ','.join(map(idx_to_word, temp_w[idx[:rep_num]]))\n    print temp_t[idx[:rep_num]]\n```\n\n\u4e0b\u8a18\u304c\u5206\u985e\u7d50\u679c\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30c8\u30d4\u30c3\u30af\u304b\u3089\u4e0a\u4f4d20\u5358\u8a9e\u3092\u8868\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u308c\u3063\u307d\u3044\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u304c\u3001\u307e\u3060\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u304c\u5fc5\u8981\u3067\u3059\u306d\u3002\u305d\u308c\u305e\u308c\u306e\u30c8\u30d4\u30c3\u30af\u304c\u4f55\u3092\u6307\u3057\u3066\u3044\u308b\u304b\u304c\u3044\u307e\u3044\u3061\u4e0d\u660e\u77ad\u3067\u3059\u3002k\u306e\u6c7a\u3081\u65b9\u3067\u3057\u3087\u3046\u304b\u3002\n\n```log:out\nTopic 0:\n3D,1%,JP,Yahoo,co.jp,http://,2Z,FE,TC,WC,JavaScript,SRC,ALT,D2,\u5206,.S,SIG,clear,Mi,GIF\n[ 30498.99621439   6067.97495307   5638.31180986   4239.90976107\n   3839.63866955   3620.87671019   2048.76800459   2035.55013512\n   2035.55013512   2035.55013512   1903.02711354   1898.96547573\n   1820.93929181   1763.1621581    1724.74815005   1688.15876657\n   1613.83355369   1483.59938276   1454.82128817   1338.48860166]\nTopic 1:\n\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0,GPU,\u50b5\u52d9\u8d85\u904e,\u539f\u767a,\u4e9c\u4eba,\u7a3c\u50cd,\u4eac\u30bb\u30e9,\u6f14\u7b97,\u6d5c\u7530,\u65e5\u672c\u30a4\u30f3\u30bf\u30fc,\u63a8\u85a6,\u6751\u4e0a\u6c0f,\u30a6\u30c3\u30c9\u30ef\u30fc\u30c9,\u30e9\u30a4\u30d6\u30e9\u30ea,\u8cb7\u3044\u4ed8\u3051,ABC,DI,\u6d3b\u7528,\u4e88\u9632\u533b\u5b66,\u7d14\u8cc7\u7523\n[ 230.26782221  222.54019498  109.0725775    86.27167445   86.10057908\n   84.22603202   67.68409895   66.99081298   60.91536464   57.4006148\n   57.16789412   50.24346965   50.17063652   45.16572514   43.57092785\n   43.37177773   43.06492631   41.84250571   40.60449032   39.60700784]\nTopic 2:\n\u97f3,\u6559\u6388,\u30a2\u30f3\u30d7,\u8a34\u8a1f,\u30b9\u30d4\u30fc\u30ab\u30fc,\u30b9\u30ba\u30ad,\u5927\u5b66,\u5171\u7523\u515a,A-10,DR,\uff08\u682a\uff09,SUZUKI,\u3055\u3093,\u8cc7\u672c\u91d1,HONDA,\u677f\u91ce,\u6c0f,\u9332\u753b,Internet,\u5e2f\n[ 313.9497848   311.07373468  291.18216703  200.41036663  174.99267573\n  168.83426043  162.12249119  160.4631899   158.44550237  155.86272676\n  152.51636208  145.63724853  144.22014499  143.88263097  138.80529834\n  136.38362019  133.87558279  132.8150622   127.1633457   123.42496755]\nTopic 3:\n\u30a4\u30eb\u30ab,\u60a3\u8005,\u642c\u5165,\u6d77\u8ecd,\u52a0\u76df,\u7c73\u6d77\u8ecd,\u4f5c\u6226,\u5f01\u8b77\u58eb,\u5e97\u4e3b,\u5217\u8eca,\u6625\u753b,\u6975ZERO,\u8ecd\u4e8b,\u798f\u5ca1,\u5951\u7d04,\u56e3\u4f53,\u7f8e\u5973\u3068\u91ce\u7363,\u4f4d,\u30a8\u30f3\u30d6\u30ec\u30e0,\u66f4\u65b0\n[ 285.35384105  125.29445731  122.03394224  117.37108065  114.56787287\n  107.67685141  107.66792085  107.49265658  104.77371348  104.55689386\n  103.34343411  101.54959522   99.13195887   97.66056425   87.6906483\n   83.77795736   82.83739301   82.06384181   81.99063074   79.61260345]\nTopic 4:\n\u5c0f\u7b20\u539f\u8af8\u5cf6,19\u65e5,\u96e8,NARUTO-\u30ca\u30eb\u30c8-,\u898b\u8fbc\u307f,\u3042\u3059,\u6240,\u30c1\u30e7\u30b3\u30dc,\u304d\u3087\u3046,\u7530\u7551,\u53f0\u98a820\u53f7,\u571f\u7802\u707d\u5bb3,\u5927\u85e4,\u30eb\u30fc\u30ca,\u6b66\u5668,\u975e\u5e38,\u5c40,\u3042\u308b,\u3093,\u6771\u5317\n[ 230.41298471  206.73983243  201.38377462  162.53955457  156.01089213\n  152.26626716  147.20327527  143.56116858  138.58499586  136.35519513\n  134.63602579  131.89025362  122.02553338  114.84698842  114.73039984\n  112.58882552  111.19144156  109.29280382  108.74278871  108.06638723]\nTopic 5:\n\u5e97,LGBT,\u5730\u65b9,\u7d05\u8449,\u7fbd\u751f,\u30a8\u30f4\u30a7\u30ec\u30b9\u30c8,\u5f53\u4e8b\u8005,USJ,MM,\u6eb6\u63a5,NorAh,\u91e7\u8def,\u9078\u624b,\u91ce\u7403,\u4eba,\u963f\u90e8,\u571f\u80a5,\u640d\u5931,\u6751\u6728,\u6df1\u753a\n[ 534.02134183  233.21159627  161.734613    149.27499135  148.04072853\n  139.83024817  128.12607155  127.16365004  121.55663036  116.93175677\n  115.10536063  111.9230136   108.32928292  101.01309412   99.57305727\n   97.8645909    93.31870841   90.55202246   88.16103482   85.11086582]\nTopic 6:\n\u81ea\u885b\u968a,\u5f53\u8a72,\u6d3b\u52d5,\u9805,\u5b9f\u65bd,\u6551\u52a9,\u7b49,\u652f\u63f4,\u898f\u5b9a,\u7269\u54c1,\u6761,\u5354\u529b,\u63aa\u7f6e,\u90e8\u968a,\u5f79\u52d9,\u635c\u7d22,\u4e8b\u614b,\u63d0\u4f9b,\u4e8c,\u8ecd\u968a\n[ 425.27200701  410.14147759  340.63660257  335.99268066  301.03835559\n  277.69844718  262.99789699  244.04626438  241.86903535  233.56945124\n  226.29603529  213.94031937  208.31405209  198.09771261  191.92479361\n  173.18290576  171.56092092  164.69617574  147.1031081   144.02472698]\nTopic 7:\n\u3093,\u601d\u3046,\u3055\u3093,\u4eba,\u30c0\u30f3\u30b9,\u3044\u304f,\u4f1a\u5834,\u3088\u3046,\u3084\u308b,\u9078\u624b,\u8a00\u8449,\u66f2,\u30b9\u30c6\u30fc\u30b8,\u306a\u308b,\u4f5c\u308b,\u304f\u308b,\u51fa\u6f14,\u30e1\u30f3\u30d0\u30fc,\u3082\u306e,\u5973\u6027\n[ 400.87252109  311.02748052  250.83203469  243.87087686  241.62681685\n  235.1485944   219.71001515  212.56170962  206.76164473  198.28774766\n  190.64751854  190.09850913  187.53964957  178.53456693  173.1581961\n  170.93611348  167.90595764  166.71680877  163.85967037  160.64966047]\nTopic 8:\n\u30a4\u30fb\u30b9\u30f3\u30ae,\u683c\u5b89\u30b9\u30de\u30db,\u9060\u85e4,\u4ea4\u756a,\u5efa\u7bc9,\u8a2d\u8a08,SHEENA,\u30ab\u30fc\u30e9,\u3067\u3093\u3071\u7d44.inc,\u8eab\u9577,\u30b8\u30e7\u30fc,\u65bd\u5de5,\u5343\u9ce5,\u30a4\u30d6,\u30af\u30ea\u30b9\u30c1\u30e3\u30f3,\u30af\u30e9,\u63a5\u7a2e,\u4e8b\u4f8b,\u512a\u5f85,\u30b3\u30f3\u30da\n[ 122.01843494  100.42493188   96.7819965    90.82173926   84.67996554\n   84.04629268   81.2426219    81.22826354   79.28066538   77.10645017\n   75.3958751    70.7937157    67.79664672   67.62432926   62.02688985\n   61.12174747   60.911537     60.671785     60.6691196    59.22618216]\nTopic 9:\n\u77f3\u539f,\u5c71\u4e0b,\u67089,\u539f\u5b50\u529b\u767a\u96fb\u6240,\u7dcf,MAX,\u3055\u3093,\u30a2\u30ea\u30d0\u30d0,\u30a6\u30a9\u30f3,\u5ddd\u5cf6,\u604b,\u50e7\u4fb6,\u4e07,\u843d\u672d,\uff0c,\u9ad8\u5dba,\u5f79,\u4e3b\u6f14,\u574a\u3055\u3093,\u96c7\u7528\u52b4\u50cd\u90e8\n[ 251.21702545  246.98644992  188.33673645  180.99682139  170.83125774\n  161.27898596  150.18861226  148.37545664  145.26656891  116.99233982\n  115.97102397  111.61849001  108.61185273  108.09102905  104.38739566\n  103.32743846   96.51126917   95.40721995   95.33654317   94.80918496]\nTopic 10:\n\u96c6\u56e3\u7684\u81ea\u885b\u6a29,\u884c\u4f7f,\u5b89\u4fdd,\u65e5\u672c,\u907a\u9aa8,\u6cd5\u6848,\u5317\u671d\u9bae,GO,\u30b7\u30b9\u30c6\u30e0,\u9996\u76f8,\u7c73,Pokemon,\u97d3\u56fd,\u5e73\u548c,\u6226\u4e89,\u601d\u8003,\u4f1a,\u6210\u7acb,\u5c0f\u6797,\u30c6\u30ed\u30e1\u30a2\n[ 325.4190462   294.03767623  253.6549491   215.81603062  212.85361125\n  212.4241334   203.16256149  145.41407277  145.35949337  144.77378143\n  140.99962347  135.45572385  131.0855378   121.75771794  118.79648391\n  117.21162034  115.63520103  115.03735685  115.02058923  114.84203109]\nTopic 11:\n\uff11,\uff10,\uff12,\uff13,\uff15,\uff14,\uff19,\uff18,\u6cd5\u6848,\uff16,\u65e5,\uff17,\u59d4\u54e1,\u5e74,\u53cd\u5bfe,\u56fd\u4f1a,\uff05,\u6848,\u8b70\u54e1,\u4e0e\u515a\n[ 2365.0615964   1843.50976149  1580.14166211   977.45697796   972.93295992\n   900.33510929   811.76679401   734.30895952   708.8845634    687.91169097\n   666.9871633    638.37414039   480.65198962   403.9740617    397.36591408\n   389.03843978   378.11150102   372.94260471   366.06518175   348.52658829]\nTopic 12:\n\uff05,\u9031,\u4eba,\u8336,\u52e4\u52b4,\u5c0f\u6728\u66fd,\u5c71\u53e3\u7d44,\u6851\u539f,\u30b3\u30eb\u30af,\u6d3e\u9063,\u8abf\u67fb,\u5be9\u67fb,\u8a2a\u65e5,\u30bb\u30cc\u30ea\u515a,\u30d5\u30a1\u30f3,\u56de\u7b54,\u5ef6\u9577,\u671f\u9593,\u4e07,\u3055\u3093\n[ 422.50645087  213.35496472  190.18553723  185.25693     172.87477417\n  169.32178049  168.65380074  168.60270933  165.10107941  163.39675225\n  158.10205955  157.84657732  156.61876499  150.94891424  144.86004174\n  142.60856342  141.41821081  139.14405814  136.07482269  129.11386079]\nTopic 13:\n\u30da\u30c3\u30c8,\u30bf\u30a4\u30e4,\u70b9\u691c,\u5bcc\u58eb\u30d5\u30a4\u30eb\u30e0,\u5e97,\u72ac,\u4e8b\u6545,\u98fc\u3044\u4e3b,\u30d1\u30f3,\u91cf\u7684\u7de9\u548c,\u30d0\u30d6\u30eb,\uff12\u6708,\u30a2\u30fc\u30c1\u30e3\u30fc,\u6a5f\u95a2,\u52d5\u7269,\u4e8b\u696d,ELEMENT,\u9589\u9396,\u30da\u30c3\u30c8\u30b7\u30c3\u30bf\u30fc,\u4e16\u8a71\n[ 144.38505303  139.38328152  138.65459253  120.09515611  117.32842831\n  111.2811561    97.34985563   90.9386823    88.76830528   86.09862267\n   86.03676176   81.16131412   73.04842045   71.94537875   71.76221994\n   69.36573458   67.72482177   67.56636611   64.59788527   63.72988257]\nTopic 14:\n\u30c7\u30d6\u30ea,\u5b87\u5b99,\u885b\u661f,\u5ca1\u91ce,S.M.A.R.T,\u30e4\u30b9,\u30a2\u30f3\u30d0\u30fc\u30fb\u30cf\u30fc\u30c9,\u5149\u5b50,\u6728\u4e0b\u534a\u592a,\u30d3\u30fc\u30e0,\u9664\u53bb,\u30d1\u30b9\u30bf,\u611b\u4e59\u5973\u2605DOLL,\u4e8c\u5bae,\u30ed\u30b1\u30c3\u30c8,\u9078\u624b,\u885d\u7a81,\u5efa\u8a2d,\u3081\u3063\u304d,\u7be0\u539f\n[ 200.98746196  109.11393056  102.69563054   71.64443048   70.61628478\n   70.21806077   69.47009154   67.71824577   64.58911369   63.98653636\n   61.75894589   57.1558711    54.17379175   50.53475054   50.08003639\n   49.38497398   49.1474643    48.05613337   47.37467689   47.21593097]\nTopic 15:\n\u5217\u8eca,\u5e97,\u9244\u9053,\u99c5,\u8f38\u9001,\u914d\u5076\u8005\u63a7\u9664,\u4e07,\u5186,\u8cde\u54c1,\u5e7c\u866b,\u88ab\u544a,\u907a\u4f1d\u5b50,\u6c34\u5bb3,\u85ac,\u304c\u308c\u304d,\u5ec3\u68c4,\u6559\u80b2,JR\u8ca8\u7269,\u5b9f\u7fd2,\u5236\u5ea6\n[ 209.45549658  172.75201923  164.79055902  147.02460723  146.34946295\n  122.11417714  116.53446688  113.36476153  110.00093014  101.51355757\n  101.49522834   93.61766945   90.44254789   90.21005366   86.14087176\n   85.94118974   85.87426669   83.81989617   81.4445114    81.32144707]\nTopic 16:\n\u66f2,\u4f5c,\u3055\u3093,\u4f5c\u54c1,\u30a4\u30d9\u30f3\u30c8,\u30b9\u30c6\u30fc\u30b8,\u516c\u958b,\u516c\u6f14,\u30e9\u30a4\u30d6,\u3093,\u30ea\u30ea\u30fc\u30b9,\u767b\u5834,\u30a2\u30eb\u30d0\u30e0,\u30d5\u30a1\u30f3,\u62ab\u9732,\u767a\u58f2,\u958b\u50ac,\u601d\u3046,\u53ce\u9332,\u4f1a\u5834\n[ 717.72208948  701.88650132  675.57536789  653.80324063  630.25795307\n  623.56413175  593.77778162  570.85401227  542.29065168  530.72760902\n  527.34422729  504.12104195  477.59137972  477.00323092  449.362484\n  433.71529537  424.21385561  415.6621296   413.39032883  408.44365814]\nTopic 17:\n\u79fb\u6c11,\u6c0f,589 Croatia,\u884c\u70ba,\u9996\u76f8,\u767d\u864e\u968a,\u9001\u4fe1,\u30b9\u30c8\u30fc\u30ab\u30fc\u898f\u5236\u6cd5,\u30af\u30a9\u30f3\u30fb\u30b5\u30f3\u30a6,\u30c9\u30a4\u30c4,\u3064\u304d\u307e\u3068\u3046,\u30bf\u30fc\u30f3,\u30d6\u30eb,\u56fd\u5883,\u30a2\u30dc\u30c3\u30c8,\u9996\u8133,Hungary,\u3089,\u7ba1\u5185,\u96fb\u5b50\u30e1\u30fc\u30eb\n[ 164.44142649  157.91328715  138.76814858  132.5043004   125.07620334\n  114.82154418  112.98085344  108.36476034  100.36013718   99.44524733\n   95.72254509   91.79868319   89.07727008   83.49107233   81.37738585\n   78.16457362   77.45463275   77.03517754   75.47489877   74.73847572]\nTopic 18:\n\uff05,\u30d3\u30fc\u30eb,\u5104,\u4e07,\u30ed\u30fc\u30ea\u30fc,\u9152\u7a0e,\u5897,\u524d\u5e74,\u4f4d,\u6e1b,\u5186,\u8abf\u67fb,\u5411\u3051,\u4f01\u696d,\u6bd4,\u30b5\u30fc\u30d3\u30b9,\u5e02\u5834,\u66f8\u7c4d,\u30dd\u30b9\u30b3,\u5146\n[ 580.21824689  434.53747304  337.23060498  322.90011084  275.51253012\n  255.35439791  202.94575502  195.40863404  193.2023368   188.88153369\n  188.32713027  185.3074174   182.46872612  180.38548978  168.37490369\n  159.71109053  159.65702647  155.00164055  150.38902564  149.40071569]\nTopic 19:\n\u5ca1\u6751,\u4e0e\u308b,\u77f3\u6a4b,\u6b63,\u504f\u5149,\u5ca1\u6751\u9686\u53f2,\u30d6\u30ec\u30a4\u30af\u30c0\u30f3\u30b9,\u72af\u4eba,\u30b5\u30f3\u30b0\u30e9\u30b9,\u30bf\u30c3\u30c1\u30d1\u30cd\u30eb,\u304a\u524d,\u96e3\u6c11,\u925b,\u30db\u30fc\u30e0\u30d1\u30fc\u30c6\u30a3\u30fc,\u53d7\u3051\u5165\u308c,\u30aa\u30e4\u30b8,\u85ac\u5264\u5e2b,\u8056\u5802,\u85ac\u5c40,\u4e09\u83f1\u925b\u7b46\n[ 77.67608384  65.66168235  62.59137271  61.50991922  50.18323397\n  44.41180978  43.50803013  41.09367176  40.73945738  38.9101876\n  37.57614659  36.56843092  35.85623378  35.81638016  34.10640826\n  33.81327369  32.32619825  31.22516758  31.12976321  30.34057197]\nTopic 20:\n\u7df4\u70ad,\u4ea4\u6e09,\u548c\u7530\u30a2\u30ad\u5b50,\u6c96\u7e04,\u307f\u308a\u3093,\u4eba\u6750,\u306e,\u30a2\u30d3\u30ac\u30f3,\u5c31\u696d\u898f\u5247,\u304a\u76c6\u7389,\u4f1a\u5408,\u30c6\u30fc\u30de\u30d1\u30fc\u30af,\u30ad\u30fc,serendipity,\u304a\u5e74\u7389,\u30e6\u30fc\u30fb\u30a8\u30b9\u30fb\u30b8\u30a7\u30a4,PIN,\u7d30\u80de,\u95a3\u50da,\u30b3\u30f3\u30d3\u30cb\n[ 200.98686962  154.40963453  106.75322346  102.73754422  100.48163455\n   98.9612829    94.85889131   93.31730072   93.30796905   93.27433467\n   92.84230214   89.15912225   87.60003563   86.13875558   86.09579478\n   81.48415665   81.37494046   81.10648568   75.53083854   74.76190319]\nTopic 21:\n18\u65e5,\u6cbf\u5cb8,\u6c17\u8c61\u5e81,\u65b0\u51fd\u9928\u5317\u6597,\u65b0\u5e79\u7dda,\u5f80\u5fa9,\u958b\u696d,\u5cf6,\u30b4\u30e0,2015\u5e74,\u5317\u6d77\u9053,\u30cf\u30ef\u30a4,\u521d\u8a3a,\u7236\u5cf6,SAKANAMON,VAMPS,\u51fa\u6f14,\u767a\u8868,3M,\u89b3\u6e2c\n[ 326.61966201  176.18179227  162.70899568  137.89819305  135.61061726\n  131.91446936  127.87583916  123.18162869  119.46292987  114.89846676\n  113.33026617  108.85661384   96.44435409   94.0825422    93.31173974\n   92.48630364   90.34013265   89.33794268   89.00557891   88.60743728]\nTopic 22:\n\u6850\u8c37,RC,\u5742\u53e3,MT,\u3068\u308a,\u30ae\u30ea\u30b7\u30e3,\u30d2\u30ed\u30a4\u30f3\u5931\u683c,\u30b9\u30bf\u30fc\u30fb\u30a6\u30a9\u30fc\u30ba,\u5c71\u5d0e,\u97f3\u697d,\u51cd\u308a\u3064\u304f,\u5f18\u5149,AWA,\u306d\u3076\u305f,\u539f\u4f5c,OB,T\u7d30\u80de,M\u3055\u3093,\u758e\u958b,\u30d1\u30af\u30fb\u30bd\u30eb\u30df\n[ 242.08396669  233.61062923  172.28879872  158.02400752  156.16092615\n  149.65020403  145.38706775  143.01353797  123.89388685  107.61948489\n  105.20201675  104.23176854  103.93186096  101.57317097  101.33211206\n   98.35838535   93.31294228   81.26331036   78.87903503   77.78473071]\nTopic 23:\n\u7a0e\u7406\u58eb,\u5186,\u4e07,\u7533\u544a,\u8f38\u51fa,\u984d,\u7a0e\u91d1,\u4f4d,\u30de\u30a4\u30ca\u30f3\u30d0\u30fc,\u4e8b\u52d9\u6240,\u6240\u5f97,\u5236\u5ea6,\uff05,Philippine,\u5834\u5408,\u5104,\u96fb\u529b,\u4f01\u696d,\u5bb6\u96fb\u91cf\u8ca9\u5e97,\u3053\u3068\n[ 670.6061898   559.30722115  395.94196364  369.03793975  352.9802148\n  350.59584008  348.81817142  345.42194256  281.01115977  270.7837518\n  268.64882097  263.68902183  256.54739477  233.11666127  228.29591629\n  224.91966604  208.54269702  206.95435942  201.05969014  199.71772628]\nTopic 24:\n\u306e,\u61b2\u6cd5,\u4f01\u696d,\u3053\u3068,\u65e5\u672c,\u8005,\u56fd\u5bb6,\u6728\u6751\u7950\u4e00,\u5f01\u8b77\u58eb,\u3067\u304d\u308b,\u4e8b\u696d,\u30c7\u30b6\u30a4\u30f3,\u958b\u767a,\u3088\u3046,\u601d\u3046,\u3042\u308b,\u3044\u3046,\u6a29\u529b,\u6027,\u8003\u3048\u308b\n[ 371.66961434  337.03124549  319.99104269  319.594891    309.51245673\n  287.52866308  271.19087899  267.75333312  261.60521555  256.02307667\n  251.18894465  239.58136963  238.33242359  238.07787656  233.68552111\n  231.93864718  213.6720825   207.06572415  206.83553817  206.39025416]\nTopic 25:\n\u88ab\u5bb3,\u5104,\u5e97\u8217,\u904b\u8ee2,\u5186,\u6599\u91d1,\u65c5\u5ba2,\u30d8\u30ea,\uff10,\u5897,\u8fb2\u696d,\u6e1b,\u524d\u5e74,AKB48,\u5bae\u57ce,\u51fa\u5e97,\u770c,\u5e97,\u4e07,\u9593\n[ 322.28929388  284.37384142  264.46206604  248.44913769  226.60800063\n  226.41660568  212.16654388  205.88384117  189.18011081  173.35857685\n  170.73582962  170.16262181  167.13947269  166.91143061  165.98762565\n  164.64467713  157.49179255  153.26181924  149.68685887  145.6529475 ]\nTopic 26:\n\u5229\u4e0a\u3052,\u4e2d\u56fd,\u5e02\u5834,\u7d4c\u6e08,\u7c73\u56fd,\u30c9\u30eb,km,\uff05,\u5b89,\u4e0a\u6607,\u6a5f,\u91d1\u5229,\u666f\u6c17,\u682a,\u898b\u901a\u3057,\u4e0b\u843d,\u5186,\u6295\u8cc7,\u7387,\u97d3\u56fd\n[ 711.44316161  691.81953214  624.21582824  603.1447681   464.88853934\n  444.72254696  425.1654548   400.24353915  398.08670081  384.38514657\n  378.64702088  364.08566045  354.84095879  354.60928052  346.69708409\n  337.14563576  335.09073391  331.251988    328.37760334  316.68760744]\nTopic 27:\n\u6620\u753b,\u76e3\u7763,\u6f14\u3058\u308b,\u3093,\u50d5,\u4ff3\u512a,\u5f79,\u6b73,\u4f5c,\u30a2\u30f3\u30c8\u30de\u30f3,\u3055\u3093,\u51fa\u6f14,\u4ed5\u4e8b,\u821e\u53f0,\u30c9\u30e9\u30de,\u64ae\u5f71,\u672c,\u5973\u512a,\u601d\u3046,\u3053\u3068\n[ 886.18859913  521.81885818  517.66295551  341.28837968  323.889684\n  320.54609403  318.78269341  305.49616021  292.69106111  291.83105713\n  283.59914761  271.24734272  271.03094368  266.13209765  257.9348965\n  252.86535054  245.73361042  241.71909116  225.00245517  222.13685278]\nTopic 28:\n\u30b2\u30fc\u30e0,\u3067\u304d\u308b,\u642d\u8f09,\u63a1\u7528,\u958b\u767a,\u306e,\u3053\u3068,\u6728\u6751\u7950\u4e00,\u7528,\u53f0,\u6c0f,\u9084\u4ed8,\u5229\u7528,\u5316,\u4e2d\u56fd,\u6027,\u3088\u3046,\u88fd\u54c1,\u306a\u308b,\u30b9\u30de\u30db\n[ 453.00001367  302.95432162  283.96542019  280.46414245  257.18675974\n  254.89400232  246.43778386  219.71661031  217.78910865  214.12011552\n  212.66757085  211.03349157  205.35032129  203.34111497  197.81430578\n  193.73396761  193.32616187  190.05730112  189.02413711  187.26200727]\nTopic 29:\n\u6d45\u8349,\u4ed6\u8005,\u30b3\u30e1\u30c7\u30a3,\u5149\u30af\u30e9\u30d6,\u30e9\u30a4\u30c1,\u30ab\u30ce\u30f3,\u4e2d\u6761,\u305f\u3061,\u30c6\u30a4\u30e9\u30fc,\u6620\u753b\u796d,\u305f\u3051\u3057,\u307e\u3061,\u6d25\u8efd\u4e09\u5473\u7dda,\u79c1,\u4e0a\u6f14,\u53f0\u6771,\u4e45\u77f3\u8b72,\u5145\u96fb,\u5b9d\u585a,JR\u4e5d\u5dde\n[ 170.36663986  156.09380245  132.93872491  127.17520086  127.13453875\n  112.71315236  110.24371137  107.89145147  106.67342349  102.47261177\n   99.54801093   93.6074624    90.90080501   85.36814206   79.75410095\n   79.31855725   78.95649479   76.60922126   74.76350455   74.69475118]\n```\n\n# 4. \u8ab2\u984c\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u8ab2\u984c\u304c\u3042\u308a\u307e\u3059\u3002\u77e5\u898b\u306e\u3042\u308b\u65b9\u3001\u305c\u3072\u30a2\u30c9\u30d0\u30a4\u30b9\u3044\u305f\u3060\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n1. \u5358\u8a9e\u306e\u51fa\u73fe\u56de\u6570\u3067\u306f\u306a\u304f\u3001Tf-Idf\u306eBOW\u3067LDA\u306b\u304b\u3051\u308b\u3053\u3068\u3067\u554f\u984c\u304c\u306a\u3044\u304b\u3002\n\u3000\u3000\u3000\u2192 \u3059\u306a\u304a\u306b\u5358\u8a9e\u306e\u30ab\u30a6\u30f3\u30c8\u306b\u3057\u305f\u65b9\u304c\u3088\u3055\u305d\u3046\u3002\n2. Tf-Idf\u5316\u306e\u969b\u306b\u5358\u8a9e\u3092\u30cf\u30c3\u30b7\u30e5\u5316\u3057\u3066\u3044\u308b\u304c\u3001\u5358\u8a9e\u304c\u3076\u3064\u304b\u3063\u3066\u3044\u308b\u3002\uff08\u8981\u5bfe\u51e6\uff09\n3. \u30c8\u30d4\u30c3\u30af\u6570 K\u3092\u3069\u306e\u3088\u3046\u306b\u6c7a\u3081\u308b\u304b\u3002\u4eca\u56de\u306f\u9069\u5f53\u306b30\u306b\u3057\u3066\u3057\u307e\u3063\u305f\u3002\n\n# \u53c2\u8003\nSpark 1.5.0 Machine Learning Library (MLlib) Guide\n\u3000http://spark.apache.org/docs/latest/mllib-guide.html\n\nMLlib - ClusteringLatent Dirichlet allocation (LDA)\n\u3000http://spark.apache.org/docs/latest/mllib-clustering.html#latent-dirichlet-allocation-lda\n"}