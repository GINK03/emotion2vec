{"context": "\n\n2\u5e74\u76ee\u306eErlang\u30d7\u30ed\u30b0\u30e9\u30de\u304c\u8eab\u306b\u3064\u3051\u3066\u304a\u304d\u305f\u304412\u306e\u30c7\u30d0\u30c3\u30b0\u8853\n1\u5e74\u76ee\u306eErlang\u30d7\u30ed\u30b0\u30e9\u30de\u304c\u5d4c\u307e\u308b20\u306e\u30dd\u30a4\u30f3\u30c8 \u306e\u7d9a\u7de8\u3067\u3059\uff08\uff1f\uff09\n\u30d7\u30ed\u30b0\u30e9\u30e0\u7684\u306a\u3053\u3068\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044.\n\nErlang VM\u306b\u30a2\u30bf\u30c3\u30c1\u3059\u308b\nErlang\u306f\u7a3c\u50cd\u4e2d\u306eVM\u306b\u30b7\u30b9\u30c6\u30e0\u306b\u5927\u3057\u305f\u8ca0\u8377\u306a\u304f\u30a2\u30bf\u30c3\u30c1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059. relx\u306a\u3069\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f, attach\u7528\u306e\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c, \u3088\u308a\u5b89\u5168\u306a\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059.\nerl -sname ${NAME} -setcookie XXXX -remsh ${NODE_NAME}\n\n\u30ea\u30e2\u30fc\u30c8\u30b7\u30a7\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3067, \u30b7\u30b9\u30c6\u30e0\u304c\u52d5\u3044\u3066\u3044\u308bVM\u4e0a\u306b\u7acb\u3061\u4e0a\u3052\u305f\u30b7\u30a7\u30eb\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\nescript\u304b\u3089\u306fremsh\u306f\u4f7f\u3048\u306a\u304b\u3063\u305f\u3088\u3046\u306b\u601d\u3046\u306e\u3067 (\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044), rpc:call\u3059\u308b\u3057\u304b\u306a\u3044\u3068\u601d\u3044\u307e\u3059.\n\n\u3044\u3064\u3067\u3082VM\u518d\u8d77\u52d5\u3067\u304d\u308b\u3088\u3046\u306b, CrashDump\u306e\u8a2d\u5b9a\u3092\u5fd8\u308c\u305a\u306b\n\u6700\u7d42\u624b\u6bb5\u306eOS\u518d\u8d77\u52d5\u306e\u524d\u306bErlangVM\u306e\u518d\u8d77\u52d5\u3067\u6e08\u307e\u305b\u3089\u308c\u308b\u306e\u3067\u3042\u308c\u3070\u6e08\u307e\u305b\u307e\u3057\u3087\u3046.\n\nCrashDump\u3092\u5410\u304b\u305b\u308b\u6e96\u5099\u3092\u6574\u3048\u308b\nhttp://erlang.org/doc/apps/erts/crash_dump.html\nhttp://erlang.org/doc/man/erl.html\nCoreDump\u3068\u306f\u5225\u306b, ErlangVM\u4e0a\u306edump\u3092\u5410\u304b\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059. relx\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067crash dump\u3092\u5410\u304f\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u3044\u307e\u3059.\n\nvm.args\n## \u3053\u308c\u3092\u66f8\u304f\u3068crash dump\u304c\u5410\u304b\u308c\u306a\u304f\u306a\u308a\u307e\u3059\n+d\n\n## \u3053\u308c\u3067\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n-env ERL_CRASH_DUMP /tmp/erl_crash.dump\n\n\n\u5410\u304b\u305b\u308b\u65b9\u6cd5\u306b\u306f\u4ee5\u4e0b\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059.\n\nVM\u4e0a\u3067erlang:halt(\"slogan\")\u3092\u5b9f\u884c\u3059\u308b\n\nkill -SIGUSR1 ${PID} \u3067VM\u3092\u6bba\u3059\n\n\nCrashDump\u306f\u8aad\u3081\u308b\nErlang\u306ecrash dump\u306f\u4eba\u9593\u304c\u5272\u3068\u8aad\u3081\u307e\u3059\u304c, \u554f\u984c\u767a\u898b\u3092\u65e9\u3081\u308b\u70ba\u306b\u4ee5\u4e0b\u306e\u30c4\u30fc\u30eb\u304c\u6709\u7528\u3067\u3059.\n\nCrashDumpViewer\nerl_crashdump_analyzer\n\n\u81ea\u5206\u304c\u3088\u304f\u4f7f\u3046\u306e\u306f\u5f8c\u8005\u3067\u3059. \u524d\u8005\u306fGUI\u74b0\u5883\u304c\u5fc5\u8981\u306a\u306e\u3067\u904b\u7528\u3057\u3066\u3044\u308b\u74b0\u5883\u3060\u3068\u8f9b\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093.\n\u307e\u305f, \u5f8c\u8005\u306f\u6700\u521d\u306b\u77e5\u308a\u305f\u3044\u3067\u3042\u308d\u3046\u3053\u3068\u3057\u304b\u51fa\u529b\u3057\u306a\u3044\u306e\u3067\u8ff7\u3046\u3053\u3068\u304c\u306a\u3044\u3068\u601d\u3044\u307e\u3059.\n\u7d30\u304b\u3044\u90e8\u5206\u306f\u76f4\u63a5dump\u3092\u8aad\u3080\u306e\u3067\u79c1\u306f\u56f0\u308a\u307e\u305b\u3093\u3067\u3057\u305f.\nbinary\u90e8\u5206\u3092\u8aad\u3080\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f, binpp\u306efrom_str/1\u3092\u4f7f\u3063\u3066\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093.\n\n8\u5272\u65b9\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u304c\u8a70\u307e\u308b\u6642\u304c\u554f\u984c\u304c\u8d77\u304d\u308b\u6642\n\u79c1\u306e\u7d4c\u9a13\u4e0a\u306e\u8a71\u3067\u3059. \u30ed\u30b0\u306f\u4e00\u56de\u8a70\u307e\u308b\u3068\u8a70\u307e\u308a\u7d9a\u3051\u308b\u306e\u3067\u6c17\u3092\u3064\u3051\u307e\u3057\u3087\u3046.\n\u611b\u3057\u3066\u3084\u307e\u306a\u3044recon\u3092\u4f7f\u3046\u3068,\n1> recon:proc_count(message_queue_len, 5).\n[{<0.309.0>,7,\n  [{current_function,{timer,sleep,1}},\n   {initial_call,{erlang,apply,2}}]},\n {<0.308.0>,0,\n  [{current_function,{gen_fsm,loop,7}},\n   {initial_call,{proc_lib,init_p,5}}]},\n {<0.307.0>,0,\n  [{current_function,{websocket_client,websocket_loop,3}},\n   {initial_call,{proc_lib,init_p,5}}]},\n {<0.303.0>,0,\n  [inet_gethost_native,\n   {current_function,{inet_gethost_native,main_loop,1}},\n   {initial_call,{inet_gethost_native,server_init,2}}]},\n {<0.302.0>,0,\n  [inet_gethost_native_sup,\n   {current_function,{gen_server,loop,6}},\n   {initial_call,{proc_lib,init_p,5}}]}]\n\n\u82e5\u5e72\u5206\u304b\u308a\u8f9b\u3044\u3067\u3059\u304c, tuple\u306e2\u8981\u7d20\u76ee\u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u306b\u6e9c\u307e\u3063\u3066\u3044\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6570\u3067\u3059.\n\u591a\u3044\u9806\u306b\u7b2c\u4e8c\u5f15\u6570\u5206 (\u3053\u306e\u4f8b\u3067\u306f5\u4ef6) \u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u304f\u308c\u307e\u3059.\n\u6bba\u3057\u3066\u826f\u3044\u30d7\u30ed\u30bb\u30b9\u3067\u3042\u308c\u3070, shell\u4e0a\u304b\u3089\u6bba\u3057\u3066supervisor\u306b\u518d\u8d77\u52d5\u3055\u305b\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059.\n\nbinary\u306e\u30ea\u30fc\u30af\u306b\u306f\u8981\u6ce8\u610f\nErlang\u3067\u30e1\u30e2\u30ea\u304c\u53f3\u80a9\u4e0a\u304c\u308a\u306b\u306a\u308b\u5834\u5408\u306f, \u30d7\u30ed\u30bb\u30b9\u30ea\u30fc\u30af\u3068\u30d0\u30a4\u30ca\u30ea\u30ea\u30fc\u30af\u304c\u5927\u4f53\u306e\u539f\u56e0\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059.\n(\u30d0\u30a4\u30ca\u30ea\u30ea\u30fc\u30af\u3082\u30d7\u30ed\u30bb\u30b9\u30ea\u30fc\u30af\u306b\u3088\u3063\u3066\u767a\u751f\u3059\u308b\u3093\u3067\u3059\u304c\u2026\u2026)\n\u30d7\u30ed\u30bb\u30b9\u306e\u30ea\u30fc\u30af\u306b\u306f\u6c17\u3092\u3064\u3051\u308b\u3068\u3057\u3066, \u30d7\u30ed\u30bb\u30b9\u306eGC\u9593\u9694\u306b\u3088\u3063\u3066\u30d0\u30a4\u30ca\u30ea\u306e\u89e3\u653e\u304c\u9045\u308c\u3066\u3057\u307e\u3044, \u30e1\u30e2\u30ea\u3092\u98df\u3044\u6f70\u3059\u3068\u3044\u3046\u73fe\u8c61\u304c\u3042\u308a\u307e\u3059.\n\u8a73\u3057\u304f\u66f8\u304f\u30681\u3064\u306e\u8a18\u4e8b\u304c\u66f8\u3051\u3066\u3057\u307e\u3046\u306e\u3067\u7c21\u5358\u306b\u30d0\u30a4\u30ca\u30ea\u306eGC\u306b\u3064\u3044\u3066, \u8aa4\u89e3\u3092\u6050\u308c\u305a\u306b\u3056\u3063\u304f\u308a\u6982\u8981\u3092\u66f8\u304f\u3068,\n\n\u30d0\u30a4\u30ca\u30ea\u306fShared Heap\u306b\u4fdd\u5b58\u3055\u308c, \u5404\u30d7\u30ed\u30bb\u30b9\u304c\u53c2\u7167\u3059\u308b\u969b\u306b\u53c2\u7167\u30ab\u30a6\u30f3\u30c8\u3092+1\u3059\u308b\n\u5404\u30d7\u30ed\u30bb\u30b9\u306eGC\u304c\u8d70\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4e0d\u8981\u3067\u3042\u308c\u3070-1\u3055\u308c\u308b\n\u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3059\u308b\u5834\u5408\u306f, \u305d\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u53c2\u7167\u3092\u89e3\u653e\u3059\u308b\n\n\u3088\u308a\u8a73\u3057\u3044\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059.\n\nErlang Garbage Collection Details and Why It Matters\nErlang 19.0 Garbage Collector\n\n\u3053\u306eGC\u306b\u306f1\u3064(?)\u554f\u984c\u70b9\u304c\u3042\u308a, \u30d7\u30ed\u30bb\u30b9\u306eGC\u306f\u30d7\u30ed\u30bb\u30b9\u30b9\u30bf\u30c3\u30af/\u30d2\u30fc\u30d7\u3092\u6d88\u8cbb\u3057\u306a\u3044\u3068\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093.\n\u305d\u306e\u70ba, \u30d0\u30a4\u30ca\u30ea\u4ee5\u5916\u3092\u6271\u308f\u306a\u3044\u751f\u5b58\u671f\u9593\u304c\u9577\u3044\u30d7\u30ed\u30bb\u30b9\u304c\u3044\u308b\u3068\u975e\u5e38\u306b\u5371\u967a\u3067\u3059.\n\u305d\u306e\u5834\u5408\u306f\u30b3\u30fc\u30c9\u4e0a\u3067\u660e\u793a\u7684\u306bGC\u3092\u547c\u3076\u3053\u3068\u3067\u6539\u5584\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059.\n\u3061\u306a\u307f\u306b, recon\u306b\u306f\u4e0d\u8981\u306a\u30d0\u30a4\u30ca\u30ea\u3092\u89e3\u653e\u3059\u308b\u30b3\u30de\u30f3\u30c9\u304c\u3042\u308a, \u3053\u306e\u7d50\u679c\u304b\u3089\u63a8\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\n1> recon:bin_leak(3). \n[{<0.308.0>,-2,\n  [{current_function,{gen_fsm,loop,7}},\n   {initial_call,{proc_lib,init_p,5}}]},\n {<0.268.0>,-2,\n  [user_drv,\n   {current_function,{user_drv,server_loop,6}},\n   {initial_call,{user_drv,server,2}}]},\n {<0.307.0>,-1,\n  [{current_function,{websocket_client,websocket_loop,3}},\n   {initial_call,{proc_lib,init_p,5}}]}]\n\n\u4e0d\u8981\u306a\u53c2\u7167\u3092\u89e3\u653e\u3059\u308b\u3068\u540c\u6642\u306b, leak\u306e\u591a\u304b\u3063\u305f\u30d7\u30ed\u30bb\u30b9\u3092\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u6570\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059.\n\n\u5b9f\u884c\u4e2d\u306epid\u304c\u5206\u304b\u308c\u3070, \u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u306f\u4e00\u76ee\u77ad\u7136\n\n\u30d7\u30ed\u30bb\u30b9\u306e\u8d77\u52d5\u5f15\u6570\u3092\u77e5\u308b\nhttp://erlang.org/doc/man/proc_lib.html#initial_call-1\nhttp://erlang.org/doc/man/erlang.html#process_info-2\n%% proc_lib, gen_XXX\u306e\u5834\u5408\n1> proc_lib:initial_call(pid(0,308,0)).\n{tls_connection,init,['Argument__1']}\n\n%% spawn\u306e\u5834\u5408\n2> Pid = spawn(timer, sleep, [infinity]).\n<0.364.0>\n3> proc_lib:initial_call(Pid).\nfalse\n4> process_info(Pid, initial_call).\n{initial_call,{timer,sleep,1}}\n\nsupervisor\u3082\u4f7f\u3048\u3070, \u5f15\u6570\u306e\u6b63\u78ba\u306a\u5024\u307e\u3067\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\n\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\u304c, \u4f5c\u3063\u3066\u3044\u305f\u8abf\u67fb\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u66f8\u3044\u305f\u90e8\u5206\u304c\u3042\u3063\u305f\u306e\u3067, \u8208\u5473\u304c\u3042\u308b\u65b9\u304c\u3044\u305f\u3089\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044 1\n\n\u30d7\u30ed\u30bb\u30b9\u306e\u73fe\u5728\u306e\u72b6\u614b\u3092\u77e5\u308b\nhttp://erlang.org/doc/man/sys.html#get_state-1\n%% proc_lib, gen_XXX\u306e\u5834\u5408\n1> sys:get_state(pid(0,171,0), 5000). \n{state,{local,preminder_sup},\n       one_for_one,\n       [{child,<0.187.0>,preminder_ws,\n               {preminder_ws,start_link,[]},\n               permanent,5000,worker,\n               [preminder_ws]},\n        {child,<0.178.0>,preminder_pr,\n               {preminder_pr,start_link,[]},\n               permanent,5000,worker,\n               [preminder_pr]},\n        {child,<0.173.0>,preminder_user,\n               {preminder_user,start_link,[]},\n               permanent,5000,worker,\n               [preminder_user]},\n        {child,<0.172.0>,preminder_cache,\n               {preminder_cache,start_link,[]},\n               permanent,5000,worker,\n               [preminder_cache]}],\n       undefined,5,10,[],preminder_sup,[]}\n\n\u306a\u304a, /1\u306ftimeout\u304cinfinity\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u4f7f\u3046\u306e\u306f\u3084\u3081\u307e\u3057\u3087\u3046.\nrecon\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070, recon:get_state/1\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u306e\u304c\u826f\u3044\u3067\u3059.\n\u307e\u305f, \u4f3c\u305f\u3088\u3046\u306a\u95a2\u6570\u306bsys:get_status/1\u304c\u3042\u308a\u307e\u3059\u304c, \u3053\u3061\u3089\u306e\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059.\n%% proc_lib, gen_XXX\u306e\u5834\u5408\n1> sys:get_status(pid(0,171,0)).\n{status,<0.171.0>,\n        {module,gen_server},\n        [[{'$ancestors',[<0.170.0>]},\n          {'$initial_call',{supervisor,preminder_sup,1}}],\n         running,<0.170.0>,[],\n         [{header,\"Status for generic server preminder_sup\"},\n          {data,[{\"Status\",running},\n                 {\"Parent\",<0.170.0>},\n                 {\"Logged events\",[]}]},\n          {data,[{\"State\",\n                  {state,{local,preminder_sup},\n                         one_for_one,\n                         [{child,<0.187.0>,preminder_ws,\n                                 {preminder_ws,start_link,[]},\n                                 permanent,5000,worker,...},\n                          {child,<0.178.0>,preminder_pr,\n                                 {preminder_pr,start_link,...},\n                                 permanent,5000,...},\n                          {child,<0.173.0>,preminder_user,\n                                 {preminder_user,...},\n                                 permanent,...},\n                          {child,<0.172.0>,preminder_cache,{...},...}],\n                         undefined,5,10,[],preminder_sup,[]}}]}]]}\n\n\n\u30d7\u30ed\u30bb\u30b9\u306e\u72b6\u614b\u3092\u89b3\u5bdf\u3059\u308b\n\u30d7\u30ed\u30bb\u30b9\u306e\u73fe\u5728\u306e\u72b6\u614b\u3067\u306f\u306a\u304f, \u3069\u3046\u3044\u3046\u9077\u79fb\u3092\u3057\u3066\u3044\u308b\u304b\u3092\u898b\u305f\u3044\u3068\u304d\u3082\u3042\u308a\u307e\u3059. \u305d\u3046\u3044\u3046\u6642\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u304c\u5f79\u306b\u7acb\u3061\u307e\u3059.\n%% proc_lib, gen_XXX\u306e\u5834\u5408\n1> sys:trace(pid(0,188,0), true).    \nok\n*DBG* <0.188.0> got {'$gen_sync_all_state_event',\n                        {<0.187.0>,#Ref<0.0.2.2359>},\n                        {application_data,<<....>>}} in state connection\n*DBG* <0.188.0> sent ok to <0.187.0>\n      and switched to state connection\n*DBG* <0.188.0> got {tcp,#Port<0.37051>,\n                         <......>>} in state connection\n*DBG* <0.188.0> switched to state connection\n*DBG* <0.188.0> got {tcp,#Port<0.37051>,\n                         <<......>>} in state connection\n*DBG* <0.188.0> switched to state connection\n\n2> sys:trace(pid(0,188,0), false).\n\n\nattach\u304c\u3067\u304d\u306a\u304f\u306a\u3063\u305f. gdb\u306e\u51fa\u756a\u3060.\n\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u304c\u30ed\u30c3\u30af\u3055\u308c\u308b\u3068attach\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u308a, connect\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u308a\u3057\u307e\u3059.\n\u4f8b\u3048\u3070, NIF\u306b\u7121\u9650\u30eb\u30fc\u30d7\u306e\u30d0\u30b0\u304c\u3042\u308b\u3068\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u304c\uff11\u3064\u6b7b\u306b\u307e\u3059. \u3053\u3046\u3057\u3066\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u304c\u6b7b\u3093\u3067\u3044\u304f\u3068\u6700\u7d42\u7684\u306b\u306f\u5916\u90e8\u304b\u3089\u4f55\u3082\u3067\u304d\u306a\u3044\u72b6\u6cc1\u304c\u3067\u304d\u307e\u3059.\n\u3053\u3046\u3044\u3046\u6642\u306fgdb\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046.\n$ gdb -p ${PID}\n\ncore\u3092\u5410\u304f\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u308c\u3070 (ulimit\u3068\u304b\u3067\u3059), kill -SIGSEGV ${PID}\u3067core\u3092\u5410\u304f\u306e\u3067, \u305d\u308c\u3092\u898b\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046.\n\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u78ba\u8a8d\u3059\u308b\n\u4eca\u307e\u3067\u904b\u7528\u3067\u5f79\u306b\u7acb\u3061\u305d\u3046\u306aTips\u306e\u7d39\u4ecb\u3067\u3057\u305f\u304c, \u958b\u767a\u4e2d\u306b\u5f79\u306b\u7acb\u3064\u3053\u3068\u3082\u3042\u308a\u307e\u3059. \n\u305d\u306e\u6700\u305f\u308b\u4f8b\u306f\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u5f15\u6570/\u8fd4\u308a\u5024\u306e\u78ba\u8a8d\u3067\u3057\u3087\u3046.\nbreakpoint\u3092\u4f7f\u3046\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u304c, 2\u5e74\u307b\u3069\u4ed5\u4e8b\u3067\u66f8\u3044\u3066\u7d50\u5c40\u4e00\u5ea6\u3082\u4f7f\u3044\u307e\u305b\u3093\u3067\u3057\u305f.\n1> recon_trace:calls({preminder_slack, '_', fun(_) -> return_trace() end}, 10).\n8\n2:21:16.248402 <0.215.0> preminder_slack:slack_id()\n2:21:16.248907 <0.215.0> preminder_slack:slack_id/0 --> <<\"UXXXXX\">>\n\nrecon\u3092\u4f7f\u308f\u305a\u306bstdlib\u3060\u3051\u3067\u3067\u304d\u307e\u3059\u304c, \u5272\u611b\u3057\u307e\u3059.\n\u307e\u305f, recon_trace\u306e\u4f7f\u3044\u65b9\u306f, \u4ee5\u4e0b\u304c\u8a73\u3057\u3044\u3067\u3059.\n\nReconTrace \u3067 Erlang VM \u306e\u30c8\u30ec\u30fc\u30b9\u6a5f\u80fd\u306b\u89aa\u3057\u3080\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\n\nshell\u306e\u6a5f\u80fd\u3092\u4f7f\u3044\u5012\u3059\n\u307e\u305a, help().\u3092\u899a\u3048\u307e\u3057\u3087\u3046.\n1> help().\n** shell internal commands **\nb()        -- display all variable bindings\ne(N)       -- repeat the expression in query <N>\nf()        -- forget all variable bindings\nf(X)       -- forget the binding of variable X\n...\n\n\u9762\u5012\u3060\u3068\u601d\u3044\u306a\u304c\u3089\u66f8\u3044\u3066\u3044\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u30b7\u30e7\u30fc\u30c8\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u304c\u591a\u6570\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059.\n\u7279\u306b\u6709\u7528\u306a\u7269\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059.\nf()        -- forget all variable bindings\ni(X,Y,Z)   -- information about pid <X,Y,Z>\nm(Mod)     -- information about module <Mod>\nmemory()   -- memory allocation information\npid(X,Y,Z) -- convert X,Y,Z to a Pid\nv(N)       -- use the value of query <N>\n\n\u3061\u306a\u307f\u306b, v/1\u306fv(-1).\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3082\u3067\u304d\u307e\u3059.\n\ntest\u3067\u3082printf\u3057\u305f\u3044\nprintf\u3067\u306f\u306a\u304f, io:format/2\u3067\u3059\u304c.\n%% eunit\n-include_lib(\"eunit/include/eunit.hrl\").\n\ncase ?debugVal(hoge(args)) of\n   ....\n\n%% ct\nct:log(\"debug: ~p\", [Val]).\n\nOTP19\u304b\u3089\u306f @mururu \u3055\u3093\u88fd\u306e?debugVal/2\u3082\u4f7f\u3048\u307e\u3059.\n\n\u6628\u5e74\u3088\u308a\u3082\u9805\u76ee\u304c\u5c11\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c, (\u305d\u3057\u3066\u6700\u5f8c\u306e\u65b9\u304c\u5927\u5206\u30c6\u30ad\u30c8\u30a6\u3067\u3057\u305f\u304c), \u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059m(_ _)m\n\u306a\u304a, \u300c3\u5e74\u76ee\u306eErlang\u30d7\u30ed\u30b0\u30e9\u30de\uff5e\u300d\u306f\u51fa\u307e\u305b\u3093.\n\n\n\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u81ea\u4f53\u306f\u9014\u4e2d\u3067\u98fd\u304d\u3066\u3057\u307e\u3063\u305f\u306e\u3067, \u4f7f\u308f\u306a\u3044\u65b9\u304c\u826f\u3044\u3067\u3059\u00a0\u21a9\n\n\n\n# 2\u5e74\u76ee\u306eErlang\u30d7\u30ed\u30b0\u30e9\u30de\u304c\u8eab\u306b\u3064\u3051\u3066\u304a\u304d\u305f\u304412\u306e\u30c7\u30d0\u30c3\u30b0\u8853\n\n[1\u5e74\u76ee\u306eErlang\u30d7\u30ed\u30b0\u30e9\u30de\u304c\u5d4c\u307e\u308b20\u306e\u30dd\u30a4\u30f3\u30c8](http://qiita.com/soranoba/items/44fd5e7a95e5cf61fa2c) \u306e\u7d9a\u7de8\u3067\u3059\uff08\uff1f\uff09\n\u30d7\u30ed\u30b0\u30e9\u30e0\u7684\u306a\u3053\u3068\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044.\n\n## Erlang VM\u306b\u30a2\u30bf\u30c3\u30c1\u3059\u308b\n\nErlang\u306f\u7a3c\u50cd\u4e2d\u306eVM\u306b\u30b7\u30b9\u30c6\u30e0\u306b\u5927\u3057\u305f\u8ca0\u8377\u306a\u304f\u30a2\u30bf\u30c3\u30c1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059. [relx](https://github.com/erlware/relx)\u306a\u3069\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f, [attach\u7528\u306e\u30b3\u30de\u30f3\u30c9](https://github.com/erlware/relx/blob/v3.22.0/priv/templates/extended_bin#L413-L422)\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c, \u3088\u308a\u5b89\u5168\u306a\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059.\n\n\n```erlang\nerl -sname ${NAME} -setcookie XXXX -remsh ${NODE_NAME}\n```\n\n\u30ea\u30e2\u30fc\u30c8\u30b7\u30a7\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3067, \u30b7\u30b9\u30c6\u30e0\u304c\u52d5\u3044\u3066\u3044\u308bVM\u4e0a\u306b\u7acb\u3061\u4e0a\u3052\u305f\u30b7\u30a7\u30eb\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\nescript\u304b\u3089\u306f`remsh`\u306f\u4f7f\u3048\u306a\u304b\u3063\u305f\u3088\u3046\u306b\u601d\u3046\u306e\u3067 (\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044), `rpc:call`\u3059\u308b\u3057\u304b\u306a\u3044\u3068\u601d\u3044\u307e\u3059.\n\n## \u3044\u3064\u3067\u3082VM\u518d\u8d77\u52d5\u3067\u304d\u308b\u3088\u3046\u306b, CrashDump\u306e\u8a2d\u5b9a\u3092\u5fd8\u308c\u305a\u306b\n\n\u6700\u7d42\u624b\u6bb5\u306eOS\u518d\u8d77\u52d5\u306e\u524d\u306bErlangVM\u306e\u518d\u8d77\u52d5\u3067\u6e08\u307e\u305b\u3089\u308c\u308b\u306e\u3067\u3042\u308c\u3070\u6e08\u307e\u305b\u307e\u3057\u3087\u3046.\n\n### CrashDump\u3092\u5410\u304b\u305b\u308b\u6e96\u5099\u3092\u6574\u3048\u308b\n\nhttp://erlang.org/doc/apps/erts/crash_dump.html\nhttp://erlang.org/doc/man/erl.html\n\nCoreDump\u3068\u306f\u5225\u306b, ErlangVM\u4e0a\u306edump\u3092\u5410\u304b\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059. `relx`\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067crash dump\u3092\u5410\u304f\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u3044\u307e\u3059.\n\n```bash:vm.args\n## \u3053\u308c\u3092\u66f8\u304f\u3068crash dump\u304c\u5410\u304b\u308c\u306a\u304f\u306a\u308a\u307e\u3059\n+d\n\n## \u3053\u308c\u3067\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n-env ERL_CRASH_DUMP /tmp/erl_crash.dump\n```\n\n\u5410\u304b\u305b\u308b\u65b9\u6cd5\u306b\u306f\u4ee5\u4e0b\u306e\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059.\n\n- VM\u4e0a\u3067`erlang:halt(\"slogan\")`\u3092\u5b9f\u884c\u3059\u308b\n- `kill -SIGUSR1 ${PID}` \u3067VM\u3092\u6bba\u3059\n\n### CrashDump\u306f\u8aad\u3081\u308b\n\nErlang\u306ecrash dump\u306f\u4eba\u9593\u304c\u5272\u3068\u8aad\u3081\u307e\u3059\u304c, \u554f\u984c\u767a\u898b\u3092\u65e9\u3081\u308b\u70ba\u306b\u4ee5\u4e0b\u306e\u30c4\u30fc\u30eb\u304c\u6709\u7528\u3067\u3059.\n\n- [CrashDumpViewer](http://erlang.org/doc/apps/observer/crashdump_ug.html)\n- [erl_crashdump_analyzer](https://github.com/ferd/recon/blob/master/script/erl_crashdump_analyzer.sh)\n\n\u81ea\u5206\u304c\u3088\u304f\u4f7f\u3046\u306e\u306f\u5f8c\u8005\u3067\u3059. \u524d\u8005\u306fGUI\u74b0\u5883\u304c\u5fc5\u8981\u306a\u306e\u3067\u904b\u7528\u3057\u3066\u3044\u308b\u74b0\u5883\u3060\u3068\u8f9b\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093.\n\u307e\u305f, \u5f8c\u8005\u306f\u6700\u521d\u306b\u77e5\u308a\u305f\u3044\u3067\u3042\u308d\u3046\u3053\u3068\u3057\u304b\u51fa\u529b\u3057\u306a\u3044\u306e\u3067\u8ff7\u3046\u3053\u3068\u304c\u306a\u3044\u3068\u601d\u3044\u307e\u3059.\n\n\u7d30\u304b\u3044\u90e8\u5206\u306f\u76f4\u63a5dump\u3092\u8aad\u3080\u306e\u3067\u79c1\u306f\u56f0\u308a\u307e\u305b\u3093\u3067\u3057\u305f.\nbinary\u90e8\u5206\u3092\u8aad\u3080\u5fc5\u8981\u304c\u3042\u308b\u5834\u5408\u306f, [binpp](https://github.com/jtendo/binpp)\u306e`from_str/1`\u3092\u4f7f\u3063\u3066\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093.\n\n\n## 8\u5272\u65b9\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u304c\u8a70\u307e\u308b\u6642\u304c\u554f\u984c\u304c\u8d77\u304d\u308b\u6642\n\n\u79c1\u306e\u7d4c\u9a13\u4e0a\u306e\u8a71\u3067\u3059. \u30ed\u30b0\u306f\u4e00\u56de\u8a70\u307e\u308b\u3068\u8a70\u307e\u308a\u7d9a\u3051\u308b\u306e\u3067\u6c17\u3092\u3064\u3051\u307e\u3057\u3087\u3046.\n[\u611b\u3057\u3066\u3084\u307e\u306a\u3044recon](https://github.com/ferd/recon)\u3092\u4f7f\u3046\u3068,\n\n```erlang\n1> recon:proc_count(message_queue_len, 5).\n[{<0.309.0>,7,\n  [{current_function,{timer,sleep,1}},\n   {initial_call,{erlang,apply,2}}]},\n {<0.308.0>,0,\n  [{current_function,{gen_fsm,loop,7}},\n   {initial_call,{proc_lib,init_p,5}}]},\n {<0.307.0>,0,\n  [{current_function,{websocket_client,websocket_loop,3}},\n   {initial_call,{proc_lib,init_p,5}}]},\n {<0.303.0>,0,\n  [inet_gethost_native,\n   {current_function,{inet_gethost_native,main_loop,1}},\n   {initial_call,{inet_gethost_native,server_init,2}}]},\n {<0.302.0>,0,\n  [inet_gethost_native_sup,\n   {current_function,{gen_server,loop,6}},\n   {initial_call,{proc_lib,init_p,5}}]}]\n```\n\n\u82e5\u5e72\u5206\u304b\u308a\u8f9b\u3044\u3067\u3059\u304c, `tuple`\u306e2\u8981\u7d20\u76ee\u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u30ad\u30e5\u30fc\u306b\u6e9c\u307e\u3063\u3066\u3044\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6570\u3067\u3059.\n\u591a\u3044\u9806\u306b\u7b2c\u4e8c\u5f15\u6570\u5206 (\u3053\u306e\u4f8b\u3067\u306f5\u4ef6) \u30ea\u30b9\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u304f\u308c\u307e\u3059.\n\n\u6bba\u3057\u3066\u826f\u3044\u30d7\u30ed\u30bb\u30b9\u3067\u3042\u308c\u3070, shell\u4e0a\u304b\u3089\u6bba\u3057\u3066supervisor\u306b\u518d\u8d77\u52d5\u3055\u305b\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059.\n\n## binary\u306e\u30ea\u30fc\u30af\u306b\u306f\u8981\u6ce8\u610f\n\nErlang\u3067\u30e1\u30e2\u30ea\u304c\u53f3\u80a9\u4e0a\u304c\u308a\u306b\u306a\u308b\u5834\u5408\u306f, \u30d7\u30ed\u30bb\u30b9\u30ea\u30fc\u30af\u3068\u30d0\u30a4\u30ca\u30ea\u30ea\u30fc\u30af\u304c\u5927\u4f53\u306e\u539f\u56e0\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059.\n(\u30d0\u30a4\u30ca\u30ea\u30ea\u30fc\u30af\u3082\u30d7\u30ed\u30bb\u30b9\u30ea\u30fc\u30af\u306b\u3088\u3063\u3066\u767a\u751f\u3059\u308b\u3093\u3067\u3059\u304c\u2026\u2026)\n\n\u30d7\u30ed\u30bb\u30b9\u306e\u30ea\u30fc\u30af\u306b\u306f\u6c17\u3092\u3064\u3051\u308b\u3068\u3057\u3066, \u30d7\u30ed\u30bb\u30b9\u306eGC\u9593\u9694\u306b\u3088\u3063\u3066\u30d0\u30a4\u30ca\u30ea\u306e\u89e3\u653e\u304c\u9045\u308c\u3066\u3057\u307e\u3044, \u30e1\u30e2\u30ea\u3092\u98df\u3044\u6f70\u3059\u3068\u3044\u3046\u73fe\u8c61\u304c\u3042\u308a\u307e\u3059.\n\u8a73\u3057\u304f\u66f8\u304f\u30681\u3064\u306e\u8a18\u4e8b\u304c\u66f8\u3051\u3066\u3057\u307e\u3046\u306e\u3067\u7c21\u5358\u306b\u30d0\u30a4\u30ca\u30ea\u306eGC\u306b\u3064\u3044\u3066, \u8aa4\u89e3\u3092\u6050\u308c\u305a\u306b\u3056\u3063\u304f\u308a\u6982\u8981\u3092\u66f8\u304f\u3068,\n\n- \u30d0\u30a4\u30ca\u30ea\u306fShared Heap\u306b\u4fdd\u5b58\u3055\u308c, \u5404\u30d7\u30ed\u30bb\u30b9\u304c\u53c2\u7167\u3059\u308b\u969b\u306b\u53c2\u7167\u30ab\u30a6\u30f3\u30c8\u3092+1\u3059\u308b\n- \u5404\u30d7\u30ed\u30bb\u30b9\u306eGC\u304c\u8d70\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4e0d\u8981\u3067\u3042\u308c\u3070-1\u3055\u308c\u308b\n- \u30d7\u30ed\u30bb\u30b9\u304c\u7d42\u4e86\u3059\u308b\u5834\u5408\u306f, \u305d\u306e\u30d7\u30ed\u30bb\u30b9\u306e\u53c2\u7167\u3092\u89e3\u653e\u3059\u308b\n\n\u3088\u308a\u8a73\u3057\u3044\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059.\n\n- [Erlang Garbage Collection Details and Why It Matters](https://hamidreza-s.github.io/erlang%20garbage%20collection%20memory%20layout%20soft%20realtime/2015/08/24/erlang-garbage-collection-details-and-why-it-matters.html)\n- [Erlang 19.0 Garbage Collector](https://www.erlang-solutions.com/blog/erlang-19-0-garbage-collector.html)\n\n\u3053\u306eGC\u306b\u306f1\u3064(?)\u554f\u984c\u70b9\u304c\u3042\u308a, \u30d7\u30ed\u30bb\u30b9\u306eGC\u306f\u30d7\u30ed\u30bb\u30b9\u30b9\u30bf\u30c3\u30af/\u30d2\u30fc\u30d7\u3092\u6d88\u8cbb\u3057\u306a\u3044\u3068\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093.\n\u305d\u306e\u70ba, **\u30d0\u30a4\u30ca\u30ea\u4ee5\u5916\u3092\u6271\u308f\u306a\u3044\u751f\u5b58\u671f\u9593\u304c\u9577\u3044\u30d7\u30ed\u30bb\u30b9**\u304c\u3044\u308b\u3068\u975e\u5e38\u306b\u5371\u967a\u3067\u3059.\n\u305d\u306e\u5834\u5408\u306f\u30b3\u30fc\u30c9\u4e0a\u3067\u660e\u793a\u7684\u306bGC\u3092\u547c\u3076\u3053\u3068\u3067\u6539\u5584\u3055\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059.\n\n\n\u3061\u306a\u307f\u306b, [recon](https://github.com/ferd/recon)\u306b\u306f\u4e0d\u8981\u306a\u30d0\u30a4\u30ca\u30ea\u3092\u89e3\u653e\u3059\u308b\u30b3\u30de\u30f3\u30c9\u304c\u3042\u308a, \u3053\u306e\u7d50\u679c\u304b\u3089\u63a8\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\n\n```erlang\n1> recon:bin_leak(3). \n[{<0.308.0>,-2,\n  [{current_function,{gen_fsm,loop,7}},\n   {initial_call,{proc_lib,init_p,5}}]},\n {<0.268.0>,-2,\n  [user_drv,\n   {current_function,{user_drv,server_loop,6}},\n   {initial_call,{user_drv,server,2}}]},\n {<0.307.0>,-1,\n  [{current_function,{websocket_client,websocket_loop,3}},\n   {initial_call,{proc_lib,init_p,5}}]}]\n```\n\n**\u4e0d\u8981\u306a\u53c2\u7167\u3092\u89e3\u653e\u3059\u308b\u3068\u540c\u6642**\u306b, leak\u306e\u591a\u304b\u3063\u305f\u30d7\u30ed\u30bb\u30b9\u3092\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u6570\u8868\u793a\u3057\u3066\u304f\u308c\u307e\u3059.\n\n## \u5b9f\u884c\u4e2d\u306epid\u304c\u5206\u304b\u308c\u3070, \u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u306f\u4e00\u76ee\u77ad\u7136\n\n### \u30d7\u30ed\u30bb\u30b9\u306e\u8d77\u52d5\u5f15\u6570\u3092\u77e5\u308b\n\nhttp://erlang.org/doc/man/proc_lib.html#initial_call-1\nhttp://erlang.org/doc/man/erlang.html#process_info-2\n\n```erlang\n%% proc_lib, gen_XXX\u306e\u5834\u5408\n1> proc_lib:initial_call(pid(0,308,0)).\n{tls_connection,init,['Argument__1']}\n\n%% spawn\u306e\u5834\u5408\n2> Pid = spawn(timer, sleep, [infinity]).\n<0.364.0>\n3> proc_lib:initial_call(Pid).\nfalse\n4> process_info(Pid, initial_call).\n{initial_call,{timer,sleep,1}}\n```\n\nsupervisor\u3082\u4f7f\u3048\u3070, \u5f15\u6570\u306e\u6b63\u78ba\u306a\u5024\u307e\u3067\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\n\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\u304c, \u4f5c\u3063\u3066\u3044\u305f\u8abf\u67fb\u7528\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u66f8\u3044\u305f\u90e8\u5206\u304c\u3042\u3063\u305f\u306e\u3067, [\u8208\u5473\u304c\u3042\u308b\u65b9\u304c\u3044\u305f\u3089\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044](https://github.com/soranoba/peep/blob/a4b09d97522e543033c157f3433cec4e74100626/src/peep_proc.erl#L82-L119) [^1]\n\n### \u30d7\u30ed\u30bb\u30b9\u306e\u73fe\u5728\u306e\u72b6\u614b\u3092\u77e5\u308b\n\nhttp://erlang.org/doc/man/sys.html#get_state-1\n\n```erlang\n%% proc_lib, gen_XXX\u306e\u5834\u5408\n1> sys:get_state(pid(0,171,0), 5000). \n{state,{local,preminder_sup},\n       one_for_one,\n       [{child,<0.187.0>,preminder_ws,\n               {preminder_ws,start_link,[]},\n               permanent,5000,worker,\n               [preminder_ws]},\n        {child,<0.178.0>,preminder_pr,\n               {preminder_pr,start_link,[]},\n               permanent,5000,worker,\n               [preminder_pr]},\n        {child,<0.173.0>,preminder_user,\n               {preminder_user,start_link,[]},\n               permanent,5000,worker,\n               [preminder_user]},\n        {child,<0.172.0>,preminder_cache,\n               {preminder_cache,start_link,[]},\n               permanent,5000,worker,\n               [preminder_cache]}],\n       undefined,5,10,[],preminder_sup,[]}\n```\n\n\u306a\u304a, `/1`\u306ftimeout\u304cinfinity\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u4f7f\u3046\u306e\u306f\u3084\u3081\u307e\u3057\u3087\u3046.\nrecon\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3042\u308c\u3070, [recon:get_state/1](http://ferd.github.io/recon/recon.html#get_state-1)\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u306e\u304c\u826f\u3044\u3067\u3059.\n\n\u307e\u305f, \u4f3c\u305f\u3088\u3046\u306a\u95a2\u6570\u306b[sys:get_status/1](http://erlang.org/doc/man/sys.html#get_status-1)\u304c\u3042\u308a\u307e\u3059\u304c, \u3053\u3061\u3089\u306e\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059.\n\n```erlang\n%% proc_lib, gen_XXX\u306e\u5834\u5408\n1> sys:get_status(pid(0,171,0)).\n{status,<0.171.0>,\n        {module,gen_server},\n        [[{'$ancestors',[<0.170.0>]},\n          {'$initial_call',{supervisor,preminder_sup,1}}],\n         running,<0.170.0>,[],\n         [{header,\"Status for generic server preminder_sup\"},\n          {data,[{\"Status\",running},\n                 {\"Parent\",<0.170.0>},\n                 {\"Logged events\",[]}]},\n          {data,[{\"State\",\n                  {state,{local,preminder_sup},\n                         one_for_one,\n                         [{child,<0.187.0>,preminder_ws,\n                                 {preminder_ws,start_link,[]},\n                                 permanent,5000,worker,...},\n                          {child,<0.178.0>,preminder_pr,\n                                 {preminder_pr,start_link,...},\n                                 permanent,5000,...},\n                          {child,<0.173.0>,preminder_user,\n                                 {preminder_user,...},\n                                 permanent,...},\n                          {child,<0.172.0>,preminder_cache,{...},...}],\n                         undefined,5,10,[],preminder_sup,[]}}]}]]}\n```\n\n### \u30d7\u30ed\u30bb\u30b9\u306e\u72b6\u614b\u3092\u89b3\u5bdf\u3059\u308b\n\n\u30d7\u30ed\u30bb\u30b9\u306e\u73fe\u5728\u306e\u72b6\u614b\u3067\u306f\u306a\u304f, \u3069\u3046\u3044\u3046\u9077\u79fb\u3092\u3057\u3066\u3044\u308b\u304b\u3092\u898b\u305f\u3044\u3068\u304d\u3082\u3042\u308a\u307e\u3059. \u305d\u3046\u3044\u3046\u6642\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u304c\u5f79\u306b\u7acb\u3061\u307e\u3059.\n\n```erlang\n%% proc_lib, gen_XXX\u306e\u5834\u5408\n1> sys:trace(pid(0,188,0), true).    \nok\n*DBG* <0.188.0> got {'$gen_sync_all_state_event',\n                        {<0.187.0>,#Ref<0.0.2.2359>},\n                        {application_data,<<....>>}} in state connection\n*DBG* <0.188.0> sent ok to <0.187.0>\n      and switched to state connection\n*DBG* <0.188.0> got {tcp,#Port<0.37051>,\n                         <......>>} in state connection\n*DBG* <0.188.0> switched to state connection\n*DBG* <0.188.0> got {tcp,#Port<0.37051>,\n                         <<......>>} in state connection\n*DBG* <0.188.0> switched to state connection\n\n2> sys:trace(pid(0,188,0), false).\n```\n\n## attach\u304c\u3067\u304d\u306a\u304f\u306a\u3063\u305f. gdb\u306e\u51fa\u756a\u3060.\n\n\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u304c\u30ed\u30c3\u30af\u3055\u308c\u308b\u3068attach\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u308a, connect\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u308a\u3057\u307e\u3059.\n\u4f8b\u3048\u3070, NIF\u306b\u7121\u9650\u30eb\u30fc\u30d7\u306e\u30d0\u30b0\u304c\u3042\u308b\u3068\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u304c\uff11\u3064\u6b7b\u306b\u307e\u3059. \u3053\u3046\u3057\u3066\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u304c\u6b7b\u3093\u3067\u3044\u304f\u3068\u6700\u7d42\u7684\u306b\u306f\u5916\u90e8\u304b\u3089\u4f55\u3082\u3067\u304d\u306a\u3044\u72b6\u6cc1\u304c\u3067\u304d\u307e\u3059.\n\n\u3053\u3046\u3044\u3046\u6642\u306f`gdb`\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046.\n\n```bash\n$ gdb -p ${PID}\n```\n\ncore\u3092\u5410\u304f\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u308c\u3070 (ulimit\u3068\u304b\u3067\u3059), `kill -SIGSEGV ${PID}`\u3067core\u3092\u5410\u304f\u306e\u3067, \u305d\u308c\u3092\u898b\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046.\n\n## \u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u78ba\u8a8d\u3059\u308b\n\n\u4eca\u307e\u3067\u904b\u7528\u3067\u5f79\u306b\u7acb\u3061\u305d\u3046\u306aTips\u306e\u7d39\u4ecb\u3067\u3057\u305f\u304c, \u958b\u767a\u4e2d\u306b\u5f79\u306b\u7acb\u3064\u3053\u3068\u3082\u3042\u308a\u307e\u3059. \n\u305d\u306e\u6700\u305f\u308b\u4f8b\u306f\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u5f15\u6570/\u8fd4\u308a\u5024\u306e\u78ba\u8a8d\u3067\u3057\u3087\u3046.\n\n[breakpoint\u3092\u4f7f\u3046\u65b9\u6cd5](http://erlang.org/doc/apps/debugger/debugger_chapter.html)\u3082\u3042\u308a\u307e\u3059\u304c, 2\u5e74\u307b\u3069\u4ed5\u4e8b\u3067\u66f8\u3044\u3066\u7d50\u5c40\u4e00\u5ea6\u3082\u4f7f\u3044\u307e\u305b\u3093\u3067\u3057\u305f.\n\n```erlang\n1> recon_trace:calls({preminder_slack, '_', fun(_) -> return_trace() end}, 10).\n8\n2:21:16.248402 <0.215.0> preminder_slack:slack_id()\n2:21:16.248907 <0.215.0> preminder_slack:slack_id/0 --> <<\"UXXXXX\">>\n```\n\n[recon](https://github.com/ferd/recon)\u3092\u4f7f\u308f\u305a\u306bstdlib\u3060\u3051\u3067\u3067\u304d\u307e\u3059\u304c, \u5272\u611b\u3057\u307e\u3059.\n\u307e\u305f, recon_trace\u306e\u4f7f\u3044\u65b9\u306f, \u4ee5\u4e0b\u304c\u8a73\u3057\u3044\u3067\u3059.\n\n- [ReconTrace \u3067 Erlang VM \u306e\u30c8\u30ec\u30fc\u30b9\u6a5f\u80fd\u306b\u89aa\u3057\u3080](http://qiita.com/tatsuya6502/items/c0257d0ee0f1c105dd9c)\n- [\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://ferd.github.io/recon/recon_trace.html)\n\n## shell\u306e\u6a5f\u80fd\u3092\u4f7f\u3044\u5012\u3059\n\n\u307e\u305a, `help().`\u3092\u899a\u3048\u307e\u3057\u3087\u3046.\n\n```erlang\n1> help().\n** shell internal commands **\nb()        -- display all variable bindings\ne(N)       -- repeat the expression in query <N>\nf()        -- forget all variable bindings\nf(X)       -- forget the binding of variable X\n...\n```\n\n\u9762\u5012\u3060\u3068\u601d\u3044\u306a\u304c\u3089\u66f8\u3044\u3066\u3044\u305f\u30e1\u30bd\u30c3\u30c9\u306e\u30b7\u30e7\u30fc\u30c8\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u304c\u591a\u6570\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059.\n\u7279\u306b\u6709\u7528\u306a\u7269\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059.\n\n```\nf()        -- forget all variable bindings\ni(X,Y,Z)   -- information about pid <X,Y,Z>\nm(Mod)     -- information about module <Mod>\nmemory()   -- memory allocation information\npid(X,Y,Z) -- convert X,Y,Z to a Pid\nv(N)       -- use the value of query <N>\n```\n\n\u3061\u306a\u307f\u306b, `v/1`\u306f`v(-1).`\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3082\u3067\u304d\u307e\u3059.\n\n## test\u3067\u3082printf\u3057\u305f\u3044\n\nprintf\u3067\u306f\u306a\u304f, `io:format/2`\u3067\u3059\u304c.\n\n```erlang\n%% eunit\n-include_lib(\"eunit/include/eunit.hrl\").\n\ncase ?debugVal(hoge(args)) of\n   ....\n\n%% ct\nct:log(\"debug: ~p\", [Val]).\n```\n\nOTP19\u304b\u3089\u306f @mururu \u3055\u3093\u88fd\u306e`?debugVal/2`\u3082\u4f7f\u3048\u307e\u3059.\n\n-------\n\n\u6628\u5e74\u3088\u308a\u3082\u9805\u76ee\u304c\u5c11\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c, (\u305d\u3057\u3066\u6700\u5f8c\u306e\u65b9\u304c\u5927\u5206\u30c6\u30ad\u30c8\u30a6\u3067\u3057\u305f\u304c), \u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059m(_ _)m\n\u306a\u304a, \u300c3\u5e74\u76ee\u306eErlang\u30d7\u30ed\u30b0\u30e9\u30de\uff5e\u300d\u306f\u51fa\u307e\u305b\u3093.\n\n\n---\n[^1]: \u30e9\u30a4\u30d6\u30e9\u30ea\u81ea\u4f53\u306f\u9014\u4e2d\u3067\u98fd\u304d\u3066\u3057\u307e\u3063\u305f\u306e\u3067, \u4f7f\u308f\u306a\u3044\u65b9\u304c\u826f\u3044\u3067\u3059\n", "tags": ["Erlang"]}