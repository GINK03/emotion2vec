{"context": " More than 1 year has passed since last update.\n\nEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u8a2d\u5b9a\u7528\n\n\u96d1\u3060\u3051\u3069\u3001\u3068\u308a\u3042\u3048\u305a\u4f5c\u3063\u305f\u3084\u3064\n\n\u30b3\u30fc\u30c9\n\nansible/roles/aws/amazon-linux-init/tasks/main.yml\n- name: check initialize process is completed.\n  stat: path=/root/.init.lock\n  register: is_init_lock\n\n- name: check env\n  shell: echo {{host_name}} | cut -d \"-\" -f1\n  register: env\n\n- name: debug env\n  debug: var=env\n\n- name: check apps_dir\n  shell: lsblk | grep {{apps_dir}}\n  register: is_mount\n  ignore_errors: True\n\n- name: debug is_mount\n  debug: var=is_mount\n\n- name: create apps directory\n  file: path={{apps_dir}} state=directory owner={{main_user}} group={{main_user}} mode=0755\n\n- name: disk format\n  shell: mkfs -t ext4 {{mount_device}}\n  when: is_mount|failed\n  ignore_errors: True\n\n- name: check fstab is backuped.\n  stat: path=/etc/fstab.org\n  register: is_backup_fstab\n\n- name: fstab backup\n  shell: cp -p /etc/fstab /etc/fstab.orig\n  when: is_backup_fstab.stat.md5 is not defined\n\n- name: check registed app directory mount on fstab\n  shell: grep {{apps_dir}} /etc/fstab\n  register: is_regist_app_directory_mount\n  ignore_errors: True\n\n- name: debug is_regist_app_directory_mount\n  debug: var=is_regist_app_directory_mount\n\n- name: regist app directory mount to fstab\n  shell: echo \"{{mount_device}}   {{apps_dir}}   ext4  defaults,nofail 0   2\" >> /etc/fstab\n  when: is_regist_app_directory_mount|failed\n  ignore_errors: True\n\n- name: mount all\n  shell: mount -a\n  when: is_regist_app_directory_mount|failed\n  ignore_errors: True\n\n- name: add PS1 to bash_profile\n  shell: |\n    echo 'export PS1=\"[{{env.stdout}}][\\u@\\h \\W]\\\\$ \"' >> /home/ec2-user/.bash_profile\n  when: is_init_lock.stat.md5 is not defined\n\n- name: change host name in network config\n  shell: sed -i -e \"s/localhost\\.localdomain/{{host_name}}/g\" /etc/sysconfig/network\n\n- name: Set JST\n  shell: cp -p /usr/share/zoneinfo/Japan /etc/localtime\n  when: is_init_lock.stat.md5 is not defined\n\n- name: set hosts from template\n  template: src=../templates/hosts.tpl dest=/etc/hosts owner=root group=root mode=0644\n\n- name: network restart\n  service: name=network state=restarted\n  when: is_init_lock.stat.md5 is not defined\n\n- name: create initialize lock file\n  shell: touch /root/.init.lock\n  when: is_init_lock.stat.md5 is not defined\n\n- name: chown apps directory\n  shell: chown {{main_user}}:{{main_user}} {{apps_dir}}\n\n\n\nansible/roles/aws/amazon-linux-init/templates/hosts.tpl\n127.0.0.1   localhost localhost.localdomain {{host_name}}\n\n\n\nansible/roles/aws/amazon-linux-init/vars/main.yml\nmount_device: /dev/xvdb\n\n\n\nansible/roles/aws/common/vars/main.yml\nmain_user: ec2-user\n\n\n\nansible/roles/common/tasks/main.yml\n- name: resolve env\n  shell: hostname | cut -d \"-\" -f1\n  register: env\n\n- name: debug env.stdout\n  debug: var=env.stdout\n\n- name: read vars file\n  include_vars: ../vars/dev.yml\n  when: env.stdout == \"local\"\n\n- name: read vars file\n  include_vars: ../vars/dev.yml\n  when: env.stdout == \"dev\"\n\n- name: include prod vars file\n  include_vars: ../vars/prd.yml\n  when: env.stdout == \"prd\"\n\n- name: create logs directory\n  file: path={{app_log_dir}} state=directory owner={{main_user}} group={{main_user}} mode=0755\n\n\n\n\nansible/roles/common/vars/dev.yml\n# github\u306b\u7f6e\u3044\u3066\u3044\u308b\u306e\u3067\u672c\u6765\u306f\u3053\u3053\u306e\u5185\u5bb9\u306fansible-vault encrypt\u3067\u6697\u53f7\u5316\u3055\u308c\u3066\u3044\u308b\n\n# AWS\u3067API\u4f7f\u3046\u7528 (\u4eca\u56de\u306e\u3068\u3053\u3067\u306f\u4f7f\u3063\u3066\u306a\u3044\u3051\u3069\u4e00\u5fdc)\naccess_key_id: ABCDEFGHIJPLMN\nsecret_access_key: asdfghjfdssa++dfgdfg\n\n\n\n\nansible/aws-init-setting.yml\n- hosts: '{{host_name}}'\n  sudo: yes\n  roles:\n    - common\n    - aws/common\n    - aws/amazon-linux-init\n\n\n\nansible/inventories/dev/hosts\n# \u30ed\u30fc\u30ab\u30eb\u306b\u5b9f\u884c\u3059\u308b\u305f\u3081\u306bansible_connection\u3092\u8a2d\u5b9a\nlocal-common-hoge01 ansible_connection=local\nlocal-common-hoge02 ansible_connection=ssh\n\n\n\n\u5b9f\u884c\u30b3\u30de\u30f3\u30c9\nansible-playbook ansible/aws-init-setting.yml -i ansible/inventories/dev/hosts --extra-vars \"host_name=dev-common-hoge01\" --vault-pass ~/.ansible_dev_vault_pass\n\n\n\u3084\u3063\u3066\u308b\u3053\u3068\n\nbash\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u304c [\u74b0\u5883\u540d][\u30e6\u30fc\u30b6\u540d@\u30db\u30b9\u30c8\u540d]$ \u3063\u3066\u306a\u308b\u3088\u3046\u306b\u8a2d\u5b9a\n\u30db\u30b9\u30c8\u540d\u306e\u8a2d\u5b9a\nJST\u306b\u8a2d\u5b9a\n\u3042\u3089\u304b\u3058\u3081\u4f5c\u6210\u3057\u3066\u304a\u3044\u305fEBS\u3092ext4\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066/var/apps\u306b\u30de\u30a6\u30f3\u30c8\n\n# EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u8a2d\u5b9a\u7528\n\n## \u96d1\u3060\u3051\u3069\u3001\u3068\u308a\u3042\u3048\u305a\u4f5c\u3063\u305f\u3084\u3064\n\n### \u30b3\u30fc\u30c9\n```yaml:ansible/roles/aws/amazon-linux-init/tasks/main.yml\n- name: check initialize process is completed.\n  stat: path=/root/.init.lock\n  register: is_init_lock\n\n- name: check env\n  shell: echo {{host_name}} | cut -d \"-\" -f1\n  register: env\n\n- name: debug env\n  debug: var=env\n\n- name: check apps_dir\n  shell: lsblk | grep {{apps_dir}}\n  register: is_mount\n  ignore_errors: True\n\n- name: debug is_mount\n  debug: var=is_mount\n\n- name: create apps directory\n  file: path={{apps_dir}} state=directory owner={{main_user}} group={{main_user}} mode=0755\n\n- name: disk format\n  shell: mkfs -t ext4 {{mount_device}}\n  when: is_mount|failed\n  ignore_errors: True\n\n- name: check fstab is backuped.\n  stat: path=/etc/fstab.org\n  register: is_backup_fstab\n\n- name: fstab backup\n  shell: cp -p /etc/fstab /etc/fstab.orig\n  when: is_backup_fstab.stat.md5 is not defined\n\n- name: check registed app directory mount on fstab\n  shell: grep {{apps_dir}} /etc/fstab\n  register: is_regist_app_directory_mount\n  ignore_errors: True\n\n- name: debug is_regist_app_directory_mount\n  debug: var=is_regist_app_directory_mount\n\n- name: regist app directory mount to fstab\n  shell: echo \"{{mount_device}}   {{apps_dir}}   ext4  defaults,nofail 0   2\" >> /etc/fstab\n  when: is_regist_app_directory_mount|failed\n  ignore_errors: True\n\n- name: mount all\n  shell: mount -a\n  when: is_regist_app_directory_mount|failed\n  ignore_errors: True\n\n- name: add PS1 to bash_profile\n  shell: |\n    echo 'export PS1=\"[{{env.stdout}}][\\u@\\h \\W]\\\\$ \"' >> /home/ec2-user/.bash_profile\n  when: is_init_lock.stat.md5 is not defined\n\n- name: change host name in network config\n  shell: sed -i -e \"s/localhost\\.localdomain/{{host_name}}/g\" /etc/sysconfig/network\n\n- name: Set JST\n  shell: cp -p /usr/share/zoneinfo/Japan /etc/localtime\n  when: is_init_lock.stat.md5 is not defined\n\n- name: set hosts from template\n  template: src=../templates/hosts.tpl dest=/etc/hosts owner=root group=root mode=0644\n\n- name: network restart\n  service: name=network state=restarted\n  when: is_init_lock.stat.md5 is not defined\n\n- name: create initialize lock file\n  shell: touch /root/.init.lock\n  when: is_init_lock.stat.md5 is not defined\n\n- name: chown apps directory\n  shell: chown {{main_user}}:{{main_user}} {{apps_dir}}\n```\n\n```ini:ansible/roles/aws/amazon-linux-init/templates/hosts.tpl\n127.0.0.1   localhost localhost.localdomain {{host_name}}\n```\n\n```yaml:ansible/roles/aws/amazon-linux-init/vars/main.yml\nmount_device: /dev/xvdb\n```\n\n```yaml:ansible/roles/aws/common/vars/main.yml\nmain_user: ec2-user\n```\n\n```yaml:ansible/roles/common/tasks/main.yml\n- name: resolve env\n  shell: hostname | cut -d \"-\" -f1\n  register: env\n\n- name: debug env.stdout\n  debug: var=env.stdout\n\n- name: read vars file\n  include_vars: ../vars/dev.yml\n  when: env.stdout == \"local\"\n\n- name: read vars file\n  include_vars: ../vars/dev.yml\n  when: env.stdout == \"dev\"\n\n- name: include prod vars file\n  include_vars: ../vars/prd.yml\n  when: env.stdout == \"prd\"\n\n- name: create logs directory\n  file: path={{app_log_dir}} state=directory owner={{main_user}} group={{main_user}} mode=0755\n  \n```\n\n```yaml:ansible/roles/common/vars/dev.yml \n# github\u306b\u7f6e\u3044\u3066\u3044\u308b\u306e\u3067\u672c\u6765\u306f\u3053\u3053\u306e\u5185\u5bb9\u306fansible-vault encrypt\u3067\u6697\u53f7\u5316\u3055\u308c\u3066\u3044\u308b\n\n# AWS\u3067API\u4f7f\u3046\u7528 (\u4eca\u56de\u306e\u3068\u3053\u3067\u306f\u4f7f\u3063\u3066\u306a\u3044\u3051\u3069\u4e00\u5fdc)\naccess_key_id: ABCDEFGHIJPLMN\nsecret_access_key: asdfghjfdssa++dfgdfg\n\n```\n\n\n```yaml:ansible/aws-init-setting.yml\n- hosts: '{{host_name}}'\n  sudo: yes\n  roles:\n    - common\n    - aws/common\n    - aws/amazon-linux-init\n```\n\n```ini:ansible/inventories/dev/hosts\n# \u30ed\u30fc\u30ab\u30eb\u306b\u5b9f\u884c\u3059\u308b\u305f\u3081\u306bansible_connection\u3092\u8a2d\u5b9a\nlocal-common-hoge01 ansible_connection=local\nlocal-common-hoge02 ansible_connection=ssh\n```\n\n### \u5b9f\u884c\u30b3\u30de\u30f3\u30c9\n```bash\nansible-playbook ansible/aws-init-setting.yml -i ansible/inventories/dev/hosts --extra-vars \"host_name=dev-common-hoge01\" --vault-pass ~/.ansible_dev_vault_pass\n```\n\n### \u3084\u3063\u3066\u308b\u3053\u3068\n* bash\u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u304c [\u74b0\u5883\u540d][\u30e6\u30fc\u30b6\u540d@\u30db\u30b9\u30c8\u540d]$ \u3063\u3066\u306a\u308b\u3088\u3046\u306b\u8a2d\u5b9a\n* \u30db\u30b9\u30c8\u540d\u306e\u8a2d\u5b9a\n* JST\u306b\u8a2d\u5b9a\n* \u3042\u3089\u304b\u3058\u3081\u4f5c\u6210\u3057\u3066\u304a\u3044\u305fEBS\u3092ext4\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066/var/apps\u306b\u30de\u30a6\u30f3\u30c8\n", "tags": ["ansible-playbook1.7.2"]}