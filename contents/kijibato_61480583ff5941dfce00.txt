{"context": "Puppet4.5.0(2016/5/17\u30ea\u30ea\u30fc\u30b9)\u306e\u3001\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u3067\u500b\u4eba\u7684\u306b\u6c17\u306b\u306a\u308b\u5909\u66f4\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u52d5\u4f5c\u78ba\u8a8d\u3068\u304b\u306f\u3057\u3066\u306a\u3044\u306e\u3067\u3001\u9593\u9055\u3063\u3066\u3044\u308b\u90e8\u5206\u304c\u3042\u308c\u3070\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u6295\u7a3f(2016/8/20)\u6642\u70b9\u3067\u3001\u3059\u3067\u306b4.6\u304c\u51fa\u3066\u3044\u307e\u3059\u3002\n\u904e\u53bb\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306e\u5909\u66f4\u306e\u30d5\u30a9\u30ed\u30fc\u7528\u3067\u3059\u3002\n\nPuppet 4.5.0\nReleased May 17, 2016.\n\nNew features\n\nNew functions, dig, then, and lest\n\nAccessing data in nested structures could be difficult and required conditional logic to test for missing or optional parts of a structure. Three functions have been added to make such tasks easier; \u2018dig\u2019, \u2018then\u2019 and \u2018lest\u2019, which also combine nicely with the existing \u2018with\u2019 and \u2018assert_type\u2019 functions.\n\n\u5165\u308c\u5b50\u306b\u306a\u3063\u305f\u30c7\u30fc\u30bf\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3057\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306e\u3001dig,then,lest\u95a2\u6570\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070\u3001\u30cf\u30c3\u30b7\u30e5\u306e\u4e2d\u306b\u30cf\u30c3\u30b7\u30e5\u304c\u3042\u3063\u3066\u3001\u305d\u306e\u4e2d\u304c\u914d\u5217\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u304b\u3067\u3059\u3002\n\ndig\ndig\u306e\u7d39\u4ecb\u306f\u3053\u3061\u3089\u3001\nhttps://docs.puppet.com/puppet/latest/reference/function.html#dig\n\u4f8b\u3082\u8f09\u3063\u3066\u3044\u307e\u3059\u3002\nExample: Using dig\n$data = {a => { b => [{x => 10, y => 20}, {x => 100, y => 200}]}}\nnotice $data.dig(a, b, 1, x)\n\n\u3053\u306e\u4f8b\u306e\u5834\u5408\u3001dig\u95a2\u6570\u306e\u7d50\u679c\u306f\u3001100\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n\uff08$data\u306e\u3001a\u30ad\u30fc\u306e\u3001b\u30ad\u30fc\u306e\u30011\u756a\u76ee\u306e\u8981\u7d20\u306e\u3001x\u30ad\u30fc\u306e\u5024\uff09\n\nthen\nthen\u306e\u7d39\u4ecb\u306f\u3053\u3061\u3089\u3001\n\uff08then\u306e\u8aac\u660e\u3067\u3059\u304c\u3001\u306a\u305c\u304b\u30bf\u30a4\u30c8\u30eb\u304clest\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u9006\u306blest\u306e\u8aac\u660e\u304c\u898b\u5f53\u305f\u3089\u306a\u3044\u3002\u3002\u3002\uff09\nhttps://docs.puppet.com/puppet/latest/reference/function.html#lest\n\u4f8b\u3082\u8f09\u3063\u3066\u3044\u307e\u3059\u3002\nExample: Using dig and then\n$data = {a => { b => [{x => 10, y => 20}, {x => 100, y => 200}]}}\nnotice $data.dig(a, b, 1, x).then |$x| { $x * 2 }\n\n\u7d50\u679c\u306f\u3001200\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n(dig\u306e\u7d50\u679c100($data\u306e\u3001a\u30ad\u30fc\u306e\u3001b\u30ad\u30fc\u306e\u30011\u756a\u76ee\u306e\u8981\u7d20\u306e\u3001x\u30ad\u30fc\u306e\u5024\uff09* 2)\ndig\u306e\u7d50\u679c\u304cundef\u306e\u5834\u5408\u306e\u4f8b\u3082\u3042\u308a\u307e\u3059\u3002\nContrast this with:\n$data = {a => { b => [{x => 10, y => 20}, {ex => 100, why => 200}]}}\nnotice $data.dig(a, b, 1, x).then |$x| { $x * 2 }\n\n\u7d50\u679c\u306f\u3001undef\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n(dig\u306e\u7d50\u679cundef($data\u306e\u3001a\u30ad\u30fc\u306e\u3001b\u30ad\u30fc\u306e\u30011\u756a\u76ee\u306e\u8981\u7d20\u306e\u3001x\u30ad\u30fc\u306e\u5024\u306f\u306a\u3044\uff09\u305f\u3081\u3001then\u306e\u51e6\u7406\u306f\u5b9f\u884c\u3055\u308c\u306a\u3044)\n\nNew types: SemVer and SemVerRange\n\nSemVer and SemVerRange have been added to the Puppet Type System. This makes it possible to directly work with version related values in the Puppet language. Given version strings are validated and comparison operators (<, >, <=, =>, ==, !=, =~, !~), as well as the in-operator and case expression option matching works with these objects.\n\nx.y.z\u306e\u3088\u3046\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6bd4\u8f03\u3059\u308b\u305f\u3081\u306b\u4fbf\u5229\u305d\u3046\u306a\u95a2\u6570\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\nSemVerRange\u304c\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u7bc4\u56f2\u5b9a\u7fa9\u3001SevVer\u304c\u3042\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u3001SemVerRange\u3067\u5b9a\u7fa9\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u542b\u307e\u308c\u308b\u304b\u5224\u5b9a\u3059\u308b\u3082\u306e\u306e\u3088\u3046\u3067\u3059\u3002\nhttps://docs.puppet.com/puppet/latest/reference/function.html#creating-a-semver\n\u4f8b\u3082\u8f09\u3063\u3066\u3044\u307e\u3059\u3002\nExamples: SemVer and SemVerRange usage\n# As a type, SemVer can describe disjunct ranges which versions can be\n# matched against - here the type is constructed with two\n# SemVerRange objects.\n#\n$t = SemVer[\n  SemVerRange('>=1.0.0 <2.0.0'),\n  SemVerRange('>=3.0.0 <4.0.0')\n]\nnotice(SemVer('1.2.3') =~ $t) # true\nnotice(SemVer('2.3.4') =~ $t) # false\nnotice(SemVer('3.4.5') =~ $t) # true\n\n\u203b\u30b7\u30b9\u30c6\u30e0\u5185\u306b\u8907\u6570\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u6df7\u5728\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u5834\u5408\u3084\u3001\u6c4e\u7528\u7684\u306a\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u3092\u66f8\u304f\u5834\u5408\u306b\u4fbf\u5229\u305d\u3046\u3067\u3059\u3002\n\nEnhancements\n\nPath change of hiera.yaml\n\nThe default location of hiera.yaml has changed to the $confdir. Puppet now looks for hiera.yaml in $codedir first, then $confdir.\n\nhiera.yaml\u306e\u30d1\u30b9\u304c\u5909\u308f\u3063\u305f\u3088\u3046\u3067\u3059\u3002$codedir\u3067\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308bhiera.yaml\u3092\u5148\u306b\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nPuppet 4.5.1\nReleased June 1, 2016.\n\u30d0\u30b0\u4fee\u6b63\n\nPuppet 4.5.2\nReleased June 14, 2016.\n\u30d0\u30b0\u4fee\u6b63\n\nPuppet 4.5.3\nReleased July 20, 2016.\n\u30d0\u30b0\u4fee\u6b63\n\n\u53c2\u8003\nPuppet 4.5 Release Notes\nhttps://docs.puppet.com/puppet/4.5/reference/release_notes.html\nPuppet4.5.0(2016/5/17\u30ea\u30ea\u30fc\u30b9)\u306e\u3001\u30ea\u30ea\u30fc\u30b9\u30ce\u30fc\u30c8\u3067\u500b\u4eba\u7684\u306b\u6c17\u306b\u306a\u308b\u5909\u66f4\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u52d5\u4f5c\u78ba\u8a8d\u3068\u304b\u306f\u3057\u3066\u306a\u3044\u306e\u3067\u3001\u9593\u9055\u3063\u3066\u3044\u308b\u90e8\u5206\u304c\u3042\u308c\u3070\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u306e\u6295\u7a3f(2016/8/20)\u6642\u70b9\u3067\u3001\u3059\u3067\u306b4.6\u304c\u51fa\u3066\u3044\u307e\u3059\u3002\n\u904e\u53bb\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306e\u5909\u66f4\u306e\u30d5\u30a9\u30ed\u30fc\u7528\u3067\u3059\u3002\n\n# Puppet 4.5.0\nReleased May 17, 2016.\n\n## New features\n\n###  New functions, dig, then, and lest\n\n> Accessing data in nested structures could be difficult and required conditional logic to test for missing or optional parts of a structure. Three functions have been added to make such tasks easier; \u2018dig\u2019, \u2018then\u2019 and \u2018lest\u2019, which also combine nicely with the existing \u2018with\u2019 and \u2018assert_type\u2019 functions.\n\n\u5165\u308c\u5b50\u306b\u306a\u3063\u305f\u30c7\u30fc\u30bf\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3057\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306e\u3001dig,then,lest\u95a2\u6570\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070\u3001\u30cf\u30c3\u30b7\u30e5\u306e\u4e2d\u306b\u30cf\u30c3\u30b7\u30e5\u304c\u3042\u3063\u3066\u3001\u305d\u306e\u4e2d\u304c\u914d\u5217\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u304b\u3067\u3059\u3002\n\n#### dig\n\ndig\u306e\u7d39\u4ecb\u306f\u3053\u3061\u3089\u3001\n\nhttps://docs.puppet.com/puppet/latest/reference/function.html#dig\n\n\u4f8b\u3082\u8f09\u3063\u3066\u3044\u307e\u3059\u3002\n\nExample: Using dig\n\n```puppet\n$data = {a => { b => [{x => 10, y => 20}, {x => 100, y => 200}]}}\nnotice $data.dig(a, b, 1, x)\n```\n\n\u3053\u306e\u4f8b\u306e\u5834\u5408\u3001dig\u95a2\u6570\u306e\u7d50\u679c\u306f\u3001100\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n\uff08$data\u306e\u3001a\u30ad\u30fc\u306e\u3001b\u30ad\u30fc\u306e\u30011\u756a\u76ee\u306e\u8981\u7d20\u306e\u3001x\u30ad\u30fc\u306e\u5024\uff09\n\n#### then\n\nthen\u306e\u7d39\u4ecb\u306f\u3053\u3061\u3089\u3001\n\uff08then\u306e\u8aac\u660e\u3067\u3059\u304c\u3001\u306a\u305c\u304b\u30bf\u30a4\u30c8\u30eb\u304clest\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u9006\u306blest\u306e\u8aac\u660e\u304c\u898b\u5f53\u305f\u3089\u306a\u3044\u3002\u3002\u3002\uff09\n\nhttps://docs.puppet.com/puppet/latest/reference/function.html#lest\n\n\u4f8b\u3082\u8f09\u3063\u3066\u3044\u307e\u3059\u3002\n\nExample: Using dig and then\n\n```puppet\n$data = {a => { b => [{x => 10, y => 20}, {x => 100, y => 200}]}}\nnotice $data.dig(a, b, 1, x).then |$x| { $x * 2 }\n```\n\n\u7d50\u679c\u306f\u3001200\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n(dig\u306e\u7d50\u679c100($data\u306e\u3001a\u30ad\u30fc\u306e\u3001b\u30ad\u30fc\u306e\u30011\u756a\u76ee\u306e\u8981\u7d20\u306e\u3001x\u30ad\u30fc\u306e\u5024\uff09* 2)\n\ndig\u306e\u7d50\u679c\u304cundef\u306e\u5834\u5408\u306e\u4f8b\u3082\u3042\u308a\u307e\u3059\u3002\n\nContrast this with:\n\n```puppet\n$data = {a => { b => [{x => 10, y => 20}, {ex => 100, why => 200}]}}\nnotice $data.dig(a, b, 1, x).then |$x| { $x * 2 }\n```\n\n\u7d50\u679c\u306f\u3001undef\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n(dig\u306e\u7d50\u679cundef($data\u306e\u3001a\u30ad\u30fc\u306e\u3001b\u30ad\u30fc\u306e\u30011\u756a\u76ee\u306e\u8981\u7d20\u306e\u3001x\u30ad\u30fc\u306e\u5024\u306f\u306a\u3044\uff09\u305f\u3081\u3001then\u306e\u51e6\u7406\u306f\u5b9f\u884c\u3055\u308c\u306a\u3044)\n\n### New types: SemVer and SemVerRange\n\n> SemVer and SemVerRange have been added to the Puppet Type System. This makes it possible to directly work with version related values in the Puppet language. Given version strings are validated and comparison operators (<, >, <=, =>, ==, !=, =~, !~), as well as the in-operator and case expression option matching works with these objects.\n\nx.y.z\u306e\u3088\u3046\u306a\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6bd4\u8f03\u3059\u308b\u305f\u3081\u306b\u4fbf\u5229\u305d\u3046\u306a\u95a2\u6570\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\nSemVerRange\u304c\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u7bc4\u56f2\u5b9a\u7fa9\u3001SevVer\u304c\u3042\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u3001SemVerRange\u3067\u5b9a\u7fa9\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u542b\u307e\u308c\u308b\u304b\u5224\u5b9a\u3059\u308b\u3082\u306e\u306e\u3088\u3046\u3067\u3059\u3002\n\nhttps://docs.puppet.com/puppet/latest/reference/function.html#creating-a-semver\n\n\u4f8b\u3082\u8f09\u3063\u3066\u3044\u307e\u3059\u3002\n\nExamples: SemVer and SemVerRange usage\n\n```puppet\n# As a type, SemVer can describe disjunct ranges which versions can be\n# matched against - here the type is constructed with two\n# SemVerRange objects.\n#\n$t = SemVer[\n  SemVerRange('>=1.0.0 <2.0.0'),\n  SemVerRange('>=3.0.0 <4.0.0')\n]\nnotice(SemVer('1.2.3') =~ $t) # true\nnotice(SemVer('2.3.4') =~ $t) # false\nnotice(SemVer('3.4.5') =~ $t) # true\n```\n\n\u203b\u30b7\u30b9\u30c6\u30e0\u5185\u306b\u8907\u6570\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u6df7\u5728\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u5834\u5408\u3084\u3001\u6c4e\u7528\u7684\u306a\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\u3092\u66f8\u304f\u5834\u5408\u306b\u4fbf\u5229\u305d\u3046\u3067\u3059\u3002\n\n\n## Enhancements\n\n### Path change of hiera.yaml\n\n> The default location of hiera.yaml has changed to the \\$confdir. Puppet now looks for hiera.yaml in \\$codedir first, then \\$confdir.\n\nhiera.yaml\u306e\u30d1\u30b9\u304c\u5909\u308f\u3063\u305f\u3088\u3046\u3067\u3059\u3002\\$codedir\u3067\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308bhiera.yaml\u3092\u5148\u306b\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n# Puppet 4.5.1\nReleased June 1, 2016.\n\n\u30d0\u30b0\u4fee\u6b63\n\n# Puppet 4.5.2\nReleased June 14, 2016.\n\n\u30d0\u30b0\u4fee\u6b63\n\n# Puppet 4.5.3\nReleased July 20, 2016.\n\n\u30d0\u30b0\u4fee\u6b63\n\n# \u53c2\u8003\n\nPuppet 4.5 Release Notes\nhttps://docs.puppet.com/puppet/4.5/reference/release_notes.html\n", "tags": ["Puppet"]}