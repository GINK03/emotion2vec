{"tags": ["Java", "hamcrest1.3", "JUnit4.11"], "context": " More than 1 year has passed since last update.Hamcrest \u306e Matcher \u306b\u3069\u3093\u306a\u3082\u306e\u304c\u3042\u308b\u304b\u30e1\u30e2\u3002\n\u6a19\u6e96\u3067\u3069\u3093\u306a Matcher \u304c\u3042\u308b\u304b\u77e5\u3063\u3066\u304a\u304b\u306a\u3044\u3068\u3001\u3064\u3044\u3064\u3044\u8eca\u8f2a\u306e\u518d\u767a\u660e\u3092\u3057\u3066\u3057\u307e\u3046\uff08\u3068\u3044\u3046\u304b\u3001\u3057\u3066\u3057\u307e\u3063\u305f\uff09\u3002\n\u306a\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a org.hamcrest.Matchers \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u3072\u3068\u901a\u308a\u78ba\u8a8d\u3057\u305f\u3002\n\u305f\u3060\u3057\u3001\u4f7f\u3044\u65b9\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3084\u3064\uff08iterableWithSize()\uff09\u3001\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u4e8b\u8db3\u308a\u308b\u3084\u3064\uff08both(), either(), any()\uff09\u3001\u500b\u4eba\u7684\u306b\u4f7f\u308f\u306a\u3055\u305d\u3046\u306a\u3084\u3064\uff08hasXPath()\uff09\u306f\u7701\u3044\u3066\u3044\u308b\u3002\n\n\u74b0\u5883\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\nJUnit\n4.11\n\nHamcrest\n1.3\n\nbuild.gradle\n\nbuild.gradle\napply plugin: 'java'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testCompile 'junit:junit:4.11', {\n        transitive = false\n    }\n    testCompile 'org.hamcrest:hamcrest-all:1.3'\n}\n\n\n>gradle dependencies\n\ntestCompile - Compile classpath for source set 'test'.\n+--- junit:junit:4.11\n\\--- org.hamcrest:hamcrest-all:1.3\n\nJUnit 4.11 \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068 hamcrest-core \u306e 1.3 \u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3002\n\u4eca\u56de\u306f\u5225\u9014 hamcrest-all \u3092\u4f9d\u5b58\u95a2\u4fc2\u306b\u8ffd\u52a0\u3059\u308b\u306e\u3067\u3001 transitive = false \u3092\u6307\u5b9a\u3057\u3066\u3001\u63a8\u79fb\u7684\u306a\u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3092\u660e\u793a\u7684\u306b\u89e3\u9664\u3057\u3066\u3044\u308b\u3002\n\n\u57fa\u672c\u7684\u306a\u6bd4\u8f03 Matcher\n\nis() : \u540c\u3058\u5024\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(\"hoge\"));\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u5024\u304c\u7b49\u3057\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\u6bd4\u8f03\u306b\u306f\u3001 equals(Object) \u30e1\u30bd\u30c3\u30c9\u304c\u4f7f\u7528\u3055\u308c\u308b\u3002\n\n\nnot() : \u5426\u5b9a\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u5024\u3092\u5426\u5b9a\u3059\u308b() {\n        assertThat(\"hoge\", is(not(\"HOGE\")));\n    }\n\n    @Test\n    public void Matcher\u3092\u5426\u5b9a\u3059\u308b() {\n        assertThat(\"hoge\", is(not(containsString(\"xx\"))));\n    }\n}\n\n\n\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u5024\uff08Matcher\uff09\u3092\u5426\u5b9a\u3059\u308b\u3002\n\n\nnullValue() : null \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(null, is(nullValue()));\n    }\n}\n\n\n\u5024\u304c null \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nnotNullValue() : null \u3067\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"not null\", is(notNullValue()));\n    }\n}\n\n\n\u5024\u304c null \u3067\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nequalTo() : \u540c\u3058\u5024\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(equalTo(\"hoge\")));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"hoge\", is(equalTo(\"xxx\")));\n    }\n}\n\n\n\u52d5\u4f5c\u306f is() \u3068\u540c\u3058\u3002\n\u82f1\u8a9e\u306e\u6587\u6cd5\u7684\u306b is() \u3060\u3068\u4e0d\u81ea\u7136\u306a\u3068\u304d\u306f equalTo() \u3092\u4f7f\u3046\u611f\u3058\u304b\u3068\u3002\n\n\ncomparesEqualTo() : compareTo() \u3067\u6bd4\u8f03\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    private Hoge one = new Hoge();\n    private Hoge other = new Hoge();\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(one, is(comparesEqualTo(other)));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(one, is(other));\n    }\n\n    public static class Hoge implements Comparable<Hoge> {\n        @Override\n        public int compareTo(Hoge o) {\n            return 0;\n        }\n\n        @Override\n        public boolean equals(Object other) {\n            return false;\n        }\n\n        @Override\n        public int hashCode() {\n            return super.hashCode();\n        }\n    }\n}\n\n\n\nequals() \u30e1\u30bd\u30c3\u30c9\u3067\u306f\u306a\u304f\u3001 compareTo() \u30e1\u30bd\u30c3\u30c9\u3067\u6bd4\u8f03\u3057\u3001 0 \u304c\u8fd4\u3055\u308c\u308b\u5834\u5408\u306b\u30c1\u30a7\u30c3\u30af\u304c OK \u3068\u306a\u308b\u3002\n\n\nsameInstance() : \u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        Hoge hoge = new Hoge();\n        assertThat(hoge, is(sameInstance(hoge)));\n    }\n\n    private static class Hoge {}\n}\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\ninstanceOf() : \u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    private Hoge hoge = new Hoge();\n    private Fuga fuga = new Fuga();\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(hoge, is(instanceOf(Hoge.class)));\n        assertThat(fuga, is(instanceOf(Hoge.class)));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(hoge, is(instanceOf(String.class)));\n    }\n\n    private static class Hoge {}\n    private static class Fuga extends Hoge {}\n}\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u3001\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u3001\u307e\u305f\u306f\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nhasToString() : toString() \u3067\u6bd4\u8f03\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    private static Hoge hoge = new Hoge();\n\n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(hoge, hasToString(\"hoge\"));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(hoge, hasToString(\"xxxx\"));\n        }\n    }\n\n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(hoge, hasToString(containsString(\"og\")));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(hoge, hasToString(containsString(\"xx\")));\n        }\n    }\n\n    private static class Hoge {\n        @Override\n        public String toString() {\n            return \"hoge\";\n        }\n    }\n}\n\n\n\ntoString() \u3057\u305f\u7d50\u679c\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\n\u6587\u5b57\u5217\u6bd4\u8f03\u306b\u95a2\u4fc2\u3059\u308b Matcher\n\nstartsWith() : \u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u59cb\u307e\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(startsWith(\"h\")));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"hoge\", is(startsWith(\"x\")));\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u3067\u59cb\u307e\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nendsWith() : \u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u7d42\u308f\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(endsWith(\"e\")));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"hoge\", is(endsWith(\"xxx\")));\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u3067\u7d42\u308f\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\ncontainsString() : \u6307\u5b9a\u3057\u305f\u6587\u5b57\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(containsString(\"og\")));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"HOGE\", is(containsString(\"og\")));\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nequalToIgnoringCase() : \u5927\u6587\u5b57\u30fb\u5c0f\u6587\u5b57\u3092\u533a\u5225\u305b\u305a\u306b\u6bd4\u8f03\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(equalToIgnoringCase(\"HOGE\")));\n    }\n}\n\n\n\u5927\u6587\u5b57\u30fb\u5c0f\u6587\u5b57\u3092\u533a\u5225\u305b\u305a\u306b\u6587\u5b57\u5217\u3092\u6bd4\u8f03\u3059\u308b\u3002\n\n\nequalToIgnoringWhiteSpace() : \u5927\u6587\u5b57\u30fb\u5c0f\u6587\u5b57\u30fb\u30d6\u30e9\u30f3\u30af\u6587\u5b57\u3092\u7121\u8996\u3057\u3066\u6bd4\u8f03\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"h o\u3000g\\te\", is(equalToIgnoringWhiteSpace(\"   H\\tO        G\u3000E   \")));\n    }\n}\n\n\n\u6b21\u306e\u3053\u3068\u3092\u7121\u8996\u3057\u3066\u6bd4\u8f03\u3059\u308b\u3002\n\n\n\u5927\u6587\u5b57\u30fb\u5c0f\u6587\u5b57\u3002\n\u30d6\u30e9\u30f3\u30af\u6587\u5b57\uff08\u534a\u89d2\u30fb\u5168\u89d2\u30b9\u30da\u30fc\u30b9\u3001\u30bf\u30d6\uff09\u306e\u9055\u3044\u3002\n\u6587\u5b57\u5217\u306e\u9593\u306b\u3042\u308b\u30d6\u30e9\u30f3\u30af\u6587\u5b57\u306e\u6570\u3002\n\u524d\u5f8c\u306e\u30d6\u30e9\u30f3\u30af\u6587\u5b57\u3002\n\n\n\n\nisEmptyString() : \u7a7a\u6587\u5b57\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"\", isEmptyString());\n    }\n}\n\n\n\u6587\u5b57\u5217\u304c\u7a7a\u6587\u5b57\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nisEmptyOrNullString() : \u7a7a\u6587\u5b57\u307e\u305f\u306f null \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"\", isEmptyOrNullString());\n        assertThat(null, isEmptyOrNullString());\n    }\n}\n\n\n\u6587\u5b57\u5217\u304c\u7a7a\u6587\u5b57\u307e\u305f\u306f null \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nstringContainsInOrder() : \u6307\u5b9a\u3057\u305f\u9806\u5e8f\u3067\u6587\u5b57\u5217\u304c\u73fe\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"HogeFugaPiyo\", is(stringContainsInOrder(Arrays.asList(\"Hog\", \"eFug\", \"aPiyo\"))));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"HogeFugaPiyo\", is(stringContainsInOrder(Arrays.asList(\"Fuga\", \"Piyo\", \"Hoge\"))));\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u304c\u3001\u6307\u5b9a\u3057\u305f\u9806\u5e8f\u3067\u73fe\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\n\u6570\u5024\u6bd4\u8f03\u306b\u95a2\u4fc2\u3059\u308b Matcher\n\ncloseTo() : \u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u306e\u5024\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(0.5, is(closeTo(1.0, 0.5)));\n    }\n\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(0.4, is(closeTo(1.0, 0.5)));\n    }\n}\n\n\n\u7b2c\u4e00\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u5024\u3092\u57fa\u6e96\u3068\u3057\u3066\u3001\u7b2c\u4e8c\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u5024\u306e\u7bc4\u56f2\u306b\u6570\u5024\u304c\u53ce\u307e\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\u4e0a\u8a18\u4f8b\u306e\u5834\u5408\u3001\u5024\u304c 0.5 \uff5e 1.5 \u306a\u3089\u30c6\u30b9\u30c8\u304c\u6210\u529f\u3059\u308b\u3002\nBigDecimal \u7248\u3082\u3042\u308b\u3002\n\n\ngreaterThan() : \u6307\u5b9a\u3057\u305f\u5024\u3088\u308a\u5927\u304d\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(10, is(greaterThan(9)));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(10, is(greaterThan(10)));\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u5024\u3088\u308a\u5927\u304d\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\ngreaterThanOrEqualTo() : \u6307\u5b9a\u3057\u305f\u5024\u4ee5\u4e0a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(10, is(greaterThanOrEqualTo(10)));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(10, is(greaterThanOrEqualTo(11)));\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u5024\u4ee5\u4e0a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nlessThan() : \u6307\u5b9a\u3057\u305f\u5024\u3088\u308a\u5c0f\u3055\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(10, is(lessThan(11)));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(10, is(lessThan(10)));\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u5024\u3088\u308a\u5c0f\u3055\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nlessThanOrEqualTo() : \u6307\u5b9a\u3057\u305f\u5024\u4ee5\u4e0b\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(10, is(lessThanOrEqualTo(10)));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(10, is(lessThanOrEqualTo(9)));\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u5024\u4ee5\u4e0b\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\u6b63\u76f4\u3001\u3053\u306e\u8fba\u306f\u666e\u901a\u306b\u6bd4\u8f03\u6f14\u7b97\u5b50\u4f7f\u3063\u305f\u65b9\u304c\u8aad\u307f\u3084\u3059\u3044\u6c17\u304c\u3059\u308b\u3002\u3002\u3002\n\nCollection\u30fbIterable\u306b\u95a2\u4fc2\u3059\u308b Matcher\n\ncontains() : \u5168\u3066\u306e\u8981\u7d20\u304c\u7b49\u3057\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    private static List<String> list = Arrays.asList(\"hoge\", \"fuga\", \"piyo\");\n\n    public static class \u5024\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, is(contains(\"hoge\", \"fuga\", \"piyo\")));\n        }\n\n        @Test\n        public void \u8981\u7d20\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(contains(\"hoge\", \"fuga\")));\n        }\n\n        @Test\n        public void \u542b\u307e\u308c\u308b\u8981\u7d20\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(contains(\"hoge\", \"fuga\", \"PIYO\")));\n        }\n\n        @Test\n        public void \u9806\u5e8f\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(contains(\"hoge\", \"piyo\", \"fuga\")));\n        }\n    }\n\n    public static class Matcher\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, is(contains(equalTo(\"hoge\"), containsString(\"ug\"), startsWith(\"pi\"))));\n        }\n\n        @Test\n        public void \u8981\u7d20\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(contains(equalTo(\"hoge\"), containsString(\"ug\"))));\n        }\n\n        @Test\n        public void \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044Matcher\u304c\u542b\u307e\u308c\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(contains(equalTo(\"HOGE\"), containsString(\"ug\"), startsWith(\"pi\"))));\n        }\n\n        @Test\n        public void \u9806\u5e8f\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(contains(containsString(\"ug\"), equalTo(\"hoge\"), startsWith(\"pi\"))));\n        }\n    }\n\n}\n\n\n\nIterable \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\uff08List \u3068\u304b\uff09\u306e\u8981\u7d20\u304c\u3001\u6307\u5b9a\u3057\u305f\u5185\u5bb9\u3067\u5b8c\u5168\u306b\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\ncontainsInAnyOrder() : \u9806\u5e8f\u3092\u7121\u8996\u3057\u3066\u5168\u3066\u306e\u8981\u7d20\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    private static List<String> list = Arrays.asList(\"hoge\", \"fuga\", \"piyo\");\n\n    public static class \u5024\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, is(containsInAnyOrder(\"hoge\", \"piyo\", \"fuga\")));\n        }\n\n        @Test\n        public void \u8981\u7d20\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(containsInAnyOrder(\"hoge\", \"fuga\")));\n        }\n\n        @Test\n        public void \u542b\u307e\u308c\u308b\u8981\u7d20\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(containsInAnyOrder(\"hoge\", \"PIYO\", \"fuga\")));\n        }\n    }\n\n    public static class Matcher\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, is(containsInAnyOrder(containsString(\"ug\"), startsWith(\"pi\"), equalTo(\"hoge\"))));\n        }\n\n        @Test\n        public void \u8981\u7d20\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(containsInAnyOrder(containsString(\"ug\"), equalTo(\"hoge\"))));\n        }\n\n        @Test\n        public void \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044Matcher\u304c\u542b\u307e\u308c\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(containsInAnyOrder(containsString(\"ug\"), equalTo(\"HOGE\"), startsWith(\"pi\"))));\n        }\n    }\n\n}\n\n\n\u8981\u7d20\u306e\u9806\u756a\u306f\u7121\u8996\u3057\u3066\u3001 Iterable \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\uff08List \u3068\u304b\uff09\u306e\u8981\u7d20\u306b\u3001\u6307\u5b9a\u3057\u305f\u8981\u7d20\u304c\u5168\u3066\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nhasItem() : \u6307\u5b9a\u3057\u305f\u8981\u7d20\u3092\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    private static List<String> list = Arrays.asList(\"hoge\", \"fuga\", \"piyo\");\n\n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasItem(\"hoge\"));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, hasItem(\"xxx\"));\n        }\n    }\n\n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasItem(containsString(\"og\")));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, hasItem(containsString(\"xxx\")));\n        }\n    }\n}\n\n\n\nIterable \u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u306e\u8981\u7d20\u306b\u3001\u6307\u5b9a\u3057\u305f\u5024\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nhasItems() : \u6307\u5b9a\u3057\u305f\u8981\u7d20\u3092\u5168\u3066\u542b\u3080\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    private static List<String> list = Arrays.asList(\"hoge\", \"fuga\", \"piyo\");\n\n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasItems(\"hoge\", \"piyo\"));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, hasItems(\"xxx\"));\n        }\n    }\n\n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasItems(containsString(\"og\"), endsWith(\"ga\")));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, hasItems(containsString(\"xxx\")));\n        }\n    }\n}\n\n\n\nhasItem() \u306e\u3001\u8981\u7d20\u3092\u8907\u6570\u6307\u5b9a\u3067\u304d\u308b\u7248\u3002\n\n\nhasSize() : \u6307\u5b9a\u3057\u305f\u30b5\u30a4\u30ba\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    private static List<String> list = Arrays.asList(\"hoge\", \"fuga\", \"piyo\");\n\n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasSize(3));\n        }\n    }\n\n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasSize(lessThan(4)));\n        }\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30b5\u30a4\u30ba\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nempty() : \u7a7a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Collections;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(Collections.emptyList(), is(empty()));\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u7a7a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nemptyCollectionOf() : \u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u7a7a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Collections;\nimport java.util.List;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        List<String> list = Collections.emptyList();\n        assertThat(list, is(emptyCollectionOf(String.class)));\n    }\n}\n\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u3001\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u7a7a\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nemptyIterable() : \u7a7a\u306e Iterator \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Collections;\nimport java.util.Iterator;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        MyIterable iterable = new MyIterable();\n        assertThat(iterable, is(emptyIterable()));\n    }\n\n    public static class MyIterable implements Iterable<MyIterable> {\n        @Override\n        public Iterator<MyIterable> iterator() {\n            return Collections.emptyIterator();\n        }\n    }\n}\n\n\n\nIterable \u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u304c\u7a7a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nemptyIterableOf() : \u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u7a7a\u306e Iterator \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Collections;\nimport java.util.Iterator;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        MyIterable iterable = new MyIterable();\n        assertThat(iterable, is(emptyIterableOf(MyIterable.class)));\n    }\n\n    public static class MyIterable implements Iterable<MyIterable> {\n        @Override\n        public Iterator<MyIterable> iterator() {\n            return Collections.emptyIterator();\n        }\n    }\n}\n\n\n\nIterable \u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u304c\u3001\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u7a7a\u306e Iterator \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nMap \u306b\u95a2\u4fc2\u3059\u308b Matcher\n\nhasEntry() : \u6307\u5b9a\u3057\u305f\u30a8\u30f3\u30c8\u30ea\u3092\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    private static Map<String, String> map = new HashMap<>();\n\n    static {\n        map.put(\"hoge\", \"HOGE\");\n        map.put(\"fuga\", \"FUGA\");\n        map.put(\"piyo\", \"PIYO\");\n    }\n\n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(map, hasEntry(\"hoge\", \"HOGE\"));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(map, hasEntry(\"xxxx\", \"HOGE\"));\n        }\n    }\n\n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(map, hasEntry(containsString(\"og\"), endsWith(\"E\")));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(map, hasEntry(containsString(\"xx\"), endsWith(\"E\")));\n        }\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u30a8\u30f3\u30c8\u30ea\u304c\u30de\u30c3\u30d7\u306b\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nhasKey() : \u6307\u5b9a\u3057\u305f\u30ad\u30fc\u3092\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    private static Map<String, String> map = new HashMap<>();\n\n    static {\n        map.put(\"hoge\", \"HOGE\");\n        map.put(\"fuga\", \"FUGA\");\n        map.put(\"piyo\", \"PIYO\");\n    }\n\n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(map, hasKey(\"hoge\"));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(map, hasKey(\"xxxx\"));\n        }\n    }\n\n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(map, hasKey(containsString(\"og\")));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(map, hasKey(containsString(\"xx\")));\n        }\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u3092\u30de\u30c3\u30d7\u304c\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nhasValue() : \u6307\u5b9a\u3057\u305f\u5024\u3092\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    private static Map<String, String> map = new HashMap<>();\n\n    static {\n        map.put(\"hoge\", \"HOGE\");\n        map.put(\"fuga\", \"FUGA\");\n        map.put(\"piyo\", \"PIYO\");\n    }\n\n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(map, hasValue(\"HOGE\"));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(map, hasValue(\"xxxx\"));\n        }\n    }\n\n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(map, hasValue(endsWith(\"E\")));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(map, hasValue(endsWith(\"xxx\")));\n        }\n    }\n}\n\n\nJavaBeans \u306b\u95a2\u4fc2\u3059\u308b Matcher\n\nhasProperty() : \u6307\u5b9a\u3057\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n\nHoge.java\npackage sample.hamcrest;\n\npublic class Hoge {\n    private int value;\n\n    public Hoge(int value) {\n        this.value = value;\n    }\n\n    public int getValue() {\n        return this.value;\n    }\n\n    public void setValue(int value) {\n        this.value = value;\n    }\n}\n\n\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    private static Hoge hoge = new Hoge(10);\n\n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(hoge, hasProperty(\"value\"));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(hoge, hasProperty(\"xxx\"));\n        }\n    }\n\n    public static class Matcher\u3092\u4f7f\u3063\u3066\u5024\u3082\u30c1\u30a7\u30c3\u30af\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(hoge, hasProperty(\"value\", greaterThan(9)));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(hoge, hasProperty(\"value\", equalTo(11)));\n        }\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e JavaBeans \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\nMatcher \u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u5024\u3082\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u6307\u5b9a\u3057\u305f\u5024\u304c\u3001\u30de\u30c3\u30d7\u306e\u30d0\u30ea\u30e5\u30fc\u306b\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nsamePropertyValuesAs() : \u5168\u3066\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u7b49\u3057\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        Hoge one = new Hoge(10, \"one\");\n        Hoge other = new Hoge(10, \"one\");\n\n        assertThat(one, is(samePropertyValuesAs(other)));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        Hoge one = new Hoge(10, \"one\");\n        Hoge other = new Hoge(99, \"other\");\n\n        assertThat(one, is(samePropertyValuesAs(other)));\n    }\n\n    public static class Hoge {\n        private int i;\n        private String value;\n\n        public Hoge(int i, String value) {\n            this.i = i;\n            this.value = value;\n        }\n\n        public int getI() {\n            return this.i;\n        }\n        public void setI(int i) {\n            this.i = i;\n        }\n        public String getValue() {\n            return this.value;\n        }\n        public void setValue(String value) {\n            this.value = value;\n        }\n    }\n}\n\n\nJavaBeans \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6bd4\u8f03\u3059\u308b\u3002\n\n\nMatcher \u3092\u7d44\u307f\u5408\u308f\u305b\u308b\n\nallOf() : Matcher \u3092 AND \u6761\u4ef6\u3067\u7d50\u5408\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(allOf(startsWith(\"h\"), containsString(\"og\"), endsWith(\"e\"))));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"hoge\", is(allOf(startsWith(\"h\"), containsString(\"xx\"), endsWith(\"e\"))));\n    }\n}\n\n\n\u5f15\u6570\u3067\u6e21\u3057\u305f Matcher \u304c\u5168\u3066\u6e80\u305f\u3055\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nanyOf() : Matcher \u3092 OR \u6761\u4ef6\u3067\u7d50\u5408\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(anyOf(startsWith(\"h\"), endsWith(\"xxx\"))));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"yyyy\", is(anyOf(startsWith(\"h\"), endsWith(\"xxx\"))));\n    }\n}\n\n\n\u5f15\u6570\u3067\u6e21\u3057\u305f Matcher \u306e\u5185\u3001\u6700\u4f4e\u3067\u3082\uff11\u3064\u306f\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\n\u914d\u5217\u306b\u95a2\u4fc2\u3059\u308b Matcher\n\narray() : \u914d\u5217\u306e\u5404\u8981\u7d20\u3092 Matcher \u3067\u691c\u8a3c\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n        assertThat(array, is(array(equalTo(\"hoge\"), startsWith(\"f\"), endsWith(\"o\"))));\n    }\n\n    @Test\n    public void \u8981\u7d20\u6570\u306b\u5bfe\u3057\u3066Matcher\u306e\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n        assertThat(array, is(array(equalTo(\"hoge\"), startsWith(\"f\"))));\n    }\n\n    @Test\n    public void \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044Matcher\u304c\u3042\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n        assertThat(array, is(array(equalTo(\"hoge\"), startsWith(\"f\"), equalTo(\"PIYO\"))));\n    }\n}\n\n\n\u914d\u5217\uff11\u3064\u305a\u3064\u306b\u5bfe\u3057\u3066 Matcher \u3092\u9069\u7528\u3057\u3001\u5168\u3066\u306e Matcher \u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\narrayContaining() : \u6307\u5b9a\u3057\u305f\u8981\u7d20\u3068\u914d\u5217\u306e\u8981\u7d20\u304c\u5168\u3066\u7b49\u3057\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    public static class \u5024\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContaining(\"hoge\", \"fuga\", \"piyo\")));\n        }\n\n        @Test\n        public void \u8981\u7d20\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContaining(\"hoge\", \"fuga\")));\n        }\n\n        @Test\n        public void \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044Matcher\u304c\u3042\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContaining(\"HOGE\", \"fuga\", \"piyo\")));\n        }\n    }\n\n    public static class Matcher\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContaining(equalTo(\"hoge\"), containsString(\"ug\"), endsWith(\"o\"))));\n        }\n\n        @Test\n        public void \u8981\u7d20\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContaining(equalTo(\"hoge\"), containsString(\"ug\"))));\n        }\n\n        @Test\n        public void \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044Matcher\u304c\u3042\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContaining(equalTo(\"hoge\"), containsString(\"ug\"), endsWith(\"xxx\"))));\n        }\n    }\n}\n\n\n\u914d\u5217\u306e\u4e2d\u8eab\u304c\u3001\u5f15\u6570\u3067\u6e21\u3057\u305f\u5024\uff08Matcher\uff09\u3068\u5b8c\u5168\u306b\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\narrayContainingInAnyOrder() : \u9806\u5e8f\u3092\u7121\u8996\u3057\u3066\u3001\u6307\u5b9a\u3057\u305f\u8981\u7d20\u304c\u5168\u3066\u914d\u5217\u306b\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    public static class \u5024\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContainingInAnyOrder(\"hoge\", \"piyo\", \"fuga\")));\n        }\n\n        @Test\n        public void \u6307\u5b9a\u3057\u305f\u8981\u7d20\u304c\u5168\u3066\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContainingInAnyOrder(\"hoge\", \"piyo\")));\n        }\n    }\n\n    public static class Matcher\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContainingInAnyOrder(equalTo(\"piyo\"), equalTo(\"hoge\"), endsWith(\"a\"))));\n        }\n\n        @Test\n        public void fuga\u306b\u30de\u30c3\u30c1\u3059\u308bMatcher\u304c\u5b58\u5728\u3057\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContainingInAnyOrder(equalTo(\"piyo\"), equalTo(\"hoge\"), endsWith(\"yo\"))));\n        }\n    }\n}\n\n\n\u8981\u7d20\u306e\u9806\u756a\u306f\u7121\u8996\u3057\u3066\u3001\u914d\u5217\u306e\u8981\u7d20\u306b\u6307\u5b9a\u3057\u305f\u5024\u304c\u5168\u3066\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\narrayWithSize() : \u914d\u5217\u306e\u30b5\u30a4\u30ba\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    public static class \u5024\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayWithSize(3)));\n        }\n\n        @Test\n        public void \u30b5\u30a4\u30ba\u304c\u7570\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayWithSize(2)));\n        }\n    }\n\n    public static class Matcher\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayWithSize(lessThan(4))));\n        }\n\n        @Test\n        public void \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayWithSize(greaterThan(3))));\n        }\n    }\n}\n\n\n\u914d\u5217\u306e\u30b5\u30a4\u30ba\u304c\u6307\u5b9a\u3057\u305f\u5024\u3068\u540c\u3058\u3067\u3042\u308b\u3053\u3068\uff08Matcher \u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3053\u3068\uff09\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nemptyArray() : \u914d\u5217\u304c\u7a7a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(new String[] {}, is(emptyArray()));\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u914d\u5217\u304c\u7a7a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nhasItemInArray() : \u914d\u5217\u306e\u4e2d\u306b\u6307\u5b9a\u3057\u305f\u5024\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    private static String[] list = {\"hoge\", \"fuga\", \"piyo\"};\n\n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasItemInArray(\"hoge\"));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, hasItemInArray(\"xxx\"));\n        }\n    }\n\n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasItemInArray(containsString(\"og\")));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, hasItemInArray(containsString(\"xxx\")));\n        }\n    }\n}\n\n\n\u914d\u5217\u306e\u8981\u7d20\u306b\u3001\u6307\u5b9a\u3057\u305f\u5024\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\n\u305d\u306e\u4ed6\n\ndescribedAs() : \u30c6\u30b9\u30c8\u306b\u5931\u6557\u3057\u305f\u3068\u304d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4e0a\u66f8\u304d\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\uff11() {\n        assertThat(\"hoge\", is(equalTo(\"HOGE\")));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\uff12() {\n        assertThat(\"hoge\", is(describedAs(\"HOGE [%0, %1]\", equalTo(\"HOGE\"), \"param1\", \"param2\")));\n    }\n}\n\n\n\u30c6\u30b9\u30c8\uff11\u306e\u5b9f\u884c\u7d50\u679c\njava.lang.AssertionError: \nExpected: is \"HOGE\"\n     but: was \"hoge\"\n\n\n\n\u30c6\u30b9\u30c8\uff12\u306e\u5b9f\u884c\u7d50\u679c\njava.lang.AssertionError: \nExpected: is HOGE [\"param1\", \"param2\"]\n     but: was \"hoge\"\n\n\n\n\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3057\u305f\u3068\u304d\u306e\u8aac\u660e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3001\u6307\u5b9a\u3057\u305f\u3082\u306e\u306b\u7f6e\u304d\u63db\u3048\u308b\u3002\n\n%0 \u3068\u3044\u3046\u5f62\u3067\u57cb\u3081\u8fbc\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4f7f\u3048\u308b\u3002\n\n\nisIn() : \u914d\u5217\u304b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u305f\u8981\u7d20\u306e\u3044\u305a\u308c\u304b\u306b\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n\n    public static class \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(\"hoge\", isIn(Arrays.asList(\"hoge\", \"fuga\", \"piyo\")));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(\"xxxx\", isIn(Arrays.asList(\"hoge\", \"fuga\", \"piyo\")));\n        }\n    }\n\n    public static class \u914d\u5217\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(\"hoge\", isIn(new String[] {\"hoge\", \"fuga\", \"piyo\"}));\n        }\n\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(\"xxxx\", isIn(new String[] {\"hoge\", \"fuga\", \"piyo\"}));\n        }\n    }\n}\n\n\n\u6307\u5b9a\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\uff08\u914d\u5217\uff09\u306e\u4e2d\u306b\u3001 assertThat() \u306e\u7b2c\u4e00\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u8981\u7d20\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nisOneOf() : \u53ef\u5909\u9577\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u5024\u306e\u3044\u305a\u308c\u304b\u306b\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", isOneOf(\"hoge\", \"fuga\", \"piyo\"));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"xxxx\", isOneOf(\"hoge\", \"fuga\", \"piyo\"));\n    }\n}\n\n\n\u53ef\u5909\u9577\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u5024\u306e\u4e2d\u306b\u3001 assertThat() \u306e\u7b2c\u4e00\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u8981\u7d20\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\nanything() : \u5168\u3066\u306e\u5024\u306b\u30de\u30c3\u30c1\u3059\u308b\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(anything()));\n        assertThat(\"fuga\", is(anything()));\n        assertThat(123,    is(anything()));\n        assertThat(Arrays.asList(\"a\", \"b\", \"c\"), is(anything()));\n    }\n}\n\n\n\u5168\u3066\u306e\u5024\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n\nHamcrest \u306e Matcher \u306b\u3069\u3093\u306a\u3082\u306e\u304c\u3042\u308b\u304b\u30e1\u30e2\u3002\n\n\u6a19\u6e96\u3067\u3069\u3093\u306a Matcher \u304c\u3042\u308b\u304b\u77e5\u3063\u3066\u304a\u304b\u306a\u3044\u3068\u3001\u3064\u3044\u3064\u3044\u8eca\u8f2a\u306e\u518d\u767a\u660e\u3092\u3057\u3066\u3057\u307e\u3046\uff08\u3068\u3044\u3046\u304b\u3001\u3057\u3066\u3057\u307e\u3063\u305f\uff09\u3002\n\n\u306a\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a `org.hamcrest.Matchers` \u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u3072\u3068\u901a\u308a\u78ba\u8a8d\u3057\u305f\u3002\n\n\u305f\u3060\u3057\u3001\u4f7f\u3044\u65b9\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3084\u3064\uff08`iterableWithSize()`\uff09\u3001\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u4e8b\u8db3\u308a\u308b\u3084\u3064\uff08`both()`, `either()`, `any()`\uff09\u3001\u500b\u4eba\u7684\u306b\u4f7f\u308f\u306a\u3055\u305d\u3046\u306a\u3084\u3064\uff08`hasXPath()`\uff09\u306f\u7701\u3044\u3066\u3044\u308b\u3002\n\n\n\n\n#\u74b0\u5883\n##\u30d0\u30fc\u30b8\u30e7\u30f3\n###JUnit\n4.11\n\n###Hamcrest\n1.3\n\n##build.gradle\n```groovy:build.gradle\napply plugin: 'java'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    testCompile 'junit:junit:4.11', {\n        transitive = false\n    }\n    testCompile 'org.hamcrest:hamcrest-all:1.3'\n}\n```\n\n```text:\n>gradle dependencies\n\ntestCompile - Compile classpath for source set 'test'.\n+--- junit:junit:4.11\n\\--- org.hamcrest:hamcrest-all:1.3\n```\n\nJUnit 4.11 \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068 hamcrest-core \u306e 1.3 \u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3002\n\n\u4eca\u56de\u306f\u5225\u9014 hamcrest-all \u3092\u4f9d\u5b58\u95a2\u4fc2\u306b\u8ffd\u52a0\u3059\u308b\u306e\u3067\u3001 `transitive = false` \u3092\u6307\u5b9a\u3057\u3066\u3001\u63a8\u79fb\u7684\u306a\u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\u3092\u660e\u793a\u7684\u306b\u89e3\u9664\u3057\u3066\u3044\u308b\u3002\n\n#\u57fa\u672c\u7684\u306a\u6bd4\u8f03 Matcher\n##is() : \u540c\u3058\u5024\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(\"hoge\"));\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u5024\u304c\u7b49\u3057\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n- \u6bd4\u8f03\u306b\u306f\u3001 `equals(Object)` \u30e1\u30bd\u30c3\u30c9\u304c\u4f7f\u7528\u3055\u308c\u308b\u3002\n\n##not() : \u5426\u5b9a\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u5024\u3092\u5426\u5b9a\u3059\u308b() {\n        assertThat(\"hoge\", is(not(\"HOGE\")));\n    }\n    \n    @Test\n    public void Matcher\u3092\u5426\u5b9a\u3059\u308b() {\n        assertThat(\"hoge\", is(not(containsString(\"xx\"))));\n    }\n}\n```\n\n- \u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u5024\uff08Matcher\uff09\u3092\u5426\u5b9a\u3059\u308b\u3002\n\n##nullValue() : null \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(null, is(nullValue()));\n    }\n}\n```\n\n- \u5024\u304c null \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##notNullValue() : null \u3067\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"not null\", is(notNullValue()));\n    }\n}\n```\n\n- \u5024\u304c null \u3067\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##equalTo() : \u540c\u3058\u5024\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(equalTo(\"hoge\")));\n    }\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"hoge\", is(equalTo(\"xxx\")));\n    }\n}\n```\n\n- \u52d5\u4f5c\u306f `is()` \u3068\u540c\u3058\u3002\n- \u82f1\u8a9e\u306e\u6587\u6cd5\u7684\u306b `is()` \u3060\u3068\u4e0d\u81ea\u7136\u306a\u3068\u304d\u306f `equalTo()` \u3092\u4f7f\u3046\u611f\u3058\u304b\u3068\u3002\n\n##comparesEqualTo() : compareTo() \u3067\u6bd4\u8f03\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    \n    private Hoge one = new Hoge();\n    private Hoge other = new Hoge();\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(one, is(comparesEqualTo(other)));\n    }\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(one, is(other));\n    }\n    \n    public static class Hoge implements Comparable<Hoge> {\n        @Override\n        public int compareTo(Hoge o) {\n            return 0;\n        }\n        \n        @Override\n        public boolean equals(Object other) {\n            return false;\n        }\n\n        @Override\n        public int hashCode() {\n            return super.hashCode();\n        }\n    }\n}\n```\n\n- `equals()` \u30e1\u30bd\u30c3\u30c9\u3067\u306f\u306a\u304f\u3001 `compareTo()` \u30e1\u30bd\u30c3\u30c9\u3067\u6bd4\u8f03\u3057\u3001 `0` \u304c\u8fd4\u3055\u308c\u308b\u5834\u5408\u306b\u30c1\u30a7\u30c3\u30af\u304c OK \u3068\u306a\u308b\u3002\n\n##sameInstance() : \u540c\u3058\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        Hoge hoge = new Hoge();\n        assertThat(hoge, is(sameInstance(hoge)));\n    }\n    \n    private static class Hoge {}\n}\n```\n\n- \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##instanceOf() : \u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    \n    private Hoge hoge = new Hoge();\n    private Fuga fuga = new Fuga();\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(hoge, is(instanceOf(Hoge.class)));\n        assertThat(fuga, is(instanceOf(Hoge.class)));\n    }\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(hoge, is(instanceOf(String.class)));\n    }\n    \n    private static class Hoge {}\n    private static class Fuga extends Hoge {}\n}\n```\n\n- \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u3001\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u3001\u307e\u305f\u306f\u305d\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##hasToString() : toString() \u3067\u6bd4\u8f03\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    private static Hoge hoge = new Hoge();\n    \n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(hoge, hasToString(\"hoge\"));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(hoge, hasToString(\"xxxx\"));\n        }\n    }\n    \n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(hoge, hasToString(containsString(\"og\")));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(hoge, hasToString(containsString(\"xx\")));\n        }\n    }\n    \n    private static class Hoge {\n        @Override\n        public String toString() {\n            return \"hoge\";\n        }\n    }\n}\n```\n\n- `toString()` \u3057\u305f\u7d50\u679c\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n#\u6587\u5b57\u5217\u6bd4\u8f03\u306b\u95a2\u4fc2\u3059\u308b Matcher\n\n##startsWith() : \u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u59cb\u307e\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(startsWith(\"h\")));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"hoge\", is(startsWith(\"x\")));\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u3067\u59cb\u307e\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##endsWith() : \u6307\u5b9a\u3057\u305f\u6587\u5b57\u3067\u7d42\u308f\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(endsWith(\"e\")));\n    }\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"hoge\", is(endsWith(\"xxx\")));\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u3067\u7d42\u308f\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##containsString() : \u6307\u5b9a\u3057\u305f\u6587\u5b57\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(containsString(\"og\")));\n    }\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"HOGE\", is(containsString(\"og\")));\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##equalToIgnoringCase() : \u5927\u6587\u5b57\u30fb\u5c0f\u6587\u5b57\u3092\u533a\u5225\u305b\u305a\u306b\u6bd4\u8f03\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(equalToIgnoringCase(\"HOGE\")));\n    }\n}\n```\n\n- \u5927\u6587\u5b57\u30fb\u5c0f\u6587\u5b57\u3092\u533a\u5225\u305b\u305a\u306b\u6587\u5b57\u5217\u3092\u6bd4\u8f03\u3059\u308b\u3002\n\n##equalToIgnoringWhiteSpace() : \u5927\u6587\u5b57\u30fb\u5c0f\u6587\u5b57\u30fb\u30d6\u30e9\u30f3\u30af\u6587\u5b57\u3092\u7121\u8996\u3057\u3066\u6bd4\u8f03\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"h o\u3000g\\te\", is(equalToIgnoringWhiteSpace(\"   H\\tO        G\u3000E   \")));\n    }\n}\n```\n\n- \u6b21\u306e\u3053\u3068\u3092\u7121\u8996\u3057\u3066\u6bd4\u8f03\u3059\u308b\u3002\n - \u5927\u6587\u5b57\u30fb\u5c0f\u6587\u5b57\u3002\n - \u30d6\u30e9\u30f3\u30af\u6587\u5b57\uff08\u534a\u89d2\u30fb\u5168\u89d2\u30b9\u30da\u30fc\u30b9\u3001\u30bf\u30d6\uff09\u306e\u9055\u3044\u3002\n - \u6587\u5b57\u5217\u306e\u9593\u306b\u3042\u308b\u30d6\u30e9\u30f3\u30af\u6587\u5b57\u306e\u6570\u3002\n - \u524d\u5f8c\u306e\u30d6\u30e9\u30f3\u30af\u6587\u5b57\u3002\n\n##isEmptyString() : \u7a7a\u6587\u5b57\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"\", isEmptyString());\n    }\n}\n```\n\n- \u6587\u5b57\u5217\u304c\u7a7a\u6587\u5b57\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##isEmptyOrNullString() : \u7a7a\u6587\u5b57\u307e\u305f\u306f null \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"\", isEmptyOrNullString());\n        assertThat(null, isEmptyOrNullString());\n    }\n}\n```\n\n- \u6587\u5b57\u5217\u304c\u7a7a\u6587\u5b57\u307e\u305f\u306f null \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##stringContainsInOrder() : \u6307\u5b9a\u3057\u305f\u9806\u5e8f\u3067\u6587\u5b57\u5217\u304c\u73fe\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"HogeFugaPiyo\", is(stringContainsInOrder(Arrays.asList(\"Hog\", \"eFug\", \"aPiyo\"))));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"HogeFugaPiyo\", is(stringContainsInOrder(Arrays.asList(\"Fuga\", \"Piyo\", \"Hoge\"))));\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u304c\u3001\u6307\u5b9a\u3057\u305f\u9806\u5e8f\u3067\u73fe\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n#\u6570\u5024\u6bd4\u8f03\u306b\u95a2\u4fc2\u3059\u308b Matcher\n\n##closeTo() : \u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u306e\u5024\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(0.5, is(closeTo(1.0, 0.5)));\n    }\n\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(0.4, is(closeTo(1.0, 0.5)));\n    }\n}\n```\n\n- \u7b2c\u4e00\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u5024\u3092\u57fa\u6e96\u3068\u3057\u3066\u3001\u7b2c\u4e8c\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u5024\u306e\u7bc4\u56f2\u306b\u6570\u5024\u304c\u53ce\u307e\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n- \u4e0a\u8a18\u4f8b\u306e\u5834\u5408\u3001\u5024\u304c `0.5 \uff5e 1.5` \u306a\u3089\u30c6\u30b9\u30c8\u304c\u6210\u529f\u3059\u308b\u3002\n- BigDecimal \u7248\u3082\u3042\u308b\u3002\n\n##greaterThan() : \u6307\u5b9a\u3057\u305f\u5024\u3088\u308a\u5927\u304d\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(10, is(greaterThan(9)));\n    }\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(10, is(greaterThan(10)));\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u5024\u3088\u308a\u5927\u304d\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##greaterThanOrEqualTo() : \u6307\u5b9a\u3057\u305f\u5024\u4ee5\u4e0a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(10, is(greaterThanOrEqualTo(10)));\n    }\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(10, is(greaterThanOrEqualTo(11)));\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u5024\u4ee5\u4e0a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##lessThan() : \u6307\u5b9a\u3057\u305f\u5024\u3088\u308a\u5c0f\u3055\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(10, is(lessThan(11)));\n    }\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(10, is(lessThan(10)));\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u5024\u3088\u308a\u5c0f\u3055\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##lessThanOrEqualTo() : \u6307\u5b9a\u3057\u305f\u5024\u4ee5\u4e0b\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(10, is(lessThanOrEqualTo(10)));\n    }\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(10, is(lessThanOrEqualTo(9)));\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u5024\u4ee5\u4e0b\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n\u6b63\u76f4\u3001\u3053\u306e\u8fba\u306f\u666e\u901a\u306b\u6bd4\u8f03\u6f14\u7b97\u5b50\u4f7f\u3063\u305f\u65b9\u304c\u8aad\u307f\u3084\u3059\u3044\u6c17\u304c\u3059\u308b\u3002\u3002\u3002\n\n#Collection\u30fbIterable\u306b\u95a2\u4fc2\u3059\u308b Matcher\n##contains() : \u5168\u3066\u306e\u8981\u7d20\u304c\u7b49\u3057\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    private static List<String> list = Arrays.asList(\"hoge\", \"fuga\", \"piyo\");\n    \n    public static class \u5024\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, is(contains(\"hoge\", \"fuga\", \"piyo\")));\n        }\n        \n        @Test\n        public void \u8981\u7d20\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(contains(\"hoge\", \"fuga\")));\n        }\n\n        @Test\n        public void \u542b\u307e\u308c\u308b\u8981\u7d20\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(contains(\"hoge\", \"fuga\", \"PIYO\")));\n        }\n\n        @Test\n        public void \u9806\u5e8f\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(contains(\"hoge\", \"piyo\", \"fuga\")));\n        }\n    }\n\n    public static class Matcher\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, is(contains(equalTo(\"hoge\"), containsString(\"ug\"), startsWith(\"pi\"))));\n        }\n        \n        @Test\n        public void \u8981\u7d20\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(contains(equalTo(\"hoge\"), containsString(\"ug\"))));\n        }\n\n        @Test\n        public void \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044Matcher\u304c\u542b\u307e\u308c\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(contains(equalTo(\"HOGE\"), containsString(\"ug\"), startsWith(\"pi\"))));\n        }\n        \n        @Test\n        public void \u9806\u5e8f\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(contains(containsString(\"ug\"), equalTo(\"hoge\"), startsWith(\"pi\"))));\n        }\n    }\n    \n}\n```\n\n- `Iterable` \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\uff08List \u3068\u304b\uff09\u306e\u8981\u7d20\u304c\u3001\u6307\u5b9a\u3057\u305f\u5185\u5bb9\u3067\u5b8c\u5168\u306b\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##containsInAnyOrder() : \u9806\u5e8f\u3092\u7121\u8996\u3057\u3066\u5168\u3066\u306e\u8981\u7d20\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    private static List<String> list = Arrays.asList(\"hoge\", \"fuga\", \"piyo\");\n    \n    public static class \u5024\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, is(containsInAnyOrder(\"hoge\", \"piyo\", \"fuga\")));\n        }\n        \n        @Test\n        public void \u8981\u7d20\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(containsInAnyOrder(\"hoge\", \"fuga\")));\n        }\n\n        @Test\n        public void \u542b\u307e\u308c\u308b\u8981\u7d20\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(containsInAnyOrder(\"hoge\", \"PIYO\", \"fuga\")));\n        }\n    }\n\n    public static class Matcher\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, is(containsInAnyOrder(containsString(\"ug\"), startsWith(\"pi\"), equalTo(\"hoge\"))));\n        }\n        \n        @Test\n        public void \u8981\u7d20\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(containsInAnyOrder(containsString(\"ug\"), equalTo(\"hoge\"))));\n        }\n\n        @Test\n        public void \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044Matcher\u304c\u542b\u307e\u308c\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, is(containsInAnyOrder(containsString(\"ug\"), equalTo(\"HOGE\"), startsWith(\"pi\"))));\n        }\n    }\n    \n}\n```\n\n- \u8981\u7d20\u306e\u9806\u756a\u306f\u7121\u8996\u3057\u3066\u3001 `Iterable` \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\uff08List \u3068\u304b\uff09\u306e\u8981\u7d20\u306b\u3001\u6307\u5b9a\u3057\u305f\u8981\u7d20\u304c\u5168\u3066\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##hasItem() : \u6307\u5b9a\u3057\u305f\u8981\u7d20\u3092\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    private static List<String> list = Arrays.asList(\"hoge\", \"fuga\", \"piyo\");\n    \n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasItem(\"hoge\"));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, hasItem(\"xxx\"));\n        }\n    }\n    \n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasItem(containsString(\"og\")));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, hasItem(containsString(\"xxx\")));\n        }\n    }\n}\n```\n\n- `Iterable` \u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u306e\u8981\u7d20\u306b\u3001\u6307\u5b9a\u3057\u305f\u5024\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##hasItems() : \u6307\u5b9a\u3057\u305f\u8981\u7d20\u3092\u5168\u3066\u542b\u3080\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    private static List<String> list = Arrays.asList(\"hoge\", \"fuga\", \"piyo\");\n    \n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasItems(\"hoge\", \"piyo\"));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, hasItems(\"xxx\"));\n        }\n    }\n    \n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasItems(containsString(\"og\"), endsWith(\"ga\")));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, hasItems(containsString(\"xxx\")));\n        }\n    }\n}\n```\n\n- `hasItem()` \u306e\u3001\u8981\u7d20\u3092\u8907\u6570\u6307\u5b9a\u3067\u304d\u308b\u7248\u3002\n\n##hasSize() : \u6307\u5b9a\u3057\u305f\u30b5\u30a4\u30ba\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    private static List<String> list = Arrays.asList(\"hoge\", \"fuga\", \"piyo\");\n    \n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasSize(3));\n        }\n    }\n    \n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasSize(lessThan(4)));\n        }\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30b5\u30a4\u30ba\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##empty() : \u7a7a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Collections;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(Collections.emptyList(), is(empty()));\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u7a7a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##emptyCollectionOf() : \u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u7a7a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Collections;\nimport java.util.List;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        List<String> list = Collections.emptyList();\n        assertThat(list, is(emptyCollectionOf(String.class)));\n    }\n}\n```\n\n- \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u3001\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u7a7a\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##emptyIterable() : \u7a7a\u306e Iterator \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Collections;\nimport java.util.Iterator;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        MyIterable iterable = new MyIterable();\n        assertThat(iterable, is(emptyIterable()));\n    }\n    \n    public static class MyIterable implements Iterable<MyIterable> {\n        @Override\n        public Iterator<MyIterable> iterator() {\n            return Collections.emptyIterator();\n        }\n    }\n}\n```\n\n- `Iterable` \u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u304c\u7a7a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##emptyIterableOf() : \u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u7a7a\u306e Iterator \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Collections;\nimport java.util.Iterator;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        MyIterable iterable = new MyIterable();\n        assertThat(iterable, is(emptyIterableOf(MyIterable.class)));\n    }\n    \n    public static class MyIterable implements Iterable<MyIterable> {\n        @Override\n        public Iterator<MyIterable> iterator() {\n            return Collections.emptyIterator();\n        }\n    }\n}\n```\n\n- `Iterable` \u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u304c\u3001\u6307\u5b9a\u3057\u305f\u30af\u30e9\u30b9\u306e\u7a7a\u306e Iterator \u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n#Map \u306b\u95a2\u4fc2\u3059\u308b Matcher\n##hasEntry() : \u6307\u5b9a\u3057\u305f\u30a8\u30f3\u30c8\u30ea\u3092\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    private static Map<String, String> map = new HashMap<>();\n    \n    static {\n        map.put(\"hoge\", \"HOGE\");\n        map.put(\"fuga\", \"FUGA\");\n        map.put(\"piyo\", \"PIYO\");\n    }\n    \n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(map, hasEntry(\"hoge\", \"HOGE\"));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(map, hasEntry(\"xxxx\", \"HOGE\"));\n        }\n    }\n    \n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(map, hasEntry(containsString(\"og\"), endsWith(\"E\")));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(map, hasEntry(containsString(\"xx\"), endsWith(\"E\")));\n        }\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u30a8\u30f3\u30c8\u30ea\u304c\u30de\u30c3\u30d7\u306b\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##hasKey() : \u6307\u5b9a\u3057\u305f\u30ad\u30fc\u3092\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    private static Map<String, String> map = new HashMap<>();\n    \n    static {\n        map.put(\"hoge\", \"HOGE\");\n        map.put(\"fuga\", \"FUGA\");\n        map.put(\"piyo\", \"PIYO\");\n    }\n    \n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(map, hasKey(\"hoge\"));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(map, hasKey(\"xxxx\"));\n        }\n    }\n    \n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(map, hasKey(containsString(\"og\")));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(map, hasKey(containsString(\"xx\")));\n        }\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u30ad\u30fc\u3092\u30de\u30c3\u30d7\u304c\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##hasValue() : \u6307\u5b9a\u3057\u305f\u5024\u3092\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    private static Map<String, String> map = new HashMap<>();\n    \n    static {\n        map.put(\"hoge\", \"HOGE\");\n        map.put(\"fuga\", \"FUGA\");\n        map.put(\"piyo\", \"PIYO\");\n    }\n    \n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(map, hasValue(\"HOGE\"));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(map, hasValue(\"xxxx\"));\n        }\n    }\n    \n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(map, hasValue(endsWith(\"E\")));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(map, hasValue(endsWith(\"xxx\")));\n        }\n    }\n}\n```\n\n#JavaBeans \u306b\u95a2\u4fc2\u3059\u308b Matcher\n##hasProperty() : \u6307\u5b9a\u3057\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:Hoge.java\npackage sample.hamcrest;\n\npublic class Hoge {\n    private int value;\n\n    public Hoge(int value) {\n        this.value = value;\n    }\n\n    public int getValue() {\n        return this.value;\n    }\n\n    public void setValue(int value) {\n        this.value = value;\n    }\n}\n```\n\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    private static Hoge hoge = new Hoge(10);\n    \n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(hoge, hasProperty(\"value\"));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(hoge, hasProperty(\"xxx\"));\n        }\n    }\n    \n    public static class Matcher\u3092\u4f7f\u3063\u3066\u5024\u3082\u30c1\u30a7\u30c3\u30af\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(hoge, hasProperty(\"value\", greaterThan(9)));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(hoge, hasProperty(\"value\", equalTo(11)));\n        }\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u540d\u524d\u306e JavaBeans \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u3064\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n- Matcher \u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u5024\u3082\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n- \u6307\u5b9a\u3057\u305f\u5024\u304c\u3001\u30de\u30c3\u30d7\u306e\u30d0\u30ea\u30e5\u30fc\u306b\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##samePropertyValuesAs() : \u5168\u3066\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u7b49\u3057\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        Hoge one = new Hoge(10, \"one\");\n        Hoge other = new Hoge(10, \"one\");\n        \n        assertThat(one, is(samePropertyValuesAs(other)));\n    }\n\n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        Hoge one = new Hoge(10, \"one\");\n        Hoge other = new Hoge(99, \"other\");\n        \n        assertThat(one, is(samePropertyValuesAs(other)));\n    }\n    \n    public static class Hoge {\n        private int i;\n        private String value;\n        \n        public Hoge(int i, String value) {\n            this.i = i;\n            this.value = value;\n        }\n        \n        public int getI() {\n            return this.i;\n        }\n        public void setI(int i) {\n            this.i = i;\n        }\n        public String getValue() {\n            return this.value;\n        }\n        public void setValue(String value) {\n            this.value = value;\n        }\n    }\n}\n```\n\n- JavaBeans \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6bd4\u8f03\u3059\u308b\u3002\n\n#Matcher \u3092\u7d44\u307f\u5408\u308f\u305b\u308b\n##allOf() : Matcher \u3092 AND \u6761\u4ef6\u3067\u7d50\u5408\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(allOf(startsWith(\"h\"), containsString(\"og\"), endsWith(\"e\"))));\n    }\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"hoge\", is(allOf(startsWith(\"h\"), containsString(\"xx\"), endsWith(\"e\"))));\n    }\n}\n```\n\n- \u5f15\u6570\u3067\u6e21\u3057\u305f Matcher \u304c\u5168\u3066\u6e80\u305f\u3055\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##anyOf() : Matcher \u3092 OR \u6761\u4ef6\u3067\u7d50\u5408\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(anyOf(startsWith(\"h\"), endsWith(\"xxx\"))));\n    }\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"yyyy\", is(anyOf(startsWith(\"h\"), endsWith(\"xxx\"))));\n    }\n}\n```\n\n- \u5f15\u6570\u3067\u6e21\u3057\u305f Matcher \u306e\u5185\u3001\u6700\u4f4e\u3067\u3082\uff11\u3064\u306f\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n#\u914d\u5217\u306b\u95a2\u4fc2\u3059\u308b Matcher\n\n##array() : \u914d\u5217\u306e\u5404\u8981\u7d20\u3092 Matcher \u3067\u691c\u8a3c\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n        assertThat(array, is(array(equalTo(\"hoge\"), startsWith(\"f\"), endsWith(\"o\"))));\n    }\n    \n    @Test\n    public void \u8981\u7d20\u6570\u306b\u5bfe\u3057\u3066Matcher\u306e\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n        assertThat(array, is(array(equalTo(\"hoge\"), startsWith(\"f\"))));\n    }\n    \n    @Test\n    public void \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044Matcher\u304c\u3042\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n        assertThat(array, is(array(equalTo(\"hoge\"), startsWith(\"f\"), equalTo(\"PIYO\"))));\n    }\n}\n```\n\n- \u914d\u5217\uff11\u3064\u305a\u3064\u306b\u5bfe\u3057\u3066 Matcher \u3092\u9069\u7528\u3057\u3001\u5168\u3066\u306e Matcher \u304c\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##arrayContaining() : \u6307\u5b9a\u3057\u305f\u8981\u7d20\u3068\u914d\u5217\u306e\u8981\u7d20\u304c\u5168\u3066\u7b49\u3057\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    public static class \u5024\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContaining(\"hoge\", \"fuga\", \"piyo\")));\n        }\n        \n        @Test\n        public void \u8981\u7d20\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContaining(\"hoge\", \"fuga\")));\n        }\n        \n        @Test\n        public void \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044Matcher\u304c\u3042\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContaining(\"HOGE\", \"fuga\", \"piyo\")));\n        }\n    }\n    \n    public static class Matcher\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContaining(equalTo(\"hoge\"), containsString(\"ug\"), endsWith(\"o\"))));\n        }\n        \n        @Test\n        public void \u8981\u7d20\u6570\u304c\u7570\u306a\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContaining(equalTo(\"hoge\"), containsString(\"ug\"))));\n        }\n        \n        @Test\n        public void \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044Matcher\u304c\u3042\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContaining(equalTo(\"hoge\"), containsString(\"ug\"), endsWith(\"xxx\"))));\n        }\n    }\n}\n```\n\n- \u914d\u5217\u306e\u4e2d\u8eab\u304c\u3001\u5f15\u6570\u3067\u6e21\u3057\u305f\u5024\uff08Matcher\uff09\u3068\u5b8c\u5168\u306b\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##arrayContainingInAnyOrder() : \u9806\u5e8f\u3092\u7121\u8996\u3057\u3066\u3001\u6307\u5b9a\u3057\u305f\u8981\u7d20\u304c\u5168\u3066\u914d\u5217\u306b\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    public static class \u5024\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContainingInAnyOrder(\"hoge\", \"piyo\", \"fuga\")));\n        }\n        \n        @Test\n        public void \u6307\u5b9a\u3057\u305f\u8981\u7d20\u304c\u5168\u3066\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContainingInAnyOrder(\"hoge\", \"piyo\")));\n        }\n    }\n    \n    public static class Matcher\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContainingInAnyOrder(equalTo(\"piyo\"), equalTo(\"hoge\"), endsWith(\"a\"))));\n        }\n        \n        @Test\n        public void fuga\u306b\u30de\u30c3\u30c1\u3059\u308bMatcher\u304c\u5b58\u5728\u3057\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayContainingInAnyOrder(equalTo(\"piyo\"), equalTo(\"hoge\"), endsWith(\"yo\"))));\n        }\n    }\n}\n```\n\n- \u8981\u7d20\u306e\u9806\u756a\u306f\u7121\u8996\u3057\u3066\u3001\u914d\u5217\u306e\u8981\u7d20\u306b\u6307\u5b9a\u3057\u305f\u5024\u304c\u5168\u3066\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##arrayWithSize() : \u914d\u5217\u306e\u30b5\u30a4\u30ba\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    public static class \u5024\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayWithSize(3)));\n        }\n        \n        @Test\n        public void \u30b5\u30a4\u30ba\u304c\u7570\u308b\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayWithSize(2)));\n        }\n    }\n\n    public static class Matcher\u3092\u6e21\u3059 {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayWithSize(lessThan(4))));\n        }\n        \n        @Test\n        public void \u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u306e\u3067_\u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            String[] array = {\"hoge\", \"fuga\", \"piyo\"};\n            assertThat(array, is(arrayWithSize(greaterThan(3))));\n        }\n    }\n}\n```\n\n- \u914d\u5217\u306e\u30b5\u30a4\u30ba\u304c\u6307\u5b9a\u3057\u305f\u5024\u3068\u540c\u3058\u3067\u3042\u308b\u3053\u3068\uff08Matcher \u306e\u6761\u4ef6\u3092\u6e80\u305f\u3059\u3053\u3068\uff09\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##emptyArray() : \u914d\u5217\u304c\u7a7a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(new String[] {}, is(emptyArray()));\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u914d\u5217\u304c\u7a7a\u3067\u3042\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##hasItemInArray() : \u914d\u5217\u306e\u4e2d\u306b\u6307\u5b9a\u3057\u305f\u5024\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\nimport java.util.List;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    private static String[] list = {\"hoge\", \"fuga\", \"piyo\"};\n    \n    public static class \u5024\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasItemInArray(\"hoge\"));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, hasItemInArray(\"xxx\"));\n        }\n    }\n    \n    public static class Matcher\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(list, hasItemInArray(containsString(\"og\")));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(list, hasItemInArray(containsString(\"xxx\")));\n        }\n    }\n}\n```\n\n- \u914d\u5217\u306e\u8981\u7d20\u306b\u3001\u6307\u5b9a\u3057\u305f\u5024\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n#\u305d\u306e\u4ed6\n##describedAs() : \u30c6\u30b9\u30c8\u306b\u5931\u6557\u3057\u305f\u3068\u304d\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4e0a\u66f8\u304d\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    @Test\n    public void \u30c6\u30b9\u30c8\uff11() {\n        assertThat(\"hoge\", is(equalTo(\"HOGE\")));\n    }\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\uff12() {\n        assertThat(\"hoge\", is(describedAs(\"HOGE [%0, %1]\", equalTo(\"HOGE\"), \"param1\", \"param2\")));\n    }\n}\n```\n\n```text:\u30c6\u30b9\u30c8\uff11\u306e\u5b9f\u884c\u7d50\u679c\njava.lang.AssertionError: \nExpected: is \"HOGE\"\n     but: was \"hoge\"\n```\n\n```text:\u30c6\u30b9\u30c8\uff12\u306e\u5b9f\u884c\u7d50\u679c\njava.lang.AssertionError: \nExpected: is HOGE [\"param1\", \"param2\"]\n     but: was \"hoge\"\n```\n\n- \u30c6\u30b9\u30c8\u304c\u5931\u6557\u3057\u305f\u3068\u304d\u306e\u8aac\u660e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3001\u6307\u5b9a\u3057\u305f\u3082\u306e\u306b\u7f6e\u304d\u63db\u3048\u308b\u3002\n- `%0` \u3068\u3044\u3046\u5f62\u3067\u57cb\u3081\u8fbc\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4f7f\u3048\u308b\u3002\n\n##isIn() : \u914d\u5217\u304b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u305f\u8981\u7d20\u306e\u3044\u305a\u308c\u304b\u306b\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\n\nimport org.junit.Test;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.runner.RunWith;\n\n@RunWith(Enclosed.class)\npublic class HamcrestTest {\n    \n    public static class \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(\"hoge\", isIn(Arrays.asList(\"hoge\", \"fuga\", \"piyo\")));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(\"xxxx\", isIn(Arrays.asList(\"hoge\", \"fuga\", \"piyo\")));\n        }\n    }\n    \n    public static class \u914d\u5217\u3092\u6307\u5b9a\u3059\u308b {\n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n            assertThat(\"hoge\", isIn(new String[] {\"hoge\", \"fuga\", \"piyo\"}));\n        }\n        \n        @Test\n        public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n            assertThat(\"xxxx\", isIn(new String[] {\"hoge\", \"fuga\", \"piyo\"}));\n        }\n    }\n}\n```\n\n- \u6307\u5b9a\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\uff08\u914d\u5217\uff09\u306e\u4e2d\u306b\u3001 `assertThat()` \u306e\u7b2c\u4e00\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u8981\u7d20\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##isOneOf() : \u53ef\u5909\u9577\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u5024\u306e\u3044\u305a\u308c\u304b\u306b\u4e00\u81f4\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", isOneOf(\"hoge\", \"fuga\", \"piyo\"));\n    }\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u5931\u6557\u3059\u308b() {\n        assertThat(\"xxxx\", isOneOf(\"hoge\", \"fuga\", \"piyo\"));\n    }\n}\n```\n\n- \u53ef\u5909\u9577\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u5024\u306e\u4e2d\u306b\u3001 `assertThat()` \u306e\u7b2c\u4e00\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u8981\u7d20\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\n##anything() : \u5168\u3066\u306e\u5024\u306b\u30de\u30c3\u30c1\u3059\u308b\n```java:\npackage sample.hamcrest;\n\nimport static org.hamcrest.MatcherAssert.*;\nimport static org.hamcrest.Matchers.*;\n\nimport java.util.Arrays;\n\nimport org.junit.Test;\n\npublic class HamcrestTest {\n    \n    @Test\n    public void \u30c6\u30b9\u30c8\u306f\u6210\u529f\u3059\u308b() {\n        assertThat(\"hoge\", is(anything()));\n        assertThat(\"fuga\", is(anything()));\n        assertThat(123,    is(anything()));\n        assertThat(Arrays.asList(\"a\", \"b\", \"c\"), is(anything()));\n    }\n}\n```\n\n- \u5168\u3066\u306e\u5024\u306b\u30de\u30c3\u30c1\u3059\u308b\u3002\n"}