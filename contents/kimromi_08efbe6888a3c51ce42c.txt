{"tags": ["Groovy"], "context": " More than 1 year has passed since last update.\n\n\u30af\u30ed\u30fc\u30b8\u30e3\u5185\u3067continue\u3001break\u306f\u4f7f\u3048\u306a\u3044\nGroovy\u3067\u306feach\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u306e\u30a4\u30c6\u30ec\u30fc\u30c8\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u5185\u3067continue\u3001break\u304c\u4f7f\u3048\u307e\u305b\u3093\u3002\n\u3053\u3093\u306a\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n(1..5).each {\n    if (it == 3) continue\n    print it\n}\n\n// => the continue statement is only allowed inside loops\n\n\u3067\u306f\u3069\u3046\u3059\u308b\u304b\uff1f\n\ncontinue\neach\u30e1\u30bd\u30c3\u30c9\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u5185\u3067return\u3092\u4f7f\u3046\u3002\nreturn\u3092\u4f7f\u3063\u3066\u3082\u30e1\u30bd\u30c3\u30c9\u7d42\u4e86\u3068\u306f\u306a\u3089\u305a\u6b21\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u306b\u3044\u304d\u307e\u3059\u3002\n(1..5).each {\n    if (it == 3) return\n    print it\n}\n\n// => 1245\n\nGroovy\u306eeach\u5b9f\u88c5\nprivate static <T> Iterator<T> each(Iterator<T> iter, Closure closure) {\n    while (iter.hasNext()) {\n        Object arg = iter.next();\n        closure.call(arg);\n    }\n    return iter;\n}\n\n\u30af\u30ed\u30fc\u30b8\u30e3\u3067return\u3057\u3066\u3082closure.call(arg);\u304c\u7d42\u4e86\u3059\u308b\u3060\u3051\u306a\u306e\u3067while\u306f\u7d42\u308f\u3089\u305a\u56de\u308a\u7d9a\u3051\u307e\u3059\u3002\n\nbreak\nfind\u30e1\u30bd\u30c3\u30c9\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u5185\u3067return true\u3092\u4f7f\u3046\u3002\nfind\u30e1\u30bd\u30c3\u30c9\u306ftrue\u304c\u8fd4\u3063\u305f\u6642\u70b9\u3067\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u7d42\u4e86\u3059\u308b\u306e\u3067\u305d\u308c\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n(1..5).find {\n    if (it == 3) return true\n    print it\n}\n\n// => 12\n\nGroovy\u306efind\u5b9f\u88c5\npublic static Object find(Object self, Closure closure) {\n    BooleanClosureWrapper bcw = new BooleanClosureWrapper(closure);\n    for (Iterator iter = InvokerHelper.asIterator(self); iter.hasNext();) {\n        Object value = iter.next();\n        if (bcw.call(value)) {\n            return value;\n        }\n    }\n    return null;\n}\n\nBooleanClosureWrapper\u306fboolean\u3092\u8fd4\u3059\u305f\u3060\u306eClosure\u306e\u30e9\u30c3\u30d1\u30fc\u3067\u3059\u3002\n\u30af\u30ed\u30fc\u30b8\u30e3\u3067return true\u3059\u308b\u3068bcw.call(value)\u304ctrue\u306b\u306a\u3063\u3066\nreturn value;\u3067\u30e1\u30bd\u30c3\u30c9\u7d42\u4e86\u3057\u307e\u3059\u3002\n## \u30af\u30ed\u30fc\u30b8\u30e3\u5185\u3067continue\u3001break\u306f\u4f7f\u3048\u306a\u3044\n\nGroovy\u3067\u306feach\u30e1\u30bd\u30c3\u30c9\u306a\u3069\u306e\u30a4\u30c6\u30ec\u30fc\u30c8\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u5185\u3067continue\u3001break\u304c\u4f7f\u3048\u307e\u305b\u3093\u3002\n\u3053\u3093\u306a\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n```\n(1..5).each {\n    if (it == 3) continue\n    print it\n}\n\n// => the continue statement is only allowed inside loops\n```\n\n\u3067\u306f\u3069\u3046\u3059\u308b\u304b\uff1f\n\n## continue\n\neach\u30e1\u30bd\u30c3\u30c9\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u5185\u3067`return`\u3092\u4f7f\u3046\u3002\n`return`\u3092\u4f7f\u3063\u3066\u3082\u30e1\u30bd\u30c3\u30c9\u7d42\u4e86\u3068\u306f\u306a\u3089\u305a\u6b21\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u306b\u3044\u304d\u307e\u3059\u3002\n\n```\n(1..5).each {\n    if (it == 3) return\n    print it\n}\n\n// => 1245\n```\n\nGroovy\u306eeach\u5b9f\u88c5\n\n```\nprivate static <T> Iterator<T> each(Iterator<T> iter, Closure closure) {\n    while (iter.hasNext()) {\n        Object arg = iter.next();\n        closure.call(arg);\n    }\n    return iter;\n}\n```\n\n\u30af\u30ed\u30fc\u30b8\u30e3\u3067`return`\u3057\u3066\u3082`closure.call(arg);`\u304c\u7d42\u4e86\u3059\u308b\u3060\u3051\u306a\u306e\u3067while\u306f\u7d42\u308f\u3089\u305a\u56de\u308a\u7d9a\u3051\u307e\u3059\u3002\n\n## break\n\nfind\u30e1\u30bd\u30c3\u30c9\u306e\u30af\u30ed\u30fc\u30b8\u30e3\u5185\u3067`return true`\u3092\u4f7f\u3046\u3002\nfind\u30e1\u30bd\u30c3\u30c9\u306ftrue\u304c\u8fd4\u3063\u305f\u6642\u70b9\u3067\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u7d42\u4e86\u3059\u308b\u306e\u3067\u305d\u308c\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\n(1..5).find {\n    if (it == 3) return true\n    print it\n}\n\n// => 12\n```\n\nGroovy\u306efind\u5b9f\u88c5\n\n```\npublic static Object find(Object self, Closure closure) {\n    BooleanClosureWrapper bcw = new BooleanClosureWrapper(closure);\n    for (Iterator iter = InvokerHelper.asIterator(self); iter.hasNext();) {\n        Object value = iter.next();\n        if (bcw.call(value)) {\n            return value;\n        }\n    }\n    return null;\n}\n```\n\nBooleanClosureWrapper\u306fboolean\u3092\u8fd4\u3059\u305f\u3060\u306eClosure\u306e\u30e9\u30c3\u30d1\u30fc\u3067\u3059\u3002\n\u30af\u30ed\u30fc\u30b8\u30e3\u3067`return true`\u3059\u308b\u3068`bcw.call(value)`\u304ctrue\u306b\u306a\u3063\u3066\n`return value;`\u3067\u30e1\u30bd\u30c3\u30c9\u7d42\u4e86\u3057\u307e\u3059\u3002\n"}