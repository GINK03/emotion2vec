{"context": " More than 1 year has passed since last update.\n\n\u554f\u984c\u63d0\u8d77\n\u6d41\u4f53\u89e3\u6790\u3084\u69cb\u9020\u89e3\u6790\u306a\u3069\u306e\u6570\u5024\u8a08\u7b97\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u901f\u5ea6\uff08\u6b63\u3057\u304f\u306f\u3001\u901f\u3055\uff09\u306a\u3069\u306e\u7269\u7406\u91cf\u3092\u8a08\u7b97\u3059\u308b\u30b3\u30fc\u30c9\u3092\u591a\u304f\u66f8\u304d\u307e\u3059\u3002\ndouble distance = 100.0; // \u8ddd\u96e2\ndouble time = 20.0; // \u6642\u9593\n\n/*\n * \u3044\u308d\u3044\u308d\u306a\u51e6\u7406\n*/\n\n// \u901f\u5ea6\u3092\u8a08\u7b97\ndouble velocity = distance / time;\n\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u306f\u3001\u7279\u306b\u52d5\u4f5c\u3068\u3057\u3066\u306f\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\u305f\u3060\u3057\u3001\u30d0\u30b0\u3092\u751f\u307f\u3084\u3059\u3044\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\ndouble velocity = time / distance; // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306f\u306a\u3089\u306a\u3044\u3002\n\n\u305d\u3093\u306a\u99ac\u9e7f\u306a\u3053\u3068\u306f\u3057\u306a\u3044\u3068\u601d\u308f\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3053\u306e\u30b3\u30fc\u30c9\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3057\u3001\u30b3\u30fc\u30c9\u304c\u9577\u3051\u308c\u3070\u9577\u3044\u307b\u3069\u898b\u3064\u3051\u3065\u3089\u3044\u30df\u30b9\u3067\u3059\u3002\u307e\u305f\u3001\u6570\u5024\u8a08\u7b97\u3067\u591a\u304f\u4f7f\u7528\u3055\u308c\u3066\u3044\u308bC\u8a00\u8a9e\u3084Fortran\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u65b9\u306e\u591a\u304f\u306f\u3001\u5909\u6570\u540d\u3092\u306a\u308b\u3079\u304f\u77ed\u304f\u3057\u305f\u3044\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\nC\u8a00\u8a9e\ndouble d = 100.0; // \u8ddd\u96e2\ndouble t = 20.0; // \u6642\u9593\ndouble v = d / t; // \u901f\u5ea6\n\n\n\nFortran\ndouble precision :: d = 100.0 ! \u8ddd\u96e2\ndouble precision :: t = 20.0 ! \u6642\u9593\ndouble precision v ! \u901f\u5ea6\nv = d / t\n\n\n\u898b\u305f\u76ee\u306f\u3059\u3063\u304d\u308a\u3057\u3066\u3044\u3066\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u3082\u3057v = t / d\u3068\u3057\u3066\u3057\u307e\u3063\u305f\u308a\u3001\u4f55\u767e\u884c\u3082\u306e\u30b3\u30fc\u30c9\u4e2d\u306bd\u3084t\u304c\u4f55\u3092\u8868\u3057\u3066\u3044\u308b\u306e\u304b\u3001\u306a\u3093\u3066\u3053\u3068\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u6839\u672c\u7684\u306a\u539f\u56e0\u306f\u4f55\u3067\u3057\u3087\u3046\u304b\uff1f\n\u8ddd\u96e2\u3084\u6642\u9593\u306a\u3069\u306e\u6b21\u5143\u306e\u9055\u3046\u7269\u7406\u91cf\u3092\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e2d\u3067\u4e00\u3064\u306e\u578b\uff08\u6d6e\u52d5\u5c0f\u6570\u70b9\uff09\u3067\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u306b\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u3088\u3046\u306a\u554f\u984c\u3092\u5c11\u304f\u3059\u308b\u306b\u306f\u3001\u578b\u91cd\u8996\u306e\u8a00\u8a9e\u3067\u5b9f\u88c5\u3059\u308b\u306e\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u578b\u91cd\u8996\u306e\u8a00\u8a9e\u3067C\uff0b\uff0b\u304c\u4e00\u756a\u3053\u306e\u554f\u984c\u306b\u9069\u3057\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\uff08\u81ea\u5206\u304cC\uff0b\uff0b\u30e6\u30fc\u30b6\u30fc\u3060\u304b\u3089\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c...\uff09\u3002\u6b21\u306b\u305d\u306eC\uff0b\uff0b\u3067\u7269\u7406\u91cf\u3092\u5b9a\u7fa9\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u7269\u7406\u91cf\u30af\u30e9\u30b9\n\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u529b\u5b66\u306e\u57fa\u672c\u91cf\u3001\u9577\u3055\u3001\u8cea\u91cf\u3001\u6642\u9593\u306b\u5bfe\u3059\u308b\u7269\u7406\u91cf\u306e\u30af\u30e9\u30b9\uff08scalar\uff09\u306e\u5ba3\u8a00\u306e\u307f\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067C++\u306e2\u3064\u306e\u91cd\u8981\u306a\u6a5f\u80fd\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\ntemplate\n\u6f14\u7b97\u5b50\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\n\ntemplate<int Length, int Mass, int Time>\nclass scalar {\npublic:\n    scalar();\n    scalar();\n    explicit scalar(const double x);\n    ~scalar();\n\n    const double& value() const;\n\n    scalar& operator=(const scalar& rhs);\n    scalar& operator+=(const scalar& rhs);\n    scalar& operator-=(const scalar& rhs);\n    scalar& operator*=(double alpha);\n    scalar& operator/=(double alpha);\n\nprivate:\n    double x_;\n};\n\ntemplate<int Length, int Mass, int Time>\nscalar<Length, Mass, Time> operator+(const scalar<Length, Mass, Time>& lhs,\n        const scalar<Length, Mass, Time>& rhs);\n\ntemplate<int Length, int Mass, int Time>\nscalar<Length, Mass, Time> operator-(const scalar<Length, Mass, Time>& lhs,\n        const scalar<Length, Mass, Time>& rhs);\n\ntemplate<int LengthL, int MassL, int TimeL, int LengthR, int MassR, int TimeR>\nscalar<LengthL + LengthR, MassL + MassR, TimeL + TimeR> operator*(\n        const scalar<LengthL, MassL, TimeR>& lhs,\n        const scalar<LengthR, MassR, TimeR>& rhs);\n\ntemplate<int LengthL, int MassL, int TimeL, int LengthR, int MassR, int TimeR>\nscalar<LengthL - LengthR, MassL - MassR, TimeL - TimeR> operator/(\n        const scalar<LengthL, MassL, TimeR>& lhs,\n        const scalar<LengthR, MassR, TimeR>& rhs);\n\n// \u4ed6\u306e\u6f14\u7b97\u5b50 ==, !=, <, <=, >, >= \n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u7269\u7406\u91cf\u30af\u30e9\u30b9\u3092\u9069\u7528\u3057\u3066\u901f\u5ea6\uff08\u901f\u3055\uff09\u3092\u7b97\u51fa\u3059\u308b\u5192\u982d\u3068\u540c\u3058\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\ntypedef scalar<1, 0, 0> length;\ntypedef scalar<0, 0, 1> time;\ntypedef scalar<1, 0, -1> velocity;\n\nlength d(100.0);\ntime t(20.0);\n\nvelocity v = d / t;\n// velocity v = t / d; // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u3063\u3066\u591a\u7a2e\u306e\u7269\u7406\u91cf\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u305f\u3081\u306bvelocity v = t / d;\u306e\u3088\u3046\u306a\u578b\u306e\u6574\u5408\u6027\u304c\u53d6\u308c\u306a\u3044\u30b3\u30fc\u30c9\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u30b3\u30fc\u30c9\u30a8\u30e9\u30fc\u306f\u3001\u53ef\u80fd\u306a\u9650\u308a\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u70b9\u3067\u767a\u898b\u3057\u305f\u3044\u3082\u306e\u3067\u3059\u3002\n\ntypedef\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u306f\u82e5\u5e72\u53ef\u8aad\u6027\u304c\u843d\u3061\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001typedef\u3067\u5206\u304b\u308a\u6613\u3044\u540d\u79f0\u3092\u4ed8\u3051\u308b\u3068\u5927\u5206\u8aad\u307f\u3084\u3059\u304f\u3001\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3082\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u578b\u5225\u540d\ntypedef scalar<1, 0, 0> length;\ntypedef scalar<0, 1, 0> mass;\ntypedef scalar<0, 0, 1> time;\n\ntypedef scalar<2, 0, 0> area;\ntypedef scalar<3, 0, 0> volume;\ntypedef scalar<-3, 1, 0> density;\ntypedef scalar<1, 0, -1> velocity;\ntypedef scalar<1, 1, -1> momentum;\ntypedef scalar<-1, 1, -2> pressure;\n\n\n\n\u6570\u5f0f\n\u6f14\u7b97\u5b50\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306b\u3088\u308a\u3001int\u3084double\u306a\u3069\u306e\u6570\u5024\u578b\u306e\u6f14\u7b97\u5f0f\u3068\u540c\u69d8\u306b\u6570\u5f0f\u3092\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002\n\n\u6570\u5f0f\u30b3\u30fc\u30c9\nvelocity v = d / t;\nvelocity u = 2.0 * v;\nvelocity w = u + v;\n\nmass m(1.0);\npressure dp = 0.5 * m * v *v;\n\n\n\n\u914d\u5217\n\u6570\u5024\u8a08\u7b97\u3067\u306f\u96e2\u6563\u7684\u306b\u89e3\u304f\u5834\u5408\u304c\u591a\u304f\u3001\u305d\u306e\u305f\u3081\u914d\u5217\u3092\u5229\u7528\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3057\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u4e0a\u8a18\u3067\u5b9f\u88c5\u3057\u305f\u7269\u7406\u91cf\u30af\u30e9\u30b9\u3082\u540c\u69d8\u306b\u914d\u5217\u3067\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nscalar<1, 0, 0> x[10];\nscalar<0, 1, 0>* y = new scalar<0, 1, 0>[10];\n\n# \u554f\u984c\u63d0\u8d77\n\n\u6d41\u4f53\u89e3\u6790\u3084\u69cb\u9020\u89e3\u6790\u306a\u3069\u306e\u6570\u5024\u8a08\u7b97\u3067\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u901f\u5ea6\uff08\u6b63\u3057\u304f\u306f\u3001\u901f\u3055\uff09\u306a\u3069\u306e\u7269\u7406\u91cf\u3092\u8a08\u7b97\u3059\u308b\u30b3\u30fc\u30c9\u3092\u591a\u304f\u66f8\u304d\u307e\u3059\u3002\n\n```cpp\ndouble distance = 100.0; // \u8ddd\u96e2\ndouble time = 20.0; // \u6642\u9593\n\n/*\n * \u3044\u308d\u3044\u308d\u306a\u51e6\u7406\n*/\n\n// \u901f\u5ea6\u3092\u8a08\u7b97\ndouble velocity = distance / time;\n```\n\u4e0a\u8a18\u30b3\u30fc\u30c9\u306f\u3001\u7279\u306b\u52d5\u4f5c\u3068\u3057\u3066\u306f\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\u305f\u3060\u3057\u3001**\u30d0\u30b0**\u3092\u751f\u307f\u3084\u3059\u3044\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n```cpp\ndouble velocity = time / distance; // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306f\u306a\u3089\u306a\u3044\u3002\n```\n\n\u305d\u3093\u306a\u99ac\u9e7f\u306a\u3053\u3068\u306f\u3057\u306a\u3044\u3068\u601d\u308f\u308c\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3053\u306e\u30b3\u30fc\u30c9\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306f\u306a\u308a\u307e\u305b\u3093\u3057\u3001\u30b3\u30fc\u30c9\u304c\u9577\u3051\u308c\u3070\u9577\u3044\u307b\u3069\u898b\u3064\u3051\u3065\u3089\u3044\u30df\u30b9\u3067\u3059\u3002\u307e\u305f\u3001\u6570\u5024\u8a08\u7b97\u3067\u591a\u304f\u4f7f\u7528\u3055\u308c\u3066\u3044\u308bC\u8a00\u8a9e\u3084Fortran\u306e\u30e6\u30fc\u30b6\u30fc\u306e\u65b9\u306e\u591a\u304f\u306f\u3001\u5909\u6570\u540d\u3092\u306a\u308b\u3079\u304f\u77ed\u304f\u3057\u305f\u3044\u3068\u8003\u3048\u3066\u3044\u307e\u3059\u3002\n\n```c:C\u8a00\u8a9e\ndouble d = 100.0; // \u8ddd\u96e2\ndouble t = 20.0; // \u6642\u9593\ndouble v = d / t; // \u901f\u5ea6\n```\n\n```fortran:Fortran\ndouble precision :: d = 100.0 ! \u8ddd\u96e2\ndouble precision :: t = 20.0 ! \u6642\u9593\ndouble precision v ! \u901f\u5ea6\nv = d / t\n```\n\n\u898b\u305f\u76ee\u306f\u3059\u3063\u304d\u308a\u3057\u3066\u3044\u3066\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u3082\u3057`v = t / d`\u3068\u3057\u3066\u3057\u307e\u3063\u305f\u308a\u3001\u4f55\u767e\u884c\u3082\u306e\u30b3\u30fc\u30c9\u4e2d\u306b`d`\u3084`t`\u304c\u4f55\u3092\u8868\u3057\u3066\u3044\u308b\u306e\u304b\u3001\u306a\u3093\u3066\u3053\u3068\u3082\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e\u6839\u672c\u7684\u306a\u539f\u56e0\u306f\u4f55\u3067\u3057\u3087\u3046\u304b\uff1f\n\n**\u8ddd\u96e2\u3084\u6642\u9593\u306a\u3069\u306e\u6b21\u5143\u306e\u9055\u3046\u7269\u7406\u91cf\u3092\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e2d\u3067\u4e00\u3064\u306e\u578b\uff08\u6d6e\u52d5\u5c0f\u6570\u70b9\uff09\u3067\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u306b\u3042\u308a\u307e\u3059\u3002**\n\n\u3053\u306e\u3088\u3046\u306a\u554f\u984c\u3092\u5c11\u304f\u3059\u308b\u306b\u306f\u3001\u578b\u91cd\u8996\u306e\u8a00\u8a9e\u3067\u5b9f\u88c5\u3059\u308b\u306e\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u578b\u91cd\u8996\u306e\u8a00\u8a9e\u3067C\uff0b\uff0b\u304c\u4e00\u756a\u3053\u306e\u554f\u984c\u306b\u9069\u3057\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\uff08\u81ea\u5206\u304cC\uff0b\uff0b\u30e6\u30fc\u30b6\u30fc\u3060\u304b\u3089\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c...\uff09\u3002\u6b21\u306b\u305d\u306eC\uff0b\uff0b\u3067\u7269\u7406\u91cf\u3092\u5b9a\u7fa9\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# \u7269\u7406\u91cf\u30af\u30e9\u30b9\n\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u529b\u5b66\u306e\u57fa\u672c\u91cf\u3001\u9577\u3055\u3001\u8cea\u91cf\u3001\u6642\u9593\u306b\u5bfe\u3059\u308b\u7269\u7406\u91cf\u306e\u30af\u30e9\u30b9\uff08scalar\uff09\u306e\u5ba3\u8a00\u306e\u307f\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067C++\u306e2\u3064\u306e\u91cd\u8981\u306a\u6a5f\u80fd\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n* template\n* \u6f14\u7b97\u5b50\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\n\n```cpp\ntemplate<int Length, int Mass, int Time>\nclass scalar {\npublic:\n\tscalar();\n\tscalar();\n\texplicit scalar(const double x);\n\t~scalar();\n\n\tconst double& value() const;\n\n\tscalar& operator=(const scalar& rhs);\n\tscalar& operator+=(const scalar& rhs);\n\tscalar& operator-=(const scalar& rhs);\n\tscalar& operator*=(double alpha);\n\tscalar& operator/=(double alpha);\n\nprivate:\n\tdouble x_;\n};\n\ntemplate<int Length, int Mass, int Time>\nscalar<Length, Mass, Time> operator+(const scalar<Length, Mass, Time>& lhs,\n\t\tconst scalar<Length, Mass, Time>& rhs);\n\ntemplate<int Length, int Mass, int Time>\nscalar<Length, Mass, Time> operator-(const scalar<Length, Mass, Time>& lhs,\n\t\tconst scalar<Length, Mass, Time>& rhs);\n\ntemplate<int LengthL, int MassL, int TimeL, int LengthR, int MassR, int TimeR>\nscalar<LengthL + LengthR, MassL + MassR, TimeL + TimeR> operator*(\n\t\tconst scalar<LengthL, MassL, TimeR>& lhs,\n\t\tconst scalar<LengthR, MassR, TimeR>& rhs);\n\ntemplate<int LengthL, int MassL, int TimeL, int LengthR, int MassR, int TimeR>\nscalar<LengthL - LengthR, MassL - MassR, TimeL - TimeR> operator/(\n\t\tconst scalar<LengthL, MassL, TimeR>& lhs,\n\t\tconst scalar<LengthR, MassR, TimeR>& rhs);\n\n// \u4ed6\u306e\u6f14\u7b97\u5b50 ==, !=, <, <=, >, >= \n```\n\n# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n\u7269\u7406\u91cf\u30af\u30e9\u30b9\u3092\u9069\u7528\u3057\u3066\u901f\u5ea6\uff08\u901f\u3055\uff09\u3092\u7b97\u51fa\u3059\u308b\u5192\u982d\u3068\u540c\u3058\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n```cpp\ntypedef scalar<1, 0, 0> length;\ntypedef scalar<0, 0, 1> time;\ntypedef scalar<1, 0, -1> velocity;\n\nlength d(100.0);\ntime t(20.0);\n\nvelocity v = d / t;\n// velocity v = t / d; // \u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\n```\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u3063\u3066\u591a\u7a2e\u306e\u7269\u7406\u91cf\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u305f\u3081\u306b`velocity v = t / d;`\u306e\u3088\u3046\u306a\u578b\u306e\u6574\u5408\u6027\u304c\u53d6\u308c\u306a\u3044\u30b3\u30fc\u30c9\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\u30b3\u30fc\u30c9\u30a8\u30e9\u30fc\u306f\u3001\u53ef\u80fd\u306a\u9650\u308a\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u70b9\u3067\u767a\u898b\u3057\u305f\u3044\u3082\u306e\u3067\u3059\u3002\n\n# typedef\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30af\u30e9\u30b9\u306f\u82e5\u5e72\u53ef\u8aad\u6027\u304c\u843d\u3061\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001`typedef`\u3067\u5206\u304b\u308a\u6613\u3044\u540d\u79f0\u3092\u4ed8\u3051\u308b\u3068\u5927\u5206\u8aad\u307f\u3084\u3059\u304f\u3001\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3082\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u3002\n\n```cpp:\u578b\u5225\u540d\ntypedef scalar<1, 0, 0> length;\ntypedef scalar<0, 1, 0> mass;\ntypedef scalar<0, 0, 1> time;\n\ntypedef scalar<2, 0, 0> area;\ntypedef scalar<3, 0, 0> volume;\ntypedef scalar<-3, 1, 0> density;\ntypedef scalar<1, 0, -1> velocity;\ntypedef scalar<1, 1, -1> momentum;\ntypedef scalar<-1, 1, -2> pressure;\n```\n\n# \u6570\u5f0f\n\u6f14\u7b97\u5b50\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306b\u3088\u308a\u3001`int`\u3084`double`\u306a\u3069\u306e\u6570\u5024\u578b\u306e\u6f14\u7b97\u5f0f\u3068\u540c\u69d8\u306b\u6570\u5f0f\u3092\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u304d\u307e\u3059\u3002\n\n```cpp:\u6570\u5f0f\u30b3\u30fc\u30c9\nvelocity v = d / t;\nvelocity u = 2.0 * v;\nvelocity w = u + v;\n\nmass m(1.0);\npressure dp = 0.5 * m * v *v;\n```\n\n# \u914d\u5217\n\u6570\u5024\u8a08\u7b97\u3067\u306f\u96e2\u6563\u7684\u306b\u89e3\u304f\u5834\u5408\u304c\u591a\u304f\u3001\u305d\u306e\u305f\u3081\u914d\u5217\u3092\u5229\u7528\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3057\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u4e0a\u8a18\u3067\u5b9f\u88c5\u3057\u305f\u7269\u7406\u91cf\u30af\u30e9\u30b9\u3082\u540c\u69d8\u306b\u914d\u5217\u3067\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```cpp\nscalar<1, 0, 0> x[10];\nscalar<0, 1, 0>* y = new scalar<0, 1, 0>[10];\n```\n\n", "tags": ["C++", "\u6570\u5024\u8a08\u7b97", "\u5de5\u5b66", "template", "\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411"]}