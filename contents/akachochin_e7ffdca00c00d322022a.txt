{"context": " More than 1 year has passed since last update.\n\n\u524d\u56de\n\u3069\u3046\u3082\u3067\u3059\u3002@akachochin\u3067\u3059\u3002\u4e45\u3057\u3076\u308a\u3067\u3059\u3002\u304a\u5143\u6c17\u3067\u3059\u304b\uff1f\n10\u6708\u306f\u30ab\u30fc\u30cd\u30eb\u7cfb\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u305f\u304f\u3055\u3093\u958b\u50ac\u3055\u308c\u308b\u3088\u3046\u3067\u3001\u8272\u3005\u697d\u3057\u307f\u3067\u3059\u3002\n\u524d\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u4ed6\u306b\u3082\u8abf\u3079\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u3063\u305f\u308a\u3067\u9045\u304f\u306a\u3063\u3066\u307e\u3059\u3002\n\u3051\u308c\u3069\u3001\u9045\u3005\u3067\u3082\u7d9a\u3051\u3066\u884c\u304d\u307e\u3059\u3002\n\n\u4eca\u56de\u3084\u308b\u3053\u3068\n\u524d\u56de\u3001handle_pte_fault()\u3092\u898b\u307e\u3057\u305f\u3002\n\u305d\u306e\u4e2d\u3067\u4ee5\u4e0b4\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u3063\u305f\u3053\u3068\u3092\u899a\u3048\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\n\n\nPTE\n\u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\n\u547c\u3073\u51fa\u3059\u95a2\u6570\n\n\n\n\n\u672a\u5272\u308a\u5f53\u3066\n\u3042\u308a(\u304b\u3064fault\u30eb\u30fc\u30c1\u30f3\u3042\u308a)\ndo_linear_fault\n\n\n\u672a\u5272\u308a\u5f53\u3066\n\u306a\u3057\ndo_anonymous_page\n\n\n\u4f55\u304b\u5272\u5f53\u6e08\n\u3042\u308a\ndo_nonlinear_fault\n\n\n\u4f55\u304b\u5272\u5f53\u6e08\n\u306a\u3057\ndo_swap_page\n\n\n\n\u4eca\u56de\u306f\u3001\u6700\u521d\u306b\u66f8\u3044\u305fdo_linear_fault()\u3092\u898b\u307e\u3059\u3002\n\nmm/memory.c\nstatic int do_linear_fault(struct mm_struct *mm, struct vm_area_struct *vma,\n    unsigned long address, pte_t *page_table, pmd_t *pmd,\n    unsigned int flags, pte_t orig_pte)\n{\n  pgoff_t pgoff = (((address & PAGE_MASK)\n      - vma->vm_start) >> PAGE_SHIFT) + vma->vm_pgoff;\n\n  pte_unmap(page_table);\n  /* \u8aad\u307f\u8fbc\u307f\u306e\u5834\u5408\u306f\u3001\u5e38\u306bdo_read_fault()\u3067\u634c\u304f */\n  if (!(flags & FAULT_FLAG_WRITE))\n    return do_read_fault(mm, vma, address, pmd, pgoff, flags,\n        orig_pte);\n  /* \u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u306f\u901a\u5e38\u66f8\u304d\u8fbc\u307f\u304c\u5171\u6709\u3055\u308c\u308b\u3002\u3057\u304b\u3057\u3001COW\u306e\u5834\u5408\u306f\n     \u5171\u6709\u3055\u308c\u306a\u3044\u306e\u3067\u3001COW\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u3059\u308b */\n  if (!(vma->vm_flags & VM_SHARED))\n    return do_cow_fault(mm, vma, address, pmd, pgoff, flags,\n        orig_pte);\n  /* \u5171\u6709\u3057\u3066\u3044\u308b\u30e1\u30e2\u30ea\u7a7a\u9593\u3078\u306e\u66f8\u304d\u8fbc\u307f\u3092\u634c\u304f */\n  return do_shared_fault(mm, vma, address, pmd, pgoff, flags, orig_pte);\n}\n\n\ndo_read_fault()\u3001do_shared_fault()\u306f\u63aa\u3044\u3066\u3001\u307e\u305a\u3001COW\u304b\u3089\u307f\u307e\u3057\u3087\u3046\u3002\n\nCOW(Copy On Write)\n\u5fa9\u7fd2\u3067\u3059\u304c\u3001Copy On Write\u3068\u306f\u300c\u3042\u308b\u30e1\u30e2\u30ea\u7a7a\u9593\u3092\u3042\u305f\u304b\u3082\u30b3\u30d4\u30fc\u3057\u305f\u304b\u306e\u3088\u3046\u306b\u898b\u305b\u304b\u3051\u3001\u5b9f\u969b\u306e\u7269\u7406\u30e1\u30e2\u30ea\u5272\u308a\u5f53\u3066\uff06\u30b3\u30d4\u30fc\u3092\u884c\u3046\u306e\u306f\u5b9f\u969b\u306b\u66f8\u304d\u8fbc\u307f\u304c\u3042\u308b\u3068\u304d\u307e\u3067\u9045\u5ef6\u3055\u305b\u308b\u6280\u8853\u300d\u3067\u3059\u3002\n\u4ee3\u8868\u7684\u306a\u4f7f\u7528\u4f8b\u306ffork()\u3067\u3057\u3087\u3046\u3002\n\u666e\u901a\u3001\u30d7\u30ed\u30bb\u30b9\u306f\u5404\u30d7\u30ed\u30bb\u30b9\u3054\u3068\u306b\u72ec\u7acb\u3057\u305f\u30e1\u30e2\u30ea\u7a7a\u9593\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u89aa\u30d7\u30ed\u30bb\u30b9\u304cfork()\u3057\u3066\u5b50\u30d7\u30ed\u30bb\u30b9\u3092\u4f5c\u3063\u305f\u3068\u304d\u306b\u3001\u89aa\u30d7\u30ed\u30bb\u30b9\u3068\u5b50\u30d7\u30ed\u30bb\u30b9\u306f\u540c\u3058\u30e1\u30e2\u30ea\u5185\u5bb9\u3092\u6301\u3061\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001fork()\u3057\u305f\u3042\u3068\u306f\u5927\u62b5exec()\u3059\u308b\u306e\u3067\u3001fork()\u6642\u70b9\u3067\u308f\u3056\u308f\u3056\u7269\u7406\u30e1\u30e2\u30ea\u3092\u672c\u5f53\u306b\u5272\u308a\u5f53\u3066\u308b\u306e\u306f\u9818\u57df\u7684\u306b\u7121\u99c4\u3067\u3059\u3057\u3001\u89aa\u30d7\u30ed\u30bb\u30b9\u306e\u30e1\u30e2\u30ea\u5185\u5bb9\u3092\u30b3\u30d4\u30fc\u3057\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\u306e\u3067CPU\u30ea\u30bd\u30fc\u30b9\u7684\u306b\u3082\u7121\u99c4\u3067\u3059\u3002\n\u3088\u3063\u3066\u3001\u3068\u308a\u3042\u3048\u305a\u306f\u89aa\u3068\u5b50\u306e\u9593\u3067\u7269\u7406\u30e1\u30e2\u30ea\u3092\u5171\u6709\u3057\u307e\u3059\u3002\n\u3053\u308c\u306a\u3089\u7121\u99c4\u306aCPU\u30ea\u30bd\u30fc\u30b9\u3068\u30e1\u30e2\u30ea\u30ea\u30bd\u30fc\u30b9\u3092\u6d6a\u8cbb\u3057\u306a\u304f\u3066\u3059\u307f\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u8aad\u3080\u3060\u3051\u306a\u3089\u3068\u3082\u304b\u304f\u3001\u3069\u3061\u3089\u304b\u4e00\u65b9\u304c\u66f8\u304d\u8fbc\u307f\u3092\u3057\u305f\u5834\u5408\u3001\u305d\u308c\u304c\u3082\u3046\u7247\u65b9\u306b\u898b\u3048\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u3042\u304f\u307e\u3067\u3082\u300c\u5404\u30d7\u30ed\u30bb\u30b9\u3054\u3068\u306b\u72ec\u7acb\u3057\u305f\u30e1\u30e2\u30ea\u7a7a\u9593\u3092\u6301\u3064\u300d\u304b\u3089\u3067\u3059\u3002\n\u3088\u3063\u3066\u3001\u66f8\u304d\u8fbc\u307f\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u521d\u3081\u3066\u30e1\u30e2\u30ea\u3092\u5272\u308a\u5f53\u3066\u3001\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\u3088\u3063\u3066\u3001COW\u306b\u306f\u4ee5\u4e0b\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n(1)\u4e00\u6642\u7684\u306b\u5171\u6709\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\n(2)\u5b9f\u969b\u306e\u66f8\u304d\u8fbc\u307f\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u30da\u30fc\u30b8\n\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u30bd\u30fc\u30b9\u3092\u898b\u307e\u3057\u3087\u3046\u3002\n\nmm/memory.c\nstatic int do_cow_fault(struct mm_struct *mm, struct vm_area_struct *vma,\n    unsigned long address, pmd_t *pmd,\n    pgoff_t pgoff, unsigned int flags, pte_t orig_pte)\n{\n  /* \u7565 */\n  new_page = alloc_page_vma(GFP_HIGHUSER_MOVABLE, vma, address);\n  if (!new_page)\n    return VM_FAULT_OOM;\n\n\n\u307e\u305a\u306f\u3001\u30da\u30fc\u30b8\u69cb\u9020\u4f53\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\u7b2c\u4e00\u5f15\u6570\u306fzone\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u5272\u308a\u5f53\u3066\u3066\u3044\u308b\u30da\u30fc\u30b8\u306f\u3001\u300c(2)\u5b9f\u969b\u306e\u66f8\u304d\u8fbc\u307f\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u30da\u30fc\u30b8\u300d\u3067\u3059\u3002\n\nGPF_HIGHUSER_MOVABLE\u306b\u3064\u3044\u3066\nzone(GPF_HIGHUSER_MOVABLE)\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30e1\u30f3\u30c8\u306e\u3068\u304a\u308a\u3067\u3059\u3002movable\u306f\u305d\u306e\u540d\u306e\u901a\u308a\u3001\u30da\u30fc\u30b8\u306e\u5272\u308a\u5f53\u3066\u3092\u79fb\u52d5\u53ef\u80fd\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u60f3\u50cf\u3059\u308b\u306b\u3001\u3042\u308b\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u306b\u5bfe\u3059\u308b\u7269\u7406\u30da\u30fc\u30b8\u3092\u4e2d\u8eab\u3092\u30b3\u30d4\u30fc\u3057\u305f\u3046\u3048\u3067\u5225\u306e\u3000\u7269\u7406\u30e1\u30e2\u30ea\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305d\u3046\u3067\u3059\u3002(page migration)\n\u307e\u305f\u3001HIGHMEM\u306a\u306e\u3067\u3001NORMAL\u3068\u9055\u3044\u4eee\u60f3\u7684\u304b\u3064\u7269\u7406\u7684\u306b\u9023\u7d9a\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3088\u3063\u3066\u3001\u90fd\u5ea6\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u306b\u5bfe\u3057\u3066\u7269\u7406\u30da\u30fc\u30b8\u3092\u5272\u308a\u5f53\u3066\u306a\u304f\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\n\ninclude/linux/gfp.h\n * __GFP_MOVABLE: Flag that this page will be movable by the page migration\n * mechanism or reclaimed\n/* \u7565 */\n#define GFP_HIGHUSER_MOVABLE  (__GFP_WAIT | __GFP_IO | __GFP_FS | \\\n         __GFP_HARDWALL | __GFP_HIGHMEM | \\\n         __GFP_MOVABLE)\n/* \u7565 */\n * The zone fallback order is MOVABLE=>HIGHMEM=>NORMAL=>DMA32=>DMA.\n * But GFP_MOVABLE is not only a zone specifier but also an allocation\n * policy. Therefore __GFP_MOVABLE plus another zone selector is valid.\n * Only 1 bit of the lowest 3 bits (DMA,DMA32,HIGHMEM) can be set to \"1\".\n\n\n\u6b21\u306b\u3001__do_fault()\u3092\u547c\u3073\u3001\u5148\u306b\u8aac\u660e\u3057\u305f\u300c(1)\u4e00\u6642\u7684\u306b\u5171\u6709\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\u300d\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\n\nmm/memory.c\n  ret = __do_fault(vma, address, pgoff, flags, &fault_page);\n  if (unlikely(ret & (VM_FAULT_ERROR | VM_FAULT_NOPAGE | VM_FAULT_RETRY)))\n    goto uncharge_out;\n\n\n\u305d\u3057\u3066\u3001\u300c(1)\u4e00\u6642\u7684\u306b\u5171\u6709\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\u300d\u306e\u5185\u5bb9\u3092\u300c(2)\u5b9f\u969b\u306e\u66f8\u304d\u8fbc\u307f\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u30da\u30fc\u30b8\u300d\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\nmm/memory.c\n  copy_user_highpage(new_page, fault_page, address, vma);\n\n\n\u305d\u306e\u3042\u3068\u306f\u3001\u3042\u3089\u305f\u3081\u3066\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u306b\u5bfe\u3057\u3066\u3001\u300c(2)\u5b9f\u969b\u306e\u66f8\u304d\u8fbc\u307f\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u30da\u30fc\u30b8\u300d\u3092\u7d10\u4ed8\u3051\u3057\u307e\u3059\u3002\n\nmm/memory.c\n  do_set_pte(vma, address, new_page, pte, true, true);\n  pte_unmap_unlock(pte, ptl);\n  unlock_page(fault_page);\n\n\n\u305d\u3057\u3066\u3001\u300c(1)\u4e00\u6642\u7684\u306b\u5171\u6709\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\u300d\u3067\u3059\u304c\u3001page_cache_release()\u3092\u4f7f\u3063\u3066\u8fd4\u5374\u3057\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30ab\u30a6\u30f3\u30bf(\u53c2\u7167\u6570)\u304c0\u306b\u306a\u3089\u306a\u3044(=\u4ed6\u306e\u4eba\u304c\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408)\u306f\u89e3\u653e\u3055\u308c\u307e\u305b\u3093\u3002\n\nmm/memory.c\n  page_cache_release(fault_page);\n  return ret; \n\n\n\u5ff5\u306e\u70ba\u3001\u78ba\u8a8d\u3057\u307e\u3059\u3002\npage_cache_release()\u306f\u5185\u90e8\u3067put_page()\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\nmm/swap.c\nvoid put_page(struct page *page)\n{\n  if (unlikely(PageCompound(page))) /* \u30b3\u30e1\u30f3\u30c8\u898b\u308b\u3068\u7279\u6b8a\u30b1\u30fc\u30b9\u306e\u305f\u3081\u7565 */\n    put_compound_page(page);\n  else if (put_page_testzero(page))\n    __put_single_page(page);\n}     \nEXPORT_SYMBOL(put_page);\n\n\nput_page_testzero()\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3001\u30a2\u30c8\u30df\u30c3\u30af\u547d\u4ee4\u3092\u4f7f\u3063\u3066\u6e1b\u7b97\u30680\u30c1\u30a7\u30c3\u30af\u3092\u540c\u6642\u306b\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\ninclude/linux/mm.h\nstatic inline int put_page_testzero(struct page *page)\n{   \n  VM_BUG_ON_PAGE(atomic_read(&page->_count) == 0, page);\n  return atomic_dec_and_test(&page->_count);\n}\n\n\n\u3064\u307e\u308a\u3001\u53c2\u7167\u6570\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u306e\u7d50\u679c\u3001\u53c2\u7167\u65700\u306b\u306a\u3063\u305f\u3089\u3001__put_single_page()\u3067\u8fd4\u5374\u3057\u307e\u3059\u3002\n\n\u5c11\u3057\u3060\u3051\u5947\u5999\u306b\u601d\u3048\u308b\u70b9(\u304d\u3063\u3068\u4f55\u304b\u3092\u898b\u843d\u3068\u3057\u3066\u3044\u308b\u306e\u3060\u3068\u601d\u3046)\n\u5c11\u3057\u5947\u5999\u306b\u601d\u3048\u307e\u3059\u3002\n__do_fault()\u306e\u6642\u70b9\u3067\u3001\u300c(1)\u4e00\u6642\u7684\u306b\u5171\u6709\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\u300d\u3092\u53d6\u5f97\u3057\u305f\u969b\u3001\u8a72\u5f53\u30da\u30fc\u30b8\u3078\u306e\u53c2\u7167\u6570\u304c1\u306e\u5834\u5408\u306b\u3001\u30b3\u30d4\u30fc\uff06\u89e3\u653e\u3092\u305b\u305a\u306b\u3057\u308c\u3063\u3068\u4eca\u56de\u89e3\u6c7a\u3059\u3079\u304d\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u306b\u300c(1)\u4e00\u6642\u7684\u306b\u5171\u6709\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\u300d\u3092\u7d10\u4ed8\u3051\u3066\u3057\u307e\u3048\u3070\u3001\u30e1\u30e2\u30ea\u30b3\u30d4\u30fc\u3082\u767a\u751f\u305b\u305a\u306b\u826f\u3044\u304b\u306a\u30fb\u30fb\u30fb\u306a\u3093\u3066\u5b89\u76f4\u306b\u8003\u3048\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u30fb\u30fb\u30fb\u304a\u305d\u3089\u304f\u79c1\u304c\u4f55\u304b\u898b\u843d\u3068\u3057\u3066\u3044\u308b\u304b\u8aa4\u3063\u3066\u3044\u308b\u304b\u3060\u3068\u601d\u3044\u307e\u3059\u30fb\u30fb\u30fb\u3002\n\n\u6b21\u56de\n\u4eca\u56de\u306f\u3053\u3053\u307e\u3067\u306b\u3057\u307e\u3059\u3002\n\u6b21\u56de\u306fdo_read_fault()\u3001do_shared_fault()\u3092\u898b\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n## \u524d\u56de\n\n\u3069\u3046\u3082\u3067\u3059\u3002@akachochin\u3067\u3059\u3002\u4e45\u3057\u3076\u308a\u3067\u3059\u3002\u304a\u5143\u6c17\u3067\u3059\u304b\uff1f\n10\u6708\u306f\u30ab\u30fc\u30cd\u30eb\u7cfb\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u305f\u304f\u3055\u3093\u958b\u50ac\u3055\u308c\u308b\u3088\u3046\u3067\u3001\u8272\u3005\u697d\u3057\u307f\u3067\u3059\u3002\n\n\u524d\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u4ed6\u306b\u3082\u8abf\u3079\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u3063\u305f\u308a\u3067\u9045\u304f\u306a\u3063\u3066\u307e\u3059\u3002\n\u3051\u308c\u3069\u3001\u9045\u3005\u3067\u3082\u7d9a\u3051\u3066\u884c\u304d\u307e\u3059\u3002\n\n## \u4eca\u56de\u3084\u308b\u3053\u3068\n[\u524d\u56de](http://qiita.com/akachochin/items/6e38f89f9421f3e7cbcf)\u3001handle_pte_fault()\u3092\u898b\u307e\u3057\u305f\u3002\n\u305d\u306e\u4e2d\u3067\u4ee5\u4e0b4\u30d1\u30bf\u30fc\u30f3\u304c\u3042\u3063\u305f\u3053\u3068\u3092\u899a\u3048\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\n| PTE       | \u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2 | \u547c\u3073\u51fa\u3059\u95a2\u6570 |\n|:----------|:-----------|:------------|\n| \u672a\u5272\u308a\u5f53\u3066 | \u3042\u308a(\u304b\u3064fault\u30eb\u30fc\u30c1\u30f3\u3042\u308a) | do_linear_fault |\n| \u672a\u5272\u308a\u5f53\u3066 | \u306a\u3057 | do_anonymous_page |\n| \u4f55\u304b\u5272\u5f53\u6e08 | \u3042\u308a | do_nonlinear_fault |\n| \u4f55\u304b\u5272\u5f53\u6e08 | \u306a\u3057 | do_swap_page |\n\n\u4eca\u56de\u306f\u3001\u6700\u521d\u306b\u66f8\u3044\u305fdo_linear_fault()\u3092\u898b\u307e\u3059\u3002\n\n```c:mm/memory.c\nstatic int do_linear_fault(struct mm_struct *mm, struct vm_area_struct *vma,\n    unsigned long address, pte_t *page_table, pmd_t *pmd,\n    unsigned int flags, pte_t orig_pte)\n{\n  pgoff_t pgoff = (((address & PAGE_MASK)\n      - vma->vm_start) >> PAGE_SHIFT) + vma->vm_pgoff;\n\n  pte_unmap(page_table);\n  /* \u8aad\u307f\u8fbc\u307f\u306e\u5834\u5408\u306f\u3001\u5e38\u306bdo_read_fault()\u3067\u634c\u304f */\n  if (!(flags & FAULT_FLAG_WRITE))\n    return do_read_fault(mm, vma, address, pmd, pgoff, flags,\n        orig_pte);\n  /* \u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u306f\u901a\u5e38\u66f8\u304d\u8fbc\u307f\u304c\u5171\u6709\u3055\u308c\u308b\u3002\u3057\u304b\u3057\u3001COW\u306e\u5834\u5408\u306f\n     \u5171\u6709\u3055\u308c\u306a\u3044\u306e\u3067\u3001COW\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u3059\u308b */\n  if (!(vma->vm_flags & VM_SHARED))\n    return do_cow_fault(mm, vma, address, pmd, pgoff, flags,\n        orig_pte);\n  /* \u5171\u6709\u3057\u3066\u3044\u308b\u30e1\u30e2\u30ea\u7a7a\u9593\u3078\u306e\u66f8\u304d\u8fbc\u307f\u3092\u634c\u304f */\n  return do_shared_fault(mm, vma, address, pmd, pgoff, flags, orig_pte);\n}\n```\n\ndo_read_fault()\u3001do_shared_fault()\u306f\u63aa\u3044\u3066\u3001\u307e\u305a\u3001COW\u304b\u3089\u307f\u307e\u3057\u3087\u3046\u3002\n\n## COW(Copy On Write)\n\u5fa9\u7fd2\u3067\u3059\u304c\u3001Copy On Write\u3068\u306f\u300c\u3042\u308b\u30e1\u30e2\u30ea\u7a7a\u9593\u3092\u3042\u305f\u304b\u3082\u30b3\u30d4\u30fc\u3057\u305f\u304b\u306e\u3088\u3046\u306b\u898b\u305b\u304b\u3051\u3001\u5b9f\u969b\u306e\u7269\u7406\u30e1\u30e2\u30ea\u5272\u308a\u5f53\u3066\uff06\u30b3\u30d4\u30fc\u3092\u884c\u3046\u306e\u306f\u5b9f\u969b\u306b\u66f8\u304d\u8fbc\u307f\u304c\u3042\u308b\u3068\u304d\u307e\u3067\u9045\u5ef6\u3055\u305b\u308b\u6280\u8853\u300d\u3067\u3059\u3002\n\n\u4ee3\u8868\u7684\u306a\u4f7f\u7528\u4f8b\u306ffork()\u3067\u3057\u3087\u3046\u3002\n\n\u666e\u901a\u3001\u30d7\u30ed\u30bb\u30b9\u306f\u5404\u30d7\u30ed\u30bb\u30b9\u3054\u3068\u306b\u72ec\u7acb\u3057\u305f\u30e1\u30e2\u30ea\u7a7a\u9593\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u89aa\u30d7\u30ed\u30bb\u30b9\u304cfork()\u3057\u3066\u5b50\u30d7\u30ed\u30bb\u30b9\u3092\u4f5c\u3063\u305f\u3068\u304d\u306b\u3001\u89aa\u30d7\u30ed\u30bb\u30b9\u3068\u5b50\u30d7\u30ed\u30bb\u30b9\u306f\u540c\u3058\u30e1\u30e2\u30ea\u5185\u5bb9\u3092\u6301\u3061\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001fork()\u3057\u305f\u3042\u3068\u306f\u5927\u62b5exec()\u3059\u308b\u306e\u3067\u3001fork()\u6642\u70b9\u3067\u308f\u3056\u308f\u3056\u7269\u7406\u30e1\u30e2\u30ea\u3092\u672c\u5f53\u306b\u5272\u308a\u5f53\u3066\u308b\u306e\u306f\u9818\u57df\u7684\u306b\u7121\u99c4\u3067\u3059\u3057\u3001\u89aa\u30d7\u30ed\u30bb\u30b9\u306e\u30e1\u30e2\u30ea\u5185\u5bb9\u3092\u30b3\u30d4\u30fc\u3057\u306a\u304f\u3066\u306f\u3044\u3051\u306a\u3044\u306e\u3067CPU\u30ea\u30bd\u30fc\u30b9\u7684\u306b\u3082\u7121\u99c4\u3067\u3059\u3002\n\u3088\u3063\u3066\u3001\u3068\u308a\u3042\u3048\u305a\u306f\u89aa\u3068\u5b50\u306e\u9593\u3067\u7269\u7406\u30e1\u30e2\u30ea\u3092\u5171\u6709\u3057\u307e\u3059\u3002\n\u3053\u308c\u306a\u3089\u7121\u99c4\u306aCPU\u30ea\u30bd\u30fc\u30b9\u3068\u30e1\u30e2\u30ea\u30ea\u30bd\u30fc\u30b9\u3092\u6d6a\u8cbb\u3057\u306a\u304f\u3066\u3059\u307f\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001\u8aad\u3080\u3060\u3051\u306a\u3089\u3068\u3082\u304b\u304f\u3001\u3069\u3061\u3089\u304b\u4e00\u65b9\u304c\u66f8\u304d\u8fbc\u307f\u3092\u3057\u305f\u5834\u5408\u3001\u305d\u308c\u304c\u3082\u3046\u7247\u65b9\u306b\u898b\u3048\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u3042\u304f\u307e\u3067\u3082\u300c\u5404\u30d7\u30ed\u30bb\u30b9\u3054\u3068\u306b\u72ec\u7acb\u3057\u305f\u30e1\u30e2\u30ea\u7a7a\u9593\u3092\u6301\u3064\u300d\u304b\u3089\u3067\u3059\u3002\n\u3088\u3063\u3066\u3001\u66f8\u304d\u8fbc\u307f\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u521d\u3081\u3066\u30e1\u30e2\u30ea\u3092\u5272\u308a\u5f53\u3066\u3001\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\u3088\u3063\u3066\u3001COW\u306b\u306f\u4ee5\u4e0b\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n(1)\u4e00\u6642\u7684\u306b\u5171\u6709\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\n(2)\u5b9f\u969b\u306e\u66f8\u304d\u8fbc\u307f\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u30da\u30fc\u30b8\n\n\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u30bd\u30fc\u30b9\u3092\u898b\u307e\u3057\u3087\u3046\u3002\n\n```c:mm/memory.c\nstatic int do_cow_fault(struct mm_struct *mm, struct vm_area_struct *vma,\n    unsigned long address, pmd_t *pmd,\n    pgoff_t pgoff, unsigned int flags, pte_t orig_pte)\n{\n  /* \u7565 */\n  new_page = alloc_page_vma(GFP_HIGHUSER_MOVABLE, vma, address);\n  if (!new_page)\n    return VM_FAULT_OOM;\n```\n\n\u307e\u305a\u306f\u3001\u30da\u30fc\u30b8\u69cb\u9020\u4f53\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\u7b2c\u4e00\u5f15\u6570\u306fzone\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u5272\u308a\u5f53\u3066\u3066\u3044\u308b\u30da\u30fc\u30b8\u306f\u3001\u300c(2)\u5b9f\u969b\u306e\u66f8\u304d\u8fbc\u307f\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u30da\u30fc\u30b8\u300d\u3067\u3059\u3002\n\n### GPF_HIGHUSER_MOVABLE\u306b\u3064\u3044\u3066\nzone(GPF_HIGHUSER_MOVABLE)\u306f\u3001\u4ee5\u4e0b\u306e\u30b3\u30e1\u30f3\u30c8\u306e\u3068\u304a\u308a\u3067\u3059\u3002movable\u306f\u305d\u306e\u540d\u306e\u901a\u308a\u3001\u30da\u30fc\u30b8\u306e\u5272\u308a\u5f53\u3066\u3092\u79fb\u52d5\u53ef\u80fd\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u60f3\u50cf\u3059\u308b\u306b\u3001\u3042\u308b\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u306b\u5bfe\u3059\u308b\u7269\u7406\u30da\u30fc\u30b8\u3092\u4e2d\u8eab\u3092\u30b3\u30d4\u30fc\u3057\u305f\u3046\u3048\u3067\u5225\u306e\u3000\u7269\u7406\u30e1\u30e2\u30ea\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305d\u3046\u3067\u3059\u3002(page migration)\n\u307e\u305f\u3001HIGHMEM\u306a\u306e\u3067\u3001NORMAL\u3068\u9055\u3044\u4eee\u60f3\u7684\u304b\u3064\u7269\u7406\u7684\u306b\u9023\u7d9a\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u3088\u3063\u3066\u3001\u90fd\u5ea6\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u306b\u5bfe\u3057\u3066\u7269\u7406\u30da\u30fc\u30b8\u3092\u5272\u308a\u5f53\u3066\u306a\u304f\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\n\n```c:include/linux/gfp.h\n * __GFP_MOVABLE: Flag that this page will be movable by the page migration\n * mechanism or reclaimed\n/* \u7565 */\n#define GFP_HIGHUSER_MOVABLE  (__GFP_WAIT | __GFP_IO | __GFP_FS | \\\n         __GFP_HARDWALL | __GFP_HIGHMEM | \\\n         __GFP_MOVABLE)\n/* \u7565 */\n * The zone fallback order is MOVABLE=>HIGHMEM=>NORMAL=>DMA32=>DMA.\n * But GFP_MOVABLE is not only a zone specifier but also an allocation\n * policy. Therefore __GFP_MOVABLE plus another zone selector is valid.\n * Only 1 bit of the lowest 3 bits (DMA,DMA32,HIGHMEM) can be set to \"1\".\n```\n\n\u6b21\u306b\u3001__do_fault()\u3092\u547c\u3073\u3001\u5148\u306b\u8aac\u660e\u3057\u305f\u300c(1)\u4e00\u6642\u7684\u306b\u5171\u6709\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\u300d\u3092\u5272\u308a\u5f53\u3066\u307e\u3059\u3002\n\n```c:mm/memory.c\n  ret = __do_fault(vma, address, pgoff, flags, &fault_page);\n  if (unlikely(ret & (VM_FAULT_ERROR | VM_FAULT_NOPAGE | VM_FAULT_RETRY)))\n    goto uncharge_out;\n```\n\n\u305d\u3057\u3066\u3001\u300c(1)\u4e00\u6642\u7684\u306b\u5171\u6709\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\u300d\u306e\u5185\u5bb9\u3092\u300c(2)\u5b9f\u969b\u306e\u66f8\u304d\u8fbc\u307f\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u30da\u30fc\u30b8\u300d\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\n```c:mm/memory.c\n  copy_user_highpage(new_page, fault_page, address, vma);\n```\n\n\u305d\u306e\u3042\u3068\u306f\u3001\u3042\u3089\u305f\u3081\u3066\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u306b\u5bfe\u3057\u3066\u3001\u300c(2)\u5b9f\u969b\u306e\u66f8\u304d\u8fbc\u307f\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u308b\u30da\u30fc\u30b8\u300d\u3092\u7d10\u4ed8\u3051\u3057\u307e\u3059\u3002\n\n```c:mm/memory.c\n  do_set_pte(vma, address, new_page, pte, true, true);\n  pte_unmap_unlock(pte, ptl);\n  unlock_page(fault_page);\n```\n\n\u305d\u3057\u3066\u3001\u300c(1)\u4e00\u6642\u7684\u306b\u5171\u6709\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\u300d\u3067\u3059\u304c\u3001page_cache_release()\u3092\u4f7f\u3063\u3066\u8fd4\u5374\u3057\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30ab\u30a6\u30f3\u30bf(\u53c2\u7167\u6570)\u304c0\u306b\u306a\u3089\u306a\u3044(=\u4ed6\u306e\u4eba\u304c\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408)\u306f\u89e3\u653e\u3055\u308c\u307e\u305b\u3093\u3002\n\n```c:mm/memory.c\n  page_cache_release(fault_page);\n  return ret; \n```\n\n\u5ff5\u306e\u70ba\u3001\u78ba\u8a8d\u3057\u307e\u3059\u3002\npage_cache_release()\u306f\u5185\u90e8\u3067put_page()\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n```c:mm/swap.c\nvoid put_page(struct page *page)\n{\n  if (unlikely(PageCompound(page))) /* \u30b3\u30e1\u30f3\u30c8\u898b\u308b\u3068\u7279\u6b8a\u30b1\u30fc\u30b9\u306e\u305f\u3081\u7565 */\n    put_compound_page(page);\n  else if (put_page_testzero(page))\n    __put_single_page(page);\n}     \nEXPORT_SYMBOL(put_page);\n```\n\nput_page_testzero()\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3001\u30a2\u30c8\u30df\u30c3\u30af\u547d\u4ee4\u3092\u4f7f\u3063\u3066\u6e1b\u7b97\u30680\u30c1\u30a7\u30c3\u30af\u3092\u540c\u6642\u306b\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n```c:include/linux/mm.h\nstatic inline int put_page_testzero(struct page *page)\n{   \n  VM_BUG_ON_PAGE(atomic_read(&page->_count) == 0, page);\n  return atomic_dec_and_test(&page->_count);\n}\n```\n\n\u3064\u307e\u308a\u3001\u53c2\u7167\u6570\u30c7\u30af\u30ea\u30e1\u30f3\u30c8\u306e\u7d50\u679c\u3001\u53c2\u7167\u65700\u306b\u306a\u3063\u305f\u3089\u3001__put_single_page()\u3067\u8fd4\u5374\u3057\u307e\u3059\u3002\n\n## \u5c11\u3057\u3060\u3051\u5947\u5999\u306b\u601d\u3048\u308b\u70b9(\u304d\u3063\u3068\u4f55\u304b\u3092\u898b\u843d\u3068\u3057\u3066\u3044\u308b\u306e\u3060\u3068\u601d\u3046)\n\u5c11\u3057\u5947\u5999\u306b\u601d\u3048\u307e\u3059\u3002\n__do_fault()\u306e\u6642\u70b9\u3067\u3001\u300c(1)\u4e00\u6642\u7684\u306b\u5171\u6709\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\u300d\u3092\u53d6\u5f97\u3057\u305f\u969b\u3001\u8a72\u5f53\u30da\u30fc\u30b8\u3078\u306e\u53c2\u7167\u6570\u304c1\u306e\u5834\u5408\u306b\u3001\u30b3\u30d4\u30fc\uff06\u89e3\u653e\u3092\u305b\u305a\u306b\u3057\u308c\u3063\u3068\u4eca\u56de\u89e3\u6c7a\u3059\u3079\u304d\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u306b\u300c(1)\u4e00\u6642\u7684\u306b\u5171\u6709\u3057\u3066\u3044\u308b\u30da\u30fc\u30b8\u300d\u3092\u7d10\u4ed8\u3051\u3066\u3057\u307e\u3048\u3070\u3001\u30e1\u30e2\u30ea\u30b3\u30d4\u30fc\u3082\u767a\u751f\u305b\u305a\u306b\u826f\u3044\u304b\u306a\u30fb\u30fb\u30fb\u306a\u3093\u3066\u5b89\u76f4\u306b\u8003\u3048\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u30fb\u30fb\u30fb\u304a\u305d\u3089\u304f\u79c1\u304c\u4f55\u304b\u898b\u843d\u3068\u3057\u3066\u3044\u308b\u304b\u8aa4\u3063\u3066\u3044\u308b\u304b\u3060\u3068\u601d\u3044\u307e\u3059\u30fb\u30fb\u30fb\u3002\n\n## \u6b21\u56de\n\u4eca\u56de\u306f\u3053\u3053\u307e\u3067\u306b\u3057\u307e\u3059\u3002\n\u6b21\u56de\u306fdo_read_fault()\u3001do_shared_fault()\u3092\u898b\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\n", "tags": ["Linux", "kernel", "\u4eee\u60f3\u8a18\u61b6", "kernelvm"]}