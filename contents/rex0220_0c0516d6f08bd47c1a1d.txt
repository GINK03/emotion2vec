{"context": "kintone \u3067SQL\u3092\u4f7f\u3046 \u306e\u7d9a\u304d\u3002\n\u30b5\u30d6\u30af\u30a8\u30ea\u30fc\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u90e8\u54c1\u3068\u6700\u65b0\u306e\u4f1a\u793e\u67fb\u5b9a\u3092 JOIN \u3057\u3066\u3001\u8868\u793a\n\n\u90e8\u54c1\u8868\u306e\u96c6\u8a08\u7d50\u679c\n\n\n\u539f\u6750\u6599\u306e\u8abf\u9054\u5148\n\n\n\u5fc5\u8981\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\nalasql.min.js : JavaScript \u3067 SQL \u304c\u4f7f\u3048\u307e\u3059\u3002\n\nhandsontable : \u30b0\u30ea\u30c3\u30c9\u8868\u793a\u7528\n\n\n\u96c6\u8a08\u30b3\u30fc\u30c9\n\u51e6\u7406\u6982\u8981\n\n\u539f\u6750\u6599\u30a2\u30d7\u30ea\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\n\u8abf\u9054\u5148\u306e\u4f1a\u793e\u540d\u3092\u53d6\u5f97\n\u8abf\u9054\u5148\u306e\u4f1a\u793e\u540d\u3067\u67fb\u5bdf\u60c5\u5831\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\njson \u69cb\u9020\u3092\u7c21\u5358\u5316\nSQL \u3067\u96c6\u8a08\uff08\u30b5\u30d6\u30af\u30a8\u30ea\u30fc\uff09\n\n\u30af\u30a8\u30ea\u30fc\u306e\u51e6\u7406\n\n\u30b5\u30d6\u30af\u30a8\u30ea\u30fc\uff1a\u4f1a\u793e\u306e\u67fb\u5bdf\u5e74\u6708\u65e5\u3092\u964d\u9806\u306b\u4e26\u3079\u3066\u3001\u305d\u306e\u5148\u982d\uff08\u6700\u65b0\u65e5\u4ed8\uff09\u306e\u65e5\u4ed8\u30fb\u8a55\u4fa1\u3092\u53d6\u5f97\n\u6700\u65b0\u306e\u67fb\u5bdf\u5e74\u6708\u65e5\u30fb\u8a55\u4fa1\u3068\u539f\u6750\u6599\u3092\u4f1a\u793e\u540d\u3067 JOIN \u3057\u3066\u3001\u539f\u6750\u6599\u306e\u540d\u524d\u9806\u306b\u8868\u793a\n\n\u88fd\u54c1\u306e\u5de5\u7a0b\u60c5\u5831\u304c\u3042\u308c\u3070\u3001\u5de5\u7a0b\u9806\u306b\u539f\u6750\u6599\u3092\u4e26\u3079\u305f\u3044\u3068\u3053\u308d\u3002\njoin \u306e\u5f8c\u306b\u30b5\u30d6\u30af\u30a8\u30ea\u30fc\u3092\u66f8\u3051\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u5c11\u3057\u914d\u5217\u306e\u9806\u756a\u306b\u6ce8\u610f\n////////////////////////////////////////////////////////////////////////////\n// kintone JavaScript: Summary of kintone records by alasql.\n//  2017.02.27 by rex0220\n////////////////////////////////////////////////////////////////////////////\n(function() {\n    \"use strict\";\n\n    // \u4e00\u89a7\u8868\u793a\n    kintone.events.on(\"app.record.detail.show\", function(event) {\n\n        var record = event.record;\n\n        var obj = {};\n        var appId1 = 749;\n        var q1 = '\u88fd\u54c1\u540d = \"' + record['\u88fd\u54c1\u540d'].value + '\" and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n\n        // \u539f\u6750\u6599\u53d6\u5f97\n        fetchRecords(appId1, q1, ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d', '\u4f1a\u793e\u540d']).then(function(records) {\n            obj.rs1 = convertToRows(records);\n            console.log('rs1', JSON.stringify(obj.rs1));\n\n            var companyNames = {};\n            obj.rs1.map(function(row) {\n                companyNames['\"' + row['\u4f1a\u793e\u540d'] + '\"'] = 1;\n            });\n\n            var strNames = Object.keys(companyNames).join(',');\n\n            console.log('\u4f1a\u793e\u540d', strNames);\n\n            if (!strNames)\n                return event;\n\n            // \u67fb\u5bdf\u60c5\u5831\u53d6\u5f97\n            var appId2 = 748;\n            var q2 = '\u4f1a\u793e\u540d in (' + strNames + ') and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            // var q1 = '\u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            return fetchRecords(appId2, q2, ['\u4f1a\u793e\u540d', '\u67fb\u5bdf\u5e74\u6708\u65e5', '\u67fb\u5bdf\u306e\u8a55\u4fa1']);\n\n        }).then(function(records) {\n            obj.rs2 = convertToRows(records);\n            console.log('rs2', JSON.stringify(obj.rs2));\n\n            // var result0 = alasql(\n            //     \"SELECT [\u4f1a\u793e\u540d], FIRST([\u67fb\u5bdf\u5e74\u6708\u65e5]) as [\u67fb\u5bdf\u5e74\u6708\u65e5], FIRST([\u67fb\u5bdf\u306e\u8a55\u4fa1]) as [\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n            //     FROM (SELECT * FROM ? ORDER BY [\u4f1a\u793e\u540d], [\u67fb\u5bdf\u5e74\u6708\u65e5] DESC) \\\n            //     GROUP BY [\u4f1a\u793e\u540d]\", [obj.rs2]);\n            // console.log('r0', result0);\n\n            var result1 = alasql(\n                \"SELECT  a.[\u88fd\u54c1\u540d], a.[\u539f\u6750\u6599\u540d], a.[\u4f1a\u793e\u540d], b.[\u67fb\u5bdf\u5e74\u6708\u65e5], b.[\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n                FROM ( \\\n                    SELECT [\u4f1a\u793e\u540d], FIRST([\u67fb\u5bdf\u5e74\u6708\u65e5]) as [\u67fb\u5bdf\u5e74\u6708\u65e5], FIRST([\u67fb\u5bdf\u306e\u8a55\u4fa1]) as [\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n                    FROM (SELECT * FROM ? ORDER BY [\u4f1a\u793e\u540d], [\u67fb\u5bdf\u5e74\u6708\u65e5] DESC) \\\n                    GROUP BY [\u4f1a\u793e\u540d] ) as b \\\n                    join ? as a on a.[\u4f1a\u793e\u540d] = b.[\u4f1a\u793e\u540d]\\\n                ORDER BY a.[\u88fd\u54c1\u540d], a.[\u539f\u6750\u6599\u540d], a.[\u4f1a\u793e\u540d]\", [obj.rs2, obj.rs1]);\n            console.log('r0a', result1);\n\n            // grid \u8868\u793a\n            var grid = kintone.app.record.getSpaceElement('xp-grid');\n            new Handsontable(grid, { \n                data: result1, \n                colWidths: [150, 150, 150, 100, 100],\n                colHeaders: ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d', '\u4f1a\u793e\u540d', '\u67fb\u5bdf\u5e74\u6708\u65e5', '\u67fb\u5bdf\u306e\u8a55\u4fa1'], \n                columns: [\n                    { data: '\u88fd\u54c1\u540d' },\n                    { data: '\u539f\u6750\u6599\u540d' },\n                    { data: '\u4f1a\u793e\u540d' },\n                    { data: '\u67fb\u5bdf\u5e74\u6708\u65e5' },\n                    { data: '\u67fb\u5bdf\u306e\u8a55\u4fa1' },\n                ],\n                readOnly: true \n            });\n\n        });\n\n        return event;\n    });\n\n\n    // get records\n    function fetchRecords(appId, opt_query, opt_fields, opt_offset, opt_limit, opt_records) {\n        var query = opt_query || '';\n        var offset = opt_offset || 0;\n        var limit = opt_limit || 500;\n        var allRecords = opt_records || [];\n        var params = {app: appId, query: query + ' limit ' + limit + ' offset ' + offset };\n        if (opt_fields) params.fields = opt_fields;\n        return kintone.api(kintone.api.url('/k/v1/records', true), 'GET', params).then(function(resp) {\n            allRecords = allRecords.concat(resp.records);\n            if (resp.records.length === limit) {\n                return fetchRecords(appId, query, opt_fields, offset + limit, limit, allRecords);\n            }\n            return allRecords;\n        });\n    }\n\n    // records convert to table rows \n    function convertToRows(records) {\n        var rows = records.map(function(record){\n            var keys = Object.keys(record);\n            var row = {};\n            keys.map(function(key){\n                row[key] = record[key].type === 'NUMBER' ? Number(record[key].value) : record[key].value;\n            });\n            return row;\n        });\n        return rows;\n    }\n\n})();\n\n\n\u90e8\u54c1\u8868\u3001\u90e8\u54c1\u8abf\u9054\u3001\u67fb\u5bdf\u60c5\u5831\u30a2\u30d7\u30ea\u306b\u5206\u304b\u308c\u3066\u3044\u308b\u5834\u5408\n\u51e6\u7406\u6982\u8981\n\uff13\u672c\u306e\u30a2\u30d7\u30ea\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001SQL \u3067\u7d44\u307f\u7acb\u3066\u3066\u3042\u3052\u308b\u3060\u3051\u3067\u3059\u306e\u3067\u3001\u57fa\u672c\u306f\u540c\u3058\u3067\u3059\u3002\n\u7121\u7406\u306b\uff13\u3064\u306e\u914d\u5217\u3092 JOIN \u3057\u306a\u304f\u3066\u3082\u3001\uff12\u672c\u306e JOIN \u7d50\u679c\u304c\u914d\u5217\u306b\u4f5c\u3063\u3066\u3001\u3055\u3089\u306b JOIN \u3057\u3066\u3082kintone \u3067\u6271\u3046\u30c7\u30fc\u30bf\u4ef6\u6570\u3067\u3042\u308c\u3070\u51e6\u7406\u6642\u9593\u306f\u305d\u3093\u306a\u306b\u5909\u308f\u308a\u307e\u305b\u3093\u3002\n////////////////////////////////////////////////////////////////////////////\n// kintone JavaScript: Summary of kintone records by alasql.\n//  2017.02.28 by rex0220\n////////////////////////////////////////////////////////////////////////////\n(function() {\n    \"use strict\";\n\n    // \u4e00\u89a7\u8868\u793a\n    kintone.events.on(\"app.record.detail.show\", function(event) {\n\n        var record = event.record;\n\n        var obj = {};\n        var appId1 = 749;\n        var q1 = '\u88fd\u54c1\u540d = \"' + record['\u88fd\u54c1\u540d'].value + '\" and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n\n        // \u539f\u6750\u6599\u53d6\u5f97\n        fetchRecords(appId1, q1, ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d']).then(function(records) {\n            obj.rs1 = convertToRows(records);\n            console.log('rs1', JSON.stringify(obj.rs1));\n\n            var partNames = {};\n            obj.rs1.map(function(row) {\n                partNames['\"' + row['\u539f\u6750\u6599\u540d'] + '\"'] = 1;\n            });\n            var strNames = Object.keys(partNames).join(',');\n            console.log('\u539f\u6750\u6599\u540d', strNames);\n\n            // \u90e8\u54c1\u8abf\u9054\u60c5\u5831\u53d6\u5f97\n            var appId2 = 751;\n            var q2 = '\u539f\u6750\u6599\u540d in (' + strNames + ') and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            // var q1 = '\u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            return fetchRecords(appId2, q2, ['\u539f\u6750\u6599\u540d', '\u4f1a\u793e\u540d']);\n\n        }).then(function(records) {\n            obj.rs2 = convertToRows(records);\n            console.log('rs2', JSON.stringify(obj.rs2));\n\n            var companyNames = {};\n            obj.rs2.map(function(row) {\n                companyNames['\"' + row['\u4f1a\u793e\u540d'] + '\"'] = 1;\n            });\n\n            var strNames = Object.keys(companyNames).join(',');\n\n            console.log('\u4f1a\u793e\u540d', strNames);\n\n            // \u67fb\u5bdf\u60c5\u5831\u53d6\u5f97\n            var appId3 = 748;\n            var q3 = '\u4f1a\u793e\u540d in (' + strNames + ') and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            // var q1 = '\u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            return fetchRecords(appId3, q3, ['\u4f1a\u793e\u540d', '\u67fb\u5bdf\u5e74\u6708\u65e5', '\u67fb\u5bdf\u306e\u8a55\u4fa1']);\n\n        }).then(function(records) {\n            obj.rs3 = convertToRows(records);\n            console.log('rs3', JSON.stringify(obj.rs3));\n\n            var result1 = alasql(\n                \"SELECT  a.[\u88fd\u54c1\u540d], a.[\u539f\u6750\u6599\u540d], c.[\u4f1a\u793e\u540d], c.[\u67fb\u5bdf\u5e74\u6708\u65e5], c.[\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n                FROM ( \\\n                    SELECT [\u4f1a\u793e\u540d], FIRST([\u67fb\u5bdf\u5e74\u6708\u65e5]) as [\u67fb\u5bdf\u5e74\u6708\u65e5], FIRST([\u67fb\u5bdf\u306e\u8a55\u4fa1]) as [\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n                    FROM (SELECT * FROM ? ORDER BY [\u4f1a\u793e\u540d], [\u67fb\u5bdf\u5e74\u6708\u65e5] DESC) \\\n                    GROUP BY [\u4f1a\u793e\u540d] ) as c \\\n                JOIN ? as b ON b.[\u4f1a\u793e\u540d] = c.[\u4f1a\u793e\u540d]\\\n                JOIN ? as a ON a.[\u539f\u6750\u6599\u540d] = b.[\u539f\u6750\u6599\u540d]\\\n                ORDER BY a.[\u88fd\u54c1\u540d], a.[\u539f\u6750\u6599\u540d], c.[\u4f1a\u793e\u540d]\", [obj.rs3, obj.rs2, obj.rs1]);\n            console.log('r0a', result1);\n\n            // grid \u8868\u793a\n            var grid = kintone.app.record.getSpaceElement('xp-grid');\n            new Handsontable(grid, { \n                data: result1, \n                colWidths: [150, 150, 150, 100, 100],\n                colHeaders: ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d', '\u4f1a\u793e\u540d', '\u67fb\u5bdf\u5e74\u6708\u65e5', '\u67fb\u5bdf\u306e\u8a55\u4fa1'], \n                columns: [\n                    { data: '\u88fd\u54c1\u540d' },\n                    { data: '\u539f\u6750\u6599\u540d' },\n                    { data: '\u4f1a\u793e\u540d' },\n                    { data: '\u67fb\u5bdf\u5e74\u6708\u65e5' },\n                    { data: '\u67fb\u5bdf\u306e\u8a55\u4fa1' },\n                ],\n                readOnly: true \n            });\n\n        });\n\n        return event;\n    });\n\n\n    // get records\n    function fetchRecords(appId, opt_query, opt_fields, opt_offset, opt_limit, opt_records) {\n        var query = opt_query || '';\n        var offset = opt_offset || 0;\n        var limit = opt_limit || 500;\n        var allRecords = opt_records || [];\n        var params = {app: appId, query: query + ' limit ' + limit + ' offset ' + offset };\n        if (opt_fields) params.fields = opt_fields;\n        return kintone.api(kintone.api.url('/k/v1/records', true), 'GET', params).then(function(resp) {\n            allRecords = allRecords.concat(resp.records);\n            if (resp.records.length === limit) {\n                return fetchRecords(appId, query, opt_fields, offset + limit, limit, allRecords);\n            }\n            return allRecords;\n        });\n    }\n\n    // records convert to table rows \n    function convertToRows(records) {\n        var rows = records.map(function(record){\n            var keys = Object.keys(record);\n            var row = {};\n            keys.map(function(key){\n                row[key] = record[key].type === 'NUMBER' ? Number(record[key].value) : record[key].value;\n            });\n            return row;\n        });\n        return rows;\n    }\n\n})();\n\n\n\u534a\u88fd\u54c1\u306e\u767b\u9332\u3068\u6240\u8981\u91cf\u5c55\u958b\n\u534a\u88fd\u54c1\u3068\u6240\u8981\u91cf\u5c55\u958b\u306f\u3001kintone \u3067\u6271\u3046\u306e\u306f\u5411\u304b\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u304a\u8a66\u3057\u3068\u3044\u3046\u3053\u3068\u3067\u3002\n\n\u539f\u6750\u6599\u306b\u3001\u534a\u88fd\u54c1\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u534a\u88fd\u54c1\u306e\u539f\u6750\u6599\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n\n\u51e6\u7406\u3068\u3057\u3066\u306f\u3001\u534a\u88fd\u54c1\u306e\u539f\u6750\u6599\u3092\u6c42\u3081\u308b\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u534a\u88fd\u54c1\u306e\u968e\u5c64\u304c\u591a\u3044\u5834\u5408\u306f\u3001\u534a\u88fd\u54c1\u306e\u539f\u6750\u6599\u3092\u6c42\u3081\u308b\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\n////////////////////////////////////////////////////////////////////////////\n// kintone JavaScript: Summary of kintone records by alasql.\n//  2017.02.28 by rex0220\n////////////////////////////////////////////////////////////////////////////\n(function() {\n    \"use strict\";\n\n    // \u4e00\u89a7\u8868\u793a\n    kintone.events.on(\"app.record.detail.show\", function(event) {\n\n        var record = event.record;\n\n        var obj = {};\n        var appId1 = 749;\n        var q1 = '\u88fd\u54c1\u540d = \"' + record['\u88fd\u54c1\u540d'].value + '\" and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n\n        // \u539f\u6750\u6599\u53d6\u5f97\n        fetchRecords(appId1, q1, ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d']).then(function(records) {\n            obj.rs1 = convertToRows(records);\n            console.log('rs1', JSON.stringify(obj.rs1));\n\n            var partNames = {};\n            obj.rs1.map(function(row) {\n                partNames['\"' + row['\u539f\u6750\u6599\u540d'] + '\"'] = 1;\n            });\n            var strNames = Object.keys(partNames).join(',');\n            console.log('\u539f\u6750\u6599\u540d', strNames);\n\n            // \u534a\u88fd\u54c1\u539f\u6750\u6599\u53d6\u5f97\n            var appId1 = 749;\n            var q1a = '\u88fd\u54c1\u540d in (' + strNames + ') and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            // var q1 = '\u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            return fetchRecords(appId1, q1a, ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d']);\n        }).then(function(records) {\n            obj.rs1a = convertToRows(records);\n            console.log('rs1a', JSON.stringify(obj.rs1a));\n\n            obj.rs1 = obj.rs1.concat(obj.rs1a);\n            console.log('rs1', JSON.stringify(obj.rs1));\n\n            var partNames = {};\n            obj.rs1.map(function(row) {\n                partNames['\"' + row['\u539f\u6750\u6599\u540d'] + '\"'] = 1;\n            });\n            var strNames = Object.keys(partNames).join(',');\n            console.log('\u539f\u6750\u6599\u540d', strNames);\n\n\n            // \u90e8\u54c1\u8abf\u9054\u60c5\u5831\u53d6\u5f97\n            var appId2 = 751;\n            var q2 = '\u539f\u6750\u6599\u540d in (' + strNames + ') and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            // var q1 = '\u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            return fetchRecords(appId2, q2, ['\u539f\u6750\u6599\u540d', '\u4f1a\u793e\u540d']);\n\n        }).then(function(records) {\n            obj.rs2 = convertToRows(records);\n            console.log('rs2', JSON.stringify(obj.rs2));\n\n            var companyNames = {};\n            obj.rs2.map(function(row) {\n                companyNames['\"' + row['\u4f1a\u793e\u540d'] + '\"'] = 1;\n            });\n\n            var strNames = Object.keys(companyNames).join(',');\n\n            console.log('\u4f1a\u793e\u540d', strNames);\n\n            // \u67fb\u5bdf\u60c5\u5831\u53d6\u5f97\n            var appId3 = 748;\n            var q3 = '\u4f1a\u793e\u540d in (' + strNames + ') and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            // var q1 = '\u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            return fetchRecords(appId3, q3, ['\u4f1a\u793e\u540d', '\u67fb\u5bdf\u5e74\u6708\u65e5', '\u67fb\u5bdf\u306e\u8a55\u4fa1']);\n\n        }).then(function(records) {\n            obj.rs3 = convertToRows(records);\n            console.log('rs3', JSON.stringify(obj.rs3));\n\n            var result1 = alasql(\n                \"SELECT  a.[\u88fd\u54c1\u540d], a.[\u539f\u6750\u6599\u540d], c.[\u4f1a\u793e\u540d], c.[\u67fb\u5bdf\u5e74\u6708\u65e5], c.[\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n                FROM ( \\\n                    SELECT [\u4f1a\u793e\u540d], FIRST([\u67fb\u5bdf\u5e74\u6708\u65e5]) as [\u67fb\u5bdf\u5e74\u6708\u65e5], FIRST([\u67fb\u5bdf\u306e\u8a55\u4fa1]) as [\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n                    FROM (SELECT * FROM ? ORDER BY [\u4f1a\u793e\u540d], [\u67fb\u5bdf\u5e74\u6708\u65e5] DESC) \\\n                    GROUP BY [\u4f1a\u793e\u540d] ) as c \\\n                JOIN ? as b ON b.[\u4f1a\u793e\u540d] = c.[\u4f1a\u793e\u540d]\\\n                JOIN ? as a ON a.[\u539f\u6750\u6599\u540d] = b.[\u539f\u6750\u6599\u540d]\\\n                ORDER BY a.[\u88fd\u54c1\u540d], a.[\u539f\u6750\u6599\u540d], c.[\u4f1a\u793e\u540d]\", [obj.rs3, obj.rs2, obj.rs1]);\n            console.log('r0a', result1);\n\n            // grid \u8868\u793a\n            var grid = kintone.app.record.getSpaceElement('xp-grid');\n            new Handsontable(grid, { \n                data: result1, \n                colWidths: [150, 150, 150, 100, 100],\n                colHeaders: ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d', '\u4f1a\u793e\u540d', '\u67fb\u5bdf\u5e74\u6708\u65e5', '\u67fb\u5bdf\u306e\u8a55\u4fa1'], \n                columns: [\n                    { data: '\u88fd\u54c1\u540d' },\n                    { data: '\u539f\u6750\u6599\u540d' },\n                    { data: '\u4f1a\u793e\u540d' },\n                    { data: '\u67fb\u5bdf\u5e74\u6708\u65e5' },\n                    { data: '\u67fb\u5bdf\u306e\u8a55\u4fa1' },\n                ],\n                readOnly: true \n            });\n\n        });\n\n        return event;\n    });\n\n\n    // get records\n    function fetchRecords(appId, opt_query, opt_fields, opt_offset, opt_limit, opt_records) {\n        var query = opt_query || '';\n        var offset = opt_offset || 0;\n        var limit = opt_limit || 500;\n        var allRecords = opt_records || [];\n        var params = {app: appId, query: query + ' limit ' + limit + ' offset ' + offset };\n        if (opt_fields) params.fields = opt_fields;\n        return kintone.api(kintone.api.url('/k/v1/records', true), 'GET', params).then(function(resp) {\n            allRecords = allRecords.concat(resp.records);\n            if (resp.records.length === limit) {\n                return fetchRecords(appId, query, opt_fields, offset + limit, limit, allRecords);\n            }\n            return allRecords;\n        });\n    }\n\n    // records convert to table rows \n    function convertToRows(records) {\n        var rows = records.map(function(record){\n            var keys = Object.keys(record);\n            var row = {};\n            keys.map(function(key){\n                row[key] = record[key].type === 'NUMBER' ? Number(record[key].value) : record[key].value;\n            });\n            return row;\n        });\n        return rows;\n    }\n\n})();\n\n\n\u3042\u3068\u304c\u304d\nGROUP BY \u3067 MAX(\u65e5\u4ed8) \u3092\u3059\u308b\u3068\u51fa\u6765\u306a\u3044\u3002\n\u6587\u5b57\u5217\u6bd4\u8f03\u306b\u306a\u308b\u305f\u3081\u304b\uff1f\n[kintone \u3067SQL\u3092\u4f7f\u3046](http://qiita.com/rex0220/items/4d0c757344e8ac144f8d) \u306e\u7d9a\u304d\u3002\n\u30b5\u30d6\u30af\u30a8\u30ea\u30fc\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n# \u90e8\u54c1\u3068\u6700\u65b0\u306e\u4f1a\u793e\u67fb\u5b9a\u3092 JOIN \u3057\u3066\u3001\u8868\u793a\n\n## \u90e8\u54c1\u8868\u306e\u96c6\u8a08\u7d50\u679c\n\n![2017-02-27_17h27_56.png](https://qiita-image-store.s3.amazonaws.com/0/100572/0c909db5-0e4c-f250-df5b-45ec57544e72.png)\n\n## \u539f\u6750\u6599\u306e\u8abf\u9054\u5148\n\n![2017-02-27_17h28_20.png](https://qiita-image-store.s3.amazonaws.com/0/100572/c1281c1b-e8fe-f01e-4a0a-e3ce21e01d2e.png)\n\n\n\n# \u5fc5\u8981\u30e9\u30a4\u30d6\u30e9\u30ea\n\n- [alasql.min.js](http://alasql.org/) : JavaScript \u3067 SQL \u304c\u4f7f\u3048\u307e\u3059\u3002\n- [handsontable](https://handsontable.com/?_ga=1.73131861.714310381.1484906350) : \u30b0\u30ea\u30c3\u30c9\u8868\u793a\u7528\n\n# \u96c6\u8a08\u30b3\u30fc\u30c9\n\n\u51e6\u7406\u6982\u8981\n\n- \u539f\u6750\u6599\u30a2\u30d7\u30ea\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\n- \u8abf\u9054\u5148\u306e\u4f1a\u793e\u540d\u3092\u53d6\u5f97\n- \u8abf\u9054\u5148\u306e\u4f1a\u793e\u540d\u3067\u67fb\u5bdf\u60c5\u5831\u306e\u30ec\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\n- json \u69cb\u9020\u3092\u7c21\u5358\u5316\n- SQL \u3067\u96c6\u8a08\uff08\u30b5\u30d6\u30af\u30a8\u30ea\u30fc\uff09\n\n\u30af\u30a8\u30ea\u30fc\u306e\u51e6\u7406\n\n- \u30b5\u30d6\u30af\u30a8\u30ea\u30fc\uff1a\u4f1a\u793e\u306e\u67fb\u5bdf\u5e74\u6708\u65e5\u3092\u964d\u9806\u306b\u4e26\u3079\u3066\u3001\u305d\u306e\u5148\u982d\uff08\u6700\u65b0\u65e5\u4ed8\uff09\u306e\u65e5\u4ed8\u30fb\u8a55\u4fa1\u3092\u53d6\u5f97\n- \u6700\u65b0\u306e\u67fb\u5bdf\u5e74\u6708\u65e5\u30fb\u8a55\u4fa1\u3068\u539f\u6750\u6599\u3092\u4f1a\u793e\u540d\u3067 JOIN \u3057\u3066\u3001\u539f\u6750\u6599\u306e\u540d\u524d\u9806\u306b\u8868\u793a\n\n\u88fd\u54c1\u306e\u5de5\u7a0b\u60c5\u5831\u304c\u3042\u308c\u3070\u3001\u5de5\u7a0b\u9806\u306b\u539f\u6750\u6599\u3092\u4e26\u3079\u305f\u3044\u3068\u3053\u308d\u3002\n\n\njoin \u306e\u5f8c\u306b\u30b5\u30d6\u30af\u30a8\u30ea\u30fc\u3092\u66f8\u3051\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u5c11\u3057\u914d\u5217\u306e\u9806\u756a\u306b\u6ce8\u610f\n\n```\n////////////////////////////////////////////////////////////////////////////\n// kintone JavaScript: Summary of kintone records by alasql.\n//  2017.02.27 by rex0220\n////////////////////////////////////////////////////////////////////////////\n(function() {\n    \"use strict\";\n\n    // \u4e00\u89a7\u8868\u793a\n    kintone.events.on(\"app.record.detail.show\", function(event) {\n\n        var record = event.record;\n\n        var obj = {};\n        var appId1 = 749;\n        var q1 = '\u88fd\u54c1\u540d = \"' + record['\u88fd\u54c1\u540d'].value + '\" and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n\n        // \u539f\u6750\u6599\u53d6\u5f97\n        fetchRecords(appId1, q1, ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d', '\u4f1a\u793e\u540d']).then(function(records) {\n            obj.rs1 = convertToRows(records);\n            console.log('rs1', JSON.stringify(obj.rs1));\n\n            var companyNames = {};\n            obj.rs1.map(function(row) {\n                companyNames['\"' + row['\u4f1a\u793e\u540d'] + '\"'] = 1;\n            });\n\n            var strNames = Object.keys(companyNames).join(',');\n\n            console.log('\u4f1a\u793e\u540d', strNames);\n\n            if (!strNames)\n                return event;\n\n            // \u67fb\u5bdf\u60c5\u5831\u53d6\u5f97\n            var appId2 = 748;\n            var q2 = '\u4f1a\u793e\u540d in (' + strNames + ') and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            // var q1 = '\u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            return fetchRecords(appId2, q2, ['\u4f1a\u793e\u540d', '\u67fb\u5bdf\u5e74\u6708\u65e5', '\u67fb\u5bdf\u306e\u8a55\u4fa1']);\n\n        }).then(function(records) {\n            obj.rs2 = convertToRows(records);\n            console.log('rs2', JSON.stringify(obj.rs2));\n\n            // var result0 = alasql(\n            //     \"SELECT [\u4f1a\u793e\u540d], FIRST([\u67fb\u5bdf\u5e74\u6708\u65e5]) as [\u67fb\u5bdf\u5e74\u6708\u65e5], FIRST([\u67fb\u5bdf\u306e\u8a55\u4fa1]) as [\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n            //     FROM (SELECT * FROM ? ORDER BY [\u4f1a\u793e\u540d], [\u67fb\u5bdf\u5e74\u6708\u65e5] DESC) \\\n            //     GROUP BY [\u4f1a\u793e\u540d]\", [obj.rs2]);\n            // console.log('r0', result0);\n\n            var result1 = alasql(\n                \"SELECT  a.[\u88fd\u54c1\u540d], a.[\u539f\u6750\u6599\u540d], a.[\u4f1a\u793e\u540d], b.[\u67fb\u5bdf\u5e74\u6708\u65e5], b.[\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n                FROM ( \\\n                    SELECT [\u4f1a\u793e\u540d], FIRST([\u67fb\u5bdf\u5e74\u6708\u65e5]) as [\u67fb\u5bdf\u5e74\u6708\u65e5], FIRST([\u67fb\u5bdf\u306e\u8a55\u4fa1]) as [\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n                    FROM (SELECT * FROM ? ORDER BY [\u4f1a\u793e\u540d], [\u67fb\u5bdf\u5e74\u6708\u65e5] DESC) \\\n                    GROUP BY [\u4f1a\u793e\u540d] ) as b \\\n                    join ? as a on a.[\u4f1a\u793e\u540d] = b.[\u4f1a\u793e\u540d]\\\n                ORDER BY a.[\u88fd\u54c1\u540d], a.[\u539f\u6750\u6599\u540d], a.[\u4f1a\u793e\u540d]\", [obj.rs2, obj.rs1]);\n            console.log('r0a', result1);\n\n            // grid \u8868\u793a\n            var grid = kintone.app.record.getSpaceElement('xp-grid');\n            new Handsontable(grid, { \n                data: result1, \n                colWidths: [150, 150, 150, 100, 100],\n                colHeaders: ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d', '\u4f1a\u793e\u540d', '\u67fb\u5bdf\u5e74\u6708\u65e5', '\u67fb\u5bdf\u306e\u8a55\u4fa1'], \n                columns: [\n                    { data: '\u88fd\u54c1\u540d' },\n                    { data: '\u539f\u6750\u6599\u540d' },\n                    { data: '\u4f1a\u793e\u540d' },\n                    { data: '\u67fb\u5bdf\u5e74\u6708\u65e5' },\n                    { data: '\u67fb\u5bdf\u306e\u8a55\u4fa1' },\n                ],\n                readOnly: true \n            });\n\n        });\n\n        return event;\n    });\n\n\n    // get records\n    function fetchRecords(appId, opt_query, opt_fields, opt_offset, opt_limit, opt_records) {\n        var query = opt_query || '';\n        var offset = opt_offset || 0;\n        var limit = opt_limit || 500;\n        var allRecords = opt_records || [];\n        var params = {app: appId, query: query + ' limit ' + limit + ' offset ' + offset };\n        if (opt_fields) params.fields = opt_fields;\n        return kintone.api(kintone.api.url('/k/v1/records', true), 'GET', params).then(function(resp) {\n            allRecords = allRecords.concat(resp.records);\n            if (resp.records.length === limit) {\n                return fetchRecords(appId, query, opt_fields, offset + limit, limit, allRecords);\n            }\n            return allRecords;\n        });\n    }\n\n    // records convert to table rows \n    function convertToRows(records) {\n        var rows = records.map(function(record){\n            var keys = Object.keys(record);\n            var row = {};\n            keys.map(function(key){\n                row[key] = record[key].type === 'NUMBER' ? Number(record[key].value) : record[key].value;\n            });\n            return row;\n        });\n        return rows;\n    }\n\n})();\n```\n\n# \u90e8\u54c1\u8868\u3001\u90e8\u54c1\u8abf\u9054\u3001\u67fb\u5bdf\u60c5\u5831\u30a2\u30d7\u30ea\u306b\u5206\u304b\u308c\u3066\u3044\u308b\u5834\u5408\n\n\u51e6\u7406\u6982\u8981\n\n\uff13\u672c\u306e\u30a2\u30d7\u30ea\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001SQL \u3067\u7d44\u307f\u7acb\u3066\u3066\u3042\u3052\u308b\u3060\u3051\u3067\u3059\u306e\u3067\u3001\u57fa\u672c\u306f\u540c\u3058\u3067\u3059\u3002\n\u7121\u7406\u306b\uff13\u3064\u306e\u914d\u5217\u3092 JOIN \u3057\u306a\u304f\u3066\u3082\u3001\uff12\u672c\u306e JOIN \u7d50\u679c\u304c\u914d\u5217\u306b\u4f5c\u3063\u3066\u3001\u3055\u3089\u306b JOIN \u3057\u3066\u3082kintone \u3067\u6271\u3046\u30c7\u30fc\u30bf\u4ef6\u6570\u3067\u3042\u308c\u3070\u51e6\u7406\u6642\u9593\u306f\u305d\u3093\u306a\u306b\u5909\u308f\u308a\u307e\u305b\u3093\u3002\n\n\n```\n////////////////////////////////////////////////////////////////////////////\n// kintone JavaScript: Summary of kintone records by alasql.\n//  2017.02.28 by rex0220\n////////////////////////////////////////////////////////////////////////////\n(function() {\n    \"use strict\";\n\n    // \u4e00\u89a7\u8868\u793a\n    kintone.events.on(\"app.record.detail.show\", function(event) {\n\n        var record = event.record;\n\n        var obj = {};\n        var appId1 = 749;\n        var q1 = '\u88fd\u54c1\u540d = \"' + record['\u88fd\u54c1\u540d'].value + '\" and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n\n        // \u539f\u6750\u6599\u53d6\u5f97\n        fetchRecords(appId1, q1, ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d']).then(function(records) {\n            obj.rs1 = convertToRows(records);\n            console.log('rs1', JSON.stringify(obj.rs1));\n\n            var partNames = {};\n            obj.rs1.map(function(row) {\n                partNames['\"' + row['\u539f\u6750\u6599\u540d'] + '\"'] = 1;\n            });\n            var strNames = Object.keys(partNames).join(',');\n            console.log('\u539f\u6750\u6599\u540d', strNames);\n\n            // \u90e8\u54c1\u8abf\u9054\u60c5\u5831\u53d6\u5f97\n            var appId2 = 751;\n            var q2 = '\u539f\u6750\u6599\u540d in (' + strNames + ') and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            // var q1 = '\u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            return fetchRecords(appId2, q2, ['\u539f\u6750\u6599\u540d', '\u4f1a\u793e\u540d']);\n\n        }).then(function(records) {\n            obj.rs2 = convertToRows(records);\n            console.log('rs2', JSON.stringify(obj.rs2));\n\n            var companyNames = {};\n            obj.rs2.map(function(row) {\n                companyNames['\"' + row['\u4f1a\u793e\u540d'] + '\"'] = 1;\n            });\n\n            var strNames = Object.keys(companyNames).join(',');\n\n            console.log('\u4f1a\u793e\u540d', strNames);\n\n            // \u67fb\u5bdf\u60c5\u5831\u53d6\u5f97\n            var appId3 = 748;\n            var q3 = '\u4f1a\u793e\u540d in (' + strNames + ') and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            // var q1 = '\u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            return fetchRecords(appId3, q3, ['\u4f1a\u793e\u540d', '\u67fb\u5bdf\u5e74\u6708\u65e5', '\u67fb\u5bdf\u306e\u8a55\u4fa1']);\n\n        }).then(function(records) {\n            obj.rs3 = convertToRows(records);\n            console.log('rs3', JSON.stringify(obj.rs3));\n\n            var result1 = alasql(\n                \"SELECT  a.[\u88fd\u54c1\u540d], a.[\u539f\u6750\u6599\u540d], c.[\u4f1a\u793e\u540d], c.[\u67fb\u5bdf\u5e74\u6708\u65e5], c.[\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n                FROM ( \\\n                    SELECT [\u4f1a\u793e\u540d], FIRST([\u67fb\u5bdf\u5e74\u6708\u65e5]) as [\u67fb\u5bdf\u5e74\u6708\u65e5], FIRST([\u67fb\u5bdf\u306e\u8a55\u4fa1]) as [\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n                    FROM (SELECT * FROM ? ORDER BY [\u4f1a\u793e\u540d], [\u67fb\u5bdf\u5e74\u6708\u65e5] DESC) \\\n                    GROUP BY [\u4f1a\u793e\u540d] ) as c \\\n                JOIN ? as b ON b.[\u4f1a\u793e\u540d] = c.[\u4f1a\u793e\u540d]\\\n                JOIN ? as a ON a.[\u539f\u6750\u6599\u540d] = b.[\u539f\u6750\u6599\u540d]\\\n                ORDER BY a.[\u88fd\u54c1\u540d], a.[\u539f\u6750\u6599\u540d], c.[\u4f1a\u793e\u540d]\", [obj.rs3, obj.rs2, obj.rs1]);\n            console.log('r0a', result1);\n\n            // grid \u8868\u793a\n            var grid = kintone.app.record.getSpaceElement('xp-grid');\n            new Handsontable(grid, { \n                data: result1, \n                colWidths: [150, 150, 150, 100, 100],\n                colHeaders: ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d', '\u4f1a\u793e\u540d', '\u67fb\u5bdf\u5e74\u6708\u65e5', '\u67fb\u5bdf\u306e\u8a55\u4fa1'], \n                columns: [\n                    { data: '\u88fd\u54c1\u540d' },\n                    { data: '\u539f\u6750\u6599\u540d' },\n                    { data: '\u4f1a\u793e\u540d' },\n                    { data: '\u67fb\u5bdf\u5e74\u6708\u65e5' },\n                    { data: '\u67fb\u5bdf\u306e\u8a55\u4fa1' },\n                ],\n                readOnly: true \n            });\n\n        });\n\n        return event;\n    });\n\n\n    // get records\n    function fetchRecords(appId, opt_query, opt_fields, opt_offset, opt_limit, opt_records) {\n        var query = opt_query || '';\n        var offset = opt_offset || 0;\n        var limit = opt_limit || 500;\n        var allRecords = opt_records || [];\n        var params = {app: appId, query: query + ' limit ' + limit + ' offset ' + offset };\n        if (opt_fields) params.fields = opt_fields;\n        return kintone.api(kintone.api.url('/k/v1/records', true), 'GET', params).then(function(resp) {\n            allRecords = allRecords.concat(resp.records);\n            if (resp.records.length === limit) {\n                return fetchRecords(appId, query, opt_fields, offset + limit, limit, allRecords);\n            }\n            return allRecords;\n        });\n    }\n\n    // records convert to table rows \n    function convertToRows(records) {\n        var rows = records.map(function(record){\n            var keys = Object.keys(record);\n            var row = {};\n            keys.map(function(key){\n                row[key] = record[key].type === 'NUMBER' ? Number(record[key].value) : record[key].value;\n            });\n            return row;\n        });\n        return rows;\n    }\n\n})();\n```\n\n# \u534a\u88fd\u54c1\u306e\u767b\u9332\u3068\u6240\u8981\u91cf\u5c55\u958b\n\n\u534a\u88fd\u54c1\u3068\u6240\u8981\u91cf\u5c55\u958b\u306f\u3001kintone \u3067\u6271\u3046\u306e\u306f\u5411\u304b\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u304a\u8a66\u3057\u3068\u3044\u3046\u3053\u3068\u3067\u3002\n\n- \u539f\u6750\u6599\u306b\u3001\u534a\u88fd\u54c1\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n- \u534a\u88fd\u54c1\u306e\u539f\u6750\u6599\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n![2017-03-01_00h02_29.png](https://qiita-image-store.s3.amazonaws.com/0/100572/e3f8037e-fde1-fa43-5d68-fca46332a3de.png)\n\n\n\u51e6\u7406\u3068\u3057\u3066\u306f\u3001\u534a\u88fd\u54c1\u306e\u539f\u6750\u6599\u3092\u6c42\u3081\u308b\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u534a\u88fd\u54c1\u306e\u968e\u5c64\u304c\u591a\u3044\u5834\u5408\u306f\u3001\u534a\u88fd\u54c1\u306e\u539f\u6750\u6599\u3092\u6c42\u3081\u308b\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\u3002\n\n\n```\n////////////////////////////////////////////////////////////////////////////\n// kintone JavaScript: Summary of kintone records by alasql.\n//  2017.02.28 by rex0220\n////////////////////////////////////////////////////////////////////////////\n(function() {\n    \"use strict\";\n\n    // \u4e00\u89a7\u8868\u793a\n    kintone.events.on(\"app.record.detail.show\", function(event) {\n\n        var record = event.record;\n\n        var obj = {};\n        var appId1 = 749;\n        var q1 = '\u88fd\u54c1\u540d = \"' + record['\u88fd\u54c1\u540d'].value + '\" and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n\n        // \u539f\u6750\u6599\u53d6\u5f97\n        fetchRecords(appId1, q1, ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d']).then(function(records) {\n            obj.rs1 = convertToRows(records);\n            console.log('rs1', JSON.stringify(obj.rs1));\n\n            var partNames = {};\n            obj.rs1.map(function(row) {\n                partNames['\"' + row['\u539f\u6750\u6599\u540d'] + '\"'] = 1;\n            });\n            var strNames = Object.keys(partNames).join(',');\n            console.log('\u539f\u6750\u6599\u540d', strNames);\n\n            // \u534a\u88fd\u54c1\u539f\u6750\u6599\u53d6\u5f97\n            var appId1 = 749;\n            var q1a = '\u88fd\u54c1\u540d in (' + strNames + ') and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            // var q1 = '\u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            return fetchRecords(appId1, q1a, ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d']);\n        }).then(function(records) {\n            obj.rs1a = convertToRows(records);\n            console.log('rs1a', JSON.stringify(obj.rs1a));\n\n            obj.rs1 = obj.rs1.concat(obj.rs1a);\n            console.log('rs1', JSON.stringify(obj.rs1));\n\n            var partNames = {};\n            obj.rs1.map(function(row) {\n                partNames['\"' + row['\u539f\u6750\u6599\u540d'] + '\"'] = 1;\n            });\n            var strNames = Object.keys(partNames).join(',');\n            console.log('\u539f\u6750\u6599\u540d', strNames);\n\n\n            // \u90e8\u54c1\u8abf\u9054\u60c5\u5831\u53d6\u5f97\n            var appId2 = 751;\n            var q2 = '\u539f\u6750\u6599\u540d in (' + strNames + ') and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            // var q1 = '\u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            return fetchRecords(appId2, q2, ['\u539f\u6750\u6599\u540d', '\u4f1a\u793e\u540d']);\n\n        }).then(function(records) {\n            obj.rs2 = convertToRows(records);\n            console.log('rs2', JSON.stringify(obj.rs2));\n\n            var companyNames = {};\n            obj.rs2.map(function(row) {\n                companyNames['\"' + row['\u4f1a\u793e\u540d'] + '\"'] = 1;\n            });\n\n            var strNames = Object.keys(companyNames).join(',');\n\n            console.log('\u4f1a\u793e\u540d', strNames);\n\n            // \u67fb\u5bdf\u60c5\u5831\u53d6\u5f97\n            var appId3 = 748;\n            var q3 = '\u4f1a\u793e\u540d in (' + strNames + ') and \u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            // var q1 = '\u524a\u9664\u30d5\u30e9\u30b0 not in (\"\u524a\u9664\")';\n            return fetchRecords(appId3, q3, ['\u4f1a\u793e\u540d', '\u67fb\u5bdf\u5e74\u6708\u65e5', '\u67fb\u5bdf\u306e\u8a55\u4fa1']);\n\n        }).then(function(records) {\n            obj.rs3 = convertToRows(records);\n            console.log('rs3', JSON.stringify(obj.rs3));\n\n            var result1 = alasql(\n                \"SELECT  a.[\u88fd\u54c1\u540d], a.[\u539f\u6750\u6599\u540d], c.[\u4f1a\u793e\u540d], c.[\u67fb\u5bdf\u5e74\u6708\u65e5], c.[\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n                FROM ( \\\n                    SELECT [\u4f1a\u793e\u540d], FIRST([\u67fb\u5bdf\u5e74\u6708\u65e5]) as [\u67fb\u5bdf\u5e74\u6708\u65e5], FIRST([\u67fb\u5bdf\u306e\u8a55\u4fa1]) as [\u67fb\u5bdf\u306e\u8a55\u4fa1]\\\n                    FROM (SELECT * FROM ? ORDER BY [\u4f1a\u793e\u540d], [\u67fb\u5bdf\u5e74\u6708\u65e5] DESC) \\\n                    GROUP BY [\u4f1a\u793e\u540d] ) as c \\\n                JOIN ? as b ON b.[\u4f1a\u793e\u540d] = c.[\u4f1a\u793e\u540d]\\\n                JOIN ? as a ON a.[\u539f\u6750\u6599\u540d] = b.[\u539f\u6750\u6599\u540d]\\\n                ORDER BY a.[\u88fd\u54c1\u540d], a.[\u539f\u6750\u6599\u540d], c.[\u4f1a\u793e\u540d]\", [obj.rs3, obj.rs2, obj.rs1]);\n            console.log('r0a', result1);\n\n            // grid \u8868\u793a\n            var grid = kintone.app.record.getSpaceElement('xp-grid');\n            new Handsontable(grid, { \n                data: result1, \n                colWidths: [150, 150, 150, 100, 100],\n                colHeaders: ['\u88fd\u54c1\u540d', '\u539f\u6750\u6599\u540d', '\u4f1a\u793e\u540d', '\u67fb\u5bdf\u5e74\u6708\u65e5', '\u67fb\u5bdf\u306e\u8a55\u4fa1'], \n                columns: [\n                    { data: '\u88fd\u54c1\u540d' },\n                    { data: '\u539f\u6750\u6599\u540d' },\n                    { data: '\u4f1a\u793e\u540d' },\n                    { data: '\u67fb\u5bdf\u5e74\u6708\u65e5' },\n                    { data: '\u67fb\u5bdf\u306e\u8a55\u4fa1' },\n                ],\n                readOnly: true \n            });\n\n        });\n\n        return event;\n    });\n\n\n    // get records\n    function fetchRecords(appId, opt_query, opt_fields, opt_offset, opt_limit, opt_records) {\n        var query = opt_query || '';\n        var offset = opt_offset || 0;\n        var limit = opt_limit || 500;\n        var allRecords = opt_records || [];\n        var params = {app: appId, query: query + ' limit ' + limit + ' offset ' + offset };\n        if (opt_fields) params.fields = opt_fields;\n        return kintone.api(kintone.api.url('/k/v1/records', true), 'GET', params).then(function(resp) {\n            allRecords = allRecords.concat(resp.records);\n            if (resp.records.length === limit) {\n                return fetchRecords(appId, query, opt_fields, offset + limit, limit, allRecords);\n            }\n            return allRecords;\n        });\n    }\n\n    // records convert to table rows \n    function convertToRows(records) {\n        var rows = records.map(function(record){\n            var keys = Object.keys(record);\n            var row = {};\n            keys.map(function(key){\n                row[key] = record[key].type === 'NUMBER' ? Number(record[key].value) : record[key].value;\n            });\n            return row;\n        });\n        return rows;\n    }\n\n})();\n```\n\n\n\n\n# \u3042\u3068\u304c\u304d\n\nGROUP BY \u3067 MAX(\u65e5\u4ed8) \u3092\u3059\u308b\u3068\u51fa\u6765\u306a\u3044\u3002\n\u6587\u5b57\u5217\u6bd4\u8f03\u306b\u306a\u308b\u305f\u3081\u304b\uff1f\n", "tags": ["kintone", "alasql", "JavaScript"]}