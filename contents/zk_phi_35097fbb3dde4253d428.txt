{"context": " More than 1 year has passed since last update.Emacs \u306e\u30ab\u30e9\u30fc\u30b9\u30ad\u30fc\u30e0\u3092\u81ea\u529b\u3067\u5909\u66f4\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u3042\u3089\u3086\u308b face \u306e\u8272\u3092\u4e00\u3064\u4e00\u3064\u8a2d\u5b9a\u3057\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u3063\u3066\u3001\u9762\u5012\u3067\u3059\u3002\n\u300c\u5b8c\u6210\u3057\u305f\u306f\u3044\u3044\u3051\u3069\u306a\u3093\u304b\u9055\u548c\u611f\u2026\u300d\u3068\u306a\u308b\u3053\u3068\u3082\u3057\u3070\u3057\u3070\u2026\u2026\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u81ea\u5206\u304c\u304b\u3064\u3066\u4f7f\u3063\u3066\u3044\u305f\u3001\u7c21\u5358\u306b\u305d\u3053\u305d\u3053\u307e\u3068\u3082\u306a\u30ab\u30e9\u30fc\u30b9\u30ad\u30fc\u30e0\u3092\u751f\u6210\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u6709\u540d\u306a\u30ab\u30e9\u30fc\u30b9\u30ad\u30fc\u30e0\u306b\u3001 solarized \u3068\u3044\u3046\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\nsolarized \u306e\u30b3\u30fc\u30c9\u306f\u3001\u307e\u305a\u4f7f\u3046\u8272\u306e\u4e00\u89a7\u3092\u5b9a\u7fa9\u3057\u3001\u305d\u306e\u4e00\u89a7\u3092\u3082\u3068\u306b\u5404\u3005\u306e face \u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3092\u5229\u7528\u3057\u3066\u3001\u300c\u4f7f\u3046\u8272\u306e\u4e00\u89a7\u300d\u3092\u3042\u3089\u304b\u3058\u3081\u81ea\u5206\u304c\u4f7f\u3044\u305f\u3044\u8272\u3067\u4e0a\u66f8\u304d\u3057\u3066\u304a\u304d\u3001\u3042\u3068\u306f solarized \u306b\u826f\u3044\u611f\u3058\u306b\u914d\u8272\u3057\u3066\u3082\u3089\u3046\u3001\u3068\u3044\u3046\u65b9\u6cd5\u3067\u30ab\u30e9\u30fc\u30b9\u30ad\u30fc\u30e0\u3092\u751f\u6210\u3059\u308b\u306e\u304c\u6b21\u306e\u30de\u30af\u30ed\u3067\u3059\u3002\n(require 'color)\n(require 'solarized-definitions)\n\n(defun my-mix-colors (color1 color2 percent)\n  (cl-destructuring-bind ((r g b) rr gg bb)\n      (cons (color-name-to-rgb color1) (color-name-to-rgb color2))\n    (let* ((x (/ percent 100.0)) (y (- 1 x)))\n      (color-rgb-to-hex (+ (* r y) (* rr x)) (+ (* g y) (* gg x)) (+ (* b y) (* bb x))))))\n\n(defmacro create-solarized-based-theme\n  (name mode darkest-base brightest-base yellow orange red magenta violet blue cyan green)\n  (declare (indent 2))\n  (let* ((solarized-colors\n          `((base03  ,darkest-base)\n            (base02  ,(my-mix-colors darkest-base brightest-base 3))\n            (base01  ,(my-mix-colors darkest-base brightest-base 35))\n            (base00  ,(my-mix-colors darkest-base brightest-base 40))\n            (base0   ,(my-mix-colors darkest-base brightest-base 52))\n            (base1   ,(my-mix-colors darkest-base brightest-base 58))\n            (base2   ,(my-mix-colors darkest-base brightest-base 95))\n            (base3   ,brightest-base)\n            (yellow ,yellow) (orange ,orange) (red ,red) (magenta ,magenta)\n            (violet ,violet) (blue ,blue) (cyan ,cyan) (green ,green)))\n         (defs (solarized-color-definitions mode))\n         (theme-vars (mapcar (lambda (def) (list (car def) (cdr def))) (second defs)))\n         (theme-faces (first defs)))\n    `(progn\n       (deftheme ,name)\n       (apply 'custom-theme-set-variables ',name ',theme-vars)\n       (apply 'custom-theme-set-faces ',name ',theme-faces)\n       (provide-theme ',name))))\n\n\u3053\u306e\u30de\u30af\u30ed\u3092\u4f7f\u3046\u3068\u3001\u305f\u3068\u3048\u3070\u6b21\u306e\u3088\u3046\u306b\u7c21\u5358\u306b\u30ab\u30e9\u30fc\u30b9\u30ad\u30fc\u30e0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n(create-solarized-based-theme\n solarized-jellybeans ;; \u30c6\u30fc\u30de\u306e\u540d\u524d\n dark                 ;; dark \u307e\u305f\u306f light\n \"#202020\"            ;; \u4e00\u756a\u6697\u3044\u8272\n \"#ffffff\"            ;; \u4e00\u756a\u660e\u308b\u3044\u8272\n ;; \u30cf\u30a4\u30e9\u30a4\u30c8\u8272\u00d7\uff18\n \"#ffb964\" \"#8fbfdc\" \"#a04040\" \"#b05080\" \"#805090\" \"#fad08a\" \"#99ad6a\" \"#8fbfdc\")\n\n\u3053\u308c\u306f vim \u306e jellybeans \u3092\u30d9\u30fc\u30b9\u306b\u3057\u305f\u914d\u8272\u3067\u3059\u3002\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30e2\u30fc\u30c9\u306b light \u3092\u6307\u5b9a\u3059\u308c\u3070\u767d\u80cc\u666f\u306b\u306a\u308a\u307e\u3059\u3002\n(create-solarized-based-theme solarized-mesa light\n      \"#000000\" \"#faf5ee\" \"#3388dd\" \"#ac3d1a\" \"#dd2222\"\n      \"#8b008b\" \"#00b7f0\" \"#1388a2\" \"#104e8b\" \"#00688b\")\n\n\u3053\u308c\u306f emacs \u306e mesa \u3092\u30d9\u30fc\u30b9\u306b\u3057\u305f\u914d\u8272\u3067\u3059\u3002\n\n\u304a\u624b\u8efd\u306b\u6c17\u5206\u3092\u5909\u3048\u3089\u308c\u308b\u306e\u3067\u3001\u3088\u304b\u3063\u305f\u3089\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nEmacs \u306e\u30ab\u30e9\u30fc\u30b9\u30ad\u30fc\u30e0\u3092\u81ea\u529b\u3067\u5909\u66f4\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u3042\u3089\u3086\u308b face \u306e\u8272\u3092\u4e00\u3064\u4e00\u3064\u8a2d\u5b9a\u3057\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u3063\u3066\u3001\u9762\u5012\u3067\u3059\u3002\n\n\u300c\u5b8c\u6210\u3057\u305f\u306f\u3044\u3044\u3051\u3069\u306a\u3093\u304b\u9055\u548c\u611f\u2026\u300d\u3068\u306a\u308b\u3053\u3068\u3082\u3057\u3070\u3057\u3070\u2026\u2026\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u81ea\u5206\u304c\u304b\u3064\u3066\u4f7f\u3063\u3066\u3044\u305f\u3001\u7c21\u5358\u306b\u305d\u3053\u305d\u3053\u307e\u3068\u3082\u306a\u30ab\u30e9\u30fc\u30b9\u30ad\u30fc\u30e0\u3092\u751f\u6210\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n----\n\n\u6709\u540d\u306a\u30ab\u30e9\u30fc\u30b9\u30ad\u30fc\u30e0\u306b\u3001 [solarized](https://github.com/sellout/emacs-color-theme-solarized) \u3068\u3044\u3046\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\n![solari.png](https://qiita-image-store.s3.amazonaws.com/0/54240/e068b0cd-5bc1-f41e-0c94-09f2f295885f.png)\n\nsolarized \u306e\u30b3\u30fc\u30c9\u306f\u3001\u307e\u305a\u4f7f\u3046\u8272\u306e\u4e00\u89a7\u3092\u5b9a\u7fa9\u3057\u3001\u305d\u306e\u4e00\u89a7\u3092\u3082\u3068\u306b\u5404\u3005\u306e face \u306e\u8272\u3092\u8a2d\u5b9a\u3059\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3092\u5229\u7528\u3057\u3066\u3001\u300c\u4f7f\u3046\u8272\u306e\u4e00\u89a7\u300d\u3092\u3042\u3089\u304b\u3058\u3081\u81ea\u5206\u304c\u4f7f\u3044\u305f\u3044\u8272\u3067\u4e0a\u66f8\u304d\u3057\u3066\u304a\u304d\u3001\u3042\u3068\u306f solarized \u306b\u826f\u3044\u611f\u3058\u306b\u914d\u8272\u3057\u3066\u3082\u3089\u3046\u3001\u3068\u3044\u3046\u65b9\u6cd5\u3067\u30ab\u30e9\u30fc\u30b9\u30ad\u30fc\u30e0\u3092\u751f\u6210\u3059\u308b\u306e\u304c\u6b21\u306e\u30de\u30af\u30ed\u3067\u3059\u3002\n\n```el\n(require 'color)\n(require 'solarized-definitions)\n\n(defun my-mix-colors (color1 color2 percent)\n  (cl-destructuring-bind ((r g b) rr gg bb)\n      (cons (color-name-to-rgb color1) (color-name-to-rgb color2))\n    (let* ((x (/ percent 100.0)) (y (- 1 x)))\n      (color-rgb-to-hex (+ (* r y) (* rr x)) (+ (* g y) (* gg x)) (+ (* b y) (* bb x))))))\n\n(defmacro create-solarized-based-theme\n  (name mode darkest-base brightest-base yellow orange red magenta violet blue cyan green)\n  (declare (indent 2))\n  (let* ((solarized-colors\n          `((base03  ,darkest-base)\n            (base02  ,(my-mix-colors darkest-base brightest-base 3))\n            (base01  ,(my-mix-colors darkest-base brightest-base 35))\n            (base00  ,(my-mix-colors darkest-base brightest-base 40))\n            (base0   ,(my-mix-colors darkest-base brightest-base 52))\n            (base1   ,(my-mix-colors darkest-base brightest-base 58))\n            (base2   ,(my-mix-colors darkest-base brightest-base 95))\n            (base3   ,brightest-base)\n            (yellow ,yellow) (orange ,orange) (red ,red) (magenta ,magenta)\n            (violet ,violet) (blue ,blue) (cyan ,cyan) (green ,green)))\n         (defs (solarized-color-definitions mode))\n         (theme-vars (mapcar (lambda (def) (list (car def) (cdr def))) (second defs)))\n         (theme-faces (first defs)))\n    `(progn\n       (deftheme ,name)\n       (apply 'custom-theme-set-variables ',name ',theme-vars)\n       (apply 'custom-theme-set-faces ',name ',theme-faces)\n       (provide-theme ',name))))\n```\n\n\u3053\u306e\u30de\u30af\u30ed\u3092\u4f7f\u3046\u3068\u3001\u305f\u3068\u3048\u3070\u6b21\u306e\u3088\u3046\u306b\u7c21\u5358\u306b\u30ab\u30e9\u30fc\u30b9\u30ad\u30fc\u30e0\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```el\n(create-solarized-based-theme\n solarized-jellybeans ;; \u30c6\u30fc\u30de\u306e\u540d\u524d\n dark                 ;; dark \u307e\u305f\u306f light\n \"#202020\"            ;; \u4e00\u756a\u6697\u3044\u8272\n \"#ffffff\"            ;; \u4e00\u756a\u660e\u308b\u3044\u8272\n ;; \u30cf\u30a4\u30e9\u30a4\u30c8\u8272\u00d7\uff18\n \"#ffb964\" \"#8fbfdc\" \"#a04040\" \"#b05080\" \"#805090\" \"#fad08a\" \"#99ad6a\" \"#8fbfdc\")\n```\n\n\u3053\u308c\u306f vim \u306e jellybeans \u3092\u30d9\u30fc\u30b9\u306b\u3057\u305f\u914d\u8272\u3067\u3059\u3002\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\n![jelly.png](https://qiita-image-store.s3.amazonaws.com/0/54240/5fc502ae-8288-63df-8888-625afeda3794.png)\n\n\u30e2\u30fc\u30c9\u306b light \u3092\u6307\u5b9a\u3059\u308c\u3070\u767d\u80cc\u666f\u306b\u306a\u308a\u307e\u3059\u3002\n\n```el\n(create-solarized-based-theme solarized-mesa light\n      \"#000000\" \"#faf5ee\" \"#3388dd\" \"#ac3d1a\" \"#dd2222\"\n      \"#8b008b\" \"#00b7f0\" \"#1388a2\" \"#104e8b\" \"#00688b\")\n```\n\n\u3053\u308c\u306f emacs \u306e mesa \u3092\u30d9\u30fc\u30b9\u306b\u3057\u305f\u914d\u8272\u3067\u3059\u3002\n\n![mesa.png](https://qiita-image-store.s3.amazonaws.com/0/54240/d46cb19c-f173-eb45-72ab-7fc5a86a0b4e.png)\n\n\u304a\u624b\u8efd\u306b\u6c17\u5206\u3092\u5909\u3048\u3089\u308c\u308b\u306e\u3067\u3001\u3088\u304b\u3063\u305f\u3089\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["Emacs", "emacs-lisp"]}