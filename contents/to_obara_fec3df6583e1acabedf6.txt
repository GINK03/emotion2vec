{"context": "\u306a\u3093\u304b\u3001\u3082\u3063\u3068\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308b\u3068\u601d\u3046\u3093\u3060\u3051\u3069\u3001\u601d\u3044\u3064\u304b\u306a\u3044\u306e\u3067\u529b\u6280\u3067\u5b9f\u88c5\u3067\u3059\u3002\nString+Splitter.swift\n\nextension String {\n\n  /** \u6587\u5b57\u5217\u3092\u56fa\u5b9a\u9577\u3067\u5206\u5272\u3059\u308b\n  - Parameter len: \u5206\u5272\u3059\u308b\u9577\u3055\n  - Parameter handle: \u5206\u5272\u3054\u3068\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\n  */\n  public func Splitter(len: Int, handle: ((cut: String,isLast: Bool)->Void)) -> Void\n  {\n    var idx = self.startIndex.advancedBy(len)\n    var sub = self.substringToIndex(idx)\n    var other = self.substringFromIndex(idx)\n    var dist = other.startIndex.distanceTo(other.endIndex)\n    while ( dist>len ) {\n      handle(cut: sub,isLast: false)\n            idx = other.startIndex.advancedBy(len)\n            sub = other.substringToIndex(idx)\n            other = other.substringFromIndex(idx)\n            dist = other.startIndex.distanceTo(other.endIndex)\n    }\n    handle(cut: sub,isLast: false)\n    handle(cut: other,isLast: true)\n  }\n\n}\n\n\nlet testString : String = \"Hello world\"\ntestString.Splitter(3 , handle: {\n    (cut: String,flg: Bool) -> Void in\n    LOG(\"Splitter test \\(cut), \\(flg)\")\n})\n\nlet testString2 : String = \"\u30cf\u30ed\u30fc\u3000\u4e16\u754c\u3088\uff01\"\ntestString2.Splitter(3 , handle: {\n    (cut: String,flg: Bool) -> Void in\n    LOG(\"Splitter test2 \\(cut), \\(flg)\")\n})\n\n\nSplitter test Hel, false\nSplitter test lo , false\nSplitter test wor, false\nSplitter test ld, true\n\nSplitter test2 \u30cf\u30ed\u30fc, false\nSplitter test2 \u3000\u4e16\u754c, false\nSplitter test2 \u3000\u3088\uff01, true\n\n\n\u306a\u3093\u304b\u3001\u3082\u3063\u3068\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308b\u3068\u601d\u3046\u3093\u3060\u3051\u3069\u3001\u601d\u3044\u3064\u304b\u306a\u3044\u306e\u3067\u529b\u6280\u3067\u5b9f\u88c5\u3067\u3059\u3002\n\nString+Splitter.swift\n\n```swift\n\nextension String {\n\n  /** \u6587\u5b57\u5217\u3092\u56fa\u5b9a\u9577\u3067\u5206\u5272\u3059\u308b\n  - Parameter len: \u5206\u5272\u3059\u308b\u9577\u3055\n  - Parameter handle: \u5206\u5272\u3054\u3068\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\n  */\n  public func Splitter(len: Int, handle: ((cut: String,isLast: Bool)->Void)) -> Void\n  {\n    var idx = self.startIndex.advancedBy(len)\n    var sub = self.substringToIndex(idx)\n    var other = self.substringFromIndex(idx)\n    var dist = other.startIndex.distanceTo(other.endIndex)\n    while ( dist>len ) {\n      handle(cut: sub,isLast: false)\n\t\t\tidx = other.startIndex.advancedBy(len)\n\t\t\tsub = other.substringToIndex(idx)\n\t\t\tother = other.substringFromIndex(idx)\n\t\t\tdist = other.startIndex.distanceTo(other.endIndex)\n    }\n    handle(cut: sub,isLast: false)\n    handle(cut: other,isLast: true)\n  }\n\n}\n\n\nlet testString : String = \"Hello world\"\ntestString.Splitter(3 , handle: {\n\t(cut: String,flg: Bool) -> Void in\n\tLOG(\"Splitter test \\(cut), \\(flg)\")\n})\n\nlet testString2 : String = \"\u30cf\u30ed\u30fc\u3000\u4e16\u754c\u3088\uff01\"\ntestString2.Splitter(3 , handle: {\n\t(cut: String,flg: Bool) -> Void in\n\tLOG(\"Splitter test2 \\(cut), \\(flg)\")\n})\n\n\nSplitter test Hel, false\nSplitter test lo , false\nSplitter test wor, false\nSplitter test ld, true\n\nSplitter test2 \u30cf\u30ed\u30fc, false\nSplitter test2 \u3000\u4e16\u754c, false\nSplitter test2 \u3000\u3088\uff01, true\n\n```\n", "tags": ["Swift", "string"]}