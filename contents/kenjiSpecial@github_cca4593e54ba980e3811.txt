{"context": "\n\n\u306f\u3058\u3081\u306b\nthree.js\u3092\u66f8\u3044\u3066\u3044\u3066\u611f\u3058\u308b\u306e\u3067\u3059\u3002\n\u6bce\u30d5\u30ec\u30fc\u30e0\u5b9f\u884c\u3057\u3066\u3044\u308brenderer.render(scene, camera)\u306e\u4e2d\u3063\u3066\u3069\u3046\u306a\u3063\u3066\u308b\u3093\u3060\u3002\u3002\nrenderer.render(scene, camera, renderTarget)\u3068\u304b\u3084\u3063\u3066\u3001texture\u3092\u6240\u5f97\u3057\u3066\u3001postprocessing\u51e6\u7406\u3057\u308b\u3051\u3069\u3001\u3044\u307e\u3044\u3061\u5185\u90e8\u4f55\u3084\u3063\u3066\u308b\u306e\u304b\u308f\u304b\u3063\u3066\u306a\u3044\u305e\u3002\u3002\nthree.js(pixi.js)\u3092\u66f8\u304f\u3053\u3068\u304cwebgl\u306a\u3063\u3066\u308b\u3051\u3069\u3001\u9055\u548c\u611f\u611f\u3058\u308b\u306a\u3002\u3002\u3067\u3082\u3001\u3042\u307e\u308a\u308f\u304b\u3063\u3066\u306a\u3044\u304b\u3089\u3001\u4f55\u3082\u8a00\u3048\u306a\u3044\u3002\u3002\n\u4e00\u5ea6\u81ea\u5206\u306e\u4e2d\u3067WebGL\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u3001\u6574\u7406\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u4eca\u56de\u52c9\u5f37\u3059\u308b\u3053\u3068\u3067\u3001three.js\u3067\u306e\u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\u3084post processing/gpgpu\u306a\u3069\u306e\u6280\u8853\u306e\u7406\u89e3\u3092\u6df1\u3081\u305f\u308a\u3001\u30c7\u30d0\u30a4\u30b9\u30fb\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6bce\u306b\u304a\u3051\u308b\u6700\u9069\u5316\u306a\u3069\u306b\u5f79\u306b\u7acb\u3064\u3088\u3046\u306b\u3057\u305f\u3044\u3067\u3059\u3002\nwebgl api\u306e\u8aac\u660e\u306f\u3042\u307e\u308a\u66f8\u3044\u3066\u306a\u3044\u306e\u3067\u3001\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n\nWebGL\u3063\u3066\nAn Introduction to WebGL \u2014 Part 1\u306b\u3088\u308b\u3068\u3001\nwebgl\u306eapi\u306fOpenGL ES2\u306eAPI\u3092\u30d9\u30fc\u30b9\u306b\u3057\u3066\u308b\u305d\u3046\u3067\u3059\u3002(webgl2\u306fOpenGL ES3\u304c\u3079\u30fc\u3059\u306b\u306a\u3063\u3066\u308b\u305d\u3046\u3067\u3059\u3002\uff09API\u306e\u30c1\u30fc\u30c8\u30b7\u30fc\u30c8\u306f\u3053\u3061\u3089\u304b\u3089\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\nWhen programming in WebGL, you are usually aiming to render a scene of some kind. This usually includes multiple subsequent draw jobs or \u201ccalls\u201d, each of which is carried out in the GPU through a process called the rendering pipeline.\n\nrendering pipeline\u3068\u547c\u3070\u308c\u308b\u51e6\u7406\u3092GPU\u3067\u5b9f\u884c\u3057\u3001webgl\u306e\u63cf\u753b\u3092\u884c\u3063\u3066\u3044\u308b\u305d\u3046\u3067\u3059\u3002\n\nRendering Pipeline\n\n\u3056\u3063\u304f\u308a\u3068\u7406\u89e3\u3057\u3066\u308b\u3068\u3053\u308d\u306b\u3088\u308b\u3068\u3001\u3001\n\nvertex arrays\u3068\u3057\u3066\u9802\u70b9\u3092\u914d\u5217\u306b\u8a18\u8ff0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nvertex arrays\u3092GPU\u4e0a\u306bvertex buffer\u3068\u3057\u3066\u9001\u308a\u307e\u3059\u3002\nvertex shader\u3067vertex buffer\u306e\u9802\u70b9\u60c5\u5831\u304b\u3089\u30b9\u30af\u30ea\u30fc\u30f3\u3067\u6295\u5f71\u3055\u308c\u308b\u9802\u70b9\u60c5\u5831\u306e\u8a08\u7b97\u306a\u3069\u3092\u884c\u3044\u307e\u3059\n\u8a08\u7b97\u3055\u308c\u305f\u9802\u70b9\u60c5\u5831\u3092\u4e09\u89d2\u5f62\u3068\u3057\u3066\u3064\u306a\u3052\u305f\u308a\u3001\u76f4\u7dda\u3068\u3057\u3066\u3064\u306a\u3052\u305f\u308a\u3001\u70b9\u3068\u3057\u3066\u3057\u305f\u308a\u3059\u308b\u304b\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\nrasterizer\u3068\u3044\u3063\u3066\u3001\u9802\u70b9\u306e\u60c5\u5831\u3092\u30d4\u30af\u30bb\u30eb\u306e\u60c5\u5831\u3068\u3057\u3066\u51e6\u7406\u3057\u307e\u3059\u3002\nFragment shader\u3067\u306f1\u30d4\u30af\u30bb\u30eb\u6bce\u306b\u8272\u306c\u308a\u3092\u884c\u3044\u307e\u3059\u3002\nframe buffer\u3068\u3057\u3066\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3055\u308c\u305f\u308a\u3001texture\u3068\u3057\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\n\n\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306fAn Introduction to WebGL \u2014 Part 1\u306b\u8a73\u3057\u3044\u8aac\u660e\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\u3068\u3066\u3082\u8907\u96d1\u3067\u3059\u306d\u3001\u3001Vertex/Fragment shader\u306fGLSL( Graphics Library Shader Language)\u3067\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\nGLSL\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u304c\u8a73\u3057\u304f\u307e\u3068\u3081\u3089\u3066\u3044\u307e\u3059\u3002\uff08http://qiita.com/doxas/items/5a7b6dedff4bc2ce1586 \uff09\nthree.js\u3092\u66f8\u304f\u3068\u308f\u304b\u308b\u306e\u3067\u3059\u304c\u3001shaderMaterial\u3092\u66f8\u304f\u3068\u304d\u4ee5\u5916\u30b7\u30a7\u30fc\u30c0\u306f\u66f8\u304b\u306a\u3044\u306e\u3067\u306f\u3068\u3044\u3046\u3064\u3063\u3053\u307f\u3092\u5165\u308c\u305f\u304f\u306a\u308a\u307e\u3059\u3002\nthree.js\u306f\u3001\u30b7\u30a7\u30fc\u30c0\u3092\u304b\u3051\u306a\u304f\u3066\u3082\u57fa\u672c\u7684\u306a\u3053\u3068\u306f\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30b7\u30a7\u30fc\u30c0\u306fjs\u3068\u66f8\u304d\u65b9\u304c\u9055\u3063\u305f\u308a\u3001\u30a8\u30e9\u30fc\u5224\u5b9a\u304cjs\u3088\u308a\u53b3\u3057\u3044\u306e\u3067\u3001\u6163\u308c\u308b\u306e\u306b\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\u521d\u5fc3\u8005\u3067\u3082\u30b7\u30a7\u30fc\u30c0\u3092\u8003\u3048\u305a3d\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3067\u304d\u308b\u3053\u3068\u306f\u3044\u3044\u306e\u3067\u3059\u304c\u3001WebGL\u304c\u3069\u306e\u3088\u3046\u306b\u52d5\u3044\u3066\u3044\u308b\u306e\u304b\u3092\u7406\u89e3\u3057\u306b\u304f\u304f\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nthree.js\u81ea\u4f53\u3082webgl\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u306a\u304f\u3001webgl/canvas/css3\u3092\u4f7f\u3063\u305f3d\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u30b7\u30a7\u30fc\u30c0\u3092\u8003\u3048\u305a3d\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u521d\u5fc3\u8005\u3067\u3082\u3067\u304d\u308b\u65b9\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3059\u308b\u306e\u306f\u5f53\u7136\u306e\u6d41\u308c\u3067\u3059\u3088\u306d\u3002\n\nRaw WebGL\u3067\u4e09\u89d2\u5f62\u3092\u66f8\u3044\u3066\u307f\u308b\n\nsource code: http://codepen.io/kenjiSpecial/pen/ENbzjp\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\nvar canvas, gl, program;\n\nvar vertexShaderSource =\n    'attribute vec4 aPosition;\\n' +\n    'void main(){\\n' +\n    'gl_Position = vec4(aPosition.x, aPosition.y, 0.0, 1.0);\\n' +\n    '}';\n\nvar fragmentShaderSource =\n    '#ifdef GL_ES\\n' +\n    'precision mediump float;\\n' +\n    '#endif\\n' +\n    'void main(){\\n' +\n    'gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);\\n' +\n    '}';\n\nfunction init(){\n    canvas = document.createElement('canvas');\n    document.body.appendChild(canvas);\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    gl = canvas.getContext('webgl');\n\n    createProgram();\n    initVertexBuffer();\n    draw();\n}\n\n// \u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f5c\u6210\nfunction createProgram(){\n    var vertexShader = compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n    var fragmentShader = compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n    program = gl.createProgram();\n\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n\n    gl.linkProgram(program);\n\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if(!linked){\n        let error = gl.getProgramInfoLog(program);\n        console.error('Failed to link program:' + error);\n    }\n\n    gl.useProgram(program);\n\n}\n\n// vertex array \u3068 vertex buffer\u3092\u4f5c\u6210\nfunction initVertexBuffer(){\n    var vertices = new Float32Array([\n        0.0, 0.5, -0.5, -0.5, 0.5, -0.5\n    ]);\n\n    var vertexBuffer = gl.createBuffer();\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n    var aPosition = gl.getAttribLocation(program, 'aPosition');\n    gl.vertexAttribPointer(aPosition, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(aPosition);\n\n}\n\n// \u30b7\u30a7\u30fc\u30c0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\nfunction compileShader( gl, type, shaderSource ){\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if(!compiled){\n        var error = gl.getShaderInfoLog(shader);\n        console.error('Faile to compiler shader: ' + error);\n        gl.deleteShader(shader);\n        return null;\n    }\n\n    return shader;\n}\n\n// \u4e09\u89d2\u5f62\u3092\u63cf\u753b\u3059\u308b\nfunction draw(){\n    gl.clearColor(0, 0, 0, 1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 3);\n}\n\n\ninit();\n\n\u4e00\u65b9\u3001canvas\u3067\u306f\nvar canvas = document.createElement('canvas');\nvar ctx = canvs.getContext('2d');\nctx.fillStyle = '#ffff00';\nctx.beginPath();\nctx.moveTo(75,50);\nctx.lineTo(100,75);\nctx.lineTo(100,25);\nctx.fill();\n\ncanvas api\u304c\u3069\u308c\u3060\u3051\u30b7\u30f3\u30d7\u30eb\u304b\u4e00\u76ee\u77ad\u7136\u3067\u3059\u3002\n\u30b7\u30f3\u30d7\u30eb\u306a\u56f3\u5f62\u3092\u63cf\u753b\u3059\u308b\u306e\u306bwebgl\u306e\u9b45\u529b\u306f\u306a\u304b\u306a\u304b\u4f1d\u308f\u308a\u3065\u3089\u3044\u3067\u3059\u3002\nwebgl\u3067\u306f\u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f5c\u6210\u3068\u9802\u70b9\u30c7\u30fc\u30bf\u306e\u914d\u5217\u3068\u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u30c7\u30fc\u30bf\u3092\u6e21\u3059\u3053\u3068\u3067\u63cf\u753b\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u9802\u70b9\u30c7\u30fc\u30bf\u3092\u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u6e21\u3059\u3068\u3053\u308d\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n// vertex array \u3068 vertex buffer\u3092\u4f5c\u6210\nfunction initVertexBuffer(){\n    var vertices = new Float32Array([\n        0.0, 0.5, -0.5, -0.5, 0.5, -0.5\n    ]);\n\n    var vertexBuffer = gl.createBuffer();\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n\n    var aPosition = gl.getAttribLocation(program, 'aPosition');\n    gl.vertexAttribPointer(aPosition, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(aPosition);\n\n}\n\nbuffer\u3092\u4f5c\u6210\u3057\u305f\u308a\u3068\u8272\u3005\u9762\u5012\u306a\u3053\u3068\u3092\u3001\u3001\u3068\u6b63\u76f4\u601d\u3044\u307e\u3059\u3002\nfunction initVertexBuffer(){\n    var vertices = new Float32Array([\n        0.0, 0.5, -0.5, -0.5, 0.5, -0.5\n    ]);\n\n    program.sendVerticeData(vertices, 'aPosition');\n}\n\n\u3053\u308c\u3050\u3089\u3044\u7c21\u5358\u306b\u66f8\u304d\u305f\u3044\u3067\u3059\u304c\u3001\u3001\u305d\u3046\u306f\u3044\u304d\u307e\u305b\u3093\u306d\u3002\n\u4e09\u89d2\u5f62\u3068\u3044\u30462\u6b21\u5143\u306e\u56f3\u5f62\u3092\u63cf\u753b\u3067\u304d\u305f\u306e\u3067\u3059\u304c\u3001\u307e\u3060\u307e\u30603\u6b21\u5143\u307e\u3067\u306f\u9060\u3044\u3067\u3059\u3002\nWebGL\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u308f\u304b\u308b\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u3069\u3053\u306b\u3082camera\u306e\u3088\u3046\u306a\u3082\u306e\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u6b21\u56de\u306fWebGL\u3067\u7acb\u65b9\u4f53\u3092\u66f8\u3044\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nWebGL Programming Guide\nWebGL 1.0 API Quick Reference Card\nAn Introduction to WebGL \u2014 Part 1\nGLSL \u3067\u6696\u3092\u53d6\u308b\u305f\u3081\u306e\u6e96\u5099\u3092\u3057\u3088\u3046\uff01 GLSL \u304a\u5f79\u7acb\u3061\u30de\u30cb\u30e5\u30a2\u30eb\n#\u306f\u3058\u3081\u306b\n\nthree.js\u3092\u66f8\u3044\u3066\u3044\u3066\u611f\u3058\u308b\u306e\u3067\u3059\u3002\n\n\u6bce\u30d5\u30ec\u30fc\u30e0\u5b9f\u884c\u3057\u3066\u3044\u308b`renderer.render(scene, camera)`\u306e\u4e2d\u3063\u3066\u3069\u3046\u306a\u3063\u3066\u308b\u3093\u3060\u3002\u3002\n\n`renderer.render(scene, camera, renderTarget)`\u3068\u304b\u3084\u3063\u3066\u3001texture\u3092\u6240\u5f97\u3057\u3066\u3001postprocessing\u51e6\u7406\u3057\u308b\u3051\u3069\u3001\u3044\u307e\u3044\u3061\u5185\u90e8\u4f55\u3084\u3063\u3066\u308b\u306e\u304b\u308f\u304b\u3063\u3066\u306a\u3044\u305e\u3002\u3002\n\nthree.js(pixi.js)\u3092\u66f8\u304f\u3053\u3068\u304cwebgl\u306a\u3063\u3066\u308b\u3051\u3069\u3001\u9055\u548c\u611f\u611f\u3058\u308b\u306a\u3002\u3002\u3067\u3082\u3001\u3042\u307e\u308a\u308f\u304b\u3063\u3066\u306a\u3044\u304b\u3089\u3001\u4f55\u3082\u8a00\u3048\u306a\u3044\u3002\u3002\n\n\u4e00\u5ea6\u81ea\u5206\u306e\u4e2d\u3067WebGL\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u3001\u6574\u7406\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u52c9\u5f37\u3059\u308b\u3053\u3068\u3067\u3001three.js\u3067\u306e\u30e9\u30a4\u30c6\u30a3\u30f3\u30b0\u3084post processing/gpgpu\u306a\u3069\u306e\u6280\u8853\u306e\u7406\u89e3\u3092\u6df1\u3081\u305f\u308a\u3001\u30c7\u30d0\u30a4\u30b9\u30fb\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6bce\u306b\u304a\u3051\u308b\u6700\u9069\u5316\u306a\u3069\u306b\u5f79\u306b\u7acb\u3064\u3088\u3046\u306b\u3057\u305f\u3044\u3067\u3059\u3002\n\nwebgl api\u306e\u8aac\u660e\u306f\u3042\u307e\u308a\u66f8\u3044\u3066\u306a\u3044\u306e\u3067\u3001\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n\n#WebGL\u3063\u3066\n\n[An Introduction to WebGL \u2014 Part 1](https://dev.opera.com/articles/introduction-to-webgl-part-1/)\u306b\u3088\u308b\u3068\u3001\n\nwebgl\u306eapi\u306f[OpenGL ES2](https://www.khronos.org/opengles/2_X/)\u306eAPI\u3092\u30d9\u30fc\u30b9\u306b\u3057\u3066\u308b\u305d\u3046\u3067\u3059\u3002(webgl2\u306fOpenGL ES3\u304c\u3079\u30fc\u3059\u306b\u306a\u3063\u3066\u308b\u305d\u3046\u3067\u3059\u3002\uff09API\u306e\u30c1\u30fc\u30c8\u30b7\u30fc\u30c8\u306f[\u3053\u3061\u3089](https://www.khronos.org/files/webgl/webgl-reference-card-1_0.pdf)\u304b\u3089\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n> When programming in WebGL, you are usually aiming to render a scene of some kind. This usually includes multiple subsequent draw jobs or \u201ccalls\u201d, each of which is carried out in the GPU through a process called the rendering pipeline.\n\nrendering pipeline\u3068\u547c\u3070\u308c\u308b\u51e6\u7406\u3092GPU\u3067\u5b9f\u884c\u3057\u3001webgl\u306e\u63cf\u753b\u3092\u884c\u3063\u3066\u3044\u308b\u305d\u3046\u3067\u3059\u3002\n\n## Rendering Pipeline\n\n![Rendering Pipeline](https://dev.opera.com/articles/introduction-to-webgl-part-1/rendering-pipeline.jpg \"Rendering Pipeline\")\n\n\n\u3056\u3063\u304f\u308a\u3068\u7406\u89e3\u3057\u3066\u308b\u3068\u3053\u308d\u306b\u3088\u308b\u3068\u3001\u3001\n\n0. vertex arrays\u3068\u3057\u3066\u9802\u70b9\u3092\u914d\u5217\u306b\u8a18\u8ff0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n1. vertex arrays\u3092GPU\u4e0a\u306bvertex buffer\u3068\u3057\u3066\u9001\u308a\u307e\u3059\u3002\n2. vertex shader\u3067vertex buffer\u306e\u9802\u70b9\u60c5\u5831\u304b\u3089\u30b9\u30af\u30ea\u30fc\u30f3\u3067\u6295\u5f71\u3055\u308c\u308b\u9802\u70b9\u60c5\u5831\u306e\u8a08\u7b97\u306a\u3069\u3092\u884c\u3044\u307e\u3059\n3. \u8a08\u7b97\u3055\u308c\u305f\u9802\u70b9\u60c5\u5831\u3092\u4e09\u89d2\u5f62\u3068\u3057\u3066\u3064\u306a\u3052\u305f\u308a\u3001\u76f4\u7dda\u3068\u3057\u3066\u3064\u306a\u3052\u305f\u308a\u3001\u70b9\u3068\u3057\u3066\u3057\u305f\u308a\u3059\u308b\u304b\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n4. rasterizer\u3068\u3044\u3063\u3066\u3001\u9802\u70b9\u306e\u60c5\u5831\u3092\u30d4\u30af\u30bb\u30eb\u306e\u60c5\u5831\u3068\u3057\u3066\u51e6\u7406\u3057\u307e\u3059\u3002\n5. Fragment shader\u3067\u306f1\u30d4\u30af\u30bb\u30eb\u6bce\u306b\u8272\u306c\u308a\u3092\u884c\u3044\u307e\u3059\u3002\n6. frame buffer\u3068\u3057\u3066\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3055\u308c\u305f\u308a\u3001texture\u3068\u3057\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3055\u308c\u307e\u3059\u3002\n\n\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306f[An Introduction to WebGL \u2014 Part 1](https://dev.opera.com/articles/introduction-to-webgl-part-1/)\u306b\u8a73\u3057\u3044\u8aac\u660e\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\n\u3068\u3066\u3082\u8907\u96d1\u3067\u3059\u306d\u3001\u3001Vertex/Fragment shader\u306fGLSL( Graphics Library Shader Language)\u3067\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\nGLSL\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u304c\u8a73\u3057\u304f\u307e\u3068\u3081\u3089\u3066\u3044\u307e\u3059\u3002\uff08[http://qiita.com/doxas/items/5a7b6dedff4bc2ce1586](http://qiita.com/doxas/items/5a7b6dedff4bc2ce1586) \uff09\n\n\nthree.js\u3092\u66f8\u304f\u3068\u308f\u304b\u308b\u306e\u3067\u3059\u304c\u3001shaderMaterial\u3092\u66f8\u304f\u3068\u304d\u4ee5\u5916\u30b7\u30a7\u30fc\u30c0\u306f\u66f8\u304b\u306a\u3044\u306e\u3067\u306f\u3068\u3044\u3046\u3064\u3063\u3053\u307f\u3092\u5165\u308c\u305f\u304f\u306a\u308a\u307e\u3059\u3002\n\nthree.js\u306f\u3001\u30b7\u30a7\u30fc\u30c0\u3092\u304b\u3051\u306a\u304f\u3066\u3082\u57fa\u672c\u7684\u306a\u3053\u3068\u306f\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30b7\u30a7\u30fc\u30c0\u306fjs\u3068\u66f8\u304d\u65b9\u304c\u9055\u3063\u305f\u308a\u3001\u30a8\u30e9\u30fc\u5224\u5b9a\u304cjs\u3088\u308a\u53b3\u3057\u3044\u306e\u3067\u3001\u6163\u308c\u308b\u306e\u306b\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\n\u521d\u5fc3\u8005\u3067\u3082\u30b7\u30a7\u30fc\u30c0\u3092\u8003\u3048\u305a3d\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3067\u304d\u308b\u3053\u3068\u306f\u3044\u3044\u306e\u3067\u3059\u304c\u3001WebGL\u304c\u3069\u306e\u3088\u3046\u306b\u52d5\u3044\u3066\u3044\u308b\u306e\u304b\u3092\u7406\u89e3\u3057\u306b\u304f\u304f\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nthree.js\u81ea\u4f53\u3082webgl\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u306a\u304f\u3001webgl/canvas/css3\u3092\u4f7f\u3063\u305f3d\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u30b7\u30a7\u30fc\u30c0\u3092\u8003\u3048\u305a3d\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u521d\u5fc3\u8005\u3067\u3082\u3067\u304d\u308b\u65b9\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3059\u308b\u306e\u306f\u5f53\u7136\u306e\u6d41\u308c\u3067\u3059\u3088\u306d\u3002\n\n#Raw WebGL\u3067\u4e09\u89d2\u5f62\u3092\u66f8\u3044\u3066\u307f\u308b\n\n![Screen Shot 2016-11-30 at 5.50.34 PM.png](https://qiita-image-store.s3.amazonaws.com/0/15925/12f6acdf-f871-c007-d811-c615298c17a2.png)\n\nsource code: http://codepen.io/kenjiSpecial/pen/ENbzjp\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\n\n```js\nvar canvas, gl, program;\n\nvar vertexShaderSource =\n    'attribute vec4 aPosition;\\n' +\n    'void main(){\\n' +\n    'gl_Position = vec4(aPosition.x, aPosition.y, 0.0, 1.0);\\n' +\n    '}';\n\nvar fragmentShaderSource =\n    '#ifdef GL_ES\\n' +\n    'precision mediump float;\\n' +\n    '#endif\\n' +\n    'void main(){\\n' +\n    'gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);\\n' +\n    '}';\n\nfunction init(){\n    canvas = document.createElement('canvas');\n    document.body.appendChild(canvas);\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    \n    gl = canvas.getContext('webgl');\n    \n    createProgram();\n    initVertexBuffer();\n    draw();\n}\n\n// \u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f5c\u6210\nfunction createProgram(){\n    var vertexShader = compileShader(gl, gl.VERTEX_SHADER, vertexShaderSource);\n    var fragmentShader = compileShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource);\n    \n    program = gl.createProgram();\n    \n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    \n    gl.linkProgram(program);\n    \n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if(!linked){\n        let error = gl.getProgramInfoLog(program);\n        console.error('Failed to link program:' + error);\n    }\n    \n    gl.useProgram(program);\n    \n}\n\n// vertex array \u3068 vertex buffer\u3092\u4f5c\u6210\nfunction initVertexBuffer(){\n    var vertices = new Float32Array([\n        0.0, 0.5, -0.5, -0.5, 0.5, -0.5\n    ]);\n    \n    var vertexBuffer = gl.createBuffer();\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    \n    var aPosition = gl.getAttribLocation(program, 'aPosition');\n    gl.vertexAttribPointer(aPosition, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(aPosition);\n    \n}\n\n// \u30b7\u30a7\u30fc\u30c0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\nfunction compileShader( gl, type, shaderSource ){\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    \n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if(!compiled){\n        var error = gl.getShaderInfoLog(shader);\n        console.error('Faile to compiler shader: ' + error);\n        gl.deleteShader(shader);\n        return null;\n    }\n    \n    return shader;\n}\n\n// \u4e09\u89d2\u5f62\u3092\u63cf\u753b\u3059\u308b\nfunction draw(){\n    gl.clearColor(0, 0, 0, 1.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    \n    gl.drawArrays(gl.TRIANGLES, 0, 3);\n}\n\n\ninit();\n```\n\n\u4e00\u65b9\u3001canvas\u3067\u306f\n\n```\nvar canvas = document.createElement('canvas');\nvar ctx = canvs.getContext('2d');\nctx.fillStyle = '#ffff00';\nctx.beginPath();\nctx.moveTo(75,50);\nctx.lineTo(100,75);\nctx.lineTo(100,25);\nctx.fill();\n```\n\ncanvas api\u304c\u3069\u308c\u3060\u3051\u30b7\u30f3\u30d7\u30eb\u304b\u4e00\u76ee\u77ad\u7136\u3067\u3059\u3002\n\n\u30b7\u30f3\u30d7\u30eb\u306a\u56f3\u5f62\u3092\u63cf\u753b\u3059\u308b\u306e\u306bwebgl\u306e\u9b45\u529b\u306f\u306a\u304b\u306a\u304b\u4f1d\u308f\u308a\u3065\u3089\u3044\u3067\u3059\u3002\n\nwebgl\u3067\u306f\u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f5c\u6210\u3068\u9802\u70b9\u30c7\u30fc\u30bf\u306e\u914d\u5217\u3068\u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u30c7\u30fc\u30bf\u3092\u6e21\u3059\u3053\u3068\u3067\u63cf\u753b\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u9802\u70b9\u30c7\u30fc\u30bf\u3092\u30b7\u30a7\u30fc\u30c0\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u6e21\u3059\u3068\u3053\u308d\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n```js\n// vertex array \u3068 vertex buffer\u3092\u4f5c\u6210\nfunction initVertexBuffer(){\n    var vertices = new Float32Array([\n        0.0, 0.5, -0.5, -0.5, 0.5, -0.5\n    ]);\n    \n    var vertexBuffer = gl.createBuffer();\n    \n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW);\n    \n    var aPosition = gl.getAttribLocation(program, 'aPosition');\n    gl.vertexAttribPointer(aPosition, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(aPosition);\n    \n}\n```\n\nbuffer\u3092\u4f5c\u6210\u3057\u305f\u308a\u3068\u8272\u3005\u9762\u5012\u306a\u3053\u3068\u3092\u3001\u3001\u3068\u6b63\u76f4\u601d\u3044\u307e\u3059\u3002\n\n```js\nfunction initVertexBuffer(){\n    var vertices = new Float32Array([\n        0.0, 0.5, -0.5, -0.5, 0.5, -0.5\n    ]);\n    \n    program.sendVerticeData(vertices, 'aPosition');\n}\n```\n\n\u3053\u308c\u3050\u3089\u3044\u7c21\u5358\u306b\u66f8\u304d\u305f\u3044\u3067\u3059\u304c\u3001\u3001\u305d\u3046\u306f\u3044\u304d\u307e\u305b\u3093\u306d\u3002\n\n\u4e09\u89d2\u5f62\u3068\u3044\u30462\u6b21\u5143\u306e\u56f3\u5f62\u3092\u63cf\u753b\u3067\u304d\u305f\u306e\u3067\u3059\u304c\u3001\u307e\u3060\u307e\u30603\u6b21\u5143\u307e\u3067\u306f\u9060\u3044\u3067\u3059\u3002\n\nWebGL\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u308f\u304b\u308b\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u3069\u3053\u306b\u3082camera\u306e\u3088\u3046\u306a\u3082\u306e\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u6b21\u56de\u306fWebGL\u3067\u7acb\u65b9\u4f53\u3092\u66f8\u3044\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n#\u53c2\u8003\u30b5\u30a4\u30c8\n\n[WebGL Programming Guide](https://sites.google.com/site/webglbook/)\n\n[WebGL 1.0 API Quick Reference Card](https://www.khronos.org/files/webgl/webgl-reference-card-1_0.pdf)\n\n[An Introduction to WebGL \u2014 Part 1](https://dev.opera.com/articles/introduction-to-webgl-part-1/)\n\n[GLSL \u3067\u6696\u3092\u53d6\u308b\u305f\u3081\u306e\u6e96\u5099\u3092\u3057\u3088\u3046\uff01 GLSL \u304a\u5f79\u7acb\u3061\u30de\u30cb\u30e5\u30a2\u30eb](http://qiita.com/doxas/items/5a7b6dedff4bc2ce1586)\n", "tags": ["WebGL", "three.js"]}