{"context": " More than 1 year has passed since last update.\u300cSpring\u3067DI\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eMock\u30c6\u30b9\u30c8\u300d\u306e\u7d9a\u304d\u3067\u3059\u3002\n\u305d\u306e\u5f8c\u3044\u308d\u3044\u308d\u66f8\u3044\u3066\u3044\u3066\u3001\u3053\u308c\u304c\u4e00\u756a\u304b\u306a\u3068\u3044\u3046\u7d50\u8ad6\u306b\u9054\u3057\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n(4) Mockito\u3068ReflectionUtils\u3092\u4f7f\u3046\n(3)\u3068\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u540c\u3058\u3067\u3059\u3002\n@ContextConfiguration(locations = \"classpath:context.xml\")\nclass ServiceASpec extends Specification {\n\n    @Autowired\n    private ServiceA serviceA\n\n    def setup() {\n        RepositoryB repositoryB = Mockito.mock(RepositoryB.class)\n        ReflectionTestUtils.setField(serviceA, \"repositoryB\", repositoryB)\n    }\n\n    def \"RepositoryB\u3092Mock\u306b\u3057\u305f\u30c6\u30b9\u30c8\"() {\n        when:\n        sut.order1(\"test\")\n\n        then:\n        // repositoryB.save(\"test\")\u304c1\u56de\u547c\u3070\u308c\u305f\n        Mockito.verify(repositoryB).save(\"test\")\n\n        // \u4e0a\u8a18\u4ee5\u5916\u3067Mock\u304c\u547c\u3070\u308c\u3066\u3044\u306a\u3044\n        Mockito.verifyNoMoreInteractions(repositoryB)\n    }\n}\n\nAssertion\u306e\u7d50\u679c\u306f\u3053\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\u308f\u304b\u308a\u3084\u3059\u3044\u3002\nArgument(s) are different! Wanted:\nrepositoryB.save(\n    \"test\"\n);\n\nActual invocation has different arguments:\nrepositoryB.save(\n    \"test1\"\n);\n\n\n[\u300cSpring\u3067DI\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eMock\u30c6\u30b9\u30c8\u300d](http://qiita.com/nyasba/items/cd72231f56536a9ef199)\u306e\u7d9a\u304d\u3067\u3059\u3002\n\n\u305d\u306e\u5f8c\u3044\u308d\u3044\u308d\u66f8\u3044\u3066\u3044\u3066\u3001\u3053\u308c\u304c\u4e00\u756a\u304b\u306a\u3068\u3044\u3046\u7d50\u8ad6\u306b\u9054\u3057\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\n## (4) Mockito\u3068ReflectionUtils\u3092\u4f7f\u3046\n\n(3)\u3068\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u540c\u3058\u3067\u3059\u3002\n\n```\n@ContextConfiguration(locations = \"classpath:context.xml\")\nclass ServiceASpec extends Specification {\n\n    @Autowired\n    private ServiceA serviceA\n\n    def setup() {\n        RepositoryB repositoryB = Mockito.mock(RepositoryB.class)\n        ReflectionTestUtils.setField(serviceA, \"repositoryB\", repositoryB)\n    }\n\n    def \"RepositoryB\u3092Mock\u306b\u3057\u305f\u30c6\u30b9\u30c8\"() {\n        when:\n        sut.order1(\"test\")\n\n        then:\n        // repositoryB.save(\"test\")\u304c1\u56de\u547c\u3070\u308c\u305f\n        Mockito.verify(repositoryB).save(\"test\")\n        \n        // \u4e0a\u8a18\u4ee5\u5916\u3067Mock\u304c\u547c\u3070\u308c\u3066\u3044\u306a\u3044\n        Mockito.verifyNoMoreInteractions(repositoryB)\n    }\n}\n```\n\nAssertion\u306e\u7d50\u679c\u306f\u3053\u306e\u3088\u3046\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\u308f\u304b\u308a\u3084\u3059\u3044\u3002\n\n```\u7d50\u679c\nArgument(s) are different! Wanted:\nrepositoryB.save(\n    \"test\"\n);\n\nActual invocation has different arguments:\nrepositoryB.save(\n    \"test1\"\n);\n```\n\n\n", "tags": ["spring"]}