{"context": " More than 1 year has passed since last update.\u8ffd\u8a18 \najido@github\u3055\u3093\u306b\u30b3\u30e1\u30f3\u30c8\u9802\u304d\u3001HTML5\u306e\u30b1\u30fc\u30b9\u306b\u5bfe\u5fdc\u3057\u3066\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\nNode.js\u3067\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3092\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u3053\u308d\u3001\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u5224\u5b9a\u3001\u5909\u63db\u3059\u308b\u5fc5\u8981\u306b\u8feb\u3089\u308c\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u53d6\u5f97\u3057\u305fWeb\u30da\u30fc\u30b8\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u3067\u8b58\u5225\u3057\u3001UTF-8\u3078\u5909\u63db\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\nCoffeeScript\u3067\u66f8\u3044\u3066\u307e\u3059\u3002\n\nRequirements\n\u4ee5\u4e0b\u306e npm \u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u5fc5\u8981\u3067\u3059\u3002\n - iconv\n - buffer\n - request\n - cheerio\n\n\u6587\u5b57\u30b3\u30fc\u30c9\u306e\u8b58\u5225\u30fb\u5909\u63db\n\u53d6\u5f97\u3057\u305fWeb\u30da\u30fc\u30b8\u306emeta\u30bf\u30b0\u304b\u3089\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3057\u3001Iconv\u3067UTF-8\u3078\u5909\u63db\u3057\u307e\u3059\u3002\n\u30a8\u30e9\u30fc\u51e6\u7406\u306a\u3069\u306f\u7279\u306b\u610f\u8b58\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\ncharset.coffee\n{Iconv}  = require \"iconv\"\n{Buffer} = require \"buffer\"\n\n\n# \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u5224\u5225\ngetCharset = (body) ->\n  bin = body.toString('binary')\n  re = bin.match(/<meta\\b[^>]*charset=[\"']?([\\w\\-]+)/i)\n  if re\n    charset = re[1]\n  else\n    charset = \"utf-8\"\n  charset\n\n\n# \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092UTF-8\u3078\u5909\u63db\ntoUtf8 = (body) ->\n  iconv = new Iconv(getCharset(body), 'UTF-8//TRANSLIT//IGNORE')\n  body = new Buffer(body, 'binary')\n  body = iconv.convert(body).toString()\n\n\nmodule.exports =\n  toUtf8: toUtf8\n\n\n\n\u3044\u3056\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092charset.coffee\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\nrequest\u3067\u53d6\u5f97\u3057\u305fWeb\u30da\u30fc\u30b8\u3092charset.toUtf8\u3078\u6e21\u3059\u3068\u3001UTF-8\u3078\u5909\u63db\u3057\u3066\u8fd4\u3057\u307e\u3059\n\u3042\u3068\u306fcheerio\u3067\u597d\u304d\u306b\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u304c\u3067\u304d\u307e\u3059\u3002\nrequest = require \"request\"\ncheerio = require \"cheerio\"\ncharset = require \"charset\"\n\n\n# \u6307\u5b9aURL\u3092\u51e6\u7406\u3059\u308b\nprocessPage = (url) ->\n  request\n    uri: url\n    encoding: \"binary\"\n  , scrapingPage\n\n\n# \u53d6\u5f97\u3057\u305f\u30da\u30fc\u30b8\u3092\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3059\u308b\nscrapingPage = (error, response, body) ->\n  if not error and response.statusCode is 200\n    # UTF-8\u3078\u5909\u63db\n    $ = cheerio.load(charset.toUtf8(body))\n\n    #\n    # \u597d\u304d\u306a\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0 ...\n    #\n\n\n# \u5b9f\u884c\nprocessPage('http://www.jma.go.jp/jma/index.html')\n\n\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306f\u5922\u304c\u5e83\u304c\u308a\u307e\u3059:)\n\u8ffd\u8a18 \najido@github\u3055\u3093\u306b\u30b3\u30e1\u30f3\u30c8\u9802\u304d\u3001HTML5\u306e\u30b1\u30fc\u30b9\u306b\u5bfe\u5fdc\u3057\u3066\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\nNode.js\u3067\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3092\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u3053\u308d\u3001\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u5224\u5b9a\u3001\u5909\u63db\u3059\u308b\u5fc5\u8981\u306b\u8feb\u3089\u308c\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u53d6\u5f97\u3057\u305fWeb\u30da\u30fc\u30b8\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u3067\u8b58\u5225\u3057\u3001UTF-8\u3078\u5909\u63db\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\nCoffeeScript\u3067\u66f8\u3044\u3066\u307e\u3059\u3002\n\n\n# Requirements\n\u4ee5\u4e0b\u306e npm \u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u5fc5\u8981\u3067\u3059\u3002\n - iconv\n - buffer\n - request\n - cheerio\n\n\n# \u6587\u5b57\u30b3\u30fc\u30c9\u306e\u8b58\u5225\u30fb\u5909\u63db\n\u53d6\u5f97\u3057\u305fWeb\u30da\u30fc\u30b8\u306emeta\u30bf\u30b0\u304b\u3089\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3057\u3001Iconv\u3067UTF-8\u3078\u5909\u63db\u3057\u307e\u3059\u3002\n\u30a8\u30e9\u30fc\u51e6\u7406\u306a\u3069\u306f\u7279\u306b\u610f\u8b58\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n```coffeescript:charset.coffee\n{Iconv}  = require \"iconv\"\n{Buffer} = require \"buffer\"\n\n\n# \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u5224\u5225\ngetCharset = (body) ->\n  bin = body.toString('binary')\n  re = bin.match(/<meta\\b[^>]*charset=[\"']?([\\w\\-]+)/i)\n  if re\n    charset = re[1]\n  else\n    charset = \"utf-8\"\n  charset\n\n\n# \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3092UTF-8\u3078\u5909\u63db\ntoUtf8 = (body) ->\n  iconv = new Iconv(getCharset(body), 'UTF-8//TRANSLIT//IGNORE')\n  body = new Buffer(body, 'binary')\n  body = iconv.convert(body).toString()\n\n\nmodule.exports =\n  toUtf8: toUtf8\n```\n\n\n#\u3044\u3056\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092charset.coffee\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\nrequest\u3067\u53d6\u5f97\u3057\u305fWeb\u30da\u30fc\u30b8\u3092charset.toUtf8\u3078\u6e21\u3059\u3068\u3001UTF-8\u3078\u5909\u63db\u3057\u3066\u8fd4\u3057\u307e\u3059\n\u3042\u3068\u306fcheerio\u3067\u597d\u304d\u306b\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n```coffeescript\nrequest = require \"request\"\ncheerio = require \"cheerio\"\ncharset = require \"charset\"\n\n\n# \u6307\u5b9aURL\u3092\u51e6\u7406\u3059\u308b\nprocessPage = (url) ->\n  request\n    uri: url\n    encoding: \"binary\"\n  , scrapingPage\n\n\n# \u53d6\u5f97\u3057\u305f\u30da\u30fc\u30b8\u3092\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3059\u308b\nscrapingPage = (error, response, body) ->\n  if not error and response.statusCode is 200\n    # UTF-8\u3078\u5909\u63db\n    $ = cheerio.load(charset.toUtf8(body))\n\n    #\n    # \u597d\u304d\u306a\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0 ...\n    #\n\n\n# \u5b9f\u884c\nprocessPage('http://www.jma.go.jp/jma/index.html')\n```\n\n\n\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306f\u5922\u304c\u5e83\u304c\u308a\u307e\u3059:)", "tags": ["Node.js", "CoffeeScript", "iconv", "UTF-8"]}