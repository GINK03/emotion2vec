{"context": "\n\n\u306f\u3058\u3081\u306b\n\nUnity\u306eTransform\u3068\u306f\n\u89aa\u5b50\u95a2\u4fc2\u3092\u6301\u3061\u3001\u89aa\u306b\u5bfe\u3059\u308b\u30ed\u30fc\u30ab\u30eb\u306e\u5ea7\u6a19\u3001\u89d2\u5ea6\u3001\u62e1\u5927\u7387\u306a\u3069\u304b\u3089\u30b0\u30ed\u30fc\u30d0\u30eb\u306e\u5024\u306b\u5909\u63db\u3059\u308b\u3082\u306e\u3067\u3059\u3002(\u96d1)\n\u8a73\u3057\u304f\u306f\u3001\u306f\u3057\u3087\u308a\u307e\u3059\u3002\n\u89aa\u5b50\u95a2\u4fc2\u3092\u6301\u3066\u308b\u306e\u304c\u7d50\u69cb\u4f7f\u3044\u3084\u3059\u3044\u3067\u3059\u3002\n\n\u4eca\u56de\u4f5c\u308b\u3082\u306e\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u305d\u308c\u3063\u307d\u3044\u3082\u306e\u3092C++\u3067\u4f5c\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u304c\u3001\u9762\u5012\u304f\u3055\u3044\u306e\u3067\u6b21\u5143\u30921\u3064\u3055\u3052\u30662D\u7528\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3053\u3068\u3068\u3057\u307e\u3059\u3002\n\u8003\u3048\u65b9\u306f\u540c\u3058\u306a\u306e\u30673D\u7528\u3082\u5bb9\u6613\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n2D\u306e\u5ea7\u6a19\u5909\u63db\u306b\u5fc5\u8981\u306a\u3082\u306e\n\n\u5ea7\u6a19(Vector2)\nZ\u8ef8\u56de\u8ee2\u89d2\u5ea6(double)\n\u62e1\u5927\u7387(Vector2)\n\n\n\u4eca\u56de\u4f7f\u7528\u3059\u308b\u74b0\u5883\n\u8a00\u8a9e\u306fC++\u3067\nVec2\u3084Mat3x2\u3068\u3044\u3063\u305fclass\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u306e\u3067Siv3D\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\nVec2\u306b\u3064\u3044\u3066\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a2D\u30d9\u30af\u30c8\u30eb\u306e\u69cb\u9020\u4f53\u3060\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\nstruct Vec2\n{\n  double x,y;\n};\n\n\nMat3x2\u306b\u3064\u3044\u3066\n2D\u306e\u5834\u5408\u540c\u6b21\u5ea7\u6a19\u306e3\u5217\u76ee\u304c\u56fa\u5b9a\u306a\u305f\u3081\u30013x2\u884c\u5217\u306e\u30c7\u30fc\u30bf\u3067\u3001\u30a2\u30d5\u30a3\u30f3\u5909\u63db\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u5c11\u3057\u304a\u3055\u3089\u3044\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u79fb\u52d5\n\\begin{bmatrix}\nx^{,}\\\\\\ \ny^{,}\\\\\\\n1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n1 & 0 & a\\\\\\\n0 & 1 & b\\\\\\\n0 & 0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\nx\\\\\\\ny\\\\\\\n1\n\\end{bmatrix}\n[x,\u00a0y,\u00a01]=[10a\u00a001b\u00a0001][x\u00a0y\u00a01]{\\begin{bmatrix}\nx^{,}\\\\\\ \ny^{,}\\\\\\\n1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n1 & 0 & a\\\\\\\n0 & 1 & b\\\\\\\n0 & 0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\nx\\\\\\\ny\\\\\\\n1\n\\end{bmatrix}\n}\n\n\u56de\u8ee2\n\\begin{bmatrix}\nx^{,}\\\\\\ \ny^{,}\\\\\\\n1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ncos(r) & -sin(r) & 0\\\\\\\nsin(r) & cos(r) & 0\\\\\\\n0 & 0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\nx\\\\\\\ny\\\\\\\n1\n\\end{bmatrix}\n[x,\u00a0y,\u00a01]=[cos(r)\u2212sin(r)0\u00a0sin(r)cos(r)0\u00a0001][x\u00a0y\u00a01]{\\begin{bmatrix}\nx^{,}\\\\\\ \ny^{,}\\\\\\\n1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ncos(r) & -sin(r) & 0\\\\\\\nsin(r) & cos(r) & 0\\\\\\\n0 & 0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\nx\\\\\\\ny\\\\\\\n1\n\\end{bmatrix}\n}\n\n\u62e1\u5927\n\\begin{bmatrix}\nx^{,}\\\\\\ \ny^{,}\\\\\\\n1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ns_{x} & 0 & 0\\\\\\\n0 & s_{y} & 0\\\\\\\n0 & 0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\nx\\\\\\\ny\\\\\\\n1\n\\end{bmatrix}\n[x,\u00a0y,\u00a01]=[sx00\u00a00sy0\u00a0001][x\u00a0y\u00a01]{\\begin{bmatrix}\nx^{,}\\\\\\ \ny^{,}\\\\\\\n1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ns_{x} & 0 & 0\\\\\\\n0 & s_{y} & 0\\\\\\\n0 & 0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\nx\\\\\\\ny\\\\\\\n1\n\\end{bmatrix}\n}\n\n\u30b3\u30fc\u30c9\n\n\u5168\u4f53\u50cf\n\n\u65b9\u91dd\n\u5909\u63db\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u6301\u3064\u69cb\u9020\u4f53\u3092\u3082\u3063\u305f\u30ed\u30fc\u30ab\u30eb\u3068\u30b0\u30ed\u30fc\u30d0\u30eb\u306e\u5909\u6570\u3092\u3082\u3064Transform class\u3092\u4f5c\u308a\u3001\u30e1\u30f3\u30d0\u306b\u89aa\u3068\u5b50\u4f9b\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u6301\u3061\u307e\u3059\u3002\n\u81ea\u8eab\u306e\u5ea7\u6a19\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u3001\u5168\u3066\u306e\u5b50\u4f9b\u306b\u305d\u308c\u3092\u901a\u77e5\u3057\u3001\u5b50\u4f9b\u306e\u65b0\u3057\u3044\u5ea7\u6a19\u3092\u6539\u3081\u3066\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n\u3056\u3063\u304f\u308a\u3068\n\nTransform.h\n\nclass Transform\n    {\n    private:\n\n        //\u30ed\u30fc\u30ab\u30eb\u5ea7\u6a19\u3068\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19\n        struct Elm\n        {\n            Vec2 m_pos;\n            double m_rotate;\n            Vec2 m_scale;\n\n            Elm() :\n                m_pos(0, 0),\n                m_rotate(0),\n                m_scale(1, 1)\n            {}\n\n            Elm(const Vec2& pos, const double rotate, const Vec2& scale) :\n                m_pos(pos),\n                m_rotate(rotate),\n                m_scale(scale)\n            {}\n\n        }m_local, m_global;\n\n        //\u89aa\n        Transform *m_parent = nullptr;\n\n        //\u5b50\u4f9b\n        std::list<Transform*> m_childs;\n\n        //\u5b50\u4f9b\u306e\u8ffd\u52a0\n        bool addChild(Transform* const child);\n        //\u5b50\u4f9b\u306e\u524a\u9664\n        void deleteChild(Transform* const child);\n\n    public:\n\n        Transform() = default;\n\n        Transform(const Vec2 & pos, const double rotate, const Vec2 & scale = { 1,1 }, Transform * const parent = nullptr);\n\n        ~Transform();\n    };\n\n\n\n\u3042\u3068\u306f\u3001\u3053\u308c\u306b\u901a\u77e5\u306e\u95a2\u6570\u3084\u30bb\u30c3\u30bf\u30fc\u7b49\u3092\u8ffd\u52a0\u3059\u308c\u3070\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n\u89aa\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304b\u3089\u81ea\u8eab\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6c42\u3081\u308b\n\u4e0a\u306eclass\u306b\n\u901a\u77e5\u95a2\u6570\nvoid Transform::notifyUpdate()\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u3053\u306e\u95a2\u6570\u306f\u3001\u81ea\u8eab\u306e\u30ed\u30fc\u30ab\u30eb\u5ea7\u6a19\u304c\u76f4\u63a5\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u3001\u89aa\u306e\u5ea7\u6a19\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u307e\u3059\u3002\n\n\u5b9f\u88c5\n\nTransform.cpp\nvoid Transform::notifyUpdate()\n    {\n        //\u30ed\u30fc\u30ab\u30eb\u3001\u89aa\u306e\u5909\u66f4\u304b\u3089\u3001\u5b9f\u969b\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19\u3092\u8abf\u6574\n        if (m_parent != nullptr)\n        {\n            //\u5ea7\u6a19\n            const auto m =\n                Mat3x2::Scale(m_parent->m_global.m_scale).\n                rotate(m_parent->m_global.m_rotate);\n\n            m_global.m_pos = m_parent->m_global.m_pos + m.transform(m_local.m_pos);\n\n            //\u56de\u8ee2\u89d2\u5ea6\n            m_global.m_rotate = m_local.m_rotate + m_parent->m_global.m_rotate;\n\n            //\u62e1\u5927\u7387\n            m_global.m_scale.x = m_local.m_scale.x*m_parent->m_global.m_scale.x;\n            m_global.m_scale.y = m_local.m_scale.y*m_parent->m_global.m_scale.y;\n\n        }\n        else\n        {\n            m_global.m_pos = m_local.m_pos;\n            m_global.m_rotate = m_local.m_rotate;\n            m_global.m_scale = m_local.m_scale;\n        }\n        //\u5909\u66f4\u3092\u5b50\u4f9b\u306b\u901a\u77e5\n        for (auto&& child : m_childs)\n        {\n            if (child != nullptr)\n                child->notifyUpdate();\n        }\n    }\n\n\n\u5b9f\u969b\u306e\u4f4d\u7f6e\u306f\nA=\u89aa\u306e\u62e1\u5927\u7387\u306b\u3088\u308b\u62e1\u5927\u884c\u5217*\u89aa\u306e\u89d2\u5ea6\u306b\u3088\u308b\u56de\u8ee2\u884c\u5217\n\u3068\u3059\u308b\u3068\n\u89aa\u306e\u5ea7\u6a19+A*\u81ea\u8eab\u306e\u30ed\u30fc\u30ab\u30eb\u5ea7\u6a19\n\u5b9f\u969b\u306e\u56de\u8ee2\u89d2\u5ea6\u306f\n\u89aa\u306e\u56de\u8ee2\u89d2\u5ea6+\u81ea\u8eab\u306e\u30ed\u30fc\u30ab\u30eb\u56de\u8ee2\u89d2\u5ea6\n\u5b9f\u969b\u306e\u62e1\u5927\u7387\u306f\n\u89aa\u306e\u62e1\u5927\u7387*\u81ea\u8eab\u306e\u30ed\u30fc\u30ab\u30eb\u62e1\u5927\u7387\n\u3067\u305d\u308c\u305e\u308c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\n\u3082\u3057\u89aa\u304c\u3044\u306a\u3044\u5834\u5408\u306f\u81ea\u8eab\u306e\u30ed\u30fc\u30ab\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u30b0\u30ed\u30fc\u30d0\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5168\u304f\u540c\u3058\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30ed\u30fc\u30ab\u30eb\u306e\u5024\u3092\u5909\u66f4\u3057\u305f\u3089\n\u30ed\u30fc\u30ab\u30eb\u306e\u5ea7\u6a19\u3092\u5909\u66f4\u3059\u308b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u305f\u3089\u3001\u5024\u3092\u66f8\u304d\u63db\u3048\u305f\u3042\u3068\u306b\u901a\u77e5\u95a2\u6570\u3092\u547c\u3073\u307e\u3059\u3002\n\nTransform.cpp\n    void Transform::_setLocalPos(const Vec2 & pos)\n    {\n        m_local.m_pos = pos;\n        this->notifyUpdate();\n    }\n\n\n\u901a\u77e5\u95a2\u6570\u3092public\u306b\u3057\u3066class\u4f7f\u7528\u8005\u304c\u3059\u3079\u3066\u306e\u5024\u5909\u66f4\u5f8c\u6700\u5f8c\u306b\u5fc5\u305a\u547c\u3076\u3088\u3046\u306b\u7ba1\u7406\u3059\u308c\u3070\u5b9f\u884c\u901f\u5ea6\u306f\u3042\u3052\u3089\u308c\u307e\u3059\u304c\u4f7f\u3044\u3084\u3059\u3055\u3092\u6c42\u3081\u3066\u4eca\u56de\u306f\u4e2d\u3067\u547c\u3076\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u540c\u69d8\u306b\u3001\u30ed\u30fc\u30ab\u30eb\u62e1\u5927\u7387\u3084\u3001\u30ed\u30fc\u30ab\u30eb\u56de\u8ee2\u89d2\u5ea6\u306e\u5909\u66f4\u95a2\u6570\u3082\u4f5c\u308c\u307e\u3059\u3002\n\n\u30b0\u30ed\u30fc\u30d0\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u66f4\u3057\u305f\u3068\u304d\u306b\u30ed\u30fc\u30ab\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6c42\u3081\u308b\n\u5024\u306e\u5909\u66f4\u306f\u30ed\u30fc\u30ab\u30eb\u3060\u3051\u3067\u306a\u304f\u30b0\u30ed\u30fc\u30d0\u30eb\u306e\u5024\u3092\u76f4\u63a5\u5909\u66f4\u3059\u308b\u3053\u3068\u3082\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\u30b0\u30ed\u30fc\u30d0\u30eb\u304c\u5909\u308f\u3063\u305f\u3053\u3068\u306b\u3088\u308a\u30ed\u30fc\u30ab\u30eb\u3082\u304b\u308f\u308b\u306f\u305a\u306a\u306e\u3067\u518d\u8a08\u7b97\u304c\u3072\u3064\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u30b0\u30ed\u30fc\u30d0\u30eb\u306e\u5024\u304c\u5909\u66f4\u3055\u308c\u305f\u6642\u306e\u901a\u77e5\u95a2\u6570\n\nTransform.cpp\nvoid Transform::notifyGlobalUpdate()\n    {\n        //\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19\u3092\u5909\u63db\u3057\u305f\u3068\u304d\u306b\u30ed\u30fc\u30ab\u30eb\u5ea7\u6a19\u3082\u8abf\u6574\n        if (m_parent != nullptr)\n        {\n            const auto m =\n                Mat3x2::Rotate(-m_parent->m_global.m_rotate).scale({ 1 / m_parent->m_global.m_scale.x,  1 / m_parent->m_global.m_scale.y });\n            m_local.m_pos = m.transform(m_global.m_pos - m_parent->m_global.m_pos);\n\n            m_local.m_rotate = m_global.m_rotate - m_parent->m_global.m_rotate;\n\n            m_local.m_scale.x = m_global.m_scale.x / m_parent->m_global.m_scale.x;\n            m_local.m_scale.y = m_global.m_scale.y / m_parent->m_global.m_scale.y;\n\n        }\n        else\n        {\n            m_local.m_pos = m_global.m_pos;\n            m_local.m_rotate = m_global.m_rotate;\n            m_local.m_scale = m_global.m_scale;\n        }\n\n        //\u5909\u66f4\u3092\u5b50\u4f9b\u306b\u901a\u77e5\n        for (auto&& child : m_childs)\n        {\n            if (child != nullptr)\n                child->notifyUpdate();\n        }\n\n    }\n\n\n\u30b0\u30ed\u30fc\u30d0\u30eb\u304b\u3089\u30ed\u30fc\u30ab\u30eb\u3092\u6c42\u3081\u308b\u306b\u306f\u3001\u3055\u304d\u307b\u3069\u30ed\u30fc\u30ab\u30eb\u304b\u3089\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u3059\u308b\u305f\u3081\u306b\u3057\u305f\u64cd\u4f5c\u3068\u5168\u304f\u771f\u9006\u306e\u3053\u3068\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u30ed\u30fc\u30ab\u30eb\u306e\u4f4d\u7f6e\u306f\nA\u306e\u9006\u884c\u5217*(\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19-\u89aa\u306e\u5ea7\u6a19)\n\u30ed\u30fc\u30ab\u30eb\u306e\u56de\u8ee2\u89d2\u5ea6\u306f\n\u30b0\u30ed\u30fc\u30d0\u30eb\u56de\u8ee2\u89d2\u5ea6-\u89aa\u306e\u56de\u8ee2\u89d2\u5ea6\n\u30ed\u30fc\u30ab\u30eb\u306e\u62e1\u5927\u7387\u306f\n\u30b0\u30ed\u30fc\u30d0\u30eb\u62e1\u5927\u7387/\u89aa\u306e\u62e1\u5927\u7387\n\u3067\u305d\u308c\u305e\u308c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\n\n\u30b0\u30ed\u30fc\u30d0\u30eb\u306e\u5024\u3092\u5909\u66f4\u3057\u305f\u3089\n\u3055\u304d\u307b\u3069\u540c\u69d8\u306b\u5024\u306e\u5909\u66f4+\u901a\u77e5\u95a2\u6570\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nTransform.cpp\n    void Transform::_setPos(const Vec2 & pos)\n    {\n        m_global.m_pos = pos;\n        this->notifyGlobalUpdate();\n    }\n\n\n\n\u5b50\u4f9b\u306e\u8ffd\u52a0\u3001\u524a\u9664\u306e\u95a2\u6570\n\nTransform.cpp\n\n//\u8ffd\u52a0\n    bool Transform::addChild(Transform * const child)\n    {\n        if (child == nullptr)\n            return false;\n\n        //\u3082\u3057\u81ea\u5206\u304c\u7956\u5148\u306a\u3089\u8ffd\u52a0\u5931\u6557\n        Transform* check = this;\n        do\n        {\n            if (check == child)\n            {\n                return false;\n            }\n\n            check = check->m_parent;\n\n        } while (check != nullptr);\n\n        //\u4eca\u306e\u89aa\u304b\u3089\u81ea\u5206\u304c\u5b50\u4f9b\u3067\u3042\u308b\u3053\u3068\u306f\u5fd8\u308c\u3066\u3082\u3089\u3046\n        auto prevParent = child->m_parent;\n\n        if (prevParent != nullptr)\n            prevParent->deleteChild(child);\n\n        //\u5b50\u4f9b\u306e\u89aa\u306b\u306a\u308b\n        child->m_parent = this;\n        m_childs.emplace_back(child);\n\n        return true;\n    }\n\n//\u524a\u9664\n    void Transform::deleteChild(Transform * const child)\n    {\n        if (child != nullptr && !m_childs.empty())\n        {\n            Erase(m_childs, child);\n        }\n    }\n\n\n\n\u524a\u9664\u306f\u7c21\u5358\u3067\u3059\u304c\u3001\u8ffd\u52a0\u306b\u3064\u3044\u3066\u89e3\u8aac\n\u3082\u3057\u81ea\u5206\u306e\u7956\u5148\u306b\u81ea\u5206\u306e\u5b50\u4f9b\u304c\u3044\u305f\u3089\u304a\u304b\u3057\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3057\u305f\u304c\u3063\u3066\u5b50\u4f9b\u3092\u8ffd\u52a0\u3059\u308b\u3068\u304d\u306b\u3082\u3057\u81ea\u5206\u304c\u3059\u3067\u306b\u5b50\u4f9b\u306e\u7956\u5148\u306b\u5b58\u5728\u3057\u3066\u308b\u3068\u304d\u306b\u306f\u5931\u6557\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u5931\u6557\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u5b50\u4f9b\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u81ea\u8eab\u3092\u5b50\u4f9b\u306e\u89aa\u306b\u3057\u307e\u3059\u3002\n\u305d\u306e\u969b\u3001\u3082\u3068\u3082\u3068\u5225\u306e\u89aa\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u305f\u306a\u3089\u3070\u81ea\u5206\u3092\u5b50\u4f9b\u304b\u3089\u6d88\u3057\u3066\u3082\u3089\u3044\u307e\u3059\u3002\n\n\u89aa\u306e\u6307\u5b9a\n\nTransform.cpp\n    bool Transform::_setParent(Transform * const parent)\n    {\n        if (parent != nullptr)\n        {\n            if (!parent->addChild(this))\n                return false;\n        }\n        else\n        {\n            if (m_parent != nullptr)\n                m_parent->deleteChild(this);\n\n            m_parent = parent;\n\n        }\n        _setPos(this->m_global.m_pos);\n        _setRotate(this->m_global.m_rotate);\n        _setScale(this->m_global.m_scale);\n\n\n        return true;\n    }\n\n\n\u89aa\u3092\u6307\u5b9a\u3059\u308b\u3068\u304d\u306b\u3001\u89aa\u306e\u5b50\u4f9b\u8ffd\u52a0\u95a2\u6570\u306b\u81ea\u8eab\u3092\u308f\u305f\u3057\u307e\u3059\u3002\n\u3082\u3057\u89aa\u3092nullptr\u306b\u3057\u305f\u3044\u3068\u304d\u306f\u3001\u3082\u3068\u3082\u3068\u89aa\u304c\u3044\u305f\u306a\u3089\u81ea\u8eab\u3092\u5b50\u4f9b\u304b\u3089\u524a\u9664\u3057\u3066\u3082\u3089\u3044\u307e\u3059\n\u3053\u306e\u3068\u304d\u3001\u89aa\u304c\u6307\u5b9a\u3055\u308c\u305f\u3053\u3068\u306b\u3088\u3063\u3066\u30ed\u30fc\u30ab\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5909\u308f\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u5404\u30bb\u30c3\u30bf\u30fc\u3092\u547c\u3093\u3067\u3044\u307e\u3059\u3002\n\n\u3042\u3068\u59cb\u672b\n\u6700\u5f8c\u306b\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5fd8\u308c\u305a\u66f8\u304d\u307e\u3059\u3002\n\nTransfrom.cpp\n    Transform::~Transform()\n    {\n        if (m_parent != nullptr)\n        {\n            m_parent->deleteChild(this);\n        }\n        for (auto&& elm : m_childs)\n        {\n            if (elm != nullptr)\n            {\n                elm->m_parent = nullptr;\n            }\n        }\n\n    }\n\n\n\u81ea\u8eab\u304c\u7834\u68c4\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u89aa\u304c\u3044\u305f\u306a\u3089\u81ea\u5206\u3092\u30ea\u30b9\u30c8\u304b\u3089\u524a\u9664\u3057\u3066\u3082\u3089\u3044\n\u5b50\u4f9b\u304c\u3044\u305f\u306a\u3089\u5b50\u4f9b\u306e\u89aa\u3092nullptr\u306b\u3057\u307e\u3059\u3002\n\n\u3067\u304d\u305f\n\u3053\u308c\u3067Unity\u306e\u3088\u3046\u306b\u89aa\u5b50\u95a2\u4fc2\u3092\u3082\u3063\u305fTransform class\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u307e\u3068\u3081\n\n\u30ed\u30fc\u30ab\u30eb\u3068\u30b0\u30ed\u30fc\u30d0\u30eb\u306e\u95a2\u4fc2\u3092\u5e38\u306b\u4fdd\u3064\u305f\u3081\u306b\u3001\u7247\u65b9\u304c\u5909\u308f\u3063\u305f\u3068\u304d\u306f\u3082\u3046\u7247\u65b9\u3082\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\u5024\u3092\u5909\u3048\u308b\u305f\u3073\u306b\u901a\u77e5\u304c\u8d77\u304d\u308b\u306e\u3067\u901f\u5ea6\u4f4e\u4e0b\u304c\u8ab2\u984c\n\u4f7f\u3044\u3084\u3059\u304f\u3066\u3001\u3082\u3063\u3068\u3044\u3044\u5b9f\u88c5\u306a\u3044\u306e\u304b\uff1f\n\n\n\u304a\u307e\u3051\n\u30d7\u30ed\u30d1\u30c6\u30a3\u306a\u3069\u3092\u5229\u7528\u3057\u3066\n\u3082\u3063\u3068\u4f7f\u3044\u3084\u3059\u304f\u3057\u305fclass\n\u5b8c\u6210\u7248\n\nTransform.h\nclass PropertyVec2;\n\n    class Transform\n    {\n        friend PropertyVec2;\n    private:\n\n        //\u30ed\u30fc\u30ab\u30eb\u5ea7\u6a19\u3068\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19\n        struct Elm\n        {\n            Vec2 m_pos;\n            double m_rotate;\n            Vec2 m_scale;\n\n            Elm() :\n                m_pos(0, 0),\n                m_rotate(0),\n                m_scale(1, 1)\n            {}\n\n            Elm(const Vec2& pos, const double rotate, const Vec2& scale) :\n                m_pos(pos),\n                m_rotate(rotate),\n                m_scale(scale)\n            {}\n\n        }m_local, m_global;\n\n        //\u89aa\n        Transform *m_parent = nullptr;\n\n        //\u5b50\u4f9b\n        std::list<Transform*> m_childs;\n\n        //\u66f4\u65b0\u95a2\u6570\n        void notifyGlobalUpdate();\n        void notifyUpdate();\n\n        //\u5b50\u4f9b\u306e\u8ffd\u52a0\n        bool addChild(Transform* const child);\n        //\u5b50\u4f9b\u306e\u524a\u9664\n        void deleteChild(Transform* const child);\n\n\n\n    public:\n\n        Transform() = default;\n\n        Transform(const Vec2 & pos, const double rotate, const Vec2 & scale = { 1,1 }, Transform * const parent = nullptr);\n\n        Transform(const Vec2 & pos, const double rotate, const double & scale, Transform * const parent = nullptr);\n\n        Transform(const Vec2 & pos);\n\n        Transform(const Vec2 & pos, Transform * const parent);\n\n        ~Transform();\n\n        //\u4ee3\u5165\n        Transform& operator =(const Transform& other);\n\n        //\u30d7\u30ed\u30d1\u30c6\u30a3\n        //\u30b0\u30ed\u30fc\u30d0\u30eb\n        _declspec(property(get = _getPos, put = _setPos))Vec2& pos;\n        _declspec(property(get = _getPos, put = _setPos))PropertyVec2 pos;\n        _declspec(property(get = _getRotate, put = _setRotate))double rotate;\n        _declspec(property(get = _getScale, put = _setScale))Vec2& scale;\n        _declspec(property(get = _getScale, put = _setScale))PropertyVec2 scale;\n\n        //\u30ed\u30fc\u30ab\u30eb\n        _declspec(property(get = _getLocalPos, put = _setLocalPos))Vec2& localPos;\n        _declspec(property(get = _getLocalPos, put = _setLocalPos))PropertyVec2 localPos;\n\n        _declspec(property(get = _getLocalRotate, put = _setLocalRotate))double localRotate;\n        _declspec(property(get = _getLocalScale, put = _setLocalScale))Vec2& localScale;\n        _declspec(property(get = _getLocalScale, put = _setLocalScale))PropertyVec2 localScale;\n\n\n        //\u89aa\n        _declspec(property(get = _getParent, put = _setParent))Transform* parent;\n\n\n        bool _setParent(Transform*const parent);\n\n        const Transform*const _getParent()const;\n\n        void _setPos(const Vec2& pos);\n        PropertyVec2 _getPos();\n        const Vec2& _getPos()const;\n\n\n        void _setRotate(const double angle);\n        const double _getRotate()const;\n\n        void _setScale(const Vec2& scale);\n        void _setScale(const double scale);\n        PropertyVec2 _getScale();\n        const Vec2& _getScale()const;\n\n        void _setLocalPos(const Vec2& pos);\n        PropertyVec2 _getLocalPos();\n        const Vec2& _getLocalPos()const;\n\n        void _setLocalRotate(const double angle);\n        const double _getLocalRotate()const;\n\n        void _setLocalScale(const Vec2& scale);\n        void _setLocalScale(const double scale);\n\n        PropertyVec2 _getLocalScale();\n        const Vec2& _getLocalScale()const;\n\n\n    };\n\n    //\u30d7\u30ed\u30d1\u30c6\u30a3\u7528Vec2\n    //Vec2\u578b\u306e\u30e1\u30f3\u30d0\u5909\u6570\u306e\u5909\u66f4\u5f8c\u306b\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30e0\u306b\u901a\u77e5\u3059\u308b\n    class PropertyVec2 :public Vec2\n    {\n        friend class Transform;\n    private:\n        Transform*const m_transform;\n        Vec2*const m_value;\n        bool m_isLocal;\n\n        PropertyVec2(Transform*const me, Vec2*const value, bool local) :\n            Vec2(value->x, value->y),\n            m_transform(me),\n            m_value(value),\n            m_isLocal(local)\n        {}\n    public:\n\n        __declspec(property(get = _getX, put = _setX))double x;\n        __declspec(property(get = _getY, put = _setY))double y;\n\n        double _getX()const\n        {\n            return m_value->x;\n        }\n\n        void _setX(double x)\n        {\n            m_value->x = x;\n            if (!m_isLocal)\n                m_transform->notifyGlobalUpdate();\n            else\n                m_transform->notifyUpdate();\n        }\n\n        double _getY()const\n        {\n            return m_value->y;\n        }\n\n        void _setY(double y)\n        {\n            m_value->y = y;\n\n            if (!m_isLocal)\n                m_transform->notifyGlobalUpdate();\n            else\n                m_transform->notifyUpdate();\n\n        }\n\n    };\n\n\n\nTransform.cpp\nTransform::Transform(const Vec2& pos, const double rotate, const Vec2& scale, Transform* const parent) :\n        m_global(pos, rotate, scale),\n        m_local(pos, rotate, scale),\n        m_parent(nullptr)\n    {\n        this->parent = parent;\n    }\n\n    Transform::Transform(const Vec2& pos, const double rotate, const double& scale, Transform* const parent) :\n        Transform(pos, rotate, { scale,scale }, parent)\n    {}\n\n    Transform::Transform(const Vec2& pos) :\n        Transform(pos, 0, { 1,1 }, nullptr)\n    {}\n\n    Transform::Transform(const Vec2& pos, Transform* const parent) :\n        Transform(pos, 0, { 1,1 }, parent)\n    {}\n    void Transform::notifyGlobalUpdate()\n    {\n        //\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19\u3092\u5909\u63db\u3057\u305f\u3068\u304d\u306b\u30ed\u30fc\u30ab\u30eb\u5ea7\u6a19\u3082\u8abf\u6574\n        if (m_parent != nullptr)\n        {\n            const auto m =\n                Mat3x2::Rotate(-m_parent->m_global.m_rotate).scale({ 1 / m_parent->m_global.m_scale.x,  1 / m_parent->m_global.m_scale.y });\n            m_local.m_pos = m.transform(m_global.m_pos - m_parent->m_global.m_pos);\n\n            m_local.m_rotate = m_global.m_rotate - m_parent->m_global.m_rotate;\n\n            m_local.m_scale.x = m_global.m_scale.x / m_parent->m_global.m_scale.x;\n            m_local.m_scale.y = m_global.m_scale.y / m_parent->m_global.m_scale.y;\n\n        }\n        else\n        {\n            m_local.m_pos = m_global.m_pos;\n            m_local.m_rotate = m_global.m_rotate;\n            m_local.m_scale = m_global.m_scale;\n        }\n\n        //\u5909\u66f4\u3092\u5b50\u4f9b\u306b\u901a\u77e5\n        for (auto&& child : m_childs)\n        {\n            if (child != nullptr)\n                child->notifyUpdate();\n        }\n\n    }\n\n    void Transform::notifyUpdate()\n    {\n        //\u30ed\u30fc\u30ab\u30eb\u3001\u89aa\u306e\u5909\u66f4\u304b\u3089\u3001\u5b9f\u969b\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19\u3092\u8abf\u6574\n        if (m_parent != nullptr)\n        {\n            const auto m =\n                Mat3x2::Scale(m_parent->m_global.m_scale).\n                rotate(m_parent->m_global.m_rotate);\n\n            m_global.m_pos = m_parent->m_global.m_pos + m.transform(m_local.m_pos);\n\n            m_global.m_rotate = m_local.m_rotate + m_parent->m_global.m_rotate;\n            m_global.m_scale.x = m_local.m_scale.x*m_parent->m_global.m_scale.x;\n            m_global.m_scale.y = m_local.m_scale.y*m_parent->m_global.m_scale.y;\n\n        }\n        else\n        {\n            m_global.m_pos = m_local.m_pos;\n            m_global.m_rotate = m_local.m_rotate;\n            m_global.m_scale = m_local.m_scale;\n        }\n        //\u5909\u66f4\u3092\u5b50\u4f9b\u306b\u901a\u77e5\n        for (auto&& child : m_childs)\n        {\n            if (child != nullptr)\n                child->notifyUpdate();\n        }\n    }\n\n    bool Transform::addChild(Transform * const child)\n    {\n        if (child == nullptr)\n            return false;\n\n        //\u3082\u3057\u81ea\u5206\u304c\u7956\u5148\u306a\u3089\u8ffd\u52a0\u5931\u6557\n        Transform* check = this;\n        do\n        {\n            if (check == child)\n            {\n                return false;\n            }\n\n            check = check->m_parent;\n\n        } while (check != nullptr);\n\n        //\u4eca\u306e\u89aa\u304b\u3089\u81ea\u5206\u304c\u5b50\u4f9b\u3067\u3042\u308b\u3053\u3068\u306f\u5fd8\u308c\u3066\u3082\u3089\u3046\n        auto prevParent = child->m_parent;\n\n        if (prevParent != nullptr)\n            prevParent->deleteChild(child);\n\n        //\u5b50\u4f9b\u306e\u89aa\u306b\u306a\u308b\n        child->m_parent = this;\n        m_childs.emplace_back(child);\n\n        return true;\n    }\n\n    void Transform::deleteChild(Transform * const child)\n    {\n        if (child != nullptr && !m_childs.empty())\n        {\n            Erase(m_childs, child);\n        }\n    }\n\n    Transform::~Transform()\n    {\n        if (m_parent != nullptr)\n        {\n            m_parent->deleteChild(this);\n        }\n        for (auto&& elm : m_childs)\n        {\n            if (elm != nullptr)\n            {\n                elm->m_parent = nullptr;\n            }\n        }\n\n    }\n\n    bool Transform::_setParent(Transform * const parent)\n    {\n        if (parent != nullptr)\n        {\n            if (!parent->addChild(this))\n                return false;\n        }\n        else\n        {\n            if (m_parent != nullptr)\n                m_parent->deleteChild(this);\n\n            m_parent = parent;\n\n        }\n        _setPos(this->m_global.m_pos);\n        _setRotate(this->m_global.m_rotate);\n        _setScale(this->m_global.m_scale);\n\n\n        return true;\n    }\n\n    const Transform * const Transform::_getParent() const\n    {\n        return m_parent;\n    }\n    const Vec2 & Transform::_getPos() const\n    {\n        return m_global.m_pos;\n    }\n    PropertyVec2 Transform::_getPos()\n    {\n        return{ this,&m_global.m_pos,false };\n    }\n    const double Transform::_getRotate() const\n    {\n        return m_global.m_rotate;\n    }\n    const Vec2 & Transform::_getScale() const\n    {\n        return m_global.m_scale;\n    }\n    PropertyVec2 Transform::_getScale()\n    {\n        return{ this,&m_global.m_scale,false };\n    }\n    const Vec2 & Transform::_getLocalPos() const\n    {\n        return m_local.m_pos;\n    }\n    PropertyVec2 Transform::_getLocalPos()\n    {\n        return{ this,&m_local.m_pos,true };\n    }\n    const double Transform::_getLocalRotate() const\n    {\n        return m_local.m_rotate;\n    }\n    const Vec2 & Transform::_getLocalScale() const\n    {\n        return m_local.m_scale;\n    }\n\n    PropertyVec2 Transform::_getLocalScale()\n    {\n        return{ this,&m_local.m_scale,true };\n    }\n\n\n    Transform & Transform::operator=(const Transform & other)\n    {\n        //\u30bb\u30c3\u30bf\u30fc\u306e\u307b\u3046\u3092\u547c\u3070\u306a\u3044\u3068\u524d\u306e\u89aa\u306e\u5b50\u4f9b\u3068\u3057\u3066\u6b8b\u3063\u3066\u3057\u307e\u3046\n        this->parent = other.m_parent;\n\n\n        this->m_global = other.m_global;\n        this->m_local = other.m_local;\n\n        //\u5b50\u4f9b\u306b\u3064\u3044\u3066\u306e\u60c5\u5831\u306f\u5f15\u304d\u7d99\u304c\u306a\u3044\n\n        return *this;\n    }\n\n    void Transform::_setLocalPos(const Vec2 & pos)\n    {\n        m_local.m_pos = pos;\n        this->notifyUpdate();\n    }\n\n    void Transform::_setLocalRotate(const double angle)\n    {\n        m_local.m_rotate = angle;\n        this->notifyUpdate();\n    }\n\n    void Transform::_setLocalScale(const Vec2 & scale)\n    {\n        m_local.m_scale = scale;\n        this->notifyUpdate();\n    }\n\n    void Transform::_setLocalScale(const double scale)\n    {\n        _setLocalScale({ scale,scale });\n    }\n\n    void Transform::_setPos(const Vec2 & pos)\n    {\n        m_global.m_pos = pos;\n        this->notifyGlobalUpdate();\n    }\n\n    void Transform::_setRotate(const double angle)\n    {\n        m_global.m_rotate = angle;\n        this->notifyGlobalUpdate();\n    }\n    void Transform::_setScale(const Vec2 & scale)\n    {\n        m_global.m_scale = scale;\n        this->notifyGlobalUpdate();\n    }\n    void Transform::_setScale(const double scale)\n    {\n        _setScale({ scale,scale });\n    }\n\n\n#\u306f\u3058\u3081\u306b\n##Unity\u306eTransform\u3068\u306f\n**\u89aa\u5b50\u95a2\u4fc2\u3092\u6301\u3061**\u3001\u89aa\u306b\u5bfe\u3059\u308b\u30ed\u30fc\u30ab\u30eb\u306e\u5ea7\u6a19\u3001\u89d2\u5ea6\u3001\u62e1\u5927\u7387\u306a\u3069\u304b\u3089\u30b0\u30ed\u30fc\u30d0\u30eb\u306e\u5024\u306b\u5909\u63db\u3059\u308b\u3082\u306e\u3067\u3059\u3002(\u96d1)\n\u8a73\u3057\u304f\u306f\u3001\u306f\u3057\u3087\u308a\u307e\u3059\u3002\n\n\u89aa\u5b50\u95a2\u4fc2\u3092\u6301\u3066\u308b\u306e\u304c\u7d50\u69cb\u4f7f\u3044\u3084\u3059\u3044\u3067\u3059\u3002\n\n##\u4eca\u56de\u4f5c\u308b\u3082\u306e\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u305d\u308c\u3063\u307d\u3044\u3082\u306e\u3092C++\u3067\u4f5c\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u304c\u3001\u9762\u5012\u304f\u3055\u3044\u306e\u3067\u6b21\u5143\u30921\u3064\u3055\u3052\u3066**2D**\u7528\u3067\u5b9f\u88c5\u3057\u3066\u307f\u308b\u3053\u3068\u3068\u3057\u307e\u3059\u3002\n\n\u8003\u3048\u65b9\u306f\u540c\u3058\u306a\u306e\u30673D\u7528\u3082\u5bb9\u6613\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n##2D\u306e\u5ea7\u6a19\u5909\u63db\u306b\u5fc5\u8981\u306a\u3082\u306e\n\n+ \u5ea7\u6a19(Vector2)\n+ Z\u8ef8\u56de\u8ee2\u89d2\u5ea6(double)\n+ \u62e1\u5927\u7387(Vector2)\n\n##\u4eca\u56de\u4f7f\u7528\u3059\u308b\u74b0\u5883\n\u8a00\u8a9e\u306fC++\u3067\nVec2\u3084Mat3x2\u3068\u3044\u3063\u305fclass\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u306e\u3067Siv3D\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u307e\u3059\u304c\u3001\u7c21\u5358\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\n\n###Vec2\u306b\u3064\u3044\u3066\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a2D\u30d9\u30af\u30c8\u30eb\u306e\u69cb\u9020\u4f53\u3060\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\n\n```\nstruct Vec2\n{\n  double x,y;\n};\n```\n\n###Mat3x2\u306b\u3064\u3044\u3066\n2D\u306e\u5834\u5408\u540c\u6b21\u5ea7\u6a19\u306e3\u5217\u76ee\u304c\u56fa\u5b9a\u306a\u305f\u3081\u30013x2\u884c\u5217\u306e\u30c7\u30fc\u30bf\u3067\u3001\u30a2\u30d5\u30a3\u30f3\u5909\u63db\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u5c11\u3057\u304a\u3055\u3089\u3044\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n####\u79fb\u52d5\n\n```math\n\\begin{bmatrix}\nx^{,}\\\\\\ \ny^{,}\\\\\\\n1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n1 & 0 & a\\\\\\\n0 & 1 & b\\\\\\\n0 & 0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\nx\\\\\\\ny\\\\\\\n1\n\\end{bmatrix}\n```\n\n\n#####\u56de\u8ee2\n\n\n```math\n\\begin{bmatrix}\nx^{,}\\\\\\ \ny^{,}\\\\\\\n1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ncos(r) & -sin(r) & 0\\\\\\\nsin(r) & cos(r) & 0\\\\\\\n0 & 0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\nx\\\\\\\ny\\\\\\\n1\n\\end{bmatrix}\n```\n\n#####\u62e1\u5927\n\n\n```math\n\\begin{bmatrix}\nx^{,}\\\\\\ \ny^{,}\\\\\\\n1\n\\end{bmatrix}\n=\n\\begin{bmatrix}\ns_{x} & 0 & 0\\\\\\\n0 & s_{y} & 0\\\\\\\n0 & 0 & 1\n\\end{bmatrix}\n\\begin{bmatrix}\nx\\\\\\\ny\\\\\\\n1\n\\end{bmatrix}\n```\n\n#\u30b3\u30fc\u30c9\n\n##\u5168\u4f53\u50cf\n\n###\u65b9\u91dd\n\u5909\u63db\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u6301\u3064\u69cb\u9020\u4f53\u3092\u3082\u3063\u305f\u30ed\u30fc\u30ab\u30eb\u3068\u30b0\u30ed\u30fc\u30d0\u30eb\u306e\u5909\u6570\u3092\u3082\u3064Transform class\u3092\u4f5c\u308a\u3001\u30e1\u30f3\u30d0\u306b\u89aa\u3068\u5b50\u4f9b\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u6301\u3061\u307e\u3059\u3002\n\n\u81ea\u8eab\u306e\u5ea7\u6a19\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u3001\u5168\u3066\u306e\u5b50\u4f9b\u306b\u305d\u308c\u3092\u901a\u77e5\u3057\u3001\u5b50\u4f9b\u306e\u65b0\u3057\u3044\u5ea7\u6a19\u3092\u6539\u3081\u3066\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n###\u3056\u3063\u304f\u308a\u3068\n\n```cpp:Transform.h\n\nclass Transform\n\t{\n\tprivate:\n\n\t\t//\u30ed\u30fc\u30ab\u30eb\u5ea7\u6a19\u3068\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19\n\t\tstruct Elm\n\t\t{\n\t\t\tVec2 m_pos;\n\t\t\tdouble m_rotate;\n\t\t\tVec2 m_scale;\n\n\t\t\tElm() :\n\t\t\t\tm_pos(0, 0),\n\t\t\t\tm_rotate(0),\n\t\t\t\tm_scale(1, 1)\n\t\t\t{}\n\n\t\t\tElm(const Vec2& pos, const double rotate, const Vec2& scale) :\n\t\t\t\tm_pos(pos),\n\t\t\t\tm_rotate(rotate),\n\t\t\t\tm_scale(scale)\n\t\t\t{}\n\n\t\t}m_local, m_global;\n\n\t\t//\u89aa\n\t\tTransform *m_parent = nullptr;\n\n\t\t//\u5b50\u4f9b\n\t\tstd::list<Transform*> m_childs;\n\n\t\t//\u5b50\u4f9b\u306e\u8ffd\u52a0\n\t\tbool addChild(Transform* const child);\n\t\t//\u5b50\u4f9b\u306e\u524a\u9664\n\t\tvoid deleteChild(Transform* const child);\n\n\tpublic:\n\n\t\tTransform() = default;\n\n\t\tTransform(const Vec2 & pos, const double rotate, const Vec2 & scale = { 1,1 }, Transform * const parent = nullptr);\n\n\t\t~Transform();\n\t};\n\n```\n\n\u3042\u3068\u306f\u3001\u3053\u308c\u306b\u901a\u77e5\u306e\u95a2\u6570\u3084\u30bb\u30c3\u30bf\u30fc\u7b49\u3092\u8ffd\u52a0\u3059\u308c\u3070\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n##\u89aa\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304b\u3089\u81ea\u8eab\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6c42\u3081\u308b\n\n\u4e0a\u306eclass\u306b\n\u901a\u77e5\u95a2\u6570\n`void Transform::notifyUpdate()`\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u95a2\u6570\u306f\u3001\u81ea\u8eab\u306e\u30ed\u30fc\u30ab\u30eb\u5ea7\u6a19\u304c\u76f4\u63a5\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u3001\u89aa\u306e\u5ea7\u6a19\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u304d\u306b\u547c\u3070\u308c\u307e\u3059\u3002\n\n###\u5b9f\u88c5\n\n```cpp:Transform.cpp\nvoid Transform::notifyUpdate()\n\t{\n\t\t//\u30ed\u30fc\u30ab\u30eb\u3001\u89aa\u306e\u5909\u66f4\u304b\u3089\u3001\u5b9f\u969b\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19\u3092\u8abf\u6574\n\t\tif (m_parent != nullptr)\n\t\t{\n            //\u5ea7\u6a19\n\t\t\tconst auto m =\n\t\t\t\tMat3x2::Scale(m_parent->m_global.m_scale).\n\t\t\t\trotate(m_parent->m_global.m_rotate);\n\n\t\t\tm_global.m_pos = m_parent->m_global.m_pos + m.transform(m_local.m_pos);\n\n            //\u56de\u8ee2\u89d2\u5ea6\n\t\t\tm_global.m_rotate = m_local.m_rotate + m_parent->m_global.m_rotate;\n\n            //\u62e1\u5927\u7387\n\t\t\tm_global.m_scale.x = m_local.m_scale.x*m_parent->m_global.m_scale.x;\n\t\t\tm_global.m_scale.y = m_local.m_scale.y*m_parent->m_global.m_scale.y;\n\n\t\t}\n\t\telse\n\t\t{\n\t\t\tm_global.m_pos = m_local.m_pos;\n\t\t\tm_global.m_rotate = m_local.m_rotate;\n\t\t\tm_global.m_scale = m_local.m_scale;\n\t\t}\n\t\t//\u5909\u66f4\u3092\u5b50\u4f9b\u306b\u901a\u77e5\n\t\tfor (auto&& child : m_childs)\n\t\t{\n\t\t\tif (child != nullptr)\n\t\t\t\tchild->notifyUpdate();\n\t\t}\n\t}\n```\n\n\u5b9f\u969b\u306e\u4f4d\u7f6e\u306f\n\n`A=\u89aa\u306e\u62e1\u5927\u7387\u306b\u3088\u308b\u62e1\u5927\u884c\u5217*\u89aa\u306e\u89d2\u5ea6\u306b\u3088\u308b\u56de\u8ee2\u884c\u5217`\n\u3068\u3059\u308b\u3068\n`\u89aa\u306e\u5ea7\u6a19+A*\u81ea\u8eab\u306e\u30ed\u30fc\u30ab\u30eb\u5ea7\u6a19`\n\n\u5b9f\u969b\u306e\u56de\u8ee2\u89d2\u5ea6\u306f\n\n`\u89aa\u306e\u56de\u8ee2\u89d2\u5ea6+\u81ea\u8eab\u306e\u30ed\u30fc\u30ab\u30eb\u56de\u8ee2\u89d2\u5ea6`\n\n\u5b9f\u969b\u306e\u62e1\u5927\u7387\u306f\n\n`\u89aa\u306e\u62e1\u5927\u7387*\u81ea\u8eab\u306e\u30ed\u30fc\u30ab\u30eb\u62e1\u5927\u7387`\n\n\u3067\u305d\u308c\u305e\u308c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\n\n\u3082\u3057\u89aa\u304c\u3044\u306a\u3044\u5834\u5408\u306f\u81ea\u8eab\u306e\u30ed\u30fc\u30ab\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u30b0\u30ed\u30fc\u30d0\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u5168\u304f\u540c\u3058\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\n##\u30ed\u30fc\u30ab\u30eb\u306e\u5024\u3092\u5909\u66f4\u3057\u305f\u3089\n\n\u30ed\u30fc\u30ab\u30eb\u306e\u5ea7\u6a19\u3092\u5909\u66f4\u3059\u308b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u95a2\u6570\u3092\u4f5c\u3063\u305f\u3089\u3001\u5024\u3092\u66f8\u304d\u63db\u3048\u305f\u3042\u3068\u306b\u901a\u77e5\u95a2\u6570\u3092\u547c\u3073\u307e\u3059\u3002\n\n```cpp:Transform.cpp\n\tvoid Transform::_setLocalPos(const Vec2 & pos)\n\t{\n\t\tm_local.m_pos = pos;\n\t\tthis->notifyUpdate();\n\t}\n```\n\n\u901a\u77e5\u95a2\u6570\u3092public\u306b\u3057\u3066class\u4f7f\u7528\u8005\u304c\u3059\u3079\u3066\u306e\u5024\u5909\u66f4\u5f8c\u6700\u5f8c\u306b\u5fc5\u305a\u547c\u3076\u3088\u3046\u306b\u7ba1\u7406\u3059\u308c\u3070\u5b9f\u884c\u901f\u5ea6\u306f\u3042\u3052\u3089\u308c\u307e\u3059\u304c\u4f7f\u3044\u3084\u3059\u3055\u3092\u6c42\u3081\u3066\u4eca\u56de\u306f\u4e2d\u3067\u547c\u3076\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u540c\u69d8\u306b\u3001\u30ed\u30fc\u30ab\u30eb\u62e1\u5927\u7387\u3084\u3001\u30ed\u30fc\u30ab\u30eb\u56de\u8ee2\u89d2\u5ea6\u306e\u5909\u66f4\u95a2\u6570\u3082\u4f5c\u308c\u307e\u3059\u3002\n\n##\u30b0\u30ed\u30fc\u30d0\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u66f4\u3057\u305f\u3068\u304d\u306b\u30ed\u30fc\u30ab\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6c42\u3081\u308b\n\n\u5024\u306e\u5909\u66f4\u306f\u30ed\u30fc\u30ab\u30eb\u3060\u3051\u3067\u306a\u304f\u30b0\u30ed\u30fc\u30d0\u30eb\u306e\u5024\u3092\u76f4\u63a5\u5909\u66f4\u3059\u308b\u3053\u3068\u3082\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\u30b0\u30ed\u30fc\u30d0\u30eb\u304c\u5909\u308f\u3063\u305f\u3053\u3068\u306b\u3088\u308a\u30ed\u30fc\u30ab\u30eb\u3082\u304b\u308f\u308b\u306f\u305a\u306a\u306e\u3067\u518d\u8a08\u7b97\u304c\u3072\u3064\u3088\u3046\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n###\u30b0\u30ed\u30fc\u30d0\u30eb\u306e\u5024\u304c\u5909\u66f4\u3055\u308c\u305f\u6642\u306e\u901a\u77e5\u95a2\u6570\n\n```cpp:Transform.cpp\nvoid Transform::notifyGlobalUpdate()\n\t{\n\t\t//\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19\u3092\u5909\u63db\u3057\u305f\u3068\u304d\u306b\u30ed\u30fc\u30ab\u30eb\u5ea7\u6a19\u3082\u8abf\u6574\n\t\tif (m_parent != nullptr)\n\t\t{\n\t\t\tconst auto m =\n\t\t\t\tMat3x2::Rotate(-m_parent->m_global.m_rotate).scale({ 1 / m_parent->m_global.m_scale.x,  1 / m_parent->m_global.m_scale.y });\n\t\t\tm_local.m_pos = m.transform(m_global.m_pos - m_parent->m_global.m_pos);\n\n\t\t\tm_local.m_rotate = m_global.m_rotate - m_parent->m_global.m_rotate;\n\n\t\t\tm_local.m_scale.x = m_global.m_scale.x / m_parent->m_global.m_scale.x;\n\t\t\tm_local.m_scale.y = m_global.m_scale.y / m_parent->m_global.m_scale.y;\n\n\t\t}\n\t\telse\n\t\t{\n\t\t\tm_local.m_pos = m_global.m_pos;\n\t\t\tm_local.m_rotate = m_global.m_rotate;\n\t\t\tm_local.m_scale = m_global.m_scale;\n\t\t}\n\n\t\t//\u5909\u66f4\u3092\u5b50\u4f9b\u306b\u901a\u77e5\n\t\tfor (auto&& child : m_childs)\n\t\t{\n\t\t\tif (child != nullptr)\n\t\t\t\tchild->notifyUpdate();\n\t\t}\n\n\t}\n```\n\n\u30b0\u30ed\u30fc\u30d0\u30eb\u304b\u3089\u30ed\u30fc\u30ab\u30eb\u3092\u6c42\u3081\u308b\u306b\u306f\u3001\u3055\u304d\u307b\u3069\u30ed\u30fc\u30ab\u30eb\u304b\u3089\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u3059\u308b\u305f\u3081\u306b\u3057\u305f\u64cd\u4f5c\u3068\u5168\u304f\u771f\u9006\u306e\u3053\u3068\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n\u30ed\u30fc\u30ab\u30eb\u306e\u4f4d\u7f6e\u306f\n\n`A\u306e\u9006\u884c\u5217*(\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19-\u89aa\u306e\u5ea7\u6a19)`\n\n\u30ed\u30fc\u30ab\u30eb\u306e\u56de\u8ee2\u89d2\u5ea6\u306f\n\n`\u30b0\u30ed\u30fc\u30d0\u30eb\u56de\u8ee2\u89d2\u5ea6-\u89aa\u306e\u56de\u8ee2\u89d2\u5ea6`\n\n\u30ed\u30fc\u30ab\u30eb\u306e\u62e1\u5927\u7387\u306f\n\n`\u30b0\u30ed\u30fc\u30d0\u30eb\u62e1\u5927\u7387/\u89aa\u306e\u62e1\u5927\u7387`\n\n\u3067\u305d\u308c\u305e\u308c\u6c42\u3081\u3089\u308c\u307e\u3059\u3002\n\n##\u30b0\u30ed\u30fc\u30d0\u30eb\u306e\u5024\u3092\u5909\u66f4\u3057\u305f\u3089\n\n\u3055\u304d\u307b\u3069\u540c\u69d8\u306b\u5024\u306e\u5909\u66f4+\u901a\u77e5\u95a2\u6570\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```cpp:Transform.cpp\n\tvoid Transform::_setPos(const Vec2 & pos)\n\t{\n\t\tm_global.m_pos = pos;\n\t\tthis->notifyGlobalUpdate();\n\t}\n```\n\n##\u5b50\u4f9b\u306e\u8ffd\u52a0\u3001\u524a\u9664\u306e\u95a2\u6570\n\n```cpp:Transform.cpp\n\n//\u8ffd\u52a0\n\tbool Transform::addChild(Transform * const child)\n\t{\n\t\tif (child == nullptr)\n\t\t\treturn false;\n\n\t\t//\u3082\u3057\u81ea\u5206\u304c\u7956\u5148\u306a\u3089\u8ffd\u52a0\u5931\u6557\n\t\tTransform* check = this;\n\t\tdo\n\t\t{\n\t\t\tif (check == child)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tcheck = check->m_parent;\n\n\t\t} while (check != nullptr);\n\n\t\t//\u4eca\u306e\u89aa\u304b\u3089\u81ea\u5206\u304c\u5b50\u4f9b\u3067\u3042\u308b\u3053\u3068\u306f\u5fd8\u308c\u3066\u3082\u3089\u3046\n\t\tauto prevParent = child->m_parent;\n\n\t\tif (prevParent != nullptr)\n\t\t\tprevParent->deleteChild(child);\n\n\t\t//\u5b50\u4f9b\u306e\u89aa\u306b\u306a\u308b\n\t\tchild->m_parent = this;\n\t\tm_childs.emplace_back(child);\n\n\t\treturn true;\n\t}\n\n//\u524a\u9664\n\tvoid Transform::deleteChild(Transform * const child)\n\t{\n\t\tif (child != nullptr && !m_childs.empty())\n\t\t{\n\t\t\tErase(m_childs, child);\n\t\t}\n\t}\n\n```\n\n\u524a\u9664\u306f\u7c21\u5358\u3067\u3059\u304c\u3001\u8ffd\u52a0\u306b\u3064\u3044\u3066\u89e3\u8aac\n\n\u3082\u3057\u81ea\u5206\u306e\u7956\u5148\u306b\u81ea\u5206\u306e\u5b50\u4f9b\u304c\u3044\u305f\u3089\u304a\u304b\u3057\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3057\u305f\u304c\u3063\u3066\u5b50\u4f9b\u3092\u8ffd\u52a0\u3059\u308b\u3068\u304d\u306b\u3082\u3057\u81ea\u5206\u304c\u3059\u3067\u306b\u5b50\u4f9b\u306e\u7956\u5148\u306b\u5b58\u5728\u3057\u3066\u308b\u3068\u304d\u306b\u306f\u5931\u6557\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u5931\u6557\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u5b50\u4f9b\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u81ea\u8eab\u3092\u5b50\u4f9b\u306e\u89aa\u306b\u3057\u307e\u3059\u3002\n\u305d\u306e\u969b\u3001\u3082\u3068\u3082\u3068\u5225\u306e\u89aa\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u305f\u306a\u3089\u3070\u81ea\u5206\u3092\u5b50\u4f9b\u304b\u3089\u6d88\u3057\u3066\u3082\u3089\u3044\u307e\u3059\u3002\n\n##\u89aa\u306e\u6307\u5b9a\n\n```cpp:Transform.cpp\n\tbool Transform::_setParent(Transform * const parent)\n\t{\n\t\tif (parent != nullptr)\n\t\t{\n\t\t\tif (!parent->addChild(this))\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (m_parent != nullptr)\n\t\t\t\tm_parent->deleteChild(this);\n\n\t\t\tm_parent = parent;\n\n\t\t}\n\t\t_setPos(this->m_global.m_pos);\n\t\t_setRotate(this->m_global.m_rotate);\n\t\t_setScale(this->m_global.m_scale);\n\n\n\t\treturn true;\n\t}\n```\n\n\u89aa\u3092\u6307\u5b9a\u3059\u308b\u3068\u304d\u306b\u3001\u89aa\u306e\u5b50\u4f9b\u8ffd\u52a0\u95a2\u6570\u306b\u81ea\u8eab\u3092\u308f\u305f\u3057\u307e\u3059\u3002\n\u3082\u3057\u89aa\u3092nullptr\u306b\u3057\u305f\u3044\u3068\u304d\u306f\u3001\u3082\u3068\u3082\u3068\u89aa\u304c\u3044\u305f\u306a\u3089\u81ea\u8eab\u3092\u5b50\u4f9b\u304b\u3089\u524a\u9664\u3057\u3066\u3082\u3089\u3044\u307e\u3059\n\n\u3053\u306e\u3068\u304d\u3001\u89aa\u304c\u6307\u5b9a\u3055\u308c\u305f\u3053\u3068\u306b\u3088\u3063\u3066\u30ed\u30fc\u30ab\u30eb\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u5909\u308f\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u5404\u30bb\u30c3\u30bf\u30fc\u3092\u547c\u3093\u3067\u3044\u307e\u3059\u3002\n\n##\u3042\u3068\u59cb\u672b\n\n\u6700\u5f8c\u306b\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5fd8\u308c\u305a\u66f8\u304d\u307e\u3059\u3002\n\n```cpp:Transfrom.cpp\n\tTransform::~Transform()\n\t{\n\t\tif (m_parent != nullptr)\n\t\t{\n\t\t\tm_parent->deleteChild(this);\n\t\t}\n\t\tfor (auto&& elm : m_childs)\n\t\t{\n\t\t\tif (elm != nullptr)\n\t\t\t{\n\t\t\t\telm->m_parent = nullptr;\n\t\t\t}\n\t\t}\n\n\t}\n```\n\u81ea\u8eab\u304c\u7834\u68c4\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u89aa\u304c\u3044\u305f\u306a\u3089\u81ea\u5206\u3092\u30ea\u30b9\u30c8\u304b\u3089\u524a\u9664\u3057\u3066\u3082\u3089\u3044\n\u5b50\u4f9b\u304c\u3044\u305f\u306a\u3089\u5b50\u4f9b\u306e\u89aa\u3092nullptr\u306b\u3057\u307e\u3059\u3002\n\n##\u3067\u304d\u305f\n\n\u3053\u308c\u3067Unity\u306e\u3088\u3046\u306b\u89aa\u5b50\u95a2\u4fc2\u3092\u3082\u3063\u305fTransform class\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n#\u307e\u3068\u3081\n\n+ \u30ed\u30fc\u30ab\u30eb\u3068\u30b0\u30ed\u30fc\u30d0\u30eb\u306e\u95a2\u4fc2\u3092\u5e38\u306b\u4fdd\u3064\u305f\u3081\u306b\u3001\u7247\u65b9\u304c\u5909\u308f\u3063\u305f\u3068\u304d\u306f\u3082\u3046\u7247\u65b9\u3082\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n+ \u5024\u3092\u5909\u3048\u308b\u305f\u3073\u306b\u901a\u77e5\u304c\u8d77\u304d\u308b\u306e\u3067\u901f\u5ea6\u4f4e\u4e0b\u304c\u8ab2\u984c\n+ \u4f7f\u3044\u3084\u3059\u304f\u3066\u3001\u3082\u3063\u3068\u3044\u3044\u5b9f\u88c5\u306a\u3044\u306e\u304b\uff1f\n\n#\u304a\u307e\u3051\n\n\u30d7\u30ed\u30d1\u30c6\u30a3\u306a\u3069\u3092\u5229\u7528\u3057\u3066\n\u3082\u3063\u3068\u4f7f\u3044\u3084\u3059\u304f\u3057\u305fclass\n\n\u5b8c\u6210\u7248\n\n```cpp:Transform.h\nclass PropertyVec2;\n\n\tclass Transform\n\t{\n\t\tfriend PropertyVec2;\n\tprivate:\n\n\t\t//\u30ed\u30fc\u30ab\u30eb\u5ea7\u6a19\u3068\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19\n\t\tstruct Elm\n\t\t{\n\t\t\tVec2 m_pos;\n\t\t\tdouble m_rotate;\n\t\t\tVec2 m_scale;\n\n\t\t\tElm() :\n\t\t\t\tm_pos(0, 0),\n\t\t\t\tm_rotate(0),\n\t\t\t\tm_scale(1, 1)\n\t\t\t{}\n\n\t\t\tElm(const Vec2& pos, const double rotate, const Vec2& scale) :\n\t\t\t\tm_pos(pos),\n\t\t\t\tm_rotate(rotate),\n\t\t\t\tm_scale(scale)\n\t\t\t{}\n\n\t\t}m_local, m_global;\n\n\t\t//\u89aa\n\t\tTransform *m_parent = nullptr;\n\n\t\t//\u5b50\u4f9b\n\t\tstd::list<Transform*> m_childs;\n\n\t\t//\u66f4\u65b0\u95a2\u6570\n\t\tvoid notifyGlobalUpdate();\n\t\tvoid notifyUpdate();\n\n\t\t//\u5b50\u4f9b\u306e\u8ffd\u52a0\n\t\tbool addChild(Transform* const child);\n\t\t//\u5b50\u4f9b\u306e\u524a\u9664\n\t\tvoid deleteChild(Transform* const child);\n\n\n\n\tpublic:\n\n\t\tTransform() = default;\n\n\t\tTransform(const Vec2 & pos, const double rotate, const Vec2 & scale = { 1,1 }, Transform * const parent = nullptr);\n\n\t\tTransform(const Vec2 & pos, const double rotate, const double & scale, Transform * const parent = nullptr);\n\n\t\tTransform(const Vec2 & pos);\n\n\t\tTransform(const Vec2 & pos, Transform * const parent);\n\n\t\t~Transform();\n\n\t\t//\u4ee3\u5165\n\t\tTransform& operator =(const Transform& other);\n\n\t\t//\u30d7\u30ed\u30d1\u30c6\u30a3\n\t\t//\u30b0\u30ed\u30fc\u30d0\u30eb\n\t\t_declspec(property(get = _getPos, put = _setPos))Vec2& pos;\n\t\t_declspec(property(get = _getPos, put = _setPos))PropertyVec2 pos;\n\t\t_declspec(property(get = _getRotate, put = _setRotate))double rotate;\n\t\t_declspec(property(get = _getScale, put = _setScale))Vec2& scale;\n\t\t_declspec(property(get = _getScale, put = _setScale))PropertyVec2 scale;\n\n\t\t//\u30ed\u30fc\u30ab\u30eb\n\t\t_declspec(property(get = _getLocalPos, put = _setLocalPos))Vec2& localPos;\n\t\t_declspec(property(get = _getLocalPos, put = _setLocalPos))PropertyVec2 localPos;\n\n\t\t_declspec(property(get = _getLocalRotate, put = _setLocalRotate))double localRotate;\n\t\t_declspec(property(get = _getLocalScale, put = _setLocalScale))Vec2& localScale;\n\t\t_declspec(property(get = _getLocalScale, put = _setLocalScale))PropertyVec2 localScale;\n\n\n\t\t//\u89aa\n\t\t_declspec(property(get = _getParent, put = _setParent))Transform* parent;\n\n\n\t\tbool _setParent(Transform*const parent);\n\n\t\tconst Transform*const _getParent()const;\n\n\t\tvoid _setPos(const Vec2& pos);\n\t\tPropertyVec2 _getPos();\n\t\tconst Vec2& _getPos()const;\n\n\n\t\tvoid _setRotate(const double angle);\n\t\tconst double _getRotate()const;\n\n\t\tvoid _setScale(const Vec2& scale);\n\t\tvoid _setScale(const double scale);\n\t\tPropertyVec2 _getScale();\n\t\tconst Vec2& _getScale()const;\n\n\t\tvoid _setLocalPos(const Vec2& pos);\n\t\tPropertyVec2 _getLocalPos();\n\t\tconst Vec2& _getLocalPos()const;\n\n\t\tvoid _setLocalRotate(const double angle);\n\t\tconst double _getLocalRotate()const;\n\n\t\tvoid _setLocalScale(const Vec2& scale);\n\t\tvoid _setLocalScale(const double scale);\n\n\t\tPropertyVec2 _getLocalScale();\n\t\tconst Vec2& _getLocalScale()const;\n\n\n\t};\n\n\t//\u30d7\u30ed\u30d1\u30c6\u30a3\u7528Vec2\n\t//Vec2\u578b\u306e\u30e1\u30f3\u30d0\u5909\u6570\u306e\u5909\u66f4\u5f8c\u306b\u30c8\u30e9\u30f3\u30b9\u30d5\u30a9\u30fc\u30e0\u306b\u901a\u77e5\u3059\u308b\n\tclass PropertyVec2 :public Vec2\n\t{\n\t\tfriend class Transform;\n\tprivate:\n\t\tTransform*const m_transform;\n\t\tVec2*const m_value;\n\t\tbool m_isLocal;\n\n\t\tPropertyVec2(Transform*const me, Vec2*const value, bool local) :\n\t\t\tVec2(value->x, value->y),\n\t\t\tm_transform(me),\n\t\t\tm_value(value),\n\t\t\tm_isLocal(local)\n\t\t{}\n\tpublic:\n\n\t\t__declspec(property(get = _getX, put = _setX))double x;\n\t\t__declspec(property(get = _getY, put = _setY))double y;\n\n\t\tdouble _getX()const\n\t\t{\n\t\t\treturn m_value->x;\n\t\t}\n\n\t\tvoid _setX(double x)\n\t\t{\n\t\t\tm_value->x = x;\n\t\t\tif (!m_isLocal)\n\t\t\t\tm_transform->notifyGlobalUpdate();\n\t\t\telse\n\t\t\t\tm_transform->notifyUpdate();\n\t\t}\n\n\t\tdouble _getY()const\n\t\t{\n\t\t\treturn m_value->y;\n\t\t}\n\n\t\tvoid _setY(double y)\n\t\t{\n\t\t\tm_value->y = y;\n\n\t\t\tif (!m_isLocal)\n\t\t\t\tm_transform->notifyGlobalUpdate();\n\t\t\telse\n\t\t\t\tm_transform->notifyUpdate();\n\n\t\t}\n\n\t};\n```\n\n```cpp:Transform.cpp\nTransform::Transform(const Vec2& pos, const double rotate, const Vec2& scale, Transform* const parent) :\n\t\tm_global(pos, rotate, scale),\n\t\tm_local(pos, rotate, scale),\n\t\tm_parent(nullptr)\n\t{\n\t\tthis->parent = parent;\n\t}\n\n\tTransform::Transform(const Vec2& pos, const double rotate, const double& scale, Transform* const parent) :\n\t\tTransform(pos, rotate, { scale,scale }, parent)\n\t{}\n\n\tTransform::Transform(const Vec2& pos) :\n\t\tTransform(pos, 0, { 1,1 }, nullptr)\n\t{}\n\n\tTransform::Transform(const Vec2& pos, Transform* const parent) :\n\t\tTransform(pos, 0, { 1,1 }, parent)\n\t{}\n\tvoid Transform::notifyGlobalUpdate()\n\t{\n\t\t//\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19\u3092\u5909\u63db\u3057\u305f\u3068\u304d\u306b\u30ed\u30fc\u30ab\u30eb\u5ea7\u6a19\u3082\u8abf\u6574\n\t\tif (m_parent != nullptr)\n\t\t{\n\t\t\tconst auto m =\n\t\t\t\tMat3x2::Rotate(-m_parent->m_global.m_rotate).scale({ 1 / m_parent->m_global.m_scale.x,  1 / m_parent->m_global.m_scale.y });\n\t\t\tm_local.m_pos = m.transform(m_global.m_pos - m_parent->m_global.m_pos);\n\n\t\t\tm_local.m_rotate = m_global.m_rotate - m_parent->m_global.m_rotate;\n\n\t\t\tm_local.m_scale.x = m_global.m_scale.x / m_parent->m_global.m_scale.x;\n\t\t\tm_local.m_scale.y = m_global.m_scale.y / m_parent->m_global.m_scale.y;\n\n\t\t}\n\t\telse\n\t\t{\n\t\t\tm_local.m_pos = m_global.m_pos;\n\t\t\tm_local.m_rotate = m_global.m_rotate;\n\t\t\tm_local.m_scale = m_global.m_scale;\n\t\t}\n\n\t\t//\u5909\u66f4\u3092\u5b50\u4f9b\u306b\u901a\u77e5\n\t\tfor (auto&& child : m_childs)\n\t\t{\n\t\t\tif (child != nullptr)\n\t\t\t\tchild->notifyUpdate();\n\t\t}\n\n\t}\n\n\tvoid Transform::notifyUpdate()\n\t{\n\t\t//\u30ed\u30fc\u30ab\u30eb\u3001\u89aa\u306e\u5909\u66f4\u304b\u3089\u3001\u5b9f\u969b\u306e\u30b0\u30ed\u30fc\u30d0\u30eb\u5ea7\u6a19\u3092\u8abf\u6574\n\t\tif (m_parent != nullptr)\n\t\t{\n\t\t\tconst auto m =\n\t\t\t\tMat3x2::Scale(m_parent->m_global.m_scale).\n\t\t\t\trotate(m_parent->m_global.m_rotate);\n\n\t\t\tm_global.m_pos = m_parent->m_global.m_pos + m.transform(m_local.m_pos);\n\n\t\t\tm_global.m_rotate = m_local.m_rotate + m_parent->m_global.m_rotate;\n\t\t\tm_global.m_scale.x = m_local.m_scale.x*m_parent->m_global.m_scale.x;\n\t\t\tm_global.m_scale.y = m_local.m_scale.y*m_parent->m_global.m_scale.y;\n\n\t\t}\n\t\telse\n\t\t{\n\t\t\tm_global.m_pos = m_local.m_pos;\n\t\t\tm_global.m_rotate = m_local.m_rotate;\n\t\t\tm_global.m_scale = m_local.m_scale;\n\t\t}\n\t\t//\u5909\u66f4\u3092\u5b50\u4f9b\u306b\u901a\u77e5\n\t\tfor (auto&& child : m_childs)\n\t\t{\n\t\t\tif (child != nullptr)\n\t\t\t\tchild->notifyUpdate();\n\t\t}\n\t}\n\n\tbool Transform::addChild(Transform * const child)\n\t{\n\t\tif (child == nullptr)\n\t\t\treturn false;\n\n\t\t//\u3082\u3057\u81ea\u5206\u304c\u7956\u5148\u306a\u3089\u8ffd\u52a0\u5931\u6557\n\t\tTransform* check = this;\n\t\tdo\n\t\t{\n\t\t\tif (check == child)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tcheck = check->m_parent;\n\n\t\t} while (check != nullptr);\n\n\t\t//\u4eca\u306e\u89aa\u304b\u3089\u81ea\u5206\u304c\u5b50\u4f9b\u3067\u3042\u308b\u3053\u3068\u306f\u5fd8\u308c\u3066\u3082\u3089\u3046\n\t\tauto prevParent = child->m_parent;\n\n\t\tif (prevParent != nullptr)\n\t\t\tprevParent->deleteChild(child);\n\n\t\t//\u5b50\u4f9b\u306e\u89aa\u306b\u306a\u308b\n\t\tchild->m_parent = this;\n\t\tm_childs.emplace_back(child);\n\n\t\treturn true;\n\t}\n\n\tvoid Transform::deleteChild(Transform * const child)\n\t{\n\t\tif (child != nullptr && !m_childs.empty())\n\t\t{\n\t\t\tErase(m_childs, child);\n\t\t}\n\t}\n\n\tTransform::~Transform()\n\t{\n\t\tif (m_parent != nullptr)\n\t\t{\n\t\t\tm_parent->deleteChild(this);\n\t\t}\n\t\tfor (auto&& elm : m_childs)\n\t\t{\n\t\t\tif (elm != nullptr)\n\t\t\t{\n\t\t\t\telm->m_parent = nullptr;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tbool Transform::_setParent(Transform * const parent)\n\t{\n\t\tif (parent != nullptr)\n\t\t{\n\t\t\tif (!parent->addChild(this))\n\t\t\t\treturn false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (m_parent != nullptr)\n\t\t\t\tm_parent->deleteChild(this);\n\n\t\t\tm_parent = parent;\n\n\t\t}\n\t\t_setPos(this->m_global.m_pos);\n\t\t_setRotate(this->m_global.m_rotate);\n\t\t_setScale(this->m_global.m_scale);\n\n\n\t\treturn true;\n\t}\n\n\tconst Transform * const Transform::_getParent() const\n\t{\n\t\treturn m_parent;\n\t}\n\tconst Vec2 & Transform::_getPos() const\n\t{\n\t\treturn m_global.m_pos;\n\t}\n\tPropertyVec2 Transform::_getPos()\n\t{\n\t\treturn{ this,&m_global.m_pos,false };\n\t}\n\tconst double Transform::_getRotate() const\n\t{\n\t\treturn m_global.m_rotate;\n\t}\n\tconst Vec2 & Transform::_getScale() const\n\t{\n\t\treturn m_global.m_scale;\n\t}\n\tPropertyVec2 Transform::_getScale()\n\t{\n\t\treturn{ this,&m_global.m_scale,false };\n\t}\n\tconst Vec2 & Transform::_getLocalPos() const\n\t{\n\t\treturn m_local.m_pos;\n\t}\n\tPropertyVec2 Transform::_getLocalPos()\n\t{\n\t\treturn{ this,&m_local.m_pos,true };\n\t}\n\tconst double Transform::_getLocalRotate() const\n\t{\n\t\treturn m_local.m_rotate;\n\t}\n\tconst Vec2 & Transform::_getLocalScale() const\n\t{\n\t\treturn m_local.m_scale;\n\t}\n\n\tPropertyVec2 Transform::_getLocalScale()\n\t{\n\t\treturn{ this,&m_local.m_scale,true };\n\t}\n\n\n\tTransform & Transform::operator=(const Transform & other)\n\t{\n\t\t//\u30bb\u30c3\u30bf\u30fc\u306e\u307b\u3046\u3092\u547c\u3070\u306a\u3044\u3068\u524d\u306e\u89aa\u306e\u5b50\u4f9b\u3068\u3057\u3066\u6b8b\u3063\u3066\u3057\u307e\u3046\n\t\tthis->parent = other.m_parent;\n\n\n\t\tthis->m_global = other.m_global;\n\t\tthis->m_local = other.m_local;\n\n\t\t//\u5b50\u4f9b\u306b\u3064\u3044\u3066\u306e\u60c5\u5831\u306f\u5f15\u304d\u7d99\u304c\u306a\u3044\n\n\t\treturn *this;\n\t}\n\n\tvoid Transform::_setLocalPos(const Vec2 & pos)\n\t{\n\t\tm_local.m_pos = pos;\n\t\tthis->notifyUpdate();\n\t}\n\n\tvoid Transform::_setLocalRotate(const double angle)\n\t{\n\t\tm_local.m_rotate = angle;\n\t\tthis->notifyUpdate();\n\t}\n\n\tvoid Transform::_setLocalScale(const Vec2 & scale)\n\t{\n\t\tm_local.m_scale = scale;\n\t\tthis->notifyUpdate();\n\t}\n\n\tvoid Transform::_setLocalScale(const double scale)\n\t{\n\t\t_setLocalScale({ scale,scale });\n\t}\n\n\tvoid Transform::_setPos(const Vec2 & pos)\n\t{\n\t\tm_global.m_pos = pos;\n\t\tthis->notifyGlobalUpdate();\n\t}\n\n\tvoid Transform::_setRotate(const double angle)\n\t{\n\t\tm_global.m_rotate = angle;\n\t\tthis->notifyGlobalUpdate();\n\t}\n\tvoid Transform::_setScale(const Vec2 & scale)\n\t{\n\t\tm_global.m_scale = scale;\n\t\tthis->notifyGlobalUpdate();\n\t}\n\tvoid Transform::_setScale(const double scale)\n\t{\n\t\t_setScale({ scale,scale });\n\t}\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "tags": ["Unity", "Unity2D", "Siv3D", "C++"]}