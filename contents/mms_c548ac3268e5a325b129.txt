{"context": "\u4eca\u56de\u306f\uff0c\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u306e\u81ea\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u300cTars\u300d\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\u4ee5\u524d\u304b\u3089\u50d5\u304c\u4e00\u4eba\u3067\u52dd\u624b\u306b\u5b9f\u88c5\u3057\u3066\u52dd\u624b\u306b\u4f7f\u3063\u3066\u3044\u305f\u3082\u306e\u3067\uff0c\u3053\u308c\u307e\u3067\u975e\u516c\u958b\u3068\u3057\u3066\u3044\u307e\u3057\u305f\u304c\uff0c\u4eca\u56de\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u304f\u306b\u3042\u305f\u3063\u3066\u516c\u958b\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\uff0e\nhttps://github.com/masa-su/Tars\n\u3082\u3057\u9700\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3089\uff0c\u4eca\u5f8c\u3082\u4f55\u56de\u304b\u306b\u5206\u3051\u3066\u7d39\u4ecb\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\u203b \u672c\u8a18\u4e8b\u306f\uff0c\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066\u3042\u308b\u7a0b\u5ea6\u7406\u89e3\u3057\u3066\u3044\u308b\u4eba\u3092\u524d\u63d0\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\uff0eVAE\u7b49\u3092\u5168\u304f\u77e5\u3089\u306a\u3044\u4eba\u306f\u8ad6\u6587\u3084\u4ed6\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\uff0e\n\n\u78ba\u7387\u30e2\u30c7\u30eb\u3068\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\n\u8fd1\u5e74\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\uff08VAE[1]\uff0cGAN[2]\uff0c\u81ea\u5df1\u56de\u5e30\u30e2\u30c7\u30eb[3]\u306a\u3069\uff09\u304c\u6d41\u884c\u3063\u3066\u3044\u307e\u3059\u304c\uff0c\u3053\u3046\u3044\u3063\u305f\u30e2\u30c7\u30eb\uff08\u7279\u306bVAE\uff09\u3067\u306f\uff0c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u78ba\u7387\u5206\u5e03\u3068\u3057\u3066\uff0c\u3042\u308b\u3044\u306f\u30e6\u30cb\u30c3\u30c8\u3092\u78ba\u7387\u5909\u6570\u3068\u3057\u3066\u6271\u3063\u3066\u3044\u307e\u3059\uff0e\n\u3053\u3046\u3044\u3063\u305f\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u306e\u5b9f\u88c5\u306f\u305f\u304f\u3055\u3093\u3042\u308b\u306e\u3067\u3059\u304c\uff0c\u554f\u984c\u70b9\u3068\u3057\u3066\uff0c\u30e2\u30c7\u30eb\u3092\u8a18\u8ff0\u3059\u308b\u7d71\u4e00\u7684\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0eGAN\u306e\u3088\u3046\u306a\u78ba\u7387\u30e2\u30c7\u30eb\u3068\u3057\u3066\u610f\u8b58\u3059\u308b\u5fc5\u8981\u306e\u306a\u3044\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066\u306f\uff0c\u3042\u307e\u308a\u554f\u984c\u306b\u306a\u3089\u306a\u3044\u306e\u3067\u3059\u304c\uff0cVAE\u306f\u3069\u306e\u78ba\u7387\u30e2\u30c7\u30eb\u3092\u4f7f\u7528\u3059\u308b\u304b\u3092\u660e\u78ba\u306b\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u3064\u307e\u308aVAE\u306b\u4ee3\u8868\u3055\u308c\u308b\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306b\u306f\n1.\u3069\u306e\u3088\u3046\u306a\u5f62\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3046\u304b\n2.\u3069\u306e\u3088\u3046\u306a\u78ba\u7387\u30e2\u30c7\u30eb\u3092\u4f7f\u3046\u304b\n\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u3055\u3089\u306b\uff0c\u8fd1\u5e74\u306f\u69d8\u3005\u306a\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u306e\u624b\u6cd5\uff08\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3082\u542b\u3080\uff09\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u591a\u5c64\u5316\u3057\u305f\u78ba\u7387\u5206\u5e03[4]\u3084\uff0c\u8907\u96d1\u306a\u5f62\u306e\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u30e2\u30c7\u30eb\u7b49\u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u305f\u78ba\u7387\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3059\u308bVAE\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u3055\u3089\u306bVAE\u3092GAN[5]\u3084PixelCNN[6]\u3068\u7d44\u307f\u5408\u308f\u305b\u305f\u308a\u3068\u3044\u3063\u305f\u69d8\u3005\u306a\u30e2\u30c7\u30eb\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u3088\u3063\u3066\u5b9f\u88c5\u3059\u308b\u969b\u306b\u6c7a\u3081\u308b\u3079\u304d\u3053\u3068\u3068\u3057\u3066\uff0c\n3.\u3069\u306e\u3088\u3046\u306a\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u306e\u624b\u6cd5\u3092\u4f7f\u3046\u304b\n\u304c\u52a0\u308f\u308a\u307e\u3059\uff0e\u3053\u308c\u307e\u3067\u306f\uff0c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u660e\u793a\u7684\u306b\u78ba\u7387\u5206\u5e03\u3068\u3057\u3066\u6271\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u305f\u3081\uff0c1~3\u3092\u66f8\u3044\u305f\u5b9f\u88c5\u304c\u3042\u3063\u3066\u3082\u6c4e\u7528\u6027\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\uff0e\u4f8b\u3048\u3070\uff0c2\u306b\u8a72\u5f53\u3059\u308b\u90e8\u5206\u3092\u5225\u306e\u3082\u306e\u306b\u66f8\u304d\u63db\u3048\u3088\u3046\u3068\u601d\u3063\u305f\u3089\uff0c\u6700\u60aa\u30b3\u30fc\u30c9\u5168\u90e8\u3092\u66f8\u304d\u63db\u3048\u308b\u306e\u3068\u540c\u3058\u304f\u3089\u3044\u306e\u52b4\u529b\u304c\u5fc5\u8981\u306b\u306a\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3057\u305f\uff0e\u305d\u306e\u305f\u3081\uff0c\u904e\u53bb\u306e\u5b9f\u88c5\u3092\u4f7f\u3044\u56de\u3059\u306e\u304c\u96e3\u3057\u3044\u3068\u3044\u3046\u72b6\u6cc1\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u306f\uff0c1~3\u3092\u5b8c\u5168\u306b\u72ec\u7acb\u306b\u6271\u3046\u67a0\u7d44\u307f\u304c\u5fc5\u8981\u3067\u3059\uff0e\n\n\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u63d0\u6848\n\u3053\u306e\u3088\u3046\u306a\u80cc\u666f\u3092\u8e0f\u307e\u3048\u3066\uff0c\u672c\u8a18\u4e8b\u3067\u306f\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u3092\u3088\u308a\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3075\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u300cTars\u300d\u3092\u3064\u304f\u308a\u307e\u3057\u305f\uff0e\u5b9f\u88c5\u306b\u306fTheano\u3068Lasagne\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\n\u672c\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u5927\u304d\u306a\u7279\u5fb4\u306f\uff0c1~3\u3092\u5b8c\u5168\u306b\u72ec\u7acb\u306b\u8a18\u8ff0\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e\u7c21\u5358\u306b\u3044\u3046\u3068\uff0c\u78ba\u7387\u5206\u5e03\u30af\u30e9\u30b9\u3068\u3044\u3046\u3082\u306e\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\uff0c\u305d\u308c\u3067\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u8986\u3046\u3053\u3068\u3067\uff0c\u5916\u90e8\u304b\u3089\u306f\u4e2d\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u610f\u8b58\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e\u307e\u305f\uff0c\u78ba\u7387\u5206\u5e03\u30af\u30e9\u30b9\u306b\u306f\u30ac\u30a6\u30b9\u5206\u5e03\u3084\u30d9\u30eb\u30cc\u30fc\u30a4\u5206\u5e03\u306a\u3069\u69d8\u3005\u306a\u5b9f\u88c5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\uff0c\u3059\u3079\u3066\u540c\u3058\u4ed5\u69d8\u3067\u8a2d\u8a08\u3055\u308c\u3066\u3044\u308b\u306e\u3067\uff0c\u78ba\u7387\u5206\u5e03\u306e\u5f62\u3092\u610f\u8b58\u305b\u305a\u306b\u540c\u3058\u3088\u3046\u306b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3084\u5c24\u5ea6\u8a08\u7b97\u304c\u3067\u304d\u307e\u3059\uff0e\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u4f8b\u306f\u4e0b\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\uff0e\n\u4f3c\u305f\u3088\u3046\u306a\uff08\u3068\u3044\u3046\u304b\u4e38\u304b\u3076\u308a\uff09\u601d\u60f3\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\uff0cEdward\uff08https://github.com/blei-lab/edward \uff09\u304c\u3042\u308a\u307e\u3059\uff0e\n\u3053\u3061\u3089\u306f\u5929\u4e0b\u306eBlei\u7814\u304c\u4f5c\u3063\u305f\u3060\u3051\u306b\u975e\u5e38\u306b\u51fa\u6765\u304c\u3044\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\uff0cTensorflow\u306a\u3069\u3067\u5b9f\u88c5\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u5909\u5206\u63a8\u8ad6\u306a\u3069\u69d8\u3005\u306a\u624b\u6cd5\u3067\u5b66\u7fd2\u3067\u304d\u307e\u3059\uff0e\n\u6b63\u76f4\u3053\u3061\u3089\u3067\u3044\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3044\u3046\u8a71\u3082\u3042\u308b\u306e\u3067\u3059\u304c\uff0c\u672c\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306f\u3088\u308a\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u306b\u7279\u5316\u3057\u305f\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\u5177\u4f53\u7684\u306b\u306f\u672c\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u306f\u4ee5\u4e0b\u306e\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\uff0e\n\n\u69d8\u3005\u306a\u78ba\u7387\u5206\u5e03\u306e\u5b9f\u88c5\uff08\u30ac\u30a6\u30b9\u5206\u5e03\uff0c\u30ac\u30f3\u30de\u5206\u5e03\uff0c\u30d9\u30fc\u30bf\uff0f\u30c7\u30a3\u30ea\u30af\u30ec\u5206\u5e03\uff0c\u30d9\u30eb\u30cc\u30fc\u30a4\uff0f\u30ab\u30c6\u30b4\u30ea\u5206\u5e03\u306a\u3069\uff09\n\n\n\u5168\u3066reparameterizaiton trick[1]\u306b\u3088\u3063\u3066\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3067\u304d\u308b\n\u30d9\u30eb\u30cc\u30fc\u30a4\uff0f\u30ab\u30c6\u30b4\u30ea\u5206\u5e03\u306fGumbel-softmax[7][8]\uff0c\u30ac\u30f3\u30de\u5206\u5e03\uff0c\u30d9\u30fc\u30bf\uff0f\u30c7\u30a3\u30ea\u30af\u30ec\u5206\u5e03\u306frejection sampling[9]\u3092\u5229\u7528\n\n\n\u69d8\u3005\u306a\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u624b\u6cd5\u306e\u5b9f\u88c5\n\n\nAutoencoder\nVAE\n\n\nConditional VAE [10][11]\nImportance weighted autoencoder [12]\nJoint multimodal VAE [13]\n\n\nVAE-GAN\uff0cconditional VAE-GAN [5]\nGAN\uff0cConditional GAN [14]\nVAE-RNN\n\n\nVariational RNN [15]\nDRAW [16]\uff0cConvolutional DRAW [17]\n\n\n\n\n\uff08\u4e0a\u3068\u95a2\u9023\u3057\u3066\uff09\u69d8\u3005\u306a\u4e0b\u754c\u306e\u5b9f\u88c5\n\n\nELBO\nImportance sampling lower bound [12]\nVariational Renyi bound [18]\n\n\n\n\u4e0a\u8a18\u306e\u3046\u3061\u3044\u304f\u3064\u304b\u306e\u5b9f\u88c5\u306f\u73fe\u5728\u975e\u516c\u958b\u3068\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u4eca\u5f8c\u968f\u6642\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3059\uff0e\n\n\u5b9f\u88c5\u4f8b\n\u672c\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067VAE\u3092\u5b9f\u88c5\u3057\u305f\u3044\u5834\u5408\uff0c\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u975e\u5e38\u306b\u7c21\u5358\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff08\u30a4\u30f3\u30dd\u30fc\u30c8\u7b49\u306f\u7701\u7565\uff09\n\ntrain.py\nx = InputLayer((None,n_x))\nq_0 = DenseLayer(x,num_units=512,nonlinearity=activation)\nq_1 = DenseLayer(q_0,num_units=512,nonlinearity=activation)\nq_mean = DenseLayer(q_1,num_units=n_z,nonlinearity=linear)\nq_var = DenseLayer(q_1,num_units=n_z,nonlinearity=softplus)\nq = Gaussian(q_mean,q_var,given=[x]) # q(z|x)\n\nz = InputLayer((None,n_z))\np_0 = DenseLayer(z,num_units=512,nonlinearity=activation)\np_1 = DenseLayer(p_0,num_units=512,nonlinearity=activation)\np_mean = DenseLayer(p_1,num_units=n_x,nonlinearity=sigmoid)\np = Bernoulli(p_mean, given=[z]) # p(x|z)\n\nmodel = VAE(q, p, n_batch=n_batch, optimizer=adam) # \u30b3\u30f3\u30d1\u30a4\u30eb\n\nlower_bound_train = model.train([train_x]) # \u8a13\u7df4\n\n\nqq\u304c\u8fd1\u4f3c\u5206\u5e03\uff08\u30a8\u30f3\u30b3\u30fc\u30c0\uff09\uff0cpp\u304c\u751f\u6210\u5206\u5e03\uff08\u30c7\u30b3\u30fc\u30c0\uff09\u3067\u3059\uff0eVAE\u3067\u306f\u305d\u308c\u305e\u308c\u306e\u5206\u5e03\u3092\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u66f8\u304d\u307e\u3059\u304c\uff0c\u3053\u306e\u90e8\u5206\u306f\u81ea\u7531\u306b\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\uff0c\u69d8\u3005\u306a\u69cb\u9020\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u78ba\u7387\u5206\u5e03\u3092\u8a2d\u8a08\u3067\u304d\u307e\u3059\uff0eTars\u3067\u306f\uff0c\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u8a2d\u8a08\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u78ba\u7387\u5206\u5e03\u30af\u30e9\u30b9\u306b\u6e21\u3057\u307e\u3059\uff0e\u4e0a\u306e\u5b9f\u88c5\u3067\u306f\uff0cGaussian\u3084Bernoulli\u3068\u3044\u3063\u305f\u78ba\u7387\u5206\u5e03\u30af\u30e9\u30b9\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u305d\u308c\u305e\u308c\u30ac\u30a6\u30b9\u5206\u5e03\u3068\u30d9\u30eb\u30cc\u30fc\u30a4\u5206\u5e03\u306b\u8a2d\u5b9a\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\n\u3053\u306e\u78ba\u7387\u5206\u5e03\u30af\u30e9\u30b9\u3092\u5909\u66f4\u3059\u308c\u3070\uff0c\u540c\u3058\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u9020\u3067\u3082\u5225\u306e\u78ba\u7387\u5206\u5e03\u3092\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u30a8\u30f3\u30b3\u30fc\u30c0\u3092\u30ac\u30f3\u30de\u5206\u5e03\u306b\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\n\ngamma_q.py\nx = InputLayer((None,n_x))\nq_0 = DenseLayer(x,num_units=512,nonlinearity=activation)\nq_1 = DenseLayer(q_0,num_units=512,nonlinearity=activation)\nq_alpha = DenseLayer(q_1,num_units=n_z,nonlinearity= softplus)\nq_beta = DenseLayer(q_1,num_units=n_z,nonlinearity=softplus)\nq = Gamma(q_alpha,q_beta,given=[x]) #q(z|x)\n\n\n\u3068\u3059\u308b\u3060\u3051\u3067\u30ac\u30f3\u30de\u5206\u5e03\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u3042\u3068\u306f\uff0cqq\u3068pp\u3092VAE\u30af\u30e9\u30b9\u306b\u6e21\u3059\u3060\u3051\u3067VAE\u306e\u8a13\u7df4\u3084\u30c6\u30b9\u30c8\u304c\u3067\u304d\u307e\u3059\uff0e\u4ed6\u306b\u3082GAN\u30af\u30e9\u30b9\u306a\u3069\u3082\u3042\u308b\u306e\u3067\uff0cGAN\u3092\u5b66\u7fd2\u3059\u308b\u5834\u5408\u306f\uff0c\u305d\u308c\u306b\u78ba\u7387\u5206\u5e03\u3084\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u6e21\u305b\u3070\u5b66\u7fd2\u3067\u304d\u307e\u3059\uff0e\n\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u5b9a\u7fa9\u3057\u305fqq\u3068pp\u306f\uff0cVAE\u30af\u30e9\u30b9\u306e\u4e2d\u3067\u306f\u78ba\u7387\u5206\u5e03\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\uff0e\u3064\u307e\u308a\uff0c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u610f\u8b58\u305b\u305a\u306b\uff0c\u6b21\u306e\u3088\u3046\u306b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3084\u5c24\u5ea6\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff08Theano\u30b7\u30f3\u30dc\u30eb\u3068Numpy\u5f62\u5f0f\u306e\u4e21\u65b9\u3067\u8a08\u7b97\u3067\u304d\u307e\u3059\uff09\uff0e\n\nsampling_likelihood_example.py\n\n# \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\nsamples = q.sample_given_x(x) # Theano\nsamples = q.np_sample_given_x(x) # bumpy\n\n# \u5bfe\u6570\u5c24\u5ea6\u8a08\u7b97\nlog_likelihood = q.log_likelihood_given_x([x, samples]) # Theano\nlog_likelihood = q.log_likelihood_given_x([x, samples]) # numpy\n\n\n\u3053\u308c\u3089\u3092\u4f7f\u3046\u3068\uff0cVAE\u306e\u5b9f\u88c5\u3082\u6bd4\u8f03\u7684\u7c21\u5358\u306b\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\uff08VAE\u30af\u30e9\u30b9\u306e\u4e0b\u754c\u306e\u8a08\u7b97\u90e8\u5206\u306e\u307f\u629c\u7c8b\uff0c\u7c21\u5358\u306e\u305f\u3081\u4e00\u90e8\u66f8\u304d\u63db\u3048\uff09\uff0e\n\nvae.py\nkl_divergence = analytical_kl(self.q, self.prior\n                              given=[x, None],\n                              deterministic=deterministic)        \n[_, z] = self.q.sample_given_x(x, repeat=l,\n                          deterministic=deterministic)\nlog_likelihood =\\\n    self.p.log_likelihood_given_x([z, x],\n                                  deterministic=deterministic)  \n\nloss = -T.mean(log_likelihood - kl_divergence)\n\nq_params = self.q.get_params()\np_params = self.p.get_params()\nparams = q_params + p_params\n\n\n\u3053\u306e\u5b9f\u88c5\u306f\uff0c\u78ba\u7387\u5206\u5e03\u3084\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u4f9d\u5b58\u3057\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u305d\u306e\u305f\u3081\uff0c\u78ba\u7387\u5206\u5e03\u3084\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5f62\u304c\u5909\u66f4\u3055\u308c\u3066\u3082\u540c\u3058\u5b9f\u88c5\u3092\u4f7f\u3044\u56de\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u305d\u306e\u4ed6\u8a73\u3057\u3044\u5b9f\u88c5\u65b9\u6cd5\u306f\uff0cTars\u306b\u3042\u308bexample\u3084\u4eca\u5f8c\u66f4\u65b0\u3059\u308b\uff08\u304b\u3082\u3057\u308c\u306a\u3044\uff09\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n\u4eca\u5f8c\u306e\u65b9\u91dd\n\u4eca\u56de\u306f\uff0c\u81ea\u4f5c\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u30e9\u30a4\u30d6\u30e9\u30ea\u300cTars\u300d\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\uff0e\u7279\u306b\u516c\u958b\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u305a\u306b\u5b9f\u88c5\u3057\u3066\u3044\u305f\u306e\u3067\uff0c\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u306f\u4e0d\u5b8c\u5168\u306a\u307e\u307e\u3067\u3059\uff0e\u4eca\u5f8c\u306e\u65b9\u91dd\u3068\u3057\u3066\u306f\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u306e\u6574\u5099\n\u30e2\u30c7\u30eb\u306e\u8ffd\u52a0\nTensorflow\u3078\u306e\u79fb\u884c\n\n\u7b49\u3092\u8003\u3048\u3066\u3044\u307e\u3059\uff0e\u4f55\u304b\u554f\u984c\u3084\u9593\u9055\u3044\u304c\u3042\u308a\u307e\u3057\u305f\u3089\uff0c\u30b3\u30e1\u30f3\u30c8\u7b49\u3067\u6307\u6458\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\uff0e\n\n\u53c2\u8003\u6587\u732e\n[1] Kingma, Diederik P., and Max Welling. \"Auto-encoding variational bayes.\" arXiv preprint arXiv:1312.6114 (2013).\n[2] Goodfellow, Ian, et al. \"Generative adversarial nets.\" Advances in Neural Information Processing Systems. 2014.\n[3] van den Oord, Aaron, Nal Kalchbrenner, and Koray Kavukcuoglu. \"Pixel Recurrent Neural Networks.\" arXiv preprint arXiv:1601.06759 (2016)\n[4] S\u00f8nderby, Casper Kaae, et al. \"Ladder variational autoencoders.\" Advances in Neural Information Processing Systems. 2016.\n[5] Larsen, Anders Boesen Lindbo, S\u00f8ren Kaae S\u00f8nderby, and Ole Winther. \"Autoencoding beyond pixels using a learned similarity metric.\" arXiv preprint arXiv:1512.09300 (2015).\n[6] Gulrajani, Ishaan, et al. \"PixelVAE: A Latent Variable Model for Natural Images.\" arXiv preprint arXiv:1611.05013 (2016).\n[7] Jang, Eric, Shixiang Gu, and Ben Poole. \"Categorical Reparameterization with Gumbel-Softmax.\" arXiv preprint arXiv:1611.01144 (2016).\n[8] Maddison, Chris J., Andriy Mnih, and Yee Whye Teh. \"The Concrete Distribution: A Continuous Relaxation of Discrete Random Variables.\" arXiv preprint arXiv:1611.00712 (2016).\n[9] Naesseth, Christian A., et al. \"Rejection Sampling Variational Inference.\" arXiv preprint arXiv:1610.05683 (2016).\n[10] Kingma, Diederik P., et al. \u201cSemi-supervised learning with deep generative models.\u201d Advances in Neural Information Processing Systems. 2014.\n[11] Sohn, Kihyuk, Honglak Lee, and Xinchen Yan. \u201cLearning Structured Output Representation using Deep Conditional Generative Models.\u201d Advances in Neural Information Processing Systems. 2015.\n[12] Burda, Yuri, Roger Grosse, and Ruslan Salakhutdinov. \"Importance weighted autoencoders.\" arXiv preprint arXiv:1509.00519 (2015).\n[13] Suzuki, Masahiro, Kotaro Nakayama, and Yutaka Matsuo. \"Joint Multimodal Learning with Deep Generative Models.\" arXiv preprint arXiv:1611.01891 (2016).\n[14] Mirza, Mehdi, and Simon Osindero. \"Conditional generative adversarial nets.\" arXiv preprint arXiv:1411.1784 (2014).\n[15] Chung, Junyoung, et al. \"A recurrent latent variable model for sequential data.\" Advances in neural information processing systems. 2015.\n[16] Gregor, Karol, et al. \"DRAW: A recurrent neural network for image generation.\" arXiv preprint arXiv:1502.04623 (2015).\n[17] Mansimov, Elman, et al. \"Generating images from captions with attention.\" arXiv preprint arXiv:1511.02793 (2015).\n[18] Li, Yingzhen, and Richard E. Turner. \"R\u00e9nyi divergence variational inference.\" Advances in Neural Information Processing Systems. 2016.\n\u4eca\u56de\u306f\uff0c\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u306e\u81ea\u4f5c\u30e9\u30a4\u30d6\u30e9\u30ea\u300cTars\u300d\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\u4ee5\u524d\u304b\u3089\u50d5\u304c\u4e00\u4eba\u3067\u52dd\u624b\u306b\u5b9f\u88c5\u3057\u3066\u52dd\u624b\u306b\u4f7f\u3063\u3066\u3044\u305f\u3082\u306e\u3067\uff0c\u3053\u308c\u307e\u3067\u975e\u516c\u958b\u3068\u3057\u3066\u3044\u307e\u3057\u305f\u304c\uff0c\u4eca\u56de\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u304f\u306b\u3042\u305f\u3063\u3066\u516c\u958b\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\uff0e\nhttps://github.com/masa-su/Tars\n\u3082\u3057\u9700\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3089\uff0c\u4eca\u5f8c\u3082\u4f55\u56de\u304b\u306b\u5206\u3051\u3066\u7d39\u4ecb\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u203b \u672c\u8a18\u4e8b\u306f\uff0c\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066\u3042\u308b\u7a0b\u5ea6\u7406\u89e3\u3057\u3066\u3044\u308b\u4eba\u3092\u524d\u63d0\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\uff0eVAE\u7b49\u3092\u5168\u304f\u77e5\u3089\u306a\u3044\u4eba\u306f\u8ad6\u6587\u3084\u4ed6\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\uff0e\n\n# \u78ba\u7387\u30e2\u30c7\u30eb\u3068\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\n\u8fd1\u5e74\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\uff08VAE[1]\uff0cGAN[2]\uff0c\u81ea\u5df1\u56de\u5e30\u30e2\u30c7\u30eb[3]\u306a\u3069\uff09\u304c\u6d41\u884c\u3063\u3066\u3044\u307e\u3059\u304c\uff0c\u3053\u3046\u3044\u3063\u305f\u30e2\u30c7\u30eb\uff08\u7279\u306bVAE\uff09\u3067\u306f\uff0c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u78ba\u7387\u5206\u5e03\u3068\u3057\u3066\uff0c\u3042\u308b\u3044\u306f\u30e6\u30cb\u30c3\u30c8\u3092\u78ba\u7387\u5909\u6570\u3068\u3057\u3066\u6271\u3063\u3066\u3044\u307e\u3059\uff0e\n\n\u3053\u3046\u3044\u3063\u305f\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u306e\u5b9f\u88c5\u306f\u305f\u304f\u3055\u3093\u3042\u308b\u306e\u3067\u3059\u304c\uff0c\u554f\u984c\u70b9\u3068\u3057\u3066\uff0c\u30e2\u30c7\u30eb\u3092\u8a18\u8ff0\u3059\u308b\u7d71\u4e00\u7684\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0eGAN\u306e\u3088\u3046\u306a\u78ba\u7387\u30e2\u30c7\u30eb\u3068\u3057\u3066\u610f\u8b58\u3059\u308b\u5fc5\u8981\u306e\u306a\u3044\u30e2\u30c7\u30eb\u306b\u3064\u3044\u3066\u306f\uff0c\u3042\u307e\u308a\u554f\u984c\u306b\u306a\u3089\u306a\u3044\u306e\u3067\u3059\u304c\uff0cVAE\u306f\u3069\u306e\u78ba\u7387\u30e2\u30c7\u30eb\u3092\u4f7f\u7528\u3059\u308b\u304b\u3092\u660e\u78ba\u306b\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u3064\u307e\u308aVAE\u306b\u4ee3\u8868\u3055\u308c\u308b\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u3092\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306b\u306f\n\n1.\u3069\u306e\u3088\u3046\u306a\u5f62\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3046\u304b\n2.\u3069\u306e\u3088\u3046\u306a\u78ba\u7387\u30e2\u30c7\u30eb\u3092\u4f7f\u3046\u304b\n\n\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u3055\u3089\u306b\uff0c\u8fd1\u5e74\u306f\u69d8\u3005\u306a\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u306e\u624b\u6cd5\uff08\u5b66\u7fd2\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3082\u542b\u3080\uff09\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u591a\u5c64\u5316\u3057\u305f\u78ba\u7387\u5206\u5e03[4]\u3084\uff0c\u8907\u96d1\u306a\u5f62\u306e\u30b0\u30e9\u30d5\u30a3\u30ab\u30eb\u30e2\u30c7\u30eb\u7b49\u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u305f\u78ba\u7387\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3059\u308bVAE\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u3055\u3089\u306bVAE\u3092GAN[5]\u3084PixelCNN[6]\u3068\u7d44\u307f\u5408\u308f\u305b\u305f\u308a\u3068\u3044\u3063\u305f\u69d8\u3005\u306a\u30e2\u30c7\u30eb\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\u3088\u3063\u3066\u5b9f\u88c5\u3059\u308b\u969b\u306b\u6c7a\u3081\u308b\u3079\u304d\u3053\u3068\u3068\u3057\u3066\uff0c\n\n3.\u3069\u306e\u3088\u3046\u306a\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u306e\u624b\u6cd5\u3092\u4f7f\u3046\u304b\n\n\u304c\u52a0\u308f\u308a\u307e\u3059\uff0e\u3053\u308c\u307e\u3067\u306f\uff0c\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u660e\u793a\u7684\u306b\u78ba\u7387\u5206\u5e03\u3068\u3057\u3066\u6271\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u305f\u3081\uff0c1~3\u3092\u66f8\u3044\u305f\u5b9f\u88c5\u304c\u3042\u3063\u3066\u3082\u6c4e\u7528\u6027\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\uff0e\u4f8b\u3048\u3070\uff0c2\u306b\u8a72\u5f53\u3059\u308b\u90e8\u5206\u3092\u5225\u306e\u3082\u306e\u306b\u66f8\u304d\u63db\u3048\u3088\u3046\u3068\u601d\u3063\u305f\u3089\uff0c\u6700\u60aa\u30b3\u30fc\u30c9\u5168\u90e8\u3092\u66f8\u304d\u63db\u3048\u308b\u306e\u3068\u540c\u3058\u304f\u3089\u3044\u306e\u52b4\u529b\u304c\u5fc5\u8981\u306b\u306a\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3057\u305f\uff0e\u305d\u306e\u305f\u3081\uff0c\u904e\u53bb\u306e\u5b9f\u88c5\u3092\u4f7f\u3044\u56de\u3059\u306e\u304c\u96e3\u3057\u3044\u3068\u3044\u3046\u72b6\u6cc1\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u306f\uff0c1~3\u3092\u5b8c\u5168\u306b\u72ec\u7acb\u306b\u6271\u3046\u67a0\u7d44\u307f\u304c\u5fc5\u8981\u3067\u3059\uff0e\n\n# \u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u63d0\u6848\n\n\u3053\u306e\u3088\u3046\u306a\u80cc\u666f\u3092\u8e0f\u307e\u3048\u3066\uff0c\u672c\u8a18\u4e8b\u3067\u306f\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u3092\u3088\u308a\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u3075\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u300cTars\u300d\u3092\u3064\u304f\u308a\u307e\u3057\u305f\uff0e\u5b9f\u88c5\u306b\u306fTheano\u3068Lasagne\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\n\n\u672c\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u5927\u304d\u306a\u7279\u5fb4\u306f\uff0c1~3\u3092\u5b8c\u5168\u306b\u72ec\u7acb\u306b\u8a18\u8ff0\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e\u7c21\u5358\u306b\u3044\u3046\u3068\uff0c\u78ba\u7387\u5206\u5e03\u30af\u30e9\u30b9\u3068\u3044\u3046\u3082\u306e\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\uff0c\u305d\u308c\u3067\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u8986\u3046\u3053\u3068\u3067\uff0c\u5916\u90e8\u304b\u3089\u306f\u4e2d\u306e\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u610f\u8b58\u3059\u308b\u5fc5\u8981\u304c\u306a\u304f\u306a\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff0e\u307e\u305f\uff0c\u78ba\u7387\u5206\u5e03\u30af\u30e9\u30b9\u306b\u306f\u30ac\u30a6\u30b9\u5206\u5e03\u3084\u30d9\u30eb\u30cc\u30fc\u30a4\u5206\u5e03\u306a\u3069\u69d8\u3005\u306a\u5b9f\u88c5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\uff0c\u3059\u3079\u3066\u540c\u3058\u4ed5\u69d8\u3067\u8a2d\u8a08\u3055\u308c\u3066\u3044\u308b\u306e\u3067\uff0c\u78ba\u7387\u5206\u5e03\u306e\u5f62\u3092\u610f\u8b58\u305b\u305a\u306b\u540c\u3058\u3088\u3046\u306b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3084\u5c24\u5ea6\u8a08\u7b97\u304c\u3067\u304d\u307e\u3059\uff0e\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u4f8b\u306f\u4e0b\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\uff0e\n\n\u4f3c\u305f\u3088\u3046\u306a\uff08\u3068\u3044\u3046\u304b\u4e38\u304b\u3076\u308a\uff09\u601d\u60f3\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\uff0cEdward\uff08https://github.com/blei-lab/edward \uff09\u304c\u3042\u308a\u307e\u3059\uff0e\n\u3053\u3061\u3089\u306f\u5929\u4e0b\u306eBlei\u7814\u304c\u4f5c\u3063\u305f\u3060\u3051\u306b\u975e\u5e38\u306b\u51fa\u6765\u304c\u3044\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\uff0cTensorflow\u306a\u3069\u3067\u5b9f\u88c5\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u5909\u5206\u63a8\u8ad6\u306a\u3069\u69d8\u3005\u306a\u624b\u6cd5\u3067\u5b66\u7fd2\u3067\u304d\u307e\u3059\uff0e\n\u6b63\u76f4\u3053\u3061\u3089\u3067\u3044\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3044\u3046\u8a71\u3082\u3042\u308b\u306e\u3067\u3059\u304c\uff0c\u672c\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306f\u3088\u308a\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u306b\u7279\u5316\u3057\u305f\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\u5177\u4f53\u7684\u306b\u306f\u672c\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u306f\u4ee5\u4e0b\u306e\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\uff0e\n\n* \u69d8\u3005\u306a\u78ba\u7387\u5206\u5e03\u306e\u5b9f\u88c5\uff08\u30ac\u30a6\u30b9\u5206\u5e03\uff0c\u30ac\u30f3\u30de\u5206\u5e03\uff0c\u30d9\u30fc\u30bf\uff0f\u30c7\u30a3\u30ea\u30af\u30ec\u5206\u5e03\uff0c\u30d9\u30eb\u30cc\u30fc\u30a4\uff0f\u30ab\u30c6\u30b4\u30ea\u5206\u5e03\u306a\u3069\uff09\n    * \u5168\u3066reparameterizaiton trick[1]\u306b\u3088\u3063\u3066\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3067\u304d\u308b\n    * \u30d9\u30eb\u30cc\u30fc\u30a4\uff0f\u30ab\u30c6\u30b4\u30ea\u5206\u5e03\u306fGumbel-softmax[7][8]\uff0c\u30ac\u30f3\u30de\u5206\u5e03\uff0c\u30d9\u30fc\u30bf\uff0f\u30c7\u30a3\u30ea\u30af\u30ec\u5206\u5e03\u306frejection sampling[9]\u3092\u5229\u7528\n* \u69d8\u3005\u306a\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u624b\u6cd5\u306e\u5b9f\u88c5\n    * Autoencoder\n    * VAE\n        * Conditional VAE [10][11]\n        * Importance weighted autoencoder [12]\n        * Joint multimodal VAE [13]\n    * VAE-GAN\uff0cconditional VAE-GAN [5]\n    * GAN\uff0cConditional GAN [14]\n    * VAE-RNN\n        * Variational RNN [15]\n        * DRAW [16]\uff0cConvolutional DRAW [17]\n* \uff08\u4e0a\u3068\u95a2\u9023\u3057\u3066\uff09\u69d8\u3005\u306a\u4e0b\u754c\u306e\u5b9f\u88c5\n    * ELBO\n    * Importance sampling lower bound [12]\n    * Variational Renyi bound [18]\n    \n\u4e0a\u8a18\u306e\u3046\u3061\u3044\u304f\u3064\u304b\u306e\u5b9f\u88c5\u306f\u73fe\u5728\u975e\u516c\u958b\u3068\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u4eca\u5f8c\u968f\u6642\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u3066\u3044\u304f\u4e88\u5b9a\u3067\u3059\uff0e\n\n# \u5b9f\u88c5\u4f8b\n\u672c\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067VAE\u3092\u5b9f\u88c5\u3057\u305f\u3044\u5834\u5408\uff0c\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u975e\u5e38\u306b\u7c21\u5358\u306b\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff08\u30a4\u30f3\u30dd\u30fc\u30c8\u7b49\u306f\u7701\u7565\uff09\n\n```py:train.py\nx = InputLayer((None,n_x))\nq_0 = DenseLayer(x,num_units=512,nonlinearity=activation)\nq_1 = DenseLayer(q_0,num_units=512,nonlinearity=activation)\nq_mean = DenseLayer(q_1,num_units=n_z,nonlinearity=linear)\nq_var = DenseLayer(q_1,num_units=n_z,nonlinearity=softplus)\nq = Gaussian(q_mean,q_var,given=[x]) # q(z|x)\n\nz = InputLayer((None,n_z))\np_0 = DenseLayer(z,num_units=512,nonlinearity=activation)\np_1 = DenseLayer(p_0,num_units=512,nonlinearity=activation)\np_mean = DenseLayer(p_1,num_units=n_x,nonlinearity=sigmoid)\np = Bernoulli(p_mean, given=[z]) # p(x|z)\n\nmodel = VAE(q, p, n_batch=n_batch, optimizer=adam) # \u30b3\u30f3\u30d1\u30a4\u30eb\n\nlower_bound_train = model.train([train_x]) # \u8a13\u7df4\n```\n\n$q$\u304c\u8fd1\u4f3c\u5206\u5e03\uff08\u30a8\u30f3\u30b3\u30fc\u30c0\uff09\uff0c$p$\u304c\u751f\u6210\u5206\u5e03\uff08\u30c7\u30b3\u30fc\u30c0\uff09\u3067\u3059\uff0eVAE\u3067\u306f\u305d\u308c\u305e\u308c\u306e\u5206\u5e03\u3092\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u66f8\u304d\u307e\u3059\u304c\uff0c\u3053\u306e\u90e8\u5206\u306f\u81ea\u7531\u306b\u66f8\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\uff0c\u69d8\u3005\u306a\u69cb\u9020\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u78ba\u7387\u5206\u5e03\u3092\u8a2d\u8a08\u3067\u304d\u307e\u3059\uff0eTars\u3067\u306f\uff0c\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u8a2d\u8a08\u3057\u305f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u78ba\u7387\u5206\u5e03\u30af\u30e9\u30b9\u306b\u6e21\u3057\u307e\u3059\uff0e\u4e0a\u306e\u5b9f\u88c5\u3067\u306f\uff0cGaussian\u3084Bernoulli\u3068\u3044\u3063\u305f\u78ba\u7387\u5206\u5e03\u30af\u30e9\u30b9\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u304c\uff0c\u305d\u308c\u305e\u308c\u30ac\u30a6\u30b9\u5206\u5e03\u3068\u30d9\u30eb\u30cc\u30fc\u30a4\u5206\u5e03\u306b\u8a2d\u5b9a\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\n\n\u3053\u306e\u78ba\u7387\u5206\u5e03\u30af\u30e9\u30b9\u3092\u5909\u66f4\u3059\u308c\u3070\uff0c\u540c\u3058\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u9020\u3067\u3082\u5225\u306e\u78ba\u7387\u5206\u5e03\u3092\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u4f8b\u3048\u3070\uff0c\u30a8\u30f3\u30b3\u30fc\u30c0\u3092\u30ac\u30f3\u30de\u5206\u5e03\u306b\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\n\n```py:gamma_q.py\nx = InputLayer((None,n_x))\nq_0 = DenseLayer(x,num_units=512,nonlinearity=activation)\nq_1 = DenseLayer(q_0,num_units=512,nonlinearity=activation)\nq_alpha = DenseLayer(q_1,num_units=n_z,nonlinearity= softplus)\nq_beta = DenseLayer(q_1,num_units=n_z,nonlinearity=softplus)\nq = Gamma(q_alpha,q_beta,given=[x]) #q(z|x)\n```\n\u3068\u3059\u308b\u3060\u3051\u3067\u30ac\u30f3\u30de\u5206\u5e03\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\u3042\u3068\u306f\uff0c$q$\u3068$p$\u3092VAE\u30af\u30e9\u30b9\u306b\u6e21\u3059\u3060\u3051\u3067VAE\u306e\u8a13\u7df4\u3084\u30c6\u30b9\u30c8\u304c\u3067\u304d\u307e\u3059\uff0e\u4ed6\u306b\u3082GAN\u30af\u30e9\u30b9\u306a\u3069\u3082\u3042\u308b\u306e\u3067\uff0cGAN\u3092\u5b66\u7fd2\u3059\u308b\u5834\u5408\u306f\uff0c\u305d\u308c\u306b\u78ba\u7387\u5206\u5e03\u3084\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u6e21\u305b\u3070\u5b66\u7fd2\u3067\u304d\u307e\u3059\uff0e\n\n\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u5b9a\u7fa9\u3057\u305f$q$\u3068$p$\u306f\uff0cVAE\u30af\u30e9\u30b9\u306e\u4e2d\u3067\u306f\u78ba\u7387\u5206\u5e03\u3068\u3057\u3066\u6271\u308f\u308c\u307e\u3059\uff0e\u3064\u307e\u308a\uff0c\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u610f\u8b58\u305b\u305a\u306b\uff0c\u6b21\u306e\u3088\u3046\u306b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3084\u5c24\u5ea6\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff08Theano\u30b7\u30f3\u30dc\u30eb\u3068Numpy\u5f62\u5f0f\u306e\u4e21\u65b9\u3067\u8a08\u7b97\u3067\u304d\u307e\u3059\uff09\uff0e\n\n```py:sampling_likelihood_example.py\n\n# \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\nsamples = q.sample_given_x(x) # Theano\nsamples = q.np_sample_given_x(x) # bumpy\n\n# \u5bfe\u6570\u5c24\u5ea6\u8a08\u7b97\nlog_likelihood = q.log_likelihood_given_x([x, samples]) # Theano\nlog_likelihood = q.log_likelihood_given_x([x, samples]) # numpy\n```\n\n\u3053\u308c\u3089\u3092\u4f7f\u3046\u3068\uff0cVAE\u306e\u5b9f\u88c5\u3082\u6bd4\u8f03\u7684\u7c21\u5358\u306b\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\uff08VAE\u30af\u30e9\u30b9\u306e\u4e0b\u754c\u306e\u8a08\u7b97\u90e8\u5206\u306e\u307f\u629c\u7c8b\uff0c\u7c21\u5358\u306e\u305f\u3081\u4e00\u90e8\u66f8\u304d\u63db\u3048\uff09\uff0e\n\n```py:vae.py\nkl_divergence = analytical_kl(self.q, self.prior\n                              given=[x, None],\n                              deterministic=deterministic)        \n[_, z] = self.q.sample_given_x(x, repeat=l,\n                          deterministic=deterministic)\nlog_likelihood =\\\n\tself.p.log_likelihood_given_x([z, x],\n                                  deterministic=deterministic)\t\n\nloss = -T.mean(log_likelihood - kl_divergence)\n\nq_params = self.q.get_params()\np_params = self.p.get_params()\nparams = q_params + p_params\n```\n\n\n\u3053\u306e\u5b9f\u88c5\u306f\uff0c\u78ba\u7387\u5206\u5e03\u3084\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u4f9d\u5b58\u3057\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\u305d\u306e\u305f\u3081\uff0c\u78ba\u7387\u5206\u5e03\u3084\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u5f62\u304c\u5909\u66f4\u3055\u308c\u3066\u3082\u540c\u3058\u5b9f\u88c5\u3092\u4f7f\u3044\u56de\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\n\u305d\u306e\u4ed6\u8a73\u3057\u3044\u5b9f\u88c5\u65b9\u6cd5\u306f\uff0cTars\u306b\u3042\u308bexample\u3084\u4eca\u5f8c\u66f4\u65b0\u3059\u308b\uff08\u304b\u3082\u3057\u308c\u306a\u3044\uff09\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n# \u4eca\u5f8c\u306e\u65b9\u91dd\n\u4eca\u56de\u306f\uff0c\u81ea\u4f5c\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb\u30e9\u30a4\u30d6\u30e9\u30ea\u300cTars\u300d\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\uff0e\u7279\u306b\u516c\u958b\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u305a\u306b\u5b9f\u88c5\u3057\u3066\u3044\u305f\u306e\u3067\uff0c\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u306f\u4e0d\u5b8c\u5168\u306a\u307e\u307e\u3067\u3059\uff0e\u4eca\u5f8c\u306e\u65b9\u91dd\u3068\u3057\u3066\u306f\n\n* \u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u306e\u6574\u5099\n* \u30e2\u30c7\u30eb\u306e\u8ffd\u52a0\n* Tensorflow\u3078\u306e\u79fb\u884c\n\n\u7b49\u3092\u8003\u3048\u3066\u3044\u307e\u3059\uff0e\u4f55\u304b\u554f\u984c\u3084\u9593\u9055\u3044\u304c\u3042\u308a\u307e\u3057\u305f\u3089\uff0c\u30b3\u30e1\u30f3\u30c8\u7b49\u3067\u6307\u6458\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\uff0e\n\n# \u53c2\u8003\u6587\u732e\n[1] Kingma, Diederik P., and Max Welling. \"Auto-encoding variational bayes.\" arXiv preprint arXiv:1312.6114 (2013).\n[2] Goodfellow, Ian, et al. \"Generative adversarial nets.\" Advances in Neural Information Processing Systems. 2014.\n[3] van den Oord, Aaron, Nal Kalchbrenner, and Koray Kavukcuoglu. \"Pixel Recurrent Neural Networks.\" arXiv preprint arXiv:1601.06759 (2016)\n[4] S\u00f8nderby, Casper Kaae, et al. \"Ladder variational autoencoders.\" Advances in Neural Information Processing Systems. 2016.\n[5] Larsen, Anders Boesen Lindbo, S\u00f8ren Kaae S\u00f8nderby, and Ole Winther. \"Autoencoding beyond pixels using a learned similarity metric.\" arXiv preprint arXiv:1512.09300 (2015).\n[6] Gulrajani, Ishaan, et al. \"PixelVAE: A Latent Variable Model for Natural Images.\" arXiv preprint arXiv:1611.05013 (2016).\n[7] Jang, Eric, Shixiang Gu, and Ben Poole. \"Categorical Reparameterization with Gumbel-Softmax.\" arXiv preprint arXiv:1611.01144 (2016).\n[8] Maddison, Chris J., Andriy Mnih, and Yee Whye Teh. \"The Concrete Distribution: A Continuous Relaxation of Discrete Random Variables.\" arXiv preprint arXiv:1611.00712 (2016).\n[9] Naesseth, Christian A., et al. \"Rejection Sampling Variational Inference.\" arXiv preprint arXiv:1610.05683 (2016).\n[10] Kingma, Diederik P., et al. \u201cSemi-supervised learning with deep generative models.\u201d Advances in Neural Information Processing Systems. 2014.\n[11] Sohn, Kihyuk, Honglak Lee, and Xinchen Yan. \u201cLearning Structured Output Representation using Deep Conditional Generative Models.\u201d Advances in Neural Information Processing Systems. 2015.\n[12] Burda, Yuri, Roger Grosse, and Ruslan Salakhutdinov. \"Importance weighted autoencoders.\" arXiv preprint arXiv:1509.00519 (2015).\n[13] Suzuki, Masahiro, Kotaro Nakayama, and Yutaka Matsuo. \"Joint Multimodal Learning with Deep Generative Models.\" arXiv preprint arXiv:1611.01891 (2016).\n[14] Mirza, Mehdi, and Simon Osindero. \"Conditional generative adversarial nets.\" arXiv preprint arXiv:1411.1784 (2014).\n[15] Chung, Junyoung, et al. \"A recurrent latent variable model for sequential data.\" Advances in neural information processing systems. 2015.\n[16] Gregor, Karol, et al. \"DRAW: A recurrent neural network for image generation.\" arXiv preprint arXiv:1502.04623 (2015).\n[17] Mansimov, Elman, et al. \"Generating images from captions with attention.\" arXiv preprint arXiv:1511.02793 (2015).\n[18] Li, Yingzhen, and Richard E. Turner. \"R\u00e9nyi divergence variational inference.\" Advances in Neural Information Processing Systems. 2016.\n", "tags": ["\u6df1\u5c64\u5b66\u7fd2", "\u6df1\u5c64\u751f\u6210\u30e2\u30c7\u30eb", "\u30e9\u30a4\u30d6\u30e9\u30ea\u7d39\u4ecb"]}