{"context": " More than 1 year has passed since last update.\u305d\u306e2('$GPRMC'\u7de8)\u304b\u304d\u307e\u3057\u305f\u3002\n\n\u624b\u9806\n\nNMEA\u30ed\u30b0\u53d6\u5f97\n\n\n1. GPS\u30ed\u30ac\u30fc\u304b\u3089\u3002\n2. GPS\u30b8\u30e5\u30fc\u30eb\u3092\u3001\u30d1\u30bd\u30b3\u30f3\u306b\u30b7\u30ea\u30a2\u30eb\u63a5\u7d9a\u3001TeraTerm\u306a\u3069\u3067\u3001\u30c6\u30ad\u30b9\u30c8\u4fdd\u5b58\u3002\n3. 'GPS\u30ed\u30ac\u30fc\u3000\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3000\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9' \u306a\u3069\u3067\u3001\u30b0\u30fc\u3050\u308b\u5148\u751f\u306b\u304d\u3044\u3066\u307f\u308b\n\n\nR\u306b\u98df\u308f\u305b\u308b\u3002\u4e0b\u306egeo_position_from_nmealog\u3092\u4f7f\u7528\u3002\u6700\u5f8c\u306b\u6539\u884c\u304c\u306a\u3044\u3068\u6012\u3089\u308c\u305f\u308a\u3059\u308b\u3002\u3046\u307e\u304f\u5bfe\u5fdc\u3059\u308b\u3002\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u3001$GPGGA\u3092\u30d5\u30a3\u30eb\u30bf\u3057\u3066\u3001lat\u3068lng\u3092\u3046\u307e\u304f\u5909\u63db\u3057\u3066\u8fd4\u3057\u3066\u3044\u308b\u3002\n\n\n\u4f8b: > rt = geo_position_from_nmealog(\"C:/gps/gps1234.log\")\n\n\n\n\n3.\u3000\u8efd\u304f plot\u3057\u3066\u307f\u308b\n\u3000* \u5b9f\u884c\u4f8b1: > plot(rt$Latitude, rt$Longitude)\n\u3000* \u5b9f\u884c\u4f8b2: > plot(rt$Longitude-rt$Longitude[1], rt$Latitude-rt$Latitude[1]) // \u6700\u521d\u306e\u4f4d\u7f6e\u304b\u3089\u306e\u76f8\u5bfe\u5ea7\u6a19\n\n4. library(rgl)\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3001plot3d\u3057\u3066\u307f\u308b\u3002(\u30de\u30a6\u30b9\u3067\u3050\u308a\u3050\u308a\u3067\u304d\u308b)\n\u3000* \u5b9f\u884c\u4f8b3: > plot3d(rt$Longitude-rt$Longitude[1], rt$Latitude-rt$Latitude[1], rt$Altitude)\n\n\n\ngeo_position_from_nmealog\ngeo_position_from_nmealog <- function(log_filename, is0000 = TRUE) {\n     # \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u3080\n     lines = readLines(log_filename)\n     # \u30d5\u30a3\u30eb\u30bf: $GPGGA\u306e\u30e9\u30a4\u30f3\u3092\u53d6\u5f97\n     rexp_str = ifelse(is0000 == TRUE, \"^\\\\$GPGGA,.*0000\\\\*[0-9A-F][0-9A-F]$\", \"^\\\\$GPGGA,.*\\\\*[0-9A-F][0-9A-F]$\")\n     lines_GPGGA = lines[grep(rexp_str, lines)]\n     # table\u3078\n     tbl_GPGGA = read.table( text =lines_GPGGA, sep=\",\", header=FALSE)\n     # \u30ab\u30e9\u30e0\u306b\u540d\u524d\u3092\u3064\u3051\u308b\n     colnames(tbl_GPGGA) <- (c(\"SentenceId\",\"TimeUTC\", \"Latitude\", \"LatitudeHemisphere\", \"Longitude\", \"LongitudeHemisphere\", \"PositionFixQuality\", \"NumOfSatelites\", \"HDOP\", \"Altitude\", \"AltitudeUnit\", \"GeoidalHeight\",\"GeoidalHeightUnit\", \"TimeSeinceLastDGPSUpdate\", \"_CheckSum\"))\n     # \u30d5\u30a3\u30eb\u30bf: \u53d6\u5f97\u3067\u304d\u305f\u30c7\u30fc\u30bf\u306e\u307f\n     tbl_GPGGA =tbl_GPGGA [!(tbl_GPGGA $PositionFixQuality == 0), ]\n\n     # \u7def\u5ea6Latitude\u3068\u7d4c\u5ea6Longitude\u3092\u5909\u63db\n     rt <- data.frame(\n          Latitude  = ifelse(tbl_GPGGA$LatitudeHemisphere  == \"N\",  1, -1) * (as.integer(tbl_GPGGA$Latitude /100) +  (tbl_GPGGA$Latitude /100 - as.integer(tbl_GPGGA$Latitude /100)) * 100/60),\n          Longitude = ifelse(tbl_GPGGA$LongitudeHemisphere == \"E\",  1, -1) * (as.integer(tbl_GPGGA$Longitude/100) +  (tbl_GPGGA$Longitude/100 - as.integer(tbl_GPGGA$Longitude/100)) * 100/60), \n          Altitude = tbl_GPGGA$Altitude\n     )\n     return(rt)\n}\n\n\n\nGoogle\u30de\u30c3\u30d7\u306b\u6295\u5f71 (RgoogleMaps\u3092\u4f7f\u7528)\n\ntest.R\ninstall.packages(\"RgoogleMaps\") # \u5165\u308c\u3066\u306a\u3051\u308c\u3070\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nlibrary(RgoogleMaps)\n\nsetwd(\"C:/gps/\") #\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u6307\u5b9a\nrt = geo_position_from_nmealog(\"gps1234.log\")\n\nlat <- as.vector(rt[,1])\nlon <- as.vector(rt[,2])\n\n# \u30bb\u30f3\u30bf\u30fc\u4f4d\u7f6e\u3002\u3000max\u3068min\u306e\u9593\ncenter = c ((max(lat)+min(lat))/2, (max(lon)+min(lon))/2)\n# zoom\u5024\u8a08\u7b97: \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304b\u3089... \u81ea\u5206\u3067\u3001zoom <- 13\u3068\u304b\u3067\u3082\u3001\u304a\uff4b\nzoom <- min(MaxZoom(range(lat), range(lon)))\n\n# \u30b0\u30fc\u3050\u308b\u5148\u751f\u304b\u3089\u5730\u56f3\u753b\u50cf\u3092\u9802\u6234\u3059\u308b\u3002 \u65e5\u672c\u8a9e\u3067\u304ak\nMyMap <- GetMap(center=center, zoom=zoom, size=c(640, 640), destfile = \"./dest.png\")\n\n#\u8272\u6307\u5b9a\u3002\ncol <- rep(3, length(lat))\n\n# \u30d7\u30ed\u30c3\u30c8\ntmp <- PlotOnStaticMap(\n    MyMap,\n    lat = lat,\n    lon = lon,\n    destfile = \"./dest.png\",\n    cex=1.0,\n    pch=20,\n    col=col,\n    add=FALSE,\n    NEWMAP = FALSE\n);\n\n# PNG \u4fdd\u5b58\ndev.print(bmp, width = 640,height=640, file = \"./output.png\")\n\n\n\n\n\u4f8b\n\u3053\u3061\u3089\u3092\u7121\u65ad\u3067\u304a\u501f\u308a\u3057\u307e\u3057\u305f\u3002\n> rt = geo_position_from_nmealog(\"http://www.oiccam.com/reno/gps/tahoe/nmea/2005-09-25-north-tahoe_nmea.txt\", is0000=FALSE)\n\n\n[\u305d\u306e2('$GPRMC'\u7de8)](http://qiita.com/mt08/items/9164fa3dedb984754cf6)\u304b\u304d\u307e\u3057\u305f\u3002\n\n## \u624b\u9806\n1. NMEA\u30ed\u30b0\u53d6\u5f97\n * 1. GPS\u30ed\u30ac\u30fc\u304b\u3089\u3002\n * 2. GPS\u30b8\u30e5\u30fc\u30eb\u3092\u3001\u30d1\u30bd\u30b3\u30f3\u306b\u30b7\u30ea\u30a2\u30eb\u63a5\u7d9a\u3001TeraTerm\u306a\u3069\u3067\u3001\u30c6\u30ad\u30b9\u30c8\u4fdd\u5b58\u3002\n * 3. 'GPS\u30ed\u30ac\u30fc\u3000\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3000\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9' \u306a\u3069\u3067\u3001\u30b0\u30fc\u3050\u308b\u5148\u751f\u306b\u304d\u3044\u3066\u307f\u308b\n2. R\u306b\u98df\u308f\u305b\u308b\u3002\u4e0b\u306e`geo_position_from_nmealog`\u3092\u4f7f\u7528\u3002\u6700\u5f8c\u306b\u6539\u884c\u304c\u306a\u3044\u3068\u6012\u3089\u308c\u305f\u308a\u3059\u308b\u3002\u3046\u307e\u304f\u5bfe\u5fdc\u3059\u308b\u3002\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u3001$GPGGA\u3092\u30d5\u30a3\u30eb\u30bf\u3057\u3066\u3001lat\u3068lng\u3092\u3046\u307e\u304f\u5909\u63db\u3057\u3066\u8fd4\u3057\u3066\u3044\u308b\u3002\n * \u4f8b: `> rt = geo_position_from_nmealog(\"C:/gps/gps1234.log\")`  \n\n3.\u3000\u8efd\u304f plot\u3057\u3066\u307f\u308b\n\u3000* \u5b9f\u884c\u4f8b1: `> plot(rt$Latitude, rt$Longitude)`\n\u3000* \u5b9f\u884c\u4f8b2: `> plot(rt$Longitude-rt$Longitude[1], rt$Latitude-rt$Latitude[1])` // \u6700\u521d\u306e\u4f4d\u7f6e\u304b\u3089\u306e\u76f8\u5bfe\u5ea7\u6a19\n ![plot.png](https://qiita-image-store.s3.amazonaws.com/0/75594/34be6f10-381f-bf5f-b1d2-a32f112511e3.png)\n4. `library(rgl)`\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u3001plot3d\u3057\u3066\u307f\u308b\u3002(\u30de\u30a6\u30b9\u3067\u3050\u308a\u3050\u308a\u3067\u304d\u308b)\n\u3000* \u5b9f\u884c\u4f8b3: `> plot3d(rt$Longitude-rt$Longitude[1], rt$Latitude-rt$Latitude[1], rt$Altitude)`\n ![plot3d.png](https://qiita-image-store.s3.amazonaws.com/0/75594/a088c9a3-52b6-fd90-46d1-2d1e779cca99.png)\n\n***\n```r:geo_position_from_nmealog\ngeo_position_from_nmealog <- function(log_filename, is0000 = TRUE) {\n     # \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u3080\n     lines = readLines(log_filename)\n     # \u30d5\u30a3\u30eb\u30bf: $GPGGA\u306e\u30e9\u30a4\u30f3\u3092\u53d6\u5f97\n\t rexp_str = ifelse(is0000 == TRUE, \"^\\\\$GPGGA,.*0000\\\\*[0-9A-F][0-9A-F]$\", \"^\\\\$GPGGA,.*\\\\*[0-9A-F][0-9A-F]$\")\n     lines_GPGGA = lines[grep(rexp_str, lines)]\n     # table\u3078\n     tbl_GPGGA = read.table( text =lines_GPGGA, sep=\",\", header=FALSE)\n     # \u30ab\u30e9\u30e0\u306b\u540d\u524d\u3092\u3064\u3051\u308b\n     colnames(tbl_GPGGA) <- (c(\"SentenceId\",\"TimeUTC\", \"Latitude\", \"LatitudeHemisphere\", \"Longitude\", \"LongitudeHemisphere\", \"PositionFixQuality\", \"NumOfSatelites\", \"HDOP\", \"Altitude\", \"AltitudeUnit\", \"GeoidalHeight\",\"GeoidalHeightUnit\", \"TimeSeinceLastDGPSUpdate\", \"_CheckSum\"))\n     # \u30d5\u30a3\u30eb\u30bf: \u53d6\u5f97\u3067\u304d\u305f\u30c7\u30fc\u30bf\u306e\u307f\n     tbl_GPGGA =tbl_GPGGA [!(tbl_GPGGA $PositionFixQuality == 0), ]\n\n     # \u7def\u5ea6Latitude\u3068\u7d4c\u5ea6Longitude\u3092\u5909\u63db\n     rt <- data.frame(\n          Latitude  = ifelse(tbl_GPGGA$LatitudeHemisphere  == \"N\",  1, -1) * (as.integer(tbl_GPGGA$Latitude /100) +  (tbl_GPGGA$Latitude /100 - as.integer(tbl_GPGGA$Latitude /100)) * 100/60),\n          Longitude = ifelse(tbl_GPGGA$LongitudeHemisphere == \"E\",  1, -1) * (as.integer(tbl_GPGGA$Longitude/100) +  (tbl_GPGGA$Longitude/100 - as.integer(tbl_GPGGA$Longitude/100)) * 100/60), \n          Altitude = tbl_GPGGA$Altitude\n     )\n     return(rt)\n}\n```\n\n\n## Google\u30de\u30c3\u30d7\u306b\u6295\u5f71 (`RgoogleMaps`\u3092\u4f7f\u7528)\n\n```r:test.R\ninstall.packages(\"RgoogleMaps\") # \u5165\u308c\u3066\u306a\u3051\u308c\u3070\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nlibrary(RgoogleMaps)\n\nsetwd(\"C:/gps/\") #\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u6307\u5b9a\nrt = geo_position_from_nmealog(\"gps1234.log\")\n\nlat <- as.vector(rt[,1])\nlon <- as.vector(rt[,2])\n\n# \u30bb\u30f3\u30bf\u30fc\u4f4d\u7f6e\u3002\u3000max\u3068min\u306e\u9593\ncenter = c ((max(lat)+min(lat))/2, (max(lon)+min(lon))/2)\n# zoom\u5024\u8a08\u7b97: \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304b\u3089... \u81ea\u5206\u3067\u3001zoom <- 13\u3068\u304b\u3067\u3082\u3001\u304a\uff4b\nzoom <- min(MaxZoom(range(lat), range(lon)))\n\n# \u30b0\u30fc\u3050\u308b\u5148\u751f\u304b\u3089\u5730\u56f3\u753b\u50cf\u3092\u9802\u6234\u3059\u308b\u3002 \u65e5\u672c\u8a9e\u3067\u304ak\nMyMap <- GetMap(center=center, zoom=zoom, size=c(640, 640), destfile = \"./dest.png\")\n\n#\u8272\u6307\u5b9a\u3002\ncol <- rep(3, length(lat))\n\n# \u30d7\u30ed\u30c3\u30c8\ntmp <- PlotOnStaticMap(\n\tMyMap,\n\tlat = lat,\n\tlon = lon,\n\tdestfile = \"./dest.png\",\n\tcex=1.0,\n\tpch=20,\n\tcol=col,\n\tadd=FALSE,\n\tNEWMAP = FALSE\n);\n\n# PNG \u4fdd\u5b58\ndev.print(bmp, width = 640,height=640, file = \"./output.png\")\n\n```\n## \u4f8b\n[\u3053\u3061\u3089](http://www.oiccam.com/reno/gps/tahoe/nmea/2005-09-25-north-tahoe_nmea.txt)\u3092\u7121\u65ad\u3067\u304a\u501f\u308a\u3057\u307e\u3057\u305f\u3002\n`> rt = geo_position_from_nmealog(\"http://www.oiccam.com/reno/gps/tahoe/nmea/2005-09-25-north-tahoe_nmea.txt\", is0000=FALSE)\n`\n![output.png](https://qiita-image-store.s3.amazonaws.com/0/75594/0ed649e9-89b5-95fe-5944-a6d28cf7e239.png)\n", "tags": ["R", "GPS"]}